EMERGENCY Released ECX*3*154 SEQ #142
Extracted from mail message
**KIDS**:ECX*3.0*154^

**INSTALL NAME**
ECX*3.0*154
"BLD",9491,0)
ECX*3.0*154^DSS EXTRACTS^0^3151008^y
"BLD",9491,4,0)
^9.64PA^727.813^17
"BLD",9491,4,727.802,0)
727.802
"BLD",9491,4,727.802,2,0)
^9.641^727.802^1
"BLD",9491,4,727.802,2,727.802,0)
ADMISSION EXTRACT  (File-top level)
"BLD",9491,4,727.802,2,727.802,1,0)
^9.6411^57^5
"BLD",9491,4,727.802,2,727.802,1,1,0)
YEAR MONTH
"BLD",9491,4,727.802,2,727.802,1,18,0)
ELIGIBILITY
"BLD",9491,4,727.802,2,727.802,1,28,0)
TREATING SPECIALTY
"BLD",9491,4,727.802,2,727.802,1,57,0)
OBSERVATION PATIENT INDICATOR
"BLD",9491,4,727.802,2,727.802,1,93,0)
PRIMARY ICD-10 CODE
"BLD",9491,4,727.802,222)
y^y^p^^^^n^^n
"BLD",9491,4,727.802,224)

"BLD",9491,4,727.808,0)
727.808
"BLD",9491,4,727.808,2,0)
^9.641^727.808^1
"BLD",9491,4,727.808,2,727.808,0)
PHYSICAL MOVEMENT EXTRACT  (File-top level)
"BLD",9491,4,727.808,2,727.808,1,0)
^9.6411^27^3
"BLD",9491,4,727.808,2,727.808,1,13,0)
TYPE
"BLD",9491,4,727.808,2,727.808,1,26,0)
DOM,PRRTP AND SAARTP INDICATOR
"BLD",9491,4,727.808,2,727.808,1,27,0)
OBSERVATION PATIENT INDICATOR
"BLD",9491,4,727.808,222)
y^y^p^^^^n^^n
"BLD",9491,4,727.808,224)

"BLD",9491,4,727.809,0)
727.809
"BLD",9491,4,727.809,2,0)
^9.641^727.809^1
"BLD",9491,4,727.809,2,727.809,0)
UNIT DOSE LOCAL EXTRACT  (File-top level)
"BLD",9491,4,727.809,2,727.809,1,0)
^9.6411^83^13
"BLD",9491,4,727.809,2,727.809,1,4,0)
PATIENT NO. - DFN
"BLD",9491,4,727.809,2,727.809,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",9491,4,727.809,2,727.809,1,11,0)
WARD
"BLD",9491,4,727.809,2,727.809,1,12,0)
PROVIDER
"BLD",9491,4,727.809,2,727.809,1,15,0)
TREATING SPECIALTY
"BLD",9491,4,727.809,2,727.809,1,25,0)
DOM,PRRTP AND SAARTP INDICATOR
"BLD",9491,4,727.809,2,727.809,1,26,0)
OBSERVATION PATIENT INDICATOR
"BLD",9491,4,727.809,2,727.809,1,44,0)
MST STATUS
"BLD",9491,4,727.809,2,727.809,1,68,0)
ENROLLMENT PRIORITY
"BLD",9491,4,727.809,2,727.809,1,69,0)
USER ENROLLEE
"BLD",9491,4,727.809,2,727.809,1,77,0)
OEF/OIF
"BLD",9491,4,727.809,2,727.809,1,82,0)
COUNTRY CODE
"BLD",9491,4,727.809,2,727.809,1,83,0)
PATCAT
"BLD",9491,4,727.809,222)
y^y^p^^^^n^^n
"BLD",9491,4,727.809,224)

"BLD",9491,4,727.81,0)
727.81
"BLD",9491,4,727.81,2,0)
^9.641^727.81^1
"BLD",9491,4,727.81,2,727.81,0)
PRESCRIPTION EXTRACT  (File-top level)
"BLD",9491,4,727.81,2,727.81,1,0)
^9.6411^98^13
"BLD",9491,4,727.81,2,727.81,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",9491,4,727.81,2,727.81,1,9,0)
DIVISION
"BLD",9491,4,727.81,2,727.81,1,11,0)
VA DRUG CLASSIFICATION
"BLD",9491,4,727.81,2,727.81,1,14,0)
NEW
"BLD",9491,4,727.81,2,727.81,1,17,0)
COST
"BLD",9491,4,727.81,2,727.81,1,33,0)
RACE
"BLD",9491,4,727.81,2,727.81,1,54,0)
DOM,PRRTP AND SAARTP INDICATOR
"BLD",9491,4,727.81,2,727.81,1,56,0)
ENROLLMENT CATEGORY
"BLD",9491,4,727.81,2,727.81,1,61,0)
OBSERVATION PATIENT INDICATOR
"BLD",9491,4,727.81,2,727.81,1,70,0)
HEAD & NECK CANCER INDICATOR
"BLD",9491,4,727.81,2,727.81,1,75,0)
USER ENROLLEE
"BLD",9491,4,727.81,2,727.81,1,98,0)
PATCAT
"BLD",9491,4,727.81,2,727.81,1,105,0)
REMARKS
"BLD",9491,4,727.81,222)
y^y^p^^^^n^^n
"BLD",9491,4,727.81,224)

"BLD",9491,4,727.811,0)
727.811
"BLD",9491,4,727.811,2,0)
^9.641^727.811^1
"BLD",9491,4,727.811,2,727.811,0)
SURGERY EXTRACT  (File-top level)
"BLD",9491,4,727.811,2,727.811,1,0)
^9.6411^76^24
"BLD",9491,4,727.811,2,727.811,1,4,0)
PATIENT NO. - DFN
"BLD",9491,4,727.811,2,727.811,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",9491,4,727.811,2,727.811,1,20,0)
OPERATION TIME
"BLD",9491,4,727.811,2,727.811,1,27,0)
CANCELLED
"BLD",9491,4,727.811,2,727.811,1,34,0)
PRIMARY CARE TEAM
"BLD",9491,4,727.811,2,727.811,1,47,0)
CPT CODE QUANTITY MODIFIERS
"BLD",9491,4,727.811,2,727.811,1,48,0)
DOM,PRRTP AND SAARTP INDICATOR
"BLD",9491,4,727.811,2,727.811,1,49,0)
ENROLLMENT CATEGORY
"BLD",9491,4,727.811,2,727.811,1,54,0)
OBSERVATION PATIENT INDICATOR
"BLD",9491,4,727.811,2,727.811,1,64,0)
USER ENROLLEE
"BLD",9491,4,727.811,2,727.811,1,73,0)
SURGEON PERSON CLASS
"BLD",9491,4,727.811,2,727.811,1,74,0)
ATTENDING SURGEON PC
"BLD",9491,4,727.811,2,727.811,1,75,0)
ANESTHESIA SUPERVISOR PC
"BLD",9491,4,727.811,2,727.811,1,76,0)
PRINCIPAL ANESTHETIST PC
"BLD",9491,4,727.811,2,727.811,1,80,0)
OEF/OIF
"BLD",9491,4,727.811,2,727.811,1,107,0)
FIRST ASST
"BLD",9491,4,727.811,2,727.811,1,110,0)
SECOND ASST
"BLD",9491,4,727.811,2,727.811,1,120,0)
PATCAT
"BLD",9491,4,727.811,2,727.811,1,126,0)
PRINCIPLE POSTOP ICD-10 CODE
"BLD",9491,4,727.811,2,727.811,1,127,0)
OTHER POSTOP ICD-10 CODE #1
"BLD",9491,4,727.811,2,727.811,1,128,0)
OTHER POSTOP ICD-10 CODE #2
"BLD",9491,4,727.811,2,727.811,1,129,0)
OTHER POSTOP ICD-10 CODE #3
"BLD",9491,4,727.811,2,727.811,1,130,0)
OTHER POSTOP ICD-10 CODE #4
"BLD",9491,4,727.811,2,727.811,1,131,0)
OTHER POSTOP ICD-10 CODE #5
"BLD",9491,4,727.811,222)
y^y^p^^^^n^^n
"BLD",9491,4,727.811,224)

"BLD",9491,4,727.813,0)
727.813
"BLD",9491,4,727.813,2,0)
^9.641^727.813^1
"BLD",9491,4,727.813,2,727.813,0)
LABORATORY EXTRACT  (File-top level)
"BLD",9491,4,727.813,2,727.813,1,0)
^9.6411^47^8
"BLD",9491,4,727.813,2,727.813,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",9491,4,727.813,2,727.813,1,8,0)
DAY
"BLD",9491,4,727.813,2,727.813,1,18,0)
TIME
"BLD",9491,4,727.813,2,727.813,1,30,0)
DOM,PRRTP AND SAARTP INDICATOR
"BLD",9491,4,727.813,2,727.813,1,31,0)
OBSERVATION PATIENT INDICATOR
"BLD",9491,4,727.813,2,727.813,1,33,0)
ORDERING STOP CODE
"BLD",9491,4,727.813,2,727.813,1,46,0)
DATA LOCATION
"BLD",9491,4,727.813,2,727.813,1,47,0)
PATCAT
"BLD",9491,4,727.813,222)
y^y^p^^^^n^^n
"BLD",9491,4,727.813,224)

"BLD",9491,4,727.814,0)
727.814
"BLD",9491,4,727.814,2,0)
^9.641^727.814^1
"BLD",9491,4,727.814,2,727.814,0)
RADIOLOGY EXTRACT  (File-top level)
"BLD",9491,4,727.814,2,727.814,1,0)
^9.6411^49^11
"BLD",9491,4,727.814,2,727.814,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",9491,4,727.814,2,727.814,1,12,0)
LOCATION (WARD OR CLINIC)
"BLD",9491,4,727.814,2,727.814,1,13,0)
SERVICE
"BLD",9491,4,727.814,2,727.814,1,18,0)
TREATING SPECIALTY
"BLD",9491,4,727.814,2,727.814,1,20,0)
IMAGING TYPE
"BLD",9491,4,727.814,2,727.814,1,31,0)
DOM,PRRTP AND SAARTP INDICATOR
"BLD",9491,4,727.814,2,727.814,1,32,0)
OBSERVATION PATIENT INDICATOR
"BLD",9491,4,727.814,2,727.814,1,34,0)
RAD STOP CODE
"BLD",9491,4,727.814,2,727.814,1,48,0)
PATCAT
"BLD",9491,4,727.814,2,727.814,1,49,0)
CREDIT METHOD
"BLD",9491,4,727.814,2,727.814,1,53,0)
RAD VERIFY DATE
"BLD",9491,4,727.814,222)
y^y^p^^^^n^^n
"BLD",9491,4,727.814,224)

"BLD",9491,4,727.815,0)
727.815
"BLD",9491,4,727.815,2,0)
^9.641^727.815^1
"BLD",9491,4,727.815,2,727.815,0)
EVENT CAPTURE LOCAL EXTRACT  (File-top level)
"BLD",9491,4,727.815,2,727.815,1,0)
^9.6411^61^14
"BLD",9491,4,727.815,2,727.815,1,1,0)
YEAR MONTH
"BLD",9491,4,727.815,2,727.815,1,5,0)
SSN
"BLD",9491,4,727.815,2,727.815,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",9491,4,727.815,2,727.815,1,61,0)
OBSERVATION PATIENT INDICATOR
"BLD",9491,4,727.815,2,727.815,1,77,0)
USER ENROLLEE
"BLD",9491,4,727.815,2,727.815,1,89,0)
PLACEHOLDER
"BLD",9491,4,727.815,2,727.815,1,106,0)
PRIMARY ICD-10 CODE
"BLD",9491,4,727.815,2,727.815,1,107,0)
SECONDARY ICD-10 CODE #1
"BLD",9491,4,727.815,2,727.815,1,108,0)
SECONDARY ICD-10 CODE #2
"BLD",9491,4,727.815,2,727.815,1,109,0)
SECONDARY ICD-10 CODE #3
"BLD",9491,4,727.815,2,727.815,1,110,0)
SECONDARY ICD-10 CODE #4
"BLD",9491,4,727.815,2,727.815,1,119,0)
4CHAR
"BLD",9491,4,727.815,2,727.815,1,120,0)
PLACEHOLDER
"BLD",9491,4,727.815,2,727.815,1,128,0)
CLINIC IEN
"BLD",9491,4,727.815,222)
y^y^p^^^^n^^n
"BLD",9491,4,727.815,224)

"BLD",9491,4,727.817,0)
727.817
"BLD",9491,4,727.817,2,0)
^9.641^727.817^1
"BLD",9491,4,727.817,2,727.817,0)
TREATING SPECIALTY CHANGE EXTRACT  (File-top level)
"BLD",9491,4,727.817,2,727.817,1,0)
^9.6411^33^7
"BLD",9491,4,727.817,2,727.817,1,1,0)
YEAR MONTH
"BLD",9491,4,727.817,2,727.817,1,5,0)
SSN
"BLD",9491,4,727.817,2,727.817,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",9491,4,727.817,2,727.817,1,14,0)
NEW TREATING SPECIALTY
"BLD",9491,4,727.817,2,727.817,1,32,0)
DOM,PRRTP AND SAARTP INDICATOR
"BLD",9491,4,727.817,2,727.817,1,33,0)
OBSERVATION PATIENT INDICATOR
"BLD",9491,4,727.817,2,727.817,1,44,0)
PATCAT
"BLD",9491,4,727.817,222)
y^y^p^^^^n^^n
"BLD",9491,4,727.817,224)

"BLD",9491,4,727.819,0)
727.819
"BLD",9491,4,727.819,2,0)
^9.641^727.819^1
"BLD",9491,4,727.819,2,727.819,0)
IV DETAIL EXTRACT  (File-top level)
"BLD",9491,4,727.819,2,727.819,1,0)
^9.6411^88^12
"BLD",9491,4,727.819,2,727.819,1,3,0)
FACILITY
"BLD",9491,4,727.819,2,727.819,1,4,0)
PATIENT NO. - DFN
"BLD",9491,4,727.819,2,727.819,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",9491,4,727.819,2,727.819,1,34,0)
DOM,PRRTP AND SAARTP INDICATOR
"BLD",9491,4,727.819,2,727.819,1,35,0)
OBSERVATION PATIENT INDICATOR
"BLD",9491,4,727.819,2,727.819,1,38,0)
ORDERING STOP CODE
"BLD",9491,4,727.819,2,727.819,1,57,0)
MST STATUS
"BLD",9491,4,727.819,2,727.819,1,74,0)
USER ENROLLEE
"BLD",9491,4,727.819,2,727.819,1,82,0)
OEF/OIF
"BLD",9491,4,727.819,2,727.819,1,83,0)
OEF/OIF RETURN DATE
"BLD",9491,4,727.819,2,727.819,1,87,0)
COUNTRY CODE
"BLD",9491,4,727.819,2,727.819,1,88,0)
PATCAT
"BLD",9491,4,727.819,222)
y^y^p^^^^n^^n
"BLD",9491,4,727.819,224)

"BLD",9491,4,727.824,0)
727.824
"BLD",9491,4,727.824,2,0)
^9.641^727.824^1
"BLD",9491,4,727.824,2,727.824,0)
LAB RESULTS EXTRACT  (File-top level)
"BLD",9491,4,727.824,2,727.824,1,0)
^9.6411^32^5
"BLD",9491,4,727.824,2,727.824,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",9491,4,727.824,2,727.824,1,19,0)
WORKLOAD CODE
"BLD",9491,4,727.824,2,727.824,1,22,0)
DOM,PRRTP AND SAARTP INDICATOR
"BLD",9491,4,727.824,2,727.824,1,24,0)
OBSERVATION PATIENT INDICATOR
"BLD",9491,4,727.824,2,727.824,1,32,0)
PATCAT
"BLD",9491,4,727.824,222)
y^y^p^^^^n^^n
"BLD",9491,4,727.824,224)

"BLD",9491,4,727.825,0)
727.825
"BLD",9491,4,727.825,2,0)
^9.641^727.825^1
"BLD",9491,4,727.825,2,727.825,0)
QUASAR EXTRACT  (File-top level)
"BLD",9491,4,727.825,2,727.825,1,0)
^9.6411^61^14
"BLD",9491,4,727.825,2,727.825,1,1,0)
YEAR MONTH
"BLD",9491,4,727.825,2,727.825,1,5,0)
SSN
"BLD",9491,4,727.825,2,727.825,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",9491,4,727.825,2,727.825,1,61,0)
OBSERVATION PATIENT INDICATOR
"BLD",9491,4,727.825,2,727.825,1,77,0)
USER ENROLLEE
"BLD",9491,4,727.825,2,727.825,1,89,0)
PLACEHOLDER
"BLD",9491,4,727.825,2,727.825,1,106,0)
PRIMARY ICD-10 CODE
"BLD",9491,4,727.825,2,727.825,1,107,0)
SECONDARY ICD-10 CODE #1
"BLD",9491,4,727.825,2,727.825,1,108,0)
SECONDARY ICD-10 CODE #2
"BLD",9491,4,727.825,2,727.825,1,109,0)
SECONDARY ICD-10 CODE #3
"BLD",9491,4,727.825,2,727.825,1,110,0)
SECONDARY ICD-10 CODE #4
"BLD",9491,4,727.825,2,727.825,1,119,0)
4CHAR
"BLD",9491,4,727.825,2,727.825,1,120,0)
PLACEHOLDER
"BLD",9491,4,727.825,2,727.825,1,128,0)
CLINIC IEN
"BLD",9491,4,727.825,222)
y^y^p^^^^n^^n
"BLD",9491,4,727.825,224)

"BLD",9491,4,727.826,0)
727.826
"BLD",9491,4,727.826,2,0)
^9.641^727.826^1
"BLD",9491,4,727.826,2,727.826,0)
PROSTHETICS EXTRACT  (File-top level)
"BLD",9491,4,727.826,2,727.826,1,0)
^9.6411^91^15
"BLD",9491,4,727.826,2,727.826,1,7,0)
IN OUTPATIENT INDICATOR
"BLD",9491,4,727.826,2,727.826,1,8,0)
DATE OF SERVICE
"BLD",9491,4,727.826,2,727.826,1,10,0)
FEEDER KEY
"BLD",9491,4,727.826,2,727.826,1,14,0)
PCE CPT/HCPCS CODE & MODIFIERS
"BLD",9491,4,727.826,2,727.826,1,23,0)
PATIENT ELIGIBILITY
"BLD",9491,4,727.826,2,727.826,1,24,0)
COST OF TRANSACTION
"BLD",9491,4,727.826,2,727.826,1,53,0)
DOM,PRRTP AND SAARTP INDICATOR
"BLD",9491,4,727.826,2,727.826,1,59,0)
OBSERVATION PATIENT INDICATOR
"BLD",9491,4,727.826,2,727.826,1,91,0)
PATCAT
"BLD",9491,4,727.826,2,727.826,1,92,0)
PRIMARY ICD-10 CODE
"BLD",9491,4,727.826,2,727.826,1,93,0)
SECONDARY ICD-10 CODE #1
"BLD",9491,4,727.826,2,727.826,1,94,0)
SECONDARY ICD-10 CODE #2
"BLD",9491,4,727.826,2,727.826,1,95,0)
SECONDARY ICD-10 CODE #3
"BLD",9491,4,727.826,2,727.826,1,96,0)
SECONDARY ICD-10 CODE #4
"BLD",9491,4,727.826,2,727.826,1,103,0)
FORM REQUESTED ON
"BLD",9491,4,727.826,222)
y^y^p^^^^n^^n
"BLD",9491,4,727.826,224)

"BLD",9491,4,727.827,0)
727.827
"BLD",9491,4,727.827,2,0)
^9.641^727.827^1
"BLD",9491,4,727.827,2,727.827,0)
CLINIC EXTRACT  (File-top level)
"BLD",9491,4,727.827,2,727.827,1,0)
^9.6411^65^25
"BLD",9491,4,727.827,2,727.827,1,7,0)
IN/OUT PATIENT INDICATOR
"BLD",9491,4,727.827,2,727.827,1,11,0)
PLACEHOLDER
"BLD",9491,4,727.827,2,727.827,1,38,0)
RADIATION STATUS
"BLD",9491,4,727.827,2,727.827,1,41,0)
AGENT ORANGE ENC INDICATOR
"BLD",9491,4,727.827,2,727.827,1,45,0)
ZIP+4
"BLD",9491,4,727.827,2,727.827,1,56,0)
ASSOCIATE PC PROVIDER
"BLD",9491,4,727.827,2,727.827,1,65,0)
OBSERVATION PATIENT INDICATOR
"BLD",9491,4,727.827,2,727.827,1,78,0)
USER ENROLLEE
"BLD",9491,4,727.827,2,727.827,1,84,0)
SW ASIA CONDITIONS
"BLD",9491,4,727.827,2,727.827,1,93,0)
COUNTRY CODE
"BLD",9491,4,727.827,2,727.827,1,95,0)
PATCAT
"BLD",9491,4,727.827,2,727.827,1,97,0)
SECONDARY PROVIDER #1 PC
"BLD",9491,4,727.827,2,727.827,1,100,0)
SECONDARY PROVIDER #2 PC
"BLD",9491,4,727.827,2,727.827,1,103,0)
SECONDARY PROVIDER #3 PC
"BLD",9491,4,727.827,2,727.827,1,106,0)
SECONDARY PROVIDER #4 PC
"BLD",9491,4,727.827,2,727.827,1,109,0)
SECONDARY PROVIDER #5 PC
"BLD",9491,4,727.827,2,727.827,1,112,0)
PRIMARY ICD-10 CODE
"BLD",9491,4,727.827,2,727.827,1,113,0)
SECONDARY ICD-10 CODE #1
"BLD",9491,4,727.827,2,727.827,1,114,0)
SECONDARY ICD-10 CODE #2
"BLD",9491,4,727.827,2,727.827,1,115,0)
SECONDARY ICD-10 CODE #3
"BLD",9491,4,727.827,2,727.827,1,116,0)
SECONDARY ICD-10 CODE #4
"BLD",9491,4,727.827,2,727.827,1,120,0)
SECONDARY PROVIDER #6 PC
"BLD",9491,4,727.827,2,727.827,1,123,0)
SECONDARY PROVIDER #7 PC
"BLD",9491,4,727.827,2,727.827,1,127,0)
PRIMARY PROCEDURE
"BLD",9491,4,727.827,2,727.827,1,130,0)
CLINIC IEN
"BLD",9491,4,727.827,222)
y^y^p^^^^n^^n
"BLD",9491,4,727.827,224)

"BLD",9491,4,727.829,0)
727.829
"BLD",9491,4,727.829,2,0)
^9.641^727.829^1
"BLD",9491,4,727.829,2,727.829,0)
BLOOD BANK EXTRACT  (File-top level)
"BLD",9491,4,727.829,2,727.829,1,0)
^9.6411^30^3
"BLD",9491,4,727.829,2,727.829,1,1,0)
YEAR MONTH
"BLD",9491,4,727.829,2,727.829,1,7,0)
IN/OUT PATIENT INDICATOR
"BLD",9491,4,727.829,2,727.829,1,30,0)
PATCAT
"BLD",9491,4,727.829,222)
y^y^p^^^^n^^n
"BLD",9491,4,727.829,224)

"BLD",9491,4,727.833,0)
727.833
"BLD",9491,4,727.833,2,0)
^9.641^727.833^1
"BLD",9491,4,727.833,2,727.833,0)
BCMA EXTRACT  (File-top level)
"BLD",9491,4,727.833,2,727.833,1,0)
^9.6411^80^51
"BLD",9491,4,727.833,2,727.833,1,1,0)
YEAR MONTH
"BLD",9491,4,727.833,2,727.833,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",9491,4,727.833,2,727.833,1,11,0)
STATE
"BLD",9491,4,727.833,2,727.833,1,12,0)
COUNTY
"BLD",9491,4,727.833,2,727.833,1,13,0)
ZIP +4
"BLD",9491,4,727.833,2,727.833,1,15,0)
WARD
"BLD",9491,4,727.833,2,727.833,1,16,0)
TREATING SPECIALTY
"BLD",9491,4,727.833,2,727.833,1,17,0)
PROVIDER
"BLD",9491,4,727.833,2,727.833,1,23,0)
PRIMARY CARE TEAM
"BLD",9491,4,727.833,2,727.833,1,25,0)
PLACE ORDER NUMBER
"BLD",9491,4,727.833,2,727.833,1,26,0)
ORDER REFERENCE NUMBER
"BLD",9491,4,727.833,2,727.833,1,27,0)
ROUTE
"BLD",9491,4,727.833,2,727.833,1,28,0)
TIME
"BLD",9491,4,727.833,2,727.833,1,29,0)
COMPONENT CODE
"BLD",9491,4,727.833,2,727.833,1,30,0)
COMPONENT DOSE ORDERED
"BLD",9491,4,727.833,2,727.833,1,31,0)
COMPONENT DOSE GIVEN
"BLD",9491,4,727.833,2,727.833,1,32,0)
COMPONENT UNITS
"BLD",9491,4,727.833,2,727.833,1,33,0)
COMPONENT TYPE
"BLD",9491,4,727.833,2,727.833,1,34,0)
ACTION STATUS
"BLD",9491,4,727.833,2,727.833,1,35,0)
ADMINISTRATION MEDICATION
"BLD",9491,4,727.833,2,727.833,1,36,0)
SCHEDULED ADMINISTRATION DATE
"BLD",9491,4,727.833,2,727.833,1,37,0)
SCHEDULED ADMINISTRATION TIME
"BLD",9491,4,727.833,2,727.833,1,38,0)
ORDER SCHEDULE
"BLD",9491,4,727.833,2,727.833,1,39,0)
IV UNIQUE ID
"BLD",9491,4,727.833,2,727.833,1,40,0)
INFUSION RATE
"BLD",9491,4,727.833,2,727.833,1,41,0)
PRODUCTION DIVISION CODE
"BLD",9491,4,727.833,2,727.833,1,42,0)
DRUG IEN
"BLD",9491,4,727.833,2,727.833,1,43,0)
NDC
"BLD",9491,4,727.833,2,727.833,1,45,0)
VA DRUG CLASSIFICATION
"BLD",9491,4,727.833,2,727.833,1,47,0)
DOM, PRRTP & SAARTP INDICATOR
"BLD",9491,4,727.833,2,727.833,1,48,0)
OBSERVATION PATIENT INDICATOR
"BLD",9491,4,727.833,2,727.833,1,50,0)
MEANS TEST
"BLD",9491,4,727.833,2,727.833,1,52,0)
ENROLLMENT LOCATION
"BLD",9491,4,727.833,2,727.833,1,53,0)
ENROLLMENT CATEGORY
"BLD",9491,4,727.833,2,727.833,1,55,0)
ENROLLMENT PRIORITY
"BLD",9491,4,727.833,2,727.833,1,56,0)
USER ENROLLEE
"BLD",9491,4,727.833,2,727.833,1,57,0)
ETHNICITY
"BLD",9491,4,727.833,2,727.833,1,60,0)
PERIOD OF SERVICE
"BLD",9491,4,727.833,2,727.833,1,62,0)
POW LOCATION
"BLD",9491,4,727.833,2,727.833,1,66,0)
PURPLE HEART INDICATOR
"BLD",9491,4,727.833,2,727.833,1,67,0)
MST STATUS
"BLD",9491,4,727.833,2,727.833,1,69,0)
HEAD & NECK CANCER INDICATOR
"BLD",9491,4,727.833,2,727.833,1,70,0)
SHAD STATUS
"BLD",9491,4,727.833,2,727.833,1,71,0)
PATIENT TYPE
"BLD",9491,4,727.833,2,727.833,1,72,0)
CV STATUS ELIGIBILITY
"BLD",9491,4,727.833,2,727.833,1,73,0)
CV ELIGIBILITY END DATE
"BLD",9491,4,727.833,2,727.833,1,74,0)
ENCOUNTER CV
"BLD",9491,4,727.833,2,727.833,1,77,0)
SW ASIA CONDITIONS
"BLD",9491,4,727.833,2,727.833,1,78,0)
OEF/OIF
"BLD",9491,4,727.833,2,727.833,1,79,0)
OEF/OIF RETURN DATE
"BLD",9491,4,727.833,2,727.833,1,80,0)
PATCAT
"BLD",9491,4,727.833,222)
y^y^p^^^^n^^n
"BLD",9491,4,727.833,224)

"BLD",9491,4,728.44,0)
728.44
"BLD",9491,4,728.44,2,0)
^9.641^728.44^1
"BLD",9491,4,728.44,2,728.44,0)
CLINICS AND STOP CODES  (File-top level)
"BLD",9491,4,728.44,2,728.44,1,0)
^9.6411^5^1
"BLD",9491,4,728.44,2,728.44,1,5,0)
ACTION TO SEND
"BLD",9491,4,728.44,222)
y^y^p^^^^n^^n
"BLD",9491,4,728.44,224)

"BLD",9491,4,"APDD",727.802,727.802)

"BLD",9491,4,"APDD",727.802,727.802,1)

"BLD",9491,4,"APDD",727.802,727.802,18)

"BLD",9491,4,"APDD",727.802,727.802,28)

"BLD",9491,4,"APDD",727.802,727.802,57)

"BLD",9491,4,"APDD",727.802,727.802,93)

"BLD",9491,4,"APDD",727.808,727.808)

"BLD",9491,4,"APDD",727.808,727.808,13)

"BLD",9491,4,"APDD",727.808,727.808,26)

"BLD",9491,4,"APDD",727.808,727.808,27)

"BLD",9491,4,"APDD",727.809,727.809)

"BLD",9491,4,"APDD",727.809,727.809,4)

"BLD",9491,4,"APDD",727.809,727.809,7)

"BLD",9491,4,"APDD",727.809,727.809,11)

"BLD",9491,4,"APDD",727.809,727.809,12)

"BLD",9491,4,"APDD",727.809,727.809,15)

"BLD",9491,4,"APDD",727.809,727.809,25)

"BLD",9491,4,"APDD",727.809,727.809,26)

"BLD",9491,4,"APDD",727.809,727.809,44)

"BLD",9491,4,"APDD",727.809,727.809,68)

"BLD",9491,4,"APDD",727.809,727.809,69)

"BLD",9491,4,"APDD",727.809,727.809,77)

"BLD",9491,4,"APDD",727.809,727.809,82)

"BLD",9491,4,"APDD",727.809,727.809,83)

"BLD",9491,4,"APDD",727.81,727.81)

"BLD",9491,4,"APDD",727.81,727.81,7)

"BLD",9491,4,"APDD",727.81,727.81,9)

"BLD",9491,4,"APDD",727.81,727.81,11)

"BLD",9491,4,"APDD",727.81,727.81,14)

"BLD",9491,4,"APDD",727.81,727.81,17)

"BLD",9491,4,"APDD",727.81,727.81,33)

"BLD",9491,4,"APDD",727.81,727.81,54)

"BLD",9491,4,"APDD",727.81,727.81,56)

"BLD",9491,4,"APDD",727.81,727.81,61)

"BLD",9491,4,"APDD",727.81,727.81,70)

"BLD",9491,4,"APDD",727.81,727.81,75)

"BLD",9491,4,"APDD",727.81,727.81,98)

"BLD",9491,4,"APDD",727.81,727.81,105)

"BLD",9491,4,"APDD",727.811,727.811)

"BLD",9491,4,"APDD",727.811,727.811,4)

"BLD",9491,4,"APDD",727.811,727.811,7)

"BLD",9491,4,"APDD",727.811,727.811,20)

"BLD",9491,4,"APDD",727.811,727.811,27)

"BLD",9491,4,"APDD",727.811,727.811,34)

"BLD",9491,4,"APDD",727.811,727.811,47)

"BLD",9491,4,"APDD",727.811,727.811,48)

"BLD",9491,4,"APDD",727.811,727.811,49)

"BLD",9491,4,"APDD",727.811,727.811,54)

"BLD",9491,4,"APDD",727.811,727.811,64)

"BLD",9491,4,"APDD",727.811,727.811,73)

"BLD",9491,4,"APDD",727.811,727.811,74)

"BLD",9491,4,"APDD",727.811,727.811,75)

"BLD",9491,4,"APDD",727.811,727.811,76)

"BLD",9491,4,"APDD",727.811,727.811,80)

"BLD",9491,4,"APDD",727.811,727.811,107)

"BLD",9491,4,"APDD",727.811,727.811,110)

"BLD",9491,4,"APDD",727.811,727.811,120)

"BLD",9491,4,"APDD",727.811,727.811,126)

"BLD",9491,4,"APDD",727.811,727.811,127)

"BLD",9491,4,"APDD",727.811,727.811,128)

"BLD",9491,4,"APDD",727.811,727.811,129)

"BLD",9491,4,"APDD",727.811,727.811,130)

"BLD",9491,4,"APDD",727.811,727.811,131)

"BLD",9491,4,"APDD",727.813,727.813)

"BLD",9491,4,"APDD",727.813,727.813,7)

"BLD",9491,4,"APDD",727.813,727.813,8)

"BLD",9491,4,"APDD",727.813,727.813,18)

"BLD",9491,4,"APDD",727.813,727.813,30)

"BLD",9491,4,"APDD",727.813,727.813,31)

"BLD",9491,4,"APDD",727.813,727.813,33)

"BLD",9491,4,"APDD",727.813,727.813,46)

"BLD",9491,4,"APDD",727.813,727.813,47)

"BLD",9491,4,"APDD",727.814,727.814)

"BLD",9491,4,"APDD",727.814,727.814,7)

"BLD",9491,4,"APDD",727.814,727.814,12)

"BLD",9491,4,"APDD",727.814,727.814,13)

"BLD",9491,4,"APDD",727.814,727.814,18)

"BLD",9491,4,"APDD",727.814,727.814,20)

"BLD",9491,4,"APDD",727.814,727.814,31)

"BLD",9491,4,"APDD",727.814,727.814,32)

"BLD",9491,4,"APDD",727.814,727.814,34)

"BLD",9491,4,"APDD",727.814,727.814,48)

"BLD",9491,4,"APDD",727.814,727.814,49)

"BLD",9491,4,"APDD",727.814,727.814,53)

"BLD",9491,4,"APDD",727.815,727.815)

"BLD",9491,4,"APDD",727.815,727.815,1)

"BLD",9491,4,"APDD",727.815,727.815,5)

"BLD",9491,4,"APDD",727.815,727.815,7)

"BLD",9491,4,"APDD",727.815,727.815,61)

"BLD",9491,4,"APDD",727.815,727.815,77)

"BLD",9491,4,"APDD",727.815,727.815,89)

"BLD",9491,4,"APDD",727.815,727.815,106)

"BLD",9491,4,"APDD",727.815,727.815,107)

"BLD",9491,4,"APDD",727.815,727.815,108)

"BLD",9491,4,"APDD",727.815,727.815,109)

"BLD",9491,4,"APDD",727.815,727.815,110)

"BLD",9491,4,"APDD",727.815,727.815,119)

"BLD",9491,4,"APDD",727.815,727.815,120)

"BLD",9491,4,"APDD",727.815,727.815,128)

"BLD",9491,4,"APDD",727.817,727.817)

"BLD",9491,4,"APDD",727.817,727.817,1)

"BLD",9491,4,"APDD",727.817,727.817,5)

"BLD",9491,4,"APDD",727.817,727.817,7)

"BLD",9491,4,"APDD",727.817,727.817,14)

"BLD",9491,4,"APDD",727.817,727.817,32)

"BLD",9491,4,"APDD",727.817,727.817,33)

"BLD",9491,4,"APDD",727.817,727.817,44)

"BLD",9491,4,"APDD",727.819,727.819)

"BLD",9491,4,"APDD",727.819,727.819,3)

"BLD",9491,4,"APDD",727.819,727.819,4)

"BLD",9491,4,"APDD",727.819,727.819,7)

"BLD",9491,4,"APDD",727.819,727.819,34)

"BLD",9491,4,"APDD",727.819,727.819,35)

"BLD",9491,4,"APDD",727.819,727.819,38)

"BLD",9491,4,"APDD",727.819,727.819,57)

"BLD",9491,4,"APDD",727.819,727.819,74)

"BLD",9491,4,"APDD",727.819,727.819,82)

"BLD",9491,4,"APDD",727.819,727.819,83)

"BLD",9491,4,"APDD",727.819,727.819,87)

"BLD",9491,4,"APDD",727.819,727.819,88)

"BLD",9491,4,"APDD",727.824,727.824)

"BLD",9491,4,"APDD",727.824,727.824,7)

"BLD",9491,4,"APDD",727.824,727.824,19)

"BLD",9491,4,"APDD",727.824,727.824,22)

"BLD",9491,4,"APDD",727.824,727.824,24)

"BLD",9491,4,"APDD",727.824,727.824,32)

"BLD",9491,4,"APDD",727.825,727.825)

"BLD",9491,4,"APDD",727.825,727.825,1)

"BLD",9491,4,"APDD",727.825,727.825,5)

"BLD",9491,4,"APDD",727.825,727.825,7)

"BLD",9491,4,"APDD",727.825,727.825,61)

"BLD",9491,4,"APDD",727.825,727.825,77)

"BLD",9491,4,"APDD",727.825,727.825,89)

"BLD",9491,4,"APDD",727.825,727.825,106)

"BLD",9491,4,"APDD",727.825,727.825,107)

"BLD",9491,4,"APDD",727.825,727.825,108)

"BLD",9491,4,"APDD",727.825,727.825,109)

"BLD",9491,4,"APDD",727.825,727.825,110)

"BLD",9491,4,"APDD",727.825,727.825,119)

"BLD",9491,4,"APDD",727.825,727.825,120)

"BLD",9491,4,"APDD",727.825,727.825,128)

"BLD",9491,4,"APDD",727.826,727.826)

"BLD",9491,4,"APDD",727.826,727.826,7)

"BLD",9491,4,"APDD",727.826,727.826,8)

"BLD",9491,4,"APDD",727.826,727.826,10)

"BLD",9491,4,"APDD",727.826,727.826,14)

"BLD",9491,4,"APDD",727.826,727.826,23)

"BLD",9491,4,"APDD",727.826,727.826,24)

"BLD",9491,4,"APDD",727.826,727.826,53)

"BLD",9491,4,"APDD",727.826,727.826,59)

"BLD",9491,4,"APDD",727.826,727.826,91)

"BLD",9491,4,"APDD",727.826,727.826,92)

"BLD",9491,4,"APDD",727.826,727.826,93)

"BLD",9491,4,"APDD",727.826,727.826,94)

"BLD",9491,4,"APDD",727.826,727.826,95)

"BLD",9491,4,"APDD",727.826,727.826,96)

"BLD",9491,4,"APDD",727.826,727.826,103)

"BLD",9491,4,"APDD",727.827,727.827)

"BLD",9491,4,"APDD",727.827,727.827,7)

"BLD",9491,4,"APDD",727.827,727.827,11)

"BLD",9491,4,"APDD",727.827,727.827,38)

"BLD",9491,4,"APDD",727.827,727.827,41)

"BLD",9491,4,"APDD",727.827,727.827,45)

"BLD",9491,4,"APDD",727.827,727.827,56)

"BLD",9491,4,"APDD",727.827,727.827,65)

"BLD",9491,4,"APDD",727.827,727.827,78)

"BLD",9491,4,"APDD",727.827,727.827,84)

"BLD",9491,4,"APDD",727.827,727.827,93)

"BLD",9491,4,"APDD",727.827,727.827,95)

"BLD",9491,4,"APDD",727.827,727.827,97)

"BLD",9491,4,"APDD",727.827,727.827,100)

"BLD",9491,4,"APDD",727.827,727.827,103)

"BLD",9491,4,"APDD",727.827,727.827,106)

"BLD",9491,4,"APDD",727.827,727.827,109)

"BLD",9491,4,"APDD",727.827,727.827,112)

"BLD",9491,4,"APDD",727.827,727.827,113)

"BLD",9491,4,"APDD",727.827,727.827,114)

"BLD",9491,4,"APDD",727.827,727.827,115)

"BLD",9491,4,"APDD",727.827,727.827,116)

"BLD",9491,4,"APDD",727.827,727.827,120)

"BLD",9491,4,"APDD",727.827,727.827,123)

"BLD",9491,4,"APDD",727.827,727.827,127)

"BLD",9491,4,"APDD",727.827,727.827,130)

"BLD",9491,4,"APDD",727.829,727.829)

"BLD",9491,4,"APDD",727.829,727.829,1)

"BLD",9491,4,"APDD",727.829,727.829,7)

"BLD",9491,4,"APDD",727.829,727.829,30)

"BLD",9491,4,"APDD",727.833,727.833)

"BLD",9491,4,"APDD",727.833,727.833,1)

"BLD",9491,4,"APDD",727.833,727.833,7)

"BLD",9491,4,"APDD",727.833,727.833,11)

"BLD",9491,4,"APDD",727.833,727.833,12)

"BLD",9491,4,"APDD",727.833,727.833,13)

"BLD",9491,4,"APDD",727.833,727.833,15)

"BLD",9491,4,"APDD",727.833,727.833,16)

"BLD",9491,4,"APDD",727.833,727.833,17)

"BLD",9491,4,"APDD",727.833,727.833,23)

"BLD",9491,4,"APDD",727.833,727.833,25)

"BLD",9491,4,"APDD",727.833,727.833,26)

"BLD",9491,4,"APDD",727.833,727.833,27)

"BLD",9491,4,"APDD",727.833,727.833,28)

"BLD",9491,4,"APDD",727.833,727.833,29)

"BLD",9491,4,"APDD",727.833,727.833,30)

"BLD",9491,4,"APDD",727.833,727.833,31)

"BLD",9491,4,"APDD",727.833,727.833,32)

"BLD",9491,4,"APDD",727.833,727.833,33)

"BLD",9491,4,"APDD",727.833,727.833,34)

"BLD",9491,4,"APDD",727.833,727.833,35)

"BLD",9491,4,"APDD",727.833,727.833,36)

"BLD",9491,4,"APDD",727.833,727.833,37)

"BLD",9491,4,"APDD",727.833,727.833,38)

"BLD",9491,4,"APDD",727.833,727.833,39)

"BLD",9491,4,"APDD",727.833,727.833,40)

"BLD",9491,4,"APDD",727.833,727.833,41)

"BLD",9491,4,"APDD",727.833,727.833,42)

"BLD",9491,4,"APDD",727.833,727.833,43)

"BLD",9491,4,"APDD",727.833,727.833,45)

"BLD",9491,4,"APDD",727.833,727.833,47)

"BLD",9491,4,"APDD",727.833,727.833,48)

"BLD",9491,4,"APDD",727.833,727.833,50)

"BLD",9491,4,"APDD",727.833,727.833,52)

"BLD",9491,4,"APDD",727.833,727.833,53)

"BLD",9491,4,"APDD",727.833,727.833,55)

"BLD",9491,4,"APDD",727.833,727.833,56)

"BLD",9491,4,"APDD",727.833,727.833,57)

"BLD",9491,4,"APDD",727.833,727.833,60)

"BLD",9491,4,"APDD",727.833,727.833,62)

"BLD",9491,4,"APDD",727.833,727.833,66)

"BLD",9491,4,"APDD",727.833,727.833,67)

"BLD",9491,4,"APDD",727.833,727.833,69)

"BLD",9491,4,"APDD",727.833,727.833,70)

"BLD",9491,4,"APDD",727.833,727.833,71)

"BLD",9491,4,"APDD",727.833,727.833,72)

"BLD",9491,4,"APDD",727.833,727.833,73)

"BLD",9491,4,"APDD",727.833,727.833,74)

"BLD",9491,4,"APDD",727.833,727.833,77)

"BLD",9491,4,"APDD",727.833,727.833,78)

"BLD",9491,4,"APDD",727.833,727.833,79)

"BLD",9491,4,"APDD",727.833,727.833,80)

"BLD",9491,4,"APDD",728.44,728.44)

"BLD",9491,4,"APDD",728.44,728.44,5)

"BLD",9491,4,"B",727.802,727.802)

"BLD",9491,4,"B",727.808,727.808)

"BLD",9491,4,"B",727.809,727.809)

"BLD",9491,4,"B",727.81,727.81)

"BLD",9491,4,"B",727.811,727.811)

"BLD",9491,4,"B",727.813,727.813)

"BLD",9491,4,"B",727.814,727.814)

"BLD",9491,4,"B",727.815,727.815)

"BLD",9491,4,"B",727.817,727.817)

"BLD",9491,4,"B",727.819,727.819)

"BLD",9491,4,"B",727.824,727.824)

"BLD",9491,4,"B",727.825,727.825)

"BLD",9491,4,"B",727.826,727.826)

"BLD",9491,4,"B",727.827,727.827)

"BLD",9491,4,"B",727.829,727.829)

"BLD",9491,4,"B",727.833,727.833)

"BLD",9491,4,"B",728.44,728.44)

"BLD",9491,6.3)
13
"BLD",9491,"ABPKG")
n
"BLD",9491,"INIT")
POST^ECX3P154
"BLD",9491,"KRN",0)
^9.67PA^779.2^20
"BLD",9491,"KRN",.4,0)
.4
"BLD",9491,"KRN",.4,"NM",0)
^9.68A^2^2
"BLD",9491,"KRN",.4,"NM",1,0)
ECX CLINIC CODE    FILE #728.441^728.441^0
"BLD",9491,"KRN",.4,"NM",2,0)
ECX CLINIC REVIEW EXPORT    FILE #728.44^728.44^0
"BLD",9491,"KRN",.4,"NM","B","ECX CLINIC CODE    FILE #728.441",1)

"BLD",9491,"KRN",.4,"NM","B","ECX CLINIC REVIEW EXPORT    FILE #728.44",2)

"BLD",9491,"KRN",.401,0)
.401
"BLD",9491,"KRN",.402,0)
.402
"BLD",9491,"KRN",.403,0)
.403
"BLD",9491,"KRN",.5,0)
.5
"BLD",9491,"KRN",.84,0)
.84
"BLD",9491,"KRN",3.6,0)
3.6
"BLD",9491,"KRN",3.8,0)
3.8
"BLD",9491,"KRN",9.2,0)
9.2
"BLD",9491,"KRN",9.8,0)
9.8
"BLD",9491,"KRN",9.8,"NM",0)
^9.68A^38^38
"BLD",9491,"KRN",9.8,"NM",1,0)
ECXLBBC^^0^B61277456
"BLD",9491,"KRN",9.8,"NM",2,0)
ECXUTL2^^0^B74410083
"BLD",9491,"KRN",9.8,"NM",3,0)
ECXUTLA^^0^B73834306
"BLD",9491,"KRN",9.8,"NM",4,0)
ECXUTL3^^0^B101960628
"BLD",9491,"KRN",9.8,"NM",5,0)
ECXEC^^0^B89043397
"BLD",9491,"KRN",9.8,"NM",6,0)
ECXRAD^^0^B48026824
"BLD",9491,"KRN",9.8,"NM",7,0)
ECX3P154^^0^B22938446
"BLD",9491,"KRN",9.8,"NM",8,0)
ECXLABR^^0^B24269511
"BLD",9491,"KRN",9.8,"NM",9,0)
ECXALAR^^0^B23545177
"BLD",9491,"KRN",9.8,"NM",10,0)
ECXSCRP^^0^B28387744
"BLD",9491,"KRN",9.8,"NM",11,0)
ECXNCL^^0^B1343239
"BLD",9491,"KRN",9.8,"NM",12,0)
ECXSCLD^^0^B159034107
"BLD",9491,"KRN",9.8,"NM",13,0)
ECXSCLD1^^0^B69216890
"BLD",9491,"KRN",9.8,"NM",14,0)
ECXUTL4^^0^B46454603
"BLD",9491,"KRN",9.8,"NM",15,0)
ECXQSR^^0^B71545700
"BLD",9491,"KRN",9.8,"NM",16,0)
ECXPRO^^0^B48529101
"BLD",9491,"KRN",9.8,"NM",17,0)
ECXPRO1^^0^B20310309
"BLD",9491,"KRN",9.8,"NM",18,0)
ECXPRO2^^0^B14894548
"BLD",9491,"KRN",9.8,"NM",19,0)
ECXSCX3^^0^B21371068
"BLD",9491,"KRN",9.8,"NM",20,0)
ECXAPHA^^0^B64411651
"BLD",9491,"KRN",9.8,"NM",21,0)
ECXQSR1^^0^B18769480
"BLD",9491,"KRN",9.8,"NM",22,0)
ECXSCXN^^0^B90426087
"BLD",9491,"KRN",9.8,"NM",23,0)
ECXOPRX^^0^B67328800
"BLD",9491,"KRN",9.8,"NM",24,0)
ECXOPRX1^^0^B10575789
"BLD",9491,"KRN",9.8,"NM",25,0)
ECXSCX1^^0^B95411432
"BLD",9491,"KRN",9.8,"NM",26,0)
ECXUD^^0^B91677386
"BLD",9491,"KRN",9.8,"NM",27,0)
ECXPHAU^^0^B8852049
"BLD",9491,"KRN",9.8,"NM",28,0)
ECXPHVE^^0^B25113519
"BLD",9491,"KRN",9.8,"NM",29,0)
ECXBCM^^0^B95494822
"BLD",9491,"KRN",9.8,"NM",30,0)
ECXPROCT^^0^B31812713
"BLD",9491,"KRN",9.8,"NM",31,0)
ECXUPRO^^0^B32109188
"BLD",9491,"KRN",9.8,"NM",32,0)
ECXUPRO1^^0^B10090164
"BLD",9491,"KRN",9.8,"NM",33,0)
ECXUTL6^^0^B62760554
"BLD",9491,"KRN",9.8,"NM",34,0)
ECXSURG^^0^B79357790
"BLD",9491,"KRN",9.8,"NM",35,0)
ECXADM^^0^B61935470
"BLD",9491,"KRN",9.8,"NM",36,0)
ECXAPRO2^^0^B27505336
"BLD",9491,"KRN",9.8,"NM",37,0)
ECXLABN^^0^B52461125
"BLD",9491,"KRN",9.8,"NM",38,0)
ECXBCM1^^0^B10283039
"BLD",9491,"KRN",9.8,"NM","B","ECX3P154",7)

"BLD",9491,"KRN",9.8,"NM","B","ECXADM",35)

"BLD",9491,"KRN",9.8,"NM","B","ECXALAR",9)

"BLD",9491,"KRN",9.8,"NM","B","ECXAPHA",20)

"BLD",9491,"KRN",9.8,"NM","B","ECXAPRO2",36)

"BLD",9491,"KRN",9.8,"NM","B","ECXBCM",29)

"BLD",9491,"KRN",9.8,"NM","B","ECXBCM1",38)

"BLD",9491,"KRN",9.8,"NM","B","ECXEC",5)

"BLD",9491,"KRN",9.8,"NM","B","ECXLABN",37)

"BLD",9491,"KRN",9.8,"NM","B","ECXLABR",8)

"BLD",9491,"KRN",9.8,"NM","B","ECXLBBC",1)

"BLD",9491,"KRN",9.8,"NM","B","ECXNCL",11)

"BLD",9491,"KRN",9.8,"NM","B","ECXOPRX",23)

"BLD",9491,"KRN",9.8,"NM","B","ECXOPRX1",24)

"BLD",9491,"KRN",9.8,"NM","B","ECXPHAU",27)

"BLD",9491,"KRN",9.8,"NM","B","ECXPHVE",28)

"BLD",9491,"KRN",9.8,"NM","B","ECXPRO",16)

"BLD",9491,"KRN",9.8,"NM","B","ECXPRO1",17)

"BLD",9491,"KRN",9.8,"NM","B","ECXPRO2",18)

"BLD",9491,"KRN",9.8,"NM","B","ECXPROCT",30)

"BLD",9491,"KRN",9.8,"NM","B","ECXQSR",15)

"BLD",9491,"KRN",9.8,"NM","B","ECXQSR1",21)

"BLD",9491,"KRN",9.8,"NM","B","ECXRAD",6)

"BLD",9491,"KRN",9.8,"NM","B","ECXSCLD",12)

"BLD",9491,"KRN",9.8,"NM","B","ECXSCLD1",13)

"BLD",9491,"KRN",9.8,"NM","B","ECXSCRP",10)

"BLD",9491,"KRN",9.8,"NM","B","ECXSCX1",25)

"BLD",9491,"KRN",9.8,"NM","B","ECXSCX3",19)

"BLD",9491,"KRN",9.8,"NM","B","ECXSCXN",22)

"BLD",9491,"KRN",9.8,"NM","B","ECXSURG",34)

"BLD",9491,"KRN",9.8,"NM","B","ECXUD",26)

"BLD",9491,"KRN",9.8,"NM","B","ECXUPRO",31)

"BLD",9491,"KRN",9.8,"NM","B","ECXUPRO1",32)

"BLD",9491,"KRN",9.8,"NM","B","ECXUTL2",2)

"BLD",9491,"KRN",9.8,"NM","B","ECXUTL3",4)

"BLD",9491,"KRN",9.8,"NM","B","ECXUTL4",14)

"BLD",9491,"KRN",9.8,"NM","B","ECXUTL6",33)

"BLD",9491,"KRN",9.8,"NM","B","ECXUTLA",3)

"BLD",9491,"KRN",19,0)
19
"BLD",9491,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",9491,"KRN",19,"NM",1,0)
ECX PHA VOL EDIT^^0
"BLD",9491,"KRN",19,"NM",2,0)
ECX PHA VOL EDIT LOG^^0
"BLD",9491,"KRN",19,"NM",3,0)
ECX PHA EDIT^^0
"BLD",9491,"KRN",19,"NM","B","ECX PHA EDIT",3)

"BLD",9491,"KRN",19,"NM","B","ECX PHA VOL EDIT",1)

"BLD",9491,"KRN",19,"NM","B","ECX PHA VOL EDIT LOG",2)

"BLD",9491,"KRN",19.1,0)
19.1
"BLD",9491,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",9491,"KRN",19.1,"NM",1,0)
ECX DSS TEST^^0
"BLD",9491,"KRN",19.1,"NM","B","ECX DSS TEST",1)

"BLD",9491,"KRN",101,0)
101
"BLD",9491,"KRN",409.61,0)
409.61
"BLD",9491,"KRN",771,0)
771
"BLD",9491,"KRN",779.2,0)
779.2
"BLD",9491,"KRN",870,0)
870
"BLD",9491,"KRN",8989.51,0)
8989.51
"BLD",9491,"KRN",8989.52,0)
8989.52
"BLD",9491,"KRN",8994,0)
8994
"BLD",9491,"KRN","B",.4,.4)

"BLD",9491,"KRN","B",.401,.401)

"BLD",9491,"KRN","B",.402,.402)

"BLD",9491,"KRN","B",.403,.403)

"BLD",9491,"KRN","B",.5,.5)

"BLD",9491,"KRN","B",.84,.84)

"BLD",9491,"KRN","B",3.6,3.6)

"BLD",9491,"KRN","B",3.8,3.8)

"BLD",9491,"KRN","B",9.2,9.2)

"BLD",9491,"KRN","B",9.8,9.8)

"BLD",9491,"KRN","B",19,19)

"BLD",9491,"KRN","B",19.1,19.1)

"BLD",9491,"KRN","B",101,101)

"BLD",9491,"KRN","B",409.61,409.61)

"BLD",9491,"KRN","B",771,771)

"BLD",9491,"KRN","B",779.2,779.2)

"BLD",9491,"KRN","B",870,870)

"BLD",9491,"KRN","B",8989.51,8989.51)

"BLD",9491,"KRN","B",8989.52,8989.52)

"BLD",9491,"KRN","B",8994,8994)

"BLD",9491,"QUES",0)
^9.62^^
"BLD",9491,"REQB",0)
^9.611^2^2
"BLD",9491,"REQB",1,0)
ECX*3.0*153^1
"BLD",9491,"REQB",2,0)
ECX*3.0*156^1
"BLD",9491,"REQB","B","ECX*3.0*153",1)

"BLD",9491,"REQB","B","ECX*3.0*156",2)

"FIA",727.802)
ADMISSION EXTRACT
"FIA",727.802,0)
^ECX(727.802,
"FIA",727.802,0,0)
727.802
"FIA",727.802,0,1)
y^y^p^^^^n^^n
"FIA",727.802,0,10)

"FIA",727.802,0,11)

"FIA",727.802,0,"RLRO")

"FIA",727.802,0,"VR")
3.0^ECX
"FIA",727.802,727.802)
1
"FIA",727.802,727.802,1)

"FIA",727.802,727.802,18)

"FIA",727.802,727.802,28)

"FIA",727.802,727.802,57)

"FIA",727.802,727.802,93)

"FIA",727.808)
PHYSICAL MOVEMENT EXTRACT
"FIA",727.808,0)
^ECX(727.808,
"FIA",727.808,0,0)
727.808
"FIA",727.808,0,1)
y^y^p^^^^n^^n
"FIA",727.808,0,10)

"FIA",727.808,0,11)

"FIA",727.808,0,"RLRO")

"FIA",727.808,0,"VR")
3.0^ECX
"FIA",727.808,727.808)
1
"FIA",727.808,727.808,13)

"FIA",727.808,727.808,26)

"FIA",727.808,727.808,27)

"FIA",727.809)
UNIT DOSE LOCAL EXTRACT
"FIA",727.809,0)
^ECX(727.809,
"FIA",727.809,0,0)
727.809
"FIA",727.809,0,1)
y^y^p^^^^n^^n
"FIA",727.809,0,10)

"FIA",727.809,0,11)

"FIA",727.809,0,"RLRO")

"FIA",727.809,0,"VR")
3.0^ECX
"FIA",727.809,727.809)
1
"FIA",727.809,727.809,4)

"FIA",727.809,727.809,7)

"FIA",727.809,727.809,11)

"FIA",727.809,727.809,12)

"FIA",727.809,727.809,15)

"FIA",727.809,727.809,25)

"FIA",727.809,727.809,26)

"FIA",727.809,727.809,44)

"FIA",727.809,727.809,68)

"FIA",727.809,727.809,69)

"FIA",727.809,727.809,77)

"FIA",727.809,727.809,82)

"FIA",727.809,727.809,83)

"FIA",727.81)
PRESCRIPTION EXTRACT
"FIA",727.81,0)
^ECX(727.81,
"FIA",727.81,0,0)
727.81
"FIA",727.81,0,1)
y^y^p^^^^n^^n
"FIA",727.81,0,10)

"FIA",727.81,0,11)

"FIA",727.81,0,"RLRO")

"FIA",727.81,0,"VR")
3.0^ECX
"FIA",727.81,727.81)
1
"FIA",727.81,727.81,7)

"FIA",727.81,727.81,9)

"FIA",727.81,727.81,11)

"FIA",727.81,727.81,14)

"FIA",727.81,727.81,17)

"FIA",727.81,727.81,33)

"FIA",727.81,727.81,54)

"FIA",727.81,727.81,56)

"FIA",727.81,727.81,61)

"FIA",727.81,727.81,70)

"FIA",727.81,727.81,75)

"FIA",727.81,727.81,98)

"FIA",727.81,727.81,105)

"FIA",727.811)
SURGERY EXTRACT
"FIA",727.811,0)
^ECX(727.811,
"FIA",727.811,0,0)
727.811
"FIA",727.811,0,1)
y^y^p^^^^n^^n
"FIA",727.811,0,10)

"FIA",727.811,0,11)

"FIA",727.811,0,"RLRO")

"FIA",727.811,0,"VR")
3.0^ECX
"FIA",727.811,727.811)
1
"FIA",727.811,727.811,4)

"FIA",727.811,727.811,7)

"FIA",727.811,727.811,20)

"FIA",727.811,727.811,27)

"FIA",727.811,727.811,34)

"FIA",727.811,727.811,47)

"FIA",727.811,727.811,48)

"FIA",727.811,727.811,49)

"FIA",727.811,727.811,54)

"FIA",727.811,727.811,64)

"FIA",727.811,727.811,73)

"FIA",727.811,727.811,74)

"FIA",727.811,727.811,75)

"FIA",727.811,727.811,76)

"FIA",727.811,727.811,80)

"FIA",727.811,727.811,107)

"FIA",727.811,727.811,110)

"FIA",727.811,727.811,120)

"FIA",727.811,727.811,126)

"FIA",727.811,727.811,127)

"FIA",727.811,727.811,128)

"FIA",727.811,727.811,129)

"FIA",727.811,727.811,130)

"FIA",727.811,727.811,131)

"FIA",727.813)
LABORATORY EXTRACT
"FIA",727.813,0)
^ECX(727.813,
"FIA",727.813,0,0)
727.813
"FIA",727.813,0,1)
y^y^p^^^^n^^n
"FIA",727.813,0,10)

"FIA",727.813,0,11)

"FIA",727.813,0,"RLRO")

"FIA",727.813,0,"VR")
3.0^ECX
"FIA",727.813,727.813)
1
"FIA",727.813,727.813,7)

"FIA",727.813,727.813,8)

"FIA",727.813,727.813,18)

"FIA",727.813,727.813,30)

"FIA",727.813,727.813,31)

"FIA",727.813,727.813,33)

"FIA",727.813,727.813,46)

"FIA",727.813,727.813,47)

"FIA",727.814)
RADIOLOGY EXTRACT
"FIA",727.814,0)
^ECX(727.814,
"FIA",727.814,0,0)
727.814
"FIA",727.814,0,1)
y^y^p^^^^n^^n
"FIA",727.814,0,10)

"FIA",727.814,0,11)

"FIA",727.814,0,"RLRO")

"FIA",727.814,0,"VR")
3.0^ECX
"FIA",727.814,727.814)
1
"FIA",727.814,727.814,7)

"FIA",727.814,727.814,12)

"FIA",727.814,727.814,13)

"FIA",727.814,727.814,18)

"FIA",727.814,727.814,20)

"FIA",727.814,727.814,31)

"FIA",727.814,727.814,32)

"FIA",727.814,727.814,34)

"FIA",727.814,727.814,48)

"FIA",727.814,727.814,49)

"FIA",727.814,727.814,53)

"FIA",727.815)
EVENT CAPTURE LOCAL EXTRACT
"FIA",727.815,0)
^ECX(727.815,
"FIA",727.815,0,0)
727.815
"FIA",727.815,0,1)
y^y^p^^^^n^^n
"FIA",727.815,0,10)

"FIA",727.815,0,11)

"FIA",727.815,0,"RLRO")

"FIA",727.815,0,"VR")
3.0^ECX
"FIA",727.815,727.815)
1
"FIA",727.815,727.815,1)

"FIA",727.815,727.815,5)

"FIA",727.815,727.815,7)

"FIA",727.815,727.815,61)

"FIA",727.815,727.815,77)

"FIA",727.815,727.815,89)

"FIA",727.815,727.815,106)

"FIA",727.815,727.815,107)

"FIA",727.815,727.815,108)

"FIA",727.815,727.815,109)

"FIA",727.815,727.815,110)

"FIA",727.815,727.815,119)

"FIA",727.815,727.815,120)

"FIA",727.815,727.815,128)

"FIA",727.817)
TREATING SPECIALTY CHANGE EXTRACT
"FIA",727.817,0)
^ECX(727.817,
"FIA",727.817,0,0)
727.817
"FIA",727.817,0,1)
y^y^p^^^^n^^n
"FIA",727.817,0,10)

"FIA",727.817,0,11)

"FIA",727.817,0,"RLRO")

"FIA",727.817,0,"VR")
3.0^ECX
"FIA",727.817,727.817)
1
"FIA",727.817,727.817,1)

"FIA",727.817,727.817,5)

"FIA",727.817,727.817,7)

"FIA",727.817,727.817,14)

"FIA",727.817,727.817,32)

"FIA",727.817,727.817,33)

"FIA",727.817,727.817,44)

"FIA",727.819)
IV DETAIL EXTRACT
"FIA",727.819,0)
^ECX(727.819,
"FIA",727.819,0,0)
727.819
"FIA",727.819,0,1)
y^y^p^^^^n^^n
"FIA",727.819,0,10)

"FIA",727.819,0,11)

"FIA",727.819,0,"RLRO")

"FIA",727.819,0,"VR")
3.0^ECX
"FIA",727.819,727.819)
1
"FIA",727.819,727.819,3)

"FIA",727.819,727.819,4)

"FIA",727.819,727.819,7)

"FIA",727.819,727.819,34)

"FIA",727.819,727.819,35)

"FIA",727.819,727.819,38)

"FIA",727.819,727.819,57)

"FIA",727.819,727.819,74)

"FIA",727.819,727.819,82)

"FIA",727.819,727.819,83)

"FIA",727.819,727.819,87)

"FIA",727.819,727.819,88)

"FIA",727.824)
LAB RESULTS EXTRACT
"FIA",727.824,0)
^ECX(727.824,
"FIA",727.824,0,0)
727.824
"FIA",727.824,0,1)
y^y^p^^^^n^^n
"FIA",727.824,0,10)

"FIA",727.824,0,11)

"FIA",727.824,0,"RLRO")

"FIA",727.824,0,"VR")
3.0^ECX
"FIA",727.824,727.824)
1
"FIA",727.824,727.824,7)

"FIA",727.824,727.824,19)

"FIA",727.824,727.824,22)

"FIA",727.824,727.824,24)

"FIA",727.824,727.824,32)

"FIA",727.825)
QUASAR EXTRACT
"FIA",727.825,0)
^ECX(727.825,
"FIA",727.825,0,0)
727.825
"FIA",727.825,0,1)
y^y^p^^^^n^^n
"FIA",727.825,0,10)

"FIA",727.825,0,11)

"FIA",727.825,0,"RLRO")

"FIA",727.825,0,"VR")
3.0^ECX
"FIA",727.825,727.825)
1
"FIA",727.825,727.825,1)

"FIA",727.825,727.825,5)

"FIA",727.825,727.825,7)

"FIA",727.825,727.825,61)

"FIA",727.825,727.825,77)

"FIA",727.825,727.825,89)

"FIA",727.825,727.825,106)

"FIA",727.825,727.825,107)

"FIA",727.825,727.825,108)

"FIA",727.825,727.825,109)

"FIA",727.825,727.825,110)

"FIA",727.825,727.825,119)

"FIA",727.825,727.825,120)

"FIA",727.825,727.825,128)

"FIA",727.826)
PROSTHETICS EXTRACT
"FIA",727.826,0)
^ECX(727.826,
"FIA",727.826,0,0)
727.826
"FIA",727.826,0,1)
y^y^p^^^^n^^n
"FIA",727.826,0,10)

"FIA",727.826,0,11)

"FIA",727.826,0,"RLRO")

"FIA",727.826,0,"VR")
3.0^ECX
"FIA",727.826,727.826)
1
"FIA",727.826,727.826,7)

"FIA",727.826,727.826,8)

"FIA",727.826,727.826,10)

"FIA",727.826,727.826,14)

"FIA",727.826,727.826,23)

"FIA",727.826,727.826,24)

"FIA",727.826,727.826,53)

"FIA",727.826,727.826,59)

"FIA",727.826,727.826,91)

"FIA",727.826,727.826,92)

"FIA",727.826,727.826,93)

"FIA",727.826,727.826,94)

"FIA",727.826,727.826,95)

"FIA",727.826,727.826,96)

"FIA",727.826,727.826,103)

"FIA",727.827)
CLINIC EXTRACT
"FIA",727.827,0)
^ECX(727.827,
"FIA",727.827,0,0)
727.827
"FIA",727.827,0,1)
y^y^p^^^^n^^n
"FIA",727.827,0,10)

"FIA",727.827,0,11)

"FIA",727.827,0,"RLRO")

"FIA",727.827,0,"VR")
3.0^ECX
"FIA",727.827,727.827)
1
"FIA",727.827,727.827,7)

"FIA",727.827,727.827,11)

"FIA",727.827,727.827,38)

"FIA",727.827,727.827,41)

"FIA",727.827,727.827,45)

"FIA",727.827,727.827,56)

"FIA",727.827,727.827,65)

"FIA",727.827,727.827,78)

"FIA",727.827,727.827,84)

"FIA",727.827,727.827,93)

"FIA",727.827,727.827,95)

"FIA",727.827,727.827,97)

"FIA",727.827,727.827,100)

"FIA",727.827,727.827,103)

"FIA",727.827,727.827,106)

"FIA",727.827,727.827,109)

"FIA",727.827,727.827,112)

"FIA",727.827,727.827,113)

"FIA",727.827,727.827,114)

"FIA",727.827,727.827,115)

"FIA",727.827,727.827,116)

"FIA",727.827,727.827,120)

"FIA",727.827,727.827,123)

"FIA",727.827,727.827,127)

"FIA",727.827,727.827,130)

"FIA",727.829)
BLOOD BANK EXTRACT
"FIA",727.829,0)
^ECX(727.829,
"FIA",727.829,0,0)
727.829
"FIA",727.829,0,1)
y^y^p^^^^n^^n
"FIA",727.829,0,10)

"FIA",727.829,0,11)

"FIA",727.829,0,"RLRO")

"FIA",727.829,0,"VR")
3.0^ECX
"FIA",727.829,727.829)
1
"FIA",727.829,727.829,1)

"FIA",727.829,727.829,7)

"FIA",727.829,727.829,30)

"FIA",727.833)
BCMA EXTRACT
"FIA",727.833,0)
^ECX(727.833,
"FIA",727.833,0,0)
727.833
"FIA",727.833,0,1)
y^y^p^^^^n^^n
"FIA",727.833,0,10)

"FIA",727.833,0,11)

"FIA",727.833,0,"RLRO")

"FIA",727.833,0,"VR")
3.0^ECX
"FIA",727.833,727.833)
1
"FIA",727.833,727.833,1)

"FIA",727.833,727.833,7)

"FIA",727.833,727.833,11)

"FIA",727.833,727.833,12)

"FIA",727.833,727.833,13)

"FIA",727.833,727.833,15)

"FIA",727.833,727.833,16)

"FIA",727.833,727.833,17)

"FIA",727.833,727.833,23)

"FIA",727.833,727.833,25)

"FIA",727.833,727.833,26)

"FIA",727.833,727.833,27)

"FIA",727.833,727.833,28)

"FIA",727.833,727.833,29)

"FIA",727.833,727.833,30)

"FIA",727.833,727.833,31)

"FIA",727.833,727.833,32)

"FIA",727.833,727.833,33)

"FIA",727.833,727.833,34)

"FIA",727.833,727.833,35)

"FIA",727.833,727.833,36)

"FIA",727.833,727.833,37)

"FIA",727.833,727.833,38)

"FIA",727.833,727.833,39)

"FIA",727.833,727.833,40)

"FIA",727.833,727.833,41)

"FIA",727.833,727.833,42)

"FIA",727.833,727.833,43)

"FIA",727.833,727.833,45)

"FIA",727.833,727.833,47)

"FIA",727.833,727.833,48)

"FIA",727.833,727.833,50)

"FIA",727.833,727.833,52)

"FIA",727.833,727.833,53)

"FIA",727.833,727.833,55)

"FIA",727.833,727.833,56)

"FIA",727.833,727.833,57)

"FIA",727.833,727.833,60)

"FIA",727.833,727.833,62)

"FIA",727.833,727.833,66)

"FIA",727.833,727.833,67)

"FIA",727.833,727.833,69)

"FIA",727.833,727.833,70)

"FIA",727.833,727.833,71)

"FIA",727.833,727.833,72)

"FIA",727.833,727.833,73)

"FIA",727.833,727.833,74)

"FIA",727.833,727.833,77)

"FIA",727.833,727.833,78)

"FIA",727.833,727.833,79)

"FIA",727.833,727.833,80)

"FIA",728.44)
CLINICS AND STOP CODES
"FIA",728.44,0)
^ECX(728.44,
"FIA",728.44,0,0)
728.44P
"FIA",728.44,0,1)
y^y^p^^^^n^^n
"FIA",728.44,0,10)

"FIA",728.44,0,11)

"FIA",728.44,0,"RLRO")

"FIA",728.44,0,"VR")
3.0^ECX
"FIA",728.44,728.44)
1
"FIA",728.44,728.44,5)

"INIT")
POST^ECX3P154
"KRN",.4,2326,-1)
0^1
"KRN",.4,2326,0)
ECX CLINIC CODE^3150311.112^^728.441^^^3150831^
"KRN",.4,2326,"F",1)
.01~1~
"KRN",.4,2326,"H")
CHAR4 CODE LIST
"KRN",.4,2835,-1)
0^2
"KRN",.4,2835,0)
ECX CLINIC REVIEW EXPORT^3150303.1511^@^728.44^^@^3150831
"KRN",.4,2835,"DXS")
5
"KRN",.4,2835,"DXS",1,9.2)
S DIP(2)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^",DIP(1)=$G(X) S X=$P(DIP(2),U,7) S:X X=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3) S Y=X,X=DIP(1),X=X S X=X
"KRN",.4,2835,"DXS",2,9.2)
S DIP(102)=$S($D(^SC(D0,"I")):^("I"),1:"") S X="^",DIP(101)=$G(X) S X=$P(DIP(102),U,1) S:X X=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3) S Y=X,X=DIP(101),X=X S X=X
"KRN",.4,2835,"DXS",3,9.2)
S DIP(102)=$S($D(^SC(D0,"I")):^("I"),1:"") S X="^",DIP(101)=$G(X) S X=$P(DIP(102),U,2) S:X X=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3) S Y=X,X=DIP(101),X=X S X=X
"KRN",.4,2835,"DXS",4,9)
S DIP(102)=$C(59)_$P($G(^DD(44,2502,0)),U,3),DIP(101)=$S($D(^SC(D0,0)):^(0),1:"") S X="^"_$P($P(DIP(102),$C(59)_$P(DIP(101),U,17)_":",2),$C(59))
"KRN",.4,2835,"F",1)
0;XL5~S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P($G(^SC(+$P(DIP(1),U,1),0)),U) W X K DIP;X;Z;""^"_CLINIC NAME"~
"KRN",.4,2835,"F",2)
S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P(DIP(1),U,2) W X K DIP;XL4;Z;""^"_STOP CODE"~
"KRN",.4,2835,"F",3)
S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P(DIP(1),U,3) W X K DIP;XL4;Z;""^"_CREDIT STOP CODE"~
"KRN",.4,2835,"F",4)
S DIP(2)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^",DIP(1)=$G(X) S X=$P(DIP(2),U,6),X=X S Y=X,X=DIP(1),X=X S X=X_Y W X K DIP;XL2;Z;""^"_INTERNAL(ACTION TO SEND)"~
"KRN",.4,2835,"F",5)
X DXS(1,9.2) S X=X_Y W X K DIP;XL9;Z;""^"_NUMDATE(DATE LAST REVIEWED)"~
"KRN",.4,2835,"F",6)
S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P($G(^ECX(728.441,+$P(DIP(1),U,8),0)),U) W X K DIP;XL5;Z;""^"_NATIONAL CODE"~
"KRN",.4,2835,"F",7)
-44,^SC(^^S I(0,0)=D0 S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X=$P(DIP(1),U,1),X=X  S D(0)=+X;Z;"CLINIC NAME:"~
"KRN",.4,2835,"F",8)
-44,X DXS(2,9.2) S X=X_Y W X K DIP;XL9;Z;""^"_NUMDATE(INACTIVATE DATE)"~-44,X DXS(3,9.2) S X=X_Y W X K DIP;XL9;Z;""^"_NUMDATE(REACTIVATE DATE)"~
"KRN",.4,2835,"F",9)
-44,S DIP(102)=$C(59)_$P($G(^DD(44,2,0)),U,3),DIP(101)=$S($D(^SC(D0,0)):^(0),1:"") S X="^"_$P($P(DIP(102),$C(59)_$P(DIP(101),U,3)_":",2),$C(59)) W X K DIP;XL4;Z;""^"_TYPE"~
"KRN",.4,2835,"F",10)
-44,S DIP(101)=$S($D(^SC(D0,"SL")):^("SL"),1:"") S X="^"_$P(DIP(101),U,1) W X K DIP;XL4;Z;""^"_LENGTH OF APP'T"~
"KRN",.4,2835,"F",11)
-44,S DIP(102)=$S($D(^SC(D0,0)):^(0),1:"") S X="^",DIP(101)=$G(X) S X=$P(DIP(102),U,15),X=X S Y=X,X=DIP(101),X=X S X=X_Y W X K DIP;XL4;Z;""^"_INTERNAL(DIVISION)"~
"KRN",.4,2835,"F",12)
-44,S DIP(101)=$S($D(^SC(D0,"AT")):^("AT"),1:"") S X="^"_$P($G(^SD(409.1,+$P(DIP(101),U,1),0)),U) W X K DIP;XL11;Z;""^"_DEFAULT APPOINTMENT TYPE"~
"KRN",.4,2835,"F",13)
-44,X DXS(4,9) W X K DIP;X;Z;""^"_NON-COUNT CLINIC? (Y OR N)"~
"KRN",.4,2835,"F",14)
-44,S DIP(102)=$C(59)_$P($G(^DD(44,50.01,0)),U,3),DIP(101)=$S($D(^SC(D0,"OOS")):^("OOS"),1:"") S X="^"_$P($P(DIP(102),$C(59)_$P(DIP(101),U,1)_":",2),$C(59)) W X K DIP;X;Z;""^"_OCCA"~
"KRN",.4,2835,"F",15)
-44,S DIP(101)=$S($D(^SC(D0,"OOS")):^("OOS"),1:"") S X="^"_$P($G(^DIC(9.4,+$P(DIP(101),U,2),0)),U) W X K DIP;X;Z;""^"_OOS"~
"KRN",.4,2835,"F",16)
-44,S DIP(102)=$S($D(^SC(D0,"SL")):^("SL"),1:"") S X="^",DIP(101)=$G(X) S X=$P(DIP(102),U,2),X=X S Y=X,X=DIP(101),X=X S X=X_Y W X K DIP;Z;""^"_INTERNAL(VARIABLE)"~
"KRN",.4,2835,"F",17)
S DIP(1)=$S($D(^ECX(728.44,D0,0)):^(0),1:"") S X="^"_$P(DIP(1),U,11) W X K DIP;Z;""^"_DSS PRODUCT"~
"KRN",.4,2835,"H")
@@
"KRN",19,12979,-1)
0^2
"KRN",19,12979,0)
ECX PHA VOL EDIT LOG^Pharmacy Volume Edit Log^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12979,1,0)
^^3^3^3150720^
"KRN",19,12979,1,1,0)
This option will allow authorized users to view edit changes made to the 
"KRN",19,12979,1,2,0)
Pharmacy extracts (BCM, IVP, PRE and UDP) through the Pharmacy Edit Option
"KRN",19,12979,1,3,0)
[ECX PHA VOL EDIT].
"KRN",19,12979,25)
EN^ECXPHAU
"KRN",19,12979,"U")
PHARMACY VOLUME EDIT LOG
"KRN",19,12980,-1)
0^1
"KRN",19,12980,0)
ECX PHA VOL EDIT^Pharmacy Volume Edit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,12980,1,0)
^^6^6^3150720^
"KRN",19,12980,1,1,0)
This option will allow authorized users to edit the Pharmacy extracts
"KRN",19,12980,1,2,0)
(BCM, IVP, PRE or UDP). Corrections will be allowed to the Quantity field 
"KRN",19,12980,1,3,0)
for the IVP, PRE and UDP extracts. Additionally, correction will be 
"KRN",19,12980,1,4,0)
allowed to the Unit of Issue field for the PRE extract and the Total 
"KRN",19,12980,1,5,0)
Doses per Day for the IVP extract. For the BCM extract, correction will 
"KRN",19,12980,1,6,0)
be allowed for the Component Dose Given and Component Units fields.
"KRN",19,12980,25)
EN^ECXPHVE
"KRN",19,12980,"U")
PHARMACY VOLUME EDIT
"KRN",19,12981,-1)
0^3
"KRN",19,12981,0)
ECX PHA EDIT^Pharmacy Edit and Edit Log^^M^^ECXPVE^^^^^^DSS EXTRACTS
"KRN",19,12981,1,0)
^^3^3^3150721^
"KRN",19,12981,1,1,0)
This option will allow authorized users (i.e. holders of the ECXPVE 
"KRN",19,12981,1,2,0)
key) to edit the Pharmacy extracts (BCM, IVP, PRE or UDP). It will also
"KRN",19,12981,1,3,0)
allow the user to view the Pharmacy log with edit changes.
"KRN",19,12981,10,0)
^19.01IP^4^2
"KRN",19,12981,10,3,0)
12980^1
"KRN",19,12981,10,3,"^")
ECX PHA VOL EDIT
"KRN",19,12981,10,4,0)
12979^2
"KRN",19,12981,10,4,"^")
ECX PHA VOL EDIT LOG
"KRN",19,12981,99)
61618,38230
"KRN",19,12981,"U")
PHARMACY EDIT AND EDIT LOG
"KRN",19.1,545,-1)
0^1
"KRN",19.1,545,0)
ECX DSS TEST^DSS FY Conversion Testing
"KRN",19.1,545,1,0)
^19.11^8^8^3110513^^^^
"KRN",19.1,545,1,1,0)
This key controls access to the ECX FISCAL YEAR EXTRACT option.  It 
"KRN",19.1,545,1,2,0)
should be given only to holders of the ECXMGR key whenever the site
"KRN",19.1,545,1,3,0)
has been enrolled as an official DSS test site for fiscal year
"KRN",19.1,545,1,4,0)
conversion.
"KRN",19.1,545,1,5,0)
  
"KRN",19.1,545,1,6,0)
This key should be removed from the user(s) whenever the
"KRN",19.1,545,1,7,0)
nationally released version of the DSS Fiscal Year patch is
"KRN",19.1,545,1,8,0)
installed.
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",535,-1)
1^1
"PKG",535,0)
DSS EXTRACTS^ECX
"PKG",535,20,0)
^9.402P^^
"PKG",535,22,0)
^9.49I^1^1
"PKG",535,22,1,0)
3.0^2971222^3000224^66481
"PKG",535,22,1,"PAH",1,0)
154^3151008
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
38
"RTN","ECX3P154")
0^7^B22938446^n/a
"RTN","ECX3P154",1,0)
ECX3P154 ;ALB/DAN - DSS FY2016 Conversion, Post-init ;5/19/15  15:32
"RTN","ECX3P154",2,0)
 ;;3.0;DSS EXTRACTS;**154**;Dec 22, 1997;Build 13
"RTN","ECX3P154",3,0)
 ;
"RTN","ECX3P154",4,0)
POST ;Post-install items
"RTN","ECX3P154",5,0)
 N UPDATE
"RTN","ECX3P154",6,0)
 D TEST ;Set testing site information
"RTN","ECX3P154",7,0)
 D FIXATS ;Change any action to send values from 3 or 7 to 5
"RTN","ECX3P154",8,0)
 D AUDIT ;Clean up audit files
"RTN","ECX3P154",9,0)
 D CHKDSS ;Look for DSS Units that don't have an associated stop code
"RTN","ECX3P154",10,0)
 D MAIL ;Send email with results of DSS Unit check
"RTN","ECX3P154",11,0)
 D MENU ;update menus
"RTN","ECX3P154",12,0)
 Q
"RTN","ECX3P154",13,0)
 ;
"RTN","ECX3P154",14,0)
TEST ;turn-on fld #73 in file #728 for Field Test Site;
"RTN","ECX3P154",15,0)
 ;allows use of option ECX FISCAL YEAR EXTRACT by test sites;
"RTN","ECX3P154",16,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P154",17,0)
 D MES^XPDUTL("Providing special menu option access for DSS FY Conversion test sites.")
"RTN","ECX3P154",18,0)
 D TESTON^ECXTREX(XPDNM,"FY2016")
"RTN","ECX3P154",19,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P154",20,0)
 ;if this is the national released version, then fld #73 will be turned-off
"RTN","ECX3P154",21,0)
 ;the first time any user attempts to use ECX FISCAL YEAR EXTRACT option
"RTN","ECX3P154",22,0)
 Q
"RTN","ECX3P154",23,0)
 ;
"RTN","ECX3P154",24,0)
FIXATS ;Update action to send field in file 728.44 from 3 or 7 to 5, if found.
"RTN","ECX3P154",25,0)
 N CIEN
"RTN","ECX3P154",26,0)
 D BMES^XPDUTL("Checking ACTION TO SEND field in the CLINICS AND STOP CODES file...")
"RTN","ECX3P154",27,0)
 S CIEN=0 F  S CIEN=$O(^ECX(728.44,CIEN)) Q:'+CIEN  I "^3^7^"[("^"_$P($G(^ECX(728.44,CIEN,0)),U,6)_"^") S $P(^ECX(728.44,CIEN,0),U,6)=5,$P(^ECX(728.44,CIEN,0),U,7)=""
"RTN","ECX3P154",28,0)
 D MES^XPDUTL("Check complete!")
"RTN","ECX3P154",29,0)
 Q
"RTN","ECX3P154",30,0)
 ;
"RTN","ECX3P154",31,0)
AUDIT ;Delete audit logs for select extract files
"RTN","ECX3P154",32,0)
 N FILE
"RTN","ECX3P154",33,0)
 D BMES^XPDUTL("Deleting audit logs for files 727.809, 727.81, and 727.819...")
"RTN","ECX3P154",34,0)
 F FILE=727.809,727.81,727.819 K ^DIA(FILE)
"RTN","ECX3P154",35,0)
 D MES^XPDUTL("Process complete!")
"RTN","ECX3P154",36,0)
 Q
"RTN","ECX3P154",37,0)
CHKDSS ;Check DSS Units and report any that don't have a stop code
"RTN","ECX3P154",38,0)
 N UNIT,DSS0
"RTN","ECX3P154",39,0)
 S UNIT=0 F  S UNIT=$O(^ECD(UNIT)) Q:'+UNIT  D
"RTN","ECX3P154",40,0)
 .S DSS0=$G(^ECD(UNIT,0))
"RTN","ECX3P154",41,0)
 .I $P(DSS0,U,6) Q  ;DSS Unit is inactive
"RTN","ECX3P154",42,0)
 .I $P(DSS0,U,14)'="N" Q  ;only look at "send no records" units
"RTN","ECX3P154",43,0)
 .I $P(DSS0,U,10)="" S UPDATE($P(DSS0,U),UNIT)="" ;DSS Unit doesn't have a stop code assigned
"RTN","ECX3P154",44,0)
 Q
"RTN","ECX3P154",45,0)
MAIL ;Send email with results to holders of the ECXMGR key
"RTN","ECX3P154",46,0)
 N XMSUB,XMTEXT,XMDUZ,XMY,XMZ,CNT,DIFROM,ECXTEXT,NUM,NAME
"RTN","ECX3P154",47,0)
 S XMDUZ="PATCH ECX*3*154 POST-INSTALL"
"RTN","ECX3P154",48,0)
 D GETXMY("ECXMGR",.XMY)
"RTN","ECX3P154",49,0)
 S ECXTEXT(1)="The check for active DSS Units with a 'Send no records' PCE setting",ECXTEXT(2)="and without an associated stop code has completed.  Below are the results."
"RTN","ECX3P154",50,0)
 S ECXTEXT(3)=""
"RTN","ECX3P154",51,0)
 I '$D(UPDATE) S ECXTEXT(4)="No DSS Units were identified.  No further action is required."
"RTN","ECX3P154",52,0)
 S CNT=4 ;start with line 4 to add to message
"RTN","ECX3P154",53,0)
 I $D(UPDATE) D
"RTN","ECX3P154",54,0)
 .S ECXTEXT(CNT)="The following DSS Units do not have a stop code assigned:",CNT=CNT+1,ECXTEXT(CNT)="",CNT=CNT+1
"RTN","ECX3P154",55,0)
 .S ECXTEXT(CNT)="NAME"_$$REPEAT^XLFSTR(" ",28)_"DSS IEN",CNT=CNT+1,ECXTEXT(CNT)="----"_$$REPEAT^XLFSTR(" ",28)_"-------",CNT=CNT+1
"RTN","ECX3P154",56,0)
 .S NAME="" F  S NAME=$O(UPDATE(NAME)) Q:NAME=""  S NUM=0 F  S NUM=$O(UPDATE(NAME,NUM)) Q:'+NUM  S ECXTEXT(CNT)=NAME_$$REPEAT^XLFSTR(" ",(32-$L(NAME)))_NUM,CNT=CNT+1
"RTN","ECX3P154",57,0)
 S XMTEXT="ECXTEXT(",XMSUB="DSS Unit stop code review"
"RTN","ECX3P154",58,0)
 D ^XMD
"RTN","ECX3P154",59,0)
 Q
"RTN","ECX3P154",60,0)
 ;
"RTN","ECX3P154",61,0)
GETXMY(KEY,XMY) ;Put holders of the KEY into the XMY array to be recipients of the email
"RTN","ECX3P154",62,0)
 I $G(KEY)'="" M XMY=^XUSEC(KEY)
"RTN","ECX3P154",63,0)
 S:$G(DUZ) XMY(DUZ)="" ;Make sure there's at least one recipient
"RTN","ECX3P154",64,0)
 Q
"RTN","ECX3P154",65,0)
 ;
"RTN","ECX3P154",66,0)
MENU ;update menus
"RTN","ECX3P154",67,0)
 N DA,DIE,DR,MENU,OPTION,CHECK,IEN
"RTN","ECX3P154",68,0)
 D BMES^XPDUTL("Updating option ECX NATIONAL CLINIC...")
"RTN","ECX3P154",69,0)
 S DA=$$LKOPT^XPDMENU("ECX NATIONAL CLINIC")
"RTN","ECX3P154",70,0)
 I 'DA D MES^XPDUTL("Update failed - contact product support for assistance!")
"RTN","ECX3P154",71,0)
 S DIE="^DIC(19,",DR="1///CHAR4 Codes List"
"RTN","ECX3P154",72,0)
 D ^DIE
"RTN","ECX3P154",73,0)
 D MES^XPDUTL("Update successful.")
"RTN","ECX3P154",74,0)
 D BMES^XPDUTL("Updating option ECX CLN STOP REP...")
"RTN","ECX3P154",75,0)
 S DA=$$LKOPT^XPDMENU("ECX CLN STOP REP")
"RTN","ECX3P154",76,0)
 I 'DA D MES^XPDUTL("Update failed - contact product support for assistance!")
"RTN","ECX3P154",77,0)
 S DIE="^DIC(19,",DR="1///Stop Code Non-Conforming Clinics Report"
"RTN","ECX3P154",78,0)
 D ^DIE
"RTN","ECX3P154",79,0)
 D MES^XPDUTL("Update successful.")
"RTN","ECX3P154",80,0)
 D BMES^XPDUTL("Updating option ECXSCEDIT...")
"RTN","ECX3P154",81,0)
 S DA=$$LKOPT^XPDMENU("ECXSCEDIT")
"RTN","ECX3P154",82,0)
 I 'DA D MES^XPDUTL("Update failed - contact product support for assistance!")
"RTN","ECX3P154",83,0)
 S DIE="^DIC(19,",DR="1///Enter/Edit Clinic Parameters"
"RTN","ECX3P154",84,0)
 D ^DIE
"RTN","ECX3P154",85,0)
 D MES^XPDUTL("Update successful.")
"RTN","ECX3P154",86,0)
 D BMES^XPDUTL("Updating option ECX STOP CODE VALIDITY...")
"RTN","ECX3P154",87,0)
 S DA=$$LKOPT^XPDMENU("ECX STOP CODE VALIDITY")
"RTN","ECX3P154",88,0)
 I 'DA D MES^XPDUTL("Update failed - contact product support for assistance!")
"RTN","ECX3P154",89,0)
 S DIE="^DIC(19,",DR="1///Clinic & Stop Codes Validity Report"
"RTN","ECX3P154",90,0)
 D ^DIE
"RTN","ECX3P154",91,0)
 D MES^XPDUTL("Update successful.")
"RTN","ECX3P154",92,0)
 Q
"RTN","ECXADM")
0^35^B61935470^B61384151
"RTN","ECXADM",1,0)
ECXADM ;ALB/JAP,BIR/DMA,CML,PTD-Admissions Extract ;9/3/15  17:33
"RTN","ECXADM",2,0)
 ;;3.0;DSS EXTRACTS;**1,4,11,8,13,24,33,39,46,71,84,92,107,105,120,127,132,136,144,149,154**;Dec 22, 1997;Build 13
"RTN","ECXADM",3,0)
BEG ;entry point from option
"RTN","ECXADM",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXADM",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXADM",6,0)
 Q
"RTN","ECXADM",7,0)
 ;
"RTN","ECXADM",8,0)
START ; start package specific extract
"RTN","ECXADM",9,0)
 K ^TMP($J,"EDIS") ;136 Clear temporary space for index
"RTN","ECXADM",10,0)
 D BLDXREF^ECXUTL1(ECSD,ECED) ;136 build temp xref for emergency dept
"RTN","ECXADM",11,0)
 S QFLG=0
"RTN","ECXADM",12,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXADM",13,0)
 F  S ECD=$O(^DGPM("ATT1",ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D
"RTN","ECXADM",14,0)
 .F  S ECDA=$O(^DGPM("ATT1",ECD,ECDA)) Q:ECDA=""  D
"RTN","ECXADM",15,0)
 ..I $D(^DGPM(ECDA,0)) D
"RTN","ECXADM",16,0)
 ...S EC=^DGPM(ECDA,0),ECXDFN=$P(EC,U,3) D GET
"RTN","ECXADM",17,0)
 K ^TMP($J,"EDIS") ;136 delete temporary xref
"RTN","ECXADM",18,0)
 Q
"RTN","ECXADM",19,0)
 ;
"RTN","ECXADM",20,0)
GET ;gather extract data
"RTN","ECXADM",21,0)
 N ADM,W,X,ECXNPRFI,ECXATTPC,ECXPRVPC,ECXEST,ECXAOT,ECXEDIS,ECXICD10P ;136
"RTN","ECXADM",22,0)
 N ECXESC,ECXECL,ECXCLST ;144 Encounter Service Connected, Encounter Camp Lejeune, Camp Lejeune Status
"RTN","ECXADM",23,0)
 ;patient demographics
"RTN","ECXADM",24,0)
 S ECXERR=0 D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXADM",25,0)
 Q:ECXERR
"RTN","ECXADM",26,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXADM",27,0)
 S ECXFAC=$P($G(^DIC(42,+$P(EC,U,6),0)),U,11)
"RTN","ECXADM",28,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC)  ;Get production division
"RTN","ECXADM",29,0)
 ;admission data
"RTN","ECXADM",30,0)
 S ELGA=$P($G(^DIC(8,+$P(EC,U,20),0)),U,9)
"RTN","ECXADM",31,0)
 I ELGA S ELGA=$$ELIG^ECXUTL3(ELGA,ECXSVC)
"RTN","ECXADM",32,0)
 S (ECDRG,ECDIA,ECXSADM,ECXADMS,ECXAOT,ECXICD10P)="",ECPTF=+$P(EC,U,16) I ECPTF,$D(^DGPT(ECPTF,"M")) D PTF ;154
"RTN","ECXADM",33,0)
 ;get encounter classification
"RTN","ECXADM",34,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECXHNC,ECXSHAD,ECXESC,ECXECL)="",ECXVISIT=$P(EC,U,27) ;144
"RTN","ECXADM",35,0)
 I ECXVISIT'="" D
"RTN","ECXADM",36,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXADM",37,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXADM",38,0)
 .S ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXADM",39,0)
 .S ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXADM",40,0)
 .S ECXESC=$G(ECXVIST("ENCSC")),ECXECL=$G(ECXVIST("ENCCL")) ;144 Encounter SC and Encounter Camp Lejeune
"RTN","ECXADM",41,0)
 ;use movement record date & time
"RTN","ECXADM",42,0)
 S ADM=$$INP^ECXUTL2(ECXDFN,ECD)
"RTN","ECXADM",43,0)
 S ECXA=$P(ADM,U),ECXMN=$P(ADM,U,2),ECXSPC=$P(ADM,U,3)
"RTN","ECXADM",44,0)
 S (ECXADMDT,ECXDATE)=$P(ADM,U,4)
"RTN","ECXADM",45,0)
 ;if movement# doesn't match cross-ref ien, then quit
"RTN","ECXADM",46,0)
 Q:ECXMN'=ECDA
"RTN","ECXADM",47,0)
 S ECTM=$$ECXTIME^ECXUTL(ECXDATE)
"RTN","ECXADM",48,0)
 S ECXDATE=$$ECXDATE^ECXUTL(ECXDATE,ECXYM)
"RTN","ECXADM",49,0)
 S W=$P(ADM,U,9)
"RTN","ECXADM",50,0)
 S ECXWRD=$P(W,";",1),ECXFAC=$P(W,";",2),ECXDSSD=$P(W,";",3)
"RTN","ECXADM",51,0)
 S ECXPRV=$P(ADM,U,7),ECXPRNPI="",ECXATT=$P(ADM,U,8),ECXATNPI=""
"RTN","ECXADM",52,0)
 S ECXDOM=$P(ADM,U,10),ECXATTPC=$P(ADM,U,12),ECXPRVPC=$P(ADM,U,11)
"RTN","ECXADM",53,0)
 N ECXUSRTN
"RTN","ECXADM",54,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$E(ECXATT,2,$L(ECXATT)),ECD)
"RTN","ECXADM",55,0)
 S:+ECXUSRTN'>0 ECXUSRTN=""
"RTN","ECXADM",56,0)
 S ECATTNPI=$P(ECXUSRTN,U)
"RTN","ECXADM",57,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$E(ECXPRV,2,$L(ECXPRV)),ECD)
"RTN","ECXADM",58,0)
 S:+ECXUSRTN'>0 ECXUSRTN=""
"RTN","ECXADM",59,0)
 S ECPWNPI=$P(ECXUSRTN,U)
"RTN","ECXADM",60,0)
 ;
"RTN","ECXADM",61,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXADM",62,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXSPC)
"RTN","ECXADM",63,0)
 ;
"RTN","ECXADM",64,0)
 ;- Patient Type
"RTN","ECXADM",65,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(ECXDFN)
"RTN","ECXADM",66,0)
 ;
"RTN","ECXADM",67,0)
 S ECXEDIS=$$EDIS^ECXUTL1(ECXDFN,ECD,"A") ;136 Get emergency room disposition
"RTN","ECXADM",68,0)
 ;- If null encounter number, don't file record
"RTN","ECXADM",69,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,,ECXSPC,ECXOBS,ECHEAD,,)
"RTN","ECXADM",70,0)
 D:ECXENC'="" FILE
"RTN","ECXADM",71,0)
 Q
"RTN","ECXADM",72,0)
 ;
"RTN","ECXADM",73,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographic data
"RTN","ECXADM",74,0)
 N OK,X
"RTN","ECXADM",75,0)
 K ECXPAT
"RTN","ECXADM",76,0)
 S ECXDATE=$P(ECXDATE,".")
"RTN","ECXADM",77,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;2;3;4;5",.ECXPAT)
"RTN","ECXADM",78,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXADM",79,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXADM",80,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXADM",81,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXADM",82,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXADM",83,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXADM",84,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXADM",85,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXADM",86,0)
 S ECXVNS=ECXPAT("VIETNAM")
"RTN","ECXADM",87,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXADM",88,0)
 S ECXMNS=ECXPAT("MEANS")
"RTN","ECXADM",89,0)
 S ECXRACE=ECXPAT("RACE")
"RTN","ECXADM",90,0)
 S ECXRELG=ECXPAT("RELIGION")
"RTN","ECXADM",91,0)
 S ECXEMP=ECXPAT("EMPLOY")
"RTN","ECXADM",92,0)
 S ECXMAR=ECXPAT("MARITAL")
"RTN","ECXADM",93,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXADM",94,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXADM",95,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXADM",96,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXADM",97,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXADM",98,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXADM",99,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXADM",100,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXADM",101,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXADM",102,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXADM",103,0)
 S ECXSVC=ECXPAT("SC%")
"RTN","ECXADM",104,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXADM",105,0)
 S ECXHI=+$$INSUR^IBBAPI(ECXDFN,ECXDATE)
"RTN","ECXADM",106,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXADM",107,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXADM",108,0)
 S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXADM",109,0)
 S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXADM",110,0)
 ;
"RTN","ECXADM",111,0)
 ;-OEF/OIF Data
"RTN","ECXADM",112,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXADM",113,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXADM",114,0)
 ;
"RTN","ECXADM",115,0)
 ;- Agent Orange location
"RTN","ECXADM",116,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXADM",117,0)
 ;
"RTN","ECXADM",118,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXADM",119,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXADM",120,0)
 ; - PROJ 112/SHAD Indicator
"RTN","ECXADM",121,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXADM",122,0)
 ; ******* - PATCH 127, ADD PATCAT CODE - ********
"RTN","ECXADM",123,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXADM",124,0)
 ; - Race and Ethnicity
"RTN","ECXADM",125,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXADM",126,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXADM",127,0)
 ;
"RTN","ECXADM",128,0)
 ;get primary care data
"RTN","ECXADM",129,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXADM",130,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXADM",131,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXADM",132,0)
 ;get combat veteran data
"RTN","ECXADM",133,0)
 I $$CVEDT^ECXUTL5(ECXDFN,ECD)
"RTN","ECXADM",134,0)
 ;get national patient record flag if exist
"RTN","ECXADM",135,0)
 D NPRF^ECXUTL5
"RTN","ECXADM",136,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXADM",137,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXADM",138,0)
 Q
"RTN","ECXADM",139,0)
 ;
"RTN","ECXADM",140,0)
PTF ; get admitting DRG, diagnosis, source of admission from PTF
"RTN","ECXADM",141,0)
 ;use number for DRG and .01 for diagnosis
"RTN","ECXADM",142,0)
 N EC,EC1,ECX
"RTN","ECXADM",143,0)
 S EC=1 I $D(^DGPT(ECPTF,"M",2,0)) S EC=2
"RTN","ECXADM",144,0)
 S EC1=+$P(^DGPT(ECPTF,"M",EC,0),U,5)
"RTN","ECXADM",145,0)
 S ECDRG=$P($G(^DGPT(ECPTF,"M",EC,"P")),U)
"RTN","ECXADM",146,0)
 S ECDIA=$S('EC1:"",1:$$CODEC^ICDEX(80,EC1)) ;154
"RTN","ECXADM",147,0)
 I $$CSI^ICDEX(80,EC1)=30 S ECXICD10P=ECDIA,ECDIA="" ;154
"RTN","ECXADM",148,0)
 S ECX=+$P($G(^DGPT(ECPTF,101)),U),ECXSADM=$P($G(^DIC(45.1,ECX,0)),U,11)
"RTN","ECXADM",149,0)
 S ECXADMS=$$GET1^DIQ(45.1,ECX,.01)
"RTN","ECXADM",150,0)
 ;if source of admission = admit outpatient treatment ('1P')
"RTN","ECXADM",151,0)
 S ECXAOT=$S(($$GET1^DIQ(45.1,ECX,.01)="1P"):"Y",1:"")
"RTN","ECXADM",152,0)
 Q
"RTN","ECXADM",153,0)
 ;
"RTN","ECXADM",154,0)
FILE ;file the extract record
"RTN","ECXADM",155,0)
 ;node0
"RTN","ECXADM",156,0)
 ;facility^dfn^ssn^name^in/out^day^primary care team^sex^dob^
"RTN","ECXADM",157,0)
 ;religion^employment status^health ins^state^county^zip^
"RTN","ECXADM",158,0)
 ;eligibility^vet^vietnam^agent orange^radiation^pow^
"RTN","ECXADM",159,0)
 ;period of service^means test^marital status^
"RTN","ECXADM",160,0)
 ;ward^treating specialty^attending physician^mov #^DRG^princ diagnosis^
"RTN","ECXADM",161,0)
 ;time^primary care provider^race^primary ward provider
"RTN","ECXADM",162,0)
 ;node1
"RTN","ECXADM",163,0)
 ;mpi^dss dept^attending npi^pc provider npi^ward provider npi^
"RTN","ECXADM",164,0)
 ;admission elig^mst status^shad status^sharing payor^
"RTN","ECXADM",165,0)
 ;sharing insurance^enrollment location^
"RTN","ECXADM",166,0)
 ;pc prov person class^assoc pc provider^assoc pc prov person class^
"RTN","ECXADM",167,0)
 ;assoc pc prov npi^dom^enrollment cat^enrollment stat^encounter
"RTN","ECXADM",168,0)
 ;shad^purple heart ind.^obs pat ind^encounter num^agent orange
"RTN","ECXADM",169,0)
 ;loc^production div^pow loc^source of admission^head & neck canc. ind
"RTN","ECXADM",170,0)
 ;^ethnicity^race1^enrollment priority_sub group^user enrollee^patient
"RTN","ECXADM",171,0)
 ;type^combat vet elig^combat vet elig end date^enc cv eligible^
"RTN","ECXADM",172,0)
 ;national patient record flag ECXNPRFI^att phy person class ECXATTPC
"RTN","ECXADM",173,0)
 ;^primary ward provider person class ECXPRVPC^environ contamin ECXEST
"RTN","ECXADM",174,0)
 ;^emergency response indicator(FEMA) ECXERI^agent orange indic ECXAO
"RTN","ECXADM",175,0)
 ;^environ contam ECXECE^encoun head/neck ECXHNC^encoun MST ECXMIL^rad
"RTN","ECXADM",176,0)
 ;encoun ECXIR^
"RTN","ECXADM",177,0)
 ;node 2 - patch 136 seperated node1 from node 2 for clarity
"RTN","ECXADM",178,0)
 ;OEF/OIF ECXOEF^ OEF/OIF return date ECXOEFDT
"RTN","ECXADM",179,0)
 ;^associate pc provider npi ECASNPI^attending physician npi ECATNPI^
"RTN","ECXADM",180,0)
 ;primary care provider npi ECPTNPI^primary ward provider npi ECPWNPI^
"RTN","ECXADM",181,0)
 ;admit outpatient treatment ECXAOT^country ECXCNTRY^pat cat ECXPATCAT^
"RTN","ECXADM",182,0)
 ;admit source ECXADMS ^emergency dept disposition ECXEDIS^Primary ICD-10 code ECXICD10P^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL^Encounter SC ECXESC
"RTN","ECXADM",183,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)
"RTN","ECXADM",184,0)
 ;
"RTN","ECXADM",185,0)
 ;Convert specialty to PTF Code
"RTN","ECXADM",186,0)
 ;
"RTN","ECXADM",187,0)
 N ECXDATA
"RTN","ECXADM",188,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXSPC,.ECXDATA)
"RTN","ECXADM",189,0)
 S ECXSPC=$G(ECXDATA(7))
"RTN","ECXADM",190,0)
 ;
"RTN","ECXADM",191,0)
 N DA,DIK
"RTN","ECXADM",192,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXADM",193,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE_U
"RTN","ECXADM",194,0)
 S ECODE=ECODE_ECPTTM_U_ECXSEX_U_ECXDOB_U_ECXRELG_U
"RTN","ECXADM",195,0)
 S ECODE=ECODE_ECXEMP_U_ECXHI_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U
"RTN","ECXADM",196,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECXVNS_U_ECXAST_U_ECXRST_U_ECXPST_U
"RTN","ECXADM",197,0)
 S ECODE=ECODE_ECXPOS_U_ECXMNS_U_ECXMAR_U
"RTN","ECXADM",198,0)
 S ECODE=ECODE_ECXWRD_U_ECXSPC_U_ECXATT_U_ECDA_U_ECDRG_U_ECDIA_U
"RTN","ECXADM",199,0)
 S ECODE=ECODE_ECTM_U_ECPTPR_U_ECXRACE_U_ECXPRV_U
"RTN","ECXADM",200,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_""_U_""_U_""_U_ELGA_U
"RTN","ECXADM",201,0)
 S ECODE1=ECODE1_ECXMST_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_U_U_ECXENRL_U_ECCLAS_U
"RTN","ECXADM",202,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXCAT_U
"RTN","ECXADM",203,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC>2010:ECXSHAD,1:"")_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXADM",204,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXPLOC_U_ECXSADM_U_ECXHNCI_U_ECXETH_U
"RTN","ECXADM",205,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXADM",206,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXADM",207,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXATTPC_U_ECXPRVPC_U_ECXEST
"RTN","ECXADM",208,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXADM",209,0)
 I ECXLOGIC>2007 S ECODE2=ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECATTNPI_U_ECPTNPI_U_ECPWNPI
"RTN","ECXADM",210,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXAOT_U_ECXCNTRY
"RTN","ECXADM",211,0)
 ; ***** ADDING PATCAT TO 9TH PIECE OF ECODE  *******
"RTN","ECXADM",212,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT
"RTN","ECXADM",213,0)
 I ECXLOGIC>2011 S ECODE2=ECODE2_U_ECXADMS
"RTN","ECXADM",214,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXEDIS_U_ECXICD10P ;136
"RTN","ECXADM",215,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXCLST_U_ECXECL_U_ECXESC ;144 Add Camp Lejeune status, encounter Camp Lejeune and encounter service connected
"RTN","ECXADM",216,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXADM",217,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2)
"RTN","ECXADM",218,0)
 S ECRN=ECRN+1
"RTN","ECXADM",219,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXADM",220,0)
 Q
"RTN","ECXADM",221,0)
 ;
"RTN","ECXADM",222,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXADM",223,0)
 S ECHEAD="ADM"
"RTN","ECXADM",224,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXADM",225,0)
 Q
"RTN","ECXADM",226,0)
 ;
"RTN","ECXADM",227,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXADM",228,0)
 ; should be queued with a 1D frequency
"RTN","ECXADM",229,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXADM",230,0)
 ;
"RTN","ECXADM",231,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXADM",232,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXADM",233,0)
 ;
"RTN","ECXALAR")
0^9^B23545177^B21790296
"RTN","ECXALAR",1,0)
ECXALAR ;ALB/TMD-LAR Extract Report of Untranslatable Results ;7/14/15  16:18
"RTN","ECXALAR",2,0)
 ;;3.0;DSS EXTRACTS;**46,51,112,132,136,149,154**;Dec 22, 1997;Build 13
"RTN","ECXALAR",3,0)
 ;
"RTN","ECXALAR",4,0)
EN ; entry point
"RTN","ECXALAR",5,0)
 N X,Y,DATE,ECRUN,ECXOPT,ECXDESC,ECXSAVE,ECXTL,ECTHLD,ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG,PG,ECXPORT,RCNT ;149,154
"RTN","ECXALAR",6,0)
 S QFLG=0,ECXTL="LAR"
"RTN","ECXALAR",7,0)
 ; get today's date
"RTN","ECXALAR",8,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXALAR",9,0)
 D SETUP^ECXLABR I ECFILE="" Q
"RTN","ECXALAR",10,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXALAR",11,0)
 I $P($G(^ECX(728,1,ECNODE+.1)),U,ECPIECE)]"" D  Q
"RTN","ECXALAR",12,0)
 .W !!,$C(7),ECPACK," extract is already scheduled to run.  Try later",!!
"RTN","ECXALAR",13,0)
 D BEGIN Q:QFLG
"RTN","ECXALAR",14,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I $G(ECXPORT) D  Q  ;149 Section added
"RTN","ECXALAR",15,0)
 .S RCNT=1
"RTN","ECXALAR",16,0)
 .D PROCESS
"RTN","ECXALAR",17,0)
 .S ^TMP($J,"ECXPORT",0)="PATIENT NAME^SSN^DATE/TIME COLLECTED^TEST CODE^TEST NAME^RESULT"
"RTN","ECXALAR",18,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXALAR",19,0)
 .D AUDIT^ECXKILL
"RTN","ECXALAR",20,0)
 S ECXDESC=ECXTL_" Extract Report of Untranslatable Results"
"RTN","ECXALAR",21,0)
 S ECXSAVE("EC*")=""
"RTN","ECXALAR",22,0)
 D EN^XUTMDEVQ("PROCESS^ECXALAR",ECXDESC,.ECXSAVE)
"RTN","ECXALAR",23,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXALAR",24,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXALAR",25,0)
 D HOME^%ZIS
"RTN","ECXALAR",26,0)
 D AUDIT^ECXKILL
"RTN","ECXALAR",27,0)
 Q
"RTN","ECXALAR",28,0)
 ;
"RTN","ECXALAR",29,0)
BEGIN ; display report description
"RTN","ECXALAR",30,0)
 W @IOF,!,"This report prints a listing of results that are not translatable i.e. have",!,"no entry in the Lab Results Translation File (#727.7)."
"RTN","ECXALAR",31,0)
 W !!,"This report is a pre-extract type audit report and should be run prior to the",!,"generation of the actual extract.  Running this report has no effect on the",!,"actual extract."
"RTN","ECXALAR",32,0)
 W !!,"**WARNING: This report can take a long time to process.  You are encouraged",!,"to queue this report for processing during the evening if possible.**" ;136
"RTN","ECXALAR",33,0)
 W !!,"Enter the date range for which you would like to scan the ",ECXTL," Extract records.",!
"RTN","ECXALAR",34,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXALAR",35,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXALAR",36,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXALAR",37,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXALAR",38,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXALAR",39,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXALAR",40,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXALAR",41,0)
 .I Y<ECSD D  Q
"RTN","ECXALAR",42,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXALAR",43,0)
 ..W !,"Please try again.",!!
"RTN","ECXALAR",44,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXALAR",45,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXALAR",46,0)
 ..W !,"Please try again.",!!
"RTN","ECXALAR",47,0)
 .S ECED=Y
"RTN","ECXALAR",48,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXALAR",49,0)
 .S DONE=1
"RTN","ECXALAR",50,0)
 Q
"RTN","ECXALAR",51,0)
 ;
"RTN","ECXALAR",52,0)
PROCESS ; entry point for queued report
"RTN","ECXALAR",53,0)
 S ZTREQ="@"
"RTN","ECXALAR",54,0)
 S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)="R"
"RTN","ECXALAR",55,0)
 S ECXERR=0 D EN^ECXALAR2 S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)="" Q:ECXERR
"RTN","ECXALAR",56,0)
 S QFLG=0 D PRINT
"RTN","ECXALAR",57,0)
 Q
"RTN","ECXALAR",58,0)
 ;
"RTN","ECXALAR",59,0)
PRINT ; process temp file and print report
"RTN","ECXALAR",60,0)
 N X,CNT,LN,REC,ECXDFN,ECXSSN,ECXPNM,ECRS,ECTC,ECFMDT,ECDTM,ECXTNM
"RTN","ECXALAR",61,0)
 U IO
"RTN","ECXALAR",62,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXALAR",63,0)
 S (PG,QFLG,GTOT)=0,$P(LN,"-",80)=""
"RTN","ECXALAR",64,0)
 I '$G(ECXPORT) D HEADER Q:QFLG  ;149
"RTN","ECXALAR",65,0)
 S COUNT=0,CNT="" F  S CNT=$O(^TMP($J,"ECXALAR2",CNT)) Q:CNT=""!QFLG  S REC=^(CNT) D
"RTN","ECXALAR",66,0)
 .S ECXDFN=$P(REC,U),ECTC=$P(REC,U,4),ECRS=$P(REC,U,5)
"RTN","ECXALAR",67,0)
 .S ECFMDT=$P(REC,U,2)_"."_$P(REC,U,3),ECDTM=$$FMTE^XLFDT(ECFMDT,2)
"RTN","ECXALAR",68,0)
 .S (ECXPNM,ECXSSN)=""
"RTN","ECXALAR",69,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,,"1;",.ECXPAT)
"RTN","ECXALAR",70,0)
 .I OK S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN")
"RTN","ECXALAR",71,0)
 .S ECXTNM=$O(^ECX(727.29,"AC",+$G(ECTC),0)),ECXTNM=$P(^ECX(727.29,+$G(ECXTNM),0),U,3)
"RTN","ECXALAR",72,0)
 .I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)=ECXPNM_U_ECXSSN_U_ECDTM_U_ECTC_U_ECXTNM_U_ECRS,RCNT=RCNT+1 Q  ;149
"RTN","ECXALAR",73,0)
 .I $Y+3>IOSL D HEADER
"RTN","ECXALAR",74,0)
 .W !,ECXPNM,?5,ECXSSN,?17,ECDTM,?32,$J(ECTC,4),?38,$E(ECXTNM,1,20),?60,$S($L(ECRS)>20:$E(ECRS,1,19)_"+",1:ECRS) ;154 Print result if 20 or less, otherwise print first 19 characters and +
"RTN","ECXALAR",75,0)
 .S COUNT=COUNT+1
"RTN","ECXALAR",76,0)
 I $G(ECXPORT) Q  ;149
"RTN","ECXALAR",77,0)
 Q:QFLG
"RTN","ECXALAR",78,0)
 I COUNT=0 W !!,?8,"No untranslatable results for this extract"
"RTN","ECXALAR",79,0)
CLOSE ;
"RTN","ECXALAR",80,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXALAR",81,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXALAR",82,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXALAR",83,0)
 Q
"RTN","ECXALAR",84,0)
 ;
"RTN","ECXALAR",85,0)
HEADER ;header and page control
"RTN","ECXALAR",86,0)
 N SS,JJ
"RTN","ECXALAR",87,0)
 I $E(IOST)="C" D
"RTN","ECXALAR",88,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXALAR",89,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXALAR",90,0)
 Q:QFLG
"RTN","ECXALAR",91,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXALAR",92,0)
 W !,ECXTL_" Extract Untranslatable Results Audit Report",?71,"Page: "_PG
"RTN","ECXALAR",93,0)
 W !,"Start Date: ",ECSTART
"RTN","ECXALAR",94,0)
 W !,"End Date:   ",ECEND,?49,"Report Run Date:  "_ECRUN
"RTN","ECXALAR",95,0)
 W !!,"Pat.",?5,"SSN",?17,"Date/Time",?32,"Test",?38,"Test Name",?60,"Result"
"RTN","ECXALAR",96,0)
 W !,"Name",?17,"Collected",?32,"Code"
"RTN","ECXALAR",97,0)
 W !,LN,!
"RTN","ECXALAR",98,0)
 Q
"RTN","ECXALAR",99,0)
 ;
"RTN","ECXAPHA")
0^20^B64411651^B62748333
"RTN","ECXAPHA",1,0)
ECXAPHA ;ALB/TMD-Pharmacy Extracts Unusual Volumes/Costs Report ;3/4/15  11:52
"RTN","ECXAPHA",2,0)
 ;;3.0;DSS EXTRACTS;**40,49,66,104,109,113,136,144,154**;Dec 22, 1997;Build 13
"RTN","ECXAPHA",3,0)
 ;
"RTN","ECXAPHA",4,0)
EN ; entry point
"RTN","ECXAPHA",5,0)
 N X,Y,DATE,ECRUN,ECXOPT,ECXDESC,ECXSAVE,ECXTL,ECTHLD,ECSD
"RTN","ECXAPHA",6,0)
 N ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG,ECXISIG,FYVER,ECXBCM,ECXPORT,CNT ;144
"RTN","ECXAPHA",7,0)
 S QFLG=0
"RTN","ECXAPHA",8,0)
 ; get today's date
"RTN","ECXAPHA",9,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXAPHA",10,0)
 D BEGIN Q:QFLG
"RTN","ECXAPHA",11,0)
 D SELECT Q:QFLG!($G(FYVER)=-1)  ;144 Quit if selections not made for report
"RTN","ECXAPHA",12,0)
 I '$G(ECXCOST) I ECXOPT=2 I FYVER'="" D @(FYVER) Q  ;144 Run previous version of routine and quit if it's the volume report
"RTN","ECXAPHA",13,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXAPHA",14,0)
 .K ^TMP($J) ;144
"RTN","ECXAPHA",15,0)
 .S ^TMP($J,"ECXPORT",0)="NAME^SSN^DAY^GENERIC NAME^FEEDER KEY^"_$S(ECXOPT=1!(ECXOPT=3):"QUANTITY",ECXOPT=2:"TOTAL DOSES PER DAY",1:"COMPONENT DOSE GIVEN")_"^TOTAL COST"_$S(ECXOPT=1:"^DAYS SUPPLY",ECXISIG:"^SIG",1:"") ;144
"RTN","ECXAPHA",16,0)
 .S CNT=1 ;144
"RTN","ECXAPHA",17,0)
 .D PROCESS ;144
"RTN","ECXAPHA",18,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXAPHA",19,0)
 .D AUDIT^ECXKILL ;144
"RTN","ECXAPHA",20,0)
 S ECXDESC=ECXTL_" Extract Unusual"_$S($G(ECXCOST):" Cost",1:" Volume")_" Report" ;144
"RTN","ECXAPHA",21,0)
 S ECXSAVE("EC*")=""
"RTN","ECXAPHA",22,0)
 W !!,"This report requires 132-column format."
"RTN","ECXAPHA",23,0)
 D EN^XUTMDEVQ("PROCESS^ECXAPHA",ECXDESC,.ECXSAVE)
"RTN","ECXAPHA",24,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXAPHA",25,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAPHA",26,0)
 D HOME^%ZIS
"RTN","ECXAPHA",27,0)
 D AUDIT^ECXKILL
"RTN","ECXAPHA",28,0)
 Q
"RTN","ECXAPHA",29,0)
 ;
"RTN","ECXAPHA",30,0)
BEGIN ; display report description
"RTN","ECXAPHA",31,0)
 W @IOF
"RTN","ECXAPHA",32,0)
 W !,"This report prints a listing of unusual ",$S('$G(ECXCOST):"volumes",1:"costs")," that would be" ;144
"RTN","ECXAPHA",33,0)
 W !,"generated by the pharmacy extracts (PRE, IVP"_$S('$G(ECXCOST):", UDP and BCM)",1:" and UDP)")_" as" ;154 Don't show BCM if cost report
"RTN","ECXAPHA",34,0)
 W !,"determined by a user defined threshold value.  It should be run" ;144 Corrected spelling of should
"RTN","ECXAPHA",35,0)
 W !,"prior to the generation of the actual extract(s) to identify and"
"RTN","ECXAPHA",36,0)
 W !,"fix as necessary any ",$S('$G(ECXCOST):"volumes",1:"costs")," determined to be erroneous." ;144
"RTN","ECXAPHA",37,0)
 I '$G(ECXCOST) D  ;144
"RTN","ECXAPHA",38,0)
 .W !!,"Unusual volumes are defined as follows:" ;144
"RTN","ECXAPHA",39,0)
 .W !!,"PRE Extract:  Quantity field greater than the threshold value." ;144
"RTN","ECXAPHA",40,0)
 .W !,"IVP Extract:  Total Doses Per Day field greater than the threshold" ;144
"RTN","ECXAPHA",41,0)
 .W !,?14,"or less than the negative of the threshold value." ;144
"RTN","ECXAPHA",42,0)
 .W !,"UDP Extract:  Quantity field greater than threshold value." ;144
"RTN","ECXAPHA",43,0)
 .W !,"BCM Extract:  Component Dose Given field greater than threshold value." ;144
"RTN","ECXAPHA",44,0)
 W !!,"Note: The threshold can be set after a report is selected."
"RTN","ECXAPHA",45,0)
 W !!,"Run times for this report will vary depending upon the size of"
"RTN","ECXAPHA",46,0)
 W !,"the extract and could take as long as 30 minutes or more to"
"RTN","ECXAPHA",47,0)
 W !,"complete.  This report has no effect on the actual extracts and"
"RTN","ECXAPHA",48,0)
 W !,"can be run as needed."
"RTN","ECXAPHA",49,0)
 W !!,"The report is sorted by Feeder Key, Descending ",$S('$G(ECXCOST):"Volume",1:"Cost"),", and SSN."
"RTN","ECXAPHA",50,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXAPHA",51,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXAPHA",52,0)
 Q
"RTN","ECXAPHA",53,0)
 ;
"RTN","ECXAPHA",54,0)
SELECT ; user inputs for report option, threshold volume/cost and date range
"RTN","ECXAPHA",55,0)
 N DONE,OUT,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT ;144
"RTN","ECXAPHA",56,0)
 S ECXISIG=0,ECXBCM="" ;144
"RTN","ECXAPHA",57,0)
 ; allow user to select report option (PRE,IVP,UDP or BCM if volume report)
"RTN","ECXAPHA",58,0)
 W "Choose the report you would like to run."
"RTN","ECXAPHA",59,0)
 S DIR(0)="S^1:PRE;2:IVP;3:UDP"_$S('$G(ECXCOST):";4:BCM",1:""),DIR("A")="Selection",DIR("B")=1 D ^DIR K DIR S ECXOPT=Y I X["^" S QFLG=1 Q  ;154 Only show BCM if volume report
"RTN","ECXAPHA",60,0)
 I '$G(ECXCOST) I ECXOPT=2 S FYVER=$$REPORTFY^ECXUTL1("RXUNVOL") Q:FYVER=-1  ;144 Which version of report should be run for volume report?
"RTN","ECXAPHA",61,0)
 I ECXOPT=4 D  Q:$G(QFLG)  ;144
"RTN","ECXAPHA",62,0)
 .S DIR(0)="S^I:IV;N:NON-IV",DIR("A")="Select type of BCM record",DIR("?",1)="BCM contains both IV and NON-IV records.  Select which type of",DIR("?")="record to check against the threshold." ;144
"RTN","ECXAPHA",63,0)
 .D ^DIR S:$D(DIRUT) QFLG=1 I '$G(QFLG) S ECXBCM=Y ;144
"RTN","ECXAPHA",64,0)
 S ECXTL=$S(ECXOPT=1:"Prescription",ECXOPT=2:"IV Detail",ECXOPT=3:"Unit Dose Local",ECXOPT=4:"BCM-"_$S(ECXBCM="N":"NON ",1:"")_"IV Entries",1:"") ;144
"RTN","ECXAPHA",65,0)
 ; allow user to set threshold volume/cost
"RTN","ECXAPHA",66,0)
 I '$G(ECXCOST) S ECTHLD=$S(ECXOPT=2!(ECXOPT=4&(ECXBCM="I")):1000,ECXOPT=4&(ECXBCM="N"):5,1:500) ;144
"RTN","ECXAPHA",67,0)
 I $G(ECXCOST) S ECTHLD=$S(ECXOPT=2!(ECXOPT=4&(ECXBCM="I")):100,ECXOPT=3!(ECXOPT=4&(ECXBCM="N")):20,1:50) ;144
"RTN","ECXAPHA",68,0)
 W !!,"The default threshold ",$S('$G(ECXCOST):"volume",1:"cost")," for the ",ECXTL," extract is ",$S($G(ECXCOST):"$",1:""),ECTHLD,"." ;144
"RTN","ECXAPHA",69,0)
 S DIR(0)="Y",DIR("A")="Would you like to change the threshold",DIR("B")="NO" D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXAPHA",70,0)
 I Y D
"RTN","ECXAPHA",71,0)
 .I '$G(ECXCOST) W !!,$S(ECXOPT=2:"threshold > Total Doses Per Day < -threshold",ECXOPT=4:"Component Dose Give > Threshold",1:"Quantity > threshold") ;144
"RTN","ECXAPHA",72,0)
 .S DIR(0)="N^0:100000:0",DIR("A")="Enter the new threshold "_$S('$G(ECXCOST):"volume",1:"cost") D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1 Q  ;144
"RTN","ECXAPHA",73,0)
 ; check to see if SIG should be place on the sec line of rpt cvw - *136 
"RTN","ECXAPHA",74,0)
 I ECXOPT=3!(ECXOPT=4&(ECXBCM="N")) S DIR(0)="Y",DIR("A")="Include SIG/Order Direction on line 2 of report",DIR("B")="NO" D ^DIR K DIR S:Y ECXISIG=1 I X["^" S QFLG=1 Q  ;144
"RTN","ECXAPHA",75,0)
 ; get date range from user
"RTN","ECXAPHA",76,0)
 W !!,"Enter the date range for which you would like to scan the ",ECXTL,!,"Extract records."
"RTN","ECXAPHA",77,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXAPHA",78,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXAPHA",79,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXAPHA",80,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXAPHA",81,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXAPHA",82,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXAPHA",83,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXAPHA",84,0)
 .I Y<ECSD D  Q
"RTN","ECXAPHA",85,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXAPHA",86,0)
 ..W !,"Please try again.",!!
"RTN","ECXAPHA",87,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXAPHA",88,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXAPHA",89,0)
 ..W !,"Please try again.",!!
"RTN","ECXAPHA",90,0)
 .S ECED=Y
"RTN","ECXAPHA",91,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXAPHA",92,0)
 .S DONE=1
"RTN","ECXAPHA",93,0)
 Q
"RTN","ECXAPHA",94,0)
 ;
"RTN","ECXAPHA",95,0)
PROCESS ; entry point for queued report
"RTN","ECXAPHA",96,0)
 S ZTREQ="@"
"RTN","ECXAPHA",97,0)
 S ECXERR=0 D EN^ECXAPHA2 Q:ECXERR
"RTN","ECXAPHA",98,0)
 S QFLG=0 D PRINT
"RTN","ECXAPHA",99,0)
 Q
"RTN","ECXAPHA",100,0)
 ;
"RTN","ECXAPHA",101,0)
PRINT ; process temp file and print report
"RTN","ECXAPHA",102,0)
 N PG,QFLG,GTOT,LN,COUNT,FKEY,QTY,SSN,REC,EDAY,ECXCOUNT
"RTN","ECXAPHA",103,0)
 U IO
"RTN","ECXAPHA",104,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAPHA",105,0)
 S (PG,QFLG,GTOT)=0,$P(LN,"-",132)=""
"RTN","ECXAPHA",106,0)
 I '$G(ECXPORT) D HEADER Q:QFLG  ;144
"RTN","ECXAPHA",107,0)
 S COUNT=0,FKEY="" F  S FKEY=$O(^TMP($J,FKEY)) Q:FKEY=""!QFLG!(FKEY="ECXPORT")  D  ;144
"RTN","ECXAPHA",108,0)
 .S QTY="" F  S QTY=$O(^TMP($J,FKEY,QTY)) Q:QTY=""!QFLG  D
"RTN","ECXAPHA",109,0)
 ..S EDAY="" F  S EDAY=$O(^TMP($J,FKEY,QTY,EDAY)) Q:EDAY=""!QFLG  D
"RTN","ECXAPHA",110,0)
 ...S ECXCOUNT="" F  S ECXCOUNT=$O(^TMP($J,FKEY,QTY,EDAY,ECXCOUNT)) Q:ECXCOUNT=""!QFLG  D
"RTN","ECXAPHA",111,0)
 ....S SSN=""
"RTN","ECXAPHA",112,0)
 ....F  S SSN=$O(^TMP($J,FKEY,QTY,EDAY,ECXCOUNT,SSN)) Q:SSN=""!QFLG  S REC=^(SSN)  D
"RTN","ECXAPHA",113,0)
 .....I $G(ECXPORT) D  Q  ;144
"RTN","ECXAPHA",114,0)
 ......S ^TMP($J,"ECXPORT",CNT)=$P(REC,U)_U_$P(REC,U,2)_U_$P(REC,U,3)_U_$P(REC,U,4)_U_$P(REC,U,5)_U_$P(REC,U,6)_" "_$P(REC,U,7)_U_$P(REC,U,8)_$S(ECXOPT=1:(U_$P(REC,U,9)),ECXISIG:(U_$S($P(REC,U,10)="":"N/A",1:$P(REC,U,10))),1:"") ;144
"RTN","ECXAPHA",115,0)
 ......S CNT=CNT+1 ;144
"RTN","ECXAPHA",116,0)
 .....S COUNT=COUNT+1
"RTN","ECXAPHA",117,0)
 .....I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXAPHA",118,0)
 .....W !,$P(REC,U),?8,$P(REC,U,2),?20,$P(REC,U,3),?29,$E($P(REC,U,4),1,40)
"RTN","ECXAPHA",119,0)
 .....W ?71,$P(REC,U,5),?89,$$RJ^XLFSTR($P(REC,U,6),9)_" "_$E($P(REC,U,7),1,7)
"RTN","ECXAPHA",120,0)
 .....I ECXOPT=1 D
"RTN","ECXAPHA",121,0)
 ......W ?108,$$RJ^XLFSTR($P(REC,U,8),12),?125,$$RJ^XLFSTR($P(REC,U,9),3)
"RTN","ECXAPHA",122,0)
 .....I ECXOPT'=1 D
"RTN","ECXAPHA",123,0)
 ......W ?116,$$RJ^XLFSTR($P(REC,U,8),14)
"RTN","ECXAPHA",124,0)
 .....I $G(ECXISIG) D  ;144
"RTN","ECXAPHA",125,0)
 ......W !,?5,"SIG: ",$S($P(REC,U,10)="":"N/A",1:$P(REC,U,10)),! ;136
"RTN","ECXAPHA",126,0)
 Q:QFLG!($G(ECXPORT))  ;144
"RTN","ECXAPHA",127,0)
 I COUNT=0 W !!,?8,"No unusual ",$S('$G(ECXCOST):"volumes",1:"costs")," to report for this extract" ;144
"RTN","ECXAPHA",128,0)
CLOSE ;
"RTN","ECXAPHA",129,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAPHA",130,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPHA",131,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAPHA",132,0)
 Q
"RTN","ECXAPHA",133,0)
 ;
"RTN","ECXAPHA",134,0)
HEADER ;header and page control
"RTN","ECXAPHA",135,0)
 N SS,JJ
"RTN","ECXAPHA",136,0)
 I $E(IOST)="C" D
"RTN","ECXAPHA",137,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPHA",138,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAPHA",139,0)
 Q:QFLG
"RTN","ECXAPHA",140,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAPHA",141,0)
 W !,ECXTL_" Extract Unusual ",$S('$G(ECXCOST):"Volume",1:"Cost")," Report",?124,"Page: "_PG ;144
"RTN","ECXAPHA",142,0)
 W !,"Start Date: ",ECSTART,?97,"Report Run Date/Time:  "_ECRUN
"RTN","ECXAPHA",143,0)
 W !,"End Date:   ",ECEND,?97,"Threshold Value = ",$S($G(ECXCOST):"$",1:""),ECTHLD ;144
"RTN","ECXAPHA",144,0)
 W !!,"Name",?11,"SSN",?21,"Day",?29,"Generic Name",?71,"Feeder Key"
"RTN","ECXAPHA",145,0)
 I ECXOPT=1 W ?95,"Quantity",?109,"Total Cost",?120,"Days Supply" ;144 Combined lines
"RTN","ECXAPHA",146,0)
 I ECXOPT=2 W ?93,"Total Doses",?121,"Total Cost",!,?95,"Per Day" ;144
"RTN","ECXAPHA",147,0)
 I ECXOPT=3 W ?96,"Quantity",?121,"Total Cost" ;144
"RTN","ECXAPHA",148,0)
 I ECXOPT=4 W ?89,"Component Dose Given",?121,"Total Cost" ;144
"RTN","ECXAPHA",149,0)
 W !,LN,!
"RTN","ECXAPHA",150,0)
 Q
"RTN","ECXAPHA",151,0)
 ;
"RTN","ECXAPHA",152,0)
SIG(ORDNO,PATNO) ;Get ordering instructions for unit dose order.  API added in patch 136
"RTN","ECXAPHA",153,0)
 N DATA,RECNO,I,SIG
"RTN","ECXAPHA",154,0)
 S SIG=""
"RTN","ECXAPHA",155,0)
 I ORDNO=""!(PATNO="") Q SIG
"RTN","ECXAPHA",156,0)
 S RECNO=ORDNO_","_PATNO_","
"RTN","ECXAPHA",157,0)
 D GETS^DIQ(55.06,RECNO,"26;120;121","E","DATA")
"RTN","ECXAPHA",158,0)
 F I=120,121,26 S SIG=$G(SIG)_$S($L(SIG)>0:" ",1:"")_$G(DATA(55.06,RECNO,I,"E"))
"RTN","ECXAPHA",159,0)
 Q SIG
"RTN","ECXAPHA",160,0)
 ;
"RTN","ECXAPHA",161,0)
COST ;Section added in 144, entry point for unusual cost report
"RTN","ECXAPHA",162,0)
 N ECXCOST
"RTN","ECXAPHA",163,0)
 S ECXCOST=1
"RTN","ECXAPHA",164,0)
 D EN
"RTN","ECXAPHA",165,0)
 Q
"RTN","ECXAPRO2")
0^36^B27505336^B27501495
"RTN","ECXAPRO2",1,0)
ECXAPRO2 ;ALB/JAP - PRO Extract Audit Report (cont) ;3/14/13  14:44
"RTN","ECXAPRO2",2,0)
 ;;3.0;DSS EXTRACTS;**9,21,39,144,154**;Dec 22, 1997;Build 13
"RTN","ECXAPRO2",3,0)
 ;
"RTN","ECXAPRO2",4,0)
ASK ;further detail needed?
"RTN","ECXAPRO2",5,0)
 K X,Y
"RTN","ECXAPRO2",6,0)
 W !
"RTN","ECXAPRO2",7,0)
 S DIR(0)="Y",DIR("A")="Do you want to see details on this audit report",DIR("B")="NO"
"RTN","ECXAPRO2",8,0)
 D ^DIR K DIR
"RTN","ECXAPRO2",9,0)
 Q:($G(Y)=0)!$D(DUOUT)!($D(DTOUT))
"RTN","ECXAPRO2",10,0)
 ;allow user to expand as many lines as needed
"RTN","ECXAPRO2",11,0)
 F  D ASK2 Q:$D(DUOUT)!($D(DTOUT))
"RTN","ECXAPRO2",12,0)
 Q
"RTN","ECXAPRO2",13,0)
 ;
"RTN","ECXAPRO2",14,0)
ASK2 ;select nppd group to be expanded
"RTN","ECXAPRO2",15,0)
 D CODE
"RTN","ECXAPRO2",16,0)
 W @IOF,!
"RTN","ECXAPRO2",17,0)
 W !,?5,"1.   WHEELCHAIRS AND ACCESSORIES"
"RTN","ECXAPRO2",18,0)
 W !,?5,"2.   ARTIFICIAL LEGS"
"RTN","ECXAPRO2",19,0)
 W !,?5,"3.   ARTIFICIAL ARMS AND TERMINAL DEVICES"
"RTN","ECXAPRO2",20,0)
 W !,?5,"4.   BRACES AND ORTHOTICS"
"RTN","ECXAPRO2",21,0)
 W !,?5,"5.   SHOES/ORTHOTICS"
"RTN","ECXAPRO2",22,0)
 W !,?5,"6.   NEUROSENSORY AIDS"
"RTN","ECXAPRO2",23,0)
 W !,?5,"7.   RESTORATIONS"
"RTN","ECXAPRO2",24,0)
 W !,?5,"8.   OXYGEN AND RESPIRATORY"
"RTN","ECXAPRO2",25,0)
 W !,?5,"9.   MEDICAL EQUIPMENT, MISC., ALL OTHER NEW"
"RTN","ECXAPRO2",26,0)
 W !,?5,"10.  REPAIR",!!
"RTN","ECXAPRO2",27,0)
 S DIR(0)="N^1:10:0"
"RTN","ECXAPRO2",28,0)
 S DIR("A")="Select NPPD Group "
"RTN","ECXAPRO2",29,0)
 D ^DIR K DIR
"RTN","ECXAPRO2",30,0)
 Q:$D(DUOUT)!($D(DTOUT))
"RTN","ECXAPRO2",31,0)
 D ASK3(Y)
"RTN","ECXAPRO2",32,0)
 Q:$D(DTOUT)
"RTN","ECXAPRO2",33,0)
 K DIRUT,DTOUT,DUOUT
"RTN","ECXAPRO2",34,0)
 G ASK2
"RTN","ECXAPRO2",35,0)
 Q
"RTN","ECXAPRO2",36,0)
 ;
"RTN","ECXAPRO2",37,0)
ASK3(ECXY) ;select nppd line item
"RTN","ECXAPRO2",38,0)
 N BR,BRC,CODE,CNT,ECXPORT ;144
"RTN","ECXAPRO2",39,0)
 S BR=0,BRC=0 K CODE W @IOF
"RTN","ECXAPRO2",40,0)
 F  S BR=$O(^TMP($J,"RMPRCODE",BR)) Q:BR=""  I $L(BR)>3 D
"RTN","ECXAPRO2",41,0)
 .I $E(BR,1,1)=ECXY S BRC=BRC+1 W !?5,BRC_".",?10,BR,?18,^TMP($J,"RMPRCODE",BR) S CODE(BRC,BR)=""
"RTN","ECXAPRO2",42,0)
 .I ($E(BR,1,1)="R")&(ECXY=10) S BRC=BRC+1 W !?5,BRC_".",?10,BR,?18,^TMP($J,"RMPRCODE",BR) S CODE(BRC,BR)=""
"RTN","ECXAPRO2",43,0)
 W !
"RTN","ECXAPRO2",44,0)
 S DIR(0)="N^1:"_BRC_":0"
"RTN","ECXAPRO2",45,0)
 S DIR("A")="Select NPPD Line "
"RTN","ECXAPRO2",46,0)
 D ^DIR K DIR
"RTN","ECXAPRO2",47,0)
 Q:$D(DUOUT)!($D(DTOUT))
"RTN","ECXAPRO2",48,0)
 S ECXCODE="",ECXCODE=$O(CODE(Y,ECXCODE))
"RTN","ECXAPRO2",49,0)
 S ECXPGM="TASK^ECXAPRO",ECXDESC="PRO Extract Audit Detail"
"RTN","ECXAPRO2",50,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")="",ECXSAVE("ECXREPT")="",ECXSAVE("ECXPRIME")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXCODE")=""
"RTN","ECXAPRO2",51,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXAPRO2",52,0)
 .K ^TMP($J) ;144
"RTN","ECXAPRO2",53,0)
 .S ^TMP($J,"ECXPORT",0)="EXTRACT LOG #^NPPD GROUP^NPPD LINE^NAME^SSN^HCPCS^QTY^TYPE^COST^DATE^HCPCS DESC^STATION #^NPPD ENTRY DATE" ;144
"RTN","ECXAPRO2",54,0)
 .S CNT=1 ;144
"RTN","ECXAPRO2",55,0)
 .D PROCESS^ECXAPRO ;144
"RTN","ECXAPRO2",56,0)
 .D DISP ;144
"RTN","ECXAPRO2",57,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXAPRO2",58,0)
 W !
"RTN","ECXAPRO2",59,0)
 ;determine output device and queue if requested
"RTN","ECXAPRO2",60,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE) I ECXSAVE("POP")=1 D  Q
"RTN","ECXAPRO2",61,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAPRO2",62,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAPRO2",63,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAPRO2",64,0)
 .I '$D(^TMP($J,"RMPRGN")) D PROCESS^ECXAPRO
"RTN","ECXAPRO2",65,0)
 .D DISP
"RTN","ECXAPRO2",66,0)
 I $D(IO(0)) I IO(0)'=IO D ^%ZISC
"RTN","ECXAPRO2",67,0)
 D HOME^%ZIS
"RTN","ECXAPRO2",68,0)
 Q
"RTN","ECXAPRO2",69,0)
 ;
"RTN","ECXAPRO2",70,0)
CODE ;setup nppd codes
"RTN","ECXAPRO2",71,0)
 ;intended to duplicate code^rmprn63
"RTN","ECXAPRO2",72,0)
 N NULINE
"RTN","ECXAPRO2",73,0)
 Q:$D(^TMP($J,"RMPRCODE"))
"RTN","ECXAPRO2",74,0)
 F I=1:1 S NULINE=$P($T(TEXT+I^ECXAPRO3),";;",2) Q:NULINE["QUIT"  D
"RTN","ECXAPRO2",75,0)
 .S ^TMP($J,"RMPRCODE",$P(NULINE,";",1))=$P(NULINE,";",2)
"RTN","ECXAPRO2",76,0)
 Q
"RTN","ECXAPRO2",77,0)
 ;
"RTN","ECXAPRO2",78,0)
DISP ;display all records within nppd code group
"RTN","ECXAPRO2",79,0)
 ;based on desp^rmprn6pl
"RTN","ECXAPRO2",80,0)
 N JJ,SS,LN,PG,COST,DATE,DESC,HCPCS,LOC,PTNAM,QFLG,QTY,RDX,RDXX,SSN,TYPE,DIR,DIRUT,DTOUT,DUOUT,NPPDED ;NPPD ENT DATE CVW 144
"RTN","ECXAPRO2",81,0)
 U IO
"RTN","ECXAPRO2",82,0)
 S (QFLG,PG)=0,$P(LN,"-",81)=""
"RTN","ECXAPRO2",83,0)
 I '$G(ECXPORT) D HEADER ;144
"RTN","ECXAPRO2",84,0)
 I '$D(^TMP($J,ECXCODE)) D  Q
"RTN","ECXAPRO2",85,0)
 .I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAPRO2",86,0)
 .W !,?14,"No data available.",!
"RTN","ECXAPRO2",87,0)
 .I $E(IOST)="C",'QFLG D
"RTN","ECXAPRO2",88,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPRO2",89,0)
 ..S DIR(0)="E" D ^DIR K DIR
"RTN","ECXAPRO2",90,0)
 S RDX=0
"RTN","ECXAPRO2",91,0)
 F  S RDX=$O(^TMP($J,ECXCODE,RDX)) Q:RDX'>0  Q:QFLG  D
"RTN","ECXAPRO2",92,0)
 .S RDXX=^TMP($J,ECXCODE,RDX)
"RTN","ECXAPRO2",93,0)
 .S PTNAM=$P(RDXX,U,9),SSN=$P(RDXX,U,10)
"RTN","ECXAPRO2",94,0)
 .I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG  ;144 Don't display if exporting
"RTN","ECXAPRO2",95,0)
 .S TYPE=$P(RDXX,U,1),TYPE=$S(TYPE="X":"R",1:"I")_" "_$P(RDXX,U,2)
"RTN","ECXAPRO2",96,0)
 .S QTY=+$P(RDXX,U,3),COST=$P(RDXX,U,4),HCPCS=$P(RDXX,U,7),DESC=$P(RDXX,U,8),DATE=$P(RDXX,U,11),LOC=$P(RDXX,U,12),NPPDED=$P(RDXX,U,13) ;144 CVW
"RTN","ECXAPRO2",97,0)
 .I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=ECXEXT_U_ECXCODE_U_^TMP($J,"RMPRCODE",ECXCODE)_U_PTNAM_U_SSN_U_HCPCS_U_QTY_U_TYPE_U_COST_U_DATE_U_DESC_U_LOC_U_NPPDED,CNT=CNT+1 Q  ;144
"RTN","ECXAPRO2",98,0)
 .W !,PTNAM,?5,SSN,?10,HCPCS,?17,QTY,?26,TYPE,?30,COST,?37,DATE,?43,DESC,?64,LOC,?72,NPPDED ;144 CVW
"RTN","ECXAPRO2",99,0)
 I $G(ECXPORT) Q  ;144 Stop processing if exporting
"RTN","ECXAPRO2",100,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAPRO2",101,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPRO2",102,0)
 .S DIR(0)="E" D ^DIR K DIR
"RTN","ECXAPRO2",103,0)
 Q
"RTN","ECXAPRO2",104,0)
 ;
"RTN","ECXAPRO2",105,0)
HEADER ;header and page control
"RTN","ECXAPRO2",106,0)
 I $E(IOST)="C" D
"RTN","ECXAPRO2",107,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAPRO2",108,0)
 .I PG>0 S DIR(0)="E" D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAPRO2",109,0)
 Q:QFLG
"RTN","ECXAPRO2",110,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAPRO2",111,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report Detail",?72,"Page ",PG
"RTN","ECXAPRO2",112,0)
 W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAPRO2",113,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAPRO2",114,0)
 I ECXALL=1 W !,"Station:                 "_$P(ECXDIV,U,2)_" ("_$P(ECXDIV,U,3)_")"
"RTN","ECXAPRO2",115,0)
 I ECXALL=0 W !,"Division:                "_$P(ECXDIV,U,2)_" ("_$P(ECXDIV,U,3)_")"
"RTN","ECXAPRO2",116,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXAPRO2",117,0)
 W !,LN,!,ECXCODE," -- ",^TMP($J,"RMPRCODE",ECXCODE),?74,"NPPD"
"RTN","ECXAPRO2",118,0)
 W !,"NAME",?5,"SSN",?10,"HCPCS",?17,"QTY",?26,"TYP",?30,"COST",?37,"DATE",?43,"HCPCS DESC",?64,"STN#",?72,"ENTRY DT"
"RTN","ECXAPRO2",119,0)
 W !,LN,!
"RTN","ECXAPRO2",120,0)
 Q
"RTN","ECXBCM")
0^29^B95494822^B92776680
"RTN","ECXBCM",1,0)
ECXBCM ;ALB/JAP-Bar Code Medical Administration Extract ;6/17/15  12:40
"RTN","ECXBCM",2,0)
 ;;3.0;DSS EXTRACTS;**107,127,132,136,143,144,148,149,154**;Dec 22, 1997 ;Build 13
"RTN","ECXBCM",3,0)
 ;
"RTN","ECXBCM",4,0)
BEG ;entry point from option
"RTN","ECXBCM",5,0)
 ;ECFILE=^ECX(727.833,
"RTN","ECXBCM",6,0)
 D SETUP I ECFILE="" Q
"RTN","ECXBCM",7,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXBCM",8,0)
 Q
"RTN","ECXBCM",9,0)
 ;
"RTN","ECXBCM",10,0)
START ; start package specific extract
"RTN","ECXBCM",11,0)
 ; 
"RTN","ECXBCM",12,0)
 N ECXVAP,RERUN,ECXLDT ;143,154
"RTN","ECXBCM",13,0)
 S RERUN=0,ECXLDT=+$P($G(ECX(728,1,ECNODE)),U,ECPIECE) I ECXLDT'<ECSD S RERUN=1 ;154 If re-running date range, set RERUN to 1
"RTN","ECXBCM",14,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXBCM",15,0)
 S PIEN=0
"RTN","ECXBCM",16,0)
 I $G(ECSD)="" S ECSD=DT
"RTN","ECXBCM",17,0)
 ; loop thru and get each new patient, reset the start date to ECSD - begin date from ECXTRAC
"RTN","ECXBCM",18,0)
 F  S PIEN=$O(^PSB(53.79,"AADT",PIEN)) Q:('PIEN)  S IDAT=ECSD D
"RTN","ECXBCM",19,0)
 .F  S IDAT=$O(^PSB(53.79,"AADT",PIEN,IDAT)) Q:'IDAT!(IDAT>ECED)  S RIEN="" D
"RTN","ECXBCM",20,0)
 ..F  S RIEN=$O(^PSB(53.79,"AADT",PIEN,IDAT,RIEN)) Q:'RIEN  D
"RTN","ECXBCM",21,0)
 ...S ECXNOD=^PSB(53.79,RIEN,0) Q:'ECXNOD  S ECXDFN=$P($G(ECXNOD),U) D GET(ECSD,ECED)
"RTN","ECXBCM",22,0)
 I 'RERUN D CLEAN(0,$$FMADD^XLFDT(ECSD,-180)) ;154 If not a rerun, clean out items given global
"RTN","ECXBCM",23,0)
 Q
"RTN","ECXBCM",24,0)
 ;
"RTN","ECXBCM",25,0)
GET(ECSD,ECED) ;get extract data
"RTN","ECXBCM",26,0)
 N ECXESC,ECXECL,ECXCLST ;144
"RTN","ECXBCM",27,0)
 S (ACTDT,ECXADT,ECXAMED,ECXASTA,ECXATM,ECXORN,ECXORT,ECXOSC,ECPRO,PLACEHLD,ECXFAC,DRG,ECXESC,ECXECL,ECXCLST)="" ;144
"RTN","ECXBCM",28,0)
 ; get needed YYYYDD variable
"RTN","ECXBCM",29,0)
 I $G(ECXYM)="" S ECXYM=$$ECXYM^ECXUTL(DT)
"RTN","ECXBCM",30,0)
 ;Get Facility
"RTN","ECXBCM",31,0)
 I $G(ECXFAC)="" D
"RTN","ECXBCM",32,0)
 .S ECXFAC=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECXFAC,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXBCM",33,0)
 .D EN^DIQ1 S ECXFAC=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXBCM",34,0)
 ;
"RTN","ECXBCM",35,0)
 S ECXORN=$$GET1^DIQ(53.79,RIEN,.11)
"RTN","ECXBCM",36,0)
 ;get inpatient data
"RTN","ECXBCM",37,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW)=""
"RTN","ECXBCM",38,0)
 S X=$$INP^ECXUTL2(ECXDFN,IDAT)
"RTN","ECXBCM",39,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4)
"RTN","ECXBCM",40,0)
 S W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";")
"RTN","ECXBCM",41,0)
 ; Ordering Stop Code - based on Unit dose or IV
"RTN","ECXBCM",42,0)
 I ECXORN["U" Q:$$CHKUD(ECXDFN,ECSD,ECED)  S:ECXA="O" ECXOSC=$$DOUDO^ECXUTL5(ECXDFN,+ECXORN)
"RTN","ECXBCM",43,0)
 I ECXORN["V" Q:$$CHKIV(ECXDFN,ECSD,ECED)  S:ECXA="O" ECXOSC=$$DOIVPO^ECXUTL5(ECXDFN,+ECXORN)
"RTN","ECXBCM",44,0)
 S ECXASTA=$$GET1^DIQ(53.79,RIEN,.09,"I")
"RTN","ECXBCM",45,0)
 I "^G^S^C^"'[("^"_ECXASTA_"^") Q  ;process 'G'iven,'S'topped,'C'ompleted
"RTN","ECXBCM",46,0)
 ;get patient demographics
"RTN","ECXBCM",47,0)
 S ECXERR=0 D PAT(ECXDFN,IDAT,.ECXERR) Q:ECXERR
"RTN","ECXBCM",48,0)
 S ECPRO=$$ORDPROV^ECXUTL(ECXDFN,ECXORN,"")
"RTN","ECXBCM",49,0)
 S ACTDT=$$GET1^DIQ(53.79,RIEN,.06,"I")
"RTN","ECXBCM",50,0)
 I ACTDT'=IDAT Q
"RTN","ECXBCM",51,0)
 S ECXADT=$$ECXDATE^ECXUTL(ACTDT,ECXYM)
"RTN","ECXBCM",52,0)
 S ECXATM=$$ECXTIME^ECXUTL(ACTDT)
"RTN","ECXBCM",53,0)
 S ECXORT=$P($G(^TMP("PSJ",$J,1)),U,3) K ^TMP("PSJ",$J)
"RTN","ECXBCM",54,0)
 S ECPROPC=$P($$GET^XUA4A72(ECPRO,$P(ACTDT,".")),U,7)
"RTN","ECXBCM",55,0)
 N ECXUSRTN
"RTN","ECXBCM",56,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECPRO,$P(ACTDT,"."))
"RTN","ECXBCM",57,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECPRONPI=$P(ECXUSRTN,U)
"RTN","ECXBCM",58,0)
 S ECXAMED=$$GET1^DIQ(53.79,RIEN,.08,"I")
"RTN","ECXBCM",59,0)
 ;Component code data
"RTN","ECXBCM",60,0)
 D CCODE(RIEN)
"RTN","ECXBCM",61,0)
 Q
"RTN","ECXBCM",62,0)
 ;
"RTN","ECXBCM",63,0)
CMPT ; during component/sequence processing, retrieve rest of data record then file it.
"RTN","ECXBCM",64,0)
 S (ECXSCADT,ECXOS,ECXIVID,ECXIR,SCADT,ECXSCADT,ECXSCATM,DRUG,ECVNDC,ECINV,ECVACL,ECXVAP)="" ;143
"RTN","ECXBCM",65,0)
 I $G(DRG) D
"RTN","ECXBCM",66,0)
 .S DRUG=$$PHAAPI^ECXUTL5(DRG)
"RTN","ECXBCM",67,0)
 .S ECVNDC=$P(DRUG,U,3)
"RTN","ECXBCM",68,0)
 .S ECINV=$P(DRUG,U,4)
"RTN","ECXBCM",69,0)
 .I ECXLOGIC<2014 D
"RTN","ECXBCM",70,0)
 ..S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXBCM",71,0)
 .;New way to calculate cost dea spl hndlg **144
"RTN","ECXBCM",72,0)
 .I ECXLOGIC>2013 D
"RTN","ECXBCM",73,0)
 ..S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"")
"RTN","ECXBCM",74,0)
 .S ECVACL=$P(DRUG,U,2)
"RTN","ECXBCM",75,0)
 .S ECXVAP=$P(DRUG,U,6) ;143 set ECXVAP to VA PRODUCT IEN
"RTN","ECXBCM",76,0)
 S SCADT=$$GET1^DIQ(53.79,RIEN,.13,"I")
"RTN","ECXBCM",77,0)
 S ECXSCADT=$$ECXDATE^ECXUTL(SCADT,ECXYM)
"RTN","ECXBCM",78,0)
 S ECXSCATM=$$ECXTIME^ECXUTL(SCADT)
"RTN","ECXBCM",79,0)
 S ECXOS=$$GET1^DIQ(53.79,RIEN,.12,"I")
"RTN","ECXBCM",80,0)
 S ECXIVID=$$GET1^DIQ(53.79,RIEN,.26)
"RTN","ECXBCM",81,0)
 S ECXIR=$$GET1^DIQ(53.79,RIEN,.35)
"RTN","ECXBCM",82,0)
 S ECXDIV=$$RADDIV^ECXDEPT($$GET1^DIQ(53.79,RIEN,.03,"I"))
"RTN","ECXBCM",83,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXBCM",84,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ACTDT,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXBCM",85,0)
 D:ECXENC'="" FILE^ECXBCM1 ;154 Moved filing task for space considerations
"RTN","ECXBCM",86,0)
 Q
"RTN","ECXBCM",87,0)
 ;
"RTN","ECXBCM",88,0)
PAT(ECXDFN,ECXDATE,ECXERR)  ;get patient demographics, primary care, and inpatient data
"RTN","ECXBCM",89,0)
 N X
"RTN","ECXBCM",90,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXBCM",91,0)
 ;get patient data
"RTN","ECXBCM",92,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXBCM",93,0)
 I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXBCM",94,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXBCM",95,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXBCM",96,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXBCM",97,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXBCM",98,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXBCM",99,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXBCM",100,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXBCM",101,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXBCM",102,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXBCM",103,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXBCM",104,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXBCM",105,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXBCM",106,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXBCM",107,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXBCM",108,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXBCM",109,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXBCM",110,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXBCM",111,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXBCM",112,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXBCM",113,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXBCM",114,0)
 S ECXMTST=ECXPAT("MEANS")
"RTN","ECXBCM",115,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXBCM",116,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune status
"RTN","ECXBCM",117,0)
 S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXBCM",118,0)
 S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXBCM",119,0)
 S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN) S ECXCNHU=$S(ECXCNHU'="":$E(ECXCNHU,1),1:"") ;get CNHU status
"RTN","ECXBCM",120,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXBCM",121,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXBCM",122,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)                  ; Head and Neck Cancer Indicator
"RTN","ECXBCM",123,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)                 ; PROJ 112/SHAD Indicator
"RTN","ECXBCM",124,0)
 I ECXSHADI="U" S ECXSHADI=""                      ; If Shad comes back as "U" force to null
"RTN","ECXBCM",125,0)
 S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1")  ; Race and Ethnicity
"RTN","ECXBCM",126,0)
 S ECXERI=ECXPAT("ERI")                            ; emergency response indicator (FEMA)
"RTN","ECXBCM",127,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)               ; PATCAT code / patch 127  
"RTN","ECXBCM",128,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXBCM",129,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXBCM",130,0)
 ;
"RTN","ECXBCM",131,0)
 ;get primary care data
"RTN","ECXBCM",132,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXBCM",133,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXBCM",134,0)
 ;get national patient record flag, if it exists
"RTN","ECXBCM",135,0)
 D NPRF^ECXUTL5     ; sets ECXNPRFI
"RTN","ECXBCM",136,0)
 Q
"RTN","ECXBCM",137,0)
 ;
"RTN","ECXBCM",138,0)
CCODE(RIEN) ; get component information
"RTN","ECXBCM",139,0)
 ;  input - IEN of the BCMA MEDICATION LOG File
"RTN","ECXBCM",140,0)
 ; 
"RTN","ECXBCM",141,0)
 ; output - CCIEN: pointer to a variable pointer field to file #50, #52.6, or #52.7
"RTN","ECXBCM",142,0)
 ;          CCDORD: .02 field of file #50, #52.6, or #52.7
"RTN","ECXBCM",143,0)
 ;          CCDGVN: .03 FIELD of file #50, #52.6, or #52.7
"RTN","ECXBCM",144,0)
 ;          CCUNIT: .04 field of file #50, #52.6, or #52.7
"RTN","ECXBCM",145,0)
 ;          CCTYPE: derived field, "D", "A", or "S"
"RTN","ECXBCM",146,0)
 ;
"RTN","ECXBCM",147,0)
 S (CCIEN,CCDORD,CCDGVN,CCUNIT,CCTYPE)=""
"RTN","ECXBCM",148,0)
 F I=.5,.6,.7 D
"RTN","ECXBCM",149,0)
 .I '$O(^PSB(53.79,RIEN,I,0)) Q
"RTN","ECXBCM",150,0)
 .S J=0 F  S J=$O(^PSB(53.79,RIEN,I,J)) Q:'J  D
"RTN","ECXBCM",151,0)
 ..S DATA=^PSB(53.79,RIEN,I,J,0)
"RTN","ECXBCM",152,0)
 ..S (UNITCOST,ECXDRGC,ECXIVSC,ECXIVAC)=0 ;144 NEW COST FIELDS
"RTN","ECXBCM",153,0)
 ..S CCIEN=$P(DATA,U),CCDORD=$P(DATA,U,2),CCDGVN=$S(+($P(DATA,U,3))>0:+($P(DATA,U,3)),1:1),CCUNIT=$S(+($P(DATA,U,4))>0:+($P(DATA,U,4)),1:1)
"RTN","ECXBCM",154,0)
 ..I I=.5 D  ;144 New drug Cost Fields added
"RTN","ECXBCM",155,0)
 ...S DRG=CCIEN,UNITCOST=$$GET1^DIQ(50,DRG,16,"I")
"RTN","ECXBCM",156,0)
 ...S ECXDRGC=(CCDGVN*CCUNIT)*UNITCOST
"RTN","ECXBCM",157,0)
 ..I I=.6 D  ;144 New IV Additive Cost Fields added
"RTN","ECXBCM",158,0)
 ...S DRG=$$GET1^DIQ(52.6,CCIEN,1,"I"),UNITCOST=$$GET1^DIQ(52.6,CCIEN,7,"I")
"RTN","ECXBCM",159,0)
 ...S ECXIVAC=CCDGVN*UNITCOST
"RTN","ECXBCM",160,0)
 ..I I=.7 D  ;144 New IV Solution Cost Fields added
"RTN","ECXBCM",161,0)
 ...S DRG=$$GET1^DIQ(52.7,CCIEN,1,"I"),UNITCOST=$$GET1^DIQ(52.7,CCIEN,7,"I")
"RTN","ECXBCM",162,0)
 ...S ECXIVSC=CCDGVN*UNITCOST
"RTN","ECXBCM",163,0)
 ..S CCTYPE=$S(I=.5:"D",I=.6:"A",I=.7:"S",1:"")
"RTN","ECXBCM",164,0)
 ..S CCIEN=$S(I=.5:CCIEN_";PSDRUG(",I=.6:CCIEN_";PS(52.6,",I=.7:CCIEN_";PS(52.7,",1:"")
"RTN","ECXBCM",165,0)
 ..S CCDGVN=$P(DATA,U,3) ;148 Reset component dose given to original value
"RTN","ECXBCM",166,0)
 ..S CCUNIT=$P(DATA,U,4) ;148 Reset component unit to original value
"RTN","ECXBCM",167,0)
 ..I $$MULTI I '$$FIRST Q  ;154 If it's a multi-dose container, only count if it's the 1st administration
"RTN","ECXBCM",168,0)
 ..D CMPT
"RTN","ECXBCM",169,0)
 Q
"RTN","ECXBCM",170,0)
 ;
"RTN","ECXBCM",171,0)
CHKIV(ECXDFN,ECSD,ECED) ; Check file 728.113 for matching IV records 
"RTN","ECXBCM",172,0)
 ;  input - ECXDFN   DFN of the patient from the BCMA file
"RTN","ECXBCM",173,0)
 ;          ECSD:    Start Date for the extract 
"RTN","ECXBCM",174,0)
 ;          ECED:    End Date for the extract 
"RTN","ECXBCM",175,0)
 ; return - True     if the Order is in file 728.113  
"RTN","ECXBCM",176,0)
 ;          False    if the Order is Not in file 728.113 
"RTN","ECXBCM",177,0)
 ;
"RTN","ECXBCM",178,0)
 N IVIEN,ORD,IVORN,ECD,EXTRACT,STDATE,ENDDATE
"RTN","ECXBCM",179,0)
 S (ORD,ECD,STDATE,ENDDATE)=0
"RTN","ECXBCM",180,0)
 S (IVORN,EXTRACT)=""
"RTN","ECXBCM",181,0)
 I '$O(^ECX(728.113,0)) D     ; Check to see if data exists in the file, if not, recreate
"RTN","ECXBCM",182,0)
 .S EXTRACT="IV"
"RTN","ECXBCM",183,0)
 .S STDATE=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",184,0)
 .S ENDDATE=ECED
"RTN","ECXBCM",185,0)
 .D START^PSJDSS
"RTN","ECXBCM",186,0)
 S IVORN=$P(ECXORN,"V")
"RTN","ECXBCM",187,0)
 S ECD=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",188,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)) Q:'ECD!(ECD>ECED)!(ORD=IVORN)  D
"RTN","ECXBCM",189,0)
 .S ORD=0
"RTN","ECXBCM",190,0)
 .F  S ORD=$O(^ECX(728.113,"A",ECD,ECXDFN,ORD)) Q:'ORD!(ORD=IVORN)
"RTN","ECXBCM",191,0)
 I ORD=IVORN Q 1
"RTN","ECXBCM",192,0)
 Q 0 ;Checks show order not in IV 728.113
"RTN","ECXBCM",193,0)
 ;
"RTN","ECXBCM",194,0)
CHKUD(ECXDFN,ECSD,ECED) ; Check file 728.904 for matching Unit dose records
"RTN","ECXBCM",195,0)
 ;  input - ECXDFN   DFN of the patient from the BCMA file
"RTN","ECXBCM",196,0)
 ;          ECSD:    Start Date for the extract 
"RTN","ECXBCM",197,0)
 ;          ECED:    End Date for the extract 
"RTN","ECXBCM",198,0)
 ; return - True     if the Order is in file 728.904
"RTN","ECXBCM",199,0)
 ;          False    if the Order is Not in file 728.904
"RTN","ECXBCM",200,0)
 ;
"RTN","ECXBCM",201,0)
 N UDIEN,UDORN,ORD,EXTRACT,STDATE,ENDDATE
"RTN","ECXBCM",202,0)
 S (ORD,STDATE,ENDDATE)=0
"RTN","ECXBCM",203,0)
 S (UDORN,EXTRACT)=""
"RTN","ECXBCM",204,0)
 I '$O(^ECX(728.904,0)) D    ; Check to see if data exists in the file, if not, recreate
"RTN","ECXBCM",205,0)
 .S EXTRACT="UD"
"RTN","ECXBCM",206,0)
 .S STDATE=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",207,0)
 .S ENDDATE=ECED
"RTN","ECXBCM",208,0)
 .D START^PSJDSS
"RTN","ECXBCM",209,0)
 S UDORN=$P(ECXORN,"U")
"RTN","ECXBCM",210,0)
 F  S ORD=$O(^ECX(728.904,"AO",ECXDFN,ORD)) Q:'ORD!(ORD=UDORN)
"RTN","ECXBCM",211,0)
 I ORD=UDORN Q 1
"RTN","ECXBCM",212,0)
 ;I $$GET1^DIQ(55.06,UDORN_","_ECXDFN,7,"I")="R" Q 1
"RTN","ECXBCM",213,0)
 Q 0 ;Checks show order not in UD 728.904
"RTN","ECXBCM",214,0)
 ;
"RTN","ECXBCM",215,0)
FIRST() ;154 Section added to determine if this is the first administration of the medication since pharmacist verification
"RTN","ECXBCM",216,0)
 N ALIEN,ADATE,FIRST,VDATE,DONE,IENS,ON
"RTN","ECXBCM",217,0)
 S FIRST=0,VDATE="",DONE=0
"RTN","ECXBCM",218,0)
 S ON=+ECXORN ;get numeric portion of order multiple IEN
"RTN","ECXBCM",219,0)
 S ALIEN=0 F  S ALIEN=$O(^PS(55,ECXDFN,$S(ECXORN["U":5,1:"IV"),ON,$S(ECXORN["U":9,1:"A"),ALIEN)) Q:'+ALIEN!(DONE)  S IENS=ALIEN_","_ON_","_ECXDFN_"," D
"RTN","ECXBCM",220,0)
 .S ADATE=$$GET1^DIQ($S(ECXORN["U":55.09,1:55.04),IENS,$S(ECXORN["U":".01",1:".05"),"I")
"RTN","ECXBCM",221,0)
 .I ADATE>IDAT S DONE=1 Q  ;activity date is after administration date
"RTN","ECXBCM",222,0)
 .I ECXORN["U" I "^VP^VPR^"[("^"_$$GET1^DIQ(55.09,IENS,"2:1")_"^") S VDATE=ADATE
"RTN","ECXBCM",223,0)
 .I ECXORN["V" I $$GET1^DIQ(55.04,IENS,".04")="ORDER VERIFIED BY PHARMACIST" S VDATE=ADATE
"RTN","ECXBCM",224,0)
 I VDATE'="" D
"RTN","ECXBCM",225,0)
 .I '$D(^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN))!($G(^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN))=RIEN) S FIRST=1
"RTN","ECXBCM",226,0)
 .I '$D(^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN)) S ^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN)=RIEN
"RTN","ECXBCM",227,0)
 Q FIRST
"RTN","ECXBCM",228,0)
 ;
"RTN","ECXBCM",229,0)
CLEAN(START,END) ;154 Section added to delete old log entries
"RTN","ECXBCM",230,0)
 N DATE,PAT,ON
"RTN","ECXBCM",231,0)
 S DATE=START F  S DATE=$O(^XTMP("ECXBCM",DATE)) Q:'+DATE!(DATE>END)  S PAT=0 F  S PAT=$O(^XTMP("ECXBCM",DATE,PAT)) Q:'+PAT  S ON=0 F  S ON=$O(^XTMP("ECXBCM",DATE,PAT,ON)) Q:'+ON  K ^XTMP("ECXBCM",DATE,PAT,ON)
"RTN","ECXBCM",232,0)
 S ^XTMP("ECXBCM",0)=$$FMADD^XLFDT($$DT^XLFDT,365)_"^"_$$DT^XLFDT_"^"_"Log of BCMA orders that have already been counted"
"RTN","ECXBCM",233,0)
 Q
"RTN","ECXBCM",234,0)
 ;
"RTN","ECXBCM",235,0)
MULTI() ;154 Section added to determine if this is a multi-dose container
"RTN","ECXBCM",236,0)
 N COMP,TERM,OFF,UNIT,MULTI
"RTN","ECXBCM",237,0)
 S MULTI=1 ;Assume it is a multi-dose container
"RTN","ECXBCM",238,0)
 S UNIT=$$UP^XLFSTR($TR(CCUNIT," 0123456789","")) ;Convert to upper case and remove any numbers or spaces
"RTN","ECXBCM",239,0)
 F COMP="EQUAL","CONTAIN" F OFF=1:1 S TERM=$P($T(@COMP+OFF),";",2) Q:TERM="DONE"!('MULTI)  D
"RTN","ECXBCM",240,0)
 .I COMP="EQUAL" I UNIT=TERM S MULTI=0 Q  ;Not a multi-dose container
"RTN","ECXBCM",241,0)
 .I COMP="CONTAIN" I UNIT[TERM S MULTI=0 ;Not a multi-dose container
"RTN","ECXBCM",242,0)
 Q MULTI
"RTN","ECXBCM",243,0)
 ;
"RTN","ECXBCM",244,0)
EQUAL ;154, list of terms for equality check
"RTN","ECXBCM",245,0)
 ;AMP
"RTN","ECXBCM",246,0)
 ;AMPULE
"RTN","ECXBCM",247,0)
 ;BOTTLE
"RTN","ECXBCM",248,0)
 ;CAP
"RTN","ECXBCM",249,0)
 ;LOZENGE
"RTN","ECXBCM",250,0)
 ;PACKAGE
"RTN","ECXBCM",251,0)
 ;PACKET
"RTN","ECXBCM",252,0)
 ;PKG
"RTN","ECXBCM",253,0)
 ;SUPPOSITORY
"RTN","ECXBCM",254,0)
 ;SYRINGE
"RTN","ECXBCM",255,0)
 ;TAB
"RTN","ECXBCM",256,0)
 ;UNITDOSE
"RTN","ECXBCM",257,0)
 ;VIAL
"RTN","ECXBCM",258,0)
 ;EACH
"RTN","ECXBCM",259,0)
 ;VI
"RTN","ECXBCM",260,0)
 ;VL
"RTN","ECXBCM",261,0)
 ;SYR
"RTN","ECXBCM",262,0)
 ;SYG
"RTN","ECXBCM",263,0)
 ;AMPOULE
"RTN","ECXBCM",264,0)
 ;CARTRIDGE
"RTN","ECXBCM",265,0)
 ;CHEWTAB
"RTN","ECXBCM",266,0)
 ;LOZ
"RTN","ECXBCM",267,0)
 ;TUBEX
"RTN","ECXBCM",268,0)
 ;DONE
"RTN","ECXBCM",269,0)
CONTAIN ;154, list of terms for contains check
"RTN","ECXBCM",270,0)
 ;AMP,
"RTN","ECXBCM",271,0)
 ;CAP,
"RTN","ECXBCM",272,0)
 ;CAP/
"RTN","ECXBCM",273,0)
 ;SUPP
"RTN","ECXBCM",274,0)
 ;TAB,
"RTN","ECXBCM",275,0)
 ;SOLUTAB
"RTN","ECXBCM",276,0)
 ;SOFTGEL
"RTN","ECXBCM",277,0)
 ;DONE
"RTN","ECXBCM",278,0)
 ;
"RTN","ECXBCM",279,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXBCM",280,0)
 S ECHEAD="BCM"
"RTN","ECXBCM",281,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXBCM",282,0)
 Q
"RTN","ECXBCM1")
0^38^B10283039^n/a
"RTN","ECXBCM1",1,0)
ECXBCM1 ;ALB/JAP-Bar Code Medical Administration Extract Cont. ;6/5/15  14:34
"RTN","ECXBCM1",2,0)
 ;;3.0;DSS EXTRACTS;**154**;Dec 22, 1997 ;Build 13
"RTN","ECXBCM1",3,0)
 ;
"RTN","ECXBCM1",4,0)
FILE ;file the extract record
"RTN","ECXBCM1",5,0)
 ;node0
"RTN","ECXBCM1",6,0)
 ;Sequence Number,Year Month, Extract Number (EC23)^facility (ECXFAC)^
"RTN","ECXBCM1",7,0)
 ;dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^
"RTN","ECXBCM1",8,0)
 ;in/out (ECXA)^Day (ECXADT)^
"RTN","ECXBCM1",9,0)
 ;date of birth (ECDOB)^Gender (ECXSEX)^State (ECXSTATE)^County (ECXCNTY)^
"RTN","ECXBCM1",10,0)
 ;zip code (ECXZIP)^country (ECXCNTRY)^ward (ECXW)^treating speciality (ECXTSC)^
"RTN","ECXBCM1",11,0)
 ;provider (ECPRO)^provider person class (ECPROPC)^provider npi (ECPRONPI)^
"RTN","ECXBCM1",12,0)
 ;primary care provider(ECPTPR)^pc provider person class (ECCLAS)^
"RTN","ECXBCM1",13,0)
 ;primary care provider NPI (ECPTNPI)^primary care team (ECPTTM)^ordering stop code (ECXOSC)^
"RTN","ECXBCM1",14,0)
 ;NODE(1)
"RTN","ECXBCM1",15,0)
 ;place order number (RIEN)^order reference number (ECXORN)^route (ECXORT)^
"RTN","ECXBCM1",16,0)
 ;^action time (ECXATM)^component code (CCIEN)^
"RTN","ECXBCM1",17,0)
 ;component dose ordered (CCDORD)^component dose given(CCDGVN)^
"RTN","ECXBCM1",18,0)
 ;component units (CCUNIT)^component type (CCTYPE)^Action Status (ECXASTA)^
"RTN","ECXBCM1",19,0)
 ;Administration Medication (ECXAMED)^Scheduled Administration Date (ECXSCADT)^
"RTN","ECXBCM1",20,0)
 ;NODE(2)
"RTN","ECXBCM1",21,0)
 ;Scheduled Administration Time (ECXSCATM)^
"RTN","ECXBCM1",22,0)
 ;Order Schedule (ECXOS)^IV Unique ID (ECXIVID)^
"RTN","ECXBCM1",23,0)
 ;Infusion Rate (ECXIR)^Production Division Code (ECXDIV)^Drug IEN (ECXVAP)^NDC (ECVNDC)^ ;;143, changed Drug IEN var from DRG to ECXVAP
"RTN","ECXBCM1",24,0)
 ;Investigational (DEA Special Handling) (ECINV)^VA Drug Classification (ECVACL)^
"RTN","ECXBCM1",25,0)
 ;Master Patient Index (ECXMPI)^DOM, PRRTP and SAARTP Indicator (ECXDOM)^
"RTN","ECXBCM1",26,0)
 ;Observation Patient Indicator (ECXOBS)^Encounter Number (ECXENC)^Means Test (ECXMTST)^
"RTN","ECXBCM1",27,0)
 ;Eligibility (ECXELIG)^Enrollment Location (ECXENRL)^Enrollment Category (ECXCAT)^
"RTN","ECXBCM1",28,0)
 ;Enrollment Status (ECXSTAT)^Enrollment Priority (ECXPRIOR)_(ECXSBGRP)^
"RTN","ECXBCM1",29,0)
 ;User Enrollee (ECXUESTA)^
"RTN","ECXBCM1",30,0)
 ;Ethnicity(ECXETH)^Race 1(ECXRC1)^Veteran(ECXVET)^Period of Service(ECXPOS)^POW Status(ECXPST)^
"RTN","ECXBCM1",31,0)
 ;POW Location(ECXPLOC)^Radiation Status(ECXRST)^Agent Orange Status(ECXAST)^Agent Orange Location(ECXAOL)
"RTN","ECXBCM1",32,0)
 ;^Purple Heart Indicator(ECXPHI)^MST Status(ECXMST)^CNH/SH Status(ECXCNHU)^
"RTN","ECXBCM1",33,0)
 ;Head & Neck Cancer Indicator(ECXHNCI)^SHAD Status(ECXSHADI)
"RTN","ECXBCM1",34,0)
 ;NODE(3)
"RTN","ECXBCM1",35,0)
 ;Patient Type(ECXPTYPE)^
"RTN","ECXBCM1",36,0)
 ;CV Status Eligibility(ECXCVE)^CV Eligibility End Date(ECXCVEDT)^Encounter CV(ECXCVENC)^
"RTN","ECXBCM1",37,0)
 ;National Patient Record Flag(ECXNPRFI)^ERI(ECXERI)^SW Asia Conditions(ECXEST)^
"RTN","ECXBCM1",38,0)
 ;OEF/OIF(ECXOEF)^OEF/OIF Return Date(ECXOEFDT)^PATCAT(ECXPATCAT)
"RTN","ECXBCM1",39,0)
 ;Encounter SC (ECXESC)^IV Additives Cost ECXIVAC^IV Solutions Cost ECXIVSC^Drug cost ECXDRGC^Camp Lejeune Status (ECXCLST)^Encounter Camp Lejeune (ECXECL)
"RTN","ECXBCM1",40,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)
"RTN","ECXBCM1",41,0)
 ;
"RTN","ECXBCM1",42,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXBCM1",43,0)
 N ECXDATA,ECXTSC
"RTN","ECXBCM1",44,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXBCM1",45,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXBCM1",46,0)
 N DA,DIK
"RTN","ECXBCM1",47,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXBCM1",48,0)
 S ECODE(0)=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXADT
"RTN","ECXBCM1",49,0)
 S ECODE(0)=ECODE(0)_U_ECXDOB_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXCNTRY
"RTN","ECXBCM1",50,0)
 S ECODE(0)=ECODE(0)_U_ECXW_U_ECXTSC_U_2_ECPRO_U_ECPROPC_U_ECPRONPI_U_ECPTPR_U_ECCLAS
"RTN","ECXBCM1",51,0)
 S ECODE(0)=ECODE(0)_U_ECPTNPI_U_ECPTTM_U_ECXOSC_U
"RTN","ECXBCM1",52,0)
 S ECODE(1)=RIEN_U_ECXORN_U_ECXORT_U_ECXATM_U_CCIEN_U_CCDORD_U_CCDGVN
"RTN","ECXBCM1",53,0)
 S ECODE(1)=ECODE(1)_U_CCUNIT_U_CCTYPE_U_ECXASTA_U_ECXAMED_U_ECXSCADT_U
"RTN","ECXBCM1",54,0)
 S ECODE(2)=ECXSCATM_U_ECXOS_U_ECXIVID_U_ECXIR_U_ECXDIV_U_ECXVAP_U_ECVNDC_U_ECINV_U_ECVACL_U_ECXMPI_U_ECXDOM ;143 Changed DRUG IEN field from DRG to ECXVAP
"RTN","ECXBCM1",55,0)
 S ECODE(2)=ECODE(2)_U_$E(ECXOBS,1)_U_ECXENC_U_ECXMTST_U_ECXELIG_U_ECXENRL_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_ECXSBGRP
"RTN","ECXBCM1",56,0)
 S ECODE(2)=ECODE(2)_U_ECXUESTA_U_ECXETH_U_ECXRC1_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC
"RTN","ECXBCM1",57,0)
 S ECODE(2)=ECODE(2)_U_ECXRST_U_ECXAST_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXCNHU_U_ECXHNCI_U_ECXSHADI_U
"RTN","ECXBCM1",58,0)
 S ECODE(3)=ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI_U_ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT
"RTN","ECXBCM1",59,0)
 S ECODE(3)=ECODE(3)_U_ECXPATCAT
"RTN","ECXBCM1",60,0)
 I ECXLOGIC>2013 S ECODE(3)=ECODE(3)_U_ECXESC_U_ECXIVAC_U_ECXIVSC_U_ECXDRGC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXBCM1",61,0)
 I ECXLOGIC>2014 S ECODE(3)=ECODE(3)_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXBCM1",62,0)
 ;
"RTN","ECXBCM1",63,0)
 N DA,DIK,X S X=""
"RTN","ECXBCM1",64,0)
 F X=0:1:3 S ^ECX(ECFILE,EC7,X)=ECODE(X)
"RTN","ECXBCM1",65,0)
 S ECRN=ECRN+1
"RTN","ECXBCM1",66,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXBCM1",67,0)
 Q
"RTN","ECXBCM1",68,0)
 ;
"RTN","ECXEC")
0^5^B89043397^B80584714
"RTN","ECXEC",1,0)
ECXEC ;ALB/JAP,BIR/JLP,PTD-DSS Event Capture Extract  ;4/20/15  09:32
"RTN","ECXEC",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,24,27,33,39,46,49,71,89,92,105,120,127,132,136,144,149,154**;Dec 22, 1997;Build 13
"RTN","ECXEC",3,0)
BEG ;entry point from option
"RTN","ECXEC",4,0)
 I '$D(^ECH) W !,"Event Capture is not initialized",!! Q
"RTN","ECXEC",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXEC",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXEC",7,0)
 Q
"RTN","ECXEC",8,0)
START ;begin EC extract
"RTN","ECXEC",9,0)
 N X,Y,ECDCM,ECXNPRFI,ECXVIET,ECX4CHAR ; 144 national 4char code
"RTN","ECXEC",10,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104
"RTN","ECXEC",11,0)
 S ECED=ECED+.3,ECLL=0
"RTN","ECXEC",12,0)
 K ^TMP("EC",$J)
"RTN","ECXEC",13,0)
 F  S ECLL=$O(^ECH("AC1",ECLL)),ECD=ECSD-.1 Q:'ECLL  D
"RTN","ECXEC",14,0)
 .F  S ECD=$O(^ECH("AC1",ECLL,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXEC",15,0)
 ..F  S ECDA=$O(^ECH("AC1",ECLL,ECD,ECDA)) Q:'ECDA  D UPDATE
"RTN","ECXEC",16,0)
 Q
"RTN","ECXEC",17,0)
 ;
"RTN","ECXEC",18,0)
UPDATE ;sets record and updates counters
"RTN","ECXEC",19,0)
 N ECXESC,ECXECL,ECXCLST,ECXRES1,ECXRES2,ECXRES3,ECPNM,ECDSSE,ROOT ;149,154
"RTN","ECXEC",20,0)
 S (ECXESC,ECXECL,ECXCLST,ECXRES1,ECXRES2,ECXRES3)="" ;144
"RTN","ECXEC",21,0)
 S ECCH=^ECH(ECDA,0),ECL=$P(ECCH,U,4),ECXDFN=$P(ECCH,U,2)
"RTN","ECXEC",22,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECL)  ;Get production division from file 4
"RTN","ECXEC",23,0)
 S ECDT=$P(ECCH,U,3),ECM=$P(ECCH,U,6),ECC=$P(ECCH,U,8)
"RTN","ECXEC",24,0)
 S ECTM=$$ECXTIME^ECXUTL(ECDT),ECP=$P(ECCH,U,9) ;154 Moved line to be in front of call to ECXUTL2
"RTN","ECXEC",25,0)
 I $P(ECP,";",2)[725 S ECPNM=$$GET1^DIQ(725,+ECP,1) ;154 Get procedure name
"RTN","ECXEC",26,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECDT,"1;3;5;")
"RTN","ECXEC",27,0)
 Q:ECP']""
"RTN","ECXEC",28,0)
 S ECO=$P(ECCH,U,12),ECV=$P(ECCH,U,10),ECDU=$P(ECCH,U,7)
"RTN","ECXEC",29,0)
 S ECXUNIT=$G(^ECD(ECDU,0)),ECCS=+$P(ECXUNIT,U,4),ECDCM=$P(ECXUNIT,U,5)
"RTN","ECXEC",30,0)
 S ECXDSSP="",ECXDSSD=$E(ECDCM,1,10),ECUSTOP=$P(ECXUNIT,U,10),ECUPCE=$P(ECXUNIT,U,14)
"RTN","ECXEC",31,0)
 S ICD9=$P($G(^ECH(ECDA,"P")),U,2) ;154
"RTN","ECXEC",32,0)
 S (ECXICD9,ECXICD10P,ECX4CHAR)="" I ICD9'="" S ECXICD9=$$CODEC^ICDEX(80,ICD9) ;144,154
"RTN","ECXEC",33,0)
 I ICD9'="" I $$CSI^ICDEX(80,ICD9)=30 S ECXICD10P=ECXICD9,ECXICD9="" ;154
"RTN","ECXEC",34,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXEC",35,0)
 F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXEC",36,0)
 S (CNT,I)=0
"RTN","ECXEC",37,0)
 F  S CNT=$O(^ECH(ECDA,"DX",CNT)) Q:'CNT  D  Q:I>3
"RTN","ECXEC",38,0)
 .S ICD9=$P($G(^ECH(ECDA,"DX",CNT,0)),U) D:ICD9'=""
"RTN","ECXEC",39,0)
 ..S ROOT=$S($$CSI^ICDEX(80,ICD9)=30:"ECXICD10",1:"ECXICD9") ;154
"RTN","ECXEC",40,0)
 ..S I=I+1,@(ROOT_I)=$$CODEC^ICDEX(80,ICD9) ;154
"RTN","ECXEC",41,0)
 ;derivation of dss identifier depends on whether dss unit is 
"RTN","ECXEC",42,0)
 ;set to send data to pce
"RTN","ECXEC",43,0)
 S ECAC=$P($G(ECCH),U,19) S:ECAC=0 ECAC="" ;144 Change value to null if value from event capture patient file is 0
"RTN","ECXEC",44,0)
 S ECX4CHAR=$$RJ^XLFSTR($$GET1^DIQ(728.44,+ECAC,7,"E"),4,0) ; 144,154 use the assoc clinic to get 4char code, default to 0000 if non-existent
"RTN","ECXEC",45,0)
 ;if this is a record that 'goes to pce', then get the dss identifier
"RTN","ECXEC",46,0)
 ;from the clinic stop codes
"RTN","ECXEC",47,0)
 S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",48,0)
 I ECUPCE="A"!(ECUPCE="O"&(ECXA="O")) D
"RTN","ECXEC",49,0)
 .D:+ECAC
"RTN","ECXEC",50,0)
 ..S ECAC1=$P($G(^SC(+ECAC,0)),U,7),ECAC2=$P($G(^(0)),U,18)
"RTN","ECXEC",51,0)
 ..I 'ECAC2 S ECAC2S="000"
"RTN","ECXEC",52,0)
 ..I 'ECAC1 S (ECAC1S,ECAC2S)="000" Q
"RTN","ECXEC",53,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECAC1,0)),U,2)
"RTN","ECXEC",54,0)
 ..S ECAC2S=$P($G(^DIC(40.7,+ECAC2,0)),U,2)
"RTN","ECXEC",55,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S=$$RJ^XLFSTR(ECAC2S,3,0)
"RTN","ECXEC",56,0)
 .S:'ECAC (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",57,0)
 ;if this record doesn't go to pce, then get the dss identifier
"RTN","ECXEC",58,0)
 ;from the dss unit
"RTN","ECXEC",59,0)
 I ECUPCE=""!(ECUPCE="N")!(ECUPCE="O"&(ECXA="I")) D
"RTN","ECXEC",60,0)
 .S ECAC1S=$$RJ^XLFSTR($P($G(^DIC(40.7,+ECUSTOP,0)),U,2),3,0) ;154
"RTN","ECXEC",61,0)
 .S ECAC2S=$$RJ^XLFSTR($P($G(^DIC(40.7,+$P(ECXUNIT,U,13),0)),U,2),3,0) ;154
"RTN","ECXEC",62,0)
 .S ECX4CHAR=$$RJ^XLFSTR($$GET1^DIQ(728.441,+$P(ECXUNIT,U,15),.01,"E"),4,0) ;154
"RTN","ECXEC",63,0)
 S ECDSS=ECAC1S_ECAC2S
"RTN","ECXEC",64,0)
 I ECXLOGIC>2003 I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXEC",65,0)
 S ECXDIV=""
"RTN","ECXEC",66,0)
 ;
"RTN","ECXEC",67,0)
 ;- Ord Div, Contrct St/End Dates, Contrct Type placeholders for FY2002
"RTN","ECXEC",68,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXEC",69,0)
 ;setup provider(s) as'2'_ien
"RTN","ECXEC",70,0)
 S (ECU1A,ECU2A,ECU3A,ECU1NPI,ECU2NPI,ECU3NPI,ECXPPC1,ECXPPC2,ECXPPC3,ECU1,ECU2,ECU3,ECU4,ECU5,ECU6,ECU7)="" ;144 CVW
"RTN","ECXEC",71,0)
 S (ECU4A,ECU5A,ECU6A,ECU7A,ECU4NPI,ECU5NPI,ECU6NPI,ECU7NPI,ECXPPC4,ECXPPC5,ECXPPC6,ECXPPC7)="" ;144
"RTN","ECXEC",72,0)
 K ECXPRV S ECXPROV=$$GETPRV^ECPRVMUT(ECDA,.ECXPRV) I ECXPROV Q
"RTN","ECXEC",73,0)
 F I=1:1:7 S Y=$O(ECXPRV("")) I Y'="" S @("ECU"_I)=+ECXPRV(Y) K ECXPRV(Y)
"RTN","ECXEC",74,0)
 S:$L(ECU1) ECXPPC1=$$PRVCLASS^ECXUTL(ECU1,ECDT),ECU1A="2"_$P(ECU1,";")
"RTN","ECXEC",75,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU1,ECDT)
"RTN","ECXEC",76,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU1NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",77,0)
 S:$L(ECU2) ECXPPC2=$$PRVCLASS^ECXUTL(ECU2,ECDT),ECU2A="2"_$P(ECU2,";")
"RTN","ECXEC",78,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU2,ECDT)
"RTN","ECXEC",79,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU2NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",80,0)
 S:$L(ECU3) ECXPPC3=$$PRVCLASS^ECXUTL(ECU3,ECDT),ECU3A="2"_$P(ECU3,";")
"RTN","ECXEC",81,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU3,ECDT)
"RTN","ECXEC",82,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU3NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",83,0)
 S:$L(ECU4) ECXPPC4=$$PRVCLASS^ECXUTL(ECU4,ECDT),ECU4A="2"_$P(ECU4,";")
"RTN","ECXEC",84,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU4,ECDT)
"RTN","ECXEC",85,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU4NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",86,0)
 S:$L(ECU5) ECXPPC5=$$PRVCLASS^ECXUTL(ECU5,ECDT),ECU5A="2"_$P(ECU5,";")
"RTN","ECXEC",87,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU5,ECDT)
"RTN","ECXEC",88,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU5NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",89,0)
 ;144 add 2 more providers, prov per class, prov npi cvw
"RTN","ECXEC",90,0)
 S:$L(ECU6) ECXPPC6=$$PRVCLASS^ECXUTL(ECU6,ECDT),ECU6A="2"_$P(ECU6,";")
"RTN","ECXEC",91,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU6,ECDT)
"RTN","ECXEC",92,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU6NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",93,0)
 S:$L(ECU7) ECXPPC7=$$PRVCLASS^ECXUTL(ECU7,ECDT),ECU7A="2"_$P(ECU7,";")
"RTN","ECXEC",94,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU7,ECDT)
"RTN","ECXEC",95,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU7NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",96,0)
 ;change for version 2 where ECP is a variable pointer and we want to
"RTN","ECXEC",97,0)
 ;expand it category = category or null if stored as 0
"RTN","ECXEC",98,0)
 D:ECP[";"
"RTN","ECXEC",99,0)
 .S ECP=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U)_"01",ECP<90000:$P(^EC(725,+ECP,0),U,2)_"N",1:$P(^EC(725,+ECP,0),U,2)_"L"),ECC=$S(ECC:ECC,1:"")
"RTN","ECXEC",100,0)
 ;pick up EC to PCE data from "P" in File 721
"RTN","ECXEC",101,0)
 S ECPCE=$G(^ECH(ECDA,"P")),ECPCE1=$P(ECPCE,U),ECPCE2=$P(ECPCE,U,2)
"RTN","ECXEC",102,0)
 S ECPCE7=$S($P(ECPCE,U,7)=1:"Y",1:"N")
"RTN","ECXEC",103,0)
 S ECXRES1=$$GET1^DIQ(720.5,$P($G(^ECH(ECDA,0)),U,23),.01,"E") ;149 Proc Reason 1
"RTN","ECXEC",104,0)
 S ECXRES2=$$GET1^DIQ(720.5,$P($G(^ECH(ECDA,0)),U,24),.01,"E") ;149 Proc Reason 2
"RTN","ECXEC",105,0)
 S ECXRES3=$$GET1^DIQ(720.5,$P($G(^ECH(ECDA,1)),U,1),.01,"E")  ;149 Proc Reason 3
"RTN","ECXEC",106,0)
 S ECXCMOD=""
"RTN","ECXEC",107,0)
 I $D(^ECH(ECDA,"MOD")) D
"RTN","ECXEC",108,0)
 .S MOD=0,M=""
"RTN","ECXEC",109,0)
 .F  S MOD=$O(^ECH(ECDA,"MOD",MOD)) Q:'MOD  S M=$P(^(MOD,0),U) D
"RTN","ECXEC",110,0)
 ..I M S ECXCMOD=ECXCMOD_M_";"
"RTN","ECXEC",111,0)
 .K MOD,M
"RTN","ECXEC",112,0)
 S:ECP?1.N ECP=$$CPT^ECXUTL3($E(ECP,1,5),"",ECV)
"RTN","ECXEC",113,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPCE1,ECXCMOD,ECV)
"RTN","ECXEC",114,0)
 ;
"RTN","ECXEC",115,0)
 ;- Observation Patient Indicator (YES/NO)
"RTN","ECXEC",116,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXEC",117,0)
 ;
"RTN","ECXEC",118,0)
 ;- CNH status (YES/NO)
"RTN","ECXEC",119,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXEC",120,0)
 ;
"RTN","ECXEC",121,0)
 ;- encounter classification
"RTN","ECXEC",122,0)
 S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR,ECXSHAD)="",ECXVISIT=$P(ECCH,U,21)
"RTN","ECXEC",123,0)
 I ECXVISIT'="" D
"RTN","ECXEC",124,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXEC",125,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXEC",126,0)
 .S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXEC",127,0)
 .S ECXECL=$G(ECXVIST("ENCCL")),ECXESC=$G(ECXVIST("ENCSC")) ;144
"RTN","ECXEC",128,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXEC",129,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXEC",130,0)
 ; - PROJ 112/SHAD Indicator
"RTN","ECXEC",131,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXEC",132,0)
 ; ******* - PATCH 127, ADD PATCAT CODE 
"RTN","ECXEC",133,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXEC",134,0)
 ;
"RTN","ECXEC",135,0)
 ; - Get national patient record flag Indicator if exist
"RTN","ECXEC",136,0)
 D NPRF^ECXUTL5
"RTN","ECXEC",137,0)
 ;
"RTN","ECXEC",138,0)
 ; - If no encounter number don't file record
"RTN","ECXEC",139,0)
 S ECDSSE=$S(ECAC1S<101!(ECAC1S>999):"ECS",1:ECAC1S)_ECAC2S ;154 If stop code is invalid set it to ECS for encounter number creation
"RTN","ECXEC",140,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSSE,ECCS) ;154 Send ECDSSE for encounter number creation
"RTN","ECXEC",141,0)
 D:ECXENC'="" FILE
"RTN","ECXEC",142,0)
 Q
"RTN","ECXEC",143,0)
 ;
"RTN","ECXEC",144,0)
FILE ;file record in #727.815
"RTN","ECXEC",145,0)
 ;node0
"RTN","ECXEC",146,0)
 ;ecode=inst ECL^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^day^
"RTN","ECXEC",147,0)
 ;DSS unit ECDU^category ECC^procedure ECP^volume ECV^
"RTN","ECXEC",148,0)
 ;cost center ECCS^ordering sec ECO^section ECM^
"RTN","ECXEC",149,0)
 ;provider ECU1A^prov per cls ECXPPC1^prov 2 ECU2A^prov#2 per cls ECXPPC2
"RTN","ECXEC",150,0)
 ;^prov 3 ECU3A^prov#3 per cls ECXPPC3^^mov # ECXMN^treat spec ECXTS
"RTN","ECXEC",151,0)
 ;^time ECTM^primary care team ECPTTM^primary care provider ECPTPR
"RTN","ECXEC",152,0)
 ;^pce cpt code (ECXCPT)^primary icd-9 code ECXICD9^secondary icd-9
"RTN","ECXEC",153,0)
 ;ECXICD91^secondary icd-9 ECXICD92^secondary icd-9 ECXICD93^secondary 
"RTN","ECXEC",154,0)
 ;icd-9 ECXICD94^agent orange ECXAST^radiation exposure ECXRST^
"RTN","ECXEC",155,0)
 ;environmental contaminants ECXEST^service connected ECPTPR^sent to pce
"RTN","ECXEC",156,0)
 ;ECPCE7^^dss identifier ECDSS^dss dept
"RTN","ECXEC",157,0)
 ;node1
"RTN","ECXEC",158,0)
 ;mpi ECXMPI^dss dept ECXDSSD^PLACEHOLDER
"RTN","ECXEC",159,0)
 ;placeholder^placeholder^placeholder^
"RTN","ECXEC",160,0)
 ;placeholder^pc prov person class ECCLAS^
"RTN","ECXEC",161,0)
 ;assoc pc prov ECASPR^assoc pc prov person class ECCLAS2^
"RTN","ECXEC",162,0)
 ;placeholder^
"RTN","ECXEC",163,0)
 ;divison ECXDIV^mst status ECXMST^dom ECXDOM^date of birth ECXDOB^
"RTN","ECXEC",164,0)
 ;enrollment category ECXCAT^ enrollment status ECXSTAT^enrollment
"RTN","ECXEC",165,0)
 ;priority ECXPRIOR^period of service ECXPOS^purple heart indicator
"RTN","ECXEC",166,0)
 ;ECXPHI^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXEC",167,0)
 ;ao loc ECXAOL^ord div ECXODIV^contr st dt ECXCSDT^
"RTN","ECXEC",168,0)
 ;contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXEC",169,0)
 ;production division ECXPDIV^eligibility ECXELIG^
"RTN","ECXEC",170,0)
 ;head & neck cancer ind. ECXHNCI^ethnicity ECXETH^race1 ECXRAC1
"RTN","ECXEC",171,0)
 ;enrollment location ECXENRL^^enrollment priority
"RTN","ECXEC",172,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient
"RTN","ECXEC",173,0)
 ;type ECXPTYPE^combat vet elig ECXCVE
"RTN","ECXEC",174,0)
 ;NODE 2
"RTN","ECXEC",175,0)
 ;combat vet elig end date ECXCVEDT
"RTN","ECXEC",176,0)
 ;enc cv eligible ECXCVENC^national patient record flag
"RTN","ECXEC",177,0)
 ;ECXNPRFI^emerg response indic(FEMA) ECXERI^agent orange indic ECXAO^
"RTN","ECXEC",178,0)
 ;environ contam ECXECE^head/neck cancer ECXHNC^encntr mst ECXMIL
"RTN","ECXEC",179,0)
 ;^radiation ECXIR^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT
"RTN","ECXEC",180,0)
 ;^associate pc provider npi ECASNPI^primary care provider npi ECPTNPI^
"RTN","ECXEC",181,0)
 ;provider npi ECU1NPI^provider #2 ECU2NPI^provider #3 ECU3NPI^
"RTN","ECXEC",182,0)
 ;shad status ECXSHADI^shad encounter ECXSHAD^patcat ECXPATCAT^
"RTN","ECXEC",183,0)
 ;prov #4 ECU4A^prov #4 pc ECXPPC4^prov #4 ECXU4NPI^prov #5 ECU5A^
"RTN","ECXEC",184,0)
 ;prov #5 pc ECXPPC5^prov #5 ECXU5NPI^
"RTN","ECXEC",185,0)
 ;primary ICD-10 code (currently null) ECXICD10P^Secondary ICD-10 Code #1 (currently null) ECXICD101^
"RTN","ECXEC",186,0)
 ;Secondary ICD-10 Code #2 (currently null) ECXICD102^Secondary ICD-10 Code #3 (currently null) ECXICD103^
"RTN","ECXEC",187,0)
 ;Secondary ICD-10 Code #4 (currently null) ECXICD104
"RTN","ECXEC",188,0)
 ;NODE 3
"RTN","ECXEC",189,0)
 ;Encounter SC ECXESC^Vietnam Status ECXVIET^
"RTN","ECXEC",190,0)
 ;Provider #6 ECU6A^ Prov #6 PC ECXPPC6^Prov #6 NPI ECU6NPI^Provider #7 ECU7A^ Prov #7 PC ECXPPC7^Prov #7 NPI ECU7NPI
"RTN","ECXEC",191,0)
 ;National 4CHAR code ECX4CHAR^NULL^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXEC",192,0)
 ;Reason #1 (ECXRES1) ^ Reason #2 (ECXRES2) ^ Reason #3 (ECXRES3) ^ Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)
"RTN","ECXEC",193,0)
 ;Clinic IEN ECAC 154
"RTN","ECXEC",194,0)
 ;
"RTN","ECXEC",195,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXEC",196,0)
 N ECXDATA
"RTN","ECXEC",197,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXEC",198,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXEC",199,0)
 ;done
"RTN","ECXEC",200,0)
 N DA,DIK
"RTN","ECXEC",201,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXEC",202,0)
 S ECODE=EC7_U_EC23_U_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXEC",203,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECDT,ECXYM)_U_ECDU_U_ECC_U
"RTN","ECXEC",204,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECU1A_U_ECXPPC1_U
"RTN","ECXEC",205,0)
 S ECODE=ECODE_ECU2A_U_ECXPPC2_U_ECU3A_U_ECXPPC3_U_U_ECXMN_U
"RTN","ECXEC",206,0)
 S ECODE=ECODE_ECXTS_U_ECTM_U
"RTN","ECXEC",207,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_ECXCPT_U_ECXICD9_U
"RTN","ECXEC",208,0)
 S ECODE=ECODE_ECXICD91_U_ECXICD92_U_ECXICD93_U
"RTN","ECXEC",209,0)
 S ECODE=ECODE_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXEC",210,0)
 S ECODE=ECODE_ECSC_U_ECPCE7_U_U_ECDSS_U_U
"RTN","ECXEC",211,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_ECCLAS_U
"RTN","ECXEC",212,0)
 S ECODE1=ECODE1_U_ECASPR_U_ECCLAS2_U_U_ECXDIV_U
"RTN","ECXEC",213,0)
 S ECODE1=ECODE1_ECXMST_U_ECXDOM_U_ECXDOB_U_ECXCAT_U_ECXSTAT_U
"RTN","ECXEC",214,0)
 S ECODE1=ECODE1_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXEC",215,0)
 S ECODE1=ECODE1_ECXODIV_U_ECXCSDT_U_ECXCEDT_U_ECXCTYP_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXEC",216,0)
 S ECODE1=ECODE1_ECXELIG_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXEC",217,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL_U
"RTN","ECXEC",218,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXEC",219,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXEC",220,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXEC",221,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECU1NPI_U_ECU2NPI_U_ECU3NPI
"RTN","ECXEC",222,0)
 ; PATCAT added
"RTN","ECXEC",223,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXSHADI_U_ECXSHAD_U_ECXPATCAT
"RTN","ECXEC",224,0)
 I ECXLOGIC>2011 S ECODE2=ECODE2_U_ECU4A_U_ECXPPC4_U_ECU4NPI_U_ECU5A_U_ECXPPC5_U_ECU5NPI
"RTN","ECXEC",225,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U_ECXICD104_U
"RTN","ECXEC",226,0)
 I ECXLOGIC>2013 S ECODE3=ECXESC_U_ECXVIET_U_ECU6A_U_ECXPPC6_U_ECU6NPI_U_ECU7A_U_ECXPPC7_U_ECU7NPI_U_ECX4CHAR_U_$S(ECXLOGIC>2015:"",1:ECAC)_U_ECXCLST_U_ECXECL ; 154
"RTN","ECXEC",227,0)
 I ECXLOGIC>2014 S ECODE3=ECODE3_U_ECXRES1_U_ECXRES2_U_ECXRES3_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXEC",228,0)
 I ECXLOGIC>2015 S ECODE3=ECODE3_U_ECAC ;154 MOVED CLINIC IEN
"RTN","ECXEC",229,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),^ECX(ECFILE,EC7,3)=$G(ECODE3),ECRN=ECRN+1 ;144
"RTN","ECXEC",230,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXEC",231,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXEC",232,0)
 Q
"RTN","ECXEC",233,0)
 ;
"RTN","ECXEC",234,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXEC",235,0)
 N OUT
"RTN","ECXEC",236,0)
 S ECHEAD="ECS",OUT=0
"RTN","ECXEC",237,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXEC",238,0)
 Q:($G(ECXQQ))
"RTN","ECXEC",239,0)
 W @IOF,!,"Setting up for ",ECPACK," DSS Extract -",!
"RTN","ECXEC",240,0)
 W !,"   Reminder: A maintenance option, ECS Extract Unusual Volume Report, may"
"RTN","ECXEC",241,0)
 W !,"   assist in identifying problematic data. It should be run before the"
"RTN","ECXEC",242,0)
 W !,"   Event Capture Extract is performed.",!
"RTN","ECXEC",243,0)
 D PAUSE^ECXTRAC
"RTN","ECXEC",244,0)
 I OUT S ECFILE=""
"RTN","ECXEC",245,0)
 Q
"RTN","ECXEC",246,0)
 ;
"RTN","ECXEC",247,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXEC",248,0)
 N ECXQQ
"RTN","ECXEC",249,0)
 S ECXQQ=1 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLABN")
0^37^B52461125^B51700942
"RTN","ECXLABN",1,0)
ECXLABN ;ALB/JAP,BIR/CML-Lab Extract for DSS (New Format - With LMIP Codes) ;6/3/15  10:17
"RTN","ECXLABN",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,28,24,30,31,32,33,39,42,46,70,71,80,92,107,105,112,127,132,144,149,154**;Dec 22, 1997;Build 13
"RTN","ECXLABN",3,0)
BEG ;entry point
"RTN","ECXLABN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABN",6,0)
 Q
"RTN","ECXLABN",7,0)
 ;
"RTN","ECXLABN",8,0)
START ; entry when queued
"RTN","ECXLABN",9,0)
 K ^LRO(64.03),^TMP($J,"ECXP")
"RTN","ECXLABN",10,0)
 N ECDOCPC
"RTN","ECXLABN",11,0)
 S LRSDT=ECSD,LREDT=ECED,QFLG=0
"RTN","ECXLABN",12,0)
 D ^LRCAPDSS
"RTN","ECXLABN",13,0)
 ;quit if no completion date for API compile
"RTN","ECXLABN",14,0)
 I '$P($G(^LRO(64.03,1,1,1,0)),U,4) Q
"RTN","ECXLABN",15,0)
 ;quit if tasked and user sends stop request
"RTN","ECXLABN",16,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D  Q
"RTN","ECXLABN",17,0)
 .S QFLG=1
"RTN","ECXLABN",18,0)
 .K ^LRO(64.03) S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",19,0)
 ;otherwise, continue
"RTN","ECXLABN",20,0)
 K ECXDD D FIELD^DID(64.03,1,,"SPECIFIER","ECXDD")
"RTN","ECXLABN",21,0)
 S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)),ECLRN=1 K ECXDD
"RTN","ECXLABN",22,0)
 F  S ECLRN=$O(^LRO(64.03,ECLRN)) Q:'ECLRN  D  Q:QFLG
"RTN","ECXLABN",23,0)
 .Q:'$D(^LRO(64.03,ECLRN,0))
"RTN","ECXLABN",24,0)
 .S EC1=^LRO(64.03,ECLRN,0),ECDOC=ECPROF_$P(EC1,U,2)
"RTN","ECXLABN",25,0)
 .S ECDOCNPI=$$NPI^XUSNPI("Individual_ID",$P(EC1,U,2),$P(EC1,U,4))
"RTN","ECXLABN",26,0)
 .S:+ECDOCNPI'>0 ECDOCNPI="" S ECDOCNPI=$P(ECDOCNPI,U)
"RTN","ECXLABN",27,0)
 .S ECLOC=$P(EC1,U,15),EC=$P(EC1,U,3),ECDOCPC=$$PRVCLASS^ECXUTL($P(EC1,U,2),$P(EC1,U,4))
"RTN","ECXLABN",28,0)
 .I EC]"" D GET
"RTN","ECXLABN",29,0)
 K ^LRO(64.03),^TMP($J,"ECXP") S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",30,0)
 K ECDOCNPI,ECXAGC,ECXL1,ECXL2
"RTN","ECXLABN",31,0)
 Q
"RTN","ECXLABN",32,0)
 ;
"RTN","ECXLABN",33,0)
GET ;get data
"RTN","ECXLABN",34,0)
 N X,ECXSTN,QFLAG,ECXDFN,ECXESC,ECXCLST ;144
"RTN","ECXLABN",35,0)
 S (ECXESC,ECXCLST)="" ;144
"RTN","ECXLABN",36,0)
 S ECF=$S($P(EC,";",2)="DPT(":2,$P(EC,";",2)="LRT(67,":67,1:0) Q:'ECF
"RTN","ECXLABN",37,0)
 S ECIFN=$P(EC,";"),QFLAG=0
"RTN","ECXLABN",38,0)
 ;resolve ecloc
"RTN","ECXLABN",39,0)
 S ECXL1=+$P(ECLOC,";",1),ECXL2=$P(ECLOC,";",2)
"RTN","ECXLABN",40,0)
 I ECF=2 S ECLOC=$S(ECXL1>0:ECXL1,1:"") I ECXL2]"",ECXL2'="SC(" S ECLOC=""
"RTN","ECXLABN",41,0)
 I ECF=67 D  S ECLOC=ECXSTN
"RTN","ECXLABN",42,0)
 .S (ECXSTN,ECXAGC)=""
"RTN","ECXLABN",43,0)
 .I (ECXL2'="DIC(4,")!('$D(^DIC(4,ECXL1))) S ECXSTN="XXXXX",ECXAGC="XX" Q
"RTN","ECXLABN",44,0)
 .S ECXSTN=$P(^DIC(4,ECXL1,"99"),U,1),ECXAGC=$E($P(^(99),U,5),1,2)
"RTN","ECXLABN",45,0)
 .S:ECXSTN="" ECXSTN="ZZZZZ" S:ECXAGC="" ECXAGC="ZZ"
"RTN","ECXLABN",46,0)
 S ECDT=$P(EC1,U,13),ECD=$P(ECDT,"."),ECTM=$$ECXTIME^ECXUTL(ECDT)
"RTN","ECXLABN",47,0)
 S ECWKLD=$P(EC1,U,11),ECWK="" I $D(^LAM(ECWKLD,0)) S ECWK=$P(^(0),U,2)
"RTN","ECXLABN",48,0)
 S (ECXADMDT,ECTREAT,ECNA,ECSN,ECMN,ECPTTM,ECPTPR,ECCLAS)="",ECA="O",ECXERR=0
"RTN","ECXLABN",49,0)
 S (ECPTNPI,ECASPR,ECCLAS2,ECASNPI)=""
"RTN","ECXLABN",50,0)
 ;get the patient data if record is in file #2
"RTN","ECXLABN",51,0)
 I ECF=2 D PAT(ECIFN,ECDT,.ECXERR) S ECXDFN=ECIFN
"RTN","ECXLABN",52,0)
 Q:ECXERR
"RTN","ECXLABN",53,0)
 ;get patient data if record is in file #67
"RTN","ECXLABN",54,0)
 I ECF=67 S ECSN="000123456",ECNA="RFRL",ECXDFN=0 I $D(^LRT(67,ECIFN,0)) D  Q:QFLAG
"RTN","ECXLABN",55,0)
 .S ECXMPI="",EC0=^LRT(67,ECIFN,0),ECNA=$E($P($P(EC0,U),",")_"    ",1,4)
"RTN","ECXLABN",56,0)
 .S ECSN=$P(EC0,U,9),ECXERI="" D
"RTN","ECXLABN",57,0)
 ..S ECNA=$TR(ECNA,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABN",58,0)
 ..I ECSN="" S ECSN="000123456" Q
"RTN","ECXLABN",59,0)
 ..S ECSN=$TR(ECSN," "),ECSN=$TR(ECSN,"-")
"RTN","ECXLABN",60,0)
 ..I ($L(ECSN)<9)!($L(ECSN)>10) S ECSN="000123456" Q
"RTN","ECXLABN",61,0)
 ..I $L(ECSN)=9,ECSN'?9N S ECSN="000123456" Q
"RTN","ECXLABN",62,0)
 ..I $L(ECSN)=10,ECSN'?9N1"P" S ECSN="000123456"
"RTN","ECXLABN",63,0)
 ..I '$$SSN^ECXUTL5(ECSN,ECF) S QFLAG=1
"RTN","ECXLABN",64,0)
 ;
"RTN","ECXLABN",65,0)
 ;- Only set treating spec (TS) to TS in file #64.03 if it does not exist
"RTN","ECXLABN",66,0)
 I ECA="I",ECTREAT="" S ECTREAT=$P($G(^DIC(45.7,+$P(EC1,U,10),0)),U,2)
"RTN","ECXLABN",67,0)
 S (ECXDOM,ECXDSSD)=""
"RTN","ECXLABN",68,0)
 S X=$G(^ECX(727.831,+ECTREAT,0)) S:X'="" ECXDOM=$P(X,U,2)
"RTN","ECXLABN",69,0)
 ;
"RTN","ECXLABN",70,0)
 ;- Get ordering stop code and ordering date
"RTN","ECXLABN",71,0)
 S ECXORDST=+$P(EC1,U,15),ECXORDST=$S(ECXORDST:$P($G(^ECX(728.44,ECXORDST,0)),U,2),1:"")
"RTN","ECXLABN",72,0)
 S ECXORDDT=$S($P(EC1,U,14):$$ECXDATE^ECXUTL($P(EC1,U,14),ECXYM),1:"")
"RTN","ECXLABN",73,0)
 ;
"RTN","ECXLABN",74,0)
 ;- Get Production Division - ECXDIEN added p-80
"RTN","ECXLABN",75,0)
 N ECXPDIV,ECXDIEN S ECXDIEN=$O(^DIC(4,"D",ECINST,"")),ECXPDIV=$$RADDIV^ECXDEPT(ECXDIEN)  ;P-46
"RTN","ECXLABN",76,0)
 K ECXDIEN
"RTN","ECXLABN",77,0)
 ;
"RTN","ECXLABN",78,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLABN",79,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECA,ECTREAT)
"RTN","ECXLABN",80,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXLABN",81,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXLABN",82,0)
 ;
"RTN","ECXLABN",83,0)
 ;- get lab billable procedure, dss feeder key, data name, data location, and pathologist information
"RTN","ECXLABN",84,0)
 N ECXLEX,ECXPATH,ECXPATHP,ECXPATHN ;149
"RTN","ECXLABN",85,0)
 S ECXLEX="" I $D(^LRO(64.03,ECLRN,2)) S ECXLEX=^(2)
"RTN","ECXLABN",86,0)
 S ECLRBILL=$P(ECXLEX,U),ECDSSFK=$P(ECXLEX,U,2)
"RTN","ECXLABN",87,0)
 S ECLRTNM=$P(ECXLEX,U,3),ECLRDTNM=$P(ECXLEX,U,4)
"RTN","ECXLABN",88,0)
 S ECXPATH=$P(ECXLEX,U,5) ;149 Pathologist
"RTN","ECXLABN",89,0)
 S ECXPATHP=$$PRVCLASS^ECXUTL(ECXPATH,$P(EC1,U,4)) ;149 Pathologist provider class
"RTN","ECXLABN",90,0)
 S ECXPATHN=$$NPI^XUSNPI("Individual_ID",ECXPATH,$P(EC1,U,4)) S:+ECXPATHN'>0 ECXPATHN="" S ECXPATHN=$P(ECXPATHN,U) ;149 Pathologist NPI
"RTN","ECXLABN",91,0)
 ;- If no encounter number don't file record
"RTN","ECXLABN",92,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECA,ECSN,ECXADMDT,ECD,ECTREAT,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXLABN",93,0)
 ;create extract record only if patient name and accession area exist
"RTN","ECXLABN",94,0)
 I ECNA]"" S ECT=$P(EC1,U,8),ECURG=$P(EC1,U,9),EC=+$P(EC1,U,7) I EC D
"RTN","ECXLABN",95,0)
 .S:ECF=2 ECACA=EC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",96,0)
 .S:ECF=67 ECACA=ECXAGC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",97,0)
 .;--getting LOINC Code
"RTN","ECXLABN",98,0)
 .N ECXLNC,ECLRID,LRIFN,LRIDT,ECRSLT,ECRSP8
"RTN","ECXLABN",99,0)
 .S ECXLNC="",ECLRID=0
"RTN","ECXLABN",100,0)
 .;--getting lab patient id
"RTN","ECXLABN",101,0)
 .S LRIFN=+$P(EC1,U,3)
"RTN","ECXLABN",102,0)
 .I ECF=2 S:$D(^DPT(LRIFN,"LR")) ECLRID=^DPT(LRIFN,"LR")
"RTN","ECXLABN",103,0)
 .I ECF=67 S:$D(^LRT(67,LRIFN,"LR")) ECLRID=^LRT(67,LRIFN,"LR")
"RTN","ECXLABN",104,0)
 .; using ECINST=institution, LRIFN=lab file patient id, EC=test (pt 60), LRIDT=date and time to get loinc
"RTN","ECXLABN",105,0)
 .S LRIDT=$P(EC1,U,12)
"RTN","ECXLABN",106,0)
 .;--looking up test to find subscript to lookup value
"RTN","ECXLABN",107,0)
 .D
"RTN","ECXLABN",108,0)
 ..N ECTST S ECTST=$P(EC1,U,8)
"RTN","ECXLABN",109,0)
 ..S ECPT=$S($D(^LAB(60,ECTST,0)):$P(^LAB(60,ECTST,0),U,12),1:""),ECPT=$P(ECPT,",",2)
"RTN","ECXLABN",110,0)
 ..Q:$G(ECPT)']""  Q:'$D(^LR(ECLRID,"CH",LRIDT,ECPT))
"RTN","ECXLABN",111,0)
 ..S ECRSLT=$$TSTRES^LRRPU(ECLRID,"CH",LRIDT,ECPT,"",1) ;DBIA #4658
"RTN","ECXLABN",112,0)
 ..S ECRSP8=$P(ECRSLT,U,8)
"RTN","ECXLABN",113,0)
 ..S ECXLNC=$P($P(ECRSP8,"!",3),";")
"RTN","ECXLABN",114,0)
 ..Q:$G(ECXLNC)']""
"RTN","ECXLABN",115,0)
 .D FILE
"RTN","ECXLABN",116,0)
 Q
"RTN","ECXLABN",117,0)
 ;
"RTN","ECXLABN",118,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get/set patient data
"RTN","ECXLABN",119,0)
 N X,OK,PT
"RTN","ECXLABN",120,0)
 ;get data
"RTN","ECXLABN",121,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXLABN",122,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECNA=$P(PT,U)
"RTN","ECXLABN",123,0)
 .S ECSN=$P(PT,U,2),ECXMPI=$P(PT,U,3),ECXERI=$P(PT,U,4),ECXCLST=$P(PT,U,5) ;144
"RTN","ECXLABN",124,0)
 ;set data and save for later
"RTN","ECXLABN",125,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXLABN",126,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD,"."),"1;3;5",.ECXPAT) ;154 Add service information (5) to list
"RTN","ECXLABN",127,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXLABN",128,0)
 .S ECNA=ECXPAT("NAME"),ECSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABN",129,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXLABN",130,0)
 .S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXLABN",131,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECNA_U_ECSN_U_ECXMPI_U_ECXERI_U_ECXCLST ;144
"RTN","ECXLABN",132,0)
 ;get date specific data
"RTN","ECXLABN",133,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECA=$P(X,U),ECMN=$P(X,U,2),ECTREAT=$P(X,U,3),ECXADMDT=$P(X,U,4)
"RTN","ECXLABN",134,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."),ECPROF)
"RTN","ECXLABN",135,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXLABN",136,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXLABN",137,0)
 Q
"RTN","ECXLABN",138,0)
 ;
"RTN","ECXLABN",139,0)
FILE ;file record
"RTN","ECXLABN",140,0)
 ;node0
"RTN","ECXLABN",141,0)
 ;facility^patient number^SSN (or equivalent)^name^in/out ECA^
"RTN","ECXLABN",142,0)
 ;day^accession area^abbreviation^test^urgency^treating spec^
"RTN","ECXLABN",143,0)
 ;location^provider and file^
"RTN","ECXLABN",144,0)
 ;movement number^file^time^workload code^primary care team^
"RTN","ECXLABN",145,0)
 ;primary care provider
"RTN","ECXLABN",146,0)
 ;node1
"RTN","ECXLABN",147,0)
 ;mpi^dss dept^provider npi^pc provider npi^pc prov person class^
"RTN","ECXLABN",148,0)
 ;assoc pc prov^assoc pc prov person class^assoc pc prov npi^
"RTN","ECXLABN",149,0)
 ;dom ECXDOM^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXLABN",150,0)
 ;ord stop code ECXORDST^ord date ECXORDDT^production division
"RTN","ECXLABN",151,0)
 ;ECXPDIV^^ordering provider person class^emergency response indicator
"RTN","ECXLABN",152,0)
 ;(FEMA) ECXERI^associate pc provider npi ECASNPI^primary care provider
"RTN","ECXLABN",153,0)
 ;npi ECPTNPI^provider npi ECDOCNPI^LOINC code ECLNC^lab billable procedure^dss feeder key
"RTN","ECXLABN",154,0)
 ;node2
"RTN","ECXLABN",155,0)
 ;data name^data location^PATCAT^Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Pathologist ECXPATH^Pathologist Person Class ECXPATHP^Pathologist NPI ECXPATHN
"RTN","ECXLABN",156,0)
 ;ECDOCPC
"RTN","ECXLABN",157,0)
 N DA,DIK
"RTN","ECXLABN",158,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABN",159,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECIFN_U_ECSN_U_ECNA_U_ECA_U
"RTN","ECXLABN",160,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECACA_U_ECT_U_ECURG_U
"RTN","ECXLABN",161,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXLABN",162,0)
 N ECXDATA
"RTN","ECXLABN",163,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECTREAT,.ECXDATA)
"RTN","ECXLABN",164,0)
 S ECTREAT=$G(ECXDATA(7))
"RTN","ECXLABN",165,0)
 ;convert eclrbill  to y/n
"RTN","ECXLABN",166,0)
 S ECLRBILL=$S(ECLRBILL=1:"Y",1:"N")
"RTN","ECXLABN",167,0)
 ;convert ecdssfk to y/n
"RTN","ECXLABN",168,0)
 S ECDSSFK=$S(ECDSSFK=1:"Y",1:"")
"RTN","ECXLABN",169,0)
 ;done
"RTN","ECXLABN",170,0)
 S ECODE=ECODE_ECTREAT_U_ECLOC_U_ECDOC_U_ECMN_U_ECF_U_ECTM_U_ECWK_U
"RTN","ECXLABN",171,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U
"RTN","ECXLABN",172,0)
 ;(ECACA=acc area^abbreviation)
"RTN","ECXLABN",173,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_ECCLAS_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXLABN",174,0)
 S ECODE1=ECODE1_ECXORDST_U_ECXORDDT_U_ECXPDIV_U
"RTN","ECXLABN",175,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECDOCPC
"RTN","ECXLABN",176,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI
"RTN","ECXLABN",177,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECASNPI_U_ECPTNPI_U_ECDOCNPI
"RTN","ECXLABN",178,0)
 I ECXLOGIC>2008 S ECODE1=ECODE1_U_$G(ECXLNC)
"RTN","ECXLABN",179,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECLRBILL_U_ECDSSFK_U,ECODE2=ECLRTNM_U_ECLRDTNM_U_ECXPATCAT
"RTN","ECXLABN",180,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXCLST ;144
"RTN","ECXLABN",181,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_$S(ECXPATH:2_ECXPATH,1:ECXPATH)_U_ECXPATHP_U_ECXPATHN ;149
"RTN","ECXLABN",182,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXLABN",183,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLABN",184,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABN",185,0)
 Q
"RTN","ECXLABN",186,0)
 ;
"RTN","ECXLABN",187,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABN",188,0)
 S ECHEAD="LAB"
"RTN","ECXLABN",189,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABN",190,0)
 Q
"RTN","ECXLABN",191,0)
 ;
"RTN","ECXLABN",192,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABN",193,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLABR")
0^8^B24269511^B22824878
"RTN","ECXLABR",1,0)
ECXLABR ;ALB/JAP,BIR/CML-LAR Extract for DSS (New Format - With LMIP Codes) ;7/14/15  16:17
"RTN","ECXLABR",2,0)
 ;;3.0;DSS EXTRACTS;**8,24,33,37,39,46,71,80,107,105,112,127,144,154**;Dec 22, 1997;Build 13
"RTN","ECXLABR",3,0)
BEG ;entry point from option
"RTN","ECXLABR",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABR",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABR",6,0)
 Q
"RTN","ECXLABR",7,0)
 ;
"RTN","ECXLABR",8,0)
START ; entry when queued
"RTN","ECXLABR",9,0)
 N X,OK,ECTRS,ECTRANS,ECTRIEN,ECDOC,ECDOCPC,ECXESC,ECXECL,ECXCLST,ECCLASS,ECRETM,ECREDT,ECSCDT,ECSCTM,ECXTIME ;144,154
"RTN","ECXLABR",10,0)
 K ^LAR(64.036) S LRSDT=ECSD,LREDT=ECED
"RTN","ECXLABR",11,0)
 D ^LRCAPDAR
"RTN","ECXLABR",12,0)
 ;quit if no completion date for API compile
"RTN","ECXLABR",13,0)
 I '$P($G(^LAR(64.036,1,2,1,0)),U,4) Q
"RTN","ECXLABR",14,0)
 ;process temporary lab file #64.036
"RTN","ECXLABR",15,0)
 S QFLG=0,ECLRN=1
"RTN","ECXLABR",16,0)
 F  S ECLRN=$O(^LAR(64.036,ECLRN)) Q:('ECLRN)!(QFLG)  D
"RTN","ECXLABR",17,0)
 .I $D(^LAR(64.036,ECLRN,0))  D
"RTN","ECXLABR",18,0)
 ..S EC1=^LAR(64.036,ECLRN,0),ECF=$P(EC1,U,2)
"RTN","ECXLABR",19,0)
 ..Q:ECF=""
"RTN","ECXLABR",20,0)
 ..S (ECXESC,ECXECL,ECXCLST)="" ;144
"RTN","ECXLABR",21,0)
 ..S ECXDFN=$P(EC1,U,3),ECPTPR=$P($G(EC1),U,11),ECCLASS=""
"RTN","ECXLABR",22,0)
 ..S ECXTIME=$S($P(EC1,U,10)="":"000300",1:$P(EC1,U,10))
"RTN","ECXLABR",23,0)
 ..S ECXDATE=$P(EC1,U,9)_"."_$P(EC1,U,10)
"RTN","ECXLABR",24,0)
 ..I ECPTPR S ECCLASS=$$PRVCLASS^ECXUTL(ECPTPR,ECXDATE)
"RTN","ECXLABR",25,0)
 ..I ECPTPR S ECPTNPI=$$NPI^XUSNPI("Individual_ID",ECPTPR,+ECXDATE) D
"RTN","ECXLABR",26,0)
 ...S:+ECPTNPI'>0 ECPTNPI="" S ECPTNPI=$P(ECPTNPI,U)
"RTN","ECXLABR",27,0)
 ..S ECORDT=$$ECXDATE^ECXUTL($P(EC1,U,4),ECXYM)
"RTN","ECXLABR",28,0)
 ..S ECORTM=$$ECXTIME^ECXUTL($P(EC1,U,4)_"."_$P(EC1,U,5))
"RTN","ECXLABR",29,0)
 ..S ECREDT=$$ECXDATE^ECXUTL($P(EC1,U,6),ECXYM)
"RTN","ECXLABR",30,0)
 ..S ECRETM=$$ECXTIME^ECXUTL($P(EC1,U,6)_"."_$P(EC1,U,7))
"RTN","ECXLABR",31,0)
 ..S ECSCDT=$$ECXDATE^ECXUTL($P(EC1,U,9),ECXYM)
"RTN","ECXLABR",32,0)
 ..S ECSCTM=$$ECXTIME^ECXUTL($P(EC1,U,9)_"."_$P(EC1,U,10))
"RTN","ECXLABR",33,0)
 ..S (ECXADMDT,ECXDOM,ECXDSSD,ECXPNM,ECXSSN,ECXA,ECXMN,ECXTS)=""
"RTN","ECXLABR",34,0)
 ..I ECF=2 D  Q:'OK
"RTN","ECXLABR",35,0)
 ...K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT) ;154 Added service related information (5) to the list
"RTN","ECXLABR",36,0)
 ...Q:'OK
"RTN","ECXLABR",37,0)
 ...S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABR",38,0)
 ...S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXADMDT=$P(X,U,4)
"RTN","ECXLABR",39,0)
 ...S ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10)
"RTN","ECXLABR",40,0)
 ...S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXLABR",41,0)
 ..;allow for referral patients in future??
"RTN","ECXLABR",42,0)
 ..;I ECF=67 S ECSN="000123456",ECNA="RFRL"
"RTN","ECXLABR",43,0)
 ..;loop on results multiple
"RTN","ECXLABR",44,0)
 ..;
"RTN","ECXLABR",45,0)
 ..;Get production division ECXDIEN added p-80
"RTN","ECXLABR",46,0)
 ..N ECXPDIV,ECXDIEN S ECXDIEN=$O(^DIC(4,"D",ECINST,"")),ECXPDIV=$$RADDIV^ECXDEPT(ECXDIEN) ;p-46
"RTN","ECXLABR",47,0)
 ..K ECXDIEN
"RTN","ECXLABR",48,0)
 ..;- Observation patient indicator (y/n)
"RTN","ECXLABR",49,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXLABR",50,0)
 ..;
"RTN","ECXLABR",51,0)
 ..;- If no encounter number don't file record
"RTN","ECXLABR",52,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,$P(EC1,U,9),ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXLABR",53,0)
 ..S ECRES=0
"RTN","ECXLABR",54,0)
 ..F  S ECRES=$O(^LAR(64.036,ECLRN,1,ECRES)) Q:('ECRES)!(QFLG)  D
"RTN","ECXLABR",55,0)
 ...I $D(^LAR(64.036,ECLRN,1,ECRES,0)) D  Q:QFLG
"RTN","ECXLABR",56,0)
 ....S EC2=^LAR(64.036,ECLRN,1,ECRES,0),ECN=$P(EC2,U),ECRS=$P(EC2,U,2)
"RTN","ECXLABR",57,0)
 ....S ECHL=$E($P(EC2,U,3)),ECWC=+$P(EC2,U,4)
"RTN","ECXLABR",58,0)
 ....I ECWC S ECWC=$P(^LAM(ECWC,0),U,2)
"RTN","ECXLABR",59,0)
 ....S ECLNC=$P(EC2,U,5)
"RTN","ECXLABR",60,0)
 .... ; ******* - PATCH 127, ADD PATCAT CODE
"RTN","ECXLABR",61,0)
 ....S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXLABR",62,0)
 ....;
"RTN","ECXLABR",63,0)
 ....; - Free text results translation
"RTN","ECXLABR",64,0)
 ....S ECTRANS="",ECTRS=ECRS
"RTN","ECXLABR",65,0)
 ....I +ECTRS S ECTRS=$TR(ECTRS,",","") D
"RTN","ECXLABR",66,0)
 .....I (ECTRS?.N)!(ECTRS?.N1".".N) S ECRS=ECTRS
"RTN","ECXLABR",67,0)
 ....F  Q:$E(ECTRS,1)'=" "  S ECTRS=$E(ECTRS,2,$L(ECTRS))
"RTN","ECXLABR",68,0)
 ....F  Q:$E(ECTRS,$L(ECTRS))'=" "  S ECTRS=$E(ECTRS,1,($L(ECTRS)-1))
"RTN","ECXLABR",69,0)
 ....I ECTRS]"" I ECTRS'?.N I ECTRS'?.N1".".N D  ;translate
"RTN","ECXLABR",70,0)
 .....S ECTRS=$TR(ECRS,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABR",71,0)
 .....S ECTRIEN="",ECTRIEN=$O(^ECX(727.7,"B",ECTRS,ECTRIEN))
"RTN","ECXLABR",72,0)
 .....S ECTRANS=$S(ECTRIEN:$P(^ECX(727.7,ECTRIEN,0),U,2),1:5)
"RTN","ECXLABR",73,0)
 .....S ECRS=$E(ECRS,1,20) ;154 Only take the 1st 20 characters of the result
"RTN","ECXLABR",74,0)
 ....;
"RTN","ECXLABR",75,0)
 ....I ECWC]"" D FILE
"RTN","ECXLABR",76,0)
 K ^LAR(64.036) S ^LAR(64.036,0)="LAB DSS LAR EXTRACT^64.036^"
"RTN","ECXLABR",77,0)
 Q
"RTN","ECXLABR",78,0)
 ;
"RTN","ECXLABR",79,0)
FILE ;file record
"RTN","ECXLABR",80,0)
 ;node0
"RTN","ECXLABR",81,0)
 ;facility (ECINST)^dfn (ECXDFN)^ssn (ECXSSN)^name(ECXPNM)^in/out (ECXA)^
"RTN","ECXLABR",82,0)
 ;day(ECSCDT)^
"RTN","ECXLABR",83,0)
 ;lab test code (ECN)^results (ECRS)^hi/lo indicator (ECHL)^
"RTN","ECXLABR",84,0)
 ;date ordered (ECORDT)^time ordered (ECORTM)^date ready (ECREDT)^
"RTN","ECXLABR",85,0)
 ;time ready (ECRETM)^
"RTN","ECXLABR",86,0)
 ;movement file # (ECXMN)^treating specialty (ECXTS)^
"RTN","ECXLABR",87,0)
 ;workload code(ECWC)^
"RTN","ECXLABR",88,0)
 ;node1
"RTN","ECXLABR",89,0)
 ;mpi (ECXMPI)^dss dept (ECXDSSD)^dom (ECXDOM)^time (ECSCTM)^
"RTN","ECXLABR",90,0)
 ;observ pat ind (ECXOBS)^encounter num (ECXENC)^prod div ECXPDIV^
"RTN","ECXLABR",91,0)
 ;lab results translation ECXTRANS^ordering provider (ECPTPR)^
"RTN","ECXLABR",92,0)
 ;ordering provider person class (ECCLASS)^ordering provider npi ECPTNPI^LOINC code ECLNC
"RTN","ECXLABR",93,0)
 ;Patient Category PATCAT^Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXLABR",94,0)
 N DA,DIK
"RTN","ECXLABR",95,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABR",96,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXLABR",97,0)
 S ECODE=ECODE_ECSCDT_U_$$RJ^XLFSTR(ECN,4,0)_U_ECRS_U_ECHL_U_ECORDT_U
"RTN","ECXLABR",98,0)
 S ECODE=ECODE_$$LJ^XLFSTR(ECORTM,6,0)_U
"RTN","ECXLABR",99,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXLABR",100,0)
 N ECXDATA,ECXTSC
"RTN","ECXLABR",101,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXLABR",102,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXLABR",103,0)
 ;done
"RTN","ECXLABR",104,0)
 S ECODE=ECODE_ECREDT_U_$$LJ^XLFSTR(ECRETM,6,0)_U_ECXMN_U_ECXTSC_U_ECWC_U
"RTN","ECXLABR",105,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXDOM_U_ECSCTM_U_ECXOBS_U_ECXENC_U_ECXPDIV_U_ECTRANS
"RTN","ECXLABR",106,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_2_ECPTPR_U_ECCLASS
"RTN","ECXLABR",107,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECPTNPI
"RTN","ECXLABR",108,0)
 I ECXLOGIC>2008 S ECODE1=ECODE1_U_ECLNC
"RTN","ECXLABR",109,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT
"RTN","ECXLABR",110,0)
 I ECXLOGIC>2013 S ECODE1=ECODE1_U_ECXESC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXLABR",111,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXLABR",112,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLABR",113,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABR",114,0)
 Q
"RTN","ECXLABR",115,0)
 ;
"RTN","ECXLABR",116,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABR",117,0)
 S ECHEAD="LAR"
"RTN","ECXLABR",118,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABR",119,0)
 Q
"RTN","ECXLABR",120,0)
 ;
"RTN","ECXLABR",121,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABR",122,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLBBC")
0^1^B61277456^B41769309
"RTN","ECXLBBC",1,0)
ECXLBBC ;ALB/MRY - LBB Extract Audit Comparative Report ;2/5/15  15:25
"RTN","ECXLBBC",2,0)
 ;;3.0;DSS EXTRACTS;**120,149,153,154**;Dec 22, 1997;Build 13
"RTN","ECXLBBC",3,0)
 ;
"RTN","ECXLBBC",4,0)
EN ;entry point for LBB extract audit comparative report
"RTN","ECXLBBC",5,0)
 N ECSD,ECED,ECSDN,ECEDN,ECXPORT,CNT ;154
"RTN","ECXLBBC",6,0)
 D SETUP^ECXLBB1 I ECFILE="" Q  ;149
"RTN","ECXLBBC",7,0)
 N %X,%Y,%DT,X,Y,DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT,SCRNARR,REPORT
"RTN","ECXLBBC",8,0)
 N SCRNARR,ECXERR,ECXHEAD,ECXAUD,ECXARRAY,STATUS,FLAG,ECXALL,TMP
"RTN","ECXLBBC",9,0)
 N ZTQUEUED,ZTSTOP
"RTN","ECXLBBC",10,0)
 S SCRNARR="^TMP(""ECX"",$J,""SCRNARR"")"
"RTN","ECXLBBC",11,0)
 K @SCRNARR@("DIVISION")
"RTN","ECXLBBC",12,0)
 S (ECXERR,FLAG)=0
"RTN","ECXLBBC",13,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXLBBC",14,0)
 S ECXHEAD="LBB",ECXAUD=0
"RTN","ECXLBBC",15,0)
 W !!,"Setup for ",ECXHEAD," Extract Comparative Report --",!!
"RTN","ECXLBBC",16,0)
 ;select extract
"RTN","ECXLBBC",17,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXLBBC",18,0)
 Q:ECXERR
"RTN","ECXLBBC",19,0)
 W !!
"RTN","ECXLBBC",20,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXLBBC",21,0)
 ;**not in ECXPLBB report, so leaving multi-divisions out.
"RTN","ECXLBBC",22,0)
 ;S ECXERR=$$NUT^ECXDVSN()
"RTN","ECXLBBC",23,0)
 ;I ECXERR=1 D  Q
"RTN","ECXLBBC",24,0)
 ;.W !!,?5,"Try again later... exiting.",!
"RTN","ECXLBBC",25,0)
 ;.K @SCRNARR@("DIVISION")
"RTN","ECXLBBC",26,0)
 ;.D AUDIT^ECXKILL
"RTN","ECXLBBC",27,0)
 S:'$D(ECINST) ECINST=+$P(^ECX(728,1,0),U)
"RTN","ECXLBBC",28,0)
 S ECXINST=ECINST
"RTN","ECXLBBC",29,0)
 K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXLBBC",30,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXLBBC",31,0)
 ;sort by COMP
"RTN","ECXLBBC",32,0)
 S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract comparative report to sort by COMP"
"RTN","ECXLBBC",33,0)
 S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXLBBC",34,0)
 I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXLBBC",35,0)
 ;if y=0 i.e., 'no', then ecxcomp=0 i.e., 'selected'
"RTN","ECXLBBC",36,0)
 S ECXCFLG=Y
"RTN","ECXLBBC",37,0)
 I ECXERR=1 D  Q
"RTN","ECXLBBC",38,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXLBBC",39,0)
 .D AUDIT^ECXKILL
"RTN","ECXLBBC",40,0)
 W !
"RTN","ECXLBBC",41,0)
 Q:(ECXARRAY("END")']"")&(ECXARRAY("START")']"")
"RTN","ECXLBBC",42,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I $G(ECXPORT) D  Q  ;154 Section added for exporting report
"RTN","ECXLBBC",43,0)
 .S X=ECXARRAY("START") D ^%DT S ECSD=Y S X=ECXARRAY("END") D ^%DT S ECED=Y S ECSD1=ECSD=-1
"RTN","ECXLBBC",44,0)
 .K ^TMP($J,"ECXPORT")
"RTN","ECXLBBC",45,0)
 .S ^TMP($J,"ECXPORT",0)="LOCAL NAME^LOCAL SSN^LOCAL FDR LOC^LOCAL TRANSF DATE^LOCAL COMP^LOCAL NUMBER OF UNITS^LBB EXTRACT LOG NUMBER^LBB EXTRACT SSN^LBB EXTRACT TRANSF DATE^LBB EXTRACT COMP^LBB EXTRACT NUMBER OF UNITS",CNT=1
"RTN","ECXLBBC",46,0)
 .D START
"RTN","ECXLBBC",47,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXLBBC",48,0)
 .D ^ECXKILL
"RTN","ECXLBBC",49,0)
 N ECXPOP S ECXPOP=0 D QUE Q:ECXPOP=1
"RTN","ECXLBBC",50,0)
 ;
"RTN","ECXLBBC",51,0)
START ; entry point from tasked job
"RTN","ECXLBBC",52,0)
 ; get LAB DATA and build temporary global ^TMP("ECXLBB",$J)
"RTN","ECXLBBC",53,0)
 N ECXLOGIC,ECXRPT,ECXCRPT,ECXJOB
"RTN","ECXLBBC",54,0)
 S ECXJOB=$J
"RTN","ECXLBBC",55,0)
 K ^TMP("ECXLBBC",ECXJOB)
"RTN","ECXLBBC",56,0)
 U IO
"RTN","ECXLBBC",57,0)
 I '$G(ECXPORT) I $E(IOST,1,2)="C-" W !,"Retrieving records... " ;154
"RTN","ECXLBBC",58,0)
 S (ECXRPT,ECXCRPT)=1 D AUDRPT^ECXLBB1 ;149 build source tmp
"RTN","ECXLBBC",59,0)
 D EXTRACT ;build extract tmp
"RTN","ECXLBBC",60,0)
 ;
"RTN","ECXLBBC",61,0)
OUTPUT ; entry point called by EN tag
"RTN","ECXLBBC",62,0)
 N ECDATE,ECXTOT,ECXSTOT,ECXSTRX,ECXSTRS,ECRDT,ECQUIT,ECPG,ECLINE,ECLINE1,ECXCLAST
"RTN","ECXLBBC",63,0)
 I '$D(^TMP("ECXLBBC",ECXJOB)) W:'$G(ECXPORT) !,"There were no records that met the date range criteria" Q  ;154
"RTN","ECXLBBC",64,0)
 S (ECPG,ECDATE,ECQUIT,ECXCOMP,ECXTOT,ECXSTOT)=0
"RTN","ECXLBBC",65,0)
 S ECXCOMP("TOTAL","S")=0,ECXCOMP("TOTAL","X")=0,ECXCLAST=0
"RTN","ECXLBBC",66,0)
 S ECLINE="",$P(ECLINE,"=",132)="=",ECLINE1="",$P(ECLINE1,"-",132)="-"
"RTN","ECXLBBC",67,0)
 S ECSDN=$$FMTE^XLFDT(ECSD,9),ECEDN=$$FMTE^XLFDT(ECED,9),ECRDT=$$FMTE^XLFDT(DT,9)
"RTN","ECXLBBC",68,0)
 I '$G(ECXPORT) W:$E(IOST,1,2)="C-" @IOF D HED ;154
"RTN","ECXLBBC",69,0)
 S ECXCOMP=0 F  S ECXCOMP=$O(^TMP("ECXLBBC",ECXJOB,ECXCOMP)) D  Q:ECXCOMP=""  Q:ECQUIT
"RTN","ECXLBBC",70,0)
 . I ECXCFLG,ECXCLAST'=0,ECXCOMP="" S ECXSTOT=1 D TOTAL S ECXSTOT=0 Q
"RTN","ECXLBBC",71,0)
 . Q:ECXCOMP=""
"RTN","ECXLBBC",72,0)
 . I ECXCFLG,ECXCLAST'=0,ECXCLAST'=ECXCOMP S ECXSTOT=1 D TOTAL S ECXSTOT=0
"RTN","ECXLBBC",73,0)
 . S ECXCLAST=ECXCOMP
"RTN","ECXLBBC",74,0)
 . S ECXCOMP(ECXCOMP,"S")=0,ECXCOMP(ECXCOMP,"X")=0
"RTN","ECXLBBC",75,0)
 . S ECXDFN=0 F  S ECXDFN=$O(^TMP("ECXLBBC",ECXJOB,ECXCOMP,ECXDFN)) Q:'ECXDFN  D  Q:ECQUIT
"RTN","ECXLBBC",76,0)
 .. S ECDATE=0 F  S ECDATE=$O(^TMP("ECXLBBC",ECXJOB,ECXCOMP,ECXDFN,ECDATE))  Q:'ECDATE  D  Q:ECQUIT
"RTN","ECXLBBC",77,0)
 ... S ECXSTRS=$G(^TMP("ECXLBBC",ECXJOB,ECXCOMP,ECXDFN,ECDATE,"S"))
"RTN","ECXLBBC",78,0)
 ... S ECXSTRX=$G(^TMP("ECXLBBC",ECXJOB,ECXCOMP,ECXDFN,ECDATE,"X"))
"RTN","ECXLBBC",79,0)
 ... I ECXSTRS'="" D
"RTN","ECXLBBC",80,0)
 .... S ECXCOMP(ECXCOMP,"S")=ECXCOMP(ECXCOMP,"S")+(+$P(ECXSTRS,"^",12))
"RTN","ECXLBBC",81,0)
 .... S ECXCOMP("TOTAL","S")=ECXCOMP("TOTAL","S")+(+$P(ECXSTRS,"^",12))
"RTN","ECXLBBC",82,0)
 ... I ECXSTRX'="" D
"RTN","ECXLBBC",83,0)
 .... S ECXCOMP(ECXCOMP,"X")=ECXCOMP(ECXCOMP,"X")+(+$P(ECXSTRX,"^",12))
"RTN","ECXLBBC",84,0)
 .... S ECXCOMP("TOTAL","X")=ECXCOMP("TOTAL","X")+(+$P(ECXSTRX,"^",12))
"RTN","ECXLBBC",85,0)
 ... D PRINT
"RTN","ECXLBBC",86,0)
 S ECXTOT=1 D TOTAL S ECXTOT=0
"RTN","ECXLBBC",87,0)
 I $G(ECXPORT) Q  ;154
"RTN","ECXLBBC",88,0)
 D ^ECXKILL
"RTN","ECXLBBC",89,0)
 Q
"RTN","ECXLBBC",90,0)
 ;
"RTN","ECXLBBC",91,0)
PRINT ;
"RTN","ECXLBBC",92,0)
 I $G(ECXPORT) D  Q  ;154 Section added for exporting report
"RTN","ECXLBBC",93,0)
 .S ^TMP($J,"ECXPORT",CNT)=$S(ECXSTRS="":"NO DATA^^^^^",1:$P(ECXSTRS,U,5)_U_$P(ECXSTRS,U,4)_U_$P(ECXSTRS,U,16)_U_$$FMTE^XLFDT($$HL7TFM^XLFDT($P(ECXSTRS,U,8)),2)_U_$P(ECXSTRS,U,11)_U_+$P(ECXSTRS,U,12))
"RTN","ECXLBBC",94,0)
 .S ^TMP($J,"ECXPORT",CNT)=^TMP($J,"ECXPORT",CNT)_U_$S(ECXSTRX="":"NO DATA",1:ECXARRAY("EXTRACT")_U_$P(ECXSTRX,U,4)_U_$$FMTE^XLFDT($$HL7TFM^XLFDT($P(ECXSTRX,U,8)),2)_U_$P(ECXSTRX,U,11)_U_+$P(ECXSTRX,U,12)),CNT=CNT+1
"RTN","ECXLBBC",95,0)
 I $Y+5>IOSL D  Q:ECQUIT
"RTN","ECXLBBC",96,0)
 . I $E(IOST,1,2)["C-" S DIR(0)="E" D ^DIR K DIR I 'Y S ECQUIT=1 Q
"RTN","ECXLBBC",97,0)
 . W @IOF D HED
"RTN","ECXLBBC",98,0)
 I ECXSTRS="" W !?3,"***************N*O***D*A*T*A*****************"
"RTN","ECXLBBC",99,0)
 I ECXSTRS'="" D
"RTN","ECXLBBC",100,0)
 . W !,$P(ECXSTRS,"^",5),?11,$P(ECXSTRS,"^",4),?26,$P(ECXSTRS,"^",16)
"RTN","ECXLBBC",101,0)
 . W ?37,$$FMTE^XLFDT($$HL7TFM^XLFDT($P(ECXSTRS,"^",8)),2)
"RTN","ECXLBBC",102,0)
 . W ?49,$P(ECXSTRS,"^",11),?60,$J(+$P(ECXSTRS,"^",12),2)
"RTN","ECXLBBC",103,0)
 I ECXSTRX="" W ?83,"*******N*O***D*A*T*A*********"
"RTN","ECXLBBC",104,0)
 I ECXSTRX'="" D
"RTN","ECXLBBC",105,0)
 . W ?80,$P(ECXSTRX,"^",4)
"RTN","ECXLBBC",106,0)
 . W ?92,$$FMTE^XLFDT($$HL7TFM^XLFDT($P(ECXSTRX,"^",8)),2)
"RTN","ECXLBBC",107,0)
 . W ?102,$P(ECXSTRX,"^",11),?113,$J(+$P(ECXSTRX,"^",12),2)
"RTN","ECXLBBC",108,0)
 Q
"RTN","ECXLBBC",109,0)
TOTAL ;
"RTN","ECXLBBC",110,0)
 ;I $Y+3>IOSL D  Q:ECQUIT
"RTN","ECXLBBC",111,0)
 ;. I $E(IOST,1,2)["C-" S DIR(0)="E" D ^DIR K DIR I 'Y S ECQUIT=1 Q
"RTN","ECXLBBC",112,0)
 ;. W @IOF D HED
"RTN","ECXLBBC",113,0)
 I $G(ECXPORT) D  Q  ;154 Section added for exporting report
"RTN","ECXLBBC",114,0)
 .I $G(ECXSTOT)!($G(ECXTOT)&('ECXCFLG)) S ^TMP($J,"ECXPORT",CNT)="^",CNT=CNT+1
"RTN","ECXLBBC",115,0)
 .S ^TMP($J,"ECXPORT",CNT)=$S($G(ECXSTOT):"^^^^"_ECXCLAST_" TOTAL^"_+$G(ECXCOMP(ECXCLAST,"S"))_"^^^^"_ECXCLAST_" TOTAL^"_+$G(ECXCOMP(ECXCLAST,"X")),1:"TOTAL^^^^^"_+$G(ECXCOMP("TOTAL","S"))_"^^^^^"_+$G(ECXCOMP("TOTAL","X"))),CNT=CNT+1
"RTN","ECXLBBC",116,0)
 .I $G(ECXSTOT) S ^TMP($J,"ECXPORT",CNT)="^",CNT=CNT+1
"RTN","ECXLBBC",117,0)
 W !,ECLINE1
"RTN","ECXLBBC",118,0)
 I $G(ECXSTOT) W !,?47,$J(ECXCLAST_" TOTAL",12),?60,$J(+$G(ECXCOMP(ECXCLAST,"S")),4),?100,$J(ECXCLAST_" TOTAL",12),?113,$J(+$G(ECXCOMP(ECXCLAST,"X")),4)
"RTN","ECXLBBC",119,0)
 I $G(ECXTOT) W !,"TOTAL",?60,$J(+$G(ECXCOMP("TOTAL","S")),4),?113,$J(+$G(ECXCOMP("TOTAL","X")),4)
"RTN","ECXLBBC",120,0)
 Q
"RTN","ECXLBBC",121,0)
 ;
"RTN","ECXLBBC",122,0)
HED ;
"RTN","ECXLBBC",123,0)
 S ECPG=ECPG+1
"RTN","ECXLBBC",124,0)
 W !,"LBB Extract Comparative Report",?124,"Page",$J(ECPG,3)
"RTN","ECXLBBC",125,0)
 W !,ECSDN," - ",ECEDN,?111,"Run Date:",$J(ECRDT,12)
"RTN","ECXLBBC",126,0)
 W !!,"------------------ LOCAL BLOOD BANK SOURCE ----------------------"
"RTN","ECXLBBC",127,0)
 W ?80,"------------- LBB EXTRACT (#"_ECXARRAY("EXTRACT")_") ---------------"
"RTN","ECXLBBC",128,0)
 W !,?37,"Transf",?57,"Number",?92,"Transf",?113,"Number"
"RTN","ECXLBBC",129,0)
 W !,"Name",?14,"SSN",?25,"FDR LOC",?37,"Date",?49,"COMP",?57,"of Units",?80,"SSN",?92,"Date",?102,"COMP",?113,"of Units"
"RTN","ECXLBBC",130,0)
 W !,ECLINE
"RTN","ECXLBBC",131,0)
 Q
"RTN","ECXLBBC",132,0)
 ;
"RTN","ECXLBBC",133,0)
QUE ;
"RTN","ECXLBBC",134,0)
 ;determine output device and queue if requested
"RTN","ECXLBBC",135,0)
 N %,X,%DT
"RTN","ECXLBBC",136,0)
 S X=ECXARRAY("START") D ^%DT S ECSD=Y S X=ECXARRAY("END") D ^%DT S ECED=Y
"RTN","ECXLBBC",137,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXLBBC",138,0)
 F X="ECINST","ECED","ECSD","ECSD1","ECEDN","ECSDN" S ECXSAVE(X)=""
"RTN","ECXLBBC",139,0)
 F X="ECPACK","ECPIECE","ECRTN","ECGRP","ECNODE" S ECXSAVE(X)=""
"RTN","ECXLBBC",140,0)
 F X="ECFILE","ECHEAD","ECVER","ECINST","ECXINST","ECXCFLG" S ECXSAVE(X)=""
"RTN","ECXLBBC",141,0)
 ;S ECXSAVE("ECXDIV(")=""
"RTN","ECXLBBC",142,0)
 S ECXSAVE("ECXARRAY(")="",ECXSAVE("SCRNARR")="",TMP=$$OREF^DILF(SCRNARR),ECXSAVE(TMP)=""
"RTN","ECXLBBC",143,0)
 S ECXPGM="START^ECXLBBC",ECXDESC="LBB Extract Audit Comparative Report"
"RTN","ECXLBBC",144,0)
 W !!,"This report requires a print width of 132 characters.",!!
"RTN","ECXLBBC",145,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXLBBC",146,0)
 I ECXSAVE("POP")=1 D  S ECXPOP=1 Q
"RTN","ECXLBBC",147,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXLBBC",148,0)
 .K @SCRNARR@("DIVISION")
"RTN","ECXLBBC",149,0)
 .D AUDIT^ECXKILL
"RTN","ECXLBBC",150,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXLBBC",151,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXLBBC",152,0)
 .D START^ECXLBBC
"RTN","ECXLBBC",153,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXLBBC",154,0)
 D HOME^%ZIS S ECXPOP=1
"RTN","ECXLBBC",155,0)
 D AUDIT^ECXKILL
"RTN","ECXLBBC",156,0)
 Q
"RTN","ECXLBBC",157,0)
EXTRACT ;build extract tmp
"RTN","ECXLBBC",158,0)
 N ECXEXT,IEN,NODE0,ECXDFN,ECXTDT,ECXTTM,ECXCOMP
"RTN","ECXLBBC",159,0)
 S ECXEXT=ECXARRAY("EXTRACT")
"RTN","ECXLBBC",160,0)
 S IEN=0 F  S IEN=$O(^ECX(727.829,"AC",ECXEXT,IEN)) Q:IEN=""  D
"RTN","ECXLBBC",161,0)
 . S NODE0=$G(^ECX(727.829,IEN,0)),ECXDFN=$P(NODE0,"^",5)
"RTN","ECXLBBC",162,0)
 . S ECXTDT=$P(NODE0,"^",10)
"RTN","ECXLBBC",163,0)
 . I ($E(ECXTDT,1)+1_$E(ECXTDT,3,8))>ECED Q
"RTN","ECXLBBC",164,0)
 . I ($E(ECXTDT,1)+1_$E(ECXTDT,3,8))<ECSD Q
"RTN","ECXLBBC",165,0)
 . S ECXTTM=$P(NODE0,"^",11),ECXCOMP=$P(NODE0,"^",13)
"RTN","ECXLBBC",166,0)
 . N ECCOUNT S ECCOUNT=0
"RTN","ECXLBBC",167,0)
 . F  S ECCOUNT=ECCOUNT+1 Q:'$D(^TMP("ECXLBBC",$J,$S($G(ECXCFLG)=1:ECXCOMP,1:"ZZNOZZ"),ECXDFN,ECXTDT_"."_ECXTTM_"."_ECCOUNT,"X"))
"RTN","ECXLBBC",168,0)
 . S ^TMP("ECXLBBC",$J,$S($G(ECXCFLG)=1:ECXCOMP,1:"ZZNOZZ"),ECXDFN,ECXTDT_"."_ECXTTM_"."_ECCOUNT,"X")="^"_$P(NODE0,"^",4,99)
"RTN","ECXLBBC",169,0)
 Q
"RTN","ECXNCL")
0^11^B1343239^B1317471
"RTN","ECXNCL",1,0)
ECXNCL ;ALB/DAN - Print national clinic list ;2/12/14  13:26
"RTN","ECXNCL",2,0)
 ;;3.0;DSS EXTRACTS;**149,154**;Dec 22, 1997;Build 13
"RTN","ECXNCL",3,0)
 N ECXPORT,DIC,L,FLDS,BY,CNT,NUM,CODE
"RTN","ECXNCL",4,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1
"RTN","ECXNCL",5,0)
 I 'ECXPORT D  Q
"RTN","ECXNCL",6,0)
 .S DIC="^ECX(728.441,",L=0,(FLDS,BY)="[ECX CLINIC CODE]" D EN1^DIP
"RTN","ECXNCL",7,0)
 K ^TMP($J)
"RTN","ECXNCL",8,0)
 S ^TMP($J,"ECXPORT",0)="CHAR4 CODE^SHORT DESCRIPTION",CNT=1
"RTN","ECXNCL",9,0)
 S CODE=0 F  S CODE=$O(^ECX(728.441,"B",CODE)) Q:CODE=""  S NUM=0 F  S NUM=$O(^ECX(728.441,"B",CODE,NUM)) Q:'+NUM  D
"RTN","ECXNCL",10,0)
 .I $P($G(^ECX(728.441,NUM,2)),U)'="" Q  ;Don't show inactive codes
"RTN","ECXNCL",11,0)
 .S ^TMP($J,"ECXPORT",CNT)=$G(^ECX(728.441,NUM,0)),CNT=CNT+1
"RTN","ECXNCL",12,0)
 D EXPDISP^ECXUTL1
"RTN","ECXNCL",13,0)
 K ^TMP($J)
"RTN","ECXNCL",14,0)
 Q
"RTN","ECXOPRX")
0^23^B67328800^B65795207
"RTN","ECXOPRX",1,0)
ECXOPRX ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ;6/5/15  11:19
"RTN","ECXOPRX",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,30,33,38,39,46,49,71,81,84,92,105,112,120,127,136,144,149,154**;Dec 22, 1997;Build 13
"RTN","ECXOPRX",3,0)
 ;
"RTN","ECXOPRX",4,0)
BEG ;entry point from option
"RTN","ECXOPRX",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXOPRX",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXOPRX",7,0)
 Q
"RTN","ECXOPRX",8,0)
 ;
"RTN","ECXOPRX",9,0)
START ;entry when queued
"RTN","ECXOPRX",10,0)
 N X,DA,DIC,DIQ,DR,ECXNPRFI,ECRXPTST,ECNONVAP,ECRXNUM,ECXSCRX,ECXESC,ECXCLST,ECXECL,ECXCHOCE ;144,154
"RTN","ECXOPRX",11,0)
 S QFLG=0
"RTN","ECXOPRX",12,0)
 I '$D(ECINST) D
"RTN","ECXOPRX",13,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXOPRX",14,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXOPRX",15,0)
 ;before V6
"RTN","ECXOPRX",16,0)
 S ECPROF=6,ECD=$O(^PSRX("AL",0)) I ECD,ECD<ECSD1 G V6
"RTN","ECXOPRX",17,0)
 S ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",18,0)
 F  S ECD=$O(^PSRX("AD",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AD",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AD",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",19,0)
 Q
"RTN","ECXOPRX",20,0)
 ;
"RTN","ECXOPRX",21,0)
V6 ;version 6 or better
"RTN","ECXOPRX",22,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",23,0)
 S ECPROF=2,ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",24,0)
 F  S ECD=$O(^PSRX("AL",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AL",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AL",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",25,0)
 Q:QFLG
"RTN","ECXOPRX",26,0)
 S ECREF="P",ECD=ECSD1
"RTN","ECXOPRX",27,0)
 F  S ECD=$O(^PSRX("AM",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AM",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AM",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",28,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",29,0)
 Q
"RTN","ECXOPRX",30,0)
 ;
"RTN","ECXOPRX",31,0)
STUFF ;get data
"RTN","ECXOPRX",32,0)
 N ECXPHA,DR,DIC,DA,DIQ,ECXDIQ ;154
"RTN","ECXOPRX",33,0)
 S ECDATA=$G(^PSRX(ECRX,0)),ECXPHA="" Q:'ECDATA
"RTN","ECXOPRX",34,0)
 I ECRFL S ECDATA1=$G(^PSRX(ECRX,ECREF,ECRFL,0)) I ECDATA1="" Q
"RTN","ECXOPRX",35,0)
 ;ecref set to 1 in extract+5 and v6+1 and to "P" in v6+2
"RTN","ECXOPRX",36,0)
 ;refill nodes and partial nodes are identical in layout.  Fills
"RTN","ECXOPRX",37,0)
 ;(ie ecrfl=0)& refills (ie ecrfl>0) from "AL" xref, partials from "AM"
"RTN","ECXOPRX",38,0)
 S (ECXDSSD,ECXPROVN,ECXCVE,ECXCVEDT,ECXCVENC,ECRXPTST,ECRXNUM)="",ECXERR=0,ECXDATE=ECD,ECXDFN=$P(ECDATA,U,2),ECDRG=+$P(ECDATA,U,6)
"RTN","ECXOPRX",39,0)
 ;- Get rx patient status & rx number
"RTN","ECXOPRX",40,0)
 S ECRXPTST=$$RXPTST^ECXUTL5($P(ECDATA,U,3)),ECRXNUM=$P(ECDATA,U,1)
"RTN","ECXOPRX",41,0)
 ;- Get provider (either 2_provider or 6_provider depending on version)
"RTN","ECXOPRX",42,0)
 S ECXPROV=$S($P(ECDATA,U,4)'="":ECPROF_$P(ECDATA,U,4),1:""),ECXPROVP=$$PRVCLASS^ECXUTL($P(ECDATA,U,4),ECXDATE)
"RTN","ECXOPRX",43,0)
 S ECPRVNPI=$$NPI^XUSNPI("Individual_ID",$P(ECDATA,U,4),ECXDATE)
"RTN","ECXOPRX",44,0)
 S:+ECPRVNPI'>0 ECPRVNPI="" S ECPRVNPI=$P(ECPRVNPI,U)
"RTN","ECXOPRX",45,0)
 ;get classification data
"RTN","ECXOPRX",46,0)
 ;154 Added section to use call to PSODI for obtaining data
"RTN","ECXOPRX",47,0)
 F DR=116:1:121,122.01,128 D
"RTN","ECXOPRX",48,0)
 .S DIC=52
"RTN","ECXOPRX",49,0)
 .S DA=ECRX
"RTN","ECXOPRX",50,0)
 .S DIQ="ECXDIQ"
"RTN","ECXOPRX",51,0)
 .D DIQ^PSODI(DIC,DIC,DR,DA,DIQ)
"RTN","ECXOPRX",52,0)
 .S @$S(DR=116:"ECXESC",DR=117:"ECXMIL",DR=118:"ECXAO",DR=119:"ECXIR",DR=120:"ECXECE",DR=121:"ECXHNC",DR=122.01:"ECXSHAD",1:"ECXECL")=$S($G(ECXDIQ(52,DA,DR))="YES":"Y",$G(ECXDIQ(52,DA,DR))="NO":"N",1:"")
"RTN","ECXOPRX",53,0)
 .S ECXSCRX=ECXESC
"RTN","ECXOPRX",54,0)
 ;- Check non-va provider flag and set to 'Y' if exist
"RTN","ECXOPRX",55,0)
 S ECNONVAP=$$NONVAP^ECXUTL5($E(ECXPROV,2,99))
"RTN","ECXOPRX",56,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXOPRX",57,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXOPRX",58,0)
 ;get patient specific data
"RTN","ECXOPRX",59,0)
 D PAT(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXOPRX",60,0)
 I 'ECRFL D
"RTN","ECXOPRX",61,0)
 .S ECMW=$P(ECDATA,U,11),ECQTY=+$P(ECDATA,U,7),ECXDIV=$S($D(^PSRX(ECRX,2)):$P(^(2),U,9),1:1)
"RTN","ECXOPRX",62,0)
 .S ECPRC=+$P(ECDATA,U,17),ECOPAY=$P($G(^PSRX(ECRX,"IB")),U,2)]""
"RTN","ECXOPRX",63,0)
 I ECRFL D
"RTN","ECXOPRX",64,0)
 .S ECMW=$P(ECDATA1,U,2),ECQTY=+$P(ECDATA1,U,4),ECXDIV=$S(+$P(ECDATA1,U,9):$P(ECDATA1,U,9),1:1)
"RTN","ECXOPRX",65,0)
 .S ECPRC=+$P(ECDATA1,U,11),ECOPAY=$P($G(^PSRX(ECRX,1,ECRFL,"IB")),U)]""
"RTN","ECXOPRX",66,0)
 S ECXCOST=$J((ECQTY*ECPRC),1,2),ECDS=$S(ECRFL:$P(ECDATA1,U,10),1:$P(ECDATA,U,8))
"RTN","ECXOPRX",67,0)
 ;call pharmacy drug file (#50) api
"RTN","ECXOPRX",68,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG),ECCAT=$P(ECXPHA,U,2),ECINV=$P(ECXPHA,U,4)
"RTN","ECXOPRX",69,0)
 ; new method of dea spl hndlg **136 updated precedence *144
"RTN","ECXOPRX",70,0)
 I ECXLOGIC>2012 S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"")
"RTN","ECXOPRX",71,0)
 ; old method of dea spl hndlg **136
"RTN","ECXOPRX",72,0)
 I ECXLOGIC<2013 S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXOPRX",73,0)
 S ECUI=$P(ECXPHA,U,8),ECNDC=$P(ECXPHA,U,3)
"RTN","ECXOPRX",74,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0),P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6)
"RTN","ECXOPRX",75,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXOPRX",76,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXOPRX",77,0)
 I ECMW="M" S ECMW=1 I $D(^PSRX("AR",ECD,ECRX)) S ECMW=2
"RTN","ECXOPRX",78,0)
 I ECMW="W" S ECMW=""
"RTN","ECXOPRX",79,0)
 S ECXNEW="" I ECRFL=0 S ECXNEW=1
"RTN","ECXOPRX",80,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS) ;Observation pat indic (YES/NO)
"RTN","ECXOPRX",81,0)
 S ECXORDPH="" ;Ordering physician (null for FY2002)
"RTN","ECXOPRX",82,0)
 ;- Ordering stop code & Ordering date
"RTN","ECXOPRX",83,0)
 S ECXORDST=$P($G(^ECX(728.44,+$P(ECDATA,U,5),0)),U,2),ECXORDDT=$$ECXDATE^ECXUTL(+$P(ECDATA,U,13),ECXYM)
"RTN","ECXOPRX",84,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN) ;CNH status (YES/NO)
"RTN","ECXOPRX",85,0)
 ;- DSS Dept and National Prod Division
"RTN","ECXOPRX",86,0)
 ;S ECXDSSD=$$PRE^ECXDEPT(ECXDIV,ECMW,ECINST) dss department postponed
"RTN","ECXOPRX",87,0)
 N ECXPDIV S ECXPDIV=$$PREDIV^ECXDEPT(ECXDIV)
"RTN","ECXOPRX",88,0)
 ;- Set national patient record flag if exist
"RTN","ECXOPRX",89,0)
 D NPRF^ECXUTL5
"RTN","ECXOPRX",90,0)
 ;- If no encounter number don't file record
"RTN","ECXOPRX",91,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXOPRX",92,0)
 I ECXLOGIC>2003 D
"RTN","ECXOPRX",93,0)
 .I (ECMW=2)!((ECMW=1)&(ECXLOGIC>2006)),ECXSSN'="" D
"RTN","ECXOPRX",94,0)
 .. N TMP
"RTN","ECXOPRX",95,0)
 .. I (ECXLOGIC>2008) S TMP=$$JULDT^ECXUTL4(ECD),ECXENC=$E(ECXSSN,1,9)_TMP_"PHA"
"RTN","ECXOPRX",96,0)
 .. E  S TMP=$$JULDT^ECXUTL4(ECD),ECXENC=$E(ECXSSN,1,9)_TMP_"160"
"RTN","ECXOPRX",97,0)
 .. I (ECXLOGIC>2009),(ECXOBS="YES") S ECXOBS=""
"RTN","ECXOPRX",98,0)
 .. S ECXA="O"
"RTN","ECXOPRX",99,0)
 S ECXCHOCE=$S($$UP^XLFSTR($$GET1^DIQ(52,ECRX_",",12))["CHOICE":"C",1:"") ;154 If remarks contain "choice" RX is filled by choice program
"RTN","ECXOPRX",100,0)
 I ECXENC'="" D FILE^ECXOPRX1
"RTN","ECXOPRX",101,0)
 Q
"RTN","ECXOPRX",102,0)
 ;
"RTN","ECXOPRX",103,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;Determine in/outpatient status, movement number, primary care team and provider
"RTN","ECXOPRX",104,0)
 N OK,X,PT
"RTN","ECXOPRX",105,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXOPRX",106,0)
 ;get patient data if saved
"RTN","ECXOPRX",107,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXOPRX",108,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXSSN=$P(PT,U),ECXPNM=$P(PT,U,2),ECXMPI=$P(PT,U,3),ECXSEX=$P(PT,U,4),ECXDOB=$P(PT,U,5)
"RTN","ECXOPRX",109,0)
 .S ECXELIG=$P(PT,U,6),ECXVET=$P(PT,U,7),ECXRACE=$P(PT,U,8),ECXPST=$P(PT,U,9),ECXPLOC=$P(PT,U,10),ECXRST=$P(PT,U,11)
"RTN","ECXOPRX",110,0)
 .S ECXAST=$P(PT,U,12),ECXMST=$P(PT,U,13),ECXSTATE=$P(PT,U,14),ECXCNTY=$P(PT,U,15),ECXZIP=$P(PT,U,16),ECXENRL=$P(PT,U,17)
"RTN","ECXOPRX",111,0)
 .S ECXPHI=$P(PT,U,20),ECXCAT=$P(PT,U,21),ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23)
"RTN","ECXOPRX",112,0)
 .S ECXCNHU=$P(PT,U,24),ECXPOS=$P(PT,U,25),ECXAOL=$P(PT,U,26),ECXHNCI=$P(PT,U,27),ECXETH=$P(PT,U,28),ECXRC1=$P(PT,U,29),ECXMTST=$P(PT,U,30)
"RTN","ECXOPRX",113,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4),ECXCNTRY=$P(PT1,U,5)
"RTN","ECXOPRX",114,0)
 .S ECXPATCAT=$P(PT1,U,6),ECXSHAD=$P(PT1,U,7),ECXSHADI=$P(PT1,U,8),ECXVNS=$P(PT1,U,9),ECXCLST=$P(PT1,U,10) ;144 Vietnam and Camp Lejeune status
"RTN","ECXOPRX",115,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",116,0)
 ;set patient data
"RTN","ECXOPRX",117,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXOPRX",118,0)
 .K ECXPAT
"RTN","ECXOPRX",119,0)
 .S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD1,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXOPRX",120,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXOPRX",121,0)
 .S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI"),ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXOPRX",122,0)
 .S ECXVET=ECXPAT("VET"),ECXRACE=ECXPAT("RACE"),ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXOPRX",123,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXMST=ECXPAT("MST STAT"),ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP"),ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXOPRX",124,0)
 .S ECXERI=ECXPAT("ERI"),ECXEST=ECXPAT("EC STAT"),ECXCNTRY=ECXPAT("COUNTRY"),ECXVNS=ECXPAT("VIETNAM"),ECXCLST=ECXPAT("CL STAT") ; 144 VIETNAM STATUS and Camp Lejeune Status
"RTN","ECXOPRX",125,0)
 .S ECXSVCI=ECXPAT("COMBSVCI"),ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC IND/LOC
"RTN","ECXOPRX",126,0)
 .;- CNH Stat (placeholder),Purp Heart Ind,Per of Svce,AO Loc,MT Stat
"RTN","ECXOPRX",127,0)
 .S ECXCNHU="",ECXPHI=ECXPAT("PHI"),ECXPOS=ECXPAT("POS"),ECXAOL=ECXPAT("AOL"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXOPRX",128,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",129,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN) ;Head and Neck Cancer Indicator
"RTN","ECXOPRX",130,0)
 .S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN) ;Proj 112/SHAD Indicator
"RTN","ECXOPRX",131,0)
 .S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1") ;Race and Ethnicity
"RTN","ECXOPRX",132,0)
 .; OEF/OIF data
"RTN","ECXOPRX",133,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXOPRX",134,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXOPRX",135,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXSSN_U_ECXPNM_U_ECXMPI_U_ECXSEX_U_ECXDOB_U_ECXELIG_U_ECXVET_U_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U_ECXMST_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXENRL_U_U
"RTN","ECXOPRX",136,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXPHI_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXCNHU_U_ECXPOS_U_ECXAOL_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXOPRX",137,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXCNTRY_U_ECXPATCAT_U_ECXSHAD_U_ECXSHADI_U_ECXVNS_U_ECXCLST ;144 VIETNAM STATUS and Camp Lejeune Status
"RTN","ECXOPRX",138,0)
 ;get inpatient data
"RTN","ECXOPRX",139,0)
 S (ECXA,ECXADMDT,ECXDOM,ECXMN,ECXTS)="",X=$$INP^ECXUTL2(ECXDFN,ECXDATE) D
"RTN","ECXOPRX",140,0)
 .S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXOPRX",141,0)
 ;get primary care data
"RTN","ECXOPRX",142,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,".")),ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXOPRX",143,0)
 Q
"RTN","ECXOPRX",144,0)
 ;
"RTN","ECXOPRX",145,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXOPRX",146,0)
 S ECHEAD="PRE"
"RTN","ECXOPRX",147,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXOPRX",148,0)
 Q
"RTN","ECXOPRX",149,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXOPRX",150,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXOPRX1")
0^24^B10575789^B10323095
"RTN","ECXOPRX1",1,0)
ECXOPRX1 ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ;4/21/15  14:16
"RTN","ECXOPRX1",2,0)
 ;;3.0;DSS EXTRACTS;**92,107,105,120,127,144,149,154**;Dec 22, 1997;Build 13
"RTN","ECXOPRX1",3,0)
 ;
"RTN","ECXOPRX1",4,0)
FILE ;file record
"RTN","ECXOPRX1",5,0)
 ;node0
"RTN","ECXOPRX1",6,0)
 ;inst^dfn^ssn^name^in/out ECXA^day^division^provider^drug category^mail^
"RTN","ECXOPRX1",7,0)
 ;placeholder1^new^shad indicator^qty^cost^encounter shad^mov #^treat spec^placeholder4^unit of issue^dob^elig^vet^copay^
"RTN","ECXOPRX1",8,0)
 ;feeder key^investigational^days supply^primary care team^primary care provider^time^race
"RTN","ECXOPRX1",9,0)
 ;node1
"RTN","ECXOPRX1",10,0)
 ;mpi^dss dept ECXDSSD^sex^zip+4^placeholder^placeholder^state^county^pc prov person class^pow status^pow location^
"RTN","ECXOPRX1",11,0)
 ;ir status^ao status^sharing agree. payor^sharing agree. ins.^mst status^enroll loc^assoc pc provider^assoc pc prov person class^
"RTN","ECXOPRX1",12,0)
 ;placeholder^dom ECXDOM^purple heart ECXPHI^enrollment category ECXCAT^enrollment status ECXSTST^
"RTN","ECXOPRX1",13,0)
 ;enrollment priority ECXPRIOR^cnhu status ECXCNHU^period of service ECXPOS^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXOPRX1",14,0)
 ;ao loc ECXAOL^ord physician ECXORDPH^ord stop code ECXORDST^ord date ECXORDDT^CNH status ECXCNH^national division ECXPDIV^
"RTN","ECXOPRX1",15,0)
 ;MT Stat ECXMTST^head & neck cancer ind. ECXHNCI^ethnicity ECXETH^race ECXRC1^^enrollment priority ECXPRIOR_
"RTN","ECXOPRX1",16,0)
 ;enrollment subgroup ECXSBGRP^user enrollee ECXUESTA
"RTN","ECXOPRX1",17,0)
 ;NODE 2
"RTN","ECXOPRX1",18,0)
 ;patient type ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXOPRX1",19,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^rx patient status ECRXPTST^non-va prescriber ECNONVAP^rx # ECRXNUM
"RTN","ECXOPRX1",20,0)
 ;^emergency response indicator(FEMA) ECXERI^agent orange enc ECXAO^environ cont PGE ECXECE^head/neck ECXHNC^enc mst ECXMIL^environ contamin ECXEST^ion radiat ECXIR
"RTN","ECXOPRX1",21,0)
 ;^OEF/OIF data ECXOEF^OEFOIF return date ECXOEFDT^associate pc provider npi ECASNPI^primary care provider npi ECPTNPI^provider npi ECPRVNPI
"RTN","ECXOPRX1",22,0)
 ;^country ECXCNTRY^PATCAT^Encounter SC ECXESC^Vietnam ECXVNS^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL ^Combat Service Ind ECXSVCI ^Combat Service Loc ECXSVCL^Choice RX ECXCHOCE
"RTN","ECXOPRX1",23,0)
 N DA,DIK
"RTN","ECXOPRX1",24,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXOPRX1",25,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXOPRX1",26,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXDIV_U
"RTN","ECXOPRX1",27,0)
 S ECODE=ECODE_ECXPROV_U_ECCAT_U_ECMW_U_ECXPROVP_U_ECXNEW_U_$S(ECXLOGIC>2010:ECXSHADI,1:"")_U_ECQTY_U
"RTN","ECXOPRX1",28,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXOPRX1",29,0)
 N ECXDATA
"RTN","ECXOPRX1",30,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXOPRX1",31,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXOPRX1",32,0)
 ;done
"RTN","ECXOPRX1",33,0)
 S ECODE=ECODE_ECXCOST_U_$S(ECXLOGIC>2010:ECXSHAD,1:"")_U_ECXMN_U_ECXTS_U_U_ECUI_U_ECXDOB_U
"RTN","ECXOPRX1",34,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECOPAY_U_ECNFC_U_ECINV_U_ECDS_U
"RTN","ECXOPRX1",35,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_$$ECXTIME^ECXUTL(ECXDATE)_U_ECXRACE_U
"RTN","ECXOPRX1",36,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U_ECXPROVN_U_U
"RTN","ECXOPRX1",37,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECCLAS_U_ECXPST_U_ECXPLOC_U
"RTN","ECXOPRX1",38,0)
 S ECODE1=ECODE1_ECXRST_U_ECXAST_U_U_U_ECXMST_U_ECXENRL_U
"RTN","ECXOPRX1",39,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXPHI_U_ECXCAT_U
"RTN","ECXOPRX1",40,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXCNHU_U_ECXPOS_U_ECXOBS_U
"RTN","ECXOPRX1",41,0)
 S ECODE1=ECODE1_ECXENC_U_ECXAOL_U_ECXORDPH_U_ECXORDST_U_ECXORDDT_U
"RTN","ECXOPRX1",42,0)
 S ECODE1=ECODE1_ECXCNH_U_ECXPDIV_U_ECXMTST_U_ECXHNCI_U_ECXETH_U
"RTN","ECXOPRX1",43,0)
 S ECODE1=ECODE1_ECXRC1_U
"RTN","ECXOPRX1",44,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U
"RTN","ECXOPRX1",45,0)
 I ECXLOGIC>2004 S ECODE2=ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI_U_ECRXPTST_U_ECNONVAP
"RTN","ECXOPRX1",46,0)
 I ECXLOGIC>2005 S ECODE2=ECODE2_U_ECRXNUM
"RTN","ECXOPRX1",47,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXEST_U_ECXIR_U_ECXSCRX
"RTN","ECXOPRX1",48,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECPRVNPI
"RTN","ECXOPRX1",49,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXOPRX1",50,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT
"RTN","ECXOPRX1",51,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXVNS_U_ECXCLST_U_ECXECL ;144
"RTN","ECXOPRX1",52,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXOPRX1",53,0)
 I ECXLOGIC>2015 S ECODE2=ECODE2_U_ECXCHOCE ;154
"RTN","ECXOPRX1",54,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXOPRX1",55,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXOPRX1",56,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXOPRX1",57,0)
 Q
"RTN","ECXPHAU")
0^27^B8852049^B8648371
"RTN","ECXPHAU",1,0)
ECXPHAU ;ALB/JAM - Print Pharmacy Volume Edit Log (IVP,PRE,UDP) ; 11/2/06 8:54am
"RTN","ECXPHAU",2,0)
 ;;3.0;DSS EXTRACTS;**92,154**;Dec 22, 1997;Build 13
"RTN","ECXPHAU",3,0)
EN ;entry point from option
"RTN","ECXPHAU",4,0)
 ;Init variables and sort array
"RTN","ECXPHAU",5,0)
 N QFLG,SORT,ECXX,ECXNAM,ECSD,ECED
"RTN","ECXPHAU",6,0)
 ;
"RTN","ECXPHAU",7,0)
 S QFLG=0
"RTN","ECXPHAU",8,0)
 W !!,"This option prints a log of the changes made to the Pharmacy"
"RTN","ECXPHAU",9,0)
 W !,"Extracts: PRE, IVP, UDP or BCM",!
"RTN","ECXPHAU",10,0)
 ;
"RTN","ECXPHAU",11,0)
 ;Get Extract
"RTN","ECXPHAU",12,0)
 D EXTRT Q:QFLG
"RTN","ECXPHAU",13,0)
 ;Get sort
"RTN","ECXPHAU",14,0)
 D GETSORT Q:QFLG
"RTN","ECXPHAU",15,0)
 W !!,"** REPORT REQUIRES 132 COLUMNS TO PRINT CORRECTLY **"
"RTN","ECXPHAU",16,0)
 D DTRNG Q:QFLG
"RTN","ECXPHAU",17,0)
 D PRINT
"RTN","ECXPHAU",18,0)
 Q
"RTN","ECXPHAU",19,0)
EXTRT ;Prompt for extract to report on
"RTN","ECXPHAU",20,0)
 N DIR,DIRUT
"RTN","ECXPHAU",21,0)
 S DIR(0)="SO^P:PRE;I:IVP;U:UDP;B:BCM" ;154
"RTN","ECXPHAU",22,0)
 S DIR("A")="Which extract log do you need?"
"RTN","ECXPHAU",23,0)
 D ^DIR I $D(DIRUT) S QFLG=1 Q
"RTN","ECXPHAU",24,0)
 S ECXX=Y,ECXNAM=Y(0)
"RTN","ECXPHAU",25,0)
 Q
"RTN","ECXPHAU",26,0)
GETSORT ;Prompt for sorting order for report
"RTN","ECXPHAU",27,0)
 N DIR,X,Y,DIRUT
"RTN","ECXPHAU",28,0)
 S DIR(0)="SO^1:USER NAME;2:DATE CHANGED"
"RTN","ECXPHAU",29,0)
 S DIR("A")="Select sort for Pharmacy Volume Edit Log",DIR("B")=1
"RTN","ECXPHAU",30,0)
 D ^DIR
"RTN","ECXPHAU",31,0)
 I $D(DIRUT) S QFLG=1 Q
"RTN","ECXPHAU",32,0)
 S SORT=Y
"RTN","ECXPHAU",33,0)
 Q
"RTN","ECXPHAU",34,0)
PRINT ;Print report using fileman EN1^DIP for IVP
"RTN","ECXPHAU",35,0)
 N L,DIR,DIC,DIA,FLDS,DHD,BY,FR,TO,DIOBEG,ECXFIL,PG,ECXFLG
"RTN","ECXPHAU",36,0)
 S ECXFIL=$S(ECXX="P":"727.81",ECXX="I":"727.819",ECXX="B":"727.833",1:"727.809"),ECXFLG=0 ;154
"RTN","ECXPHAU",37,0)
 S L=0,DIC="^DIA("_ECXFIL_",",DIOBEG="I $E(IOST,1,2)=""C-"" W @IOF"
"RTN","ECXPHAU",38,0)
 S FLDS=".04;L23,.02;C25;L20,.01;C47;L14,D EXTNOI^ECXPHAU;C62;L9,"
"RTN","ECXPHAU",39,0)
 S FLDS=FLDS_"1.1;C74;L15,2;C90;L19,3;C110;L15"
"RTN","ECXPHAU",40,0)
 S DHD="W ?0 D RPTHDR^ECXPHAU"
"RTN","ECXPHAU",41,0)
 I SORT=1 D
"RTN","ECXPHAU",42,0)
 .S BY=".04,.02",FR="A,"_ECSD,TO="Zz,"_ECED
"RTN","ECXPHAU",43,0)
 I SORT=2 D
"RTN","ECXPHAU",44,0)
 .S BY=".02,.04",FR=ECSD_",A",TO=ECED_",Zz"
"RTN","ECXPHAU",45,0)
 D EN1^DIP
"RTN","ECXPHAU",46,0)
 I 'ECXFLG,'$D(^DIA(ECXFIL)) D
"RTN","ECXPHAU",47,0)
 .W !,"NO RECORDS FOUND"
"RTN","ECXPHAU",48,0)
 .I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR
"RTN","ECXPHAU",49,0)
 Q
"RTN","ECXPHAU",50,0)
 ;
"RTN","ECXPHAU",51,0)
EXTNOI ;Extract Number
"RTN","ECXPHAU",52,0)
 I $G(X) W $P($G(^ECX(ECXFIL,+X,0)),"^",3)
"RTN","ECXPHAU",53,0)
 Q
"RTN","ECXPHAU",54,0)
RPTHDR ;report header
"RTN","ECXPHAU",55,0)
 N LN
"RTN","ECXPHAU",56,0)
 S PG=$G(PG)+1,ECXFLG=1
"RTN","ECXPHAU",57,0)
 W "PHARMACY VOLUME EDIT LOG FOR "_ECXNAM,?115,"Page ",PG,!
"RTN","ECXPHAU",58,0)
 W "Printed on ",$$HTE^XLFDT($H)," for ",ECSD," to ",ECED,!
"RTN","ECXPHAU",59,0)
 W "USER NAME",?24,"DATE/TIME CHANGED",?46,"SEQUENCE #",?61
"RTN","ECXPHAU",60,0)
 W "EXTRACT #",?73,"FIELD NAME",?89,"OLD VALUE",?109,"NEW VALUE",!
"RTN","ECXPHAU",61,0)
 S $P(LN,"-",130)="" W LN,!
"RTN","ECXPHAU",62,0)
 Q
"RTN","ECXPHAU",63,0)
DTRNG ;report date range
"RTN","ECXPHAU",64,0)
 N %DT,ECDT,X,Y
"RTN","ECXPHAU",65,0)
DTREP S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)="-NOW" D ^%DT
"RTN","ECXPHAU",66,0)
 I Y<0 S QFLG=1 Q
"RTN","ECXPHAU",67,0)
 S ECDT=Y,ECSD=$$FMTE^XLFDT(Y,2)
"RTN","ECXPHAU",68,0)
 S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)="-NOW" D ^%DT
"RTN","ECXPHAU",69,0)
 I Y<0 S QFLG=1 Q
"RTN","ECXPHAU",70,0)
 I Y<ECDT D  G DTREP
"RTN","ECXPHAU",71,0)
 .W !!,"The ending date cannot be earlier than the starting date.",!
"RTN","ECXPHAU",72,0)
 I $E(Y,1,5)'=$E(ECDT,1,5) D  G DTREP
"RTN","ECXPHAU",73,0)
 .W !!,"Beginning and ending dates must be in the same month and year.",!
"RTN","ECXPHAU",74,0)
 S ECED=$$FMTE^XLFDT(Y,2)
"RTN","ECXPHAU",75,0)
 Q
"RTN","ECXPHVE")
0^28^B25113519^B20171490
"RTN","ECXPHVE",1,0)
ECXPHVE ;ALB/JAM - Pharmacy Volume Edit ;5/28/15  14:29
"RTN","ECXPHVE",2,0)
 ;;3.0;DSS EXTRACTS;**92,120,136,154**;Dec 22, 1997;Build 13
"RTN","ECXPHVE",3,0)
 ;
"RTN","ECXPHVE",4,0)
EN ;entry point from menu option
"RTN","ECXPHVE",5,0)
 N DIR,DIRUT,ECXX,Y,STOP,ECPIECE
"RTN","ECXPHVE",6,0)
 N $ESTACK,$ETRAP S $ETRAP="D RESET^ECXPHVE"
"RTN","ECXPHVE",7,0)
 S DIR(0)="SO^P:PRE;I:IVP;U:UDP;B:BCM" ;154 BCM ADDED
"RTN","ECXPHVE",8,0)
 D ^DIR I $D(DIRUT) Q
"RTN","ECXPHVE",9,0)
 S DIR("A")="Which extract do you need to edit?"
"RTN","ECXPHVE",10,0)
 S ECXX=Y(0),ECPIECE=$S(ECXX="PRE":2,ECXX="IVP":19,ECXX="BCM":29,1:8) ;Added BCM 154
"RTN","ECXPHVE",11,0)
 S STOP=0 I $P($G(^ECX(728,1,7.1)),"^",ECPIECE)]"" D  I STOP Q
"RTN","ECXPHVE",12,0)
 .W !!,ECXX," Extract running, cannot edit. Try later.",!! S STOP=1
"RTN","ECXPHVE",13,0)
 .K DIR S DIR(0)="E" D ^DIR
"RTN","ECXPHVE",14,0)
 S $P(^ECX(728,1,7.1),"^",ECPIECE)="R"
"RTN","ECXPHVE",15,0)
 D EXTEDT
"RTN","ECXPHVE",16,0)
 Q
"RTN","ECXPHVE",17,0)
 ;
"RTN","ECXPHVE",18,0)
EXTEDT ;Edit extracts - PRE, IVP, or UDP
"RTN","ECXPHVE",19,0)
 N DIC,DIE,DA,DR,DTOUT,DUOUT,Y,D
"RTN","ECXPHVE",20,0)
 ;PRE extract (file #727.1) edit Quantity (field #16) & Unit of Issue (field #22)
"RTN","ECXPHVE",21,0)
 I ECXX="PRE" D
"RTN","ECXPHVE",22,0)
 .S DA=$$GETSEQ(727.81)
"RTN","ECXPHVE",23,0)
 .S DIC="^ECX(727.81,",DR="16;22"
"RTN","ECXPHVE",24,0)
 .D TURNON^DIAUTL(727.81,"16;22","y")
"RTN","ECXPHVE",25,0)
 ;IVP extract (file #727.819) edit Quantity (field #10)&Total Doses per Day (#20)
"RTN","ECXPHVE",26,0)
 I ECXX="IVP" D
"RTN","ECXPHVE",27,0)
 .S DA=$$GETSEQ(727.819)
"RTN","ECXPHVE",28,0)
 .S DIC="^ECX(727.819,",DR="10;20"
"RTN","ECXPHVE",29,0)
 .D TURNON^DIAUTL(727.819,"10;20","y")
"RTN","ECXPHVE",30,0)
 ;UDP extract (file #727.809) edit Quantity (field #10)
"RTN","ECXPHVE",31,0)
 I ECXX="UDP" D
"RTN","ECXPHVE",32,0)
 .S DA=$$GETSEQ(727.809)
"RTN","ECXPHVE",33,0)
 .S DIC="^ECX(727.809,",DR="10"
"RTN","ECXPHVE",34,0)
 .D TURNON^DIAUTL(727.809,"10","y")
"RTN","ECXPHVE",35,0)
 ;BCM extract (file #727.833) edit Component Dose Given (field #31) & Component Units (field #32) 154
"RTN","ECXPHVE",36,0)
 I ECXX="BCM" D
"RTN","ECXPHVE",37,0)
 .S DA=$$GETSEQ(727.833)
"RTN","ECXPHVE",38,0)
 .S DIC="^ECX(727.833,",DR="31;32"
"RTN","ECXPHVE",39,0)
 .D TURNON^DIAUTL(727.833,"31;32","y")
"RTN","ECXPHVE",40,0)
 S DIE=DIC D ^DIE
"RTN","ECXPHVE",41,0)
RESET I $G(ECXX)="" Q
"RTN","ECXPHVE",42,0)
 I ECXX="PRE" D TURNON^DIAUTL(727.81,"16;22","n")
"RTN","ECXPHVE",43,0)
 I ECXX="IVP" D TURNON^DIAUTL(727.819,"10;20","n")
"RTN","ECXPHVE",44,0)
 I ECXX="UDP" D TURNON^DIAUTL(727.809,"10","n")
"RTN","ECXPHVE",45,0)
 I ECXX="BCM" D TURNON^DIAUTL(727.833,"31;32","n") ;154
"RTN","ECXPHVE",46,0)
 I $G(ECPIECE) S $P(^ECX(728,1,7.1),"^",ECPIECE)=""
"RTN","ECXPHVE",47,0)
 Q
"RTN","ECXPHVE",48,0)
CKREC(ECXN) ;Checks if record should be edited.
"RTN","ECXPHVE",49,0)
 I ECXN="" Q 0
"RTN","ECXPHVE",50,0)
 I $G(^ECX(727,ECXN,"PURG"))'="" Q 0
"RTN","ECXPHVE",51,0)
 I $G(^ECX(727,ECXN,"TR"))'="" Q 0
"RTN","ECXPHVE",52,0)
 I $G(^ECX(727,ECXN,"Q"))'="" Q 0
"RTN","ECXPHVE",53,0)
 Q 1
"RTN","ECXPHVE",54,0)
 ;
"RTN","ECXPHVE",55,0)
CHKSEQ() ;Check sequence to see if it can be edited - API added in 136
"RTN","ECXPHVE",56,0)
 N CANEDIT
"RTN","ECXPHVE",57,0)
 S CANEDIT=1
"RTN","ECXPHVE",58,0)
 I '$D(^ECX(FILE,X,0)) S CANEDIT=0
"RTN","ECXPHVE",59,0)
 I +SSN I $P($G(^ECX(FILE,X,0)),U,6)'=SSN S CANEDIT=0
"RTN","ECXPHVE",60,0)
 I '$D(^ECX(FILE,"AC",EXT,X)) S CANEDIT=0 ;154 Added check to be sure sequence number is in selected extract
"RTN","ECXPHVE",61,0)
 Q CANEDIT
"RTN","ECXPHVE",62,0)
 ;
"RTN","ECXPHVE",63,0)
GETSEQ(FILE) ;Get sequence number to edit
"RTN","ECXPHVE",64,0)
 N EXT,SEQ,DIR,SSN
"RTN","ECXPHVE",65,0)
 S SEQ=0
"RTN","ECXPHVE",66,0)
 S EXT=$$GETEXT(FILE) I '+EXT Q SEQ  ;Nothing selected
"RTN","ECXPHVE",67,0)
 S SSN=$$GETSSN I SSN=-1 Q SEQ
"RTN","ECXPHVE",68,0)
 S DIR(0)="NA^1:1000000000^K:'$$CHKSEQ^ECXPHVE X"
"RTN","ECXPHVE",69,0)
 S DIR("A")="Select "_$G(ECXX)_" EXTRACT SEQUENCE NUMBER: "
"RTN","ECXPHVE",70,0)
 S DIR("?")="^D HELP2^ECXPHVE"
"RTN","ECXPHVE",71,0)
 D ^DIR
"RTN","ECXPHVE",72,0)
 I Y>0 S SEQ=+Y
"RTN","ECXPHVE",73,0)
 Q SEQ
"RTN","ECXPHVE",74,0)
 ;
"RTN","ECXPHVE",75,0)
GETEXT(FILE) ;get extract number
"RTN","ECXPHVE",76,0)
 N DIR,RES
"RTN","ECXPHVE",77,0)
 S RES=0
"RTN","ECXPHVE",78,0)
 S DIR(0)="NA^1:10000000:0^K:'$D(^ECX(FILE,""AC"",X))!('$$CKREC^ECXPHVE(X)) X"
"RTN","ECXPHVE",79,0)
 S DIR("A")="Select "_$G(ECXX)_" EXTRACT NUMBER: "
"RTN","ECXPHVE",80,0)
 S DIR("?")="^D HELP^ECXPHVE"
"RTN","ECXPHVE",81,0)
 D ^DIR
"RTN","ECXPHVE",82,0)
 I +Y S RES=+Y
"RTN","ECXPHVE",83,0)
 Q RES
"RTN","ECXPHVE",84,0)
 ;
"RTN","ECXPHVE",85,0)
HELP ;
"RTN","ECXPHVE",86,0)
 N NUM
"RTN","ECXPHVE",87,0)
 W !,"Select from one of the following extract numbers:",!,"If no numbers appear then there are no extracts that can",!,"be edited.",!
"RTN","ECXPHVE",88,0)
 S NUM=0 F  S NUM=$O(^ECX(FILE,"AC",NUM)) Q:'+NUM  I $$CKREC(NUM) W !,NUM
"RTN","ECXPHVE",89,0)
 Q
"RTN","ECXPHVE",90,0)
 ;
"RTN","ECXPHVE",91,0)
GETSSN() ;
"RTN","ECXPHVE",92,0)
 N DIR,NUM,DUOUT,DTOUT
"RTN","ECXPHVE",93,0)
 S NUM=0
"RTN","ECXPHVE",94,0)
 S DIR(0)="FAO^9:10^K:X'?9N&(X'?9N1""P"") X"
"RTN","ECXPHVE",95,0)
 S DIR("A")="Enter patient's SSN, if known, or press ENTER to continue: "
"RTN","ECXPHVE",96,0)
 S DIR("?",1)="Enter patient's SSN, if known.  The SSN will be used to find sequence numbers"
"RTN","ECXPHVE",97,0)
 S DIR("?",2)="associated with this patient.  Enter 9 digits or 9 digits and P, no"
"RTN","ECXPHVE",98,0)
 S DIR("?")="hyphens or spaces.  Entry is optional."
"RTN","ECXPHVE",99,0)
 D ^DIR
"RTN","ECXPHVE",100,0)
 I $L(Y)=9!($L(Y)=10) S NUM=Y
"RTN","ECXPHVE",101,0)
 I $D(DUOUT)!($D(DTOUT)) S NUM=-1
"RTN","ECXPHVE",102,0)
 Q NUM
"RTN","ECXPHVE",103,0)
 ;
"RTN","ECXPHVE",104,0)
HELP2 ;Display list of sequence numbers to choose from
"RTN","ECXPHVE",105,0)
 N SEQNO,DIR,Y,CNT
"RTN","ECXPHVE",106,0)
 W !,"Select from one of the following sequence numbers:"
"RTN","ECXPHVE",107,0)
 S Y=1,CNT=0
"RTN","ECXPHVE",108,0)
 D HDR
"RTN","ECXPHVE",109,0)
 S SEQNO=0 F  S SEQNO=$O(^ECX(FILE,"AC",EXT,SEQNO)) Q:'+SEQNO!('+Y)  D
"RTN","ECXPHVE",110,0)
 .I SSN I $P($G(^ECX(FILE,SEQNO,0)),U,6)'=SSN Q  ;Check for SSN if user entered
"RTN","ECXPHVE",111,0)
 .;154 Added BCM fieldS
"RTN","ECXPHVE",112,0)
 .W !,SEQNO,?12,$P(^ECX(FILE,SEQNO,0),U,6),?24,$$ECXDATEX^ECXUTL($P(^(0),U,9)),?38,$S(FILE'=727.833:$P(^(0),U,$S(FILE=727.81:17,1:11)),1:$P(^(1),U,7))
"RTN","ECXPHVE",113,0)
 .W @$S(ECXX'="BCM":"?48",1:"?62"),$S(FILE=727.81:$P(^(0),U,23),FILE=727.819:$P(^(0),U,20),FILE=727.833:$P(^(1),U,8),1:"") S CNT=CNT+1
"RTN","ECXPHVE",114,0)
 .I CNT>18 S DIR(0)="E" D ^DIR S CNT=0 D HDR
"RTN","ECXPHVE",115,0)
 Q
"RTN","ECXPHVE",116,0)
 ;
"RTN","ECXPHVE",117,0)
HDR ;
"RTN","ECXPHVE",118,0)
 ;154 Added BCM fields 154
"RTN","ECXPHVE",119,0)
 W !,"SEQUENCE #",?12,"SSN",?24,$S(ECXX="PRE":"FILL DT",1:"DISPENSE DT"),?38,$S(ECXX'="BCM":"QUANTITY",1:"COMPONENT DOSE GIVEN")
"RTN","ECXPHVE",120,0)
 W @$S(ECXX'="BCM":"?48",1:"?62"),$S(ECXX="PRE":"UNIT OF ISSUE",ECXX="IVP":"TOTAL DOSES/DAY",ECXX="BCM":"COMPONENT UNITS",1:"")
"RTN","ECXPHVE",121,0)
 W !,$$REPEAT^XLFSTR("-",$S(ECXX="UDP":48,ECXX="BCM":78,1:64)) ;154
"RTN","ECXPHVE",122,0)
 Q
"RTN","ECXPRO")
0^16^B48529101^B47685466
"RTN","ECXPRO",1,0)
ECXPRO ;ALB/GTS - Prosthetics Extract for DSS ;4/14/15  16:29
"RTN","ECXPRO",2,0)
 ;;3.0;DSS EXTRACTS;**9,13,15,21,24,33,39,46,71,92,105,120,127,132,136,144,149,154**;Dec 22, 1997;Build 13
"RTN","ECXPRO",3,0)
BEG ;entry point from option
"RTN","ECXPRO",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPRO",5,0)
 D:+ECINST>0 ^ECXTRAC D ^ECXKILL
"RTN","ECXPRO",6,0)
 Q
"RTN","ECXPRO",7,0)
 ;
"RTN","ECXPRO",8,0)
START ;start package specific extract
"RTN","ECXPRO",9,0)
 ;
"RTN","ECXPRO",10,0)
 ; Input
"RTN","ECXPRO",11,0)
 ;  ECSD1   - FM formatted Beginning Date (Set by ECXTRAC)
"RTN","ECXPRO",12,0)
 ;  ECED    - FM formatted End Date (Set by ECXTRAC)
"RTN","ECXPRO",13,0)
 ;  ECSDN   - Externally formatted Start Date (Set by ECXTRAC)
"RTN","ECXPRO",14,0)
 ;  ECEDN   - Externally formatted End Date (Set by ECXTRAC)
"RTN","ECXPRO",15,0)
 ;  EC      - IEN from file #727 (Set by ECXTRAC)
"RTN","ECXPRO",16,0)
 ;  ECXYM   - Year and Month of extract (YYYYMM)
"RTN","ECXPRO",17,0)
 ;  ECXINST - IEN for division in file #4
"RTN","ECXPRO",18,0)
 ;  ECINST  - Station number of selected division
"RTN","ECXPRO",19,0)
 ;
"RTN","ECXPRO",20,0)
 N ECXLNE,ECXCT,ECXDACT,ECX0,ECXLB,ECXED1,ECINSTSV,ECXLNSTR,ECXP
"RTN","ECXPRO",21,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104
"RTN","ECXPRO",22,0)
 N DIC,DR,DA,DIQ,CPTCODE,ECXNPRFI
"RTN","ECXPRO",23,0)
 N ECXESC,ECXCLST,ECXECL ;144
"RTN","ECXPRO",24,0)
 D ECXBUL^ECXPRO2(.ECXLNE,ECSDN,ECEDN,EC)
"RTN","ECXPRO",25,0)
 S QFLG=0,ECXLNSTR=ECXLNE,ECXED1=ECED+.9999,ECXCT=ECSD1
"RTN","ECXPRO",26,0)
 F  S ECXCT=$O(^RMPR(660,"CT",ECXCT)) Q:(ECXCT>ECXED1)!('ECXCT)!(QFLG=1)  D
"RTN","ECXPRO",27,0)
 .S ECXDACT=0
"RTN","ECXPRO",28,0)
 .F  S ECXDACT=$O(^RMPR(660,"CT",ECXCT,ECXDACT)) Q:('ECXDACT)!(QFLG=1)  D
"RTN","ECXPRO",29,0)
 ..;* initialize variables
"RTN","ECXPRO",30,0)
 ..S (ECXDFN,ECXPNM,ECXSSN,ECXSEX,ECXSTAT,ECXDATE,ECXTYPE,ECXSRCE)=""
"RTN","ECXPRO",31,0)
 ..S (ECXHCPCS,ECXPHCPC,ECXRQST,ECXRCST,ECXFORM,ECXCTAMT,ECXLLC)=""
"RTN","ECXPRO",32,0)
 ..S (ECXLMC,ECXGRPR,ECXBILST,ECXQTY,ECXFELOC,ECXFEKEY,ECXA,ECXLH,ECXLC,ECXMC)=""
"RTN","ECXPRO",33,0)
 ..S (ECPTTM,ECPTPR,ECXAST,ECXRST,ECXEST,ECXELIG,ECXVET,ECXZIP,ECXVNS,ECXCLST)="" ;144
"RTN","ECXPRO",34,0)
 ..S (ECXDOB,ECXDSSD,ECXICD9,ECXICD10P,ECXAOL,ECXHNCI,ECXSHADI,ECXETH,ECXRC1,ECXMST)=""
"RTN","ECXPRO",35,0)
 ..F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXPRO",36,0)
 ..F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXPRO",37,0)
 ..Q:'$D(^RMPR(660,ECXDACT,0))
"RTN","ECXPRO",38,0)
 ..S ECX0=^RMPR(660,ECXDACT,0),ECXLB=$G(^RMPR(660,ECXDACT,"LB"))
"RTN","ECXPRO",39,0)
 ..K ECXP S DIC="^RMPR(660,",DR=".02;11;45",DA=ECXDACT,DIQ(0)="EI"
"RTN","ECXPRO",40,0)
 ..S DIQ="ECXP" D EN^DIQ1
"RTN","ECXPRO",41,0)
 ..S ECXDIV=$$GET1^DIQ(660,ECXDACT,8,"I")
"RTN","ECXPRO",42,0)
 ..S ECXDFN=$G(ECXP(660,ECXDACT,.02,"I"))
"RTN","ECXPRO",43,0)
 ..S ECXFORM=$G(ECXP(660,ECXDACT,11,"E"))_U_$G(ECXP(660,ECXDACT,11,"I"))
"RTN","ECXPRO",44,0)
 ..S ECXLH=$G(ECXP(660,ECXDACT,45,"I"))
"RTN","ECXPRO",45,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXCT)
"RTN","ECXPRO",46,0)
 ..S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT)
"RTN","ECXPRO",47,0)
 ..I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXPRO",48,0)
 ..;OEF/OIF data
"RTN","ECXPRO",49,0)
 ..S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXPRO",50,0)
 ..S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXPRO",51,0)
 ..S ECXVNS=ECXPAT("VIETNAM") ; 144 VIETNAM STATUS
"RTN","ECXPRO",52,0)
 ..S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXPRO",53,0)
 ..S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXPRO",54,0)
 ..S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXPRO",55,0)
 ..Q:'$$NTEG^ECXPRO1(ECXDFN,.ECXLNE,ECXDACT,ECX0,ECXLB,ECINST,ECXFORM)
"RTN","ECXPRO",56,0)
 ..D PROSINFO^ECXPRO1(ECXDACT,ECXLB,ECX0,ECXFORM)
"RTN","ECXPRO",57,0)
 ..S CPTCODE=$E(ECXHCPCS,1,5)
"RTN","ECXPRO",58,0)
 ..;nppd entry date
"RTN","ECXPRO",59,0)
 ..S ECXNPPDT=$$ECXDATE^ECXUTL($P(ECX0,U,1),ECXYM)
"RTN","ECXPRO",60,0)
 ..;
"RTN","ECXPRO",61,0)
 ..;Get production division ;p-46
"RTN","ECXPRO",62,0)
 ..N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXPRO",63,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXPRO",64,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXPRO",65,0)
 ..;
"RTN","ECXPRO",66,0)
 ..;- CNH status (YES/NO)
"RTN","ECXPRO",67,0)
 ..S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXPRO",68,0)
 ..;
"RTN","ECXPRO",69,0)
 ..;get encounter classifications
"RTN","ECXPRO",70,0)
 ..S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR,ECXSHAD,ECXESC,ECXECL)="" ;144
"RTN","ECXPRO",71,0)
 ..S ECXVISIT=$$GET1^DIQ(660,ECXDACT,8.12,"I") I ECXVISIT'="" D
"RTN","ECXPRO",72,0)
 ...D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXPRO",73,0)
 ...S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXPRO",74,0)
 ...S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXPRO",75,0)
 ...S ECXESC=ECXVIST("ENCSC"),ECXECL=ECXVIST("ENCCL") ;144
"RTN","ECXPRO",76,0)
 ..; - Head and Neck Cancer Indicator
"RTN","ECXPRO",77,0)
 ..S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXPRO",78,0)
 ..;
"RTN","ECXPRO",79,0)
 ..; - Proj 112/SHAD Indicator
"RTN","ECXPRO",80,0)
 ..S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXPRO",81,0)
 ..;
"RTN","ECXPRO",82,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE  ********
"RTN","ECXPRO",83,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXPRO",84,0)
 ..; - set national patient record flag if exist
"RTN","ECXPRO",85,0)
 ..D NPRF^ECXUTL5
"RTN","ECXPRO",86,0)
 ..;
"RTN","ECXPRO",87,0)
 ..;- If no encounter number don't file record
"RTN","ECXPRO",88,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXPRO",89,0)
 ..I ECXFORM["-3" F ECXLAB="LAB","ORD" D
"RTN","ECXPRO",90,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXPRO",91,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",92,0)
 ..I ECXFORM'["-3" S ECXLAB="NONL" D
"RTN","ECXPRO",93,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXPRO",94,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",95,0)
 ;* Send the Exception message
"RTN","ECXPRO",96,0)
 I ECXLNSTR<ECXLNE DO
"RTN","ECXPRO",97,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXPRO",98,0)
 .S XMDUZ=.5
"RTN","ECXPRO",99,0)
 .S XMSUB=ECINST_" - Prosthetics DSS Exception Message",XMN=0
"RTN","ECXPRO",100,0)
 .S XMTEXT="^TMP(""ECX-PRO EXC"",$J,"
"RTN","ECXPRO",101,0)
 .D ^XMD
"RTN","ECXPRO",102,0)
 K ^TMP("ECX-PRO EXC",$J),XMDUZ,XMSUB,XMTEXT,XMY,XMN
"RTN","ECXPRO",103,0)
 Q
"RTN","ECXPRO",104,0)
 ;
"RTN","ECXPRO",105,0)
FILE ;file extract record
"RTN","ECXPRO",106,0)
 ;node0
"RTN","ECXPRO",107,0)
 ;facility^dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^in/out (ECXA)^
"RTN","ECXPRO",108,0)
 ;day^feeder location^
"RTN","ECXPRO",109,0)
 ;feeder key^qty^pc team^pc provider^hcpcs^icd9 (ECXICD9)^
"RTN","ECXPRO",110,0)
 ;icd9-1 (ECXICD91)^icd9-2 (ECXICD92)^icd9-3 (ECXICD93)^
"RTN","ECXPRO",111,0)
 ;icd9-4 (ECXICD94)^agent orange^radiation^env contam^eligibility^
"RTN","ECXPRO",112,0)
 ;cost^lab labor cost^lab matl cost^billing status^
"RTN","ECXPRO",113,0)
 ;vet^transaction type^req station^rec station^file#661.1 ien
"RTN","ECXPRO",114,0)
 ;node1
"RTN","ECXPRO",115,0)
 ;zip^dob^sex^amis grouper^placeholder^mpi^dss dept ECXDSSD^
"RTN","ECXPRO",116,0)
 ;pc prov person class^race^pow status^pow loc^
"RTN","ECXPRO",117,0)
 ;sharing agree payor^sharing agree ins^mst status^
"RTN","ECXPRO",118,0)
 ;enroll loc^state^county^assoc pc provider^
"RTN","ECXPRO",119,0)
 ;assoc pc prov person class^placeholder
"RTN","ECXPRO",120,0)
 ;dom (ECXDOM)^purple heart indicator (ECXPHI)^
"RTN","ECXPRO",121,0)
 ;enrollment Category (ECXCAT)^enrollment status (ECXSTAT)^
"RTN","ECXPRO",122,0)
 ;enrollment priority (ECXPRIOR)^purple heart ind (ECXPHI)^
"RTN","ECXPRO",123,0)
 ;period of serv (ECXPOS)^observ pat ind (ECXOBS)^encounter num (ECXENC)^
"RTN","ECXPRO",124,0)
 ;ao loc (ECXAOL)^CNH status (ECXCNH)^production division ECXPDIV^
"RTN","ECXPRO",125,0)
 ;head & neck canc. ind. (ECXHNCI)^ethnicity (ECXETH)^race1 (ECXRC1)^
"RTN","ECXPRO",126,0)
 ;^enrollment priority (ECXPRIOR)_enrollment sub-
"RTN","ECXPRO",127,0)
 ;group (ECXSBGRP)^user enrollee (ECXUESTA)^patient type ECXPTYPE
"RTN","ECXPRO",128,0)
 ;^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv
"RTN","ECXPRO",129,0)
 ;eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXPRO",130,0)
 ;emergency response indicator(FEMA) ECXERI^agent orange indicator ECXAO
"RTN","ECXPRO",131,0)
 ;^environ contam ECXECE^head/neck cancer ECXHNC^encntr mst ECXMIL^
"RTN","ECXPRO",132,0)
 ;radiation ECXIR
"RTN","ECXPRO",133,0)
 ;NODE2
"RTN","ECXPRO",134,0)
 ;OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^
"RTN","ECXPRO",135,0)
 ;nppd code ECXNPPDC^nppd entry date ECXNPPDT
"RTN","ECXPRO",136,0)
 ;assoc pc provider npi ECASNPI^primary care provider npi ECPTNPI^
"RTN","ECXPRO",137,0)
 ;country ECXCNTRY^shad indicator ECXSHADI^shad encounter ECXSHAD^
"RTN","ECXPRO",138,0)
 ;labor hours ECXLH^
"RTN","ECXPRO",139,0)
 ;PATCAT^EXCPATCAT^
"RTN","ECXPRO",140,0)
 ;primary ICD-10 code (currently null)ECXICD10P^Secondary ICD-10 Code #1 (currently null)ECXICD101^
"RTN","ECXPRO",141,0)
 ;Secondary ICD-10 Code #2 (currently null)ECXICD102^Secondary ICD-10 Code #3 (currently null)ECXICD103^
"RTN","ECXPRO",142,0)
 ;Secondary ICD-10 Code #4 (currently null)ECXICD104^Encounter SC ECXEXC^Vietnam Status ECXVNS^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL^
"RTN","ECXPRO",143,0)
 ;Combat Service Indicator (ECXSVCI)^Combat Service Location (ECXSVCL)^
"RTN","ECXPRO",144,0)
 ;Form Requested On (ECXFORM)
"RTN","ECXPRO",145,0)
 N DA,DIK
"RTN","ECXPRO",146,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPRO",147,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXPRO",148,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXFELOC_U
"RTN","ECXPRO",149,0)
 S ECODE=ECODE_ECXFEKEY_U_ECXQTY_U_ECPTTM_U_ECPTPR_U_ECXHCPCS_U
"RTN","ECXPRO",150,0)
 S ECODE=ECODE_ECXICD9_U_ECXICD91_U_ECXICD92_U_ECXICD93_U_ECXICD94_U
"RTN","ECXPRO",151,0)
 S ECODE=ECODE_ECXAST_U_ECXRST_U_ECXEST_U_ECXELIG_U_ECXCTAMT_U_ECXLLC_U
"RTN","ECXPRO",152,0)
 S ECODE=ECODE_ECXLMC_U_ECXBILST_U_ECXVET_U_ECXTYPE_U_ECXRQST_U_ECXRCST_U
"RTN","ECXPRO",153,0)
 S ECODE=ECODE_ECXPHCPC_U
"RTN","ECXPRO",154,0)
 S ECODE1=ECXZIP_U_ECXDOB_U_ECXSEX_U_ECXGRPR_U_U_ECXMPI_U
"RTN","ECXPRO",155,0)
 S ECODE1=ECODE1_ECXDSSD_U_ECCLAS_U_ECXRACE_U_ECXPST_U_ECXPLOC_U
"RTN","ECXPRO",156,0)
 S ECODE1=ECODE1_U_U_ECXMST_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXPRO",157,0)
 S ECODE1=ECODE1_ECXCNTY_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U
"RTN","ECXPRO",158,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXPOS_U
"RTN","ECXPRO",159,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXPRO",160,0)
 S ECODE1=ECODE1_ECXHNCI_U_ECXETH_U_ECXRC1_U
"RTN","ECXPRO",161,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPRO",162,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXPRO",163,0)
 I ECXLOGIC>2007 S ECODE2=ECXOEF_U_ECXOEFDT_U_ECXNPPDC_U_ECXNPPDT_U_ECASNPI_U_ECPTNPI
"RTN","ECXPRO",164,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXPRO",165,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXSHADI_U_ECXSHAD_U_ECXLH_U_ECXPATCAT
"RTN","ECXPRO",166,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U_ECXICD104
"RTN","ECXPRO",167,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXVNS_U_ECXCLST_U_ECXECL ;144
"RTN","ECXPRO",168,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXPRO",169,0)
 I ECXLOGIC>2015 S ECODE2=ECODE2_U_$P(ECXFORM,U,2) ;154
"RTN","ECXPRO",170,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXPRO",171,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXPRO",172,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPRO",173,0)
 Q
"RTN","ECXPRO",174,0)
 ;
"RTN","ECXPRO",175,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPRO",176,0)
 S ECHEAD="PRO"
"RTN","ECXPRO",177,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPRO",178,0)
 S ECINST=$$PDIV^ECXPUTL
"RTN","ECXPRO",179,0)
 Q
"RTN","ECXPRO",180,0)
 ;
"RTN","ECXPRO",181,0)
 ;**Note: LOCAL and QUE are carry over from protocols set by other
"RTN","ECXPRO",182,0)
 ;        routines.
"RTN","ECXPRO",183,0)
LOCAL ;to extract nightly for local use not to be transmitted to TSI
"RTN","ECXPRO",184,0)
 ;QUEUE with 1D frequency
"RTN","ECXPRO",185,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXPRO",186,0)
 ;
"RTN","ECXPRO",187,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPRO",188,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPRO1")
0^17^B20310309^B20868424
"RTN","ECXPRO1",1,0)
ECXPRO1 ;ALB/GTS - Prosthetics Extract for DSS (Continued) ;3/27/15  09:57
"RTN","ECXPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**9,11,13,15,21,24,33,37,39,100,105,112,132,154**;Dec 22, 1997;Build 13
"RTN","ECXPRO1",3,0)
 ;
"RTN","ECXPRO1",4,0)
NTEG(ECXDFN,ECXLNE,ECXPIEN,ECXN0,ECXNLB,ECINST,ECXFORM) ;** Check for required fields
"RTN","ECXPRO1",5,0)
 ;   Input
"RTN","ECXPRO1",6,0)
 ;    ECXDFN   - ien in file #2
"RTN","ECXPRO1",7,0)
 ;    ECXLNE   - line number variable (passed by reference)
"RTN","ECXPRO1",8,0)
 ;    ECXPIEN  - IEN for the Prosthetics record
"RTN","ECXPRO1",9,0)
 ;    ECXN0    - zero node of the Prosthetics record
"RTN","ECXPRO1",10,0)
 ;    ECXNLB   - LB node of the Prosthetics record
"RTN","ECXPRO1",11,0)
 ;    ECINST   - station number being extracted
"RTN","ECXPRO1",12,0)
 ;    ECXFORM  - Form Requested On
"RTN","ECXPRO1",13,0)
 ;   Output (to be KILLed by calling routine)
"RTN","ECXPRO1",14,0)
 ;    ^TMP("ECX-PRO EXC",$J) - Array for the exception message       
"RTN","ECXPRO1",15,0)
 ;    ECXLNE                 - The number of the next line in the msg
"RTN","ECXPRO1",16,0)
 ;    ECXSTAT2               - Patient Station Number
"RTN","ECXPRO1",17,0)
 ;    ECXDATE                - Delivery Date of Prosthesis
"RTN","ECXPRO1",18,0)
 ;    ECXTYPE                - Type of Transaction work performed
"RTN","ECXPRO1",19,0)
 ;    ECXSRCE                - Source of prosthesis
"RTN","ECXPRO1",20,0)
 ;    ECXHCPCS               - CPT/HCPCS code for prosthesis
"RTN","ECXPRO1",21,0)
 ;    ECXRQST                - Requesting Station
"RTN","ECXPRO1",22,0)
 ;    ECXRCST                - Receiving Station
"RTN","ECXPRO1",23,0)
 ;    ECXPHCPC               - PSAS HCPCS code; if 'unknown', then use CPT/HCPCS code 
"RTN","ECXPRO1",24,0)
 ;    ECXNPPDC               - NPPD code for repairs or new issues
"RTN","ECXPRO1",25,0)
 ;   Output (KILLed by NTEG)
"RTN","ECXPRO1",26,0)
 ;    ECXMISS                - 1 indicates missing information
"RTN","ECXPRO1",27,0)
 ;    ECXGOOD                - 0 indicates record should not be extracted
"RTN","ECXPRO1",28,0)
 ;
"RTN","ECXPRO1",29,0)
 N ECXGOOD,ECXMISS
"RTN","ECXPRO1",30,0)
 S (ECXRCST,ECXRQST,ECXNPPDC)="",ECXGOOD=1,ECXSTAT2=$P(ECXN0,U,10)
"RTN","ECXPRO1",31,0)
 I ECXSTAT2]"" D
"RTN","ECXPRO1",32,0)
 .K ECXDIC
"RTN","ECXPRO1",33,0)
 .S DA=ECXSTAT2,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPRO1",34,0)
 .D EN^DIQ1 S ECXSTAT2=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPRO1",35,0)
 .S:(ECINST'=$E(ECXSTAT2,1,3)) ECXGOOD=0 ;*Screen for incorrect Station
"RTN","ECXPRO1",36,0)
 ;
"RTN","ECXPRO1",37,0)
 ;** Screen out records
"RTN","ECXPRO1",38,0)
 S:($P(ECXN0,U,17)'="") ECXGOOD=0 ;*SHIP/DEL is not NULL
"RTN","ECXPRO1",39,0)
 S:($P(ECXN0,U,26)'="") ECXGOOD=0 ;*PICKUP/DEL is not NULL
"RTN","ECXPRO1",40,0)
 S:(+($P($G(^RMPR(660,ECXPIEN,"AM")),U,2))=1) ECXGOOD=0 ;*NO ADMIN CT=1
"RTN","ECXPRO1",41,0)
 S:(($P(ECXN0,U,15))'="") ECXGOOD=0 ;*HISTORICAL DATA is not NULL
"RTN","ECXPRO1",42,0)
 ;
"RTN","ECXPRO1",43,0)
 S ECXDATE=$P(ECXN0,U,12),ECXTYPE=$P(ECXN0,U,4),ECXSRCE=$P(ECXN0,U,14)
"RTN","ECXPRO1",44,0)
 S ECXHCPCS=$P($G(^ICPT(+$P(ECXN0,U,22),0)),U,1),ECXCMOD=""
"RTN","ECXPRO1",45,0)
 S ECXHCPCS=$$CPT^ECXUTL3(ECXHCPCS,ECXCMOD)
"RTN","ECXPRO1",46,0)
 ;get psas hcpcs code from file #661.1
"RTN","ECXPRO1",47,0)
 S ECXPHCPC=$P($G(^RMPR(660,ECXPIEN,1)),U,4) D
"RTN","ECXPRO1",48,0)
 .;get nppd code for repairs and new issues 10 characters in length.
"RTN","ECXPRO1",49,0)
 .I "X5"[ECXTYPE S ECXNPPDC=$TR($$GET1^DIQ(661.1,ECXPHCPC_",",5)," ","_")
"RTN","ECXPRO1",50,0)
 .I "ISR"[ECXTYPE S ECXNPPDC=$TR($$GET1^DIQ(661.1,ECXPHCPC_",",6)," ","_")
"RTN","ECXPRO1",51,0)
 .I +ECXPHCPC S ECXPHCPC=$E($P($G(^RMPR(661.1,ECXPHCPC,0)),U,1),1,5)
"RTN","ECXPRO1",52,0)
 .I ECXPHCPC="UNKNOWN" S ECXPHCPC=$E(ECXHCPCS,1,5)
"RTN","ECXPRO1",53,0)
 ;
"RTN","ECXPRO1",54,0)
 ;* Get Requesting Station Number
"RTN","ECXPRO1",55,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",56,0)
 .S ECXRQST=$P(ECXNLB,U,1)
"RTN","ECXPRO1",57,0)
 .I ECXRQST]"" D
"RTN","ECXPRO1",58,0)
 ..S DA=ECXRQST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPRO1",59,0)
 ..D EN^DIQ1 S ECXRQST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPRO1",60,0)
 S:(ECXFORM'["-3") ECXRQST=""
"RTN","ECXPRO1",61,0)
 ;
"RTN","ECXPRO1",62,0)
 ;* Screen out records
"RTN","ECXPRO1",63,0)
 S:(+$P(ECXFORM,U,2)=13) ECXGOOD=0 ;*FORM REQUESTED ON = 13
"RTN","ECXPRO1",64,0)
 ;
"RTN","ECXPRO1",65,0)
 ;* Get Receiving Station Number
"RTN","ECXPRO1",66,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",67,0)
 .S ECXRCST=$P(ECXNLB,U,4)
"RTN","ECXPRO1",68,0)
 .I ECXRCST]"" D
"RTN","ECXPRO1",69,0)
 ..S DA=ECXRCST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPRO1",70,0)
 ..D EN^DIQ1 S ECXRCST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPRO1",71,0)
 S:(ECXFORM'["-3") ECXRCST=""
"RTN","ECXPRO1",72,0)
 ;
"RTN","ECXPRO1",73,0)
 ;** Check for integrity and set up the problem variable if right DIV
"RTN","ECXPRO1",74,0)
 I ECXGOOD D CHK
"RTN","ECXPRO1",75,0)
 Q ECXGOOD
"RTN","ECXPRO1",76,0)
 ;
"RTN","ECXPRO1",77,0)
CHK ;*Check variables
"RTN","ECXPRO1",78,0)
 ; Input
"RTN","ECXPRO1",79,0)
 ;  Variables set in and Output from NTEG^ECXPRO1
"RTN","ECXPRO1",80,0)
 ; Output
"RTN","ECXPRO1",81,0)
 ;  ^TMP("ECX-PRO EXC",$J,   - Global of records with integrity problems
"RTN","ECXPRO1",82,0)
 ;
"RTN","ECXPRO1",83,0)
 S ECXMISS=""
"RTN","ECXPRO1",84,0)
 I ECXSTAT2']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",85,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",86,0)
 I ECXDFN=0 S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",87,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",88,0)
 ;I ECXSSN']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",89,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",90,0)
 ;I ECXNA="    " S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",91,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",92,0)
 I ECXDATE']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",93,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",94,0)
 I ECXTYPE']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",95,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",96,0)
 I ECXSRCE']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",97,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",98,0)
 I ECXHCPCS']"" S ECXGOOD=0 ;S ECXMISS=ECXMISS_"1" ;*HCPCS code check disabled
"RTN","ECXPRO1",99,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",100,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",101,0)
 .I ECXRQST']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",102,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",103,0)
 I ECXFORM']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",104,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",105,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",106,0)
 .I ECXRCST']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",107,0)
 I ECXMISS'="^^^^^^^^^^" D
"RTN","ECXPRO1",108,0)
 .S ECXGOOD=0
"RTN","ECXPRO1",109,0)
 .D ECXMISLN^ECXPRO2(ECXMISS,.ECXLNE,ECXPIEN)
"RTN","ECXPRO1",110,0)
 Q
"RTN","ECXPRO1",111,0)
 ;
"RTN","ECXPRO1",112,0)
PROSINFO(ECXDA,ECXLB,ECX0,ECXFORM) ;*Get Prosthetics Information
"RTN","ECXPRO1",113,0)
 ;
"RTN","ECXPRO1",114,0)
 ;  Input
"RTN","ECXPRO1",115,0)
 ;    ECDA    - The IEN for the Prosthetics record
"RTN","ECXPRO1",116,0)
 ;    ECX0    - The zero node of the Prosthetics record
"RTN","ECXPRO1",117,0)
 ;    ECXLB   - The LB node of the Prosthetics record
"RTN","ECXPRO1",118,0)
 ;    ECXFORM - The Form Requested On (to determine Lab transactions)
"RTN","ECXPRO1",119,0)
 ;
"RTN","ECXPRO1",120,0)
 ;  Output (to be KILLed by calling routine)
"RTN","ECXPRO1",121,0)
 ;    ECXCTAMT   - The Cost of Transaction
"RTN","ECXPRO1",122,0)
 ;    ECXLLC     - The Lab Labor Cost
"RTN","ECXPRO1",123,0)
 ;    ECXLMC     - The Lab Material Cost
"RTN","ECXPRO1",124,0)
 ;    ECXGRPR    - The AMIS Grouper number
"RTN","ECXPRO1",125,0)
 ;    ECXBILST   - The Billing Status
"RTN","ECXPRO1",126,0)
 ;    ECXQTY     - The Quantity
"RTN","ECXPRO1",127,0)
 ;
"RTN","ECXPRO1",128,0)
 S (ECXLLC,ECXLMC,ECXCTAMT)="",ECXBILST=$P($G(^RMPR(660,ECXDA,"AM")),U,3)
"RTN","ECXPRO1",129,0)
 S ECXQTY=$P(ECX0,U,7)
"RTN","ECXPRO1",130,0)
 S:(+ECXQTY=0) ECXQTY=1
"RTN","ECXPRO1",131,0)
 ;
"RTN","ECXPRO1",132,0)
 ;- Set Quantity field to 8 chars (right-justified & padded w/zeros)
"RTN","ECXPRO1",133,0)
 S ECXQTY=$$RJ^XLFSTR(ECXQTY,8,0)
"RTN","ECXPRO1",134,0)
 S ECXGRPR=$P($G(^RMPR(660,ECXDA,"AMS")),U,1),ECXCTAMT=$P(ECX0,U,16)
"RTN","ECXPRO1",135,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",136,0)
 .S ECXCTAMT=$P(ECXLB,U,9),ECXLLC=$P(ECXLB,U,7),ECXLMC=$P(ECXLB,U,8)
"RTN","ECXPRO1",137,0)
 ;
"RTN","ECXPRO1",138,0)
 ;- If Stock Issue or Inventory Issue, Cost of Transaction=0
"RTN","ECXPRO1",139,0)
 ;I $P(ECXFORM,U,2)=11!($P(ECXFORM,U,2)=12) S ECXCTAMT=0 ;154 Commented out line to allow costs to come through for inventory or stock issue
"RTN","ECXPRO1",140,0)
 S:ECXCTAMT="" ECXCTAMT=0 S:ECXCTAMT>999999 ECXCTAMT=999999
"RTN","ECXPRO1",141,0)
 S:ECXLLC="" ECXLLC=0 S:ECXLLC>999999 ECXLLC=999999
"RTN","ECXPRO1",142,0)
 S:ECXLMC="" ECXLMC=0 S:ECXLMC>999999 ECXLMC=999999
"RTN","ECXPRO1",143,0)
 ;
"RTN","ECXPRO1",144,0)
 ;- Round to next dollar amount
"RTN","ECXPRO1",145,0)
 I (ECXCTAMT#1)>.50 S ECXCTAMT=(ECXCTAMT+1)\1
"RTN","ECXPRO1",146,0)
 I (ECXLLC#1)>.50 S ECXLLC=(ECXLLC+1)\1
"RTN","ECXPRO1",147,0)
 I (ECXLMC#1)>.50 S ECXLMC=(ECXLMC+1)\1
"RTN","ECXPRO1",148,0)
 Q
"RTN","ECXPRO2")
0^18^B14894548^B12154079
"RTN","ECXPRO2",1,0)
ECXPRO2 ;ALB/GTS - Prosthetics Extract for DSS (Continued) ;3/26/15  16:38
"RTN","ECXPRO2",2,0)
 ;;3.0;DSS EXTRACTS;**9,15,21,24,33,127,132,154**;Dec 22, 1997;Build 13
"RTN","ECXPRO2",3,0)
 ;
"RTN","ECXPRO2",4,0)
ECXBUL(ECXLNE,ECXEBDT,ECXEEDT,ECNUM) ;* Set up the header for the exception msg
"RTN","ECXPRO2",5,0)
 ;
"RTN","ECXPRO2",6,0)
 ;   Input
"RTN","ECXPRO2",7,0)
 ;    ECXLNE  - The line number variable (passed by reference)
"RTN","ECXPRO2",8,0)
 ;    ECXEBDT - The Externally formatted beginning date
"RTN","ECXPRO2",9,0)
 ;    ECXEEDT - The Externally formatted ending date
"RTN","ECXPRO2",10,0)
 ;    ECNUM   - The Extract reference number
"RTN","ECXPRO2",11,0)
 ;
"RTN","ECXPRO2",12,0)
 ;   Output
"RTN","ECXPRO2",13,0)
 ;    ^TMP("ECX-PRO EXC",$J) - Array for the exception message
"RTN","ECXPRO2",14,0)
 ;    ECXLNE                 - The number of the next line in the msg
"RTN","ECXPRO2",15,0)
 ;
"RTN","ECXPRO2",16,0)
 S ^TMP("ECX-PRO EXC",$J,1)=" "
"RTN","ECXPRO2",17,0)
 S ^TMP("ECX-PRO EXC",$J,2)="The DSS-Prosthetic Extract #"_ECNUM_" for "_ECXEBDT_" through "_ECXEEDT
"RTN","ECXPRO2",18,0)
 S ^TMP("ECX-PRO EXC",$J,3)="has completed.  The following is a list of Prosthetics records that were NOT"
"RTN","ECXPRO2",19,0)
 S ^TMP("ECX-PRO EXC",$J,4)="extracted due to missing information in the Record of Pros Appliance/Repair"
"RTN","ECXPRO2",20,0)
 S ^TMP("ECX-PRO EXC",$J,5)="file (#660).  The Prosthetics record may be reviewed and the missing"
"RTN","ECXPRO2",21,0)
 S ^TMP("ECX-PRO EXC",$J,6)="information completed.  Once the missing information has been entered, it"
"RTN","ECXPRO2",22,0)
 S ^TMP("ECX-PRO EXC",$J,7)="will be necessary to re-generate the Prosthetics Extract for the above noted"
"RTN","ECXPRO2",23,0)
 S ^TMP("ECX-PRO EXC",$J,8)="date range."
"RTN","ECXPRO2",24,0)
 S ^TMP("ECX-PRO EXC",$J,9)=" "
"RTN","ECXPRO2",25,0)
 S ^TMP("ECX-PRO EXC",$J,10)="If you do not intend to transmit Prosthetics Extract #"_ECNUM_", then please"
"RTN","ECXPRO2",26,0)
 S ^TMP("ECX-PRO EXC",$J,11)="purge it before generating a new extract for the same date range."
"RTN","ECXPRO2",27,0)
 S ^TMP("ECX-PRO EXC",$J,12)=" "
"RTN","ECXPRO2",28,0)
 S ^TMP("ECX-PRO EXC",$J,13)=" "
"RTN","ECXPRO2",29,0)
 S ^TMP("ECX-PRO EXC",$J,14)=" PROSTHETICS FILE (#660)         MISSING DATA"
"RTN","ECXPRO2",30,0)
 S ^TMP("ECX-PRO EXC",$J,15)="       IEN                         ELEMENTS"
"RTN","ECXPRO2",31,0)
 S ^TMP("ECX-PRO EXC",$J,16)=" "
"RTN","ECXPRO2",32,0)
 S ECXLNE=15
"RTN","ECXPRO2",33,0)
 Q
"RTN","ECXPRO2",34,0)
 ;
"RTN","ECXPRO2",35,0)
ECXMISLN(ECXMISS,ECXLNE,ECXPIEN) ;** Report Missing Lines
"RTN","ECXPRO2",36,0)
 N ECXPCE,ECXFIRST,ECXFIELD
"RTN","ECXPRO2",37,0)
 S ECXFIRST=1
"RTN","ECXPRO2",38,0)
 F ECXPCE=1:1:11 DO
"RTN","ECXPRO2",39,0)
 .I +$P(ECXMISS,"^",ECXPCE) DO
"RTN","ECXPRO2",40,0)
 ..S ECXFIELD=$P($T(ECXFLD+ECXPCE),";;",2)
"RTN","ECXPRO2",41,0)
 ..I 'ECXFIRST S ^TMP("ECX-PRO EXC",$J,ECXLNE)="                                   "_ECXFIELD
"RTN","ECXPRO2",42,0)
 ..I ECXFIRST DO
"RTN","ECXPRO2",43,0)
 ...S ^TMP("ECX-PRO EXC",$J,ECXLNE)="       "_ECXPIEN_"                          "_ECXFIELD
"RTN","ECXPRO2",44,0)
 ...S ECXFIRST=0
"RTN","ECXPRO2",45,0)
 ..S ECXLNE=ECXLNE+1
"RTN","ECXPRO2",46,0)
 S ^TMP("ECX-PRO EXC",$J,ECXLNE)=" "
"RTN","ECXPRO2",47,0)
 S ECXLNE=ECXLNE+1
"RTN","ECXPRO2",48,0)
 Q
"RTN","ECXPRO2",49,0)
 ;
"RTN","ECXPRO2",50,0)
ECXFLD ;* Missing Required fields
"RTN","ECXPRO2",51,0)
 ;;STATION
"RTN","ECXPRO2",52,0)
 ;;PATIENT NAME (Invalid)
"RTN","ECXPRO2",53,0)
 ;;SSN
"RTN","ECXPRO2",54,0)
 ;;NAME (In Patient file - #2)
"RTN","ECXPRO2",55,0)
 ;;DELIVERY DATE
"RTN","ECXPRO2",56,0)
 ;;TYPE OF TRANSACTION
"RTN","ECXPRO2",57,0)
 ;;SOURCE
"RTN","ECXPRO2",58,0)
 ;;HCPCS
"RTN","ECXPRO2",59,0)
 ;;REQUESTING STATION
"RTN","ECXPRO2",60,0)
 ;;FORM REQUESTED ON
"RTN","ECXPRO2",61,0)
 ;;RECEIVING STATION
"RTN","ECXPRO2",62,0)
 Q
"RTN","ECXPRO2",63,0)
 ;
"RTN","ECXPRO2",64,0)
FEEDINFO(ECXSRCE,ECXHCPCS,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC) ;Get Feeder Key and Feeder Location
"RTN","ECXPRO2",65,0)
 ;   Input
"RTN","ECXPRO2",66,0)
 ;    ECXSTAT2   - Station Number for extract
"RTN","ECXPRO2",67,0)
 ;    ECXTYPE   - Type of Transaction work performed
"RTN","ECXPRO2",68,0)
 ;    ECXSRCE   - Source of prosthesis
"RTN","ECXPRO2",69,0)
 ;    ECXHCPCS  - HCPCS code for prosthesis
"RTN","ECXPRO2",70,0)
 ;    ECXRQST   - Requesting Station
"RTN","ECXPRO2",71,0)
 ;    ECXRCST   - Receiving Station
"RTN","ECXPRO2",72,0)
 ;    ECXLAB    - Lab or non-Lab
"RTN","ECXPRO2",73,0)
 ;    ECXNPPDC  - NPPD Code
"RTN","ECXPRO2",74,0)
 ;   Output (to be KILLed by calling routine)
"RTN","ECXPRO2",75,0)
 ;    ECXFELOC  - Feeder Location
"RTN","ECXPRO2",76,0)
 ;    ECXFEKEY  - Feeder Key
"RTN","ECXPRO2",77,0)
 ;
"RTN","ECXPRO2",78,0)
 ;* NOTE: If a Station # <> Requesting Station
"RTN","ECXPRO2",79,0)
 ;*         AND
"RTN","ECXPRO2",80,0)
 ;*       Station # <> Receiving Station,
"RTN","ECXPRO2",81,0)
 ;*       then Feeder Location will be NULL.  
"RTN","ECXPRO2",82,0)
 ;
"RTN","ECXPRO2",83,0)
 S ECXFELOC=""
"RTN","ECXPRO2",84,0)
 S ECXFEKEY=ECXHCPCS_$S(ECXTYPE="X":"X",ECXTYPE=5:"R",1:"N")_ECXSRCE
"RTN","ECXPRO2",85,0)
 ;
"RTN","ECXPRO2",86,0)
 ;* If processing a Non-Lab Transaction
"RTN","ECXPRO2",87,0)
 I ECXLAB="NONL" S ECXFELOC=ECXSTAT2_$S(ECXNPPDC[800:"HO2",1:"NONL")
"RTN","ECXPRO2",88,0)
 ;
"RTN","ECXPRO2",89,0)
 ;* If processing a Lab Transaction
"RTN","ECXPRO2",90,0)
 I ECXLAB="LAB" D  ;154 Removed Q so processing continues
"RTN","ECXPRO2",91,0)
 .I ECXSTAT2=ECXRCST D
"RTN","ECXPRO2",92,0)
 ..S ECXFELOC=ECXRCST_"LAB"
"RTN","ECXPRO2",93,0)
 ..S ECXFEKEY=ECXFEKEY_ECXRQST_"REQ"
"RTN","ECXPRO2",94,0)
 I ECXLAB="ORD" D  ;154 Removed Q so processing continues
"RTN","ECXPRO2",95,0)
 .I ECXSTAT2=ECXRQST D
"RTN","ECXPRO2",96,0)
 ..S ECXFELOC=ECXRQST_"ORD"
"RTN","ECXPRO2",97,0)
 ..S ECXFEKEY=ECXFEKEY_ECXRCST_"REC"
"RTN","ECXPRO2",98,0)
 S ECXFEKEY=ECXFEKEY_$S($P($G(ECXFORM),U,2)=11:"S",$P($G(ECXFORM),U,2)=12:"I",1:"") ;154 If form requested on is stock, add "S", if inventory add "I"
"RTN","ECXPRO2",99,0)
 ;
"RTN","ECXPRO2",100,0)
 Q
"RTN","ECXPROCT")
0^30^B31812713^B24695240
"RTN","ECXPROCT",1,0)
ECXPROCT ;ALB/GTS - ProstheticS Cost by PSAS HCPC Report DSS ;4/15/15  16:09
"RTN","ECXPROCT",2,0)
 ;;3.0;DSS EXTRACTS;**71,100,144,154**;Dec 22, 1997;Build 13
"RTN","ECXPROCT",3,0)
 ;
"RTN","ECXPROCT",4,0)
EN ;entry point from option
"RTN","ECXPROCT",5,0)
 ;Initialize varables
"RTN","ECXPROCT",6,0)
 N DIR,ECSD1,ECED,X,Y,ECXPORT,I ;144
"RTN","ECXPROCT",7,0)
 ;Prompt for start date
"RTN","ECXPROCT",8,0)
 S DIR(0)="D^::EX"
"RTN","ECXPROCT",9,0)
 S DIR("A")="Enter Report Start Date"
"RTN","ECXPROCT",10,0)
 D ^DIR
"RTN","ECXPROCT",11,0)
 I $D(DIRUT) Q
"RTN","ECXPROCT",12,0)
 S ECSD1=Y
"RTN","ECXPROCT",13,0)
 ;Prompt for end date
"RTN","ECXPROCT",14,0)
 K DIR,X,Y
"RTN","ECXPROCT",15,0)
 S DIR(0)="D^"_ECSD1_":"_DT_":EX"
"RTN","ECXPROCT",16,0)
 S DIR("A")="Enter Report Ending Date"
"RTN","ECXPROCT",17,0)
 D ^DIR
"RTN","ECXPROCT",18,0)
 I $D(DIRUT) Q
"RTN","ECXPROCT",19,0)
 S ECED=Y
"RTN","ECXPROCT",20,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXPROCT",21,0)
 .K ^TMP($J,"ECXPORT") ;144
"RTN","ECXPROCT",22,0)
 .S ^TMP($J,"ECXPORT",0)="PSAS HCPC^DESCRIPTION^FORM^FORM DESCRIPTION^QTY^UNIT OF ISSUE^COST" ;144,154
"RTN","ECXPROCT",23,0)
 .D EN1 ;144
"RTN","ECXPROCT",24,0)
 .M ^TMP($J,"ECXPORT")=^TMP("ECXDSS",$J) ;144 Move results to export display global
"RTN","ECXPROCT",25,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXPROCT",26,0)
 ;Queue Report
"RTN","ECXPROCT",27,0)
 W !!,"** REPORT REQUIRES 132 COLUMNS TO PRINT CORRECTLY **",!!
"RTN","ECXPROCT",28,0)
 N ZTDESC,ZTIO,ZTSAVE
"RTN","ECXPROCT",29,0)
 S ZTIO=""
"RTN","ECXPROCT",30,0)
 S ZTDESC="Prosthetic Cost by PSAS HCPC Report for DSS"
"RTN","ECXPROCT",31,0)
 F I="ECSD1","ECED","ECXPHCPC","ECXPHDESC","ECXHCPC","ECXQTY","ECXUOFI","ECXCOST","ECXTCOST" D
"RTN","ECXPROCT",32,0)
 .S ZTSAVE(I)=""
"RTN","ECXPROCT",33,0)
 D EN^XUTMDEVQ("EN1^ECXPROCT",ZTDESC,.ZTSAVE)
"RTN","ECXPROCT",34,0)
 Q
"RTN","ECXPROCT",35,0)
 ;
"RTN","ECXPROCT",36,0)
EN1 ;Tasked entry point
"RTN","ECXPROCT",37,0)
 ;Input : ECSD1  -  FM format report start date
"RTN","ECXPROCT",38,0)
 ;        ECED   -  FM format report end date
"RTN","ECXPROCT",39,0)
 ;
"RTN","ECXPROCT",40,0)
 ;Output : None
"RTN","ECXPROCT",41,0)
 ;
"RTN","ECXPROCT",42,0)
 ;Declare variables
"RTN","ECXPROCT",43,0)
 N ECXPHCPC,ECHCDES,ECXHCPC,ECXQTY,ECXUOFI,ECXCOST,ECXTCOST,PAGENUM ;144
"RTN","ECXPROCT",44,0)
 N ECXLNE,ECXCT,ECXDACT,ECX0,ECX1,ECXED1,ECINSTSV,ECXLNSTR,ECXP
"RTN","ECXPROCT",45,0)
 N DIC,DR,DA,DIQ,CNT,STOP,QFLG,ECXDIV,ECXDFN,ECXFORM ;144
"RTN","ECXPROCT",46,0)
 S ECXED1=ECED+.9999,ECXCT=ECSD1-.1,(CNT,QFLG,PAGENUM,ECXTCOST,ECXQTY,STOP)=0 ;154 Changed start date to begin before selected date so records on the date are found
"RTN","ECXPROCT",47,0)
 I '$G(ECXPORT) D HEADER I STOP D EXIT Q  ;144
"RTN","ECXPROCT",48,0)
 D GETDATA I $G(ECXPORT) Q  ;144 Have data, no need to print.
"RTN","ECXPROCT",49,0)
 I '$D(^TMP("ECXDSS",$J)) D  Q
"RTN","ECXPROCT",50,0)
 .W !
"RTN","ECXPROCT",51,0)
 .W !,"***********************************************"
"RTN","ECXPROCT",52,0)
 .W !,"*  NOTHING TO REPORT FOR SELECTED TIME FRAME  *"
"RTN","ECXPROCT",53,0)
 .W !,"***********************************************"
"RTN","ECXPROCT",54,0)
 .D WAIT
"RTN","ECXPROCT",55,0)
 D DETAIL I STOP D EXIT Q
"RTN","ECXPROCT",56,0)
 D TOTAL
"RTN","ECXPROCT",57,0)
 D FOOTER ;154
"RTN","ECXPROCT",58,0)
 K ^TMP("ECXDSS",$J)
"RTN","ECXPROCT",59,0)
 Q
"RTN","ECXPROCT",60,0)
 ;
"RTN","ECXPROCT",61,0)
GETDATA ;Get data
"RTN","ECXPROCT",62,0)
 F  S ECXCT=$O(^RMPR(660,"CT",ECXCT)),CNT=CNT+1 Q:(ECXCT>ECXED1)!('ECXCT)!(QFLG=1)  D
"RTN","ECXPROCT",63,0)
 .S ECXDACT=0
"RTN","ECXPROCT",64,0)
 .F  S ECXDACT=$O(^RMPR(660,"CT",ECXCT,ECXDACT)) Q:('ECXDACT)!(QFLG=1)  D
"RTN","ECXPROCT",65,0)
 ..;Get data nodes and icrement conunter
"RTN","ECXPROCT",66,0)
 ..S CNT=CNT+1
"RTN","ECXPROCT",67,0)
 ..S ECX0=$G(^RMPR(660,ECXDACT,0)),ECX1=$G(^(1))
"RTN","ECXPROCT",68,0)
 ..Q:'$D(^RMPR(660,ECXDACT,0))
"RTN","ECXPROCT",69,0)
 ..S ECXPHCPC=$P(ECX1,U,4),ECHCDES=$P(ECX1,U,2),ECXHCPC=$P(ECX0,U,22)
"RTN","ECXPROCT",70,0)
 ..S ECXQTY=$P(ECX0,U,7),ECXUOFI=$P(ECX0,U,8),ECXCOST=$P(ECX0,U,16)
"RTN","ECXPROCT",71,0)
 ..;Resolve external values for PSAS HCPC
"RTN","ECXPROCT",72,0)
 ..K DIC S DIC="^RMPR(661.1,",DIC(0)="NZ",X=ECXPHCPC D ^DIC
"RTN","ECXPROCT",73,0)
 ..;S ECXPHCPC=$P($G(Y(0)),U,1)
"RTN","ECXPROCT",74,0)
 ..S ECXPHCPC=$E($P($G(Y(0)),U,1),1,5)
"RTN","ECXPROCT",75,0)
 ..;Resolve external values for HCPC
"RTN","ECXPROCT",76,0)
 ..K DIC S DIC="^ICPT(",DIC(0)="NZ",X=ECXHCPC D ^DIC
"RTN","ECXPROCT",77,0)
 ..S ECXHCPC=$P($G(Y(0)),U,1)
"RTN","ECXPROCT",78,0)
 ..;Resolve external value for unit of issue
"RTN","ECXPROCT",79,0)
 ..K DIC S DIC="^PRCD(420.5,",DIC(0)="NZ",X=ECXUOFI D ^DIC
"RTN","ECXPROCT",80,0)
 ..S ECXUOFI=$P($G(Y(0)),U,2)
"RTN","ECXPROCT",81,0)
 ..S ECXTCOST=ECXCOST+ECXTCOST
"RTN","ECXPROCT",82,0)
 ..S ECXDIV=$$GET1^DIQ(660,ECXDACT,8,"I")
"RTN","ECXPROCT",83,0)
 ..D GETS^DIQ(660,ECXDACT_",",".02;11","IE","ECXP") ;154
"RTN","ECXPROCT",84,0)
 ..S ECXDFN=$G(ECXP(660,ECXDACT_",",.02,"I")) ;154
"RTN","ECXPROCT",85,0)
 ..S ECXFORM=$G(ECXP(660,ECXDACT_",",11,"E"))_U_$G(ECXP(660,ECXDACT_",",11,"I")) ;154
"RTN","ECXPROCT",86,0)
 ..;Save for later
"RTN","ECXPROCT",87,0)
 ..S ^TMP("ECXDSS",$J,CNT)=ECXPHCPC_U_ECHCDES_U_$P(ECXFORM,U,2)_$S($G(ECXPORT):(U_$P(ECXFORM,U)),1:"")_U_ECXQTY_U_ECXUOFI_U_ECXCOST ;154 Replaced HCPC with FORM data
"RTN","ECXPROCT",88,0)
 ..Q
"RTN","ECXPROCT",89,0)
 .Q
"RTN","ECXPROCT",90,0)
 Q
"RTN","ECXPROCT",91,0)
HEADER ;print header
"RTN","ECXPROCT",92,0)
 N LN ;144
"RTN","ECXPROCT",93,0)
 S PAGENUM=PAGENUM+1
"RTN","ECXPROCT",94,0)
 S $P(LN,"-",132)=""
"RTN","ECXPROCT",95,0)
 W @IOF
"RTN","ECXPROCT",96,0)
 W !,"Cost by PSAS HCPC REPORT for "_$P($$SITE^VASITE,U,2)_" station "_$P($$SITE^VASITE,U,3),?120,"Page: ",PAGENUM
"RTN","ECXPROCT",97,0)
 W !!,"Report for ",$$FMTE^XLFDT(ECSD1)," thru ",$$FMTE^XLFDT(ECED)
"RTN","ECXPROCT",98,0)
 W !,?1,"PSAS HCPC",?15,"DESCRIPTION",?89,"FORM",?98,"QTY",?104,"Unit of Issue",?126,"Cost" ;154 Replaced HCPC with FORM
"RTN","ECXPROCT",99,0)
 W !?1,LN
"RTN","ECXPROCT",100,0)
 Q
"RTN","ECXPROCT",101,0)
 ;
"RTN","ECXPROCT",102,0)
DETAIL ;Print detailed line
"RTN","ECXPROCT",103,0)
 ;Input  :  ^TMP("ECXDSS",$J) full global reference
"RTN","ECXPROCT",104,0)
 ;          ECXPHCPC  -   PSAS HCPCS
"RTN","ECXPROCT",105,0)
 ;          ECXPHDESC -   PSAS HCPC Description
"RTN","ECXPROCT",106,0)
 ;          ECXHCPC   -   HCPCS ;154 No longer on report
"RTN","ECXPROCT",107,0)
 ;          ECXQTY    -   Quantity
"RTN","ECXPROCT",108,0)
 ;          ECXUOFI   -   Unit of issue
"RTN","ECXPROCT",109,0)
 ;          ECXCOST   -   Total cost
"RTN","ECXPROCT",110,0)
 ;          ECXFORM   -   Form requested on
"RTN","ECXPROCT",111,0)
 ;Output  : None
"RTN","ECXPROCT",112,0)
 N RECORD,NODE ;144
"RTN","ECXPROCT",113,0)
 S RECORD=0 F  S RECORD=$O(^TMP("ECXDSS",$J,RECORD)) Q:'RECORD!(STOP)  D
"RTN","ECXPROCT",114,0)
 .S NODE=^TMP("ECXDSS",$J,RECORD)
"RTN","ECXPROCT",115,0)
 .W !?1,$$RJ^XLFSTR($P(NODE,U,1),6),?15,$P(NODE,U,2),?89,$P(NODE,U,3),?99,$$RJ^XLFSTR($P(NODE,U,4),U,6),?107,$P(NODE,U,5) ;154
"RTN","ECXPROCT",116,0)
 .W ?122,"$"_$$RJ^XLFSTR($P($P(NODE,U,6),".",1),6)_"."_$$LJ^XLFSTR($P($P(NODE,U,6),".",2),2,0)
"RTN","ECXPROCT",117,0)
 .I $Y>(IOSL-5) D WAIT Q:STOP  D HEADER
"RTN","ECXPROCT",118,0)
 .Q
"RTN","ECXPROCT",119,0)
 Q
"RTN","ECXPROCT",120,0)
 ;
"RTN","ECXPROCT",121,0)
TOTAL ;Report totals
"RTN","ECXPROCT",122,0)
 N DASH
"RTN","ECXPROCT",123,0)
 S $P(DASH,"=",15)=""
"RTN","ECXPROCT",124,0)
 W !!,?118,DASH
"RTN","ECXPROCT",125,0)
 W !?90,"Grand Total: ",?118,"$ "_$$RJ^XLFSTR($FNUMBER(ECXTCOST,",",2),11)
"RTN","ECXPROCT",126,0)
 Q
"RTN","ECXPROCT",127,0)
 ;
"RTN","ECXPROCT",128,0)
WAIT ;End of page logic
"RTN","ECXPROCT",129,0)
 ;Input   ; None
"RTN","ECXPROCT",130,0)
 ;Output  ; STOP - Flag inidcating if printing should continue
"RTN","ECXPROCT",131,0)
 ;                 1 = Stop     0 = Continue
"RTN","ECXPROCT",132,0)
 ;
"RTN","ECXPROCT",133,0)
 S STOP=0
"RTN","ECXPROCT",134,0)
 ;CRT - Prompt for continue
"RTN","ECXPROCT",135,0)
 I $E(IOST,1,2)="C-"&(IOSL'>24) D  Q
"RTN","ECXPROCT",136,0)
 .F  Q:$Y>(IOSL-3)  W !
"RTN","ECXPROCT",137,0)
 .N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ECXPROCT",138,0)
 .S DIR(0)="E"
"RTN","ECXPROCT",139,0)
 .D ^DIR
"RTN","ECXPROCT",140,0)
 .S STOP=$S(Y'=1:1,1:0)
"RTN","ECXPROCT",141,0)
 ;Background task - check taskman
"RTN","ECXPROCT",142,0)
 S STOP=$$S^%ZTLOAD()
"RTN","ECXPROCT",143,0)
 I STOP D
"RTN","ECXPROCT",144,0)
 .W !,"*********************************************"
"RTN","ECXPROCT",145,0)
 .W !,"*  PRINTING OF REPORT STOPPED AS REQUESTED  *"
"RTN","ECXPROCT",146,0)
 .W !,"*********************************************"
"RTN","ECXPROCT",147,0)
 Q
"RTN","ECXPROCT",148,0)
EXIT ;Kill temp global
"RTN","ECXPROCT",149,0)
 K ^TMP("ECXDSS",$J)
"RTN","ECXPROCT",150,0)
 Q
"RTN","ECXPROCT",151,0)
 ;
"RTN","ECXPROCT",152,0)
FOOTER ;154 Section added to print the form requested on key at the end of the report
"RTN","ECXPROCT",153,0)
 W !,"FORM:"
"RTN","ECXPROCT",154,0)
 W !,"1:PSC",?10,"2:2421",?18,"3:2237",?34,"4:2529-3",?54,"5:2529-7",?74,"6:2472",?83,"7:2431",?99,"8:2914"
"RTN","ECXPROCT",155,0)
 W !,"9:OTHER",?9,"10:2520",?17,"11:STOCK ISSUE",?33,"12:INVENTORY ISSUE",?53,"13:HISTORICAL DATA",?73,"14:VISA",?82,"15:LAB ISSUE-3",?98,"16:DALC"
"RTN","ECXPROCT",156,0)
 Q
"RTN","ECXQSR")
0^15^B71545700^B61223139
"RTN","ECXQSR",1,0)
ECXQSR ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ;4/15/15  13:18
"RTN","ECXQSR",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,26,24,34,33,35,39,43,46,49,64,71,84,92,106,105,120,124,127,132,136,144,154**;Dec 22, 1997;Build 13
"RTN","ECXQSR",3,0)
BEG ;entry point from option
"RTN","ECXQSR",4,0)
 I '$O(^ACK(509850.8,0)) W !,"You must be using the Quality Audiology & Speech Pathology",!,"Audit & Review (QUASAR) software to run this extract.",!! Q
"RTN","ECXQSR",5,0)
 I '$D(^ACK(509850.8,1,"DSS")) W !,"Linkage has not been established between QUASAR and the DSS UNIT file (#724).",!! Q
"RTN","ECXQSR",6,0)
 I '$O(^ACK(509850.6,0)) W !,"There is no data in the A&SP CLINIC VISIT file (#509850.6).",!! Q
"RTN","ECXQSR",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXQSR",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXQSR",9,0)
 Q
"RTN","ECXQSR",10,0)
START ;entry point from tasked job
"RTN","ECXQSR",11,0)
 N ERR,ECXQDT,ECXNPRFI
"RTN","ECXQSR",12,0)
 S QFLG=0,ECED=ECED+.9,ECD=ECSD1,ECXQV=""
"RTN","ECXQSR",13,0)
 D QINST I $D(ERR) Q
"RTN","ECXQSR",14,0)
 S ECL=+^ACK(509850.8,1,0),ECLINK=^ACK(509850.8,1,"DSS")
"RTN","ECXQSR",15,0)
 F  S ECD=$O(^ACK(509850.6,"B",ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)!(QFLG)  D
"RTN","ECXQSR",16,0)
 .I +ECXQV=3,ECD<ECXQDT S ECXQV=2.0
"RTN","ECXQSR",17,0)
 .F  S ECDA=$O(^ACK(509850.6,"B",ECD,ECDA)) Q:'ECDA  D UPDATE Q:QFLG
"RTN","ECXQSR",18,0)
 Q
"RTN","ECXQSR",19,0)
QINST ;Get installed information for QUASAR
"RTN","ECXQSR",20,0)
 N ARR,IENS,QVIEN,INTIEN
"RTN","ECXQSR",21,0)
 S ECXQDT=""
"RTN","ECXQSR",22,0)
 D FILE^DID(509850.6,,"VERSION","ARR","ERR")
"RTN","ECXQSR",23,0)
 S ECXQV=$G(ARR("VERSION")) I +ECXQV=0 S ERR=1 Q
"RTN","ECXQSR",24,0)
 S QVIEN=$$FIND1^DIC(9.4,"","X","QUASAR") I +QVIEN<1 S ERR=1 Q
"RTN","ECXQSR",25,0)
 S IENS=","_QVIEN_","
"RTN","ECXQSR",26,0)
 S INTIEN=$$FIND1^DIC(9.49,IENS,"X",ECXQV) I +INTIEN<1 S ERR=1 Q
"RTN","ECXQSR",27,0)
 S IENS=INTIEN_","_QVIEN,ECXQDT=$$GET1^DIQ(9.49,IENS,2,"I")
"RTN","ECXQSR",28,0)
 Q
"RTN","ECXQSR",29,0)
UPDATE ;create record for each unique CPT code for clinic visit 
"RTN","ECXQSR",30,0)
 N ARY,ECZNODE,CPT,LOC,MOD,STR,VOL,XX,ECTP,ECV,ECUPCE,ECDSSE ;154
"RTN","ECXQSR",31,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104,ECXVNS,ECX4CHAR,ECXESC,ECXECL,ECXCLST ;144
"RTN","ECXQSR",32,0)
 Q:'$D(^ACK(509850.6,ECDA,0))
"RTN","ECXQSR",33,0)
 S ECZNODE=^ACK(509850.6,ECDA,0),EC2NODE=$G(^ACK(509850.6,ECDA,2))
"RTN","ECXQSR",34,0)
 S ECDT=$P(ECZNODE,U),ECDAY=$$ECXDATE^ECXUTL(ECDT,ECXYM)
"RTN","ECXQSR",35,0)
 S ECTIME=$$ECXTIME^ECXUTL(ECDT) S:$P(ECDT,".",2)="" ECTIME="000000"
"RTN","ECXQSR",36,0)
 S ECXDFN=$P(ECZNODE,U,2)
"RTN","ECXQSR",37,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECD,"1;3;5")
"RTN","ECXQSR",38,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECDT,"1;5",.ECXPAT)
"RTN","ECXQSR",39,0)
 S ECXCLST="" ;144
"RTN","ECXQSR",40,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXQSR",41,0)
 ;OEF/OIF data
"RTN","ECXQSR",42,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXQSR",43,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXQSR",44,0)
 S ECXVNS=ECXPAT("VIETNAM") ;144 VIETNAM STATUS CVW
"RTN","ECXQSR",45,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXQSR",46,0)
 ;
"RTN","ECXQSR",47,0)
 S ECHL="",ECXDIV=$P($G(^ACK(509850.6,ECDA,5)),U),ECSTOP=$P(EC2NODE,U)
"RTN","ECXQSR",48,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get Production Division
"RTN","ECXQSR",49,0)
 Q:ECSTOP=""
"RTN","ECXQSR",50,0)
 ;154 Following 3 lines of code moved here to set variables earlier
"RTN","ECXQSR",51,0)
 S ECDU=$S(ECSTOP["A":$P(ECLINK,U),ECSTOP["S":$P(ECLINK,U,2),1:"")
"RTN","ECXQSR",52,0)
 Q:'ECDU
"RTN","ECXQSR",53,0)
 S ECDSSU=$G(^ECD(ECDU,0)),ECCS=+$P(ECDSSU,U,4),(ECO,ECM)=+$P(ECDSSU,U,3),ECXDSSD=$E($P(ECDSSU,U,5),1,10),ECUPCE=$P(ECDSSU,U,14)
"RTN","ECXQSR",54,0)
 S (ECHLS,ECHL2S)="000",ECAC=$P($G(ECZNODE),U,6)
"RTN","ECXQSR",55,0)
 I ECUPCE="A"!(ECUPCE="O"&(ECXA="O")) D  ;154
"RTN","ECXQSR",56,0)
 .I ECAC D  ;154
"RTN","ECXQSR",57,0)
 ..S ECHL=+$P($G(^SC(ECAC,0)),U,7),ECHL2=+$P($G(^(0)),U,18) I ECHL D  ;154
"RTN","ECXQSR",58,0)
 ...S ECHLS=$P($G(^DIC(40.7,+ECHL,0)),U,2),ECHL2S=$P($G(^DIC(40.7,+ECHL2,0)),U,2) ;154
"RTN","ECXQSR",59,0)
 ...S ECHLS=$$RJ^XLFSTR(ECHLS,3,0),ECHL2S=$$RJ^XLFSTR(ECHL2S,3,0) ;154
"RTN","ECXQSR",60,0)
 ...S ECX4CHAR=$$RJ^XLFSTR($$GET1^DIQ(728.44,+ECAC,7,"E"),4,0) ;154 Get 4char code
"RTN","ECXQSR",61,0)
 I ECUPCE=""!(ECUPCE="N")!(ECUPCE="O"&(ECXA="I")) D  ;154
"RTN","ECXQSR",62,0)
 .S ECHLS=$$RJ^XLFSTR($P($G(^DIC(40.7,+$P(ECDSSU,U,10),0)),U,2),3,0) ;154
"RTN","ECXQSR",63,0)
 .S ECHL2S=$$RJ^XLFSTR($P($G(^DIC(40.7,+$P(ECDSSU,U,13),0)),U,2),3,0) ;154
"RTN","ECXQSR",64,0)
 .S ECX4CHAR=$$RJ^XLFSTR($$GET1^DIQ(728.441,+$P(ECDSSU,U,15),.01,"E"),4,0) ;154
"RTN","ECXQSR",65,0)
 S ECDSS=ECHLS_ECHL2S
"RTN","ECXQSR",66,0)
 I ECXLOGIC>2003 D
"RTN","ECXQSR",67,0)
 .I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXQSR",68,0)
 Q:'$O(^ACK(509850.6,ECDA,3,0))
"RTN","ECXQSR",69,0)
 ;Create local array of procedure codes and # of times each procedure
"RTN","ECXQSR",70,0)
 ; was performed.
"RTN","ECXQSR",71,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXQSR",72,0)
 F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXQSR",73,0)
 S (ECDIA,ECXPPC,ECXPRV1,ECXPRV2,ECXPRV3,ECXPRV4,ECXPRV5,ECXPRV6,ECXPRV7,ECXICD10P)="" ;144 MORE PROVIDERS
"RTN","ECXQSR",74,0)
 ;if QUASAR v2
"RTN","ECXQSR",75,0)
 I +ECXQV=2 D
"RTN","ECXQSR",76,0)
 .S ECXPRV1=$P(EC2NODE,U,7),ECXPRV2=$P(EC2NODE,U,3),ECXPRV3=$P(EC2NODE,U,5),ECPN=0
"RTN","ECXQSR",77,0)
 .F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",78,0)
 ..S XX=^ACK(509850.6,ECDA,3,ECPN,0),XX=$P(XX,U),XX=$P($G(^ACK(509850.4,XX,0)),U),ECXCPT=$E($$CPT^ECXUTL3(XX),1,5)
"RTN","ECXQSR",79,0)
 ..I ECXCPT]"" D
"RTN","ECXQSR",80,0)
 ...I '$D(LOC(ECXCPT)) S LOC(ECXCPT)=0_U_ECXPRV1
"RTN","ECXQSR",81,0)
 ...S $P(LOC(ECXCPT),U)=$P(LOC(ECXCPT),U)+1
"RTN","ECXQSR",82,0)
 .S ECIEN=$O(^ACK(509850.6,ECDA,1,0)),ECDIA=$P($G(^ICD9(+$G(^ACK(509850.6,ECDA,1,ECIEN,0)),0)),U)
"RTN","ECXQSR",83,0)
 .F I=1:1:4 S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'+ECIEN  D
"RTN","ECXQSR",84,0)
 ..S @("ECXICD9"_I)=$P($G(^ICD9(+$P(^ACK(509850.6,ECDA,1,ECIEN,0),U),0)),U)
"RTN","ECXQSR",85,0)
 ;if QUASAR v3
"RTN","ECXQSR",86,0)
 I +ECXQV=3 D
"RTN","ECXQSR",87,0)
 .N CPT,DIA,I,J,MOD,MOD1,P,STR,VOL,ECTP,ARY,ECP,ECPN
"RTN","ECXQSR",88,0)
 .S ECXPRV2=$G(^ACK(509850.6,ECDA,2.7,1,0)),ECXPRV3=$G(^ACK(509850.6,ECDA,2.7,2,0)),ECXPRV4=$G(^ACK(509850.6,ECDA,2.7,3,0)),ECXPRV5=$G(^ACK(509850.6,ECDA,2.7,4,0))
"RTN","ECXQSR",89,0)
 .S ECXPRV6=$G(^ACK(509850.6,ECDA,2.7,5,0)),ECXPRV7=$G(^ACK(509850.6,ECDA,2.7,6,0)) ;144 more prov
"RTN","ECXQSR",90,0)
 .I $G(ECXPRV2) S ECXPRV2=$$CONVERT1^ACKQUTL4(ECXPRV2)
"RTN","ECXQSR",91,0)
 .I $G(ECXPRV3) S ECXPRV3=$$CONVERT1^ACKQUTL4(ECXPRV3)
"RTN","ECXQSR",92,0)
 .I $G(ECXPRV4) S ECXPRV4=$$CONVERT1^ACKQUTL4(ECXPRV4)
"RTN","ECXQSR",93,0)
 .I $G(ECXPRV5) S ECXPRV5=$$CONVERT1^ACKQUTL4(ECXPRV5)
"RTN","ECXQSR",94,0)
 .I $G(ECXPRV6) S ECXPRV6=$$CONVERT1^ACKQUTL4(ECXPRV6) ;144
"RTN","ECXQSR",95,0)
 .I $G(ECXPRV7) S ECXPRV7=$$CONVERT1^ACKQUTL4(ECXPRV7) ;144
"RTN","ECXQSR",96,0)
 .S ECPN=0 F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",97,0)
 ..S CPT=^ACK(509850.6,ECDA,3,ECPN,0),ECXCPT=$P(CPT,U),ECTP=+$P(CPT,U,5),ECV=1,ECP=""
"RTN","ECXQSR",98,0)
 ..Q:ECXCPT=""
"RTN","ECXQSR",99,0)
 ..I ECTP D
"RTN","ECXQSR",100,0)
 ...S CPT=$G(^ACK(509850.6,ECDA,7,ECTP,0)),ECP=$P(CPT,U)
"RTN","ECXQSR",101,0)
 ...S ECP=$S(ECP<90000:$P($G(^EC(725,+ECP,0)),U,2)_"N",1:$P($G(^EC(725,+ECP,0)),U,2)_"L")
"RTN","ECXQSR",102,0)
 ...S VOL=+$P(CPT,U,2),ECXPRV1=$P(CPT,U,3)
"RTN","ECXQSR",103,0)
 ..I 'ECTP S VOL=+$P(CPT,U,3),ECXPRV1=$P(CPT,U,4)
"RTN","ECXQSR",104,0)
 ..I $G(ECXPRV1) S ECXPRV1=$$CONVERT1^ACKQUTL4(ECXPRV1)
"RTN","ECXQSR",105,0)
 ..S ECXCPT=$E($$CPT^ECXUTL3(ECXCPT),1,5),ECXMOD="",MOD=0
"RTN","ECXQSR",106,0)
 ..F  S MOD=$O(^ACK(509850.6,ECDA,3,ECPN,1,MOD)) Q:'MOD  D
"RTN","ECXQSR",107,0)
 ...S MOD1=+^ACK(509850.6,ECDA,3,ECPN,1,MOD,0) D:MOD1
"RTN","ECXQSR",108,0)
 ....S ECXMOD=ECXMOD_MOD1_";"
"RTN","ECXQSR",109,0)
 ..F I=1:1:$L(ECXMOD,";") I $G(ARY(ECXCPT))'[$P(ECXMOD,";",I) D
"RTN","ECXQSR",110,0)
 ...S ARY(ECXCPT)=$G(ARY(ECXCPT))_$P(ECXMOD,";",I)_";"
"RTN","ECXQSR",111,0)
 ..S:VOL ECV=VOL
"RTN","ECXQSR",112,0)
 ..S ECV=ECV+$G(LOC(ECXCPT)),LOC(ECXCPT)=ECV_U_ECXPRV1_U_ECP
"RTN","ECXQSR",113,0)
 .S ECIEN=0 F  S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'ECIEN  D
"RTN","ECXQSR",114,0)
 ..S DIA=^ACK(509850.6,ECDA,1,ECIEN,0),P=$P(DIA,U,2),P=$S(P=1:"P",1:"S")
"RTN","ECXQSR",115,0)
 ..I +DIA S CNT=$G(STR(P))+1,STR(P,CNT)=$$CODEC^ICDEX(80,+DIA),STR(P)=CNT ;154
"RTN","ECXQSR",116,0)
 .S ECDIA=$G(STR("P",1))
"RTN","ECXQSR",117,0)
 .F I=1:1:4 Q:'$D(STR("P",I+1))  S @("ECXICD9"_I)=STR("P",I)
"RTN","ECXQSR",118,0)
 .S:ECDIA="" ECDIA=$G(STR("S",1)),I=2
"RTN","ECXQSR",119,0)
 .F J=I:1:4 Q:'$D(STR("S",J))  S @("ECXICD9"_J)=STR("S",J)
"RTN","ECXQSR",120,0)
 I +$$CODECS^ICDEX(ECDIA,80)=30 S ECXICD10P=ECDIA,ECDIA="" ;154
"RTN","ECXQSR",121,0)
 F I=1:1:4 I +$$CODECS^ICDEX(@("ECXICD9"_I),80)=30 S @("ECXICD10"_I)=@("ECXICD9"_I),@("ECXICD9"_I)="" ;154
"RTN","ECXQSR",122,0)
 Q:('$D(LOC))!('$O(^ACK(509850.6,ECDA,1,0)))
"RTN","ECXQSR",123,0)
 ;- Ord Div, Contract St/End Dates, Contract Type placeholders for FY2002
"RTN","ECXQSR",124,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXQSR",125,0)
 ;set up Provider Person class
"RTN","ECXQSR",126,0)
 S (ECXCPT,ECXPPC1,ECXPPC2,ECXPPC3,ECXPPC4,ECXPPC5,ECXPPC6,ECXPPC7)="" ;144 new ppc
"RTN","ECXQSR",127,0)
 S:ECXPRV2'="" ECXPPC2=$$PRVCLASS^ECXUTL(ECXPRV2,ECD)
"RTN","ECXQSR",128,0)
 S:ECXPRV3'="" ECXPPC3=$$PRVCLASS^ECXUTL(ECXPRV3,ECD)
"RTN","ECXQSR",129,0)
 S:ECXPRV4'="" ECXPPC4=$$PRVCLASS^ECXUTL(ECXPRV4,ECD)
"RTN","ECXQSR",130,0)
 S:ECXPRV5'="" ECXPPC5=$$PRVCLASS^ECXUTL(ECXPRV5,ECD)
"RTN","ECXQSR",131,0)
 S:ECXPRV6'="" ECXPPC6=$$PRVCLASS^ECXUTL(ECXPRV6,ECD) ;144
"RTN","ECXQSR",132,0)
 S:ECXPRV7'="" ECXPPC7=$$PRVCLASS^ECXUTL(ECXPRV7,ECD) ;144
"RTN","ECXQSR",133,0)
 ;set up Provider NPI
"RTN","ECXQSR",134,0)
 S (ECPR1NPI,ECPR2NPI,ECPR3NPI,ECPR4NPI,ECPR5NPI,ECPR6NPI,ECPR7NPI)="" ;144 new npi
"RTN","ECXQSR",135,0)
 S ECPR2NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV2,ECD)
"RTN","ECXQSR",136,0)
 S:+ECPR2NPI'>0 ECPR2NPI="" S ECPR2NPI=$P(ECPR2NPI,U)
"RTN","ECXQSR",137,0)
 S ECPR3NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV3,ECD)
"RTN","ECXQSR",138,0)
 S:+ECPR3NPI'>0 ECPR3NPI="" S ECPR3NPI=$P(ECPR3NPI,U)
"RTN","ECXQSR",139,0)
 S ECPR4NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV4,ECD)
"RTN","ECXQSR",140,0)
 S:+ECPR4NPI'>0 ECPR4NPI="" S ECPR4NPI=$P(ECPR4NPI,U)
"RTN","ECXQSR",141,0)
 S ECPR5NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV5,ECD)
"RTN","ECXQSR",142,0)
 S:+ECPR5NPI'>0 ECPR5NPI="" S ECPR5NPI=$P(ECPR5NPI,U)
"RTN","ECXQSR",143,0)
 S ECPR6NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV6,ECD) ;144
"RTN","ECXQSR",144,0)
 S:+ECPR6NPI'>0 ECPR6NPI="" S ECPR6NPI=$P(ECPR6NPI,U) ;144
"RTN","ECXQSR",145,0)
 S ECPR7NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV7,ECD) ;144
"RTN","ECXQSR",146,0)
 S:+ECPR7NPI'>0 ECPR7NPI="" S ECPR7NPI=$P(ECPR7NPI,U) ;144
"RTN","ECXQSR",147,0)
 N DA,DIC,DIK,DR,FILEN,DIQ,XVAR,II,DI
"RTN","ECXQSR",148,0)
 F II=2,3,4,5,6,7 S XVAR="ECXPRV"_II I @XVAR'="" D
"RTN","ECXQSR",149,0)
 .S @XVAR=2_@XVAR
"RTN","ECXQSR",150,0)
 ; -Observation Patient Indicator (yes/no)
"RTN","ECXQSR",151,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXQSR",152,0)
 ; -CNH status (YES/NO)
"RTN","ECXQSR",153,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXQSR",154,0)
 ;get encounter classification
"RTN","ECXQSR",155,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECXHNC,ECXSHAD,ECXESC,ECXECL)="",ECXVISIT=$P($G(^ACK(509850.6,ECDA,6)),U,3) ;144
"RTN","ECXQSR",156,0)
 I ECXVISIT'="" D
"RTN","ECXQSR",157,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXQSR",158,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXQSR",159,0)
 .S ECXIR=$G(ECXVIST("IR")),ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXQSR",160,0)
 .S ECXESC=$G(ECXVIST("ENCSC")),ECXECL=$G(ECXVIST("ENCCL")) ;144
"RTN","ECXQSR",161,0)
 ; -Head and Neck Cancer Indicator
"RTN","ECXQSR",162,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXQSR",163,0)
 ; -PROJ 112/SHAD Indicator
"RTN","ECXQSR",164,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXQSR",165,0)
 ; ******* - PATCH 127, ADD PATCAT CODE - ********
"RTN","ECXQSR",166,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXQSR",167,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXQSR",168,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXQSR",169,0)
 ; -Get national patient record flag Indicator if exist
"RTN","ECXQSR",170,0)
 D NPRF^ECXUTL5
"RTN","ECXQSR",171,0)
 ; -If no encounter number don't file record
"RTN","ECXQSR",172,0)
 S ECDSSE=$S(ECHLS<101!(ECHLS>999):"ECQ",1:ECHLS)_ECHL2S ;154 If stop code is invalid set it to ECQ for encounter number creation
"RTN","ECXQSR",173,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSSE,) ;154 Send ECDSSE for encounter # creation
"RTN","ECXQSR",174,0)
 Q:ECXENC=""
"RTN","ECXQSR",175,0)
 ;Loop through array of unique procedures. Create record in ECODE.
"RTN","ECXQSR",176,0)
 S CPT="" F  S CPT=$O(LOC(CPT)) Q:CPT=""  D
"RTN","ECXQSR",177,0)
 .S ECV=+$P(LOC(CPT),U),ECXCPT=$$CPT^ECXUTL3(CPT,$G(ARY(CPT)),ECV)
"RTN","ECXQSR",178,0)
 .S ECXPRV1=$P(LOC(CPT),U,2)
"RTN","ECXQSR",179,0)
 .S:ECXPRV1'="" ECXPPC1=$$PRVCLASS^ECXUTL(ECXPRV1,ECD)
"RTN","ECXQSR",180,0)
 .S ECPR1NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV1,ECD)
"RTN","ECXQSR",181,0)
 .S:+ECPR1NPI'>0 ECPR1NPI="" S ECPR1NPI=$P(ECPR1NPI,U)
"RTN","ECXQSR",182,0)
 .S:ECXPRV1'="" ECXPRV1=2_ECXPRV1
"RTN","ECXQSR",183,0)
 .S ECP=$P(LOC(CPT),U,3) I ECP="" S ECP=$$CPT^ECXUTL3(CPT,"",ECV)
"RTN","ECXQSR",184,0)
 .D FILE^ECXQSR1
"RTN","ECXQSR",185,0)
 K CPT,LOC
"RTN","ECXQSR",186,0)
 Q
"RTN","ECXQSR",187,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR",188,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR",189,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR",190,0)
 Q
"RTN","ECXQSR",191,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR",192,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXQSR1")
0^21^B18769480^B17814462
"RTN","ECXQSR1",1,0)
ECXQSR1 ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ;5/22/13  13:01
"RTN","ECXQSR1",2,0)
 ;;3.0;DSS EXTRACTS;**105,120,127,132,136,144,149,154**;Dec 22, 1997;Build 13
"RTN","ECXQSR1",3,0)
FILE ;file record in #727.825
"RTN","ECXQSR1",4,0)
 ;node0
"RTN","ECXQSR1",5,0)
 ;inst^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^day ECDAY^
"RTN","ECXQSR1",6,0)
 ;DSS unit ECDU^^category ECPTTM^procedure ECP^volume ECV^cost center^
"RTN","ECXQSR1",7,0)
 ;ordering sec ^section^provider ECXPRV1^ECXPPC1^ECXPRV2^ECXPPC2^ECXPRV3^
"RTN","ECXQSR1",8,0)
 ;ECXPPC3^mov # ECXMN^treat spec ECXTS^time ECTIME^primary care team 
"RTN","ECXQSR1",9,0)
 ;ECPTTM^primary care provider ECPTPR^pce cpt code & modifers ECXCPT^
"RTN","ECXQSR1",10,0)
 ;primary icd-9 code ECDIA^secondary icd-9 #1 ECXICD91^secondary icd-9 
"RTN","ECXQSR1",11,0)
 ;#2 ECXICD92^secondary icd-9 #3 ECXICD93^secondary icd-9 #4 ECXICD94^
"RTN","ECXQSR1",12,0)
 ;agent orange ECXAST^radiation exposure ECRST^environmental
"RTN","ECXQSR1",13,0)
 ;contaminants ECEST^service connected ECSC^sent to pce^^dss identifier
"RTN","ECXQSR1",14,0)
 ;ECDSS^placeholder
"RTN","ECXQSR1",15,0)
 ;node1
"RTN","ECXQSR1",16,0)
 ;mpi ECXNPI^dss dept ECXDSSD^^^^placeholder 
"RTN","ECXQSR1",17,0)
 ;^assoc pc provider ECASPR^assoc pc prov person class 
"RTN","ECXQSR1",18,0)
 ;ECCLAS2^placeholder^divison ECXDIV^dom ECXDOM^
"RTN","ECXQSR1",19,0)
 ;enrollment category ECXCAT^enrollment status ECXSTAT^enrollment prior 
"RTN","ECXQSR1",20,0)
 ;ECXPRIOR^period of service ECXPOS^purple heart ECXPHI^observ pat ind 
"RTN","ECXQSR1",21,0)
 ;ECXOBS^encounter num ECXENC^ao loc ECXAOL^ord div ECXODIV^contr st dt 
"RTN","ECXQSR1",22,0)
 ;ECXCSDT^contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXQSR1",23,0)
 ;production division ECXPDIV^eligibility ECXELIG^ethnicity ECXETH^
"RTN","ECXQSR1",24,0)
 ;race1 ECXRC1^enrollment location ECXENRL^^enrollment priority 
"RTN","ECXQSR1",25,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient 
"RTN","ECXQSR1",26,0)
 ;type ECXPTYPE^combat vet elig ECXCVE
"RTN","ECXQSR1",27,0)
 ;NODE 2
"RTN","ECXQSR1",28,0)
 ;^combat vet elig end date ECXCVEDT^
"RTN","ECXQSR1",29,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXQSR1",30,0)
 ;emergency response indicator(FEMA) ECXERI^agent orange indicator 
"RTN","ECXQSR1",31,0)
 ;ECXAO^environ contam ECXECE^head/neck ECXHNC^military sexual trauma 
"RTN","ECXQSR1",32,0)
 ;ECXMIL^radiation encoun ECXIR^nutrition dx(currently null)^OEF/OIF ECXOEF^
"RTN","ECXQSR1",33,0)
 ;OEF/OIF return date ECXOEFDT^assoc pc provider npi ECASNPI^
"RTN","ECXQSR1",34,0)
 ;primary care provider npi ECPTNPI^provider npi ECPR1NPI^
"RTN","ECXQSR1",35,0)
 ;provider #2 npi ECPR2NPI^provider #3 npi ECPR3NPI^shad status ECXSHADI^
"RTN","ECXQSR1",36,0)
 ;shad encouter ECXSHAD^pat cat ECXPATCAT^provider #4 ECXPRV4^
"RTN","ECXQSR1",37,0)
 ;provider #4 pc ECXPPC4^provider #4 npi ECPR4NPI^provider #5 ECXPRV5^
"RTN","ECXQSR1",38,0)
 ;provider #5 pc ECXPPC5^provider #5 npi ECPR5NPI^
"RTN","ECXQSR1",39,0)
 ;primary ICD-10 code (currently null) ECXICD10P^Secondary ICD-10 Code #1 (currently null) ECXICD101^
"RTN","ECXQSR1",40,0)
 ;Secondary ICD-10 Code #2 (currently null) ECXICD102^Secondary ICD-10 Code #3 (currently null) ECXICD103^
"RTN","ECXQSR1",41,0)
 ;NODE 3
"RTN","ECXQSR1",42,0)
 ;Secondary ICD-10 Code #4 (currently null) ECXICD104^Encounter SC ECXESC^Vietnam Status ECXVNS
"RTN","ECXQSR1",43,0)
 ;Provider #6 ECXPRV6^ Prov #6 PC ECXPPC6^Prov #6 NPI ECPR6NPI^Provider #7 ECXPRV7^ Prov #7 PC ECXPPC7^Prov #7 NPI ECPR7NPI^4CHAR ECX4CHAR^Clinic IEN ECAC (NOW NULL)^Camp Lejeune status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXQSR1",44,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)
"RTN","ECXQSR1",45,0)
 ;Clinic IEN ECAC
"RTN","ECXQSR1",46,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXQSR1",47,0)
 N ECXDATA,ECXTSC
"RTN","ECXQSR1",48,0)
 N ECXRES1,ECXRES2,ECXRES3,ECXSVCI,ECXSVCL ;149
"RTN","ECXQSR1",49,0)
 S (ECXRES1,ECXRES2,ECXRES3,ECXSVCI,ECXSVCL)="" ;149
"RTN","ECXQSR1",50,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXQSR1",51,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXQSR1",52,0)
 ;done
"RTN","ECXQSR1",53,0)
 N DA,DIK
"RTN","ECXQSR1",54,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXQSR1",55,0)
 S ECODE=EC7_U_EC23_U
"RTN","ECXQSR1",56,0)
 S ECODE=ECODE_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECDAY_U_ECDU_U_U
"RTN","ECXQSR1",57,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECXPRV1_U_ECXPPC1_U
"RTN","ECXQSR1",58,0)
 S ECODE=ECODE_ECXPRV2_U_ECXPPC2_U_ECXPRV3_U_ECXPPC3_U_U
"RTN","ECXQSR1",59,0)
 S ECODE=ECODE_ECXMN_U_ECXTSC_U_ECTIME_U_ECPTTM_U
"RTN","ECXQSR1",60,0)
 S ECODE=ECODE_ECPTPR_U_ECXCPT_U_ECDIA_U_ECXICD91_U_ECXICD92_U
"RTN","ECXQSR1",61,0)
 S ECODE=ECODE_ECXICD93_U_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXQSR1",62,0)
 S ECODE=ECODE_ECSC_U_"N"_U_U_ECDSS_U_U
"RTN","ECXQSR1",63,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_ECCLAS_U_U_ECASPR_U
"RTN","ECXQSR1",64,0)
 S ECODE1=ECODE1_ECCLAS2_U_U_ECXDIV_U_ECXMST_U_ECXDOM_U
"RTN","ECXQSR1",65,0)
 S ECODE1=ECODE1_ECXDOB_U_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXQSR1",66,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXODIV_U_ECXCSDT_U_ECXCEDT_U
"RTN","ECXQSR1",67,0)
 S ECODE1=ECODE1_ECXCTYP_U_ECXCNH_U_ECXPDIV_U_ECXELIG_U_ECXHNCI_U_ECXETH_U
"RTN","ECXQSR1",68,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXQSR1",69,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL
"RTN","ECXQSR1",70,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXQSR1",71,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXQSR1",72,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXQSR1",73,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_$G(ECXOEF)_U_$G(ECXOEFDT)_U_$G(ECASNPI)_U_$G(ECPTNPI)_U_$G(ECPR1NPI)_U_$G(ECPR2NPI)_U_$G(ECPR3NPI)
"RTN","ECXQSR1",74,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_$G(ECXSHADI)_U_$G(ECXSHAD)_U_ECXPATCAT
"RTN","ECXQSR1",75,0)
 I ECXLOGIC>2011 S ECODE2=ECODE2_U_$G(ECXPRV4)_U_$G(ECXPPC4)_U_$G(ECPR4NPI)_U_$G(ECXPRV5)_U_$G(ECXPPC5)_U_$G(ECPR5NPI)
"RTN","ECXQSR1",76,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U
"RTN","ECXQSR1",77,0)
 I ECXLOGIC>2012 S ECODE3=ECXICD104
"RTN","ECXQSR1",78,0)
 I ECXLOGIC>2013 S ECODE3=ECODE3_U_ECXESC_U_ECXVNS_U_ECXPRV6_U_ECXPPC6_U_ECPR6NPI_U_ECXPRV7_U_ECXPPC7_U_ECPR7NPI_U_ECX4CHAR_U_$S(ECXLOGIC>2015:"",1:ECAC)_U_ECXCLST_U_ECXECL ;144
"RTN","ECXQSR1",79,0)
 I ECXLOGIC>2014 S ECODE3=ECODE3_U_ECXRES1_U_ECXRES2_U_ECXRES3_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXQSR1",80,0)
 I ECXLOGIC>2015 S ECODE3=ECODE3_U_ECAC ;154 MOVED CLINIC IEN
"RTN","ECXQSR1",81,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),^ECX(ECFILE,EC7,3)=$G(ECODE3),ECRN=ECRN+1
"RTN","ECXQSR1",82,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXQSR1",83,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXQSR1",84,0)
 Q
"RTN","ECXQSR1",85,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR1",86,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR1",87,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR1",88,0)
 Q
"RTN","ECXQSR1",89,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR1",90,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXRAD")
0^6^B48026824^B45034346
"RTN","ECXRAD",1,0)
ECXRAD ;ALB/JAP,BIR/PDW,PTD-Extract for Radiology ;6/3/15  10:20
"RTN","ECXRAD",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,16,24,33,39,46,71,84,92,105,120,127,136,144,149,153,154**;Dec 22, 1997;Build 13
"RTN","ECXRAD",3,0)
BEG ;entry point from option
"RTN","ECXRAD",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXRAD",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXRAD",6,0)
 Q
"RTN","ECXRAD",7,0)
 ;
"RTN","ECXRAD",8,0)
START ;start rad extract
"RTN","ECXRAD",9,0)
 N ECDT,ECED1,ECINED,ECINSD,ECXDA,QFLG ;149
"RTN","ECXRAD",10,0)
 S QFLG=0
"RTN","ECXRAD",11,0)
 K ECXDD D FIELD^DID(70.03,14,,"SPECIFIER","ECXDD") S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXRAD",12,0)
 S ECDT=ECSD-.1,ECED1=ECED+.3
"RTN","ECXRAD",13,0)
 S ECINED=9999999-ECDT,ECINSD=9999999-ECED1 ;149
"RTN","ECXRAD",14,0)
 F  S ECINSD=$O(^RARPT("AA",ECINSD)) Q:ECINSD>ECINED!(ECINSD="")  D  Q:QFLG  ;149
"RTN","ECXRAD",15,0)
 .S ECXDA="" F  S ECXDA=$O(^RARPT("AA",ECINSD,ECXDA)) Q:ECXDA=""  D GETCASE Q:QFLG  ;149
"RTN","ECXRAD",16,0)
 Q
"RTN","ECXRAD",17,0)
 ;
"RTN","ECXRAD",18,0)
GETCASE ;Find all cases associated with the verified report and store in extract
"RTN","ECXRAD",19,0)
 ;149 Section added in this patch
"RTN","ECXRAD",20,0)
 N CASE,ECXDFN,DATE,ECXMDA,ECXMDT,OCIEN,ECCN,TAB ;153
"RTN","ECXRAD",21,0)
 S CASE=$P($G(^RARPT(ECXDA,0)),U) Q:CASE=""
"RTN","ECXRAD",22,0)
 S TAB=$S($L(CASE,"-")=3:"ADC1",1:"ADC") ;153 Set xref table to use based on use of site accession numbering
"RTN","ECXRAD",23,0)
 S ECXDFN=$P($G(^RARPT(ECXDA,0)),U,2) Q:ECXDFN=""
"RTN","ECXRAD",24,0)
 I $D(^RADPT(TAB,CASE,ECXDFN)) D  ;153
"RTN","ECXRAD",25,0)
 .S ECXMDA=$O(^RADPT(TAB,CASE,ECXDFN,0)) Q:'+ECXMDA  ;153
"RTN","ECXRAD",26,0)
 .S ECCN=$O(^RADPT(TAB,CASE,ECXDFN,ECXMDA,0)) Q:'+ECCN  ;153
"RTN","ECXRAD",27,0)
 .S ECXMDT=$P($G(^RADPT(ECXDFN,"DT",ECXMDA,0)),U) ;Exam date/time
"RTN","ECXRAD",28,0)
 .D GET
"RTN","ECXRAD",29,0)
 S OCIEN=0 F  S OCIEN=$O(^RARPT(ECXDA,1,OCIEN)) Q:'+OCIEN  D
"RTN","ECXRAD",30,0)
 .S CASE=$P($G(^RARPT(ECXDA,1,OCIEN,0)),U) Q:'+CASE
"RTN","ECXRAD",31,0)
 .S TAB=$S($L(CASE,"-")=3:"ADC1",1:"ADC") ;153 Set xref table to use based on use of site accession numbering
"RTN","ECXRAD",32,0)
 .I $D(^RADPT(TAB,CASE,ECXDFN)) D  ;153
"RTN","ECXRAD",33,0)
 ..S ECXMDA=$O(^RADPT(TAB,CASE,ECXDFN,0)) Q:'+ECXMDA  ;153
"RTN","ECXRAD",34,0)
 ..S ECCN=$O(^RADPT(TAB,CASE,ECXDFN,ECXMDA,0)) Q:'+ECCN  ;153
"RTN","ECXRAD",35,0)
 ..S ECXMDT=$P($G(^RADPT(ECXDFN,"DT",ECXMDA,0)),U) ;Exam date/time
"RTN","ECXRAD",36,0)
 ..D GET
"RTN","ECXRAD",37,0)
 Q
"RTN","ECXRAD",38,0)
 ;
"RTN","ECXRAD",39,0)
GET ;get data
"RTN","ECXRAD",40,0)
 ;149 All code in GET has been modified so that it's no longer at block structure level as that's no longer needed
"RTN","ECXRAD",41,0)
 N ECXIEN,X,SUB,TYPE,ECDOCPC,ECXIS,ECXISPC,ECXPRCL,ECXCSC,ECXUSRTN,ECXCM,ECSTAT,ECXMVDT ;136,154
"RTN","ECXRAD",42,0)
 N ECXESC,ECXECL,ECXCLST,VISIT,ECXVIST,ECXERR ;144
"RTN","ECXRAD",43,0)
 S ECTM=$$ECXTIME^ECXUTL(ECXMDT) S:ECTM>235959 ECTM=235959
"RTN","ECXRAD",44,0)
 S ECXDAY=$$ECXDATE^ECXUTL(ECXMDT,ECXYM)
"RTN","ECXRAD",45,0)
 S ECXMVDT=$$ECXDATE^ECXUTL($P($G(^RARPT(ECXDA,0)),U,7),ECXYM) ;154 Get exam verification date and convert to YYYYMMDD format
"RTN","ECXRAD",46,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXMDT,"."),"1;3;5",.ECXPAT) ;154 Added service information (5) to list
"RTN","ECXRAD",47,0)
 Q:'OK
"RTN","ECXRAD",48,0)
 S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXRAD",49,0)
 S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXRAD",50,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXRAD",51,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXRAD",52,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXMDT,"."),ECPROF)
"RTN","ECXRAD",53,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXRAD",54,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXRAD",55,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXMDT),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXRAD",56,0)
 S ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXRAD",57,0)
 ;
"RTN","ECXRAD",58,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXRAD",59,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXRAD",60,0)
 S ECXDIV=$P(^RADPT(ECXDFN,"DT",ECXMDA,0),U,3),ECLOC=$P(^(0),U,4),ECTY=$P(^(0),U,2)
"RTN","ECXRAD",61,0)
 ;
"RTN","ECXRAD",62,0)
 ;- Ordering stop code (based on imaging location)
"RTN","ECXRAD",63,0)
 S ECXORDST=$$GET1^DIQ(40.7,$$GET1^DIQ(79.1,$G(ECLOC),22,"I"),1)
"RTN","ECXRAD",64,0)
 ;
"RTN","ECXRAD",65,0)
 ;- Get ordering date using Imaging Order ptr to #75.1 in subfile 70.03
"RTN","ECXRAD",66,0)
 S ECXIEN=+$P($G(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,0)),U,11) ;149 Changed 1 to ECCN so that imaging location comes from actual exam, not only first exam
"RTN","ECXRAD",67,0)
 S ECXORDDT=$$ECXDATE^ECXUTL($P($G(^RAO(75.1,ECXIEN,0)),U,16),ECXYM)
"RTN","ECXRAD",68,0)
 ;
"RTN","ECXRAD",69,0)
 ;******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXRAD",70,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXRAD",71,0)
 ;- If no encounter number don't file record
"RTN","ECXRAD",72,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXMDT,ECXTS,ECXOBS,ECHEAD,ECTY,) Q:ECXENC=""
"RTN","ECXRAD",73,0)
 ;procedures and modifiers for specific exam (case numbers)
"RTN","ECXRAD",74,0)
 ;ward/clinic,service,provider,diagnostic code
"RTN","ECXRAD",75,0)
 S ECCA=^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,0)
"RTN","ECXRAD",76,0)
 S (ECXESC,ECXECL)="" ;144
"RTN","ECXRAD",77,0)
 S VISIT=$P(ECCA,U,27) ;144
"RTN","ECXRAD",78,0)
 I VISIT D VISIT^ECXSCX1(ECXDFN,VISIT,.ECXVIST,.ECXERR) I 'ECXERR S ECXESC=$G(ECXVIST("ENCSC")),ECXECL=$G(ECXVIST("ENCCL")) ;144
"RTN","ECXRAD",79,0)
 S ECXCM=$P(ECCA,U,26) S ECXCM=$S("^0^1^2^3^"[("^"_ECXCM_"^"):ECXCM,1:"") ;136 - Get Credit Method and validate that it's a number between 0 and 3 otherwise set it to null
"RTN","ECXRAD",80,0)
 I ECXCM=2 Q  ;149 No longer collect records with credit method set to 2
"RTN","ECXRAD",81,0)
 S ECXW=$P(ECCA,U,6),ECXW=$P($G(^DIC(42,+ECXW,44)),U)
"RTN","ECXRAD",82,0)
 S:ECXW="" ECXW=$P(ECCA,U,8)
"RTN","ECXRAD",83,0)
 S ECDOCNPI=$$NPI^XUSNPI("Individual_ID",$P(ECCA,U,14),ECDT)
"RTN","ECXRAD",84,0)
 S:+ECDOCNPI'>0 ECDOCNPI="" S ECDOCNPI=$P(ECDOCNPI,U)
"RTN","ECXRAD",85,0)
 S (ECXDSSD,ECXDSSP)=""
"RTN","ECXRAD",86,0)
 S ECS=$P(ECCA,U,7),ECDOC=ECPROF_$P(ECCA,U,14),ECDI=$P(ECCA,U,13),ECDOCPC=$$PRVCLASS^ECXUTL($P(ECCA,U,14),ECDT)
"RTN","ECXRAD",87,0)
 S ECPRO=$P(ECCA,U,2),ECSTAT=$P($G(^RA(72,+$P(ECCA,U,3),0)),U,3)
"RTN","ECXRAD",88,0)
 ;get the primary interpreting staff and the person class DBIA #65
"RTN","ECXRAD",89,0)
 S ECXIS=$P(ECCA,U,15),ECXISPC=$$PRVCLASS^ECXUTL(ECXIS,ECDT)
"RTN","ECXRAD",90,0)
 S ECISNPI=$$NPI^XUSNPI("Individual_ID",ECXIS,ECDT)
"RTN","ECXRAD",91,0)
 S:+ECISNPI'>0 ECISNPI="" S ECISNPI=$P(ECISNPI,U)
"RTN","ECXRAD",92,0)
 ;prefix interpreting radiologist with a "2" if not null
"RTN","ECXRAD",93,0)
 S ECXIS=$S(ECXIS:"2"_ECXIS,1:"")
"RTN","ECXRAD",94,0)
 ;get the principal clinic ien DBIA #65
"RTN","ECXRAD",95,0)
 S ECXPRCL=$P(ECCA,U,8)
"RTN","ECXRAD",96,0)
 ;get the clinic stop code from file #44
"RTN","ECXRAD",97,0)
 S ECXCSC=$$GET1^DIQ(40.7,$$GET1^DIQ(44,ECXPRCL,8,"I"),1)
"RTN","ECXRAD",98,0)
 Q:'ECPRO 
"RTN","ECXRAD",99,0)
 Q:+ECSTAT=0
"RTN","ECXRAD",100,0)
 ;get CPT code & modifiers
"RTN","ECXRAD",101,0)
 S ECPT=+$P($G(^RAMIS(71,+ECPRO,0)),U,9),ECXCMOD=""
"RTN","ECXRAD",102,0)
 ;quit if this is a 'parent' procedure
"RTN","ECXRAD",103,0)
 S TYPE=$P($G(^RAMIS(71,+ECPRO,0)),U,6)
"RTN","ECXRAD",104,0)
 Q:((ECPT=0)&(TYPE="P"))
"RTN","ECXRAD",105,0)
 ;if site is using radiology with cpt modifiers then get them
"RTN","ECXRAD",106,0)
 K ARR,ERR D FIELD^DID(70.03,135,,"LABEL","ARR","ERR")
"RTN","ECXRAD",107,0)
 I $D(ARR("LABEL")) D
"RTN","ECXRAD",108,0)
 .K ARR,ERR D FIELD^DID(70.03,135,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXRAD",109,0)
 .Q:$D(ERR("DIERR"))
"RTN","ECXRAD",110,0)
 .S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";") S ECMOD=0
"RTN","ECXRAD",111,0)
 .Q:'$D(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB))
"RTN","ECXRAD",112,0)
 .F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB,ECMOD)) Q:ECMOD'>0  S ECXCMOD=ECXCMOD_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",113,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXRAD",114,0)
 ;get procedure radiology modifiers
"RTN","ECXRAD",115,0)
 S ECMOD=0,ECMODS=""
"RTN","ECXRAD",116,0)
 F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,"M",ECMOD)) Q:ECMOD'>0  S ECMODS=ECMODS_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",117,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXRAD",118,0)
 D FILE
"RTN","ECXRAD",119,0)
 Q
"RTN","ECXRAD",120,0)
 ;
"RTN","ECXRAD",121,0)
FILE ;file record
"RTN","ECXRAD",122,0)
 ;node0
"RTN","ECXRAD",123,0)
 ;rad div^dfn^ssn^name^in/out (ECXA)^day^cpt code^procedure^img loc^ward^
"RTN","ECXRAD",124,0)
 ;ser^diag code^req physician^modifiers^mov #^treat spec^time^
"RTN","ECXRAD",125,0)
 ;imaging type^primary care team^primary care provider
"RTN","ECXRAD",126,0)
 ;node1
"RTN","ECXRAD",127,0)
 ;mpi^dss dept^placeholder^placeholder^pc prov person class^
"RTN","ECXRAD",128,0)
 ;assoc pc provider^assoc pc prov person class^placeholder^dom^
"RTN","ECXRAD",129,0)
 ;observ pat ind^encounter num^ord stop code^ord date^division^
"RTN","ECXRAD",130,0)
 ;dss product ECXDSSP^requesting provider person class ECDOCPC^interp-
"RTN","ECXRAD",131,0)
 ;reting radiologist ECXIS^interpreting radiologist pc ECXISPC^princi-
"RTN","ECXRAD",132,0)
 ;pal clinic ECXPRCL^clinc stop code ECXCSC^emergency response indicator
"RTN","ECXRAD",133,0)
 ;(FEMA) ECXERI^assoc pc provider npi^interpreting rad npi^pc provider npi^req physician npi^Patient Category (PATCAT) ECXPATCAT^Credit Method ECXCM
"RTN","ECXRAD",134,0)
 ;NODE2
"RTN","ECXRAD",135,0)
 ;Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL^Exam verification date ECXMVDT
"RTN","ECXRAD",136,0)
 ;
"RTN","ECXRAD",137,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXRAD",138,0)
 N ECXDATA,ECXTSC
"RTN","ECXRAD",139,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXRAD",140,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXRAD",141,0)
 ;done
"RTN","ECXRAD",142,0)
 N DA,DIK
"RTN","ECXRAD",143,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXRAD",144,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXRAD",145,0)
 S ECODE=ECODE_ECXDAY_U_ECXCPT_U_ECPRO_U_ECLOC_U_ECXW_U_ECS_U_ECDI_U
"RTN","ECXRAD",146,0)
 S ECODE=ECODE_ECDOC_U_ECMODS_U_ECXMN_U_ECXTSC_U_ECTM_U_ECTY_U_ECPTTM_U
"RTN","ECXRAD",147,0)
 S ECODE=ECODE_ECPTPR_U
"RTN","ECXRAD",148,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_ECCLAS_U_ECASPR_U
"RTN","ECXRAD",149,0)
 S ECODE1=ECODE1_ECCLAS2_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDST_U
"RTN","ECXRAD",150,0)
 S ECODE1=ECODE1_ECXORDDT_U_ECXPDIV_U
"RTN","ECXRAD",151,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_ECXDSSP_U_ECDOCPC
"RTN","ECXRAD",152,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXIS_U_ECXISPC_U_ECXPRCL_U_ECXCSC
"RTN","ECXRAD",153,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI
"RTN","ECXRAD",154,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECASNPI_U_ECISNPI_U_ECPTNPI_U_ECDOCNPI
"RTN","ECXRAD",155,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT ;127 PATCAT
"RTN","ECXRAD",156,0)
 I ECXLOGIC>2012 S ECODE1=ECODE1_U_ECXCM_U ;136 Credit Method 144 End of node needs an ^
"RTN","ECXRAD",157,0)
 I ECXLOGIC>2013 S ECODE2=ECXESC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXRAD",158,0)
 I ECXLOGIC>2015 S ECODE2=ECODE2_U_ECXMVDT ;154 Add verification date
"RTN","ECXRAD",159,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1 ;144
"RTN","ECXRAD",160,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXRAD",161,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXRAD",162,0)
 Q
"RTN","ECXRAD",163,0)
 ;
"RTN","ECXRAD",164,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXRAD",165,0)
 S ECHEAD="RAD"
"RTN","ECXRAD",166,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXRAD",167,0)
 Q
"RTN","ECXSCLD")
0^12^B159034107^B194888922
"RTN","ECXSCLD",1,0)
ECXSCLD ;BIR/DMA,CML-Enter, Print and Edit Entries in 728.44 ;5/20/15  13:29
"RTN","ECXSCLD",2,0)
 ;;3.0;DSS EXTRACTS;**2,8,24,30,71,80,105,112,120,126,132,136,142,144,149,154**;Dec 22, 1997;Build 13
"RTN","ECXSCLD",3,0)
EN ;entry point from option
"RTN","ECXSCLD",4,0)
 ;load entries
"RTN","ECXSCLD",5,0)
 N DIR,X,Y,DIRUT,DTOUT,DUOUT ;144
"RTN","ECXSCLD",6,0)
 W !!,"This option creates local entries in the DSS CLINIC AND STOP CODES"
"RTN","ECXSCLD",7,0)
 W !,"file (#728.44).",! ;144
"RTN","ECXSCLD",8,0)
 I '$D(^ECX(728.44)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",9,0)
 ;W !!,"It also compares file #728.44 to the HOSPITAL LOCATION file (#44) to see" ;144
"RTN","ECXSCLD",10,0)
 ;W !,"if there are any differences since the last time the file was reviewed." ;144
"RTN","ECXSCLD",11,0)
 ;W !!,"Any differences or new entries will cause an UNREVIEWED CLINICS report" ;144
"RTN","ECXSCLD",12,0)
 ;W !,"to automatically print.",! ;144
"RTN","ECXSCLD",13,0)
 ;D SELECT^ECXSCLD ;144
"RTN","ECXSCLD",14,0)
 ;144 does user hold key?
"RTN","ECXSCLD",15,0)
 I '$$KCHK^XUSRB("ECXMGR",$G(DUZ)) D  G ENDX ;144
"RTN","ECXSCLD",16,0)
 .W !!,?5,"You do not have approved access to this option.",!,"Exiting...",!! ;144
"RTN","ECXSCLD",17,0)
 .D PAUSE ;144
"RTN","ECXSCLD",18,0)
 W !,"The CREATE option last ran on ",$S($D(^ECX(728.44,"C")):$$FMTE^XLFDT($O(^ECX(728.44,"C"," "),-1),2),1:"- No date on file"),".",! ;144
"RTN","ECXSCLD",19,0)
 S DIR(0)="Y",DIR("A")="Do you want to run the CREATE option",DIR("B")="N" D ^DIR Q:Y'=1  ;144
"RTN","ECXSCLD",20,0)
 W !,"Running CREATE..." ;144
"RTN","ECXSCLD",21,0)
 D START ;144
"RTN","ECXSCLD",22,0)
 W !!,"The CREATE option has completed on ",$$FMTE^XLFDT($$NOW^XLFDT),".",! ;144
"RTN","ECXSCLD",23,0)
 S DIR(0)="Y",DIR("A")="Proceed to DSS Clinic and Stop Code Print menu",DIR("B")="NO" D ^DIR ;144
"RTN","ECXSCLD",24,0)
 D:Y PRINT ;144
"RTN","ECXSCLD",25,0)
 Q
"RTN","ECXSCLD",26,0)
START ; entry point
"RTN","ECXSCLD",27,0)
 N ZTREQ
"RTN","ECXSCLD",28,0)
 S EC=0 F  S EC=$O(^SC(EC)) Q:'EC  D FIX(EC)
"RTN","ECXSCLD",29,0)
 K DIK S DIK="^ECX(728.44,",DIK(1)=".01^B" D ENALL^DIK
"RTN","ECXSCLD",30,0)
 S ZTREQ="@"
"RTN","ECXSCLD",31,0)
 Q
"RTN","ECXSCLD",32,0)
 ;
"RTN","ECXSCLD",33,0)
FIX(EC) ;
"RTN","ECXSCLD",34,0)
 ; synchronize files #44 and #728.44.
"RTN","ECXSCLD",35,0)
 N DIE,DA,DR ;144
"RTN","ECXSCLD",36,0)
 ; differences are placed in ^XTMP("ECX UNREVIEWED CLINICS")
"RTN","ECXSCLD",37,0)
 S EC=$G(EC)
"RTN","ECXSCLD",38,0)
 I '$D(^SC(EC,0)) Q
"RTN","ECXSCLD",39,0)
 N ECD,DAT
"RTN","ECXSCLD",40,0)
 S ECD=^SC(EC,0),DAT=$G(^SC(EC,"I"))
"RTN","ECXSCLD",41,0)
 I $P(ECD,U,3)'="C" I '$D(^ECX(728.44,EC,0)) Q  ;144 Allow updates if entry already exists in 728.44 even if it's no longer a clinic
"RTN","ECXSCLD",42,0)
 ; get stop codes and default style for feeder key
"RTN","ECXSCLD",43,0)
 ; 1 if no credit stop code - 5 if credit stop code exists
"RTN","ECXSCLD",44,0)
 K ECD2,ECS2,ECDNEW,ECDDIF,ECSCSIGN I $D(^ECX(728.44,EC,0)) S (ECD2,ECDDIF)=^(0),ECSCSIGN=""
"RTN","ECXSCLD",45,0)
 I $D(ECD2) F ECS=2,3,4,5 D
"RTN","ECXSCLD",46,0)
 .S (ECS2(ECS),X)=$P(ECD2,U,ECS)
"RTN","ECXSCLD",47,0)
 .K DIC,Y S DIC=40.7,DIC(0)="MXZ" D ^DIC
"RTN","ECXSCLD",48,0)
 .I +$G(Y)>0 S $P(ECS2(ECS),U,2)=$P(^DIC(40.7,+Y,0),U,3)
"RTN","ECXSCLD",49,0)
 S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCLD",50,0)
 ;change in clinic inactivation for existing entry 
"RTN","ECXSCLD",51,0)
 I $D(ECD2) D
"RTN","ECXSCLD",52,0)
 .;don't include already old inactivated clinics in report
"RTN","ECXSCLD",53,0)
 .I ID,ID'>DT I ('RD)!(RD>DT) I $P(ECD2,U,10)'=ID D
"RTN","ECXSCLD",54,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)=ID,ECSCSIGN="*"
"RTN","ECXSCLD",55,0)
 .I ID,RD,(RD'>DT) I $P(ECD2,U,10) D
"RTN","ECXSCLD",56,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)="",ECSCSIGN="r"
"RTN","ECXSCLD",57,0)
 .I ID,(ID>DT) I $P(ECD2,U,10) D
"RTN","ECXSCLD",58,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)="",ECSCSIGN="!"
"RTN","ECXSCLD",59,0)
 .I 'ID,$P(ECD2,U,10) D
"RTN","ECXSCLD",60,0)
 ..S $P(ECD2,U,7)="",$P(ECD2,U,10)="",ECSCSIGN="!"
"RTN","ECXSCLD",61,0)
 .S ECDDIF=ECD2
"RTN","ECXSCLD",62,0)
 ;setup for stops
"RTN","ECXSCLD",63,0)
 F ECS=7,18 S ECP=+$P(ECD,U,ECS),ECS(ECS)=$P($G(^DIC(40.7,ECP,0)),U,2)_U_$P($G(^DIC(40.7,ECP,0)),U,3)
"RTN","ECXSCLD",64,0)
 S ECDF=$S($P(ECS(18),U)]"":5,1:1) S:$P(ECD,U,17)="Y" ECDF=6 S:$G(^SC(EC,"OOS")) ECDF=6
"RTN","ECXSCLD",65,0)
 S ECDB=EC_U_$S(+ECS(7):+ECS(7),1:"")_U_$S(+ECS(18):+ECS(18),1:"")_U_$S(+ECS(7):+ECS(7),1:"")_U_$S(+ECS(18):+ECS(18),1:"") ;154 added DSS SC CSC
"RTN","ECXSCLD",66,0)
 ;new entry
"RTN","ECXSCLD",67,0)
 I '$D(ECD2) D
"RTN","ECXSCLD",68,0)
 .S $P(^ECX(728.44,EC,0),U,1,5)=ECDB ;154
"RTN","ECXSCLD",69,0)
 .;S $P(^ECX(728.44,EC,0),U,1,5)=ECDB_U_$S(+ECS(7):+ECS(7),1:"")_U_$S(+ECS(18):+ECS(18),1:"")
"RTN","ECXSCLD",70,0)
 .S $P(^(0),U,6)=ECDF,$P(^(0),U,12)=$P(ECD,U,17)
"RTN","ECXSCLD",71,0)
 .S ECDNEW=^ECX(728.44,EC,0)
"RTN","ECXSCLD",72,0)
 ;changes to existing entry
"RTN","ECXSCLD",73,0)
 I $D(ECD2) D
"RTN","ECXSCLD",74,0)
 .S $P(ECD2,U,1,5)=ECDB,$P(ECDDIF,U,1,3)=ECDB ;154 ADDED DSS SC CSC
"RTN","ECXSCLD",75,0)
 .;differs in stop code
"RTN","ECXSCLD",76,0)
 .I +ECS(7)'=+ECS2(2) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,2)_"!",$P(ECDDIF,U,2)=X ;W !," SC ",?10,X,?20,ECS(7),?40,ECS2(2)
"RTN","ECXSCLD",77,0)
 .;154 added DSS STOP CODE
"RTN","ECXSCLD",78,0)
 .I +ECS(7)'=+ECS2(4) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,4)_"!",$P(ECDDIF,U,4)=X ;W !,"DSS SC ",?10,X,?20,ECS(7),?40,ECS2(4)
"RTN","ECXSCLD",79,0)
 .;differs in credit stop code
"RTN","ECXSCLD",80,0)
 .I +ECS(18)'=+ECS2(3) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,3)_"!",$P(ECDDIF,U,3)=X
"RTN","ECXSCLD",81,0)
 .;154 added DSS CREDIT STOP CODE
"RTN","ECXSCLD",82,0)
 .I +ECS(18)'=+ECS2(5) S $P(ECD2,U,7)="",X=$P(ECDDIF,U,5)_"!",$P(ECDDIF,U,5)=X ; W !,"DSS CSC",!
"RTN","ECXSCLD",83,0)
 .;change in non-count
"RTN","ECXSCLD",84,0)
 .I $P(ECD2,U,12)'=$P(ECD,U,17) S X=$P(ECD,U,17)_"!",$P(ECDDIF,U,12)=X,$P(ECD2,U,12)=$P(ECD,U,17),$P(ECD2,U,7)=""
"RTN","ECXSCLD",85,0)
 .;reset entry
"RTN","ECXSCLD",86,0)
 .S ^ECX(728.44,EC,0)=ECD2
"RTN","ECXSCLD",87,0)
 ;set tmp node
"RTN","ECXSCLD",88,0)
 S ECSC=$P(ECD,U) S:$L(ECSC)>27 ECSC=$E(ECSC,1,27)
"RTN","ECXSCLD",89,0)
 I $D(ECD2),$P(ECD2,U,7)="" D
"RTN","ECXSCLD",90,0)
 .I $D(^XTMP("ECX UNREVIEWED CLINICS",ECSC)) D UPDATE(ECSC,ECDDIF,ECSCSIGN)
"RTN","ECXSCLD",91,0)
 .I '$D(^XTMP("ECX UNREVIEWED CLINICS",ECSC)) S ^XTMP("ECX UNREVIEWED CLINICS",ECSC)=ECSCSIGN_U_$P(ECDDIF,U,2,200),^XTMP("ECX UNREVIEWED CLINICS",ECSC,"T")=$$NOW^XLFDT()
"RTN","ECXSCLD",92,0)
 I $D(ECDNEW) S ^XTMP("ECX UNREVIEWED CLINICS",ECSC)=""_U_$P(ECDNEW,U,2,200),^XTMP("ECX UNREVIEWED CLINICS",ECSC,"T")=$$NOW^XLFDT()
"RTN","ECXSCLD",93,0)
 S DIE=728.44,DA=EC,DR="12///TODAY" D ^DIE ;144 Set create date to today's date
"RTN","ECXSCLD",94,0)
 Q
"RTN","ECXSCLD",95,0)
 ;
"RTN","ECXSCLD",96,0)
UPDATE(ECSC,ECDDIF,ECSCSIGN) ;update ^xtmp node with today's changes
"RTN","ECXSCLD",97,0)
 N ECXOLD,J,L1,L2,X,X1,X2
"RTN","ECXSCLD",98,0)
 S ECXOLD=^XTMP("ECX UNREVIEWED CLINICS",ECSC)
"RTN","ECXSCLD",99,0)
 F J=2,3,4,5 S X1=+$P(ECXOLD,U,J),X2=+$P(ECDDIF,U,J) I X2=X1,$P(ECDDIF,U,J)'=$P(ECXOLD,U,J) D
"RTN","ECXSCLD",100,0)
 .S L1=$L($P(ECXOLD,U,J)),L2=$L($P(ECDDIF,U,J))
"RTN","ECXSCLD",101,0)
 .I L1>L2 S $P(ECDDIF,U,J)=$P(ECXOLD,U,J)
"RTN","ECXSCLD",102,0)
 S X1=$E($P(ECXOLD,U,12),1),X2=$E($P(ECDDIF,U,12),1) I X2=X1 S $P(ECDDIF,U,12)=$P(ECXOLD,U,12)
"RTN","ECXSCLD",103,0)
 S X1=$P(ECXOLD,U),X=X1_U_$P(ECDDIF,U,2,200)
"RTN","ECXSCLD",104,0)
 I ECSCSIGN'="",ECSCSIGN'=X1 S X=ECSCSIGN_U_$P(ECDDIF,U,2,200)
"RTN","ECXSCLD",105,0)
 S ^XTMP("ECX UNREVIEWED CLINICS",ECSC)=X
"RTN","ECXSCLD",106,0)
 Q
"RTN","ECXSCLD",107,0)
 ;
"RTN","ECXSCLD",108,0)
SELECT ;select IO device to 'gather clinic stop codes' and print 'unreviewd clinics' report;
"RTN","ECXSCLD",109,0)
 ;for menu option 'Create DSS Clinic Stop Code File' or 'Clinics and DSS Stop Codes Print'
"RTN","ECXSCLD",110,0)
 N DIR,ECALL,IOP,POP,XX,ZTIO,ZTRTN,ZTDESC,ZTSK,ZTSAVE
"RTN","ECXSCLD",111,0)
 ;does user hold key?
"RTN","ECXSCLD",112,0)
 I '$$KCHK^XUSRB("ECXMGR",$G(DUZ)) D  G ENDX
"RTN","ECXSCLD",113,0)
 .W !!,?5,"You do not have approved access to this option.",!,"Exiting...",!!
"RTN","ECXSCLD",114,0)
 .D PAUSE
"RTN","ECXSCLD",115,0)
 W !,"Please select a print device for the 'Unreviewed Clinics' report."
"RTN","ECXSCLD",116,0)
 W !,"**Please note: If printing in foreground, synching files may cause screen delay."
"RTN","ECXSCLD",117,0)
 W ! S %ZIS="Q" D ^%ZIS
"RTN","ECXSCLD",118,0)
 I POP Q
"RTN","ECXSCLD",119,0)
 ;queue the report
"RTN","ECXSCLD",120,0)
 I $D(IO("Q")) D  Q
"RTN","ECXSCLD",121,0)
 . K ZTSAVE S ZTDESC="Gather Clinic Stop Codes for DSS",ZTRTN="START^ECXSCLD"
"RTN","ECXSCLD",122,0)
 . D ^%ZTLOAD
"RTN","ECXSCLD",123,0)
 . I $G(ZTSK) W !,"Queued as Task #: "_ZTSK D ENDX D PAUSE
"RTN","ECXSCLD",124,0)
 W !!,">> Synchronizing Stop Codes file (#728.44) with the Hospital"
"RTN","ECXSCLD",125,0)
 W !,"   Location file (#44)...",!
"RTN","ECXSCLD",126,0)
 D START
"RTN","ECXSCLD",127,0)
 D ^%ZISC,HOME^%ZIS K IO("Q")
"RTN","ECXSCLD",128,0)
 Q
"RTN","ECXSCLD",129,0)
 ;
"RTN","ECXSCLD",130,0)
PRINT ; print worksheet for updates
"RTN","ECXSCLD",131,0)
 N OUT,DIR,ECALL
"RTN","ECXSCLD",132,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",133,0)
 W !!,"This option produces a worksheet of (A) All Clinics, (C) Active, (D) Duplicate, (I) Inactive, "
"RTN","ECXSCLD",134,0)
 W !,"or only the (U) Unreviewed Clinics that are awaiting approval."
"RTN","ECXSCLD",135,0)
 W !!,"Clinics that were defined as ""inactive"" by MAS the last time the option"
"RTN","ECXSCLD",136,0)
 W !,"""Create DSS Clinic Stop Code File"" was run will be indicated with an ""*""."
"RTN","ECXSCLD",137,0)
 W !!,"Choose (X) for exporting the CLINICS AND STOP CODES FILE to a text file for"
"RTN","ECXSCLD",138,0)
 W !,"spreadsheet use.",!
"RTN","ECXSCLD",139,0)
 W !,"**REMINDER - The CREATE option last ran on ",$S($D(^ECX(728.44,"C")):$$FMTE^XLFDT($O(^ECX(728.44,"C"," "),-1),2),1:"- No date on file"),"." ;144
"RTN","ECXSCLD",140,0)
 W !,"If the most recent clinic changes from the HOSPITAL LOCATION file #44",!,"are desired, run the CREATE option before running a report.**",! ;144
"RTN","ECXSCLD",141,0)
 S DIR(0)="S^A:ALL CLINICS;C:ALL ACTIVE CLINICS;D:DUPLICATE CLINICS;I:ALL INACTIVE CLINICS;U:UNREVIEWED CLINICS;X:EXPORT TO TEXT FILE FOR SPREADSHEET USE",DIR("A")="Enter ""A"", ""C"", ""D"", ""I"", ""U"", or ""X""" ;149
"RTN","ECXSCLD",142,0)
 S DIR("?",1)="Enter: ""C"" to print a worksheet of all active DSS Clinic Stops,"
"RTN","ECXSCLD",143,0)
 S DIR("?",2)="Enter: ""I"" to print a worksheet of all inactive DSS Clinic  Stops,"
"RTN","ECXSCLD",144,0)
 S DIR("?",3)="Enter: ""A"" to print a worksheet of all DSS Clinic  Stops,"
"RTN","ECXSCLD",145,0)
 S DIR("?",4)="Enter: ""U"" to print only the Clinic Stops that have not been approved."
"RTN","ECXSCLD",146,0)
 S DIR("?",5)="Enter: ""D"" to print the Duplicate Clinics found." ;149
"RTN","ECXSCLD",147,0)
 S DIR("?")="Enter: ""X"" to export CLINICS AND STOP CODES FILE to a text file."
"RTN","ECXSCLD",148,0)
 D ^DIR K DIR G ENDX:$D(DIRUT) S ECALL=$E(Y)
"RTN","ECXSCLD",149,0)
 I ECALL="X" D EXPORT^ECXSCLD1 Q
"RTN","ECXSCLD",150,0)
 ;sync #728.44 with #44 before printing 'unreviewed'
"RTN","ECXSCLD",151,0)
 S %ZIS="Q" D ^%ZIS Q:POP
"RTN","ECXSCLD",152,0)
 I $D(IO("Q")) K ZTSAVE S ZTDESC="DSS clinic stop code work sheet",ZTRTN="SPRINT^ECXSCLD",ZTSAVE("ECALL")="" D ^%ZTLOAD,HOME^%ZIS Q
"RTN","ECXSCLD",153,0)
SPRINT ; queued entry to print work sheet
"RTN","ECXSCLD",154,0)
 N DC,ECSDC,DIV1,DIV2,APPL,APPL1,APPL2,STOPC,CREDSC,NATC,DUPIEN,FIEN,ECSC,ECSCI,ECSC2 ;149
"RTN","ECXSCLD",155,0)
 U IO
"RTN","ECXSCLD",156,0)
 S QFLG=0,$P(LN,"-",80)="",PG=0
"RTN","ECXSCLD",157,0)
 S ECDATE=$O(^ECX(728.44,"A1","")) I ECDATE S ECDATE=-ECDATE,ECDATE=$$FMTE^XLFDT(ECDATE,"5DF"),ECDATE=$TR(ECDATE," ","0")
"RTN","ECXSCLD",158,0)
 K ^TMP("EC",$J) ;144
"RTN","ECXSCLD",159,0)
 I ECALL'="D" D
"RTN","ECXSCLD",160,0)
 .F J=0:0 S J=$O(^ECX(728.44,J)) Q:'J  I $D(^ECX(728.44,J,0)) S ECSD=^ECX(728.44,J,0) D
"RTN","ECXSCLD",161,0)
 ..I $P($G(^SC(J,0)),U,3)'="C" Q  ;144 Don't include entries that aren't clinic types
"RTN","ECXSCLD",162,0)
 ..I ECALL="A" I $D(^SC(J,0)) S ECSC=$P(^SC(J,0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",163,0)
 ..I (ECALL="I"),($P(ECSD,U,10)) I $D(^SC(J,0)) S ECSC=$P(^SC(J,0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",164,0)
 ..I ((ECALL="C")&($P(ECSD,U,10)=""))!((ECALL="C")&($P(ECSD,U,10)>DT)) I $D(^SC(J,0)) S ECSC=$P(^(0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",165,0)
 ..I ECALL="U" I $P(ECSD,U,7)="" I $D(^SC(J,0)) S ECSC=$P(^SC(J,0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200) ;144
"RTN","ECXSCLD",166,0)
 .D HEAD S ECSC="" I $O(^TMP("EC",$J,ECSC))="" W !!,"NO DATA FOUND FOR WORKSHEET.",! Q  ;144
"RTN","ECXSCLD",167,0)
 .I ECALL'="D" D  ;149
"RTN","ECXSCLD",168,0)
 ..F J=1:1 S ECSC=$O(^TMP("EC",$J,ECSC)) Q:ECSC=""  S ECD=^TMP("EC",$J,ECSC) D SHOWEM Q:QFLG  ;149
"RTN","ECXSCLD",169,0)
 I ECALL="D" D
"RTN","ECXSCLD",170,0)
 .S FIRST=1
"RTN","ECXSCLD",171,0)
 .F DC=0:0 S DC=$O(^ECX(728.44,DC)) Q:'DC  I $D(^ECX(728.44,DC,0)) S ECSDC=^ECX(728.44,DC,0) D
"RTN","ECXSCLD",172,0)
 ..I $P($G(^SC(DC,0)),U,3)'="C"!($P(^ECX(728.44,DC,0),U,10)'="") Q  ;149 Don't include non clinic types or inactive ones
"RTN","ECXSCLD",173,0)
 ..I $D(^SC(DC,0)) D
"RTN","ECXSCLD",174,0)
 ...S STOPC=$P(ECSDC,U,2),CREDSC=$P(ECSDC,U,3),NATC=$P(ECSDC,U,8) ;154 CVW
"RTN","ECXSCLD",175,0)
 ...S DIV=$$GET1^DIQ(44,$P(ECSDC,U),3.5,"I"),APPL=$$GET1^DIQ(44,$P(ECSDC,U),1912,"I")
"RTN","ECXSCLD",176,0)
 ...I 'FIRST D
"RTN","ECXSCLD",177,0)
 ....I ($D(^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL))) D
"RTN","ECXSCLD",178,0)
 .....S ^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL,0)="1"
"RTN","ECXSCLD",179,0)
 ...S ECSC=$P(^SC(DC,0),U),^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL,DC,ECSC)=$P(ECSDC,U,1,200)_U_APPL_U_DIV
"RTN","ECXSCLD",180,0)
 ..I FIRST D
"RTN","ECXSCLD",181,0)
 ...S ECSC=$P(^SC(DC,0),U),^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL,DC,ECSC)=$P(ECSDC,U,1,200)_U_APPL_U_DIV,FIRST=0
"RTN","ECXSCLD",182,0)
 .D HEAD S ECSC="" I $O(^TMP("EC",$J,ECSC))="" W !!,"NO DATA FOUND FOR WORKSHEET.",! Q  ;144
"RTN","ECXSCLD",183,0)
 I ECALL="D" D
"RTN","ECXSCLD",184,0)
 .S KEY="" F  S KEY=$O(^TMP("EC",$J,KEY)) Q:'+KEY  I $G(^TMP("EC",$J,KEY,0)) Q:QFLG  D
"RTN","ECXSCLD",185,0)
 ..S IEN=0 F  S IEN=$O(^TMP("EC",$J,KEY,IEN)) Q:'+IEN!(QFLG)  S NAME="" F  S NAME=$O(^TMP("EC",$J,KEY,IEN,NAME)) Q:NAME=""!(QFLG)  D
"RTN","ECXSCLD",186,0)
 ...I $Y+6>IOSL D HEAD Q:QFLG
"RTN","ECXSCLD",187,0)
 ...W !,$E($P(^SC(IEN,0),U),1,25)
"RTN","ECXSCLD",188,0)
 ...W:$P(^TMP("EC",$J,KEY,IEN,NAME),U,10)]"" "*" ;149
"RTN","ECXSCLD",189,0)
 ...W ?28,$P(^TMP("EC",$J,KEY,IEN,NAME),U),?40,$P(^TMP("EC",$J,KEY,IEN,NAME),U,4),?46,$P(^TMP("EC",$J,KEY,IEN,NAME),U,5),?55,$$GET1^DIQ(728.441,$P(^TMP("EC",$J,KEY,IEN,NAME),U,8),.01)
"RTN","ECXSCLD",190,0)
 ...W ?63,$P(^TMP("EC",$J,KEY,IEN,NAME),U,14),?72,$P(^TMP("EC",$J,KEY,IEN,NAME),U,15)
"RTN","ECXSCLD",191,0)
 ..Q:QFLG  W !
"RTN","ECXSCLD",192,0)
 ..I $Y+6>IOSL D HEAD Q:QFLG
"RTN","ECXSCLD",193,0)
 K ^TMP("EC",$J) ;144 
"RTN","ECXSCLD",194,0)
  I $E(IOST)="C",'QFLG D SS^ECXSCLD1 D ENDX
"RTN","ECXSCLD",195,0)
 W:$Y @IOF D ^%ZISC S ZTREQ="@"
"RTN","ECXSCLD",196,0)
 Q
"RTN","ECXSCLD",197,0)
HEAD ; header for worksheet 149 moved to ECXSCLD1 due to size
"RTN","ECXSCLD",198,0)
 D HEAD^ECXSCLD1
"RTN","ECXSCLD",199,0)
 Q
"RTN","ECXSCLD",200,0)
 ;
"RTN","ECXSCLD",201,0)
SHOWEM ; list clinics for worksheet 149 moved to ECXSCLD1 due to size
"RTN","ECXSCLD",202,0)
 D SHOWEM^ECXSCLD1
"RTN","ECXSCLD",203,0)
 Q
"RTN","ECXSCLD",204,0)
EDIT ; put in DSS stopcodes and which one to send
"RTN","ECXSCLD",205,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",206,0)
 ;patch 142-added for loop to allow for new clinic prompt
"RTN","ECXSCLD",207,0)
 F  W ! K DIC S DIC=728.44,DIC(0)="QEAMZ",DIC("S")="I $P($G(^SC(Y,0)),U,3)=""C""" D ^DIC Q:Y<0  D  ;149
"RTN","ECXSCLD",208,0)
 .S CLIEN1=+Y
"RTN","ECXSCLD",209,0)
 .W !!,"EXISTING CLINIC FILE DATA:" ;,?35,"EXISTING DSS CLINIC FILE DATA:" 154
"RTN","ECXSCLD",210,0)
 .W !!,"STOP CODE:        ",$P(Y(0),U,2) ;,?35,"DSS STOP CODE :   ",$P(Y(0),U,4) 154
"RTN","ECXSCLD",211,0)
 .W !,"CREDIT STOP CODE: ",$P(Y(0),U,3) ;,?35,"DSS CREDIT STOP CODE :",$P(Y(0),U,5) 154
"RTN","ECXSCLD",212,0)
 .W !
"RTN","ECXSCLD",213,0)
 .D ENDCHK
"RTN","ECXSCLD",214,0)
 .;D EDIT1 154 **EDIT1 code was moved to ECXSCLD1 for space
"RTN","ECXSCLD",215,0)
 D ENDX
"RTN","ECXSCLD",216,0)
 Q
"RTN","ECXSCLD",217,0)
ENDCHK ;check validity of clinic
"RTN","ECXSCLD",218,0)
 N ECXB4ARR,ECXAFARR,ECXCHNG ;154
"RTN","ECXSCLD",219,0)
 S ECXCHNG=0 ;154
"RTN","ECXSCLD",220,0)
 ;154 REMOVED ALL ERROR CHECKING SINCE EDIT OF FIELDS REMOVED **EDIT1 code was moved to ECXSCLD1 for space
"RTN","ECXSCLD",221,0)
 ;S CODE=$P(^ECX(728.44,CLIEN1,0),U,4)
"RTN","ECXSCLD",222,0)
 ;K ERR,WRN,ECXERR,WARNING,ERRCHK
"RTN","ECXSCLD",223,0)
 ;S ERRCHK=0
"RTN","ECXSCLD",224,0)
 ;D STOP^ECXSTOP(CODE,"DSS Stop Code",CLIEN1) D ERRPRNT
"RTN","ECXSCLD",225,0)
 ;I $D(ECXERR) S ERRCHK=1
"RTN","ECXSCLD",226,0)
 ;K ERR,WRN,ECXERR,WARNING
"RTN","ECXSCLD",227,0)
 ;S CODE=$P(^ECX(728.44,CLIEN1,0),U,5)
"RTN","ECXSCLD",228,0)
 ;D STOP^ECXSTOP(CODE,"Credit Stop Code",CLIEN1) D ERRPRNT
"RTN","ECXSCLD",229,0)
 ;I $D(ECXERR) S ERRCHK=1
"RTN","ECXSCLD",230,0)
 ;W; !!,"...Validity Checker Complete."
"RTN","ECXSCLD",231,0)
 ;I ERRCHK=1 W !!,"...Errors found please fix." G EDIT1
"RTN","ECXSCLD",232,0)
 ;remaining fields
"RTN","ECXSCLD",233,0)
 D GETS^DIQ(728.44,CLIEN1,"5;7;8","I","ECXB4ARR")
"RTN","ECXSCLD",234,0)
 S DIE=728.44,DA=+CLIEN1
"RTN","ECXSCLD",235,0)
 ;S DR="5//1;S:X'=4 Y=6;7CHAR4 CODE;6///"_DT_";8;10" D ^DIE ;136
"RTN","ECXSCLD",236,0)
 S DR="5//1;S:X'=4 Y=8;7CHAR4 CODE;8;10" D ^DIE ;154
"RTN","ECXSCLD",237,0)
 S:$P(^ECX(728.44,DA,0),U,6)'=4 $P(^ECX(728.44,CLIEN1,0),U,8)="" ;S $P(^(0),U,7)="" ;154
"RTN","ECXSCLD",238,0)
 D GETS^DIQ(728.44,CLIEN1,"5;7;8","I","ECXAFARR") ;154
"RTN","ECXSCLD",239,0)
 F I=5,7,8 I ECXB4ARR(728.44,CLIEN1_",",I,"I")'=ECXAFARR(728.44,CLIEN1_",",I,"I") S ECXCHNG=1 Q  ;154
"RTN","ECXSCLD",240,0)
 I ECXCHNG S $P(^ECX(728.44,CLIEN1,0),U,7)="" ;154
"RTN","ECXSCLD",241,0)
 Q
"RTN","ECXSCLD",242,0)
ERRPRNT ;print errors 149 moved to ECXSCLD1 due to size
"RTN","ECXSCLD",243,0)
 D ERRPRNT^ECXSCLD1
"RTN","ECXSCLD",244,0)
 Q
"RTN","ECXSCLD",245,0)
KILL ;
"RTN","ECXSCLD",246,0)
 K I,WARNING,DIC,DIE,DA,DR,DIR,DIRUT,DTOUT,DUOUT,X,Y,ERRCHK
"RTN","ECXSCLD",247,0)
 K CLIEN1,CODE,ECXMSG,IENS,STOP,CSTOP,AMIS,FDA,OUT,ERR,WRN,ECXERR
"RTN","ECXSCLD",248,0)
 G EDIT
"RTN","ECXSCLD",249,0)
 ;
"RTN","ECXSCLD",250,0)
ERRCHK(CODE,TYPE,CLIEN1) ;check for problems 149 moved to ECXSCLD1 due to size
"RTN","ECXSCLD",251,0)
 Q $$ERRCHK^ECXSCLD1(CODE,TYPE,CLIEN1)
"RTN","ECXSCLD",252,0)
 ;
"RTN","ECXSCLD",253,0)
APPROVE ; approve current DSS Stop and Credit Stop codes
"RTN","ECXSCLD",254,0)
 W !!,"This option allows you to mark the current clinic entries in the CLINICS AND",!,"STOP CODES file (#728.44) as ""reviewed"".  Those entries will then be omitted"
"RTN","ECXSCLD",255,0)
 W !,"from the list printed from the ""Clinic and DSS Stop Codes Print"" when you",!,"choose to print only ""unreviewed"" clinics.",!
"RTN","ECXSCLD",256,0)
 K DIR S DIR(0)="Y",DIR("A",1)="Are you ready to approve the reviewed information provided by the",DIR("A")="""Clinic and DSS Stop Codes Print""",DIR("B")="NO"
"RTN","ECXSCLD",257,0)
 S DIR("?",1)="   Enter:"
"RTN","ECXSCLD",258,0)
 S DIR("?",2)="     ""YES"" if you concur with the ""Clinic and DSS Stop Codes Print"","
"RTN","ECXSCLD",259,0)
 S DIR("?",3)="     ""NO"" or <RET> if you do not want to approve the current information,"
"RTN","ECXSCLD",260,0)
 S DIR("?")="     ""^"" to exit option."
"RTN","ECXSCLD",261,0)
 D ^DIR K DIR I 'Y!($D(DIRUT)) G ENDX
"RTN","ECXSCLD",262,0)
 W ! S ZTRTN="APPLOOP^ECXSCLD",ZTIO="",ZTDESC="Approve DSS stop codes for clinic extract" D ^%ZTLOAD W !!,"...approval queued" G ENDX
"RTN","ECXSCLD",263,0)
 ;
"RTN","ECXSCLD",264,0)
APPLOOP ; queued entry to approve action codes
"RTN","ECXSCLD",265,0)
 F EC=0:0 S EC=$O(^ECX(728.44,EC)) Q:'EC  I $D(^ECX(728.44,EC,0)) S DA=EC,DIE="^ECX(728.44,",DR="6///"_DT D ^DIE
"RTN","ECXSCLD",266,0)
 S ZTREQ="@"
"RTN","ECXSCLD",267,0)
 K ^XTMP("ECX UNREVIEWED CLINICS") S ^XTMP("ECX UNREVIEWED CLINICS",0)=$$FMADD^XLFDT(DT,180)_U_DT_U_"ECX UNREVIEWED CLINICS"
"RTN","ECXSCLD",268,0)
ENDX K X,Y,DA,DR,DIC,DIE,QFLG,PG,LN,ZTRTN,ZTIO,ZTDESC
"RTN","ECXSCLD",269,0)
 K DIR,DIRUT,DTOUT,DUOUT,CLIEN,CODE,ECXMSG,IENS,STOP,CSTOP,AMIS,FDA,OUT
"RTN","ECXSCLD",270,0)
 K J,ECSC,ECSD,ECDATE,ECD,ECN,ECNON,QFLG,PG,LN,SS,POP,%ZIS
"RTN","ECXSCLD",271,0)
 K EC,ECD,ECD2,ECL,ECS,ECS2,ECP,ECSC,ECSC2,ECDB,ECDNEW,ECDDIF,ECSCSIGN,ECDF,ECALL,ID,RD
"RTN","ECXSCLD",272,0)
 ;ECXINAC-patch 142 removed variable,it is no longer used
"RTN","ECXSCLD",273,0)
 Q
"RTN","ECXSCLD",274,0)
 ;
"RTN","ECXSCLD",275,0)
PAUSE ;pause screen
"RTN","ECXSCLD",276,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT,DIRUT
"RTN","ECXSCLD",277,0)
 S DIR(0)="E" W !! D ^DIR W !!
"RTN","ECXSCLD",278,0)
 Q
"RTN","ECXSCLD",279,0)
 ;
"RTN","ECXSCLD",280,0)
LOOK ;queued entry to check for new clinics
"RTN","ECXSCLD",281,0)
 N DAT,ECD0,ECXMISS,ID,ECGRP
"RTN","ECXSCLD",282,0)
 S ECD=$E(DT,1,5)-1-($E(DT,4,5)="01"*8800),ECD0=ECD_"00",ECXMISS=10,ECGRP="SCX" K ^TMP("ECXS",$J)
"RTN","ECXSCLD",283,0)
 F EC=0:0 S EC=$O(^SC(EC)) Q:'EC  I $D(^SC(EC,0)),$P(^SC(EC,0),U,3)="C",'$D(^ECX(728.44,EC)) S DAT=$G(^SC(EC,"I")) D
"RTN","ECXSCLD",284,0)
 .S ID=+DAT,RD=$P(DAT,U,2) I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCLD",285,0)
 .S ^TMP("ECXS",$J,ECXMISS,0)=$J(EC,6)_"    "_$$LJ^XLFSTR($P(^SC(EC,0),U),40),ECXMISS=ECXMISS+1
"RTN","ECXSCLD",286,0)
 D ^ECXSCX1
"RTN","ECXSCLD",287,0)
 Q
"RTN","ECXSCLD1")
0^13^B69216890^B52418084
"RTN","ECXSCLD1",1,0)
ECXSCLD1 ;ALB/DAN <CONT> Enter, Print and Edit Entries in 728.44 ;5/20/15  15:25
"RTN","ECXSCLD1",2,0)
 ;;3.0;DSS EXTRACTS;**132,136,144,149,154**;Dec 22, 1997;Build 13
"RTN","ECXSCLD1",3,0)
 ;
"RTN","ECXSCLD1",4,0)
HEAD ; header for worksheet 149 - moved from ECXSCLD due to size restraints. 
"RTN","ECXSCLD1",5,0)
 D:PG SS Q:QFLG
"RTN","ECXSCLD1",6,0)
 N HEAD1 ;154
"RTN","ECXSCLD1",7,0)
 S HEAD1="WORKSHEET FOR DSS CLINIC STOPS" ;154
"RTN","ECXSCLD1",8,0)
 I (ECALL="D") S HEAD1=HEAD1_" (DUPLICATE CLINIC LIST)" ;154
"RTN","ECXSCLD1",9,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,HEAD1,?71,"Page: ",PG
"RTN","ECXSCLD1",10,0)
 I ECDATE]"" W !,"(last approved on ",ECDATE,")",?59,"Print Date:",$TR($$FMTE^XLFDT(DT,"2F")," ",0) ;144
"RTN","ECXSCLD1",11,0)
 I ECDATE="" W !,"(NEVER APPROVED)",?59,"Print Date:",$TR($$FMTE^XLFDT(DT,"2F")," ",0) ;144
"RTN","ECXSCLD1",12,0)
 I (ECALL'="D") D  ;149 
"RTN","ECXSCLD1",13,0)
 .W !
"RTN","ECXSCLD1",14,0)
 .W !,?1,"CLINIC",?33,"STOP",?42,"CREDIT",?52,"ACTION",?63,"CHAR4",?70,"C/N" ;154 CVW
"RTN","ECXSCLD1",15,0)
 .W !,?33,"CODE",?42,"STOP",?63,"CODE"
"RTN","ECXSCLD1",16,0)
 .W !,?42,"CODE" ;144,149 CVW
"RTN","ECXSCLD1",17,0)
 .W !,"( * - currently inactive)" ;154 CVW
"RTN","ECXSCLD1",18,0)
 .W !,LN
"RTN","ECXSCLD1",19,0)
 I (ECALL="D") D  ;149 
"RTN","ECXSCLD1",20,0)
 .W !
"RTN","ECXSCLD1",21,0)
 .W !,?1,"CLINIC NAME",?28,"CLINIC",?40,"STOP",?46,"CREDIT",?55,"CHAR4",?63,"CLINIC",?72,"DIV" ;154 CVW
"RTN","ECXSCLD1",22,0)
 .W !,?28,"IEN",?40,"CODE",?46,"STOP",?55,"CODE",?63,"APPT" ;154 CVW
"RTN","ECXSCLD1",23,0)
 .W !,?46,"CODE",?63,"LENGTH" ;154 CVW
"RTN","ECXSCLD1",24,0)
 .W !,LN
"RTN","ECXSCLD1",25,0)
 Q
"RTN","ECXSCLD1",26,0)
 ;
"RTN","ECXSCLD1",27,0)
SS ;SCROLL STOPS 149 - moved from ECXSCLD due to size restraints.
"RTN","ECXSCLD1",28,0)
 N JJ,SS
"RTN","ECXSCLD1",29,0)
 W !,LN
"RTN","ECXSCLD1",30,0)
 ;W !,"Key: + - new clinic; ! - updated since last review; * - currently inactiv
"RTN","ECXSCLD1",31,0)
 I $E(IOST)="C" S SS=21-$Y F JJ=1:1:SS W !
"RTN","ECXSCLD1",32,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXSCLD1",33,0)
 Q
"RTN","ECXSCLD1",34,0)
 ;
"RTN","ECXSCLD1",35,0)
ERRCHK(CODE,TYPE,CLIEN1) ;check for problems 149 - moved from ECXSCLD due to size restraints.
"RTN","ECXSCLD1",36,0)
 ;input
"RTN","ECXSCLD1",37,0)
 ;   code: stop code IEN in #40.7
"RTN","ECXSCLD1",38,0)
 ;   type: type (3=dss stop code, 4=dss credit stop code)
"RTN","ECXSCLD1",39,0)
 ;  clien: clinic IEN in #728.44
"RTN","ECXSCLD1",40,0)
 ;output
"RTN","ECXSCLD1",41,0)
 ;  ecxerr: error msg
"RTN","ECXSCLD1",42,0)
 N XCODE,INACT,RTYPE,ERR,WRN
"RTN","ECXSCLD1",43,0)
 K ECXERR,WARNING
"RTN","ECXSCLD1",44,0)
 S ECXERR="",WARNING="",ERR=0
"RTN","ECXSCLD1",45,0)
 Q:'$G(CODE) -1 Q:'$G(CLIEN1) -1
"RTN","ECXSCLD1",46,0)
 Q:(TYPE="") -1 Q:((TYPE<3)&(TYPE>4)) -1
"RTN","ECXSCLD1",47,0)
 S XCODE=$P(^DIC(40.7,CODE,0),"^",2)
"RTN","ECXSCLD1",48,0)
 S TYPE=$S(TYPE=3:"DSS Stop Code",1:"DSS Credit Stop Code")
"RTN","ECXSCLD1",49,0)
 I TYPE="DSS Stop Code" D STOP^ECXSTOP(XCODE,TYPE,,,CODE)
"RTN","ECXSCLD1",50,0)
 I TYPE="DSS Credit Stop Code" D STOP^ECXSTOP(XCODE,TYPE,CLIEN1,,CODE)
"RTN","ECXSCLD1",51,0)
 I $G(ERR)>0,$D(ECXERR(1)) S ERR=$O(ECXERR(0)),ECXERR=ECXERR(ERR) Q ECXERR
"RTN","ECXSCLD1",52,0)
 E  S ECXERR="" Q ECXERR
"RTN","ECXSCLD1",53,0)
 Q ECXERR
"RTN","ECXSCLD1",54,0)
 ;
"RTN","ECXSCLD1",55,0)
SHOWEM ; list clinics for worksheet 149 moved from ECXSCLD due to size. 
"RTN","ECXSCLD1",56,0)
 I $Y+6>IOSL D HEAD Q:QFLG
"RTN","ECXSCLD1",57,0)
 N ECNON1P
"RTN","ECXSCLD1",58,0)
 S ECNON=$P(ECD,U,11),ECNON1P=$E(ECNON,1)
"RTN","ECXSCLD1",59,0)
 S ECNON1P=$S(ECNON1P="Y":"N",1:"C") ;if 'yes', then, 'n'on count clinic
"RTN","ECXSCLD1",60,0)
 S ECNON=ECNON1P_$E(ECNON,2,99)
"RTN","ECXSCLD1",61,0)
 W !!,$E(ECSC,1,25)
"RTN","ECXSCLD1",62,0)
 W:$P(ECD,U,9)]"" "*" ;144
"RTN","ECXSCLD1",63,0)
 W ?33,$P(ECD,U,1),?42,$P(ECD,U,2),?55,$P(ECD,U,5)
"RTN","ECXSCLD1",64,0)
 ;F J=1:1:5 W ?$P("28,35,44,50,62",",",J),$S($P(ECD,U,J):$P(ECD,U,J),J<3:"",1:"_____")
"RTN","ECXSCLD1",65,0)
 S ECN=$P($G(^ECX(728.441,+$P(ECD,U,7),0)),U) W ?63,$S(ECN]"":ECN,1:"____"),?71,ECNON
"RTN","ECXSCLD1",66,0)
 Q
"RTN","ECXSCLD1",67,0)
ERRPRNT ;print errors
"RTN","ECXSCLD1",68,0)
 I $G(ERR)>0,$D(ECXERR) D
"RTN","ECXSCLD1",69,0)
 . W ! S I=0 F  S I=$O(ECXERR(I)) Q:'I  D
"RTN","ECXSCLD1",70,0)
 . . W !,"..",ECXERR(I)
"RTN","ECXSCLD1",71,0)
 I $G(WRN)>0,$D(WARNING) D
"RTN","ECXSCLD1",72,0)
 . W ! S I=0 F  S I=$O(WARNING(I)) Q:'I  D
"RTN","ECXSCLD1",73,0)
 . . W !,"..",WARNING(I)
"RTN","ECXSCLD1",74,0)
 Q
"RTN","ECXSCLD1",75,0)
EDIT1 ;check input & update field #3; allow '@' deletion; allow bypass empty with no entry
"RTN","ECXSCLD1",76,0)
 ;**NOTE THIS CODE IS NOT CURRENT as of patch 154, and it was moved here from ECXSCLD due
"RTN","ECXSCLD1",77,0)
 ;to size constraints. The code was left as documentation of what was changed, and for potential
"RTN","ECXSCLD1",78,0)
 ;re-instatement by the customer. Please note, there are calls that would need to be updated if used 
"RTN","ECXSCLD1",79,0)
 ;again from within this routine. 
"RTN","ECXSCLD1",80,0)
 ;N DIR ;136
"RTN","ECXSCLD1",81,0)
 ;S OUT=0 F  D  Q:OUT
"RTN","ECXSCLD1",82,0)
 ;.K DIC,DIR,ECXMSG,FDA,AMIS,X,Y
"RTN","ECXSCLD1",83,0)
 ;.S STOP=$P(^ECX(728.44,CLIEN1,0),U,4)
"RTN","ECXSCLD1",84,0)
 ;.S DIR(0)="FO^1:99",DIR("A")="DSS STOP CODE (3-digit code only)" I STOP]"" S DIR("B")=STOP
"RTN","ECXSCLD1",85,0)
 ;.S DIR("?")="^S DIC=40.7,DIC(0)=""EMQZ"" D ^DIC"
"RTN","ECXSCLD1",86,0)
 ;.D ^DIR
"RTN","ECXSCLD1",87,0)
 ;.I X="@" D  Q
"RTN","ECXSCLD1",88,0)
 ;..S IENS=CLIEN1_",",FDA(728.44,IENS,3)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD1",89,0)
 ;..S OUT=1 W "   deleted..."
"RTN","ECXSCLD1",90,0)
 ;.I X="" S X=STOP K DIRUT S OUT=2 Q
"RTN","ECXSCLD1",91,0)
 ;.S DIC("A")="DSS STOP CODE (3-digit code only): "
"RTN","ECXSCLD1",92,0)
 ;.S DIC="^DIC(40.7,",DIC(0)="EMQZ"
"RTN","ECXSCLD1",93,0)
 ;.S DIC("S")="I $P(^(0),U,3)=""""" D ^DIC
"RTN","ECXSCLD1",94,0)
 ;.I X="@" D  Q
"RTN","ECXSCLD1",95,0)
 ;..S IENS=CLIEN1_",",FDA(728.44,IENS,3)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD1",96,0)
 ;..S OUT=2 W "   deleted..."
"RTN","ECXSCLD1",97,0)
 ;.I X="" K DIRUT S OUT=2 Q
"RTN","ECXSCLD1",98,0)
 ;.I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) S OUT=3 Q
"RTN","ECXSCLD1",99,0)
 ;.I +X'=X W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD1",100,0)
 ;.I +Y'>0  Q
"RTN","ECXSCLD1",101,0)
 ;.S AMIS=$P(^DIC(40.7,+Y,0),"^",2)
"RTN","ECXSCLD1",102,0)
 ;.S CODE=+Y,ECXMSG=$$ERRCHK(CODE,3,CLIEN1)
"RTN","ECXSCLD1",103,0)
 ;.I ECXMSG=-1 W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD1",104,0)
 ;.I $G(ECXMSG)]"" W !,?5,ECXMSG,! Q
"RTN","ECXSCLD1",105,0)
 ;.S IENS=CLIEN1_",",FDA(728.44,IENS,3)=AMIS D FILE^DIE("U","FDA")
"RTN","ECXSCLD1",106,0)
 ;.S OUT=1
"RTN","ECXSCLD1",107,0)
 ;I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) G ENDX
"RTN","ECXSCLD1",108,0)
 ;check input & update field #4; allow '@' deletion; allow bypass empty with no entry
"RTN","ECXSCLD1",109,0)
 ;S OUT=0 F  D  G:OUT=1 ENDCHK
"RTN","ECXSCLD1",110,0)
 ;.K DIC,DIR,ECXMSG,FDA,AMIS,X,Y
"RTN","ECXSCLD1",111,0)
 ;.S CSTOP=$P(^ECX(728.44,CLIEN1,0),U,5)
"RTN","ECXSCLD1",112,0)
 ;.S DIR(0)="FO^1:99",DIR("A")="DSS CREDIT STOP CODE (3-digit code only)" I CSTOP]"" S DIR("B")=CSTOP
"RTN","ECXSCLD1",113,0)
 ;.S DIR("?")="^S DIC=40.7,DIC(0)=""EMQZ"" D ^DIC"
"RTN","ECXSCLD1",114,0)
 ;.D ^DIR
"RTN","ECXSCLD1",115,0)
 ;.I X="@" D  Q
"RTN","ECXSCLD1",116,0)
 ;..S IENS=CLIEN1_",",FDA(728.44,IENS,4)=X D FILE^DIE("","FDA")
"RTN","ECXSCLD1",117,0)
 ;..S OUT=1 W "   deleted..."
"RTN","ECXSCLD1",118,0)
 ;.I X="" S X=CSTOP K DIRUT S OUT=1 Q
"RTN","ECXSCLD1",119,0)
 ;.S DIC("A")="DSS CREDIT STOP CODE (3-digit code only): "
"RTN","ECXSCLD1",120,0)
 ;.S DIC("S")="I $P(^(0),U,3)=""""" D ^DIC
"RTN","ECXSCLD1",121,0)
 ;.S DIC=40.7,DIC(0)="EMQZ" D ^DIC
"RTN","ECXSCLD1",122,0)
 ;.I X="" K DIRUT S OUT=1 Q
"RTN","ECXSCLD1",123,0)
 ;.I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) S OUT=1 Q
"RTN","ECXSCLD1",124,0)
 ;.I +X'=X W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD1",125,0)
 ;.I +Y'>0  Q
"RTN","ECXSCLD1",126,0)
 ;.S AMIS=$P(^DIC(40.7,+Y,0),"^",2)
"RTN","ECXSCLD1",127,0)
 ;.S CODE=+Y,ECXMSG=$$ERRCHK(CODE,4,CLIEN1)
"RTN","ECXSCLD1",128,0)
 ;.I ECXMSG=-1 W !,?5,"Invalid... try again." Q
"RTN","ECXSCLD1",129,0)
 ;.I $G(ECXMSG)]"" W !,?5,ECXMSG,! Q
"RTN","ECXSCLD1",130,0)
 ;.S IENS=CLIEN1_",",FDA(728.44,IENS,4)=AMIS D FILE^DIE("U","FDA")
"RTN","ECXSCLD1",131,0)
 ;.S OUT=1
"RTN","ECXSCLD1",132,0)
 ;I ($G(DIRUT)!$G(DUOUT)!$G(DTOUT)) G ENDX
"RTN","ECXSCLD1",133,0)
 ;K I,WARNING,DIC,DIE,DA,DR,DIR,DIRUT,DTOUT,DUOUT,X,Y,ERRCHK
"RTN","ECXSCLD1",134,0)
 ;K CLIEN1,CODE,ECXMSG,IENS,STOP,CSTOP,AMIS,FDA,OUT,ERR,WRN,ECXERR
"RTN","ECXSCLD1",135,0)
 Q
"RTN","ECXSCLD1",136,0)
EXPORT ;Export clinic review data to spreedsheet
"RTN","ECXSCLD1",137,0)
 N DIC,DIR,FLDS,BY,FR,L,DIOBEG,DIR,DIS,Y,DIRUT,POP,DUOUT,DTOUT,DIROUT,X,%ZIS,IOP,CCNT,ECXCLX,APPL ;144
"RTN","ECXSCLD1",138,0)
 W !!,"Select which clinics to include on the spreadsheet for exporting." ;144
"RTN","ECXSCLD1",139,0)
 S DIR(0)="SAO^A:ALL CLINICS;C:ACTIVE CLINICS;D:DUPLICATE CLINICS;I:INACTIVE CLINICS;U:UNREVIEWED CLINICS",DIR("?")="Enter letter associated with the group of clinics to include on the spreadsheet" ;149
"RTN","ECXSCLD1",140,0)
 S DIR("A",1)="Select (A)ll, a(C)tive, (D)uplicate, (I)nactive, " ;149
"RTN","ECXSCLD1",141,0)
 S DIR("A")="or (U)nreviewed clinics for export: "
"RTN","ECXSCLD1",142,0)
 D ^DIR K DIR I $D(DIRUT) Q  ;144 Stop if no selection made
"RTN","ECXSCLD1",143,0)
 S ECALL=$E(Y)
"RTN","ECXSCLD1",144,0)
 I ECALL'="D" D
"RTN","ECXSCLD1",145,0)
 .W !!,"To ensure all data is captured during the export:" ;144
"RTN","ECXSCLD1",146,0)
 .W !!,"1. Select 'Logging...' from the File Menu. Select your file, and where to save." ;144
"RTN","ECXSCLD1",147,0)
 .W !,"2. On the Setup menu, select 'Display...',then 'screen' tab and modify 'columns'",!,"   setting to at least 225 characters." ;144
"RTN","ECXSCLD1",148,0)
 .W !,"3. The DEVICE input for the columns should also contain a large enough",!,"   parameter (e.g. 225).  The DEVICE prompt is defaulted to 0;225;99999 for you.",!,"   You may change it if need be." ;144
"RTN","ECXSCLD1",149,0)
 .W !,"Example: DEVICE: 0;225;99999 *Where 0 is your screen, 225 is the margin width",!?17,"and 99999 is the screen length."
"RTN","ECXSCLD1",150,0)
 .W !!,"NOTE:  In order for all number fields, such as SSN and Feeder Key, to be",!,"displayed correctly in the spreadsheet, these fields must be formatted as Text",!,"when importing the data into the spreadsheet.",! ;144
"RTN","ECXSCLD1",151,0)
 .S DIC="^ECX(728.44,",FLDS="[ECX CLINIC REVIEW EXPORT]",BY="NUMBER",FR="",L=0
"RTN","ECXSCLD1",152,0)
 .;The following line has been patched in 136 and 144
"RTN","ECXSCLD1",153,0)
 .S DIOBEG="W ""IEN^Clinic^Stop Code^Credit Stop Code^Action^Last Approved Date^CHAR4 Code^Inact Date^React Date^Clinic Type" ;154 CVW
"RTN","ECXSCLD1",154,0)
 .S DIOBEG=DIOBEG_"^App Len^Div^App Type^Non Cnt^OOS^OOS Calling Pkg^Var Length Appt^DSS Prod Dept"""
"RTN","ECXSCLD1",155,0)
 .S DIS(0)=$S(Y="U":"I $P(^ECX(728.44,D0,0),U,7)=""""",Y="I":"I $P(^ECX(728.44,D0,0),U,10)'=""""",Y="C":"I $P(^ECX(728.44,D0,0),U,10)=""""",1:"I 1") ;144
"RTN","ECXSCLD1",156,0)
 .S DIS(1)="I $P($G(^SC(D0,0)),U,3)=""C""" ;144 Only include clinics in report
"RTN","ECXSCLD1",157,0)
 .S %ZIS="N",%ZIS("B")="0;225;99999" D ^%ZIS Q:POP  S IOP=ION_";"_IOM_";"_IOSL ;144
"RTN","ECXSCLD1",158,0)
 .D EN1^DIP
"RTN","ECXSCLD1",159,0)
 I ECALL="D" D
"RTN","ECXSCLD1",160,0)
 .K ^TMP("EC",$J)
"RTN","ECXSCLD1",161,0)
 .W !!,"Gathering data for export..."
"RTN","ECXSCLD1",162,0)
 .S FIRST=1,X=0,CCNT=1
"RTN","ECXSCLD1",163,0)
 .F DC=0:0 S DC=$O(^ECX(728.44,DC)) Q:'DC  I $D(^ECX(728.44,DC,0)) S ECSDC=^ECX(728.44,DC,0) D
"RTN","ECXSCLD1",164,0)
 ..I $P($G(^SC(DC,0)),U,3)'="C"!($P(^ECX(728.44,DC,0),U,10)'="") Q  ;149 Don't include non clinic types or inactive ones
"RTN","ECXSCLD1",165,0)
 ..S STOPC=$P(ECSDC,U,2),CREDSC=$P(ECSDC,U,3),NATC=$P(ECSDC,U,8) ;154 CVW
"RTN","ECXSCLD1",166,0)
 ..S DIV=$$GET1^DIQ(44,$P(ECSDC,U),3.5,"I"),APPL=$$GET1^DIQ(44,$P(ECSDC,U),1912,"I")
"RTN","ECXSCLD1",167,0)
 ..I 'FIRST D
"RTN","ECXSCLD1",168,0)
 ...I ($D(^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL))) D
"RTN","ECXSCLD1",169,0)
 ....S ^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL,0)="1"
"RTN","ECXSCLD1",170,0)
 ...S ECSC=$P(^SC(DC,0),U),^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL,DC,ECSC)=$P(ECSDC,U,1,200)_U_APPL_U_DIV
"RTN","ECXSCLD1",171,0)
 ..I FIRST D
"RTN","ECXSCLD1",172,0)
 ...S ECSC=$P(^SC(DC,0),U),^TMP("EC",$J,1_STOPC_CREDSC_NATC_DIV_APPL,DC,ECSC)=$P(ECSDC,U,1,200)_U_APPL_U_DIV,FIRST=0
"RTN","ECXSCLD1",173,0)
 .K ^TMP($J,"ECXPORT")
"RTN","ECXSCLD1",174,0)
 .S ^TMP($J,"ECXPORT",0)="CLINIC NAME^CLINIC IEN^STOP CODE^CREDIT STOP CODE^CHAR4 CODE^CLINIC APPOINTMENT LENGTH^DIVISION"
"RTN","ECXSCLD1",175,0)
 .S KEY="" F  S KEY=$O(^TMP("EC",$J,KEY)) Q:'+KEY  I $G(^TMP("EC",$J,KEY,0)) D
"RTN","ECXSCLD1",176,0)
 ..S IEN=0 F  S IEN=$O(^TMP("EC",$J,KEY,IEN)) Q:'+IEN  S NAME="" F  S NAME=$O(^TMP("EC",$J,KEY,IEN,NAME)) Q:NAME=""  D
"RTN","ECXSCLD1",177,0)
 ...S ECXCLX=^TMP("EC",$J,KEY,IEN,NAME)
"RTN","ECXSCLD1",178,0)
 ...S ^TMP($J,"ECXPORT",CCNT)=$E($P(^SC(IEN,0),U),1,25)_$S($P(ECXCLX,U,10)]"":"*",1:"")_U_$P(ECXCLX,U)_U_$P(ECXCLX,U,4)_U_$P(ECXCLX,U,5)_U_$$GET1^DIQ(728.441,$P(ECXCLX,U,8),.01)_U_$P(ECXCLX,U,14)_U_$P(ECXCLX,U,15)
"RTN","ECXSCLD1",179,0)
 ...S CCNT=CCNT+1
"RTN","ECXSCLD1",180,0)
 ..S ^TMP($J,"ECXPORT",CCNT)=U,CCNT=CCNT+1
"RTN","ECXSCLD1",181,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXSCLD1",182,0)
 I '$G(POP) D  ;144 Don't print the following lines if the report didn't print
"RTN","ECXSCLD1",183,0)
 .I ECALL'="D" D
"RTN","ECXSCLD1",184,0)
 ..W !!,"Turn off your logging..." ;144
"RTN","ECXSCLD1",185,0)
 ..W !,"...Then, pull your export text file into your spreadsheet.",! ;144
"RTN","ECXSCLD1",186,0)
 ..S DIR(0)="E",DIR("A")="Press any key to continue" D ^DIR K DIR
"RTN","ECXSCLD1",187,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXSCLD1",188,0)
 D HOME^%ZIS
"RTN","ECXSCLD1",189,0)
 Q
"RTN","ECXSCRP")
0^10^B28387744^B29901160
"RTN","ECXSCRP",1,0)
ECXSCRP ;ALB/JAM - Restricted Stop Code Nonconforming Clinic Report; 07/24/03 ;2/11/14  16:56
"RTN","ECXSCRP",2,0)
 ;;3.0;DSS EXTRACTS;**57,58,120,126,144,149,154**;Dec 22, 1997;Build 13
"RTN","ECXSCRP",3,0)
 ;
"RTN","ECXSCRP",4,0)
EN ;foreground entry point
"RTN","ECXSCRP",5,0)
 N ZTRTN,ZTDESC,ZTIO,ZTQUEUED,DIR,DIRUT,X,Y,ECX,ECXSD,PSC,SSC,ECXPCF,ECXPORT,CNT ;144
"RTN","ECXSCRP",6,0)
 W @IOF
"RTN","ECXSCRP",7,0)
 W !,"This option reviews the Primary and Secondary Stop Codes and any existing Four" ;144
"RTN","ECXSCRP",8,0)
 W !,"Character Codes in the Clinics and Stop Codes file #728.44." ;144
"RTN","ECXSCRP",9,0)
 W !,"It produces a report highlighting any nonconformance reasons that pertain" ;144
"RTN","ECXSCRP",10,0)
 W !,"to the Primary and Secondary Codes, or the Four Character Codes if present." ;144
"RTN","ECXSCRP",11,0)
 W !,"Please contact the responsible party for corrective action." ;144
"RTN","ECXSCRP",12,0)
 S DIR(0)="SO^A:Active Clinics;I:Inactive Clinics;B:Both"
"RTN","ECXSCRP",13,0)
 S DIR("A")="Select Report"
"RTN","ECXSCRP",14,0)
 S DIR("?",1)="Enter an A for Active Clinics, I for Inactive Clinics,"
"RTN","ECXSCRP",15,0)
 S DIR("?")="B for Both Active and Inactive Clinics"
"RTN","ECXSCRP",16,0)
 D ^DIR K DIR I $D(DIRUT) G END
"RTN","ECXSCRP",17,0)
 S ECXPCF=Y
"RTN","ECXSCRP",18,0)
 W !,"Please be patient, this may take a few moments..." ;144
"RTN","ECXSCRP",19,0)
 ;Synch primary & secondary stop codes from file #44 with #728.44
"RTN","ECXSCRP",20,0)
 S ECX=0 F  S ECX=$O(^ECX(728.44,ECX)) Q:'ECX  D FIX^ECXSCLD(ECX)
"RTN","ECXSCRP",21,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXSCRP",22,0)
 .K ^TMP($J,"ECXPORT") ;144
"RTN","ECXSCRP",23,0)
 .S ^TMP($J,"ECXPORT",0)="IEN^CLINIC NAME^STOP CODE^CREDIT STOP CODE^CHAR4 CODE^REASON FOR NON-CONFORMANCE" ;144,149;154
"RTN","ECXSCRP",24,0)
 .S CNT=1 ;144
"RTN","ECXSCRP",25,0)
 .D PROCESS ;144
"RTN","ECXSCRP",26,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXSCRP",27,0)
 ;device selection
"RTN","ECXSCRP",28,0)
 W !!,"** REPORT REQUIRES 132 COLUMNS TO PRINT CORRECTLY **",!! ;144 CVW
"RTN","ECXSCRP",29,0)
 K IOP,%ZIS,POP,IO("Q")
"RTN","ECXSCRP",30,0)
 ;S %ZIS("A")="Select Device: ",%ZIS="QM" D ^%ZIS I POP G END
"RTN","ECXSCRP",31,0)
 S %ZIS="",%ZIS("B")="0;132;99999" D ^%ZIS I POP G END
"RTN","ECXSCRP",32,0)
 I $D(IO("Q")) K IO("Q") D  G END
"RTN","ECXSCRP",33,0)
 .S ZTDESC="Restricted Stop Code Report",ZTSAVE("ECXPCF")="" ;154
"RTN","ECXSCRP",34,0)
 .S ZTRTN="PROCESS^ECXSCRP",ZTIO=ION D ^%ZTLOAD,HOME^%ZIS K ZTSK
"RTN","ECXSCRP",35,0)
 U IO
"RTN","ECXSCRP",36,0)
 D PROCESS
"RTN","ECXSCRP",37,0)
END D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECXSCRP",38,0)
 Q
"RTN","ECXSCRP",39,0)
 ;
"RTN","ECXSCRP",40,0)
PROCESS ;background entry point
"RTN","ECXSCRP",41,0)
 ;locate invalid Stop Code in HOSPITAL LOCATION file #44 & CLINICS
"RTN","ECXSCRP",42,0)
 ;AND STOP CODES file #728.44
"RTN","ECXSCRP",43,0)
 N ECX,NAM,STR,IEN,PSC,SSC,CNTX,ECXPG,ECXOUT,LNS,DPC,DSC,SCIEN,ECXF
"RTN","ECXSCRP",44,0)
 N INDT,TYP,ACF,HTYP,CLNF,ECXRDT,NCODE,%H ;144
"RTN","ECXSCRP",45,0)
 S %H=$H D YX^%DTC S ECXRDT=Y
"RTN","ECXSCRP",46,0)
 S $P(LNS,"-",132)="",(CNTX,IEN,ECXOUT,ECXF)=0,ECXPG=1,CLNF=0
"RTN","ECXSCRP",47,0)
 ;search file #728.44 for invalid stop code entries
"RTN","ECXSCRP",48,0)
 D:'$G(ECXPORT) HDR S IEN=0 ;144
"RTN","ECXSCRP",49,0)
 F  S IEN=$O(^ECX(728.44,IEN)) Q:'IEN  D  Q:ECXOUT  S:ECXF CNTX=CNTX+1
"RTN","ECXSCRP",50,0)
 .I $P($G(^SC(IEN,0)),U,3)'="C" Q  ;149 If entry isn't a clinic, don't include it on report
"RTN","ECXSCRP",51,0)
 .S ECX=$G(^ECX(728.44,IEN,0)),PSC=$P(ECX,U,2),SSC=$P(ECX,U,3),CLNF=0
"RTN","ECXSCRP",52,0)
 .S DPC=$P(ECX,U,4),DSC=$P(ECX,U,5),NAM=$$GET1^DIQ(44,$P(ECX,U),.01)
"RTN","ECXSCRP",53,0)
 .S INDT=$P(ECX,U,10),ECXF=0 I INDT'="" S NAM="*"_NAM
"RTN","ECXSCRP",54,0)
 .S ACF=$S($E(NAM)="*":0,1:1),HTYP=$$GET1^DIQ(44,$P(ECX,U),2,"I")
"RTN","ECXSCRP",55,0)
 .S NCODE=$$GET1^DIQ(728.441,$P(ECX,U,8),.01) ;144 cvw 
"RTN","ECXSCRP",56,0)
 .I $S((ECXPCF="A")&('ACF):1,(ECXPCF="I")&(ACF):1,1:0) Q
"RTN","ECXSCRP",57,0)
 .D  I ECXOUT Q
"RTN","ECXSCRP",58,0)
 ..I PSC="" S STR="Missing primary code" D PRN Q
"RTN","ECXSCRP",59,0)
 ..D SCCHK(PSC,"P") I $D(STR) D PRN
"RTN","ECXSCRP",60,0)
 .I SSC'="" D SCCHK(SSC,"S") I $D(STR) D PRN
"RTN","ECXSCRP",61,0)
 .D  I ECXOUT Q 
"RTN","ECXSCRP",62,0)
 ..;I DPC="" S STR="No DSS primary code" D PRN Q ;154
"RTN","ECXSCRP",63,0)
 ..;I DPC'=PSC D SCCHK(DPC,"P") I $D(STR) D PRN
"RTN","ECXSCRP",64,0)
 .;I DSC'="",DSC'=SSC D SCCHK(DSC,"S") I $D(STR) D PRN
"RTN","ECXSCRP",65,0)
 .D  I ECXOUT Q  ;144 cvw
"RTN","ECXSCRP",66,0)
 ..I ($P(ECX,U,8)'="")&(NCODE="") S NCODE=$P(ECX,U,8),STR="CHAR4 Code invalid" D PRN Q  ;144,149 cvw
"RTN","ECXSCRP",67,0)
 ..I $$GET1^DIQ(728.441,$P(ECX,U,8),3)'="" S STR="CHAR4 Code inactive" D PRN Q  ;144,149 cvw 
"RTN","ECXSCRP",68,0)
 I '$G(ECXPORT) W !!,?25,$S(CNTX:CNTX,1:"NO")_" PROBLEM CLINICS FOUND." ;144
"RTN","ECXSCRP",69,0)
 Q
"RTN","ECXSCRP",70,0)
PRN ;print line
"RTN","ECXSCRP",71,0)
 Q:CLNF  I HTYP'="C" S STR="Not a Clinic" S CLNF=1
"RTN","ECXSCRP",72,0)
 I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=IEN_"^"_NAM_"^"_PSC_"^"_SSC_"^"_NCODE_"^"_STR,CNT=CNT+1 Q  ;154
"RTN","ECXSCRP",73,0)
 I ($Y+3)>IOSL D PAGE,HDR I ECXOUT Q
"RTN","ECXSCRP",74,0)
 W !,IEN,?14,$E(NAM,1,24),?48,PSC,?58,SSC,?75,NCODE,?91,STR ;CVW 149
"RTN","ECXSCRP",75,0)
 S ECXF=1
"RTN","ECXSCRP",76,0)
 Q
"RTN","ECXSCRP",77,0)
 ;
"RTN","ECXSCRP",78,0)
SCCHK(SCIEN,TYP) ;check stop code against file 40.7
"RTN","ECXSCRP",79,0)
 N SCN,RTY,CTY,SCI,INACT,ARRY,I,FLG
"RTN","ECXSCRP",80,0)
 K STR
"RTN","ECXSCRP",81,0)
 S CTY=$S(TYP="P":"^P^E^",1:"^S^E^")
"RTN","ECXSCRP",82,0)
 D SCIEN(SCIEN) I SCI="" D  Q
"RTN","ECXSCRP",83,0)
 .;S SCI=$$SCIEN(SCIEN) I SCI="" D  Q
"RTN","ECXSCRP",84,0)
 .I TYP="S" Q:SSC=PSC  Q:DSC=DPC
"RTN","ECXSCRP",85,0)
 .S STR=SCIEN_" Invalid Stop Code"
"RTN","ECXSCRP",86,0)
 S SCN=$G(^DIC(40.7,SCI,0)),RTY=$P(SCN,U,6),INACT=$P(SCN,U,3)
"RTN","ECXSCRP",87,0)
 I INACT D  Q
"RTN","ECXSCRP",88,0)
 .I INACT>DT S STR=SCIEN_" Inactive in future"
"RTN","ECXSCRP",89,0)
 .E  S STR=SCIEN_" Code is inactive"
"RTN","ECXSCRP",90,0)
 I $P(SCN,U,2)="" S STR="No pointer in file #40.7" Q
"RTN","ECXSCRP",91,0)
 I RTY="" S STR=SCIEN_" No restriction type" Q
"RTN","ECXSCRP",92,0)
 I CTY'[("^"_RTY_"^") D
"RTN","ECXSCRP",93,0)
 .S STR=SCIEN_" Cannot be "_$S(TYP="P":"prim",1:"second")_"ary"
"RTN","ECXSCRP",94,0)
 Q
"RTN","ECXSCRP",95,0)
PAGE ;
"RTN","ECXSCRP",96,0)
 N SS,JJ,DIR,X,Y
"RTN","ECXSCRP",97,0)
 I $E(IOST,1,2)="C-" D
"RTN","ECXSCRP",98,0)
 . S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXSCRP",99,0)
 . S DIR(0)="E" W ! D ^DIR K DIR I 'Y S ECXOUT=1
"RTN","ECXSCRP",100,0)
 Q
"RTN","ECXSCRP",101,0)
 ;
"RTN","ECXSCRP",102,0)
SCIEN(SCIEN) ;Get stop code IEN
"RTN","ECXSCRP",103,0)
 I SCIEN="" Q ""
"RTN","ECXSCRP",104,0)
 ;S SCIEN=$O(^DIC(40.7,"C",SCIEN,0))
"RTN","ECXSCRP",105,0)
 ;Q SCIEN
"RTN","ECXSCRP",106,0)
 ;find active code if one
"RTN","ECXSCRP",107,0)
 S SCI=$O(^DIC(40.7,"C",SCIEN,0))
"RTN","ECXSCRP",108,0)
 I $O(^DIC(40.7,"C",SCIEN,SCI))'>0 Q
"RTN","ECXSCRP",109,0)
 ;must be some duplicates so find the best one
"RTN","ECXSCRP",110,0)
 S I=""
"RTN","ECXSCRP",111,0)
 F  S I=$O(^DIC(40.7,"C",SCIEN,I)) Q:'I  D
"RTN","ECXSCRP",112,0)
 . Q:'$D(^DIC(40.7,I,0))
"RTN","ECXSCRP",113,0)
 . S INACT=$P(^DIC(40.7,I,0),"^",3),FLG="A" D
"RTN","ECXSCRP",114,0)
 . . I INACT,((DT>INACT)!(DT=INACT)) S FLG="I"
"RTN","ECXSCRP",115,0)
 . S ARRY(FLG,I)=""
"RTN","ECXSCRP",116,0)
 I $D(ARRY("A")) S SCI=$O(ARRY("A",0))
"RTN","ECXSCRP",117,0)
 Q SCIEN
"RTN","ECXSCRP",118,0)
 ;
"RTN","ECXSCRP",119,0)
HDR ;header for data from file #728.44
"RTN","ECXSCRP",120,0)
 W @IOF
"RTN","ECXSCRP",121,0)
 W ECXRDT,?73,"Page: ",ECXPG,!
"RTN","ECXSCRP",122,0)
 W !,?18,"STOP CODE NON-CONFORMING CLINICS REPORT",!,?32
"RTN","ECXSCRP",123,0)
 W $S(ECXPCF="A":"Active",ECXPCF="I":"Inactive",1:"All")_" Clinics",!
"RTN","ECXSCRP",124,0)
 W !,"CLINICS AND STOP CODES File (#728.44) - (Use 'Enter/Edit DSS "
"RTN","ECXSCRP",125,0)
 W "Stop Codes for",!,?25,"Clinics' [ECXSCEDIT] menu option to "
"RTN","ECXSCRP",126,0)
 W "make corrections)",!! ;CVW 149
"RTN","ECXSCRP",127,0)
 W "IEN #",?14,$S(ECXPCF="B":"(*currently inactive)",1:"CLINIC NAME")
"RTN","ECXSCRP",128,0)
 W ?48,"STOP",?58,"CREDIT",?75,"CHAR4",?91,"REASON FOR NON-"
"RTN","ECXSCRP",129,0)
 W !,?48,"CODE",?58,"STOP CODE",?75,"CODE",?91,"CONFORMANCE"
"RTN","ECXSCRP",130,0)
 W !,$E(LNS,1,132)
"RTN","ECXSCRP",131,0)
 S ECXPG=ECXPG+1
"RTN","ECXSCRP",132,0)
 Q
"RTN","ECXSCX1")
0^25^B95411432^B94246405
"RTN","ECXSCX1",1,0)
ECXSCX1 ;ALB/JAP,BIR/DMA-Clinic Extract Message ;4/14/15  16:26
"RTN","ECXSCX1",2,0)
 ;;3.0;DSS EXTRACTS;**8,28,24,27,29,30,31,33,84,92,105,127,132,144,149,154**;Dec 22, 1997;Build 13
"RTN","ECXSCX1",3,0)
EN ;entry point from ecxscx
"RTN","ECXSCX1",4,0)
 N ECX
"RTN","ECXSCX1",5,0)
 ;send missing clinic message
"RTN","ECXSCX1",6,0)
 S ECX=$O(^TMP($J,"ECXS","MISS",0)) D
"RTN","ECXSCX1",7,0)
 .Q:ECX=""
"RTN","ECXSCX1",8,0)
 .S XMSUB="MISSING CLINICS in File #728.44",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",9,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",10,0)
 .F ECX=1:1:5 S ^TMP($J,"ECXS","MISS",ECX,0)=$P($T(MSG+ECX),";;",2)
"RTN","ECXSCX1",11,0)
 .S XMTEXT="^TMP($J,""ECXS"",""MISS""," D ^XMD
"RTN","ECXSCX1",12,0)
 ;send no division message
"RTN","ECXSCX1",13,0)
 S ECX=$O(^TMP($J,"ECXS","DIV",0)) D
"RTN","ECXSCX1",14,0)
 .Q:ECX=""
"RTN","ECXSCX1",15,0)
 .S XMSUB="CLINICS w/o DIVISION Data",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",16,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",17,0)
 .F ECX=1:1:5 S ^TMP($J,"ECXS","DIV",ECX,0)=$P($T(MSG2+ECX),";;",2)
"RTN","ECXSCX1",18,0)
 .S XMTEXT="^TMP($J,""ECXS"",""DIV""," D ^XMD
"RTN","ECXSCX1",19,0)
 ;cleanup
"RTN","ECXSCX1",20,0)
 K ^TMP($J,"ECXS")
"RTN","ECXSCX1",21,0)
 Q
"RTN","ECXSCX1",22,0)
MSG ;text for missing clinic
"RTN","ECXSCX1",23,0)
 ;;The following clinics have not been entered into the CLINIC AND
"RTN","ECXSCX1",24,0)
 ;;STOP CODES file (#728.44).  If any listed clinic is currently
"RTN","ECXSCX1",25,0)
 ;;active, please use the options 'Create DSS Clinic Stop Code File'
"RTN","ECXSCX1",26,0)
 ;;and 'Enter/Edit DSS Stop Codes for Clinics' to update this file.
"RTN","ECXSCX1",27,0)
 ;;  
"RTN","ECXSCX1",28,0)
 ;
"RTN","ECXSCX1",29,0)
MSG2 ;text for missing division
"RTN","ECXSCX1",30,0)
 ;;The following clinics in the HOSPITAL LOCATION file (#44) have not
"RTN","ECXSCX1",31,0)
 ;;been assigned to a division from the MEDICAL CENTER DIVISION file 
"RTN","ECXSCX1",32,0)
 ;;(#40.8).  CLI extract records associated with these clinics have
"RTN","ECXSCX1",33,0)
 ;;been given a default Division identifier of "1".
"RTN","ECXSCX1",34,0)
 ;;
"RTN","ECXSCX1",35,0)
 ;
"RTN","ECXSCX1",36,0)
MISS ;load ^tmp if clinic missing from #728.44
"RTN","ECXSCX1",37,0)
 N DAT,ID,RD
"RTN","ECXSCX1",38,0)
 S (ID,RD)=""
"RTN","ECXSCX1",39,0)
 S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCX1",40,0)
 ;ignore inactive clinics
"RTN","ECXSCX1",41,0)
 I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",42,0)
 I '$D(^TMP($J,"ECXS","ECXMISS")) S ^TMP($J,"ECXS","ECXMISS")=10
"RTN","ECXSCX1",43,0)
 S ECXMISS=^TMP($J,"ECXS","ECXMISS")
"RTN","ECXSCX1",44,0)
 S ^TMP($J,"ECXS","MISS",ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),U),40)_ECSC_"/"_ECCSC
"RTN","ECXSCX1",45,0)
 S ^TMP($J,"ECXS","ECXMISS")=ECXMISS+1
"RTN","ECXSCX1",46,0)
 Q
"RTN","ECXSCX1",47,0)
 ;
"RTN","ECXSCX1",48,0)
NODIV ;load ^tmp if clinic w/o division
"RTN","ECXSCX1",49,0)
 N DAT,ID,RD
"RTN","ECXSCX1",50,0)
 S (ID,RD)=""
"RTN","ECXSCX1",51,0)
 S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCX1",52,0)
 ;ignore inactive clinics
"RTN","ECXSCX1",53,0)
 I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",54,0)
 I '$D(^TMP($J,"ECXS","ECXMISS")) S ^TMP($J,"ECXS","ECXMISS")=10
"RTN","ECXSCX1",55,0)
 S ECXMISS=^TMP($J,"ECXS","ECXMISS")
"RTN","ECXSCX1",56,0)
 S ^TMP($J,"ECXS","DIV",ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),U),40)
"RTN","ECXSCX1",57,0)
 S ^TMP($J,"ECXS","ECXMISS")=ECXMISS+1
"RTN","ECXSCX1",58,0)
 Q
"RTN","ECXSCX1",59,0)
 ;
"RTN","ECXSCX1",60,0)
FEEDER(ECXSC,ECXSD,ECXP1,ECXP2,ECXP3,ECXSEND,ECXDIV) ;get transmission style and feeder key variables
"RTN","ECXSCX1",61,0)
 ;feeder key = primary stop code_secondary stop code_length of appointment_national clinic code_noshow indicator
"RTN","ECXSCX1",62,0)
 ;   input
"RTN","ECXSCX1",63,0)
 ;   ECXSC = ien of clinic in file #44 (required)
"RTN","ECXSCX1",64,0)
 ;   ECXSD  = start date of extract date range (required)
"RTN","ECXSCX1",65,0)
 ;   ECXP1,ECXP2,ECXP3,ECXSEND passed by reference (required)
"RTN","ECXSCX1",66,0)
 ;   output (passed-by-reference variables)
"RTN","ECXSCX1",67,0)
 ;   ECXP1  = primary stop code
"RTN","ECXSCX1",68,0)
 ;   ECXP2  = secondary stop code
"RTN","ECXSCX1",69,0)
 ;   ECXP3  = field #7 of file #728.44
"RTN","ECXSCX1",70,0)
 ;   ECXSEND = field #5 of file #728.44
"RTN","ECXSCX1",71,0)
 ;   ECXDIV  = field #3.5 of file #44
"RTN","ECXSCX1",72,0)
 N ECSC,ECCSC,ECSD1,ECXNC,ECXMISS,CLIN,SC
"RTN","ECXSCX1",73,0)
 S (ECXP1,ECXP2)="000",ECXP3="0000"
"RTN","ECXSCX1",74,0)
 S ECXSEND=1,ECXDIV=0
"RTN","ECXSCX1",75,0)
 Q:+ECXSC=0
"RTN","ECXSCX1",76,0)
 ;get needed data from ^tmp
"RTN","ECXSCX1",77,0)
 I $D(^TMP($J,"ECXS","SC",ECXSC)) D
"RTN","ECXSCX1",78,0)
 .S CLIN=^TMP($J,"ECXS","SC",ECXSC)
"RTN","ECXSCX1",79,0)
 .S ECXP1=$P(CLIN,U),ECXP2=$P(CLIN,U,2),ECXP3=$P(CLIN,U,3),ECXSEND=$P(CLIN,U,4),ECXDIV=$P(CLIN,U,5)
"RTN","ECXSCX1",80,0)
 .S ECXDIV=+$P($G(^TMP($J,"ECXCL",ECXSC)),U,4) S:ECXDIV=0 ECXDIV=1
"RTN","ECXSCX1",81,0)
 ;otherwise, set needed data in ^tmp
"RTN","ECXSCX1",82,0)
 I '$D(^TMP($J,"ECXS","SC",ECXSC)) D
"RTN","ECXSCX1",83,0)
 .;get division or send no division msg
"RTN","ECXSCX1",84,0)
 .S ECXDIV=+$P($G(^TMP($J,"ECXCL",ECXSC)),U,4)
"RTN","ECXSCX1",85,0)
 .I ECXDIV=0 S SC=ECXSC D NODIV S ECXDIV=1
"RTN","ECXSCX1",86,0)
 .;get other data from file #44 if no #727.44 record; send missing clinic msg
"RTN","ECXSCX1",87,0)
 .I '$D(^ECX(728.44,ECXSC,0)) D
"RTN","ECXSCX1",88,0)
 ..S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P(^(0),U,18)
"RTN","ECXSCX1",89,0)
 ..S SC=ECXSC,ECSD1=ECXSD D MISS
"RTN","ECXSCX1",90,0)
 ..S:ECSC ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2),ECXP1=$$RJ^XLFSTR(+ECXP1,3,0)
"RTN","ECXSCX1",91,0)
 .;otherwise get other data from file #728.44
"RTN","ECXSCX1",92,0)
 .S EC=$G(^ECX(728.44,ECXSC,0)) D
"RTN","ECXSCX1",93,0)
 ..Q:EC=""
"RTN","ECXSCX1",94,0)
 ..S ECXSEND=$P(EC,U,6)
"RTN","ECXSCX1",95,0)
 ..Q:ECXSEND=6
"RTN","ECXSCX1",96,0)
 ..S ECSC=+$P(EC,U,4),ECCSC=+$P(EC,U,5)
"RTN","ECXSCX1",97,0)
 ..I 'ECSC S ECSC=+$P(EC,U,2),ECCSC=+$P(EC,U,3)
"RTN","ECXSCX1",98,0)
 ..I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXSCX1",99,0)
 ..;if primary stop not valid, use file #44 record
"RTN","ECXSCX1",100,0)
 ..I 'ECSC S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P($G(^(0)),U,18) I ECSC D
"RTN","ECXSCX1",101,0)
 ...S ECXP1=+$P($G(^DIC(40.7,ECSC,0)),U,2)
"RTN","ECXSCX1",102,0)
 ...S:ECCSC ECXP2=+$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXSCX1",103,0)
 ...S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXSCX1",104,0)
 .;for action code=1, secondary stop code is always "000"
"RTN","ECXSCX1",105,0)
 .I ECXSEND=1 S ECXP2="000"
"RTN","ECXSCX1",106,0)
 .;action code of 2 or 3 should not be used, but continue to follow v2t11 logic
"RTN","ECXSCX1",107,0)
 .I ECXSEND=2 S ECXP1=ECXP2,ECXP2="000"
"RTN","ECXSCX1",108,0)
 .;for action code=4, need to get national clinic code
"RTN","ECXSCX1",109,0)
 .I ECXSEND=4 D
"RTN","ECXSCX1",110,0)
 ..S ECXNC=+$P($G(^ECX(728.44,ECXSC,0)),U,8)
"RTN","ECXSCX1",111,0)
 ..I ECXNC S ECXNC=$P($G(^ECX(728.441,ECXNC,0)),U),ECXP3=$$RJ^XLFSTR(ECXNC,4,0)
"RTN","ECXSCX1",112,0)
 .;set data in ^tmp
"RTN","ECXSCX1",113,0)
 .S ^TMP($J,"ECXS","SC",ECXSC)=ECXP1_U_ECXP2_U_ECXP3_U_ECXSEND
"RTN","ECXSCX1",114,0)
 Q
"RTN","ECXSCX1",115,0)
 ;
"RTN","ECXSCX1",116,0)
VISIT(ECXDFN,ECXVISIT,ECXVIST,ECXERR) ;get visit specific data
"RTN","ECXSCX1",117,0)
 ;input  ECXVISIT  = pointer to file #9000010
"RTN","ECXSCX1",118,0)
 ;       ECXSVC  = sc percentage
"RTN","ECXSCX1",119,0)
 ;output ECXVSIT = data array
"RTN","ECXSCX1",120,0)
 ;       ECXERR  = 1 indicates error; otherwise, 0
"RTN","ECXSCX1",121,0)
 N AO,ARRAY,CM,CNT,CPT,DA,DATE,DA,DIQ,ICD,ICD9,IR,LEN,M,MOD,MST,NUM,NOD1,NODE
"RTN","ECXSCX1",122,0)
 N PROV,PROVPC,REC,VAL,VISIT,X,Y,HNC,PGE,CV,SHAD,ENCSC,ENCCL ;144
"RTN","ECXSCX1",123,0)
 S ECXERR=0,VISIT=ECXVISIT
"RTN","ECXSCX1",124,0)
 S (ECXVIST("AO"),ECXVIST("IR"),ECXVIST("PGE"),ECXVIST("HNC"))=""
"RTN","ECXSCX1",125,0)
 S (ECXVIST("MST"),ECXVIST("CV"),ECXVIST("SHAD"),ECXVIST("ENCSC"),ECXVIST("ENCCL"))="" ;144
"RTN","ECXSCX1",126,0)
 ;MRY-2/4/2010, extracts don't seem to use encounter (visit) "CV".
"RTN","ECXSCX1",127,0)
 ;extracts use eligibility API for some reason.  Added "CV" anyway.
"RTN","ECXSCX1",128,0)
 S (ECXVIST("PROV"),ECXVIST("PROV CLASS"))=""
"RTN","ECXSCX1",129,0)
 S (ECXVIST("PROV NPI"),ECXVIST("SOURCE"))=""
"RTN","ECXSCX1",130,0)
 F I="P",1,2,3,4 S ECXVIST("ICD9"_I)=""
"RTN","ECXSCX1",131,0)
 F I=1:1:8 S ECXVIST("CPT"_I)=""
"RTN","ECXSCX1",132,0)
 D ENCEVENT^PXAPI(VISIT)
"RTN","ECXSCX1",133,0)
 I $O(^TMP("PXKENC",$J,VISIT,""))']"" K ECXVIST S ECXERR=1
"RTN","ECXSCX1",134,0)
 Q:ECXERR
"RTN","ECXSCX1",135,0)
 S DATE=$P($P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,0),U,1),".",1)
"RTN","ECXSCX1",136,0)
 S ECXVIST("SOURCE")=$P($G(^TMP("PXKENC",$J,VISIT,"VST",VISIT,812)),U,3)
"RTN","ECXSCX1",137,0)
 ;get icd codes upto 5, will be stored in ICD9 named variables, even if they're 10 codes (or any future version)
"RTN","ECXSCX1",138,0)
 K ARY S ICD("P")=0,ICD("S")=0,(ARY,REC)=""
"RTN","ECXSCX1",139,0)
 F  S REC=$O(^TMP("PXKENC",$J,VISIT,"POV",REC)) Q:REC=""  D
"RTN","ECXSCX1",140,0)
 .S VAL=^TMP("PXKENC",$J,VISIT,"POV",REC,0) Q:'VAL
"RTN","ECXSCX1",141,0)
 .I $P(VAL,U,12)="P" D
"RTN","ECXSCX1",142,0)
 ..S:'$D(ARY("P",+VAL)) CNT=ICD("P")+1,ICD("P",CNT)=+VAL,ICD("P")=CNT
"RTN","ECXSCX1",143,0)
 ..S ARY("P",+VAL)=""
"RTN","ECXSCX1",144,0)
 .I $P(VAL,U,12)'="P" D
"RTN","ECXSCX1",145,0)
 ..S:'$D(ARY("S",+VAL)) CNT=ICD("S")+1,ICD("S",CNT)=+VAL,ICD("S")=CNT
"RTN","ECXSCX1",146,0)
 ..S ARY("S",+VAL)=""
"RTN","ECXSCX1",147,0)
 S CNT=0,ECXVIST("ICD9P")=$S(+$G(ICD("P",1)):$$CODEC^ICDEX(80,ICD("P",1)),1:"") ;154 Get code if value exists in ICD("P",1) else return null
"RTN","ECXSCX1",148,0)
 F I=2:1 Q:'$D(ICD("P",I))  D  Q:CNT>4
"RTN","ECXSCX1",149,0)
 .S CNT=CNT+1,ECXVIST("ICD9"_CNT)=$S(+$G(ICD("P",I)):$$CODEC^ICDEX(80,ICD("P",I)),1:"") ;154 Get code if value exists in ICD("P",I) else return null
"RTN","ECXSCX1",150,0)
 I CNT<4 F I=1:1:8 Q:'$D(ICD("S",I))  D  Q:CNT>4
"RTN","ECXSCX1",151,0)
 .I '$D(ARY("P",ICD("S",I))) D
"RTN","ECXSCX1",152,0)
 ..S CNT=CNT+1,ECXVIST("ICD9"_CNT)=$S(+$G(ICD("S",I)):$$CODEC^ICDEX(80,ICD("S",I)),1:"") ;154 Get code if value exists in ICD("S",I) else return null
"RTN","ECXSCX1",153,0)
 ;get first provider designated as primary
"RTN","ECXSCX1",154,0)
 ;if no primary, then get first physician provider
"RTN","ECXSCX1",155,0)
 ;if no physician, then get first provider
"RTN","ECXSCX1",156,0)
 S (PROV,PROVPC)=""
"RTN","ECXSCX1",157,0)
 I $O(^TMP("PXKENC",$J,VISIT,"PRV",0)) D
"RTN","ECXSCX1",158,0)
 .S (REC,VAL)=0 D
"RTN","ECXSCX1",159,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)!(VAL)  D
"RTN","ECXSCX1",160,0)
 ...S:($P(^(REC,0),U,4)="P") VAL=+^(0)
"RTN","ECXSCX1",161,0)
 ...S PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE)
"RTN","ECXSCX1",162,0)
 .I 'VAL S (REC,VAL)=0 D
"RTN","ECXSCX1",163,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)!(VAL)  D
"RTN","ECXSCX1",164,0)
 ...S (PROV,VAL)=+^(REC,0)
"RTN","ECXSCX1",165,0)
 ...S PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE) Q:PROVPC=""
"RTN","ECXSCX1",166,0)
 ...S NUM=$E(PROVPC,2,7) S:(NUM<110000)!(NUM>119999) VAL=0,PROVPC=""
"RTN","ECXSCX1",167,0)
 .I 'VAL D
"RTN","ECXSCX1",168,0)
 ..S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",0)) Q:('REC)!(VAL)
"RTN","ECXSCX1",169,0)
 ..S VAL=+^(REC,0),PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE)
"RTN","ECXSCX1",170,0)
 .S:PROV]"" PROV="2"_PROV
"RTN","ECXSCX1",171,0)
 S ECXVIST("PROV")=PROV,ECXVIST("PROV CLASS")=PROVPC
"RTN","ECXSCX1",172,0)
 S ECXVIST("PROV NPI")=""
"RTN","ECXSCX1",173,0)
 ;get 1-7 secondary physicians
"RTN","ECXSCX1",174,0)
 F I=1:1:7 S ECXVIST("PROVS"_I)="" ;144 two more providers cvw
"RTN","ECXSCX1",175,0)
 I $O(^TMP("PXKENC",$J,VISIT,"PRV",0)) D
"RTN","ECXSCX1",176,0)
 .S (REC,VAL,COUNTS)=0 D
"RTN","ECXSCX1",177,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)  D
"RTN","ECXSCX1",178,0)
 ...Q:$P(^(REC,0),U,4)'="S"
"RTN","ECXSCX1",179,0)
 ...S VAL=+^(0) I $E(PROV,2,99)=VAL Q  ;don't process, primary
"RTN","ECXSCX1",180,0)
 ...S COUNTS=COUNTS+1 Q:(COUNTS>7)  ;144 two more providers cvw
"RTN","ECXSCX1",181,0)
 ...S PROVS=VAL,PROVSPC=$$PRVCLASS^ECXUTL(PROVS,DATE)
"RTN","ECXSCX1",182,0)
 ...S PROVSNPI=$$NPI^XUSNPI("Individual_ID",PROVS,DATE)
"RTN","ECXSCX1",183,0)
 ...S:+PROVSNPI'>0 PROVSNPI="" S PROVSNPI=$P(PROVSNPI,U)
"RTN","ECXSCX1",184,0)
 ...S ECXVIST("PROVS"_COUNTS)="2"_PROVS_U_PROVSPC_U_PROVSNPI
"RTN","ECXSCX1",185,0)
 ;get cpt codes upto 8 & modifiers upto 5
"RTN","ECXSCX1",186,0)
 S CNT=1,PROV=$E(PROV,2,99)
"RTN","ECXSCX1",187,0)
 S ECXVIST("PRIMPROC")="" ;149 Initialize primary procedure
"RTN","ECXSCX1",188,0)
 D:$O(^TMP("PXKENC",$J,VISIT,"CPT",0))
"RTN","ECXSCX1",189,0)
 .S REC=0 D:PROV]""
"RTN","ECXSCX1",190,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC)) Q:'REC  D  Q:CNT>8
"RTN","ECXSCX1",191,0)
 ...S CPT="",NODE=$G(^TMP("PXKENC",$J,VISIT,"CPT",REC,12))
"RTN","ECXSCX1",192,0)
 ...Q:NODE=""
"RTN","ECXSCX1",193,0)
 ...S NOD1=$S($P(NODE,U,4)=PROV:^TMP("PXKENC",$J,VISIT,"CPT",REC,0),1:"")
"RTN","ECXSCX1",194,0)
 ...Q:$P(NOD1,U)=""
"RTN","ECXSCX1",195,0)
 ...S Q="00"_+$P(NOD1,U,16),Q=$S(+Q:$E(Q,$L(Q)-1,$L(Q)),1:"01")
"RTN","ECXSCX1",196,0)
 ...S CPT=$P(NOD1,U),M=0,MOD=""
"RTN","ECXSCX1",197,0)
 ...F I=1:1:5 S M=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M)) Q:'M  D
"RTN","ECXSCX1",198,0)
 ....S MOD=MOD_$S(MOD'="":";",1:"")
"RTN","ECXSCX1",199,0)
 ....S MOD=MOD_$P(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M,0),U)
"RTN","ECXSCX1",200,0)
 ...S ECXVIST("CPT"_CNT)=$$CPT^ECXUTL3(CPT,MOD,Q) S:$P(NOD1,U,7)="Y" ECXVIST("PRIMPROC")=ECXVIST("CPT"_CNT) S CNT=CNT+1 ;149
"RTN","ECXSCX1",201,0)
 ...K ^TMP("PXKENC",$J,VISIT,"CPT",REC)
"RTN","ECXSCX1",202,0)
 ..Q:CNT>8
"RTN","ECXSCX1",203,0)
 .Q:CNT>8  S REC=0
"RTN","ECXSCX1",204,0)
 .F  S REC=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC)) Q:'REC  D  Q:CNT>8
"RTN","ECXSCX1",205,0)
 ..S CPT="",NOD1=$G(^TMP("PXKENC",$J,VISIT,"CPT",REC,0))
"RTN","ECXSCX1",206,0)
 ..Q:$P(NOD1,U)=""
"RTN","ECXSCX1",207,0)
 ..S Q="00"_+$P(NOD1,U,16),Q=$S(+Q:$E(Q,$L(Q)-1,$L(Q)),1:"01")
"RTN","ECXSCX1",208,0)
 ..S CPT=$P(NOD1,U),M=0,MOD=""
"RTN","ECXSCX1",209,0)
 ..F I=1:1:5 S M=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M)) Q:'M  D
"RTN","ECXSCX1",210,0)
 ...S MOD=MOD_$S(MOD'="":";",1:"")
"RTN","ECXSCX1",211,0)
 ...S MOD=MOD_$P(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M,0),U)
"RTN","ECXSCX1",212,0)
 ..S ECXVIST("CPT"_CNT)=$$CPT^ECXUTL3(CPT,MOD,Q) S:$P(NOD1,U,7)="Y" ECXVIST("PRIMPROC")=ECXVIST("CPT"_CNT) S CNT=CNT+1 ;149
"RTN","ECXSCX1",213,0)
 ..K ^TMP("PXKENC",$J,VISIT,"CPT",REC)
"RTN","ECXSCX1",214,0)
 ..Q:CNT>8
"RTN","ECXSCX1",215,0)
 S:ECXVIST("CPT1")="" ECXVIST("CPT1")=9919901
"RTN","ECXSCX1",216,0)
 ;ao, ir, mst, pge, hnc, cv, shad
"RTN","ECXSCX1",217,0)
 S (AO,IR,MST,PGE,HNC,CV,SHAD,ENCSC,ENCCL)="" ;144
"RTN","ECXSCX1",218,0)
 I $D(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800)) D
"RTN","ECXSCX1",219,0)
 .S ENCSC=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U) ;144 Encounter Service Connected
"RTN","ECXSCX1",220,0)
 .S AO=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,2)
"RTN","ECXSCX1",221,0)
 .S IR=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,3),MST=$P(^(800),U,5)
"RTN","ECXSCX1",222,0)
 .S PGE=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,4),HNC=$P(^(800),U,6)
"RTN","ECXSCX1",223,0)
 .S CV=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,7),SHAD=$P(^(800),U,8)
"RTN","ECXSCX1",224,0)
 .S ENCCL=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,9) ;144,154 Encounter Camp Lejeune
"RTN","ECXSCX1",225,0)
 .S ECXVIST("AO")=$S(AO=0:"N",AO=1:"Y",1:"")
"RTN","ECXSCX1",226,0)
 .S ECXVIST("IR")=$S(IR=0:"N",IR=1:"Y",1:"")
"RTN","ECXSCX1",227,0)
 .S ECXVIST("MST")=$S(MST=0:"N",MST=1:"Y",1:"")
"RTN","ECXSCX1",228,0)
 .S ECXVIST("PGE")=$S(PGE=0:"N",PGE=1:"Y",1:"")
"RTN","ECXSCX1",229,0)
 .S ECXVIST("HNC")=$S(HNC=0:"N",HNC=1:"Y",1:"")
"RTN","ECXSCX1",230,0)
 .S ECXVIST("CV")=$S(CV=0:"N",CV=1:"Y",1:"")
"RTN","ECXSCX1",231,0)
 .S ECXVIST("SHAD")=$S(SHAD=0:"N",SHAD=1:"Y",1:"")
"RTN","ECXSCX1",232,0)
 .S ECXVIST("ENCSC")=$S(ENCSC=0:"N",ENCSC=1:"Y",1:"") ;144 Encounter Service Connected
"RTN","ECXSCX1",233,0)
 .S ECXVIST("ENCCL")=$S(ENCCL=0:"N",ENCCL=1:"Y",1:"") ;144 Encounter Camp Lejeune.
"RTN","ECXSCX1",234,0)
 Q
"RTN","ECXSCX3")
0^19^B21371068^B20792817
"RTN","ECXSCX3",1,0)
ECXSCX3 ;ALB/DHE- DSS Clinic & Stop Codes Validity Report 728.44 ;2/11/14  17:03
"RTN","ECXSCX3",2,0)
 ;;3.0;DSS EXTRACTS;**120,144,149,154**;Dec 22, 1997;Build 13
"RTN","ECXSCX3",3,0)
EN ;entry point from option
"RTN","ECXSCX3",4,0)
 ;
"RTN","ECXSCX3",5,0)
 N ZTDESC,ZTRTN,ZTSAVE,ZTSK,ZUSR,ZTDTH,POP,ECXPORT,CNT,NUM ;144
"RTN","ECXSCX3",6,0)
 W !!,"This report will display stop code information of the ACTIVE ",!,"clinics in the Clinics and Stop Code file (#728.44).  It will",!,"display stop codes that do not conform to the Business Rules for ",!,"Valid Stop Codes." ;144
"RTN","ECXSCX3",7,0)
 W !!,"**REMINDER - The CREATE option last ran on ",$S($D(^ECX(728.44,"C")):$$FMTE^XLFDT($O(^ECX(728.44,"C"," "),-1),2),1:"- No date on file"),"." ;154
"RTN","ECXSCX3",8,0)
 W !,"If the most recent clinic changes from the HOSPITAL LOCATION file #44",!,"are desired, run the CREATE option before running a report.**" ;154
"RTN","ECXSCX3",9,0)
 I '$D(^ECX(728.44)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCX3",10,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXSCX3",11,0)
 .K ^TMP($J,"ECXPORT") ;144
"RTN","ECXSCX3",12,0)
 .S ^TMP($J,"ECXPORT",0)="IEN^CLINIC NAME^STOP CODE^CREDIT STOP CODE^CHAR4 CODE^ERROR 1^ERROR 2^ERROR 3^WARNING" ;144,149,154
"RTN","ECXSCX3",13,0)
 .S CNT=1 ;144
"RTN","ECXSCX3",14,0)
 .D START ;144
"RTN","ECXSCX3",15,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXSCX3",16,0)
 .K ECXERR,WARNING D ^ECXKILL ;144
"RTN","ECXSCX3",17,0)
 S %ZIS="Q" D ^%ZIS G:POP EXIT
"RTN","ECXSCX3",18,0)
 I $D(IO("Q")) D  Q
"RTN","ECXSCX3",19,0)
 .K ZTSAVE S ZTDESC="DSS Identify Invalid Stop and Credit Stop Codes",ZTRTN="START^ECXSCX3",ZTDTH=$H
"RTN","ECXSCX3",20,0)
 .D ^%ZTLOAD
"RTN","ECXSCX3",21,0)
 .D ^%ZISC,HOME^%ZIS
"RTN","ECXSCX3",22,0)
 .W !,$S($D(ZTSK):"REQUEST QUEUED!",1:"REQUEST CANCELLED!")
"RTN","ECXSCX3",23,0)
 D START
"RTN","ECXSCX3",24,0)
EXIT D ^%ZISC,HOME^%ZIS
"RTN","ECXSCX3",25,0)
 Q
"RTN","ECXSCX3",26,0)
START ; queued entry to print report
"RTN","ECXSCX3",27,0)
 U IO
"RTN","ECXSCX3",28,0)
 N CLIEN,CODE,ERR,QUIT,WRN,TOT,CODE1,CODE2,CODE3,CODE4,CODE5,CLNAME,DATE
"RTN","ECXSCX3",29,0)
 N I,INACT,Y,HEAD,NONAME,QFLG,LN,PG,DAT,REACT
"RTN","ECXSCX3",30,0)
 K WARNING,ECXERR,TYPE
"RTN","ECXSCX3",31,0)
 S QFLG=0,$P(LN,"-",80)="",PG=0
"RTN","ECXSCX3",32,0)
 S TOT=0,QUIT=""
"RTN","ECXSCX3",33,0)
 I '$G(ECXPORT) D HEAD ;144
"RTN","ECXSCX3",34,0)
 S CLIEN=0 F  S CLIEN=$O(^ECX(728.44,CLIEN)) Q:'CLIEN  D  Q:QUIT
"RTN","ECXSCX3",35,0)
 .Q:'$D(^ECX(728.44,CLIEN,0))
"RTN","ECXSCX3",36,0)
 .I $P($G(^SC(CLIEN,0)),U,3)'="C" Q  ;149 Don't include it on report if it's not a clinic
"RTN","ECXSCX3",37,0)
 .S DAT=$G(^SC(CLIEN,"I")),INACT=+DAT,REACT=$P(DAT,"^",2)
"RTN","ECXSCX3",38,0)
 .;S INACT=$P(^ECX(728.44,CLIEN,0),"^",10)
"RTN","ECXSCX3",39,0)
 .;I (INACT'>DT)&(INACT'="") Q
"RTN","ECXSCX3",40,0)
 .I INACT,('REACT),INACT'>DT Q
"RTN","ECXSCX3",41,0)
 .I INACT,INACT'>DT I REACT,DT<REACT Q
"RTN","ECXSCX3",42,0)
 .S CLNAME=$S($G(CLIEN)>0:$E($$GET1^DIQ(44,CLIEN,.01,"E"),1,30),1:NONAME)
"RTN","ECXSCX3",43,0)
 .K WARNING,ECXERR,TYPE,ERR,WRN
"RTN","ECXSCX3",44,0)
 .S DATE=DT
"RTN","ECXSCX3",45,0)
 .S CODE1=$P(^ECX(728.44,CLIEN,0),"^",2),TYPE="Stop Code" D STOP^ECXSTOP(CODE1,TYPE,CLIEN,DATE)
"RTN","ECXSCX3",46,0)
 .S CODE2=$P(^ECX(728.44,CLIEN,0),"^",3),TYPE="Credit Stop Code" D STOP^ECXSTOP(CODE2,TYPE,CLIEN,DATE)
"RTN","ECXSCX3",47,0)
 .;S CODE3=$P(^ECX(728.44,CLIEN,0),"^",4),TYPE="DSS Stop Code" D STOP^ECXSTOP(CODE3,TYPE,CLIEN,DATE) ;154
"RTN","ECXSCX3",48,0)
 .;S CODE4=$P(^ECX(728.44,CLIEN,0),"^",5),TYPE="DSS Credit Stop Code" D STOP^ECXSTOP(CODE4,TYPE,CLIEN,DATE) ;154
"RTN","ECXSCX3",49,0)
 .S CODE5=$P(^ECX(728.44,CLIEN,0),"^",8),TYPE="CHAR4 Code" D STOP^ECXSTOP(CODE5,TYPE,CLIEN,DATE) ;149 CVW
"RTN","ECXSCX3",50,0)
 .I $D(ECXERR)!($D(WARNING)) S TOT=TOT+1 D  Q:QUIT
"RTN","ECXSCX3",51,0)
 ..I (CODE5'="")&($$GET1^DIQ(728.441,CODE5,.01)'="") S CODE5=$$GET1^DIQ(728.441,CODE5,.01)
"RTN","ECXSCX3",52,0)
 ..I $G(ECXPORT) D  Q  ;144
"RTN","ECXSCX3",53,0)
 ...S ^TMP($J,"ECXPORT",CNT)=CLIEN_"^"_CLNAME_"^"_$G(CODE1)_"^"_$G(CODE2)_"^"_$G(CODE5)_"^" ;144 154
"RTN","ECXSCX3",54,0)
 ...S NUM=0 F I=1:1:3 S:NUM'="" NUM=$O(ECXERR(NUM)) S ^TMP($J,"ECXPORT",CNT)=^TMP($J,"ECXPORT",CNT)_$S(NUM'="":$G(ECXERR(NUM)),1:"")_"^" ;144
"RTN","ECXSCX3",55,0)
 ...S NUM=+$O(WARNING(0)) S ^TMP($J,"ECXPORT",CNT)=^TMP($J,"ECXPORT",CNT)_$G(WARNING(NUM)),CNT=CNT+1 ;144
"RTN","ECXSCX3",56,0)
 ..I $Y>(IOSL-5) D HEAD
"RTN","ECXSCX3",57,0)
 ..W !!,CLIEN,?13,CLNAME,?53,$G(CODE1),?63,$G(CODE2),?72,$G(CODE5) ;149,154
"RTN","ECXSCX3",58,0)
 ..I $D(ECXERR) W !,"ERRORS:" D
"RTN","ECXSCX3",59,0)
 ...S I=0 F  S I=$O(ECXERR(I)) Q:'I  D  Q:QUIT
"RTN","ECXSCX3",60,0)
 ....W !?6,ECXERR(I) D ADD
"RTN","ECXSCX3",61,0)
 ..I $D(WARNING) W !,"WARNINGS:" D
"RTN","ECXSCX3",62,0)
 ...S I=0 F  S I=$O(WARNING(I)) Q:'I  D  Q:QUIT
"RTN","ECXSCX3",63,0)
 ....W !?6,WARNING(I) D ADD
"RTN","ECXSCX3",64,0)
 Q:QUIT!($G(ECXPORT))  ;144
"RTN","ECXSCX3",65,0)
 ;
"RTN","ECXSCX3",66,0)
OUT ;
"RTN","ECXSCX3",67,0)
 I TOT'>0 W !!!?6,"NO PROBLEMS FOUND."
"RTN","ECXSCX3",68,0)
 E  W !!!,?10,TOT," PROBLEM CLINICS FOUND."
"RTN","ECXSCX3",69,0)
 W:$Y @IOF D ^%ZISC S ZTREQ="@"
"RTN","ECXSCX3",70,0)
 K QFLG,PG,LN,ECXERR,WARNING
"RTN","ECXSCX3",71,0)
 D ^ECXKILL
"RTN","ECXSCX3",72,0)
 Q
"RTN","ECXSCX3",73,0)
 ;
"RTN","ECXSCX3",74,0)
HEAD ; header for worksheet
"RTN","ECXSCX3",75,0)
 W:$E(IOST,1,2)["C-"!(PG>1) @IOF S PG=PG+1
"RTN","ECXSCX3",76,0)
 W !,"CLINIC & STOP CODES VALIDITY REPORT",?71,"Page: ",PG
"RTN","ECXSCX3",77,0)
 W !!,"IEN#",?13,"CLINIC NAME",?53,"STOP",?63,"CREDIT",?72,"CHAR4" ;144,154 CVW
"RTN","ECXSCX3",78,0)
 W !?53,"CODE",?63,"STOP",?72,"CODE" ;144,149,154 CVW
"RTN","ECXSCX3",79,0)
 W !?63,"CODE" ;149,154 CVW
"RTN","ECXSCX3",80,0)
 W !,LN
"RTN","ECXSCX3",81,0)
 Q
"RTN","ECXSCX3",82,0)
 ;
"RTN","ECXSCX3",83,0)
PAUSE N DIR,DIRUT,X,Y
"RTN","ECXSCX3",84,0)
 F  Q:$Y>(IOSL-3)  W !
"RTN","ECXSCX3",85,0)
 S DIR(0)="E"
"RTN","ECXSCX3",86,0)
 D ^DIR
"RTN","ECXSCX3",87,0)
 I ('(+Y))!($D(DIRUT)) S QUIT=1
"RTN","ECXSCX3",88,0)
 Q
"RTN","ECXSCX3",89,0)
ADD I $E(IOST,1,2)="C-",($Y>(IOSL-5)) D
"RTN","ECXSCX3",90,0)
 . D PAUSE Q:QUIT
"RTN","ECXSCX3",91,0)
 . D HEAD
"RTN","ECXSCX3",92,0)
 I $E(IOST,1,2)'="C-",($Y>(IOSL-5)) D HEAD
"RTN","ECXSCX3",93,0)
 Q
"RTN","ECXSCX3",94,0)
 ;
"RTN","ECXSCXN")
0^22^B90426087^B86791122
"RTN","ECXSCXN",1,0)
ECXSCXN ;ALB/JAP  Clinic Extract ;10/8/15  11:38
"RTN","ECXSCXN",2,0)
 ;;3.0;DSS EXTRACTS;**24,27,29,30,31,32,33,39,46,49,52,71,84,92,107,105,120,124,127,132,136,144,149,156,154**;Dec 22, 1997;Build 13
"RTN","ECXSCXN",3,0)
 ;
"RTN","ECXSCXN",4,0)
BEG ;entry point from option
"RTN","ECXSCXN",5,0)
 D SETUP Q:ECFILE=""  D ^ECXTRAC,^ECXKILL
"RTN","ECXSCXN",6,0)
 Q
"RTN","ECXSCXN",7,0)
 ;
"RTN","ECXSCXN",8,0)
START ;entry point from taskmgr
"RTN","ECXSCXN",9,0)
 N DIC,EXNUM,I,LOCARR,OUT,P1,P2,P3,PROCESS,SOURCE,STOP,STAT,TOSEND
"RTN","ECXSCXN",10,0)
 N TIU,X,Y,ECXNPRFI
"RTN","ECXSCXN",11,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104
"RTN","ECXSCXN",12,0)
 F I=1:1:8 S @("ECXCPT"_I)=""
"RTN","ECXSCXN",13,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXSCXN",14,0)
 F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXSCXN",15,0)
 S (OUT,QFLG,ECRN)=0,(ECXICD9P,ECXOBI,ECXICD10P)=""
"RTN","ECXSCXN",16,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL"),^TMP($J,"SDAMA301") ;136
"RTN","ECXSCXN",17,0)
 ;get ien for tiu in file #839.7
"RTN","ECXSCXN",18,0)
 S DIC="^PX(839.7,",DIC(0)="X",X="TEXT INTEGRATION UTILITIES"
"RTN","ECXSCXN",19,0)
 D ^DIC S TIU=+Y,ECED=ECED+.3,ECXCLIN=0 K DIC,Y
"RTN","ECXSCXN",20,0)
 ;get clinic default appt length, type, division
"RTN","ECXSCXN",21,0)
 F  S ECXCLIN=$O(^SC(ECXCLIN)) Q:'ECXCLIN  D
"RTN","ECXSCXN",22,0)
 .K LOCARR S DIC=44,DA=ECXCLIN,DR="2;3.5;1912",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",23,0)
 .D EN^DIQ1
"RTN","ECXSCXN",24,0)
 .Q:$G(LOCARR(44,ECXCLIN,2,"I"))'="C"
"RTN","ECXSCXN",25,0)
 .S ALEN=+$G(LOCARR(44,ECXCLIN,1912,"I"))
"RTN","ECXSCXN",26,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=ALEN,ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",27,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=^TMP($J,"ECXCL",ECXCLIN)_"^"_ALEN_"^"_$G(LOCARR(44,ECXCLIN,2,"I"))_"^"_+$G(LOCARR(44,ECXCLIN,3.5,"I"))
"RTN","ECXSCXN",28,0)
 .D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",29,0)
 .K P1,P2,P3,TOSEND,ECXDIV
"RTN","ECXSCXN",30,0)
 ;get from file #44 any no-shows & get encounters from #409.68
"RTN","ECXSCXN",31,0)
 D NOSHOW^ECXSCXN1(ECSD1,ECED),ENCNTR(ECSD1,ECED)
"RTN","ECXSCXN",32,0)
 ;send missing clinic msg
"RTN","ECXSCXN",33,0)
 D:$D(^TMP($J,"ECXS")) EN^ECXSCX1
"RTN","ECXSCXN",34,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL"),^TMP($J,"SDAMA301") ;136
"RTN","ECXSCXN",35,0)
 Q
"RTN","ECXSCXN",36,0)
 ;
"RTN","ECXSCXN",37,0)
ENCNTR(ECSD1,ECED) ;search file #409.68 for encounter data
"RTN","ECXSCXN",38,0)
 N CHKOUT,ECD,STAT,STOP,MDIV,ECXEDIS,CNT,ECXARR,NODE ;136
"RTN","ECXSCXN",39,0)
 N ECXESC,ECXECL,ECXCLST,ECXPP ;149
"RTN","ECXSCXN",40,0)
 S ECD=ECSD1
"RTN","ECXSCXN",41,0)
 F  S ECD=$O(^SCE("B",ECD)) Q:('ECD!(ECD>ECED))!(QFLG)  S ECXIEN=0 D
"RTN","ECXSCXN",42,0)
 .F  S ECXIEN=$O(^SCE("B",ECD,ECXIEN)) Q:'ECXIEN  D  Q:QFLG
"RTN","ECXSCXN",43,0)
 ..Q:'$D(^SCE(ECXIEN,0))
"RTN","ECXSCXN",44,0)
 ..D INTPAT^ECXSCX2 K LOCARR S DIC=409.68,DA=ECXIEN
"RTN","ECXSCXN",45,0)
 ..S DR=".01;.02;.03;.04;.05;.06;.07;.08;.11;.12;.13",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",46,0)
 ..D EN^DIQ1
"RTN","ECXSCXN",47,0)
 ..S ECXTI=$P($$FMTE^XLFDT(+$G(LOCARR(409.68,ECXIEN,.01,"I")),1),"@",2)
"RTN","ECXSCXN",48,0)
 ..S ECXTI=$E(($TR(ECXTI,":","")_"000000"),1,6)
"RTN","ECXSCXN",49,0)
 ..S:ECXTI="000000" ECXTI="000300" S MDIV=+$G(LOCARR(409.68,ECXIEN,.11,"I"))
"RTN","ECXSCXN",50,0)
 ..S STOP=+$G(LOCARR(409.68,ECXIEN,.03,"I"))
"RTN","ECXSCXN",51,0)
 ..S CHKOUT=+$G(LOCARR(409.68,ECXIEN,.07,"I"))
"RTN","ECXSCXN",52,0)
 ..S PROCESS=+$G(LOCARR(409.68,ECXIEN,.08,"I"))
"RTN","ECXSCXN",53,0)
 ..S STAT=$G(LOCARR(409.68,ECXIEN,.12,"I"))
"RTN","ECXSCXN",54,0)
 ..S ECXDFN=+$G(LOCARR(409.68,ECXIEN,.02,"I"))
"RTN","ECXSCXN",55,0)
 ..Q:(ECXDFN=0)!('CHKOUT)
"RTN","ECXSCXN",56,0)
 ..S:STAT="" STAT="ZZ" S STAT=";"_STAT_";"
"RTN","ECXSCXN",57,0)
 ..Q:";3;4;5;6;7;9;10;13;"[STAT
"RTN","ECXSCXN",58,0)
 ..Q:('STOP)!(PROCESS=4)!(+$G(LOCARR(409.68,ECXIEN,.06,"I")))
"RTN","ECXSCXN",59,0)
 ..S ECXDATE=+$G(LOCARR(409.68,ECXIEN,.01,"I"))
"RTN","ECXSCXN",60,0)
 ..S ECXCLIN=+$G(LOCARR(409.68,ECXIEN,.04,"I"))
"RTN","ECXSCXN",61,0)
 ..Q:$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,3)'="C"
"RTN","ECXSCXN",62,0)
 ..S ECXVISIT=+$G(LOCARR(409.68,ECXIEN,.05,"I"))
"RTN","ECXSCXN",63,0)
 ..S ECXENEL=+$G(LOCARR(409.68,ECXIEN,.13,"I"))
"RTN","ECXSCXN",64,0)
 ..Q:'ECXVISIT
"RTN","ECXSCXN",65,0)
 ..S ECXERR=0
"RTN","ECXSCXN",66,0)
 ..D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",67,0)
 ..D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",68,0)
 ..Q:TOSEND=6
"RTN","ECXSCXN",69,0)
 ..K LOCARR S DIC=40.7,DA=STOP,DR="1",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",70,0)
 ..S ECXSTOP=$$RJ^XLFSTR($G(LOCARR(40.7,STOP,1,"I")),3,0)
"RTN","ECXSCXN",71,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXSCXN",72,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXSCXN",73,0)
 ..;get date specific patient data
"RTN","ECXSCXN",74,0)
 ..D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN",75,0)
 ..;get national patient record flag if exist
"RTN","ECXSCXN",76,0)
 ..D NPRF^ECXUTL5
"RTN","ECXSCXN",77,0)
 ..;get visit specific data
"RTN","ECXSCXN",78,0)
 ..S ECXERR=0 D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",79,0)
 ..F I=1:1:8 S @("ECXCPT"_I)=$G(ECXVIST("CPT"_I))
"RTN","ECXSCXN",80,0)
 ..S ECXPP=$G(ECXVIST("PRIMPROC")) ;149 Get primary procedure if available
"RTN","ECXSCXN",81,0)
 ..F I="P",1:1:4 S @("ECXICD10"_I)="",@("ECXICD9"_I)="" ;154 Reset ICD values for each record
"RTN","ECXSCXN",82,0)
 ..F I="P",1:1:4 I $G(ECXVIST("ICD9"_I))'="" S @($S(+$$CODECS^ICDEX(ECXVIST("ICD9"_I),80)=30:"ECXICD10"_I,1:"ECXICD9"_I))=ECXVIST("ICD9"_I)
"RTN","ECXSCXN",83,0)
 ..S SOURCE=ECXVIST("SOURCE"),ECXAO=ECXVIST("AO"),ECXIR=ECXVIST("IR")
"RTN","ECXSCXN",84,0)
 ..S ECXMIL=ECXVIST("MST"),ECXPROV=ECXVIST("PROV"),ECXSHAD=ECXVIST("SHAD")
"RTN","ECXSCXN",85,0)
 ..S ECXECL=ECXVIST("ENCCL"),ECXESC=ECXVIST("ENCSC") ;144
"RTN","ECXSCXN",86,0)
 ..S ECPRNPI=$$NPI^XUSNPI("Individual_ID",ECXPROV,ECXDATE)
"RTN","ECXSCXN",87,0)
 ..S:+ECPRNPI'>0 ECPRNPI="" S ECPRNPI=$P(ECPRNPI,U)
"RTN","ECXSCXN",88,0)
 ..S ECXPROVP=ECXVIST("PROV CLASS"),ECXPROVN=ECXVIST("PROV NPI")
"RTN","ECXSCXN",89,0)
 ..F I=1:1:7 S @("ECSP"_I)=$P($G(ECXVIST("PROVS"_I)),U) ;144 2 new prov
"RTN","ECXSCXN",90,0)
 ..F I=1:1:7 S @("ECSPPC"_I)=$P($G(ECXVIST("PROVS"_I)),U,2) ;144 2 new person class
"RTN","ECXSCXN",91,0)
 ..F I=1:1:7 S @("ECSPNPI"_I)=$P($G(ECXVIST("PROVS"_I)),U,3) ;144 2 new NPI
"RTN","ECXSCXN",92,0)
 ..S ECXECE=ECXVIST("PGE"),ECXHNC=ECXVIST("HNC")
"RTN","ECXSCXN",93,0)
 ..K LOCARR S DIC=8,DA=ECXENEL,DR="8",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",94,0)
 ..S ECXENEL=+$G(LOCARR(8,ECXENEL,8,"I"))
"RTN","ECXSCXN",95,0)
 ..S:ECXENEL ECXENEL=$$ELIG^ECXUTL3(ECXENEL,ECXSVC)
"RTN","ECXSCXN",96,0)
 ..S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")  ;is cboc facility?
"RTN","ECXSCXN",97,0)
 ..S ECXEDIS=$$EDIS^ECXUTL1(ECXDFN,ECD,"C",ECXVISIT,ECXSTOP) ;136 Set emergency room disposition
"RTN","ECXSCXN",98,0)
 ..;setup feeder key and file in extract records
"RTN","ECXSCXN",99,0)
 ..S (ECXKEY,ECXDSSD)=""
"RTN","ECXSCXN",100,0)
 ..;appointments
"RTN","ECXSCXN",101,0)
 ..I PROCESS=1 D  Q     ;get appt length 136 Section changed to use SDAMA301 call
"RTN","ECXSCXN",102,0)
 ...N CNT,ECXARR
"RTN","ECXSCXN",103,0)
 ...K ^TMP($J,"SDAMA301")
"RTN","ECXSCXN",104,0)
 ...S ECXARR(1)=ECXDATE_";"_ECXDATE,ECXARR(2)=ECXCLIN,ECXARR(4)=ECXDFN,ECXARR("FLDS")="5;7;10;18" S CNT=$$SDAPI^SDAMA301(.ECXARR)
"RTN","ECXSCXN",105,0)
 ...Q:CNT=0  I CNT=-1 D ERR^ECXUTL1 S QFLG=1 Q  ;Stop if no appts (CNT=0) send error message and stop extract if CNT=-1 (system error)
"RTN","ECXSCXN",106,0)
 ...S NODE=^TMP($J,"SDAMA301",ECXDFN,ECXCLIN,ECXDATE)
"RTN","ECXSCXN",107,0)
 ...S ECXOBI=$S($P(NODE,U,7)="Y":"O",1:"") ;convert overbook indicator from Y to O otherwise send null
"RTN","ECXSCXN",108,0)
 ...S ALEN=$$RJ^XLFSTR($P(NODE,U,5),3,0)
"RTN","ECXSCXN",109,0)
 ...S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2) ;156-modified global ref to "ECXCL"
"RTN","ECXSCXN",110,0)
 ...S ECXSTOP=P1
"RTN","ECXSCXN",111,0)
 ...S ECXPVST=+$P(NODE,U,18),ECXATYP=+$P(NODE,U,10)
"RTN","ECXSCXN",112,0)
 ...I TOSEND'=3 D
"RTN","ECXSCXN",113,0)
 ....S ECXKEY=P1_P2_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",114,0)
 ....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",115,0)
 ...I TOSEND=3 D
"RTN","ECXSCXN",116,0)
 ....S ECXKEY=P1_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",117,0)
 ....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",118,0)
 ...I TOSEND=3 D
"RTN","ECXSCXN",119,0)
 ....S ECXKEY=P2_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",120,0)
 ....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",121,0)
 ..I PROCESS=2 D  Q
"RTN","ECXSCXN",122,0)
 ...S ALEN=0
"RTN","ECXSCXN",123,0)
 ...I SOURCE=TIU S ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",124,0)
 ...S:+ALEN=0 ALEN="030" S ECXKEY=P1_P2_ALEN_P3_"0",ECXSTOP=P1
"RTN","ECXSCXN",125,0)
 ...S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",126,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",127,0)
 ..;dispositions
"RTN","ECXSCXN",128,0)
 ..I PROCESS=3 D  Q
"RTN","ECXSCXN",129,0)
 ...S ECXKEY=ECXSTOP_"47906000000",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",130,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",131,0)
 Q
"RTN","ECXSCXN",132,0)
 ;
"RTN","ECXSCXN",133,0)
FILE ;record setup for file #727.827
"RTN","ECXSCXN",134,0)
 ;NODE(0)
"RTN","ECXSCXN",135,0)
 ;Sequence Number,Year Month, Extract Number (EC23)^facility (ECXDIV)^
"RTN","ECXSCXN",136,0)
 ;dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^
"RTN","ECXSCXN",137,0)
 ;in/out (ECXA)^Day $$ECXDATE^ECXUTL(ECXDATE,ECXYM)^Feeder Key (ECXKEY) ^
"RTN","ECXSCXN",138,0)
 ;Overbooked Indicator (ECXOBI)^Clinic Name (NOW NULL)^Treating Specialty (ECXTSC) ^
"RTN","ECXSCXN",139,0)
 ;Time (ECXTI)^Primary Care Team (ECPTTM)^primary care provider(ECPTPR)^
"RTN","ECXSCXN",140,0)
 ;Primary Care PRV Person Class(ECCLAS)^Provider (ECXPROV)^
"RTN","ECXSCXN",141,0)
 ;provider person class (ECPROVP)^CPT Code Qty & Modifiers #1 (ECXCPT1)^
"RTN","ECXSCXN",142,0)
 ;CPT Code Qty & Modifiers #3 (ECXCPT3)^CPT Code Qty & Modifiers #3 (ECXCPT3)^
"RTN","ECXSCXN",143,0)
 ;CPT Code Qty & Modifiers #4 (ECXCPT4)^CPT Code Qty & Modifiers #5 (ECXCPT5)^
"RTN","ECXSCXN",144,0)
 ;NODE(1)
"RTN","ECXSCXN",145,0)
 ;CPT Code Qty & Modifiers #6 (ECXCPT6)^CPT Code Qty & Modifiers #7 (ECXCPT7)^
"RTN","ECXSCXN",146,0)
 ;CPT Code Qty & Modifiers #8 (ECXCPT8)^Primary ICD9 Code (ECXICD9P)^
"RTN","ECXSCXN",147,0)
 ;Secondary ICD9 Code 1 (ECXICD91)^Secondary ICD9 Code 2 (ECXICD92)
"RTN","ECXSCXN",148,0)
 ;Secondary ICD9 Code 3 (ECXICD93)^Secondary ICD9 Code 4 (ECXICD94)
"RTN","ECXSCXN",149,0)
 ;date of birth (ECDOB)^Eligibility (ECXELIG)^Veteran (ECXVET)^
"RTN","ECXSCXN",150,0)
 ;Race (ECXRACE)^POW status (ECXPST)^POW Location (ECXPLOC)^ Radiation Status(ECXRST)^
"RTN","ECXSCXN",151,0)
 ;Radiation Encounter Indicator (ECXIR)^Agent Orange Status (ECXAST)^
"RTN","ECXSCXN",152,0)
 ;Agent Orange Location(ECXAO)^Master Patient Index ((ECXMPI)^DSS Product Department (ECXDSSD)^
"RTN","ECXSCXN",153,0)
 ;Sex (ECXSEX)^zip code (ECXZIP)^Place Holder^Place Holder^Encounter Eligibility (ECXENEL)^
"RTN","ECXSCXN",154,0)
 ;MST Status(ECXMST)^MST Encounter Indicator (ECXMIL)^Place Holder^Place Holder^
"RTN","ECXSCXN",155,0)
 ;Enrollment Location ((ECXENRL)^State (ECXSTATE)^County (ECXCNTY)^
"RTN","ECXSCXN",156,0)
 ;Associate PC Provider (ECASPR)^Associate PC Prov. Person Class (ECCLAS2)^Place Holder^
"RTN","ECXSCXN",157,0)
 ;DOM, PRRTP AND SAARTP Indicator (ECXDOM)^ Enrollment Category (ECXCAT)^
"RTN","ECXSCXN",158,0)
 ;NODE(2)
"RTN","ECXSCXN",159,0)
 ;Enrollment Status (ECXSTAT)^ SHAD Status (ECXPRIOR or ECXSHADI) ^
"RTN","ECXSCXN",160,0)
 ;Purple Heart Indicator (ECXPHI)^Period of Service (ECXPOS)^
"RTN","ECXSCXN",161,0)
 ;Observation Patient Indicator (ECXOBS)^ Encounter Number (ECXENC)^
"RTN","ECXSCXN",162,0)
 ;Agent Orange Location (ECXAOL)^Production Division Code (ECXPDIV)^ Appointment Type (ECXATYP)^
"RTN","ECXSCXN",163,0)
 ;Purpose of Visit (ECXPVST)^Means Test (ECXMTST)^Head & Neck Cancer Indicator (ECXHNCI)^
"RTN","ECXSCXN",164,0)
 ;Ethnicity(ECXETH)^Race 1(ECXRC1)^CBOC Status (ECXCBOC)^Place Holder^Enrollment Priority (ECXPRIOR_ECXSBGRP)^
"RTN","ECXSCXN",165,0)
 ;User Enrollee (ECXUESTA)^ Patient Type(ECXPTYPE)^CV Status Eligibility (ECXCVE)^
"RTN","ECXSCXN",166,0)
 ;CV Eligibility End Date (ECXCVEDT)^Encounter CV (ECXCVENC)^National Patient Record Flag (ECXNPRFI)^
"RTN","ECXSCXN",167,0)
 ;SW Asia Conditions (ECXEST)^Encounter SWAC (ECXECE)^ERI (ECXERI)^Enc Head/Neck CA (ECXHNC)^
"RTN","ECXSCXN",168,0)
 ;OEF/OIF (ECXOEF)^ OEF/OIF Return Date (ECXOEFDT)^Associate PC Provider NPI (ECASNPI)^
"RTN","ECXSCXN",169,0)
 ;Primary Care Provider NPI (ECPTNPI)^Provider NPI(ECPRNPI)^
"RTN","ECXSCXN",170,0)
 ;NODE(3)
"RTN","ECXSCXN",171,0)
 ;Country Code (ECXCNTRY)^Encounter SHAD (ECXSHAD)^PATCAT (ECXPATCAT)^Secondary Provider #1 (ECSP1)^
"RTN","ECXSCXN",172,0)
 ;Secondary Provider #1 PC (ECSPPC1)^Secondary Provider #1 NPI (ECSPNPI1)^Secondary Provider #2 (ECSP2)^
"RTN","ECXSCXN",173,0)
 ;Secondary Provider #2 PC (ECSPPC2)^Secondary Provider #2 NPI (ECSPNPI2)^Secondary Provider #3 (ECSP3)^
"RTN","ECXSCXN",174,0)
 ;Secondary Provider #3 PC (ECSPPC3)^Secondary Provider #3 NPI (ECSPNPI3)^Secondary Provider #4 (ECSP4)^
"RTN","ECXSCXN",175,0)
 ;Secondary Provider #4 PC (ECSPPC4)^Secondary Provider #4 NPI (ECSPNPI4)^Secondary Provider #5 (ECSP5)^
"RTN","ECXSCXN",176,0)
 ;Secondary Provider #5 PC (ECSPPC5)^Secondary Provider #5 NPI (ECSPNPI5)^
"RTN","ECXSCXN",177,0)
 ;ED Disposition Code (ECXEDIS)^Primary ICD-10 Code (ECXICD10P)^Secondary ICD-10 Code #1 (ECXICD101)^
"RTN","ECXSCXN",178,0)
 ;Secondary ICD-10 Code #2 (ECXICD102)^Secondary ICD-10 Code #3 (ECXICD103)^Secondary ICD-10 Code #4 (ECXICD104)^
"RTN","ECXSCXN",179,0)
 ;Encounter SC (ECXESC)^Vietnam (ECXVNS)^Secondary Provider #6 (ECSP6)^Secondary Provider #6 PC (ECSPPC6)^
"RTN","ECXSCXN",180,0)
 ;Secondary Provider #6 NPI (ECSPNPI6)^
"RTN","ECXSCXN",181,0)
 ;NODE(4)
"RTN","ECXSCXN",182,0)
 ;Secondary Provider #7 (ECSP7)^Secondary Provider #7 PC (ECSPPC7)^Secondary Provider #7 NPI (ECSPNPI7)^
"RTN","ECXSCXN",183,0)
 ;Camp Lejeune Status (ECXCLST)^Encounter Camp Lejeune (ECXECL)^Primary Procedure (ECXPP)
"RTN","ECXSCXN",184,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)
"RTN","ECXSCXN",185,0)
 ;
"RTN","ECXSCXN",186,0)
 N STR
"RTN","ECXSCXN",187,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get production division
"RTN","ECXSCXN",188,0)
 S EC7=$O(^ECX(727.827,999999999),-1),EC7=EC7+1
"RTN","ECXSCXN",189,0)
 S STR(0)=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSCXN",190,0)
 S STR(0)=STR(0)_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXKEY_U_ECXOBI_U
"RTN","ECXSCXN",191,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXSCXN",192,0)
 N ECXDATA,ECXTSC
"RTN","ECXSCXN",193,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXSCXN",194,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXSCXN",195,0)
 ;done
"RTN","ECXSCXN",196,0)
 S STR(0)=STR(0)_$S(ECXLOGIC>2015:"",1:ECXCLIN)_U_ECXTSC_U_ECXTI_U_ECPTTM_U_ECPTPR_U_ECCLAS_U
"RTN","ECXSCXN",197,0)
 S STR(0)=STR(0)_ECXPROV_U_ECXPROVP_U_ECXCPT1_U_ECXCPT2_U_ECXCPT3_U
"RTN","ECXSCXN",198,0)
 S STR(0)=STR(0)_ECXCPT4_U_ECXCPT5_U
"RTN","ECXSCXN",199,0)
 S STR(1)=ECXCPT6_U_ECXCPT7_U_ECXCPT8_U_ECXICD9P_U_ECXICD91_U_ECXICD92_U
"RTN","ECXSCXN",200,0)
 S STR(1)=STR(1)_ECXICD93_U_ECXICD94_U_ECXDOB_U_ECXELIG_U_ECXVET_U
"RTN","ECXSCXN",201,0)
 S STR(1)=STR(1)_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXIR_U_ECXAST_U
"RTN","ECXSCXN",202,0)
 S STR(1)=STR(1)_ECXAO_U_ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U
"RTN","ECXSCXN",203,0)
 S STR(1)=STR(1)_$G(ECXPCPNP)_U_U_ECXENEL_U_ECXMST_U
"RTN","ECXSCXN",204,0)
 S STR(1)=STR(1)_ECXMIL_U_U_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXSCXN",205,0)
 S STR(1)=STR(1)_ECXCNTY_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXCAT_U
"RTN","ECXSCXN",206,0)
 S STR(2)=ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_ECXPHI_U_ECXPOS_U_ECXOBS_U_ECXENC_U
"RTN","ECXSCXN",207,0)
 S STR(2)=STR(2)_ECXAOL_U_ECXPDIV_U_ECXATYP_U_ECXPVST_U_ECXMTST_U
"RTN","ECXSCXN",208,0)
 S STR(2)=STR(2)_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXSCXN",209,0)
 I ECXLOGIC>2003 S STR(2)=STR(2)_U_ECXCBOC
"RTN","ECXSCXN",210,0)
 I ECXLOGIC>2004 S STR(2)=STR(2)_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXSCXN",211,0)
 I ECXLOGIC>2005 S STR(2)=STR(2)_U_ECXEST_U_ECXECE
"RTN","ECXSCXN",212,0)
 I ECXLOGIC>2006 S STR(2)=STR(2)_U_ECXERI_U_ECXHNC
"RTN","ECXSCXN",213,0)
 I ECXLOGIC>2007 S STR(2)=STR(2)_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_$G(ECPRNPI)_U
"RTN","ECXSCXN",214,0)
 I ECXLOGIC>2009 S STR(3)=ECXCNTRY
"RTN","ECXSCXN",215,0)
 ;added patcat status, N3 P3
"RTN","ECXSCXN",216,0)
 I ECXLOGIC>2010 S STR(3)=STR(3)_U_ECXSHAD_U_ECXPATCAT
"RTN","ECXSCXN",217,0)
 I ECXLOGIC>2011 S STR(3)=STR(3)_U_ECSP1_U_ECSPPC1_U_ECSPNPI1_U_ECSP2_U_ECSPPC2_U_ECSPNPI2_U_ECSP3_U_ECSPPC3_U_ECSPNPI3_U_ECSP4_U_ECSPPC4_U_ECSPNPI4_U_ECSP5_U_ECSPPC5_U_ECSPNPI5
"RTN","ECXSCXN",218,0)
 ;added icd-10
"RTN","ECXSCXN",219,0)
 I ECXLOGIC>2012 S STR(3)=STR(3)_U_$G(ECXEDIS)_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U_ECXICD104 ;136
"RTN","ECXSCXN",220,0)
 I ECXLOGIC>2013 S STR(3)=STR(3)_U_ECXESC_U_ECXVNS_U_ECSP6_U_ECSPPC6_U_ECSPNPI6_U ; 144
"RTN","ECXSCXN",221,0)
 I ECXLOGIC>2013 S STR(4)=ECSP7_U_ECSPPC7_U_ECSPNPI7_U_ECXCLST_U_ECXECL ; 144 new provider fields and camp lejeune fields
"RTN","ECXSCXN",222,0)
 I ECXLOGIC>2014 S STR(4)=STR(4)_U_$G(ECXPP)_U_ECXSVCI_U_ECXSVCL ;149 add primary procedure, Comb SVC Ind, loc
"RTN","ECXSCXN",223,0)
 I ECXLOGIC>2015 S STR(4)=STR(4)_U_ECXCLIN ;154 moved clinic IEN to end of extract
"RTN","ECXSCXN",224,0)
 D FILE2^ECXSCX2(727.827,EC7,.STR)
"RTN","ECXSCXN",225,0)
 S ECRN=ECRN+1,$P(^ECX(727.827,0),U,3)=EC7
"RTN","ECXSCXN",226,0)
 Q
"RTN","ECXSCXN",227,0)
 ;
"RTN","ECXSCXN",228,0)
SETUP ;set required input for ECXTRAC
"RTN","ECXSCXN",229,0)
 S ECHEAD="CLI"
"RTN","ECXSCXN",230,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSCXN",231,0)
 Q
"RTN","ECXSURG")
0^34^B79357790^B77182684
"RTN","ECXSURG",1,0)
ECXSURG ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ;4/9/15  15:23
"RTN","ECXSURG",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,25,24,33,39,41,42,46,50,71,84,92,99,105,112,128,127,132,144,149,154**;Dec 22, 1997;Build 13
"RTN","ECXSURG",3,0)
BEG ;entry point from option
"RTN","ECXSURG",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXSURG",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXSURG",6,0)
 Q
"RTN","ECXSURG",7,0)
 ;
"RTN","ECXSURG",8,0)
START ;
"RTN","ECXSURG",9,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSURG",10,0)
 S QFLG=0,ECED=ECED+.3,ECD=ECSD1
"RTN","ECXSURG",11,0)
 F  S ECD=$O(^SRF("AC",ECD)),ECD0=0 Q:('ECD)!(ECD>ECED)!(QFLG)  D
"RTN","ECXSURG",12,0)
 .F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXSURG",13,0)
 ..I $D(^SRF(ECD0,0)) S EC=^SRF(ECD0,0),ECXDFN=+$P(EC,U),ECXVISIT=$P(EC,U,15) D STUFF Q:QFLG
"RTN","ECXSURG",14,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSURG",15,0)
 Q
"RTN","ECXSURG",16,0)
 ;
"RTN","ECXSURG",17,0)
STUFF ;gather data
"RTN","ECXSURG",18,0)
 N J,X,Y,PP,DATA1,DATA2,DATAOP,ARR,ERR,SUB,MOD,ECXNONL,ECXSTOP,TIMEDIF
"RTN","ECXSURG",19,0)
 N ECPRO,ECXORCT,ECXPTHA,ECXNPRFI,ECXPA,ECXPAPC,ECSRPC,ECATPC,ECSAPC
"RTN","ECXSURG",20,0)
 N ECXCRST,ECXSTCD,ECXCLIN,EC1A,EC2A,ECPQ,ECQA,EC1APC,EC2APC,ECPQPC
"RTN","ECXSURG",21,0)
 N ECQAPC,EC1ANPI,EC2ANPI,ECPQNPI,ECQANPI
"RTN","ECXSURG",22,0)
 N ECXORCET,ECXORCST,ECXTPOOR ;ECX*128
"RTN","ECXSURG",23,0)
 N ECICD10,ECICD101,ECICD102,ECICD103,ECICD104,ECICD105,ECXCONC ;ECX*144 CVW
"RTN","ECXSURG",24,0)
 N ECXCLST,ECXECL,CODE ;144,154
"RTN","ECXSURG",25,0)
 S (ECICD10,ECICD101,ECICD102,ECICD103,ECICD104,ECICD105)="" ;ECX*144 NULL FOR NOW
"RTN","ECXSURG",26,0)
 S ECXDATE=ECD,ECXERR=0,ECXQ="",ECXCONC=""
"RTN","ECXSURG",27,0)
 ;retrieve demographic variables
"RTN","ECXSURG",28,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXDATE,"1;2;3;5;")
"RTN","ECXSURG",29,0)
 I ECXADMDT="" S ECXADD=ECXADMDT
"RTN","ECXSURG",30,0)
 I ECXADMDT'="" S ECXADD=$$ECXDATE^ECXUTL(ECXADMDT,ECXYM)
"RTN","ECXSURG",31,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT)
"RTN","ECXSURG",32,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXSURG",33,0)
 ;OEF/OIF DATA
"RTN","ECXSURG",34,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXSURG",35,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXSURG",36,0)
 S ECXVNS=ECXPAT("VIETNAM") ; 144 Vietnam Status
"RTN","ECXSURG",37,0)
 S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXSURG",38,0)
 S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXSURG",39,0)
 S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXSURG",40,0)
 S EC0=^SRF(ECD0,0)
"RTN","ECXSURG",41,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:"")
"RTN","ECXSURG",42,0)
 S DATA2=$S($D(^SRF(ECD0,.2)):^(.2),1:"")
"RTN","ECXSURG",43,0)
 S DATAOP=$S($D(^SRO(136,ECD0,0)):^(0),1:"")
"RTN","ECXSURG",44,0)
 S ECNO=$G(^SRF(ECD0,"NON"))
"RTN","ECXSURG",45,0)
 ; if VISIT data exist get encounter data
"RTN","ECXSURG",46,0)
 ; ECX*112
"RTN","ECXSURG",47,0)
 S ECXVST=$P(^SRF(ECD0,0),U,15) D:ECXVST'=""
"RTN","ECXSURG",48,0)
 . Q:'$D(^AUPNVSIT(ECXVST,800))
"RTN","ECXSURG",49,0)
 . S ECENSC=$P(^AUPNVSIT(ECXVST,800),U,1)
"RTN","ECXSURG",50,0)
 . S ECENSC=$S(ECENSC=0:"N",ECENSC=1:"Y",1:"")
"RTN","ECXSURG",51,0)
 ;get data
"RTN","ECXSURG",52,0)
 S ECSR=$P(DATA1,U,4),(ECATNPI,ECSANPI,ECSRNPI)="",ECAT=$P(DATA1,U,13)
"RTN","ECXSURG",53,0)
 S ECSRNPI=$$NPI^XUSNPI("Individual_ID",ECSR,ECXDATE)
"RTN","ECXSURG",54,0)
 S:+ECSRNPI'>0 ECSRNPI="" S ECSRNPI=$P(ECSRNPI,U)
"RTN","ECXSURG",55,0)
 ;-Time patient in OR room (Nurse Time)
"RTN","ECXSURG",56,0)
 S ECXTM=$$ECXTIME^ECXUTL($P(DATA2,U,10))
"RTN","ECXSURG",57,0)
 S ECXDIV=$S($D(^SRF(ECD0,8)):^(8),1:ECINST)
"RTN","ECXSURG",58,0)
 N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV)  ;Production Division
"RTN","ECXSURG",59,0)
 S ECSA=$P($G(^SRF(ECD0,.3)),U,4),ECO=$P(EC0,U,2)
"RTN","ECXSURG",60,0)
 S ECSANPI=$$NPI^XUSNPI("Individual_ID",ECSA,ECXDATE)
"RTN","ECXSURG",61,0)
 S:+ECSANPI'>0 ECSANPI="" S ECSANPI=$P(ECSANPI,U)
"RTN","ECXSURG",62,0)
 ;get principle anesthetist and person class DBIA #103
"RTN","ECXSURG",63,0)
 S ECXPA=$P($G(^SRF(ECD0,.3)),U,1)
"RTN","ECXSURG",64,0)
 S ECPANPI=$$NPI^XUSNPI("Individual_ID",ECXPA,ECXDATE)
"RTN","ECXSURG",65,0)
 S:+ECPANPI'>0 ECPANPI="" S ECPANPI=$P(ECPANPI,U)
"RTN","ECXSURG",66,0)
 S ECXPAPC=$$PRVCLASS^ECXUTL(ECXPA,ECXDATE)
"RTN","ECXSURG",67,0)
 ;get first asst, 2nd asst, perfusionist, and asst perfusionist
"RTN","ECXSURG",68,0)
 S EC1A=$P(DATA1,U,5),EC2A=$P(DATA1,U,6),ECPQ=$P(DATA1,U,19),ECQA=$P(DATA1,U,20)
"RTN","ECXSURG",69,0)
 S EC1ANPI=$$NPI^XUSNPI("Individual_ID",EC1A,ECXDATE)
"RTN","ECXSURG",70,0)
 S:+EC1ANPI'>0 EC1ANPI="" S EC1ANPI=$P(EC1ANPI,U)
"RTN","ECXSURG",71,0)
 S EC2ANPI=$$NPI^XUSNPI("Individual_ID",EC2A,ECXDATE)
"RTN","ECXSURG",72,0)
 S:+EC2ANPI'>0 EC2ANPI="" S EC2ANPI=$P(EC2ANPI,U)
"RTN","ECXSURG",73,0)
 S ECPQNPI=$$NPI^XUSNPI("Individual_ID",ECPQ,ECXDATE)
"RTN","ECXSURG",74,0)
 S:+ECPQNPI'>0 ECPQNPI="" S ECPQNPI=$P(ECPQNPI,U)
"RTN","ECXSURG",75,0)
 S ECQANPI=$$NPI^XUSNPI("Individual_ID",ECQA,ECXDATE)
"RTN","ECXSURG",76,0)
 S:+ECQANPI'>0 ECQANPI="" S ECQANPI=$P(ECQANPI,U)
"RTN","ECXSURG",77,0)
 S ECORTY=$P($G(^SRS(+ECO,2)),U),ECO=$P($G(^SRS(+ECO,0)),U)
"RTN","ECXSURG",78,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXSURG",79,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0)
"RTN","ECXSURG",80,0)
 S:ECSS="000" ECSS="999"
"RTN","ECXSURG",81,0)
 ;get classification information
"RTN","ECXSURG",82,0)
 S (ECXAO,ECXHNC,ECXSHAD,ECXSHADI,ECXECL)="" I ECXVISIT'="" D  ;144
"RTN","ECXSURG",83,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR
"RTN","ECXSURG",84,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXSURG",85,0)
 .S ECENRI=$G(ECXVIST("IR")),ECENMST=$G(ECXVIST("MST"))
"RTN","ECXSURG",86,0)
 .S ECENEC=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXSURG",87,0)
 .S ECXECL=$G(ECXVIST("ENCCL")) ;144
"RTN","ECXSURG",88,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSURG",89,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSURG",90,0)
 ; - Shad Encounter Field
"RTN","ECXSURG",91,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXSURG",92,0)
 ;look for non-OR
"RTN","ECXSURG",93,0)
 S (ECNT,ECNL,ECXDSSD,ECXNONL,ECXSTOP)=""
"RTN","ECXSURG",94,0)
 I $P(ECNO,U)="Y" D
"RTN","ECXSURG",95,0)
 .S ECSR=$P(ECNO,U,6),ECAT=$P(ECNO,U,7)
"RTN","ECXSURG",96,0)
 .S ECSRNPI=$$NPI^XUSNPI("Individual_ID",ECSR,ECXDATE)
"RTN","ECXSURG",97,0)
 .S:+ECSRNPI'>0 ECSRNPI="" S ECSRNPI=$P(ECSRNPI,U)
"RTN","ECXSURG",98,0)
 .S ECATNPI=$$NPI^XUSNPI("Individual_ID",ECAT,ECXDATE)
"RTN","ECXSURG",99,0)
 .S:+ECATNPI'>0 ECATNPI="" S ECATNPI=$P(ECATNPI,U)
"RTN","ECXSURG",100,0)
 .S ECXTM=$$ECXTIME^ECXUTL($P(ECNO,U,4))
"RTN","ECXSURG",101,0)
 .S A1=$P(ECNO,U,5),A2=$P(ECNO,U,4),TIME="##" D:(A1&A2) TIME S ECNT=TIME
"RTN","ECXSURG",102,0)
 .S (ECXNONL,ECNL)=+$P(ECNO,U,2),ECNL=$P($G(^ECX(728.44,ECNL,0)),U,9)
"RTN","ECXSURG",103,0)
 .S:ECNL="" ECNL="UNKNOWN"
"RTN","ECXSURG",104,0)
 .;
"RTN","ECXSURG",105,0)
 .;- Get Primary or DSS Stop Code to use in encounter number
"RTN","ECXSURG",106,0)
 .N P1 ;primary stop
"RTN","ECXSURG",107,0)
 .D FEEDER^ECXSCX1(+$P(EC0,U,21),ECXDATE,.P1,,,,) S ECXSTOP=$E(P1,1,3)
"RTN","ECXSURG",108,0)
 .S ECXSTOP=$S(ECXSTOP:ECXSTOP,1:$P($G(^ECX(728.44,ECXNONL,0)),U,4))
"RTN","ECXSURG",109,0)
 ;
"RTN","ECXSURG",110,0)
 ;- Get credit stop, stop code and clinic
"RTN","ECXSURG",111,0)
 I $$SUR^ECXUTL6(.ECXCRST,.ECXSTCD,.ECXCLIN)
"RTN","ECXSURG",112,0)
 ;
"RTN","ECXSURG",113,0)
 ;- If surgery cancelled/aborted quit and go to next record
"RTN","ECXSURG",114,0)
 S ECCAN=$P($G(^SRF(ECD0,30)),U)
"RTN","ECXSURG",115,0)
 I +ECCAN S ECCAN=$$CANC^ECXUTL4(ECNL,$P(DATA2,U,10))
"RTN","ECXSURG",116,0)
 ;on hold for ECXDSSD and ECXDSSP I $P($G(^SRF(ECD0,30)),U) Q
"RTN","ECXSURG",117,0)
 ;get service of attending surgeon
"RTN","ECXSURG",118,0)
 S ECATSV=$P($G(^DIC(49,+$G(^VA(200,+ECAT,5)),730)),U)
"RTN","ECXSURG",119,0)
 ;
"RTN","ECXSURG",120,0)
 ;get surgeon, attending and anesthesia super person classes
"RTN","ECXSURG",121,0)
 ;get 1st asst, 2nd asst, perfusionist, and asst perfusionst person class
"RTN","ECXSURG",122,0)
 S ECSRPC=$$PRVCLASS^ECXUTL(ECSR,ECXDATE)
"RTN","ECXSURG",123,0)
 S ECATPC=$$PRVCLASS^ECXUTL(ECAT,ECXDATE)
"RTN","ECXSURG",124,0)
 S ECSAPC=$$PRVCLASS^ECXUTL(ECSA,ECXDATE)
"RTN","ECXSURG",125,0)
 S EC1APC=$$PRVCLASS^ECXUTL(EC1A,ECXDATE)
"RTN","ECXSURG",126,0)
 S EC2APC=$$PRVCLASS^ECXUTL(EC2A,ECXDATE)
"RTN","ECXSURG",127,0)
 S ECPQPC=$$PRVCLASS^ECXUTL(ECPQ,ECXDATE)
"RTN","ECXSURG",128,0)
 S ECQAPC=$$PRVCLASS^ECXUTL(ECQA,ECXDATE)
"RTN","ECXSURG",129,0)
 ;
"RTN","ECXSURG",130,0)
 ;add leading 2s for pointer to 200
"RTN","ECXSURG",131,0)
 S:ECAT ECAT="2"_ECAT S:ECSR ECSR="2"_ECSR S:ECSA ECSA="2"_ECSA
"RTN","ECXSURG",132,0)
 ;add leading 2 to principle anesthetist IEN
"RTN","ECXSURG",133,0)
 S:ECXPA ECXPA="2"_ECXPA
"RTN","ECXSURG",134,0)
 ;add leading 2s for 1st asst, 2nd asst, perfusionist, asst perfusionist
"RTN","ECXSURG",135,0)
 S:EC1A EC1A="2"_EC1A S:EC2A EC2A="2"_EC2A S:ECPQ ECPQ="2"_ECPQ S:ECQA ECQA="2"_ECQA
"RTN","ECXSURG",136,0)
 ;anesthesia technique
"RTN","ECXSURG",137,0)
 S ECANE="",PP=""
"RTN","ECXSURG",138,0)
 I $D(^SRF(ECD0,6,0)) S ECXJ=0 D
"RTN","ECXSURG",139,0)
 .F  S ECXJ=$O(^SRF(ECD0,6,ECXJ)) Q:('ECXJ)!(ECANE]"")  D
"RTN","ECXSURG",140,0)
 ..S PP=$P($G(^(ECXJ,0)),U,3) S:PP="Y" ECANE=$P(^(0),U,1)
"RTN","ECXSURG",141,0)
 .I ECANE="" S ECXJ=$O(^SRF(ECD0,6,0)) I ECXJ S ECANE=$P(^SRF(ECD0,6,ECXJ,0),U,1)
"RTN","ECXSURG",142,0)
 ;get primary procedure
"RTN","ECXSURG",143,0)
 ;ecode0=p^cpt code^^patient time^operation time^anesthesia time
"RTN","ECXSURG",144,0)
 S ECPT=+$P(DATAOP,U,2),ECXCMOD=""
"RTN","ECXSURG",145,0)
 K ARR,ERR D FIELD^DID(130,28,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",146,0)
 .K ARR,ERR D FIELD^DID(130,28,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",147,0)
 .Q:$D(ERR("DIERR"))
"RTN","ECXSURG",148,0)
 .S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",149,0)
 .F  S MOD=$O(^SRF(ECD0,SUB,MOD)) Q:MOD'>0  D
"RTN","ECXSURG",150,0)
 ..S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",151,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",152,0)
 S ECODE0="P"_U_U  ;ECPT_U
"RTN","ECXSURG",153,0)
 F J="10,12","2,3","1,4" D
"RTN","ECXSURG",154,0)
 .N ECNTIME,ECSTIME,ECATIME
"RTN","ECXSURG",155,0)
 .S A2=$P(DATA2,U,$P(J,",")),A1=$P(DATA2,U,$P(J,",",2)),TIME="##"
"RTN","ECXSURG",156,0)
 .I (A1&A2)&(+J=10) D TIME  S ECNTIME=TIME
"RTN","ECXSURG",157,0)
 .I (A1&A2)&(+J=1) D TIME  S ECATIME=TIME
"RTN","ECXSURG",158,0)
 .I (A1&A2)&(+J=2) D
"RTN","ECXSURG",159,0)
 ..;
"RTN","ECXSURG",160,0)
 ..;-Operation Time (Surgeon Time)
"RTN","ECXSURG",161,0)
 ..;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",162,0)
 ..S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",163,0)
 ..S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",164,0)
 ..S TIME=$TR($J(TIMEDIF,4,0)," ")
"RTN","ECXSURG",165,0)
 ..S:TIME<0 TIME="###"
"RTN","ECXSURG",166,0)
 ..S:TIME ECSTIME=TIME
"RTN","ECXSURG",167,0)
 .S ECODE0=ECODE0_U_TIME K TIME
"RTN","ECXSURG",168,0)
 ; -Recovery Room Time
"RTN","ECXSURG",169,0)
 S ECRR=""
"RTN","ECXSURG",170,0)
 I $D(^SRF(ECD0,1.1)) D
"RTN","ECXSURG",171,0)
 .S A1=$P(^(1.1),U,8),A2=$P(^(1.1),U,7),TIME="##" D:(A1&A2) TIME
"RTN","ECXSURG",172,0)
 .S ECRR=TIME K TIME
"RTN","ECXSURG",173,0)
 I ECNL]"" S $P(ECODE0,U,5)=ECNT
"RTN","ECXSURG",174,0)
 ;
"RTN","ECXSURG",175,0)
 ; -OR Clean Time in 15 min increments DBIA #103
"RTN","ECXSURG",176,0)
 ;
"RTN","ECXSURG",177,0)
 ; ECX*3.0*128 - Correct the calculation of OR Clean Time.
"RTN","ECXSURG",178,0)
 S ECXORCT=0
"RTN","ECXSURG",179,0)
 ; Set local variables. ECX*128
"RTN","ECXSURG",180,0)
 S ECXTPOOR=$P($G(DATA2),U,12),ECXORCST=$P($G(DATA2),U,13),ECXORCET=$P($G(DATA2),U,14)
"RTN","ECXSURG",181,0)
 I (ECXORCET'=""),(ECXORCST'="") D
"RTN","ECXSURG",182,0)
 .S ECXORCT=($$FMDIFF^XLFDT(ECXORCET,ECXORCST,2)/60)/15
"RTN","ECXSURG",183,0)
 I 'ECXORCT,(ECXORCET'=""),(ECXTPOOR'="") D
"RTN","ECXSURG",184,0)
 .S ECXORCT=($$FMDIFF^XLFDT(ECXORCET,ECXTPOOR,2)/60)/15
"RTN","ECXSURG",185,0)
 ; Make sure the final OR CLEAN TIME is an integer by rounding
"RTN","ECXSURG",186,0)
 ; up for any decimal value  ECX*3.0*128
"RTN","ECXSURG",187,0)
 I ECXORCT>0 S ECXORCT=$J(ECXORCT+.4999,0,0)
"RTN","ECXSURG",188,0)
 ; -If no OR clean time recorded set it to 2
"RTN","ECXSURG",189,0)
 I ECXORCT'>0 S ECXORCT=2
"RTN","ECXSURG",190,0)
 ;
"RTN","ECXSURG",191,0)
 ; -PT in hold area time in 15 min increments DBIA #103
"RTN","ECXSURG",192,0)
 I $P($G(DATA2),U,10),$P($G(DATA2),U,15) D
"RTN","ECXSURG",193,0)
 .S ECXPTHA=($$FMDIFF^XLFDT($P($G(DATA2),U,10),$P($G(DATA2),U,15),2)/60)/15
"RTN","ECXSURG",194,0)
 .S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",195,0)
 .I CON S ECXPTHA=ECXPTHA/2,ECXCONC="C" ;144 Concurrent Case
"RTN","ECXSURG",196,0)
 .S ECXPTHA=$TR($J(ECXPTHA,3,0)," ")
"RTN","ECXSURG",197,0)
 ; -If hold time is =<0 set it to ""
"RTN","ECXSURG",198,0)
 S:$G(ECXPTHA)'>0 ECXPTHA=""
"RTN","ECXSURG",199,0)
 ;
"RTN","ECXSURG",200,0)
 ;- get ASA CLASS
"RTN","ECXSURG",201,0)
 S ECASA=$$GET1^DIQ(132.8,$$GET1^DIQ(130,ECD0,1.13,"I"),.01)
"RTN","ECXSURG",202,0)
 ;
"RTN","ECXSURG",203,0)
 ;- Observation Patient Indicator (yes/no)
"RTN","ECXSURG",204,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECNL)
"RTN","ECXSURG",205,0)
 ;
"RTN","ECXSURG",206,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXSURG",207,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXSURG",208,0)
 ;- set national patient record flag if exist
"RTN","ECXSURG",209,0)
 D NPRF^ECXUTL5
"RTN","ECXSURG",210,0)
 ;
"RTN","ECXSURG",211,0)
 ;- If no encounter number don't file record
"RTN","ECXSURG",212,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXSTOP,ECSS) Q:ECXENC=""
"RTN","ECXSURG",213,0)
 ;
"RTN","ECXSURG",214,0)
 ;- Get postop diagnosis codes
"RTN","ECXSURG",215,0)
 I $$SURPODX^ECXUTL6(.ECXPODX,.ECXPODX1,.ECXPODX2,.ECXPODX3,.ECXPODX4,.ECXPODX5)
"RTN","ECXSURG",216,0)
 F CODE="",1:1:5 I +$$CODECS^ICDEX(@("ECXPODX"_CODE),80)=30 S @("ECICD10"_CODE)=@("ECXPODX"_CODE),@("ECXPODX"_CODE)="" ;154
"RTN","ECXSURG",217,0)
 ;
"RTN","ECXSURG",218,0)
 D FILE^ECXSURG1
"RTN","ECXSURG",219,0)
 ;get secondary procedures
"RTN","ECXSURG",220,0)
 ;ecode0=s^cpt code
"RTN","ECXSURG",221,0)
 S ECXJ=0
"RTN","ECXSURG",222,0)
 F  S ECXJ=$O(^SRO(136,ECD0,3,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)),$D(^(0)),$P(^(0),"^")]"" D
"RTN","ECXSURG",223,0)
 .;S ECPT=$P(^SRF(ECD0,13,ECXJ,2),U),ECXCMOD=""
"RTN","ECXSURG",224,0)
 .S ECPT=$P(^SRO(136,ECD0,3,ECXJ,0),U),ECXMOD=""
"RTN","ECXSURG",225,0)
 .S ECPT=$P(^(0),"^"),ECXCMOD=""
"RTN","ECXSURG",226,0)
 .K ARR,ERR
"RTN","ECXSURG",227,0)
 .D FIELD^DID(130.16,4,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",228,0)
 ..K ARR,ERR
"RTN","ECXSURG",229,0)
 ..D FIELD^DID(130.16,4,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",230,0)
 ..Q:$D(ERR("DIERR"))
"RTN","ECXSURG",231,0)
 ..S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",232,0)
 ..F  S MOD=$O(^SRF(ECD0,13,ECXJ,SUB,MOD)) Q:MOD'>0  S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",233,0)
 .S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",234,0)
 .S ECODE0="S"_U   ;_ECPT
"RTN","ECXSURG",235,0)
 .D FILE^ECXSURG1
"RTN","ECXSURG",236,0)
 ;get prostheses
"RTN","ECXSURG",237,0)
 ;ecode0=i^^^^^^prosthesis^old qty field (null)
"RTN","ECXSURG",238,0)
 S ECXJ=0
"RTN","ECXSURG",239,0)
 F  S ECXJ=$O(^SRF(ECD0,1,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)) D
"RTN","ECXSURG",240,0)
 .S ECXP=+^SRF(ECD0,1,ECXJ,0),ECXQ=$P($G(^(1)),U,2) S:'ECXQ ECXQ=1
"RTN","ECXSURG",241,0)
 .S ECODE0="I"_U_U_U_U_U_U_ECXP_U_U
"RTN","ECXSURG",242,0)
 .D FILE^ECXSURG1
"RTN","ECXSURG",243,0)
 Q
"RTN","ECXSURG",244,0)
 ;
"RTN","ECXSURG",245,0)
 ;
"RTN","ECXSURG",246,0)
TIME ; given date/time get increment
"RTN","ECXSURG",247,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG",248,0)
 N CON,TIMEDIF
"RTN","ECXSURG",249,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",250,0)
 ;
"RTN","ECXSURG",251,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",252,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",253,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",254,0)
 I 'CON D
"RTN","ECXSURG",255,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG",256,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG",257,0)
 I CON D
"RTN","ECXSURG",258,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG",259,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG",260,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG",261,0)
 Q
"RTN","ECXSURG",262,0)
 ;
"RTN","ECXSURG",263,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG",264,0)
 S ECHEAD="SUR"
"RTN","ECXSURG",265,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG",266,0)
 Q
"RTN","ECXSURG",267,0)
 ;
"RTN","ECXUD")
0^26^B91677386^B90665673
"RTN","ECXUD",1,0)
ECXUD ;ALB/JAP,BIR/DMA,PTD-Extract from UNIT DOSE EXTRACT DATA File (#728.904) ;7/16/15  11:46
"RTN","ECXUD",2,0)
 ;;3.0;DSS EXTRACTS;**10,8,24,33,39,46,49,71,84,92,107,105,120,127,144,149,154**;Dec 22, 1997;Build 13
"RTN","ECXUD",3,0)
BEG ;entry point from option
"RTN","ECXUD",4,0)
 I '$O(^ECX(728.904,"A",0)) W !,"There are no unit dose orders to extract",!! R X:5 K X Q
"RTN","ECXUD",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXUD",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXUD",7,0)
 Q
"RTN","ECXUD",8,0)
 ;
"RTN","ECXUD",9,0)
START ;start package specific extract
"RTN","ECXUD",10,0)
 N RERUN,ECXLDT ;149
"RTN","ECXUD",11,0)
 S RERUN=0 ;149
"RTN","ECXUD",12,0)
 S ECXLDT=+$P($G(^ECX(728,1,ECNODE)),U,ECPIECE) ;149 Get last run date
"RTN","ECXUD",13,0)
 I ECXLDT'<ECSD S RERUN=1 ;149
"RTN","ECXUD",14,0)
 S QFLG=0
"RTN","ECXUD",15,0)
 S ECED=ECED+.3
"RTN","ECXUD",16,0)
 F ECD=ECSD1:0 S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:QFLG  D
"RTN","ECXUD",17,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:QFLG  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXUD",18,0)
 ..S DATA=^ECX(728.904,ECXJ,0),^(1)=$P(EC23,U,2),^ECX(728.904,"AC",$P(EC23,U,2),ECXJ)="" D STUFF
"RTN","ECXUD",19,0)
 K ^TMP($J,"ECXP")
"RTN","ECXUD",20,0)
 I 'RERUN D CLEAN(0,$$FMADD^XLFDT(ECSD,-180)) ;149 Remove old log entries
"RTN","ECXUD",21,0)
 Q
"RTN","ECXUD",22,0)
 ;
"RTN","ECXUD",23,0)
STUFF ;get data
"RTN","ECXUD",24,0)
 N X,W,OK,P1,P3,PSTAT,PT,ECXPHA,ON,ECDRG,ECXESC,ECXECL,ECXCLST,ECPROIEN,ECXUDDT,ECXUDTM,ECXNEW ;144,149
"RTN","ECXUD",25,0)
 S (ECXESC,ECXECL,ECXCLST)="" ;144
"RTN","ECXUD",26,0)
 S ECXDFN=$P(DATA,U,2),ECDRG=$P(DATA,U,4)
"RTN","ECXUD",27,0)
 ;
"RTN","ECXUD",28,0)
 ;get patient specific data
"RTN","ECXUD",29,0)
 S ECXERR="" D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXUD",30,0)
 Q:ECXERR
"RTN","ECXUD",31,0)
 ;
"RTN","ECXUD",32,0)
 S ECXPRO=$P(DATA,U,7),ECPROIEN=+ECXPRO,ECXPRO=$E($P(ECXPRO,";",2))_$P(ECXPRO,";")
"RTN","ECXUD",33,0)
 S ECXPRNPI=$$NPI^XUSNPI("Individual_ID",ECPROIEN,ECD)
"RTN","ECXUD",34,0)
 S:+ECXPRNPI'>0 ECXPRNPI="" S ECXPRNPI=$P(ECXPRNPI,U)
"RTN","ECXUD",35,0)
 S W=$P(DATA,U,6)
"RTN","ECXUD",36,0)
 S ECXDIV=$P($G(^DIC(42,+W,0)),U,11),ECXW=$S(ECXADM="":"",1:$P($G(^DIC(42,+W,44)),U)) ;154 Ward gets set to null if this is an order for an outpatient
"RTN","ECXUD",37,0)
 S ECXUDDT=$$ECXDATE^ECXUTL($P(DATA,U,3),ECXYM)
"RTN","ECXUD",38,0)
 S ECXUDTM=$E($P($P(DATA,U,3),".",2)_"000000",1,6)
"RTN","ECXUD",39,0)
 S ECXQTY=$P(DATA,U,5),ECXCOST=$P(DATA,U,8),ON=$P(DATA,U,10)
"RTN","ECXUD",40,0)
 ;call pharmacy drug file (#50) api via ecxutl5
"RTN","ECXUD",41,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXUD",42,0)
 S ECCAT=$P(ECXPHA,U,2),ECINV=$P(ECXPHA,U,4)
"RTN","ECXUD",43,0)
 I ECXLOGIC<2014 D  ;New way to calculate cost dea spl hndlg **144
"RTN","ECXUD",44,0)
 .S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXUD",45,0)
 I ECXLOGIC>2013 D
"RTN","ECXUD",46,0)
 .S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"")
"RTN","ECXUD",47,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXUD",48,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXUD",49,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6),X="PSNAPIS"
"RTN","ECXUD",50,0)
 X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXUD",51,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXUD",52,0)
 ; - Department and National Production Division
"RTN","ECXUD",53,0)
 ;- Use of DSS Department postponed [S ECXDSSD=$$UDP^ECXDEPT(ECXDIV)]
"RTN","ECXUD",54,0)
 S ECXDSSD=""
"RTN","ECXUD",55,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXUD",56,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXUD",57,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXUD",58,0)
 ;- Ordering Date, Ordering Stop Code
"RTN","ECXUD",59,0)
 S ECXORDDT=$TR($$FMTE^XLFDT($P(DATA,U,9),"7DF")," /","0")
"RTN","ECXUD",60,0)
 S ECXORDST="" I ECXA="O" D
"RTN","ECXUD",61,0)
 .;Get ordering stop code based on FY 2006 logic for outpatient
"RTN","ECXUD",62,0)
 .S ECXORDST=$$DOUDO^ECXUTL5(ECXDFN,ON)
"RTN","ECXUD",63,0)
 ;Ordering Provider Person Class
"RTN","ECXUD",64,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXPRO,2,999),$P(DATA,U,9))
"RTN","ECXUD",65,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)="" ;144 BCMA are place holders now
"RTN","ECXUD",66,0)
 ;- Set national patient record flag if exist
"RTN","ECXUD",67,0)
 D NPRF^ECXUTL5
"RTN","ECXUD",68,0)
 ;149 Determine if script required pharmacist workload
"RTN","ECXUD",69,0)
 S ECXNEW=$$NEW ;149
"RTN","ECXUD",70,0)
 ;- If no encounter number don't file record
"RTN","ECXUD",71,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,$P(DATA,U,3),ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXUD",72,0)
 D:ECXENC'="" FILE
"RTN","ECXUD",73,0)
 Q
"RTN","ECXUD",74,0)
 ;
"RTN","ECXUD",75,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get demographics from patient file
"RTN","ECXUD",76,0)
 ;init variables
"RTN","ECXUD",77,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXUD",78,0)
 ;get patient data if saved
"RTN","ECXUD",79,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXUD",80,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2)
"RTN","ECXUD",81,0)
 .S ECXMPI=$P(PT,U,3),ECXDOB=$P(PT,U,4)
"RTN","ECXUD",82,0)
 .S ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6)
"RTN","ECXUD",83,0)
 .S ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXUD",84,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12)
"RTN","ECXUD",85,0)
 .S ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXUD",86,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18)
"RTN","ECXUD",87,0)
 .S ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXUD",88,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24)
"RTN","ECXUD",89,0)
 .S ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXUD",90,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4),ECXCNTRY=$P(PT1,U,5)
"RTN","ECXUD",91,0)
 .S ECXSHADI=$P(PT1,U,6),ECXPATCAT=$P(PT1,U,7),ECXCLST=$P(PT1,U,8) ;144
"RTN","ECXUD",92,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",93,0)
 ;set patient data
"RTN","ECXUD",94,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXUD",95,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXUD",96,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXUD",97,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXUD",98,0)
 .S ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXUD",99,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXUD",100,0)
 .S ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET"),ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXUD",101,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT")
"RTN","ECXUD",102,0)
 .S ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXUD",103,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL")
"RTN","ECXUD",104,0)
 .S ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXUD",105,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXUD",106,0)
 .S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXUD",107,0)
 .S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXUD",108,0)
 .S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXUD",109,0)
 .;OEF/OIF data
"RTN","ECXUD",110,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXUD",111,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXUD",112,0)
 .;get CNHU status
"RTN","ECXUD",113,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXUD",114,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXUD",115,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",116,0)
 .; - Head and Neck Cancer Indicator
"RTN","ECXUD",117,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXUD",118,0)
 .; - Proj. 112/SHAD Indicator
"RTN","ECXUD",119,0)
 .S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXUD",120,0)
 . ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXUD",121,0)
 .S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXUD",122,0)
 .; - Race and Ethnicity
"RTN","ECXUD",123,0)
 .S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXUD",124,0)
 .S ECXRC1=ECXPAT("RACE1")
"RTN","ECXUD",125,0)
 .;get emergency response indicator (FEMA)
"RTN","ECXUD",126,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXUD",127,0)
 .S ECXEST=ECXPAT("EC STAT")
"RTN","ECXUD",128,0)
 .;save for later
"RTN","ECXUD",129,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXUD",130,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXUD",131,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXCNTRY_U_ECXSHADI_U_ECXPATCAT_U_ECXCLST_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXUD",132,0)
 ;
"RTN","ECXUD",133,0)
 ;get inpatient data
"RTN","ECXUD",134,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXUD",135,0)
 S ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),ECXDOM=$P(X,U,10)
"RTN","ECXUD",136,0)
 ;
"RTN","ECXUD",137,0)
 ;get primary care data
"RTN","ECXUD",138,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXUD",139,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXUD",140,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXUD",141,0)
 Q
"RTN","ECXUD",142,0)
 ;
"RTN","ECXUD",143,0)
FILE ;file record
"RTN","ECXUD",144,0)
 ;node0
"RTN","ECXUD",145,0)
 ;facility^dfn^ssn^name^in/out^day^drug category^quantity^ward^
"RTN","ECXUD",146,0)
 ;provider^cost^mov #^treat spec^ndc^new feeder key^investigational^
"RTN","ECXUD",147,0)
 ;udp time^adm date^adm time
"RTN","ECXUD",148,0)
 ;node1
"RTN","ECXUD",149,0)
 ;mpi^dss dept^provider npi^dom^observ pat ind^encounter num^
"RTN","ECXUD",150,0)
 ;prod div code^means tst^elig^dob^sex^state^county^zip+4^vet^
"RTN","ECXUD",151,0)
 ;period of svc^pow stat^pow loc^ir status^ao status^ao loc^
"RTN","ECXUD",152,0)
 ;purple heart ind.^mst status^cnh/sh status^enrollment loc^
"RTN","ECXUD",153,0)
 ;enrollment cat^enrollment status^enrollment priority^pc team^
"RTN","ECXUD",154,0)
 ;pc provider^pc provider npi^pc provider p.class^assoc. pc provider^
"RTN","ECXUD",155,0)
 ;assoc. pc provider npi^assoc. pc provider p.class
"RTN","ECXUD",156,0)
 ;node2
"RTN","ECXUD",157,0)
 ;ordering date^ordering stop code^head & neck cancer ind.^ethnicity^
"RTN","ECXUD",158,0)
 ;race1^bcma drug dispensed^bcma dose given^bcma unit of
"RTN","ECXUD",159,0)
 ;administration^bcma icu flag^ordering provider person class^
"RTN","ECXUD",160,0)
 ;^enrollment priority ECXPRIOR_enrollment subgroup
"RTN","ECXUD",161,0)
 ;ECXSBGRP^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet
"RTN","ECXUD",162,0)
 ;elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible
"RTN","ECXUD",163,0)
 ;ECXCVENC^national patient record flag ECXNPRFI^emerg resp indic(FEMA) 
"RTN","ECXUD",164,0)
 ;ECXERI^environ contamin ECXEST^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^associate pc provider npi ECASNPI^primary care provider npi ECPTNPI^provider npi ECXPRNPI
"RTN","ECXUD",165,0)
 ;^country ECXCNTRY^PATCAT^Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXUD",166,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL) ^ New Script (ECXNEW)
"RTN","ECXUD",167,0)
 ;
"RTN","ECXUD",168,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXUD",169,0)
 N ECXDATA
"RTN","ECXUD",170,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXUD",171,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXUD",172,0)
 ;done
"RTN","ECXUD",173,0)
 N DA,DIK
"RTN","ECXUD",174,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXUD",175,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXUD",176,0)
 S ECODE=ECODE_ECXUDDT_U_ECCAT_U_ECXQTY_U_ECXW_U_ECXPRO_U_ECXCOST_U
"RTN","ECXUD",177,0)
 S ECODE=ECODE_ECXMN_U_ECXTS_U_ECNDC_U_ECNFC_U_ECINV_U_ECXUDTM_U
"RTN","ECXUD",178,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U
"RTN","ECXUD",179,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECXADM)_U
"RTN","ECXUD",180,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXUD",181,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U_ECXSEX_U
"RTN","ECXUD",182,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U
"RTN","ECXUD",183,0)
 S ECODE1=ECODE1_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXUD",184,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXCNHU_U_ECXENRL_U
"RTN","ECXUD",185,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_ECPTTM_U_ECPTPR_U
"RTN","ECXUD",186,0)
 S ECODE1=ECODE1_U_ECCLAS_U_ECASPR_U_U_ECCLAS2_U
"RTN","ECXUD",187,0)
 S ECODE2=ECXORDDT_U_ECXORDST_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXUD",188,0)
 I ECXLOGIC>2003 S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXUD",189,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXUD",190,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXEST
"RTN","ECXUD",191,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECXPRNPI
"RTN","ECXUD",192,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXUD",193,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT ; 127 PATCAT ADDED
"RTN","ECXUD",194,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXUD",195,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL_U_ECXNEW ;149
"RTN","ECXUD",196,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXUD",197,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXUD",198,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXUD",199,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXUD",200,0)
 Q
"RTN","ECXUD",201,0)
 ;
"RTN","ECXUD",202,0)
NEW() ;149 Function added to determine if script had pharmacist involvement
"RTN","ECXUD",203,0)
 N ALIEN,ADATE,SCRIPT,VDATE,DONE,IENS
"RTN","ECXUD",204,0)
 S SCRIPT="N",VDATE="",DONE=0
"RTN","ECXUD",205,0)
 S ALIEN=0 F  S ALIEN=$O(^PS(55,ECXDFN,5,ON,9,ALIEN)) Q:'+ALIEN!(DONE)  S IENS=ALIEN_","_ON_","_ECXDFN_"," D
"RTN","ECXUD",206,0)
 .S ADATE=$$GET1^DIQ(55.09,IENS,".01","I")
"RTN","ECXUD",207,0)
 .I $P(ADATE,".")>ECD S DONE=1 Q  ;If date of activity is after dispense date then stop
"RTN","ECXUD",208,0)
 .I "^VP^VPR^"[("^"_$$GET1^DIQ(55.09,IENS,"2:1")_"^") S VDATE=ADATE ;if activity status is verified by pharmacist or verified by pharmacist renewal
"RTN","ECXUD",209,0)
 I VDATE'="" D
"RTN","ECXUD",210,0)
 .I '$D(^XTMP("ECXSCRIPT",VDATE,ECXDFN,ON))!($G(^XTMP("ECXSCRIPT",VDATE,ECXDFN,ON))=ECXJ) S SCRIPT="Y"
"RTN","ECXUD",211,0)
 .I '$D(^XTMP("ECXSCRIPT",VDATE,ECXDFN,ON)) S ^XTMP("ECXSCRIPT",VDATE,ECXDFN,ON)=ECXJ ;Store first instance of med given
"RTN","ECXUD",212,0)
 Q SCRIPT
"RTN","ECXUD",213,0)
 ;
"RTN","ECXUD",214,0)
CLEAN(START,END) ;149 Section added to delete old log entries
"RTN","ECXUD",215,0)
 N DATE,PAT,ON
"RTN","ECXUD",216,0)
 S DATE=START F  S DATE=$O(^XTMP("ECXSCRIPT",DATE)) Q:'+DATE!(DATE>END)  S PAT=0 F  S PAT=$O(^XTMP("ECXSCRIPT",DATE,PAT)) Q:'+PAT  S ON=0 F  S ON=$O(^XTMP("ECXSCRIPT",DATE,PAT,ON)) Q:'+ON  K ^XTMP("ECXSCRIPT",DATE,PAT,ON)
"RTN","ECXUD",217,0)
 S ^XTMP("ECXSCRIPT",0)=$$FMADD^XLFDT($$DT^XLFDT,365)_"^"_$$DT^XLFDT_"^"_"Log of pharmacy orders that have already been counted"
"RTN","ECXUD",218,0)
 Q
"RTN","ECXUD",219,0)
 ;
"RTN","ECXUD",220,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXUD",221,0)
 S ECHEAD="UDP"
"RTN","ECXUD",222,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXUD",223,0)
 Q
"RTN","ECXUD",224,0)
 ;
"RTN","ECXUD",225,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXUD",226,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXUD",227,0)
 Q
"RTN","ECXUPRO")
0^31^B32109188^B30455842
"RTN","ECXUPRO",1,0)
ECXUPRO ;ALB/TJL-Prosthetic Extract Unusual Cost Report ;4/15/15  15:54
"RTN","ECXUPRO",2,0)
 ;;3.0;DSS EXTRACTS;**49,111,144,148,149,154**;Dec 22, 1997;Build 13
"RTN","ECXUPRO",3,0)
 ;
"RTN","ECXUPRO",4,0)
EN ; entry point
"RTN","ECXUPRO",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD,ECXPORT,CNT ;144
"RTN","ECXUPRO",6,0)
 N ECINST,ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG
"RTN","ECXUPRO",7,0)
 S QFLG=0
"RTN","ECXUPRO",8,0)
 S ECINST=$$PDIV^ECXPUTL
"RTN","ECXUPRO",9,0)
 ; get today's date
"RTN","ECXUPRO",10,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUPRO",11,0)
 D BEGIN Q:QFLG
"RTN","ECXUPRO",12,0)
 D SELECT Q:QFLG
"RTN","ECXUPRO",13,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXUPRO",14,0)
 .K ^TMP($J) ;144
"RTN","ECXUPRO",15,0)
 .S ^TMP($J,"ECXPORT",0)="NAME^SSN^DATE OF SERVICE^FORM^FORM DESCRIPTION^PSAS HCPCS CODE^FEEDER KEY^QUANTITY^COST OF TRANSACTION^TRANSACTION TYPE" ;144,149,154
"RTN","ECXUPRO",16,0)
 .S CNT=1 ;144
"RTN","ECXUPRO",17,0)
 .D PROCESS ;144
"RTN","ECXUPRO",18,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXUPRO",19,0)
 ;device selection
"RTN","ECXUPRO",20,0)
 S ECXDESC="Prosthetic Extract Unusual Cost Report"
"RTN","ECXUPRO",21,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUPRO",22,0)
 W !!,"This report requires 132-column format."
"RTN","ECXUPRO",23,0)
 D EN^XUTMDEVQ("PROCESS^ECXUPRO",ECXDESC,.ECXSAVE)
"RTN","ECXUPRO",24,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXUPRO",25,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUPRO",26,0)
 D HOME^%ZIS
"RTN","ECXUPRO",27,0)
 D AUDIT^ECXKILL
"RTN","ECXUPRO",28,0)
 Q
"RTN","ECXUPRO",29,0)
 ;
"RTN","ECXUPRO",30,0)
BEGIN ; display report description
"RTN","ECXUPRO",31,0)
 W @IOF
"RTN","ECXUPRO",32,0)
 W !,"This report prints a listing of unusual costs that would be"
"RTN","ECXUPRO",33,0)
 W !,"generated by the Prosthetic extract (PRO) as determined by a"
"RTN","ECXUPRO",34,0)
 W !,"user-defined threshold value.  It should be run prior to the"
"RTN","ECXUPRO",35,0)
 W !,"generation of the actual extract(s) to identify and fix, as"
"RTN","ECXUPRO",36,0)
 W !,"necessary, any costs determined to be erroneous."
"RTN","ECXUPRO",37,0)
 W !!,"Unusual costs are those where the Cost of Transaction is"
"RTN","ECXUPRO",38,0)
 W !,"greater than the threshold value."
"RTN","ECXUPRO",39,0)
 W !!,"Note: The threshold can be set after a report is selected."
"RTN","ECXUPRO",40,0)
 W !!,"Run times for this report will vary depending upon the size of"
"RTN","ECXUPRO",41,0)
 W !,"the extract and could take as long as 30 minutes or more to"
"RTN","ECXUPRO",42,0)
 W !,"complete.  This report has no effect on the actual extracts and"
"RTN","ECXUPRO",43,0)
 W !,"can be run as needed."
"RTN","ECXUPRO",44,0)
 W !!,"The report is sorted by Feeder Key, then by descending Cost of"
"RTN","ECXUPRO",45,0)
 W !,"Transaction and SSN."
"RTN","ECXUPRO",46,0)
 W !!,"**NOTE: The feeder key on this report will match what appears in DSS.",!,"However, the feeder key on the report will be different than the feeder",!,"key on the PRO extract." ;149
"RTN","ECXUPRO",47,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUPRO",48,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUPRO",49,0)
 Q
"RTN","ECXUPRO",50,0)
 ;
"RTN","ECXUPRO",51,0)
SELECT ; user inputs for threshold cost and date range
"RTN","ECXUPRO",52,0)
 N DONE,OUT
"RTN","ECXUPRO",53,0)
 ; allow user to set threshold cost
"RTN","ECXUPRO",54,0)
 S ECTHLD=500
"RTN","ECXUPRO",55,0)
 W !!,"The default threshold cost for the Prosthetic extract is $"_ECTHLD_".00."
"RTN","ECXUPRO",56,0)
 S DIR(0)="Y",DIR("A")="Would you like to change the threshold?",DIR("B")="NO" D ^DIR K DIR I X["^" S QFLG=1 Q
"RTN","ECXUPRO",57,0)
 I Y D
"RTN","ECXUPRO",58,0)
 .W !!,"Cost > threshold"
"RTN","ECXUPRO",59,0)
 .S DIR(0)="N^0:999999",DIR("A")="Enter the new threshold cost" D ^DIR K DIR S ECTHLD=Y I X["^" S QFLG=1 Q
"RTN","ECXUPRO",60,0)
 ; get date range from user
"RTN","ECXUPRO",61,0)
 W !!,"Enter the date range for which you would like to scan the Prosthetic",!,"Extract records.",!
"RTN","ECXUPRO",62,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXUPRO",63,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUPRO",64,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUPRO",65,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXUPRO",66,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXUPRO",67,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXUPRO",68,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXUPRO",69,0)
 .I Y<ECSD D  Q
"RTN","ECXUPRO",70,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXUPRO",71,0)
 ..W !,"Please try again.",!!
"RTN","ECXUPRO",72,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXUPRO",73,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXUPRO",74,0)
 ..W !,"Please try again.",!!
"RTN","ECXUPRO",75,0)
 .S ECED=Y
"RTN","ECXUPRO",76,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXUPRO",77,0)
 .S DONE=1
"RTN","ECXUPRO",78,0)
 Q
"RTN","ECXUPRO",79,0)
 ;
"RTN","ECXUPRO",80,0)
PROCESS ; entry point for queued report
"RTN","ECXUPRO",81,0)
 S ZTREQ="@"
"RTN","ECXUPRO",82,0)
 S ECXERR=0 D EN^ECXUPRO1 Q:ECXERR
"RTN","ECXUPRO",83,0)
 S QFLG=0 D PRINT
"RTN","ECXUPRO",84,0)
 Q
"RTN","ECXUPRO",85,0)
 ;
"RTN","ECXUPRO",86,0)
PRINT ; process temp file and print report
"RTN","ECXUPRO",87,0)
 N PG,QFLG,GTOT,LN,COUNT,FKEY,COST,SSN,REC,SDAY,I ;144
"RTN","ECXUPRO",88,0)
 U IO
"RTN","ECXUPRO",89,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUPRO",90,0)
 S (PG,QFLG,GTOT)=0,$P(LN,"-",132)=""
"RTN","ECXUPRO",91,0)
 I '$G(ECXPORT) D HEADER Q:QFLG  ;144
"RTN","ECXUPRO",92,0)
 S COUNT=0,FKEY=""
"RTN","ECXUPRO",93,0)
 F  S FKEY=$O(^TMP($J,FKEY)) Q:FKEY=""!QFLG  D
"RTN","ECXUPRO",94,0)
 .S COST="" F  S COST=$O(^TMP($J,FKEY,COST)) Q:COST=""!QFLG  D
"RTN","ECXUPRO",95,0)
 .. S SDAY="" F  S SDAY=$O(^TMP($J,FKEY,COST,SDAY)) Q:SDAY=""!QFLG  D
"RTN","ECXUPRO",96,0)
 ...S SSN="" F  S SSN=$O(^TMP($J,FKEY,COST,SDAY,SSN)) Q:SSN=""!QFLG  S REC=^(SSN)  D
"RTN","ECXUPRO",97,0)
 ....I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=REC,CNT=CNT+1 Q  ;144
"RTN","ECXUPRO",98,0)
 ....S COUNT=COUNT+1
"RTN","ECXUPRO",99,0)
 ....I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUPRO",100,0)
 ....W !,$P(REC,U),?8,$P(REC,U,2),?21,$P(REC,U,3),?39,$P(REC,U,4),?45,$P(REC,U,5),?70,$P(REC,U,6),?93,$$RJ^XLFSTR($P(REC,U,7),8),?110,$$RJ^XLFSTR($P(REC,U,8),11),?127,$P(REC,U,9) ;149,154
"RTN","ECXUPRO",101,0)
 Q:QFLG!($G(ECXPORT))  ;144
"RTN","ECXUPRO",102,0)
 I COUNT=0 W !!,?8,"No unusual costs to report for this extract"
"RTN","ECXUPRO",103,0)
 I COUNT W ! D FOOTER^ECXPROCT ;154 Print key to forms if report had data
"RTN","ECXUPRO",104,0)
CLOSE ;
"RTN","ECXUPRO",105,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXUPRO",106,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUPRO",107,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUPRO",108,0)
 Q
"RTN","ECXUPRO",109,0)
 ;
"RTN","ECXUPRO",110,0)
HEADER ;header and page control
"RTN","ECXUPRO",111,0)
 N SS,JJ
"RTN","ECXUPRO",112,0)
 I $E(IOST)="C" D
"RTN","ECXUPRO",113,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUPRO",114,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUPRO",115,0)
 Q:QFLG
"RTN","ECXUPRO",116,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUPRO",117,0)
 W !,"Prosthetic Extract Unusual Cost Report",?124,"Page: "_PG
"RTN","ECXUPRO",118,0)
 W !,"Start Date: ",ECSTART,?97,"Report Run Date/Time: "_ECRUN
"RTN","ECXUPRO",119,0)
 W !,"  End Date: ",ECEND,?97,"     Threshold Value: ",ECTHLD
"RTN","ECXUPRO",120,0)
 W !!,?21,"Date of",?45,"PSAS",?112,"Cost of",?126,"Tran" ;149,154
"RTN","ECXUPRO",121,0)
 W !,"Name",?11,"SSN",?21,"Service",?39,"FORM",?45,"HCPCS CODE" ;149,154
"RTN","ECXUPRO",122,0)
 W ?70,"Feeder Key",?93,"Quantity",?110,"Transaction",?126,"Type" ;149
"RTN","ECXUPRO",123,0)
 W !,LN,!
"RTN","ECXUPRO",124,0)
 Q
"RTN","ECXUPRO",125,0)
 ;
"RTN","ECXUPRO1")
0^32^B10090164^B8288898
"RTN","ECXUPRO1",1,0)
ECXUPRO1 ;ALB/TJL-Prosthetics Extract Unusual Cost Report; 01/08/08 2:49pm ;4/15/15  16:04
"RTN","ECXUPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**49,111,132,137,144,149,154**;Dec 22, 1997;Build 13
"RTN","ECXUPRO1",3,0)
 ;
"RTN","ECXUPRO1",4,0)
EN ; entry point
"RTN","ECXUPRO1",5,0)
 N COUNT,ECDFN,ECD,PROCOST
"RTN","ECXUPRO1",6,0)
 I '$G(ECXPORT) K ^TMP($J) ;144 If exporting, already killed
"RTN","ECXUPRO1",7,0)
 S COUNT=0
"RTN","ECXUPRO1",8,0)
 S ECD=ECSD1,ECED=ECED+.3
"RTN","ECXUPRO1",9,0)
 D GETRECS
"RTN","ECXUPRO1",10,0)
 Q
"RTN","ECXUPRO1",11,0)
 ;
"RTN","ECXUPRO1",12,0)
GETRECS ; get records that are over the threshold
"RTN","ECXUPRO1",13,0)
 N PDA,SUBDA,PROLB,PRO0,PROFORM,ECXFORM ;154
"RTN","ECXUPRO1",14,0)
 N DIC,DR,DA,DIQ
"RTN","ECXUPRO1",15,0)
 S QFLG=0,ECXLNE=1,ECXED1=ECED+.9999
"RTN","ECXUPRO1",16,0)
 S PDA=ECSD1
"RTN","ECXUPRO1",17,0)
 F  S PDA=$O(^RMPR(660,"CT",PDA)) Q:(PDA>ECXED1)!('PDA)!(QFLG=1)  D
"RTN","ECXUPRO1",18,0)
 .S SUBDA=0
"RTN","ECXUPRO1",19,0)
 .F  S SUBDA=$O(^RMPR(660,"CT",PDA,SUBDA))  Q:('SUBDA)!(QFLG=1)  D
"RTN","ECXUPRO1",20,0)
 ..Q:'$D(^RMPR(660,SUBDA,0))
"RTN","ECXUPRO1",21,0)
 ..S PRO0=^RMPR(660,SUBDA,0)
"RTN","ECXUPRO1",22,0)
 ..S PROLB=$G(^RMPR(660,SUBDA,"LB"))
"RTN","ECXUPRO1",23,0)
 ..K ECXP S DIC="^RMPR(660,",DR=".02;11",DA=SUBDA,DIQ(0)="EI"
"RTN","ECXUPRO1",24,0)
 ..S DIQ="ECXP" D EN^DIQ1
"RTN","ECXUPRO1",25,0)
 ..S ECXDFN=$G(ECXP(660,SUBDA,.02,"I"))
"RTN","ECXUPRO1",26,0)
 ..S (ECXFORM,PROFORM)=$G(ECXP(660,SUBDA,11,"E"))_U_$G(ECXP(660,SUBDA,11,"I")) ;154
"RTN","ECXUPRO1",27,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,PDA)
"RTN","ECXUPRO1",28,0)
 ..Q:'$$NTEG^ECXPRO1(ECXDFN,.ECXLNE,SUBDA,PRO0,PROLB,ECINST,PROFORM)
"RTN","ECXUPRO1",29,0)
 ..S PROCOST=$P(PRO0,U,16)
"RTN","ECXUPRO1",30,0)
 ..S:PROFORM["-3" PROCOST=$P(PROLB,U,9)
"RTN","ECXUPRO1",31,0)
 ..;S:($P(PROFORM,U,2)=11)!($P(PROFORM,U,2)=12) PROCOST=0 ;154 Allow cost for inventory and stock items to come through
"RTN","ECXUPRO1",32,0)
 ..S:PROCOST="" PROCOST=0
"RTN","ECXUPRO1",33,0)
 ..S PROCOST=(PROCOST+.5)\1
"RTN","ECXUPRO1",34,0)
 ..S:PROCOST>999999 PROCOST=999999
"RTN","ECXUPRO1",35,0)
 ..I PROCOST>ECTHLD D FILE
"RTN","ECXUPRO1",36,0)
 Q
"RTN","ECXUPRO1",37,0)
FILE ; put records in temp file to print later
"RTN","ECXUPRO1",38,0)
 N OK,PROPAT,PRONAME,PROSSN,CPTCODE,ECXFEKEY,PROQTY
"RTN","ECXUPRO1",39,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECD,"."),"1;",.PROPAT)
"RTN","ECXUPRO1",40,0)
 I 'OK Q
"RTN","ECXUPRO1",41,0)
 S PRONAME=PROPAT("NAME")
"RTN","ECXUPRO1",42,0)
 S PROSSN=PROPAT("SSN")
"RTN","ECXUPRO1",43,0)
 S PRODAY=$E(PDA,4,5)_"/"_$E(PDA,6,7)_"/"_$E(PDA,2,3)
"RTN","ECXUPRO1",44,0)
 S CPTCODE=$E(ECXPHCPC,1,5) ;149 use PSAS HCPCS instead of HCPCS code
"RTN","ECXUPRO1",45,0)
 I PROFORM["-3" F ECXLAB="LAB","ORD" D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXUPRO1",46,0)
 I PROFORM'["-3" S ECXLAB="NONL" D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXUPRO1",47,0)
 S PROQTY=$P(PRO0,U,7)
"RTN","ECXUPRO1",48,0)
 S:(+PROQTY=0) PROQTY=1
"RTN","ECXUPRO1",49,0)
 S PROQTY=$S('$G(ECXPORT):$$RJ^XLFSTR(PROQTY,8),1:PROQTY) ;144,149
"RTN","ECXUPRO1",50,0)
 S ^TMP($J,ECXFEKEY,-PROQTY,SUBDA,PROSSN)=PRONAME_U_PROSSN_U_PRODAY_U_$P(ECXFORM,U,2)_$S($G(ECXPORT):(U_$P(ECXFORM,U)),1:"")_U_ECXPHCPC_U_ECXFEKEY_U_PROQTY_U_$S('$G(ECXPORT):"$",1:"")_$FNUMBER(PROCOST,",",2)_U_ECXTYPE ;144,149,154
"RTN","ECXUPRO1",51,0)
 S COUNT=COUNT+1
"RTN","ECXUPRO1",52,0)
 I COUNT#100=0 I $$S^ZTLOAD S (ZTSTOP,ECXERR)=1
"RTN","ECXUPRO1",53,0)
 Q
"RTN","ECXUPRO1",54,0)
EXIT S ECXERR=1 Q
"RTN","ECXUTL2")
0^2^B74410083^B73682179
"RTN","ECXUTL2",1,0)
ECXUTL2 ;ALB/JAP - Utilities for DSS Extracts (cont.) ;2/6/15  12:02
"RTN","ECXUTL2",2,0)
 ;;3.0;DSS EXTRACTS;**8,13,23,24,33,35,39,46,71,84,92,105,112,120,127,144,149,154**;Dec 22, 1997;Build 13
"RTN","ECXUTL2",3,0)
 ;
"RTN","ECXUTL2",4,0)
ECXDEF(ECXHEAD,ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER) ;variables specific to extract from file #727.1
"RTN","ECXUTL2",5,0)
 ;   input 
"RTN","ECXUTL2",6,0)
 ;   ECXHEAD = extract header code
"RTN","ECXUTL2",7,0)
 ;   all other formal list parameters passed by reference
"RTN","ECXUTL2",8,0)
 ;   output
"RTN","ECXUTL2",9,0)
 ;   ECXPACK = type field (#7)
"RTN","ECXUTL2",10,0)
 ;   ECXGRP  = group field (#9)
"RTN","ECXUTL2",11,0)
 ;   ECXFILE = file number field (#1)
"RTN","ECXUTL2",12,0)
 ;   ECXRTN  = routine field (#4)
"RTN","ECXUTL2",13,0)
 ;   ECXPIECE= running piece field (#11)
"RTN","ECXUTL2",14,0)
 ;   ECXVER  = dss version
"RTN","ECXUTL2",15,0)
 N ECXIEN,ECXARR,DIC,DA,DR,DIQ
"RTN","ECXUTL2",16,0)
 S (ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER)="",ECXIEN=0
"RTN","ECXUTL2",17,0)
 S ECXIEN=+$O(^ECX(727.1,"C",ECXHEAD,ECXIEN))
"RTN","ECXUTL2",18,0)
 I ECXIEN=0 D  Q
"RTN","ECXUTL2",19,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",20,0)
 .D MES^XPDUTL(" It appears that you may have a problem with File #727.1 --")
"RTN","ECXUTL2",21,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",22,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is not properly defined.")
"RTN","ECXUTL2",23,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",24,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",25,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",26,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",27,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",28,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",29,0)
 .W !!
"RTN","ECXUTL2",30,0)
 S DIC="^ECX(727.1,",DA=ECXIEN,DR=".01;1;4;7;9;11;13",DIQ="ECXARR"
"RTN","ECXUTL2",31,0)
 D EN^DIQ1
"RTN","ECXUTL2",32,0)
 S ECXPACK=ECXARR(727.1,ECXIEN,7)
"RTN","ECXUTL2",33,0)
 ;if this is an inactive extract type, skip it unless building for audit 
"RTN","ECXUTL2",34,0)
 I ECXARR(727.1,ECXIEN,13)="YES" I '+$G(ECXAUDIT) D  Q  ;154, allow extract to run if for audit purposes (ECXAUDIT=1 if coming from audit report)
"RTN","ECXUTL2",35,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",36,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is no longer active/valid.")
"RTN","ECXUTL2",37,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",38,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",39,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",40,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",41,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",42,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",43,0)
 .W !!
"RTN","ECXUTL2",44,0)
 S ECXGRP=ECXARR(727.1,ECXIEN,9)
"RTN","ECXUTL2",45,0)
 S ECXFILE=ECXARR(727.1,ECXIEN,1)
"RTN","ECXUTL2",46,0)
 S ECXRTN="START^"_ECXARR(727.1,ECXIEN,4)
"RTN","ECXUTL2",47,0)
 S ECXPIECE=ECXARR(727.1,ECXIEN,11)
"RTN","ECXUTL2",48,0)
 ;version of dss/tsi in Austin as specified by btso
"RTN","ECXUTL2",49,0)
 S ECXVER=7
"RTN","ECXUTL2",50,0)
 Q
"RTN","ECXUTL2",51,0)
PATDEM(DFN,DT1,PAR,FLG) ; determine patient information
"RTN","ECXUTL2",52,0)
 ;  DFN   =
"RTN","ECXUTL2",53,0)
 ;  DT    =
"RTN","ECXUTL2",54,0)
 ;  PAR   =
"RTN","ECXUTL2",55,0)
 ;  FLG   =
"RTN","ECXUTL2",56,0)
 N DT2,PAT,OK,X
"RTN","ECXUTL2",57,0)
 D KPATDEM
"RTN","ECXUTL2",58,0)
 S FLG=$G(FLG),PAR=$S($D(PAR):PAR,1:"1;2;3;4;5;"),DT2=$P(DT1,".")
"RTN","ECXUTL2",59,0)
 Q:'$$PAT^ECXUTL3(DFN,DT2,PAR,.PAT) 0
"RTN","ECXUTL2",60,0)
 S ECXMPI=PAT("MPI")
"RTN","ECXUTL2",61,0)
 I PAR["1" D
"RTN","ECXUTL2",62,0)
 .S ECXSSN=PAT("SSN"),ECXPNM=PAT("NAME"),ECXDOB=PAT("DOB")
"RTN","ECXUTL2",63,0)
 .S ECXSEX=PAT("SEX"),ECXREL=PAT("RELIGION"),ECXRACE=PAT("RACE")
"RTN","ECXUTL2",64,0)
 .S ECXMAR=PAT("MARITAL")
"RTN","ECXUTL2",65,0)
 .S ECXETH=PAT("ETHNIC"),ECXRC1=PAT("RACE1")
"RTN","ECXUTL2",66,0)
 I PAR["2" D
"RTN","ECXUTL2",67,0)
 .S ECXCNTY=PAT("COUNTY"),ECXSTATE=PAT("STATE"),ECXZIP=PAT("ZIP")
"RTN","ECXUTL2",68,0)
 .S ECXCNTRY=PAT("COUNTRY")
"RTN","ECXUTL2",69,0)
 I PAR["3" D
"RTN","ECXUTL2",70,0)
 .S ECXPOS=PAT("POS"),ECSC=PAT("SC STAT"),ECXSVC=PAT("SC%")
"RTN","ECXUTL2",71,0)
 .S ECXVET=PAT("VET"),ECXMEAN=PAT("MEANS"),ECXELIG=PAT("ELIG")
"RTN","ECXUTL2",72,0)
 .S ECXENRL=PAT("ENROLL LOC")
"RTN","ECXUTL2",73,0)
 .S ECXERI=PAT("ERI")
"RTN","ECXUTL2",74,0)
 I PAR["4" S ECXEMP=PAT("EMPLOY")
"RTN","ECXUTL2",75,0)
 I PAR["5" D
"RTN","ECXUTL2",76,0)
 .S ECXVIET=PAT("VIETNAM"),ECXAST=PAT("AO STAT"),ECXRST=PAT("IR STAT")
"RTN","ECXUTL2",77,0)
 .S ECXEST=PAT("EC STAT"),ECXPST=PAT("POW STAT"),ECXPLOC=PAT("POW LOC")
"RTN","ECXUTL2",78,0)
 .S ECXPHI=PAT("PHI"),ECXMST=PAT("MST STAT"),ECXAOL=PAT("AOL")
"RTN","ECXUTL2",79,0)
 .S ECXOEF=PAT("ECXOEF"),ECXOEFDT=PAT("ECXOEFDT")
"RTN","ECXUTL2",80,0)
 .S ECXCLST=PAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXUTL2",81,0)
 .S ECXSVCI=PAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXUTL2",82,0)
 .S ECXSVCL=PAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXUTL2",83,0)
 I PAR["6" D
"RTN","ECXUTL2",84,0)
 .S (ECXPAYOR,ECXSAI)="" D VISN19(DFN,.ECXPAYOR,.ECXSAI)
"RTN","ECXUTL2",85,0)
 I FLG'[3 D
"RTN","ECXUTL2",86,0)
 .S X=$$PRIMARY(DFN,DT2),ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXUTL2",87,0)
 .S ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6)
"RTN","ECXUTL2",88,0)
 .S ECASNPI=$P(X,U,7)
"RTN","ECXUTL2",89,0)
 I FLG'[2 D
"RTN","ECXUTL2",90,0)
 .S ECXINP=$$INP^ECXUTL2(DFN,DT1),ECXA=$P(ECXINP,U),ECXMN=$P(ECXINP,U,2)
"RTN","ECXUTL2",91,0)
 .S ECXTS=$P(ECXINP,U,3),ECXDOM=$P(ECXINP,U,10),ECXADMDT=$P(ECXINP,U,4)
"RTN","ECXUTL2",92,0)
 I FLG'[1 S X=$$ENROLLM(DFN)
"RTN","ECXUTL2",93,0)
 Q 1
"RTN","ECXUTL2",94,0)
 ;
"RTN","ECXUTL2",95,0)
KPATDEM ;
"RTN","ECXUTL2",96,0)
 K ECXADMDT,ECAO,ECASNPI,ECASPR,ECCLAS,ECCLAS2,ECENV,ECPTNPI,ECPTPR,ECPTTM
"RTN","ECXUTL2",97,0)
 K ECRE,ECSC,ECXA,ECXAST,ECXCAT,ECXCNTY,ECXEST,ECXENRL,ECXDOB
"RTN","ECXUTL2",98,0)
 K ECXDOM,ECXELIG,ECXINP,ECXMPI,ECXMN,ECXNM,ECXPHI,ECXPLOC,ECXMEAN,ECXMST
"RTN","ECXUTL2",99,0)
 K ECXPAYOR,ECXPNM,ECXPOS,ECXPRIOR,ECXPST,ECXRACE,ECXREL,ECXRST,ECXSAI
"RTN","ECXUTL2",100,0)
 K ECXSEX,ECXSSN,ECXSTAT,ECXSTATE,ECXSVC,ECXTS,ECXVIET,ECXZIP,VA,VAERR
"RTN","ECXUTL2",101,0)
 K ECXSBGRP,ECXSVCI,ECXSVCL ;149
"RTN","ECXUTL2",102,0)
 Q
"RTN","ECXUTL2",103,0)
ENROLLM(DFN,RNDT) ;determines enrollment status, category, priority
"RTN","ECXUTL2",104,0)
 ;and user enrollee status
"RTN","ECXUTL2",105,0)
 ; input
"RTN","ECXUTL2",106,0)
 ;    DFN      = IEN from Patient file (Required)
"RTN","ECXUTL2",107,0)
 ;    RNDT     = Extract Run Date
"RTN","ECXUTL2",108,0)
 ; output
"RTN","ECXUTL2",109,0)
 ;    ECXSTAT  = Enrollment status
"RTN","ECXUTL2",110,0)
 ;    ECXPRIOR = Enrollment priority
"RTN","ECXUTL2",111,0)
 ;    ECXCAT   = Enrollment priority
"RTN","ECXUTL2",112,0)
 ;    ECXSBGRP = Enrollment subgroup
"RTN","ECXUTL2",113,0)
 ;    ECXUESTA = User enrollee
"RTN","ECXUTL2",114,0)
 ;    return value 0 if no data found, 1 if data found
"RTN","ECXUTL2",115,0)
 N CAT,PRIOR,STAT,X,X1,X2,X3,ENRIEN,ENR,FL,SBGRP
"RTN","ECXUTL2",116,0)
 S (ECXCAT,ECXPRIOR,ECXSTAT,ECXSBGRP,ECXEUSTA)=""
"RTN","ECXUTL2",117,0)
 I $G(DFN)="" Q 0
"RTN","ECXUTL2",118,0)
 ;User enrollee status, if current or future date set to 'U'
"RTN","ECXUTL2",119,0)
 ;DBIA #3989
"RTN","ECXUTL2",120,0)
 S ECXUESTA=$S($$UESTAT^EASUER(DFN):"U",1:"")
"RTN","ECXUTL2",121,0)
 ;Patient type
"RTN","ECXUTL2",122,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(DFN)
"RTN","ECXUTL2",123,0)
 ;Combat Veteran Status DBIA #4156
"RTN","ECXUTL2",124,0)
 S X3=$$CVEDT^ECXUTL5(DFN,$S($G(ECD):ECD,$G(ECXDATE):ECXDATE,1:DT))
"RTN","ECXUTL2",125,0)
 ;enrollment priority DBIA
"RTN","ECXUTL2",126,0)
 S STAT=$$STATUS^DGENA(DFN),PRIOR=$$PRIORITY^DGENA(DFN)
"RTN","ECXUTL2",127,0)
 S CAT=$$CATEGORY^DGENA4(DFN,STAT),SBGRP=$$ENRSBGRP^DGENA4(DFN)
"RTN","ECXUTL2",128,0)
 ;find current enrollment when status=2 or 19
"RTN","ECXUTL2",129,0)
 I "^2^19^"[("^"_STAT_"^") S ECXSTAT=STAT,ECXPRIOR=PRIOR,ECXCAT=CAT,ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"") Q 1
"RTN","ECXUTL2",130,0)
 ;find previous enrollment
"RTN","ECXUTL2",131,0)
 S ENRIEN=$$FINDCUR^DGENA(DFN) I ENRIEN="" Q 0
"RTN","ECXUTL2",132,0)
 I $G(RNDT)="" D NOW^%DTC S RNDT=X
"RTN","ECXUTL2",133,0)
 S RNDT=($E(RNDT,1,3)-1)_$E(RNDT,4,7),FL=0
"RTN","ECXUTL2",134,0)
 F  S ENRIEN=$$FINDPRI^DGENA(ENRIEN) Q:'ENRIEN  D  Q:FL
"RTN","ECXUTL2",135,0)
 . S ENR=$$GET^DGENA(ENRIEN,.ENR)
"RTN","ECXUTL2",136,0)
 . I "^2^19^"[("^"_$G(ENR("STATUS"))_"^"),$G(ENR("EFFDATE"))>RNDT D
"RTN","ECXUTL2",137,0)
 . . S ECXSTAT=$G(ENR("STATUS")),ECXPRIOR=PRIOR,FL=1
"RTN","ECXUTL2",138,0)
 . . S ECXCAT=$$CATEGORY^DGENA4(DFN,ECXSTAT)
"RTN","ECXUTL2",139,0)
 . . S ECXSBGRP=$$ENRSBGRP^DGENA4(DFN)
"RTN","ECXUTL2",140,0)
 . . S ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"")
"RTN","ECXUTL2",141,0)
 I FL Q 1
"RTN","ECXUTL2",142,0)
 ;no enrollment status found =2 or 19
"RTN","ECXUTL2",143,0)
 S ECXSTAT=STAT,ECXPRIOR=PRIOR,ECXCAT=CAT,ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"")
"RTN","ECXUTL2",144,0)
 Q 1
"RTN","ECXUTL2",145,0)
PRIMARY(ECXDFN,ECXDATE,ECXPREFX) ;determine patient's pc team and pc provider
"RTN","ECXUTL2",146,0)
 ; input
"RTN","ECXUTL2",147,0)
 ; ECXDFN    = file #2 ien (required)
"RTN","ECXUTL2",148,0)
 ; ECXDATE   = date of interest (required)
"RTN","ECXUTL2",149,0)
 ; ECXPREFX  = prefix for provider data (optional)
"RTN","ECXUTL2",150,0)
 ;             defaults to "2" if not specified otherwise
"RTN","ECXUTL2",151,0)
 ; output
"RTN","ECXUTL2",152,0)
 ; ECXPRIME  = pc team ien^prefix_pc provider ien^pc provider person
"RTN","ECXUTL2",153,0)
 ;class^pc provider npi^prefix_assoc pc provider ien^assoc pc provider
"RTN","ECXUTL2",154,0)
 ;person class^assoc pc provider npi
"RTN","ECXUTL2",155,0)
 N ECPTTM,ECPTPR,ECCLAS,ECPRIME,ECASPR,ECCLAS2
"RTN","ECXUTL2",156,0)
 S:'$D(ECXPREFX) ECXPREFX=2 S:(+ECXPREFX=0) ECXPREFX=2
"RTN","ECXUTL2",157,0)
 ;get pc team data
"RTN","ECXUTL2",158,0)
 S ECPTTM=+$$OUTPTTM^SDUTL3(ECXDFN,ECXDATE) S:ECPTTM=0 ECPTTM=""
"RTN","ECXUTL2",159,0)
 ;get primary pc provider data
"RTN","ECXUTL2",160,0)
 S ECPTPR=+$$OUTPTPR^SDUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",161,0)
 S ECCLAS="" I ECPTPR>0 S ECCLAS=$$PRVCLASS^ECXUTL(ECPTPR,ECXDATE)
"RTN","ECXUTL2",162,0)
 N ECXUSRTN S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECPTPR,ECXDATE)
"RTN","ECXUTL2",163,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECPTNPI=$P(ECXUSRTN,U)
"RTN","ECXUTL2",164,0)
 S:ECPTPR=0 ECPTPR="" S:ECPTPR]"" ECPTPR=ECXPREFX_ECPTPR
"RTN","ECXUTL2",165,0)
 ;assoc pc provider call ok if routine scapmca from patch177 is present
"RTN","ECXUTL2",166,0)
 S ECASPR=""
"RTN","ECXUTL2",167,0)
 S X="SCAPMCA" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL2",168,0)
 .S ECASPR=+$$OUTPTAP^SDUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",169,0)
 S ECCLAS2="" I ECASPR>0 S ECCLAS2=$$PRVCLASS^ECXUTL(ECASPR,ECXDATE)
"RTN","ECXUTL2",170,0)
 N ECXUSRTN S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECASPR,ECXDATE)
"RTN","ECXUTL2",171,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECASNPI=$P(ECXUSRTN,U)
"RTN","ECXUTL2",172,0)
 S:ECASPR=0 ECASPR="" S:ECASPR]"" ECASPR=ECXPREFX_ECASPR
"RTN","ECXUTL2",173,0)
 ;assemble
"RTN","ECXUTL2",174,0)
 S ECXPRIME=ECPTTM_U_ECPTPR_U_ECCLAS_U_ECPTNPI_U_ECASPR_U_ECCLAS2_U_ECASNPI
"RTN","ECXUTL2",175,0)
 Q ECXPRIME
"RTN","ECXUTL2",176,0)
INP(ECXDFN,ECXDATE) ; check for inpatient status
"RTN","ECXUTL2",177,0)
 ; input
"RTN","ECXUTL2",178,0)
 ; ECXDFN  = file #2 ien (required)
"RTN","ECXUTL2",179,0)
 ; ECXDATE = date of interest (required)
"RTN","ECXUTL2",180,0)
 ; output
"RTN","ECXUTL2",181,0)
 ; ECXINP  = patient status^movment # (file #405 ien)
"RTN","ECXUTL2",182,0)
 ;       current treat. spec. (file #42.4 ien)^admission date/time^
"RTN","ECXUTL2",183,0)
 ;       current ward (file #42 ien)^discharge date/time^
"RTN","ECXUTL2",184,0)
 ;       ward provider^attending phys.^ward (file #44 ien);facility
"RTN","ECXUTL2",185,0)
 ;       (file #40.8 ien);dss dept^dom
"RTN","ECXUTL2",186,0)
 ;           where patient status = I for inpatient
"RTN","ECXUTL2",187,0)
 ;                                = O for outpatient
"RTN","ECXUTL2",188,0)
 N DFN,DSSDEPT,ECA,ECADM,ECMN,ECTS,ECWARD,ECDC,ECXINP,ECXPRO
"RTN","ECXUTL2",189,0)
 N ECXATP,ECXDD,ECXDOM,ECXPROF,ECXPWP,ECXWW,FAC,VAIP,WRD,ECXPWPPC
"RTN","ECXUTL2",190,0)
 N ECXATPPC
"RTN","ECXUTL2",191,0)
 D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXUTL2",192,0)
 S ECXPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXUTL2",193,0)
 ;- Inpat/outpat indicator (ECA) initially set to "O" (outpatient)
"RTN","ECXUTL2",194,0)
 S DFN=ECXDFN,ECA="O"
"RTN","ECXUTL2",195,0)
 S (DSSDEPT,ECMN,ECTS,ECADM,ECWARD,ECDC,ECXATP,ECXPWP,ECXWW,WRD,FAC,ECXPWPPC,ECXATPPC)=""
"RTN","ECXUTL2",196,0)
 S VAIP("D")=ECXDATE D IN5^VADPT
"RTN","ECXUTL2",197,0)
 S ECMN=$G(VAIP(1))
"RTN","ECXUTL2",198,0)
 I ECMN D
"RTN","ECXUTL2",199,0)
 .S ECTS=+$P($G(^DIC(45.7,+VAIP(8),0)),U,2) S:ECTS=0 ECTS=""
"RTN","ECXUTL2",200,0)
 .;- Get inpat/outpat indicator
"RTN","ECXUTL2",201,0)
 .S ECA=$$INOUTP^ECXUTL4(ECTS)
"RTN","ECXUTL2",202,0)
 .S ECADM=+$G(VAIP(13,1)) S:ECADM=0 ECADM=""
"RTN","ECXUTL2",203,0)
 .S ECWARD=+$G(VAIP(5)) S:ECWARD=0 ECWARD=""
"RTN","ECXUTL2",204,0)
 .I ECWARD D
"RTN","ECXUTL2",205,0)
 ..S WRD=+$P($G(^DIC(42,+ECWARD,44)),U)
"RTN","ECXUTL2",206,0)
 ..S FAC=$P($G(^DIC(42,+ECWARD,0)),U,11)
"RTN","ECXUTL2",207,0)
 ..S DSSDEPT=$P($G(^ECX(727.4,ECWARD,0)),U,2)
"RTN","ECXUTL2",208,0)
 .S ECXWW=WRD_";"_FAC_";"_DSSDEPT,ECDC=+$G(VAIP(17,1)) S:ECDC=0 ECDC=""
"RTN","ECXUTL2",209,0)
 .S ECXPWP=+VAIP(7) S:ECXPWP=0 ECXPWP=""
"RTN","ECXUTL2",210,0)
 .S ECXATP=+VAIP(18) S:ECXATP=0 ECXATP=""
"RTN","ECXUTL2",211,0)
 .S ECXPWPPC=$$PRVCLASS^ECXUTL(ECXPWP,ECADM)
"RTN","ECXUTL2",212,0)
 .S ECXATPPC=$$PRVCLASS^ECXUTL(ECXATP,ECADM)
"RTN","ECXUTL2",213,0)
 .;prefix file #200 iens
"RTN","ECXUTL2",214,0)
 .S:ECXPWP ECXPWP=ECXPROF_ECXPWP S:ECXATP ECXATP=ECXPROF_ECXATP
"RTN","ECXUTL2",215,0)
 S ECXDOM=$P($G(^ECX(727.831,+ECTS,0)),U,2)
"RTN","ECXUTL2",216,0)
 S ECXINP=ECA_U_ECMN_U_ECTS_U_ECADM_U_ECWARD_U_ECDC_U_ECXPWP_U_ECXATP_U_ECXWW_U_ECXDOM_U_ECXPWPPC_U_ECXATPPC
"RTN","ECXUTL2",217,0)
 Q ECXINP
"RTN","ECXUTL2",218,0)
VISN19(ECXDFN,ECXPAYOR,ECXSAI) ;visn 19 sharing agreement data
"RTN","ECXUTL2",219,0)
 ; input  ECXDFN = patient file ien
"RTN","ECXUTL2",220,0)
 ; output ECXPAYOR, ECXSAI (passed by reference)
"RTN","ECXUTL2",221,0)
 N JJ,ALIAS,INSUR,DIC,DIQ,DA,DR,ECXARY,ECXERR,ECXDA
"RTN","ECXUTL2",222,0)
 S (ECXPAYOR,ECXSAI)=""
"RTN","ECXUTL2",223,0)
 D GETS^DIQ(2,ECXDFN,"1*,","I","ECXARY","ECXERR")
"RTN","ECXUTL2",224,0)
 I $D(ECXERR) Q
"RTN","ECXUTL2",225,0)
 S JJ=0 F  S JJ=$O(ECXARY(2.01,JJ)) Q:JJ=""  D  I ECXPAYOR]"" Q
"RTN","ECXUTL2",226,0)
 . S ALIAS=$G(ECXARY(2.01,JJ,.01,"I"))
"RTN","ECXUTL2",227,0)
 . S ECXPAYOR=$S(ALIAS="SHARING AGREEMENT":"A",ALIAS="TRICARE":"B",ALIAS="CAT C":"C",ALIAS="CATEGORY C":"C",ALIAS="CHAMPVA":"D",ALIAS="CHAMPUS":"E",1:"")
"RTN","ECXUTL2",228,0)
 . W !,$G(CNT)+1
"RTN","ECXUTL2",229,0)
 . W !,"The value of ECXPAYOR is: ",ECXPAYOR
"RTN","ECXUTL2",230,0)
 ;K ECXARY,ECXERR
"RTN","ECXUTL2",231,0)
 I ECXPAYOR]"" D GETS^DIQ(2,ECXDFN,".3121*,","I","ECXARY","ECXERR") D
"RTN","ECXUTL2",232,0)
 . I $D(ECXERR) Q
"RTN","ECXUTL2",233,0)
 . S JJ=0,ECXDA=$O(ECXARY(2.312,JJ)) I ECXDA="" Q
"RTN","ECXUTL2",234,0)
 . S DA=$G(ECXARY(2.312,ECXDA,.01,"I")) I DA="" Q
"RTN","ECXUTL2",235,0)
 . S INSUR=$$GET1^DIQ(36,DA,".01","I","","ECXERR")
"RTN","ECXUTL2",236,0)
 . I '$D(ECXERR) S ECXSAI=$E(ECXARY(2.312,ECXDA,.01,"I"),1,11)
"RTN","ECXUTL2",237,0)
 Q
"RTN","ECXUTL3")
0^4^B101960628^B97549884
"RTN","ECXUTL3",1,0)
ECXUTL3 ;ALB/GTS - Utilities for DSS Extracts ;3/26/15  16:33
"RTN","ECXUTL3",2,0)
 ;;3.0;DSS EXTRACTS;**11,24,32,33,35,37,39,42,46,92,105,120,144,149,154**;Dec 22,1997;Build 13
"RTN","ECXUTL3",3,0)
 ;
"RTN","ECXUTL3",4,0)
OUTPTTM(ECXDFN,ECXDT) ;* Return PC Team from PCMM files or DPT
"RTN","ECXUTL3",5,0)
 ; Variables -
"RTN","ECXUTL3",6,0)
 ;            ECXDFN - IEN from Patient file (Required)
"RTN","ECXUTL3",7,0)
 ;            ECXDT  - Relevant Date for Primary Care Team
"RTN","ECXUTL3",8,0)
 ;                      (Defaults to DT)
"RTN","ECXUTL3",9,0)
 ;
"RTN","ECXUTL3",10,0)
 ; Returned: ECXTM -
"RTN","ECXUTL3",11,0)
 ;            Pointer to team file (#404.51)
"RTN","ECXUTL3",12,0)
 ;            or, if error or none defined, returns 0
"RTN","ECXUTL3",13,0)
 ;
"RTN","ECXUTL3",14,0)
 Q:'$G(ECXDFN) 0 ;** Quit if ECXDFN not defined
"RTN","ECXUTL3",15,0)
 N ECXTM
"RTN","ECXUTL3",16,0)
 S:'$D(ECXDT) ECXDT=DT
"RTN","ECXUTL3",17,0)
 I $T(OUTPTTM^SDUTL3)[",SCDATE" D
"RTN","ECXUTL3",18,0)
 .S ECXTM=+$$OUTPTTM^SDUTL3(ECXDFN,ECXDT)
"RTN","ECXUTL3",19,0)
 I $T(OUTPTTM^SDUTL3)'[",SCDATE" D
"RTN","ECXUTL3",20,0)
 .S ECXTM=+$$OUTPTTM^SDUTL3(ECXDFN)
"RTN","ECXUTL3",21,0)
 I ECXTM=0 D
"RTN","ECXUTL3",22,0)
 .S ECXTM=+$P($G(^DPT(+ECXDFN,"PC")),U,2)
"RTN","ECXUTL3",23,0)
 Q ECXTM
"RTN","ECXUTL3",24,0)
 ;
"RTN","ECXUTL3",25,0)
OUTPTPR(ECXDFN,ECXDT) ;* Return PC Provider from PCMM files or DPT
"RTN","ECXUTL3",26,0)
 ; Variables -
"RTN","ECXUTL3",27,0)
 ;            ECXDFN - IEN from Patient file (Required)
"RTN","ECXUTL3",28,0)
 ;            ECXDT  - Relevant Date for Primary Care Provider
"RTN","ECXUTL3",29,0)
 ;                      (Defaults to DT)
"RTN","ECXUTL3",30,0)
 ;
"RTN","ECXUTL3",31,0)
 ; Returned: ECXPR -
"RTN","ECXUTL3",32,0)
 ;            Pointer to file #200 
"RTN","ECXUTL3",33,0)
 ;            or, if error or none defined, returns a 0
"RTN","ECXUTL3",34,0)
 ;
"RTN","ECXUTL3",35,0)
 Q:'$G(ECXDFN) 0 ;** Quit if ECXDFN not defined
"RTN","ECXUTL3",36,0)
 N ECXPR
"RTN","ECXUTL3",37,0)
 S:'$D(ECXDT) ECXDT=DT
"RTN","ECXUTL3",38,0)
 I $T(OUTPTPR^SDUTL3)[",SCDATE" D
"RTN","ECXUTL3",39,0)
 .S ECXPR=+$$OUTPTPR^SDUTL3(ECXDFN,ECXDT)
"RTN","ECXUTL3",40,0)
 I $T(OUTPTPR^SDUTL3)'[",SCDATE" D
"RTN","ECXUTL3",41,0)
 .S ECXPR=+$$OUTPTPR^SDUTL3(ECXDFN)
"RTN","ECXUTL3",42,0)
 I ECXPR=0 D
"RTN","ECXUTL3",43,0)
 .S ECXPR=+$G(^DPT(+ECXDFN,"PC"))
"RTN","ECXUTL3",44,0)
 Q ECXPR
"RTN","ECXUTL3",45,0)
 ;
"RTN","ECXUTL3",46,0)
PAT(ECXDFN,ECXDATE,ECXDATA,ECXPAT) ;Return basic patient data for extract
"RTN","ECXUTL3",47,0)
 ; Will not return data associated with test patients (SSN begin w 00000)
"RTN","ECXUTL3",48,0)
 ; Variables -
"RTN","ECXUTL3",49,0)
 ;  Input  ECXDFN - Patient internal entry number, DFN file#2; required
"RTN","ECXUTL3",50,0)
 ;         ECXDATE- Date used to get specific data from GETSTAT^DGMSTAPI
"RTN","ECXUTL3",51,0)
 ;                  for MST. If no date, defaults to today's date,
"RTN","ECXUTL3",52,0)
 ;                  standard FM format, optional
"RTN","ECXUTL3",53,0)
 ;         ECXDATA- Code indicating which data to return, optional.
"RTN","ECXUTL3",54,0)
 ;                  If code not specified then returns all. Codes are:
"RTN","ECXUTL3",55,0)
 ;                  1 - DEM^VADPT (demographic data)
"RTN","ECXUTL3",56,0)
 ;                  2 - ADD^VADPT (current address)
"RTN","ECXUTL3",57,0)
 ;                  3 - ELIG^VADPT (eligibility & enrollment location)
"RTN","ECXUTL3",58,0)
 ;                  4 - OPD^VADPT (other patient data)
"RTN","ECXUTL3",59,0)
 ;                  5 - SVC^VADPT & GETSTAT^DGMSTAPI (service & MST inf)
"RTN","ECXUTL3",60,0)
 ;         ECXPAT(- Passed by reference; required
"RTN","ECXUTL3",61,0)
 ;
"RTN","ECXUTL3",62,0)
 ;  Output:
"RTN","ECXUTL3",63,0)
 ;         ECXPAT   0 error or test patient no data in ECXPAT array
"RTN","ECXUTL3",64,0)
 ;                  1 data returned in ECXPAT array
"RTN","ECXUTL3",65,0)
 ;         ECXPAT(  Local array with patient data.
"RTN","ECXUTL3",66,0)
 ;
"RTN","ECXUTL3",67,0)
 N SSN,I,ECXCOD,ECXDAT,DFN,VAPA,VADM,VAEL,VAPD,VASV,STR,ECXAR,DIC,DIQ,RCNUM,RCVAL,COLMETH
"RTN","ECXUTL3",68,0)
 N DA,DR,PELG,MELIG,ZIP,MPI
"RTN","ECXUTL3",69,0)
 I ECXDFN="" Q 0
"RTN","ECXUTL3",70,0)
 S SSN=$$GET1^DIQ(2,ECXDFN,.09,"I"),DFN=ECXDFN,ECXPAT=0
"RTN","ECXUTL3",71,0)
 ;I $E(SSN,1,3)="000"!(SSN="") K ECXPAT Q 0  ;154 removed as these checks are done in ECXUTL5 ;test patient
"RTN","ECXUTL3",72,0)
 ;test patient extended checks; mtl extract excluded
"RTN","ECXUTL3",73,0)
 I $G(ECHEAD)'="MTL" D  I $G(ECXPAT)="" Q 0  ;154 modified section for SSN testing
"RTN","ECXUTL3",74,0)
 .I $G(ECHEAD)="ECS" I $E(SSN,1,5)="00000" I "^CH103^CH104^CH105^CH106^CH107^CH108^CH109^"[("^"_$G(ECPNM)_"^") Q  ;154 If event capture extract and 5 leading zeroes test patient and workload is CH103 to CH109 then allow test SSN
"RTN","ECXUTL3",75,0)
 .I '$$SSN^ECXUTL5(SSN) K ECXPAT
"RTN","ECXUTL3",76,0)
 S STR="NAME;SSN;DOB;SEX;RACE;RELIGION;STATE;COUNTY;ZIP;SC%;MEANS;ELIG;"
"RTN","ECXUTL3",77,0)
 S STR=STR_"EMPLOY;AO STAT;IR STAT;EC STAT;POW STAT;POW LOC;MST STAT;"
"RTN","ECXUTL3",78,0)
 S STR=STR_"ENROLL LOC;MPI;VIETNAM;POS;MARITAL;CL STAT;COMBSVCI;COMBSVCL" ;149 COMB SVS IND,LOC
"RTN","ECXUTL3",79,0)
 ;initialize return array values
"RTN","ECXUTL3",80,0)
 F I=1:1 S ECXDAT=$P(STR,";",I) Q:ECXDAT=""  S ECXPAT(ECXDAT)=""
"RTN","ECXUTL3",81,0)
 F I=1:1:$L(ECXDATA,";") S ECXDAT=$P(ECXDATA,";",I) I ECXDAT'="" D
"RTN","ECXUTL3",82,0)
 . S ECXCOD(ECXDAT)=""
"RTN","ECXUTL3",83,0)
 ;
"RTN","ECXUTL3",84,0)
 ;- Get ICN if MPI installed
"RTN","ECXUTL3",85,0)
 S X="MPIF001" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",86,0)
 .;
"RTN","ECXUTL3",87,0)
 .;- Get 1st piece (either ICN # or -1 if error)
"RTN","ECXUTL3",88,0)
 . S MPI=+$$GETICN^MPIF001(DFN)
"RTN","ECXUTL3",89,0)
 .;
"RTN","ECXUTL3",90,0)
 .;- If error, set to null
"RTN","ECXUTL3",91,0)
 . S ECXPAT("MPI")=$S(MPI>0:MPI,1:"")
"RTN","ECXUTL3",92,0)
 D  ;get demographic data
"RTN","ECXUTL3",93,0)
 . I ECXDATA'="",'$D(ECXCOD(1)) Q
"RTN","ECXUTL3",94,0)
 . D DEM^VADPT
"RTN","ECXUTL3",95,0)
 . S ECXPAT("NAME")=$E($P(VADM(1),",")_"    ",1,4)
"RTN","ECXUTL3",96,0)
 . S ECXPAT("SSN")=$P(VADM(2),U),ECXPAT("MARITAL")=$P(VADM(10),U)
"RTN","ECXUTL3",97,0)
 . S ECXPAT("DOB")=$$ECXDOB^ECXUTL($P(VADM(3),U))
"RTN","ECXUTL3",98,0)
 . S ECXPAT("SEX")=$P(VADM(5),U),ECXPAT("RELIGION")=$P(VADM(9),U)
"RTN","ECXUTL3",99,0)
 . S DIC=10,DR=2,DA=+VADM(8),DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",100,0)
 . S ECXPAT("RACE")=$G(ECXAR(10,DA,DR,"I")),ECXPAT=1
"RTN","ECXUTL3",101,0)
 . ;add new race and ethnicity fields for FY2003
"RTN","ECXUTL3",102,0)
 . S (ECXPAT("ETHNIC"),ECXPAT("RACE1"))=""
"RTN","ECXUTL3",103,0)
 . S X="DGUTL4" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",104,0)
 .. S COLMETH=$$PTR2CODE^DGUTL4($G(VADM(11,1,1)),3,4) I COLMETH="S" D
"RTN","ECXUTL3",105,0)
 ... S ECXPAT("ETHNIC")=$$PTR2CODE^DGUTL4(+$G(VADM(11,1)),2,4)
"RTN","ECXUTL3",106,0)
 .. S (RCVAL,RCNUM)=""
"RTN","ECXUTL3",107,0)
 .. F  S RCNUM=$O(VADM(12,RCNUM)) Q:RCNUM=""  Q:RCVAL="C"  S COLMETH=$$PTR2CODE^DGUTL4(+$G(VADM(12,RCNUM,1)),3,4) I COLMETH="S" D
"RTN","ECXUTL3",108,0)
 ... S RCVAL=$$PTR2CODE^DGUTL4(+$G(VADM(12,RCNUM)),1,4)
"RTN","ECXUTL3",109,0)
 ... I RCVAL="C" S ECXPAT("RACE1")=RCVAL Q
"RTN","ECXUTL3",110,0)
 ... S ECXPAT("RACE1")=ECXPAT("RACE1")_RCVAL
"RTN","ECXUTL3",111,0)
 .I ECXPAT("RACE1")="" S ECXPAT("RACE1")=$$CHECKRC(+VADM(8)) ;144 If RACE1 is null, check value in RACE field
"RTN","ECXUTL3",112,0)
 D  ;get address information
"RTN","ECXUTL3",113,0)
 . I ECXDATA'="",'$D(ECXCOD(2)) Q
"RTN","ECXUTL3",114,0)
 . D ADD^VADPT
"RTN","ECXUTL3",115,0)
 . S DIC=5,DR=2,DA=+VAPA(5),DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",116,0)
 . S ECXPAT("STATE")=$G(ECXAR(5,DA,DR,"I"))
"RTN","ECXUTL3",117,0)
 . S DIC=5,DA=+VAPA(5),DR=3,DR(5.01)=2,DA(5.01)=+VAPA(7),DIQ="ECXAR"
"RTN","ECXUTL3",118,0)
 . S DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",119,0)
 . S ECXPAT("COUNTY")=$G(ECXAR(5.01,DA(5.01),2,"I"))
"RTN","ECXUTL3",120,0)
 . S ECXPAT("ZIP")=$P(VAPA(11),U,2)
"RTN","ECXUTL3",121,0)
 . S ECXPAT("COUNTRY")=$$GET1^DIQ(779.004,+$P($G(VAPA(25)),U),.01)
"RTN","ECXUTL3",122,0)
 . S ECXPAT=1
"RTN","ECXUTL3",123,0)
 D  ;get eligibility information
"RTN","ECXUTL3",124,0)
 . I ECXDATA'="",'$D(ECXCOD(3)) Q
"RTN","ECXUTL3",125,0)
 . D ELIG^VADPT
"RTN","ECXUTL3",126,0)
 . S PELG=$P(VAEL(1),U),MELIG=$S(PELG="":"",1:$$GET1^DIQ(8,PELG,8,"I"))
"RTN","ECXUTL3",127,0)
 . S ECXPAT("POS")=$P($G(^DIC(21,+VAEL(2),0)),U,3)
"RTN","ECXUTL3",128,0)
 . S ECXPAT("SC STAT")=$S(+VAEL(3):"Y",+VAEL(3)=0:"N",1:"")
"RTN","ECXUTL3",129,0)
 . S ECXPAT("SC%")=$P(VAEL(3),U,2)
"RTN","ECXUTL3",130,0)
 . S ECXPAT("VET")=$S(VAEL(4):"Y",VAEL(4)=0:"N",1:"")
"RTN","ECXUTL3",131,0)
 . S ECXPAT("MEANS")=$P(VAEL(9),U),ECXPAT=1
"RTN","ECXUTL3",132,0)
 . S ECXPAT("ELIG")=$$ELIG(MELIG,ECXPAT("SC%"))
"RTN","ECXUTL3",133,0)
 . ;get enrollment location
"RTN","ECXUTL3",134,0)
 . S DIC=2,DR=27.02,DA=ECXDFN,DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",135,0)
 . S ECXDAT=$G(ECXAR(2,ECXDFN,DR,"I")) I ECXDAT K ECXAR D
"RTN","ECXUTL3",136,0)
 . . S DIC=4,DA=ECXDAT,DR=99,DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",137,0)
 . . S ECXPAT("ENROLL LOC")=ECXAR(4,ECXDAT,DR,"I")
"RTN","ECXUTL3",138,0)
 . ;get Emergency Response Indicator (FEMA)
"RTN","ECXUTL3",139,0)
 . S ECXPAT("ERI")=$$GET1^DIQ(2,ECXDFN,.181,"I")
"RTN","ECXUTL3",140,0)
 D  ;get other patient information
"RTN","ECXUTL3",141,0)
 . I ECXDATA'="",'$D(ECXCOD(4)) Q
"RTN","ECXUTL3",142,0)
 . D OPD^VADPT
"RTN","ECXUTL3",143,0)
 . S ECXPAT("EMPLOY")=$P(VAPD(7),U),ECXPAT=1
"RTN","ECXUTL3",144,0)
 D  ;get service information
"RTN","ECXUTL3",145,0)
 . I ECXDATA'="",'$D(ECXCOD(5)) Q
"RTN","ECXUTL3",146,0)
 . D SVC^VADPT
"RTN","ECXUTL3",147,0)
 . S ECXPAT("VIETNAM")=$S(VASV(1):"Y",VASV(1)=0:"N",1:"U") ;149 
"RTN","ECXUTL3",148,0)
 . S ECXPAT("AO STAT")=$S(VASV(2):"Y",VASV(2)=0:"N",1:"U")
"RTN","ECXUTL3",149,0)
 . S ECXPAT("IR STAT")=$S(VASV(3):"Y",VASV(3)=0:"N",1:"U")
"RTN","ECXUTL3",150,0)
 . S ECXPAT("EC STAT")=$$GET1^DIQ(2,ECXDFN,.322013,"I")
"RTN","ECXUTL3",151,0)
 . S ECXPAT("POW STAT")=$S(VASV(4):"Y",VASV(4)=0:"N",1:"U")
"RTN","ECXUTL3",152,0)
 . S ECXPAT("POW LOC")=$P(VASV(4,3),U),ECXPAT=1
"RTN","ECXUTL3",153,0)
 . S ECXPAT("PHI")=$S(VASV(9)=1:"Y",VASV(9)=0:"N",1:"")
"RTN","ECXUTL3",154,0)
 . S ECXPAT("CL STAT")=$S($G(VASV(15)):"Y",$G(VASV(15))=0:"N",1:"") ;144,149 Camp Lejeune status will be in VASV(15) when SVC^VADPT provides it
"RTN","ECXUTL3",155,0)
 . ;- Agent Orange Location (K=Korean DMZ,V=Vietnam)
"RTN","ECXUTL3",156,0)
 . S ECXPAT("AOL")=$P($G(VASV(2,5)),U)
"RTN","ECXUTL3",157,0)
 . S ECXPAT("COMBSVCI")=$S(VASV(5):"Y",VASV(5)=0:"N",1:"") ;149 COMBAT SVC IND
"RTN","ECXUTL3",158,0)
 . S ECXPAT("COMBSVCL")=$$GET1^DIQ(22,$P($G(VASV(5,3)),"^"),1) ;149 COMBAT SVC LOC USE ABBR
"RTN","ECXUTL3",159,0)
 . ;get patient OEF/OIF status and date of return
"RTN","ECXUTL3",160,0)
 . D OEFDATA^ECXUTL4
"RTN","ECXUTL3",161,0)
 . ;
"RTN","ECXUTL3",162,0)
 . ;get patient current MST status
"RTN","ECXUTL3",163,0)
 . I ECXDATE'="",ECXDATE'["." S ECXDATE=ECXDATE+.9
"RTN","ECXUTL3",164,0)
 . S X="DGMSTAPI" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",165,0)
 . . S ECXDAT=$$GETSTAT^DGMSTAPI(DFN,ECXDATE)
"RTN","ECXUTL3",166,0)
 . . S ECXPAT("MST STAT")=$S(+ECXDAT>0:$P(ECXDAT,U,2),1:"")
"RTN","ECXUTL3",167,0)
 I 'ECXPAT K ECXPAT Q 0
"RTN","ECXUTL3",168,0)
 Q 1
"RTN","ECXUTL3",169,0)
 ;
"RTN","ECXUTL3",170,0)
ELIG(ECXELIG,ECXSVCP) ;Converts veteran eligibility code to NPCD code
"RTN","ECXUTL3",171,0)
 ; Variables -
"RTN","ECXUTL3",172,0)
 ;  Input  ECXELIG - Pointer to MAS ELIGIBILITY CODE file #8.1
"RTN","ECXUTL3",173,0)
 ;         ECXSVCP - Number value rep. service connected percentage.
"RTN","ECXUTL3",174,0)
 ;
"RTN","ECXUTL3",175,0)
 ;  Output:
"RTN","ECXUTL3",176,0)
 ;         ECXNCPD  NPCD Eligibility Code
"RTN","ECXUTL3",177,0)
 ;
"RTN","ECXUTL3",178,0)
 N TEXT,IEN,SCPER,FND,NPCD,I,ECXBG,ECXEN,ECXNPCD
"RTN","ECXUTL3",179,0)
 I ECXELIG="" Q ""
"RTN","ECXUTL3",180,0)
 F I=1:1 S TEXT=$P($T(ELGTXT+I),";",3,999) Q:TEXT="END"  D  I $D(NPCD) Q
"RTN","ECXUTL3",181,0)
 . S IEN=$P(TEXT,";"),SCPER=$P(TEXT,";",2)
"RTN","ECXUTL3",182,0)
 . I ECXELIG=IEN D
"RTN","ECXUTL3",183,0)
 . . I SCPER="" S NPCD=$P(TEXT,";",3) Q
"RTN","ECXUTL3",184,0)
 . . S ECXBG=$S($E(SCPER)="<":0,$E(SCPER)=">":$P(SCPER,">",2)+1,SCPER["-":+SCPER,1:"")
"RTN","ECXUTL3",185,0)
 . . S ECXEN=$S($E(SCPER)="<":$P(SCPER,"<",2),$E(SCPER)=">":100,SCPER["-":$P(SCPER,"-",2),1:"")
"RTN","ECXUTL3",186,0)
 . . I ECXSVCP'<ECXBG,ECXSVCP'>ECXEN S NPCD=$P(TEXT,";",3)
"RTN","ECXUTL3",187,0)
 S ECXNPCD=$G(NPCD)
"RTN","ECXUTL3",188,0)
 Q ECXNPCD
"RTN","ECXUTL3",189,0)
ELGTXT ;Eligibility codes
"RTN","ECXUTL3",190,0)
 ;;1;>49;10;SC 50-100%
"RTN","ECXUTL3",191,0)
 ;;2;;20;Aid & Attendance
"RTN","ECXUTL3",192,0)
 ;;15;;21;Housebound
"RTN","ECXUTL3",193,0)
 ;;16;;22;Mexican Border War
"RTN","ECXUTL3",194,0)
 ;;17;;23;WWI
"RTN","ECXUTL3",195,0)
 ;;18;;24;POW
"RTN","ECXUTL3",196,0)
 ;;3;40-49;30;SC 40-49%
"RTN","ECXUTL3",197,0)
 ;;3;30-39;31;SC 30-39%
"RTN","ECXUTL3",198,0)
 ;;3;20-29;32;SC 20-29%
"RTN","ECXUTL3",199,0)
 ;;3;10-19;33;SC 10-19%
"RTN","ECXUTL3",200,0)
 ;;3;<10;34;SC less than 10%
"RTN","ECXUTL3",201,0)
 ;;4;;40;NSC - VA Pension
"RTN","ECXUTL3",202,0)
 ;;5;;50;NSC
"RTN","ECXUTL3",203,0)
 ;;21;;60;Catastrophic Disability
"RTN","ECXUTL3",204,0)
 ;;12;;101;CHAMPVA
"RTN","ECXUTL3",205,0)
 ;;13;;102;Collateral of Veteran
"RTN","ECXUTL3",206,0)
 ;;14;;103;Employee
"RTN","ECXUTL3",207,0)
 ;;6;;104;Other Federal Agency
"RTN","ECXUTL3",208,0)
 ;;7;;105;Allied Veteran
"RTN","ECXUTL3",209,0)
 ;;8;;106;Humanitarian Emergency
"RTN","ECXUTL3",210,0)
 ;;9;;107;Sharing Agreement
"RTN","ECXUTL3",211,0)
 ;;10;;108;Reimbursable Insurance
"RTN","ECXUTL3",212,0)
 ;;19;;109;TRICARE/CHAMPUS
"RTN","ECXUTL3",213,0)
 ;;22;;25;Purple Heart Recipient
"RTN","ECXUTL3",214,0)
 ;;END
"RTN","ECXUTL3",215,0)
 ;
"RTN","ECXUTL3",216,0)
CPT(ECXCPT,ECXMOD,ECXQUA) ;Returns a str with CPT code and modifier codes
"RTN","ECXUTL3",217,0)
 ;Return string is composed of a 5 character CPT code 2 character quantity
"RTN","ECXUTL3",218,0)
 ;plus up to 5 modifier codes, 2 characters each.
"RTN","ECXUTL3",219,0)
 ; Variables -
"RTN","ECXUTL3",220,0)
 ;  Input  ECXCPT  - Pointer value to the CPT file (#81)
"RTN","ECXUTL3",221,0)
 ;         ECXMOD - A string with pointer values to the CPT
"RTN","ECXUTL3",222,0)
 ;                   MODIFIER file (#81.3) separated by ";"
"RTN","ECXUTL3",223,0)
 ;         ECXQUA  - Number of time this procedure performed
"RTN","ECXUTL3",224,0)
 ;
"RTN","ECXUTL3",225,0)
 ;  Output:
"RTN","ECXUTL3",226,0)
 ;         CPTMOD  - String of up to 17 characters, 5 character CPT
"RTN","ECXUTL3",227,0)
 ;                   code 2 character qty plus up to 5 2-character
"RTN","ECXUTL3",228,0)
 ;                   code modifiers.
"RTN","ECXUTL3",229,0)
 ;
"RTN","ECXUTL3",230,0)
 N CPT,MOD,I,CPTMOD
"RTN","ECXUTL3",231,0)
 S ECXQUA=$G(ECXQUA,"01"),ECXMOD=$G(ECXMOD)
"RTN","ECXUTL3",232,0)
 S:$L(ECXQUA)'=2 ECXQUA="0"_ECXQUA
"RTN","ECXUTL3",233,0)
 S CPT=$$CPT^ICPTCOD(ECXCPT,"") I +CPT=-1 Q ""
"RTN","ECXUTL3",234,0)
 S CPT=$P(CPT,U,2)_ECXQUA
"RTN","ECXUTL3",235,0)
 F I=1:1:99 I $P(ECXMOD,";",I)'="" D
"RTN","ECXUTL3",236,0)
 . S MOD=$$MOD^ICPTMOD($P(ECXMOD,";",I),"I","")
"RTN","ECXUTL3",237,0)
 . I +MOD>0,$P(MOD,U,2)'="99" S CPT=CPT_$P(MOD,U,2)
"RTN","ECXUTL3",238,0)
 S CPTMOD=$TR($E(CPT,1,17)," ")
"RTN","ECXUTL3",239,0)
 Q CPTMOD
"RTN","ECXUTL3",240,0)
 ;
"RTN","ECXUTL3",241,0)
CPTOUT(ECXCPT) ;output transform for CPT code plus modifiers
"RTN","ECXUTL3",242,0)
 ;input  ECXCPT  - character string of CPT code plus modifiers (required)
"RTN","ECXUTL3",243,0)
 ;
"RTN","ECXUTL3",244,0)
 N J,CPTX,MOD,MODS,MODX,CPTMOD
"RTN","ECXUTL3",245,0)
 Q:$G(ECXCPT)="" ""
"RTN","ECXUTL3",246,0)
 S (CPTMOD,MODX)=""
"RTN","ECXUTL3",247,0)
 S CPTX="("_+$E(ECXCPT,6,7)_") "_$E(ECXCPT,1,5),MODS=$E(ECXCPT,8,17)
"RTN","ECXUTL3",248,0)
 F J=1:2:9 S MOD=$E(MODS,J,J+1) Q:MOD=""  D
"RTN","ECXUTL3",249,0)
 .I J>1 S MODX=MODX_", "_MOD Q
"RTN","ECXUTL3",250,0)
 .S MODX=MODX_"-"_MOD
"RTN","ECXUTL3",251,0)
 S:$L(CPTX)>3 CPTMOD=CPTMOD_CPTX_MODX
"RTN","ECXUTL3",252,0)
 Q CPTMOD
"RTN","ECXUTL3",253,0)
 ;
"RTN","ECXUTL3",254,0)
CHECKRC(RACEIEN) ;144 API added to check RACE for non-stardard values that can be converted.  If the value can be converted then it will be stored in RACE1 upon return
"RTN","ECXUTL3",255,0)
 N NAME,DIC,X,Y,PTFVAL
"RTN","ECXUTL3",256,0)
 S NAME=$$PTR2TEXT^DGUTL4(RACEIEN)
"RTN","ECXUTL3",257,0)
 S PTFVAL=""
"RTN","ECXUTL3",258,0)
 I NAME="AMER INDIAN OR ALASKAN NATIVE"!(NAME="AMERICAN INDIAN")!(NAME="AMERICAN INDIAN/ALASKAN NATIVE")!(NAME="AMERICAN INDIAN OR ALASKAN NATIVE") S X="AMERICAN INDIAN OR ALASKA NATIVE"
"RTN","ECXUTL3",259,0)
 I NAME="AMERICAN INDIAN/ALASKA NATIVE"!(NAME="AMERICAN INDIAN/ALASKAN")!(NAME="AMERICAN INDIANT OR ALASKA NATIVE") S X="AMERICAN INDIAN OR ALASKA NATIVE"
"RTN","ECXUTL3",260,0)
 I NAME="BLACK"!(NAME="BLACK NOT OF HISP ORIG")!(NAME="BLACK, NON HISPANIC")!(NAME="BLACK, NOT OF HISPANIC ORIGIN") S X="BLACK OR AFRICAN AMERICAN"
"RTN","ECXUTL3",261,0)
 I NAME="BLACK,NOT OF HISPANIC ORIGIN"!(NAME="HISPANIC BLACK")!(NAME="HISPANIC, BLACK")!(NAME="HISPANIC,BLACK") S X="BLACK OR AFRICAN AMERICAN"
"RTN","ECXUTL3",262,0)
 I NAME="WHITE NOT OF HISP ORIG"!(NAME="WHITE, NON HISPANIC")!(NAME="WHITE, NOT OF HISPANIC")!(NAME="WHITE, NOT OF HISPANIC ORIGIN")!(NAME="WHITE,NOT OF HISPANIC ORIGIN") S X="WHITE"
"RTN","ECXUTL3",263,0)
 I NAME="CAUCASIAN"!(NAME="CAUCASIAN, NOT OF HISPANIC ORIGIN")!(NAME="HISPANIC WHITE")!(NAME="HISPANIC, WHITE")!(NAME="HISPANIC,WHITE") S X="WHITE"
"RTN","ECXUTL3",264,0)
 I NAME="PACIFIC ISLANDER" S X="NATIVE HAWAIIAN OR OTHER PACIFIC ISLANDER"
"RTN","ECXUTL3",265,0)
 S DIC(0)="MQ",DIC=10 D ^DIC ;Find standard race in RACE file
"RTN","ECXUTL3",266,0)
 I Y S PTFVAL=$$PTR2CODE^DGUTL4(+Y,1,4) ;If found, get PTF value to return
"RTN","ECXUTL3",267,0)
 Q PTFVAL
"RTN","ECXUTL4")
0^14^B46454603^B55297923
"RTN","ECXUTL4",1,0)
ECXUTL4 ;ALB/ESD - Utilities for DSS Extracts ;3/12/15  16:41
"RTN","ECXUTL4",2,0)
 ;;3.0;DSS EXTRACTS;**39,41,46,49,78,92,105,112,120,127,154**;Dec 22,1997;Build 13
"RTN","ECXUTL4",3,0)
 ;
"RTN","ECXUTL4",4,0)
OBSPAT(ECXIO,ECXTS,DSSID) ;
"RTN","ECXUTL4",5,0)
 ; Get observation patient indicator from DSS TREATING SPECIALTY
"RTN","ECXUTL4",6,0)
 ; TRANSLATION file (#727.831) or DSS Identifier
"RTN","ECXUTL4",7,0)
 ;
"RTN","ECXUTL4",8,0)
 ; Input:
"RTN","ECXUTL4",9,0)
 ;   ECXIO  - Inpatient/Outpatient indicator
"RTN","ECXUTL4",10,0)
 ;   ECXTS  - Treating specialty (from file #42.4)
"RTN","ECXUTL4",11,0)
 ;   DSSID  - DSS Identifier
"RTN","ECXUTL4",12,0)
 ;
"RTN","ECXUTL4",13,0)
 ;Output:
"RTN","ECXUTL4",14,0)
 ;   ECXOBS - Observation patient indicator (YES/NO)
"RTN","ECXUTL4",15,0)
 ;
"RTN","ECXUTL4",16,0)
 ;- Check input vars
"RTN","ECXUTL4",17,0)
 S ECXIO=$G(ECXIO),ECXTS=+$G(ECXTS),DSSID=+$G(DSSID)
"RTN","ECXUTL4",18,0)
 S ECXOBS=""
"RTN","ECXUTL4",19,0)
 D
"RTN","ECXUTL4",20,0)
 .;- Look up obs patient indicator if treating spec is in file #727.831
"RTN","ECXUTL4",21,0)
 . I $G(^ECX(727.831,ECXTS,0)) S ECXOBS=$P($G(^ECX(727.831,ECXTS,0)),"^",4)
"RTN","ECXUTL4",22,0)
 . I ECXOBS'="" S ECXOBS=$S(ECXOBS="Y":"YES",1:"NO") Q
"RTN","ECXUTL4",23,0)
 .;
"RTN","ECXUTL4",24,0)
 .;- If outpatient and TS not in file, AND Feeder Key (CLI) or DSS ID
"RTN","ECXUTL4",25,0)
 .;- (MTL,IVP,ECQ,QSR,NOS,SUR) is 290-297, Observation Patient Ind=YES
"RTN","ECXUTL4",26,0)
 . I ECXIO="O",ECXOBS="",DSSID D
"RTN","ECXUTL4",27,0)
 .. I $E(DSSID,1,3)>289&($E(DSSID,1,3)<298) S ECXOBS="YES"
"RTN","ECXUTL4",28,0)
 .. E  S ECXOBS="NO"
"RTN","ECXUTL4",29,0)
 Q $S(ECXOBS'="":ECXOBS,1:"NO")
"RTN","ECXUTL4",30,0)
 ;
"RTN","ECXUTL4",31,0)
INOUTP(ECXTS) ;
"RTN","ECXUTL4",32,0)
 ; Get inpatient/outpatient indicator from DSS TREATING SPECIALTY
"RTN","ECXUTL4",33,0)
 ; TRANSLATION file (#727.831)
"RTN","ECXUTL4",34,0)
 ;
"RTN","ECXUTL4",35,0)
 ; Input:
"RTN","ECXUTL4",36,0)
 ;   ECXTS   - Treating specialty
"RTN","ECXUTL4",37,0)
 ;
"RTN","ECXUTL4",38,0)
 ; Output:
"RTN","ECXUTL4",39,0)
 ;             Inpatient/Outpatient indicator (I/O)
"RTN","ECXUTL4",40,0)
 ;
"RTN","ECXUTL4",41,0)
 S ECXTS=+$G(ECXTS)
"RTN","ECXUTL4",42,0)
 S ECXIO=""
"RTN","ECXUTL4",43,0)
 ;
"RTN","ECXUTL4",44,0)
 ;- Look up inpat/outpat indicator if treating spec is in file
"RTN","ECXUTL4",45,0)
 I $G(^ECX(727.831,ECXTS,0)) S ECXIO=$P($G(^ECX(727.831,ECXTS,0)),"^",5)
"RTN","ECXUTL4",46,0)
 Q $S(ECXIO'="":ECXIO,1:"I")
"RTN","ECXUTL4",47,0)
 ;
"RTN","ECXUTL4",48,0)
ENCNUM(ECXIO,ECXSSN,ECXADT,ECXVDT,ECXTRT,ECXOBS,ECXEXT,ECXSTP,ECXSTP2) ;
"RTN","ECXUTL4",49,0)
 ; Get encounter number
"RTN","ECXUTL4",50,0)
 ;
"RTN","ECXUTL4",51,0)
 ; Input:
"RTN","ECXUTL4",52,0)
 ;   ECXIO   - Inpat/Outpat indicator = I or O
"RTN","ECXUTL4",53,0)
 ;   ECXSSN  - Patient SSN
"RTN","ECXUTL4",54,0)
 ;   ECXADT  - Admit Date
"RTN","ECXUTL4",55,0)
 ;   ECXVDT  - Visit Date
"RTN","ECXUTL4",56,0)
 ;   ECXTRT  - Treating Spec
"RTN","ECXUTL4",57,0)
 ;   ECXOBS  - Observation Pat Indicator
"RTN","ECXUTL4",58,0)
 ;   ECXEXT  - Extract
"RTN","ECXUTL4",59,0)
 ;   ECXSTP  - Stop Code (or stop code related) variable
"RTN","ECXUTL4",60,0)
 ;   ECXSTP2 - Stop Code (or stop code related) addtl variable
"RTN","ECXUTL4",61,0)
 ;             (used for SUR and ECS)
"RTN","ECXUTL4",62,0)
 ;
"RTN","ECXUTL4",63,0)
 ;Output:
"RTN","ECXUTL4",64,0)
 ;             Encounter Number
"RTN","ECXUTL4",65,0)
 ;
"RTN","ECXUTL4",66,0)
 N ENCNUM,ECXDATE,ECXSTCD
"RTN","ECXUTL4",67,0)
 S (ENCNUM,ECXSTCD)=""
"RTN","ECXUTL4",68,0)
 ;
"RTN","ECXUTL4",69,0)
 ;- Check input vars
"RTN","ECXUTL4",70,0)
 S ECXEXT=$G(ECXEXT),ECXIO=$G(ECXIO),ECXOBS=$G(ECXOBS),ECXTRT=+$G(ECXTRT)
"RTN","ECXUTL4",71,0)
 S:ECXEXT'="ECS"&(ECXEXT'="ECQ") ECXSTP=+$G(ECXSTP) S ECXSTP2=+$G(ECXSTP2) ;154 Allow stop code/DSS ID for ECS&ECQ to be non-numeric
"RTN","ECXUTL4",72,0)
 S ECXADT=+$G(ECXADT),ECXVDT=+$G(ECXVDT)
"RTN","ECXUTL4",73,0)
 ;
"RTN","ECXUTL4",74,0)
 ;- Don't use pseudo-SSN in encounter number
"RTN","ECXUTL4",75,0)
 S ECXSSN=$E($G(ECXSSN),1,9)
"RTN","ECXUTL4",76,0)
 ;
"RTN","ECXUTL4",77,0)
 D
"RTN","ECXUTL4",78,0)
 . ;- Inpatient
"RTN","ECXUTL4",79,0)
 . I ECXIO="I",ECXADT,ECXSSN'="" D  Q
"RTN","ECXUTL4",80,0)
 .. S ECXDATE=$$ADMITDT(ECXADT)
"RTN","ECXUTL4",81,0)
 .. I ECXDATE'="" S ENCNUM=ECXSSN_ECXDATE_"I"
"RTN","ECXUTL4",82,0)
 . ;
"RTN","ECXUTL4",83,0)
 . ;- Outpatient branch
"RTN","ECXUTL4",84,0)
 . I ECXIO="O" D
"RTN","ECXUTL4",85,0)
 .. ;- Observation patient (outpatient)
"RTN","ECXUTL4",86,0)
 .. I ECXOBS="YES",ECXSSN'="" D  Q
"RTN","ECXUTL4",87,0)
 ... ;
"RTN","ECXUTL4",88,0)
 ... S ECXDATE=$S(ECXADT:$$JULDT(ECXADT),1:$$JULDT(ECXVDT))
"RTN","ECXUTL4",89,0)
 ... S ECXSTCD=$S(+$P($G(^ECX(727.831,ECXTRT,0)),"^",6):+$P($G(^ECX(727.831,ECXTRT,0)),"^",6),1:+$E(ECXSTP,1,3))
"RTN","ECXUTL4",90,0)
 ... Q:ECXDATE=""!(ECXSTCD="")
"RTN","ECXUTL4",91,0)
 ... S ENCNUM=ECXSSN_ECXDATE_ECXSTCD
"RTN","ECXUTL4",92,0)
 .. ;
"RTN","ECXUTL4",93,0)
 .. ;- Outpatient (no observation pat)
"RTN","ECXUTL4",94,0)
 .. I ECXOBS="NO",ECXVDT,ECXSSN'="" D  Q
"RTN","ECXUTL4",95,0)
 ... ;
"RTN","ECXUTL4",96,0)
 ... ;- ADM, MOV, TRT have no outpat encounter number
"RTN","ECXUTL4",97,0)
 ... I ECXEXT="ADM"!(ECXEXT="MOV")!(ECXEXT="TRT") Q
"RTN","ECXUTL4",98,0)
 ... ;
"RTN","ECXUTL4",99,0)
 ... ;- Use 1st 3 chars of DSS ID for NOS (feeder key for CLI)
"RTN","ECXUTL4",100,0)
 ... I ECXEXT="CLI"!(ECXEXT="NOS") S ECXSTCD=+$E(ECXSTP,1,3) Q:'ECXSTCD
"RTN","ECXUTL4",101,0)
 ... ;
"RTN","ECXUTL4",102,0)
 ... ;- 154, For ECS remove cost center conversion. For ECS and ECQ set stop code to first 3 characters of ECXSTP
"RTN","ECXUTL4",103,0)
 ... I ECXEXT="ECS"!(ECXEXT="ECQ") S ECXSTCD=$E(ECXSTP,1,3) ;154
"RTN","ECXUTL4",104,0)
 ... ;
"RTN","ECXUTL4",105,0)
 ... ;- These extracts have predetermined stop code values
"RTN","ECXUTL4",106,0)
 ... I ECXEXT="DEN" S ECXSTCD=180
"RTN","ECXUTL4",107,0)
 ... I ECXEXT="PRE"!(ECXEXT="UDP")!(ECXEXT="IVP") S ECXSTCD="PHA"
"RTN","ECXUTL4",108,0)
 ... I ECXEXT="LAB"!(ECXEXT="LAR")!(ECXEXT="LBB") S ECXSTCD=108
"RTN","ECXUTL4",109,0)
 ... I ECXEXT="MTL" S ECXSTCD=538
"RTN","ECXUTL4",110,0)
 ... I ECXEXT="NUR" S ECXSTCD=950
"RTN","ECXUTL4",111,0)
 ... I ECXEXT="PRO" S ECXSTCD=423
"RTN","ECXUTL4",112,0)
 ... I ECXEXT="NUT" S ECXSTCD="NUT"
"RTN","ECXUTL4",113,0)
 ... I ECXEXT="BCM" S ECXSTCD="BCM"
"RTN","ECXUTL4",114,0)
 ... ;
"RTN","ECXUTL4",115,0)
 ... ;- If Imaging Type fld=2, use 109 otherwise use 105
"RTN","ECXUTL4",116,0)
 ... I ECXEXT="RAD" S ECXSTCD=$S(ECXSTP=2:109,1:105)
"RTN","ECXUTL4",117,0)
 ... ;
"RTN","ECXUTL4",118,0)
 ... ;- Use DSS STOP CODE fld if populated or if SURG SPEC fld=59 use 430
"RTN","ECXUTL4",119,0)
 ... ;- otherwise if null use 429
"RTN","ECXUTL4",120,0)
 ... I ECXEXT="SUR" S ECXSTCD=$S(ECXSTP:ECXSTP,ECXSTP2=59:430,1:429)
"RTN","ECXUTL4",121,0)
 ... ;
"RTN","ECXUTL4",122,0)
 ... ;- Get Julian Date
"RTN","ECXUTL4",123,0)
 ... S ECXDATE=$$JULDT(ECXVDT)
"RTN","ECXUTL4",124,0)
 ... I ECXDATE'="" S ENCNUM=ECXSSN_ECXDATE_ECXSTCD
"RTN","ECXUTL4",125,0)
 Q ENCNUM
"RTN","ECXUTL4",126,0)
 ;
"RTN","ECXUTL4",127,0)
ADMITDT(ECXINDT) ; Returns date in YYMMDD format
"RTN","ECXUTL4",128,0)
 ;
"RTN","ECXUTL4",129,0)
 ; Input:
"RTN","ECXUTL4",130,0)
 ;   ECXINDT - Date (can also include time) in internal FM format
"RTN","ECXUTL4",131,0)
 ;
"RTN","ECXUTL4",132,0)
 ;Output:
"RTN","ECXUTL4",133,0)
 ;             Date in YYMMDD form
"RTN","ECXUTL4",134,0)
 ;
"RTN","ECXUTL4",135,0)
 N ECXDT
"RTN","ECXUTL4",136,0)
 S ECXDT=""
"RTN","ECXUTL4",137,0)
 S ECXINDT=+$G(ECXINDT)
"RTN","ECXUTL4",138,0)
 ;
"RTN","ECXUTL4",139,0)
 ;- If no input or full FM date not passed in, quit
"RTN","ECXUTL4",140,0)
 I 'ECXINDT!($L(ECXINDT)<7) G ADMTDTQ
"RTN","ECXUTL4",141,0)
 ;
"RTN","ECXUTL4",142,0)
 ;- Date in YYMMDD form
"RTN","ECXUTL4",143,0)
 S ECXDT=$TR($$FMTE^XLFDT(ECXINDT,"4DF")," /","0")
"RTN","ECXUTL4",144,0)
ADMTDTQ Q ECXDT
"RTN","ECXUTL4",145,0)
 ;
"RTN","ECXUTL4",146,0)
 ;
"RTN","ECXUTL4",147,0)
JULDT(ECXINDT) ;  Returns Julian Date in MMDDD format
"RTN","ECXUTL4",148,0)
 ;
"RTN","ECXUTL4",149,0)
 ; Input:
"RTN","ECXUTL4",150,0)
 ;   ECINDT  - Date (can also include time) in internal FM format
"RTN","ECXUTL4",151,0)
 ;
"RTN","ECXUTL4",152,0)
 ;Output:
"RTN","ECXUTL4",153,0)
 ;             Julian date in MM_DDD form
"RTN","ECXUTL4",154,0)
 ;
"RTN","ECXUTL4",155,0)
 N ECXDDD,ECXDT,ECXJUL,ECXMM
"RTN","ECXUTL4",156,0)
 S (ECXDDD,ECXMM)=""
"RTN","ECXUTL4",157,0)
 ;
"RTN","ECXUTL4",158,0)
 ;- If no input or full FM date not passed in, quit
"RTN","ECXUTL4",159,0)
 S ECXINDT=+$G(ECXINDT)
"RTN","ECXUTL4",160,0)
 I 'ECXINDT!($L(ECXINDT)<7) G JULDTQ
"RTN","ECXUTL4",161,0)
 ;
"RTN","ECXUTL4",162,0)
 ;- Extract date portion
"RTN","ECXUTL4",163,0)
 S ECXDT=$E(ECXINDT,1,7)
"RTN","ECXUTL4",164,0)
 ;
"RTN","ECXUTL4",165,0)
 ;- Get month (MM)
"RTN","ECXUTL4",166,0)
 S ECXMM=$E(ECXINDT,2,3)
"RTN","ECXUTL4",167,0)
 ;
"RTN","ECXUTL4",168,0)
 ;- Number of day within year (DDD)
"RTN","ECXUTL4",169,0)
 S ECXDDD=$$RJ^XLFSTR($$FMDIFF^XLFDT(ECXDT,$E(ECXDT,1,3)_"0101",1)+1,3,"0")
"RTN","ECXUTL4",170,0)
JULDTQ Q ECXMM_ECXDDD
"RTN","ECXUTL4",171,0)
 ;
"RTN","ECXUTL4",172,0)
CNHSTAT(ECXDFN) ;  Get CNH (Contract Nursing Home) status
"RTN","ECXUTL4",173,0)
 ;
"RTN","ECXUTL4",174,0)
 ; Input:
"RTN","ECXUTL4",175,0)
 ;   ECXDFN  - Patient DFN
"RTN","ECXUTL4",176,0)
 ;
"RTN","ECXUTL4",177,0)
 ;Output:
"RTN","ECXUTL4",178,0)
 ;             CNH status (YES/NO)
"RTN","ECXUTL4",179,0)
 ;
"RTN","ECXUTL4",180,0)
 N ECXCNH
"RTN","ECXUTL4",181,0)
 S ECXDFN=+$G(ECXDFN)
"RTN","ECXUTL4",182,0)
 S ECXCNH=$P($G(^DPT(ECXDFN,"NHC")),U)
"RTN","ECXUTL4",183,0)
 Q $S(ECXCNH="Y":"YES",ECXCNH="N":"NO",1:"")
"RTN","ECXUTL4",184,0)
 ;
"RTN","ECXUTL4",185,0)
CANC(ECXNOR,ECXTMOR) ; Get Surgery Cancelled/Aborted Status
"RTN","ECXUTL4",186,0)
 ;
"RTN","ECXUTL4",187,0)
 ; Function called after determining CANCEL DATE in SURGERY record exists
"RTN","ECXUTL4",188,0)
 ;
"RTN","ECXUTL4",189,0)
 ; Input:
"RTN","ECXUTL4",190,0)
 ;   ECXNOR   - Non-OR DSS ID
"RTN","ECXUTL4",191,0)
 ;   ECXTMOR  - Time Pat in OR
"RTN","ECXUTL4",192,0)
 ;
"RTN","ECXUTL4",193,0)
 ;Output:
"RTN","ECXUTL4",194,0)
 ;              Cancelled/aborted status (C/A)
"RTN","ECXUTL4",195,0)
 ;
"RTN","ECXUTL4",196,0)
 N ECXCANC
"RTN","ECXUTL4",197,0)
 S ECXCANC=""
"RTN","ECXUTL4",198,0)
 S ECXNOR=$G(ECXNOR)
"RTN","ECXUTL4",199,0)
 ;
"RTN","ECXUTL4",200,0)
 ;- If Non-OR DSS ID or Time Pat in OR, ECXCANC = "A" else = "C"
"RTN","ECXUTL4",201,0)
 D
"RTN","ECXUTL4",202,0)
 . I ECXNOR'=""&(ECXNOR'="UNKNOWN") S ECXCANC="A" Q
"RTN","ECXUTL4",203,0)
 . I +$G(ECXTMOR) S ECXCANC="A" Q
"RTN","ECXUTL4",204,0)
 . S ECXCANC="C"
"RTN","ECXUTL4",205,0)
 Q ECXCANC
"RTN","ECXUTL4",206,0)
 ;
"RTN","ECXUTL4",207,0)
HNCI(ECXDFN) ; Get head & neck cancer indicator
"RTN","ECXUTL4",208,0)
 ;
"RTN","ECXUTL4",209,0)
 ; Input:
"RTN","ECXUTL4",210,0)
 ;   ECXDFN  - Patient DFN
"RTN","ECXUTL4",211,0)
 ;
"RTN","ECXUTL4",212,0)
 ;Output:
"RTN","ECXUTL4",213,0)
 ;             Head/Neck CA DX (Y/N)
"RTN","ECXUTL4",214,0)
 ;
"RTN","ECXUTL4",215,0)
 N ECXHNCI,DGNT
"RTN","ECXUTL4",216,0)
 S ECXHNCI=""
"RTN","ECXUTL4",217,0)
 S ECXDFN=+$G(ECXDFN) I ECXDFN D
"RTN","ECXUTL4",218,0)
 .I $$GETCUR^DGNTAPI(ECXDFN,"DGNT") S ECXHNCI=$P(DGNT("HNC"),U)
"RTN","ECXUTL4",219,0)
 Q ECXHNCI
"RTN","ECXUTL4",220,0)
 ;
"RTN","ECXUTL4",221,0)
TSMAP(ECXTS) ;Determines DSS Identifier for the following observation
"RTN","ECXUTL4",222,0)
 ; treating specialty
"RTN","ECXUTL4",223,0)
 ; Input:
"RTN","ECXUTL4",224,0)
 ;   ECXTS - Observation Treating Specialty
"RTN","ECXUTL4",225,0)
 ;
"RTN","ECXUTL4",226,0)
 ; Output:
"RTN","ECXUTL4",227,0)
 ;   DSS Identifier (Stop Code)
"RTN","ECXUTL4",228,0)
 ;
"RTN","ECXUTL4",229,0)
 N TS,SC,I
"RTN","ECXUTL4",230,0)
 S TS="^18^23^24^41^65^94^108^",SC="^293^295^290^296^291^292^297^"
"RTN","ECXUTL4",231,0)
 F I=1:1:$L(TS) Q:$P(TS,"^",I)=ECXTS
"RTN","ECXUTL4",232,0)
 Q $P(SC,"^",I)_"000"
"RTN","ECXUTL4",233,0)
OEFDATA ;
"RTN","ECXUTL4",234,0)
 ;get patient OEF/OIF status and date of return
"RTN","ECXUTL4",235,0)
 S (ECXOEF,ECXOEFDT)=""
"RTN","ECXUTL4",236,0)
 I $G(VASV(11))>0 S ECXOEF=ECXOEF_"OIF"
"RTN","ECXUTL4",237,0)
 I $G(VASV(12))>0 S ECXOEF=ECXOEF_"OEF"
"RTN","ECXUTL4",238,0)
 I $G(VASV(13))>0 S ECXOEF=ECXOEF_"UNK"
"RTN","ECXUTL4",239,0)
 I ECXOEF'="" D
"RTN","ECXUTL4",240,0)
 . S ECXOEFDT=""
"RTN","ECXUTL4",241,0)
 . I $G(VASV(11))>0 S ECXOEFDT=$P($G(VASV(11,$G(VASV(11)),3)),"^")
"RTN","ECXUTL4",242,0)
 . I $G(VASV(12))>0,$P($G(VASV(12,$G(VASV(12)),3)),"^")>ECXOEFDT S ECXOEFDT=$P($G(VASV(12,$G(VASV(12)),3)),"^")
"RTN","ECXUTL4",243,0)
 . I $G(VASV(13))>0,$P($G(VASV(13,$G(VASV(13)),3)),"^")>ECXOEFDT S ECXOEFDT=$P($G(VASV(13,$G(VASV(13)),3)),"^")
"RTN","ECXUTL4",244,0)
 . I ECXOEFDT>0 S ECXOEFDT=17000000+ECXOEFDT
"RTN","ECXUTL4",245,0)
 ;
"RTN","ECXUTL4",246,0)
 S ECXPAT("ECXOEF")=ECXOEF
"RTN","ECXUTL4",247,0)
 S ECXPAT("ECXOEFDT")=ECXOEFDT
"RTN","ECXUTL4",248,0)
 Q
"RTN","ECXUTL4",249,0)
 ;
"RTN","ECXUTL4",250,0)
SHAD(ECXDFN) ; Get PROJ 112/SHAD indicator
"RTN","ECXUTL4",251,0)
 ;
"RTN","ECXUTL4",252,0)
 ; Input:
"RTN","ECXUTL4",253,0)
 ;   ECXDFN  - Patient DFN
"RTN","ECXUTL4",254,0)
 ;
"RTN","ECXUTL4",255,0)
 ;Output:
"RTN","ECXUTL4",256,0)
 ;             PROJ 112/SHAD DX (Y/N/U)
"RTN","ECXUTL4",257,0)
 ;             Error -1, missing parameter
"RTN","ECXUTL4",258,0)
 ;
"RTN","ECXUTL4",259,0)
 N ECXSHAD
"RTN","ECXUTL4",260,0)
 S ECXDFN=$G(ECXDFN)
"RTN","ECXUTL4",261,0)
 S ECXSHAD=$$GETSHAD^DGUTL3(ECXDFN)
"RTN","ECXUTL4",262,0)
 S ECXSHAD=$S(ECXSHAD=1:"Y",ECXSHAD=0:"N",ECXSHAD="":"U",1:-1)
"RTN","ECXUTL4",263,0)
 Q ECXSHAD
"RTN","ECXUTL6")
0^33^B62760554^B61658349
"RTN","ECXUTL6",1,0)
ECXUTL6 ;ALB/JRC - Utilities for DSS Extracts ;4/10/15  14:31
"RTN","ECXUTL6",2,0)
 ;;3.0;DSS EXTRACTS;**92,105,112,119,132,154**;Dec 22, 1997;Build 13
"RTN","ECXUTL6",3,0)
 ;
"RTN","ECXUTL6",4,0)
NUTKEY(P,D) ;Generate n&fs feeder key
"RTN","ECXUTL6",5,0)
 ;Required variables
"RTN","ECXUTL6",6,0)
 ;      p  - diet type production diet, standing orders, supplemental
"RTN","ECXUTL6",7,0)
 ;           feedings, or tube feedings.
"RTN","ECXUTL6",8,0)
 ;      d  - diet ien from files 116.2, 118.3, 118, or 118.2
"RTN","ECXUTL6",9,0)
 ;Check input
"RTN","ECXUTL6",10,0)
 I $G(P)=""!'$G(D) Q ""
"RTN","ECXUTL6",11,0)
 ;Init variables
"RTN","ECXUTL6",12,0)
 N PRO,IENS,CODE,DIET
"RTN","ECXUTL6",13,0)
 S (PRO,IENS,CODE,DIET)=0
"RTN","ECXUTL6",14,0)
 S PRO=$O(^ECX(728.45,"B",P,PRO))
"RTN","ECXUTL6",15,0)
 S CODE=D_$S(P="PD":";FH(116.2,",P="SO":";FH(118.3,",P="SF":";FH(118,",P="TF":";FH(118.2,",1:"")
"RTN","ECXUTL6",16,0)
 S DIET=0,DIET=$O(^ECX(728.45,+PRO,1,"B",CODE,DIET))
"RTN","ECXUTL6",17,0)
 S IENS=""_DIET_","_PRO_","_""
"RTN","ECXUTL6",18,0)
 Q $$GET1^DIQ(728.451,IENS,1)
"RTN","ECXUTL6",19,0)
 ;
"RTN","ECXUTL6",20,0)
NUTLOC(P,D,FPD,FDD,FPF,DLT,DFL) ;Define nutrition fields
"RTN","ECXUTL6",21,0)
 ;Required variables
"RTN","ECXUTL6",22,0)
 ;      p  - patient status, inpatient or outpatient
"RTN","ECXUTL6",23,0)
 ;
"RTN","ECXUTL6",24,0)
 ;      d  - diet type production diet, standing orders, supplemental
"RTN","ECXUTL6",25,0)
 ;            feedings, or tube feedings.
"RTN","ECXUTL6",26,0)
 ;    Output: food production division, food delivery division, food
"RTN","ECXUTL6",27,0)
 ;            production facility, food delivery type, delivery feeder
"RTN","ECXUTL6",28,0)
 ;            location
"RTN","ECXUTL6",29,0)
 ;Init variables
"RTN","ECXUTL6",30,0)
 N WARD,TRSVP,CRSVP,OPLOC,MASWARD
"RTN","ECXUTL6",31,0)
 S (CRSVP,TRSVP)=0,(WARD,DLT,DFL,MASWARD)=""
"RTN","ECXUTL6",32,0)
 S OPLOC=""
"RTN","ECXUTL6",33,0)
 ;Check input
"RTN","ECXUTL6",34,0)
 I $G(P)=""!($G(D)="")!'($G(FHDFN)) Q ""
"RTN","ECXUTL6",35,0)
 ;Get food production facility for inpatient, use 115.1.13 (dietetic
"RTN","ECXUTL6",36,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",37,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",38,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",39,0)
 I P="INP" D
"RTN","ECXUTL6",40,0)
 .N VAHOW
"RTN","ECXUTL6",41,0)
 .K ^UTILITY("VAIP",$J)
"RTN","ECXUTL6",42,0)
 .S DFN=$P($G(^FHPT(FHDFN,0)),U,3)
"RTN","ECXUTL6",43,0)
 .S VAIP("D")=$G(SDATE),VAHOW=2
"RTN","ECXUTL6",44,0)
 .D IN5^VADPT
"RTN","ECXUTL6",45,0)
 .S MASWARD=+^UTILITY("VAIP",$J,5)
"RTN","ECXUTL6",46,0)
 .S WARD=$O(^FH(119.6,"AW",+MASWARD,0))
"RTN","ECXUTL6",47,0)
 .S:+WARD'>0 WARD=""
"RTN","ECXUTL6",48,0)
 .S TRSVP=$$GET1^DIQ(119.6,WARD,3,"I")
"RTN","ECXUTL6",49,0)
 .S CRSVP=$$GET1^DIQ(119.6,WARD,4,"I")
"RTN","ECXUTL6",50,0)
 .;Get divisions
"RTN","ECXUTL6",51,0)
 .D GETDIV
"RTN","ECXUTL6",52,0)
 .Q
"RTN","ECXUTL6",53,0)
 ;
"RTN","ECXUTL6",54,0)
 ;Get food production facility for OP Supplemental feedings,
"RTN","ECXUTL6",55,0)
 ;use 115.1.13 (dietetic
"RTN","ECXUTL6",56,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",57,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",58,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",59,0)
 I P["OP",D["SF" D
"RTN","ECXUTL6",60,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",61,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",62,0)
 .;Get delivery division
"RTN","ECXUTL6",63,0)
 .D GETDIV
"RTN","ECXUTL6",64,0)
 .Q
"RTN","ECXUTL6",65,0)
 ;Get food production facility for OP Standing Orders,
"RTN","ECXUTL6",66,0)
 ;use 115.1.13 (dietetic
"RTN","ECXUTL6",67,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",68,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",69,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",70,0)
 I P["OP",D["SO" D
"RTN","ECXUTL6",71,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",72,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",73,0)
 .;Get delivery division
"RTN","ECXUTL6",74,0)
 .D GETDIV
"RTN","ECXUTL6",75,0)
 .Q
"RTN","ECXUTL6",76,0)
 ;Get food production facility for outpatient recurring meal, use
"RTN","ECXUTL6",77,0)
 ;115.16.2 (outpatient location) which points to file 119.6 (nutrition
"RTN","ECXUTL6",78,0)
 ;location) field 3 (tray service point) or field 4 (cafeteria service
"RTN","ECXUTL6",79,0)
 ;point), which points to 119.72 (production facility) field 2.
"RTN","ECXUTL6",80,0)
 I P["OP",D["RM" D
"RTN","ECXUTL6",81,0)
 .S OPLOC=""_$P(NODE,U,3)_","_"",TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",82,0)
 .D GETDIV
"RTN","ECXUTL6",83,0)
 .Q
"RTN","ECXUTL6",84,0)
 ;
"RTN","ECXUTL6",85,0)
 ;Get food production facility for outpatient tube feeding, use
"RTN","ECXUTL6",86,0)
 ;115.16.2 (outpatient location) then use 119.6 nutrition location
"RTN","ECXUTL6",87,0)
 ;which points to 119.72 field 2.
"RTN","ECXUTL6",88,0)
 I P["OP",D["TF" D
"RTN","ECXUTL6",89,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",90,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",91,0)
 .;Get delivery division
"RTN","ECXUTL6",92,0)
 .D GETDIV
"RTN","ECXUTL6",93,0)
 .Q
"RTN","ECXUTL6",94,0)
 ;
"RTN","ECXUTL6",95,0)
 ;Get food production facility for special meals, use 115.17.2
"RTN","ECXUTL6",96,0)
 ;location field 2 which is a pointer to 119.6 (nutrition location)
"RTN","ECXUTL6",97,0)
 ;which points to 119.72 via field 2 (tray service point) which points
"RTN","ECXUTL6",98,0)
 ;to file 119.71 (production facility) field 2.
"RTN","ECXUTL6",99,0)
 I P["OP",D["SM" D
"RTN","ECXUTL6",100,0)
 .S OPLOC=""_$P(NODE,U,3)_","_""
"RTN","ECXUTL6",101,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",102,0)
 .;Get delivery division
"RTN","ECXUTL6",103,0)
 .D GETDIV
"RTN","ECXUTL6",104,0)
 .Q
"RTN","ECXUTL6",105,0)
 ;
"RTN","ECXUTL6",106,0)
 ;Get food production facility for outpatient guest meals, use
"RTN","ECXUTL6",107,0)
 ;115.18.4 (outpatient location) then use 119.6 nutrition location
"RTN","ECXUTL6",108,0)
 ;which points to 119.72 (production facility) field 2.
"RTN","ECXUTL6",109,0)
 I P["OP",D["GM" D
"RTN","ECXUTL6",110,0)
 .S OPLOC=""_$P(NODE,U,5)_","_"",TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",111,0)
 .S FPF=$$GET1^DIQ(119.72,""_TRSVP_","_"",2,"I")
"RTN","ECXUTL6",112,0)
 .;Get delivery division
"RTN","ECXUTL6",113,0)
 .D GETDIV
"RTN","ECXUTL6",114,0)
 .Q
"RTN","ECXUTL6",115,0)
 ;
"RTN","ECXUTL6",116,0)
 ;Get delivery location type for patients; with inpatients the type of
"RTN","ECXUTL6",117,0)
 ;service needs to be pulled from the admission node, with outpatients
"RTN","ECXUTL6",118,0)
 ;the type of service needs to be pulled from different nodes and use
"RTN","ECXUTL6",119,0)
 ;field 101 of Nutrition Location file (#119.6). Delivery location
"RTN","ECXUTL6",120,0)
 ;types only set for the following meals:
"RTN","ECXUTL6",121,0)
 ;   Inpatient with a production diet
"RTN","ECXUTL6",122,0)
 ;   Outpatient with a recurring meal
"RTN","ECXUTL6",123,0)
 ;   Outpatient with a special meal
"RTN","ECXUTL6",124,0)
 ;   Outpatient with a guest meal
"RTN","ECXUTL6",125,0)
 ;   all other meals are null
"RTN","ECXUTL6",126,0)
 I P="INP",D="PD" D
"RTN","ECXUTL6",127,0)
 .S DLT=$P($G(NODE),U,8)
"RTN","ECXUTL6",128,0)
 I P="OP",((D="RM")!(D="SM")) D
"RTN","ECXUTL6",129,0)
 .S DLT=$E($$GET1^DIQ(119.6,""_$P(NODE,U,3)_","_"",101,"E"),1)
"RTN","ECXUTL6",130,0)
 I P="OP",D="GM" D
"RTN","ECXUTL6",131,0)
 .S DLT=$E($$GET1^DIQ(119.6,""_$P(NODE,U,5)_","_"",101,"E"),1)
"RTN","ECXUTL6",132,0)
 ;
"RTN","ECXUTL6",133,0)
 ;Delivery feeder location
"RTN","ECXUTL6",134,0)
 I DLT="C" D
"RTN","ECXUTL6",135,0)
 .S DFL=$E($$GET1^DIQ(119.6,WARD,4,"E"),1,10)
"RTN","ECXUTL6",136,0)
 .S IEN=$$GET1^DIQ(119.72,+CRSVP,2,"I")
"RTN","ECXUTL6",137,0)
 .S IEN=""_IEN_";FH(119.71,"
"RTN","ECXUTL6",138,0)
 .S FPF=$O(^ECX(728.46,"B",IEN,FPF))
"RTN","ECXUTL6",139,0)
 .S FPF=$E($$GET1^DIQ(728.46,FPF,.01,"E"),1,10)
"RTN","ECXUTL6",140,0)
 I (DLT["T")!(DLT["D") D
"RTN","ECXUTL6",141,0)
 .I P="INP" D
"RTN","ECXUTL6",142,0)
 ..S DFL=$$GET1^DIQ(42,+MASWARD,44,"I")
"RTN","ECXUTL6",143,0)
 .I P="OP" D
"RTN","ECXUTL6",144,0)
 ..S DFL=$O(^FH(119.6,+OPLOC,"L","B",0))
"RTN","ECXUTL6",145,0)
 I (DLT=""),"SFTFSO"[D D
"RTN","ECXUTL6",146,0)
 .S DFL=$S(TRSVP:$$GET1^DIQ(119.6,+WARD,3,"E"),1:$$GET1^DIQ(119.6,+WARD,4,"E"))
"RTN","ECXUTL6",147,0)
 Q 1
"RTN","ECXUTL6",148,0)
 ;
"RTN","ECXUTL6",149,0)
GETDIV ;Get divisions and food production facility
"RTN","ECXUTL6",150,0)
 ;Init variables
"RTN","ECXUTL6",151,0)
 N IEN,SIEN,SVP
"RTN","ECXUTL6",152,0)
 S (FDD,FPF,FPD)=""
"RTN","ECXUTL6",153,0)
 S SVP=$S(TRSVP:TRSVP,CRSVP:CRSVP,1:"")
"RTN","ECXUTL6",154,0)
 S IEN=$$GET1^DIQ(119.72,+SVP,2,"I")
"RTN","ECXUTL6",155,0)
 Q:'IEN
"RTN","ECXUTL6",156,0)
 ;Get delivery division
"RTN","ECXUTL6",157,0)
 S SIEN=""_+SVP_";FH(119.72,"
"RTN","ECXUTL6",158,0)
 S FDD=$O(^ECX(728.46,"B",SIEN,FDD))
"RTN","ECXUTL6",159,0)
 S FDD=""_$$GET1^DIQ(728.46,FDD,1,"I")_","_""
"RTN","ECXUTL6",160,0)
 S FDD=$$GET1^DIQ(4,FDD,99,"E")
"RTN","ECXUTL6",161,0)
 ;Get production division and food production facility
"RTN","ECXUTL6",162,0)
 S IEN=""_IEN_";FH(119.71,"
"RTN","ECXUTL6",163,0)
 S FPF=$O(^ECX(728.46,"B",IEN,FPF))
"RTN","ECXUTL6",164,0)
 S FPD=""_$$GET1^DIQ(728.46,FPF,1,"I")_","_""
"RTN","ECXUTL6",165,0)
 S FPD=$$GET1^DIQ(4,FPD,99,"E")
"RTN","ECXUTL6",166,0)
 S FPF=$E($$GET1^DIQ(728.46,FPF,.01,"E"),1,10)
"RTN","ECXUTL6",167,0)
 Q
"RTN","ECXUTL6",168,0)
 ;
"RTN","ECXUTL6",169,0)
SUR(CRST,STCD,CLINIC) ;Surgery stop codes and clinic (outpatients only)
"RTN","ECXUTL6",170,0)
 ;Init variables
"RTN","ECXUTL6",171,0)
 S (CRST,STCD,CLINIC)=""
"RTN","ECXUTL6",172,0)
 ;Quit if not outpatient
"RTN","ECXUTL6",173,0)
 Q:$P(EC0,U,12)'="O" ""
"RTN","ECXUTL6",174,0)
 ;Get stop codes (outpatient only)
"RTN","ECXUTL6",175,0)
 I $P(EC0,U,12)="O" D
"RTN","ECXUTL6",176,0)
 .;Get credit stop code (outpatient only)
"RTN","ECXUTL6",177,0)
 .S CRST=""_$$GET1^DIQ(40.7,""_$$GET1^DIQ(44,$$GET1^DIQ(137.45,$P(EC0,U,4),2,"I")_","_""_","_"",2503,"I")_","_"",1,"E")
"RTN","ECXUTL6",178,0)
 .;Get stop code (outpatient only)
"RTN","ECXUTL6",179,0)
 .S STCD=""_$$GET1^DIQ(40.7,""_$$GET1^DIQ(44,$$GET1^DIQ(137.45,$P(EC0,U,4),2,"I")_","_""_","_"",8,"I")_","_"",1,"E")
"RTN","ECXUTL6",180,0)
 ;Clinic for non-or case use associated clinic else non-or location
"RTN","ECXUTL6",181,0)
 ;If non-or case
"RTN","ECXUTL6",182,0)
 I $P($G(ECNO),U)="Y" S CLINIC=$S($P(EC0,U,21):$P(EC0,U,21),1:$P(ECNO,U,2))
"RTN","ECXUTL6",183,0)
 ;Get stop codes non-or cases
"RTN","ECXUTL6",184,0)
 I $P($G(ECNO),U)="Y" D
"RTN","ECXUTL6",185,0)
 .;Get credit stop code for non-or case
"RTN","ECXUTL6",186,0)
 .S CRST=$$GET1^DIQ(40.7,$$GET1^DIQ(44,CLINIC,2503,"I"),1,"E")
"RTN","ECXUTL6",187,0)
 .;Get stop code for non-or case
"RTN","ECXUTL6",188,0)
 .S STCD=$$GET1^DIQ(40.7,$$GET1^DIQ(44,CLINIC,8,"I"),1,"E")
"RTN","ECXUTL6",189,0)
 ;Clinic, not a non-or case use surgical specialty associated clinic
"RTN","ECXUTL6",190,0)
 I $P($G(ECNO),U)'="Y" S CLINIC=$$GET1^DIQ(137.45,+$P(EC0,U,4),2,"I")
"RTN","ECXUTL6",191,0)
 Q 1
"RTN","ECXUTL6",192,0)
 ;
"RTN","ECXUTL6",193,0)
SURPODX(PRODX,PODX1,PODX2,PODX3,PODX4,PODX5) ;Get postop diagnosis codes
"RTN","ECXUTL6",194,0)
 ;Init variables
"RTN","ECXUTL6",195,0)
 N CODE,I,PODX
"RTN","ECXUTL6",196,0)
 S (PRODX,PODX1,PODX2,PODX3,PODX4,PODX5)="",CODE=0
"RTN","ECXUTL6",197,0)
 ;Check input
"RTN","ECXUTL6",198,0)
 Q:'$D(DATAOP) 0
"RTN","ECXUTL6",199,0)
 ;Get principal postop dx code
"RTN","ECXUTL6",200,0)
 I $P(DATAOP,U,3)'="" S PRODX=$$CODEC^ICDEX(80,$P(DATAOP,U,3)) ;154
"RTN","ECXUTL6",201,0)
 ;Get other postop dx codes
"RTN","ECXUTL6",202,0)
 S (CODE,I)=0 F  S CODE=$O(^SRO(136,ECD0,4,CODE)) Q:'CODE  Q:I>5  D
"RTN","ECXUTL6",203,0)
 .S I=I+1,PODX="PODX"_I I $P(^SRO(136,ECD0,4,CODE,0),U)'="" S @PODX=$$CODEC^ICDEX(80,$P(^SRO(136,ECD0,4,CODE,0),U)) ;154
"RTN","ECXUTL6",204,0)
 Q 1
"RTN","ECXUTL6",205,0)
 ;
"RTN","ECXUTL6",206,0)
LOINC(ARRAY) ;Get DSS lab test information out of DSS LOINC CODE (#727.29) file
"RTN","ECXUTL6",207,0)
 ;Input
"RTN","ECXUTL6",208,0)
 ;   ARRAY(LOINC-CK) := array of valid LOINC (#727.29 DSS LOINC CODE)
"RTN","ECXUTL6",209,0)
 ;                      entries with their check digit
"RTN","ECXUTL6",210,0)
 ;   or,
"RTN","ECXUTL6",211,0)
 ;   ARRAY("ALL")    := request for all LOINC entries
"RTN","ECXUTL6",212,0)
 ;Output
"RTN","ECXUTL6",213,0)
 ;   ^TMP($J,"EXCUTL6",LOINC-CK)  =
"RTN","ECXUTL6",214,0)
 ;              zero node of file 727.29 pieces 1 thru 4
"RTN","ECXUTL6",215,0)
 ;              piece 1 := LOINC-CK (LOINC-check digit)
"RTN","ECXUTL6",216,0)
 ;              piece 2 := DSS lar test number
"RTN","ECXUTL6",217,0)
 ;              piece 3 := DSS test name
"RTN","ECXUTL6",218,0)
 ;              piece 4 := DSS Reporting units
"RTN","ECXUTL6",219,0)
 ;              piece 5 := LOINC name
"RTN","ECXUTL6",220,0)
 ;              piece 6 := pointer to LAB LOINC (#95.3) code entry
"RTN","ECXUTL6",221,0)
 ;             (delimited by "^")
"RTN","ECXUTL6",222,0)
 ;          -1 := not a valid loinc entry from file 727.29
"RTN","ECXUTL6",223,0)
 ;          -2 := no dss lar test number associated with loinc
"RTN","ECXUTL6",224,0)
 ;
"RTN","ECXUTL6",225,0)
 ;   ^TMP($J,"ECXUTL6",LOINC-CK,WKLD,SPEC/-or-"DEFAULT",LTEST)= 
"RTN","ECXUTL6",226,0)
 ;              piece 1 := WKLD Code (external)
"RTN","ECXUTL6",227,0)
 ;              piece 2 := specimen (external) or "DEFAULT LOINC"
"RTN","ECXUTL6",228,0)
 ;              piece 3 := laboratory test (external)
"RTN","ECXUTL6",229,0)
 ;              piece 4:= local LOINC code external
"RTN","ECXUTL6",230,0)
 ;             (delimited by "^")
"RTN","ECXUTL6",231,0)
 ;
"RTN","ECXUTL6",232,0)
 ;
"RTN","ECXUTL6",233,0)
 I '$D(ARRAY) Q
"RTN","ECXUTL6",234,0)
 K ^TMP($J,"ECXUTL6")
"RTN","ECXUTL6",235,0)
 N LOINCCK,LIEN,SPEC,EC0,WKLD,WKLD0,TA,LRASSV,LOINCPTR,LTEST,LLNC,LLNCP,SPECD
"RTN","ECXUTL6",236,0)
 S LOINCCK=""
"RTN","ECXUTL6",237,0)
 I $D(ARRAY("ALL")) D
"RTN","ECXUTL6",238,0)
 . F  S LOINCCK=$O(^ECX(727.29,"B",LOINCCK)) Q:'LOINCCK  D EXT
"RTN","ECXUTL6",239,0)
 E  D
"RTN","ECXUTL6",240,0)
 . F  S LOINCCK=$O(ARRAY(LOINCCK)) Q:'LOINCCK  D EXT
"RTN","ECXUTL6",241,0)
 Q
"RTN","ECXUTL6",242,0)
 ;
"RTN","ECXUTL6",243,0)
EXT I '$D(^ECX(727.29,"B",LOINCCK)) S ^TMP($J,"ECXUTL6",LOINCCK)=-1_"^no entry in DSS LOINC CODE (#727.29)." Q
"RTN","ECXUTL6",244,0)
 S LIEN=$O(^ECX(727.29,"B",LOINCCK,0))
"RTN","ECXUTL6",245,0)
 I '$P(^ECX(727.29,LIEN,0),U,2) S ^TMP($J,"ECXUTL6",LOINCCK)=-2_"^no dss test number found." Q
"RTN","ECXUTL6",246,0)
 S EC0=^ECX(727.29,LIEN,0)
"RTN","ECXUTL6",247,0)
 S ^TMP($J,"ECXUTL6",LOINCCK)=EC0_"^"
"RTN","ECXUTL6",248,0)
 S LOINCPTR=""
"RTN","ECXUTL6",249,0)
 ;**Lexicon LOINC Code - test whether LEX*2*75 installed.
"RTN","ECXUTL6",250,0)
 ;  Else, get directly from file #95.3
"RTN","ECXUTL6",251,0)
 S X="LEXLR" X ^%ZOSF("TEST") I '$T D
"RTN","ECXUTL6",252,0)
 . I LOINCCK=$$GET1^DIQ(95.3,$P(LOINCCK,"-"),.01) D
"RTN","ECXUTL6",253,0)
 . . S LOINCPTR=$$GET1^DIQ(95.3,$P(LOINCCK,"-"),.01,"I")
"RTN","ECXUTL6",254,0)
 S X="LEXLR" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL6",255,0)
 . S LOINCPTR=$$CHKCODE^LEXLR(LOINCCK) ;DBIA5547
"RTN","ECXUTL6",256,0)
 ;**
"RTN","ECXUTL6",257,0)
 I LOINCPTR D
"RTN","ECXUTL6",258,0)
 . S ^TMP($J,"ECXUTL6",LOINCCK)=^TMP($J,"ECXUTL6",LOINCCK)_LOINCPTR
"RTN","ECXUTL6",259,0)
 . S WKLD=0 F  S WKLD=$O(^LAM("AI",LOINCPTR,WKLD)) Q:'WKLD  D
"RTN","ECXUTL6",260,0)
 . . S SPEC=0 F  S SPEC=$O(^LAM("AI",LOINCPTR,WKLD,SPEC)) Q:'SPEC  D
"RTN","ECXUTL6",261,0)
 . . . S TA=0
"RTN","ECXUTL6",262,0)
 . . . F  S TA=$O(^LAM(WKLD,5,SPEC,1,TA)) Q:'TA  D
"RTN","ECXUTL6",263,0)
 . . . . S SPECD=^LAM(WKLD,5,SPEC,1,TA,0)
"RTN","ECXUTL6",264,0)
 . . . . S LTEST=$P(SPECD,"^",4)
"RTN","ECXUTL6",265,0)
 . . . . I LTEST,($P($G(^LAB(60,LTEST,64)),"^",2)=WKLD),($$GET1^DIQ(60,LTEST,3,"I")'="N") D
"RTN","ECXUTL6",266,0)
 . . . . . S ^TMP($J,"ECXUTL6",LOINCCK,WKLD,SPEC,LTEST)=$$GET1^DIQ(64,WKLD,.01)_"^"_$$GET1^DIQ(61,SPEC,.01)_"^"_$$GET1^DIQ(60,LTEST,.01)_"^"_LOINCCK
"RTN","ECXUTL6",267,0)
 Q
"RTN","ECXUTL6",268,0)
 ;
"RTN","ECXUTL6",269,0)
INPUTT ;
"RTN","ECXUTL6",270,0)
 N DIC S DIC="^DIC(40.7,",DIC(0)="EMZ",DIC("S")="I '$P(^(0),U,3)&($L($P(^(0),U,2)'=3)) Q"
"RTN","ECXUTL6",271,0)
 D ^DIC K:Y<0 X Q:Y<0
"RTN","ECXUTL6",272,0)
 S X=$S($D(Y(0)):$P(Y(0),U,2),1:"") K:X=""!($L(X)'=3) X K DIC
"RTN","ECXUTL6",273,0)
 Q
"RTN","ECXUTLA")
0^3^B73834306^B52600854
"RTN","ECXUTLA",1,0)
ECXUTLA ;ALB/JAP - Utilities for Audit Reports ;2/24/15  10:22
"RTN","ECXUTLA",2,0)
 ;;3.0;DSS EXTRACTS;**8,14,112,154**;Dec 22, 1997;Build 13
"RTN","ECXUTLA",3,0)
 ;
"RTN","ECXUTLA",4,0)
AUDIT(ECXHEAD,ECXERR,ECXARRAY,ECXAUD) ;set audit report parameters
"RTN","ECXUTLA",5,0)
 ;   input
"RTN","ECXUTLA",6,0)
 ;   ECXHEAD  = extract HEADER CODE (required)
"RTN","ECXUTLA",7,0)
 ;              (from file #727.1, field #7)
"RTN","ECXUTLA",8,0)
 ;   ECXERR   = passed-by-reference variable (required)
"RTN","ECXUTLA",9,0)
 ;   ECXARRAY = passed-by-reference array (required)
"RTN","ECXUTLA",10,0)
 ;   ECXAUD   = 0/1 (optional)
"RTN","ECXUTLA",11,0)
 ;              0 --> extract audit (default)
"RTN","ECXUTLA",12,0)
 ;              1 --> SAS audit
"RTN","ECXUTLA",13,0)
 ;   output
"RTN","ECXUTLA",14,0)
 ;   ECXARRAY = array of audit parameters
"RTN","ECXUTLA",15,0)
 ;              ECXARRAY("DEF")     = ien of extract type in file #727.1
"RTN","ECXUTLA",16,0)
 ;              ECXARRAY("TYPE")    = print name for extract; field #7 in file #727.1
"RTN","ECXUTLA",17,0)
 ;              ECXARRAY("EXTRACT") = ien of extract in file #727
"RTN","ECXUTLA",18,0)
 ;              ECXARRAY("START")   = start date for extract audit
"RTN","ECXUTLA",19,0)
 ;              ECXARRAY("END")     = end date for extract audit
"RTN","ECXUTLA",20,0)
 ;              ECXARRAY("ERUN")    = date on which extract was generated
"RTN","ECXUTLA",21,0)
 ;              ECXARRAY("DIV")     = ien of station if file #4
"RTN","ECXUTLA",22,0)
 ;   error CODE
"RTN","ECXUTLA",23,0)
 ;   ECXERR   = 1, if input problem occurs
"RTN","ECXUTLA",24,0)
 ;              0, otherwise
"RTN","ECXUTLA",25,0)
 ;
"RTN","ECXUTLA",26,0)
 N X,Y,N,DA,DIC,DIQ,DIR,DTOUT,DUOUT,DIRUT,ECXDA,ECXTYPE,ECXSTART,ECXEND,ECXARR
"RTN","ECXUTLA",27,0)
 S ECXERR=0
"RTN","ECXUTLA",28,0)
 S N=$O(^ECX(727.1,"C",ECXHEAD,"")) S:N="" ECXERR=1
"RTN","ECXUTLA",29,0)
 Q:ECXERR
"RTN","ECXUTLA",30,0)
 S DIC="^ECX(727.1,",DIC(0)="NZ",X=N
"RTN","ECXUTLA",31,0)
 D ^DIC I Y=-1 S ECXERR=1 Q
"RTN","ECXUTLA",32,0)
 S ECXTYPE=$P(Y(0),U,7)_U_+Y K X,Y,DIC
"RTN","ECXUTLA",33,0)
 I $G(ECXAUD)=1,ECXHEAD'="DEN",ECXHEAD'="PRE",ECXHEAD'="RAD",ECXHEAD'="SUR" S ECXERR=1
"RTN","ECXUTLA",34,0)
 Q:ECXERR
"RTN","ECXUTLA",35,0)
 S DIC="^ECX(727,",DIC(0)="AEMQ",DIC("S")="I $P(^(0),U,3)=$P(ECXTYPE,U),'$D(^(""PURG""))"
"RTN","ECXUTLA",36,0)
 D ^DIC
"RTN","ECXUTLA",37,0)
 I Y=-1!($G(DUOUT))!($G(DTOUT)) D:'$G(ECXAUD) RUN S ECXERR=1 Q  ;154
"RTN","ECXUTLA",38,0)
 S DIC="^ECX(727,",(DA,ECXDA)=+Y,DR=".01;1;2;3;4;5;15;300",DIQ="ECXARR",DIQ(0)="IE"
"RTN","ECXUTLA",39,0)
 D EN^DIQ1
"RTN","ECXUTLA",40,0)
 W !!,?5,"Extract:      ",ECXARR(727,ECXDA,2,"E")," #",ECXDA
"RTN","ECXUTLA",41,0)
 W !!,?5,"Start date:   ",ECXARR(727,ECXDA,3,"E")
"RTN","ECXUTLA",42,0)
 W !,?5,"End date:     ",ECXARR(727,ECXDA,4,"E")
"RTN","ECXUTLA",43,0)
 W !,?5,"# of Records: ",ECXARR(727,ECXDA,5,"E")
"RTN","ECXUTLA",44,0)
 I ECXHEAD="PRO" W !,?5,"Station:      ",ECXARR(727,ECXDA,15,"E")
"RTN","ECXUTLA",45,0)
 ;if transmit date exists, then ask user if audit still needed
"RTN","ECXUTLA",46,0)
 I $L(ECXARR(727,ECXDA,300,"E"))>0 D
"RTN","ECXUTLA",47,0)
 .W !!,?5,"The extract which you have chosen to audit"
"RTN","ECXUTLA",48,0)
 .W !,?5,"was transmitted to Austin/DSS on ",ECXARR(727,ECXDA,300,"E"),".",!
"RTN","ECXUTLA",49,0)
 .S DIR(0)="Y",DIR("A")="Do you want to continue with this audit report",DIR("B")="NO" D ^DIR
"RTN","ECXUTLA",50,0)
 .S:$G(DIRUT) ECXERR=1 S:Y=0 ECXERR=1
"RTN","ECXUTLA",51,0)
 Q:ECXERR
"RTN","ECXUTLA",52,0)
 ;setup the return array
"RTN","ECXUTLA",53,0)
 S ECXARRAY("EXTRACT")=ECXARR(727,ECXDA,.01,"E"),ECXARRAY("DIV")=ECXARR(727,ECXDA,15,"I"),ECXARRAY("TYPE")=$P(ECXTYPE,U),ECXARRAY("DEF")=$P(ECXTYPE,U,2)
"RTN","ECXUTLA",54,0)
 S ECXARRAY("START")=ECXARR(727,ECXDA,3,"E"),ECXARRAY("END")=ECXARR(727,ECXDA,4,"E"),ECXARRAY("ERUN")=ECXARR(727,ECXDA,1,"E")
"RTN","ECXUTLA",55,0)
 ;determine date range only for extract audit reports
"RTN","ECXUTLA",56,0)
 I $G(ECXAUD)=0 D
"RTN","ECXUTLA",57,0)
 .S ECXSTART=ECXARRAY("START"),ECXEND=ECXARRAY("END") D RANGE^ECXUTLA(.ECXSTART,.ECXEND,.ECXERR)
"RTN","ECXUTLA",58,0)
 .I ECXERR K ECXARRAY
"RTN","ECXUTLA",59,0)
 .Q:ECXERR
"RTN","ECXUTLA",60,0)
 .S ECXARRAY("START")=ECXSTART,ECXARRAY("END")=ECXEND
"RTN","ECXUTLA",61,0)
 Q
"RTN","ECXUTLA",62,0)
 ;
"RTN","ECXUTLA",63,0)
RANGE(ECXSTART,ECXEND,ECXERR) ;determine date range for extract audit report
"RTN","ECXUTLA",64,0)
 ;   input
"RTN","ECXUTLA",65,0)
 ;   ECXSTART = start date of extract in file #727 (required)
"RTN","ECXUTLA",66,0)
 ;              passed by reference
"RTN","ECXUTLA",67,0)
 ;   ECXEND   = end date of extract in file #727 (required)
"RTN","ECXUTLA",68,0)
 ;              passed by reference
"RTN","ECXUTLA",69,0)
 ;   ECXERR   = passed by reference (required)
"RTN","ECXUTLA",70,0)
 ;   output
"RTN","ECXUTLA",71,0)
 ;   ECXSTART = user selected start date
"RTN","ECXUTLA",72,0)
 ;   ECXEND   = user selected end date
"RTN","ECXUTLA",73,0)
 ;   error CODE
"RTN","ECXUTLA",74,0)
 ;   ECXERR   = 1, if input problem occurs
"RTN","ECXUTLA",75,0)
 ;              0, otherwise
"RTN","ECXUTLA",76,0)
 ;
"RTN","ECXUTLA",77,0)
 ;
"RTN","ECXUTLA",78,0)
 ;convert dates to internal format
"RTN","ECXUTLA",79,0)
 N DATEA,DATEB,X,Y,%DT,DTOUT,OUT
"RTN","ECXUTLA",80,0)
 S (ECXERR,OUT)=0
"RTN","ECXUTLA",81,0)
 S X=ECXSTART D ^%DT S DATEA=Y
"RTN","ECXUTLA",82,0)
 S X=ECXEND D ^%DT S DATEB=Y
"RTN","ECXUTLA",83,0)
 ;allow user to select start date
"RTN","ECXUTLA",84,0)
 ;can't be less than ecxstart or greater than ecxend
"RTN","ECXUTLA",85,0)
 W !!,?5,"You can narrow the date range, if you wish.",!
"RTN","ECXUTLA",86,0)
 W !,?5,"The Start Date can't be earlier than ",ECXSTART,","
"RTN","ECXUTLA",87,0)
 W !,?5,"or later than ",ECXEND,".",!
"RTN","ECXUTLA",88,0)
 F  Q:OUT!ECXERR  D
"RTN","ECXUTLA",89,0)
 .S %DT="AEX",%DT("A")="Select Start Date: ",%DT("B")=ECXSTART,%DT(0)=DATEA
"RTN","ECXUTLA",90,0)
 .D ^%DT S:Y=-1 ECXERR=1 S:$G(DTOUT) ECXERR=1
"RTN","ECXUTLA",91,0)
 .Q:ECXERR
"RTN","ECXUTLA",92,0)
 .I Y>DATEB D  Q
"RTN","ECXUTLA",93,0)
 ..W !,?5,"But that's later than ",ECXEND,"...try again.",!
"RTN","ECXUTLA",94,0)
 .S DATEA=Y,OUT=1
"RTN","ECXUTLA",95,0)
 I ECXERR K ECXSTART,ECXEND
"RTN","ECXUTLA",96,0)
 Q:ECXERR
"RTN","ECXUTLA",97,0)
 S Y=DATEA D DD^%DT S ECXSTART=Y
"RTN","ECXUTLA",98,0)
 ;allow user to select end date
"RTN","ECXUTLA",99,0)
 ;can't be less than ecxstart or greater than ecxend
"RTN","ECXUTLA",100,0)
 W !!,?5,"The End Date can't be earlier than ",ECXSTART
"RTN","ECXUTLA",101,0)
 W !,?5,"(the Start Date you selected), or later than ",ECXEND,".",!
"RTN","ECXUTLA",102,0)
 S OUT=0
"RTN","ECXUTLA",103,0)
 F  Q:OUT!ECXERR  D
"RTN","ECXUTLA",104,0)
 .S %DT="AEX",%DT("A")="Select End Date: ",%DT("B")=ECXEND,%DT(0)=-DATEB
"RTN","ECXUTLA",105,0)
 .D ^%DT S:Y=-1 ECXERR=1 S:$G(DTOUT) ECXERR=1
"RTN","ECXUTLA",106,0)
 .Q:ECXERR
"RTN","ECXUTLA",107,0)
 .I Y<DATEA D  Q
"RTN","ECXUTLA",108,0)
 ..W !,?5,"But that's earlier than ",ECXSTART,"...try again.",!
"RTN","ECXUTLA",109,0)
 .S DATEB=Y,OUT=1
"RTN","ECXUTLA",110,0)
 I ECXERR K ECXSTART,ECXEND
"RTN","ECXUTLA",111,0)
 Q:ECXERR
"RTN","ECXUTLA",112,0)
 S Y=DATEB D DD^%DT S ECXEND=Y
"RTN","ECXUTLA",113,0)
 Q
"RTN","ECXUTLA",114,0)
 ;
"RTN","ECXUTLA",115,0)
DEVICE(ZTRTN,ZTDESC,ZTSAVE) ;get print device and optionally task to background
"RTN","ECXUTLA",116,0)
 ;   input
"RTN","ECXUTLA",117,0)
 ;   ZTRTN  = line^routine; task entry point (required)
"RTN","ECXUTLA",118,0)
 ;            variable for %ZTLOAD
"RTN","ECXUTLA",119,0)
 ;   ZTDESC = task description (required)
"RTN","ECXUTLA",120,0)
 ;            variable for %ZTLOAD
"RTN","ECXUTLA",121,0)
 ;   ZTSAVE = array; passed by reference (required)
"RTN","ECXUTLA",122,0)
 ;            variables for %ZTLOAD
"RTN","ECXUTLA",123,0)
 ;   output
"RTN","ECXUTLA",124,0)
 ;   ZTSAVE = returns ZTSAVE("POP"),ZTSAVE("ZTSK")
"RTN","ECXUTLA",125,0)
 ;
"RTN","ECXUTLA",126,0)
 N POP,ZTSK
"RTN","ECXUTLA",127,0)
 S ZTSAVE("POP")=0,ZTSAVE("ZTSK")=0
"RTN","ECXUTLA",128,0)
 ;return ztsave("pop")=1 and quit if required input not available
"RTN","ECXUTLA",129,0)
 I '$L(ZTRTN)!('$L(ZTDESC))!('$D(ZTSAVE)) S ZTSAVE("POP")=1 Q
"RTN","ECXUTLA",130,0)
 ;get print device
"RTN","ECXUTLA",131,0)
 K IO("Q") S %ZIS="QM" D ^%ZIS
"RTN","ECXUTLA",132,0)
 S ZTSAVE("POP")=POP
"RTN","ECXUTLA",133,0)
 I POP D
"RTN","ECXUTLA",134,0)
 .W !,"No device selected...exiting.",!
"RTN","ECXUTLA",135,0)
 Q:POP
"RTN","ECXUTLA",136,0)
 I $D(IO("Q")) D
"RTN","ECXUTLA",137,0)
 .S ZTSAVE("ZTREQ")="@"
"RTN","ECXUTLA",138,0)
 .D ^%ZTLOAD
"RTN","ECXUTLA",139,0)
 .I $G(ZTSK)>0 D
"RTN","ECXUTLA",140,0)
 ..W !,"Request queued as Task #",ZTSK,".",!
"RTN","ECXUTLA",141,0)
 ..S ZTSAVE("ZTSK")=ZTSK
"RTN","ECXUTLA",142,0)
 ..S ZTSAVE("POP")=0
"RTN","ECXUTLA",143,0)
 .I '$G(ZTSK) D
"RTN","ECXUTLA",144,0)
 ..W !,"Request to queue cancelled...exiting.",!
"RTN","ECXUTLA",145,0)
 ..S ZTSAVE("ZTSK")=0
"RTN","ECXUTLA",146,0)
 ..S ZTSAVE("POP")=1
"RTN","ECXUTLA",147,0)
 Q
"RTN","ECXUTLA",148,0)
 ;
"RTN","ECXUTLA",149,0)
WARDS(ECXALL,ECXDIV) ;get wards for selected divisions
"RTN","ECXUTLA",150,0)
 ;   input
"RTN","ECXUTLA",151,0)
 ;   ECXALL = 1/0 (optional)
"RTN","ECXUTLA",152,0)
 ;            1==> user selected all divisions OR
"RTN","ECXUTLA",153,0)
 ;                 facility is non-divisional
"RTN","ECXUTLA",154,0)
 ;            0==> user selected some divisions
"RTN","ECXUTLA",155,0)
 ;            if ECXALL not defined, then assume 1
"RTN","ECXUTLA",156,0)
 ;   ECXDIV = array of divisions selected (optional)
"RTN","ECXUTLA",157,0)
 ;            passed by reference array containing
"RTN","ECXUTLA",158,0)
 ;            selected divisions;
"RTN","ECXUTLA",159,0)
 ;            if ECXALL=1, then ECXDIV array isn't
"RTN","ECXUTLA",160,0)
 ;            required; information for all wards will be obtained
"RTN","ECXUTLA",161,0)
 ;            if ECXALL=0, then only wards for divisions in ECXDIV
"RTN","ECXUTLA",162,0)
 ;   output
"RTN","ECXUTLA",163,0)
 ;   ^TMP($J,"ECXWARD", contains ward name, division, g&l order
"RTN","ECXUTLA",164,0)
 ;   ^TMP($J,"ECXORDER", contains ward grouping info
"RTN","ECXUTLA",165,0)
 ;
"RTN","ECXUTLA",166,0)
 N IEN,WARD,ORDX,NAME,NM,ORDER,DIV,HIEN,GROUP,DATA,DEPT,NAMEDEPT
"RTN","ECXUTLA",167,0)
 K ^TMP($J,"ECXWARD"),^TMP($J,"ECXORDER")
"RTN","ECXUTLA",168,0)
 ;if ecxall not here, then set ecxall=1
"RTN","ECXUTLA",169,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXUTLA",170,0)
 S ORDX=0,NM=""
"RTN","ECXUTLA",171,0)
 F  S NM=$O(^DIC(42,"B",NM)) Q:NM=""  S IEN=0 F  S IEN=$O(^DIC(42,"B",NM,IEN)) Q:IEN=""  D
"RTN","ECXUTLA",172,0)
 .S DIV=+$P(^DIC(42,IEN,0),U,11) Q:DIV=0
"RTN","ECXUTLA",173,0)
 .I ECXALL=0,'$D(ECXDIV(DIV)) Q
"RTN","ECXUTLA",174,0)
 .S (NAME,ORDER,DEPT)="",NAME=$P(^DIC(42,IEN,0),U,1),ORDER=+$P($G(^DIC(42,IEN,"ORDER")),U,1),DEPT=$P($G(^ECX(727.4,IEN,0)),U,2)
"RTN","ECXUTLA",175,0)
 .;'unordered' ward is probably inactive, but get basic data anyway
"RTN","ECXUTLA",176,0)
 .I ORDER=0 S ORDX=ORDX+1,ORDER="99999"_ORDX,ORDER=+ORDER
"RTN","ECXUTLA",177,0)
 .;get this ward's ien in file #44; file #727.802 & #727.808 use pointers to file #44
"RTN","ECXUTLA",178,0)
 .S HIEN=+$P($G(^DIC(42,IEN,44)),U,1) Q:HIEN=0
"RTN","ECXUTLA",179,0)
 .;if this is last ward in group, then get the group name
"RTN","ECXUTLA",180,0)
 .K GROUP I $D(^DIC(42,IEN,1,1,0)) S GROUP=$P(^DIC(42,IEN,1,1,0),U,1) I GROUP="" K GROUP
"RTN","ECXUTLA",181,0)
 .S ^TMP($J,"ECXWARD",HIEN)=ORDER_U_NAME_U_DIV_U_IEN_U_DEPT
"RTN","ECXUTLA",182,0)
 .I $D(GROUP) S ^TMP($J,"ECXWARD",HIEN,1)=GROUP
"RTN","ECXUTLA",183,0)
 ;after all wards in file #42 are processed, arrange by g&l order
"RTN","ECXUTLA",184,0)
 S HIEN=0
"RTN","ECXUTLA",185,0)
 F  S HIEN=$O(^TMP($J,"ECXWARD",HIEN)) Q:HIEN=""  S DATA=^TMP($J,"ECXWARD",HIEN) D
"RTN","ECXUTLA",186,0)
 .S ORDER=$P(DATA,U,1),NAME=$P(DATA,U,2),DIV=$P(DATA,U,3),DEPT=$P(DATA,U,5)
"RTN","ECXUTLA",187,0)
 .S NAMEDEPT=NAME S:DEPT]"" NAMEDEPT=NAME_" <"_DEPT_">"
"RTN","ECXUTLA",188,0)
 .S ^TMP($J,"ECXORDER",DIV,ORDER)=HIEN_U_NAMEDEPT_U
"RTN","ECXUTLA",189,0)
 .I $D(^TMP($J,"ECXWARD",HIEN,1)) S GROUP=^(1),^TMP($J,"ECXORDER",DIV,ORDER,1)=1_U_GROUP_U
"RTN","ECXUTLA",190,0)
 Q
"RTN","ECXUTLA",191,0)
 ;
"RTN","ECXUTLA",192,0)
SASHEAD(ECXFL,ECXHEAD,ECXDIV,ECXARRAY,ECXPG,ECXTAB) ;header and page control
"RTN","ECXUTLA",193,0)
 ;
"RTN","ECXUTLA",194,0)
 ;   ECXFL   = feeder location (division) (required)
"RTN","ECXUTLA",195,0)
 ;   ECXHEAD = extract header from file #727.1 (required)               
"RTN","ECXUTLA",196,0)
 ;   ECXDIV  = array of divisions selected (required)
"RTN","ECXUTLA",197,0)
 ;   ECXPG   = page number (required)
"RTN","ECXUTLA",198,0)
 ;   ECXTAB  = tab location;
"RTN","ECXUTLA",199,0)
 ;             allows for proper spacing in sub-header line (optional)
"RTN","ECXUTLA",200,0)
 ;
"RTN","ECXUTLA",201,0)
 N JJ,SS,LN
"RTN","ECXUTLA",202,0)
 S $P(LN,"-",80)=""
"RTN","ECXUTLA",203,0)
 I $G(ECXTAB)="" S ECXTAB=40
"RTN","ECXUTLA",204,0)
 I $E(IOST)="C" D
"RTN","ECXUTLA",205,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTLA",206,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUTLA",207,0)
 Q:QFLG
"RTN","ECXUTLA",208,0)
 W:$Y!($E(IOST)="C") @IOF S ECXPG=ECXPG+1
"RTN","ECXUTLA",209,0)
 W !,"SAS Audit Report for "_ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract"
"RTN","ECXUTLA",210,0)
 W !,"DSS Extract Log #:    "_ECXARRAY("EXTRACT")
"RTN","ECXUTLA",211,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXUTLA",212,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXUTLA",213,0)
 I $D(ECXDIV(ECXFL)) W !,"Division/Site:        "_$P(ECXDIV(ECXFL),U,2)_" ("_ECXFL_")",?68,"Page: "_ECXPG
"RTN","ECXUTLA",214,0)
 I '$D(ECXDIV(ECXFL)) W !,"Division/Site:        "_"Unknown",?68,"Page: "_ECXPG
"RTN","ECXUTLA",215,0)
 W !!,"Feeder Location",?ECXTAB,"Feeder Key",?68,"Quantity"
"RTN","ECXUTLA",216,0)
 W !,LN,!
"RTN","ECXUTLA",217,0)
 Q
"RTN","ECXUTLA",218,0)
 ;
"RTN","ECXUTLA",219,0)
RUN ;154 Section allows extract to be run from within audit report
"RTN","ECXUTLA",220,0)
 N DIR,X,Y,DTOUT,DUOUT,ECPACK,ECGRP,ECFILE,ECRTN,ECPIECE,ECVER,ECHEAD,ECXAUDIT
"RTN","ECXUTLA",221,0)
 W !
"RTN","ECXUTLA",222,0)
 S DIR("A",1)="You didn't select an existing extract log record number.  Remember"
"RTN","ECXUTLA",223,0)
 S DIR("A",2)="the extract must be run first, before you can run this audit."
"RTN","ECXUTLA",224,0)
 S DIR("A",3)="If there is no log record number, run the extract from the Package Extracts"
"RTN","ECXUTLA",225,0)
 S DIR("A",4)="menu or if unavailable there, from here (you will be prompted to"
"RTN","ECXUTLA",226,0)
 S DIR("A",5)="queue the extract below)."
"RTN","ECXUTLA",227,0)
 S DIR("A",6)=""
"RTN","ECXUTLA",228,0)
 S DIR("A",7)="Remember that if you queue the extract to run from here"
"RTN","ECXUTLA",229,0)
 S DIR("A",8)="(the extract audit report menu), you may have to wait overnight for the"
"RTN","ECXUTLA",230,0)
 S DIR("A",9)="extract to finish. It must finish before you can pick its log record number"
"RTN","ECXUTLA",231,0)
 S DIR("A",10)="to run the extract audit."
"RTN","ECXUTLA",232,0)
 S DIR("A",11)=""
"RTN","ECXUTLA",233,0)
 S DIR("A")="Would you like to queue the "_ECXHEAD_" extract"
"RTN","ECXUTLA",234,0)
 S DIR(0)="Y",DIR("B")="NO" D ^DIR K DIR
"RTN","ECXUTLA",235,0)
 Q:Y'=1
"RTN","ECXUTLA",236,0)
 S ECHEAD=ECXHEAD,ECXAUDIT=1
"RTN","ECXUTLA",237,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXUTLA",238,0)
 I ECFILE="" Q
"RTN","ECXUTLA",239,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXUTLA",240,0)
 Q
"VER")
8.0^22.0
"^DD",727.802,727.802,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.802,727.802,1,.1)
Year/Month
"^DD",727.802,727.802,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.802,727.802,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.802,727.802,1,3)
Answer must be 6 characters in length.
"^DD",727.802,727.802,1,21,0)
^.001^2^2^3150507^^^^
"^DD",727.802,727.802,1,21,1,0)
A six character string representing the year and the month
"^DD",727.802,727.802,1,21,2,0)
for which this extract was performed.
"^DD",727.802,727.802,1,23,0)
^^6^6^3150507^
"^DD",727.802,727.802,1,23,1,0)
YEAR MONTH is derived by parsing the fileman format end date of the 
"^DD",727.802,727.802,1,23,2,0)
extract. The month is determined by taking the 4th and 5th characters of
"^DD",727.802,727.802,1,23,3,0)
the end date, the year by taking the 2nd and 3rd characters, and the
"^DD",727.802,727.802,1,23,4,0)
century is then calculated by taking the 1st character of the end date,
"^DD",727.802,727.802,1,23,5,0)
and adding 17 to  it. The century is then concatenated with the year and
"^DD",727.802,727.802,1,23,6,0)
month, giving the results in YYYYMM format.  
"^DD",727.802,727.802,1,"DT")
2971002
"^DD",727.802,727.802,18,0)
ELIGIBILITY^F^^0;19^K:$L(X)>3!($L(X)<1) X
"^DD",727.802,727.802,18,.1)
Eligibility
"^DD",727.802,727.802,18,3)
Answer must be 1-3 characters in length.
"^DD",727.802,727.802,18,21,0)
^.001^1^1^3150507^^^^
"^DD",727.802,727.802,18,21,1,0)
Appropriate eligibility code based on veteran or non-veteran status.
"^DD",727.802,727.802,18,23,0)
^^11^11^3150507^
"^DD",727.802,727.802,18,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.802,727.802,18,23,2,0)
in the ADMISSION EXTRACT file (#727.802), ELIGIBILITY data is derived from
"^DD",727.802,727.802,18,23,3,0)
the PRIMARY ELIGIBILITY CODE field (.361) in the PATIENT file (#2).
"^DD",727.802,727.802,18,23,4,0)
PRIMARY ELIGIBILITY CODE is a pointer to the ELIGIBILITY CODE file (#8).
"^DD",727.802,727.802,18,23,5,0)
The data is derived from the MAS ELIGIBILITY CODE field (#8) in the
"^DD",727.802,727.802,18,23,6,0)
ELIGIBILITY CODE file (#8) which in turn is a pointer to the MAS
"^DD",727.802,727.802,18,23,7,0)
ELIGIBILITY CODE file (#8.1). 
"^DD",727.802,727.802,18,23,8,0)
 
"^DD",727.802,727.802,18,23,9,0)
The pointer value to file (#8.1) is converted by ELIG^ECXUTL3 to the
"^DD",727.802,727.802,18,23,10,0)
corresponding eligibility code used by NPCD.  This code is composed of
"^DD",727.802,727.802,18,23,11,0)
two or three numeric characters.
"^DD",727.802,727.802,18,"DT")
2980708
"^DD",727.802,727.802,28,0)
TREATING SPECIALTY^F^^0;29^K:$L(X)>3!($L(X)<2) X
"^DD",727.802,727.802,28,.1)
Treating Specialty
"^DD",727.802,727.802,28,3)
PTF Code from Specialty File (42.4)
"^DD",727.802,727.802,28,21,0)
^.001^2^2^3150507^^^
"^DD",727.802,727.802,28,21,1,0)
The PTF CODE of the treating specialty associated with this extract
"^DD",727.802,727.802,28,21,2,0)
record.
"^DD",727.802,727.802,28,23,0)
^^9^9^3150507^
"^DD",727.802,727.802,28,23,1,0)
Using the "ATT1" cross reference on the PATIENT MOVEMENT file (#405) and 
"^DD",727.802,727.802,28,23,2,0)
the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4) in the
"^DD",727.802,727.802,28,23,3,0)
ADMISSION EXTRACT file (#727.802), TREATING SPECIALTY data is derived from
"^DD",727.802,727.802,28,23,4,0)
the FACILITY TREATING SPECIALTY field (#.09) in the PATIENT MOVEMENT file
"^DD",727.802,727.802,28,23,5,0)
(#405). This facility treating specialty data is a pointer to the FACILITY
"^DD",727.802,727.802,28,23,6,0)
TREATING SPECIALTY file (#45.7). Using the SPECIALTY field (#1) in the
"^DD",727.802,727.802,28,23,7,0)
FACILITY TREATING SPECIALTY file (#45.7), the pointer to the SPECIALTY
"^DD",727.802,727.802,28,23,8,0)
file (#42.4) is obtained and stored instead of the IEN of the
"^DD",727.802,727.802,28,23,9,0)
specialty.
"^DD",727.802,727.802,28,"DT")
3091103
"^DD",727.802,727.802,57,0)
OBSERVATION PATIENT INDICATOR^S^NO:NO;YES:YES;^1;21^Q
"^DD",727.802,727.802,57,3)
Enter observation patient status for this record.
"^DD",727.802,727.802,57,21,0)
^.001^1^1^3150709^^^^
"^DD",727.802,727.802,57,21,1,0)
Indicates if patient is considered to be an observation patient.
"^DD",727.802,727.802,57,23,0)
^^12^12^3150709^
"^DD",727.802,727.802,57,23,1,0)
Data (YES, NO) is retrieved from API call $$OBSPAT^ECXUTL4:
"^DD",727.802,727.802,57,23,2,0)
 
"^DD",727.802,727.802,57,23,3,0)
If the patient's treating specialty exists in the DSS TREATING SPECIALTY
"^DD",727.802,727.802,57,23,4,0)
TRANSLATION file (#727.831), data is derived from the OBSERVATION PAT 
"^DD",727.802,727.802,57,23,5,0)
INDICATOR field (#4) of the DSS TREATING SPECIALTY TRANSLATION file
"^DD",727.802,727.802,57,23,6,0)
(#727.831).
"^DD",727.802,727.802,57,23,7,0)
 
"^DD",727.802,727.802,57,23,8,0)
If patient is outpatient and treating specialty not in file, AND Feeder
"^DD",727.802,727.802,57,23,9,0)
Key (CLI) or DSS ID (MTL,IVP,ECQ,NOS,SUR) is 290-297, Observation
"^DD",727.802,727.802,57,23,10,0)
Patient Ind=YES.  Else, Observation Patient Ind=NO.
"^DD",727.802,727.802,57,23,11,0)
 
"^DD",727.802,727.802,57,23,12,0)
Otherwise, Observation Patient Ind=NO.
"^DD",727.802,727.802,57,"DT")
3120414
"^DD",727.802,727.802,93,0)
PRIMARY ICD-10 CODE^F^^2;12^K:$L(X)>8!($L(X)<1) X
"^DD",727.802,727.802,93,3)
Enter the primary ICD-10 code for this admission.
"^DD",727.802,727.802,93,21,0)
^.001^1^1^3150507^^^
"^DD",727.802,727.802,93,21,1,0)
The primary ICD-10 diagnosis code for this admission.
"^DD",727.802,727.802,93,23,0)
^.001^5^5^3150507^^
"^DD",727.802,727.802,93,23,1,0)
Using the "ATT1" cross reference on the PATIENT MOVEMENT file (#405) and
"^DD",727.802,727.802,93,23,2,0)
the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4) in
"^DD",727.802,727.802,93,23,3,0)
this file, PRIMARY ICD-10 CODE is derived by using the PTF ENTRY field
"^DD",727.802,727.802,93,23,4,0)
(.16) in the PATIENT MOVEMENT file (#405) to get the ICD 1 field (#5)
"^DD",727.802,727.802,93,23,5,0)
within the 501 multiple (#50) in the PTF file (#45).
"^DD",727.802,727.802,93,"DT")
3120308
"^DD",727.808,727.808,13,0)
TYPE^S^2:TRANSFER;3:DISCHARGE;^0;14^Q
"^DD",727.808,727.808,13,.1)
Type
"^DD",727.808,727.808,13,3)
Enter the type of movement associated with this record.
"^DD",727.808,727.808,13,21,0)
^.001^1^1^3150616^^^^
"^DD",727.808,727.808,13,21,1,0)
The transaction type of the movement for this patient.
"^DD",727.808,727.808,13,23,0)
^^3^3^3150616^
"^DD",727.808,727.808,13,23,1,0)
Records for this extract are identified using the ATTx cross reference
"^DD",727.808,727.808,13,23,2,0)
(where x indicates if it's a transfer or a discharge) of the PATIENT
"^DD",727.808,727.808,13,23,3,0)
MOVEMENT file (#405).
"^DD",727.808,727.808,13,"DT")
3120529
"^DD",727.808,727.808,26,0)
DOM,PRRTP AND SAARTP INDICATOR^S^P:GEN. PRRTP;T:PTSD PRRTP;S:DOM. PRRTP;H:HOMELESS CWT/TR;A:SA CWT/TR;D:DOMICILIARY;B:PTSD CWT/TR;C:GEN. CET/TR;^1;3^Q
"^DD",727.808,727.808,26,3)
Enter the indicator associated with the treating specialty assigned to this record.
"^DD",727.808,727.808,26,21,0)
^.001^2^2^3150616^^^^
"^DD",727.808,727.808,26,21,1,0)
Indicates if the patient is admitted to either a RRTP, PRRTP, or SARRTP 
"^DD",727.808,727.808,26,21,2,0)
at the time care is provided.
"^DD",727.808,727.808,26,23,0)
^^5^5^3150616^
"^DD",727.808,727.808,26,23,1,0)
If the patient's treating specialty exists in the DSS TREATING SPECIALTY
"^DD",727.808,727.808,26,23,2,0)
TRANSLATION file (#727.831), data is derived from the DOM/PRRTP/SARRTP
"^DD",727.808,727.808,26,23,3,0)
CODE field (#2) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831).
"^DD",727.808,727.808,26,23,4,0)
 
"^DD",727.808,727.808,26,23,5,0)
Else, the value is null.
"^DD",727.808,727.808,26,"DT")
3120530
"^DD",727.808,727.808,27,0)
OBSERVATION PATIENT INDICATOR^S^NO:NO;YES:YES;^1;4^Q
"^DD",727.808,727.808,27,3)
Enter observation patient status for this record.
"^DD",727.808,727.808,27,21,0)
^.001^1^1^3150709^^^^
"^DD",727.808,727.808,27,21,1,0)
Indicate if patient is considered to be an observation patient.
"^DD",727.808,727.808,27,23,0)
^^12^12^3150709^
"^DD",727.808,727.808,27,23,1,0)
Data (YES, NO) is retrieved from API call $$OBSPAT^ECXUTL4:
"^DD",727.808,727.808,27,23,2,0)
 
"^DD",727.808,727.808,27,23,3,0)
If the patient's treating specialty exists in the DSS TREATING SPECIALTY
"^DD",727.808,727.808,27,23,4,0)
TRANSLATION file (#727.831), data is derived from the OBSERVATION PAT
"^DD",727.808,727.808,27,23,5,0)
INDICATOR field (#4) of the DSS TREATING SPECIALTY TRANSLATION file
"^DD",727.808,727.808,27,23,6,0)
(#727.831).
"^DD",727.808,727.808,27,23,7,0)
 
"^DD",727.808,727.808,27,23,8,0)
If patient is outpatient and treating specialty not in file, AND Feeder
"^DD",727.808,727.808,27,23,9,0)
Key (CLI) or DSS ID (MTL,IVP,ECQ,NOS,SUR) is 290-297, Observation
"^DD",727.808,727.808,27,23,10,0)
Patient Ind=YES.  Else, Observation Patient Ind=NO.
"^DD",727.808,727.808,27,23,11,0)
 
"^DD",727.808,727.808,27,23,12,0)
Otherwise, Observation Patient Ind=NO.
"^DD",727.808,727.808,27,"DT")
3120530
"^DD",727.809,727.809,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.809,727.809,4,.1)
Patient No. - DFN
"^DD",727.809,727.809,4,3)
Enter the name of the patient for this extract record.
"^DD",727.809,727.809,4,21,0)
^.001^1^1^3150528^^^^
"^DD",727.809,727.809,4,21,1,0)
An identifying number for the patient at the local site.
"^DD",727.809,727.809,4,23,0)
^^3^3^3150528^
"^DD",727.809,727.809,4,23,1,0)
Pointer to the NAME field (#.01) of the PATIENT file (#2). PATIENT NO. -
"^DD",727.809,727.809,4,23,2,0)
DFN data is derived from the DFN field (#1) of the UNIT DOSE EXTRACT 
"^DD",727.809,727.809,4,23,3,0)
DATA file (#728.904).
"^DD",727.809,727.809,4,"DT")
2961018
"^DD",727.809,727.809,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;^0;8^Q
"^DD",727.809,727.809,7,.1)
In Out Patient Indicator
"^DD",727.809,727.809,7,3)
Enter the patient's status for this extract entry.
"^DD",727.809,727.809,7,21,0)
^.001^2^2^3150528^^^^
"^DD",727.809,727.809,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this 
"^DD",727.809,727.809,7,21,2,0)
extract entry.
"^DD",727.809,727.809,7,23,0)
^^10^10^3150528^
"^DD",727.809,727.809,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.809,727.809,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine 
"^DD",727.809,727.809,7,23,3,0)
inpatient/outpatient status.  If the patient is an outpatient, processing 
"^DD",727.809,727.809,7,23,4,0)
stops and the field is set to O. If the patient is an inpatient then 
"^DD",727.809,727.809,7,23,5,0)
$$INOUTP^ECXUTL4 is called to look at the treating specialty.  If the 
"^DD",727.809,727.809,7,23,6,0)
patient's treating specialty exists in the DSS TREATING SPECIALTY 
"^DD",727.809,727.809,7,23,7,0)
TRANSLATION file (#727.831) then the value of the INPAT/OUTPAT CODE field
"^DD",727.809,727.809,7,23,8,0)
(#5) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831) is used.  
"^DD",727.809,727.809,7,23,9,0)
If the treating specialty is not found in the DSS TREATING SPECIALTY 
"^DD",727.809,727.809,7,23,10,0)
TRANSLATION file (#727.831) then the indicator is set to I.
"^DD",727.809,727.809,7,"DT")
3120530
"^DD",727.809,727.809,11,0)
WARD^P44'^SC(^0;12^Q
"^DD",727.809,727.809,11,.1)
Ward
"^DD",727.809,727.809,11,3)
Enter the ward location for this patient.
"^DD",727.809,727.809,11,21,0)
^.001^1^1^3150720^^^^
"^DD",727.809,727.809,11,21,1,0)
Current ward where the patient is located when patient is an inpatient.
"^DD",727.809,727.809,11,23,0)
^.001^9^9^3150720^^
"^DD",727.809,727.809,11,23,1,0)
If the patient is an inpatient at the time of the order then the ward is
"^DD",727.809,727.809,11,23,2,0)
derived from the WARD field (#5) in the UNIT DOSE EXTRACT DATA file
"^DD",727.809,727.809,11,23,3,0)
(#728.904) which is a pointer to the WARD LOCATION file (#42). Using the
"^DD",727.809,727.809,11,23,4,0)
ward pointer, the data is derived from the HOSPITAL LOCATION FILE POINTER
"^DD",727.809,727.809,11,23,5,0)
field (#44) in the WARD LOCATION file (#42) which is a pointer to the
"^DD",727.809,727.809,11,23,6,0)
HOSPITAL LOCATION file (#44).
"^DD",727.809,727.809,11,23,7,0)
 
"^DD",727.809,727.809,11,23,8,0)
If this is a clinic order (inpatient medication for an outpatient) then
"^DD",727.809,727.809,11,23,9,0)
the ward will be null.
"^DD",727.809,727.809,11,"DT")
2960913
"^DD",727.809,727.809,12,0)
PROVIDER^F^^0;13^K:$L(X)>11!($L(X)<1) X
"^DD",727.809,727.809,12,.1)
Provider
"^DD",727.809,727.809,12,3)
Enter provider assigned to this patient.
"^DD",727.809,727.809,12,21,0)
^.001^1^1^3150528^^^^
"^DD",727.809,727.809,12,21,1,0)
The provider assigned to this patient.
"^DD",727.809,727.809,12,23,0)
^^3^3^3150528^
"^DD",727.809,727.809,12,23,1,0)
PROVIDER data is derived from the PROVIDER field (#6) of the UNIT DOSE 
"^DD",727.809,727.809,12,23,2,0)
EXTRACT DATA file (#728.904). It is a pointer to the NEW PERSON file 
"^DD",727.809,727.809,12,23,3,0)
(#200). This data is stored as "2"_pointer value.
"^DD",727.809,727.809,12,"DT")
2961018
"^DD",727.809,727.809,15,0)
TREATING SPECIALTY^F^^0;16^K:$L(X)>3!($L(X)<2) X
"^DD",727.809,727.809,15,.1)
Treating Specialty
"^DD",727.809,727.809,15,3)
Answer must be 2-3 characters in length
"^DD",727.809,727.809,15,21,0)
^.001^2^2^3150528^^
"^DD",727.809,727.809,15,21,1,0)
The PTF CODE of the treating specialty associated with this extract
"^DD",727.809,727.809,15,21,2,0)
record.
"^DD",727.809,727.809,15,23,0)
^^7^7^3150528^
"^DD",727.809,727.809,15,23,1,0)
This field is initialized to a null, indicating an outpatient status. If 
"^DD",727.809,727.809,15,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.809,727.809,15,23,3,0)
patient movement number (indicating inpatient status), then the value of 
"^DD",727.809,727.809,15,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.809,727.809,15,23,5,0)
(#45.7), is used to get the SPECIALTY field (#1) which points to the 
"^DD",727.809,727.809,15,23,6,0)
SPECIALTY file (#42.4). Then, the PTF CODE field (#7) of the SPECIALTY
"^DD",727.809,727.809,15,23,7,0)
file (#42.4) is obtained and stored instead of the IEN of the specialty.
"^DD",727.809,727.809,15,"DT")
3091103
"^DD",727.809,727.809,25,0)
DOM,PRRTP AND SAARTP INDICATOR^S^P:GEN. PRRTP;T:PTSD PRRTP;S:DOM. PRRTP;H:HOMELESS CWT/TR;A:SA CWT/TR;D:DOMICILIARY;B:PTSD CWT/TR;C:GEN. CWT/TR;^1;4^Q
"^DD",727.809,727.809,25,3)
Enter the indicator associated with the treating specialty assigned to this record.
"^DD",727.809,727.809,25,21,0)
^.001^2^2^3150528^^^^
"^DD",727.809,727.809,25,21,1,0)
Indicates if the patient is admitted to either a RRTP, PRRTP, or SARRTP at
"^DD",727.809,727.809,25,21,2,0)
the time care is provided.
"^DD",727.809,727.809,25,23,0)
^^5^5^3150528^
"^DD",727.809,727.809,25,23,1,0)
If the patient's treating specialty exists in the DSS TREATING SPECIALTY
"^DD",727.809,727.809,25,23,2,0)
TRANSLATION file (#727.831), data is derived from the DOM/PRRTP/SARRTP
"^DD",727.809,727.809,25,23,3,0)
CODE field (#2) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831).
"^DD",727.809,727.809,25,23,4,0)
 
"^DD",727.809,727.809,25,23,5,0)
Otherwise, the value is null.
"^DD",727.809,727.809,25,"DT")
3120530
"^DD",727.809,727.809,26,0)
OBSERVATION PATIENT INDICATOR^S^NO:NO;YES:YES;^1;5^Q
"^DD",727.809,727.809,26,3)
Enter observation patient status for this record.
"^DD",727.809,727.809,26,21,0)
^.001^1^1^3150709^^^^
"^DD",727.809,727.809,26,21,1,0)
Indicates if patient is considered to be an observation patient.
"^DD",727.809,727.809,26,23,0)
^^12^12^3150709^
"^DD",727.809,727.809,26,23,1,0)
Data (YES, NO) is retrieved from API call $$OBSPAT^ECXUTL4:
"^DD",727.809,727.809,26,23,2,0)
                                 
"^DD",727.809,727.809,26,23,3,0)
If the patient's treating specialty exists in the DSS TREATING SPECIALTY
"^DD",727.809,727.809,26,23,4,0)
TRANSLATION file (#727.831), data is derived from the OBSERVATION PAT
"^DD",727.809,727.809,26,23,5,0)
INDICATOR field (#4) of the DSS TREATING SPECIALTY TRANSLATION file
"^DD",727.809,727.809,26,23,6,0)
(#727.831).
"^DD",727.809,727.809,26,23,7,0)
                                 
"^DD",727.809,727.809,26,23,8,0)
If patient is outpatient and treating specialty not in file, AND Feeder
"^DD",727.809,727.809,26,23,9,0)
Key (CLI) or DSS ID (MTL,IVP,ECQ,NOS,SUR) is 290-297, Observation
"^DD",727.809,727.809,26,23,10,0)
Patient Ind=YES.  Else, Observation Patient Ind=NO.
"^DD",727.809,727.809,26,23,11,0)
                                 
"^DD",727.809,727.809,26,23,12,0)
Otherwise, Observation Patient Ind=NO.
"^DD",727.809,727.809,26,"DT")
3120530
"^DD",727.809,727.809,44,0)
MST STATUS^S^Y:Yes, screened reports MST;N:Screened, does not report MST;D:Screened, declines to answer;U:Unknown, not screened;^1;23^Q
"^DD",727.809,727.809,44,.1)
MST Status
"^DD",727.809,727.809,44,3)
Enter the patient's MST Status.
"^DD",727.809,727.809,44,21,0)
^.001^2^2^3150528^^^
"^DD",727.809,727.809,44,21,1,0)
Indicates the Military Sexual Trauma (MST) status of a patient on the date
"^DD",727.809,727.809,44,21,2,0)
of the encounter.
"^DD",727.809,727.809,44,23,0)
^^5^5^3150528^
"^DD",727.809,727.809,44,23,1,0)
The MST HISTORY file (#29.11) holds data regarding military sexual trauma
"^DD",727.809,727.809,44,23,2,0)
claims and effective dates.  The patients MST status is stored in the MST
"^DD",727.809,727.809,44,23,3,0)
STATUS field (#3).  A call will be made to $$GETSTAT^DGMSTAPI(DFN,DGDATE)
"^DD",727.809,727.809,44,23,4,0)
using the DFN in the PATIENT NO. - DFN (#4) field and the date in the DAY
"^DD",727.809,727.809,44,23,5,0)
field (#8).
"^DD",727.809,727.809,44,"DT")
3120613
"^DD",727.809,727.809,68,0)
ENROLLMENT PRIORITY^F^^2;12^K:$L(X)>2!($L(X)<1) X
"^DD",727.809,727.809,68,3)
Answer must be 1-2 characters in length.
"^DD",727.809,727.809,68,21,0)
^.001^2^2^3150528^^^
"^DD",727.809,727.809,68,21,1,0)
This field contains the enrollment priority group and the enrollment 
"^DD",727.809,727.809,68,21,2,0)
priority subgroup.
"^DD",727.809,727.809,68,23,0)
^^23^23^3150528^
"^DD",727.809,727.809,68,23,1,0)
ENROLLMENT PRIORITY field contains the enrollment priority group and the 
"^DD",727.809,727.809,68,23,2,0)
enrollment priority subgroup from the PATIENT ENROLLMENT file (#27.11).
"^DD",727.809,727.809,68,23,3,0)
 
"^DD",727.809,727.809,68,23,4,0)
ENROLLMENT PRIORITY Groups determined for a patient enrollment include:
"^DD",727.809,727.809,68,23,5,0)
 
"^DD",727.809,727.809,68,23,6,0)
                                '1' FOR GROUP 1 
"^DD",727.809,727.809,68,23,7,0)
                                '2' FOR GROUP 2 
"^DD",727.809,727.809,68,23,8,0)
                                '3' FOR GROUP 3 
"^DD",727.809,727.809,68,23,9,0)
                                '4' FOR GROUP 4 
"^DD",727.809,727.809,68,23,10,0)
                                '5' FOR GROUP 5 
"^DD",727.809,727.809,68,23,11,0)
                                '6' FOR GROUP 6 
"^DD",727.809,727.809,68,23,12,0)
                                '7' FOR GROUP 7 
"^DD",727.809,727.809,68,23,13,0)
                                '8' FOR GROUP 8 
"^DD",727.809,727.809,68,23,14,0)
 
"^DD",727.809,727.809,68,23,15,0)
ENROLLMENT PRIORITY Subgroups determined for a patient enrollment include:
"^DD",727.809,727.809,68,23,16,0)
 
"^DD",727.809,727.809,68,23,17,0)
                                'a' FOR 1 
"^DD",727.809,727.809,68,23,18,0)
                                'c' FOR 3 
"^DD",727.809,727.809,68,23,19,0)
                                'e' FOR 5 
"^DD",727.809,727.809,68,23,20,0)
                                'g' FOR 7   
"^DD",727.809,727.809,68,23,21,0)
 
"^DD",727.809,727.809,68,23,22,0)
Data is obtained from a call to $$ENRSBGRP^DGENA4(DFN) using the patient's
"^DD",727.809,727.809,68,23,23,0)
DFN.
"^DD",727.809,727.809,68,"DT")
3040301
"^DD",727.809,727.809,69,0)
USER ENROLLEE^S^U:USER ENROLLED;^2;13^Q
"^DD",727.809,727.809,69,3)
Enter patient's current enrollment status.
"^DD",727.809,727.809,69,21,0)
^.001^2^2^3150528^^^^
"^DD",727.809,727.809,69,21,1,0)
Indicates whether a Veteran has User Enrollee status for the current or 
"^DD",727.809,727.809,69,21,2,0)
future fiscal year.
"^DD",727.809,727.809,69,23,0)
^^5^5^3150528^
"^DD",727.809,727.809,69,23,1,0)
User enrollee is determined by checking the PATIENT ENROLLMENT file
"^DD",727.809,727.809,69,23,2,0)
(#27.11). When a user has a current or future fiscal year in the 
"^DD",727.809,727.809,69,23,3,0)
ENROLLMENT STATUS field (#.04) the value is set to 'U' and Null if no
"^DD",727.809,727.809,69,23,4,0)
date or a past year's value is contained. Determined by the use of an API:
"^DD",727.809,727.809,69,23,5,0)
$$UESTAT^EASUSER where the Patient Identifier (DFN) is passed in.
"^DD",727.809,727.809,69,"DT")
3120601
"^DD",727.809,727.809,77,0)
OEF/OIF^F^^2;21^K:$L(X)>9!($L(X)<1) X
"^DD",727.809,727.809,77,3)
Answer must be 1-9 characters in length.
"^DD",727.809,727.809,77,21,0)
^.001^3^3^3150528^^
"^DD",727.809,727.809,77,21,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.809,727.809,77,21,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.809,727.809,77,21,3,0)
reflects the OEF or OIF where this patient was in combat.
"^DD",727.809,727.809,77,23,0)
^^12^12^3150528^
"^DD",727.809,727.809,77,23,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.809,727.809,77,23,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.809,727.809,77,23,3,0)
reflects the OEF or OIF where this patient was in combat. The value of 
"^DD",727.809,727.809,77,23,4,0)
this field is derived from the LOCATION OF SERVICE field (#.01) from 
"^DD",727.809,727.809,77,23,5,0)
SERVICE [OEF OR OIF] sub-file (#2.3215) of field (#.3215) located in the 
"^DD",727.809,727.809,77,23,6,0)
PATIENT file (#2).  DSS will capture once, each location where the 
"^DD",727.809,727.809,77,23,7,0)
veteran served. In order to accommodate multiple locations, the values 
"^DD",727.809,727.809,77,23,8,0)
for this field are concatenated into this 9-character field. Possible 
"^DD",727.809,727.809,77,23,9,0)
field values are one or more combinations of the following: 
"^DD",727.809,727.809,77,23,10,0)
OEF =  Operation Enduring Freedom
"^DD",727.809,727.809,77,23,11,0)
OIF  =  Operation Iraqi Freedom
"^DD",727.809,727.809,77,23,12,0)
UNK =  Unknown OEF/OIF
"^DD",727.809,727.809,77,"DT")
3070502
"^DD",727.809,727.809,82,0)
COUNTRY CODE^F^^2;26^K:$L(X)>3!($L(X)<1) X
"^DD",727.809,727.809,82,3)
The code for the country.  Answer must be 1-3 characters in length.
"^DD",727.809,727.809,82,21,0)
^.001^1^1^3150528^^^
"^DD",727.809,727.809,82,21,1,0)
The code for the country associated with the address.
"^DD",727.809,727.809,82,23,0)
^^2^2^3150528^
"^DD",727.809,727.809,82,23,1,0)
The three-character alpha identifying code is copied from the CODE 
"^DD",727.809,727.809,82,23,2,0)
field (#.01) of the COUNTRY file (#779.004).
"^DD",727.809,727.809,82,"DT")
3090609
"^DD",727.809,727.809,83,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^2;27^Q
"^DD",727.809,727.809,83,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.809,727.809,83,21,0)
^.001^6^6^3150528^^
"^DD",727.809,727.809,83,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.809,727.809,83,21,2,0)
Care Center) Reconciliation.
"^DD",727.809,727.809,83,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.809,727.809,83,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.809,727.809,83,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.809,727.809,83,21,6,0)
pays for.
"^DD",727.809,727.809,83,23,0)
^^7^7^3150528^
"^DD",727.809,727.809,83,23,1,0)
If the VistA Patient Type Code (TYPE field (#391) of the PATIENT file (#2)
"^DD",727.809,727.809,83,23,2,0)
 = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.809,727.809,83,23,3,0)
the VistA Other Eligibility multiple (PATIENT ELIGIBILITIES field (#361) 
"^DD",727.809,727.809,83,23,4,0)
of the PATIENT file (#2), which points to locally modifiable ELIGIBILITY
"^DD",727.809,727.809,83,23,5,0)
CODE file (#8) should be evaluated. If the value in the
"^DD",727.809,727.809,83,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.809,727.809,83,23,7,0)
the value should be placed in this field.
"^DD",727.809,727.809,83,"DT")
3100903
"^DD",727.81,727.81,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;^0;8^Q
"^DD",727.81,727.81,7,.1)
In Out Patient Indicator
"^DD",727.81,727.81,7,3)
Enter the patient's status for this extract entry.
"^DD",727.81,727.81,7,21,0)
^.001^2^2^3150612^^^^
"^DD",727.81,727.81,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for
"^DD",727.81,727.81,7,21,2,0)
this extract entry.
"^DD",727.81,727.81,7,23,0)
^^14^14^3150612^
"^DD",727.81,727.81,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.81,727.81,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine 
"^DD",727.81,727.81,7,23,3,0)
inpatient/outpatient status.  If the patient is an outpatient, processing 
"^DD",727.81,727.81,7,23,4,0)
stops and the field is set to O.   If the patient is an inpatient then 
"^DD",727.81,727.81,7,23,5,0)
$$INOUTP^ECXUTL4 is called to look at the treating specialty.  If the 
"^DD",727.81,727.81,7,23,6,0)
patient's treating specialty exists in the DSS TREATING SPECIALTY 
"^DD",727.81,727.81,7,23,7,0)
TRANSLATION file (#727.831) then the value of the INPAT/OUTPAT CODE field 
"^DD",727.81,727.81,7,23,8,0)
(#5) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831) is used.  
"^DD",727.81,727.81,7,23,9,0)
If the treating specialty is not found in the DSS TREATING SPECIALTY 
"^DD",727.81,727.81,7,23,10,0)
TRANSLATION file (#727.831) then the indicator is set to I.
"^DD",727.81,727.81,7,23,11,0)
 
"^DD",727.81,727.81,7,23,12,0)
During the Prescription Extract, if the prescription indicates that the
"^DD",727.81,727.81,7,23,13,0)
medication is to be mailed to the patient, the IN/OUT PATIENT INDICATOR is
"^DD",727.81,727.81,7,23,14,0)
returned with an "O" OUTPATIENT value.
"^DD",727.81,727.81,7,"DT")
3120604
"^DD",727.81,727.81,9,0)
DIVISION^P59'^PS(59,^0;10^Q
"^DD",727.81,727.81,9,.1)
Division
"^DD",727.81,727.81,9,3)
Enter the outpatient pharmacy site.
"^DD",727.81,727.81,9,21,0)
^.001^1^1^3150612^^^^
"^DD",727.81,727.81,9,21,1,0)
The outpatient pharmacy site for this extract entry.
"^DD",727.81,727.81,9,23,0)
^^7^7^3150612^
"^DD",727.81,727.81,9,23,1,0)
For new prescriptions, DIVISION is derived from the DIVISION field 
"^DD",727.81,727.81,9,23,2,0)
(#20) of the PRESCRIPTION file (#52). For refill prescriptions, 
"^DD",727.81,727.81,9,23,3,0)
DIVISION is derived from the DIVISION field (#8) within the REFILL 
"^DD",727.81,727.81,9,23,4,0)
multiple (#52) of the PRESCRIPTION file (#52). For partial prescriptions, 
"^DD",727.81,727.81,9,23,5,0)
DIVISION is derived from the DIVISION field (#.09) within the PARTIAL 
"^DD",727.81,727.81,9,23,6,0)
DATE multiple (#60) of the PRESCRIPTION file (#52). DIVISION is a pointer 
"^DD",727.81,727.81,9,23,7,0)
to the OUTPATIENT SITE file (#59)
"^DD",727.81,727.81,9,"DT")
2960918
"^DD",727.81,727.81,11,0)
VA DRUG CLASSIFICATION^F^^0;12^K:$L(X)>5!($L(X)<5) X
"^DD",727.81,727.81,11,.1)
VA Drug Classification
"^DD",727.81,727.81,11,3)
Your answer must be 5 characters in length.
"^DD",727.81,727.81,11,21,0)
^.001^1^1^3150612^^^
"^DD",727.81,727.81,11,21,1,0)
The VA Drug Classification for the drug/supply item in this prescription.
"^DD",727.81,727.81,11,23,0)
^^2^2^3150612^
"^DD",727.81,727.81,11,23,1,0)
Derived from the VA CLASSIFICATION field (#2) in the DRUG file (#50) for
"^DD",727.81,727.81,11,23,2,0)
the drug identified by the DRUG field (#6) in the PRESCRIPTION file (#52).
"^DD",727.81,727.81,11,"DT")
2960918
"^DD",727.81,727.81,14,0)
NEW^F^^0;15^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,14,.1)
New
"^DD",727.81,727.81,14,3)
Your answer must be 1 character in length.
"^DD",727.81,727.81,14,21,0)
^.001^1^1^3150612^^^^
"^DD",727.81,727.81,14,21,1,0)
Data will be 1 if this is a new prescription.
"^DD",727.81,727.81,14,23,0)
^^17^17^3150612^
"^DD",727.81,727.81,14,23,1,0)
If the version of Outpatient Pharmacy is prior to V. 6.0, examine 
"^DD",727.81,727.81,14,23,2,0)
the "AD" cross reference on the FILL DATE field (#22) of the 
"^DD",727.81,727.81,14,23,3,0)
PRESCRIPTION file (#52) for new prescriptions or the REFILL DATE 
"^DD",727.81,727.81,14,23,4,0)
field (#.01) within the REFILL multiple (#52) of the PRESCRIPTION 
"^DD",727.81,727.81,14,23,5,0)
file (#52) for refill prescriptions. Cross reference is 
"^DD",727.81,727.81,14,23,6,0)
^PSRX("AD",DATE,D0,REFILL# or 0 for new RX).
"^DD",727.81,727.81,14,23,7,0)
  
"^DD",727.81,727.81,14,23,8,0)
If the version of Outpatient Pharmacy is V. 6.0 or greater:
"^DD",727.81,727.81,14,23,9,0)
1.  Examine the "AL" cross reference on the RELEASED DATE/TIME 
"^DD",727.81,727.81,14,23,10,0)
field (#31) of the PRESCRIPTION file (#52) for new prescriptions or the 
"^DD",727.81,727.81,14,23,11,0)
RELEASED DATE/TIME field (#17) within the REFILL multiple (#52) of the 
"^DD",727.81,727.81,14,23,12,0)
PRESCRIPTION file (#52) for refill prescriptions. Cross reference is 
"^DD",727.81,727.81,14,23,13,0)
^PSRX("AL",DATE,D0,REFILL# or 0 for new RX).
"^DD",727.81,727.81,14,23,14,0)
2.  Examine the "AM" cross reference on the RELEASED DATE/TIME 
"^DD",727.81,727.81,14,23,15,0)
field (#8) within the PARTIAL DATE multiple (#60) of the PRESCRIPTION 
"^DD",727.81,727.81,14,23,16,0)
file (#52) for partial prescriptions. Cross reference is 
"^DD",727.81,727.81,14,23,17,0)
^PSRX("AM",DATE,D0,PARTIAL_REFILL#).
"^DD",727.81,727.81,14,"DT")
2960918
"^DD",727.81,727.81,17,0)
COST^NJ8,2^^0;18^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>10000)!(X<0) X
"^DD",727.81,727.81,17,.1)
Cost
"^DD",727.81,727.81,17,3)
Enter a dollar amount between 0 and 10000, 2 decimal digits.
"^DD",727.81,727.81,17,21,0)
^.001^1^1^3150612^^^
"^DD",727.81,727.81,17,21,1,0)
VA pharmacy supply cost of drug dispensed.
"^DD",727.81,727.81,17,23,0)
^^14^14^3150612^
"^DD",727.81,727.81,17,23,1,0)
Cost is calculated as quantity * (multiplied by) price.
"^DD",727.81,727.81,17,23,2,0)
  
"^DD",727.81,727.81,17,23,3,0)
Quantity is derived from the QTY field (#7) in the PRESCRIPTION file 
"^DD",727.81,727.81,17,23,4,0)
(#52) for new prescriptions, or from the QTY field (#1) within the REFILL 
"^DD",727.81,727.81,17,23,5,0)
multiple (#52) in the PRESCRIPTION file (#52) for refill prescriptions, 
"^DD",727.81,727.81,17,23,6,0)
or from the QTY field (#.04) within the PARTIAL DATE multiple (#60) in the
"^DD",727.81,727.81,17,23,7,0)
PRESCRIPTION file (#52) for partial prescriptions.
"^DD",727.81,727.81,17,23,8,0)
  
"^DD",727.81,727.81,17,23,9,0)
Price is derived from the UNIT PRICE OF DRUG field (#17) in the 
"^DD",727.81,727.81,17,23,10,0)
PRESCRIPTION file (#52) for new prescriptions, or from the CURRENT UNIT 
"^DD",727.81,727.81,17,23,11,0)
PRICE OF DRUG field (#1.2) within the REFILL multiple (#52) in the 
"^DD",727.81,727.81,17,23,12,0)
PRESCRIPTION file (#52) for refill prescriptions, or from the CURRENT 
"^DD",727.81,727.81,17,23,13,0)
UNIT PRICE OF DRUG field (#.042) within the PARTIAL DATE multiple (#60) in
"^DD",727.81,727.81,17,23,14,0)
the PRESCRIPTION file (#52) for partial prescriptions.
"^DD",727.81,727.81,17,"DT")
2960918
"^DD",727.81,727.81,33,0)
RACE^F^^0;34^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,33,.1)
Race
"^DD",727.81,727.81,33,3)
Enter race ABBREVIATION for this patient.
"^DD",727.81,727.81,33,21,0)
^.001^1^1^3150612^^^^
"^DD",727.81,727.81,33,21,1,0)
Race ABBREVIATION for this patient.
"^DD",727.81,727.81,33,23,0)
^^3^3^3150612^
"^DD",727.81,727.81,33,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.81,727.81,33,23,2,0)
(#4), RACE data is shown as the ABBREVIATION field (#2) of the RACE file
"^DD",727.81,727.81,33,23,3,0)
(#10) entry pointed to by the RACE field (#.06) in the PATIENT file (#2).
"^DD",727.81,727.81,33,"DT")
2961015
"^DD",727.81,727.81,54,0)
DOM,PRRTP AND SAARTP INDICATOR^S^P:GEN. PRRTP;T:PTSD PRRTP;S:DOM. PRRTP;H:HOMELESS CWT/TR;A:SA CWT/TR;D:DOMICILIARY;B:PTSD CWT/TR;C:GEN. CET/TR;^1;21^Q
"^DD",727.81,727.81,54,3)
Enter the indicator associated with the treating specialty assigned to this record.
"^DD",727.81,727.81,54,21,0)
^.001^2^2^3150612^^^^
"^DD",727.81,727.81,54,21,1,0)
Indicates if the patient is admitted to either a RRTP, PRRTP, or SARRTP 
"^DD",727.81,727.81,54,21,2,0)
at the time care is provided.
"^DD",727.81,727.81,54,23,0)
^^5^5^3150612^
"^DD",727.81,727.81,54,23,1,0)
If the patient's treating specialty exists in the DSS TREATING SPECIALTY
"^DD",727.81,727.81,54,23,2,0)
TRANSLATION file (#727.831), data is derived from the DOM/PRRTP/SARRTP
"^DD",727.81,727.81,54,23,3,0)
CODE field (#2) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831).
"^DD",727.81,727.81,54,23,4,0)
 
"^DD",727.81,727.81,54,23,5,0)
Otherwise, the value is null.
"^DD",727.81,727.81,54,"DT")
3120604
"^DD",727.81,727.81,56,0)
ENROLLMENT CATEGORY^F^^1;23^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,56,3)
Answer must be 1 character in length.
"^DD",727.81,727.81,56,21,0)
^.001^1^1^3150612^^^^
"^DD",727.81,727.81,56,21,1,0)
Patient's enrollment category.
"^DD",727.81,727.81,56,23,0)
^^2^2^3150612^
"^DD",727.81,727.81,56,23,1,0)
ENROLLMENT CATEGORY is derived from the standard call $$CATEGORY^DGENA4
"^DD",727.81,727.81,56,23,2,0)
using the patient's DFN and the ENROLLMENT STATUS field (#57).
"^DD",727.81,727.81,56,"DT")
3000614
"^DD",727.81,727.81,61,0)
OBSERVATION PATIENT INDICATOR^S^NO:NO;YES:YES;^1;28^Q
"^DD",727.81,727.81,61,3)
Enter observation patient status for this record.
"^DD",727.81,727.81,61,21,0)
^.001^1^1^3150709^^^^
"^DD",727.81,727.81,61,21,1,0)
Indicates if patient is considered to be an observation patient.
"^DD",727.81,727.81,61,23,0)
^^12^12^3150709^
"^DD",727.81,727.81,61,23,1,0)
Data (YES, NO) is retrieved from API call $$OBSPAT^ECXUTL4:
"^DD",727.81,727.81,61,23,2,0)
 
"^DD",727.81,727.81,61,23,3,0)
If the patient's treating specialty exists in the DSS TREATING SPECIALTY
"^DD",727.81,727.81,61,23,4,0)
TRANSLATION file (#727.831), data is derived from the OBSERVATION PAT
"^DD",727.81,727.81,61,23,5,0)
INDICATOR field (#4) of the DSS TREATING SPECIALTY TRANSLATION file 
"^DD",727.81,727.81,61,23,6,0)
(#727.831).
"^DD",727.81,727.81,61,23,7,0)
 
"^DD",727.81,727.81,61,23,8,0)
If patient is outpatient and treating specialty not in file, AND Feeder
"^DD",727.81,727.81,61,23,9,0)
Key (CLI) or DSS ID (MTL,IVP,ECQ,NOS,SUR) is 290-297, Observation
"^DD",727.81,727.81,61,23,10,0)
Patient Ind=YES.  Else, Observation Patient Ind=NO.
"^DD",727.81,727.81,61,23,11,0)
 
"^DD",727.81,727.81,61,23,12,0)
Otherwise, Observation Patient Ind=NO.
"^DD",727.81,727.81,61,"DT")
3120604
"^DD",727.81,727.81,70,0)
HEAD & NECK CANCER INDICATOR^S^Y:YES;N:NO;^1;37^Q
"^DD",727.81,727.81,70,.1)
Head and Neck Cancer Indicator
"^DD",727.81,727.81,70,3)
Enter the Head & Neck Cancer Indicator for the patient.
"^DD",727.81,727.81,70,21,0)
^.001^1^1^3150612^^
"^DD",727.81,727.81,70,21,1,0)
Identifies whether treatment was for head and/or neck cancer.
"^DD",727.81,727.81,70,23,0)
^^3^3^3150612^
"^DD",727.81,727.81,70,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.81,727.81,70,23,2,0)
(#4), a call is made to $$GETCUR^DGNTAPI to retrieve the HEAD/NECK 
"^DD",727.81,727.81,70,23,3,0)
CA DX field (#2.01) of the NOSE AND THROAT RADIUM HISTORY file (#28.11).
"^DD",727.81,727.81,70,"DT")
3020828
"^DD",727.81,727.81,75,0)
USER ENROLLEE^F^^1;42^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,75,3)
Answer must be 1 character in length.
"^DD",727.81,727.81,75,21,0)
^.001^4^4^3150612^^^^
"^DD",727.81,727.81,75,21,1,0)
User enrollee is determined by checking the Patient Enrollment file 
"^DD",727.81,727.81,75,21,2,0)
27.11, when a user has a current or future fiscal year in the VistA User 
"^DD",727.81,727.81,75,21,3,0)
Enrollee Status field set value to 'U' and Null if no date or a past 
"^DD",727.81,727.81,75,21,4,0)
year's value is contained. 
"^DD",727.81,727.81,75,23,0)
^^5^5^3150612^
"^DD",727.81,727.81,75,23,1,0)
User enrollee is determined by checking the PATIENT ENROLLMENT file 
"^DD",727.81,727.81,75,23,2,0)
(#27.11).  When a user has a current or future fiscal year in the 
"^DD",727.81,727.81,75,23,3,0)
VistA ENROLLMENT STATUS field (#.04) the value is set to 'U' and Null if
"^DD",727.81,727.81,75,23,4,0)
no date or a past year's value is contained. Determined by the use of an
"^DD",727.81,727.81,75,23,5,0)
API:  $$UESTAT^EASUERwhere the Patient Identifier (DFN) is passed in.
"^DD",727.81,727.81,75,"DT")
3040301
"^DD",727.81,727.81,98,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^2;23^Q
"^DD",727.81,727.81,98,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.81,727.81,98,21,0)
^.001^6^6^3150612^^
"^DD",727.81,727.81,98,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.81,727.81,98,21,2,0)
Care Center) Reconciliation.
"^DD",727.81,727.81,98,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.81,727.81,98,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.81,727.81,98,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.81,727.81,98,21,6,0)
pays for.
"^DD",727.81,727.81,98,23,0)
^^7^7^3150612^
"^DD",727.81,727.81,98,23,1,0)
If the VistA Patient Type Code (TYPE field (#391) of the Patient file (#2)
"^DD",727.81,727.81,98,23,2,0)
) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.81,727.81,98,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES field (#361)
"^DD",727.81,727.81,98,23,4,0)
of the PATIENT file (#2)), which points to locally modifiable ELIGIBILITY
"^DD",727.81,727.81,98,23,5,0)
CODE file (#8) should be evaluated. If the value in the
"^DD",727.81,727.81,98,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.81,727.81,98,23,7,0)
the value should be placed in this field.
"^DD",727.81,727.81,98,"DT")
3100903
"^DD",727.81,727.81,105,0)
REMARKS^S^C:CHOICE;^2;30^Q
"^DD",727.81,727.81,105,3)
Indicate if prescription is filled via the choice program.
"^DD",727.81,727.81,105,21,0)
^.001^2^2^3150612^^^^
"^DD",727.81,727.81,105,21,1,0)
This field is set based on whether the prescription is being filled
"^DD",727.81,727.81,105,21,2,0)
by the VA as part of the Veteran's Choice program.
"^DD",727.81,727.81,105,23,0)
^.001^4^4^3150612^^^
"^DD",727.81,727.81,105,23,1,0)
Using the RX ORDER NUMBER field (#83) of this file, the REMARKS field 
"^DD",727.81,727.81,105,23,2,0)
(#12) of the PRESCRIPTION file (#52) is retrieved.  A check is then made 
"^DD",727.81,727.81,105,23,3,0)
to see if the remarks contain the word "choice", which indicates that the 
"^DD",727.81,727.81,105,23,4,0)
prescription was filled as part of the Veteran's Choice program.
"^DD",727.81,727.81,105,"DT")
3150421
"^DD",727.811,727.811,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.811,727.811,4,.1)
Patient No. - DFN
"^DD",727.811,727.811,4,3)
Enter the name of the patient for this extract record.
"^DD",727.811,727.811,4,21,0)
^.001^1^1^3150616^^^^
"^DD",727.811,727.811,4,21,1,0)
An identifying number for the patient at the local site.
"^DD",727.811,727.811,4,23,0)
^^3^3^3150616^
"^DD",727.811,727.811,4,23,1,0)
Derived from the PATIENT field (#.01) in the SURGERY file (#130). 
"^DD",727.811,727.811,4,23,2,0)
PATIENT NO. - DFN is a pointer to the NAME field (#.01) of the PATIENT 
"^DD",727.811,727.811,4,23,3,0)
file (#2). This data represents the patient DFN.
"^DD",727.811,727.811,4,"DT")
2961018
"^DD",727.811,727.811,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;^0;8^Q
"^DD",727.811,727.811,7,.1)
In Out Patient Indicator
"^DD",727.811,727.811,7,3)
Enter the patient's status for this extract entry.
"^DD",727.811,727.811,7,21,0)
^.001^2^2^3150616^^^^
"^DD",727.811,727.811,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for
"^DD",727.811,727.811,7,21,2,0)
this extract.
"^DD",727.811,727.811,7,23,0)
^^10^10^3150616^
"^DD",727.811,727.811,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.811,727.811,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine 
"^DD",727.811,727.811,7,23,3,0)
inpatient/outpatient status.  If the patient is an outpatient, processing 
"^DD",727.811,727.811,7,23,4,0)
stops and the field is set to O.   If the patient is an inpatient then 
"^DD",727.811,727.811,7,23,5,0)
$$INOUTP^ECXUTL4 is called to look at the treating specialty.  If the 
"^DD",727.811,727.811,7,23,6,0)
patient's treating specialty exists in the DSS TREATING SPECIALTY 
"^DD",727.811,727.811,7,23,7,0)
TRANSLATION file (#727.831) then the value of the INPAT/OUTPAT CODE field 
"^DD",727.811,727.811,7,23,8,0)
(#5) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831) is used.  
"^DD",727.811,727.811,7,23,9,0)
If the treating specialty is not found in the DSS TREATING SPECIALTY 
"^DD",727.811,727.811,7,23,10,0)
TRANSLATION file (#727.831) then the indicator is set to I.
"^DD",727.811,727.811,7,"DT")
3120507
"^DD",727.811,727.811,20,0)
OPERATION TIME^F^^0;21^K:$L(X)>4!($L(X)<1) X
"^DD",727.811,727.811,20,.1)
Operation Time
"^DD",727.811,727.811,20,3)
Your answer must be 1 to 4 characters in length.
"^DD",727.811,727.811,20,21,0)
^.001^1^1^3150616^^^^
"^DD",727.811,727.811,20,21,1,0)
The time, in 15 minute increments, of the principal operative procedure.
"^DD",727.811,727.811,20,23,0)
^^5^5^3150616^
"^DD",727.811,727.811,20,23,1,0)
Derived from the TIME OPERATION ENDS field (#.23) minus the TIME OPERATION
"^DD",727.811,727.811,20,23,2,0)
BEGAN field (#.22) in the SURGERY file (#130) for the surgical case. If
"^DD",727.811,727.811,20,23,3,0)
the case is a non-OR surgical precede, OPERATION TIME is derived from the
"^DD",727.811,727.811,20,23,4,0)
TIME PROCEDURE ENDED field (#122) minus the TIME PROCEDURE BEGAN field
"^DD",727.811,727.811,20,23,5,0)
(#121) in the SURGERY file (#130).
"^DD",727.811,727.811,20,"DT")
2961002
"^DD",727.811,727.811,27,0)
CANCELLED^S^C:C;^0;28^Q
"^DD",727.811,727.811,27,.1)
Cancelled
"^DD",727.811,727.811,27,3)
Enter C if the procedure was cancelled.
"^DD",727.811,727.811,27,21,0)
^.001^2^2^3150616^^^^
"^DD",727.811,727.811,27,21,1,0)
If set, this field indicates that the surgical procedure was cancelled 
"^DD",727.811,727.811,27,21,2,0)
after being started.
"^DD",727.811,727.811,27,23,0)
^^7^7^3150616^
"^DD",727.811,727.811,27,23,1,0)
If cancellation information exists (^SRF(D0,30)) or
"^DD",727.811,727.811,27,23,2,0)
for a regular procedure (not a non-OR procedure ^SRF(D0,NON)), 
"^DD",727.811,727.811,27,23,3,0)
there is no data in the TIME PAT IN OR field (#.205),
"^DD",727.811,727.811,27,23,4,0)
then the extract record is not sent as per 2/7/94 decision.
"^DD",727.811,727.811,27,23,5,0)
 
"^DD",727.811,727.811,27,23,6,0)
This field is being retained for backward compatibility; essentially
"^DD",727.811,727.811,27,23,7,0)
it serves as a placeholder in the data line.
"^DD",727.811,727.811,27,"DT")
2970911
"^DD",727.811,727.811,34,0)
PRIMARY CARE TEAM^F^^0;35^K:$L(X)>4!($L(X)<1) X
"^DD",727.811,727.811,34,.1)
Primary Care Team
"^DD",727.811,727.811,34,3)
Enter primary care team assigned to this patient.
"^DD",727.811,727.811,34,21,0)
^.001^1^1^3150618^^^^
"^DD",727.811,727.811,34,21,1,0)
The primary care team assigned to this patient.
"^DD",727.811,727.811,34,23,0)
^^6^6^3150618^
"^DD",727.811,727.811,34,23,1,0)
Using the DATE OF OPERATION field (#.09) from the SURGERY file (#130) 
"^DD",727.811,727.811,34,23,2,0)
and the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4) 
"^DD",727.811,727.811,34,23,3,0)
in the SURGERY EXTRACT file (#727.811), a call is made to the Scheduling 
"^DD",727.811,727.811,34,23,4,0)
API, OUTPTTM^SDUTL3. The API returns the team's internal entry number 
"^DD",727.811,727.811,34,23,5,0)
and name from the TEAM file (#404.51). Only the pointer (IEN) to the TEAM 
"^DD",727.811,727.811,34,23,6,0)
file (#404.51) is transmitted.
"^DD",727.811,727.811,34,"DT")
2961031
"^DD",727.811,727.811,47,0)
CPT CODE QUANTITY MODIFIERS^F^^1;11^K:$L(X)>17!($L(X)<1) X
"^DD",727.811,727.811,47,2)
S Y(0)=Y S Y=$$CPTOUT^ECXUTL3(Y)
"^DD",727.811,727.811,47,2.1)
S Y=$$CPTOUT^ECXUTL3(Y)
"^DD",727.811,727.811,47,3)
Answer must be 1-17 characters in length.
"^DD",727.811,727.811,47,21,0)
^.001^3^3^3150616^^^^
"^DD",727.811,727.811,47,21,1,0)
The 5-character CPT Code of the procedure performed, the Quantity, or 
"^DD",727.811,727.811,47,21,2,0)
how many times the unique code appears in the record, and up to 5 
"^DD",727.811,727.811,47,21,3,0)
two-character CPT modifiers.
"^DD",727.811,727.811,47,23,0)
^^4^4^3150616^
"^DD",727.811,727.811,47,23,1,0)
This field is derived from a call to CPT^ECXUTL3 using the PRINCIPAL
"^DD",727.811,727.811,47,23,2,0)
PROCEDURE CODE field (#.02) of the SURGERY PROCEDURE/DIAGNOSIS CODE file
"^DD",727.811,727.811,47,23,3,0)
(#136) and the PRIN. PROCEDURE CPT MODIFIER field (#28) of the SURGERY
"^DD",727.811,727.811,47,23,4,0)
file (#130) as input.
"^DD",727.811,727.811,47,"DT")
3000620
"^DD",727.811,727.811,48,0)
DOM,PRRTP AND SAARTP INDICATOR^S^P:GEN. PRRTP;T:PTSD PRRTP;S:DOM. PRRTP;H:HOMELESS CWT/TR;A:SA CWT/TR;D:DOMICILIARY;B:PTSD CWT/TR;C:GEN. CET/TR;^1;12^Q
"^DD",727.811,727.811,48,3)
Enter the indicator associated with the treating specialty assigned to this record.
"^DD",727.811,727.811,48,21,0)
^.001^2^2^3150616^^^^
"^DD",727.811,727.811,48,21,1,0)
Indicates if the patient is admitted to either a RRTP, PRRTP or SARRTP at 
"^DD",727.811,727.811,48,21,2,0)
the time care is provided.
"^DD",727.811,727.811,48,23,0)
^^5^5^3150616^
"^DD",727.811,727.811,48,23,1,0)
If the patient's treating specialty exists in the DSS TREATING SPECIALTY
"^DD",727.811,727.811,48,23,2,0)
TRANSLATION file (#727.831), data is derived from the DOM/PRRTP/SARRTP
"^DD",727.811,727.811,48,23,3,0)
CODE field (#2) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831).
"^DD",727.811,727.811,48,23,4,0)
 
"^DD",727.811,727.811,48,23,5,0)
Otherwise, the value is null.
"^DD",727.811,727.811,48,"DT")
3120508
"^DD",727.811,727.811,49,0)
ENROLLMENT CATEGORY^F^^1;13^K:$L(X)>1!($L(X)<1) X
"^DD",727.811,727.811,49,3)
Answer must be 1 character in length.
"^DD",727.811,727.811,49,21,0)
^.001^1^1^3150616^^^^
"^DD",727.811,727.811,49,21,1,0)
Patient's enrollment category.
"^DD",727.811,727.811,49,23,0)
^^2^2^3150616^
"^DD",727.811,727.811,49,23,1,0)
ENROLLMENT CATEGORY is derived from the standard call $$CATEGORY^DGENA4
"^DD",727.811,727.811,49,23,2,0)
using patient DFN and the ENROLLMENT STATUS field (#50).
"^DD",727.811,727.811,49,"DT")
3000620
"^DD",727.811,727.811,54,0)
OBSERVATION PATIENT INDICATOR^S^NO:NO;YES:YES;^1;18^Q
"^DD",727.811,727.811,54,3)
Enter observation patient status for this record.
"^DD",727.811,727.811,54,21,0)
^.001^1^1^3150709^^^^
"^DD",727.811,727.811,54,21,1,0)
Indicates if patient is considered to be an observation patient.
"^DD",727.811,727.811,54,23,0)
^^12^12^3150709^
"^DD",727.811,727.811,54,23,1,0)
Data (YES, NO) is retrieved from API call $$OBSPAT^ECXUTL4:
"^DD",727.811,727.811,54,23,2,0)
 
"^DD",727.811,727.811,54,23,3,0)
If the patient's treating specialty exists in the DSS TREATING SPECIALTY
"^DD",727.811,727.811,54,23,4,0)
TRANSLATION file (#727.831), data is derived from the OBSERVATION PAT
"^DD",727.811,727.811,54,23,5,0)
INDICATOR field (#4) of the DSS TREATING SPECIALTY TRANSLATION file
"^DD",727.811,727.811,54,23,6,0)
(#727.831).
"^DD",727.811,727.811,54,23,7,0)
 
"^DD",727.811,727.811,54,23,8,0)
If patient is outpatient and treating specialty not in file, AND Feeder
"^DD",727.811,727.811,54,23,9,0)
Key (CLI) or DSS ID (MTL,IVP,ECQ,NOS,SUR) is 290-297, Observation
"^DD",727.811,727.811,54,23,10,0)
Patient Ind=YES.  Else, Observation Patient Ind=NO.
"^DD",727.811,727.811,54,23,11,0)
 
"^DD",727.811,727.811,54,23,12,0)
Otherwise, Observation Patient Ind=NO.
"^DD",727.811,727.811,54,"DT")
3120508
"^DD",727.811,727.811,64,0)
USER ENROLLEE^S^U:USER ENROLLED;^1;28^Q
"^DD",727.811,727.811,64,3)
Enter patient's current enrollment status.
"^DD",727.811,727.811,64,21,0)
^.001^2^2^3150616^^^^
"^DD",727.811,727.811,64,21,1,0)
Indicates whether a Veteran has User Enrollee status for the current or 
"^DD",727.811,727.811,64,21,2,0)
future fiscal year.
"^DD",727.811,727.811,64,23,0)
^^5^5^3150616^
"^DD",727.811,727.811,64,23,1,0)
User enrollee is determined by checking the PATIENT ENROLLMENT 
"^DD",727.811,727.811,64,23,2,0)
file (#27.11). When a user has a current or future fiscal year in the
"^DD",727.811,727.811,64,23,3,0)
ENROLLMENT STATUS field (#.04), the value is set to 'U' and is null if no
"^DD",727.811,727.811,64,23,4,0)
date or a past year's value is contained. Determined by the use of an API:
"^DD",727.811,727.811,64,23,5,0)
$$UESTAT^EASUSER where the Patient Identifier (DFN) is passed in.
"^DD",727.811,727.811,64,"DT")
3120508
"^DD",727.811,727.811,73,0)
SURGEON PERSON CLASS^F^^1;37^K:$L(X)>7!($L(X)<1) X
"^DD",727.811,727.811,73,3)
Answer must be 1-7 characters in length.
"^DD",727.811,727.811,73,21,0)
^.001^3^3^3150618^^^^
"^DD",727.811,727.811,73,21,1,0)
The VA Code of the Person Class of the Surgeon associated with this
"^DD",727.811,727.811,73,21,2,0)
record. The VA Code is always of the form "V"_six numeric digits; exactly
"^DD",727.811,727.811,73,21,3,0)
7.
"^DD",727.811,727.811,73,23,0)
^^3^3^3150618^
"^DD",727.811,727.811,73,23,1,0)
Active Person Class is determined by $$GET^XUA4A72(PERS,DATE), where PERS
"^DD",727.811,727.811,73,23,2,0)
is the IEN from the NEW PERSON file (#200). It returns the VA CODE field
"^DD",727.811,727.811,73,23,3,0)
(#5) from the PERSON CLASS sub-file (#8932.1).
"^DD",727.811,727.811,73,"DT")
3050405
"^DD",727.811,727.811,74,0)
ATTENDING SURGEON PC^F^^2;1^K:$L(X)>7!($L(X)<7) X
"^DD",727.811,727.811,74,3)
Answer must be 7 characters in length.
"^DD",727.811,727.811,74,21,0)
^.001^3^3^3150618^^^^
"^DD",727.811,727.811,74,21,1,0)
The VA Code of the Person Class of the Attending Surgeon associated with
"^DD",727.811,727.811,74,21,2,0)
this record. The VA Code is always of the form "V"_six numeric digits;
"^DD",727.811,727.811,74,21,3,0)
exactly 7.
"^DD",727.811,727.811,74,23,0)
^^3^3^3150618^
"^DD",727.811,727.811,74,23,1,0)
Active Person Class is determined by $$GET^XUA4A72(PERS,DATE), where PERS 
"^DD",727.811,727.811,74,23,2,0)
is the IEN from the NEW PERSON file (#200). It returns the VA CODE field
"^DD",727.811,727.811,74,23,3,0)
(#5) from the PERSON CLASS sub-file (#8932.1).
"^DD",727.811,727.811,74,"DT")
3050426
"^DD",727.811,727.811,75,0)
ANESTHESIA SUPERVISOR PC^F^^2;2^K:$L(X)>7!($L(X)<1) X
"^DD",727.811,727.811,75,3)
Answer must be 1-7 characters in length.
"^DD",727.811,727.811,75,21,0)
^.001^3^3^3150618^^^^
"^DD",727.811,727.811,75,21,1,0)
The VA Code of the Person Class of the Anesthesia Supervisor associated
"^DD",727.811,727.811,75,21,2,0)
with this record. The VA Code is always of the form "V"_six numeric
"^DD",727.811,727.811,75,21,3,0)
digits; exactly 7.
"^DD",727.811,727.811,75,23,0)
^^3^3^3150618^
"^DD",727.811,727.811,75,23,1,0)
Active Person Class is determined by $$GET^XUA4A72(PERS,DATE), where PERS 
"^DD",727.811,727.811,75,23,2,0)
is the IEN from the NEW PERSON file (#200). It returns the VA CODE field
"^DD",727.811,727.811,75,23,3,0)
(#5) from the PERSON CLASS sub-file (#8932.1).
"^DD",727.811,727.811,75,"DT")
3050405
"^DD",727.811,727.811,76,0)
PRINCIPAL ANESTHETIST PC^F^^2;3^K:$L(X)>7!($L(X)<7) X
"^DD",727.811,727.811,76,.1)

"^DD",727.811,727.811,76,3)
Answer must be 7 characters in length.
"^DD",727.811,727.811,76,21,0)
^.001^3^3^3150618^^^
"^DD",727.811,727.811,76,21,1,0)
The field will hold the VA Code associated with the active Person Class 
"^DD",727.811,727.811,76,21,2,0)
of the Principal Anesthetist. The VA Code is always of the form "V"_six 
"^DD",727.811,727.811,76,21,3,0)
numeric digits; exactly 7.
"^DD",727.811,727.811,76,23,0)
^^3^3^3150618^
"^DD",727.811,727.811,76,23,1,0)
Active Person Class is determined by $$GET^XUA4A72(PERS,DATE), where PERS 
"^DD",727.811,727.811,76,23,2,0)
is the IEN from the NEW PERSON file (#200). It returns the VA CODE field
"^DD",727.811,727.811,76,23,3,0)
(#5) from the PERSON CLASS sub-file (#8932.1).
"^DD",727.811,727.811,76,"DT")
3050929
"^DD",727.811,727.811,80,0)
OEF/OIF^F^^2;7^K:$L(X)>9!($L(X)<1) X
"^DD",727.811,727.811,80,3)
Answer must be 1-9 characters in length.
"^DD",727.811,727.811,80,21,0)
^.001^3^3^3150616^^^
"^DD",727.811,727.811,80,21,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.811,727.811,80,21,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.811,727.811,80,21,3,0)
reflects the OEF or OIF where this patient was in combat.
"^DD",727.811,727.811,80,23,0)
^^12^12^3150616^
"^DD",727.811,727.811,80,23,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.811,727.811,80,23,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.811,727.811,80,23,3,0)
reflects the OEF or OIF where this patient was in combat. The value of 
"^DD",727.811,727.811,80,23,4,0)
this field is derived from the LOCATION OF SERVICE field (#.01) from 
"^DD",727.811,727.811,80,23,5,0)
SERVICE [OEF OR OIF] sub-file (#2.3215) of field (#.3215) located in the 
"^DD",727.811,727.811,80,23,6,0)
PATIENT file (#2).  DSS will capture once, each location where the 
"^DD",727.811,727.811,80,23,7,0)
veteran served. In order to accommodate multiple locations, the values 
"^DD",727.811,727.811,80,23,8,0)
for this field are concatenated into this 9-character field. Possible 
"^DD",727.811,727.811,80,23,9,0)
field values are one or more combinations of the following: 
"^DD",727.811,727.811,80,23,10,0)
OEF =  Operation Enduring Freedom
"^DD",727.811,727.811,80,23,11,0)
OIF  =  Operation Iraqi Freedom
"^DD",727.811,727.811,80,23,12,0)
UNK =  Unknown OEF/OIF
"^DD",727.811,727.811,80,"DT")
3070502
"^DD",727.811,727.811,107,0)
FIRST ASST^F^^3;1^K:$L(X)>11!($L(X)<1) X
"^DD",727.811,727.811,107,3)
Enter the name of the person assisting the surgeon during the major portion of the principal operation.
"^DD",727.811,727.811,107,21,0)
^.001^2^2^3150616^^^
"^DD",727.811,727.811,107,21,1,0)
This is the name of the person assisting the surgeon during the operative
"^DD",727.811,727.811,107,21,2,0)
procedure.
"^DD",727.811,727.811,107,23,0)
^^3^3^3150616^
"^DD",727.811,727.811,107,23,1,0)
Derived from the FIRST ASST field (#.15) in the SURGERY file (#130) for 
"^DD",727.811,727.811,107,23,2,0)
the surgical case.  It is a pointer to the NEW PERSON file (#200).  The 
"^DD",727.811,727.811,107,23,3,0)
data is stored as "2"_pointer value.
"^DD",727.811,727.811,107,"DT")
3100222
"^DD",727.811,727.811,110,0)
SECOND ASST^F^^3;4^K:$L(X)>11!($L(X)<1) X
"^DD",727.811,727.811,110,3)
Enter the name of the person assisting the surgeon.
"^DD",727.811,727.811,110,21,0)
^.001^2^2^3150616^^^
"^DD",727.811,727.811,110,21,1,0)
This is the name of the second person assisting the surgeon during the
"^DD",727.811,727.811,110,21,2,0)
operative procedure.
"^DD",727.811,727.811,110,23,0)
^^3^3^3150616^
"^DD",727.811,727.811,110,23,1,0)
Derived from the SECOND ASST field (#.16) in the SURGERY file (#130) for
"^DD",727.811,727.811,110,23,2,0)
the surgical case.  It is a pointer to the NEW PERSON file (#200). The
"^DD",727.811,727.811,110,23,3,0)
data is stored as "2"_pointer value.
"^DD",727.811,727.811,110,"DT")
3100222
"^DD",727.811,727.811,120,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^3;14^Q
"^DD",727.811,727.811,120,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.811,727.811,120,21,0)
^.001^6^6^3150616^^^^
"^DD",727.811,727.811,120,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.811,727.811,120,21,2,0)
Care Center) Reconciliation.
"^DD",727.811,727.811,120,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.811,727.811,120,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.811,727.811,120,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.811,727.811,120,21,6,0)
pays for.
"^DD",727.811,727.811,120,23,0)
^^7^7^3150616^
"^DD",727.811,727.811,120,23,1,0)
If the VistA Patient Type Code (TYPE field (#391) of the Patient file (#2)
"^DD",727.811,727.811,120,23,2,0)
) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.811,727.811,120,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES field (#361) 
"^DD",727.811,727.811,120,23,4,0)
of the PATIENT file (#2)), which points to locally modifiable ELIGIBILITY
"^DD",727.811,727.811,120,23,5,0)
CODE file (#8) should be evaluated. If the value in the
"^DD",727.811,727.811,120,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.811,727.811,120,23,7,0)
the value should be placed in this field.
"^DD",727.811,727.811,120,"DT")
3100903
"^DD",727.811,727.811,126,0)
PRINCIPLE POSTOP ICD-10 CODE^F^^3;20^K:$L(X)>8!($L(X)<1) X
"^DD",727.811,727.811,126,3)
Enter the principle ICD-10 code for this surgical procedure (1-8 characters).
"^DD",727.811,727.811,126,21,0)
^.001^1^1^3150616^^^^
"^DD",727.811,727.811,126,21,1,0)
The post-op diagnosis for the Principle Procedure.
"^DD",727.811,727.811,126,23,0)
^.001^3^3^3150616^^^^
"^DD",727.811,727.811,126,23,1,0)
PRINCIPLE POSTOP ICD-10 CODE is derived from the CODE NUMBER field (#.01)
"^DD",727.811,727.811,126,23,2,0)
of the ICD DIAGNOSIS file (#80) as pointed to by the PRIN POSTOP DIAGNOSIS
"^DD",727.811,727.811,126,23,3,0)
CODE field (#.03) of the SURGERY PROCEDURE/DIAGNOSIS CODES file (#136).
"^DD",727.811,727.811,126,"DT")
3130309
"^DD",727.811,727.811,127,0)
OTHER POSTOP ICD-10 CODE #1^F^^3;21^K:$L(X)>8!($L(X)<1) X
"^DD",727.811,727.811,127,3)
Enter the secondary ICD-10 code for this surgical procedure (1-8 characters).
"^DD",727.811,727.811,127,21,0)
^.001^1^1^3150616^^^^
"^DD",727.811,727.811,127,21,1,0)
The first associated diagnosis for the Principle Procedure.
"^DD",727.811,727.811,127,23,0)
^.001^4^4^3150616^^^
"^DD",727.811,727.811,127,23,1,0)
OTHER POSTOP ICD-10 CODE #1 is derived from the CODE NUMBER field (#.01)
"^DD",727.811,727.811,127,23,2,0)
of the ICD DIAGNOSIS file (#80) as pointed to by the first entry in the
"^DD",727.811,727.811,127,23,3,0)
OTHER POSTOP DIAGNOSIS field (#.01) of the OTHER POST DIAGNOSIS multiple
"^DD",727.811,727.811,127,23,4,0)
(#4) of the SURGERY PROCEDURE/DIAGNOSIS CODES file (#136).
"^DD",727.811,727.811,127,"DT")
3130309
"^DD",727.811,727.811,128,0)
OTHER POSTOP ICD-10 CODE #2^F^^3;22^K:$L(X)>8!($L(X)<1) X
"^DD",727.811,727.811,128,3)
Enter the secondary ICD-10 code for this surgical procedure (1-8 characters).
"^DD",727.811,727.811,128,21,0)
^.001^1^1^3150616^^^^
"^DD",727.811,727.811,128,21,1,0)
The second associated diagnosis for the Principle Procedure.
"^DD",727.811,727.811,128,23,0)
^.001^4^4^3150616^^^
"^DD",727.811,727.811,128,23,1,0)
OTHER POSTOP ICD-10 CODE #2 is derived from the CODE NUMBER field (#.01)
"^DD",727.811,727.811,128,23,2,0)
of the ICD DIAGNOSIS file (#80) as pointed to by the second entry in the
"^DD",727.811,727.811,128,23,3,0)
OTHER POSTOP DIAGNOSIS field (#.01) of the OTHER POST DIAGNOSIS multiple
"^DD",727.811,727.811,128,23,4,0)
(#4) of the SURGERY PROCEDURE/DIAGNOSIS CODES file (#136).
"^DD",727.811,727.811,128,"DT")
3130309
"^DD",727.811,727.811,129,0)
OTHER POSTOP ICD-10 CODE #3^F^^3;23^K:$L(X)>8!($L(X)<1) X
"^DD",727.811,727.811,129,3)
Enter the secondary ICD-10 code for this surgical procedure (1-8 characters).
"^DD",727.811,727.811,129,21,0)
^.001^1^1^3150616^^^^
"^DD",727.811,727.811,129,21,1,0)
The third associated diagnosis for the Principle Procedure.
"^DD",727.811,727.811,129,23,0)
^.001^4^4^3150616^^^
"^DD",727.811,727.811,129,23,1,0)
OTHER POSTOP ICD-10 CODE #3 is derived from the CODE NUMBER field (#.01)
"^DD",727.811,727.811,129,23,2,0)
of the ICD DIAGNOSIS file (#80) as pointed to by the third entry in the
"^DD",727.811,727.811,129,23,3,0)
OTHER POSTOP DIAGNOSIS field (#.01) of the OTHER POST DIAGNOSIS multiple
"^DD",727.811,727.811,129,23,4,0)
(#4) of the SURGERY PROCEDURE/DIAGNOSIS CODES file (#136).
"^DD",727.811,727.811,129,"DT")
3130310
"^DD",727.811,727.811,130,0)
OTHER POSTOP ICD-10 CODE #4^F^^3;24^K:$L(X)>8!($L(X)<1) X
"^DD",727.811,727.811,130,3)
Enter the secondary ICD-10 code for this surgical procedure (1-8 characters).
"^DD",727.811,727.811,130,21,0)
^.001^1^1^3150616^^^^
"^DD",727.811,727.811,130,21,1,0)
The fourth associated diagnosis for the Principle Procedure.
"^DD",727.811,727.811,130,23,0)
^.001^4^4^3150616^^^
"^DD",727.811,727.811,130,23,1,0)
OTHER POSTOP ICD-10 CODE #4 is derived from the CODE NUMBER field (#.01)
"^DD",727.811,727.811,130,23,2,0)
of the ICD DIAGNOSIS file (#80) as pointed to by the fourth entry in the
"^DD",727.811,727.811,130,23,3,0)
OTHER POSTOP DIAGNOSIS field (#.01) of the OTHER POST DIAGNOSIS multiple
"^DD",727.811,727.811,130,23,4,0)
(#4) of the SURGERY PROCEDURE/DIAGNOSIS CODES file (#136).
"^DD",727.811,727.811,130,"DT")
3130310
"^DD",727.811,727.811,131,0)
OTHER POSTOP ICD-10 CODE #5^F^^3;25^K:$L(X)>8!($L(X)<1) X
"^DD",727.811,727.811,131,3)
Enter the secondary ICD-10 code for this surgical procedure (1-8 characters).
"^DD",727.811,727.811,131,21,0)
^.001^1^1^3150616^^^^
"^DD",727.811,727.811,131,21,1,0)
The fifth associated diagnosis for the Principle Procedure.
"^DD",727.811,727.811,131,23,0)
^.001^4^4^3150616^^^
"^DD",727.811,727.811,131,23,1,0)
OTHER POSTOP ICD-10 CODE #5 is derived from the CODE NUMBER field (#.01)
"^DD",727.811,727.811,131,23,2,0)
of the ICD DIAGNOSIS file (#80) as pointed to by the fifth entry in the
"^DD",727.811,727.811,131,23,3,0)
OTHER POSTOP DIAGNOSIS field (#.01) of the OTHER POST DIAGNOSIS multiple
"^DD",727.811,727.811,131,23,4,0)
(#4) of the SURGERY PROCEDURE/DIAGNOSIS CODES file (#136).
"^DD",727.811,727.811,131,"DT")
3130310
"^DD",727.813,727.813,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;^0;8^Q
"^DD",727.813,727.813,7,.1)
In Out Patient Indicator
"^DD",727.813,727.813,7,3)
Enter the patient's status at the time of the lab test.
"^DD",727.813,727.813,7,21,0)
^.001^2^2^3150617^^^^
"^DD",727.813,727.813,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this
"^DD",727.813,727.813,7,21,2,0)
extract.  
"^DD",727.813,727.813,7,23,0)
^^10^10^3150617^
"^DD",727.813,727.813,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.813,727.813,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine 
"^DD",727.813,727.813,7,23,3,0)
inpatient/outpatient status.  If the patient is an outpatient, processing 
"^DD",727.813,727.813,7,23,4,0)
stops and the field is set to O.   If the patient is an inpatient then 
"^DD",727.813,727.813,7,23,5,0)
$$INOUTP^ECXUTL4 is called to look at the treating specialty.  If the 
"^DD",727.813,727.813,7,23,6,0)
patient's treating specialty exists in the DSS TREATING SPECIALTY 
"^DD",727.813,727.813,7,23,7,0)
TRANSLATION file (#727.831) then the value of the INPAT/OUTPAT CODE field 
"^DD",727.813,727.813,7,23,8,0)
(#5) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831) is used.  
"^DD",727.813,727.813,7,23,9,0)
If the treating specialty is not found in the DSS TREATING SPECIALTY 
"^DD",727.813,727.813,7,23,10,0)
TRANSLATION file (#727.831) then the indicator is set to I.
"^DD",727.813,727.813,7,"DT")
3120309
"^DD",727.813,727.813,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.813,727.813,8,.1)
Day
"^DD",727.813,727.813,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.813,727.813,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.813,727.813,8,3)
Answer must be 8 characters in length.
"^DD",727.813,727.813,8,21,0)
^.001^1^1^3150617^^
"^DD",727.813,727.813,8,21,1,0)
Date the last test/specimen was collected.
"^DD",727.813,727.813,8,23,0)
^^14^14^3150617^
"^DD",727.813,727.813,8,23,1,0)
Data is inserted in this field by Laboratory routine ECXLABN and is
"^DD",727.813,727.813,8,23,2,0)
derived from the DATE/TIME COLLECTED field (#12) of the WKLD LOG file
"^DD",727.813,727.813,8,23,3,0)
(#64.03).
"^DD",727.813,727.813,8,23,4,0)
 
"^DD",727.813,727.813,8,23,5,0)
The value in the DATE/TIME COLLECTED field (#12) in the WKLD LOG file
"^DD",727.813,727.813,8,23,6,0)
(#64.03) originated from routine LRCAPDSS and is derived from the INVERSE
"^DD",727.813,727.813,8,23,7,0)
DATE COMPLETED field (#21) of the ACCESSION WKLD CODE TIME sub-file
"^DD",727.813,727.813,8,23,8,0)
(#64.1111).
"^DD",727.813,727.813,8,23,9,0)
 
"^DD",727.813,727.813,8,23,10,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.813,727.813,8,23,11,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.813,727.813,8,23,12,0)
then a default is used.  The default date value is the value of the 
"^DD",727.813,727.813,8,23,13,0)
YEAR MONTH field (#1) of this file concatenated with "01" for the day (DD)
"^DD",727.813,727.813,8,23,14,0)
portion.
"^DD",727.813,727.813,8,"DT")
2970924
"^DD",727.813,727.813,18,0)
TIME^FO^^0;19^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.813,727.813,18,.1)
Time
"^DD",727.813,727.813,18,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,1)
"^DD",727.813,727.813,18,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,1)
"^DD",727.813,727.813,18,3)
Answer must be 6 characters in length.
"^DD",727.813,727.813,18,21,0)
^.001^2^2^3150617^^^^
"^DD",727.813,727.813,18,21,1,0)
A 6-character numeric string that represents the time of day
"^DD",727.813,727.813,18,21,2,0)
at which the Laboratory test was collected.
"^DD",727.813,727.813,18,23,0)
^^11^11^3150617^
"^DD",727.813,727.813,18,23,1,0)
Data is inserted in this field by Laboratory routine ECXLABN and is
"^DD",727.813,727.813,18,23,2,0)
derived from the DATE/TIME COLLECTED field (#12) of the WKLD LOG file
"^DD",727.813,727.813,18,23,3,0)
(#64.03).
"^DD",727.813,727.813,18,23,4,0)
 
"^DD",727.813,727.813,18,23,5,0)
The value in the DATE/TIME COLLECTED field (#12) in the WKLD LOG file
"^DD",727.813,727.813,18,23,6,0)
(#64.03) originated from routine LRCAPDSS and is derived from the 
"^DD",727.813,727.813,18,23,7,0)
INVERSE  DATE COMPLETED field (#21) of the ACCESSION WKLD CODE TIME
"^DD",727.813,727.813,18,23,8,0)
sub-file (#64.1111).
"^DD",727.813,727.813,18,23,9,0)
 
"^DD",727.813,727.813,18,23,10,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.813,727.813,18,23,11,0)
cannot be determined, then "000300" is used as default.
"^DD",727.813,727.813,18,"DT")
2970924
"^DD",727.813,727.813,30,0)
DOM,PRRTP AND SAARTP INDICATOR^S^P:GEN. PRRTP;T:PTSD PRRTP;S:DOM. PRRTP;H:HOMELESS CWT/TR;A:SA CWT/TR;D:DOMICILIARY;B:PTSD CWT/TR;C:GEN. CWT/TR;^1;9^Q
"^DD",727.813,727.813,30,3)
Enter the indicator associated with the treating specialty assigned to this record.
"^DD",727.813,727.813,30,21,0)
^.001^2^2^3150617^^^
"^DD",727.813,727.813,30,21,1,0)
Indicates if the patient is admitted to either a RRTP, PRRTP, or SARRTP at
"^DD",727.813,727.813,30,21,2,0)
the time care is provided.
"^DD",727.813,727.813,30,23,0)
^^5^5^3150617^
"^DD",727.813,727.813,30,23,1,0)
If the patient's treating specialty exist in the DSS TREATING SPECIALTY
"^DD",727.813,727.813,30,23,2,0)
TRANSLATION file (#727.831), data is derived from the DOM/PRRTP/SARRTP
"^DD",727.813,727.813,30,23,3,0)
CODE field (#2) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831).
"^DD",727.813,727.813,30,23,4,0)
 
"^DD",727.813,727.813,30,23,5,0)
Otherwise, the value is null.
"^DD",727.813,727.813,30,"DT")
3120314
"^DD",727.813,727.813,31,0)
OBSERVATION PATIENT INDICATOR^S^NO:NO;YES:YES;^1;10^Q
"^DD",727.813,727.813,31,3)
Enter observation patient status for this record.
"^DD",727.813,727.813,31,21,0)
^.001^1^1^3150709^^^^
"^DD",727.813,727.813,31,21,1,0)
Indicates if patient is considered to be an observation patient.
"^DD",727.813,727.813,31,23,0)
^^12^12^3150709^
"^DD",727.813,727.813,31,23,1,0)
Data (YES, NO) is retrieved from API call $$OBSPAT^ECXUTL4:
"^DD",727.813,727.813,31,23,2,0)
 
"^DD",727.813,727.813,31,23,3,0)
If the patient's treating specialty exist in the DSS TREATING SPECIALTY
"^DD",727.813,727.813,31,23,4,0)
TRANSLATION file (#727.831), data is derived from the OBSERVATION PAT
"^DD",727.813,727.813,31,23,5,0)
INDICATOR field (#4) of the DSS TREATING SPECIALTY TRANSLATION  file
"^DD",727.813,727.813,31,23,6,0)
(#727.831).
"^DD",727.813,727.813,31,23,7,0)
 
"^DD",727.813,727.813,31,23,8,0)
If patient is outpatient and treating specialty not in file, AND Feeder
"^DD",727.813,727.813,31,23,9,0)
Key (CLI) or DSS ID (MTL,IVP,ECQ,NOS,SUR) is 290-297, Observation
"^DD",727.813,727.813,31,23,10,0)
Patient Ind=YES.  Else, Observation Patient Ind=NO.
"^DD",727.813,727.813,31,23,11,0)
 
"^DD",727.813,727.813,31,23,12,0)
Otherwise, Observation Patient Ind=NO.
"^DD",727.813,727.813,31,"DT")
3120314
"^DD",727.813,727.813,33,0)
ORDERING STOP CODE^F^^1;12^K:$L(X)>3!($L(X)<3) X
"^DD",727.813,727.813,33,3)
Answer must be 3 characters in length.
"^DD",727.813,727.813,33,21,0)
^.001^1^1^3150617^^^^
"^DD",727.813,727.813,33,21,1,0)
This field contains the stop code associated with the order.
"^DD",727.813,727.813,33,23,0)
^^5^5^3150617^
"^DD",727.813,727.813,33,23,1,0)
The STOP CODE field (#1) associated with the ordering location for this
"^DD",727.813,727.813,33,23,2,0)
order as obtained from the CLINICS AND STOP CODES file (#728.44).
"^DD",727.813,727.813,33,23,3,0)
 
"^DD",727.813,727.813,33,23,4,0)
Ordering location is derived from the HOSPITAL LOCATION field (#14) of 
"^DD",727.813,727.813,33,23,5,0)
the processing WKLD LOG FILE (#64.03) of this extract.
"^DD",727.813,727.813,33,"DT")
3010509
"^DD",727.813,727.813,46,0)
DATA LOCATION^F^^2;2^K:$L(X)>12!($L(X)<4) X
"^DD",727.813,727.813,46,3)
Answer must be 4-12 characters in length.
"^DD",727.813,727.813,46,21,0)
^.001^2^2^3150617^^^^
"^DD",727.813,727.813,46,21,1,0)
The Data Location field is only populated if a test is a non-panel test  
"^DD",727.813,727.813,46,21,2,0)
and is part of the CHEM, HEM, TOX, SER, RIA, etc. area.
"^DD",727.813,727.813,46,23,0)
^^2^2^3150617^
"^DD",727.813,727.813,46,23,1,0)
This field is derived from the LOCATION (DATA NAME) field (#5) of the
"^DD",727.813,727.813,46,23,2,0)
LABORATORY file (#60).
"^DD",727.813,727.813,46,"DT")
3100308
"^DD",727.813,727.813,47,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^2;3^Q
"^DD",727.813,727.813,47,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.813,727.813,47,21,0)
^.001^6^6^3150617^^^
"^DD",727.813,727.813,47,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.813,727.813,47,21,2,0)
Care Center) Reconciliation.
"^DD",727.813,727.813,47,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.813,727.813,47,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.813,727.813,47,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.813,727.813,47,21,6,0)
pays for.
"^DD",727.813,727.813,47,23,0)
^^7^7^3150617^
"^DD",727.813,727.813,47,23,1,0)
If the VistA Patient Type Code (TYPE field (#391) of the Patient file (#2)
"^DD",727.813,727.813,47,23,2,0)
) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.813,727.813,47,23,3,0)
the VistA Other Eligibility multiple (PATIENT ELIGIBILITIES field (#361)
"^DD",727.813,727.813,47,23,4,0)
of the PATIENT file (#2)), which points to locally modifiable ELIGIBILITY
"^DD",727.813,727.813,47,23,5,0)
CODE file (#8) should be evaluated. If the value in the ELIGIBILITY CODE
"^DD",727.813,727.813,47,23,6,0)
is equal to any entry in the set of codes in this field, the value should
"^DD",727.813,727.813,47,23,7,0)
be placed in this field.
"^DD",727.813,727.813,47,"DT")
3100903
"^DD",727.814,727.814,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;^0;8^Q
"^DD",727.814,727.814,7,.1)
In Out Patient Indicator
"^DD",727.814,727.814,7,3)
Enter the patient's status at the time of the exam.
"^DD",727.814,727.814,7,21,0)
^.001^2^2^3150615^^^^
"^DD",727.814,727.814,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this 
"^DD",727.814,727.814,7,21,2,0)
extract.
"^DD",727.814,727.814,7,23,0)
^^10^10^3150615^
"^DD",727.814,727.814,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.814,727.814,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine 
"^DD",727.814,727.814,7,23,3,0)
inpatient/outpatient status.  If the patient is an outpatient, processing 
"^DD",727.814,727.814,7,23,4,0)
stops and the field is set to O.   If the patient is an inpatient then 
"^DD",727.814,727.814,7,23,5,0)
$$INOUTP^ECXUTL4 is called to look at the treating specialty.  If the 
"^DD",727.814,727.814,7,23,6,0)
patient's treating specialty exists in the DSS TREATING SPECIALTY 
"^DD",727.814,727.814,7,23,7,0)
TRANSLATION file (#727.831) then the value of the INPAT/OUTPAT CODE field 
"^DD",727.814,727.814,7,23,8,0)
(#5) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831) is used.  
"^DD",727.814,727.814,7,23,9,0)
If the treating specialty is not found in the DSS TREATING SPECIALTY 
"^DD",727.814,727.814,7,23,10,0)
TRANSLATION file (#727.831) then the indicator is set to I.
"^DD",727.814,727.814,7,"DT")
3120404
"^DD",727.814,727.814,12,0)
LOCATION (WARD OR CLINIC)^P44'^SC(^0;13^Q
"^DD",727.814,727.814,12,.1)
Location (Ward or Clinic)
"^DD",727.814,727.814,12,3)
Enter the ward or clinic of the patient at the time of the radiologic exam.
"^DD",727.814,727.814,12,21,0)
^.001^1^1^3150615^^^^
"^DD",727.814,727.814,12,21,1,0)
The patient's ward or clinic location.
"^DD",727.814,727.814,12,23,0)
^^10^10^3150615^
"^DD",727.814,727.814,12,23,1,0)
Derived from the WARD field (#6) within the EXAMINATIONS multiple (#50)
"^DD",727.814,727.814,12,23,2,0)
of the REGISTERED EXAMS multiple (#2) of the RAD/NUC MED PATIENT file
"^DD",727.814,727.814,12,23,3,0)
(#70). Using this WARD LOCATION file (#42) pointer, the data is derived
"^DD",727.814,727.814,12,23,4,0)
from the HOSPITAL LOCATION FILE POINTER field (#44) in the WARD LOCATION
"^DD",727.814,727.814,12,23,5,0)
file (#42) which is a pointer to the HOSPITAL LOCATION file (#44).
"^DD",727.814,727.814,12,23,6,0)
  
"^DD",727.814,727.814,12,23,7,0)
If the patient is not assigned to a ward, data is derived from the 
"^DD",727.814,727.814,12,23,8,0)
PRINCIPAL CLINIC field (#8) within the EXAMINATIONS multiple (#50) of the 
"^DD",727.814,727.814,12,23,9,0)
REGISTERED EXAMS multiple (#2) of the RAD/NUC MED PATIENT file (#70). 
"^DD",727.814,727.814,12,23,10,0)
PRINCIPAL CLINIC is a pointer to the HOSPITAL LOCATION file (#44).
"^DD",727.814,727.814,12,"DT")
2961004
"^DD",727.814,727.814,13,0)
SERVICE^P49'^DIC(49,^0;14^Q
"^DD",727.814,727.814,13,.1)
Service
"^DD",727.814,727.814,13,3)
Enter the name of the service.
"^DD",727.814,727.814,13,21,0)
^.001^1^1^3150615^^^^
"^DD",727.814,727.814,13,21,1,0)
Indicates the name of the service treating the patient.
"^DD",727.814,727.814,13,23,0)
^^3^3^3150615^
"^DD",727.814,727.814,13,23,1,0)
Derived from the SERVICE field (#7) within the EXAMINATIONS multiple (#50)
"^DD",727.814,727.814,13,23,2,0)
of the REGISTERED EXAMS multiple (#2) of the RAD/NUC MED PATIENT file
"^DD",727.814,727.814,13,23,3,0)
(#70). SERVICE is a pointer to the HOSPITAL SERVICE file (#49).
"^DD",727.814,727.814,13,"DT")
2961004
"^DD",727.814,727.814,18,0)
TREATING SPECIALTY^F^^0;19^K:$L(X)>3!($L(X)<2) X
"^DD",727.814,727.814,18,.1)
Treating Specialty
"^DD",727.814,727.814,18,3)
Answer must be 2-3 characters in length.
"^DD",727.814,727.814,18,21,0)
^.001^2^2^3150615^^^^
"^DD",727.814,727.814,18,21,1,0)
The PTF CODE of the treating specialty associated with this extract 
"^DD",727.814,727.814,18,21,2,0)
record.
"^DD",727.814,727.814,18,23,0)
^^9^9^3150615^
"^DD",727.814,727.814,18,23,1,0)
This field is initialized to a null, indicating an outpatient status. If 
"^DD",727.814,727.814,18,23,2,0)
a call to IN5^VADPT (using the patient IEN and the event date) returns a 
"^DD",727.814,727.814,18,23,3,0)
patient movement number (indicating inpatient status), then the value of 
"^DD",727.814,727.814,18,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file 
"^DD",727.814,727.814,18,23,5,0)
(#45.7), is used to get the SPECIALTY field (#1) which points to the 
"^DD",727.814,727.814,18,23,6,0)
SPECIALTY file (#42.4).
"^DD",727.814,727.814,18,23,7,0)
 
"^DD",727.814,727.814,18,23,8,0)
Then, the PTF CODE field (#7) of the SPECIALTY file (#42.4) is obtained
"^DD",727.814,727.814,18,23,9,0)
and stored instead of the IEN of the specialty.
"^DD",727.814,727.814,18,"DT")
3091103
"^DD",727.814,727.814,20,0)
IMAGING TYPE^P79.2'^RA(79.2,^0;21^Q
"^DD",727.814,727.814,20,.1)
Imaging Type
"^DD",727.814,727.814,20,3)
Enter the type of imaging used for this radiology exam.
"^DD",727.814,727.814,20,21,0)
^.001^1^1^3150615^^^^
"^DD",727.814,727.814,20,21,1,0)
The type of imaging used for this radiology exam.
"^DD",727.814,727.814,20,23,0)
^^3^3^3150615^
"^DD",727.814,727.814,20,23,1,0)
Derived from the TYPE OF IMAGING field (#2) within the REGISTERED EXAMS 
"^DD",727.814,727.814,20,23,2,0)
multiple (#2) of the RAD/NUC MED PATIENT file (#70). It is a pointer to
"^DD",727.814,727.814,20,23,3,0)
the IMAGING TYPE file (#79.2).
"^DD",727.814,727.814,20,"DT")
2961004
"^DD",727.814,727.814,31,0)
DOM,PRRTP AND SAARTP INDICATOR^S^P:GEN. PRRTP;T:PTSD PRRTP;S:DOM. PRRTP;H:HOMELESS CWT/TR;A:SA CWT/TR;D:DOMICILIARY;B:PTSD CWT/TR;C:GEN. CWT/TR;^1;9^Q
"^DD",727.814,727.814,31,3)
Enter the indicator associated with the treating specialty assigned to this record.
"^DD",727.814,727.814,31,21,0)
^.001^2^2^3150615^^^^
"^DD",727.814,727.814,31,21,1,0)
Indicates if the patient is admitted to either a RRTP, PRRTP or SARRTP at 
"^DD",727.814,727.814,31,21,2,0)
the time care is provided.
"^DD",727.814,727.814,31,23,0)
^^5^5^3150615^
"^DD",727.814,727.814,31,23,1,0)
If the patient's treating specialty exists in the DSS TREATING SPECIALTY
"^DD",727.814,727.814,31,23,2,0)
TRANSLATION file (#727.831), data is derived from the DOM/PRRTP/SARRTP
"^DD",727.814,727.814,31,23,3,0)
CODE field (#2) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831).
"^DD",727.814,727.814,31,23,4,0)
 
"^DD",727.814,727.814,31,23,5,0)
Otherwise, the value is null.
"^DD",727.814,727.814,31,"DT")
3120404
"^DD",727.814,727.814,32,0)
OBSERVATION PATIENT INDICATOR^S^NO:NO;YES:YES;^1;10^Q
"^DD",727.814,727.814,32,3)
Enter observation patient status for this record.
"^DD",727.814,727.814,32,21,0)
^.001^1^1^3150709^^^^
"^DD",727.814,727.814,32,21,1,0)
Indicates if patient is considered to be an observation patient.
"^DD",727.814,727.814,32,23,0)
^^12^12^3150709^
"^DD",727.814,727.814,32,23,1,0)
Data (YES, NO) is retrieved from API call $$OBSPAT^ECXUTL4:
"^DD",727.814,727.814,32,23,2,0)
 
"^DD",727.814,727.814,32,23,3,0)
If the patient's treating specialty exists in the DSS TREATING SPECIALTY
"^DD",727.814,727.814,32,23,4,0)
TRANSLATION file (#727.831), data is derived from the OBSERVATION PAT
"^DD",727.814,727.814,32,23,5,0)
INDICATOR field (#4) of the DSS TREATING SPECIALTY TRANSLATION file
"^DD",727.814,727.814,32,23,6,0)
(#727.831).
"^DD",727.814,727.814,32,23,7,0)
 
"^DD",727.814,727.814,32,23,8,0)
If patient is outpatient and treating specialty not in file, AND Feeder
"^DD",727.814,727.814,32,23,9,0)
Key (CLI) or DSS ID (MTL,IVP,ECQ,NOS,SUR) is 290-297, Observation
"^DD",727.814,727.814,32,23,10,0)
Patient Ind=YES.  Else, Observation Patient Ind=NO.
"^DD",727.814,727.814,32,23,11,0)
 
"^DD",727.814,727.814,32,23,12,0)
Otherwise, Observation Patient Ind=NO.
"^DD",727.814,727.814,32,"DT")
3120404
"^DD",727.814,727.814,34,0)
RAD STOP CODE^F^^1;12^K:$L(X)>3!($L(X)<3) X
"^DD",727.814,727.814,34,3)
Stop Code (3 characters) associated with imaging exam location.
"^DD",727.814,727.814,34,21,0)
^.001^1^1^3150615^^^^
"^DD",727.814,727.814,34,21,1,0)
This field contains the stop code associated with the order. 
"^DD",727.814,727.814,34,23,0)
^^8^8^3150615^
"^DD",727.814,727.814,34,23,1,0)
This field is populated from the AMIS REPORTING STOP CODE field (#1) of
"^DD",727.814,727.814,34,23,2,0)
the CLINIC STOP file (#40.7).
"^DD",727.814,727.814,34,23,3,0)
 
"^DD",727.814,727.814,34,23,4,0)
It comes from the IMAGING LOCATION field (#4) of the REGISTERED EXAMS 
"^DD",727.814,727.814,34,23,5,0)
multiple (#2) of the RAD/NUC MED PATIENT file (#70).  IMAGING LOCATION is 
"^DD",727.814,727.814,34,23,6,0)
a pointer to the IMAGING LOCATIONS file (#79.1) and uses the DSS ID field
"^DD",727.814,727.814,34,23,7,0)
(#22) value.  DSS ID is a pointer to the CLINIC STOP file (#40.7) where
"^DD",727.814,727.814,34,23,8,0)
the AMIS REPORTING STOP CODE field (#1) is returned.
"^DD",727.814,727.814,34,"DT")
3050405
"^DD",727.814,727.814,48,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^1;26^Q
"^DD",727.814,727.814,48,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.814,727.814,48,21,0)
^.001^6^6^3150615^^
"^DD",727.814,727.814,48,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.814,727.814,48,21,2,0)
Care Center) Reconciliation.
"^DD",727.814,727.814,48,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.814,727.814,48,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.814,727.814,48,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.814,727.814,48,21,6,0)
pays for.
"^DD",727.814,727.814,48,23,0)
^^7^7^3150615^
"^DD",727.814,727.814,48,23,1,0)
If the VistA Patient Type Code (TYPE field (#391)
"^DD",727.814,727.814,48,23,2,0)
of the Patient file (#2)) = Active Duty, Military Retiree, or TRICARE,
"^DD",727.814,727.814,48,23,3,0)
then the value(s) in the VistA Other  Eligibility multiple (PATIENT
"^DD",727.814,727.814,48,23,4,0)
ELIGIBILITIES field (#361) of the PATIENT file (#2)), which points to
"^DD",727.814,727.814,48,23,5,0)
locally modifiable ELIGIBILITY CODE file (#8) should be evaluated. If the
"^DD",727.814,727.814,48,23,6,0)
value in the ELIGIBILITY CODE is equal to any entry in the set of codes in
"^DD",727.814,727.814,48,23,7,0)
this field, the value should be placed in this field.
"^DD",727.814,727.814,48,"DT")
3100903
"^DD",727.814,727.814,49,0)
CREDIT METHOD^S^0:REGULAR CREDIT;1:INTERPRETATION ONLY;2:NO CREDIT;3:TECHNICAL COMPONENT ONLY;^1;27^Q
"^DD",727.814,727.814,49,3)
Enter the credit method associated with this exam.
"^DD",727.814,727.814,49,21,0)
^.001^8^8^3150615^^^^
"^DD",727.814,727.814,49,21,1,0)
This field indicates the type of credit this location receives for 
"^DD",727.814,727.814,49,21,2,0)
examinations.  The code is based on where the exam and 
"^DD",727.814,727.814,49,21,3,0)
interpretation were done.  If the exam and interpretation were done
"^DD",727.814,727.814,49,21,4,0)
at the same facility, a value of 0 is given.  If only the
"^DD",727.814,727.814,49,21,5,0)
interpretation was done at this facility, a value of 1 is given.  
"^DD",727.814,727.814,49,21,6,0)
If the exam and interpretation were both done at a different
"^DD",727.814,727.814,49,21,7,0)
location a value of 2 is given and finally, if only the examination
"^DD",727.814,727.814,49,21,8,0)
was done at this facility a value of 3 is given.
"^DD",727.814,727.814,49,23,0)
^^3^3^3150615^
"^DD",727.814,727.814,49,23,1,0)
This field is derived from the CREDIT METHOD field (#26) of the 
"^DD",727.814,727.814,49,23,2,0)
EXAMINATIONS multiple (#50) of the REGISTERED EXAMS multiple (#2) of the
"^DD",727.814,727.814,49,23,3,0)
RAD/NUC MED PATIENT file (#70).
"^DD",727.814,727.814,49,"DT")
3120716
"^DD",727.814,727.814,53,0)
RAD VERIFY DATE^FO^^2;4^K:$L(X)>8!($L(X)<8) X
"^DD",727.814,727.814,53,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.814,727.814,53,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.814,727.814,53,3)
Answer must be 8 characters in length.
"^DD",727.814,727.814,53,21,0)
^.001^2^2^3150615^^^^
"^DD",727.814,727.814,53,21,1,0)
An 8-character numeric string that represents the date on which the
"^DD",727.814,727.814,53,21,2,0)
Radiology procedure was verified.
"^DD",727.814,727.814,53,23,0)
^.001^7^7^3150615^^^
"^DD",727.814,727.814,53,23,1,0)
Date portion of the VERIFIED DATE field (#7) of the RAD/NUC MED REPORTS
"^DD",727.814,727.814,53,23,2,0)
file (#74).
"^DD",727.814,727.814,53,23,3,0)
                                 
"^DD",727.814,727.814,53,23,4,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.814,727.814,53,23,5,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined,
"^DD",727.814,727.814,53,23,6,0)
then a default is used.  The default date value is the value of the YEAR
"^DD",727.814,727.814,53,23,7,0)
MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.814,727.814,53,"DT")
3150209
"^DD",727.815,727.815,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.815,727.815,1,.1)
Year/Month
"^DD",727.815,727.815,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.815,727.815,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.815,727.815,1,3)
Answer must be 6 characters in length.
"^DD",727.815,727.815,1,21,0)
^.001^2^2^3150520^^^^
"^DD",727.815,727.815,1,21,1,0)
A six character string representing the year and the month
"^DD",727.815,727.815,1,21,2,0)
for which this extract was performed.
"^DD",727.815,727.815,1,23,0)
^^6^6^3150520^
"^DD",727.815,727.815,1,23,1,0)
YEAR MONTH is derived by parsing the fileman format end date of the 
"^DD",727.815,727.815,1,23,2,0)
extract. The month is determined by taking the 4th and 5th characters of
"^DD",727.815,727.815,1,23,3,0)
the end date, the year by taking the 2nd and 3rd characters, and the
"^DD",727.815,727.815,1,23,4,0)
century is then calculated by taking the 1st character of the end date,
"^DD",727.815,727.815,1,23,5,0)
and adding 17 to  it. The century is then concatenated with the year and
"^DD",727.815,727.815,1,23,6,0)
month, giving the results in YYYYMM format.
"^DD",727.815,727.815,1,"DT")
2970924
"^DD",727.815,727.815,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.815,727.815,5,.1)
Social Security Number
"^DD",727.815,727.815,5,3)
Enter the social security number for this patient's extract record.
"^DD",727.815,727.815,5,21,0)
^.001^1^1^3150520^^^^
"^DD",727.815,727.815,5,21,1,0)
The patient's social security number.
"^DD",727.815,727.815,5,23,0)
^.001^6^6^3150520^^
"^DD",727.815,727.815,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.815,727.815,5,23,2,0)
(#4) in the EVENT CAPTURE LOCAL EXTRACT file (#727.815), SSN data is
"^DD",727.815,727.815,5,23,3,0)
derived from the SOCIAL SECURITY NUMBER field (#.09) in the PATIENT file
"^DD",727.815,727.815,5,23,4,0)
(#2).
"^DD",727.815,727.815,5,23,5,0)
 
"^DD",727.815,727.815,5,23,6,0)
"Test" patient status is determined in PAT^ECXUTL3.
"^DD",727.815,727.815,5,"DT")
2910802
"^DD",727.815,727.815,7,0)
IN OUT PATIENT INDICATOR^F^^0;8^K:$L(X)>1!($L(X)<1) X
"^DD",727.815,727.815,7,.1)
In Out Patient Indicator
"^DD",727.815,727.815,7,3)
Answer must be 1 character in length.
"^DD",727.815,727.815,7,21,0)
^.001^2^2^3150527^^^^
"^DD",727.815,727.815,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this 
"^DD",727.815,727.815,7,21,2,0)
extract.
"^DD",727.815,727.815,7,23,0)
^.001^14^14^3150527^^
"^DD",727.815,727.815,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.815,727.815,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine 
"^DD",727.815,727.815,7,23,3,0)
inpatient/outpatient status.  If the patient is an outpatient, processing 
"^DD",727.815,727.815,7,23,4,0)
stops and the field is set to O.   If the patient is an inpatient then 
"^DD",727.815,727.815,7,23,5,0)
$$INOUTP^ECXUTL4 is called to look at the treating specialty.  If the 
"^DD",727.815,727.815,7,23,6,0)
patient's treating specialty exists in the DSS TREATING SPECIALTY 
"^DD",727.815,727.815,7,23,7,0)
TRANSLATION file (#727.831) then the value of the INPAT/OUTPAT CODE field 
"^DD",727.815,727.815,7,23,8,0)
(#5) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831) is used.  
"^DD",727.815,727.815,7,23,9,0)
If the treating specialty is not found in the DSS TREATING SPECIALTY 
"^DD",727.815,727.815,7,23,10,0)
TRANSLATION file (#727.831) then the indicator is set to I.
"^DD",727.815,727.815,7,23,11,0)
 
"^DD",727.815,727.815,7,23,12,0)
This field should be a set of codes, with I for INPATIENT and O for
"^DD",727.815,727.815,7,23,13,0)
OUTPATIENT, but due to FileMan limitations for data on this node, the 
"^DD",727.815,727.815,7,23,14,0)
field is being left as free text.
"^DD",727.815,727.815,7,"DT")
3011129
"^DD",727.815,727.815,61,0)
OBSERVATION PATIENT INDICATOR^S^NO:NO;YES:YES;^1;20^Q
"^DD",727.815,727.815,61,3)
Enter observation patient status for this record.
"^DD",727.815,727.815,61,21,0)
^.001^1^1^3150709^^^^
"^DD",727.815,727.815,61,21,1,0)
Indicates if patient is considered to be an observation patient.
"^DD",727.815,727.815,61,23,0)
^^12^12^3150709^
"^DD",727.815,727.815,61,23,1,0)
Data (YES, NO) is retrieved from API call $$OBSPAT^ECXUTL4:
"^DD",727.815,727.815,61,23,2,0)
 
"^DD",727.815,727.815,61,23,3,0)
If the patient's treating specialty exists in the DSS TREATING SPECIALTY
"^DD",727.815,727.815,61,23,4,0)
TRANSLATION file (#727.831), data is derived from the OBSERVATION PAT 
"^DD",727.815,727.815,61,23,5,0)
INDICATOR field (#4) of the DSS TREATING SPECIALTY TRANSLATION file
"^DD",727.815,727.815,61,23,6,0)
(#727.831).
"^DD",727.815,727.815,61,23,7,0)
 
"^DD",727.815,727.815,61,23,8,0)
If patient is outpatient and treating specialty not in file, AND Feeder
"^DD",727.815,727.815,61,23,9,0)
Key (CLI) or DSS ID (MTL,IVP,ECQ,NOS,SUR) is 290-297, Observation
"^DD",727.815,727.815,61,23,10,0)
Patient Ind=YES.  Else, Observation Patient Ind=NO.
"^DD",727.815,727.815,61,23,11,0)
 
"^DD",727.815,727.815,61,23,12,0)
Otherwise, Observation Patient Ind=NO.
"^DD",727.815,727.815,61,"DT")
3120601
"^DD",727.815,727.815,77,0)
USER ENROLLEE^S^U:USER ENROLLED;^1;36^Q
"^DD",727.815,727.815,77,3)
Enter patient's current enrollment status.
"^DD",727.815,727.815,77,21,0)
^.001^2^2^3150520^^^^
"^DD",727.815,727.815,77,21,1,0)
Indicates whether a Veteran has User Enrollee status for the current or 
"^DD",727.815,727.815,77,21,2,0)
future fiscal year.
"^DD",727.815,727.815,77,23,0)
^^5^5^3150520^
"^DD",727.815,727.815,77,23,1,0)
User enrollee is determined by checking the Patient Enrollment (#27.11) 
"^DD",727.815,727.815,77,23,2,0)
file. When a user has a current or future fiscal year in the VistA User
"^DD",727.815,727.815,77,23,3,0)
Enrollee Status field (#.04) the value is set to 'U' and Null if no date
"^DD",727.815,727.815,77,23,4,0)
or a past year's value is contained. Determined by the use of an API:
"^DD",727.815,727.815,77,23,5,0)
$$UESTAT^EASUSER where the Patient Identifier (DFN) is passed in.
"^DD",727.815,727.815,77,"DT")
3120606
"^DD",727.815,727.815,89,0)
PLACEHOLDER^F^^2;10^K:$L(X)>8!($L(X)<8) X
"^DD",727.815,727.815,89,3)
Answer must be 8 characters in length.
"^DD",727.815,727.815,89,21,0)
^.001^1^1^3150520^^^
"^DD",727.815,727.815,89,21,1,0)
Currently Null.
"^DD",727.815,727.815,89,23,0)
^.001^1^1^3150520^^^^
"^DD",727.815,727.815,89,23,1,0)
Currently NULL.
"^DD",727.815,727.815,89,"DT")
3150211
"^DD",727.815,727.815,106,0)
PRIMARY ICD-10 CODE^F^^2;27^K:$L(X)>8!($L(X)<1) X
"^DD",727.815,727.815,106,3)
Enter the ICD-10 code for this record (1-8 characters).
"^DD",727.815,727.815,106,21,0)
^.001^1^1^3150527^^^^
"^DD",727.815,727.815,106,21,1,0)
The primary ICD10 code for this encounter.
"^DD",727.815,727.815,106,23,0)
^.001^2^2^3150527^^
"^DD",727.815,727.815,106,23,1,0)
The PRIMARY ICD-10 CODE is derived from the PRIMARY ICD CODE field (#20)
"^DD",727.815,727.815,106,23,2,0)
in the EVENT CAPTURE PATIENT file (#721).
"^DD",727.815,727.815,106,"DT")
3120304
"^DD",727.815,727.815,107,0)
SECONDARY ICD-10 CODE #1^F^^2;28^K:$L(X)>8!($L(X)<1) X
"^DD",727.815,727.815,107,3)
Enter the secondary ICD-10 code for this record (1-8 characters).
"^DD",727.815,727.815,107,21,0)
^.001^1^1^3150527^^^
"^DD",727.815,727.815,107,21,1,0)
The first secondary ICD10 code for this encounter.
"^DD",727.815,727.815,107,23,0)
^.001^3^3^3150527^^^^
"^DD",727.815,727.815,107,23,1,0)
SECONDARY ICD-10 CODE #1 is derived from the SECONDARY ICD CODE 
"^DD",727.815,727.815,107,23,2,0)
field (#.01) of the SECONDARY ICD CODE multiple (#38) of the EVENT CAPTURE
"^DD",727.815,727.815,107,23,3,0)
PATIENT file (#721).
"^DD",727.815,727.815,107,"DT")
3120304
"^DD",727.815,727.815,108,0)
SECONDARY ICD-10 CODE #2^F^^2;29^K:$L(X)>8!($L(X)<1) X
"^DD",727.815,727.815,108,3)
Enter the secondary ICD-10 code for this record (1-8 characters).
"^DD",727.815,727.815,108,21,0)
^.001^1^1^3150527^^^^
"^DD",727.815,727.815,108,21,1,0)
The second secondary ICD-10 code for this encounter.
"^DD",727.815,727.815,108,23,0)
^.001^3^3^3150527^^
"^DD",727.815,727.815,108,23,1,0)
SECONDARY ICD-10 CODE #2 is derived from the SECONDARY ICD CODE field
"^DD",727.815,727.815,108,23,2,0)
(#.01) of the SECONDARY ICD CODE multiple (#38) of the EVENT CAPTURE
"^DD",727.815,727.815,108,23,3,0)
PATIENT file (#721).
"^DD",727.815,727.815,108,"DT")
3120304
"^DD",727.815,727.815,109,0)
SECONDARY ICD-10 CODE #3^F^^2;30^K:$L(X)>8!($L(X)<1) X
"^DD",727.815,727.815,109,3)
Enter the secondary ICD-10 code for this record (1-8 characters).
"^DD",727.815,727.815,109,21,0)
^.001^1^1^3150527^^^^
"^DD",727.815,727.815,109,21,1,0)
The third secondary ICD-10 code for this encounter.
"^DD",727.815,727.815,109,23,0)
^.001^3^3^3150527^^
"^DD",727.815,727.815,109,23,1,0)
SECONDARY ICD-10 CODE #3 is derived from the SECONDARY ICD CODE field
"^DD",727.815,727.815,109,23,2,0)
(#.01) of the SECONDARY ICD CODE multiple (#38) of the EVENT CAPTURE
"^DD",727.815,727.815,109,23,3,0)
PATIENT file (#721).
"^DD",727.815,727.815,109,"DT")
3120304
"^DD",727.815,727.815,110,0)
SECONDARY ICD-10 CODE #4^F^^2;31^K:$L(X)>8!($L(X)<1) X
"^DD",727.815,727.815,110,3)
Enter the secondary ICD-10 code for this record (1-8 characters).
"^DD",727.815,727.815,110,21,0)
^.001^1^1^3150527^^^^
"^DD",727.815,727.815,110,21,1,0)
The fourth secondary ICD-10 code for this encounter.
"^DD",727.815,727.815,110,23,0)
^.001^3^3^3150527^^
"^DD",727.815,727.815,110,23,1,0)
SECONDARY ICD-10 CODE #4 is derived from the SECONDARY ICD CODE field
"^DD",727.815,727.815,110,23,2,0)
(#.01) of the SECONDARY ICD CODE multiple (#38) of the EVENT CAPTURE
"^DD",727.815,727.815,110,23,3,0)
PATIENT file (#721).
"^DD",727.815,727.815,110,"DT")
3120304
"^DD",727.815,727.815,119,0)
4CHAR^F^^3;9^K:$L(X)>4!($L(X)<4) X
"^DD",727.815,727.815,119,3)
Answer must be 4 characters in length.
"^DD",727.815,727.815,119,21,0)
^^4^4^3150420^
"^DD",727.815,727.815,119,21,1,0)
A 4-character code value of the associated clinic as specified from the
"^DD",727.815,727.815,119,21,2,0)
DSS Clinics and Stop Code Worksheet File if the record is sent to PCE.  
"^DD",727.815,727.815,119,21,3,0)
If the record does not get sent to PCE then the code comes from the DSS 
"^DD",727.815,727.815,119,21,4,0)
UNIT associated with this record.
"^DD",727.815,727.815,119,23,0)
^^12^12^3150420^
"^DD",727.815,727.815,119,23,1,0)
If the record is sent to PCE then 4CHAR is determined by using the CLINIC
"^DD",727.815,727.815,119,23,2,0)
IEN field (#120) of this file to retrieve the NATIONAL CODE field (#7)
"^DD",727.815,727.815,119,23,3,0)
from the CLINICS AND STOP CODES file (#728.44).  The NATIONAL CODE (#7)
"^DD",727.815,727.815,119,23,4,0)
field points to the NATIONAL CLINIC (#728.441) file.  
"^DD",727.815,727.815,119,23,5,0)
 
"^DD",727.815,727.815,119,23,6,0)
If the record is not sent to PCE then 4CHAR is determined by using the DSS
"^DD",727.815,727.815,119,23,7,0)
UNIT field (#9) of this file to retrieve the CHAR4 field (#15) of the DSS
"^DD",727.815,727.815,119,23,8,0)
UNIT file (#724). The CHAR4 field (#15) points to the NATIONAL CLINIC 
"^DD",727.815,727.815,119,23,9,0)
(#728.441) file.
"^DD",727.815,727.815,119,23,10,0)
 
"^DD",727.815,727.815,119,23,11,0)
This field is a copy of the CODE (#.01) field of the NATIONAL CLINIC file
"^DD",727.815,727.815,119,23,12,0)
(#728.441).
"^DD",727.815,727.815,119,"DT")
3130521
"^DD",727.815,727.815,120,0)
PLACEHOLDER^*P44'O^SC(^3;10^S DIC("S")="I $P(^(0),""^"",3)=""C""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",727.815,727.815,120,2)
S Y(0)=Y S X=Y(0),X=X S Y=X
"^DD",727.815,727.815,120,2.1)
INTERNAL(CLINIC IEN)
"^DD",727.815,727.815,120,3)
Enter a Hospital Location.
"^DD",727.815,727.815,120,12)
Allows selection of Clinic entries only.
"^DD",727.815,727.815,120,12.1)
S DIC("S")="I $P(^(0),""^"",3)=""C"""
"^DD",727.815,727.815,120,21,0)
^.001^1^1^3150520^^^^
"^DD",727.815,727.815,120,21,1,0)
Currently NULL.
"^DD",727.815,727.815,120,23,0)
^.001^1^1^3150520^^^^
"^DD",727.815,727.815,120,23,1,0)
Currently NULL.
"^DD",727.815,727.815,120,"DT")
3150211
"^DD",727.815,727.815,128,0)
CLINIC IEN^*P44'^SC(^3;18^S DIC("S")="I $P(^(0),""^"",3)=""C""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",727.815,727.815,128,3)
Enter the clinic associated with this Event Capture record.
"^DD",727.815,727.815,128,12)
Verify information
"^DD",727.815,727.815,128,12.1)
S DIC("S")="I $P(^(0),""^"",3)=""C"""
"^DD",727.815,727.815,128,21,0)
^.001^1^1^3150223^^^^
"^DD",727.815,727.815,128,21,1,0)
The Associated Clinic of the Event Capture (EC) Procedure.
"^DD",727.815,727.815,128,23,0)
^.001^4^4^3150223^^^
"^DD",727.815,727.815,128,23,1,0)
CLINIC IEN is retrieved from the ASSOCIATED CLINIC field (#26) of the 
"^DD",727.815,727.815,128,23,2,0)
EVENT CAPTURE PATIENT file (#721). The value stored here is a copy of the 
"^DD",727.815,727.815,128,23,3,0)
value stored in the ASSOCIATED CLINIC field (#26) of the EVENT CAPTURE 
"^DD",727.815,727.815,128,23,4,0)
PATIENT file (#721).
"^DD",727.815,727.815,128,"DT")
3150223
"^DD",727.817,727.817,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.817,727.817,1,.1)
Year/Month
"^DD",727.817,727.817,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.817,727.817,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.817,727.817,1,3)
Answer must be 6 characters in length.
"^DD",727.817,727.817,1,21,0)
^.001^2^2^3150604^^^
"^DD",727.817,727.817,1,21,1,0)
A six character string representing the year and the month
"^DD",727.817,727.817,1,21,2,0)
for which this extract was performed.
"^DD",727.817,727.817,1,23,0)
^^6^6^3150604^
"^DD",727.817,727.817,1,23,1,0)
YEAR MONTH is derived by parsing the Fileman format end date of the 
"^DD",727.817,727.817,1,23,2,0)
extract. The month is determined by taking the 4th and 5th characters of
"^DD",727.817,727.817,1,23,3,0)
the end date, the year by taking the 2nd and 3rd characters, and the
"^DD",727.817,727.817,1,23,4,0)
century is then calculated by taking the 1st character of the end date,
"^DD",727.817,727.817,1,23,5,0)
and adding 17 to  it. The century is then concatenated with the year and
"^DD",727.817,727.817,1,23,6,0)
month, giving the results in YYYYMM format.
"^DD",727.817,727.817,1,"DT")
2970924
"^DD",727.817,727.817,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.817,727.817,5,.1)
Social Security Number
"^DD",727.817,727.817,5,3)
Your answer must be 9 to 10 characters in length.
"^DD",727.817,727.817,5,21,0)
^.001^1^1^3150604^^^
"^DD",727.817,727.817,5,21,1,0)
The patient's social security number.
"^DD",727.817,727.817,5,23,0)
^^6^6^3150604^
"^DD",727.817,727.817,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN 
"^DD",727.817,727.817,5,23,2,0)
field (#4) in the TREATING SPECIALTY CHANGE EXTRACT file (#727.817), 
"^DD",727.817,727.817,5,23,3,0)
SSN data is derived from the SOCIAL SECURITY NUMBER field (#.09) in 
"^DD",727.817,727.817,5,23,4,0)
the PATIENT file (#2).
"^DD",727.817,727.817,5,23,5,0)
 
"^DD",727.817,727.817,5,23,6,0)
"Test" patient status is determined in PAT^ECXUTL3.
"^DD",727.817,727.817,5,"DT")
2961004
"^DD",727.817,727.817,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;^0;8^Q
"^DD",727.817,727.817,7,.1)
In Out Patient Indicator
"^DD",727.817,727.817,7,3)
Enter the patient's status at the time of the treating specialty change.
"^DD",727.817,727.817,7,21,0)
^.001^2^2^3150604^^^^
"^DD",727.817,727.817,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this 
"^DD",727.817,727.817,7,21,2,0)
extract entry.
"^DD",727.817,727.817,7,23,0)
^^10^10^3150604^
"^DD",727.817,727.817,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.817,727.817,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine 
"^DD",727.817,727.817,7,23,3,0)
inpatient/outpatient status.  If the patient is an outpatient, processing 
"^DD",727.817,727.817,7,23,4,0)
stops and the field is set to O.   If the patient is an inpatient then 
"^DD",727.817,727.817,7,23,5,0)
$$INOUTP^ECXUTL4 is called to look at the treating specialty.  If the 
"^DD",727.817,727.817,7,23,6,0)
patient's treating specialty exists in the DSS TREATING SPECIALTY 
"^DD",727.817,727.817,7,23,7,0)
TRANSLATION file (#727.831) then the value of the INPAT/OUTPAT CODE field 
"^DD",727.817,727.817,7,23,8,0)
(#5) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831) is used.  
"^DD",727.817,727.817,7,23,9,0)
If the treating specialty is not found in the DSS TREATING SPECIALTY 
"^DD",727.817,727.817,7,23,10,0)
TRANSLATION file (#727.831) then the indicator is set to I.
"^DD",727.817,727.817,7,"DT")
3120308
"^DD",727.817,727.817,14,0)
NEW TREATING SPECIALTY^F^^0;15^K:$L(X)>3!($L(X)<2) X
"^DD",727.817,727.817,14,.1)
New Treating Specialty
"^DD",727.817,727.817,14,3)
PTF Code from Specialty File (#42.4) (2 to 3 characters)
"^DD",727.817,727.817,14,21,0)
^.001^2^2^3150604^^^
"^DD",727.817,727.817,14,21,1,0)
The treating specialty code for this patient at the date and time of this
"^DD",727.817,727.817,14,21,2,0)
record.
"^DD",727.817,727.817,14,23,0)
^.001^10^10^3150604^^
"^DD",727.817,727.817,14,23,1,0)
Source:
"^DD",727.817,727.817,14,23,2,0)
Field #.09; file #405
"^DD",727.817,727.817,14,23,3,0)
Field #7; file #45.7
"^DD",727.817,727.817,14,23,4,0)
 
"^DD",727.817,727.817,14,23,5,0)
PTF Code of the SPECIALTY file (#42.4) derived from the SPECIALTY
"^DD",727.817,727.817,14,23,6,0)
field (#1) and PTF CODE (#7) of the FACILITY TREATING SPECIALTY file 
"^DD",727.817,727.817,14,23,7,0)
(#45.7) record pointed to by the FACILITY TREATING SPECIALTY field (#.09)
"^DD",727.817,727.817,14,23,8,0)
of the PATIENT MOVEMENT file (#405) record.  The movement record is the
"^DD",727.817,727.817,14,23,9,0)
current treating specialty movement.  Then, the PTF Code is obtained and
"^DD",727.817,727.817,14,23,10,0)
stored instead of the actual specialty code.
"^DD",727.817,727.817,14,"DT")
3070413
"^DD",727.817,727.817,32,0)
DOM,PRRTP AND SAARTP INDICATOR^S^P:GEN. PRRTP;T:PTSD PRRTP;S:DOM. PRRTP;H:HOMELESS CWT/TR;A:SA CWT/TR;D:DOMICILIARY;B:PTSD CWT/TR;C:GEN. CWT/TR;^1;9^Q
"^DD",727.817,727.817,32,3)
Enter the indicator associated with the treating specialty assigned to this record.
"^DD",727.817,727.817,32,21,0)
^.001^2^2^3150604^^^^
"^DD",727.817,727.817,32,21,1,0)
Indicates if the patient is admitted to either a RRTP, PRRTP or SARRTP at
"^DD",727.817,727.817,32,21,2,0)
the time care is provided.
"^DD",727.817,727.817,32,23,0)
^^4^4^3150604^
"^DD",727.817,727.817,32,23,1,0)
If the patient's treating specialty exists in the DSS TREATING SPECIALTY
"^DD",727.817,727.817,32,23,2,0)
TRANSLATION file (#727.831), data is derived from the DOM/PRRTP/SARRTP
"^DD",727.817,727.817,32,23,3,0)
CODE field (#2) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831).
"^DD",727.817,727.817,32,23,4,0)
Otherwise, the value is null.
"^DD",727.817,727.817,32,"DT")
3120308
"^DD",727.817,727.817,33,0)
OBSERVATION PATIENT INDICATOR^S^NO:NO;YES:YES;^1;10^Q
"^DD",727.817,727.817,33,3)
Enter observation patient status for this record.
"^DD",727.817,727.817,33,21,0)
^.001^1^1^3150709^^^^
"^DD",727.817,727.817,33,21,1,0)
Indicates if patient is considered to be an observation patient.
"^DD",727.817,727.817,33,23,0)
^^12^12^3150709^
"^DD",727.817,727.817,33,23,1,0)
Data (YES, NO) is retrieved from API call $$OBSPAT^ECXUTL4:
"^DD",727.817,727.817,33,23,2,0)
 
"^DD",727.817,727.817,33,23,3,0)
If the patient's treating specialty exists in the DSS TREATING SPECIALTY
"^DD",727.817,727.817,33,23,4,0)
TRANSLATION file (#727.831), data is derived from the OBSERVATION PAT 
"^DD",727.817,727.817,33,23,5,0)
INDICATOR field (#4) of the DSS TREATING SPECIALTY TRANSLATION file
"^DD",727.817,727.817,33,23,6,0)
(#727.831).
"^DD",727.817,727.817,33,23,7,0)
 
"^DD",727.817,727.817,33,23,8,0)
If patient is outpatient and treating specialty not in file, AND Feeder
"^DD",727.817,727.817,33,23,9,0)
Key (CLI) or DSS ID (MTL,IVP,ECQ,NOS,SUR) is 290-297, Observation
"^DD",727.817,727.817,33,23,10,0)
Patient Ind=YES.  Else, Observation Patient Ind=NO.
"^DD",727.817,727.817,33,23,11,0)
 
"^DD",727.817,727.817,33,23,12,0)
Otherwise, Observation Patient Ind=NO.
"^DD",727.817,727.817,33,"DT")
3120308
"^DD",727.817,727.817,44,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^1;21^Q
"^DD",727.817,727.817,44,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.817,727.817,44,21,0)
^.001^6^6^3150604^^
"^DD",727.817,727.817,44,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.817,727.817,44,21,2,0)
Care Center) Reconciliation.
"^DD",727.817,727.817,44,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.817,727.817,44,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.817,727.817,44,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.817,727.817,44,21,6,0)
pays for.
"^DD",727.817,727.817,44,23,0)
^^7^7^3150604^
"^DD",727.817,727.817,44,23,1,0)
If the VistA Patient Type Code (TYPE field (#391) of the Patient file 
"^DD",727.817,727.817,44,23,2,0)
(#2)) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.817,727.817,44,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES field (#361) 
"^DD",727.817,727.817,44,23,4,0)
of the PATIENT file (#2)), which points to locally modifiable ELIGIBILITY
"^DD",727.817,727.817,44,23,5,0)
CODE file (#8) should be evaluated. If the value in the
"^DD",727.817,727.817,44,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.817,727.817,44,23,7,0)
the value should be placed in this field.
"^DD",727.817,727.817,44,"DT")
3100903
"^DD",727.819,727.819,3,0)
FACILITY^P40.8'^DG(40.8,^0;4^Q
"^DD",727.819,727.819,3,.1)
Facility
"^DD",727.819,727.819,3,3)
Enter the medical center division where this IV Room is located.
"^DD",727.819,727.819,3,21,0)
^.001^1^1^3150611^^^^
"^DD",727.819,727.819,3,21,1,0)
This is the medical center division where the IV room is located.
"^DD",727.819,727.819,3,23,0)
^^7^7^3150611^
"^DD",727.819,727.819,3,23,1,0)
An indicator of the medical center division where the IV room for this 
"^DD",727.819,727.819,3,23,2,0)
event happened. It is derived from the IV ROOM field (#.22) of IV 
"^DD",727.819,727.819,3,23,3,0)
multiple (#100) in the PHARMACY PATIENT file (#55). 
"^DD",727.819,727.819,3,23,4,0)
 
"^DD",727.819,727.819,3,23,5,0)
The IEN of the IV room is passed to the API ALL^PSJ59P5 which returns the 
"^DD",727.819,727.819,3,23,6,0)
DIVISION field (#.02) from the IV ROOM sub file (#59.5), which points
"^DD",727.819,727.819,3,23,7,0)
to the MEDICAL CENTER DIVISION file (#40.8). 
"^DD",727.819,727.819,3,"DT")
3120531
"^DD",727.819,727.819,4,0)
PATIENT NO. - DFN^P2'^DPT(^0;5^Q
"^DD",727.819,727.819,4,.1)
Patient No. - DFN
"^DD",727.819,727.819,4,3)
Enter the name of the patient for this extract record.
"^DD",727.819,727.819,4,21,0)
^.001^1^1^3150611^^^^
"^DD",727.819,727.819,4,21,1,0)
An identifying number for the patient at the local site.
"^DD",727.819,727.819,4,23,0)
^^10^10^3150611^
"^DD",727.819,727.819,4,23,1,0)
For sites running a version of Inpatient Medications prior to V. 4.5:
"^DD",727.819,727.819,4,23,2,0)
Derived from the PATIENT field (#.01) within the PATIENT multiple 
"^DD",727.819,727.819,4,23,3,0)
(#8) within the IV DRUG multiple (#2) within the DATE multiple (#2) of 
"^DD",727.819,727.819,4,23,4,0)
the IV STATS file (#50.8). PATIENT NO. - DFN is a pointer to the NAME
"^DD",727.819,727.819,4,23,5,0)
field (#.01) of the PATIENT file (#2). This data represents the patient
"^DD",727.819,727.819,4,23,6,0)
DFN.
"^DD",727.819,727.819,4,23,7,0)
  
"^DD",727.819,727.819,4,23,8,0)
For sites running Inpatient Medications V. 4.5 or higher: Pointer to the
"^DD",727.819,727.819,4,23,9,0)
NAME field (#.01) of the PATIENT file (#2). PATIENT NO. - DFN data is
"^DD",727.819,727.819,4,23,10,0)
derived from the DFN field (#1) of the IV EXTRACT DATA file (#728.113).
"^DD",727.819,727.819,4,"DT")
2961017
"^DD",727.819,727.819,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;^0;8^Q
"^DD",727.819,727.819,7,.1)
In Out Patient Indicator
"^DD",727.819,727.819,7,3)
Enter the patient's status for this extract entry.
"^DD",727.819,727.819,7,21,0)
^.001^2^2^3150611^^^
"^DD",727.819,727.819,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this 
"^DD",727.819,727.819,7,21,2,0)
extract.
"^DD",727.819,727.819,7,23,0)
^^10^10^3150611^
"^DD",727.819,727.819,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.819,727.819,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine 
"^DD",727.819,727.819,7,23,3,0)
inpatient/outpatient status.  If the patient is an outpatient, processing 
"^DD",727.819,727.819,7,23,4,0)
stops and the field is set to O.   If the patient is an inpatient then 
"^DD",727.819,727.819,7,23,5,0)
$$INOUTP^ECXUTL4 is called to look at the treating specialty.  If the 
"^DD",727.819,727.819,7,23,6,0)
patient's treating specialty exists in the DSS TREATING SPECIALTY 
"^DD",727.819,727.819,7,23,7,0)
TRANSLATION file (#727.831) then the value of the INPAT/OUTPAT CODE field 
"^DD",727.819,727.819,7,23,8,0)
(#5) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831) is used.  
"^DD",727.819,727.819,7,23,9,0)
If the treating specialty is not found in the DSS TREATING SPECIALTY 
"^DD",727.819,727.819,7,23,10,0)
TRANSLATION file (#727.831) then the indicator is set to I.
"^DD",727.819,727.819,7,"DT")
3120531
"^DD",727.819,727.819,34,0)
DOM,PRRTP AND SAARTP INDICATOR^S^P:GEN. PRRTP;T:PTSD PRRTP;S:DOM. PRRTP;H:HOMELESS CWT/TR;A:SA CWT/TR;D:DOMICILIARY;B:PTSD CWT/TR;C:GEN. CET/TR;^1;8^Q
"^DD",727.819,727.819,34,3)
Enter the indicator associated with the treating specialty assigned to this record.
"^DD",727.819,727.819,34,21,0)
^.001^2^2^3150611^^^^
"^DD",727.819,727.819,34,21,1,0)
Indicates if the patient is admitted to either a RRTP, PRRTP, or SARRTP at
"^DD",727.819,727.819,34,21,2,0)
the time care is provided.
"^DD",727.819,727.819,34,23,0)
^^5^5^3150611^
"^DD",727.819,727.819,34,23,1,0)
If the patient's treating specialty exists in the DSS TREATING SPECIALTY
"^DD",727.819,727.819,34,23,2,0)
TRANSLATION file (#727.831), data is derived from the DOM/PRRTP/SARRTP
"^DD",727.819,727.819,34,23,3,0)
CODE field (#2) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831).
"^DD",727.819,727.819,34,23,4,0)
 
"^DD",727.819,727.819,34,23,5,0)
Otherwise, the value is null.
"^DD",727.819,727.819,34,"DT")
3120531
"^DD",727.819,727.819,35,0)
OBSERVATION PATIENT INDICATOR^S^NO:NO;YES:YES;^1;9^Q
"^DD",727.819,727.819,35,3)
Enter observation patient status for this record.
"^DD",727.819,727.819,35,21,0)
^.001^1^1^3150709^^^^
"^DD",727.819,727.819,35,21,1,0)
Indicates if patient is considered to be an observation patient.
"^DD",727.819,727.819,35,23,0)
^^12^12^3150709^
"^DD",727.819,727.819,35,23,1,0)
Data (YES, NO) is retrieved from API call $$OBSPAT^ECXUTL4:
"^DD",727.819,727.819,35,23,2,0)
 
"^DD",727.819,727.819,35,23,3,0)
If the patient's treating specialty exists in the DSS TREATING SPECIALTY
"^DD",727.819,727.819,35,23,4,0)
TRANSLATION file (#727.831), data is derived from the OBSERVATION PAT
"^DD",727.819,727.819,35,23,5,0)
INDICATOR field (#4) of the DSS TREATING SPECIALTY TRANSLATION file
"^DD",727.819,727.819,35,23,6,0)
(#727.831).
"^DD",727.819,727.819,35,23,7,0)
 
"^DD",727.819,727.819,35,23,8,0)
If patient is outpatient and treating specialty not in file, AND Feeder
"^DD",727.819,727.819,35,23,9,0)
Key (CLI) or DSS ID (MTL,IVP,ECQ,NOS,SUR) is 290-297, Observation
"^DD",727.819,727.819,35,23,10,0)
Patient Ind=YES.  Else, Observation Patient Ind=NO.
"^DD",727.819,727.819,35,23,11,0)
 
"^DD",727.819,727.819,35,23,12,0)
Otherwise, Observation Patient Ind=NO.
"^DD",727.819,727.819,35,"DT")
3120531
"^DD",727.819,727.819,38,0)
ORDERING STOP CODE^F^^1;12^K:$L(X)>3!($L(X)<3) X
"^DD",727.819,727.819,38,3)
Answer must be 3 characters in length
"^DD",727.819,727.819,38,21,0)
^.001^1^1^3150611^^^
"^DD",727.819,727.819,38,21,1,0)
This field contains the stop code associated with the order.
"^DD",727.819,727.819,38,23,0)
^^19^19^3150611^
"^DD",727.819,727.819,38,23,1,0)
For outpatients the stop code is the primary stop code for the clinic as 
"^DD",727.819,727.819,38,23,2,0)
determined by the AMIS REPORTING STOP CODE field (#1) of the CLINIC STOP
"^DD",727.819,727.819,38,23,3,0)
file (#40.7) as pointed to by the STOP CODE NUMBER field (#8) of the
"^DD",727.819,727.819,38,23,4,0)
HOSPITAL LOCATION file (#44) as pointed to by the CLINIC field (#136) of
"^DD",727.819,727.819,38,23,5,0)
the IV multiple (#100) of the PHARMACY PATIENT file (#55). If none exists,
"^DD",727.819,727.819,38,23,6,0)
the value is set to null.
"^DD",727.819,727.819,38,23,7,0)
 
"^DD",727.819,727.819,38,23,8,0)
For observation patients the stop code is translated using the following
"^DD",727.819,727.819,38,23,9,0)
table.
"^DD",727.819,727.819,38,23,10,0)
 
"^DD",727.819,727.819,38,23,11,0)
Treating Specialty      Observation Stop Code
"^DD",727.819,727.819,38,23,12,0)
       18                      293
"^DD",727.819,727.819,38,23,13,0)
       23                      295
"^DD",727.819,727.819,38,23,14,0)
       24                      290
"^DD",727.819,727.819,38,23,15,0)
       36                      296
"^DD",727.819,727.819,38,23,16,0)
       41                      294
"^DD",727.819,727.819,38,23,17,0)
       65                      291
"^DD",727.819,727.819,38,23,18,0)
       94                      292
"^DD",727.819,727.819,38,23,19,0)
       1J                      297
"^DD",727.819,727.819,38,"DT")
3021002
"^DD",727.819,727.819,57,0)
MST STATUS^S^Y:Yes, screened reports MST;N:Screened, does not report MST;D:Screened, declines to answer;U:Unknown, not screened;^1;31^Q
"^DD",727.819,727.819,57,.1)
MST Status
"^DD",727.819,727.819,57,3)
Enter the patient's MST Status.
"^DD",727.819,727.819,57,21,0)
^.001^2^2^3150611^^^^
"^DD",727.819,727.819,57,21,1,0)
Indicates the Military Sexual Trauma (MST) status of a patient on the date
"^DD",727.819,727.819,57,21,2,0)
of the encounter.
"^DD",727.819,727.819,57,23,0)
^^5^5^3150611^
"^DD",727.819,727.819,57,23,1,0)
The MST HISTORY file (#29.11) holds data regarding military sexual
"^DD",727.819,727.819,57,23,2,0)
trauma claims and effective dates.  The patient's MST status is stored
"^DD",727.819,727.819,57,23,3,0)
in the MST STATUS field (#3).  A call will be made to
"^DD",727.819,727.819,57,23,4,0)
$$GETSTAT^DGMSTAPI(DFN,DGDATE) using the DFN in the PATIENT NO. DFN 
"^DD",727.819,727.819,57,23,5,0)
field (#4) and the date in the DAY field (#8).
"^DD",727.819,727.819,57,"DT")
3120613
"^DD",727.819,727.819,74,0)
USER ENROLLEE^S^U:USER ENROLLED;^2;11^Q
"^DD",727.819,727.819,74,3)
Enter patient's current enrollment status.
"^DD",727.819,727.819,74,21,0)
^.001^2^2^3150611^^^^
"^DD",727.819,727.819,74,21,1,0)
Indicates whether a Veteran has User Enrollee status for the current or 
"^DD",727.819,727.819,74,21,2,0)
future fiscal year.
"^DD",727.819,727.819,74,23,0)
^^5^5^3150611^
"^DD",727.819,727.819,74,23,1,0)
User enrollee is determined by checking the PATIENT ENROLLMENT file
"^DD",727.819,727.819,74,23,2,0)
(#27.11). When a user has a current or future fiscal year in the VistA
"^DD",727.819,727.819,74,23,3,0)
ENROLLMENT STATUS field (#.04) the value is set to 'U' and Null if no date
"^DD",727.819,727.819,74,23,4,0)
or a past year's value is contained. Determined by the use of an API:
"^DD",727.819,727.819,74,23,5,0)
$$UESTAT^EASUSER where the Patient Identifier (DFN) is passed in.
"^DD",727.819,727.819,74,"DT")
3120608
"^DD",727.819,727.819,82,0)
OEF/OIF^F^^2;19^K:$L(X)>9!($L(X)<1) X
"^DD",727.819,727.819,82,3)
Answer must be 1-9 characters in length.
"^DD",727.819,727.819,82,21,0)
^.001^3^3^3150611^^
"^DD",727.819,727.819,82,21,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.819,727.819,82,21,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.819,727.819,82,21,3,0)
reflects the OEF or OIF where this patient was in combat.
"^DD",727.819,727.819,82,23,0)
^^12^12^3150611^
"^DD",727.819,727.819,82,23,1,0)
The Military Operation in which the patient was in combat during the 
"^DD",727.819,727.819,82,23,2,0)
specified time period. This field is a length of nine characters and 
"^DD",727.819,727.819,82,23,3,0)
reflects the OEF or OIF where this patient was in combat.  The value of 
"^DD",727.819,727.819,82,23,4,0)
this field is derived from the LOCATION OF SERVICE field (#.01) from the 
"^DD",727.819,727.819,82,23,5,0)
SERVICE [OEF OR OIF] sub-file (#2.3215) of field (#.3215) located in the 
"^DD",727.819,727.819,82,23,6,0)
PATIENT file (#2).  DSS will capture once, each location where the 
"^DD",727.819,727.819,82,23,7,0)
veteran served. In order to accommodate multiple locations, the values 
"^DD",727.819,727.819,82,23,8,0)
for this field are concatenated into this 9-character field. Possible 
"^DD",727.819,727.819,82,23,9,0)
field values are one or more combinations of the following: 
"^DD",727.819,727.819,82,23,10,0)
OEF =  Operation Enduring Freedom
"^DD",727.819,727.819,82,23,11,0)
OIF  =  Operation Iraqi Freedom
"^DD",727.819,727.819,82,23,12,0)
UNK =  Unknown OEF/OIF
"^DD",727.819,727.819,82,"DT")
3070502
"^DD",727.819,727.819,83,0)
OEF/OIF RETURN DATE^F^^2;20^K:$L(X)>8!($L(X)<1) X
"^DD",727.819,727.819,83,3)
Answer must be 1-8 characters in length.
"^DD",727.819,727.819,83,21,0)
^.001^3^3^3150611^^
"^DD",727.819,727.819,83,21,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is 
"^DD",727.819,727.819,83,21,2,0)
the end date of military pay for this OEF/OIF deployment. This date field 
"^DD",727.819,727.819,83,21,3,0)
has a format equal to YYYYMMDD. 
"^DD",727.819,727.819,83,23,0)
^^6^6^3150611^
"^DD",727.819,727.819,83,23,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is 
"^DD",727.819,727.819,83,23,2,0)
the end date of military pay for this OEF/OIF deployment. This date field 
"^DD",727.819,727.819,83,23,3,0)
has a format equal to YYYYMMDD.  The value of this field is derived from 
"^DD",727.819,727.819,83,23,4,0)
the OEF/OIF TO DATE field (#.03) from the SERVICE [OEF OR OIF] sub-file
"^DD",727.819,727.819,83,23,5,0)
(#2.3215) of field (#.3215) located in the PATIENT file (#2).  In cases of
"^DD",727.819,727.819,83,23,6,0)
multiple OEF/OIF tours, this field contains only most recent return date.
"^DD",727.819,727.819,83,"DT")
3070502
"^DD",727.819,727.819,87,0)
COUNTRY CODE^F^^2;24^K:$L(X)>3!($L(X)<1) X
"^DD",727.819,727.819,87,3)
The code for the country.  Answer must be 1-3 characters in length.
"^DD",727.819,727.819,87,21,0)
^.001^1^1^3150611^^^^
"^DD",727.819,727.819,87,21,1,0)
This is the code for the country associated with the address.
"^DD",727.819,727.819,87,23,0)
^^2^2^3150611^
"^DD",727.819,727.819,87,23,1,0)
The three-character alpha identifying code is copied from the CODE field
"^DD",727.819,727.819,87,23,2,0)
(#.01) of the COUNTRY file (#779.004).
"^DD",727.819,727.819,87,"DT")
3090609
"^DD",727.819,727.819,88,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^2;25^Q
"^DD",727.819,727.819,88,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.819,727.819,88,21,0)
^.001^6^6^3150611^^^
"^DD",727.819,727.819,88,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.819,727.819,88,21,2,0)
Care Center) Reconciliation.
"^DD",727.819,727.819,88,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.819,727.819,88,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.819,727.819,88,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.819,727.819,88,21,6,0)
pays for.
"^DD",727.819,727.819,88,23,0)
^^7^7^3150611^
"^DD",727.819,727.819,88,23,1,0)
If the VistA Patient Type Code (TYPE field (#391) of the PATIENT file (#2)
"^DD",727.819,727.819,88,23,2,0)
) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.819,727.819,88,23,3,0)
the VistA Other Eligibility multiple (PATIENT ELIGIBILITIES field (#361) 
"^DD",727.819,727.819,88,23,4,0)
of the PATIENT file (#2)), which points to locally modifiable ELIGIBILITY
"^DD",727.819,727.819,88,23,5,0)
CODE file (#8) should be evaluated. If the value in the ELIGIBILITY CODE
"^DD",727.819,727.819,88,23,6,0)
is equal to any entry in the set of codes in this field, the value should
"^DD",727.819,727.819,88,23,7,0)
be placed in this field.
"^DD",727.819,727.819,88,"DT")
3100903
"^DD",727.824,727.824,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;^0;8^Q
"^DD",727.824,727.824,7,.1)
In Out Patient Indicator
"^DD",727.824,727.824,7,3)
Enter the patient's status for this extract entry.
"^DD",727.824,727.824,7,21,0)
^.001^2^2^3150609^^^^
"^DD",727.824,727.824,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this 
"^DD",727.824,727.824,7,21,2,0)
extract entry.
"^DD",727.824,727.824,7,23,0)
^^10^10^3150609^
"^DD",727.824,727.824,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.824,727.824,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine 
"^DD",727.824,727.824,7,23,3,0)
inpatient/outpatient status.  If the patient is an outpatient, processing 
"^DD",727.824,727.824,7,23,4,0)
stops and the field is set to O.   If the patient is an inpatient then 
"^DD",727.824,727.824,7,23,5,0)
$$INOUTP^ECXUTL4 is called to look at the treating specialty.  If the 
"^DD",727.824,727.824,7,23,6,0)
patient's treating specialty exists in the DSS TREATING SPECIALTY 
"^DD",727.824,727.824,7,23,7,0)
TRANSLATION file (#727.831) then the value of the INPAT/OUTPAT CODE field 
"^DD",727.824,727.824,7,23,8,0)
(#5) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831) is used.  
"^DD",727.824,727.824,7,23,9,0)
If the treating specialty is not found in the DSS TREATING SPECIALTY 
"^DD",727.824,727.824,7,23,10,0)
TRANSLATION file (#727.831) then the indicator is set to I.
"^DD",727.824,727.824,7,"DT")
3120515
"^DD",727.824,727.824,19,0)
WORKLOAD CODE^F^^0;19^K:$L(X)>11!($L(X)<1) X
"^DD",727.824,727.824,19,.1)
Workload Code
"^DD",727.824,727.824,19,3)
Enter the workload code for this event.
"^DD",727.824,727.824,19,21,0)
^.001^2^2^3150609^^^^
"^DD",727.824,727.824,19,21,1,0)
The LMIP/NLT workload code for this record. May correspond to a College of
"^DD",727.824,727.824,19,21,2,0)
American Pathologists (CAP) code.
"^DD",727.824,727.824,19,23,0)
^^4^4^3150609^
"^DD",727.824,727.824,19,23,1,0)
WKLD CODE field (#1) of the WKLD CODE file (#64) as pointed to by the 
"^DD",727.824,727.824,19,23,2,0)
NATIONAL VA LAB CODE field (#64) of the LABORATORY TEST file (#60) as
"^DD",727.824,727.824,19,23,3,0)
pointed to by the LOCAL LAB TEST NAME multiple (#1)
"^DD",727.824,727.824,19,23,4,0)
within the DSS LAB TEST multiple (#1) of the DSS LAB TESTS file (#727.2).
"^DD",727.824,727.824,19,"DT")
3120515
"^DD",727.824,727.824,22,0)
DOM,PRRTP AND SAARTP INDICATOR^S^P:GEN. PRRTP;T:PTSD PRRTP;S:DOM. PRRTP;H:HOMELESS CWT/TR;A:SA CWT/TR;D:DOMICILIARY;B:PTSD CWT/TR;C:GEN. CET/TR;^1;3^Q
"^DD",727.824,727.824,22,3)
Enter the indicator associated with the treating specialty assigned to this record.
"^DD",727.824,727.824,22,21,0)
^.001^2^2^3150609^^^^
"^DD",727.824,727.824,22,21,1,0)
Indicates if the patient is admitted to either a RRTP, PRRTP or SARRTP at 
"^DD",727.824,727.824,22,21,2,0)
time care is provided.
"^DD",727.824,727.824,22,23,0)
^^5^5^3150609^
"^DD",727.824,727.824,22,23,1,0)
If the patient's treating specialty exists in the DSS TREATING SPECIALTY
"^DD",727.824,727.824,22,23,2,0)
TRANSLATION file (#727.831), data is derived from the DOM/PRRTP/SARRTP
"^DD",727.824,727.824,22,23,3,0)
CODE field (#2) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831).
"^DD",727.824,727.824,22,23,4,0)
 
"^DD",727.824,727.824,22,23,5,0)
Otherwise, the value is null.
"^DD",727.824,727.824,22,"DT")
3120515
"^DD",727.824,727.824,24,0)
OBSERVATION PATIENT INDICATOR^S^NO:NO;YES:YES;^1;5^Q
"^DD",727.824,727.824,24,3)
Enter observation patient status for this record.
"^DD",727.824,727.824,24,21,0)
^.001^1^1^3150709^^^^
"^DD",727.824,727.824,24,21,1,0)
Indicates if patient is considered to be an observation patient.
"^DD",727.824,727.824,24,23,0)
^^12^12^3150709^
"^DD",727.824,727.824,24,23,1,0)
Data (YES, NO) is retrieved from API call $$OBSPAT^ECXUTL4:
"^DD",727.824,727.824,24,23,2,0)
 
"^DD",727.824,727.824,24,23,3,0)
If the patient's treating specialty exists in the DSS TREATING SPECIALTY
"^DD",727.824,727.824,24,23,4,0)
TRANSLATION file (#727.831), data is derived from the OBSERVATION PAT
"^DD",727.824,727.824,24,23,5,0)
INDICATOR field (#4) of the DSS TREATING SPECIALTY TRANSLATION file
"^DD",727.824,727.824,24,23,6,0)
(#727.831).
"^DD",727.824,727.824,24,23,7,0)
 
"^DD",727.824,727.824,24,23,8,0)
If patient is outpatient and treating specialty not in file, AND Feeder
"^DD",727.824,727.824,24,23,9,0)
Key (CLI) or DSS ID (MTL,IVP,ECQ,NOS,SUR) is 290-297, Observation
"^DD",727.824,727.824,24,23,10,0)
Patient Ind=YES.  Else, Observation Patient Ind=NO.
"^DD",727.824,727.824,24,23,11,0)
 
"^DD",727.824,727.824,24,23,12,0)
Otherwise, Observation Patient Ind=NO.
"^DD",727.824,727.824,24,"DT")
3120515
"^DD",727.824,727.824,32,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^1;13^Q
"^DD",727.824,727.824,32,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.824,727.824,32,21,0)
^.001^6^6^3150609^^^
"^DD",727.824,727.824,32,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.824,727.824,32,21,2,0)
Care Center) Reconciliation.
"^DD",727.824,727.824,32,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.824,727.824,32,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.824,727.824,32,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.824,727.824,32,21,6,0)
pays for.
"^DD",727.824,727.824,32,23,0)
^^7^7^3150609^
"^DD",727.824,727.824,32,23,1,0)
If the VistA Patient Type Code (TYPE field (#391) of the PATIENT file (#2)
"^DD",727.824,727.824,32,23,2,0)
) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.824,727.824,32,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES field (#361) 
"^DD",727.824,727.824,32,23,4,0)
of the PATIENT file (#2)), which points to locally modifiable ELIGIBILITY
"^DD",727.824,727.824,32,23,5,0)
CODE file (#8) should be evaluated. If the value in the
"^DD",727.824,727.824,32,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.824,727.824,32,23,7,0)
the value should be placed in this field.
"^DD",727.824,727.824,32,"DT")
3100903
"^DD",727.825,727.825,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.825,727.825,1,.1)
Year/Month
"^DD",727.825,727.825,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.825,727.825,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.825,727.825,1,3)
Answer must be 6 characters in length.
"^DD",727.825,727.825,1,21,0)
^.001^2^2^3150520^^^^
"^DD",727.825,727.825,1,21,1,0)
A six character string representing the year and the month
"^DD",727.825,727.825,1,21,2,0)
for which this extract was performed.
"^DD",727.825,727.825,1,23,0)
^^6^6^3150520^
"^DD",727.825,727.825,1,23,1,0)
YEAR MONTH is derived by parsing the fileman format end date of the 
"^DD",727.825,727.825,1,23,2,0)
extract. The month is determined by taking the 4th and 5th characters of
"^DD",727.825,727.825,1,23,3,0)
the end date, the year by taking the 2nd and 3rd characters, and the
"^DD",727.825,727.825,1,23,4,0)
century is then calculated by taking the 1st character of the end date,
"^DD",727.825,727.825,1,23,5,0)
and adding 17 to  it. The century is then concatenated with the year and
"^DD",727.825,727.825,1,23,6,0)
month, giving the results in YYYYMM format.
"^DD",727.825,727.825,1,"DT")
2970924
"^DD",727.825,727.825,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9)!'(X?9N!X?9N1"P") X
"^DD",727.825,727.825,5,.1)
Social Security Number
"^DD",727.825,727.825,5,3)
Enter the social security number for this patient's extract record.
"^DD",727.825,727.825,5,21,0)
^.001^1^1^3150520^^^^
"^DD",727.825,727.825,5,21,1,0)
The patient's social security number.
"^DD",727.825,727.825,5,23,0)
^^5^5^3150520^
"^DD",727.825,727.825,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field 
"^DD",727.825,727.825,5,23,2,0)
(#4) in the QUASAR EXTRACT file (#727.825), SSN data is derived from 
"^DD",727.825,727.825,5,23,3,0)
the SOCIAL SECURITY NUMBER field (#.09) in the PATIENT file (#2).
"^DD",727.825,727.825,5,23,4,0)
 
"^DD",727.825,727.825,5,23,5,0)
"Test" patient status is determined in PAT^ECXUTL3.
"^DD",727.825,727.825,5,"DT")
2910802
"^DD",727.825,727.825,7,0)
IN OUT PATIENT INDICATOR^F^^0;8^K:$L(X)>1!($L(X)<1) X
"^DD",727.825,727.825,7,.1)
In Out Patient Indicator
"^DD",727.825,727.825,7,3)
Answer must be 1 character in length.
"^DD",727.825,727.825,7,21,0)
^.001^2^2^3150520^^^
"^DD",727.825,727.825,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this 
"^DD",727.825,727.825,7,21,2,0)
extract.
"^DD",727.825,727.825,7,23,0)
^^14^14^3150520^
"^DD",727.825,727.825,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.825,727.825,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine 
"^DD",727.825,727.825,7,23,3,0)
inpatient/outpatient status.  If the patient is an outpatient, processing 
"^DD",727.825,727.825,7,23,4,0)
stops and the field is set to O.   If the patient is an inpatient then 
"^DD",727.825,727.825,7,23,5,0)
$$INOUTP^ECXUTL4 is called to look at the treating specialty.  If the 
"^DD",727.825,727.825,7,23,6,0)
patient's treating specialty exists in the DSS TREATING SPECIALTY 
"^DD",727.825,727.825,7,23,7,0)
TRANSLATION file (#727.831) then the value of the INPAT/OUTPAT CODE field
"^DD",727.825,727.825,7,23,8,0)
(#5) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831) is used.  
"^DD",727.825,727.825,7,23,9,0)
If the treating specialty is not found in the DSS TREATING SPECIALTY 
"^DD",727.825,727.825,7,23,10,0)
TRANSLATION file (#727.831) then the indicator is set to I.
"^DD",727.825,727.825,7,23,11,0)
 
"^DD",727.825,727.825,7,23,12,0)
This field should be a set of codes, with I for INPATIENT and O for
"^DD",727.825,727.825,7,23,13,0)
OUTPATIENT, but due to FileMan limitations for data on this node, the 
"^DD",727.825,727.825,7,23,14,0)
field is being left as free text.
"^DD",727.825,727.825,7,"DT")
3011129
"^DD",727.825,727.825,61,0)
OBSERVATION PATIENT INDICATOR^S^NO:NO;YES:YES;^1;20^Q
"^DD",727.825,727.825,61,3)
Enter observation patient status for this record.
"^DD",727.825,727.825,61,21,0)
^.001^1^1^3150709^^^^
"^DD",727.825,727.825,61,21,1,0)
Indicates if patient is considered to be an observation patient.
"^DD",727.825,727.825,61,23,0)
^^12^12^3150709^
"^DD",727.825,727.825,61,23,1,0)
Data (YES, NO) is retrieved from API call $$OBSPAT^ECXUTL4:
"^DD",727.825,727.825,61,23,2,0)
 
"^DD",727.825,727.825,61,23,3,0)
If the patient's treating specialty exists in the DSS TREATING SPECIALTY
"^DD",727.825,727.825,61,23,4,0)
TRANSLATION file (#727.831), data is derived from the OBSERVATION PAT
"^DD",727.825,727.825,61,23,5,0)
INDICATOR field (#4) of the DSS TREATING SPECIALTY TRANSLATION file
"^DD",727.825,727.825,61,23,6,0)
(#727.831).
"^DD",727.825,727.825,61,23,7,0)
 
"^DD",727.825,727.825,61,23,8,0)
If patient is outpatient and treating specialty not in file, AND Feeder
"^DD",727.825,727.825,61,23,9,0)
Key (CLI) or DSS ID (MTL,IVP,ECQ,NOS,SUR) is 290-297, Observation
"^DD",727.825,727.825,61,23,10,0)
Patient Ind=YES.  Else, Observation Patient Ind=NO.
"^DD",727.825,727.825,61,23,11,0)
 
"^DD",727.825,727.825,61,23,12,0)
Otherwise, Observation Patient Ind=NO.  
"^DD",727.825,727.825,61,"DT")
3120606
"^DD",727.825,727.825,77,0)
USER ENROLLEE^S^U:USER ENROLLED;^1;36^Q
"^DD",727.825,727.825,77,3)
Enter patient's current enrollment status.
"^DD",727.825,727.825,77,21,0)
^.001^2^2^3150526^^^^
"^DD",727.825,727.825,77,21,1,0)
Indicates whether a Veteran has User Enrollee status for the current or 
"^DD",727.825,727.825,77,21,2,0)
future fiscal year.
"^DD",727.825,727.825,77,23,0)
^^5^5^3150526^
"^DD",727.825,727.825,77,23,1,0)
User enrollee is determined by checking the Patient Enrollment (#27.11) 
"^DD",727.825,727.825,77,23,2,0)
file. When a user has a current or future fiscal year in the VistA User
"^DD",727.825,727.825,77,23,3,0)
Enrollee Status field (#.04) the value is set to 'U' and Null if no date
"^DD",727.825,727.825,77,23,4,0)
or a past year's value is contained. Determined by the use of an API:
"^DD",727.825,727.825,77,23,5,0)
$$UESTAT^EASUSER where the Patient Identifier (DFN) is passed in.
"^DD",727.825,727.825,77,"DT")
3120613
"^DD",727.825,727.825,89,0)
PLACEHOLDER^F^^2;10^K:$L(X)>8!($L(X)<8) X
"^DD",727.825,727.825,89,3)
Answer must be 8 characters in length.
"^DD",727.825,727.825,89,21,0)
^.001^1^1^3150518^^
"^DD",727.825,727.825,89,21,1,0)
Currently Null
"^DD",727.825,727.825,89,23,0)
^.001^1^1^3150518^^^^
"^DD",727.825,727.825,89,23,1,0)
Currently NULL.  
"^DD",727.825,727.825,89,"DT")
3150211
"^DD",727.825,727.825,106,0)
PRIMARY ICD-10 CODE^F^^2;27^K:$L(X)>8!($L(X)<1) X
"^DD",727.825,727.825,106,3)
Enter the ICD-10 code for this visit (1-8 characters).
"^DD",727.825,727.825,106,21,0)
^.001^1^1^3150527^^^^
"^DD",727.825,727.825,106,21,1,0)
The primary ICD-10 diagnosis code for this clinic visit.
"^DD",727.825,727.825,106,23,0)
^.001^3^3^3150527^^^^
"^DD",727.825,727.825,106,23,1,0)
ICD-10 CODE is derived from the DIAGNOSTIC CODE field (#.01) and PRIMARY
"^DD",727.825,727.825,106,23,2,0)
DIAGNOSIS field (#.12) of the DIAGNOSTIC CODE multiple field (#3) in the
"^DD",727.825,727.825,106,23,3,0)
A&SP CLINIC VISIT file (#509850.6).
"^DD",727.825,727.825,106,"DT")
3120304
"^DD",727.825,727.825,107,0)
SECONDARY ICD-10 CODE #1^F^^2;28^K:$L(X)>8!($L(X)<1) X
"^DD",727.825,727.825,107,3)
Enter the secondary ICD-10 code for this visit (1-8 characters).
"^DD",727.825,727.825,107,21,0)
^.001^1^1^3150527^^^^
"^DD",727.825,727.825,107,21,1,0)
The first secondary ICD-10 code for this clinic visit.
"^DD",727.825,727.825,107,23,0)
^.001^3^3^3150527^^
"^DD",727.825,727.825,107,23,1,0)
SECONDARY ICD-10 CODE #1 is derived from the DIAGNOSTIC CODE field (#.01)
"^DD",727.825,727.825,107,23,2,0)
and PRIMARY DIAGNOSIS field (#.12) of the DIAGNOSTIC CODE multiple field
"^DD",727.825,727.825,107,23,3,0)
(#3) in the A&SP CLINIC VISIT file (#509850.6).
"^DD",727.825,727.825,107,"DT")
3120304
"^DD",727.825,727.825,108,0)
SECONDARY ICD-10 CODE #2^F^^2;29^K:$L(X)>8!($L(X)<1) X
"^DD",727.825,727.825,108,3)
Enter the secondary ICD-10 code for this visit (1-8 characters).
"^DD",727.825,727.825,108,21,0)
^.001^1^1^3150527^^^^
"^DD",727.825,727.825,108,21,1,0)
The second secondary ICD-10 code for this clinic visit.
"^DD",727.825,727.825,108,23,0)
^.001^3^3^3150527^^
"^DD",727.825,727.825,108,23,1,0)
SECONDARY ICD-10 CODE #2 is derived from the DIAGNOSTIC CODE field (#.01)
"^DD",727.825,727.825,108,23,2,0)
and PRIMARY DIAGNOSIS field (#.12) of the DIAGNOSTIC CODE multiple field
"^DD",727.825,727.825,108,23,3,0)
(#3) in the A&SP CLINIC VISIT file (#509850.6).
"^DD",727.825,727.825,108,"DT")
3120304
"^DD",727.825,727.825,109,0)
SECONDARY ICD-10 CODE #3^F^^2;30^K:$L(X)>8!($L(X)<1) X
"^DD",727.825,727.825,109,3)
Enter the secondary ICD-10 code for this visit (1-8 characters).
"^DD",727.825,727.825,109,21,0)
^.001^1^1^3150527^^^^
"^DD",727.825,727.825,109,21,1,0)
The third secondary ICD-10 code for this clinic visit.
"^DD",727.825,727.825,109,23,0)
^.001^3^3^3150527^^
"^DD",727.825,727.825,109,23,1,0)
SECONDARY ICD-10 CODE #3 is derived from the DIAGNOSTIC CODE field (#.01)
"^DD",727.825,727.825,109,23,2,0)
and PRIMARY DIAGNOSIS field (#.12) of the DIAGNOSTIC CODE multiple field
"^DD",727.825,727.825,109,23,3,0)
(#3) in the A&SP CLINIC VISIT file (#509850.6).
"^DD",727.825,727.825,109,"DT")
3120304
"^DD",727.825,727.825,110,0)
SECONDARY ICD-10 CODE #4^F^^3;1^K:$L(X)>8!($L(X)<1) X
"^DD",727.825,727.825,110,3)
Enter the secondary ICD-10 code for this visit (1-8 characters).
"^DD",727.825,727.825,110,21,0)
^.001^1^1^3150527^^^^
"^DD",727.825,727.825,110,21,1,0)
The fourth secondary ICD-10 code for this clinic visit.
"^DD",727.825,727.825,110,23,0)
^.001^3^3^3150527^^
"^DD",727.825,727.825,110,23,1,0)
SECONDARY ICD-10 CODE #4 is derived from the DIAGNOSTIC CODE field (#.01)
"^DD",727.825,727.825,110,23,2,0)
and PRIMARY DIAGNOSIS field (#.12) of the DIAGNOSTIC CODE multiple field
"^DD",727.825,727.825,110,23,3,0)
(#3) in the A&SP CLINIC VISIT file (#509850.6).
"^DD",727.825,727.825,110,"DT")
3120304
"^DD",727.825,727.825,119,0)
4CHAR^F^^3;10^K:$L(X)>4!($L(X)<1) X
"^DD",727.825,727.825,119,3)
Answer must be 1-4 characters in length.
"^DD",727.825,727.825,119,21,0)
^^4^4^3150420^
"^DD",727.825,727.825,119,21,1,0)
A 4-character code value of the associated clinic as specified from the
"^DD",727.825,727.825,119,21,2,0)
DSS Clinics and Stop Code Worksheet File if the record is sent to PCE.  
"^DD",727.825,727.825,119,21,3,0)
If the record does not get sent to PCE then the code comes from the DSS 
"^DD",727.825,727.825,119,21,4,0)
UNIT associated with this record.
"^DD",727.825,727.825,119,23,0)
^^12^12^3150420^
"^DD",727.825,727.825,119,23,1,0)
If the record is sent to PCE then 4CHAR is determined by using the CLINIC
"^DD",727.825,727.825,119,23,2,0)
IEN field (#120) of this file to retrieve the NATIONAL CODE field (#7)
"^DD",727.825,727.825,119,23,3,0)
from the CLINICS AND STOP CODES file (#728.44).  The NATIONAL CODE (#7)
"^DD",727.825,727.825,119,23,4,0)
field points to the NATIONAL CLINIC (#728.441) file.  
"^DD",727.825,727.825,119,23,5,0)
 
"^DD",727.825,727.825,119,23,6,0)
If the record is not sent to PCE then 4CHAR is determined by using the 
"^DD",727.825,727.825,119,23,7,0)
DSS UNIT field (#9) of this file to retrieve the CHAR4 field (#15) of the 
"^DD",727.825,727.825,119,23,8,0)
DSS UNIT file (#724).  The CHAR4 field (#15) points to the NATIONAL 
"^DD",727.825,727.825,119,23,9,0)
CLINIC (#728.441) file.
"^DD",727.825,727.825,119,23,10,0)
 
"^DD",727.825,727.825,119,23,11,0)
This field is a copy of the CODE (#.01) field of the NATIONAL CLINIC file
"^DD",727.825,727.825,119,23,12,0)
(#728.441).
"^DD",727.825,727.825,119,"DT")
3130310
"^DD",727.825,727.825,120,0)
PLACEHOLDER^P44'O^SC(^3;11^Q
"^DD",727.825,727.825,120,2)
S Y(0)=Y S X=Y(0),X=X S Y=X
"^DD",727.825,727.825,120,2.1)
INTERNAL(CLINIC IEN)
"^DD",727.825,727.825,120,3)
Enter a Hospital location.
"^DD",727.825,727.825,120,21,0)
^.001^1^1^3150520^^^^
"^DD",727.825,727.825,120,21,1,0)
Currently Null.
"^DD",727.825,727.825,120,23,0)
^.001^1^1^3150520^^^^
"^DD",727.825,727.825,120,23,1,0)
Currently null.
"^DD",727.825,727.825,120,"DT")
3150211
"^DD",727.825,727.825,128,0)
CLINIC IEN^*P44'^SC(^3;19^I $P(^(0),"^",3)="C" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",727.825,727.825,128,3)
Enter the clinic associated with this Event Capture record.
"^DD",727.825,727.825,128,12)
Verify Information
"^DD",727.825,727.825,128,12.1)
I $P(^(0),"^",3)="C"
"^DD",727.825,727.825,128,21,0)
^^1^1^3150211^
"^DD",727.825,727.825,128,21,1,0)
The Associated Clinic of the Event Capture (EC) Procedure.
"^DD",727.825,727.825,128,23,0)
^^4^4^3150211^
"^DD",727.825,727.825,128,23,1,0)
CLINIC IEN is retrieved from the ASSOCIATED CLINIC field (#26) of the 
"^DD",727.825,727.825,128,23,2,0)
EVENT CAPTURE PATIENT file (#721). The value stored here is a copy of the 
"^DD",727.825,727.825,128,23,3,0)
value stored in the ASSOCIATED CLINIC field (#26) of the EVENT CAPTURE 
"^DD",727.825,727.825,128,23,4,0)
PATIENT file (#721).
"^DD",727.825,727.825,128,"DT")
3150211
"^DD",727.826,727.826,7,0)
IN OUTPATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;^0;8^Q
"^DD",727.826,727.826,7,.1)
IN Outpatient Indicator
"^DD",727.826,727.826,7,3)
Enter the patient's status for this extract entry.
"^DD",727.826,727.826,7,10)

"^DD",727.826,727.826,7,21,0)
^.001^2^2^3150612^^
"^DD",727.826,727.826,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this
"^DD",727.826,727.826,7,21,2,0)
extract.
"^DD",727.826,727.826,7,23,0)
^^10^10^3150612^
"^DD",727.826,727.826,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.826,727.826,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine 
"^DD",727.826,727.826,7,23,3,0)
inpatient/outpatient status.  If the patient is an outpatient, processing 
"^DD",727.826,727.826,7,23,4,0)
stops and the field is set to O.   If the patient is an inpatient then 
"^DD",727.826,727.826,7,23,5,0)
$$INOUTP^ECXUTL4 is called to look at the treating specialty.  If the 
"^DD",727.826,727.826,7,23,6,0)
patient's treating specialty exists in the DSS TREATING SPECIALTY 
"^DD",727.826,727.826,7,23,7,0)
TRANSLATION file (#727.831) then the value of the INPAT/OUTPAT CODE field 
"^DD",727.826,727.826,7,23,8,0)
(#5) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831) is used.  
"^DD",727.826,727.826,7,23,9,0)
If the treating specialty is not found in the DSS TREATING SPECIALTY 
"^DD",727.826,727.826,7,23,10,0)
TRANSLATION file (#727.831) then the indicator is set to I.
"^DD",727.826,727.826,7,"DT")
3120608
"^DD",727.826,727.826,8,0)
DATE OF SERVICE^RFO^^0;9^K:$L(X)>8!($L(X)<8)!'(X?8N) X
"^DD",727.826,727.826,8,.1)
Date of Service
"^DD",727.826,727.826,8,1,0)
^.1
"^DD",727.826,727.826,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.826,727.826,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.826,727.826,8,3)
Enter the delivery date of the patient's prosthetic appliance.
"^DD",727.826,727.826,8,10)
The DELIVERY DATE (#10) in the RECORD OF PROS APPLIANCE/REPAIR file (#660).
"^DD",727.826,727.826,8,21,0)
^.001^2^2^3150612^^^^
"^DD",727.826,727.826,8,21,1,0)
Date on which the new or repaired prosthetic appliance was delivered and 
"^DD",727.826,727.826,8,21,2,0)
accepted by the patient.
"^DD",727.826,727.826,8,23,0)
^^4^4^3150612^
"^DD",727.826,727.826,8,23,1,0)
DATE OF SERVICE is derived from the DELIVERY DATE field (#10) in the
"^DD",727.826,727.826,8,23,2,0)
RECORD OF PROS APPLIANCE/REPAIR file (#660).  This field is always exactly
"^DD",727.826,727.826,8,23,3,0)
8 numeric characters in length.  The format is YYYYMMDD; for example,
"^DD",727.826,727.826,8,23,4,0)
19970923.
"^DD",727.826,727.826,8,"DT")
2980722
"^DD",727.826,727.826,10,0)
FEEDER KEY^RF^^0;11^K:$L(X)>20!($L(X)<7) X
"^DD",727.826,727.826,10,.1)
Feeder Key
"^DD",727.826,727.826,10,3)
Answer must be 7-20 characters in length.
"^DD",727.826,727.826,10,10)
Data in the RECORD OF PROS APPLIANCE/REPAIR file (#660).  See Technical Description.
"^DD",727.826,727.826,10,21,0)
^.001^1^1^3150622^^^^
"^DD",727.826,727.826,10,21,1,0)
Code that uniquely identifies a DSS product.
"^DD",727.826,727.826,10,23,0)
^^59^59^3150622^
"^DD",727.826,727.826,10,23,1,0)
FEEDER KEY is the concatenation of the following elements.  They are 
"^DD",727.826,727.826,10,23,2,0)
listed in the order they are to appear in the FEEDER KEY.
"^DD",727.826,727.826,10,23,3,0)
 
"^DD",727.826,727.826,10,23,4,0)
 1) HCPCS Code - This is the 5-digit HCPCS Code in the patient's
"^DD",727.826,727.826,10,23,5,0)
    prosthetic record.
"^DD",727.826,727.826,10,23,6,0)
 
"^DD",727.826,727.826,10,23,7,0)
 2) Type of Transaction - This is the Type of Transaction code in the
"^DD",727.826,727.826,10,23,8,0)
    patient's prosthetic record.
"^DD",727.826,727.826,10,23,9,0)
   (a) If Type of Transaction in the patient's prosthetic record is "X"
"^DD",727.826,727.826,10,23,10,0)
       (Repair), the Type of Transaction code in the FEEDER KEY is X.
"^DD",727.826,727.826,10,23,11,0)
   (b) If the Type of Transaction in the patient's prosthetic record is 
"^DD",727.826,727.826,10,23,12,0)
       "I" (Initial Issue),  "R" (Replace) or "S" (Spare), the Type of
"^DD",727.826,727.826,10,23,13,0)
       Transaction code in the FEEDER KEY is N.
"^DD",727.826,727.826,10,23,14,0)
   (c) If the Type of Transaction in the patient's prosthetic record is
"^DD",727.826,727.826,10,23,15,0)
       "5" (Rental), the Type of Transaction code in the FEEDER KEY is R.
"^DD",727.826,727.826,10,23,16,0)
   (d) Type of Transaction is considered the first suffix of the FEEDER
"^DD",727.826,727.826,10,23,17,0)
       KEY.
"^DD",727.826,727.826,10,23,18,0)
 3) Source - This is the Source in the patient's prosthetic record.
"^DD",727.826,727.826,10,23,19,0)
   (a) If Source in the patient's prosthetic record is VA, the Source code
"^DD",727.826,727.826,10,23,20,0)
       in the FEEDER KEY is V (VA).
"^DD",727.826,727.826,10,23,21,0)
   (b) If Source in the patient's prosthetic record is Commercial, the
"^DD",727.826,727.826,10,23,22,0)
       Source code in the FEEDER KEY is C (Commercial).
"^DD",727.826,727.826,10,23,23,0)
   (c) Source is considered the second suffix of the FEEDER KEY.
"^DD",727.826,727.826,10,23,24,0)
 
"^DD",727.826,727.826,10,23,25,0)
 4) Station - If this is a Lab Transaction, the station is either the
"^DD",727.826,727.826,10,23,26,0)
    Requesting or Receiving Station.  
"^DD",727.826,727.826,10,23,27,0)
   (a) 3-digit Receiving Station concatenated with REC if the FEEDER
"^DD",727.826,727.826,10,23,28,0)
       LOCATION ends in ORD, or
"^DD",727.826,727.826,10,23,29,0)
   (b) 5-digit Receiving Station (includes the 2-letter division suffix)
"^DD",727.826,727.826,10,23,30,0)
       concatenated with REC if the FEEDER LOCATION ends in ORD, or
"^DD",727.826,727.826,10,23,31,0)
   (c) 3-digit Requesting Station concatenated with REQ if the FEEDER
"^DD",727.826,727.826,10,23,32,0)
       LOCATION ends in LAB, or
"^DD",727.826,727.826,10,23,33,0)
   (d) 5-digit Requesting Station (includes the 2-letter division suffix)
"^DD",727.826,727.826,10,23,34,0)
       concatenated with REQ if the FEEDER LOCATION ends in LAB.
"^DD",727.826,727.826,10,23,35,0)
   (e) Station is considered the third suffix of the FEEDER KEY.
"^DD",727.826,727.826,10,23,36,0)
 
"^DD",727.826,727.826,10,23,37,0)
 5) If this is a Non-Lab Transaction, there is no third suffix for the
"^DD",727.826,727.826,10,23,38,0)
    FEEDER KEY.
"^DD",727.826,727.826,10,23,39,0)
 
"^DD",727.826,727.826,10,23,40,0)
 6) Form requested on - If the form requested on is 11 (Stock Issue) then
"^DD",727.826,727.826,10,23,41,0)
    an "S" is concatenated to the FEEDER KEY.  If the form requested on
"^DD",727.826,727.826,10,23,42,0)
    is 12 (Inventory Issue) then an "I" is concatenated to the FEEDER
"^DD",727.826,727.826,10,23,43,0)
    KEY.
"^DD",727.826,727.826,10,23,44,0)
 
"^DD",727.826,727.826,10,23,45,0)
Data for the FEEDER KEY is derived from the RECORD OF PROS 
"^DD",727.826,727.826,10,23,46,0)
APPLIANCE/REPAIR file (#660).  Depending how the FEEDER KEY is
"^DD",727.826,727.826,10,23,47,0)
constructed, the components for the FEEDER KEY are derived from the
"^DD",727.826,727.826,10,23,48,0)
following fields in the RECORD OF PROS APPLIANCE/REPAIR file (#660):
"^DD",727.826,727.826,10,23,49,0)
 
"^DD",727.826,727.826,10,23,50,0)
 1) HCPCS (#4.1) - HCPCS is a pointer to the CPT CODE field (#.01) of the
"^DD",727.826,727.826,10,23,51,0)
    CPT file (#81)
"^DD",727.826,727.826,10,23,52,0)
 2) TYPE OF TRANSACTION (#2)
"^DD",727.826,727.826,10,23,53,0)
 3) SOURCE (#12)
"^DD",727.826,727.826,10,23,54,0)
 4) RECEIVING STATION (#70).  RECEIVING STATION is a pointer to the
"^DD",727.826,727.826,10,23,55,0)
    INSTITUTION file (#4).
"^DD",727.826,727.826,10,23,56,0)
 5) REQUESTING STATION (#40).  REQUESTING STATION is a pointer to the
"^DD",727.826,727.826,10,23,57,0)
    INSTITUTION file (#4).
"^DD",727.826,727.826,10,23,58,0)
 6) STATION (#8).  STATION is a pointer to the INSTITUTION file (#4).
"^DD",727.826,727.826,10,23,59,0)
 7) FORM REQUESTED ON (#11)
"^DD",727.826,727.826,10,"DT")
2981224
"^DD",727.826,727.826,14,0)
PCE CPT/HCPCS CODE & MODIFIERS^RFO^^0;15^K:$L(X)>17!($L(X)<5) X
"^DD",727.826,727.826,14,.1)

"^DD",727.826,727.826,14,1,0)
^.1
"^DD",727.826,727.826,14,2)
S Y(0)=Y S Y=$$CPTOUT^ECXUTL3(Y)
"^DD",727.826,727.826,14,2.1)
S Y=$$CPTOUT^ECXUTL3(Y)
"^DD",727.826,727.826,14,3)
Answer must be 5-17 characters in length.
"^DD",727.826,727.826,14,10)
Derived from the HCPCS field (4.1) in the RECORD OF PROS APPLIANCE/REPAIR file (#660).
"^DD",727.826,727.826,14,21,0)
^.001^1^1^3150612^^^^
"^DD",727.826,727.826,14,21,1,0)
HCPCS code for the item selected.
"^DD",727.826,727.826,14,23,0)
^.001^6^6^3150612^^
"^DD",727.826,727.826,14,23,1,0)
PCE CPT/HCPCS CODE is derived from the HCPCS field (#4.1) in the RECORD
"^DD",727.826,727.826,14,23,2,0)
OF PROS APPLIANCE/REPAIR file (#660). The HCPCS field (#4.1) is a pointer
"^DD",727.826,727.826,14,23,3,0)
to the respective CPT CODE field (#.01) in the CPT file (#81).
"^DD",727.826,727.826,14,23,4,0)
 
"^DD",727.826,727.826,14,23,5,0)
The source of CPT modifiers is the MODIFIER field (#.01) of the
"^DD",727.826,727.826,14,23,6,0)
CPT MODIFIER file (#81.3). 
"^DD",727.826,727.826,14,"DT")
3120614
"^DD",727.826,727.826,23,0)
PATIENT ELIGIBILITY^F^^0;24^K:$L(X)>3!($L(X)<1) X
"^DD",727.826,727.826,23,.1)
Patient Eligibility
"^DD",727.826,727.826,23,3)
Answer must be 1-3 characters in length.
"^DD",727.826,727.826,23,10)
PATIENT ELIGIBILITY field (#.361) from the Patient file (#2) as derived from DFN.
"^DD",727.826,727.826,23,21,0)
^.001^1^1^3150612^^^^
"^DD",727.826,727.826,23,21,1,0)
PATIENT ELIGIBILITY is the patient's primary eligibility code.
"^DD",727.826,727.826,23,23,0)
^^11^11^3150612^
"^DD",727.826,727.826,23,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4)
"^DD",727.826,727.826,23,23,2,0)
in the PROSTHETICS EXTRACT file (#727.826), ELIGIBILITY data is derived from
"^DD",727.826,727.826,23,23,3,0)
the PRIMARY ELIGIBILITY CODE field (#.361) in the PATIENT file (#2).
"^DD",727.826,727.826,23,23,4,0)
PRIMARY ELIGIBILITY CODE is a pointer to the ELIGIBILITY CODE file (#8).
"^DD",727.826,727.826,23,23,5,0)
The data is derived from the MAS ELIGIBILITY CODE field (#8) in the
"^DD",727.826,727.826,23,23,6,0)
ELIGIBILITY CODE file (#8) which in turn is a pointer to the MAS
"^DD",727.826,727.826,23,23,7,0)
ELIGIBILITY CODE file (#8.1). 
"^DD",727.826,727.826,23,23,8,0)
 
"^DD",727.826,727.826,23,23,9,0)
The pointer value to the MAS ELIGIBILITY CODE file (#8.1) is converted by
"^DD",727.826,727.826,23,23,10,0)
ELIG^ECXUTL3 to the corresponding eligibility code used by NPCD.  This
"^DD",727.826,727.826,23,23,11,0)
code is composed of two or three numeric characters.
"^DD",727.826,727.826,23,"DT")
2981117
"^DD",727.826,727.826,24,0)
COST OF TRANSACTION^F^^0;25^K:$L(X)>6!($L(X)<1) X
"^DD",727.826,727.826,24,.1)
Cost of Transaction
"^DD",727.826,727.826,24,3)
Answer must be 1-6 characters in length.
"^DD",727.826,727.826,24,10)
TOTAL COST (#14) or TOTAL LAB COST (#48) from the RECORD OF PROS APPLIANCE/REPAIR file.
"^DD",727.826,727.826,24,21,0)
^.001^1^1^3150622^^^^
"^DD",727.826,727.826,24,21,1,0)
Cost to produce the prosthetic.
"^DD",727.826,727.826,24,23,0)
^.001^38^38^3150622^^^
"^DD",727.826,727.826,24,23,1,0)
COST OF TRANSACTION is the value found in the TOTAL COST field (#14) in
"^DD",727.826,727.826,24,23,2,0)
the RECORD OF PROS APPLIANCE/REPAIR file (#660) when the FORM REQUESTED ON
"^DD",727.826,727.826,24,23,3,0)
field (#11) in the RECORD OF PROS APPLIANCE/REPAIR file (#660) is one of
"^DD",727.826,727.826,24,23,4,0)
the following:
"^DD",727.826,727.826,24,23,5,0)
 
"^DD",727.826,727.826,24,23,6,0)
 1)  PSC, represented by 1.
"^DD",727.826,727.826,24,23,7,0)
 2)  2421, represented by 2.
"^DD",727.826,727.826,24,23,8,0)
 3)  2237, represented by 3.
"^DD",727.826,727.826,24,23,9,0)
 4)  2529-7, represented by 5.
"^DD",727.826,727.826,24,23,10,0)
 5)  2474, represented by 6.
"^DD",727.826,727.826,24,23,11,0)
 6)  2431, represented by 7.
"^DD",727.826,727.826,24,23,12,0)
 7)  2914, represented by 8.
"^DD",727.826,727.826,24,23,13,0)
 8)  OTHER, represented by 9.
"^DD",727.826,727.826,24,23,14,0)
 9)  2520, represented by 10.
"^DD",727.826,727.826,24,23,15,0)
 10) STOCK ISSUE, represented by 11
"^DD",727.826,727.826,24,23,16,0)
 11) INVENTORY ISSUE, represented by 12
"^DD",727.826,727.826,24,23,17,0)
 12) VISA, represented by 14
"^DD",727.826,727.826,24,23,18,0)
 13) DALC, represented by 16
"^DD",727.826,727.826,24,23,19,0)
 
"^DD",727.826,727.826,24,23,20,0)
COST OF TRANSACTION is the value found in TOTAL LAB COST field (#48) in 
"^DD",727.826,727.826,24,23,21,0)
the RECORD OF PROS APPLIANCE/REPAIR file (#660) when the FORM REQUESTED ON
"^DD",727.826,727.826,24,23,22,0)
field (#11) in the RECORD OF PROS APPLIANCE/REPAIR file (#660) is one 
"^DD",727.826,727.826,24,23,23,0)
of the following:
"^DD",727.826,727.826,24,23,24,0)
 
"^DD",727.826,727.826,24,23,25,0)
 1)  2529-3, represented by 4.
"^DD",727.826,727.826,24,23,26,0)
 2)  LAB ISSUE-3, represented by 15
"^DD",727.826,727.826,24,23,27,0)
 
"^DD",727.826,727.826,24,23,28,0)
COST OF TRANSACTION is derived from the RECORD OF PROS APPLIANCE/REPAIR
"^DD",727.826,727.826,24,23,29,0)
file (#660).  Depending on how the COST OF TRANSACTION is constructed,
"^DD",727.826,727.826,24,23,30,0)
data is derived from the following fields in the RECORD OF PROS
"^DD",727.826,727.826,24,23,31,0)
APPLIANCE/REPAIR file (#660):
"^DD",727.826,727.826,24,23,32,0)
 
"^DD",727.826,727.826,24,23,33,0)
 1) TOTAL COST (#14)
"^DD",727.826,727.826,24,23,34,0)
 2) TOTAL LAB COST (#48)
"^DD",727.826,727.826,24,23,35,0)
 3) FORM REQUESTED ON (#11)
"^DD",727.826,727.826,24,23,36,0)
 
"^DD",727.826,727.826,24,23,37,0)
This field should be a numeric field but due to FileMan limitations for 
"^DD",727.826,727.826,24,23,38,0)
data on this node, it will remain a free text field.
"^DD",727.826,727.826,24,"DT")
3150327
"^DD",727.826,727.826,53,0)
DOM,PRRTP AND SAARTP INDICATOR^S^P:GEN. PRRTP;T:PTSD PRRTP;S:DOM. PRRTP;H:HOMELESS CWT/TR;A:SA CWT/TR;D:DOMICILIARY;B:PTSD CWT/TR;C:GEN. CET/TR;^1;21^Q
"^DD",727.826,727.826,53,3)
Enter the indicator associated with the treating specialty assigned to this record.
"^DD",727.826,727.826,53,21,0)
^.001^2^2^3150612^^^^
"^DD",727.826,727.826,53,21,1,0)
Indicates if the patient is admitted to either a RRTP, PRRTP or SARRTP at 
"^DD",727.826,727.826,53,21,2,0)
the time care is provided.
"^DD",727.826,727.826,53,23,0)
^^5^5^3150612^
"^DD",727.826,727.826,53,23,1,0)
If the patient's treating specialty exists in the DSS TREATING SPECIALTY
"^DD",727.826,727.826,53,23,2,0)
TRANSLATION file (#727.831), data is derived from the DOM/PRRTP/SARRTP
"^DD",727.826,727.826,53,23,3,0)
CODE field (#2) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831).
"^DD",727.826,727.826,53,23,4,0)
 
"^DD",727.826,727.826,53,23,5,0)
Otherwise, the value is null.
"^DD",727.826,727.826,53,"DT")
3120608
"^DD",727.826,727.826,59,0)
OBSERVATION PATIENT INDICATOR^S^NO:NO;YES:YES;^1;27^Q
"^DD",727.826,727.826,59,3)
Enter observation patient status for this record.
"^DD",727.826,727.826,59,21,0)
^.001^1^1^3150709^^^^
"^DD",727.826,727.826,59,21,1,0)
Indicates if patient is considered to be an observation patient.
"^DD",727.826,727.826,59,23,0)
^^12^12^3150709^
"^DD",727.826,727.826,59,23,1,0)
Data (YES, NO) is retrieved from API call $$OBSPAT^ECXUTL4:
"^DD",727.826,727.826,59,23,2,0)
 
"^DD",727.826,727.826,59,23,3,0)
If the patient's treating specialty exists in the DSS TREATING SPECIALTY
"^DD",727.826,727.826,59,23,4,0)
TRANSLATION file (#727.831), data is derived from the OBSERVATION PAT
"^DD",727.826,727.826,59,23,5,0)
INDICATOR field (#4) of the DSS TREATING SPECIALTY TRANSLATION file
"^DD",727.826,727.826,59,23,6,0)
(#727.831).
"^DD",727.826,727.826,59,23,7,0)
 
"^DD",727.826,727.826,59,23,8,0)
If patient is outpatient and treating specialty not in file, AND Feeder
"^DD",727.826,727.826,59,23,9,0)
Key (CLI) or DSS ID (MTL,IVP,ECQ,NOS,SUR) is 290-297, Observation
"^DD",727.826,727.826,59,23,10,0)
Patient Ind=YES.  Else, Observation Patient Ind=NO.
"^DD",727.826,727.826,59,23,11,0)
 
"^DD",727.826,727.826,59,23,12,0)
Otherwise, Observation Patient Ind=NO.
"^DD",727.826,727.826,59,"DT")
3120608
"^DD",727.826,727.826,91,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^2;11^Q
"^DD",727.826,727.826,91,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.826,727.826,91,21,0)
^.001^6^6^3150612^^
"^DD",727.826,727.826,91,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.826,727.826,91,21,2,0)
Care Center) Reconciliation.
"^DD",727.826,727.826,91,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.826,727.826,91,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.826,727.826,91,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.826,727.826,91,21,6,0)
pays for.
"^DD",727.826,727.826,91,23,0)
^^7^7^3150612^
"^DD",727.826,727.826,91,23,1,0)
If the VistA Patient Type Code (TYPE field (#391) of the Patient file (#2)
"^DD",727.826,727.826,91,23,2,0)
) = Active Duty, Military Retiree, or TRICARE, then the value(s) in the
"^DD",727.826,727.826,91,23,3,0)
VistA Other Eligibility multiple (PATIENT ELIGIBILITIES field (#361) of
"^DD",727.826,727.826,91,23,4,0)
the PATIENT file (#2)), which points to locally modifiable ELIGIBILITY
"^DD",727.826,727.826,91,23,5,0)
CODE file (#8) should be evaluated. If the value in the ELIGIBILITY CODE
"^DD",727.826,727.826,91,23,6,0)
is equal to any entry in the set of codes in this field, the value should
"^DD",727.826,727.826,91,23,7,0)
be placed in this field.
"^DD",727.826,727.826,91,"DT")
3100903
"^DD",727.826,727.826,92,0)
PRIMARY ICD-10 CODE^F^^2;12^K:$L(X)>8!($L(X)<1) X
"^DD",727.826,727.826,92,3)
Answer must be 1-8 characters in length.
"^DD",727.826,727.826,92,21,0)
^.001^2^2^3150622^^^^
"^DD",727.826,727.826,92,21,1,0)
The primary ICD-10 code for the procedure performed.  Not available in 
"^DD",727.826,727.826,92,21,2,0)
PRO extract.
"^DD",727.826,727.826,92,23,0)
^.001^2^2^3150622^^^^
"^DD",727.826,727.826,92,23,1,0)
This field is not yet used by the Prosthetics Extract as the ICD 
"^DD",727.826,727.826,92,23,2,0)
information is not available in Prosthetics.
"^DD",727.826,727.826,92,"DT")
3120304
"^DD",727.826,727.826,93,0)
SECONDARY ICD-10 CODE #1^F^^2;13^K:$L(X)>8!($L(X)<1) X
"^DD",727.826,727.826,93,3)
Answer must be 1-8 characters in length.
"^DD",727.826,727.826,93,21,0)
^.001^2^2^3150622^^^
"^DD",727.826,727.826,93,21,1,0)
The first secondary ICD-10 code for the procedure performed.  Not 
"^DD",727.826,727.826,93,21,2,0)
available in PRO extract.
"^DD",727.826,727.826,93,23,0)
^.001^2^2^3150622^^^
"^DD",727.826,727.826,93,23,1,0)
This field is not yet used by the Prosthetics Extract as the ICD 
"^DD",727.826,727.826,93,23,2,0)
information is not available in Prosthetics.
"^DD",727.826,727.826,93,"DT")
3120304
"^DD",727.826,727.826,94,0)
SECONDARY ICD-10 CODE #2^F^^2;14^K:$L(X)>8!($L(X)<1) X
"^DD",727.826,727.826,94,3)
Answer must be 1-8 characters in length.
"^DD",727.826,727.826,94,21,0)
^^2^2^3150622^
"^DD",727.826,727.826,94,21,1,0)
The second secondary ICD-10 code for the procedure performed. Not
"^DD",727.826,727.826,94,21,2,0)
available in PRO extract.
"^DD",727.826,727.826,94,23,0)
^.001^2^2^3150622^^
"^DD",727.826,727.826,94,23,1,0)
This field is not yet used by the Prosthetics Extract as the ICD 
"^DD",727.826,727.826,94,23,2,0)
information is not available in Prosthetics.
"^DD",727.826,727.826,94,"DT")
3120304
"^DD",727.826,727.826,95,0)
SECONDARY ICD-10 CODE #3^F^^2;15^K:$L(X)>8!($L(X)<1) X
"^DD",727.826,727.826,95,3)
Answer must be 1-8 characters in length.
"^DD",727.826,727.826,95,21,0)
^^2^2^3150427^
"^DD",727.826,727.826,95,21,1,0)
The third secondary ICD-10 code for the procedure performed.  Not 
"^DD",727.826,727.826,95,21,2,0)
available in PRO extract.
"^DD",727.826,727.826,95,23,0)
^^2^2^3150427^
"^DD",727.826,727.826,95,23,1,0)
This field is not yet used by the Prosthetics Extract as the ICD 
"^DD",727.826,727.826,95,23,2,0)
information is not available in Prosthetics.
"^DD",727.826,727.826,95,"DT")
3120304
"^DD",727.826,727.826,96,0)
SECONDARY ICD-10 CODE #4^F^^2;16^K:$L(X)>8!($L(X)<1) X
"^DD",727.826,727.826,96,3)
Answer must be 1-8 characters in length.
"^DD",727.826,727.826,96,21,0)
^.001^2^2^3150710^^
"^DD",727.826,727.826,96,21,1,0)
The fourth secondary ICD-10 code for the procedure performed. Not 
"^DD",727.826,727.826,96,21,2,0)
available in PRO extract.
"^DD",727.826,727.826,96,23,0)
^.001^2^2^3150710^^
"^DD",727.826,727.826,96,23,1,0)
This field is not yet used by the Prosthetics Extract as the ICD 
"^DD",727.826,727.826,96,23,2,0)
information is not available in Prosthetics.
"^DD",727.826,727.826,96,"DT")
3120304
"^DD",727.826,727.826,103,0)
FORM REQUESTED ON^F^^2;23^K:$L(X)>2!($L(X)<1) X
"^DD",727.826,727.826,103,3)
Answer must be 1-2 characters in length.
"^DD",727.826,727.826,103,21,0)
^.001^2^2^3150612^^^^
"^DD",727.826,727.826,103,21,1,0)
Identifies which form was used to enter a prosthetics
"^DD",727.826,727.826,103,21,2,0)
request.
"^DD",727.826,727.826,103,23,0)
^.001^3^3^3150612^^^^
"^DD",727.826,727.826,103,23,1,0)
The source of data for this field is the FORM REQUESTED ON field (#11) of 
"^DD",727.826,727.826,103,23,2,0)
the RECORD OF PROS APPLIANCE/REPAIR file (#660).  The value stored here 
"^DD",727.826,727.826,103,23,3,0)
will be the internal value of the set of codes from that field.
"^DD",727.826,727.826,103,"DT")
3150326
"^DD",727.827,727.827,7,0)
IN/OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;^0;8^Q
"^DD",727.827,727.827,7,3)
Enter the patient's status for this extract entry.
"^DD",727.827,727.827,7,21,0)
^.001^2^2^3150527^^
"^DD",727.827,727.827,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this
"^DD",727.827,727.827,7,21,2,0)
extract.
"^DD",727.827,727.827,7,23,0)
^^10^10^3150527^
"^DD",727.827,727.827,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.827,727.827,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine 
"^DD",727.827,727.827,7,23,3,0)
inpatient/outpatient status.  If the patient is an outpatient, processing 
"^DD",727.827,727.827,7,23,4,0)
stops and the field is set to O.   If the patient is an inpatient then 
"^DD",727.827,727.827,7,23,5,0)
$$INOUTP^ECXUTL4 is called to look at the treating specialty.  If the 
"^DD",727.827,727.827,7,23,6,0)
patient's treating specialty exists in the DSS TREATING SPECIALTY 
"^DD",727.827,727.827,7,23,7,0)
TRANSLATION file (#727.831) then the value of the INPAT/OUTPAT CODE field 
"^DD",727.827,727.827,7,23,8,0)
(#5) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831) is used.  
"^DD",727.827,727.827,7,23,9,0)
If the treating specialty is not found in the DSS TREATING SPECIALTY 
"^DD",727.827,727.827,7,23,10,0)
TRANSLATION file (#727.831) then the indicator is set to I.
"^DD",727.827,727.827,7,"DT")
3120608
"^DD",727.827,727.827,11,0)
*PLACEHOLDER^P44'^SC(^0;12^Q
"^DD",727.827,727.827,11,3)
Select the clinic associated with the visit.
"^DD",727.827,727.827,11,21,0)
^.001^1^1^3150603^^
"^DD",727.827,727.827,11,21,1,0)
This field is no longer used.
"^DD",727.827,727.827,11,23,0)
^.001^1^1^3150603^^
"^DD",727.827,727.827,11,23,1,0)
This field became inactive in patch ECX*3.0*154.
"^DD",727.827,727.827,11,"DT")
3150603
"^DD",727.827,727.827,38,0)
RADIATION STATUS^S^N:NO;Y:YES;U:UNKNOWN;^1;15^Q
"^DD",727.827,727.827,38,3)
Enter the Radiation Status for this patient. 
"^DD",727.827,727.827,38,21,0)
^.001^1^1^3150527^^^^
"^DD",727.827,727.827,38,21,1,0)
Indicates if patient claims exposure to ionizing radiation.
"^DD",727.827,727.827,38,23,0)
^^5^5^3150527^
"^DD",727.827,727.827,38,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4)
"^DD",727.827,727.827,38,23,2,0)
in the CLINIC EXTRACT file (#727.827), RADIATION data is derived from
"^DD",727.827,727.827,38,23,3,0)
the RADIATION EXPOSURE INDICATED? field (#.32103) in the PATIENT file (#2).
"^DD",727.827,727.827,38,23,4,0)
 
"^DD",727.827,727.827,38,23,5,0)
The status indicator is returned by SVC^VADPT.
"^DD",727.827,727.827,38,"DT")
3120620
"^DD",727.827,727.827,41,0)
AGENT ORANGE ENC INDICATOR^S^N:NO;Y:YES;^1;18^Q
"^DD",727.827,727.827,41,3)
Enter patient's agent orange exposure indicator.
"^DD",727.827,727.827,41,21,0)
^.001^2^2^3150527^^^^
"^DD",727.827,727.827,41,21,1,0)
Indicates whether service provided during this patient encounter is 
"^DD",727.827,727.827,41,21,2,0)
related to exposure to Agent Orange.
"^DD",727.827,727.827,41,23,0)
^^6^6^3150527^
"^DD",727.827,727.827,41,23,1,0)
Using the VISIT FILE ENTRY field (#.05) in the OUTPATIENT ENCOUNTER file
"^DD",727.827,727.827,41,23,2,0)
(#409.68) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.827,727.827,41,23,3,0)
ENCEVENT^PXAPI. The ENCEVENT^PXAPI returns the Agent Orange indicator
"^DD",727.827,727.827,41,23,4,0)
stored at the AGENT ORANGE EXPOSURE field (#80002) in the VISIT file
"^DD",727.827,727.827,41,23,5,0)
(#9000010). The value will be stored in the output array subscripted by
"^DD",727.827,727.827,41,23,6,0)
"AO".  
"^DD",727.827,727.827,41,"DT")
3000509
"^DD",727.827,727.827,45,0)
ZIP+4^F^^1;22^K:$L(X)>10!($L(X)<5) X
"^DD",727.827,727.827,45,3)
Answer must be 5-10 characters in length.
"^DD",727.827,727.827,45,21,0)
^.001^2^2^3150527^^^
"^DD",727.827,727.827,45,21,1,0)
The ZIP code for where the patient resides. The 5-character ZIP code is
"^DD",727.827,727.827,45,21,2,0)
provided if ZIP+4 is not available.
"^DD",727.827,727.827,45,23,0)
^^4^4^3150527^
"^DD",727.827,727.827,45,23,1,0)
The patient's ZIP code with optional 4-digit extension as found in the
"^DD",727.827,727.827,45,23,2,0)
ZIP+4 field (#.1112) of the patient's record in the PATIENT file (#2).
"^DD",727.827,727.827,45,23,3,0)
While the ZIP+4 field in the PATIENT file (#2) is a max of 9 characters,
"^DD",727.827,727.827,45,23,4,0)
it does put the "-" in if the ZIP code is a +4 type.
"^DD",727.827,727.827,45,"DT")
3000509
"^DD",727.827,727.827,56,0)
ASSOCIATE PC PROVIDER^F^^1;33^K:$L(X)>11!($L(X)<1) X
"^DD",727.827,727.827,56,3)
Answer must be 1-11 characters in length.
"^DD",727.827,727.827,56,21,0)
^.001^2^2^3150527^^^^
"^DD",727.827,727.827,56,21,1,0)
The associate primary care provider assigned to this patient through the
"^DD",727.827,727.827,56,21,2,0)
PCMM module.
"^DD",727.827,727.827,56,23,0)
^^10^10^3150527^
"^DD",727.827,727.827,56,23,1,0)
Derived by a call to the Scheduling API, OUTPTAP^SDUTL3. The API returns
"^DD",727.827,727.827,56,23,2,0)
the associate provider's internal entry number and name from the NEW
"^DD",727.827,727.827,56,23,3,0)
PERSON file (#200).  The ASSOCIATE PC PROVIDER is the value of a "2"
"^DD",727.827,727.827,56,23,4,0)
prefixed to the pointer value to indicate that the source file is "200".  
"^DD",727.827,727.827,56,23,5,0)
For example, if the IEN of the provider in file #200 is 98765, the value
"^DD",727.827,727.827,56,23,6,0)
that will be stored is 298765.
"^DD",727.827,727.827,56,23,7,0)
                                 
"^DD",727.827,727.827,56,23,8,0)
The PATIENT NO. - DFN field (#4) and the DAY field (#8) are used to
"^DD",727.827,727.827,56,23,9,0)
determine the patient's associate provider at the time the prescription is
"^DD",727.827,727.827,56,23,10,0)
filled.  
"^DD",727.827,727.827,56,"DT")
3000509
"^DD",727.827,727.827,65,0)
OBSERVATION PATIENT INDICATOR^S^NO:NO;YES:YES;^2;5^Q
"^DD",727.827,727.827,65,3)
Enter observation patient status for this record.
"^DD",727.827,727.827,65,21,0)
^.001^1^1^3150709^^^^
"^DD",727.827,727.827,65,21,1,0)
Indicates if patient is considered to be an observation patient.
"^DD",727.827,727.827,65,23,0)
^^12^12^3150709^
"^DD",727.827,727.827,65,23,1,0)
Data (YES, NO) is retrieved from API call $$OBSPAT^ECXUTL4:
"^DD",727.827,727.827,65,23,2,0)
 
"^DD",727.827,727.827,65,23,3,0)
If the patient's treating specialty exists in the DSS TREATING SPECIALTY
"^DD",727.827,727.827,65,23,4,0)
TRANSLATION file (#727.831), data is derived from the OBSERVATION PAT 
"^DD",727.827,727.827,65,23,5,0)
INDICATOR field (#4) of the DSS TREATING SPECIALTY TRANSLATION file
"^DD",727.827,727.827,65,23,6,0)
(#727.831).
"^DD",727.827,727.827,65,23,7,0)
 
"^DD",727.827,727.827,65,23,8,0)
If patient is outpatient and treating specialty not in file, AND Feeder
"^DD",727.827,727.827,65,23,9,0)
Key (CLI) or DSS ID (MTL,IVP,ECQ,NOS,SUR) is 290-297, Observation
"^DD",727.827,727.827,65,23,10,0)
Patient Ind=YES.  Else, Observation Patient Ind=NO.
"^DD",727.827,727.827,65,23,11,0)
 
"^DD",727.827,727.827,65,23,12,0)
Otherwise, Observation Patient Ind=NO.
"^DD",727.827,727.827,65,"DT")
3120606
"^DD",727.827,727.827,78,0)
USER ENROLLEE^S^U:USER ENROLLED;^2;18^Q
"^DD",727.827,727.827,78,3)
Enter patient's current enrollment status.
"^DD",727.827,727.827,78,21,0)
^.001^2^2^3150527^^^^
"^DD",727.827,727.827,78,21,1,0)
Indicates whether a Veteran has User Enrollee status for the current or 
"^DD",727.827,727.827,78,21,2,0)
future fiscal year.
"^DD",727.827,727.827,78,23,0)
^^5^5^3150527^
"^DD",727.827,727.827,78,23,1,0)
User enrollee is determined by checking the PATIENT ENROLLMENT file
"^DD",727.827,727.827,78,23,2,0)
(#27.11). When a user has a current or future fiscal year in the VistA
"^DD",727.827,727.827,78,23,3,0)
User Enrollee Status field (#.04) the value is set to 'U' and Null if no
"^DD",727.827,727.827,78,23,4,0)
date or a past year's value is contained. Determined by the use of an API:
"^DD",727.827,727.827,78,23,5,0)
$$UESTAT^EASUSER where the Patient Identifier (DFN) is passed in.
"^DD",727.827,727.827,78,"DT")
3120621
"^DD",727.827,727.827,84,0)
SW ASIA CONDITIONS^S^Y:YES;N:NO;U:UNKNOWN;^2;24^Q
"^DD",727.827,727.827,84,3)
Enter patient's Southwest Asia Indicator status.
"^DD",727.827,727.827,84,21,0)
^.001^2^2^3150527^^^
"^DD",727.827,727.827,84,21,1,0)
This field is used to indicate if patient claims exposure to Southwest
"^DD",727.827,727.827,84,21,2,0)
Asia Conditions.
"^DD",727.827,727.827,84,23,0)
^^3^3^3150527^
"^DD",727.827,727.827,84,23,1,0)
This field is derived from the SOUTHWEST ASIA CONDITIONS? field (#.322013)
"^DD",727.827,727.827,84,23,2,0)
in the PATIENT file (#2) using the patient's DFN.  The status indicator is
"^DD",727.827,727.827,84,23,3,0)
returned by SVC^VADPT which is called by PAT^ECXUTL3.
"^DD",727.827,727.827,84,"DT")
3090527
"^DD",727.827,727.827,93,0)
COUNTRY CODE^F^^3;1^K:$L(X)>3!($L(X)<1) X
"^DD",727.827,727.827,93,3)
The code for the country.  Answer must be 1-3 characters in length.
"^DD",727.827,727.827,93,21,0)
^.001^1^1^3150527^^
"^DD",727.827,727.827,93,21,1,0)
The code for the country associated with the address.
"^DD",727.827,727.827,93,23,0)
^^2^2^3150527^
"^DD",727.827,727.827,93,23,1,0)
The three-character alpha identifying code is copied from the CODE field
"^DD",727.827,727.827,93,23,2,0)
(#.01) of the COUNTRY CODE file (#779.004).
"^DD",727.827,727.827,93,"DT")
3090609
"^DD",727.827,727.827,95,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^3;3^Q
"^DD",727.827,727.827,95,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.827,727.827,95,21,0)
^.001^6^6^3150603^^^
"^DD",727.827,727.827,95,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.827,727.827,95,21,2,0)
Care Center) Reconciliation.
"^DD",727.827,727.827,95,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.827,727.827,95,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.827,727.827,95,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.827,727.827,95,21,6,0)
pays for.
"^DD",727.827,727.827,95,23,0)
^^7^7^3150603^
"^DD",727.827,727.827,95,23,1,0)
If the VistA Patient Type Code (TYPE field (#391) of the Patient file (#2)
"^DD",727.827,727.827,95,23,2,0)
 = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.827,727.827,95,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES field (#361)
"^DD",727.827,727.827,95,23,4,0)
of the PATIENT file (#2), which points to locally modifiable ELIGIBILITY
"^DD",727.827,727.827,95,23,5,0)
CODE file (#8) should be evaluated. If the value in the ELIGIBILITY CODE
"^DD",727.827,727.827,95,23,6,0)
is equal to any entry in the set of codes in this field, the value should
"^DD",727.827,727.827,95,23,7,0)
be placed in this field.
"^DD",727.827,727.827,95,"DT")
3100903
"^DD",727.827,727.827,97,0)
SECONDARY PROVIDER #1 PC^F^^3;5^K:$L(X)>7!($L(X)<7) X
"^DD",727.827,727.827,97,3)
Answer must be 7 characters in length.
"^DD",727.827,727.827,97,21,0)
^.001^2^2^3150603^^^^
"^DD",727.827,727.827,97,21,1,0)
The VA code of the Person Class of the first assisting provider as of the
"^DD",727.827,727.827,97,21,2,0)
date of this record.
"^DD",727.827,727.827,97,23,0)
^^5^5^3150603^
"^DD",727.827,727.827,97,23,1,0)
Derived by calling $$PRVCLASS^ECXUTL(IEN,DATE), where IEN is the IEN of 
"^DD",727.827,727.827,97,23,2,0)
the NEW PERSON file (#200).  Copied from the VA CODE field (#5) of the
"^DD",727.827,727.827,97,23,3,0)
PERSON CLASS file (#8932.1), as pointed to by the Person Class field
"^DD",727.827,727.827,97,23,4,0)
(#.01) of the PERSON CLASS field (#8932.1) multiple of the NEW PERSON
"^DD",727.827,727.827,97,23,5,0)
file (#200).
"^DD",727.827,727.827,97,"DT")
3110310
"^DD",727.827,727.827,100,0)
SECONDARY PROVIDER #2 PC^F^^3;8^K:$L(X)>7!($L(X)<7) X
"^DD",727.827,727.827,100,3)
Answer must be 7 characters in length.
"^DD",727.827,727.827,100,21,0)
^.001^2^2^3150527^^^^
"^DD",727.827,727.827,100,21,1,0)
The VA code of the Person Class of the second assisting provider as of the
"^DD",727.827,727.827,100,21,2,0)
date of this record.
"^DD",727.827,727.827,100,23,0)
^^5^5^3150527^
"^DD",727.827,727.827,100,23,1,0)
Derived by calling $$PRVCLASS^ECXUTL(IEN,DATE), where IEN is the IEN of 
"^DD",727.827,727.827,100,23,2,0)
the NEW PERSON file (#200). Copied from field VA CODE field (#5) of the
"^DD",727.827,727.827,100,23,3,0)
PERSON CLASS file (#8932.1), as pointed to by the Person Class field
"^DD",727.827,727.827,100,23,4,0)
(#.01) of the PERSON CLASS field (#8932.1) multiple of the NEW PERSON file
"^DD",727.827,727.827,100,23,5,0)
(#200).
"^DD",727.827,727.827,100,"DT")
3110310
"^DD",727.827,727.827,103,0)
SECONDARY PROVIDER #3 PC^F^^3;11^K:$L(X)>7!($L(X)<7) X
"^DD",727.827,727.827,103,3)
Answer must be 7 characters in length.
"^DD",727.827,727.827,103,21,0)
^.001^2^2^3150527^^^^
"^DD",727.827,727.827,103,21,1,0)
The VA code of the Person Class of the third assisting provider as of the
"^DD",727.827,727.827,103,21,2,0)
date of this record.
"^DD",727.827,727.827,103,23,0)
^^5^5^3150527^
"^DD",727.827,727.827,103,23,1,0)
Derived by calling $$PRVCLASS^ECXUTL(IEN,DATE), where IEN is the IEN of 
"^DD",727.827,727.827,103,23,2,0)
the NEW PERSON file (#200). Copied from field VA CODE field (#5) of the
"^DD",727.827,727.827,103,23,3,0)
PERSON CLASS file (#8932.1), as pointed to by the Person Class field
"^DD",727.827,727.827,103,23,4,0)
(#.01) of the PERSON CLASS field (#8932.1) multiple of the NEW PERSON file
"^DD",727.827,727.827,103,23,5,0)
(#200).
"^DD",727.827,727.827,103,"DT")
3110310
"^DD",727.827,727.827,106,0)
SECONDARY PROVIDER #4 PC^F^^3;14^K:$L(X)>7!($L(X)<7) X
"^DD",727.827,727.827,106,3)
Answer must be 7 characters in length.
"^DD",727.827,727.827,106,21,0)
^.001^2^2^3150527^^^^
"^DD",727.827,727.827,106,21,1,0)
The VA code of the Person Class of the fourth assisting provider as of the
"^DD",727.827,727.827,106,21,2,0)
date of this record.
"^DD",727.827,727.827,106,23,0)
^^5^5^3150527^
"^DD",727.827,727.827,106,23,1,0)
Derived by calling $$PRVCLASS^ECXUTL(IEN,DATE), where IEN is the IEN of 
"^DD",727.827,727.827,106,23,2,0)
the NEW PERSON file (#200). Copied from field VA CODE field (#5) of the
"^DD",727.827,727.827,106,23,3,0)
PERSON CLASS file (#8932.1), as pointed to by the Person Class field
"^DD",727.827,727.827,106,23,4,0)
(#.01) of the PERSON CLASS field (#8932.1) multiple of the NEW PERSON file
"^DD",727.827,727.827,106,23,5,0)
(#200).
"^DD",727.827,727.827,106,"DT")
3110310
"^DD",727.827,727.827,109,0)
SECONDARY PROVIDER #5 PC^F^^3;17^K:$L(X)>7!($L(X)<7) X
"^DD",727.827,727.827,109,3)
Answer must be 7 characters in length.
"^DD",727.827,727.827,109,21,0)
^.001^2^2^3150527^^^^
"^DD",727.827,727.827,109,21,1,0)
The VA code of the Person Class of the fifth assisting provider as of the
"^DD",727.827,727.827,109,21,2,0)
date of this record.
"^DD",727.827,727.827,109,23,0)
^^5^5^3150527^
"^DD",727.827,727.827,109,23,1,0)
Derived by calling $$PRVCLASS^ECXUTL(IEN,DATE), where IEN is the IEN of 
"^DD",727.827,727.827,109,23,2,0)
the NEW PERSON file (#200). Copied from field VA CODE field (#5) of the
"^DD",727.827,727.827,109,23,3,0)
PERSON CLASS file (#8932.1), as pointed to by the Person Class field
"^DD",727.827,727.827,109,23,4,0)
(#.01) of the PERSON CLASS field (#8932.1) multiple of the NEW PERSON file
"^DD",727.827,727.827,109,23,5,0)
(#200).
"^DD",727.827,727.827,109,"DT")
3110310
"^DD",727.827,727.827,112,0)
PRIMARY ICD-10 CODE^F^^3;20^K:$L(X)>8!($L(X)<1) X
"^DD",727.827,727.827,112,3)
Enter the ICD-10 code for this visit (1-8 characters).
"^DD",727.827,727.827,112,21,0)
^.001^1^1^3150527^^^^
"^DD",727.827,727.827,112,21,1,0)
The primary ICD-10 code for this clinic visit.
"^DD",727.827,727.827,112,23,0)
^.001^4^4^3150527^^^^
"^DD",727.827,727.827,112,23,1,0)
The PRIMARY ICD-10 CODE is derived by a call to VISIT^ECXSCX1, which in 
"^DD",727.827,727.827,112,23,2,0)
turn calls ENCEVENT^PXAPI, which returns the CPT codes associated with 
"^DD",727.827,727.827,112,23,3,0)
the visit.  The CPT codes come from the POV field (#.01) of the V POV 
"^DD",727.827,727.827,112,23,4,0)
file (#9000010.07).
"^DD",727.827,727.827,112,"DT")
3120304
"^DD",727.827,727.827,113,0)
SECONDARY ICD-10 CODE #1^F^^3;21^K:$L(X)>8!($L(X)<1) X
"^DD",727.827,727.827,113,3)
Enter the secondary ICD-10 code for this clinic visit (1-8 characters).
"^DD",727.827,727.827,113,21,0)
^.001^1^1^3150527^^^^
"^DD",727.827,727.827,113,21,1,0)
The first secondary ICD-10 code for this clinic visit.
"^DD",727.827,727.827,113,23,0)
^.001^4^4^3150527^^^^
"^DD",727.827,727.827,113,23,1,0)
SECONDARY ICD-10 CODE #1 is derived by a call to VISIT^ECXSCX1, which in
"^DD",727.827,727.827,113,23,2,0)
turn calls ENCEVENT^PXAPI, which returns the CPT codes associated with the
"^DD",727.827,727.827,113,23,3,0)
visit.  The CPT codes come from the POV field (#.01) of the V POV file
"^DD",727.827,727.827,113,23,4,0)
(#9000010.07).
"^DD",727.827,727.827,113,"DT")
3120304
"^DD",727.827,727.827,114,0)
SECONDARY ICD-10 CODE #2^F^^3;22^K:$L(X)>8!($L(X)<1) X
"^DD",727.827,727.827,114,3)
Enter the secondary ICD-10 code for this clinic visit (1-8 characters).
"^DD",727.827,727.827,114,21,0)
^.001^1^1^3150527^^^^
"^DD",727.827,727.827,114,21,1,0)
The second secondary ICD-10 code for this clinic visit.
"^DD",727.827,727.827,114,23,0)
^.001^4^4^3150527^^^^
"^DD",727.827,727.827,114,23,1,0)
SECONDARY ICD-10 CODE #2 is derived by a call to VISIT^ECXSCX1, which in
"^DD",727.827,727.827,114,23,2,0)
turn calls ENCEVENT^PXAPI, which returns the CPT codes associated with the
"^DD",727.827,727.827,114,23,3,0)
visit.  The CPT codes come from the POV field (#.01) of the V POV file
"^DD",727.827,727.827,114,23,4,0)
(#9000010.07).
"^DD",727.827,727.827,114,"DT")
3120304
"^DD",727.827,727.827,115,0)
SECONDARY ICD-10 CODE #3^F^^3;23^K:$L(X)>8!($L(X)<1) X
"^DD",727.827,727.827,115,3)
Enter the secondary ICD-10 code for this clinic visit (1-8 characters).
"^DD",727.827,727.827,115,21,0)
^.001^1^1^3150527^^^^
"^DD",727.827,727.827,115,21,1,0)
The third secondary ICD-10 code for this clinic visit.
"^DD",727.827,727.827,115,23,0)
^.001^4^4^3150527^^
"^DD",727.827,727.827,115,23,1,0)
SECONDARY ICD-10 CODE #3 is derived by a call to VISIT^ECXSCX1, which in
"^DD",727.827,727.827,115,23,2,0)
turn calls ENCEVENT^PXAPI, which returns the CPT codes associated with the
"^DD",727.827,727.827,115,23,3,0)
visit.  The CPT codes come from the POV field (#.01) of the V POV file
"^DD",727.827,727.827,115,23,4,0)
(#9000010.07).
"^DD",727.827,727.827,115,"DT")
3120304
"^DD",727.827,727.827,116,0)
SECONDARY ICD-10 CODE #4^F^^3;24^K:$L(X)>8!($L(X)<1) X
"^DD",727.827,727.827,116,3)
Enter the secondary ICD-10 code for this clinic visit (1-8 characters).
"^DD",727.827,727.827,116,21,0)
^.001^1^1^3150527^^^^
"^DD",727.827,727.827,116,21,1,0)
The fourth secondary ICD-10 code for this clinic visit.
"^DD",727.827,727.827,116,23,0)
^.001^4^4^3150527^^
"^DD",727.827,727.827,116,23,1,0)
SECONDARY ICD-10 CODE #4 is derived by a call to VISIT^ECXSCX1, which in
"^DD",727.827,727.827,116,23,2,0)
turn calls ENCEVENT^PXAPI, which returns the CPT codes associated with the
"^DD",727.827,727.827,116,23,3,0)
visit.  The CPT codes come from the POV field (#.01) of the V POV file
"^DD",727.827,727.827,116,23,4,0)
(#9000010.07).
"^DD",727.827,727.827,116,"DT")
3120304
"^DD",727.827,727.827,120,0)
SECONDARY PROVIDER #6 PC^F^^3;28^K:$L(X)>7!($L(X)<7) X
"^DD",727.827,727.827,120,3)
Answer must be 7 characters in length.
"^DD",727.827,727.827,120,21,0)
^.001^2^2^3150527^^^^
"^DD",727.827,727.827,120,21,1,0)
The VA code of the Person Class of the sixth assisting provider as of the
"^DD",727.827,727.827,120,21,2,0)
date of this record.
"^DD",727.827,727.827,120,23,0)
^^5^5^3150527^
"^DD",727.827,727.827,120,23,1,0)
Derived by calling $$PRVCLASS^ECXUTL(IEN,DATE), where IEN is the IEN of 
"^DD",727.827,727.827,120,23,2,0)
the NEW PERSON file (#200). Copied from field VA CODE field (#5) of the
"^DD",727.827,727.827,120,23,3,0)
PERSON CLASS file (#8932.1), as pointed to by the Person Class field
"^DD",727.827,727.827,120,23,4,0)
(#.01) of the PERSON CLASS field (#8932.1) multiple of the NEW PERSON file
"^DD",727.827,727.827,120,23,5,0)
(#200).
"^DD",727.827,727.827,120,"DT")
3130312
"^DD",727.827,727.827,123,0)
SECONDARY PROVIDER #7 PC^F^^4;2^K:$L(X)>7!($L(X)<7) X
"^DD",727.827,727.827,123,3)
Answer must be 7 characters in length.
"^DD",727.827,727.827,123,21,0)
^.001^2^2^3150527^^^
"^DD",727.827,727.827,123,21,1,0)
The VA code of the Person Class of the seventh assisting provider as of 
"^DD",727.827,727.827,123,21,2,0)
the date of this record.
"^DD",727.827,727.827,123,23,0)
^^5^5^3150527^
"^DD",727.827,727.827,123,23,1,0)
Derived by calling $$PRVCLASS^ECXUTL(IEN,DATE), where IEN is the IEN of 
"^DD",727.827,727.827,123,23,2,0)
the NEW PERSON file (#200). Copied from field VA CODE field (#5) of the
"^DD",727.827,727.827,123,23,3,0)
PERSON CLASS file (#8932.1), as pointed to by the Person Class field
"^DD",727.827,727.827,123,23,4,0)
(#.01) of the PERSON CLASS field (#8932.1) multiple of the NEW PERSON file
"^DD",727.827,727.827,123,23,5,0)
(#200).
"^DD",727.827,727.827,123,"DT")
3130312
"^DD",727.827,727.827,127,0)
PRIMARY PROCEDURE^F^^4;6^K:$L(X)>17!($L(X)<1) X
"^DD",727.827,727.827,127,3)
Answer must be 1-17 characters in length.
"^DD",727.827,727.827,127,21,0)
^.001^3^3^3150527^^^^
"^DD",727.827,727.827,127,21,1,0)
Identifies the CPT code used during the visit that is considered to be 
"^DD",727.827,727.827,127,21,2,0)
the primary procedure.  This entry will include the CPT code as well as 
"^DD",727.827,727.827,127,21,3,0)
any modifiers associated with the code.
"^DD",727.827,727.827,127,23,0)
^^7^7^3150527^
"^DD",727.827,727.827,127,23,1,0)
A call is made to VISIT^ECXSCX1 which in turns calls ENCEVENT^PXAPI.  
"^DD",727.827,727.827,127,23,2,0)
This call returns data related to the visit, including any assigned CPT 
"^DD",727.827,727.827,127,23,3,0)
codes and their identifiers.  Part of the data returned from the PXAPI 
"^DD",727.827,727.827,127,23,4,0)
call is the PRINCIPAL PROCEDURE field (#.07) of the V CPT file
"^DD",727.827,727.827,127,23,5,0)
(#9000010.18). If this field is set to yes then the CPT code and its
"^DD",727.827,727.827,127,23,6,0)
modifiers are the primary procedure performed during this visit and will
"^DD",727.827,727.827,127,23,7,0)
be captured in this field.
"^DD",727.827,727.827,127,"DT")
3140306
"^DD",727.827,727.827,130,0)
CLINIC IEN^P44'^SC(^4;9^Q
"^DD",727.827,727.827,130,3)
Select the clinic associated with the visit.
"^DD",727.827,727.827,130,21,0)
^.001^1^1^3150223^^^
"^DD",727.827,727.827,130,21,1,0)
The specific clinic associated with the patient encounter.
"^DD",727.827,727.827,130,23,0)
^.001^4^4^3150223^^
"^DD",727.827,727.827,130,23,1,0)
For encounters, the clinic comes from the LOCATION field (#.04) of the 
"^DD",727.827,727.827,130,23,2,0)
OUTPATIENT ENCOUNTER file (#409.68).  For no-shows, the clinic, as 
"^DD",727.827,727.827,130,23,3,0)
identified by the TYPE field (#2) of the HOSPITAL LOCATION file (#44) is 
"^DD",727.827,727.827,130,23,4,0)
used.
"^DD",727.827,727.827,130,"DT")
3150211
"^DD",727.829,727.829,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.829,727.829,1,.1)
Year/Month
"^DD",727.829,727.829,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.829,727.829,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.829,727.829,1,3)
Answer must be 6 characters in length.
"^DD",727.829,727.829,1,21,0)
^.001^2^2^3150605^^^^
"^DD",727.829,727.829,1,21,1,0)
A six character numeric string representing the year and the month
"^DD",727.829,727.829,1,21,2,0)
for which this extract was performed.
"^DD",727.829,727.829,1,23,0)
^^6^6^3150605^
"^DD",727.829,727.829,1,23,1,0)
YEAR MONTH is derived by parsing the Fileman format end date of the 
"^DD",727.829,727.829,1,23,2,0)
extract. The month is determined by taking the 4th and 5th characters of
"^DD",727.829,727.829,1,23,3,0)
the end date, the year by taking the 2nd and 3rd characters, and the
"^DD",727.829,727.829,1,23,4,0)
century is then calculated by taking the 1st character of the end date,
"^DD",727.829,727.829,1,23,5,0)
and adding 17 to  it. The century is then concatenated with the year and
"^DD",727.829,727.829,1,23,6,0)
month, giving the results in YYYYMM format.
"^DD",727.829,727.829,1,"DT")
3050301
"^DD",727.829,727.829,7,0)
IN/OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;^0;8^Q
"^DD",727.829,727.829,7,3)
Enter the patient's status for this extract entry.
"^DD",727.829,727.829,7,21,0)
^.001^2^2^3150605^^^
"^DD",727.829,727.829,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this
"^DD",727.829,727.829,7,21,2,0)
extract.
"^DD",727.829,727.829,7,23,0)
^^10^10^3150605^
"^DD",727.829,727.829,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.829,727.829,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine 
"^DD",727.829,727.829,7,23,3,0)
inpatient/outpatient status.  If the patient is an outpatient, processing 
"^DD",727.829,727.829,7,23,4,0)
stops and the field is set to O. If the patient is an inpatient then 
"^DD",727.829,727.829,7,23,5,0)
$$INOUTP^ECXUTL4 is called to look at the treating specialty.  If the 
"^DD",727.829,727.829,7,23,6,0)
patient's treating specialty exists in the DSS TREATING SPECIALTY 
"^DD",727.829,727.829,7,23,7,0)
TRANSLATION file (#727.831) then the value of the INPAT/OUTPAT CODE field 
"^DD",727.829,727.829,7,23,8,0)
(#5) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831) is used.  
"^DD",727.829,727.829,7,23,9,0)
If the treating specialty is not found in the DSS TREATING SPECIALTY 
"^DD",727.829,727.829,7,23,10,0)
TRANSLATION file (#727.831) then the indicator is set to I.
"^DD",727.829,727.829,7,"DT")
3120608
"^DD",727.829,727.829,30,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^1;2^Q
"^DD",727.829,727.829,30,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.829,727.829,30,21,0)
^.001^6^6^3150610^^^^
"^DD",727.829,727.829,30,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.829,727.829,30,21,2,0)
Care Center) Reconciliation.
"^DD",727.829,727.829,30,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.829,727.829,30,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.829,727.829,30,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.829,727.829,30,21,6,0)
pays for.
"^DD",727.829,727.829,30,23,0)
^^7^7^3150610^
"^DD",727.829,727.829,30,23,1,0)
If the VistA Patient Type Code (TYPE field (#391) of the PATIENT file (#2)
"^DD",727.829,727.829,30,23,2,0)
 = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.829,727.829,30,23,3,0)
the VistA Other Eligibility multiple (PATIENT ELIGIBILITIES field (#361) 
"^DD",727.829,727.829,30,23,4,0)
of the PATIENT file (#2)), which points to locally modifiable ELIGIBILITY
"^DD",727.829,727.829,30,23,5,0)
CODE file (#8) should be evaluated. If the value in the
"^DD",727.829,727.829,30,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.829,727.829,30,23,7,0)
the value should be placed in this field.
"^DD",727.829,727.829,30,"DT")
3100903
"^DD",727.833,727.833,1,0)
YEAR MONTH^FO^^0;2^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.833,727.833,1,2)
S Y(0)=Y S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.833,727.833,1,2.1)
S Y=$$ECXYMX^ECXUTL(Y)
"^DD",727.833,727.833,1,3)
Answer must be 6 characters in length.
"^DD",727.833,727.833,1,21,0)
^.001^2^2^3150616^^^^
"^DD",727.833,727.833,1,21,1,0)
A six character string representing the year and the month for which this
"^DD",727.833,727.833,1,21,2,0)
extract was performed.
"^DD",727.833,727.833,1,23,0)
^^6^6^3150616^
"^DD",727.833,727.833,1,23,1,0)
YEAR MONTH is derived by parsing the fileman format end date of the 
"^DD",727.833,727.833,1,23,2,0)
extract. The month is determined by taking the 4th and 5th characters of
"^DD",727.833,727.833,1,23,3,0)
the end date, the year by taking the 2nd and 3rd characters, and the
"^DD",727.833,727.833,1,23,4,0)
century is then calculated by taking the 1st character of the end date,
"^DD",727.833,727.833,1,23,5,0)
and adding 17 to  it. The century is then concatenated with the year and
"^DD",727.833,727.833,1,23,6,0)
month, giving the results in YYYYMM format.  
"^DD",727.833,727.833,1,"DT")
3101025
"^DD",727.833,727.833,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;^0;8^Q
"^DD",727.833,727.833,7,.1)
In Out Patient Indicator
"^DD",727.833,727.833,7,3)
Enter the patient's status for this extract entry.
"^DD",727.833,727.833,7,21,0)
^.001^2^2^3150616^^^^
"^DD",727.833,727.833,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this 
"^DD",727.833,727.833,7,21,2,0)
extract entry.
"^DD",727.833,727.833,7,23,0)
^^10^10^3150616^
"^DD",727.833,727.833,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.833,727.833,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine 
"^DD",727.833,727.833,7,23,3,0)
inpatient/outpatient status.  If the patient is an outpatient, processing 
"^DD",727.833,727.833,7,23,4,0)
stops and the field is set to O.   If the patient is an inpatient then 
"^DD",727.833,727.833,7,23,5,0)
$$INOUTP^ECXUTL4 is called to look at the treating specialty.  If the 
"^DD",727.833,727.833,7,23,6,0)
patient's treating specialty exists in the DSS TREATING SPECIALTY 
"^DD",727.833,727.833,7,23,7,0)
TRANSLATION file (#727.831) then the value of the INPAT/OUTPAT CODE field 
"^DD",727.833,727.833,7,23,8,0)
(#5) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831) is used.
"^DD",727.833,727.833,7,23,9,0)
If the treating specialty is not found in the DSS TREATING SPECIALTY 
"^DD",727.833,727.833,7,23,10,0)
TRANSLATION file (#727.831) then the indicator is set to I.
"^DD",727.833,727.833,7,"DT")
3101108
"^DD",727.833,727.833,11,0)
STATE^F^^0;12^K:$L(X)>2!($L(X)<2) X
"^DD",727.833,727.833,11,3)
Answer must be 2 characters in length.
"^DD",727.833,727.833,11,21,0)
^.001^1^1^3150617^^^^
"^DD",727.833,727.833,11,21,1,0)
The state in which the patient resides.
"^DD",727.833,727.833,11,23,0)
^^4^4^3150617^
"^DD",727.833,727.833,11,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4)
"^DD",727.833,727.833,11,23,2,0)
in this file, STATE data is derived from the STATE field (#.115) in the
"^DD",727.833,727.833,11,23,3,0)
PATIENT file (#2) which points to the STATE file (#5). For the STATE file
"^DD",727.833,727.833,11,23,4,0)
entry, data transmitted is the two character VA STATE CODE field (#2).
"^DD",727.833,727.833,11,"DT")
3101109
"^DD",727.833,727.833,12,0)
COUNTY^F^^0;13^K:$L(X)>3!($L(X)<3) X
"^DD",727.833,727.833,12,3)
Answer must be 3 characters in length.
"^DD",727.833,727.833,12,21,0)
^.001^1^1^3150617^^^^
"^DD",727.833,727.833,12,21,1,0)
This is the County in which the Patient resides.
"^DD",727.833,727.833,12,23,0)
^^5^5^3150617^
"^DD",727.833,727.833,12,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4)
"^DD",727.833,727.833,12,23,2,0)
in this file, data is taken from the COUNTY field (#.117) in the PATIENT
"^DD",727.833,727.833,12,23,3,0)
file (#2), which points to a sub-file record in the COUNTY multiple (#3)
"^DD",727.833,727.833,12,23,4,0)
of the STATE file (#5). The three character VA COUNTY CODE field
"^DD",727.833,727.833,12,23,5,0)
(#2) within the COUNTY multiple (#3) is used.
"^DD",727.833,727.833,12,"DT")
3101108
"^DD",727.833,727.833,13,0)
ZIP +4^F^^0;14^K:$L(X)>10!($L(X)<5) X
"^DD",727.833,727.833,13,.1)
Zip Code
"^DD",727.833,727.833,13,3)
Answer must be 5-10 characters in length.
"^DD",727.833,727.833,13,21,0)
^.001^2^2^3150616^^^^
"^DD",727.833,727.833,13,21,1,0)
The ZIP code for where the patient resides. The 5-character ZIP code is 
"^DD",727.833,727.833,13,21,2,0)
provided if ZIP+4 is not available. 
"^DD",727.833,727.833,13,23,0)
^.001^4^4^3150616^^
"^DD",727.833,727.833,13,23,1,0)
The patient's ZIP code with optional 4-digit extension as found in
"^DD",727.833,727.833,13,23,2,0)
the ZIP+4 field (#.1112) of the patient's record in the PATIENT
"^DD",727.833,727.833,13,23,3,0)
file (#2). While the ZIP+4 field in the PATIENT file (#2) is a max of 9
"^DD",727.833,727.833,13,23,4,0)
characters, it does put the "-" in if the ZIP code is a +4 type.
"^DD",727.833,727.833,13,"DT")
3101102
"^DD",727.833,727.833,15,0)
WARD^P44'^SC(^0;16^Q
"^DD",727.833,727.833,15,3)
Enter the ward location for this patient.
"^DD",727.833,727.833,15,21,0)
^.001^1^1^3150616^^^^
"^DD",727.833,727.833,15,21,1,0)
Current ward where the patient is located.
"^DD",727.833,727.833,15,23,0)
^^6^6^3150616^
"^DD",727.833,727.833,15,23,1,0)
This field is initialized to a null, indicating an outpatient status.
"^DD",727.833,727.833,15,23,2,0)
A call to IN5^VADPT using the patient IEN and the event date (DAY 
"^DD",727.833,727.833,15,23,3,0)
field (#8) in FM format) is made.  If data is returned identifying an
"^DD",727.833,727.833,15,23,4,0)
inpatient episode, the value of VAIP(5), ward  location, is used to get
"^DD",727.833,727.833,15,23,5,0)
the HOSPITAL LOCATION FILE POINTER file (#44) in the WARD LOCATION file
"^DD",727.833,727.833,15,23,6,0)
(#42) which is a pointer to the HOSPITAL LOCATION file (#44).
"^DD",727.833,727.833,15,"DT")
3101118
"^DD",727.833,727.833,16,0)
TREATING SPECIALTY^F^^0;17^K:$L(X)>2!($L(X)<1) X
"^DD",727.833,727.833,16,3)
Answer must be 1-2 characters in length.
"^DD",727.833,727.833,16,21,0)
^.001^1^1^3150616^^^^
"^DD",727.833,727.833,16,21,1,0)
The PTF CODE of the treating specialty associated with this extract record.
"^DD",727.833,727.833,16,23,0)
^^8^8^3150616^
"^DD",727.833,727.833,16,23,1,0)
This field is initialized to a null, indicating an outpatient status. 
"^DD",727.833,727.833,16,23,2,0)
A call to IN5^VADPT using the patient IEN and the event date (DAY 
"^DD",727.833,727.833,16,23,3,0)
field (#8) in FM format) is made. If data returns a patient movement
"^DD",727.833,727.833,16,23,4,0)
number (indicating inpatient status), then the value of VAIP(8), which is
"^DD",727.833,727.833,16,23,5,0)
the pointer to the FACILITY TREATING SPECIALTY file (#45.7), is used to
"^DD",727.833,727.833,16,23,6,0)
get the SPECIALTY field (#1) which points to the SPECIALTY file (#42.4).
"^DD",727.833,727.833,16,23,7,0)
Then, the PTF CODE field (#7) of the SPECIALTY file (#42.4) is obtained
"^DD",727.833,727.833,16,23,8,0)
and stored instead of the IEN of the specialty.
"^DD",727.833,727.833,16,"DT")
3101118
"^DD",727.833,727.833,17,0)
PROVIDER^F^^0;18^K:$L(X)>11!($L(X)<2) X
"^DD",727.833,727.833,17,3)
Answer must be 2-11 characters in length.
"^DD",727.833,727.833,17,21,0)
^.001^1^1^3150617^^^^
"^DD",727.833,727.833,17,21,1,0)
The provider assigned to this patient through the PCMM module.
"^DD",727.833,727.833,17,23,0)
^^9^9^3150617^
"^DD",727.833,727.833,17,23,1,0)
Derived by calling API EN^PSJBCMA1. Using the ORDER REFERENCE NUMBER 
"^DD",727.833,727.833,17,23,2,0)
field (#26) from this file. Provider will be returned in the 1st piece of
"^DD",727.833,727.833,17,23,3,0)
the returning ^TMP(PTMP,$J,1) global.  It is extracted from the PHARMACY
"^DD",727.833,727.833,17,23,4,0)
PATIENT file (#55) by either the PROVIDER field (#1) of the UNIT DOSE
"^DD",727.833,727.833,17,23,5,0)
multiple (#62) or the PROVIDER field (#.06) of the IV multiple (#100).
"^DD",727.833,727.833,17,23,6,0)
 
"^DD",727.833,727.833,17,23,7,0)
A "2" is prefixed to the pointer value to indicate that the source file is
"^DD",727.833,727.833,17,23,8,0)
"200".  For example, if the IEN of the provider in the NEW PERSON file
"^DD",727.833,727.833,17,23,9,0)
(#200) is 98765, the value that will be stored is 298765.
"^DD",727.833,727.833,17,"DT")
3120717
"^DD",727.833,727.833,23,0)
PRIMARY CARE TEAM^P404.51'^SCTM(404.51,^0;24^Q
"^DD",727.833,727.833,23,3)
Select the patient's primary care team.
"^DD",727.833,727.833,23,21,0)
^.001^1^1^3150616^^
"^DD",727.833,727.833,23,21,1,0)
The primary care team assigned to this patient.
"^DD",727.833,727.833,23,23,0)
^^5^5^3150616^
"^DD",727.833,727.833,23,23,1,0)
Using the DAY field (#8) (in Fileman format) and  the patient pointer
"^DD",727.833,727.833,23,23,2,0)
(DFN) stored in the PATIENT NO. - DFN field (#4) in this file, a call is
"^DD",727.833,727.833,23,23,3,0)
made to the Scheduling API, OUTPTTM^SDUTL3. The API returns the team's
"^DD",727.833,727.833,23,23,4,0)
internal entry number and name from the TEAM file (#404.51).  Only the
"^DD",727.833,727.833,23,23,5,0)
pointer to the TEAM file (#404.51) is transmitted.
"^DD",727.833,727.833,23,"DT")
3101118
"^DD",727.833,727.833,25,0)
PLACE ORDER NUMBER^P53.79'^PSB(53.79,^1;1^Q
"^DD",727.833,727.833,25,3)
Please select the patient's Place Order Number.
"^DD",727.833,727.833,25,21,0)
^.001^2^2^3150616^^
"^DD",727.833,727.833,25,21,1,0)
This is the order number of the Patient's Barcode Medication 
"^DD",727.833,727.833,25,21,2,0)
Administration record.
"^DD",727.833,727.833,25,23,0)
^^3^3^3150616^
"^DD",727.833,727.833,25,23,1,0)
This is the IEN of the BCMA MEDICATION LOG file (#53.79). Derived from
"^DD",727.833,727.833,25,23,2,0)
using the 'AADT' cross reference of the BCMA MEDICATION LOG file (#53.79) 
"^DD",727.833,727.833,25,23,3,0)
, based on the start and end dates of the extract.
"^DD",727.833,727.833,25,"DT")
3101118
"^DD",727.833,727.833,26,0)
ORDER REFERENCE NUMBER^F^^1;2^K:$L(X)>15!($L(X)<1) X
"^DD",727.833,727.833,26,3)
Answer must be 1-15 characters in length.
"^DD",727.833,727.833,26,21,0)
^.001^2^2^3150616^^^^
"^DD",727.833,727.833,26,21,1,0)
Contains the IEN to the actual order in the PHARMACY PATIENT (#55)
"^DD",727.833,727.833,26,21,2,0)
followed by a U for Unit Dose or V for IV.
"^DD",727.833,727.833,26,23,0)
^^3^3^3150616^
"^DD",727.833,727.833,26,23,1,0)
This field is derived by using the ORDER REFERENCE NUMBER field (#.11) 
"^DD",727.833,727.833,26,23,2,0)
of the BCMA MEDICATION LOG file (#53.79), as pointed to by the PLACE 
"^DD",727.833,727.833,26,23,3,0)
ORDER NUMBER field (#25) of this file.
"^DD",727.833,727.833,26,"DT")
3101108
"^DD",727.833,727.833,27,0)
ROUTE^P51.2'^PS(51.2,^1;3^Q
"^DD",727.833,727.833,27,3)
Select the medication route.
"^DD",727.833,727.833,27,21,0)
^.001^2^2^3150616^^^^
"^DD",727.833,727.833,27,21,1,0)
This is the route of administration for Unit Dose or IV medication for a
"^DD",727.833,727.833,27,21,2,0)
patient.
"^DD",727.833,727.833,27,23,0)
^^3^3^3150616^
"^DD",727.833,727.833,27,23,1,0)
This field is extracted from the PARMACY PATIENT file (#55) by either the
"^DD",727.833,727.833,27,23,2,0)
MED ROUTE field (#3) of its Unit Dose multiple (#62). Or, the MED ROUTE
"^DD",727.833,727.833,27,23,3,0)
field (#132) of its IV multiple (#100).
"^DD",727.833,727.833,27,"DT")
3101108
"^DD",727.833,727.833,28,0)
TIME^F^^1;4^K:$L(X)>6!($L(X)<6) X
"^DD",727.833,727.833,28,3)
Answer must be 6 characters in length.
"^DD",727.833,727.833,28,21,0)
^.001^1^1^3150616^^^
"^DD",727.833,727.833,28,21,1,0)
This field contains the actual time the medication was administered.
"^DD",727.833,727.833,28,23,0)
^^4^4^3150616^
"^DD",727.833,727.833,28,23,1,0)
This field is taken from the ACTION DATE/TIME field (#.06) from the BCMA 
"^DD",727.833,727.833,28,23,2,0)
MEDICATION LOG file (#53.79). It is parsed so that only the time portion 
"^DD",727.833,727.833,28,23,3,0)
of the field is stored in HHMMSS format. The date portion is stored in 
"^DD",727.833,727.833,28,23,4,0)
the DAY field (#8) of this file.
"^DD",727.833,727.833,28,"DT")
3120418
"^DD",727.833,727.833,29,0)
COMPONENT CODE^V^^1;5^Q
"^DD",727.833,727.833,29,3)
Please select the patient's component code.
"^DD",727.833,727.833,29,21,0)
^.001^2^2^3150616^^^
"^DD",727.833,727.833,29,21,1,0)
The COMPONENT CODE contains either the dispensed drug, IV additive or 
"^DD",727.833,727.833,29,21,2,0)
IV solution that was administered for this patient.
"^DD",727.833,727.833,29,23,0)
^^11^11^3150616^
"^DD",727.833,727.833,29,23,1,0)
This is a variable pointer field used to identify either the DRUG 
"^DD",727.833,727.833,29,23,2,0)
file (#50), IV ADDITIVES file (#52.6), or the IV SOLUTIONS file (#52.7).
"^DD",727.833,727.833,29,23,3,0)
 
"^DD",727.833,727.833,29,23,4,0)
Enter one of the following:
"^DD",727.833,727.833,29,23,5,0)
 
"^DD",727.833,727.833,29,23,6,0)
 A.EntryName to select a IV ADDITIVES file (#52.6).
"^DD",727.833,727.833,29,23,7,0)
 D.EntryName to select a DRUG file (#50).
"^DD",727.833,727.833,29,23,8,0)
 S.EntryName to select a IV SOLUTIONS file (#52.7).
"^DD",727.833,727.833,29,23,9,0)
 
"^DD",727.833,727.833,29,23,10,0)
The COMPONENT TYPE field (#34) will contain the variable pointer letter
"^DD",727.833,727.833,29,23,11,0)
(A=IV ADDITIVES, D=DRUG, S=IV SOLUTIONS) from this field.
"^DD",727.833,727.833,29,"DT")
3120418
"^DD",727.833,727.833,29,"V",0)
^.12P
"^DD",727.833,727.833,30,0)
COMPONENT DOSE ORDERED^F^^1;6^K:$L(X)>30!($L(X)<1) X
"^DD",727.833,727.833,30,3)
Answer must be 1-30 characters in length.
"^DD",727.833,727.833,30,21,0)
^.001^3^3^3150616^^^^
"^DD",727.833,727.833,30,21,1,0)
COMPONENT DOSE ORDERED contains either the dispensed drug, IV additive,
"^DD",727.833,727.833,30,21,2,0)
or IV solution dose ordered, to which, this medication was administered
"^DD",727.833,727.833,30,21,3,0)
for this patient.
"^DD",727.833,727.833,30,23,0)
^^3^3^3150616^
"^DD",727.833,727.833,30,23,1,0)
Its value is free text derived from the DOSE ORDERED field (#.02) of the 
"^DD",727.833,727.833,30,23,2,0)
subfile multiples (#.5),(#.6),(#.7) of the BCMA MEDICATION LOG file
"^DD",727.833,727.833,30,23,3,0)
(#53.79).
"^DD",727.833,727.833,30,"DT")
3130502
"^DD",727.833,727.833,31,0)
COMPONENT DOSE GIVEN^F^^1;7^K:$L(X)>30!($L(X)<1) X
"^DD",727.833,727.833,31,3)
Answer must be 1-30 characters in length.
"^DD",727.833,727.833,31,21,0)
^.001^3^3^3150616^^^^
"^DD",727.833,727.833,31,21,1,0)
The COMPONENT DOSE GIVEN contains either the dispensed drug, IV additive,
"^DD",727.833,727.833,31,21,2,0)
or IV solutions dose given, to which, this medication was administered 
"^DD",727.833,727.833,31,21,3,0)
for this patient.
"^DD",727.833,727.833,31,23,0)
^^3^3^3150616^
"^DD",727.833,727.833,31,23,1,0)
This field's value is free text derived from the DOSE GIVEN field (#.03)
"^DD",727.833,727.833,31,23,2,0)
of the subfile multiples (#.5),(#.6),(#.7) of the BCMA MEDICATION LOG file
"^DD",727.833,727.833,31,23,3,0)
(#53.79).
"^DD",727.833,727.833,31,"AUDIT")
n
"^DD",727.833,727.833,31,"DT")
3150901
"^DD",727.833,727.833,32,0)
COMPONENT UNITS^F^^1;8^K:$L(X)>40!($L(X)<1) X
"^DD",727.833,727.833,32,3)
Answer must be 1-40 characters in length.
"^DD",727.833,727.833,32,21,0)
^.001^3^3^3150616^^^
"^DD",727.833,727.833,32,21,1,0)
The Component Units contains either the dispensed drug, IV additive,
"^DD",727.833,727.833,32,21,2,0)
or IV solutions unit of administration, to which this medication was
"^DD",727.833,727.833,32,21,3,0)
administered for this patient.
"^DD",727.833,727.833,32,23,0)
^^3^3^3150616^
"^DD",727.833,727.833,32,23,1,0)
The Component Units value is free text derived from the UNIT OF
"^DD",727.833,727.833,32,23,2,0)
ADMINISTRATION field (#.04) of the subfile multiples (#.5),(#.6),(#.7) of
"^DD",727.833,727.833,32,23,3,0)
the BCMA Medication Log file (#53.79).
"^DD",727.833,727.833,32,"AUDIT")
n
"^DD",727.833,727.833,32,"DT")
3150901
"^DD",727.833,727.833,33,0)
COMPONENT TYPE^S^D:Dispensed Drug;A:Additives;S:Solutions;^1;9^Q
"^DD",727.833,727.833,33,3)
What kind of dose was ordered?
"^DD",727.833,727.833,33,21,0)
^.001^2^2^3150616^^^
"^DD",727.833,727.833,33,21,1,0)
The Component Type is determined by the value destination of the Component
"^DD",727.833,727.833,33,21,2,0)
Code.
"^DD",727.833,727.833,33,23,0)
^^4^4^3150616^
"^DD",727.833,727.833,33,23,1,0)
This field is derived based on the COMPONENT CODE field (#30) of this 
"^DD",727.833,727.833,33,23,2,0)
file. If the component code is from the DRUG file (#50), it will be "D",
"^DD",727.833,727.833,33,23,3,0)
if it's from the IV ADDITIVES file (#52.6) it will be "A", and if it is
"^DD",727.833,727.833,33,23,4,0)
from IV SOLUTIONS file (#52.7) it will be "S".
"^DD",727.833,727.833,33,"DT")
3120418
"^DD",727.833,727.833,34,0)
ACTION STATUS^S^G:GIVEN;H:HELD;R:REFUSED;N:NOT GIVEN;RM:REMOVED;I:INFUSING;S:STOPPED;C:COMPLETED;M:MISSING DOSE;^1;10^Q
"^DD",727.833,727.833,34,3)
What is the medication administration status?
"^DD",727.833,727.833,34,21,0)
^.001^1^1^3150616^^^
"^DD",727.833,727.833,34,21,1,0)
This is the status of the medication administration.
"^DD",727.833,727.833,34,23,0)
^^2^2^3150616^
"^DD",727.833,727.833,34,23,1,0)
This field is derived from the ACTION STATUS field (#.09) of the BCMA 
"^DD",727.833,727.833,34,23,2,0)
MEDICATION LOG file (#53.79).
"^DD",727.833,727.833,34,"DT")
3120418
"^DD",727.833,727.833,35,0)
ADMINISTRATION MEDICATION^P50.7'^PS(50.7,^1;11^Q
"^DD",727.833,727.833,35,3)
Select the proper medication.
"^DD",727.833,727.833,35,21,0)
^.001^1^1^3150616^^^
"^DD",727.833,727.833,35,21,1,0)
Administration Medication is the medication entered for the order.
"^DD",727.833,727.833,35,23,0)
^^2^2^3150616^
"^DD",727.833,727.833,35,23,1,0)
This field is derived from the ADMINISTRATION MEDICATION field (#.08) of
"^DD",727.833,727.833,35,23,2,0)
the BCMA MEDICATION LOG file (#53.79).
"^DD",727.833,727.833,35,"DT")
3120418
"^DD",727.833,727.833,36,0)
SCHEDULED ADMINISTRATION DATE^F^^1;12^K:$L(X)>8!($L(X)<8) X
"^DD",727.833,727.833,36,3)
Answer must be 8 characters in length.
"^DD",727.833,727.833,36,21,0)
^.001^2^2^3150618^^^^
"^DD",727.833,727.833,36,21,1,0)
If a continuous order this field will contain the actual administration
"^DD",727.833,727.833,36,21,2,0)
date the medication was ordered for.
"^DD",727.833,727.833,36,23,0)
^^3^3^3150618^
"^DD",727.833,727.833,36,23,1,0)
Derived from the SCHEDULED ADMINISTRATION TIME field (#.13) of the BCMA
"^DD",727.833,727.833,36,23,2,0)
MEDICATION LOG file (#53.79). It is parsed so that only the date portion
"^DD",727.833,727.833,36,23,3,0)
is stored in format YYYYMMDD.
"^DD",727.833,727.833,36,"DT")
3120418
"^DD",727.833,727.833,37,0)
SCHEDULED ADMINISTRATION TIME^F^^2;1^K:$L(X)>6!($L(X)<6) X
"^DD",727.833,727.833,37,3)
Answer must be 6 characters in length.
"^DD",727.833,727.833,37,21,0)
^.001^2^2^3150616^^
"^DD",727.833,727.833,37,21,1,0)
If a continuous order this field will contain the actual administration
"^DD",727.833,727.833,37,21,2,0)
time the medication was ordered for.
"^DD",727.833,727.833,37,23,0)
^^3^3^3150616^
"^DD",727.833,727.833,37,23,1,0)
The time is derived from the time value of the SCHEDULED ADMINISTRATION
"^DD",727.833,727.833,37,23,2,0)
TIME field (#.13) of the BCMA MEDICATION LOG file (#53.79). It is parsed 
"^DD",727.833,727.833,37,23,3,0)
so that only the time portion is returned in format HHMMSS.
"^DD",727.833,727.833,37,"DT")
3120418
"^DD",727.833,727.833,38,0)
ORDER SCHEDULE^S^C:CONTINUOUS;P:PRN;O:ONE-TIME;OC:ON-CALL;^2;2^Q
"^DD",727.833,727.833,38,3)
Choose an order schedule.
"^DD",727.833,727.833,38,21,0)
^.001^1^1^3150616^^
"^DD",727.833,727.833,38,21,1,0)
This is the schedule type of the order.
"^DD",727.833,727.833,38,23,0)
^^2^2^3150616^
"^DD",727.833,727.833,38,23,1,0)
Derived from the SCHEDULE ORDER field (#.12) of the BCMA MEDICATION
"^DD",727.833,727.833,38,23,2,0)
LOG file (#53.79).
"^DD",727.833,727.833,38,"DT")
3120418
"^DD",727.833,727.833,39,0)
IV UNIQUE ID^F^^2;3^K:$L(X)>30!($L(X)<3) X
"^DD",727.833,727.833,39,3)
Answer must be 3-30 characters in length.
"^DD",727.833,727.833,39,21,0)
^.001^2^2^3150616^^^
"^DD",727.833,727.833,39,21,1,0)
This is the unique ID number of an IV bag, which is generated from 
"^DD",727.833,727.833,39,21,2,0)
Inpatient Medications.
"^DD",727.833,727.833,39,23,0)
^^2^2^3150616^
"^DD",727.833,727.833,39,23,1,0)
Derived from the IV UNIQUE ID field (#.26) of the BCMA MEDICATION LOG
"^DD",727.833,727.833,39,23,2,0)
file (#53.79).
"^DD",727.833,727.833,39,"DT")
3120418
"^DD",727.833,727.833,40,0)
INFUSION RATE^F^^2;4^K:$L(X)>47!($L(X)<1) X
"^DD",727.833,727.833,40,3)
Answer must be 1-47 characters in length.
"^DD",727.833,727.833,40,21,0)
^.001^2^2^3150616^^
"^DD",727.833,727.833,40,21,1,0)
This is the infusion rate for an IV bag, which is passed by Inpatient
"^DD",727.833,727.833,40,21,2,0)
Medications.
"^DD",727.833,727.833,40,23,0)
^^2^2^3150616^
"^DD",727.833,727.833,40,23,1,0)
The infusion rate is derived from the INFUSION RATE field (#.35) of the
"^DD",727.833,727.833,40,23,2,0)
BCMA MEDICATION LOG file (#53.79).
"^DD",727.833,727.833,40,"DT")
3120418
"^DD",727.833,727.833,41,0)
PRODUCTION DIVISION CODE^F^^2;5^K:$L(X)>7!($L(X)<3) X
"^DD",727.833,727.833,41,3)
Answer must be 3-7 characters in length.
"^DD",727.833,727.833,41,21,0)
^.001^1^1^3150616^^
"^DD",727.833,727.833,41,21,1,0)
This is the facility of the ward where the patient received medication.
"^DD",727.833,727.833,41,23,0)
^^4^4^3150616^
"^DD",727.833,727.833,41,23,1,0)
Derived by getting the PATIENT DIVISION field (#.03) from the BCMA
"^DD",727.833,727.833,41,23,2,0)
MEDICATION LOG file (#53.79), which is a pointer to the INSTITUTION 
"^DD",727.833,727.833,41,23,3,0)
file (#4). The value is then used to call the API RADDIV^ECXDEPT to get
"^DD",727.833,727.833,41,23,4,0)
the STATION NUMBER field (#99) from the INSTITUTION file (#4).
"^DD",727.833,727.833,41,"DT")
3120418
"^DD",727.833,727.833,42,0)
DRUG IEN^P50.68'^PSNDF(50.68,^2;6^Q
"^DD",727.833,727.833,42,3)
Select the drug administered to the patient.
"^DD",727.833,727.833,42,21,0)
^.001^1^1^3150616^^^^
"^DD",727.833,727.833,42,21,1,0)
This is the drug administered to the patient.
"^DD",727.833,727.833,42,23,0)
^^10^10^3150616^
"^DD",727.833,727.833,42,23,1,0)
Using the COMPONENT CODE field (#30) of this file, the IEN of the drug 
"^DD",727.833,727.833,42,23,2,0)
from the DRUG file (#50) is used in a call to $$PHAAPI^ECXUTL5 to get the 
"^DD",727.833,727.833,42,23,3,0)
associated entry in the VA PRODUCT file (#50.68).
"^DD",727.833,727.833,42,23,4,0)
 
"^DD",727.833,727.833,42,23,5,0)
The COMPONENT CODE field (#30) is a variable pointer reference to the file
"^DD",727.833,727.833,42,23,6,0)
that identifies the drug given.  If it's a dispensed drug, it references 
"^DD",727.833,727.833,42,23,7,0)
the DRUG file (#50) and the IEN can be taken directly from there.  
"^DD",727.833,727.833,42,23,8,0)
Otherwise, the IEN will be taken from the GENERIC DRUG field (#1) from
"^DD",727.833,727.833,42,23,9,0)
either the IV ADDITIVES file (#52.6) or the IV SOLUTIONS file (#52.7),
"^DD",727.833,727.833,42,23,10,0)
which is a pointer to the DRUG file (#50).
"^DD",727.833,727.833,42,"DT")
3121205
"^DD",727.833,727.833,43,0)
NDC^F^^2;7^K:$L(X)>20!($L(X)<5) X
"^DD",727.833,727.833,43,3)
Answer must be 5-20 characters in length.
"^DD",727.833,727.833,43,21,0)
^.001^1^1^3150616^^^
"^DD",727.833,727.833,43,21,1,0)
This is the National Drug Code for the drug/supply item in this order.
"^DD",727.833,727.833,43,23,0)
^^16^16^3150616^
"^DD",727.833,727.833,43,23,1,0)
For sites running a version of Inpatient Medications prior to V. 4.5:
"^DD",727.833,727.833,43,23,2,0)
Derived from the NDC field (#31) in the DRUG file (#50) for the drug 
"^DD",727.833,727.833,43,23,3,0)
identified by the GENERIC DRUG field (#1) in either the IV ADDITIVES 
"^DD",727.833,727.833,43,23,4,0)
file (#52.6) for additives or the IV SOLUTIONS file (#52.7) for 
"^DD",727.833,727.833,43,23,5,0)
solutions.
"^DD",727.833,727.833,43,23,6,0)
 
"^DD",727.833,727.833,43,23,7,0)
Using the "AC" cross reference on the IV STATS file (#50.8) and a 
"^DD",727.833,727.833,43,23,8,0)
^TMP( array built from the "AC" cross reference, GENERIC DRUG is 
"^DD",727.833,727.833,43,23,9,0)
derived from the following:
"^DD",727.833,727.833,43,23,10,0)
 
"^DD",727.833,727.833,43,23,11,0)
The IV DRUG field (#.01), the TYPE field (#6), and the IEN of the
"^DD",727.833,727.833,43,23,12,0)
additive or solution for the IV DRUG within the IV DRUG multiple (#2) of
"^DD",727.833,727.833,43,23,13,0)
the DATE multiple (2#) of the IV STATS file (#50).
"^DD",727.833,727.833,43,23,14,0)
 
"^DD",727.833,727.833,43,23,15,0)
For sites running Inpatient Medications V. 4.5 or higher:
"^DD",727.833,727.833,43,23,16,0)
Derived from the NDC field (#31) in the DRUG file (#50).
"^DD",727.833,727.833,43,"DT")
3120418
"^DD",727.833,727.833,45,0)
VA DRUG CLASSIFICATION^F^^2;9^K:$L(X)>5!($L(X)<1) X
"^DD",727.833,727.833,45,3)
Answer must be 1-5 characters in length.
"^DD",727.833,727.833,45,21,0)
^.001^1^1^3150616^^^
"^DD",727.833,727.833,45,21,1,0)
This is the VA Drug Classification for the item in this order.
"^DD",727.833,727.833,45,23,0)
^^2^2^3150616^
"^DD",727.833,727.833,45,23,1,0)
This field is derived from the VA CLASSIFICATION field (#2) of the DRUG 
"^DD",727.833,727.833,45,23,2,0)
file (#50).
"^DD",727.833,727.833,45,"DT")
3120427
"^DD",727.833,727.833,47,0)
DOM, PRRTP & SAARTP INDICATOR^S^P:GEN. PRRTP;T:PTSD PRRTP;S:DOM. PRRTP;H:HOMELESS CWT/TR;A:SA CWT/TR;D:DOMICILIARY;B:PTSD CWT/TR;C:GEN. CWT/TR;^2;11^Q
"^DD",727.833,727.833,47,3)
Enter the indicator associated with the treating specialty assigned to this record.
"^DD",727.833,727.833,47,21,0)
^.001^2^2^3150616^^^^
"^DD",727.833,727.833,47,21,1,0)
Indicates if the patient is admitted to either a RRTP, PRRTP, or SARRTP 
"^DD",727.833,727.833,47,21,2,0)
at the time care is provided.
"^DD",727.833,727.833,47,23,0)
^^5^5^3150616^
"^DD",727.833,727.833,47,23,1,0)
If the patient's treating specialty exist in the DSS TREATING SPECIALTY
"^DD",727.833,727.833,47,23,2,0)
TRANSLATION file (#727.831), data is derived from the DOM/PRRTP/SARRTP
"^DD",727.833,727.833,47,23,3,0)
CODE field (#2) of the DSS TREATING SPECIALTY TRANSLATION file (#727.831).
"^DD",727.833,727.833,47,23,4,0)
 
"^DD",727.833,727.833,47,23,5,0)
Otherwise, the value is null.
"^DD",727.833,727.833,47,"DT")
3120427
"^DD",727.833,727.833,48,0)
OBSERVATION PATIENT INDICATOR^S^NO:NO;YES:YES;^2;12^Q
"^DD",727.833,727.833,48,3)
Enter observation patient status for this record.
"^DD",727.833,727.833,48,21,0)
^.001^1^1^3150709^^^^
"^DD",727.833,727.833,48,21,1,0)
Indicates if a patient is considered to be an observation patient.
"^DD",727.833,727.833,48,23,0)
^^12^12^3150709^
"^DD",727.833,727.833,48,23,1,0)
Data (YES, NO) is retrieved from API call $$OBSPAT^ECXUTL4:
"^DD",727.833,727.833,48,23,2,0)
 
"^DD",727.833,727.833,48,23,3,0)
If the patient's treating specialty exist in the DSS TREATING SPECIALTY
"^DD",727.833,727.833,48,23,4,0)
TRANSLATION file (#727.831), data is derived from the OBSERVATION PAT
"^DD",727.833,727.833,48,23,5,0)
INDICATOR field (#4) of the DSS TREATING SPECIALTY TRANSLATION file
"^DD",727.833,727.833,48,23,6,0)
(#727.831).
"^DD",727.833,727.833,48,23,7,0)
 
"^DD",727.833,727.833,48,23,8,0)
If patient is outpatient and treating specialty not in file, AND Feeder
"^DD",727.833,727.833,48,23,9,0)
Key (CLI) or DSS ID (MTL,IVP,ECQ,NOS,SUR) is 290-297, Observation
"^DD",727.833,727.833,48,23,10,0)
Patient Ind=YES.  Else, Observation Patient Ind=NO.
"^DD",727.833,727.833,48,23,11,0)
 
"^DD",727.833,727.833,48,23,12,0)
Otherwise, Observation Patient Ind=NO.
"^DD",727.833,727.833,48,"DT")
3120612
"^DD",727.833,727.833,50,0)
MEANS TEST^F^^2;14^K:$L(X)>1!($L(X)<1) X
"^DD",727.833,727.833,50,3)
Enter the means test code for this patient (1 character in length).
"^DD",727.833,727.833,50,21,0)
^.001^1^1^3150617^^^^
"^DD",727.833,727.833,50,21,1,0)
The current means test category for this patient.
"^DD",727.833,727.833,50,23,0)
^.001^8^8^3150617^^
"^DD",727.833,727.833,50,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4)
"^DD",727.833,727.833,50,23,2,0)
in this file, MEANS TEST data is derived from the CURRENT MEANS TEST
"^DD",727.833,727.833,50,23,3,0)
STATUS field (#.14) in the PATIENT file (#2). This field is a pointer to
"^DD",727.833,727.833,50,23,4,0)
the MEANS TEST STATUS file (#408.32). Using the means test pointer, the
"^DD",727.833,727.833,50,23,5,0)
data is derived from the CODE field (#.02) in the MEANS TEST STATUS file
"^DD",727.833,727.833,50,23,6,0)
(#408.32).
"^DD",727.833,727.833,50,23,7,0)
 
"^DD",727.833,727.833,50,23,8,0)
The means test code is returned by ELIG^VADPT.  
"^DD",727.833,727.833,50,"DT")
3120612
"^DD",727.833,727.833,52,0)
ENROLLMENT LOCATION^F^^2;16^K:$L(X)>7!($L(X)<3) X
"^DD",727.833,727.833,52,3)
Enter the station number of the preferred facility for care (3 - 7 characters).
"^DD",727.833,727.833,52,21,0)
^.001^2^2^3150617^^^^
"^DD",727.833,727.833,52,21,1,0)
The facility that the patient chooses to designate as his preferred
"^DD",727.833,727.833,52,21,2,0)
location for care.
"^DD",727.833,727.833,52,23,0)
^.001^5^5^3150617^^
"^DD",727.833,727.833,52,23,1,0)
The PREFERRED FACILITY field (#27.02) of the PATIENT file (#2) is defined
"^DD",727.833,727.833,52,23,2,0)
as the facility that the patient chooses to designate as his preferred
"^DD",727.833,727.833,52,23,3,0)
location for care. The PREFERRED FACILITY field (#27.02) is a pointer to
"^DD",727.833,727.833,52,23,4,0)
the INSTITUTION file (#4). From that file, the value in the STATION NUMBER
"^DD",727.833,727.833,52,23,5,0)
field (#99) is used.
"^DD",727.833,727.833,52,"DT")
3120612
"^DD",727.833,727.833,53,0)
ENROLLMENT CATEGORY^S^E:ENROLLED;N:NOT ENROLLED;P:IN PROCESS;^2;17^Q
"^DD",727.833,727.833,53,3)
What is the patient's enrollment status?
"^DD",727.833,727.833,53,21,0)
^.001^1^1^3150616^^
"^DD",727.833,727.833,53,21,1,0)
Patient's enrollment category.
"^DD",727.833,727.833,53,23,0)
^^2^2^3150616^
"^DD",727.833,727.833,53,23,1,0)
ENROLLMENT CATEGORY is derived from the standard call $$CATEGORY^DGENA4
"^DD",727.833,727.833,53,23,2,0)
using the INPUT patient DFN and the ENROLLMENT STATUS field (#55).
"^DD",727.833,727.833,53,"DT")
3120427
"^DD",727.833,727.833,55,0)
ENROLLMENT PRIORITY^F^^2;19^K:$L(X)>2!($L(X)<1) X
"^DD",727.833,727.833,55,3)
Answer must be 1-2 characters in length.
"^DD",727.833,727.833,55,21,0)
^.001^2^2^3150616^^
"^DD",727.833,727.833,55,21,1,0)
This field contains the enrollment priority group and the enrollment
"^DD",727.833,727.833,55,21,2,0)
priority subgroup.
"^DD",727.833,727.833,55,23,0)
^^21^21^3150616^
"^DD",727.833,727.833,55,23,1,0)
ENROLLMENT PRIORITY field contains the ENROLLMENT PRIORITY GROUP field
"^DD",727.833,727.833,55,23,2,0)
(#.07) and the ENROLLMENT PRIORITY SUBGROUP field (#.12) from the PATIENT
"^DD",727.833,727.833,55,23,3,0)
ENROLLMENT file (#27.11).
"^DD",727.833,727.833,55,23,4,0)
 
"^DD",727.833,727.833,55,23,5,0)
ENROLLMENT PRIORITY Groups determined for a patient enrollment include:
"^DD",727.833,727.833,55,23,6,0)
 
"^DD",727.833,727.833,55,23,7,0)
                                '1' FOR GROUP 1 
"^DD",727.833,727.833,55,23,8,0)
                                '2' FOR GROUP 2 
"^DD",727.833,727.833,55,23,9,0)
                                '3' FOR GROUP 3 
"^DD",727.833,727.833,55,23,10,0)
                                '4' FOR GROUP 4 
"^DD",727.833,727.833,55,23,11,0)
                                '5' FOR GROUP 5 
"^DD",727.833,727.833,55,23,12,0)
                                '6' FOR GROUP 6 
"^DD",727.833,727.833,55,23,13,0)
                                '7' FOR GROUP 7 
"^DD",727.833,727.833,55,23,14,0)
                                '8' FOR GROUP 8 
"^DD",727.833,727.833,55,23,15,0)
 
"^DD",727.833,727.833,55,23,16,0)
ENROLLMENT PRIORITY Subgroups determined for a patient enrollment include:
"^DD",727.833,727.833,55,23,17,0)
 
"^DD",727.833,727.833,55,23,18,0)
                                'a' FOR 1 
"^DD",727.833,727.833,55,23,19,0)
                                'c' FOR 3 
"^DD",727.833,727.833,55,23,20,0)
                                'e' FOR 5 
"^DD",727.833,727.833,55,23,21,0)
                                'g' FOR 7   
"^DD",727.833,727.833,55,"DT")
3120427
"^DD",727.833,727.833,56,0)
USER ENROLLEE^S^U:USER ENROLLEE;^2;20^Q
"^DD",727.833,727.833,56,3)
Enter patient's current enrollment status.
"^DD",727.833,727.833,56,21,0)
^.001^2^2^3150622^^^^
"^DD",727.833,727.833,56,21,1,0)
Indicates whether a Veteran has User Enrollee status for the current or 
"^DD",727.833,727.833,56,21,2,0)
future fiscal year.
"^DD",727.833,727.833,56,23,0)
^^5^5^3150622^
"^DD",727.833,727.833,56,23,1,0)
User enrollee is determined by checking the PATIENT ENROLLMENT file
"^DD",727.833,727.833,56,23,2,0)
(#27.11) file. When a user has a current or future fiscal year in the
"^DD",727.833,727.833,56,23,3,0)
VistA User Enrollee Status field (#.04) the value is set to 'U' and Null
"^DD",727.833,727.833,56,23,4,0)
if no date or a past year's value is contained. Determined by the use of
"^DD",727.833,727.833,56,23,5,0)
an API: $$UESTAT^EASUSER where the Patient Identifier (DFN) is passed in.
"^DD",727.833,727.833,56,"DT")
3120427
"^DD",727.833,727.833,57,0)
ETHNICITY^F^^2;21^K:$L(X)>6!($L(X)<1) X
"^DD",727.833,727.833,57,3)
Answer must be 1-6 characters in length.
"^DD",727.833,727.833,57,21,0)
^.001^1^1^3150617^^^^
"^DD",727.833,727.833,57,21,1,0)
The patient's PTF Ethnicity code.
"^DD",727.833,727.833,57,23,0)
^^9^9^3150617^
"^DD",727.833,727.833,57,23,1,0)
Using the patient pointer (DFN) ETHNICITY is derived from the PTF VALUE
"^DD",727.833,727.833,57,23,2,0)
field (#5) of the ETHNICITY file (#10.2) pointed to by the ETHNICITY
"^DD",727.833,727.833,57,23,3,0)
INFORMATION field (#.01) of the ETHNICITY INFORMATION sub-file (#2.06) of
"^DD",727.833,727.833,57,23,4,0)
the PATIENT file (#2). The PTF VALUE field (#5) is just 1 character, this 
"^DD",727.833,727.833,57,23,5,0)
field holds up to 6 self-identified ethnicities.
"^DD",727.833,727.833,57,23,6,0)
 
"^DD",727.833,727.833,57,23,7,0)
The above will occur only if the METHOD OF COLLECTION field (#.02) of the
"^DD",727.833,727.833,57,23,8,0)
ETHNICITY INFORMATION sub-file (#2.06) is set to 1 (SELF-IDENTIFICATION),
"^DD",727.833,727.833,57,23,9,0)
otherwise ETHNICITY with be set to null.
"^DD",727.833,727.833,57,"DT")
3120427
"^DD",727.833,727.833,60,0)
PERIOD OF SERVICE^F^^2;24^K:$L(X)>1!($L(X)<1) X
"^DD",727.833,727.833,60,3)
Answer must be 1 character in length.
"^DD",727.833,727.833,60,21,0)
^.001^2^2^3150616^^^^
"^DD",727.833,727.833,60,21,1,0)
The period of service, which best classifies this patient based on
"^DD",727.833,727.833,60,21,2,0)
eligibility code.
"^DD",727.833,727.833,60,23,0)
^^6^6^3150616^
"^DD",727.833,727.833,60,23,1,0)
This field is derived by pulling the PERIOD OF SERVICE field (#.323) from 
"^DD",727.833,727.833,60,23,2,0)
the PATIENT file (#2). The PERIOD OF SERVICE field (#.323) is a pointer 
"^DD",727.833,727.833,60,23,3,0)
to the PERIOD OF SERVICE file (#21). This field is derived from the CODE 
"^DD",727.833,727.833,60,23,4,0)
field (#.03) of that file.
"^DD",727.833,727.833,60,23,5,0)
 
"^DD",727.833,727.833,60,23,6,0)
The veteran's period of service indicator is returned by ELIG^VADPT.
"^DD",727.833,727.833,60,"DT")
3120427
"^DD",727.833,727.833,62,0)
POW LOCATION^P22'^DIC(22,^2;26^Q
"^DD",727.833,727.833,62,3)
Select the POW location/period.
"^DD",727.833,727.833,62,21,0)
^.001^1^1^3150616^^
"^DD",727.833,727.833,62,21,1,0)
This is the location/period where the patient was a POW.
"^DD",727.833,727.833,62,23,0)
^^3^3^3150616^
"^DD",727.833,727.833,62,23,1,0)
This field is a pointer derived by reading the POW CONFINEMENT LOCATION
"^DD",727.833,727.833,62,23,2,0)
field (#.526) from the PATIENT file (#2). The location is retrieved by
"^DD",727.833,727.833,62,23,3,0)
calling SVC^VADPT.
"^DD",727.833,727.833,62,"DT")
3120427
"^DD",727.833,727.833,66,0)
PURPLE HEART INDICATOR^S^Y:YES;N:NO;^2;30^Q
"^DD",727.833,727.833,66,3)
Is patient a purple heart recipient and a veteran?
"^DD",727.833,727.833,66,21,0)
^.001^1^1^3150616^^
"^DD",727.833,727.833,66,21,1,0)
This field Indicates whether or not a patient is a Purple Heart recipient.
"^DD",727.833,727.833,66,23,0)
^^2^2^3150616^
"^DD",727.833,727.833,66,23,1,0)
The Purple Heart Indicator is derived by calling SVC^VADPT which returns 
"^DD",727.833,727.833,66,23,2,0)
the CURRENT PH INDICATOR field (#.531) from the PATIENT file (#2).
"^DD",727.833,727.833,66,"DT")
3120427
"^DD",727.833,727.833,67,0)
MST STATUS^S^Y:Yes, Screened reports MST;N:No, Screened does not report MST;U:Unknown, not screened;D:Screened Declines to answer;^2;31^Q
"^DD",727.833,727.833,67,3)
Enter the patient's MST Status.
"^DD",727.833,727.833,67,21,0)
^.001^2^2^3150616^^^
"^DD",727.833,727.833,67,21,1,0)
Indicates the Military Sexual Trauma (MST) status of a patient on the 
"^DD",727.833,727.833,67,21,2,0)
date of the encounter.
"^DD",727.833,727.833,67,23,0)
^^5^5^3150616^
"^DD",727.833,727.833,67,23,1,0)
The MST HISTORY file (#29.11) holds data regarding military sexual
"^DD",727.833,727.833,67,23,2,0)
trauma claims and effective dates.  The patient's MST status is stored
"^DD",727.833,727.833,67,23,3,0)
in the MST STATUS field (#3).  A call will be made to
"^DD",727.833,727.833,67,23,4,0)
$$GETSTAT^DGMSTAPI(DFN,DGDATE) using the DFN in the PATIENT NO. - DFN 
"^DD",727.833,727.833,67,23,5,0)
field (#4) and the date in the DAY field (#8) from this file. 
"^DD",727.833,727.833,67,"DT")
3120427
"^DD",727.833,727.833,69,0)
HEAD & NECK CANCER INDICATOR^S^Y:YES;N:NO;^2;33^Q
"^DD",727.833,727.833,69,3)
Has patient been diagnosed with cancer of the head and/or neck?
"^DD",727.833,727.833,69,21,0)
^.001^1^1^3150616^^
"^DD",727.833,727.833,69,21,1,0)
Identifies whether patient's diagnosis was for Head and/or Neck Cancer.
"^DD",727.833,727.833,69,23,0)
^^3^3^3150616^
"^DD",727.833,727.833,69,23,1,0)
This indicator is derived by passing the patient pointer (DFN)
"^DD",727.833,727.833,69,23,2,0)
to the API $$GETCUR^DGNTAPI to retrieve the HEAD/NECK
"^DD",727.833,727.833,69,23,3,0)
CA DX field (#2.01) of the NOSE AND THROAT RADIUM HISTORY file (#28.11).
"^DD",727.833,727.833,69,"DT")
3120427
"^DD",727.833,727.833,70,0)
SHAD STATUS^S^Y:YES;N:NO;^2;34^Q
"^DD",727.833,727.833,70,3)
Does patient meet requirements for SHAD?
"^DD",727.833,727.833,70,21,0)
^.001^2^2^3150616^^
"^DD",727.833,727.833,70,21,1,0)
Indicates whether patient meets requirements for Shipboard Hazard And
"^DD",727.833,727.833,70,21,2,0)
Defense (SHAD).
"^DD",727.833,727.833,70,23,0)
^^3^3^3150616^
"^DD",727.833,727.833,70,23,1,0)
This field is the Shipboard Hazard and Defense which is derived by using
"^DD",727.833,727.833,70,23,2,0)
DBIA #4462 GETSHAD^DGUTL3(DFN). Which returns the PROJ 112/SHAD field
"^DD",727.833,727.833,70,23,3,0)
(#.32115) from the Patient file (#2).
"^DD",727.833,727.833,70,"DT")
3120427
"^DD",727.833,727.833,71,0)
PATIENT TYPE^F^^3;1^K:$L(X)>2!($L(X)<2) X
"^DD",727.833,727.833,71,3)
Answer must be 2 characters in length.
"^DD",727.833,727.833,71,21,0)
^.001^2^2^3150616^^
"^DD",727.833,727.833,71,21,1,0)
PATIENT TYPE refers to the various types of patient which might be seen
"^DD",727.833,727.833,71,21,2,0)
at a VA facility.
"^DD",727.833,727.833,71,23,0)
^^16^16^3150616^
"^DD",727.833,727.833,71,23,1,0)
Patient type is determined by the TYPE field (#391) of the PATIENT file
"^DD",727.833,727.833,71,23,2,0)
(#2) which points to the TYPE OF PATIENT file (#391) entries . Every
"^DD",727.833,727.833,71,23,3,0)
patient added to the system must have a TYPE specified. It best
"^DD",727.833,727.833,71,23,4,0)
classifies a patient as one of the following values listed below.
"^DD",727.833,727.833,71,23,5,0)
PATIENT TYPE field value shall contain only the first two characters:
"^DD",727.833,727.833,71,23,6,0)
 
"^DD",727.833,727.833,71,23,7,0)
AC= ACTIVE DUTY
"^DD",727.833,727.833,71,23,8,0)
AL= ALLIED VETERAN
"^DD",727.833,727.833,71,23,9,0)
CO= COLLATERAL
"^DD",727.833,727.833,71,23,10,0)
EM= EMPLOYEE
"^DD",727.833,727.833,71,23,11,0)
IN= INELIGIBLE
"^DD",727.833,727.833,71,23,12,0)
MI= MILITARY RETIREE
"^DD",727.833,727.833,71,23,13,0)
NO= NON-VETERAN (OTHER)
"^DD",727.833,727.833,71,23,14,0)
NS= NSC VETERAN
"^DD",727.833,727.833,71,23,15,0)
SC= SC VETERAN
"^DD",727.833,727.833,71,23,16,0)
TR= TRICARE
"^DD",727.833,727.833,71,"DT")
3120427
"^DD",727.833,727.833,72,0)
CV STATUS ELIGIBILITY^S^Y:YES;E:ELIGIBILITY EXPIRED;^3;2^Q
"^DD",727.833,727.833,72,3)
Is patient a Combat Veteran?
"^DD",727.833,727.833,72,21,0)
^.001^2^2^3150616^^^^
"^DD",727.833,727.833,72,21,1,0)
This field indicates whether or not a patient can be considered a Combat 
"^DD",727.833,727.833,72,21,2,0)
Veteran (CV) at the time of treatment. 
"^DD",727.833,727.833,72,23,0)
^^13^13^3150616^
"^DD",727.833,727.833,72,23,1,0)
The CV STATUS ELIGIBILITY is determined by the use of API $$CVEDT^DGCV
"^DD",727.833,727.833,72,23,2,0)
(DFN, DAY field (#8) in Fileman format) that checks the COMBAT VET END 
"^DD",727.833,727.833,72,23,3,0)
DATE field (#.5295) from the Patient file (#2) to determine CV Status.  
"^DD",727.833,727.833,72,23,4,0)
API returns three pieces i.e. 1^3010106^0, the first piece is resolved as
"^DD",727.833,727.833,72,23,5,0)
follows.
"^DD",727.833,727.833,72,23,6,0)
 
"^DD",727.833,727.833,72,23,7,0)
  1 - qualifies as a CV
"^DD",727.833,727.833,72,23,8,0)
  0 - does not qualify as a CV
"^DD",727.833,727.833,72,23,9,0)
 -1 - bad DFN or date
"^DD",727.833,727.833,72,23,10,0)
 
"^DD",727.833,727.833,72,23,11,0)
Based on these returns,  the value for this field shall be 'Y' for 'YES' 
"^DD",727.833,727.833,72,23,12,0)
or 'E' for 'ELIGIBILITY EXPIRED".  If this field is null it indicates 
"^DD",727.833,727.833,72,23,13,0)
that the patient is not eligible.
"^DD",727.833,727.833,72,"DT")
3120427
"^DD",727.833,727.833,73,0)
CV ELIGIBILITY END DATE^F^^3;3^K:$L(X)>8!($L(X)<8) X
"^DD",727.833,727.833,73,3)
Answer must be 8 characters in length.
"^DD",727.833,727.833,73,21,0)
^.001^1^1^3150616^^
"^DD",727.833,727.833,73,21,1,0)
This field is the patient's Combat Veteran (CV) eligibility end date.
"^DD",727.833,727.833,73,23,0)
^^5^5^3150616^
"^DD",727.833,727.833,73,23,1,0)
The CV ELIGIBILITY END DATE is determined by the use of  API $$CVEDT^DGCV
"^DD",727.833,727.833,73,23,2,0)
(DFN, DAY (#8) in Fileman format) that checks the COMBAT VET END DATE
"^DD",727.833,727.833,73,23,3,0)
field (#.5295) from the PATIENT file (#2) to determine CV Status.
"^DD",727.833,727.833,73,23,4,0)
The API returns three pieces (i.e. 1^3010106^0) the 2nd piece is the
"^DD",727.833,727.833,73,23,5,0)
Combat Vet End Date which is stored in YYYYMMDD format.
"^DD",727.833,727.833,73,"DT")
3120427
"^DD",727.833,727.833,74,0)
ENCOUNTER CV^S^Y:YES;^3;4^Q
"^DD",727.833,727.833,74,3)
Was the patient CV eligible on the treatment date?
"^DD",727.833,727.833,74,21,0)
^.001^2^2^3150616^^
"^DD",727.833,727.833,74,21,1,0)
This Field indicates if the patient is a Combat Veteran (CV) based on the 
"^DD",727.833,727.833,74,21,2,0)
treatment date and the end date of combat service.
"^DD",727.833,727.833,74,23,0)
^^11^11^3150616^
"^DD",727.833,727.833,74,23,1,0)
ENCOUNTER CV is determined by the use of  API $$CVEDT^DGCV (DFN, DAY #(8)
"^DD",727.833,727.833,74,23,2,0)
in Fileman format) that checks the COMBAT VET END DATE field (#.5295),
"^DD",727.833,727.833,74,23,3,0)
from the PATIENT file (#2) to determine CV Status using the DAY field
"^DD",727.833,727.833,74,23,4,0)
(#8). The API returns three pieces (i.e.  1^3010106^0).
"^DD",727.833,727.833,74,23,5,0)
 
"^DD",727.833,727.833,74,23,6,0)
The third piece returns:
"^DD",727.833,727.833,74,23,7,0)
 
"^DD",727.833,727.833,74,23,8,0)
1 - vet was eligible on date specified
"^DD",727.833,727.833,74,23,9,0)
0 - vet was not eligible on date specified
"^DD",727.833,727.833,74,23,10,0)
 
"^DD",727.833,727.833,74,23,11,0)
Based on these returns, the value for this field shall be Y =Yes, or null.
"^DD",727.833,727.833,74,"DT")
3120427
"^DD",727.833,727.833,77,0)
SW ASIA CONDITIONS^S^Y:YES;N:NO;U:UNKNOWN;^3;7^Q
"^DD",727.833,727.833,77,3)
Does patient claim exposure to SWA conditions?
"^DD",727.833,727.833,77,21,0)
^.001^9^9^3150618^^^
"^DD",727.833,727.833,77,21,1,0)
This field is used to indicate if this visit represents treatment of a VA
"^DD",727.833,727.833,77,21,2,0)
patient claiming exposure to Southwest Asia Conditions.
"^DD",727.833,727.833,77,21,3,0)
 
"^DD",727.833,727.833,77,21,4,0)
The South West Asia Theater of operations is defined as:
"^DD",727.833,727.833,77,21,5,0)
 
"^DD",727.833,727.833,77,21,6,0)
Iraq, Kuwait, Saudi Arabia, the neutral zone between Iraq and
"^DD",727.833,727.833,77,21,7,0)
Saudi Arabia, Bahrain, Qatar, the United Arab Emirates, Oman, the Gulf
"^DD",727.833,727.833,77,21,8,0)
of Aden, the Gulf of Oman, the Persian Gulf, the Arabian Sea, the
"^DD",727.833,727.833,77,21,9,0)
Red Sea and the airspace above these locations.
"^DD",727.833,727.833,77,23,0)
^^3^3^3150618^
"^DD",727.833,727.833,77,23,1,0)
This field is derived from the SOUTHWEST ASIA CONDITIONS? field
"^DD",727.833,727.833,77,23,2,0)
(#.322013) in the PATIENT file (#2) using the patient's DFN.  The status
"^DD",727.833,727.833,77,23,3,0)
indicator is returned by SVC^VADPT.
"^DD",727.833,727.833,77,"DT")
3120427
"^DD",727.833,727.833,78,0)
OEF/OIF^F^^3;8^K:$L(X)>9!($L(X)<9) X
"^DD",727.833,727.833,78,3)
Answer must be 9 characters in length.
"^DD",727.833,727.833,78,21,0)
^.001^3^3^3150616^^
"^DD",727.833,727.833,78,21,1,0)
The Military Operation(s) in which the patient was in combat. This field
"^DD",727.833,727.833,78,21,2,0)
is a length of nine characters and reflects the OEF or OIF where this
"^DD",727.833,727.833,78,21,3,0)
patient was in combat.
"^DD",727.833,727.833,78,23,0)
^^9^9^3150616^
"^DD",727.833,727.833,78,23,1,0)
The value of this field is derived from the LOCATION OF SERVICE field
"^DD",727.833,727.833,78,23,2,0)
(#.01) of the SERVICE [OEF OR OIF] sub-file (#2.3215) located in the
"^DD",727.833,727.833,78,23,3,0)
PATIENT file (#2). DSS will capture once, each location where the veteran
"^DD",727.833,727.833,78,23,4,0)
served. In order to accommodate multiple locations, the values for this
"^DD",727.833,727.833,78,23,5,0)
field are concatenated into this 9-character field.  Possible field values
"^DD",727.833,727.833,78,23,6,0)
are one or more combinations of the following:
"^DD",727.833,727.833,78,23,7,0)
OEF =  Operation Enduring Freedom
"^DD",727.833,727.833,78,23,8,0)
OIF  =  Operation Iraqi Freedom
"^DD",727.833,727.833,78,23,9,0)
UNK =  Unknown OEF/OIF
"^DD",727.833,727.833,78,"DT")
3120427
"^DD",727.833,727.833,79,0)
OEF/OIF RETURN DATE^F^^3;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.833,727.833,79,3)
Answer must be 8 characters in length.
"^DD",727.833,727.833,79,21,0)
^.001^4^4^3150616^^
"^DD",727.833,727.833,79,21,1,0)
The date the patient left the OEF/OIF area, if known. Otherwise, it is the
"^DD",727.833,727.833,79,21,2,0)
end date of military pay for this OEF/OIF deployment. This date field has
"^DD",727.833,727.833,79,21,3,0)
a format equal to YYYYMMDD. In cases of multiple OEF/OIF tours, this field
"^DD",727.833,727.833,79,21,4,0)
contains only most recent return date.
"^DD",727.833,727.833,79,23,0)
^^3^3^3150616^
"^DD",727.833,727.833,79,23,1,0)
The value of this field is derived of the OEF/OIF TO DATE field (#.03) of
"^DD",727.833,727.833,79,23,2,0)
the SERVICE [OEF OR OIF] sub-file (#.3215) located in the PATIENT file
"^DD",727.833,727.833,79,23,3,0)
(#2).
"^DD",727.833,727.833,79,"DT")
3120427
"^DD",727.833,727.833,80,0)
PATCAT^S^AD:Active Duty;ADD:Active Duty Dependent;FNRS:Former Non-Remarried Spouse;RET:Retired;RETD:Retiree Dependent;RES:Reservist;REC:Recruit;TDRL:Temporary Disability;TFL:TRICARE for Life;^3;10^Q
"^DD",727.833,727.833,80,3)
Select the Patient's Category for the FHCC Reconciliation process.
"^DD",727.833,727.833,80,21,0)
^.001^6^6^3150617^^^
"^DD",727.833,727.833,80,21,1,0)
This is the Patient's category which will be used for FHCC (Federal Health
"^DD",727.833,727.833,80,21,2,0)
Care Center) Reconciliation.
"^DD",727.833,727.833,80,21,3,0)
DSS must capture and report DoD patients so that the FHCC reconciliation
"^DD",727.833,727.833,80,21,4,0)
process can function as designed. "Reconciliation" is the process used
"^DD",727.833,727.833,80,21,5,0)
within the new FHCC to determine which patients DoD pays for and which VA
"^DD",727.833,727.833,80,21,6,0)
pays for.
"^DD",727.833,727.833,80,23,0)
^^11^11^3150617^
"^DD",727.833,727.833,80,23,1,0)
If the VistA Patient Type Code (TYPE field (#391) of the Patient file (#2)
"^DD",727.833,727.833,80,23,2,0)
) = Active Duty, Military Retiree, or TRICARE, then the value(s) in
"^DD",727.833,727.833,80,23,3,0)
the VistA Other  Eligibility multiple (PATIENT ELIGIBILITIES field (#361)
"^DD",727.833,727.833,80,23,4,0)
of the PATIENT file (#2)), which points to locally modifiable ELIGIBILITY
"^DD",727.833,727.833,80,23,5,0)
CODE file (#8) should be evaluated. If the value in the
"^DD",727.833,727.833,80,23,6,0)
ELIGIBILITY CODE is equal to any entry in the set of codes in this field,
"^DD",727.833,727.833,80,23,7,0)
the value should be placed in this field.
"^DD",727.833,727.833,80,23,8,0)
 
"^DD",727.833,727.833,80,23,9,0)
FHCC hospitals have special codes that are added to the ELIGIBILITY CODE 
"^DD",727.833,727.833,80,23,10,0)
file (#8) that are used to identify the PATCAT status and may be unique 
"^DD",727.833,727.833,80,23,11,0)
to their facility. 
"^DD",727.833,727.833,80,"DT")
3120427
"^DD",728.44,728.44,5,0)
ACTION TO SEND^RS^1:SEND STOP CODE;4:SEND BOTH AS ONE RECORD WITH CHAR4 CODE;5:SEND BOTH AS ONE RECORD WITHOUT CHAR4 CODE;6:DO NOT SEND;^0;6^Q
"^DD",728.44,728.44,5,3)
Select the appropriate stop code action.
"^DD",728.44,728.44,5,21,0)
^.001^2^2^3150311^^^^
"^DD",728.44,728.44,5,21,1,0)
This determines how alternate stop code and alternate credit stop
"^DD",728.44,728.44,5,21,2,0)
codes are combined to form a feeder key for this clinic.
"^DD",728.44,728.44,5,23,0)
^.001^2^2^3150311^^^^
"^DD",728.44,728.44,5,23,1,0)
This field is used in routine ECXSCX to create the feeder key for
"^DD",728.44,728.44,5,23,2,0)
this clinic.
"^DD",728.44,728.44,5,"DT")
3150311
"BLD",9491,6)
^142
**END**
**END**

