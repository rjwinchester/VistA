EMERGENCY Released ECX*3*170 SEQ #154
Extracted from mail message
**KIDS**:ECX*3.0*170^

**INSTALL NAME**
ECX*3.0*170
"BLD",10333,0)
ECX*3.0*170^DSS EXTRACTS^0^3180904^y
"BLD",10333,4,0)
^9.64PA^727.829^16
"BLD",10333,4,727.802,0)
727.802
"BLD",10333,4,727.802,2,0)
^9.641^727.802^1
"BLD",10333,4,727.802,2,727.802,0)
ADMISSION EXTRACT  (File-top level)
"BLD",10333,4,727.802,2,727.802,1,0)
^9.6411^30^12
"BLD",10333,4,727.802,2,727.802,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",10333,4,727.802,2,727.802,1,9,0)
PLACEHOLD PRIMARY CARE TEAM
"BLD",10333,4,727.802,2,727.802,1,30,0)
MOVEMENT FILE #
"BLD",10333,4,727.802,2,727.802,1,34,0)
PLACEHOLD PC PROVIDER
"BLD",10333,4,727.802,2,727.802,1,35,0)
PLACEHOLD RACE
"BLD",10333,4,727.802,2,727.802,1,48,0)
PLACEHOLD PC PROV PERSON CLASS
"BLD",10333,4,727.802,2,727.802,1,49,0)
PLACEHOLD ASSOC PC PROVIDER
"BLD",10333,4,727.802,2,727.802,1,50,0)
PLACEHOLD AS PC PROV PERSON CL
"BLD",10333,4,727.802,2,727.802,1,64,0)
PLACEHOLD ETHNICITY
"BLD",10333,4,727.802,2,727.802,1,65,0)
PLACEHOLD RACE 1
"BLD",10333,4,727.802,2,727.802,1,84,0)
PLACEHOLD ASSOC PC PROV NPI
"BLD",10333,4,727.802,2,727.802,1,86,0)
PLACEHOLD PC PROVIDER NPI
"BLD",10333,4,727.802,222)
y^y^p^^^^n^^n
"BLD",10333,4,727.802,224)

"BLD",10333,4,727.808,0)
727.808
"BLD",10333,4,727.808,2,0)
^9.641^727.808^1
"BLD",10333,4,727.808,2,727.808,0)
PHYSICAL MOVEMENT EXTRACT  (File-top level)
"BLD",10333,4,727.808,2,727.808,1,0)
^9.6411^21^4
"BLD",10333,4,727.808,2,727.808,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",10333,4,727.808,2,727.808,1,10,0)
ADMISSION DATE
"BLD",10333,4,727.808,2,727.808,1,11,0)
DISCHARGE DATE
"BLD",10333,4,727.808,2,727.808,1,21,0)
ADMISSION TIME
"BLD",10333,4,727.808,222)
y^y^p^^^^n^^n
"BLD",10333,4,727.808,224)

"BLD",10333,4,727.809,0)
727.809
"BLD",10333,4,727.809,2,0)
^9.641^727.809^1
"BLD",10333,4,727.809,2,727.809,0)
UNIT DOSE LOCAL EXTRACT  (File-top level)
"BLD",10333,4,727.809,2,727.809,1,0)
^9.6411^21^12
"BLD",10333,4,727.809,2,727.809,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",10333,4,727.809,2,727.809,1,20,0)
ADMISSION DATE
"BLD",10333,4,727.809,2,727.809,1,21,0)
ADMISSION TIME
"BLD",10333,4,727.809,2,727.809,1,50,0)
PLACEHOLD PRIMARY CARE TEAM
"BLD",10333,4,727.809,2,727.809,1,51,0)
PLACEHOLD PC PROVIDER
"BLD",10333,4,727.809,2,727.809,1,53,0)
PLACEHOLD PC PROV PERSON CLASS
"BLD",10333,4,727.809,2,727.809,1,54,0)
PLACEHOLD ASSOC PC PROVIDER
"BLD",10333,4,727.809,2,727.809,1,56,0)
PLACEHOLD AS PC PROV PERSON CL
"BLD",10333,4,727.809,2,727.809,1,60,0)
PLACEHOLD ETHNICITY
"BLD",10333,4,727.809,2,727.809,1,61,0)
PLACEHOLD RACE 1
"BLD",10333,4,727.809,2,727.809,1,79,0)
PLACEHOLD ASSOC PC PROV NPI
"BLD",10333,4,727.809,2,727.809,1,80,0)
PLACEHOLD PC PROVIDER NPI
"BLD",10333,4,727.809,222)
y^y^p^^^^n^^n
"BLD",10333,4,727.809,224)

"BLD",10333,4,727.81,0)
727.81
"BLD",10333,4,727.81,2,0)
^9.641^727.81^1
"BLD",10333,4,727.81,2,727.81,0)
PRESCRIPTION EXTRACT  (File-top level)
"BLD",10333,4,727.81,2,727.81,1,0)
^9.6411^7^11
"BLD",10333,4,727.81,2,727.81,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",10333,4,727.81,2,727.81,1,30,0)
PLACEHOLD PRIMARY CARE TEAM
"BLD",10333,4,727.81,2,727.81,1,31,0)
PLACEHOLD PC PROVIDER
"BLD",10333,4,727.81,2,727.81,1,33,0)
PLACEHOLD RACE
"BLD",10333,4,727.81,2,727.81,1,42,0)
PLACEHOLD PC PROV PERSON CLASS
"BLD",10333,4,727.81,2,727.81,1,51,0)
PLACEHOLD ASSOC PC PROVIDER
"BLD",10333,4,727.81,2,727.81,1,52,0)
PLACEHOLD AS PC PROV PERSON CL
"BLD",10333,4,727.81,2,727.81,1,71,0)
PLACEHOLD ETHNICITY
"BLD",10333,4,727.81,2,727.81,1,72,0)
PLACEHOLD RACE 1
"BLD",10333,4,727.81,2,727.81,1,94,0)
PLACEHOLD ASSOC PC PROV NPI
"BLD",10333,4,727.81,2,727.81,1,95,0)
PLACEHOLD PC PROVIDER NPI
"BLD",10333,4,727.81,222)
y^y^p^^^^n^^n
"BLD",10333,4,727.81,224)

"BLD",10333,4,727.811,0)
727.811
"BLD",10333,4,727.811,2,0)
^9.641^727.811^1
"BLD",10333,4,727.811,2,727.811,0)
SURGERY EXTRACT  (File-top level)
"BLD",10333,4,727.811,2,727.811,1,0)
^9.6411^7^10
"BLD",10333,4,727.811,2,727.811,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",10333,4,727.811,2,727.811,1,34,0)
PLACEHOLD PRIMARY CARE TEAM
"BLD",10333,4,727.811,2,727.811,1,35,0)
PLACEHOLD PC PROVIDER
"BLD",10333,4,727.811,2,727.811,1,43,0)
PLACEHOLD PC PROV PERSON CLASS
"BLD",10333,4,727.811,2,727.811,1,44,0)
PLACEHOLD ASSOC PC PROVIDER
"BLD",10333,4,727.811,2,727.811,1,45,0)
PLACEHOLD AS PC PROV PERSON CL
"BLD",10333,4,727.811,2,727.811,1,59,0)
PLACEHOLD ETHNICITY
"BLD",10333,4,727.811,2,727.811,1,60,0)
PLACEHOLD RACE 1
"BLD",10333,4,727.811,2,727.811,1,92,0)
PLACEHOLD ASSOC PC PROV NPI
"BLD",10333,4,727.811,2,727.811,1,94,0)
PLACEHOLD PC PROVIDER NPI
"BLD",10333,4,727.811,222)
y^y^p^^^^n^^n
"BLD",10333,4,727.811,224)

"BLD",10333,4,727.813,0)
727.813
"BLD",10333,4,727.813,2,0)
^9.641^727.813^1
"BLD",10333,4,727.813,2,727.813,0)
LABORATORY EXTRACT  (File-top level)
"BLD",10333,4,727.813,2,727.813,1,0)
^9.6411^53^11
"BLD",10333,4,727.813,2,727.813,1,3,0)
FACILITY
"BLD",10333,4,727.813,2,727.813,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",10333,4,727.813,2,727.813,1,20,0)
PLACEHOLD PRIMARY CARE TEAM
"BLD",10333,4,727.813,2,727.813,1,21,0)
PLACEHOLD PC PROVIDER
"BLD",10333,4,727.813,2,727.813,1,26,0)
PLACEHOLD PC PROV PERSON CLASS
"BLD",10333,4,727.813,2,727.813,1,27,0)
PLACEHOLD ASSOC PC PROVIDER
"BLD",10333,4,727.813,2,727.813,1,28,0)
PLACEHOLD AS PC PROV PERSON CL
"BLD",10333,4,727.813,2,727.813,1,35,0)
PRODUCTION DIVISION
"BLD",10333,4,727.813,2,727.813,1,39,0)
PLACEHOLD ASSOC PC PROV NPI
"BLD",10333,4,727.813,2,727.813,1,40,0)
PLACEHOLD PC PROVIDER NPI
"BLD",10333,4,727.813,2,727.813,1,53,0)
CPT, QTY & MODIFIERS #1
"BLD",10333,4,727.813,222)
y^y^p^^^^n^^n
"BLD",10333,4,727.813,224)

"BLD",10333,4,727.814,0)
727.814
"BLD",10333,4,727.814,2,0)
^9.641^727.814^1
"BLD",10333,4,727.814,2,727.814,0)
RADIOLOGY EXTRACT  (File-top level)
"BLD",10333,4,727.814,2,727.814,1,0)
^9.6411^7^8
"BLD",10333,4,727.814,2,727.814,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",10333,4,727.814,2,727.814,1,21,0)
PLACEHOLD PRIMARY CARE TEAM
"BLD",10333,4,727.814,2,727.814,1,22,0)
PLACEHOLD PC PROVIDER
"BLD",10333,4,727.814,2,727.814,1,27,0)
PLACEHOLD PC PROV PERSON CLASS
"BLD",10333,4,727.814,2,727.814,1,28,0)
PLACEHOLD ASSOC PC PROVIDER
"BLD",10333,4,727.814,2,727.814,1,29,0)
PLACEHOLD AS PC PROV PERSON CL
"BLD",10333,4,727.814,2,727.814,1,44,0)
PLACEHOLD ASSOC PC PROV NPI
"BLD",10333,4,727.814,2,727.814,1,46,0)
PLACEHOLD PC PROVIDER NPI
"BLD",10333,4,727.814,222)
y^y^p^^^^n^^n
"BLD",10333,4,727.814,224)

"BLD",10333,4,727.815,0)
727.815
"BLD",10333,4,727.815,2,0)
^9.641^727.815^1
"BLD",10333,4,727.815,2,727.815,0)
EVENT CAPTURE LOCAL EXTRACT  (File-top level)
"BLD",10333,4,727.815,2,727.815,1,0)
^9.6411^7^10
"BLD",10333,4,727.815,2,727.815,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",10333,4,727.815,2,727.815,1,26,0)
PLACEHOLD PRIMARY CARE TEAM
"BLD",10333,4,727.815,2,727.815,1,27,0)
PLACEHOLD PC PROVIDER
"BLD",10333,4,727.815,2,727.815,1,47,0)
PLACEHOLD PC PROV PERSON CLASS
"BLD",10333,4,727.815,2,727.815,1,49,0)
PLACEHOLD ASSOC PC PROVIDER
"BLD",10333,4,727.815,2,727.815,1,50,0)
PLACEHOLD AS PC PROV PERSON CL
"BLD",10333,4,727.815,2,727.815,1,72,0)
PLACEHOLD ETHNICITY
"BLD",10333,4,727.815,2,727.815,1,73,0)
PLACEHOLD RACE 1
"BLD",10333,4,727.815,2,727.815,1,92,0)
PLACEHOLD ASSOC PC PROV NPI
"BLD",10333,4,727.815,2,727.815,1,93,0)
PLACEHOLD PC PROVIDER NPI
"BLD",10333,4,727.815,222)
y^y^p^^^^n^^n
"BLD",10333,4,727.815,224)

"BLD",10333,4,727.817,0)
727.817
"BLD",10333,4,727.817,2,0)
^9.641^727.817^1
"BLD",10333,4,727.817,2,727.817,0)
TREATING SPECIALTY CHANGE EXTRACT  (File-top level)
"BLD",10333,4,727.817,2,727.817,1,0)
^9.6411^7^1
"BLD",10333,4,727.817,2,727.817,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",10333,4,727.817,222)
y^y^p^^^^n^^n
"BLD",10333,4,727.817,224)

"BLD",10333,4,727.819,0)
727.819
"BLD",10333,4,727.819,2,0)
^9.641^727.819^1
"BLD",10333,4,727.819,2,727.819,0)
IV DETAIL EXTRACT  (File-top level)
"BLD",10333,4,727.819,2,727.819,1,0)
^9.6411^25^12
"BLD",10333,4,727.819,2,727.819,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",10333,4,727.819,2,727.819,1,21,0)
PLACEHOLD PRIMARY CARE TEAM
"BLD",10333,4,727.819,2,727.819,1,22,0)
PLACEHOLD PC PROVIDER
"BLD",10333,4,727.819,2,727.819,1,24,0)
ADMISSION DATE
"BLD",10333,4,727.819,2,727.819,1,25,0)
ADMISSION TIME
"BLD",10333,4,727.819,2,727.819,1,30,0)
PLACEHOLD PC PROV PERSON CLASS
"BLD",10333,4,727.819,2,727.819,1,31,0)
PLACEHOLD ASSOC PC PROVIDER
"BLD",10333,4,727.819,2,727.819,1,32,0)
PLACEHOLD AS PC PROV PERSON CL
"BLD",10333,4,727.819,2,727.819,1,65,0)
PLACEHOLD ETHNICITY
"BLD",10333,4,727.819,2,727.819,1,66,0)
PLACEHOLD RACE 1
"BLD",10333,4,727.819,2,727.819,1,84,0)
PLACEHOLD ASSOC PC PROV NPI
"BLD",10333,4,727.819,2,727.819,1,86,0)
PLACEHOLD PC PROVIDER NPI
"BLD",10333,4,727.819,222)
y^y^p^^^^n^^n
"BLD",10333,4,727.819,224)

"BLD",10333,4,727.824,0)
727.824
"BLD",10333,4,727.824,2,0)
^9.641^727.824^1
"BLD",10333,4,727.824,2,727.824,0)
LAB RESULTS EXTRACT  (File-top level)
"BLD",10333,4,727.824,2,727.824,1,0)
^9.6411^7^3
"BLD",10333,4,727.824,2,727.824,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",10333,4,727.824,2,727.824,1,10,0)
PLACEHOLD RESULTS
"BLD",10333,4,727.824,2,727.824,1,36,0)
LONG RESULT
"BLD",10333,4,727.824,222)
y^y^p^^^^n^^n
"BLD",10333,4,727.824,224)

"BLD",10333,4,727.825,0)
727.825
"BLD",10333,4,727.825,2,0)
^9.641^727.825^1
"BLD",10333,4,727.825,2,727.825,0)
QUASAR EXTRACT  (File-top level)
"BLD",10333,4,727.825,2,727.825,1,0)
^9.6411^7^10
"BLD",10333,4,727.825,2,727.825,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",10333,4,727.825,2,727.825,1,26,0)
PLACEHOLD PRIMARY CARE TEAM
"BLD",10333,4,727.825,2,727.825,1,27,0)
PLACEHOLD PC PROVIDER
"BLD",10333,4,727.825,2,727.825,1,47,0)
PLACEHOLD PC PROV PERSON CLASS
"BLD",10333,4,727.825,2,727.825,1,49,0)
PLACEHOLD ASSOC PC PROVIDER
"BLD",10333,4,727.825,2,727.825,1,50,0)
PLACEHOLD AS PC PROV PERSON CL
"BLD",10333,4,727.825,2,727.825,1,72,0)
PLACEHOLD ETHNICITY
"BLD",10333,4,727.825,2,727.825,1,73,0)
PLACEHOLD RACE 1
"BLD",10333,4,727.825,2,727.825,1,92,0)
PLACEHOLD ASSOC PC PROV NPI
"BLD",10333,4,727.825,2,727.825,1,93,0)
PLACEHOLD PC PROVIDER NPI
"BLD",10333,4,727.825,222)
y^y^p^^^^n^^n
"BLD",10333,4,727.825,224)

"BLD",10333,4,727.826,0)
727.826
"BLD",10333,4,727.826,2,0)
^9.641^727.826^1
"BLD",10333,4,727.826,2,727.826,0)
PROSTHETICS EXTRACT  (File-top level)
"BLD",10333,4,727.826,2,727.826,1,0)
^9.6411^7^11
"BLD",10333,4,727.826,2,727.826,1,7,0)
IN OUTPATIENT INDICATOR
"BLD",10333,4,727.826,2,727.826,1,12,0)
PLACEHOLD PRIMARY CARE TEAM
"BLD",10333,4,727.826,2,727.826,1,13,0)
PLACEHOLD PC PROVIDER
"BLD",10333,4,727.826,2,727.826,1,40,0)
PLACEHOLD PC PROV PERSON CLASS
"BLD",10333,4,727.826,2,727.826,1,41,0)
PLACEHOLD RACE
"BLD",10333,4,727.826,2,727.826,1,50,0)
PLACEHOLD ASSOC PC PROVIDER
"BLD",10333,4,727.826,2,727.826,1,51,0)
PLACEHOLD AS PC PROV PERSON CL
"BLD",10333,4,727.826,2,727.826,1,65,0)
PLACEHOLD ETHNICITY
"BLD",10333,4,727.826,2,727.826,1,66,0)
PLACEHOLD RACE 1
"BLD",10333,4,727.826,2,727.826,1,85,0)
PLACEHOLD ASSOC PC PROV NPI
"BLD",10333,4,727.826,2,727.826,1,86,0)
PLACEHOLD PC PROVIDER NPI
"BLD",10333,4,727.826,222)
y^y^p^^^^n^^n
"BLD",10333,4,727.826,224)

"BLD",10333,4,727.827,0)
727.827
"BLD",10333,4,727.827,2,0)
^9.641^727.827^1
"BLD",10333,4,727.827,2,727.827,0)
CLINIC EXTRACT  (File-top level)
"BLD",10333,4,727.827,2,727.827,1,0)
^9.6411^7^44
"BLD",10333,4,727.827,2,727.827,1,7,0)
IN/OUT PATIENT INDICATOR
"BLD",10333,4,727.827,2,727.827,1,14,0)
PLACEHOLD PRIMARY CARE TEAM
"BLD",10333,4,727.827,2,727.827,1,15,0)
PLACEHOLD PC PROVIDER
"BLD",10333,4,727.827,2,727.827,1,16,0)
PLACEHOLD PC PROV PERSON CLASS
"BLD",10333,4,727.827,2,727.827,1,19,0)
PLACEHOLD CPT QTY & MODS #1
"BLD",10333,4,727.827,2,727.827,1,20,0)
PLACEHOLD CPT QTY & MODS #2
"BLD",10333,4,727.827,2,727.827,1,21,0)
PLACEHOLD CPT QTY & MODS #3
"BLD",10333,4,727.827,2,727.827,1,22,0)
PLACEHOLD CPT QTY & MODS #4
"BLD",10333,4,727.827,2,727.827,1,23,0)
PLACEHOLD CPT QTY & MODS #5
"BLD",10333,4,727.827,2,727.827,1,24,0)
PLACEHOLD CPT QTY & MODS #6
"BLD",10333,4,727.827,2,727.827,1,25,0)
PLACEHOLD CPT QTY & MODS #7
"BLD",10333,4,727.827,2,727.827,1,26,0)
PLACEHOLD CPT QTY & MODS #8
"BLD",10333,4,727.827,2,727.827,1,35,0)
PLACEHOLD RACE
"BLD",10333,4,727.827,2,727.827,1,56,0)
PLACEHOLD ASSOC PC PROVIDER
"BLD",10333,4,727.827,2,727.827,1,57,0)
PLACEHOLD AS PC PROV PERSON CL
"BLD",10333,4,727.827,2,727.827,1,73,0)
PLACEHOLD ETHNICITY
"BLD",10333,4,727.827,2,727.827,1,74,0)
PLACEHOLD RACE 1
"BLD",10333,4,727.827,2,727.827,1,90,0)
PLACEHOLD ASSOC PC PROV NPI
"BLD",10333,4,727.827,2,727.827,1,91,0)
PLACEHOLD PC PROVIDER NPI
"BLD",10333,4,727.827,2,727.827,1,133,0)
CPT, QTY & MODIFIERS #1
"BLD",10333,4,727.827,2,727.827,1,134,0)
CPT, QTY & MODIFIERS #2
"BLD",10333,4,727.827,2,727.827,1,135,0)
CPT, QTY & MODIFIERS #3
"BLD",10333,4,727.827,2,727.827,1,136,0)
CPT, QTY & MODIFIERS #4
"BLD",10333,4,727.827,2,727.827,1,137,0)
CPT, QTY & MODIFIERS #5
"BLD",10333,4,727.827,2,727.827,1,138,0)
CPT, QTY & MODIFIERS #6
"BLD",10333,4,727.827,2,727.827,1,139,0)
CPT, QTY & MODIFIERS #7
"BLD",10333,4,727.827,2,727.827,1,140,0)
CPT, QTY & MODIFIERS #8
"BLD",10333,4,727.827,2,727.827,1,141,0)
CPT, QTY & MODIFIERS #9
"BLD",10333,4,727.827,2,727.827,1,142,0)
CPT, QTY & MODIFIERS #10
"BLD",10333,4,727.827,2,727.827,1,143,0)
CPT, QTY & MODIFIERS #11
"BLD",10333,4,727.827,2,727.827,1,144,0)
CPT, QTY & MODIFIERS #12
"BLD",10333,4,727.827,2,727.827,1,145,0)
CPT, QTY & MODIFIERS #13
"BLD",10333,4,727.827,2,727.827,1,146,0)
CPT, QTY & MODIFIERS #14
"BLD",10333,4,727.827,2,727.827,1,147,0)
CPT, QTY & MODIFIERS #15
"BLD",10333,4,727.827,2,727.827,1,148,0)
CPT, QTY & MODIFIERS #16
"BLD",10333,4,727.827,2,727.827,1,149,0)
CPT, QTY & MODIFIERS #17
"BLD",10333,4,727.827,2,727.827,1,150,0)
CPT, QTY & MODIFIERS #18
"BLD",10333,4,727.827,2,727.827,1,151,0)
CPT, QTY & MODIFIERS #19
"BLD",10333,4,727.827,2,727.827,1,152,0)
CPT, QTY & MODIFIERS #20
"BLD",10333,4,727.827,2,727.827,1,153,0)
CPT, QTY & MODIFIERS #21
"BLD",10333,4,727.827,2,727.827,1,154,0)
CPT, QTY & MODIFIERS #22
"BLD",10333,4,727.827,2,727.827,1,155,0)
CPT, QTY & MODIFIERS #23
"BLD",10333,4,727.827,2,727.827,1,156,0)
CPT, QTY & MODIFIERS #24
"BLD",10333,4,727.827,2,727.827,1,157,0)
CPT, QTY & MODIFIERS #25
"BLD",10333,4,727.827,222)
y^y^p^^^^n^^n
"BLD",10333,4,727.827,224)

"BLD",10333,4,727.829,0)
727.829
"BLD",10333,4,727.829,2,0)
^9.641^727.829^1
"BLD",10333,4,727.829,2,727.829,0)
BLOOD BANK EXTRACT  (File-top level)
"BLD",10333,4,727.829,2,727.829,1,0)
^9.6411^7^1
"BLD",10333,4,727.829,2,727.829,1,7,0)
IN/OUT PATIENT INDICATOR
"BLD",10333,4,727.829,222)
y^y^p^^^^n^^n
"BLD",10333,4,727.829,224)

"BLD",10333,4,727.833,0)
727.833
"BLD",10333,4,727.833,2,0)
^9.641^727.833^1
"BLD",10333,4,727.833,2,727.833,0)
BCMA EXTRACT  (File-top level)
"BLD",10333,4,727.833,2,727.833,1,0)
^9.6411^7^7
"BLD",10333,4,727.833,2,727.833,1,7,0)
IN OUT PATIENT INDICATOR
"BLD",10333,4,727.833,2,727.833,1,20,0)
PLACEHOLD PC PROVIDER
"BLD",10333,4,727.833,2,727.833,1,21,0)
PLACEHOLD PC PROV PERSON CLASS
"BLD",10333,4,727.833,2,727.833,1,22,0)
PLACEHOLD PC PROVIDER NPI
"BLD",10333,4,727.833,2,727.833,1,23,0)
PLACEHOLD PRIMARY CARE TEAM
"BLD",10333,4,727.833,2,727.833,1,57,0)
PLACEHOLD ETHNICITY
"BLD",10333,4,727.833,2,727.833,1,58,0)
PLACEHOLD RACE 1
"BLD",10333,4,727.833,222)
y^y^p^^^^n^^n
"BLD",10333,4,727.833,224)

"BLD",10333,4,"APDD",727.802,727.802)

"BLD",10333,4,"APDD",727.802,727.802,7)

"BLD",10333,4,"APDD",727.802,727.802,9)

"BLD",10333,4,"APDD",727.802,727.802,30)

"BLD",10333,4,"APDD",727.802,727.802,34)

"BLD",10333,4,"APDD",727.802,727.802,35)

"BLD",10333,4,"APDD",727.802,727.802,48)

"BLD",10333,4,"APDD",727.802,727.802,49)

"BLD",10333,4,"APDD",727.802,727.802,50)

"BLD",10333,4,"APDD",727.802,727.802,64)

"BLD",10333,4,"APDD",727.802,727.802,65)

"BLD",10333,4,"APDD",727.802,727.802,84)

"BLD",10333,4,"APDD",727.802,727.802,86)

"BLD",10333,4,"APDD",727.808,727.808)

"BLD",10333,4,"APDD",727.808,727.808,7)

"BLD",10333,4,"APDD",727.808,727.808,10)

"BLD",10333,4,"APDD",727.808,727.808,11)

"BLD",10333,4,"APDD",727.808,727.808,21)

"BLD",10333,4,"APDD",727.809,727.809)

"BLD",10333,4,"APDD",727.809,727.809,7)

"BLD",10333,4,"APDD",727.809,727.809,20)

"BLD",10333,4,"APDD",727.809,727.809,21)

"BLD",10333,4,"APDD",727.809,727.809,50)

"BLD",10333,4,"APDD",727.809,727.809,51)

"BLD",10333,4,"APDD",727.809,727.809,53)

"BLD",10333,4,"APDD",727.809,727.809,54)

"BLD",10333,4,"APDD",727.809,727.809,56)

"BLD",10333,4,"APDD",727.809,727.809,60)

"BLD",10333,4,"APDD",727.809,727.809,61)

"BLD",10333,4,"APDD",727.809,727.809,79)

"BLD",10333,4,"APDD",727.809,727.809,80)

"BLD",10333,4,"APDD",727.81,727.81)

"BLD",10333,4,"APDD",727.81,727.81,7)

"BLD",10333,4,"APDD",727.81,727.81,30)

"BLD",10333,4,"APDD",727.81,727.81,31)

"BLD",10333,4,"APDD",727.81,727.81,33)

"BLD",10333,4,"APDD",727.81,727.81,42)

"BLD",10333,4,"APDD",727.81,727.81,51)

"BLD",10333,4,"APDD",727.81,727.81,52)

"BLD",10333,4,"APDD",727.81,727.81,71)

"BLD",10333,4,"APDD",727.81,727.81,72)

"BLD",10333,4,"APDD",727.81,727.81,94)

"BLD",10333,4,"APDD",727.81,727.81,95)

"BLD",10333,4,"APDD",727.811,727.811)

"BLD",10333,4,"APDD",727.811,727.811,7)

"BLD",10333,4,"APDD",727.811,727.811,34)

"BLD",10333,4,"APDD",727.811,727.811,35)

"BLD",10333,4,"APDD",727.811,727.811,43)

"BLD",10333,4,"APDD",727.811,727.811,44)

"BLD",10333,4,"APDD",727.811,727.811,45)

"BLD",10333,4,"APDD",727.811,727.811,59)

"BLD",10333,4,"APDD",727.811,727.811,60)

"BLD",10333,4,"APDD",727.811,727.811,92)

"BLD",10333,4,"APDD",727.811,727.811,94)

"BLD",10333,4,"APDD",727.813,727.813)

"BLD",10333,4,"APDD",727.813,727.813,3)

"BLD",10333,4,"APDD",727.813,727.813,7)

"BLD",10333,4,"APDD",727.813,727.813,20)

"BLD",10333,4,"APDD",727.813,727.813,21)

"BLD",10333,4,"APDD",727.813,727.813,26)

"BLD",10333,4,"APDD",727.813,727.813,27)

"BLD",10333,4,"APDD",727.813,727.813,28)

"BLD",10333,4,"APDD",727.813,727.813,35)

"BLD",10333,4,"APDD",727.813,727.813,39)

"BLD",10333,4,"APDD",727.813,727.813,40)

"BLD",10333,4,"APDD",727.813,727.813,53)

"BLD",10333,4,"APDD",727.814,727.814)

"BLD",10333,4,"APDD",727.814,727.814,7)

"BLD",10333,4,"APDD",727.814,727.814,21)

"BLD",10333,4,"APDD",727.814,727.814,22)

"BLD",10333,4,"APDD",727.814,727.814,27)

"BLD",10333,4,"APDD",727.814,727.814,28)

"BLD",10333,4,"APDD",727.814,727.814,29)

"BLD",10333,4,"APDD",727.814,727.814,44)

"BLD",10333,4,"APDD",727.814,727.814,46)

"BLD",10333,4,"APDD",727.815,727.815)

"BLD",10333,4,"APDD",727.815,727.815,7)

"BLD",10333,4,"APDD",727.815,727.815,26)

"BLD",10333,4,"APDD",727.815,727.815,27)

"BLD",10333,4,"APDD",727.815,727.815,47)

"BLD",10333,4,"APDD",727.815,727.815,49)

"BLD",10333,4,"APDD",727.815,727.815,50)

"BLD",10333,4,"APDD",727.815,727.815,72)

"BLD",10333,4,"APDD",727.815,727.815,73)

"BLD",10333,4,"APDD",727.815,727.815,92)

"BLD",10333,4,"APDD",727.815,727.815,93)

"BLD",10333,4,"APDD",727.817,727.817)

"BLD",10333,4,"APDD",727.817,727.817,7)

"BLD",10333,4,"APDD",727.819,727.819)

"BLD",10333,4,"APDD",727.819,727.819,7)

"BLD",10333,4,"APDD",727.819,727.819,21)

"BLD",10333,4,"APDD",727.819,727.819,22)

"BLD",10333,4,"APDD",727.819,727.819,24)

"BLD",10333,4,"APDD",727.819,727.819,25)

"BLD",10333,4,"APDD",727.819,727.819,30)

"BLD",10333,4,"APDD",727.819,727.819,31)

"BLD",10333,4,"APDD",727.819,727.819,32)

"BLD",10333,4,"APDD",727.819,727.819,65)

"BLD",10333,4,"APDD",727.819,727.819,66)

"BLD",10333,4,"APDD",727.819,727.819,84)

"BLD",10333,4,"APDD",727.819,727.819,86)

"BLD",10333,4,"APDD",727.824,727.824)

"BLD",10333,4,"APDD",727.824,727.824,7)

"BLD",10333,4,"APDD",727.824,727.824,10)

"BLD",10333,4,"APDD",727.824,727.824,36)

"BLD",10333,4,"APDD",727.825,727.825)

"BLD",10333,4,"APDD",727.825,727.825,7)

"BLD",10333,4,"APDD",727.825,727.825,26)

"BLD",10333,4,"APDD",727.825,727.825,27)

"BLD",10333,4,"APDD",727.825,727.825,47)

"BLD",10333,4,"APDD",727.825,727.825,49)

"BLD",10333,4,"APDD",727.825,727.825,50)

"BLD",10333,4,"APDD",727.825,727.825,72)

"BLD",10333,4,"APDD",727.825,727.825,73)

"BLD",10333,4,"APDD",727.825,727.825,92)

"BLD",10333,4,"APDD",727.825,727.825,93)

"BLD",10333,4,"APDD",727.826,727.826)

"BLD",10333,4,"APDD",727.826,727.826,7)

"BLD",10333,4,"APDD",727.826,727.826,12)

"BLD",10333,4,"APDD",727.826,727.826,13)

"BLD",10333,4,"APDD",727.826,727.826,40)

"BLD",10333,4,"APDD",727.826,727.826,41)

"BLD",10333,4,"APDD",727.826,727.826,50)

"BLD",10333,4,"APDD",727.826,727.826,51)

"BLD",10333,4,"APDD",727.826,727.826,65)

"BLD",10333,4,"APDD",727.826,727.826,66)

"BLD",10333,4,"APDD",727.826,727.826,85)

"BLD",10333,4,"APDD",727.826,727.826,86)

"BLD",10333,4,"APDD",727.827,727.827)

"BLD",10333,4,"APDD",727.827,727.827,7)

"BLD",10333,4,"APDD",727.827,727.827,14)

"BLD",10333,4,"APDD",727.827,727.827,15)

"BLD",10333,4,"APDD",727.827,727.827,16)

"BLD",10333,4,"APDD",727.827,727.827,19)

"BLD",10333,4,"APDD",727.827,727.827,20)

"BLD",10333,4,"APDD",727.827,727.827,21)

"BLD",10333,4,"APDD",727.827,727.827,22)

"BLD",10333,4,"APDD",727.827,727.827,23)

"BLD",10333,4,"APDD",727.827,727.827,24)

"BLD",10333,4,"APDD",727.827,727.827,25)

"BLD",10333,4,"APDD",727.827,727.827,26)

"BLD",10333,4,"APDD",727.827,727.827,35)

"BLD",10333,4,"APDD",727.827,727.827,56)

"BLD",10333,4,"APDD",727.827,727.827,57)

"BLD",10333,4,"APDD",727.827,727.827,73)

"BLD",10333,4,"APDD",727.827,727.827,74)

"BLD",10333,4,"APDD",727.827,727.827,90)

"BLD",10333,4,"APDD",727.827,727.827,91)

"BLD",10333,4,"APDD",727.827,727.827,133)

"BLD",10333,4,"APDD",727.827,727.827,134)

"BLD",10333,4,"APDD",727.827,727.827,135)

"BLD",10333,4,"APDD",727.827,727.827,136)

"BLD",10333,4,"APDD",727.827,727.827,137)

"BLD",10333,4,"APDD",727.827,727.827,138)

"BLD",10333,4,"APDD",727.827,727.827,139)

"BLD",10333,4,"APDD",727.827,727.827,140)

"BLD",10333,4,"APDD",727.827,727.827,141)

"BLD",10333,4,"APDD",727.827,727.827,142)

"BLD",10333,4,"APDD",727.827,727.827,143)

"BLD",10333,4,"APDD",727.827,727.827,144)

"BLD",10333,4,"APDD",727.827,727.827,145)

"BLD",10333,4,"APDD",727.827,727.827,146)

"BLD",10333,4,"APDD",727.827,727.827,147)

"BLD",10333,4,"APDD",727.827,727.827,148)

"BLD",10333,4,"APDD",727.827,727.827,149)

"BLD",10333,4,"APDD",727.827,727.827,150)

"BLD",10333,4,"APDD",727.827,727.827,151)

"BLD",10333,4,"APDD",727.827,727.827,152)

"BLD",10333,4,"APDD",727.827,727.827,153)

"BLD",10333,4,"APDD",727.827,727.827,154)

"BLD",10333,4,"APDD",727.827,727.827,155)

"BLD",10333,4,"APDD",727.827,727.827,156)

"BLD",10333,4,"APDD",727.827,727.827,157)

"BLD",10333,4,"APDD",727.829,727.829)

"BLD",10333,4,"APDD",727.829,727.829,7)

"BLD",10333,4,"APDD",727.833,727.833)

"BLD",10333,4,"APDD",727.833,727.833,7)

"BLD",10333,4,"APDD",727.833,727.833,20)

"BLD",10333,4,"APDD",727.833,727.833,21)

"BLD",10333,4,"APDD",727.833,727.833,22)

"BLD",10333,4,"APDD",727.833,727.833,23)

"BLD",10333,4,"APDD",727.833,727.833,57)

"BLD",10333,4,"APDD",727.833,727.833,58)

"BLD",10333,4,"B",727.802,727.802)

"BLD",10333,4,"B",727.808,727.808)

"BLD",10333,4,"B",727.809,727.809)

"BLD",10333,4,"B",727.81,727.81)

"BLD",10333,4,"B",727.811,727.811)

"BLD",10333,4,"B",727.813,727.813)

"BLD",10333,4,"B",727.814,727.814)

"BLD",10333,4,"B",727.815,727.815)

"BLD",10333,4,"B",727.817,727.817)

"BLD",10333,4,"B",727.819,727.819)

"BLD",10333,4,"B",727.824,727.824)

"BLD",10333,4,"B",727.825,727.825)

"BLD",10333,4,"B",727.826,727.826)

"BLD",10333,4,"B",727.827,727.827)

"BLD",10333,4,"B",727.829,727.829)

"BLD",10333,4,"B",727.833,727.833)

"BLD",10333,6.3)
12
"BLD",10333,"ABPKG")
n
"BLD",10333,"INIT")
POST^ECX3P170
"BLD",10333,"KRN",0)
^9.67PA^779.2^20
"BLD",10333,"KRN",.4,0)
.4
"BLD",10333,"KRN",.4,"NM",0)
^9.68A^2^2
"BLD",10333,"KRN",.4,"NM",1,0)
ECX PRO RENTAL EXPORT    FILE #660^660^0
"BLD",10333,"KRN",.4,"NM",2,0)
ECX PRO RENTAL PRINT    FILE #660^660^0
"BLD",10333,"KRN",.4,"NM","B","ECX PRO RENTAL EXPORT    FILE #660",1)

"BLD",10333,"KRN",.4,"NM","B","ECX PRO RENTAL PRINT    FILE #660",2)

"BLD",10333,"KRN",.401,0)
.401
"BLD",10333,"KRN",.402,0)
.402
"BLD",10333,"KRN",.403,0)
.403
"BLD",10333,"KRN",.5,0)
.5
"BLD",10333,"KRN",.84,0)
.84
"BLD",10333,"KRN",3.6,0)
3.6
"BLD",10333,"KRN",3.8,0)
3.8
"BLD",10333,"KRN",9.2,0)
9.2
"BLD",10333,"KRN",9.8,0)
9.8
"BLD",10333,"KRN",9.8,"NM",0)
^9.68A^38^38
"BLD",10333,"KRN",9.8,"NM",1,0)
ECXPROMR^^0^B12457652
"BLD",10333,"KRN",9.8,"NM",2,0)
ECXSCXN^^0^B112519738
"BLD",10333,"KRN",9.8,"NM",3,0)
ECXAADM^^0^B77033155
"BLD",10333,"KRN",9.8,"NM",4,0)
ECXPHAA^^0^B60802836
"BLD",10333,"KRN",9.8,"NM",5,0)
ECXUTL5^^0^B49444262
"BLD",10333,"KRN",9.8,"NM",6,0)
ECX3P170^^0^B7793070
"BLD",10333,"KRN",9.8,"NM",7,0)
ECXADM^^0^B72580110
"BLD",10333,"KRN",9.8,"NM",8,0)
ECXBCM1^^0^B11048241
"BLD",10333,"KRN",9.8,"NM",9,0)
ECXQSR1^^0^B20446907
"BLD",10333,"KRN",9.8,"NM",10,0)
ECXEC^^0^B122027345
"BLD",10333,"KRN",9.8,"NM",11,0)
ECXOPRX1^^0^B11978223
"BLD",10333,"KRN",9.8,"NM",12,0)
ECXPRO^^0^B54041445
"BLD",10333,"KRN",9.8,"NM",13,0)
ECXSURG1^^0^B25793126
"BLD",10333,"KRN",9.8,"NM",14,0)
ECXUD^^0^B98520338
"BLD",10333,"KRN",9.8,"NM",15,0)
ECXPIVD2^^0^B11130859
"BLD",10333,"KRN",9.8,"NM",16,0)
ECXRACPT^^0^B20368864
"BLD",10333,"KRN",9.8,"NM",17,0)
ECXLABN^^0^B76780222
"BLD",10333,"KRN",9.8,"NM",18,0)
ECXRAD^^0^B56359517
"BLD",10333,"KRN",9.8,"NM",19,0)
ECXUTL4^^0^B48775679
"BLD",10333,"KRN",9.8,"NM",20,0)
ECXPIVDN^^0^B64708339
"BLD",10333,"KRN",9.8,"NM",21,0)
ECXNDC^^0^B11146910
"BLD",10333,"KRN",9.8,"NM",22,0)
ECXSCX1^^0^B105520040
"BLD",10333,"KRN",9.8,"NM",23,0)
ECXSCXN1^^0^B18069575
"BLD",10333,"KRN",9.8,"NM",24,0)
ECXDRUG1^^0^B48164231
"BLD",10333,"KRN",9.8,"NM",25,0)
ECXLABR^^0^B26556726
"BLD",10333,"KRN",9.8,"NM",26,0)
ECXBSC^^0^B33867674
"BLD",10333,"KRN",9.8,"NM",27,0)
ECXSTOP^^0^B13980385
"BLD",10333,"KRN",9.8,"NM",28,0)
ECXUTL3^^0^B112915462
"BLD",10333,"KRN",9.8,"NM",29,0)
ECXMOV^^0^B54397407
"BLD",10333,"KRN",9.8,"NM",30,0)
ECXOPRX^^0^B72012795
"BLD",10333,"KRN",9.8,"NM",31,0)
ECXSURG^^0^B118025382
"BLD",10333,"KRN",9.8,"NM",32,0)
ECXTRT^^0^B62005159
"BLD",10333,"KRN",9.8,"NM",33,0)
ECXQSR^^0^B75027967
"BLD",10333,"KRN",9.8,"NM",34,0)
ECXSCX2^^0^B10651540
"BLD",10333,"KRN",9.8,"NM",35,0)
ECXLBB1^^0^B28807056
"BLD",10333,"KRN",9.8,"NM",36,0)
ECXBCM^^0^B101525951
"BLD",10333,"KRN",9.8,"NM",37,0)
ECXUTL2^^0^B115324806
"BLD",10333,"KRN",9.8,"NM",38,0)
ECXUTL6^^0^B75618868
"BLD",10333,"KRN",9.8,"NM","B","ECX3P170",6)

"BLD",10333,"KRN",9.8,"NM","B","ECXAADM",3)

"BLD",10333,"KRN",9.8,"NM","B","ECXADM",7)

"BLD",10333,"KRN",9.8,"NM","B","ECXBCM",36)

"BLD",10333,"KRN",9.8,"NM","B","ECXBCM1",8)

"BLD",10333,"KRN",9.8,"NM","B","ECXBSC",26)

"BLD",10333,"KRN",9.8,"NM","B","ECXDRUG1",24)

"BLD",10333,"KRN",9.8,"NM","B","ECXEC",10)

"BLD",10333,"KRN",9.8,"NM","B","ECXLABN",17)

"BLD",10333,"KRN",9.8,"NM","B","ECXLABR",25)

"BLD",10333,"KRN",9.8,"NM","B","ECXLBB1",35)

"BLD",10333,"KRN",9.8,"NM","B","ECXMOV",29)

"BLD",10333,"KRN",9.8,"NM","B","ECXNDC",21)

"BLD",10333,"KRN",9.8,"NM","B","ECXOPRX",30)

"BLD",10333,"KRN",9.8,"NM","B","ECXOPRX1",11)

"BLD",10333,"KRN",9.8,"NM","B","ECXPHAA",4)

"BLD",10333,"KRN",9.8,"NM","B","ECXPIVD2",15)

"BLD",10333,"KRN",9.8,"NM","B","ECXPIVDN",20)

"BLD",10333,"KRN",9.8,"NM","B","ECXPRO",12)

"BLD",10333,"KRN",9.8,"NM","B","ECXPROMR",1)

"BLD",10333,"KRN",9.8,"NM","B","ECXQSR",33)

"BLD",10333,"KRN",9.8,"NM","B","ECXQSR1",9)

"BLD",10333,"KRN",9.8,"NM","B","ECXRACPT",16)

"BLD",10333,"KRN",9.8,"NM","B","ECXRAD",18)

"BLD",10333,"KRN",9.8,"NM","B","ECXSCX1",22)

"BLD",10333,"KRN",9.8,"NM","B","ECXSCX2",34)

"BLD",10333,"KRN",9.8,"NM","B","ECXSCXN",2)

"BLD",10333,"KRN",9.8,"NM","B","ECXSCXN1",23)

"BLD",10333,"KRN",9.8,"NM","B","ECXSTOP",27)

"BLD",10333,"KRN",9.8,"NM","B","ECXSURG",31)

"BLD",10333,"KRN",9.8,"NM","B","ECXSURG1",13)

"BLD",10333,"KRN",9.8,"NM","B","ECXTRT",32)

"BLD",10333,"KRN",9.8,"NM","B","ECXUD",14)

"BLD",10333,"KRN",9.8,"NM","B","ECXUTL2",37)

"BLD",10333,"KRN",9.8,"NM","B","ECXUTL3",28)

"BLD",10333,"KRN",9.8,"NM","B","ECXUTL4",19)

"BLD",10333,"KRN",9.8,"NM","B","ECXUTL5",5)

"BLD",10333,"KRN",9.8,"NM","B","ECXUTL6",38)

"BLD",10333,"KRN",19,0)
19
"BLD",10333,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",10333,"KRN",19,"NM",1,0)
ECX RAD SOURCE AUDIT CPT^^0
"BLD",10333,"KRN",19,"NM",2,0)
ECXNDC^^0
"BLD",10333,"KRN",19,"NM",3,0)
ECXBSC^^0
"BLD",10333,"KRN",19,"NM","B","ECX RAD SOURCE AUDIT CPT",1)

"BLD",10333,"KRN",19,"NM","B","ECXBSC",3)

"BLD",10333,"KRN",19,"NM","B","ECXNDC",2)

"BLD",10333,"KRN",19.1,0)
19.1
"BLD",10333,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",10333,"KRN",19.1,"NM",1,0)
ECX DSS TEST^^0
"BLD",10333,"KRN",19.1,"NM","B","ECX DSS TEST",1)

"BLD",10333,"KRN",101,0)
101
"BLD",10333,"KRN",409.61,0)
409.61
"BLD",10333,"KRN",771,0)
771
"BLD",10333,"KRN",779.2,0)
779.2
"BLD",10333,"KRN",870,0)
870
"BLD",10333,"KRN",8989.51,0)
8989.51
"BLD",10333,"KRN",8989.52,0)
8989.52
"BLD",10333,"KRN",8994,0)
8994
"BLD",10333,"KRN","B",.4,.4)

"BLD",10333,"KRN","B",.401,.401)

"BLD",10333,"KRN","B",.402,.402)

"BLD",10333,"KRN","B",.403,.403)

"BLD",10333,"KRN","B",.5,.5)

"BLD",10333,"KRN","B",.84,.84)

"BLD",10333,"KRN","B",3.6,3.6)

"BLD",10333,"KRN","B",3.8,3.8)

"BLD",10333,"KRN","B",9.2,9.2)

"BLD",10333,"KRN","B",9.8,9.8)

"BLD",10333,"KRN","B",19,19)

"BLD",10333,"KRN","B",19.1,19.1)

"BLD",10333,"KRN","B",101,101)

"BLD",10333,"KRN","B",409.61,409.61)

"BLD",10333,"KRN","B",771,771)

"BLD",10333,"KRN","B",779.2,779.2)

"BLD",10333,"KRN","B",870,870)

"BLD",10333,"KRN","B",8989.51,8989.51)

"BLD",10333,"KRN","B",8989.52,8989.52)

"BLD",10333,"KRN","B",8994,8994)

"BLD",10333,"QUES",0)
^9.62^^
"BLD",10333,"REQB",0)
^9.611^1^1
"BLD",10333,"REQB",1,0)
ECX*3.0*169^1
"BLD",10333,"REQB","B","ECX*3.0*169",1)

"FIA",727.802)
ADMISSION EXTRACT
"FIA",727.802,0)
^ECX(727.802,
"FIA",727.802,0,0)
727.802
"FIA",727.802,0,1)
y^y^p^^^^n^^n
"FIA",727.802,0,10)

"FIA",727.802,0,11)

"FIA",727.802,0,"RLRO")

"FIA",727.802,0,"VR")
3.0^ECX
"FIA",727.802,727.802)
1
"FIA",727.802,727.802,7)

"FIA",727.802,727.802,9)

"FIA",727.802,727.802,30)

"FIA",727.802,727.802,34)

"FIA",727.802,727.802,35)

"FIA",727.802,727.802,48)

"FIA",727.802,727.802,49)

"FIA",727.802,727.802,50)

"FIA",727.802,727.802,64)

"FIA",727.802,727.802,65)

"FIA",727.802,727.802,84)

"FIA",727.802,727.802,86)

"FIA",727.808)
PHYSICAL MOVEMENT EXTRACT
"FIA",727.808,0)
^ECX(727.808,
"FIA",727.808,0,0)
727.808
"FIA",727.808,0,1)
y^y^p^^^^n^^n
"FIA",727.808,0,10)

"FIA",727.808,0,11)

"FIA",727.808,0,"RLRO")

"FIA",727.808,0,"VR")
3.0^ECX
"FIA",727.808,727.808)
1
"FIA",727.808,727.808,7)

"FIA",727.808,727.808,10)

"FIA",727.808,727.808,11)

"FIA",727.808,727.808,21)

"FIA",727.809)
UNIT DOSE LOCAL EXTRACT
"FIA",727.809,0)
^ECX(727.809,
"FIA",727.809,0,0)
727.809
"FIA",727.809,0,1)
y^y^p^^^^n^^n
"FIA",727.809,0,10)

"FIA",727.809,0,11)

"FIA",727.809,0,"RLRO")

"FIA",727.809,0,"VR")
3.0^ECX
"FIA",727.809,727.809)
1
"FIA",727.809,727.809,7)

"FIA",727.809,727.809,20)

"FIA",727.809,727.809,21)

"FIA",727.809,727.809,50)

"FIA",727.809,727.809,51)

"FIA",727.809,727.809,53)

"FIA",727.809,727.809,54)

"FIA",727.809,727.809,56)

"FIA",727.809,727.809,60)

"FIA",727.809,727.809,61)

"FIA",727.809,727.809,79)

"FIA",727.809,727.809,80)

"FIA",727.81)
PRESCRIPTION EXTRACT
"FIA",727.81,0)
^ECX(727.81,
"FIA",727.81,0,0)
727.81
"FIA",727.81,0,1)
y^y^p^^^^n^^n
"FIA",727.81,0,10)

"FIA",727.81,0,11)

"FIA",727.81,0,"RLRO")

"FIA",727.81,0,"VR")
3.0^ECX
"FIA",727.81,727.81)
1
"FIA",727.81,727.81,7)

"FIA",727.81,727.81,30)

"FIA",727.81,727.81,31)

"FIA",727.81,727.81,33)

"FIA",727.81,727.81,42)

"FIA",727.81,727.81,51)

"FIA",727.81,727.81,52)

"FIA",727.81,727.81,71)

"FIA",727.81,727.81,72)

"FIA",727.81,727.81,94)

"FIA",727.81,727.81,95)

"FIA",727.811)
SURGERY EXTRACT
"FIA",727.811,0)
^ECX(727.811,
"FIA",727.811,0,0)
727.811
"FIA",727.811,0,1)
y^y^p^^^^n^^n
"FIA",727.811,0,10)

"FIA",727.811,0,11)

"FIA",727.811,0,"RLRO")

"FIA",727.811,0,"VR")
3.0^ECX
"FIA",727.811,727.811)
1
"FIA",727.811,727.811,7)

"FIA",727.811,727.811,34)

"FIA",727.811,727.811,35)

"FIA",727.811,727.811,43)

"FIA",727.811,727.811,44)

"FIA",727.811,727.811,45)

"FIA",727.811,727.811,59)

"FIA",727.811,727.811,60)

"FIA",727.811,727.811,92)

"FIA",727.811,727.811,94)

"FIA",727.813)
LABORATORY EXTRACT
"FIA",727.813,0)
^ECX(727.813,
"FIA",727.813,0,0)
727.813
"FIA",727.813,0,1)
y^y^p^^^^n^^n
"FIA",727.813,0,10)

"FIA",727.813,0,11)

"FIA",727.813,0,"RLRO")

"FIA",727.813,0,"VR")
3.0^ECX
"FIA",727.813,727.813)
1
"FIA",727.813,727.813,3)

"FIA",727.813,727.813,7)

"FIA",727.813,727.813,20)

"FIA",727.813,727.813,21)

"FIA",727.813,727.813,26)

"FIA",727.813,727.813,27)

"FIA",727.813,727.813,28)

"FIA",727.813,727.813,35)

"FIA",727.813,727.813,39)

"FIA",727.813,727.813,40)

"FIA",727.813,727.813,53)

"FIA",727.814)
RADIOLOGY EXTRACT
"FIA",727.814,0)
^ECX(727.814,
"FIA",727.814,0,0)
727.814
"FIA",727.814,0,1)
y^y^p^^^^n^^n
"FIA",727.814,0,10)

"FIA",727.814,0,11)

"FIA",727.814,0,"RLRO")

"FIA",727.814,0,"VR")
3.0^ECX
"FIA",727.814,727.814)
1
"FIA",727.814,727.814,7)

"FIA",727.814,727.814,21)

"FIA",727.814,727.814,22)

"FIA",727.814,727.814,27)

"FIA",727.814,727.814,28)

"FIA",727.814,727.814,29)

"FIA",727.814,727.814,44)

"FIA",727.814,727.814,46)

"FIA",727.815)
EVENT CAPTURE LOCAL EXTRACT
"FIA",727.815,0)
^ECX(727.815,
"FIA",727.815,0,0)
727.815
"FIA",727.815,0,1)
y^y^p^^^^n^^n
"FIA",727.815,0,10)

"FIA",727.815,0,11)

"FIA",727.815,0,"RLRO")

"FIA",727.815,0,"VR")
3.0^ECX
"FIA",727.815,727.815)
1
"FIA",727.815,727.815,7)

"FIA",727.815,727.815,26)

"FIA",727.815,727.815,27)

"FIA",727.815,727.815,47)

"FIA",727.815,727.815,49)

"FIA",727.815,727.815,50)

"FIA",727.815,727.815,72)

"FIA",727.815,727.815,73)

"FIA",727.815,727.815,92)

"FIA",727.815,727.815,93)

"FIA",727.817)
TREATING SPECIALTY CHANGE EXTRACT
"FIA",727.817,0)
^ECX(727.817,
"FIA",727.817,0,0)
727.817
"FIA",727.817,0,1)
y^y^p^^^^n^^n
"FIA",727.817,0,10)

"FIA",727.817,0,11)

"FIA",727.817,0,"RLRO")

"FIA",727.817,0,"VR")
3.0^ECX
"FIA",727.817,727.817)
1
"FIA",727.817,727.817,7)

"FIA",727.819)
IV DETAIL EXTRACT
"FIA",727.819,0)
^ECX(727.819,
"FIA",727.819,0,0)
727.819
"FIA",727.819,0,1)
y^y^p^^^^n^^n
"FIA",727.819,0,10)

"FIA",727.819,0,11)

"FIA",727.819,0,"RLRO")

"FIA",727.819,0,"VR")
3.0^ECX
"FIA",727.819,727.819)
1
"FIA",727.819,727.819,7)

"FIA",727.819,727.819,21)

"FIA",727.819,727.819,22)

"FIA",727.819,727.819,24)

"FIA",727.819,727.819,25)

"FIA",727.819,727.819,30)

"FIA",727.819,727.819,31)

"FIA",727.819,727.819,32)

"FIA",727.819,727.819,65)

"FIA",727.819,727.819,66)

"FIA",727.819,727.819,84)

"FIA",727.819,727.819,86)

"FIA",727.824)
LAB RESULTS EXTRACT
"FIA",727.824,0)
^ECX(727.824,
"FIA",727.824,0,0)
727.824
"FIA",727.824,0,1)
y^y^p^^^^n^^n
"FIA",727.824,0,10)

"FIA",727.824,0,11)

"FIA",727.824,0,"RLRO")

"FIA",727.824,0,"VR")
3.0^ECX
"FIA",727.824,727.824)
1
"FIA",727.824,727.824,7)

"FIA",727.824,727.824,10)

"FIA",727.824,727.824,36)

"FIA",727.825)
QUASAR EXTRACT
"FIA",727.825,0)
^ECX(727.825,
"FIA",727.825,0,0)
727.825
"FIA",727.825,0,1)
y^y^p^^^^n^^n
"FIA",727.825,0,10)

"FIA",727.825,0,11)

"FIA",727.825,0,"RLRO")

"FIA",727.825,0,"VR")
3.0^ECX
"FIA",727.825,727.825)
1
"FIA",727.825,727.825,7)

"FIA",727.825,727.825,26)

"FIA",727.825,727.825,27)

"FIA",727.825,727.825,47)

"FIA",727.825,727.825,49)

"FIA",727.825,727.825,50)

"FIA",727.825,727.825,72)

"FIA",727.825,727.825,73)

"FIA",727.825,727.825,92)

"FIA",727.825,727.825,93)

"FIA",727.826)
PROSTHETICS EXTRACT
"FIA",727.826,0)
^ECX(727.826,
"FIA",727.826,0,0)
727.826
"FIA",727.826,0,1)
y^y^p^^^^n^^n
"FIA",727.826,0,10)

"FIA",727.826,0,11)

"FIA",727.826,0,"RLRO")

"FIA",727.826,0,"VR")
3.0^ECX
"FIA",727.826,727.826)
1
"FIA",727.826,727.826,7)

"FIA",727.826,727.826,12)

"FIA",727.826,727.826,13)

"FIA",727.826,727.826,40)

"FIA",727.826,727.826,41)

"FIA",727.826,727.826,50)

"FIA",727.826,727.826,51)

"FIA",727.826,727.826,65)

"FIA",727.826,727.826,66)

"FIA",727.826,727.826,85)

"FIA",727.826,727.826,86)

"FIA",727.827)
CLINIC EXTRACT
"FIA",727.827,0)
^ECX(727.827,
"FIA",727.827,0,0)
727.827
"FIA",727.827,0,1)
y^y^p^^^^n^^n
"FIA",727.827,0,10)

"FIA",727.827,0,11)

"FIA",727.827,0,"RLRO")

"FIA",727.827,0,"VR")
3.0^ECX
"FIA",727.827,727.827)
1
"FIA",727.827,727.827,7)

"FIA",727.827,727.827,14)

"FIA",727.827,727.827,15)

"FIA",727.827,727.827,16)

"FIA",727.827,727.827,19)

"FIA",727.827,727.827,20)

"FIA",727.827,727.827,21)

"FIA",727.827,727.827,22)

"FIA",727.827,727.827,23)

"FIA",727.827,727.827,24)

"FIA",727.827,727.827,25)

"FIA",727.827,727.827,26)

"FIA",727.827,727.827,35)

"FIA",727.827,727.827,56)

"FIA",727.827,727.827,57)

"FIA",727.827,727.827,73)

"FIA",727.827,727.827,74)

"FIA",727.827,727.827,90)

"FIA",727.827,727.827,91)

"FIA",727.827,727.827,133)

"FIA",727.827,727.827,134)

"FIA",727.827,727.827,135)

"FIA",727.827,727.827,136)

"FIA",727.827,727.827,137)

"FIA",727.827,727.827,138)

"FIA",727.827,727.827,139)

"FIA",727.827,727.827,140)

"FIA",727.827,727.827,141)

"FIA",727.827,727.827,142)

"FIA",727.827,727.827,143)

"FIA",727.827,727.827,144)

"FIA",727.827,727.827,145)

"FIA",727.827,727.827,146)

"FIA",727.827,727.827,147)

"FIA",727.827,727.827,148)

"FIA",727.827,727.827,149)

"FIA",727.827,727.827,150)

"FIA",727.827,727.827,151)

"FIA",727.827,727.827,152)

"FIA",727.827,727.827,153)

"FIA",727.827,727.827,154)

"FIA",727.827,727.827,155)

"FIA",727.827,727.827,156)

"FIA",727.827,727.827,157)

"FIA",727.829)
BLOOD BANK EXTRACT
"FIA",727.829,0)
^ECX(727.829,
"FIA",727.829,0,0)
727.829
"FIA",727.829,0,1)
y^y^p^^^^n^^n
"FIA",727.829,0,10)

"FIA",727.829,0,11)

"FIA",727.829,0,"RLRO")

"FIA",727.829,0,"VR")
3.0^ECX
"FIA",727.829,727.829)
1
"FIA",727.829,727.829,7)

"FIA",727.833)
BCMA EXTRACT
"FIA",727.833,0)
^ECX(727.833,
"FIA",727.833,0,0)
727.833
"FIA",727.833,0,1)
y^y^p^^^^n^^n
"FIA",727.833,0,10)

"FIA",727.833,0,11)

"FIA",727.833,0,"RLRO")

"FIA",727.833,0,"VR")
3.0^ECX
"FIA",727.833,727.833)
1
"FIA",727.833,727.833,7)

"FIA",727.833,727.833,20)

"FIA",727.833,727.833,21)

"FIA",727.833,727.833,22)

"FIA",727.833,727.833,23)

"FIA",727.833,727.833,57)

"FIA",727.833,727.833,58)

"INIT")
POST^ECX3P170
"KRN",.4,2885,-1)
0^2
"KRN",.4,2885,0)
ECX PRO RENTAL PRINT^3180814.1135^@^660^^@^3180814
"KRN",.4,2885,"F",1)
.02;L30~5;L4~4.5;L7~27;L30~-661.1,^RMPR(661.1,^^S I(0,0)=D0 S DIP(1)=$S($D(^RMPR(660,D0,1)):^(1),1:"") S X=$P(DIP(1),U,4),X=X  S D(0)=+X;Z;"PSAS HCPCS:"~
"KRN",.4,2885,"F",2)
-661.1,.02;L30;"ITEM DESCRIPTION"~
"KRN",.4,2885,"H")
Prosthetics monthly rental listing
"KRN",.4,2886,-1)
0^1
"KRN",.4,2886,0)
ECX PRO RENTAL EXPORT^3180213.084^@^660^^@^3180814
"KRN",.4,2886,"DXS",1,9.2)
S I(0,0)=$G(D0),DIP(1)=$S($D(^RMPR(660,D0,1)):^(1),1:"") S X="^",DIP(2)=$G(X),D0=$P(DIP(1),U,4) S:'D0!'$D(^RMPR(661.1,+D0,0)) D0=-1 S D0=D0
"KRN",.4,2886,"F",1)
.02~S DIP(1)=$S($D(^RMPR(660,D0,0)):^(0),1:"") S X="^"_$P(DIP(1),U,7) W X K DIP;X;Z;""^"_#5"~
"KRN",.4,2886,"F",2)
S DIP(1)=$S($D(^RMPR(660,D0,1)):^(1),1:"") S X="^"_$P($G(^RMPR(661.1,+$P(DIP(1),U,4),0)),U) W X K DIP;X;Z;""^"_PSAS HCPCS"~
"KRN",.4,2886,"F",3)
S DIP(1)=$S($D(^RMPR(660,D0,0)):^(0),1:"") S X="^"_$P($G(^VA(200,+$P(DIP(1),U,27),0)),U) W X K DIP;X;Z;""^"_#27"~
"KRN",.4,2886,"F",4)
X DXS(1,9.2) S DIP(101)=$S($D(^RMPR(661.1,D0,0)):^(0),1:"") S X=$P(DIP(101),U,2),Y=X,X=DIP(2),X=X_Y S D0=I(0,0) W X K DIP;X;Z;""^"_PSAS HCPCS:SHORT NAME"~
"KRN",.4,2886,"H")
@@
"KRN",19,10199,-1)
0^2
"KRN",19,10199,0)
ECXNDC^Pharmacy NDC Lookup^^R^^^^^^^^DSS EXTRACTS
"KRN",19,10199,1,0)
^^15^15^3180529^
"KRN",19,10199,1,1,0)
This option will allow lookups on the local DRUG file (#50) using 
"KRN",19,10199,1,2,0)
NDCs from DSS Pharmacy Feeder Keys that have been rejected because
"KRN",19,10199,1,3,0)
the first five characters are zeros in a 17 character Feeder Key.
"KRN",19,10199,1,4,0)
(Ex. "00000051079014120")
"KRN",19,10199,1,5,0)
 
"KRN",19,10199,1,6,0)
This would occur when a pharmacy item has not been matched to the
"KRN",19,10199,1,7,0)
the National Drug File (NDF).
"KRN",19,10199,1,8,0)
 
"KRN",19,10199,1,9,0)
To use this option, enter the NDC (last twelve characters) from a rejected
"KRN",19,10199,1,10,0)
feeder key. The NDC can be either 12 digits or the letters "LCL" followed 
"KRN",19,10199,1,11,0)
by 9 digits.
"KRN",19,10199,1,12,0)
 
"KRN",19,10199,1,13,0)
This will display the following information from the local 
"KRN",19,10199,1,14,0)
DRUG file (#50): LOCAL GENERIC NAME, DISPENSE UNIT, and PRICE PER DISPENSE
"KRN",19,10199,1,15,0)
UNIT.
"KRN",19,10199,25)
EN^ECXNDC
"KRN",19,10199,"U")
PHARMACY NDC LOOKUP
"KRN",19,14098,-1)
0^1
"KRN",19,14098,0)
ECX RAD SOURCE AUDIT CPT^Radiology (RAD) Extract CPT Code Audit^^R^^^^^^^^
"KRN",19,14098,1,0)
^^14^14^3180405^
"KRN",19,14098,1,1,0)
This option will produce a report that identifies records in the 
"KRN",19,14098,1,2,0)
RADIOLOGY EXTRACT file (#727.814) that have a CPT code that is either
"KRN",19,14098,1,3,0)
missing or was inactive on the date of the procedure.
"KRN",19,14098,1,4,0)
 
"KRN",19,14098,1,5,0)
The user will select a specific extract log number and the report will 
"KRN",19,14098,1,6,0)
review all records contained in the extract for CPT code issues.
"KRN",19,14098,1,7,0)
 
"KRN",19,14098,1,8,0)
Records listed on this report indicate a problem with the procedure's CPT 
"KRN",19,14098,1,9,0)
code in the radiology package and should be resolved prior to transmitting
"KRN",19,14098,1,10,0)
the extract.
"KRN",19,14098,1,11,0)
 
"KRN",19,14098,1,12,0)
Once changes are made in the radiology package, the extract for this time 
"KRN",19,14098,1,13,0)
frame will need to be run again to ensure that any changes made are 
"KRN",19,14098,1,14,0)
captured in the extract.
"KRN",19,14098,25)
ECXRACPT
"KRN",19,14098,"U")
RADIOLOGY (RAD) EXTRACT CPT CO
"KRN",19,14099,-1)
0^3
"KRN",19,14099,0)
ECXBSC^Extract Stop Code Validity Report^^R^^^^^^^^
"KRN",19,14099,1,0)
^19.06^6^6^3180614^^
"KRN",19,14099,1,1,0)
This report will allow the user to select an extract from either the 
"KRN",19,14099,1,2,0)
CLI, ECS, or RAD systems and will then review the stop code associated
"KRN",19,14099,1,3,0)
with each record in the extract.
"KRN",19,14099,1,4,0)
 
"KRN",19,14099,1,5,0)
If the stop code was inactive/invalid at the time of service for the 
"KRN",19,14099,1,6,0)
selected extract and record then it will be included on the report.
"KRN",19,14099,25)
ECXBSC
"KRN",19,14099,"U")
EXTRACT STOP CODE VALIDITY REP
"KRN",19.1,545,-1)
0^1
"KRN",19.1,545,0)
ECX DSS TEST^DSS FY Conversion Testing
"KRN",19.1,545,1,0)
^19.11^8^8^3110513^^^^
"KRN",19.1,545,1,1,0)
This key controls access to the ECX FISCAL YEAR EXTRACT option.  It 
"KRN",19.1,545,1,2,0)
should be given only to holders of the ECXMGR key whenever the site
"KRN",19.1,545,1,3,0)
has been enrolled as an official DSS test site for fiscal year
"KRN",19.1,545,1,4,0)
conversion.
"KRN",19.1,545,1,5,0)
  
"KRN",19.1,545,1,6,0)
This key should be removed from the user(s) whenever the
"KRN",19.1,545,1,7,0)
nationally released version of the DSS Fiscal Year patch is
"KRN",19.1,545,1,8,0)
installed.
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",535,-1)
1^1
"PKG",535,0)
DSS EXTRACTS^ECX
"PKG",535,20,0)
^9.402P^^
"PKG",535,22,0)
^9.49I^1^1
"PKG",535,22,1,0)
3.0^2971222^3000224^66481
"PKG",535,22,1,"PAH",1,0)
170^3180904
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
38
"RTN","ECX3P170")
0^6^B7793070^n/a
"RTN","ECX3P170",1,0)
ECX3P170 ;ALB/DAN - DSS FY2019 Post install ;7/11/18  13:54
"RTN","ECX3P170",2,0)
 ;;3.0;DSS EXTRACTS;**170**;Dec 22, 1997;Build 12
"RTN","ECX3P170",3,0)
 ;
"RTN","ECX3P170",4,0)
POST ;Post-install items
"RTN","ECX3P170",5,0)
 D TEST ;Set testing site information
"RTN","ECX3P170",6,0)
 D MCAUPD ;Update MCA Labor Code file
"RTN","ECX3P170",7,0)
 D MENU ;Update menus
"RTN","ECX3P170",8,0)
 Q
"RTN","ECX3P170",9,0)
 ;
"RTN","ECX3P170",10,0)
TEST ;turn-on fld #73 in file #728 for Field Test Site;
"RTN","ECX3P170",11,0)
 ;allows use of option ECX FISCAL YEAR EXTRACT by test sites;
"RTN","ECX3P170",12,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P170",13,0)
 D MES^XPDUTL("Providing special menu option access for DSS FY Conversion test sites.")
"RTN","ECX3P170",14,0)
 D TESTON^ECXTREX(XPDNM,"FY2019")
"RTN","ECX3P170",15,0)
 D MES^XPDUTL(" ")
"RTN","ECX3P170",16,0)
 ;if this is the national released version, then fld #73 will be turned-off
"RTN","ECX3P170",17,0)
 ;the first time any user attempts to use ECX FISCAL YEAR EXTRACT option
"RTN","ECX3P170",18,0)
 Q
"RTN","ECX3P170",19,0)
 ;
"RTN","ECX3P170",20,0)
MCAUPD ;Section will add new values to the MCA Labor Code file
"RTN","ECX3P170",21,0)
 N NAME,DESC,CODE,OFF,NUM,DO,DIC,X,Y
"RTN","ECX3P170",22,0)
 D BMES^XPDUTL("Checking MCA Labor Code file..."),MES^XPDUTL("")
"RTN","ECX3P170",23,0)
 F OFF=1:1 S CODE=$P($T(CODES+OFF),";;",2) Q:CODE="DONE"  D
"RTN","ECX3P170",24,0)
 .S NAME=$P(CODE,U)
"RTN","ECX3P170",25,0)
 .S DESC=$P(CODE,U,2)
"RTN","ECX3P170",26,0)
 .S NUM=$$FIND1^DIC(728.442,,"X",DESC,"C")
"RTN","ECX3P170",27,0)
 .I NUM D MES^XPDUTL("MCA CODE: "_DESC_" already exists.") Q
"RTN","ECX3P170",28,0)
 .K DO
"RTN","ECX3P170",29,0)
 .S DIC="^ECX(728.442,"
"RTN","ECX3P170",30,0)
 .S DIC(0)=""
"RTN","ECX3P170",31,0)
 .S X=NAME
"RTN","ECX3P170",32,0)
 .S DIC("DR")="1///"_DESC
"RTN","ECX3P170",33,0)
 .D FILE^DICN
"RTN","ECX3P170",34,0)
 .D MES^XPDUTL("MCA CODE: "_DESC_" was "_$S(Y:"",1:"NOT ")_"added.")
"RTN","ECX3P170",35,0)
 .Q
"RTN","ECX3P170",36,0)
 Q
"RTN","ECX3P170",37,0)
 ;
"RTN","ECX3P170",38,0)
MENU ;Menu maintenance
"RTN","ECX3P170",39,0)
 N DA,DIE,DR,MENU,OPTION,CHECK,CHOICE,SYN,ORD,TYPE,OFF,UPDATE
"RTN","ECX3P170",40,0)
 S TYPE="MENUADD" F OFF=1:1 S CHOICE=$P($T(@TYPE+OFF),";;",2) Q:CHOICE="DONE"  D
"RTN","ECX3P170",41,0)
 .S OPTION=$P(CHOICE,"^"),MENU=$P(CHOICE,"^",2),SYN=$P(CHOICE,"^",3),ORD=$P(CHOICE,"^",4)
"RTN","ECX3P170",42,0)
 .S CHECK=$$ADD^XPDMENU(MENU,OPTION,SYN,ORD)
"RTN","ECX3P170",43,0)
 .D BMES^XPDUTL(">>> "_OPTION_" OPTION"_$S('CHECK:" NOT",1:"")_" ADDED TO "_MENU_" <<<")
"RTN","ECX3P170",44,0)
 Q
"RTN","ECX3P170",45,0)
 ;
"RTN","ECX3P170",46,0)
CODES ;MCA Labor codes to be added
"RTN","ECX3P170",47,0)
 ;;G1^CLINICAL GROUP
"RTN","ECX3P170",48,0)
 ;;G2^TECHNICIAN GROUP
"RTN","ECX3P170",49,0)
 ;;G3^RESIDENT/TRAINEE GROUP
"RTN","ECX3P170",50,0)
 ;;G4^RN GROUP
"RTN","ECX3P170",51,0)
 ;;G5^NURSE TECH/ASSISTANT GROUP
"RTN","ECX3P170",52,0)
 ;;G6^ADVANCE PRACTICE NURSE GROUP
"RTN","ECX3P170",53,0)
 ;;G7^LPN,LVN GROUP
"RTN","ECX3P170",54,0)
 ;;G8^PHYSICIAN/DENTIST GROUP
"RTN","ECX3P170",55,0)
 ;;G9^FELLOW GROUP
"RTN","ECX3P170",56,0)
 ;;2G^NON-NURSING CONTRACT STAFF GROUP
"RTN","ECX3P170",57,0)
 ;;3G^CONTRACT RN GROUP
"RTN","ECX3P170",58,0)
 ;;4G^CONTRACT NURSE TECH/ASSISTANT GROUP
"RTN","ECX3P170",59,0)
 ;;5G^CONTRACT ADV PRACTICE NURSE GROUP
"RTN","ECX3P170",60,0)
 ;;6G^CONTRACT LPN,LVN GROUP
"RTN","ECX3P170",61,0)
 ;;9G^MIXED LABOR (MULTI PROVIDERS) GROUP
"RTN","ECX3P170",62,0)
 ;;1G^ADMINISTRATIVE LABOR GROUP
"RTN","ECX3P170",63,0)
 ;;91^LOCAL USE 1
"RTN","ECX3P170",64,0)
 ;;92^LOCAL USE 2
"RTN","ECX3P170",65,0)
 ;;93^LOCAL USE 3
"RTN","ECX3P170",66,0)
 ;;94^LOCAL USE 4
"RTN","ECX3P170",67,0)
 ;;95^LOCAL USE 5
"RTN","ECX3P170",68,0)
 ;;DONE
"RTN","ECX3P170",69,0)
 ;
"RTN","ECX3P170",70,0)
MENUADD ;Menu items to be added
"RTN","ECX3P170",71,0)
 ;;ECX RAD SOURCE AUDIT CPT^ECX SOURCE AUDITS^RCP^13.5
"RTN","ECX3P170",72,0)
 ;;DG G&L CHANGES VIEW^ECX MAINTENANCE^G&L^12
"RTN","ECX3P170",73,0)
 ;;ECXBSC^ECX SOURCE AUDITS^VSC^20
"RTN","ECX3P170",74,0)
 ;;DONE
"RTN","ECXAADM")
0^3^B77033155^B70716394
"RTN","ECXAADM",1,0)
ECXAADM ;ALB/JAP - ADM Extract Audit Report ;3/9/18  15:38
"RTN","ECXAADM",2,0)
 ;;3.0;DSS EXTRACTS;**8,33,149,170**;Dec 22, 1997;Build 12
"RTN","ECXAADM",3,0)
EN ;entry point for ADM extract audit report
"RTN","ECXAADM",4,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT,ECXPORT,RCNT ;149
"RTN","ECXAADM",5,0)
 S ECXERR=0
"RTN","ECXAADM",6,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXAADM",7,0)
 S ECXHEAD="ADM",ECXAUD=0
"RTN","ECXAADM",8,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXAADM",9,0)
 ;select extract
"RTN","ECXAADM",10,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXAADM",11,0)
 Q:ECXERR
"RTN","ECXAADM",12,0)
 ;determine if facility is multidivisional
"RTN","ECXAADM",13,0)
 S DIC="^DG(43,",DA=1,DR="11;",DIQ="ECX",DIQ(0)="I" D EN^DIQ1
"RTN","ECXAADM",14,0)
 I +ECX(43,1,11,"I")=0 S ECXALL=1
"RTN","ECXAADM",15,0)
 I +ECX(43,1,11,"I")=1 D
"RTN","ECXAADM",16,0)
 .W !!
"RTN","ECXAADM",17,0)
 .S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract audit report for all divisions"
"RTN","ECXAADM",18,0)
 .S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXAADM",19,0)
 .I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXAADM",20,0)
 .;if y=0 i.e., 'no', then ecxall=0 i.e., 'selected'
"RTN","ECXAADM",21,0)
 .S ECXALL=Y
"RTN","ECXAADM",22,0)
 I ECXERR=1 D  Q
"RTN","ECXAADM",23,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAADM",24,0)
 .D AUDIT^ECXKILL
"RTN","ECXAADM",25,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXAADM",26,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAADM",27,0)
 W !
"RTN","ECXAADM",28,0)
 D ADM^ECXDVSN(.ECXDIV,ECXALL,ECXSTART,ECXEND,.ECXERR)
"RTN","ECXAADM",29,0)
 I ECXERR=1 D  Q
"RTN","ECXAADM",30,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAADM",31,0)
 .D AUDIT^ECXKILL
"RTN","ECXAADM",32,0)
 ;determine output device and queue if requested
"RTN","ECXAADM",33,0)
 S ECXPGM="PROCESS^ECXAADM",ECXDESC="ADM Extract Audit Report"
"RTN","ECXAADM",34,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXAADM",35,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I $G(ECXPORT) D  Q  ;149 Section added
"RTN","ECXAADM",36,0)
 .K ^TMP($J,"ECXPORT")
"RTN","ECXAADM",37,0)
 .S ^TMP($J,"ECXPORT",0)="EXTRACT LOG #^MEDICAL CENTER DIVISION^DATE RANGE OF AUDIT^WARD <DSS DEPT.>^# OF ADMISSIONS",RCNT=1
"RTN","ECXAADM",38,0)
 .D PROCESS
"RTN","ECXAADM",39,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXAADM",40,0)
 .D AUDIT^ECXKILL
"RTN","ECXAADM",41,0)
 W !
"RTN","ECXAADM",42,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXAADM",43,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXAADM",44,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXAADM",45,0)
 .D AUDIT^ECXKILL
"RTN","ECXAADM",46,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXAADM",47,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXAADM",48,0)
 .D PROCESS^ECXAADM
"RTN","ECXAADM",49,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXAADM",50,0)
 D HOME^%ZIS
"RTN","ECXAADM",51,0)
 D AUDIT^ECXKILL
"RTN","ECXAADM",52,0)
 Q
"RTN","ECXAADM",53,0)
 ;
"RTN","ECXAADM",54,0)
PROCESS ;process data in file #727.802
"RTN","ECXAADM",55,0)
 N X,Y,W,DATE,DIV,IEN,TL,ORDER,SORD,GTOT,STOT,WARD,QQFLG,CNT,TSV ;170
"RTN","ECXAADM",56,0)
 K ^TMP($J,"ECXWARD"),^TMP($J,"ECXORDER")
"RTN","ECXAADM",57,0)
 S (CNT,QQFLG)=0
"RTN","ECXAADM",58,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXAADM",59,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXAADM",60,0)
 ;get run date in external format
"RTN","ECXAADM",61,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXAADM",62,0)
 ;get ward info in ^tmp($j,"ecxward" and ^tmp($j,"ecxorder"
"RTN","ECXAADM",63,0)
 D WARDS^ECXUTLA(ECXALL,.ECXDIV)
"RTN","ECXAADM",64,0)
 S W="" F  S W=$O(^TMP($J,"ECXWARD",W)) Q:W=""  D
"RTN","ECXAADM",65,0)
 .S DIV=$P(^TMP($J,"ECXWARD",W),U,3),GTOT(DIV)=0,TL(W)=0,ORDER="" D
"RTN","ECXAADM",66,0)
 ..F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  I $D(^(ORDER,1)) S STOT(DIV,ORDER)=0
"RTN","ECXAADM",67,0)
 ;get records in date range and ward set
"RTN","ECXAADM",68,0)
 S IEN="" F  S IEN=$O(^ECX(727.802,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:QQFLG
"RTN","ECXAADM",69,0)
 .S DATE=$P(^ECX(727.802,IEN,0),U,9),WARD=$P(^(0),U,28),TSV=$P(^(0),U,29) ;170 Add Treating Specialty Value
"RTN","ECXAADM",70,0)
 .;convert free text date to fm internal format date
"RTN","ECXAADM",71,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXAADM",72,0)
 .Q:$L(DATE)<7  Q:(DATE<ECXSTART)  Q:(DATE>ECXEND)
"RTN","ECXAADM",73,0)
 .;track missing wards
"RTN","ECXAADM",74,0)
 .I WARD="" D  ;170
"RTN","ECXAADM",75,0)
 ..S ^TMP($J,"MISWRD")=$G(^TMP($J,"MISWRD"))+1,^("MISWRD",IEN)=""
"RTN","ECXAADM",76,0)
 .;170 Track missing treating specialties
"RTN","ECXAADM",77,0)
 .I TSV="" D  ;170
"RTN","ECXAADM",78,0)
 ..S ^TMP($J,"MISTRT")=$G(^TMP($J,"MISTRT"))+1,^("MISTRT",IEN)="" ;170
"RTN","ECXAADM",79,0)
 .I WARD=""!(TSV="") Q  ;170 Don't process if missing ward or treating specialty
"RTN","ECXAADM",80,0)
 .;if ward is among those selected, then tally admission data
"RTN","ECXAADM",81,0)
 .I $D(TL(WARD)) S TL(WARD)=TL(WARD)+1,CNT=CNT+1
"RTN","ECXAADM",82,0)
 .I $D(ZTQUEUED),(CNT>499),'(CNT#500),$$S^%ZTLOAD S QQFLG=1,ZTSTOP=1 K ZTREQ
"RTN","ECXAADM",83,0)
 ;after all the extract records are processed, set totals into ^tmp($j,"ecxorder"
"RTN","ECXAADM",84,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAADM",85,0)
 S W="" F  S W=$O(TL(W)) Q:W=""  D
"RTN","ECXAADM",86,0)
 .S ORDER=$P(^TMP($J,"ECXWARD",W),U,1),DIV=$P(^(W),U,3)
"RTN","ECXAADM",87,0)
 .S $P(^TMP($J,"ECXORDER",DIV,ORDER),U,3)=TL(W)
"RTN","ECXAADM",88,0)
 ;determine ward group subtotal and division grandtotal
"RTN","ECXAADM",89,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAADM",90,0)
 S DIV="" F  S DIV=$O(^TMP($J,"ECXORDER",DIV)) Q:DIV=""  S GTOT(DIV)=0 D
"RTN","ECXAADM",91,0)
 .S ORDER="",STOT=0 F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  D
"RTN","ECXAADM",92,0)
 ..S TOT=$P(^TMP($J,"ECXORDER",DIV,ORDER),U,3),STOT=STOT+TOT,GTOT(DIV)=GTOT(DIV)+TOT
"RTN","ECXAADM",93,0)
 ..I $D(^TMP($J,"ECXORDER",DIV,ORDER,1)) S $P(^(1),U,3)=STOT,STOT=0
"RTN","ECXAADM",94,0)
 D PRINT
"RTN","ECXAADM",95,0)
 I '$G(ECXPORT) D AUDIT^ECXKILL ;149
"RTN","ECXAADM",96,0)
 Q
"RTN","ECXAADM",97,0)
 ;
"RTN","ECXAADM",98,0)
PRINT ;print the admission data by division and ward order
"RTN","ECXAADM",99,0)
 N JJ,SS,LN,PG,QFLG,WRDNM,WRDTOT,GRPNM,GRPTOT,DATA,DATA1,DIC,DA,DR,DIR,DIVNM,MISTYPE ;149,170
"RTN","ECXAADM",100,0)
 N DIRUT,DTOUT,DUOUT,IEN,FAC,ADMDT
"RTN","ECXAADM",101,0)
 U IO
"RTN","ECXAADM",102,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXAADM",103,0)
 S (QFLG,PG)=0,$P(LN,"-",80)="",DIV=""
"RTN","ECXAADM",104,0)
 F  S DIV=$O(GTOT(DIV)) Q:DIV=""  D  Q:QFLG
"RTN","ECXAADM",105,0)
 .S DIVNM=$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")"_$S($P(ECXDIV(DIV),U,6)'="":(" <"_$P(ECXDIV(DIV),U,6)_">"),1:"") ;149
"RTN","ECXAADM",106,0)
 .I '$G(ECXPORT) D HEADER Q:QFLG  ;149
"RTN","ECXAADM",107,0)
 .I GTOT(DIV)=0 D  Q
"RTN","ECXAADM",108,0)
 ..I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)=DIVNM_U_ECXARRAY("START")_" to "_ECXARRAY("END")_U_"No admission data extracted for this medical center division",RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1 Q  ;149
"RTN","ECXAADM",109,0)
 ..W !!,?5,"No admission data extracted for this medical center division.",!
"RTN","ECXAADM",110,0)
 .S ORDER="" F  S ORDER=$O(^TMP($J,"ECXORDER",DIV,ORDER)) Q:ORDER=""  D  Q:QFLG
"RTN","ECXAADM",111,0)
 ..S DATA=^TMP($J,"ECXORDER",DIV,ORDER) K DATA1 I $D(^(ORDER,1)) S DATA1=^(1)
"RTN","ECXAADM",112,0)
 ..S WRDNM=$P(DATA,U,2),WRDTOT=+$P(DATA,U,3)
"RTN","ECXAADM",113,0)
 ..;don't display inactive wards unless there is admission data
"RTN","ECXAADM",114,0)
 ..;don't attempt to group inactive/unordered wards
"RTN","ECXAADM",115,0)
 ..I ORDER>999990 K DATA1 I WRDTOT=0 Q
"RTN","ECXAADM",116,0)
 ..I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG  ;149
"RTN","ECXAADM",117,0)
 ..I '$G(ECXPORT) W !,?5,WRDNM,?45,$$RJ^XLFSTR(WRDTOT,5," ") ;149
"RTN","ECXAADM",118,0)
 ..I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)=ECXEXT_U_DIVNM_U_ECXARRAY("START")_" to "_ECXARRAY("END")_U_WRDNM_U_WRDTOT,RCNT=RCNT+1 ;149
"RTN","ECXAADM",119,0)
 ..;if data1 exists, then this is the end of a ward group so print group total
"RTN","ECXAADM",120,0)
 ..I $G(DATA1) D  Q:QFLG
"RTN","ECXAADM",121,0)
 ...S GRPNM=$P(DATA1,U,2),GRPTOT=$P(DATA1,U,3)
"RTN","ECXAADM",122,0)
 ...I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)="^^Ward group "_GRPNM_" subtotal:"_U_GRPTOT,RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1 Q  ;149
"RTN","ECXAADM",123,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAADM",124,0)
 ...W !,?40,"----------"
"RTN","ECXAADM",125,0)
 ...W !,"Ward group "_GRPNM_" subtotal:",?45,$$RJ^XLFSTR(GRPTOT,5," ")
"RTN","ECXAADM",126,0)
 ...D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXAADM",127,0)
 ...W !!
"RTN","ECXAADM",128,0)
 .I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG  ;149
"RTN","ECXAADM",129,0)
 .I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)="^^Division "_$P(ECXDIV(DIV),U,2)_U_"Grand Total:"_U_GTOT(DIV),RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1 Q  ;149
"RTN","ECXAADM",130,0)
 .W !!,"Division "_$P(ECXDIV(DIV),U,2)_" Grand Total:",?45,$$RJ^XLFSTR(GTOT(DIV),5," ")
"RTN","ECXAADM",131,0)
 ;print patients with missing wards or missing treating specialties
"RTN","ECXAADM",132,0)
 Q:QFLG  ;149 Stop if user entered "^"
"RTN","ECXAADM",133,0)
 F MISTYPE="MISWRD","MISTRT" I $D(^TMP($J,MISTYPE)) D  ;170
"RTN","ECXAADM",134,0)
 .S DIV=MISTYPE,ECXDIV(DIV)="^^^^^*** MISSING "_$S(MISTYPE="MISWRD":"WARDS",1:"TREATING SPECIALTIES")_" ***^" D:'$G(ECXPORT) HEADER ;149,170
"RTN","ECXAADM",135,0)
 .S WRDTOT=$G(^TMP($J,MISTYPE)) ;170
"RTN","ECXAADM",136,0)
 .I '$G(ECXPORT) W !,?5,"MISSING "_$S(MISTYPE="MISWRD":"WARD",1:"TREATING SPECIALTY"),?45,$$RJ^XLFSTR(WRDTOT,5," "),!! ;149,170
"RTN","ECXAADM",137,0)
 .I $G(ECXPORT) D  ;149,170
"RTN","ECXAADM",138,0)
 ..S ^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^^MISSING "_$S(MISTYPE="MISWRD":"WARD",1:"TREATING SPECIALTY")_U_WRDTOT ;170
"RTN","ECXAADM",139,0)
 ..S RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^",RCNT=RCNT+1,^TMP($J,"ECXPORT",RCNT)="^NAME^PATIENT DFN^FACILITY^ADMISSION DATE",RCNT=RCNT+1 ;170
"RTN","ECXAADM",140,0)
 .I '$G(ECXPORT) D HEAD ;149
"RTN","ECXAADM",141,0)
 .S IEN="" F  S IEN=$O(^TMP($J,MISTYPE,IEN)) Q:'IEN  D  I QFLG Q  ;170
"RTN","ECXAADM",142,0)
 ..S DATA=$G(^ECX(727.802,IEN,0)),ADMDT=$P(DATA,U,9) Q:DATA=""
"RTN","ECXAADM",143,0)
 ..S FAC=$P(DATA,U,4) S:FAC'="" FAC=$$GET1^DIQ(40.8,FAC,.01,"E")
"RTN","ECXAADM",144,0)
 ..I $G(ECXPORT) S ^TMP($J,"ECXPORT",RCNT)="^"_$P(DATA,U,7)_U_$P(DATA,U,5)_U_FAC_U_$E(ADMDT,5,6)_"/"_$E(ADMDT,7,8)_"/"_$E(ADMDT,1,4)_" "_$E($P(DATA,U,34),1,2)_":"_$E($P(DATA,U,34),3,4),RCNT=RCNT+1 Q  ;149
"RTN","ECXAADM",145,0)
 ..W !?2,$P(DATA,U,7),?8,$P(DATA,U,5),?25,$E(FAC,1,14),?45
"RTN","ECXAADM",146,0)
 ..W $E(ADMDT,5,6)_"/"_$E(ADMDT,7,8)_"/"_$E(ADMDT,1,4)," "
"RTN","ECXAADM",147,0)
 ..W $E($P(DATA,U,34),1,2)_":"_$E($P(DATA,U,34),3,4)
"RTN","ECXAADM",148,0)
 ..D:($Y+3>IOSL) HEADER,HEAD Q:QFLG
"RTN","ECXAADM",149,0)
 I $G(ECXPORT) Q  ;149
"RTN","ECXAADM",150,0)
 I $E(IOST)'="C" D
"RTN","ECXAADM",151,0)
 .W @IOF S PG=PG+1
"RTN","ECXAADM",152,0)
 .W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAADM",153,0)
 .W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAADM",154,0)
 .W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAADM",155,0)
 .W !,"Report Run Date/Time:    "_ECXRUN,?68,"Page: ",PG
"RTN","ECXAADM",156,0)
 .W !!,LN,!!
"RTN","ECXAADM",157,0)
 .S DIC="^ECX(727.1,",DA=ECXARRAY("DEF"),DR="1" D EN^DIQ
"RTN","ECXAADM",158,0)
 .W @IOF
"RTN","ECXAADM",159,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXAADM",160,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAADM",161,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXAADM",162,0)
 Q
"RTN","ECXAADM",163,0)
 ;
"RTN","ECXAADM",164,0)
HEAD ;header for missing wards
"RTN","ECXAADM",165,0)
 W !,?2,"NAME",?8,"PATIENT DFN",?25,"FACILITY",?45,"ADMISSION DATE"
"RTN","ECXAADM",166,0)
 W !,?2,"====",?8,"===========",?25,"========",?45,"=============="
"RTN","ECXAADM",167,0)
 Q
"RTN","ECXAADM",168,0)
 ;
"RTN","ECXAADM",169,0)
HEADER ;header and page control
"RTN","ECXAADM",170,0)
 N JJ,SS,DIR,DIRUT,DTOUT,DUOUT,DSSID
"RTN","ECXAADM",171,0)
 I $E(IOST)="C",'QFLG D  ;149 Stop if user entered "^"
"RTN","ECXAADM",172,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXAADM",173,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXAADM",174,0)
 Q:QFLG
"RTN","ECXAADM",175,0)
 S DSSID=$P(ECXDIV(DIV),U,6)
"RTN","ECXAADM",176,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXAADM",177,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXAADM",178,0)
 W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXAADM",179,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXAADM",180,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXAADM",181,0)
 I DSSID="" W !,"Medical Center Division: "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")",?68,"Page: "_PG
"RTN","ECXAADM",182,0)
 I DSSID]"" W !,"Medical Center Division: "_$P(ECXDIV(DIV),U,2)_" ("_$P(ECXDIV(DIV),U,3)_")"_" <"_DSSID_">",?68,"Page: "_PG
"RTN","ECXAADM",183,0)
 W !!,?5,"Ward <DSS Dept.>",?40,"# of Admissions"
"RTN","ECXAADM",184,0)
 W !,LN,!
"RTN","ECXAADM",185,0)
 Q
"RTN","ECXADM")
0^7^B72580110^B64025705
"RTN","ECXADM",1,0)
ECXADM ;ALB/JAP,BIR/DMA,CML,PTD-Admissions Extract ;6/29/18  09:20
"RTN","ECXADM",2,0)
 ;;3.0;DSS EXTRACTS;**1,4,11,8,13,24,33,39,46,71,84,92,107,105,120,127,132,136,144,149,154,161,166,170**;Dec 22, 1997;Build 12
"RTN","ECXADM",3,0)
BEG ;entry point from option
"RTN","ECXADM",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXADM",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXADM",6,0)
 Q
"RTN","ECXADM",7,0)
 ;
"RTN","ECXADM",8,0)
START ; start package specific extract
"RTN","ECXADM",9,0)
 K ^TMP($J,"EDIS") ;136 Clear temporary space for index
"RTN","ECXADM",10,0)
 D BLDXREF^ECXUTL1(ECSD,ECED) ;136 build temp xref for emergency dept
"RTN","ECXADM",11,0)
 S QFLG=0
"RTN","ECXADM",12,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXADM",13,0)
 F  S ECD=$O(^DGPM("ATT1",ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D
"RTN","ECXADM",14,0)
 .F  S ECDA=$O(^DGPM("ATT1",ECD,ECDA)) Q:ECDA=""  D
"RTN","ECXADM",15,0)
 ..I $D(^DGPM(ECDA,0)) D
"RTN","ECXADM",16,0)
 ...S EC=^DGPM(ECDA,0),ECXDFN=$P(EC,U,3) D GET
"RTN","ECXADM",17,0)
 ;170 Added section to look at transfers and record an admission record if transfer to ASIH other facility happens
"RTN","ECXADM",18,0)
 S ECD=ECSD1
"RTN","ECXADM",19,0)
 F  S ECD=$O(^DGPM("ATT2",ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D
"RTN","ECXADM",20,0)
 .F  S ECDA=$O(^DGPM("ATT2",ECD,ECDA)) Q:ECDA=""  D
"RTN","ECXADM",21,0)
 ..I $D(^DGPM(ECDA,0))&($$ISASIH^ECXUTL6(ECDA,2)) D
"RTN","ECXADM",22,0)
 ...I '+$$NEEDADR^ECXUTL6("TRAN",ECDA,"ADM") Q  ;Already have ADM record
"RTN","ECXADM",23,0)
 ...S EC=^DGPM(ECDA,0),ECXDFN=$P(EC,U,3) D GET
"RTN","ECXADM",24,0)
 K ^TMP($J,"EDIS") ;136 delete temporary xref
"RTN","ECXADM",25,0)
 Q
"RTN","ECXADM",26,0)
 ;
"RTN","ECXADM",27,0)
GET ;gather extract data
"RTN","ECXADM",28,0)
 N ADM,W,X,ECXNPRFI,ECXATTPC,ECXPRVPC,ECXEST,ECXAOT,ECXEDIS,ECXICD10P ;136
"RTN","ECXADM",29,0)
 N ECXESC,ECXECL,ECXCLST ;144 Encounter Service Connected, Encounter Camp Lejeune, Camp Lejeune Status
"RTN","ECXADM",30,0)
 N ECXSTANO  ;166 Patient Division
"RTN","ECXADM",31,0)
 N ECXASIH ;170 Is patient ASIH other facility
"RTN","ECXADM",32,0)
 ;patient demographics
"RTN","ECXADM",33,0)
 S ECXERR=0 D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXADM",34,0)
 Q:ECXERR
"RTN","ECXADM",35,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXADM",36,0)
 S ECXFAC=$P($G(^DIC(42,+$P(EC,U,6),0)),U,11)
"RTN","ECXADM",37,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC)  ;Get production division
"RTN","ECXADM",38,0)
 S ECXSTANO=ECXPDIV  ;Set Patient Division to Prod Div Code. tjl - 166
"RTN","ECXADM",39,0)
 ;admission data
"RTN","ECXADM",40,0)
 S ELGA=$P($G(^DIC(8,+$P(EC,U,20),0)),U,9)
"RTN","ECXADM",41,0)
 I ELGA S ELGA=$$ELIG^ECXUTL3(ELGA,ECXSVC)
"RTN","ECXADM",42,0)
 S (ECDRG,ECDIA,ECXSADM,ECXADMS,ECXAOT,ECXICD10P)="",ECPTF=+$P(EC,U,16) I ECPTF,$D(^DGPT(ECPTF,"M")) D PTF ;154
"RTN","ECXADM",43,0)
 ;get encounter classification
"RTN","ECXADM",44,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECXHNC,ECXSHAD,ECXESC,ECXECL)="",ECXVISIT=$P(EC,U,27) ;144
"RTN","ECXADM",45,0)
 I ECXVISIT'="" D
"RTN","ECXADM",46,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXADM",47,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXADM",48,0)
 .S ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXADM",49,0)
 .S ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXADM",50,0)
 .S ECXESC=$G(ECXVIST("ENCSC")),ECXECL=$G(ECXVIST("ENCCL")) ;144 Encounter SC and Encounter Camp Lejeune
"RTN","ECXADM",51,0)
 ;use movement record date & time
"RTN","ECXADM",52,0)
 S ADM=$$INP^ECXUTL2(ECXDFN,ECD)
"RTN","ECXADM",53,0)
 S ECXA=$P(ADM,U),ECXMN=$P(ADM,U,2),ECXSPC=$P(ADM,U,3)
"RTN","ECXADM",54,0)
 S (ECXADMDT,ECXDATE)=$P(ADM,U,4)
"RTN","ECXADM",55,0)
 ;if movement# doesn't match cross-ref ien, then quit
"RTN","ECXADM",56,0)
 Q:ECXMN'=ECDA
"RTN","ECXADM",57,0)
 S ECTM=$$ECXTIME^ECXUTL(ECXDATE)
"RTN","ECXADM",58,0)
 S ECXDATE=$$ECXDATE^ECXUTL(ECXDATE,ECXYM)
"RTN","ECXADM",59,0)
 S W=$P(ADM,U,9)
"RTN","ECXADM",60,0)
 S ECXWRD=$P(W,";",1),ECXFAC=$P(W,";",2),ECXDSSD=$P(W,";",3)
"RTN","ECXADM",61,0)
 S ECXPRV=$P(ADM,U,7),ECXPRNPI="",ECXATT=$P(ADM,U,8),ECXATNPI=""
"RTN","ECXADM",62,0)
 S ECXDOM=$P(ADM,U,10),ECXATTPC=$P(ADM,U,12),ECXPRVPC=$P(ADM,U,11)
"RTN","ECXADM",63,0)
 S ECXASIH=+$P(ADM,U,14) ;ASIH other facility status
"RTN","ECXADM",64,0)
 N ECXUSRTN
"RTN","ECXADM",65,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$E(ECXATT,2,$L(ECXATT)),ECD)
"RTN","ECXADM",66,0)
 S:+ECXUSRTN'>0 ECXUSRTN=""
"RTN","ECXADM",67,0)
 S ECATTNPI=$P(ECXUSRTN,U)
"RTN","ECXADM",68,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$E(ECXPRV,2,$L(ECXPRV)),ECD)
"RTN","ECXADM",69,0)
 S:+ECXUSRTN'>0 ECXUSRTN=""
"RTN","ECXADM",70,0)
 S ECPWNPI=$P(ECXUSRTN,U)
"RTN","ECXADM",71,0)
 ;
"RTN","ECXADM",72,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXADM",73,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXSPC)
"RTN","ECXADM",74,0)
 ;
"RTN","ECXADM",75,0)
 ;- Patient Type
"RTN","ECXADM",76,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(ECXDFN)
"RTN","ECXADM",77,0)
 ;
"RTN","ECXADM",78,0)
 S ECXEDIS=$$EDIS^ECXUTL1(ECXDFN,ECD,"A") ;136 Get emergency room disposition
"RTN","ECXADM",79,0)
 ;- If null encounter number, don't file record
"RTN","ECXADM",80,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,,ECXSPC,ECXOBS,ECHEAD,,)
"RTN","ECXADM",81,0)
 I $G(ECXASIH) S ECXA="A" ;170 If patient is ASIH set in/out indicator to A
"RTN","ECXADM",82,0)
 D:ECXENC'="" FILE
"RTN","ECXADM",83,0)
 Q
"RTN","ECXADM",84,0)
 ;
"RTN","ECXADM",85,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographic data
"RTN","ECXADM",86,0)
 N OK,X
"RTN","ECXADM",87,0)
 K ECXPAT
"RTN","ECXADM",88,0)
 S ECXDATE=$P(ECXDATE,".")
"RTN","ECXADM",89,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;2;3;4;5",.ECXPAT)
"RTN","ECXADM",90,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXADM",91,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXADM",92,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXADM",93,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXADM",94,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXADM",95,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXADM",96,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXADM",97,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXADM",98,0)
 S ECXVNS=ECXPAT("VIETNAM")
"RTN","ECXADM",99,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXADM",100,0)
 S ECXMNS=ECXPAT("MEANS")
"RTN","ECXADM",101,0)
 S ECXRACE=ECXPAT("RACE")
"RTN","ECXADM",102,0)
 S ECXRELG=ECXPAT("RELIGION")
"RTN","ECXADM",103,0)
 S ECXEMP=ECXPAT("EMPLOY")
"RTN","ECXADM",104,0)
 S ECXMAR=ECXPAT("MARITAL")
"RTN","ECXADM",105,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXADM",106,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXADM",107,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXADM",108,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXADM",109,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXADM",110,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXADM",111,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXADM",112,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXADM",113,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXADM",114,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXADM",115,0)
 S ECXSVC=ECXPAT("SC%")
"RTN","ECXADM",116,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXADM",117,0)
 S ECXHI=+$$INSUR^IBBAPI(ECXDFN,ECXDATE)
"RTN","ECXADM",118,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXADM",119,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXADM",120,0)
 S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXADM",121,0)
 S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXADM",122,0)
 ;
"RTN","ECXADM",123,0)
 ;-OEF/OIF Data
"RTN","ECXADM",124,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXADM",125,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXADM",126,0)
 ;
"RTN","ECXADM",127,0)
 ;- Agent Orange location
"RTN","ECXADM",128,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXADM",129,0)
 ;
"RTN","ECXADM",130,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXADM",131,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXADM",132,0)
 ; - PROJ 112/SHAD Indicator
"RTN","ECXADM",133,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXADM",134,0)
 ; ******* - PATCH 127, ADD PATCAT CODE - ********
"RTN","ECXADM",135,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXADM",136,0)
 ; - Race and Ethnicity
"RTN","ECXADM",137,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXADM",138,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXADM",139,0)
 ;
"RTN","ECXADM",140,0)
 ;get primary care data
"RTN","ECXADM",141,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXADM",142,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXADM",143,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXADM",144,0)
 ;get combat veteran data
"RTN","ECXADM",145,0)
 I $$CVEDT^ECXUTL5(ECXDFN,ECD)
"RTN","ECXADM",146,0)
 ;get national patient record flag if exist
"RTN","ECXADM",147,0)
 D NPRF^ECXUTL5
"RTN","ECXADM",148,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXADM",149,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXADM",150,0)
 Q
"RTN","ECXADM",151,0)
 ;
"RTN","ECXADM",152,0)
PTF ; get admitting DRG, diagnosis, source of admission from PTF
"RTN","ECXADM",153,0)
 ;use number for DRG and .01 for diagnosis
"RTN","ECXADM",154,0)
 N EC,EC1,ECX
"RTN","ECXADM",155,0)
 S EC=1 I $D(^DGPT(ECPTF,"M",2,0)) S EC=2
"RTN","ECXADM",156,0)
 S EC1=+$P(^DGPT(ECPTF,"M",EC,0),U,5)
"RTN","ECXADM",157,0)
 S ECDRG=$P($G(^DGPT(ECPTF,"M",EC,"P")),U)
"RTN","ECXADM",158,0)
 S ECXICD10P=$S('EC1:"",1:$$CODEC^ICDEX(80,EC1)) ;154,161
"RTN","ECXADM",159,0)
 S ECX=+$P($G(^DGPT(ECPTF,101)),U),ECXSADM=$P($G(^DIC(45.1,ECX,0)),U,11)
"RTN","ECXADM",160,0)
 S ECXADMS=$$GET1^DIQ(45.1,ECX,.01)
"RTN","ECXADM",161,0)
 ;if source of admission = admit outpatient treatment ('1P')
"RTN","ECXADM",162,0)
 S ECXAOT=$S(($$GET1^DIQ(45.1,ECX,.01)="1P"):"Y",1:"")
"RTN","ECXADM",163,0)
 Q
"RTN","ECXADM",164,0)
 ;
"RTN","ECXADM",165,0)
FILE ;file the extract record
"RTN","ECXADM",166,0)
 ;node0
"RTN","ECXADM",167,0)
 ;facility^dfn^ssn^name^in/out^day^Placehold primary care team^sex^dob^
"RTN","ECXADM",168,0)
 ;religion^employment status^health ins^state^county^zip^
"RTN","ECXADM",169,0)
 ;eligibility^vet^vietnam^agent orange^radiation^pow^
"RTN","ECXADM",170,0)
 ;period of service^means test^marital status^
"RTN","ECXADM",171,0)
 ;ward^treating specialty^attending physician^mov #^DRG^Placeholder^
"RTN","ECXADM",172,0)
 ;time^Placehold primary care provider^Placehold Race^primary ward provider
"RTN","ECXADM",173,0)
 ;node1
"RTN","ECXADM",174,0)
 ;mpi^placeholder^attending npi^pc provider npi^ward provider npi^
"RTN","ECXADM",175,0)
 ;admission elig^mst status^shad status^sharing payor^
"RTN","ECXADM",176,0)
 ;sharing insurance^enrollment location^
"RTN","ECXADM",177,0)
 ;Placehold pc prov person class^Placehold assoc pc provider^Placehold assoc pc prov person class^
"RTN","ECXADM",178,0)
 ;assoc pc prov npi^dom^enrollment cat^enrollment stat^encounter
"RTN","ECXADM",179,0)
 ;shad^purple heart ind.^obs pat ind^encounter num^agent orange
"RTN","ECXADM",180,0)
 ;loc^production div^pow loc^source of admission^head & neck canc. ind
"RTN","ECXADM",181,0)
 ;^Placehold ethnicity^Placehold race1^enrollment priority_sub group^user enrollee^patient
"RTN","ECXADM",182,0)
 ;type^combat vet elig^combat vet elig end date^enc cv eligible^
"RTN","ECXADM",183,0)
 ;national patient record flag ECXNPRFI^att phy person class ECXATTPC
"RTN","ECXADM",184,0)
 ;^primary ward provider person class ECXPRVPC^environ contamin ECXEST
"RTN","ECXADM",185,0)
 ;^emergency response indicator(FEMA) ECXERI^agent orange indic ECXAO
"RTN","ECXADM",186,0)
 ;^environ contam ECXECE^encoun head/neck ECXHNC^encoun MST ECXMIL^rad
"RTN","ECXADM",187,0)
 ;encoun ECXIR^
"RTN","ECXADM",188,0)
 ;node 2 - patch 136 seperated node1 from node 2 for clarity
"RTN","ECXADM",189,0)
 ;OEF/OIF ECXOEF^ OEF/OIF return date ECXOEFDT
"RTN","ECXADM",190,0)
 ;^Placehold associate pc provider npi ECASNPI^attending physician npi ECATNPI^
"RTN","ECXADM",191,0)
 ;Placehold primary care provider npi ECPTNPI^primary ward provider npi ECPWNPI^
"RTN","ECXADM",192,0)
 ;admit outpatient treatment ECXAOT^country ECXCNTRY^pat cat ECXPATCAT^
"RTN","ECXADM",193,0)
 ;admit source ECXADMS ^emergency dept disposition ECXEDIS^Primary ICD-10 code ECXICD10P^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL^Encounter SC ECXESC
"RTN","ECXADM",194,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL) ^ Patient Division (ECXSTANO)
"RTN","ECXADM",195,0)
 ;
"RTN","ECXADM",196,0)
 ;Convert specialty to PTF Code
"RTN","ECXADM",197,0)
 ;
"RTN","ECXADM",198,0)
 N ECXDATA
"RTN","ECXADM",199,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXSPC,.ECXDATA)
"RTN","ECXADM",200,0)
 S ECXSPC=$G(ECXDATA(7))
"RTN","ECXADM",201,0)
 ;
"RTN","ECXADM",202,0)
 N DA,DIK
"RTN","ECXADM",203,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXADM",204,0)
 I ECXLOGIC>2018 S (ECXRACE,ECXETH,ECXRC1,ECPTTM,ECPTPR,ECCLAS,ECASPR,ECCLAS2,ECASNPI,ECPTNPI)="" ;170 Fields will now be null
"RTN","ECXADM",205,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE_U
"RTN","ECXADM",206,0)
 S ECODE=ECODE_ECPTTM_U_ECXSEX_U_ECXDOB_U_ECXRELG_U
"RTN","ECXADM",207,0)
 S ECODE=ECODE_ECXEMP_U_ECXHI_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U
"RTN","ECXADM",208,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECXVNS_U_ECXAST_U_ECXRST_U_ECXPST_U
"RTN","ECXADM",209,0)
 S ECODE=ECODE_ECXPOS_U_ECXMNS_U_ECXMAR_U
"RTN","ECXADM",210,0)
 S ECODE=ECODE_ECXWRD_U_ECXSPC_U_ECXATT_U_ECDA_U_ECDRG_U_ECDIA_U
"RTN","ECXADM",211,0)
 S ECODE=ECODE_ECTM_U_ECPTPR_U_ECXRACE_U_ECXPRV_U
"RTN","ECXADM",212,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_""_U_""_U_""_U_ELGA_U
"RTN","ECXADM",213,0)
 S ECODE1=ECODE1_ECXMST_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_U_U_ECXENRL_U_ECCLAS_U
"RTN","ECXADM",214,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXCAT_U
"RTN","ECXADM",215,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC>2010:ECXSHAD,1:"")_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXADM",216,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXPLOC_U_ECXSADM_U_ECXHNCI_U_ECXETH_U
"RTN","ECXADM",217,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXADM",218,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXADM",219,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXATTPC_U_ECXPRVPC_U_ECXEST
"RTN","ECXADM",220,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXADM",221,0)
 I ECXLOGIC>2007 S ECODE2=ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECATTNPI_U_ECPTNPI_U_ECPWNPI
"RTN","ECXADM",222,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXAOT_U_ECXCNTRY
"RTN","ECXADM",223,0)
 ; ***** ADDING PATCAT TO 9TH PIECE OF ECODE  *******
"RTN","ECXADM",224,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT
"RTN","ECXADM",225,0)
 I ECXLOGIC>2011 S ECODE2=ECODE2_U_ECXADMS
"RTN","ECXADM",226,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXEDIS_U_ECXICD10P ;136
"RTN","ECXADM",227,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXCLST_U_ECXECL_U_ECXESC ;144 Add Camp Lejeune status, encounter Camp Lejeune and encounter service connected
"RTN","ECXADM",228,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXADM",229,0)
 I ECXLOGIC>2017 S ECODE2=ECODE2_U_ECXSTANO  ;166 - tjl  Added Patient Division
"RTN","ECXADM",230,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2)
"RTN","ECXADM",231,0)
 S ECRN=ECRN+1
"RTN","ECXADM",232,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXADM",233,0)
 Q
"RTN","ECXADM",234,0)
 ;
"RTN","ECXADM",235,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXADM",236,0)
 S ECHEAD="ADM"
"RTN","ECXADM",237,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXADM",238,0)
 Q
"RTN","ECXADM",239,0)
 ;
"RTN","ECXADM",240,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXADM",241,0)
 ; should be queued with a 1D frequency
"RTN","ECXADM",242,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXADM",243,0)
 ;
"RTN","ECXADM",244,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXADM",245,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXADM",246,0)
 ;
"RTN","ECXBCM")
0^36^B101525951^B100742929
"RTN","ECXBCM",1,0)
ECXBCM ;ALB/JAP-Bar Code Medical Administration Extract ;6/29/18  16:00
"RTN","ECXBCM",2,0)
 ;;3.0;DSS EXTRACTS;**107,127,132,136,143,144,148,149,154,160,161,166,170**;Dec 22, 1997 ;Build 12
"RTN","ECXBCM",3,0)
 ;
"RTN","ECXBCM",4,0)
BEG ;entry point from option
"RTN","ECXBCM",5,0)
 ;ECFILE=^ECX(727.833,
"RTN","ECXBCM",6,0)
 D SETUP I ECFILE="" Q
"RTN","ECXBCM",7,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXBCM",8,0)
 Q
"RTN","ECXBCM",9,0)
 ;
"RTN","ECXBCM",10,0)
START ; start package specific extract
"RTN","ECXBCM",11,0)
 ; 
"RTN","ECXBCM",12,0)
 N ECXVAP,RERUN,ECXLDT ;143,154
"RTN","ECXBCM",13,0)
 S RERUN=0,ECXLDT=+$P($G(^ECX(728,1,ECNODE)),U,ECPIECE) I ECXLDT'<ECSD S RERUN=1 ;154 If re-running date range, set RERUN to 1, 160 added ^ to global reference
"RTN","ECXBCM",14,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXBCM",15,0)
 S PIEN=0
"RTN","ECXBCM",16,0)
 I $G(ECSD)="" S ECSD=DT
"RTN","ECXBCM",17,0)
 ; loop thru and get each new patient, reset the start date to ECSD - begin date from ECXTRAC
"RTN","ECXBCM",18,0)
 F  S PIEN=$O(^PSB(53.79,"AADT",PIEN)) Q:('PIEN)  S IDAT=ECSD D
"RTN","ECXBCM",19,0)
 .F  S IDAT=$O(^PSB(53.79,"AADT",PIEN,IDAT)) Q:'IDAT!(IDAT>ECED)  S RIEN="" D
"RTN","ECXBCM",20,0)
 ..F  S RIEN=$O(^PSB(53.79,"AADT",PIEN,IDAT,RIEN)) Q:'RIEN  D
"RTN","ECXBCM",21,0)
 ...S ECXNOD=^PSB(53.79,RIEN,0) Q:'ECXNOD  S ECXDFN=$P($G(ECXNOD),U) D GET(ECSD,ECED)
"RTN","ECXBCM",22,0)
 I 'RERUN D CLEAN(0,$$FMADD^XLFDT(ECSD,-180)) ;154 If not a rerun, clean out items given global
"RTN","ECXBCM",23,0)
 Q
"RTN","ECXBCM",24,0)
 ;
"RTN","ECXBCM",25,0)
GET(ECSD,ECED) ;get extract data
"RTN","ECXBCM",26,0)
 N ECXESC,ECXECL,ECXCLST,ECXASIH ;144,170
"RTN","ECXBCM",27,0)
 S (ACTDT,ECXADT,ECXAMED,ECXASTA,ECXATM,ECXORN,ECXORT,ECXOSC,ECPRO,PLACEHLD,ECXFAC,DRG,ECXESC,ECXECL,ECXCLST)="" ;144
"RTN","ECXBCM",28,0)
 ; get needed YYYYDD variable
"RTN","ECXBCM",29,0)
 I $G(ECXYM)="" S ECXYM=$$ECXYM^ECXUTL(DT)
"RTN","ECXBCM",30,0)
 ;Get Facility - 166 tjl - Now done after retrieval of Ward information
"RTN","ECXBCM",31,0)
 ;I $G(ECXFAC)="" 
"RTN","ECXBCM",32,0)
 ;.S ECXFAC=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECXFAC,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXBCM",33,0)
 ;.D EN^DIQ1 S ECXFAC=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXBCM",34,0)
 ;
"RTN","ECXBCM",35,0)
 S ECXORN=$$GET1^DIQ(53.79,RIEN,.11)
"RTN","ECXBCM",36,0)
 ;get inpatient data
"RTN","ECXBCM",37,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW)=""
"RTN","ECXBCM",38,0)
 S X=$$INP^ECXUTL2(ECXDFN,IDAT)
"RTN","ECXBCM",39,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),ECXASIH=$P(X,U,14) ;170
"RTN","ECXBCM",40,0)
 S W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";")
"RTN","ECXBCM",41,0)
 ;166 tjl - Set the Facility to the Station Number (based on the Ward)
"RTN","ECXBCM",42,0)
 S ECXFAC=$$GETDIV^ECXDEPT($P(W,";",2)) ;166  tjl
"RTN","ECXBCM",43,0)
 ;166 tjl - if the Facility value is null, get the value from the DSS EXTRACTS file
"RTN","ECXBCM",44,0)
 I $G(ECXFAC)="" D 
"RTN","ECXBCM",45,0)
 .S ECXFAC=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECXFAC,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXBCM",46,0)
 .D EN^DIQ1 S ECXFAC=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXBCM",47,0)
 ; Ordering Stop Code - based on Unit dose or IV
"RTN","ECXBCM",48,0)
 I ECXORN["U" Q:$$CHKUD(ECXDFN,ECSD,ECED)  S:ECXA="O" ECXOSC=$$DOUDO^ECXUTL5(ECXDFN,+ECXORN)
"RTN","ECXBCM",49,0)
 I ECXORN["V" Q:$$CHKIV(ECXDFN,ECSD,ECED)  S:ECXA="O" ECXOSC=$$DOIVPO^ECXUTL5(ECXDFN,+ECXORN)
"RTN","ECXBCM",50,0)
 S ECXASTA=$$GET1^DIQ(53.79,RIEN,.09,"I")
"RTN","ECXBCM",51,0)
 I "^G^S^C^I^"'[("^"_ECXASTA_"^") Q  ;160 process 'G'iven, 'S'topped,'C'ompleted,'I'nfusing
"RTN","ECXBCM",52,0)
 ;get patient demographics
"RTN","ECXBCM",53,0)
 S ECXERR=0 D PAT(ECXDFN,IDAT,.ECXERR) Q:ECXERR
"RTN","ECXBCM",54,0)
 S ECPRO=$$ORDPROV^ECXUTL(ECXDFN,ECXORN,"")
"RTN","ECXBCM",55,0)
 S ACTDT=$$GET1^DIQ(53.79,RIEN,.06,"I")
"RTN","ECXBCM",56,0)
 I ACTDT'=IDAT Q
"RTN","ECXBCM",57,0)
 S ECXADT=$$ECXDATE^ECXUTL(ACTDT,ECXYM)
"RTN","ECXBCM",58,0)
 S ECXATM=$$ECXTIME^ECXUTL(ACTDT)
"RTN","ECXBCM",59,0)
 S ECXORT=$P($G(^TMP("PSJ",$J,1)),U,3) K ^TMP("PSJ",$J)
"RTN","ECXBCM",60,0)
 S ECPROPC=$P($$GET^XUA4A72(ECPRO,$P(ACTDT,".")),U,7)
"RTN","ECXBCM",61,0)
 N ECXUSRTN
"RTN","ECXBCM",62,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECPRO,$P(ACTDT,"."))
"RTN","ECXBCM",63,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECPRONPI=$P(ECXUSRTN,U)
"RTN","ECXBCM",64,0)
 S ECXAMED=$$GET1^DIQ(53.79,RIEN,.08,"I")
"RTN","ECXBCM",65,0)
 ;Component code data
"RTN","ECXBCM",66,0)
 D CCODE(RIEN)
"RTN","ECXBCM",67,0)
 Q
"RTN","ECXBCM",68,0)
 ;
"RTN","ECXBCM",69,0)
CMPT ; during component/sequence processing, retrieve rest of data record then file it.
"RTN","ECXBCM",70,0)
 S (ECXSCADT,ECXOS,ECXIVID,ECXIR,SCADT,ECXSCADT,ECXSCATM,DRUG,ECVNDC,ECINV,ECVACL,ECXVAP)="" ;143
"RTN","ECXBCM",71,0)
 I $G(DRG) D
"RTN","ECXBCM",72,0)
 .S DRUG=$$PHAAPI^ECXUTL5(DRG)
"RTN","ECXBCM",73,0)
 .S ECVNDC=$P(DRUG,U,3)
"RTN","ECXBCM",74,0)
 .S ECINV=$P(DRUG,U,4)
"RTN","ECXBCM",75,0)
 .I ECXLOGIC<2014 D
"RTN","ECXBCM",76,0)
 ..S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXBCM",77,0)
 .;New way to calculate cost dea spl hndlg **144
"RTN","ECXBCM",78,0)
 .I ECXLOGIC>2013 D
"RTN","ECXBCM",79,0)
 ..S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"")
"RTN","ECXBCM",80,0)
 .S ECVACL=$P(DRUG,U,2)
"RTN","ECXBCM",81,0)
 .S ECXVAP=$P(DRUG,U,6) ;143 set ECXVAP to VA PRODUCT IEN
"RTN","ECXBCM",82,0)
 S SCADT=$$GET1^DIQ(53.79,RIEN,.13,"I")
"RTN","ECXBCM",83,0)
 S ECXSCADT=$$ECXDATE^ECXUTL(SCADT,ECXYM)
"RTN","ECXBCM",84,0)
 S ECXSCATM=$$ECXTIME^ECXUTL(SCADT)
"RTN","ECXBCM",85,0)
 S ECXOS=$$GET1^DIQ(53.79,RIEN,.12,"I")
"RTN","ECXBCM",86,0)
 S ECXIVID=$$GET1^DIQ(53.79,RIEN,.26)
"RTN","ECXBCM",87,0)
 S ECXIR=$$GET1^DIQ(53.79,RIEN,.35)
"RTN","ECXBCM",88,0)
 S ECXDIV=$$RADDIV^ECXDEPT($$GET1^DIQ(53.79,RIEN,.03,"I"))
"RTN","ECXBCM",89,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXBCM",90,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ACTDT,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXBCM",91,0)
 I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXBCM",92,0)
 D:ECXENC'="" FILE^ECXBCM1 ;154 Moved filing task for space considerations
"RTN","ECXBCM",93,0)
 Q
"RTN","ECXBCM",94,0)
 ;
"RTN","ECXBCM",95,0)
PAT(ECXDFN,ECXDATE,ECXERR)  ;get patient demographics, primary care, and inpatient data
"RTN","ECXBCM",96,0)
 N X
"RTN","ECXBCM",97,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXBCM",98,0)
 ;get patient data
"RTN","ECXBCM",99,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXBCM",100,0)
 I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXBCM",101,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXBCM",102,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXBCM",103,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXBCM",104,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXBCM",105,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXBCM",106,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXBCM",107,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXBCM",108,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXBCM",109,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXBCM",110,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXBCM",111,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXBCM",112,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXBCM",113,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXBCM",114,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXBCM",115,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXBCM",116,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXBCM",117,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXBCM",118,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXBCM",119,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXBCM",120,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXBCM",121,0)
 S ECXMTST=ECXPAT("MEANS")
"RTN","ECXBCM",122,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXBCM",123,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune status
"RTN","ECXBCM",124,0)
 S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXBCM",125,0)
 S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXBCM",126,0)
 S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN) S ECXCNHU=$S(ECXCNHU'="":$E(ECXCNHU,1),1:"") ;get CNHU status
"RTN","ECXBCM",127,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXBCM",128,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXBCM",129,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)                  ; Head and Neck Cancer Indicator
"RTN","ECXBCM",130,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)                 ; PROJ 112/SHAD Indicator
"RTN","ECXBCM",131,0)
 I ECXSHADI="U" S ECXSHADI=""                      ; If Shad comes back as "U" force to null
"RTN","ECXBCM",132,0)
 S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1")  ; Race and Ethnicity
"RTN","ECXBCM",133,0)
 S ECXERI=ECXPAT("ERI")                            ; emergency response indicator (FEMA)
"RTN","ECXBCM",134,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)               ; PATCAT code / patch 127  
"RTN","ECXBCM",135,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXBCM",136,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXBCM",137,0)
 ;
"RTN","ECXBCM",138,0)
 ;get primary care data
"RTN","ECXBCM",139,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXBCM",140,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXBCM",141,0)
 ;get national patient record flag, if it exists
"RTN","ECXBCM",142,0)
 D NPRF^ECXUTL5     ; sets ECXNPRFI
"RTN","ECXBCM",143,0)
 Q
"RTN","ECXBCM",144,0)
 ;
"RTN","ECXBCM",145,0)
CCODE(RIEN) ; get component information
"RTN","ECXBCM",146,0)
 ;  input - IEN of the BCMA MEDICATION LOG File
"RTN","ECXBCM",147,0)
 ; 
"RTN","ECXBCM",148,0)
 ; output - CCIEN: pointer to a variable pointer field to file #50, #52.6, or #52.7
"RTN","ECXBCM",149,0)
 ;          CCDORD: .02 field of file #50, #52.6, or #52.7
"RTN","ECXBCM",150,0)
 ;          CCDGVN: .03 FIELD of file #50, #52.6, or #52.7
"RTN","ECXBCM",151,0)
 ;          CCUNIT: .04 field of file #50, #52.6, or #52.7
"RTN","ECXBCM",152,0)
 ;          CCTYPE: derived field, "D", "A", or "S"
"RTN","ECXBCM",153,0)
 ;
"RTN","ECXBCM",154,0)
 S (CCIEN,CCDORD,CCDGVN,CCUNIT,CCTYPE)=""
"RTN","ECXBCM",155,0)
 F I=.5,.6,.7 D
"RTN","ECXBCM",156,0)
 .I '$O(^PSB(53.79,RIEN,I,0)) Q
"RTN","ECXBCM",157,0)
 .S J=0 F  S J=$O(^PSB(53.79,RIEN,I,J)) Q:'J  D
"RTN","ECXBCM",158,0)
 ..S DATA=^PSB(53.79,RIEN,I,J,0)
"RTN","ECXBCM",159,0)
 ..S (UNITCOST,ECXDRGC,ECXIVSC,ECXIVAC)=0 ;144 NEW COST FIELDS
"RTN","ECXBCM",160,0)
 ..S CCIEN=$P(DATA,U),CCDORD=$P(DATA,U,2),CCDGVN=$S(+($P(DATA,U,3))>0:+($P(DATA,U,3)),1:1),CCUNIT=$S(+($P(DATA,U,4))>0:+($P(DATA,U,4)),1:1)
"RTN","ECXBCM",161,0)
 ..I I=.5 D  ;144 New drug Cost Fields added
"RTN","ECXBCM",162,0)
 ...S DRG=CCIEN,UNITCOST=$$GET1^DIQ(50,DRG,16,"I")
"RTN","ECXBCM",163,0)
 ...S ECXDRGC=(CCDGVN*CCUNIT)*UNITCOST
"RTN","ECXBCM",164,0)
 ..I I=.6 D  ;144 New IV Additive Cost Fields added
"RTN","ECXBCM",165,0)
 ...S DRG=$$GET1^DIQ(52.6,CCIEN,1,"I"),UNITCOST=$$GET1^DIQ(52.6,CCIEN,7,"I")
"RTN","ECXBCM",166,0)
 ...S ECXIVAC=CCDGVN*UNITCOST
"RTN","ECXBCM",167,0)
 ..I I=.7 D  ;144 New IV Solution Cost Fields added
"RTN","ECXBCM",168,0)
 ...S DRG=$$GET1^DIQ(52.7,CCIEN,1,"I"),UNITCOST=$$GET1^DIQ(52.7,CCIEN,7,"I")
"RTN","ECXBCM",169,0)
 ...S ECXIVSC=CCDGVN*UNITCOST
"RTN","ECXBCM",170,0)
 ..S CCTYPE=$S(I=.5:"D",I=.6:"A",I=.7:"S",1:"")
"RTN","ECXBCM",171,0)
 ..S CCIEN=$S(I=.5:CCIEN_";PSDRUG(",I=.6:CCIEN_";PS(52.6,",I=.7:CCIEN_";PS(52.7,",1:"")
"RTN","ECXBCM",172,0)
 ..S CCDGVN=$P(DATA,U,3) ;148 Reset component dose given to original value
"RTN","ECXBCM",173,0)
 ..S CCUNIT=$P(DATA,U,4) ;148 Reset component unit to original value
"RTN","ECXBCM",174,0)
 ..I ECXORN["U" I $$MULTI I '$$FIRST Q  ;154,160 If it's a unit dose type order and it's a multi-dose container, only count if it's the 1st administration
"RTN","ECXBCM",175,0)
 ..D CMPT
"RTN","ECXBCM",176,0)
 Q
"RTN","ECXBCM",177,0)
 ;
"RTN","ECXBCM",178,0)
CHKIV(ECXDFN,ECSD,ECED) ; Check file 728.113 for matching IV records 
"RTN","ECXBCM",179,0)
 ;  input - ECXDFN   DFN of the patient from the BCMA file
"RTN","ECXBCM",180,0)
 ;          ECSD:    Start Date for the extract 
"RTN","ECXBCM",181,0)
 ;          ECED:    End Date for the extract 
"RTN","ECXBCM",182,0)
 ; return - True     if the Order is in file 728.113  
"RTN","ECXBCM",183,0)
 ;          False    if the Order is Not in file 728.113 
"RTN","ECXBCM",184,0)
 ;
"RTN","ECXBCM",185,0)
 N IVIEN,ORD,IVORN,ECD,EXTRACT,STDATE,ENDDATE
"RTN","ECXBCM",186,0)
 S (ORD,ECD,STDATE,ENDDATE)=0
"RTN","ECXBCM",187,0)
 S (IVORN,EXTRACT)=""
"RTN","ECXBCM",188,0)
 I '$O(^ECX(728.113,0)) D     ; Check to see if data exists in the file, if not, recreate
"RTN","ECXBCM",189,0)
 .S EXTRACT="IV"
"RTN","ECXBCM",190,0)
 .S STDATE=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",191,0)
 .S ENDDATE=ECED
"RTN","ECXBCM",192,0)
 .D START^PSJDSS
"RTN","ECXBCM",193,0)
 S IVORN=$P(ECXORN,"V")
"RTN","ECXBCM",194,0)
 S ECD=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",195,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)) Q:'ECD!(ECD>ECED)!(ORD=IVORN)  D
"RTN","ECXBCM",196,0)
 .S ORD=0
"RTN","ECXBCM",197,0)
 .F  S ORD=$O(^ECX(728.113,"A",ECD,ECXDFN,ORD)) Q:'ORD!(ORD=IVORN)
"RTN","ECXBCM",198,0)
 I ORD=IVORN Q 1
"RTN","ECXBCM",199,0)
 Q 0 ;Checks show order not in IV 728.113
"RTN","ECXBCM",200,0)
 ;
"RTN","ECXBCM",201,0)
CHKUD(ECXDFN,ECSD,ECED) ; Check file 728.904 for matching Unit dose records
"RTN","ECXBCM",202,0)
 ;  input - ECXDFN   DFN of the patient from the BCMA file
"RTN","ECXBCM",203,0)
 ;          ECSD:    Start Date for the extract 
"RTN","ECXBCM",204,0)
 ;          ECED:    End Date for the extract 
"RTN","ECXBCM",205,0)
 ; return - True     if the Order is in file 728.904
"RTN","ECXBCM",206,0)
 ;          False    if the Order is Not in file 728.904
"RTN","ECXBCM",207,0)
 ;
"RTN","ECXBCM",208,0)
 N UDIEN,UDORN,ORD,EXTRACT,STDATE,ENDDATE
"RTN","ECXBCM",209,0)
 S (ORD,STDATE,ENDDATE)=0
"RTN","ECXBCM",210,0)
 S (UDORN,EXTRACT)=""
"RTN","ECXBCM",211,0)
 I '$O(^ECX(728.904,0)) D    ; Check to see if data exists in the file, if not, recreate
"RTN","ECXBCM",212,0)
 .S EXTRACT="UD"
"RTN","ECXBCM",213,0)
 .S STDATE=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",214,0)
 .S ENDDATE=ECED
"RTN","ECXBCM",215,0)
 .D START^PSJDSS
"RTN","ECXBCM",216,0)
 S UDORN=$P(ECXORN,"U")
"RTN","ECXBCM",217,0)
 F  S ORD=$O(^ECX(728.904,"AO",ECXDFN,ORD)) Q:'ORD!(ORD=UDORN)
"RTN","ECXBCM",218,0)
 I ORD=UDORN Q 1
"RTN","ECXBCM",219,0)
 ;I $$GET1^DIQ(55.06,UDORN_","_ECXDFN,7,"I")="R" Q 1
"RTN","ECXBCM",220,0)
 Q 0 ;Checks show order not in UD 728.904
"RTN","ECXBCM",221,0)
 ;
"RTN","ECXBCM",222,0)
FIRST() ;154 Section added to determine if this is the first administration of the medication since pharmacist verification
"RTN","ECXBCM",223,0)
 N ALIEN,ADATE,FIRST,VDATE,DONE,IENS,ON
"RTN","ECXBCM",224,0)
 S FIRST=0,VDATE="",DONE=0
"RTN","ECXBCM",225,0)
 S ON=+ECXORN ;get numeric portion of order multiple IEN
"RTN","ECXBCM",226,0)
 S ALIEN=0 F  S ALIEN=$O(^PS(55,ECXDFN,$S(ECXORN["U":5,1:"IV"),ON,$S(ECXORN["U":9,1:"A"),ALIEN)) Q:'+ALIEN!(DONE)  S IENS=ALIEN_","_ON_","_ECXDFN_"," D
"RTN","ECXBCM",227,0)
 .S ADATE=$$GET1^DIQ($S(ECXORN["U":55.09,1:55.04),IENS,$S(ECXORN["U":".01",1:".05"),"I")
"RTN","ECXBCM",228,0)
 .I ADATE>IDAT S DONE=1 Q  ;activity date is after administration date
"RTN","ECXBCM",229,0)
 .I ECXORN["U" I "^VP^VPR^"[("^"_$$GET1^DIQ(55.09,IENS,"2:1")_"^") S VDATE=ADATE
"RTN","ECXBCM",230,0)
 .I ECXORN["V" I $$GET1^DIQ(55.04,IENS,".04")="ORDER VERIFIED BY PHARMACIST" S VDATE=ADATE
"RTN","ECXBCM",231,0)
 I VDATE'="" D
"RTN","ECXBCM",232,0)
 .I '$D(^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN))!($G(^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN))=RIEN) S FIRST=1
"RTN","ECXBCM",233,0)
 .I '$D(^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN)) S ^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN)=RIEN
"RTN","ECXBCM",234,0)
 Q FIRST
"RTN","ECXBCM",235,0)
 ;
"RTN","ECXBCM",236,0)
CLEAN(START,END) ;154 Section added to delete old log entries
"RTN","ECXBCM",237,0)
 N DATE,PAT,ON
"RTN","ECXBCM",238,0)
 S DATE=START F  S DATE=$O(^XTMP("ECXBCM",DATE)) Q:'+DATE!(DATE>END)  S PAT=0 F  S PAT=$O(^XTMP("ECXBCM",DATE,PAT)) Q:'+PAT  S ON=0 F  S ON=$O(^XTMP("ECXBCM",DATE,PAT,ON)) Q:'+ON  K ^XTMP("ECXBCM",DATE,PAT,ON)
"RTN","ECXBCM",239,0)
 S ^XTMP("ECXBCM",0)=$$FMADD^XLFDT($$DT^XLFDT,365)_"^"_$$DT^XLFDT_"^"_"Log of BCMA orders that have already been counted"
"RTN","ECXBCM",240,0)
 Q
"RTN","ECXBCM",241,0)
 ;
"RTN","ECXBCM",242,0)
MULTI() ;154 Section added to determine if this is a multi-dose container
"RTN","ECXBCM",243,0)
 N COMP,TERM,OFF,UNIT,MULTI
"RTN","ECXBCM",244,0)
 S MULTI=1 ;Assume it is a multi-dose container
"RTN","ECXBCM",245,0)
 S UNIT=$$UP^XLFSTR($TR(CCUNIT," 0123456789","")) ;Convert to upper case and remove any numbers or spaces
"RTN","ECXBCM",246,0)
 F COMP="EQUAL","CONTAIN" F OFF=1:1 S TERM=$P($T(@COMP+OFF),";",2) Q:TERM="DONE"!('MULTI)  D
"RTN","ECXBCM",247,0)
 .I COMP="EQUAL" I UNIT=TERM S MULTI=0 Q  ;Not a multi-dose container
"RTN","ECXBCM",248,0)
 .I COMP="CONTAIN" I UNIT[TERM S MULTI=0 ;Not a multi-dose container
"RTN","ECXBCM",249,0)
 Q MULTI
"RTN","ECXBCM",250,0)
 ;
"RTN","ECXBCM",251,0)
EQUAL ;154,161, list of terms for equality check
"RTN","ECXBCM",252,0)
 ;AMP
"RTN","ECXBCM",253,0)
 ;AMPULE
"RTN","ECXBCM",254,0)
 ;BOTTLE
"RTN","ECXBCM",255,0)
 ;CAP
"RTN","ECXBCM",256,0)
 ;LOZENGE
"RTN","ECXBCM",257,0)
 ;PACKAGE
"RTN","ECXBCM",258,0)
 ;PACKET
"RTN","ECXBCM",259,0)
 ;PKG
"RTN","ECXBCM",260,0)
 ;SUPPOSITORY
"RTN","ECXBCM",261,0)
 ;SYRINGE
"RTN","ECXBCM",262,0)
 ;TAB
"RTN","ECXBCM",263,0)
 ;UNITDOSE
"RTN","ECXBCM",264,0)
 ;VIAL
"RTN","ECXBCM",265,0)
 ;EACH
"RTN","ECXBCM",266,0)
 ;VI
"RTN","ECXBCM",267,0)
 ;VL
"RTN","ECXBCM",268,0)
 ;SYR
"RTN","ECXBCM",269,0)
 ;SYG
"RTN","ECXBCM",270,0)
 ;AMPOULE
"RTN","ECXBCM",271,0)
 ;CARTRIDGE
"RTN","ECXBCM",272,0)
 ;CHEWTAB
"RTN","ECXBCM",273,0)
 ;LOZ
"RTN","ECXBCM",274,0)
 ;TUBEX
"RTN","ECXBCM",275,0)
 ;BAG
"RTN","ECXBCM",276,0)
 ;SL FILM
"RTN","ECXBCM",277,0)
 ;SL-FILM
"RTN","ECXBCM",278,0)
 ;SL_FILM
"RTN","ECXBCM",279,0)
 ;PATCH
"RTN","ECXBCM",280,0)
 ;PKT
"RTN","ECXBCM",281,0)
 ;SUP
"RTN","ECXBCM",282,0)
 ;CAN
"RTN","ECXBCM",283,0)
 ;DONE
"RTN","ECXBCM",284,0)
CONTAIN ;154, list of terms for contains check
"RTN","ECXBCM",285,0)
 ;AMP,
"RTN","ECXBCM",286,0)
 ;CAP,
"RTN","ECXBCM",287,0)
 ;CAP/
"RTN","ECXBCM",288,0)
 ;SUPP
"RTN","ECXBCM",289,0)
 ;TAB,
"RTN","ECXBCM",290,0)
 ;SOLUTAB
"RTN","ECXBCM",291,0)
 ;SOFTGEL
"RTN","ECXBCM",292,0)
 ;DONE
"RTN","ECXBCM",293,0)
 ;
"RTN","ECXBCM",294,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXBCM",295,0)
 S ECHEAD="BCM"
"RTN","ECXBCM",296,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXBCM",297,0)
 Q
"RTN","ECXBCM1")
0^8^B11048241^B10283039
"RTN","ECXBCM1",1,0)
ECXBCM1 ;ALB/JAP-Bar Code Medical Administration Extract Cont. ;4/24/18  13:43
"RTN","ECXBCM1",2,0)
 ;;3.0;DSS EXTRACTS;**154,170**;Dec 22, 1997 ;Build 12
"RTN","ECXBCM1",3,0)
 ;
"RTN","ECXBCM1",4,0)
FILE ;file the extract record
"RTN","ECXBCM1",5,0)
 ;node0
"RTN","ECXBCM1",6,0)
 ;Sequence Number,Year Month, Extract Number (EC23)^facility (ECXFAC)^
"RTN","ECXBCM1",7,0)
 ;dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^
"RTN","ECXBCM1",8,0)
 ;in/out (ECXA)^Day (ECXADT)^
"RTN","ECXBCM1",9,0)
 ;date of birth (ECDOB)^Gender (ECXSEX)^State (ECXSTATE)^County (ECXCNTY)^
"RTN","ECXBCM1",10,0)
 ;zip code (ECXZIP)^country (ECXCNTRY)^ward (ECXW)^treating speciality (ECXTSC)^
"RTN","ECXBCM1",11,0)
 ;provider (ECPRO)^provider person class (ECPROPC)^provider npi (ECPRONPI)^
"RTN","ECXBCM1",12,0)
 ;Placehold primary care provider(ECPTPR)^Placehold pc provider person class (ECCLAS)^
"RTN","ECXBCM1",13,0)
 ;Placehold primary care provider NPI (ECPTNPI)^Placehold primary care team (ECPTTM)^ordering stop code (ECXOSC)^
"RTN","ECXBCM1",14,0)
 ;NODE(1)
"RTN","ECXBCM1",15,0)
 ;place order number (RIEN)^order reference number (ECXORN)^route (ECXORT)^
"RTN","ECXBCM1",16,0)
 ;^action time (ECXATM)^component code (CCIEN)^
"RTN","ECXBCM1",17,0)
 ;component dose ordered (CCDORD)^component dose given(CCDGVN)^
"RTN","ECXBCM1",18,0)
 ;component units (CCUNIT)^component type (CCTYPE)^Action Status (ECXASTA)^
"RTN","ECXBCM1",19,0)
 ;Administration Medication (ECXAMED)^Scheduled Administration Date (ECXSCADT)^
"RTN","ECXBCM1",20,0)
 ;NODE(2)
"RTN","ECXBCM1",21,0)
 ;Scheduled Administration Time (ECXSCATM)^
"RTN","ECXBCM1",22,0)
 ;Order Schedule (ECXOS)^IV Unique ID (ECXIVID)^
"RTN","ECXBCM1",23,0)
 ;Infusion Rate (ECXIR)^Production Division Code (ECXDIV)^Drug IEN (ECXVAP)^NDC (ECVNDC)^ ;;143, changed Drug IEN var from DRG to ECXVAP
"RTN","ECXBCM1",24,0)
 ;Investigational (DEA Special Handling) (ECINV)^VA Drug Classification (ECVACL)^
"RTN","ECXBCM1",25,0)
 ;Master Patient Index (ECXMPI)^DOM, PRRTP and SAARTP Indicator (ECXDOM)^
"RTN","ECXBCM1",26,0)
 ;Observation Patient Indicator (ECXOBS)^Encounter Number (ECXENC)^Means Test (ECXMTST)^
"RTN","ECXBCM1",27,0)
 ;Eligibility (ECXELIG)^Enrollment Location (ECXENRL)^Enrollment Category (ECXCAT)^
"RTN","ECXBCM1",28,0)
 ;Enrollment Status (ECXSTAT)^Enrollment Priority (ECXPRIOR)_(ECXSBGRP)^
"RTN","ECXBCM1",29,0)
 ;User Enrollee (ECXUESTA)^
"RTN","ECXBCM1",30,0)
 ;Placehold Ethnicity(ECXETH)^Placehold Race 1(ECXRC1)^Veteran(ECXVET)^Period of Service(ECXPOS)^POW Status(ECXPST)^
"RTN","ECXBCM1",31,0)
 ;POW Location(ECXPLOC)^Radiation Status(ECXRST)^Agent Orange Status(ECXAST)^Agent Orange Location(ECXAOL)
"RTN","ECXBCM1",32,0)
 ;^Purple Heart Indicator(ECXPHI)^MST Status(ECXMST)^CNH/SH Status(ECXCNHU)^
"RTN","ECXBCM1",33,0)
 ;Head & Neck Cancer Indicator(ECXHNCI)^SHAD Status(ECXSHADI)
"RTN","ECXBCM1",34,0)
 ;NODE(3)
"RTN","ECXBCM1",35,0)
 ;Patient Type(ECXPTYPE)^
"RTN","ECXBCM1",36,0)
 ;CV Status Eligibility(ECXCVE)^CV Eligibility End Date(ECXCVEDT)^Encounter CV(ECXCVENC)^
"RTN","ECXBCM1",37,0)
 ;National Patient Record Flag(ECXNPRFI)^ERI(ECXERI)^SW Asia Conditions(ECXEST)^
"RTN","ECXBCM1",38,0)
 ;OEF/OIF(ECXOEF)^OEF/OIF Return Date(ECXOEFDT)^PATCAT(ECXPATCAT)
"RTN","ECXBCM1",39,0)
 ;Encounter SC (ECXESC)^IV Additives Cost ECXIVAC^IV Solutions Cost ECXIVSC^Drug cost ECXDRGC^Camp Lejeune Status (ECXCLST)^Encounter Camp Lejeune (ECXECL)
"RTN","ECXBCM1",40,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)
"RTN","ECXBCM1",41,0)
 ;
"RTN","ECXBCM1",42,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXBCM1",43,0)
 N ECXDATA,ECXTSC
"RTN","ECXBCM1",44,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXBCM1",45,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXBCM1",46,0)
 N DA,DIK
"RTN","ECXBCM1",47,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXBCM1",48,0)
 I ECXLOGIC>2018 S (ECXETH,ECXRC1,ECPTPR,ECCLAS,ECPTNPI,ECPTTM)="" ;170 Fields will now be null
"RTN","ECXBCM1",49,0)
 S ECODE(0)=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXADT
"RTN","ECXBCM1",50,0)
 S ECODE(0)=ECODE(0)_U_ECXDOB_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXCNTRY
"RTN","ECXBCM1",51,0)
 S ECODE(0)=ECODE(0)_U_ECXW_U_ECXTSC_U_2_ECPRO_U_ECPROPC_U_ECPRONPI_U_ECPTPR_U_ECCLAS
"RTN","ECXBCM1",52,0)
 S ECODE(0)=ECODE(0)_U_ECPTNPI_U_ECPTTM_U_ECXOSC_U
"RTN","ECXBCM1",53,0)
 S ECODE(1)=RIEN_U_ECXORN_U_ECXORT_U_ECXATM_U_CCIEN_U_CCDORD_U_CCDGVN
"RTN","ECXBCM1",54,0)
 S ECODE(1)=ECODE(1)_U_CCUNIT_U_CCTYPE_U_ECXASTA_U_ECXAMED_U_ECXSCADT_U
"RTN","ECXBCM1",55,0)
 S ECODE(2)=ECXSCATM_U_ECXOS_U_ECXIVID_U_ECXIR_U_ECXDIV_U_ECXVAP_U_ECVNDC_U_ECINV_U_ECVACL_U_ECXMPI_U_ECXDOM ;143 Changed DRUG IEN field from DRG to ECXVAP
"RTN","ECXBCM1",56,0)
 S ECODE(2)=ECODE(2)_U_$E(ECXOBS,1)_U_ECXENC_U_ECXMTST_U_ECXELIG_U_ECXENRL_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_ECXSBGRP
"RTN","ECXBCM1",57,0)
 S ECODE(2)=ECODE(2)_U_ECXUESTA_U_ECXETH_U_ECXRC1_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC
"RTN","ECXBCM1",58,0)
 S ECODE(2)=ECODE(2)_U_ECXRST_U_ECXAST_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXCNHU_U_ECXHNCI_U_ECXSHADI_U
"RTN","ECXBCM1",59,0)
 S ECODE(3)=ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI_U_ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT
"RTN","ECXBCM1",60,0)
 S ECODE(3)=ECODE(3)_U_ECXPATCAT
"RTN","ECXBCM1",61,0)
 I ECXLOGIC>2013 S ECODE(3)=ECODE(3)_U_ECXESC_U_ECXIVAC_U_ECXIVSC_U_ECXDRGC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXBCM1",62,0)
 I ECXLOGIC>2014 S ECODE(3)=ECODE(3)_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXBCM1",63,0)
 ;
"RTN","ECXBCM1",64,0)
 N DA,DIK,X S X=""
"RTN","ECXBCM1",65,0)
 F X=0:1:3 S ^ECX(ECFILE,EC7,X)=ECODE(X)
"RTN","ECXBCM1",66,0)
 S ECRN=ECRN+1
"RTN","ECXBCM1",67,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXBCM1",68,0)
 Q
"RTN","ECXBCM1",69,0)
 ;
"RTN","ECXBSC")
0^26^B33867674^n/a
"RTN","ECXBSC",1,0)
ECXBSC ;ALB/DAN - Validate stop codes in extracts ;6/14/18  10:53
"RTN","ECXBSC",2,0)
 ;;3.0;DSS EXTRACTS;**170**;Dec 22, 1997;Build 12
"RTN","ECXBSC",3,0)
 ;
"RTN","ECXBSC",4,0)
EN N DIR,DIRUT,X,Y,DTOUT,DUOUT,ECXTYPE,DIC,ECXDA,CNT,ECXARR,ARR,ECXPORT,DIQ,DA,DR
"RTN","ECXBSC",5,0)
 W @IOF,"This option will identify extract records with an invalid or inactive",!,"stop code."
"RTN","ECXBSC",6,0)
 S DIR("L",1)="Select one of the following extracts:",DIR("L",2)=""
"RTN","ECXBSC",7,0)
 S DIR("L",3)="        1 Clinic",DIR("L",4)="        2 Event Capture",DIR("L")="        3 Radiology"
"RTN","ECXBSC",8,0)
 S DIR("?")="Select the extract type to review for bad stop codes.",DIR(0)="SO^1:Clinic;2:Event Capture;3:Radiology",DIR("A")="Select Extract Type" D ^DIR
"RTN","ECXBSC",9,0)
 Q:$D(DIRUT)
"RTN","ECXBSC",10,0)
 S ECXTYPE=Y(0)
"RTN","ECXBSC",11,0)
 K DIR
"RTN","ECXBSC",12,0)
 S DIC="^ECX(727,",DIC(0)="AEMQ",DIC("S")="I $P(^(0),U,3)=$P(ECXTYPE,U),'$D(^(""PURG""))"
"RTN","ECXBSC",13,0)
 D ^DIC
"RTN","ECXBSC",14,0)
 Q:Y=-1
"RTN","ECXBSC",15,0)
 S DIC="^ECX(727,",(ECXDA,DA)=+Y,DR=".01;1;2;3;4;5;15;300",DIQ="ECXARR",DIQ(0)="IE"
"RTN","ECXBSC",16,0)
 D EN^DIQ1
"RTN","ECXBSC",17,0)
 W !!,?5,"Extract:      ",ECXARR(727,ECXDA,2,"E")," #",ECXDA
"RTN","ECXBSC",18,0)
 W !!,?5,"Start date:   ",ECXARR(727,ECXDA,3,"E")
"RTN","ECXBSC",19,0)
 W !,?5,"End date:     ",ECXARR(727,ECXDA,4,"E")
"RTN","ECXBSC",20,0)
 W !,?5,"# of Records: ",ECXARR(727,ECXDA,5,"E")
"RTN","ECXBSC",21,0)
 I $L(ECXARR(727,ECXDA,300,"E"))>0 D  Q:Y'=1
"RTN","ECXBSC",22,0)
 .W !!,?5,"The extract which you have chosen to audit"
"RTN","ECXBSC",23,0)
 .W !,?5,"was transmitted to Austin/DSS on ",ECXARR(727,ECXDA,300,"E"),".",!
"RTN","ECXBSC",24,0)
 .S DIR(0)="Y",DIR("A")="Do you want to continue with this audit report",DIR("B")="NO" D ^DIR
"RTN","ECXBSC",25,0)
 ;
"RTN","ECXBSC",26,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I $G(ECXPORT) D  Q
"RTN","ECXBSC",27,0)
 .K ^TMP($J,"ECXPORT")
"RTN","ECXBSC",28,0)
 .S ^TMP($J,"ECXPORT",0)="EXTRACT TYPE^SEQ #^EXTRACT #^FACILITY^SSN^NAME^DAY^FEEDER KEY"_$S(ECXTYPE="Radiology":" (IEN from file 71)",1:"")_"^FEEDER LOCATION^ENCOUNTER #^STOP CODE^CLINIC IEN^CLINIC STOP CODE",CNT=1
"RTN","ECXBSC",29,0)
 .D PROCESS
"RTN","ECXBSC",30,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXBSC",31,0)
 .K ^TMP($J,"ECXPORT")
"RTN","ECXBSC",32,0)
 W !!
"RTN","ECXBSC",33,0)
 S ECXPGM="PROCESS^ECXBSC",ECXDESC="Search extract for invalid stop codes",ECXSAVE("*")=""
"RTN","ECXBSC",34,0)
 W !,"This report requires 132 characters to display correctly.",!
"RTN","ECXBSC",35,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXBSC",36,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXBSC",37,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXBSC",38,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXBSC",39,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXBSC",40,0)
 .D PROCESS
"RTN","ECXBSC",41,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXBSC",42,0)
 D HOME^%ZIS
"RTN","ECXBSC",43,0)
 Q
"RTN","ECXBSC",44,0)
 ;
"RTN","ECXBSC",45,0)
PROCESS ;
"RTN","ECXBSC",46,0)
 K ^TMP($J,"ECXBSC")
"RTN","ECXBSC",47,0)
 N ECXSC,ECXSEQ,ECXERR,WARNING,ERR,WRN,X,Y,DIC,ECXFILE,PG,QFLG,ECXRUN,ECXDT
"RTN","ECXBSC",48,0)
 S (PG,QFLG)=0
"RTN","ECXBSC",49,0)
 S ECXRUN=$$FMTE^XLFDT($E($$NOW^XLFDT,1,12))
"RTN","ECXBSC",50,0)
 S ECXFILE=$S(ECXTYPE="Clinic":727.827,ECXTYPE="Radiology":727.814,1:727.815)
"RTN","ECXBSC",51,0)
 S ECXSEQ=0 F  S ECXSEQ=$O(^ECX(ECXFILE,"AC",ECXDA,ECXSEQ)) Q:'+ECXSEQ  D
"RTN","ECXBSC",52,0)
 .S ECXSC=$S(ECXTYPE="Clinic":$E($P($G(^ECX(ECXFILE,ECXSEQ,4)),U,10),1,3),ECXTYPE="Radiology":$P($G(^ECX(ECXFILE,ECXSEQ,1)),U,12),1:$E($P($G(^ECX(ECXFILE,ECXSEQ,0)),U,41),1,3))
"RTN","ECXBSC",53,0)
 .S ECXDT=$P($G(^ECX(ECXFILE,ECXSEQ,0)),U,9),%DT="X",X=ECXDT D ^%DT S ECXDT=Y
"RTN","ECXBSC",54,0)
 .D STOP^ECXSTOP(ECXSC,"Stop Code",,ECXDT)
"RTN","ECXBSC",55,0)
 .I $D(ECXERR) S ^TMP($J,"ECXBSC",ECXSEQ)=ECXSC
"RTN","ECXBSC",56,0)
 .K ERR,WRN,ECXERR,WARNING
"RTN","ECXBSC",57,0)
 ;Print
"RTN","ECXBSC",58,0)
 I '$G(ECXPORT) D HEADER I '$D(^TMP($J,"ECXBSC")) W !,"No data to report." Q
"RTN","ECXBSC",59,0)
 S ECXSEQ=0 F  S ECXSEQ=$O(^TMP($J,"ECXBSC",ECXSEQ)) Q:'+ECXSEQ!$G(QFLG)  D
"RTN","ECXBSC",60,0)
 .K ARR D GETFLDS(.ARR)
"RTN","ECXBSC",61,0)
 .I $G(ECXPORT) D  Q
"RTN","ECXBSC",62,0)
 ..S ^TMP($J,"ECXPORT",CNT)=ECXTYPE_U_ECXSEQ_U_ECXDA_U_ARR("FACILITY")_U_ARR("SSN")_U_ARR("NAME")_U_ARR("DAY")_U_ARR("FK")_U_ARR("FL")_U_ARR("EN")_U_^TMP($J,"ECXBSC",ECXSEQ)_U_ARR("CIEN")_U_ARR("CSTOP"),CNT=CNT+1
"RTN","ECXBSC",63,0)
 .W !,ECXSEQ,?10,ARR("FACILITY"),?20,ARR("SSN"),?25,ARR("NAME"),?31,ARR("DAY"),?41,ARR("FK"),?72,ARR("FL"),?80,ARR("EN"),?98,^TMP($J,"ECXBSC",ECXSEQ),?104,ARR("CIEN"),?118,ARR("CSTOP")
"RTN","ECXBSC",64,0)
 .I $Y+3>IOSL D HEADER
"RTN","ECXBSC",65,0)
 .Q
"RTN","ECXBSC",66,0)
 Q
"RTN","ECXBSC",67,0)
 ;
"RTN","ECXBSC",68,0)
GETFLDS(ARR) ;Get data
"RTN","ECXBSC",69,0)
 N FLDS,ECXARR
"RTN","ECXBSC",70,0)
 S FLDS="3;5;6;8"_$S(ECXTYPE="Radiology":";10;20;33;41;42",ECXTYPE="Event Capture":";9;11;62;128",1:";66;130;131")
"RTN","ECXBSC",71,0)
 D GETS^DIQ(ECXFILE,ECXSEQ_",",FLDS,"I","ECXARR")
"RTN","ECXBSC",72,0)
 S ARR("FACILITY")=$S(ECXTYPE="Clinic":$$GET1^DIQ(40.8,ECXARR(ECXFILE,ECXSEQ_",",3,"I"),".07:99"),ECXTYPE="Event Capture":$$RADDIV^ECXDEPT(ECXARR(ECXFILE,ECXSEQ_",",3,"I")),1:ECXARR(ECXFILE,ECXSEQ_",",3,"I"))
"RTN","ECXBSC",73,0)
 S ARR("SSN")=$E(ECXARR(ECXFILE,ECXSEQ_",",5,"I"),6,9)
"RTN","ECXBSC",74,0)
 S ARR("NAME")=ECXARR(ECXFILE,ECXSEQ_",",6,"I")
"RTN","ECXBSC",75,0)
 S ARR("DAY")=ECXARR(ECXFILE,ECXSEQ_",",8,"I")
"RTN","ECXBSC",76,0)
 S ARR("FK")=ECXARR(ECXFILE,ECXSEQ_",",$S(ECXTYPE="Radiology":10,ECXTYPE="Event Capture":11,1:131),"I") S:ECXTYPE="Radiology" ARR("FK")=$E($$GET1^DIQ(71,ARR("FK"),.01),1,19)_" ("_ARR("FK")_")"
"RTN","ECXBSC",77,0)
 S ARR("FL")="" S:ECXTYPE'="Clinic" ARR("FL")=ECXARR(ECXFILE,ECXSEQ_",",$S(ECXTYPE="Radiology":20,1:9),"I")
"RTN","ECXBSC",78,0)
 S ARR("EN")=ECXARR(ECXFILE,ECXSEQ_",",$S(ECXTYPE="Radiology":33,ECXTYPE="Event Capture":62,1:66),"I")
"RTN","ECXBSC",79,0)
 S ARR("CIEN")=ECXARR(ECXFILE,ECXSEQ_",",$S(ECXTYPE="Radiology":41,ECXTYPE="Event Capture":128,1:130),"I")
"RTN","ECXBSC",80,0)
 S ARR("CSTOP")="" S:ECXTYPE="Radiology" ARR("CSTOP")=ECXARR(ECXFILE,ECXSEQ_",",42,"I")
"RTN","ECXBSC",81,0)
 Q
"RTN","ECXBSC",82,0)
 ;
"RTN","ECXBSC",83,0)
HEADER ;
"RTN","ECXBSC",84,0)
 N JJ,SS,LN,DIR
"RTN","ECXBSC",85,0)
 S $P(LN,"-",132)=""
"RTN","ECXBSC",86,0)
 I $E(IOST)="C" D
"RTN","ECXBSC",87,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXBSC",88,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXBSC",89,0)
 Q:QFLG
"RTN","ECXBSC",90,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXBSC",91,0)
 W !,ECXTYPE," Extract Stop Code Audit"
"RTN","ECXBSC",92,0)
 W !,"DSS Extract Log #:    "_ECXDA
"RTN","ECXBSC",93,0)
 W !,"Report Run Date/Time: "_ECXRUN,?120,"Page: ",$G(PG)
"RTN","ECXBSC",94,0)
 W !!,"SEQUENCE",?10,"FACILITY",?20,"SSN",?25,"NAME",?31,"DAY",?41,"FEEDER KEY",$S(ECXTYPE="Radiology":" (IEN from file 71)",1:""),?72,"FEEDER",?80,"ENCOUNTER",?98,"STOP",?104,"CLINIC",?118,"CLINIC"
"RTN","ECXBSC",95,0)
 W !,?10,"NUMBER",?72,"LOC",?80,"NUMBER",?98,"CODE",?104,"IEN",?118,"STOP CODE"
"RTN","ECXBSC",96,0)
 W !,LN,!
"RTN","ECXBSC",97,0)
 Q
"RTN","ECXDRUG1")
0^24^B48164231^B44949205
"RTN","ECXDRUG1",1,0)
ECXDRUG1 ;ALB/TMD-Pharmacy Extracts Incomplete Feeder Key Report ;5/31/18  11:51
"RTN","ECXDRUG1",2,0)
 ;;3.0;DSS EXTRACTS;**40,68,144,166,170**;Dec 22, 1997;Build 12
"RTN","ECXDRUG1",3,0)
 ;
"RTN","ECXDRUG1",4,0)
EN ; entry point
"RTN","ECXDRUG1",5,0)
 N X,Y,DATE,ECRUN,ECXTL,ECSTART,ECEND,ECXDESC,ECXSAVE,ECXOPT,ECSD1,ECED,ECXERR,QFLG,ECXPORT,CNT,ECXRPT ;144,170
"RTN","ECXDRUG1",6,0)
 S QFLG=0
"RTN","ECXDRUG1",7,0)
 S ECXRPT="INC FEEDER" ;170
"RTN","ECXDRUG1",8,0)
 ; get today's date
"RTN","ECXDRUG1",9,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXDRUG1",10,0)
 D BEGIN Q:QFLG
"RTN","ECXDRUG1",11,0)
 D SELECT Q:QFLG
"RTN","ECXDRUG1",12,0)
 S ECXDESC=ECXTL_" Pre-Extract Incomplete Feeder Key Report"  ;tjl 166 Changed report title
"RTN","ECXDRUG1",13,0)
 S ECXSAVE("EC*")=""
"RTN","ECXDRUG1",14,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I ECXPORT D  Q  ;144
"RTN","ECXDRUG1",15,0)
 .K ^TMP($J) ;144
"RTN","ECXDRUG1",16,0)
 .S ^TMP($J,"ECXPORT",0)="TYPE^DRUG ENTRY^GENERIC NAME^FEEDER KEY^NUMBER OF RECORDS^TOTAL QTY^UNIT PRICE^TOTAL COST^ERROR" ;144
"RTN","ECXDRUG1",17,0)
 .S CNT=1 ;144
"RTN","ECXDRUG1",18,0)
 .D PROCESS ;144
"RTN","ECXDRUG1",19,0)
 .D EXPDISP^ECXUTL1 ;144
"RTN","ECXDRUG1",20,0)
 .D ^ECXKILL ;144
"RTN","ECXDRUG1",21,0)
 W !!,"This report requires 132 column format."
"RTN","ECXDRUG1",22,0)
 D EN^XUTMDEVQ("PROCESS^ECXDRUG1",ECXDESC,.ECXSAVE)
"RTN","ECXDRUG1",23,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXDRUG1",24,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXDRUG1",25,0)
 D HOME^%ZIS
"RTN","ECXDRUG1",26,0)
 D AUDIT^ECXKILL
"RTN","ECXDRUG1",27,0)
 Q
"RTN","ECXDRUG1",28,0)
 ;
"RTN","ECXDRUG1",29,0)
BEGIN ; display report description
"RTN","ECXDRUG1",30,0)
 W @IOF,!,"This report prints a listing of Drug File (#50) entries that will generate",!,"incomplete Feeder keys in the three Pharmacy Extracts.  This listing",!,"can be used to identify and fix Drug File entries.  "
"RTN","ECXDRUG1",31,0)
 W "The number of extract",!,"records, total, quantity, unit price and total cost for each drug are",!,"included to aid in determining the impact of the incomplete Feeder Keys."
"RTN","ECXDRUG1",32,0)
 W !!,"This report is broken into 3 sections as follows:"
"RTN","ECXDRUG1",33,0)
 W !!,"Section 1:  No PSNDF VA Product Name Entry (first 5 digits are zero)."
"RTN","ECXDRUG1",34,0)
 W !!,"Section 2:  No National Drug Code (NDC) (last 12 digits are zero) or the NDC",!,?12,"is prefixed with an 'S', indicating possible supply item number",!,?12,"or UPC."
"RTN","ECXDRUG1",35,0)
 W !!,"Section 3:  No PSNDF VA Product Name Entry, and"
"RTN","ECXDRUG1",36,0)
 W !,?14,"a. no NDC (all 17 digits are zero), or"
"RTN","ECXDRUG1",37,0)
 W !,?14,"b. The NDC is prefixed with an 'S', indicating possible supply",!,?17,"item number or UPC."
"RTN","ECXDRUG1",38,0)
 W !,"Section 3:  No PSNDF VA Product Name Entry or NDC."
"RTN","ECXDRUG1",39,0)
 W !!,"Run times for this report will vary depending upon the size of the extract and",!,"could take as long as 30 minutes or more to complete.  This report has no effect",!,"on the actual extracts and can be run as needed."
"RTN","ECXDRUG1",40,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXDRUG1",41,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXDRUG1",42,0)
 Q
"RTN","ECXDRUG1",43,0)
 ;
"RTN","ECXDRUG1",44,0)
SELECT ; user inputs for report option and date range
"RTN","ECXDRUG1",45,0)
 N DONE,OUT
"RTN","ECXDRUG1",46,0)
 ; allow user to select report option (PRE,IVP or UDP)
"RTN","ECXDRUG1",47,0)
 W "Choose the report you would like to run."
"RTN","ECXDRUG1",48,0)
 S DIR(0)="S^1:PRE;2:IVP;3:UDP",DIR("A")="Selection",DIR("B")=1 D ^DIR K DIR S ECXOPT=Y I X["^" S QFLG=1 Q
"RTN","ECXDRUG1",49,0)
 S ECXTL=$S(ECXOPT=1:"Prescription",ECXOPT=2:"IV Detail",ECXOPT=3:"Unit Dose Local",1:"")
"RTN","ECXDRUG1",50,0)
 ; allow user to select date range for report records
"RTN","ECXDRUG1",51,0)
 W !!,"Enter the date range for which you would like to scan the ",ECXTL,!,"Extract records."
"RTN","ECXDRUG1",52,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXDRUG1",53,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXDRUG1",54,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXDRUG1",55,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXDRUG1",56,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXDRUG1",57,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXDRUG1",58,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXDRUG1",59,0)
 .I Y<ECSD D  Q
"RTN","ECXDRUG1",60,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXDRUG1",61,0)
 ..W !,"Please try again.",!!
"RTN","ECXDRUG1",62,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXDRUG1",63,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXDRUG1",64,0)
 ..W !,"Please try again.",!!
"RTN","ECXDRUG1",65,0)
 .S ECED=Y
"RTN","ECXDRUG1",66,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXDRUG1",67,0)
 .S DONE=1
"RTN","ECXDRUG1",68,0)
 Q
"RTN","ECXDRUG1",69,0)
 ;
"RTN","ECXDRUG1",70,0)
PROCESS ; entry point for queued report
"RTN","ECXDRUG1",71,0)
 S ZTREQ="@"
"RTN","ECXDRUG1",72,0)
 S ECXERR=0 D EN^ECXDRUG2 Q:ECXERR
"RTN","ECXDRUG1",73,0)
 S QFLG=0 D PRINT
"RTN","ECXDRUG1",74,0)
 Q
"RTN","ECXDRUG1",75,0)
 ;
"RTN","ECXDRUG1",76,0)
PRINT ; process temp file and print report
"RTN","ECXDRUG1",77,0)
 N PG,GTOT,LN,S,COUNT,SUBTOT,DR,ECTYPE,REC,STATS,ECCOUNT,ECQTY,ECPRC,ECCOST,MESS ;144
"RTN","ECXDRUG1",78,0)
 U IO
"RTN","ECXDRUG1",79,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXDRUG1",80,0)
 S (PG,QFLG,GTOT)=0,$P(LN,"-",132)=""
"RTN","ECXDRUG1",81,0)
 F S=1:1:3  Q:QFLG  D:'$G(ECXPORT) HEADER Q:QFLG  D  ;144
"RTN","ECXDRUG1",82,0)
 .S (COUNT,SUBTOT)=0,DR=0 F  S DR=$O(^TMP($J,DR)) Q:'+DR!(QFLG)  S ECTYPE=$P(^(DR),U,4) I ECTYPE=S D  ;144
"RTN","ECXDRUG1",83,0)
 ..S REC=^TMP($J,DR),STATS=^(DR,0)
"RTN","ECXDRUG1",84,0)
 ..S COUNT=COUNT+1
"RTN","ECXDRUG1",85,0)
 ..S ECCOUNT=$FNUMBER($P(STATS,U),",")
"RTN","ECXDRUG1",86,0)
 ..S ECQTY=$FNUMBER($P(STATS,U,2),",")
"RTN","ECXDRUG1",87,0)
 ..S ECPRC="$"_$FNUMBER($P(REC,U,3),",",4)
"RTN","ECXDRUG1",88,0)
 ..S ECCOST="$"_$FNUMBER($P(STATS,U,3),",",2)
"RTN","ECXDRUG1",89,0)
 ..S SUBTOT=SUBTOT+$P(STATS,U,3)
"RTN","ECXDRUG1",90,0)
 ..I $G(ECXPORT) D  Q  ;144
"RTN","ECXDRUG1",91,0)
 ...S ^TMP($J,"ECXPORT",CNT)=ECXTL_U_DR_U_$P(REC,U)_U_$P(REC,U,2)_U_$P(STATS,U)_U_$P(STATS,U,2)_U_$FN($P(REC,U,3),"",4)_U_$FN($P(STATS,U,3),"",2) ;144
"RTN","ECXDRUG1",92,0)
 ...S MESS=$S(S=1:"No PSNDF VA Product Name Entry (Five leading zeros)",S=2:"No National Drug Code (NDC) (Last 12 zeros, 'N/A', or 'S' prefix)",1:"No PSNDF VA Product Name Entry or National Drug Code (NDC)") ;144
"RTN","ECXDRUG1",93,0)
 ...S ^TMP($J,"ECXPORT",CNT)=^TMP($J,"ECXPORT",CNT)_U_MESS ;144
"RTN","ECXDRUG1",94,0)
 ...S CNT=CNT+1 ;144
"RTN","ECXDRUG1",95,0)
 ..W !,$$RJ^XLFSTR(DR,5),?8,$P(REC,U),?60,$P(REC,U,2),?79,$$RJ^XLFSTR(ECCOUNT,5),?87,$$RJ^XLFSTR(ECQTY,10),?99,$$RJ^XLFSTR(ECPRC,16),?117,$$RJ^XLFSTR(ECCOST,13)
"RTN","ECXDRUG1",96,0)
 ..I $Y+2>IOSL D HEADER
"RTN","ECXDRUG1",97,0)
 .Q:QFLG!($G(ECXPORT))  ;144 Stop processing if exporting
"RTN","ECXDRUG1",98,0)
 .I COUNT=0 W !!,?8,"No drugs to report for this section",! ;170
"RTN","ECXDRUG1",99,0)
 .; print sub total
"RTN","ECXDRUG1",100,0)
 .I COUNT D
"RTN","ECXDRUG1",101,0)
 ..I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXDRUG1",102,0)
 ..S GTOT=GTOT+SUBTOT
"RTN","ECXDRUG1",103,0)
 ..S SUBTOT="$"_$FNUMBER(SUBTOT,",",2)
"RTN","ECXDRUG1",104,0)
 ..W !!,?110,"TOTAL",?116,$$RJ^XLFSTR(SUBTOT,14)
"RTN","ECXDRUG1",105,0)
 ; print grand total
"RTN","ECXDRUG1",106,0)
 I $G(ECXPORT) Q  ;144 Nothing more to print if exporting
"RTN","ECXDRUG1",107,0)
 I GTOT,'QFLG D
"RTN","ECXDRUG1",108,0)
 .I $Y+5>IOSL D HEADER Q:QFLG  ;170
"RTN","ECXDRUG1",109,0)
 .S GTOT="$"_$FNUMBER(GTOT,",",2)
"RTN","ECXDRUG1",110,0)
 .W !!,?104,"GRAND TOTAL",?116,$$RJ^XLFSTR(GTOT,14),! ;170
"RTN","ECXDRUG1",111,0)
 I 'QFLG W !,"** Supply items with no NDC will print as 'LCL'+ local IEN in the NDC portion of the feeder key for other reports and extracts. **" ;170 Add note
"RTN","ECXDRUG1",112,0)
 ;
"RTN","ECXDRUG1",113,0)
CLOSE ;
"RTN","ECXDRUG1",114,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXDRUG1",115,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXDRUG1",116,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXDRUG1",117,0)
 Q
"RTN","ECXDRUG1",118,0)
 ;
"RTN","ECXDRUG1",119,0)
HEADER ; header and page control
"RTN","ECXDRUG1",120,0)
 N SS,JJ
"RTN","ECXDRUG1",121,0)
 I $E(IOST)="C" D
"RTN","ECXDRUG1",122,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXDRUG1",123,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXDRUG1",124,0)
 Q:QFLG
"RTN","ECXDRUG1",125,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXDRUG1",126,0)
 W !,ECXTL_" Pre-Extract Incomplete Feeder Key Report",?124,"Page: "_PG  ;tjl 166 Changed report title
"RTN","ECXDRUG1",127,0)
 W !,"Start Date: ",ECSTART
"RTN","ECXDRUG1",128,0)
 W !,"End Date:   ",ECEND,?97,"Report Run Date/Time:  "_ECRUN
"RTN","ECXDRUG1",129,0)
 W !!,"Drug",?8,"Generic Name",?60,"Feeder Key",?79,"# of",?89,"Total",?107,"Unit",?122,"Total"
"RTN","ECXDRUG1",130,0)
 W !,"Entry",?79,"Records",?89,"Quantity",?107,"Price",?122,"Cost"
"RTN","ECXDRUG1",131,0)
 W !,LN
"RTN","ECXDRUG1",132,0)
 I S=1 W !!,"No PSNDF VA Product Name Entry (Five leading zeros)",!
"RTN","ECXDRUG1",133,0)
 I S=2 W !!,"No National Drug Code (NDC) (Last 12 zeros, 'N/A', or 'S' prefix)",!
"RTN","ECXDRUG1",134,0)
 I S=3 W !!,"No PSNDF VA Product Name Entry or National Drug Code (NDC)",!
"RTN","ECXDRUG1",135,0)
 Q
"RTN","ECXDRUG1",136,0)
 ;
"RTN","ECXEC")
0^10^B122027345^B107392045
"RTN","ECXEC",1,0)
ECXEC ;ALB/JAP,BIR/JLP,PTD-DSS Event Capture Extract  ;6/29/18  14:36
"RTN","ECXEC",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,24,27,33,39,46,49,71,89,92,105,120,127,132,136,144,149,154,161,166,170**;Dec 22, 1997;Build 12
"RTN","ECXEC",3,0)
BEG ;entry point from option
"RTN","ECXEC",4,0)
 I '$D(^ECH) W !,"Event Capture is not initialized",!! Q
"RTN","ECXEC",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXEC",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXEC",7,0)
 Q
"RTN","ECXEC",8,0)
START ;begin EC extract
"RTN","ECXEC",9,0)
 N X,Y,ECDCM,ECXNPRFI,ECXVIET,ECX4CHAR ; 144 national 4char code
"RTN","ECXEC",10,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104,LATE,EFY ;166,170
"RTN","ECXEC",11,0)
 S EFY=$$FISCAL^ECXUTL1(ECED) ;170 Determine extract fiscal year based on ending date of extract
"RTN","ECXEC",12,0)
 S ECED=ECED+.3,ECLL=0
"RTN","ECXEC",13,0)
 K ^TMP("EC",$J)
"RTN","ECXEC",14,0)
 F  S ECLL=$O(^ECH("AC1",ECLL)),ECD=ECSD-.1 Q:'ECLL  D
"RTN","ECXEC",15,0)
 .F  S ECD=$O(^ECH("AC1",ECLL,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXEC",16,0)
 ..F  S ECDA=$O(^ECH("AC1",ECLL,ECD,ECDA)) Q:'ECDA  D UPDATE
"RTN","ECXEC",17,0)
 ;166 Done processing by date, now find any "late" state home records
"RTN","ECXEC",18,0)
 S ECDA=0,LATE=1 F  S ECDA=$O(^XTMP("ECEFPAT",ECDA)) Q:'+ECDA  D
"RTN","ECXEC",19,0)
 .I $G(^XTMP("ECEFPAT",ECDA))=1 Q  ;Record already counted in "regular" process
"RTN","ECXEC",20,0)
 .I '$D(^ECH(ECDA,0)) Q  ;Record in table but not in file
"RTN","ECXEC",21,0)
 .I $P($G(^ECH(ECDA,0)),U,3)>ECED Q  ;Record has a procedure date/time after end date of extract so we'll skip it
"RTN","ECXEC",22,0)
 .I $$FISCAL^ECXUTL1($P($G(^ECH(ECDA,0)),U,3))<EFY S ^XTMP("ECEFPAT",ECDA)=3 Q  ;170 If the fiscal year associated with the procedure date is from a previous fiscal year, skip and set for deletion
"RTN","ECXEC",23,0)
 .D UPDATE ;process record
"RTN","ECXEC",24,0)
 D CLEAN ;166 extract completed, clear out ^XTMP records
"RTN","ECXEC",25,0)
 Q
"RTN","ECXEC",26,0)
 ;
"RTN","ECXEC",27,0)
UPDATE ;sets record and updates counters
"RTN","ECXEC",28,0)
 N ECXESC,ECXECL,ECXCLST,ECXRES1,ECXRES2,ECXRES3,ECPNM,ECDSSE,ROOT ;149,154
"RTN","ECXEC",29,0)
 N ECXTEMPW,ECXTEMPD,ECXSTANO,ECXASIH  ;166,170
"RTN","ECXEC",30,0)
 S (ECXESC,ECXECL,ECXCLST,ECXRES1,ECXRES2,ECXRES3)="" ;144
"RTN","ECXEC",31,0)
 S ECCH=^ECH(ECDA,0),ECL=$P(ECCH,U,4),ECXDFN=$P(ECCH,U,2)
"RTN","ECXEC",32,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECL)  ;Get production division from file 4
"RTN","ECXEC",33,0)
 S ECDT=$P(ECCH,U,3),ECM=$P(ECCH,U,6),ECC=$P(ECCH,U,8)
"RTN","ECXEC",34,0)
 S ECTM=$$ECXTIME^ECXUTL(ECDT),ECP=$P(ECCH,U,9) ;154 Moved line to be in front of call to ECXUTL2
"RTN","ECXEC",35,0)
 I $P(ECP,";",2)[725 S ECPNM=$$GET1^DIQ(725,+ECP,1) ;154 Get procedure name
"RTN","ECXEC",36,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECDT,"1;3;5;")
"RTN","ECXEC",37,0)
 Q:ECP']""
"RTN","ECXEC",38,0)
 S ECXSTANO=ECXPDIV               ;166 tjl - Set default Patient Division
"RTN","ECXEC",39,0)
 I ECXA="I",$D(^DGPM(ECXMN,0)) D  ;166 tjl - Set Patient Division for inpatients based on Patient Movement record
"RTN","ECXEC",40,0)
 . S ECXTEMPW=$P($G(^DGPM(ECXMN,0)),U,6)
"RTN","ECXEC",41,0)
 . S ECXTEMPD=$P($G(^DIC(42,+ECXTEMPW,0)),U,11)
"RTN","ECXEC",42,0)
 . S ECXSTANO=$$GETDIV^ECXDEPT(ECXTEMPD)
"RTN","ECXEC",43,0)
 S ECO=$P(ECCH,U,12),ECV=$P(ECCH,U,10),ECDU=$P(ECCH,U,7)
"RTN","ECXEC",44,0)
 S ECXUNIT=$G(^ECD(ECDU,0)),ECCS=+$P(ECXUNIT,U,4),ECDCM=$P(ECXUNIT,U,5)
"RTN","ECXEC",45,0)
 S ECXDSSP="",ECXDSSD=$E(ECDCM,1,10),ECUSTOP=$P(ECXUNIT,U,10),ECUPCE=$P(ECXUNIT,U,14)
"RTN","ECXEC",46,0)
 S ICD9=$P($G(^ECH(ECDA,"P")),U,2) ;154
"RTN","ECXEC",47,0)
 S (ECXICD9,ECXICD10P,ECX4CHAR)="" I ICD9'="" S ECXICD10P=$$CODEC^ICDEX(80,ICD9) ;144,154,161
"RTN","ECXEC",48,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXEC",49,0)
 F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXEC",50,0)
 S (CNT,I)=0
"RTN","ECXEC",51,0)
 F  S CNT=$O(^ECH(ECDA,"DX",CNT)) Q:'CNT  D  Q:I>3
"RTN","ECXEC",52,0)
 .S ICD9=$P($G(^ECH(ECDA,"DX",CNT,0)),U) D:ICD9'=""
"RTN","ECXEC",53,0)
 ..S I=I+1,@("ECXICD10"_I)=$$CODEC^ICDEX(80,ICD9) ;154,161
"RTN","ECXEC",54,0)
 ;derivation of dss identifier depends on whether dss unit is 
"RTN","ECXEC",55,0)
 ;set to send data to pce
"RTN","ECXEC",56,0)
 S ECAC=$P($G(ECCH),U,19) S:ECAC=0 ECAC="" ;144 Change value to null if value from event capture patient file is 0
"RTN","ECXEC",57,0)
 S ECX4CHAR=$$RJ^XLFSTR($$GET1^DIQ(728.44,+ECAC,7,"E"),4,0) ; 144,154 use the assoc clinic to get 4char code, default to 0000 if non-existent
"RTN","ECXEC",58,0)
 ;if this is a record that 'goes to pce', then get the dss identifier
"RTN","ECXEC",59,0)
 ;from the clinic stop codes
"RTN","ECXEC",60,0)
 S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",61,0)
 I ECUPCE="A"!(ECUPCE="O"&(ECXA="O")) D
"RTN","ECXEC",62,0)
 .D:+ECAC
"RTN","ECXEC",63,0)
 ..S ECAC1=$P($G(^SC(+ECAC,0)),U,7),ECAC2=$P($G(^(0)),U,18)
"RTN","ECXEC",64,0)
 ..I 'ECAC2 S ECAC2S="000"
"RTN","ECXEC",65,0)
 ..I 'ECAC1 S (ECAC1S,ECAC2S)="000" Q
"RTN","ECXEC",66,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECAC1,0)),U,2)
"RTN","ECXEC",67,0)
 ..S ECAC2S=$P($G(^DIC(40.7,+ECAC2,0)),U,2)
"RTN","ECXEC",68,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S=$$RJ^XLFSTR(ECAC2S,3,0)
"RTN","ECXEC",69,0)
 .S:'ECAC (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",70,0)
 ;if this record doesn't go to pce, then get the dss identifier
"RTN","ECXEC",71,0)
 ;from the dss unit
"RTN","ECXEC",72,0)
 I ECUPCE=""!(ECUPCE="N")!(ECUPCE="O"&(ECXA="I")) D
"RTN","ECXEC",73,0)
 .S ECAC1S=$$RJ^XLFSTR($P($G(^DIC(40.7,+ECUSTOP,0)),U,2),3,0) ;154
"RTN","ECXEC",74,0)
 .S ECAC2S=$$RJ^XLFSTR($P($G(^DIC(40.7,+$P(ECXUNIT,U,13),0)),U,2),3,0) ;154
"RTN","ECXEC",75,0)
 .S ECX4CHAR=$$RJ^XLFSTR($$GET1^DIQ(728.441,+$P(ECXUNIT,U,15),.01,"E"),4,0) ;154
"RTN","ECXEC",76,0)
 S ECDSS=ECAC1S_ECAC2S
"RTN","ECXEC",77,0)
 I ECXLOGIC>2003 I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXEC",78,0)
 S ECXDIV=""
"RTN","ECXEC",79,0)
 ;
"RTN","ECXEC",80,0)
 ;- Ord Div, Contrct St/End Dates, Contrct Type placeholders for FY2002
"RTN","ECXEC",81,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXEC",82,0)
 ;setup provider(s) as'2'_ien
"RTN","ECXEC",83,0)
 S (ECU1A,ECU2A,ECU3A,ECU1NPI,ECU2NPI,ECU3NPI,ECXPPC1,ECXPPC2,ECXPPC3,ECU1,ECU2,ECU3,ECU4,ECU5,ECU6,ECU7)="" ;144 CVW
"RTN","ECXEC",84,0)
 S (ECU4A,ECU5A,ECU6A,ECU7A,ECU4NPI,ECU5NPI,ECU6NPI,ECU7NPI,ECXPPC4,ECXPPC5,ECXPPC6,ECXPPC7)="" ;144
"RTN","ECXEC",85,0)
 K ECXPRV S ECXPROV=$$GETPRV^ECPRVMUT(ECDA,.ECXPRV) I ECXPROV Q
"RTN","ECXEC",86,0)
 F I=1:1:7 S Y=$O(ECXPRV("")) I Y'="" S @("ECU"_I)=+ECXPRV(Y) K ECXPRV(Y)
"RTN","ECXEC",87,0)
 S:$L(ECU1) ECXPPC1=$$PRVCLASS^ECXUTL(ECU1,ECDT),ECU1A="2"_$P(ECU1,";")
"RTN","ECXEC",88,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU1,ECDT)
"RTN","ECXEC",89,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU1NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",90,0)
 S:$L(ECU2) ECXPPC2=$$PRVCLASS^ECXUTL(ECU2,ECDT),ECU2A="2"_$P(ECU2,";")
"RTN","ECXEC",91,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU2,ECDT)
"RTN","ECXEC",92,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU2NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",93,0)
 S:$L(ECU3) ECXPPC3=$$PRVCLASS^ECXUTL(ECU3,ECDT),ECU3A="2"_$P(ECU3,";")
"RTN","ECXEC",94,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU3,ECDT)
"RTN","ECXEC",95,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU3NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",96,0)
 S:$L(ECU4) ECXPPC4=$$PRVCLASS^ECXUTL(ECU4,ECDT),ECU4A="2"_$P(ECU4,";")
"RTN","ECXEC",97,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU4,ECDT)
"RTN","ECXEC",98,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU4NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",99,0)
 S:$L(ECU5) ECXPPC5=$$PRVCLASS^ECXUTL(ECU5,ECDT),ECU5A="2"_$P(ECU5,";")
"RTN","ECXEC",100,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU5,ECDT)
"RTN","ECXEC",101,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU5NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",102,0)
 ;144 add 2 more providers, prov per class, prov npi cvw
"RTN","ECXEC",103,0)
 S:$L(ECU6) ECXPPC6=$$PRVCLASS^ECXUTL(ECU6,ECDT),ECU6A="2"_$P(ECU6,";")
"RTN","ECXEC",104,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU6,ECDT)
"RTN","ECXEC",105,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU6NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",106,0)
 S:$L(ECU7) ECXPPC7=$$PRVCLASS^ECXUTL(ECU7,ECDT),ECU7A="2"_$P(ECU7,";")
"RTN","ECXEC",107,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECU7,ECDT)
"RTN","ECXEC",108,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECU7NPI=$P(ECXUSRTN,U)
"RTN","ECXEC",109,0)
 ;change for version 2 where ECP is a variable pointer and we want to
"RTN","ECXEC",110,0)
 ;expand it category = category or null if stored as 0
"RTN","ECXEC",111,0)
 D:ECP[";"
"RTN","ECXEC",112,0)
 .S ECP=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U)_"01",ECP<90000:$P(^EC(725,+ECP,0),U,2)_"N",1:$P(^EC(725,+ECP,0),U,2)_"L"),ECC=$S(ECC:ECC,1:"")
"RTN","ECXEC",113,0)
 ;pick up EC to PCE data from "P" in File 721
"RTN","ECXEC",114,0)
 S ECPCE=$G(^ECH(ECDA,"P")),ECPCE1=$P(ECPCE,U),ECPCE2=$P(ECPCE,U,2)
"RTN","ECXEC",115,0)
 S ECPCE7=$S($P(ECPCE,U,7)=1:"Y",1:"N")
"RTN","ECXEC",116,0)
 S ECXRES1=$$GET1^DIQ(720.5,$P($G(^ECH(ECDA,0)),U,23),.01,"E") ;149 Proc Reason 1
"RTN","ECXEC",117,0)
 S ECXRES2=$$GET1^DIQ(720.5,$P($G(^ECH(ECDA,0)),U,24),.01,"E") ;149 Proc Reason 2
"RTN","ECXEC",118,0)
 S ECXRES3=$$GET1^DIQ(720.5,$P($G(^ECH(ECDA,1)),U,1),.01,"E")  ;149 Proc Reason 3
"RTN","ECXEC",119,0)
 S ECXCMOD=""
"RTN","ECXEC",120,0)
 I $D(^ECH(ECDA,"MOD")) D
"RTN","ECXEC",121,0)
 .S MOD=0,M=""
"RTN","ECXEC",122,0)
 .F  S MOD=$O(^ECH(ECDA,"MOD",MOD)) Q:'MOD  S M=$P(^(MOD,0),U) D
"RTN","ECXEC",123,0)
 ..I M S ECXCMOD=ECXCMOD_M_";"
"RTN","ECXEC",124,0)
 .K MOD,M
"RTN","ECXEC",125,0)
 S:ECP?1.N ECP=$$CPT^ECXUTL3($E(ECP,1,5),"",ECV)
"RTN","ECXEC",126,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPCE1,ECXCMOD,ECV)
"RTN","ECXEC",127,0)
 ;
"RTN","ECXEC",128,0)
 ;- Observation Patient Indicator (YES/NO)
"RTN","ECXEC",129,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXEC",130,0)
 ;
"RTN","ECXEC",131,0)
 ;- CNH status (YES/NO)
"RTN","ECXEC",132,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXEC",133,0)
 ;
"RTN","ECXEC",134,0)
 ;- encounter classification
"RTN","ECXEC",135,0)
 S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR,ECXSHAD)="",ECXVISIT=$P(ECCH,U,21)
"RTN","ECXEC",136,0)
 I ECXVISIT'="" D
"RTN","ECXEC",137,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXEC",138,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXEC",139,0)
 .S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXEC",140,0)
 .S ECXECL=$G(ECXVIST("ENCCL")),ECXESC=$G(ECXVIST("ENCSC")) ;144
"RTN","ECXEC",141,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXEC",142,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXEC",143,0)
 ; - PROJ 112/SHAD Indicator
"RTN","ECXEC",144,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXEC",145,0)
 ; ******* - PATCH 127, ADD PATCAT CODE 
"RTN","ECXEC",146,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXEC",147,0)
 ;
"RTN","ECXEC",148,0)
 ; - Get national patient record flag Indicator if exist
"RTN","ECXEC",149,0)
 D NPRF^ECXUTL5
"RTN","ECXEC",150,0)
 ;
"RTN","ECXEC",151,0)
 ; - If no encounter number don't file record
"RTN","ECXEC",152,0)
 S ECDSSE=$S(ECAC1S<101!(ECAC1S>999):"ECS",1:ECAC1S)_ECAC2S ;154 If stop code is invalid set it to ECS for encounter number creation
"RTN","ECXEC",153,0)
 I ECXLOGIC>2018 D  ;170 If procedure is in range, change specific patient data for record
"RTN","ECXEC",154,0)
 .I "^CH103^CH104^CH105^CH106^CH107^CH108^CH109^"[("^"_$G(ECPNM)_"^") S ECXSSN="000123457",ECXPNM="ZZCH",ECXA="O" ;If specific Chaplain codes, use fake name and SSN and set to outpatient
"RTN","ECXEC",155,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSSE,ECCS) ;154 Send ECDSSE for encounter number creation
"RTN","ECXEC",156,0)
 I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXEC",157,0)
 D:ECXENC'="" FILE
"RTN","ECXEC",158,0)
 I $D(^XTMP("ECEFPAT",ECDA)) S ^XTMP("ECEFPAT",ECDA)=$S($G(LATE):2,1:1) ;166 If this record was entered through the state home spreadsheet then mark it with 1 if within date range or 2 if "late"
"RTN","ECXEC",159,0)
 Q
"RTN","ECXEC",160,0)
 ;
"RTN","ECXEC",161,0)
FILE ;file record in #727.815
"RTN","ECXEC",162,0)
 ;node0
"RTN","ECXEC",163,0)
 ;ecode=inst ECL^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^day^
"RTN","ECXEC",164,0)
 ;DSS unit ECDU^category ECC^procedure ECP^volume ECV^
"RTN","ECXEC",165,0)
 ;cost center ECCS^ordering sec ECO^section ECM^
"RTN","ECXEC",166,0)
 ;provider ECU1A^prov per cls ECXPPC1^prov 2 ECU2A^prov#2 per cls ECXPPC2
"RTN","ECXEC",167,0)
 ;^prov 3 ECU3A^prov#3 per cls ECXPPC3^^mov # ECXMN^treat spec ECXTS
"RTN","ECXEC",168,0)
 ;^time ECTM^Placehold primary care team ECPTTM^Placehold primary care provider ECPTPR
"RTN","ECXEC",169,0)
 ;^pce cpt code (ECXCPT)^Placeholder ECXICD9^Placeholder ECXICD91^
"RTN","ECXEC",170,0)
 ;Placeholder ECXICD92^Placeholder ECXICD93^Placeholder ECXICD94^ 
"RTN","ECXEC",171,0)
 ;agent orange ECXAST^radiation exposure ECXRST^
"RTN","ECXEC",172,0)
 ;environmental contaminants ECXEST^service connected ECPTPR^sent to pce
"RTN","ECXEC",173,0)
 ;ECPCE7^^dss identifier ECDSS^placeholder
"RTN","ECXEC",174,0)
 ;node1
"RTN","ECXEC",175,0)
 ;mpi ECXMPI^placeholder ECXDSSD^PLACEHOLDER
"RTN","ECXEC",176,0)
 ;placeholder^placeholder^placeholder^
"RTN","ECXEC",177,0)
 ;placeholder^Placehold pc prov person class ECCLAS^
"RTN","ECXEC",178,0)
 ;Placehold assoc pc prov ECASPR^Placehold assoc pc prov person class ECCLAS2^
"RTN","ECXEC",179,0)
 ;placeholder^
"RTN","ECXEC",180,0)
 ;divison ECXDIV^mst status ECXMST^dom ECXDOM^date of birth ECXDOB^
"RTN","ECXEC",181,0)
 ;enrollment category ECXCAT^ enrollment status ECXSTAT^enrollment
"RTN","ECXEC",182,0)
 ;priority ECXPRIOR^period of service ECXPOS^purple heart indicator
"RTN","ECXEC",183,0)
 ;ECXPHI^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXEC",184,0)
 ;ao loc ECXAOL^ord div ECXODIV^contr st dt ECXCSDT^
"RTN","ECXEC",185,0)
 ;contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXEC",186,0)
 ;production division ECXPDIV^eligibility ECXELIG^
"RTN","ECXEC",187,0)
 ;head & neck cancer ind. ECXHNCI^Placehold ethnicity ECXETH^Placehold race1 ECXRC1
"RTN","ECXEC",188,0)
 ;enrollment location ECXENRL^^enrollment priority
"RTN","ECXEC",189,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient
"RTN","ECXEC",190,0)
 ;type ECXPTYPE^combat vet elig ECXCVE
"RTN","ECXEC",191,0)
 ;NODE 2
"RTN","ECXEC",192,0)
 ;combat vet elig end date ECXCVEDT
"RTN","ECXEC",193,0)
 ;enc cv eligible ECXCVENC^national patient record flag
"RTN","ECXEC",194,0)
 ;ECXNPRFI^emerg response indic(FEMA) ECXERI^agent orange indic ECXAO^
"RTN","ECXEC",195,0)
 ;environ contam ECXECE^head/neck cancer ECXHNC^encntr mst ECXMIL
"RTN","ECXEC",196,0)
 ;^radiation ECXIR^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT
"RTN","ECXEC",197,0)
 ;^Placehold associate pc provider npi ECASNPI^Placehold primary care provider npi ECPTNPI^
"RTN","ECXEC",198,0)
 ;provider npi ECU1NPI^provider #2 ECU2NPI^provider #3 ECU3NPI^
"RTN","ECXEC",199,0)
 ;shad status ECXSHADI^shad encounter ECXSHAD^patcat ECXPATCAT^
"RTN","ECXEC",200,0)
 ;prov #4 ECU4A^prov #4 pc ECXPPC4^prov #4 ECXU4NPI^prov #5 ECU5A^
"RTN","ECXEC",201,0)
 ;prov #5 pc ECXPPC5^prov #5 ECXU5NPI^
"RTN","ECXEC",202,0)
 ;primary ICD-10 code ECXICD10P^Secondary ICD-10 Code #1 ECXICD101^
"RTN","ECXEC",203,0)
 ;Secondary ICD-10 Code #2 ECXICD102^Secondary ICD-10 Code #3 ECXICD103^
"RTN","ECXEC",204,0)
 ;Secondary ICD-10 Code #4 ECXICD104
"RTN","ECXEC",205,0)
 ;NODE 3
"RTN","ECXEC",206,0)
 ;Encounter SC ECXESC^Vietnam Status ECXVIET^
"RTN","ECXEC",207,0)
 ;Provider #6 ECU6A^ Prov #6 PC ECXPPC6^Prov #6 NPI ECU6NPI^Provider #7 ECU7A^ Prov #7 PC ECXPPC7^Prov #7 NPI ECU7NPI
"RTN","ECXEC",208,0)
 ;National 4CHAR code ECX4CHAR^NULL^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXEC",209,0)
 ;Reason #1 (ECXRES1) ^ Reason #2 (ECXRES2) ^ Reason #3 (ECXRES3) ^ Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)
"RTN","ECXEC",210,0)
 ;Clinic IEN (ECAC) 154
"RTN","ECXEC",211,0)
 ;^ Patient Division (ECXSTANO) 166
"RTN","ECXEC",212,0)
 ;
"RTN","ECXEC",213,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXEC",214,0)
 N ECXDATA
"RTN","ECXEC",215,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXEC",216,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXEC",217,0)
 ;done
"RTN","ECXEC",218,0)
 N DA,DIK
"RTN","ECXEC",219,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXEC",220,0)
 I ECXLOGIC>2018 D  ;170 Changes related to FY19
"RTN","ECXEC",221,0)
 .S (ECXETH,ECXRC1)="" ;170 Ethnicity and Race 1 fields will now be null
"RTN","ECXEC",222,0)
 .S (ECPTTM,ECPTPR,ECCLAS,ECASPR,ECCLAS2,ECASNPI,ECPTNPI)="" ;170 PCMM-related fields will be null
"RTN","ECXEC",223,0)
 S ECODE=EC7_U_EC23_U_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXEC",224,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECDT,ECXYM)_U_ECDU_U_ECC_U
"RTN","ECXEC",225,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECU1A_U_ECXPPC1_U
"RTN","ECXEC",226,0)
 S ECODE=ECODE_ECU2A_U_ECXPPC2_U_ECU3A_U_ECXPPC3_U_U_ECXMN_U
"RTN","ECXEC",227,0)
 S ECODE=ECODE_ECXTS_U_ECTM_U
"RTN","ECXEC",228,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_ECXCPT_U_ECXICD9_U
"RTN","ECXEC",229,0)
 S ECODE=ECODE_ECXICD91_U_ECXICD92_U_ECXICD93_U
"RTN","ECXEC",230,0)
 S ECODE=ECODE_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXEC",231,0)
 S ECODE=ECODE_ECSC_U_ECPCE7_U_U_ECDSS_U_U
"RTN","ECXEC",232,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_ECCLAS_U
"RTN","ECXEC",233,0)
 S ECODE1=ECODE1_U_ECASPR_U_ECCLAS2_U_U_ECXDIV_U
"RTN","ECXEC",234,0)
 S ECODE1=ECODE1_ECXMST_U_ECXDOM_U_ECXDOB_U_ECXCAT_U_ECXSTAT_U
"RTN","ECXEC",235,0)
 S ECODE1=ECODE1_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXEC",236,0)
 S ECODE1=ECODE1_ECXODIV_U_ECXCSDT_U_ECXCEDT_U_ECXCTYP_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXEC",237,0)
 S ECODE1=ECODE1_ECXELIG_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXEC",238,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL_U
"RTN","ECXEC",239,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXEC",240,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXEC",241,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXEC",242,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECU1NPI_U_ECU2NPI_U_ECU3NPI
"RTN","ECXEC",243,0)
 ; PATCAT added
"RTN","ECXEC",244,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXSHADI_U_ECXSHAD_U_ECXPATCAT
"RTN","ECXEC",245,0)
 I ECXLOGIC>2011 S ECODE2=ECODE2_U_ECU4A_U_ECXPPC4_U_ECU4NPI_U_ECU5A_U_ECXPPC5_U_ECU5NPI
"RTN","ECXEC",246,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U_ECXICD104_U
"RTN","ECXEC",247,0)
 I ECXLOGIC>2013 S ECODE3=ECXESC_U_ECXVIET_U_ECU6A_U_ECXPPC6_U_ECU6NPI_U_ECU7A_U_ECXPPC7_U_ECU7NPI_U_ECX4CHAR_U_$S(ECXLOGIC>2015:"",1:ECAC)_U_ECXCLST_U_ECXECL ; 154
"RTN","ECXEC",248,0)
 I ECXLOGIC>2014 S ECODE3=ECODE3_U_ECXRES1_U_ECXRES2_U_ECXRES3_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXEC",249,0)
 I ECXLOGIC>2015 S ECODE3=ECODE3_U_ECAC ;154 MOVED CLINIC IEN
"RTN","ECXEC",250,0)
 I ECXLOGIC>2017 S ECODE3=ECODE3_U_ECXSTANO  ;166
"RTN","ECXEC",251,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),^ECX(ECFILE,EC7,3)=$G(ECODE3),ECRN=ECRN+1 ;144
"RTN","ECXEC",252,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXEC",253,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXEC",254,0)
 Q
"RTN","ECXEC",255,0)
 ;
"RTN","ECXEC",256,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXEC",257,0)
 N OUT
"RTN","ECXEC",258,0)
 S ECHEAD="ECS",OUT=0
"RTN","ECXEC",259,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXEC",260,0)
 Q:($G(ECXQQ))
"RTN","ECXEC",261,0)
 W @IOF,!,"Setting up for ",ECPACK," DSS Extract -",!
"RTN","ECXEC",262,0)
 W !,"   Reminder: A maintenance option, ECS Extract Unusual Volume Report, may"
"RTN","ECXEC",263,0)
 W !,"   assist in identifying problematic data. It should be run before the"
"RTN","ECXEC",264,0)
 W !,"   Event Capture Extract is performed.",!
"RTN","ECXEC",265,0)
 D PAUSE^ECXTRAC
"RTN","ECXEC",266,0)
 I OUT S ECFILE=""
"RTN","ECXEC",267,0)
 Q
"RTN","ECXEC",268,0)
 ;
"RTN","ECXEC",269,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXEC",270,0)
 N ECXQQ
"RTN","ECXEC",271,0)
 S ECXQQ=1 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXEC",272,0)
 ;
"RTN","ECXEC",273,0)
CLEAN ;166 Section added to clean out table when extract finishes
"RTN","ECXEC",274,0)
 N RECNO
"RTN","ECXEC",275,0)
 S RECNO=0 F  S RECNO=$O(^XTMP("ECEFPAT",RECNO)) Q:'+RECNO  D
"RTN","ECXEC",276,0)
 .I $G(^XTMP("ECEFPAT",RECNO))'="" K ^XTMP("ECEFPAT",RECNO) ;If record was counted, delete entry from table
"RTN","ECXEC",277,0)
 Q
"RTN","ECXLABN")
0^17^B76780222^B52461125
"RTN","ECXLABN",1,0)
ECXLABN ;ALB/JAP,BIR/CML-Lab Extract for DSS (New Format - With LMIP Codes) ;7/5/18  12:02
"RTN","ECXLABN",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,28,24,30,31,32,33,39,42,46,70,71,80,92,107,105,112,127,132,144,149,154,161,170**;Dec 22, 1997;Build 12
"RTN","ECXLABN",3,0)
BEG ;entry point
"RTN","ECXLABN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABN",6,0)
 Q
"RTN","ECXLABN",7,0)
 ;
"RTN","ECXLABN",8,0)
START ; entry when queued
"RTN","ECXLABN",9,0)
 K ^LRO(64.03),^TMP($J,"ECXP")
"RTN","ECXLABN",10,0)
 N ECDOCPC
"RTN","ECXLABN",11,0)
 S LRSDT=ECSD,LREDT=ECED,QFLG=0
"RTN","ECXLABN",12,0)
 D ^LRCAPDSS
"RTN","ECXLABN",13,0)
 ;quit if no completion date for API compile
"RTN","ECXLABN",14,0)
 I '$P($G(^LRO(64.03,1,1,1,0)),U,4) Q
"RTN","ECXLABN",15,0)
 ;quit if tasked and user sends stop request
"RTN","ECXLABN",16,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D  Q
"RTN","ECXLABN",17,0)
 .S QFLG=1
"RTN","ECXLABN",18,0)
 .K ^LRO(64.03) S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",19,0)
 ;otherwise, continue
"RTN","ECXLABN",20,0)
 K ECXDD D FIELD^DID(64.03,1,,"SPECIFIER","ECXDD")
"RTN","ECXLABN",21,0)
 S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)),ECLRN=1 K ECXDD
"RTN","ECXLABN",22,0)
 F  S ECLRN=$O(^LRO(64.03,ECLRN)) Q:'ECLRN  D  Q:QFLG
"RTN","ECXLABN",23,0)
 .Q:'$D(^LRO(64.03,ECLRN,0))
"RTN","ECXLABN",24,0)
 .S EC1=^LRO(64.03,ECLRN,0),ECDOC=ECPROF_$P(EC1,U,2)
"RTN","ECXLABN",25,0)
 .S ECDOCNPI=$$NPI^XUSNPI("Individual_ID",$P(EC1,U,2),$P(EC1,U,4))
"RTN","ECXLABN",26,0)
 .S:+ECDOCNPI'>0 ECDOCNPI="" S ECDOCNPI=$P(ECDOCNPI,U)
"RTN","ECXLABN",27,0)
 .S ECLOC=$P(EC1,U,15),EC=$P(EC1,U,3),ECDOCPC=$$PRVCLASS^ECXUTL($P(EC1,U,2),$P(EC1,U,4))
"RTN","ECXLABN",28,0)
 .I EC]"" D GET
"RTN","ECXLABN",29,0)
 K ^LRO(64.03),^TMP($J,"ECXP") S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",30,0)
 K ECDOCNPI,ECXAGC,ECXL1,ECXL2
"RTN","ECXLABN",31,0)
 Q
"RTN","ECXLABN",32,0)
 ;
"RTN","ECXLABN",33,0)
GET ;get data
"RTN","ECXLABN",34,0)
 N X,ECXSTN,QFLAG,ECXDFN,ECXESC,ECXCLST,ECXFAC,ECXCPT,CPT1,CPTNUM,ECXASIH ;144,170
"RTN","ECXLABN",35,0)
 S (ECXESC,ECXCLST)="" ;144
"RTN","ECXLABN",36,0)
 S ECF=$S($P(EC,";",2)="DPT(":2,$P(EC,";",2)="LRT(67,":67,1:0) Q:'ECF
"RTN","ECXLABN",37,0)
 S ECIFN=$P(EC,";"),QFLAG=0
"RTN","ECXLABN",38,0)
 ;resolve ecloc
"RTN","ECXLABN",39,0)
 S ECXL1=+$P(ECLOC,";",1),ECXL2=$P(ECLOC,";",2)
"RTN","ECXLABN",40,0)
 I ECF=2 S ECLOC=$S(ECXL1>0:ECXL1,1:"") I ECXL2]"",ECXL2'="SC(" S ECLOC=""
"RTN","ECXLABN",41,0)
 I ECF=67 D  S ECLOC=ECXSTN
"RTN","ECXLABN",42,0)
 .S (ECXSTN,ECXAGC)=""
"RTN","ECXLABN",43,0)
 .I (ECXL2'="DIC(4,")!('$D(^DIC(4,ECXL1))) S ECXSTN="XXXXX",ECXAGC="XX" Q
"RTN","ECXLABN",44,0)
 .S ECXSTN=$P(^DIC(4,ECXL1,"99"),U,1),ECXAGC=$E($P(^(99),U,5),1,2)
"RTN","ECXLABN",45,0)
 .S:ECXSTN="" ECXSTN="ZZZZZ" S:ECXAGC="" ECXAGC="ZZ"
"RTN","ECXLABN",46,0)
 S ECDT=$P(EC1,U,13),ECD=$P(ECDT,"."),ECTM=$$ECXTIME^ECXUTL(ECDT)
"RTN","ECXLABN",47,0)
 S ECWKLD=$P(EC1,U,11),ECWK="" I $D(^LAM(ECWKLD,0)) S ECWK=$P(^(0),U,2)
"RTN","ECXLABN",48,0)
 S CPT1="" ;170
"RTN","ECXLABN",49,0)
 D GETCPT(.ECXCPT,ECWKLD) ;170 Get CTP codes related to the workload code
"RTN","ECXLABN",50,0)
 I "^5184^5186^"[("^"_$P(ECWK,".",2)_"^") S CPTNUM=0 F  S CPTNUM=$O(ECXCPT(CPTNUM)) Q:CPTNUM=""!(CPT1'="")  S CPT1=ECXCPT(CPTNUM) ;170 If it's the workload codes we want, store the CPT
"RTN","ECXLABN",51,0)
 S (ECXADMDT,ECTREAT,ECNA,ECSN,ECMN,ECPTTM,ECPTPR,ECCLAS)="",ECA="O",ECXERR=0
"RTN","ECXLABN",52,0)
 S (ECPTNPI,ECASPR,ECCLAS2,ECASNPI)=""
"RTN","ECXLABN",53,0)
 ;get the patient data if record is in file #2
"RTN","ECXLABN",54,0)
 I ECF=2 D PAT(ECIFN,ECDT,.ECXERR) S ECXDFN=ECIFN
"RTN","ECXLABN",55,0)
 Q:ECXERR
"RTN","ECXLABN",56,0)
 ;get patient data if record is in file #67
"RTN","ECXLABN",57,0)
 I ECF=67 S ECSN="000123456",ECNA="RFRL",ECXDFN=0 I $D(^LRT(67,ECIFN,0)) D  Q:QFLAG
"RTN","ECXLABN",58,0)
 .S ECXMPI="",EC0=^LRT(67,ECIFN,0),ECNA=$E($P($P(EC0,U),",")_"    ",1,4)
"RTN","ECXLABN",59,0)
 .S ECSN=$P(EC0,U,9),ECXERI="" D
"RTN","ECXLABN",60,0)
 ..S ECNA=$TR(ECNA,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABN",61,0)
 ..I ECSN="" S ECSN="000123456" Q
"RTN","ECXLABN",62,0)
 ..S ECSN=$TR(ECSN," "),ECSN=$TR(ECSN,"-")
"RTN","ECXLABN",63,0)
 ..I ($L(ECSN)<9)!($L(ECSN)>10) S ECSN="000123456" Q
"RTN","ECXLABN",64,0)
 ..I $L(ECSN)=9,ECSN'?9N S ECSN="000123456" Q
"RTN","ECXLABN",65,0)
 ..I $L(ECSN)=10,ECSN'?9N1"P" S ECSN="000123456"
"RTN","ECXLABN",66,0)
 ..I '$$SSN^ECXUTL5(ECSN,ECF) S QFLAG=1
"RTN","ECXLABN",67,0)
 ;
"RTN","ECXLABN",68,0)
 ;- Only set treating spec (TS) to TS in file #64.03 if it does not exist
"RTN","ECXLABN",69,0)
 I ECA="I",ECTREAT="" S ECTREAT=$P($G(^DIC(45.7,+$P(EC1,U,10),0)),U,2)
"RTN","ECXLABN",70,0)
 S (ECXDOM,ECXDSSD)=""
"RTN","ECXLABN",71,0)
 S X=$G(^ECX(727.831,+ECTREAT,0)) S:X'="" ECXDOM=$P(X,U,2)
"RTN","ECXLABN",72,0)
 ;
"RTN","ECXLABN",73,0)
 ;- Get ordering stop code and ordering date
"RTN","ECXLABN",74,0)
 S ECXORDST=+$P(EC1,U,15),ECXORDST=$S(ECXORDST:$P($G(^ECX(728.44,ECXORDST,0)),U,2),1:"")
"RTN","ECXLABN",75,0)
 S ECXORDDT=$S($P(EC1,U,14):$$ECXDATE^ECXUTL($P(EC1,U,14),ECXYM),1:"")
"RTN","ECXLABN",76,0)
 ;
"RTN","ECXLABN",77,0)
 ;- Get Production Division - ECXDIEN added p-80
"RTN","ECXLABN",78,0)
 N ECXPDIV,ECXDIEN S ECXDIEN=$O(^DIC(4,"D",ECINST,"")),ECXPDIV=$$RADDIV^ECXDEPT(ECXDIEN),ECXFAC=ECINST ;P-46,170
"RTN","ECXLABN",79,0)
 K ECXDIEN
"RTN","ECXLABN",80,0)
 ;
"RTN","ECXLABN",81,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLABN",82,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECA,ECTREAT)
"RTN","ECXLABN",83,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXLABN",84,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXLABN",85,0)
 ;
"RTN","ECXLABN",86,0)
 ;- get lab billable procedure, dss feeder key, data name, data location, and pathologist information
"RTN","ECXLABN",87,0)
 N ECXLEX,ECXPATH,ECXPATHP,ECXPATHN ;149
"RTN","ECXLABN",88,0)
 S ECXLEX="" I $D(^LRO(64.03,ECLRN,2)) S ECXLEX=^(2)
"RTN","ECXLABN",89,0)
 S ECLRBILL=$P(ECXLEX,U),ECDSSFK=$P(ECXLEX,U,2)
"RTN","ECXLABN",90,0)
 S ECLRTNM=$P(ECXLEX,U,3),ECLRDTNM=$P(ECXLEX,U,4)
"RTN","ECXLABN",91,0)
 S ECXPATH=$P(ECXLEX,U,5) ;149 Pathologist
"RTN","ECXLABN",92,0)
 S ECXPATHP=$$PRVCLASS^ECXUTL(ECXPATH,$P(EC1,U,4)) ;149 Pathologist provider class
"RTN","ECXLABN",93,0)
 S ECXPATHN=$$NPI^XUSNPI("Individual_ID",ECXPATH,$P(EC1,U,4)) S:+ECXPATHN'>0 ECXPATHN="" S ECXPATHN=$P(ECXPATHN,U) ;149 Pathologist NPI
"RTN","ECXLABN",94,0)
 ;- If no encounter number don't file record
"RTN","ECXLABN",95,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECA,ECSN,ECXADMDT,ECD,ECTREAT,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXLABN",96,0)
 ;create extract record only if patient name and accession area exist
"RTN","ECXLABN",97,0)
 I ECNA]"" S ECT=$P(EC1,U,8),ECURG=$P(EC1,U,9),EC=+$P(EC1,U,7) I EC D
"RTN","ECXLABN",98,0)
 .S:ECF=2 ECACA=EC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",99,0)
 .S:ECF=67 ECACA=ECXAGC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",100,0)
 .;--getting LOINC Code
"RTN","ECXLABN",101,0)
 .N ECXLNC,ECLRID,LRIFN,LRIDT,ECRSLT,ECRSP8
"RTN","ECXLABN",102,0)
 .S ECXLNC="",ECLRID=0
"RTN","ECXLABN",103,0)
 .;--getting lab patient id
"RTN","ECXLABN",104,0)
 .S LRIFN=+$P(EC1,U,3)
"RTN","ECXLABN",105,0)
 .I ECF=2 S:$D(^DPT(LRIFN,"LR")) ECLRID=^DPT(LRIFN,"LR")
"RTN","ECXLABN",106,0)
 .I ECF=67 S:$D(^LRT(67,LRIFN,"LR")) ECLRID=^LRT(67,LRIFN,"LR")
"RTN","ECXLABN",107,0)
 .; using ECINST=institution, LRIFN=lab file patient id, EC=test (pt 60), LRIDT=date and time to get loinc
"RTN","ECXLABN",108,0)
 .S LRIDT=$P(EC1,U,12)
"RTN","ECXLABN",109,0)
 .;--looking up test to find subscript to lookup value
"RTN","ECXLABN",110,0)
 .D
"RTN","ECXLABN",111,0)
 ..N ECTST S ECTST=$P(EC1,U,8)
"RTN","ECXLABN",112,0)
 ..S ECPT=$S($D(^LAB(60,ECTST,0)):$P(^LAB(60,ECTST,0),U,12),1:""),ECPT=$P(ECPT,",",2)
"RTN","ECXLABN",113,0)
 ..Q:$G(ECPT)']""  Q:'$D(^LR(ECLRID,"CH",LRIDT,ECPT))
"RTN","ECXLABN",114,0)
 ..S ECRSLT=$$TSTRES^LRRPU(ECLRID,"CH",LRIDT,ECPT,"",1) ;DBIA #4658
"RTN","ECXLABN",115,0)
 ..S ECRSP8=$P(ECRSLT,U,8)
"RTN","ECXLABN",116,0)
 ..S ECXLNC=$P($P(ECRSP8,"!",3),";")
"RTN","ECXLABN",117,0)
 ..Q:$G(ECXLNC)']""
"RTN","ECXLABN",118,0)
 .I ECXLOGIC>2018 D  ;170 Added section to update facility and/or production division with accessioning facility and releasing facility
"RTN","ECXLABN",119,0)
 ..N ECXACC,ECXRF,ECXACCSN,ECXRFSN
"RTN","ECXLABN",120,0)
 ..S ECXACC=$P($G(^LR(ECLRID,"CH",LRIDT,0)),U,14) S ECXACCSN=$$RADDIV^ECXDEPT(ECXACC) S ECXFAC=$S(ECXACC&(ECXACCSN'=""):ECXACCSN,ECXACC&(ECXACCSN=""):"9999A",1:ECXFAC) ;Set facility field based on accessioning site value
"RTN","ECXLABN",121,0)
 ..S ECXRF=$P($G(^LR(ECLRID,"CH",LRIDT,"RF")),U) S ECXRFSN=$$RADDIV^ECXDEPT(ECXRF) S ECXPDIV=$S(ECXRF&(ECXRFSN'=""):ECXRFSN,ECXRF&(ECXRFSN=""):"999R",1:ECXPDIV) ;Set production division field based on releasing site
"RTN","ECXLABN",122,0)
 .I $G(ECXASIH) S ECA="A" ;170
"RTN","ECXLABN",123,0)
 .D FILE
"RTN","ECXLABN",124,0)
 Q
"RTN","ECXLABN",125,0)
 ;
"RTN","ECXLABN",126,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get/set patient data
"RTN","ECXLABN",127,0)
 N X,OK,PT
"RTN","ECXLABN",128,0)
 ;get data
"RTN","ECXLABN",129,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXLABN",130,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECNA=$P(PT,U)
"RTN","ECXLABN",131,0)
 .S ECSN=$P(PT,U,2),ECXMPI=$P(PT,U,3),ECXERI=$P(PT,U,4),ECXCLST=$P(PT,U,5) ;144
"RTN","ECXLABN",132,0)
 ;set data and save for later
"RTN","ECXLABN",133,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXLABN",134,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD,"."),"1;3;5",.ECXPAT) ;154 Add service information (5) to list
"RTN","ECXLABN",135,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXLABN",136,0)
 .S ECNA=ECXPAT("NAME"),ECSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABN",137,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXLABN",138,0)
 .S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXLABN",139,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECNA_U_ECSN_U_ECXMPI_U_ECXERI_U_ECXCLST ;144
"RTN","ECXLABN",140,0)
 ;get date specific data
"RTN","ECXLABN",141,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECA=$P(X,U),ECMN=$P(X,U,2),ECTREAT=$P(X,U,3),ECXADMDT=$P(X,U,4),ECXASIH=$P(X,U,14) ;170
"RTN","ECXLABN",142,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."),ECPROF)
"RTN","ECXLABN",143,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXLABN",144,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXLABN",145,0)
 Q
"RTN","ECXLABN",146,0)
 ;
"RTN","ECXLABN",147,0)
FILE ;file record
"RTN","ECXLABN",148,0)
 ;node0
"RTN","ECXLABN",149,0)
 ;facility^patient number^SSN (or equivalent)^name^in/out ECA^
"RTN","ECXLABN",150,0)
 ;day^accession area^abbreviation^test^urgency^treating spec^
"RTN","ECXLABN",151,0)
 ;location^provider and file^
"RTN","ECXLABN",152,0)
 ;movement number^file^time^workload code^Placehold primary care team^
"RTN","ECXLABN",153,0)
 ;Placehold primary care provider
"RTN","ECXLABN",154,0)
 ;node1
"RTN","ECXLABN",155,0)
 ;mpi^placeholder^provider npi^pc provider npi^Placehold pc prov person class^
"RTN","ECXLABN",156,0)
 ;Placehold assoc pc prov^Placehold assoc pc prov person class^assoc pc prov npi^
"RTN","ECXLABN",157,0)
 ;dom ECXDOM^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXLABN",158,0)
 ;ord stop code ECXORDST^ord date ECXORDDT^production division
"RTN","ECXLABN",159,0)
 ;ECXPDIV^^ordering provider person class^emergency response indicator
"RTN","ECXLABN",160,0)
 ;(FEMA) ECXERI^Placehold associate pc provider npi ECASNPI^Placehold primary care provider
"RTN","ECXLABN",161,0)
 ;npi ECPTNPI^provider npi ECDOCNPI^LOINC code ECLNC^lab billable procedure^dss feeder key
"RTN","ECXLABN",162,0)
 ;node2
"RTN","ECXLABN",163,0)
 ;data name^data location^PATCAT^Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Pathologist ECXPATH^Pathologist Person Class ECXPATHP^Pathologist NPI ECXPATHN^CPT code CPT1
"RTN","ECXLABN",164,0)
 ;ECDOCPC
"RTN","ECXLABN",165,0)
 N DA,DIK
"RTN","ECXLABN",166,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABN",167,0)
 I ECXLOGIC>2018 S (ECPTTM,ECPTPR,ECCLAS,ECASPR,ECCLAS2,ECASNPI,ECPTNPI)="" ;170 PCMM-related fields will be null
"RTN","ECXLABN",168,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECIFN_U_ECSN_U_ECNA_U_ECA_U ;170 Replaced ECINST with ECXFAC for facility value
"RTN","ECXLABN",169,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECACA_U_ECT_U_ECURG_U
"RTN","ECXLABN",170,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXLABN",171,0)
 N ECXDATA
"RTN","ECXLABN",172,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECTREAT,.ECXDATA)
"RTN","ECXLABN",173,0)
 S ECTREAT=$G(ECXDATA(7))
"RTN","ECXLABN",174,0)
 ;convert eclrbill  to y/n
"RTN","ECXLABN",175,0)
 S ECLRBILL=$S(ECLRBILL=1:"Y",1:"N")
"RTN","ECXLABN",176,0)
 ;convert ecdssfk to y/n
"RTN","ECXLABN",177,0)
 S ECDSSFK=$S(ECDSSFK=1:"Y",1:"")
"RTN","ECXLABN",178,0)
 ;done
"RTN","ECXLABN",179,0)
 S ECODE=ECODE_ECTREAT_U_ECLOC_U_ECDOC_U_ECMN_U_ECF_U_ECTM_U_ECWK_U
"RTN","ECXLABN",180,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U
"RTN","ECXLABN",181,0)
 ;(ECACA=acc area^abbreviation)
"RTN","ECXLABN",182,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_ECCLAS_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXLABN",183,0)
 S ECODE1=ECODE1_ECXORDST_U_ECXORDDT_U_ECXPDIV_U
"RTN","ECXLABN",184,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECDOCPC
"RTN","ECXLABN",185,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI
"RTN","ECXLABN",186,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECASNPI_U_ECPTNPI_U_ECDOCNPI
"RTN","ECXLABN",187,0)
 I ECXLOGIC>2008 S ECODE1=ECODE1_U_$G(ECXLNC)
"RTN","ECXLABN",188,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECLRBILL_U_ECDSSFK_U,ECODE2=ECLRTNM_U_ECLRDTNM_U_ECXPATCAT
"RTN","ECXLABN",189,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXCLST ;144
"RTN","ECXLABN",190,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_$S(ECXPATH:2_ECXPATH,1:ECXPATH)_U_ECXPATHP_U_ECXPATHN ;149
"RTN","ECXLABN",191,0)
 I ECXLOGIC>2018 S ECODE2=ECODE2_U_CPT1 ;170 CPT code added
"RTN","ECXLABN",192,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXLABN",193,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLABN",194,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABN",195,0)
 Q
"RTN","ECXLABN",196,0)
 ;
"RTN","ECXLABN",197,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABN",198,0)
 S ECHEAD="LAB"
"RTN","ECXLABN",199,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABN",200,0)
 Q
"RTN","ECXLABN",201,0)
 ;
"RTN","ECXLABN",202,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABN",203,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLABN",204,0)
 ;
"RTN","ECXLABN",205,0)
GETCPT(CPT,ECWKLD) ;170 Section added to get CPT codes associated with workload code
"RTN","ECXLABN",206,0)
 N CODE,REC
"RTN","ECXLABN",207,0)
 D GETS^DIQ(64,ECWKLD_",","18*","I","CODE") ;Get Code multiple
"RTN","ECXLABN",208,0)
 S REC="" F  S REC=$O(CODE(64.018,REC)) Q:REC=""  I CODE(64.018,REC,5,"I")="CPT",CODE(64.018,REC,3,"I")="" S CPT(+REC)=+CODE(64.018,REC,.01,"I") ;If code is a CPT code and it's active, store it
"RTN","ECXLABN",209,0)
 Q
"RTN","ECXLABR")
0^25^B26556726^B24269511
"RTN","ECXLABR",1,0)
ECXLABR ;ALB/JAP,BIR/CML-LAR Extract for DSS (New Format - With LMIP Codes) ;6/29/18  15:03
"RTN","ECXLABR",2,0)
 ;;3.0;DSS EXTRACTS;**8,24,33,37,39,46,71,80,107,105,112,127,144,154,161,170**;Dec 22, 1997;Build 12
"RTN","ECXLABR",3,0)
BEG ;entry point from option
"RTN","ECXLABR",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABR",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABR",6,0)
 Q
"RTN","ECXLABR",7,0)
 ;
"RTN","ECXLABR",8,0)
START ; entry when queued
"RTN","ECXLABR",9,0)
 N X,OK,ECTRS,ECTRANS,ECTRIEN,ECDOC,ECDOCPC,ECXESC,ECXECL,ECXCLST,ECCLASS,ECRETM,ECREDT,ECSCDT,ECSCTM,ECXTIME,ECXASIH ;144,154,170
"RTN","ECXLABR",10,0)
 K ^LAR(64.036) S LRSDT=ECSD,LREDT=ECED
"RTN","ECXLABR",11,0)
 D ^LRCAPDAR
"RTN","ECXLABR",12,0)
 ;quit if no completion date for API compile
"RTN","ECXLABR",13,0)
 I '$P($G(^LAR(64.036,1,2,1,0)),U,4) Q
"RTN","ECXLABR",14,0)
 ;process temporary lab file #64.036
"RTN","ECXLABR",15,0)
 S QFLG=0,ECLRN=1
"RTN","ECXLABR",16,0)
 F  S ECLRN=$O(^LAR(64.036,ECLRN)) Q:('ECLRN)!(QFLG)  D
"RTN","ECXLABR",17,0)
 .I $D(^LAR(64.036,ECLRN,0))  D
"RTN","ECXLABR",18,0)
 ..S EC1=^LAR(64.036,ECLRN,0),ECF=$P(EC1,U,2)
"RTN","ECXLABR",19,0)
 ..Q:ECF=""
"RTN","ECXLABR",20,0)
 ..S (ECXESC,ECXECL,ECXCLST)="" ;144
"RTN","ECXLABR",21,0)
 ..S ECXDFN=$P(EC1,U,3),ECPTPR=$P($G(EC1),U,11),ECCLASS=""
"RTN","ECXLABR",22,0)
 ..S ECXTIME=$S($P(EC1,U,10)="":"000300",1:$P(EC1,U,10))
"RTN","ECXLABR",23,0)
 ..S ECXDATE=$P(EC1,U,9)_"."_$P(EC1,U,10)
"RTN","ECXLABR",24,0)
 ..I ECPTPR S ECCLASS=$$PRVCLASS^ECXUTL(ECPTPR,ECXDATE)
"RTN","ECXLABR",25,0)
 ..I ECPTPR S ECPTNPI=$$NPI^XUSNPI("Individual_ID",ECPTPR,+ECXDATE) D
"RTN","ECXLABR",26,0)
 ...S:+ECPTNPI'>0 ECPTNPI="" S ECPTNPI=$P(ECPTNPI,U)
"RTN","ECXLABR",27,0)
 ..S ECORDT=$$ECXDATE^ECXUTL($P(EC1,U,4),ECXYM)
"RTN","ECXLABR",28,0)
 ..S ECORTM=$$ECXTIME^ECXUTL($P(EC1,U,4)_"."_$P(EC1,U,5))
"RTN","ECXLABR",29,0)
 ..S ECREDT=$$ECXDATE^ECXUTL($P(EC1,U,6),ECXYM)
"RTN","ECXLABR",30,0)
 ..S ECRETM=$$ECXTIME^ECXUTL($P(EC1,U,6)_"."_$P(EC1,U,7))
"RTN","ECXLABR",31,0)
 ..S ECSCDT=$$ECXDATE^ECXUTL($P(EC1,U,9),ECXYM)
"RTN","ECXLABR",32,0)
 ..S ECSCTM=$$ECXTIME^ECXUTL($P(EC1,U,9)_"."_$P(EC1,U,10))
"RTN","ECXLABR",33,0)
 ..S (ECXADMDT,ECXDOM,ECXDSSD,ECXPNM,ECXSSN,ECXA,ECXMN,ECXTS)=""
"RTN","ECXLABR",34,0)
 ..I ECF=2 D  Q:'OK
"RTN","ECXLABR",35,0)
 ...K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT) ;154 Added service related information (5) to the list
"RTN","ECXLABR",36,0)
 ...Q:'OK
"RTN","ECXLABR",37,0)
 ...S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABR",38,0)
 ...S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXADMDT=$P(X,U,4),ECXASIH=$P(X,U,14) ;170
"RTN","ECXLABR",39,0)
 ...S ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10)
"RTN","ECXLABR",40,0)
 ...S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXLABR",41,0)
 ..;allow for referral patients in future??
"RTN","ECXLABR",42,0)
 ..;I ECF=67 S ECSN="000123456",ECNA="RFRL"
"RTN","ECXLABR",43,0)
 ..;loop on results multiple
"RTN","ECXLABR",44,0)
 ..;
"RTN","ECXLABR",45,0)
 ..;Get production division ECXDIEN added p-80
"RTN","ECXLABR",46,0)
 ..N ECXPDIV,ECXDIEN S ECXDIEN=$O(^DIC(4,"D",ECINST,"")),ECXPDIV=$$RADDIV^ECXDEPT(ECXDIEN) ;p-46
"RTN","ECXLABR",47,0)
 ..K ECXDIEN
"RTN","ECXLABR",48,0)
 ..;- Observation patient indicator (y/n)
"RTN","ECXLABR",49,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXLABR",50,0)
 ..;
"RTN","ECXLABR",51,0)
 ..;- If no encounter number don't file record
"RTN","ECXLABR",52,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,$P(EC1,U,9),ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXLABR",53,0)
 ..S ECRES=0
"RTN","ECXLABR",54,0)
 ..F  S ECRES=$O(^LAR(64.036,ECLRN,1,ECRES)) Q:('ECRES)!(QFLG)  D
"RTN","ECXLABR",55,0)
 ...I $D(^LAR(64.036,ECLRN,1,ECRES,0)) D  Q:QFLG
"RTN","ECXLABR",56,0)
 ....S EC2=^LAR(64.036,ECLRN,1,ECRES,0),ECN=$P(EC2,U),ECRS=$P(EC2,U,2)
"RTN","ECXLABR",57,0)
 ....S ECHL=$E($P(EC2,U,3)),ECWC=+$P(EC2,U,4)
"RTN","ECXLABR",58,0)
 ....I ECWC S ECWC=$P(^LAM(ECWC,0),U,2)
"RTN","ECXLABR",59,0)
 ....S ECLNC=$P(EC2,U,5)
"RTN","ECXLABR",60,0)
 .... ; ******* - PATCH 127, ADD PATCAT CODE
"RTN","ECXLABR",61,0)
 ....S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXLABR",62,0)
 ....;
"RTN","ECXLABR",63,0)
 ....; - Free text results translation
"RTN","ECXLABR",64,0)
 ....S ECTRANS="",ECTRS=ECRS
"RTN","ECXLABR",65,0)
 ....I +ECTRS S ECTRS=$TR(ECTRS,",","") D
"RTN","ECXLABR",66,0)
 .....I (ECTRS?.N)!(ECTRS?.N1".".N) S ECRS=ECTRS
"RTN","ECXLABR",67,0)
 ....F  Q:$E(ECTRS,1)'=" "  S ECTRS=$E(ECTRS,2,$L(ECTRS))
"RTN","ECXLABR",68,0)
 ....F  Q:$E(ECTRS,$L(ECTRS))'=" "  S ECTRS=$E(ECTRS,1,($L(ECTRS)-1))
"RTN","ECXLABR",69,0)
 ....I ECTRS]"" I ECTRS'?.N I ECTRS'?.N1".".N D  ;translate
"RTN","ECXLABR",70,0)
 .....S ECTRS=$TR(ECRS,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABR",71,0)
 .....S ECTRIEN="",ECTRIEN=$O(^ECX(727.7,"B",ECTRS,ECTRIEN))
"RTN","ECXLABR",72,0)
 .....S ECTRANS=$S(ECTRIEN:$P(^ECX(727.7,ECTRIEN,0),U,2),1:5)
"RTN","ECXLABR",73,0)
 ....;
"RTN","ECXLABR",74,0)
 ....I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXLABR",75,0)
 ....I ECWC]"" D FILE
"RTN","ECXLABR",76,0)
 K ^LAR(64.036) S ^LAR(64.036,0)="LAB DSS LAR EXTRACT^64.036^"
"RTN","ECXLABR",77,0)
 Q
"RTN","ECXLABR",78,0)
 ;
"RTN","ECXLABR",79,0)
FILE ;file record
"RTN","ECXLABR",80,0)
 ;node0
"RTN","ECXLABR",81,0)
 ;facility (ECINST)^dfn (ECXDFN)^ssn (ECXSSN)^name(ECXPNM)^in/out (ECXA)^
"RTN","ECXLABR",82,0)
 ;day(ECSCDT)^
"RTN","ECXLABR",83,0)
 ;lab test code (ECN)^placehold results (ECRS) - pre-2018^hi/lo indicator (ECHL)^
"RTN","ECXLABR",84,0)
 ;date ordered (ECORDT)^time ordered (ECORTM)^date ready (ECREDT)^
"RTN","ECXLABR",85,0)
 ;time ready (ECRETM)^
"RTN","ECXLABR",86,0)
 ;movement file # (ECXMN)^treating specialty (ECXTS)^
"RTN","ECXLABR",87,0)
 ;workload code(ECWC)^
"RTN","ECXLABR",88,0)
 ;node1
"RTN","ECXLABR",89,0)
 ;mpi (ECXMPI)^placeholder (ECXDSSD)^dom (ECXDOM)^time (ECSCTM)^
"RTN","ECXLABR",90,0)
 ;observ pat ind (ECXOBS)^encounter num (ECXENC)^prod div ECXPDIV^
"RTN","ECXLABR",91,0)
 ;lab results translation ECXTRANS^ordering provider (ECPTPR)^
"RTN","ECXLABR",92,0)
 ;ordering provider person class (ECCLASS)^ordering provider npi ECPTNPI^LOINC code ECLNC
"RTN","ECXLABR",93,0)
 ;Patient Category PATCAT^Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL^Long Results (ECRS) post-2018
"RTN","ECXLABR",94,0)
 N DA,DIK
"RTN","ECXLABR",95,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABR",96,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXLABR",97,0)
 S ECODE=ECODE_ECSCDT_U_$$RJ^XLFSTR(ECN,4,0)_U_$S(ECXLOGIC>2018:"",1:$E(ECRS,1,20))_U_ECHL_U_ECORDT_U ;170 Change result field to be null after 2018, otherwise 1st 20 chars
"RTN","ECXLABR",98,0)
 S ECODE=ECODE_$$LJ^XLFSTR(ECORTM,6,0)_U
"RTN","ECXLABR",99,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXLABR",100,0)
 N ECXDATA,ECXTSC
"RTN","ECXLABR",101,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXLABR",102,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXLABR",103,0)
 ;done
"RTN","ECXLABR",104,0)
 S ECODE=ECODE_ECREDT_U_$$LJ^XLFSTR(ECRETM,6,0)_U_ECXMN_U_ECXTSC_U_ECWC_U
"RTN","ECXLABR",105,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXDOM_U_ECSCTM_U_ECXOBS_U_ECXENC_U_ECXPDIV_U_ECTRANS
"RTN","ECXLABR",106,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_2_ECPTPR_U_ECCLASS
"RTN","ECXLABR",107,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECPTNPI
"RTN","ECXLABR",108,0)
 I ECXLOGIC>2008 S ECODE1=ECODE1_U_ECLNC
"RTN","ECXLABR",109,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT
"RTN","ECXLABR",110,0)
 I ECXLOGIC>2013 S ECODE1=ECODE1_U_ECXESC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXLABR",111,0)
 I ECXLOGIC>2018 S ECODE1=ECODE1_U_ECRS ;170 Longer result moved here
"RTN","ECXLABR",112,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXLABR",113,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLABR",114,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABR",115,0)
 Q
"RTN","ECXLABR",116,0)
 ;
"RTN","ECXLABR",117,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABR",118,0)
 S ECHEAD="LAR"
"RTN","ECXLABR",119,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABR",120,0)
 Q
"RTN","ECXLABR",121,0)
 ;
"RTN","ECXLABR",122,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABR",123,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLBB1")
0^35^B28807056^B28196749
"RTN","ECXLBB1",1,0)
ECXLBB1 ;ALB/JRC - DSS VBECS EXTRACT ;7/3/18  15:06
"RTN","ECXLBB1",2,0)
 ;;3.0;DSS EXTRACTS;**105,102,120,127,144,156,161,170**;Dec 22, 1997;Build 12
"RTN","ECXLBB1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.  Medical Device # BK970021
"RTN","ECXLBB1",4,0)
 ; access to the VBECS EXTRACT file (#6002.03) is supported by
"RTN","ECXLBB1",5,0)
 ; controlled subscription to IA #4953  (global root ^VBECS(6002.03)
"RTN","ECXLBB1",6,0)
BEG ;entry point from option
"RTN","ECXLBB1",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLBB1",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLBB1",9,0)
 Q
"RTN","ECXLBB1",10,0)
 ;
"RTN","ECXLBB1",11,0)
START ; Entry point from tasked job
"RTN","ECXLBB1",12,0)
 ; begin package specific extract
"RTN","ECXLBB1",13,0)
 N ECTRSP,ECADMT,ECTODT,ECENCTR,ECPAT,ECLRDFN,ECXPHY,ECXPHYPC
"RTN","ECXLBB1",14,0)
 N ECD,ECXDFN,ECARRY,EC66,ECERR,ECTRFDT,ECTRFTM,ECX,ECINOUT,ECXINST
"RTN","ECXLBB1",15,0)
 N ECPHYNPI,ECREQNPI,ECXPATCAT,ECXESC ;144
"RTN","ECXLBB1",16,0)
 ;variables ECFILE,EC23,ECXYM,ECINST,ECSD,ECSD1,ECED passed in 
"RTN","ECXLBB1",17,0)
 ; by taskmanager 
"RTN","ECXLBB1",18,0)
 ; ECED defined in ^ECXTRAC - end date of the extract
"RTN","ECXLBB1",19,0)
 ; TRANSFUSION DATE should be within start and end dates
"RTN","ECXLBB1",20,0)
 ; ECED and ECSD input provided by the user interface
"RTN","ECXLBB1",21,0)
 ; and ECSD1 = ECSD-.1
"RTN","ECXLBB1",22,0)
 ; Read through the VBECS DSS EXTRACT file (6002.03)
"RTN","ECXLBB1",23,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1 Q  ;quit if tasked and user sends stop request  (QFLG assigned in ECXTRAC)
"RTN","ECXLBB1",24,0)
 ;
"RTN","ECXLBB1",25,0)
AUDRPT ; entry point for pre-extract audit report
"RTN","ECXLBB1",26,0)
 N RECORD
"RTN","ECXLBB1",27,0)
 S RECORD=0,ECD=ECSD-.1,ECTODT=ECED+.9
"RTN","ECXLBB1",28,0)
 F  S ECD=$O(^VBEC(6002.03,"C",ECD)) Q:'ECD!(ECD>ECTODT)  S RECORD=0 F  S RECORD=$O(^VBEC(6002.03,"C",ECD,RECORD)) Q:RECORD'>0  S EC0=^VBEC(6002.03,RECORD,0) D
"RTN","ECXLBB1",29,0)
 .; ECARRY(1)=TRANSFUSION DATE AND TIME, ECARRY(3)=COMPONENT 
"RTN","ECXLBB1",30,0)
 .; ECARRY(4)=COMPONENT ABBREVIATION, ECARRY(5)=UNITS POOLED
"RTN","ECXLBB1",31,0)
 .; ECARRY(6)=TRANSFUSION REACTION,ECARRY(7)=VOLUME TRANSFUSED
"RTN","ECXLBB1",32,0)
 .; ECARRY(8)=TRANSFUSION REACTION TYPE, ECARRY(9)=REQUESTING PROVIDER
"RTN","ECXLBB1",33,0)
 .; ECARRY(10)=REQUEST. PROV. PERSON CLASS, ECARRY(11)=UNIT MODIFIED
"RTN","ECXLBB1",34,0)
 .; ECARRY(12)=UNIT MODIFICATION, ECARRY(13)=PRODUCTION DIVISION CODE
"RTN","ECXLBB1",35,0)
 .;
"RTN","ECXLBB1",36,0)
 . S ECXDFN=$P(EC0,U,2),ECERR=$$PAT(ECXDFN) Q:ECERR
"RTN","ECXLBB1",37,0)
 . S ECARRY(1)=$P(EC0,U,10),ECARRY(3)=$P(EC0,U,7),ECARRY(4)=$P(EC0,U,8),ECARRY(5)=$S(+$P(EC0,U,9)=0:1,1:+$P(EC0,U,9)),ECARRY(6)=$S($P(EC0,U,15):"Y",1:"N"),ECARRY(7)=$P(EC0,"^",12),ECARRY(8)=$P(EC0,U,13)
"RTN","ECXLBB1",38,0)
 . S ECARRY(9)=$P(EC0,U,6),ECINST=$P(EC0,U,3),ECARRY(12)=$P(EC0,U,14),ECARRY(11)=$S(ECARRY(12)'="":"Y",1:"N"),ECARRY(13)=$P(EC0,U,4)
"RTN","ECXLBB1",39,0)
 . ;get requesting and ordering providers and their person class
"RTN","ECXLBB1",40,0)
 . S ECXPHY=$P(EC0,U,5),(ECXPHYPC,ECARRY(10),ECPHYNPI,ECREQNPI)=""
"RTN","ECXLBB1",41,0)
 . I ECXPHY]"" S ECXPHY=$O(^VA(200,"B",ECXPHY,0))
"RTN","ECXLBB1",42,0)
 . I ECXPHY>0 D
"RTN","ECXLBB1",43,0)
 .. N PERCLS S PERCLS=$$GET^XUA4A72(ECXPHY,ECD)
"RTN","ECXLBB1",44,0)
 .. I +PERCLS>0 S ECXPHYPC=$P(PERCLS,U,7)
"RTN","ECXLBB1",45,0)
 .. S ECPHYNPI=$$NPI^XUSNPI("Individual_ID",ECXPHY,ECD)
"RTN","ECXLBB1",46,0)
 .. S:+ECPHYNPI'>0 ECPHYNPI="" S ECPHYNPI=$P(ECPHYNPI,U)
"RTN","ECXLBB1",47,0)
 .. S ECXPHY=2_ECXPHY
"RTN","ECXLBB1",48,0)
 . I ECARRY(9)>0 D
"RTN","ECXLBB1",49,0)
 .. N PERCLS S PERCLS=$$GET^XUA4A72(ECARRY(9),ECD)
"RTN","ECXLBB1",50,0)
 .. I +PERCLS>0 S ECARRY(10)=$P(PERCLS,U,7)
"RTN","ECXLBB1",51,0)
 .. S ECREQNPI=$$NPI^XUSNPI("Individual_ID",ECARRY(9),ECD)
"RTN","ECXLBB1",52,0)
 .. S:+ECREQNPI'>0 ECREQNPI="" S ECREQNPI=$P(ECREQNPI,U)
"RTN","ECXLBB1",53,0)
 .. S ECARRY(9)=2_ECARRY(9)
"RTN","ECXLBB1",54,0)
 . D GETDATA
"RTN","ECXLBB1",55,0)
 . K ECARRY
"RTN","ECXLBB1",56,0)
 Q
"RTN","ECXLBB1",57,0)
 ;
"RTN","ECXLBB1",58,0)
GETDATA ; gather rest of extract data that will be recorded in an 
"RTN","ECXLBB1",59,0)
 ; entry in file 727.829
"RTN","ECXLBB1",60,0)
 N ECXSTR,ECXASIH ;170
"RTN","ECXLBB1",61,0)
 S ECTRFDT=$$ECXDOB^ECXUTL(ECARRY(1)),ECTRFTM=$$ECXTIME^ECXUTL(ECARRY(1))
"RTN","ECXLBB1",62,0)
 S ECX=$$INP^ECXUTL2(ECXDFN,ECARRY(1)),ECINOUT=$P(ECX,U),ECTRSP=$P(ECX,U,3),ECADMT=$P(ECX,U,4),ECXASIH=$P(ECX,U,14) ;170
"RTN","ECXLBB1",63,0)
 ;
"RTN","ECXLBB1",64,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLBB1",65,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECINOUT,ECTRSP)
"RTN","ECXLBB1",66,0)
 ;- If no encounter number don't file record
"RTN","ECXLBB1",67,0)
 S ECENCTR=$$ENCNUM^ECXUTL4(ECINOUT,ECPAT("SSN"),ECADMT,ECARRY(1),ECTRSP,ECXOBS,ECHEAD,,) ; [FLD #6]
"RTN","ECXLBB1",68,0)
 Q:ECENCTR=""
"RTN","ECXLBB1",69,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXLBB1",70,0)
 S ECXERI=$G(ECPAT("ERI"))
"RTN","ECXLBB1",71,0)
 ;
"RTN","ECXLBB1",72,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXLBB1",73,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXLBB1",74,0)
 S ECXESC="" ;144
"RTN","ECXLBB1",75,0)
 I $G(ECXASIH) S ECINOUT="A" ;170
"RTN","ECXLBB1",76,0)
 S ECXSTR=$G(EC23)_"^"_ECINST_"^"_ECXDFN_"^"_ECPAT("SSN")_"^"_ECPAT("NAME")_"^"_ECINOUT_"^"_ECENCTR_"^"_ECTRFDT_"^"_ECTRFTM_"^"_ECARRY(3)_"^"_ECARRY(4)_"^"_ECARRY(5)_"^"_ECARRY(7)_"^"_ECARRY(6)_"^"_ECARRY(8)_"^BB"_ECARRY(13)_"^^"
"RTN","ECXLBB1",77,0)
 I $G(ECXLOGIC)>2005 S ECXSTR=ECXSTR_U_ECXPHY_U_ECXPHYPC
"RTN","ECXLBB1",78,0)
 I $G(ECXLOGIC)>2006 D
"RTN","ECXLBB1",79,0)
 .S ECXSTR=ECXSTR_U_ECXERI_U_ECARRY(11)_U_ECARRY(12)_U_ECARRY(9)_U_ECARRY(10)_U_ECARRY(13)_U
"RTN","ECXLBB1",80,0)
 I '$D(ECXRPT) D FILE(ECXSTR) Q
"RTN","ECXLBB1",81,0)
 S ^TMP("ECXLBB",$J,ECXDFN,ECD,RECORD)=ECXSTR  ;temporary global array,156-added additional subscript
"RTN","ECXLBB1",82,0)
 I $D(ECXCRPT) D
"RTN","ECXLBB1",83,0)
 . N ECCOUNT S ECCOUNT=0
"RTN","ECXLBB1",84,0)
 . F  S ECCOUNT=ECCOUNT+1 Q:'$D(^TMP("ECXLBBC",$J,$S($G(ECXCFLG)=1:ECARRY(4),1:"ZZNOZZ"),ECXDFN,ECTRFDT_"."_ECTRFTM_"."_ECCOUNT,"S"))
"RTN","ECXLBB1",85,0)
 . S ^TMP("ECXLBBC",$J,$S($G(ECXCFLG)=1:ECARRY(4),1:"ZZNOZZ"),ECXDFN,ECTRFDT_"."_ECTRFTM_"."_ECCOUNT,"S")=ECXSTR
"RTN","ECXLBB1",86,0)
 ;   used in ECXPLBB/ECXLBBC (pre-extract audit report)
"RTN","ECXLBB1",87,0)
 Q
"RTN","ECXLBB1",88,0)
 ;
"RTN","ECXLBB1",89,0)
PAT(ECXDFN) ;get/set patient data
"RTN","ECXLBB1",90,0)
 ; INPUT - ECXDFN = patient ien (DFN)
"RTN","ECXLBB1",91,0)
 ; OUTPUT - ECPAT array:
"RTN","ECXLBB1",92,0)
 ;          ECPAT("SSN")
"RTN","ECXLBB1",93,0)
 ;          ECPAT("NAME")
"RTN","ECXLBB1",94,0)
 ; returns 0 or 1 in ECXERR - 0=successful
"RTN","ECXLBB1",95,0)
 ;                            1=error condition
"RTN","ECXLBB1",96,0)
 N X,OK,ECXERR
"RTN","ECXLBB1",97,0)
 ;get data
"RTN","ECXLBB1",98,0)
 S ECXERR=0
"RTN","ECXLBB1",99,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,"","1;3",.ECPAT)
"RTN","ECXLBB1",100,0)
 I 'OK S ECXERR=1
"RTN","ECXLBB1",101,0)
 Q ECXERR
"RTN","ECXLBB1",102,0)
 ;
"RTN","ECXLBB1",103,0)
FILE(ECODE) ;
"RTN","ECXLBB1",104,0)
 ; Input - ECODE = extract record
"RTN","ECXLBB1",105,0)
 ;
"RTN","ECXLBB1",106,0)
 ; record the extract record at a global node in file 727.829
"RTN","ECXLBB1",107,0)
 ; sequence #^year/month of extract^extract #^facility^patient dfn^SSN^
"RTN","ECXLBB1",108,0)
 ; name^i/o pt indicator^encounter #^date of transfusion^time of 
"RTN","ECXLBB1",109,0)
 ; transfusion^component^component abbrev^# of units^volume in mm^
"RTN","ECXLBB1",110,0)
 ; reaction^reaction type^feeder location^placeholder^DSS IP #
"RTN","ECXLBB1",111,0)
 ; ordering physician^ordering physician pc^emergency response indicator
"RTN","ECXLBB1",112,0)
 ; (FEMA)^unit modified^unit modification^requesting provider^request. 
"RTN","ECXLBB1",113,0)
 ; provider person class^ordering provider npi ECPHYNPI
"RTN","ECXLBB1",114,0)
 ;ECODE1- requesting provider npi ECREQNPI^PATCAT^Encounter SC ECXESC
"RTN","ECXLBB1",115,0)
 N DA,DIK,EC7
"RTN","ECXLBB1",116,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLBB1",117,0)
 S ECODE=EC7_"^"_ECODE
"RTN","ECXLBB1",118,0)
 I ECXLOGIC>2007 D
"RTN","ECXLBB1",119,0)
 .S ECODE=ECODE_ECPHYNPI_U
"RTN","ECXLBB1",120,0)
 .S ECODE1=$G(ECREQNPI)
"RTN","ECXLBB1",121,0)
 .I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT
"RTN","ECXLBB1",122,0)
 I ECXLOGIC>2013 S ECODE1=ECODE1_U_ECXESC ;144
"RTN","ECXLBB1",123,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=$G(ECODE1),ECRN=ECRN+1
"RTN","ECXLBB1",124,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLBB1",125,0)
 Q
"RTN","ECXLBB1",126,0)
 ;
"RTN","ECXLBB1",127,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXLBB1",128,0)
 S ECHEAD="LBB"
"RTN","ECXLBB1",129,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLBB1",130,0)
 Q
"RTN","ECXLBB1",131,0)
 ;
"RTN","ECXLBB1",132,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXLBB1",133,0)
 ; should be queued with a 1D frequency
"RTN","ECXLBB1",134,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXLBB1",135,0)
 ;
"RTN","ECXLBB1",136,0)
CHKMOD(MD) ;check if modifier is contained in string
"RTN","ECXLBB1",137,0)
 N RES,MODX
"RTN","ECXLBB1",138,0)
 I MD="" Q ""
"RTN","ECXLBB1",139,0)
 S (RES,MODX)="" F  S MODX=$O(MODARY(MODX)) Q:MODX=""  D  I RES'="" Q
"RTN","ECXLBB1",140,0)
 .I MD[MODX S RES=MODARY(MODX)
"RTN","ECXLBB1",141,0)
 Q RES
"RTN","ECXLBB1",142,0)
 ;
"RTN","ECXLBB1",143,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLBB1",144,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXLBB1",145,0)
 Q
"RTN","ECXLBB1",146,0)
 ;
"RTN","ECXLBB1",147,0)
 ;ECXLBB
"RTN","ECXMOV")
0^29^B54397407^B32634409
"RTN","ECXMOV",1,0)
ECXMOV ;ALB/JAP,BIR/DMA,PTD-Transfer and Discharge Extract ;6/29/18  11:49
"RTN","ECXMOV",2,0)
 ;;3.0;DSS EXTRACTS;**8,24,33,39,41,42,46,65,84,107,105,128,127,161,166,170**;Dec 22, 1997;Build 12
"RTN","ECXMOV",3,0)
BEG ;entry point from option
"RTN","ECXMOV",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXMOV",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXMOV",6,0)
 Q
"RTN","ECXMOV",7,0)
 ;
"RTN","ECXMOV",8,0)
START ; start package specific extract
"RTN","ECXMOV",9,0)
 N ECXDSC,W,WTO,X1,X2,X,ECXDPRPC,ECXDAPPC,ECDIS
"RTN","ECXMOV",10,0)
 N ECXSTANO ;tjl 166
"RTN","ECXMOV",11,0)
 K ^TMP($J,"ASIH") ;170 Keeps track of ASIH other facility records that need to be created
"RTN","ECXMOV",12,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXMOV",13,0)
 S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXMOV",14,0)
 S ECED=ECED+.3,QFLG=0
"RTN","ECXMOV",15,0)
 F ECM=2,3 S ECARG="ATT"_ECM,ECD=ECSD1 D  Q:QFLG
"RTN","ECXMOV",16,0)
 .F  S ECD=$O(^DGPM(ECARG,ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D  Q:QFLG
"RTN","ECXMOV",17,0)
 ..F  S ECDA=$O(^DGPM(ECARG,ECD,ECDA)) Q:'ECDA  D GET  Q:QFLG
"RTN","ECXMOV",18,0)
 S ECDA=0 F  S ECDA=$O(^TMP($J,"ASIH",ECDA)) Q:'+ECDA  S ECM=3 D DISASIH Q:QFLG
"RTN","ECXMOV",19,0)
 K ^TMP($J,"ASIH") ;170
"RTN","ECXMOV",20,0)
 Q
"RTN","ECXMOV",21,0)
 ;
"RTN","ECXMOV",22,0)
GET ;170 Moved record creation to be under "GET"
"RTN","ECXMOV",23,0)
 N NEEDREC ;170
"RTN","ECXMOV",24,0)
 Q:'$D(^DGPM(ECDA,0))  S EC=^(0)
"RTN","ECXMOV",25,0)
 S ECXDFN=+$P(EC,U,3),ECMT=$P(EC,U,18),ECXDATE=ECD
"RTN","ECXMOV",26,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;",.ECXPAT)
"RTN","ECXMOV",27,0)
 I 'OK K ECXPAT Q
"RTN","ECXMOV",28,0)
 S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXMOV",29,0)
 S ECTM=$$ECXTIME^ECXUTL(ECD)
"RTN","ECXMOV",30,0)
 S WTO=$P(EC,U,6),ECXWTO=$P($G(^DIC(42,+WTO,44)),U)
"RTN","ECXMOV",31,0)
 ;
"RTN","ECXMOV",32,0)
 ;reset EC to admission movement and hold discharge movement ECX*128
"RTN","ECXMOV",33,0)
 S ECCA=$P(EC,U,14),EC=$G(^DGPM(ECCA,0)),ECA=$P(EC,U) I EC="" D MAIL(ECDA) S QFLG=1 Q
"RTN","ECXMOV",34,0)
 ;
"RTN","ECXMOV",35,0)
 ;if date of previous xfer movement is greater than admit date,
"RTN","ECXMOV",36,0)
 ;then reset EC to that previous xfer movement
"RTN","ECXMOV",37,0)
 S ECDL=9999999.9999999-ECD,ECDL=+$O(^DGPM("ATID2",ECXDFN,ECDL))
"RTN","ECXMOV",38,0)
 S ECDAL=+$O(^DGPM("ATID2",ECXDFN,ECDL,0))
"RTN","ECXMOV",39,0)
 I $D(^DGPM(ECDAL,0)),$P(^(0),U)>$P(EC,U) S EC=^(0)
"RTN","ECXMOV",40,0)
 ;
"RTN","ECXMOV",41,0)
 I ECM=2 D
"RTN","ECXMOV",42,0)
 .I $$ISASIH^ECXUTL6(ECDA,ECM) S NEEDREC=$$NEEDADR^ECXUTL6("TRAN",ECDA,"MOV") I +NEEDREC S ^TMP($J,"ASIH",$P(NEEDREC,U,2))="" ;170 If it's an ASIH record and we need a discharge record, store it for later
"RTN","ECXMOV",43,0)
 .;if transact=Transfer,ECD (time)=ASIH (7chars) and >0,set ECXDATE
"RTN","ECXMOV",44,0)
 .;to Admit DT/time before calling funct to get in/out stat & TS
"RTN","ECXMOV",45,0)
 .I $L($P(ECD,".",2))=7,+$E($P(ECD,".",2),7)>0 S ECXDATE=ECA
"RTN","ECXMOV",46,0)
 .S W=$P(EC,U,6)
"RTN","ECXMOV",47,0)
 ;
"RTN","ECXMOV",48,0)
 I ECM=3 D
"RTN","ECXMOV",49,0)
 .I $$ISASIH^ECXUTL6(ECDA,ECM) S NEEDREC=$$NEEDADR^ECXUTL6("DIS",ECDA,"MOV") I +NEEDREC S ^TMP($J,"ASIH",$P(NEEDREC,U,2))="" ;170 If patient is discharged and we need an ASIH discharge record, store it for later
"RTN","ECXMOV",50,0)
 .;subtract 1 second from dischg DT so IN5^VADPT call (in ECXUTL2
"RTN","ECXMOV",51,0)
 .;API) will pick up discharge movmement record
"RTN","ECXMOV",52,0)
 .S ECXDATE=$$FMADD^XLFDT(ECXDATE,,,,-1)
"RTN","ECXMOV",53,0)
 .;set losing ward to ward at discharge
"RTN","ECXMOV",54,0)
 .N WARD S WARD=$$GET1^DIQ(405,ECDA,200)
"RTN","ECXMOV",55,0)
 .I WARD'="" S W=+$O(^DIC(42,"B",WARD,0))
"RTN","ECXMOV",56,0)
 ;
"RTN","ECXMOV",57,0)
 ;-Gets inpat/outpat status, DOM, Treating Spec (TS)
"RTN","ECXMOV",58,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXDOM=$P(X,U,10),ECXTS=$P(X,U,3)
"RTN","ECXMOV",59,0)
 ;
"RTN","ECXMOV",60,0)
 S (ECXWRD,ECXFAC,ECXDSSD,ECXSTANO)=""
"RTN","ECXMOV",61,0)
 I W'="" D
"RTN","ECXMOV",62,0)
 .S ECXWRD=$P($G(^DIC(42,W,44)),U),ECXFAC=$P($G(^DIC(42,W,0)),U,11)
"RTN","ECXMOV",63,0)
 .S ECXDSSD=$P($G(^ECX(727.4,W,0)),U,2)
"RTN","ECXMOV",64,0)
 .S ECXSTANO=$$GETDIV^ECXDEPT(ECXFAC) ;tjl 166 - Set Patient Division based on gaining/losing ward
"RTN","ECXMOV",65,0)
 S ECDI=$S(ECM=2:"",1:$$ECXDATE^ECXUTL(ECD,ECXYM))
"RTN","ECXMOV",66,0)
 S X1=ECD,X2=$P(EC,U) D ^%DTC S ECXLOS=X
"RTN","ECXMOV",67,0)
 ;
"RTN","ECXMOV",68,0)
 ;- Get discharge PC Team, Primary and Assoc Primary Provider
"RTN","ECXMOV",69,0)
 S (ECXDPCT,ECXDPR,ECXDAPR,ECXDPRPC,ECXDAPPC)=""
"RTN","ECXMOV",70,0)
 I ECM=3 D
"RTN","ECXMOV",71,0)
 .S ECXDSC=$$PRIMARY^ECXUTL2(ECXDFN,ECD)
"RTN","ECXMOV",72,0)
 .S ECXDPCT=$P(ECXDSC,U),ECXDPR=$P(ECXDSC,U,2),ECXDAPR=$P(ECXDSC,U,5),ECXDPRPC=$P(ECXDSC,U,3),ECXDAPPC=$P(ECXDSC,U,6)
"RTN","ECXMOV",73,0)
 .S ECDAPRNP=$P(ECXDSC,U,7),ECDPRNPI=$P(ECXDSC,U,4)
"RTN","ECXMOV",74,0)
 ;
"RTN","ECXMOV",75,0)
 ;Get production division ;p-46
"RTN","ECXMOV",76,0)
 N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC) ;p-46 
"RTN","ECXMOV",77,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXMOV",78,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXMOV",79,0)
 ; 
"RTN","ECXMOV",80,0)
  ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXMOV",81,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXMOV",82,0)
 ;- If no encounter number, don't file record
"RTN","ECXMOV",83,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECA,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXMOV",84,0)
 D:ECXENC'="" FILE
"RTN","ECXMOV",85,0)
 Q
"RTN","ECXMOV",86,0)
 ;
"RTN","ECXMOV",87,0)
FILE ;file the extract record
"RTN","ECXMOV",88,0)
 ;node0
"RTN","ECXMOV",89,0)
 ;fac ECXFAC^dfn ECXDFN^ssn ECXSSN^name ECXPNM^in/out ECXA^
"RTN","ECXMOV",90,0)
 ;day (ECD)^^adm date (ECA)^disc date ECDI^mov # ECDA^
"RTN","ECXMOV",91,0)
 ;type ECM^losing ward ECXWARD^treat spec ^los ECXLOS^^
"RTN","ECXMOV",92,0)
 ;movement type ECMT^mov time ECTM^gaining ward ECXWTO^
"RTN","ECXMOV",93,0)
 ;adm time (ECA)^^^
"RTN","ECXMOV",94,0)
 ;node1
"RTN","ECXMOV",95,0)
 ;mpi ECXMPI^placeholder ECXDSSD^dom ECXDOM^observ pat ind ECXOBS^
"RTN","ECXMOV",96,0)
 ;encounter num ECXENC^disch prim prov ECXDPR^disch PC team ECXDPCT^
"RTN","ECXMOV",97,0)
 ;disch assoc prim prov ECXDAPR^production division ECXPDIV
"RTN","ECXMOV",98,0)
 ;^disch prov person class ECXDPRPC^disch assoc prov pe-
"RTN","ECXMOV",99,0)
 ;rson person class^disch assoc pc prov npi ECDAPRNP^discharge pc provider npi ECDPRNPI
"RTN","ECXMOV",100,0)
 ;^ Patient Division ECXSTANO
"RTN","ECXMOV",101,0)
 N DA,DIK
"RTN","ECXMOV",102,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXMOV",103,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXMOV",104,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_U
"RTN","ECXMOV",105,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECA,ECXYM)_U_ECDI_U_ECDA_U_ECM_U_ECXWRD_U
"RTN","ECXMOV",106,0)
 S ECODE=ECODE_U_ECXLOS_U_U_ECMT_U_ECTM_U_ECXWTO_U
"RTN","ECXMOV",107,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECA)_U_U_U
"RTN","ECXMOV",108,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXDPR_U
"RTN","ECXMOV",109,0)
 S ECODE1=ECODE1_ECXDPCT_U_ECXDAPR_U_ECXPDIV ;p-46 added ECXPDIV
"RTN","ECXMOV",110,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXDPRPC_U_ECXDAPPC
"RTN","ECXMOV",111,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_$G(ECDAPRNP)_U_$G(ECDPRNPI)
"RTN","ECXMOV",112,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT ;P-127 ADDED PATCAT
"RTN","ECXMOV",113,0)
 I ECXLOGIC>2017 S ECODE1=ECODE1_U_ECXSTANO  ;tjl 166
"RTN","ECXMOV",114,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXMOV",115,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXMOV",116,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXMOV",117,0)
 Q
"RTN","ECXMOV",118,0)
 ;
"RTN","ECXMOV",119,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXMOV",120,0)
 S ECHEAD="MOV"
"RTN","ECXMOV",121,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXMOV",122,0)
 Q
"RTN","ECXMOV",123,0)
 ;
"RTN","ECXMOV",124,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXMOV",125,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXMOV",126,0)
MAIL(ECXDA) ; 
"RTN","ECXMOV",127,0)
 ; Created to send a message pointing to a bad record ECX*128
"RTN","ECXMOV",128,0)
 ; Input - ECXDA is the PATIENT MOVEMENT (#405) record number for the discharge that has no admission 
"RTN","ECXMOV",129,0)
 ; associated with it.  ECX*128
"RTN","ECXMOV",130,0)
 N XMSUB,XMTEXT,XMY,MSGTEXT,LINENUM
"RTN","ECXMOV",131,0)
 ;;Setup necessary variables to send the message
"RTN","ECXMOV",132,0)
 S XMSUB="Movement Record Error - Please Fix"
"RTN","ECXMOV",133,0)
 S XMTEXT="MSGTEXT("
"RTN","ECXMOV",134,0)
 S XMY("G.DSS-MOVS@"_^XMB("NETNAME"))=""
"RTN","ECXMOV",135,0)
 ;;Create the message to be sent
"RTN","ECXMOV",136,0)
 S LINENUM=1
"RTN","ECXMOV",137,0)
 S MSGTEXT(LINENUM)="The Transfer and Discharge Extract did not complete due to the error below"
"RTN","ECXMOV",138,0)
 S LINENUM=LINENUM+1,MSGTEXT(LINENUM)="",LINENUM=LINENUM+1
"RTN","ECXMOV",139,0)
 S MSGTEXT(LINENUM)="Discharge movement record "_ECXDA_" does not have an admission movement associated with it."
"RTN","ECXMOV",140,0)
 S LINENUM=LINENUM+1,MSGTEXT(LINENUM)="",LINENUM=LINENUM+1
"RTN","ECXMOV",141,0)
 S MSGTEXT(LINENUM)="This record needs to be fixed and the extract needs to be run again."
"RTN","ECXMOV",142,0)
 S LINENUM=LINENUM+1,MSGTEXT(LINENUM)=""
"RTN","ECXMOV",143,0)
 D ^XMD
"RTN","ECXMOV",144,0)
 Q
"RTN","ECXMOV",145,0)
 ;
"RTN","ECXMOV",146,0)
DISASIH ;170 Section added to create a discharge ASIH other facility record
"RTN","ECXMOV",147,0)
 N OK,EC,ECXPAT,WTO,ECXWTO,X,ECA,ECD,WARD,ECXFAC,ECXDSSD,ECXSTANO,ECXPDIV,ECXOBS,ECXPATCAT,ECXENC,ECDI,ECCXLOS,ECXDPCT,ECXDPR,ECXDAPR,ECXDPRPC,ECXDAPPC,ECXDSC,ECDAPRNP,ECDPRNPI,ECM,ECMT
"RTN","ECXMOV",148,0)
 N ECTM,ECXA,ECXDFN,ECXDOM,ECXLOS,ECXMPI,ECXPNM,ECXSSN,ECXTS,ECXWRD
"RTN","ECXMOV",149,0)
 Q:'$D(^DGPM(ECDA,0))  S EC=^(0)
"RTN","ECXMOV",150,0)
 S ECXDFN=+$P(EC,U,3),ECMT=$P(EC,U,18),ECXDATE=$P(EC,U)
"RTN","ECXMOV",151,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;",.ECXPAT) Q:'OK
"RTN","ECXMOV",152,0)
 S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXMOV",153,0)
 S X=$$INP^ECXUTL2(ECXDFN,$$FMADD^XLFDT(ECXDATE,,,,-1))
"RTN","ECXMOV",154,0)
 S ECXDOM=$P(X,U,10),ECXTS=$P(X,U,3),ECXA=$P(X,U)
"RTN","ECXMOV",155,0)
 S ECA=$P(X,U,4)
"RTN","ECXMOV",156,0)
 S ECD=$P(X,U,6)
"RTN","ECXMOV",157,0)
 S ECDI=$$ECXDATE^ECXUTL(ECD,ECXYM)
"RTN","ECXMOV",158,0)
 S ECM=3
"RTN","ECXMOV",159,0)
 S ECMT=$P(EC,U,18)
"RTN","ECXMOV",160,0)
 S ECTM=$$ECXTIME^ECXUTL(ECD)
"RTN","ECXMOV",161,0)
 S (ECXWRD,WTO,ECXWTO,WARD,ECXFAC,ECXDSSD,ECXSTANO,ECXLOS,ECXDPCT,ECXDPR,ECXDAPR,ECXDPRPC,ECXDAPPC,ECXDSC,ECDAPRNP,ECDPRNPI)=""
"RTN","ECXMOV",162,0)
 S ECXWRD=$$GET1^DIQ(405,ECDA,200)
"RTN","ECXMOV",163,0)
 S:ECXWRD'="" ECXWRD=+$O(^DIC(42,"B",ECXWRD,0)) ;Gets ward at discharge
"RTN","ECXMOV",164,0)
 S:ECXWRD="" ECXWRD=$P(EC,U,6) ;Gets ward from transfer
"RTN","ECXMOV",165,0)
 I ECXWRD'="" S ECXFAC=$P($G(^DIC(42,ECXWRD,0)),U,11) S ECXWRD="" ;Get facility based on ward, reset ward to null
"RTN","ECXMOV",166,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC)
"RTN","ECXMOV",167,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXMOV",168,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXMOV",169,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECA,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXMOV",170,0)
 S ECXA="A"
"RTN","ECXMOV",171,0)
 D:ECXENC'="" FILE
"RTN","ECXMOV",172,0)
 Q
"RTN","ECXNDC")
0^21^B11146910^B15755233
"RTN","ECXNDC",1,0)
ECXNDC ;ALB/JAP BIR/CML - Lookup Routine for NDC's ;5/30/18  12:18
"RTN","ECXNDC",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,24,84,170**;Dec 22, 1997;Build 12
"RTN","ECXNDC",3,0)
EN ;entry point from option
"RTN","ECXNDC",4,0)
 N F5068,QFLG,DUOUT,DIRUT,DTOUT,X,Y,DIC,DIQ,SS,JJ,DRG,D,DRGNM,LN,DIR,ECXDIQ ;170
"RTN","ECXNDC",5,0)
 S F5068=0 I $T(PSNAPIS+1^PSNAPIS)[";;4.0;" S F5068=1
"RTN","ECXNDC",6,0)
 W @IOF
"RTN","ECXNDC",7,0)
 W "Pharmacy Feeder Keys for DSS are built in the following manner." ;170
"RTN","ECXNDC",8,0)
 I 'F5068 D NDF3 Q:QFLG
"RTN","ECXNDC",9,0)
 I F5068 D NDF4 Q:QFLG
"RTN","ECXNDC",10,0)
 W !!,"This option will allow lookups on the local DRUG file (#50) using "
"RTN","ECXNDC",11,0)
 W !,"NDCs from DSS Pharmacy Feeder Keys that have been rejected because"
"RTN","ECXNDC",12,0)
 I 'F5068 D
"RTN","ECXNDC",13,0)
 .W !,"the first seven characters are zeros. (Ex. ""0000000051079014120"")"
"RTN","ECXNDC",14,0)
 I F5068 D
"RTN","ECXNDC",15,0)
 .W !,"the first five characters are zeros in a 17 character Feeder Key."
"RTN","ECXNDC",16,0)
 .W !,"(Ex. ""00000051079014120"")"
"RTN","ECXNDC",17,0)
 W !!,"This would occur when a pharmacy item has not been matched to the"
"RTN","ECXNDC",18,0)
 W !,"the National Drug File (NDF)."
"RTN","ECXNDC",19,0)
 W !!,"Enter the NDC (last twelve characters) from a rejected feeder key"
"RTN","ECXNDC",20,0)
 W !,"to display information from the local DRUG file for any drug which"
"RTN","ECXNDC",21,0)
 W !,"has that NDC."
"RTN","ECXNDC",22,0)
 D ASK
"RTN","ECXNDC",23,0)
 Q
"RTN","ECXNDC",24,0)
ASK ;select ndc for lookup
"RTN","ECXNDC",25,0)
 W !!!,"Enter 12 digits or 'LCL' and 9 digits at the prompt or <cr> to exit.",! ;170
"RTN","ECXNDC",26,0)
 S DIR(0)="FO^12:12",DIR("A")="Select NDC",DIR("?")="Enter the 12 digit NDC or 'LCL' and 9 digits." ;170
"RTN","ECXNDC",27,0)
 D ^DIR Q:$L(Y)'=12  S Y=$$UP^XLFSTR(Y),X=$S(Y'["LCL":Y,1:"`"_+$P(Y,"LCL",2)) ;170
"RTN","ECXNDC",28,0)
 S DIC=50,DIC(0)="QE",D="NDC" ;170
"RTN","ECXNDC",29,0)
 ;Use pharmacy encapsulation API for MIX^DIC1 dbia 4551
"RTN","ECXNDC",30,0)
 D MIX^PSSDI(50,"ECX",.DIC,D,X) ;170
"RTN","ECXNDC",31,0)
 Q:Y<0  Q:($D(DUOUT)!$D(DTOUT))
"RTN","ECXNDC",32,0)
 S DRG=+Y
"RTN","ECXNDC",33,0)
 ;Use pharmacy encapsulation API for EN^DIQ1 dbia 4451
"RTN","ECXNDC",34,0)
 S DIQ="ECXDIQ",DIQ(0)="E" D EN^PSSDI(50,"DSS",DIC,".01;2;31;14.5;16",DRG,.DIQ)
"RTN","ECXNDC",35,0)
 K LN S DRGNM=ECXDIQ(50,DRG,.01,"E"),$P(LN,"-",$L(DRGNM)+1)=""
"RTN","ECXNDC",36,0)
 W !!,DRGNM,!,LN
"RTN","ECXNDC",37,0)
 W !,"NDC:           ",ECXDIQ(50,DRG,31,"E"),?40,"VA Classification:       ",ECXDIQ(50,DRG,2,"E")
"RTN","ECXNDC",38,0)
 W !,"Dispense Unit: ",ECXDIQ(50,DRG,14.5,"E"),?40,"Price per Dispense Unit: ",ECXDIQ(50,DRG,16,"E")
"RTN","ECXNDC",39,0)
 K ECXDIQ,X,Y,DIC,DIQ,DRG,ECXDIQ,D
"RTN","ECXNDC",40,0)
 G ASK
"RTN","ECXNDC",41,0)
 ;
"RTN","ECXNDC",42,0)
NDF3 ;before ndf v4
"RTN","ECXNDC",43,0)
 S QFLG=0
"RTN","ECXNDC",44,0)
 W !!,"Your site is running NATIONAL DRUG FILE (NDF) v3.18, so"
"RTN","ECXNDC",45,0)
 W !,"PHA Feeder Keys are composed of 19 numeric characters."
"RTN","ECXNDC",46,0)
 W !!?5,"Ex. ""0016006000003073531""   where characters:"
"RTN","ECXNDC",47,0)
 W !!?5,"1-4 (0016)          = pointer to the NATIONAL DRUG file (#50.6)"
"RTN","ECXNDC",48,0)
 W !?5,"5-7 (006)           = pointer to VA PRODUCT NAME subfile (#50.68)"
"RTN","ECXNDC",49,0)
 W !?5,"                      of the NATIONAL DRUG file (#50.6)"
"RTN","ECXNDC",50,0)
 W !?5,"8-19 (000003073531) = NDC from the local DRUG file (#50)"
"RTN","ECXNDC",51,0)
 I $E(IOST)="C" D
"RTN","ECXNDC",52,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXNDC",53,0)
 .S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXNDC",54,0)
 Q
"RTN","ECXNDC",55,0)
 ;
"RTN","ECXNDC",56,0)
NDF4 ;after ndf v4
"RTN","ECXNDC",57,0)
 S QFLG=0
"RTN","ECXNDC",58,0)
 W !,"PHA Feeder Keys are composed of 17 numeric characters."
"RTN","ECXNDC",59,0)
 W !!?5,"Ex. ""12006000003073531""   where characters:"
"RTN","ECXNDC",60,0)
 W !?5,"1-5 (12006)         = pointer to VA PRODUCT NAME file (#50.68)"
"RTN","ECXNDC",61,0)
 W !?5,"6-17 (000003073531) = NDC from the local DRUG file (#50)"
"RTN","ECXNDC",62,0)
 Q
"RTN","ECXOPRX")
0^30^B72012795^B71187589
"RTN","ECXOPRX",1,0)
ECXOPRX ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ;6/29/18  13:46
"RTN","ECXOPRX",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,30,33,38,39,46,49,71,81,84,92,105,112,120,127,136,144,149,154,166,170**;Dec 22, 1997;Build 12
"RTN","ECXOPRX",3,0)
 ;
"RTN","ECXOPRX",4,0)
BEG ;entry point from option
"RTN","ECXOPRX",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXOPRX",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXOPRX",7,0)
 Q
"RTN","ECXOPRX",8,0)
 ;
"RTN","ECXOPRX",9,0)
START ;entry when queued
"RTN","ECXOPRX",10,0)
 N X,DA,DIC,DIQ,DR,ECXNPRFI,ECRXPTST,ECNONVAP,ECRXNUM,ECXSCRX,ECXESC,ECXCLST,ECXECL,ECXCHOCE ;144,154
"RTN","ECXOPRX",11,0)
 N ECXOCLIN,ECXSTANO ;166
"RTN","ECXOPRX",12,0)
 S QFLG=0
"RTN","ECXOPRX",13,0)
 I '$D(ECINST) D
"RTN","ECXOPRX",14,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXOPRX",15,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXOPRX",16,0)
 ;before V6
"RTN","ECXOPRX",17,0)
 S ECPROF=6,ECD=$O(^PSRX("AL",0)) I ECD,ECD<ECSD1 G V6
"RTN","ECXOPRX",18,0)
 S ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",19,0)
 F  S ECD=$O(^PSRX("AD",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AD",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AD",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",20,0)
 Q
"RTN","ECXOPRX",21,0)
 ;
"RTN","ECXOPRX",22,0)
V6 ;version 6 or better
"RTN","ECXOPRX",23,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",24,0)
 S ECPROF=2,ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",25,0)
 F  S ECD=$O(^PSRX("AL",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AL",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AL",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",26,0)
 Q:QFLG
"RTN","ECXOPRX",27,0)
 S ECREF="P",ECD=ECSD1
"RTN","ECXOPRX",28,0)
 F  S ECD=$O(^PSRX("AM",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AM",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AM",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",29,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",30,0)
 Q
"RTN","ECXOPRX",31,0)
 ;
"RTN","ECXOPRX",32,0)
STUFF ;get data
"RTN","ECXOPRX",33,0)
 N ECXPHA,DR,DIC,DA,DIQ,ECXASIH,ECXDIQ ;154,170
"RTN","ECXOPRX",34,0)
 S ECDATA=$G(^PSRX(ECRX,0)),ECXPHA="" Q:'ECDATA
"RTN","ECXOPRX",35,0)
 I ECRFL S ECDATA1=$G(^PSRX(ECRX,ECREF,ECRFL,0)) I ECDATA1="" Q
"RTN","ECXOPRX",36,0)
 ;ecref set to 1 in extract+5 and v6+1 and to "P" in v6+2
"RTN","ECXOPRX",37,0)
 ;refill nodes and partial nodes are identical in layout.  Fills
"RTN","ECXOPRX",38,0)
 ;(ie ecrfl=0)& refills (ie ecrfl>0) from "AL" xref, partials from "AM"
"RTN","ECXOPRX",39,0)
 S (ECXDSSD,ECXPROVN,ECXCVE,ECXCVEDT,ECXCVENC,ECRXPTST,ECRXNUM)="",ECXERR=0,ECXDATE=ECD,ECXDFN=$P(ECDATA,U,2),ECDRG=+$P(ECDATA,U,6)
"RTN","ECXOPRX",40,0)
 ;- Get rx patient status & rx number
"RTN","ECXOPRX",41,0)
 S ECRXPTST=$$RXPTST^ECXUTL5($P(ECDATA,U,3)),ECRXNUM=$P(ECDATA,U,1)
"RTN","ECXOPRX",42,0)
 ;- Get provider (either 2_provider or 6_provider depending on version)
"RTN","ECXOPRX",43,0)
 S ECXPROV=$S($P(ECDATA,U,4)'="":ECPROF_$P(ECDATA,U,4),1:""),ECXPROVP=$$PRVCLASS^ECXUTL($P(ECDATA,U,4),ECXDATE)
"RTN","ECXOPRX",44,0)
 S ECPRVNPI=$$NPI^XUSNPI("Individual_ID",$P(ECDATA,U,4),ECXDATE)
"RTN","ECXOPRX",45,0)
 S:+ECPRVNPI'>0 ECPRVNPI="" S ECPRVNPI=$P(ECPRVNPI,U)
"RTN","ECXOPRX",46,0)
 ;get classification data
"RTN","ECXOPRX",47,0)
 ;154 Added section to use call to PSODI for obtaining data
"RTN","ECXOPRX",48,0)
 F DR=116:1:121,122.01,128 D
"RTN","ECXOPRX",49,0)
 .S DIC=52
"RTN","ECXOPRX",50,0)
 .S DA=ECRX
"RTN","ECXOPRX",51,0)
 .S DIQ="ECXDIQ"
"RTN","ECXOPRX",52,0)
 .D DIQ^PSODI(DIC,DIC,DR,DA,DIQ)
"RTN","ECXOPRX",53,0)
 .S @$S(DR=116:"ECXESC",DR=117:"ECXMIL",DR=118:"ECXAO",DR=119:"ECXIR",DR=120:"ECXECE",DR=121:"ECXHNC",DR=122.01:"ECXSHAD",1:"ECXECL")=$S($G(ECXDIQ(52,DA,DR))="YES":"Y",$G(ECXDIQ(52,DA,DR))="NO":"N",1:"")
"RTN","ECXOPRX",54,0)
 .S ECXSCRX=ECXESC
"RTN","ECXOPRX",55,0)
 ;- Check non-va provider flag and set to 'Y' if exist
"RTN","ECXOPRX",56,0)
 S ECNONVAP=$$NONVAP^ECXUTL5($E(ECXPROV,2,99))
"RTN","ECXOPRX",57,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXOPRX",58,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXOPRX",59,0)
 ;get patient specific data
"RTN","ECXOPRX",60,0)
 D PAT(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXOPRX",61,0)
 I 'ECRFL D
"RTN","ECXOPRX",62,0)
 .S ECMW=$P(ECDATA,U,11),ECQTY=+$P(ECDATA,U,7),ECXDIV=$S($D(^PSRX(ECRX,2)):$P(^(2),U,9),1:1)
"RTN","ECXOPRX",63,0)
 .S ECPRC=+$P(ECDATA,U,17),ECOPAY=$P($G(^PSRX(ECRX,"IB")),U,2)]""
"RTN","ECXOPRX",64,0)
 I ECRFL D
"RTN","ECXOPRX",65,0)
 .S ECMW=$P(ECDATA1,U,2),ECQTY=+$P(ECDATA1,U,4),ECXDIV=$S(+$P(ECDATA1,U,9):$P(ECDATA1,U,9),1:1)
"RTN","ECXOPRX",66,0)
 .S ECPRC=+$P(ECDATA1,U,11),ECOPAY=$P($G(^PSRX(ECRX,1,ECRFL,"IB")),U)]""
"RTN","ECXOPRX",67,0)
 S ECXCOST=$J((ECQTY*ECPRC),1,2),ECDS=$S(ECRFL:$P(ECDATA1,U,10),1:$P(ECDATA,U,8))
"RTN","ECXOPRX",68,0)
 ;call pharmacy drug file (#50) api
"RTN","ECXOPRX",69,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG),ECCAT=$P(ECXPHA,U,2),ECINV=$P(ECXPHA,U,4)
"RTN","ECXOPRX",70,0)
 ; new method of dea spl hndlg **136 updated precedence *144
"RTN","ECXOPRX",71,0)
 I ECXLOGIC>2012 S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"")
"RTN","ECXOPRX",72,0)
 ; old method of dea spl hndlg **136
"RTN","ECXOPRX",73,0)
 I ECXLOGIC<2013 S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXOPRX",74,0)
 S ECUI=$P(ECXPHA,U,8),ECNDC=$P(ECXPHA,U,3)
"RTN","ECXOPRX",75,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0),P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6)
"RTN","ECXOPRX",76,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXOPRX",77,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXOPRX",78,0)
 I ECMW="M" S ECMW=1 I $D(^PSRX("AR",ECD,ECRX)) S ECMW=2
"RTN","ECXOPRX",79,0)
 I ECMW="W" S ECMW=""
"RTN","ECXOPRX",80,0)
 S ECXNEW="" I ECRFL=0 S ECXNEW=1
"RTN","ECXOPRX",81,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS) ;Observation pat indic (YES/NO)
"RTN","ECXOPRX",82,0)
 S ECXORDPH="" ;Ordering physician (null for FY2002)
"RTN","ECXOPRX",83,0)
 ;- Ordering stop code & Ordering date
"RTN","ECXOPRX",84,0)
 S ECXOCLIN=+$P(ECDATA,U,5)  ;166 tjl - Get Ordering Clinic from piece 5 of prescription record
"RTN","ECXOPRX",85,0)
 S ECXORDST=$P($G(^ECX(728.44,ECXOCLIN,0)),U,2)
"RTN","ECXOPRX",86,0)
 S ECXORDDT=$$ECXDATE^ECXUTL(+$P(ECDATA,U,13),ECXYM)  ;166 tjl - Split for legibility
"RTN","ECXOPRX",87,0)
 S ECXSTANO=$$RADDIV^ECXDEPT($P($G(^SC(ECXOCLIN,0)),U,4))  ;166 tjl - Get Patient Division based on Ordering Clinic
"RTN","ECXOPRX",88,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN) ;CNH status (YES/NO)
"RTN","ECXOPRX",89,0)
 ;- DSS Dept and National Prod Division
"RTN","ECXOPRX",90,0)
 ;S ECXDSSD=$$PRE^ECXDEPT(ECXDIV,ECMW,ECINST) dss department postponed
"RTN","ECXOPRX",91,0)
 N ECXPDIV S ECXPDIV=$$PREDIV^ECXDEPT(ECXDIV)
"RTN","ECXOPRX",92,0)
 ;- Set national patient record flag if exist
"RTN","ECXOPRX",93,0)
 D NPRF^ECXUTL5
"RTN","ECXOPRX",94,0)
 ;- If no encounter number don't file record
"RTN","ECXOPRX",95,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXOPRX",96,0)
 I ECXLOGIC>2003 D
"RTN","ECXOPRX",97,0)
 .I (ECMW=2)!((ECMW=1)&(ECXLOGIC>2006)),ECXSSN'="" D
"RTN","ECXOPRX",98,0)
 .. N TMP
"RTN","ECXOPRX",99,0)
 .. I (ECXLOGIC>2008) S TMP=$$JULDT^ECXUTL4(ECD),ECXENC=$E(ECXSSN,1,9)_TMP_"PHA"
"RTN","ECXOPRX",100,0)
 .. E  S TMP=$$JULDT^ECXUTL4(ECD),ECXENC=$E(ECXSSN,1,9)_TMP_"160"
"RTN","ECXOPRX",101,0)
 .. I (ECXLOGIC>2009),(ECXOBS="YES") S ECXOBS=""
"RTN","ECXOPRX",102,0)
 .. S ECXA="O"
"RTN","ECXOPRX",103,0)
 S ECXCHOCE=$S($$UP^XLFSTR($$GET1^DIQ(52,ECRX_",",12))["CHOICE":"C",1:"") ;154 If remarks contain "choice" RX is filled by choice program
"RTN","ECXOPRX",104,0)
 I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXOPRX",105,0)
 I ECXENC'="" D FILE^ECXOPRX1
"RTN","ECXOPRX",106,0)
 Q
"RTN","ECXOPRX",107,0)
 ;
"RTN","ECXOPRX",108,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;Determine in/outpatient status, movement number, primary care team and provider
"RTN","ECXOPRX",109,0)
 N OK,X,PT
"RTN","ECXOPRX",110,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXOPRX",111,0)
 ;get patient data if saved
"RTN","ECXOPRX",112,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXOPRX",113,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXSSN=$P(PT,U),ECXPNM=$P(PT,U,2),ECXMPI=$P(PT,U,3),ECXSEX=$P(PT,U,4),ECXDOB=$P(PT,U,5)
"RTN","ECXOPRX",114,0)
 .S ECXELIG=$P(PT,U,6),ECXVET=$P(PT,U,7),ECXRACE=$P(PT,U,8),ECXPST=$P(PT,U,9),ECXPLOC=$P(PT,U,10),ECXRST=$P(PT,U,11)
"RTN","ECXOPRX",115,0)
 .S ECXAST=$P(PT,U,12),ECXMST=$P(PT,U,13),ECXSTATE=$P(PT,U,14),ECXCNTY=$P(PT,U,15),ECXZIP=$P(PT,U,16),ECXENRL=$P(PT,U,17)
"RTN","ECXOPRX",116,0)
 .S ECXPHI=$P(PT,U,20),ECXCAT=$P(PT,U,21),ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23)
"RTN","ECXOPRX",117,0)
 .S ECXCNHU=$P(PT,U,24),ECXPOS=$P(PT,U,25),ECXAOL=$P(PT,U,26),ECXHNCI=$P(PT,U,27),ECXETH=$P(PT,U,28),ECXRC1=$P(PT,U,29),ECXMTST=$P(PT,U,30)
"RTN","ECXOPRX",118,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4),ECXCNTRY=$P(PT1,U,5)
"RTN","ECXOPRX",119,0)
 .S ECXPATCAT=$P(PT1,U,6),ECXSHAD=$P(PT1,U,7),ECXSHADI=$P(PT1,U,8),ECXVNS=$P(PT1,U,9),ECXCLST=$P(PT1,U,10) ;144 Vietnam and Camp Lejeune status
"RTN","ECXOPRX",120,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",121,0)
 ;set patient data
"RTN","ECXOPRX",122,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXOPRX",123,0)
 .K ECXPAT
"RTN","ECXOPRX",124,0)
 .S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD1,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXOPRX",125,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXOPRX",126,0)
 .S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI"),ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXOPRX",127,0)
 .S ECXVET=ECXPAT("VET"),ECXRACE=ECXPAT("RACE"),ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXOPRX",128,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXMST=ECXPAT("MST STAT"),ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP"),ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXOPRX",129,0)
 .S ECXERI=ECXPAT("ERI"),ECXEST=ECXPAT("EC STAT"),ECXCNTRY=ECXPAT("COUNTRY"),ECXVNS=ECXPAT("VIETNAM"),ECXCLST=ECXPAT("CL STAT") ; 144 VIETNAM STATUS and Camp Lejeune Status
"RTN","ECXOPRX",130,0)
 .S ECXSVCI=ECXPAT("COMBSVCI"),ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC IND/LOC
"RTN","ECXOPRX",131,0)
 .;- CNH Stat (placeholder),Purp Heart Ind,Per of Svce,AO Loc,MT Stat
"RTN","ECXOPRX",132,0)
 .S ECXCNHU="",ECXPHI=ECXPAT("PHI"),ECXPOS=ECXPAT("POS"),ECXAOL=ECXPAT("AOL"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXOPRX",133,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",134,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN) ;Head and Neck Cancer Indicator
"RTN","ECXOPRX",135,0)
 .S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN) ;Proj 112/SHAD Indicator
"RTN","ECXOPRX",136,0)
 .S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1") ;Race and Ethnicity
"RTN","ECXOPRX",137,0)
 .; OEF/OIF data
"RTN","ECXOPRX",138,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXOPRX",139,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXOPRX",140,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXSSN_U_ECXPNM_U_ECXMPI_U_ECXSEX_U_ECXDOB_U_ECXELIG_U_ECXVET_U_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U_ECXMST_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXENRL_U_U
"RTN","ECXOPRX",141,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXPHI_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXCNHU_U_ECXPOS_U_ECXAOL_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXOPRX",142,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXCNTRY_U_ECXPATCAT_U_ECXSHAD_U_ECXSHADI_U_ECXVNS_U_ECXCLST ;144 VIETNAM STATUS and Camp Lejeune Status
"RTN","ECXOPRX",143,0)
 ;get inpatient data
"RTN","ECXOPRX",144,0)
 S (ECXA,ECXADMDT,ECXDOM,ECXMN,ECXTS)="",X=$$INP^ECXUTL2(ECXDFN,ECXDATE) D
"RTN","ECXOPRX",145,0)
 .S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4),ECXASIH=$P(X,U,14) ;170
"RTN","ECXOPRX",146,0)
 ;get primary care data
"RTN","ECXOPRX",147,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,".")),ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXOPRX",148,0)
 Q
"RTN","ECXOPRX",149,0)
 ;
"RTN","ECXOPRX",150,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXOPRX",151,0)
 S ECHEAD="PRE"
"RTN","ECXOPRX",152,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXOPRX",153,0)
 Q
"RTN","ECXOPRX",154,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXOPRX",155,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXOPRX1")
0^11^B11978223^B11017197
"RTN","ECXOPRX1",1,0)
ECXOPRX1 ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ;4/24/18  15:00
"RTN","ECXOPRX1",2,0)
 ;;3.0;DSS EXTRACTS;**92,107,105,120,127,144,149,154,161,166,170**;Dec 22, 1997;Build 12
"RTN","ECXOPRX1",3,0)
 ;
"RTN","ECXOPRX1",4,0)
FILE ;file record
"RTN","ECXOPRX1",5,0)
 ;node0
"RTN","ECXOPRX1",6,0)
 ;inst^dfn^ssn^name^in/out ECXA^day^division^provider^drug category^mail^
"RTN","ECXOPRX1",7,0)
 ;placeholder1^new^shad indicator^qty^cost^encounter shad^mov #^treat spec^placeholder4^unit of issue^dob^elig^vet^copay^
"RTN","ECXOPRX1",8,0)
 ;feeder key^investigational^days supply^Placehold primary care team^Placehold primary care provider^time^race
"RTN","ECXOPRX1",9,0)
 ;node1
"RTN","ECXOPRX1",10,0)
 ;mpi^placeholder ECXDSSD^sex^zip+4^placeholder^placeholder^state^county^Placehold pc prov person class^pow status^pow location^
"RTN","ECXOPRX1",11,0)
 ;ir status^ao status^sharing agree. payor^sharing agree. ins.^mst status^enroll loc^Placehold assoc pc provider^Placehold assoc pc prov person class^
"RTN","ECXOPRX1",12,0)
 ;placeholder^dom ECXDOM^purple heart ECXPHI^enrollment category ECXCAT^enrollment status ECXSTST^
"RTN","ECXOPRX1",13,0)
 ;enrollment priority ECXPRIOR^cnhu status ECXCNHU^period of service ECXPOS^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXOPRX1",14,0)
 ;ao loc ECXAOL^ord physician ECXORDPH^ord stop code ECXORDST^ord date ECXORDDT^CNH status ECXCNH^national division ECXPDIV^
"RTN","ECXOPRX1",15,0)
 ;MT Stat ECXMTST^head & neck cancer ind. ECXHNCI^Placehold ethnicity ECXETH^Placehold race ECXRC1^^enrollment priority ECXPRIOR_
"RTN","ECXOPRX1",16,0)
 ;enrollment subgroup ECXSBGRP^user enrollee ECXUESTA
"RTN","ECXOPRX1",17,0)
 ;NODE 2
"RTN","ECXOPRX1",18,0)
 ;patient type ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXOPRX1",19,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^rx patient status ECRXPTST^non-va prescriber ECNONVAP^rx # ECRXNUM
"RTN","ECXOPRX1",20,0)
 ;^emergency response indicator(FEMA) ECXERI^agent orange enc ECXAO^environ cont PGE ECXECE^head/neck ECXHNC^enc mst ECXMIL^environ contamin ECXEST^ion radiat ECXIR
"RTN","ECXOPRX1",21,0)
 ;^OEF/OIF data ECXOEF^OEFOIF return date ECXOEFDT^Placehold associate pc provider npi ECASNPI^Placehold primary care provider npi ECPTNPI^provider npi ECPRVNPI
"RTN","ECXOPRX1",22,0)
 ;^country ECXCNTRY^PATCAT^Encounter SC ECXESC^Vietnam ECXVNS^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL ^Combat Service Ind ECXSVCI ^Combat Service Loc ECXSVCL^Choice RX ECXCHOCE
"RTN","ECXOPRX1",23,0)
 ;^ Patient Division ECXSTANO
"RTN","ECXOPRX1",24,0)
 N DA,DIK
"RTN","ECXOPRX1",25,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXOPRX1",26,0)
 I ECXLOGIC>2018 S (ECXRACE,ECXETH,ECXRC1,ECPTTM,ECPTPR,ECCLAS,ECASPR,ECCLAS2,ECASNPI,ECPTNPI)="" ;170 Fields will now be null
"RTN","ECXOPRX1",27,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXOPRX1",28,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXDIV_U
"RTN","ECXOPRX1",29,0)
 S ECODE=ECODE_ECXPROV_U_ECCAT_U_ECMW_U_ECXPROVP_U_ECXNEW_U_$S(ECXLOGIC>2010:ECXSHADI,1:"")_U_ECQTY_U
"RTN","ECXOPRX1",30,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXOPRX1",31,0)
 N ECXDATA
"RTN","ECXOPRX1",32,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXOPRX1",33,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXOPRX1",34,0)
 ;done
"RTN","ECXOPRX1",35,0)
 S ECODE=ECODE_ECXCOST_U_$S(ECXLOGIC>2010:ECXSHAD,1:"")_U_ECXMN_U_ECXTS_U_U_ECUI_U_ECXDOB_U
"RTN","ECXOPRX1",36,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECOPAY_U_ECNFC_U_ECINV_U_ECDS_U
"RTN","ECXOPRX1",37,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_$$ECXTIME^ECXUTL(ECXDATE)_U_ECXRACE_U
"RTN","ECXOPRX1",38,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U_ECXPROVN_U_U
"RTN","ECXOPRX1",39,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECCLAS_U_ECXPST_U_ECXPLOC_U
"RTN","ECXOPRX1",40,0)
 S ECODE1=ECODE1_ECXRST_U_ECXAST_U_U_U_ECXMST_U_ECXENRL_U
"RTN","ECXOPRX1",41,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXPHI_U_ECXCAT_U
"RTN","ECXOPRX1",42,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXCNHU_U_ECXPOS_U_ECXOBS_U
"RTN","ECXOPRX1",43,0)
 S ECODE1=ECODE1_ECXENC_U_ECXAOL_U_ECXORDPH_U_ECXORDST_U_ECXORDDT_U
"RTN","ECXOPRX1",44,0)
 S ECODE1=ECODE1_ECXCNH_U_ECXPDIV_U_ECXMTST_U_ECXHNCI_U_ECXETH_U
"RTN","ECXOPRX1",45,0)
 S ECODE1=ECODE1_ECXRC1_U
"RTN","ECXOPRX1",46,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U
"RTN","ECXOPRX1",47,0)
 I ECXLOGIC>2004 S ECODE2=ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI_U_ECRXPTST_U_ECNONVAP
"RTN","ECXOPRX1",48,0)
 I ECXLOGIC>2005 S ECODE2=ECODE2_U_ECRXNUM
"RTN","ECXOPRX1",49,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXEST_U_ECXIR_U_ECXSCRX
"RTN","ECXOPRX1",50,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECPRVNPI
"RTN","ECXOPRX1",51,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXOPRX1",52,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT
"RTN","ECXOPRX1",53,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXVNS_U_ECXCLST_U_ECXECL ;144
"RTN","ECXOPRX1",54,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXOPRX1",55,0)
 I ECXLOGIC>2015 S ECODE2=ECODE2_U_ECXCHOCE ;154
"RTN","ECXOPRX1",56,0)
 I ECXLOGIC>2017 S ECODE2=ECODE2_U_ECXSTANO  ;166 tjl
"RTN","ECXOPRX1",57,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXOPRX1",58,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXOPRX1",59,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXOPRX1",60,0)
 Q
"RTN","ECXPHAA")
0^4^B60802836^B55813214
"RTN","ECXPHAA",1,0)
ECXPHAA ;ALB/JRC Pharmacy DSS Extract UDP/IVP Source Audit Report ;3/13/18  14:33
"RTN","ECXPHAA",2,0)
 ;;3.0;DSS EXTRACTS;**92,142,149,161,166,170**;Dec 22, 1997;Build 12
"RTN","ECXPHAA",3,0)
 ;
"RTN","ECXPHAA",4,0)
EN ;entry point from option
"RTN","ECXPHAA",5,0)
 N SCRNARR,STOP,REPORT,DIVISION,SDATE,EDATE,X,TMP,ECXPORT,CNT ;149
"RTN","ECXPHAA",6,0)
 S SCRNARR="^TMP($J,""ECXPHAA"")",STOP=0
"RTN","ECXPHAA",7,0)
 K @SCRNARR
"RTN","ECXPHAA",8,0)
 S STOP=0
"RTN","ECXPHAA",9,0)
 ;Select report
"RTN","ECXPHAA",10,0)
 D REPORT  Q:STOP
"RTN","ECXPHAA",11,0)
 ;Select division
"RTN","ECXPHAA",12,0)
 D DIVISION  Q:STOP
"RTN","ECXPHAA",13,0)
 ;Select date range
"RTN","ECXPHAA",14,0)
 D DATES  Q:STOP
"RTN","ECXPHAA",15,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I $G(ECXPORT) D  Q  ;149 Section added
"RTN","ECXPHAA",16,0)
 .K ^TMP($J,"ECXPORT")
"RTN","ECXPHAA",17,0)
 .S ^TMP($J,"ECXPORT",0)="DIVISION^DATE^RECORD COUNT",CNT=1
"RTN","ECXPHAA",18,0)
 .D @$S(REPORT=2:"GETUDATA",REPORT=1:"GETIDATA",1:"")  ;tjl 166 Changed order
"RTN","ECXPHAA",19,0)
 .D DETAIL
"RTN","ECXPHAA",20,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXPHAA",21,0)
 .K ^TMP($J,"ECXPORT"),^TMP($J,"ECXPHAA")
"RTN","ECXPHAA",22,0)
 ;Queue Report
"RTN","ECXPHAA",23,0)
 N ZTDESC,ZTIO,ZTSAVE
"RTN","ECXPHAA",24,0)
 F X="REPORT","SDATE","EDATE","STOP" S ZTSAVE(X)=""
"RTN","ECXPHAA",25,0)
 S ZTSAVE("SCRNARR")=""
"RTN","ECXPHAA",26,0)
 S TMP=$$OREF^DILF(SCRNARR)
"RTN","ECXPHAA",27,0)
 S ZTSAVE(TMP)=""
"RTN","ECXPHAA",28,0)
 I $D(@SCRNARR)#2 S ZTSAVE(SCRNARR)=""
"RTN","ECXPHAA",29,0)
 S ZTIO=""
"RTN","ECXPHAA",30,0)
 S ZTDESC="DSS UDP/IVP Source Audit Report"
"RTN","ECXPHAA",31,0)
 D EN^XUTMDEVQ("EN1^ECXPHAA",ZTDESC,.ZTSAVE)
"RTN","ECXPHAA",32,0)
 Q
"RTN","ECXPHAA",33,0)
 ;
"RTN","ECXPHAA",34,0)
EN1 ;Init variables
"RTN","ECXPHAA",35,0)
 N PAGE,LN,SUB
"RTN","ECXPHAA",36,0)
 S SUB="",PAGE=0
"RTN","ECXPHAA",37,0)
 D HEADER I STOP D EXIT Q
"RTN","ECXPHAA",38,0)
 S SUB=$S(REPORT=2:"GETUDATA",REPORT=1:"GETIDATA",1:"")  ;tjl 166 Changed order
"RTN","ECXPHAA",39,0)
 D @SUB I STOP D EXIT Q
"RTN","ECXPHAA",40,0)
 I '$O(^TMP($J,"ECXPHAA",0)) D  Q
"RTN","ECXPHAA",41,0)
 .W !
"RTN","ECXPHAA",42,0)
 .W !,"************************************************************"
"RTN","ECXPHAA",43,0)
 .W !,"*  NOTHING TO REPORT FOR PHARMACY "_$S(REPORT=2:"UDP",REPORT=1:"IVP",1:"")_" SOURCE AUDIT REPORT  *"
"RTN","ECXPHAA",44,0)
 .W !,"************************************************************"
"RTN","ECXPHAA",45,0)
 .D WAIT
"RTN","ECXPHAA",46,0)
 .D EXIT
"RTN","ECXPHAA",47,0)
 D DETAIL I STOP D EXIT Q
"RTN","ECXPHAA",48,0)
EXIT K @SCRNARR Q
"RTN","ECXPHAA",49,0)
 ;
"RTN","ECXPHAA",50,0)
REPORT ;Select report
"RTN","ECXPHAA",51,0)
 N DIR,DIRUT,DUOUT
"RTN","ECXPHAA",52,0)
 ;Prepare choices
"RTN","ECXPHAA",53,0)
 S DIR(0)="S^1:IVP;2:UDP"  ;tjl 166 Changed order
"RTN","ECXPHAA",54,0)
 S DIR("A")="Select Source Audit Report"
"RTN","ECXPHAA",55,0)
 D ^DIR
"RTN","ECXPHAA",56,0)
 I $D(DIRUT)!$D(DUOUT) S STOP=1 Q
"RTN","ECXPHAA",57,0)
 S REPORT=Y
"RTN","ECXPHAA",58,0)
 Q
"RTN","ECXPHAA",59,0)
 ;
"RTN","ECXPHAA",60,0)
DIVISION ;Prompt for division
"RTN","ECXPHAA",61,0)
 ; Set Divisions into screen array (prompt is one/many/all)
"RTN","ECXPHAA",62,0)
 ;Input  : SCRNARR - Screen array full global reference
"RTN","ECXPHAA",63,0)
 ;Output : 1 = OK     0 = User abort/timeout
"RTN","ECXPHAA",64,0)
 ;         @SCRNARR@("DIVISION") = User pick all divisions ?
"RTN","ECXPHAA",65,0)
 ;           1 = Yes (all)     0 = No
"RTN","ECXPHAA",66,0)
 ;         @SCRNARR@("DIVISION",PtrDiv) = Division name
"RTN","ECXPHAA",67,0)
 ;Note   : @SCRNARR@("DIVISION") is initialized (KILLed) on input
"RTN","ECXPHAA",68,0)
 ;       : @SCRNARR@("DIVISION",PtrDiv) is only set when the user
"RTN","ECXPHAA",69,0)
 ;         picked individual divisions (i.e. didn't pick all)
"RTN","ECXPHAA",70,0)
 ;
"RTN","ECXPHAA",71,0)
 ;Declare variables
"RTN","ECXPHAA",72,0)
 N VAUTD,Y,DIV,FAC
"RTN","ECXPHAA",73,0)
 ;Get division selection
"RTN","ECXPHAA",74,0)
 D DIVISION^VAUTOMA
"RTN","ECXPHAA",75,0)
 I Y<0 S STOP=1 Q
"RTN","ECXPHAA",76,0)
 M @SCRNARR@("DIVISION")=VAUTD
"RTN","ECXPHAA",77,0)
 I VAUTD=0 D
"RTN","ECXPHAA",78,0)
 .S DIV=0 F  S DIV=$O(VAUTD(DIV)) Q:DIV'>0  S FAC=$$GETDIV^ECXDEPT(DIV) S @SCRNARR@("DIVISION",FAC)=""
"RTN","ECXPHAA",79,0)
 Q
"RTN","ECXPHAA",80,0)
 ;
"RTN","ECXPHAA",81,0)
DATES ;Prompt for start date
"RTN","ECXPHAA",82,0)
 N DIR,DIRUT,X,Y
"RTN","ECXPHAA",83,0)
 S DIR(0)="D^:NOW:EX"
"RTN","ECXPHAA",84,0)
 S DIR("A")="Enter Report Start Date"
"RTN","ECXPHAA",85,0)
 S DIR("B")=$$FMTE^XLFDT($$NOW^XLFDT,"1D")
"RTN","ECXPHAA",86,0)
 D ^DIR
"RTN","ECXPHAA",87,0)
 I $D(DIRUT) S STOP=1 Q
"RTN","ECXPHAA",88,0)
 S SDATE=Y
"RTN","ECXPHAA",89,0)
 ;Prompt for end date
"RTN","ECXPHAA",90,0)
 K DIR,DIRUT,X,Y
"RTN","ECXPHAA",91,0)
 S DIR(0)="D^:NOW:EX"
"RTN","ECXPHAA",92,0)
 S DIR("A")="Enter Report End Date"
"RTN","ECXPHAA",93,0)
 S DIR("B")=$$FMTE^XLFDT($$NOW^XLFDT,"1D")
"RTN","ECXPHAA",94,0)
 D ^DIR
"RTN","ECXPHAA",95,0)
 I $D(DIRUT) S STOP=1 Q
"RTN","ECXPHAA",96,0)
 S EDATE=Y
"RTN","ECXPHAA",97,0)
 Q
"RTN","ECXPHAA",98,0)
 ;
"RTN","ECXPHAA",99,0)
HEADER ;Print header
"RTN","ECXPHAA",100,0)
 S PAGE=$G(PAGE)+1,$P(LN,"=",80)=""
"RTN","ECXPHAA",101,0)
 W @IOF
"RTN","ECXPHAA",102,0)
 W !,$S(REPORT=2:"UDP",REPORT=1:"IVP",1:"")_" Source Audit Report",?70,"PAGE: "_PAGE
"RTN","ECXPHAA",103,0)
 W !!,"Run Date:   "_$$FMTE^XLFDT(DT)
"RTN","ECXPHAA",104,0)
 W !!,"Start Date: "_$$FMTE^XLFDT(SDATE)
"RTN","ECXPHAA",105,0)
 W !,"End Date:   "_$$FMTE^XLFDT(EDATE)
"RTN","ECXPHAA",106,0)
 W !!,?1,"Division",?24,"Date",?39,"Record Count"
"RTN","ECXPHAA",107,0)
 W !,LN
"RTN","ECXPHAA",108,0)
 Q
"RTN","ECXPHAA",109,0)
 ;
"RTN","ECXPHAA",110,0)
GETIDATA ;Get data from pharmacy IVP intermediate files
"RTN","ECXPHAA",111,0)
 ;Init variables
"RTN","ECXPHAA",112,0)
 N DATE,FILE,DFN,ERROR,ON,DA,ECPAT,EC,ENDATE ;161
"RTN","ECXPHAA",113,0)
 S DATE=SDATE-.1,ENDATE=EDATE+.999,FILE=728.113 ;161
"RTN","ECXPHAA",114,0)
 F  S DATE=$O(^ECX(FILE,"A",DATE)) Q:'DATE!(DATE>ENDATE)  D  Q:STOP  ;161
"RTN","ECXPHAA",115,0)
 .S DFN=0 F  S DFN=$O(^ECX(FILE,"A",DATE,DFN)) Q:'DFN  D  Q:STOP
"RTN","ECXPHAA",116,0)
 ..;Filter out test patients or bad records
"RTN","ECXPHAA",117,0)
 ..;patch 142--corrected to not display test patients
"RTN","ECXPHAA",118,0)
 ..S ERROR=$$PAT^ECXNUT(DFN) Q:ERROR
"RTN","ECXPHAA",119,0)
 ..S ON=0 F  S ON=$O(^ECX(FILE,"A",DATE,DFN,ON)) Q:'ON  D  Q:STOP
"RTN","ECXPHAA",120,0)
 ...S DA=0 F  S DA=$O(^ECX(FILE,"A",DATE,DFN,ON,DA)) Q:'DA!(STOP)  D  Q:STOP
"RTN","ECXPHAA",121,0)
 ....I $D(^ECX(728.113,DA,0)) S EC=^(0) D  Q:STOP
"RTN","ECXPHAA",122,0)
 .....;get inpatient data if exist
"RTN","ECXPHAA",123,0)
 .....N MOVEMENT,ADMIT,SPECIAL,WARD,DIVISION,CLINIC ;161
"RTN","ECXPHAA",124,0)
 .....N DIC,DIQ,DR,ECXDIC,DA
"RTN","ECXPHAA",125,0)
 .....S (MOVEMENT,ADMIT,SPECIAL,WARD,DIVISION,CLINIC)="" ;161
"RTN","ECXPHAA",126,0)
 .....S WARD=$$GET1^DIQ(55.01,ON_","_DFN_",",104,"I") ;161 Get ward information from pharmacy order
"RTN","ECXPHAA",127,0)
 .....S:WARD=0 WARD=$$GETWARD ;170 If ward=0, indicating an error in pharmacy, get ward at time of IV
"RTN","ECXPHAA",128,0)
 .....S:WARD=.5 WARD="" S:WARD'="" WARD=WARD_";"_$$GET1^DIQ(42,WARD,.015,"I") ;161 Ward of .5 indicates outpatient
"RTN","ECXPHAA",129,0)
 .....I WARD'="" S DIVISION=$$GETDIV^ECXDEPT($P(WARD,";",2)) ;161
"RTN","ECXPHAA",130,0)
 .....I WARD="" D  Q:STOP  ;161
"RTN","ECXPHAA",131,0)
 ......;Get division from outpatient location file 44
"RTN","ECXPHAA",132,0)
 ......S CLINIC=+$P(EC,U,13)
"RTN","ECXPHAA",133,0)
 ......S DIC="^SC(",DIQ(0)="I",DIQ="ECXDIC",DR="3.5",DA=CLINIC ;161
"RTN","ECXPHAA",134,0)
 ......D EN^DIQ1
"RTN","ECXPHAA",135,0)
 ......S DIVISION=$$GETDIV^ECXDEPT(+$G(ECXDIC(44,CLINIC,3.5,"I"))) ;161
"RTN","ECXPHAA",136,0)
 ......S DIVISION=$S(DIVISION'="":DIVISION,1:"UNKNOWN")
"RTN","ECXPHAA",137,0)
 .....I DIVISION="UNKNOWN",$P(EC,U,15) D  ;161 Section added to get information from IV room if no ward or clinic is available
"RTN","ECXPHAA",138,0)
 ......S DIVISION=$$GETDIV^ECXDEPT($$PSJ59P5^ECXUTL5($P(EC,U,15)))
"RTN","ECXPHAA",139,0)
 .....;Save in temp global and filter division
"RTN","ECXPHAA",140,0)
 .....I '@SCRNARR@("DIVISION")=1&'($D(@SCRNARR@("DIVISION",DIVISION))) Q
"RTN","ECXPHAA",141,0)
 .....S ^TMP($J,"ECXPHAA",$P(DATE,".",1),DIVISION)=$G(^TMP($J,"ECXPHAA",$P(DATE,".",1),DIVISION))+1
"RTN","ECXPHAA",142,0)
 Q
"RTN","ECXPHAA",143,0)
 ;
"RTN","ECXPHAA",144,0)
GETUDATA ;Get unit dose data from intermediate file 728.904
"RTN","ECXPHAA",145,0)
 ;Init variables
"RTN","ECXPHAA",146,0)
 N DATE,FILE,RECORD,DATA,DFN,ERROR,ON,WARD,DIVISION,DIC,DIQ,DR,DA,ECPAT,CLINIC,COUNT,L,ECXDIC,ENDATE ;149,161
"RTN","ECXPHAA",147,0)
 S DATE=SDATE-.1,ENDATE=EDATE+.999,STOP=0 ;161
"RTN","ECXPHAA",148,0)
 S FILE=728.904
"RTN","ECXPHAA",149,0)
 F  S DATE=$O(^ECX(FILE,"A",DATE)) Q:'DATE!(DATE>ENDATE)  D  Q:STOP  ;161
"RTN","ECXPHAA",150,0)
 .S RECORD=0 F  S RECORD=$O(^ECX(FILE,"A",DATE,RECORD)) Q:'RECORD  D  Q:STOP
"RTN","ECXPHAA",151,0)
 ..S DATA=$G(^ECX(FILE,RECORD,0)),DFN=$P(DATA,U,2)
"RTN","ECXPHAA",152,0)
 ..;Filter out test patients or bad records
"RTN","ECXPHAA",153,0)
 ..;patch 142-corrected to not display test patients
"RTN","ECXPHAA",154,0)
 ..S ERROR=$$PAT^ECXNUT(DFN) Q:ERROR
"RTN","ECXPHAA",155,0)
 ..S ON=$P(DATA,U,10),WARD=$P(DATA,U,6)
"RTN","ECXPHAA",156,0)
 ..S DIVISION=$$GETDIV^ECXDEPT($P($G(^DIC(42,+WARD,0)),U,11))
"RTN","ECXPHAA",157,0)
 ..I WARD=""&(ON) D  Q:STOP  ;161
"RTN","ECXPHAA",158,0)
 ...;Get division from outpatient location from file 44
"RTN","ECXPHAA",159,0)
 ...S DIC=55,DIQ(0)="I",DIQ="ECXDIC",DR="62",DR(55.06)="130",DA=DFN
"RTN","ECXPHAA",160,0)
 ...S DA(55.06)=+ON D EN^DIQ1
"RTN","ECXPHAA",161,0)
 ...S CLINIC=+$G(ECXDIC(55.06,+ON,130,"I")) ;161
"RTN","ECXPHAA",162,0)
 ...S DIC="^SC(",DIQ(0)="I",DIQ="ECXDIC",DR=3.5,DA=CLINIC D EN^DIQ1 ;161
"RTN","ECXPHAA",163,0)
 ...S DIVISION=$$GETDIV^ECXDEPT(+$G(ECXDIC(44,CLINIC,3.5,"I"))) ;161
"RTN","ECXPHAA",164,0)
 ...S DIVISION=$S(DIVISION'="":DIVISION,1:"UNKNOWN") K ECXDIC ;161
"RTN","ECXPHAA",165,0)
 ..;Save in temp global and filter division
"RTN","ECXPHAA",166,0)
 ..I '@SCRNARR@("DIVISION")=1&'($D(@SCRNARR@("DIVISION",DIVISION))) Q
"RTN","ECXPHAA",167,0)
 ..S ^TMP($J,"ECXPHAA",$P(DATE,".",1),DIVISION)=$G(^TMP($J,"ECXPHAA",$P(DATE,".",1),DIVISION))+1
"RTN","ECXPHAA",168,0)
 Q
"RTN","ECXPHAA",169,0)
 ;
"RTN","ECXPHAA",170,0)
DETAIL ;Print report
"RTN","ECXPHAA",171,0)
 ;Init variables
"RTN","ECXPHAA",172,0)
 N DATE,DIV,COUNT ;149
"RTN","ECXPHAA",173,0)
 S (DATE,COUNT)=0,DIV="" ;149
"RTN","ECXPHAA",174,0)
 F  S DATE=$O(^TMP($J,"ECXPHAA",DATE)) Q:'DATE!(STOP)  F  S DIV=$O(^TMP($J,"ECXPHAA",DATE,DIV)) Q:DIV=""!(STOP)  S COUNT=^(DIV) D  ;149
"RTN","ECXPHAA",175,0)
 .I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=DIV_U_$$FMTE^XLFDT(DATE)_U_COUNT,CNT=CNT+1 Q  ;149
"RTN","ECXPHAA",176,0)
 .W !,?1,DIV,?20,$$FMTE^XLFDT(DATE),?45,COUNT I $Y>(IOSL-5) D WAIT Q:STOP  D HEADER ;149
"RTN","ECXPHAA",177,0)
 Q
"RTN","ECXPHAA",178,0)
 ;
"RTN","ECXPHAA",179,0)
WAIT ;End of page logic
"RTN","ECXPHAA",180,0)
 ;Input   ; None
"RTN","ECXPHAA",181,0)
 ;Output  ; STOP - Flag indicating if printing should continue
"RTN","ECXPHAA",182,0)
 ;                 1 = Stop     0 = Continue
"RTN","ECXPHAA",183,0)
 ;
"RTN","ECXPHAA",184,0)
 S STOP=0
"RTN","ECXPHAA",185,0)
 ;CRT - Prompt for continue
"RTN","ECXPHAA",186,0)
 I $E(IOST,1,2)="C-"&(IOSL'>24) D  Q
"RTN","ECXPHAA",187,0)
 .F  Q:$Y>(IOSL-3)  W !
"RTN","ECXPHAA",188,0)
 .N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ECXPHAA",189,0)
 .S DIR(0)="E"
"RTN","ECXPHAA",190,0)
 .D ^DIR
"RTN","ECXPHAA",191,0)
 .S STOP=$S(Y'=1:1,1:0)
"RTN","ECXPHAA",192,0)
 ;Background task - check taskman
"RTN","ECXPHAA",193,0)
 S STOP=$$S^%ZTLOAD()
"RTN","ECXPHAA",194,0)
 I STOP D
"RTN","ECXPHAA",195,0)
 .W !,"*********************************************"
"RTN","ECXPHAA",196,0)
 .W !,"*  PRINTING OF REPORT STOPPED AS REQUESTED  *"
"RTN","ECXPHAA",197,0)
 .W !,"*********************************************"
"RTN","ECXPHAA",198,0)
 Q
"RTN","ECXPHAA",199,0)
 ;
"RTN","ECXPHAA",200,0)
GETWARD() ;170 Section added to find ward at time of IV when ward is incorrectly set to 0 in pharmacy
"RTN","ECXPHAA",201,0)
 N EVDT,VAIP,WARDODT ;Ward on d/t
"RTN","ECXPHAA",202,0)
 S EVDT=$P(EC,U,5) ;Get IV date/time
"RTN","ECXPHAA",203,0)
 S VAIP("D")=EVDT
"RTN","ECXPHAA",204,0)
 D IN5^VADPT ;Get inpt information
"RTN","ECXPHAA",205,0)
 S WARDODT=$P(VAIP(5),U) ;IEN of ward
"RTN","ECXPHAA",206,0)
 S:'+WARDODT WARDODT="" ;If ward not found, set it to null
"RTN","ECXPHAA",207,0)
 Q WARDODT
"RTN","ECXPIVD2")
0^15^B11130859^B10281971
"RTN","ECXPIVD2",1,0)
ECXPIVD2 ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ;4/24/18  14:42
"RTN","ECXPIVD2",2,0)
 ;;3.0;DSS EXTRACTS;**105,120,127,144,149,161,166,170**;Dec 22, 1997;Build 12
"RTN","ECXPIVD2",3,0)
FILE ;file record
"RTN","ECXPIVD2",4,0)
 ;node0
"RTN","ECXPIVD2",5,0)
 ;fac^dfn^ssn^name^i/o^day^va class^qty^ward^cost^movement #^treat spec^ndc^investigational^iv dispensing fee^new feeder key^total doses^
"RTN","ECXPIVD2",6,0)
 ;Placehold primary care team^Placehold primary care provider^ivp time^adm date^adm time^dss identifier
"RTN","ECXPIVD2",7,0)
 ;node1
"RTN","ECXPIVD2",8,0)
 ;mpi^placeholder^pc provider npi^Placehold pc prov person class^Placehold assoc pc provider^Placehold assoc pc prov person class^assoc pc prov npi^dom^obs pat ind^enc num^
"RTN","ECXPIVD2",9,0)
 ;ord pr^ordering stop code^ord dt^req phys^nat prod division^means tst^elig^dob^sex^state^county^zip+4^vet^period of svc^pow stat^pow loc^ir stat^ao stat^
"RTN","ECXPIVD2",10,0)
 ;ao loc^purple heart ind.^mst stat^enrollment loc^enrollment cat^enrollment stat^enrollment prior^cnh/sh stat^ord pr npi
"RTN","ECXPIVD2",11,0)
 ;node2
"RTN","ECXPIVD2",12,0)
 ;head & neck cancer ind.^Placehold ethnicity^Placehold race1^bcma drug dispensed^bcma dose given^bcma unit of administration^bcma ICU flag^
"RTN","ECXPIVD2",13,0)
 ;ordering provider person class^^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig ECXCVE^
"RTN","ECXPIVD2",14,0)
 ;combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^emerg resp indic(FEMA) ECXERI^
"RTN","ECXPIVD2",15,0)
 ;environ contamin ECXEST
"RTN","ECXPIVD2",16,0)
 ;^oef/oif ECXOEF^ oef/oif return date ECXOEFDT^Placehold assoc pc prov npi ECASNPI
"RTN","ECXPIVD2",17,0)
 ;^ordering provider npi ECXOPNPI^Placehold primary care provider npi ECPTNPI
"RTN","ECXPIVD2",18,0)
 ;^country ECXCNTRY^PATCAT^Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL ;144
"RTN","ECXPIVD2",19,0)
 ;^Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)
"RTN","ECXPIVD2",20,0)
 ;^ Patient Division (ECXSTANO)  ;tjl 166
"RTN","ECXPIVD2",21,0)
 N DA,DIK
"RTN","ECXPIVD2",22,0)
 S ECPLACE=""
"RTN","ECXPIVD2",23,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPIVD2",24,0)
 I ECXLOGIC>2018 S (ECXETH,ECXRC1,ECPTTM,ECPTPR,ECCLAS,ECASPR,ECCLAS2,ECASNPI,ECPTNPI)="" ;170 Fields will now be null
"RTN","ECXPIVD2",25,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_DFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXPIVD2",26,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECVACL_U_ECXCNT_U_ECXW_U
"RTN","ECXPIVD2",27,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXPIVD2",28,0)
 N ECXDATA
"RTN","ECXPIVD2",29,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXPIVD2",30,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXPIVD2",31,0)
 ;done
"RTN","ECXPIVD2",32,0)
 S ECODE=ECODE_ECXCOST_U_ECXMN_U_ECXTS_U_ECNDC_U_ECINV_U_ECTYP_U_ECNFC_U
"RTN","ECXPIVD2",33,0)
 S ECODE=ECODE_ECST_U_ECPTTM_U_ECPTPR_U_ECDTTM_U_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U_$$ECXTIME^ECXUTL(ECXADM)_U_ECXDSSI_U
"RTN","ECXPIVD2",34,0)
 ;if outpat and not observ patient, admit date="" and admit time="000000"
"RTN","ECXPIVD2",35,0)
 I ECXA="O",(ECXOBS="NO") S $P(ECODE,U,24)="",$P(ECODE,U,25)="000000"
"RTN","ECXPIVD2",36,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECPLACE_U_ECCLAS_U_ECASPR_U_ECCLAS2_U_ECPLACE_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDPR_U
"RTN","ECXPIVD2",37,0)
 S ECODE1=ECODE1_ECXORDST_U_$$ECXDATE^ECXUTL(ECXORDDT,ECXYM)_U_ECXRPHY_U_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U
"RTN","ECXPIVD2",38,0)
 S ECODE1=ECODE1_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXPIVD2",39,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCAT_U
"RTN","ECXPIVD2",40,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_ECXCNHU_U_U
"RTN","ECXPIVD2",41,0)
 S ECODE2=ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXPIVD2",42,0)
 I ECXLOGIC>2003 D
"RTN","ECXPIVD2",43,0)
 .S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXPIVD2",44,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPIVD2",45,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXEST
"RTN","ECXPIVD2",46,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECXOPNPI_U_ECPTNPI
"RTN","ECXPIVD2",47,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXPIVD2",48,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT
"RTN","ECXPIVD2",49,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXPIVD2",50,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXPIVD2",51,0)
 I ECXLOGIC>2017 S ECODE2=ECODE2_U_ECXSTANO  ;166
"RTN","ECXPIVD2",52,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXPIVD2",53,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXPIVD2",54,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXPIVD2",55,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPIVD2",56,0)
 Q
"RTN","ECXPIVDN")
0^20^B64708339^B64028016
"RTN","ECXPIVDN",1,0)
ECXPIVDN ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ;6/29/18  14:48
"RTN","ECXPIVDN",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,33,39,46,49,71,84,96,92,107,105,112,120,127,136,143,144,149,166,170**;Dec 22, 1997;Build 12
"RTN","ECXPIVDN",3,0)
BEG ;entry point from option
"RTN","ECXPIVDN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPIVDN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXPIVDN",6,0)
 Q
"RTN","ECXPIVDN",7,0)
 ;
"RTN","ECXPIVDN",8,0)
START ; start package specific extract
"RTN","ECXPIVDN",9,0)
 N DIC,DA,DR,DIQ,DFN,ECXNPRFI,ECXPHA,ECXESC,ECXECL,ECXCLST ;144
"RTN","ECXPIVDN",10,0)
 N ECXSTANO ;166
"RTN","ECXPIVDN",11,0)
 S QFLG=0
"RTN","ECXPIVDN",12,0)
 I '$D(ECINST) D
"RTN","ECXPIVDN",13,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPIVDN",14,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPIVDN",15,0)
 S ECED=ECED+.3
"RTN","ECXPIVDN",16,0)
 K ^TMP($J,"A"),^TMP($J,"S")
"RTN","ECXPIVDN",17,0)
 S ECD=ECSD1
"RTN","ECXPIVDN",18,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^TMP($J,"S") S ECVOL=0 D  Q:QFLG
"RTN","ECXPIVDN",19,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  Q:QFLG  I $D(^ECX(728.113,DA,0)) S EC=^(0) D  Q:QFLG
"RTN","ECXPIVDN",20,0)
 ..S DRG=$P(EC,U,4) I $P(EC,U,8)]"" D
"RTN","ECXPIVDN",21,0)
 ...I '$D(^TMP($J,"A",DRG)) S ^(DRG)=$P(EC,U,7,8),^(DRG,1)=0,^(2)=$P(EC,U,12)
"RTN","ECXPIVDN",22,0)
 ...S ^(1)=^TMP($J,"A",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",23,0)
 ..I $P(EC,U,9) D
"RTN","ECXPIVDN",24,0)
 ...I '$D(^TMP($J,"S",DRG)) S ^(DRG)=$P(EC,U,9)_"^ML",^(DRG,1)=0,^(2)=$P(EC,U,12),ECVOL=$P(EC,U,9)+ECVOL
"RTN","ECXPIVDN",25,0)
 ...S ^(1)=^TMP($J,"S",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",26,0)
 ..S ECTYP=$P(EC,U,11),ECTOTC=0,ECDTTM=$$ECXTIME^ECXUTL($P(EC,U,5))
"RTN","ECXPIVDN",27,0)
 .;looped thru all DAs for this order - now put it together
"RTN","ECXPIVDN",28,0)
 .;leave the next line in case the decision is made to send volume designations
"RTN","ECXPIVDN",29,0)
 .;I ECTYP="H" S ECTYP=ECTYP_$S(ECVOL'>1000:1,ECVOL'>2000:2,1:3)
"RTN","ECXPIVDN",30,0)
 .S ECXDSSI=""
"RTN","ECXPIVDN",31,0)
 .;loop thru tmp global and call pharmacy drug file (#50) api
"RTN","ECXPIVDN",32,0)
 .F SA="S","A" S DRG="" F  S DRG=$O(^TMP($J,SA,DRG)) Q:DRG=""  S ECXPHA="",ECXPHA=$$PHAAPI^ECXUTL5(DRG) I $P(ECXPHA,U)'="" D STUFF Q:QFLG
"RTN","ECXPIVDN",33,0)
 K ^TMP($J),CLIN,DA,DFN,DIC,DIK,DRG,ON,SA,X,Y,P1,P3
"RTN","ECXPIVDN",34,0)
 Q
"RTN","ECXPIVDN",35,0)
STUFF ;get data
"RTN","ECXPIVDN",36,0)
 N ECORDST,ECXASIH ;170
"RTN","ECXPIVDN",37,0)
 S ECXERR=0 D PAT(DFN,$P(EC,U,5),.ECXERR) ;166 get patient information
"RTN","ECXPIVDN",38,0)
 Q:ECXERR  ;166 Quit if issue with patient
"RTN","ECXPIVDN",39,0)
 S ECST=^TMP($J,SA,DRG),ECXCNT=^(DRG,1),ECXCOST=^(2),ECVACL=$P(ECXPHA,U,2),ECORDST=""
"RTN","ECXPIVDN",40,0)
 ;if older logic, use incorrect calculation for cost **136
"RTN","ECXPIVDN",41,0)
 I ECXLOGIC<2013 S ECXCOST=ECXCOST*ECXCNT
"RTN","ECXPIVDN",42,0)
 ;S ECST=^TMP($J,SA,DRG),ECXCNT=^(DRG,1),ECXCOST=^(2),ECXCOST=ECXCOST*ECXCNT,ECVACL=$P(ECXPHA,U,2),ECORDST="",ECTI="" removed old cost calc **136
"RTN","ECXPIVDN",43,0)
 ;if outpatient get division from iv rm; get dss identifier for clinic
"RTN","ECXPIVDN",44,0)
 I ECXA="O" D
"RTN","ECXPIVDN",45,0)
 .;- Only set ward to .5 if outpatient (but NOT observation patient)
"RTN","ECXPIVDN",46,0)
 .I $G(ECXW)="" S ECXW=.5
"RTN","ECXPIVDN",47,0)
 .I $P(EC,U,15) S ECIVRM=$P(EC,U,15),ECXDIV=$$PSJ59P5^ECXUTL5(ECIVRM)
"RTN","ECXPIVDN",48,0)
 .S CLIN=+$P(EC,U,13),(ECXP1,ECXP2)="000",ECXCL=$G(^ECX(728.44,CLIN,0)) Q:ECXCL=""
"RTN","ECXPIVDN",49,0)
 .S ECSC=$P(ECXCL,U,4),ECCSC=$P(ECXCL,U,5)
"RTN","ECXPIVDN",50,0)
 .I ECSC="" S ECSC=$P(ECXCL,U,2),ECCSC=$P(ECXCL,U,3)
"RTN","ECXPIVDN",51,0)
 .I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXPIVDN",52,0)
 .I ECSC="" S ECSC=$P($G(^SC(ECXCL,0)),U,7),ECCSC=$P($G(^SC(ECXCL,0)),U,18) I ECSC D
"RTN","ECXPIVDN",53,0)
 ..S ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2) S:ECCSC]"" ECXP2=$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXPIVDN",54,0)
 ..S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXPIVDN",55,0)
 .S ECXDSSI=ECXP1_ECXP2
"RTN","ECXPIVDN",56,0)
 .I ECXLOGIC>2003 D
"RTN","ECXPIVDN",57,0)
 ..I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECXDSSI=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXPIVDN",58,0)
 S ECINV=$P(ECXPHA,U,4),ECST=ECXCNT*ECST_" "_$P(ECST,U,2)
"RTN","ECXPIVDN",59,0)
  ;New way to calculate cost dea spl hndlg **136 upd precedence **144
"RTN","ECXPIVDN",60,0)
 I ECXLOGIC>2012 S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"") D
"RTN","ECXPIVDN",61,0)
 .; Update cost calculation use exist cost x quant x count
"RTN","ECXPIVDN",62,0)
 .S ECXCOST=+ECST*ECXCOST ;143
"RTN","ECXPIVDN",63,0)
 ; old method of dea spl hndlg **136
"RTN","ECXPIVDN",64,0)
 I ECXLOGIC<2013 S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXPIVDN",65,0)
 S ECNDC=$P(ECXPHA,U,3),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXPIVDN",66,0)
 I ECNDC["LCL" S ECNDC="" ;170 Reset NDC to null if it's missing from file 50
"RTN","ECXPIVDN",67,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6)
"RTN","ECXPIVDN",68,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXPIVDN",69,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXPIVDN",70,0)
 ;- Ordering provider ("2"_provider)
"RTN","ECXPIVDN",71,0)
 S ECXORDPR=$S(+$P(EC,U,10):"2"_$P(EC,U,10),1:"")
"RTN","ECXPIVDN",72,0)
 N ECXUSRTN
"RTN","ECXPIVDN",73,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$P(EC,U,10),$P(EC,U,16))
"RTN","ECXPIVDN",74,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECXOPNPI=$P(ECXUSRTN,U)
"RTN","ECXPIVDN",75,0)
 S ECXORDDT=$P(EC,U,16) ;- Ordering date
"RTN","ECXPIVDN",76,0)
 ;- Requesting physician (null for FY2002)
"RTN","ECXPIVDN",77,0)
 S ECXRPHY=""
"RTN","ECXPIVDN",78,0)
 ;- Department and National Prod Division
"RTN","ECXPIVDN",79,0)
 S ECXDSSD="" ;dss department use postponed $$IVP^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",80,0)
 N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",81,0)
 I ECXA="O" S ECXSTANO=ECXPDIV ;tjl 166  For outpatients, set Station Number to Prod Div Code
"RTN","ECXPIVDN",82,0)
 ;- Observation patient indicator (yes/no)
"RTN","ECXPIVDN",83,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXDSSI)
"RTN","ECXPIVDN",84,0)
 ; - Ordering Date, Ordering Stop Code
"RTN","ECXPIVDN",85,0)
 S ECXORDST="" S:ECXA="O" ECXORDST=$$DOIVPO^ECXUTL5(DFN,ON) S ECORDST=ECXORDST ;170
"RTN","ECXPIVDN",86,0)
 ;- If no encounter number don't file record
"RTN","ECXPIVDN",87,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ECD,ECXTS,ECXOBS,ECHEAD,ECORDST,)
"RTN","ECXPIVDN",88,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)="" ;144 BCMA fields are place holder now
"RTN","ECXPIVDN",89,0)
 ;get ordering provider person class
"RTN","ECXPIVDN",90,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXORDPR,2,999),ECXORDDT)
"RTN","ECXPIVDN",91,0)
 ;set national patient record flag if exist
"RTN","ECXPIVDN",92,0)
 S ECXDFN=DFN D NPRF^ECXUTL5 K ECXDFN
"RTN","ECXPIVDN",93,0)
 I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXPIVDN",94,0)
 D:ECXENC'="" FILE^ECXPIVD2 K P1,P3
"RTN","ECXPIVDN",95,0)
 Q
"RTN","ECXPIVDN",96,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographics, primary care, and inpatient data
"RTN","ECXPIVDN",97,0)
 N X
"RTN","ECXPIVDN",98,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXPIVDN",99,0)
 ;get patient data if saved
"RTN","ECXPIVDN",100,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXPIVDN",101,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2),ECXMPI=$P(PT,U,3)
"RTN","ECXPIVDN",102,0)
 .S ECXDOB=$P(PT,U,4),ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6),ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXPIVDN",103,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12),ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXPIVDN",104,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18),ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXPIVDN",105,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24),ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXPIVDN",106,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4),ECXCNTRY=$P(PT1,U,5)
"RTN","ECXPIVDN",107,0)
 .S ECXSHADI=$P(PT1,U,6),ECXPATCAT=$P(PT1,U,7)
"RTN","ECXPIVDN",108,0)
 .S ECXCLST=$P(PT1,U,8),ECXESC=$P(PT1,U,9),ECXECL=$P(PT1,U,10) ;144
"RTN","ECXPIVDN",109,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",110,0)
 ;set patient data
"RTN","ECXPIVDN",111,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXPIVDN",112,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXPIVDN",113,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXPIVDN",114,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXPIVDN",115,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET"),ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXPIVDN",116,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXPIVDN",117,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL"),ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXPIVDN",118,0)
 .S ECXCLST=ECXPAT("CL STAT"),ECXESC="",ECXECL="" ;144
"RTN","ECXPIVDN",119,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS"),ECXEST=ECXPAT("EC STAT")
"RTN","ECXPIVDN",120,0)
 .S ECXSVCI=ECXPAT("COMBSVCI"),ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXPIVDN",121,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN) ;get CNHU status
"RTN","ECXPIVDN",122,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXPIVDN",123,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",124,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN) ;Head and Neck Cancer Indicator
"RTN","ECXPIVDN",125,0)
 .S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN) ;PROJ 112/SHAD Indicator
"RTN","ECXPIVDN",126,0)
 .S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)  ; PATCH 127, ADD PATCAT CODE 
"RTN","ECXPIVDN",127,0)
 .; - Race and Ethnicity
"RTN","ECXPIVDN",128,0)
 .S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1")
"RTN","ECXPIVDN",129,0)
 .S ECXERI=ECXPAT("ERI") ;emergency response indicator (FEMA)
"RTN","ECXPIVDN",130,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXPIVDN",131,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXPIVDN",132,0)
 .;save for later
"RTN","ECXPIVDN",133,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXPIVDN",134,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXPIVDN",135,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXCNTRY_U_ECXSHADI_U_ECXPATCAT_U_ECXCLST_U_ECXESC_U_ECXECL_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXPIVDN",136,0)
 ;get primary care data
"RTN","ECXPIVDN",137,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXPIVDN",138,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXPIVDN",139,0)
 ;get inpatient data
"RTN","ECXPIVDN",140,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW,ECXDIV)="",X=$$INP^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXPIVDN",141,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";"),ECXDIV=$P(W,";",2),ECXASIH=$P(X,U,14) ;170
"RTN","ECXPIVDN",142,0)
 I ECXA="I" S ECXSTANO=$$GETDIV^ECXDEPT(ECXDIV)  ;tjl 166  For inpatients, get Station Number based on Ward
"RTN","ECXPIVDN",143,0)
 Q
"RTN","ECXPIVDN",144,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPIVDN",145,0)
 S ECHEAD="IVP"
"RTN","ECXPIVDN",146,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPIVDN",147,0)
 ;variables ecver and ecrtn will be reset in routine ecxtrac if appropriate
"RTN","ECXPIVDN",148,0)
 S ECVER=7
"RTN","ECXPIVDN",149,0)
 Q
"RTN","ECXPIVDN",150,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPIVDN",151,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPRO")
0^12^B54041445^B51537210
"RTN","ECXPRO",1,0)
ECXPRO ;ALB/GTS - Prosthetics Extract for DSS ;6/29/18  15:15
"RTN","ECXPRO",2,0)
 ;;3.0;DSS EXTRACTS;**9,13,15,21,24,33,39,46,71,92,105,120,127,132,136,144,149,154,161,166,169,170**;Dec 22, 1997;Build 12
"RTN","ECXPRO",3,0)
BEG ;entry point from option
"RTN","ECXPRO",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPRO",5,0)
 D:+ECINST>0 ^ECXTRAC D ^ECXKILL
"RTN","ECXPRO",6,0)
 Q
"RTN","ECXPRO",7,0)
 ;
"RTN","ECXPRO",8,0)
START ;start package specific extract
"RTN","ECXPRO",9,0)
 ;
"RTN","ECXPRO",10,0)
 ; Input
"RTN","ECXPRO",11,0)
 ;  ECSD1   - FM formatted Beginning Date (Set by ECXTRAC)
"RTN","ECXPRO",12,0)
 ;  ECED    - FM formatted End Date (Set by ECXTRAC)
"RTN","ECXPRO",13,0)
 ;  ECSDN   - Externally formatted Start Date (Set by ECXTRAC)
"RTN","ECXPRO",14,0)
 ;  ECEDN   - Externally formatted End Date (Set by ECXTRAC)
"RTN","ECXPRO",15,0)
 ;  EC      - IEN from file #727 (Set by ECXTRAC)
"RTN","ECXPRO",16,0)
 ;  ECXYM   - Year and Month of extract (YYYYMM)
"RTN","ECXPRO",17,0)
 ;  ECXINST - IEN for division in file #4
"RTN","ECXPRO",18,0)
 ;  ECINST  - Station number of selected division
"RTN","ECXPRO",19,0)
 ;
"RTN","ECXPRO",20,0)
 N ECXLNE,ECXCT,ECXDACT,ECX0,ECXLB,ECXED1,ECINSTSV,ECXLNSTR,ECXP
"RTN","ECXPRO",21,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104
"RTN","ECXPRO",22,0)
 N DIC,DR,DA,DIQ,CPTCODE,ECXNPRFI
"RTN","ECXPRO",23,0)
 N ECXESC,ECXCLST,ECXECL,ECXUI,ECXASIH ;144,166,170
"RTN","ECXPRO",24,0)
 D ECXBUL^ECXPRO2(.ECXLNE,ECSDN,ECEDN,EC)
"RTN","ECXPRO",25,0)
 S QFLG=0,ECXLNSTR=ECXLNE,ECXED1=ECED+.9999,ECXCT=ECSD1
"RTN","ECXPRO",26,0)
 F  S ECXCT=$O(^RMPR(660,"CT",ECXCT)) Q:(ECXCT>ECXED1)!('ECXCT)!(QFLG=1)  D
"RTN","ECXPRO",27,0)
 .S ECXDACT=0
"RTN","ECXPRO",28,0)
 .F  S ECXDACT=$O(^RMPR(660,"CT",ECXCT,ECXDACT)) Q:('ECXDACT)!(QFLG=1)  D
"RTN","ECXPRO",29,0)
 ..;* initialize variables
"RTN","ECXPRO",30,0)
 ..S (ECXDFN,ECXPNM,ECXSSN,ECXSEX,ECXSTAT,ECXDATE,ECXTYPE,ECXSRCE)=""
"RTN","ECXPRO",31,0)
 ..S (ECXHCPCS,ECXPHCPC,ECXRQST,ECXRCST,ECXFORM,ECXCTAMT,ECXLLC)=""
"RTN","ECXPRO",32,0)
 ..S (ECXLMC,ECXGRPR,ECXBILST,ECXQTY,ECXFELOC,ECXFEKEY,ECXA,ECXLH,ECXLC,ECXMC)=""
"RTN","ECXPRO",33,0)
 ..S (ECPTTM,ECPTPR,ECXAST,ECXRST,ECXEST,ECXELIG,ECXVET,ECXZIP,ECXVNS,ECXCLST)="" ;144
"RTN","ECXPRO",34,0)
 ..S (ECXDOB,ECXDSSD,ECXICD9,ECXICD10P,ECXAOL,ECXHNCI,ECXSHADI,ECXETH,ECXRC1,ECXMST)=""
"RTN","ECXPRO",35,0)
 ..F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXPRO",36,0)
 ..F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXPRO",37,0)
 ..Q:'$D(^RMPR(660,ECXDACT,0))
"RTN","ECXPRO",38,0)
 ..S ECX0=^RMPR(660,ECXDACT,0),ECXLB=$G(^RMPR(660,ECXDACT,"LB"))
"RTN","ECXPRO",39,0)
 ..K ECXP S DIC="^RMPR(660,",DR=".02;11;45",DA=ECXDACT,DIQ(0)="EI"
"RTN","ECXPRO",40,0)
 ..S DIQ="ECXP" D EN^DIQ1
"RTN","ECXPRO",41,0)
 ..S ECXDIV=$$GET1^DIQ(660,ECXDACT,8,"I")
"RTN","ECXPRO",42,0)
 ..S ECXDFN=$G(ECXP(660,ECXDACT,.02,"I"))
"RTN","ECXPRO",43,0)
 ..S ECXFORM=$G(ECXP(660,ECXDACT,11,"E"))_U_$G(ECXP(660,ECXDACT,11,"I"))
"RTN","ECXPRO",44,0)
 ..S ECXLH=$G(ECXP(660,ECXDACT,45,"I"))
"RTN","ECXPRO",45,0)
 ..S ECXUI=$$GET1^DIQ(660,ECXDACT,78) ;166 get unit of issue
"RTN","ECXPRO",46,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXCT)
"RTN","ECXPRO",47,0)
 ..S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT)
"RTN","ECXPRO",48,0)
 ..I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXPRO",49,0)
 ..;OEF/OIF data
"RTN","ECXPRO",50,0)
 ..S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXPRO",51,0)
 ..S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXPRO",52,0)
 ..S ECXVNS=ECXPAT("VIETNAM") ; 144 VIETNAM STATUS
"RTN","ECXPRO",53,0)
 ..S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXPRO",54,0)
 ..S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXPRO",55,0)
 ..S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXPRO",56,0)
 ..Q:'$$NTEG^ECXPRO1(ECXDFN,.ECXLNE,ECXDACT,ECX0,ECXLB,ECINST,ECXFORM)
"RTN","ECXPRO",57,0)
 ..D PROSINFO^ECXPRO1(ECXDACT,ECXLB,ECX0,ECXFORM)
"RTN","ECXPRO",58,0)
 ..S CPTCODE=$E(ECXHCPCS,1,5)
"RTN","ECXPRO",59,0)
 ..;nppd entry date
"RTN","ECXPRO",60,0)
 ..S ECXNPPDT=$$ECXDATE^ECXUTL($P(ECX0,U,1),ECXYM)
"RTN","ECXPRO",61,0)
 ..;
"RTN","ECXPRO",62,0)
 ..;Get production division ;p-46
"RTN","ECXPRO",63,0)
 ..N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXPRO",64,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXPRO",65,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXPRO",66,0)
 ..;
"RTN","ECXPRO",67,0)
 ..;- CNH status (YES/NO)
"RTN","ECXPRO",68,0)
 ..S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXPRO",69,0)
 ..;
"RTN","ECXPRO",70,0)
 ..;get encounter classifications
"RTN","ECXPRO",71,0)
 ..S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR,ECXSHAD,ECXESC,ECXECL)="" ;144
"RTN","ECXPRO",72,0)
 ..S ECXVISIT=$$GET1^DIQ(660,ECXDACT,8.12,"I") I ECXVISIT'="" D
"RTN","ECXPRO",73,0)
 ...D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXPRO",74,0)
 ...S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXPRO",75,0)
 ...S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXPRO",76,0)
 ...S ECXESC=ECXVIST("ENCSC"),ECXECL=ECXVIST("ENCCL") ;144
"RTN","ECXPRO",77,0)
 ..; - Head and Neck Cancer Indicator
"RTN","ECXPRO",78,0)
 ..S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXPRO",79,0)
 ..;
"RTN","ECXPRO",80,0)
 ..; - Proj 112/SHAD Indicator
"RTN","ECXPRO",81,0)
 ..S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXPRO",82,0)
 ..;
"RTN","ECXPRO",83,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE  ********
"RTN","ECXPRO",84,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXPRO",85,0)
 ..; - set national patient record flag if exist
"RTN","ECXPRO",86,0)
 ..D NPRF^ECXUTL5
"RTN","ECXPRO",87,0)
 ..;
"RTN","ECXPRO",88,0)
 ..;- If no encounter number don't file record
"RTN","ECXPRO",89,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXPRO",90,0)
 ..I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXPRO",91,0)
 ..I ECXFORM["-3" F ECXLAB="LAB","ORD" D
"RTN","ECXPRO",92,0)
 ...S ECINSTSV=ECXRQST I ECINSTSV="" S ECINSTSV=ECXPDIV  ;166,169 tjl
"RTN","ECXPRO",93,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXPRO",94,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",95,0)
 ..I ECXFORM'["-3" S ECXLAB="NONL" D
"RTN","ECXPRO",96,0)
 ...S ECINSTSV=ECXSTAT2 I ECINSTSV="" S ECINSTSV=ECXPDIV  ;166,169 tjl
"RTN","ECXPRO",97,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB,ECXNPPDC)
"RTN","ECXPRO",98,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",99,0)
 ;* Send the Exception message
"RTN","ECXPRO",100,0)
 I ECXLNSTR<ECXLNE DO
"RTN","ECXPRO",101,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXPRO",102,0)
 .S XMDUZ=.5
"RTN","ECXPRO",103,0)
 .S XMSUB=ECINST_" - Prosthetics DSS Exception Message",XMN=0
"RTN","ECXPRO",104,0)
 .S XMTEXT="^TMP(""ECX-PRO EXC"",$J,"
"RTN","ECXPRO",105,0)
 .D ^XMD
"RTN","ECXPRO",106,0)
 K ^TMP("ECX-PRO EXC",$J),XMDUZ,XMSUB,XMTEXT,XMY,XMN
"RTN","ECXPRO",107,0)
 Q
"RTN","ECXPRO",108,0)
 ;
"RTN","ECXPRO",109,0)
FILE ;file extract record
"RTN","ECXPRO",110,0)
 ;node0
"RTN","ECXPRO",111,0)
 ;facility^dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^in/out (ECXA)^
"RTN","ECXPRO",112,0)
 ;day^feeder location^
"RTN","ECXPRO",113,0)
 ;feeder key^qty^Placehold pc team^Placehold pc provider^hcpcs^Placeholder (ECXICD9)^
"RTN","ECXPRO",114,0)
 ;Placeholder (ECXICD91)^Placeholder (ECXICD92)^Placeholder (ECXICD93)^
"RTN","ECXPRO",115,0)
 ;Placeholder (ECXICD94)^agent orange^radiation^env contam^eligibility^
"RTN","ECXPRO",116,0)
 ;cost^lab labor cost^lab matl cost^billing status^
"RTN","ECXPRO",117,0)
 ;vet^transaction type^req station^rec station^file#661.1 ien
"RTN","ECXPRO",118,0)
 ;node1
"RTN","ECXPRO",119,0)
 ;zip^dob^sex^amis grouper^placeholder^mpi^placeholder ECXDSSD^
"RTN","ECXPRO",120,0)
 ;Placehold pc prov person class^race^pow status^pow loc^
"RTN","ECXPRO",121,0)
 ;sharing agree payor^sharing agree ins^mst status^
"RTN","ECXPRO",122,0)
 ;enroll loc^state^county^Placehold assoc pc provider^
"RTN","ECXPRO",123,0)
 ;Placehold assoc pc prov person class^placeholder
"RTN","ECXPRO",124,0)
 ;dom (ECXDOM)^purple heart indicator (ECXPHI)^
"RTN","ECXPRO",125,0)
 ;enrollment Category (ECXCAT)^enrollment status (ECXSTAT)^
"RTN","ECXPRO",126,0)
 ;enrollment priority (ECXPRIOR)^purple heart ind (ECXPHI)^
"RTN","ECXPRO",127,0)
 ;period of serv (ECXPOS)^observ pat ind (ECXOBS)^encounter num (ECXENC)^
"RTN","ECXPRO",128,0)
 ;ao loc (ECXAOL)^CNH status (ECXCNH)^production division ECXPDIV^
"RTN","ECXPRO",129,0)
 ;head & neck canc. ind. (ECXHNCI)^Placehold ethnicity (ECXETH)^Placehold race1 (ECXRC1)^
"RTN","ECXPRO",130,0)
 ;^enrollment priority (ECXPRIOR)_enrollment sub-
"RTN","ECXPRO",131,0)
 ;group (ECXSBGRP)^user enrollee (ECXUESTA)^patient type ECXPTYPE
"RTN","ECXPRO",132,0)
 ;^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv
"RTN","ECXPRO",133,0)
 ;eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXPRO",134,0)
 ;emergency response indicator(FEMA) ECXERI^agent orange indicator ECXAO
"RTN","ECXPRO",135,0)
 ;^environ contam ECXECE^head/neck cancer ECXHNC^encntr mst ECXMIL^
"RTN","ECXPRO",136,0)
 ;radiation ECXIR
"RTN","ECXPRO",137,0)
 ;NODE2
"RTN","ECXPRO",138,0)
 ;OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^
"RTN","ECXPRO",139,0)
 ;nppd code ECXNPPDC^nppd entry date ECXNPPDT
"RTN","ECXPRO",140,0)
 ;Placehold assoc pc provider npi ECASNPI^Placehold primary care provider npi ECPTNPI^
"RTN","ECXPRO",141,0)
 ;country ECXCNTRY^shad indicator ECXSHADI^shad encounter ECXSHAD^
"RTN","ECXPRO",142,0)
 ;labor hours ECXLH^
"RTN","ECXPRO",143,0)
 ;PATCAT^EXCPATCAT^
"RTN","ECXPRO",144,0)
 ;primary ICD-10 code (currently null)ECXICD10P^Secondary ICD-10 Code #1 (currently null)ECXICD101^
"RTN","ECXPRO",145,0)
 ;Secondary ICD-10 Code #2 (currently null)ECXICD102^Secondary ICD-10 Code #3 (currently null)ECXICD103^
"RTN","ECXPRO",146,0)
 ;Secondary ICD-10 Code #4 (currently null)ECXICD104^Encounter SC ECXEXC^Vietnam Status ECXVNS^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL^
"RTN","ECXPRO",147,0)
 ;Combat Service Indicator (ECXSVCI)^Combat Service Location (ECXSVCL)^
"RTN","ECXPRO",148,0)
 ;Form Requested On (ECXFORM)^Unit of Issue (ECXUI)
"RTN","ECXPRO",149,0)
 N DA,DIK
"RTN","ECXPRO",150,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPRO",151,0)
 I ECXLOGIC>2018 S (ECXRACE,ECXETH,ECXRC1,ECPTTM,ECPTPR,ECCLAS,ECASPR,ECCLAS2,ECASNPI,ECPTNPI)="" ;170 Fields will now be null
"RTN","ECXPRO",152,0)
 S ECODE=EC7_U_EC23_U_ECINSTSV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U  ;169 tjl
"RTN","ECXPRO",153,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXFELOC_U
"RTN","ECXPRO",154,0)
 S ECODE=ECODE_ECXFEKEY_U_ECXQTY_U_ECPTTM_U_ECPTPR_U_ECXHCPCS_U
"RTN","ECXPRO",155,0)
 S ECODE=ECODE_ECXICD9_U_ECXICD91_U_ECXICD92_U_ECXICD93_U_ECXICD94_U
"RTN","ECXPRO",156,0)
 S ECODE=ECODE_ECXAST_U_ECXRST_U_ECXEST_U_ECXELIG_U_ECXCTAMT_U_ECXLLC_U
"RTN","ECXPRO",157,0)
 S ECODE=ECODE_ECXLMC_U_ECXBILST_U_ECXVET_U_ECXTYPE_U_ECXRQST_U_ECXRCST_U
"RTN","ECXPRO",158,0)
 S ECODE=ECODE_ECXPHCPC_U
"RTN","ECXPRO",159,0)
 S ECODE1=ECXZIP_U_ECXDOB_U_ECXSEX_U_ECXGRPR_U_U_ECXMPI_U
"RTN","ECXPRO",160,0)
 S ECODE1=ECODE1_ECXDSSD_U_ECCLAS_U_ECXRACE_U_ECXPST_U_ECXPLOC_U
"RTN","ECXPRO",161,0)
 S ECODE1=ECODE1_U_U_ECXMST_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXPRO",162,0)
 S ECODE1=ECODE1_ECXCNTY_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U
"RTN","ECXPRO",163,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXPOS_U
"RTN","ECXPRO",164,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXPRO",165,0)
 S ECODE1=ECODE1_ECXHNCI_U_ECXETH_U_ECXRC1_U
"RTN","ECXPRO",166,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPRO",167,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXPRO",168,0)
 I ECXLOGIC>2007 S ECODE2=ECXOEF_U_ECXOEFDT_U_ECXNPPDC_U_ECXNPPDT_U_ECASNPI_U_ECPTNPI
"RTN","ECXPRO",169,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXPRO",170,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXSHADI_U_ECXSHAD_U_ECXLH_U_ECXPATCAT
"RTN","ECXPRO",171,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U_ECXICD104
"RTN","ECXPRO",172,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXVNS_U_ECXCLST_U_ECXECL ;144
"RTN","ECXPRO",173,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXPRO",174,0)
 I ECXLOGIC>2015 S ECODE2=ECODE2_U_$P(ECXFORM,U,2) ;154
"RTN","ECXPRO",175,0)
 I ECXLOGIC>2017 S ECODE2=ECODE2_U_$G(ECXUI) ;166
"RTN","ECXPRO",176,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXPRO",177,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXPRO",178,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPRO",179,0)
 Q
"RTN","ECXPRO",180,0)
 ;
"RTN","ECXPRO",181,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPRO",182,0)
 S ECHEAD="PRO"
"RTN","ECXPRO",183,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPRO",184,0)
 S ECINST=$$PDIV^ECXPUTL
"RTN","ECXPRO",185,0)
 Q
"RTN","ECXPRO",186,0)
 ;
"RTN","ECXPRO",187,0)
 ;**Note: LOCAL and QUE are carry over from protocols set by other
"RTN","ECXPRO",188,0)
 ;        routines.
"RTN","ECXPRO",189,0)
LOCAL ;to extract nightly for local use not to be transmitted to TSI
"RTN","ECXPRO",190,0)
 ;QUEUE with 1D frequency
"RTN","ECXPRO",191,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXPRO",192,0)
 ;
"RTN","ECXPRO",193,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPRO",194,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPROMR")
0^1^B12457652^B12318192
"RTN","ECXPROMR",1,0)
ECXPROMR ;ALB/DAN Prosthetics Montly Rental report ;2/13/18  08:46
"RTN","ECXPROMR",2,0)
 ;;3.0;DSS EXTRACTS;**166,170**;Dec 22, 1997;Build 12
"RTN","ECXPROMR",3,0)
 ;
"RTN","ECXPROMR",4,0)
 N ECXPORT,DIOBEG,FLDS,BY,DIC,L,%ZIS,POP,IOP,ION,IOM,IOSL,DIRUT,DUOUT,DTOUT,X,ECXSD,ECXED,DIR,Y
"RTN","ECXPROMR",5,0)
 W !!,"This report will identify all prosthetic monthly rental items over a user",!,"selected time frame.  Enter the delivery start and end dates for the report.",!
"RTN","ECXPROMR",6,0)
 D GETDATE
"RTN","ECXPROMR",7,0)
 I '$D(ECXSD)!('$D(ECXED)) Q  ;No dates selected for sort
"RTN","ECXPROMR",8,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1
"RTN","ECXPROMR",9,0)
 S FR=ECXSD,TO=ECXED
"RTN","ECXPROMR",10,0)
 S DIC="^RMPR(660,",L=0
"RTN","ECXPROMR",11,0)
 S BY="[ECX PRO RENTAL SORT"
"RTN","ECXPROMR",12,0)
 S FLDS="[ECX PRO RENTAL "_$S(ECXPORT:"EXPORT",1:"PRINT")
"RTN","ECXPROMR",13,0)
 I 'ECXPORT S DIOBEG="W @IOF" D EN1^DIP Q
"RTN","ECXPROMR",14,0)
 ;User wants report in exportable format
"RTN","ECXPROMR",15,0)
 I ECXPORT D
"RTN","ECXPROMR",16,0)
 .W !!,"To ensure all data is captured during the export:" ;144
"RTN","ECXPROMR",17,0)
 .W !!,"1. Select 'Logging...' from the File Menu. Select your file, and where to save." ;144
"RTN","ECXPROMR",18,0)
 .W !,"2. On the Setup menu, select 'Display...',then 'screen' tab and modify 'columns'",!,"   setting to at least 225 characters." ;144
"RTN","ECXPROMR",19,0)
 .W !,"3. The DEVICE input for the columns should also contain a large enough",!,"   parameter (e.g. 225).  The DEVICE prompt is defaulted to 0;225;99999 for you.",!,"   You may change it if need be." ;144
"RTN","ECXPROMR",20,0)
 .W !,"Example: DEVICE: 0;225;99999 *Where 0 is your screen, 225 is the margin width",!?17,"and 99999 is the screen length."
"RTN","ECXPROMR",21,0)
 .W !!,"NOTE:  In order for all number fields, such as SSN and Feeder Key, to be",!,"displayed correctly in the spreadsheet, these fields must be formatted as Text",!,"when importing the data into the spreadsheet.",! ;144
"RTN","ECXPROMR",22,0)
 .S DIOBEG="W ""PATIENT NAME^QUANTITY^PSAS HCPCS^INITIATOR^ITEM DESCRIPTION""" ;170
"RTN","ECXPROMR",23,0)
 .S %ZIS="N",%ZIS("B")="0;225;99999" D ^%ZIS Q:POP  S IOP=ION_";"_IOM_";"_IOSL
"RTN","ECXPROMR",24,0)
 .D EN1^DIP
"RTN","ECXPROMR",25,0)
 .Q
"RTN","ECXPROMR",26,0)
 D HOME^%ZIS
"RTN","ECXPROMR",27,0)
 Q
"RTN","ECXPROMR",28,0)
 ;
"RTN","ECXPROMR",29,0)
GETDATE ;Get starting and ending date for sort
"RTN","ECXPROMR",30,0)
 S DIR(0)="DO^::AEX",DIR("A")="Enter starting delivery date",DIR("?")="Enter date to begin searching from" D ^DIR Q:$D(DIRUT)  S ECXSD=Y
"RTN","ECXPROMR",31,0)
 S DIR(0)="DOA^"_ECXSD_"::AEX",DIR("A")="Enter ending delivery date: ",DIR("?")="Enter date to stop searching.  Must be after "_$$FMTE^XLFDT(ECXSD,2) D ^DIR Q:$D(DIRUT)
"RTN","ECXPROMR",32,0)
 S ECXED=Y
"RTN","ECXPROMR",33,0)
 Q
"RTN","ECXQSR")
0^33^B75027967^B74604579
"RTN","ECXQSR",1,0)
ECXQSR ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ;6/29/18  15:10
"RTN","ECXQSR",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,26,24,34,33,35,39,43,46,49,64,71,84,92,106,105,120,124,127,132,136,144,154,161,166,170**;Dec 22, 1997;Build 12
"RTN","ECXQSR",3,0)
BEG ;entry point from option
"RTN","ECXQSR",4,0)
 I '$O(^ACK(509850.8,0)) W !,"You must be using the Quality Audiology & Speech Pathology",!,"Audit & Review (QUASAR) software to run this extract.",!! Q
"RTN","ECXQSR",5,0)
 I '$D(^ACK(509850.8,1,"DSS")) W !,"Linkage has not been established between QUASAR and the DSS UNIT file (#724).",!! Q
"RTN","ECXQSR",6,0)
 I '$O(^ACK(509850.6,0)) W !,"There is no data in the A&SP CLINIC VISIT file (#509850.6).",!! Q
"RTN","ECXQSR",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXQSR",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXQSR",9,0)
 Q
"RTN","ECXQSR",10,0)
START ;entry point from tasked job
"RTN","ECXQSR",11,0)
 N ERR,ECXQDT,ECXNPRFI
"RTN","ECXQSR",12,0)
 S QFLG=0,ECED=ECED+.9,ECD=ECSD1,ECXQV=""
"RTN","ECXQSR",13,0)
 D QINST I $D(ERR) Q
"RTN","ECXQSR",14,0)
 S ECL=+^ACK(509850.8,1,0),ECLINK=^ACK(509850.8,1,"DSS")
"RTN","ECXQSR",15,0)
 F  S ECD=$O(^ACK(509850.6,"B",ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)!(QFLG)  D
"RTN","ECXQSR",16,0)
 .I +ECXQV=3,ECD<ECXQDT S ECXQV=2.0
"RTN","ECXQSR",17,0)
 .F  S ECDA=$O(^ACK(509850.6,"B",ECD,ECDA)) Q:'ECDA  D UPDATE Q:QFLG
"RTN","ECXQSR",18,0)
 Q
"RTN","ECXQSR",19,0)
QINST ;Get installed information for QUASAR
"RTN","ECXQSR",20,0)
 N ARR,IENS,QVIEN,INTIEN
"RTN","ECXQSR",21,0)
 S ECXQDT=""
"RTN","ECXQSR",22,0)
 D FILE^DID(509850.6,,"VERSION","ARR","ERR")
"RTN","ECXQSR",23,0)
 S ECXQV=$G(ARR("VERSION")) I +ECXQV=0 S ERR=1 Q
"RTN","ECXQSR",24,0)
 S QVIEN=$$FIND1^DIC(9.4,"","X","QUASAR") I +QVIEN<1 S ERR=1 Q
"RTN","ECXQSR",25,0)
 S IENS=","_QVIEN_","
"RTN","ECXQSR",26,0)
 S INTIEN=$$FIND1^DIC(9.49,IENS,"X",ECXQV) I +INTIEN<1 S ERR=1 Q
"RTN","ECXQSR",27,0)
 S IENS=INTIEN_","_QVIEN,ECXQDT=$$GET1^DIQ(9.49,IENS,2,"I")
"RTN","ECXQSR",28,0)
 Q
"RTN","ECXQSR",29,0)
UPDATE ;create record for each unique CPT code for clinic visit 
"RTN","ECXQSR",30,0)
 N ARY,ECZNODE,CPT,LOC,MOD,STR,VOL,XX,ECTP,ECV,ECUPCE,ECDSSE ;154
"RTN","ECXQSR",31,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104,ECXVNS,ECX4CHAR,ECXESC,ECXECL,ECXCLST ;144
"RTN","ECXQSR",32,0)
 N ECXTEMPW,ECXTEMPD,ECXSTANO,ECXASIH  ;166,170
"RTN","ECXQSR",33,0)
 Q:'$D(^ACK(509850.6,ECDA,0))
"RTN","ECXQSR",34,0)
 S ECZNODE=^ACK(509850.6,ECDA,0),EC2NODE=$G(^ACK(509850.6,ECDA,2))
"RTN","ECXQSR",35,0)
 S ECDT=$P(ECZNODE,U),ECDAY=$$ECXDATE^ECXUTL(ECDT,ECXYM)
"RTN","ECXQSR",36,0)
 S ECTIME=$$ECXTIME^ECXUTL(ECDT) S:$P(ECDT,".",2)="" ECTIME="000000"
"RTN","ECXQSR",37,0)
 S ECXDFN=$P(ECZNODE,U,2)
"RTN","ECXQSR",38,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECD,"1;3;5")
"RTN","ECXQSR",39,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECDT,"1;5",.ECXPAT)
"RTN","ECXQSR",40,0)
 S ECXCLST="" ;144
"RTN","ECXQSR",41,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXQSR",42,0)
 ;OEF/OIF data
"RTN","ECXQSR",43,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXQSR",44,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXQSR",45,0)
 S ECXVNS=ECXPAT("VIETNAM") ;144 VIETNAM STATUS CVW
"RTN","ECXQSR",46,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXQSR",47,0)
 ;
"RTN","ECXQSR",48,0)
 S ECHL="",ECXDIV=$P($G(^ACK(509850.6,ECDA,5)),U),ECSTOP=$P(EC2NODE,U)
"RTN","ECXQSR",49,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get Production Division
"RTN","ECXQSR",50,0)
 Q:ECSTOP=""
"RTN","ECXQSR",51,0)
 S ECXSTANO=ECXPDIV               ;166 tjl - Set default Patient Division
"RTN","ECXQSR",52,0)
 I ECXA="I",$D(^DGPM(ECXMN,0)) D  ;166 tjl - Set Patient Division for inpatients based on Patient Movement record
"RTN","ECXQSR",53,0)
 . S ECXTEMPW=$P($G(^DGPM(ECXMN,0)),U,6)
"RTN","ECXQSR",54,0)
 . S ECXTEMPD=$P($G(^DIC(42,+ECXTEMPW,0)),U,11)
"RTN","ECXQSR",55,0)
 . S ECXSTANO=$$GETDIV^ECXDEPT(ECXTEMPD)
"RTN","ECXQSR",56,0)
 ;154 Following 3 lines of code moved here to set variables earlier
"RTN","ECXQSR",57,0)
 S ECDU=$S(ECSTOP["A":$P(ECLINK,U),ECSTOP["S":$P(ECLINK,U,2),1:"")
"RTN","ECXQSR",58,0)
 Q:'ECDU
"RTN","ECXQSR",59,0)
 S ECDSSU=$G(^ECD(ECDU,0)),ECCS=+$P(ECDSSU,U,4),(ECO,ECM)=+$P(ECDSSU,U,3),ECXDSSD=$E($P(ECDSSU,U,5),1,10),ECUPCE=$P(ECDSSU,U,14)
"RTN","ECXQSR",60,0)
 S (ECHLS,ECHL2S)="000",ECAC=$P($G(ECZNODE),U,6)
"RTN","ECXQSR",61,0)
 I ECUPCE="A"!(ECUPCE="O"&(ECXA="O")) D  ;154
"RTN","ECXQSR",62,0)
 .I ECAC D  ;154
"RTN","ECXQSR",63,0)
 ..S ECHL=+$P($G(^SC(ECAC,0)),U,7),ECHL2=+$P($G(^(0)),U,18) I ECHL D  ;154
"RTN","ECXQSR",64,0)
 ...S ECHLS=$P($G(^DIC(40.7,+ECHL,0)),U,2),ECHL2S=$P($G(^DIC(40.7,+ECHL2,0)),U,2) ;154
"RTN","ECXQSR",65,0)
 ...S ECHLS=$$RJ^XLFSTR(ECHLS,3,0),ECHL2S=$$RJ^XLFSTR(ECHL2S,3,0) ;154
"RTN","ECXQSR",66,0)
 ...S ECX4CHAR=$$RJ^XLFSTR($$GET1^DIQ(728.44,+ECAC,7,"E"),4,0) ;154 Get 4char code
"RTN","ECXQSR",67,0)
 I ECUPCE=""!(ECUPCE="N")!(ECUPCE="O"&(ECXA="I")) D  ;154
"RTN","ECXQSR",68,0)
 .S ECHLS=$$RJ^XLFSTR($P($G(^DIC(40.7,+$P(ECDSSU,U,10),0)),U,2),3,0) ;154
"RTN","ECXQSR",69,0)
 .S ECHL2S=$$RJ^XLFSTR($P($G(^DIC(40.7,+$P(ECDSSU,U,13),0)),U,2),3,0) ;154
"RTN","ECXQSR",70,0)
 .S ECX4CHAR=$$RJ^XLFSTR($$GET1^DIQ(728.441,+$P(ECDSSU,U,15),.01,"E"),4,0) ;154
"RTN","ECXQSR",71,0)
 S ECDSS=ECHLS_ECHL2S
"RTN","ECXQSR",72,0)
 I ECXLOGIC>2003 D
"RTN","ECXQSR",73,0)
 .I "^18^23^24^41^65^94^108^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXQSR",74,0)
 Q:'$O(^ACK(509850.6,ECDA,3,0))
"RTN","ECXQSR",75,0)
 ;Create local array of procedure codes and # of times each procedure
"RTN","ECXQSR",76,0)
 ; was performed.
"RTN","ECXQSR",77,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXQSR",78,0)
 F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXQSR",79,0)
 S (ECDIA,ECXPPC,ECXPRV1,ECXPRV2,ECXPRV3,ECXPRV4,ECXPRV5,ECXPRV6,ECXPRV7,ECXICD10P)="" ;144 MORE PROVIDERS
"RTN","ECXQSR",80,0)
 ;if QUASAR v2
"RTN","ECXQSR",81,0)
 I +ECXQV=2 D
"RTN","ECXQSR",82,0)
 .S ECXPRV1=$P(EC2NODE,U,7),ECXPRV2=$P(EC2NODE,U,3),ECXPRV3=$P(EC2NODE,U,5),ECPN=0
"RTN","ECXQSR",83,0)
 .F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",84,0)
 ..S XX=^ACK(509850.6,ECDA,3,ECPN,0),XX=$P(XX,U),XX=$P($G(^ACK(509850.4,XX,0)),U),ECXCPT=$E($$CPT^ECXUTL3(XX),1,5)
"RTN","ECXQSR",85,0)
 ..I ECXCPT]"" D
"RTN","ECXQSR",86,0)
 ...I '$D(LOC(ECXCPT)) S LOC(ECXCPT)=0_U_ECXPRV1
"RTN","ECXQSR",87,0)
 ...S $P(LOC(ECXCPT),U)=$P(LOC(ECXCPT),U)+1
"RTN","ECXQSR",88,0)
 .S ECIEN=$O(^ACK(509850.6,ECDA,1,0)),ECDIA=$P($G(^ICD9(+$G(^ACK(509850.6,ECDA,1,ECIEN,0)),0)),U)
"RTN","ECXQSR",89,0)
 .F I=1:1:4 S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'+ECIEN  D
"RTN","ECXQSR",90,0)
 ..S @("ECXICD9"_I)=$P($G(^ICD9(+$P(^ACK(509850.6,ECDA,1,ECIEN,0),U),0)),U)
"RTN","ECXQSR",91,0)
 ;if QUASAR v3
"RTN","ECXQSR",92,0)
 I +ECXQV=3 D
"RTN","ECXQSR",93,0)
 .N CPT,DIA,I,J,MOD,MOD1,P,STR,VOL,ECTP,ARY,ECP,ECPN
"RTN","ECXQSR",94,0)
 .S ECXPRV2=$G(^ACK(509850.6,ECDA,2.7,1,0)),ECXPRV3=$G(^ACK(509850.6,ECDA,2.7,2,0)),ECXPRV4=$G(^ACK(509850.6,ECDA,2.7,3,0)),ECXPRV5=$G(^ACK(509850.6,ECDA,2.7,4,0))
"RTN","ECXQSR",95,0)
 .S ECXPRV6=$G(^ACK(509850.6,ECDA,2.7,5,0)),ECXPRV7=$G(^ACK(509850.6,ECDA,2.7,6,0)) ;144 more prov
"RTN","ECXQSR",96,0)
 .I $G(ECXPRV2) S ECXPRV2=$$CONVERT1^ACKQUTL4(ECXPRV2)
"RTN","ECXQSR",97,0)
 .I $G(ECXPRV3) S ECXPRV3=$$CONVERT1^ACKQUTL4(ECXPRV3)
"RTN","ECXQSR",98,0)
 .I $G(ECXPRV4) S ECXPRV4=$$CONVERT1^ACKQUTL4(ECXPRV4)
"RTN","ECXQSR",99,0)
 .I $G(ECXPRV5) S ECXPRV5=$$CONVERT1^ACKQUTL4(ECXPRV5)
"RTN","ECXQSR",100,0)
 .I $G(ECXPRV6) S ECXPRV6=$$CONVERT1^ACKQUTL4(ECXPRV6) ;144
"RTN","ECXQSR",101,0)
 .I $G(ECXPRV7) S ECXPRV7=$$CONVERT1^ACKQUTL4(ECXPRV7) ;144
"RTN","ECXQSR",102,0)
 .S ECPN=0 F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",103,0)
 ..S CPT=^ACK(509850.6,ECDA,3,ECPN,0),ECXCPT=$P(CPT,U),ECTP=+$P(CPT,U,5),ECV=1,ECP=""
"RTN","ECXQSR",104,0)
 ..Q:ECXCPT=""
"RTN","ECXQSR",105,0)
 ..I ECTP D
"RTN","ECXQSR",106,0)
 ...S CPT=$G(^ACK(509850.6,ECDA,7,ECTP,0)),ECP=$P(CPT,U)
"RTN","ECXQSR",107,0)
 ...S ECP=$S(ECP<90000:$P($G(^EC(725,+ECP,0)),U,2)_"N",1:$P($G(^EC(725,+ECP,0)),U,2)_"L")
"RTN","ECXQSR",108,0)
 ...S VOL=+$P(CPT,U,2),ECXPRV1=$P(CPT,U,3)
"RTN","ECXQSR",109,0)
 ..I 'ECTP S VOL=+$P(CPT,U,3),ECXPRV1=$P(CPT,U,4)
"RTN","ECXQSR",110,0)
 ..I $G(ECXPRV1) S ECXPRV1=$$CONVERT1^ACKQUTL4(ECXPRV1)
"RTN","ECXQSR",111,0)
 ..S ECXCPT=$E($$CPT^ECXUTL3(ECXCPT),1,5),ECXMOD="",MOD=0
"RTN","ECXQSR",112,0)
 ..F  S MOD=$O(^ACK(509850.6,ECDA,3,ECPN,1,MOD)) Q:'MOD  D
"RTN","ECXQSR",113,0)
 ...S MOD1=+^ACK(509850.6,ECDA,3,ECPN,1,MOD,0) D:MOD1
"RTN","ECXQSR",114,0)
 ....S ECXMOD=ECXMOD_MOD1_";"
"RTN","ECXQSR",115,0)
 ..F I=1:1:$L(ECXMOD,";") I $G(ARY(ECXCPT))'[$P(ECXMOD,";",I) D
"RTN","ECXQSR",116,0)
 ...S ARY(ECXCPT)=$G(ARY(ECXCPT))_$P(ECXMOD,";",I)_";"
"RTN","ECXQSR",117,0)
 ..S:VOL ECV=VOL
"RTN","ECXQSR",118,0)
 ..S ECV=ECV+$G(LOC(ECXCPT)),LOC(ECXCPT)=ECV_U_ECXPRV1_U_ECP
"RTN","ECXQSR",119,0)
 .S ECIEN=0 F  S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'ECIEN  D
"RTN","ECXQSR",120,0)
 ..S DIA=^ACK(509850.6,ECDA,1,ECIEN,0),P=$P(DIA,U,2),P=$S(P=1:"P",1:"S")
"RTN","ECXQSR",121,0)
 ..I +DIA S CNT=$G(STR(P))+1,STR(P,CNT)=$$CODEC^ICDEX(80,+DIA),STR(P)=CNT ;154
"RTN","ECXQSR",122,0)
 .S ECXICD10P=$G(STR("P",1)) ;161
"RTN","ECXQSR",123,0)
 .F I=1:1:4 Q:'$D(STR("P",I+1))  S @("ECXICD10"_I)=STR("P",I) ;161
"RTN","ECXQSR",124,0)
 .S:ECXICD10P="" ECXICD10P=$G(STR("S",1)),I=2 ;161
"RTN","ECXQSR",125,0)
 .F J=I:1:4 Q:'$D(STR("S",J))  S @("ECXICD10"_J)=STR("S",J) ;161
"RTN","ECXQSR",126,0)
 Q:('$D(LOC))!('$O(^ACK(509850.6,ECDA,1,0)))
"RTN","ECXQSR",127,0)
 ;- Ord Div, Contract St/End Dates, Contract Type placeholders for FY2002
"RTN","ECXQSR",128,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXQSR",129,0)
 ;set up Provider Person class
"RTN","ECXQSR",130,0)
 S (ECXCPT,ECXPPC1,ECXPPC2,ECXPPC3,ECXPPC4,ECXPPC5,ECXPPC6,ECXPPC7)="" ;144 new ppc
"RTN","ECXQSR",131,0)
 S:ECXPRV2'="" ECXPPC2=$$PRVCLASS^ECXUTL(ECXPRV2,ECD)
"RTN","ECXQSR",132,0)
 S:ECXPRV3'="" ECXPPC3=$$PRVCLASS^ECXUTL(ECXPRV3,ECD)
"RTN","ECXQSR",133,0)
 S:ECXPRV4'="" ECXPPC4=$$PRVCLASS^ECXUTL(ECXPRV4,ECD)
"RTN","ECXQSR",134,0)
 S:ECXPRV5'="" ECXPPC5=$$PRVCLASS^ECXUTL(ECXPRV5,ECD)
"RTN","ECXQSR",135,0)
 S:ECXPRV6'="" ECXPPC6=$$PRVCLASS^ECXUTL(ECXPRV6,ECD) ;144
"RTN","ECXQSR",136,0)
 S:ECXPRV7'="" ECXPPC7=$$PRVCLASS^ECXUTL(ECXPRV7,ECD) ;144
"RTN","ECXQSR",137,0)
 ;set up Provider NPI
"RTN","ECXQSR",138,0)
 S (ECPR1NPI,ECPR2NPI,ECPR3NPI,ECPR4NPI,ECPR5NPI,ECPR6NPI,ECPR7NPI)="" ;144 new npi
"RTN","ECXQSR",139,0)
 S ECPR2NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV2,ECD)
"RTN","ECXQSR",140,0)
 S:+ECPR2NPI'>0 ECPR2NPI="" S ECPR2NPI=$P(ECPR2NPI,U)
"RTN","ECXQSR",141,0)
 S ECPR3NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV3,ECD)
"RTN","ECXQSR",142,0)
 S:+ECPR3NPI'>0 ECPR3NPI="" S ECPR3NPI=$P(ECPR3NPI,U)
"RTN","ECXQSR",143,0)
 S ECPR4NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV4,ECD)
"RTN","ECXQSR",144,0)
 S:+ECPR4NPI'>0 ECPR4NPI="" S ECPR4NPI=$P(ECPR4NPI,U)
"RTN","ECXQSR",145,0)
 S ECPR5NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV5,ECD)
"RTN","ECXQSR",146,0)
 S:+ECPR5NPI'>0 ECPR5NPI="" S ECPR5NPI=$P(ECPR5NPI,U)
"RTN","ECXQSR",147,0)
 S ECPR6NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV6,ECD) ;144
"RTN","ECXQSR",148,0)
 S:+ECPR6NPI'>0 ECPR6NPI="" S ECPR6NPI=$P(ECPR6NPI,U) ;144
"RTN","ECXQSR",149,0)
 S ECPR7NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV7,ECD) ;144
"RTN","ECXQSR",150,0)
 S:+ECPR7NPI'>0 ECPR7NPI="" S ECPR7NPI=$P(ECPR7NPI,U) ;144
"RTN","ECXQSR",151,0)
 N DA,DIC,DIK,DR,FILEN,DIQ,XVAR,II,DI
"RTN","ECXQSR",152,0)
 F II=2,3,4,5,6,7 S XVAR="ECXPRV"_II I @XVAR'="" D
"RTN","ECXQSR",153,0)
 .S @XVAR=2_@XVAR
"RTN","ECXQSR",154,0)
 ; -Observation Patient Indicator (yes/no)
"RTN","ECXQSR",155,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXQSR",156,0)
 ; -CNH status (YES/NO)
"RTN","ECXQSR",157,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXQSR",158,0)
 ;get encounter classification
"RTN","ECXQSR",159,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECXHNC,ECXSHAD,ECXESC,ECXECL)="",ECXVISIT=$P($G(^ACK(509850.6,ECDA,6)),U,3) ;144
"RTN","ECXQSR",160,0)
 I ECXVISIT'="" D
"RTN","ECXQSR",161,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXQSR",162,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXQSR",163,0)
 .S ECXIR=$G(ECXVIST("IR")),ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXQSR",164,0)
 .S ECXESC=$G(ECXVIST("ENCSC")),ECXECL=$G(ECXVIST("ENCCL")) ;144
"RTN","ECXQSR",165,0)
 ; -Head and Neck Cancer Indicator
"RTN","ECXQSR",166,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXQSR",167,0)
 ; -PROJ 112/SHAD Indicator
"RTN","ECXQSR",168,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXQSR",169,0)
 ; ******* - PATCH 127, ADD PATCAT CODE - ********
"RTN","ECXQSR",170,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXQSR",171,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXQSR",172,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXQSR",173,0)
 ; -Get national patient record flag Indicator if exist
"RTN","ECXQSR",174,0)
 D NPRF^ECXUTL5
"RTN","ECXQSR",175,0)
 ; -If no encounter number don't file record
"RTN","ECXQSR",176,0)
 S ECDSSE=$S(ECHLS<101!(ECHLS>999):"ECQ",1:ECHLS)_ECHL2S ;154 If stop code is invalid set it to ECQ for encounter number creation
"RTN","ECXQSR",177,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSSE,) ;154 Send ECDSSE for encounter # creation
"RTN","ECXQSR",178,0)
 Q:ECXENC=""
"RTN","ECXQSR",179,0)
 I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXQSR",180,0)
 ;Loop through array of unique procedures. Create record in ECODE.
"RTN","ECXQSR",181,0)
 S CPT="" F  S CPT=$O(LOC(CPT)) Q:CPT=""  D
"RTN","ECXQSR",182,0)
 .S ECV=+$P(LOC(CPT),U),ECXCPT=$$CPT^ECXUTL3(CPT,$G(ARY(CPT)),ECV)
"RTN","ECXQSR",183,0)
 .S ECXPRV1=$P(LOC(CPT),U,2)
"RTN","ECXQSR",184,0)
 .S:ECXPRV1'="" ECXPPC1=$$PRVCLASS^ECXUTL(ECXPRV1,ECD)
"RTN","ECXQSR",185,0)
 .S ECPR1NPI=$$NPI^XUSNPI("Individual_ID",ECXPRV1,ECD)
"RTN","ECXQSR",186,0)
 .S:+ECPR1NPI'>0 ECPR1NPI="" S ECPR1NPI=$P(ECPR1NPI,U)
"RTN","ECXQSR",187,0)
 .S:ECXPRV1'="" ECXPRV1=2_ECXPRV1
"RTN","ECXQSR",188,0)
 .S ECP=$P(LOC(CPT),U,3) I ECP="" S ECP=$$CPT^ECXUTL3(CPT,"",ECV)
"RTN","ECXQSR",189,0)
 .D FILE^ECXQSR1
"RTN","ECXQSR",190,0)
 K CPT,LOC
"RTN","ECXQSR",191,0)
 Q
"RTN","ECXQSR",192,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR",193,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR",194,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR",195,0)
 Q
"RTN","ECXQSR",196,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR",197,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXQSR1")
0^9^B20446907^B19300892
"RTN","ECXQSR1",1,0)
ECXQSR1 ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ;4/24/18  14:06
"RTN","ECXQSR1",2,0)
 ;;3.0;DSS EXTRACTS;**105,120,127,132,136,144,149,154,161,166,170**;Dec 22, 1997;Build 12
"RTN","ECXQSR1",3,0)
FILE ;file record in #727.825
"RTN","ECXQSR1",4,0)
 ;node0
"RTN","ECXQSR1",5,0)
 ;inst^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^day ECDAY^
"RTN","ECXQSR1",6,0)
 ;DSS unit ECDU^^category ECPTTM^procedure ECP^volume ECV^cost center^
"RTN","ECXQSR1",7,0)
 ;ordering sec ^section^provider ECXPRV1^ECXPPC1^ECXPRV2^ECXPPC2^ECXPRV3^
"RTN","ECXQSR1",8,0)
 ;ECXPPC3^mov # ECXMN^treat spec ECXTS^time ECTIME^Placehold primary care team 
"RTN","ECXQSR1",9,0)
 ;ECPTTM^Placehold primary care provider ECPTPR^pce cpt code & modifers ECXCPT^
"RTN","ECXQSR1",10,0)
 ;Placeholder ECDIA^Placeholder ECXICD91^Placeholder ECXICD92^
"RTN","ECXQSR1",11,0)
 ;Placeholder ECXICD93^Placeholder ECXICD94^
"RTN","ECXQSR1",12,0)
 ;agent orange ECXAST^radiation exposure ECRST^environmental
"RTN","ECXQSR1",13,0)
 ;contaminants ECEST^service connected ECSC^sent to pce^^dss identifier
"RTN","ECXQSR1",14,0)
 ;ECDSS^placeholder
"RTN","ECXQSR1",15,0)
 ;node1
"RTN","ECXQSR1",16,0)
 ;mpi ECXNPI^placeholder ECXDSSD^^^Placehold PC provider person class^placeholder 
"RTN","ECXQSR1",17,0)
 ;^Placehold assoc pc provider ECASPR^Placehold assoc pc prov person class 
"RTN","ECXQSR1",18,0)
 ;ECCLAS2^placeholder^divison ECXDIV^dom ECXDOM^
"RTN","ECXQSR1",19,0)
 ;enrollment category ECXCAT^enrollment status ECXSTAT^enrollment prior 
"RTN","ECXQSR1",20,0)
 ;ECXPRIOR^period of service ECXPOS^purple heart ECXPHI^observ pat ind 
"RTN","ECXQSR1",21,0)
 ;ECXOBS^encounter num ECXENC^ao loc ECXAOL^ord div ECXODIV^contr st dt 
"RTN","ECXQSR1",22,0)
 ;ECXCSDT^contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXQSR1",23,0)
 ;production division ECXPDIV^eligibility ECXELIG^Placehold ethnicity ECXETH^
"RTN","ECXQSR1",24,0)
 ;Placehold race1 ECXRC1^enrollment location ECXENRL^^enrollment priority 
"RTN","ECXQSR1",25,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient 
"RTN","ECXQSR1",26,0)
 ;type ECXPTYPE^combat vet elig ECXCVE
"RTN","ECXQSR1",27,0)
 ;NODE 2
"RTN","ECXQSR1",28,0)
 ;^combat vet elig end date ECXCVEDT^
"RTN","ECXQSR1",29,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXQSR1",30,0)
 ;emergency response indicator(FEMA) ECXERI^agent orange indicator 
"RTN","ECXQSR1",31,0)
 ;ECXAO^environ contam ECXECE^head/neck ECXHNC^military sexual trauma 
"RTN","ECXQSR1",32,0)
 ;ECXMIL^radiation encoun ECXIR^nutrition dx(currently null)^OEF/OIF ECXOEF^
"RTN","ECXQSR1",33,0)
 ;OEF/OIF return date ECXOEFDT^Placehold assoc pc provider npi ECASNPI^
"RTN","ECXQSR1",34,0)
 ;Placehold primary care provider npi ECPTNPI^provider npi ECPR1NPI^
"RTN","ECXQSR1",35,0)
 ;provider #2 npi ECPR2NPI^provider #3 npi ECPR3NPI^shad status ECXSHADI^
"RTN","ECXQSR1",36,0)
 ;shad encouter ECXSHAD^pat cat ECXPATCAT^provider #4 ECXPRV4^
"RTN","ECXQSR1",37,0)
 ;provider #4 pc ECXPPC4^provider #4 npi ECPR4NPI^provider #5 ECXPRV5^
"RTN","ECXQSR1",38,0)
 ;provider #5 pc ECXPPC5^provider #5 npi ECPR5NPI^
"RTN","ECXQSR1",39,0)
 ;primary ICD-10 code ECXICD10P^Secondary ICD-10 Code #1 ECXICD101^
"RTN","ECXQSR1",40,0)
 ;Secondary ICD-10 Code #2 ECXICD102^Secondary ICD-10 Code #3 ECXICD103^
"RTN","ECXQSR1",41,0)
 ;NODE 3
"RTN","ECXQSR1",42,0)
 ;Secondary ICD-10 Code #4 ECXICD104^Encounter SC ECXESC^Vietnam Status ECXVNS
"RTN","ECXQSR1",43,0)
 ;Provider #6 ECXPRV6^ Prov #6 PC ECXPPC6^Prov #6 NPI ECPR6NPI^Provider #7 ECXPRV7^ Prov #7 PC ECXPPC7^Prov #7 NPI ECPR7NPI^4CHAR ECX4CHAR^Clinic IEN ECAC (NOW NULL)^Camp Lejeune status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXQSR1",44,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)
"RTN","ECXQSR1",45,0)
 ;Clinic IEN ECAC
"RTN","ECXQSR1",46,0)
 ;^ Patient Division (ECXSTANO) 166
"RTN","ECXQSR1",47,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXQSR1",48,0)
 N ECXDATA,ECXTSC
"RTN","ECXQSR1",49,0)
 N ECXRES1,ECXRES2,ECXRES3,ECXSVCI,ECXSVCL ;149
"RTN","ECXQSR1",50,0)
 S (ECXRES1,ECXRES2,ECXRES3,ECXSVCI,ECXSVCL)="" ;149
"RTN","ECXQSR1",51,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXQSR1",52,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXQSR1",53,0)
 ;done
"RTN","ECXQSR1",54,0)
 N DA,DIK
"RTN","ECXQSR1",55,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXQSR1",56,0)
 I ECXLOGIC>2018 S (ECXETH,ECXRC1,ECPTTM,ECPTPR,ECCLAS,ECASPR,ECCLAS2,ECASNPI,ECPTNPI)="" ;170 Fields will now be null
"RTN","ECXQSR1",57,0)
 S ECODE=EC7_U_EC23_U
"RTN","ECXQSR1",58,0)
 S ECODE=ECODE_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECDAY_U_ECDU_U_U
"RTN","ECXQSR1",59,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECXPRV1_U_ECXPPC1_U
"RTN","ECXQSR1",60,0)
 S ECODE=ECODE_ECXPRV2_U_ECXPPC2_U_ECXPRV3_U_ECXPPC3_U_U
"RTN","ECXQSR1",61,0)
 S ECODE=ECODE_ECXMN_U_ECXTSC_U_ECTIME_U_ECPTTM_U
"RTN","ECXQSR1",62,0)
 S ECODE=ECODE_ECPTPR_U_ECXCPT_U_ECDIA_U_ECXICD91_U_ECXICD92_U
"RTN","ECXQSR1",63,0)
 S ECODE=ECODE_ECXICD93_U_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXQSR1",64,0)
 S ECODE=ECODE_ECSC_U_"N"_U_U_ECDSS_U_U
"RTN","ECXQSR1",65,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_ECCLAS_U_U_ECASPR_U
"RTN","ECXQSR1",66,0)
 S ECODE1=ECODE1_ECCLAS2_U_U_ECXDIV_U_ECXMST_U_ECXDOM_U
"RTN","ECXQSR1",67,0)
 S ECODE1=ECODE1_ECXDOB_U_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXQSR1",68,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXODIV_U_ECXCSDT_U_ECXCEDT_U
"RTN","ECXQSR1",69,0)
 S ECODE1=ECODE1_ECXCTYP_U_ECXCNH_U_ECXPDIV_U_ECXELIG_U_ECXHNCI_U_ECXETH_U
"RTN","ECXQSR1",70,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXQSR1",71,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL
"RTN","ECXQSR1",72,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXQSR1",73,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXQSR1",74,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXQSR1",75,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_$G(ECXOEF)_U_$G(ECXOEFDT)_U_$G(ECASNPI)_U_$G(ECPTNPI)_U_$G(ECPR1NPI)_U_$G(ECPR2NPI)_U_$G(ECPR3NPI)
"RTN","ECXQSR1",76,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_$G(ECXSHADI)_U_$G(ECXSHAD)_U_ECXPATCAT
"RTN","ECXQSR1",77,0)
 I ECXLOGIC>2011 S ECODE2=ECODE2_U_$G(ECXPRV4)_U_$G(ECXPPC4)_U_$G(ECPR4NPI)_U_$G(ECXPRV5)_U_$G(ECXPPC5)_U_$G(ECPR5NPI)
"RTN","ECXQSR1",78,0)
 I ECXLOGIC>2012 S ECODE2=ECODE2_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U
"RTN","ECXQSR1",79,0)
 I ECXLOGIC>2012 S ECODE3=ECXICD104
"RTN","ECXQSR1",80,0)
 I ECXLOGIC>2013 S ECODE3=ECODE3_U_ECXESC_U_ECXVNS_U_ECXPRV6_U_ECXPPC6_U_ECPR6NPI_U_ECXPRV7_U_ECXPPC7_U_ECPR7NPI_U_ECX4CHAR_U_$S(ECXLOGIC>2015:"",1:ECAC)_U_ECXCLST_U_ECXECL ;144
"RTN","ECXQSR1",81,0)
 I ECXLOGIC>2014 S ECODE3=ECODE3_U_ECXRES1_U_ECXRES2_U_ECXRES3_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXQSR1",82,0)
 I ECXLOGIC>2015 S ECODE3=ECODE3_U_ECAC ;154 MOVED CLINIC IEN
"RTN","ECXQSR1",83,0)
 I ECXLOGIC>2017 S ECODE3=ECODE3_U_ECXSTANO  ;166
"RTN","ECXQSR1",84,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),^ECX(ECFILE,EC7,3)=$G(ECODE3),ECRN=ECRN+1
"RTN","ECXQSR1",85,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXQSR1",86,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXQSR1",87,0)
 Q
"RTN","ECXQSR1",88,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR1",89,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR1",90,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR1",91,0)
 Q
"RTN","ECXQSR1",92,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR1",93,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXRACPT")
0^16^B20368864^n/a
"RTN","ECXRACPT",1,0)
ECXRACPT ;ALB/DAN - Radiology extract invalid CPT report ;7/25/18  14:29
"RTN","ECXRACPT",2,0)
 ;;3.0;DSS EXTRACTS;**170**;Dec 22, 1997;Build 12
"RTN","ECXRACPT",3,0)
EN ;entry point from menu option
"RTN","ECXRACPT",4,0)
 N ECXPORT,CNT,ECXHEAD,ECXERR,ECXARRAY,ECXAUD,ECXDIV,ECXALL,ECXDESC,ECXPGM,ECXSAVE,D0
"RTN","ECXRACPT",5,0)
 W @IOF,!!,"Radiology (RAD) Extract CPT Code Audit",!!
"RTN","ECXRACPT",6,0)
 ;ecxaud=1 stops user from being able to select a date range 
"RTN","ECXRACPT",7,0)
 S ECXHEAD="RAD",ECXAUD=1
"RTN","ECXRACPT",8,0)
 ;select extract
"RTN","ECXRACPT",9,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXRACPT",10,0)
 I ECXERR D AUDIT^ECXKILL Q
"RTN","ECXRACPT",11,0)
 ;select all radiology sites/divisions
"RTN","ECXRACPT",12,0)
 S ECXALL=1 D RAD^ECXDVSN2(.ECXDIV,ECXALL,.ECXERR)
"RTN","ECXRACPT",13,0)
 I ECXERR D AUDIT^ECXKILL Q
"RTN","ECXRACPT",14,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I $G(ECXPORT) D  Q
"RTN","ECXRACPT",15,0)
 .K ^TMP($J,"ECXPORT")
"RTN","ECXRACPT",16,0)
 .S ^TMP($J,"ECXPORT",0)="EXTRACT LOG #^DIVISION/SITE^IMAGING TYPE (FEEDER LOCATION)^PROCEDURE DATE^FEEDER KEY^PROCEDURE^PATIENT DFN",CNT=1
"RTN","ECXRACPT",17,0)
 .D PROCESS
"RTN","ECXRACPT",18,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXRACPT",19,0)
 .D AUDIT^ECXKILL
"RTN","ECXRACPT",20,0)
 W !!
"RTN","ECXRACPT",21,0)
 S ECXPGM="PROCESS^ECXRACPT",ECXDESC="Radiology Extract Invalid CPT Report"
"RTN","ECXRACPT",22,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")=""
"RTN","ECXRACPT",23,0)
 W !
"RTN","ECXRACPT",24,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXRACPT",25,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXRACPT",26,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXRACPT",27,0)
 .D AUDIT^ECXKILL
"RTN","ECXRACPT",28,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXRACPT",29,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXRACPT",30,0)
 .D PROCESS
"RTN","ECXRACPT",31,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXRACPT",32,0)
 D HOME^%ZIS
"RTN","ECXRACPT",33,0)
 D AUDIT^ECXKILL
"RTN","ECXRACPT",34,0)
 Q
"RTN","ECXRACPT",35,0)
 ;
"RTN","ECXRACPT",36,0)
PROCESS ;queued entry
"RTN","ECXRACPT",37,0)
 N J,X,Y,PG,DIV,EC,ECFK,ECFL,QFLG,TYPE,TYPENMN,DIQ,DR,DA,DIR,DIRUT,DTOUT,DUOUT,CPT,DAY,%DT,ECXRUN,ECX,DIC,ECXEXT,ECXDEF,DATA,SEQ,ECXP
"RTN","ECXRACPT",38,0)
 K ^TMP($J,"ECXCPT")
"RTN","ECXRACPT",39,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXRACPT",40,0)
 S (QFLG,PG)=0
"RTN","ECXRACPT",41,0)
 ;get run date in external format
"RTN","ECXRACPT",42,0)
 S ECXRUN=$$FMTE^XLFDT($E($$NOW^XLFDT,1,12))
"RTN","ECXRACPT",43,0)
 ;setup array of imaging types
"RTN","ECXRACPT",44,0)
 S TYPE=0 F  S TYPE=$O(^RA(79.2,TYPE)) Q:+TYPE<1  D
"RTN","ECXRACPT",45,0)
 .K ECX S DIC="^RA(79.2,",DR=".01;3",DIQ="ECX",DIQ(0)="I",DA=TYPE D EN^DIQ1
"RTN","ECXRACPT",46,0)
 .S TYPE(TYPE)=ECX(79.2,TYPE,.01,"I")_U_ECX(79.2,TYPE,3,"I")
"RTN","ECXRACPT",47,0)
 ;process the extract records
"RTN","ECXRACPT",48,0)
 S J="" F  S J=$O(^ECX(727.814,"AC",ECXEXT,J)) Q:'J  I $D(^ECX(727.814,J,0)) S EC=^(0),DIV=$P(EC,U,4),ECFL=DIV_"-"_$P(EC,U,21) D
"RTN","ECXRACPT",49,0)
 .S ECFK=$P(EC,U,10),ECXP=$P(EC,U,11)
"RTN","ECXRACPT",50,0)
 .S CPT=$E(ECFK,1,5) ;Get just CPT code from the CPT Code and modifier info in ECFK
"RTN","ECXRACPT",51,0)
 .S DAY=$$ECXDATEX^ECXUTL($P(EC,U,9)) ;Convert DSS to readable date
"RTN","ECXRACPT",52,0)
 .S X=DAY,%DT="X" D ^%DT S DAY=Y ;Convert readable date to FM date
"RTN","ECXRACPT",53,0)
 .I $$STATCHK^ICPTAPIU(CPT,DAY) Q  ;If CPT code was valid on this date, skip it
"RTN","ECXRACPT",54,0)
 .S ^TMP($J,"ECXCPT",DIV,ECFL,J)=DAY_U_ECXP_U_$$GET1^DIQ(71,$P(EC,U,11),.01)_U_$P(EC,U,5)
"RTN","ECXRACPT",55,0)
 .Q
"RTN","ECXRACPT",56,0)
 ;
"RTN","ECXRACPT",57,0)
 ;Print/export report
"RTN","ECXRACPT",58,0)
 U IO
"RTN","ECXRACPT",59,0)
 I '$G(ECXPORT) I '$D(^TMP($J,"ECXCPT")) S DIV=0 D HEADER W !,"No data found." Q
"RTN","ECXRACPT",60,0)
 S DIV="" F  S DIV=$O(^TMP($J,"ECXCPT",DIV)) Q:DIV=""!(QFLG)  D
"RTN","ECXRACPT",61,0)
 .D:'$G(ECXPORT) HEADER
"RTN","ECXRACPT",62,0)
 .S ECFL="" F  S ECFL=$O(^TMP($J,"ECXCPT",DIV,ECFL)) Q:ECFL=""!(QFLG)  S TYPE=+$P(ECFL,"-",2) D
"RTN","ECXRACPT",63,0)
 ..S TYPENMN=$E($P($G(TYPE(TYPE)),U),1,18)
"RTN","ECXRACPT",64,0)
 ..S SEQ="" F  S SEQ=$O(^TMP($J,"ECXCPT",DIV,ECFL,SEQ))  Q:SEQ=""!(QFLG)  D
"RTN","ECXRACPT",65,0)
 ...I '$G(ECXPORT) D:($Y+3>IOSL) HEADER Q:QFLG
"RTN","ECXRACPT",66,0)
 ...S DATA=^TMP($J,"ECXCPT",DIV,ECFL,SEQ)
"RTN","ECXRACPT",67,0)
 ...I $G(ECXPORT) D  Q
"RTN","ECXRACPT",68,0)
 ....S ^TMP($J,"ECXPORT",CNT)=ECXEXT_U_$P($G(ECXDIV(DIV)),U,2)_"("_$P($G(ECXDIV(DIV)),U)_")"_U_TYPENMN_" ("_ECFL_")"
"RTN","ECXRACPT",69,0)
 ....S ^TMP($J,"ECXPORT",CNT)=^TMP($J,"ECXPORT",CNT)_U_$TR($$FMTE^XLFDT($P(DATA,U),"2F")," ",0)_U_$P(DATA,U,2)_U_$P(DATA,U,3)_U_$P(DATA,U,4),CNT=CNT+1 Q
"RTN","ECXRACPT",70,0)
 ...W TYPENMN," (",ECFL,")"
"RTN","ECXRACPT",71,0)
 ...W !,?3,$P(DATA,U,2),?11,$E($P(DATA,U,3),1,45),?58,$TR($$FMTE^XLFDT($P(DATA,U),"2F")," ",0),?69,$P(DATA,U,4),!
"RTN","ECXRACPT",72,0)
 ...Q
"RTN","ECXRACPT",73,0)
 ..Q
"RTN","ECXRACPT",74,0)
 .Q
"RTN","ECXRACPT",75,0)
 Q
"RTN","ECXRACPT",76,0)
 ;
"RTN","ECXRACPT",77,0)
HEADER ;
"RTN","ECXRACPT",78,0)
 N JJ,SS,LN
"RTN","ECXRACPT",79,0)
 S $P(LN,"-",80)="-"
"RTN","ECXRACPT",80,0)
 I $E(IOST)="C" D
"RTN","ECXRACPT",81,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXRACPT",82,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXRACPT",83,0)
 Q:QFLG
"RTN","ECXRACPT",84,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXRACPT",85,0)
 W !,"Radiology (RAD) Extract CPT Code Audit"
"RTN","ECXRACPT",86,0)
 W !,"DSS Extract Log #:    "_ECXARRAY("EXTRACT")
"RTN","ECXRACPT",87,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXRACPT",88,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXRACPT",89,0)
 I $D(ECXDIV(DIV)) W !,"Division/Site:        "_$P(ECXDIV(DIV),U,2)_" ("_DIV_")",?68,"Page: "_PG
"RTN","ECXRACPT",90,0)
 I '$D(ECXDIV(DIV)) W !,"Division/Site:        "_"Unknown",?68,"Page: "_PG
"RTN","ECXRACPT",91,0)
 W !!,"Imaging Type (Feeder Location)",?58,"Procedure"
"RTN","ECXRACPT",92,0)
 W !?3,"FdrKey",?11,"Procedure",?58,"Date",?69,"DFN"
"RTN","ECXRACPT",93,0)
 W !,LN,!
"RTN","ECXRACPT",94,0)
 Q
"RTN","ECXRAD")
0^18^B56359517^B53944595
"RTN","ECXRAD",1,0)
ECXRAD ;ALB/JAP,BIR/PDW,PTD-Extract for Radiology ;6/29/18  14:29
"RTN","ECXRAD",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,16,24,33,39,46,71,84,92,105,120,127,136,144,149,153,154,161,166,170**;Dec 22, 1997;Build 12
"RTN","ECXRAD",3,0)
BEG ;entry point from option
"RTN","ECXRAD",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXRAD",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXRAD",6,0)
 Q
"RTN","ECXRAD",7,0)
 ;
"RTN","ECXRAD",8,0)
START ;start rad extract
"RTN","ECXRAD",9,0)
 N ECDT,ECINED,ECINSD,ECXDA,QFLG ;149,166
"RTN","ECXRAD",10,0)
 S QFLG=0
"RTN","ECXRAD",11,0)
 K ECXDD D FIELD^DID(70.03,14,,"SPECIFIER","ECXDD") S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXRAD",12,0)
 S ECDT=ECSD ;166
"RTN","ECXRAD",13,0)
 S ECINED=9999999.9999-ECDT,ECINSD=9999999-ECED ;149,166
"RTN","ECXRAD",14,0)
 F  S ECINSD=$O(^RARPT("AA",ECINSD)) Q:ECINSD>ECINED!(ECINSD="")  D  Q:QFLG  ;149
"RTN","ECXRAD",15,0)
 .S ECXDA="" F  S ECXDA=$O(^RARPT("AA",ECINSD,ECXDA)) Q:ECXDA=""  D GETCASE Q:QFLG  ;149
"RTN","ECXRAD",16,0)
 Q
"RTN","ECXRAD",17,0)
 ;
"RTN","ECXRAD",18,0)
GETCASE ;Find all cases associated with the verified report and store in extract
"RTN","ECXRAD",19,0)
 ;149 Section added in this patch
"RTN","ECXRAD",20,0)
 N CASE,ECXDFN,DATE,ECXMDA,ECXMDT,OCIEN,ECCN,TAB ;153
"RTN","ECXRAD",21,0)
 S CASE=$P($G(^RARPT(ECXDA,0)),U) Q:CASE=""
"RTN","ECXRAD",22,0)
 S TAB=$S($L(CASE,"-")=3:"ADC1",1:"ADC") ;153 Set xref table to use based on use of site accession numbering
"RTN","ECXRAD",23,0)
 S ECXDFN=$P($G(^RARPT(ECXDA,0)),U,2) Q:ECXDFN=""
"RTN","ECXRAD",24,0)
 I $D(^RADPT(TAB,CASE,ECXDFN)) D  ;153
"RTN","ECXRAD",25,0)
 .S ECXMDA=$O(^RADPT(TAB,CASE,ECXDFN,0)) Q:'+ECXMDA  ;153
"RTN","ECXRAD",26,0)
 .S ECCN=$O(^RADPT(TAB,CASE,ECXDFN,ECXMDA,0)) Q:'+ECCN  ;153
"RTN","ECXRAD",27,0)
 .S ECXMDT=$P($G(^RADPT(ECXDFN,"DT",ECXMDA,0)),U) ;Exam date/time
"RTN","ECXRAD",28,0)
 .D GET
"RTN","ECXRAD",29,0)
 S OCIEN=0 F  S OCIEN=$O(^RARPT(ECXDA,1,OCIEN)) Q:'+OCIEN  D
"RTN","ECXRAD",30,0)
 .S CASE=$P($G(^RARPT(ECXDA,1,OCIEN,0)),U) Q:'+CASE
"RTN","ECXRAD",31,0)
 .S TAB=$S($L(CASE,"-")=3:"ADC1",1:"ADC") ;153 Set xref table to use based on use of site accession numbering
"RTN","ECXRAD",32,0)
 .I $D(^RADPT(TAB,CASE,ECXDFN)) D  ;153
"RTN","ECXRAD",33,0)
 ..S ECXMDA=$O(^RADPT(TAB,CASE,ECXDFN,0)) Q:'+ECXMDA  ;153
"RTN","ECXRAD",34,0)
 ..S ECCN=$O(^RADPT(TAB,CASE,ECXDFN,ECXMDA,0)) Q:'+ECCN  ;153
"RTN","ECXRAD",35,0)
 ..S ECXMDT=$P($G(^RADPT(ECXDFN,"DT",ECXMDA,0)),U) ;Exam date/time
"RTN","ECXRAD",36,0)
 ..D GET
"RTN","ECXRAD",37,0)
 Q
"RTN","ECXRAD",38,0)
 ;
"RTN","ECXRAD",39,0)
GET ;get data
"RTN","ECXRAD",40,0)
 ;149 All code in GET has been modified so that it's no longer at block structure level as that's no longer needed
"RTN","ECXRAD",41,0)
 N ECXIEN,X,SUB,TYPE,ECDOCPC,ECXIS,ECXISPC,ECXPRCL,ECXCSC,ECXUSRTN,ECXCM,ECSTAT,ECXMVDT ;136,154
"RTN","ECXRAD",42,0)
 N ECXESC,ECXECL,ECXCLST,VISIT,ECXVIST,ECXERR ;144
"RTN","ECXRAD",43,0)
 N ECXTEMPW,ECXTEMPD,ECXSTANO,ECXASIH  ;166 tjl,170
"RTN","ECXRAD",44,0)
 S ECTM=$$ECXTIME^ECXUTL(ECXMDT) S:ECTM>235959 ECTM=235959
"RTN","ECXRAD",45,0)
 S ECXDAY=$$ECXDATE^ECXUTL(ECXMDT,ECXYM)
"RTN","ECXRAD",46,0)
 S ECXMVDT=$$ECXDATE^ECXUTL($P($G(^RARPT(ECXDA,0)),U,7),ECXYM) ;154 Get exam verification date and convert to YYYYMMDD format
"RTN","ECXRAD",47,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXMDT,"."),"1;3;5",.ECXPAT) ;154 Added service information (5) to list
"RTN","ECXRAD",48,0)
 Q:'OK
"RTN","ECXRAD",49,0)
 S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXRAD",50,0)
 S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXRAD",51,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXRAD",52,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXRAD",53,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXMDT,"."),ECPROF)
"RTN","ECXRAD",54,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXRAD",55,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXRAD",56,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXMDT),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXRAD",57,0)
 S ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4),ECXASIH=$P(X,U,14) ;170
"RTN","ECXRAD",58,0)
 ;
"RTN","ECXRAD",59,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXRAD",60,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXRAD",61,0)
 S ECXDIV=$P(^RADPT(ECXDFN,"DT",ECXMDA,0),U,3),ECLOC=$P(^(0),U,4),ECTY=$P(^(0),U,2)
"RTN","ECXRAD",62,0)
 ;
"RTN","ECXRAD",63,0)
 ;- Ordering stop code (based on imaging location)
"RTN","ECXRAD",64,0)
 S ECXORDST=$$GET1^DIQ(40.7,$$GET1^DIQ(79.1,$G(ECLOC),22,"I"),1)
"RTN","ECXRAD",65,0)
 ;
"RTN","ECXRAD",66,0)
 ;- Get ordering date using Imaging Order ptr to #75.1 in subfile 70.03
"RTN","ECXRAD",67,0)
 S ECXIEN=+$P($G(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,0)),U,11) ;149 Changed 1 to ECCN so that imaging location comes from actual exam, not only first exam
"RTN","ECXRAD",68,0)
 S ECXORDDT=$$ECXDATE^ECXUTL($P($G(^RAO(75.1,ECXIEN,0)),U,16),ECXYM)
"RTN","ECXRAD",69,0)
 ;
"RTN","ECXRAD",70,0)
 ;******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXRAD",71,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXRAD",72,0)
 ;- If no encounter number don't file record
"RTN","ECXRAD",73,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXMDT,ECXTS,ECXOBS,ECHEAD,ECTY,) Q:ECXENC=""
"RTN","ECXRAD",74,0)
 ;procedures and modifiers for specific exam (case numbers)
"RTN","ECXRAD",75,0)
 ;ward/clinic,service,provider,diagnostic code
"RTN","ECXRAD",76,0)
 S ECCA=^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,0)
"RTN","ECXRAD",77,0)
 S (ECXESC,ECXECL)="" ;144
"RTN","ECXRAD",78,0)
 S VISIT=$P(ECCA,U,27) ;144
"RTN","ECXRAD",79,0)
 I VISIT D VISIT^ECXSCX1(ECXDFN,VISIT,.ECXVIST,.ECXERR) I 'ECXERR S ECXESC=$G(ECXVIST("ENCSC")),ECXECL=$G(ECXVIST("ENCCL")) ;144
"RTN","ECXRAD",80,0)
 S ECXCM=$P(ECCA,U,26) S ECXCM=$S("^0^1^2^3^"[("^"_ECXCM_"^"):ECXCM,1:"") ;136 - Get Credit Method and validate that it's a number between 0 and 3 otherwise set it to null
"RTN","ECXRAD",81,0)
 I ECXCM=2 Q  ;149 No longer collect records with credit method set to 2
"RTN","ECXRAD",82,0)
 S ECXW=$P(ECCA,U,6),ECXW=$P($G(^DIC(42,+ECXW,44)),U)
"RTN","ECXRAD",83,0)
 S:ECXW="" ECXW=$P(ECCA,U,8)
"RTN","ECXRAD",84,0)
 ;166  tjl - Set Patient Division (ECXSTANO) field
"RTN","ECXRAD",85,0)
 N TEMPIEN S TEMPIEN=$$GET1^DIQ(44,+ECXW,3.5,"I")
"RTN","ECXRAD",86,0)
 S ECXSTANO=$$GETDIV^ECXDEPT(TEMPIEN)  ; Set default (and outpatient) value based on ward
"RTN","ECXRAD",87,0)
 I ECXA="I",$D(^DGPM(ECXMN,0)) D                       ;Set value for inpatients based on Patient Movement record
"RTN","ECXRAD",88,0)
 . S ECXTEMPW=$P($G(^DGPM(ECXMN,0)),U,6)
"RTN","ECXRAD",89,0)
 . S ECXTEMPD=$P($G(^DIC(42,+ECXTEMPW,0)),U,11)
"RTN","ECXRAD",90,0)
 . S ECXSTANO=$$GETDIV^ECXDEPT(ECXTEMPD)
"RTN","ECXRAD",91,0)
 S ECDOCNPI=$$NPI^XUSNPI("Individual_ID",$P(ECCA,U,14),ECDT)
"RTN","ECXRAD",92,0)
 S:+ECDOCNPI'>0 ECDOCNPI="" S ECDOCNPI=$P(ECDOCNPI,U)
"RTN","ECXRAD",93,0)
 S (ECXDSSD,ECXDSSP)=""
"RTN","ECXRAD",94,0)
 S ECS=$P(ECCA,U,7),ECDOC=ECPROF_$P(ECCA,U,14),ECDI=$P(ECCA,U,13),ECDOCPC=$$PRVCLASS^ECXUTL($P(ECCA,U,14),ECDT)
"RTN","ECXRAD",95,0)
 S ECPRO=$P(ECCA,U,2),ECSTAT=$P($G(^RA(72,+$P(ECCA,U,3),0)),U,3)
"RTN","ECXRAD",96,0)
 ;get the primary interpreting staff and the person class DBIA #65
"RTN","ECXRAD",97,0)
 S ECXIS=$P(ECCA,U,15),ECXISPC=$$PRVCLASS^ECXUTL(ECXIS,ECDT)
"RTN","ECXRAD",98,0)
 S ECISNPI=$$NPI^XUSNPI("Individual_ID",ECXIS,ECDT)
"RTN","ECXRAD",99,0)
 S:+ECISNPI'>0 ECISNPI="" S ECISNPI=$P(ECISNPI,U)
"RTN","ECXRAD",100,0)
 ;prefix interpreting radiologist with a "2" if not null
"RTN","ECXRAD",101,0)
 S ECXIS=$S(ECXIS:"2"_ECXIS,1:"")
"RTN","ECXRAD",102,0)
 ;get the principal clinic ien DBIA #65
"RTN","ECXRAD",103,0)
 S ECXPRCL=$P(ECCA,U,8)
"RTN","ECXRAD",104,0)
 ;get the clinic stop code from file #44
"RTN","ECXRAD",105,0)
 S ECXCSC=$$GET1^DIQ(40.7,$$GET1^DIQ(44,ECXPRCL,8,"I"),1)
"RTN","ECXRAD",106,0)
 Q:'ECPRO 
"RTN","ECXRAD",107,0)
 Q:+ECSTAT=0
"RTN","ECXRAD",108,0)
 ;get CPT code & modifiers
"RTN","ECXRAD",109,0)
 S ECPT=+$P($G(^RAMIS(71,+ECPRO,0)),U,9),ECXCMOD=""
"RTN","ECXRAD",110,0)
 ;quit if this is a 'parent' procedure
"RTN","ECXRAD",111,0)
 S TYPE=$P($G(^RAMIS(71,+ECPRO,0)),U,6)
"RTN","ECXRAD",112,0)
 Q:((ECPT=0)&(TYPE="P"))
"RTN","ECXRAD",113,0)
 ;if site is using radiology with cpt modifiers then get them
"RTN","ECXRAD",114,0)
 K ARR,ERR D FIELD^DID(70.03,135,,"LABEL","ARR","ERR")
"RTN","ECXRAD",115,0)
 I $D(ARR("LABEL")) D
"RTN","ECXRAD",116,0)
 .K ARR,ERR D FIELD^DID(70.03,135,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXRAD",117,0)
 .Q:$D(ERR("DIERR"))
"RTN","ECXRAD",118,0)
 .S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";") S ECMOD=0
"RTN","ECXRAD",119,0)
 .Q:'$D(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB))
"RTN","ECXRAD",120,0)
 .F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB,ECMOD)) Q:ECMOD'>0  S ECXCMOD=ECXCMOD_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",121,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXRAD",122,0)
 ;get procedure radiology modifiers
"RTN","ECXRAD",123,0)
 S ECMOD=0,ECMODS=""
"RTN","ECXRAD",124,0)
 F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,"M",ECMOD)) Q:ECMOD'>0  S ECMODS=ECMODS_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",125,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXRAD",126,0)
 I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXRAD",127,0)
 D FILE
"RTN","ECXRAD",128,0)
 Q
"RTN","ECXRAD",129,0)
 ;
"RTN","ECXRAD",130,0)
FILE ;file record
"RTN","ECXRAD",131,0)
 ;node0
"RTN","ECXRAD",132,0)
 ;rad div^dfn^ssn^name^in/out (ECXA)^day^cpt code^procedure^img loc^ward^
"RTN","ECXRAD",133,0)
 ;ser^diag code^req physician^modifiers^mov #^treat spec^time^
"RTN","ECXRAD",134,0)
 ;imaging type^Placehold primary care team^Placehold primary care provider
"RTN","ECXRAD",135,0)
 ;node1
"RTN","ECXRAD",136,0)
 ;mpi^placeholder^placeholder^placeholder^Placehold pc prov person class^
"RTN","ECXRAD",137,0)
 ;Placehold assoc pc provider^assoc pc prov person class^placeholder^dom^
"RTN","ECXRAD",138,0)
 ;observ pat ind^encounter num^ord stop code^ord date^division^
"RTN","ECXRAD",139,0)
 ;dss product ECXDSSP^requesting provider person class ECDOCPC^interp-
"RTN","ECXRAD",140,0)
 ;reting radiologist ECXIS^interpreting radiologist pc ECXISPC^princi-
"RTN","ECXRAD",141,0)
 ;pal clinic ECXPRCL^clinc stop code ECXCSC^emergency response indicator
"RTN","ECXRAD",142,0)
 ;(FEMA) ECXERI^Placehold assoc pc provider npi^interpreting rad npi^Placehold pc provider npi^req physician npi^Patient Category (PATCAT) ECXPATCAT^Credit Method ECXCM
"RTN","ECXRAD",143,0)
 ;NODE2
"RTN","ECXRAD",144,0)
 ;Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL^Exam verification date ECXMVDT
"RTN","ECXRAD",145,0)
 ;^Patient Division (ECXSTANO)  ;166 tjl
"RTN","ECXRAD",146,0)
 ;
"RTN","ECXRAD",147,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXRAD",148,0)
 N ECXDATA,ECXTSC
"RTN","ECXRAD",149,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXRAD",150,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXRAD",151,0)
 ;done
"RTN","ECXRAD",152,0)
 N DA,DIK
"RTN","ECXRAD",153,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXRAD",154,0)
 I ECXLOGIC>2018 S (ECPTTM,ECPTPR,ECCLAS,ECASPR,ECCLAS2,ECASNPI,ECPTNPI)="" ;170 PCMM-related fields will be null
"RTN","ECXRAD",155,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXRAD",156,0)
 S ECODE=ECODE_ECXDAY_U_ECXCPT_U_ECPRO_U_ECLOC_U_ECXW_U_ECS_U_ECDI_U
"RTN","ECXRAD",157,0)
 S ECODE=ECODE_ECDOC_U_ECMODS_U_ECXMN_U_ECXTSC_U_ECTM_U_ECTY_U_ECPTTM_U
"RTN","ECXRAD",158,0)
 S ECODE=ECODE_ECPTPR_U
"RTN","ECXRAD",159,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_ECCLAS_U_ECASPR_U
"RTN","ECXRAD",160,0)
 S ECODE1=ECODE1_ECCLAS2_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDST_U
"RTN","ECXRAD",161,0)
 S ECODE1=ECODE1_ECXORDDT_U_ECXPDIV_U
"RTN","ECXRAD",162,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_ECXDSSP_U_ECDOCPC
"RTN","ECXRAD",163,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXIS_U_ECXISPC_U_ECXPRCL_U_ECXCSC
"RTN","ECXRAD",164,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI
"RTN","ECXRAD",165,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECASNPI_U_ECISNPI_U_ECPTNPI_U_ECDOCNPI
"RTN","ECXRAD",166,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT ;127 PATCAT
"RTN","ECXRAD",167,0)
 I ECXLOGIC>2012 S ECODE1=ECODE1_U_ECXCM_U ;136 Credit Method 144 End of node needs an ^
"RTN","ECXRAD",168,0)
 I ECXLOGIC>2013 S ECODE2=ECXESC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXRAD",169,0)
 I ECXLOGIC>2015 S ECODE2=ECODE2_U_ECXMVDT ;154 Add verification date
"RTN","ECXRAD",170,0)
 I ECXLOGIC>2017 S ECODE2=ECODE2_U_ECXSTANO  ;166 tjl
"RTN","ECXRAD",171,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1 ;144
"RTN","ECXRAD",172,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXRAD",173,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXRAD",174,0)
 Q
"RTN","ECXRAD",175,0)
 ;
"RTN","ECXRAD",176,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXRAD",177,0)
 S ECHEAD="RAD"
"RTN","ECXRAD",178,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXRAD",179,0)
 Q
"RTN","ECXSCX1")
0^22^B105520040^B98733981
"RTN","ECXSCX1",1,0)
ECXSCX1 ;ALB/JAP,BIR/DMA-Clinic Extract Message ;9/4/18  13:23
"RTN","ECXSCX1",2,0)
 ;;3.0;DSS EXTRACTS;**8,28,24,27,29,30,31,33,84,92,105,127,132,144,149,154,166,170**;Dec 22, 1997;Build 12
"RTN","ECXSCX1",3,0)
EN ;entry point from ecxscx
"RTN","ECXSCX1",4,0)
 N ECX
"RTN","ECXSCX1",5,0)
 ;send missing clinic message
"RTN","ECXSCX1",6,0)
 S ECX=$O(^TMP($J,"ECXS","MISS",0)) D
"RTN","ECXSCX1",7,0)
 .Q:ECX=""
"RTN","ECXSCX1",8,0)
 .S XMSUB="MISSING CLINICS in File #728.44",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",9,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",10,0)
 .F ECX=1:1:5 S ^TMP($J,"ECXS","MISS",ECX,0)=$P($T(MSG+ECX),";;",2)
"RTN","ECXSCX1",11,0)
 .S XMTEXT="^TMP($J,""ECXS"",""MISS""," D ^XMD
"RTN","ECXSCX1",12,0)
 ;send no division message
"RTN","ECXSCX1",13,0)
 S ECX=$O(^TMP($J,"ECXS","DIV",0)) D
"RTN","ECXSCX1",14,0)
 .Q:ECX=""
"RTN","ECXSCX1",15,0)
 .S XMSUB="CLINICS w/o DIVISION Data",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",16,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",17,0)
 .F ECX=1:1:5 S ^TMP($J,"ECXS","DIV",ECX,0)=$P($T(MSG2+ECX),";;",2)
"RTN","ECXSCX1",18,0)
 .S XMTEXT="^TMP($J,""ECXS"",""DIV""," D ^XMD
"RTN","ECXSCX1",19,0)
 ;cleanup
"RTN","ECXSCX1",20,0)
 K ^TMP($J,"ECXS")
"RTN","ECXSCX1",21,0)
 Q
"RTN","ECXSCX1",22,0)
MSG ;text for missing clinic
"RTN","ECXSCX1",23,0)
 ;;The following clinics have not been entered into the CLINIC AND
"RTN","ECXSCX1",24,0)
 ;;STOP CODES file (#728.44).  If any listed clinic is currently
"RTN","ECXSCX1",25,0)
 ;;active, please use the options 'Create DSS Clinic Stop Code File'
"RTN","ECXSCX1",26,0)
 ;;and 'Enter/Edit DSS Stop Codes for Clinics' to update this file.
"RTN","ECXSCX1",27,0)
 ;;  
"RTN","ECXSCX1",28,0)
 ;
"RTN","ECXSCX1",29,0)
MSG2 ;text for missing division
"RTN","ECXSCX1",30,0)
 ;;The following clinics in the HOSPITAL LOCATION file (#44) have not
"RTN","ECXSCX1",31,0)
 ;;been assigned to a division from the MEDICAL CENTER DIVISION file 
"RTN","ECXSCX1",32,0)
 ;;(#40.8).  CLI extract records associated with these clinics have
"RTN","ECXSCX1",33,0)
 ;;been given a default Division identifier of "1".
"RTN","ECXSCX1",34,0)
 ;;
"RTN","ECXSCX1",35,0)
 ;
"RTN","ECXSCX1",36,0)
MISS ;load ^tmp if clinic missing from #728.44
"RTN","ECXSCX1",37,0)
 N DAT,ID,RD
"RTN","ECXSCX1",38,0)
 S (ID,RD)=""
"RTN","ECXSCX1",39,0)
 S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCX1",40,0)
 ;ignore inactive clinics
"RTN","ECXSCX1",41,0)
 I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",42,0)
 I '$D(^TMP($J,"ECXS","ECXMISS")) S ^TMP($J,"ECXS","ECXMISS")=10
"RTN","ECXSCX1",43,0)
 S ECXMISS=^TMP($J,"ECXS","ECXMISS")
"RTN","ECXSCX1",44,0)
 S ^TMP($J,"ECXS","MISS",ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),U),40)_ECSC_"/"_ECCSC
"RTN","ECXSCX1",45,0)
 S ^TMP($J,"ECXS","ECXMISS")=ECXMISS+1
"RTN","ECXSCX1",46,0)
 Q
"RTN","ECXSCX1",47,0)
 ;
"RTN","ECXSCX1",48,0)
NODIV ;load ^tmp if clinic w/o division
"RTN","ECXSCX1",49,0)
 N DAT,ID,RD
"RTN","ECXSCX1",50,0)
 S (ID,RD)=""
"RTN","ECXSCX1",51,0)
 S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCX1",52,0)
 ;ignore inactive clinics
"RTN","ECXSCX1",53,0)
 I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",54,0)
 I '$D(^TMP($J,"ECXS","ECXMISS")) S ^TMP($J,"ECXS","ECXMISS")=10
"RTN","ECXSCX1",55,0)
 S ECXMISS=^TMP($J,"ECXS","ECXMISS")
"RTN","ECXSCX1",56,0)
 S ^TMP($J,"ECXS","DIV",ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),U),40)
"RTN","ECXSCX1",57,0)
 S ^TMP($J,"ECXS","ECXMISS")=ECXMISS+1
"RTN","ECXSCX1",58,0)
 Q
"RTN","ECXSCX1",59,0)
 ;
"RTN","ECXSCX1",60,0)
FEEDER(ECXSC,ECXSD,ECXP1,ECXP2,ECXP3,ECXSEND,ECXDIV,ECXP4) ;166 - get transmission style and feeder key variables. New parameter added for labor code
"RTN","ECXSCX1",61,0)
 ;feeder key = primary stop code_secondary stop code_length of appointment_national clinic code_noshow indicator_labor code
"RTN","ECXSCX1",62,0)
 ;   input
"RTN","ECXSCX1",63,0)
 ;   ECXSC = ien of clinic in file #44 (required)
"RTN","ECXSCX1",64,0)
 ;   ECXSD  = start date of extract date range (required)
"RTN","ECXSCX1",65,0)
 ;   ECXP1,ECXP2,ECXP3,ECXP4,ECXSEND passed by reference (required)
"RTN","ECXSCX1",66,0)
 ;   output (passed-by-reference variables)
"RTN","ECXSCX1",67,0)
 ;   ECXP1  = primary stop code
"RTN","ECXSCX1",68,0)
 ;   ECXP2  = secondary stop code
"RTN","ECXSCX1",69,0)
 ;   ECXP3  = field #7 of file #728.44
"RTN","ECXSCX1",70,0)
 ;   ECXP4  = field #13 of file #728.44
"RTN","ECXSCX1",71,0)
 ;   ECXSEND = field #5 of file #728.44
"RTN","ECXSCX1",72,0)
 ;   ECXDIV  = field #3.5 of file #44
"RTN","ECXSCX1",73,0)
 N ECSC,ECCSC,ECSD1,ECXNC,ECXMISS,CLIN,SC,ECXMLC ;166
"RTN","ECXSCX1",74,0)
 S (ECXP1,ECXP2)="000",ECXP3="0000",ECXP4="" ;166
"RTN","ECXSCX1",75,0)
 S ECXSEND=1,ECXDIV=0
"RTN","ECXSCX1",76,0)
 Q:+ECXSC=0
"RTN","ECXSCX1",77,0)
 ;get needed data from ^tmp
"RTN","ECXSCX1",78,0)
 I $D(^TMP($J,"ECXS","SC",ECXSC)) D
"RTN","ECXSCX1",79,0)
 .S CLIN=^TMP($J,"ECXS","SC",ECXSC)
"RTN","ECXSCX1",80,0)
 .S ECXP1=$P(CLIN,U),ECXP2=$P(CLIN,U,2),ECXP3=$P(CLIN,U,3),ECXSEND=$P(CLIN,U,4),ECXP4=$P(CLIN,U,5) ;166
"RTN","ECXSCX1",81,0)
 .S ECXDIV=+$P($G(^TMP($J,"ECXCL",ECXSC)),U,4) S:ECXDIV=0 ECXDIV=1
"RTN","ECXSCX1",82,0)
 ;otherwise, set needed data in ^tmp
"RTN","ECXSCX1",83,0)
 I '$D(^TMP($J,"ECXS","SC",ECXSC)) D
"RTN","ECXSCX1",84,0)
 .;get division or send no division msg
"RTN","ECXSCX1",85,0)
 .S ECXDIV=+$P($G(^TMP($J,"ECXCL",ECXSC)),U,4)
"RTN","ECXSCX1",86,0)
 .I ECXDIV=0 S SC=ECXSC D NODIV S ECXDIV=1
"RTN","ECXSCX1",87,0)
 .;get other data from file #44 if no #728.44 record; send missing clinic msg
"RTN","ECXSCX1",88,0)
 .I '$D(^ECX(728.44,ECXSC,0)) D
"RTN","ECXSCX1",89,0)
 ..S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P(^(0),U,18)
"RTN","ECXSCX1",90,0)
 ..S SC=ECXSC,ECSD1=ECXSD D MISS
"RTN","ECXSCX1",91,0)
 ..S:ECSC ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2),ECXP1=$$RJ^XLFSTR(+ECXP1,3,0)
"RTN","ECXSCX1",92,0)
 .;otherwise get other data from file #728.44
"RTN","ECXSCX1",93,0)
 .S EC=$G(^ECX(728.44,ECXSC,0)) D
"RTN","ECXSCX1",94,0)
 ..Q:EC=""
"RTN","ECXSCX1",95,0)
 ..S ECXSEND=$P(EC,U,6)
"RTN","ECXSCX1",96,0)
 ..Q:ECXSEND=6
"RTN","ECXSCX1",97,0)
 ..S ECSC=+$P(EC,U,4),ECCSC=+$P(EC,U,5)
"RTN","ECXSCX1",98,0)
 ..I 'ECSC S ECSC=+$P(EC,U,2),ECCSC=+$P(EC,U,3)
"RTN","ECXSCX1",99,0)
 ..I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXSCX1",100,0)
 ..;if primary stop not valid, use file #44 record
"RTN","ECXSCX1",101,0)
 ..I 'ECSC S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P($G(^(0)),U,18) I ECSC D
"RTN","ECXSCX1",102,0)
 ...S ECXP1=+$P($G(^DIC(40.7,ECSC,0)),U,2)
"RTN","ECXSCX1",103,0)
 ...S:ECCSC ECXP2=+$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXSCX1",104,0)
 ...S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXSCX1",105,0)
 .;for action code=1, secondary stop code is always "000"
"RTN","ECXSCX1",106,0)
 .I ECXSEND=1 S ECXP2="000"
"RTN","ECXSCX1",107,0)
 .;action code of 2 or 3 should not be used, but continue to follow v2t11 logic
"RTN","ECXSCX1",108,0)
 .I ECXSEND=2 S ECXP1=ECXP2,ECXP2="000"
"RTN","ECXSCX1",109,0)
 .;for action code=4, need to get national clinic code
"RTN","ECXSCX1",110,0)
 .I ECXSEND=4 D
"RTN","ECXSCX1",111,0)
 ..S ECXNC=+$P($G(^ECX(728.44,ECXSC,0)),U,8)
"RTN","ECXSCX1",112,0)
 ..I ECXNC S ECXNC=$P($G(^ECX(728.441,ECXNC,0)),U),ECXP3=$$RJ^XLFSTR(ECXNC,4,0)
"RTN","ECXSCX1",113,0)
 .;set data in ^tmp
"RTN","ECXSCX1",114,0)
 .S ECXMLC=$S($G(ECXLOGIC)>2017:$$GET1^DIQ(728.44,ECXSC,13),1:"") ;166 Get labor code from 728.44 but only use it if it's FY18 or later
"RTN","ECXSCX1",115,0)
 .S ^TMP($J,"ECXS","SC",ECXSC)=ECXP1_U_ECXP2_U_ECXP3_U_ECXSEND_U_ECXMLC ;166 Add MCAO Labor Code
"RTN","ECXSCX1",116,0)
 Q
"RTN","ECXSCX1",117,0)
 ;
"RTN","ECXSCX1",118,0)
VISIT(ECXDFN,ECXVISIT,ECXVIST,ECXERR) ;get visit specific data
"RTN","ECXSCX1",119,0)
 ;input  ECXVISIT  = pointer to file #9000010
"RTN","ECXSCX1",120,0)
 ;       ECXSVC  = sc percentage
"RTN","ECXSCX1",121,0)
 ;output ECXVSIT = data array
"RTN","ECXSCX1",122,0)
 ;       ECXERR  = 1 indicates error; otherwise, 0
"RTN","ECXSCX1",123,0)
 N AO,ARRAY,CM,CNT,CPT,DA,DATE,DA,DIQ,ICD,ICD9,IR,LEN,M,MOD,MST,NUM,NOD1,NODE
"RTN","ECXSCX1",124,0)
 N PROV,PROVPC,REC,VAL,VISIT,X,Y,HNC,PGE,CV,SHAD,ENCSC,ENCCL ;144
"RTN","ECXSCX1",125,0)
 N MAXCPT,MAXMOD  ;170
"RTN","ECXSCX1",126,0)
 S MAXCPT=8 S:ECXLOGIC>2018 MAXCPT=25  ;170
"RTN","ECXSCX1",127,0)
 S MAXMOD=5 S:ECXLOGIC>2018 MAXMOD=6   ;170
"RTN","ECXSCX1",128,0)
 S ECXERR=0,VISIT=ECXVISIT
"RTN","ECXSCX1",129,0)
 S (ECXVIST("AO"),ECXVIST("IR"),ECXVIST("PGE"),ECXVIST("HNC"))=""
"RTN","ECXSCX1",130,0)
 S (ECXVIST("MST"),ECXVIST("CV"),ECXVIST("SHAD"),ECXVIST("ENCSC"),ECXVIST("ENCCL"))="" ;144
"RTN","ECXSCX1",131,0)
 ;MRY-2/4/2010, extracts don't seem to use encounter (visit) "CV".
"RTN","ECXSCX1",132,0)
 ;extracts use eligibility API for some reason.  Added "CV" anyway.
"RTN","ECXSCX1",133,0)
 S (ECXVIST("PROV"),ECXVIST("PROV CLASS"))=""
"RTN","ECXSCX1",134,0)
 S (ECXVIST("PROV NPI"),ECXVIST("SOURCE"))=""
"RTN","ECXSCX1",135,0)
 F I="P",1,2,3,4 S ECXVIST("ICD9"_I)=""
"RTN","ECXSCX1",136,0)
 F I=1:1:MAXCPT S ECXVIST("CPT"_I)=""
"RTN","ECXSCX1",137,0)
 D ENCEVENT^PXAPI(VISIT)
"RTN","ECXSCX1",138,0)
 I $O(^TMP("PXKENC",$J,VISIT,""))']"" K ECXVIST S ECXERR=1
"RTN","ECXSCX1",139,0)
 Q:ECXERR
"RTN","ECXSCX1",140,0)
 S DATE=$P($P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,0),U,1),".",1)
"RTN","ECXSCX1",141,0)
 S ECXVIST("SOURCE")=$P($G(^TMP("PXKENC",$J,VISIT,"VST",VISIT,812)),U,3)
"RTN","ECXSCX1",142,0)
 ;get icd codes upto 5, will be stored in ICD9 named variables, even if they're 10 codes (or any future version)
"RTN","ECXSCX1",143,0)
 K ARY S ICD("P")=0,ICD("S")=0,(ARY,REC)=""
"RTN","ECXSCX1",144,0)
 F  S REC=$O(^TMP("PXKENC",$J,VISIT,"POV",REC)) Q:REC=""  D
"RTN","ECXSCX1",145,0)
 .S VAL=^TMP("PXKENC",$J,VISIT,"POV",REC,0) Q:'VAL
"RTN","ECXSCX1",146,0)
 .I $P(VAL,U,12)="P" D
"RTN","ECXSCX1",147,0)
 ..S:'$D(ARY("P",+VAL)) CNT=ICD("P")+1,ICD("P",CNT)=+VAL,ICD("P")=CNT
"RTN","ECXSCX1",148,0)
 ..S ARY("P",+VAL)=""
"RTN","ECXSCX1",149,0)
 .I $P(VAL,U,12)'="P" D
"RTN","ECXSCX1",150,0)
 ..S:'$D(ARY("S",+VAL)) CNT=ICD("S")+1,ICD("S",CNT)=+VAL,ICD("S")=CNT
"RTN","ECXSCX1",151,0)
 ..S ARY("S",+VAL)=""
"RTN","ECXSCX1",152,0)
 S CNT=0,ECXVIST("ICD9P")=$S(+$G(ICD("P",1)):$$CODEC^ICDEX(80,ICD("P",1)),1:"") ;154 Get code if value exists in ICD("P",1) else return null
"RTN","ECXSCX1",153,0)
 F I=2:1 Q:'$D(ICD("P",I))  D  Q:CNT>4
"RTN","ECXSCX1",154,0)
 .S CNT=CNT+1,ECXVIST("ICD9"_CNT)=$S(+$G(ICD("P",I)):$$CODEC^ICDEX(80,ICD("P",I)),1:"") ;154 Get code if value exists in ICD("P",I) else return null
"RTN","ECXSCX1",155,0)
 I CNT<4 F I=1:1:8 Q:'$D(ICD("S",I))  D  Q:CNT>4
"RTN","ECXSCX1",156,0)
 .I '$D(ARY("P",ICD("S",I))) D
"RTN","ECXSCX1",157,0)
 ..S CNT=CNT+1,ECXVIST("ICD9"_CNT)=$S(+$G(ICD("S",I)):$$CODEC^ICDEX(80,ICD("S",I)),1:"") ;154 Get code if value exists in ICD("S",I) else return null
"RTN","ECXSCX1",158,0)
 ;get first provider designated as primary
"RTN","ECXSCX1",159,0)
 ;if no primary, then get first physician provider
"RTN","ECXSCX1",160,0)
 ;if no physician, then get first provider
"RTN","ECXSCX1",161,0)
 S (PROV,PROVPC)=""
"RTN","ECXSCX1",162,0)
 I $O(^TMP("PXKENC",$J,VISIT,"PRV",0)) D
"RTN","ECXSCX1",163,0)
 .S (REC,VAL)=0 D
"RTN","ECXSCX1",164,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)!(VAL)  D
"RTN","ECXSCX1",165,0)
 ...S:($P(^(REC,0),U,4)="P") VAL=+^(0)
"RTN","ECXSCX1",166,0)
 ...S PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE)
"RTN","ECXSCX1",167,0)
 .I 'VAL S (REC,VAL)=0 D
"RTN","ECXSCX1",168,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)!(VAL)  D
"RTN","ECXSCX1",169,0)
 ...S (PROV,VAL)=+^(REC,0)
"RTN","ECXSCX1",170,0)
 ...S PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE) Q:PROVPC=""
"RTN","ECXSCX1",171,0)
 ...S NUM=$E(PROVPC,2,7) S:(NUM<110000)!(NUM>119999) VAL=0,PROVPC=""
"RTN","ECXSCX1",172,0)
 .I 'VAL D
"RTN","ECXSCX1",173,0)
 ..S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",0)) Q:('REC)!(VAL)
"RTN","ECXSCX1",174,0)
 ..S VAL=+^(REC,0),PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE)
"RTN","ECXSCX1",175,0)
 .S:PROV]"" PROV="2"_PROV
"RTN","ECXSCX1",176,0)
 S ECXVIST("PROV")=PROV,ECXVIST("PROV CLASS")=PROVPC
"RTN","ECXSCX1",177,0)
 S ECXVIST("PROV NPI")=""
"RTN","ECXSCX1",178,0)
 ;get 1-7 secondary physicians
"RTN","ECXSCX1",179,0)
 F I=1:1:7 S ECXVIST("PROVS"_I)="" ;144 two more providers cvw
"RTN","ECXSCX1",180,0)
 I $O(^TMP("PXKENC",$J,VISIT,"PRV",0)) D
"RTN","ECXSCX1",181,0)
 .S (REC,VAL,COUNTS)=0 D
"RTN","ECXSCX1",182,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)  D
"RTN","ECXSCX1",183,0)
 ...Q:$P(^(REC,0),U,4)'="S"
"RTN","ECXSCX1",184,0)
 ...S VAL=+^(0) I $E(PROV,2,99)=VAL Q  ;don't process, primary
"RTN","ECXSCX1",185,0)
 ...S COUNTS=COUNTS+1 Q:(COUNTS>7)  ;144 two more providers cvw
"RTN","ECXSCX1",186,0)
 ...S PROVS=VAL,PROVSPC=$$PRVCLASS^ECXUTL(PROVS,DATE)
"RTN","ECXSCX1",187,0)
 ...S PROVSNPI=$$NPI^XUSNPI("Individual_ID",PROVS,DATE)
"RTN","ECXSCX1",188,0)
 ...S:+PROVSNPI'>0 PROVSNPI="" S PROVSNPI=$P(PROVSNPI,U)
"RTN","ECXSCX1",189,0)
 ...S ECXVIST("PROVS"_COUNTS)="2"_PROVS_U_PROVSPC_U_PROVSNPI
"RTN","ECXSCX1",190,0)
 ;get cpt codes up to MAXCPT & modifiers up to MAXMOD
"RTN","ECXSCX1",191,0)
 S CNT=1,PROV=$E(PROV,2,99)
"RTN","ECXSCX1",192,0)
 S ECXVIST("PRIMPROC")="" ;149 Initialize primary procedure
"RTN","ECXSCX1",193,0)
 D:$O(^TMP("PXKENC",$J,VISIT,"CPT",0))
"RTN","ECXSCX1",194,0)
 .S REC=0 D:PROV]""
"RTN","ECXSCX1",195,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC)) Q:'REC  D  Q:CNT>MAXCPT
"RTN","ECXSCX1",196,0)
 ...S CPT="",NODE=$G(^TMP("PXKENC",$J,VISIT,"CPT",REC,12))
"RTN","ECXSCX1",197,0)
 ...Q:NODE=""
"RTN","ECXSCX1",198,0)
 ...S NOD1=$S($P(NODE,U,4)=PROV:^TMP("PXKENC",$J,VISIT,"CPT",REC,0),1:"")
"RTN","ECXSCX1",199,0)
 ...Q:$P(NOD1,U)=""
"RTN","ECXSCX1",200,0)
 ...S Q="00"_+$P(NOD1,U,16),Q=$S(+Q:$E(Q,$L(Q)-1,$L(Q)),1:"01")
"RTN","ECXSCX1",201,0)
 ...S CPT=$P(NOD1,U),M=0,MOD=""
"RTN","ECXSCX1",202,0)
 ...F I=1:1:MAXMOD S M=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M)) Q:'M  D
"RTN","ECXSCX1",203,0)
 ....S MOD=MOD_$S(MOD'="":";",1:"")
"RTN","ECXSCX1",204,0)
 ....S MOD=MOD_$P(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M,0),U)
"RTN","ECXSCX1",205,0)
 ...I ECXLOGIC<2019 S ECXVIST("CPT"_CNT)=$$CPT^ECXUTL3(CPT,MOD,Q)
"RTN","ECXSCX1",206,0)
 ...I ECXLOGIC>2018 S ECXVIST("CPT"_CNT)=$$CPT3Q6M^ECXUTL3(CPT,MOD,Q)
"RTN","ECXSCX1",207,0)
 ...S:$P(NOD1,U,7)="Y" ECXVIST("PRIMPROC")=ECXVIST("CPT"_CNT) S CNT=CNT+1 ;149
"RTN","ECXSCX1",208,0)
 ...K ^TMP("PXKENC",$J,VISIT,"CPT",REC)
"RTN","ECXSCX1",209,0)
 ..Q:CNT>MAXCPT
"RTN","ECXSCX1",210,0)
 .Q:CNT>MAXCPT  S REC=0
"RTN","ECXSCX1",211,0)
 .F  S REC=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC)) Q:'REC  D  Q:CNT>MAXCPT
"RTN","ECXSCX1",212,0)
 ..S CPT="",NOD1=$G(^TMP("PXKENC",$J,VISIT,"CPT",REC,0))
"RTN","ECXSCX1",213,0)
 ..Q:$P(NOD1,U)=""
"RTN","ECXSCX1",214,0)
 ..S Q="00"_+$P(NOD1,U,16),Q=$S(+Q:$E(Q,$L(Q)-1,$L(Q)),1:"01")
"RTN","ECXSCX1",215,0)
 ..S CPT=$P(NOD1,U),M=0,MOD=""
"RTN","ECXSCX1",216,0)
 ..F I=1:1:MAXMOD S M=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M)) Q:'M  D
"RTN","ECXSCX1",217,0)
 ...S MOD=MOD_$S(MOD'="":";",1:"")
"RTN","ECXSCX1",218,0)
 ...S MOD=MOD_$P(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M,0),U)
"RTN","ECXSCX1",219,0)
 ..I ECXLOGIC<2019 S ECXVIST("CPT"_CNT)=$$CPT^ECXUTL3(CPT,MOD,Q)
"RTN","ECXSCX1",220,0)
 ..I ECXLOGIC>2018 S ECXVIST("CPT"_CNT)=$$CPT3Q6M^ECXUTL3(CPT,MOD,Q)
"RTN","ECXSCX1",221,0)
 ..S:$P(NOD1,U,7)="Y" ECXVIST("PRIMPROC")=ECXVIST("CPT"_CNT) S CNT=CNT+1 ;149
"RTN","ECXSCX1",222,0)
 ..K ^TMP("PXKENC",$J,VISIT,"CPT",REC)
"RTN","ECXSCX1",223,0)
 ..Q:CNT>MAXCPT
"RTN","ECXSCX1",224,0)
 I ECXLOGIC<2019 S:ECXVIST("CPT1")="" ECXVIST("CPT1")=9919901
"RTN","ECXSCX1",225,0)
 I ECXLOGIC>2018 S:ECXVIST("CPT1")="" ECXVIST("CPT1")=99199001
"RTN","ECXSCX1",226,0)
 ;ao, ir, mst, pge, hnc, cv, shad
"RTN","ECXSCX1",227,0)
 S (AO,IR,MST,PGE,HNC,CV,SHAD,ENCSC,ENCCL)="" ;144
"RTN","ECXSCX1",228,0)
 I $D(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800)) D
"RTN","ECXSCX1",229,0)
 .S ENCSC=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U) ;144 Encounter Service Connected
"RTN","ECXSCX1",230,0)
 .S AO=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,2)
"RTN","ECXSCX1",231,0)
 .S IR=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,3),MST=$P(^(800),U,5)
"RTN","ECXSCX1",232,0)
 .S PGE=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,4),HNC=$P(^(800),U,6)
"RTN","ECXSCX1",233,0)
 .S CV=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,7),SHAD=$P(^(800),U,8)
"RTN","ECXSCX1",234,0)
 .S ENCCL=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,9) ;144,154 Encounter Camp Lejeune
"RTN","ECXSCX1",235,0)
 .S ECXVIST("AO")=$S(AO=0:"N",AO=1:"Y",1:"")
"RTN","ECXSCX1",236,0)
 .S ECXVIST("IR")=$S(IR=0:"N",IR=1:"Y",1:"")
"RTN","ECXSCX1",237,0)
 .S ECXVIST("MST")=$S(MST=0:"N",MST=1:"Y",1:"")
"RTN","ECXSCX1",238,0)
 .S ECXVIST("PGE")=$S(PGE=0:"N",PGE=1:"Y",1:"")
"RTN","ECXSCX1",239,0)
 .S ECXVIST("HNC")=$S(HNC=0:"N",HNC=1:"Y",1:"")
"RTN","ECXSCX1",240,0)
 .S ECXVIST("CV")=$S(CV=0:"N",CV=1:"Y",1:"")
"RTN","ECXSCX1",241,0)
 .S ECXVIST("SHAD")=$S(SHAD=0:"N",SHAD=1:"Y",1:"")
"RTN","ECXSCX1",242,0)
 .S ECXVIST("ENCSC")=$S(ENCSC=0:"N",ENCSC=1:"Y",1:"") ;144 Encounter Service Connected
"RTN","ECXSCX1",243,0)
 .S ECXVIST("ENCCL")=$S(ENCCL=0:"N",ENCCL=1:"Y",1:"") ;144 Encounter Camp Lejeune.
"RTN","ECXSCX1",244,0)
 Q
"RTN","ECXSCX2")
0^34^B10651540^B10492565
"RTN","ECXSCX2",1,0)
ECXSCX2 ;ALB/ESD  DSS Clinic Extract Utilities (continued) ;6/29/18  15:30
"RTN","ECXSCX2",2,0)
 ;;3.0;DSS EXTRACTS;**39,46,49,71,84,92,105,120,127,144,149,170**;Dec 22, 1997;Build 12
"RTN","ECXSCX2",3,0)
 ;
"RTN","ECXSCX2",4,0)
 ;
"RTN","ECXSCX2",5,0)
INTPAT ;initialize patient variables
"RTN","ECXSCX2",6,0)
 S (ECXSSN,ECXPNM,ECPTPR,ECCLAS,ECPTNPI,ECASPR,ECCLAS2,ECASNPI,ECXZIP)=""
"RTN","ECXSCX2",7,0)
 S (ECPTTM,ECXVET,ECXRACE,ECXENRL,ECXMPI,ECXSEX,ECXVNS)=""
"RTN","ECXSCX2",8,0)
 S (ECXDOB,ECXELIG,ECXPST,ECXPLOC,ECXRST,ECXAST,ECXMST,ECXSTATE)=""
"RTN","ECXSCX2",9,0)
 S (ECXCNTY,ECXCNTRY,ECXATYP,ECXPVST,ECXMTST,ECXEST,ECXECE,ECXHNC)=""
"RTN","ECXSCX2",10,0)
 S (ECXESC,ECXECL,ECXCLST,ECXSVCI,ECXSVCL)="" ;149
"RTN","ECXSCX2",11,0)
 Q
"RTN","ECXSCX2",12,0)
 ;
"RTN","ECXSCX2",13,0)
PAT1(ECXDFN,ECXDATE,ECXERR)     ;get patient demographic data
"RTN","ECXSCX2",14,0)
 N ECXPAT,K,OK,X
"RTN","ECXSCX2",15,0)
 S ECXERR=0
"RTN","ECXSCX2",16,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;4;5",.ECXPAT)
"RTN","ECXSCX2",17,0)
 I 'OK S ECXERR=1 Q
"RTN","ECXSCX2",18,0)
 S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI")
"RTN","ECXSCX2",19,0)
 S ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXSCX2",20,0)
 S ECXVET=ECXPAT("VET"),ECXSVC=ECXPAT("SC%"),ECXRACE=ECXPAT("RACE")
"RTN","ECXSCX2",21,0)
 S ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXSCX2",22,0)
 S ECXRST=ECXPAT("IR STAT"),ECXAST=ECXPAT("AO STAT")
"RTN","ECXSCX2",23,0)
 S ECXMST=ECXPAT("MST STAT"),ECXSTATE=ECXPAT("STATE")
"RTN","ECXSCX2",24,0)
 S ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP")
"RTN","ECXSCX2",25,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXSCX2",26,0)
 S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXSCX2",27,0)
 ; changes for 2001
"RTN","ECXSCX2",28,0)
 S ECXPOS=ECXPAT("POS"),ECXPHI=ECXPAT("PHI")
"RTN","ECXSCX2",29,0)
 ;- Agent Orange location
"RTN","ECXSCX2",30,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXSCX2",31,0)
 ;OEF/OIF data
"RTN","ECXSCX2",32,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXSCX2",33,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXSCX2",34,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXSCX2",35,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSCX2",36,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSCX2",37,0)
 ; - PROJ 112/SHAD Indicator
"RTN","ECXSCX2",38,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXSCX2",39,0)
 ; - Race and Ethnicity
"RTN","ECXSCX2",40,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXSCX2",41,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXSCX2",42,0)
 ; - Environmental Contaminants
"RTN","ECXSCX2",43,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXSCX2",44,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXSCX2",45,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXSCX2",46,0)
 ;get vietnam indicator fy14 144 cvw
"RTN","ECXSCX2",47,0)
 S ECXVNS=ECXPAT("VIETNAM")
"RTN","ECXSCX2",48,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXSCX2",49,0)
 S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXSCX2",50,0)
 S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXSCX2",51,0)
 Q
"RTN","ECXSCX2",52,0)
 ;
"RTN","ECXSCX2",53,0)
PAT2(ECXDFN,ECXDATE)    ;get date specific patient data
"RTN","ECXSCX2",54,0)
 N K,X
"RTN","ECXSCX2",55,0)
 ;get primary care data
"RTN","ECXSCX2",56,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXSCX2",57,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXSCX2",58,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXSCX2",59,0)
 ;get inpatient data
"RTN","ECXSCX2",60,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXTS=$P(X,U,3)
"RTN","ECXSCX2",61,0)
 S ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4),ECXASIH=$P(X,U,14) ;170
"RTN","ECXSCX2",62,0)
 ;- set national patient record flag if exist
"RTN","ECXSCX2",63,0)
 D NPRF^ECXUTL5
"RTN","ECXSCX2",64,0)
 Q
"RTN","ECXSCX2",65,0)
 ;
"RTN","ECXSCX2",66,0)
FILE2(ECXFILE,EC7,ECODE) ;file record
"RTN","ECXSCX2",67,0)
 N DA,DIK,X S X=""
"RTN","ECXSCX2",68,0)
 F  S X=$O(ECODE(X)) Q:X=""  S ^ECX(ECXFILE,EC7,X)=ECODE(X)
"RTN","ECXSCX2",69,0)
 S DA=EC7,DIK="^ECX("_ECXFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXSCX2",70,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSCX2",71,0)
 Q
"RTN","ECXSCX2",72,0)
 ;
"RTN","ECXSCX2",73,0)
CBOC(MDIV) ;Determine whether patient's facility was CBOC
"RTN","ECXSCX2",74,0)
 N LOCARR,DIC,DR,DIQ,DA,INST,FTYP
"RTN","ECXSCX2",75,0)
 S DIC=40.8,DA=MDIV,DR=".07",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",76,0)
 S INST=$G(LOCARR(40.8,MDIV,.07,"I")) I INST="" Q ""
"RTN","ECXSCX2",77,0)
 K LOCARR S DIC=4,DA=INST,DR="13",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",78,0)
 S FTYP=$G(LOCARR(4,INST,13,"I")) I FTYP="" Q ""
"RTN","ECXSCX2",79,0)
 K LOCARR S DIC=4.1,DA=FTYP,DR=".01",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",80,0)
 Q $S($G(LOCARR(4.1,FTYP,.01,"I"))="CBOC":"Y",1:"")
"RTN","ECXSCXN")
0^2^B112519738^B94558917
"RTN","ECXSCXN",1,0)
ECXSCXN ;ALB/JAP  Clinic Extract ;7/3/18  14:06
"RTN","ECXSCXN",2,0)
 ;;3.0;DSS EXTRACTS;**24,27,29,30,31,32,33,39,46,49,52,71,84,92,107,105,120,124,127,132,136,144,149,156,154,161,166,170**;Dec 22, 1997;Build 12
"RTN","ECXSCXN",3,0)
 ;
"RTN","ECXSCXN",4,0)
BEG ;entry point from option
"RTN","ECXSCXN",5,0)
 D SETUP Q:ECFILE=""  D ^ECXTRAC,^ECXKILL
"RTN","ECXSCXN",6,0)
 Q
"RTN","ECXSCXN",7,0)
 ;
"RTN","ECXSCXN",8,0)
START ;entry point from taskmgr
"RTN","ECXSCXN",9,0)
 N DIC,EXNUM,I,LOCARR,OUT,P1,P2,P3,P4,PROCESS,SOURCE,STOP,STAT,TOSEND ;166
"RTN","ECXSCXN",10,0)
 N TIU,X,Y,ECXNPRFI
"RTN","ECXSCXN",11,0)
 N ECXICD10P,ECXICD101,ECXICD102,ECXICD103,ECXICD104
"RTN","ECXSCXN",12,0)
 F I=1:1:8 S @("ECXCPT"_I)=""
"RTN","ECXSCXN",13,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXSCXN",14,0)
 F I=1:1:4 S @("ECXICD10"_I)=""
"RTN","ECXSCXN",15,0)
 F I=1:1:25 S @("ECXCQM"_I)=""  ;170 - initialize the 25 new CPT variables
"RTN","ECXSCXN",16,0)
 S (OUT,QFLG,ECRN)=0,(ECXICD9P,ECXOBI,ECXICD10P)=""
"RTN","ECXSCXN",17,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL"),^TMP($J,"SDAMA301") ;136
"RTN","ECXSCXN",18,0)
 ;get ien for tiu in file #839.7
"RTN","ECXSCXN",19,0)
 S DIC="^PX(839.7,",DIC(0)="X",X="TEXT INTEGRATION UTILITIES"
"RTN","ECXSCXN",20,0)
 D ^DIC S TIU=+Y,ECED=ECED+.3,ECXCLIN=0 K DIC,Y
"RTN","ECXSCXN",21,0)
 ;get clinic default appt length, type, division
"RTN","ECXSCXN",22,0)
 F  S ECXCLIN=$O(^SC(ECXCLIN)) Q:'ECXCLIN  D
"RTN","ECXSCXN",23,0)
 .K LOCARR S DIC=44,DA=ECXCLIN,DR="2;3.5;1912",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",24,0)
 .D EN^DIQ1
"RTN","ECXSCXN",25,0)
 .Q:$G(LOCARR(44,ECXCLIN,2,"I"))'="C"
"RTN","ECXSCXN",26,0)
 .S ALEN=+$G(LOCARR(44,ECXCLIN,1912,"I"))
"RTN","ECXSCXN",27,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=ALEN,ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",28,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=^TMP($J,"ECXCL",ECXCLIN)_"^"_ALEN_"^"_$G(LOCARR(44,ECXCLIN,2,"I"))_"^"_+$G(LOCARR(44,ECXCLIN,3.5,"I"))
"RTN","ECXSCXN",29,0)
 .D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV,.P4) ;166
"RTN","ECXSCXN",30,0)
 .K P1,P2,P3,P4,TOSEND,ECXDIV ;166
"RTN","ECXSCXN",31,0)
 ;get from file #44 any no-shows & get encounters from #409.68
"RTN","ECXSCXN",32,0)
 D NOSHOW^ECXSCXN1(ECSD1,ECED),ENCNTR(ECSD1,ECED)
"RTN","ECXSCXN",33,0)
 ;send missing clinic msg
"RTN","ECXSCXN",34,0)
 D:$D(^TMP($J,"ECXS")) EN^ECXSCX1
"RTN","ECXSCXN",35,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL"),^TMP($J,"SDAMA301") ;136
"RTN","ECXSCXN",36,0)
 Q
"RTN","ECXSCXN",37,0)
 ;
"RTN","ECXSCXN",38,0)
ENCNTR(ECSD1,ECED) ;search file #409.68 for encounter data
"RTN","ECXSCXN",39,0)
 N CHKOUT,ECD,STAT,STOP,MDIV,ECXEDIS,CNT,ECXARR,NODE ;136
"RTN","ECXSCXN",40,0)
 N ECXESC,ECXECL,ECXCLST,ECXPP,ECXASIH ;149,170
"RTN","ECXSCXN",41,0)
 S ECD=ECSD1
"RTN","ECXSCXN",42,0)
 F  S ECD=$O(^SCE("B",ECD)) Q:('ECD!(ECD>ECED))!(QFLG)  S ECXIEN=0 D
"RTN","ECXSCXN",43,0)
 .F  S ECXIEN=$O(^SCE("B",ECD,ECXIEN)) Q:'ECXIEN  D  Q:QFLG
"RTN","ECXSCXN",44,0)
 ..Q:'$D(^SCE(ECXIEN,0))
"RTN","ECXSCXN",45,0)
 ..D INTPAT^ECXSCX2 K LOCARR S DIC=409.68,DA=ECXIEN
"RTN","ECXSCXN",46,0)
 ..S DR=".01;.02;.03;.04;.05;.06;.07;.08;.11;.12;.13",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",47,0)
 ..D EN^DIQ1
"RTN","ECXSCXN",48,0)
 ..S ECXTI=$$ECXTIME^ECXUTL(+$G(LOCARR(409.68,ECXIEN,.01,"I"))) ;166
"RTN","ECXSCXN",49,0)
 ..S MDIV=+$G(LOCARR(409.68,ECXIEN,.11,"I")) ;166
"RTN","ECXSCXN",50,0)
 ..S STOP=+$G(LOCARR(409.68,ECXIEN,.03,"I"))
"RTN","ECXSCXN",51,0)
 ..S CHKOUT=+$G(LOCARR(409.68,ECXIEN,.07,"I"))
"RTN","ECXSCXN",52,0)
 ..S PROCESS=+$G(LOCARR(409.68,ECXIEN,.08,"I"))
"RTN","ECXSCXN",53,0)
 ..S STAT=$G(LOCARR(409.68,ECXIEN,.12,"I"))
"RTN","ECXSCXN",54,0)
 ..S ECXDFN=+$G(LOCARR(409.68,ECXIEN,.02,"I"))
"RTN","ECXSCXN",55,0)
 ..Q:(ECXDFN=0)!('CHKOUT)
"RTN","ECXSCXN",56,0)
 ..S:STAT="" STAT="ZZ" S STAT=";"_STAT_";"
"RTN","ECXSCXN",57,0)
 ..Q:";3;4;5;6;7;9;10;13;"[STAT
"RTN","ECXSCXN",58,0)
 ..Q:('STOP)!(PROCESS=4)!(+$G(LOCARR(409.68,ECXIEN,.06,"I")))
"RTN","ECXSCXN",59,0)
 ..S ECXDATE=+$G(LOCARR(409.68,ECXIEN,.01,"I"))
"RTN","ECXSCXN",60,0)
 ..S ECXCLIN=+$G(LOCARR(409.68,ECXIEN,.04,"I"))
"RTN","ECXSCXN",61,0)
 ..Q:$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,3)'="C"
"RTN","ECXSCXN",62,0)
 ..S ECXVISIT=+$G(LOCARR(409.68,ECXIEN,.05,"I"))
"RTN","ECXSCXN",63,0)
 ..S ECXENEL=+$G(LOCARR(409.68,ECXIEN,.13,"I"))
"RTN","ECXSCXN",64,0)
 ..Q:'ECXVISIT
"RTN","ECXSCXN",65,0)
 ..S ECXERR=0
"RTN","ECXSCXN",66,0)
 ..D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",67,0)
 ..D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV,.P4) ;166
"RTN","ECXSCXN",68,0)
 ..Q:TOSEND=6
"RTN","ECXSCXN",69,0)
 ..K LOCARR S DIC=40.7,DA=STOP,DR="1",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",70,0)
 ..S ECXSTOP=$$RJ^XLFSTR($G(LOCARR(40.7,STOP,1,"I")),3,0)
"RTN","ECXSCXN",71,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXSCXN",72,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXSCXN",73,0)
 ..;get date specific patient data
"RTN","ECXSCXN",74,0)
 ..D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN",75,0)
 ..;get national patient record flag if exist
"RTN","ECXSCXN",76,0)
 ..D NPRF^ECXUTL5
"RTN","ECXSCXN",77,0)
 ..;get visit specific data
"RTN","ECXSCXN",78,0)
 ..S ECXERR=0 D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",79,0)
 ..I ECXLOGIC<2019 D  ;170 Eight CPT Codes prior to FY19
"RTN","ECXSCXN",80,0)
 ...F I=1:1:8 S @("ECXCPT"_I)=$G(ECXVIST("CPT"_I))
"RTN","ECXSCXN",81,0)
 ..I ECXLOGIC>2018 D  ;170 Twenty-five CPT Codes starting in FY19
"RTN","ECXSCXN",82,0)
 ...F I=1:1:25 S @("ECXCQM"_I)=$G(ECXVIST("CPT"_I))
"RTN","ECXSCXN",83,0)
 ..S ECXPP=$G(ECXVIST("PRIMPROC")) ;149 Get primary procedure if available
"RTN","ECXSCXN",84,0)
 ..F I="P",1:1:4 S @("ECXICD10"_I)=ECXVIST("ICD9"_I) ;161
"RTN","ECXSCXN",85,0)
 ..S SOURCE=ECXVIST("SOURCE"),ECXAO=ECXVIST("AO"),ECXIR=ECXVIST("IR")
"RTN","ECXSCXN",86,0)
 ..S ECXMIL=ECXVIST("MST"),ECXPROV=ECXVIST("PROV"),ECXSHAD=ECXVIST("SHAD")
"RTN","ECXSCXN",87,0)
 ..S ECXECL=ECXVIST("ENCCL"),ECXESC=ECXVIST("ENCSC") ;144
"RTN","ECXSCXN",88,0)
 ..S ECPRNPI=$$NPI^XUSNPI("Individual_ID",ECXPROV,ECXDATE)
"RTN","ECXSCXN",89,0)
 ..S:+ECPRNPI'>0 ECPRNPI="" S ECPRNPI=$P(ECPRNPI,U)
"RTN","ECXSCXN",90,0)
 ..S ECXPROVP=ECXVIST("PROV CLASS"),ECXPROVN=ECXVIST("PROV NPI")
"RTN","ECXSCXN",91,0)
 ..F I=1:1:7 S @("ECSP"_I)=$P($G(ECXVIST("PROVS"_I)),U) ;144 2 new prov
"RTN","ECXSCXN",92,0)
 ..F I=1:1:7 S @("ECSPPC"_I)=$P($G(ECXVIST("PROVS"_I)),U,2) ;144 2 new person class
"RTN","ECXSCXN",93,0)
 ..F I=1:1:7 S @("ECSPNPI"_I)=$P($G(ECXVIST("PROVS"_I)),U,3) ;144 2 new NPI
"RTN","ECXSCXN",94,0)
 ..S ECXECE=ECXVIST("PGE"),ECXHNC=ECXVIST("HNC")
"RTN","ECXSCXN",95,0)
 ..K LOCARR S DIC=8,DA=ECXENEL,DR="8",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",96,0)
 ..S ECXENEL=+$G(LOCARR(8,ECXENEL,8,"I"))
"RTN","ECXSCXN",97,0)
 ..S:ECXENEL ECXENEL=$$ELIG^ECXUTL3(ECXENEL,ECXSVC)
"RTN","ECXSCXN",98,0)
 ..S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")  ;is cboc facility?
"RTN","ECXSCXN",99,0)
 ..S ECXEDIS=$$EDIS^ECXUTL1(ECXDFN,ECD,"C",ECXVISIT,ECXSTOP) ;136 Set emergency room disposition
"RTN","ECXSCXN",100,0)
 ..;setup feeder key and file in extract records
"RTN","ECXSCXN",101,0)
 ..S (ECXKEY,ECXDSSD)=""
"RTN","ECXSCXN",102,0)
 ..;appointments
"RTN","ECXSCXN",103,0)
 ..I PROCESS=1 D  Q     ;get appt length 136 Section changed to use SDAMA301 call
"RTN","ECXSCXN",104,0)
 ...N CNT,ECXARR
"RTN","ECXSCXN",105,0)
 ...K ^TMP($J,"SDAMA301")
"RTN","ECXSCXN",106,0)
 ...S ECXARR(1)=ECXDATE_";"_ECXDATE,ECXARR(2)=ECXCLIN,ECXARR(4)=ECXDFN,ECXARR("FLDS")="5;7;10;18" S CNT=$$SDAPI^SDAMA301(.ECXARR)
"RTN","ECXSCXN",107,0)
 ...Q:CNT=0  I CNT=-1 D ERR^ECXUTL1 S QFLG=1 Q  ;Stop if no appts (CNT=0) send error message and stop extract if CNT=-1 (system error)
"RTN","ECXSCXN",108,0)
 ...S NODE=^TMP($J,"SDAMA301",ECXDFN,ECXCLIN,ECXDATE)
"RTN","ECXSCXN",109,0)
 ...S ECXOBI=$S($P(NODE,U,7)="Y":"O",1:"") ;convert overbook indicator from Y to O otherwise send null
"RTN","ECXSCXN",110,0)
 ...S ALEN=$$RJ^XLFSTR($P(NODE,U,5),3,0)
"RTN","ECXSCXN",111,0)
 ...S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2) ;156-modified global ref to "ECXCL"
"RTN","ECXSCXN",112,0)
 ...S ECXSTOP=P1
"RTN","ECXSCXN",113,0)
 ...S ECXPVST=+$P(NODE,U,18),ECXATYP=+$P(NODE,U,10)
"RTN","ECXSCXN",114,0)
 ...I TOSEND'=3 D
"RTN","ECXSCXN",115,0)
 ....S ECXKEY=P1_P2_ALEN_P3_"0"_P4,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY) ;166
"RTN","ECXSCXN",116,0)
 ....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",117,0)
 ...I TOSEND=3 D
"RTN","ECXSCXN",118,0)
 ....S ECXKEY=P1_"000"_ALEN_P3_"0"_P4,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY) ;166
"RTN","ECXSCXN",119,0)
 ....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",120,0)
 ...I TOSEND=3 D
"RTN","ECXSCXN",121,0)
 ....S ECXKEY=P2_"000"_ALEN_P3_"0"_P4,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY) ;166
"RTN","ECXSCXN",122,0)
 ....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",123,0)
 ..I PROCESS=2 D  Q
"RTN","ECXSCXN",124,0)
 ...S ALEN=0
"RTN","ECXSCXN",125,0)
 ...I SOURCE=TIU S ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",126,0)
 ...S:+ALEN=0 ALEN="030" S ECXKEY=P1_P2_ALEN_P3_"0"_P4,ECXSTOP=P1 ;166
"RTN","ECXSCXN",127,0)
 ...S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",128,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",129,0)
 ..;dispositions
"RTN","ECXSCXN",130,0)
 ..I PROCESS=3 D  Q
"RTN","ECXSCXN",131,0)
 ...S ECXKEY=ECXSTOP_"00006000000"_P4,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY) ;166,170
"RTN","ECXSCXN",132,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",133,0)
 Q
"RTN","ECXSCXN",134,0)
 ;
"RTN","ECXSCXN",135,0)
FILE ;record setup for file #727.827
"RTN","ECXSCXN",136,0)
 ;NODE(0)
"RTN","ECXSCXN",137,0)
 ;Sequence Number,Year Month, Extract Number (EC23)^facility (ECXDIV)^
"RTN","ECXSCXN",138,0)
 ;dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^
"RTN","ECXSCXN",139,0)
 ;in/out (ECXA)^Day $$ECXDATE^ECXUTL(ECXDATE,ECXYM)^Placehold Feeder Key (FY<2018) (ECXKEY) ^
"RTN","ECXSCXN",140,0)
 ;Overbooked Indicator (ECXOBI)^Clinic Name (NOW NULL)^Treating Specialty (ECXTSC) ^
"RTN","ECXSCXN",141,0)
 ;Time (ECXTI)^Placehold Primary Care Team (ECPTTM)^Placehold primary care provider(ECPTPR)^
"RTN","ECXSCXN",142,0)
 ;Placehold Primary Care PRV Person Class(ECCLAS)^Provider (ECXPROV)^
"RTN","ECXSCXN",143,0)
 ;provider person class (ECPROVP)^Placehold CPT Qty & Mods #1 (ECXCPT1)^
"RTN","ECXSCXN",144,0)
 ;Placehold CPT Qty & Mods #2 (ECXCPT2)^Placehold CPT Qty & Mods #3 (ECXCPT3)^
"RTN","ECXSCXN",145,0)
 ;Placehold CPT Qty & Mods #4 (ECXCPT4)^Placehold CPT Qty & Mods #5 (ECXCPT5)^
"RTN","ECXSCXN",146,0)
 ;NODE(1)
"RTN","ECXSCXN",147,0)
 ;Placehold CPT Qty & Mods #6 (ECXCPT6)^Placehold CPT Qty & Mods #7 (ECXCPT7)^
"RTN","ECXSCXN",148,0)
 ;Placehold CPT Qty & Mods #8 (ECXCPT8)^Placeholder (ECXICD9P)^
"RTN","ECXSCXN",149,0)
 ;Placeholder (ECXICD91)^Placeholder (ECXICD92)
"RTN","ECXSCXN",150,0)
 ;Placeholder (ECXICD93)^Placeholder (ECXICD94)
"RTN","ECXSCXN",151,0)
 ;date of birth (ECDOB)^Eligibility (ECXELIG)^Veteran (ECXVET)^
"RTN","ECXSCXN",152,0)
 ;Placehold Race (ECXRACE)^POW status (ECXPST)^POW Location (ECXPLOC)^ Radiation Status(ECXRST)^
"RTN","ECXSCXN",153,0)
 ;Radiation Encounter Indicator (ECXIR)^Agent Orange Status (ECXAST)^
"RTN","ECXSCXN",154,0)
 ;Agent Orange Location(ECXAO)^Master Patient Index ((ECXMPI)^DSS Product Department (ECXDSSD)^
"RTN","ECXSCXN",155,0)
 ;Sex (ECXSEX)^zip code (ECXZIP)^Place Holder^Place Holder^Encounter Eligibility (ECXENEL)^
"RTN","ECXSCXN",156,0)
 ;MST Status(ECXMST)^MST Encounter Indicator (ECXMIL)^Place Holder^Place Holder^
"RTN","ECXSCXN",157,0)
 ;Enrollment Location ((ECXENRL)^State (ECXSTATE)^County (ECXCNTY)^
"RTN","ECXSCXN",158,0)
 ;Placehold Associate PC Provider (ECASPR)^Placehold Associate PC Prov. Person Class (ECCLAS2)^Place Holder^
"RTN","ECXSCXN",159,0)
 ;DOM, PRRTP AND SAARTP Indicator (ECXDOM)^ Enrollment Category (ECXCAT)^
"RTN","ECXSCXN",160,0)
 ;NODE(2)
"RTN","ECXSCXN",161,0)
 ;Enrollment Status (ECXSTAT)^ SHAD Status (ECXPRIOR or ECXSHADI) ^
"RTN","ECXSCXN",162,0)
 ;Purple Heart Indicator (ECXPHI)^Period of Service (ECXPOS)^
"RTN","ECXSCXN",163,0)
 ;Observation Patient Indicator (ECXOBS)^ Encounter Number (ECXENC)^
"RTN","ECXSCXN",164,0)
 ;Agent Orange Location (ECXAOL)^Production Division Code (ECXPDIV)^ Appointment Type (ECXATYP)^
"RTN","ECXSCXN",165,0)
 ;Purpose of Visit (ECXPVST)^Means Test (ECXMTST)^Head & Neck Cancer Indicator (ECXHNCI)^
"RTN","ECXSCXN",166,0)
 ;Placehold Ethnicity(ECXETH)^Placehold Race 1(ECXRC1)^CBOC Status (ECXCBOC)^Place Holder^Enrollment Priority (ECXPRIOR_ECXSBGRP)^
"RTN","ECXSCXN",167,0)
 ;User Enrollee (ECXUESTA)^ Patient Type(ECXPTYPE)^CV Status Eligibility (ECXCVE)^
"RTN","ECXSCXN",168,0)
 ;CV Eligibility End Date (ECXCVEDT)^Encounter CV (ECXCVENC)^National Patient Record Flag (ECXNPRFI)^
"RTN","ECXSCXN",169,0)
 ;SW Asia Conditions (ECXEST)^Encounter SWAC (ECXECE)^ERI (ECXERI)^Enc Head/Neck CA (ECXHNC)^
"RTN","ECXSCXN",170,0)
 ;OEF/OIF (ECXOEF)^ OEF/OIF Return Date (ECXOEFDT)^Placehold Associate PC Provider NPI (ECASNPI)^
"RTN","ECXSCXN",171,0)
 ;Placehold Primary Care Provider NPI (ECPTNPI)^Provider NPI(ECPRNPI)^
"RTN","ECXSCXN",172,0)
 ;NODE(3)
"RTN","ECXSCXN",173,0)
 ;Country Code (ECXCNTRY)^Encounter SHAD (ECXSHAD)^PATCAT (ECXPATCAT)^Secondary Provider #1 (ECSP1)^
"RTN","ECXSCXN",174,0)
 ;Secondary Provider #1 PC (ECSPPC1)^Secondary Provider #1 NPI (ECSPNPI1)^Secondary Provider #2 (ECSP2)^
"RTN","ECXSCXN",175,0)
 ;Secondary Provider #2 PC (ECSPPC2)^Secondary Provider #2 NPI (ECSPNPI2)^Secondary Provider #3 (ECSP3)^
"RTN","ECXSCXN",176,0)
 ;Secondary Provider #3 PC (ECSPPC3)^Secondary Provider #3 NPI (ECSPNPI3)^Secondary Provider #4 (ECSP4)^
"RTN","ECXSCXN",177,0)
 ;Secondary Provider #4 PC (ECSPPC4)^Secondary Provider #4 NPI (ECSPNPI4)^Secondary Provider #5 (ECSP5)^
"RTN","ECXSCXN",178,0)
 ;Secondary Provider #5 PC (ECSPPC5)^Secondary Provider #5 NPI (ECSPNPI5)^
"RTN","ECXSCXN",179,0)
 ;ED Disposition Code (ECXEDIS)^Primary ICD-10 Code (ECXICD10P)^Secondary ICD-10 Code #1 (ECXICD101)^
"RTN","ECXSCXN",180,0)
 ;Secondary ICD-10 Code #2 (ECXICD102)^Secondary ICD-10 Code #3 (ECXICD103)^Secondary ICD-10 Code #4 (ECXICD104)^
"RTN","ECXSCXN",181,0)
 ;Encounter SC (ECXESC)^Vietnam (ECXVNS)^Secondary Provider #6 (ECSP6)^Secondary Provider #6 PC (ECSPPC6)^
"RTN","ECXSCXN",182,0)
 ;Secondary Provider #6 NPI (ECSPNPI6)^
"RTN","ECXSCXN",183,0)
 ;NODE(4)
"RTN","ECXSCXN",184,0)
 ;Secondary Provider #7 (ECSP7)^Secondary Provider #7 PC (ECSPPC7)^Secondary Provider #7 NPI (ECSPNPI7)^
"RTN","ECXSCXN",185,0)
 ;Camp Lejeune Status (ECXCLST)^Encounter Camp Lejeune (ECXECL)^Primary Procedure (ECXPP)
"RTN","ECXSCXN",186,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL)^Clinic IEN (ECXCLIN)^
"RTN","ECXSCXN",187,0)
 ;New Feeder Key (ECXKEY after FY2017)^ Patient Division (ECXSTANO)^
"RTN","ECXSCXN",188,0)
 ;CPT, Qty & Modifiers #1 (ECXCQM1)^CPT, Qty & Modifiers #2 (ECXCQM2)^CPT, Qty & Modifiers #3 (ECXCQM3)^
"RTN","ECXSCXN",189,0)
 ;CPT, Qty & Modifiers #4 (ECXCQM4)^CPT, Qty & Modifiers #5 (ECXCQM5)^CPT, Qty & Modifiers #6 (ECXCQM6)
"RTN","ECXSCXN",190,0)
 ;NODE(5)
"RTN","ECXSCXN",191,0)
 ;CPT, Qty & Modifiers #7 (ECXCQM7)^CPT, Qty & Modifiers #8 (ECXCQM8)^CPT, Qty & Modifiers #9 (ECXCQM9)^
"RTN","ECXSCXN",192,0)
 ;CPT, Qty & Modifiers #10 (ECXCQM10)^CPT, Qty & Modifiers #11 (ECXCQM11)^CPT, Qty & Modifiers #12 (ECXCQM12)
"RTN","ECXSCXN",193,0)
 ;CPT, Qty & Modifiers #13 (ECXCQM13)^CPT, Qty & Modifiers #14 (ECXCQM14)^CPT, Qty & Modifiers #15 (ECXCQM15)^
"RTN","ECXSCXN",194,0)
 ;CPT, Qty & Modifiers #16 (ECXCQM16)^CPT, Qty & Modifiers #17 (ECXCQM5)^
"RTN","ECXSCXN",195,0)
 ;NODE(6)
"RTN","ECXSCXN",196,0)
 ;CPT, Qty & Modifiers #18 (ECXCQM18)^CPT, Qty & Modifiers #19 (ECXCQM19)^CPT, Qty & Modifiers #20 (ECXCQM20)^
"RTN","ECXSCXN",197,0)
 ;CPT, Qty & Modifiers #21 (ECXCQM21)^CPT, Qty & Modifiers #22 (ECXCQM22)^CPT, Qty & Modifiers #23 (ECXCQM23)
"RTN","ECXSCXN",198,0)
 ;CPT, Qty & Modifiers #24 (ECXCQM24)^CPT, Qty & Modifiers #25 (ECXCQM25)
"RTN","ECXSCXN",199,0)
 ;
"RTN","ECXSCXN",200,0)
 N STR
"RTN","ECXSCXN",201,0)
 N ECXSTANO  ;161 tjl
"RTN","ECXSCXN",202,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get production division
"RTN","ECXSCXN",203,0)
 S ECXSTANO=$$GETDIV^ECXDEPT($$GET1^DIQ(44,ECXCLIN,3.5,"I"))  ;166 tjl - Get Patient Division
"RTN","ECXSCXN",204,0)
 I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXSCXN",205,0)
 S EC7=$O(^ECX(727.827,999999999),-1),EC7=EC7+1
"RTN","ECXSCXN",206,0)
 I ECXLOGIC>2018 D  ;170 Fields will now be null
"RTN","ECXSCXN",207,0)
 . S (ECXRACE,ECXETH,ECXRC1,ECPTTM,ECPTPR,ECCLAS,ECASPR,ECCLAS2,ECASNPI,ECPTNPI)=""
"RTN","ECXSCXN",208,0)
 S STR(0)=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSCXN",209,0)
 S STR(0)=STR(0)_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_$S($G(ECXLOGIC)>2017:"",1:ECXKEY)_U_ECXOBI_U ;166 Feeder key will be here if FY<2018, otherwise it will be null
"RTN","ECXSCXN",210,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXSCXN",211,0)
 N ECXDATA,ECXTSC
"RTN","ECXSCXN",212,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXSCXN",213,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXSCXN",214,0)
 ;done
"RTN","ECXSCXN",215,0)
 S STR(0)=STR(0)_$S(ECXLOGIC>2015:"",1:ECXCLIN)_U_ECXTSC_U_ECXTI_U_ECPTTM_U_ECPTPR_U_ECCLAS_U
"RTN","ECXSCXN",216,0)
 S STR(0)=STR(0)_ECXPROV_U_ECXPROVP_U_ECXCPT1_U_ECXCPT2_U_ECXCPT3_U
"RTN","ECXSCXN",217,0)
 S STR(0)=STR(0)_ECXCPT4_U_ECXCPT5_U
"RTN","ECXSCXN",218,0)
 S STR(1)=ECXCPT6_U_ECXCPT7_U_ECXCPT8_U_ECXICD9P_U_ECXICD91_U_ECXICD92_U
"RTN","ECXSCXN",219,0)
 S STR(1)=STR(1)_ECXICD93_U_ECXICD94_U_ECXDOB_U_ECXELIG_U_ECXVET_U
"RTN","ECXSCXN",220,0)
 S STR(1)=STR(1)_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXIR_U_ECXAST_U
"RTN","ECXSCXN",221,0)
 S STR(1)=STR(1)_ECXAO_U_ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U
"RTN","ECXSCXN",222,0)
 S STR(1)=STR(1)_$G(ECXPCPNP)_U_U_ECXENEL_U_ECXMST_U
"RTN","ECXSCXN",223,0)
 S STR(1)=STR(1)_ECXMIL_U_U_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXSCXN",224,0)
 S STR(1)=STR(1)_ECXCNTY_U_ECASPR_U_ECCLAS2_U_U_ECXDOM_U_ECXCAT_U
"RTN","ECXSCXN",225,0)
 S STR(2)=ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_ECXPHI_U_ECXPOS_U_ECXOBS_U_ECXENC_U
"RTN","ECXSCXN",226,0)
 S STR(2)=STR(2)_ECXAOL_U_ECXPDIV_U_ECXATYP_U_ECXPVST_U_ECXMTST_U
"RTN","ECXSCXN",227,0)
 S STR(2)=STR(2)_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXSCXN",228,0)
 I ECXLOGIC>2003 S STR(2)=STR(2)_U_ECXCBOC
"RTN","ECXSCXN",229,0)
 I ECXLOGIC>2004 S STR(2)=STR(2)_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXSCXN",230,0)
 I ECXLOGIC>2005 S STR(2)=STR(2)_U_ECXEST_U_ECXECE
"RTN","ECXSCXN",231,0)
 I ECXLOGIC>2006 S STR(2)=STR(2)_U_ECXERI_U_ECXHNC
"RTN","ECXSCXN",232,0)
 I ECXLOGIC>2007 S STR(2)=STR(2)_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_$G(ECPRNPI)_U
"RTN","ECXSCXN",233,0)
 I ECXLOGIC>2009 S STR(3)=ECXCNTRY
"RTN","ECXSCXN",234,0)
 ;added patcat status, N3 P3
"RTN","ECXSCXN",235,0)
 I ECXLOGIC>2010 S STR(3)=STR(3)_U_ECXSHAD_U_ECXPATCAT
"RTN","ECXSCXN",236,0)
 I ECXLOGIC>2011 S STR(3)=STR(3)_U_ECSP1_U_ECSPPC1_U_ECSPNPI1_U_ECSP2_U_ECSPPC2_U_ECSPNPI2_U_ECSP3_U_ECSPPC3_U_ECSPNPI3_U_ECSP4_U_ECSPPC4_U_ECSPNPI4_U_ECSP5_U_ECSPPC5_U_ECSPNPI5
"RTN","ECXSCXN",237,0)
 ;added icd-10
"RTN","ECXSCXN",238,0)
 I ECXLOGIC>2012 S STR(3)=STR(3)_U_$G(ECXEDIS)_U_ECXICD10P_U_ECXICD101_U_ECXICD102_U_ECXICD103_U_ECXICD104 ;136
"RTN","ECXSCXN",239,0)
 I ECXLOGIC>2013 S STR(3)=STR(3)_U_ECXESC_U_ECXVNS_U_ECSP6_U_ECSPPC6_U_ECSPNPI6_U ; 144
"RTN","ECXSCXN",240,0)
 I ECXLOGIC>2013 S STR(4)=ECSP7_U_ECSPPC7_U_ECSPNPI7_U_ECXCLST_U_ECXECL ; 144 new provider fields and camp lejeune fields
"RTN","ECXSCXN",241,0)
 I ECXLOGIC>2014 S STR(4)=STR(4)_U_$G(ECXPP)_U_ECXSVCI_U_ECXSVCL ;149 add primary procedure, Comb SVC Ind, loc
"RTN","ECXSCXN",242,0)
 I ECXLOGIC>2015 S STR(4)=STR(4)_U_ECXCLIN ;154 moved clinic IEN to end of extract
"RTN","ECXSCXN",243,0)
 I ECXLOGIC>2017 S STR(4)=STR(4)_U_ECXKEY_U_ECXSTANO ;166 New feeder key, Patient division
"RTN","ECXSCXN",244,0)
 I ECXLOGIC>2018 D    ;170 tjl - A record now contains up to 25 CPT Codes, Quantities & Modifiers
"RTN","ECXSCXN",245,0)
 . S STR(4)=STR(4)_U_ECXCQM1_U_ECXCQM2_U_ECXCQM3_U_ECXCQM4_U_ECXCQM5_U_ECXCQM6_U
"RTN","ECXSCXN",246,0)
 . S STR(5)=ECXCQM7_U_ECXCQM8_U_ECXCQM9_U_ECXCQM10_U_ECXCQM11_U_ECXCQM12
"RTN","ECXSCXN",247,0)
 . S STR(5)=STR(5)_U_ECXCQM13_U_ECXCQM14_U_ECXCQM15_U_ECXCQM16_U_ECXCQM17_U
"RTN","ECXSCXN",248,0)
 . S STR(6)=ECXCQM18_U_ECXCQM19_U_ECXCQM20_U_ECXCQM21_U_ECXCQM22_U_ECXCQM23_U_ECXCQM24_U_ECXCQM25
"RTN","ECXSCXN",249,0)
 D FILE2^ECXSCX2(727.827,EC7,.STR)
"RTN","ECXSCXN",250,0)
 S ECRN=ECRN+1,$P(^ECX(727.827,0),U,3)=EC7
"RTN","ECXSCXN",251,0)
 Q
"RTN","ECXSCXN",252,0)
 ;
"RTN","ECXSCXN",253,0)
SETUP ;set required input for ECXTRAC
"RTN","ECXSCXN",254,0)
 S ECHEAD="CLI"
"RTN","ECXSCXN",255,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSCXN",256,0)
 Q
"RTN","ECXSCXN1")
0^23^B18069575^B16963323
"RTN","ECXSCXN1",1,0)
ECXSCXN1 ;ALB/JAP  Clinic Extract No Shows; 8/28/02 1:11pm ;6/29/18  15:37
"RTN","ECXSCXN1",2,0)
 ;;3.0;DSS EXTRACTS;**71,105,127,132,136,144,166,170**;Dec 22, 1997;Build 12
"RTN","ECXSCXN1",3,0)
NOSHOW(ECXSD,ECXED) ;get noshows from file #44
"RTN","ECXSCXN1",4,0)
 ;      ECXSD  = start date, ECXED  = end date
"RTN","ECXSCXN1",5,0)
 N ALEN,CLIN,JDATE,JJ,NODE,NOSHOW,PP,STAT,MDIV,ECXEDIS,CNT,ECXARR,ECXSDSC,ECXEDSC,ECXASIH ;136,170
"RTN","ECXSCXN1",6,0)
 N ECXECL,ECXESC,ECXCLST ;144 Call to INTPAT^ECXSCX2 sets variables to null.  Call to PAT1^ECXSCX2 will set camp lejeune status when available.  Encounter values remain null as appt is a no-show
"RTN","ECXSCXN1",7,0)
 S CLIN=0
"RTN","ECXSCXN1",8,0)
 F  S CLIN=$O(^TMP($J,"ECXCL",CLIN)) Q:'CLIN!($G(QFLG))  D  ;136
"RTN","ECXSCXN1",9,0)
 .Q:$P($G(^TMP($J,"ECXCL",CLIN)),U,3)'="C"
"RTN","ECXSCXN1",10,0)
 .S (P1,P2,P3,P4)="" ;166 add P4
"RTN","ECXSCXN1",11,0)
 .D FEEDER^ECXSCX1(CLIN,ECXSD,.P1,.P2,.P3,.TOSEND,.ECXDIV,.P4) ;166 add P4 parameter
"RTN","ECXSCXN1",12,0)
 .Q:TOSEND=6
"RTN","ECXSCXN1",13,0)
 .;find appts in date range
"RTN","ECXSCXN1",14,0)
 .S ECXSDSC=ECXSD+.1,ECXEDSC=$P(ECXED,".") ;136 get dates back into correct fileman format
"RTN","ECXSCXN1",15,0)
 .S (ALEN,NOSHOW)="" ;136
"RTN","ECXSCXN1",16,0)
 .K ^TMP($J,"SDAMA301") ;136
"RTN","ECXSCXN1",17,0)
 .S ECXARR(1)=ECXSDSC_";"_ECXEDSC,ECXARR(2)=CLIN,ECXARR(3)="NS;NSR",ECXARR("FLDS")="5;7;10;12;18" ;136
"RTN","ECXSCXN1",18,0)
 .S CNT=$$SDAPI^SDAMA301(.ECXARR) ;136
"RTN","ECXSCXN1",19,0)
 .Q:CNT=0  I CNT=-1 D ERR^ECXUTL1 S QFLG=1 Q  ;136 Stop if no data (CNT=0) and send error message if scheduling system down (CNT=-1)
"RTN","ECXSCXN1",20,0)
 .S JJ=0 F  S JJ=$O(^TMP($J,"SDAMA301",CLIN,JJ)) Q:'+JJ  S JDATE="" F  S JDATE=$O(^TMP($J,"SDAMA301",CLIN,JJ,JDATE)) Q:'+JDATE  D  ;136
"RTN","ECXSCXN1",21,0)
 ..S ECXDATE=JDATE,ECXTI=$$ECXTIME^ECXUTL(JDATE) ;136,166
"RTN","ECXSCXN1",22,0)
 ..S ECXDFN=JJ ;136
"RTN","ECXSCXN1",23,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN) ;added in patch 127
"RTN","ECXSCXN1",24,0)
 ..S NODE=$G(^TMP($J,"SDAMA301",CLIN,JJ,JDATE)),MDIV=$P($G(^SC(CLIN,0)),U,15) ;136
"RTN","ECXSCXN1",25,0)
 ..Q:NODE=""  ;136
"RTN","ECXSCXN1",26,0)
 ..S ECXSHAD=$$GETSHAD ;added in patch 127, finds shad status for appt
"RTN","ECXSCXN1",27,0)
 ..S ECXOBI=$S($P(NODE,U,7)="Y":"O",1:"") ;136
"RTN","ECXSCXN1",28,0)
 ..S NOSHOW="N" ;136 only no-show entries are returned from the SDAMA301 call
"RTN","ECXSCXN1",29,0)
 ..D INTPAT^ECXSCX2 S ECXERR=0
"RTN","ECXSCXN1",30,0)
 ..D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN1",31,0)
 ..S ALEN=$$RJ^XLFSTR($P(NODE,U,5),3,0) ;136
"RTN","ECXSCXN1",32,0)
 ..D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN1",33,0)
 ..S ECXPVST=+$P(NODE,U,18),ECXATYP=+$P(NODE,U,10)  ;136 Get POV & appt type
"RTN","ECXSCXN1",34,0)
 ..S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",CLIN)),U,2)
"RTN","ECXSCXN1",35,0)
 ..S ECXCLIN=CLIN,ECXSTOP=P1
"RTN","ECXSCXN1",36,0)
 ..S ECXEDIS=$$EDIS^ECXUTL1(ECXDFN,ECXDATE,"N",,ECXSTOP) ;136
"RTN","ECXSCXN1",37,0)
 ..I ECXLOGIC<2019 S:ECXCPT1="" ECXCPT1="9919901"  ;170 tjl - Retain value for prior years
"RTN","ECXSCXN1",38,0)
 ..I ECXLOGIC>2018 S:ECXCPT1="" ECXCQM1="9919901"  ;170 tjl - Set new variable value
"RTN","ECXSCXN1",39,0)
 ..S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")
"RTN","ECXSCXN1",40,0)
 ..S (ECXDSSD,ECXENEL,ECXIR,ECXAO,ECXMIL,ECXPROV,ECXPROVP,ECXPROVN)=""
"RTN","ECXSCXN1",41,0)
 ..F I=1:1:7 S (@("ECSP"_I),@("ECSPPC"_I),@("ECSPNPI"_I))="" ;144 2 new prov groups
"RTN","ECXSCXN1",42,0)
 ..I TOSEND'=3 D
"RTN","ECXSCXN1",43,0)
 ...S ECXKEY=P1_P2_ALEN_P3_NOSHOW_P4,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY) ;166
"RTN","ECXSCXN1",44,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",45,0)
 ..I TOSEND=3 D
"RTN","ECXSCXN1",46,0)
 ...S ECXKEY=P1_"000"_ALEN_P3_NOSHOW_P4,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY) ;166
"RTN","ECXSCXN1",47,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",48,0)
 ..I TOSEND=3 D
"RTN","ECXSCXN1",49,0)
 ...S ECXKEY=P2_"000"_ALEN_P3_NOSHOW_P4,ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY) ;166
"RTN","ECXSCXN1",50,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE^ECXSCXN
"RTN","ECXSCXN1",51,0)
 ..;create a record for noshow appended ekg. The code was removed for CTX-0604-70970 CLI Extract Problem EXPANDED to NoShows
"RTN","ECXSCXN1",52,0)
 Q
"RTN","ECXSCXN1",53,0)
 ;GETSHAD section added with patch 127
"RTN","ECXSCXN1",54,0)
GETSHAD() ;Function returns shad value
"RTN","ECXSCXN1",55,0)
 N DIC,LOCARR,DA,DR,SHAD,ECXERR,ECXVIST
"RTN","ECXSCXN1",56,0)
 S SHAD=""
"RTN","ECXSCXN1",57,0)
 I '+$P($G(NODE),U,12) Q SHAD  ;136 Quit if no outpatient encounter pointer
"RTN","ECXSCXN1",58,0)
 S DIC=409.68,DA=$P(NODE,U,12),DR=.05,DIQ(0)="I",DIQ="LOCARR" ;136
"RTN","ECXSCXN1",59,0)
 D EN^DIQ1
"RTN","ECXSCXN1",60,0)
 I $G(LOCARR(409.68,DA,.05,"I")) D
"RTN","ECXSCXN1",61,0)
 .S ECXERR=0
"RTN","ECXSCXN1",62,0)
 .D VISIT^ECXSCX1(ECXDFN,LOCARR(409.68,DA,.05,"I"),.ECXVIST,.ECXERR)
"RTN","ECXSCXN1",63,0)
 .I 'ECXERR S SHAD=ECXVIST("SHAD")
"RTN","ECXSCXN1",64,0)
 Q SHAD
"RTN","ECXSTOP")
0^27^B13980385^B13912369
"RTN","ECXSTOP",1,0)
ECXSTOP ;ALB/DHE Stop Codes/Clinic Stops ;6/8/18  09:25
"RTN","ECXSTOP",2,0)
 ;;3.0;DSS EXTRACTS;**120,126,144,149,170**;Dec 22, 1997;Build 12
"RTN","ECXSTOP",3,0)
 ;
"RTN","ECXSTOP",4,0)
STOP(CODE,TYPE,CLIEN,DATE,IEN) ;api to return stop code information
"RTN","ECXSTOP",5,0)
 ;
"RTN","ECXSTOP",6,0)
 ;input:
"RTN","ECXSTOP",7,0)
 ;   code: stop code IEN in #40.7
"RTN","ECXSTOP",8,0)
 ;   type: type REQUIRED (Stop Code, DSS Stop Code, Credit Stop Code, DSS Credit Stop Code)
"RTN","ECXSTOP",9,0)
 ;  clien: clinic IEN in #728.44 (optional)
"RTN","ECXSTOP",10,0)
 ;   date: date of action (default today) (optional)
"RTN","ECXSTOP",11,0)
 ;    ien: ien from edit so lookup won't happen
"RTN","ECXSTOP",12,0)
 ;
"RTN","ECXSTOP",13,0)
 ;ecxerr(err) and warning(wrn) are existing arrays 
"RTN","ECXSTOP",14,0)
 ;make sure they exist!
"RTN","ECXSTOP",15,0)
 ;
"RTN","ECXSTOP",16,0)
 N XCODE,INACT,RTYPE
"RTN","ECXSTOP",17,0)
 Q:'CODE
"RTN","ECXSTOP",18,0)
 Q:(TYPE="")
"RTN","ECXSTOP",19,0)
 S CLIEN=$G(CLIEN)
"RTN","ECXSTOP",20,0)
 I $G(DATE)="" S DATE=DT
"RTN","ECXSTOP",21,0)
 S ERR=$G(ERR)+1,WRN=$G(WRN)+1
"RTN","ECXSTOP",22,0)
 K:ERR=1 ECXERR K:WRN=1 WARNING
"RTN","ECXSTOP",23,0)
 I TYPE="CHAR4 Code" D  Q  ;149 CVW
"RTN","ECXSTOP",24,0)
 . I (CODE'="")&($$GET1^DIQ(728.441,CODE,3)'="") S ECXERR(ERR)=$$GET1^DIQ(728.441,CODE,.01)_" "_TYPE_" is inactive, please change to an active code." S ERR=ERR+1 ;144 CVW
"RTN","ECXSTOP",25,0)
 . I (CODE'="")&($$GET1^DIQ(728.441,CODE,.01)="") S ECXERR(ERR)=CODE_" "_TYPE_" is invalid, please change to a legal value." S ERR=ERR+1 ;144 CVW
"RTN","ECXSTOP",26,0)
 D:$G(IEN)="" FINDCOD I +IEN'>0 S ECXERR(ERR)=CODE_" is Invalid for "_TYPE S ERR=ERR+1 Q
"RTN","ECXSTOP",27,0)
 I '$D(^DIC(40.7,IEN,0)) S ECXERR(ERR)=CODE_" is Invalid for "_TYPE S ERR=ERR+1 Q
"RTN","ECXSTOP",28,0)
 I (+CODE'=CODE),($L(CODE)>3) S ECXERR(ERR)=CODE_" is an Invalid "_TYPE S ERR=ERR+1 Q
"RTN","ECXSTOP",29,0)
 S INACT=$P(^DIC(40.7,IEN,0),"^",3) I INACT,((DATE>INACT)!(DATE=INACT)) S ECXERR(ERR)=CODE_" is an Inactive "_TYPE S ERR=ERR+1
"RTN","ECXSTOP",30,0)
 S RTYPE=$P(^DIC(40.7,IEN,0),"^",6)
"RTN","ECXSTOP",31,0)
 I (TYPE="Stop Code"),(RTYPE'=("P"))&(RTYPE'=("E")) S ECXERR(ERR)=CODE_" This stop code can only be used in the secondary position." S ERR=ERR+1
"RTN","ECXSTOP",32,0)
 I TYPE="DSS Stop Code",(RTYPE'=("P"))&(RTYPE'=("E")) S ECXERR(ERR)=CODE_" This stop code can only be used in the secondary position." S ERR=ERR+1
"RTN","ECXSTOP",33,0)
 I TYPE="Credit Stop Code",(RTYPE'=("S"))&(RTYPE'=("E")) S ECXERR(ERR)=CODE_" This stop code can only be used in the primary position." S ERR=ERR+1
"RTN","ECXSTOP",34,0)
 I TYPE="DSS Credit Stop Code",(RTYPE'=("S"))&(RTYPE'=("E")) S ECXERR(ERR)=CODE_" This stop code can only be used in the primary position." S ERR=ERR+1
"RTN","ECXSTOP",35,0)
 ;I ($P(^DIC(40.7,IEN,0),"^",7)>DT) S WARNING(WRN)=CODE_" This "_TYPE_" has a Restriction Date in the future." S WRN=WRN+1
"RTN","ECXSTOP",36,0)
 I (TYPE="Stop Code"),$G(CLIEN),(CODE=$P(^ECX(728.44,CLIEN,0),"^",3)) S ECXERR(ERR)=CODE_" "_TYPE_" should not match Credit Stop Code." S ERR=ERR+1
"RTN","ECXSTOP",37,0)
 I (TYPE="DSS Stop Code"),$G(CLIEN),(CODE=$P(^ECX(728.44,CLIEN,0),"^",5)) S ECXERR(ERR)=CODE_" "_TYPE_" should not match DSS Credit Stop Code." S ERR=ERR+1
"RTN","ECXSTOP",38,0)
 ;WARNING  ; check for inactivations in future
"RTN","ECXSTOP",39,0)
 I INACT>DT S WARNING(WRN)=CODE_" This "_TYPE_" has a pending Inactive Date." S WRN=WRN+1
"RTN","ECXSTOP",40,0)
 Q
"RTN","ECXSTOP",41,0)
FINDCOD ;find active code if one
"RTN","ECXSTOP",42,0)
 N ARRY,I,FLG,INACT
"RTN","ECXSTOP",43,0)
 S IEN=$O(^DIC(40.7,"C",CODE,0))
"RTN","ECXSTOP",44,0)
 I $O(^DIC(40.7,"C",CODE,IEN))'>0 Q
"RTN","ECXSTOP",45,0)
 ;must be some duplicates so find the best one
"RTN","ECXSTOP",46,0)
 S I=""
"RTN","ECXSTOP",47,0)
 F  S I=$O(^DIC(40.7,"C",CODE,I)) Q:'I  D
"RTN","ECXSTOP",48,0)
 . Q:'$D(^DIC(40.7,I,0))
"RTN","ECXSTOP",49,0)
 . S INACT=$P(^DIC(40.7,I,0),"^",3),FLG="A" D
"RTN","ECXSTOP",50,0)
 . . I INACT,((DATE>INACT)!(DATE=INACT)) S FLG="I"
"RTN","ECXSTOP",51,0)
 . S ARRY(FLG,I)=""
"RTN","ECXSTOP",52,0)
 I $D(ARRY("A")) S IEN=$O(ARRY("A",0))
"RTN","ECXSTOP",53,0)
 Q
"RTN","ECXSURG")
0^31^B118025382^B116822691
"RTN","ECXSURG",1,0)
ECXSURG ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ;6/29/18  14:11
"RTN","ECXSURG",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,25,24,33,39,41,42,46,50,71,84,92,99,105,112,128,127,132,144,149,154,161,166,170**;Dec 22, 1997;Build 12
"RTN","ECXSURG",3,0)
BEG ;entry point from option
"RTN","ECXSURG",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXSURG",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXSURG",6,0)
 Q
"RTN","ECXSURG",7,0)
 ;
"RTN","ECXSURG",8,0)
START ;
"RTN","ECXSURG",9,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSURG",10,0)
 S QFLG=0,ECED=ECED+.3,ECD=ECSD1
"RTN","ECXSURG",11,0)
 F  S ECD=$O(^SRF("AC",ECD)),ECD0=0 Q:('ECD)!(ECD>ECED)!(QFLG)  D
"RTN","ECXSURG",12,0)
 .F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXSURG",13,0)
 ..I $D(^SRF(ECD0,0)) S EC=^SRF(ECD0,0),ECXDFN=+$P(EC,U),ECXVISIT=$P(EC,U,15) D STUFF Q:QFLG
"RTN","ECXSURG",14,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSURG",15,0)
 Q
"RTN","ECXSURG",16,0)
 ;
"RTN","ECXSURG",17,0)
STUFF ;gather data
"RTN","ECXSURG",18,0)
 N J,X,Y,PP,DATA1,DATA2,DATAOP,ARR,ERR,SUB,MOD,ECXNONL,ECXSTOP,TIMEDIF
"RTN","ECXSURG",19,0)
 N ECPRO,ECXORCT,ECXPTHA,ECXNPRFI,ECXPA,ECXPAPC,ECSRPC,ECATPC,ECSAPC
"RTN","ECXSURG",20,0)
 N ECXCRST,ECXSTCD,ECXCLIN,EC1A,EC2A,ECPQ,ECQA,EC1APC,EC2APC,ECPQPC
"RTN","ECXSURG",21,0)
 N ECQAPC,EC1ANPI,EC2ANPI,ECPQNPI,ECQANPI
"RTN","ECXSURG",22,0)
 N ECXORCET,ECXORCST,ECXTPOOR ;ECX*128
"RTN","ECXSURG",23,0)
 N ECICD10,ECICD101,ECICD102,ECICD103,ECICD104,ECICD105,ECXCONC ;ECX*144 CVW
"RTN","ECXSURG",24,0)
 N ECXCLST,ECXECL,CODE,ECNTIME,ECSTIME,ECATIME,ECXNONMS ;144,154,161,166
"RTN","ECXSURG",25,0)
 N ECXTEMPW,ECXTEMPD,ECXSTANO ;166 Patient Division
"RTN","ECXSURG",26,0)
 N ECXORG1,ECXORG2,ECXORG3,ORG,TYPE,NUM ;166 Organs to be transplanted
"RTN","ECXSURG",27,0)
 N ECXASIH ;170
"RTN","ECXSURG",28,0)
 S (ECXPODX,ECXPODX1,ECXPODX2,ECXPODX3,ECXPODX4,ECXPODX5)="" ;161 Old ICD9 codes, now placeholders and set to null
"RTN","ECXSURG",29,0)
 S ECXDATE=ECD,ECXERR=0,ECXQ="",ECXCONC=""
"RTN","ECXSURG",30,0)
 ;retrieve demographic variables
"RTN","ECXSURG",31,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXDATE,"1;2;3;5;")
"RTN","ECXSURG",32,0)
 I ECXADMDT="" S ECXADD=ECXADMDT
"RTN","ECXSURG",33,0)
 I ECXADMDT'="" S ECXADD=$$ECXDATE^ECXUTL(ECXADMDT,ECXYM)
"RTN","ECXSURG",34,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT)
"RTN","ECXSURG",35,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXSURG",36,0)
 ;OEF/OIF DATA
"RTN","ECXSURG",37,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXSURG",38,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXSURG",39,0)
 S ECXVNS=ECXPAT("VIETNAM") ; 144 Vietnam Status
"RTN","ECXSURG",40,0)
 S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXSURG",41,0)
 S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXSURG",42,0)
 S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXSURG",43,0)
 S EC0=^SRF(ECD0,0)
"RTN","ECXSURG",44,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:"")
"RTN","ECXSURG",45,0)
 S DATA2=$S($D(^SRF(ECD0,.2)):^(.2),1:"")
"RTN","ECXSURG",46,0)
 S DATAOP=$S($D(^SRO(136,ECD0,0)):^(0),1:"")
"RTN","ECXSURG",47,0)
 S ECNO=$G(^SRF(ECD0,"NON"))
"RTN","ECXSURG",48,0)
 ; if VISIT data exist get encounter data
"RTN","ECXSURG",49,0)
 ; ECX*112
"RTN","ECXSURG",50,0)
 S ECXVST=$P(^SRF(ECD0,0),U,15) D:ECXVST'=""
"RTN","ECXSURG",51,0)
 . Q:'$D(^AUPNVSIT(ECXVST,800))
"RTN","ECXSURG",52,0)
 . S ECENSC=$P(^AUPNVSIT(ECXVST,800),U,1)
"RTN","ECXSURG",53,0)
 . S ECENSC=$S(ECENSC=0:"N",ECENSC=1:"Y",1:"")
"RTN","ECXSURG",54,0)
 ;get data
"RTN","ECXSURG",55,0)
 S ECSR=$P(DATA1,U,4),(ECATNPI,ECSANPI,ECSRNPI)="",ECAT=$P(DATA1,U,13)
"RTN","ECXSURG",56,0)
 S ECSRNPI=$$NPI^XUSNPI("Individual_ID",ECSR,ECXDATE)
"RTN","ECXSURG",57,0)
 S:+ECSRNPI'>0 ECSRNPI="" S ECSRNPI=$P(ECSRNPI,U)
"RTN","ECXSURG",58,0)
 ;-Time patient in OR room (Nurse Time)
"RTN","ECXSURG",59,0)
 S ECXTM=$$ECXTIME^ECXUTL($P(DATA2,U,10))
"RTN","ECXSURG",60,0)
 S ECXDIV=$S($D(^SRF(ECD0,8)):^(8),1:ECINST)
"RTN","ECXSURG",61,0)
 N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV)  ;Production Division
"RTN","ECXSURG",62,0)
 S ECSA=$P($G(^SRF(ECD0,.3)),U,4),ECO=$P(EC0,U,2)
"RTN","ECXSURG",63,0)
 S ECSANPI=$$NPI^XUSNPI("Individual_ID",ECSA,ECXDATE)
"RTN","ECXSURG",64,0)
 S:+ECSANPI'>0 ECSANPI="" S ECSANPI=$P(ECSANPI,U)
"RTN","ECXSURG",65,0)
 ;get principle anesthetist and person class DBIA #103
"RTN","ECXSURG",66,0)
 S ECXPA=$P($G(^SRF(ECD0,.3)),U,1)
"RTN","ECXSURG",67,0)
 S ECPANPI=$$NPI^XUSNPI("Individual_ID",ECXPA,ECXDATE)
"RTN","ECXSURG",68,0)
 S:+ECPANPI'>0 ECPANPI="" S ECPANPI=$P(ECPANPI,U)
"RTN","ECXSURG",69,0)
 S ECXPAPC=$$PRVCLASS^ECXUTL(ECXPA,ECXDATE)
"RTN","ECXSURG",70,0)
 ;get first asst, 2nd asst, perfusionist, and asst perfusionist
"RTN","ECXSURG",71,0)
 S EC1A=$P(DATA1,U,5),EC2A=$P(DATA1,U,6),ECPQ=$P(DATA1,U,19),ECQA=$P(DATA1,U,20)
"RTN","ECXSURG",72,0)
 S EC1ANPI=$$NPI^XUSNPI("Individual_ID",EC1A,ECXDATE)
"RTN","ECXSURG",73,0)
 S:+EC1ANPI'>0 EC1ANPI="" S EC1ANPI=$P(EC1ANPI,U)
"RTN","ECXSURG",74,0)
 S EC2ANPI=$$NPI^XUSNPI("Individual_ID",EC2A,ECXDATE)
"RTN","ECXSURG",75,0)
 S:+EC2ANPI'>0 EC2ANPI="" S EC2ANPI=$P(EC2ANPI,U)
"RTN","ECXSURG",76,0)
 S ECPQNPI=$$NPI^XUSNPI("Individual_ID",ECPQ,ECXDATE)
"RTN","ECXSURG",77,0)
 S:+ECPQNPI'>0 ECPQNPI="" S ECPQNPI=$P(ECPQNPI,U)
"RTN","ECXSURG",78,0)
 S ECQANPI=$$NPI^XUSNPI("Individual_ID",ECQA,ECXDATE)
"RTN","ECXSURG",79,0)
 S:+ECQANPI'>0 ECQANPI="" S ECQANPI=$P(ECQANPI,U)
"RTN","ECXSURG",80,0)
 S ECORTY=$P($G(^SRS(+ECO,2)),U),ECO=$P($G(^SRS(+ECO,0)),U)
"RTN","ECXSURG",81,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXSURG",82,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0)
"RTN","ECXSURG",83,0)
 S:ECSS="000" ECSS="999"
"RTN","ECXSURG",84,0)
 ;get classification information
"RTN","ECXSURG",85,0)
 S (ECXAO,ECXHNC,ECXSHAD,ECXSHADI,ECXECL)="" I ECXVISIT'="" D  ;144
"RTN","ECXSURG",86,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR
"RTN","ECXSURG",87,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXSURG",88,0)
 .S ECENRI=$G(ECXVIST("IR")),ECENMST=$G(ECXVIST("MST"))
"RTN","ECXSURG",89,0)
 .S ECENEC=$G(ECXVIST("PGE")),ECXSHAD=$G(ECXVIST("SHAD"))
"RTN","ECXSURG",90,0)
 .S ECXECL=$G(ECXVIST("ENCCL")) ;144
"RTN","ECXSURG",91,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSURG",92,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSURG",93,0)
 ; - Shad Encounter Field
"RTN","ECXSURG",94,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXSURG",95,0)
 ;look for non-OR
"RTN","ECXSURG",96,0)
 S (ECNT,ECNL,ECXDSSD,ECXNONL,ECXSTOP,ECXNONMS)=""
"RTN","ECXSURG",97,0)
 I $P(ECNO,U)="Y" D
"RTN","ECXSURG",98,0)
 .S ECSR=$P(ECNO,U,6),ECAT=$P(ECNO,U,7)
"RTN","ECXSURG",99,0)
 .S ECSRNPI=$$NPI^XUSNPI("Individual_ID",ECSR,ECXDATE)
"RTN","ECXSURG",100,0)
 .S:+ECSRNPI'>0 ECSRNPI="" S ECSRNPI=$P(ECSRNPI,U)
"RTN","ECXSURG",101,0)
 .S ECATNPI=$$NPI^XUSNPI("Individual_ID",ECAT,ECXDATE)
"RTN","ECXSURG",102,0)
 .S:+ECATNPI'>0 ECATNPI="" S ECATNPI=$P(ECATNPI,U)
"RTN","ECXSURG",103,0)
 .S ECXTM=$$ECXTIME^ECXUTL($P(ECNO,U,4))
"RTN","ECXSURG",104,0)
 .S A1=$P(ECNO,U,5),A2=$P(ECNO,U,4),TIME="##" D:(A1&A2) TIME S ECNT=TIME
"RTN","ECXSURG",105,0)
 .S (ECXNONL,ECNL)=+$P(ECNO,U,2),ECNL=$P($G(^ECX(728.44,ECNL,0)),U,9)
"RTN","ECXSURG",106,0)
 .S:ECNL="" ECNL="UNKNOWN"
"RTN","ECXSURG",107,0)
 .;
"RTN","ECXSURG",108,0)
 .;- Get Primary or DSS Stop Code to use in encounter number
"RTN","ECXSURG",109,0)
 .N P1 ;primary stop
"RTN","ECXSURG",110,0)
 .D FEEDER^ECXSCX1(+$P(EC0,U,21),ECXDATE,.P1,,,,) S ECXSTOP=$E(P1,1,3)
"RTN","ECXSURG",111,0)
 .S ECXSTOP=$S(ECXSTOP:ECXSTOP,1:$P($G(^ECX(728.44,ECXNONL,0)),U,4))
"RTN","ECXSURG",112,0)
 .;
"RTN","ECXSURG",113,0)
 .; tjl 166 - Get medical specialty of non-OR provider
"RTN","ECXSURG",114,0)
 .S ECXNONMS=$P(ECNO,U,8)
"RTN","ECXSURG",115,0)
 ;
"RTN","ECXSURG",116,0)
 ;- Get credit stop, stop code and clinic
"RTN","ECXSURG",117,0)
 I $$SUR^ECXUTL6(.ECXCRST,.ECXSTCD,.ECXCLIN)
"RTN","ECXSURG",118,0)
 ;
"RTN","ECXSURG",119,0)
 ;166  tjl - Set Patient Division based on Movement Number
"RTN","ECXSURG",120,0)
 S ECXSTANO="" I $D(^DGPM(+ECXMN,0)) D
"RTN","ECXSURG",121,0)
 . S ECXTEMPW=$P($G(^DGPM(ECXMN,0)),U,6)
"RTN","ECXSURG",122,0)
 . S ECXTEMPD=$P($G(^DIC(42,+ECXTEMPW,0)),U,11)
"RTN","ECXSURG",123,0)
 . S ECXSTANO=$$GETDIV^ECXDEPT(ECXTEMPD)
"RTN","ECXSURG",124,0)
 ;
"RTN","ECXSURG",125,0)
 ;166  For non-OR cases where Pat Div is empty, get value based on Clinic
"RTN","ECXSURG",126,0)
 I $P(ECNO,U)="Y",ECXSTANO="" S ECXSTANO=$$GETDIV^ECXDEPT($$GET1^DIQ(44,ECXCLIN,3.5,"I"))
"RTN","ECXSURG",127,0)
 ;
"RTN","ECXSURG",128,0)
 ;166  If Patient Division is still empty, set it to the Prod Div Code
"RTN","ECXSURG",129,0)
 I ECXSTANO="" S ECXSTANO=ECXPDIV
"RTN","ECXSURG",130,0)
 ;
"RTN","ECXSURG",131,0)
 ;- If surgery cancelled/aborted quit and go to next record
"RTN","ECXSURG",132,0)
 S ECCAN=$P($G(^SRF(ECD0,30)),U)
"RTN","ECXSURG",133,0)
 I +ECCAN S ECCAN=$$CANC^ECXUTL4(ECNL,$P(DATA2,U,10))
"RTN","ECXSURG",134,0)
 ;on hold for ECXDSSD and ECXDSSP I $P($G(^SRF(ECD0,30)),U) Q
"RTN","ECXSURG",135,0)
 ;get service of attending surgeon
"RTN","ECXSURG",136,0)
 S ECATSV=$P($G(^DIC(49,+$G(^VA(200,+ECAT,5)),730)),U)
"RTN","ECXSURG",137,0)
 ;
"RTN","ECXSURG",138,0)
 ;get surgeon, attending and anesthesia super person classes
"RTN","ECXSURG",139,0)
 ;get 1st asst, 2nd asst, perfusionist, and asst perfusionst person class
"RTN","ECXSURG",140,0)
 S ECSRPC=$$PRVCLASS^ECXUTL(ECSR,ECXDATE)
"RTN","ECXSURG",141,0)
 S ECATPC=$$PRVCLASS^ECXUTL(ECAT,ECXDATE)
"RTN","ECXSURG",142,0)
 S ECSAPC=$$PRVCLASS^ECXUTL(ECSA,ECXDATE)
"RTN","ECXSURG",143,0)
 S EC1APC=$$PRVCLASS^ECXUTL(EC1A,ECXDATE)
"RTN","ECXSURG",144,0)
 S EC2APC=$$PRVCLASS^ECXUTL(EC2A,ECXDATE)
"RTN","ECXSURG",145,0)
 S ECPQPC=$$PRVCLASS^ECXUTL(ECPQ,ECXDATE)
"RTN","ECXSURG",146,0)
 S ECQAPC=$$PRVCLASS^ECXUTL(ECQA,ECXDATE)
"RTN","ECXSURG",147,0)
 ;
"RTN","ECXSURG",148,0)
 ;add leading 2s for pointer to 200
"RTN","ECXSURG",149,0)
 S:ECAT ECAT="2"_ECAT S:ECSR ECSR="2"_ECSR S:ECSA ECSA="2"_ECSA
"RTN","ECXSURG",150,0)
 ;add leading 2 to principle anesthetist IEN
"RTN","ECXSURG",151,0)
 S:ECXPA ECXPA="2"_ECXPA
"RTN","ECXSURG",152,0)
 ;add leading 2s for 1st asst, 2nd asst, perfusionist, asst perfusionist
"RTN","ECXSURG",153,0)
 S:EC1A EC1A="2"_EC1A S:EC2A EC2A="2"_EC2A S:ECPQ ECPQ="2"_ECPQ S:ECQA ECQA="2"_ECQA
"RTN","ECXSURG",154,0)
 ;anesthesia technique
"RTN","ECXSURG",155,0)
 S ECANE="",PP=""
"RTN","ECXSURG",156,0)
 I $D(^SRF(ECD0,6,0)) S ECXJ=0 D
"RTN","ECXSURG",157,0)
 .F  S ECXJ=$O(^SRF(ECD0,6,ECXJ)) Q:('ECXJ)!(ECANE]"")  D
"RTN","ECXSURG",158,0)
 ..S PP=$P($G(^(ECXJ,0)),U,3) S:PP="Y" ECANE=$P(^(0),U,1)
"RTN","ECXSURG",159,0)
 .I ECANE="" S ECXJ=$O(^SRF(ECD0,6,0)) I ECXJ S ECANE=$P(^SRF(ECD0,6,ECXJ,0),U,1)
"RTN","ECXSURG",160,0)
 ;get primary procedure
"RTN","ECXSURG",161,0)
 ;ecode0=p^cpt code^^patient time^operation time^anesthesia time
"RTN","ECXSURG",162,0)
 S ECPT=+$P(DATAOP,U,2),ECXCMOD=""
"RTN","ECXSURG",163,0)
 K ARR,ERR D FIELD^DID(130,28,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",164,0)
 .K ARR,ERR D FIELD^DID(130,28,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",165,0)
 .Q:$D(ERR("DIERR"))
"RTN","ECXSURG",166,0)
 .S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",167,0)
 .F  S MOD=$O(^SRF(ECD0,SUB,MOD)) Q:MOD'>0  D
"RTN","ECXSURG",168,0)
 ..S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",169,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",170,0)
 S ECODE0="P"_U_U  ;ECPT_U
"RTN","ECXSURG",171,0)
 S (ECNTIME,ECSTIME,ECATIME)="" ;161
"RTN","ECXSURG",172,0)
 F J="10,12","2,3","1,4" D
"RTN","ECXSURG",173,0)
 .S A2=$P(DATA2,U,$P(J,",")),A1=$P(DATA2,U,$P(J,",",2)),TIME="##"
"RTN","ECXSURG",174,0)
 .I (A1&A2)&(+J=10) D TIME  S ECNTIME=TIME
"RTN","ECXSURG",175,0)
 .I +J=1 D ANTIME  S ECATIME=TIME ;161
"RTN","ECXSURG",176,0)
 .I (A1&A2)&(+J=2) D
"RTN","ECXSURG",177,0)
 ..;
"RTN","ECXSURG",178,0)
 ..;-Operation Time (Surgeon Time)
"RTN","ECXSURG",179,0)
 ..;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",180,0)
 ..S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",181,0)
 ..S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",182,0)
 ..S TIME=$TR($J(TIMEDIF,4,0)," ")
"RTN","ECXSURG",183,0)
 ..S:TIME<0 TIME="###"
"RTN","ECXSURG",184,0)
 ..S:TIME ECSTIME=TIME
"RTN","ECXSURG",185,0)
 .S ECODE0=ECODE0_U_TIME K TIME
"RTN","ECXSURG",186,0)
 ; -Recovery Room Time
"RTN","ECXSURG",187,0)
 S ECRR=""
"RTN","ECXSURG",188,0)
 I $D(^SRF(ECD0,1.1)) D
"RTN","ECXSURG",189,0)
 .S A1=$P(^(1.1),U,8),A2=$P(^(1.1),U,7),TIME="##" D:(A1&A2) TIME
"RTN","ECXSURG",190,0)
 .S ECRR=TIME K TIME
"RTN","ECXSURG",191,0)
 I ECNL]"" S $P(ECODE0,U,5)=ECNT
"RTN","ECXSURG",192,0)
 ;
"RTN","ECXSURG",193,0)
 ; -OR Clean Time in 15 min increments DBIA #103
"RTN","ECXSURG",194,0)
 ;
"RTN","ECXSURG",195,0)
 ; ECX*3.0*128 - Correct the calculation of OR Clean Time.
"RTN","ECXSURG",196,0)
 S ECXORCT=0
"RTN","ECXSURG",197,0)
 ; Set local variables. ECX*128
"RTN","ECXSURG",198,0)
 S ECXTPOOR=$P($G(DATA2),U,12),ECXORCST=$P($G(DATA2),U,13),ECXORCET=$P($G(DATA2),U,14)
"RTN","ECXSURG",199,0)
 I (ECXORCET'=""),(ECXORCST'="") D
"RTN","ECXSURG",200,0)
 .S ECXORCT=($$FMDIFF^XLFDT(ECXORCET,ECXORCST,2)/60)/15
"RTN","ECXSURG",201,0)
 I 'ECXORCT,(ECXORCET'=""),(ECXTPOOR'="") D
"RTN","ECXSURG",202,0)
 .S ECXORCT=($$FMDIFF^XLFDT(ECXORCET,ECXTPOOR,2)/60)/15
"RTN","ECXSURG",203,0)
 ; Make sure the final OR CLEAN TIME is an integer by rounding
"RTN","ECXSURG",204,0)
 ; up for any decimal value  ECX*3.0*128
"RTN","ECXSURG",205,0)
 I ECXORCT>0 S ECXORCT=$J(ECXORCT+.4999,0,0)
"RTN","ECXSURG",206,0)
 ; -If no OR clean time recorded set it to 2
"RTN","ECXSURG",207,0)
 I ECXORCT'>0 S ECXORCT=2
"RTN","ECXSURG",208,0)
 ;
"RTN","ECXSURG",209,0)
 ; -PT in hold area time in 15 min increments DBIA #103
"RTN","ECXSURG",210,0)
 I $P($G(DATA2),U,10),$P($G(DATA2),U,15) D
"RTN","ECXSURG",211,0)
 .S ECXPTHA=($$FMDIFF^XLFDT($P($G(DATA2),U,10),$P($G(DATA2),U,15),2)/60)/15
"RTN","ECXSURG",212,0)
 .S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",213,0)
 .I CON S ECXPTHA=ECXPTHA/2,ECXCONC="C" ;144 Concurrent Case
"RTN","ECXSURG",214,0)
 .S ECXPTHA=$TR($J(ECXPTHA,3,0)," ")
"RTN","ECXSURG",215,0)
 ; -If hold time is =<0 set it to ""
"RTN","ECXSURG",216,0)
 S:$G(ECXPTHA)'>0 ECXPTHA=""
"RTN","ECXSURG",217,0)
 ;
"RTN","ECXSURG",218,0)
 ;- get ASA CLASS
"RTN","ECXSURG",219,0)
 S ECASA=$$GET1^DIQ(132.8,$$GET1^DIQ(130,ECD0,1.13,"I"),.01)
"RTN","ECXSURG",220,0)
 ;
"RTN","ECXSURG",221,0)
 ;- Observation Patient Indicator (yes/no)
"RTN","ECXSURG",222,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECNL)
"RTN","ECXSURG",223,0)
 ;
"RTN","ECXSURG",224,0)
 ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXSURG",225,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXSURG",226,0)
 ;- set national patient record flag if exist
"RTN","ECXSURG",227,0)
 D NPRF^ECXUTL5
"RTN","ECXSURG",228,0)
 ;
"RTN","ECXSURG",229,0)
 ;- If no encounter number don't file record
"RTN","ECXSURG",230,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXSTOP,ECSS) Q:ECXENC=""
"RTN","ECXSURG",231,0)
 ;
"RTN","ECXSURG",232,0)
 ;- Get postop diagnosis codes
"RTN","ECXSURG",233,0)
 I $$SURPODX^ECXUTL6(.ECICD10,.ECICD101,.ECICD102,.ECICD103,.ECICD104,.ECICD105) ;161
"RTN","ECXSURG",234,0)
 ;166 Get organs transplanted (max 3)
"RTN","ECXSURG",235,0)
 I $D(^SRF(ECD0,63)) S NUM=0 F  S NUM=$O(^SRF(ECD0,63,NUM)) Q:'+NUM!($G(ORG)'<3)  D
"RTN","ECXSURG",236,0)
 .S TYPE=$P($G(^SRF(ECD0,63,NUM,0)),U)
"RTN","ECXSURG",237,0)
 .I TYPE'="" S ORG=+$G(ORG)+1 S @("ECXORG"_ORG)=$S(TYPE=1:"HART",TYPE=2:"LUNG",TYPE=3:"KDNY",TYPE=4:"LIVR",TYPE=5:"PCRS",TYPE=6:"INTN",TYPE=7:"OTHR",1:"")
"RTN","ECXSURG",238,0)
 .Q
"RTN","ECXSURG",239,0)
 ;
"RTN","ECXSURG",240,0)
 I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXSURG",241,0)
 D FILE^ECXSURG1
"RTN","ECXSURG",242,0)
 ;get secondary procedures
"RTN","ECXSURG",243,0)
 ;ecode0=s^cpt code
"RTN","ECXSURG",244,0)
 S ECXJ=0
"RTN","ECXSURG",245,0)
 F  S ECXJ=$O(^SRO(136,ECD0,3,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)),$D(^(0)),$P(^(0),"^")]"" D
"RTN","ECXSURG",246,0)
 .;S ECPT=$P(^SRF(ECD0,13,ECXJ,2),U),ECXCMOD=""
"RTN","ECXSURG",247,0)
 .S ECPT=$P(^SRO(136,ECD0,3,ECXJ,0),U),ECXMOD=""
"RTN","ECXSURG",248,0)
 .S ECPT=$P(^(0),"^"),ECXCMOD=""
"RTN","ECXSURG",249,0)
 .K ARR,ERR
"RTN","ECXSURG",250,0)
 .D FIELD^DID(130.16,4,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",251,0)
 ..K ARR,ERR
"RTN","ECXSURG",252,0)
 ..D FIELD^DID(130.16,4,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",253,0)
 ..Q:$D(ERR("DIERR"))
"RTN","ECXSURG",254,0)
 ..S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",255,0)
 ..F  S MOD=$O(^SRF(ECD0,13,ECXJ,SUB,MOD)) Q:MOD'>0  S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",256,0)
 .S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",257,0)
 .S ECODE0="S"_U   ;_ECPT
"RTN","ECXSURG",258,0)
 .D FILE^ECXSURG1
"RTN","ECXSURG",259,0)
 ;get prostheses
"RTN","ECXSURG",260,0)
 ;ecode0=i^^^^^^prosthesis^old qty field (null)
"RTN","ECXSURG",261,0)
 S ECXJ=0
"RTN","ECXSURG",262,0)
 F  S ECXJ=$O(^SRF(ECD0,1,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)) D
"RTN","ECXSURG",263,0)
 .S ECXP=+^SRF(ECD0,1,ECXJ,0),ECXQ=$P($G(^(1)),U,2) S:'ECXQ ECXQ=1
"RTN","ECXSURG",264,0)
 .S ECODE0="I"_U_U_U_U_U_U_ECXP_U_U
"RTN","ECXSURG",265,0)
 .D FILE^ECXSURG1
"RTN","ECXSURG",266,0)
 Q
"RTN","ECXSURG",267,0)
 ;
"RTN","ECXSURG",268,0)
 ;
"RTN","ECXSURG",269,0)
TIME ; given date/time get increment
"RTN","ECXSURG",270,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG",271,0)
 N CON,TIMEDIF
"RTN","ECXSURG",272,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",273,0)
 ;
"RTN","ECXSURG",274,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",275,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",276,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",277,0)
 I 'CON D
"RTN","ECXSURG",278,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG",279,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG",280,0)
 I CON D
"RTN","ECXSURG",281,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG",282,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG",283,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG",284,0)
 Q
"RTN","ECXSURG",285,0)
 ;
"RTN","ECXSURG",286,0)
ANTIME ;161 Section added to determine anesthesia time
"RTN","ECXSURG",287,0)
 N STDT,ENDT,SUB,NODE,VCODES
"RTN","ECXSURG",288,0)
 S TIME=""
"RTN","ECXSURG",289,0)
 I A1&(A2) D TIME Q  ;If anesthesia fields have values, determine time
"RTN","ECXSURG",290,0)
 ;If either anesthesia time field is null, search anes multiple
"RTN","ECXSURG",291,0)
 S (STDT,ENDT)="",SUB=0
"RTN","ECXSURG",292,0)
 F  S SUB=$O(^SRF(ECD0,50,SUB)) Q:'+SUB  S NODE=$G(^SRF(ECD0,50,SUB,0)) D
"RTN","ECXSURG",293,0)
 .I $P(NODE,U) S STDT=$S(STDT="":$P(NODE,U),$P(NODE,U)<STDT:$P(NODE,U),1:STDT) ;find earliest start date
"RTN","ECXSURG",294,0)
 .I $P(NODE,U,2) S ENDT=$S($P(NODE,U,2)>ENDT:$P(NODE,U,2),1:ENDT) ;find latest end date
"RTN","ECXSURG",295,0)
 I STDT&(ENDT) S A1=ENDT,A2=STDT D TIME Q  ;Use anes multiple dates to determine time
"RTN","ECXSURG",296,0)
 S VCODES="^V180200^V180201^V180202^V180203^V180204^V180205^V100500^V110400^V110401^V110402^V110403^" ;VA person class list
"RTN","ECXSURG",297,0)
 I VCODES[("^"_ECSAPC_"^")!(VCODES[("^"_ECXPAPC_"^")) I ECNTIME,ECNTIME'>97.5 S TIME=$J(ECNTIME+2,2,1) ;If principle anesthetist or supervising anesthesiologis has one of the person classes, add two 15 minute segments to the patient's room time
"RTN","ECXSURG",298,0)
 Q  ;If no calculations done, time will be returned as null
"RTN","ECXSURG",299,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG",300,0)
 S ECHEAD="SUR"
"RTN","ECXSURG",301,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG",302,0)
 Q
"RTN","ECXSURG",303,0)
 ;
"RTN","ECXSURG1")
0^13^B25793126^B24564494
"RTN","ECXSURG1",1,0)
ECXSURG1 ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ;4/24/18  15:36
"RTN","ECXSURG1",2,0)
 ;;3.0;DSS EXTRACTS;**105,112,120,127,132,144,149,161,166,170**;Dec 22, 1997;Build 12
"RTN","ECXSURG1",3,0)
 ;
"RTN","ECXSURG1",4,0)
FILE ;file record
"RTN","ECXSURG1",5,0)
 ;node0
"RTN","ECXSURG1",6,0)
 ;division^dfn^ssn^name^in/out (ECXA)^day^case #^
"RTN","ECXSURG1",7,0)
 ;surg specialty^or room #^
"RTN","ECXSURG1",8,0)
 ;surgeon^attending^anesthesia supervisor^anesthesia technique^
"RTN","ECXSURG1",9,0)
 ;primary/secondary/prostheses^placeholder^^pt time^op time^anes time^
"RTN","ECXSURG1",10,0)
 ;prostheses^qty^^
"RTN","ECXSURG1",11,0)
 ;movement number^treating specialty^cancel/abort (ECCAN)^time^or type^
"RTN","ECXSURG1",12,0)
 ;attending's service^non-or dss id^recovery room time^^
"RTN","ECXSURG1",13,0)
 ;Placehold primary care team^Placehold primary care provider^admission date
"RTN","ECXSURG1",14,0)
 ;node1
"RTN","ECXSURG1",15,0)
 ;mpi^placeholder ECXDSSD^surgeon npi^attending npi^anes supervisor npi^
"RTN","ECXSURG1",16,0)
 ;pc provider npi^Placehold pc prov person class^
"RTN","ECXSURG1",17,0)
 ;Placehold assoc pc provider^Placehold assoc pc prov person class^assoc pc prov npi^
"RTN","ECXSURG1",18,0)
 ;cpt&modifiers ECXCPT^dom ECXDOM^enrollment category ECXCAT^
"RTN","ECXSURG1",19,0)
 ;enrollment status ECXSTAT^enrollment priority ECXPRIOR^
"RTN","ECXSURG1",20,0)
 ;period of service ECXPOS^purple heart indicator ECXPHI^
"RTN","ECXSURG1",21,0)
 ;observ pat ind ECXOBS^encounter num ECXENC^ao loc ECXAOL^
"RTN","ECXSURG1",22,0)
 ;production division ECXPDIV^head & neck canc ind ECXHNCI^
"RTN","ECXSURG1",23,0)
 ;Placehold ethnicity ECXETH^Placehold race1 ECXRC1^new quantity ECXQ^
"RTN","ECXSURG1",24,0)
 ;^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig
"RTN","ECXSURG1",25,0)
 ;ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC
"RTN","ECXSURG1",26,0)
 ;or clean time ECXORCT^time pt in hold area ECXPTHA^national patient
"RTN","ECXSURG1",27,0)
 ;record flag ECXNPRFI^princ anesthetist ECXPA^surgeon per class ECSRPC
"RTN","ECXSURG1",28,0)
 ;node2
"RTN","ECXSURG1",29,0)
 ;atten surgeon per class ECATPC^anesthesia super person class ECSAPC^
"RTN","ECXSURG1",30,0)
 ;princ anesthetist PC ECXPAPC^emergency response indicator(FEMA) ECXERI^
"RTN","ECXSURG1",31,0)
 ;agent orange indic ECXAO^head/neck cancer ECXHNC
"RTN","ECXSURG1",32,0)
 ;OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^clinic pointer ECXCLIN
"RTN","ECXSURG1",33,0)
 ;credit stop ECXCRST^stop code ECXSTCD^Placeholder ECXPODX^
"RTN","ECXSURG1",34,0)
 ;Placeholder ECXPODX1^Placeholder ECXPODX2^Placeholder ECXPODX3^
"RTN","ECXSURG1",35,0)
 ;Placeholder ECXPODX4^Placeholder ECXPODX5^
"RTN","ECXSURG1",36,0)
 ;anesthesia sup npi ECSANPI^Placehold assoc pc prov npi ECASNPI^
"RTN","ECXSURG1",37,0)
 ;attending surgeon npi ECATNPI^Placehold primary care provider npi ECPTNPI^
"RTN","ECXSURG1",38,0)
 ;principle anesthetist npi ECPANPI^surgeon npi ECSRNPI
"RTN","ECXSURG1",39,0)
 ;encounter ec ECENEC^radiation encounter indicator ECENRI^
"RTN","ECXSURG1",40,0)
 ;mst encounter indicator ECENMST^encounter sc ECENSC^
"RTN","ECXSURG1",41,0)
 ;agent orange status ECXAST^
"RTN","ECXSURG1",42,0)
 ;environmental contaminants ECXEST^radiation status ECXRST^
"RTN","ECXSURG1",43,0)
 ;mst status ECXMST^shad indicator ECXSHADI^encounter shad ECXSHAD^
"RTN","ECXSURG1",44,0)
 ;NODE3
"RTN","ECXSURG1",45,0)
 ;1st assist EC1A^1st assist pc EC1APC^1st assist npi EC1ANPI^
"RTN","ECXSURG1",46,0)
 ;2nd assist EC2A^2nd assist pc EC2APC^2nd assist npi EC2ANPI^
"RTN","ECXSURG1",47,0)
 ;perfusionist ECPQ^perfusionist pc ECPQPC^perfusionist npi ECQANPI^
"RTN","ECXSURG1",48,0)
 ;anesthesia severity ECASA^patcat PATCAT^date of birth ECXDOB
"RTN","ECXSURG1",49,0)
 ;Vietnam Status ECXVNS^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL^
"RTN","ECXSURG1",50,0)
 ;Concurrent Case ECXCONC^Principle post op icd-10 ECICD10^post op icd-10 code #1 ECICD101^post op icd-10 code #2 ECICD102^
"RTN","ECXSURG1",51,0)
 ;post op icd-10 code #3 ECICD103^post op icd-10 code #4 ECICD104^post op icd-10 code #5 ECICD105^
"RTN","ECXSURG1",52,0)
 ;Combat Service Indicator (ECXSVCI)^Combat Service Location (ECXSVCL)^
"RTN","ECXSURG1",53,0)
 ;NODE 4
"RTN","ECXSURG1",54,0)
 ;medical specialty of non-OR provider (ECXNONMS)^transplant organ 1 (ECXORG1)^trans org 2 (ECXORG2)^trans org 3 (ECXORG3)^
"RTN","ECXSURG1",55,0)
 ;Patient Division (ECXSTANO)  ;166
"RTN","ECXSURG1",56,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXSURG1",57,0)
 N ECXDATA,ECXTSC
"RTN","ECXSURG1",58,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXSURG1",59,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXSURG1",60,0)
 ;done
"RTN","ECXSURG1",61,0)
 N DA,DIK,STR
"RTN","ECXSURG1",62,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSURG1",63,0)
 I ECXLOGIC>2018 S (ECXETH,ECXRC1,ECPTTM,ECPTPR,ECCLAS,ECASPR,ECCLAS2,ECASNPI,ECPTNPI)="" ;170 Fields will now be null
"RTN","ECXSURG1",64,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSURG1",65,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECD0_U_ECSS_U_ECO_U
"RTN","ECXSURG1",66,0)
 S ECODE=ECODE_ECSR_U_ECAT_U_ECSA_U_ECANE_U_ECODE0_U
"RTN","ECXSURG1",67,0)
 S STR=ECXMN_U_ECXTSC_U_$S(ECCAN'="":ECCAN,1:"")_U_ECXTM_U_ECORTY_U
"RTN","ECXSURG1",68,0)
 S STR=STR_ECATSV_U_ECNL_U_ECRR_U_U_ECPTTM_U_ECPTPR_U_ECXADD_U
"RTN","ECXSURG1",69,0)
 S $P(ECODE,U,26,38)=STR
"RTN","ECXSURG1",70,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_U
"RTN","ECXSURG1",71,0)
 S ECODE1=ECODE1_ECCLAS_U_ECASPR_U_ECCLAS2_U_U_ECXCPT_U_ECXDOM_U
"RTN","ECXSURG1",72,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXSURG1",73,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXPDIV_U_ECXHNCI_U
"RTN","ECXSURG1",74,0)
 S ECODE1=ECODE1_ECXETH_U_ECXRC1_U_ECXQ_U
"RTN","ECXSURG1",75,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXORCT_U_ECXPTHA_U_ECXNPRFI
"RTN","ECXSURG1",76,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXPA_U_ECSRPC_U,ECODE2=ECATPC_U_ECSAPC_U_ECXPAPC
"RTN","ECXSURG1",77,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXHNC
"RTN","ECXSURG1",78,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECXCLIN_U_ECXCRST_U_ECXSTCD_U_ECXPODX_U_ECXPODX1_U_ECXPODX2_U_ECXPODX3_U_ECXPODX4_U_ECXPODX5_U_ECSANPI_U_ECASNPI_U_ECATNPI_U_ECPTNPI_U_ECPANPI_U_ECSRNPI
"RTN","ECXSURG1",79,0)
 I ECXLOGIC>2008 S ECODE2=ECODE2_U_$G(ECENEC)_U_$G(ECENRI)_U_$G(ECENMST)_U_$G(ECENSC)_U_$G(ECXAST)_U_$G(ECXEST)_U_$G(ECXRST)_U_$G(ECXMST)
"RTN","ECXSURG1",80,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_$G(ECXSHADI)_U_$G(ECXSHAD)_U,ECODE3=$G(EC1A)_U_$G(EC1APC)_U_$G(EC1ANPI)
"RTN","ECXSURG1",81,0)
 I ECXLOGIC>2010 S ECODE3=ECODE3_U_$G(EC2A)_U_$G(EC2APC)_U_(EC2ANPI)_U_$G(ECPQ)_U_$G(ECPQPC)_U_$G(ECPQNPI)_U_$G(ECQA)_U_$G(ECQAPC)_U_$G(ECQANPI)_U_$G(ECASA)_U_ECXPATCAT
"RTN","ECXSURG1",82,0)
 I ECXLOGIC>2011 S ECODE3=ECODE3_U_$G(ECXDOB)
"RTN","ECXSURG1",83,0)
 I ECXLOGIC>2013 S ECODE3=ECODE3_U_ECXVNS_U_ECXCLST_U_ECXECL ;144
"RTN","ECXSURG1",84,0)
 I ECXLOGIC>2013 S ECODE3=ECODE3_U_ECXCONC_U_ECICD10_U_ECICD101_U_ECICD102_U_ECICD103_U_ECICD104_U_ECICD105 ;144 Concurrent case ICD-10
"RTN","ECXSURG1",85,0)
 I ECXLOGIC>2014 S ECODE3=ECODE3_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXSURG1",86,0)
 I ECXLOGIC>2017 S ECODE3=ECODE3_U,ECODE4=ECXNONMS_U_$G(ECXORG1)_U_$G(ECXORG2)_U_$G(ECXORG3)_U_$G(ECXSTANO)  ;166
"RTN","ECXSURG1",87,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),^ECX(ECFILE,EC7,3)=$G(ECODE3),^ECX(ECFILE,EC7,4)=$G(ECODE4),ECRN=ECRN+1 ;166
"RTN","ECXSURG1",88,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXSURG1",89,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSURG1",90,0)
 ;
"RTN","ECXSURG1",91,0)
TIME ; given date/time get increment
"RTN","ECXSURG1",92,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG1",93,0)
 N CON,TIMEDIF
"RTN","ECXSURG1",94,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG1",95,0)
 ;
"RTN","ECXSURG1",96,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG1",97,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG1",98,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG1",99,0)
 I 'CON D
"RTN","ECXSURG1",100,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG1",101,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG1",102,0)
 I CON D
"RTN","ECXSURG1",103,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG1",104,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG1",105,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG1",106,0)
 Q
"RTN","ECXSURG1",107,0)
 ;
"RTN","ECXSURG1",108,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG1",109,0)
 S ECHEAD="SUR"
"RTN","ECXSURG1",110,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG1",111,0)
 Q
"RTN","ECXSURG1",112,0)
 ;
"RTN","ECXSURG1",113,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSURG1",114,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXTRT")
0^32^B62005159^B61174403
"RTN","ECXTRT",1,0)
ECXTRT ;ALB/JAP,BIR/DMA,CML,PTD-Treating Specialty Change Extract ;6/29/18  14:57
"RTN","ECXTRT",2,0)
 ;;3.0;DSS EXTRACTS;**1,8,17,24,33,35,39,46,49,84,107,105,127,161,166,170**;Dec 22, 1997;Build 12
"RTN","ECXTRT",3,0)
BEG ;entry point from option
"RTN","ECXTRT",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXTRT",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXTRT",6,0)
 Q
"RTN","ECXTRT",7,0)
 ;
"RTN","ECXTRT",8,0)
START ; start package specific extract
"RTN","ECXTRT",9,0)
 N LOC,SPC,TRT,WRD,ECATLNPI,ECPRLNPI,ECXADMTM,ECXATLPC,ECXATNPC,ECXDCDT,ECXPRLPC,ECXPRNPC,ECXMOVL,ECXMOVN,ECXMVD1,ECXMVD2,ECXTIME,REC ;161,166
"RTN","ECXTRT",10,0)
 N ECXDWARD,TEMPPDIV,ECXASIH  ;166 tjl,170
"RTN","ECXTRT",11,0)
 S QFLG=0
"RTN","ECXTRT",12,0)
 K ECXDD D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXTRT",13,0)
 S ECPRO=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXTRT",14,0)
 K ^TMP($J,"ECXTMP") S TRT=0
"RTN","ECXTRT",15,0)
 F  S TRT=$O(^DIC(45.7,TRT)) Q:+TRT=0  S SPC=$P(^DIC(45.7,TRT,0),U,2),^TMP($J,"ECXTMP",TRT)=SPC
"RTN","ECXTRT",16,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXTRT",17,0)
 ;loop through type 6 movements to get treating specialty and provider changes
"RTN","ECXTRT",18,0)
 F  S ECD=$O(^DGPM("ATT6",ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)!(QFLG)  F  S ECDA=$O(^DGPM("ATT6",ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXTRT",19,0)
 .I $D(^DGPM(ECDA,0)) S EC=^(0),ECXDFN=+$P(EC,U,3) D  Q:QFLG
"RTN","ECXTRT",20,0)
 ..S ECXMVD1=$P(EC,U)  ; ,WRD=$P(EC,U,6)  166  tjl
"RTN","ECXTRT",21,0)
 ..;
"RTN","ECXTRT",22,0)
 ..;- Call sets ECXA (In/Out indicator)
"RTN","ECXTRT",23,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXMVD1,"1;",13)
"RTN","ECXTRT",24,0)
 ..S ECMT=$P(EC,U,18),ECXADM=$P(EC,U,14),ECXADT=$P($G(^DGPM(ECXADM,0)),U)
"RTN","ECXTRT",25,0)
 ..;skip the record if its the admission treat. spec. change for this episode of care
"RTN","ECXTRT",26,0)
 ..Q:ECXADM=$P(EC,U,24)
"RTN","ECXTRT",27,0)
 ..S (ECXLOS,ECXLOSA,ECXLOSP)="" S ECXDSSD=""
"RTN","ECXTRT",28,0)
 ..K LOC D SETLOC(ECXDFN,ECXADM,ECPRO,.LOC)
"RTN","ECXTRT",29,0)
 ..;get data for current (new) ts movement
"RTN","ECXTRT",30,0)
 ..S ECD1=9999999.9999999-ECXMVD1
"RTN","ECXTRT",31,0)
 ..D FINDLOC(ECD1,.LOC,.ECXSPCN,.ECXPRVN,.ECXATTN,.ECXMOVN,.ECXTRTN)
"RTN","ECXTRT",32,0)
 ..Q:ECXSPCN=""
"RTN","ECXTRT",33,0)
 ..S ECD2=$O(LOC(ECD1)) Q:ECD2=""
"RTN","ECXTRT",34,0)
 ..S ECXMVD2=9999999.9999999-ECD2
"RTN","ECXTRT",35,0)
 ..;get data for previous (losing) ts movement
"RTN","ECXTRT",36,0)
 ..D FINDLOC(ECD2,.LOC,.ECXSPCL,.ECXPRVL,.ECXATTL,.ECXMOVL,.ECXTRTL)
"RTN","ECXTRT",37,0)
 ..;if ts has changed, find los on losing ts
"RTN","ECXTRT",38,0)
 ..D:ECXTRTL'=ECXTRTN PREVTRT^ECXTRT1(.LOC,ECD1,ECD2,ECXTRTL,.ECXLOS)
"RTN","ECXTRT",39,0)
 ..;whether ts has changed or not, see if primary provider has changed
"RTN","ECXTRT",40,0)
 ..;don't bother if there's no data on current primary provider or no change in provider
"RTN","ECXTRT",41,0)
 ..D:(ECXPRVN'="")&(ECXPRVN'=ECXPRVL) PREVPRV^ECXTRT1(.LOC,ECD1,ECXPRVN,ECD2,.ECXPRVL,.ECXLOSP)
"RTN","ECXTRT",42,0)
 ..;whether ts has changed or not, see if attending physician has changed
"RTN","ECXTRT",43,0)
 ..;don't bother if there's no data on current attending physician or no change in attending
"RTN","ECXTRT",44,0)
 ..D:(ECXATTN'="")&(ECXATTN'=ECXATTL) PREVATT^ECXTRT1(.LOC,ECD1,ECXATTN,ECD2,.ECXATTL,.ECXLOSA)
"RTN","ECXTRT",45,0)
 ..S ECXDATE=$$ECXDATE^ECXUTL(ECXMVD1,ECXYM),ECXTIME=$$ECXTIME^ECXUTL(ECXMVD1)
"RTN","ECXTRT",46,0)
 ..S ECXADMDT=$$ECXDATE^ECXUTL(ECXADT,ECXYM),ECXADMTM=$$ECXTIME^ECXUTL(ECXADT),ECXDCDT=""
"RTN","ECXTRT",47,0)
 ..;- Production Division
"RTN","ECXTRT",48,0)
 ..S ECXPDIV=""
"RTN","ECXTRT",49,0)
 ..I ECXLOGIC>2003 S ECXPDIV=$S(WRD="":"",1:$$NPDIV(WRD))
"RTN","ECXTRT",50,0)
 ..;
"RTN","ECXTRT",51,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXTRT",52,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXTRT",53,0)
 ..;
"RTN","ECXTRT",54,0)
 ..;- Chg outpat with movemnt/discharge to inpat (to comply w/existing business rule)
"RTN","ECXTRT",55,0)
 ..I ECXA="O"&(ECXOBS="NO")&(ECXMVD1) S ECXA="I"
"RTN","ECXTRT",56,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXTRT",57,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXTRT",58,0)
 ..;
"RTN","ECXTRT",59,0)
 ..;- Get providers person classes
"RTN","ECXTRT",60,0)
 .. S ECXATLPC=$$PRVCLASS^ECXUTL($E(ECXATTL,2,999),ECXADT)
"RTN","ECXTRT",61,0)
 .. S ECATLNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXATTL,2,999),ECXADT)
"RTN","ECXTRT",62,0)
 .. S:+ECATLNPI'>0 ECATLNPI="" S ECATLNPI=$P(ECATLNPI,U)
"RTN","ECXTRT",63,0)
 .. S ECXPRNPC=$$PRVCLASS^ECXUTL($E(ECXPRVN,2,999),ECXADT)
"RTN","ECXTRT",64,0)
 .. S ECPRVNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXPRVN,2,999),ECXADT)
"RTN","ECXTRT",65,0)
 .. S:+ECPRVNPI'>0 ECPRVNPI="" S ECPRVNPI=$P(ECPRVNPI,U)
"RTN","ECXTRT",66,0)
 .. S ECXATNPC=$$PRVCLASS^ECXUTL($E(ECXATTN,2,999),ECXADT)
"RTN","ECXTRT",67,0)
 .. S ECATTNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXATTN,2,999),ECXADT)
"RTN","ECXTRT",68,0)
 .. S:+ECATTNPI'>0 ECATTNPI="" S ECATTNPI=$P(ECATTNPI,U)
"RTN","ECXTRT",69,0)
 .. S ECXPRLPC=$$PRVCLASS^ECXUTL($E(ECXPRVL,2,999),ECXADT)
"RTN","ECXTRT",70,0)
 .. S ECPRLNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXPRVL,2,999),ECXADT)
"RTN","ECXTRT",71,0)
 .. S:+ECPRLNPI'>0 ECPRLNPI="" S ECPRLNPI=$P(ECPRLNPI,U)
"RTN","ECXTRT",72,0)
 ..;
"RTN","ECXTRT",73,0)
 ..;- If no encounter number, don't file record
"RTN","ECXTRT",74,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADT,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXTRT",75,0)
 ..I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXTRT",76,0)
 ..D:ECXENC'="" FILE^ECXTRT2
"RTN","ECXTRT",77,0)
 ;for nhcu episodes with intervening asih stays, the los calculated here is not accurate,
"RTN","ECXTRT",78,0)
 ;but it never has been; this is best solution within current extract framework;
"RTN","ECXTRT",79,0)
 ;at discharge the los calculated for nhcu episodes will be the los since admission w/o asih los subtracted;
"RTN","ECXTRT",80,0)
 ;
"RTN","ECXTRT",81,0)
 ;loop through discharges to get last treating specialty
"RTN","ECXTRT",82,0)
 S ECD=ECSD1
"RTN","ECXTRT",83,0)
 F  S ECD=$O(^DGPM("ATT3",ECD)),ECDA=0 Q:'ECD  Q:ECD>ECED  F  S ECDA=$O(^DGPM("ATT3",ECD,ECDA)) Q:'ECDA  D  Q:QFLG
"RTN","ECXTRT",84,0)
 .I $D(^DGPM(ECDA,0)) S EC=^(0),ECXDFN=+$P(EC,U,3) D  Q:QFLG
"RTN","ECXTRT",85,0)
 ..S ECXMVD1=$P(EC,U)  ;WRD=$P(EC,U,6)  166  tjl
"RTN","ECXTRT",86,0)
 ..S (ECXDATE,ECXDCDT)=$$ECXDATE^ECXUTL(ECXMVD1,ECXYM),ECXTIME=$$ECXTIME^ECXUTL(ECXMVD1)
"RTN","ECXTRT",87,0)
 ..I ECXDCDT'>0 S ECXDCDT=""
"RTN","ECXTRT",88,0)
 ..S ECMT=$P(EC,U,18),ECXADM=$P(EC,U,14),ECXADT=$P($G(^DGPM(ECXADM,0)),U,1)
"RTN","ECXTRT",89,0)
 ..S (ECXTRTN,ECXSPCN,ECXPRVN,ECXATTN)="" S (ECXLOS,ECXLOSA,ECXLOSP)="" S ECXDSSD=""
"RTN","ECXTRT",90,0)
 ..K LOC D SETLOC(ECXDFN,ECXADM,ECPRO,.LOC)
"RTN","ECXTRT",91,0)
 ..S ECD1=9999999.9999999-ECXMVD1
"RTN","ECXTRT",92,0)
 ..;get ts change just before d/c
"RTN","ECXTRT",93,0)
 ..S ECD2=$O(LOC(ECD1)),ECXMVD2=9999999.9999999-ECD2
"RTN","ECXTRT",94,0)
 ..D FINDLOC(ECD2,.LOC,.ECXSPCL,.ECXPRVL,.ECXATTL,.ECXMOVL,.ECXTRTL)
"RTN","ECXTRT",95,0)
 ..;
"RTN","ECXTRT",96,0)
 ..;- Call sets ECXA (In/Out indicator) using date before discharge
"RTN","ECXTRT",97,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXMVD2,"1;",13)
"RTN","ECXTRT",98,0)
 ..S WRD=$P($G(ECXDWARD),U)  ;166 tjl - Set Production Division Code based on Ward at Discharge
"RTN","ECXTRT",99,0)
 ..S ECXADMDT=$$ECXDATE^ECXUTL(ECXADT,ECXYM),ECXADMTM=$$ECXTIME^ECXUTL(ECXADT)
"RTN","ECXTRT",100,0)
 ..;if closest ts change is admission ts, cant go back any further
"RTN","ECXTRT",101,0)
 ..S TRT=$O(LOC(ECD2,0)),REC=$O(LOC(ECD2,TRT,0))
"RTN","ECXTRT",102,0)
 ..I REC=ECXADM D
"RTN","ECXTRT",103,0)
 ...S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOS=X
"RTN","ECXTRT",104,0)
 ...I ECXPRVL'="" S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOSP=X
"RTN","ECXTRT",105,0)
 ...I ECXATTL'="" S X1=ECXMVD1,X2=ECXMVD2 D ^%DTC S ECXLOSA=X
"RTN","ECXTRT",106,0)
 ..;otherwise, need to find when change to last ts occurred
"RTN","ECXTRT",107,0)
 ..I REC'=ECXADM D
"RTN","ECXTRT",108,0)
 ...D PREVTRT^ECXTRT1(.LOC,ECD1,ECD2,ECXTRTL,.ECXLOS)
"RTN","ECXTRT",109,0)
 ...D PREVPRV^ECXTRT1(.LOC,ECD1,ECXPRVN,ECD2,.ECXPRVL,.ECXLOSP)
"RTN","ECXTRT",110,0)
 ...D PREVATT^ECXTRT1(.LOC,ECD1,ECXATTN,ECD2,.ECXATTL,.ECXLOSA)
"RTN","ECXTRT",111,0)
 ..S:ECXLOS>9999 ECXLOS=9999 S:ECXLOSA>9999 ECXLOSA=9999
"RTN","ECXTRT",112,0)
 ..S:ECXLOSP>9999 ECXLOSP=9999
"RTN","ECXTRT",113,0)
 ..;- Production Division
"RTN","ECXTRT",114,0)
 ..S ECXPDIV=""
"RTN","ECXTRT",115,0)
 ..I ECXLOGIC>2003 S ECXPDIV=$S(WRD="":"",1:$$NPDIV(WRD))
"RTN","ECXTRT",116,0)
 ..;
"RTN","ECXTRT",117,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXTRT",118,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXTRT",119,0)
 ..;
"RTN","ECXTRT",120,0)
 ..;- Chg outpat with movemnt/discharge to inpat (to comply w/existing business rule)
"RTN","ECXTRT",121,0)
 ..I ECXA="O"&(ECXOBS="NO")&(ECXMVD1) S ECXA="I"
"RTN","ECXTRT",122,0)
 ..; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXTRT",123,0)
 ..S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXTRT",124,0)
 ..;
"RTN","ECXTRT",125,0)
 ..;- Get providers person classes
"RTN","ECXTRT",126,0)
 .. S ECXATLPC=$$PRVCLASS^ECXUTL($E(ECXATTL,2,999),ECXADT)
"RTN","ECXTRT",127,0)
 .. S ECATLNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXATTL,2,999),ECXADT)
"RTN","ECXTRT",128,0)
 .. S:+ECATLNPI'>0 ECATLNPI="" S ECATLNPI=$P(ECATLNPI,U)
"RTN","ECXTRT",129,0)
 .. S ECXPRNPC=$$PRVCLASS^ECXUTL($E(ECXPRVN,2,999),ECXADT)
"RTN","ECXTRT",130,0)
 .. S ECPRVNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXPRVN,2,999),ECXADT)
"RTN","ECXTRT",131,0)
 .. S:+ECPRVNPI'>0 ECPRVNPI="" S ECPRVNPI=$P(ECPRVNPI,U)
"RTN","ECXTRT",132,0)
 .. S ECXATNPC=$$PRVCLASS^ECXUTL($E(ECXATTN,2,999),ECXADT)
"RTN","ECXTRT",133,0)
 .. S ECATTNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXATTN,2,999),ECXADT)
"RTN","ECXTRT",134,0)
 .. S:+ECATTNPI'>0 ECATTNPI="" S ECATTNPI=$P(ECATTNPI,U)
"RTN","ECXTRT",135,0)
 .. S ECXPRLPC=$$PRVCLASS^ECXUTL($E(ECXPRVL,2,999),ECXADT)
"RTN","ECXTRT",136,0)
 .. S ECPRLNPI=$$NPI^XUSNPI("Individual_ID",$E(ECXPRVL,2,999),ECXADT)
"RTN","ECXTRT",137,0)
 .. S:+ECPRLNPI'>0 ECPRLNPI="" S ECPRLNPI=$P(ECPRLNPI,U)
"RTN","ECXTRT",138,0)
 ..;
"RTN","ECXTRT",139,0)
 ..;- If no encounter number don't file record
"RTN","ECXTRT",140,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADT,,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXTRT",141,0)
 ..I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXTRT",142,0)
 ..D:ECXENC'="" FILE^ECXTRT2
"RTN","ECXTRT",143,0)
 D KPATDEM^ECXUTL2
"RTN","ECXTRT",144,0)
 Q
"RTN","ECXTRT",145,0)
 ;
"RTN","ECXTRT",146,0)
NPDIV(WRD) ;National Production Division
"RTN","ECXTRT",147,0)
 N DIV
"RTN","ECXTRT",148,0)
 S DIV=$$GET1^DIQ(42,WRD,.015,"I")
"RTN","ECXTRT",149,0)
 Q $S(DIV="":"",1:$$GETDIV^ECXDEPT(DIV))
"RTN","ECXTRT",150,0)
 ;
"RTN","ECXTRT",151,0)
SETLOC(ECXDFN,ECXADM,ECXPRO,ECXLOC) ;setup the local array from the ATS index
"RTN","ECXTRT",152,0)
 ; output
"RTN","ECXTRT",153,0)
 ; ECXLOC = local array (passed by reference)
"RTN","ECXTRT",154,0)
 ;
"RTN","ECXTRT",155,0)
 N SUB3,SUB4,SUB5,SPC,PRV,ATT,MOV
"RTN","ECXTRT",156,0)
 S SUB3=0
"RTN","ECXTRT",157,0)
 F  S SUB3=$O(^DGPM("ATS",ECXDFN,ECXADM,SUB3)) Q:SUB3=""  D
"RTN","ECXTRT",158,0)
 .S (SUB4,SUB5)=0
"RTN","ECXTRT",159,0)
 .S SUB4=$O(^DGPM("ATS",ECXDFN,ECXADM,SUB3,SUB4))
"RTN","ECXTRT",160,0)
 .S SUB5=$O(^DGPM("ATS",ECXDFN,ECXADM,SUB3,SUB4,SUB5))
"RTN","ECXTRT",161,0)
 .S ECXLOC(SUB3,SUB4,SUB5)="",SPC=$G(^TMP($J,"ECXTMP",SUB4))
"RTN","ECXTRT",162,0)
 .S DATA=$G(^DGPM(SUB5,0)),PRV=$P(DATA,U,8),ATT=$P(DATA,U,19)
"RTN","ECXTRT",163,0)
 .S MOV=$P(DATA,U,14)
"RTN","ECXTRT",164,0)
 .S:PRV]"" PRV=ECXPRO_PRV S:ATT]"" ATT=ECXPRO_ATT
"RTN","ECXTRT",165,0)
 .S ECXLOC(SUB3,SUB4,SUB5)=SPC_U_PRV_U_ATT_U_MOV
"RTN","ECXTRT",166,0)
 Q
"RTN","ECXTRT",167,0)
 ;
"RTN","ECXTRT",168,0)
FINDLOC(ECXTSD,ECXLOC,ECXSPC,ECXPRV,ECXATT,ECXMOV,ECXTRT) ;find local array node for current ts movement
"RTN","ECXTRT",169,0)
 ;   input
"RTN","ECXTRT",170,0)
 ;   ECXTSD = inverse date/time for current ts movement; required
"RTN","ECXTRT",171,0)
 ;   ECXLOC = local array; passed by reference; required
"RTN","ECXTRT",172,0)
 ;   output; data from record contained in MOVE
"RTN","ECXTRT",173,0)
 ;   ECXSPC = piece 1 of LOC (passed by reference)
"RTN","ECXTRT",174,0)
 ;   ECXPRV = piece 2 of LOC concatenated to PRO (passed by reference)
"RTN","ECXTRT",175,0)
 ;   ECXATT = piece 3 of LOC concatenated to PRO (passed by reference)
"RTN","ECXTRT",176,0)
 ;   ECXMOV = piece 4 of LOC (passed by reference)
"RTN","ECXTRT",177,0)
 ;   ECXTRT = pointer to file #45.7
"RTN","ECXTRT",178,0)
 ;
"RTN","ECXTRT",179,0)
 N SUB3,SUB4,SUB5,LOC
"RTN","ECXTRT",180,0)
 S (ECXSPC,ECXPRV,ECXATT,ECXMOV)=""
"RTN","ECXTRT",181,0)
 S SUB3=ECXTSD
"RTN","ECXTRT",182,0)
 I $D(ECXLOC(SUB3)) D
"RTN","ECXTRT",183,0)
 .S SUB4=$O(ECXLOC(SUB3,0)),SUB5=$O(ECXLOC(SUB3,SUB4,0))
"RTN","ECXTRT",184,0)
 .S LOC=ECXLOC(SUB3,SUB4,SUB5),ECXTRT=SUB4,ECXSPC=$P(LOC,U)
"RTN","ECXTRT",185,0)
 .S ECXPRV=$P(LOC,U,2),ECXATT=$P(LOC,U,3),ECXMOV=$P(LOC,U,4)
"RTN","ECXTRT",186,0)
 Q
"RTN","ECXTRT",187,0)
 ;
"RTN","ECXTRT",188,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXTRT",189,0)
 S ECHEAD="TRT"
"RTN","ECXTRT",190,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXTRT",191,0)
 Q
"RTN","ECXTRT",192,0)
 ;
"RTN","ECXTRT",193,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXTRT",194,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXTRT",195,0)
 Q
"RTN","ECXUD")
0^14^B98520338^B94404858
"RTN","ECXUD",1,0)
ECXUD ;ALB/JAP,BIR/DMA,PTD-Extract from UNIT DOSE EXTRACT DATA File (#728.904) ;6/29/18  13:35
"RTN","ECXUD",2,0)
 ;;3.0;DSS EXTRACTS;**10,8,24,33,39,46,49,71,84,92,107,105,120,127,144,149,154,161,166,170**;Dec 22, 1997;Build 12
"RTN","ECXUD",3,0)
BEG ;entry point from option
"RTN","ECXUD",4,0)
 I '$O(^ECX(728.904,"A",0)) W !,"There are no unit dose orders to extract",!! R X:5 K X Q
"RTN","ECXUD",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXUD",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXUD",7,0)
 Q
"RTN","ECXUD",8,0)
 ;
"RTN","ECXUD",9,0)
START ;start package specific extract
"RTN","ECXUD",10,0)
 N RERUN,ECXLDT ;149
"RTN","ECXUD",11,0)
 S RERUN=0 ;149
"RTN","ECXUD",12,0)
 S ECXLDT=+$P($G(^ECX(728,1,ECNODE)),U,ECPIECE) ;149 Get last run date
"RTN","ECXUD",13,0)
 I ECXLDT'<ECSD S RERUN=1 ;149
"RTN","ECXUD",14,0)
 S QFLG=0
"RTN","ECXUD",15,0)
 S ECED=ECED+.3
"RTN","ECXUD",16,0)
 F ECD=ECSD1:0 S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:QFLG  D
"RTN","ECXUD",17,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:QFLG  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXUD",18,0)
 ..S DATA=^ECX(728.904,ECXJ,0),^(1)=$P(EC23,U,2),^ECX(728.904,"AC",$P(EC23,U,2),ECXJ)="" D STUFF
"RTN","ECXUD",19,0)
 K ^TMP($J,"ECXP")
"RTN","ECXUD",20,0)
 I 'RERUN D CLEAN(0,$$FMADD^XLFDT(ECSD,-180)) ;149 Remove old log entries
"RTN","ECXUD",21,0)
 Q
"RTN","ECXUD",22,0)
 ;
"RTN","ECXUD",23,0)
STUFF ;get data
"RTN","ECXUD",24,0)
 N X,W,OK,P1,P3,PSTAT,PT,ECXPHA,ON,ECDRG,ECXESC,ECXECL,ECXCLST,ECPROIEN,ECXUDDT,ECXUDTM,ECXNEW ;144,149
"RTN","ECXUD",25,0)
 N ECXSTANO,ECXASIH  ;166,170
"RTN","ECXUD",26,0)
 S (ECXESC,ECXECL,ECXCLST)="" ;144
"RTN","ECXUD",27,0)
 S ECXDFN=$P(DATA,U,2),ECDRG=$P(DATA,U,4)
"RTN","ECXUD",28,0)
 ;
"RTN","ECXUD",29,0)
 ;get patient specific data
"RTN","ECXUD",30,0)
 S ECXERR="" D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXUD",31,0)
 Q:ECXERR
"RTN","ECXUD",32,0)
 ;
"RTN","ECXUD",33,0)
 S ECXPRO=$P(DATA,U,7),ECPROIEN=+ECXPRO,ECXPRO=$E($P(ECXPRO,";",2))_$P(ECXPRO,";")
"RTN","ECXUD",34,0)
 S ECXPRNPI=$$NPI^XUSNPI("Individual_ID",ECPROIEN,ECD)
"RTN","ECXUD",35,0)
 S:+ECXPRNPI'>0 ECXPRNPI="" S ECXPRNPI=$P(ECXPRNPI,U)
"RTN","ECXUD",36,0)
 S W=$P(DATA,U,6)
"RTN","ECXUD",37,0)
 S ECXDIV=$P($G(^DIC(42,+W,0)),U,11),ECXW=$S(ECXADM="":"",1:$P($G(^DIC(42,+W,44)),U)) ;154 Ward gets set to null if this is an order for an outpatient
"RTN","ECXUD",38,0)
 S ECXSTANO=$$GETDIV^ECXDEPT(ECXDIV) ;166 tjl - Get Patient Division based on Facility
"RTN","ECXUD",39,0)
 S ECXUDDT=$$ECXDATE^ECXUTL($P(DATA,U,3),ECXYM)
"RTN","ECXUD",40,0)
 S ECXUDTM=$E($P($P(DATA,U,3),".",2)_"000000",1,6)
"RTN","ECXUD",41,0)
 S ECXQTY=$P(DATA,U,5),ECXCOST=$P(DATA,U,8),ON=$P(DATA,U,10)
"RTN","ECXUD",42,0)
 ;call pharmacy drug file (#50) api via ecxutl5
"RTN","ECXUD",43,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXUD",44,0)
 S ECCAT=$P(ECXPHA,U,2),ECINV=$P(ECXPHA,U,4)
"RTN","ECXUD",45,0)
 I ECXLOGIC<2014 D  ;New way to calculate cost dea spl hndlg **144
"RTN","ECXUD",46,0)
 .S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXUD",47,0)
 I ECXLOGIC>2013 D
"RTN","ECXUD",48,0)
 .S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"")
"RTN","ECXUD",49,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXUD",50,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXUD",51,0)
 I ECNDC["LCL" S ECNDC="" ;170 Reset NDC to null if it's missing from file 50
"RTN","ECXUD",52,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6),X="PSNAPIS"
"RTN","ECXUD",53,0)
 X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXUD",54,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXUD",55,0)
 ; - Department and National Production Division
"RTN","ECXUD",56,0)
 ;- Use of DSS Department postponed [S ECXDSSD=$$UDP^ECXDEPT(ECXDIV)]
"RTN","ECXUD",57,0)
 S ECXDSSD=""
"RTN","ECXUD",58,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXUD",59,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXUD",60,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXUD",61,0)
 ;- Ordering Date, Ordering Stop Code
"RTN","ECXUD",62,0)
 S ECXORDDT=$TR($$FMTE^XLFDT($P(DATA,U,9),"7DF")," /","0")
"RTN","ECXUD",63,0)
 S ECXORDST="" I ECXA="O" D
"RTN","ECXUD",64,0)
 .;Get ordering stop code based on FY 2006 logic for outpatient
"RTN","ECXUD",65,0)
 .S ECXORDST=$$DOUDO^ECXUTL5(ECXDFN,ON)
"RTN","ECXUD",66,0)
 ;Ordering Provider Person Class
"RTN","ECXUD",67,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXPRO,2,999),$P(DATA,U,9))
"RTN","ECXUD",68,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)="" ;144 BCMA are place holders now
"RTN","ECXUD",69,0)
 ;- Set national patient record flag if exist
"RTN","ECXUD",70,0)
 D NPRF^ECXUTL5
"RTN","ECXUD",71,0)
 ;149 Determine if script required pharmacist workload
"RTN","ECXUD",72,0)
 S ECXNEW=$$NEW ;149
"RTN","ECXUD",73,0)
 ;- If no encounter number don't file record
"RTN","ECXUD",74,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,$P(DATA,U,3),ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXUD",75,0)
 I $G(ECXASIH) S ECXA="A" ;170
"RTN","ECXUD",76,0)
 D:ECXENC'="" FILE
"RTN","ECXUD",77,0)
 Q
"RTN","ECXUD",78,0)
 ;
"RTN","ECXUD",79,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get demographics from patient file
"RTN","ECXUD",80,0)
 ;init variables
"RTN","ECXUD",81,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXUD",82,0)
 ;get patient data if saved
"RTN","ECXUD",83,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXUD",84,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2)
"RTN","ECXUD",85,0)
 .S ECXMPI=$P(PT,U,3),ECXDOB=$P(PT,U,4)
"RTN","ECXUD",86,0)
 .S ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6)
"RTN","ECXUD",87,0)
 .S ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXUD",88,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12)
"RTN","ECXUD",89,0)
 .S ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXUD",90,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18)
"RTN","ECXUD",91,0)
 .S ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXUD",92,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24)
"RTN","ECXUD",93,0)
 .S ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXUD",94,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4),ECXCNTRY=$P(PT1,U,5)
"RTN","ECXUD",95,0)
 .S ECXSHADI=$P(PT1,U,6),ECXPATCAT=$P(PT1,U,7),ECXCLST=$P(PT1,U,8) ;144
"RTN","ECXUD",96,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",97,0)
 ;set patient data
"RTN","ECXUD",98,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXUD",99,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXUD",100,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXUD",101,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXUD",102,0)
 .S ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXUD",103,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXUD",104,0)
 .S ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET"),ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXUD",105,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT")
"RTN","ECXUD",106,0)
 .S ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXUD",107,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL")
"RTN","ECXUD",108,0)
 .S ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXUD",109,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXUD",110,0)
 .S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXUD",111,0)
 .S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXUD",112,0)
 .S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXUD",113,0)
 .;OEF/OIF data
"RTN","ECXUD",114,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXUD",115,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXUD",116,0)
 .;get CNHU status
"RTN","ECXUD",117,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXUD",118,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXUD",119,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",120,0)
 .; - Head and Neck Cancer Indicator
"RTN","ECXUD",121,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXUD",122,0)
 .; - Proj. 112/SHAD Indicator
"RTN","ECXUD",123,0)
 .S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)
"RTN","ECXUD",124,0)
 . ; ******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXUD",125,0)
 .S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXUD",126,0)
 .; - Race and Ethnicity
"RTN","ECXUD",127,0)
 .S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXUD",128,0)
 .S ECXRC1=ECXPAT("RACE1")
"RTN","ECXUD",129,0)
 .;get emergency response indicator (FEMA)
"RTN","ECXUD",130,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXUD",131,0)
 .S ECXEST=ECXPAT("EC STAT")
"RTN","ECXUD",132,0)
 .;save for later
"RTN","ECXUD",133,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXUD",134,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXUD",135,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT_U_ECXCNTRY_U_ECXSHADI_U_ECXPATCAT_U_ECXCLST_U_ECXSVCI_U_ECXSVCL ;149
"RTN","ECXUD",136,0)
 ;
"RTN","ECXUD",137,0)
 ;get inpatient data
"RTN","ECXUD",138,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXUD",139,0)
 S ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),ECXDOM=$P(X,U,10),ECXASIH=$P(X,U,14) ;170
"RTN","ECXUD",140,0)
 ;
"RTN","ECXUD",141,0)
 ;get primary care data
"RTN","ECXUD",142,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXUD",143,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXUD",144,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXUD",145,0)
 Q
"RTN","ECXUD",146,0)
 ;
"RTN","ECXUD",147,0)
FILE ;file record
"RTN","ECXUD",148,0)
 ;node0
"RTN","ECXUD",149,0)
 ;facility^dfn^ssn^name^in/out^day^drug category^quantity^ward^
"RTN","ECXUD",150,0)
 ;provider^cost^mov #^treat spec^ndc^new feeder key^investigational^
"RTN","ECXUD",151,0)
 ;udp time^adm date^adm time
"RTN","ECXUD",152,0)
 ;node1
"RTN","ECXUD",153,0)
 ;mpi^placeholder^provider npi^dom^observ pat ind^encounter num^
"RTN","ECXUD",154,0)
 ;prod div code^means tst^elig^dob^sex^state^county^zip+4^vet^
"RTN","ECXUD",155,0)
 ;period of svc^pow stat^pow loc^ir status^ao status^ao loc^
"RTN","ECXUD",156,0)
 ;purple heart ind.^mst status^cnh/sh status^enrollment loc^
"RTN","ECXUD",157,0)
 ;enrollment cat^enrollment status^enrollment priority^Placehold pc team^
"RTN","ECXUD",158,0)
 ;Placehold pc provider^pc provider npi^Placehold pc provider p.class^Placehold assoc. pc provider^
"RTN","ECXUD",159,0)
 ;assoc. pc provider npi^Placehold assoc. pc provider p.class
"RTN","ECXUD",160,0)
 ;node2
"RTN","ECXUD",161,0)
 ;ordering date^ordering stop code^head & neck cancer ind.^Placehold ethnicity^
"RTN","ECXUD",162,0)
 ;Placehold race1^bcma drug dispensed^bcma dose given^bcma unit of
"RTN","ECXUD",163,0)
 ;administration^bcma icu flag^ordering provider person class^
"RTN","ECXUD",164,0)
 ;^enrollment priority ECXPRIOR_enrollment subgroup
"RTN","ECXUD",165,0)
 ;ECXSBGRP^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet
"RTN","ECXUD",166,0)
 ;elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible
"RTN","ECXUD",167,0)
 ;ECXCVENC^national patient record flag ECXNPRFI^emerg resp indic(FEMA) 
"RTN","ECXUD",168,0)
 ;ECXERI^environ contamin ECXEST^OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^Placehold associate pc provider npi ECASNPI^Placehold primary care provider npi ECPTNPI^provider npi ECXPRNPI
"RTN","ECXUD",169,0)
 ;^country ECXCNTRY^PATCAT^Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXUD",170,0)
 ;Combat Service Indicator (ECXSVCI) ^ Combat Service Location (ECXSVCL) ^ New Script (ECXNEW)
"RTN","ECXUD",171,0)
 ;^Patient Division (ECXSTANO)
"RTN","ECXUD",172,0)
 ;
"RTN","ECXUD",173,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXUD",174,0)
 N ECXDATA
"RTN","ECXUD",175,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXUD",176,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXUD",177,0)
 ;done
"RTN","ECXUD",178,0)
 N DA,DIK
"RTN","ECXUD",179,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXUD",180,0)
 I ECXLOGIC>2018 S (ECXETH,ECXRC1,ECPTTM,ECPTPR,ECCLAS,ECASPR,ECCLAS2,ECASNPI,ECPTNPI)="" ;170 Fields will now be null
"RTN","ECXUD",181,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXUD",182,0)
 S ECODE=ECODE_ECXUDDT_U_ECCAT_U_ECXQTY_U_ECXW_U_ECXPRO_U_ECXCOST_U
"RTN","ECXUD",183,0)
 S ECODE=ECODE_ECXMN_U_ECXTS_U_ECNDC_U_ECNFC_U_ECINV_U_ECXUDTM_U
"RTN","ECXUD",184,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U
"RTN","ECXUD",185,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECXADM)_U
"RTN","ECXUD",186,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXUD",187,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U_ECXSEX_U
"RTN","ECXUD",188,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U
"RTN","ECXUD",189,0)
 S ECODE1=ECODE1_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXUD",190,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXCNHU_U_ECXENRL_U
"RTN","ECXUD",191,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,ECXLOGIC>2010:ECXSHADI,1:"")_U_ECPTTM_U_ECPTPR_U
"RTN","ECXUD",192,0)
 S ECODE1=ECODE1_U_ECCLAS_U_ECASPR_U_U_ECCLAS2_U
"RTN","ECXUD",193,0)
 S ECODE2=ECXORDDT_U_ECXORDST_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXUD",194,0)
 I ECXLOGIC>2003 S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXUD",195,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXUD",196,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXEST
"RTN","ECXUD",197,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECASNPI_U_ECPTNPI_U_ECXPRNPI
"RTN","ECXUD",198,0)
 I ECXLOGIC>2009 S ECODE2=ECODE2_U_ECXCNTRY
"RTN","ECXUD",199,0)
 I ECXLOGIC>2010 S ECODE2=ECODE2_U_ECXPATCAT ; 127 PATCAT ADDED
"RTN","ECXUD",200,0)
 I ECXLOGIC>2013 S ECODE2=ECODE2_U_ECXESC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXUD",201,0)
 I ECXLOGIC>2014 S ECODE2=ECODE2_U_ECXSVCI_U_ECXSVCL_U_ECXNEW ;149
"RTN","ECXUD",202,0)
 I ECXLOGIC>2017 S ECODE2=ECODE2_U_ECXSTANO ;166 tjl
"RTN","ECXUD",203,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXUD",204,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXUD",205,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXUD",206,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXUD",207,0)
 Q
"RTN","ECXUD",208,0)
 ;
"RTN","ECXUD",209,0)
NEW() ;149 Function added to determine if script had pharmacist involvement
"RTN","ECXUD",210,0)
 N ALIEN,ADATE,SCRIPT,VDATE,DONE,IENS
"RTN","ECXUD",211,0)
 S SCRIPT="N",VDATE="",DONE=0
"RTN","ECXUD",212,0)
 S ALIEN=0 F  S ALIEN=$O(^PS(55,ECXDFN,5,ON,9,ALIEN)) Q:'+ALIEN!(DONE)  S IENS=ALIEN_","_ON_","_ECXDFN_"," D
"RTN","ECXUD",213,0)
 .S ADATE=$$GET1^DIQ(55.09,IENS,".01","I")
"RTN","ECXUD",214,0)
 .I $P(ADATE,".")>ECD S DONE=1 Q  ;If date of activity is after dispense date then stop
"RTN","ECXUD",215,0)
 .I "^VP^VPR^"[("^"_$$GET1^DIQ(55.09,IENS,"2:1")_"^") S VDATE=ADATE ;if activity status is verified by pharmacist or verified by pharmacist renewal
"RTN","ECXUD",216,0)
 I VDATE'="" D
"RTN","ECXUD",217,0)
 .I '$D(^XTMP("ECXSCRIPT",VDATE,ECXDFN,ON))!($G(^XTMP("ECXSCRIPT",VDATE,ECXDFN,ON))=ECXJ) S SCRIPT="Y"
"RTN","ECXUD",218,0)
 .I '$D(^XTMP("ECXSCRIPT",VDATE,ECXDFN,ON)) S ^XTMP("ECXSCRIPT",VDATE,ECXDFN,ON)=ECXJ ;Store first instance of med given
"RTN","ECXUD",219,0)
 Q SCRIPT
"RTN","ECXUD",220,0)
 ;
"RTN","ECXUD",221,0)
CLEAN(START,END) ;149 Section added to delete old log entries
"RTN","ECXUD",222,0)
 N DATE,PAT,ON
"RTN","ECXUD",223,0)
 S DATE=START F  S DATE=$O(^XTMP("ECXSCRIPT",DATE)) Q:'+DATE!(DATE>END)  S PAT=0 F  S PAT=$O(^XTMP("ECXSCRIPT",DATE,PAT)) Q:'+PAT  S ON=0 F  S ON=$O(^XTMP("ECXSCRIPT",DATE,PAT,ON)) Q:'+ON  K ^XTMP("ECXSCRIPT",DATE,PAT,ON)
"RTN","ECXUD",224,0)
 S ^XTMP("ECXSCRIPT",0)=$$FMADD^XLFDT($$DT^XLFDT,365)_"^"_$$DT^XLFDT_"^"_"Log of pharmacy orders that have already been counted"
"RTN","ECXUD",225,0)
 Q
"RTN","ECXUD",226,0)
 ;
"RTN","ECXUD",227,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXUD",228,0)
 S ECHEAD="UDP"
"RTN","ECXUD",229,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXUD",230,0)
 Q
"RTN","ECXUD",231,0)
 ;
"RTN","ECXUD",232,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXUD",233,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXUD",234,0)
 Q
"RTN","ECXUTL2")
0^37^B115324806^B78280589
"RTN","ECXUTL2",1,0)
ECXUTL2 ;ALB/JAP - Utilities for DSS Extracts (cont.) ;6/29/18  14:07
"RTN","ECXUTL2",2,0)
 ;;3.0;DSS EXTRACTS;**8,13,23,24,33,35,39,46,71,84,92,105,112,120,127,144,149,154,166,170**;Dec 22, 1997;Build 12
"RTN","ECXUTL2",3,0)
 ;
"RTN","ECXUTL2",4,0)
ECXDEF(ECXHEAD,ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER) ;variables specific to extract from file #727.1
"RTN","ECXUTL2",5,0)
 ;   input 
"RTN","ECXUTL2",6,0)
 ;   ECXHEAD = extract header code
"RTN","ECXUTL2",7,0)
 ;   all other formal list parameters passed by reference
"RTN","ECXUTL2",8,0)
 ;   output
"RTN","ECXUTL2",9,0)
 ;   ECXPACK = type field (#7)
"RTN","ECXUTL2",10,0)
 ;   ECXGRP  = group field (#9)
"RTN","ECXUTL2",11,0)
 ;   ECXFILE = file number field (#1)
"RTN","ECXUTL2",12,0)
 ;   ECXRTN  = routine field (#4)
"RTN","ECXUTL2",13,0)
 ;   ECXPIECE= running piece field (#11)
"RTN","ECXUTL2",14,0)
 ;   ECXVER  = dss version
"RTN","ECXUTL2",15,0)
 N ECXIEN,ECXARR,DIC,DA,DR,DIQ
"RTN","ECXUTL2",16,0)
 S (ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER)="",ECXIEN=0
"RTN","ECXUTL2",17,0)
 S ECXIEN=+$O(^ECX(727.1,"C",ECXHEAD,ECXIEN))
"RTN","ECXUTL2",18,0)
 I ECXIEN=0 D  Q
"RTN","ECXUTL2",19,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",20,0)
 .D MES^XPDUTL(" It appears that you may have a problem with File #727.1 --")
"RTN","ECXUTL2",21,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",22,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is not properly defined.")
"RTN","ECXUTL2",23,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",24,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",25,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",26,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",27,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",28,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",29,0)
 .W !!
"RTN","ECXUTL2",30,0)
 S DIC="^ECX(727.1,",DA=ECXIEN,DR=".01;1;4;7;9;11;13",DIQ="ECXARR"
"RTN","ECXUTL2",31,0)
 D EN^DIQ1
"RTN","ECXUTL2",32,0)
 S ECXPACK=ECXARR(727.1,ECXIEN,7)
"RTN","ECXUTL2",33,0)
 ;if this is an inactive extract type, skip it unless building for audit 
"RTN","ECXUTL2",34,0)
 I ECXARR(727.1,ECXIEN,13)="YES" I '+$G(ECXAUDIT) D  Q  ;154, allow extract to run if for audit purposes (ECXAUDIT=1 if coming from audit report)
"RTN","ECXUTL2",35,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",36,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is no longer active/valid.")
"RTN","ECXUTL2",37,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",38,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",39,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",40,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",41,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",42,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",43,0)
 .W !!
"RTN","ECXUTL2",44,0)
 S ECXGRP=ECXARR(727.1,ECXIEN,9)
"RTN","ECXUTL2",45,0)
 S ECXFILE=ECXARR(727.1,ECXIEN,1)
"RTN","ECXUTL2",46,0)
 S ECXRTN="START^"_ECXARR(727.1,ECXIEN,4)
"RTN","ECXUTL2",47,0)
 S ECXPIECE=ECXARR(727.1,ECXIEN,11)
"RTN","ECXUTL2",48,0)
 ;version of dss/tsi in Austin as specified by btso
"RTN","ECXUTL2",49,0)
 S ECXVER=7
"RTN","ECXUTL2",50,0)
 Q
"RTN","ECXUTL2",51,0)
PATDEM(DFN,DT1,PAR,FLG) ; determine patient information
"RTN","ECXUTL2",52,0)
 ;  DFN   =
"RTN","ECXUTL2",53,0)
 ;  DT    =
"RTN","ECXUTL2",54,0)
 ;  PAR   =
"RTN","ECXUTL2",55,0)
 ;  FLG   =
"RTN","ECXUTL2",56,0)
 N DT2,PAT,OK,X
"RTN","ECXUTL2",57,0)
 D KPATDEM
"RTN","ECXUTL2",58,0)
 S FLG=$G(FLG),PAR=$S($D(PAR):PAR,1:"1;2;3;4;5;"),DT2=$P(DT1,".")
"RTN","ECXUTL2",59,0)
 Q:'$$PAT^ECXUTL3(DFN,DT2,PAR,.PAT) 0
"RTN","ECXUTL2",60,0)
 S ECXMPI=PAT("MPI")
"RTN","ECXUTL2",61,0)
 I PAR["1" D
"RTN","ECXUTL2",62,0)
 .S ECXSSN=PAT("SSN"),ECXPNM=PAT("NAME"),ECXDOB=PAT("DOB")
"RTN","ECXUTL2",63,0)
 .S ECXSEX=PAT("SEX"),ECXREL=PAT("RELIGION"),ECXRACE=PAT("RACE")
"RTN","ECXUTL2",64,0)
 .S ECXMAR=PAT("MARITAL")
"RTN","ECXUTL2",65,0)
 .S ECXETH=PAT("ETHNIC"),ECXRC1=PAT("RACE1")
"RTN","ECXUTL2",66,0)
 I PAR["2" D
"RTN","ECXUTL2",67,0)
 .S ECXCNTY=PAT("COUNTY"),ECXSTATE=PAT("STATE"),ECXZIP=PAT("ZIP")
"RTN","ECXUTL2",68,0)
 .S ECXCNTRY=PAT("COUNTRY")
"RTN","ECXUTL2",69,0)
 I PAR["3" D
"RTN","ECXUTL2",70,0)
 .S ECXPOS=PAT("POS"),ECSC=PAT("SC STAT"),ECXSVC=PAT("SC%")
"RTN","ECXUTL2",71,0)
 .S ECXVET=PAT("VET"),ECXMEAN=PAT("MEANS"),ECXELIG=PAT("ELIG")
"RTN","ECXUTL2",72,0)
 .S ECXENRL=PAT("ENROLL LOC")
"RTN","ECXUTL2",73,0)
 .S ECXERI=PAT("ERI")
"RTN","ECXUTL2",74,0)
 I PAR["4" S ECXEMP=PAT("EMPLOY")
"RTN","ECXUTL2",75,0)
 I PAR["5" D
"RTN","ECXUTL2",76,0)
 .S ECXVIET=PAT("VIETNAM"),ECXAST=PAT("AO STAT"),ECXRST=PAT("IR STAT")
"RTN","ECXUTL2",77,0)
 .S ECXEST=PAT("EC STAT"),ECXPST=PAT("POW STAT"),ECXPLOC=PAT("POW LOC")
"RTN","ECXUTL2",78,0)
 .S ECXPHI=PAT("PHI"),ECXMST=PAT("MST STAT"),ECXAOL=PAT("AOL")
"RTN","ECXUTL2",79,0)
 .S ECXOEF=PAT("ECXOEF"),ECXOEFDT=PAT("ECXOEFDT")
"RTN","ECXUTL2",80,0)
 .S ECXCLST=PAT("CL STAT") ;144 Camp Lejeune Status
"RTN","ECXUTL2",81,0)
 .S ECXSVCI=PAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXUTL2",82,0)
 .S ECXSVCL=PAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXUTL2",83,0)
 I PAR["6" D
"RTN","ECXUTL2",84,0)
 .S (ECXPAYOR,ECXSAI)="" D VISN19(DFN,.ECXPAYOR,.ECXSAI)
"RTN","ECXUTL2",85,0)
 I FLG'[3 D
"RTN","ECXUTL2",86,0)
 .S X=$$PRIMARY(DFN,DT2),ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXUTL2",87,0)
 .S ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6)
"RTN","ECXUTL2",88,0)
 .S ECASNPI=$P(X,U,7)
"RTN","ECXUTL2",89,0)
 I FLG'[2 D
"RTN","ECXUTL2",90,0)
 .S ECXINP=$$INP^ECXUTL2(DFN,DT1),ECXA=$P(ECXINP,U),ECXMN=$P(ECXINP,U,2)
"RTN","ECXUTL2",91,0)
 .S ECXTS=$P(ECXINP,U,3),ECXDOM=$P(ECXINP,U,10),ECXADMDT=$P(ECXINP,U,4)
"RTN","ECXUTL2",92,0)
 .S WRD=$P(ECXINP,U,5)         ;166  tjl - Get WARD (IEN) value
"RTN","ECXUTL2",93,0)
 .S ECXDWARD=$P(ECXINP,U,13)   ;166  tjl - Get Ward at Discharge IEN
"RTN","ECXUTL2",94,0)
 .S ECXASIH=$P(ECXINP,U,14) ;170 Sets ASIH value
"RTN","ECXUTL2",95,0)
 I FLG'[1 S X=$$ENROLLM(DFN)
"RTN","ECXUTL2",96,0)
 Q 1
"RTN","ECXUTL2",97,0)
 ;
"RTN","ECXUTL2",98,0)
KPATDEM ;
"RTN","ECXUTL2",99,0)
 K ECXADMDT,ECAO,ECASNPI,ECASPR,ECCLAS,ECCLAS2,ECENV,ECPTNPI,ECPTPR,ECPTTM
"RTN","ECXUTL2",100,0)
 K ECRE,ECSC,ECXA,ECXAST,ECXCAT,ECXCNTY,ECXEST,ECXENRL,ECXDOB
"RTN","ECXUTL2",101,0)
 K ECXDOM,ECXELIG,ECXINP,ECXMPI,ECXMN,ECXNM,ECXPHI,ECXPLOC,ECXMEAN,ECXMST
"RTN","ECXUTL2",102,0)
 K ECXPAYOR,ECXPNM,ECXPOS,ECXPRIOR,ECXPST,ECXRACE,ECXREL,ECXRST,ECXSAI
"RTN","ECXUTL2",103,0)
 K ECXSEX,ECXSSN,ECXSTAT,ECXSTATE,ECXSVC,ECXTS,ECXVIET,ECXZIP,VA,VAERR
"RTN","ECXUTL2",104,0)
 K ECXSBGRP,ECXSVCI,ECXSVCL ;149
"RTN","ECXUTL2",105,0)
 Q
"RTN","ECXUTL2",106,0)
ENROLLM(DFN,RNDT) ;determines enrollment status, category, priority
"RTN","ECXUTL2",107,0)
 ;and user enrollee status
"RTN","ECXUTL2",108,0)
 ; input
"RTN","ECXUTL2",109,0)
 ;    DFN      = IEN from Patient file (Required)
"RTN","ECXUTL2",110,0)
 ;    RNDT     = Extract Run Date
"RTN","ECXUTL2",111,0)
 ; output
"RTN","ECXUTL2",112,0)
 ;    ECXSTAT  = Enrollment status
"RTN","ECXUTL2",113,0)
 ;    ECXPRIOR = Enrollment priority
"RTN","ECXUTL2",114,0)
 ;    ECXCAT   = Enrollment priority
"RTN","ECXUTL2",115,0)
 ;    ECXSBGRP = Enrollment subgroup
"RTN","ECXUTL2",116,0)
 ;    ECXUESTA = User enrollee
"RTN","ECXUTL2",117,0)
 ;    return value 0 if no data found, 1 if data found
"RTN","ECXUTL2",118,0)
 N CAT,PRIOR,STAT,X,X1,X2,X3,ENRIEN,ENR,FL,SBGRP
"RTN","ECXUTL2",119,0)
 S (ECXCAT,ECXPRIOR,ECXSTAT,ECXSBGRP,ECXEUSTA)=""
"RTN","ECXUTL2",120,0)
 I $G(DFN)="" Q 0
"RTN","ECXUTL2",121,0)
 ;User enrollee status, if current or future date set to 'U'
"RTN","ECXUTL2",122,0)
 ;DBIA #3989
"RTN","ECXUTL2",123,0)
 S ECXUESTA=$S($$UESTAT^EASUER(DFN):"U",1:"")
"RTN","ECXUTL2",124,0)
 ;Patient type
"RTN","ECXUTL2",125,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(DFN)
"RTN","ECXUTL2",126,0)
 ;Combat Veteran Status DBIA #4156
"RTN","ECXUTL2",127,0)
 S X3=$$CVEDT^ECXUTL5(DFN,$S($G(ECD):ECD,$G(ECXDATE):ECXDATE,1:DT))
"RTN","ECXUTL2",128,0)
 ;enrollment priority DBIA
"RTN","ECXUTL2",129,0)
 S STAT=$$STATUS^DGENA(DFN),PRIOR=$$PRIORITY^DGENA(DFN)
"RTN","ECXUTL2",130,0)
 S CAT=$$CATEGORY^DGENA4(DFN,STAT),SBGRP=$$ENRSBGRP^DGENA4(DFN)
"RTN","ECXUTL2",131,0)
 ;find current enrollment when status=2 or 19
"RTN","ECXUTL2",132,0)
 I "^2^19^"[("^"_STAT_"^") S ECXSTAT=STAT,ECXPRIOR=PRIOR,ECXCAT=CAT,ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"") Q 1
"RTN","ECXUTL2",133,0)
 ;find previous enrollment
"RTN","ECXUTL2",134,0)
 S ENRIEN=$$FINDCUR^DGENA(DFN) I ENRIEN="" Q 0
"RTN","ECXUTL2",135,0)
 I $G(RNDT)="" D NOW^%DTC S RNDT=X
"RTN","ECXUTL2",136,0)
 S RNDT=($E(RNDT,1,3)-1)_$E(RNDT,4,7),FL=0
"RTN","ECXUTL2",137,0)
 F  S ENRIEN=$$FINDPRI^DGENA(ENRIEN) Q:'ENRIEN  D  Q:FL
"RTN","ECXUTL2",138,0)
 . S ENR=$$GET^DGENA(ENRIEN,.ENR)
"RTN","ECXUTL2",139,0)
 . I "^2^19^"[("^"_$G(ENR("STATUS"))_"^"),$G(ENR("EFFDATE"))>RNDT D
"RTN","ECXUTL2",140,0)
 . . S ECXSTAT=$G(ENR("STATUS")),ECXPRIOR=PRIOR,FL=1
"RTN","ECXUTL2",141,0)
 . . S ECXCAT=$$CATEGORY^DGENA4(DFN,ECXSTAT)
"RTN","ECXUTL2",142,0)
 . . S ECXSBGRP=$$ENRSBGRP^DGENA4(DFN)
"RTN","ECXUTL2",143,0)
 . . S ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"")
"RTN","ECXUTL2",144,0)
 I FL Q 1
"RTN","ECXUTL2",145,0)
 ;no enrollment status found =2 or 19
"RTN","ECXUTL2",146,0)
 S ECXSTAT=STAT,ECXPRIOR=PRIOR,ECXCAT=CAT,ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"")
"RTN","ECXUTL2",147,0)
 Q 1
"RTN","ECXUTL2",148,0)
PRIMARY(ECXDFN,ECXDATE,ECXPREFX) ;determine patient's pc team and pc provider
"RTN","ECXUTL2",149,0)
 ; input
"RTN","ECXUTL2",150,0)
 ; ECXDFN    = file #2 ien (required)
"RTN","ECXUTL2",151,0)
 ; ECXDATE   = date of interest (required)
"RTN","ECXUTL2",152,0)
 ; ECXPREFX  = prefix for provider data (optional)
"RTN","ECXUTL2",153,0)
 ;             defaults to "2" if not specified otherwise
"RTN","ECXUTL2",154,0)
 ; output
"RTN","ECXUTL2",155,0)
 ; ECXPRIME  = pc team ien^prefix_pc provider ien^pc provider person
"RTN","ECXUTL2",156,0)
 ;class^pc provider npi^prefix_assoc pc provider ien^assoc pc provider
"RTN","ECXUTL2",157,0)
 ;person class^assoc pc provider npi
"RTN","ECXUTL2",158,0)
 N ECPTTM,ECPTPR,ECCLAS,ECPRIME,ECASPR,ECCLAS2
"RTN","ECXUTL2",159,0)
 S:'$D(ECXPREFX) ECXPREFX=2 S:(+ECXPREFX=0) ECXPREFX=2
"RTN","ECXUTL2",160,0)
 ;get pc team data
"RTN","ECXUTL2",161,0)
 S ECPTTM=+$$OUTPTTM^SDUTL3(ECXDFN,ECXDATE) S:ECPTTM=0 ECPTTM=""
"RTN","ECXUTL2",162,0)
 ;get primary pc provider data
"RTN","ECXUTL2",163,0)
 S ECPTPR=+$$OUTPTPR^SDUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",164,0)
 S ECCLAS="" I ECPTPR>0 S ECCLAS=$$PRVCLASS^ECXUTL(ECPTPR,ECXDATE)
"RTN","ECXUTL2",165,0)
 N ECXUSRTN S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECPTPR,ECXDATE)
"RTN","ECXUTL2",166,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECPTNPI=$P(ECXUSRTN,U)
"RTN","ECXUTL2",167,0)
 S:ECPTPR=0 ECPTPR="" S:ECPTPR]"" ECPTPR=ECXPREFX_ECPTPR
"RTN","ECXUTL2",168,0)
 ;assoc pc provider call ok if routine scapmca from patch177 is present
"RTN","ECXUTL2",169,0)
 S ECASPR=""
"RTN","ECXUTL2",170,0)
 S X="SCAPMCA" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL2",171,0)
 .S ECASPR=+$$OUTPTAP^SDUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",172,0)
 S ECCLAS2="" I ECASPR>0 S ECCLAS2=$$PRVCLASS^ECXUTL(ECASPR,ECXDATE)
"RTN","ECXUTL2",173,0)
 N ECXUSRTN S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECASPR,ECXDATE)
"RTN","ECXUTL2",174,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECASNPI=$P(ECXUSRTN,U)
"RTN","ECXUTL2",175,0)
 S:ECASPR=0 ECASPR="" S:ECASPR]"" ECASPR=ECXPREFX_ECASPR
"RTN","ECXUTL2",176,0)
 ;assemble
"RTN","ECXUTL2",177,0)
 S ECXPRIME=ECPTTM_U_ECPTPR_U_ECCLAS_U_ECPTNPI_U_ECASPR_U_ECCLAS2_U_ECASNPI
"RTN","ECXUTL2",178,0)
 Q ECXPRIME
"RTN","ECXUTL2",179,0)
INP(ECXDFN,ECXDATE) ; check for inpatient status
"RTN","ECXUTL2",180,0)
 ; input
"RTN","ECXUTL2",181,0)
 ; ECXDFN  = file #2 ien (required)
"RTN","ECXUTL2",182,0)
 ; ECXDATE = date of interest (required)
"RTN","ECXUTL2",183,0)
 ; output
"RTN","ECXUTL2",184,0)
 ; ECXINP  = patient status^movment # (file #405 ien)
"RTN","ECXUTL2",185,0)
 ;       current treat. spec. (file #42.4 ien)^admission date/time^
"RTN","ECXUTL2",186,0)
 ;       current ward (file #42 ien)^discharge date/time^
"RTN","ECXUTL2",187,0)
 ;       ward provider^attending phys.^ward (file #44 ien);facility
"RTN","ECXUTL2",188,0)
 ;       (file #40.8 ien);dss dept^dom^primary ward phys person class
"RTN","ECXUTL2",189,0)
 ;       ^attending phys person class^ward at discharge^ASIH other facility at date/time?
"RTN","ECXUTL2",190,0)
 ;           where patient status = I for inpatient
"RTN","ECXUTL2",191,0)
 ;                                = O for outpatient
"RTN","ECXUTL2",192,0)
 N DFN,DSSDEPT,ECA,ECADM,ECMN,ECTS,ECWARD,ECDC,ECXINP,ECXPRO
"RTN","ECXUTL2",193,0)
 N ECXATP,ECXDD,ECXDOM,ECXPROF,ECXPWP,ECXWW,FAC,VAIP,WRD,ECXPWPPC,ECXASIH,ASIHINFO ;170
"RTN","ECXUTL2",194,0)
 N ECXATPPC
"RTN","ECXUTL2",195,0)
 D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXUTL2",196,0)
 S ECXPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXUTL2",197,0)
 ;- Inpat/outpat indicator (ECA) initially set to "O" (outpatient)
"RTN","ECXUTL2",198,0)
 S DFN=ECXDFN,ECA="O"
"RTN","ECXUTL2",199,0)
 S (DSSDEPT,ECMN,ECTS,ECADM,ECWARD,ECDC,ECXATP,ECXPWP,ECXWW,WRD,FAC,ECXPWPPC,ECXATPPC,ECXDWARD,ECXASIH)="" ;170 Added ECXASIH
"RTN","ECXUTL2",200,0)
 S VAIP("D")=ECXDATE D IN5^VADPT
"RTN","ECXUTL2",201,0)
 S ECMN=$G(VAIP(1))
"RTN","ECXUTL2",202,0)
 I ECMN D
"RTN","ECXUTL2",203,0)
 .S ECXASIH=$S("^43^45^46^"[("^"_+VAIP(4)_"^"):1,1:0) ;170 Determine if last movement was a transfer to ASIH other facility
"RTN","ECXUTL2",204,0)
 .I ECXASIH S ASIHINFO=$$GETASIH S ECMN=$P($P(ASIHINFO,U),";",2) ;170 If ASIH other facility, set admission movement to ASIH movement
"RTN","ECXUTL2",205,0)
 .S ECTS=+$P($G(^DIC(45.7,+VAIP(8),0)),U,2) S:ECTS=0 ECTS=""
"RTN","ECXUTL2",206,0)
 .;- Get inpat/outpat indicator
"RTN","ECXUTL2",207,0)
 .S ECA=$$INOUTP^ECXUTL4(ECTS)
"RTN","ECXUTL2",208,0)
 .S ECADM=$S(ECXASIH:+$P($P(ASIHINFO,U),";"),1:+$G(VAIP(13,1))) S:ECADM=0 ECADM="" ;170 If ASIH movement, admission date/time is ASIH movement date/time
"RTN","ECXUTL2",209,0)
 .S ECWARD=+$G(VAIP(5)) S:ECWARD=0 ECWARD=""
"RTN","ECXUTL2",210,0)
 .I ECWARD D
"RTN","ECXUTL2",211,0)
 ..S WRD=+$P($G(^DIC(42,+ECWARD,44)),U)
"RTN","ECXUTL2",212,0)
 ..S FAC=$P($G(^DIC(42,+ECWARD,0)),U,11)
"RTN","ECXUTL2",213,0)
 ..S DSSDEPT=$P($G(^ECX(727.4,ECWARD,0)),U,2)
"RTN","ECXUTL2",214,0)
 .S ECXWW=WRD_";"_FAC_";"_DSSDEPT,ECDC=$S(ECXASIH:+$P($P(ASIHINFO,U,2),";"),1:+$G(VAIP(17,1))) S:ECDC=0 ECDC="" ;170 If ASIH discharge date/time is return from ASIH other facility else it's discharge date/time
"RTN","ECXUTL2",215,0)
 .S ECXPWP=+VAIP(7) S:ECXPWP=0 ECXPWP=""
"RTN","ECXUTL2",216,0)
 .S ECXATP=+VAIP(18) S:ECXATP=0 ECXATP=""
"RTN","ECXUTL2",217,0)
 .S ECXPWPPC=$$PRVCLASS^ECXUTL(ECXPWP,ECADM)
"RTN","ECXUTL2",218,0)
 .S ECXATPPC=$$PRVCLASS^ECXUTL(ECXATP,ECADM)
"RTN","ECXUTL2",219,0)
 .;prefix file #200 iens
"RTN","ECXUTL2",220,0)
 .S:ECXPWP ECXPWP=ECXPROF_ECXPWP S:ECXATP ECXATP=ECXPROF_ECXATP
"RTN","ECXUTL2",221,0)
 S ECXDWARD=+VAIP(17,4) S:ECXDWARD=0 ECXDWARD=""  ; 166 tjl - Get Ward at Discharge
"RTN","ECXUTL2",222,0)
 S ECXDOM=$P($G(^ECX(727.831,+ECTS,0)),U,2)
"RTN","ECXUTL2",223,0)
 S ECXINP=ECA_U_ECMN_U_ECTS_U_ECADM_U_ECWARD_U_ECDC_U_ECXPWP_U_ECXATP_U_ECXWW_U_ECXDOM_U_ECXPWPPC_U_ECXATPPC_U_ECXDWARD_U_ECXASIH ;170 Added ASIH other facility status
"RTN","ECXUTL2",224,0)
 Q ECXINP
"RTN","ECXUTL2",225,0)
VISN19(ECXDFN,ECXPAYOR,ECXSAI) ;visn 19 sharing agreement data
"RTN","ECXUTL2",226,0)
 ; input  ECXDFN = patient file ien
"RTN","ECXUTL2",227,0)
 ; output ECXPAYOR, ECXSAI (passed by reference)
"RTN","ECXUTL2",228,0)
 N JJ,ALIAS,INSUR,DIC,DIQ,DA,DR,ECXARY,ECXERR,ECXDA
"RTN","ECXUTL2",229,0)
 S (ECXPAYOR,ECXSAI)=""
"RTN","ECXUTL2",230,0)
 D GETS^DIQ(2,ECXDFN,"1*,","I","ECXARY","ECXERR")
"RTN","ECXUTL2",231,0)
 I $D(ECXERR) Q
"RTN","ECXUTL2",232,0)
 S JJ=0 F  S JJ=$O(ECXARY(2.01,JJ)) Q:JJ=""  D  I ECXPAYOR]"" Q
"RTN","ECXUTL2",233,0)
 . S ALIAS=$G(ECXARY(2.01,JJ,.01,"I"))
"RTN","ECXUTL2",234,0)
 . S ECXPAYOR=$S(ALIAS="SHARING AGREEMENT":"A",ALIAS="TRICARE":"B",ALIAS="CAT C":"C",ALIAS="CATEGORY C":"C",ALIAS="CHAMPVA":"D",ALIAS="CHAMPUS":"E",1:"")
"RTN","ECXUTL2",235,0)
 . W !,$G(CNT)+1
"RTN","ECXUTL2",236,0)
 . W !,"The value of ECXPAYOR is: ",ECXPAYOR
"RTN","ECXUTL2",237,0)
 ;K ECXARY,ECXERR
"RTN","ECXUTL2",238,0)
 I ECXPAYOR]"" D GETS^DIQ(2,ECXDFN,".3121*,","I","ECXARY","ECXERR") D
"RTN","ECXUTL2",239,0)
 . I $D(ECXERR) Q
"RTN","ECXUTL2",240,0)
 . S JJ=0,ECXDA=$O(ECXARY(2.312,JJ)) I ECXDA="" Q
"RTN","ECXUTL2",241,0)
 . S DA=$G(ECXARY(2.312,ECXDA,.01,"I")) I DA="" Q
"RTN","ECXUTL2",242,0)
 . S INSUR=$$GET1^DIQ(36,DA,".01","I","","ECXERR")
"RTN","ECXUTL2",243,0)
 . I '$D(ECXERR) S ECXSAI=$E(ECXARY(2.312,ECXDA,.01,"I"),1,11)
"RTN","ECXUTL2",244,0)
 Q
"RTN","ECXUTL2",245,0)
 ;
"RTN","ECXUTL2",246,0)
GETASIH() ;170 Section added to determine start and end of ASIH other facility movement
"RTN","ECXUTL2",247,0)
 N MVMTDT,CLCADM,DATE,REC,DONE,ASIHSD,ASIHED
"RTN","ECXUTL2",248,0)
 S MVMTDT=+VAIP(3) ;ASIH movement date/time
"RTN","ECXUTL2",249,0)
 S CLCADM=VAIP(13) ;CLC admit date/time (NHUC, DOM, etc.)
"RTN","ECXUTL2",250,0)
 ;Get ASIH start date/time
"RTN","ECXUTL2",251,0)
 S ASIHSD=MVMTDT_";"_$G(ECMN),DATE=MVMTDT
"RTN","ECXUTL2",252,0)
 S DONE=0 F  S DATE=$O(^DGPM("APCA",DFN,CLCADM,DATE),-1) Q:DATE=""!(DONE)  D
"RTN","ECXUTL2",253,0)
 .S DA=$O(^DGPM("APCA",DFN,CLCADM,DATE,0))
"RTN","ECXUTL2",254,0)
 .S REC=$G(^DGPM(DA,0))
"RTN","ECXUTL2",255,0)
 .I "^43^45^46^"'[("^"_$P(REC,U,18)_"^") S DONE=1 Q  ;If previous movement isn't an ASIH other facility type movement, stop
"RTN","ECXUTL2",256,0)
 .S ASIHSD=$P(REC,U)_";"_DA
"RTN","ECXUTL2",257,0)
 ;Now get ending time if available
"RTN","ECXUTL2",258,0)
 S DATE=MVMTDT
"RTN","ECXUTL2",259,0)
 S ASIHED=""
"RTN","ECXUTL2",260,0)
 S DONE=0 F  S DATE=$O(^DGPM("APCA",DFN,CLCADM,DATE)) Q:DATE=""!(DONE)  D
"RTN","ECXUTL2",261,0)
 .S DA=$O(^DGPM("APCA",DFN,CLCADM,DATE,0))
"RTN","ECXUTL2",262,0)
 .S REC=$G(^DGPM(DA,0))
"RTN","ECXUTL2",263,0)
 .I "^43^45^46^"'[("^"_$P(REC,U,18)_"^") D
"RTN","ECXUTL2",264,0)
 ..I $P(REC,U,2)'=3 S ASIHED=$P(REC,U)_";"_DA S DONE=1 Q  ;If non-ASIH movement then end date/time is movement date/time
"RTN","ECXUTL2",265,0)
 ..I $P(REC,U,2)=3&($P(REC,U)<+$G(ECED)) S ASIHED=$P(REC,U)_";"_DA,DONE=1 Q  ;If next movement is discharge, and the discharge has happened then end date/time is discharge date/time
"RTN","ECXUTL2",266,0)
 Q ASIHSD_"^"_ASIHED
"RTN","ECXUTL3")
0^28^B112915462^B103285245
"RTN","ECXUTL3",1,0)
ECXUTL3 ;ALB/GTS - Utilities for DSS Extracts ;9/4/18  13:18
"RTN","ECXUTL3",2,0)
 ;;3.0;DSS EXTRACTS;**11,24,32,33,35,37,39,42,46,92,105,120,144,149,154,166,170**;Dec 22,1997;Build 12
"RTN","ECXUTL3",3,0)
 ;
"RTN","ECXUTL3",4,0)
OUTPTTM(ECXDFN,ECXDT) ;* Return PC Team from PCMM files or DPT
"RTN","ECXUTL3",5,0)
 ; Variables -
"RTN","ECXUTL3",6,0)
 ;            ECXDFN - IEN from Patient file (Required)
"RTN","ECXUTL3",7,0)
 ;            ECXDT  - Relevant Date for Primary Care Team
"RTN","ECXUTL3",8,0)
 ;                      (Defaults to DT)
"RTN","ECXUTL3",9,0)
 ;
"RTN","ECXUTL3",10,0)
 ; Returned: ECXTM -
"RTN","ECXUTL3",11,0)
 ;            Pointer to team file (#404.51)
"RTN","ECXUTL3",12,0)
 ;            or, if error or none defined, returns 0
"RTN","ECXUTL3",13,0)
 ;
"RTN","ECXUTL3",14,0)
 Q:'$G(ECXDFN) 0 ;** Quit if ECXDFN not defined
"RTN","ECXUTL3",15,0)
 N ECXTM
"RTN","ECXUTL3",16,0)
 S:'$D(ECXDT) ECXDT=DT
"RTN","ECXUTL3",17,0)
 I $T(OUTPTTM^SDUTL3)[",SCDATE" D
"RTN","ECXUTL3",18,0)
 .S ECXTM=+$$OUTPTTM^SDUTL3(ECXDFN,ECXDT)
"RTN","ECXUTL3",19,0)
 I $T(OUTPTTM^SDUTL3)'[",SCDATE" D
"RTN","ECXUTL3",20,0)
 .S ECXTM=+$$OUTPTTM^SDUTL3(ECXDFN)
"RTN","ECXUTL3",21,0)
 I ECXTM=0 D
"RTN","ECXUTL3",22,0)
 .S ECXTM=+$P($G(^DPT(+ECXDFN,"PC")),U,2)
"RTN","ECXUTL3",23,0)
 Q ECXTM
"RTN","ECXUTL3",24,0)
 ;
"RTN","ECXUTL3",25,0)
OUTPTPR(ECXDFN,ECXDT) ;* Return PC Provider from PCMM files or DPT
"RTN","ECXUTL3",26,0)
 ; Variables -
"RTN","ECXUTL3",27,0)
 ;            ECXDFN - IEN from Patient file (Required)
"RTN","ECXUTL3",28,0)
 ;            ECXDT  - Relevant Date for Primary Care Provider
"RTN","ECXUTL3",29,0)
 ;                      (Defaults to DT)
"RTN","ECXUTL3",30,0)
 ;
"RTN","ECXUTL3",31,0)
 ; Returned: ECXPR -
"RTN","ECXUTL3",32,0)
 ;            Pointer to file #200 
"RTN","ECXUTL3",33,0)
 ;            or, if error or none defined, returns a 0
"RTN","ECXUTL3",34,0)
 ;
"RTN","ECXUTL3",35,0)
 Q:'$G(ECXDFN) 0 ;** Quit if ECXDFN not defined
"RTN","ECXUTL3",36,0)
 N ECXPR
"RTN","ECXUTL3",37,0)
 S:'$D(ECXDT) ECXDT=DT
"RTN","ECXUTL3",38,0)
 I $T(OUTPTPR^SDUTL3)[",SCDATE" D
"RTN","ECXUTL3",39,0)
 .S ECXPR=+$$OUTPTPR^SDUTL3(ECXDFN,ECXDT)
"RTN","ECXUTL3",40,0)
 I $T(OUTPTPR^SDUTL3)'[",SCDATE" D
"RTN","ECXUTL3",41,0)
 .S ECXPR=+$$OUTPTPR^SDUTL3(ECXDFN)
"RTN","ECXUTL3",42,0)
 I ECXPR=0 D
"RTN","ECXUTL3",43,0)
 .S ECXPR=+$G(^DPT(+ECXDFN,"PC"))
"RTN","ECXUTL3",44,0)
 Q ECXPR
"RTN","ECXUTL3",45,0)
 ;
"RTN","ECXUTL3",46,0)
PAT(ECXDFN,ECXDATE,ECXDATA,ECXPAT) ;Return basic patient data for extract
"RTN","ECXUTL3",47,0)
 ; Will not return data associated with test patients (SSN begin w 00000)
"RTN","ECXUTL3",48,0)
 ; Variables -
"RTN","ECXUTL3",49,0)
 ;  Input  ECXDFN - Patient internal entry number, DFN file#2; required
"RTN","ECXUTL3",50,0)
 ;         ECXDATE- Date used to get specific data from GETSTAT^DGMSTAPI
"RTN","ECXUTL3",51,0)
 ;                  for MST. If no date, defaults to today's date,
"RTN","ECXUTL3",52,0)
 ;                  standard FM format, optional
"RTN","ECXUTL3",53,0)
 ;         ECXDATA- Code indicating which data to return, optional.
"RTN","ECXUTL3",54,0)
 ;                  If code not specified then returns all. Codes are:
"RTN","ECXUTL3",55,0)
 ;                  1 - DEM^VADPT (demographic data)
"RTN","ECXUTL3",56,0)
 ;                  2 - ADD^VADPT (current address)
"RTN","ECXUTL3",57,0)
 ;                  3 - ELIG^VADPT (eligibility & enrollment location)
"RTN","ECXUTL3",58,0)
 ;                  4 - OPD^VADPT (other patient data)
"RTN","ECXUTL3",59,0)
 ;                  5 - SVC^VADPT & GETSTAT^DGMSTAPI (service & MST inf)
"RTN","ECXUTL3",60,0)
 ;         ECXPAT(- Passed by reference; required
"RTN","ECXUTL3",61,0)
 ;
"RTN","ECXUTL3",62,0)
 ;  Output:
"RTN","ECXUTL3",63,0)
 ;         ECXPAT   0 error or test patient no data in ECXPAT array
"RTN","ECXUTL3",64,0)
 ;                  1 data returned in ECXPAT array
"RTN","ECXUTL3",65,0)
 ;         ECXPAT(  Local array with patient data.
"RTN","ECXUTL3",66,0)
 ;
"RTN","ECXUTL3",67,0)
 N SSN,I,ECXCOD,ECXDAT,DFN,VAPA,VADM,VAEL,VAPD,VASV,STR,ECXAR,DIC,DIQ,RCNUM,RCVAL,COLMETH
"RTN","ECXUTL3",68,0)
 N DA,DR,PELG,MELIG,ZIP,MPI
"RTN","ECXUTL3",69,0)
 I ECXDFN="" Q 0
"RTN","ECXUTL3",70,0)
 S SSN=$$GET1^DIQ(2,ECXDFN,.09,"I"),DFN=ECXDFN,ECXPAT=0
"RTN","ECXUTL3",71,0)
 ;I $E(SSN,1,3)="000"!(SSN="") K ECXPAT Q 0  ;154 removed as these checks are done in ECXUTL5 ;test patient
"RTN","ECXUTL3",72,0)
 ;test patient extended checks; mtl extract excluded
"RTN","ECXUTL3",73,0)
 I $G(ECHEAD)'="MTL" D  I $G(ECXPAT)="" Q 0  ;154 modified section for SSN testing
"RTN","ECXUTL3",74,0)
 .I $G(ECHEAD)="ECS" I $E(SSN,1,5)="00000" I "^CH103^CH104^CH105^CH106^CH107^CH108^CH109^"[("^"_$G(ECPNM)_"^") Q  ;154 If event capture extract and 5 leading zeroes test patient and workload is CH103 to CH109 then allow test SSN
"RTN","ECXUTL3",75,0)
 .I '$$SSN^ECXUTL5(SSN) K ECXPAT
"RTN","ECXUTL3",76,0)
 S STR="NAME;SSN;DOB;SEX;RACE;RELIGION;STATE;COUNTY;ZIP;SC%;MEANS;ELIG;"
"RTN","ECXUTL3",77,0)
 S STR=STR_"EMPLOY;AO STAT;IR STAT;EC STAT;POW STAT;POW LOC;MST STAT;"
"RTN","ECXUTL3",78,0)
 S STR=STR_"ENROLL LOC;MPI;VIETNAM;POS;MARITAL;CL STAT;COMBSVCI;COMBSVCL" ;149 COMB SVS IND,LOC
"RTN","ECXUTL3",79,0)
 ;initialize return array values
"RTN","ECXUTL3",80,0)
 F I=1:1 S ECXDAT=$P(STR,";",I) Q:ECXDAT=""  S ECXPAT(ECXDAT)=""
"RTN","ECXUTL3",81,0)
 F I=1:1:$L(ECXDATA,";") S ECXDAT=$P(ECXDATA,";",I) I ECXDAT'="" D
"RTN","ECXUTL3",82,0)
 . S ECXCOD(ECXDAT)=""
"RTN","ECXUTL3",83,0)
 ;
"RTN","ECXUTL3",84,0)
 ;- Get ICN if MPI installed
"RTN","ECXUTL3",85,0)
 S X="MPIF001" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",86,0)
 .;
"RTN","ECXUTL3",87,0)
 .;- Get 1st piece (either ICN # or -1 if error)
"RTN","ECXUTL3",88,0)
 . S MPI=+$$GETICN^MPIF001(DFN)
"RTN","ECXUTL3",89,0)
 .;
"RTN","ECXUTL3",90,0)
 .;- If error, set to null
"RTN","ECXUTL3",91,0)
 . S ECXPAT("MPI")=$S(MPI>0:MPI,1:"")
"RTN","ECXUTL3",92,0)
 D  ;get demographic data
"RTN","ECXUTL3",93,0)
 . I ECXDATA'="",'$D(ECXCOD(1)) Q
"RTN","ECXUTL3",94,0)
 . D DEM^VADPT
"RTN","ECXUTL3",95,0)
 . S ECXPAT("NAME")=$E($P(VADM(1),",")_"    ",1,4)
"RTN","ECXUTL3",96,0)
 . S ECXPAT("SSN")=$P(VADM(2),U),ECXPAT("MARITAL")=$P(VADM(10),U)
"RTN","ECXUTL3",97,0)
 . S ECXPAT("DOB")=$$ECXDOB^ECXUTL($P(VADM(3),U))
"RTN","ECXUTL3",98,0)
 . S ECXPAT("SEX")=$P(VADM(5),U),ECXPAT("RELIGION")=$P(VADM(9),U)
"RTN","ECXUTL3",99,0)
 . S DIC=10,DR=2,DA=+VADM(8),DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",100,0)
 . S ECXPAT("RACE")=$G(ECXAR(10,DA,DR,"I")),ECXPAT=1
"RTN","ECXUTL3",101,0)
 . ;add new race and ethnicity fields for FY2003
"RTN","ECXUTL3",102,0)
 . S (ECXPAT("ETHNIC"),ECXPAT("RACE1"))=""
"RTN","ECXUTL3",103,0)
 . S X="DGUTL4" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",104,0)
 .. S COLMETH=$$PTR2CODE^DGUTL4($G(VADM(11,1,1)),3,4) I COLMETH="S" D
"RTN","ECXUTL3",105,0)
 ... S ECXPAT("ETHNIC")=$$PTR2CODE^DGUTL4(+$G(VADM(11,1)),2,4)
"RTN","ECXUTL3",106,0)
 .. S (RCVAL,RCNUM)=""
"RTN","ECXUTL3",107,0)
 .. F  S RCNUM=$O(VADM(12,RCNUM)) Q:RCNUM=""  Q:RCVAL="C"  S COLMETH=$$PTR2CODE^DGUTL4(+$G(VADM(12,RCNUM,1)),3,4) I COLMETH="S" D
"RTN","ECXUTL3",108,0)
 ... S RCVAL=$$PTR2CODE^DGUTL4(+$G(VADM(12,RCNUM)),1,4)
"RTN","ECXUTL3",109,0)
 ... I RCVAL="C" S ECXPAT("RACE1")=RCVAL Q
"RTN","ECXUTL3",110,0)
 ... S ECXPAT("RACE1")=ECXPAT("RACE1")_RCVAL
"RTN","ECXUTL3",111,0)
 .I ECXPAT("RACE1")="" S ECXPAT("RACE1")=$$CHECKRC(+VADM(8)) ;144 If RACE1 is null, check value in RACE field
"RTN","ECXUTL3",112,0)
 D  ;get address information
"RTN","ECXUTL3",113,0)
 . I ECXDATA'="",'$D(ECXCOD(2)) Q
"RTN","ECXUTL3",114,0)
 . D ADD^VADPT
"RTN","ECXUTL3",115,0)
 . S DIC=5,DR=2,DA=+VAPA(5),DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",116,0)
 . S ECXPAT("STATE")=$G(ECXAR(5,DA,DR,"I"))
"RTN","ECXUTL3",117,0)
 . S DIC=5,DA=+VAPA(5),DR=3,DR(5.01)=2,DA(5.01)=+VAPA(7),DIQ="ECXAR"
"RTN","ECXUTL3",118,0)
 . S DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",119,0)
 . S ECXPAT("COUNTY")=$G(ECXAR(5.01,DA(5.01),2,"I"))
"RTN","ECXUTL3",120,0)
 . S ECXPAT("ZIP")=$P(VAPA(11),U,2)
"RTN","ECXUTL3",121,0)
 . S ECXPAT("COUNTRY")=$$GET1^DIQ(779.004,+$P($G(VAPA(25)),U),.01)
"RTN","ECXUTL3",122,0)
 . S ECXPAT=1
"RTN","ECXUTL3",123,0)
 D  ;get eligibility information
"RTN","ECXUTL3",124,0)
 . I ECXDATA'="",'$D(ECXCOD(3)) Q
"RTN","ECXUTL3",125,0)
 . D ELIG^VADPT
"RTN","ECXUTL3",126,0)
 . S PELG=$P(VAEL(1),U),MELIG=$S(PELG="":"",1:$$GET1^DIQ(8,PELG,8,"I"))
"RTN","ECXUTL3",127,0)
 . S ECXPAT("POS")=$P($G(^DIC(21,+VAEL(2),0)),U,3)
"RTN","ECXUTL3",128,0)
 . S ECXPAT("SC STAT")=$S(+VAEL(3):"Y",+VAEL(3)=0:"N",1:"")
"RTN","ECXUTL3",129,0)
 . S ECXPAT("SC%")=$P(VAEL(3),U,2)
"RTN","ECXUTL3",130,0)
 . S ECXPAT("VET")=$S(VAEL(4):"Y",VAEL(4)=0:"N",1:"")
"RTN","ECXUTL3",131,0)
 . S ECXPAT("MEANS")=$P(VAEL(9),U),ECXPAT=1
"RTN","ECXUTL3",132,0)
 . S ECXPAT("ELIG")=$$ELIG(MELIG,ECXPAT("SC%"))
"RTN","ECXUTL3",133,0)
 . ;get enrollment location
"RTN","ECXUTL3",134,0)
 . S DIC=2,DR=27.02,DA=ECXDFN,DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",135,0)
 . S ECXDAT=$G(ECXAR(2,ECXDFN,DR,"I")) I ECXDAT K ECXAR D
"RTN","ECXUTL3",136,0)
 . . S DIC=4,DA=ECXDAT,DR=99,DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",137,0)
 . . S ECXPAT("ENROLL LOC")=ECXAR(4,ECXDAT,DR,"I")
"RTN","ECXUTL3",138,0)
 . ;get Emergency Response Indicator (FEMA)
"RTN","ECXUTL3",139,0)
 . S ECXPAT("ERI")=$$GET1^DIQ(2,ECXDFN,.181,"I")
"RTN","ECXUTL3",140,0)
 D  ;get other patient information
"RTN","ECXUTL3",141,0)
 . I ECXDATA'="",'$D(ECXCOD(4)) Q
"RTN","ECXUTL3",142,0)
 . D OPD^VADPT
"RTN","ECXUTL3",143,0)
 . S ECXPAT("EMPLOY")=$P(VAPD(7),U),ECXPAT=1
"RTN","ECXUTL3",144,0)
 D  ;get service information
"RTN","ECXUTL3",145,0)
 . I ECXDATA'="",'$D(ECXCOD(5)) Q
"RTN","ECXUTL3",146,0)
 . D SVC^VADPT
"RTN","ECXUTL3",147,0)
 . S ECXPAT("VIETNAM")=$S(VASV(1):"Y",VASV(1)=0:"N",1:"U") ;149 
"RTN","ECXUTL3",148,0)
 . S ECXPAT("AO STAT")=$S(VASV(2):"Y",VASV(2)=0:"N",1:"U")
"RTN","ECXUTL3",149,0)
 . S ECXPAT("IR STAT")=$S(VASV(3):"Y",VASV(3)=0:"N",1:"U")
"RTN","ECXUTL3",150,0)
 . I $G(ECXLOGIC)>2017 S ECXPAT("IR STAT")=$S(VASV(3):$P($G(VASV(3,2)),U),VASV(3)=0:"1",1:"U")
"RTN","ECXUTL3",151,0)
 . S ECXPAT("EC STAT")=$$GET1^DIQ(2,ECXDFN,.322013,"I")
"RTN","ECXUTL3",152,0)
 . S ECXPAT("POW STAT")=$S(VASV(4):"Y",VASV(4)=0:"N",1:"U")
"RTN","ECXUTL3",153,0)
 . S ECXPAT("POW LOC")=$P(VASV(4,3),U),ECXPAT=1
"RTN","ECXUTL3",154,0)
 . S ECXPAT("PHI")=$S(VASV(9)=1:"Y",VASV(9)=0:"N",1:"")
"RTN","ECXUTL3",155,0)
 . S ECXPAT("CL STAT")=$S($G(VASV(15)):"Y",$G(VASV(15))=0:"N",1:"") ;144,149 Camp Lejeune status will be in VASV(15) when SVC^VADPT provides it
"RTN","ECXUTL3",156,0)
 . ;- Agent Orange Location (K=Korean DMZ,V=Vietnam)
"RTN","ECXUTL3",157,0)
 . S ECXPAT("AOL")=$P($G(VASV(2,5)),U)
"RTN","ECXUTL3",158,0)
 . S ECXPAT("COMBSVCI")=$S(VASV(5):"Y",VASV(5)=0:"N",1:"") ;149 COMBAT SVC IND
"RTN","ECXUTL3",159,0)
 . S ECXPAT("COMBSVCL")=$$GET1^DIQ(22,$P($G(VASV(5,3)),"^"),1) ;149 COMBAT SVC LOC USE ABBR
"RTN","ECXUTL3",160,0)
 . ;get patient OEF/OIF status and date of return
"RTN","ECXUTL3",161,0)
 . D OEFDATA^ECXUTL4
"RTN","ECXUTL3",162,0)
 . ;
"RTN","ECXUTL3",163,0)
 . ;get patient current MST status
"RTN","ECXUTL3",164,0)
 . I ECXDATE'="",ECXDATE'["." S ECXDATE=ECXDATE+.9
"RTN","ECXUTL3",165,0)
 . S X="DGMSTAPI" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",166,0)
 . . S ECXDAT=$$GETSTAT^DGMSTAPI(DFN,ECXDATE)
"RTN","ECXUTL3",167,0)
 . . S ECXPAT("MST STAT")=$S(+ECXDAT>0:$P(ECXDAT,U,2),1:"")
"RTN","ECXUTL3",168,0)
 I 'ECXPAT K ECXPAT Q 0
"RTN","ECXUTL3",169,0)
 Q 1
"RTN","ECXUTL3",170,0)
 ;
"RTN","ECXUTL3",171,0)
ELIG(ECXELIG,ECXSVCP) ;Converts veteran eligibility code to NPCD code
"RTN","ECXUTL3",172,0)
 ; Variables -
"RTN","ECXUTL3",173,0)
 ;  Input  ECXELIG - Pointer to MAS ELIGIBILITY CODE file #8.1
"RTN","ECXUTL3",174,0)
 ;         ECXSVCP - Number value rep. service connected percentage.
"RTN","ECXUTL3",175,0)
 ;
"RTN","ECXUTL3",176,0)
 ;  Output:
"RTN","ECXUTL3",177,0)
 ;         ECXNCPD  NPCD Eligibility Code
"RTN","ECXUTL3",178,0)
 ;
"RTN","ECXUTL3",179,0)
 N TEXT,IEN,SCPER,FND,NPCD,I,ECXBG,ECXEN,ECXNPCD
"RTN","ECXUTL3",180,0)
 I ECXELIG="" Q ""
"RTN","ECXUTL3",181,0)
 F I=1:1 S TEXT=$P($T(ELGTXT+I),";",3,999) Q:TEXT="END"  D  I $D(NPCD) Q
"RTN","ECXUTL3",182,0)
 . S IEN=$P(TEXT,";"),SCPER=$P(TEXT,";",2)
"RTN","ECXUTL3",183,0)
 . I ECXELIG=IEN D
"RTN","ECXUTL3",184,0)
 . . I SCPER="" S NPCD=$P(TEXT,";",3) Q
"RTN","ECXUTL3",185,0)
 . . S ECXBG=$S($E(SCPER)="<":0,$E(SCPER)=">":$P(SCPER,">",2)+1,SCPER["-":+SCPER,1:"")
"RTN","ECXUTL3",186,0)
 . . S ECXEN=$S($E(SCPER)="<":$P(SCPER,"<",2),$E(SCPER)=">":100,SCPER["-":$P(SCPER,"-",2),1:"")
"RTN","ECXUTL3",187,0)
 . . I ECXSVCP'<ECXBG,ECXSVCP'>ECXEN S NPCD=$P(TEXT,";",3)
"RTN","ECXUTL3",188,0)
 S ECXNPCD=$G(NPCD)
"RTN","ECXUTL3",189,0)
 Q ECXNPCD
"RTN","ECXUTL3",190,0)
ELGTXT ;Eligibility codes
"RTN","ECXUTL3",191,0)
 ;;1;>49;10;SC 50-100%
"RTN","ECXUTL3",192,0)
 ;;2;;20;Aid & Attendance
"RTN","ECXUTL3",193,0)
 ;;15;;21;Housebound
"RTN","ECXUTL3",194,0)
 ;;16;;22;Mexican Border War
"RTN","ECXUTL3",195,0)
 ;;17;;23;WWI
"RTN","ECXUTL3",196,0)
 ;;18;;24;POW
"RTN","ECXUTL3",197,0)
 ;;3;40-49;30;SC 40-49%
"RTN","ECXUTL3",198,0)
 ;;3;30-39;31;SC 30-39%
"RTN","ECXUTL3",199,0)
 ;;3;20-29;32;SC 20-29%
"RTN","ECXUTL3",200,0)
 ;;3;10-19;33;SC 10-19%
"RTN","ECXUTL3",201,0)
 ;;3;<10;34;SC less than 10%
"RTN","ECXUTL3",202,0)
 ;;4;;40;NSC - VA Pension
"RTN","ECXUTL3",203,0)
 ;;5;;50;NSC
"RTN","ECXUTL3",204,0)
 ;;21;;60;Catastrophic Disability
"RTN","ECXUTL3",205,0)
 ;;12;;101;CHAMPVA
"RTN","ECXUTL3",206,0)
 ;;13;;102;Collateral of Veteran
"RTN","ECXUTL3",207,0)
 ;;14;;103;Employee
"RTN","ECXUTL3",208,0)
 ;;6;;104;Other Federal Agency
"RTN","ECXUTL3",209,0)
 ;;7;;105;Allied Veteran
"RTN","ECXUTL3",210,0)
 ;;8;;106;Humanitarian Emergency
"RTN","ECXUTL3",211,0)
 ;;9;;107;Sharing Agreement
"RTN","ECXUTL3",212,0)
 ;;10;;108;Reimbursable Insurance
"RTN","ECXUTL3",213,0)
 ;;19;;109;TRICARE/CHAMPUS
"RTN","ECXUTL3",214,0)
 ;;22;;25;Purple Heart Recipient
"RTN","ECXUTL3",215,0)
 ;;END
"RTN","ECXUTL3",216,0)
 ;
"RTN","ECXUTL3",217,0)
CPT(ECXCPT,ECXMOD,ECXQUA) ;Returns a str with CPT code and modifier codes
"RTN","ECXUTL3",218,0)
 ;Return string is composed of a 5 character CPT code 2 character quantity
"RTN","ECXUTL3",219,0)
 ;plus up to 5 modifier codes, 2 characters each.
"RTN","ECXUTL3",220,0)
 ; Variables -
"RTN","ECXUTL3",221,0)
 ;  Input  ECXCPT  - Pointer value to the CPT file (#81)
"RTN","ECXUTL3",222,0)
 ;         ECXMOD - A string with pointer values to the CPT
"RTN","ECXUTL3",223,0)
 ;                   MODIFIER file (#81.3) separated by ";"
"RTN","ECXUTL3",224,0)
 ;         ECXQUA  - Number of time this procedure performed
"RTN","ECXUTL3",225,0)
 ;
"RTN","ECXUTL3",226,0)
 ;  Output:
"RTN","ECXUTL3",227,0)
 ;         CPTMOD  - String of up to 17 characters, 5 character CPT
"RTN","ECXUTL3",228,0)
 ;                   code 2 character qty plus up to 5 2-character
"RTN","ECXUTL3",229,0)
 ;                   code modifiers.
"RTN","ECXUTL3",230,0)
 ;
"RTN","ECXUTL3",231,0)
 N CPT,MOD,I,CPTMOD
"RTN","ECXUTL3",232,0)
 S ECXQUA=$G(ECXQUA,"01"),ECXMOD=$G(ECXMOD)
"RTN","ECXUTL3",233,0)
 S:$L(ECXQUA)'=2 ECXQUA="0"_ECXQUA
"RTN","ECXUTL3",234,0)
 S CPT=$$CPT^ICPTCOD(ECXCPT,"") I +CPT=-1 Q ""
"RTN","ECXUTL3",235,0)
 S CPT=$P(CPT,U,2)_ECXQUA
"RTN","ECXUTL3",236,0)
 F I=1:1:99 I $P(ECXMOD,";",I)'="" D
"RTN","ECXUTL3",237,0)
 . S MOD=$$MOD^ICPTMOD($P(ECXMOD,";",I),"I","")
"RTN","ECXUTL3",238,0)
 . I +MOD>0,$P(MOD,U,2)'="99" S CPT=CPT_$P(MOD,U,2)
"RTN","ECXUTL3",239,0)
 S CPTMOD=$TR($E(CPT,1,17)," ")
"RTN","ECXUTL3",240,0)
 Q CPTMOD
"RTN","ECXUTL3",241,0)
 ;
"RTN","ECXUTL3",242,0)
CPT3Q6M(ECXCPT,ECXMOD,ECXQUA) ;
"RTN","ECXUTL3",243,0)
 ;
"RTN","ECXUTL3",244,0)
 ; This API was created for patch 170 (FY19) to handle 3-digit quantities
"RTN","ECXUTL3",245,0)
 ;      and up to 6 modifiers.
"RTN","ECXUTL3",246,0)
 ;
"RTN","ECXUTL3",247,0)
 ; Return string is composed of a 5-character CPT code, 3-character quantity
"RTN","ECXUTL3",248,0)
 ; and up to 6 2-character modifier codes.
"RTN","ECXUTL3",249,0)
 ;
"RTN","ECXUTL3",250,0)
 ; Variables -
"RTN","ECXUTL3",251,0)
 ;   Input  ECXCPT - Pointer value to the CPT file (#81)
"RTN","ECXUTL3",252,0)
 ;          ECXMOD - A string with pointer values to the CPT
"RTN","ECXUTL3",253,0)
 ;                   MODIFIER file (#81.3) separated by ";"
"RTN","ECXUTL3",254,0)
 ;          ECXQUA - Number of times this procedure was performed
"RTN","ECXUTL3",255,0)
 ;
"RTN","ECXUTL3",256,0)
 ;   Output:
"RTN","ECXUTL3",257,0)
 ;          CPTMOD - String of up to 20 characters - a 5-character CPT
"RTN","ECXUTL3",258,0)
 ;                   code, 3-character quantity, and up to 6 2-character
"RTN","ECXUTL3",259,0)
 ;                   code modifiers.
"RTN","ECXUTL3",260,0)
 ;
"RTN","ECXUTL3",261,0)
 N CPT,MOD,I,CPTMOD,LEN
"RTN","ECXUTL3",262,0)
 S ECXQUA=$G(ECXQUA,"001"),ECXMOD=$G(ECXMOD)
"RTN","ECXUTL3",263,0)
 F LEN=1,2 I $L(ECXQUA)=LEN S ECXQUA="0"_ECXQUA
"RTN","ECXUTL3",264,0)
 S CPT=$$CPT^ICPTCOD(ECXCPT,"") I +CPT=-1 Q ""
"RTN","ECXUTL3",265,0)
 S CPT=$P(CPT,U,2)_ECXQUA
"RTN","ECXUTL3",266,0)
 F I=1:1:99 I $P(ECXMOD,";",I)'="" D
"RTN","ECXUTL3",267,0)
 . S MOD=$$MOD^ICPTMOD($P(ECXMOD,";",I),"I","")
"RTN","ECXUTL3",268,0)
 . I +MOD>0,$P(MOD,U,2)'="99" S CPT=CPT_$P(MOD,U,2)
"RTN","ECXUTL3",269,0)
 S CPTMOD=$TR($E(CPT,1,20)," ")
"RTN","ECXUTL3",270,0)
 Q CPTMOD
"RTN","ECXUTL3",271,0)
CPTOUT(ECXCPT) ;output transform for CPT code plus modifiers
"RTN","ECXUTL3",272,0)
 ;input  ECXCPT  - character string of CPT code plus modifiers (required)
"RTN","ECXUTL3",273,0)
 ;
"RTN","ECXUTL3",274,0)
 N J,CPTX,MOD,MODS,MODX,CPTMOD
"RTN","ECXUTL3",275,0)
 Q:$G(ECXCPT)="" ""
"RTN","ECXUTL3",276,0)
 S (CPTMOD,MODX)=""
"RTN","ECXUTL3",277,0)
 S CPTX="("_+$E(ECXCPT,6,7)_") "_$E(ECXCPT,1,5),MODS=$E(ECXCPT,8,17)
"RTN","ECXUTL3",278,0)
 F J=1:2:9 S MOD=$E(MODS,J,J+1) Q:MOD=""  D
"RTN","ECXUTL3",279,0)
 .I J>1 S MODX=MODX_", "_MOD Q
"RTN","ECXUTL3",280,0)
 .S MODX=MODX_"-"_MOD
"RTN","ECXUTL3",281,0)
 S:$L(CPTX)>3 CPTMOD=CPTMOD_CPTX_MODX
"RTN","ECXUTL3",282,0)
 Q CPTMOD
"RTN","ECXUTL3",283,0)
 ;
"RTN","ECXUTL3",284,0)
CHECKRC(RACEIEN) ;144 API added to check RACE for non-stardard values that can be converted.  If the value can be converted then it will be stored in RACE1 upon return
"RTN","ECXUTL3",285,0)
 N NAME,DIC,X,Y,PTFVAL
"RTN","ECXUTL3",286,0)
 S NAME=$$PTR2TEXT^DGUTL4(RACEIEN)
"RTN","ECXUTL3",287,0)
 S PTFVAL=""
"RTN","ECXUTL3",288,0)
 I NAME="AMER INDIAN OR ALASKAN NATIVE"!(NAME="AMERICAN INDIAN")!(NAME="AMERICAN INDIAN/ALASKAN NATIVE")!(NAME="AMERICAN INDIAN OR ALASKAN NATIVE") S X="AMERICAN INDIAN OR ALASKA NATIVE"
"RTN","ECXUTL3",289,0)
 I NAME="AMERICAN INDIAN/ALASKA NATIVE"!(NAME="AMERICAN INDIAN/ALASKAN")!(NAME="AMERICAN INDIANT OR ALASKA NATIVE") S X="AMERICAN INDIAN OR ALASKA NATIVE"
"RTN","ECXUTL3",290,0)
 I NAME="BLACK"!(NAME="BLACK NOT OF HISP ORIG")!(NAME="BLACK, NON HISPANIC")!(NAME="BLACK, NOT OF HISPANIC ORIGIN") S X="BLACK OR AFRICAN AMERICAN"
"RTN","ECXUTL3",291,0)
 I NAME="BLACK,NOT OF HISPANIC ORIGIN"!(NAME="HISPANIC BLACK")!(NAME="HISPANIC, BLACK")!(NAME="HISPANIC,BLACK") S X="BLACK OR AFRICAN AMERICAN"
"RTN","ECXUTL3",292,0)
 I NAME="WHITE NOT OF HISP ORIG"!(NAME="WHITE, NON HISPANIC")!(NAME="WHITE, NOT OF HISPANIC")!(NAME="WHITE, NOT OF HISPANIC ORIGIN")!(NAME="WHITE,NOT OF HISPANIC ORIGIN") S X="WHITE"
"RTN","ECXUTL3",293,0)
 I NAME="CAUCASIAN"!(NAME="CAUCASIAN, NOT OF HISPANIC ORIGIN")!(NAME="HISPANIC WHITE")!(NAME="HISPANIC, WHITE")!(NAME="HISPANIC,WHITE") S X="WHITE"
"RTN","ECXUTL3",294,0)
 I NAME="PACIFIC ISLANDER" S X="NATIVE HAWAIIAN OR OTHER PACIFIC ISLANDER"
"RTN","ECXUTL3",295,0)
 S DIC(0)="MQ",DIC=10 D ^DIC ;Find standard race in RACE file
"RTN","ECXUTL3",296,0)
 I Y S PTFVAL=$$PTR2CODE^DGUTL4(+Y,1,4) ;If found, get PTF value to return
"RTN","ECXUTL3",297,0)
 Q PTFVAL
"RTN","ECXUTL4")
0^19^B48775679^B46454603
"RTN","ECXUTL4",1,0)
ECXUTL4 ;ALB/ESD - Utilities for DSS Extracts ;5/21/18  11:06
"RTN","ECXUTL4",2,0)
 ;;3.0;DSS EXTRACTS;**39,41,46,49,78,92,105,112,120,127,154,170**;Dec 22,1997;Build 12
"RTN","ECXUTL4",3,0)
 ;
"RTN","ECXUTL4",4,0)
OBSPAT(ECXIO,ECXTS,DSSID) ;
"RTN","ECXUTL4",5,0)
 ; Get observation patient indicator from DSS TREATING SPECIALTY
"RTN","ECXUTL4",6,0)
 ; TRANSLATION file (#727.831) or DSS Identifier
"RTN","ECXUTL4",7,0)
 ;
"RTN","ECXUTL4",8,0)
 ; Input:
"RTN","ECXUTL4",9,0)
 ;   ECXIO  - Inpatient/Outpatient indicator
"RTN","ECXUTL4",10,0)
 ;   ECXTS  - Treating specialty (from file #42.4)
"RTN","ECXUTL4",11,0)
 ;   DSSID  - DSS Identifier
"RTN","ECXUTL4",12,0)
 ;
"RTN","ECXUTL4",13,0)
 ;Output:
"RTN","ECXUTL4",14,0)
 ;   ECXOBS - Observation patient indicator (YES/NO)
"RTN","ECXUTL4",15,0)
 ;
"RTN","ECXUTL4",16,0)
 ;- Check input vars
"RTN","ECXUTL4",17,0)
 S ECXIO=$G(ECXIO),ECXTS=+$G(ECXTS),DSSID=+$G(DSSID)
"RTN","ECXUTL4",18,0)
 S ECXOBS=""
"RTN","ECXUTL4",19,0)
 D
"RTN","ECXUTL4",20,0)
 .;- Look up obs patient indicator if treating spec is in file #727.831
"RTN","ECXUTL4",21,0)
 . I $G(^ECX(727.831,ECXTS,0)) S ECXOBS=$P($G(^ECX(727.831,ECXTS,0)),"^",4)
"RTN","ECXUTL4",22,0)
 . I ECXOBS'="" S ECXOBS=$S(ECXOBS="Y":"YES",1:"NO") Q
"RTN","ECXUTL4",23,0)
 .;
"RTN","ECXUTL4",24,0)
 .;- If outpatient and TS not in file, AND Feeder Key (CLI) or DSS ID
"RTN","ECXUTL4",25,0)
 .;- (MTL,IVP,ECQ,QSR,NOS,SUR) is 290-297, Observation Patient Ind=YES
"RTN","ECXUTL4",26,0)
 . I ECXIO="O",ECXOBS="",DSSID D
"RTN","ECXUTL4",27,0)
 .. I $E(DSSID,1,3)>289&($E(DSSID,1,3)<298) S ECXOBS="YES"
"RTN","ECXUTL4",28,0)
 .. E  S ECXOBS="NO"
"RTN","ECXUTL4",29,0)
 Q $S(ECXOBS'="":ECXOBS,1:"NO")
"RTN","ECXUTL4",30,0)
 ;
"RTN","ECXUTL4",31,0)
INOUTP(ECXTS) ;
"RTN","ECXUTL4",32,0)
 ; Get inpatient/outpatient indicator from DSS TREATING SPECIALTY
"RTN","ECXUTL4",33,0)
 ; TRANSLATION file (#727.831)
"RTN","ECXUTL4",34,0)
 ;
"RTN","ECXUTL4",35,0)
 ; Input:
"RTN","ECXUTL4",36,0)
 ;   ECXTS   - Treating specialty
"RTN","ECXUTL4",37,0)
 ;
"RTN","ECXUTL4",38,0)
 ; Output:
"RTN","ECXUTL4",39,0)
 ;             Inpatient/Outpatient indicator (I/O)
"RTN","ECXUTL4",40,0)
 ;
"RTN","ECXUTL4",41,0)
 S ECXTS=+$G(ECXTS)
"RTN","ECXUTL4",42,0)
 S ECXIO=""
"RTN","ECXUTL4",43,0)
 ;
"RTN","ECXUTL4",44,0)
 ;- Look up inpat/outpat indicator if treating spec is in file
"RTN","ECXUTL4",45,0)
 I $G(^ECX(727.831,ECXTS,0)) S ECXIO=$P($G(^ECX(727.831,ECXTS,0)),"^",5)
"RTN","ECXUTL4",46,0)
 Q $S(ECXIO'="":ECXIO,1:"I")
"RTN","ECXUTL4",47,0)
 ;
"RTN","ECXUTL4",48,0)
ENCNUM(ECXIO,ECXSSN,ECXADT,ECXVDT,ECXTRT,ECXOBS,ECXEXT,ECXSTP,ECXSTP2) ;
"RTN","ECXUTL4",49,0)
 ; Get encounter number
"RTN","ECXUTL4",50,0)
 ;
"RTN","ECXUTL4",51,0)
 ; Input:
"RTN","ECXUTL4",52,0)
 ;   ECXIO   - Inpat/Outpat indicator = I or O
"RTN","ECXUTL4",53,0)
 ;   ECXSSN  - Patient SSN
"RTN","ECXUTL4",54,0)
 ;   ECXADT  - Admit Date
"RTN","ECXUTL4",55,0)
 ;   ECXVDT  - Visit Date
"RTN","ECXUTL4",56,0)
 ;   ECXTRT  - Treating Spec
"RTN","ECXUTL4",57,0)
 ;   ECXOBS  - Observation Pat Indicator
"RTN","ECXUTL4",58,0)
 ;   ECXEXT  - Extract
"RTN","ECXUTL4",59,0)
 ;   ECXSTP  - Stop Code (or stop code related) variable
"RTN","ECXUTL4",60,0)
 ;   ECXSTP2 - Stop Code (or stop code related) addtl variable
"RTN","ECXUTL4",61,0)
 ;             (used for SUR and ECS)
"RTN","ECXUTL4",62,0)
 ;
"RTN","ECXUTL4",63,0)
 ;Output:
"RTN","ECXUTL4",64,0)
 ;             Encounter Number
"RTN","ECXUTL4",65,0)
 ;
"RTN","ECXUTL4",66,0)
 N ENCNUM,ECXDATE,ECXSTCD
"RTN","ECXUTL4",67,0)
 S (ENCNUM,ECXSTCD)=""
"RTN","ECXUTL4",68,0)
 ;
"RTN","ECXUTL4",69,0)
 ;- Check input vars
"RTN","ECXUTL4",70,0)
 S ECXEXT=$G(ECXEXT),ECXIO=$G(ECXIO),ECXOBS=$G(ECXOBS),ECXTRT=+$G(ECXTRT)
"RTN","ECXUTL4",71,0)
 S:ECXEXT'="ECS"&(ECXEXT'="ECQ") ECXSTP=+$G(ECXSTP) S ECXSTP2=+$G(ECXSTP2) ;154 Allow stop code/DSS ID for ECS&ECQ to be non-numeric
"RTN","ECXUTL4",72,0)
 S ECXADT=+$G(ECXADT),ECXVDT=+$G(ECXVDT)
"RTN","ECXUTL4",73,0)
 ;
"RTN","ECXUTL4",74,0)
 ;- Don't use pseudo-SSN in encounter number
"RTN","ECXUTL4",75,0)
 S ECXSSN=$E($G(ECXSSN),1,9)
"RTN","ECXUTL4",76,0)
 ;
"RTN","ECXUTL4",77,0)
 D
"RTN","ECXUTL4",78,0)
 . ;- Inpatient
"RTN","ECXUTL4",79,0)
 . I ECXIO="I",ECXADT,ECXSSN'="" D  Q
"RTN","ECXUTL4",80,0)
 .. S ECXDATE=$$ADMITDT(ECXADT)
"RTN","ECXUTL4",81,0)
 .. I ECXDATE'="" S ENCNUM=ECXSSN_ECXDATE_"I"
"RTN","ECXUTL4",82,0)
 . ;
"RTN","ECXUTL4",83,0)
 . ;- Outpatient branch
"RTN","ECXUTL4",84,0)
 . I ECXIO="O" D
"RTN","ECXUTL4",85,0)
 .. ;- Observation patient (outpatient)
"RTN","ECXUTL4",86,0)
 .. I ECXOBS="YES",ECXSSN'="" D  Q
"RTN","ECXUTL4",87,0)
 ... ;
"RTN","ECXUTL4",88,0)
 ... S ECXDATE=$S(ECXADT:$$JULDT(ECXADT),1:$$JULDT(ECXVDT))
"RTN","ECXUTL4",89,0)
 ... S ECXSTCD=$S(+$P($G(^ECX(727.831,ECXTRT,0)),"^",6):+$P($G(^ECX(727.831,ECXTRT,0)),"^",6),1:+$E(ECXSTP,1,3))
"RTN","ECXUTL4",90,0)
 ... Q:ECXDATE=""!(ECXSTCD="")
"RTN","ECXUTL4",91,0)
 ... S ENCNUM=ECXSSN_ECXDATE_ECXSTCD
"RTN","ECXUTL4",92,0)
 .. ;
"RTN","ECXUTL4",93,0)
 .. ;- Outpatient (no observation pat)
"RTN","ECXUTL4",94,0)
 .. I ECXOBS="NO",ECXVDT,ECXSSN'="" D  Q
"RTN","ECXUTL4",95,0)
 ... ;
"RTN","ECXUTL4",96,0)
 ... ;- ADM, MOV, TRT have no outpat encounter number
"RTN","ECXUTL4",97,0)
 ... I ECXEXT="ADM"!(ECXEXT="MOV")!(ECXEXT="TRT") Q
"RTN","ECXUTL4",98,0)
 ... ;
"RTN","ECXUTL4",99,0)
 ... ;- Use 1st 3 chars of DSS ID for NOS (feeder key for CLI)
"RTN","ECXUTL4",100,0)
 ... I ECXEXT="CLI"!(ECXEXT="NOS") S ECXSTCD=+$E(ECXSTP,1,3) Q:'ECXSTCD
"RTN","ECXUTL4",101,0)
 ... ;
"RTN","ECXUTL4",102,0)
 ... ;- 154, For ECS remove cost center conversion. For ECS and ECQ set stop code to first 3 characters of ECXSTP
"RTN","ECXUTL4",103,0)
 ... I ECXEXT="ECS"!(ECXEXT="ECQ") S ECXSTCD=$E(ECXSTP,1,3) ;154
"RTN","ECXUTL4",104,0)
 ... ;
"RTN","ECXUTL4",105,0)
 ... ;- These extracts have predetermined stop code values
"RTN","ECXUTL4",106,0)
 ... I ECXEXT="DEN" S ECXSTCD=180
"RTN","ECXUTL4",107,0)
 ... I ECXEXT="PRE"!(ECXEXT="UDP") S ECXSTCD="PHA" ;170
"RTN","ECXUTL4",108,0)
 ... I ECXEXT="IVP" S ECXSTCD=$S(ECXSTP=0:"PHA","^AN100^AN200^AN300^AN400^AN500^AN600^AN700^AN900^OP900^"[("^"_$G(ECVACL)_"^"):$E(ECXSTP,1,3),1:"PHA") ;170 Set stop code for IVP
"RTN","ECXUTL4",109,0)
 ... I ECXEXT="LAB"!(ECXEXT="LAR")!(ECXEXT="LBB") S ECXSTCD=108
"RTN","ECXUTL4",110,0)
 ... I ECXEXT="MTL" S ECXSTCD=538
"RTN","ECXUTL4",111,0)
 ... I ECXEXT="NUR" S ECXSTCD=950
"RTN","ECXUTL4",112,0)
 ... I ECXEXT="PRO" S ECXSTCD=423
"RTN","ECXUTL4",113,0)
 ... I ECXEXT="NUT" S ECXSTCD="NUT"
"RTN","ECXUTL4",114,0)
 ... I ECXEXT="BCM" S ECXSTCD="BCM"
"RTN","ECXUTL4",115,0)
 ... ;
"RTN","ECXUTL4",116,0)
 ... ;- If Imaging Type fld=2, use 109 otherwise use 105
"RTN","ECXUTL4",117,0)
 ... I ECXEXT="RAD" S ECXSTCD=$S(ECXSTP=2:109,1:105)
"RTN","ECXUTL4",118,0)
 ... ;
"RTN","ECXUTL4",119,0)
 ... ;- Use DSS STOP CODE fld if populated or if SURG SPEC fld=59 use 430
"RTN","ECXUTL4",120,0)
 ... ;- otherwise if null use 429
"RTN","ECXUTL4",121,0)
 ... I ECXEXT="SUR" S ECXSTCD=$S(ECXSTP:ECXSTP,ECXSTP2=59:430,1:429)
"RTN","ECXUTL4",122,0)
 ... ;
"RTN","ECXUTL4",123,0)
 ... ;- Get Julian Date
"RTN","ECXUTL4",124,0)
 ... S ECXDATE=$$JULDT(ECXVDT)
"RTN","ECXUTL4",125,0)
 ... I ECXDATE'="" S ENCNUM=ECXSSN_ECXDATE_ECXSTCD
"RTN","ECXUTL4",126,0)
 Q ENCNUM
"RTN","ECXUTL4",127,0)
 ;
"RTN","ECXUTL4",128,0)
ADMITDT(ECXINDT) ; Returns date in YYMMDD format
"RTN","ECXUTL4",129,0)
 ;
"RTN","ECXUTL4",130,0)
 ; Input:
"RTN","ECXUTL4",131,0)
 ;   ECXINDT - Date (can also include time) in internal FM format
"RTN","ECXUTL4",132,0)
 ;
"RTN","ECXUTL4",133,0)
 ;Output:
"RTN","ECXUTL4",134,0)
 ;             Date in YYMMDD form
"RTN","ECXUTL4",135,0)
 ;
"RTN","ECXUTL4",136,0)
 N ECXDT
"RTN","ECXUTL4",137,0)
 S ECXDT=""
"RTN","ECXUTL4",138,0)
 S ECXINDT=+$G(ECXINDT)
"RTN","ECXUTL4",139,0)
 ;
"RTN","ECXUTL4",140,0)
 ;- If no input or full FM date not passed in, quit
"RTN","ECXUTL4",141,0)
 I 'ECXINDT!($L(ECXINDT)<7) G ADMTDTQ
"RTN","ECXUTL4",142,0)
 ;
"RTN","ECXUTL4",143,0)
 ;- Date in YYMMDD form
"RTN","ECXUTL4",144,0)
 S ECXDT=$TR($$FMTE^XLFDT(ECXINDT,"4DF")," /","0")
"RTN","ECXUTL4",145,0)
ADMTDTQ Q ECXDT
"RTN","ECXUTL4",146,0)
 ;
"RTN","ECXUTL4",147,0)
 ;
"RTN","ECXUTL4",148,0)
JULDT(ECXINDT) ;  Returns Julian Date in MMDDD format
"RTN","ECXUTL4",149,0)
 ;
"RTN","ECXUTL4",150,0)
 ; Input:
"RTN","ECXUTL4",151,0)
 ;   ECINDT  - Date (can also include time) in internal FM format
"RTN","ECXUTL4",152,0)
 ;
"RTN","ECXUTL4",153,0)
 ;Output:
"RTN","ECXUTL4",154,0)
 ;             Julian date in MM_DDD form
"RTN","ECXUTL4",155,0)
 ;
"RTN","ECXUTL4",156,0)
 N ECXDDD,ECXDT,ECXJUL,ECXMM
"RTN","ECXUTL4",157,0)
 S (ECXDDD,ECXMM)=""
"RTN","ECXUTL4",158,0)
 ;
"RTN","ECXUTL4",159,0)
 ;- If no input or full FM date not passed in, quit
"RTN","ECXUTL4",160,0)
 S ECXINDT=+$G(ECXINDT)
"RTN","ECXUTL4",161,0)
 I 'ECXINDT!($L(ECXINDT)<7) G JULDTQ
"RTN","ECXUTL4",162,0)
 ;
"RTN","ECXUTL4",163,0)
 ;- Extract date portion
"RTN","ECXUTL4",164,0)
 S ECXDT=$E(ECXINDT,1,7)
"RTN","ECXUTL4",165,0)
 ;
"RTN","ECXUTL4",166,0)
 ;- Get month (MM)
"RTN","ECXUTL4",167,0)
 S ECXMM=$E(ECXINDT,2,3)
"RTN","ECXUTL4",168,0)
 ;
"RTN","ECXUTL4",169,0)
 ;- Number of day within year (DDD)
"RTN","ECXUTL4",170,0)
 S ECXDDD=$$RJ^XLFSTR($$FMDIFF^XLFDT(ECXDT,$E(ECXDT,1,3)_"0101",1)+1,3,"0")
"RTN","ECXUTL4",171,0)
JULDTQ Q ECXMM_ECXDDD
"RTN","ECXUTL4",172,0)
 ;
"RTN","ECXUTL4",173,0)
CNHSTAT(ECXDFN) ;  Get CNH (Contract Nursing Home) status
"RTN","ECXUTL4",174,0)
 ;
"RTN","ECXUTL4",175,0)
 ; Input:
"RTN","ECXUTL4",176,0)
 ;   ECXDFN  - Patient DFN
"RTN","ECXUTL4",177,0)
 ;
"RTN","ECXUTL4",178,0)
 ;Output:
"RTN","ECXUTL4",179,0)
 ;             CNH status (YES/NO)
"RTN","ECXUTL4",180,0)
 ;
"RTN","ECXUTL4",181,0)
 N ECXCNH
"RTN","ECXUTL4",182,0)
 S ECXDFN=+$G(ECXDFN)
"RTN","ECXUTL4",183,0)
 S ECXCNH=$P($G(^DPT(ECXDFN,"NHC")),U)
"RTN","ECXUTL4",184,0)
 Q $S(ECXCNH="Y":"YES",ECXCNH="N":"NO",1:"")
"RTN","ECXUTL4",185,0)
 ;
"RTN","ECXUTL4",186,0)
CANC(ECXNOR,ECXTMOR) ; Get Surgery Cancelled/Aborted Status
"RTN","ECXUTL4",187,0)
 ;
"RTN","ECXUTL4",188,0)
 ; Function called after determining CANCEL DATE in SURGERY record exists
"RTN","ECXUTL4",189,0)
 ;
"RTN","ECXUTL4",190,0)
 ; Input:
"RTN","ECXUTL4",191,0)
 ;   ECXNOR   - Non-OR DSS ID
"RTN","ECXUTL4",192,0)
 ;   ECXTMOR  - Time Pat in OR
"RTN","ECXUTL4",193,0)
 ;
"RTN","ECXUTL4",194,0)
 ;Output:
"RTN","ECXUTL4",195,0)
 ;              Cancelled/aborted status (C/A)
"RTN","ECXUTL4",196,0)
 ;
"RTN","ECXUTL4",197,0)
 N ECXCANC
"RTN","ECXUTL4",198,0)
 S ECXCANC=""
"RTN","ECXUTL4",199,0)
 S ECXNOR=$G(ECXNOR)
"RTN","ECXUTL4",200,0)
 ;
"RTN","ECXUTL4",201,0)
 ;- If Non-OR DSS ID or Time Pat in OR, ECXCANC = "A" else = "C"
"RTN","ECXUTL4",202,0)
 D
"RTN","ECXUTL4",203,0)
 . I ECXNOR'=""&(ECXNOR'="UNKNOWN") S ECXCANC="A" Q
"RTN","ECXUTL4",204,0)
 . I +$G(ECXTMOR) S ECXCANC="A" Q
"RTN","ECXUTL4",205,0)
 . S ECXCANC="C"
"RTN","ECXUTL4",206,0)
 Q ECXCANC
"RTN","ECXUTL4",207,0)
 ;
"RTN","ECXUTL4",208,0)
HNCI(ECXDFN) ; Get head & neck cancer indicator
"RTN","ECXUTL4",209,0)
 ;
"RTN","ECXUTL4",210,0)
 ; Input:
"RTN","ECXUTL4",211,0)
 ;   ECXDFN  - Patient DFN
"RTN","ECXUTL4",212,0)
 ;
"RTN","ECXUTL4",213,0)
 ;Output:
"RTN","ECXUTL4",214,0)
 ;             Head/Neck CA DX (Y/N)
"RTN","ECXUTL4",215,0)
 ;
"RTN","ECXUTL4",216,0)
 N ECXHNCI,DGNT
"RTN","ECXUTL4",217,0)
 S ECXHNCI=""
"RTN","ECXUTL4",218,0)
 S ECXDFN=+$G(ECXDFN) I ECXDFN D
"RTN","ECXUTL4",219,0)
 .I $$GETCUR^DGNTAPI(ECXDFN,"DGNT") S ECXHNCI=$P(DGNT("HNC"),U)
"RTN","ECXUTL4",220,0)
 Q ECXHNCI
"RTN","ECXUTL4",221,0)
 ;
"RTN","ECXUTL4",222,0)
TSMAP(ECXTS) ;Determines DSS Identifier for the following observation
"RTN","ECXUTL4",223,0)
 ; treating specialty
"RTN","ECXUTL4",224,0)
 ; Input:
"RTN","ECXUTL4",225,0)
 ;   ECXTS - Observation Treating Specialty
"RTN","ECXUTL4",226,0)
 ;
"RTN","ECXUTL4",227,0)
 ; Output:
"RTN","ECXUTL4",228,0)
 ;   DSS Identifier (Stop Code)
"RTN","ECXUTL4",229,0)
 ;
"RTN","ECXUTL4",230,0)
 N TS,SC,I
"RTN","ECXUTL4",231,0)
 S TS="^18^23^24^41^65^94^108^",SC="^293^295^290^296^291^292^297^"
"RTN","ECXUTL4",232,0)
 F I=1:1:$L(TS) Q:$P(TS,"^",I)=ECXTS
"RTN","ECXUTL4",233,0)
 Q $P(SC,"^",I)_"000"
"RTN","ECXUTL4",234,0)
OEFDATA ;
"RTN","ECXUTL4",235,0)
 ;get patient OEF/OIF status and date of return
"RTN","ECXUTL4",236,0)
 S (ECXOEF,ECXOEFDT)=""
"RTN","ECXUTL4",237,0)
 I $G(VASV(11))>0 S ECXOEF=ECXOEF_"OIF"
"RTN","ECXUTL4",238,0)
 I $G(VASV(12))>0 S ECXOEF=ECXOEF_"OEF"
"RTN","ECXUTL4",239,0)
 I $G(VASV(13))>0 S ECXOEF=ECXOEF_"UNK"
"RTN","ECXUTL4",240,0)
 I ECXOEF'="" D
"RTN","ECXUTL4",241,0)
 . S ECXOEFDT=""
"RTN","ECXUTL4",242,0)
 . I $G(VASV(11))>0 S ECXOEFDT=$P($G(VASV(11,$G(VASV(11)),3)),"^")
"RTN","ECXUTL4",243,0)
 . I $G(VASV(12))>0,$P($G(VASV(12,$G(VASV(12)),3)),"^")>ECXOEFDT S ECXOEFDT=$P($G(VASV(12,$G(VASV(12)),3)),"^")
"RTN","ECXUTL4",244,0)
 . I $G(VASV(13))>0,$P($G(VASV(13,$G(VASV(13)),3)),"^")>ECXOEFDT S ECXOEFDT=$P($G(VASV(13,$G(VASV(13)),3)),"^")
"RTN","ECXUTL4",245,0)
 . I ECXOEFDT>0 S ECXOEFDT=17000000+ECXOEFDT
"RTN","ECXUTL4",246,0)
 ;
"RTN","ECXUTL4",247,0)
 S ECXPAT("ECXOEF")=ECXOEF
"RTN","ECXUTL4",248,0)
 S ECXPAT("ECXOEFDT")=ECXOEFDT
"RTN","ECXUTL4",249,0)
 Q
"RTN","ECXUTL4",250,0)
 ;
"RTN","ECXUTL4",251,0)
SHAD(ECXDFN) ; Get PROJ 112/SHAD indicator
"RTN","ECXUTL4",252,0)
 ;
"RTN","ECXUTL4",253,0)
 ; Input:
"RTN","ECXUTL4",254,0)
 ;   ECXDFN  - Patient DFN
"RTN","ECXUTL4",255,0)
 ;
"RTN","ECXUTL4",256,0)
 ;Output:
"RTN","ECXUTL4",257,0)
 ;             PROJ 112/SHAD DX (Y/N/U)
"RTN","ECXUTL4",258,0)
 ;             Error -1, missing parameter
"RTN","ECXUTL4",259,0)
 ;
"RTN","ECXUTL4",260,0)
 N ECXSHAD
"RTN","ECXUTL4",261,0)
 S ECXDFN=$G(ECXDFN)
"RTN","ECXUTL4",262,0)
 S ECXSHAD=$$GETSHAD^DGUTL3(ECXDFN)
"RTN","ECXUTL4",263,0)
 S ECXSHAD=$S(ECXSHAD=1:"Y",ECXSHAD=0:"N",ECXSHAD="":"U",1:-1)
"RTN","ECXUTL4",264,0)
 Q ECXSHAD
"RTN","ECXUTL5")
0^5^B49444262^B38455893
"RTN","ECXUTL5",1,0)
ECXUTL5 ;ALB/JRC - Utilities for DSS Extracts ;5/30/18  09:31
"RTN","ECXUTL5",2,0)
 ;;3.0;DSS EXTRACTS;**71,84,92,103,105,120,136,166,170**;Dec 22, 1997;Build 12
"RTN","ECXUTL5",3,0)
 ;
"RTN","ECXUTL5",4,0)
REPEAT(CHAR,TIMES) ;REPEAT A STRING
"RTN","ECXUTL5",5,0)
 ;INPUT  : CHAR - Character to repeat
"RTN","ECXUTL5",6,0)
 ;         TIMES - Number of times to repeat CHAR
"RTN","ECXUTL5",7,0)
 ;OUTPUT : s - String of CHAR that is TIMES long
"RTN","ECXUTL5",8,0)
 ;         "" - Error (bad input)
"RTN","ECXUTL5",9,0)
 ;
"RTN","ECXUTL5",10,0)
 ;CHECK INPUT
"RTN","ECXUTL5",11,0)
 Q:($G(CHAR)="") ""
"RTN","ECXUTL5",12,0)
 Q:((+$G(TIMES))=0) ""
"RTN","ECXUTL5",13,0)
 ;RETURN STRING
"RTN","ECXUTL5",14,0)
 Q $TR($J("",TIMES)," ",CHAR)
"RTN","ECXUTL5",15,0)
INSERT(INSTR,OUTSTR,COLUMN,LENGTH) ;INSERT A STRING INTO ANOTHER
"RTN","ECXUTL5",16,0)
 ;INPUT  : INSTR - String to insert
"RTN","ECXUTL5",17,0)
 ;         OUTSTR - String to insert into
"RTN","ECXUTL5",18,0)
 ;         COLUMN - Where to begin insertion (defaults to end of OUTSTR)
"RTN","ECXUTL5",19,0)
 ;         LENGTH - Number of characters to clear from OUTSTR
"RTN","ECXUTL5",20,0)
 ;                  (defaults to length of INSTR)
"RTN","ECXUTL5",21,0)
 ;OUTPUT : s - INSTR will be placed into OUTSTR starting at COLUMN
"RTN","ECXUTL5",22,0)
 ;             using LENGTH characters
"RTN","ECXUTL5",23,0)
 ;         "" - Error (bad input)
"RTN","ECXUTL5",24,0)
 ;
"RTN","ECXUTL5",25,0)
 ;NOTE : This module is based on $$SETSTR^VALM1
"RTN","ECXUTL5",26,0)
 ;
"RTN","ECXUTL5",27,0)
 ;CHECK INPUT
"RTN","ECXUTL5",28,0)
 Q:('$D(INSTR)) ""
"RTN","ECXUTL5",29,0)
 Q:('$D(OUTSTR)) ""
"RTN","ECXUTL5",30,0)
 S:('$D(COLUMN)) COLUMN=$L(OUTSTR)+1
"RTN","ECXUTL5",31,0)
 S:('$D(LENGTH)) LENGTH=$L(INSTR)
"RTN","ECXUTL5",32,0)
 ;DECLARE VARIABLES
"RTN","ECXUTL5",33,0)
 N FRONT,END
"RTN","ECXUTL5",34,0)
 S FRONT=$E((OUTSTR_$J("",COLUMN-1)),1,(COLUMN-1))
"RTN","ECXUTL5",35,0)
 S END=$E(OUTSTR,(COLUMN+LENGTH),$L(OUTSTR))
"RTN","ECXUTL5",36,0)
 ;INSERT STRING
"RTN","ECXUTL5",37,0)
 Q FRONT_$E((INSTR_$J("",LENGTH)),1,LENGTH)_END
"RTN","ECXUTL5",38,0)
TYPE(DFN) ;Determine patient type DBIA #2511
"RTN","ECXUTL5",39,0)
 ;   input 
"RTN","ECXUTL5",40,0)
 ;   DFN = patient ien
"RTN","ECXUTL5",41,0)
 ;
"RTN","ECXUTL5",42,0)
 ;   output
"RTN","ECXUTL5",43,0)
 ;   ECXPTYPE = patient type external value from fle 391
"RTN","ECXUTL5",44,0)
 ;
"RTN","ECXUTL5",45,0)
 ;          AC = ACTIVE DUTY        MI = MILITARY RETIREE
"RTN","ECXUTL5",46,0)
 ;          AL = ALLIED VETERAN     NO = NON-VETERAN (OTHER)
"RTN","ECXUTL5",47,0)
 ;          CO = COLLATERAL         NS = NSC VETERAN
"RTN","ECXUTL5",48,0)
 ;          EM = EMPLOYEE           SC = SC VETERAN
"RTN","ECXUTL5",49,0)
 ;          IN = INELIGIBLE         TR = TRICARE
"RTN","ECXUTL5",50,0)
 ;          return value 0 if no data found, 1 if data found
"RTN","ECXUTL5",51,0)
 ;
"RTN","ECXUTL5",52,0)
 N TYPE,ECXPTYPE
"RTN","ECXUTL5",53,0)
 ;Check input
"RTN","ECXUTL5",54,0)
 Q:'$D(DFN) ""
"RTN","ECXUTL5",55,0)
 S (TYPE,ECXPTYPE)=""
"RTN","ECXUTL5",56,0)
 S TYPE=$G(^DPT(DFN,"TYPE"))
"RTN","ECXUTL5",57,0)
 I 'TYPE Q ECXPTYPE
"RTN","ECXUTL5",58,0)
 S ECXPTYPE=$P($G(^DG(391,TYPE,0)),U,1)
"RTN","ECXUTL5",59,0)
 S ECXPTYPE=$E(ECXPTYPE,1,2)
"RTN","ECXUTL5",60,0)
 Q ECXPTYPE
"RTN","ECXUTL5",61,0)
CVEDT(DFN,DATE) ;Determine patient CV status DBIA #4156
"RTN","ECXUTL5",62,0)
 ;   input
"RTN","ECXUTL5",63,0)
 ;   DFN = patient ien
"RTN","ECXUTL5",64,0)
 ;
"RTN","ECXUTL5",65,0)
 ;   output
"RTN","ECXUTL5",66,0)
 ;   ECXCVE = combat veteran status eligibility
"RTN","ECXUTL5",67,0)
 ;   ECXCVEDT = combat veteran eligibility end date
"RTN","ECXUTL5",68,0)
 ;   ECXCVENC = combat veteran encounter
"RTN","ECXUTL5",69,0)
 ;Initialize variables
"RTN","ECXUTL5",70,0)
 N CVSTAT
"RTN","ECXUTL5",71,0)
 S (CVSTAT,ECXCVE,ECXCVEDT,ECXCVENC)=""
"RTN","ECXUTL5",72,0)
 ;Check input
"RTN","ECXUTL5",73,0)
 Q:'$D(DFN) 0
"RTN","ECXUTL5",74,0)
 ;Call CV API
"RTN","ECXUTL5",75,0)
 S CVSTAT=$$CVEDT^DGCV(DFN,DATE)
"RTN","ECXUTL5",76,0)
 I CVSTAT<1 Q 0
"RTN","ECXUTL5",77,0)
 ;Veteran been given CV eligibility
"RTN","ECXUTL5",78,0)
 S ECXCVE=$S($P(CVSTAT,U,3)=1:"Y",$P(CVSTAT,U,3)=0:"E",1:"")
"RTN","ECXUTL5",79,0)
 ;Save CV eligibility end date and convert from FM to HL7 format
"RTN","ECXUTL5",80,0)
 S ECXCVEDT=$P(CVSTAT,U,2)
"RTN","ECXUTL5",81,0)
 S ECXCVEDT=$$FMTHL7^XLFDT(ECXCVEDT)
"RTN","ECXUTL5",82,0)
 ;Is the veteran eligible for CV in the date of encounter
"RTN","ECXUTL5",83,0)
 S ECXCVENC=$S($P(CVSTAT,U,3)=1:"Y",1:"")
"RTN","ECXUTL5",84,0)
 Q 1
"RTN","ECXUTL5",85,0)
NPRF ;National patient record flags DBIA #3860
"RTN","ECXUTL5",86,0)
 N ECXARR,FLG
"RTN","ECXUTL5",87,0)
 S ECXNPRFI="",CNT=$$GETACT^DGPFAPI(ECXDFN,"ECXARR"),FLG=""
"RTN","ECXUTL5",88,0)
 I 'CNT Q
"RTN","ECXUTL5",89,0)
 F I=1:1:CNT D  Q:FLG
"RTN","ECXUTL5",90,0)
 .I ECXARR(I,"CATEGORY")["NATIONAL" S ECXNPRFI="Y",FLG=1
"RTN","ECXUTL5",91,0)
 Q
"RTN","ECXUTL5",92,0)
RXPTST(K) ;Rx patient status DBIA #2511
"RTN","ECXUTL5",93,0)
 N ECXDIC,STAT
"RTN","ECXUTL5",94,0)
 S (ECXDIC,STAT)=""
"RTN","ECXUTL5",95,0)
 ;Check input
"RTN","ECXUTL5",96,0)
 Q:'$D(K) STAT
"RTN","ECXUTL5",97,0)
 S DA=K,DIC="^PS(53,",DIQ(0)="I",DIQ="ECXDIC",DR="6"
"RTN","ECXUTL5",98,0)
 D EN^DIQ1
"RTN","ECXUTL5",99,0)
 S STAT=$G(ECXDIC(53,K,6,"I"))
"RTN","ECXUTL5",100,0)
 S STAT=$S(STAT=1:"SC",STAT=2:"AA",STAT=3:"OTH",STAT=4:"INP",STAT=5:"NON",1:"")
"RTN","ECXUTL5",101,0)
 Q STAT
"RTN","ECXUTL5",102,0)
NONVAP(K) ;Non-va prescriber DBIA #10060
"RTN","ECXUTL5",103,0)
 N ECXDIC,NONVAP
"RTN","ECXUTL5",104,0)
 S (ECXDIC,NONVAP)=""
"RTN","ECXUTL5",105,0)
 Q:'$D(K) NONVAP
"RTN","ECXUTL5",106,0)
 S DA=K,DIC="^VA(200,",DIQ(0)="I",DIQ="ECXDIC",DR="53.91"
"RTN","ECXUTL5",107,0)
 D EN^DIQ1
"RTN","ECXUTL5",108,0)
 S NONVAP=$G(ECXDIC(200,K,53.91,"I"))
"RTN","ECXUTL5",109,0)
 I NONVAP S NONVAP="Y"
"RTN","ECXUTL5",110,0)
 Q NONVAP
"RTN","ECXUTL5",111,0)
DOIVPO(K,L) ;Add destination for outpatient ivp orders
"RTN","ECXUTL5",112,0)
 ;     Input     K - DFN
"RTN","ECXUTL5",113,0)
 ;               L - Order # from Pharmacy Patient File (#55)
"RTN","ECXUTL5",114,0)
 ;
"RTN","ECXUTL5",115,0)
 ;     Output     ordering stop code
"RTN","ECXUTL5",116,0)
 ;
"RTN","ECXUTL5",117,0)
 N ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE,DIC,DIQ,DR,DA
"RTN","ECXUTL5",118,0)
 S (ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE)=""
"RTN","ECXUTL5",119,0)
 ;Check input
"RTN","ECXUTL5",120,0)
 Q:'K!'(L) SCODE
"RTN","ECXUTL5",121,0)
 ;Check treating specialty
"RTN","ECXUTL5",122,0)
 S SCODE=$$TSSC($G(ECXTS)) I SCODE>0 Q SCODE
"RTN","ECXUTL5",123,0)
 ;Go to pharmacy patient file (#55) and return value of field (#136)
"RTN","ECXUTL5",124,0)
 S DIC=55,DIQ(0)="I",DIQ="ECXDIC",DR="100",DR(55.01)="136",DA=K,DA(55.01)=L
"RTN","ECXUTL5",125,0)
 D EN^DIQ1
"RTN","ECXUTL5",126,0)
 S CLINIC=$G(ECXDIC(55.01,L,136,"I"))
"RTN","ECXUTL5",127,0)
 I 'CLINIC Q SCODE
"RTN","ECXUTL5",128,0)
 ;Get stop code pointer to file 40.7 from file 44
"RTN","ECXUTL5",129,0)
 S DIC="^SC(",DIQ(0)="I",DIQ="ECXDICA",DR="8",DA=CLINIC D EN^DIQ1
"RTN","ECXUTL5",130,0)
 S SCODE=ECXDICA(44,CLINIC,8,"I")
"RTN","ECXUTL5",131,0)
 ;Get stop code external value
"RTN","ECXUTL5",132,0)
 S DIC="^DIC(40.7,",DIQ(0)="E",DIQ="ECXDICB",DR="1",DA=SCODE D EN^DIQ1
"RTN","ECXUTL5",133,0)
 S SCODE=$G(ECXDICB(40.7,SCODE,1,"E"))
"RTN","ECXUTL5",134,0)
 Q SCODE
"RTN","ECXUTL5",135,0)
 ;
"RTN","ECXUTL5",136,0)
DOUDO(K,L) ;Add destination for outpatient udp orders
"RTN","ECXUTL5",137,0)
 ;     Input     K - DFN
"RTN","ECXUTL5",138,0)
 ;               L - Order # from Pharmacy Patient File (#55)
"RTN","ECXUTL5",139,0)
 ;
"RTN","ECXUTL5",140,0)
 ;     Output     ordering stop code
"RTN","ECXUTL5",141,0)
 ;
"RTN","ECXUTL5",142,0)
 N ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE,DIC,DIQ,DR,DA
"RTN","ECXUTL5",143,0)
 S (ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE)=""
"RTN","ECXUTL5",144,0)
 ;Check treating specialty
"RTN","ECXUTL5",145,0)
 S SCODE=$$TSSC($G(ECXTS)) I SCODE>0 Q SCODE
"RTN","ECXUTL5",146,0)
 ;Check input
"RTN","ECXUTL5",147,0)
 Q:'K!'(L) SCODE
"RTN","ECXUTL5",148,0)
 S DIC=55,DIQ(0)="I",DIQ="ECXDIC",DR="62",DR(55.06)="130",DA=K,DA(55.06)=L
"RTN","ECXUTL5",149,0)
 D EN^DIQ1
"RTN","ECXUTL5",150,0)
 S CLINIC=$G(ECXDIC(55.06,L,130,"I"))
"RTN","ECXUTL5",151,0)
 I 'CLINIC Q SCODE
"RTN","ECXUTL5",152,0)
 ;Get stop code pointer to file 40.7 from file 44
"RTN","ECXUTL5",153,0)
 S DIC="^SC(",DIQ(0)="I",DIQ="ECXDICA",DR="8",DA=CLINIC D EN^DIQ1
"RTN","ECXUTL5",154,0)
 S SCODE=ECXDICA(44,CLINIC,8,"I")
"RTN","ECXUTL5",155,0)
 ;Get stop code external value
"RTN","ECXUTL5",156,0)
 S DIC="^DIC(40.7,",DIQ(0)="E",DIQ="ECXDICB",DR="1",DA=SCODE D EN^DIQ1
"RTN","ECXUTL5",157,0)
 S SCODE=$G(ECXDICB(40.7,SCODE,1,"E"))
"RTN","ECXUTL5",158,0)
 Q SCODE
"RTN","ECXUTL5",159,0)
 ;
"RTN","ECXUTL5",160,0)
PHAAPI(DRUG) ;Call Pharmacy drug file API dbia 4483
"RTN","ECXUTL5",161,0)
 ;   Input: drug file (#50) ien
"RTN","ECXUTL5",162,0)
 ;
"RTN","ECXUTL5",163,0)
 ;   Output: generic name ^ classification ^ ndc ^ dea hand
"RTN","ECXUTL5",164,0)
 ;            ^ ndf file entry # ^ psndf va product entry ^
"RTN","ECXUTL5",165,0)
 ;            price per disp unit ^ dispense unit
"RTN","ECXUTL5",166,0)
 ;
"RTN","ECXUTL5",167,0)
 ;Initialize variables and scratch global
"RTN","ECXUTL5",168,0)
 N NAME,CLASS,NDC,INV,NDF,P1,P3,PPDU,UNIT,ARRAY,DATA
"RTN","ECXUTL5",169,0)
 S (NAME,CLASS,NDC,INV,NDF,P1,P3,PPDU,ARRAY,DATA)=""
"RTN","ECXUTL5",170,0)
 S ARRAY="^TMP($J,""ECXLIST"")"
"RTN","ECXUTL5",171,0)
 K @ARRAY
"RTN","ECXUTL5",172,0)
 D DATA^PSS50(DRUG,,,,,"ECXLIST")
"RTN","ECXUTL5",173,0)
 I @ARRAY@(0)'>0 Q "^^^^^^"
"RTN","ECXUTL5",174,0)
 S NAME=@ARRAY@(DRUG,.01),CLASS=@ARRAY@(DRUG,2),NDC=@ARRAY@(DRUG,31)
"RTN","ECXUTL5",175,0)
 S INV=@ARRAY@(DRUG,3),P1=$P(@ARRAY@(DRUG,20),U),P3=$P(@ARRAY@(DRUG,22),U),PPDU=@ARRAY@(DRUG,16),UNIT=@ARRAY@(DRUG,14.5)
"RTN","ECXUTL5",176,0)
 I NDC="",$G(ECXRPT)'="INC FEEDER",$G(INV)["S" D  ;170 Modify NDC if blank and we're not running the incomplete feeder key report and it's a supply item
"RTN","ECXUTL5",177,0)
 .S NDC="LCL"_$$RJ^XLFSTR($E(DRUG,$S($L(DRUG)'>9:1,1:1+($L(DRUG)-9)),$L(DRUG)),9,0) ;Set NDC to LCL concatenated with the last 9 digits of IEN if IEN is longer than 9 digits
"RTN","ECXUTL5",178,0)
 .S NDC=$E(NDC,1,6)_"-"_$E(NDC,7,10)_"-"_$E(NDC,11,12) ;Put NDC in xxxxxx-xxxx-xx format
"RTN","ECXUTL5",179,0)
 K @ARRAY
"RTN","ECXUTL5",180,0)
 Q NAME_U_CLASS_U_NDC_U_INV_U_P1_U_P3_U_PPDU_U_UNIT
"RTN","ECXUTL5",181,0)
 ;
"RTN","ECXUTL5",182,0)
TSSC(X) ;Check treating specialty (ts) and if ts equals any of the following
"RTN","ECXUTL5",183,0)
 ;18,23,24,36,41,65,94,108(1J) then assign predefined code and return value
"RTN","ECXUTL5",184,0)
 ;
"RTN","ECXUTL5",185,0)
 ;    Input: treating specialty
"RTN","ECXUTL5",186,0)
 ;    Output: Ordering stop code
"RTN","ECXUTL5",187,0)
 ;
"RTN","ECXUTL5",188,0)
 S CODE=$S(X=18:293,X=23:295,X=24:290,X=36:294,X=41:296,X=65:291,X=94:292,X=108:297,1:"")
"RTN","ECXUTL5",189,0)
 Q CODE
"RTN","ECXUTL5",190,0)
 ;
"RTN","ECXUTL5",191,0)
PSJ59P5(X) ;Get iv room division
"RTN","ECXUTL5",192,0)
 ;   Input  X - iv room ien
"RTN","ECXUTL5",193,0)
 ;
"RTN","ECXUTL5",194,0)
 ;   Output - field .02 division
"RTN","ECXUTL5",195,0)
 ;Init variables
"RTN","ECXUTL5",196,0)
 N DIV S DIV=""
"RTN","ECXUTL5",197,0)
 ;Check input
"RTN","ECXUTL5",198,0)
 I 'X  Q DIV
"RTN","ECXUTL5",199,0)
 D ALL^PSJ59P5(X,,"ECXDIV")
"RTN","ECXUTL5",200,0)
 S DIV=$P($G(^TMP($J,"ECXDIV",X,.02)),U)
"RTN","ECXUTL5",201,0)
 K ^TMP($J,"ECXDIV")
"RTN","ECXUTL5",202,0)
 Q DIV
"RTN","ECXUTL5",203,0)
 ;
"RTN","ECXUTL5",204,0)
SCRX(IEN) ;Service connected prescription
"RTN","ECXUTL5",205,0)
 ;Init variables
"RTN","ECXUTL5",206,0)
 N DIC,DR,DA,ECXDIQ
"RTN","ECXUTL5",207,0)
 ;Check input
"RTN","ECXUTL5",208,0)
 I '$G(IEN) Q ""
"RTN","ECXUTL5",209,0)
 S DIC=52,DR="116",DA=IEN,DIQ="ECXDIQ"
"RTN","ECXUTL5",210,0)
 D DIQ^PSODI(DIC,DIC,DR,DA,DIQ)
"RTN","ECXUTL5",211,0)
 Q $S($G(ECXDIQ(52,DA,116))="YES":"Y",$G(ECXDIQ(52,DA,116))="NO":"N",1:"")
"RTN","ECXUTL5",212,0)
 ;
"RTN","ECXUTL5",213,0)
SSN(SSN,FILE) ; extended validation of ssn
"RTN","ECXUTL5",214,0)
 ;       input:     ssn - social security number to validate
"RTN","ECXUTL5",215,0)
 ;                  file - optional "", 2 or 67, the only check is for
"RTN","ECXUTL5",216,0)
 ;                         reference lab file (#67) in which case ssn
"RTN","ECXUTL5",217,0)
 ;                         "000123456" is considered a valid ssn.
"RTN","ECXUTL5",218,0)
 ;        output:   0 - test patient or invalid ssn
"RTN","ECXUTL5",219,0)
 ;                  1 - valid ssn
"RTN","ECXUTL5",220,0)
 ;
"RTN","ECXUTL5",221,0)
 ;check input
"RTN","ECXUTL5",222,0)
 I $G(SSN)']"" Q 0
"RTN","ECXUTL5",223,0)
 S FILE=$G(FILE)
"RTN","ECXUTL5",224,0)
 I (FILE=67)&(SSN="000123456") Q 1
"RTN","ECXUTL5",225,0)
 I $L(SSN)=10&($E(SSN,10)="P") Q 1  ;166 Consider pseudo SSNs valid
"RTN","ECXUTL5",226,0)
 I $E(SSN)=9 Q 0  ;170, Added back filtering of SSNs that start with 9
"RTN","ECXUTL5",227,0)
 I (SSN="123456789")!(SSN="111111111")!(SSN="222222222")!(SSN="333333333")!(SSN="444444444")!(SSN="555555555")!($E(SSN,1,3)="666")!($E(SSN,4,5)="00")!($E(SSN,1,3)="000") Q 0
"RTN","ECXUTL5",228,0)
 I SSN="777777777"!(SSN="888888888")!(SSN="999999999") Q 0  ;136 adding new exclusions for the 7, 8, and 9 series where the numbers repeat
"RTN","ECXUTL5",229,0)
 I $E(SSN,6,9)="0000" Q 0  ;170 Added filtering of last 4 being all zeros
"RTN","ECXUTL5",230,0)
 Q 1
"RTN","ECXUTL5",231,0)
 ;
"RTN","ECXUTL6")
0^38^B75618868^B62760554
"RTN","ECXUTL6",1,0)
ECXUTL6 ;ALB/JRC - Utilities for DSS Extracts ;6/29/18  09:24
"RTN","ECXUTL6",2,0)
 ;;3.0;DSS EXTRACTS;**92,105,112,119,132,154,170**;Dec 22, 1997;Build 12
"RTN","ECXUTL6",3,0)
 ;
"RTN","ECXUTL6",4,0)
NUTKEY(P,D) ;Generate n&fs feeder key
"RTN","ECXUTL6",5,0)
 ;Required variables
"RTN","ECXUTL6",6,0)
 ;      p  - diet type production diet, standing orders, supplemental
"RTN","ECXUTL6",7,0)
 ;           feedings, or tube feedings.
"RTN","ECXUTL6",8,0)
 ;      d  - diet ien from files 116.2, 118.3, 118, or 118.2
"RTN","ECXUTL6",9,0)
 ;Check input
"RTN","ECXUTL6",10,0)
 I $G(P)=""!'$G(D) Q ""
"RTN","ECXUTL6",11,0)
 ;Init variables
"RTN","ECXUTL6",12,0)
 N PRO,IENS,CODE,DIET
"RTN","ECXUTL6",13,0)
 S (PRO,IENS,CODE,DIET)=0
"RTN","ECXUTL6",14,0)
 S PRO=$O(^ECX(728.45,"B",P,PRO))
"RTN","ECXUTL6",15,0)
 S CODE=D_$S(P="PD":";FH(116.2,",P="SO":";FH(118.3,",P="SF":";FH(118,",P="TF":";FH(118.2,",1:"")
"RTN","ECXUTL6",16,0)
 S DIET=0,DIET=$O(^ECX(728.45,+PRO,1,"B",CODE,DIET))
"RTN","ECXUTL6",17,0)
 S IENS=""_DIET_","_PRO_","_""
"RTN","ECXUTL6",18,0)
 Q $$GET1^DIQ(728.451,IENS,1)
"RTN","ECXUTL6",19,0)
 ;
"RTN","ECXUTL6",20,0)
NUTLOC(P,D,FPD,FDD,FPF,DLT,DFL) ;Define nutrition fields
"RTN","ECXUTL6",21,0)
 ;Required variables
"RTN","ECXUTL6",22,0)
 ;      p  - patient status, inpatient or outpatient
"RTN","ECXUTL6",23,0)
 ;
"RTN","ECXUTL6",24,0)
 ;      d  - diet type production diet, standing orders, supplemental
"RTN","ECXUTL6",25,0)
 ;            feedings, or tube feedings.
"RTN","ECXUTL6",26,0)
 ;    Output: food production division, food delivery division, food
"RTN","ECXUTL6",27,0)
 ;            production facility, food delivery type, delivery feeder
"RTN","ECXUTL6",28,0)
 ;            location
"RTN","ECXUTL6",29,0)
 ;Init variables
"RTN","ECXUTL6",30,0)
 N WARD,TRSVP,CRSVP,OPLOC,MASWARD
"RTN","ECXUTL6",31,0)
 S (CRSVP,TRSVP)=0,(WARD,DLT,DFL,MASWARD)=""
"RTN","ECXUTL6",32,0)
 S OPLOC=""
"RTN","ECXUTL6",33,0)
 ;Check input
"RTN","ECXUTL6",34,0)
 I $G(P)=""!($G(D)="")!'($G(FHDFN)) Q ""
"RTN","ECXUTL6",35,0)
 ;Get food production facility for inpatient, use 115.1.13 (dietetic
"RTN","ECXUTL6",36,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",37,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",38,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",39,0)
 I P="INP" D
"RTN","ECXUTL6",40,0)
 .N VAHOW
"RTN","ECXUTL6",41,0)
 .K ^UTILITY("VAIP",$J)
"RTN","ECXUTL6",42,0)
 .S DFN=$P($G(^FHPT(FHDFN,0)),U,3)
"RTN","ECXUTL6",43,0)
 .S VAIP("D")=$G(SDATE),VAHOW=2
"RTN","ECXUTL6",44,0)
 .D IN5^VADPT
"RTN","ECXUTL6",45,0)
 .S MASWARD=+^UTILITY("VAIP",$J,5)
"RTN","ECXUTL6",46,0)
 .S WARD=$O(^FH(119.6,"AW",+MASWARD,0))
"RTN","ECXUTL6",47,0)
 .S:+WARD'>0 WARD=""
"RTN","ECXUTL6",48,0)
 .S TRSVP=$$GET1^DIQ(119.6,WARD,3,"I")
"RTN","ECXUTL6",49,0)
 .S CRSVP=$$GET1^DIQ(119.6,WARD,4,"I")
"RTN","ECXUTL6",50,0)
 .;Get divisions
"RTN","ECXUTL6",51,0)
 .D GETDIV
"RTN","ECXUTL6",52,0)
 .Q
"RTN","ECXUTL6",53,0)
 ;
"RTN","ECXUTL6",54,0)
 ;Get food production facility for OP Supplemental feedings,
"RTN","ECXUTL6",55,0)
 ;use 115.1.13 (dietetic
"RTN","ECXUTL6",56,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",57,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",58,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",59,0)
 I P["OP",D["SF" D
"RTN","ECXUTL6",60,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",61,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",62,0)
 .;Get delivery division
"RTN","ECXUTL6",63,0)
 .D GETDIV
"RTN","ECXUTL6",64,0)
 .Q
"RTN","ECXUTL6",65,0)
 ;Get food production facility for OP Standing Orders,
"RTN","ECXUTL6",66,0)
 ;use 115.1.13 (dietetic
"RTN","ECXUTL6",67,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",68,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",69,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",70,0)
 I P["OP",D["SO" D
"RTN","ECXUTL6",71,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",72,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",73,0)
 .;Get delivery division
"RTN","ECXUTL6",74,0)
 .D GETDIV
"RTN","ECXUTL6",75,0)
 .Q
"RTN","ECXUTL6",76,0)
 ;Get food production facility for outpatient recurring meal, use
"RTN","ECXUTL6",77,0)
 ;115.16.2 (outpatient location) which points to file 119.6 (nutrition
"RTN","ECXUTL6",78,0)
 ;location) field 3 (tray service point) or field 4 (cafeteria service
"RTN","ECXUTL6",79,0)
 ;point), which points to 119.72 (production facility) field 2.
"RTN","ECXUTL6",80,0)
 I P["OP",D["RM" D
"RTN","ECXUTL6",81,0)
 .S OPLOC=""_$P(NODE,U,3)_","_"",TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",82,0)
 .D GETDIV
"RTN","ECXUTL6",83,0)
 .Q
"RTN","ECXUTL6",84,0)
 ;
"RTN","ECXUTL6",85,0)
 ;Get food production facility for outpatient tube feeding, use
"RTN","ECXUTL6",86,0)
 ;115.16.2 (outpatient location) then use 119.6 nutrition location
"RTN","ECXUTL6",87,0)
 ;which points to 119.72 field 2.
"RTN","ECXUTL6",88,0)
 I P["OP",D["TF" D
"RTN","ECXUTL6",89,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",90,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",91,0)
 .;Get delivery division
"RTN","ECXUTL6",92,0)
 .D GETDIV
"RTN","ECXUTL6",93,0)
 .Q
"RTN","ECXUTL6",94,0)
 ;
"RTN","ECXUTL6",95,0)
 ;Get food production facility for special meals, use 115.17.2
"RTN","ECXUTL6",96,0)
 ;location field 2 which is a pointer to 119.6 (nutrition location)
"RTN","ECXUTL6",97,0)
 ;which points to 119.72 via field 2 (tray service point) which points
"RTN","ECXUTL6",98,0)
 ;to file 119.71 (production facility) field 2.
"RTN","ECXUTL6",99,0)
 I P["OP",D["SM" D
"RTN","ECXUTL6",100,0)
 .S OPLOC=""_$P(NODE,U,3)_","_""
"RTN","ECXUTL6",101,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",102,0)
 .;Get delivery division
"RTN","ECXUTL6",103,0)
 .D GETDIV
"RTN","ECXUTL6",104,0)
 .Q
"RTN","ECXUTL6",105,0)
 ;
"RTN","ECXUTL6",106,0)
 ;Get food production facility for outpatient guest meals, use
"RTN","ECXUTL6",107,0)
 ;115.18.4 (outpatient location) then use 119.6 nutrition location
"RTN","ECXUTL6",108,0)
 ;which points to 119.72 (production facility) field 2.
"RTN","ECXUTL6",109,0)
 I P["OP",D["GM" D
"RTN","ECXUTL6",110,0)
 .S OPLOC=""_$P(NODE,U,5)_","_"",TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",111,0)
 .S FPF=$$GET1^DIQ(119.72,""_TRSVP_","_"",2,"I")
"RTN","ECXUTL6",112,0)
 .;Get delivery division
"RTN","ECXUTL6",113,0)
 .D GETDIV
"RTN","ECXUTL6",114,0)
 .Q
"RTN","ECXUTL6",115,0)
 ;
"RTN","ECXUTL6",116,0)
 ;Get delivery location type for patients; with inpatients the type of
"RTN","ECXUTL6",117,0)
 ;service needs to be pulled from the admission node, with outpatients
"RTN","ECXUTL6",118,0)
 ;the type of service needs to be pulled from different nodes and use
"RTN","ECXUTL6",119,0)
 ;field 101 of Nutrition Location file (#119.6). Delivery location
"RTN","ECXUTL6",120,0)
 ;types only set for the following meals:
"RTN","ECXUTL6",121,0)
 ;   Inpatient with a production diet
"RTN","ECXUTL6",122,0)
 ;   Outpatient with a recurring meal
"RTN","ECXUTL6",123,0)
 ;   Outpatient with a special meal
"RTN","ECXUTL6",124,0)
 ;   Outpatient with a guest meal
"RTN","ECXUTL6",125,0)
 ;   all other meals are null
"RTN","ECXUTL6",126,0)
 I P="INP",D="PD" D
"RTN","ECXUTL6",127,0)
 .S DLT=$P($G(NODE),U,8)
"RTN","ECXUTL6",128,0)
 I P="OP",((D="RM")!(D="SM")) D
"RTN","ECXUTL6",129,0)
 .S DLT=$E($$GET1^DIQ(119.6,""_$P(NODE,U,3)_","_"",101,"E"),1)
"RTN","ECXUTL6",130,0)
 I P="OP",D="GM" D
"RTN","ECXUTL6",131,0)
 .S DLT=$E($$GET1^DIQ(119.6,""_$P(NODE,U,5)_","_"",101,"E"),1)
"RTN","ECXUTL6",132,0)
 ;
"RTN","ECXUTL6",133,0)
 ;Delivery feeder location
"RTN","ECXUTL6",134,0)
 I DLT="C" D
"RTN","ECXUTL6",135,0)
 .S DFL=$E($$GET1^DIQ(119.6,WARD,4,"E"),1,10)
"RTN","ECXUTL6",136,0)
 .S IEN=$$GET1^DIQ(119.72,+CRSVP,2,"I")
"RTN","ECXUTL6",137,0)
 .S IEN=""_IEN_";FH(119.71,"
"RTN","ECXUTL6",138,0)
 .S FPF=$O(^ECX(728.46,"B",IEN,FPF))
"RTN","ECXUTL6",139,0)
 .S FPF=$E($$GET1^DIQ(728.46,FPF,.01,"E"),1,10)
"RTN","ECXUTL6",140,0)
 I (DLT["T")!(DLT["D") D
"RTN","ECXUTL6",141,0)
 .I P="INP" D
"RTN","ECXUTL6",142,0)
 ..S DFL=$$GET1^DIQ(42,+MASWARD,44,"I")
"RTN","ECXUTL6",143,0)
 .I P="OP" D
"RTN","ECXUTL6",144,0)
 ..S DFL=$O(^FH(119.6,+OPLOC,"L","B",0))
"RTN","ECXUTL6",145,0)
 I (DLT=""),"SFTFSO"[D D
"RTN","ECXUTL6",146,0)
 .S DFL=$S(TRSVP:$$GET1^DIQ(119.6,+WARD,3,"E"),1:$$GET1^DIQ(119.6,+WARD,4,"E"))
"RTN","ECXUTL6",147,0)
 Q 1
"RTN","ECXUTL6",148,0)
 ;
"RTN","ECXUTL6",149,0)
GETDIV ;Get divisions and food production facility
"RTN","ECXUTL6",150,0)
 ;Init variables
"RTN","ECXUTL6",151,0)
 N IEN,SIEN,SVP
"RTN","ECXUTL6",152,0)
 S (FDD,FPF,FPD)=""
"RTN","ECXUTL6",153,0)
 S SVP=$S(TRSVP:TRSVP,CRSVP:CRSVP,1:"")
"RTN","ECXUTL6",154,0)
 S IEN=$$GET1^DIQ(119.72,+SVP,2,"I")
"RTN","ECXUTL6",155,0)
 Q:'IEN
"RTN","ECXUTL6",156,0)
 ;Get delivery division
"RTN","ECXUTL6",157,0)
 S SIEN=""_+SVP_";FH(119.72,"
"RTN","ECXUTL6",158,0)
 S FDD=$O(^ECX(728.46,"B",SIEN,FDD))
"RTN","ECXUTL6",159,0)
 S FDD=""_$$GET1^DIQ(728.46,FDD,1,"I")_","_""
"RTN","ECXUTL6",160,0)
 S FDD=$$GET1^DIQ(4,FDD,99,"E")
"RTN","ECXUTL6",161,0)
 ;Get production division and food production facility
"RTN","ECXUTL6",162,0)
 S IEN=""_IEN_";FH(119.71,"
"RTN","ECXUTL6",163,0)
 S FPF=$O(^ECX(728.46,"B",IEN,FPF))
"RTN","ECXUTL6",164,0)
 S FPD=""_$$GET1^DIQ(728.46,FPF,1,"I")_","_""
"RTN","ECXUTL6",165,0)
 S FPD=$$GET1^DIQ(4,FPD,99,"E")
"RTN","ECXUTL6",166,0)
 S FPF=$E($$GET1^DIQ(728.46,FPF,.01,"E"),1,10)
"RTN","ECXUTL6",167,0)
 Q
"RTN","ECXUTL6",168,0)
 ;
"RTN","ECXUTL6",169,0)
SUR(CRST,STCD,CLINIC) ;Surgery stop codes and clinic (outpatients only)
"RTN","ECXUTL6",170,0)
 ;Init variables
"RTN","ECXUTL6",171,0)
 S (CRST,STCD,CLINIC)=""
"RTN","ECXUTL6",172,0)
 ;Quit if not outpatient
"RTN","ECXUTL6",173,0)
 Q:$P(EC0,U,12)'="O" ""
"RTN","ECXUTL6",174,0)
 ;Get stop codes (outpatient only)
"RTN","ECXUTL6",175,0)
 I $P(EC0,U,12)="O" D
"RTN","ECXUTL6",176,0)
 .;Get credit stop code (outpatient only)
"RTN","ECXUTL6",177,0)
 .S CRST=""_$$GET1^DIQ(40.7,""_$$GET1^DIQ(44,$$GET1^DIQ(137.45,$P(EC0,U,4),2,"I")_","_""_","_"",2503,"I")_","_"",1,"E")
"RTN","ECXUTL6",178,0)
 .;Get stop code (outpatient only)
"RTN","ECXUTL6",179,0)
 .S STCD=""_$$GET1^DIQ(40.7,""_$$GET1^DIQ(44,$$GET1^DIQ(137.45,$P(EC0,U,4),2,"I")_","_""_","_"",8,"I")_","_"",1,"E")
"RTN","ECXUTL6",180,0)
 ;Clinic for non-or case use associated clinic else non-or location
"RTN","ECXUTL6",181,0)
 ;If non-or case
"RTN","ECXUTL6",182,0)
 I $P($G(ECNO),U)="Y" S CLINIC=$S($P(EC0,U,21):$P(EC0,U,21),1:$P(ECNO,U,2))
"RTN","ECXUTL6",183,0)
 ;Get stop codes non-or cases
"RTN","ECXUTL6",184,0)
 I $P($G(ECNO),U)="Y" D
"RTN","ECXUTL6",185,0)
 .;Get credit stop code for non-or case
"RTN","ECXUTL6",186,0)
 .S CRST=$$GET1^DIQ(40.7,$$GET1^DIQ(44,CLINIC,2503,"I"),1,"E")
"RTN","ECXUTL6",187,0)
 .;Get stop code for non-or case
"RTN","ECXUTL6",188,0)
 .S STCD=$$GET1^DIQ(40.7,$$GET1^DIQ(44,CLINIC,8,"I"),1,"E")
"RTN","ECXUTL6",189,0)
 ;Clinic, not a non-or case use surgical specialty associated clinic
"RTN","ECXUTL6",190,0)
 I $P($G(ECNO),U)'="Y" S CLINIC=$$GET1^DIQ(137.45,+$P(EC0,U,4),2,"I")
"RTN","ECXUTL6",191,0)
 Q 1
"RTN","ECXUTL6",192,0)
 ;
"RTN","ECXUTL6",193,0)
SURPODX(PRODX,PODX1,PODX2,PODX3,PODX4,PODX5) ;Get postop diagnosis codes
"RTN","ECXUTL6",194,0)
 ;Init variables
"RTN","ECXUTL6",195,0)
 N CODE,I,PODX
"RTN","ECXUTL6",196,0)
 S (PRODX,PODX1,PODX2,PODX3,PODX4,PODX5)="",CODE=0
"RTN","ECXUTL6",197,0)
 ;Check input
"RTN","ECXUTL6",198,0)
 Q:'$D(DATAOP) 0
"RTN","ECXUTL6",199,0)
 ;Get principal postop dx code
"RTN","ECXUTL6",200,0)
 I $P(DATAOP,U,3)'="" S PRODX=$$CODEC^ICDEX(80,$P(DATAOP,U,3)) ;154
"RTN","ECXUTL6",201,0)
 ;Get other postop dx codes
"RTN","ECXUTL6",202,0)
 S (CODE,I)=0 F  S CODE=$O(^SRO(136,ECD0,4,CODE)) Q:'CODE  Q:I>5  D
"RTN","ECXUTL6",203,0)
 .S I=I+1,PODX="PODX"_I I $P(^SRO(136,ECD0,4,CODE,0),U)'="" S @PODX=$$CODEC^ICDEX(80,$P(^SRO(136,ECD0,4,CODE,0),U)) ;154
"RTN","ECXUTL6",204,0)
 Q 1
"RTN","ECXUTL6",205,0)
 ;
"RTN","ECXUTL6",206,0)
LOINC(ARRAY) ;Get DSS lab test information out of DSS LOINC CODE (#727.29) file
"RTN","ECXUTL6",207,0)
 ;Input
"RTN","ECXUTL6",208,0)
 ;   ARRAY(LOINC-CK) := array of valid LOINC (#727.29 DSS LOINC CODE)
"RTN","ECXUTL6",209,0)
 ;                      entries with their check digit
"RTN","ECXUTL6",210,0)
 ;   or,
"RTN","ECXUTL6",211,0)
 ;   ARRAY("ALL")    := request for all LOINC entries
"RTN","ECXUTL6",212,0)
 ;Output
"RTN","ECXUTL6",213,0)
 ;   ^TMP($J,"EXCUTL6",LOINC-CK)  =
"RTN","ECXUTL6",214,0)
 ;              zero node of file 727.29 pieces 1 thru 4
"RTN","ECXUTL6",215,0)
 ;              piece 1 := LOINC-CK (LOINC-check digit)
"RTN","ECXUTL6",216,0)
 ;              piece 2 := DSS lar test number
"RTN","ECXUTL6",217,0)
 ;              piece 3 := DSS test name
"RTN","ECXUTL6",218,0)
 ;              piece 4 := DSS Reporting units
"RTN","ECXUTL6",219,0)
 ;              piece 5 := LOINC name
"RTN","ECXUTL6",220,0)
 ;              piece 6 := pointer to LAB LOINC (#95.3) code entry
"RTN","ECXUTL6",221,0)
 ;             (delimited by "^")
"RTN","ECXUTL6",222,0)
 ;          -1 := not a valid loinc entry from file 727.29
"RTN","ECXUTL6",223,0)
 ;          -2 := no dss lar test number associated with loinc
"RTN","ECXUTL6",224,0)
 ;
"RTN","ECXUTL6",225,0)
 ;   ^TMP($J,"ECXUTL6",LOINC-CK,WKLD,SPEC/-or-"DEFAULT",LTEST)= 
"RTN","ECXUTL6",226,0)
 ;              piece 1 := WKLD Code (external)
"RTN","ECXUTL6",227,0)
 ;              piece 2 := specimen (external) or "DEFAULT LOINC"
"RTN","ECXUTL6",228,0)
 ;              piece 3 := laboratory test (external)
"RTN","ECXUTL6",229,0)
 ;              piece 4:= local LOINC code external
"RTN","ECXUTL6",230,0)
 ;             (delimited by "^")
"RTN","ECXUTL6",231,0)
 ;
"RTN","ECXUTL6",232,0)
 ;
"RTN","ECXUTL6",233,0)
 I '$D(ARRAY) Q
"RTN","ECXUTL6",234,0)
 K ^TMP($J,"ECXUTL6")
"RTN","ECXUTL6",235,0)
 N LOINCCK,LIEN,SPEC,EC0,WKLD,WKLD0,TA,LRASSV,LOINCPTR,LTEST,LLNC,LLNCP,SPECD
"RTN","ECXUTL6",236,0)
 S LOINCCK=""
"RTN","ECXUTL6",237,0)
 I $D(ARRAY("ALL")) D
"RTN","ECXUTL6",238,0)
 . F  S LOINCCK=$O(^ECX(727.29,"B",LOINCCK)) Q:'LOINCCK  D EXT
"RTN","ECXUTL6",239,0)
 E  D
"RTN","ECXUTL6",240,0)
 . F  S LOINCCK=$O(ARRAY(LOINCCK)) Q:'LOINCCK  D EXT
"RTN","ECXUTL6",241,0)
 Q
"RTN","ECXUTL6",242,0)
 ;
"RTN","ECXUTL6",243,0)
EXT I '$D(^ECX(727.29,"B",LOINCCK)) S ^TMP($J,"ECXUTL6",LOINCCK)=-1_"^no entry in DSS LOINC CODE (#727.29)." Q
"RTN","ECXUTL6",244,0)
 S LIEN=$O(^ECX(727.29,"B",LOINCCK,0))
"RTN","ECXUTL6",245,0)
 I '$P(^ECX(727.29,LIEN,0),U,2) S ^TMP($J,"ECXUTL6",LOINCCK)=-2_"^no dss test number found." Q
"RTN","ECXUTL6",246,0)
 S EC0=^ECX(727.29,LIEN,0)
"RTN","ECXUTL6",247,0)
 S ^TMP($J,"ECXUTL6",LOINCCK)=EC0_"^"
"RTN","ECXUTL6",248,0)
 S LOINCPTR=""
"RTN","ECXUTL6",249,0)
 ;**Lexicon LOINC Code - test whether LEX*2*75 installed.
"RTN","ECXUTL6",250,0)
 ;  Else, get directly from file #95.3
"RTN","ECXUTL6",251,0)
 S X="LEXLR" X ^%ZOSF("TEST") I '$T D
"RTN","ECXUTL6",252,0)
 . I LOINCCK=$$GET1^DIQ(95.3,$P(LOINCCK,"-"),.01) D
"RTN","ECXUTL6",253,0)
 . . S LOINCPTR=$$GET1^DIQ(95.3,$P(LOINCCK,"-"),.01,"I")
"RTN","ECXUTL6",254,0)
 S X="LEXLR" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL6",255,0)
 . S LOINCPTR=$$CHKCODE^LEXLR(LOINCCK) ;DBIA5547
"RTN","ECXUTL6",256,0)
 ;**
"RTN","ECXUTL6",257,0)
 I LOINCPTR D
"RTN","ECXUTL6",258,0)
 . S ^TMP($J,"ECXUTL6",LOINCCK)=^TMP($J,"ECXUTL6",LOINCCK)_LOINCPTR
"RTN","ECXUTL6",259,0)
 . S WKLD=0 F  S WKLD=$O(^LAM("AI",LOINCPTR,WKLD)) Q:'WKLD  D
"RTN","ECXUTL6",260,0)
 . . S SPEC=0 F  S SPEC=$O(^LAM("AI",LOINCPTR,WKLD,SPEC)) Q:'SPEC  D
"RTN","ECXUTL6",261,0)
 . . . S TA=0
"RTN","ECXUTL6",262,0)
 . . . F  S TA=$O(^LAM(WKLD,5,SPEC,1,TA)) Q:'TA  D
"RTN","ECXUTL6",263,0)
 . . . . S SPECD=^LAM(WKLD,5,SPEC,1,TA,0)
"RTN","ECXUTL6",264,0)
 . . . . S LTEST=$P(SPECD,"^",4)
"RTN","ECXUTL6",265,0)
 . . . . I LTEST,($P($G(^LAB(60,LTEST,64)),"^",2)=WKLD),($$GET1^DIQ(60,LTEST,3,"I")'="N") D
"RTN","ECXUTL6",266,0)
 . . . . . S ^TMP($J,"ECXUTL6",LOINCCK,WKLD,SPEC,LTEST)=$$GET1^DIQ(64,WKLD,.01)_"^"_$$GET1^DIQ(61,SPEC,.01)_"^"_$$GET1^DIQ(60,LTEST,.01)_"^"_LOINCCK
"RTN","ECXUTL6",267,0)
 Q
"RTN","ECXUTL6",268,0)
 ;
"RTN","ECXUTL6",269,0)
INPUTT ;
"RTN","ECXUTL6",270,0)
 N DIC S DIC="^DIC(40.7,",DIC(0)="EMZ",DIC("S")="I '$P(^(0),U,3)&($L($P(^(0),U,2)'=3)) Q"
"RTN","ECXUTL6",271,0)
 D ^DIC K:Y<0 X Q:Y<0
"RTN","ECXUTL6",272,0)
 S X=$S($D(Y(0)):$P(Y(0),U,2),1:"") K:X=""!($L(X)'=3) X K DIC
"RTN","ECXUTL6",273,0)
 Q
"RTN","ECXUTL6",274,0)
 ;
"RTN","ECXUTL6",275,0)
ISASIH(MVMT,TYPE) ;170 Section added to determine if patient is ASIH other facility at movement date/time
"RTN","ECXUTL6",276,0)
 N ASIH,VAIP,DFN
"RTN","ECXUTL6",277,0)
 S ASIH=0
"RTN","ECXUTL6",278,0)
 S:TYPE=2 VAIP("E")=MVMT
"RTN","ECXUTL6",279,0)
 S:TYPE=3 VAIP("D")=$$FMADD^XLFDT($P(^DGPM(MVMT,0),U),,,,-1)
"RTN","ECXUTL6",280,0)
 S DFN=$P($G(^DGPM(MVMT,0)),U,3)
"RTN","ECXUTL6",281,0)
 D IN5^VADPT
"RTN","ECXUTL6",282,0)
 I "^43^45^46^"[("^"_+VAIP(4)_"^") S ASIH=1
"RTN","ECXUTL6",283,0)
 Q ASIH
"RTN","ECXUTL6",284,0)
 ;
"RTN","ECXUTL6",285,0)
NEEDADR(TYPE,MVMT,EXTRACT) ;170 Section added to determine if an admission or discharge record for the ASIH other facility episode of care is needed
"RTN","ECXUTL6",286,0)
 N REC,VAIP,DFN
"RTN","ECXUTL6",287,0)
 S REC=1
"RTN","ECXUTL6",288,0)
 S VAIP("E")=MVMT
"RTN","ECXUTL6",289,0)
 S DFN=$P($G(^DGPM(MVMT,0)),U,3)
"RTN","ECXUTL6",290,0)
 D IN5^VADPT
"RTN","ECXUTL6",291,0)
 I TYPE="TRAN"&(EXTRACT="ADM") I "^43^45^46^"[("^"_$P($G(VAIP(15,3)),U)_"^") S REC=0
"RTN","ECXUTL6",292,0)
 I TYPE="TRAN"&(EXTRACT="MOV") I "^43^45^46^"[("^"_$P($G(VAIP(16,3)),U)_"^")!(+$G(VAIP(16,2))'=2) S REC=0
"RTN","ECXUTL6",293,0)
 I TYPE="DIS" I "^43^45^46^"'[("^"_$P($G(VAIP(15,3)),U)_"^") S REC=0
"RTN","ECXUTL6",294,0)
 Q REC_"^"_$S(REC&(EXTRACT="MOV")&(TYPE="TRAN"):$G(VAIP(16)),REC:MVMT,1:"")
"VER")
8.0^22.2
"^DD",727.802,727.802,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;A:ASIH (OTHER FACILITY);^0;8^Q
"^DD",727.802,727.802,7,.1)
In Out Patient Indicator
"^DD",727.802,727.802,7,3)
Enter the patient's status for this extract entry.
"^DD",727.802,727.802,7,21,0)
^.001^1^1^3180629^^^
"^DD",727.802,727.802,7,21,1,0)
Indicates the patient's status for this extract entry.
"^DD",727.802,727.802,7,23,0)
^^13^13^3180629^
"^DD",727.802,727.802,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.802,727.802,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine patient status.  If
"^DD",727.802,727.802,7,23,3,0)
the patient is an outpatient, processing stops and the field is set to
"^DD",727.802,727.802,7,23,4,0)
O.   If the patient is an inpatient then $$INOUTP^ECXUTL4 is called to
"^DD",727.802,727.802,7,23,5,0)
look at the treating specialty.  If the patient's treating specialty
"^DD",727.802,727.802,7,23,6,0)
exists in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.802,727.802,7,23,7,0)
value of the INPAT/OUTPAT CODE field (#5) of the DSS TREATING SPECIALTY
"^DD",727.802,727.802,7,23,8,0)
TRANSLATION file (#727.831) is used.  If the treating specialty is not
"^DD",727.802,727.802,7,23,9,0)
found in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.802,727.802,7,23,10,0)
indicator is set to I.
"^DD",727.802,727.802,7,23,11,0)
 
"^DD",727.802,727.802,7,23,12,0)
If the patient is ASIH to another facility at the date/time in question 
"^DD",727.802,727.802,7,23,13,0)
then the indicator is set to A.
"^DD",727.802,727.802,7,"DT")
3180626
"^DD",727.802,727.802,9,0)
PLACEHOLD PRIMARY CARE TEAM^FJ4^^0;10^K:$L(X)>4!($L(X)<1) X
"^DD",727.802,727.802,9,.1)
 
"^DD",727.802,727.802,9,3)
Answer must be 1-4 characters in length.
"^DD",727.802,727.802,9,21,0)
^^3^3^3180608^
"^DD",727.802,727.802,9,21,1,0)
This field, previously known as PRIMARY CARE TEAM, is no longer needed. 
"^DD",727.802,727.802,9,21,2,0)
The name has been changed to PLACEHOLD PRIMARY CARE TEAM and its value 
"^DD",727.802,727.802,9,21,3,0)
will be set to null.
"^DD",727.802,727.802,9,23,0)
^.001^1^1^3180608^^^^
"^DD",727.802,727.802,9,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.802,727.802,9,"DT")
3180427
"^DD",727.802,727.802,30,0)
MOVEMENT FILE #^P405'^DGPM(^0;31^Q
"^DD",727.802,727.802,30,.1)

"^DD",727.802,727.802,30,3)
Enter the current movement number for this patient.
"^DD",727.802,727.802,30,21,0)
^.001^1^1^3180808^^^^
"^DD",727.802,727.802,30,21,1,0)
Current movement number for this patient.
"^DD",727.802,727.802,30,23,0)
^^11^11^3180808^
"^DD",727.802,727.802,30,23,1,0)
Pointer to the PATIENT MOVEMENT file (#405). Using the "ATT1" or "ATT2"
"^DD",727.802,727.802,30,23,2,0)
cross reference on the PATIENT MOVEMENT file (#405) and the patient
"^DD",727.802,727.802,30,23,3,0)
pointer (DFN) stored in the PATIENT NO. - DFN field (#4) in the ADMISSION
"^DD",727.802,727.802,30,23,4,0)
EXTRACT file (#727.802), this is a pointer to the file #405 record for the
"^DD",727.802,727.802,30,23,5,0)
patient's admission.
"^DD",727.802,727.802,30,23,6,0)
 
"^DD",727.802,727.802,30,23,7,0)
In addition to standard admission movements found in the "ATT1" cross 
"^DD",727.802,727.802,30,23,8,0)
reference, the "ATT2" cross reference is used to find any ASIH OTHER 
"^DD",727.802,727.802,30,23,9,0)
FACILITY type transfers.  When a patient goes ASIH OTHER FACILITY, this 
"^DD",727.802,727.802,30,23,10,0)
starts a new episode of care and an admission record, related to that 
"^DD",727.802,727.802,30,23,11,0)
movement, is created.
"^DD",727.802,727.802,30,"DT")
3180809
"^DD",727.802,727.802,34,0)
PLACEHOLD PC PROVIDER^FJ11^^0;35^K:$L(X)>11!($L(X)<1) X
"^DD",727.802,727.802,34,.1)
Primary Care Provider
"^DD",727.802,727.802,34,3)
Answer must be 1-11 characters in length.
"^DD",727.802,727.802,34,21,0)
^^3^3^3180430^
"^DD",727.802,727.802,34,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER, is no longer 
"^DD",727.802,727.802,34,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROVIDER and its value 
"^DD",727.802,727.802,34,21,3,0)
will be set to null.
"^DD",727.802,727.802,34,23,0)
^^1^1^3180430^
"^DD",727.802,727.802,34,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.802,727.802,34,"DT")
3180430
"^DD",727.802,727.802,35,0)
PLACEHOLD RACE^FJ1^^0;36^K:$L(X)>1!($L(X)<1) X
"^DD",727.802,727.802,35,.1)

"^DD",727.802,727.802,35,3)
Answer must be 1 character in length.
"^DD",727.802,727.802,35,21,0)
^.001^2^2^3180502^^^^
"^DD",727.802,727.802,35,21,1,0)
This field, previously known as RACE, is no longer needed.  The name has 
"^DD",727.802,727.802,35,21,2,0)
been changed to PLACEHOLD RACE and its value will be set to null.
"^DD",727.802,727.802,35,23,0)
^.001^1^1^3180502^^^^
"^DD",727.802,727.802,35,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.802,727.802,35,"DT")
3180327
"^DD",727.802,727.802,48,0)
PLACEHOLD PC PROV PERSON CLASS^FJ7^^1;12^K:$L(X)>7!($L(X)<7) X
"^DD",727.802,727.802,48,3)
Answer must be 7 characters in length.
"^DD",727.802,727.802,48,21,0)
^^3^3^3180430^
"^DD",727.802,727.802,48,21,1,0)
This field, previously known as PC PROVIDER PERSON CLASS, is no longer
"^DD",727.802,727.802,48,21,2,0)
needed.  The name has been changed to PLACEHOLD PC PROV PERSON CLASS
"^DD",727.802,727.802,48,21,3,0)
and its value will be set to null.
"^DD",727.802,727.802,48,23,0)
^.001^1^1^3180430^^
"^DD",727.802,727.802,48,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.802,727.802,48,"DT")
3180430
"^DD",727.802,727.802,49,0)
PLACEHOLD ASSOC PC PROVIDER^FJ11^^1;13^K:$L(X)>11!($L(X)<2) X
"^DD",727.802,727.802,49,.1)

"^DD",727.802,727.802,49,3)
Answer must be 2-11 characters in length.
"^DD",727.802,727.802,49,21,0)
^^3^3^3180430^
"^DD",727.802,727.802,49,21,1,0)
This field, previously known as ASSOCIATE PC PROVIDER, is no longer
"^DD",727.802,727.802,49,21,2,0)
needed.  The name has been changed to PLACEHOLD ASSOC PC PROVIDER
"^DD",727.802,727.802,49,21,3,0)
and its value will be set to null.
"^DD",727.802,727.802,49,23,0)
^.001^1^1^3180430^^
"^DD",727.802,727.802,49,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.802,727.802,49,"DT")
3180430
"^DD",727.802,727.802,50,0)
PLACEHOLD AS PC PROV PERSON CL^FJ7^^1;14^K:$L(X)>7!($L(X)<7) X
"^DD",727.802,727.802,50,3)
Answer must be 7 characters in length.
"^DD",727.802,727.802,50,21,0)
^^3^3^3180502
"^DD",727.802,727.802,50,21,1,0)
This field, previously known as ASSOC. PC PROV. PERSON CLASS, is no longer
"^DD",727.802,727.802,50,21,2,0)
needed. The name has been changed to PLACEHOLD AS PC PROV PERSON CL and
"^DD",727.802,727.802,50,21,3,0)
its value will be set to null.  
"^DD",727.802,727.802,50,23,0)
^^1^1^3180502
"^DD",727.802,727.802,50,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.802,727.802,50,"DT")
3180502
"^DD",727.802,727.802,64,0)
PLACEHOLD ETHNICITY^FJ6^^1;28^K:$L(X)>6!($L(X)<1) X
"^DD",727.802,727.802,64,.1)

"^DD",727.802,727.802,64,3)
Answer must be 1-6 characters in length.
"^DD",727.802,727.802,64,21,0)
^.001^2^2^3180327^^
"^DD",727.802,727.802,64,21,1,0)
This field, previously known as ETHNICITY, is no longer needed.  The name
"^DD",727.802,727.802,64,21,2,0)
has been changed to PLACEHOLD ETHNICITY and its value will be set to null.
"^DD",727.802,727.802,64,23,0)
^.001^1^1^3180327^^
"^DD",727.802,727.802,64,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.802,727.802,64,"DT")
3180327
"^DD",727.802,727.802,65,0)
PLACEHOLD RACE 1^FJ6^^1;29^K:$L(X)>6!($L(X)<1) X
"^DD",727.802,727.802,65,.1)

"^DD",727.802,727.802,65,3)
Answer must be 1-6 characters in length.
"^DD",727.802,727.802,65,21,0)
^.001^2^2^3180327^^
"^DD",727.802,727.802,65,21,1,0)
This field, previously known as RACE 1, is no longer needed.  The name has
"^DD",727.802,727.802,65,21,2,0)
been changed to PLACEHOLD RACE 1 and its value will be set to null.
"^DD",727.802,727.802,65,23,0)
^.001^1^1^3180327^^
"^DD",727.802,727.802,65,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.802,727.802,65,"DT")
3180327
"^DD",727.802,727.802,84,0)
PLACEHOLD ASSOC PC PROV NPI^F^^2;3^K:$L(X)>15!($L(X)<1) X
"^DD",727.802,727.802,84,3)
Answer must be 1-15 characters in length.
"^DD",727.802,727.802,84,21,0)
^^3^3^3180430^
"^DD",727.802,727.802,84,21,1,0)
This field, previously known as ASSOCIATE PC PROVIDER NPI, is no longer 
"^DD",727.802,727.802,84,21,2,0)
needed.  The name has been changed to PLACEHOLD ASSOC PC PROV NPI and 
"^DD",727.802,727.802,84,21,3,0)
its value will be set to null.
"^DD",727.802,727.802,84,23,0)
^^1^1^3180430^
"^DD",727.802,727.802,84,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.802,727.802,84,"DT")
3180430
"^DD",727.802,727.802,86,0)
PLACEHOLD PC PROVIDER NPI^F^^2;5^K:$L(X)>15!($L(X)<1) X
"^DD",727.802,727.802,86,3)
Answer must be 1-15 characters in length.
"^DD",727.802,727.802,86,21,0)
^.001^3^3^3180503^
"^DD",727.802,727.802,86,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER NPI, is no longer
"^DD",727.802,727.802,86,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROVIDER NPI and its
"^DD",727.802,727.802,86,21,3,0)
value will be set to null.  
"^DD",727.802,727.802,86,23,0)
^.001^1^1^3180503^
"^DD",727.802,727.802,86,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.802,727.802,86,"DT")
3180430
"^DD",727.808,727.808,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;A:ASIH (OTHER FACILITY);^0;8^Q
"^DD",727.808,727.808,7,.1)
In Out Patient Indicator
"^DD",727.808,727.808,7,3)
Enter the patient's status for this extract entry.
"^DD",727.808,727.808,7,21,0)
^.001^1^1^3180629^^^^
"^DD",727.808,727.808,7,21,1,0)
Indicates the patient's status for this extract entry.
"^DD",727.808,727.808,7,23,0)
^^13^13^3180629^
"^DD",727.808,727.808,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.808,727.808,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine patient status.  If
"^DD",727.808,727.808,7,23,3,0)
the patient is an outpatient, processing stops and the field is set to
"^DD",727.808,727.808,7,23,4,0)
O.   If the patient is an inpatient then $$INOUTP^ECXUTL4 is called to
"^DD",727.808,727.808,7,23,5,0)
look at the treating specialty.  If the patient's treating specialty
"^DD",727.808,727.808,7,23,6,0)
exists in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.808,727.808,7,23,7,0)
value of the INPAT/OUTPAT CODE field (#5) of the DSS TREATING SPECIALTY
"^DD",727.808,727.808,7,23,8,0)
TRANSLATION file (#727.831) is used.  If the treating specialty is not
"^DD",727.808,727.808,7,23,9,0)
found in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.808,727.808,7,23,10,0)
indicator is set to I.
"^DD",727.808,727.808,7,23,11,0)
 
"^DD",727.808,727.808,7,23,12,0)
If the patient is ASIH to another facility at the date/time in question 
"^DD",727.808,727.808,7,23,13,0)
then the indicator is set to A.
"^DD",727.808,727.808,7,"DT")
3180626
"^DD",727.808,727.808,10,0)
ADMISSION DATE^FJ8O^^0;11^K:$L(X)>8!($L(X)<8) X
"^DD",727.808,727.808,10,.1)
Admission Date
"^DD",727.808,727.808,10,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.808,727.808,10,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.808,727.808,10,3)
Answer must be 8 characters in length (YYYYMMDD).
"^DD",727.808,727.808,10,21,0)
^.001^2^2^3180822^^^^
"^DD",727.808,727.808,10,21,1,0)
This 8-character string represents the date on which the admission
"^DD",727.808,727.808,10,21,2,0)
associated with this physical movement occurred.
"^DD",727.808,727.808,10,23,0)
^.001^15^15^3180822^^
"^DD",727.808,727.808,10,23,1,0)
A call is made to $$INP^ECXUTL2 using the patient's DFN and the date/time 
"^DD",727.808,727.808,10,23,2,0)
of the patient movement (transfer or discharge).  The call will return 
"^DD",727.808,727.808,10,23,3,0)
the admission date/time associated with this episode of care.  
"^DD",727.808,727.808,10,23,4,0)
 
"^DD",727.808,727.808,10,23,5,0)
In the case of a patient who is ASIH OTHER FACILITY, the admission 
"^DD",727.808,727.808,10,23,6,0)
date/time will be the date/time of the movement that put the patient into
"^DD",727.808,727.808,10,23,7,0)
ASIH OTHER FACILITY status.
"^DD",727.808,727.808,10,23,8,0)
 
"^DD",727.808,727.808,10,23,9,0)
The date portion of the DATE/TIME field (#.01) of the PATIENT MOVEMENT 
"^DD",727.808,727.808,10,23,10,0)
file (#405) is used to populate this field.
"^DD",727.808,727.808,10,23,11,0)
 
"^DD",727.808,727.808,10,23,12,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.808,727.808,10,23,13,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.808,727.808,10,23,14,0)
then a default is used.  The default date value is the value of the 
"^DD",727.808,727.808,10,23,15,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.808,727.808,10,"DT")
3180822
"^DD",727.808,727.808,11,0)
DISCHARGE DATE^FJ8O^^0;12^K:$L(X)>8!($L(X)<8) X
"^DD",727.808,727.808,11,.1)
Discharge Date
"^DD",727.808,727.808,11,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.808,727.808,11,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.808,727.808,11,3)
Answer must be 8 characters in length (YYYYMMDD).
"^DD",727.808,727.808,11,21,0)
^.001^2^2^3180822^^^^
"^DD",727.808,727.808,11,21,1,0)
This 8-character string represents the date on which the Discharge
"^DD",727.808,727.808,11,21,2,0)
occurred for discharge-type movements.
"^DD",727.808,727.808,11,23,0)
^.001^15^15^3180822^^
"^DD",727.808,727.808,11,23,1,0)
A call is made to $$INP^ECXUTL2 using the patient's DFN and the date/time 
"^DD",727.808,727.808,11,23,2,0)
of the patient movement (transfer or discharge).  The call will return 
"^DD",727.808,727.808,11,23,3,0)
the discharge date/time associated with this episode of care.  
"^DD",727.808,727.808,11,23,4,0)
 
"^DD",727.808,727.808,11,23,5,0)
In the case of a patient who is ASIH OTHER FACILITY, the discharge 
"^DD",727.808,727.808,11,23,6,0)
date/time will be the date/time of the movement that ended the patient's
"^DD",727.808,727.808,11,23,7,0)
ASIH OTHER FACILITY status.
"^DD",727.808,727.808,11,23,8,0)
 
"^DD",727.808,727.808,11,23,9,0)
The date portion of the DATE/TIME field (#.01) of the PATIENT MOVEMENT 
"^DD",727.808,727.808,11,23,10,0)
file (#405) is used to populate this field.
"^DD",727.808,727.808,11,23,11,0)
 
"^DD",727.808,727.808,11,23,12,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.808,727.808,11,23,13,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.808,727.808,11,23,14,0)
then a default is used.  The default date value is the value of the 
"^DD",727.808,727.808,11,23,15,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.808,727.808,11,"DT")
3180822
"^DD",727.808,727.808,21,0)
ADMISSION TIME^FJ6O^^0;22^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.808,727.808,21,.1)
Admission Time
"^DD",727.808,727.808,21,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.808,727.808,21,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.808,727.808,21,3)
Answer must be 6 characters in length (HHMMSS).
"^DD",727.808,727.808,21,21,0)
^.001^1^1^3180808^^^
"^DD",727.808,727.808,21,21,1,0)
The time of day at which the patient admission occurred.
"^DD",727.808,727.808,21,23,0)
^^13^13^3180809^
"^DD",727.808,727.808,21,23,1,0)
A call is made to $$INP^ECXUTL2 using the patient's DFN and the date/time 
"^DD",727.808,727.808,21,23,2,0)
of the patient movement (transfer or discharge).  The call will return 
"^DD",727.808,727.808,21,23,3,0)
the admission date/time associated with this episode of care.  
"^DD",727.808,727.808,21,23,4,0)
 
"^DD",727.808,727.808,21,23,5,0)
In the case of a patient who is ASIH OTHER FACILITY, the admission 
"^DD",727.808,727.808,21,23,6,0)
date/time will be the date/time of the movement that put the patient into
"^DD",727.808,727.808,21,23,7,0)
ASIH OTHER FACILITY status.
"^DD",727.808,727.808,21,23,8,0)
 
"^DD",727.808,727.808,21,23,9,0)
The time portion of the DATE/TIME field (#.01) of the PATIENT MOVEMENT 
"^DD",727.808,727.808,21,23,10,0)
file (#405) is used to populate this field.
"^DD",727.808,727.808,21,23,11,0)
 
"^DD",727.808,727.808,21,23,12,0)
This field is always exactly 6 numeric characters (HHMMSS) in length; if
"^DD",727.808,727.808,21,23,13,0)
time cannot be determined, then "000300" is used as default.
"^DD",727.808,727.808,21,"DT")
3180822
"^DD",727.809,727.809,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;A:ASIH (OTHER FACILITY);^0;8^Q
"^DD",727.809,727.809,7,.1)
In Out Patient Indicator
"^DD",727.809,727.809,7,3)
Enter the patient's status for this extract entry.
"^DD",727.809,727.809,7,21,0)
^^1^1^3180629^
"^DD",727.809,727.809,7,21,1,0)
Indicates the patient's status for this extract entry.
"^DD",727.809,727.809,7,23,0)
^^13^13^3180629^
"^DD",727.809,727.809,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.809,727.809,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine patient status.  If
"^DD",727.809,727.809,7,23,3,0)
the patient is an outpatient, processing stops and the field is set to
"^DD",727.809,727.809,7,23,4,0)
O.   If the patient is an inpatient then $$INOUTP^ECXUTL4 is called to
"^DD",727.809,727.809,7,23,5,0)
look at the treating specialty.  If the patient's treating specialty
"^DD",727.809,727.809,7,23,6,0)
exists in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.809,727.809,7,23,7,0)
value of the INPAT/OUTPAT CODE field (#5) of the DSS TREATING SPECIALTY
"^DD",727.809,727.809,7,23,8,0)
TRANSLATION file (#727.831) is used.  If the treating specialty is not
"^DD",727.809,727.809,7,23,9,0)
found in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.809,727.809,7,23,10,0)
indicator is set to I.
"^DD",727.809,727.809,7,23,11,0)
 
"^DD",727.809,727.809,7,23,12,0)
If the patient is ASIH to another facility at the date/time in question 
"^DD",727.809,727.809,7,23,13,0)
then the indicator is set to A.
"^DD",727.809,727.809,7,"DT")
3180629
"^DD",727.809,727.809,20,0)
ADMISSION DATE^FJ8O^^0;21^K:$L(X)>8!($L(X)<8) X
"^DD",727.809,727.809,20,.1)
Admission Date
"^DD",727.809,727.809,20,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.809,727.809,20,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.809,727.809,20,3)
Answer must be 8 characters in length (YYYYMMDD).
"^DD",727.809,727.809,20,21,0)
^.001^2^2^3120604^^
"^DD",727.809,727.809,20,21,1,0)
This 8-character numeric string represents the date on which the 
"^DD",727.809,727.809,20,21,2,0)
patient's admission occurred.
"^DD",727.809,727.809,20,23,0)
^^15^15^3180809^
"^DD",727.809,727.809,20,23,1,0)
A call is made to $$INP^ECXUTL2 using the patient's DFN and the date/time 
"^DD",727.809,727.809,20,23,2,0)
the unit dose medication was given.  The call will return the admission
"^DD",727.809,727.809,20,23,3,0)
date/time associated with this episode of care.  
"^DD",727.809,727.809,20,23,4,0)
 
"^DD",727.809,727.809,20,23,5,0)
In the case of a patient who is ASIH OTHER FACILITY, it will be the
"^DD",727.809,727.809,20,23,6,0)
date/time of the movement that put the patient into ASIH OTHER FACILITY
"^DD",727.809,727.809,20,23,7,0)
status. 
"^DD",727.809,727.809,20,23,8,0)
 
"^DD",727.809,727.809,20,23,9,0)
The date portion of the DATE/TIME field (#.01) of the PATIENT
"^DD",727.809,727.809,20,23,10,0)
MOVEMENT file (#405) is used to populate this field.
"^DD",727.809,727.809,20,23,11,0)
 
"^DD",727.809,727.809,20,23,12,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.809,727.809,20,23,13,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.809,727.809,20,23,14,0)
then a default is used.  The default date value is the value of the 
"^DD",727.809,727.809,20,23,15,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.809,727.809,20,"DT")
3180822
"^DD",727.809,727.809,21,0)
ADMISSION TIME^FJ6O^^0;22^K:$L(X)>6!($L(X)<6) X
"^DD",727.809,727.809,21,.1)
Admission Time
"^DD",727.809,727.809,21,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.809,727.809,21,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.809,727.809,21,3)
Answer must be 6 characters in length (HHMMSS).
"^DD",727.809,727.809,21,21,0)
^.001^1^1^3120530^^
"^DD",727.809,727.809,21,21,1,0)
Time of day at which the patient admission occurred.
"^DD",727.809,727.809,21,23,0)
^^13^13^3180809^
"^DD",727.809,727.809,21,23,1,0)
A call is made to $$INP^ECXUTL2 using the patient's DFN and the date/time 
"^DD",727.809,727.809,21,23,2,0)
the unit dose medication was given.  The call will return the admission
"^DD",727.809,727.809,21,23,3,0)
date/time associated with this episode of care.  
"^DD",727.809,727.809,21,23,4,0)
 
"^DD",727.809,727.809,21,23,5,0)
In the case of a patient who is ASIH OTHER FACILITY, it will be the
"^DD",727.809,727.809,21,23,6,0)
date/time of the movement that put the patient into ASIH OTHER FACILITY
"^DD",727.809,727.809,21,23,7,0)
status. 
"^DD",727.809,727.809,21,23,8,0)
 
"^DD",727.809,727.809,21,23,9,0)
The time portion of the DATE/TIME field (#.01) of the PATIENT
"^DD",727.809,727.809,21,23,10,0)
MOVEMENT file (#405) is used to populate this field.
"^DD",727.809,727.809,21,23,11,0)
 
"^DD",727.809,727.809,21,23,12,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.809,727.809,21,23,13,0)
cannot be determined, then "000300" is used as default.
"^DD",727.809,727.809,21,"DT")
3180822
"^DD",727.809,727.809,50,0)
PLACEHOLD PRIMARY CARE TEAM^F^^1;29^K:$L(X)>4!($L(X)<1) X
"^DD",727.809,727.809,50,.1)
Primary Care Team
"^DD",727.809,727.809,50,3)
Enter primary care team assigned to this patient.
"^DD",727.809,727.809,50,21,0)
^^3^3^3180503
"^DD",727.809,727.809,50,21,1,0)
This field, previously known as PRIMARY CARE TEAM, is no longer needed.
"^DD",727.809,727.809,50,21,2,0)
The name has been changed to PLACEHOLD PRIMARY CARE TEAM and its value
"^DD",727.809,727.809,50,21,3,0)
will be set to null.  
"^DD",727.809,727.809,50,23,0)
^^1^1^3180503
"^DD",727.809,727.809,50,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.809,727.809,50,"DT")
3180501
"^DD",727.809,727.809,51,0)
PLACEHOLD PC PROVIDER^F^^1;30^K:$L(X)>11!($L(X)<1) X
"^DD",727.809,727.809,51,.1)
Primary Care Provider
"^DD",727.809,727.809,51,3)
Enter primary care provider assigned to this patient.
"^DD",727.809,727.809,51,21,0)
^^3^3^3180502
"^DD",727.809,727.809,51,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER, is no longer
"^DD",727.809,727.809,51,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROVIDER and its value
"^DD",727.809,727.809,51,21,3,0)
will be set to null.  
"^DD",727.809,727.809,51,23,0)
^^1^1^3180502
"^DD",727.809,727.809,51,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.809,727.809,51,"DT")
3180501
"^DD",727.809,727.809,53,0)
PLACEHOLD PC PROV PERSON CLASS^F^^1;32^K:$L(X)>7!($L(X)<7) X
"^DD",727.809,727.809,53,.1)
PC Provider Person Class
"^DD",727.809,727.809,53,3)
Answer must be 7 characters in length.
"^DD",727.809,727.809,53,21,0)
^^3^3^3180503
"^DD",727.809,727.809,53,21,1,0)
This field, previously known as PC PROVIDER PERSON CLASS, is no longer
"^DD",727.809,727.809,53,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROV PERSON CLASS and
"^DD",727.809,727.809,53,21,3,0)
its value will be set to null.  
"^DD",727.809,727.809,53,23,0)
^^1^1^3180503
"^DD",727.809,727.809,53,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.809,727.809,53,"DT")
3180501
"^DD",727.809,727.809,54,0)
PLACEHOLD ASSOC PC PROVIDER^F^^1;33^K:$L(X)>11!($L(X)<2) X
"^DD",727.809,727.809,54,.1)
Associate PC Provider
"^DD",727.809,727.809,54,3)
Answer must be 2-11 characters in length.
"^DD",727.809,727.809,54,21,0)
^^3^3^3180503
"^DD",727.809,727.809,54,21,1,0)
This field, previously known as ASSOCIATE PC PROVIDER, is no longer
"^DD",727.809,727.809,54,21,2,0)
needed. The name has been changed to PLACEHOLD ASSOC PC PROVIDER and its
"^DD",727.809,727.809,54,21,3,0)
value will be set to null.  
"^DD",727.809,727.809,54,23,0)
^^1^1^3180503
"^DD",727.809,727.809,54,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.809,727.809,54,"DT")
3180501
"^DD",727.809,727.809,56,0)
PLACEHOLD AS PC PROV PERSON CL^F^^1;35^K:$L(X)>7!($L(X)<7) X
"^DD",727.809,727.809,56,.1)
Associate PC Provider Person Class
"^DD",727.809,727.809,56,3)
Answer must be 7 characters in length.
"^DD",727.809,727.809,56,21,0)
^^3^3^3180503
"^DD",727.809,727.809,56,21,1,0)
This field, previously known as ASSOC. PC PROV. PERSON CLASS, is no longer
"^DD",727.809,727.809,56,21,2,0)
needed. The name has been changed to PLACEHOLD AS PC PROV PERSON CL and
"^DD",727.809,727.809,56,21,3,0)
its value will be set to null.  
"^DD",727.809,727.809,56,23,0)
^^1^1^3180503
"^DD",727.809,727.809,56,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.809,727.809,56,"DT")
3180501
"^DD",727.809,727.809,60,0)
PLACEHOLD ETHNICITY^F^^2;4^K:$L(X)>6!($L(X)<1) X
"^DD",727.809,727.809,60,.1)
Ethnicity
"^DD",727.809,727.809,60,3)
Answer must be 1-6 characters in length.
"^DD",727.809,727.809,60,21,0)
^^2^2^3180315^
"^DD",727.809,727.809,60,21,1,0)
This field, previously known as ETHNICITY, is no longer needed.  The name 
"^DD",727.809,727.809,60,21,2,0)
has been changed to PLACEHOLD ETHNICITY and its value will be set to null.
"^DD",727.809,727.809,60,23,0)
^^1^1^3180315^
"^DD",727.809,727.809,60,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.809,727.809,60,"DT")
3180315
"^DD",727.809,727.809,61,0)
PLACEHOLD RACE 1^F^^2;5^K:$L(X)>6!($L(X)<1) X
"^DD",727.809,727.809,61,.1)
Race 1
"^DD",727.809,727.809,61,3)
Answer must be 1-6 characters in length.
"^DD",727.809,727.809,61,21,0)
^^2^2^3180315^
"^DD",727.809,727.809,61,21,1,0)
This field, previously known as RACE 1, is no longer needed.  The name has
"^DD",727.809,727.809,61,21,2,0)
been changed to PLACEHOLD RACE 1 and its value will be set to null.
"^DD",727.809,727.809,61,23,0)
^^1^1^3180315^
"^DD",727.809,727.809,61,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.809,727.809,61,"DT")
3180315
"^DD",727.809,727.809,79,0)
PLACEHOLD ASSOC PC PROV NPI^F^^2;23^K:$L(X)>15!($L(X)<1) X
"^DD",727.809,727.809,79,3)
Answer must be 1-15 characters in length.
"^DD",727.809,727.809,79,21,0)
^^3^3^3180503
"^DD",727.809,727.809,79,21,1,0)
This field, previously known as ASSOCIATE PC PROVIDER NPI, is no longer
"^DD",727.809,727.809,79,21,2,0)
needed. The name has been changed to PLACEHOLD ASSOC PC PROV NPI and its
"^DD",727.809,727.809,79,21,3,0)
value will be set to null.  
"^DD",727.809,727.809,79,23,0)
^^1^1^3180503
"^DD",727.809,727.809,79,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.809,727.809,79,"DT")
3180501
"^DD",727.809,727.809,80,0)
PLACEHOLD PC PROVIDER NPI^F^^2;24^K:$L(X)>15!($L(X)<1) X
"^DD",727.809,727.809,80,3)
Answer must be 1-15 characters in length.
"^DD",727.809,727.809,80,21,0)
^^3^3^3180503
"^DD",727.809,727.809,80,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER NPI, is no longer
"^DD",727.809,727.809,80,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROVIDER NPI and its
"^DD",727.809,727.809,80,21,3,0)
value will be set to null.  
"^DD",727.809,727.809,80,23,0)
^^1^1^3180503
"^DD",727.809,727.809,80,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.809,727.809,80,"DT")
3180501
"^DD",727.81,727.81,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;A:ASIH (OTHER FACILITY);^0;8^Q
"^DD",727.81,727.81,7,.1)
In Out Patient Indicator
"^DD",727.81,727.81,7,3)
Enter the patient's status for this extract entry.
"^DD",727.81,727.81,7,21,0)
^^1^1^3180629^
"^DD",727.81,727.81,7,21,1,0)
Indicates the patient's status for this extract entry.
"^DD",727.81,727.81,7,23,0)
^^17^17^3180629^
"^DD",727.81,727.81,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.81,727.81,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine patient status.  If
"^DD",727.81,727.81,7,23,3,0)
the patient is an outpatient, processing stops and the field is set to
"^DD",727.81,727.81,7,23,4,0)
O.   If the patient is an inpatient then $$INOUTP^ECXUTL4 is called to
"^DD",727.81,727.81,7,23,5,0)
look at the treating specialty.  If the patient's treating specialty
"^DD",727.81,727.81,7,23,6,0)
exists in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.81,727.81,7,23,7,0)
value of the INPAT/OUTPAT CODE field (#5) of the DSS TREATING SPECIALTY
"^DD",727.81,727.81,7,23,8,0)
TRANSLATION file (#727.831) is used.  If the treating specialty is not
"^DD",727.81,727.81,7,23,9,0)
found in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.81,727.81,7,23,10,0)
indicator is set to I.
"^DD",727.81,727.81,7,23,11,0)
 
"^DD",727.81,727.81,7,23,12,0)
If the patient is ASIH to another facility at the date/time in question 
"^DD",727.81,727.81,7,23,13,0)
then the indicator is set to A.
"^DD",727.81,727.81,7,23,14,0)
 
"^DD",727.81,727.81,7,23,15,0)
During the Prescription Extract, if the prescription indicates that the
"^DD",727.81,727.81,7,23,16,0)
medication is to be mailed to the patient, the IN/OUT PATIENT INDICATOR is
"^DD",727.81,727.81,7,23,17,0)
returned with an "O" OUTPATIENT value.
"^DD",727.81,727.81,7,"DT")
3180629
"^DD",727.81,727.81,30,0)
PLACEHOLD PRIMARY CARE TEAM^P404.51'^SCTM(404.51,^0;31^Q
"^DD",727.81,727.81,30,.1)
Primary Care Team
"^DD",727.81,727.81,30,3)
Enter the primary care team assigned to this patient at the time the prescription was filled.
"^DD",727.81,727.81,30,21,0)
^^3^3^3180503
"^DD",727.81,727.81,30,21,1,0)
This field, previously known as PRIMARY CARE TEAM, is no longer needed.
"^DD",727.81,727.81,30,21,2,0)
The name has been changed to PLACEHOLD PRIMARY CARE TEAM and its value
"^DD",727.81,727.81,30,21,3,0)
will be set to null.  
"^DD",727.81,727.81,30,23,0)
^^1^1^3180503
"^DD",727.81,727.81,30,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.81,727.81,30,"DT")
3180501
"^DD",727.81,727.81,31,0)
PLACEHOLD PC PROVIDER^F^^0;32^K:$L(X)>11!($L(X)<1) X
"^DD",727.81,727.81,31,.1)
Primary Care Provider
"^DD",727.81,727.81,31,3)
Enter primary care provider assigned to this patient.
"^DD",727.81,727.81,31,21,0)
^^3^3^3180502
"^DD",727.81,727.81,31,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER, is no longer
"^DD",727.81,727.81,31,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROVIDER and its value
"^DD",727.81,727.81,31,21,3,0)
will be set to null.  
"^DD",727.81,727.81,31,23,0)
^^1^1^3180502
"^DD",727.81,727.81,31,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.81,727.81,31,"DT")
3180501
"^DD",727.81,727.81,33,0)
PLACEHOLD RACE^F^^0;34^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,33,.1)
Race
"^DD",727.81,727.81,33,3)
Enter race ABBREVIATION for this patient.
"^DD",727.81,727.81,33,21,0)
^^2^2^3180315^
"^DD",727.81,727.81,33,21,1,0)
This field, previously known as RACE, is no longer needed.  The name has  
"^DD",727.81,727.81,33,21,2,0)
been changed to PLACEHOLD RACE and its value will be set to null.
"^DD",727.81,727.81,33,23,0)
^^1^1^3180315^
"^DD",727.81,727.81,33,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.81,727.81,33,"DT")
3180315
"^DD",727.81,727.81,42,0)
PLACEHOLD PC PROV PERSON CLASS^F^^1;9^K:$L(X)>7!($L(X)<7) X
"^DD",727.81,727.81,42,3)
Answer must be 7 characters in length.
"^DD",727.81,727.81,42,21,0)
^^3^3^3180503
"^DD",727.81,727.81,42,21,1,0)
This field, previously known as PC PROVIDER PERSON CLASS, is no longer
"^DD",727.81,727.81,42,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROV PERSON CLASS and
"^DD",727.81,727.81,42,21,3,0)
its value will be set to null.  
"^DD",727.81,727.81,42,23,0)
^^1^1^3180503
"^DD",727.81,727.81,42,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.81,727.81,42,"DT")
3180501
"^DD",727.81,727.81,51,0)
PLACEHOLD ASSOC PC PROVIDER^F^^1;18^K:$L(X)>11!($L(X)<2) X
"^DD",727.81,727.81,51,3)
Answer must be 2-11 characters in length.
"^DD",727.81,727.81,51,21,0)
^^3^3^3180503
"^DD",727.81,727.81,51,21,1,0)
This field, previously known as ASSOCIATE PC PROVIDER, is no longer
"^DD",727.81,727.81,51,21,2,0)
needed. The name has been changed to PLACEHOLD ASSOC PC PROVIDER and its
"^DD",727.81,727.81,51,21,3,0)
value will be set to null.  
"^DD",727.81,727.81,51,23,0)
^^1^1^3180503
"^DD",727.81,727.81,51,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.81,727.81,51,"DT")
3180501
"^DD",727.81,727.81,52,0)
PLACEHOLD AS PC PROV PERSON CL^F^^1;19^K:$L(X)>7!($L(X)<7) X
"^DD",727.81,727.81,52,3)
Answer must be 7 characters in length.
"^DD",727.81,727.81,52,21,0)
^^3^3^3180503
"^DD",727.81,727.81,52,21,1,0)
This field, previously known as ASSOC. PC PROV. PERSON CLASS, is no longer
"^DD",727.81,727.81,52,21,2,0)
needed. The name has been changed to PLACEHOLD AS PC PROV PERSON CL and
"^DD",727.81,727.81,52,21,3,0)
its value will be set to null.  
"^DD",727.81,727.81,52,23,0)
^^1^1^3180503
"^DD",727.81,727.81,52,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.81,727.81,52,"DT")
3180501
"^DD",727.81,727.81,71,0)
PLACEHOLD ETHNICITY^F^^1;38^K:$L(X)>6!($L(X)<1) X
"^DD",727.81,727.81,71,.1)
Ethnicity
"^DD",727.81,727.81,71,3)
Answer must be 1-6 characters in length
"^DD",727.81,727.81,71,21,0)
^^2^2^3180315^
"^DD",727.81,727.81,71,21,1,0)
This field, previously known as ETHNICITY, is no longer needed.  The name 
"^DD",727.81,727.81,71,21,2,0)
has been changed to PLACEHOLD ETHNICITY and its value will be set to null.
"^DD",727.81,727.81,71,23,0)
^^1^1^3180315^
"^DD",727.81,727.81,71,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.81,727.81,71,"DT")
3180315
"^DD",727.81,727.81,72,0)
PLACEHOLD RACE 1^F^^1;39^K:$L(X)>6!($L(X)<1) X
"^DD",727.81,727.81,72,.1)
Race 1
"^DD",727.81,727.81,72,3)
Answer must be 1-6 characters in length.
"^DD",727.81,727.81,72,21,0)
^^2^2^3180315^
"^DD",727.81,727.81,72,21,1,0)
This field, previously known as RACE 1, is no longer needed.  The name has
"^DD",727.81,727.81,72,21,2,0)
been changed to PLACEHOLD RACE 1 and its value will be set to null.
"^DD",727.81,727.81,72,23,0)
^^1^1^3180315^
"^DD",727.81,727.81,72,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.81,727.81,72,"DT")
3180315
"^DD",727.81,727.81,94,0)
PLACEHOLD ASSOC PC PROV NPI^F^^2;19^K:$L(X)>15!($L(X)<1) X
"^DD",727.81,727.81,94,3)
Answer must be 1-15 characters in length.
"^DD",727.81,727.81,94,21,0)
^^3^3^3180503
"^DD",727.81,727.81,94,21,1,0)
This field, previously known as ASSOCIATE PC PROVIDER NPI, is no longer
"^DD",727.81,727.81,94,21,2,0)
needed. The name has been changed to PLACEHOLD ASSOC PC PROV NPI and its
"^DD",727.81,727.81,94,21,3,0)
value will be set to null.  
"^DD",727.81,727.81,94,23,0)
^^1^1^3180503
"^DD",727.81,727.81,94,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.81,727.81,94,"DT")
3180501
"^DD",727.81,727.81,95,0)
PLACEHOLD PC PROVIDER NPI^F^^2;20^K:$L(X)>15!($L(X)<1) X
"^DD",727.81,727.81,95,3)
Answer must be 1-15 characters in length.
"^DD",727.81,727.81,95,21,0)
^^3^3^3180503
"^DD",727.81,727.81,95,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER NPI, is no longer
"^DD",727.81,727.81,95,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROVIDER NPI and its
"^DD",727.81,727.81,95,21,3,0)
value will be set to null.  
"^DD",727.81,727.81,95,23,0)
^^1^1^3180503
"^DD",727.81,727.81,95,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.81,727.81,95,"DT")
3180501
"^DD",727.811,727.811,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;A:ASIH (OTHER FACILITY);^0;8^Q
"^DD",727.811,727.811,7,.1)
In Out Patient Indicator
"^DD",727.811,727.811,7,3)
Enter the patient's status for this extract entry.
"^DD",727.811,727.811,7,21,0)
^^1^1^3180629^
"^DD",727.811,727.811,7,21,1,0)
Indicates the patient's status for this extract entry.
"^DD",727.811,727.811,7,23,0)
^^13^13^3180629^
"^DD",727.811,727.811,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.811,727.811,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine patient status.  If
"^DD",727.811,727.811,7,23,3,0)
the patient is an outpatient, processing stops and the field is set to
"^DD",727.811,727.811,7,23,4,0)
O.   If the patient is an inpatient then $$INOUTP^ECXUTL4 is called to
"^DD",727.811,727.811,7,23,5,0)
look at the treating specialty.  If the patient's treating specialty
"^DD",727.811,727.811,7,23,6,0)
exists in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.811,727.811,7,23,7,0)
value of the INPAT/OUTPAT CODE field (#5) of the DSS TREATING SPECIALTY
"^DD",727.811,727.811,7,23,8,0)
TRANSLATION file (#727.831) is used.  If the treating specialty is not
"^DD",727.811,727.811,7,23,9,0)
found in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.811,727.811,7,23,10,0)
indicator is set to I.
"^DD",727.811,727.811,7,23,11,0)
 
"^DD",727.811,727.811,7,23,12,0)
If the patient is ASIH to another facility at the date/time in question 
"^DD",727.811,727.811,7,23,13,0)
then the indicator is set to A.
"^DD",727.811,727.811,7,"DT")
3180629
"^DD",727.811,727.811,34,0)
PLACEHOLD PRIMARY CARE TEAM^F^^0;35^K:$L(X)>4!($L(X)<1) X
"^DD",727.811,727.811,34,.1)
Primary Care Team
"^DD",727.811,727.811,34,3)
Enter primary care team assigned to this patient.
"^DD",727.811,727.811,34,21,0)
^^3^3^3180503
"^DD",727.811,727.811,34,21,1,0)
This field, previously known as PRIMARY CARE TEAM, is no longer needed.
"^DD",727.811,727.811,34,21,2,0)
The name has been changed to PLACEHOLD PRIMARY CARE TEAM and its value
"^DD",727.811,727.811,34,21,3,0)
will be set to null.  
"^DD",727.811,727.811,34,23,0)
^^1^1^3180503
"^DD",727.811,727.811,34,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.811,727.811,34,"DT")
3180501
"^DD",727.811,727.811,35,0)
PLACEHOLD PC PROVIDER^F^^0;36^K:$L(X)>11!($L(X)<1) X
"^DD",727.811,727.811,35,.1)
Primary Care Provider
"^DD",727.811,727.811,35,3)
Enter primary care provider assigned to this patient.
"^DD",727.811,727.811,35,21,0)
^^3^3^3180502
"^DD",727.811,727.811,35,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER, is no longer
"^DD",727.811,727.811,35,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROVIDER and its value
"^DD",727.811,727.811,35,21,3,0)
will be set to null.  
"^DD",727.811,727.811,35,23,0)
^^1^1^3180502
"^DD",727.811,727.811,35,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.811,727.811,35,"DT")
3180501
"^DD",727.811,727.811,43,0)
PLACEHOLD PC PROV PERSON CLASS^F^^1;7^K:$L(X)>7!($L(X)<7) X
"^DD",727.811,727.811,43,3)
Answer must be 7 characters in length.
"^DD",727.811,727.811,43,21,0)
^^3^3^3180503
"^DD",727.811,727.811,43,21,1,0)
This field, previously known as PC PROVIDER PERSON CLASS, is no longer
"^DD",727.811,727.811,43,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROV PERSON CLASS and
"^DD",727.811,727.811,43,21,3,0)
its value will be set to null.  
"^DD",727.811,727.811,43,23,0)
^^1^1^3180503
"^DD",727.811,727.811,43,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.811,727.811,43,"DT")
3180501
"^DD",727.811,727.811,44,0)
PLACEHOLD ASSOC PC PROVIDER^F^^1;8^K:$L(X)>11!($L(X)<2) X
"^DD",727.811,727.811,44,3)
Answer must be 2-11 characters in length.
"^DD",727.811,727.811,44,21,0)
^^3^3^3180503
"^DD",727.811,727.811,44,21,1,0)
This field, previously known as ASSOCIATE PC PROVIDER, is no longer
"^DD",727.811,727.811,44,21,2,0)
needed. The name has been changed to PLACEHOLD ASSOC PC PROVIDER and its
"^DD",727.811,727.811,44,21,3,0)
value will be set to null.  
"^DD",727.811,727.811,44,23,0)
^^1^1^3180503
"^DD",727.811,727.811,44,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.811,727.811,44,"DT")
3180501
"^DD",727.811,727.811,45,0)
PLACEHOLD AS PC PROV PERSON CL^F^^1;9^K:$L(X)>7!($L(X)<7) X
"^DD",727.811,727.811,45,3)
Answer must be 7 characters in length.
"^DD",727.811,727.811,45,21,0)
^^3^3^3180503
"^DD",727.811,727.811,45,21,1,0)
This field, previously known as ASSOC. PC PROV. PERSON CLASS, is no longer
"^DD",727.811,727.811,45,21,2,0)
needed. The name has been changed to PLACEHOLD AS PC PROV PERSON CL and
"^DD",727.811,727.811,45,21,3,0)
its value will be set to null.  
"^DD",727.811,727.811,45,23,0)
^^1^1^3180503
"^DD",727.811,727.811,45,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.811,727.811,45,"DT")
3180501
"^DD",727.811,727.811,59,0)
PLACEHOLD ETHNICITY^F^^1;23^K:$L(X)>6!($L(X)<1) X
"^DD",727.811,727.811,59,.1)
Ethnicity
"^DD",727.811,727.811,59,3)
Answer must be 1-6 characters in length
"^DD",727.811,727.811,59,21,0)
^^2^2^3180315^
"^DD",727.811,727.811,59,21,1,0)
This field, previously known as ETHNICITY, is no longer needed.  The name 
"^DD",727.811,727.811,59,21,2,0)
has been changed to PLACEHOLD ETHNICITY and its value will be set to null.
"^DD",727.811,727.811,59,23,0)
^^1^1^3180315^
"^DD",727.811,727.811,59,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.811,727.811,59,"DT")
3180315
"^DD",727.811,727.811,60,0)
PLACEHOLD RACE 1^F^^1;24^K:$L(X)>6!($L(X)<1) X
"^DD",727.811,727.811,60,.1)
Race 1
"^DD",727.811,727.811,60,3)
Answer must be 1-6 characters in length.
"^DD",727.811,727.811,60,21,0)
^^2^2^3180315^
"^DD",727.811,727.811,60,21,1,0)
This field, previously known as RACE 1, is no longer needed.  The name has
"^DD",727.811,727.811,60,21,2,0)
been changed to PLACEHOLD RACE 1 and its value will be set to null.
"^DD",727.811,727.811,60,23,0)
^^1^1^3180315^
"^DD",727.811,727.811,60,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.811,727.811,60,"DT")
3180315
"^DD",727.811,727.811,92,0)
PLACEHOLD ASSOC PC PROV NPI^F^^2;19^K:$L(X)>15!($L(X)<1) X
"^DD",727.811,727.811,92,3)
Answer must be 1-15 characters in length.
"^DD",727.811,727.811,92,21,0)
^^3^3^3180503
"^DD",727.811,727.811,92,21,1,0)
This field, previously known as ASSOCIATE PC PROVIDER NPI, is no longer
"^DD",727.811,727.811,92,21,2,0)
needed. The name has been changed to PLACEHOLD ASSOC PC PROV NPI and its
"^DD",727.811,727.811,92,21,3,0)
value will be set to null.  
"^DD",727.811,727.811,92,23,0)
^^1^1^3180503
"^DD",727.811,727.811,92,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.811,727.811,92,"DT")
3180501
"^DD",727.811,727.811,94,0)
PLACEHOLD PC PROVIDER NPI^F^^2;21^K:$L(X)>15!($L(X)<1) X
"^DD",727.811,727.811,94,3)
Answer must be 1-15 characters in length.
"^DD",727.811,727.811,94,21,0)
^^3^3^3180503
"^DD",727.811,727.811,94,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER NPI, is no longer
"^DD",727.811,727.811,94,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROVIDER NPI and its
"^DD",727.811,727.811,94,21,3,0)
value will be set to null.  
"^DD",727.811,727.811,94,23,0)
^^1^1^3180503
"^DD",727.811,727.811,94,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.811,727.811,94,"DT")
3180501
"^DD",727.813,727.813,3,0)
FACILITY^FJ7^^0;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.813,727.813,3,.1)
Facility
"^DD",727.813,727.813,3,3)
Answer must be 1-7 characters in length.
"^DD",727.813,727.813,3,21,0)
^.001^2^2^3180510^^
"^DD",727.813,727.813,3,21,1,0)
This is the facility/division where the specimen was drawn or the test 
"^DD",727.813,727.813,3,21,2,0)
was accessioned.
"^DD",727.813,727.813,3,23,0)
^^9^9^3180510^
"^DD",727.813,727.813,3,23,1,0)
An indicator of the facilty/division where the specimen was collected or
"^DD",727.813,727.813,3,23,2,0)
test was accessioned. Using the ACCESSIONING INSTITUTION field (.112) of
"^DD",727.813,727.813,3,23,3,0)
the CHEM, HEM, TOX, RIA, SER, etc. multiple (4) in the LAB DATA file 
"^DD",727.813,727.813,3,23,4,0)
(#63), FACILITY is derived from the STATION NUMBER field (99) for that
"^DD",727.813,727.813,3,23,5,0)
pointer number in the INSTITUTION file (#4).
"^DD",727.813,727.813,3,23,6,0)
 
"^DD",727.813,727.813,3,23,7,0)
If an institution file entry is defined but that entry doesn't have a 
"^DD",727.813,727.813,3,23,8,0)
station number then 9999A will be used to indicate a non-VA site was 
"^DD",727.813,727.813,3,23,9,0)
identified.
"^DD",727.813,727.813,3,"DT")
3180510
"^DD",727.813,727.813,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;A:ASIH (OTHER FACILITY);^0;8^Q
"^DD",727.813,727.813,7,.1)
In Out Patient Indicator
"^DD",727.813,727.813,7,3)
Enter the patient's status at the time of the lab test.
"^DD",727.813,727.813,7,21,0)
^^1^1^3180629^
"^DD",727.813,727.813,7,21,1,0)
Indicates the patient's status for this extract entry.
"^DD",727.813,727.813,7,23,0)
^^13^13^3180629^
"^DD",727.813,727.813,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.813,727.813,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine patient status.  If
"^DD",727.813,727.813,7,23,3,0)
the patient is an outpatient, processing stops and the field is set to
"^DD",727.813,727.813,7,23,4,0)
O.   If the patient is an inpatient then $$INOUTP^ECXUTL4 is called to
"^DD",727.813,727.813,7,23,5,0)
look at the treating specialty.  If the patient's treating specialty
"^DD",727.813,727.813,7,23,6,0)
exists in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.813,727.813,7,23,7,0)
value of the INPAT/OUTPAT CODE field (#5) of the DSS TREATING SPECIALTY
"^DD",727.813,727.813,7,23,8,0)
TRANSLATION file (#727.831) is used.  If the treating specialty is not
"^DD",727.813,727.813,7,23,9,0)
found in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.813,727.813,7,23,10,0)
indicator is set to I.
"^DD",727.813,727.813,7,23,11,0)
 
"^DD",727.813,727.813,7,23,12,0)
If the patient is ASIH to another facility at the date/time in question 
"^DD",727.813,727.813,7,23,13,0)
then the indicator is set to A.
"^DD",727.813,727.813,7,"DT")
3180629
"^DD",727.813,727.813,20,0)
PLACEHOLD PRIMARY CARE TEAM^F^^0;21^K:$L(X)>4!($L(X)<1) X
"^DD",727.813,727.813,20,.1)
Primary Care Team
"^DD",727.813,727.813,20,3)
Enter the primary care team assigned to this patient.
"^DD",727.813,727.813,20,21,0)
^^3^3^3180503
"^DD",727.813,727.813,20,21,1,0)
This field, previously known as PRIMARY CARE TEAM, is no longer needed.
"^DD",727.813,727.813,20,21,2,0)
The name has been changed to PLACEHOLD PRIMARY CARE TEAM and its value
"^DD",727.813,727.813,20,21,3,0)
will be set to null.  
"^DD",727.813,727.813,20,23,0)
^^1^1^3180503
"^DD",727.813,727.813,20,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.813,727.813,20,"DT")
3180501
"^DD",727.813,727.813,21,0)
PLACEHOLD PC PROVIDER^F^^0;22^K:$L(X)>11!($L(X)<1) X
"^DD",727.813,727.813,21,.1)
Primary Care Provider
"^DD",727.813,727.813,21,3)
Enter primary care provider assigned to this patient.
"^DD",727.813,727.813,21,21,0)
^^3^3^3180502
"^DD",727.813,727.813,21,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER, is no longer
"^DD",727.813,727.813,21,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROVIDER and its value
"^DD",727.813,727.813,21,21,3,0)
will be set to null.  
"^DD",727.813,727.813,21,23,0)
^^1^1^3180502
"^DD",727.813,727.813,21,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.813,727.813,21,"DT")
3180501
"^DD",727.813,727.813,26,0)
PLACEHOLD PC PROV PERSON CLASS^F^^1;5^K:$L(X)>7!($L(X)<7) X
"^DD",727.813,727.813,26,3)
Answer must be 7 characters in length.
"^DD",727.813,727.813,26,21,0)
^^3^3^3180503
"^DD",727.813,727.813,26,21,1,0)
This field, previously known as PC PROVIDER PERSON CLASS, is no longer
"^DD",727.813,727.813,26,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROV PERSON CLASS and
"^DD",727.813,727.813,26,21,3,0)
its value will be set to null.  
"^DD",727.813,727.813,26,23,0)
^^1^1^3180503
"^DD",727.813,727.813,26,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.813,727.813,26,"DT")
3180501
"^DD",727.813,727.813,27,0)
PLACEHOLD ASSOC PC PROVIDER^F^^1;6^K:$L(X)>11!($L(X)<2) X
"^DD",727.813,727.813,27,3)
Answer must be 2-11 characters in length.
"^DD",727.813,727.813,27,21,0)
^^3^3^3180503
"^DD",727.813,727.813,27,21,1,0)
This field, previously known as ASSOCIATE PC PROVIDER, is no longer
"^DD",727.813,727.813,27,21,2,0)
needed. The name has been changed to PLACEHOLD ASSOC PC PROVIDER and its
"^DD",727.813,727.813,27,21,3,0)
value will be set to null.  
"^DD",727.813,727.813,27,23,0)
^^1^1^3180503
"^DD",727.813,727.813,27,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.813,727.813,27,"DT")
3180501
"^DD",727.813,727.813,28,0)
PLACEHOLD AS PC PROV PERSON CL^F^^1;7^K:$L(X)>7!($L(X)<7) X
"^DD",727.813,727.813,28,3)
Answer must be 7 characters in length.
"^DD",727.813,727.813,28,21,0)
^^3^3^3180503
"^DD",727.813,727.813,28,21,1,0)
This field, previously known as ASSOC. PC PROV. PERSON CLASS, is no longer
"^DD",727.813,727.813,28,21,2,0)
needed. The name has been changed to PLACEHOLD AS PC PROV PERSON CL and
"^DD",727.813,727.813,28,21,3,0)
its value will be set to null.  
"^DD",727.813,727.813,28,23,0)
^^1^1^3180503
"^DD",727.813,727.813,28,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.813,727.813,28,"DT")
3180501
"^DD",727.813,727.813,35,0)
PRODUCTION DIVISION^FJ6^^1;14^K:$L(X)>6!($L(X)<3) X
"^DD",727.813,727.813,35,3)
Answer must be 3-6 characters in length.
"^DD",727.813,727.813,35,21,0)
^.001^1^1^3180510^^^
"^DD",727.813,727.813,35,21,1,0)
Data represents the facility/division the lab test was performed in.
"^DD",727.813,727.813,35,23,0)
^^9^9^3180510^
"^DD",727.813,727.813,35,23,1,0)
An indicator of the facilty/division where the test was performed. Using
"^DD",727.813,727.813,35,23,2,0)
the RELEASING SITE field (.345) of the CHEM, HEM, TOX, RIA, SER, etc.
"^DD",727.813,727.813,35,23,3,0)
multiple (4) in the LAB DATA file (#63), PRODUCTION DIVISION is derived
"^DD",727.813,727.813,35,23,4,0)
from the STATION NUMBER field (99) for that pointer number in the
"^DD",727.813,727.813,35,23,5,0)
INSTITUTION file (#4).
"^DD",727.813,727.813,35,23,6,0)
 
"^DD",727.813,727.813,35,23,7,0)
If an institution file entry is defined but that entry doesn't have a 
"^DD",727.813,727.813,35,23,8,0)
station number then 9999R will be used to indicate a non-VA site was 
"^DD",727.813,727.813,35,23,9,0)
identified.
"^DD",727.813,727.813,35,"DT")
3180510
"^DD",727.813,727.813,39,0)
PLACEHOLD ASSOC PC PROV NPI^F^^1;18^K:$L(X)>15!($L(X)<1) X
"^DD",727.813,727.813,39,3)
Answer must be 1-15 characters in length.
"^DD",727.813,727.813,39,21,0)
^^3^3^3180503
"^DD",727.813,727.813,39,21,1,0)
This field, previously known as ASSOCIATE PC PROVIDER NPI, is no longer
"^DD",727.813,727.813,39,21,2,0)
needed. The name has been changed to PLACEHOLD ASSOC PC PROV NPI and its
"^DD",727.813,727.813,39,21,3,0)
value will be set to null.  
"^DD",727.813,727.813,39,23,0)
^^1^1^3180503
"^DD",727.813,727.813,39,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.813,727.813,39,"DT")
3180501
"^DD",727.813,727.813,40,0)
PLACEHOLD PC PROVIDER NPI^F^^1;19^K:$L(X)>15!($L(X)<1) X
"^DD",727.813,727.813,40,3)
Answer must be 1-15 characters in length.
"^DD",727.813,727.813,40,21,0)
^^3^3^3180503
"^DD",727.813,727.813,40,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER NPI, is no longer
"^DD",727.813,727.813,40,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROVIDER NPI and its
"^DD",727.813,727.813,40,21,3,0)
value will be set to null.  
"^DD",727.813,727.813,40,23,0)
^^1^1^3180503
"^DD",727.813,727.813,40,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.813,727.813,40,"DT")
3180501
"^DD",727.813,727.813,53,0)
CPT, QTY & MODIFIERS #1^FJ20^^2;9^K:$L(X)>20!($L(X)<1) X
"^DD",727.813,727.813,53,3)
Answer must be 1-20 characters in length.
"^DD",727.813,727.813,53,21,0)
^.001^2^2^3180613^^^
"^DD",727.813,727.813,53,21,1,0)
This is the CPT code associated with the workload code identified
"^DD",727.813,727.813,53,21,2,0)
for this specific lab test.
"^DD",727.813,727.813,53,23,0)
^.001^2^2^3180613^^
"^DD",727.813,727.813,53,23,1,0)
The CPT code is obtained from the CODE field, of the CODE multiple, in the
"^DD",727.813,727.813,53,23,2,0)
WKLD CODE file (#64) for the related laboratory procedure/test.
"^DD",727.813,727.813,53,"DT")
3180613
"^DD",727.814,727.814,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;A:ASIH (OTHER FACILITY);^0;8^Q
"^DD",727.814,727.814,7,.1)
In Out Patient Indicator
"^DD",727.814,727.814,7,3)
Enter the patient's status at the time of the exam.
"^DD",727.814,727.814,7,21,0)
^^1^1^3180629^
"^DD",727.814,727.814,7,21,1,0)
Indicates the patient's status for this extract entry.
"^DD",727.814,727.814,7,23,0)
^^13^13^3180629^
"^DD",727.814,727.814,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.814,727.814,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine patient status.  If
"^DD",727.814,727.814,7,23,3,0)
the patient is an outpatient, processing stops and the field is set to
"^DD",727.814,727.814,7,23,4,0)
O.   If the patient is an inpatient then $$INOUTP^ECXUTL4 is called to
"^DD",727.814,727.814,7,23,5,0)
look at the treating specialty.  If the patient's treating specialty
"^DD",727.814,727.814,7,23,6,0)
exists in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.814,727.814,7,23,7,0)
value of the INPAT/OUTPAT CODE field (#5) of the DSS TREATING SPECIALTY
"^DD",727.814,727.814,7,23,8,0)
TRANSLATION file (#727.831) is used.  If the treating specialty is not
"^DD",727.814,727.814,7,23,9,0)
found in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.814,727.814,7,23,10,0)
indicator is set to I.
"^DD",727.814,727.814,7,23,11,0)
 
"^DD",727.814,727.814,7,23,12,0)
If the patient is ASIH to another facility at the date/time in question 
"^DD",727.814,727.814,7,23,13,0)
then the indicator is set to A.
"^DD",727.814,727.814,7,"DT")
3180629
"^DD",727.814,727.814,21,0)
PLACEHOLD PRIMARY CARE TEAM^F^^0;22^K:$L(X)>4!($L(X)<1) X
"^DD",727.814,727.814,21,.1)
Primary Care Team
"^DD",727.814,727.814,21,3)
Enter primary care team assigned to this patient.
"^DD",727.814,727.814,21,21,0)
^^3^3^3180503
"^DD",727.814,727.814,21,21,1,0)
This field, previously known as PRIMARY CARE TEAM, is no longer needed.
"^DD",727.814,727.814,21,21,2,0)
The name has been changed to PLACEHOLD PRIMARY CARE TEAM and its value
"^DD",727.814,727.814,21,21,3,0)
will be set to null.  
"^DD",727.814,727.814,21,23,0)
^^1^1^3180503
"^DD",727.814,727.814,21,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.814,727.814,21,"DT")
3180501
"^DD",727.814,727.814,22,0)
PLACEHOLD PC PROVIDER^F^^0;23^K:$L(X)>11!($L(X)<1) X
"^DD",727.814,727.814,22,.1)
Primary Care Provider
"^DD",727.814,727.814,22,3)
Enter primary care provider assigned to this patient.
"^DD",727.814,727.814,22,21,0)
^^3^3^3180502
"^DD",727.814,727.814,22,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER, is no longer
"^DD",727.814,727.814,22,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROVIDER and its value
"^DD",727.814,727.814,22,21,3,0)
will be set to null.  
"^DD",727.814,727.814,22,23,0)
^^1^1^3180502
"^DD",727.814,727.814,22,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.814,727.814,22,"DT")
3180501
"^DD",727.814,727.814,27,0)
PLACEHOLD PC PROV PERSON CLASS^F^^1;5^K:$L(X)>7!($L(X)<7) X
"^DD",727.814,727.814,27,3)
Answer must be 7 characters in length.
"^DD",727.814,727.814,27,21,0)
^^3^3^3180503
"^DD",727.814,727.814,27,21,1,0)
This field, previously known as PC PROVIDER PERSON CLASS, is no longer
"^DD",727.814,727.814,27,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROV PERSON CLASS and
"^DD",727.814,727.814,27,21,3,0)
its value will be set to null.  
"^DD",727.814,727.814,27,23,0)
^^1^1^3180503
"^DD",727.814,727.814,27,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.814,727.814,27,"DT")
3180501
"^DD",727.814,727.814,28,0)
PLACEHOLD ASSOC PC PROVIDER^F^^1;6^K:$L(X)>11!($L(X)<2) X
"^DD",727.814,727.814,28,3)
Answer must be 2-11 characters in length.
"^DD",727.814,727.814,28,21,0)
^^3^3^3180503
"^DD",727.814,727.814,28,21,1,0)
This field, previously known as ASSOCIATE PC PROVIDER, is no longer
"^DD",727.814,727.814,28,21,2,0)
needed. The name has been changed to PLACEHOLD ASSOC PC PROVIDER and its
"^DD",727.814,727.814,28,21,3,0)
value will be set to null.  
"^DD",727.814,727.814,28,23,0)
^^1^1^3180503
"^DD",727.814,727.814,28,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.814,727.814,28,"DT")
3180501
"^DD",727.814,727.814,29,0)
PLACEHOLD AS PC PROV PERSON CL^F^^1;7^K:$L(X)>7!($L(X)<7) X
"^DD",727.814,727.814,29,3)
Answer must be 7 characters in length.
"^DD",727.814,727.814,29,21,0)
^^3^3^3180503
"^DD",727.814,727.814,29,21,1,0)
This field, previously known as ASSOC. PC PROV. PERSON CLASS, is no longer
"^DD",727.814,727.814,29,21,2,0)
needed. The name has been changed to PLACEHOLD AS PC PROV PERSON CL and
"^DD",727.814,727.814,29,21,3,0)
its value will be set to null.  
"^DD",727.814,727.814,29,23,0)
^^1^1^3180503
"^DD",727.814,727.814,29,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.814,727.814,29,"DT")
3180501
"^DD",727.814,727.814,44,0)
PLACEHOLD ASSOC PC PROV NPI^F^^1;22^K:$L(X)>15!($L(X)<1) X
"^DD",727.814,727.814,44,3)
Answer must be 1-15 characters in length.
"^DD",727.814,727.814,44,21,0)
^^3^3^3180503
"^DD",727.814,727.814,44,21,1,0)
This field, previously known as ASSOCIATE PC PROVIDER NPI, is no longer
"^DD",727.814,727.814,44,21,2,0)
needed. The name has been changed to PLACEHOLD ASSOC PC PROV NPI and its
"^DD",727.814,727.814,44,21,3,0)
value will be set to null.  
"^DD",727.814,727.814,44,23,0)
^^1^1^3180503
"^DD",727.814,727.814,44,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.814,727.814,44,"DT")
3180501
"^DD",727.814,727.814,46,0)
PLACEHOLD PC PROVIDER NPI^F^^1;24^K:$L(X)>15!($L(X)<1) X
"^DD",727.814,727.814,46,3)
Answer must be 1-15 characters in length.
"^DD",727.814,727.814,46,21,0)
^^3^3^3180503
"^DD",727.814,727.814,46,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER NPI, is no longer
"^DD",727.814,727.814,46,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROVIDER NPI and its
"^DD",727.814,727.814,46,21,3,0)
value will be set to null.  
"^DD",727.814,727.814,46,23,0)
^^1^1^3180503
"^DD",727.814,727.814,46,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.814,727.814,46,"DT")
3180501
"^DD",727.815,727.815,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;A:ASIH (OTHER FACILITY);^0;8^Q
"^DD",727.815,727.815,7,.1)
In Out Patient Indicator
"^DD",727.815,727.815,7,3)
Enter the patient's status for this extract entry.
"^DD",727.815,727.815,7,21,0)
^.001^1^1^3180629^^
"^DD",727.815,727.815,7,21,1,0)
Indicates the patient's status for this extract entry.
"^DD",727.815,727.815,7,23,0)
^.001^13^13^3180629^^
"^DD",727.815,727.815,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.815,727.815,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine 
"^DD",727.815,727.815,7,23,3,0)
patient status.  If the patient is an outpatient, processing stops and the
"^DD",727.815,727.815,7,23,4,0)
field is set to O.   If the patient is an inpatient then $$INOUTP^ECXUTL4
"^DD",727.815,727.815,7,23,5,0)
is called to look at the treating specialty.  If the patient's treating
"^DD",727.815,727.815,7,23,6,0)
specialty exists in the DSS TREATING SPECIALTY TRANSLATION file (#727.831)
"^DD",727.815,727.815,7,23,7,0)
then the value of the INPAT/OUTPAT CODE field (#5) of the DSS TREATING
"^DD",727.815,727.815,7,23,8,0)
SPECIALTY TRANSLATION file (#727.831) is used.  If the treating specialty
"^DD",727.815,727.815,7,23,9,0)
is not found in the DSS TREATING SPECIALTY TRANSLATION file (#727.831)
"^DD",727.815,727.815,7,23,10,0)
then the indicator is set to I.
"^DD",727.815,727.815,7,23,11,0)
 
"^DD",727.815,727.815,7,23,12,0)
If the patient is ASIH to another facility at the date/time in question 
"^DD",727.815,727.815,7,23,13,0)
then the indicator is set to A.
"^DD",727.815,727.815,7,"DT")
3180629
"^DD",727.815,727.815,26,0)
PLACEHOLD PRIMARY CARE TEAM^FJ4O^^0;27^K:$L(X)>4!($L(X)<1) X
"^DD",727.815,727.815,26,.1)
Primary Care Team
"^DD",727.815,727.815,26,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.815,727.815,26,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.815,727.815,26,3)
Answer must be 1-4 characters in length.
"^DD",727.815,727.815,26,21,0)
^.001^3^3^3180806^^^^
"^DD",727.815,727.815,26,21,1,0)
This field, previously known as PRIMARY CARE TEAM, is no longer needed.  
"^DD",727.815,727.815,26,21,2,0)
The name has been changed to PLACEHOLD PRIMARY CARE TEAM and its value 
"^DD",727.815,727.815,26,21,3,0)
will be set to null. 
"^DD",727.815,727.815,26,23,0)
^.001^1^1^3180806^^^^
"^DD",727.815,727.815,26,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.815,727.815,26,"DT")
3180806
"^DD",727.815,727.815,27,0)
PLACEHOLD PC PROVIDER^F^^0;28^K:$L(X)>11!($L(X)<1) X
"^DD",727.815,727.815,27,.1)
Primary Care Provider
"^DD",727.815,727.815,27,3)
Enter primary care provider assigned to this patient.
"^DD",727.815,727.815,27,21,0)
^.001^3^3^3180530^^
"^DD",727.815,727.815,27,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER, is no longer 
"^DD",727.815,727.815,27,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROVIDER and its value 
"^DD",727.815,727.815,27,21,3,0)
will be set to null.
"^DD",727.815,727.815,27,23,0)
^.001^1^1^3180530^^
"^DD",727.815,727.815,27,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.815,727.815,27,"DT")
3180530
"^DD",727.815,727.815,47,0)
PLACEHOLD PC PROV PERSON CLASS^F^^1;6^K:$L(X)>7!($L(X)<7) X
"^DD",727.815,727.815,47,3)
Answer must be 7 characters in length.
"^DD",727.815,727.815,47,21,0)
^^3^3^3180430^
"^DD",727.815,727.815,47,21,1,0)
This field, previously known as PC PROVIDER PERSON CLASS, is no longer 
"^DD",727.815,727.815,47,21,2,0)
needed.  The name has been changed to PLACEHOLD PC PROV PERSON CLASS and 
"^DD",727.815,727.815,47,21,3,0)
its value will be set to null.
"^DD",727.815,727.815,47,23,0)
^^1^1^3180430^
"^DD",727.815,727.815,47,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.815,727.815,47,"DT")
3180430
"^DD",727.815,727.815,49,0)
PLACEHOLD ASSOC PC PROVIDER^F^^1;8^K:$L(X)>11!($L(X)<2) X
"^DD",727.815,727.815,49,3)
Answer must be 2-11 characters in length.
"^DD",727.815,727.815,49,21,0)
^^3^3^3180430^
"^DD",727.815,727.815,49,21,1,0)
This field, previously known as ASSOCIATE PC PROVIDER, is no longer 
"^DD",727.815,727.815,49,21,2,0)
needed.  The name has been changed to PLACEHOLD ASSOC PC PROVIDER and 
"^DD",727.815,727.815,49,21,3,0)
its value will be set to null.
"^DD",727.815,727.815,49,23,0)
^^1^1^3180430^
"^DD",727.815,727.815,49,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.815,727.815,49,"DT")
3180430
"^DD",727.815,727.815,50,0)
PLACEHOLD AS PC PROV PERSON CL^F^^1;9^K:$L(X)>7!($L(X)<7) X
"^DD",727.815,727.815,50,3)
Answer must be 7 characters in length.
"^DD",727.815,727.815,50,21,0)
^^3^3^3180503
"^DD",727.815,727.815,50,21,1,0)
This field, previously known as ASSOC. PC PROV. PERSON CLASS, is no longer
"^DD",727.815,727.815,50,21,2,0)
needed. The name has been changed to PLACEHOLD AS PC PROV PERSON CL and
"^DD",727.815,727.815,50,21,3,0)
its value will be set to null.  
"^DD",727.815,727.815,50,23,0)
^^1^1^3180503
"^DD",727.815,727.815,50,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.815,727.815,50,"DT")
3180430
"^DD",727.815,727.815,72,0)
PLACEHOLD ETHNICITY^FJ6^^1;31^K:$L(X)>6!($L(X)<1) X
"^DD",727.815,727.815,72,.1)
Ethnicity
"^DD",727.815,727.815,72,3)
Answer must be 1-6 characters in length.
"^DD",727.815,727.815,72,21,0)
^.001^2^2^3180430^^
"^DD",727.815,727.815,72,21,1,0)
This field, previously known as ETHNICITY, is no longer needed.  The name 
"^DD",727.815,727.815,72,21,2,0)
has been changed to PLACEHOLD ETHNICITY and its value will be set to null.
"^DD",727.815,727.815,72,23,0)
^.001^1^1^3180430^^
"^DD",727.815,727.815,72,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.815,727.815,72,"DT")
3180430
"^DD",727.815,727.815,73,0)
PLACEHOLD RACE 1^F^^1;32^K:$L(X)>6!($L(X)<1) X
"^DD",727.815,727.815,73,3)
Answer must be 1-6 characters in length.
"^DD",727.815,727.815,73,21,0)
^.001^2^2^3180430^^
"^DD",727.815,727.815,73,21,1,0)
This field, previously known as RACE 1, is no longer needed.  The name has
"^DD",727.815,727.815,73,21,2,0)
been changed to PLACEHOLD RACE 1 and its value will be set to null.
"^DD",727.815,727.815,73,23,0)
^.001^1^1^3180430^^
"^DD",727.815,727.815,73,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.815,727.815,73,"DT")
3180315
"^DD",727.815,727.815,92,0)
PLACEHOLD ASSOC PC PROV NPI^F^^2;13^K:$L(X)>15!($L(X)<1) X
"^DD",727.815,727.815,92,3)
Answer must be 1-15 characters in length.
"^DD",727.815,727.815,92,21,0)
^^3^3^3180430^
"^DD",727.815,727.815,92,21,1,0)
This field, previously known as ASSOCIATE PC PROVIDER NPI, is no longer 
"^DD",727.815,727.815,92,21,2,0)
needed.  The name has been changed to PLACEHOLD ASSOC PC PROV NPI and 
"^DD",727.815,727.815,92,21,3,0)
its value will be set to null.
"^DD",727.815,727.815,92,23,0)
^^1^1^3180430^
"^DD",727.815,727.815,92,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.815,727.815,92,"DT")
3180430
"^DD",727.815,727.815,93,0)
PLACEHOLD PC PROVIDER NPI^F^^2;14^K:$L(X)>15!($L(X)<1) X
"^DD",727.815,727.815,93,3)
Answer must be 1-15 characters in length.
"^DD",727.815,727.815,93,21,0)
^^3^3^3180503
"^DD",727.815,727.815,93,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER NPI, is no longer
"^DD",727.815,727.815,93,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROVIDER NPI and its
"^DD",727.815,727.815,93,21,3,0)
value will be set to null.  
"^DD",727.815,727.815,93,23,0)
^^1^1^3180503
"^DD",727.815,727.815,93,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.815,727.815,93,"DT")
3180430
"^DD",727.817,727.817,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;A:ASIH (OTHER FACILITY);^0;8^Q
"^DD",727.817,727.817,7,.1)
In Out Patient Indicator
"^DD",727.817,727.817,7,3)
Enter the patient's status at the time of the treating specialty change.
"^DD",727.817,727.817,7,21,0)
^^1^1^3180629^
"^DD",727.817,727.817,7,21,1,0)
Indicates the patient's status for this extract entry.
"^DD",727.817,727.817,7,23,0)
^^13^13^3180629^
"^DD",727.817,727.817,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.817,727.817,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine patient status.  If
"^DD",727.817,727.817,7,23,3,0)
the patient is an outpatient, processing stops and the field is set to
"^DD",727.817,727.817,7,23,4,0)
O.   If the patient is an inpatient then $$INOUTP^ECXUTL4 is called to
"^DD",727.817,727.817,7,23,5,0)
look at the treating specialty.  If the patient's treating specialty
"^DD",727.817,727.817,7,23,6,0)
exists in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.817,727.817,7,23,7,0)
value of the INPAT/OUTPAT CODE field (#5) of the DSS TREATING SPECIALTY
"^DD",727.817,727.817,7,23,8,0)
TRANSLATION file (#727.831) is used.  If the treating specialty is not
"^DD",727.817,727.817,7,23,9,0)
found in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.817,727.817,7,23,10,0)
indicator is set to I.
"^DD",727.817,727.817,7,23,11,0)
 
"^DD",727.817,727.817,7,23,12,0)
If the patient is ASIH to another facility at the date/time in question 
"^DD",727.817,727.817,7,23,13,0)
then the indicator is set to A.
"^DD",727.817,727.817,7,"DT")
3180629
"^DD",727.819,727.819,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;A:ASIH (OTHER FACILITY);^0;8^Q
"^DD",727.819,727.819,7,.1)
In Out Patient Indicator
"^DD",727.819,727.819,7,3)
Enter the patient's status for this extract entry.
"^DD",727.819,727.819,7,21,0)
^^1^1^3180629^
"^DD",727.819,727.819,7,21,1,0)
Indicates the patient's status for this extract entry.
"^DD",727.819,727.819,7,23,0)
^^13^13^3180629^
"^DD",727.819,727.819,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.819,727.819,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine patient status.  If
"^DD",727.819,727.819,7,23,3,0)
the patient is an outpatient, processing stops and the field is set to
"^DD",727.819,727.819,7,23,4,0)
O.   If the patient is an inpatient then $$INOUTP^ECXUTL4 is called to
"^DD",727.819,727.819,7,23,5,0)
look at the treating specialty.  If the patient's treating specialty
"^DD",727.819,727.819,7,23,6,0)
exists in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.819,727.819,7,23,7,0)
value of the INPAT/OUTPAT CODE field (#5) of the DSS TREATING SPECIALTY
"^DD",727.819,727.819,7,23,8,0)
TRANSLATION file (#727.831) is used.  If the treating specialty is not
"^DD",727.819,727.819,7,23,9,0)
found in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.819,727.819,7,23,10,0)
indicator is set to I.
"^DD",727.819,727.819,7,23,11,0)
 
"^DD",727.819,727.819,7,23,12,0)
If the patient is ASIH to another facility at the date/time in question 
"^DD",727.819,727.819,7,23,13,0)
then the indicator is set to A.
"^DD",727.819,727.819,7,"DT")
3180629
"^DD",727.819,727.819,21,0)
PLACEHOLD PRIMARY CARE TEAM^F^^0;21^K:$L(X)>4!($L(X)<1) X
"^DD",727.819,727.819,21,.1)
Primary Care Team
"^DD",727.819,727.819,21,3)
Enter primary care team assigned to this patient.
"^DD",727.819,727.819,21,21,0)
^^3^3^3180430^
"^DD",727.819,727.819,21,21,1,0)
This field, previously known as PRIMARY CARE TEAM, is no longer needed.  
"^DD",727.819,727.819,21,21,2,0)
The name has been changed to PLACEHOLD PRIMARY CARE TEAM and its value 
"^DD",727.819,727.819,21,21,3,0)
will be set to null.
"^DD",727.819,727.819,21,23,0)
^^1^1^3180430^
"^DD",727.819,727.819,21,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.819,727.819,21,"DT")
3180430
"^DD",727.819,727.819,22,0)
PLACEHOLD PC PROVIDER^F^^0;22^K:$L(X)>11!($L(X)<1) X
"^DD",727.819,727.819,22,.1)
Primary Care Provider
"^DD",727.819,727.819,22,3)
Enter primary care provider assigned to this patient.
"^DD",727.819,727.819,22,21,0)
^^3^3^3180430^
"^DD",727.819,727.819,22,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER, is no longer 
"^DD",727.819,727.819,22,21,2,0)
needed.  The name has been changed to PLACEHOLD PC PROVIDER and its 
"^DD",727.819,727.819,22,21,3,0)
value will be set to null.
"^DD",727.819,727.819,22,23,0)
^^1^1^3180430^
"^DD",727.819,727.819,22,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.819,727.819,22,"DT")
3180430
"^DD",727.819,727.819,24,0)
ADMISSION DATE^FJ8O^^0;24^K:$L(X)>8!($L(X)<8) X
"^DD",727.819,727.819,24,.1)
Admission Date
"^DD",727.819,727.819,24,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.819,727.819,24,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.819,727.819,24,3)
Answer must be 8 characters in length (YYYYMMDD).
"^DD",727.819,727.819,24,21,0)
^.001^2^2^3120608^^^^
"^DD",727.819,727.819,24,21,1,0)
This 8-character numeric string represents the date on which the patient's
"^DD",727.819,727.819,24,21,2,0)
admission occurred.
"^DD",727.819,727.819,24,23,0)
^^15^15^3180809^
"^DD",727.819,727.819,24,23,1,0)
A call is made to $$INP^ECXUTL2 using the patient's DFN and the date/time 
"^DD",727.819,727.819,24,23,2,0)
the IV was administered.  The call will return the admission date/time
"^DD",727.819,727.819,24,23,3,0)
associated with this episode of care.  
"^DD",727.819,727.819,24,23,4,0)
 
"^DD",727.819,727.819,24,23,5,0)
In the case of a patient who is ASIH OTHER FACILITY, it will be the
"^DD",727.819,727.819,24,23,6,0)
date/time of the movement that put the patient into ASIH OTHER FACILITY
"^DD",727.819,727.819,24,23,7,0)
status. 
"^DD",727.819,727.819,24,23,8,0)
 
"^DD",727.819,727.819,24,23,9,0)
The date portion of the DATE/TIME field (#.01) of the PATIENT MOVEMENT
"^DD",727.819,727.819,24,23,10,0)
file (#405) is used to populate this field.
"^DD",727.819,727.819,24,23,11,0)
 
"^DD",727.819,727.819,24,23,12,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.819,727.819,24,23,13,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.819,727.819,24,23,14,0)
then a default is used.  The default date value is the value of the 
"^DD",727.819,727.819,24,23,15,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.819,727.819,24,"DT")
3180822
"^DD",727.819,727.819,25,0)
ADMISSION TIME^FJ6O^^0;25^K:$L(X)>6!($L(X)<6) X
"^DD",727.819,727.819,25,.1)
Admission Time
"^DD",727.819,727.819,25,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.819,727.819,25,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,0)
"^DD",727.819,727.819,25,3)
Answer must be 6 characters in length (HHMMSS).
"^DD",727.819,727.819,25,21,0)
^.001^1^1^3120608^^
"^DD",727.819,727.819,25,21,1,0)
Time of day at which the patient admission occurred.
"^DD",727.819,727.819,25,23,0)
^^13^13^3180809^
"^DD",727.819,727.819,25,23,1,0)
A call is made to $$INP^ECXUTL2 using the patient's DFN and the date/time 
"^DD",727.819,727.819,25,23,2,0)
the IV was administered.  The call will return the admission date/time
"^DD",727.819,727.819,25,23,3,0)
associated with this episode of care.  
"^DD",727.819,727.819,25,23,4,0)
 
"^DD",727.819,727.819,25,23,5,0)
In the case of a patient who is ASIH OTHER FACILITY, it will be the
"^DD",727.819,727.819,25,23,6,0)
date/time of the movement that put the patient into ASIH OTHER FACILITY
"^DD",727.819,727.819,25,23,7,0)
status. 
"^DD",727.819,727.819,25,23,8,0)
 
"^DD",727.819,727.819,25,23,9,0)
The time portion of the DATE/TIME field (#.01) of the PATIENT MOVEMENT
"^DD",727.819,727.819,25,23,10,0)
file (#405) is used to populate this field.
"^DD",727.819,727.819,25,23,11,0)
 
"^DD",727.819,727.819,25,23,12,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.819,727.819,25,23,13,0)
cannot be determined, then "000300" is used as default.
"^DD",727.819,727.819,25,"DT")
3180822
"^DD",727.819,727.819,30,0)
PLACEHOLD PC PROV PERSON CLASS^F^^1;4^K:$L(X)>7!($L(X)<7) X
"^DD",727.819,727.819,30,3)
Answer must be 7 characters in length.
"^DD",727.819,727.819,30,21,0)
^^3^3^3180503
"^DD",727.819,727.819,30,21,1,0)
This field, previously known as PC PROVIDER PERSON CLASS, is no longer
"^DD",727.819,727.819,30,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROV PERSON CLASS and
"^DD",727.819,727.819,30,21,3,0)
its value will be set to null.  
"^DD",727.819,727.819,30,23,0)
^^1^1^3180503
"^DD",727.819,727.819,30,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.819,727.819,30,"DT")
3180501
"^DD",727.819,727.819,31,0)
PLACEHOLD ASSOC PC PROVIDER^F^^1;5^K:$L(X)>11!($L(X)<2) X
"^DD",727.819,727.819,31,3)
Answer must be 2-11 characters in length.
"^DD",727.819,727.819,31,21,0)
^^3^3^3180503
"^DD",727.819,727.819,31,21,1,0)
This field, previously known as ASSOCIATE PC PROVIDER, is no longer
"^DD",727.819,727.819,31,21,2,0)
needed. The name has been changed to PLACEHOLD ASSOC PC PROVIDER and its
"^DD",727.819,727.819,31,21,3,0)
value will be set to null.  
"^DD",727.819,727.819,31,23,0)
^^1^1^3180503
"^DD",727.819,727.819,31,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.819,727.819,31,"DT")
3180501
"^DD",727.819,727.819,32,0)
PLACEHOLD AS PC PROV PERSON CL^F^^1;6^K:$L(X)>7!($L(X)<7) X
"^DD",727.819,727.819,32,3)
Answer must be 7 characters in length.
"^DD",727.819,727.819,32,21,0)
^^3^3^3180503
"^DD",727.819,727.819,32,21,1,0)
This field, previously known as ASSOC. PC PROV. PERSON CLASS, is no longer
"^DD",727.819,727.819,32,21,2,0)
needed. The name has been changed to PLACEHOLD AS PC PROV PERSON CL and
"^DD",727.819,727.819,32,21,3,0)
its value will be set to null.  
"^DD",727.819,727.819,32,23,0)
^^1^1^3180503
"^DD",727.819,727.819,32,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.819,727.819,32,"DT")
3180501
"^DD",727.819,727.819,65,0)
PLACEHOLD ETHNICITY^F^^2;2^K:$L(X)>6!($L(X)<1) X
"^DD",727.819,727.819,65,.1)
Ethnicity
"^DD",727.819,727.819,65,3)
Answer must be 1-6 characters in length
"^DD",727.819,727.819,65,21,0)
^^2^2^3180315^
"^DD",727.819,727.819,65,21,1,0)
This field, previously known as ETHNICITY, is no longer needed.  The name 
"^DD",727.819,727.819,65,21,2,0)
has been changed to PLACEHOLD ETHNICITY and its value will be set to null.
"^DD",727.819,727.819,65,23,0)
^^1^1^3180315^
"^DD",727.819,727.819,65,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.819,727.819,65,"DT")
3180315
"^DD",727.819,727.819,66,0)
PLACEHOLD RACE 1^F^^2;3^K:$L(X)>6!($L(X)<1) X
"^DD",727.819,727.819,66,.1)
Race 1
"^DD",727.819,727.819,66,3)
Answer must be 1-6 characters in length.
"^DD",727.819,727.819,66,21,0)
^^2^2^3180315^
"^DD",727.819,727.819,66,21,1,0)
This field, previously known as RACE 1, is no longer needed.  The name has
"^DD",727.819,727.819,66,21,2,0)
been changed to PLACEHOLD RACE 1 and its value will be set to null.
"^DD",727.819,727.819,66,23,0)
^^1^1^3180315^
"^DD",727.819,727.819,66,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.819,727.819,66,"DT")
3180315
"^DD",727.819,727.819,84,0)
PLACEHOLD ASSOC PC PROV NPI^F^^2;21^K:$L(X)>15!($L(X)<1) X
"^DD",727.819,727.819,84,3)
Answer must be 1-15 characters in length.
"^DD",727.819,727.819,84,21,0)
^^3^3^3180503
"^DD",727.819,727.819,84,21,1,0)
This field, previously known as ASSOCIATE PC PROVIDER NPI, is no longer
"^DD",727.819,727.819,84,21,2,0)
needed. The name has been changed to PLACEHOLD ASSOC PC PROV NPI and its
"^DD",727.819,727.819,84,21,3,0)
value will be set to null.  
"^DD",727.819,727.819,84,23,0)
^^1^1^3180503
"^DD",727.819,727.819,84,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.819,727.819,84,"DT")
3180501
"^DD",727.819,727.819,86,0)
PLACEHOLD PC PROVIDER NPI^F^^2;23^K:$L(X)>15!($L(X)<1) X
"^DD",727.819,727.819,86,3)
Answer must be 1-15 characters in length.
"^DD",727.819,727.819,86,21,0)
^^3^3^3180503
"^DD",727.819,727.819,86,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER NPI, is no longer
"^DD",727.819,727.819,86,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROVIDER NPI and its
"^DD",727.819,727.819,86,21,3,0)
value will be set to null.  
"^DD",727.819,727.819,86,23,0)
^^1^1^3180503
"^DD",727.819,727.819,86,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.819,727.819,86,"DT")
3180501
"^DD",727.824,727.824,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;A:ASIH (OTHER FACILITY);^0;8^Q
"^DD",727.824,727.824,7,.1)
In Out Patient Indicator
"^DD",727.824,727.824,7,3)
Enter the patient's status for this extract entry.
"^DD",727.824,727.824,7,21,0)
^^1^1^3180629^
"^DD",727.824,727.824,7,21,1,0)
Indicates the patient's status for this extract entry.
"^DD",727.824,727.824,7,23,0)
^^13^13^3180629^
"^DD",727.824,727.824,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.824,727.824,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine patient status.  If
"^DD",727.824,727.824,7,23,3,0)
the patient is an outpatient, processing stops and the field is set to
"^DD",727.824,727.824,7,23,4,0)
O.   If the patient is an inpatient then $$INOUTP^ECXUTL4 is called to
"^DD",727.824,727.824,7,23,5,0)
look at the treating specialty.  If the patient's treating specialty
"^DD",727.824,727.824,7,23,6,0)
exists in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.824,727.824,7,23,7,0)
value of the INPAT/OUTPAT CODE field (#5) of the DSS TREATING SPECIALTY
"^DD",727.824,727.824,7,23,8,0)
TRANSLATION file (#727.831) is used.  If the treating specialty is not
"^DD",727.824,727.824,7,23,9,0)
found in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.824,727.824,7,23,10,0)
indicator is set to I.
"^DD",727.824,727.824,7,23,11,0)
 
"^DD",727.824,727.824,7,23,12,0)
If the patient is ASIH to another facility at the date/time in question 
"^DD",727.824,727.824,7,23,13,0)
then the indicator is set to A.
"^DD",727.824,727.824,7,"DT")
3180629
"^DD",727.824,727.824,10,0)
PLACEHOLD RESULTS^NJ10,4^^0;11^K:+X'=X!(X>10000)!(X<-10000)!(X?.E1"."5N.N) X
"^DD",727.824,727.824,10,.1)
Results
"^DD",727.824,727.824,10,3)
Enter a number between -10000 and 10000, 4 decimal digits.
"^DD",727.824,727.824,10,21,0)
^^2^2^3180508
"^DD",727.824,727.824,10,21,1,0)
This field, previously known as RESULTS, is no longer needed. The name has
"^DD",727.824,727.824,10,21,2,0)
been changed to PLACEHOLD RESULTS and its value will be set to null.  
"^DD",727.824,727.824,10,23,0)
^^1^1^3180508
"^DD",727.824,727.824,10,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.824,727.824,10,"DT")
3180501
"^DD",727.824,727.824,36,0)
LONG RESULT^FJ35^^1;17^K:$L(X)>35!($L(X)<1) X
"^DD",727.824,727.824,36,3)
Enter up to 35 characters of the test result.
"^DD",727.824,727.824,36,21,0)
^.001^1^1^3180601^^
"^DD",727.824,727.824,36,21,1,0)
This field will store up to 35 characters of the lab test result.
"^DD",727.824,727.824,36,23,0)
^^6^6^3180601^
"^DD",727.824,727.824,36,23,1,0)
Results of the test identified in the CHEM, HEM, TOX, RIA, SER, etc.
"^DD",727.824,727.824,36,23,2,0)
multiple (4) within the LAB DATA file (#63).
"^DD",727.824,727.824,36,23,3,0)
 
"^DD",727.824,727.824,36,23,4,0)
The result is obtained by calling $$TSTRES^LRRPU.  Only the first 35 
"^DD",727.824,727.824,36,23,5,0)
characters of the result are stored.  If the result is longer than 35 
"^DD",727.824,727.824,36,23,6,0)
characters, it is truncated to 35.
"^DD",727.824,727.824,36,"DT")
3180601
"^DD",727.825,727.825,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;A:ASIH (OTHER FACILITY);^0;8^Q
"^DD",727.825,727.825,7,.1)
In Out Patient Indicator
"^DD",727.825,727.825,7,3)
Enter the patient's status for this extract entry.
"^DD",727.825,727.825,7,21,0)
^^1^1^3180629^
"^DD",727.825,727.825,7,21,1,0)
Indicates the patient's status for this extract entry.
"^DD",727.825,727.825,7,23,0)
^^13^13^3180629^
"^DD",727.825,727.825,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.825,727.825,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine patient status.  If
"^DD",727.825,727.825,7,23,3,0)
the patient is an outpatient, processing stops and the field is set to
"^DD",727.825,727.825,7,23,4,0)
O.   If the patient is an inpatient then $$INOUTP^ECXUTL4 is called to
"^DD",727.825,727.825,7,23,5,0)
look at the treating specialty.  If the patient's treating specialty
"^DD",727.825,727.825,7,23,6,0)
exists in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.825,727.825,7,23,7,0)
value of the INPAT/OUTPAT CODE field (#5) of the DSS TREATING SPECIALTY
"^DD",727.825,727.825,7,23,8,0)
TRANSLATION file (#727.831) is used.  If the treating specialty is not
"^DD",727.825,727.825,7,23,9,0)
found in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.825,727.825,7,23,10,0)
indicator is set to I.
"^DD",727.825,727.825,7,23,11,0)
 
"^DD",727.825,727.825,7,23,12,0)
If the patient is ASIH to another facility at the date/time in question 
"^DD",727.825,727.825,7,23,13,0)
then the indicator is set to A.
"^DD",727.825,727.825,7,"DT")
3180629
"^DD",727.825,727.825,26,0)
PLACEHOLD PRIMARY CARE TEAM^FO^^0;27^K:$L(X)>4!($L(X)<1) X
"^DD",727.825,727.825,26,.1)
Primary Care Team
"^DD",727.825,727.825,26,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,1)
"^DD",727.825,727.825,26,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,1)
"^DD",727.825,727.825,26,3)
Enter primary care team assigned to this patient.
"^DD",727.825,727.825,26,21,0)
^^3^3^3180430^
"^DD",727.825,727.825,26,21,1,0)
This field, previously known as PRIMARY CARE TEAM, is no longer needed.  
"^DD",727.825,727.825,26,21,2,0)
The name has been changed to PLACEHOLD PRIMARY CARE TEAM and its value 
"^DD",727.825,727.825,26,21,3,0)
will be set to null.
"^DD",727.825,727.825,26,23,0)
^^1^1^3180430^
"^DD",727.825,727.825,26,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.825,727.825,26,"DT")
3180430
"^DD",727.825,727.825,27,0)
PLACEHOLD PC PROVIDER^F^^0;28^K:$L(X)>11!($L(X)<1) X
"^DD",727.825,727.825,27,.1)
Primary Care Provider
"^DD",727.825,727.825,27,3)
Enter primary care provider assigned to this patient.
"^DD",727.825,727.825,27,21,0)
^^3^3^3180430^
"^DD",727.825,727.825,27,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER, is no longer 
"^DD",727.825,727.825,27,21,2,0)
needed.  The name has been changed to PLACEHOLD PC PROVIDER and its 
"^DD",727.825,727.825,27,21,3,0)
value will be set to null.
"^DD",727.825,727.825,27,23,0)
^^1^1^3180430^
"^DD",727.825,727.825,27,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.825,727.825,27,"DT")
3180430
"^DD",727.825,727.825,47,0)
PLACEHOLD PC PROV PERSON CLASS^F^^1;6^K:$L(X)>7!($L(X)<7) X
"^DD",727.825,727.825,47,3)
Answer must be 7 characters in length.
"^DD",727.825,727.825,47,21,0)
^^3^3^3180430^
"^DD",727.825,727.825,47,21,1,0)
This field, previously known as PC PROVIDER PERSON CLASS, is no longer 
"^DD",727.825,727.825,47,21,2,0)
needed.  The name has been changed to PLACEHOLD PC PROV PERSON CLASS and 
"^DD",727.825,727.825,47,21,3,0)
its value will be set to null.
"^DD",727.825,727.825,47,23,0)
^^1^1^3180430^
"^DD",727.825,727.825,47,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.825,727.825,47,"DT")
3180430
"^DD",727.825,727.825,49,0)
PLACEHOLD ASSOC PC PROVIDER^F^^1;8^K:$L(X)>11!($L(X)<2) X
"^DD",727.825,727.825,49,3)
Answer must be 2-11 characters in length.
"^DD",727.825,727.825,49,21,0)
^^3^3^3180430^
"^DD",727.825,727.825,49,21,1,0)
This field, previously known as ASSOCIATE PC PROVIDER, is no longer 
"^DD",727.825,727.825,49,21,2,0)
needed.  The name has been changed to PLACEHOLD ASSOC PC PROVIDER and 
"^DD",727.825,727.825,49,21,3,0)
its value will be set to null.
"^DD",727.825,727.825,49,23,0)
^^1^1^3180430^
"^DD",727.825,727.825,49,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.825,727.825,49,"DT")
3180430
"^DD",727.825,727.825,50,0)
PLACEHOLD AS PC PROV PERSON CL^F^^1;9^K:$L(X)>7!($L(X)<7) X
"^DD",727.825,727.825,50,3)
Answer must be 7 characters in length.
"^DD",727.825,727.825,50,21,0)
^^3^3^3180503
"^DD",727.825,727.825,50,21,1,0)
This field, previously known as ASSOC. PC PROV. PERSON CLASS, is no longer
"^DD",727.825,727.825,50,21,2,0)
needed. The name has been changed to PLACEHOLD AS PC PROV PERSON CL and
"^DD",727.825,727.825,50,21,3,0)
its value will be set to null.  
"^DD",727.825,727.825,50,23,0)
^^1^1^3180503
"^DD",727.825,727.825,50,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.825,727.825,50,"DT")
3180430
"^DD",727.825,727.825,72,0)
PLACEHOLD ETHNICITY^F^^1;31^K:$L(X)>6!($L(X)<1) X
"^DD",727.825,727.825,72,.1)
Ethnicity
"^DD",727.825,727.825,72,3)
Answer must be 1-6 characters in length
"^DD",727.825,727.825,72,21,0)
^.001^2^2^3180430^^
"^DD",727.825,727.825,72,21,1,0)
This field, previously known as ETHNICITY, is no longer needed.  The name 
"^DD",727.825,727.825,72,21,2,0)
has been changed to PLACEHOLD ETHNICITY and its value will be set to null.
"^DD",727.825,727.825,72,23,0)
^.001^1^1^3180430^^
"^DD",727.825,727.825,72,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.825,727.825,72,"DT")
3180315
"^DD",727.825,727.825,73,0)
PLACEHOLD RACE 1^F^^1;32^K:$L(X)>6!($L(X)<1) X
"^DD",727.825,727.825,73,.1)
Race 1
"^DD",727.825,727.825,73,3)
Answer must be 1-6 characters in length.
"^DD",727.825,727.825,73,21,0)
^.001^2^2^3180430^^
"^DD",727.825,727.825,73,21,1,0)
This field, previously known as RACE 1, is no longer needed.  The name has
"^DD",727.825,727.825,73,21,2,0)
been changed to PLACEHOLD RACE 1 and its value will be set to null.
"^DD",727.825,727.825,73,23,0)
^.001^1^1^3180430^^
"^DD",727.825,727.825,73,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.825,727.825,73,"DT")
3180315
"^DD",727.825,727.825,92,0)
PLACEHOLD ASSOC PC PROV NPI^F^^2;13^K:$L(X)>15!($L(X)<1) X
"^DD",727.825,727.825,92,3)
Answer must be 1-15 characters in length.
"^DD",727.825,727.825,92,21,0)
^^3^3^3180430^
"^DD",727.825,727.825,92,21,1,0)
This field, previously known as ASSOCIATE PC PROVIDER NPI, is no longer 
"^DD",727.825,727.825,92,21,2,0)
needed.  The name has been changed to PLACEHOLD ASSOC PC PROV NPI and 
"^DD",727.825,727.825,92,21,3,0)
its value will be set to null.
"^DD",727.825,727.825,92,23,0)
^^1^1^3180430^
"^DD",727.825,727.825,92,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.825,727.825,92,"DT")
3180430
"^DD",727.825,727.825,93,0)
PLACEHOLD PC PROVIDER NPI^F^^2;14^K:$L(X)>15!($L(X)<1) X
"^DD",727.825,727.825,93,3)
Answer must be 1-15 characters in length.
"^DD",727.825,727.825,93,21,0)
^^3^3^3180503
"^DD",727.825,727.825,93,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER NPI, is no longer
"^DD",727.825,727.825,93,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROVIDER NPI and its
"^DD",727.825,727.825,93,21,3,0)
value will be set to null.  
"^DD",727.825,727.825,93,23,0)
^^1^1^3180503
"^DD",727.825,727.825,93,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.825,727.825,93,"DT")
3180430
"^DD",727.826,727.826,7,0)
IN OUTPATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;A:ASIH (OTHER FACILITY);^0;8^Q
"^DD",727.826,727.826,7,.1)
IN Outpatient Indicator
"^DD",727.826,727.826,7,3)
Enter the patient's status for this extract entry.
"^DD",727.826,727.826,7,10)

"^DD",727.826,727.826,7,21,0)
^^1^1^3180629^
"^DD",727.826,727.826,7,21,1,0)
Indicates the patient's status for this extract entry.
"^DD",727.826,727.826,7,23,0)
^^13^13^3180629^
"^DD",727.826,727.826,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.826,727.826,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine patient status.  If
"^DD",727.826,727.826,7,23,3,0)
the patient is an outpatient, processing stops and the field is set to
"^DD",727.826,727.826,7,23,4,0)
O.   If the patient is an inpatient then $$INOUTP^ECXUTL4 is called to
"^DD",727.826,727.826,7,23,5,0)
look at the treating specialty.  If the patient's treating specialty
"^DD",727.826,727.826,7,23,6,0)
exists in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.826,727.826,7,23,7,0)
value of the INPAT/OUTPAT CODE field (#5) of the DSS TREATING SPECIALTY
"^DD",727.826,727.826,7,23,8,0)
TRANSLATION file (#727.831) is used.  If the treating specialty is not
"^DD",727.826,727.826,7,23,9,0)
found in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.826,727.826,7,23,10,0)
indicator is set to I.
"^DD",727.826,727.826,7,23,11,0)
 
"^DD",727.826,727.826,7,23,12,0)
If the patient is ASIH to another facility at the date/time in question 
"^DD",727.826,727.826,7,23,13,0)
then the indicator is set to A.
"^DD",727.826,727.826,7,"DT")
3180629
"^DD",727.826,727.826,12,0)
PLACEHOLD PRIMARY CARE TEAM^F^^0;13^K:$L(X)>4!($L(X)<1) X
"^DD",727.826,727.826,12,.1)
Primary Care Team
"^DD",727.826,727.826,12,3)
Answer must be 1-4 characters in length.
"^DD",727.826,727.826,12,10)
OUTPTTM^SDUTL3 returns the teams IEN from the Team file (404.51).
"^DD",727.826,727.826,12,21,0)
^^3^3^3180503
"^DD",727.826,727.826,12,21,1,0)
This field, previously known as PRIMARY CARE TEAM, is no longer needed.
"^DD",727.826,727.826,12,21,2,0)
The name has been changed to PLACEHOLD PRIMARY CARE TEAM and its value
"^DD",727.826,727.826,12,21,3,0)
will be set to null.  
"^DD",727.826,727.826,12,23,0)
^^1^1^3180503
"^DD",727.826,727.826,12,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.826,727.826,12,"DT")
3180501
"^DD",727.826,727.826,13,0)
PLACEHOLD PC PROVIDER^F^^0;14^K:$L(X)>11!($L(X)<2) X
"^DD",727.826,727.826,13,.1)
Primary Care Provider
"^DD",727.826,727.826,13,3)
Answer must be 2-11 characters in length.
"^DD",727.826,727.826,13,10)

"^DD",727.826,727.826,13,21,0)
^^3^3^3180502
"^DD",727.826,727.826,13,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER, is no longer
"^DD",727.826,727.826,13,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROVIDER and its value
"^DD",727.826,727.826,13,21,3,0)
will be set to null.  
"^DD",727.826,727.826,13,23,0)
^^1^1^3180502
"^DD",727.826,727.826,13,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.826,727.826,13,"DT")
3180501
"^DD",727.826,727.826,40,0)
PLACEHOLD PC PROV PERSON CLASS^F^^1;8^K:$L(X)>7!($L(X)<7) X
"^DD",727.826,727.826,40,3)
Answer must be 7 characters in length.
"^DD",727.826,727.826,40,21,0)
^^3^3^3180503
"^DD",727.826,727.826,40,21,1,0)
This field, previously known as PC PROVIDER PERSON CLASS, is no longer
"^DD",727.826,727.826,40,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROV PERSON CLASS and
"^DD",727.826,727.826,40,21,3,0)
its value will be set to null.  
"^DD",727.826,727.826,40,23,0)
^^1^1^3180503
"^DD",727.826,727.826,40,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.826,727.826,40,"DT")
3180501
"^DD",727.826,727.826,41,0)
PLACEHOLD RACE^F^^1;9^K:$L(X)>1!($L(X)<1) X
"^DD",727.826,727.826,41,3)
Answer must be 1 character in length.
"^DD",727.826,727.826,41,21,0)
^^2^2^3180315^
"^DD",727.826,727.826,41,21,1,0)
This field, previously known as RACE, is no longer needed.  The name has  
"^DD",727.826,727.826,41,21,2,0)
been changed to PLACEHOLD RACE and its value will be set to null.
"^DD",727.826,727.826,41,23,0)
^^1^1^3180315^
"^DD",727.826,727.826,41,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.826,727.826,41,"DT")
3180315
"^DD",727.826,727.826,50,0)
PLACEHOLD ASSOC PC PROVIDER^F^^1;18^K:$L(X)>11!($L(X)<2) X
"^DD",727.826,727.826,50,3)
Answer must be 2-11 characters in length.
"^DD",727.826,727.826,50,21,0)
^^3^3^3180503
"^DD",727.826,727.826,50,21,1,0)
This field, previously known as ASSOCIATE PC PROVIDER, is no longer
"^DD",727.826,727.826,50,21,2,0)
needed. The name has been changed to PLACEHOLD ASSOC PC PROVIDER and its
"^DD",727.826,727.826,50,21,3,0)
value will be set to null.  
"^DD",727.826,727.826,50,23,0)
^^1^1^3180503
"^DD",727.826,727.826,50,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.826,727.826,50,"DT")
3180501
"^DD",727.826,727.826,51,0)
PLACEHOLD AS PC PROV PERSON CL^F^^1;19^K:$L(X)>7!($L(X)<7) X
"^DD",727.826,727.826,51,3)
Answer must be 7 characters in length.
"^DD",727.826,727.826,51,21,0)
^^3^3^3180503
"^DD",727.826,727.826,51,21,1,0)
This field, previously known as ASSOC. PC PROV. PERSON CLASS, is no longer
"^DD",727.826,727.826,51,21,2,0)
needed. The name has been changed to PLACEHOLD AS PC PROV PERSON CL and
"^DD",727.826,727.826,51,21,3,0)
its value will be set to null.  
"^DD",727.826,727.826,51,23,0)
^^1^1^3180503
"^DD",727.826,727.826,51,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.826,727.826,51,"DT")
3180501
"^DD",727.826,727.826,65,0)
PLACEHOLD ETHNICITY^F^^1;33^K:$L(X)>6!($L(X)<1) X
"^DD",727.826,727.826,65,.1)
Ethnicity
"^DD",727.826,727.826,65,3)
Answer must be 1-6 characters in length
"^DD",727.826,727.826,65,21,0)
^^2^2^3180315^
"^DD",727.826,727.826,65,21,1,0)
This field, previously known as ETHNICITY, is no longer needed.  The name 
"^DD",727.826,727.826,65,21,2,0)
has been changed to PLACEHOLD ETHNICITY and its value will be set to null.
"^DD",727.826,727.826,65,23,0)
^^1^1^3180315^
"^DD",727.826,727.826,65,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.826,727.826,65,"DT")
3180315
"^DD",727.826,727.826,66,0)
PLACEHOLD RACE 1^F^^1;34^K:$L(X)>6!($L(X)<1) X
"^DD",727.826,727.826,66,.1)
Race 1
"^DD",727.826,727.826,66,3)
Answer must be 1-6 characters in length.
"^DD",727.826,727.826,66,21,0)
^^2^2^3180315^
"^DD",727.826,727.826,66,21,1,0)
This field, previously known as RACE 1, is no longer needed.  The name has
"^DD",727.826,727.826,66,21,2,0)
been changed to PLACEHOLD RACE 1 and its value will be set to null.
"^DD",727.826,727.826,66,23,0)
^^1^1^3180315^
"^DD",727.826,727.826,66,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.826,727.826,66,"DT")
3180315
"^DD",727.826,727.826,85,0)
PLACEHOLD ASSOC PC PROV NPI^F^^2;5^K:$L(X)>15!($L(X)<1) X
"^DD",727.826,727.826,85,3)
Answer must be 1-15 characters in length.
"^DD",727.826,727.826,85,21,0)
^^3^3^3180503
"^DD",727.826,727.826,85,21,1,0)
This field, previously known as ASSOCIATE PC PROVIDER NPI, is no longer
"^DD",727.826,727.826,85,21,2,0)
needed. The name has been changed to PLACEHOLD ASSOC PC PROV NPI and its
"^DD",727.826,727.826,85,21,3,0)
value will be set to null.  
"^DD",727.826,727.826,85,23,0)
^^1^1^3180503
"^DD",727.826,727.826,85,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.826,727.826,85,"DT")
3180501
"^DD",727.826,727.826,86,0)
PLACEHOLD PC PROVIDER NPI^F^^2;6^K:$L(X)>15!($L(X)<1) X
"^DD",727.826,727.826,86,3)
Answer must be 1-15 characters in length.
"^DD",727.826,727.826,86,21,0)
^^3^3^3180503
"^DD",727.826,727.826,86,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER NPI, is no longer
"^DD",727.826,727.826,86,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROVIDER NPI and its
"^DD",727.826,727.826,86,21,3,0)
value will be set to null.  
"^DD",727.826,727.826,86,23,0)
^^1^1^3180503
"^DD",727.826,727.826,86,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.826,727.826,86,"DT")
3180501
"^DD",727.827,727.827,7,0)
IN/OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;A:ASIH (OTHER FACILITY);^0;8^Q
"^DD",727.827,727.827,7,3)
Enter the patient's status for this extract entry.
"^DD",727.827,727.827,7,21,0)
^^1^1^3180629^
"^DD",727.827,727.827,7,21,1,0)
Indicates the patient's status for this extract entry.
"^DD",727.827,727.827,7,23,0)
^^13^13^3180629^
"^DD",727.827,727.827,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.827,727.827,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine patient status.  If
"^DD",727.827,727.827,7,23,3,0)
the patient is an outpatient, processing stops and the field is set to
"^DD",727.827,727.827,7,23,4,0)
O.   If the patient is an inpatient then $$INOUTP^ECXUTL4 is called to
"^DD",727.827,727.827,7,23,5,0)
look at the treating specialty.  If the patient's treating specialty
"^DD",727.827,727.827,7,23,6,0)
exists in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.827,727.827,7,23,7,0)
value of the INPAT/OUTPAT CODE field (#5) of the DSS TREATING SPECIALTY
"^DD",727.827,727.827,7,23,8,0)
TRANSLATION file (#727.831) is used.  If the treating specialty is not
"^DD",727.827,727.827,7,23,9,0)
found in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.827,727.827,7,23,10,0)
indicator is set to I.
"^DD",727.827,727.827,7,23,11,0)
 
"^DD",727.827,727.827,7,23,12,0)
If the patient is ASIH to another facility at the date/time in question 
"^DD",727.827,727.827,7,23,13,0)
then the indicator is set to A.
"^DD",727.827,727.827,7,"DT")
3180629
"^DD",727.827,727.827,14,0)
PLACEHOLD PRIMARY CARE TEAM^P404.51'^SCTM(404.51,^0;15^Q
"^DD",727.827,727.827,14,3)
Enter the primary care team assigned to this patient at the time of the visit.
"^DD",727.827,727.827,14,21,0)
^^3^3^3180430^
"^DD",727.827,727.827,14,21,1,0)
This field, previously known as PRIMARY CARE TEAM, is no longer needed.  
"^DD",727.827,727.827,14,21,2,0)
The name has been changed to PLACEHOLD PRIMARY CARE TEAM and its value 
"^DD",727.827,727.827,14,21,3,0)
will be set to null.
"^DD",727.827,727.827,14,23,0)
^^1^1^3180430^
"^DD",727.827,727.827,14,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.827,727.827,14,"DT")
3180430
"^DD",727.827,727.827,15,0)
PLACEHOLD PC PROVIDER^F^^0;16^K:$L(X)>11!($L(X)<2) X
"^DD",727.827,727.827,15,3)
Answer must be 2-11 characters in length.
"^DD",727.827,727.827,15,21,0)
^^3^3^3180430^
"^DD",727.827,727.827,15,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER, is no longer 
"^DD",727.827,727.827,15,21,2,0)
needed.  The name has been changed to PLACEHOLD PC PROVIDER and its 
"^DD",727.827,727.827,15,21,3,0)
value will be set to null.
"^DD",727.827,727.827,15,23,0)
^^1^1^3180430^
"^DD",727.827,727.827,15,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.827,727.827,15,"DT")
3180430
"^DD",727.827,727.827,16,0)
PLACEHOLD PC PROV PERSON CLASS^F^^0;17^K:$L(X)>7!($L(X)<7) X
"^DD",727.827,727.827,16,3)
Answer must be 7 characters in length.
"^DD",727.827,727.827,16,21,0)
^^3^3^3180430^
"^DD",727.827,727.827,16,21,1,0)
This field, previously known as PRIMARY CARE PRV PERSON CLASS, is no 
"^DD",727.827,727.827,16,21,2,0)
longer needed.  The name has been changed to PLACEHOLD PC PROV PERSON 
"^DD",727.827,727.827,16,21,3,0)
CLASS and its value will be set to null.
"^DD",727.827,727.827,16,23,0)
^^1^1^3180430^
"^DD",727.827,727.827,16,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.827,727.827,16,"DT")
3180430
"^DD",727.827,727.827,19,0)
PLACEHOLD CPT QTY & MODS #1^F^^0;20^K:$L(X)>17!($L(X)<1) X
"^DD",727.827,727.827,19,3)
Answer must be 1-17 characters in length.
"^DD",727.827,727.827,19,21,0)
^.001^3^3^3180530^^
"^DD",727.827,727.827,19,21,1,0)
This field, previously known as CPT CODE QTY & MODIFIERS #1, is no 
"^DD",727.827,727.827,19,21,2,0)
longer needed.  The name has been changed to PLACEHOLD CPT QTY & MODS #1 
"^DD",727.827,727.827,19,21,3,0)
and its value will be set to null.
"^DD",727.827,727.827,19,23,0)
^.001^1^1^3180530^^
"^DD",727.827,727.827,19,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.827,727.827,19,"DT")
3180530
"^DD",727.827,727.827,20,0)
PLACEHOLD CPT QTY & MODS #2^F^^0;21^K:$L(X)>17!($L(X)<1) X
"^DD",727.827,727.827,20,3)
Answer must be 1-17 characters in length.
"^DD",727.827,727.827,20,21,0)
^^3^3^3180430^
"^DD",727.827,727.827,20,21,1,0)
This field, previously known as CPT CODE QTY & MODIFIERS #2, is no 
"^DD",727.827,727.827,20,21,2,0)
longer needed.  The name has been changed to PLACEHOLD CPT QTY & MODS #2 
"^DD",727.827,727.827,20,21,3,0)
and its value will be set to null.
"^DD",727.827,727.827,20,23,0)
^.001^1^1^3180430^^
"^DD",727.827,727.827,20,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.827,727.827,20,"DT")
3180430
"^DD",727.827,727.827,21,0)
PLACEHOLD CPT QTY & MODS #3^F^^0;22^K:$L(X)>17!($L(X)<1) X
"^DD",727.827,727.827,21,3)
Answer must be 1-17 characters in length.
"^DD",727.827,727.827,21,21,0)
^^3^3^3180430^
"^DD",727.827,727.827,21,21,1,0)
This field, previously known as CPT CODE QTY & MODIFIERS #3, is no 
"^DD",727.827,727.827,21,21,2,0)
longer needed.  The name has been changed to PLACEHOLD CPT QTY & MODS #3 
"^DD",727.827,727.827,21,21,3,0)
and its value will be set to null.
"^DD",727.827,727.827,21,23,0)
^^1^1^3180430^
"^DD",727.827,727.827,21,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.827,727.827,21,"DT")
3180430
"^DD",727.827,727.827,22,0)
PLACEHOLD CPT QTY & MODS #4^F^^0;23^K:$L(X)>17!($L(X)<1) X
"^DD",727.827,727.827,22,3)
Answer must be 1-17 characters in length.
"^DD",727.827,727.827,22,21,0)
^^3^3^3180430^
"^DD",727.827,727.827,22,21,1,0)
This field, previously known as CPT CODE QTY & MODIFIERS #4, is no 
"^DD",727.827,727.827,22,21,2,0)
longer needed.  The name has been changed to PLACEHOLD CPT QTY & MODS #4 
"^DD",727.827,727.827,22,21,3,0)
and its value will be set to null.
"^DD",727.827,727.827,22,23,0)
^^1^1^3180430^
"^DD",727.827,727.827,22,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.827,727.827,22,"DT")
3180430
"^DD",727.827,727.827,23,0)
PLACEHOLD CPT QTY & MODS #5^FJ17^^0;24^K:$L(X)>17!($L(X)<1) X
"^DD",727.827,727.827,23,3)
Answer must be 1-17 characters in length.
"^DD",727.827,727.827,23,21,0)
^.001^3^3^3180530^^
"^DD",727.827,727.827,23,21,1,0)
This field, previously known as CPT CODE QTY & MODIFERS #5, is no longer 
"^DD",727.827,727.827,23,21,2,0)
needed.  The name has been changed to PLACEHOLD CPT QTY & MODS #5 and 
"^DD",727.827,727.827,23,21,3,0)
its value will be set to null.
"^DD",727.827,727.827,23,23,0)
^.001^1^1^3180530^^
"^DD",727.827,727.827,23,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.827,727.827,23,"DT")
3180530
"^DD",727.827,727.827,24,0)
PLACEHOLD CPT QTY & MODS #6^F^^1;1^K:$L(X)>17!($L(X)<1) X
"^DD",727.827,727.827,24,3)
Answer must be 1-17 characters in length.
"^DD",727.827,727.827,24,21,0)
^^3^3^3180430^
"^DD",727.827,727.827,24,21,1,0)
This field, previously known as CPT CODE QTY & MODIFIERS #6, is no 
"^DD",727.827,727.827,24,21,2,0)
longer needed.  The name has been changed to PLACEHOLD CPT QTY & MODS #6 
"^DD",727.827,727.827,24,21,3,0)
and its value will be set to null.
"^DD",727.827,727.827,24,23,0)
^^1^1^3180430^
"^DD",727.827,727.827,24,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.827,727.827,24,"DT")
3180530
"^DD",727.827,727.827,25,0)
PLACEHOLD CPT QTY & MODS #7^F^^1;2^K:$L(X)>17!($L(X)<1) X
"^DD",727.827,727.827,25,3)
Answer must be 1-17 characters in length.
"^DD",727.827,727.827,25,21,0)
^^3^3^3180430^
"^DD",727.827,727.827,25,21,1,0)
This field, previously known as CPT CODE QTY & MODIFERS #7, is no longer 
"^DD",727.827,727.827,25,21,2,0)
needed.  The name has been changed to PLACEHOLD CPT QTY & MODS #7 and 
"^DD",727.827,727.827,25,21,3,0)
its value will be set to null.
"^DD",727.827,727.827,25,23,0)
^^1^1^3180430^
"^DD",727.827,727.827,25,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.827,727.827,25,"DT")
3180530
"^DD",727.827,727.827,26,0)
PLACEHOLD CPT QTY & MODS #8^F^^1;3^K:$L(X)>17!($L(X)<1) X
"^DD",727.827,727.827,26,3)
Answer must be 1-17 characters in length.
"^DD",727.827,727.827,26,21,0)
^^3^3^3180430^
"^DD",727.827,727.827,26,21,1,0)
This field, previously known as CPT CODE QTY & MODIFIERS #8, is no 
"^DD",727.827,727.827,26,21,2,0)
longer needed.  The name has been changed to PLACEHOLD CPT QTY & MODS #8 
"^DD",727.827,727.827,26,21,3,0)
and its value will be set to null.
"^DD",727.827,727.827,26,23,0)
^^1^1^3180430^
"^DD",727.827,727.827,26,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.827,727.827,26,"DT")
3180530
"^DD",727.827,727.827,35,0)
PLACEHOLD RACE^F^^1;12^K:$L(X)>1!($L(X)<1) X
"^DD",727.827,727.827,35,3)
Answer must be 1 character in length.
"^DD",727.827,727.827,35,21,0)
^.001^2^2^3180430^^
"^DD",727.827,727.827,35,21,1,0)
This field, previously known as RACE, is no longer needed.  The name has
"^DD",727.827,727.827,35,21,2,0)
been changed to PLACEHOLD RACE and its value will be set to null.
"^DD",727.827,727.827,35,23,0)
^.001^1^1^3180430^^
"^DD",727.827,727.827,35,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.827,727.827,35,"DT")
3180315
"^DD",727.827,727.827,56,0)
PLACEHOLD ASSOC PC PROVIDER^F^^1;33^K:$L(X)>11!($L(X)<1) X
"^DD",727.827,727.827,56,3)
Answer must be 1-11 characters in length.
"^DD",727.827,727.827,56,21,0)
^^3^3^3180430^
"^DD",727.827,727.827,56,21,1,0)
This field, previously known as ASSOCIATE PC PROVIDER, is no longer 
"^DD",727.827,727.827,56,21,2,0)
needed.  The name has been changed to PLACEHOLD ASSOC PC PROVIDER and 
"^DD",727.827,727.827,56,21,3,0)
its value will be set to null.
"^DD",727.827,727.827,56,23,0)
^^1^1^3180430^
"^DD",727.827,727.827,56,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.827,727.827,56,"DT")
3180430
"^DD",727.827,727.827,57,0)
PLACEHOLD AS PC PROV PERSON CL^F^^1;34^K:$L(X)>7!($L(X)<7) X
"^DD",727.827,727.827,57,3)
Answer must be 7 characters in length.
"^DD",727.827,727.827,57,21,0)
^^3^3^3180503
"^DD",727.827,727.827,57,21,1,0)
This field, previously known as ASSOCIATE PC PROV PERSON CLASS, is no
"^DD",727.827,727.827,57,21,2,0)
longer needed. The name has been changed to PLACEHOLD AS PC PROV PERSON CL
"^DD",727.827,727.827,57,21,3,0)
and its value will be set to null.  
"^DD",727.827,727.827,57,23,0)
^^1^1^3180503
"^DD",727.827,727.827,57,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.827,727.827,57,"DT")
3180430
"^DD",727.827,727.827,73,0)
PLACEHOLD ETHNICITY^F^^2;13^K:$L(X)>6!($L(X)<1) X
"^DD",727.827,727.827,73,.1)
Ethnicity
"^DD",727.827,727.827,73,3)
Answer must be 1-6 characters in length
"^DD",727.827,727.827,73,21,0)
^.001^2^2^3180430^^
"^DD",727.827,727.827,73,21,1,0)
This field, previously known as ETHNICITY, is no longer needed.  The name 
"^DD",727.827,727.827,73,21,2,0)
has been changed to PLACEHOLD ETHNICITY and its value will be set to null.
"^DD",727.827,727.827,73,23,0)
^.001^1^1^3180430^^
"^DD",727.827,727.827,73,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.827,727.827,73,"DT")
3180315
"^DD",727.827,727.827,74,0)
PLACEHOLD RACE 1^F^^2;14^K:$L(X)>6!($L(X)<1) X
"^DD",727.827,727.827,74,.1)
Race 1
"^DD",727.827,727.827,74,3)
Answer must be 1-6 characters in length.
"^DD",727.827,727.827,74,21,0)
^.001^2^2^3180430^^
"^DD",727.827,727.827,74,21,1,0)
This field, previously known as RACE 1, is no longer needed.  The name has
"^DD",727.827,727.827,74,21,2,0)
been changed to PLACEHOLD RACE 1 and its value will be set to null.
"^DD",727.827,727.827,74,23,0)
^.001^1^1^3180430^^
"^DD",727.827,727.827,74,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.827,727.827,74,"DT")
3180315
"^DD",727.827,727.827,90,0)
PLACEHOLD ASSOC PC PROV NPI^F^^2;30^K:$L(X)>15!($L(X)<1) X
"^DD",727.827,727.827,90,3)
Answer must be 1-15 characters in length.
"^DD",727.827,727.827,90,21,0)
^.001^3^3^3180430^^
"^DD",727.827,727.827,90,21,1,0)
This field, previously known as ASSOCIATE PC PROVIDER NPI, is no longer 
"^DD",727.827,727.827,90,21,2,0)
needed.  The name has been changed to PLACEHOLD ASSOC PC PROV NPI and 
"^DD",727.827,727.827,90,21,3,0)
its value will be set to null.
"^DD",727.827,727.827,90,23,0)
^.001^1^1^3180430^^
"^DD",727.827,727.827,90,23,1,0)
This field is no longer in use as of patch ECX*3*170. 
"^DD",727.827,727.827,90,"DT")
3180501
"^DD",727.827,727.827,91,0)
PLACEHOLD PC PROVIDER NPI^F^^2;31^K:$L(X)>15!($L(X)<1) X
"^DD",727.827,727.827,91,3)
Answer must be 1-15 characters in length.
"^DD",727.827,727.827,91,21,0)
^^3^3^3180503
"^DD",727.827,727.827,91,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER NPI, is no longer
"^DD",727.827,727.827,91,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROVIDER NPI and its
"^DD",727.827,727.827,91,21,3,0)
value will be set to null.  
"^DD",727.827,727.827,91,23,0)
^^1^1^3180503
"^DD",727.827,727.827,91,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.827,727.827,91,"DT")
3180430
"^DD",727.827,727.827,133,0)
CPT, QTY & MODIFIERS #1^FJ20^^4;12^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,133,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,133,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,133,21,1,0)
The first 5-character CPT Code for the procedure performed; the Quantity, 
"^DD",727.827,727.827,133,21,2,0)
or how many times the unique code appears in the record; and, up to six 
"^DD",727.827,727.827,133,21,3,0)
2-character CPT Modifiers.
"^DD",727.827,727.827,133,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,133,23,1,0)
Returned by calling ENCEVENT^PXAPI.
"^DD",727.827,727.827,133,"DT")
3180515
"^DD",727.827,727.827,134,0)
CPT, QTY & MODIFIERS #2^FJ20^^4;13^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,134,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,134,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,134,21,1,0)
The second 5-character CPT Code for the procedure performed; the Quantity,
"^DD",727.827,727.827,134,21,2,0)
or how many times the unique code appears in the record; and, up to six
"^DD",727.827,727.827,134,21,3,0)
2-character CPT Modifiers.  
"^DD",727.827,727.827,134,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,134,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,134,"DT")
3180515
"^DD",727.827,727.827,135,0)
CPT, QTY & MODIFIERS #3^FJ20^^4;14^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,135,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,135,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,135,21,1,0)
The third 5-character CPT Code for the procedure performed; the Quantity,
"^DD",727.827,727.827,135,21,2,0)
or how many times the unique code appears in the record; and, up to six
"^DD",727.827,727.827,135,21,3,0)
2-character CPT Modifiers.  
"^DD",727.827,727.827,135,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,135,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,135,"DT")
3180515
"^DD",727.827,727.827,136,0)
CPT, QTY & MODIFIERS #4^FJ20^^4;15^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,136,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,136,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,136,21,1,0)
The fourth 5-character CPT Code for the procedure performed; the Quantity,
"^DD",727.827,727.827,136,21,2,0)
or how many times the unique code appears in the record; and, up to six
"^DD",727.827,727.827,136,21,3,0)
2-character CPT Modifiers.  
"^DD",727.827,727.827,136,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,136,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,136,"DT")
3180515
"^DD",727.827,727.827,137,0)
CPT, QTY & MODIFIERS #5^FJ20^^4;16^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,137,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,137,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,137,21,1,0)
The fifth 5-character CPT Code for the procedure performed; the Quantity,
"^DD",727.827,727.827,137,21,2,0)
or how many times the unique code appears in the record; and, up to six
"^DD",727.827,727.827,137,21,3,0)
2-character CPT Modifiers.  
"^DD",727.827,727.827,137,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,137,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,137,"DT")
3180515
"^DD",727.827,727.827,138,0)
CPT, QTY & MODIFIERS #6^FJ20^^4;17^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,138,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,138,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,138,21,1,0)
The sixth 5-character CPT Code for the procedure performed; the Quantity,
"^DD",727.827,727.827,138,21,2,0)
or how many times the unique code appears in the record; and, up to six
"^DD",727.827,727.827,138,21,3,0)
2-character CPT Modifiers.  
"^DD",727.827,727.827,138,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,138,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,138,"DT")
3180515
"^DD",727.827,727.827,139,0)
CPT, QTY & MODIFIERS #7^FJ20^^5;1^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,139,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,139,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,139,21,1,0)
The seventh 5-character CPT Code for the procedure performed; the
"^DD",727.827,727.827,139,21,2,0)
Quantity, or how many times the unique code appears in the record; and, up
"^DD",727.827,727.827,139,21,3,0)
to six 2-character CPT Modifiers.  
"^DD",727.827,727.827,139,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,139,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,139,"DT")
3180515
"^DD",727.827,727.827,140,0)
CPT, QTY & MODIFIERS #8^FJ20^^5;2^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,140,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,140,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,140,21,1,0)
The eighth 5-character CPT Code for the procedure performed; the Quantity,
"^DD",727.827,727.827,140,21,2,0)
or how many times the unique code appears in the record; and, up to six
"^DD",727.827,727.827,140,21,3,0)
2-character CPT Modifiers.  
"^DD",727.827,727.827,140,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,140,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,140,"DT")
3180515
"^DD",727.827,727.827,141,0)
CPT, QTY & MODIFIERS #9^FJ20^^5;3^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,141,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,141,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,141,21,1,0)
The ninth 5-character CPT Code for the procedure performed; the Quantity,
"^DD",727.827,727.827,141,21,2,0)
or how many times the unique code appears in the record; and, up to six
"^DD",727.827,727.827,141,21,3,0)
2-character CPT Modifiers.  
"^DD",727.827,727.827,141,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,141,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,141,"DT")
3180515
"^DD",727.827,727.827,142,0)
CPT, QTY & MODIFIERS #10^FJ20^^5;4^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,142,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,142,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,142,21,1,0)
The tenth 5-character CPT Code for the procedure performed; the Quantity,
"^DD",727.827,727.827,142,21,2,0)
or how many times the unique code appears in the record; and, up to six
"^DD",727.827,727.827,142,21,3,0)
2-character CPT Modifiers.  
"^DD",727.827,727.827,142,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,142,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,142,"DT")
3180515
"^DD",727.827,727.827,143,0)
CPT, QTY & MODIFIERS #11^FJ20^^5;5^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,143,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,143,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,143,21,1,0)
The eleventh 5-character CPT Code for the procedure performed; the
"^DD",727.827,727.827,143,21,2,0)
Quantity, or how many times the unique code appears in the record; and, up
"^DD",727.827,727.827,143,21,3,0)
to six 2-character CPT Modifiers.  
"^DD",727.827,727.827,143,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,143,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,143,"DT")
3180515
"^DD",727.827,727.827,144,0)
CPT, QTY & MODIFIERS #12^FJ20^^5;6^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,144,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,144,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,144,21,1,0)
The twelfth 5-character CPT Code for the procedure performed; the
"^DD",727.827,727.827,144,21,2,0)
Quantity, or how many times the unique code appears in the record; and, up
"^DD",727.827,727.827,144,21,3,0)
to six 2-character CPT Modifiers.  
"^DD",727.827,727.827,144,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,144,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,144,"DT")
3180515
"^DD",727.827,727.827,145,0)
CPT, QTY & MODIFIERS #13^FJ20^^5;7^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,145,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,145,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,145,21,1,0)
The 13th 5-character CPT Code for the procedure performed; the Quantity,
"^DD",727.827,727.827,145,21,2,0)
or how many times the unique code appears in the record; and, up to six
"^DD",727.827,727.827,145,21,3,0)
2-character CPT Modifiers.  
"^DD",727.827,727.827,145,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,145,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,145,"DT")
3180515
"^DD",727.827,727.827,146,0)
CPT, QTY & MODIFIERS #14^FJ20^^5;8^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,146,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,146,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,146,21,1,0)
The 14th 5-character CPT Code for the procedure performed; the Quantity,
"^DD",727.827,727.827,146,21,2,0)
or how many times the unique code appears in the record; and, up to six
"^DD",727.827,727.827,146,21,3,0)
2-character CPT Modifiers.  
"^DD",727.827,727.827,146,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,146,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,146,"DT")
3180515
"^DD",727.827,727.827,147,0)
CPT, QTY & MODIFIERS #15^FJ20^^5;9^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,147,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,147,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,147,21,1,0)
The 15th 5-character CPT Code for the procedure performed; the Quantity,
"^DD",727.827,727.827,147,21,2,0)
or how many times the unique code appears in the record; and, up to six
"^DD",727.827,727.827,147,21,3,0)
2-character CPT Modifiers.  
"^DD",727.827,727.827,147,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,147,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,147,"DT")
3180515
"^DD",727.827,727.827,148,0)
CPT, QTY & MODIFIERS #16^FJ20^^5;10^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,148,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,148,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,148,21,1,0)
The 16th 5-character CPT Code for the procedure performed; the Quantity,
"^DD",727.827,727.827,148,21,2,0)
or how many times the unique code appears in the record; and, up to six
"^DD",727.827,727.827,148,21,3,0)
2-character CPT Modifiers.  
"^DD",727.827,727.827,148,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,148,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,148,"DT")
3180515
"^DD",727.827,727.827,149,0)
CPT, QTY & MODIFIERS #17^FJ20^^5;11^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,149,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,149,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,149,21,1,0)
The 17th 5-character CPT Code for the procedure performed; the Quantity,
"^DD",727.827,727.827,149,21,2,0)
or how many times the unique code appears in the record; and, up to six
"^DD",727.827,727.827,149,21,3,0)
2-character CPT Modifiers.  
"^DD",727.827,727.827,149,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,149,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,149,"DT")
3180515
"^DD",727.827,727.827,150,0)
CPT, QTY & MODIFIERS #18^FJ20^^6;1^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,150,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,150,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,150,21,1,0)
The 18th 5-character CPT Code for the procedure performed; the Quantity,
"^DD",727.827,727.827,150,21,2,0)
or how many times the unique code appears in the record; and, up to six
"^DD",727.827,727.827,150,21,3,0)
2-character CPT Modifiers.  
"^DD",727.827,727.827,150,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,150,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,150,"DT")
3180515
"^DD",727.827,727.827,151,0)
CPT, QTY & MODIFIERS #19^FJ20^^6;2^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,151,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,151,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,151,21,1,0)
The 19th 5-character CPT Code for the procedure performed; the Quantity,
"^DD",727.827,727.827,151,21,2,0)
or how many times the unique code appears in the record; and, up to six
"^DD",727.827,727.827,151,21,3,0)
2-character CPT Modifiers.  
"^DD",727.827,727.827,151,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,151,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,151,"DT")
3180515
"^DD",727.827,727.827,152,0)
CPT, QTY & MODIFIERS #20^FJ20^^6;3^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,152,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,152,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,152,21,1,0)
The 20th 5-character CPT Code for the procedure performed; the Quantity,
"^DD",727.827,727.827,152,21,2,0)
or how many times the unique code appears in the record; and, up to six
"^DD",727.827,727.827,152,21,3,0)
2-character CPT Modifiers.  
"^DD",727.827,727.827,152,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,152,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,152,"DT")
3180515
"^DD",727.827,727.827,153,0)
CPT, QTY & MODIFIERS #21^FJ20^^6;4^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,153,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,153,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,153,21,1,0)
The 21st 5-character CPT Code for the procedure performed; the Quantity,
"^DD",727.827,727.827,153,21,2,0)
or how many times the unique code appears in the record; and, up to six
"^DD",727.827,727.827,153,21,3,0)
2-character CPT Modifiers.  
"^DD",727.827,727.827,153,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,153,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,153,"DT")
3180515
"^DD",727.827,727.827,154,0)
CPT, QTY & MODIFIERS #22^FJ20^^6;5^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,154,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,154,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,154,21,1,0)
The 22nd 5-character CPT Code for the procedure performed; the Quantity,
"^DD",727.827,727.827,154,21,2,0)
or how many times the unique code appears in the record; and, up to six
"^DD",727.827,727.827,154,21,3,0)
2-character CPT Modifiers.  
"^DD",727.827,727.827,154,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,154,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,154,"DT")
3180515
"^DD",727.827,727.827,155,0)
CPT, QTY & MODIFIERS #23^FJ20^^6;6^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,155,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,155,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,155,21,1,0)
The 23rd 5-character CPT Code for the procedure performed; the Quantity,
"^DD",727.827,727.827,155,21,2,0)
or how many times the unique code appears in the record; and, up to six
"^DD",727.827,727.827,155,21,3,0)
2-character CPT Modifiers.  
"^DD",727.827,727.827,155,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,155,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,155,"DT")
3180515
"^DD",727.827,727.827,156,0)
CPT, QTY & MODIFIERS #24^FJ20^^6;7^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,156,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,156,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,156,21,1,0)
The 24th 5-character CPT Code for the procedure performed; the Quantity,
"^DD",727.827,727.827,156,21,2,0)
or how many times the unique code appears in the record; and, up to six
"^DD",727.827,727.827,156,21,3,0)
2-character CPT Modifiers.  
"^DD",727.827,727.827,156,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,156,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,156,"DT")
3180515
"^DD",727.827,727.827,157,0)
CPT, QTY & MODIFIERS #25^FJ20^^6;8^K:$L(X)>20!($L(X)<1) X
"^DD",727.827,727.827,157,3)
Answer must be 1-20 characters in length.
"^DD",727.827,727.827,157,21,0)
^.001^3^3^3180515^^
"^DD",727.827,727.827,157,21,1,0)
The 25th 5-character CPT Code for the procedure performed; the Quantity,
"^DD",727.827,727.827,157,21,2,0)
or how many times the unique code appears in the record; and, up to six
"^DD",727.827,727.827,157,21,3,0)
2-character CPT Modifiers.  
"^DD",727.827,727.827,157,23,0)
^^1^1^3180515^
"^DD",727.827,727.827,157,23,1,0)
Returned by calling ENCEVENT^PXAPI.  
"^DD",727.827,727.827,157,"DT")
3180515
"^DD",727.829,727.829,7,0)
IN/OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;A:ASIH (OTHER FACILITY);^0;8^Q
"^DD",727.829,727.829,7,3)
Enter the patient's status for this extract entry.
"^DD",727.829,727.829,7,21,0)
^^1^1^3180629^
"^DD",727.829,727.829,7,21,1,0)
Indicates the patient's status for this extract entry.
"^DD",727.829,727.829,7,23,0)
^^13^13^3180629^
"^DD",727.829,727.829,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.829,727.829,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine patient status.  If
"^DD",727.829,727.829,7,23,3,0)
the patient is an outpatient, processing stops and the field is set to
"^DD",727.829,727.829,7,23,4,0)
O.   If the patient is an inpatient then $$INOUTP^ECXUTL4 is called to
"^DD",727.829,727.829,7,23,5,0)
look at the treating specialty.  If the patient's treating specialty
"^DD",727.829,727.829,7,23,6,0)
exists in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.829,727.829,7,23,7,0)
value of the INPAT/OUTPAT CODE field (#5) of the DSS TREATING SPECIALTY
"^DD",727.829,727.829,7,23,8,0)
TRANSLATION file (#727.831) is used.  If the treating specialty is not
"^DD",727.829,727.829,7,23,9,0)
found in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.829,727.829,7,23,10,0)
indicator is set to I.
"^DD",727.829,727.829,7,23,11,0)
 
"^DD",727.829,727.829,7,23,12,0)
If the patient is ASIH to another facility at the date/time in question 
"^DD",727.829,727.829,7,23,13,0)
then the indicator is set to A.
"^DD",727.829,727.829,7,"DT")
3180629
"^DD",727.833,727.833,7,0)
IN OUT PATIENT INDICATOR^S^I:INPATIENT;O:OUTPATIENT;A:ASIH (OTHER FACILITY);^0;8^Q
"^DD",727.833,727.833,7,.1)
In Out Patient Indicator
"^DD",727.833,727.833,7,3)
Enter the patient's status for this extract entry.
"^DD",727.833,727.833,7,21,0)
^^1^1^3180629^
"^DD",727.833,727.833,7,21,1,0)
Indicates the patient's status for this extract entry.
"^DD",727.833,727.833,7,23,0)
^^13^13^3180629^
"^DD",727.833,727.833,7,23,1,0)
To determine the value of this field a call is made to $$PATDEM^ECXUTL2. 
"^DD",727.833,727.833,7,23,2,0)
Within this call, $$INP^ECXUTL2 is called to determine patient status.  If
"^DD",727.833,727.833,7,23,3,0)
the patient is an outpatient, processing stops and the field is set to
"^DD",727.833,727.833,7,23,4,0)
O.   If the patient is an inpatient then $$INOUTP^ECXUTL4 is called to
"^DD",727.833,727.833,7,23,5,0)
look at the treating specialty.  If the patient's treating specialty
"^DD",727.833,727.833,7,23,6,0)
exists in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.833,727.833,7,23,7,0)
value of the INPAT/OUTPAT CODE field (#5) of the DSS TREATING SPECIALTY
"^DD",727.833,727.833,7,23,8,0)
TRANSLATION file (#727.831) is used.  If the treating specialty is not
"^DD",727.833,727.833,7,23,9,0)
found in the DSS TREATING SPECIALTY TRANSLATION file (#727.831) then the
"^DD",727.833,727.833,7,23,10,0)
indicator is set to I.
"^DD",727.833,727.833,7,23,11,0)
 
"^DD",727.833,727.833,7,23,12,0)
If the patient is ASIH to another facility at the date/time in question 
"^DD",727.833,727.833,7,23,13,0)
then the indicator is set to A.
"^DD",727.833,727.833,7,"DT")
3180629
"^DD",727.833,727.833,20,0)
PLACEHOLD PC PROVIDER^F^^0;21^K:$L(X)>11!($L(X)<11) X
"^DD",727.833,727.833,20,3)
The answer must be 11 characters in length.
"^DD",727.833,727.833,20,21,0)
^^3^3^3180430^
"^DD",727.833,727.833,20,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER, is no longer 
"^DD",727.833,727.833,20,21,2,0)
needed.  The name has been changed to PLACEHOLD PC PROVIDER and its 
"^DD",727.833,727.833,20,21,3,0)
value will be set to null.
"^DD",727.833,727.833,20,23,0)
^^1^1^3180430^
"^DD",727.833,727.833,20,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.833,727.833,20,"DT")
3180430
"^DD",727.833,727.833,21,0)
PLACEHOLD PC PROV PERSON CLASS^F^^0;22^K:$L(X)>7!($L(X)<7) X
"^DD",727.833,727.833,21,3)
Answer must be 7 characters in length.
"^DD",727.833,727.833,21,21,0)
^^3^3^3180430^
"^DD",727.833,727.833,21,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER PC, is no longer 
"^DD",727.833,727.833,21,21,2,0)
needed.  The name has been changed to PLACEHOLD PC PROV PERSON CLASS and 
"^DD",727.833,727.833,21,21,3,0)
its value will be set to null.
"^DD",727.833,727.833,21,23,0)
^^1^1^3180430^
"^DD",727.833,727.833,21,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.833,727.833,21,"DT")
3180430
"^DD",727.833,727.833,22,0)
PLACEHOLD PC PROVIDER NPI^F^^0;23^K:$L(X)>10!($L(X)<1) X
"^DD",727.833,727.833,22,3)
Answer must be 1-10 characters in length.
"^DD",727.833,727.833,22,21,0)
^^3^3^3180503
"^DD",727.833,727.833,22,21,1,0)
This field, previously known as PRIMARY CARE PROVIDER NPI, is no longer
"^DD",727.833,727.833,22,21,2,0)
needed. The name has been changed to PLACEHOLD PC PROVIDER NPI and its
"^DD",727.833,727.833,22,21,3,0)
value will be set to null.  
"^DD",727.833,727.833,22,23,0)
^^1^1^3180503
"^DD",727.833,727.833,22,23,1,0)
This field is no longer in use as of patch ECX*3*170.  
"^DD",727.833,727.833,22,"DT")
3180430
"^DD",727.833,727.833,23,0)
PLACEHOLD PRIMARY CARE TEAM^P404.51'^SCTM(404.51,^0;24^Q
"^DD",727.833,727.833,23,3)
Select the patient's primary care team.
"^DD",727.833,727.833,23,21,0)
^^3^3^3180430^
"^DD",727.833,727.833,23,21,1,0)
This field, previously known as PRIMARY CARE TEAM, is no longer needed.  
"^DD",727.833,727.833,23,21,2,0)
The name has been changed to PLACEHOLD PRIMARY CARE TEAM and its value 
"^DD",727.833,727.833,23,21,3,0)
will be set to null.
"^DD",727.833,727.833,23,23,0)
^^1^1^3180430^
"^DD",727.833,727.833,23,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.833,727.833,23,"DT")
3180430
"^DD",727.833,727.833,57,0)
PLACEHOLD ETHNICITY^F^^2;21^K:$L(X)>6!($L(X)<1) X
"^DD",727.833,727.833,57,3)
Answer must be 1-6 characters in length.
"^DD",727.833,727.833,57,21,0)
^.001^2^2^3180430^^
"^DD",727.833,727.833,57,21,1,0)
This field, previously known as ETHNICITY, is no longer needed.  The name
"^DD",727.833,727.833,57,21,2,0)
has been changed to PLACEHOLD ETHNICITY and its value will be set to null.
"^DD",727.833,727.833,57,23,0)
^.001^1^1^3180430^^
"^DD",727.833,727.833,57,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.833,727.833,57,"DT")
3180315
"^DD",727.833,727.833,58,0)
PLACEHOLD RACE 1^F^^2;22^K:$L(X)>6!($L(X)<1) X
"^DD",727.833,727.833,58,3)
Answer must be 1-6 characters in length.
"^DD",727.833,727.833,58,21,0)
^.001^2^2^3180430^^
"^DD",727.833,727.833,58,21,1,0)
This field, previously known as RACE 1, is no longer needed.  The name has
"^DD",727.833,727.833,58,21,2,0)
been changed to PLACEHOLD RACE 1 and its value will be set to null.
"^DD",727.833,727.833,58,23,0)
^.001^1^1^3180430^^
"^DD",727.833,727.833,58,23,1,0)
This field is no longer in use as of patch ECX*3*170.
"^DD",727.833,727.833,58,"DT")
3180315
"BLD",10333,6)
^154
**END**
**END**

