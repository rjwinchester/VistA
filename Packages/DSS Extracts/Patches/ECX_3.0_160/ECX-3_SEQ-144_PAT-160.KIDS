Released ECX*3*160 SEQ #144
Extracted from mail message
**KIDS**:ECX*3.0*160^

**INSTALL NAME**
ECX*3.0*160
"BLD",9768,0)
ECX*3.0*160^DSS EXTRACTS^0^3151204^y
"BLD",9768,4,0)
^9.64PA^^
"BLD",9768,6.3)
1
"BLD",9768,"KRN",0)
^9.67PA^779.2^20
"BLD",9768,"KRN",.4,0)
.4
"BLD",9768,"KRN",.401,0)
.401
"BLD",9768,"KRN",.402,0)
.402
"BLD",9768,"KRN",.403,0)
.403
"BLD",9768,"KRN",.5,0)
.5
"BLD",9768,"KRN",.84,0)
.84
"BLD",9768,"KRN",3.6,0)
3.6
"BLD",9768,"KRN",3.8,0)
3.8
"BLD",9768,"KRN",9.2,0)
9.2
"BLD",9768,"KRN",9.8,0)
9.8
"BLD",9768,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",9768,"KRN",9.8,"NM",1,0)
ECXUCBOC^^0^B98139250
"BLD",9768,"KRN",9.8,"NM",2,0)
ECXBCM^^0^B97333580
"BLD",9768,"KRN",9.8,"NM","B","ECXBCM",2)

"BLD",9768,"KRN",9.8,"NM","B","ECXUCBOC",1)

"BLD",9768,"KRN",19,0)
19
"BLD",9768,"KRN",19.1,0)
19.1
"BLD",9768,"KRN",101,0)
101
"BLD",9768,"KRN",409.61,0)
409.61
"BLD",9768,"KRN",771,0)
771
"BLD",9768,"KRN",779.2,0)
779.2
"BLD",9768,"KRN",870,0)
870
"BLD",9768,"KRN",8989.51,0)
8989.51
"BLD",9768,"KRN",8989.52,0)
8989.52
"BLD",9768,"KRN",8994,0)
8994
"BLD",9768,"KRN","B",.4,.4)

"BLD",9768,"KRN","B",.401,.401)

"BLD",9768,"KRN","B",.402,.402)

"BLD",9768,"KRN","B",.403,.403)

"BLD",9768,"KRN","B",.5,.5)

"BLD",9768,"KRN","B",.84,.84)

"BLD",9768,"KRN","B",3.6,3.6)

"BLD",9768,"KRN","B",3.8,3.8)

"BLD",9768,"KRN","B",9.2,9.2)

"BLD",9768,"KRN","B",9.8,9.8)

"BLD",9768,"KRN","B",19,19)

"BLD",9768,"KRN","B",19.1,19.1)

"BLD",9768,"KRN","B",101,101)

"BLD",9768,"KRN","B",409.61,409.61)

"BLD",9768,"KRN","B",771,771)

"BLD",9768,"KRN","B",779.2,779.2)

"BLD",9768,"KRN","B",870,870)

"BLD",9768,"KRN","B",8989.51,8989.51)

"BLD",9768,"KRN","B",8989.52,8989.52)

"BLD",9768,"KRN","B",8994,8994)

"BLD",9768,"QUES",0)
^9.62^^
"BLD",9768,"REQB",0)
^9.611^1^1
"BLD",9768,"REQB",1,0)
ECX*3.0*154^1
"BLD",9768,"REQB","B","ECX*3.0*154",1)

"MBREQ")
0
"PKG",535,-1)
1^1
"PKG",535,0)
DSS EXTRACTS^ECX
"PKG",535,20,0)
^9.402P^^
"PKG",535,22,0)
^9.49I^1^1
"PKG",535,22,1,0)
3.0^2971222^3000224^66481
"PKG",535,22,1,"PAH",1,0)
160^3151204
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","ECXBCM")
0^2^B97333580^B95494822
"RTN","ECXBCM",1,0)
ECXBCM ;ALB/JAP-Bar Code Medical Administration Extract ;12/4/15  10:46
"RTN","ECXBCM",2,0)
 ;;3.0;DSS EXTRACTS;**107,127,132,136,143,144,148,149,154,160**;Dec 22, 1997 ;Build 1
"RTN","ECXBCM",3,0)
 ;
"RTN","ECXBCM",4,0)
BEG ;entry point from option
"RTN","ECXBCM",5,0)
 ;ECFILE=^ECX(727.833,
"RTN","ECXBCM",6,0)
 D SETUP I ECFILE="" Q
"RTN","ECXBCM",7,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXBCM",8,0)
 Q
"RTN","ECXBCM",9,0)
 ;
"RTN","ECXBCM",10,0)
START ; start package specific extract
"RTN","ECXBCM",11,0)
 ; 
"RTN","ECXBCM",12,0)
 N ECXVAP,RERUN,ECXLDT ;143,154
"RTN","ECXBCM",13,0)
 S RERUN=0,ECXLDT=+$P($G(^ECX(728,1,ECNODE)),U,ECPIECE) I ECXLDT'<ECSD S RERUN=1 ;154 If re-running date range, set RERUN to 1, 160 added ^ to global reference
"RTN","ECXBCM",14,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXBCM",15,0)
 S PIEN=0
"RTN","ECXBCM",16,0)
 I $G(ECSD)="" S ECSD=DT
"RTN","ECXBCM",17,0)
 ; loop thru and get each new patient, reset the start date to ECSD - begin date from ECXTRAC
"RTN","ECXBCM",18,0)
 F  S PIEN=$O(^PSB(53.79,"AADT",PIEN)) Q:('PIEN)  S IDAT=ECSD D
"RTN","ECXBCM",19,0)
 .F  S IDAT=$O(^PSB(53.79,"AADT",PIEN,IDAT)) Q:'IDAT!(IDAT>ECED)  S RIEN="" D
"RTN","ECXBCM",20,0)
 ..F  S RIEN=$O(^PSB(53.79,"AADT",PIEN,IDAT,RIEN)) Q:'RIEN  D
"RTN","ECXBCM",21,0)
 ...S ECXNOD=^PSB(53.79,RIEN,0) Q:'ECXNOD  S ECXDFN=$P($G(ECXNOD),U) D GET(ECSD,ECED)
"RTN","ECXBCM",22,0)
 I 'RERUN D CLEAN(0,$$FMADD^XLFDT(ECSD,-180)) ;154 If not a rerun, clean out items given global
"RTN","ECXBCM",23,0)
 Q
"RTN","ECXBCM",24,0)
 ;
"RTN","ECXBCM",25,0)
GET(ECSD,ECED) ;get extract data
"RTN","ECXBCM",26,0)
 N ECXESC,ECXECL,ECXCLST ;144
"RTN","ECXBCM",27,0)
 S (ACTDT,ECXADT,ECXAMED,ECXASTA,ECXATM,ECXORN,ECXORT,ECXOSC,ECPRO,PLACEHLD,ECXFAC,DRG,ECXESC,ECXECL,ECXCLST)="" ;144
"RTN","ECXBCM",28,0)
 ; get needed YYYYDD variable
"RTN","ECXBCM",29,0)
 I $G(ECXYM)="" S ECXYM=$$ECXYM^ECXUTL(DT)
"RTN","ECXBCM",30,0)
 ;Get Facility
"RTN","ECXBCM",31,0)
 I $G(ECXFAC)="" D
"RTN","ECXBCM",32,0)
 .S ECXFAC=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECXFAC,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXBCM",33,0)
 .D EN^DIQ1 S ECXFAC=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXBCM",34,0)
 ;
"RTN","ECXBCM",35,0)
 S ECXORN=$$GET1^DIQ(53.79,RIEN,.11)
"RTN","ECXBCM",36,0)
 ;get inpatient data
"RTN","ECXBCM",37,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW)=""
"RTN","ECXBCM",38,0)
 S X=$$INP^ECXUTL2(ECXDFN,IDAT)
"RTN","ECXBCM",39,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4)
"RTN","ECXBCM",40,0)
 S W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";")
"RTN","ECXBCM",41,0)
 ; Ordering Stop Code - based on Unit dose or IV
"RTN","ECXBCM",42,0)
 I ECXORN["U" Q:$$CHKUD(ECXDFN,ECSD,ECED)  S:ECXA="O" ECXOSC=$$DOUDO^ECXUTL5(ECXDFN,+ECXORN)
"RTN","ECXBCM",43,0)
 I ECXORN["V" Q:$$CHKIV(ECXDFN,ECSD,ECED)  S:ECXA="O" ECXOSC=$$DOIVPO^ECXUTL5(ECXDFN,+ECXORN)
"RTN","ECXBCM",44,0)
 S ECXASTA=$$GET1^DIQ(53.79,RIEN,.09,"I")
"RTN","ECXBCM",45,0)
 I "^G^S^C^I^"'[("^"_ECXASTA_"^") Q  ;160 process 'G'iven, 'S'topped,'C'ompleted,'I'nfusing
"RTN","ECXBCM",46,0)
 ;get patient demographics
"RTN","ECXBCM",47,0)
 S ECXERR=0 D PAT(ECXDFN,IDAT,.ECXERR) Q:ECXERR
"RTN","ECXBCM",48,0)
 S ECPRO=$$ORDPROV^ECXUTL(ECXDFN,ECXORN,"")
"RTN","ECXBCM",49,0)
 S ACTDT=$$GET1^DIQ(53.79,RIEN,.06,"I")
"RTN","ECXBCM",50,0)
 I ACTDT'=IDAT Q
"RTN","ECXBCM",51,0)
 S ECXADT=$$ECXDATE^ECXUTL(ACTDT,ECXYM)
"RTN","ECXBCM",52,0)
 S ECXATM=$$ECXTIME^ECXUTL(ACTDT)
"RTN","ECXBCM",53,0)
 S ECXORT=$P($G(^TMP("PSJ",$J,1)),U,3) K ^TMP("PSJ",$J)
"RTN","ECXBCM",54,0)
 S ECPROPC=$P($$GET^XUA4A72(ECPRO,$P(ACTDT,".")),U,7)
"RTN","ECXBCM",55,0)
 N ECXUSRTN
"RTN","ECXBCM",56,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECPRO,$P(ACTDT,"."))
"RTN","ECXBCM",57,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECPRONPI=$P(ECXUSRTN,U)
"RTN","ECXBCM",58,0)
 S ECXAMED=$$GET1^DIQ(53.79,RIEN,.08,"I")
"RTN","ECXBCM",59,0)
 ;Component code data
"RTN","ECXBCM",60,0)
 D CCODE(RIEN)
"RTN","ECXBCM",61,0)
 Q
"RTN","ECXBCM",62,0)
 ;
"RTN","ECXBCM",63,0)
CMPT ; during component/sequence processing, retrieve rest of data record then file it.
"RTN","ECXBCM",64,0)
 S (ECXSCADT,ECXOS,ECXIVID,ECXIR,SCADT,ECXSCADT,ECXSCATM,DRUG,ECVNDC,ECINV,ECVACL,ECXVAP)="" ;143
"RTN","ECXBCM",65,0)
 I $G(DRG) D
"RTN","ECXBCM",66,0)
 .S DRUG=$$PHAAPI^ECXUTL5(DRG)
"RTN","ECXBCM",67,0)
 .S ECVNDC=$P(DRUG,U,3)
"RTN","ECXBCM",68,0)
 .S ECINV=$P(DRUG,U,4)
"RTN","ECXBCM",69,0)
 .I ECXLOGIC<2014 D
"RTN","ECXBCM",70,0)
 ..S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXBCM",71,0)
 .;New way to calculate cost dea spl hndlg **144
"RTN","ECXBCM",72,0)
 .I ECXLOGIC>2013 D
"RTN","ECXBCM",73,0)
 ..S ECINV=$S((+ECINV>0)&(+ECINV<6):+ECINV,ECINV["I":"I",1:"")
"RTN","ECXBCM",74,0)
 .S ECVACL=$P(DRUG,U,2)
"RTN","ECXBCM",75,0)
 .S ECXVAP=$P(DRUG,U,6) ;143 set ECXVAP to VA PRODUCT IEN
"RTN","ECXBCM",76,0)
 S SCADT=$$GET1^DIQ(53.79,RIEN,.13,"I")
"RTN","ECXBCM",77,0)
 S ECXSCADT=$$ECXDATE^ECXUTL(SCADT,ECXYM)
"RTN","ECXBCM",78,0)
 S ECXSCATM=$$ECXTIME^ECXUTL(SCADT)
"RTN","ECXBCM",79,0)
 S ECXOS=$$GET1^DIQ(53.79,RIEN,.12,"I")
"RTN","ECXBCM",80,0)
 S ECXIVID=$$GET1^DIQ(53.79,RIEN,.26)
"RTN","ECXBCM",81,0)
 S ECXIR=$$GET1^DIQ(53.79,RIEN,.35)
"RTN","ECXBCM",82,0)
 S ECXDIV=$$RADDIV^ECXDEPT($$GET1^DIQ(53.79,RIEN,.03,"I"))
"RTN","ECXBCM",83,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXBCM",84,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ACTDT,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXBCM",85,0)
 D:ECXENC'="" FILE^ECXBCM1 ;154 Moved filing task for space considerations
"RTN","ECXBCM",86,0)
 Q
"RTN","ECXBCM",87,0)
 ;
"RTN","ECXBCM",88,0)
PAT(ECXDFN,ECXDATE,ECXERR)  ;get patient demographics, primary care, and inpatient data
"RTN","ECXBCM",89,0)
 N X
"RTN","ECXBCM",90,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXBCM",91,0)
 ;get patient data
"RTN","ECXBCM",92,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXBCM",93,0)
 I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXBCM",94,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXBCM",95,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXBCM",96,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXBCM",97,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXBCM",98,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXBCM",99,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXBCM",100,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXBCM",101,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXBCM",102,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXBCM",103,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXBCM",104,0)
 S ECXCNTRY=ECXPAT("COUNTRY")
"RTN","ECXBCM",105,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXBCM",106,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXBCM",107,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXBCM",108,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXBCM",109,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXBCM",110,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXBCM",111,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXBCM",112,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXBCM",113,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXBCM",114,0)
 S ECXMTST=ECXPAT("MEANS")
"RTN","ECXBCM",115,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXBCM",116,0)
 S ECXCLST=ECXPAT("CL STAT") ;144 Camp Lejeune status
"RTN","ECXBCM",117,0)
 S ECXSVCI=ECXPAT("COMBSVCI") ;149 COMBAT SVC IND
"RTN","ECXBCM",118,0)
 S ECXSVCL=ECXPAT("COMBSVCL") ;149 COMBAT SVC LOC
"RTN","ECXBCM",119,0)
 S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN) S ECXCNHU=$S(ECXCNHU'="":$E(ECXCNHU,1),1:"") ;get CNHU status
"RTN","ECXBCM",120,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXBCM",121,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXBCM",122,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)                  ; Head and Neck Cancer Indicator
"RTN","ECXBCM",123,0)
 S ECXSHADI=$$SHAD^ECXUTL4(ECXDFN)                 ; PROJ 112/SHAD Indicator
"RTN","ECXBCM",124,0)
 I ECXSHADI="U" S ECXSHADI=""                      ; If Shad comes back as "U" force to null
"RTN","ECXBCM",125,0)
 S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1")  ; Race and Ethnicity
"RTN","ECXBCM",126,0)
 S ECXERI=ECXPAT("ERI")                            ; emergency response indicator (FEMA)
"RTN","ECXBCM",127,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)               ; PATCAT code / patch 127  
"RTN","ECXBCM",128,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXBCM",129,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXBCM",130,0)
 ;
"RTN","ECXBCM",131,0)
 ;get primary care data
"RTN","ECXBCM",132,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXBCM",133,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXBCM",134,0)
 ;get national patient record flag, if it exists
"RTN","ECXBCM",135,0)
 D NPRF^ECXUTL5     ; sets ECXNPRFI
"RTN","ECXBCM",136,0)
 Q
"RTN","ECXBCM",137,0)
 ;
"RTN","ECXBCM",138,0)
CCODE(RIEN) ; get component information
"RTN","ECXBCM",139,0)
 ;  input - IEN of the BCMA MEDICATION LOG File
"RTN","ECXBCM",140,0)
 ; 
"RTN","ECXBCM",141,0)
 ; output - CCIEN: pointer to a variable pointer field to file #50, #52.6, or #52.7
"RTN","ECXBCM",142,0)
 ;          CCDORD: .02 field of file #50, #52.6, or #52.7
"RTN","ECXBCM",143,0)
 ;          CCDGVN: .03 FIELD of file #50, #52.6, or #52.7
"RTN","ECXBCM",144,0)
 ;          CCUNIT: .04 field of file #50, #52.6, or #52.7
"RTN","ECXBCM",145,0)
 ;          CCTYPE: derived field, "D", "A", or "S"
"RTN","ECXBCM",146,0)
 ;
"RTN","ECXBCM",147,0)
 S (CCIEN,CCDORD,CCDGVN,CCUNIT,CCTYPE)=""
"RTN","ECXBCM",148,0)
 F I=.5,.6,.7 D
"RTN","ECXBCM",149,0)
 .I '$O(^PSB(53.79,RIEN,I,0)) Q
"RTN","ECXBCM",150,0)
 .S J=0 F  S J=$O(^PSB(53.79,RIEN,I,J)) Q:'J  D
"RTN","ECXBCM",151,0)
 ..S DATA=^PSB(53.79,RIEN,I,J,0)
"RTN","ECXBCM",152,0)
 ..S (UNITCOST,ECXDRGC,ECXIVSC,ECXIVAC)=0 ;144 NEW COST FIELDS
"RTN","ECXBCM",153,0)
 ..S CCIEN=$P(DATA,U),CCDORD=$P(DATA,U,2),CCDGVN=$S(+($P(DATA,U,3))>0:+($P(DATA,U,3)),1:1),CCUNIT=$S(+($P(DATA,U,4))>0:+($P(DATA,U,4)),1:1)
"RTN","ECXBCM",154,0)
 ..I I=.5 D  ;144 New drug Cost Fields added
"RTN","ECXBCM",155,0)
 ...S DRG=CCIEN,UNITCOST=$$GET1^DIQ(50,DRG,16,"I")
"RTN","ECXBCM",156,0)
 ...S ECXDRGC=(CCDGVN*CCUNIT)*UNITCOST
"RTN","ECXBCM",157,0)
 ..I I=.6 D  ;144 New IV Additive Cost Fields added
"RTN","ECXBCM",158,0)
 ...S DRG=$$GET1^DIQ(52.6,CCIEN,1,"I"),UNITCOST=$$GET1^DIQ(52.6,CCIEN,7,"I")
"RTN","ECXBCM",159,0)
 ...S ECXIVAC=CCDGVN*UNITCOST
"RTN","ECXBCM",160,0)
 ..I I=.7 D  ;144 New IV Solution Cost Fields added
"RTN","ECXBCM",161,0)
 ...S DRG=$$GET1^DIQ(52.7,CCIEN,1,"I"),UNITCOST=$$GET1^DIQ(52.7,CCIEN,7,"I")
"RTN","ECXBCM",162,0)
 ...S ECXIVSC=CCDGVN*UNITCOST
"RTN","ECXBCM",163,0)
 ..S CCTYPE=$S(I=.5:"D",I=.6:"A",I=.7:"S",1:"")
"RTN","ECXBCM",164,0)
 ..S CCIEN=$S(I=.5:CCIEN_";PSDRUG(",I=.6:CCIEN_";PS(52.6,",I=.7:CCIEN_";PS(52.7,",1:"")
"RTN","ECXBCM",165,0)
 ..S CCDGVN=$P(DATA,U,3) ;148 Reset component dose given to original value
"RTN","ECXBCM",166,0)
 ..S CCUNIT=$P(DATA,U,4) ;148 Reset component unit to original value
"RTN","ECXBCM",167,0)
 ..I ECXORN["U" I $$MULTI I '$$FIRST Q  ;154,160 If it's a unit dose type order and it's a multi-dose container, only count if it's the 1st administration
"RTN","ECXBCM",168,0)
 ..D CMPT
"RTN","ECXBCM",169,0)
 Q
"RTN","ECXBCM",170,0)
 ;
"RTN","ECXBCM",171,0)
CHKIV(ECXDFN,ECSD,ECED) ; Check file 728.113 for matching IV records 
"RTN","ECXBCM",172,0)
 ;  input - ECXDFN   DFN of the patient from the BCMA file
"RTN","ECXBCM",173,0)
 ;          ECSD:    Start Date for the extract 
"RTN","ECXBCM",174,0)
 ;          ECED:    End Date for the extract 
"RTN","ECXBCM",175,0)
 ; return - True     if the Order is in file 728.113  
"RTN","ECXBCM",176,0)
 ;          False    if the Order is Not in file 728.113 
"RTN","ECXBCM",177,0)
 ;
"RTN","ECXBCM",178,0)
 N IVIEN,ORD,IVORN,ECD,EXTRACT,STDATE,ENDDATE
"RTN","ECXBCM",179,0)
 S (ORD,ECD,STDATE,ENDDATE)=0
"RTN","ECXBCM",180,0)
 S (IVORN,EXTRACT)=""
"RTN","ECXBCM",181,0)
 I '$O(^ECX(728.113,0)) D     ; Check to see if data exists in the file, if not, recreate
"RTN","ECXBCM",182,0)
 .S EXTRACT="IV"
"RTN","ECXBCM",183,0)
 .S STDATE=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",184,0)
 .S ENDDATE=ECED
"RTN","ECXBCM",185,0)
 .D START^PSJDSS
"RTN","ECXBCM",186,0)
 S IVORN=$P(ECXORN,"V")
"RTN","ECXBCM",187,0)
 S ECD=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",188,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)) Q:'ECD!(ECD>ECED)!(ORD=IVORN)  D
"RTN","ECXBCM",189,0)
 .S ORD=0
"RTN","ECXBCM",190,0)
 .F  S ORD=$O(^ECX(728.113,"A",ECD,ECXDFN,ORD)) Q:'ORD!(ORD=IVORN)
"RTN","ECXBCM",191,0)
 I ORD=IVORN Q 1
"RTN","ECXBCM",192,0)
 Q 0 ;Checks show order not in IV 728.113
"RTN","ECXBCM",193,0)
 ;
"RTN","ECXBCM",194,0)
CHKUD(ECXDFN,ECSD,ECED) ; Check file 728.904 for matching Unit dose records
"RTN","ECXBCM",195,0)
 ;  input - ECXDFN   DFN of the patient from the BCMA file
"RTN","ECXBCM",196,0)
 ;          ECSD:    Start Date for the extract 
"RTN","ECXBCM",197,0)
 ;          ECED:    End Date for the extract 
"RTN","ECXBCM",198,0)
 ; return - True     if the Order is in file 728.904
"RTN","ECXBCM",199,0)
 ;          False    if the Order is Not in file 728.904
"RTN","ECXBCM",200,0)
 ;
"RTN","ECXBCM",201,0)
 N UDIEN,UDORN,ORD,EXTRACT,STDATE,ENDDATE
"RTN","ECXBCM",202,0)
 S (ORD,STDATE,ENDDATE)=0
"RTN","ECXBCM",203,0)
 S (UDORN,EXTRACT)=""
"RTN","ECXBCM",204,0)
 I '$O(^ECX(728.904,0)) D    ; Check to see if data exists in the file, if not, recreate
"RTN","ECXBCM",205,0)
 .S EXTRACT="UD"
"RTN","ECXBCM",206,0)
 .S STDATE=$E($$FMADD^XLFDT(ECSD,-140),1,5)_"01"
"RTN","ECXBCM",207,0)
 .S ENDDATE=ECED
"RTN","ECXBCM",208,0)
 .D START^PSJDSS
"RTN","ECXBCM",209,0)
 S UDORN=$P(ECXORN,"U")
"RTN","ECXBCM",210,0)
 F  S ORD=$O(^ECX(728.904,"AO",ECXDFN,ORD)) Q:'ORD!(ORD=UDORN)
"RTN","ECXBCM",211,0)
 I ORD=UDORN Q 1
"RTN","ECXBCM",212,0)
 ;I $$GET1^DIQ(55.06,UDORN_","_ECXDFN,7,"I")="R" Q 1
"RTN","ECXBCM",213,0)
 Q 0 ;Checks show order not in UD 728.904
"RTN","ECXBCM",214,0)
 ;
"RTN","ECXBCM",215,0)
FIRST() ;154 Section added to determine if this is the first administration of the medication since pharmacist verification
"RTN","ECXBCM",216,0)
 N ALIEN,ADATE,FIRST,VDATE,DONE,IENS,ON
"RTN","ECXBCM",217,0)
 S FIRST=0,VDATE="",DONE=0
"RTN","ECXBCM",218,0)
 S ON=+ECXORN ;get numeric portion of order multiple IEN
"RTN","ECXBCM",219,0)
 S ALIEN=0 F  S ALIEN=$O(^PS(55,ECXDFN,$S(ECXORN["U":5,1:"IV"),ON,$S(ECXORN["U":9,1:"A"),ALIEN)) Q:'+ALIEN!(DONE)  S IENS=ALIEN_","_ON_","_ECXDFN_"," D
"RTN","ECXBCM",220,0)
 .S ADATE=$$GET1^DIQ($S(ECXORN["U":55.09,1:55.04),IENS,$S(ECXORN["U":".01",1:".05"),"I")
"RTN","ECXBCM",221,0)
 .I ADATE>IDAT S DONE=1 Q  ;activity date is after administration date
"RTN","ECXBCM",222,0)
 .I ECXORN["U" I "^VP^VPR^"[("^"_$$GET1^DIQ(55.09,IENS,"2:1")_"^") S VDATE=ADATE
"RTN","ECXBCM",223,0)
 .I ECXORN["V" I $$GET1^DIQ(55.04,IENS,".04")="ORDER VERIFIED BY PHARMACIST" S VDATE=ADATE
"RTN","ECXBCM",224,0)
 I VDATE'="" D
"RTN","ECXBCM",225,0)
 .I '$D(^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN))!($G(^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN))=RIEN) S FIRST=1
"RTN","ECXBCM",226,0)
 .I '$D(^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN)) S ^XTMP("ECXBCM",VDATE,ECXDFN,ECXORN)=RIEN
"RTN","ECXBCM",227,0)
 Q FIRST
"RTN","ECXBCM",228,0)
 ;
"RTN","ECXBCM",229,0)
CLEAN(START,END) ;154 Section added to delete old log entries
"RTN","ECXBCM",230,0)
 N DATE,PAT,ON
"RTN","ECXBCM",231,0)
 S DATE=START F  S DATE=$O(^XTMP("ECXBCM",DATE)) Q:'+DATE!(DATE>END)  S PAT=0 F  S PAT=$O(^XTMP("ECXBCM",DATE,PAT)) Q:'+PAT  S ON=0 F  S ON=$O(^XTMP("ECXBCM",DATE,PAT,ON)) Q:'+ON  K ^XTMP("ECXBCM",DATE,PAT,ON)
"RTN","ECXBCM",232,0)
 S ^XTMP("ECXBCM",0)=$$FMADD^XLFDT($$DT^XLFDT,365)_"^"_$$DT^XLFDT_"^"_"Log of BCMA orders that have already been counted"
"RTN","ECXBCM",233,0)
 Q
"RTN","ECXBCM",234,0)
 ;
"RTN","ECXBCM",235,0)
MULTI() ;154 Section added to determine if this is a multi-dose container
"RTN","ECXBCM",236,0)
 N COMP,TERM,OFF,UNIT,MULTI
"RTN","ECXBCM",237,0)
 S MULTI=1 ;Assume it is a multi-dose container
"RTN","ECXBCM",238,0)
 S UNIT=$$UP^XLFSTR($TR(CCUNIT," 0123456789","")) ;Convert to upper case and remove any numbers or spaces
"RTN","ECXBCM",239,0)
 F COMP="EQUAL","CONTAIN" F OFF=1:1 S TERM=$P($T(@COMP+OFF),";",2) Q:TERM="DONE"!('MULTI)  D
"RTN","ECXBCM",240,0)
 .I COMP="EQUAL" I UNIT=TERM S MULTI=0 Q  ;Not a multi-dose container
"RTN","ECXBCM",241,0)
 .I COMP="CONTAIN" I UNIT[TERM S MULTI=0 ;Not a multi-dose container
"RTN","ECXBCM",242,0)
 Q MULTI
"RTN","ECXBCM",243,0)
 ;
"RTN","ECXBCM",244,0)
EQUAL ;154, list of terms for equality check
"RTN","ECXBCM",245,0)
 ;AMP
"RTN","ECXBCM",246,0)
 ;AMPULE
"RTN","ECXBCM",247,0)
 ;BOTTLE
"RTN","ECXBCM",248,0)
 ;CAP
"RTN","ECXBCM",249,0)
 ;LOZENGE
"RTN","ECXBCM",250,0)
 ;PACKAGE
"RTN","ECXBCM",251,0)
 ;PACKET
"RTN","ECXBCM",252,0)
 ;PKG
"RTN","ECXBCM",253,0)
 ;SUPPOSITORY
"RTN","ECXBCM",254,0)
 ;SYRINGE
"RTN","ECXBCM",255,0)
 ;TAB
"RTN","ECXBCM",256,0)
 ;UNITDOSE
"RTN","ECXBCM",257,0)
 ;VIAL
"RTN","ECXBCM",258,0)
 ;EACH
"RTN","ECXBCM",259,0)
 ;VI
"RTN","ECXBCM",260,0)
 ;VL
"RTN","ECXBCM",261,0)
 ;SYR
"RTN","ECXBCM",262,0)
 ;SYG
"RTN","ECXBCM",263,0)
 ;AMPOULE
"RTN","ECXBCM",264,0)
 ;CARTRIDGE
"RTN","ECXBCM",265,0)
 ;CHEWTAB
"RTN","ECXBCM",266,0)
 ;LOZ
"RTN","ECXBCM",267,0)
 ;TUBEX
"RTN","ECXBCM",268,0)
 ;DONE
"RTN","ECXBCM",269,0)
CONTAIN ;154, list of terms for contains check
"RTN","ECXBCM",270,0)
 ;AMP,
"RTN","ECXBCM",271,0)
 ;CAP,
"RTN","ECXBCM",272,0)
 ;CAP/
"RTN","ECXBCM",273,0)
 ;SUPP
"RTN","ECXBCM",274,0)
 ;TAB,
"RTN","ECXBCM",275,0)
 ;SOLUTAB
"RTN","ECXBCM",276,0)
 ;SOFTGEL
"RTN","ECXBCM",277,0)
 ;DONE
"RTN","ECXBCM",278,0)
 ;
"RTN","ECXBCM",279,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXBCM",280,0)
 S ECHEAD="BCM"
"RTN","ECXBCM",281,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXBCM",282,0)
 Q
"RTN","ECXUCBOC")
0^1^B98139250^B95678239
"RTN","ECXUCBOC",1,0)
ECXUCBOC ;ALB/TJL-CBOC Activity Report ;11/17/15  11:04
"RTN","ECXUCBOC",2,0)
 ;;3.0;DSS EXTRACTS;**49,148,149,160**;Dec 22, 1997;Build 1
"RTN","ECXUCBOC",3,0)
 ;
"RTN","ECXUCBOC",4,0)
EN ; entry point
"RTN","ECXUCBOC",5,0)
 N X,Y,DATE,PG,COUNT,ECRUN,ECXDESC,ECXSAVE,ECXTL,YYYYMM,ECXJOB
"RTN","ECXUCBOC",6,0)
 N ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG,ECXPORT,CNT ;149
"RTN","ECXUCBOC",7,0)
 S (QFLG,COUNT,PG)=0
"RTN","ECXUCBOC",8,0)
 ; get today's date
"RTN","ECXUCBOC",9,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXUCBOC",10,0)
 ;D BEGIN Q:QFLG
"RTN","ECXUCBOC",11,0)
 D SELECT Q:QFLG
"RTN","ECXUCBOC",12,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I $G(ECXPORT) D  Q  ;149 Section added
"RTN","ECXUCBOC",13,0)
 .S CNT=1
"RTN","ECXUCBOC",14,0)
 .D PROCESS
"RTN","ECXUCBOC",15,0)
 .S ^TMP($J,"ECXPORT",0)="FEEDER KEY^DIVISION^CLINIC^PATIENT NAME^SSN^VISIT DATE/TIME"
"RTN","ECXUCBOC",16,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXUCBOC",17,0)
 .D AUDIT^ECXKILL
"RTN","ECXUCBOC",18,0)
 S ECXDESC="CBOC Activity Report"
"RTN","ECXUCBOC",19,0)
 S ECXSAVE("EC*")=""
"RTN","ECXUCBOC",20,0)
 W !!,"This report requires 80-column format."
"RTN","ECXUCBOC",21,0)
 D EN^XUTMDEVQ("PROCESS^ECXUCBOC",ECXDESC,.ECXSAVE)
"RTN","ECXUCBOC",22,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXUCBOC",23,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXUCBOC",24,0)
 D HOME^%ZIS
"RTN","ECXUCBOC",25,0)
 D AUDIT^ECXKILL
"RTN","ECXUCBOC",26,0)
 Q
"RTN","ECXUCBOC",27,0)
 ;
"RTN","ECXUCBOC",28,0)
BEGIN ; display report description
"RTN","ECXUCBOC",29,0)
 W @IOF
"RTN","ECXUCBOC",30,0)
 W !,"This report prints a listing of all Clinical (CLI) records"
"RTN","ECXUCBOC",31,0)
 W !,"that have a Community Based Outpatient Clinic (CBOC) status of"
"RTN","ECXUCBOC",32,0)
 W !,"Y (=Yes).  Reports are grouped by Feeder Key, Division, and"
"RTN","ECXUCBOC",33,0)
 W !,"Clinic; detail lines include Patient Name, SSN, and Date of Visit."
"RTN","ECXUCBOC",34,0)
 W !,"Totals for unique SSNs and unique Dates of Visit will be displayed"
"RTN","ECXUCBOC",35,0)
 W !,"at the Clinic, Division, Feeder Key, and Report levels."
"RTN","ECXUCBOC",36,0)
 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUCBOC",37,0)
 W:$Y!($E(IOST)="C") @IOF,!!
"RTN","ECXUCBOC",38,0)
 Q
"RTN","ECXUCBOC",39,0)
 ;
"RTN","ECXUCBOC",40,0)
SELECT ; user inputs for start date
"RTN","ECXUCBOC",41,0)
 N OUT,DONE,LIST,IEN,ECXFROM,ECXEND,ECXRUN,ECXCNT,ECXDIV,LN,HDT ;149
"RTN","ECXUCBOC",42,0)
 W @IOF
"RTN","ECXUCBOC",43,0)
 S (PG,QFLG)=0,$P(LN,"-",80)=""
"RTN","ECXUCBOC",44,0)
 D NOW^%DTC S Y=$E(%,1,12) X ^DD("DD") S HDT=Y D LISTHDR
"RTN","ECXUCBOC",45,0)
 S IEN=0 F  S IEN=$O(^ECX(727,IEN)) Q:IEN=""  Q:QFLG  D:$Y+4>IOSL LISTHDR Q:QFLG  I $G(^ECX(727,IEN,"HEAD"))="CLI" D
"RTN","ECXUCBOC",46,0)
 .I $G(^ECX(727,IEN,"PURG")) Q
"RTN","ECXUCBOC",47,0)
 .I '$D(^ECX(727,IEN,0)) Q
"RTN","ECXUCBOC",48,0)
 .I $P(^ECX(727,IEN,0),U,4)<3030101 Q
"RTN","ECXUCBOC",49,0)
 .S ECXJOB=$P(^ECX(727,IEN,0),U)
"RTN","ECXUCBOC",50,0)
 .S ECXFROM=$TR($$FMTE^XLFDT($P(^ECX(727,IEN,0),U,4),"5DF")," ","0")
"RTN","ECXUCBOC",51,0)
 .S ECXEND=$TR($$FMTE^XLFDT($P(^ECX(727,IEN,0),U,5),"5DF")," ","0")
"RTN","ECXUCBOC",52,0)
 .S ECXRUN=$TR($$FMTE^XLFDT($P(^ECX(727,IEN,0),U,2),"5DF")," ","0")
"RTN","ECXUCBOC",53,0)
 .S ECXCNT=$P(^ECX(727,IEN,0),U,6)
"RTN","ECXUCBOC",54,0)
 .S ECXDIV=$P($G(^ECX(727,IEN,"DIV")),U) I ECXDIV D
"RTN","ECXUCBOC",55,0)
 ..S DA=ECXDIV,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXUCBOC",56,0)
 ..D EN^DIQ1 S ECXDIV=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXUCBOC",57,0)
 .D:$Y+3>IOSL LISTHDR Q:QFLG
"RTN","ECXUCBOC",58,0)
 .W !?4,ECXJOB,?14,ECXRUN,?28,$J(ECXCNT,9),?41,ECXFROM," - ",ECXEND,?71,ECXDIV
"RTN","ECXUCBOC",59,0)
 .S LIST(ECXJOB)=1
"RTN","ECXUCBOC",60,0)
 S QFLG=0 ;149 Reset QFLG so choice can be made if user "^" during list
"RTN","ECXUCBOC",61,0)
 S DIR(0)="NA^"_$O(LIST(0))_":"_$O(LIST(" "),-1)_":0"_"^I '$D(LIST(X)) K X",DIR("A")="Create the CBOC Activity Report for extract number: ",DIR("?")="Select the extract number to use to build the report." ;149
"RTN","ECXUCBOC",62,0)
 W ! D ^DIR K DIR I $D(DIRUT) K LIST S QFLG=1 Q
"RTN","ECXUCBOC",63,0)
 I '$D(X) W !!,"Invalid choice.  Please try again." S DIR(0)="E" W ! D ^DIR K DIR D  Q:QFLG  G SELECT ;149
"RTN","ECXUCBOC",64,0)
 .I 'Y S QFLG=1
"RTN","ECXUCBOC",65,0)
 S ECXJOB=X
"RTN","ECXUCBOC",66,0)
 S Y=$P(^ECX(727,ECXJOB,0),U,4) D DD^%DT
"RTN","ECXUCBOC",67,0)
 S ECSTART=$P(Y," ")_$P(Y,",",2)
"RTN","ECXUCBOC",68,0)
 Q
"RTN","ECXUCBOC",69,0)
 ;
"RTN","ECXUCBOC",70,0)
LISTHDR ;
"RTN","ECXUCBOC",71,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUCBOC",72,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXUCBOC",73,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"Selectable Clinic Extracts for CBOC Activity Report",?72,"Page: ",PG
"RTN","ECXUCBOC",74,0)
 W !!,"Extract #",?15,"Run Date",?28,"Rec Count",?42,"Date Range of Extract",?68,"Division",!,LN
"RTN","ECXUCBOC",75,0)
 Q
"RTN","ECXUCBOC",76,0)
 ;
"RTN","ECXUCBOC",77,0)
PROCESS ; entry point for queued report
"RTN","ECXUCBOC",78,0)
 N ECXD,QFLG,PG,RECDA,LN,COUNT
"RTN","ECXUCBOC",79,0)
 N FKEY,DIV,CLIN,SSN,DFN,VDATE,KEY
"RTN","ECXUCBOC",80,0)
 N TSSN,FSSN,DSSN,CSSN,TVISIT,FVISIT,DVISIT,CVISIT,DLAYGO
"RTN","ECXUCBOC",81,0)
 N OLDFKEY,OLDDIV,OLDCLIN,OLDSSN,OLDDFN,OLDVDATE,OLDKEY,HEADKEY
"RTN","ECXUCBOC",82,0)
 S (QFLG,COUNT,PG)=0,ZTREQ="@",ECXD="-",$P(LN,"-",80)=""
"RTN","ECXUCBOC",83,0)
 K ^TMP($J)
"RTN","ECXUCBOC",84,0)
 W @IOF
"RTN","ECXUCBOC",85,0)
 ;
"RTN","ECXUCBOC",86,0)
 ; set report created indicator
"RTN","ECXUCBOC",87,0)
 K DA,DIC,DD,DO
"RTN","ECXUCBOC",88,0)
 S DA(1)=1
"RTN","ECXUCBOC",89,0)
 I '$D(^ECX(728,DA(1),"CBOC","B",ECXJOB)) D
"RTN","ECXUCBOC",90,0)
 .S DLAYGO=728,DIC(0)="L",DIC("P")=$P(^DD(728,68,0),U,2)
"RTN","ECXUCBOC",91,0)
 .S DIC="^ECX(728,"_DA(1)_",""CBOC"",",X=ECXJOB
"RTN","ECXUCBOC",92,0)
 .D FILE^DICN
"RTN","ECXUCBOC",93,0)
 ;
"RTN","ECXUCBOC",94,0)
 I $O(^ECX(727.827,"AC",ECXJOB,0))="" D  Q
"RTN","ECXUCBOC",95,0)
 .I '$G(ECXPORT) W !,"No extract records exist for the selected extract." ;149
"RTN","ECXUCBOC",96,0)
 S RECDA=0
"RTN","ECXUCBOC",97,0)
 F  S RECDA=$O(^ECX(727.827,"AC",ECXJOB,RECDA)) Q:'RECDA  D ISCBOC
"RTN","ECXUCBOC",98,0)
 ;
"RTN","ECXUCBOC",99,0)
 I '$D(^TMP($J)) W:'$G(ECXPORT) !,"No records were found with a CBOC Indicator value of ""Y""." S QFLG=1 Q  ;149
"RTN","ECXUCBOC",100,0)
 ;
"RTN","ECXUCBOC",101,0)
 S (TSSN,FSSN,DSSN,CSSN,TVISIT,FVISIT,DVISIT,CVISIT)=0
"RTN","ECXUCBOC",102,0)
 S RECDA=$O(^TMP($J,"AKEY",""))
"RTN","ECXUCBOC",103,0)
 S HEADKEY=RECDA
"RTN","ECXUCBOC",104,0)
 I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=$P(RECDA,ECXD)_U_$P(RECDA,ECXD,2)_U_$$GET1^DIQ(44,$P(RECDA,ECXD,3),.01) ;149
"RTN","ECXUCBOC",105,0)
 D:'$G(ECXPORT) HEADER Q:QFLG  D DETAIL Q:QFLG  D INCVIS D INCSSN D SETOLD ;149
"RTN","ECXUCBOC",106,0)
 ;
"RTN","ECXUCBOC",107,0)
 ; process all CBOC records
"RTN","ECXUCBOC",108,0)
 F  S RECDA=$O(^TMP($J,"AKEY",RECDA)) Q:RECDA=""  D  Q:QFLG
"RTN","ECXUCBOC",109,0)
 .S HEADKEY=OLDKEY
"RTN","ECXUCBOC",110,0)
 .; key fields match, so print detail record and increment total(s)
"RTN","ECXUCBOC",111,0)
 .I $P(RECDA,ECXD,1,3)=OLDKEY D  Q
"RTN","ECXUCBOC",112,0)
 ..I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=$P(RECDA,ECXD)_U_$P(RECDA,ECXD,2)_U_$$GET1^DIQ(44,$P(RECDA,ECXD,3),.01) ;149
"RTN","ECXUCBOC",113,0)
 ..D DETAIL Q:QFLG
"RTN","ECXUCBOC",114,0)
 ..D INCVIS
"RTN","ECXUCBOC",115,0)
 ..S SSN=$P(RECDA,ECXD,4)
"RTN","ECXUCBOC",116,0)
 ..I '$D(^TMP($J,"C",OLDCLIN,SSN)) D INCSSN S OLDSSN=SSN
"RTN","ECXUCBOC",117,0)
 .;
"RTN","ECXUCBOC",118,0)
 .; if fkey changed, print "C","D", and "F" totals
"RTN","ECXUCBOC",119,0)
 .I $P(RECDA,ECXD)'=OLDFKEY D  Q:QFLG
"RTN","ECXUCBOC",120,0)
 ..D CLINTOT Q:QFLG  D DIVTOT Q:QFLG  D FKEYTOT Q:QFLG
"RTN","ECXUCBOC",121,0)
 .E  D  Q:QFLG
"RTN","ECXUCBOC",122,0)
 ..I $P(RECDA,ECXD,2)'=OLDDIV D
"RTN","ECXUCBOC",123,0)
 ...D CLINTOT Q:QFLG  D DIVTOT Q:QFLG
"RTN","ECXUCBOC",124,0)
 ..E  D CLINTOT Q:QFLG
"RTN","ECXUCBOC",125,0)
 .;
"RTN","ECXUCBOC",126,0)
 .; something changed, so print subheader and detail line
"RTN","ECXUCBOC",127,0)
 .Q:QFLG  S HEADKEY=RECDA
"RTN","ECXUCBOC",128,0)
 .I '$G(ECXPORT) D HEADER2 Q:QFLG  ;149
"RTN","ECXUCBOC",129,0)
 .I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=$P(RECDA,ECXD)_U_$P(RECDA,ECXD,2)_U_$$GET1^DIQ(44,$P(RECDA,ECXD,3),.01) ;149
"RTN","ECXUCBOC",130,0)
 .D DETAIL Q:QFLG
"RTN","ECXUCBOC",131,0)
 .D INCVIS
"RTN","ECXUCBOC",132,0)
 .D INCSSN
"RTN","ECXUCBOC",133,0)
 .D SETOLD
"RTN","ECXUCBOC",134,0)
 .Q
"RTN","ECXUCBOC",135,0)
 Q:QFLG
"RTN","ECXUCBOC",136,0)
 ; print totals for clinic, division, feeder key, and grand totals
"RTN","ECXUCBOC",137,0)
 S HEADKEY=OLDKEY
"RTN","ECXUCBOC",138,0)
 D CLINTOT Q:QFLG
"RTN","ECXUCBOC",139,0)
 D DIVTOT Q:QFLG
"RTN","ECXUCBOC",140,0)
 D FKEYTOT Q:QFLG
"RTN","ECXUCBOC",141,0)
 D GTOTAL Q:QFLG 
"RTN","ECXUCBOC",142,0)
 Q
"RTN","ECXUCBOC",143,0)
 ;
"RTN","ECXUCBOC",144,0)
ISCBOC ;
"RTN","ECXUCBOC",145,0)
 I $P(^ECX(727.827,RECDA,2),U,15)="Y" D SETKEY
"RTN","ECXUCBOC",146,0)
 Q
"RTN","ECXUCBOC",147,0)
 ;
"RTN","ECXUCBOC",148,0)
INCVIS ;
"RTN","ECXUCBOC",149,0)
 S TVISIT=TVISIT+1
"RTN","ECXUCBOC",150,0)
 S FVISIT=FVISIT+1
"RTN","ECXUCBOC",151,0)
 S DVISIT=DVISIT+1
"RTN","ECXUCBOC",152,0)
 S CVISIT=CVISIT+1
"RTN","ECXUCBOC",153,0)
 Q
"RTN","ECXUCBOC",154,0)
 ;
"RTN","ECXUCBOC",155,0)
INCSSN ;
"RTN","ECXUCBOC",156,0)
 N ZSSN,ZF,ZD,ZC
"RTN","ECXUCBOC",157,0)
 S ZSSN=$P(RECDA,ECXD,4)
"RTN","ECXUCBOC",158,0)
 S ZF=$P(RECDA,ECXD,1)
"RTN","ECXUCBOC",159,0)
 S ZD=$P(RECDA,ECXD,2)
"RTN","ECXUCBOC",160,0)
 S ZC=$P(RECDA,ECXD,3)
"RTN","ECXUCBOC",161,0)
 I '$D(^TMP($J,"SSN",ZSSN)) S ^TMP($J,"SSN",ZSSN)="" S TSSN=TSSN+1
"RTN","ECXUCBOC",162,0)
 I '$D(^TMP($J,"F",ZF,ZSSN)) S ^TMP($J,"F",ZF,ZSSN)="" S FSSN=FSSN+1
"RTN","ECXUCBOC",163,0)
 I '$D(^TMP($J,"D",ZD,ZSSN)) S ^TMP($J,"D",ZD,ZSSN)="" S DSSN=DSSN+1
"RTN","ECXUCBOC",164,0)
 I '$D(^TMP($J,"C",ZC,ZSSN)) S ^TMP($J,"C",ZC,ZSSN)="" S CSSN=CSSN+1
"RTN","ECXUCBOC",165,0)
 Q
"RTN","ECXUCBOC",166,0)
 ;
"RTN","ECXUCBOC",167,0)
SETOLD ;
"RTN","ECXUCBOC",168,0)
 S OLDKEY=$P(RECDA,ECXD,1,3)
"RTN","ECXUCBOC",169,0)
 S OLDFKEY=$P(RECDA,ECXD)
"RTN","ECXUCBOC",170,0)
 S OLDDIV=$P(RECDA,ECXD,2)
"RTN","ECXUCBOC",171,0)
 S OLDCLIN=$P(RECDA,ECXD,3)
"RTN","ECXUCBOC",172,0)
 S OLDSSN=$P(RECDA,ECXD,4)
"RTN","ECXUCBOC",173,0)
 Q
"RTN","ECXUCBOC",174,0)
 ;
"RTN","ECXUCBOC",175,0)
SETKEY ;
"RTN","ECXUCBOC",176,0)
 N CLIN,DIV,FKEY,DFN,SSN,VDATE
"RTN","ECXUCBOC",177,0)
 S CLIN=$P(^ECX(727.827,RECDA,0),U,12) I '+CLIN S CLIN=$P(^ECX(727.827,RECDA,4),U,9) ;160 If clinic info not in old location get it from the new location
"RTN","ECXUCBOC",178,0)
 S DIV=$P(^ECX(727.827,RECDA,2),U,8)
"RTN","ECXUCBOC",179,0)
 S FKEY=$P(^ECX(727.827,RECDA,0),U,10)
"RTN","ECXUCBOC",180,0)
 S DFN=$P(^ECX(727.827,RECDA,0),U,5)
"RTN","ECXUCBOC",181,0)
 S SSN=$P(^ECX(727.827,RECDA,0),U,6)
"RTN","ECXUCBOC",182,0)
 S VDATE=$P(^ECX(727.827,RECDA,0),U,9)_"."_$P(^ECX(727.827,RECDA,0),U,14)
"RTN","ECXUCBOC",183,0)
 S KEY=FKEY_ECXD_DIV_ECXD_CLIN_ECXD_SSN_ECXD_DFN_ECXD_VDATE
"RTN","ECXUCBOC",184,0)
 S ^TMP($J,"AKEY",KEY)=""
"RTN","ECXUCBOC",185,0)
 Q
"RTN","ECXUCBOC",186,0)
 ;
"RTN","ECXUCBOC",187,0)
DETAIL ; print detail line
"RTN","ECXUCBOC",188,0)
 N DFN,PTNAME,DISPDT,DISPTM
"RTN","ECXUCBOC",189,0)
 U IO
"RTN","ECXUCBOC",190,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXUCBOC",191,0)
 S COUNT=COUNT+1
"RTN","ECXUCBOC",192,0)
 ;S QFLG=0
"RTN","ECXUCBOC",193,0)
 I '$G(ECXPORT) I $Y+3>IOSL D HEADER Q:QFLG  ;149
"RTN","ECXUCBOC",194,0)
 ; get patient name using DFN
"RTN","ECXUCBOC",195,0)
 S DFN=$P(RECDA,ECXD,5)
"RTN","ECXUCBOC",196,0)
 S PTNAME=$S(DFN'="":$P(^DPT(DFN,0),U),1:"")
"RTN","ECXUCBOC",197,0)
 S DISPDT=$P(RECDA,ECXD,6)
"RTN","ECXUCBOC",198,0)
 S DISPTM=$E(DISPDT,9,14)
"RTN","ECXUCBOC",199,0)
 S DISPDT=$E(DISPDT,1,4)-1700_$E(DISPDT,5,8)
"RTN","ECXUCBOC",200,0)
 S DISPDT=DISPDT_DISPTM
"RTN","ECXUCBOC",201,0)
 I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=^TMP($J,"ECXPORT",CNT)_U_PTNAME_U_$P(RECDA,ECXD,4)_U_$$FMTE^XLFDT(DISPDT,1),CNT=CNT+1 Q  ;149
"RTN","ECXUCBOC",202,0)
 W !,PTNAME,?36,$P(RECDA,ECXD,4),?51,$$FMTE^XLFDT(DISPDT,1)
"RTN","ECXUCBOC",203,0)
 Q
"RTN","ECXUCBOC",204,0)
 ;
"RTN","ECXUCBOC",205,0)
CLINTOT ;
"RTN","ECXUCBOC",206,0)
 S COUNT=COUNT+2
"RTN","ECXUCBOC",207,0)
 I '$G(ECXPORT) I $Y+3>IOSL D HEADER Q:QFLG  ;149
"RTN","ECXUCBOC",208,0)
 I '$G(ECXPORT) W !!,?5,"Total Unique SSNs for Clinic:" ;149
"RTN","ECXUCBOC",209,0)
 I '$G(ECXPORT) W ?35,$J(CSSN,10),?50,$J(CVISIT,10),?61,"Clinic Visits" ;149
"RTN","ECXUCBOC",210,0)
 I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)="^",CNT=CNT+1 S ^TMP($J,"ECXPORT",CNT)="^^^Total Unique SSNs for Clinic"_U_CSSN_U_"Clinic Visits"_U_CVISIT,CNT=CNT+1 ;149
"RTN","ECXUCBOC",211,0)
 S (CSSN,CVISIT)=0 S OLDCLIN=$P(RECDA,ECXD,3) K ^TMP($J,"C")
"RTN","ECXUCBOC",212,0)
 Q
"RTN","ECXUCBOC",213,0)
 ;
"RTN","ECXUCBOC",214,0)
DIVTOT ;
"RTN","ECXUCBOC",215,0)
 S COUNT=COUNT+1
"RTN","ECXUCBOC",216,0)
 I '$G(ECXPORT) I $Y+3>IOSL D HEADER Q:QFLG  ;149
"RTN","ECXUCBOC",217,0)
 I '$G(ECXPORT) W !,?3,"Total Unique SSNs for Division:" ;149
"RTN","ECXUCBOC",218,0)
 I '$G(ECXPORT) W ?35,$J(DSSN,10),?50,$J(DVISIT,10),?61,"Division Visits" ;149
"RTN","ECXUCBOC",219,0)
 I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)="^^^Total Unique SSNs for Division"_U_DSSN_U_"Division Visits"_U_DVISIT,CNT=CNT+1 ;149
"RTN","ECXUCBOC",220,0)
 S (DSSN,DVISIT)=0 S OLDDIV=$P(RECDA,ECXD,2) K ^TMP($J,"D")
"RTN","ECXUCBOC",221,0)
 Q
"RTN","ECXUCBOC",222,0)
 ;
"RTN","ECXUCBOC",223,0)
FKEYTOT ;
"RTN","ECXUCBOC",224,0)
 S COUNT=COUNT+1
"RTN","ECXUCBOC",225,0)
 I '$G(ECXPORT) I $Y+3>IOSL D HEADER Q:QFLG  ;149
"RTN","ECXUCBOC",226,0)
 I '$G(ECXPORT) W !,?1,"Total Unique SSNs for Feeder Key:" ;149
"RTN","ECXUCBOC",227,0)
 I '$G(ECXPORT) W ?35,$J(FSSN,10),?50,$J(FVISIT,10),?61,"Feeder Key Visits" ;149
"RTN","ECXUCBOC",228,0)
 I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)="^^^Total Unique SSNs for Feeder Key"_U_FSSN_U_"Feeder Key Visits"_U_FVISIT,CNT=CNT+1,^TMP($J,"ECXPORT",CNT)="^",CNT=CNT+1 ;149
"RTN","ECXUCBOC",229,0)
 S (FSSN,FVISIT)=0 S OLDFKEY=$P(RECDA,ECXD) K ^TMP($J,"F")
"RTN","ECXUCBOC",230,0)
 Q
"RTN","ECXUCBOC",231,0)
 ;
"RTN","ECXUCBOC",232,0)
GTOTAL ;
"RTN","ECXUCBOC",233,0)
 S COUNT=COUNT+1
"RTN","ECXUCBOC",234,0)
 I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)="^^^Total Unique SSNs (entire report)"_U_TSSN_U_"Total Visits"_U_TVISIT Q  ;149
"RTN","ECXUCBOC",235,0)
 I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXUCBOC",236,0)
 W !,"Total Unique SSNs (entire report):"
"RTN","ECXUCBOC",237,0)
 W ?35,$J(TSSN,10),?50,$J(TVISIT,10),?61,"Total Visits"
"RTN","ECXUCBOC",238,0)
 Q
"RTN","ECXUCBOC",239,0)
 ;
"RTN","ECXUCBOC",240,0)
CLOSE ;
"RTN","ECXUCBOC",241,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXUCBOC",242,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUCBOC",243,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUCBOC",244,0)
 Q
"RTN","ECXUCBOC",245,0)
 ;
"RTN","ECXUCBOC",246,0)
HEADER ;header and page control
"RTN","ECXUCBOC",247,0)
 D HEADER1 Q:QFLG
"RTN","ECXUCBOC",248,0)
 D HEADER2 Q:QFLG
"RTN","ECXUCBOC",249,0)
 Q
"RTN","ECXUCBOC",250,0)
HEADER1 ;header1 and page control
"RTN","ECXUCBOC",251,0)
 N SS,JJ
"RTN","ECXUCBOC",252,0)
 I $E(IOST)="C" D
"RTN","ECXUCBOC",253,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUCBOC",254,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUCBOC",255,0)
 Q:QFLG
"RTN","ECXUCBOC",256,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXUCBOC",257,0)
 W !,"CBOC Activity Report"
"RTN","ECXUCBOC",258,0)
 W ?(73-$L(PG)),"Page: "_PG
"RTN","ECXUCBOC",259,0)
 W !,ECSTART,?50,"Report Run Date: "_ECRUN
"RTN","ECXUCBOC",260,0)
 Q
"RTN","ECXUCBOC",261,0)
 ;
"RTN","ECXUCBOC",262,0)
HEADER2 ;display whenever feeder key, division, or clinic changes
"RTN","ECXUCBOC",263,0)
 I $Y+8>IOSL D HEADER1 Q:QFLG
"RTN","ECXUCBOC",264,0)
 N CLINIC
"RTN","ECXUCBOC",265,0)
 S CLINIC=$$GET1^DIQ(44,$P($P(HEADKEY,ECXD,3),U),.01,)
"RTN","ECXUCBOC",266,0)
 W !!,"Feeder Key: ",$P(HEADKEY,ECXD)
"RTN","ECXUCBOC",267,0)
 W ?31,"Division: ",$P(HEADKEY,ECXD,2)
"RTN","ECXUCBOC",268,0)
 W ?51,"Clinic: ",$E(CLINIC,1,20)
"RTN","ECXUCBOC",269,0)
 W !!,"Patient",?39,"SSN",?51,"Visit Date/Time"
"RTN","ECXUCBOC",270,0)
 W !,LN
"RTN","ECXUCBOC",271,0)
 Q
"VER")
8.0^22.0
"BLD",9768,6)
^144
**END**
**END**

