Released ECX*3*153 SEQ #137
Extracted from mail message
**KIDS**:ECX*3.0*153^

**INSTALL NAME**
ECX*3.0*153
"BLD",9484,0)
ECX*3.0*153^DSS EXTRACTS^0^3141201^y
"BLD",9484,4,0)
^9.64PA^^
"BLD",9484,6.3)
2
"BLD",9484,"ABPKG")
n
"BLD",9484,"KRN",0)
^9.67PA^779.2^20
"BLD",9484,"KRN",.4,0)
.4
"BLD",9484,"KRN",.401,0)
.401
"BLD",9484,"KRN",.402,0)
.402
"BLD",9484,"KRN",.403,0)
.403
"BLD",9484,"KRN",.5,0)
.5
"BLD",9484,"KRN",.84,0)
.84
"BLD",9484,"KRN",3.6,0)
3.6
"BLD",9484,"KRN",3.8,0)
3.8
"BLD",9484,"KRN",9.2,0)
9.2
"BLD",9484,"KRN",9.8,0)
9.8
"BLD",9484,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",9484,"KRN",9.8,"NM",1,0)
ECXLBBC^^0^B41769309
"BLD",9484,"KRN",9.8,"NM",2,0)
ECXPLBB^^0^B26831922
"BLD",9484,"KRN",9.8,"NM",3,0)
ECXRAD^^0^B45034346
"BLD",9484,"KRN",9.8,"NM","B","ECXLBBC",1)

"BLD",9484,"KRN",9.8,"NM","B","ECXPLBB",2)

"BLD",9484,"KRN",9.8,"NM","B","ECXRAD",3)

"BLD",9484,"KRN",19,0)
19
"BLD",9484,"KRN",19.1,0)
19.1
"BLD",9484,"KRN",101,0)
101
"BLD",9484,"KRN",409.61,0)
409.61
"BLD",9484,"KRN",771,0)
771
"BLD",9484,"KRN",779.2,0)
779.2
"BLD",9484,"KRN",870,0)
870
"BLD",9484,"KRN",8989.51,0)
8989.51
"BLD",9484,"KRN",8989.52,0)
8989.52
"BLD",9484,"KRN",8994,0)
8994
"BLD",9484,"KRN","B",.4,.4)

"BLD",9484,"KRN","B",.401,.401)

"BLD",9484,"KRN","B",.402,.402)

"BLD",9484,"KRN","B",.403,.403)

"BLD",9484,"KRN","B",.5,.5)

"BLD",9484,"KRN","B",.84,.84)

"BLD",9484,"KRN","B",3.6,3.6)

"BLD",9484,"KRN","B",3.8,3.8)

"BLD",9484,"KRN","B",9.2,9.2)

"BLD",9484,"KRN","B",9.8,9.8)

"BLD",9484,"KRN","B",19,19)

"BLD",9484,"KRN","B",19.1,19.1)

"BLD",9484,"KRN","B",101,101)

"BLD",9484,"KRN","B",409.61,409.61)

"BLD",9484,"KRN","B",771,771)

"BLD",9484,"KRN","B",779.2,779.2)

"BLD",9484,"KRN","B",870,870)

"BLD",9484,"KRN","B",8989.51,8989.51)

"BLD",9484,"KRN","B",8989.52,8989.52)

"BLD",9484,"KRN","B",8994,8994)

"BLD",9484,"QUES",0)
^9.62^^
"BLD",9484,"REQB",0)
^9.611^1^1
"BLD",9484,"REQB",1,0)
ECX*3.0*149^1
"BLD",9484,"REQB","B","ECX*3.0*149",1)

"MBREQ")
0
"PKG",535,-1)
1^1
"PKG",535,0)
DSS EXTRACTS^ECX
"PKG",535,20,0)
^9.402P^^
"PKG",535,22,0)
^9.49I^1^1
"PKG",535,22,1,0)
3.0^2971222^3000224^66481
"PKG",535,22,1,"PAH",1,0)
153^3141201^101077
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","ECXLBBC")
0^1^B41769309^B39992879
"RTN","ECXLBBC",1,0)
ECXLBBC ;ALB/MRY - LBB Extract Audit Comparative Report ;11/12/14  13:16
"RTN","ECXLBBC",2,0)
 ;;3.0;DSS EXTRACTS;**120,149,153**;Dec 22, 1997;Build 2
"RTN","ECXLBBC",3,0)
 ;
"RTN","ECXLBBC",4,0)
EN ;entry point for LBB extract audit comparative report
"RTN","ECXLBBC",5,0)
 N ECSD,ECED,ECSDN,ECEDN
"RTN","ECXLBBC",6,0)
 D SETUP^ECXLBB1 I ECFILE="" Q  ;149
"RTN","ECXLBBC",7,0)
 N %X,%Y,%DT,X,Y,DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT,SCRNARR,REPORT
"RTN","ECXLBBC",8,0)
 N SCRNARR,ECXERR,ECXHEAD,ECXAUD,ECXARRAY,STATUS,FLAG,ECXALL,TMP
"RTN","ECXLBBC",9,0)
 N ZTQUEUED,ZTSTOP
"RTN","ECXLBBC",10,0)
 S SCRNARR="^TMP(""ECX"",$J,""SCRNARR"")"
"RTN","ECXLBBC",11,0)
 K @SCRNARR@("DIVISION")
"RTN","ECXLBBC",12,0)
 S (ECXERR,FLAG)=0
"RTN","ECXLBBC",13,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXLBBC",14,0)
 S ECXHEAD="LBB",ECXAUD=0
"RTN","ECXLBBC",15,0)
 W !!,"Setup for ",ECXHEAD," Extract Comparative Report --",!!
"RTN","ECXLBBC",16,0)
 ;select extract
"RTN","ECXLBBC",17,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXLBBC",18,0)
 Q:ECXERR
"RTN","ECXLBBC",19,0)
 W !!
"RTN","ECXLBBC",20,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXLBBC",21,0)
 ;**not in ECXPLBB report, so leaving multi-divisions out.
"RTN","ECXLBBC",22,0)
 ;S ECXERR=$$NUT^ECXDVSN()
"RTN","ECXLBBC",23,0)
 ;I ECXERR=1 D  Q
"RTN","ECXLBBC",24,0)
 ;.W !!,?5,"Try again later... exiting.",!
"RTN","ECXLBBC",25,0)
 ;.K @SCRNARR@("DIVISION")
"RTN","ECXLBBC",26,0)
 ;.D AUDIT^ECXKILL
"RTN","ECXLBBC",27,0)
 S:'$D(ECINST) ECINST=+$P(^ECX(728,1,0),U)
"RTN","ECXLBBC",28,0)
 S ECXINST=ECINST
"RTN","ECXLBBC",29,0)
 K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXLBBC",30,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXLBBC",31,0)
 ;sort by COMP
"RTN","ECXLBBC",32,0)
 S DIR(0)="Y",DIR("A")="Do you want the "_ECXHEAD_" extract comparative report to sort by COMP"
"RTN","ECXLBBC",33,0)
 S DIR("B")="NO" D ^DIR K DIR
"RTN","ECXLBBC",34,0)
 I $G(DIRUT) S ECXERR=1 Q
"RTN","ECXLBBC",35,0)
 ;if y=0 i.e., 'no', then ecxcomp=0 i.e., 'selected'
"RTN","ECXLBBC",36,0)
 S ECXCFLG=Y
"RTN","ECXLBBC",37,0)
 I ECXERR=1 D  Q
"RTN","ECXLBBC",38,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXLBBC",39,0)
 .D AUDIT^ECXKILL
"RTN","ECXLBBC",40,0)
 W !
"RTN","ECXLBBC",41,0)
 Q:(ECXARRAY("END")']"")&(ECXARRAY("START")']"")
"RTN","ECXLBBC",42,0)
 N ECXPOP S ECXPOP=0 D QUE Q:ECXPOP=1
"RTN","ECXLBBC",43,0)
 ;
"RTN","ECXLBBC",44,0)
START ; entry point from tasked job
"RTN","ECXLBBC",45,0)
 ; get LAB DATA and build temporary global ^TMP("ECXLBB",$J)
"RTN","ECXLBBC",46,0)
 N ECXLOGIC,ECXRPT,ECXCRPT,ECXJOB
"RTN","ECXLBBC",47,0)
 S ECXJOB=$J
"RTN","ECXLBBC",48,0)
 K ^TMP("ECXLBBC",ECXJOB)
"RTN","ECXLBBC",49,0)
 U IO
"RTN","ECXLBBC",50,0)
 I $E(IOST,1,2)="C-" W !,"Retrieving records... "
"RTN","ECXLBBC",51,0)
 S (ECXRPT,ECXCRPT)=1 D AUDRPT^ECXLBB1 ;149 build source tmp
"RTN","ECXLBBC",52,0)
 D EXTRACT ;build extract tmp
"RTN","ECXLBBC",53,0)
 ;
"RTN","ECXLBBC",54,0)
OUTPUT ; entry point called by EN tag
"RTN","ECXLBBC",55,0)
 N ECDATE,ECXTOT,ECXSTOT,ECXSTRX,ECXSTRS,ECRDT,ECQUIT,ECPG,ECLINE,ECLINE1,ECXCLAST
"RTN","ECXLBBC",56,0)
 I '$D(^TMP("ECXLBBC",ECXJOB)) W !,"There were no records that met the date range criteria" Q
"RTN","ECXLBBC",57,0)
 S (ECPG,ECDATE,ECQUIT,ECXCOMP,ECXTOT,ECXSTOT)=0
"RTN","ECXLBBC",58,0)
 S ECXCOMP("TOTAL","S")=0,ECXCOMP("TOTAL","X")=0,ECXCLAST=0
"RTN","ECXLBBC",59,0)
 S ECLINE="",$P(ECLINE,"=",132)="=",ECLINE1="",$P(ECLINE1,"-",132)="-"
"RTN","ECXLBBC",60,0)
 S ECSDN=$$FMTE^XLFDT(ECSD,9),ECEDN=$$FMTE^XLFDT(ECED,9),ECRDT=$$FMTE^XLFDT(DT,9)
"RTN","ECXLBBC",61,0)
 W:$E(IOST,1,2)="C-" @IOF D HED
"RTN","ECXLBBC",62,0)
 S ECXCOMP=0 F  S ECXCOMP=$O(^TMP("ECXLBBC",ECXJOB,ECXCOMP)) D  Q:ECXCOMP=""  Q:ECQUIT
"RTN","ECXLBBC",63,0)
 . I ECXCFLG,ECXCLAST'=0,ECXCOMP="" S ECXSTOT=1 D TOTAL S ECXSTOT=0 Q
"RTN","ECXLBBC",64,0)
 . Q:ECXCOMP=""
"RTN","ECXLBBC",65,0)
 . I ECXCFLG,ECXCLAST'=0,ECXCLAST'=ECXCOMP S ECXSTOT=1 D TOTAL S ECXSTOT=0
"RTN","ECXLBBC",66,0)
 . S ECXCLAST=ECXCOMP
"RTN","ECXLBBC",67,0)
 . S ECXCOMP(ECXCOMP,"S")=0,ECXCOMP(ECXCOMP,"X")=0
"RTN","ECXLBBC",68,0)
 . S ECXDFN=0 F  S ECXDFN=$O(^TMP("ECXLBBC",ECXJOB,ECXCOMP,ECXDFN)) Q:'ECXDFN  D  Q:ECQUIT
"RTN","ECXLBBC",69,0)
 .. S ECDATE=0 F  S ECDATE=$O(^TMP("ECXLBBC",ECXJOB,ECXCOMP,ECXDFN,ECDATE))  Q:'ECDATE  D  Q:ECQUIT
"RTN","ECXLBBC",70,0)
 ... S ECXSTRS=$G(^TMP("ECXLBBC",ECXJOB,ECXCOMP,ECXDFN,ECDATE,"S"))
"RTN","ECXLBBC",71,0)
 ... S ECXSTRX=$G(^TMP("ECXLBBC",ECXJOB,ECXCOMP,ECXDFN,ECDATE,"X"))
"RTN","ECXLBBC",72,0)
 ... I ECXSTRS'="" D
"RTN","ECXLBBC",73,0)
 .... S ECXCOMP(ECXCOMP,"S")=ECXCOMP(ECXCOMP,"S")+(+$P(ECXSTRS,"^",12))
"RTN","ECXLBBC",74,0)
 .... S ECXCOMP("TOTAL","S")=ECXCOMP("TOTAL","S")+(+$P(ECXSTRS,"^",12))
"RTN","ECXLBBC",75,0)
 ... I ECXSTRX'="" D
"RTN","ECXLBBC",76,0)
 .... S ECXCOMP(ECXCOMP,"X")=ECXCOMP(ECXCOMP,"X")+(+$P(ECXSTRX,"^",12))
"RTN","ECXLBBC",77,0)
 .... S ECXCOMP("TOTAL","X")=ECXCOMP("TOTAL","X")+(+$P(ECXSTRX,"^",12))
"RTN","ECXLBBC",78,0)
 ... D PRINT
"RTN","ECXLBBC",79,0)
 S ECXTOT=1 D TOTAL S ECXTOT=0
"RTN","ECXLBBC",80,0)
 D ^ECXKILL
"RTN","ECXLBBC",81,0)
 Q
"RTN","ECXLBBC",82,0)
 ;
"RTN","ECXLBBC",83,0)
PRINT ;
"RTN","ECXLBBC",84,0)
 I $Y+5>IOSL D  Q:ECQUIT
"RTN","ECXLBBC",85,0)
 . I $E(IOST,1,2)["C-" S DIR(0)="E" D ^DIR K DIR I 'Y S ECQUIT=1 Q
"RTN","ECXLBBC",86,0)
 . W @IOF D HED
"RTN","ECXLBBC",87,0)
 I ECXSTRS="" W !?3,"***************N*O***D*A*T*A*****************"
"RTN","ECXLBBC",88,0)
 I ECXSTRS'="" D
"RTN","ECXLBBC",89,0)
 . W !,$P(ECXSTRS,"^",5),?11,$P(ECXSTRS,"^",4),?26,$P(ECXSTRS,"^",16)
"RTN","ECXLBBC",90,0)
 . W ?37,$$FMTE^XLFDT($$HL7TFM^XLFDT($P(ECXSTRS,"^",8)),2)
"RTN","ECXLBBC",91,0)
 . W ?49,$P(ECXSTRS,"^",11),?60,$J(+$P(ECXSTRS,"^",12),2)
"RTN","ECXLBBC",92,0)
 I ECXSTRX="" W ?83,"*******N*O***D*A*T*A*********"
"RTN","ECXLBBC",93,0)
 I ECXSTRX'="" D
"RTN","ECXLBBC",94,0)
 . W ?80,$P(ECXSTRX,"^",4)
"RTN","ECXLBBC",95,0)
 . W ?92,$$FMTE^XLFDT($$HL7TFM^XLFDT($P(ECXSTRX,"^",8)),2)
"RTN","ECXLBBC",96,0)
 . W ?102,$P(ECXSTRX,"^",11),?113,$J(+$P(ECXSTRX,"^",12),2)
"RTN","ECXLBBC",97,0)
 Q
"RTN","ECXLBBC",98,0)
TOTAL ;
"RTN","ECXLBBC",99,0)
 ;I $Y+3>IOSL D  Q:ECQUIT
"RTN","ECXLBBC",100,0)
 ;. I $E(IOST,1,2)["C-" S DIR(0)="E" D ^DIR K DIR I 'Y S ECQUIT=1 Q
"RTN","ECXLBBC",101,0)
 ;. W @IOF D HED
"RTN","ECXLBBC",102,0)
 W !,ECLINE1
"RTN","ECXLBBC",103,0)
 I $G(ECXSTOT) W !,?47,$J(ECXCLAST_" TOTAL",12),?60,$J(+$G(ECXCOMP(ECXCLAST,"S")),4),?100,$J(ECXCLAST_" TOTAL",12),?113,$J(+$G(ECXCOMP(ECXCLAST,"X")),4)
"RTN","ECXLBBC",104,0)
 I $G(ECXTOT) W !,"TOTAL",?60,$J(+$G(ECXCOMP("TOTAL","S")),4),?113,$J(+$G(ECXCOMP("TOTAL","X")),4)
"RTN","ECXLBBC",105,0)
 Q
"RTN","ECXLBBC",106,0)
 ;
"RTN","ECXLBBC",107,0)
HED ;
"RTN","ECXLBBC",108,0)
 S ECPG=ECPG+1
"RTN","ECXLBBC",109,0)
 W !,"LBB Extract Comparative Report",?124,"Page",$J(ECPG,3)
"RTN","ECXLBBC",110,0)
 W !,ECSDN," - ",ECEDN,?111,"Run Date:",$J(ECRDT,12)
"RTN","ECXLBBC",111,0)
 W !!,"------------------ LOCAL BLOOD BANK SOURCE ----------------------"
"RTN","ECXLBBC",112,0)
 W ?80,"------------- LBB EXTRACT (#"_ECXARRAY("EXTRACT")_") ---------------"
"RTN","ECXLBBC",113,0)
 W !,?37,"Transf",?57,"Number",?92,"Transf",?113,"Number"
"RTN","ECXLBBC",114,0)
 W !,"Name",?14,"SSN",?25,"FDR LOC",?37,"Date",?49,"COMP",?57,"of Units",?80,"SSN",?92,"Date",?102,"COMP",?113,"of Units"
"RTN","ECXLBBC",115,0)
 W !,ECLINE
"RTN","ECXLBBC",116,0)
 Q
"RTN","ECXLBBC",117,0)
 ;
"RTN","ECXLBBC",118,0)
QUE ;
"RTN","ECXLBBC",119,0)
 ;determine output device and queue if requested
"RTN","ECXLBBC",120,0)
 N %,X,%DT
"RTN","ECXLBBC",121,0)
 S X=ECXARRAY("START") D ^%DT S ECSD=Y S X=ECXARRAY("END") D ^%DT S ECED=Y
"RTN","ECXLBBC",122,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXLBBC",123,0)
 F X="ECINST","ECED","ECSD","ECSD1","ECEDN","ECSDN" S ECXSAVE(X)=""
"RTN","ECXLBBC",124,0)
 F X="ECPACK","ECPIECE","ECRTN","ECGRP","ECNODE" S ECXSAVE(X)=""
"RTN","ECXLBBC",125,0)
 F X="ECFILE","ECHEAD","ECVER","ECINST","ECXINST","ECXCFLG" S ECXSAVE(X)=""
"RTN","ECXLBBC",126,0)
 ;S ECXSAVE("ECXDIV(")=""
"RTN","ECXLBBC",127,0)
 S ECXSAVE("ECXARRAY(")="",ECXSAVE("SCRNARR")="",TMP=$$OREF^DILF(SCRNARR),ECXSAVE(TMP)=""
"RTN","ECXLBBC",128,0)
 S ECXPGM="START^ECXLBBC",ECXDESC="LBB Extract Audit Comparative Report"
"RTN","ECXLBBC",129,0)
 W !!,"This report requires a print width of 132 characters.",!!
"RTN","ECXLBBC",130,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXLBBC",131,0)
 I ECXSAVE("POP")=1 D  S ECXPOP=1 Q
"RTN","ECXLBBC",132,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXLBBC",133,0)
 .K @SCRNARR@("DIVISION")
"RTN","ECXLBBC",134,0)
 .D AUDIT^ECXKILL
"RTN","ECXLBBC",135,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXLBBC",136,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXLBBC",137,0)
 .D START^ECXLBBC
"RTN","ECXLBBC",138,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXLBBC",139,0)
 D HOME^%ZIS S ECXPOP=1
"RTN","ECXLBBC",140,0)
 D AUDIT^ECXKILL
"RTN","ECXLBBC",141,0)
 Q
"RTN","ECXLBBC",142,0)
EXTRACT ;build extract tmp
"RTN","ECXLBBC",143,0)
 N ECXEXT,IEN,NODE0,ECXDFN,ECXTDT,ECXTTM,ECXCOMP
"RTN","ECXLBBC",144,0)
 S ECXEXT=ECXARRAY("EXTRACT")
"RTN","ECXLBBC",145,0)
 S IEN=0 F  S IEN=$O(^ECX(727.829,"AC",ECXEXT,IEN)) Q:IEN=""  D
"RTN","ECXLBBC",146,0)
 . S NODE0=$G(^ECX(727.829,IEN,0)),ECXDFN=$P(NODE0,"^",5)
"RTN","ECXLBBC",147,0)
 . S ECXTDT=$P(NODE0,"^",10)
"RTN","ECXLBBC",148,0)
 . I ($E(ECXTDT,1)+1_$E(ECXTDT,3,8))>ECED Q
"RTN","ECXLBBC",149,0)
 . I ($E(ECXTDT,1)+1_$E(ECXTDT,3,8))<ECSD Q
"RTN","ECXLBBC",150,0)
 . S ECXTTM=$P(NODE0,"^",11),ECXCOMP=$P(NODE0,"^",13)
"RTN","ECXLBBC",151,0)
 . N ECCOUNT S ECCOUNT=0
"RTN","ECXLBBC",152,0)
 . F  S ECCOUNT=ECCOUNT+1 Q:'$D(^TMP("ECXLBBC",$J,$S($G(ECXCFLG)=1:ECXCOMP,1:"ZZNOZZ"),ECXDFN,ECXTDT_"."_ECXTTM_"."_ECCOUNT,"X"))
"RTN","ECXLBBC",153,0)
 . S ^TMP("ECXLBBC",$J,$S($G(ECXCFLG)=1:ECXCOMP,1:"ZZNOZZ"),ECXDFN,ECXTDT_"."_ECXTTM_"."_ECCOUNT,"X")="^"_$P(NODE0,"^",4,99)
"RTN","ECXLBBC",154,0)
 Q
"RTN","ECXPLBB")
0^2^B26831922^B26803590
"RTN","ECXPLBB",1,0)
ECXPLBB ;DALOI/KML - DSS BLOOD BANK PRE-EXTRACT AUDIT REPORT ;11/12/14  13:29
"RTN","ECXPLBB",2,0)
 ;;3.0;DSS EXTRACTS;**78,92,105,136,143,149,153**;Dec 22, 1997;Build 2
"RTN","ECXPLBB",3,0)
 ;Per VHA Directive 97-033 this routine should not be modified.  Medical Device # BK970021
"RTN","ECXPLBB",4,0)
 ;entry point from option
"RTN","ECXPLBB",5,0)
 D SETUP^ECXLBB1 I ECFILE="" Q  ;149
"RTN","ECXPLBB",6,0)
 N ECXINST,ECXPORT,CNT ;149
"RTN","ECXPLBB",7,0)
 D DATES
"RTN","ECXPLBB",8,0)
 Q:ECED']""!(ECSD']"")  ;149 Changed logic so it stops if either start or stop date is null
"RTN","ECXPLBB",9,0)
 S ECXPORT=$$EXPORT^ECXUTL1 Q:ECXPORT=-1  I $G(ECXPORT) D  Q  ;149 Section added
"RTN","ECXPLBB",10,0)
 .W !!,"This report may take a while to generate.  Please be patient.",!
"RTN","ECXPLBB",11,0)
 .S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXPLBB",12,0)
 .K ^TMP($J,"ECXPORT")
"RTN","ECXPLBB",13,0)
 .S ^TMP($J,"ECXPORT",0)="NAME^SSN^FEEDER LOCATION^TRANSFUSION DATE^COMPONENT^NUMBER OF UNITS",CNT=1
"RTN","ECXPLBB",14,0)
 .D START
"RTN","ECXPLBB",15,0)
 .D EXPDISP^ECXUTL1
"RTN","ECXPLBB",16,0)
 .D ^ECXKILL
"RTN","ECXPLBB",17,0)
 N ECXPOP S ECXPOP=0 D QUE Q:ECXPOP
"RTN","ECXPLBB",18,0)
 ;
"RTN","ECXPLBB",19,0)
START ;  entry point from tasked job
"RTN","ECXPLBB",20,0)
 ; get LAB DATA and build temporary global ^TMP("ECXLBB",$J)
"RTN","ECXPLBB",21,0)
 N ECTRSP,ECADMT,ECTODT,ECXRPT,ECOUT,ECXSTR,ECRDT,ECLINE,ECPG,ECQUIT
"RTN","ECXPLBB",22,0)
 N ECD,ECXDFN,ECARRY,EC66,ECERR,ECTRFDT,ECTRFTM,ECX,ECINOUT,ECXJOB
"RTN","ECXPLBB",23,0)
 N ECXLOGIC
"RTN","ECXPLBB",24,0)
 S ECXJOB=$J
"RTN","ECXPLBB",25,0)
 K ^TMP("ECXLBB",ECXJOB)
"RTN","ECXPLBB",26,0)
 U IO
"RTN","ECXPLBB",27,0)
 I '$G(ECXPORT) I $E(IOST,1,2)="C-" W !,"Retrieving records... " ;149
"RTN","ECXPLBB",28,0)
 S ECXRPT=1 D AUDRPT^ECXLBB1 ;149
"RTN","ECXPLBB",29,0)
OUTPUT ; entry point called by EN tag
"RTN","ECXPLBB",30,0)
 I '$D(^TMP("ECXLBB",ECXJOB)) W:'$G(ECXPORT) !,"There were no records that met the date range criteria" Q  ;149
"RTN","ECXPLBB",31,0)
 S (ECPG,ECDATE,ECQUIT,ECXDFN)=0,ECLINE="",$P(ECLINE,"=",80)="="
"RTN","ECXPLBB",32,0)
 S ECSDN=$$FMTE^XLFDT(ECSD,9),ECEDN=$$FMTE^XLFDT(ECED,9),ECRDT=$$FMTE^XLFDT(DT,9)
"RTN","ECXPLBB",33,0)
 I '$G(ECXPORT) W:$E(IOST,1,2)="C-" @IOF D HED ;149
"RTN","ECXPLBB",34,0)
 F  S ECXDFN=$O(^TMP("ECXLBB",ECXJOB,ECXDFN)) Q:'ECXDFN  F  S ECDATE=$O(^TMP("ECXLBB",ECXJOB,ECXDFN,ECDATE))  Q:'ECDATE  Q:ECQUIT  S ECXSTR=^(ECDATE) D PRINT ;143 Put correct code back into routine
"RTN","ECXPLBB",35,0)
 I '$G(ECXPORT) D ^ECXKILL ;149
"RTN","ECXPLBB",36,0)
 Q
"RTN","ECXPLBB",37,0)
 ;
"RTN","ECXPLBB",38,0)
PRINT ;
"RTN","ECXPLBB",39,0)
 I $G(ECXPORT) S ^TMP($J,"ECXPORT",CNT)=$P(ECXSTR,U,5)_U_$P(ECXSTR,U,4)_U_$P(ECXSTR,U,16)_U_$$FMTE^XLFDT($$HL7TFM^XLFDT($P(ECXSTR,U,8)),2)_U_$P(ECXSTR,U,11)_U_+$P(ECXSTR,U,12),CNT=CNT+1 Q  ;149
"RTN","ECXPLBB",40,0)
 I $Y+5>IOSL D  Q:ECQUIT
"RTN","ECXPLBB",41,0)
 . I $E(IOST,1,2)["C-" S DIR(0)="E" D ^DIR K DIR I 'Y S ECQUIT=1 Q
"RTN","ECXPLBB",42,0)
 . W @IOF D HED
"RTN","ECXPLBB",43,0)
 W !,$P(ECXSTR,"^",5),?11,$P(ECXSTR,"^",4),?26,$P(ECXSTR,"^",16)
"RTN","ECXPLBB",44,0)
 W ?37,$$FMTE^XLFDT($$HL7TFM^XLFDT($P(ECXSTR,"^",8)),2)
"RTN","ECXPLBB",45,0)
 W ?49,$P(ECXSTR,"^",11),?60,$J(+$P(ECXSTR,"^",12),2)
"RTN","ECXPLBB",46,0)
 Q
"RTN","ECXPLBB",47,0)
 ;
"RTN","ECXPLBB",48,0)
HED ;
"RTN","ECXPLBB",49,0)
 S ECPG=ECPG+1
"RTN","ECXPLBB",50,0)
 W !,"LBB Pre-Extract Audit Report",?72,"Page",$J(ECPG,3) ;136
"RTN","ECXPLBB",51,0)
 W !,ECSDN," - ",ECEDN,?58,"Run Date:",$J(ECRDT,12)
"RTN","ECXPLBB",52,0)
 W !,?37,"Transf",?57,"Number"
"RTN","ECXPLBB",53,0)
 W !,"Name",?14,"SSN",?25,"FDR LOC",?37,"Date",?49,"COMP"
"RTN","ECXPLBB",54,0)
 W ?57,"of Units"
"RTN","ECXPLBB",55,0)
 W !,ECLINE
"RTN","ECXPLBB",56,0)
 Q
"RTN","ECXPLBB",57,0)
DATES ;
"RTN","ECXPLBB",58,0)
 N OUT,CHKFLG
"RTN","ECXPLBB",59,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXPLBB",60,0)
 I '$D(ECHEAD) S ECHEAD=" "
"RTN","ECXPLBB",61,0)
 W @IOF,!,"LBB Pre-Extract Audit Report Information for DSS",!! ;136
"RTN","ECXPLBB",62,0)
 ;Added descriptive text DSS FY13 Logic
"RTN","ECXPLBB",63,0)
 W !,"**NOTE: This audit can only be run prior to the LBB Extract being generated." ;136
"RTN","ECXPLBB",64,0)
 W !,"If you have already generated your LBB Extract, refer to the Processing "
"RTN","ECXPLBB",65,0)
 W !,"Guide Chapter 4 section on Regenerating.**",!
"RTN","ECXPLBB",66,0)
 S:'$D(ECINST) ECINST=+$P(^ECX(728,1,0),U)
"RTN","ECXPLBB",67,0)
 S ECXINST=ECINST
"RTN","ECXPLBB",68,0)
 K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPLBB",69,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPLBB",70,0)
 S ECLDT=$S($D(^ECX(728,1,ECNODE)):$P(^(ECNODE),U,ECPIECE),1:2610624)
"RTN","ECXPLBB",71,0)
 S:ECLDT="" ECLDT=2610624
"RTN","ECXPLBB",72,0)
 S ECOUT=0 F  S (ECED,ECSD)="" D  Q:ECOUT
"RTN","ECXPLBB",73,0)
 . K %DT S %DT="AEX",%DT("A")="Starting with Date: " D ^%DT
"RTN","ECXPLBB",74,0)
 . I Y<0 S ECOUT=1 Q
"RTN","ECXPLBB",75,0)
 . S ECSD=Y
"RTN","ECXPLBB",76,0)
 . K %DT S %DT="AEX",%DT("A")="Ending with Date: " D ^%DT
"RTN","ECXPLBB",77,0)
 . I Y<0 S ECOUT=1 Q
"RTN","ECXPLBB",78,0)
 . I Y<ECSD W !!,"The ending date cannot be earlier than the starting date.",!,"Please try again.",!! Q
"RTN","ECXPLBB",79,0)
 . I $E(Y,1,5)'=$E(ECSD,1,5) W !!,"Beginning and ending dates must be in the same month and year.",!,"Please try again.",!! Q
"RTN","ECXPLBB",80,0)
 . S ECED=Y
"RTN","ECXPLBB",81,0)
 . I ECLDT'<ECSD W !!,"The Blood Bank information has already been extracted through ",$$FMTE^XLFDT(ECLDT),".",!,"Please enter a new date range.",!! Q
"RTN","ECXPLBB",82,0)
 . S ECOUT=1
"RTN","ECXPLBB",83,0)
 Q
"RTN","ECXPLBB",84,0)
 ;
"RTN","ECXPLBB",85,0)
QUE ;
"RTN","ECXPLBB",86,0)
 K ZTSAVE
"RTN","ECXPLBB",87,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXPLBB",88,0)
 K ZTSAVE
"RTN","ECXPLBB",89,0)
 F X="ECINST","ECED","ECSD","ECSD1","ECEDN","ECSDN" S ZTSAVE(X)=""
"RTN","ECXPLBB",90,0)
 F X="ECPACK","ECPIECE","ECRTN","ECGRP","ECNODE" S ZTSAVE(X)=""
"RTN","ECXPLBB",91,0)
 F X="ECFILE","ECHEAD","ECVER","ECINST","ECXINST" S ZTSAVE(X)=""
"RTN","ECXPLBB",92,0)
 F X="ECXLOGIC","ECXDATES" S ZTSAVE(X)=""
"RTN","ECXPLBB",93,0)
 S ZTDESC=ECPACK_" EXTRACT AUDIT REPORT: "_ECSDN_" TO "_ECEDN,ZTRTN="START^ECXPLBB",ZTIO="" ;149,153
"RTN","ECXPLBB",94,0)
 S IOP="Q" W ! S %ZIS="QMP" D ^%ZIS S:POP ECXPOP=1 Q:POP  I $D(IO("Q")) K IO("Q"),ZTIO D ^%ZTLOAD W:$D(ZTSK) !,$C(7),"REQUEST QUEUED",!,"Task #: ",$G(ZTSK) K I,ZTSK,ZTIO,ZTSAVE,ZTRTN D HOME^%ZIS S ECXPOP=1
"RTN","ECXPLBB",95,0)
 Q
"RTN","ECXPLBB",96,0)
 ;
"RTN","ECXPLBB",97,0)
EN(ECXJOB,ECSD,ECED) ; entry point used primarily for testing
"RTN","ECXPLBB",98,0)
 ; input:
"RTN","ECXPLBB",99,0)
 ;        ECXJOB = $J that is assigned to the 2nd subscript of 
"RTN","ECXPLBB",100,0)
 ;                 the temporary global array containing the 
"RTN","ECXPLBB",101,0)
 ;                 extracted data that feeds the pre-extract
"RTN","ECXPLBB",102,0)
 ;                 audit report
"RTN","ECXPLBB",103,0)
 ;        ECSD   = starting date range representing the FM
"RTN","ECXPLBB",104,0)
 ;                 date used to retrieve data from file #63
"RTN","ECXPLBB",105,0)
 ;        ECED   = ending date range representing the FM date
"RTN","ECXPLBB",106,0)
 ;                 used to retrieve data from file #63
"RTN","ECXPLBB",107,0)
 ; syntax  of the call: D EN^ECXPLBB(541571372,3000101,3000131)
"RTN","ECXPLBB",108,0)
 D OUTPUT
"RTN","ECXPLBB",109,0)
 Q
"RTN","ECXPLBB",110,0)
 ;
"RTN","ECXPLBB",111,0)
 ;ECXPLBB
"RTN","ECXRAD")
0^3^B45034346^B42805966
"RTN","ECXRAD",1,0)
ECXRAD ;ALB/JAP,BIR/PDW,PTD-Extract for Radiology ;11/19/14  17:57
"RTN","ECXRAD",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,16,24,33,39,46,71,84,92,105,120,127,136,144,149,153**;Dec 22, 1997;Build 2
"RTN","ECXRAD",3,0)
BEG ;entry point from option
"RTN","ECXRAD",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXRAD",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXRAD",6,0)
 Q
"RTN","ECXRAD",7,0)
 ;
"RTN","ECXRAD",8,0)
START ;start rad extract
"RTN","ECXRAD",9,0)
 N ECDT,ECED1,ECINED,ECINSD,ECXDA,QFLG ;149
"RTN","ECXRAD",10,0)
 S QFLG=0
"RTN","ECXRAD",11,0)
 K ECXDD D FIELD^DID(70.03,14,,"SPECIFIER","ECXDD") S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXRAD",12,0)
 S ECDT=ECSD-.1,ECED1=ECED+.3
"RTN","ECXRAD",13,0)
 S ECINED=9999999-ECDT,ECINSD=9999999-ECED1 ;149
"RTN","ECXRAD",14,0)
 F  S ECINSD=$O(^RARPT("AA",ECINSD)) Q:ECINSD>ECINED!(ECINSD="")  D  Q:QFLG  ;149
"RTN","ECXRAD",15,0)
 .S ECXDA="" F  S ECXDA=$O(^RARPT("AA",ECINSD,ECXDA)) Q:ECXDA=""  D GETCASE Q:QFLG  ;149
"RTN","ECXRAD",16,0)
 Q
"RTN","ECXRAD",17,0)
 ;
"RTN","ECXRAD",18,0)
GETCASE ;Find all cases associated with the verified report and store in extract
"RTN","ECXRAD",19,0)
 ;149 Section added in this patch
"RTN","ECXRAD",20,0)
 N CASE,ECXDFN,DATE,ECXMDA,ECXMDT,OCIEN,ECCN,TAB ;153
"RTN","ECXRAD",21,0)
 S CASE=$P($G(^RARPT(ECXDA,0)),U) Q:CASE=""
"RTN","ECXRAD",22,0)
 S TAB=$S($L(CASE,"-")=3:"ADC1",1:"ADC") ;153 Set xref table to use based on use of site accession numbering
"RTN","ECXRAD",23,0)
 S ECXDFN=$P($G(^RARPT(ECXDA,0)),U,2) Q:ECXDFN=""
"RTN","ECXRAD",24,0)
 I $D(^RADPT(TAB,CASE,ECXDFN)) D  ;153
"RTN","ECXRAD",25,0)
 .S ECXMDA=$O(^RADPT(TAB,CASE,ECXDFN,0)) Q:'+ECXMDA  ;153
"RTN","ECXRAD",26,0)
 .S ECCN=$O(^RADPT(TAB,CASE,ECXDFN,ECXMDA,0)) Q:'+ECCN  ;153
"RTN","ECXRAD",27,0)
 .S ECXMDT=$P($G(^RADPT(ECXDFN,"DT",ECXMDA,0)),U) ;Exam date/time
"RTN","ECXRAD",28,0)
 .D GET
"RTN","ECXRAD",29,0)
 S OCIEN=0 F  S OCIEN=$O(^RARPT(ECXDA,1,OCIEN)) Q:'+OCIEN  D
"RTN","ECXRAD",30,0)
 .S CASE=$P($G(^RARPT(ECXDA,1,OCIEN,0)),U) Q:'+CASE
"RTN","ECXRAD",31,0)
 .S TAB=$S($L(CASE,"-")=3:"ADC1",1:"ADC") ;153 Set xref table to use based on use of site accession numbering
"RTN","ECXRAD",32,0)
 .I $D(^RADPT(TAB,CASE,ECXDFN)) D  ;153
"RTN","ECXRAD",33,0)
 ..S ECXMDA=$O(^RADPT(TAB,CASE,ECXDFN,0)) Q:'+ECXMDA  ;153
"RTN","ECXRAD",34,0)
 ..S ECCN=$O(^RADPT(TAB,CASE,ECXDFN,ECXMDA,0)) Q:'+ECCN  ;153
"RTN","ECXRAD",35,0)
 ..S ECXMDT=$P($G(^RADPT(ECXDFN,"DT",ECXMDA,0)),U) ;Exam date/time
"RTN","ECXRAD",36,0)
 ..D GET
"RTN","ECXRAD",37,0)
 Q
"RTN","ECXRAD",38,0)
 ;
"RTN","ECXRAD",39,0)
GET ;get data
"RTN","ECXRAD",40,0)
 ;149 All code in GET has been modified so that it's no longer at block structure level as that's no longer needed
"RTN","ECXRAD",41,0)
 N ECXIEN,X,SUB,TYPE,ECDOCPC,ECXIS,ECXISPC,ECXPRCL,ECXCSC,ECXUSRTN,ECXCM,ECSTAT ;136
"RTN","ECXRAD",42,0)
 N ECXESC,ECXECL,ECXCLST,VISIT,ECXVIST,ECXERR ;144
"RTN","ECXRAD",43,0)
 S ECTM=$$ECXTIME^ECXUTL(ECXMDT) S:ECTM>235959 ECTM=235959
"RTN","ECXRAD",44,0)
 S ECXDAY=$$ECXDATE^ECXUTL(ECXMDT,ECXYM)
"RTN","ECXRAD",45,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXMDT,"."),"1;3",.ECXPAT)
"RTN","ECXRAD",46,0)
 Q:'OK
"RTN","ECXRAD",47,0)
 S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXRAD",48,0)
 S ECXCLST=ECXPAT("CL STAT") ;144
"RTN","ECXRAD",49,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXRAD",50,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXRAD",51,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXMDT,"."),ECPROF)
"RTN","ECXRAD",52,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXRAD",53,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXRAD",54,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXMDT),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXRAD",55,0)
 S ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXRAD",56,0)
 ;
"RTN","ECXRAD",57,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXRAD",58,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXRAD",59,0)
 S ECXDIV=$P(^RADPT(ECXDFN,"DT",ECXMDA,0),U,3),ECLOC=$P(^(0),U,4),ECTY=$P(^(0),U,2)
"RTN","ECXRAD",60,0)
 ;
"RTN","ECXRAD",61,0)
 ;- Ordering stop code (based on imaging location)
"RTN","ECXRAD",62,0)
 S ECXORDST=$$GET1^DIQ(40.7,$$GET1^DIQ(79.1,$G(ECLOC),22,"I"),1)
"RTN","ECXRAD",63,0)
 ;
"RTN","ECXRAD",64,0)
 ;- Get ordering date using Imaging Order ptr to #75.1 in subfile 70.03
"RTN","ECXRAD",65,0)
 S ECXIEN=+$P($G(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,0)),U,11) ;149 Changed 1 to ECCN so that imaging location comes from actual exam, not only first exam
"RTN","ECXRAD",66,0)
 S ECXORDDT=$$ECXDATE^ECXUTL($P($G(^RAO(75.1,ECXIEN,0)),U,16),ECXYM)
"RTN","ECXRAD",67,0)
 ;
"RTN","ECXRAD",68,0)
 ;******* - PATCH 127, ADD PATCAT CODE ********
"RTN","ECXRAD",69,0)
 S ECXPATCAT=$$PATCAT^ECXUTL(ECXDFN)
"RTN","ECXRAD",70,0)
 ;- If no encounter number don't file record
"RTN","ECXRAD",71,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXMDT,ECXTS,ECXOBS,ECHEAD,ECTY,) Q:ECXENC=""
"RTN","ECXRAD",72,0)
 ;procedures and modifiers for specific exam (case numbers)
"RTN","ECXRAD",73,0)
 ;ward/clinic,service,provider,diagnostic code
"RTN","ECXRAD",74,0)
 S ECCA=^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,0)
"RTN","ECXRAD",75,0)
 S (ECXESC,ECXECL)="" ;144
"RTN","ECXRAD",76,0)
 S VISIT=$P(ECCA,U,27) ;144
"RTN","ECXRAD",77,0)
 I VISIT D VISIT^ECXSCX1(ECXDFN,VISIT,.ECXVIST,.ECXERR) I 'ECXERR S ECXESC=$G(ECXVIST("ENCSC")),ECXECL=$G(ECXVIST("ENCCL")) ;144
"RTN","ECXRAD",78,0)
 S ECXCM=$P(ECCA,U,26) S ECXCM=$S("^0^1^2^3^"[("^"_ECXCM_"^"):ECXCM,1:"") ;136 - Get Credit Method and validate that it's a number between 0 and 3 otherwise set it to null
"RTN","ECXRAD",79,0)
 I ECXCM=2 Q  ;149 No longer collect records with credit method set to 2
"RTN","ECXRAD",80,0)
 S ECXW=$P(ECCA,U,6),ECXW=$P($G(^DIC(42,+ECXW,44)),U)
"RTN","ECXRAD",81,0)
 S:ECXW="" ECXW=$P(ECCA,U,8)
"RTN","ECXRAD",82,0)
 S ECDOCNPI=$$NPI^XUSNPI("Individual_ID",$P(ECCA,U,14),ECDT)
"RTN","ECXRAD",83,0)
 S:+ECDOCNPI'>0 ECDOCNPI="" S ECDOCNPI=$P(ECDOCNPI,U)
"RTN","ECXRAD",84,0)
 S (ECXDSSD,ECXDSSP)=""
"RTN","ECXRAD",85,0)
 S ECS=$P(ECCA,U,7),ECDOC=ECPROF_$P(ECCA,U,14),ECDI=$P(ECCA,U,13),ECDOCPC=$$PRVCLASS^ECXUTL($P(ECCA,U,14),ECDT)
"RTN","ECXRAD",86,0)
 S ECPRO=$P(ECCA,U,2),ECSTAT=$P($G(^RA(72,+$P(ECCA,U,3),0)),U,3)
"RTN","ECXRAD",87,0)
 ;get the primary interpreting staff and the person class DBIA #65
"RTN","ECXRAD",88,0)
 S ECXIS=$P(ECCA,U,15),ECXISPC=$$PRVCLASS^ECXUTL(ECXIS,ECDT)
"RTN","ECXRAD",89,0)
 S ECISNPI=$$NPI^XUSNPI("Individual_ID",ECXIS,ECDT)
"RTN","ECXRAD",90,0)
 S:+ECISNPI'>0 ECISNPI="" S ECISNPI=$P(ECISNPI,U)
"RTN","ECXRAD",91,0)
 ;prefix interpreting radiologist with a "2" if not null
"RTN","ECXRAD",92,0)
 S ECXIS=$S(ECXIS:"2"_ECXIS,1:"")
"RTN","ECXRAD",93,0)
 ;get the principal clinic ien DBIA #65
"RTN","ECXRAD",94,0)
 S ECXPRCL=$P(ECCA,U,8)
"RTN","ECXRAD",95,0)
 ;get the clinic stop code from file #44
"RTN","ECXRAD",96,0)
 S ECXCSC=$$GET1^DIQ(40.7,$$GET1^DIQ(44,ECXPRCL,8,"I"),1)
"RTN","ECXRAD",97,0)
 Q:'ECPRO 
"RTN","ECXRAD",98,0)
 Q:+ECSTAT=0
"RTN","ECXRAD",99,0)
 ;get CPT code & modifiers
"RTN","ECXRAD",100,0)
 S ECPT=+$P($G(^RAMIS(71,+ECPRO,0)),U,9),ECXCMOD=""
"RTN","ECXRAD",101,0)
 ;quit if this is a 'parent' procedure
"RTN","ECXRAD",102,0)
 S TYPE=$P($G(^RAMIS(71,+ECPRO,0)),U,6)
"RTN","ECXRAD",103,0)
 Q:((ECPT=0)&(TYPE="P"))
"RTN","ECXRAD",104,0)
 ;if site is using radiology with cpt modifiers then get them
"RTN","ECXRAD",105,0)
 K ARR,ERR D FIELD^DID(70.03,135,,"LABEL","ARR","ERR")
"RTN","ECXRAD",106,0)
 I $D(ARR("LABEL")) D
"RTN","ECXRAD",107,0)
 .K ARR,ERR D FIELD^DID(70.03,135,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXRAD",108,0)
 .Q:$D(ERR("DIERR"))
"RTN","ECXRAD",109,0)
 .S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";") S ECMOD=0
"RTN","ECXRAD",110,0)
 .Q:'$D(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB))
"RTN","ECXRAD",111,0)
 .F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB,ECMOD)) Q:ECMOD'>0  S ECXCMOD=ECXCMOD_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",112,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXRAD",113,0)
 ;get procedure radiology modifiers
"RTN","ECXRAD",114,0)
 S ECMOD=0,ECMODS=""
"RTN","ECXRAD",115,0)
 F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,"M",ECMOD)) Q:ECMOD'>0  S ECMODS=ECMODS_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",116,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXRAD",117,0)
 D FILE
"RTN","ECXRAD",118,0)
 Q
"RTN","ECXRAD",119,0)
 ;
"RTN","ECXRAD",120,0)
FILE ;file record
"RTN","ECXRAD",121,0)
 ;node0
"RTN","ECXRAD",122,0)
 ;rad div^dfn^ssn^name^in/out (ECXA)^day^cpt code^procedure^img loc^ward^
"RTN","ECXRAD",123,0)
 ;ser^diag code^req physician^modifiers^mov #^treat spec^time^
"RTN","ECXRAD",124,0)
 ;imaging type^primary care team^primary care provider
"RTN","ECXRAD",125,0)
 ;node1
"RTN","ECXRAD",126,0)
 ;mpi^dss dept^placeholder^placeholder^pc prov person class^
"RTN","ECXRAD",127,0)
 ;assoc pc provider^assoc pc prov person class^placeholder^dom^
"RTN","ECXRAD",128,0)
 ;observ pat ind^encounter num^ord stop code^ord date^division^
"RTN","ECXRAD",129,0)
 ;dss product ECXDSSP^requesting provider person class ECDOCPC^interp-
"RTN","ECXRAD",130,0)
 ;reting radiologist ECXIS^interpreting radiologist pc ECXISPC^princi-
"RTN","ECXRAD",131,0)
 ;pal clinic ECXPRCL^clinc stop code ECXCSC^emergency response indicator
"RTN","ECXRAD",132,0)
 ;(FEMA) ECXERI^assoc pc provider npi^interpreting rad npi^pc provider npi^req physician npi^Patient Category (PATCAT) ECXPATCAT^Credit Method ECXCM
"RTN","ECXRAD",133,0)
 ;NODE2
"RTN","ECXRAD",134,0)
 ;Encounter SC ECXESC^Camp Lejeune Status ECXCLST^Encounter Camp Lejeune ECXECL
"RTN","ECXRAD",135,0)
 ;
"RTN","ECXRAD",136,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXRAD",137,0)
 N ECXDATA,ECXTSC
"RTN","ECXRAD",138,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXRAD",139,0)
 S ECXTSC=$G(ECXDATA(7))
"RTN","ECXRAD",140,0)
 ;done
"RTN","ECXRAD",141,0)
 N DA,DIK
"RTN","ECXRAD",142,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXRAD",143,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXRAD",144,0)
 S ECODE=ECODE_ECXDAY_U_ECXCPT_U_ECPRO_U_ECLOC_U_ECXW_U_ECS_U_ECDI_U
"RTN","ECXRAD",145,0)
 S ECODE=ECODE_ECDOC_U_ECMODS_U_ECXMN_U_ECXTSC_U_ECTM_U_ECTY_U_ECPTTM_U
"RTN","ECXRAD",146,0)
 S ECODE=ECODE_ECPTPR_U
"RTN","ECXRAD",147,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_ECCLAS_U_ECASPR_U
"RTN","ECXRAD",148,0)
 S ECODE1=ECODE1_ECCLAS2_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDST_U
"RTN","ECXRAD",149,0)
 S ECODE1=ECODE1_ECXORDDT_U_ECXPDIV_U
"RTN","ECXRAD",150,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_ECXDSSP_U_ECDOCPC
"RTN","ECXRAD",151,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXIS_U_ECXISPC_U_ECXPRCL_U_ECXCSC
"RTN","ECXRAD",152,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI
"RTN","ECXRAD",153,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECASNPI_U_ECISNPI_U_ECPTNPI_U_ECDOCNPI
"RTN","ECXRAD",154,0)
 I ECXLOGIC>2010 S ECODE1=ECODE1_U_ECXPATCAT ;127 PATCAT
"RTN","ECXRAD",155,0)
 I ECXLOGIC>2012 S ECODE1=ECODE1_U_ECXCM_U ;136 Credit Method 144 End of node needs an ^
"RTN","ECXRAD",156,0)
 I ECXLOGIC>2013 S ECODE2=ECXESC_U_ECXCLST_U_ECXECL ;144
"RTN","ECXRAD",157,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1 ;144
"RTN","ECXRAD",158,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXRAD",159,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXRAD",160,0)
 Q
"RTN","ECXRAD",161,0)
 ;
"RTN","ECXRAD",162,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXRAD",163,0)
 S ECHEAD="RAD"
"RTN","ECXRAD",164,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXRAD",165,0)
 Q
"VER")
8.0^22.0
"BLD",9484,6)
^137
**END**
**END**

