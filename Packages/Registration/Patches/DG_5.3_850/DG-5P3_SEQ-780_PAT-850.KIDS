Released DG*5.3*850 SEQ #780
Extracted from mail message
**KIDS**:DG*5.3*850^

**INSTALL NAME**
DG*5.3*850
"BLD",8723,0)
DG*5.3*850^REGISTRATION^0^3140718^y
"BLD",8723,1,0)
^9.61A^1^1^3121025^^^
"BLD",8723,1,1,0)
This is the ADT ICD-10 Remediation patch.
"BLD",8723,4,0)
^9.64PA^80^5
"BLD",8723,4,2,0)
2
"BLD",8723,4,2,2,0)
^9.641^2.409^3
"BLD",8723,4,2,2,2.396,0)
CD STATUS DIAGNOSES  (sub-file)
"BLD",8723,4,2,2,2.396,1,0)
^9.6411^.01^1
"BLD",8723,4,2,2,2.396,1,.01,0)
CD STATUS DIAGNOSES
"BLD",8723,4,2,2,2.397,0)
CD STATUS PROCEDURES  (sub-file)
"BLD",8723,4,2,2,2.397,1,0)
^9.6411^1^2
"BLD",8723,4,2,2,2.397,1,.01,0)
CD STATUS PROCEDURES
"BLD",8723,4,2,2,2.397,1,1,0)
AFFECTED EXTREMITY
"BLD",8723,4,2,2,2.409,0)
CD REASON  (sub-file)
"BLD",8723,4,2,2,2.409,1,0)
^9.6411^1^1
"BLD",8723,4,2,2,2.409,1,1,0)
AFFECTED EXTREMITY
"BLD",8723,4,2,222)
y^n^p^^^^n^^n
"BLD",8723,4,2,224)

"BLD",8723,4,27.17,0)
27.17
"BLD",8723,4,27.17,2,0)
^9.641^27.174^2
"BLD",8723,4,27.17,2,27.17,0)
CATASTROPHIC DISABILITY REASONS  (File-top level)
"BLD",8723,4,27.17,2,27.17,1,0)
^9.6411^3^4
"BLD",8723,4,27.17,2,27.17,1,1,0)
TYPE
"BLD",8723,4,27.17,2,27.17,1,3,0)
ICD OR CPT CODE
"BLD",8723,4,27.17,2,27.17,1,9,0)
ICD VERSION
"BLD",8723,4,27.17,2,27.17,1,10,0)
LONG DESCRIPTION
"BLD",8723,4,27.17,2,27.174,0)
AFFECTED LIMB  (sub-file)
"BLD",8723,4,27.17,2,27.174,1,0)
^9.6411^.01^1
"BLD",8723,4,27.17,2,27.174,1,.01,0)
AFFECTED LIMB
"BLD",8723,4,27.17,222)
y^n^p^^^^n^^n
"BLD",8723,4,27.17,224)

"BLD",8723,4,45,0)
45
"BLD",8723,4,45,2,0)
^9.641^45.02^5
"BLD",8723,4,45,2,45,0)
PTF  (File-top level)
"BLD",8723,4,45,2,45,1,0)
^9.6411^82.14^34
"BLD",8723,4,45,2,45,1,9,0)
DRG
"BLD",8723,4,45,2,45,1,45.01,0)
PROCEDURE 1
"BLD",8723,4,45,2,45,1,45.02,0)
PROCEDURE 2
"BLD",8723,4,45,2,45,1,45.03,0)
PROCEDURE 3
"BLD",8723,4,45,2,45,1,45.04,0)
PROCEDURE 4
"BLD",8723,4,45,2,45,1,45.05,0)
PROCEDURE 5
"BLD",8723,4,45,2,45,1,79,0)
PRINCIPAL DIAGNOSIS
"BLD",8723,4,45,2,45,1,79.16,0)
SECONDARY DIAGNOSIS 1
"BLD",8723,4,45,2,45,1,79.17,0)
SECONDARY DIAGNOSIS 2
"BLD",8723,4,45,2,45,1,79.18,0)
SECONDARY DIAGNOSIS 3
"BLD",8723,4,45,2,45,1,79.19,0)
SECONDARY DIAGNOSIS 4
"BLD",8723,4,45,2,45,1,79.201,0)
SECONDARY DIAGNOSIS 5
"BLD",8723,4,45,2,45,1,79.21,0)
SECONDARY DIAGNOSIS 6
"BLD",8723,4,45,2,45,1,79.22,0)
SECONDARY DIAGNOSIS 7
"BLD",8723,4,45,2,45,1,79.23,0)
SECONDARY DIAGNOSIS 8
"BLD",8723,4,45,2,45,1,79.24,0)
SECONDARY DIAGNOSIS 9
"BLD",8723,4,45,2,45,1,79.241,0)
SECONDARY DIAGNOSIS 10
"BLD",8723,4,45,2,45,1,79.242,0)
SECONDARY DIAGNOSIS 11
"BLD",8723,4,45,2,45,1,79.243,0)
SECONDARY DIAGNOSIS 12
"BLD",8723,4,45,2,45,1,79.244,0)
SECONDARY DIAGNOSIS 13
"BLD",8723,4,45,2,45,1,82.01,0)
POA PRINCIPAL DIAGNOSIS
"BLD",8723,4,45,2,45,1,82.02,0)
POA SECONDARY DIAGNOSIS 1
"BLD",8723,4,45,2,45,1,82.03,0)
POA SECONDARY DIAGNOSIS 2
"BLD",8723,4,45,2,45,1,82.04,0)
POA SECONDARY DIAGNOSIS 3
"BLD",8723,4,45,2,45,1,82.05,0)
POA SECONDARY DIAGNOSIS 4
"BLD",8723,4,45,2,45,1,82.06,0)
POA SECONDARY DIAGNOSIS 5
"BLD",8723,4,45,2,45,1,82.07,0)
POA SECONDARY DIAGNOSIS 6
"BLD",8723,4,45,2,45,1,82.08,0)
POA SECONDARY DIAGNOSIS 7
"BLD",8723,4,45,2,45,1,82.09,0)
POA SECONDARY DIAGNOSIS 8
"BLD",8723,4,45,2,45,1,82.1,0)
POA SECONDARY DIAGNOSIS 9
"BLD",8723,4,45,2,45,1,82.11,0)
POA SECONDARY DIAGNOSIS 10
"BLD",8723,4,45,2,45,1,82.12,0)
POA SECONDARY DIAGNOSIS 11
"BLD",8723,4,45,2,45,1,82.13,0)
POA SECONDARY DIAGNOSIS 12
"BLD",8723,4,45,2,45,1,82.14,0)
POA SECONDARY DIAGNOSIS 13
"BLD",8723,4,45,2,45.01,0)
401  (sub-file)
"BLD",8723,4,45,2,45.01,1,0)
^9.6411^12^5
"BLD",8723,4,45,2,45.01,1,8,0)
OPERATION CODE 1
"BLD",8723,4,45,2,45.01,1,9,0)
OPERATION CODE 2
"BLD",8723,4,45,2,45.01,1,10,0)
OPERATION CODE 3
"BLD",8723,4,45,2,45.01,1,11,0)
OPERATION CODE 4
"BLD",8723,4,45,2,45.01,1,12,0)
OPERATION CODE 5
"BLD",8723,4,45,2,45.02,0)
501  (sub-file)
"BLD",8723,4,45,2,45.02,1,0)
^9.6411^82.1^20
"BLD",8723,4,45,2,45.02,1,5,0)
ICD 1
"BLD",8723,4,45,2,45.02,1,6,0)
ICD 2
"BLD",8723,4,45,2,45.02,1,7,0)
ICD 3
"BLD",8723,4,45,2,45.02,1,8,0)
ICD 4
"BLD",8723,4,45,2,45.02,1,9,0)
ICD 5
"BLD",8723,4,45,2,45.02,1,11,0)
ICD 6
"BLD",8723,4,45,2,45.02,1,12,0)
ICD 7
"BLD",8723,4,45,2,45.02,1,13,0)
ICD 8
"BLD",8723,4,45,2,45.02,1,14,0)
ICD 9
"BLD",8723,4,45,2,45.02,1,15,0)
ICD 10
"BLD",8723,4,45,2,45.02,1,82.01,0)
POA FOR ICD 1
"BLD",8723,4,45,2,45.02,1,82.02,0)
POA FOR ICD 2
"BLD",8723,4,45,2,45.02,1,82.03,0)
POA FOR ICD 3
"BLD",8723,4,45,2,45.02,1,82.04,0)
POA FOR ICD 4
"BLD",8723,4,45,2,45.02,1,82.05,0)
POA FOR ICD 5
"BLD",8723,4,45,2,45.02,1,82.06,0)
POA FOR ICD 6
"BLD",8723,4,45,2,45.02,1,82.07,0)
POA FOR ICD 7
"BLD",8723,4,45,2,45.02,1,82.08,0)
POA FOR ICD 8
"BLD",8723,4,45,2,45.02,1,82.09,0)
POA FOR ICD 9
"BLD",8723,4,45,2,45.02,1,82.1,0)
POA FOR ICD 10
"BLD",8723,4,45,2,45.05,0)
601  (sub-file)
"BLD",8723,4,45,2,45.05,1,0)
^9.6411^.01^6
"BLD",8723,4,45,2,45.05,1,.01,0)
PROCEDURE DATE
"BLD",8723,4,45,2,45.05,1,4,0)
PROCEDURE CODE 1
"BLD",8723,4,45,2,45.05,1,5,0)
PROCEDURE CODE 2
"BLD",8723,4,45,2,45.05,1,6,0)
PROCEDURE CODE 3
"BLD",8723,4,45,2,45.05,1,7,0)
PROCEDURE CODE 4
"BLD",8723,4,45,2,45.05,1,8,0)
PROCEDURE CODE 5
"BLD",8723,4,45,2,45.06,0)
CPT RECORD DATE/TIME  (sub-file)
"BLD",8723,4,45,2,45.06,1,0)
^9.6411^.04^1
"BLD",8723,4,45,2,45.06,1,.04,0)
PRIMARY DIAGNOSIS
"BLD",8723,4,45,222)
y^n^p^^^^n^^n
"BLD",8723,4,45,224)

"BLD",8723,4,45.89,0)
45.89
"BLD",8723,4,45.89,2,0)
^9.641^45.89^1
"BLD",8723,4,45.89,2,45.89,0)
PTF EXPANDED CODE  (File-top level)
"BLD",8723,4,45.89,2,45.89,1,0)
^9.6411^200^4
"BLD",8723,4,45.89,2,45.89,1,.01,0)
CATEGORY
"BLD",8723,4,45.89,2,45.89,1,.02,0)
DIAGNOSIS/PROCEDURE CODE
"BLD",8723,4,45.89,2,45.89,1,.05,0)
ICD VERSION
"BLD",8723,4,45.89,2,45.89,1,200,0)
NAME
"BLD",8723,4,45.89,222)
y^n^p^^^^n^^n
"BLD",8723,4,45.89,224)

"BLD",8723,4,46,0)
46
"BLD",8723,4,46,2,0)
^9.641^46^1
"BLD",8723,4,46,2,46,0)
INPATIENT CPT CODE  (File-top level)
"BLD",8723,4,46,2,46,1,0)
^9.6411^.24^8
"BLD",8723,4,46,2,46,1,.04,0)
PRIMARY DIAGNOSIS
"BLD",8723,4,46,2,46,1,.05,0)
SECONDARY DIAGNOSIS 1
"BLD",8723,4,46,2,46,1,.06,0)
SECONDARY DIAGNOSIS 2
"BLD",8723,4,46,2,46,1,.07,0)
SECONDARY DIAGNOSIS 3
"BLD",8723,4,46,2,46,1,.21,0)
SECONDARY DIAGNOSIS 4
"BLD",8723,4,46,2,46,1,.22,0)
SECONDARY DIAGNOSIS 5
"BLD",8723,4,46,2,46,1,.23,0)
SECONDARY DIAGNOSIS 6
"BLD",8723,4,46,2,46,1,.24,0)
SECONDARY DIAGNOSIS 7
"BLD",8723,4,46,222)
y^n^p^^^^n^^n
"BLD",8723,4,46,224)

"BLD",8723,4,"APDD",2,2.396)

"BLD",8723,4,"APDD",2,2.396,.01)

"BLD",8723,4,"APDD",2,2.397)

"BLD",8723,4,"APDD",2,2.397,.01)

"BLD",8723,4,"APDD",2,2.397,1)

"BLD",8723,4,"APDD",2,2.409)

"BLD",8723,4,"APDD",2,2.409,1)

"BLD",8723,4,"APDD",27.17,27.17)

"BLD",8723,4,"APDD",27.17,27.17,1)

"BLD",8723,4,"APDD",27.17,27.17,3)

"BLD",8723,4,"APDD",27.17,27.17,9)

"BLD",8723,4,"APDD",27.17,27.17,10)

"BLD",8723,4,"APDD",27.17,27.174)

"BLD",8723,4,"APDD",27.17,27.174,.01)

"BLD",8723,4,"APDD",45,45)

"BLD",8723,4,"APDD",45,45,9)

"BLD",8723,4,"APDD",45,45,45.01)

"BLD",8723,4,"APDD",45,45,45.02)

"BLD",8723,4,"APDD",45,45,45.03)

"BLD",8723,4,"APDD",45,45,45.04)

"BLD",8723,4,"APDD",45,45,45.05)

"BLD",8723,4,"APDD",45,45,79)

"BLD",8723,4,"APDD",45,45,79.16)

"BLD",8723,4,"APDD",45,45,79.17)

"BLD",8723,4,"APDD",45,45,79.18)

"BLD",8723,4,"APDD",45,45,79.19)

"BLD",8723,4,"APDD",45,45,79.201)

"BLD",8723,4,"APDD",45,45,79.21)

"BLD",8723,4,"APDD",45,45,79.22)

"BLD",8723,4,"APDD",45,45,79.23)

"BLD",8723,4,"APDD",45,45,79.24)

"BLD",8723,4,"APDD",45,45,79.241)

"BLD",8723,4,"APDD",45,45,79.242)

"BLD",8723,4,"APDD",45,45,79.243)

"BLD",8723,4,"APDD",45,45,79.244)

"BLD",8723,4,"APDD",45,45,82.01)

"BLD",8723,4,"APDD",45,45,82.02)

"BLD",8723,4,"APDD",45,45,82.03)

"BLD",8723,4,"APDD",45,45,82.04)

"BLD",8723,4,"APDD",45,45,82.05)

"BLD",8723,4,"APDD",45,45,82.06)

"BLD",8723,4,"APDD",45,45,82.07)

"BLD",8723,4,"APDD",45,45,82.08)

"BLD",8723,4,"APDD",45,45,82.09)

"BLD",8723,4,"APDD",45,45,82.1)

"BLD",8723,4,"APDD",45,45,82.11)

"BLD",8723,4,"APDD",45,45,82.12)

"BLD",8723,4,"APDD",45,45,82.13)

"BLD",8723,4,"APDD",45,45,82.14)

"BLD",8723,4,"APDD",45,45.01)

"BLD",8723,4,"APDD",45,45.01,8)

"BLD",8723,4,"APDD",45,45.01,9)

"BLD",8723,4,"APDD",45,45.01,10)

"BLD",8723,4,"APDD",45,45.01,11)

"BLD",8723,4,"APDD",45,45.01,12)

"BLD",8723,4,"APDD",45,45.02)

"BLD",8723,4,"APDD",45,45.02,5)

"BLD",8723,4,"APDD",45,45.02,6)

"BLD",8723,4,"APDD",45,45.02,7)

"BLD",8723,4,"APDD",45,45.02,8)

"BLD",8723,4,"APDD",45,45.02,9)

"BLD",8723,4,"APDD",45,45.02,11)

"BLD",8723,4,"APDD",45,45.02,12)

"BLD",8723,4,"APDD",45,45.02,13)

"BLD",8723,4,"APDD",45,45.02,14)

"BLD",8723,4,"APDD",45,45.02,15)

"BLD",8723,4,"APDD",45,45.02,82.01)

"BLD",8723,4,"APDD",45,45.02,82.02)

"BLD",8723,4,"APDD",45,45.02,82.03)

"BLD",8723,4,"APDD",45,45.02,82.04)

"BLD",8723,4,"APDD",45,45.02,82.05)

"BLD",8723,4,"APDD",45,45.02,82.06)

"BLD",8723,4,"APDD",45,45.02,82.07)

"BLD",8723,4,"APDD",45,45.02,82.08)

"BLD",8723,4,"APDD",45,45.02,82.09)

"BLD",8723,4,"APDD",45,45.02,82.1)

"BLD",8723,4,"APDD",45,45.05)

"BLD",8723,4,"APDD",45,45.05,.01)

"BLD",8723,4,"APDD",45,45.05,4)

"BLD",8723,4,"APDD",45,45.05,5)

"BLD",8723,4,"APDD",45,45.05,6)

"BLD",8723,4,"APDD",45,45.05,7)

"BLD",8723,4,"APDD",45,45.05,8)

"BLD",8723,4,"APDD",45,45.06)

"BLD",8723,4,"APDD",45,45.06,.04)

"BLD",8723,4,"APDD",45.89,45.89)

"BLD",8723,4,"APDD",45.89,45.89,.01)

"BLD",8723,4,"APDD",45.89,45.89,.02)

"BLD",8723,4,"APDD",45.89,45.89,.05)

"BLD",8723,4,"APDD",45.89,45.89,200)

"BLD",8723,4,"APDD",46,46)

"BLD",8723,4,"APDD",46,46,.04)

"BLD",8723,4,"APDD",46,46,.05)

"BLD",8723,4,"APDD",46,46,.06)

"BLD",8723,4,"APDD",46,46,.07)

"BLD",8723,4,"APDD",46,46,.21)

"BLD",8723,4,"APDD",46,46,.22)

"BLD",8723,4,"APDD",46,46,.23)

"BLD",8723,4,"APDD",46,46,.24)

"BLD",8723,4,"B",2,2)

"BLD",8723,4,"B",27.17,27.17)

"BLD",8723,4,"B",45,45)

"BLD",8723,4,"B",45.89,45.89)

"BLD",8723,4,"B",46,46)

"BLD",8723,6.3)
171
"BLD",8723,"ABPKG")
n
"BLD",8723,"INI")
EN^DG53850A
"BLD",8723,"INID")
^n^n
"BLD",8723,"INIT")
EN^DG53850B
"BLD",8723,"KRN",0)
^9.67PA^779.2^20
"BLD",8723,"KRN",.4,0)
.4
"BLD",8723,"KRN",.4,"NM",0)
^9.68A^4^4
"BLD",8723,"KRN",.4,"NM",1,0)
DGPT EXPANDED CODE LIST    FILE #45.89^45.89^0
"BLD",8723,"KRN",.4,"NM",2,0)
DGPT EXPANDED CODE LIST-10    FILE #45.89^45.89^0
"BLD",8723,"KRN",.4,"NM",3,0)
DGICD-9    FILE #45^45^0
"BLD",8723,"KRN",.4,"NM",4,0)
DGICD-10    FILE #45^45^0
"BLD",8723,"KRN",.4,"NM","B","DGICD-10    FILE #45",4)

"BLD",8723,"KRN",.4,"NM","B","DGICD-9    FILE #45",3)

"BLD",8723,"KRN",.4,"NM","B","DGPT EXPANDED CODE LIST    FILE #45.89",1)

"BLD",8723,"KRN",.4,"NM","B","DGPT EXPANDED CODE LIST-10    FILE #45.89",2)

"BLD",8723,"KRN",.401,0)
.401
"BLD",8723,"KRN",.401,"NM",0)
^9.68A^2^2
"BLD",8723,"KRN",.401,"NM",1,0)
DGPT EXPANDED CODE SORT ICD-9    FILE #45.89^45.89^0
"BLD",8723,"KRN",.401,"NM",2,0)
DGPT EXPANDED CODE SORT ICD-10    FILE #45.89^45.89^0
"BLD",8723,"KRN",.401,"NM","B","DGPT EXPANDED CODE SORT ICD-10    FILE #45.89",2)

"BLD",8723,"KRN",.401,"NM","B","DGPT EXPANDED CODE SORT ICD-9    FILE #45.89",1)

"BLD",8723,"KRN",.402,0)
.402
"BLD",8723,"KRN",.402,"NM",0)
^9.68A^3^3
"BLD",8723,"KRN",.402,"NM",1,0)
DG701    FILE #45^45^0
"BLD",8723,"KRN",.402,"NM",2,0)
DG501    FILE #45^45^0
"BLD",8723,"KRN",.402,"NM",3,0)
DG501F    FILE #45^45^0
"BLD",8723,"KRN",.402,"NM","B","DG501    FILE #45",2)

"BLD",8723,"KRN",.402,"NM","B","DG501F    FILE #45",3)

"BLD",8723,"KRN",.402,"NM","B","DG701    FILE #45",1)

"BLD",8723,"KRN",.403,0)
.403
"BLD",8723,"KRN",.403,"NM",0)
^9.68A^^
"BLD",8723,"KRN",.5,0)
.5
"BLD",8723,"KRN",.84,0)
.84
"BLD",8723,"KRN",3.6,0)
3.6
"BLD",8723,"KRN",3.8,0)
3.8
"BLD",8723,"KRN",9.2,0)
9.2
"BLD",8723,"KRN",9.8,0)
9.8
"BLD",8723,"KRN",9.8,"NM",0)
^9.68A^87^74
"BLD",8723,"KRN",9.8,"NM",1,0)
DGPTIC10^^0^B95648075
"BLD",8723,"KRN",9.8,"NM",2,0)
DGENA5^^0^B40195760
"BLD",8723,"KRN",9.8,"NM",3,0)
DGENLCD1^^0^B18153404
"BLD",8723,"KRN",9.8,"NM",4,0)
DGPTF5^^0^B6981494
"BLD",8723,"KRN",9.8,"NM",5,0)
DGPTFJC^^0^B63564376
"BLD",8723,"KRN",9.8,"NM",8,0)
DGPTF4^^0^B30195949
"BLD",8723,"KRN",9.8,"NM",9,0)
DGPTFD^^0^B19169268
"BLD",8723,"KRN",9.8,"NM",10,0)
DGPTICD^^0^B10307606
"BLD",8723,"KRN",9.8,"NM",11,0)
DGPTFM^^0^B72739353
"BLD",8723,"KRN",9.8,"NM",12,0)
DGPTFM0^^0^B10244116
"BLD",8723,"KRN",9.8,"NM",13,0)
DGPTFM3^^0^B17913974
"BLD",8723,"KRN",9.8,"NM",14,0)
DGPTFM4^^0^B31864138
"BLD",8723,"KRN",9.8,"NM",15,0)
DGPTFM5^^0^B13820382
"BLD",8723,"KRN",9.8,"NM",16,0)
DGPTFMO^^0^B32031244
"BLD",8723,"KRN",9.8,"NM",17,0)
DGPTFAPI^^0^B6968721
"BLD",8723,"KRN",9.8,"NM",18,0)
DGPTFM6^^0^B27555849
"BLD",8723,"KRN",9.8,"NM",19,0)
DGPTDRG^^0^B50130642
"BLD",8723,"KRN",9.8,"NM",20,0)
DGPTFIC^^0^B52898785
"BLD",8723,"KRN",9.8,"NM",21,0)
DGPTEXPR^^0^B41356547
"BLD",8723,"KRN",9.8,"NM",22,0)
DGPTSUDO^^0^B23608581
"BLD",8723,"KRN",9.8,"NM",23,0)
DGPTOLC2^^0^B25585897
"BLD",8723,"KRN",9.8,"NM",26,0)
DGPTFTR0^^0^B16147582
"BLD",8723,"KRN",9.8,"NM",27,0)
DGPTFTR^^0^B24216608
"BLD",8723,"KRN",9.8,"NM",29,0)
DGPTR0^^0^B26425804
"BLD",8723,"KRN",9.8,"NM",30,0)
DGPTR1^^0^B29920843
"BLD",8723,"KRN",9.8,"NM",31,0)
DGPTUTL^^0^B22849752
"BLD",8723,"KRN",9.8,"NM",32,0)
DGPTUTL1^^0^B33275346
"BLD",8723,"KRN",9.8,"NM",33,0)
DG3PR2^^0^B16122805
"BLD",8723,"KRN",9.8,"NM",34,0)
DGMSTR3^^0^B55740424
"BLD",8723,"KRN",9.8,"NM",35,0)
DGPT50DI^^0^B7758522
"BLD",8723,"KRN",9.8,"NM",36,0)
DGPT60PR^^0^B4857421
"BLD",8723,"KRN",9.8,"NM",37,0)
DGPT70DI^^0^B12136680
"BLD",8723,"KRN",9.8,"NM",38,0)
DGPT70DX^^0^B3873659
"BLD",8723,"KRN",9.8,"NM",39,0)
DGPTAE04^^0^B9147597
"BLD",8723,"KRN",9.8,"NM",41,0)
DGPTFVC1^^0^B39436670
"BLD",8723,"KRN",9.8,"NM",45,0)
VAFHLDG1^^0^B28165122
"BLD",8723,"KRN",9.8,"NM",46,0)
DGICD^^0^B13758086
"BLD",8723,"KRN",9.8,"NM",47,0)
DGICDL^^0^B31973267
"BLD",8723,"KRN",9.8,"NM",48,0)
DGICDGT^^0^B93717009
"BLD",8723,"KRN",9.8,"NM",49,0)
DGICP^^0^B26601934
"BLD",8723,"KRN",9.8,"NM",50,0)
DGICPL^^0^B30865954
"BLD",8723,"KRN",9.8,"NM",51,0)
DGPTAEE^^0^B10892054
"BLD",8723,"KRN",9.8,"NM",53,0)
DGPTRI0^^0^B26605957
"BLD",8723,"KRN",9.8,"NM",54,0)
DGPTRI1^^0^B37319384
"BLD",8723,"KRN",9.8,"NM",55,0)
DGPTRI2^^0^B26956533
"BLD",8723,"KRN",9.8,"NM",56,0)
DGPTRI3^^0^B26611263
"BLD",8723,"KRN",9.8,"NM",57,0)
DGPTRI4^^0^B32872225
"BLD",8723,"KRN",9.8,"NM",58,0)
DGPT601^^0^B17005208
"BLD",8723,"KRN",9.8,"NM",59,0)
DGPTC1^^0^B26022907
"BLD",8723,"KRN",9.8,"NM",60,0)
DGPTR2^^0^B22938579
"BLD",8723,"KRN",9.8,"NM",61,0)
DGPTR4^^0^B20498105
"BLD",8723,"KRN",9.8,"NM",62,0)
DGPTTS1^^0^B23805966
"BLD",8723,"KRN",9.8,"NM",63,0)
DGPTTS^^0^B17997399
"BLD",8723,"KRN",9.8,"NM",64,0)
DGPTFTR2^^0^B17811483
"BLD",8723,"KRN",9.8,"NM",66,0)
VAUTOMA^^0^B13075905
"BLD",8723,"KRN",9.8,"NM",67,0)
DGPTSCAN^^0^B23143464
"BLD",8723,"KRN",9.8,"NM",68,0)
DGPTFVC^^0^B4764861
"BLD",8723,"KRN",9.8,"NM",69,0)
DGPTODR^^0^B5431903
"BLD",8723,"KRN",9.8,"NM",70,0)
DGPTC2^^0^B11527513
"BLD",8723,"KRN",9.8,"NM",71,0)
DGPTFM1^^0^B18916672
"BLD",8723,"KRN",9.8,"NM",72,0)
DGPTFQWK^^0^B21436549
"BLD",8723,"KRN",9.8,"NM",73,0)
DGPTF41^^0^B10056872
"BLD",8723,"KRN",9.8,"NM",74,0)
DGPTF^^0^B23028941
"BLD",8723,"KRN",9.8,"NM",75,0)
DGPTFM8^^0^B7609505
"BLD",8723,"KRN",9.8,"NM",76,0)
DGPTAE03^^0^B10987387
"BLD",8723,"KRN",9.8,"NM",77,0)
DGPT701^^0^B13785418
"BLD",8723,"KRN",9.8,"NM",78,0)
DGPTF2^^0^B17166598
"BLD",8723,"KRN",9.8,"NM",79,0)
DGENCDA2^^0^B16663284
"BLD",8723,"KRN",9.8,"NM",82,0)
DG53850D^^0^B13639631
"BLD",8723,"KRN",9.8,"NM",83,0)
DG53850A^^0^B2731764
"BLD",8723,"KRN",9.8,"NM",84,0)
DG53850B^^0^B61379295
"BLD",8723,"KRN",9.8,"NM",85,0)
DG53850C^^0^B105178690
"BLD",8723,"KRN",9.8,"NM",86,0)
DG53850E^^0^B162973581
"BLD",8723,"KRN",9.8,"NM",87,0)
DGPTFM2^^0^B50700609
"BLD",8723,"KRN",9.8,"NM","B","DG3PR2",33)

"BLD",8723,"KRN",9.8,"NM","B","DG53850A",83)

"BLD",8723,"KRN",9.8,"NM","B","DG53850B",84)

"BLD",8723,"KRN",9.8,"NM","B","DG53850C",85)

"BLD",8723,"KRN",9.8,"NM","B","DG53850D",82)

"BLD",8723,"KRN",9.8,"NM","B","DG53850E",86)

"BLD",8723,"KRN",9.8,"NM","B","DGENA5",2)

"BLD",8723,"KRN",9.8,"NM","B","DGENCDA2",79)

"BLD",8723,"KRN",9.8,"NM","B","DGENLCD1",3)

"BLD",8723,"KRN",9.8,"NM","B","DGICD",46)

"BLD",8723,"KRN",9.8,"NM","B","DGICDGT",48)

"BLD",8723,"KRN",9.8,"NM","B","DGICDL",47)

"BLD",8723,"KRN",9.8,"NM","B","DGICP",49)

"BLD",8723,"KRN",9.8,"NM","B","DGICPL",50)

"BLD",8723,"KRN",9.8,"NM","B","DGMSTR3",34)

"BLD",8723,"KRN",9.8,"NM","B","DGPT50DI",35)

"BLD",8723,"KRN",9.8,"NM","B","DGPT601",58)

"BLD",8723,"KRN",9.8,"NM","B","DGPT60PR",36)

"BLD",8723,"KRN",9.8,"NM","B","DGPT701",77)

"BLD",8723,"KRN",9.8,"NM","B","DGPT70DI",37)

"BLD",8723,"KRN",9.8,"NM","B","DGPT70DX",38)

"BLD",8723,"KRN",9.8,"NM","B","DGPTAE03",76)

"BLD",8723,"KRN",9.8,"NM","B","DGPTAE04",39)

"BLD",8723,"KRN",9.8,"NM","B","DGPTAEE",51)

"BLD",8723,"KRN",9.8,"NM","B","DGPTC1",59)

"BLD",8723,"KRN",9.8,"NM","B","DGPTC2",70)

"BLD",8723,"KRN",9.8,"NM","B","DGPTDRG",19)

"BLD",8723,"KRN",9.8,"NM","B","DGPTEXPR",21)

"BLD",8723,"KRN",9.8,"NM","B","DGPTF",74)

"BLD",8723,"KRN",9.8,"NM","B","DGPTF2",78)

"BLD",8723,"KRN",9.8,"NM","B","DGPTF4",8)

"BLD",8723,"KRN",9.8,"NM","B","DGPTF41",73)

"BLD",8723,"KRN",9.8,"NM","B","DGPTF5",4)

"BLD",8723,"KRN",9.8,"NM","B","DGPTFAPI",17)

"BLD",8723,"KRN",9.8,"NM","B","DGPTFD",9)

"BLD",8723,"KRN",9.8,"NM","B","DGPTFIC",20)

"BLD",8723,"KRN",9.8,"NM","B","DGPTFJC",5)

"BLD",8723,"KRN",9.8,"NM","B","DGPTFM",11)

"BLD",8723,"KRN",9.8,"NM","B","DGPTFM0",12)

"BLD",8723,"KRN",9.8,"NM","B","DGPTFM1",71)

"BLD",8723,"KRN",9.8,"NM","B","DGPTFM2",87)

"BLD",8723,"KRN",9.8,"NM","B","DGPTFM3",13)

"BLD",8723,"KRN",9.8,"NM","B","DGPTFM4",14)

"BLD",8723,"KRN",9.8,"NM","B","DGPTFM5",15)

"BLD",8723,"KRN",9.8,"NM","B","DGPTFM6",18)

"BLD",8723,"KRN",9.8,"NM","B","DGPTFM8",75)

"BLD",8723,"KRN",9.8,"NM","B","DGPTFMO",16)

"BLD",8723,"KRN",9.8,"NM","B","DGPTFQWK",72)

"BLD",8723,"KRN",9.8,"NM","B","DGPTFTR",27)

"BLD",8723,"KRN",9.8,"NM","B","DGPTFTR0",26)

"BLD",8723,"KRN",9.8,"NM","B","DGPTFTR2",64)

"BLD",8723,"KRN",9.8,"NM","B","DGPTFVC",68)

"BLD",8723,"KRN",9.8,"NM","B","DGPTFVC1",41)

"BLD",8723,"KRN",9.8,"NM","B","DGPTIC10",1)

"BLD",8723,"KRN",9.8,"NM","B","DGPTICD",10)

"BLD",8723,"KRN",9.8,"NM","B","DGPTODR",69)

"BLD",8723,"KRN",9.8,"NM","B","DGPTOLC2",23)

"BLD",8723,"KRN",9.8,"NM","B","DGPTR0",29)

"BLD",8723,"KRN",9.8,"NM","B","DGPTR1",30)

"BLD",8723,"KRN",9.8,"NM","B","DGPTR2",60)

"BLD",8723,"KRN",9.8,"NM","B","DGPTR4",61)

"BLD",8723,"KRN",9.8,"NM","B","DGPTRI0",53)

"BLD",8723,"KRN",9.8,"NM","B","DGPTRI1",54)

"BLD",8723,"KRN",9.8,"NM","B","DGPTRI2",55)

"BLD",8723,"KRN",9.8,"NM","B","DGPTRI3",56)

"BLD",8723,"KRN",9.8,"NM","B","DGPTRI4",57)

"BLD",8723,"KRN",9.8,"NM","B","DGPTSCAN",67)

"BLD",8723,"KRN",9.8,"NM","B","DGPTSUDO",22)

"BLD",8723,"KRN",9.8,"NM","B","DGPTTS",63)

"BLD",8723,"KRN",9.8,"NM","B","DGPTTS1",62)

"BLD",8723,"KRN",9.8,"NM","B","DGPTUTL",31)

"BLD",8723,"KRN",9.8,"NM","B","DGPTUTL1",32)

"BLD",8723,"KRN",9.8,"NM","B","VAFHLDG1",45)

"BLD",8723,"KRN",9.8,"NM","B","VAUTOMA",66)

"BLD",8723,"KRN",19,0)
19
"BLD",8723,"KRN",19,"NM",0)
^9.68A^^
"BLD",8723,"KRN",19.1,0)
19.1
"BLD",8723,"KRN",101,0)
101
"BLD",8723,"KRN",409.61,0)
409.61
"BLD",8723,"KRN",409.61,"NM",0)
^9.68A^1^1
"BLD",8723,"KRN",409.61,"NM",1,0)
DGENCD CATASTROPHIC DISABILITY^^0
"BLD",8723,"KRN",409.61,"NM","B","DGENCD CATASTROPHIC DISABILITY",1)

"BLD",8723,"KRN",771,0)
771
"BLD",8723,"KRN",779.2,0)
779.2
"BLD",8723,"KRN",870,0)
870
"BLD",8723,"KRN",8989.51,0)
8989.51
"BLD",8723,"KRN",8989.52,0)
8989.52
"BLD",8723,"KRN",8994,0)
8994
"BLD",8723,"KRN",8994,"NM",0)
^9.68A^1^1
"BLD",8723,"KRN",8994,"NM",1,0)
DG PATIENT TREATMENT DATA^^0
"BLD",8723,"KRN",8994,"NM","B","DG PATIENT TREATMENT DATA",1)

"BLD",8723,"KRN","B",.4,.4)

"BLD",8723,"KRN","B",.401,.401)

"BLD",8723,"KRN","B",.402,.402)

"BLD",8723,"KRN","B",.403,.403)

"BLD",8723,"KRN","B",.5,.5)

"BLD",8723,"KRN","B",.84,.84)

"BLD",8723,"KRN","B",3.6,3.6)

"BLD",8723,"KRN","B",3.8,3.8)

"BLD",8723,"KRN","B",9.2,9.2)

"BLD",8723,"KRN","B",9.8,9.8)

"BLD",8723,"KRN","B",19,19)

"BLD",8723,"KRN","B",19.1,19.1)

"BLD",8723,"KRN","B",101,101)

"BLD",8723,"KRN","B",409.61,409.61)

"BLD",8723,"KRN","B",771,771)

"BLD",8723,"KRN","B",779.2,779.2)

"BLD",8723,"KRN","B",870,870)

"BLD",8723,"KRN","B",8989.51,8989.51)

"BLD",8723,"KRN","B",8989.52,8989.52)

"BLD",8723,"KRN","B",8994,8994)

"BLD",8723,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",8723,"QUES",0)
^9.62^^
"BLD",8723,"REQB",0)
^9.611^19^17
"BLD",8723,"REQB",1,0)
LEX*2.0*80^2
"BLD",8723,"REQB",3,0)
ICD*18.0*57^2
"BLD",8723,"REQB",5,0)
ICD*18.0*64^2
"BLD",8723,"REQB",6,0)
DG*5.3*862^2
"BLD",8723,"REQB",7,0)
DG*5.3*870^2
"BLD",8723,"REQB",8,0)
DG*5.3*319^2
"BLD",8723,"REQB",9,0)
DG*5.3*568^2
"BLD",8723,"REQB",10,0)
DG*5.3*570^2
"BLD",8723,"REQB",11,0)
DG*5.3*653^2
"BLD",8723,"REQB",12,0)
DG*5.3*688^2
"BLD",8723,"REQB",13,0)
DG*5.3*759^2
"BLD",8723,"REQB",14,0)
DG*5.3*785^2
"BLD",8723,"REQB",15,0)
DG*5.3*787^2
"BLD",8723,"REQB",16,0)
DG*5.3*817^2
"BLD",8723,"REQB",17,0)
DG*5.3*832^2
"BLD",8723,"REQB",18,0)
DG*5.3*861^2
"BLD",8723,"REQB",19,0)
DI*22.0*170^2
"BLD",8723,"REQB","B","DG*5.3*319",8)

"BLD",8723,"REQB","B","DG*5.3*568",9)

"BLD",8723,"REQB","B","DG*5.3*570",10)

"BLD",8723,"REQB","B","DG*5.3*653",11)

"BLD",8723,"REQB","B","DG*5.3*688",12)

"BLD",8723,"REQB","B","DG*5.3*759",13)

"BLD",8723,"REQB","B","DG*5.3*785",14)

"BLD",8723,"REQB","B","DG*5.3*787",15)

"BLD",8723,"REQB","B","DG*5.3*817",16)

"BLD",8723,"REQB","B","DG*5.3*832",17)

"BLD",8723,"REQB","B","DG*5.3*861",18)

"BLD",8723,"REQB","B","DG*5.3*862",6)

"BLD",8723,"REQB","B","DG*5.3*870",7)

"BLD",8723,"REQB","B","DI*22.0*170",19)

"BLD",8723,"REQB","B","ICD*18.0*57",3)

"BLD",8723,"REQB","B","ICD*18.0*64",5)

"BLD",8723,"REQB","B","LEX*2.0*80",1)

"FIA",2)
PATIENT
"FIA",2,0)
^DPT(
"FIA",2,0,0)
2I
"FIA",2,0,1)
y^n^p^^^^n^^n
"FIA",2,0,10)

"FIA",2,0,11)

"FIA",2,0,"RLRO")

"FIA",2,0,"VR")
5.3^DG
"FIA",2,2)
1
"FIA",2,2,.396)

"FIA",2,2,.397)

"FIA",2,2.396)
1
"FIA",2,2.396,.01)

"FIA",2,2.397)
1
"FIA",2,2.397,.01)

"FIA",2,2.397,1)

"FIA",2,2.409)
1
"FIA",2,2.409,1)

"FIA",27.17)
CATASTROPHIC DISABILITY REASONS
"FIA",27.17,0)
^DGEN(27.17,
"FIA",27.17,0,0)
27.17IO
"FIA",27.17,0,1)
y^n^p^^^^n^^n
"FIA",27.17,0,10)

"FIA",27.17,0,11)

"FIA",27.17,0,"RLRO")

"FIA",27.17,0,"VR")
5.3^DG
"FIA",27.17,27.17)
1
"FIA",27.17,27.17,1)

"FIA",27.17,27.17,3)

"FIA",27.17,27.17,4)

"FIA",27.17,27.17,9)

"FIA",27.17,27.17,10)

"FIA",27.17,27.174)
1
"FIA",27.17,27.174,.01)

"FIA",45)
PTF
"FIA",45,0)
^DGPT(
"FIA",45,0,0)
45IP
"FIA",45,0,1)
y^n^p^^^^n^^n
"FIA",45,0,10)

"FIA",45,0,11)

"FIA",45,0,"RLRO")

"FIA",45,0,"VR")
5.3^DG
"FIA",45,45)
1
"FIA",45,45,9)

"FIA",45,45,45.01)

"FIA",45,45,45.02)

"FIA",45,45,45.03)

"FIA",45,45,45.04)

"FIA",45,45,45.05)

"FIA",45,45,60)

"FIA",45,45,79)

"FIA",45,45,79.16)

"FIA",45,45,79.17)

"FIA",45,45,79.18)

"FIA",45,45,79.19)

"FIA",45,45,79.201)

"FIA",45,45,79.21)

"FIA",45,45,79.22)

"FIA",45,45,79.23)

"FIA",45,45,79.24)

"FIA",45,45,79.241)

"FIA",45,45,79.242)

"FIA",45,45,79.243)

"FIA",45,45,79.244)

"FIA",45,45,82.01)

"FIA",45,45,82.02)

"FIA",45,45,82.03)

"FIA",45,45,82.04)

"FIA",45,45,82.05)

"FIA",45,45,82.06)

"FIA",45,45,82.07)

"FIA",45,45,82.08)

"FIA",45,45,82.09)

"FIA",45,45,82.1)

"FIA",45,45,82.11)

"FIA",45,45,82.12)

"FIA",45,45,82.13)

"FIA",45,45,82.14)

"FIA",45,45.01)
1
"FIA",45,45.01,8)

"FIA",45,45.01,9)

"FIA",45,45.01,10)

"FIA",45,45.01,11)

"FIA",45,45.01,12)

"FIA",45,45.02)
1
"FIA",45,45.02,5)

"FIA",45,45.02,6)

"FIA",45,45.02,7)

"FIA",45,45.02,8)

"FIA",45,45.02,9)

"FIA",45,45.02,11)

"FIA",45,45.02,12)

"FIA",45,45.02,13)

"FIA",45,45.02,14)

"FIA",45,45.02,15)

"FIA",45,45.02,82.01)

"FIA",45,45.02,82.02)

"FIA",45,45.02,82.03)

"FIA",45,45.02,82.04)

"FIA",45,45.02,82.05)

"FIA",45,45.02,82.06)

"FIA",45,45.02,82.07)

"FIA",45,45.02,82.08)

"FIA",45,45.02,82.09)

"FIA",45,45.02,82.1)

"FIA",45,45.05)
1
"FIA",45,45.05,.01)

"FIA",45,45.05,4)

"FIA",45,45.05,5)

"FIA",45,45.05,6)

"FIA",45,45.05,7)

"FIA",45,45.05,8)

"FIA",45,45.06)
1
"FIA",45,45.06,.04)

"FIA",45.89)
PTF EXPANDED CODE
"FIA",45.89,0)
^DIC(45.89,
"FIA",45.89,0,0)
45.89IP
"FIA",45.89,0,1)
y^n^p^^^^n^^n
"FIA",45.89,0,10)

"FIA",45.89,0,11)

"FIA",45.89,0,"RLRO")

"FIA",45.89,0,"VR")
5.3^DG
"FIA",45.89,45.89)
1
"FIA",45.89,45.89,.01)

"FIA",45.89,45.89,.02)

"FIA",45.89,45.89,.05)

"FIA",45.89,45.89,200)

"FIA",46)
INPATIENT CPT CODE
"FIA",46,0)
^DGCPT(46,
"FIA",46,0,0)
46P
"FIA",46,0,1)
y^n^p^^^^n^^n
"FIA",46,0,10)

"FIA",46,0,11)

"FIA",46,0,"RLRO")

"FIA",46,0,"VR")
5.3^DG
"FIA",46,46)
1
"FIA",46,46,.04)

"FIA",46,46,.05)

"FIA",46,46,.06)

"FIA",46,46,.07)

"FIA",46,46,.21)

"FIA",46,46,.22)

"FIA",46,46,.23)

"FIA",46,46,.24)

"INI")
EN^DG53850A
"INIT")
EN^DG53850B
"IX",45,45,"ACRDDXLS",0)
45^ACRDDXLS^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDDXLS",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDDXLS",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDDXLS",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDDXLS",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDDXLS",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDDXLS",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDDXLS",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDDXLS",.1,7,0)
respectively.
"IX",45,45,"ACRDDXLS",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDDXLS",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDDXLS",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDDXLS",.1,11,0)
NAME is the name of the field where the code is stored. An example is DXLS.
"IX",45,45,"ACRDDXLS",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDDXLS",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDDXLS",1)
D SPTFDD^DGPTDDCR(.X,.DA,"DXLS")
"IX",45,45,"ACRDDXLS",2)
D KPTFDD^DGPTDDCR(.X,.DA,"DXLS")
"IX",45,45,"ACRDDXLS",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDDXLS",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDDXLS",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDDXLS",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDDXLS",11.1,4,0)
4^F^45^79^^4^F
"IX",45,45,"ACRDDXLS",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDM1",0)
45^ACRDM1^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM1",.1,0)
^^12^12^3140701
"IX",45,45,"ACRDM1",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM1",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM1",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM1",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM1",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM1",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM1",.1,7,0)
respectively.
"IX",45,45,"ACRDM1",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDM1",.1,9,0)
DATE is the movement date.
"IX",45,45,"ACRDM1",.1,10,0)
NAME is the name of the field where the code is stored. An example is M ICD1, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM1",.1,11,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM1",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDM1",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD1")
"IX",45,45,"ACRDM1",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD1")
"IX",45,45,"ACRDM1",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM1",11.1,1,0)
1^F^45.02^10
"IX",45,45,"ACRDM1",11.1,2,0)
2^F^45.02^5^^1^F
"IX",45,45,"ACRDM10",0)
45^ACRDM10^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM10",.1,0)
^^12^12^3140701
"IX",45,45,"ACRDM10",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM10",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM10",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM10",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM10",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM10",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM10",.1,7,0)
respectively.
"IX",45,45,"ACRDM10",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDM10",.1,9,0)
DATE is the movement date.
"IX",45,45,"ACRDM10",.1,10,0)
NAME is the name of the field where the code is stored. An example is M ICD10, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM10",.1,11,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM10",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDM10",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD10")
"IX",45,45,"ACRDM10",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD10")
"IX",45,45,"ACRDM10",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM10",11.1,1,0)
1^F^45.02^10
"IX",45,45,"ACRDM10",11.1,2,0)
2^F^45.02^15^^1^F
"IX",45,45,"ACRDM2",0)
45^ACRDM2^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM2",.1,0)
^^12^12^3140701
"IX",45,45,"ACRDM2",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM2",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM2",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM2",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM2",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM2",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM2",.1,7,0)
respectively.
"IX",45,45,"ACRDM2",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDM2",.1,9,0)
DATE is the movement date.
"IX",45,45,"ACRDM2",.1,10,0)
NAME is the name of the field where the code is stored. An example is M ICD2, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM2",.1,11,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM2",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDM2",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD2")
"IX",45,45,"ACRDM2",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD2")
"IX",45,45,"ACRDM2",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM2",11.1,1,0)
1^F^45.02^10
"IX",45,45,"ACRDM2",11.1,2,0)
2^F^45.02^6^^1^F
"IX",45,45,"ACRDM3",0)
45^ACRDM3^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM3",.1,0)
^^12^12^3140701
"IX",45,45,"ACRDM3",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM3",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM3",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM3",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM3",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM3",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM3",.1,7,0)
respectively.
"IX",45,45,"ACRDM3",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDM3",.1,9,0)
DATE is the movement date.
"IX",45,45,"ACRDM3",.1,10,0)
NAME is the name of the field where the code is stored. An example is M ICD3, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM3",.1,11,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM3",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDM3",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD3")
"IX",45,45,"ACRDM3",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD3")
"IX",45,45,"ACRDM3",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM3",11.1,1,0)
1^F^45.02^10
"IX",45,45,"ACRDM3",11.1,2,0)
2^F^45.02^7^^1^F
"IX",45,45,"ACRDM4",0)
45^ACRDM4^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM4",.1,0)
^^12^12^3140701
"IX",45,45,"ACRDM4",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM4",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM4",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM4",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM4",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM4",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM4",.1,7,0)
respectively.
"IX",45,45,"ACRDM4",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDM4",.1,9,0)
DATE is the movement date.
"IX",45,45,"ACRDM4",.1,10,0)
NAME is the name of the field where the code is stored. An example is M ICD4, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM4",.1,11,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM4",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDM4",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD4")
"IX",45,45,"ACRDM4",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD4")
"IX",45,45,"ACRDM4",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM4",11.1,1,0)
1^F^45.02^10
"IX",45,45,"ACRDM4",11.1,2,0)
2^F^45.02^8^^1^F
"IX",45,45,"ACRDM5",0)
45^ACRDM5^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM5",.1,0)
^^12^12^3140701
"IX",45,45,"ACRDM5",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM5",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM5",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM5",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM5",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM5",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM5",.1,7,0)
respectively.
"IX",45,45,"ACRDM5",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDM5",.1,9,0)
DATE is the movement date.
"IX",45,45,"ACRDM5",.1,10,0)
NAME is the name of the field where the code is stored. An example is M ICD5, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM5",.1,11,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM5",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDM5",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD5")
"IX",45,45,"ACRDM5",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD5")
"IX",45,45,"ACRDM5",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM5",11.1,1,0)
1^F^45.02^10
"IX",45,45,"ACRDM5",11.1,2,0)
2^F^45.02^9^^1^F
"IX",45,45,"ACRDM6",0)
45^ACRDM6^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM6",.1,0)
^^12^12^3140701
"IX",45,45,"ACRDM6",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM6",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM6",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM6",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM6",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM6",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM6",.1,7,0)
respectively.
"IX",45,45,"ACRDM6",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDM6",.1,9,0)
DATE is the movement date.
"IX",45,45,"ACRDM6",.1,10,0)
NAME is the name of the field where the code is stored. An example is M ICD6, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM6",.1,11,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM6",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDM6",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD6")
"IX",45,45,"ACRDM6",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD6")
"IX",45,45,"ACRDM6",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM6",11.1,1,0)
1^F^45.02^10
"IX",45,45,"ACRDM6",11.1,2,0)
2^F^45.02^11^^1^F
"IX",45,45,"ACRDM7",0)
45^ACRDM7^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM7",.1,0)
^^12^12^3140701
"IX",45,45,"ACRDM7",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM7",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM7",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM7",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM7",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM7",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM7",.1,7,0)
respectively.
"IX",45,45,"ACRDM7",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDM7",.1,9,0)
DATE is the movement date.
"IX",45,45,"ACRDM7",.1,10,0)
NAME is the name of the field where the code is stored. An example is M ICD7, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM7",.1,11,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM7",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDM7",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD7")
"IX",45,45,"ACRDM7",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD7")
"IX",45,45,"ACRDM7",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM7",11.1,1,0)
1^F^45.02^10
"IX",45,45,"ACRDM7",11.1,2,0)
2^F^45.02^12^^1^F
"IX",45,45,"ACRDM8",0)
45^ACRDM8^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM8",.1,0)
^^12^12^3140701
"IX",45,45,"ACRDM8",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM8",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM8",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM8",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM8",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM8",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM8",.1,7,0)
respectively.
"IX",45,45,"ACRDM8",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDM8",.1,9,0)
DATE is the movement date.
"IX",45,45,"ACRDM8",.1,10,0)
NAME is the name of the field where the code is stored. An example is M ICD8, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM8",.1,11,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM8",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDM8",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD8")
"IX",45,45,"ACRDM8",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD8")
"IX",45,45,"ACRDM8",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM8",11.1,1,0)
1^F^45.02^10
"IX",45,45,"ACRDM8",11.1,2,0)
2^F^45.02^13^^1^F
"IX",45,45,"ACRDM9",0)
45^ACRDM9^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^W^45.02^^^^^A
"IX",45,45,"ACRDM9",.1,0)
^^12^12^3140701
"IX",45,45,"ACRDM9",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDM9",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDM9",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDM9",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDM9",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDM9",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDM9",.1,7,0)
respectively.
"IX",45,45,"ACRDM9",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDM9",.1,9,0)
DATE is the movement date.
"IX",45,45,"ACRDM9",.1,10,0)
NAME is the name of the field where the code is stored. An example is M ICD9, where M signifies it is a movement diagnosis.
"IX",45,45,"ACRDM9",.1,11,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDM9",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDM9",1)
D SPTFMD^DGPTDDCR(.X,.DA,"M ICD9")
"IX",45,45,"ACRDM9",2)
D KPTFMD^DGPTDDCR(.X,.DA,"M ICD9")
"IX",45,45,"ACRDM9",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRDM9",11.1,1,0)
1^F^45.02^10
"IX",45,45,"ACRDM9",11.1,2,0)
2^F^45.02^14^^1^F
"IX",45,45,"ACRDSD1",0)
45^ACRDSD1^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD1",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD1",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD1",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD1",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD1",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD1",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD1",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD1",.1,7,0)
respectively.
"IX",45,45,"ACRDSD1",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD1",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD1",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD1",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD1, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD1",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD1",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD1",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD1")
"IX",45,45,"ACRDSD1",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD1")
"IX",45,45,"ACRDSD1",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD1",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD1",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD1",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD1",11.1,4,0)
4^F^45^79.16^^4^F
"IX",45,45,"ACRDSD1",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD10",0)
45^ACRDSD10^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD10",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD10",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD10",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD10",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD10",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD10",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD10",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD10",.1,7,0)
respectively.
"IX",45,45,"ACRDSD10",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD10",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD10",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD10",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD10, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD10",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD10",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD10",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD10")
"IX",45,45,"ACRDSD10",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD10")
"IX",45,45,"ACRDSD10",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD10",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD10",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD10",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD10",11.1,4,0)
4^F^45^79.241^^4^F
"IX",45,45,"ACRDSD10",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD11",0)
45^ACRDSD11^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD11",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD11",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD11",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD11",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD11",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD11",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD11",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD11",.1,7,0)
respectively.
"IX",45,45,"ACRDSD11",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD11",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD11",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD11",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD11, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD11",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD11",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD11",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD11")
"IX",45,45,"ACRDSD11",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD11")
"IX",45,45,"ACRDSD11",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD11",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD11",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD11",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD11",11.1,4,0)
4^F^45^79.242^^4^F
"IX",45,45,"ACRDSD11",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD12",0)
45^ACRDSD12^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD12",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD12",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD12",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD12",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD12",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD12",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD12",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD12",.1,7,0)
respectively.
"IX",45,45,"ACRDSD12",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD12",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD12",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD12",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD12, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD12",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD12",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD12",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD12")
"IX",45,45,"ACRDSD12",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD12")
"IX",45,45,"ACRDSD12",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD12",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD12",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD12",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD12",11.1,4,0)
4^F^45^79.243^^4^F
"IX",45,45,"ACRDSD12",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD13",0)
45^ACRDSD13^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD13",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD13",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD13",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD13",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD13",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD13",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD13",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD13",.1,7,0)
respectively.
"IX",45,45,"ACRDSD13",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD13",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD13",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD13",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD13, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD13",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD13",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD13",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD13")
"IX",45,45,"ACRDSD13",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD13")
"IX",45,45,"ACRDSD13",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD13",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD13",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD13",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD13",11.1,4,0)
4^F^45^79.244^^4^F
"IX",45,45,"ACRDSD13",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD2",0)
45^ACRDSD2^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD2",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD2",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD2",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD2",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD2",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD2",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD2",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD2",.1,7,0)
respectively.
"IX",45,45,"ACRDSD2",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD2",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD2",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD2",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD2, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD2",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD2",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD2",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD2")
"IX",45,45,"ACRDSD2",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD2")
"IX",45,45,"ACRDSD2",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD2",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD2",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD2",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD2",11.1,4,0)
4^F^45^79.17^^4^F
"IX",45,45,"ACRDSD2",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD3",0)
45^ACRDSD3^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD3",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD3",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD3",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD3",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD3",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD3",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD3",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD3",.1,7,0)
respectively.
"IX",45,45,"ACRDSD3",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD3",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD3",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD3",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD3, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD3",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD3",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD3",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD3")
"IX",45,45,"ACRDSD3",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD3")
"IX",45,45,"ACRDSD3",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD3",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD3",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD3",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD3",11.1,4,0)
4^F^45^79.18^^4^F
"IX",45,45,"ACRDSD3",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD4",0)
45^ACRDSD4^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD4",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD4",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD4",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD4",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD4",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD4",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD4",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD4",.1,7,0)
respectively.
"IX",45,45,"ACRDSD4",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD4",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD4",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD4",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD4, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD4",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD4",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD4",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD4")
"IX",45,45,"ACRDSD4",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD4")
"IX",45,45,"ACRDSD4",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD4",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD4",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD4",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD4",11.1,4,0)
4^F^45^79.19^^4^F
"IX",45,45,"ACRDSD4",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD5",0)
45^ACRDSD5^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD5",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD5",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD5",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD5",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD5",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD5",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD5",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD5",.1,7,0)
respectively.
"IX",45,45,"ACRDSD5",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD5",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD5",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD5",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD5, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD5",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD5",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD5",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD5")
"IX",45,45,"ACRDSD5",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD5")
"IX",45,45,"ACRDSD5",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD5",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD5",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD5",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD5",11.1,4,0)
4^F^45^79.201^^4^F
"IX",45,45,"ACRDSD5",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD6",0)
45^ACRDSD6^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD6",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD6",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD6",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD6",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD6",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD6",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD6",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD6",.1,7,0)
respectively.
"IX",45,45,"ACRDSD6",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD6",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD6",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD6",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD6, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD6",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD6",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD6",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD6")
"IX",45,45,"ACRDSD6",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD6")
"IX",45,45,"ACRDSD6",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD6",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD6",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD6",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD6",11.1,4,0)
4^F^45^79.21^^4^F
"IX",45,45,"ACRDSD6",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD7",0)
45^ACRDSD7^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD7",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD7",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD7",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD7",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD7",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD7",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD7",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD7",.1,7,0)
respectively.
"IX",45,45,"ACRDSD7",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD7",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD7",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD7",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD7, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD7",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD7",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD7",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD7")
"IX",45,45,"ACRDSD7",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD7")
"IX",45,45,"ACRDSD7",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD7",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD7",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD7",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD7",11.1,4,0)
4^F^45^79.22^^4^F
"IX",45,45,"ACRDSD7",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD8",0)
45^ACRDSD8^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD8",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD8",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD8",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD8",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD8",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD8",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD8",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD8",.1,7,0)
respectively.
"IX",45,45,"ACRDSD8",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD8",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD8",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD8",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD8, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD8",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD8",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD8",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD8")
"IX",45,45,"ACRDSD8",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD8")
"IX",45,45,"ACRDSD8",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD8",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD8",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD8",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD8",11.1,4,0)
4^F^45^79.23^^4^F
"IX",45,45,"ACRDSD8",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRDSD9",0)
45^ACRDSD9^Clinical Reminders Index for ICD diagnosis code lookup.^MU^^R^IR^I^45^^^^^A
"IX",45,45,"ACRDSD9",.1,0)
^^13^13^3140701
"IX",45,45,"ACRDSD9",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRDSD9",.1,2,0)
all patients with a particular ICD diagnosis code and one for finding all
"IX",45,45,"ACRDSD9",.1,3,0)
the ICD diagnosis codes a patient has.
"IX",45,45,"ACRDSD9",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRDSD9",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NAME,DFN,DATE,DAS) and
"IX",45,45,"ACRDSD9",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NAME,CODE,DATE,DAS)
"IX",45,45,"ACRDSD9",.1,7,0)
respectively.
"IX",45,45,"ACRDSD9",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRDSD9",.1,9,0)
DATE is the discharge date. If it does not
"IX",45,45,"ACRDSD9",.1,10,0)
exist then the admission date is used.
"IX",45,45,"ACRDSD9",.1,11,0)
NAME is the name of the field where the code is stored. An example is D SD9, where D SD signifies it is a discharge secondary diagnosis.
"IX",45,45,"ACRDSD9",.1,12,0)
If the TYPE OF RECORD is CENSUS then the entry is not indexed.
"IX",45,45,"ACRDSD9",.1,13,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRDSD9",1)
D SPTFDD^DGPTDDCR(.X,.DA,"D SD9")
"IX",45,45,"ACRDSD9",2)
D KPTFDD^DGPTDDCR(.X,.DA,"D SD9")
"IX",45,45,"ACRDSD9",11.1,0)
^.114IA^5^5
"IX",45,45,"ACRDSD9",11.1,1,0)
1^F^45^.01^^1^F
"IX",45,45,"ACRDSD9",11.1,2,0)
2^F^45^2^^2^F
"IX",45,45,"ACRDSD9",11.1,3,0)
3^F^45^11^^3^F
"IX",45,45,"ACRDSD9",11.1,4,0)
4^F^45^79.24^^4^F
"IX",45,45,"ACRDSD9",11.1,5,0)
5^F^45^70
"IX",45,45,"ACRPP1",0)
45^ACRPP1^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP1",.1,0)
^^12^12^3140701
"IX",45,45,"ACRPP1",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP1",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP1",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP1",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP1",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP1",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP1",.1,7,0)
respectively.
"IX",45,45,"ACRPP1",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRPP1",.1,9,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP1",.1,10,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP1",.1,11,0)
P1 means it was found on the P node and it was Procedure Code 1.
"IX",45,45,"ACRPP1",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRPP1",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",1)
"IX",45,45,"ACRPP1",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",1)
"IX",45,45,"ACRPP1",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP1",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP1",11.1,2,0)
2^F^45.05^4^^2^F
"IX",45,45,"ACRPP2",0)
45^ACRPP2^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP2",.1,0)
^^12^12^3140701
"IX",45,45,"ACRPP2",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP2",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP2",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP2",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP2",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP2",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP2",.1,7,0)
respectively.
"IX",45,45,"ACRPP2",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRPP2",.1,9,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP2",.1,10,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP2",.1,11,0)
P2 means it was found on the P node and it was Procedure Code 2.
"IX",45,45,"ACRPP2",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRPP2",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",2)
"IX",45,45,"ACRPP2",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",2)
"IX",45,45,"ACRPP2",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP2",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP2",11.1,2,0)
2^F^45.05^5^^2^F
"IX",45,45,"ACRPP3",0)
45^ACRPP3^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP3",.1,0)
^^12^12^3140701
"IX",45,45,"ACRPP3",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP3",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP3",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP3",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP3",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP3",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP3",.1,7,0)
respectively.
"IX",45,45,"ACRPP3",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRPP3",.1,9,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP3",.1,10,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP3",.1,11,0)
P3 means it was found on the P node and it was Procedure Code 3.
"IX",45,45,"ACRPP3",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRPP3",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",3)
"IX",45,45,"ACRPP3",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",3)
"IX",45,45,"ACRPP3",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP3",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP3",11.1,2,0)
2^F^45.05^6^^2^F
"IX",45,45,"ACRPP4",0)
45^ACRPP4^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP4",.1,0)
^^12^12^3140701
"IX",45,45,"ACRPP4",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP4",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP4",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP4",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP4",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP4",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP4",.1,7,0)
respectively.
"IX",45,45,"ACRPP4",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRPP4",.1,9,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP4",.1,10,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP4",.1,11,0)
P4 means it was found on the P node and it was Procedure Code 4.
"IX",45,45,"ACRPP4",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRPP4",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",4)
"IX",45,45,"ACRPP4",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",4)
"IX",45,45,"ACRPP4",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP4",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP4",11.1,2,0)
2^F^45.05^7^^2^F
"IX",45,45,"ACRPP5",0)
45^ACRPP5^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.05^^^^^A
"IX",45,45,"ACRPP5",.1,0)
^^12^12^3140701
"IX",45,45,"ACRPP5",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPP5",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPP5",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPP5",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPP5",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPP5",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPP5",.1,7,0)
respectively.
"IX",45,45,"ACRPP5",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRPP5",.1,9,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPP5",.1,10,0)
NODE is P (for procedure) followed by procedure code number. For example,
"IX",45,45,"ACRPP5",.1,11,0)
P5 means it was found on the P node and it was Procedure Code 5.
"IX",45,45,"ACRPP5",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRPP5",1)
D SPTFP^DGPTDDCR(.X,.DA,"P",5)
"IX",45,45,"ACRPP5",2)
D KPTFP^DGPTDDCR(.X,.DA,"P",5)
"IX",45,45,"ACRPP5",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPP5",11.1,1,0)
1^F^45.05^.01^^1^F
"IX",45,45,"ACRPP5",11.1,2,0)
2^F^45.05^8^^2^F
"IX",45,45,"ACRPS1",0)
45^ACRPS1^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS1",.1,0)
^^12^12^3140701
"IX",45,45,"ACRPS1",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS1",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS1",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS1",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS1",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS1",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS1",.1,7,0)
respectively.
"IX",45,45,"ACRPS1",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRPS1",.1,9,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS1",.1,10,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS1",.1,11,0)
S1 means it was found on the S node and it was Operation Code 1.
"IX",45,45,"ACRPS1",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRPS1",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",1)
"IX",45,45,"ACRPS1",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",1)
"IX",45,45,"ACRPS1",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS1",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS1",11.1,2,0)
2^F^45.01^8^^2^F
"IX",45,45,"ACRPS2",0)
45^ACRPS2^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS2",.1,0)
^^12^12^3140701
"IX",45,45,"ACRPS2",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS2",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS2",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS2",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS2",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS2",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS2",.1,7,0)
respectively.
"IX",45,45,"ACRPS2",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRPS2",.1,9,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS2",.1,10,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS2",.1,11,0)
S2 means it was found on the S node and it was Operation Code 2.
"IX",45,45,"ACRPS2",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRPS2",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",2)
"IX",45,45,"ACRPS2",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",2)
"IX",45,45,"ACRPS2",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS2",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS2",11.1,2,0)
2^F^45.01^9^^2^F
"IX",45,45,"ACRPS3",0)
45^ACRPS3^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS3",.1,0)
^^12^12^3140701
"IX",45,45,"ACRPS3",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS3",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS3",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS3",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS3",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS3",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS3",.1,7,0)
respectively.
"IX",45,45,"ACRPS3",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRPS3",.1,9,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS3",.1,10,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS3",.1,11,0)
S3 means it was found on the S node and it was Operation Code 3.
"IX",45,45,"ACRPS3",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRPS3",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",3)
"IX",45,45,"ACRPS3",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",3)
"IX",45,45,"ACRPS3",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS3",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS3",11.1,2,0)
2^F^45.01^10^^2^F
"IX",45,45,"ACRPS4",0)
45^ACRPS4^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS4",.1,0)
^^12^12^3140701
"IX",45,45,"ACRPS4",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS4",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS4",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS4",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS4",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS4",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS4",.1,7,0)
respectively.
"IX",45,45,"ACRPS4",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRPS4",.1,9,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS4",.1,10,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS4",.1,11,0)
S4 means it was found on the S node and it was Operation Code 4.
"IX",45,45,"ACRPS4",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRPS4",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",4)
"IX",45,45,"ACRPS4",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",4)
"IX",45,45,"ACRPS4",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS4",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS4",11.1,2,0)
2^F^45.01^11^^2^F
"IX",45,45,"ACRPS5",0)
45^ACRPS5^Clinical Reminders Index for ICD procedure code lookup.^MU^^R^IR^W^45.01^^^^^A
"IX",45,45,"ACRPS5",.1,0)
^^12^12^3140701
"IX",45,45,"ACRPS5",.1,1,0)
This cross-reference builds two indexes, one for finding
"IX",45,45,"ACRPS5",.1,2,0)
all patients with a particular ICD procedure code and one for finding all
"IX",45,45,"ACRPS5",.1,3,0)
the ICD procedure codes a patient has.
"IX",45,45,"ACRPS5",.1,4,0)
The indexes are stored in the Clinical Reminders Index global as:
"IX",45,45,"ACRPS5",.1,5,0)
 ^PXRMINDX(45,CODESYS,"INP",CODE,NODE,DFN,DATE,DAS) and
"IX",45,45,"ACRPS5",.1,6,0)
 ^PXRMINDX(45,CODESYS,"PNI",DFN,NODE,CODE,DATE,DAS)
"IX",45,45,"ACRPS5",.1,7,0)
respectively.
"IX",45,45,"ACRPS5",.1,8,0)
CODESYS is the standard three-character abbreviation for the coding system.
"IX",45,45,"ACRPS5",.1,9,0)
DATE is the surgery/procedure date.
"IX",45,45,"ACRPS5",.1,10,0)
NODE is S (for surgery) followed by operation code number. For example,
"IX",45,45,"ACRPS5",.1,11,0)
S5 means it was found on the S node and it was Operation Code 5.
"IX",45,45,"ACRPS5",.1,12,0)
For complete details, see the Clinical Reminders Index Technical Guide/Programmer's Manual.
"IX",45,45,"ACRPS5",1)
D SPTFP^DGPTDDCR(.X,.DA,"S",5)
"IX",45,45,"ACRPS5",2)
D KPTFP^DGPTDDCR(.X,.DA,"S",5)
"IX",45,45,"ACRPS5",11.1,0)
^.114IA^2^2
"IX",45,45,"ACRPS5",11.1,1,0)
1^F^45.01^.01^^1^F
"IX",45,45,"ACRPS5",11.1,2,0)
2^F^45.01^12^^2^F
"KRN",.4,222,-1)
0^1
"KRN",.4,222,0)
DGPT EXPANDED CODE LIST^3120817.1244^^45.89^^^3130516
"KRN",.4,222,"F",2)
.02;C1;L10;"ICD-9 CODE"~200;C12;L61~.01;C75;L30~.03;C110;L20~
"KRN",.4,222,"H")
PTF EXPANDED CODE LIST
"KRN",.4,1600,-1)
0^2
"KRN",.4,1600,0)
DGPT EXPANDED CODE LIST-10^3120817.1232^^45.89^^^3130517
"KRN",.4,1600,"F",2)
.02;C1;L10;"ICD-10 CODE"~200;C12;L61~.01;C75;L30~.03;C110;L20~
"KRN",.4,1600,"H")
PTF EXPANDED CODE LIST
"KRN",.4,1606,-1)
0^3
"KRN",.4,1606,0)
DGICD-9^3120620.1638^^45^^^3140414
"KRN",.4,1606,"DXS",1,9)
S I(0,0)=$G(D0),DIP(1)=$S($D(^DGPT(D0,0)):^(0),1:""),D0=$P(DIP(1),U,1) S:'D0!'$D(^DPT(+D0,0)) D0=-1 S DIP(101)=$S($D(^DPT(D0,0)):^(0),1:"") S X=$P(DIP(101),U,9) S D0=I(0,0)
"KRN",.4,1606,"F",1)
.01;L20~X DXS(1,9) W X K DIP;"SSN";Z;"PATIENT:SSN"~
"KRN",.4,1606,"F",2)
S DIP(1)=$S($D(^DGPT(D0,0)):^(0),1:"") S X=$P(DIP(1),U,2),X=$P(X,".",1) S Y=X D DT K DIP;"ADMISSION DATE";L11;d;Z;"DATE(ADMISSION DATE)"~
"KRN",.4,1606,"F",3)
S DIP(1)=$S($D(^DGPT(D0,70)):^(70),1:"") S X=$P(DIP(1),U,1),X=$P(X,".",1) S Y=X D DT K DIP;"DISCHARGE DATE";L11;d;Z;"DATE(DISCHARGE DATE)"~2.2;L10~
"KRN",.4,1606,"F",4)
0;"PTF #";L7~S DGZT=$S(^UTILITY($J,"DG",0)="D":"ICD",1:"Op Co.")_" ";X;Z;"S DGZT=$S(^UTILITY($J,"DG",0)="D":"ICD",1:"Op Co.")_" ""~
"KRN",.4,1606,"F",5)
D OUT^DGPTFIC;"FOUND______DATE___ICD-9_CODE";L30;Z;"D OUT^DGPTFIC"~I 'DG5 S DJ=$S($D(DJ):DJ,1:0)+1,DTOT=1;X;Z;"I 'DG5 S DJ=$S($D(DJ):DJ,1:0)+1,DTOT=1"~
"KRN",.4,1606,"F",6)
K %D,DGZT,%I;X;Z;"K %D,DGZT,%I"~
"KRN",.4,1606,"H")
PTF LIST
"KRN",.4,1607,-1)
0^4
"KRN",.4,1607,0)
DGICD-10^3120622.0942^^45^^^3121220
"KRN",.4,1607,"DXS",1,9)
S I(0,0)=$G(D0),DIP(1)=$S($D(^DGPT(D0,0)):^(0),1:""),D0=$P(DIP(1),U,1) S:'D0!'$D(^DPT(+D0,0)) D0=-1 S DIP(101)=$S($D(^DPT(D0,0)):^(0),1:"") S X=$P(DIP(101),U,9) S D0=I(0,0)
"KRN",.4,1607,"F",1)
.01;L20~X DXS(1,9) W X K DIP;"SSN";Z;"PATIENT:SSN"~
"KRN",.4,1607,"F",2)
S DIP(1)=$S($D(^DGPT(D0,0)):^(0),1:"") S X=$P(DIP(1),U,2),X=$P(X,".",1) S Y=X D DT K DIP;"ADMISSION DATE";L11;d;Z;"DATE(ADMISSION DATE)"~
"KRN",.4,1607,"F",3)
S DIP(1)=$S($D(^DGPT(D0,70)):^(70),1:"") S X=$P(DIP(1),U,1),X=$P(X,".",1) S Y=X D DT K DIP;"DISCHARGE DATE";L11;d;Z;"DATE(DISCHARGE DATE)"~2.2;L10~
"KRN",.4,1607,"F",4)
0;"PTF #";L7~S DGZT=$S(^UTILITY($J,"DG",0)="D":"ICD",1:"Op Co.")_" ";X;Z;"S DGZT=$S(^UTILITY($J,"DG",0)="D":"ICD",1:"Op Co.")_" ""~
"KRN",.4,1607,"F",5)
D OUT^DGPTFIC;"FOUND______DATE___ICD-10_CODE";L30;Z;"D OUT^DGPTFIC"~
"KRN",.4,1607,"F",6)
I 'DG5 S DJ=$S($D(DJ):DJ,1:0)+1,DTOT=1;X;Z;"I 'DG5 S DJ=$S($D(DJ):DJ,1:0)+1,DTOT=1"~K %D,DGZT,%I;X;Z;"K %D,DGZT,%I"~
"KRN",.4,1607,"H")
PTF LIST
"KRN",.401,992,-1)
0^1
"KRN",.401,992,0)
DGPT EXPANDED CODE SORT ICD-9^3120111.1402^^45.89^^^3130516
"KRN",.401,992,2,0)
^.4014^3^3
"KRN",.401,992,2,1,0)
45.89^^ICD VERSION^@".05^^^^^^4
"KRN",.401,992,2,1,"CM")
S Y(1)=$S($D(^DIC(45.89,D0,0)):^(0),1:"") S X=$P($G(^ICDS(+$P(Y(1),U,5),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,992,2,1,"F")
ICD-9 PROBz^ICD-9 PROC
"KRN",.401,992,2,1,"GET")
S Y(1)=$S($D(^DIC(45.89,D0,0)):^(0),1:"") S X=$P($G(^ICDS(+$P(Y(1),U,5),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,992,2,1,"QCON")
I (DISX(1)]]"ICD-9 PROBz")&(DISX(1)']]"ICD-9-CM")
"KRN",.401,992,2,1,"T")
ICD-9-CM^ICD-9-CM
"KRN",.401,992,2,1,"TXT")
ICD VERSION from ICD-9 PROC to ICD-9-CM
"KRN",.401,992,2,2,0)
45.89^^CATEGORY^@".01^^^^^^4
"KRN",.401,992,2,2,"ASK")
1
"KRN",.401,992,2,2,"CM")
S Y(1)=$S($D(^DIC(45.89,D0,0)):^(0),1:"") S X=$P($G(^DIC(45.88,+$P(Y(1),U,1),0)),U) I D0>0 S DISX(2)=X
"KRN",.401,992,2,2,"GET")
S Y(1)=$S($D(^DIC(45.89,D0,0)):^(0),1:"") S X=$P($G(^DIC(45.88,+$P(Y(1),U,1),0)),U) I D0>0 S DISX(2)=X
"KRN",.401,992,2,2,"IX")
^DIC(45.89,"B",^DIC(45.89,^2
"KRN",.401,992,2,2,"PTRIX")
^DIC(45.88,"B",
"KRN",.401,992,2,2,"QCON")
I DISX(2)'=""
"KRN",.401,992,2,2,"SER")
0.0000^0.0000
"KRN",.401,992,2,2,"TXT")
CATEGORY not null
"KRN",.401,992,2,3,0)
45.89^^DIAGNOSIS/PROCEDURE CODE^".02^^^^^^4
"KRN",.401,992,2,3,"ASK")
1
"KRN",.401,992,2,3,"CM")
N DIERR S Y(1)=$S($D(^DIC(45.89,D0,0)):^(0),1:"") S X=$$EXTERNAL^DIDU(45.89,.02,"",$P(Y(1),U,2)) I D0>0 S DISX(3)=X
"KRN",.401,992,2,3,"GET")
N DIERR S Y(1)=$S($D(^DIC(45.89,D0,0)):^(0),1:"") S X=$$EXTERNAL^DIDU(45.89,.02,"",$P(Y(1),U,2)) I D0>0 S DISX(3)=X
"KRN",.401,992,2,3,"QCON")
I DISX(3)'=""
"KRN",.401,992,2,3,"TXT")
DIAGNOSIS/PROCEDURE CODE not null
"KRN",.401,992,2,"B",45.89,1)

"KRN",.401,992,2,"B",45.89,2)

"KRN",.401,992,2,"B",45.89,3)

"KRN",.401,993,-1)
0^2
"KRN",.401,993,0)
DGPT EXPANDED CODE SORT ICD-10^3120111.1405^^45.89^^^3130517
"KRN",.401,993,2,0)
^.4014^3^3
"KRN",.401,993,2,1,0)
45.89^^ICD VERSION^@".05^^^^^^4
"KRN",.401,993,2,1,"CM")
S Y(1)=$S($D(^DIC(45.89,D0,0)):^(0),1:"") S X=$P($G(^ICDS(+$P(Y(1),U,5),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,993,2,1,"F")
ICD-10-CLz^ICD-10-CM
"KRN",.401,993,2,1,"GET")
S Y(1)=$S($D(^DIC(45.89,D0,0)):^(0),1:"") S X=$P($G(^ICDS(+$P(Y(1),U,5),0)),U) I D0>0 S DISX(1)=X
"KRN",.401,993,2,1,"QCON")
I (DISX(1)]]"ICD-10-CLz")&(DISX(1)']]"ICD-10-PCS")
"KRN",.401,993,2,1,"T")
ICD-10-PCS^ICD-10-PCS
"KRN",.401,993,2,1,"TXT")
ICD VERSION from ICD-10-CM to ICD-10-PCS
"KRN",.401,993,2,2,0)
45.89^^CATEGORY^@".01^^^^^^4
"KRN",.401,993,2,2,"ASK")
1
"KRN",.401,993,2,2,"CM")
S Y(1)=$S($D(^DIC(45.89,D0,0)):^(0),1:"") S X=$P($G(^DIC(45.88,+$P(Y(1),U,1),0)),U) I D0>0 S DISX(2)=X
"KRN",.401,993,2,2,"GET")
S Y(1)=$S($D(^DIC(45.89,D0,0)):^(0),1:"") S X=$P($G(^DIC(45.88,+$P(Y(1),U,1),0)),U) I D0>0 S DISX(2)=X
"KRN",.401,993,2,2,"IX")
^DIC(45.89,"B",^DIC(45.89,^2
"KRN",.401,993,2,2,"PTRIX")
^DIC(45.88,"B",
"KRN",.401,993,2,2,"QCON")
I DISX(2)'=""
"KRN",.401,993,2,2,"SER")
0.0000^0.0000
"KRN",.401,993,2,2,"TXT")
CATEGORY not null
"KRN",.401,993,2,3,0)
45.89^^DIAGNOSIS/PROCEDURE CODE^".02^^^^^^4
"KRN",.401,993,2,3,"ASK")
1
"KRN",.401,993,2,3,"CM")
N DIERR S Y(1)=$S($D(^DIC(45.89,D0,0)):^(0),1:"") S X=$$EXTERNAL^DIDU(45.89,.02,"",$P(Y(1),U,2)) I D0>0 S DISX(3)=X
"KRN",.401,993,2,3,"GET")
N DIERR S Y(1)=$S($D(^DIC(45.89,D0,0)):^(0),1:"") S X=$$EXTERNAL^DIDU(45.89,.02,"",$P(Y(1),U,2)) I D0>0 S DISX(3)=X
"KRN",.401,993,2,3,"QCON")
I DISX(3)'=""
"KRN",.401,993,2,3,"TXT")
DIAGNOSIS/PROCEDURE CODE not null
"KRN",.401,993,2,"B",45.89,1)

"KRN",.401,993,2,"B",45.89,2)

"KRN",.401,993,2,"B",45.89,3)

"KRN",.402,429,-1)
0^3
"KRN",.402,429,0)
DG501F^3130130.1222^^45^^^3130328
"KRN",.402,429,"AR",45.02,1346)
1^DGX5F6
"KRN",.402,429,"AR",45.02,1347)
2^DGX5F6
"KRN",.402,429,"AR",45.02,1348)
3^DGX5F6
"KRN",.402,429,"AR",45.02,1349)
4^DGX5F6
"KRN",.402,429,"AR",45.02,1350)
5^DGX5F6
"KRN",.402,429,"AR",45.02,1351)
6^DGX5F6
"KRN",.402,429,"AR",45.02,1352)
7^DGX5F6
"KRN",.402,429,"AR",45.02,1353)
8^DGX5F6
"KRN",.402,429,"AR",45.02,1354)
9^DGX5F6
"KRN",.402,429,"AR",45.02,1355)
10^DGX5F6
"KRN",.402,429,"DIAB",1,1,45.02,1)
TREATED FOR SC CONDITION//NO;"WAS TREATMENT FOR A SERVICE CONNECTED CONDITION?"
"KRN",.402,429,"DIAB",1,1,45.02,10)
TREATED FOR AO CONDITION;"WAS TREATMENT RELATED TO AGENT ORANGE EXPOSURE?"
"KRN",.402,429,"DIAB",1,1,45.02,11)
EXPOSED TO SW ASIA CONDITIONS;"WAS TREATMENT RELATED TO SERVICE IN SW ASIA?"
"KRN",.402,429,"DIAB",1,1,45.02,12)
29;"WAS TREATMENT RELATED TO MILITARY SEXUAL TRAUMA?"
"KRN",.402,429,"DIAB",5,1,45.02,9)
POTENTIALLY RELATED TO COMBAT//YES;"WAS TREATMENT RELATED TO COMBAT?"
"KRN",.402,429,"DIAB",7,1,45.02,10)
TREATED FOR IR CONDITION;"WAS TREATMENT RELATED TO IONIZING RADIATION EXPOSURE?"
"KRN",.402,429,"DIAB",7,1,45.02,11)
32;"WAS TREATMENT RELATED TO PROJ 112/SHAD?"
"KRN",.402,429,"DIAB",7,1,45.02,12)
30;"WAS TREATMENT RELATED TO HEAD AND/OR NECK CANCER?"
"KRN",.402,429,"DR",1,45)
F X=2:1:7 S DGDUP(X)=0;K DGPTIT;I $G(DGPTF)<1 S DGPTF=D0 W !!,"Editing PTF Record "_DGPTF_" in VA FileManager.";I $G(DGMOV)<1 S DGMOV=1 W !!,"Editing Discharge Movement in VA FileManager";I $G(DFN)<1 S DFN=+$G(^DGPT(D0,0));
"KRN",.402,429,"DR",1,45,1)
D CENSUS^DGPTIC10(DA);S DGJUMP=$G(DGJUMP);S DGXX="",DGTYPE=$P(^DGPT(D0,0),U,11),DGCODSYS=$$CODESYS^DGPTIC10(D0);S DGHOLD=$S($D(^DGPT(DGPTF,"M",+DGMOV,0)):^(0),1:"");S:'$D(DGADD) DGADD=0;S DGNFLD="@10";50///^S X=+DGMOV;
"KRN",.402,429,"DR",2,45.02)
S:DGJUMP'[1 Y="@2";10;@10;S DGNFLD="@15";2;@15;S DGNFLD="@16";3;@16;S DGNFLD="@17";4;@17;S:DGJUMP'[2 Y=0;@2;I $D(^DPT(+^DGPT(DGPTF,0),.3)),$P(^(.3),U)="Y" S (DGNFLD,Y)="@25";18////^S X=2;S (DGNFLD,Y)="@27";@25;
"KRN",.402,429,"DR",2,45.02,1)
18WAS TREATMENT FOR A SERVICE CONNECTED CONDITION?~//NO;@27;S DGNFLD="@28";S Y="@9000";@28;S DGNFLD="@40";5;S DGXX=X;I DGCODSYS="ICD9"!(DGTYPE=2)!(DGXX="") S Y="@26";82.01;@26;S X=DGXX;
"KRN",.402,429,"DR",2,45.02,2)
I X K DGPTIT S DGNFLD="@40",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@40;I DGADD,$P(DGHOLD,U,6)]"" S Y="@50";S DGNFLD="@50";6;S DGXX=X;I DGCODSYS="ICD9"!(DGTYPE=2)!(DGXX="") S Y="@41";82.02;@41;S X=DGXX;
"KRN",.402,429,"DR",2,45.02,3)
I X K DGPTIT S DGNFLD="@50",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@50;I DGADD,$P(DGHOLD,U,7)]"" S Y="@60";S DGNFLD="@60";7;S DGXX=X;I DGCODSYS="ICD9"!(DGTYPE=2)!(DGXX="") S Y="@51";82.03;@51;S X=DGXX;
"KRN",.402,429,"DR",2,45.02,4)
I X K DGPTIT S DGNFLD="@60",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@60;I DGADD,$P(DGHOLD,U,8)]"" S Y="@70";S DGNFLD="@70";8;S DGXX=X;I DGCODSYS="ICD9"!(DGTYPE=2)!(DGXX="") S Y="@61";82.04;@61;S X=DGXX;
"KRN",.402,429,"DR",2,45.02,5)
I X K DGPTIT S DGNFLD="@70",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@70;I DGADD,$P(DGHOLD,U,9)]"" S Y="@80";S DGNFLD="@80";9;S DGXX=X;I DGCODSYS="ICD9"!(DGTYPE=2)!(DGXX="") S Y="@71";82.05;@71;S X=DGXX;
"KRN",.402,429,"DR",2,45.02,6)
I X K DGPTIT S DGNFLD="@80",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@80;K DGNFLD,DGDUP,DGADD,DGXX,DGCODSYS S Y="";@8000;D SCAN^DGPTSCAN S:'$D(DGBPC) Y="@8990";I '$D(DGBPC(2))!(DGDUP(2)) S Y="@8200";300.02;S:X]"" DGDUP(2)=1;@8200;
"KRN",.402,429,"DR",2,45.02,7)
I '$D(DGBPC(3))!(DGDUP(3)) S Y="@8300";300.03;S:X]"" DGDUP(3)=1;@8300;I '$D(DGBPC(4))!(DGDUP(4)) S Y="@8400";D DRUG^DGPTSC01 I $D(DGTX) S Y="@8350";300.04;S:X]"" DGDUP(4)=1;S Y="@8400";@8350;300.04//^S X=DGTX;S:X]"" DGDUP(4)=1;
"KRN",.402,429,"DR",2,45.02,8)
@8400;I '$D(DGBPC(5))!(DGDUP(5)) S Y="@8500";300.05;S:X]"" DGDUP(5)=1;@8500;I '$D(DGBPC(6))!(DGDUP(6)) S Y="@8600";300.06;S:X]"" DGDUP(6)=1;@8600;I '$D(DGBPC(7))!(DGDUP(7)) S Y="@8990";300.07;S:X]"" DGDUP(7)=1;@8990;
"KRN",.402,429,"DR",2,45.02,9)
K DGPTIT S Y=DGNFLD;@9000;K DGEXQ D CHQUES^DGPTSPQ I '$D(DGEXQ) S Y="@9999";I '$D(DGEXQ(6)) S Y="@9040";31WAS TREATMENT RELATED TO COMBAT?~//YES;S Y="@9050";@9040;31///@;@9050;I '$D(DGEXQ(1)) S Y="@9100";
"KRN",.402,429,"DR",2,45.02,10)
26WAS TREATMENT RELATED TO AGENT ORANGE EXPOSURE?~;S Y="@9150";@9100;26///@;@9150;I '$D(DGEXQ(2)) S Y="@9200";27WAS TREATMENT RELATED TO IONIZING RADIATION EXPOSURE?~;S Y="@9250";@9200;27///@;@9250;I '$D(DGEXQ(3)) S Y="@9300";
"KRN",.402,429,"DR",2,45.02,11)
28WAS TREATMENT RELATED TO SERVICE IN SW ASIA?~;S Y="@935";@9300;28///@;@9350;I '$D(DGEXQ(7)) S Y="@9400";32WAS TREATMENT RELATED TO PROJ 112/SHAD?~;S Y="@9450";@9400;32///@;@9450;I '$D(DGEXQ(4)) S Y="@9500";
"KRN",.402,429,"DR",2,45.02,12)
29WAS TREATMENT RELATED TO MILITARY SEXUAL TRAUMA?~;S Y="@9550";@9500;29///@;@9550;I '$D(DGEXQ(5)) S Y="@9600";30WAS TREATMENT RELATED TO HEAD AND/OR NECK CANCER?~;I X["Y",$D(DFN),$$FILEHNC^DGNTAPI1(DFN);S Y="@9650";@9600;30///@;
"KRN",.402,429,"DR",2,45.02,13)
@9650;@9999;K DGEXQ S Y=DGNFLD;@99999;
"KRN",.402,429,"ROU")
^DGX5F
"KRN",.402,429,"ROUOLD")
DGX5F
"KRN",.402,430,-1)
0^2
"KRN",.402,430,0)
DG501^3130130.122^^45^^^3140411
"KRN",.402,430,"AR",45.02,1346)
1^DGPTX510
"KRN",.402,430,"AR",45.02,1347)
2^DGPTX510
"KRN",.402,430,"AR",45.02,1348)
3^DGPTX510
"KRN",.402,430,"AR",45.02,1349)
4^DGPTX510
"KRN",.402,430,"AR",45.02,1350)
5^DGPTX510
"KRN",.402,430,"DIAB",1,1,45.02,1)
TREATED FOR SC CONDITION//NO;"WAS TREATMENT FOR A SERVICE CONNECTED CONDITION?"
"KRN",.402,430,"DIAB",1,1,45.02,10)
TREATED FOR AO CONDITION;"WAS TREATMENT RELATED TO AGENT ORANGE EXPOSURE?"
"KRN",.402,430,"DIAB",1,1,45.02,11)
EXPOSED TO SW ASIA CONDITIONS;"WAS TREATMENT RELATED TO SERVICE IN SW ASIA?"
"KRN",.402,430,"DIAB",1,1,45.02,12)
29;"WAS TREATMENT RELATED TO MILITARY SEXUAL TRAUMA?"
"KRN",.402,430,"DIAB",5,1,45.02,9)
POTENTIALLY RELATED TO COMBAT//YES;"WAS TREATMENT RELATED TO COMBAT?"
"KRN",.402,430,"DIAB",7,1,45.02,10)
TREATED FOR IR CONDITION;"WAS TREATMENT RELATED TO IONIZING RADIATION EXPOSURE?"
"KRN",.402,430,"DIAB",7,1,45.02,11)
32;"WAS TREATMENT RELATED TO PROJ 112/SHAD?"
"KRN",.402,430,"DIAB",7,1,45.02,12)
30;"WAS TREATMENT RELATED TO HEAD AND/OR NECK CANCER?"
"KRN",.402,430,"DR",1,45)
F X=2:1:7 S DGDUP(X)=0;K DGPTIT;I $G(DGPTF)<1 S DGPTF=D0 W !!,"Editing PTF Record "_DGPTF_" in VA FileManager.";I $G(DGMOV)<1 S DGMOV=1 W !!,"Editing Discharge Movement in VA FileManager";I $G(DFN)<1 S DFN=+$G(^DGPT(D0,0));
"KRN",.402,430,"DR",1,45,1)
D CENSUS^DGPTIC10(DA);S DGJUMP=$G(DGJUMP);S DGXX="",DGTYPE=$P(^DGPT(D0,0),U,11),DGCODSYS=$$CODESYS^DGPTIC10(D0);S DGHOLD=$S($D(^DGPT(DGPTF,"M",+DGMOV,0)):^(0),1:"");50///^S X=+DGMOV;
"KRN",.402,430,"DR",2,45.02)
S:'$D(DGADD) DGADD=0;S:DGJUMP'[1 Y="@2";S:DGADD Y="@20";S DGNFLD="@10";3;@10;S DGNFLD="@15";4;I $D(^DPT(+^DGPT(DGPTF,0),.3)),$P(^(.3),U)="Y" S Y="@15";18////^S X=2;S (DGNFLD,Y)="@20";@15;
"KRN",.402,430,"DR",2,45.02,1)
18WAS TREATMENT FOR A SERVICE CONNECTED CONDITION?~//NO;@20;S:DGJUMP'[2 Y="";@2;S DGNFLD="@25";S Y="@9000";@25;I DGADD,$P(DGHOLD,U,5)]"" S Y="@40";S DGNFLD="@40";5;S DGXX=X;I DGCODSYS="ICD9"!(DGTYPE=2)!(DGXX="") S Y="@26";82.01;
"KRN",.402,430,"DR",2,45.02,2)
@26;S X=DGXX;I X K DGPTIT S DGNFLD="@40",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@40;I DGADD,$P(DGHOLD,U,6)]"" S Y="@50";S DGNFLD="@50";6;S DGXX=X;I DGCODSYS="ICD9"!(DGTYPE=2)!(DGXX="") S Y="@41";82.02;@41;S X=DGXX;
"KRN",.402,430,"DR",2,45.02,3)
I X K DGPTIT S DGNFLD="@50",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@50;I DGADD,$P(DGHOLD,U,7)]"" S Y="@60";S DGNFLD="@60";7;S DGXX=X;I DGCODSYS="ICD9"!(DGTYPE=2)!(DGXX="") S Y="@51";82.03;@51;S X=DGXX;
"KRN",.402,430,"DR",2,45.02,4)
I X K DGPTIT S DGNFLD="@60",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@60;I DGADD,$P(DGHOLD,U,8)]"" S Y="@70";S DGNFLD="@70";8;S DGXX=X;I DGCODSYS="ICD9"!(DGTYPE=2)!(DGXX="") S Y="@61";82.04;@61;S X=DGXX;
"KRN",.402,430,"DR",2,45.02,5)
I X K DGPTIT S DGNFLD="@70",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@70;I DGADD,$P(DGHOLD,U,9)]"" S Y="@80";S DGNFLD="@80";9;S DGXX=X;I DGCODSYS="ICD9"!(DGTYPE=2)!(DGXX="") S Y="@71";82.05;@71;S X=DGXX;
"KRN",.402,430,"DR",2,45.02,6)
I X K DGPTIT S DGNFLD="@80",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@80;K DGNFLD,DGDUP,DGADD S Y="";@8000;D SCAN^DGPTSCAN S:'$D(DGBPC) Y="@8990";I '$D(DGBPC(2))!(DGDUP(2)) S Y="@8100";300.02;S:X]"" DGDUP(2)=1;@8100;
"KRN",.402,430,"DR",2,45.02,7)
I '$D(DGBPC(3))!(DGDUP(3)) S Y="@8200";300.03;S:X]"" DGDUP(3)=1;@8200;I '$D(DGBPC(4))!(DGDUP(4)) S Y="@8300";D DRUG^DGPTSC01 I $D(DGTX) S Y="@8250";300.04;S:X]"" DGDUP(4)=1;S Y="@8300";@8250;300.04//^S X=DGTX;S:X]"" DGDUP(4)=1;
"KRN",.402,430,"DR",2,45.02,8)
@8300;I '$D(DGBPC(5))!(DGDUP(5)) S Y="@8400";300.05;S:X]"" DGDUP(5)=1;@8400;I '$D(DGBPC(6))!(DGDUP(6)) S Y="@8500";300.06;S:X]"" DGDUP(6)=1;@8500;I '$D(DGBPC(7))!(DGDUP(7)) S Y="@8990";300.07;S:X]"" DGDUP(7)=1;@8990;
"KRN",.402,430,"DR",2,45.02,9)
K DGPTIT,DGTX S Y=DGNFLD;@9000;K DGEXQ D CHQUES^DGPTSPQ I '$D(DGEXQ) S Y="@9999";I '$D(DGEXQ(6)) S Y="@9040";31WAS TREATMENT RELATED TO COMBAT?~//YES;S Y="@9050";@9040;31///@;@9050;I '$D(DGEXQ(1)) S Y="@9100";
"KRN",.402,430,"DR",2,45.02,10)
26WAS TREATMENT RELATED TO AGENT ORANGE EXPOSURE?~;S Y="@9150";@9100;26///@;@9150;I '$D(DGEXQ(2)) S Y="@9200";27WAS TREATMENT RELATED TO IONIZING RADIATION EXPOSURE?~;S Y="@9250";@9200;27///@;@9250;I '$D(DGEXQ(3)) S Y="@9300";
"KRN",.402,430,"DR",2,45.02,11)
28WAS TREATMENT RELATED TO SERVICE IN SW ASIA?~;S Y="@9350";@9300;28///@;@9350;I '$D(DGEXQ(7)) S Y="@9400";32WAS TREATMENT RELATED TO PROJ 112/SHAD?~;S Y="@9450";@9400;32///@;@9450;I '$D(DGEXQ(4)) S Y="@9500";
"KRN",.402,430,"DR",2,45.02,12)
29WAS TREATMENT RELATED TO MILITARY SEXUAL TRAUMA?~;S Y="@9550";@9500;29///@;@9550;I '$D(DGEXQ(5)) S Y="@9600";30WAS TREATMENT RELATED TO HEAD AND/OR NECK CANCER?~;I X["Y",$D(DFN),$$FILEHNC^DGNTAPI1(DFN);S Y="@9650";@9600;30///@;
"KRN",.402,430,"DR",2,45.02,13)
@9650;@9999;K DGEXQ S Y=DGNFLD;
"KRN",.402,430,"ROU")
^DGPTX5
"KRN",.402,430,"ROUOLD")
DGPTX5
"KRN",.402,432,-1)
0^1
"KRN",.402,432,0)
DG701^3130130.1215^^45^^^3140414
"KRN",.402,432,"%D",0)
^^1^1^2950809^
"KRN",.402,432,"%D",1,0)
 
"KRN",.402,432,"AR",45,1331)
1^DGPTX714
"KRN",.402,432,"AR",45,1333)
2^DGPTX714
"KRN",.402,432,"AR",45,1334)
3^DGPTX714
"KRN",.402,432,"AR",45,1335)
4^DGPTX714
"KRN",.402,432,"AR",45,1336)
5^DGPTX714
"KRN",.402,432,"AR",45,1337)
6^DGPTX714
"KRN",.402,432,"AR",45,1338)
7^DGPTX714
"KRN",.402,432,"AR",45,1339)
8^DGPTX714
"KRN",.402,432,"AR",45,1340)
9^DGPTX714
"KRN",.402,432,"AR",45,1341)
1^DGPTX715
"KRN",.402,432,"AR",45,1342)
2^DGPTX715
"KRN",.402,432,"AR",45,1343)
3^DGPTX715
"KRN",.402,432,"AR",45,1344)
4^DGPTX715
"KRN",.402,432,"DR",1,45)
F X=2:1:7 S DGDUP(X)=0;K DGPTIT D FLAGCHK^DGPTSCAN;S DGNFLD="@10";S DGXX="",DGTYPE=$P(^DGPT(D0,0),U,11),DGCODSYS=$$CODESYS^DGPTIC10(D0);D CENSUS^DGPTIC10(DA);79;S DGXX=X;I DGCODSYS="ICD9"!(DGXX="")!(DGTYPE=2) S Y="@1";82.01;@1;
"KRN",.402,432,"DR",1,45,1)
S X=DGXX;I X K DGPTIT S DGNFLD="@10",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,70)),U,10)_$P($G(^DGPT(D0,70)),U,16,24)_$P($G(^DGPT(D0,71)),U,1,3)?."^" Y="@120";@10;S DGNFLD="@20";79.16;S DGXX=X;
"KRN",.402,432,"DR",1,45,2)
I DGCODSYS="ICD9"!(DGXX="")!(DGTYPE=2) S Y="@11";82.02;@11;S X=DGXX;I X K DGPTIT S DGNFLD="@20",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,70)),U,16,24)_$P($G(^DGPT(D0,71)),U,1,3)?."^" Y="@120";@20;S DGNFLD="@30";79.17;
"KRN",.402,432,"DR",1,45,3)
S DGXX=X;I DGCODSYS="ICD9"!(DGXX="")!(DGTYPE=2) S Y="@21";82.03;@21;S X=DGXX;I X K DGPTIT S DGNFLD="@30",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,70)),U,17,24)_$P($G(^DGPT(D0,71)),U,1,3)?."^" Y="@120";@30;
"KRN",.402,432,"DR",1,45,4)
S DGNFLD="@40";79.18;S DGXX=X;I DGCODSYS="ICD9"!(DGXX="")!(DGTYPE=2) S Y="@31";82.04;@31;S X=DGXX;I X K DGPTIT S DGNFLD="@40",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";
"KRN",.402,432,"DR",1,45,5)
S:$P($G(^DGPT(D0,70)),U,18,24)_$P($G(^DGPT(D0,71)),U,1,3)?."^" Y="@120";@40;S DGNFLD="@50";79.19;S DGXX=X;I DGCODSYS="ICD9"!(DGXX="")!(DGTYPE=2) S Y="@41";82.05;@41;S X=DGXX;
"KRN",.402,432,"DR",1,45,6)
I X K DGPTIT S DGNFLD="@50",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,70)),U,19,24)_$P($G(^DGPT(D0,71)),U,1,3)?."^" Y="@120";@50;S DGNFLD="@55";79.201;S DGXX=X;I DGCODSYS="ICD9"!(DGXX="")!(DGTYPE=2) S Y="@51";82.06;@51;
"KRN",.402,432,"DR",1,45,7)
S X=DGXX;I X K DGPTIT S DGNFLD="@55",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,70)),U,20,24)_$P($G(^DGPT(D0,71)),U,1,3)?."^" Y="@120";@55;S DGNFLD="@60";79.21;S DGXX=X;I DGCODSYS="ICD9"!(DGXX="")!(DGTYPE=2) S Y="@56";
"KRN",.402,432,"DR",1,45,8)
82.07;@56;S X=DGXX;I X K DGPTIT S DGNFLD="@60",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,70)),U,21,24)_$P($G(^DGPT(D0,71)),U,1,3)?."^" Y="@120";@60;S DGNFLD="@70";79.22;S DGXX=X;
"KRN",.402,432,"DR",1,45,9)
I DGCODSYS="ICD9"!(DGXX="")!(DGTYPE=2) S Y="@61";82.08;@61;S X=DGXX;I X K DGPTIT S DGNFLD="@70",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,70)),U,22,24)_$P($G(^DGPT(D0,71)),U,1,3)?."^" Y="@120";@70;S DGNFLD="@80";79.23;
"KRN",.402,432,"DR",1,45,10)
S DGXX=X;I DGCODSYS="ICD9"!(DGXX="")!(DGTYPE=2) S Y="@71";82.09;@71;S X=DGXX;I X K DGPTIT S DGNFLD="@80",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,70)),U,23,24)_$P($G(^DGPT(D0,71)),U,1,3)?."^" Y="@120";@80;
"KRN",.402,432,"DR",1,45,11)
S DGNFLD="@90";79.24;S DGXX=X;I DGCODSYS="ICD9"!(DGXX="")!(DGTYPE=2) S Y="@81";82.1;@81;S X=DGXX;I X K DGPTIT S DGNFLD="@90",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,70)),U,24)_$P($G(^DGPT(D0,71)),U,1,3)?."^" Y="@120";
"KRN",.402,432,"DR",1,45,12)
@90;S DGNFLD="@100";79.241;S DGXX=X;I DGCODSYS="ICD9"!(DGXX="")!(DGTYPE=2) S Y="@91";82.11;@91;S X=DGXX;I X K DGPTIT S DGNFLD="@100",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,71)),U,1,3)?."^" Y="@120";@100;
"KRN",.402,432,"DR",1,45,13)
S DGNFLD="@110";79.242;S DGXX=X;I DGCODSYS="ICD9"!(DGXX="")!(DGTYPE=2) S Y="@101";82.12;@101;S X=DGXX;I X K DGPTIT S DGNFLD="@110",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";S:$P($G(^DGPT(D0,71)),U,2,3)?."^" Y="@120";@110;
"KRN",.402,432,"DR",1,45,14)
S DGNFLD="@120";79.243;S DGXX=X;I DGCODSYS="ICD9"!(DGXX="")!(DGTYPE=2) S Y="@111";82.13;@111;S X=DGXX;I X K DGPTIT S DGNFLD="@120",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";@120;K DGNFLD,DGDUP S Y="";@800;
"KRN",.402,432,"DR",1,45,15)
D SCAN^DGPTSCAN,ANYPSY^DGPTSCAN S:'$D(DGBPC) Y="@890";I '$D(DGBPC(2))!(DGDUP(2)) S Y="@820";I $P(DG701,U,2)]"" S Y="@820";300.02;S:X]"" DGDUP(2)=1;@820;I '$D(DGBPC(3))!(DGDUP(3)) S Y="@840";I $P(DG701,U,3)]"" S Y="@840";300.03;
"KRN",.402,432,"DR",1,45,16)
S:X]"" DGDUP(3)=1;@840;I '$D(DGBPC(4))!(DGDUP(4)) S Y="@860";I $P(DG701,U,4)]"" S Y="@860";D DRUG^DGPTSC01 I $D(DGTX) S Y="@850";300.04;S:X]"" DGDUP(4)=1;S Y="@860";@850;300.04//^S X=DGTX;S:X]"" DGDUP(4)=1;@860;
"KRN",.402,432,"DR",1,45,17)
I '$D(DGPBC(5))!(DGDUP(5)) S Y="@870";I $P(DG701,U,5)]"" S Y="@870";300.05;S:X]"" DGDUP(5)=1;@870;I '$D(DGBPC(6))!(DGDUP(6)) S Y="@880";I $P(DG701,U,6)]"" S Y="@880";300.06;S:X]"" DGDUP(6)=1;@880;
"KRN",.402,432,"DR",1,45,18)
I '$D(DGBPC(7))!(DGDUP(7)) S Y="@890";I $P(DG701,U,7)]"" S Y="@890";300.07;S:X]"" DGDUP(7)=1;@890;W:$G(TESTING) !!,"END of TEMPLATE",!;K DGIT,DGPTIT S Y=DGNFLD;
"KRN",.402,432,"ROU")
^DGPTX7
"KRN",.402,432,"ROUOLD")
DGPTX7
"KRN",409.61,236,-1)
0^1
"KRN",409.61,236,0)
DGENCD CATASTROPHIC DISABILITY^1^^100^5^19^1^1^^DGENCD CATASTROPHIC DISABILITY MENU^Catastrophic Disability^1^^1
"KRN",409.61,236,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,236,"ARRAY")
 ^TMP("DGEN CD",$J)
"KRN",409.61,236,"FNL")
D EXIT^DGENLCD
"KRN",409.61,236,"HDR")
D HDR^DGENLCD
"KRN",409.61,236,"HLP")
D HELP^DGENLCD
"KRN",409.61,236,"INIT")
D INIT^DGENLCD
"KRN",8994,422,-1)
0^1
"KRN",8994,422,0)
DG PATIENT TREATMENT DATA^RPC^DGPTFAPI^2^P
"KRN",8994,422,1,0)
^8994.01^6^6^3121219^^^^
"KRN",8994,422,1,1,0)
Returns data from Patient Treatment file (#45).
"KRN",8994,422,1,2,0)
Results(0)=1 (-1 if error)
"KRN",8994,422,1,3,0)
       (1)=type of disposition^place of disposition^primary ICD Dx code^Coding System (p80.4)
"KRN",8994,422,1,4,0)
       (2)=2nd thru 10th ICD codes (uses "^" as delimiter)
"KRN",8994,422,1,5,0)
       (3)=Present On Admission for DX and 2nd thru 10 ICD codes 
"KRN",8994,422,1,6,0)
(more data may be added later) 
"KRN",8994,422,2,0)
^8994.02A^1^1
"KRN",8994,422,2,1,0)
PTFNUMBER^1^^1^1
"KRN",8994,422,2,1,1,0)
^8994.021^1^1^3121219^^^^
"KRN",8994,422,2,1,1,1,0)
the Patient Treatment IFN (.001 of #45 file)
"KRN",8994,422,2,"B","PTFNUMBER",1)

"KRN",8994,422,2,"PARAMSEQ",1,1)

"MBREQ")
0
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",6,.401)
.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"ORD",6,.401,0)
SORT TEMPLATE
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"PKG",47,-1)
1^1
"PKG",47,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",47,20,0)
^9.402P^^
"PKG",47,22,0)
^9.49I^1^1
"PKG",47,22,1,0)
5.3^2930813^2960613
"PKG",47,22,1,"PAH",1,0)
850^3140718^123457038
"PKG",47,22,1,"PAH",1,1,0)
^^1^1^3140718
"PKG",47,22,1,"PAH",1,1,1,0)
This is the ADT ICD-10 Remediation patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
74
"RTN","DG3PR2")
0^33^B16122805^B16655720
"RTN","DG3PR2",1,0)
DG3PR2 ;ALB/MIR - CONTINUATION OF THE THIRD PARTY REIMBURSEMENT ;NOV 21 90@8
"RTN","DG3PR2",2,0)
 ;;5.3;Registration;**26,606,617,570,850**;Aug 13, 1993;Build 171
"RTN","DG3PR2",3,0)
 S DGINS=0 W !!,"INSURANCE TYPE",?24,"INSURANCE #",?45,"GROUP #",?63,"EXPIRES   HOLDER",!,"--------- ----",?24,"--------- -",?45,"----- -",?63,"-------   ------"
"RTN","DG3PR2",4,0)
 ;570
"RTN","DG3PR2",5,0)
 ;D ALL^IBCNS1(DFN,"DGIBINS") F I=0:0 S I=$O(DGIBINS(I)) Q:'I  S J=DGIBINS(I,0) S X=$G(^DIC(36,+J,0)) W !,$S($P(X,"^",2)="N":"*",1:""),$E($P(X,"^",1),1,22),?24,$P(J,"^",2),?45,$P(J,"^",3) S DGINS=$S($P(X,"^",2)="N":1,1:0) D INS2
"RTN","DG3PR2",6,0)
 N DGX,DGDATA
"RTN","DG3PR2",7,0)
 N EFFDATE,IMPDATE
"RTN","DG3PR2",8,0)
 I $$INSUR^IBBAPI(DFN,,"R",.DGDATA,"1,8,9,11,12,14,18")
"RTN","DG3PR2",9,0)
 S DGX="DGDATA(""IBBAPI"",""INSUR"")" M DGIBINS=@DGX
"RTN","DG3PR2",10,0)
 F I=0:0 S I=$O(DGIBINS(I)) Q:'I  D
"RTN","DG3PR2",11,0)
 . W !,$S('+DGIBINS(I,9):"*",1:" "),$E($P(DGIBINS(I,1),"^",2),1,22),?24,DGIBINS(I,14),?45
"RTN","DG3PR2",12,0)
 . I $D(DGIBINS(I,18)) W $G(DGIBINS(I,18)) ; Group Policy number
"RTN","DG3PR2",13,0)
 . S DGINS=$S($P(DGIBINS(I,9),U,2)="NO":1,1:0) D INS2
"RTN","DG3PR2",14,0)
 ;
"RTN","DG3PR2",15,0)
 I DGINS W !?22,"* - Insurer may not reimburse!"
"RTN","DG3PR2",16,0)
 K DGINS,DGIBINS
"RTN","DG3PR2",17,0)
 S Y=+DGAD X ^DD("DD") W !!,"Admitted: ",Y,?40,"Discharged: " S Y=+DGDC I Y X ^DD("DD") W Y
"RTN","DG3PR2",18,0)
 I $P(DGAD,"^",18)=9 W !,"Transferred in From ",$S($D(^DIC(4,+$P(DGAD,"^",5),0)):$P(^(0),"^",1),1:"")
"RTN","DG3PR2",19,0)
 S DGPTF=$P(DGAD,"^",16) I 'DGPTF!('$D(^DGPT(+DGPTF,0))) W !,"No PTF Record Exists" Q
"RTN","DG3PR2",20,0)
 D EFFDATE^DGPTIC10(DGPTF)
"RTN","DG3PR2",21,0)
 I '$D(^DGP(45.84,DGPTF)) W !,"PTF Record not closed",!
"RTN","DG3PR2",22,0)
 K ^UTILITY("DG") F I=0:0 S I=$O(^DGPT(DGPTF,"M",I)) Q:'I  S J=^(I,0) S:$P(J,"^",2) ^UTILITY("DG",$J,"M",+$P(J,"^",10))=J
"RTN","DG3PR2",23,0)
 F I=0:0 S I=$O(^DGPT(DGPTF,"S",I)) Q:'I  D HEAD:$Y>(IOSL-5) Q:'DGFL  S J=^DGPT(DGPTF,"S",I,0),^UTILITY("DG",$J,"S",+J)=J
"RTN","DG3PR2",24,0)
 Q:'DGFL  I $O(^UTILITY("DG",$J,"M",0)) D
"RTN","DG3PR2",25,0)
 . W !!,"DATE",?22,"LOS BEDSECTION",?39,"LOS",?45,"DIAGNOSES",$$GETLABEL^DGPTIC10(EFFDATE,"D"),!,"----",?22,"---------------",?39,"----  --------------------"
"RTN","DG3PR2",26,0)
 N DGDAT,DXD
"RTN","DG3PR2",27,0)
 S DGDAT=$P(^DGPT(DGPTF,0),"^",2)
"RTN","DG3PR2",28,0)
 S DGPR=DGAD F I=0:0 S I=$O(^UTILITY("DG",$J,"M",I)) Q:'I  S J=^(I) D HEAD:$Y>(IOSL-5) Q:'DGFL  S (DGDAT,Y)=I X ^DD("DD") D LOL W !,Y,?22,$E($S($D(^DIC(42.4,+$P(J,"^",2),0)):$P(^(0),"^",1),1:""),1,16),?39,$J(DGLOL,4) D DIAG S DGPR=I
"RTN","DG3PR2",29,0)
 Q:'DGFL  S DGPMIFN=DGCA
"RTN","DG3PR2",30,0)
 D ^DGPMLOS W !?39,"----  ----------",!?26,"TOTAL LOS:",?39,$J(+$P(X,"^",5),4)
"RTN","DG3PR2",31,0)
 S DXD=+$S($D(^DGPT(DGPTF,70)):$P(^(70),"^",10),1:0),DXD=$S(+DXD:$$ICDDATA^ICDXCODE("DIAG",DXD,EFFDATE),1:"")
"RTN","DG3PR2",32,0)
 W ?45,$S(+DXD>0:"DXLS: "_$P(DXD,"^",2)_" ("_$P(DXD,"^",4)_")",1:"")
"RTN","DG3PR2",33,0)
 Q:'$O(^UTILITY("DG",$J,"S",0))  D HEAD:$Y>(IOSL-10) Q:'DGFL  D
"RTN","DG3PR2",34,0)
 . W !!,"SURGERY DATE",?22,"SPECIALTY",?45,"OP CODES",$$GETLABEL^DGPTIC10(EFFDATE,"P"),!,"------------",?22,"----------",?44,"--------------------"
"RTN","DG3PR2",35,0)
 F I=0:0 S I=$O(^UTILITY("DG",$J,"S",I)) Q:'I  S J=^(I),(DGDAT,Y)=I X ^DD("DD") W !,Y,?22,$E($S($D(^DIC(45.3,+$P(J,"^",3),0)):$P(^(0),"^",2),1:""),1,16) D OP
"RTN","DG3PR2",36,0)
 Q
"RTN","DG3PR2",37,0)
DIAG ;
"RTN","DG3PR2",38,0)
 S M=0 F K=5:1:15 I K'=10 S L=$P(J,"^",K) I L D
"RTN","DG3PR2",39,0)
 . S DXD=$$ICDDATA^ICDXCODE("DIAG",+L,EFFDATE)
"RTN","DG3PR2",40,0)
 . W:M ! W ?45,$S(+DXD>0:$P(DXD,"^",2)_" ("_$P(DXD,"^",4)_")",1:"") S M=1
"RTN","DG3PR2",41,0)
 Q
"RTN","DG3PR2",42,0)
OP ;
"RTN","DG3PR2",43,0)
 S M=0 F K=8:1:12 S L=$P(J,"^",K) I L D
"RTN","DG3PR2",44,0)
 . S DXD=$$ICDDATA^ICDXCODE("PROC",+L,EFFDATE)
"RTN","DG3PR2",45,0)
 . W:M ! W ?45,$S(+DXD>0:$P(DXD,"^",2)_" ("_$P(DXD,"^",5)_")",1:"") S M=1
"RTN","DG3PR2",46,0)
 Q
"RTN","DG3PR2",47,0)
LOL S X1=I,X2=DGPR D DTC S DGLOL=X
"RTN","DG3PR2",48,0)
 F K=DGPR+.0000005:0 S K=$O(^DGPM("APCA",DFN,DGCA,K)) Q:'K!(K>I)  S C=$O(^(+K,0)) I $D(^DGPM(+C,0)),"^2^3^13^43^44^45^"[("^"_$P(^(0),"^",18)_"^") S X1=$O(^DGPM("APCA",DFN,DGCA,K)),X1=$S('X1:I,X1>I:I,1:X1),X2=K D DTC S DGLOL=DGLOL-X
"RTN","DG3PR2",49,0)
 Q
"RTN","DG3PR2",50,0)
HEAD N I,J,K,L,M,Y I $E(IOST,1)="C" S DIR(0)="E" D ^DIR S DGFL=Y I 'DGFL Q
"RTN","DG3PR2",51,0)
 W @IOF,!,"THIRD PARTY REIMBURSEMENT",?49,"PRINTED:  ",DGNOW
"RTN","DG3PR2",52,0)
 W !,"("_$P(^DPT(DFN,0),"^",1)_")",!
"RTN","DG3PR2",53,0)
 Q
"RTN","DG3PR2",54,0)
INS2 ;insurance data continued
"RTN","DG3PR2",55,0)
 N X
"RTN","DG3PR2",56,0)
 I $P(DGIBINS(I,9),U,2)="NO" S DGINS=1
"RTN","DG3PR2",57,0)
 S X=DGIBINS(I,11) W:X]"" ?63,$$FMTE^XLFDT(X,"2D")
"RTN","DG3PR2",58,0)
 S X=$P(DGIBINS(I,12),U) W ?73,$S(X="P":"VETERAN",X="S":"SPOUSE",X="O":"OTHER",1:"UNKNOWN")
"RTN","DG3PR2",59,0)
 Q
"RTN","DG3PR2",60,0)
DTC N I,J,K,L,M,Y D ^%DTC Q
"RTN","DG53850A")
0^83^B2731764^n/a
"RTN","DG53850A",1,0)
DG53850A ;ALB/JRC - ICD-10 PRE-INIT ;3/12/11 7:21am
"RTN","DG53850A",2,0)
 ;;5.3;Registration;**850**;Aug 13, 1993;Build 171
"RTN","DG53850A",3,0)
 ;
"RTN","DG53850A",4,0)
 Q
"RTN","DG53850A",5,0)
 ;
"RTN","DG53850A",6,0)
EN ;Delete updated fields to remove screens.
"RTN","DG53850A",7,0)
 N DGFIELD,X,Y,DA,DIK,DGDUZSV,DGPATCH,DGIDX
"RTN","DG53850A",8,0)
 I $G(DUZ)="" W !,"Your DUZ is not defined.  It must be defined to run this routine." Q
"RTN","DG53850A",9,0)
 S DGDUZSV=DUZ(0),DUZ(0)="@"
"RTN","DG53850A",10,0)
 ;
"RTN","DG53850A",11,0)
 ;
"RTN","DG53850A",12,0)
 D EN^DDIOL("Cleaning up PTF file DD for PROCEDURE CODES")
"RTN","DG53850A",13,0)
 F DGFIELD=45.01:.01:45.05 D
"RTN","DG53850A",14,0)
 . S DIK="^DD(45,",DA=DGFIELD,DA(1)=45
"RTN","DG53850A",15,0)
 . D ^DIK
"RTN","DG53850A",16,0)
 ;
"RTN","DG53850A",17,0)
 D EN^DDIOL("Cleaning up PTF file DD for DIAGNOSIS CODES")
"RTN","DG53850A",18,0)
 F DGFIELD=79,79.16,79.17,79.18,79.19,79.201,79.21,79.22,79.23,79.24,79.241,79.242,79.243,79.244 D
"RTN","DG53850A",19,0)
 . S DIK="^DD(45,",DA=DGFIELD,DA(1)=45
"RTN","DG53850A",20,0)
 . D ^DIK
"RTN","DG53850A",21,0)
 ;
"RTN","DG53850A",22,0)
 ;W !!,"CPT DIAGNOSIS"
"RTN","DG53850A",23,0)
 F DGFIELD=.04 D
"RTN","DG53850A",24,0)
 . S DIK="^DD(45.06,",DA=DGFIELD,DA(1)=45.06 D ^DIK
"RTN","DG53850A",25,0)
 . D ^DIK
"RTN","DG53850A",26,0)
 ;
"RTN","DG53850A",27,0)
 ;W !!,"601 MOVEMENT"
"RTN","DG53850A",28,0)
 F DGFIELD=4,5,6,7,8 D
"RTN","DG53850A",29,0)
 . S DIK="^DD(45.05,",DA=DGFIELD,DA(1)=45.05
"RTN","DG53850A",30,0)
 . D ^DIK
"RTN","DG53850A",31,0)
 ;
"RTN","DG53850A",32,0)
 ;W !!,"401 MOVEMENT"
"RTN","DG53850A",33,0)
 F DGFIELD=8,9,10,11,12 D
"RTN","DG53850A",34,0)
 . S DIK="^DD(45.01,",DA=DGFIELD,DA(1)=45.01
"RTN","DG53850A",35,0)
 . D ^DIK
"RTN","DG53850A",36,0)
 ;
"RTN","DG53850A",37,0)
 ;W !!,"501 MOVEMENT"
"RTN","DG53850A",38,0)
 F DGFIELD=5,6,7,8,9,11,12,13,14,15 D
"RTN","DG53850A",39,0)
 . S DIK="^DD(45.02,",DA=DGFIELD,DA(1)=45.02
"RTN","DG53850A",40,0)
 . D ^DIK
"RTN","DG53850A",41,0)
 ;
"RTN","DG53850A",42,0)
 ;W !!,"INPATIENT CPT CODES"
"RTN","DG53850A",43,0)
 F DGFIELD=.04,.05,.06,.07,.21,.22,.23,.24 D
"RTN","DG53850A",44,0)
 . S DIK="^DD(46,",DA=DGFIELD,DA(1)=46
"RTN","DG53850A",45,0)
 . D ^DIK
"RTN","DG53850A",46,0)
 S DUZ(0)=DGDUZSV
"RTN","DG53850A",47,0)
 Q
"RTN","DG53850A",48,0)
 ;
"RTN","DG53850A",49,0)
 ;
"RTN","DG53850B")
0^84^B61379295^n/a
"RTN","DG53850B",1,0)
DG53850B ;ALB/JRC - ICD-10 POST-INIT ;3/12/11 7:21am
"RTN","DG53850B",2,0)
 ;;5.3;Registration;**850**;Aug 13, 1993;Build 171
"RTN","DG53850B",3,0)
 ;
"RTN","DG53850B",4,0)
 Q
"RTN","DG53850B",5,0)
 ;
"RTN","DG53850B",6,0)
EN ; -- Post init entry
"RTN","DG53850B",7,0)
 N DGPATCH,DGRETV,DGCATAR,DG4589ST,DG2717ST
"RTN","DG53850B",8,0)
 S DGRETV=0
"RTN","DG53850B",9,0)
 S DGPATCH=$$PATCH^XPDUTL("DG*5.3*850")
"RTN","DG53850B",10,0)
 I DGPATCH D MES^XPDUTL("Patch DG*5.3*850 previously installed - File 27.17 and File #45.89 updates skipped.")
"RTN","DG53850B",11,0)
 I 'DGPATCH D
"RTN","DG53850B",12,0)
 . S DG2717ST=100 ;IEN to start adding ICD-10 entries in #27.17
"RTN","DG53850B",13,0)
 . S DG4589ST=5000 ;IEN to start adding ICD-10 entries in #45.89
"RTN","DG53850B",14,0)
 . S DGRETV=$$CHKPREP(.DGCATAR,DG2717ST,DG4589ST)
"RTN","DG53850B",15,0)
 . I DGRETV<0 Q
"RTN","DG53850B",16,0)
 . D BMES^XPDUTL("File #27.17:")
"RTN","DG53850B",17,0)
 . D UPD^DG53850D(DG2717ST)
"RTN","DG53850B",18,0)
 . D BMES^XPDUTL("File #45.89:")
"RTN","DG53850B",19,0)
 . D UPD4589(DG4589ST)
"RTN","DG53850B",20,0)
 . D REIN4589
"RTN","DG53850B",21,0)
 . D ADD4589(.DGCATAR,DG4589ST)
"RTN","DG53850B",22,0)
 I DGRETV<0 D MES^XPDUTL("Installation aborted. Fix the issues and start again.") Q
"RTN","DG53850B",23,0)
 ;
"RTN","DG53850B",24,0)
 D REC ;,ICD
"RTN","DG53850B",25,0)
 Q
"RTN","DG53850B",26,0)
 ;
"RTN","DG53850B",27,0)
REC ; -- re-compile all compiled input templates.
"RTN","DG53850B",28,0)
 N X,Y,DA,DIK,DMAX,DGERR,DGDUZSV,DGINTP,DNM
"RTN","DG53850B",29,0)
 I $G(DUZ)="" W !,"Your DUZ is not defined.  It must be defined to run this routine." Q
"RTN","DG53850B",30,0)
 S DGDUZSV=DUZ(0),DUZ(0)="@"
"RTN","DG53850B",31,0)
 ;
"RTN","DG53850B",32,0)
 D BMES^XPDUTL("Compiling Input Templates....")
"RTN","DG53850B",33,0)
 ;
"RTN","DG53850B",34,0)
 F DGINTP="DG101","DG401","DG501","DG501F","DG701" S Y=$O(^DIE("B",DGINTP,0)) S DGERR=0 D  I DGERR D BMES^XPDUTL("** "_DGINTP_" input template could not be updated")
"RTN","DG53850B",35,0)
 .I 'Y S DGERR=1 Q
"RTN","DG53850B",36,0)
 .S X=$P($G(^DIE(Y,"ROU")),U,2) I X="" S DGERR=1 Q
"RTN","DG53850B",37,0)
 .S DMAX=$$ROUSIZE^DILF D EN^DIEZ
"RTN","DG53850B",38,0)
 ;
"RTN","DG53850B",39,0)
 S DUZ(0)=DGDUZSV
"RTN","DG53850B",40,0)
 Q
"RTN","DG53850B",41,0)
 ;
"RTN","DG53850B",42,0)
 ;re-index #4589
"RTN","DG53850B",43,0)
REIN4589 ;
"RTN","DG53850B",44,0)
 D BMES^XPDUTL("Re-indexing existing ICD-9 entries for new indexes ....")
"RTN","DG53850B",45,0)
 N DIK
"RTN","DG53850B",46,0)
 S DIK="^DIC(45.89,"
"RTN","DG53850B",47,0)
 S DIK(1)=".02^ACODE"
"RTN","DG53850B",48,0)
 D ENALL^DIK
"RTN","DG53850B",49,0)
 Q
"RTN","DG53850B",50,0)
 ;adding coding system values to existing ICD-9 entries  
"RTN","DG53850B",51,0)
UPD4589(DG9IEN) ;
"RTN","DG53850B",52,0)
 N DGIEN,DGX
"RTN","DG53850B",53,0)
 D BMES^XPDUTL("Populating the new field #.05 for pre-existing ICD-9 entries")
"RTN","DG53850B",54,0)
 S DGIEN=0
"RTN","DG53850B",55,0)
 F  S DGIEN=$O(^DIC(45.89,DGIEN)) Q:+DGIEN=0!(DGIEN'<DG9IEN)  D
"RTN","DG53850B",56,0)
 . S DGX=$P($G(^DIC(45.89,DGIEN,0)),U,2)
"RTN","DG53850B",57,0)
 . S DGCSYS=$$CSI^ICDEX($S(DGX["ICD9":80,1:80.1),+DGX)
"RTN","DG53850B",58,0)
 . I 'DGCSYS Q
"RTN","DG53850B",59,0)
 . I +$$FILLFLDS(45.89,.05,DGIEN,DGCSYS)=0 D MES^XPDUTL("Code "_$$CODEC^ICDEX($S(DGX["ICD9":80,1:80.1),+DGX)_" wasn't updated")
"RTN","DG53850B",60,0)
 Q
"RTN","DG53850B",61,0)
 ;
"RTN","DG53850B",62,0)
 ;check values and prepare arrays
"RTN","DG53850B",63,0)
CHKPREP(DGCATAR,DG2717ST,DG4589ST) ;
"RTN","DG53850B",64,0)
 N DGCATS,DGIEN,DGIENMAX,DGQUIT
"RTN","DG53850B",65,0)
 I '$O(^DIC(45.89,0)) D BMES^XPDUTL("File #45.89 doesn't have any entries. Please restore the file and then install the patch.") Q -2
"RTN","DG53850B",66,0)
 I '$O(^DGEN(27.17,0)) D BMES^XPDUTL("File #27.17 doesn't have any entries. Please restore the file and then install the patch.") Q -3
"RTN","DG53850B",67,0)
 S DGQUIT=0
"RTN","DG53850B",68,0)
 S DGIENMAX=DG2717ST+200 D  I DGQUIT=1 D BMES^XPDUTL("File #27.17 contains entries with IENs in the range "_DG2717ST_" - "_DGIENMAX_". Please restore the standard data and then install the patch.") Q -5
"RTN","DG53850B",69,0)
 . F DGIEN=DG2717ST:1:DGIENMAX I $D(^DIC(27.17,DGIEN)) S DGQUIT=1 Q
"RTN","DG53850B",70,0)
 S DGQUIT=0
"RTN","DG53850B",71,0)
 S DGIENMAX=DG4589ST+1500 D  I DGQUIT=1 D BMES^XPDUTL("File #45.89 contains entries with IENs in the range "_DG4589ST_" - "_DGIENMAX_". Please restore the original data and then install the patch.") Q -6
"RTN","DG53850B",72,0)
 . F DGIEN=DG4589ST:1:DGIENMAX I $D(^DIC(27.17,DGIEN)) S DGQUIT=1 Q
"RTN","DG53850B",73,0)
 S DGQUIT=0
"RTN","DG53850B",74,0)
 F DGCATS="SUBSTANCE ABUSE","SUICIDE INDICATOR","KIDNEY TRANSPLANT STATUS","DIALYSIS TYPE" D  Q:DGQUIT=1
"RTN","DG53850B",75,0)
 . S DGCATAR(DGCATS)=$O(^DIC(45.88,"B",DGCATS,0))
"RTN","DG53850B",76,0)
 . I +DGCATAR(DGCATS)=0 D BMES^XPDUTL(DGCATS_" wasn't found in the file 45.88. Please correct the file and then install the patch.") S DGQUIT=1
"RTN","DG53850B",77,0)
 Q:DGQUIT=1 -1
"RTN","DG53850B",78,0)
 Q 1
"RTN","DG53850B",79,0)
 ;
"RTN","DG53850B",80,0)
 ;adding ICD-10 entries to #45.89 
"RTN","DG53850B",81,0)
 ;DGCATAR - array with categories (populated by CHKPREP)
"RTN","DG53850B",82,0)
 ;DG10IEN - IEN to start with
"RTN","DG53850B",83,0)
ADD4589(DGCATAR,DG10IEN) ;
"RTN","DG53850B",84,0)
 N DGSTIEN
"RTN","DG53850B",85,0)
 D BMES^XPDUTL("Adding diagnoses to the file #45.89")
"RTN","DG53850B",86,0)
 S DGSTIEN=$$DIAG4589(DG10IEN,.DGCATAR)
"RTN","DG53850B",87,0)
 D BMES^XPDUTL("Adding Procedure to the file #45.89")
"RTN","DG53850B",88,0)
 S DGSTIEN=$$PROC4589(DGSTIEN,.DGCATAR)
"RTN","DG53850B",89,0)
 W DGSTIEN
"RTN","DG53850B",90,0)
 Q
"RTN","DG53850B",91,0)
 ;
"RTN","DG53850B",92,0)
DIAG4589(DGIEN,DGCATAR) ;
"RTN","DG53850B",93,0)
 N DGY,DGX,DGY2,DGX2,DGCNT1,DGCNT2,DGVAL,DGCAT
"RTN","DG53850B",94,0)
 S (DGCNT1,DGCNT2)=0
"RTN","DG53850B",95,0)
 S DGVAL(.05)=30
"RTN","DG53850B",96,0)
 ;SUBSTANCE ABUSE diagnoses
"RTN","DG53850B",97,0)
 D BMES^XPDUTL(" Adding SUBSTANCE ABUSE entries...")
"RTN","DG53850B",98,0)
 S DGVAL(.01)=DGCATAR("SUBSTANCE ABUSE")
"RTN","DG53850B",99,0)
 F DGY=1:1 S DGX=$P($T(DSUBST+DGY^DG53850C),";",3) Q:DGX=""  D
"RTN","DG53850B",100,0)
 . S DGCNT1=DGCNT1+1
"RTN","DG53850B",101,0)
 . F DGY2=1:1 S DGX2=$P(DGX,",",DGY2) Q:DGX2=""  D
"RTN","DG53850B",102,0)
 .. S DGVAL(.02)=(+$$CODEN^ICDEX(DGX2,80))_";ICD9("
"RTN","DG53850B",103,0)
 .. I $G(DGVAL(.02))=-1 D BMES^XPDUTL("Code "_DGX2_" was not found in the file #80") Q
"RTN","DG53850B",104,0)
 .. I $$INSREC(45.89,"",.DGVAL,DGIEN,,,,1)<0 D BMES^XPDUTL("Code "_DGX2_" was not added to the file #45.89")
"RTN","DG53850B",105,0)
 .. S DGIEN=DGIEN+1
"RTN","DG53850B",106,0)
 .. S DGCNT2=DGCNT2+1
"RTN","DG53850B",107,0)
 ;D BMES^XPDUTL(DGCNT2_" codes have been added.")
"RTN","DG53850B",108,0)
 ;SUICIDE INDICATOR diagnoses
"RTN","DG53850B",109,0)
 D BMES^XPDUTL(" Adding SUICIDE INDICATOR entries...")
"RTN","DG53850B",110,0)
 S DGVAL(.01)=DGCATAR("SUICIDE INDICATOR")
"RTN","DG53850B",111,0)
 F DGY=1:1 S DGX=$P($T(DSUIC+DGY^DG53850C),";",3) Q:DGX=""  D
"RTN","DG53850B",112,0)
 . S DGCNT1=DGCNT1+1
"RTN","DG53850B",113,0)
 . F DGY2=1:1 S DGX2=$P(DGX,",",DGY2) Q:DGX2=""  D
"RTN","DG53850B",114,0)
 .. S DGVAL(.02)=(+$$CODEN^ICDEX(DGX2,80))_";ICD9("
"RTN","DG53850B",115,0)
 .. I $G(DGVAL(.02))=-1 D BMES^XPDUTL("Code "_DGX2_" was not found in the file #80") Q
"RTN","DG53850B",116,0)
 .. I $$INSREC(45.89,"",.DGVAL,DGIEN,,,,1)<0 D BMES^XPDUTL("Code "_DGX2_" was not added to the file #45.89")
"RTN","DG53850B",117,0)
 .. S DGIEN=DGIEN+1
"RTN","DG53850B",118,0)
 .. S DGCNT2=DGCNT2+1
"RTN","DG53850B",119,0)
 ;D BMES^XPDUTL(DGCNT2_" codes have been added.")
"RTN","DG53850B",120,0)
 ;KIDNEY TRANSPLANT STATUS diagnoses
"RTN","DG53850B",121,0)
 D BMES^XPDUTL(" Adding KIDNEY TRANSPLANT entries...")
"RTN","DG53850B",122,0)
 S DGVAL(.01)=DGCATAR("KIDNEY TRANSPLANT STATUS")
"RTN","DG53850B",123,0)
 F DGY=1:1 S DGX=$P($T(DKIDNEY+DGY^DG53850C),";",3) Q:DGX=""  D
"RTN","DG53850B",124,0)
 . S DGCNT1=DGCNT1+1
"RTN","DG53850B",125,0)
 . F DGY2=1:1 S DGX2=$P(DGX,",",DGY2) Q:DGX2=""  D
"RTN","DG53850B",126,0)
 .. S DGVAL(.02)=(+$$CODEN^ICDEX(DGX2,80))_";ICD9("
"RTN","DG53850B",127,0)
 .. I $G(DGVAL(.02))=-1 D BMES^XPDUTL("Code "_DGX2_" was not found in the file #80") Q
"RTN","DG53850B",128,0)
 .. I $$INSREC(45.89,"",.DGVAL,DGIEN,,,,1)<0 D BMES^XPDUTL("Code "_DGX2_" was not added to the file #45.89")
"RTN","DG53850B",129,0)
 .. S DGIEN=DGIEN+1
"RTN","DG53850B",130,0)
 .. S DGCNT2=DGCNT2+1
"RTN","DG53850B",131,0)
 D BMES^XPDUTL("  "_DGCNT2_" codes have been added.")
"RTN","DG53850B",132,0)
 Q DGIEN
"RTN","DG53850B",133,0)
 ;
"RTN","DG53850B",134,0)
PROC4589(DGIEN,DGCATAR) ;
"RTN","DG53850B",135,0)
 N DGY,DGX,DGY2,DGX2,DGCNT1,DGCNT2,DGVAL
"RTN","DG53850B",136,0)
 S (DGCNT1,DGCNT2)=0
"RTN","DG53850B",137,0)
 S DGVAL(.05)=31
"RTN","DG53850B",138,0)
 D BMES^XPDUTL(" Adding DIALYSIS TYPE entries...")
"RTN","DG53850B",139,0)
 S DGVAL(.01)=DGCATAR("DIALYSIS TYPE")
"RTN","DG53850B",140,0)
 F DGY=1:1 S DGX=$P($T(PDIAL+DGY^DG53850C),";",3) Q:DGX=""  D
"RTN","DG53850B",141,0)
 . W "."
"RTN","DG53850B",142,0)
 . S DGCNT1=DGCNT1+1
"RTN","DG53850B",143,0)
 . F DGY2=1:1 S DGX2=$P(DGX,",",DGY2) Q:DGX2=""  D
"RTN","DG53850B",144,0)
 .. S DGVAL(.02)=(+$$CODEN^ICDEX(DGX2,80.1))_";ICD0("
"RTN","DG53850B",145,0)
 .. I $G(DGVAL(.02))=-1 D BMES^XPDUTL("Code "_DGX2_" was not found in the file #80.1") Q
"RTN","DG53850B",146,0)
 .. I $$INSREC(45.89,"",.DGVAL,DGIEN,,,,1)<0 D BMES^XPDUTL("Code "_DGX2_" was not added to the file #45.89")
"RTN","DG53850B",147,0)
 .. S DGIEN=DGIEN+1
"RTN","DG53850B",148,0)
 .. S DGCNT2=DGCNT2+1
"RTN","DG53850B",149,0)
 D BMES^XPDUTL("  "_DGCNT2_" codes have been added.")
"RTN","DG53850B",150,0)
 Q DGIEN
"RTN","DG53850B",151,0)
 ;
"RTN","DG53850B",152,0)
 ;/**
"RTN","DG53850B",153,0)
 ;Creates a new entry (or node for multiple with .01 field)
"RTN","DG53850B",154,0)
 ;
"RTN","DG53850B",155,0)
 ;DGFILE - file/subfile number
"RTN","DG53850B",156,0)
 ;DGIEN - ien of the parent file entry in which the new subfile entry will be inserted
"RTN","DG53850B",157,0)
 ;DGZFDA - array with values for the fields
"RTN","DG53850B",158,0)
 ; format for DGZFDA:
"RTN","DG53850B",159,0)
 ; DGZFDA(.01)=value for #.01 field
"RTN","DG53850B",160,0)
 ; DGZFDA(3)=value for #3 field
"RTN","DG53850B",161,0)
 ;DGRECNO -(optional) specify IEN if you want specific value
"RTN","DG53850B",162,0)
 ; Note: "" then the system will assign the entry number itself.
"RTN","DG53850B",163,0)
 ;DGFLGS - FLAGS parameter for UPDATE^DIE
"RTN","DG53850B",164,0)
 ;DGLCKGL - fully specified global reference to lock
"RTN","DG53850B",165,0)
 ;DGLCKTM - time out for LOCK, if LOCKTIME=0 then the function will not lock the file 
"RTN","DG53850B",166,0)
 ;DGNEWRE - optional, flag = if 1 then allow to create a new top level record 
"RTN","DG53850B",167,0)
 ;  
"RTN","DG53850B",168,0)
 ;output :
"RTN","DG53850B",169,0)
 ; positive number - record # created
"RTN","DG53850B",170,0)
 ; <=0 - failure
"RTN","DG53850B",171,0)
 ;
"RTN","DG53850B",172,0)
 ;Example:
"RTN","DG53850B",173,0)
 ;"6^564419;ICD0(^^^31" to create an entry with IEN=5000
"RTN","DG53850B",174,0)
 ;S ZZ(.01)=6,ZZ(.02)="564419;ICD0(",ZZ(.05)=31 W $$INSREC^DG53850C(45.89,"",.ZZ,5000,,,,1)
"RTN","DG53850B",175,0)
INSREC(DGFILE,DGIEN,DGZFDA,DGRECNO,DGFLGS,DGLCKGL,DGLCKTM,DGNEWRE) ;*/
"RTN","DG53850B",176,0)
 I ('$G(DGFILE)) Q "0^Invalid parameter"
"RTN","DG53850B",177,0)
 I +$G(DGNEWRE)=0 I $G(DGRECNO)>0,'$G(DGIEN) Q "0^Invalid parameter"
"RTN","DG53850B",178,0)
 N DGSSI,DGIENS,DGERR,DGFDA
"RTN","DG53850B",179,0)
 N DGLOCK S DGLOCK=0
"RTN","DG53850B",180,0)
 I '$G(DGRECNO) N DGRECNO S DGRECNO=$G(DGRECNO)
"RTN","DG53850B",181,0)
 I DGIEN'="" S DGIENS="+1,"_DGIEN_"," I $L(DGRECNO)>0 S DGSSI(1)=+DGRECNO
"RTN","DG53850B",182,0)
 I DGIEN="" S DGIENS="+1," I $L(DGRECNO)>0 S DGSSI(1)=+DGRECNO
"RTN","DG53850B",183,0)
 M DGFDA(DGFILE,DGIENS)=DGZFDA
"RTN","DG53850B",184,0)
 I $L($G(DGLCKGL)) L +@DGLCKGL:(+$G(DGLCKTM)) S DGLOCK=$T I 'DGLOCK Q -2  ;lock failure
"RTN","DG53850B",185,0)
 D UPDATE^DIE($G(DGFLGS),"DGFDA","DGSSI","DGERR")
"RTN","DG53850B",186,0)
 I DGLOCK L -@DGLCKGL
"RTN","DG53850B",187,0)
 I $D(DGERR) Q -1  ;D BMES^XPDUTL($G(DGERR("DIERR",1,"TEXT",1),"Update Error")) Q -1
"RTN","DG53850B",188,0)
 Q +$G(DGSSI(1))
"RTN","DG53850B",189,0)
 ;
"RTN","DG53850B",190,0)
 ;populate fields
"RTN","DG53850B",191,0)
 ;Input:
"RTN","DG53850B",192,0)
 ;DGFILE file number
"RTN","DG53850B",193,0)
 ;DGFLD field number
"RTN","DG53850B",194,0)
 ;DGIENS ien string 
"RTN","DG53850B",195,0)
 ;DGNEWVAL new value to file (internal format)
"RTN","DG53850B",196,0)
 ;Output:
"RTN","DG53850B",197,0)
 ;0^ DGNEWVAL^error if failure
"RTN","DG53850B",198,0)
 ;1^ DGNEWVAL if success
"RTN","DG53850B",199,0)
FILLFLDS(DGFILE,DGFLD,DGIENS,DGNEWVAL) ;
"RTN","DG53850B",200,0)
 I '$G(DGFILE) Q "0^Invalid parameter"
"RTN","DG53850B",201,0)
 I '$G(DGFLD) Q "0^Invalid parameter"
"RTN","DG53850B",202,0)
 I '$G(DGIENS) Q "0^Invalid parameter"
"RTN","DG53850B",203,0)
 I $G(DGNEWVAL)="" Q "0^Null"
"RTN","DG53850B",204,0)
 N DGIENSTR,FDA,ERRARR
"RTN","DG53850B",205,0)
 S DGIENSTR=DGIENS_","
"RTN","DG53850B",206,0)
 S FDA(DGFILE,DGIENSTR,DGFLD)=DGNEWVAL
"RTN","DG53850B",207,0)
 D FILE^DIE("","FDA","ERRARR")
"RTN","DG53850B",208,0)
 I $D(ERRARR) Q "0^"_DGNEWVAL_"^"_ERRARR("DIERR",1,"TEXT",1)
"RTN","DG53850B",209,0)
 Q "1^"_DGNEWVAL
"RTN","DG53850B",210,0)
 ;
"RTN","DG53850C")
0^85^B105178690^n/a
"RTN","DG53850C",1,0)
DG53850C ;ALB/SS - ICD-10 POST-INSTALL PART D (FILE 45.89) ;01/08/2014
"RTN","DG53850C",2,0)
 ;;5.3;Registration;**850**;Aug 13, 1993;Build 171
"RTN","DG53850C",3,0)
 ;
"RTN","DG53850C",4,0)
 Q
"RTN","DG53850C",5,0)
 ;
"RTN","DG53850C",6,0)
DSUBST ;SUBSTANCE ABUSE diagnoses
"RTN","DG53850C",7,0)
 ;;F11.10,F11.120,F11.121,F11.122,F11.129,F11.14,F11.150,F11.151,F11.159,F11.181,F11.182,F11.188,F11.19,F11.20,F11.21,F11.220,F11.221,F11.222,F11.229,F11.23,F11.24,F11.250,F11.251,F11.259,F11.281,F11.282,F11.288,F11.29,F11.90,F11.920
"RTN","DG53850C",8,0)
 ;;F11.921,F11.922,F11.929,F11.93,F11.94,F11.950,F11.951,F11.959,F11.981,F11.982,F11.988,F11.99
"RTN","DG53850C",9,0)
 ;;F12.10,F12.120,F12.121,F12.122,F12.129,F12.150,F12.151,F12.159,F12.180,F12.188,F12.19,F12.20,F12.21,F12.220,F12.221,F12.222,F12.229,F12.250,F12.251,F12.259,F12.280,F12.288,F12.29,F12.90,F12.920,F12.921,F12.922,F12.929,F12.950
"RTN","DG53850C",10,0)
 ;;F12.951,F12.959,F12.980,F12.988,F12.99
"RTN","DG53850C",11,0)
 ;;F13.10,F13.120,F13.121,F13.129,F13.14,F13.150,F13.151,F13.159,F13.180,F13.181,F13.182,F13.188,F13.19,F13.20,F13.21,F13.220,F13.221,F13.229,F13.230,F13.231,F13.232,F13.239,F13.24,F13.250,F13.251,F13.259,F13.26,F13.27,F13.280,F13.281
"RTN","DG53850C",12,0)
 ;;F13.282,F13.288,F13.29,F13.90,F13.920,F13.921,F13.929,F13.930,F13.931,F13.932,F13.939,F13.94,F13.950,F13.951,F13.959,F13.96,F13.97,F13.980,F13.981,F13.982,F13.988,F13.99
"RTN","DG53850C",13,0)
 ;;F14.10,F14.120,F14.121,F14.122,F14.129,F14.14,F14.150,F14.151,F14.159,F14.180,F14.181,F14.182,F14.188,F14.19,F14.20,F14.21,F14.220,F14.221,F14.222,F14.229,F14.23,F14.24,F14.250,F14.251,F14.259,F14.280,F14.281,F14.282,F14.288,F14.29
"RTN","DG53850C",14,0)
 ;;F14.90,F14.920,F14.921,F14.922,F14.929,F14.94,F14.950,F14.951,F14.959,F14.980,F14.981,F14.982,F14.988,F14.99
"RTN","DG53850C",15,0)
 ;;F15.10,F15.120,F15.121,F15.122,F15.129,F15.14,F15.150,F15.151,F15.159,F15.180,F15.181,F15.182,F15.188,F15.19,F15.20,F15.21,F15.220,F15.221,F15.222,F15.229,F15.23,F15.24,F15.250,F15.251,F15.259,F15.280,F15.281,F15.282,F15.288,F15.29
"RTN","DG53850C",16,0)
 ;;F15.90,F15.920,F15.921,F15.922,F15.929,F15.93,F15.94,F15.950,F15.951,F15.959,F15.980,F15.981,F15.982,F15.988,F15.99
"RTN","DG53850C",17,0)
 ;;F16.10,F16.120,F16.121,F16.122,F16.129,F16.14,F16.150,F16.151,F16.159,F16.180,F16.183,F16.188,F16.19,F16.20,F16.21,F16.220,F16.221,F16.229,F16.24,F16.250,F16.251,F16.259,F16.280,F16.283,F16.288,F16.29,F16.90,F16.920,F16.921,F16.929
"RTN","DG53850C",18,0)
 ;;F16.94,F16.950,F16.951,F16.959,F16.980,F16.983,F16.988,F16.99
"RTN","DG53850C",19,0)
 ;;F18.10,F18.120,F18.121,F18.129,F18.14,F18.150,F18.151,F18.159,F18.17,F18.180,F18.188,F18.19,F18.20,F18.21,F18.220,F18.221,F18.229,F18.24,F18.250,F18.251,F18.259,F18.27,F18.280,F18.288,F18.29,F18.90,F18.920,F18.921,F18.929,F18.94
"RTN","DG53850C",20,0)
 ;;F18.950,F18.951,F18.959,F18.97,F18.980,F18.988,F18.99
"RTN","DG53850C",21,0)
 ;;F19.10,F19.120,F19.121,F19.122,F19.129,F19.14,F19.150,F19.151,F19.159,F19.16,F19.17,F19.180,F19.181,F19.182,F19.188,F19.19,F19.20,F19.21,F19.220,F19.221,F19.222,F19.229,F19.230,F19.231,F19.232,F19.239,F19.24,F19.250,F19.251,F19.259
"RTN","DG53850C",22,0)
 ;;F19.26,F19.27,F19.280,F19.281,F19.282,F19.288,F19.29,F19.90,F19.920,F19.921,F19.922,F19.929,F19.930,F19.931,F19.932,F19.939,F19.94,F19.950,F19.951,F19.959,F19.96,F19.97,F19.980,F19.981,F19.982,F19.988,F19.99
"RTN","DG53850C",23,0)
 ;;F55.0,F55.1,F55.2,F55.3,F55.4,F55.8
"RTN","DG53850C",24,0)
 ;;
"RTN","DG53850C",25,0)
 ;
"RTN","DG53850C",26,0)
 ;
"RTN","DG53850C",27,0)
DSUIC ;SUICIDE INDICATOR diagnoses
"RTN","DG53850C",28,0)
 ;;T14.91
"RTN","DG53850C",29,0)
 ;;T36.0X2A,T36.0X2D,T36.0X2S,T36.1X2A,T36.1X2D,T36.1X2S,T36.2X2A,T36.2X2D,T36.2X2S,T36.3X2A,T36.3X2D,T36.3X2S,T36.4X2A,T36.4X2D,T36.4X2S,T36.5X2A,T36.5X2D,T36.5X2S,T36.6X2A,T36.6X2D,T36.6X2S,T36.7X2A,T36.7X2D,T36.7X2S,T36.8X2A,T36.8X2D
"RTN","DG53850C",30,0)
 ;;T36.8X2S,T36.92XA,T36.92XD,T36.92XS
"RTN","DG53850C",31,0)
 ;;T37.0X2A,T37.0X2D,T37.0X2S,T37.1X2A,T37.1X2D,T37.1X2S,T37.2X2A,T37.2X2D,T37.2X2S,T37.3X2A,T37.3X2D,T37.3X2S,T37.4X2A,T37.4X2D,T37.4X2S,T37.5X2A,T37.5X2D,T37.5X2S,T37.8X2A,T37.8X2D,T37.8X2S,T37.92XA,T37.92XD,T37.92XS
"RTN","DG53850C",32,0)
 ;;T38.0X2A,T38.0X2D,T38.0X2S,T38.1X2A,T38.1X2D,T38.1X2S,T38.2X2A,T38.2X2D,T38.2X2S,T38.3X2A,T38.3X2D,T38.3X2S,T38.4X2A,T38.4X2D,T38.4X2S,T38.5X2A,T38.5X2D,T38.5X2S,T38.6X2A,T38.6X2D,T38.6X2S,T38.7X2A,T38.7X2D,T38.7X2S,T38.802A,T38.802D
"RTN","DG53850C",33,0)
 ;;T38.802S,T38.812A,T38.812D,T38.812S,T38.892A,T38.892D,T38.892S,T38.902A,T38.902D,T38.902S,T38.992A,T38.992D,T38.992S
"RTN","DG53850C",34,0)
 ;;T39.012A,T39.012D,T39.012S,T39.092A,T39.092D,T39.092S,T39.1X2A,T39.1X2D,T39.1X2S,T39.2X2A,T39.2X2D,T39.2X2S,T39.312A,T39.312D,T39.312S,T39.392A,T39.392D,T39.392S,T39.4X2A,T39.4X2D,T39.4X2S,T39.8X2A,T39.8X2D,T39.8X2S,T39.92XA
"RTN","DG53850C",35,0)
 ;;T39.92XD,T39.92XS
"RTN","DG53850C",36,0)
 ;;T40.0X2A,T40.0X2D,T40.0X2S,T40.1X2A,T40.1X2D,T40.1X2S,T40.2X2A,T40.2X2D,T40.2X2S,T40.3X2A,T40.3X2D,T40.3X2S,T40.4X2A,T40.4X2D,T40.4X2S,T40.5X2A,T40.5X2D,T40.5X2S,T40.602A,T40.602D,T40.602S,T40.692A,T40.692D,T40.692S,T40.7X2A
"RTN","DG53850C",37,0)
 ;;T40.7X2D,T40.7X2S,T40.8X2A,T40.8X2D,T40.8X2S,T40.902A,T40.902D,T40.902S,T40.992A,T40.992D,T40.992S
"RTN","DG53850C",38,0)
 ;;T41.0X2A,T41.0X2D,T41.0X2S,T41.1X2A,T41.1X2D,T41.1X2S,T41.202A,T41.202D,T41.202S,T41.292A,T41.292D,T41.292S,T41.3X2A,T41.3X2D,T41.3X2S,T41.42XA,T41.42XD,T41.42XS,T41.5X2A,T41.5X2D,T41.5X2S
"RTN","DG53850C",39,0)
 ;;T42.0X2A,T42.0X2D,T42.0X2S,T42.1X2A,T42.1X2D,T42.1X2S,T42.2X2A,T42.2X2D,T42.2X2S,T42.3X2A,T42.3X2D,T42.3X2S,T42.4X2A,T42.4X2D,T42.4X2S,T42.5X2A,T42.5X2D,T42.5X2S,T42.6X2A,T42.6X2D,T42.6X2S,T42.72XA,T42.72XD,T42.72XS,T42.8X2A
"RTN","DG53850C",40,0)
 ;;T42.8X2D,T42.8X2S
"RTN","DG53850C",41,0)
 ;;T43.012A,T43.012D,T43.012S,T43.022A,T43.022D,T43.022S,T43.1X2A,T43.1X2D,T43.1X2S,T43.202A,T43.202D,T43.202S,T43.212A,T43.212D,T43.212S,T43.222A,T43.222D,T43.222S,T43.292A,T43.292D,T43.292S,T43.3X2A,T43.3X2D,T43.3X2S,T43.4X2A
"RTN","DG53850C",42,0)
 ;;T43.4X2D,T43.4X2S,T43.502A,T43.502D,T43.502S,T43.592A,T43.592D,T43.592S,T43.602A,T43.602D,T43.602S,T43.612A,T43.612D,T43.612S,T43.622A,T43.622D,T43.622S,T43.632A,T43.632D,T43.632S,T43.692A,T43.692D,T43.692S,T43.8X2A,T43.8X2D
"RTN","DG53850C",43,0)
 ;;T43.8X2S,T43.92XA,T43.92XD,T43.92XS
"RTN","DG53850C",44,0)
 ;;T44.0X2A,T44.0X2D,T44.0X2S,T44.1X2A,T44.1X2D,T44.1X2S,T44.2X2A,T44.2X2D,T44.2X2S,T44.3X2A,T44.3X2D,T44.3X2S,T44.4X2A,T44.4X2D,T44.4X2S,T44.5X2A,T44.5X2D,T44.5X2S,T44.6X2A,T44.6X2D,T44.6X2S,T44.7X2A,T44.7X2D,T44.7X2S,T44.8X2A
"RTN","DG53850C",45,0)
 ;;T44.8X2D,T44.8X2S,T44.902A,T44.902D,T44.902S,T44.992A,T44.992D,T44.992S
"RTN","DG53850C",46,0)
 ;;T45.0X2A,T45.0X2D,T45.0X2S,T45.1X2A,T45.1X2D,T45.1X2S,T45.2X2A,T45.2X2D,T45.2X2S,T45.3X2A,T45.3X2D,T45.3X2S,T45.4X2A,T45.4X2D,T45.4X2S,T45.512A,T45.512D,T45.512S,T45.522A,T45.522D,T45.522S,T45.602A,T45.602D,T45.602S,T45.612A
"RTN","DG53850C",47,0)
 ;;T45.612D,T45.612S,T45.622A,T45.622D,T45.622S,T45.692A,T45.692D,T45.692S,T45.7X2A,T45.7X2D,T45.7X2S,T45.8X2A,T45.8X2D,T45.8X2S,T45.92XA,T45.92XD,T45.92XS
"RTN","DG53850C",48,0)
 ;;T46.0X2A,T46.0X2D,T46.0X2S,T46.1X2A,T46.1X2D,T46.1X2S,T46.2X2A,T46.2X2D,T46.2X2S,T46.3X2A,T46.3X2D,T46.3X2S,T46.4X2A,T46.4X2D,T46.4X2S,T46.5X2A,T46.5X2D,T46.5X2S,T46.6X2A,T46.6X2D,T46.6X2S,T46.7X2A,T46.7X2D,T46.7X2S,T46.8X2A
"RTN","DG53850C",49,0)
 ;;T46.8X2D,T46.8X2S,T46.902A,T46.902D,T46.902S,T46.992A,T46.992D,T46.992S
"RTN","DG53850C",50,0)
 ;;T47.0X2A,T47.0X2D,T47.0X2S,T47.1X2A,T47.1X2D,T47.1X2S,T47.2X2A,T47.2X2D,T47.2X2S,T47.3X2A,T47.3X2D,T47.3X2S,T47.4X2A,T47.4X2D,T47.4X2S,T47.5X2A,T47.5X2D,T47.5X2S,T47.6X2A,T47.6X2D,T47.6X2S,T47.7X2A,T47.7X2D,T47.7X2S,T47.8X2A
"RTN","DG53850C",51,0)
 ;;T47.8X2D,T47.8X2S,T47.92XA,T47.92XD,T47.92XS
"RTN","DG53850C",52,0)
 ;;T48.0X2A,T48.0X2D,T48.0X2S,T48.1X2A,T48.1X2D,T48.1X2S,T48.202A,T48.202D,T48.202S,T48.292A,T48.292D,T48.292S,T48.3X2A,T48.3X2D,T48.3X2S,T48.4X2A,T48.4X2D,T48.4X2S,T48.5X2A,T48.5X2D,T48.5X2S,T48.6X2A,T48.6X2D,T48.6X2S,T48.902A
"RTN","DG53850C",53,0)
 ;;T48.902D,T48.902S,T48.992A,T48.992D,T48.992S
"RTN","DG53850C",54,0)
 ;;T49.0X2A,T49.0X2D,T49.0X2S,T49.1X2A,T49.1X2D,T49.1X2S,T49.2X2A,T49.2X2D,T49.2X2S,T49.3X2A,T49.3X2D,T49.3X2S,T49.4X2A,T49.4X2D,T49.4X2S,T49.5X2A,T49.5X2D,T49.5X2S,T49.6X2A,T49.6X2D,T49.6X2S,T49.7X2A,T49.7X2D,T49.7X2S,T49.8X2A
"RTN","DG53850C",55,0)
 ;;T49.8X2D,T49.8X2S,T49.92XA,T49.92XD,T49.92XS
"RTN","DG53850C",56,0)
 ;;T50.0X2A,T50.0X2D,T50.0X2S,T50.1X2A,T50.1X2D,T50.1X2S,T50.2X2A,T50.2X2D,T50.2X2S,T50.3X2A,T50.3X2D,T50.3X2S,T50.4X2A,T50.4X2D,T50.4X2S,T50.5X2A,T50.5X2D,T50.5X2S,T50.6X2A,T50.6X2D,T50.6X2S,T50.7X2A,T50.7X2D,T50.7X2S,T50.8X2A
"RTN","DG53850C",57,0)
 ;;T50.8X2D,T50.8X2S,T50.902A,T50.902D,T50.902S,T50.992A,T50.992D,T50.992S,T50.A12A,T50.A12D,T50.A12S,T50.A22A,T50.A22D,T50.A22S,T50.A92A,T50.A92D,T50.A92S,T50.B12A,T50.B12D,T50.B12S,T50.B92A,T50.B92D,T50.B92S,T50.Z12A,T50.Z12D
"RTN","DG53850C",58,0)
 ;;T50.Z12S,T50.Z92A,T50.Z92D,T50.Z92S
"RTN","DG53850C",59,0)
 ;;T51.0X2A,T51.0X2D,T51.0X2S,T51.1X2A,T51.1X2D,T51.1X2S,T51.2X2A,T51.2X2D,T51.2X2S,T51.3X2A,T51.3X2D,T51.3X2S,T51.8X2A,T51.8X2D,T51.8X2S,T51.92XA,T51.92XD,T51.92XS
"RTN","DG53850C",60,0)
 ;;T52.0X2A,T52.0X2D,T52.0X2S,T52.1X2A,T52.1X2D,T52.1X2S,T52.2X2A,T52.2X2D,T52.2X2S,T52.3X2A,T52.3X2D,T52.3X2S,T52.4X2A,T52.4X2D,T52.4X2S,T52.8X2A,T52.8X2D,T52.8X2S,T52.92XA,T52.92XD,T52.92XS
"RTN","DG53850C",61,0)
 ;;T53.0X2A,T53.0X2D,T53.0X2S,T53.1X2A,T53.1X2D,T53.1X2S,T53.2X2A,T53.2X2D,T53.2X2S,T53.3X2A,T53.3X2D,T53.3X2S,T53.4X2A,T53.4X2D,T53.4X2S,T53.5X2A,T53.5X2D,T53.5X2S,T53.6X2A,T53.6X2D,T53.6X2S,T53.7X2A,T53.7X2D,T53.7X2S,T53.92XA
"RTN","DG53850C",62,0)
 ;;T53.92XD,T53.92XS
"RTN","DG53850C",63,0)
 ;;T54.0X2A,T54.0X2D,T54.0X2S,T54.1X2A,T54.1X2D,T54.1X2S,T54.2X2A,T54.2X2D,T54.2X2S,T54.3X2A,T54.3X2D,T54.3X2S,T54.92XA,T54.92XD,T54.92XS
"RTN","DG53850C",64,0)
 ;;T55.0X2A,T55.0X2D,T55.0X2S,T55.1X2A,T55.1X2D,T55.1X2S
"RTN","DG53850C",65,0)
 ;;T56.0X2A,T56.0X2D,T56.0X2S,T56.1X2A,T56.1X2D,T56.1X2S,T56.2X2A,T56.2X2D,T56.2X2S,T56.3X2A,T56.3X2D,T56.3X2S,T56.4X2A,T56.4X2D,T56.4X2S,T56.5X2A,T56.5X2D,T56.5X2S,T56.6X2A,T56.6X2D,T56.6X2S,T56.7X2A,T56.7X2D,T56.7X2S,T56.812A
"RTN","DG53850C",66,0)
 ;;T56.812D,T56.812S,T56.892A,T56.892D,T56.892S,T56.92XA,T56.92XD,T56.92XS
"RTN","DG53850C",67,0)
 ;;T57.0X2A,T57.0X2D,T57.0X2S,T57.1X2A,T57.1X2D,T57.1X2S,T57.2X2A,T57.2X2D,T57.2X2S,T57.3X2A,T57.3X2D,T57.3X2S,T57.8X2A,T57.8X2D,T57.8X2S,T57.92XA,T57.92XD,T57.92XS
"RTN","DG53850C",68,0)
 ;;T58.02XA,T58.02XD,T58.02XS,T58.12XA,T58.12XD,T58.12XS,T58.2X2A,T58.2X2D,T58.2X2S,T58.8X2A,T58.8X2D,T58.8X2S,T58.92XA,T58.92XD,T58.92XS
"RTN","DG53850C",69,0)
 ;;T59.0X2A,T59.0X2D,T59.0X2S,T59.1X2A,T59.1X2D,T59.1X2S,T59.2X2A,T59.2X2D,T59.2X2S,T59.3X2A,T59.3X2D,T59.3X2S,T59.4X2A,T59.4X2D,T59.4X2S,T59.5X2A,T59.5X2D,T59.5X2S,T59.6X2A,T59.6X2D,T59.6X2S,T59.7X2A,T59.7X2D,T59.7X2S,T59.812A
"RTN","DG53850C",70,0)
 ;;T59.812D,T59.812S,T59.892A,T59.892D,T59.892S,T59.92XA,T59.92XD,T59.92XS
"RTN","DG53850C",71,0)
 ;;T60.0X2A,T60.0X2D,T60.0X2S,T60.1X2A,T60.1X2D,T60.1X2S,T60.2X2A,T60.2X2D,T60.2X2S,T60.3X2A,T60.3X2D,T60.3X2S,T60.4X2A,T60.4X2D,T60.4X2S,T60.8X2A,T60.8X2D,T60.8X2S,T60.92XA,T60.92XD,T60.92XS
"RTN","DG53850C",72,0)
 ;;T61.02XA,T61.02XD,T61.02XS,T61.12XA,T61.12XD,T61.12XS,T61.772A,T61.772D,T61.772S,T61.782A,T61.782D,T61.782S,T61.8X2A,T61.8X2D,T61.8X2S,T61.92XA,T61.92XD,T61.92XS
"RTN","DG53850C",73,0)
 ;;T62.0X2A,T62.0X2D,T62.0X2S,T62.1X2A,T62.1X2D,T62.1X2S,T62.2X2A,T62.2X2D,T62.2X2S,T62.8X2A,T62.8X2D,T62.8X2S,T62.92XA,T62.92XD,T62.92XS
"RTN","DG53850C",74,0)
 ;;T63.002A,T63.002D,T63.002S,T63.012A,T63.012D,T63.012S,T63.022A,T63.022D,T63.022S,T63.032A,T63.032D,T63.032S,T63.042A,T63.042D,T63.042S,T63.062A,T63.062D,T63.062S,T63.072A,T63.072D,T63.072S,T63.082A,T63.082D,T63.082S,T63.092A
"RTN","DG53850C",75,0)
 ;;T63.092D,T63.092S,T63.112A,T63.112D,T63.112S,T63.122A,T63.122D,T63.122S,T63.192A,T63.192D,T63.192S,T63.2X2A,T63.2X2D,T63.2X2S,T63.302A,T63.302D,T63.302S,T63.312A,T63.312D,T63.312S,T63.322A,T63.322D,T63.322S,T63.332A,T63.332D
"RTN","DG53850C",76,0)
 ;;T63.332S,T63.392A,T63.392D,T63.392S,T63.412A,T63.412D,T63.412S,T63.422A,T63.422D,T63.422S,T63.432A,T63.432D,T63.432S,T63.442A,T63.442D,T63.442S,T63.452A,T63.452D,T63.452S,T63.462A,T63.462D,T63.462S,T63.482A,T63.482D,T63.482S
"RTN","DG53850C",77,0)
 ;;T63.512A,T63.512D,T63.512S,T63.592A,T63.592D,T63.592S,T63.612A,T63.612D,T63.612S,T63.622A,T63.622D,T63.622S,T63.632A,T63.632D,T63.632S,T63.692A,T63.692D,T63.692S,T63.712A,T63.712D,T63.712S,T63.792A,T63.792D,T63.792S,T63.812A
"RTN","DG53850C",78,0)
 ;;T63.812D,T63.812S,T63.822A,T63.822D,T63.822S,T63.832A,T63.832D,T63.832S,T63.892A,T63.892D,T63.892S,T63.92XA,T63.92XD,T63.92XS
"RTN","DG53850C",79,0)
 ;;T64.02XA,T64.02XD,T64.02XS,T64.82XA,T64.82XD,T64.82XS
"RTN","DG53850C",80,0)
 ;;T65.0X2A,T65.0X2D,T65.0X2S,T65.1X2A,T65.1X2D,T65.1X2S,T65.212A,T65.212D,T65.212S,T65.222A,T65.222D,T65.222S,T65.292A,T65.292D,T65.292S,T65.3X2A,T65.3X2D,T65.3X2S,T65.4X2A,T65.4X2D,T65.4X2S,T65.5X2A,T65.5X2D,T65.5X2S,T65.6X2A
"RTN","DG53850C",81,0)
 ;;T65.6X2D,T65.6X2S,T65.812A,T65.812D,T65.812S,T65.822A,T65.822D,T65.822S,T65.832A,T65.832D,T65.832S,T65.892A,T65.892D,T65.892S,T65.92XA,T65.92XD,T65.92XS
"RTN","DG53850C",82,0)
 ;;T71.112A,T71.112D,T71.112S,T71.122A,T71.122D,T71.122S,T71.132A,T71.132D,T71.132S,T71.152A,T71.152D,T71.152S,T71.162A,T71.162D,T71.162S,T71.192A,T71.192D,T71.192S,T71.222A,T71.222D,T71.222S,T71.232A,T71.232D,T71.232S
"RTN","DG53850C",83,0)
 ;;X71.0XXA,X71.0XXD,X71.0XXS,X71.1XXA,X71.1XXD,X71.1XXS,X71.2XXA,X71.2XXD,X71.2XXS,X71.3XXA,X71.3XXD,X71.3XXS,X71.8XXA,X71.8XXD,X71.8XXS,X71.9XXA,X71.9XXD,X71.9XXS
"RTN","DG53850C",84,0)
 ;;X72.XXXA,X72.XXXD,X72.XXXS
"RTN","DG53850C",85,0)
 ;;X73.0XXA,X73.0XXD,X73.0XXS,X73.1XXA,X73.1XXD,X73.1XXS,X73.2XXA,X73.2XXD,X73.2XXS,X73.8XXA,X73.8XXD,X73.8XXS,X73.9XXA,X73.9XXD,X73.9XXS
"RTN","DG53850C",86,0)
 ;;X74.01XA,X74.01XD,X74.01XS,X74.02XA,X74.02XD,X74.02XS,X74.09XA,X74.09XD,X74.09XS,X74.8XXA,X74.8XXD,X74.8XXS,X74.9XXA,X74.9XXD,X74.9XXS
"RTN","DG53850C",87,0)
 ;;X75.XXXA,X75.XXXD,X75.XXXS
"RTN","DG53850C",88,0)
 ;;X76.XXXA,X76.XXXD,X76.XXXS
"RTN","DG53850C",89,0)
 ;;X77.0XXA,X77.0XXD,X77.0XXS,X77.1XXA,X77.1XXD,X77.1XXS,X77.2XXA,X77.2XXD,X77.2XXS,X77.3XXA,X77.3XXD,X77.3XXS,X77.8XXA,X77.8XXD,X77.8XXS,X77.9XXA,X77.9XXD,X77.9XXS
"RTN","DG53850C",90,0)
 ;;X78.0XXA,X78.0XXD,X78.0XXS,X78.1XXA,X78.1XXD,X78.1XXS,X78.2XXA,X78.2XXD,X78.2XXS,X78.8XXA,X78.8XXD,X78.8XXS,X78.9XXA,X78.9XXD,X78.9XXS
"RTN","DG53850C",91,0)
 ;;X79.XXXA,X79.XXXD,X79.XXXS
"RTN","DG53850C",92,0)
 ;;X80.XXXA,X80.XXXD,X80.XXXS
"RTN","DG53850C",93,0)
 ;;X81.0XXA,X81.0XXD,X81.0XXS,X81.1XXA,X81.1XXD,X81.1XXS,X81.8XXA,X81.8XXD,X81.8XXS
"RTN","DG53850C",94,0)
 ;;X82.8XXA,X82.8XXD,X82.8XXS
"RTN","DG53850C",95,0)
 ;;X83.0XXA,X83.0XXD,X83.0XXS,X83.1XXA,X83.1XXD,X83.1XXS,X83.2XXA,X83.2XXD,X83.2XXS,X83.8XXA,X83.8XXD,X83.8XXS
"RTN","DG53850C",96,0)
 ;;
"RTN","DG53850C",97,0)
 ;
"RTN","DG53850C",98,0)
 ;
"RTN","DG53850C",99,0)
DKIDNEY ;KIDNEY TRANSPLANT STATUS diagnoses
"RTN","DG53850C",100,0)
 ;;Z94.0
"RTN","DG53850C",101,0)
 ;;
"RTN","DG53850C",102,0)
 ;
"RTN","DG53850C",103,0)
 ;
"RTN","DG53850C",104,0)
PDIAL ;DIALYSIS TYPE procedures
"RTN","DG53850C",105,0)
 ;;5A1C00Z,5A1C60Z,5A1D00Z,5A1D60Z,3E1M39Z
"RTN","DG53850C",106,0)
 ;;
"RTN","DG53850C",107,0)
 ;
"RTN","DG53850C",108,0)
 ;
"RTN","DG53850D")
0^82^B13639631^n/a
"RTN","DG53850D",1,0)
DG53850D ;ALB/AAS -  IMPORT WIZARD FOR ICD-10 CODES INTO FILE 27.17;6/21/13 1328
"RTN","DG53850D",2,0)
 ;;5.3;Registration;**850**;Aug 13, 1993;Build 171
"RTN","DG53850D",3,0)
 ;
"RTN","DG53850D",4,0)
 Q
"RTN","DG53850D",5,0)
 ;DG2717ST - start IEN for adding new entries
"RTN","DG53850D",6,0)
UPD(DG2717ST) ; - Top level entry point
"RTN","DG53850D",7,0)
 N DGCNT1,DGCNT2,DGSTRT
"RTN","DG53850D",8,0)
 D BMES^XPDUTL("Adding Entries to Catastophic Disability Reasons File")
"RTN","DG53850D",9,0)
 N DGIDX
"RTN","DG53850D",10,0)
 S DGIDX=$$MAXIEN()
"RTN","DG53850D",11,0)
 I (DGIDX>49) D MES^XPDUTL("Nationally controlled file Catastrophic Disability Reasons contains local codes - File 27.17 Not Nationally compliant!")
"RTN","DG53850D",12,0)
 ;
"RTN","DG53850D",13,0)
 D SETVER(DG2717ST)
"RTN","DG53850D",14,0)
 S DGSTRT=DG2717ST
"RTN","DG53850D",15,0)
 D DIAG2717(.DGSTRT)
"RTN","DG53850D",16,0)
 D PROC2717(.DGSTRT)
"RTN","DG53850D",17,0)
 D MES^XPDUTL("     Total Diagnosis Entries added to Catastophic disability Reasons: "_DGCNT1)
"RTN","DG53850D",18,0)
 D MES^XPDUTL("     Total Procedure Entries added to Catastophic disability Reasons: "_DGCNT2)
"RTN","DG53850D",19,0)
 I DGCNT1+DGCNT2=138 D BMES^XPDUTL("ALL ENTRIES ADDED SUCCESSFULY")
"RTN","DG53850D",20,0)
 I DGCNT1+DGCNT2'=138 D BMES^XPDUTL("Problem exists, entry totals should be 17 and 121")
"RTN","DG53850D",21,0)
 Q
"RTN","DG53850D",22,0)
 ;set coding system field for ICD-9 entries
"RTN","DG53850D",23,0)
 ;DG2717ST - the IEN where ICD-10 entries are supposed to start
"RTN","DG53850D",24,0)
SETVER(DG2717ST) ; Set ICD version on first entries, updates piece 9 
"RTN","DG53850D",25,0)
 N DGIEN1,DGNDE,DGTYP,DGICDVAL
"RTN","DG53850D",26,0)
 N DGCSYS,DGFILE
"RTN","DG53850D",27,0)
 F DGIEN1=0:0 S DGIEN1=$O(^DGEN(27.17,DGIEN1)) Q:('DGIEN1)!(DGIEN1'<DG2717ST)  D
"RTN","DG53850D",28,0)
 . S DGNDE=$G(^DGEN(27.17,DGIEN1,0)) Q:DGNDE=""
"RTN","DG53850D",29,0)
 . S DGTYP=$P(DGNDE,"^",2),DGICDVAL=$P(DGNDE,"^",3)
"RTN","DG53850D",30,0)
 . S DGFILE=0
"RTN","DG53850D",31,0)
 . I DGTYP="P",DGICDVAL["ICD0" S DGFILE=80.1
"RTN","DG53850D",32,0)
 . I DGTYP="D",DGICDVAL["ICD9" S DGFILE=80
"RTN","DG53850D",33,0)
 . Q:DGFILE=0
"RTN","DG53850D",34,0)
 . S DGCSYS=$$CSI^ICDEX(DGFILE,+DGICDVAL)
"RTN","DG53850D",35,0)
 . I 'DGCSYS Q
"RTN","DG53850D",36,0)
 . I +$$FILLFLDS^DG53850B(27.17,9,DGIEN1,DGCSYS)=0 D MES^XPDUTL("Code "_$$CODEC^ICDEX(DGFILE,+DGICDVAL)_" wasn't updated")
"RTN","DG53850D",37,0)
 Q
"RTN","DG53850D",38,0)
 ;
"RTN","DG53850D",39,0)
DIAG2717(DGDINUM) ; - Store Diagnosis DATA in file 27.17
"RTN","DG53850D",40,0)
 ; .01 - Name fill with DGDSCR     0;2
"RTN","DG53850D",41,0)
 ;  1  - Type, fill with D or P  0;2
"RTN","DG53850D",42,0)
 ;  4  = Affected Limb (mult)    node 1, 0;1 
"RTN","DG53850D",43,0)
 ;  8  - HL7 value               0;4
"RTN","DG53850D",44,0)
 ;  9  - ICD10 code (variable)   0;9
"RTN","DG53850D",45,0)
 ;   10 - Long description        5;1
"RTN","DG53850D",46,0)
 ;
"RTN","DG53850D",47,0)
 N DGI,DGTXTSTR,DGTYP,DGCODVAL,DGDSCR,DIC,DA,X,Y,DGIEN1,ERR
"RTN","DG53850D",48,0)
 N DINUM
"RTN","DG53850D",49,0)
 S Y=1,DGCNT1=0
"RTN","DG53850D",50,0)
 F DGI=1:1 S DGTXTSTR=$P($T(DIAG+DGI^DG53850E),";;",2,10) Q:DGTXTSTR=""  D
"RTN","DG53850D",51,0)
 .  S DGTYP=$P(DGTXTSTR,"^",1)
"RTN","DG53850D",52,0)
 .  S DGCODVAL=$P(DGTXTSTR,"^",4)
"RTN","DG53850D",53,0)
 .  S DGDSCR=$P(DGTXTSTR,"^",5)
"RTN","DG53850D",54,0)
 .  I '$O(^DGEN(27.17,"C",DGCODVAL,0)) D
"RTN","DG53850D",55,0)
 ..  K DIC,DA,DR,DD,DO,X
"RTN","DG53850D",56,0)
 ..  S DIC=27.17,DIC(0)="LEFZ",X=$E(DGDSCR,1,79)
"RTN","DG53850D",57,0)
 ..  S DIC("DR")="1///"_$E(DGTYP,1)_";8////"_DGCODVAL_";10////"_DGDSCR_";3///"_DGCODVAL
"RTN","DG53850D",58,0)
 ..  S DINUM=DGDINUM
"RTN","DG53850D",59,0)
 ..  D FILE^DICN
"RTN","DG53850D",60,0)
 ..  S DGDINUM=DGDINUM+1
"RTN","DG53850D",61,0)
 ..  I +Y>0 W "." S DGCNT1=DGCNT1+1
"RTN","DG53850D",62,0)
 ..  I Y=-1 S ERR=$G(ERR)+1
"RTN","DG53850D",63,0)
 Q
"RTN","DG53850D",64,0)
 ;
"RTN","DG53850D",65,0)
PROC2717(DGDINUM) ; - Store Procedure DATA in file 27.17
"RTN","DG53850D",66,0)
 N DGI,DGTXTSTR,DGTYP,DGCODVAL,DGDSCR,DGLMB,DGTSTVL,DGABBRV,DIC,DA,X,Y,DGIEN1
"RTN","DG53850D",67,0)
 S Y=1,DGCNT2=0
"RTN","DG53850D",68,0)
 F DGI=1:1 S DGTXTSTR=$P($T(PROC+DGI^DG53850E),";;",2,10) Q:DGTXTSTR=""  D
"RTN","DG53850D",69,0)
 .  S DGTYP=$P(DGTXTSTR,"^",1)
"RTN","DG53850D",70,0)
 .  S DGABBRV=$P(DGTXTSTR,"^",2)
"RTN","DG53850D",71,0)
 .  S DGLMB=$P(DGTXTSTR,"^",3)
"RTN","DG53850D",72,0)
 .  S DGCODVAL=$P(DGTXTSTR,"^",4)
"RTN","DG53850D",73,0)
 .  S DGDSCR=$P(DGTXTSTR,"^",5)
"RTN","DG53850D",74,0)
 .  I '$O(^DGEN(27.17,"C",DGCODVAL,0)) D
"RTN","DG53850D",75,0)
 ..  K DIC,DA,DR,DD,DO,X
"RTN","DG53850D",76,0)
 ..  S DIC=27.17,DIC(0)="LEFZ",X=$E(DGDSCR,1,79)
"RTN","DG53850D",77,0)
 ..  S DIC("DR")="1///"_$E(DGTYP,1)_";8////"_DGCODVAL_";10////"_DGDSCR_";3///"_DGCODVAL
"RTN","DG53850D",78,0)
 ..  S DINUM=DGDINUM
"RTN","DG53850D",79,0)
 ..  D FILE^DICN S DGIEN1=+Y
"RTN","DG53850D",80,0)
 ..  S DGDINUM=DGDINUM+1
"RTN","DG53850D",81,0)
 ..  I +Y>0 W "." S DGCNT2=DGCNT2+1
"RTN","DG53850D",82,0)
 ..  I Y=-1 S ERR=$G(ERR)+1
"RTN","DG53850D",83,0)
 ..  Q:DGIEN1<1
"RTN","DG53850D",84,0)
 ..  K DIC("V"),DIC("DR")
"RTN","DG53850D",85,0)
 ..  S DGTSTVL="RUE;RLE;LUE;LLE;BLE;BUE"
"RTN","DG53850D",86,0)
 ..  I 'DGTSTVL[DGLMB Q
"RTN","DG53850D",87,0)
 ..  S DA(1)=DGIEN1,DIC="^DGEN(27.17,"_DGIEN1_",1,"
"RTN","DG53850D",88,0)
 ..  S X=DGABBRV D FILE^DICN
"RTN","DG53850D",89,0)
 Q
"RTN","DG53850D",90,0)
 ;
"RTN","DG53850D",91,0)
MAXIEN() ; Return Max IEN
"RTN","DG53850D",92,0)
 Q $O(^DGEN(27.17,"AAAA"),-1)
"RTN","DG53850D",93,0)
 ;
"RTN","DG53850E")
0^86^B162973581^n/a
"RTN","DG53850E",1,0)
DG53850E ;ALB/AAS - IMPORT WIZARD FOR ICD-10 CODES INTO FILE 2717;6/21/13 1328
"RTN","DG53850E",2,0)
 ;;5.3;Registration;**850**;Aug 13, 1993;Build 171
"RTN","DG53850E",3,0)
 ;
"RTN","DG53850E",4,0)
 Q
"RTN","DG53850E",5,0)
 ;
"RTN","DG53850E",6,0)
DIAG ;;TYPE^abbrev^affectedlimb^icd10^descrpt^^^^^^^TOTAL = 17
"RTN","DG53850E",7,0)
 ;;D~DIAGNOSIS^^^G82.20^Paraplegia, unspecified^^^^^^^
"RTN","DG53850E",8,0)
 ;;D~DIAGNOSIS^^^G82.21^Paraplegia, complete^^^^^^^
"RTN","DG53850E",9,0)
 ;;D~DIAGNOSIS^^^G82.22^Paraplegia, incomplete^^^^^^^
"RTN","DG53850E",10,0)
 ;;D~DIAGNOSIS^^^G82.50^Quadriplegia, unspecified^^^^^^^
"RTN","DG53850E",11,0)
 ;;D~DIAGNOSIS^^^G82.51^Quadriplegia, C1-C4 complete^^^^^^^
"RTN","DG53850E",12,0)
 ;;D~DIAGNOSIS^^^G82.52^Quadriplegia, C1-C4 incomplete^^^^^^^
"RTN","DG53850E",13,0)
 ;;D~DIAGNOSIS^^^G82.53^Quadriplegia, C5-C7 complete^^^^^^^
"RTN","DG53850E",14,0)
 ;;D~DIAGNOSIS^^^G82.54^Quadriplegia, C5-C7 incomplete^^^^^^^
"RTN","DG53850E",15,0)
 ;;D~DIAGNOSIS^^^H54.0^Blindness, both eyes^^^^^^^
"RTN","DG53850E",16,0)
 ;;D~DIAGNOSIS^^^H54.10^Blindness, one eye, low vision other eye, unspecified eyes^^^^^^^
"RTN","DG53850E",17,0)
 ;;D~DIAGNOSIS^^^H54.11^Blindness, right eye, low vision left eye^^^^^^^
"RTN","DG53850E",18,0)
 ;;D~DIAGNOSIS^^^H54.12^Blindness, left eye, low vision right eye^^^^^^^
"RTN","DG53850E",19,0)
 ;;D~DIAGNOSIS^^^H54.40^Blindness, one eye, unspecified eye^^^^^^^
"RTN","DG53850E",20,0)
 ;;D~DIAGNOSIS^^^H54.41^Blindness, right eye, normal vision left eye^^^^^^^
"RTN","DG53850E",21,0)
 ;;D~DIAGNOSIS^^^H54.42^Blindness, left eye, normal vision right eye^^^^^^^
"RTN","DG53850E",22,0)
 ;;D~DIAGNOSIS^^^H54.8^Legal blindness, as defined in USA^^^^^^^
"RTN","DG53850E",23,0)
 ;;D~DIAGNOSIS^^^R40.3^Persistent vegetative state^^^^^^^
"RTN","DG53850E",24,0)
 ;;
"RTN","DG53850E",25,0)
PROC ;;TYPE^abbrev^affectedlimb^icd10^descrpt^^^^^^^TOTAL
"RTN","DG53850E",26,0)
 ;;P~PROCEDURE^RUE^Right Upper Extremety^0X600ZZ^Detachment at Right Forequarter, Open Approach^^^^^^^
"RTN","DG53850E",27,0)
 ;;P~PROCEDURE^LUE^Left upper Extremety^0X610ZZ^Detachment at Left Forequarter, Open Approach^^^^^^^
"RTN","DG53850E",28,0)
 ;;P~PROCEDURE^RUE^Right Upper Extremety^0X620ZZ^Detachment at Right Shoulder Region, Open Approach^^^^^^^
"RTN","DG53850E",29,0)
 ;;P~PROCEDURE^LUE^Left upper Extremety^0X630ZZ^Detachment at Left Shoulder Region, Open Approach^^^^^^^
"RTN","DG53850E",30,0)
 ;;P~PROCEDURE^RUE^Right Upper Extremety^0X680Z1^Detachment at Right Upper Arm, High, Open Approach^^^^^^^
"RTN","DG53850E",31,0)
 ;;P~PROCEDURE^RUE^Right Upper Extremety^0X680Z2^Detachment at Right Upper Arm, Mid, Open Approach^^^^^^^
"RTN","DG53850E",32,0)
 ;;P~PROCEDURE^RUE^Right Upper Extremety^0X680Z3^Detachment at Right Upper Arm, Low, Open Approach^^^^^^^
"RTN","DG53850E",33,0)
 ;;P~PROCEDURE^LUE^Left upper Extremety^0X690Z1^Detachment at Left Upper Arm, High, Open Approach^^^^^^^
"RTN","DG53850E",34,0)
 ;;P~PROCEDURE^LUE^Left upper Extremety^0X690Z2^Detachment at Left Upper Arm, Mid, Open Approach^^^^^^^
"RTN","DG53850E",35,0)
 ;;P~PROCEDURE^LUE^Left upper Extremety^0X690Z3^Detachment at Left Upper Arm, Low, Open Approach^^^^^^^
"RTN","DG53850E",36,0)
 ;;P~PROCEDURE^RUE^Right Upper Extremety^0X6B0ZZ^Detachment at Right Elbow Region, Open Approach^^^^^^^
"RTN","DG53850E",37,0)
 ;;P~PROCEDURE^LUE^Left upper Extremety^0X6C0ZZ^Detachment at Left Elbow Region, Open Approach^^^^^^^
"RTN","DG53850E",38,0)
 ;;P~PROCEDURE^RUE^Right Upper Extremety^0X6D0Z1^Detachment at Right Lower Arm, High, Open Approach^^^^^^^
"RTN","DG53850E",39,0)
 ;;P~PROCEDURE^RUE^Right Upper Extremety^0X6D0Z2^Detachment at Right Lower Arm, Mid, Open Approach^^^^^^^
"RTN","DG53850E",40,0)
 ;;P~PROCEDURE^RUE^Right Upper Extremety^0X6D0Z3^Detachment at Right Lower Arm, Low, Open Approach^^^^^^^
"RTN","DG53850E",41,0)
 ;;P~PROCEDURE^LUE^Left upper Extremety^0X6F0Z1^Detachment at Left Lower Arm, High, Open Approach^^^^^^^
"RTN","DG53850E",42,0)
 ;;P~PROCEDURE^LUE^Left upper Extremety^0X6F0Z2^Detachment at Left Lower Arm, Mid, Open Approach^^^^^^^
"RTN","DG53850E",43,0)
 ;;P~PROCEDURE^LUE^Left upper Extremety^0X6F0Z3^Detachment at Left Lower Arm, Low, Open Approach^^^^^^^
"RTN","DG53850E",44,0)
 ;;P~PROCEDURE^RUE^Right Upper Extremety^0X6J0Z0^Detachment at Right Hand, Complete, Open Approach^^^^^^^
"RTN","DG53850E",45,0)
 ;;P~PROCEDURE^RUE^Right Upper Extremety^0X6J0Z4^Detachment at Right Hand, Complete 1st Ray, Open Approach^^^^^^^
"RTN","DG53850E",46,0)
 ;;P~PROCEDURE^RUE^Right Upper Extremety^0X6J0Z5^Detachment at Right Hand, Complete 2nd Ray, Open Approach^^^^^^^
"RTN","DG53850E",47,0)
 ;;P~PROCEDURE^RUE^Right Upper Extremety^0X6J0Z6^Detachment at Right Hand, Complete 3rd Ray, Open Approach^^^^^^^
"RTN","DG53850E",48,0)
 ;;P~PROCEDURE^RUE^Right Upper Extremety^0X6J0Z7^Detachment at Right Hand, Complete 4th Ray, Open Approach^^^^^^^
"RTN","DG53850E",49,0)
 ;;P~PROCEDURE^RUE^Right Upper Extremety^0X6J0Z8^Detachment at Right Hand, Complete 5th Ray, Open Approach^^^^^^^
"RTN","DG53850E",50,0)
 ;;P~PROCEDURE^RUE^Right Upper Extremety^0X6J0Z9^Detachment at Right Hand, Partial 1st Ray, Open Approach^^^^^^^
"RTN","DG53850E",51,0)
 ;;P~PROCEDURE^RUE^Right Upper Extremety^0X6J0ZB^Detachment at Right Hand, Partial 2nd Ray, Open Approach^^^^^^^
"RTN","DG53850E",52,0)
 ;;P~PROCEDURE^RUE^Right Upper Extremety^0X6J0ZC^Detachment at Right Hand, Partial 3rd Ray, Open Approach^^^^^^^
"RTN","DG53850E",53,0)
 ;;P~PROCEDURE^RUE^Right Upper Extremety^0X6J0ZD^Detachment at Right Hand, Partial 4th Ray, Open Approach^^^^^^^
"RTN","DG53850E",54,0)
 ;;P~PROCEDURE^RUE^Right Upper Extremety^0X6J0ZF^Detachment at Right Hand, Partial 5th Ray, Open Approach^^^^^^^
"RTN","DG53850E",55,0)
 ;;P~PROCEDURE^LUE^Left upper Extremety^0X6K0Z0^Detachment at Left Hand, Complete, Open Approach^^^^^^^
"RTN","DG53850E",56,0)
 ;;P~PROCEDURE^LUE^Left upper Extremety^0X6K0Z4^Detachment at Left Hand, Complete 1st Ray, Open Approach^^^^^^^
"RTN","DG53850E",57,0)
 ;;P~PROCEDURE^LUE^Left upper Extremety^0X6K0Z5^Detachment at Left Hand, Complete 2nd Ray, Open Approach^^^^^^^
"RTN","DG53850E",58,0)
 ;;P~PROCEDURE^LUE^Left upper Extremety^0X6K0Z6^Detachment at Left Hand, Complete 3rd Ray, Open Approach^^^^^^^
"RTN","DG53850E",59,0)
 ;;P~PROCEDURE^LUE^Left upper Extremety^0X6K0Z7^Detachment at Left Hand, Complete 4th Ray, Open Approach^^^^^^^
"RTN","DG53850E",60,0)
 ;;P~PROCEDURE^LUE^Left upper Extremety^0X6K0Z8^Detachment at Left Hand, Complete 5th Ray, Open Approach^^^^^^^
"RTN","DG53850E",61,0)
 ;;P~PROCEDURE^LUE^Left upper Extremety^0X6K0Z9^Detachment at Left Hand, Partial 1st Ray, Open Approach^^^^^^^
"RTN","DG53850E",62,0)
 ;;P~PROCEDURE^LUE^Left upper Extremety^0X6K0ZB^Detachment at Left Hand, Partial 2nd Ray, Open Approach^^^^^^^
"RTN","DG53850E",63,0)
 ;;P~PROCEDURE^LUE^Left upper Extremety^0X6K0ZC^Detachment at Left Hand, Partial 3rd Ray, Open Approach^^^^^^^
"RTN","DG53850E",64,0)
 ;;P~PROCEDURE^LUE^Left upper Extremety^0X6K0ZD^Detachment at Left Hand, Partial 4th Ray, Open Approach^^^^^^^
"RTN","DG53850E",65,0)
 ;;P~PROCEDURE^LUE^Left upper Extremety^0X6K0ZF^Detachment at Left Hand, Partial 5th Ray, Open Approach^^^^^^^
"RTN","DG53850E",66,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y620ZZ^Detachment at Right Hindquarter, Open Approach^^^^^^^
"RTN","DG53850E",67,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y630ZZ^Detachment at Left Hindquarter, Open Approach^^^^^^^
"RTN","DG53850E",68,0)
 ;;P~PROCEDURE^BLE^Bilateral Lower Extremities^0Y640ZZ^Detachment at Bilateral Hindquarter, Open Approach^^^^^^^
"RTN","DG53850E",69,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y670ZZ^Detachment at Right Femoral Region, Open Approach^^^^^^^
"RTN","DG53850E",70,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y680ZZ^Detachment at Left Femoral Region, Open Approach^^^^^^^
"RTN","DG53850E",71,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6C0Z1^Detachment at Right Upper Leg, High, Open Approach^^^^^^^
"RTN","DG53850E",72,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6C0Z2^Detachment at Right Upper Leg, Mid, Open Approach^^^^^^^
"RTN","DG53850E",73,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6C0Z3^Detachment at Right Upper Leg, Low, Open Approach^^^^^^^
"RTN","DG53850E",74,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6D0Z1^Detachment at Left Upper Leg, High, Open Approach^^^^^^^
"RTN","DG53850E",75,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6D0Z2^Detachment at Left Upper Leg, Mid, Open Approach^^^^^^^
"RTN","DG53850E",76,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6D0Z3^Detachment at Left Upper Leg, Low, Open Approach^^^^^^^
"RTN","DG53850E",77,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6F0ZZ^Detachment at Right Knee Region, Open Approach^^^^^^^
"RTN","DG53850E",78,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6G0ZZ^Detachment at Left Knee Region, Open Approach^^^^^^^
"RTN","DG53850E",79,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6H0Z1^Detachment at Right Lower Leg, High, Open Approach^^^^^^^
"RTN","DG53850E",80,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6H0Z2^Detachment at Right Lower Leg, Mid, Open Approach^^^^^^^
"RTN","DG53850E",81,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6H0Z3^Detachment at Right Lower Leg, Low, Open Approach^^^^^^^
"RTN","DG53850E",82,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6J0Z1^Detachment at Left Lower Leg, High, Open Approach^^^^^^^
"RTN","DG53850E",83,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6J0Z2^Detachment at Left Lower Leg, Mid, Open Approach^^^^^^^
"RTN","DG53850E",84,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6J0Z3^Detachment at Left Lower Leg, Low, Open Approach^^^^^^^
"RTN","DG53850E",85,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6M0Z0^Detachment at Right Foot, Complete, Open Approach^^^^^^^
"RTN","DG53850E",86,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6M0Z4^Detachment at Right Foot, Complete 1st Ray, Open Approach^^^^^^^
"RTN","DG53850E",87,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6M0Z5^Detachment at Right Foot, Complete 2nd Ray, Open Approach^^^^^^^
"RTN","DG53850E",88,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6M0Z6^Detachment at Right Foot, Complete 3rd Ray, Open Approach^^^^^^^
"RTN","DG53850E",89,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6M0Z7^Detachment at Right Foot, Complete 4th Ray, Open Approach^^^^^^^
"RTN","DG53850E",90,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6M0Z8^Detachment at Right Foot, Complete 5th Ray, Open Approach^^^^^^^
"RTN","DG53850E",91,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6M0Z9^Detachment at Right Foot, Partial 1st Ray, Open Approach^^^^^^^
"RTN","DG53850E",92,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6M0ZB^Detachment at Right Foot, Partial 2nd Ray, Open Approach^^^^^^^
"RTN","DG53850E",93,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6M0ZC^Detachment at Right Foot, Partial 3rd Ray, Open Approach^^^^^^^
"RTN","DG53850E",94,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6M0ZD^Detachment at Right Foot, Partial 4th Ray, Open Approach^^^^^^^
"RTN","DG53850E",95,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6M0ZF^Detachment at Right Foot, Partial 5th Ray, Open Approach^^^^^^^
"RTN","DG53850E",96,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6N0Z0^Detachment at Left Foot, Complete, Open Approach^^^^^^^
"RTN","DG53850E",97,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6N0Z4^Detachment at Left Foot, Complete 1st Ray, Open Approach^^^^^^^
"RTN","DG53850E",98,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6N0Z5^Detachment at Left Foot, Complete 2nd Ray, Open Approach^^^^^^^
"RTN","DG53850E",99,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6N0Z6^Detachment at Left Foot, Complete 3rd Ray, Open Approach^^^^^^^
"RTN","DG53850E",100,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6N0Z7^Detachment at Left Foot, Complete 4th Ray, Open Approach^^^^^^^
"RTN","DG53850E",101,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6N0Z8^Detachment at Left Foot, Complete 5th Ray, Open Approach^^^^^^^
"RTN","DG53850E",102,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6N0Z9^Detachment at Left Foot, Partial 1st Ray, Open Approach^^^^^^^
"RTN","DG53850E",103,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6N0ZB^Detachment at Left Foot, Partial 2nd Ray, Open Approach^^^^^^^
"RTN","DG53850E",104,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6N0ZC^Detachment at Left Foot, Partial 3rd Ray, Open Approach^^^^^^^
"RTN","DG53850E",105,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6N0ZD^Detachment at Left Foot, Partial 4th Ray, Open Approach^^^^^^^
"RTN","DG53850E",106,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6N0ZF^Detachment at Left Foot, Partial 5th Ray, Open Approach^^^^^^^
"RTN","DG53850E",107,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6P0Z0^Detachment at Right 1st Toe, Complete, Open Approach^^^^^^^
"RTN","DG53850E",108,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6P0Z1^Detachment at Right 1st Toe, High, Open Approach^^^^^^^
"RTN","DG53850E",109,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6P0Z2^Detachment at Right 1st Toe, Mid, Open Approach^^^^^^^
"RTN","DG53850E",110,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6P0Z3^Detachment at Right 1st Toe, Low, Open Approach^^^^^^^
"RTN","DG53850E",111,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6Q0Z0^Detachment at Left 1st Toe, Complete, Open Approach^^^^^^^
"RTN","DG53850E",112,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6Q0Z1^Detachment at Left 1st Toe, High, Open Approach^^^^^^^
"RTN","DG53850E",113,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6Q0Z2^Detachment at Left 1st Toe, Mid, Open Approach^^^^^^^
"RTN","DG53850E",114,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6Q0Z3^Detachment at Left 1st Toe, Low, Open Approach^^^^^^^
"RTN","DG53850E",115,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6R0Z0^Detachment at Right 2nd Toe, Complete, Open Approach^^^^^^^
"RTN","DG53850E",116,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6R0Z1^Detachment at Right 2nd Toe, High, Open Approach^^^^^^^
"RTN","DG53850E",117,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6R0Z2^Detachment at Right 2nd Toe, Mid, Open Approach^^^^^^^
"RTN","DG53850E",118,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6R0Z3^Detachment at Right 2nd Toe, Low, Open Approach^^^^^^^
"RTN","DG53850E",119,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6S0Z0^Detachment at Left 2nd Toe, Complete, Open Approach^^^^^^^
"RTN","DG53850E",120,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6S0Z1^Detachment at Left 2nd Toe, High, Open Approach^^^^^^^
"RTN","DG53850E",121,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6S0Z2^Detachment at Left 2nd Toe, Mid, Open Approach^^^^^^^
"RTN","DG53850E",122,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6S0Z3^Detachment at Left 2nd Toe, Low, Open Approach^^^^^^^
"RTN","DG53850E",123,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6T0Z0^Detachment at Right 3rd Toe, Complete, Open Approach^^^^^^^
"RTN","DG53850E",124,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6T0Z1^Detachment at Right 3rd Toe, High, Open Approach^^^^^^^
"RTN","DG53850E",125,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6T0Z2^Detachment at Right 3rd Toe, Mid, Open Approach^^^^^^^
"RTN","DG53850E",126,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6T0Z3^Detachment at Right 3rd Toe, Low, Open Approach^^^^^^^
"RTN","DG53850E",127,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6U0Z0^Detachment at Left 3rd Toe, Complete, Open Approach^^^^^^^
"RTN","DG53850E",128,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6U0Z1^Detachment at Left 3rd Toe, High, Open Approach^^^^^^^
"RTN","DG53850E",129,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6U0Z2^Detachment at Left 3rd Toe, Mid, Open Approach^^^^^^^
"RTN","DG53850E",130,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6U0Z3^Detachment at Left 3rd Toe, Low, Open Approach^^^^^^^
"RTN","DG53850E",131,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6V0Z0^Detachment at Right 4th Toe, Complete, Open Approach^^^^^^^
"RTN","DG53850E",132,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6V0Z1^Detachment at Right 4th Toe, High, Open Approach^^^^^^^
"RTN","DG53850E",133,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6V0Z2^Detachment at Right 4th Toe, Mid, Open Approach^^^^^^^
"RTN","DG53850E",134,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6V0Z3^Detachment at Right 4th Toe, Low, Open Approach^^^^^^^
"RTN","DG53850E",135,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6W0Z0^Detachment at Left 4th Toe, Complete, Open Approach^^^^^^^
"RTN","DG53850E",136,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6W0Z1^Detachment at Left 4th Toe, High, Open Approach^^^^^^^
"RTN","DG53850E",137,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6W0Z2^Detachment at Left 4th Toe, Mid, Open Approach^^^^^^^
"RTN","DG53850E",138,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6W0Z3^Detachment at Left 4th Toe, Low, Open Approach^^^^^^^
"RTN","DG53850E",139,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6X0Z0^Detachment at Right 5th Toe, Complete, Open Approach^^^^^^^
"RTN","DG53850E",140,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6X0Z1^Detachment at Right 5th Toe, High, Open Approach^^^^^^^
"RTN","DG53850E",141,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6X0Z2^Detachment at Right 5th Toe, Mid, Open Approach^^^^^^^
"RTN","DG53850E",142,0)
 ;;P~PROCEDURE^RLE^Right Lower Extremety^0Y6X0Z3^Detachment at Right 5th Toe, Low, Open Approach^^^^^^^
"RTN","DG53850E",143,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6Y0Z0^Detachment at Left 5th Toe, Complete, Open Approach^^^^^^^
"RTN","DG53850E",144,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6Y0Z1^Detachment at Left 5th Toe, High, Open Approach^^^^^^^
"RTN","DG53850E",145,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6Y0Z2^Detachment at Left 5th Toe, Mid, Open Approach^^^^^^^
"RTN","DG53850E",146,0)
 ;;P~PROCEDURE^LLE^Left Lower Extremety^0Y6Y0Z3^Detachment at Left 5th Toe, Low, Open Approach^^^^^^^
"RTN","DG53850E",147,0)
 ;;
"RTN","DGENA5")
0^2^B40195760^B31534116
"RTN","DGENA5",1,0)
DGENA5 ;ISA/Zoltan,ALB/CKN - Enrollment API - CD Processing ;8/15/08 11:10am
"RTN","DGENA5",2,0)
 ;;5.3;Registration;**232,688,850**;Aug 13, 1993;Build 171
"RTN","DGENA5",3,0)
 ;Phase II API's Related to Catastrophic Disability.
"RTN","DGENA5",4,0)
 ;
"RTN","DGENA5",5,0)
 ; The following variable names are used consistently in this routine:
"RTN","DGENA5",6,0)
 ; DFN    = IEN in PATIENT file (#2).
"RTN","DGENA5",7,0)
 ; REASON = IEN in CATASTROPHIC DISABILITY REASONS file (#2).
"RTN","DGENA5",8,0)
 ; COND   = Sub-ien PATIENT(#2) CD STATUS CONDITIONS field (#.398).
"RTN","DGENA5",9,0)
 ; SCORE  = Score achieved by veteran on a test (#2, #.398, #1).
"RTN","DGENA5",10,0)
 ; PERM   = Permanent Indicator (#2, #.398, #2).
"RTN","DGENA5",11,0)
 ; D2     = Secondary delimiter (optional.)
"RTN","DGENA5",12,0)
 ; 
"RTN","DGENA5",13,0)
 ; Processing related to a patient (#2).
"RTN","DGENA5",14,0)
VCD(DFN) ; Veteran Catastrophically Disabled? (#.39)
"RTN","DGENA5",15,0)
 Q $P($G(^DPT(DFN,.39)),"^",6)
"RTN","DGENA5",16,0)
CONDHELP(DFN,COND) ; Display help text for a condition.
"RTN","DGENA5",17,0)
 ; Applies to the PATIENT file (#2) CD STATUS CONDITIONS field (#.398)
"RTN","DGENA5",18,0)
 ; Note - Help text stored in 27.17 CD REASONS.
"RTN","DGENA5",19,0)
 N REASON
"RTN","DGENA5",20,0)
 S REASON=$$REASON(DFN,COND)
"RTN","DGENA5",21,0)
 D HELP(REASON)
"RTN","DGENA5",22,0)
 Q
"RTN","DGENA5",23,0)
CONDINP(DFN,COND,SCORE) ; Validate a score entered by the user for a PATIENT.
"RTN","DGENA5",24,0)
 N REASON
"RTN","DGENA5",25,0)
 S REASON=$$REASON(DFN,COND)
"RTN","DGENA5",26,0)
 Q $$VALID(REASON,SCORE)
"RTN","DGENA5",27,0)
CONDMET(DFN,COND) ; Determine whether a condition meets the criteria.
"RTN","DGENA5",28,0)
 N SCORE,PERM
"RTN","DGENA5",29,0)
 S REASON=$$REASON(DFN,COND)
"RTN","DGENA5",30,0)
 S SCORE=$$PATSCORE(DFN,COND)
"RTN","DGENA5",31,0)
 S PERM=$$PATPERM(DFN,COND)
"RTN","DGENA5",32,0)
 Q $$RANGEMET(REASON,SCORE,PERM)
"RTN","DGENA5",33,0)
 ; Patient Field Lookup.
"RTN","DGENA5",34,0)
REASON(DFN,COND) ; Get the CD REASON for this patient, for this condition.
"RTN","DGENA5",35,0)
 N REASON
"RTN","DGENA5",36,0)
 I DFN=""!(COND="") D
"RTN","DGENA5",37,0)
 . S REASON=$G(DGCDREAS)
"RTN","DGENA5",38,0)
 . I REASON="",$G(ITEM)'="" S REASON=$G(DGCDIS("COND",ITEM))
"RTN","DGENA5",39,0)
 E  S REASON=$P($G(^DPT(DFN,.398,COND,0)),"^",1)
"RTN","DGENA5",40,0)
 Q REASON
"RTN","DGENA5",41,0)
PATSCORE(DFN,COND) ; Get the TEST SCORE for this patient, for this condition.
"RTN","DGENA5",42,0)
 N REASON
"RTN","DGENA5",43,0)
 I DFN=""!(COND="") Q ""
"RTN","DGENA5",44,0)
 S REASON=$P($G(^DPT(DFN,.398,COND,0)),"^",2)
"RTN","DGENA5",45,0)
 Q REASON
"RTN","DGENA5",46,0)
PATPERM(DFN,COND) ; Get the PERMANENT INDICATOR for this patient+condition.
"RTN","DGENA5",47,0)
 N REASON
"RTN","DGENA5",48,0)
 I DFN=""!(COND="") Q ""
"RTN","DGENA5",49,0)
 S REASON=$P($G(^DPT(DFN,.398,COND,0)),"^",3)
"RTN","DGENA5",50,0)
 Q REASON
"RTN","DGENA5",51,0)
 ; Processing related to catastrophic disability reasons (#27.17)
"RTN","DGENA5",52,0)
HELP(REASON) ; Display help text from 27.17 CD REASONS.
"RTN","DGENA5",53,0)
 N LINE
"RTN","DGENA5",54,0)
 Q:$$TYPE(REASON)'="C"
"RTN","DGENA5",55,0)
 S LINE=0
"RTN","DGENA5",56,0)
 W !,"HELP TEXT FOR ",$$NAME(REASON),!
"RTN","DGENA5",57,0)
 F  S LINE=$O(^DGEN(27.17,REASON,3,LINE)) Q:'LINE  D
"RTN","DGENA5",58,0)
 . W ?3,^DGEN(27.17,REASON,3,LINE,0),!
"RTN","DGENA5",59,0)
 Q
"RTN","DGENA5",60,0)
VALID(REASON,SCORE) ; Validate a proposed score for a test.
"RTN","DGENA5",61,0)
 N TEST,X
"RTN","DGENA5",62,0)
 S TEST=$$VALSCORE(REASON)
"RTN","DGENA5",63,0)
 S X=SCORE
"RTN","DGENA5",64,0)
 I @TEST Q 1
"RTN","DGENA5",65,0)
 Q 0
"RTN","DGENA5",66,0)
RANGEMET(REASON,SCORE,PERM) ; Determine whether this reason is satisfied.
"RTN","DGENA5",67,0)
 N TEST
"RTN","DGENA5",68,0)
 S TEST=$$RANGE(REASON)
"RTN","DGENA5",69,0)
 I @TEST Q 1
"RTN","DGENA5",70,0)
 Q 0
"RTN","DGENA5",71,0)
 ; APIs to access CD REASONS file.
"RTN","DGENA5",72,0)
NAME(REASON) ; Return NAME (.01) for this CD REASON.
"RTN","DGENA5",73,0)
 Q:'REASON ""
"RTN","DGENA5",74,0)
 Q $P($G(^DGEN(27.17,REASON,0)),"^",1)
"RTN","DGENA5",75,0)
TYPE(REASON) ; Return TYPE (#1) for this CD REASON.
"RTN","DGENA5",76,0)
 Q:'REASON ""
"RTN","DGENA5",77,0)
 Q $P($G(^DGEN(27.17,REASON,0)),"^",2)
"RTN","DGENA5",78,0)
VALSCORE(REASON) ; Return VALIDATION (#7) for this CD REASON.
"RTN","DGENA5",79,0)
 ; This determines whether a score is valid at all.
"RTN","DGENA5",80,0)
 Q $G(^DGEN(27.17,REASON,4))
"RTN","DGENA5",81,0)
RANGE(REASON) ; Return TEST SCORE RANGE (#5) for this CD REASON.
"RTN","DGENA5",82,0)
 ; This determines whether the score qualifies for CD.
"RTN","DGENA5",83,0)
 Q $G(^DGEN(27.17,REASON,2))
"RTN","DGENA5",84,0)
FILENAME(REASON) ; Return the file name to which this CD Reason points.
"RTN","DGENA5",85,0)
 N CODEPTR,DIC,DO
"RTN","DGENA5",86,0)
 S U=$G(U,"^")
"RTN","DGENA5",87,0)
 S CODEPTR=$$CODEPTR(REASON)
"RTN","DGENA5",88,0)
 I CODEPTR="" Q ""
"RTN","DGENA5",89,0)
 S DIC="^"_$P(CODEPTR,";",2)
"RTN","DGENA5",90,0)
 S DIC(0)=""
"RTN","DGENA5",91,0)
 D DO^DIC1
"RTN","DGENA5",92,0)
 Q $P(DO,"^",1)
"RTN","DGENA5",93,0)
CODE(REASON) ; Return the HL7 Transmission Code for this CD Reason.
"RTN","DGENA5",94,0)
 Q:'REASON ""
"RTN","DGENA5",95,0)
 Q $P($G(^DGEN(27.17,REASON,0)),"^",4)
"RTN","DGENA5",96,0)
CODENAME(REASON) ; Return name of code associated with this CD Reason.
"RTN","DGENA5",97,0)
 N CODEPTR,CODEIEN,CODEGLO,CODEPC,CODENAME,CODE
"RTN","DGENA5",98,0)
 S CODEPTR=$$CODEPTR(REASON)
"RTN","DGENA5",99,0)
 I CODEPTR="" Q ""
"RTN","DGENA5",100,0)
 S CODEIEN=$P(CODEPTR,";",1)
"RTN","DGENA5",101,0)
 S CODEGLO=$P(CODEPTR,";",2)
"RTN","DGENA5",102,0)
 S CODEPC=$S(CODEGLO="ICD9(":3,CODEGLO="ICD0(":4,CODEGLO="ICPT(":2)
"RTN","DGENA5",103,0)
 S CODEGLO="^"_CODEGLO_CODEIEN_",0)"
"RTN","DGENA5",104,0)
 S CODE=$P(@CODEGLO,"^",1)
"RTN","DGENA5",105,0)
 S CODENAME=$P(@CODEGLO,"^",CODEPC)
"RTN","DGENA5",106,0)
 Q CODENAME
"RTN","DGENA5",107,0)
CODEPTR(REASON) ; Internal label--get pointer to CODE.
"RTN","DGENA5",108,0)
 Q $P($G(^DGEN(27.17,REASON,0)),"^",3)
"RTN","DGENA5",109,0)
LSCREEN(LIMBCODE) ; Used to validate LIMB in screen.
"RTN","DGENA5",110,0)
 N REASON
"RTN","DGENA5",111,0)
 S REASON=""
"RTN","DGENA5",112,0)
 I $G(D0)=""!($G(D1)="") D
"RTN","DGENA5",113,0)
 . S REASON=$G(DGCDREAS)
"RTN","DGENA5",114,0)
 . I REASON="",$G(ITEM)'="" S REASON=$G(DGCDIS("PROC",ITEM))
"RTN","DGENA5",115,0)
 E  S REASON=$P($G(^DPT(D0,.397,D1,0)),"^",1)
"RTN","DGENA5",116,0)
 I REASON="" Q ".RUE.LUE.RLE.LLE.BLE.BLU."[("."_LIMBCODE_".")
"RTN","DGENA5",117,0)
 Q $$LIMBOK(REASON,LIMBCODE)
"RTN","DGENA5",118,0)
LIMBOK(REASON,LIMBCODE) ; Return 1/0 Affected Extremity OK for this REASON.
"RTN","DGENA5",119,0)
 N LIMBIEN,VALID
"RTN","DGENA5",120,0)
 S VALID=0
"RTN","DGENA5",121,0)
 S LIMBIEN=0
"RTN","DGENA5",122,0)
 F  S LIMBIEN=$$NEXTLIMB(REASON,LIMBIEN) Q:'LIMBIEN  D  Q:VALID
"RTN","DGENA5",123,0)
 . I $$LIMBCODE(REASON,LIMBIEN)=LIMBCODE S VALID=1
"RTN","DGENA5",124,0)
 Q VALID
"RTN","DGENA5",125,0)
NEXTLIMB(REASON,LIMBIEN) ; Get next possible limb for this REASON.
"RTN","DGENA5",126,0)
 I 'LIMBIEN S LIMBIEN=0
"RTN","DGENA5",127,0)
 S LIMBIEN=$O(^DGEN(27.17,REASON,1,LIMBIEN))
"RTN","DGENA5",128,0)
 I 'LIMBIEN S LIMBIEN=""
"RTN","DGENA5",129,0)
 Q LIMBIEN
"RTN","DGENA5",130,0)
LIMBCODE(REASON,LIMBIEN) ; Return limb code for an affected limb.
"RTN","DGENA5",131,0)
 Q $P($G(^DGEN(27.17,REASON,1,LIMBIEN,0)),"^",1)
"RTN","DGENA5",132,0)
 ; HL7-related changes.
"RTN","DGENA5",133,0)
HL7TORSN(HL7VAL,D2) ; Return REASON IEN for a HL7 Transmission Value.
"RTN","DGENA5",134,0)
 ; This function returns the IEN or 0 if there is none.
"RTN","DGENA5",135,0)
 S D2=$S(11[$D(D2):D2,11[$D(HLECH):$E(HLECH),1:"~")
"RTN","DGENA5",136,0)
 I $P("KATZ^FOLS^RUG3^FIM^GAF","^",$P(HL7VAL,D2,1))=$P(HL7VAL,D2,2) D
"RTN","DGENA5",137,0)
 . S HL7VAL=$P("KATZ^FOLS^RUG3^FIM^GAF","^",+HL7VAL)
"RTN","DGENA5",138,0)
 E  S HL7VAL=$P(HL7VAL,D2)
"RTN","DGENA5",139,0)
 Q:HL7VAL="" 0
"RTN","DGENA5",140,0)
 Q +$O(^DGEN(27.17,"C",HL7VAL,""))
"RTN","DGENA5",141,0)
RSNTOHL7(REASON,D2) ; Return HL7 Segment Value for this Reason.
"RTN","DGENA5",142,0)
 Q:REASON="" 0
"RTN","DGENA5",143,0)
 S D2=$S(11[$D(D2):D2,11[$D(HLECH):$E(HLECH),1:"~")
"RTN","DGENA5",144,0)
 N NAME,NUMBER,TABLE,FILE,CODE,HL7VAL
"RTN","DGENA5",145,0)
 I $$TYPE(REASON)="C" D
"RTN","DGENA5",146,0)
 . S CODE=$$CODE(REASON)
"RTN","DGENA5",147,0)
 . Q:CODE=""
"RTN","DGENA5",148,0)
 . S NUMBER=$L($P("KATZ^FOLS^RUG3^FIM^GAF^",CODE),"^")
"RTN","DGENA5",149,0)
 . Q:NUMBER>5
"RTN","DGENA5",150,0)
 . S TABLE="VA0043"
"RTN","DGENA5",151,0)
 . S HL7VAL=NUMBER_D2_CODE_D2_TABLE
"RTN","DGENA5",152,0)
 E  D
"RTN","DGENA5",153,0)
 . S NAME=$$NAME(REASON)
"RTN","DGENA5",154,0)
 . Q:NAME=""
"RTN","DGENA5",155,0)
 . S CODE=$$CODE(REASON)
"RTN","DGENA5",156,0)
 . Q:CODE=""
"RTN","DGENA5",157,0)
 . S FILE=$$FILENAME(REASON)
"RTN","DGENA5",158,0)
 . Q:FILE=""
"RTN","DGENA5",159,0)
 . S HL7VAL=CODE_D2_NAME_D2_FILE
"RTN","DGENA5",160,0)
 ; NOTE:  an undefined variable error on the following line may
"RTN","DGENA5",161,0)
 ;        result, if someone has tampered with the CATASTROPHIC
"RTN","DGENA5",162,0)
 ;        DISABILITY REASONS file (#27.17).  
"RTN","DGENA5",163,0)
 Q HL7VAL
"RTN","DGENA5",164,0)
HLTOLIMB(HLVAL,D2) ; Convert HL7 transmission value to Limb code.
"RTN","DGENA5",165,0)
 ; HLVAL = HL7 text of "Affected Extremity" code.
"RTN","DGENA5",166,0)
 ; D2    = Secondary delimiter (for future expansion.)
"RTN","DGENA5",167,0)
 ; NOTE:  D2 Parameter is ignored at present, but may be
"RTN","DGENA5",168,0)
 ;        required in future if the sequence structure changes.
"RTN","DGENA5",169,0)
 Q $P("RUE-RLE-LUE-LLE-BLE-BLU","-",+HLVAL)
"RTN","DGENA5",170,0)
LIMBTOHL(LIMB,D2) ; Convert Limb code to HL7 transmission value.
"RTN","DGENA5",171,0)
 ; LIMB = Affected Extremity code: RUE = Right Upper Extremity;
"RTN","DGENA5",172,0)
 ;        LLE = Left Lower Extremity; also RLE and LUE.
"RTN","DGENA5",173,0)
 ; D2   = Secondary Delimiter to use in this HL7 sequence.
"RTN","DGENA5",174,0)
 S D2=$S(11[$D(D2):D2,11[$D(HLECH):$E(HLECH),1:"~")
"RTN","DGENA5",175,0)
 N NUMBER,HLVAL
"RTN","DGENA5",176,0)
 I "-RUE-RLE-LUE-LLE-BLE-BLU-"'[("-"_LIMB_"-")!(LIMB["-") Q ""
"RTN","DGENA5",177,0)
 S NUMBER=$L($P("-RUE-RLE-LUE-LLE-BLE-BLU","-"_LIMB_"-"),"-")
"RTN","DGENA5",178,0)
 S HLVAL=NUMBER_D2_LIMB_D2_"VA0042"
"RTN","DGENA5",179,0)
 Q HLVAL
"RTN","DGENA5",180,0)
PERMTOHL(NUMBER,D2) ; Convert Permanent Status Indicator to HL7 sequence.
"RTN","DGENA5",181,0)
 ; NUMBER = 1 for Permanent, 2 for Not Permanent, 3 for Unknown.
"RTN","DGENA5",182,0)
 ; D2     = Secondary Delimiter to use in this HL7 sequence.
"RTN","DGENA5",183,0)
 S D2=$S(11[$D(D2):D2,11[$D(HLECH):$E(HLECH),1:"~")
"RTN","DGENA5",184,0)
 N PERM,HLVAL
"RTN","DGENA5",185,0)
 S PERM=$P("PERMANENT-NOT PERMANENT-UNKNOWN","-",NUMBER)
"RTN","DGENA5",186,0)
 I PERM="" Q ""
"RTN","DGENA5",187,0)
 S HLVAL=NUMBER_D2_PERM_D2_"VA0045"
"RTN","DGENA5",188,0)
 Q HLVAL
"RTN","DGENA5",189,0)
METH2HL7(METHOD,D2) ; Convert Method of Determination to HL7 Transmission Value.
"RTN","DGENA5",190,0)
 S D2=$S(11[$D(D2):D2,11[$D(HLECH):$E(HLECH),1:"~")
"RTN","DGENA5",191,0)
 N METHS
"RTN","DGENA5",192,0)
 S METHS="AUTOMATED RECORD REVIEW^MEDICAL RECORD REVIEW^PHYSICAL EXAMINATION"
"RTN","DGENA5",193,0)
 I ".1.2.3."'[("."_METHOD_".") Q ""
"RTN","DGENA5",194,0)
 Q METHOD_D2_$P(METHS,"^",METHOD)_D2_"VA0041"
"RTN","DGENA5",195,0)
 ;
"RTN","DGENA5",196,0)
ICDVER(CODESYS) ; DG*5.3*850
"RTN","DGENA5",197,0)
 ; determine if ICD-9 or ICD-10 CD should be used
"RTN","DGENA5",198,0)
 ; To be used in DIC(S) call from input transforms from 2.396;.01 
"RTN","DGENA5",199,0)
 ; and 2.397;.01
"RTN","DGENA5",200,0)
 ; Requires DA(1) be defined
"RTN","DGENA5",201,0)
 ; output - the correct value in ICDIEN 9
"RTN","DGENA5",202,0)
 ;  ^ICDS("C","10D",30)=""
"RTN","DGENA5",203,0)
 ;  ^ICDS("C","ICD",1)=""
"RTN","DGENA5",204,0)
 ;
"RTN","DGENA5",205,0)
 ;  ^ICDS("C","10P",31)=""
"RTN","DGENA5",206,0)
 ;  ^ICDS("C","ICP",2)=""
"RTN","DGENA5",207,0)
 ; -- DDATE := date of decision
"RTN","DGENA5",208,0)
 ;    DGar
"RTN","DGENA5",209,0)
 ;    DDCDIS(DATE) := date of decision from Listman Screen, not saved yet
"RTN","DGENA5",210,0)
 ;
"RTN","DGENA5",211,0)
 N DFN1,ICDIEN,DDATE,IMPDATE
"RTN","DGENA5",212,0)
 S CODESYS=$S($G(CODESYS)="D":"10D",$G(CODESYS)="P":"10P",1:"10D")
"RTN","DGENA5",213,0)
 S DFN1=$S($G(DA(1))'="":DA(1),$G(DFN)'="":DFN,1:"")
"RTN","DGENA5",214,0)
 S DDATE=$P($G(^DPT(DFN1,.39)),"^",2) ;Date of decision
"RTN","DGENA5",215,0)
 I $G(DGCDIS("DATE")) S DDATE=DGCDIS("DATE") ;called from code, date not stored yet
"RTN","DGENA5",216,0)
 I DDATE="" S DDATE=DT
"RTN","DGENA5",217,0)
 S IMPDATE=$P($$IMPDATE^DGPTIC10($G(CODESYS)),"^",1)
"RTN","DGENA5",218,0)
 I CODESYS="10D" D
"RTN","DGENA5",219,0)
 . I DDATE<IMPDATE S ICDIEN=1
"RTN","DGENA5",220,0)
 . I DDATE'<IMPDATE S ICDIEN=30
"RTN","DGENA5",221,0)
 I CODESYS="10P" D
"RTN","DGENA5",222,0)
 . I DDATE<IMPDATE S ICDIEN=2
"RTN","DGENA5",223,0)
 . I DDATE'<IMPDATE S ICDIEN=31
"RTN","DGENA5",224,0)
 Q ICDIEN
"RTN","DGENCDA2")
0^79^B16663284^B16601492
"RTN","DGENCDA2",1,0)
DGENCDA2 ;ALB/CJM,ISA/KWP,Zoltan,JAN,CKN - Catastrophic Disability API - File Data;May 24, 1999
"RTN","DGENCDA2",2,0)
 ;;5.3;Registration;**232,387,653,850**;Aug 13,1993;Build 171
"RTN","DGENCDA2",3,0)
 ;
"RTN","DGENCDA2",4,0)
STORE(DFN,DGCDIS,ERROR) ;
"RTN","DGENCDA2",5,0)
 ;Description: Creates a catastrophic disability record for a patient.
"RTN","DGENCDA2",6,0)
 ;          Attempts to add catastrophically disabled eligibility code.
"RTN","DGENCDA2",7,0)
 ;Input:
"RTN","DGENCDA2",8,0)
 ;  DFN - Patient IEN
"RTN","DGENCDA2",9,0)
 ;  DGCDIS - the catastrophic disability array, passed by reference
"RTN","DGENCDA2",10,0)
 ;Output:
"RTN","DGENCDA2",11,0)
 ;  Function Value - returns 1 if successful, otherwise 0
"RTN","DGENCDA2",12,0)
 ;  ERROR - if not successful, an error message is returned,pass
"RTN","DGENCDA2",13,0)
 ;          by reference
"RTN","DGENCDA2",14,0)
 N SUCCESS,FDA,SUB,HIEN,HSUB,FDB,NIEN,EIEN,DIERR,DGCDERR
"RTN","DGENCDA2",15,0)
 S SUCCESS=1
"RTN","DGENCDA2",16,0)
 S ERROR=""
"RTN","DGENCDA2",17,0)
 D  ;drops out if invalid condition found
"RTN","DGENCDA2",18,0)
 . I $G(DFN),$D(^DPT(DFN,0))
"RTN","DGENCDA2",19,0)
 . E  S SUCCESS=0,ERROR="PATIENT NOT FOUND" Q
"RTN","DGENCDA2",20,0)
 . I '$$LOCK^DGENCDA1(DFN) S SUCCESS=0,ERROR="RECORD IN USE, CAN NOT BE EDITED" Q
"RTN","DGENCDA2",21,0)
 . I '$$CHECK^DGENCDA1(.DGCDIS,.ERROR) S SUCCESS=0 Q
"RTN","DGENCDA2",22,0)
 . S HIEN=$P($G(^DPT(DFN,.399,0)),"^",3)+1
"RTN","DGENCDA2",23,0)
 . S HIEN=HIEN_","_DFN_","
"RTN","DGENCDA2",24,0)
 . S FDA(2,DFN_",",.39)=DGCDIS("VCD")
"RTN","DGENCDA2",25,0)
 . S FDB(2.399,HIEN,.39)=DGCDIS("VCD")
"RTN","DGENCDA2",26,0)
 . S FDA(2,DFN_",",.391)=DGCDIS("BY")
"RTN","DGENCDA2",27,0)
 . S FDB(2.399,HIEN,.391)=DGCDIS("BY")
"RTN","DGENCDA2",28,0)
 . S FDA(2,DFN_",",.392)=DGCDIS("DATE")
"RTN","DGENCDA2",29,0)
 . S FDB(2.399,HIEN,.392)=DGCDIS("DATE")
"RTN","DGENCDA2",30,0)
 . S FDA(2,DFN_",",.393)=DGCDIS("FACDET")
"RTN","DGENCDA2",31,0)
 . S FDB(2.399,HIEN,.393)=DGCDIS("FACDET")
"RTN","DGENCDA2",32,0)
 . S FDA(2,DFN_",",.394)=DGCDIS("REVDTE")
"RTN","DGENCDA2",33,0)
 . S FDB(2.399,HIEN,.394)=DGCDIS("REVDTE")
"RTN","DGENCDA2",34,0)
 . S FDA(2,DFN_",",.395)=DGCDIS("METDET")
"RTN","DGENCDA2",35,0)
 . S FDB(2.399,HIEN,.395)=DGCDIS("METDET")
"RTN","DGENCDA2",36,0)
 . S FDA(2,DFN_",",.3951)=DGCDIS("VETREQDT")
"RTN","DGENCDA2",37,0)
 . S FDB(2.399,HIEN,.3951)=DGCDIS("VETREQDT")
"RTN","DGENCDA2",38,0)
 . S FDA(2,DFN_",",.3952)=DGCDIS("DTFACIRV")
"RTN","DGENCDA2",39,0)
 . S FDB(2.399,HIEN,.3952)=DGCDIS("DTFACIRV")
"RTN","DGENCDA2",40,0)
 . S FDA(2,DFN_",",.3953)=DGCDIS("DTVETNOT")
"RTN","DGENCDA2",41,0)
 . S FDB(2.399,HIEN,.3953)=DGCDIS("DTVETNOT")
"RTN","DGENCDA2",42,0)
 . S SUB="",HSUB=0
"RTN","DGENCDA2",43,0)
 . S NIEN=0 F  S SUB=$O(DGCDIS("DIAG",SUB)) Q:'SUB  D
"RTN","DGENCDA2",44,0)
 . . I DGCDIS("DIAG",SUB)="" Q
"RTN","DGENCDA2",45,0)
 . . S NIEN=NIEN+1
"RTN","DGENCDA2",46,0)
 . . S FDB(2.396,NIEN_","_DFN_",",.01)=DGCDIS("DIAG",SUB)
"RTN","DGENCDA2",47,0)
 . . S HSUB=HSUB+1
"RTN","DGENCDA2",48,0)
 . . S FDB(2.409,HSUB_","_HIEN,.01)=DGCDIS("DIAG",SUB)
"RTN","DGENCDA2",49,0)
 . S NIEN=0 F  S SUB=$O(DGCDIS("PROC",SUB)) Q:'SUB  D
"RTN","DGENCDA2",50,0)
 . . I DGCDIS("PROC",SUB)="" Q
"RTN","DGENCDA2",51,0)
 . . S EIEN=0 F  S EIEN=$O(DGCDIS("EXT",SUB,EIEN)) Q:'EIEN  D
"RTN","DGENCDA2",52,0)
 . . . S NIEN=NIEN+1
"RTN","DGENCDA2",53,0)
 . . . S FDB(2.397,NIEN_","_DFN_",",.01)=DGCDIS("PROC",SUB)
"RTN","DGENCDA2",54,0)
 . . . S HSUB=HSUB+1
"RTN","DGENCDA2",55,0)
 . . . S FDB(2.409,HSUB_","_HIEN,.01)=DGCDIS("PROC",SUB)
"RTN","DGENCDA2",56,0)
 . . . S FDB(2.397,NIEN_","_DFN_",",1)=DGCDIS("EXT",SUB,EIEN)
"RTN","DGENCDA2",57,0)
 . . . S FDB(2.409,HSUB_","_HIEN,1)=DGCDIS("EXT",SUB,EIEN)
"RTN","DGENCDA2",58,0)
 . S NIEN=0 F  S SUB=$O(DGCDIS("COND",SUB)) Q:'SUB  D
"RTN","DGENCDA2",59,0)
 . . I DGCDIS("COND",SUB)="" Q
"RTN","DGENCDA2",60,0)
 . . S NIEN=NIEN+1
"RTN","DGENCDA2",61,0)
 . . S FDB(2.398,NIEN_","_DFN_",",.01)=DGCDIS("COND",SUB)
"RTN","DGENCDA2",62,0)
 . . S HSUB=HSUB+1
"RTN","DGENCDA2",63,0)
 . . S FDB(2.409,HSUB_","_HIEN,.01)=DGCDIS("COND",SUB)
"RTN","DGENCDA2",64,0)
 . . S FDB(2.398,NIEN_","_DFN_",",1)=DGCDIS("SCORE",SUB)
"RTN","DGENCDA2",65,0)
 . . S FDB(2.409,HSUB_","_HIEN,2)=DGCDIS("SCORE",SUB)
"RTN","DGENCDA2",66,0)
 . . S FDB(2.398,NIEN_","_DFN_",",2)=DGCDIS("PERM",SUB)
"RTN","DGENCDA2",67,0)
 . . S FDB(2.409,HSUB_","_HIEN,3)=DGCDIS("PERM",SUB)
"RTN","DGENCDA2",68,0)
 . S FDB(2.399,HIEN,.01)=$$NOW^XLFDT
"RTN","DGENCDA2",69,0)
 I SUCCESS D
"RTN","DGENCDA2",70,0)
 . N SUBFDA,SUBFILE
"RTN","DGENCDA2",71,0)
 . S SUCCESS=$$DELETE^DGENCDA1(DFN)
"RTN","DGENCDA2",72,0)
 . Q:'SUCCESS
"RTN","DGENCDA2",73,0)
 . D FILE^DIE("K","FDA","DGCDERR")
"RTN","DGENCDA2",74,0)
 . I $G(DIERR) D  Q
"RTN","DGENCDA2",75,0)
 . . S ERROR="FILEMAN UNABLE TO PERFORM UPDATE"
"RTN","DGENCDA2",76,0)
 . . S SUCCESS=0
"RTN","DGENCDA2",77,0)
 . . D ERRDISP^DGENCDA1(2)
"RTN","DGENCDA2",78,0)
 . S SUBFILE=""
"RTN","DGENCDA2",79,0)
 . S ERROR="FILEMAN UPDATE FAILED FOR "
"RTN","DGENCDA2",80,0)
 . F  S SUBFILE=$O(FDB(SUBFILE)) Q:SUBFILE=""  D  Q:'SUCCESS
"RTN","DGENCDA2",81,0)
 . . N IEN,NODE,ITEM
"RTN","DGENCDA2",82,0)
 . . S IEN=""
"RTN","DGENCDA2",83,0)
 . . F ITEM=0:1 S IEN=$O(FDB(SUBFILE,IEN)) Q:'IEN  D  Q:'SUCCESS
"RTN","DGENCDA2",84,0)
 . . . N DIC,Y,DO,DD,DINUM,DA,NODE
"RTN","DGENCDA2",85,0)
 . . . I SUBFILE'=2.409 D
"RTN","DGENCDA2",86,0)
 . . . . S NODE=SUBFILE-2
"RTN","DGENCDA2",87,0)
 . . . . S DIC("P")=$P($G(^DD(2,SUBFILE-2,0)),"^",2)
"RTN","DGENCDA2",88,0)
 . . . . S DA(1)=DFN
"RTN","DGENCDA2",89,0)
 . . . E  D
"RTN","DGENCDA2",90,0)
 . . . . S NODE=".399,"_$P(IEN,",",2)_",1"
"RTN","DGENCDA2",91,0)
 . . . . S DIC("P")=$P($G(^DD(2.399,.396,0)),"^",2)
"RTN","DGENCDA2",92,0)
 . . . . S DA(1)=$P(IEN,",",2),DA(2)=DFN
"RTN","DGENCDA2",93,0)
 . . . S DIC="^DPT("_DFN_","_NODE_","
"RTN","DGENCDA2",94,0)
 . . . S DIC(0)="L"
"RTN","DGENCDA2",95,0)
 . . . S X=FDB(SUBFILE,IEN,.01)
"RTN","DGENCDA2",96,0)
 . . . S DINUM=+IEN
"RTN","DGENCDA2",97,0)
 . . . D FILE^DICN
"RTN","DGENCDA2",98,0)
 . . . I Y=-1 S ERROR="FAILED TO ADD ENTRY TO #"_SUBFILE,SUCCESS=0
"RTN","DGENCDA2",99,0)
 . . Q:'SUCCESS
"RTN","DGENCDA2",100,0)
 . . K SUBFDA
"RTN","DGENCDA2",101,0)
 . . M SUBFDA(SUBFILE)=FDB(SUBFILE)
"RTN","DGENCDA2",102,0)
 . . D FILE^DIE("K","SUBFDA","DGCDERR")
"RTN","DGENCDA2",103,0)
 . . I $G(DIERR) D
"RTN","DGENCDA2",104,0)
 . . . S ERROR=ERROR_" #"_SUBFILE
"RTN","DGENCDA2",105,0)
 . . . S SUCCESS=0
"RTN","DGENCDA2",106,0)
 . . . D ERRDISP^DGENCDA1(SUBFILE)
"RTN","DGENCDA2",107,0)
 . I SUCCESS S ERROR=""
"RTN","DGENCDA2",108,0)
 D CLEAN^DILF
"RTN","DGENCDA2",109,0)
 D UNLOCK^DGENCDA1(DFN)
"RTN","DGENCDA2",110,0)
 Q SUCCESS
"RTN","DGENLCD1")
0^3^B18153404^B13497795
"RTN","DGENLCD1",1,0)
DGENLCD1 ;ALB/CJM,Zoltan,JAN - Enrollment Catastrophic Disability- Build List Area;13 JUN 1997
"RTN","DGENLCD1",2,0)
 ;;5.3;Registration;**121,232,387,850**;Aug 13,1993;Build 171
"RTN","DGENLCD1",3,0)
 ;
"RTN","DGENLCD1",4,0)
EN(DGARY,DFN,DGCNT) ;Entry point to build list area
"RTN","DGENLCD1",5,0)
 ; Input  -- DGARY    Global array subscript
"RTN","DGENLCD1",6,0)
 ;           DFN      Patient IEN
"RTN","DGENLCD1",7,0)
 ; Output -- DGCNT    Number of lines in the list
"RTN","DGENLCD1",8,0)
 N DGCDIS,DGLINE
"RTN","DGENLCD1",9,0)
 I $$GET^DGENCDA(DFN,.DGCDIS) ;set-up catastrophic disability array
"RTN","DGENLCD1",10,0)
 S DGLINE=1,DGCNT=0
"RTN","DGENLCD1",11,0)
 D CD(DGARY,DFN,.DGCDIS,.DGLINE,.DGCNT)
"RTN","DGENLCD1",12,0)
 Q
"RTN","DGENLCD1",13,0)
 ;
"RTN","DGENLCD1",14,0)
CD(DGARY,DFN,DGCDIS,DGLINE,DGCNT) ;
"RTN","DGENLCD1",15,0)
 ;Description: Writes Catastrophic Disabilty info to list.
"RTN","DGENLCD1",16,0)
 ; Input  -- DGARY    Global array subscript
"RTN","DGENLCD1",17,0)
 ;           DFN      Patient IEN
"RTN","DGENLCD1",18,0)
 ;           DGCDIS    Enrollment array
"RTN","DGENLCD1",19,0)
 ;           DGLINE   Line number
"RTN","DGENLCD1",20,0)
 ; Output -- DGCNT    Number of lines in the list
"RTN","DGENLCD1",21,0)
 N DGSTART,HASCAT,PERM
"RTN","DGENLCD1",22,0)
 ;
"RTN","DGENLCD1",23,0)
 S DGSTART=DGLINE ; starting line number
"RTN","DGENLCD1",24,0)
 D SET^DGENL1(DGARY,DGLINE," Catastrophic Disability ",28,IORVON,IORVOFF,,,,.DGCNT)
"RTN","DGENLCD1",25,0)
 S DGLINE=DGLINE+2
"RTN","DGENLCD1",26,0)
 S HASCAT=$$HASCAT^DGENCDA(DFN)
"RTN","DGENLCD1",27,0)
 D SET^DGENL1(DGARY,DGLINE,$J("Veteran Catastrophically Disabled:   ",41)_$S(HASCAT:"YES",1:"NO"),1,,,,,,.DGCNT)
"RTN","DGENLCD1",28,0)
 ;
"RTN","DGENLCD1",29,0)
 S DGLINE=DGLINE+1
"RTN","DGENLCD1",30,0)
 D SET^DGENL1(DGARY,DGLINE,$J("Date of Decision:   ",41)_$$EXT^DGENCDU("DATE",DGCDIS("DATE")),1,,,,,,.DGCNT)
"RTN","DGENLCD1",31,0)
 S DGLINE=DGLINE+1
"RTN","DGENLCD1",32,0)
 D SET^DGENL1(DGARY,DGLINE,$J("Decided By:   ",41)_$$EXT^DGENCDU("BY",DGCDIS("BY")),1,,,,,,.DGCNT)
"RTN","DGENLCD1",33,0)
 S DGLINE=DGLINE+1
"RTN","DGENLCD1",34,0)
 D SET^DGENL1(DGARY,DGLINE,$J("Facility Making Determination:   ",41)_$$EXT^DGENCDU("FACDET",DGCDIS("FACDET")),1,,,,,,.DGCNT)
"RTN","DGENLCD1",35,0)
 S DGLINE=DGLINE+1
"RTN","DGENLCD1",36,0)
 D SET^DGENL1(DGARY,DGLINE,$J("Review Date:   ",41)_$$EXT^DGENCDU("REVDTE",DGCDIS("REVDTE")),1,,,,,,.DGCNT)
"RTN","DGENLCD1",37,0)
 S DGLINE=DGLINE+1
"RTN","DGENLCD1",38,0)
 D SET^DGENL1(DGARY,DGLINE,$J("Method of Determination:   ",41)_$$EXT^DGENCDU("METDET",DGCDIS("METDET")),1,,,,,,.DGCNT)
"RTN","DGENLCD1",39,0)
 ;
"RTN","DGENLCD1",40,0)
 ; Display reasons for CD Determination.
"RTN","DGENLCD1",41,0)
 I '$D(DGCDIS("DIAG")),'$D(DGCDIS("PROC")),'$D(DGCDIS("COND")) Q
"RTN","DGENLCD1",42,0)
 S DGLINE=DGLINE+2
"RTN","DGENLCD1",43,0)
 D SET^DGENL1(DGARY,DGLINE," Reason(s) for CD Determination ",24,IORVON,IORVOFF,,,,.DGCNT)
"RTN","DGENLCD1",44,0)
 S DGLINE=DGLINE+1
"RTN","DGENLCD1",45,0)
 S (ITEM,SUBITEM)=""
"RTN","DGENLCD1",46,0)
 F  S ITEM=$O(DGCDIS("DIAG",ITEM)) Q:ITEM=""  D
"RTN","DGENLCD1",47,0)
 . S DGLINE=DGLINE+1
"RTN","DGENLCD1",48,0)
 . D SET^DGENL1(DGARY,DGLINE,$J("CD Status Diagnosis:   ",25)_$$EXT^DGENCDU("DIAG",DGCDIS("DIAG",ITEM)),1,,,,,,.DGCNT)
"RTN","DGENLCD1",49,0)
 F  S ITEM=$O(DGCDIS("PROC",ITEM)) Q:ITEM=""  D
"RTN","DGENLCD1",50,0)
 . F  S SUBITEM=$O(DGCDIS("EXT",ITEM,SUBITEM)) Q:SUBITEM=""  D
"RTN","DGENLCD1",51,0)
 . . S DGLINE=DGLINE+1
"RTN","DGENLCD1",52,0)
 . . D SET^DGENL1(DGARY,DGLINE,$J("CD Status Procedure:   ",25)_$$EXT^DGENCDU("PROC",DGCDIS("PROC",ITEM)),1,,,,,,.DGCNT)
"RTN","DGENLCD1",53,0)
 . . S DGLINE=DGLINE+1
"RTN","DGENLCD1",54,0)
 . . D SET^DGENL1(DGARY,DGLINE,$J("Affected Extremity:   ",30)_$$EXT^DGENCDU("EXT",DGCDIS("EXT",ITEM,SUBITEM)),1,,,,,,.DGCNT)
"RTN","DGENLCD1",55,0)
 F  S ITEM=$O(DGCDIS("COND",ITEM)) Q:ITEM=""  D
"RTN","DGENLCD1",56,0)
 . S DGLINE=DGLINE+1
"RTN","DGENLCD1",57,0)
 . D SET^DGENL1(DGARY,DGLINE,$J("CD Status Condition:   ",25)_$$EXT^DGENCDU("COND",DGCDIS("COND",ITEM)),1,,,,,,.DGCNT)
"RTN","DGENLCD1",58,0)
 . S DGLINE=DGLINE+1
"RTN","DGENLCD1",59,0)
 . D SET^DGENL1(DGARY,DGLINE,$J("Score:   ",30)_$$EXT^DGENCDU("SCORE",DGCDIS("SCORE",ITEM)),1,,,,,,.DGCNT)
"RTN","DGENLCD1",60,0)
 . S DGLINE=DGLINE+1
"RTN","DGENLCD1",61,0)
 . I '$$RANGEMET^DGENA5(DGCDIS("COND",ITEM),DGCDIS("SCORE",ITEM),1) S PERM="N/A"
"RTN","DGENLCD1",62,0)
 . E  S PERM=$$EXT^DGENCDU("PERM",DGCDIS("PERM",ITEM))
"RTN","DGENLCD1",63,0)
 . D SET^DGENL1(DGARY,DGLINE,$J("Permanent Indicator:   ",30)_PERM,1,,,,,,.DGCNT)
"RTN","DGENLCD1",64,0)
 Q
"RTN","DGENLCD1",65,0)
 ;
"RTN","DGENLCD1",66,0)
DISP(Y) ; Patch DG*5.3*850
"RTN","DGENLCD1",67,0)
 ;called from 2.396 and 2.397 output transform, input y, output y
"RTN","DGENLCD1",68,0)
 N DFN,NODE,TYPE,LONG,OUTPUT,DDATE,IMPDATE,ICDVER
"RTN","DGENLCD1",69,0)
 S DFN=$S($G(DA(1))'="":DA(1),$G(DFN)'="":DFN,1:"")
"RTN","DGENLCD1",70,0)
 S NODE=$G(^DGEN(27.17,+Y,0)),LONG=$G(^DGEN(27.17,+Y,5))
"RTN","DGENLCD1",71,0)
 S TYPE=$P(NODE,U,2)
"RTN","DGENLCD1",72,0)
 I DFN="" Q $P(NODE,U,1)
"RTN","DGENLCD1",73,0)
 ;
"RTN","DGENLCD1",74,0)
 S DDATE=$P($G(^DPT(DFN,.39)),"^",2) ;Date of decision
"RTN","DGENLCD1",75,0)
 I $G(DGCDIS("DATE")) S DDATE=DGCDIS("DATE")
"RTN","DGENLCD1",76,0)
 I DDATE="" S DDATE=DT
"RTN","DGENLCD1",77,0)
 S IMPDATE=$P($$IMPDATE^DGPTIC10($G(CODESYS)),"^",1)
"RTN","DGENLCD1",78,0)
 S ICDVER=$S(DDATE<IMPDATE:9,1:10)
"RTN","DGENLCD1",79,0)
 I ICDVER=9 S OUTPUT=$P(NODE,U,4)_" "_$P(NODE,U,1)_$S($P(NODE,U,3)["CPT":" (CPT)",1:" (ICD-9-CM)")
"RTN","DGENLCD1",80,0)
 I ICDVER=10 D
"RTN","DGENLCD1",81,0)
 . I LONG'="" S OUTPUT=$P(NODE,U,4)_" "_LONG_$S(TYPE="D":" (ICD-10-CM)",1:" ICD-10-PCS")
"RTN","DGENLCD1",82,0)
 . I LONG="" S OUTPUT=$P(NODE,U,4)_" "_$P(NODE,U,1)_$S(TYPE="D":" (ICD-10-CM)",1:" ICD-10-PCS")
"RTN","DGENLCD1",83,0)
 Q OUTPUT
"RTN","DGICD")
0^46^B13758086^n/a
"RTN","DGICD",1,0)
DGICD ;BIR/SJA - CODE SET VERSIONING UTILITY ;01/30/12  05:50 PM
"RTN","DGICD",2,0)
 ;;5.3;Registration;**850**;Aug 13, 1993;Build 171
"RTN","DGICD",3,0)
 ;
"RTN","DGICD",4,0)
 ;Reference to $$ICDDATA^ICDXCODE supported by DBIA #5699
"RTN","DGICD",5,0)
 ;
"RTN","DGICD",6,0)
ASKOK(TOTAL) ;
"RTN","DGICD",7,0)
 Q:$G(TOTAL)<100
"RTN","DGICD",8,0)
 ;
"RTN","DGICD",9,0)
 ; -- See default setting of DGASK at LEX+17
"RTN","DGICD",10,0)
 I $G(DGASK)=1 D  Q
"RTN","DGICD",11,0)
 . D EN^DDIOL("A total of "_$G(TOTAL)_" Entries found for this search.","","!!")
"RTN","DGICD",12,0)
 . D EN^DDIOL("Please refine your Search!")
"RTN","DGICD",13,0)
 . D EN^DDIOL(" ")
"RTN","DGICD",14,0)
 . H 3 S DGOK=0
"RTN","DGICD",15,0)
 . Q
"RTN","DGICD",16,0)
 ;
"RTN","DGICD",17,0)
 I $G(DGASK)=2 D  Q
"RTN","DGICD",18,0)
 . W !!,"   Searching for """_ICDTXT_""" requires inspecting "_$G(TOTAL)_" records to determine"
"RTN","DGICD",19,0)
 . W !,"   if they match the search criteria. This could take quite some time. Suggest"
"RTN","DGICD",20,0)
 . W !,"   refining the search by further specifying """_ICDTXT_""".",!
"RTN","DGICD",21,0)
 . ;
"RTN","DGICD",22,0)
 . N DIR,X,Y
"RTN","DGICD",23,0)
 . S DIR(0)="Y",DIR("A")="   Do you wish to continue (Y/N)"
"RTN","DGICD",24,0)
 . S DIR("B")="No"
"RTN","DGICD",25,0)
 . S DIR("?")="   Answer 'Y' for 'Yes' to continue searching on "_ICDTXT_" or 'N' for 'No' to refine search criteria."
"RTN","DGICD",26,0)
 . D ^DIR
"RTN","DGICD",27,0)
 . I $D(DIROUT)!($D(DIRUT))!($D(DTOUT))!($D(DTOUT)) S DGOK=0 Q
"RTN","DGICD",28,0)
 . S DGOK=Y
"RTN","DGICD",29,0)
 . I DGOK=1 W !,"        Searching...."
"RTN","DGICD",30,0)
 . W !
"RTN","DGICD",31,0)
 Q
"RTN","DGICD",32,0)
LEX ; -- Called indirectly out of input transforms
"RTN","DGICD",33,0)
 ; -- INPUT
"RTN","DGICD",34,0)
 ;            X := the value to be search for (required)
"RTN","DGICD",35,0)
 ;      EFFDATE := the date of interest for the search (required)
"RTN","DGICD",36,0)
 ;
"RTN","DGICD",37,0)
 N %DT,DIROUT,DUOUT,DTOUT,ICDEXIT,ICDDT,ICDTXT,ICDUP,ICDY,XX,DGTOT,DGOK,DGZZONE
"RTN","DGICD",38,0)
 S ICDTXT=$G(X) Q:'$L(ICDTXT)
"RTN","DGICD",39,0)
 ;
"RTN","DGICD",40,0)
 I ICDTXT["?" D  K X,Y Q  ; - added here for calls that bypass ^DGICDGT
"RTN","DGICD",41,0)
 . N TAG,FORMAT
"RTN","DGICD",42,0)
 . S TAG=$S(X["???":"D3^DGICDGT",X["??":"D2^DGICDGT",X["?":"D1^DGICDGT",1:"D1^DGICDGT")
"RTN","DGICD",43,0)
 . D @TAG
"RTN","DGICD",44,0)
 . Q
"RTN","DGICD",45,0)
 ;
"RTN","DGICD",46,0)
 I $L(ICDTXT)<2 D  S X="" Q
"RTN","DGICD",47,0)
 . D EN^DDIOL("Please enter at least the first two characters of the ICD-10","","!!?5")
"RTN","DGICD",48,0)
 . D EN^DDIOL("code or code description to start the search.","","!?5")
"RTN","DGICD",49,0)
 . D EN^DDIOL(" ")
"RTN","DGICD",50,0)
 . Q
"RTN","DGICD",51,0)
 ;
"RTN","DGICD",52,0)
 I '$G(DGASK) S DGASK=2 ;1:= Do not ask to continue, just quit, 2:=ask to continue
"RTN","DGICD",53,0)
 S DGTOT=$$FREQ^LEXU(ICDTXT) ;IA 5679
"RTN","DGICD",54,0)
 I DGTOT>$$MAX^LEXU(30) D ASKOK(DGTOT) Q:'$G(DGOK)
"RTN","DGICD",55,0)
 ;
"RTN","DGICD",56,0)
 S ICDDT=$G(EFFDATE),ICDEXIT=0
"RTN","DGICD",57,0)
 K DGASK,DGOK
"RTN","DGICD",58,0)
 ; Begin Recursive Loop
"RTN","DGICD",59,0)
LOOK ; Lookup
"RTN","DGICD",60,0)
 Q:+($G(ICDEXIT))>0  K ICDY
"RTN","DGICD",61,0)
 S ICDY=$$DIAGSRCH^LEX10CS(ICDTXT,.ICDY,ICDDT,30)
"RTN","DGICD",62,0)
 S:$O(ICDY(" "),-1)>0 ICDY=+ICDY
"RTN","DGICD",63,0)
 I +ICDY'>0 D:'$D(DA) EN^DDIOL("   ??") K X,Y Q
"RTN","DGICD",64,0)
 S XX=$$SEL^DGICDL(.ICDY,8)
"RTN","DGICD",65,0)
 I $D(DUOUT)&('$D(DIROUT)) K:'$D(ICDNT) X Q
"RTN","DGICD",66,0)
 I $D(DTOUT)&('$D(DIROUT)) S ICDEXIT=1 K X Q
"RTN","DGICD",67,0)
 I $D(DIROUT) S ICDEXIT=1 K X Q
"RTN","DGICD",68,0)
 ; Abort if timed out or user enters "^^"
"RTN","DGICD",69,0)
 I $D(DTOUT)!($D(DIROUT)) S ICDEXIT=1 K X Q
"RTN","DGICD",70,0)
 ; Up one level (ICDUP) if user enters "^"
"RTN","DGICD",71,0)
 ; Quit if already at top level and user enters "^"
"RTN","DGICD",72,0)
 I $D(DUOUT),'$D(DIROUT),$L($G(ICDUP)) K X Q
"RTN","DGICD",73,0)
 ; No Selection
"RTN","DGICD",74,0)
 I '$D(DUOUT),XX=-1 S ICDEXIT=1
"RTN","DGICD",75,0)
 ; Code Found and Selected
"RTN","DGICD",76,0)
 I $P(XX,";")'="99:CAT" S Y=+$$ICDDATA^ICDXCODE("10D",$P($P(XX,"^"),";",2)) S ICDEXIT=1 D  Q
"RTN","DGICD",77,0)
  . W:'$D(DGZZONE) "  ",$P(XX,";",2),"  ICD-10  ",$$VST^ICDEX(80,Y)
"RTN","DGICD",78,0)
 ; Category Found and Selected
"RTN","DGICD",79,0)
 D NXT G:+($G(ICDEXIT))'>0 LOOK
"RTN","DGICD",80,0)
 Q
"RTN","DGICD",81,0)
NXT ; Next
"RTN","DGICD",82,0)
 Q:+($G(ICDEXIT))>0  N ICDNT,ICDND,ICDX
"RTN","DGICD",83,0)
 S ICDNT=$G(ICDTXT),ICDND=$G(ICDDT),ICDX=$G(XX)
"RTN","DGICD",84,0)
 N ICDTXT,ICDDT S ICDTXT=$P($P(ICDX,"^"),";",2),ICDDT=ICDND
"RTN","DGICD",85,0)
 G LOOK
"RTN","DGICD",86,0)
 Q
"RTN","DGICD",87,0)
MW(X) ; Multiple Words
"RTN","DGICD",88,0)
 ; returns 0 if 1 word
"RTN","DGICD",89,0)
 ;         1 if more than 1 word
"RTN","DGICD",90,0)
 N INP,CHR,PSN,STR,P1,P2,CT S INP=$G(X) Q:'$L(INP) -1
"RTN","DGICD",91,0)
 S CT=0,STR=" ()_-{}[]\:;,<>" F PSN=1:1:$L(STR)  S CHR=$E(STR,PSN) S CT=0 D  Q:CT>1
"RTN","DGICD",92,0)
 . S P1=$P(INP,CHR,1),P2=$P(INP,CHR,2,299) S:$L(P1)&(P1'?1N.N) CT=CT+1 S:$L(P2)&(P2'?1N.N) CT=CT+1
"RTN","DGICD",93,0)
 Q:CT'>1 0
"RTN","DGICD",94,0)
 Q 1
"RTN","DGICDGT")
0^48^B93717009^n/a
"RTN","DGICDGT",1,0)
DGICDGT ;BIR/SJA - ALB/AAS - ADT ICD DIAGNOSIS SEARCH ;02-Feb-2012
"RTN","DGICDGT",2,0)
 ;;5.3;Registration;**850**;Aug 13, 1993;Build 171
"RTN","DGICDGT",3,0)
 ;
"RTN","DGICDGT",4,0)
 ; CSI^ICDEX     ICR 5747
"RTN","DGICDGT",5,0)
 ; SYS^ICDEX     ICR 5747
"RTN","DGICDGT",6,0)
 ; LS^ICDEX      ICR 5747
"RTN","DGICDGT",7,0)
 ;
"RTN","DGICDGT",8,0)
 ;Reference to $$ICDDATA^ICDXCODE supported by DBIA #5699
"RTN","DGICDGT",9,0)
 ;
"RTN","DGICDGT",10,0)
GETAPI(APP,TYPE,PTF,CHK) ;ICD-9/ICD-10 selection - called by input transform
"RTN","DGICDGT",11,0)
 ; - INPUT: X    := the initial user input to be searched on (REQUIRED)
"RTN","DGICDGT",12,0)
 ;          APP  := application name "DG PTF" ;drp removed file ref  in file 130.4;.01 (REQUIRED)
"RTN","DGICDGT",13,0)
 ;          TYPE := type of call "DIAG or "PROC" ;drp removed file ref in file 130.4;.04 (REQUIRED)
"RTN","DGICDGT",14,0)
 ;          PTF  := top level entry in file 130 (DA) used to get date to compute correct version (OPTIONAL but needs DA)
"RTN","DGICDGT",15,0)
 ;          CHK  := additional screening logic
"RTN","DGICDGT",16,0)
 ;                  Note: applications using this as an example will need to modify the code that uses this.
"RTN","DGICDGT",17,0)
 ; - OUTPUT: X   := the internal value to be stored in the field.
"RTN","DGICDGT",18,0)
 ;           Y   := the internal value to be stored in the field
"RTN","DGICDGT",19,0)
 ;
"RTN","DGICDGT",20,0)
 N DIC,DIE,DGPTDA,DGDT,IMPDATE,ENTRY,CODE,VERSION,DGX,LEXI,EFFDATE,IMPDATE,DGPTDAT,DGER,KEY,DUOUT,DTOUT
"RTN","DGICDGT",21,0)
 ;
"RTN","DGICDGT",22,0)
 I X="?BAD" S X="" D MSG("") Q
"RTN","DGICDGT",23,0)
 I X="@" K X Q
"RTN","DGICDGT",24,0)
 I '$L($G(APP)) D MSG("The Application making the call was not specified.") K X Q
"RTN","DGICDGT",25,0)
 I '$L($G(TYPE)) D MSG("The Search Type (diagnosis or procedure) was not specified.") K X Q
"RTN","DGICDGT",26,0)
 I $L($G(X))>100!($L($G(X))<1) D MSG("Answer must be 1-100 characters in length.") K X Q
"RTN","DGICDGT",27,0)
 ;
"RTN","DGICDGT",28,0)
 ;I $G(PTF)=-1 S DGPTDAT=$S($G(DGPTDAT)?7N:DGPTDAT,1:DT) D  G GO ; special case for call not related to PTF record
"RTN","DGICDGT",29,0)
 ;. K CHK
"RTN","DGICDGT",30,0)
 ;. S DGTEMP=$$IMPDATE^DGPTIC10("10D")
"RTN","DGICDGT",31,0)
 ;. S EFFDATE=+DGTEMP
"RTN","DGICDGT",32,0)
 ;. S IMPDATE=$P(DGTEMP,U,1)
"RTN","DGICDGT",33,0)
 ;. I DGPTDAT'<IMPDATE,+$P(DGTEMP,U,2)?7N S EFFDATE=+$P(DGTEMP,U,2)
"RTN","DGICDGT",34,0)
 ;
"RTN","DGICDGT",35,0)
 ; -- next FOUR lines are DG PTF Specific, plus one more line further below
"RTN","DGICDGT",36,0)
 ; - Note: X and EFFDATE are used inside the executed code
"RTN","DGICDGT",37,0)
 S DGPTDA=$S($G(PTF):PTF,$D(DA(2)):DA(2),$D(DA(1)):DA(1),$D(DA):DA,$D(D0):D0,1:"")
"RTN","DGICDGT",38,0)
 I DGPTDA="" S EFFDATE=$G(DGDRGDT),CHK="" D EFFDAT1^DGPTIC10(EFFDATE) G GO
"RTN","DGICDGT",39,0)
 I $G(^DGPT($G(DGPTDA),0))="" D MSG("Entry in the PTF file was not found.") K X Q
"RTN","DGICDGT",40,0)
 ; DGTYPE determines which EFFDATE is used inside executable code. 701 is default.
"RTN","DGICDGT",41,0)
 N DGTYPE S DGTYPE=$P($G(X1,"^701"),U,2) D EFFDATE^DGPTIC10(DGPTDA,DGTYPE)
"RTN","DGICDGT",42,0)
 ;
"RTN","DGICDGT",43,0)
GO ; -- Jump for DRG calculation
"RTN","DGICDGT",44,0)
 S VERSION=$$SYS^ICDEX(TYPE,EFFDATE)
"RTN","DGICDGT",45,0)
 I VERSION'>0 D MSG("Could not acquire the correct ICD Version for '"_TYPE_"' on "_$$FMTE^XLFDT(EFFDATE)) K X Q
"RTN","DGICDGT",46,0)
 I X["?" D  K X,Y Q
"RTN","DGICDGT",47,0)
 . N TAG S TAG=""
"RTN","DGICDGT",48,0)
 . I VERSION=30 S TAG=$S(X["???":"D3",X["??":"D2",X["?":"D1",1:"D1") D @TAG Q
"RTN","DGICDGT",49,0)
 . I VERSION=31 S TAG=$S(X["???":"P3",X["??":"P2",X["?":"P1",1:"P1") D @TAG Q
"RTN","DGICDGT",50,0)
 . I VERSION=1 S TAG="Answer with ICD-9 DIAGNOSIS CODE NUMBER, or DESCRIPTION."
"RTN","DGICDGT",51,0)
 . I VERSION=2 S TAG="Answer with ICD-9 OPERATION/PROCEDURE, or CODE NUMBER, or DESCRIPTION."
"RTN","DGICDGT",52,0)
 . S FORMAT=$S(X["??":"!?8",1:"!?5")
"RTN","DGICDGT",53,0)
 . D EN^DDIOL(TAG,"",FORMAT)
"RTN","DGICDGT",54,0)
 . Q
"RTN","DGICDGT",55,0)
 I VERSION=31,X["*" S X=$P(X,"*",1)_$P(X,"*",2)
"RTN","DGICDGT",56,0)
 ;
"RTN","DGICDGT",57,0)
 ;References to file 130.4  removed to eliminate dependency on Surgery SR*3.0*177
"RTN","DGICDGT",58,0)
 ;I VERSION=30,X?1L1N S X=$$TR(X)
"RTN","DGICDGT",59,0)
 ;S ENTRY=$O(^DIC(130.4,"C",APP,TYPE,VERSION,0))
"RTN","DGICDGT",60,0)
 ;I ENTRY'>0 D MSG("Search Entry in ICD SEARCH API file for application '"_APP_"' of type '"_TYPE_"' for Version '"_VERSION_"' is missing.") K X Q
"RTN","DGICDGT",61,0)
 ;S CODE=$G(^DIC(130.4,ENTRY,1))
"RTN","DGICDGT",62,0)
 ;Replaced previous lines with lines below.
"RTN","DGICDGT",63,0)
 S CODE=$S(VERSION=1:"S Y=$$GETICD9^DGPTF5(EFFDATE)",VERSION=30:"D LEX^DGICD",VERSION=2:"S Y=$$SEARCH^ICDSAPI(""PROC"",(""I $$LS^ICDEX(80.1,+Y,""""""_EFFDATE_"""""")=1""),""QEMZ"",EFFDATE)",VERSION=31:"D ASK^DGICP",1:-1)
"RTN","DGICDGT",64,0)
 I CODE=-1 D MSG("Search Entry in ICD SEARCH API file for application '"_APP_"' of type '"_TYPE_"' for Version '"_VERSION_"' is missing.") K X Q
"RTN","DGICDGT",65,0)
 ;
"RTN","DGICDGT",66,0)
 I '$L(CODE) D MSG("No Executable Code found for a ICD code search for type '"_TYPE_"'.") K X Q
"RTN","DGICDGT",67,0)
 I $L(CODE) X CODE
"RTN","DGICDGT",68,0)
 ;
"RTN","DGICDGT",69,0)
 ; -- execute additional checks for DG PTF
"RTN","DGICDGT",70,0)
 ;    no code entered twice, gender specific codes, requires other codes, 
"RTN","DGICDGT",71,0)
 ;    can't be used with other current codes, etc
"RTN","DGICDGT",72,0)
 S DGER=0 I $G(CHK)'="",$G(Y)>0 D @(CHK_"^DGPTFJC") I $G(DGER) K X,Y Q
"RTN","DGICDGT",73,0)
 ;
"RTN","DGICDGT",74,0)
 I $G(Y)>0 S X=+Y Q
"RTN","DGICDGT",75,0)
 K X,Y
"RTN","DGICDGT",76,0)
 Q
"RTN","DGICDGT",77,0)
MSG(TEXT) ;
"RTN","DGICDGT",78,0)
 D EN^DDIOL(TEXT)
"RTN","DGICDGT",79,0)
 Q
"RTN","DGICDGT",80,0)
 ;
"RTN","DGICDGT",81,0)
TR(X) ;
"RTN","DGICDGT",82,0)
 S X=$TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","DGICDGT",83,0)
 Q X
"RTN","DGICDGT",84,0)
D1 ; -- Diagnosis ?  Help
"RTN","DGICDGT",85,0)
 I X["???" D D3 Q  ;For calls from ^DIR, doesn't support ??? help
"RTN","DGICDGT",86,0)
 I X["??" D D2 Q
"RTN","DGICDGT",87,0)
 D EN^DDIOL("Enter code or ""text"" for more information.","","!?5")
"RTN","DGICDGT",88,0)
 D EN^DDIOL(" ")
"RTN","DGICDGT",89,0)
 Q
"RTN","DGICDGT",90,0)
 ;
"RTN","DGICDGT",91,0)
D2 ; -- Diagnosis ??  Help
"RTN","DGICDGT",92,0)
 D EN^DDIOL("Enter a ""free text"" term or part of a term such as ""femur fracture"".","","!?8")
"RTN","DGICDGT",93,0)
 D EN^DDIOL("    or","","!?8")
"RTN","DGICDGT",94,0)
 D EN^DDIOL("Enter a ""classification code"" (ICD/CPT, etc.) to find the single term","","!?8")
"RTN","DGICDGT",95,0)
 D EN^DDIOL("associated with the code","","!?8")
"RTN","DGICDGT",96,0)
 D EN^DDIOL("    or","","!?8")
"RTN","DGICDGT",97,0)
 D EN^DDIOL("Enter a ""partial code"". Include the decimal when a search criterion","","!?8")
"RTN","DGICDGT",98,0)
 D EN^DDIOL("includes 3 characters or more for code searches.","","!?8")
"RTN","DGICDGT",99,0)
 D EN^DDIOL(" ")
"RTN","DGICDGT",100,0)
 Q
"RTN","DGICDGT",101,0)
 ;
"RTN","DGICDGT",102,0)
D3 ; -- Diagnosis ???  Help
"RTN","DGICDGT",103,0)
 N HLP
"RTN","DGICDGT",104,0)
 S HLP(1)="Number of Code Matches"
"RTN","DGICDGT",105,0)
 S HLP(1,"F")="!?8"
"RTN","DGICDGT",106,0)
 S HLP(2)="----------------------"
"RTN","DGICDGT",107,0)
 S HLP(2,"F")="!?8"
"RTN","DGICDGT",108,0)
 S HLP(3)="The ICD-10 Diagnosis Code search will show the user the number of"
"RTN","DGICDGT",109,0)
 S HLP(3,"F")="!!?8"
"RTN","DGICDGT",110,0)
 S HLP(4)="matches found, indicate if additional characters in ICD code exist,"
"RTN","DGICDGT",111,0)
 S HLP(4,"F")="!?8"
"RTN","DGICDGT",112,0)
 S HLP(5)="and the number of codes within the category or subcategory that are"
"RTN","DGICDGT",113,0)
 S HLP(5,"F")="!?8"
"RTN","DGICDGT",114,0)
 S HLP(6)="available for selection.  For example:"
"RTN","DGICDGT",115,0)
 S HLP(6,"F")="!?8"
"RTN","DGICDGT",116,0)
 S HLP(8)="19 matches found"
"RTN","DGICDGT",117,0)
 S HLP(8,"F")="!!?8"
"RTN","DGICDGT",118,0)
 S HLP(10)="M91. -      Juvenile osteochondrosis of hip and pelvis (19)"
"RTN","DGICDGT",119,0)
 S HLP(10,"F")="!!?8"
"RTN","DGICDGT",120,0)
 S HLP(12)="This indicates that 19 unique matches or matching groups have been"
"RTN","DGICDGT",121,0)
 S HLP(12,"F")="!!?8"
"RTN","DGICDGT",122,0)
 S HLP(13)="found and will be displayed."
"RTN","DGICDGT",123,0)
 S HLP(13,"F")="!?8"
"RTN","DGICDGT",124,0)
 S HLP(15)="M91. -  the ""-"" indicates that there are additional characters"
"RTN","DGICDGT",125,0)
 S HLP(15,"F")="!!?8"
"RTN","DGICDGT",126,0)
 S HLP(16)="that specify unique ICD-10 codes available."
"RTN","DGICDGT",127,0)
 S HLP(16,"F")="!?8"
"RTN","DGICDGT",128,0)
 S HLP(18)="(19)   Indicates that there are 19 additional ICD-10 codes in the"
"RTN","DGICDGT",129,0)
 S HLP(18,"F")="!!?8"
"RTN","DGICDGT",130,0)
 S HLP(19)="M91 ""family"" that are possible selections."
"RTN","DGICDGT",131,0)
 S HLP(19,"F")="!?8"
"RTN","DGICDGT",132,0)
 D EN^DDIOL(.HLP)
"RTN","DGICDGT",133,0)
 Q
"RTN","DGICDGT",134,0)
 ;
"RTN","DGICDGT",135,0)
P1 ;
"RTN","DGICDGT",136,0)
 I X["???" D P3 Q  ;For calls from ^DIR, doesn't support ??? help
"RTN","DGICDGT",137,0)
 I X["??" D P2 Q
"RTN","DGICDGT",138,0)
 D EN^DDIOL("Enter the initial character(s) of an ICD-10 partial code or an","","!?5")
"RTN","DGICDGT",139,0)
 D EN^DDIOL("asterisk (*) for more information.","","!?5")
"RTN","DGICDGT",140,0)
 D EN^DDIOL(" ")
"RTN","DGICDGT",141,0)
 Q
"RTN","DGICDGT",142,0)
 ;
"RTN","DGICDGT",143,0)
P2 ;
"RTN","DGICDGT",144,0)
 D EN^DDIOL("1. Enter an ICD-10 Procedure Code.","","!?8")
"RTN","DGICDGT",145,0)
 D EN^DDIOL("      or  ","","!?8")
"RTN","DGICDGT",146,0)
 D EN^DDIOL("2. Enter any alphanumeric char values of the procedure code to ""build""","","!?8")
"RTN","DGICDGT",147,0)
 D EN^DDIOL("   an ICD-10 Procedure Code.","","!?8")
"RTN","DGICDGT",148,0)
 D EN^DDIOL("      or  ","","!?8")
"RTN","DGICDGT",149,0)
 D EN^DDIOL("3. Enter an asterisk (*) to initiate a procedure code build search. ","","!?8")
"RTN","DGICDGT",150,0)
 D EN^DDIOL(" ")
"RTN","DGICDGT",151,0)
 Q
"RTN","DGICDGT",152,0)
 ;
"RTN","DGICDGT",153,0)
P3 ;
"RTN","DGICDGT",154,0)
 D EN^DDIOL("The procedure code search provides a ""decision tree"" type structure","","!?8")
"RTN","DGICDGT",155,0)
 D EN^DDIOL("that makes use of the specific ICD-10-PCS code format and structure,","","!?8")
"RTN","DGICDGT",156,0)
 D EN^DDIOL("where all codes consist of 7 alphanumeric characters, with each","","!?8")
"RTN","DGICDGT",157,0)
 D EN^DDIOL("position in the code having a specific meaning.","","!?8")
"RTN","DGICDGT",158,0)
 D EN^DDIOL(" ")
"RTN","DGICDGT",159,0)
 Q
"RTN","DGICDGT",160,0)
 ;
"RTN","DGICDGT",161,0)
 ;TEST ; -- test api calls
"RTN","DGICDGT",162,0)
 S X="F1" W !,"1" D GETAPI^DGICDGT(,"DIAG",1) ;no application
"RTN","DGICDGT",163,0)
 S X="F1" W !,"2" D GETAPI^DGICDGT("DG PTF",,1) ;no Type
"RTN","DGICDGT",164,0)
 S X="F1" W !,"3" D GETAPI^DGICDGT("DG PTF","DIAG",199999) ;no entry is PTFF file
"RTN","DGICDGT",165,0)
 S X="" W !,"4" D GETAPI^DGICDGT("DG PTF","DIAG",1) ;Answer too short
"RTN","DGICDGT",166,0)
 S X="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
"RTN","DGICDGT",167,0)
 W !,"5" D GETAPI^DGICDGT("DG PTF","PROC",1) ;answer too long
"RTN","DGICDGT",168,0)
 S X="F1" W !,"6" D GETAPI^DGICDGT("DG PTF","DAIG",1) ; NO VERSION found
"RTN","DGICDGT",169,0)
 S X="F1" W !,"7" D GETAPI^DGICDGT("DG PTF","DIAG",1) ; no entry for Daig
"RTN","DGICDGT",170,0)
 S X="F1" W !,"8" D GETAPI^DGICDGT("DG PTF","PROC",1) ;no executable code
"RTN","DGICDGT",171,0)
 ;
"RTN","DGICDGT",172,0)
 S X="330" W !,"9 - SHOULD WORK" D GETAPI^DGICDGT("DG PTF","DIAG",1) ; This one is icd-9
"RTN","DGICDGT",173,0)
 S X="S62" W !,"10 - SHOULD WORK" D GETAPI^DGICDGT("DG PTF","DIAG",21) ; This one is icd-10
"RTN","DGICDGT",174,0)
 S X="COCAINE" W !,"11 'COCAINE' - SHOULD WORK" D GETAPI^DGICDGT("DG PTF","DIAG",21) ; This one is icd-10
"RTN","DGICDGT",175,0)
T12 S X="fracture" W !,"12 'FRACTURE'- TOO LONG" D GETAPI^DGICDGT("DG PTF","DIAG",14) ; This one is icd-10
"RTN","DGICDGT",176,0)
 Q
"RTN","DGICDGT",177,0)
D19 ;
"RTN","DGICDGT",178,0)
 I X["???" D D29 Q  ;For calls from ^DIR, doesn't support ?? OR ??? help
"RTN","DGICDGT",179,0)
 D EN^DDIOL("Enter a ""free text"" term.  Best results occur using one to")
"RTN","DGICDGT",180,0)
 D EN^DDIOL("      three full or partial words without a suffix.")
"RTN","DGICDGT",181,0)
 D EN^DDIOL("  or ")
"RTN","DGICDGT",182,0)
 D EN^DDIOL("      Enter a classification code (ICD/CPT etc) to find the single")
"RTN","DGICDGT",183,0)
 D EN^DDIOL("      term associated with the code.")
"RTN","DGICDGT",184,0)
 D EN^DDIOL("  or ")
"RTN","DGICDGT",185,0)
 D EN^DDIOL("      Enter a classification code (ICD/CPT etc) followed by a plus")
"RTN","DGICDGT",186,0)
 D EN^DDIOL("      sign (+) to retrieve all terms associated with the code. ")
"RTN","DGICDGT",187,0)
 Q
"RTN","DGICDGT",188,0)
 ;
"RTN","DGICDGT",189,0)
D29 ;
"RTN","DGICDGT",190,0)
 D EN^DDIOL("      Enter a ""free text"" term.  Best results occur using one to ")
"RTN","DGICDGT",191,0)
 D EN^DDIOL("      three full or partial words without a suffix (i.e., ""DIABETES"",")
"RTN","DGICDGT",192,0)
 D EN^DDIOL("      ""DIAB MELL"",""DIAB MELL INSUL"")")
"RTN","DGICDGT",193,0)
 D EN^DDIOL("  or  ")
"RTN","DGICDGT",194,0)
 D EN^DDIOL("      Enter a classification code (ICD/CPT etc) to find the single ")
"RTN","DGICDGT",195,0)
 D EN^DDIOL("      term associated with the code.  Example, a lookup of code 239.0 ")
"RTN","DGICDGT",196,0)
 D EN^DDIOL("      returns one and only one term, that is the preferred ")
"RTN","DGICDGT",197,0)
 D EN^DDIOL("      term for the code 239.0, ""Neoplasm of unspecified nature ")
"RTN","DGICDGT",198,0)
 D EN^DDIOL("      of digestive system""")
"RTN","DGICDGT",199,0)
 D EN^DDIOL("  or  ")
"RTN","DGICDGT",200,0)
 D EN^DDIOL("      Enter a classification code (ICD/CPT etc) followed by a plus")
"RTN","DGICDGT",201,0)
 D EN^DDIOL("      sign (+) to retrieve all terms associated with the code.  Example,")
"RTN","DGICDGT",202,0)
 D EN^DDIOL("      a lookup of 239.0+ returns all terms that are linked to the ")
"RTN","DGICDGT",203,0)
 D EN^DDIOL("      code 239.0.")
"RTN","DGICDGT",204,0)
 Q
"RTN","DGICDGT",205,0)
 ;
"RTN","DGICDGT",206,0)
P19 ;
"RTN","DGICDGT",207,0)
 N DGYN S DGYN=1
"RTN","DGICDGT",208,0)
 D EN^DDIOL("Answer with ICD-9 OPERATION/PROCEDURE, or CODE NUMBER, or DESCRIPTION")
"RTN","DGICDGT",209,0)
 I X="?" D EN^DDIOL("Do you want the entire ICD-9 OPERATION/PROCEDURE List") S %=0 D YN^DICN S DGYN=%
"RTN","DGICDGT",210,0)
 S DIC("S")="I $$CSI^ICDEX(80.1,+Y)=2"
"RTN","DGICDGT",211,0)
 S DIC("W")="N C,DINAME S IEN=+Y W ""  "" D EN^DDIOL(("" ""_$$IDOPS^ICDID(+Y)),"""",""?0"")"
"RTN","DGICDGT",212,0)
 S DIC="^ICD0(",DIC("0")="AEQMZ",DZ="??",D="B",DO="ICD OPERATION/PROCEDURE^80.1OI^4487^4480",DO(2)="80.1OI"
"RTN","DGICDGT",213,0)
 D:DGYN=1 DQ^DICQ
"RTN","DGICDGT",214,0)
 Q
"RTN","DGICDGT",215,0)
 ;
"RTN","DGICDL")
0^47^B31973267^n/a
"RTN","DGICDL",1,0)
DGICDL ;ALB/SJA - Select ICD DIAGNOSIS FROM LEXICON UTILITY LIST ;12/07/2011
"RTN","DGICDL",2,0)
 ;;5.3;Registration;**850**;Aug 13, 1993;Build 171
"RTN","DGICDL",3,0)
 ; Clone of SROICDL
"RTN","DGICDL",4,0)
SEL(DGL,X) ; Select from List
"RTN","DGICDL",5,0)
 ;
"RTN","DGICDL",6,0)
 ;
"RTN","DGICDL",7,0)
 ; Input   
"RTN","DGICDL",8,0)
 ; 
"RTN","DGICDL",9,0)
 ;     X     Length of list to display (default 5)
"RTN","DGICDL",10,0)
 ;    .DGL   Local array passed by reference
"RTN","DGICDL",11,0)
 ;               
"RTN","DGICDL",12,0)
 ;             DGL()   Input Array from ICDSRCH^LEX10CS
"RTN","DGICDL",13,0)
 ;               
"RTN","DGICDL",14,0)
 ;             DGL(0)=# found ^ Pruning Indicator
"RTN","DGICDL",15,0)
 ;             DGL(1,0)=Code ^ Code IEN ^ date
"RTN","DGICDL",16,0)
 ;             DGL(1,"IDL")=ICD-9/10 Description, Long
"RTN","DGICDL",17,0)
 ;             DGL(1,"IDL",1)=ICD-9/10 IEN ^ date
"RTN","DGICDL",18,0)
 ;             DGL(1,"IDS")=ICD-9/10 Description, Short
"RTN","DGICDL",19,0)
 ;             DGL(1,"IDS",1)=ICD-9/10 IEN ^ date
"RTN","DGICDL",20,0)
 ;             DGL(1,"LEX")=Lexicon Description
"RTN","DGICDL",21,0)
 ;             DGL(1,"LEX",1)=Expression IEN ^ date
"RTN","DGICDL",22,0)
 ;             DGL(1,"SYN",1)=Synonym #1
"RTN","DGICDL",23,0)
 ;             DGL(1,"SYN",m)=Synonym #m
"RTN","DGICDL",24,0)
 ;             ...
"RTN","DGICDL",25,0)
 ;               
"RTN","DGICDL",26,0)
 ; Output
"RTN","DGICDL",27,0)
 ;               
"RTN","DGICDL",28,0)
 ;    $$SEL  Two Piece "^" delimited string same as
"RTN","DGICDL",29,0)
 ;           Fileman's Y output variable
"RTN","DGICDL",30,0)
 ;               
"RTN","DGICDL",31,0)
 ;             1  Lexicon IEN
"RTN","DGICDL",32,0)
 ;             2  Lexicon Term
"RTN","DGICDL",33,0)
 ;               
"RTN","DGICDL",34,0)
 ;    DGL    Local array passed by reference
"RTN","DGICDL",35,0)
 ;               
"RTN","DGICDL",36,0)
 ;             DGL(0)=Code ^ Code IEN ^ date
"RTN","DGICDL",37,0)
 ;             DGL("IDL")=ICD-9/10 Description, Long
"RTN","DGICDL",38,0)
 ;             DGL("IDL",1)=ICD-9/10 IEN ^ date
"RTN","DGICDL",39,0)
 ;             DGL("IDS")=ICD-9/10 Description, Short
"RTN","DGICDL",40,0)
 ;             DGL("IDS",1)=ICD-9/10 IEN ^ date
"RTN","DGICDL",41,0)
 ;             DGL("LEX")=Lexicon Description
"RTN","DGICDL",42,0)
 ;             DGL("LEX",1)=Expression IEN ^ date
"RTN","DGICDL",43,0)
 ;               
"RTN","DGICDL",44,0)
 ;    or ^ on error 
"RTN","DGICDL",45,0)
 ;    or -1 for non-selection
"RTN","DGICDL",46,0)
 ;               
"RTN","DGICDL",47,0)
 S X=+($G(X)) S:X'>0 X=5 S X=$$ASK(.DGL,X)
"RTN","DGICDL",48,0)
 Q X
"RTN","DGICDL",49,0)
ASK(DGL,X) ; Ask for Selection
"RTN","DGICDL",50,0)
 N DGLIT,DGLL,DGLTOT S DGLL=+($G(X)) S:DGLL'>0 DGLL=5
"RTN","DGICDL",51,0)
 S DGLIT=0,DGLTOT=$O(DGL(" "),-1) Q:+DGLTOT'>0 "^"
"RTN","DGICDL",52,0)
 K X S:+DGLTOT=1 X=$$ONE(DGLL,.DGL) S:+DGLTOT>1 X=$$MUL(.DGL,DGLL)
"RTN","DGICDL",53,0)
 S:'$D(DTOUT)&('$D(DUOUT))&('$D(DIROUT))&(+($G(X))'>0) X=-1
"RTN","DGICDL",54,0)
 Q X
"RTN","DGICDL",55,0)
ONE(X,DGL) ; One Entry Found
"RTN","DGICDL",56,0)
 Q:+($G(DGLIT))>0 "^^"  N Z,DIR,DGLC,DGLEX,DGLFI,DGLIT,DGLSO,DGLNC
"RTN","DGICDL",57,0)
 N DGLSP,DGLTX,DGLC,Y S DGLFI=$O(DGL(0)) Q:+DGLFI'>0 "^"  S DGLSP=$J(" ",11)
"RTN","DGICDL",58,0)
 S DGLSO=$P(DGL(1,0),"^",1),DGLNC=$P(DGL(1,0),"^",3)
"RTN","DGICDL",59,0)
 S:+DGLNC>0 DGLNC=" ("_DGLNC_")" S DGLEX=$G(DGL(1,"MENU"))
"RTN","DGICDL",60,0)
 S DGLC=$S($D(DGL(1,"CAT")):"-",1:"")
"RTN","DGICDL",61,0)
 S DGLTX(1)=DGLSO_DGLC_$J(" ",(9-$L(DGLSO)))_" "_DGLEX_DGLNC
"RTN","DGICDL",62,0)
 D PR(.DGLTX,64) S DIR("A",1)=" One code found",DIR("A",2)=" "
"RTN","DGICDL",63,0)
 S DIR("A",3)=" "_$G(DGLTX(1)),DGLC=3
"RTN","DGICDL",64,0)
 F Z=2:1 Q:$G(DGLTX(Z))=""  S DGLC=DGLC+1,DIR("A",DGLC)=DGLSP_$G(DGLTX(Z))
"RTN","DGICDL",65,0)
 S DGLC=DGLC+1,DIR("A",DGLC)=" ",DGLC=DGLC+1
"RTN","DGICDL",66,0)
 S DIR("A")=" OK? (Yes/No) ",DIR("B")="Yes",DIR(0)="YAO" W !
"RTN","DGICDL",67,0)
 D ^DIR Q:'$D(DTOUT)&('$D(DUOUT))&('$D(DIROUT))&(+($G(Y))'>0) -1
"RTN","DGICDL",68,0)
 S:X["^^"!($D(DTOUT)) DGLIT=1
"RTN","DGICDL",69,0)
 I X["^^"!(+($G(DGLIT))>0) K DGL Q "^^"
"RTN","DGICDL",70,0)
 S X=$S(+Y>0:$$X(1,.DGL),1:-1)
"RTN","DGICDL",71,0)
 I X>0 S DGZZONE=1
"RTN","DGICDL",72,0)
 Q X
"RTN","DGICDL",73,0)
MUL(DGL,Y) ; Multiple Entries Found
"RTN","DGICDL",74,0)
 Q:+($G(DGLIT))>0 "^^"  N DGLE,DGLL,DGLMAX,DGLSS,DGLX,X
"RTN","DGICDL",75,0)
 S (DGLMAX,DGLSS,DGLIT)=0,DGLL=+($G(Y)),U="^" S:+($G(DGLL))'>0 DGLL=5
"RTN","DGICDL",76,0)
 S DGLX=$O(DGL(" "),-1),DGLSS=0
"RTN","DGICDL",77,0)
 G:+DGLX=0 MULQ W ! W:+DGLX>1 !," ",DGLX," matches found"
"RTN","DGICDL",78,0)
 F DGLE=1:1:DGLX Q:((DGLSS>0)&(DGLSS<(DGLE+1)))  Q:DGLIT  D  Q:DGLIT
"RTN","DGICDL",79,0)
 . W:DGLE#DGLL=1 ! D MULW
"RTN","DGICDL",80,0)
 . S DGLMAX=DGLE W:DGLE#DGLL=0 !
"RTN","DGICDL",81,0)
 . S:DGLE#DGLL=0 DGLSS=$$MULS(DGLMAX,DGLE,.DGL) S:DGLSS["^" DGLIT=1
"RTN","DGICDL",82,0)
 I DGLE#DGLL'=0,+DGLSS<=0 D
"RTN","DGICDL",83,0)
 . W ! S DGLSS=$$MULS(DGLMAX,DGLE,.DGL) S:DGLSS["^" DGLIT=1
"RTN","DGICDL",84,0)
 G MULQ
"RTN","DGICDL",85,0)
 Q X
"RTN","DGICDL",86,0)
MULW ; Write Multiple
"RTN","DGICDL",87,0)
 N DGLEX,DGLI,DGLSO,DGLNC,DGLT,DGLTX S DGLSO=$P(DGL(+DGLE,0),"^",1)
"RTN","DGICDL",88,0)
 S DGLNC=$P(DGL(+DGLE,0),"^",3) S:+DGLNC>0 DGLNC=" ("_DGLNC_")"
"RTN","DGICDL",89,0)
 S DGLEX=$G(DGL(+DGLE,"MENU")),DGLTX(1)=DGLSO
"RTN","DGICDL",90,0)
 S DGLTX(1)=DGLTX(1)_$S($D(DGL(+DGLE,"CAT")):"-",1:" ")_$J(" ",(9-$L(DGLSO)))_" "_DGLEX_DGLNC
"RTN","DGICDL",91,0)
 D PR(.DGLTX,60) W !,$J(DGLE,5),".  ",$G(DGLTX(1))
"RTN","DGICDL",92,0)
 F DGLI=2:1:5 S DGLT=$G(DGLTX(DGLI)) W:$L(DGLT) !,$J(" ",19),DGLT
"RTN","DGICDL",93,0)
 Q
"RTN","DGICDL",94,0)
MULS(X,Y,DGL) ; Select from Multiple Entries
"RTN","DGICDL",95,0)
 N DIR,DIRB,DGLFI,DGLHLP,DGLLAST,DGLMAX,DGLS
"RTN","DGICDL",96,0)
 Q:+($G(DGLIT))>0 "^^"  S DGLMAX=+($G(X)),DGLLAST=+($G(Y))
"RTN","DGICDL",97,0)
 Q:DGLMAX=0 -1 S DGLFI=$O(DGL(0)) Q:+DGLFI'>0 -1
"RTN","DGICDL",98,0)
 I +($O(DGL(+DGLLAST)))>0 D
"RTN","DGICDL",99,0)
 . S DIR("A")=" Press <RETURN> for more, ""^"" to exit, or Select 1-"
"RTN","DGICDL",100,0)
 . S DIR("A")=DIR("A")_DGLMAX_": "
"RTN","DGICDL",101,0)
 I +($O(DGL(+DGLLAST)))'>0 D
"RTN","DGICDL",102,0)
 . S DIR("A")=" Select 1-"_DGLMAX_": "
"RTN","DGICDL",103,0)
 S DGLHLP=" Answer must be from 1 to "
"RTN","DGICDL",104,0)
 S DGLHLP=DGLHLP_DGLMAX_", or <Return> to continue"
"RTN","DGICDL",105,0)
 S DIR("PRE")="S:X[""?"" X=""??"""
"RTN","DGICDL",106,0)
 S (DIR("?"),DIR("??"))="^D MULSH^DGICDL"
"RTN","DGICDL",107,0)
 S DIR(0)="NAO^1:"_DGLMAX_":0" D ^DIR
"RTN","DGICDL",108,0)
 Q:'$D(DTOUT)&('$D(DUOUT))&('$D(DIROUT))&(+($G(Y))'>0) -1
"RTN","DGICDL",109,0)
 S:X["^^"!($D(DTOUT)) DGLIT=1,X="^^" I X["^^"!(+($G(DGLIT))>0) Q "^^"
"RTN","DGICDL",110,0)
 K DIR Q:$D(DTOUT)!(X[U) "^^"
"RTN","DGICDL",111,0)
 Q $S(+Y>0:+Y,1:"-1")
"RTN","DGICDL",112,0)
MULSH ; Select from Multiple Entries Help
"RTN","DGICDL",113,0)
 I $L($G(DGLHLP)) W !,$G(DGLHLP) Q
"RTN","DGICDL",114,0)
 Q
"RTN","DGICDL",115,0)
MULQ ; Quit Multiple
"RTN","DGICDL",116,0)
 I +DGLSS'>0,$G(DGLSS)="^" Q "^"
"RTN","DGICDL",117,0)
 S X=-1 S:+($G(DGLIT))'>0 X=$$X(+DGLSS,.DGL)
"RTN","DGICDL",118,0)
 Q X
"RTN","DGICDL",119,0)
X(X,DGL) ; Set X and Output Array
"RTN","DGICDL",120,0)
 N DGLEX,DGLIEN,DGLN,DGLNC,DGLNN,DGLRN,DGLS,DGLSO
"RTN","DGICDL",121,0)
 S DGLS=+($G(X))
"RTN","DGICDL",122,0)
 S DGLSO=$P($G(DGL(DGLS,0)),"^",1),DGLEX=$G(DGL(DGLS,"MENU"))
"RTN","DGICDL",123,0)
 S DGLIEN=$S($D(DGL(DGLS,"CAT")):"99:CAT;"_$P($G(DGL(DGLS,0)),"^"),1:$P($G(DGL(DGLS,"IDS",1)),"^")_";"_$P($G(DGL(DGLS,0)),"^")_";"_$P($G(DGL(DGLS,"LEX",1)),"^")) Q:'$L(DGLSO) "^"
"RTN","DGICDL",124,0)
 Q:'$L(DGLEX) "^"  Q:+DGLIEN'>0 "^" S X=DGLIEN_"^"_DGLEX
"RTN","DGICDL",125,0)
 S DGLNN="DGL("_+DGLS_")",DGLNC="DGL("_+DGLS_","
"RTN","DGICDL",126,0)
 F  S DGLNN=$Q(@DGLNN) Q:'$L(DGLNN)!(DGLNN'[DGLNC)  D
"RTN","DGICDL",127,0)
 . S DGLRN="DGLN("_$P(DGLNN,"(",2,299) S @DGLRN=@DGLNN
"RTN","DGICDL",128,0)
 K DGL S DGLNN="DGLN("_+DGLS_")",DGLNC="DGLN("_+DGLS_","
"RTN","DGICDL",129,0)
 F  S DGLNN=$Q(@DGLNN) Q:'$L(DGLNN)!(DGLNN'[DGLNC)  D
"RTN","DGICDL",130,0)
 . S DGLRN="DGL("_$P(DGLNN,"(",2,299),@DGLRN=@DGLNN
"RTN","DGICDL",131,0)
 Q X
"RTN","DGICDL",132,0)
 ; 
"RTN","DGICDL",133,0)
 ; Miscellaneous
"RTN","DGICDL",134,0)
CL ; Clear
"RTN","DGICDL",135,0)
 K DGLIT
"RTN","DGICDL",136,0)
 Q
"RTN","DGICDL",137,0)
PR(DGL,X) ; Parse Array
"RTN","DGICDL",138,0)
 N DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,I,Z,%,%D,DGLC,DGLI,DGLL
"RTN","DGICDL",139,0)
 K ^UTILITY($J,"W") Q:'$D(DGL)  S DGLL=+($G(X)) S:+DGLL'>0 DGLL=79
"RTN","DGICDL",140,0)
 S DGLC=+($G(DGL)) S:+($G(DGLC))'>0 DGLC=$O(DGL(" "),-1) Q:+DGLC'>0
"RTN","DGICDL",141,0)
 S DIWL=1,DIWF="C"_+DGLL S DGLI=0
"RTN","DGICDL",142,0)
 F  S DGLI=$O(DGL(DGLI)) Q:+DGLI=0  S X=$G(DGL(DGLI)) D ^DIWP
"RTN","DGICDL",143,0)
 K DGL S (DGLC,DGLI)=0
"RTN","DGICDL",144,0)
 F  S DGLI=$O(^UTILITY($J,"W",1,DGLI)) Q:+DGLI=0  D
"RTN","DGICDL",145,0)
 . S DGL(DGLI)=$$TM($G(^UTILITY($J,"W",1,DGLI,0))," "),DGLC=DGLC+1
"RTN","DGICDL",146,0)
 S:$L(DGLC) DGL=DGLC K ^UTILITY($J,"W")
"RTN","DGICDL",147,0)
 Q
"RTN","DGICDL",148,0)
TM(X,Y) ; Trim Character Y - Default " "
"RTN","DGICDL",149,0)
 S X=$G(X) Q:X="" X S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","DGICDL",150,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","DGICDL",151,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","DGICDL",152,0)
 Q X
"RTN","DGICP")
0^49^B26601934^n/a
"RTN","DGICP",1,0)
DGICP ;AL/AAS KUM - LOOK UP ICD-10 PROCEDURE CODE;12/07/2011
"RTN","DGICP",2,0)
 ;;5.3;Registration;**850**;Aug 13, 1993;Build 171
"RTN","DGICP",3,0)
 ;copied from ICDCODLK 
"RTN","DGICP",4,0)
 ;
"RTN","DGICP",5,0)
 ; ICDDATE is EFFECTIVE DATE that is passed in from Calling Routine
"RTN","DGICP",6,0)
 ;
"RTN","DGICP",7,0)
EN ; Initialize variables
"RTN","DGICP",8,0)
 W ! ;@IOF
"RTN","DGICP",9,0)
 D LOOK
"RTN","DGICP",10,0)
 G EXIT
"RTN","DGICP",11,0)
LOOK ; Look-up term
"RTN","DGICP",12,0)
 W !! K X D ASK K DIC
"RTN","DGICP",13,0)
AGAIN ; Try again?
"RTN","DGICP",14,0)
 Q
"RTN","DGICP",15,0)
ASK ; Get user input
"RTN","DGICP",16,0)
 N DIR,DIRUT,DIROUT,ICDDATE1,ICDT1,ICDX,DGXX
"RTN","DGICP",17,0)
 Q:X="?BAD"!(X["^")
"RTN","DGICP",18,0)
 I X["?" D  K X,Y Q  ; - added here for calls that bypass ^DGICDGT
"RTN","DGICP",19,0)
 . N TAG,FORMAT
"RTN","DGICP",20,0)
 . S TAG=$S(X["???":"P3^DGICDGT",X["??":"P2^DGICDGT",X["?":"P1^DGICDGT",1:"P1^DGICDGT")
"RTN","DGICP",21,0)
 . D @TAG
"RTN","DGICP",22,0)
 . Q
"RTN","DGICP",23,0)
 ; If processing a procedure then use entered procedure date for effective date
"RTN","DGICP",24,0)
 N DGPRDT S DGPRDT=$S(+$G(DGPROCD):+DGPROCD,1:+$G(DGPROCI,0))
"RTN","DGICP",25,0)
 S ICDDATE=$G(DGPRDT)
"RTN","DGICP",26,0)
 ;S ICDDATE=$G(EFFDATE)
"RTN","DGICP",27,0)
 S:'ICDDATE ICDDATE=$G(EFFDATE)
"RTN","DGICP",28,0)
 I $G(ICDDATE)'="" S ICDDATE1=ICDDATE
"RTN","DGICP",29,0)
 S ICDPRC=$G(X),ICDX=0
"RTN","DGICP",30,0)
 S ICDPRC=$$TR(X)
"RTN","DGICP",31,0)
 S ICDRES=1
"RTN","DGICP",32,0)
 F ICDT1=1:1 Q:($L($G(ICDPRC))>6)!(ICDPRC["^")!(ICDRES=0)  D
"RTN","DGICP",33,0)
 . S ICDRES=$$PCSDIG^LEX10CS(ICDPRC,$G(ICDDATE1))
"RTN","DGICP",34,0)
 . I ICDRES=1 D
"RTN","DGICP",35,0)
 . . D LOAD
"RTN","DGICP",36,0)
 . . D PRCDESCB
"RTN","DGICP",37,0)
 . . D PRCDESC
"RTN","DGICP",38,0)
 . . S X=$$SEL^DGICPL(.ICDS,5)
"RTN","DGICP",39,0)
 . . I X'=-1 S ICDPRC=ICDPRC_$P(X,"^",1)
"RTN","DGICP",40,0)
 . . S ICDX=1
"RTN","DGICP",41,0)
 . . D GICDPRC
"RTN","DGICP",42,0)
 . I ICDRES'=1 W !,ICDPRC_" IS NOT A VALID ICD PROCEDURE CODE" G EXIT
"RTN","DGICP",43,0)
 I ICDPRC["^" G EXIT
"RTN","DGICP",44,0)
 I $L($G(ICDPRC))=7 D
"RTN","DGICP",45,0)
 . S ICDRES=$$PCSDIG^LEX10CS(ICDPRC,$G(ICDDATE1))
"RTN","DGICP",46,0)
 . I ICDRES=1 D
"RTN","DGICP",47,0)
 . . S ICDPDESC=LEXPCDAT("PCSDESC")
"RTN","DGICP",48,0)
 . . S ICDPSTS=LEXPCDAT("STATUS")
"RTN","DGICP",49,0)
 . . D PRCDESCB
"RTN","DGICP",50,0)
 . . D PRCDESC
"RTN","DGICP",51,0)
 . . W !,"   ",ICDPDESC
"RTN","DGICP",52,0)
 . . S DGXX=+$$CODEN^ICDEX(ICDPRC,80.1)
"RTN","DGICP",53,0)
 . . I '$P(ICDPSTS,"^",1) W "   **CODE INACTIVE" I $P(ICDPSTS,"^",2)'="" S Y=$P(ICDPSTS,"^",2) D DD^%DT W " AS OF   ",Y," **",!
"RTN","DGICP",54,0)
 . I ICDRES'=1 D
"RTN","DGICP",55,0)
 . . W !,ICDPRC_" IS NOT VALID"
"RTN","DGICP",56,0)
 I $L($G(ICDPRC))>7 W !,ICDPRC_" IS NOT A VALID ICD PROCEDURE CODE"
"RTN","DGICP",57,0)
 K X,Y
"RTN","DGICP",58,0)
 S:$G(DGXX) (X,Y)=DGXX
"RTN","DGICP",59,0)
 K ICDDATE1,ICDPRC,ICDRES,ICDPDESC,ICDPSTS,LEXPCDAT
"RTN","DGICP",60,0)
 Q
"RTN","DGICP",61,0)
INPHLP ; Look-up help
"RTN","DGICP",62,0)
 Q:X["^^" "^^"  Q:X["^" "^"
"RTN","DGICP",63,0)
 W !,"      Enter a ""free text"" term.  Best results occur using one to "
"RTN","DGICP",64,0)
 W !,"      three full or partial words without a suffix"
"RTN","DGICP",65,0)
 W:$G(X)'["??" "."
"RTN","DGICP",66,0)
 W:$G(X)["??" " (i.e., ""DIABETES"","
"RTN","DGICP",67,0)
 W:$G(X)["??" !,"      ""DIAB MELL"",""DIAB MELL INSUL"")"
"RTN","DGICP",68,0)
 W !,"  or  "
"RTN","DGICP",69,0)
 W !,"      Enter a classification code (ICD/CPT etc) to find the single "
"RTN","DGICP",70,0)
 W !,"      term associated with the code."
"RTN","DGICP",71,0)
 W:$G(X)["??" "  Example, a lookup of code 239.0 "
"RTN","DGICP",72,0)
 W:$G(X)["??" !,"      returns one and only one term, that is the preferred "
"RTN","DGICP",73,0)
 W:$G(X)["??" !,"      term for the code 239.0, ""Neoplasm of unspecified nature "
"RTN","DGICP",74,0)
 W:$G(X)["??" !,"      of digestive system"""
"RTN","DGICP",75,0)
 W !,"  or  "
"RTN","DGICP",76,0)
 W !,"      Enter a classification code (ICD/CPT etc) followed by a plus"
"RTN","DGICP",77,0)
 W !,"      sign (+) to retrieve all terms associated with the code."
"RTN","DGICP",78,0)
 W:$G(X)["??" "  Example,"
"RTN","DGICP",79,0)
 W:$G(X)["??" !,"      a lookup of 239.0+ returns all terms that are linked to the "
"RTN","DGICP",80,0)
 W:$G(X)["??" !,"      code 239.0."
"RTN","DGICP",81,0)
 Q
"RTN","DGICP",82,0)
EXIT ; Clean up environment and quit
"RTN","DGICP",83,0)
 K %,DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,LEX,X,Y,ICDLEX
"RTN","DGICP",84,0)
 Q
"RTN","DGICP",85,0)
X(ICDLEX) ; Evaluate X
"RTN","DGICP",86,0)
 Q:$L($G(X)) 1  Q 0
"RTN","DGICP",87,0)
Y(ICDLEX) ; Evaluate Y
"RTN","DGICP",88,0)
 Q:+($G(Y))>1 1  Q 0
"RTN","DGICP",89,0)
LOAD ; Load dummy data
"RTN","DGICP",90,0)
 K ICDS
"RTN","DGICP",91,0)
 S ICDLOAD1=1
"RTN","DGICP",92,0)
 S PICDLOAD=""
"RTN","DGICP",93,0)
 S ICDLOAD="" F  S ICDLOAD=$O(LEXPCDAT("NEXLEV",ICDLOAD)) Q:ICDLOAD=""  D
"RTN","DGICP",94,0)
 . I ICDLOAD'=PICDLOAD D
"RTN","DGICP",95,0)
 . . S ICDS(ICDLOAD1,0)=ICDLOAD
"RTN","DGICP",96,0)
 . . S ICDS(ICDLOAD1,"LEX")=LEXPCDAT("NEXLEV",ICDLOAD,"DESC")
"RTN","DGICP",97,0)
 . . S ICDLOAD1=ICDLOAD1+1
"RTN","DGICP",98,0)
 . . S PICDLOAD=ICDLOAD
"RTN","DGICP",99,0)
 K ICDLOAD1,PICDLOAD,ICDLOAD
"RTN","DGICP",100,0)
 Q
"RTN","DGICP",101,0)
PRCDESC ; Display Descriptions of each character
"RTN","DGICP",102,0)
 S ICDPRCT=ICDPRC,ICDPRCT1="",ICDX=0
"RTN","DGICP",103,0)
 F ICDTEMP=1:1 Q:ICDPRCT=""  D
"RTN","DGICP",104,0)
 . S ICDC=$E(ICDPRCT,1,1)
"RTN","DGICP",105,0)
 . S ICDRES=$$PCSDIG^LEX10CS(ICDPRCT1,$G(ICDDATE1))
"RTN","DGICP",106,0)
 . I ICDRES'=1 D
"RTN","DGICP",107,0)
 . . S ICDPRCT=""
"RTN","DGICP",108,0)
 . I ICDRES=1 D
"RTN","DGICP",109,0)
 . . S ICDLOAD="" F  S ICDLOAD=$O(LEXPCDAT("NEXLEV",ICDLOAD)) Q:ICDLOAD=""!(ICDLOAD=ICDC)
"RTN","DGICP",110,0)
 . . I ICDLOAD=ICDC W ICDC_" - "_LEXPCDAT("NEXLEV",ICDLOAD,"DESC") W !
"RTN","DGICP",111,0)
 . . S ICDPRCT=$E(ICDPRCT,2,$L(ICDPRCT))
"RTN","DGICP",112,0)
 . . S ICDPRCT1=ICDPRCT1_ICDC
"RTN","DGICP",113,0)
 K ICDTEMP,ICDPRCT,ICDPRCT1,ICDC,ICDLOAD
"RTN","DGICP",114,0)
 Q
"RTN","DGICP",115,0)
GICDPRC ; Get ICDPRC from User
"RTN","DGICP",116,0)
AA ; Read character by character
"RTN","DGICP",117,0)
 W !
"RTN","DGICP",118,0)
 I $G(ICDX)=1 D PRCDESC  W !
"RTN","DGICP",119,0)
 W "Press '*' to display available choices for next character or '^' to exit."
"RTN","DGICP",120,0)
 W !,"ICD-10 Procedure code:"_ICDPRC S ICDREAD="R *ICDA:300 I '$T S ICDA=13"
"RTN","DGICP",121,0)
 I $L(ICDPRC)>6 G BB
"RTN","DGICP",122,0)
 X ICDREAD
"RTN","DGICP",123,0)
 ; show choices on "*"
"RTN","DGICP",124,0)
 I ICDA=42 G BB
"RTN","DGICP",125,0)
 ; Exit when Enter and is full length else ignore
"RTN","DGICP",126,0)
 I ICDA=13 G:$L(ICDPRC)>6 BB G AA
"RTN","DGICP",127,0)
 ; If Backspace is entered, truncate last character and display the ICDPRC 
"RTN","DGICP",128,0)
 I ICDA=127 S ICDPRC=$E(ICDPRC,1,$L(ICDPRC)-1) S ICDX=1 G AA
"RTN","DGICP",129,0)
 ; If ^ is entered, exit
"RTN","DGICP",130,0)
 I ICDA=94 S ICDPRC=ICDPRC_$C(ICDA) G BB
"RTN","DGICP",131,0)
 ;
"RTN","DGICP",132,0)
 ; check for valid characters
"RTN","DGICP",133,0)
 I ICDA<48!((ICDA>57)&(ICDA<65))!((ICDA>90)&(ICDA<97))!(ICDA>122) G AA
"RTN","DGICP",134,0)
 ;
"RTN","DGICP",135,0)
 ; Any character other than Enter or Backspace
"RTN","DGICP",136,0)
 I ICDA'=127 D  G:$L(ICDPRC)>6 BB G AA
"RTN","DGICP",137,0)
 . S ICDPRC=ICDPRC_$$TR($C(ICDA))
"RTN","DGICP",138,0)
 . S ICDX=1
"RTN","DGICP",139,0)
BB ;Exit
"RTN","DGICP",140,0)
 W !
"RTN","DGICP",141,0)
 K ICDA,ICDREAD
"RTN","DGICP",142,0)
 Q
"RTN","DGICP",143,0)
PRCDESCB ; Call Before PRCDESC
"RTN","DGICP",144,0)
 W !,"ICD-10 Procedure code:"_ICDPRC
"RTN","DGICP",145,0)
 W !
"RTN","DGICP",146,0)
 Q
"RTN","DGICP",147,0)
 ;
"RTN","DGICP",148,0)
TR(X) ;
"RTN","DGICP",149,0)
 S X=$TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","DGICP",150,0)
 Q X
"RTN","DGICPL")
0^50^B30865954^n/a
"RTN","DGICPL",1,0)
DGICPL ;ALB/KUM - Select ICD PROCEDURE FROM A LEXICON UTILITY LIST ;12/07/2011
"RTN","DGICPL",2,0)
 ;;5.3;Registration;**850**;Aug 13, 1993;Build 171
"RTN","DGICPL",3,0)
 ;
"RTN","DGICPL",4,0)
 ;
"RTN","DGICPL",5,0)
SEL(ICDSRL,X) ; Select from List
"RTN","DGICPL",6,0)
 ;
"RTN","DGICPL",7,0)
 ; Input   
"RTN","DGICPL",8,0)
 ; 
"RTN","DGICPL",9,0)
 ;     X     Length of list to display (default 5)
"RTN","DGICPL",10,0)
 ;    .ICDSRL   Local array passed by reference
"RTN","DGICPL",11,0)
 ;               
"RTN","DGICPL",12,0)
 ;             ICDSRL()   Input Array from ICDSRCH^LEX10CS
"RTN","DGICPL",13,0)
 ;               
"RTN","DGICPL",14,0)
 ;             ICDSRL(0)=# found ^ Pruning Indicator
"RTN","DGICPL",15,0)
 ;             ICDSRL(1,0)=Code ^ Code IEN ^ date
"RTN","DGICPL",16,0)
 ;             ICDSRL(1,"IDL")=ICD-9/10 Description, Long
"RTN","DGICPL",17,0)
 ;             ICDSRL(1,"IDL",1)=ICD-9/10 IEN ^ date
"RTN","DGICPL",18,0)
 ;             ICDSRL(1,"IDS")=ICD-9/10 Description, Short
"RTN","DGICPL",19,0)
 ;             ICDSRL(1,"IDS",1)=ICD-9/10 IEN ^ date
"RTN","DGICPL",20,0)
 ;             ICDSRL(1,"LEX")=Lexicon Description
"RTN","DGICPL",21,0)
 ;             ICDSRL(1,"LEX",1)=Expression IEN ^ date
"RTN","DGICPL",22,0)
 ;             ICDSRL(1,"SYN",1)=Synonym #1
"RTN","DGICPL",23,0)
 ;             ICDSRL(1,"SYN",m)=Synonym #m
"RTN","DGICPL",24,0)
 ;             ...
"RTN","DGICPL",25,0)
 ;               
"RTN","DGICPL",26,0)
 ; Output
"RTN","DGICPL",27,0)
 ;               
"RTN","DGICPL",28,0)
 ;    $$SEL  Two Piece "^" delimited string same as
"RTN","DGICPL",29,0)
 ;           Fileman's Y output variable
"RTN","DGICPL",30,0)
 ;               
"RTN","DGICPL",31,0)
 ;             1  Lexicon IEN
"RTN","DGICPL",32,0)
 ;             2  Lexicon Term
"RTN","DGICPL",33,0)
 ;               
"RTN","DGICPL",34,0)
 ;    ICDSRL    Local array passed by reference
"RTN","DGICPL",35,0)
 ;               
"RTN","DGICPL",36,0)
 ;             ICDSRL(0)=Code ^ Code IEN ^ date
"RTN","DGICPL",37,0)
 ;             ICDSRL("IDL")=ICD-9/10 Description, Long
"RTN","DGICPL",38,0)
 ;             ICDSRL("IDL",1)=ICD-9/10 IEN ^ date
"RTN","DGICPL",39,0)
 ;             ICDSRL("IDS")=ICD-9/10 Description, Short
"RTN","DGICPL",40,0)
 ;             ICDSRL("IDS",1)=ICD-9/10 IEN ^ date
"RTN","DGICPL",41,0)
 ;             ICDSRL("LEX")=Lexicon Description
"RTN","DGICPL",42,0)
 ;             ICDSRL("LEX",1)=Expression IEN ^ date
"RTN","DGICPL",43,0)
 ;               
"RTN","DGICPL",44,0)
 ;    or ^ on error 
"RTN","DGICPL",45,0)
 ;    or -1 for non-selection
"RTN","DGICPL",46,0)
 ;               
"RTN","DGICPL",47,0)
 S X=+($G(X)) S:X'>0 X=5 S X=$$ASK(.ICDSRL,X)
"RTN","DGICPL",48,0)
 Q X
"RTN","DGICPL",49,0)
ASK(ICDSRL,X) ;   Ask for Selection
"RTN","DGICPL",50,0)
 K X N ICDSRLIT,ICDSRLL,ICDSRTOT S ICDSRLL=+($G(X)) S:ICDSRLL'>0 ICDSRLL=5
"RTN","DGICPL",51,0)
 S ICDSRLIT=0,ICDSRTOT=$O(ICDSRL(" "),-1) Q:+ICDSRTOT'>0 "^"
"RTN","DGICPL",52,0)
 K X S:+ICDSRTOT=1 X=$$ONE(ICDSRLL,.ICDSRL) S:+ICDSRTOT>1 X=$$MUL(.ICDSRL,ICDSRLL)
"RTN","DGICPL",53,0)
 Q X
"RTN","DGICPL",54,0)
ONE(X,ICDSRL) ;     One Entry Found
"RTN","DGICPL",55,0)
 Q:+($G(ICDSRLIT))>0 "^^"  N DIR,DTOUT,ICDSRLC,ICDSRLEX,ICDSRLFI,ICDSRLIT,ICDSRLSO
"RTN","DGICPL",56,0)
 N ICDSRLSP,ICDSRLTX,Y
"RTN","DGICPL",57,0)
 S ICDSRLFI=$O(ICDSRL(0)) Q:+ICDSRLFI'>0 "^"  S ICDSRLSP=$J(" ",25)
"RTN","DGICPL",58,0)
 S ICDSRLSO=$P(ICDSRL(1,0),"^",1),ICDSRLEX=$G(ICDSRL(1,"LEX"))
"RTN","DGICPL",59,0)
 S ICDSRLTX(1)=ICDSRLSO_$J(" ",(9-$L(ICDSRLSO)))_" "_ICDSRLEX
"RTN","DGICPL",60,0)
 D PR(.ICDSRLTX,64) S DIR("A",1)=" One code found for character "_($L($G(ICDPRC))+1)_".",DIR("A",2)=" "
"RTN","DGICPL",61,0)
 S DIR("A",3)="     "_$G(ICDSRLTX(1)),ICDSRLC=3 I $L($G(ICDSRLTX(2))) D
"RTN","DGICPL",62,0)
 . S ICDSRLC=ICDSRLC+1,DIR("A",ICDSRLC)=ICDSRLSP_$G(ICDSRLTX(2))
"RTN","DGICPL",63,0)
 S ICDSRLC=ICDSRLC+1,DIR("A",ICDSRLC)=" ",ICDSRLC=ICDSRLC+1
"RTN","DGICPL",64,0)
 S DIR("A")="   OK?  (Yes/No)  ",DIR("B")="Yes",DIR(0)="YAO" W !
"RTN","DGICPL",65,0)
 D ^DIR S:X["^^"!($D(DTOUT)) ICDSRLIT=1
"RTN","DGICPL",66,0)
 I X["^^"!(+($G(ICDSRLIT))>0) K ICDSRL Q "^^"
"RTN","DGICPL",67,0)
 S X=$S(+Y>0:$$X(1,.ICDSRL),1:-1)
"RTN","DGICPL",68,0)
 Q X
"RTN","DGICPL",69,0)
MUL(ICDSRL,Y) ;     Multiple Entries Found
"RTN","DGICPL",70,0)
 Q:+($G(ICDSRLIT))>0 "^^"  N ICDSRLE,ICDSRLL,ICDSRMAX,ICDSRLSS,ICDSRLX,X
"RTN","DGICPL",71,0)
 S (ICDSRMAX,ICDSRLSS,ICDSRLIT)=0,ICDSRLL=+($G(Y)),U="^" S:+($G(ICDSRLL))'>0 ICDSRLL=5
"RTN","DGICPL",72,0)
 S ICDSRLX=$O(ICDSRL(" "),-1),ICDSRLSS=0
"RTN","DGICPL",73,0)
 G:+ICDSRLX=0 MULQ W ! W:+ICDSRLX>1 !," ",ICDSRLX," matches found for character ",$L($G(ICDPRC))+1,"."
"RTN","DGICPL",74,0)
 F ICDSRLE=1:1:ICDSRLX Q:((ICDSRLSS>0)&(ICDSRLSS<(ICDSRLE+1)))  Q:ICDSRLIT  D  Q:ICDSRLIT
"RTN","DGICPL",75,0)
 . W:ICDSRLE#ICDSRLL=1 ! D MULW
"RTN","DGICPL",76,0)
 . S ICDSRMAX=ICDSRLE W:ICDSRLE#ICDSRLL=0 !
"RTN","DGICPL",77,0)
 . S:ICDSRLE#ICDSRLL=0 ICDSRLSS=$$MULS(ICDSRMAX,ICDSRLE,.ICDSRL) S:ICDSRLSS["^" ICDSRLIT=1
"RTN","DGICPL",78,0)
 I ICDSRLE#ICDSRLL'=0,+ICDSRLSS<=0 D
"RTN","DGICPL",79,0)
 . W ! S ICDSRLSS=$$MULS(ICDSRMAX,ICDSRLE,.ICDSRL) S:ICDSRLSS["^" ICDSRLIT=1
"RTN","DGICPL",80,0)
 G MULQ
"RTN","DGICPL",81,0)
 Q X
"RTN","DGICPL",82,0)
MULW ;       Write Multiple
"RTN","DGICPL",83,0)
 N ICDSRLEX,ICDSRLI,ICDSRLSO,ICDSRLT,ICDSRLTX S ICDSRLSO=$P(ICDSRL(+ICDSRLE,0),"^",1)
"RTN","DGICPL",84,0)
 S ICDSRLEX=$G(ICDSRL(+ICDSRLE,"LEX")),ICDSRLTX(1)=ICDSRLSO
"RTN","DGICPL",85,0)
 S ICDSRLTX(1)=ICDSRLTX(1)_$J(" ",(9-$L(ICDSRLSO)))_" "_ICDSRLEX
"RTN","DGICPL",86,0)
 D PR(.ICDSRLTX,63) W !,$J(ICDSRLE,5),".  ",$G(ICDSRLTX(1))
"RTN","DGICPL",87,0)
 F ICDSRLI=2:1:5 S ICDSRLT=$G(ICDSRLTX(ICDSRLI)) W:$L(ICDSRLT) !,$J(" ",18),ICDSRLT
"RTN","DGICPL",88,0)
 Q
"RTN","DGICPL",89,0)
MULS(X,Y,ICDSRL) ;       Select from Multiple Entries
"RTN","DGICPL",90,0)
 N DIR,DIRB,DIROUT,DIRUT,DTOUT,DUOUT,ICDSRLFI,ICDSRHLP,ICDSRLAST,ICDSRMAX,ICDSRLS
"RTN","DGICPL",91,0)
 Q:+($G(ICDSRLIT))>0 "^^"  S ICDSRMAX=+($G(X)),ICDSRLAST=+($G(Y))
"RTN","DGICPL",92,0)
 Q:ICDSRMAX=0 -1  S ICDSRLFI=$O(ICDSRL(0)) Q:+ICDSRLFI'>0 -1
"RTN","DGICPL",93,0)
 I +($O(ICDSRL(+ICDSRLAST)))>0 D
"RTN","DGICPL",94,0)
 . S DIR("A")=" Press <RETURN> for more, '^' to quit selection, or Select 1-"
"RTN","DGICPL",95,0)
 . S DIR("A")=DIR("A")_ICDSRMAX_":  "
"RTN","DGICPL",96,0)
 I +($O(ICDSRL(+ICDSRLAST)))'>0 D
"RTN","DGICPL",97,0)
 . S DIR("A")=" Select 1-"_ICDSRMAX_":  "
"RTN","DGICPL",98,0)
 S ICDSRHLP="    Answer must be from 1 to "
"RTN","DGICPL",99,0)
 S ICDSRHLP=ICDSRHLP_ICDSRMAX_", or <Return> to continue"
"RTN","DGICPL",100,0)
 S DIR("PRE")="S:X[""?"" X=""??"""
"RTN","DGICPL",101,0)
 S (DIR("?"),DIR("??"))="^D MULSH^ICDSELPS"
"RTN","DGICPL",102,0)
 S DIR(0)="NAO^1:"_ICDSRMAX_":0" D ^DIR
"RTN","DGICPL",103,0)
 I X["^^"!($D(DTOUT)) S ICDSRLIT=1,X="^^" Q "^^"
"RTN","DGICPL",104,0)
 K DIR Q:$D(DTOUT)!(X[U) "^"
"RTN","DGICPL",105,0)
 Q $S(+Y>0:+Y,1:"-1")
"RTN","DGICPL",106,0)
MULSH ;       Select from Multiple Entries Help
"RTN","DGICPL",107,0)
 I $L($G(ICDSRHLP)) W !,$G(ICDSRHLP) Q
"RTN","DGICPL",108,0)
 Q
"RTN","DGICPL",109,0)
MULQ ;       Quit Multiple Entries Selection
"RTN","DGICPL",110,0)
 Q:+($G(ICDSRLSS))'>0 -1  S X=-1 S:+($G(ICDSRLIT))'>0 X=$$X(+ICDSRLSS,.ICDSRL)
"RTN","DGICPL",111,0)
 Q X
"RTN","DGICPL",112,0)
X(X,ICDSRL) ;   Set X and Outpot Array
"RTN","DGICPL",113,0)
 N ICDSRLEX,LEXFI,ICDSRLIEN,ICDSRLN,ICDSRLNC,ICDSRLNN,ICDSRLRN,ICDSRLS,ICDSRLSO
"RTN","DGICPL",114,0)
 S ICDSRLS=+($G(X)) S LEXFI=$O(LEX(0))
"RTN","DGICPL",115,0)
 S ICDSRLSO=$P($G(ICDSRL(ICDSRLS,0)),"^",1)
"RTN","DGICPL",116,0)
 S ICDSRLEX=$G(ICDSRL(ICDSRLS,"LEX"))
"RTN","DGICPL",117,0)
 Q:'$L(ICDSRLEX) "^" S X=ICDSRLSO_"^"_ICDSRLEX
"RTN","DGICPL",118,0)
 Q X
"RTN","DGICPL",119,0)
 ;        
"RTN","DGICPL",120,0)
 ; Miscellaneous
"RTN","DGICPL",121,0)
CL ;   Clear
"RTN","DGICPL",122,0)
 K ICDSRLIT
"RTN","DGICPL",123,0)
 Q
"RTN","DGICPL",124,0)
PR(ICDSRL,X) ;   Parse Array
"RTN","DGICPL",125,0)
 N DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,ICDSRLC,ICDSRLI,ICDSRLL
"RTN","DGICPL",126,0)
 K ^UTILITY($J,"W") Q:'$D(ICDSRL)  S ICDSRLL=+($G(X)) S:+ICDSRLL'>0 ICDSRLL=79
"RTN","DGICPL",127,0)
 S ICDSRLC=+($G(ICDSRL)) S:+($G(ICDSRLC))'>0 ICDSRLC=$O(ICDSRL(" "),-1) Q:+ICDSRLC'>0
"RTN","DGICPL",128,0)
 S DIWL=1,DIWF="C"_+ICDSRLL S ICDSRLI=0
"RTN","DGICPL",129,0)
 F  S ICDSRLI=$O(ICDSRL(ICDSRLI)) Q:+ICDSRLI=0  S X=$G(ICDSRL(ICDSRLI)) D ^DIWP
"RTN","DGICPL",130,0)
 K ICDSRL S (ICDSRLC,ICDSRLI)=0
"RTN","DGICPL",131,0)
 F  S ICDSRLI=$O(^UTILITY($J,"W",1,ICDSRLI)) Q:+ICDSRLI=0  D
"RTN","DGICPL",132,0)
 . S ICDSRL(ICDSRLI)=$$TM($G(^UTILITY($J,"W",1,ICDSRLI,0))," "),ICDSRLC=ICDSRLC+1
"RTN","DGICPL",133,0)
 S:$L(ICDSRLC) ICDSRL=ICDSRLC K ^UTILITY($J,"W")
"RTN","DGICPL",134,0)
 Q
"RTN","DGICPL",135,0)
TM(X,Y) ;   Trim Character Y - Default " "
"RTN","DGICPL",136,0)
 S X=$G(X) Q:X="" X  S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","DGICPL",137,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","DGICPL",138,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","DGICPL",139,0)
 Q X
"RTN","DGMSTR3")
0^34^B55740424^B50687250
"RTN","DGMSTR3",1,0)
DGMSTR3 ;ALB/GRR - GENERATE AND PRINT MST STATISTICAL REPORT ;1/30/01 10:45am
"RTN","DGMSTR3",2,0)
 ;;5.3;Registration;**195,319,850**; Aug 13, 1993;Build 171
"RTN","DGMSTR3",3,0)
 ;^TMP("DGMSTR3,JOB... - Array to hold ICD codes
"RTN","DGMSTR3",4,0)
 ;DGPCDT - Current date in print format
"RTN","DGMSTR3",5,0)
 ;DGSDAT - Start Date of selection range
"RTN","DGMSTR3",6,0)
 ;DGEDAT - End Date of selection range
"RTN","DGMSTR3",7,0)
 ;DGDX - ICD Code
"RTN","DGMSTR3",8,0)
 ;DGDLOS - Length of Stay
"RTN","DGMSTR3",9,0)
 ;DGPDAYS - Pass days
"RTN","DGMSTR3",10,0)
 ;DGMST("N") - Number of new cases of MST
"RTN","DGMSTR3",11,0)
 ;DGMST("O","R") - Number of outpatient visits related to MST
"RTN","DGMSTR3",12,0)
 ;DGMST("O","NR") - Number of outpatient visits not related to MST
"RTN","DGMSTR3",13,0)
 ;DGMST("O","U") - Number of unique outpatients treated for MST
"RTN","DGMSTR3",14,0)
 ;DGMST("O","AR") - Average number of outpatient visits related to MST
"RTN","DGMSTR3",15,0)
 ;DGMST("O","ANR") - Average number of outpatient visits not related to MST
"RTN","DGMSTR3",16,0)
 ;DGMST("I",  -  Same totals as above except for inpatient
"RTN","DGMSTR3",17,0)
 ;DGMST("LOS") - Total Length of Stay related to MST
"RTN","DGMSTR3",18,0)
EN ;ENTRY POINT FOR ROUTINE
"RTN","DGMSTR3",19,0)
 N TJOB
"RTN","DGMSTR3",20,0)
 S TJOB=$J
"RTN","DGMSTR3",21,0)
 K ^TMP("DGMSTR3",$J)
"RTN","DGMSTR3",22,0)
 N DGMST,DGPCDT,DGSUB,DGSTAT,DGPSDT,DGPEDT,DTOUT,DUOUT,ZTSAVE,X,Y
"RTN","DGMSTR3",23,0)
 N DTOUT,DUOUT,ZTSAVE,DGLABEL,EFFDATE,IMPDATE,DGTEMP,VA,VAERR,DGPTDAT
"RTN","DGMSTR3",24,0)
 K DGMST
"RTN","DGMSTR3",25,0)
 D DT^DICRW
"RTN","DGMSTR3",26,0)
 S Y=DT D DD^%DT S DGPCDT=Y
"RTN","DGMSTR3",27,0)
 F DGSTAT="O","I" F DGSUB="R","NR","U","AR","ANR","T" S DGMST(DGSTAT,DGSUB)=0
"RTN","DGMSTR3",28,0)
 S DGMST("N")=0,DGMST("LOS")=0,DGMST("ALOS")=0
"RTN","DGMSTR3",29,0)
 ;GET DATE RANGE
"RTN","DGMSTR3",30,0)
 S DGTEMP=$$IMPDATE^DGPTIC10("10D"),IMPDATE=+DGTEMP
"RTN","DGMSTR3",31,0)
SDAT S DIR(0)="D^:"_DT_":EXP",DIR("A")="Start Date"
"RTN","DGMSTR3",32,0)
 D ^DIR K DIR
"RTN","DGMSTR3",33,0)
 Q:$D(DTOUT)!($D(DUOUT))
"RTN","DGMSTR3",34,0)
 S DGSDAT=+Y,Y=+Y D DD^%DT S DGPSDT=Y
"RTN","DGMSTR3",35,0)
TDAT ;
"RTN","DGMSTR3",36,0)
 S DIR(0)="D^"_DGSDAT_":"_DT_":EXP",DIR("A")="End Date"
"RTN","DGMSTR3",37,0)
 I DGSDAT<IMPDATE,DT'<IMPDATE D
"RTN","DGMSTR3",38,0)
 . W !!,?10,"Start date is before ICD-10 implementation.",!,?10,"End date must be before ICD-10 implementation",!
"RTN","DGMSTR3",39,0)
 . S DIR(0)="D^"_DGSDAT_":"_$$FMADD^XLFDT(IMPDATE,-1)_":EXP"
"RTN","DGMSTR3",40,0)
 D ^DIR K DIR
"RTN","DGMSTR3",41,0)
 Q:$D(DTOUT)!($D(DUOUT))
"RTN","DGMSTR3",42,0)
 S DGEDAT=+Y_.9999,Y=+Y D DD^%DT S DGPEDT=Y
"RTN","DGMSTR3",43,0)
DEVICE F X="DGMST(","DGSDAT","DGPSDT","DGEDAT","DGPEDT","DGPCDT" S ZTSAVE(X)=""
"RTN","DGMSTR3",44,0)
 W !!,"This may take long to print, queue the report to free-up your terminal!",!
"RTN","DGMSTR3",45,0)
 D EN^XUTMDEVQ("RPT^DGMSTR3","MST Statistical Summary",.ZTSAVE)
"RTN","DGMSTR3",46,0)
 D HOME^%ZIS
"RTN","DGMSTR3",47,0)
 Q
"RTN","DGMSTR3",48,0)
RPT ;LOOP THROUGH AND CALCULATE NEW MST CASES
"RTN","DGMSTR3",49,0)
 N DFN,SEX,DGSEDT,DGDATE,DGEIEN,DGAPST,DGCALC,DGTYP,DGGEN,DGIEN,DA,X,Y,DTOUT,DUOUT,VADM
"RTN","DGMSTR3",50,0)
 N DGCSTAT,DGDA,DGCC,DGCLIEN,DGDX,DGMIEN,DGPTFIEN,DGLOS,DGPDAYS
"RTN","DGMSTR3",51,0)
 N DGDXERR,DGLOS,DGOCIEN
"RTN","DGMSTR3",52,0)
 S DGDATE=DGSDAT F  S DGDATE=$O(^DGMS(29.11,"B",DGDATE)) Q:DGDATE'>0!(DGDATE>DGEDAT)  S DGIEN=0 F  S DGIEN=$O(^DGMS(29.11,"B",DGDATE,DGIEN)) Q:DGIEN'>0   S:$P($G(^DGMS(29.11,DGIEN,0)),"^",3)="Y" DGMST("N")=DGMST("N")+1
"RTN","DGMSTR3",53,0)
 ;GET IEN FOR MST CLASSIFICATION TYPE
"RTN","DGMSTR3",54,0)
 S DIC=409.41,DIC(0)="X",X="MILITARY SEXUAL TRAUMA"
"RTN","DGMSTR3",55,0)
 D ^DIC K DIC
"RTN","DGMSTR3",56,0)
 I Y'>0 W !!,"Military Sexual Trauma entry missing from Outpatient Classification Type (409.41) file" Q
"RTN","DGMSTR3",57,0)
 S DGOCIEN=+Y K DFN S DFN=""
"RTN","DGMSTR3",58,0)
 ;CALCULATE OUTPATIENT TOTALS
"RTN","DGMSTR3",59,0)
 S DGDATE=DGSDAT F  S DGDATE=$O(^SCE("B",DGDATE)) Q:DGDATE'>0!(DGDATE>DGEDAT)  D
"RTN","DGMSTR3",60,0)
 .S DGEIEN=0 F  S DGEIEN=$O(^SCE("B",DGDATE,DGEIEN)) Q:DGEIEN'>0  D
"RTN","DGMSTR3",61,0)
 ..S Y(0)=$G(^SCE(DGEIEN,0)) Q:Y(0)=""
"RTN","DGMSTR3",62,0)
 ..S DFN=$P(Y(0),"^",2),DGAPST=$P(Y(0),"^",12) Q:DGAPST=8  ;DGAPST=8 MEANS INPATIENT, DONT COUNT
"RTN","DGMSTR3",63,0)
 ..I DFN="" Q
"RTN","DGMSTR3",64,0)
 ..S DGCSTAT=$$GETSTAT^DGMSTAPI(DFN,DGEDAT)
"RTN","DGMSTR3",65,0)
 ..S DGCC=$P(DGCSTAT,"^",2)
"RTN","DGMSTR3",66,0)
 ..I DGCC'="Y"&(DGCC'="N")&(DGCC'="D")&(DGCC'="U") Q
"RTN","DGMSTR3",67,0)
 ..S DGCLIEN=$O(^SDD(409.42,"AO",DGEIEN,DGOCIEN,0)),DGMST("O","T")=DGMST("O","T")+1 I DGCLIEN]"" D
"RTN","DGMSTR3",68,0)
 ...I $P($G(^SDD(409.42,DGCLIEN,0)),"^",3)'=1 S DGMST("O","NR")=DGMST("O","NR")+1
"RTN","DGMSTR3",69,0)
 ...E  S DGMST("O","R")=DGMST("O","R")+1 I '$D(DFN(DFN,"O")) S DFN(DFN,"O")="",DGMST("O","U")=DGMST("O","U")+1
"RTN","DGMSTR3",70,0)
 ..D DEM^VADPT S SEX=$P(VADM(5),"^")
"RTN","DGMSTR3",71,0)
 ..I SEX="M"!(SEX="F") D
"RTN","DGMSTR3",72,0)
 ...S DGDX=$$GETPDX^SDOE(DGEIEN,.DGDXERR) ;; CHANGED 4.16.99 SCK CORRECT FOR API
"RTN","DGMSTR3",73,0)
 ...I DGDX'="",+DGDX>0 S DGTEMP=$$ICDDATA^ICDXCODE("DIAG",DGDX,DGDATE),DGDX=$P(DGTEMP,"^",2) I DGDX'=""!(+DGTEMP'<1) D
"RTN","DGMSTR3",74,0)
 ....I DGDX["Invalid Code " Q
"RTN","DGMSTR3",75,0)
 ....I '$D(^TMP("DGMSTR3",$J,DGDX)) F DGGEN="M","F" F DGTYP="I","O" S ^TMP("DGMSTR3",$J,DGDX,DGGEN,DGTYP)=0
"RTN","DGMSTR3",76,0)
 ....S ^TMP("DGMSTR3",$J,DGDX,SEX,"O")=^TMP("DGMSTR3",$J,DGDX,SEX,"O")+1
"RTN","DGMSTR3",77,0)
 ;LOOP FOR INPATIENT CALCULATIONS
"RTN","DGMSTR3",78,0)
 S DGDATE=DGSDAT F  S DGDATE=$O(^DGPM("B",DGDATE)) Q:DGDATE'>0!(DGDATE>DGEDAT)  S DGDA=0 F  S DGDA=$O(^DGPM("B",DGDATE,DGDA)) Q:DGDA'>0  S DGPTFIEN=$P($G(^DGPM(DGDA,0)),"^",16) I DGPTFIEN'="" D
"RTN","DGMSTR3",79,0)
 .D EFFDATE^DGPTIC10(DGPTFIEN)
"RTN","DGMSTR3",80,0)
 .S DGMIEN=0,DGPDAYS=0,DGCALC=0 F  S DGMIEN=$O(^DGPT(DGPTFIEN,"M",DGMIEN)) Q:DGMIEN'>0  D
"RTN","DGMSTR3",81,0)
 ..S Y(0)=$G(^(DGMIEN,0)),DGPDAYS=DGPDAYS+(+$P(Y(0),"^",4)),DGMST("I","T")=DGMST("I","T")+1
"RTN","DGMSTR3",82,0)
 ..I $P(Y(0),"^",29)="Y" D
"RTN","DGMSTR3",83,0)
 ...S DGMST("I","R")=DGMST("I","R")+1,DGCALC=1
"RTN","DGMSTR3",84,0)
 ...S DFN=$P(^DGPT(DGPTFIEN,0),"^")
"RTN","DGMSTR3",85,0)
 ...Q:DFN=""
"RTN","DGMSTR3",86,0)
 ...I '$D(DFN(DFN,"I")) S DFN(DFN,"I")="",DGMST("I","U")=DGMST("I","U")+1
"RTN","DGMSTR3",87,0)
 ...S DGDX=$P(Y(0),"^",5) D DEM^VADPT S SEX=$P(VADM(5),"^")
"RTN","DGMSTR3",88,0)
 ...I DGDX'="",+DGDX>0,SEX="M"!(SEX="F") S DGTEMP=$$ICDDATA^ICDXCODE("DIAG",DGDX,EFFDATE),DGDX=$P(DGTEMP,"^",2) I DGDX'=""!(+DGTEMP'<1) D
"RTN","DGMSTR3",89,0)
 ....I DGDX["Invalid Code " Q
"RTN","DGMSTR3",90,0)
 ....I '$D(^TMP("DGMSTR3",$J,DGDX)) F DGGEN="M","F" F DGTYP="I","O" S ^TMP("DGMSTR3",$J,DGDX,DGGEN,DGTYP)=0
"RTN","DGMSTR3",91,0)
 ....S ^TMP("DGMSTR3",$J,DGDX,SEX,"I")=^TMP("DGMSTR3",$J,DGDX,SEX,"I")+1
"RTN","DGMSTR3",92,0)
 ..E  S DGMST("I","NR")=DGMST("I","NR")+1
"RTN","DGMSTR3",93,0)
 .I +$G(DGCALC)>0,$P($G(^DGPT(DGPTFIEN,70)),"^")]"" D
"RTN","DGMSTR3",94,0)
 ..S DGLOS=$$CALCLOS(DGPTFIEN,DGPDAYS),DGMST("LOS")=DGMST("LOS")+DGLOS
"RTN","DGMSTR3",95,0)
PRT ;LAST CALCULATIONS AND PRINT
"RTN","DGMSTR3",96,0)
 I DGMST("LOS")>0 S DGMST("ALOS")=DGMST("LOS")/DGMST("I","R")
"RTN","DGMSTR3",97,0)
 I DGMST("O","T")>0 S DGMST("O","AR")=$J(DGMST("O","R")/DGMST("O","T"),7,2),DGMST("O","ANR")=$J(DGMST("O","NR")/DGMST("O","T"),7,2)
"RTN","DGMSTR3",98,0)
 I DGMST("I","T")>0 S DGMST("I","AR")=$J(DGMST("I","R")/DGMST("I","T"),7,2),DGMST("I","ANR")=$J(DGMST("I","NR")/DGMST("I","T"),7,2)
"RTN","DGMSTR3",99,0)
 D NOFF
"RTN","DGMSTR3",100,0)
 W !!,"# OF NEW CASES IDENTIFIED FOR MST",?78-$L(DGMST("N")),DGMST("N")
"RTN","DGMSTR3",101,0)
 W !!,"-------------OUTPATIENT STATISTICS-------------"
"RTN","DGMSTR3",102,0)
 W !!,"# OF OUTPATIENT ENCOUNTERS RELATED TO MST",?78-$L(DGMST("O","R")),DGMST("O","R")
"RTN","DGMSTR3",103,0)
 W !,"# OF OUTPATIENT ENCOUNTERS NOT RELATED TO MST",?78-$L(DGMST("O","NR")),DGMST("O","NR")
"RTN","DGMSTR3",104,0)
 W !,"# OF UNIQUE OUTPATIENTS TREATED FOR MST",?78-$L(DGMST("O","U")),DGMST("O","U")
"RTN","DGMSTR3",105,0)
 W !,"AVERAGE # OF ENCOUNTERS RELATED TO MST",?78-$L(DGMST("O","AR")),DGMST("O","AR")
"RTN","DGMSTR3",106,0)
 W !,"AVERAGE # OF ENCOUNTERS NOT RELATED TO MST",?78-$L(DGMST("O","ANR")),DGMST("O","ANR")
"RTN","DGMSTR3",107,0)
 W !!,"-------------INPATIENT STATISTICS---------------"
"RTN","DGMSTR3",108,0)
 W !!,"# OF INPATIENT EPISODES RELATED TO MST",?78-$L(DGMST("I","R")),DGMST("I","R")
"RTN","DGMSTR3",109,0)
 W !,"# OF INPATIENT EPISODES NOT RELATED TO MST",?78-$L(DGMST("I","NR")),DGMST("I","NR")
"RTN","DGMSTR3",110,0)
 W !,"# OF UNIQUE INPATIENTS TREATED FOR MST",?78-$L(DGMST("I","U")),DGMST("I","U")
"RTN","DGMSTR3",111,0)
 W !,"AVERAGE # OF INPATIENT EPISODES TREATED FOR MST",?78-$L(DGMST("I","AR")),DGMST("I","AR")
"RTN","DGMSTR3",112,0)
 W !,"AVERAGE # OF INPATIENT EPISODES NOT TREATED FOR MST",?78-$L(DGMST("I","ANR")),DGMST("I","ANR")
"RTN","DGMSTR3",113,0)
 W !,"TOTAL LENGTH OF STAY OF INPATIENTS TREATED FOR MST",?78-$L(DGMST("LOS")),DGMST("LOS")
"RTN","DGMSTR3",114,0)
 W !,"AVERAGE LENGTH OF STAY OF INPATIENTS TREATED FOR MST",?78-$L(DGMST("ALOS")),DGMST("ALOS")
"RTN","DGMSTR3",115,0)
 I $Y+3>$G(IOSL) D  Q:$D(DTOUT)!($D(DUOUT))
"RTN","DGMSTR3",116,0)
 .I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR Q:$D(DTOUT)!($D(DUOUT))
"RTN","DGMSTR3",117,0)
 .D HED
"RTN","DGMSTR3",118,0)
 G:$O(^TMP("DGMSTR3",$J,0))="" END1 ;;CHANGED BY SCK 4.16.99 CHECK ON ERROR
"RTN","DGMSTR3",119,0)
 S DGLABEL="  ICD"
"RTN","DGMSTR3",120,0)
 W !!,DGLABEL,?24,"NUMBER OF MALE",?54,"NUMBER OF FEMALE"
"RTN","DGMSTR3",121,0)
 W !,?22,"OUTPATIENT",?35,"INPATIENT",?52,"OUTPATIENT",?65,"INPATIENT"
"RTN","DGMSTR3",122,0)
 S DGDX="" F  S DGDX=$O(^TMP("DGMSTR3",$J,DGDX)) Q:DGDX=""  D  Q:$D(DTOUT)!($D(DUOUT))
"RTN","DGMSTR3",123,0)
 .I $Y+3>IOSL D  Q:$D(DTOUT)!($D(DUOUT))
"RTN","DGMSTR3",124,0)
 ..I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR Q:$D(DTOUT)!($D(DUOUT))
"RTN","DGMSTR3",125,0)
 ..D HED W !!,DGLABEL,?24,"NUMBER OF MALE",?54,"NUMBER OF FEMALE",!,?22,"OUTPATIENT",?35,"INPATIENT",?52,"OUTPATIENT",?65,"INPATIENT"
"RTN","DGMSTR3",126,0)
 .W !,?2,DGDX,?28-$L(^TMP("DGMSTR3",$J,DGDX,"M","O"))
"RTN","DGMSTR3",127,0)
 .W ^TMP("DGMSTR3",$J,DGDX,"M","O")
"RTN","DGMSTR3",128,0)
 .W ?40-$L(^TMP("DGMSTR3",$J,DGDX,"M","I"))
"RTN","DGMSTR3",129,0)
 .W ^TMP("DGMSTR3",$J,DGDX,"M","I")
"RTN","DGMSTR3",130,0)
 .W ?58-$L(^TMP("DGMSTR3",$J,DGDX,"F","O")),^TMP("DGMSTR3",$J,DGDX,"F","O")
"RTN","DGMSTR3",131,0)
 .W ?70-$L(^TMP("DGMSTR3",$J,DGDX,"F","I"))
"RTN","DGMSTR3",132,0)
 .W ^TMP("DGMSTR3",$J,DGDX,"F","I")
"RTN","DGMSTR3",133,0)
 I $E(IOST,1,2)="C-" S DIR="E" D ^DIR K DIR
"RTN","DGMSTR3",134,0)
END1 K DA,DGSDAT,DGEDAT,DGMST,DGPCDT,DGPEDT,DGPSDT,X,Y
"RTN","DGMSTR3",135,0)
 K ^TMP("DGMSTAPI",$J)
"RTN","DGMSTR3",136,0)
 K TJOB
"RTN","DGMSTR3",137,0)
 Q
"RTN","DGMSTR3",138,0)
 ;
"RTN","DGMSTR3",139,0)
CALCLOS(DGPTFIEN,DGPDAYS) ;CALCULATE LOS FOR EPISODE
"RTN","DGMSTR3",140,0)
 N DGADT,DGDDT,DGLDAYS,DGDAYS,Y,X1,X2
"RTN","DGMSTR3",141,0)
 S Y(70)=$G(^DGPT(DGPTFIEN,70)) Q:Y(70)="" 0
"RTN","DGMSTR3",142,0)
 S DGDDT=$P(Y(70),"^")\1,DGADT=$P(^DGPT(DGPTFIEN,0),"^",2)\1,DGLDAYS=$P(Y(70),"^",8)
"RTN","DGMSTR3",143,0)
 S X1=DGDDT,X2=DGADT D ^%DTC
"RTN","DGMSTR3",144,0)
 S DGDAYS=X-(DGLDAYS+DGPDAYS)
"RTN","DGMSTR3",145,0)
 Q DGDAYS
"RTN","DGMSTR3",146,0)
 ;
"RTN","DGMSTR3",147,0)
HED ;PRINT HEADER INFO
"RTN","DGMSTR3",148,0)
 W @IOF
"RTN","DGMSTR3",149,0)
NOFF W !,?20,"MST Statistical Report"
"RTN","DGMSTR3",150,0)
 W !,?20,"Date Range: ",DGPSDT," - ",DGPEDT
"RTN","DGMSTR3",151,0)
 W !,?20,"Date Report Printed: ",DGPCDT
"RTN","DGMSTR3",152,0)
 Q
"RTN","DGMSTR3",153,0)
 ;
"RTN","DGPT50DI")
0^35^B7758522^B7892059
"RTN","DGPT50DI",1,0)
DGPT50DI ;ALB/MTC/ADL - Edit diagnoses-Check ICD DIAGNOSES, current, gender correct ;16 NOV 92
"RTN","DGPT50DI",2,0)
 ;;5.3;Registration;**510,850**;Aug 13, 1993;Build 171
"RTN","DGPT50DI",3,0)
 ;;ADL;Updated for CSV project;;Mar 24, 2003
"RTN","DGPT50DI",4,0)
 ;
"RTN","DGPT50DI",5,0)
EN ;
"RTN","DGPT50DI",6,0)
 F I=1:1:5 S DGPTDIB=$P(@("DGPTMD"_I)," ",1) S DGPTERC=0 D DIAG(I) I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT50DI",7,0)
 D EXIT
"RTN","DGPT50DI",8,0)
 Q
"RTN","DGPT50DI",9,0)
DIAG(I) ;
"RTN","DGPT50DI",10,0)
 Q:DGPTDIB=""
"RTN","DGPT50DI",11,0)
 N SYS,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPT50DI",12,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT50DI",13,0)
 S SYS=$$SYS^ICDEX("DIAG",EFFDATE)
"RTN","DGPT50DI",14,0)
 I SYS=1 I $E(DGPTDIB,1)="E" S DGPTERC=0 D DIAGE Q
"RTN","DGPT50DI",15,0)
 I SYS=1 I $E(DGPTDIB,1)="V" S DGPTERC=0 D DIAGV Q
"RTN","DGPT50DI",16,0)
 S DGPTDIB1=$E(DGPTDIB_"     ",1,3)_"."_$E(DGPTDIB_"     ",4,7)_" "
"RTN","DGPT50DI",17,0)
 I +$$CODEN^ICDEX(DGPTDIB1,80)>0 S DGPTERC=0 D GEN(I) Q
"RTN","DGPT50DI",18,0)
 Q
"RTN","DGPT50DI",19,0)
ERR ;
"RTN","DGPT50DI",20,0)
 D WRTERR^DGPTAE(DGPTERC,NODE,SEQ)
"RTN","DGPT50DI",21,0)
 Q
"RTN","DGPT50DI",22,0)
EXIT ;
"RTN","DGPT50DI",23,0)
 K DGPTDIB,DGPTDIB1,DGPTDIB2,I
"RTN","DGPT50DI",24,0)
 Q
"RTN","DGPT50DI",25,0)
DIAGE ;
"RTN","DGPT50DI",26,0)
 N SYS,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPT50DI",27,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT50DI",28,0)
 Q:$E(DGPTDIB)'="E"
"RTN","DGPT50DI",29,0)
 I I=1 S DGPTERC=550 Q
"RTN","DGPT50DI",30,0)
 S DGPTDIB1=$E(DGPTDIB,1,4)_"."_$E(DGPTDIB,5,$L(DGPTDIB))_" "
"RTN","DGPT50DI",31,0)
 S X=+$$CODEN^ICDEX(DGPTDIB1,80) I X<1 S DGPTERC=509+I Q
"RTN","DGPT50DI",32,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",X,EFFDATE)
"RTN","DGPT50DI",33,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=509+I Q
"RTN","DGPT50DI",34,0)
 I ($P(DGPTTMP,U,10)=0)&($E(DGPTMDTS,1,7)>$P(DGPTTMP,U,12)) S DGPTERC=509+I Q
"RTN","DGPT50DI",35,0)
 I ($P(DGPTTMP,U,11)]"")&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=791+I Q
"RTN","DGPT50DI",36,0)
 S @("DGPTMD"_I)=$P(DGPTDIB1," ",1)
"RTN","DGPT50DI",37,0)
 Q
"RTN","DGPT50DI",38,0)
DIAGV ; DIAG CODES = "V##.0-2# "
"RTN","DGPT50DI",39,0)
 N SYS,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPT50DI",40,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT50DI",41,0)
 Q:$E(DGPTDIB)'="V"
"RTN","DGPT50DI",42,0)
 S DGPTDIB1=$E(DGPTDIB,1,3)_"."_$E(DGPTDIB,4,$L(DGPTDIB))_" "
"RTN","DGPT50DI",43,0)
 I +$$CODEN^ICDEX(DGPTDIB1,80)<1 S DGPTERC=509+I Q
"RTN","DGPT50DI",44,0)
 S X=+$$CODEN^ICDEX(DGPTDIB1,80) I X<1 S DGPTERC=509+I Q
"RTN","DGPT50DI",45,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",X,EFFDATE)  ;use date of movement if defined, else today
"RTN","DGPT50DI",46,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=509+I Q
"RTN","DGPT50DI",47,0)
 I ($P(DGPTTMP,U,10)=0)&($E(DGPTMDTS,1,7)>$P(DGPTTMP,U,12)) S DGPTERC=509+I Q
"RTN","DGPT50DI",48,0)
 I ($P(DGPTTMP,U,11)]"")&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=509+I Q
"RTN","DGPT50DI",49,0)
 S @("DGPTMD"_I)=$P(DGPTDIB1," ",1)
"RTN","DGPT50DI",50,0)
 Q
"RTN","DGPT50DI",51,0)
GEN(I) ;
"RTN","DGPT50DI",52,0)
 N SYS,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPT50DI",53,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT50DI",54,0)
 S DGPTDIB2=+$$CODEN^ICDEX(DGPTDIB1,80) I DGPTDIB2<1 S DGPTERC=509+I Q
"RTN","DGPT50DI",55,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",DGPTDIB2,EFFDATE)
"RTN","DGPT50DI",56,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=509+I Q
"RTN","DGPT50DI",57,0)
 I $P(DGPTTMP,U,11)]""&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=551 Q
"RTN","DGPT50DI",58,0)
 S @("DGPTMD"_I)=$P(DGPTDIB1," ",1)
"RTN","DGPT50DI",59,0)
 Q
"RTN","DGPT601")
0^58^B17005208^B13957329
"RTN","DGPT601",1,0)
DGPT601 ;ALB/MTC - Process 601 transmission ;17 NOV 92
"RTN","DGPT601",2,0)
 ;;5.3;Registration;**64,164,729,850**;Aug 13, 1993;Build 171
"RTN","DGPT601",3,0)
 ;
"RTN","DGPT601",4,0)
 ;
"RTN","DGPT601",5,0)
EN ; Process 601 transmission
"RTN","DGPT601",6,0)
 N ERROR
"RTN","DGPT601",7,0)
 K DGPTPAR
"RTN","DGPT601",8,0)
 S DGPTSTR=^TMP("AEDIT",$J,NODE,SEQ),DGPTEDFL=0,DGPTERP=7
"RTN","DGPT601",9,0)
 S:$E(DGPTSTR,37,40)="2400" DGPTSTR=$E(DGPTSTR,1,36)_"2359"_$E(DGPTSTR,41,125)
"RTN","DGPT601",10,0)
SET ;
"RTN","DGPT601",11,0)
 S DGPTPSC=$E(DGPTSTR,41,42),DGPTPDY=$E(DGPTSTR,43),DGPTPNT=$E(DGPTSTR,44,46),DGPTPC1=$E(DGPTSTR,47,53),DGPTPC2=$E(DGPTSTR,54,60),DGPTPC3=$E(DGPTSTR,61,67),DGPTPC4=$E(DGPTSTR,68,74),DGPTPC5=$E(DGPTSTR,75,81)
"RTN","DGPT601",12,0)
 S DGPTPDT=$E(DGPTSTR,31,40)
"RTN","DGPT601",13,0)
DATE ;
"RTN","DGPT601",14,0)
 S (X,DGPTPDTS)=$$FMDT^DGPT101($E(DGPTPDT,1,6))_"."_$E(DGPTPDT,7,10),%DT="XT" D ^%DT I Y<0 S DGPTERC=601 D ERR G:DGPTEDFL EXIT G TSPEC
"RTN","DGPT601",15,0)
 D DD^%DT S DGPTPDT=$E(Y,5,6)_"-"_$E(Y,1,3)_"-"_$E(Y,9,12)_" "_$S($P(Y,"@",2)]"":$E($P(Y,"@",2),1,5),1:"00:00")
"RTN","DGPT601",16,0)
 I DGPTPDT'?1.2N1"-"3U1"-"4N1" "2N1":"2N S DGPTERC=601 D ERR G:DGPTEDFL EXIT
"RTN","DGPT601",17,0)
 S X1=DGPTDDS,X2=DGPTPDTS D ^%DTC I (X<0)!(%Y<0) S DGPTERC=640 D ERR G:DGPTEDFL EXIT
"RTN","DGPT601",18,0)
 S X1=DGPTPDTS,X2=DGPTDTS D ^%DTC I (X<0)!(%Y<0) S DGPTERC=637 D ERR G:DGPTEDFL EXIT
"RTN","DGPT601",19,0)
 ;
"RTN","DGPT601",20,0)
TSPEC ;
"RTN","DGPT601",21,0)
 N DGPTPSC1
"RTN","DGPT601",22,0)
 I DGPTPSC'?2AN S DGPTERC=602 D ERR G:DGPTEDFL EXIT
"RTN","DGPT601",23,0)
 S DGPTSP1=$E(DGPTPSC,1),DGPTSP2=$E(DGPTPSC,2),DGPTERC=0
"RTN","DGPT601",24,0)
 D CHECK^DGPTAE02 I DGPTERC S DGPTERC=602 D ERR G:DGPTEDFL EXIT G DIAL
"RTN","DGPT601",25,0)
 ;-- Active treating specialty edit check
"RTN","DGPT601",26,0)
 I $E(DGPTPSC,1)=0!($E(DGPTPSC,1)=" ") S DGPTPSC=$E(DGPTPSC,2)
"RTN","DGPT601",27,0)
 ; DGPTPSC  := ptf code (alpha-numeric) value (file:42.4, field:7)
"RTN","DGPT601",28,0)
 ; DGPTPSC1 := dinum value (ien, file:42.4, field:.001)
"RTN","DGPT601",29,0)
 S DGPTPSC1=+$O(^DIC(42.4,"C",DGPTPSC,0))
"RTN","DGPT601",30,0)
 ;-- If not active treat spec, set 601 flag to print error msg during
"RTN","DGPT601",31,0)
 ;-- PTF close-out error display at WRER^DGPTAEE
"RTN","DGPT601",32,0)
 I '$$ACTIVE^DGACT(42.4,DGPTPSC1,DGPTPDTS) S DGPTERC=602,DGPTSER(DGPTPDTS_601)=1 D ERR G:DGPTEDFL EXIT
"RTN","DGPT601",33,0)
DIAL ;
"RTN","DGPT601",34,0)
 I DGPTPNT="   "!(+DGPTPNT'>0) D  G:DGPTEDFL EXIT
"RTN","DGPT601",35,0)
 .I DGPTPC1="3995   "!(DGPTPC1="5498   ")!(DGPTPC1="5092   ") S DGPTERC=604 D ERR
"RTN","DGPT601",36,0)
 .I DGPTPC2="3995   "!(DGPTPC2="5498   ")!(DGPTPC2="5092   ") S DGPTERC=604 D ERR
"RTN","DGPT601",37,0)
 .I DGPTPC3="3995   "!(DGPTPC3="5498   ")!(DGPTPC3="5092   ") S DGPTERC=604 D ERR
"RTN","DGPT601",38,0)
 .I DGPTPC4="3995   "!(DGPTPC4="5498   ")!(DGPTPC4="5092   ") S DGPTERC=604 D ERR
"RTN","DGPT601",39,0)
 .I DGPTPC5="3995   "!(DGPTPC5="5498   ")!(DGPTPC5="5092   ") S DGPTERC=604 D ERR
"RTN","DGPT601",40,0)
 .I DGPTPC1="5A1C00Z"!(DGPTPC1="5A1C60Z")!(DGPTPC1="5A1D00Z")!(DGPTPC1="5A1D60Z")!(DGPTPC1="3E1M39Z") S DGPTERC=604 D ERR
"RTN","DGPT601",41,0)
 .I DGPTPC2="5A1C00Z"!(DGPTPC2="5A1C60Z")!(DGPTPC2="5A1D00Z")!(DGPTPC2="5A1D60Z")!(DGPTPC2="3E1M39Z") S DGPTERC=604 D ERR
"RTN","DGPT601",42,0)
 .I DGPTPC3="5A1C00Z"!(DGPTPC3="5A1C60Z")!(DGPTPC3="5A1D00Z")!(DGPTPC3="5A1D60Z")!(DGPTPC3="3E1M39Z") S DGPTERC=604 D ERR
"RTN","DGPT601",43,0)
 .I DGPTPC4="5A1C00Z"!(DGPTPC4="5A1C60Z")!(DGPTPC4="5A1D00Z")!(DGPTPC4="5A1D60Z")!(DGPTPC4="3E1M39Z") S DGPTERC=604 D ERR
"RTN","DGPT601",44,0)
 .I DGPTPC5="5A1C00Z"!(DGPTPC5="5A1C60Z")!(DGPTPC5="5A1D00Z")!(DGPTPC5="5A1D60Z")!(DGPTPC5="3E1M39Z") S DGPTERC=604 D ERR
"RTN","DGPT601",45,0)
OPS ;
"RTN","DGPT601",46,0)
 S DGPTERC=0 D ^DGPT60PR G:DGPTEDFL EXIT
"RTN","DGPT601",47,0)
 ;
"RTN","DGPT601",48,0)
OPDUP ;--check for duplicate procedure codes
"RTN","DGPT601",49,0)
 I ((DGPTPDY=" ")&(DGPTPNT="   "))&($E(DGPTSTR,47,81)?1.35" ") S DGPTERC="605Z" D ERR G EXIT
"RTN","DGPT601",50,0)
 F DGPTL4=1:1:5 I $E(@("DGPTPC"_DGPTL4),1)'=" " S DGPTPAR(@("DGPTPC"_DGPTL4),DGPTL4)=""
"RTN","DGPT601",51,0)
 S DGPTPAR1=0 F DGPTL4=1:1:5 S DGPTPAR1=$O(DGPTPAR(DGPTPAR1)) Q:DGPTPAR1=""  D  G:DGPTEDFL EXIT
"RTN","DGPT601",52,0)
 . S DGPTPRA2=$O(DGPTPAR(DGPTPAR1,0))
"RTN","DGPT601",53,0)
 . I DGPTPRA2'="" S DGPTPRA3=$O(DGPTPAR(DGPTPAR1,DGPTPRA2))
"RTN","DGPT601",54,0)
 . I DGPTPRA3'="" S DGPTERC=657 D ERR
"RTN","DGPT601",55,0)
 K DGPTPAR
"RTN","DGPT601",56,0)
GOOD ;
"RTN","DGPT601",57,0)
 W:'$D(ERROR) "."
"RTN","DGPT601",58,0)
 ;
"RTN","DGPT601",59,0)
EXIT ;
"RTN","DGPT601",60,0)
 K DGPTERC,DGPTL3,DGPTL4,DGPTOP,DGPTOP1,DGPTP1,DGPTP2,DGPTPAR1,DGPTPC1,DGPTPC2,DGPTPC3,DGPTPC4,DGPTPC5,DGPTPDT,DGPTPDTS,DGPTPDY,DGPTPFL,DGPTPNT,DGPTPP,DGPTPRA2,DGPTPRA3,DGPTPSC,DGPTSTR,X,X1,X2,Y
"RTN","DGPT601",61,0)
 K DGPTXX
"RTN","DGPT601",62,0)
 Q
"RTN","DGPT601",63,0)
ERR ;
"RTN","DGPT601",64,0)
 D WRTERR^DGPTAE(DGPTERC,NODE,SEQ)
"RTN","DGPT601",65,0)
 S ERROR=1
"RTN","DGPT601",66,0)
 Q
"RTN","DGPT601",67,0)
DIALE ;
"RTN","DGPT601",68,0)
 I "12345678"'[DGPTPDY S DGPTERC=603 D ERR G:DGPTEDFL EXIT
"RTN","DGPT601",69,0)
 I DGPTPNT="   "!(+DGPTPNT'>0) S DGPTERC=604 D ERR G:DGPTEDFL EXIT
"RTN","DGPT601",70,0)
 Q
"RTN","DGPT601",71,0)
 ;
"RTN","DGPT60PR")
0^36^B4857421^B4626791
"RTN","DGPT60PR",1,0)
DGPT60PR ;ALB/MTC/ADL - Edit procedure codes.  In ICD0 Procedures, current, gender ok ;17 NOV 92
"RTN","DGPT60PR",2,0)
 ;;5.3;Registration;**510,870,850**;Aug 13, 1993;Build 171
"RTN","DGPT60PR",3,0)
 ;;ADL;Update for CSV project;;Mar. 24, 2003
"RTN","DGPT60PR",4,0)
 ;
"RTN","DGPT60PR",5,0)
EN ;
"RTN","DGPT60PR",6,0)
LOOP ;
"RTN","DGPT60PR",7,0)
 S DGPTPRFL=0
"RTN","DGPT60PR",8,0)
 F DGPTL3=1:1:5 S DGPTERC=0 D CHKPRC I DGPTERC D ERR
"RTN","DGPT60PR",9,0)
EXIT ;
"RTN","DGPT60PR",10,0)
 K DGPTOP,DGPTOP1,DGPTL3,DGPTL4,DGPTPP,DGPTPRFL,X,X1,X2
"RTN","DGPT60PR",11,0)
 Q
"RTN","DGPT60PR",12,0)
CHKPRC ;
"RTN","DGPT60PR",13,0)
 N SYS,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPT60PR",14,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT60PR",15,0)
 S SYS=$$SYS^ICDEX("PROC",EFFDATE)
"RTN","DGPT60PR",16,0)
 S DGPTERC=0,DGPTOP=(@("DGPTPC"_DGPTL3)),DGPTOP=$P(DGPTOP," ",1) Q:DGPTOP=""
"RTN","DGPT60PR",17,0)
 S DGPTERC=604+DGPTL3
"RTN","DGPT60PR",18,0)
 I SYS=2 F DGPTL4=1:1:$L(DGPTOP) S DGPTOP1=$E(DGPTOP,1,DGPTL4)_"."_$E(DGPTOP,DGPTL4+1,$L(DGPTOP)) I +$$CODEN^ICDEX(DGPTOP1,80.1)>0 S DGPTERC=0 D GEN Q
"RTN","DGPT60PR",19,0)
 I SYS=31 S DGPTOP1=DGPTOP I +$$CODEN^ICDEX(DGPTOP1,80.1)>0 S DGPTERC=0 D GEN Q
"RTN","DGPT60PR",20,0)
 Q
"RTN","DGPT60PR",21,0)
GEN ; 
"RTN","DGPT60PR",22,0)
 N SYS,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPT60PR",23,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT60PR",24,0)
 ;DG*5.3*850
"RTN","DGPT60PR",25,0)
 S DGPTPP=+$$CODEN^ICDEX(DGPTOP1,80.1) I DGPTPP<1 S DGPTERC=604+DGPTL3 Q
"RTN","DGPT60PR",26,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",DGPTPP,EFFDATE)
"RTN","DGPT60PR",27,0)
 I DGPTTMP<1!('$P(DGPTTMP,U,10)) S DGPTERC=604+DGPTL3 Q
"RTN","DGPT60PR",28,0)
 I $P(DGPTTMP,U,11)]""&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=651 Q
"RTN","DGPT60PR",29,0)
CURR ;
"RTN","DGPT60PR",30,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",DGPTPP,EFFDATE)  ;use date of procedure if defined, else today
"RTN","DGPT60PR",31,0)
 I ($P(DGPTTMP,U,10)=0)&($E(DGPTPDTS,1,7)>$P(DGPTTMP,U,12)) S DGPTERC=604+DGPTL3 Q
"RTN","DGPT60PR",32,0)
SAVE ;
"RTN","DGPT60PR",33,0)
 S @("DGPTPC"_DGPTL3)=DGPTOP1
"RTN","DGPT60PR",34,0)
ARRAY ;
"RTN","DGPT60PR",35,0)
 S DGPTPRAR(DGPTPDTS)=$S($D(DGPTPRAR(DGPTPDTS)):DGPTPRAR(DGPTPDTS)_U_DGPTPP,1:DGPTPP_U)
"RTN","DGPT60PR",36,0)
 Q
"RTN","DGPT60PR",37,0)
ERR ;
"RTN","DGPT60PR",38,0)
 D WRTERR^DGPTAE(DGPTERC,NODE,SEQ)
"RTN","DGPT60PR",39,0)
 Q
"RTN","DGPT60PR",40,0)
 ;
"RTN","DGPT701")
0^77^B13785418^B13839159
"RTN","DGPT701",1,0)
DGPT701 ;ALB/MTC - Process 701 Transaction ;10/06/1999
"RTN","DGPT701",2,0)
 ;;5.3;Registration;**64,164,251,415,729,850**;Aug 13, 1993;Build 171
"RTN","DGPT701",3,0)
 ; 10/06/1999 ACS - Removed Place of Disposition codes M,Y,Z from the list of
"RTN","DGPT701",4,0)
 ; invalid codes.
"RTN","DGPT701",5,0)
 ;
"RTN","DGPT701",6,0)
EN ;
"RTN","DGPT701",7,0)
 Q
"RTN","DGPT701",8,0)
SET ;
"RTN","DGPT701",9,0)
 S DGPTSTR=$G(^TMP("AEDIT",$J,"N701",DGPTAL7))
"RTN","DGPT701",10,0)
 D PARSE^DGPT701P
"RTN","DGPT701",11,0)
DTE ;
"RTN","DGPT701",12,0)
 S (X,DGPTDDS)=$$FMDT^DGPT101($E(DGPTDDTD,1,6))_"."_$E(DGPTDDTD,7,10)
"RTN","DGPT701",13,0)
 S %DT="XT" D ^%DT I Y<0 S DGPTERC=705 D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",14,0)
 I Y>0 D DD^%DT S DGPTDTD=$E(Y,5,6)_"-"_$E(Y,1,3)_"-"_$E(Y,9,12)_" "_$S($P(Y,"@",2)]"":$E($P(Y,"@",2),1,5),1:"00:00")
"RTN","DGPT701",15,0)
 S X1=DGPTNOW,X2=+DGPTDDS D ^%DTC I X<0 S DGPTERC=740 D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",16,0)
 S X1=+DGPTDDS,X2=+DGPTDTS D ^%DTC S DGPTELP=X I X<0 S DGPTERC=737 D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",17,0)
CHECK ;
"RTN","DGPT701",18,0)
TSPEC ; CHECK TREATING SPECIALTY CODE
"RTN","DGPT701",19,0)
 N DGPTDSP1
"RTN","DGPT701",20,0)
 I DGPTDSP'?2AN S DGPTERC=706 D ERR G:DGPTEDFL EXIT G DISPTY
"RTN","DGPT701",21,0)
 S DGPTSP1=$E(DGPTDSP,1),DGPTSP2=$E(DGPTDSP,2),DGPTERC=0
"RTN","DGPT701",22,0)
 D CHECK^DGPTAE02 I DGPTERC S DGPTERC=706 D ERR G:DGPTEDFL EXIT G DISPTY
"RTN","DGPT701",23,0)
 ;-- Active treating specialty edit check
"RTN","DGPT701",24,0)
 I $E(DGPTDSP,1)=0!($E(DGPTDSP,1)=" ") S DGPTDSP=$E(DGPTDSP,2)
"RTN","DGPT701",25,0)
 ; DGPTDSP  := ptf code (alpha-numeric) value (file:42.4,field:7)
"RTN","DGPT701",26,0)
 ; DGPTDSP1 := dinum value (ien, file:42.4,field:.001)
"RTN","DGPT701",27,0)
 S DGPTDSP1=+$O(^DIC(42.4,"C",DGPTDSP,0))
"RTN","DGPT701",28,0)
 ;-- If not active treat spec, set flag to print error msg during
"RTN","DGPT701",29,0)
 ;-- PTF Close-out Error display at WRER^DGPTAEE
"RTN","DGPT701",30,0)
 I '$$ACTIVE^DGACT(42.4,DGPTDSP1,DGPTDDS) S DGPTERC=706,DGPTSER(DGPTDDS_701)=1 D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",31,0)
 ;
"RTN","DGPT701",32,0)
DISPTY ;
"RTN","DGPT701",33,0)
 I (DGPTDTY<1)!(DGPTDTY>7) S DGPTERC=707 D ERR G:DGPTEDFL EXIT G OPCAR
"RTN","DGPT701",34,0)
 S DGPTERC=0 D DISPTY^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",35,0)
OPCAR ;
"RTN","DGPT701",36,0)
 I "13 "'[DGPTDOP S DGPTERC=708 D ERR G:DGPTEDFL EXIT G VA
"RTN","DGPT701",37,0)
 I DGPTDOP'=" " S DGPTERC=0 D OP^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",38,0)
VA ;
"RTN","DGPT701",39,0)
 I "12 "'[DGPTDVA S DGPTERC=709 D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",40,0)
 ;
"RTN","DGPT701",41,0)
VAOP ;-- check for inconsistencies between opcare and va aspices
"RTN","DGPT701",42,0)
 I DGPTDVA=2,DGPTDOP=1 D  G:DGPTEDFL EXIT
"RTN","DGPT701",43,0)
 . S DGPTERC=708 D ERR
"RTN","DGPT701",44,0)
 . S DGPTERC=709 D ERR
"RTN","DGPT701",45,0)
CDR ;
"RTN","DGPT701",46,0)
 I DGPTDLR'?6" "&(DGPTDLR'?." "6N) S DGPTERC=775 D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",47,0)
POD ;
"RTN","DGPT701",48,0)
 I "68EINOQSVW"[DGPTDPD S DGPTERC=710 D ERR G:DGPTEDFL EXIT G RECF
"RTN","DGPT701",49,0)
 S DGPTERC=0 D POD^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",50,0)
RECF ;
"RTN","DGPT701",51,0)
 I DGPTDVA'=1!(DGPTDRF="      ") G ASIH
"RTN","DGPT701",52,0)
 I DGPTDRF[" " S DGPTDRF=$P(DGPTDRF," ",1)
"RTN","DGPT701",53,0)
 I DGPTDRF="" S DGPTERC=711 D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",54,0)
ASIH ;
"RTN","DGPT701",55,0)
 I DGPTDAS'="   ",DGPTDAS'?2E1N S DGPTERC=712 D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",56,0)
 ;
"RTN","DGPT701",57,0)
LEAVE ;
"RTN","DGPT701",58,0)
 S DGPTERC=0 D LEAVE^DGPTAE02 D:DGPTERC ERR G:DGPTEDFL EXIT
"RTN","DGPT701",59,0)
SC ;
"RTN","DGPT701",60,0)
 I DGPTDSC'="   "&(DGPTDSC'?3N) S DGPTERC=730 D ERR G:DGPTEDFL EXIT G CP
"RTN","DGPT701",61,0)
 S DGPTDSC=+DGPTDSC
"RTN","DGPT701",62,0)
CP ;
"RTN","DGPT701",63,0)
 S DGPTERC=0 D CANDP^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",64,0)
DIAG ;
"RTN","DGPT701",65,0)
 S DGPTERC=0 D ^DGPT70DX I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",66,0)
OVER ; Pass FY92 edits for earlier data
"RTN","DGPT701",67,0)
 I DGPTDDS'>2911001 G ONED
"RTN","DGPT701",68,0)
LEG ; LEGIONNAIRE'S DISEASE
"RTN","DGPT701",69,0)
 S DGPTERC=0 D LEG^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",70,0)
SUI ; Suicide indicator
"RTN","DGPT701",71,0)
 S DGPTERC=0 D SUI^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",72,0)
DRUG ;
"RTN","DGPT701",73,0)
 S DGPTERC=0 D DRUG^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",74,0)
AXES ; Psych axises
"RTN","DGPT701",75,0)
 I '$P($G(^DIC(42.4,+$G(DGPTDSP1),0)),U,4) S (DGPT70X4,DGPT7X51,DGPT7X52)=" " G ONED
"RTN","DGPT701",76,0)
 S DGPTERC=0 D AXIV^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",77,0)
 S DGPTERC=0 D AXV1^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",78,0)
 S DGPTERC=0 D AXV2^DGPTAE02 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",79,0)
ONED ;
"RTN","DGPT701",80,0)
 I (DGPTDDXO=" ")&('$D(^TMP("AEDIT",$J,"N702"))&'$D(^TMP("AEDIT",$J,"N703"))) S DGPTERC=718 D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",81,0)
 I (DGPTDDXO="X")&($D(^TMP("AEDIT",$J,"N072"))) S DGPTERC=719 D ERR G:DGPTEDFL EXIT
"RTN","DGPT701",82,0)
EXIT ;
"RTN","DGPT701",83,0)
 Q
"RTN","DGPT701",84,0)
ERR ;
"RTN","DGPT701",85,0)
 D WRTERR^DGPTAE(DGPTERC,"N701",DGPTAL7)
"RTN","DGPT701",86,0)
 S ERROR=1
"RTN","DGPT701",87,0)
 Q
"RTN","DGPT70DI")
0^37^B12136680^B10532600
"RTN","DGPT70DI",1,0)
DGPT70DI ;ALB/MTC/ADL - Diagnosis edits for 700's - E codes, V codes, gender and ICD9 Diag. ;16 NOV 92
"RTN","DGPT70DI",2,0)
 ;;5.3;Registration;**510,850**;Aug 13, 1993;Build 171
"RTN","DGPT70DI",3,0)
 ;;ADL;Update for CSV Project;;Mar. 24, 2003
"RTN","DGPT70DI",4,0)
 ;
"RTN","DGPT70DI",5,0)
EN ;
"RTN","DGPT70DI",6,0)
 F DGPTL3=1:1:9 S DGPTDIA=$P((@("DGPTGD"_DGPTL3))," ",1) S DGPTERC=0 D DIAG I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT70DI",7,0)
 Q
"RTN","DGPT70DI",8,0)
 ;
"RTN","DGPT70DI",9,0)
DIAG ;
"RTN","DGPT70DI",10,0)
 N SYS,EFFDATE,IMPDATE,DGPTDAT,SYS
"RTN","DGPT70DI",11,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT70DI",12,0)
 S SYS=$$SYS^ICDEX("DIAG",EFFDATE)
"RTN","DGPT70DI",13,0)
 Q:DGPTDIA=""
"RTN","DGPT70DI",14,0)
 I SYS=1 I $E(DGPTDIA,1)="E" S DGPTERC=0 D DIAGE Q
"RTN","DGPT70DI",15,0)
 I SYS=1 I $E(DGPTDIA,1)="V" S DGPTERC=0 D DIAGV Q
"RTN","DGPT70DI",16,0)
 S DGPTERC=719+DGPTL3
"RTN","DGPT70DI",17,0)
 F DGPTL4=1:1:$L(DGPTDIA) S DGPTDIA1=$E(DGPTDIA,1,DGPTL4)_"."_$E(DGPTDIA,DGPTL4+1,$L(DGPTDIA))_" " I +$$CODEN^ICDEX(DGPTDIA1,80)>0 S DGPTERC=0 D GEN Q
"RTN","DGPT70DI",18,0)
 Q
"RTN","DGPT70DI",19,0)
ERR ;
"RTN","DGPT70DI",20,0)
 D WRTERR^DGPTAE(DGPTERC,NODE,SEQ)
"RTN","DGPT70DI",21,0)
 Q
"RTN","DGPT70DI",22,0)
EXIT ;
"RTN","DGPT70DI",23,0)
 K DGPTDIA,DGPTDIA1,DGPTDIA2,DGPTL3,DGPTL4
"RTN","DGPT70DI",24,0)
 Q
"RTN","DGPT70DI",25,0)
DIAGE ;
"RTN","DGPT70DI",26,0)
 N EFFDATE,IMPDATE,DGPTDAT,SYS
"RTN","DGPT70DI",27,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT70DI",28,0)
 Q:$E(DGPTDIA)'="E"
"RTN","DGPT70DI",29,0)
 S SYS=$$SYS^ICDEX("DIAG",EFFDATE)
"RTN","DGPT70DI",30,0)
 S:SYS=30 DGPTDIA1=$E(DGPTDIA,1,3)_"."_$E(DGPTDIA,4,$L(DGPTDIA))_" "
"RTN","DGPT70DI",31,0)
 S:SYS=1 DGPTDIA1=$E(DGPTDIA,1,4)_"."_$E(DGPTDIA,5,$L(DGPTDIA))_" "
"RTN","DGPT70DI",32,0)
 I +$$CODEN^ICDEX(DGPTDIA1,80)<1 S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",33,0)
 S DGPTDIA2=+$$CODEN^ICDEX(DGPTDIA1,80) I DGPTDIA2<1 S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",34,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",DGPTDIA2,EFFDATE)
"RTN","DGPT70DI",35,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",36,0)
 I ($P(DGPTTMP,U,10)=0)&($E(DGPTDDS,1,7)>$P(DGPTTMP,U,12)) S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",37,0)
 I ($P(DGPTTMP,U,11)]"")&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",38,0)
 S @("DGPTGD"_DGPTL3)=$P(DGPTDIA1," ",1)
"RTN","DGPT70DI",39,0)
 S DGPTDIAR(DGPTDDS)=$S($D(DGPTDIAR(DGPTDDS)):DGPTDIAR(DGPTDDS)_U_DGPTDIA2,1:DGPTDIA2)
"RTN","DGPT70DI",40,0)
 Q
"RTN","DGPT70DI",41,0)
DIAGV ;
"RTN","DGPT70DI",42,0)
 N EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPT70DI",43,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT70DI",44,0)
 Q:$E(DGPTDIA)'="V"
"RTN","DGPT70DI",45,0)
 S DGPTDIA1=$E(DGPTDIA,1,3)_"."_$E(DGPTDIA,4,$L(DGPTDIA))_" "
"RTN","DGPT70DI",46,0)
 I +$$CODEN^ICDEX(DGPTDIA1,80)<1 S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",47,0)
 S DGPTDIA2=+$$CODEN^ICDEX(DGPTDIA1,80) I DGPTDIA2<1 S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",48,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",DGPTDIA2,EFFDATE)  ;use date of disp. if defined, else today
"RTN","DGPT70DI",49,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",50,0)
 I ($P(DGPTTMP,U,10)=0)&($E(DGPTDDS,1,7)>$P(DGPTTMP,U,12)) S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",51,0)
 I ($P(DGPTTMP,U,11)]"")&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",52,0)
 S @("DGPTGD"_DGPTL3)=$P(DGPTDIA1," ",1)
"RTN","DGPT70DI",53,0)
 S DGPTDIAR(DGPTDDS)=$S($D(DGPTDIAR(DGPTDDS)):DGPTDIAR(DGPTDDS)_U_DGPTDIA2,1:DGPTDIA2)
"RTN","DGPT70DI",54,0)
 Q
"RTN","DGPT70DI",55,0)
GEN ;
"RTN","DGPT70DI",56,0)
 N EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPT70DI",57,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT70DI",58,0)
 S DGPTDIA2=+$$CODEN^ICDEX(DGPTDIA1,80) I DGPTDIA2<1 S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",59,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",DGPTDIA2,EFFDATE)  ;use date of disp. if defined, else today
"RTN","DGPT70DI",60,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=719+DGPTL3 Q
"RTN","DGPT70DI",61,0)
 I $P(DGPTTMP,U,11)]""&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=751 Q
"RTN","DGPT70DI",62,0)
 S @("DGPTGD"_DGPTL3)=$P(DGPTDIA1," ",1)
"RTN","DGPT70DI",63,0)
ARRAY ;
"RTN","DGPT70DI",64,0)
 S DGPTDIAR(DGPTDDS)=$S($D(DGPTDIAR(DGPTDDS)):DGPTDIAR(DGPTDDS)_U_DGPTDIA2,1:DGPTDIA2)
"RTN","DGPT70DI",65,0)
 Q
"RTN","DGPT70DX")
0^38^B3873659^B3771336
"RTN","DGPT70DX",1,0)
DGPT70DX ;ALB/MTC/ADL -  DXLS Edit Checks for 701 ;13 NOV 92
"RTN","DGPT70DX",2,0)
 ;;5.3;Registration;**510,850**;Aug 13, 1993;Build 171
"RTN","DGPT70DX",3,0)
 ;;ADL;Update for CSV Project;;Mar 24, 2003
"RTN","DGPT70DX",4,0)
 ;
"RTN","DGPT70DX",5,0)
 ;
"RTN","DGPT70DX",6,0)
EN ;-- check dxls 
"RTN","DGPT70DX",7,0)
 S DGPTDDXE=$P(DGPTDDXE," ",1)
"RTN","DGPT70DX",8,0)
 S DGPTERC=0
"RTN","DGPT70DX",9,0)
NOE ;
"RTN","DGPT70DX",10,0)
 N SYS,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPT70DX",11,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT70DX",12,0)
 S SYS=$$SYS^ICDEX("DIAG",EFFDATE)
"RTN","DGPT70DX",13,0)
 I SYS=1 I $E(DGPTDDXE,1)="E" S DGPTERC=750 Q
"RTN","DGPT70DX",14,0)
 I SYS=1 I $E(DGPTDDXE,1)="V" S DGPTERC=0 D DIAGV G:DGPTERC EXIT D SET G:DGPTERC EXIT G GENDR
"RTN","DGPT70DX",15,0)
 I SYS=1 Q:"VE"[$E(DGPTDDXE,1)
"RTN","DGPT70DX",16,0)
NUM ;
"RTN","DGPT70DX",17,0)
 S J1=$L(DGPTDDXE) F J=1:1:3 S DGPTDIA1=$E(DGPTDDXE,1,J)_"."_$E(DGPTDDXE,J+1,J1)_" " I +$$CODEN^ICDEX(DGPTDIA1,80)>0 D SET G:'DGPTERC GENDR
"RTN","DGPT70DX",18,0)
 S DGPTERC=715 G EXIT
"RTN","DGPT70DX",19,0)
SET ;
"RTN","DGPT70DX",20,0)
 N EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPT70DX",21,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT70DX",22,0)
 S J=+$$CODEN^ICDEX(DGPTDIA1,80) I J<1 S DGPTERC=715 Q
"RTN","DGPT70DX",23,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",J,EFFDATE)
"RTN","DGPT70DX",24,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=715 Q
"RTN","DGPT70DX",25,0)
 I ($P(DGPTTMP,U,10)=0)&($E(DGPTDDS,1,7)>$P(DGPTTMP,U,12)) S DGPTERC=715 W !,"SET^DGPT70DX" Q
"RTN","DGPT70DX",26,0)
 Q
"RTN","DGPT70DX",27,0)
GENDR ;
"RTN","DGPT70DX",28,0)
 N EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPT70DX",29,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPT70DX",30,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",J,EFFDATE)
"RTN","DGPT70DX",31,0)
 G:$P(DGPTTMP,U,11)']"" DDXE
"RTN","DGPT70DX",32,0)
 I $P(DGPTTMP,U,11)'=DGPTGEN S DGPTERC=751 G EXIT
"RTN","DGPT70DX",33,0)
DDXE ;
"RTN","DGPT70DX",34,0)
 S ICDDX(1)=J
"RTN","DGPT70DX",35,0)
 S DGPTDDXE=$P(DGPTDIA1," ",1)
"RTN","DGPT70DX",36,0)
EXIT ;
"RTN","DGPT70DX",37,0)
 K J,J1,DGPTDIA1
"RTN","DGPT70DX",38,0)
 Q
"RTN","DGPT70DX",39,0)
DIAGV ;
"RTN","DGPT70DX",40,0)
 S DGPTDIA1=$E(DGPTDDXE,1,3)_"."_$E(DGPTDDXE,4,$L(DGPTDDXE))_" "
"RTN","DGPT70DX",41,0)
 I +$$CODEN^ICDEX(DGPTDIA1,80)<1 S DGPTERC=715
"RTN","DGPT70DX",42,0)
 Q
"RTN","DGPTAE03")
0^76^B10987387^B6444534
"RTN","DGPTAE03",1,0)
DGPTAE03 ;ALB/MTC - 501 Edit Checks Cont ;13 NOV 92
"RTN","DGPTAE03",2,0)
 ;;5.3;Registration;**8,52,164,850**;Aug 13, 1993;Build 171
"RTN","DGPTAE03",3,0)
 ;
"RTN","DGPTAE03",4,0)
501 ;--Check elapsed days between movements vs leave and pass days
"RTN","DGPTAE03",5,0)
 ;
"RTN","DGPTAE03",6,0)
 S (X2,X3,DGPTL3)=0 F DGPTL4=0:0 S DGPTL3=$O(^TMP("AEDIT",$J,"N501",DGPTL3)) Q:DGPTL3=""  D
"RTN","DGPTAE03",7,0)
 . S X3=$$FMDT^DGPT101($E(^TMP("AEDIT",$J,"N501",DGPTL3),31,36))_"."_$E(^TMP("AEDIT",$J,"N501",DGPTL3),37,40) I (X3<DGPTMDTS)&(X3>X2) S X2=X3
"RTN","DGPTAE03",8,0)
 I X2=0 S X2=DGPTDTS
"RTN","DGPTAE03",9,0)
 D ^%DTC I X>0,(X-DGPTMLD-DGPTMPD<0) S DGPTERC=543
"RTN","DGPTAE03",10,0)
 K X,X1,X2,X3,DGPTL3,DGPTL4
"RTN","DGPTAE03",11,0)
 Q
"RTN","DGPTAE03",12,0)
 ;
"RTN","DGPTAE03",13,0)
535 ;--Check elapsed days between movements vs leave and pass days
"RTN","DGPTAE03",14,0)
 ;
"RTN","DGPTAE03",15,0)
 S (X2,X3,DGPTL3)=0 F DGPTL4=0:0 S DGPTL3=$O(^TMP("AEDIT",$J,"N535",DGPTL3)) Q:DGPTL3=""  D
"RTN","DGPTAE03",16,0)
 . S X3=$$FMDT^DGPT101($E(^TMP("AEDIT",$J,"N535",DGPTL3),31,36))_"."_$E(^TMP("AEDIT",$J,"N535",DGPTL3),37,40) I (X3<DGPTTDTS)&(X3>X2) S X2=X3
"RTN","DGPTAE03",17,0)
 I X2=0 S X2=DGPTDTS
"RTN","DGPTAE03",18,0)
 D ^%DTC I X>0,(X-DGPTTLD-DGPTTPD<0) S DGPTERC=543
"RTN","DGPTAE03",19,0)
 K X,X1,X2,X3,DGPTL3,DGPTL4
"RTN","DGPTAE03",20,0)
 Q
"RTN","DGPTAE03",21,0)
 ;
"RTN","DGPTAE03",22,0)
SP ; Spinal injury and related diagnosis edits
"RTN","DGPTAE03",23,0)
 D EDIT I DGPTERC Q
"RTN","DGPTAE03",24,0)
 D DIA
"RTN","DGPTAE03",25,0)
 Q
"RTN","DGPTAE03",26,0)
EDIT ;
"RTN","DGPTAE03",27,0)
 N FLAG,I
"RTN","DGPTAE03",28,0)
 I "1234X "'[DGPTMSI S DGPTERC=509 Q
"RTN","DGPTAE03",29,0)
 I DGPTSTTY="^"!(DGPTSTTY="") Q
"RTN","DGPTAE03",30,0)
 I "1234X"[DGPTMSI S DGPTERC=509,FLAG=1 F I=10,11,30,40,42 S I=U_I_U I DGPTSTTY[I S DGPTERC=0,FLAG=0 Q
"RTN","DGPTAE03",31,0)
 Q
"RTN","DGPTAE03",32,0)
DIA ; - Diagnosis check for SCI
"RTN","DGPTAE03",33,0)
 Q:(DGPTSTTY'["^10^")!(DGPTSTTY'["^11^")
"RTN","DGPTAE03",34,0)
 N SYS,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPTAE03",35,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPTAE03",36,0)
 S SYS=$$SYS^ICDEX("DIAG",EFFDATE)
"RTN","DGPTAE03",37,0)
 I SYS=1 D
"RTN","DGPTAE03",38,0)
 . I DGPTMSI="X"&((DGPTMD1?1"3440"1N)!(DGPTMD1=3441)!(DGPTMD2?1"3440"1N)!(DGPTMD2=3441)!(DGPTMD3?1"3440"1N)!(DGPTMD3=3441)!(DGPTMD4?1"3440"1N)!(DGPTMD4=3441)!(DGPTMD5?1"3440"1N)!(DGPTMD5=3441)) S DGPTERC=554 Q
"RTN","DGPTAE03",39,0)
 . I "13"[DGPTMSI&((DGPTMD1'=3441)&(DGPTMD2'=3441)&(DGPTMD3'=3441)&(DGPTMD4'=3441)&(DGPTMD5'=3441)) S DGPTERC=554 Q
"RTN","DGPTAE03",40,0)
 . I "24"[DGPTMSI&((DGPTMD1'?1"3440"1N)&(DGPTMD2'?1"3440"1N)&(DGPTMD3'?1"3440"1N)&(DGPTMD4'?1"3440"1N)&(DGPTMD5'?1"3440"1N)) S DGPTERC=554 Q
"RTN","DGPTAE03",41,0)
 I SYS=30 D
"RTN","DGPTAE03",42,0)
 . I DGPTMSI="X"&((DGPTMD1?1"G822"1N)!(DGPTMD1?1"G825"1N)!(DGPTMD2?1"G822"1N)!(DGPTMD2?1"G825"1N)!(DGPTMD3?1"G822"1N)!(DGPTMD3?1"G825"1N)!(DGPTMD4?1"G822"1N)!(DGPTMD4?1"G825"1N)!(DGPTMD5?1"G822"1N)!(DGPTMD5?1"G825"1N)) S DGPTERC=554 Q
"RTN","DGPTAE03",43,0)
 . I "13"[DGPTMSI&((DGPTMD1'?1"G822"1N)&(DGPTMD2'?1"G822"1N)&(DGPTMD3'?1"G822"1N)&(DGPTMD4'?1"G822"1N)&(DGPTMD5'?1"G822"1N)) S DGPTERC=554 Q
"RTN","DGPTAE03",44,0)
 . I "24"[DGPTMSI&((DGPTMD1'?1"G825"1N)&(DGPTMD2'?1"G825"1N)&(DGPTMD3'?1"G825"1N)&(DGPTMD4'?1"G825"1N)&(DGPTMD5'?1"G825"1N)) S DGPTERC=554 Q
"RTN","DGPTAE03",45,0)
 . Q
"RTN","DGPTAE03",46,0)
 Q
"RTN","DGPTAE03",47,0)
 ;
"RTN","DGPTAE04")
0^39^B9147597^B9485293
"RTN","DGPTAE04",1,0)
DGPTAE04 ;ALB/MTC/ADL - 401 Edit Checks Cont ;13 NOV 92
"RTN","DGPTAE04",2,0)
 ;;5.3;Registration;**510,744,870,850**;Aug 13, 1993;Build 171
"RTN","DGPTAE04",3,0)
 ;;ADL;Updated for CSV Project;;Mar 24, 2003
"RTN","DGPTAE04",4,0)
 ;
"RTN","DGPTAE04",5,0)
TRAN ;-- verify transplant status
"RTN","DGPTAE04",6,0)
 I " 12"'[DGPT40PT S DGPTERC=417
"RTN","DGPTAE04",7,0)
 Q
"RTN","DGPTAE04",8,0)
 ;
"RTN","DGPTAE04",9,0)
CHIEF ;
"RTN","DGPTAE04",10,0)
 N FLAG,I
"RTN","DGPTAE04",11,0)
 Q:"VMN"[DGPTSCS
"RTN","DGPTAE04",12,0)
 I "1234567"'[DGPTSCS S DGPTERC=407 Q
"RTN","DGPTAE04",13,0)
 S FLAG=1 F I=10,11,30,40,42 I DGPTSTTY["^"_I_"^" S FLAG=0 Q
"RTN","DGPTAE04",14,0)
 S:FLAG DGPTERC=407
"RTN","DGPTAE04",15,0)
 Q
"RTN","DGPTAE04",16,0)
FAST ;
"RTN","DGPTAE04",17,0)
 N FLAG,I
"RTN","DGPTAE04",18,0)
 Q:DGPTSFA=" "
"RTN","DGPTAE04",19,0)
 S FLAG=0 F I=20:1:26 I DGPTSTTY["^"_I_"^" S FLAG=1,DGPTSFA=" " Q
"RTN","DGPTAE04",20,0)
 I FLAG Q
"RTN","DGPTAE04",21,0)
 I "12345678"'[DGPTSFA S DGPTERC=408 Q
"RTN","DGPTAE04",22,0)
 Q
"RTN","DGPTAE04",23,0)
ANES ;
"RTN","DGPTAE04",24,0)
 N FLAG,I
"RTN","DGPTAE04",25,0)
 Q:DGPTSAT=" "
"RTN","DGPTAE04",26,0)
 S FLAG=0 F I=20:1:26 I DGPTSTTY["^"_I_"^" S FLAG=1,DGPTSAT=" " Q
"RTN","DGPTAE04",27,0)
 I FLAG Q
"RTN","DGPTAE04",28,0)
 I "0123456789RX"'[DGPTSAT S DGPTERC=409 Q
"RTN","DGPTAE04",29,0)
 S DGPTERC=409 F I=10,11,30,40,42 I DGPTSTTY["^"_I_"^" S DGPTERC=0 Q
"RTN","DGPTAE04",30,0)
 Q
"RTN","DGPTAE04",31,0)
 ;
"RTN","DGPTAE04",32,0)
FIRST ;-- Edit surgeries - present in ICD0 OPERATIONS, current, gender ok
"RTN","DGPTAE04",33,0)
 ;
"RTN","DGPTAE04",34,0)
 ; -- 850 - aas - hard coded ICD codes
"RTN","DGPTAE04",35,0)
 ; -- 39.610, 39.611, 39.612 inactive 10/1/79
"RTN","DGPTAE04",36,0)
 I (+DGPTSO1=1371)!(+DGPTSO1=39610)!(+DGPTSO1=39611)!(+DGPTSO1=39612) S DGPTERC=450 D ERR G:DGPTEDFL EXIT
"RTN","DGPTAE04",37,0)
LOOP ;
"RTN","DGPTAE04",38,0)
 F DGPTL3=1:1:5 S DGPTERC=0 D CHKOPC I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPTAE04",39,0)
 Q
"RTN","DGPTAE04",40,0)
CHKOPC ;
"RTN","DGPTAE04",41,0)
 N SYS,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPTAE04",42,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPTAE04",43,0)
 S SYS=$$SYS^ICDEX("PROC",EFFDATE)
"RTN","DGPTAE04",44,0)
 S DGPTOC=(@("DGPTSO"_DGPTL3)),DGPTOC=$P(DGPTOC," ",1) Q:DGPTOC=""
"RTN","DGPTAE04",45,0)
 S DGPTERC=410+DGPTL3
"RTN","DGPTAE04",46,0)
 I SYS=2 S DGPTOC=$E(DGPTOC_"       ",1,2)_"."_$E(DGPTOC,3,7)
"RTN","DGPTAE04",47,0)
 S DGPTOPP=+$$CODEN^ICDEX(DGPTOC,80.1) I $P(DGPTOPP,U,1)'=-1 S DGPTERC=0 D GEN Q
"RTN","DGPTAE04",48,0)
 Q
"RTN","DGPTAE04",49,0)
GEN ;
"RTN","DGPTAE04",50,0)
 N EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPTAE04",51,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPTAE04",52,0)
 ; DG*5.3*850
"RTN","DGPTAE04",53,0)
 S DGPTOPP=+$$CODEN^ICDEX(DGPTOC,80.1) I $P(DGPTOPP,U,1)=-1 S DGPTERC=451 Q
"RTN","DGPTAE04",54,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",DGPTOPP,EFFDATE)
"RTN","DGPTAE04",55,0)
 ; DG*744 - check against discharge date
"RTN","DGPTAE04",56,0)
 I DGPTTMP=-1!('$P(DGPTTMP,U,10)) S DGPTERC=451 N DGPTDAT S DGPTDAT=+$G(^DGPT(PTF,70)) I DGPTDAT S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",DGPTOPP,EFFDATE) I $P(DGPTTMP,U,10)=1 S DGPTERC=0
"RTN","DGPTAE04",57,0)
 I DGPTERC=451 Q
"RTN","DGPTAE04",58,0)
 I $P(DGPTTMP,U,11)]""&(DGPTGEN'=$P(DGPTTMP,U,11)) S DGPTERC=451 Q
"RTN","DGPTAE04",59,0)
CURR ;
"RTN","DGPTAE04",60,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",DGPTOPP,EFFDATE)
"RTN","DGPTAE04",61,0)
 I ($P(DGPTTMP,U,10)=0)&($P(DGPTSDD,1,7)>$P(DGPTTMP,U,12)) S DGPTERC=474+DGPTL3 Q
"RTN","DGPTAE04",62,0)
SAVE ;
"RTN","DGPTAE04",63,0)
 S @("DGPTSO"_DGPTL3)=DGPTOC
"RTN","DGPTAE04",64,0)
ARRAY ;
"RTN","DGPTAE04",65,0)
 S DGPTOPAR(DGPTSDD)=$S($D(DGPTOPAR(DGPTSDD)):DGPTOPAR(DGPTSDD)_U_DGPTOPP,1:DGPTOPP_U)
"RTN","DGPTAE04",66,0)
 Q
"RTN","DGPTAE04",67,0)
EXIT ;
"RTN","DGPTAE04",68,0)
 K DGPTL3,DGPTOC,DGPTOC1,DGPTOPP
"RTN","DGPTAE04",69,0)
 Q
"RTN","DGPTAE04",70,0)
ERR ;
"RTN","DGPTAE04",71,0)
 D WRTERR^DGPTAE(DGPTERC,NODE,SEQ)
"RTN","DGPTAE04",72,0)
 Q
"RTN","DGPTAEE")
0^51^B10892054^B10850349
"RTN","DGPTAEE",1,0)
DGPTAEE ;ALB/MTC - Austin Edit Checks Error Driver ;23 NOV 92
"RTN","DGPTAEE",2,0)
 ;;5.3;Registration;**64,338,678,850**;Aug 13, 1993;Build 171
"RTN","DGPTAEE",3,0)
 ;
"RTN","DGPTAEE",4,0)
EN ;-- entry point for list manager
"RTN","DGPTAEE",5,0)
 D BUILD
"RTN","DGPTAEE",6,0)
 Q
"RTN","DGPTAEE",7,0)
 ;
"RTN","DGPTAEE",8,0)
HDR ;-- header function for Editing List.
"RTN","DGPTAEE",9,0)
 S VALMHDR(1)="Patient : "_$P($G(^DPT(DFN,0)),U)
"RTN","DGPTAEE",10,0)
 S VALMHDR(2)="Admission Date : "_$$FTIME^VALM1($P(^DGPT(PTF,0),U,2))
"RTN","DGPTAEE",11,0)
 S VALMHDR(3)="Discharge Date : "_$$FTIME^VALM1($P(^DGPT(PTF,70),U))
"RTN","DGPTAEE",12,0)
 Q
"RTN","DGPTAEE",13,0)
 ;
"RTN","DGPTAEE",14,0)
BUILD ;-- this function will build the display array - similar to Austin's EAL
"RTN","DGPTAEE",15,0)
 ;
"RTN","DGPTAEE",16,0)
 Q:'$D(^TMP("AERROR",$J))!'($D(^TMP("AEDIT",$J)))
"RTN","DGPTAEE",17,0)
 K ^TMP("AD",$J)
"RTN","DGPTAEE",18,0)
 N NODE,SEQ,DGER,ERSTR,SP,ROU,REC
"RTN","DGPTAEE",19,0)
 S (VALMCNT,SEQ)=0,NODE="",SP=" "
"RTN","DGPTAEE",20,0)
 F  S SEQ=$O(^TMP("AERROR",$J,SEQ)) Q:SEQ=""  S NODE=$O(^(SEQ,0)) I NODE="N101"!(NODE="N401")!(NODE="N501")!(NODE="N601")!(NODE="N701")!(NODE="N702") D
"RTN","DGPTAEE",21,0)
 . S ERSTR=$P($T(@("ER"_$E(NODE,2,4))+1),";;",2) D LOADER
"RTN","DGPTAEE",22,0)
 . S REC=^TMP("AEDIT",$J,NODE,SEQ)
"RTN","DGPTAEE",23,0)
 . S ROU="H"_$E(NODE,2,4)_"^"_$S(NODE="N101"!(NODE="N401")!(NODE="N501"):"DGPTAEE1",1:"DGPTAEE2")_"(REC)" D @ROU
"RTN","DGPTAEE",24,0)
 Q
"RTN","DGPTAEE",25,0)
 ;
"RTN","DGPTAEE",26,0)
EXIT ;-- exit point for list manager
"RTN","DGPTAEE",27,0)
 K ^TMP("AD",$J)
"RTN","DGPTAEE",28,0)
 D CLEAR^VALM1
"RTN","DGPTAEE",29,0)
 Q
"RTN","DGPTAEE",30,0)
 ;
"RTN","DGPTAEE",31,0)
LOADER ;-- This function will load the array DGER
"RTN","DGPTAEE",32,0)
 ;
"RTN","DGPTAEE",33,0)
 N Y,J,X1,X2
"RTN","DGPTAEE",34,0)
 K DGER
"RTN","DGPTAEE",35,0)
 S DGER=""
"RTN","DGPTAEE",36,0)
 S Y="",J=0 F  S J=$O(^TMP("AERROR",$J,SEQ,NODE,J)) Q:'J  S X2=$G(^(J)) D
"RTN","DGPTAEE",37,0)
 . S X1=$O(^DGP(45.64,"B",$G(X2),0)),Y=$G(^DGP(45.64,+$G(X1),0))
"RTN","DGPTAEE",38,0)
 . S DGER(J)=Y,DGER=DGER_$P(ERSTR,U,$P(Y,U,3))_","
"RTN","DGPTAEE",39,0)
 S DGER=$E(DGER,1,$L(DGER)-1)
"RTN","DGPTAEE",40,0)
 Q
"RTN","DGPTAEE",41,0)
 ;
"RTN","DGPTAEE",42,0)
WRER ;-- This function will write errors in DGER into ^TMP
"RTN","DGPTAEE",43,0)
 ;
"RTN","DGPTAEE",44,0)
 N I
"RTN","DGPTAEE",45,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)="Error Code(s) : "
"RTN","DGPTAEE",46,0)
 S I="" F  S I=$O(DGER(I)) Q:'I  D
"RTN","DGPTAEE",47,0)
 . S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=$P(DGER(I),U)_" - "_$P(DGER(I),U,2)
"RTN","DGPTAEE",48,0)
 D TRTCHK
"RTN","DGPTAEE",49,0)
 I '$G(DGPTERR) S VALMCNT=VALMCNT+1,$P(^TMP("AD",$J,VALMCNT,0),"=",80)=""
"RTN","DGPTAEE",50,0)
 K DGPTERR
"RTN","DGPTAEE",51,0)
 Q
"RTN","DGPTAEE",52,0)
 ;
"RTN","DGPTAEE",53,0)
 ;-- This data is used to determine where in the output string a '#'
"RTN","DGPTAEE",54,0)
 ;   should be printed. The format of the each datum is:
"RTN","DGPTAEE",55,0)
 ;      <position in transmission string>:<position in display string>
"RTN","DGPTAEE",56,0)
 ;
"RTN","DGPTAEE",57,0)
ER101 ;-- 101 error position string
"RTN","DGPTAEE",58,0)
 ;;1:1^2:8^3:18^4:32^5:47^6:52^7:55^8:62^9:66^10:70^11:73^12:1^13:15^14:20^15:24^16:27^17:34^18:41^19:44^20:52^^^^24:71
"RTN","DGPTAEE",59,0)
 ;
"RTN","DGPTAEE",60,0)
ER501 ;-- 501 error position string
"RTN","DGPTAEE",61,0)
 ;;1:1^2:8^3:18^4:32^5:47^6:56^7:60^8:64^9:69^10:1^11:9^12:17^13:25^14:33^15:1^16:14^17:23^18:27^19:31^20:34^21:37^22:42^23:45:^24:50^
"RTN","DGPTAEE",62,0)
 ;
"RTN","DGPTAEE",63,0)
ER401 ;-- 401 error position string
"RTN","DGPTAEE",64,0)
 ;;1:1^2:8^3:18^4:32^5:48^6:53^7:59^8:64^9:1^10:9^11:17^12:25^13:33^14:42^15:52^
"RTN","DGPTAEE",65,0)
 ;
"RTN","DGPTAEE",66,0)
ER601 ;-- 601 error position string
"RTN","DGPTAEE",67,0)
 ;;1:1^2:10^3:18^4:32^5:47^6:52^7:57^8:1^9:9^10:17^11:25^12:33^
"RTN","DGPTAEE",68,0)
 ;
"RTN","DGPTAEE",69,0)
ER701 ;-- 701 error position string
"RTN","DGPTAEE",70,0)
 ;;1:1^2:8^3:18^4:32^5:46^6:51^7:56^8:62^9:69^10:75^11:1^12:8^13:12^14:16^15:23^16:28^17:39^18:48^19:52^20:55^21:58^22:63^23:66^
"RTN","DGPTAEE",71,0)
 ;
"RTN","DGPTAEE",72,0)
ER702 ;-- 702 error position string
"RTN","DGPTAEE",73,0)
 ;;1:1^2:8^3:18^4:32^5:1^6:9^7:17^8:25^9:33^10:41^11:49^12:57^13:65^
"RTN","DGPTAEE",74,0)
 ;
"RTN","DGPTAEE",75,0)
TRTCHK ;-- Check for treating spec error flag and print error message if flag
"RTN","DGPTAEE",76,0)
 ;-- exists.
"RTN","DGPTAEE",77,0)
 N I,X
"RTN","DGPTAEE",78,0)
 S I=0,I=$O(DGPTSER(I)) G:'I TRTCHKQ
"RTN","DGPTAEE",79,0)
 I $G(DGPTSER(+I))=1 D
"RTN","DGPTAEE",80,0)
 . S X="*** Bed section code is not active for the date/time period listed. ***"
"RTN","DGPTAEE",81,0)
 . S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X,DGPTERR=1
"RTN","DGPTAEE",82,0)
TRTCHKQ K DGPTSER(+I)
"RTN","DGPTAEE",83,0)
 Q
"RTN","DGPTC1")
0^59^B26022907^B26128925
"RTN","DGPTC1",1,0)
DGPTC1 ;ALN/MJK - Census Record Processing;JAN 27, 2005
"RTN","DGPTC1",2,0)
 ;;5.3;Registration;**37,413,643,701,850**;Aug 13, 1993;Build 171
"RTN","DGPTC1",3,0)
 ;
"RTN","DGPTC1",4,0)
CEN ; -- determine if PTF rec is current Census rec
"RTN","DGPTC1",5,0)
 ; input: PTF   := ptf rec #
"RTN","DGPTC1",6,0)
 ;     DGPMCA   := corres. adm           (non-fee)
"RTN","DGPTC1",7,0)
 ;     DGPMAN   := 0th node of corrs adm     "
"RTN","DGPTC1",8,0)
 ;output: DGCI  := census rec #
"RTN","DGPTC1",9,0)
 ;        DGCST := census rec status
"RTN","DGPTC1",10,0)
 ;        DGCN  := census date entry to 45.86
"RTN","DGPTC1",11,0)
 ;
"RTN","DGPTC1",12,0)
 K DGCST,DGCI,DGCN,DGCN0,DGFEE
"RTN","DGPTC1",13,0)
 S DGFEE=0
"RTN","DGPTC1",14,0)
 G CENQ:'$D(^DGPT(PTF,0)) N DFN S DGPTF0=^(0),DFN=+DGPTF0
"RTN","DGPTC1",15,0)
 D CEN^DGPTUTL I DGCN0=""!(DT'>DGCN0) K DGCN G CENQ
"RTN","DGPTC1",16,0)
 S DGT=$P(DGCN0,U)_".9" I '$P(DGPTF0,U,4) D WARD I 'Y K DGCN G CENQ
"RTN","DGPTC1",17,0)
 ;if Fee Basis quit if admit > census date or admit < census date if disch
"RTN","DGPTC1",18,0)
 I $P(DGPTF0,U,4)=1,$P(DGPTF0,U,2)>DGT G CENQ
"RTN","DGPTC1",19,0)
 I $P(DGPTF0,U,4)=1,+$P($G(^DGPT(PTF,70)),U),$P(DGPTF0,U,2)<DGT G CENQ
"RTN","DGPTC1",20,0)
 I $P(DGPTF0,U,4)=1 D FEE G CENQ
"RTN","DGPTC1",21,0)
 S DGCST=0,DGCI=""
"RTN","DGPTC1",22,0)
 F  S DGCI=$O(^DGPT("ACENSUS",PTF,DGCI)) Q:'DGCI  I $D(^DGPT(DGCI,0)),$P(^(0),U,13)=DGCN S DGCST=$P(^(0),U,6) Q:DGCST'=0  D  Q
"RTN","DGPTC1",23,0)
 .S DGCI=$$RDGCI(DGCI),DGCST=1
"RTN","DGPTC1",24,0)
CENQ K DGCN0,DGA1,DGT,X,DGPTF0,DGFEE Q
"RTN","DGPTC1",25,0)
 ;
"RTN","DGPTC1",26,0)
KVAR K DGCN,DGCI,DGCST Q
"RTN","DGPTC1",27,0)
 ;
"RTN","DGPTC1",28,0)
FEE ;
"RTN","DGPTC1",29,0)
 S DGCST=0,DGCI="",DGFEE=1
"RTN","DGPTC1",30,0)
 F  S DGCI=$O(^DGPT("ACENSUS",PTF,DGCI)) Q:'DGCI  I $D(^DGPT(DGCI,0)),$P(^(0),U,13)=DGCN S DGCST=$P(^(0),U,6) Q:DGCST'=0  D  Q
"RTN","DGPTC1",31,0)
 . S DGCI=$$RDGCI(DGCI),DGCST=+$P(^DGPT(DGCI,0),U,6)
"RTN","DGPTC1",32,0)
 Q
"RTN","DGPTC1",33,0)
ACT ; -- census actions with input of X
"RTN","DGPTC1",34,0)
 Q:'$D(X)
"RTN","DGPTC1",35,0)
 S Y=2 D RTY^DGPTUTL
"RTN","DGPTC1",36,0)
 I X="L" D CLS G ACTQ
"RTN","DGPTC1",37,0)
 I X="P" D OPEN G ACTQ
"RTN","DGPTC1",38,0)
 I X="E" S DGPTFLE=1,DGPTIFN=DGCI D EN^DGPTFREL K DGRTY,DGRTY0 G ^DGPTF
"RTN","DGPTC1",39,0)
ACTQ K DGRTY,DGRTY0 G EN1^DGPTF4
"RTN","DGPTC1",40,0)
 ;
"RTN","DGPTC1",41,0)
RDGCI(DGCI) ;-- eliminating 'OPEN' status census record and duplicates
"RTN","DGPTC1",42,0)
 S DGDL=DGCI,DGCIR="" D
"RTN","DGPTC1",43,0)
 .F  S DGCIR=$O(^DGPT("ACENSUS",PTF,DGCIR),-1) Q:DGCIR<DGDL  D
"RTN","DGPTC1",44,0)
 ..I $D(^DGPT(DGCIR,0)),$P(^(0),U,13)=DGCN S:DGCI=DGDL DGCI=DGCIR D
"RTN","DGPTC1",45,0)
 ...I DGCIR<DGCI S DGPTIFN=DGCIR,DGRTY=2 D KDGP^DGPTFDEL,KDGPT^DGPTFDEL
"RTN","DGPTC1",46,0)
 Q DGCI
"RTN","DGPTC1",47,0)
 ;
"RTN","DGPTC1",48,0)
CLS ;
"RTN","DGPTC1",49,0)
 S DGFEE=0
"RTN","DGPTC1",50,0)
 I $P(^DGPT(DGPTF,0),U,4)'=1 W !,"Updating TRANSFER DRGs..." S DGADM=$P(^DGPT(PTF,0),U,2) D SUDO1^DGPTSUDO
"RTN","DGPTC1",51,0)
 S J=PTF,DGERR=-1,T2=^DG(45.86,DGCN,0)+.9,T1=$P(^(0),U,5)
"RTN","DGPTC1",52,0)
 S DGPTFMTX=DGPTFMT S Y=T2 D FMT^DGPTUTL
"RTN","DGPTC1",53,0)
 W !,"Performing edit checks..."
"RTN","DGPTC1",54,0)
 ;-- init for Austin Edits
"RTN","DGPTC1",55,0)
 K ^TMP("AEDIT",$J),^TMP("AERROR",$J) S DGACNT=0
"RTN","DGPTC1",56,0)
 ;
"RTN","DGPTC1",57,0)
 D LOG^DGPTFTR1:DGPTFMT=1,LOG^DGPTR1:DGPTFMT=2,LOG^DGPTR1:DGPTFMT=3,COM1^DGPTFTR
"RTN","DGPTC1",58,0)
 K DGLOGIC,T1,T2,DGCCO D LO^DGUTL
"RTN","DGPTC1",59,0)
 D VERCHK^DGPTRI3(DGPTF) I DGERR>0 D HANG^DGPTUTL K DGERR G CLSQ
"RTN","DGPTC1",60,0)
 I DGERR>0 K DGERR D ^DGPTF2 G CLSQ
"RTN","DGPTC1",61,0)
 ;-- do austin edits
"RTN","DGPTC1",62,0)
 ;
"RTN","DGPTC1",63,0)
 D ^DGPTAE I DGERR>0 K DGERR D ^DGPTF2 G CLSQ
"RTN","DGPTC1",64,0)
 K DGERR,^TMP("AEDIT",$J),DGACNT
"RTN","DGPTC1",65,0)
 I $P(^DGPT(PTF,0),U,4) S DGFEE=1 D FEE1 G CLSQ:'DGCI
"RTN","DGPTC1",66,0)
 I $P(^DGPT(PTF,0),U,4)'=1 D CREATE G CLSQ:'DGCI
"RTN","DGPTC1",67,0)
 S DR="7////"_DUZ_";8///T",DA=DGCI,DIE="^DGPT(" D ^DIE K DIE,DR
"RTN","DGPTC1",68,0)
 S (X,DINUM)=DGCI,DIC(0)="L",DIC="^DGP(45.84,",DIC("DR")="2///NOW;3////"_DUZ
"RTN","DGPTC1",69,0)
 K DD,DO D FILE^DICN K DIC,DINUM,DO
"RTN","DGPTC1",70,0)
 F I=0,.11,.52,.321,.32,57,.3 S:$D(^DPT(DFN,I)) ^DGP(45.84,DGCI,$S(I=0:10,1:I))=^DPT(DFN,I)
"RTN","DGPTC1",71,0)
 W !,"****** CENSUS CLOSED OUT ******" D HANG^DGPTUTL
"RTN","DGPTC1",72,0)
 S DGCST=1
"RTN","DGPTC1",73,0)
CLSQ S DGPTFMT=DGPTFMTX K DGPTFMTX,DGFEE Q
"RTN","DGPTC1",74,0)
 ;
"RTN","DGPTC1",75,0)
CREATE ; -- create census record
"RTN","DGPTC1",76,0)
 W !,"Creating Census Record..."
"RTN","DGPTC1",77,0)
 S Y=$P(^DGPT(PTF,0),U,2) D CREATE^DGPTFCR G CREATEQ:Y<0 S DGCI=+Y W "#",DGCI
"RTN","DGPTC1",78,0)
 S DGEND=+^DG(45.86,DGCN,0)_".2359",DGBEG=+$P(^(0),U,5)
"RTN","DGPTC1",79,0)
 S ^DGPT(DGCI,0)=$P(^DGPT(PTF,0),U,1,10)_"^2^"_PTF_"^"_DGCN,DGCSUF=$P(^(0),U,5)
"RTN","DGPTC1",80,0)
 ;S ^DGPT(DGCI,0)=$P(^DGPT(PTF,0),U,1,5)_"^1^"_$P(^DGPT(PTF,0),U,7,10)_"^2^"_PTF_"^"_DGCN,DGCSUF=$P(^(0),U,5)
"RTN","DGPTC1",81,0)
 S Y=DGEND D BS^DGPTC2 S X="",$P(X,U)=DGEND,$P(X,U,14)=Y
"RTN","DGPTC1",82,0)
 I $D(^DGPT(PTF,70)) S Y=^(70) F I=8,9,10 S $P(X,U,I)=$P(Y,U,I)
"RTN","DGPTC1",83,0)
 S ^DGPT(DGCI,70)=X D ASIH
"RTN","DGPTC1",84,0)
 I $D(^DGPT(PTF,82)) S ^DGPT(DGCI,82)=^DGPT(PTF,82)
"RTN","DGPTC1",85,0)
 I $D(^DGPT(PTF,101)) S ^DGPT(DGCI,101)=^DGPT(PTF,101)
"RTN","DGPTC1",86,0)
 F NODE="M","P","S",535 F I=0:0 S I=$O(^DGPT(PTF,NODE,I)) Q:'I  I $D(^DGPT(PTF,NODE,I,0)) S X=^(0) D @("SET"_NODE_"^DGPTC2")
"RTN","DGPTC1",87,0)
 K DA,DIKLM S DA=DGCI,DIK="^DGPT(" D IX1^DIK
"RTN","DGPTC1",88,0)
CREATEQ K X,Y,DGCSUF,DGBEG,DGEND Q
"RTN","DGPTC1",89,0)
 ;
"RTN","DGPTC1",90,0)
FEE1 ; -- create census record for fee record
"RTN","DGPTC1",91,0)
 W !,"Creating Census Record..."
"RTN","DGPTC1",92,0)
 S Y=$P(^DGPT(PTF,0),U,2) D CREATE^DGPTFCR G CREATEQ:Y<0 S DGCI=+Y W "#",DGCI
"RTN","DGPTC1",93,0)
 S DGEND=+^DG(45.86,DGCN,0)_".2359",DGBEG=+$P(^(0),U,5)
"RTN","DGPTC1",94,0)
 S ^DGPT(DGCI,0)=$P(^DGPT(PTF,0),U,1,10)_"^2^"_PTF_"^"_DGCN,DGCSUF=$P(^(0),U,5)
"RTN","DGPTC1",95,0)
 I $D(^DGPT(PTF,70)) S ^DGPT(DGCI,70)=^DGPT(PTF,70)
"RTN","DGPTC1",96,0)
 S $P(^DGPT(DGCI,70),U)=DGEND
"RTN","DGPTC1",97,0)
 I $D(^DGPT(PTF,101)) S ^DGPT(DGCI,101)=^DGPT(PTF,101)
"RTN","DGPTC1",98,0)
 F NODE="M","P","S",535 F I=0:0 S I=$O(^DGPT(PTF,NODE,I)) Q:'I  I $D(^DGPT(PTF,NODE,I,0)) S X=^(0) D @("SET"_NODE_"^DGPTC2")
"RTN","DGPTC1",99,0)
 K DA,DIKLM S DA=DGCI,DIK="^DGPT(" D IX1^DIK
"RTN","DGPTC1",100,0)
FEE1Q K X,Y,DGCSUF,DGBEG,DGEND Q
"RTN","DGPTC1",101,0)
OPEN ; -- re-open census rec by deleting
"RTN","DGPTC1",102,0)
 S DGPTIFN=DGCI D OPEN^DGPTFDEL S (DGCI,DGCST)=0
"RTN","DGPTC1",103,0)
 K DGPTIFN Q
"RTN","DGPTC1",104,0)
 ;
"RTN","DGPTC1",105,0)
WARD ; -- ward @ census d/t for an adm(even if nhcu/dom adm that is ASIH)
"RTN","DGPTC1",106,0)
 ;  input:  DGPMCA := corres adm
"RTN","DGPTC1",107,0)
 ;          DGPMAN := corres adm 0th node
"RTN","DGPTC1",108,0)
 ; output:       Y := ward ptr or null
"RTN","DGPTC1",109,0)
 ;
"RTN","DGPTC1",110,0)
 N MVT,M
"RTN","DGPTC1",111,0)
 S Y=""
"RTN","DGPTC1",112,0)
 I +DGPMAN>DGT Q
"RTN","DGPTC1",113,0)
 I $D(^DGPM(+$P(DGPMAN,U,17),0)),+^(0)<DGT Q
"RTN","DGPTC1",114,0)
 F %=(9999999.9999999-DGT):0 S %=$O(^DGPM("APMV",+$G(DFN),+$G(DGPMCA),%)) Q:'%  D
"RTN","DGPTC1",115,0)
 . F MVT=0:0 S MVT=$O(^DGPM("APMV",$G(DFN),$G(DGPMCA),%,MVT)) Q:'MVT  D
"RTN","DGPTC1",116,0)
 .. I $D(^DGPM(MVT,0)) S M=^(0) I "^13^43^44^45^"'[(U_$P(M,U,18)_U),$D(^DIC(42,+$P(M,U,6),0)) S Y=+$P(M,U,6) G WARDQ
"RTN","DGPTC1",117,0)
WARDQ Q
"RTN","DGPTC1",118,0)
 ;
"RTN","DGPTC1",119,0)
ASIH ; -- calc asih days
"RTN","DGPTC1",120,0)
 N DGADM,DGREC,DGBDT,DGEDT,DGMVTP
"RTN","DGPTC1",121,0)
 S X1=DGBEG,X2=-1 D C^%DTC S DGBDT=X
"RTN","DGPTC1",122,0)
 S X1=$P(DGEND,"."),X2=1 D C^%DTC S DGEDT=X
"RTN","DGPTC1",123,0)
 S DGADM=$P(^DGPT(DGCI,0),U,2) D ASIH^DGUTL2
"RTN","DGPTC1",124,0)
 S $P(^DGPT(DGCI,70),U,8)=DGREC
"RTN","DGPTC1",125,0)
 Q
"RTN","DGPTC2")
0^70^B11527513^B10137147
"RTN","DGPTC2",1,0)
DGPTC2 ;ALN/MJK - Census Record Processing;JAN 27,2005
"RTN","DGPTC2",2,0)
 ;;5.3;Registration;**58,189,643,850**;Aug 13, 1993;Build 171
"RTN","DGPTC2",3,0)
 ;
"RTN","DGPTC2",4,0)
SETP ; -- P node processing
"RTN","DGPTC2",5,0)
 ;I DGCSUF="9AA"!(DGCSUF="BU") S I=999 G SETPQ
"RTN","DGPTC2",6,0)
 G SETPQ:X<DGBEG!(X>DGEND) S ^DGPT(DGCI,"P",I,0)=X
"RTN","DGPTC2",7,0)
 S:'$D(^DGPT(DGCI,"P",0)) ^(0)="^45.05D^^" S X=^(0),^(0)=$P(X,U,1,2)_"^"_I_"^"_($P(X,U,4)+1)
"RTN","DGPTC2",8,0)
SETPQ Q
"RTN","DGPTC2",9,0)
 ;
"RTN","DGPTC2",10,0)
SETS ; -- S node processing
"RTN","DGPTC2",11,0)
 D GETSUFF
"RTN","DGPTC2",12,0)
 I $G(DGSFLAG) S I=999 G SETSQ
"RTN","DGPTC2",13,0)
 G SETSQ:X<DGBEG!(X>DGEND) S ^DGPT(DGCI,"S",I,0)=X
"RTN","DGPTC2",14,0)
 S:'$D(^DGPT(DGCI,"S",0)) ^(0)="^45.01D^^" S X=^(0),^(0)=$P(X,U,1,2)_"^"_I_"^"_($P(X,U,4)+1)
"RTN","DGPTC2",15,0)
SETSQ K DGSFLAG Q
"RTN","DGPTC2",16,0)
 ;
"RTN","DGPTC2",17,0)
SET535 ; -- 535 node processing
"RTN","DGPTC2",18,0)
 D GETSUFF
"RTN","DGPTC2",19,0)
 I '$P(X,U,7),$G(DGSFLAG) G SET535Q
"RTN","DGPTC2",20,0)
 I $P(X,U,7) D CONE G SET535Q
"RTN","DGPTC2",21,0)
 G SET535Q:$P(X,U,10)<DGBEG!($P(X,U,10)>DGEND) S ^DGPT(DGCI,535,I,0)=X
"RTN","DGPTC2",22,0)
 S:'$D(^DGPT(DGCI,535,0)) ^(0)="^45.0535^^" S X=^(0),^(0)=$P(X,U,1,2)_"^"_I_"^"_($P(X,U,4)+1)
"RTN","DGPTC2",23,0)
SET535Q K DGSFLAG Q
"RTN","DGPTC2",24,0)
 ;
"RTN","DGPTC2",25,0)
SETM ; -- M node processing
"RTN","DGPTC2",26,0)
 D GETSUFF
"RTN","DGPTC2",27,0)
 I I'=1,$G(DGSFLAG) S I=999 G SETMQ
"RTN","DGPTC2",28,0)
 I I=1 D ONE G SETMQ
"RTN","DGPTC2",29,0)
 G SETMQ:($P(X,U,10)<DGBEG)!($P(X,U,10)>DGEND) S ^DGPT(DGCI,"M",I,0)=X
"RTN","DGPTC2",30,0)
 S:'$D(^DGPT(DGCI,"M",0)) ^(0)="^45.02AI^^" S X=^(0),^(0)=$P(X,U,1,2)_"^"_I_"^"_($P(X,U,4)+1)
"RTN","DGPTC2",31,0)
 S:$D(^DGPT(PTF,"M",I,"P")) ^DGPT(DGCI,"M",I,"P")=^DGPT(PTF,"M",I,"P")
"RTN","DGPTC2",32,0)
 S:$D(^DGPT(PTF,"M",I,82)) ^DGPT(DGCI,"M",I,82)=^DGPT(PTF,"M",I,82)
"RTN","DGPTC2",33,0)
SETMQ K DGSFLAG Q
"RTN","DGPTC2",34,0)
 ;
"RTN","DGPTC2",35,0)
BSEC ; -- set bed sec in 1 mvt ; input X := one node of "M" ; output := same
"RTN","DGPTC2",36,0)
 N Y
"RTN","DGPTC2",37,0)
 S Y=+$O(^DGPM("ATS",DFN,DGPMCA,9999999.9999999-DGEND)),Y=+$O(^(Y,0))
"RTN","DGPTC2",38,0)
 I Y=0 S Y=+$O(^DGPM("ATS",DFN,DGPMCA,9999999.9999999-DGEND,0)) ;aas 850 fix
"RTN","DGPTC2",39,0)
 S $P(X,U,2)=$S($D(^DIC(45.7,+Y,0)):$P(^(0),U,2),1:0)
"RTN","DGPTC2",40,0)
 Q
"RTN","DGPTC2",41,0)
 ;
"RTN","DGPTC2",42,0)
BS ; -- determine bed status on census date
"RTN","DGPTC2",43,0)
 S I=+$O(^DGPM("APMV",DFN,DGPMCA,9999999.9999999-Y)),I=+$O(^(I,0))
"RTN","DGPTC2",44,0)
 S I=$S($D(^DGPM(I,0)):$P(^(0),U,18),1:0),Y=1
"RTN","DGPTC2",45,0)
 I I S I=U_I_U,Y=$S("^43^44^13^45^"[I:4,"^1^"[I:2,"^2^3^"[I:3,1:1)
"RTN","DGPTC2",46,0)
 Q
"RTN","DGPTC2",47,0)
 ;
"RTN","DGPTC2",48,0)
CONE ;-- find last 535 before last census date
"RTN","DGPTC2",49,0)
 S DGX=$O(^DGPT(PTF,535,"AM",DGEND)) S DGX=+$S(DGX:$O(^(DGX,0)),1:$O(^DGPT(PTF,535,"ADC",1,0))) I $D(^DGPT(PTF,535,DGX,0)) S ^DGPT(DGCI,535,DGX,0)=^DGPT(PTF,535,DGX,0),$P(^DGPT(DGCI,535,DGX,0),U,10)=DGEND
"RTN","DGPTC2",50,0)
 S:'$D(^DGPT(DGCI,535,0)) ^(0)="^45.0535^^" S X=^(0),^(0)=$P(X,U,1,2)_"^"_I_"^"_($P(X,U,4)+1)
"RTN","DGPTC2",51,0)
 Q
"RTN","DGPTC2",52,0)
 ;
"RTN","DGPTC2",53,0)
ONE ; -- find last mvt before census date
"RTN","DGPTC2",54,0)
 S M=$O(^DGPT(PTF,"M","AM",DGEND)),M=$S('M:M,1:$O(^(M,0))),M=$S(M:M,1:1)
"RTN","DGPTC2",55,0)
 I M>1,$D(^DGPT(PTF,"M",M,0)) S X="1^"_$P(^(0),U,2,99)
"RTN","DGPTC2",56,0)
 I M=1,DGFEE=0 D BSEC
"RTN","DGPTC2",57,0)
 S $P(X,U,10)=DGEND,^DGPT(DGCI,"M",1,0)=X
"RTN","DGPTC2",58,0)
 S:'$D(^DGPT(DGCI,"M",0)) ^(0)="^45.02AI^^" S X=^(0),^(0)=$P(X,U,1,2)_"^1^"_($P(X,U,4)+1)
"RTN","DGPTC2",59,0)
 ;;Following code added to transmit GAF scores in Census Record
"RTN","DGPTC2",60,0)
 ;;Code added by EDS-GRR 6/4/1998
"RTN","DGPTC2",61,0)
 ;;
"RTN","DGPTC2",62,0)
 M ^DGPT(DGCI,"M",M,300)=^DGPT(PTF,"M",M,300)
"RTN","DGPTC2",63,0)
 M ^DGPT(DGCI,"M",M,82)=^DGPT(PTF,"M",M,82) ; move POA fields to Census
"RTN","DGPTC2",64,0)
 ;;
"RTN","DGPTC2",65,0)
 ;;End of GAF enhancement
"RTN","DGPTC2",66,0)
 ;;
"RTN","DGPTC2",67,0)
 S:$D(^DGPT(PTF,"M",M,"P")) ^DGPT(DGCI,"M",1,"P")=^("P")
"RTN","DGPTC2",68,0)
 Q
"RTN","DGPTC2",69,0)
GETSUFF ; -- get suffix if from Va Domiciliary or VA Nursing home
"RTN","DGPTC2",70,0)
 F DGSTA=30,40 D
"RTN","DGPTC2",71,0)
 .D NUMACT^DGPTSUF(DGSTA)
"RTN","DGPTC2",72,0)
 .I DGANUM>0 D
"RTN","DGPTC2",73,0)
 ..F DGCTR=1:1:DGANUM I DGCSUF=DGSUFNAM(DGCTR) S DGSFLAG=1
"RTN","DGPTC2",74,0)
 .K DGANUM,DGCTR,DGSUFNAM
"RTN","DGPTC2",75,0)
 K DGSTA
"RTN","DGPTC2",76,0)
 Q
"RTN","DGPTDRG")
0^19^B50130642^B26343356
"RTN","DGPTDRG",1,0)
DGPTDRG ;ALB/ABS - DRG Information Report User Prompts ;11/15/06 8:31am
"RTN","DGPTDRG",2,0)
 ;;5.3;Registration;**60,441,510,559,599,606,669,729,850**;Aug 13, 1993;Build 171
"RTN","DGPTDRG",3,0)
 ;;ADL;Update for CSV Project;;Mar 28, 2003
"RTN","DGPTDRG",4,0)
 ;
"RTN","DGPTDRG",5,0)
 S U="^" D Q,DT^DICRW
"RTN","DGPTDRG",6,0)
PAT ;
"RTN","DGPTDRG",7,0)
 D EFFDATE G Q:$D(DUOUT),Q:$D(DTOUT)
"RTN","DGPTDRG",8,0)
 W !!,"Choose Patient from PATIENT file" S %=1 D YN^DICN G Q:%=-1
"RTN","DGPTDRG",9,0)
 I %Y["?"!('%) W !?3,"Enter <RET> for YES if you want DRGs for a patient from your PATIENT File",!?3,"Answer 'N' for NO if you want DRGs for a hypothetical patient" G PAT
"RTN","DGPTDRG",10,0)
 S DGPTHOW=% I %=2 S NAME="" G AGE
"RTN","DGPTDRG",11,0)
 N DOB
"RTN","DGPTDRG",12,0)
 S DIC="^DPT(",DIC(0)="AEQMZ"
"RTN","DGPTDRG",13,0)
 W ! D ^DIC G Q:Y'>0
"RTN","DGPTDRG",14,0)
 S DFN=+Y,NAME=$P(Y(0),"^"),(DOB,AGE)=$P(Y(0),U,3),SEX=$P(Y(0),U,2)
"RTN","DGPTDRG",15,0)
 S X1=DT,X2=AGE D ^%DTC S AGE=X\365.25 W "  AGE:",AGE
"RTN","DGPTDRG",16,0)
 ; -- is patient Expired
"RTN","DGPTDRG",17,0)
 S DGEXP=$S($D(^DPT(DFN,.35))#2:1,1:0) I DGEXP,'$P(^(.35),"^") S DGEXP=0
"RTN","DGPTDRG",18,0)
 G EXP:DGEXP,TRS
"RTN","DGPTDRG",19,0)
 ;
"RTN","DGPTDRG",20,0)
AGE ;
"RTN","DGPTDRG",21,0)
 R !!,"Patient's AGE: ",AGE:DTIME
"RTN","DGPTDRG",22,0)
 G Q:AGE["^"!('$T)
"RTN","DGPTDRG",23,0)
 S:AGE<0!(AGE="")!(AGE>124)!(AGE'?.N) AGE="?"
"RTN","DGPTDRG",24,0)
 I AGE["?" W !,"Enter a number for patient's age in years (0-124)" G AGE
"RTN","DGPTDRG",25,0)
 ;
"RTN","DGPTDRG",26,0)
SEX ;
"RTN","DGPTDRG",27,0)
 R !!,"Patient's SEX: MALE// ",X:DTIME G Q:X["^"!('$T)
"RTN","DGPTDRG",28,0)
 S Z="^MALE^FEMALE" I X="" S X="M" W X
"RTN","DGPTDRG",29,0)
 D IN^DGHELP I %=-1 W !?3,"Enter <RET> for MALE if hypothetical patient is male",!?3,"Enter 'F' for Female" G SEX
"RTN","DGPTDRG",30,0)
 S SEX=$E(X)
"RTN","DGPTDRG",31,0)
 ;
"RTN","DGPTDRG",32,0)
EXP ;
"RTN","DGPTDRG",33,0)
 W !!,"Did patient die during this episode" S %=2 D YN^DICN G Q:%=-1
"RTN","DGPTDRG",34,0)
 I %Y["?"!('%) W !?3,"Enter <RET> for NO if patient did not die during the hospital",!?15,"stay for which this DRG is to be calculated",!?3,"Enter 'Y' for YES" G EXP
"RTN","DGPTDRG",35,0)
 S DGEXP=$S(%=1:1,1:0) I DGEXP S (DGTRS,DGDMS)=0 G DX
"RTN","DGPTDRG",36,0)
 ;
"RTN","DGPTDRG",37,0)
TRS W !!,"Transfer to an acute care facility" S %=2 D YN^DICN G Q:%=-1
"RTN","DGPTDRG",38,0)
 I %Y["?"!('%) W !?3,"Enter <RET> for NO if patient not transfered to an acute care facility",!?3,"Enter 'Y' for YES if patient was transfered to acute care facility" G TRS
"RTN","DGPTDRG",39,0)
 S DGTRS=$S(%=1:1,1:0)
"RTN","DGPTDRG",40,0)
 ;
"RTN","DGPTDRG",41,0)
DMS ;
"RTN","DGPTDRG",42,0)
 W !!,"Discharged against medical advice" S %=2 D YN^DICN G Q:%=-1 I %Y["?"!('%) W !?3,"Enter <RET> for NO if patient did not leave against medical advice",!?3,"Enter 'Y' for YES if patient did leave against medical advice",!,*7 G DMS
"RTN","DGPTDRG",43,0)
 S DGDMS=$S(%=1:1,1:0)
"RTN","DGPTDRG",44,0)
 ;
"RTN","DGPTDRG",45,0)
DX ;
"RTN","DGPTDRG",46,0)
 N DXINF,ICDVDT
"RTN","DGPTDRG",47,0)
 K X,Y
"RTN","DGPTDRG",48,0)
 ;
"RTN","DGPTDRG",49,0)
 ; What terminology to use, ICD9 or ICD10
"RTN","DGPTDRG",50,0)
 I DGDAT<IMPDATE S DGTERMIN="ICD"
"RTN","DGPTDRG",51,0)
 I DGDAT'<IMPDATE S DGTERMIN="10D"
"RTN","DGPTDRG",52,0)
 ;
"RTN","DGPTDRG",53,0)
 W !
"RTN","DGPTDRG",54,0)
 S (DGDX,DGSURG)="" S PROMPT="Enter PRINCIPAL diagnosis "_$$DISP()_": "
"RTN","DGPTDRG",55,0)
 ;D ICDEN1^DGPTF5
"RTN","DGPTDRG",56,0)
 S CODESET=$S(DGTERMIN="ICD":9,1:10) D DIAG^DGPTFIC
"RTN","DGPTDRG",57,0)
 Q:$G(X)["^"!($G(X)="")
"RTN","DGPTDRG",58,0)
 Q:$G(DTOUT)!$G(DUOUT)!$G(DIRUT)!$G(DIROUT)
"RTN","DGPTDRG",59,0)
 ;
"RTN","DGPTDRG",60,0)
 S DGPTTMP=Y ; -- ICDEN1^DGPTF5 returns Y=$$ICDDATA^ICDXCODE
"RTN","DGPTDRG",61,0)
 I $P(DGPTTMP,U,5) D  G DX
"RTN","DGPTDRG",62,0)
 . W !,*7,">>>You have selected diagnosis code that is not considered"
"RTN","DGPTDRG",63,0)
 . W !,"a primary diagnosis code.  Please enter a PRIMARY code."
"RTN","DGPTDRG",64,0)
 ;
"RTN","DGPTDRG",65,0)
 I '$P(DGPTTMP,U,10) D INAC G DX
"RTN","DGPTDRG",66,0)
 S:$P(DGPTTMP,U,10) DGDX=+Y,DGDX(1)=$P(DGPTTMP,"^",2)_"^"_$P(DGPTTMP,"^",4)
"RTN","DGPTDRG",67,0)
 ;S:DGTERMIN="10D" DGDXPOA=$$ASKPOA(0)
"RTN","DGPTDRG",68,0)
 S DGDXPOA=$S(DGTERMIN="10D":$$ASKPOA(0),1:"Y")
"RTN","DGPTDRG",69,0)
 ;
"RTN","DGPTDRG",70,0)
 S PROMPT="Enter SECONDARY diagnosis "_$$DISP()_": " W !
"RTN","DGPTDRG",71,0)
 F DGI=2:1:5 D DIAG^DGPTFIC Q:$G(X)["^"!($G(X)="")  D
"RTN","DGPTDRG",72,0)
 . S DGPTTMP=Y
"RTN","DGPTDRG",73,0)
 . I '$P(DGPTTMP,U,10) D INAC S DGI=DGI-1 Q
"RTN","DGPTDRG",74,0)
 . I +DGPTTMP>0&($P(DGPTTMP,U,10)) S DGDX=DGDX_"^"_+Y,DGDX(DGI)=$P(DGPTTMP,"^",2)_"^"_$P(DGPTTMP,"^",4)
"RTN","DGPTDRG",75,0)
 . S:DGTERMIN="10D" DGDXPOA=DGDXPOA_"^"_$$ASKPOA(DGI-1)
"RTN","DGPTDRG",76,0)
 . S:DGTERMIN="ICD" DGDXPOA=DGDXPOA_"^"_"Y"
"RTN","DGPTDRG",77,0)
 . W !
"RTN","DGPTDRG",78,0)
 ;
"RTN","DGPTDRG",79,0)
 G Q:$G(X)["^"
"RTN","DGPTDRG",80,0)
 S DIC(0)="AEQMZ",DIC("S")="I $$ISVALID^ICDGTDRG(+Y,DGDAT,80.1)"
"RTN","DGPTDRG",81,0)
 ;
"RTN","DGPTDRG",82,0)
 D OP
"RTN","DGPTDRG",83,0)
 ;
"RTN","DGPTDRG",84,0)
 I ($G(X)["^") G Q ; User exiting up front 
"RTN","DGPTDRG",85,0)
 I ($D(DGSURG)<10),$D(DTOUT)!($D(DUOUT))!($D(DIROUT)) G Q ;Continue to DRG calc unless user failed to finish.
"RTN","DGPTDRG",86,0)
 I $D(DGPTODR) S DGVAR="AGE^NAME^SEX^DGDMS^DGEXP^DGTRS^DGDX#^DGSURG#^DGDAT^DGDXPOA",DGPGM="^DGPTODR" W ! D ZIS^DGUTQ G:POP Q U IO D ^DGPTODR,CLOSE^DGUTQ,Q S DGPTODR=1 G PAT
"RTN","DGPTDRG",87,0)
 ;
"RTN","DGPTDRG",88,0)
 ;S DGDRGPRT=1 D ^DGPTICD,Q G PAT  ;return DRG code even if inactive
"RTN","DGPTDRG",89,0)
 D NEWOUT,Q G PAT
"RTN","DGPTDRG",90,0)
 ;
"RTN","DGPTDRG",91,0)
Q K DFN,DGI,DGPGM,AGE,NAME,DGDMS,DGDX,DGEXP,DGPTHOW,DGSURG,DGTRS,DGVAR,DGDRGPRT,DRG,DIC,SEX,POP,X,Y,Z,X1,X2,%,%Y
"RTN","DGPTDRG",92,0)
 K EFFDATE,IMPDATE,DGTERMIN,DGTEMP,ICDVDT,DGDXPOA,CODESET,PROMPT,TERM,DGENR,DGPTTMP
"RTN","DGPTDRG",93,0)
 K ICDDRG,ICDDX,ICDPOA,ICDPDRG,ICDSEX,ICDSYS,ICDTMP,ICDY
"RTN","DGPTDRG",94,0)
 Q
"RTN","DGPTDRG",95,0)
DISP() ; -- Return value to display
"RTN","DGPTDRG",96,0)
 Q $S(DGTERMIN="10D":"(ICD 10)",DGTERMIN="ICD":"(ICD 9)",1:"")
"RTN","DGPTDRG",97,0)
 ;
"RTN","DGPTDRG",98,0)
 ;
"RTN","DGPTDRG",99,0)
EFFDATE ;prompts for effective date for DRG grouper?
"RTN","DGPTDRG",100,0)
 K DIR S DIR(0)="D^::AEX",DIR("B")="TODAY",DIR("A")="Effective Date"
"RTN","DGPTDRG",101,0)
 S DIR("?")="The effective to be used when calculating the DRG code for the patient."
"RTN","DGPTDRG",102,0)
 D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
"RTN","DGPTDRG",103,0)
 S DGDAT=Y
"RTN","DGPTDRG",104,0)
 D EFFDAT1^DGPTIC10(DGDAT)
"RTN","DGPTDRG",105,0)
 Q
"RTN","DGPTDRG",106,0)
 ;
"RTN","DGPTDRG",107,0)
INAC ;
"RTN","DGPTDRG",108,0)
 W !,*7,">>> You have selected an INACTIVE diagnosis code."
"RTN","DGPTDRG",109,0)
 W !,"    This code is not used by the grouper and may cause"
"RTN","DGPTDRG",110,0)
 W !,"    the case to be grouped into DRG 470 - UNGROUPABLE.",!
"RTN","DGPTDRG",111,0)
 W !,"    Therefore, this diagnosis code will NOT be passed"
"RTN","DGPTDRG",112,0)
 W !,"    to the grouper. Please enter another code."
"RTN","DGPTDRG",113,0)
 Q
"RTN","DGPTDRG",114,0)
 ;
"RTN","DGPTDRG",115,0)
ASKPOA(CNT) ; -- asks POA for each Diagnosis
"RTN","DGPTDRG",116,0)
 N X,Y,DIR,DUOUT,DTOUT,DIRUT,DIROUT,DGPOA
"RTN","DGPTDRG",117,0)
 S DIR(0)="45,82.01"
"RTN","DGPTDRG",118,0)
 S DIR("A")=$S(+$G(CNT)=0:"POA FOR PRINCIPAL diagnosis",1:"POA FOR SECONDARY diagnosis "_+$G(CNT))
"RTN","DGPTDRG",119,0)
 S DIR("B")="Y"
"RTN","DGPTDRG",120,0)
 D ^DIR K DIR
"RTN","DGPTDRG",121,0)
 S DGPOA=$$POA^DGPTFD(Y)
"RTN","DGPTDRG",122,0)
 Q DGPOA
"RTN","DGPTDRG",123,0)
 ;
"RTN","DGPTDRG",124,0)
OP() ; -- asks Operation Procedure code.
"RTN","DGPTDRG",125,0)
 N DIR,DUOUT,DTOUT,DIRUT,DIROUT,DGPOA,DA,DGI,PROMPT,TERM
"RTN","DGPTDRG",126,0)
 S TERM="PROC"
"RTN","DGPTDRG",127,0)
 W !
"RTN","DGPTDRG",128,0)
 I $G(DGDAT)="" S DGDAT=DT
"RTN","DGPTDRG",129,0)
 S DGI=1
"RTN","DGPTDRG",130,0)
 S PROMPT="Enter Operation/Procedure "_$$DISP()_": "
"RTN","DGPTDRG",131,0)
 S DGDRGDT=DGDAT
"RTN","DGPTDRG",132,0)
 F DGI=1:1:4 D PROC^DGPTFIC Q:$G(X)["^"!($G(X)="")  D
"RTN","DGPTDRG",133,0)
 . I +Y>0,($P(Y,U,10)'=0) S DGSURG=+Y_"^"_$G(DGSURG)
"RTN","DGPTDRG",134,0)
 . S:$P(Y,U,10)'=0 DGSURG(DGI)=$P(Y,U,2)_U_$P(Y,U,5)
"RTN","DGPTDRG",135,0)
 ; added next line for DG*5.3*441
"RTN","DGPTDRG",136,0)
 S DGSURG=U_$G(DGSURG)
"RTN","DGPTDRG",137,0)
 Q
"RTN","DGPTDRG",138,0)
NEWOUT ;
"RTN","DGPTDRG",139,0)
 D HOME^%ZIS
"RTN","DGPTDRG",140,0)
 S DGTMP=DGDX,DGDRGPRT=1,(DGPG,DGQ)=0,$P(DGLN,"=",81)="" D HDR
"RTN","DGPTDRG",141,0)
 D ^DGPTICD ;S DGDX=$P(DGDX,"^",2,99)_"^"_$P(DGDX,"^")
"RTN","DGPTDRG",142,0)
 W !!
"RTN","DGPTDRG",143,0)
 ;D CONT:$E(IOST,1,2)="C-"
"RTN","DGPTDRG",144,0)
Q2 K AGE,NAME,SEX,DGDMS,DGDRGPRT,DGDX,DGEXP,DGSURG,DGTRS,DGLN,DGPG,DGQ,DGTMP,DGX,DGPTODR,I,Y
"RTN","DGPTDRG",145,0)
 Q
"RTN","DGPTDRG",146,0)
 ;
"RTN","DGPTDRG",147,0)
HDR ;print heading
"RTN","DGPTDRG",148,0)
 S DGPG=$G(DGPG)+1 W @IOF,"DRG Calculation",?45,"Date: " S Y=DT X ^DD("DD") W Y,"  Page: ",DGPG,!!
"RTN","DGPTDRG",149,0)
 S Y=DGDAT D DD^%DT ; Y = external format of effective date
"RTN","DGPTDRG",150,0)
 W "Effective Date: ",Y,! I NAME]"" W "Patient: ",NAME,?40
"RTN","DGPTDRG",151,0)
 W "Sex: ",$S(SEX="M":"Male",1:"Female"),?61,"Age: ",AGE,!,"Expired: ",$S(DGEXP:"Yes",1:"No"),?18,"Transferred to Acute Care: ",$S(DGTRS:"Yes",1:"No"),?55,"Irreg D/C: ",$S(DGDMS:"Yes",1:"No")
"RTN","DGPTDRG",152,0)
 W !!,"Diagnosis Codes:"
"RTN","DGPTDRG",153,0)
 F I=0:0 S I=$O(DGDX(I)) Q:I'>0  W !,$J($P(DGDX(I),"^"),8),"  ",$P(DGDX(I),"^",2) I $G(DGDXPOA)'="" D
"RTN","DGPTDRG",154,0)
 . W:DGTERMIN="10D" "  (POA="_$P(DGDXPOA,"^",I)_")"
"RTN","DGPTDRG",155,0)
 ;
"RTN","DGPTDRG",156,0)
 I $D(DGSURG) W !!,"Operation/Procedure Codes:" F I=0:0 S I=$O(DGSURG(I)) Q:I'>0  W !,$J($P(DGSURG(I),"^"),8),"  ",$P(DGSURG(I),"^",2)
"RTN","DGPTDRG",157,0)
 Q
"RTN","DGPTDRG",158,0)
CONT I $Y+8>IOSL R !!?20,"Press <RET> to continue or ""^"" to EXIT ",DGQ:DTIME S:'$T DGQ="^" Q:DGQ["^"
"RTN","DGPTDRG",159,0)
 Q
"RTN","DGPTEXPR")
0^21^B41356547^B553154
"RTN","DGPTEXPR",1,0)
DGPTEXPR ;ALB/MTC - PTF Expanded Code List ;14 MAY 91
"RTN","DGPTEXPR",2,0)
 ;;5.3;Registration;**850**;Aug 13, 1993;Build 171
"RTN","DGPTEXPR",3,0)
 ;;MAS 5.1;
"RTN","DGPTEXPR",4,0)
 ;
"RTN","DGPTEXPR",5,0)
EN ; -- entry point for Expanded Code List (ICD-10 Remediation)
"RTN","DGPTEXPR",6,0)
 N CAT,CODE
"RTN","DGPTEXPR",7,0)
 D INIT G:DGOUT ENQ
"RTN","DGPTEXPR",8,0)
 W @IOF,!,"PTF Expanded Code List   "
"RTN","DGPTEXPR",9,0)
 ;
"RTN","DGPTEXPR",10,0)
 S PG=1,L="",DIC="^DIC(45.89,"
"RTN","DGPTEXPR",11,0)
 ;
"RTN","DGPTEXPR",12,0)
 D CODESET G:CODESET<1 ENQ
"RTN","DGPTEXPR",13,0)
 ;
"RTN","DGPTEXPR",14,0)
 S CAT("START")=$$STARTCAT(CODESET)
"RTN","DGPTEXPR",15,0)
 I $D(DTOUT)!($D(DUOUT))!($D(DIRUT))!($D(DIROUT))!(CAT("START")="") G ENQ
"RTN","DGPTEXPR",16,0)
 ;
"RTN","DGPTEXPR",17,0)
 S CAT("FINISH")=$$FINALCAT(CODESET,CAT("START"))
"RTN","DGPTEXPR",18,0)
 I $D(DTOUT)!($D(DUOUT))!($D(DIRUT))!($D(DIROUT))!(CAT("FINISH")="") G ENQ
"RTN","DGPTEXPR",19,0)
 ;
"RTN","DGPTEXPR",20,0)
 S CODE("START")=$$STARTCOD(CODESET)
"RTN","DGPTEXPR",21,0)
 I $D(DTOUT)!($D(DUOUT))!($D(DIRUT))!($D(DIROUT))!(CODE("START")="") G ENQ
"RTN","DGPTEXPR",22,0)
 ;
"RTN","DGPTEXPR",23,0)
 S CODE("FINISH")=$$FINALCOD(CODESET,CODE("START"))
"RTN","DGPTEXPR",24,0)
 I $D(DTOUT)!($D(DUOUT))!($D(DIRUT))!($D(DIROUT))!(CODE("FINISH")="") G ENQ
"RTN","DGPTEXPR",25,0)
 ;
"RTN","DGPTEXPR",26,0)
 S:CAT("START")="FIRST" CAT("START")=""
"RTN","DGPTEXPR",27,0)
 S:CAT("FINISH")="LAST" CAT("FINISH")=""
"RTN","DGPTEXPR",28,0)
 S:CODE("START")="FIRST" CODE("START")=""
"RTN","DGPTEXPR",29,0)
 S:CODE("FINISH")="LAST" CODE("FINISH")=""
"RTN","DGPTEXPR",30,0)
 ;
"RTN","DGPTEXPR",31,0)
 I CODESET=9 D
"RTN","DGPTEXPR",32,0)
 . S FLDS="[DGPT EXPANDED CODE LIST]"
"RTN","DGPTEXPR",33,0)
 . S BY="[DGPT EXPANDED CODE SORT ICD-9]"
"RTN","DGPTEXPR",34,0)
 . S FR="ICD-10-CM,"_CAT("START")_","_CODE("START")
"RTN","DGPTEXPR",35,0)
 . S TO="ICD-10-PCS,"_CAT("FINISH")_","_CODE("FINISH")
"RTN","DGPTEXPR",36,0)
 ;
"RTN","DGPTEXPR",37,0)
 I CODESET=10 D
"RTN","DGPTEXPR",38,0)
 . S FLDS="[DGPT EXPANDED CODE LIST-10]"
"RTN","DGPTEXPR",39,0)
 . S BY="[DGPT EXPANDED CODE SORT ICD-10]"
"RTN","DGPTEXPR",40,0)
 . S FR="ICD-9 PROC,"_CAT("START")_","_CODE("START")
"RTN","DGPTEXPR",41,0)
 . S TO="ICD-9-CM,"_CAT("FINISH")_","_CODE("FINISH")
"RTN","DGPTEXPR",42,0)
 ;
"RTN","DGPTEXPR",43,0)
 D EN1^DIP
"RTN","DGPTEXPR",44,0)
 ; 
"RTN","DGPTEXPR",45,0)
ENQ ; -- exit point
"RTN","DGPTEXPR",46,0)
 K X,Y,L,DIC,FLDS,BY,FR,PG,FROM,TO,DTOUT,DUOUT,DIRUT,DIROUT,LIST,VERSION,CODESET,DGOUT,DGQUIT,CAT,CODE
"RTN","DGPTEXPR",47,0)
 Q
"RTN","DGPTEXPR",48,0)
STARTCAT(CSET) ; -- Start Code Set
"RTN","DGPTEXPR",49,0)
 N X,Y,VAL,DIR
"RTN","DGPTEXPR",50,0)
 S VAL=""
"RTN","DGPTEXPR",51,0)
 S DIR("?",1)="Answer with PTF EXPANDED CODE CATEGORY NAME"
"RTN","DGPTEXPR",52,0)
 S DIR("?")="   Select FIRST to select all CATEGORY names"
"RTN","DGPTEXPR",53,0)
 S LIST="FI:FIRST;DI:DIALYSIS TYPE;KI:KIDNEY TRANSPLANT STATUS;LE:LEGIONNAIRE'S DISEASE;PS:PSYCHIATRY AXIS CLASSIFICATION;SUB:SUBSTANCE ABUSE;SUI:SUICIDE INDICATOR"
"RTN","DGPTEXPR",54,0)
 S DIR("A")="START WITH CATEGORY: "
"RTN","DGPTEXPR",55,0)
 S DIR("B")="FIRST"
"RTN","DGPTEXPR",56,0)
 S DIR(0)="SAO^"_LIST
"RTN","DGPTEXPR",57,0)
 D ^DIR
"RTN","DGPTEXPR",58,0)
 S VAL=$G(Y(0))
"RTN","DGPTEXPR",59,0)
 Q VAL
"RTN","DGPTEXPR",60,0)
 ;
"RTN","DGPTEXPR",61,0)
FINALCAT(CSET,STRT) ; -- Start Code Set
"RTN","DGPTEXPR",62,0)
 N X,Y,VAL,DIR
"RTN","DGPTEXPR",63,0)
 I STRT="FIRST" Q "LAST"
"RTN","DGPTEXPR",64,0)
 S VAL=""
"RTN","DGPTEXPR",65,0)
FC ; - Re-ask
"RTN","DGPTEXPR",66,0)
 S LIST="LA:LAST;DI:DIALYSIS TYPE;KI:KIDNEY TRANSPLANT STATUS;LE:LEGIONNAIRE'S DISEASE;PS:PSYCHIATRY AXIS CLASSIFICATION;SUB:SUBSTANCE ABUSE;SUI:SUICIDE INDICATOR"
"RTN","DGPTEXPR",67,0)
 S DIR("?",1)="Answer with PTF EXPANDED CODE CATEGORY NAME"
"RTN","DGPTEXPR",68,0)
 S DIR("?")="   Select LAST to select all CATEGORY names after "_STRT
"RTN","DGPTEXPR",69,0)
 S DIR("A")="GO TO CATEGORY: "
"RTN","DGPTEXPR",70,0)
 S DIR("B")="LAST"
"RTN","DGPTEXPR",71,0)
 S DIR(0)="SAO^"_LIST
"RTN","DGPTEXPR",72,0)
 D ^DIR
"RTN","DGPTEXPR",73,0)
 S VAL=$G(Y(0))
"RTN","DGPTEXPR",74,0)
 I VAL'="LAST",(VAL'=STRT),(VAL']STRT) W !,"Go To value must equal or follow the Start With value",*7,! G FC
"RTN","DGPTEXPR",75,0)
 Q VAL
"RTN","DGPTEXPR",76,0)
 ;
"RTN","DGPTEXPR",77,0)
STARTCOD(CSET) ; -- Start Code Set
"RTN","DGPTEXPR",78,0)
 N VAL,D,DIC,DIR,DGX1,DGX2,REASK,VP
"RTN","DGPTEXPR",79,0)
 S VAL=""
"RTN","DGPTEXPR",80,0)
R1 ;
"RTN","DGPTEXPR",81,0)
 R !,"   START WITH DIAGNOSIS/PROCEDURE CODE: FIRST// ",Y:DTIME S:'$T Y="^",DTOUT=""
"RTN","DGPTEXPR",82,0)
 I Y="?" D HELP1 G R1
"RTN","DGPTEXPR",83,0)
 I Y["??" D HELP1,LIST(CSET,.CAT) G R1
"RTN","DGPTEXPR",84,0)
 I Y="" S Y="FIRST"
"RTN","DGPTEXPR",85,0)
 ;
"RTN","DGPTEXPR",86,0)
 I $D(DTOUT)!($D(DUOUT))!($D(DIRUT))!($D(DIROUT)) Q "-1"
"RTN","DGPTEXPR",87,0)
 I $G(Y)="FIRST" Q Y
"RTN","DGPTEXPR",88,0)
 ;
"RTN","DGPTEXPR",89,0)
 S X=$G(Y)
"RTN","DGPTEXPR",90,0)
SC ; Re-ask
"RTN","DGPTEXPR",91,0)
 S DIC("A")="   START WITH DIAGNOSIS/PROCEDURE CODE: "
"RTN","DGPTEXPR",92,0)
 S DIC="^DIC(45.89,"
"RTN","DGPTEXPR",93,0)
 S DIC(0)=$S($G(REASK):"AEQZ",1:"EQZ")
"RTN","DGPTEXPR",94,0)
 S DGX1=$S(CSET=9:1,1:30)
"RTN","DGPTEXPR",95,0)
 S DGX2=$S(CSET=9:2,1:31)
"RTN","DGPTEXPR",96,0)
 S DIC("S")="I $P(^(0),U,5)="_DGX1_"!($P(^(0),U,5)="_DGX2_")"
"RTN","DGPTEXPR",97,0)
 S D="ACODE"
"RTN","DGPTEXPR",98,0)
 D IX^DIC
"RTN","DGPTEXPR",99,0)
 I $D(DTOUT)!($D(DUOUT)) Q ""
"RTN","DGPTEXPR",100,0)
 I Y<1 K X S REASK=1 G SC
"RTN","DGPTEXPR",101,0)
 S VP=$P($G(^DIC(45.89,+Y,0)),U,2)
"RTN","DGPTEXPR",102,0)
 S VAL=$$CODEC^ICDEX($S(VP["ICD9":80,VP["ICD0":80.1,1:80),+VP)
"RTN","DGPTEXPR",103,0)
 Q VAL
"RTN","DGPTEXPR",104,0)
 ;
"RTN","DGPTEXPR",105,0)
FINALCOD(CSET,STRT) ; -- Start Code Set
"RTN","DGPTEXPR",106,0)
 N VAL,D,DIC,DIR,DGX1,DGX2,REASK,VP
"RTN","DGPTEXPR",107,0)
 I STRT="FIRST" Q "LAST"
"RTN","DGPTEXPR",108,0)
 S VAL=""
"RTN","DGPTEXPR",109,0)
 ;
"RTN","DGPTEXPR",110,0)
R2 ;
"RTN","DGPTEXPR",111,0)
 R !,"   GO TO DIAGNOSIS/PROCEDURE CODE: LAST// ",Y:DTIME S:'$T Y="^",DTOUT=""
"RTN","DGPTEXPR",112,0)
 I Y="?" D HELP1 G R2
"RTN","DGPTEXPR",113,0)
 I Y["??" D HELP1,LIST(CSET,.CAT) G R2
"RTN","DGPTEXPR",114,0)
 I Y="" S Y="LAST"
"RTN","DGPTEXPR",115,0)
 ;
"RTN","DGPTEXPR",116,0)
 I $D(DTOUT)!($D(DUOUT))!($D(DIRUT))!($D(DIROUT)) Q "-1"
"RTN","DGPTEXPR",117,0)
 I $G(Y)="LAST" Q Y
"RTN","DGPTEXPR",118,0)
 ;
"RTN","DGPTEXPR",119,0)
 S X=$G(Y)
"RTN","DGPTEXPR",120,0)
FCCC ; Re-ask
"RTN","DGPTEXPR",121,0)
 S DIC("A")="   GO TO DIAGNOSIS/PROCEDURE CODE: "
"RTN","DGPTEXPR",122,0)
 S DIC="^DIC(45.89,"
"RTN","DGPTEXPR",123,0)
 S DIC(0)=$S($G(REASK):"AEQZ",1:"EQZ")
"RTN","DGPTEXPR",124,0)
 S DGX1=$S(CSET=9:1,1:30)
"RTN","DGPTEXPR",125,0)
 S DGX2=$S(CSET=9:2,1:31)
"RTN","DGPTEXPR",126,0)
 S DIC("S")="I $P(^(0),U,5)="_DGX1_"!($P(^(0),U,5)="_DGX2_")"
"RTN","DGPTEXPR",127,0)
 S D="ACODE"
"RTN","DGPTEXPR",128,0)
 D IX^DIC
"RTN","DGPTEXPR",129,0)
 I $D(DTOUT)!($D(DUOUT)) Q ""
"RTN","DGPTEXPR",130,0)
 I Y<1 K X S REASK=1 G FCCC
"RTN","DGPTEXPR",131,0)
 S VP=$P($G(^DIC(45.89,+Y,0)),U,2)
"RTN","DGPTEXPR",132,0)
 S VAL=$$CODEC^ICDEX($S(VP["ICD9":80,VP["ICD0":80.1,1:80),+VP)
"RTN","DGPTEXPR",133,0)
 I VAL'="LAST",(VAL'=STRT),(VAL']STRT) W !,"Go To value must equal or follow the Start With value",*7,! K X S REASK=1 G FCCC
"RTN","DGPTEXPR",134,0)
 Q VAL
"RTN","DGPTEXPR",135,0)
 ;
"RTN","DGPTEXPR",136,0)
INIT ;
"RTN","DGPTEXPR",137,0)
 S DGOUT=0
"RTN","DGPTEXPR",138,0)
 D LO^DGUTL,HOME^%ZIS
"RTN","DGPTEXPR",139,0)
 Q
"RTN","DGPTEXPR",140,0)
 ;
"RTN","DGPTEXPR",141,0)
CODESET ; -ask which codeset
"RTN","DGPTEXPR",142,0)
 ;Select ICD Code Set (9,10):
"RTN","DGPTEXPR",143,0)
 N DIR,X,Y,IMPDATE,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","DGPTEXPR",144,0)
 S IMPDATE=$P($$IMPDATE^DGPTIC10("10D"),U,1)
"RTN","DGPTEXPR",145,0)
 ;
"RTN","DGPTEXPR",146,0)
 S DIR(0)="SA^9:ICD-9;10:ICD-10"
"RTN","DGPTEXPR",147,0)
 S DIR("A")="Select ICD Code Set (9,10): "
"RTN","DGPTEXPR",148,0)
 S DIR("B")=$S(DT<IMPDATE:9,1:10)
"RTN","DGPTEXPR",149,0)
 S DIR("L")=""
"RTN","DGPTEXPR",150,0)
 D ^DIR
"RTN","DGPTEXPR",151,0)
 I $D(DTOUT)!$D(DUOUT)!$D(DIRUT)!$D(DIROUT) S Y=-1
"RTN","DGPTEXPR",152,0)
 S CODESET=Y
"RTN","DGPTEXPR",153,0)
 Q
"RTN","DGPTEXPR",154,0)
 ;
"RTN","DGPTEXPR",155,0)
HELP1 ; -- Code help text
"RTN","DGPTEXPR",156,0)
 W !!,"TO  IN SEQUENCE, STARTING FROM A CERTAIN DIAGNOSIS/PROCEDURE CODE, "
"RTN","DGPTEXPR",157,0)
 W !,"     TYPE THAT DIAGNOSIS/PROCEDURE CODE"
"RTN","DGPTEXPR",158,0)
 W !,"     OR ENTER '@' TO INCLUDE NULL DIAGNOSIS/PROCEDURE CODE VALUES"
"RTN","DGPTEXPR",159,0)
 W !,"    OR ENTER 'FIRST' TO START FROM THE FIRST VALUE"
"RTN","DGPTEXPR",160,0)
 Q
"RTN","DGPTEXPR",161,0)
 ;
"RTN","DGPTEXPR",162,0)
LIST(CSET,CAT) ; -- List available codes
"RTN","DGPTEXPR",163,0)
 N I,J,ZZ,ENTRY,IEN,VESION,CNT,DGQUIT,STRT,FNSH,IENCAT,OK
"RTN","DGPTEXPR",164,0)
 W !,"   Choose from:",!
"RTN","DGPTEXPR",165,0)
 S ENTRY="",CNT=1
"RTN","DGPTEXPR",166,0)
 S STRT=$G(CAT("START")),FNSH=$G(CAT("FINISH"))
"RTN","DGPTEXPR",167,0)
 I STRT="FIRST" S STRT="A"
"RTN","DGPTEXPR",168,0)
 I FNSH="LAST" S FNSH="ZZZ"
"RTN","DGPTEXPR",169,0)
 F I=0:0 S ENTRY=$O(^DIC(45.89,"ACODE",ENTRY)) Q:ENTRY=""!($D(DGQUIT))  D
"RTN","DGPTEXPR",170,0)
 . S IEN=0
"RTN","DGPTEXPR",171,0)
 . F J=0:0 S IEN=$O(^DIC(45.89,"ACODE",ENTRY,IEN)) Q:IEN=""!($D(DGQUIT))  D
"RTN","DGPTEXPR",172,0)
 .. S IENCAT=$P($G(^DIC(45.88,+$P($G(^DIC(45.89,IEN,0)),U,1),0)),U,1)
"RTN","DGPTEXPR",173,0)
 .. S VERSION=$P($G(^DIC(45.89,IEN,0)),U,5)
"RTN","DGPTEXPR",174,0)
 .. S OK=0 I (IENCAT=STRT)!(IENCAT=FNSH) S OK=1
"RTN","DGPTEXPR",175,0)
 .. I 'OK&((IENCAT']STRT)!(IENCAT]FNSH)) Q
"RTN","DGPTEXPR",176,0)
 .. ;
"RTN","DGPTEXPR",177,0)
 .. I CSET=9 I (VERSION=1)!(VERSION=2) W ?3,ENTRY,?15,IENCAT,! S CNT=CNT+1
"RTN","DGPTEXPR",178,0)
 .. I CSET=10 I (VERSION=30)!(VERSION=31) W ?3,ENTRY,?15,IENCAT,! S CNT=CNT+1
"RTN","DGPTEXPR",179,0)
 .. I '(CNT#18) R "   '^' TO STOP: ",ZZ:$G(DTIME,300) S:'$T DGQUIT=1 S:ZZ["^" DGQUIT=1 W:ZZ="" $C(13),$J("",15),$C(13)
"RTN","DGPTEXPR",180,0)
 .. Q
"RTN","DGPTEXPR",181,0)
 Q
"RTN","DGPTF")
0^74^B23028941^B21709372
"RTN","DGPTF",1,0)
DGPTF ;ALB/JDS/AS - PTF LOAD/EDIT DRIVER ;5/17/05 12:13pm
"RTN","DGPTF",2,0)
 ;;5.3;Registration;**26,58,164,195,397,565,664,850**;Aug 13, 1993;Build 171
"RTN","DGPTF",3,0)
 ;
"RTN","DGPTF",4,0)
 D LO^DGUTL
"RTN","DGPTF",5,0)
 I $D(^DISV(DUZ,"^DPT(")),$D(^("^DGPT(")) S A=+^("^DGPT("),B=+^("^DPT(") I $D(^DGPT(A,0)),$D(^DPT(B,0)) S:(+^DGPT(A,0)'=B&$D(^DGPT("B",B))) ^DISV(DUZ,"^DGPT(")=""
"RTN","DGPTF",6,0)
 ;
"RTN","DGPTF",7,0)
ASK W !! K DIC S DIC="^DGPT(",DIC(0)="EQMZA",DGPR=0,DIC("S")="I '$P(^DGPT(+Y,0),U,6)!($P(^(0),U,6)=1),$P(^(0),U,11)=1"
"RTN","DGPTF",8,0)
 ;DG*5.3*861 Added DGRELKEY variable to hold the value for DGREL that is killed in ^EASECU21
"RTN","DGPTF",9,0)
 N DGRELKEY D ^DIC G Q1:Y'>0 S PTF=+Y,(DGRELKEY,DGREL)=$S($D(^XUSEC("DG PTFREL",DUZ)):1,1:0)
"RTN","DGPTF",10,0)
 I '$D(^DGPT(PTF,"M",0))#2 S ^(0)="^45.02^^"
"RTN","DGPTF",11,0)
 K DIC S DFN=+Y(0),DGADM=+$P(Y(0),U,2),^DISV(DUZ,"^DPT(")=DFN,DGST=+$P(Y(0),U,6)
"RTN","DGPTF",12,0)
 N DGPMCA,DGPMAN D PM^DGPTUTL
"RTN","DGPTF",13,0)
 D:DGST=0 MT^DGPTUTL,INCOME^DGPTUTL1
"RTN","DGPTF",14,0)
 I DGST I 'DGREL!($D(DGQWK))!(DGST>1) W:$X>60 "   ???--Already ",$S(DGST=1:"Closed",DGST=2:"Released",1:"Transmitted") G ASK
"RTN","DGPTF",15,0)
 ;
"RTN","DGPTF",16,0)
EN1 ;
"RTN","DGPTF",17,0)
 K DGPTFE S DGPTFE=$P(^DGPT(PTF,0),"^",4)
"RTN","DGPTF",18,0)
 I 'DGPTFE,'DGST G UP:$P(DGPMAN,"^",16)'=PTF D:'$P(^DGPT(PTF,0),"^",5) SUF D LE^DGPTTS,DC
"RTN","DGPTF",19,0)
 I $D(DGQWK) D ^DGPTFQWK,Q1 S DGQWK=1 G DGPTF
"RTN","DGPTF",20,0)
 ;
"RTN","DGPTF",21,0)
GETD ;
"RTN","DGPTF",22,0)
 K A
"RTN","DGPTF",23,0)
 I $P(^DGPT(PTF,0),U,11)=1 D CEN^DGPTC1
"RTN","DGPTF",24,0)
 F I=0,.521,.11,.52,.321,.32,57,.3 S A(I)="" S:$D(^DPT(DFN,I))&('DGST) A(I)=^(I) I DGST S:$D(^DGP(45.84,PTF,$S('I:10,1:I))) A(I)=^($S('I:10,1:I))
"RTN","DGPTF",25,0)
 S A("MST")=$P($$GETSTAT^DGMSTAPI(DFN),U,2,5)
"RTN","DGPTF",26,0)
 K DGNTARR
"RTN","DGPTF",27,0)
 S A("NTR")=$S($$GETCUR^DGNTAPI(DFN,"DGNTARR")>0:DGNTARR("INTRP"),1:"")
"RTN","DGPTF",28,0)
 K DGNTARR
"RTN","DGPTF",29,0)
 K B F I=0,101,70 S B(I)="" S:$D(^DGPT(PTF,I)) B(I)=^(I)
"RTN","DGPTF",30,0)
 S A("CV")=$$CVEDT^DGCV(DFN,$P($G(B(0)),U,2))
"RTN","DGPTF",31,0)
 S A("SHAD")=$$GETSHAD^DGUTL3(DFN)
"RTN","DGPTF",32,0)
 S DGDD=+B(70),DGFC=+$P(B(0),U,3)
"RTN","DGPTF",33,0)
 S Y=DGDD D FMT^DGPTUTL
"RTN","DGPTF",34,0)
 S Y=DGADM D D^DGPTUTL S DGAD=Y,HEAD="Name: "_$P(A(0),U,1)_"  SSN: "_$P(A(0),U,9)_" Dt of Adm: "_DGAD
"RTN","DGPTF",35,0)
 S DGN=$S(DGST!DGPR:1,1:0)
"RTN","DGPTF",36,0)
 I DGPR S (DGST,DGPTFE)=1 G FAC^DGPTF1
"RTN","DGPTF",37,0)
 I DGPTFE,'DGST K DR S DIE="^DGPT(",DA=PTF,DR="2" D ^DIE K DR G Q:$D(Y) S DGADM=$P(^DGPT(PTF,0),U,2),^DISV(DUZ,"PTFAD",DFN)=DGADM,Y=DGADM D D^DGPTUTL S HEAD=$P(HEAD,DGAD,1)_Y
"RTN","DGPTF",38,0)
 G ^DGPTF1
"RTN","DGPTF",39,0)
 ;
"RTN","DGPTF",40,0)
Q I '$P(^DGPT(PTF,0),"^",4),'$P(^(0),U,6) W !,"  Updating TRANSFER DRGs" S DGADM=$P(^DGPT(PTF,0),U,2) D SUDO1^DGPTSUDO
"RTN","DGPTF",41,0)
 D Q1
"RTN","DGPTF",42,0)
 I $D(DGADPR)!($D(DGPTOUT)) K DGPTOUT Q
"RTN","DGPTF",43,0)
 G DGPTF
"RTN","DGPTF",44,0)
 ;
"RTN","DGPTF",45,0)
Q1 ; -- housekeeping
"RTN","DGPTF",46,0)
 I $D(IOM) S X=IOM X ^%ZOSF("RM")
"RTN","DGPTF",47,0)
 D KVAR^DGPTUTL1,KVAR^DGPTC1 K SDCLY
"RTN","DGPTF",48,0)
 Q
"RTN","DGPTF",49,0)
 ;
"RTN","DGPTF",50,0)
SUF I $D(^DIC(42,+$P(DGPMAN,U,6),0)) S DGX=$P(^(0),U,3) D
"RTN","DGPTF",51,0)
 .S DGX=$S(DGX="":"",DGX="D":"D NUMACT^DGPTSUF(30)",DGX="NH":"D NUMACT^DGPTSUF(40)",1:"")
"RTN","DGPTF",52,0)
 .Q:DGX=""
"RTN","DGPTF",53,0)
 .X DGX Q:DGANUM'=1
"RTN","DGPTF",54,0)
 .N DGFDA,DGMSG
"RTN","DGPTF",55,0)
 .S DGFDA(45,PTF_",",5)=DGSUFNAM(DGANUM)
"RTN","DGPTF",56,0)
 .D FILE^DIE("","DGFDA","DGMSG")
"RTN","DGPTF",57,0)
 K DGANUM,DGSUFNAM,DGX
"RTN","DGPTF",58,0)
 Q
"RTN","DGPTF",59,0)
ORDER ; -- order mvt ; I1 := #mvts+1 ; M() := mvt array
"RTN","DGPTF",60,0)
 N DGRT S DGRT=$S(I1<25:"MT",1:"^UTILITY(""DGPTMT"",$J)") K @DGRT
"RTN","DGPTF",61,0)
 N DGRT82 S DGRT82=$S(I1<25:"MT82",1:"^UTILITY(""DGPTMT82"",$J)") K @DGRT82
"RTN","DGPTF",62,0)
 F I=0:0 S I=$O(M(I)) Q:'I  D
"RTN","DGPTF",63,0)
 . S NU=+$P(M(I),U,10),NU=$S('NU:9999999+I,1:NU)
"RTN","DGPTF",64,0)
 . S NU=$S($D(@DGRT@(NU)):NU+(I*.1),1:NU) S @DGRT@(NU,I)=M(I),@DGRT82@(NU,I)=$G(M(I,82))
"RTN","DGPTF",65,0)
 S K=0 F I=0:0 S I=$O(@DGRT@(I)) Q:'I  D
"RTN","DGPTF",66,0)
 . S K=K+1,J=$O(@DGRT@(I,0)) S M(K)=@DGRT@(I,J),M(K,82)=@DGRT82@(I,J)
"RTN","DGPTF",67,0)
 K @DGRT Q
"RTN","DGPTF",68,0)
 ;
"RTN","DGPTF",69,0)
ADM S DFN=+^DGPT(DA,0),%=$O(^("M","AM",0)) I %<X&(%>0) K X W !,"Not after first movement"
"RTN","DGPTF",70,0)
 Q:'$D(X)  I $D(^DGPT("AAD",DFN,X))&($P(^DGPT(DA,0),U,2)'=X) K X W !,"There is already a PTF entry at that time"
"RTN","DGPTF",71,0)
 Q
"RTN","DGPTF",72,0)
 ;
"RTN","DGPTF",73,0)
WR ;Called from ^DD(45,0,"ID","WR")
"RTN","DGPTF",74,0)
 Q:'$D(^DGPT(+$G(Y),0))  S DGNODE=^(0),DGADM=$P(DGNODE,U,2) W "  Admitted: ",$TR($$FMTE^XLFDT(DGADM,"5DF")," ","0")," "
"RTN","DGPTF",75,0)
 ; uses new FMTE parameter for XLFDT, Y2K in line WR
"RTN","DGPTF",76,0)
 ;
"RTN","DGPTF",77,0)
 F DGZ=6,4 S %=";"_$S($D(^DD(45,DGZ,0)):$P(^(0),U,3),1:"") W $P($P(%,";"_$P(DGNODE,U,DGZ)_":",2),";",1)_" "
"RTN","DGPTF",78,0)
 K DGNODE,DGZ Q
"RTN","DGPTF",79,0)
 ;
"RTN","DGPTF",80,0)
DC S DGPDN=$S($D(^DGPM(+$P(DGPMAN,"^",17),0)):^(0),1:"")
"RTN","DGPTF",81,0)
 S DGDC=+DGPDN,DG72=$S($D(^DG(405.2,+$P(DGPDN,"^",18),0)):$P(^(0),"^",8),1:0),DGTY=$S(DGDC:1,1:"")
"RTN","DGPTF",82,0)
 I DGDC F I=0:0 S I=$O(^DGPM("APMV",DFN,DGPMCA,I)) Q:I'>0  I $D(^DGPM(+$O(^(I,0)),0)),$P(^(0),"^",2)=2 S J=U_$P(^(0),"^",18)_U,DGTY=$S("^43^44^13^45^"[J:4,"^1^"[J:2,"^2^3^"[J:3,1:1) Q
"RTN","DGPTF",83,0)
 S X=$S($D(^DGPT(PTF,70)):^(70),1:"")
"RTN","DGPTF",84,0)
 S DR="70///"_$S(DGDC:"/"_DGDC,'X:"",1:"@")_$S(DG72:";72////"_DG72,1:"")_";72.1///"_$S(DGTY:"/"_DGTY,'$P(X,"^",14):"",1:"@"),DIE="^DGPT(",DA=PTF D ^DIE
"RTN","DGPTF",85,0)
 I DGDC>DT,$P(DGPDN,"^",18)=42 W:'$D(ZTQUEUED) !,"Discharge 'While ASIH' is in the future."
"RTN","DGPTF",86,0)
 K DG72,DGTY,DGPDN Q
"RTN","DGPTF",87,0)
 ;
"RTN","DGPTF",88,0)
UP S DIE="^DGPT(",DR="4///F",DA=PTF D ^DIE W !,"Pointer from Patient file is incorrect. Record changed to Fee Basis",! S DGPTFE=1 G GETD
"RTN","DGPTF2")
0^78^B17166598^B16869075
"RTN","DGPTF2",1,0)
DGPTF2 ;ALB/JDS - PTF CORRECTIONS ;MAR 16, 2005
"RTN","DGPTF2",2,0)
 ;;5.3;Registration;**37,342,643,861,850**;Aug 13, 1993;Build 171
"RTN","DGPTF2",3,0)
EN Q:'$D(^UTILITY("DG",$J))  S Q=0,DG2=""
"RTN","DGPTF2",4,0)
 F DG9=101,401,501,701,601,"HEADER" D @DG9 F I1=0:0 S I1=$O(^UTILITY("DG",$J,DG9,I1)) Q:I1'>0!(Q)  S DG45="",DGJ=^(I1) F J=2:1 S K=$P(DGJ,U,J) Q:'K  D SET Q:Q  I '$P(DGJ,U,J+1) D @($S(DG9=401!(DG9=501)!(DG9=601):"D5",1:"DO1")) Q:Q
"RTN","DGPTF2",5,0)
Q D DO:'Q K DG9,I1,DR,DG45,DG2,DGJ,Q,M,L,^UTILITY("DG",$J) Q
"RTN","DGPTF2",6,0)
SET S L=$P(DGL,U,K) I DGPTFE!('$P(L,"*",3)) S M="DG"_$P(L,"*",2) I @M'[($P(L,"*",1)_";") S @M=@M_$P(L,"*",1)_";"
"RTN","DGPTF2",7,0)
 Q
"RTN","DGPTF2",8,0)
 ; -- DGL sets
"RTN","DGPTF2",9,0)
101 I DGPTFMT<2 S DGL=".01*2^20*45^21.1;21.2*45^22*45^.526*2^.05*2^.02*2^.03*2^23*45^.32103;.32102;.3212*2^.115;.117;.1112*2^10*45"
"RTN","DGPTF2",10,0)
 I DGPTFMT>1 S DGL=".01*2^20*45^21.1;21.2*45^22*45^.526*2^.05*2^.02*2^.03*2^.323*2^.32101;.32103;.3212;.32102;.3213*2^.115;.117;.1112*2^10*45"
"RTN","DGPTF2",11,0)
 Q
"RTN","DGPTF2",12,0)
701 S DGL="70*45*1^71*45*1^72*45*1^73*45^74*45^75*45^76.1;76.2*45^77*45^.06*2^78*45^79*45"
"RTN","DGPTF2",13,0)
 Q
"RTN","DGPTF2",14,0)
401 S DGL=".01*45^3*45^4*45^5*45^6*45^7*45^8:12*45"
"RTN","DGPTF2",15,0)
 Q
"RTN","DGPTF2",16,0)
501 I DGPTFMT<2 S DGL="10*45*1^2*45*1^3*45^4*45^57.4*2^5:9*45^72.1*45*1"
"RTN","DGPTF2",17,0)
 I DGPTFMT>1 S DGL="10*45*1^2*45*1^2*45*1^3*45^4*45^57.4*2^5:9*45^^^^72.1*45*1"
"RTN","DGPTF2",18,0)
 Q
"RTN","DGPTF2",19,0)
601 S DGL=".01*45^1*45^^^4:9*45"
"RTN","DGPTF2",20,0)
 Q
"RTN","DGPTF2",21,0)
HEADER S DGL=".09*2^2*45*1^3*45*1"
"RTN","DGPTF2",22,0)
 Q
"RTN","DGPTF2",23,0)
 ;
"RTN","DGPTF2",24,0)
DO I DG2]"" W !!,"Editing patient information:" S DIE="^DPT(",DR=DG2,DA=+^DGPT(PTF,0) D ^DIE
"RTN","DGPTF2",25,0)
 W !!,"Exiting the correction process." H 2
"RTN","DGPTF2",26,0)
 Q
"RTN","DGPTF2",27,0)
DO1 I DG45]"" W !!,"Editing PTF information:" S DIE="^DGPT(",DR=DG45,DA=PTF D DIE
"RTN","DGPTF2",28,0)
 Q
"RTN","DGPTF2",29,0)
D5 G D5Q:DG45=""
"RTN","DGPTF2",30,0)
 S DIE="^DGPT(PTF,"_$S(DG9=601:"""P""",DG9=401:"""S""",1:"""M""")_",",DA(1)=PTF,DA=I1,DR=DG45
"RTN","DGPTF2",31,0)
 I $G(@(DIE_DA_",0)"))="" G D5Q
"RTN","DGPTF2",32,0)
 S Y=$G(@(DIE_DA_",0)")),Y=$P(Y,U,$S(DG9=601!(DG9=401):1,1:10)) D D^DGPTUTL
"RTN","DGPTF2",33,0)
 W !!,"Editing ",$S(DG9=601:"Procedure",DG9=401:"Surgery",1:"Movement")," of ",Y D DIE
"RTN","DGPTF2",34,0)
D5Q Q
"RTN","DGPTF2",35,0)
 ;
"RTN","DGPTF2",36,0)
DIE D ^DIE
"RTN","DGPTF2",37,0)
D Q:'$D(Y)
"RTN","DGPTF2",38,0)
D1 K DR W !,"Do you want to stop correcting" S %=1 D YN^DICN
"RTN","DGPTF2",39,0)
 I %=1!(%=-1) S Q=1 Q
"RTN","DGPTF2",40,0)
 I %=0 W !?10,"Enter 'YES' or '^' to stop making corrections",!?10,"and   'NO'         to continue making corrections" G D1
"RTN","DGPTF2",41,0)
 Q
"RTN","DGPTF2",42,0)
PRINT W !,"Want to print error log " S %=2 D YN^DICN G PRINT:%'>0 Q:%=2
"RTN","DGPTF2",43,0)
 K IOP D ^%ZIS Q:IO']""  S Y=DT X ^DD("DD") W @IOF W !!,"Error log for PTF record ",PTF,"  "_$P(^DPT(DFN,0),U,1)_"  ",Y,!! S DGERR=-1,J=PTF D LOG^DGPTFTR D ^%ZISC
"RTN","DGPTF2",44,0)
 S IOP="" D ^%ZIS K IOP I $L(DGVO_DGVI)>4 S X=132 X ^%ZOSF("RM")
"RTN","DGPTF2",45,0)
 Q
"RTN","DGPTF2",46,0)
CLS I $D(^DGM("PT",DFN)) W !!,"Not all messages have been cleared up for this patient--cannot close.",*7,*7 S DGPTF=DFN,X="??" K DGALL D HELP^DGPTMSGD K DGPTF G EN1:'$D(DGALL) K DGALL
"RTN","DGPTF2",47,0)
 W !,"Performing edit checks..."
"RTN","DGPTF2",48,0)
 ;-- init for Austin Edits
"RTN","DGPTF2",49,0)
 K ^TMP("AEDIT",$J),^TMP("AERROR",$J) S DGACNT=0
"RTN","DGPTF2",50,0)
 ;
"RTN","DGPTF2",51,0)
 S Y=1 D RTY^DGPTUTL
"RTN","DGPTF2",52,0)
 S J=PTF,DGERR=-1 D LOG^DGPTFTR K DGLOGIC D LO^DGUTL K T1,T2 I DGERR>0 K DGERR H 4 D DGPTF2 G EN1
"RTN","DGPTF2",53,0)
 ;
"RTN","DGPTF2",54,0)
 ;-- new Austin edit checks
"RTN","DGPTF2",55,0)
 D ^DGPTAE I DGERR>0 K DGERR D DGPTF2 G EN1
"RTN","DGPTF2",56,0)
 ;
"RTN","DGPTF2",57,0)
 K DGERR S DR=$S($P(^DGPT(PTF,0),U,7):"",1:";7////"_DUZ_";8///T"),DA=PTF,DIE="^DGPT(",DP=45 D ^DIE K DR
"RTN","DGPTF2",58,0)
 S DIC(0)="LN",(DINUM,X)=PTF,DIC="^DGP(45.84," K DD,DO D FILE^DICN K DINUM,DO,DIC
"RTN","DGPTF2",59,0)
 I Y>0 S DA=+Y,DR="2///NOW;3////"_DUZ,DIE="^DGP(45.84," D ^DIE K DR
"RTN","DGPTF2",60,0)
 K DIE,DIC
"RTN","DGPTF2",61,0)
 I '$D(^DGP(45.84,PTF)) W !,"Cannot close without proper fileman access",*7 D HANG^DGPTUTL G EN1
"RTN","DGPTF2",62,0)
 F I=0,.11,.52,.321,.32,.36,57,.3 S:$D(^DPT(DFN,I)) ^DGP(45.84,PTF,$S(I=0:10,1:I))=^DPT(DFN,I)
"RTN","DGPTF2",63,0)
 S $P(^DGP(45.84,PTF,0),U,6)=DRG
"RTN","DGPTF2",64,0)
 W !,"****** PTF CLOSED OUT ******" D HANG^DGPTUTL
"RTN","DGPTF2",65,0)
 ;DG*5.3*861 Added DGRELKEY variable to hold the value for DGREL that is killed in ^EASECU21
"RTN","DGPTF2",66,0)
 I '$G(DGREL) S DGREL=$S($D(^XUSEC("DG PTFREL",DUZ)):1,1:0)
"RTN","DGPTF2",67,0)
 I $G(DGREL) S (DGN,DGST)=1 G EN1
"RTN","DGPTF2",68,0)
 K DGRTY,DGRTY0 G Q^DGPTF
"RTN","DGPTF2",69,0)
EN1 K DGRTY,DGRTY0 G EN1^DGPTF4
"RTN","DGPTF4")
0^8^B30195949^B24206467
"RTN","DGPTF4",1,0)
DGPTF4 ;ALB/JDS - PTF ENTRY/EDIT-4 ;2/19/04 9:33am
"RTN","DGPTF4",2,0)
 ;;5.3;Registration;**114,115,397,510,517,478,683,775,850**;Aug 13, 1993;Build 171
"RTN","DGPTF4",3,0)
 ;
"RTN","DGPTF4",4,0)
WR ;
"RTN","DGPTF4",5,0)
 W @IOF,HEAD,?72 S Z="<701>" D Z^DGPTFM K X S $P(X,"-",81)="" W !,X
"RTN","DGPTF4",6,0)
 Q
"RTN","DGPTF4",7,0)
EN S Y=+B(70) D D^DGPTUTL W ! S Z=5 D Z W $S($P(B(0),U,11)=1:"Date of Disch: ",1:"Census Date  : ") S Z=Y,Z1=20 D Z1 W "Disch Specialty: ",$S($D(^DIC(42.4,+$P(B(70),U,2),0)):$E($P(^(0),U,1),1,25),1:"")
"RTN","DGPTF4",8,0)
 W !,"   Type of Disch: " S L=";"_$P(^DD(45,72,0),U,3),L1=";"_$P(B(70),U,3)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTF4",9,0)
 W ?41 S L=";"_$P(^DD(45,72.1,0),U,3),L1=";"_$P(B(70),U,14)_":" W "Disch Status: ",$P($P(L,L1,2),";",1)
"RTN","DGPTF4",10,0)
 W !,"   Place of Disp: ",$S($D(^DIC(45.6,+$P(B(70),U,6),0)):$E($P(^(0),U,1),1,21),1:"")
"RTN","DGPTF4",11,0)
 W ?40 S Z=6 D Z W " Out Treat: ",$P("YES^^NO",U,+$P(B(70),U,4))
"RTN","DGPTF4",12,0)
 W !?6,"Means Test: " S L=";"_$P(^DD(45,10,0),U,3),L1=";"_$P(B(0),U,10)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTF4",13,0)
 W ?42,"VA Auspices: ",$S($P(B(70),U,5)=1:"YES",$P(B(70),U,5)=2:"NO",1:"")
"RTN","DGPTF4",14,0)
 W ! S Z=7 D Z W " Receiv facil: " S Z=$P(B(70),U,12)_$P(B(70),U,13),Z1=18 D Z1 W ?38 S Z="Other Fields" D Z
"RTN","DGPTF4",15,0)
 S DGINC=$P(B(101),U,7)
"RTN","DGPTF4",16,0)
 I DGINC>1000 S DGINC=$E(DGINC,1,$L(DGINC)-3)_","_$E(DGINC,$L(DGINC)-2,$L(DGINC))
"RTN","DGPTF4",17,0)
 W !,"      C&P Status: " S L=";"_$P(^DD(45,78,0),U,3),L1=";"_$P(B(70),U,9)_":" W $E($P($P(L,L1,2),";",1),1,24),?47,"Income: $",DGINC
"RTN","DGPTF4",18,0)
 K DGINC
"RTN","DGPTF4",19,0)
AS ;
"RTN","DGPTF4",20,0)
 N DGRSC
"RTN","DGPTF4",21,0)
 S DGRSC=$S($P(A(.3),U)="Y":$$RTEN^DGPTR4($P(A(.3),U,2)),1:"")
"RTN","DGPTF4",22,0)
 W !,"       ASIH Days: ",$P(B(70),U,8)
"RTN","DGPTF4",23,0)
 W ?40,"SC Percentage: ",$S($P(A(.3),U)="Y":$P(A(.3),U,2)_"%",1:"")
"RTN","DGPTF4",24,0)
 I DGRSC]"",DGRSC'=$P(A(.3),U,2) W ?60,"Transmitted: ["_DGRSC_"%]"
"RTN","DGPTF4",25,0)
 W !,?39,"Period Of Serv: "
"RTN","DGPTF4",26,0)
 W $S($D(^DIC(21,$S('$D(^DGPM(+$O(^DGPM("APTF",PTF,0)),"ODS")):+$$CKPOS^DGPTUTL($P(B(101),U,8),+$P(A(.32),U,3)),+^("ODS"):+$O(^DIC(21,"D",6,0)),1:$$CKPOS^DGPTUTL($P(B(101),U,8),+$P(A(.32),U,3))),0)):$E($P(^(0),U),1,26),1:""),!
"RTN","DGPTF4",27,0)
 Q
"RTN","DGPTF4",28,0)
 ;
"RTN","DGPTF4",29,0)
EN1 ;LOAD AND DISPLAY DIAGNOSES FOR PTF 701 SCREEN
"RTN","DGPTF4",30,0)
 K DRG S B(70)=$S($D(^DGPT(PTF,70)):^(70),1:""),B(71)=$S($D(^DGPT(PTF,71)):^(71),1:"") D WR
"RTN","DGPTF4",31,0)
 N EFFDATE,IMPDATE,J
"RTN","DGPTF4",32,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTF4",33,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(B(70),U,10),EFFDATE)
"RTN","DGPTF4",34,0)
 S ICDLABEL=$$GETLABEL^DGPTIC10(DGPTDAT,"D")
"RTN","DGPTF4",35,0)
 ;
"RTN","DGPTF4",36,0)
 W ! S Z=1 D Z W "  Principal Diagnosis: ",ICDLABEL
"RTN","DGPTF4",37,0)
 D WRITECOD^DGPTIC10("DIAG",+$P(B(70),U,10),EFFDATE,2,1,7)
"RTN","DGPTF4",38,0)
 W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"")
"RTN","DGPTF4",39,0)
 ; Piece 11 is pre 1986 prin diag
"RTN","DGPTF4",40,0)
 W:$P(B(70),U,11)&('$P(B(70),U,10)) !,"  Principal Diag: ",ICDLABEL,!?7,$S(DGPTTMP&$P(DGPTTMP,U,10):$P(DGPTTMP,U,4)_" ("_$P(DGPTTMP,U,2)_")",1:"")
"RTN","DGPTF4",41,0)
 N DGPTPOA S DGPTPOA=$G(^DGPT(PTF,82))
"RTN","DGPTF4",42,0)
 ;
"RTN","DGPTF4",43,0)
 I $P(DGPTTMP,U,20)=30 W:$P($G(DGPTPOA),U,1)'="" " (POA="_$P(DGPTPOA,U,1)_")" W:$P($G(DGPTPOA),U,1)="" " (POA=' ')"
"RTN","DGPTF4",44,0)
 W !?5,"Secondary Diag: ",ICDLABEL
"RTN","DGPTF4",45,0)
 S K=B(70) F I=16:1:24 S DGPOA=$P(DGPTPOA,"^",(I-14)) D DSP
"RTN","DGPTF4",46,0)
 S K=B(71) F I=1:1:4 S DGPOA=$P(DGPTPOA,"^",(I+10)) D DSP
"RTN","DGPTF4",47,0)
 S DGPTF=PTF D:'DGST CHK701^DGPTSCAN,UP701^DGPTSPQ
"RTN","DGPTF4",48,0)
 ; display contents of 300th node
"RTN","DGPTF4",49,0)
 S DG300=$S($D(^DGPT(PTF,300)):^(300),1:"") D:DG300]"" PRN2^DGPTFM8 K DG300
"RTN","DGPTF4",50,0)
EN2 K DRG
"RTN","DGPTF4",51,0)
 I $D(^DGPT(PTF,0)),$P(^(0),U,11)=1 D
"RTN","DGPTF4",52,0)
 .S DA=DFN
"RTN","DGPTF4",53,0)
 .D EN1^DGPTFD
"RTN","DGPTF4",54,0)
 .I $D(DRG),$D(^DGP(45.84,PTF,0)),$P(^(0),U,6)'=DRG D
"RTN","DGPTF4",55,0)
 ..N DGFDA,DGMSG
"RTN","DGPTF4",56,0)
 ..S DGFDA(45.84,PTF_",",6)=DRG
"RTN","DGPTF4",57,0)
 ..D FILE^DIE("","DGFDA","DGMSG")
"RTN","DGPTF4",58,0)
JUMP K AGE,B,CC,DA,DAM,DOB,DXLS,EXP,I,L1,L2,SEX,DRGCAL,S,DIC,DR,DIE
"RTN","DGPTF4",59,0)
 Q:DGPR
"RTN","DGPTF4",60,0)
 K X S $P(X,"-",81)="" W X
"RTN","DGPTF4",61,0)
 ;
"RTN","DGPTF4",62,0)
 G O:DGST&(('$D(DRG))!('DGDD)!('$D(^DGP(45.84,PTF))))
"RTN","DGPTF4",63,0)
X G ACT^DGPTF41
"RTN","DGPTF4",64,0)
CLS ;
"RTN","DGPTF4",65,0)
 D VERCHK^DGPTRI3(PTF) I $G(DGERR)>0 D HANG^DGPTUTL K DGERR G EN1 ; icd-10 remediation, validate all codes are of correct version
"RTN","DGPTF4",66,0)
 G NOT:('$D(DRG))!('DGDD)!('DGFC)
"RTN","DGPTF4",67,0)
 ;change made to allow release of 470, before grouper released to vamc's
"RTN","DGPTF4",68,0)
 ;  patch 115
"RTN","DGPTF4",69,0)
 ;DGDAT = effective date of DRG used in DGPTICD (468=CMS-DRG,998=MS-DRG)
"RTN","DGPTF4",70,0)
 I DRG=469,(+$G(DGDAT)<3071001)  W !!,*7,"Unable to release DRG ",DRG,". Please verify data entered.",*7 D HANG^DGPTUTL G EN1
"RTN","DGPTF4",71,0)
 I DRG=998 W !!,*7,"Unable to release DRG ",DRG,".  Please verify data entered.",*7 D HANG^DGPTUTL G EN1
"RTN","DGPTF4",72,0)
 I $D(DGCST),'DGCST D CEN G EN1:'DGCST
"RTN","DGPTF4",73,0)
 I '$P(^DGPT(PTF,0),"^",4) W !,"Updating TRANSFER DRGs..." S DGADM=$P(^DGPT(PTF,0),U,2) D SUDO1^DGPTSUDO
"RTN","DGPTF4",74,0)
 I DGDD>(DT+1) W !,"Cannot close with Discharge date in future." D HANG^DGPTUTL G EN1
"RTN","DGPTF4",75,0)
 I $D(^DGM("PT",DFN)) F I=0:0 S I=$O(^DGM("PT",DFN,I)) Q:'I  I '$D(^DGM(I,0)) K ^DGM(I),^DGM("PT",DFN,I)
"RTN","DGPTF4",76,0)
 I $D(^DGM("PT",DFN)) W !!,"Not all messages have been cleared up for this patient--cannot close.",*7,*7 S DGPTF=DFN,X="??" K DGALL D HELP^DGPTMSGD K DGPTF G EN1:'$D(DGALL) K DGALL
"RTN","DGPTF4",77,0)
 G CLS^DGPTF2
"RTN","DGPTF4",78,0)
 ;
"RTN","DGPTF4",79,0)
O I '$D(^DGP(45.84,PTF,0)) S DR="6///0",DIE="^DGPT(",DA=PTF,(DGST,DGN)=0 D ^DIE W !,"  NOT CLOSED " D HANG^DGPTUTL G EN1
"RTN","DGPTF4",80,0)
 S (DGST,DGN)=0
"RTN","DGPTF4",81,0)
 S DGPTIFN=PTF,DGRTY=1 D OPEN^DGPTFDEL S DGST=0
"RTN","DGPTF4",82,0)
 K DGPTIFN,DGRTY G EN1
"RTN","DGPTF4",83,0)
 ;
"RTN","DGPTF4",84,0)
Q G Q^DGPTF
"RTN","DGPTF4",85,0)
 ;
"RTN","DGPTF4",86,0)
NOT I 'DGFC S DR="3//^S X=$P($$SITE^VASITE,U,2);5",DIE="^DGPT(",DA=PTF D ^DIE S DGFC=$P(^DGPT(PTF,0),U,3) I DGFC G EN1
"RTN","DGPTF4",87,0)
 W !!,"Unable to close without a ",$S('$D(DRG):"DRG being calculated.",'DGDD:" discharge date.",1:" facility specified"),!!,*7,*7 H 4 G EN1
"RTN","DGPTF4",88,0)
 Q
"RTN","DGPTF4",89,0)
 ;
"RTN","DGPTF4",90,0)
Z D Z^DGPTF5 Q
"RTN","DGPTF4",91,0)
Z1 D Z1^DGPTF5 Q
"RTN","DGPTF4",92,0)
CEN D CEN^DGPTF5 Q
"RTN","DGPTF4",93,0)
DSP ;
"RTN","DGPTF4",94,0)
 Q:'+$P(K,U,I)
"RTN","DGPTF4",95,0)
 N J2
"RTN","DGPTF4",96,0)
 D WRITECOD^DGPTIC10("DIAG",+$P(K,U,I),EFFDATE,2,1,7)
"RTN","DGPTF4",97,0)
 S J2=$$ICDDATA^ICDXCODE("DIAG",+$P(K,U,I),EFFDATE)
"RTN","DGPTF4",98,0)
 I $P(J2,U,20)=30,$G(DGPOA)'="" W:$X>73 !,"           " W " (POA="_DGPOA_")" W:$G(DGPOA)="" " (POA='')"
"RTN","DGPTF4",99,0)
 W $S(+J2<1!('$P(J2,U,10)):"*",1:"")
"RTN","DGPTF4",100,0)
 Q
"RTN","DGPTF4",101,0)
POA(TEXT) ; -- Returns POA Text
"RTN","DGPTF4",102,0)
 N POA
"RTN","DGPTF4",103,0)
 Q:TEXT="" ""
"RTN","DGPTF4",104,0)
 S POA("Y")="PRESENT AT ADMISSION"
"RTN","DGPTF4",105,0)
 S POA("N")="NOT PRESENT AT ADMISSION"
"RTN","DGPTF4",106,0)
 S POA("U")="INSUFFICIENT DOCUM TO PRESENT AT ADMISSION"
"RTN","DGPTF4",107,0)
 S POA("W")="UNABLE TO DETERM IF PRESENT AT ADMISSION"
"RTN","DGPTF4",108,0)
 Q $G(POA(TEXT))
"RTN","DGPTF4",109,0)
POA1 ;Y:PRESENT AT ADMISSION;N:NOT PRESENT AT ADMISSION;U:INSUFFICIENT DOCUM TO PRESENT AT ADMISSION;W:UNABLE TO DETERM IF PRESENT AT ADMISSION
"RTN","DGPTF41")
0^73^B10056872^B9986685
"RTN","DGPTF41",1,0)
DGPTF41 ;ALB/JDS - PTF ENTRY/EDIT-4 ;11/15/06 8:37am
"RTN","DGPTF41",2,0)
 ;;5.3;Registration;**64,635,729,850**;Aug 13, 1993;Build 171
"RTN","DGPTF41",3,0)
 ;
"RTN","DGPTF41",4,0)
ACT ; -- 701 actions
"RTN","DGPTF41",5,0)
 G ACT1:DGST
"RTN","DGPTF41",6,0)
 S DGCFL=0 I $D(DGCST),DGCST<2,'DGCST!$G(DGREL) S DGCFL=1
"RTN","DGPTF41",7,0)
 W !,"   PTF ",$J("#"_PTF,7),?15,"actions: 1=Edit   C=Close       ^N=Another Screen",!
"RTN","DGPTF41",8,0)
 I DGCFL W "CENSUS ",$S(DGCI:$J("#"_DGCI,7),1:" record"),?15,"actions: ",$S(DGCST=1:"P=Open   E=Release",1:"         L=Close")
"RTN","DGPTF41",9,0)
 S Z="^CLOSE^1 Edit"
"RTN","DGPTF41",10,0)
 I DGCFL S Z=Z_"^"_$S(DGCST=1:"P Open Census^E Release Census",1:"L Close for Census")
"RTN","DGPTF41",11,0)
 W !?15,"         ^=Abort   <RET> to Continue: "
"RTN","DGPTF41",12,0)
 D READ
"RTN","DGPTF41",13,0)
 ;
"RTN","DGPTF41",14,0)
 I X="^"!(X="") G Q^DGPTF
"RTN","DGPTF41",15,0)
 I DGCFL,DGCST=1,$E(X)="P"!($E(X)="E") G ACT^DGPTC1
"RTN","DGPTF41",16,0)
 I DGCFL,'DGCST,$E(X)="L" G ACT^DGPTC1
"RTN","DGPTF41",17,0)
 I X?1"^".E S DGPTSCRN=701 G ^DGPTFJ
"RTN","DGPTF41",18,0)
 I X?1"C".E,'DGN G CLS^DGPTF4
"RTN","DGPTF41",19,0)
 I X="O" G O^DGPTF4
"RTN","DGPTF41",20,0)
 I X="R",DGN G REL
"RTN","DGPTF41",21,0)
 I X'=1 D HELP G EN1^DGPTF4
"RTN","DGPTF41",22,0)
 S DR="[DG701]",DIE="^DGPT(",(DGPTF,DA)=PTF D ^DIE
"RTN","DGPTF41",23,0)
 F I=0,70 S B(I)="" S:$D(^DGPT(PTF,I)) B(I)=^(I)
"RTN","DGPTF41",24,0)
 K DGPTF,DR,DGCODSYS,DGXX,DGTYPE
"RTN","DGPTF41",25,0)
 G EN1^DGPTF4
"RTN","DGPTF41",26,0)
 ;
"RTN","DGPTF41",27,0)
READ ; -- read X
"RTN","DGPTF41",28,0)
 R X:DTIME S:'$T X="^",DGPTOUT="" D IN^DGHELP
"RTN","DGPTF41",29,0)
 Q
"RTN","DGPTF41",30,0)
 ;
"RTN","DGPTF41",31,0)
HELP ;
"RTN","DGPTF41",32,0)
 W !,"Enter  '1'  to edit Principal & Admit Diagnosis"
"RTN","DGPTF41",33,0)
 W !,"       'C'  to close out PTF record"
"RTN","DGPTF41",34,0)
 I DGCFL W:DGCST=1 !,"       'P'  to re-open a Census record",!,"       'E'  to release a Census record" W:'DGCST !,"       'L'  to close for Census"
"RTN","DGPTF41",35,0)
 W !,"       '^'  to stop the display"
"RTN","DGPTF41",36,0)
 W !,"       '^N' to jump to screen #N (appears in upper right of screen '<N>')"
"RTN","DGPTF41",37,0)
 W !,"      <RET> to continue on to the next screen"
"RTN","DGPTF41",38,0)
 R !!,"Enter <RET> to continue: ",XS:DTIME
"RTN","DGPTF41",39,0)
 Q
"RTN","DGPTF41",40,0)
 ;
"RTN","DGPTF41",41,0)
ACT1 ;
"RTN","DGPTF41",42,0)
 W !,"   PTF ",$J("#"_PTF,7),?15,"actions: O=Open   R=Release   ^N=Another Screen",!
"RTN","DGPTF41",43,0)
 I $D(DGCST),DGCST=1 W "CENSUS ",$J("#"_DGCI,7),?15,"action :          E=Release"
"RTN","DGPTF41",44,0)
 W !?15,"         ^=Abort    <RET> to continue: "
"RTN","DGPTF41",45,0)
 S Z="^OPEN^RELEASE PTF^E RELEASE CENSUS"
"RTN","DGPTF41",46,0)
 D READ
"RTN","DGPTF41",47,0)
 I $D(DGCST),DGCST=1,$E(X)="E" G ACT^DGPTC1
"RTN","DGPTF41",48,0)
 I X=""!(X=U) G Q^DGPTF
"RTN","DGPTF41",49,0)
 I X?1"^".E S DGPTSCRN=701 G ^DGPTFJ
"RTN","DGPTF41",50,0)
 I X="O" G O^DGPTF4
"RTN","DGPTF41",51,0)
 I X="R" G REL
"RTN","DGPTF41",52,0)
 ;
"RTN","DGPTF41",53,0)
 W !,"Enter  'O'  to re-open a PTF record"
"RTN","DGPTF41",54,0)
 W !,"       'R'  to release a PTF record"
"RTN","DGPTF41",55,0)
 I $D(DGCST),DGCST=1 W !,"       'E'  to release a Census record"
"RTN","DGPTF41",56,0)
 W !,"       '^'  to stop the display"
"RTN","DGPTF41",57,0)
 W !,"       '^N' to jump to screen #N (appears in upper right of screen '<N>')"
"RTN","DGPTF41",58,0)
 W !,"      <RET> to continue on to the next screen"
"RTN","DGPTF41",59,0)
 R !!,"Enter <RET> to continue: ",XS:DTIME
"RTN","DGPTF41",60,0)
 G EN1^DGPTF4
"RTN","DGPTF41",61,0)
 ;
"RTN","DGPTF41",62,0)
REL ;
"RTN","DGPTF41",63,0)
 S Y=1 D RTY^DGPTUTL S DGPTFLE=1,DGPTIFN=PTF D EN^DGPTFREL G ^DGPTF
"RTN","DGPTF41",64,0)
 ;
"RTN","DGPTF5")
0^4^B6981494^B3539356
"RTN","DGPTF5",1,0)
DGPTF5 ;ALB/MTC - PTF ENTRY/EDIT-4 ;07 JUN 91 
"RTN","DGPTF5",2,0)
 ;;5.3;Registration;**669,701,744,868,850**;Aug 13, 1993;Build 171
"RTN","DGPTF5",3,0)
 ;
"RTN","DGPTF5",4,0)
Z I 'DGN S Z=$S(IOST="C-QUME"&($L(DGVI)'=2):Z,1:"["_Z_"]") W @DGVI,Z,@DGVO
"RTN","DGPTF5",5,0)
 E  W "   "
"RTN","DGPTF5",6,0)
 Q
"RTN","DGPTF5",7,0)
 ;
"RTN","DGPTF5",8,0)
Z1 F I=1:1:(Z1-$L(Z)) S Z=Z_" "
"RTN","DGPTF5",9,0)
 W Z
"RTN","DGPTF5",10,0)
 Q
"RTN","DGPTF5",11,0)
 ;
"RTN","DGPTF5",12,0)
CEN ;
"RTN","DGPTF5",13,0)
 W !!,*7,"Record #",PTF," MUST be closed for CENSUS first.",!
"RTN","DGPTF5",14,0)
ASK W !,"Would you like to close this record for CENSUS" S %=2 D YN^DICN
"RTN","DGPTF5",15,0)
 I '% W !?5,"Answer 'YES' to close record for CENSUS also",!?5,"  or   'NO'  to not close this record at all." G ASK
"RTN","DGPTF5",16,0)
 I %=1 S Y=2 D RTY^DGPTUTL D CLS^DGPTC1
"RTN","DGPTF5",17,0)
 K DGRTY,DGRTY0 Q
"RTN","DGPTF5",18,0)
ICDEN ;enter icd codes
"RTN","DGPTF5",19,0)
 I $G(X)["?" Q
"RTN","DGPTF5",20,0)
 N DIC,Y I $G(X)="?BAD" S X="" Q
"RTN","DGPTF5",21,0)
 ; DG*5.3*701 (movement)
"RTN","DGPTF5",22,0)
 I DA'=$G(DGPTF),DA<25,$G(DA(1))>0 D CONFIG^LEXSET("ICD","ICD",$E($$GETDATE^ICDGTDRG(DA(1)),1,7)) ;868 patch,$E($$getdate...),1,7)
"RTN","DGPTF5",23,0)
 ; DG*5.3*744 (801 screen)
"RTN","DGPTF5",24,0)
 E  I DA'=$G(PTF),$D(^DGPT(PTF)) D CONFIG^LEXSET("ICD","ICD",$E($$GETDATE^ICDGTDRG($G(PTF)),1,7)) ;868 patch
"RTN","DGPTF5",25,0)
 E  D CONFIG^LEXSET("ICD",,$E($$GETDATE^ICDGTDRG(DA)),1,7) ;patch 868
"RTN","DGPTF5",26,0)
 S DIC="^LEX(757.01,",DIC(0)=$S('$L($G(X)):"",1:"")_"EQM"
"RTN","DGPTF5",27,0)
 S DIC("A")="Enter ICD: "
"RTN","DGPTF5",28,0)
 D ^DIC
"RTN","DGPTF5",29,0)
 I Y=-1 S X="" Q
"RTN","DGPTF5",30,0)
 S X=$G(Y(1))
"RTN","DGPTF5",31,0)
 Q
"RTN","DGPTF5",32,0)
ICDEN1 ;enter icd codes for DRG
"RTN","DGPTF5",33,0)
 ; called from DGPTFIC and DGPTDRG
"RTN","DGPTF5",34,0)
 ; removed kills to X and Y and set for DIC("A")to suppress prompts DG*5.3*850
"RTN","DGPTF5",35,0)
 N DIC,EFFDATE,IMPDATE,TERM,DGTEMP,LEXVDT
"RTN","DGPTF5",36,0)
 I '$G(DGDAT) S DGDAT=DT
"RTN","DGPTF5",37,0)
 S EFFDATE=DGDAT
"RTN","DGPTF5",38,0)
 S DGTEMP=$$IMPDATE^DGPTIC10("10D")
"RTN","DGPTF5",39,0)
 S IMPDATE=$P(DGTEMP,U,1)
"RTN","DGPTF5",40,0)
 ;
"RTN","DGPTF5",41,0)
 ; What terminology to use, ICD9 or ICD10
"RTN","DGPTF5",42,0)
 I DGDAT<IMPDATE S TERM="ICD"
"RTN","DGPTF5",43,0)
 I DGDAT'<IMPDATE S TERM="10D"
"RTN","DGPTF5",44,0)
 ;
"RTN","DGPTF5",45,0)
 ; I Testing, set effective date to one stored in file 43
"RTN","DGPTF5",46,0)
 I EFFDATE'<IMPDATE,+$P(DGTEMP,U,2)?7N S EFFDATE=+$P(DGTEMP,U,2)
"RTN","DGPTF5",47,0)
 ;
"RTN","DGPTF5",48,0)
 I $G(PROMPT)'="" S DIC("A")=PROMPT
"RTN","DGPTF5",49,0)
 D CONFIG^LEXSET(TERM,TERM,EFFDATE)
"RTN","DGPTF5",50,0)
 S DIC="^LEX(757.01,",DIC(0)=$S('$L($G(X)):"",1:"")_"EQM"
"RTN","DGPTF5",51,0)
 D ^DIC
"RTN","DGPTF5",52,0)
 I Y=-1 S X="" Q
"RTN","DGPTF5",53,0)
 S:TERM="ICD" X=$G(Y(1))
"RTN","DGPTF5",54,0)
 S:TERM="10D" X=$G(Y(30))
"RTN","DGPTF5",55,0)
 S Y=$$ICDDATA^ICDXCODE("DIAG",X,EFFDATE)
"RTN","DGPTF5",56,0)
 K LEXVDT
"RTN","DGPTF5",57,0)
 Q
"RTN","DGPTF5",58,0)
GETICD9(EFFDATE) ;enter icd codes
"RTN","DGPTF5",59,0)
 N DGXT,DIC,Y,LEXVDT,CUR,ICDV,LEXQ,DO,DISYS,DGY
"RTN","DGPTF5",60,0)
 I $G(X)="?BAD" S X="" G GET9Q
"RTN","DGPTF5",61,0)
 D CONFIG^LEXSET("ICD",EFFDATE)
"RTN","DGPTF5",62,0)
 S DIC="^LEX(757.01,",DIC(0)=$S('$L($G(X)):"",1:"")_"EQM"
"RTN","DGPTF5",63,0)
 S DIC("A")="Enter ICD: "
"RTN","DGPTF5",64,0)
 S LEXVDT=EFFDATE
"RTN","DGPTF5",65,0)
 D ^DIC
"RTN","DGPTF5",66,0)
 I Y=-1 S X="" G GET9Q
"RTN","DGPTF5",67,0)
 S DGXT=$G(Y(1))
"RTN","DGPTF5",68,0)
 S X=+$$CODEN^ICDEX(DGXT,80)
"RTN","DGPTF5",69,0)
GET9Q ; exit point
"RTN","DGPTF5",70,0)
 Q X
"RTN","DGPTFAPI")
0^17^B6968721^B6885804
"RTN","DGPTFAPI",1,0)
DGPTFAPI ;BAY/JAT/ADL - Returns data from Patient Treatment (PTF) file;10/12/00 10:00am
"RTN","DGPTFAPI",2,0)
 ;;5.3;Registration;**309,510,850**;Aug 13, 1993;Build 171
"RTN","DGPTFAPI",3,0)
 ;;ADL;Update for CSV Project;;Mar 24, 2003
"RTN","DGPTFAPI",4,0)
 ; can be used as an RPC (Remote Procedure call)
"RTN","DGPTFAPI",5,0)
 ; see ^XWB(8994 for documentation
"RTN","DGPTFAPI",6,0)
 ; output:  RESULTS (passed by reference)
"RTN","DGPTFAPI",7,0)
 ; input :  PTFNUMBR, the Patient Treatment IFN (.001 of file #45)
"RTN","DGPTFAPI",8,0)
 ;
"RTN","DGPTFAPI",9,0)
RPC(RESULTS,PTFNUMBR) ;
"RTN","DGPTFAPI",10,0)
 N DGPTF,DG70,DGDISP,DGDXLS,DGDX2,DGDX3,DGDX4,DGDX5,DGDX6,DGDX7,DGDX8,DGDX9,DGDX10,DGDISTYP,EFFDATE,IMPDATE,ICDVER,DGPTDAT,DXLS
"RTN","DGPTFAPI",11,0)
 S DGPTF=$G(PTFNUMBR)
"RTN","DGPTFAPI",12,0)
 S ICDVER=""
"RTN","DGPTFAPI",13,0)
 K RESULTS S RESULTS(0)=-1
"RTN","DGPTFAPI",14,0)
 I 'DGPTF Q
"RTN","DGPTFAPI",15,0)
 I '$D(^DGPT(DGPTF,0)) Q
"RTN","DGPTFAPI",16,0)
 S DG70=$G(^DGPT(DGPTF,70))
"RTN","DGPTFAPI",17,0)
 S DGDISP=$P(DG70,U,6)
"RTN","DGPTFAPI",18,0)
 I DGDISP S DGDISP=$P($G(^DIC(45.6,DGDISP,0)),U)
"RTN","DGPTFAPI",19,0)
 S DGDISTYP=$P(DG70,U,3)
"RTN","DGPTFAPI",20,0)
 I DGDISTYP S DGDISTYP=$S(DGDISTYP=1:"REGULAR",DGDISTYP=2:"NBC OR WHILE ASIH",DGDISTYP=3:"EXPIRATION 6 MONTH LIMIT",DGDISTYP=4:"IRREGULAR",DGDISTYP=5:"TRANSFER",DGDISTYP=6:"DEATH WITH AUTOPSY",DGDISTYP=7:"DEATH WITHOUT AUTOPSY",1:"")
"RTN","DGPTFAPI",21,0)
 S DGDXLS=$P(DG70,U,10)
"RTN","DGPTFAPI",22,0)
 S DGPTDAT=$$GETDATE^ICDGTDRG(DGPTF)
"RTN","DGPTFAPI",23,0)
 D EFFDATE^DGPTIC10(DGPTF)
"RTN","DGPTFAPI",24,0)
 I DGDXLS S DXLS=$$CODEC^ICDEX(80,DGDXLS),ICDVER=$$CSI^ICDEX(80,DGDXLS)
"RTN","DGPTFAPI",25,0)
 S DGDX2=$P(DG70,U,16) I DGDX2 S DGDX2=$$CODEC^ICDEX(80,DGDX2)
"RTN","DGPTFAPI",26,0)
 S DGDX3=$P(DG70,U,17) I DGDX3 S DGDX3=$$CODEC^ICDEX(80,DGDX3)
"RTN","DGPTFAPI",27,0)
 S DGDX4=$P(DG70,U,18) I DGDX4 S DGDX4=$$CODEC^ICDEX(80,DGDX4)
"RTN","DGPTFAPI",28,0)
 S DGDX5=$P(DG70,U,19) I DGDX5 S DGDX5=$$CODEC^ICDEX(80,DGDX5)
"RTN","DGPTFAPI",29,0)
 S DGDX6=$P(DG70,U,20) I DGDX6 S DGDX6=$$CODEC^ICDEX(80,DGDX6)
"RTN","DGPTFAPI",30,0)
 S DGDX7=$P(DG70,U,21) I DGDX7 S DGDX7=$$CODEC^ICDEX(80,DGDX7)
"RTN","DGPTFAPI",31,0)
 S DGDX8=$P(DG70,U,22) I DGDX8 S DGDX8=$$CODEC^ICDEX(80,DGDX8)
"RTN","DGPTFAPI",32,0)
 S DGDX9=$P(DG70,U,23) I DGDX9 S DGDX9=$$CODEC^ICDEX(80,DGDX9)
"RTN","DGPTFAPI",33,0)
 S DGDX10=$P(DG70,U,24) I DGDX10 S DGDX10=$$CODEC^ICDEX(80,DGDX10)
"RTN","DGPTFAPI",34,0)
 ;I DGDXLS S DGDXLS=$P($$ICDDX^ICDCODE(DGDXLS,DGPTDAT),U,2)
"RTN","DGPTFAPI",35,0)
 ;S DGDX2=$P(DG70,U,16) I DGDX2 S DGDX2=$P($$ICDDX^ICDCODE(DGDX2,DGPTDAT),U,2)
"RTN","DGPTFAPI",36,0)
 ;S DGDX3=$P(DG70,U,17) I DGDX3 S DGDX3=$P($$ICDDX^ICDCODE(DGDX3,DGPTDAT),U,2)
"RTN","DGPTFAPI",37,0)
 ;S DGDX4=$P(DG70,U,18) I DGDX4 S DGDX4=$P($$ICDDX^ICDCODE(DGDX4,DGPTDAT),U,2)
"RTN","DGPTFAPI",38,0)
 ;S DGDX5=$P(DG70,U,19) I DGDX5 S DGDX5=$P($$ICDDX^ICDCODE(DGDX5,DGPTDAT),U,2)
"RTN","DGPTFAPI",39,0)
 ;S DGDX6=$P(DG70,U,20) I DGDX6 S DGDX6=$P($$ICDDX^ICDCODE(DGDX6,DGPTDAT),U,2)
"RTN","DGPTFAPI",40,0)
 ;S DGDX7=$P(DG70,U,21) I DGDX7 S DGDX7=$P($$ICDDX^ICDCODE(DGDX7,DGPTDAT),U,2)
"RTN","DGPTFAPI",41,0)
 ;S DGDX8=$P(DG70,U,22) I DGDX8 S DGDX8=$P($$ICDDX^ICDCODE(DGDX8,DGPTDAT),U,2)
"RTN","DGPTFAPI",42,0)
 ;S DGDX9=$P(DG70,U,23) I DGDX9 S DGDX9=$P($$ICDDX^ICDCODE(DGDX9,DGPTDAT),U,2)
"RTN","DGPTFAPI",43,0)
 ;S DGDX10=$P(DG70,U,24) I DGDX10 S DGDX10=$P($$ICDDX^ICDCODE(DGDX10,DGPTDAT),U,2)
"RTN","DGPTFAPI",44,0)
 S RESULTS(0)=1
"RTN","DGPTFAPI",45,0)
 ; #72: type of disposition^#75: place of disposition (name)^#79: primary ICD code^Coding system Version (pointer to 80.4)
"RTN","DGPTFAPI",46,0)
 S RESULTS(1)=DGDISTYP_U_DGDISP_U_$G(DXLS)_U_$G(ICDVER)
"RTN","DGPTFAPI",47,0)
 ; #79.16 thru 79.24: 2nd thru 10th ICD codes
"RTN","DGPTFAPI",48,0)
 S RESULTS(2)=DGDX2_U_DGDX3_U_DGDX4_U_DGDX5_U_DGDX6_U_DGDX7_U_DGDX8_U_DGDX9_U_DGDX10
"RTN","DGPTFAPI",49,0)
 ; Return the POA indicator for diagnosis
"RTN","DGPTFAPI",50,0)
 S RESULTS(3)=$G(^DGPT(PTFNUMBR,82))
"RTN","DGPTFAPI",51,0)
 Q
"RTN","DGPTFD")
0^9^B19169268^B15610745
"RTN","DGPTFD",1,0)
DGPTFD ;ALB/MTC/ADL - Sets Required Variables for DRG on 701 Screen ;2/19/02 12:52pm
"RTN","DGPTFD",2,0)
 ;;5.3;Registration;**60,441,510,785,850**;Aug 13, 1993;Build 171
"RTN","DGPTFD",3,0)
 ;;ADL;Update for CSV Project;;Mar 24, 2003
"RTN","DGPTFD",4,0)
 ;
"RTN","DGPTFD",5,0)
EN1 ;-- entry point from 701
"RTN","DGPTFD",6,0)
 Q:'$D(^DGPT(PTF,70))  S DGPT(70)=^(70)
"RTN","DGPTFD",7,0)
 ;
"RTN","DGPTFD",8,0)
 ;-- check for DXLS
"RTN","DGPTFD",9,0)
 I $P(DGPT(70),U,10)="",$P(DGPT(70),U,11)="" G Q
"RTN","DGPTFD",10,0)
 ;-- did patient die during care
"RTN","DGPTFD",11,0)
 S DGEXP=$S($P(DGPT(70),U,3)>5:1,1:0)
"RTN","DGPTFD",12,0)
 ;-- discharged against med advice
"RTN","DGPTFD",13,0)
 S DGDMS=$S($P(DGPT(70),U,3)=4:1,1:0)
"RTN","DGPTFD",14,0)
 ;-- transfer to acute care facility
"RTN","DGPTFD",15,0)
 S DGTRS=$S($P(DGPT(70),U,13):1,1:0)
"RTN","DGPTFD",16,0)
 ;-- sex,age
"RTN","DGPTFD",17,0)
 S SEX=$P(^DPT(DFN,0),U,2),AGE=$S(+DGPT(70):+DGPT(70),1:DT)-$P(^(0),U,3)\10000,DOB=$P(^(0),U,3) ; DOB added by abr for ICD calc.
"RTN","DGPTFD",18,0)
 ; DRP DG*5.3*850 If not discharged and census is open then use System Date, else get effective date.
"RTN","DGPTFD",19,0)
 S DGDAT=$S(($G(DISDATE)="")!$G(DGCST,0)>0:DT,1:$$GETDATE^ICDGTDRG(PTF))
"RTN","DGPTFD",20,0)
  ;-- build diagnosis string
"RTN","DGPTFD",21,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTFD",22,0)
 ;DRP If not discharged, and Effective date is valid and Census status is open then use Effective date
"RTN","DGPTFD",23,0)
 I $G(DISDATE)="",+$G(EFFDATE),$G(DGCST,0)<1 S DGDAT=EFFDATE
"RTN","DGPTFD",24,0)
 N DGPOA,DGPOACNT,DGDXPOA
"RTN","DGPTFD",25,0)
 S DGDX="",DGDXPOA=""
"RTN","DGPTFD",26,0)
 ;-- new record after 10/1/86
"RTN","DGPTFD",27,0)
 S DGPOA=$G(^DGPT(PTF,82))
"RTN","DGPTFD",28,0)
 S DGPOACNT=1
"RTN","DGPTFD",29,0)
 I '+DGPT(70)!(+DGPT(70)>2861000) D
"RTN","DGPTFD",30,0)
 . F DGI=16:1:24 I $P(DGPT(70),U,DGI)]"" S DGPOACNT=$G(DGPOACNT)+1 D
"RTN","DGPTFD",31,0)
 .. S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DGPT(70),U,DGI),EFFDATE)
"RTN","DGPTFD",32,0)
 .. I +DGPTTMP>0,$P(DGPTTMP,U,10) D
"RTN","DGPTFD",33,0)
 ... S DGDX=DGDX_U_$P(DGPT(70),U,DGI)
"RTN","DGPTFD",34,0)
 ... I EFFDATE'<$$IMPDATE^LEXU("10D") S DGDXPOA=DGDXPOA_U_$$POA($P(DGPOA,U,DGPOACNT))
"RTN","DGPTFD",35,0)
 ;-- old record format
"RTN","DGPTFD",36,0)
 I +DGPT(70),+DGPT(70)<2861000 F DGI=0:0 S DGI=$O(^DGPT(PTF,"M","AM",DGI)) Q:DGI'>0  S DGJ=$O(^DGPT(PTF,"M","AM",DGI,0)) I $D(^DGPT(PTF,"M",+DGJ,0)) S DGNODE=$P(^(0),U,5,9) I DGNODE'="^^^^" D OLD
"RTN","DGPTFD",37,0)
 ;
"RTN","DGPTFD",38,0)
 S DGTMP=$S($P(DGPT(70),U,10):$P(DGPT(70),"^",10),1:$P(DGPT(70),U,11))
"RTN","DGPTFD",39,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",DGTMP,EFFDATE)
"RTN","DGPTFD",40,0)
 I +DGPTTMP>0,$P(DGPTTMP,U,10) S DGDX=DGTMP_DGDX,DGDXPOA=$$POA($P(DGPOA,U,1))_DGDXPOA
"RTN","DGPTFD",41,0)
 ;
"RTN","DGPTFD",42,0)
 ;-- build surgery and procedure strings
"RTN","DGPTFD",43,0)
 K DGSURG,DGPROC
"RTN","DGPTFD",44,0)
 ;-- start with surgeries (401)
"RTN","DGPTFD",45,0)
 F DGI=0:0 S DGI=$O(^DGPT(PTF,"S",DGI)) Q:DGI'>0  S X=$P(^(DGI,0),U,8,12) I X]"",X'="^^^^" S K=+^(0),K=$S('$D(DGSURG(K)):K,K[".":K_DGI_1,1:K_".0000"_DGI_1),DGSURG(K)="" S DGVAR=0 D TAG
"RTN","DGPTFD",46,0)
 ;-- build DGSURG
"RTN","DGPTFD",47,0)
 N I,X,Y,Z ; eliminate duplicates as we go
"RTN","DGPTFD",48,0)
 N SUB S SUB=0
"RTN","DGPTFD",49,0)
 I $D(DGSURG) S DGSURG=U F DGI=0:0 S DGI=$O(DGSURG(DGI)) Q:DGI'>0  D
"RTN","DGPTFD",50,0)
 .S X=DGSURG(DGI)
"RTN","DGPTFD",51,0)
 .F I=1:1:5 S Y=$P(X,U,I) Q:Y=""  D
"RTN","DGPTFD",52,0)
 ..Q:$L(DGSURG)>240
"RTN","DGPTFD",53,0)
 ..S Z=U_Y_U
"RTN","DGPTFD",54,0)
 ..S ICDSURG(I)=Y
"RTN","DGPTFD",55,0)
 ..S DGSURG=DGSURG_Y_U
"RTN","DGPTFD",56,0)
 ..I +DGPTTMP>0,($P(DGPTTMP,U,10)) S SUB=SUB+1,DGSURG(SUB)=$P(DGPTTMP,U,2)
"RTN","DGPTFD",57,0)
 ;-- procedures next old records before 10/1/87
"RTN","DGPTFD",58,0)
 I +DGPT(70),+DGPT(70)<2871000 G DRG:'$D(^DGPT(PTF,"401P")) S DGPROC="",X=^("401P") D:X]""&(X'="^^^^")  G DRG
"RTN","DGPTFD",59,0)
 . F DGI=1:1:5 I $P(X,U,DGI)]"" S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",$P(X,U,DGI),EFFDATE) I +DGPTTMP>0,$P(DGPTTMP,U,10) S DGPROC=DGPROC_$P(X,U,DGI)_U
"RTN","DGPTFD",60,0)
 ;-- get 601 (procedures)
"RTN","DGPTFD",61,0)
 F DGI=0:0 S DGI=$O(^DGPT(PTF,"P",DGI)) Q:DGI'>0  S X=$P(^(DGI,0),U,5,9) I X]"",X'="^^^^" S K=+^(0),K=$S('$D(DGPROC(K)):K,K[".":K_DGI_1,1:K_".0000"_DGI_1),DGPROC(K)="" S DGVAR=1 D TAG
"RTN","DGPTFD",62,0)
 ;-- build DGPROC and eliminate duplicates as we go
"RTN","DGPTFD",63,0)
 I $D(DGPROC) S DGPROC=U F DGI=0:0 S DGI=$O(DGPROC(DGI)) Q:DGI'>0  D
"RTN","DGPTFD",64,0)
 .S X=DGPROC(DGI)
"RTN","DGPTFD",65,0)
 .F I=1:1:5 S Y=$P(X,U,I) Q:Y=""  D
"RTN","DGPTFD",66,0)
 ..Q:$L(DGPROC)>240
"RTN","DGPTFD",67,0)
 ..S Z=U_Y_U
"RTN","DGPTFD",68,0)
 ..S DGPROC(I)=Y
"RTN","DGPTFD",69,0)
 ..;Q:DGPROC[Z
"RTN","DGPTFD",70,0)
 ..S DGPROC=DGPROC_Y_U
"RTN","DGPTFD",71,0)
DRG ;
"RTN","DGPTFD",72,0)
 S:'$D(DGCPT) DGDRGPRT=1 D ^DGPTICD  ;return DRG code even if inactive
"RTN","DGPTFD",73,0)
 ;
"RTN","DGPTFD",74,0)
Q K AGE,SEX,DGEXP,DGDMS,DGPT,DGTRS,DGDX,DGNODE,DGPROC,DGSURG,DGDRGPRT,DGI,DGJ,K,DOB,ICDSURG Q
"RTN","DGPTFD",75,0)
 ;
"RTN","DGPTFD",76,0)
OLD ;-- used to format diagnostic codes for old PTF records
"RTN","DGPTFD",77,0)
 S X="" F DGJ=1:1:5 I $P(DGNODE,"^",DGJ)]"",$P($$CODEC^ICDEX(80,$P(DGNODE,"^",DGJ)),U,1)'=-1 S X=X_"^"_$P(DGNODE,"^",DGJ)
"RTN","DGPTFD",78,0)
 S DGDX=X_$P(DGDX,"^",1,40)
"RTN","DGPTFD",79,0)
 Q
"RTN","DGPTFD",80,0)
TAG ;-- used to build sur/proc string date
"RTN","DGPTFD",81,0)
 F DGJ=1:1:5 I $P(X,U,DGJ)]"" S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",$P(X,U,DGJ),EFFDATE) I +DGPTTMP>0,$P(DGPTTMP,U,10) S:DGVAR=0 DGSURG(K)=DGSURG(K)_$P(X,U,DGJ)_U S:DGVAR=1 DGPROC(K)=DGPROC(K)_$P(X,U,DGJ)_U
"RTN","DGPTFD",82,0)
 Q
"RTN","DGPTFD",83,0)
POA(POA) ; Calculate of POA should be used in DRG
"RTN","DGPTFD",84,0)
 ;  coordinate with POA^DGPTRI4
"RTN","DGPTFD",85,0)
 ;
"RTN","DGPTFD",86,0)
 ; -- On 8/9/2012 the ADT SME Determined that null POA should be defaulted to Yes
"RTN","DGPTFD",87,0)
 ;    Due to the fact that the COTS PTF software was not uploading POA information.
"RTN","DGPTFD",88,0)
 ;
"RTN","DGPTFD",89,0)
 S POA=$G(POA)
"RTN","DGPTFD",90,0)
 Q $S(POA="Y":"Y",POA="N":"N",POA="":"Y",POA="U":"U",POA="W":"W",1:"Y")
"RTN","DGPTFIC")
0^20^B52898785^B27049239
"RTN","DGPTFIC",1,0)
DGPTFIC ;ALB/JDS/ADL - PTF CODE SEARCH ;26 JAN 87 @0800 [7/12/04 2:53pm]
"RTN","DGPTFIC",2,0)
 ;;5.3;Registration;**510,559,599,669,704,744,832,850**; Aug 13, 1993;Build 171
"RTN","DGPTFIC",3,0)
 ;;ADL;;Update for CSV Project;;Mar 25, 2003
"RTN","DGPTFIC",4,0)
 ;
"RTN","DGPTFIC",5,0)
 ; CODEC^ICDEX     ICR 5747
"RTN","DGPTFIC",6,0)
 ;
"RTN","DGPTFIC",7,0)
 ;;Patch DG*5.3*832 notations are for additional checks to insure the
"RTN","DGPTFIC",8,0)
 ;;                 search includes looking at secondary diagnostic 
"RTN","DGPTFIC",9,0)
 ;;                 codes 10-13, in node ^DGPT(ien,71)
"RTN","DGPTFIC",10,0)
EN K DG1 S DIC="^ICD9("
"RTN","DGPTFIC",11,0)
 D CODESET^DGPTEXPR Q:CODESET<1
"RTN","DGPTFIC",12,0)
 G RANGE
"RTN","DGPTFIC",13,0)
E9 K DIC S DHD=DHD_"  Diagnostic Code Search"
"RTN","DGPTFIC",14,0)
 ;
"RTN","DGPTFIC",15,0)
F9 ;
"RTN","DGPTFIC",16,0)
 S DIS(0)="I $D(^DGPT(D0,0)),$P(^(0),U,11)=1 S DG2=0,L=1,D1=+$O(^DGPT(D0,""M"",0)) X DIS(""0AAA""),DIS(""0BBB""),DIS(""0A"") I DG2 S ^UTILITY($J,""DG"",0)=""D"""   ;;DG*832
"RTN","DGPTFIC",17,0)
 S DIS("0A")="F E=0:0 X DIS(""0AA"") S D1=$O(^DGPT(D0,""M"",D1)) Q:D1'>0"
"RTN","DGPTFIC",18,0)
 S DG9=$S('DGR:"I DG1[(U_$P(DG3,U,DGZD)_U)",1:"D EFFDATE^DGPTIC10(D0) S DG=$$ICDDATA^ICDXCODE(""DIAG"",+$P(DG3,U,DGZD),EFFDATE) I $P(DG,U,20)=DGTERMIE S DG4=$S(+DG>0&($P(DG,U,10)):$P(DG,U,2),1:"""")_""!"" I DG4]DG1&(DG6]DG4)")
"RTN","DGPTFIC",19,0)
 S XAA="S DG2=DG2+1,^UTILITY($J,""DG"",D0,DG2)=$S(DGZD<11:DGZD-4,1:DGZD-5)_U_$P(DG3,U,10)_U_$P(DG3,U,DGZD)"
"RTN","DGPTFIC",20,0)
 S DIS("0AA")="I $D(^DGPT(D0,""M"",D1,0)) S DG3=^(0) F DGZD=5:1:15 "_DG9_" X XAA"
"RTN","DGPTFIC",21,0)
 S XAAA="D EFFDATE^DGPTIC10(D0) S DG2=DG2+1,$P(^UTILITY($J,""DG"",D0,""A""),U,DGZD)=$$CODEC^ICDEX(80,+$P(DG3,U,DGZD))"
"RTN","DGPTFIC",22,0)
 S XBBB="D EFFDATE^DGPTIC10(D0) S DG2=DG2+1,$P(^UTILITY($J,""DG"",D0,""A""),U,DGZD+24)=$$CODEC^ICDEX(80,+$P(DG3,U,DGZD))"  ;;DG*832
"RTN","DGPTFIC",23,0)
 S DIS("0AAA")="I $D(^DGPT(D0,70)) S DG3=^(70) F DGZD=10,16:1:24 "_DG9_" X XAAA"
"RTN","DGPTFIC",24,0)
 S DIS("0BBB")="I $D(^DGPT(D0,71)) S DG3=^(71) F DGZD=1:1:4 "_DG9_" X XBBB"   ;;DG*832
"RTN","DGPTFIC",25,0)
 S L=0
"RTN","DGPTFIC",26,0)
 ;
"RTN","DGPTFIC",27,0)
GO ;
"RTN","DGPTFIC",28,0)
 K DG9 W !,"Searching the PTF file  Select fields to sort by",! S DIC="^DGPT(",L=0
"RTN","DGPTFIC",29,0)
 S FLDS=$S($G(CODESET)=9:"[DGICD-9]",$G(CODESET)=10:"[DGICD-10]",1:"[DGICD]") D EN1^DIP
"RTN","DGPTFIC",30,0)
Q K DIS,DGZD,DGZJ,DINS,DXS,DTOUT,DG4,DGR,DIP,DP,%,DGZJJ,DGZT,DG1,DHD,I,J,DG2,DG3,DG5,DG6,DG7,DG8,DG9,D0,DJ,DTOT,FLDS,L,PROMPT,Z,X,DIC,X1,Y,XAA,XAAA,XAAAA,XBBB
"RTN","DGPTFIC",31,0)
 K CODESET,DGDAT,DGPTDAT,DGTERM,DGTERMIE,DGVDT,LEXQ,LEXVDT,EFFDATE,IMPDATE,DG
"RTN","DGPTFIC",32,0)
 Q
"RTN","DGPTFIC",33,0)
 ;
"RTN","DGPTFIC",34,0)
EN1 ;
"RTN","DGPTFIC",35,0)
 S DIC="^ICD0("
"RTN","DGPTFIC",36,0)
 D CODESET^DGPTEXPR Q:CODESET<1
"RTN","DGPTFIC",37,0)
 G RANGE
"RTN","DGPTFIC",38,0)
E0 K DIC S DHD=DHD_" Surgical Code Search"
"RTN","DGPTFIC",39,0)
F0 S DIS(0)="I $D(^DGPT(D0,0)),$P(^(0),U,11)=1 S DG2=0,L=1 X:$D(^DGPT(D0,""P"")) DIS(""0AAAA"") S D1=+$O(^DGPT(D0,""S"",0)) X DIS(""0AAA"") X DIS(""0A"") I DG2 S ^UTILITY($J,""DG"",0)=""P"""
"RTN","DGPTFIC",40,0)
 S DIS("0A")="F E=0:0 X DIS(""0AA"") S D1=$O(^DGPT(D0,""S"",D1)) Q:D1'>0"
"RTN","DGPTFIC",41,0)
 S DG9=$S('DGR:"I DG1[(U_$P(DG3,U,DGZD)_U)",1:"D EFFDATE^DGPTIC10(D0) S DG=$$ICDDATA^ICDXCODE(""PROC"",+$P(DG3,U,DGZD),EFFDATE) I $P(DG,U,15)=DGTERMIE S DG4=$S(+DG>0&($P(DG,U,10)):$P(DG,U,2),1:"""")_""!"" I DG4]DG1&(DG6]DG4)")
"RTN","DGPTFIC",42,0)
 S XAA="S DG2=DG2+1,^UTILITY($J,""DG"",D0,DG2)=(DGZD-7)_U_$P(DG3,U,1)_U_$P(DG3,U,DGZD)"
"RTN","DGPTFIC",43,0)
 S DIS("0AA")="I $D(^DGPT(D0,""S"",D1,0)) S DG3=^(0) F DGZD=8:1:12 "_DG9_" X XAA"
"RTN","DGPTFIC",44,0)
 S XAAA="S DG2=DG2+1,^UTILITY($J,""DG"",D0,DG2)=DGZD_U_U_$P(DG3,U,DGZD)"
"RTN","DGPTFIC",45,0)
 S DIS("0AAA")="I $D(^DGPT(D0,""401P"")) S DG3=^(""401P"") F DGZD=1:1:5 "_DG9_" X XAAA"
"RTN","DGPTFIC",46,0)
 S XAAAA="S DG2=DG2+1,^UTILITY($J,""DG"",D0,DG2)=(DGZD-4)_U_$P(DG3,U,1)_U_$P(DG3,U,DGZD)"
"RTN","DGPTFIC",47,0)
 S DIS("0AAAA")="F D1=0:0 S D1=$O(^DGPT(D0,""P"",D1)) Q:D1'>0  I $D(^DGPT(D0,""P"",D1,0)) S DG3=^(0) F DGZD=5:1:9 "_DG9_" X XAAAA"
"RTN","DGPTFIC",48,0)
 S L=0
"RTN","DGPTFIC",49,0)
 G GO
"RTN","DGPTFIC",50,0)
 Q
"RTN","DGPTFIC",51,0)
 ;
"RTN","DGPTFIC",52,0)
OUT ; -- Output called from Print template DGICD
"RTN","DGPTFIC",53,0)
 S DGZJ=$X,DG2=$S(DGZT["ICD":"^ICD9(",1:"^ICD0("),DIO=1
"RTN","DGPTFIC",54,0)
 F I=0:0 S I=$O(^UTILITY($J,"DG",D0,I)) Q:I'>0  D
"RTN","DGPTFIC",55,0)
 . S J=^(I),Y=$P($P(J,U,2),".",1) X ^DD("DD")
"RTN","DGPTFIC",56,0)
 . W:I>1 !?DGZJ W DGZT_$P(J,U,1)_"  "_Y
"RTN","DGPTFIC",57,0)
 . W ?DGZJ+23,$P(@(DG2_"$P(J,U,3)"_",0)"),U,1)
"RTN","DGPTFIC",58,0)
 . I DG5 S DJ=$S($D(DJ):DJ,1:0)+1,DTOT=1
"RTN","DGPTFIC",59,0)
 ;
"RTN","DGPTFIC",60,0)
 Q:'$D(^UTILITY($J,"DG",D0,"A"))  S J=^("A") F I=10,16:1:28 S K=$P(J,U,I) I K]"" W !?DGZJ,$S(I=10:"PRINCIPAL DIAGNOSIS",1:"SECONDARY DIAG "_(I-15)),?DGZJ+23,K I DG5 S DJ=$S($D(DJ):DJ,1:0)+1,DTOT=1
"RTN","DGPTFIC",61,0)
 Q
"RTN","DGPTFIC",62,0)
HDRR ;
"RTN","DGPTFIC",63,0)
 N HDR,OLDHDR
"RTN","DGPTFIC",64,0)
 S OLDHDR="FOUND______DATE________CODE" ;L30
"RTN","DGPTFIC",65,0)
 I CODESYS=9 S HDR="FOUND______DATE________ICD-9 CODE"
"RTN","DGPTFIC",66,0)
 I CODESYS=10 S HDR="FOUND______DATE________ICD-10 CODE"
"RTN","DGPTFIC",67,0)
 ;
"RTN","DGPTFIC",68,0)
DHD S PROMPT="Then search for: ",DIC("S")=$S($G(DIC("S"))="":"I DG1'[(U_+Y_U)",1:DIC("S")_"&(DG1'[(U_+Y_U))")
"RTN","DGPTFIC",69,0)
 F I=0:0 D  Q:Y<1  S DG1=DG1_+Y_U Q:$L(DG1)>235
"RTN","DGPTFIC",70,0)
 . S Y=$$ICDLOOK(DGTERM,DGVDT,DIC("A")) Q:Y<1  S DG1=DG1_+Y_U Q:$L(DG1)>235
"RTN","DGPTFIC",71,0)
 S DHD="" F I=2:1 S DHD=DHD_$S(I'=2:",  ",1:"")_$P(@(DIC_"$P(DG1,U,I)"_",0)"),U,1) Q:'$P(DG1,U,I+1)  I $L(DHD)>200 S DHD=DHD_"....." Q
"RTN","DGPTFIC",72,0)
 ;
"RTN","DGPTFIC",73,0)
C W !,"Total by PTF record or ICD count: P// " S Z="^PTF record^ICD count" R X:DTIME G Q:X=U!'$T X:X="" "S X=""P"" W X" D IN^DGHELP G H:%=-1 S DG5=$S(X="I":1,1:0) Q
"RTN","DGPTFIC",74,0)
 ;
"RTN","DGPTFIC",75,0)
H W !!,"The search may have more than 1 match per PTF record",!,"Type 'P' to total only PTF records",!,"Type 'I' to total all matches",! G C
"RTN","DGPTFIC",76,0)
H1 W !!,"Type 'R' to specify a range of codes",!,"     'E' to specify a series of codes to match exactly",!
"RTN","DGPTFIC",77,0)
 ;
"RTN","DGPTFIC",78,0)
RANGE ;
"RTN","DGPTFIC",79,0)
 S DIC(0)="AMEQZ" K LEXVDT
"RTN","DGPTFIC",80,0)
 S DGTERM=$S(DIC[9&(CODESET=9):"ICD",DIC[9&(CODESET=10):"10D",DIC[0&(CODESET=9):"ICP",DIC[0&(CODESET=10):"10P",1:"")
"RTN","DGPTFIC",81,0)
 S DGTERMIE=$S(DIC[9&(CODESET=9):1,DIC[9&(CODESET=10):30,DIC[0&(CODESET=9):2,DIC[0&(CODESET=10):31,1:"")
"RTN","DGPTFIC",82,0)
 S DGVDT=$$IMPDATE^LEXU("10D")
"RTN","DGPTFIC",83,0)
 I CODESET=9 S DGVDT=DGVDT-30000
"RTN","DGPTFIC",84,0)
 I CODESET=10 S DGVDT=DGVDT+3 ; 3 days later
"RTN","DGPTFIC",85,0)
 W !,"Search by Range or Exact match: E// "
"RTN","DGPTFIC",86,0)
 S Z="^RANGE^EXACT MATCH" R X:DTIME
"RTN","DGPTFIC",87,0)
 G Q:X=U!'$T X:X="" "S X=""E"" W X" D IN^DGHELP G H1:%=-1 S DGR=$S(X="R":1,1:0)
"RTN","DGPTFIC",88,0)
 S DG7=$S(DIC[9:"Diagnosis",1:"Surgical") G E:'DGR
"RTN","DGPTFIC",89,0)
 S DIC("A")="Start with "_DG7_" code: "
"RTN","DGPTFIC",90,0)
 S Y=$$ICDLOOK(DGTERM,DGVDT,DIC("A")) G Q:Y'>0 S DG1=$P(Y,U,2)_" "
"RTN","DGPTFIC",91,0)
F ;
"RTN","DGPTFIC",92,0)
 S DIC("A")="Go to "_DG7_" code: " S Y=$$ICDLOOK(DGTERM,DGVDT,DIC("A")) G Q:+Y<1
"RTN","DGPTFIC",93,0)
 S DG6=$P(Y,U,2)_"! " I DG6']DG1 W !,"Must be after start code",! G F
"RTN","DGPTFIC",94,0)
 S DHD=DG1_" to "_$P(DG6,"!",1)_" "_DG7_" Code Search" D C G Q:'$D(X),@("F"_$E(DIC,5))
"RTN","DGPTFIC",95,0)
 Q
"RTN","DGPTFIC",96,0)
 ;
"RTN","DGPTFIC",97,0)
E ;
"RTN","DGPTFIC",98,0)
 S DIC("A")="Select "_DG7_" code: "
"RTN","DGPTFIC",99,0)
 S Y=$$ICDLOOK(DGTERM,DGVDT,DIC("A"))
"RTN","DGPTFIC",100,0)
 G Q:Y'>0 S DG1=U_+Y_U D DHD G Q:'$D(X),@("E"_$E(DIC,5))
"RTN","DGPTFIC",101,0)
 Q
"RTN","DGPTFIC",102,0)
ICDLOOK(TERM,EFFDATE,PROMPT) ; icd lookup
"RTN","DGPTFIC",103,0)
 ; called from DGPTFIC and DGPTDRG
"RTN","DGPTFIC",104,0)
 K X,Y,LEXVDT
"RTN","DGPTFIC",105,0)
 N DIC ;,EFFDATE,IMPDATE,TERM,DGTEMP
"RTN","DGPTFIC",106,0)
 I '$G(DGDAT) S DGDAT=DT
"RTN","DGPTFIC",107,0)
 I TERM="10D"!(TERM="ICD") D DIAG
"RTN","DGPTFIC",108,0)
 I TERM="10P"!(TERM="ICP") D PROC
"RTN","DGPTFIC",109,0)
 Q $G(Y)
"RTN","DGPTFIC",110,0)
 ;
"RTN","DGPTFIC",111,0)
DIAG ; Ask diagnosis
"RTN","DGPTFIC",112,0)
 N DGSAV,DIR
"RTN","DGPTFIC",113,0)
 ;
"RTN","DGPTFIC",114,0)
 I $G(PROMPT)'="" S DIR("A")=PROMPT
"RTN","DGPTFIC",115,0)
 ;1/16/2014 String must be at least 3 chars and up to 30 chars, 
"RTN","DGPTFIC",116,0)
 ;but API's truncate, so no need to reject over 30. ICD-9 has no listed upper boundary
"RTN","DGPTFIC",117,0)
 ;lower boundary needs to be 1 to allow for "?"
"RTN","DGPTFIC",118,0)
 I CODESET=10 S DIR(0)="FAO^1:",DIR("?")="^D D1^DGICDGT",DIR("??")="^D D2^DGICDGT"
"RTN","DGPTFIC",119,0)
 I CODESET=9 S DIR(0)="FAO^1:",DIR("?")="^D D19^DGICDGT",DIR("??")="^D D29^DGICDGT"
"RTN","DGPTFIC",120,0)
 D ^DIR
"RTN","DGPTFIC",121,0)
 S DGSAV=$G(Y)
"RTN","DGPTFIC",122,0)
 I $D(DTOUT)!($D(DUOUT))!($D(DIRUT))!($D(DIROUT))!(Y="") S Y=-1 Q
"RTN","DGPTFIC",123,0)
 I CODESET=9 D ICDEN1^DGPTF5 ;maintain legacy search
"RTN","DGPTFIC",124,0)
 I CODESET=10 D LEX^DGICD
"RTN","DGPTFIC",125,0)
 I ($D(DUOUT))!($D(DIRUT)),DGSAV=$G(Y) G DIAG ;User entered an "^" during the search - start over.
"RTN","DGPTFIC",126,0)
 I $G(X)="",$G(Y)'=-1,$L($G(Y))=1,$L($G(DGSAV))=1 G DIAG ; If 1 character answer, repeat request
"RTN","DGPTFIC",127,0)
 I '$D(X),'$D(Y) G DIAG ;Invalid ICD-10 entry
"RTN","DGPTFIC",128,0)
 I $G(Y)<1,$G(X)=DGSAV G DIAG ; Invalid ICD-9 entry
"RTN","DGPTFIC",129,0)
 I $G(Y)>0 S X=+Y,Y=$$ICDDATA^ICDXCODE("DIAG",$G(X),EFFDATE)
"RTN","DGPTFIC",130,0)
 Q
"RTN","DGPTFIC",131,0)
 ;
"RTN","DGPTFIC",132,0)
PROC ; Ask Procedure
"RTN","DGPTFIC",133,0)
 N DGSAV,DIR,IMPDATE
"RTN","DGPTFIC",134,0)
 S IMPDATE=$$IMPDATE^LEXU(31)
"RTN","DGPTFIC",135,0)
 I $G(CODESET)="" S CODESET=$S(DT<$G(IMPDATE):9,1:10)
"RTN","DGPTFIC",136,0)
 I '$D(EFFDATE) S EFFDATE=$S(CODESET=10:IMPDATE+1,1:IMPDATE-1)
"RTN","DGPTFIC",137,0)
 ;
"RTN","DGPTFIC",138,0)
 S DIR(0)="FAO^1:12"
"RTN","DGPTFIC",139,0)
 I $G(PROMPT)'="" S DIR("A")=PROMPT
"RTN","DGPTFIC",140,0)
 I $G(CODESET)=10 S DIR("?")="^D P1^DGICDGT",DIR("??")="^D P2^DGICDGT"
"RTN","DGPTFIC",141,0)
 I $G(CODESET)=9 S DIR("?")="^D P19^DGICDGT",%=0
"RTN","DGPTFIC",142,0)
 D ^DIR
"RTN","DGPTFIC",143,0)
 S DGSAV=$G(Y)
"RTN","DGPTFIC",144,0)
 I $D(DTOUT)!($D(DUOUT))!($D(DIRUT))!($D(DIROUT))!(Y="") S Y=-1 Q
"RTN","DGPTFIC",145,0)
 I CODESET=9 S Y=$$SEARCH^ICDSAPI("PROC",,"QEMZ",EFFDATE) D
"RTN","DGPTFIC",146,0)
 . I +$G(DGSAV)>0,$G(Y)<1,'+$G(X) K X,Y ; Original Search value was valid but ICDSAPI returned -1
"RTN","DGPTFIC",147,0)
 .Q
"RTN","DGPTFIC",148,0)
 I CODESET=10 D
"RTN","DGPTFIC",149,0)
 . I X["*" S X=$P(X,"*",1)_$P(X,"*",2)
"RTN","DGPTFIC",150,0)
 . D ASK^DGICP
"RTN","DGPTFIC",151,0)
 ;
"RTN","DGPTFIC",152,0)
 I '$D(X),'$D(Y) G PROC ;Invalid ICD-10 entry
"RTN","DGPTFIC",153,0)
 I $G(Y)<1,$G(X)=DGSAV G PROC ; Invalid ICD-9 entry
"RTN","DGPTFIC",154,0)
 I $G(Y)>0 S X=+Y,Y=$$ICDDATA^ICDXCODE("PROC",$G(X),EFFDATE)
"RTN","DGPTFIC",155,0)
 K LEXVDT
"RTN","DGPTFIC",156,0)
 ;
"RTN","DGPTFIC",157,0)
 Q Y
"RTN","DGPTFJC")
0^5^B63564376^B46613574
"RTN","DGPTFJC",1,0)
DGPTFJC ;ALB/ADL - CLOSED PTF ;7/28/05 1:08pm
"RTN","DGPTFJC",2,0)
 ;;5.3;Registration;**158,510,517,590,636,635,701,729,785,850**;Aug 13, 1993;Build 171
"RTN","DGPTFJC",3,0)
 ;;ADL;;Update for CSV Project;;Mar 25, 2003
"RTN","DGPTFJC",4,0)
101 W !,"Enter '^N' for Screen N, RETURN for <MAS>,'^' to Abort: <MAS>//"
"RTN","DGPTFJC",5,0)
 D READ G Q^DGPTF:X=U,^DGPTFM:X="",^DGPTFJ:X?1"^".E D H G 101
"RTN","DGPTFJC",6,0)
 ;
"RTN","DGPTFJC",7,0)
H D HELP^DGPTFJ W ! Q
"RTN","DGPTFJC",8,0)
 ;
"RTN","DGPTFJC",9,0)
MAS W !!,"Enter '^N' for Screen N, RETURN for <",DGNUM,">,'^' to Abort: <",DGNUM,">//"
"RTN","DGPTFJC",10,0)
 D READ G Q^DGPTF:X=U,^DGPTFJ:X?1"^".E
"RTN","DGPTFJC",11,0)
 I X="" S (ST,ST1)=J+2 G @($S($D(DGZDIAG):"NDG",$D(DGZSER):"NSR",$D(DGZPRO):"NPR",$D(DGZSUR):"EN",+DGZPRF-1'=$P(DGZPRF,U,3):"NPS",1:"DONE")_"^DGPTFM")
"RTN","DGPTFJC",12,0)
 D H G MAS
"RTN","DGPTFJC",13,0)
 ;
"RTN","DGPTFJC",14,0)
401 S DGNUM=$S($D(S(DGZS0+1)):401_"-"_(DGZS0+1),1:"MAS")
"RTN","DGPTFJC",15,0)
 W !,"Enter '^N' for Screen N, RETURN for <",DGNUM,">,'^' to Abort: <",DGNUM,">//"
"RTN","DGPTFJC",16,0)
 D READ G Q^DGPTF:X=U,NEXM^DGPTFM5:X="",^DGPTFJ:X?1"^".E D H G 401
"RTN","DGPTFJC",17,0)
 ;
"RTN","DGPTFJC",18,0)
501 W !,"Enter '^N' for Screen N, RETURN for <",DGNUM,">,'^' to Abort: <",DGNUM,">//"
"RTN","DGPTFJC",19,0)
 D READ G Q^DGPTF:X=U,NEXM^DGPTFM4:X="",^DGPTFJ:X?1"^".E D H G 501
"RTN","DGPTFJC",20,0)
 ;
"RTN","DGPTFJC",21,0)
601 W !,"Enter '^N' for Screen N, RETURN for <",DGNUM,">,'^' to Abort: <",DGNUM,">//"
"RTN","DGPTFJC",22,0)
 D READ G Q^DGPTF:X=U,NEXP^DGPTFM6:X="",^DGPTFJ:X?1"^".E D H G 601
"RTN","DGPTFJC",23,0)
 ;
"RTN","DGPTFJC",24,0)
701 ;
"RTN","DGPTFJC",25,0)
 G ACT1^DGPTF41 ; new code
"RTN","DGPTFJC",26,0)
 ;
"RTN","DGPTFJC",27,0)
 ;Display screen prompt and process user response for 801 screen
"RTN","DGPTFJC",28,0)
801 W !,"Enter '^N' for Screen N, RETURN for <",DGNUM,">,'^' to Abort: <",DGNUM,">//"
"RTN","DGPTFJC",29,0)
 D READ G Q^DGPTF:X=U,NEXP^DGPTFM2:X="",^DGPTFJ:X?1"^".E D H G 801
"RTN","DGPTFJC",30,0)
READ ; -- read X
"RTN","DGPTFJC",31,0)
 R X:DTIME S:'$T X="^",DGPTOUT=""
"RTN","DGPTFJC",32,0)
 Q
"RTN","DGPTFJC",33,0)
 ;
"RTN","DGPTFJC",34,0)
EN ; DG*636 ; DG*5.3*850
"RTN","DGPTFJC",35,0)
 ; Called from Diagnosis fields in 501 movements
"RTN","DGPTFJC",36,0)
 N EFFDATE,DGTEMP,IMPDATE,DGINAC
"RTN","DGPTFJC",37,0)
 D EFFDATE^DGPTIC10(DA(1))
"RTN","DGPTFJC",38,0)
 S K=$S($D(K):K,1:1),DGER=0 ;S DGPTDAT=$$GETDATE^ICDGTDRG(DA(1))
"RTN","DGPTFJC",39,0)
 ;
"RTN","DGPTFJC",40,0)
 ;if there is a disch and a previous movement, if disch
"RTN","DGPTFJC",41,0)
 ;is >Oct 1 (next FY) and movement <Oct 1, then use the movement date
"RTN","DGPTFJC",42,0)
 I $G(DGZM0)="" S DGZM0=1,M(DGZM0)="0^"  ; to prevent sys err from TD5^DGPTTS2 and ptf quick load (DG*701/729)
"RTN","DGPTFJC",43,0)
 N DGPTMVDT I DGPTDAT=$P($G(^DGPT(DA(1),70)),U,1)&(DGPTDAT=$P($G(^DGPT(DA(1),"M",1,0)),U,10))&($D(M(DGZM0)))&($P($G(M(DGZM0)),U)'=1) S DGPTMVDT=$P($G(^DGPT(DA(1),"M",2,0)),U,10)
"RTN","DGPTFJC",44,0)
 ;next line is if using "Add a code" in MAS screen
"RTN","DGPTFJC",45,0)
 I '$G(DGPTMVDT)&($D(DGADD))&($G(DGMOV)'=1) S DGPTMVDT=$P($G(^DGPT(DA(1),"M",2,0)),U,10)
"RTN","DGPTFJC",46,0)
 I $G(DGPTMVDT) D
"RTN","DGPTFJC",47,0)
 .;if same calendar year
"RTN","DGPTFJC",48,0)
 .I $E(DGPTDAT,1,3)=$E(DGPTMVDT,1,3),$E(DGPTDAT,4,7)>0930,$E(DGPTMVDT,4,7)<1001 S DGPTDAT=DGPTMVDT Q
"RTN","DGPTFJC",49,0)
 .;if different calendar year
"RTN","DGPTFJC",50,0)
 .I ($E(DGPTDAT,1,3)-$E(DGPTMVDT,1,3))>1 S DGPTDAT=DGPTMVDT Q
"RTN","DGPTFJC",51,0)
 .I $E(DGPTMVDT,4,7)<1001 S DGPTDAT=DGPTMVDT Q
"RTN","DGPTFJC",52,0)
 .I $E(DGPTDAT,4,7)>0930 S DGPTDAT=DGPTMVDT Q
"RTN","DGPTFJC",53,0)
 I $G(DGPMT)!$G(DGQWK) K M(DGZM0),DGZM0  ; DG*701/729
"RTN","DGPTFJC",54,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+Y,EFFDATE)
"RTN","DGPTFJC",55,0)
 I +DGPTTMP<0 D MSG("Can not use inactive codes.") S DGER=1 Q
"RTN","DGPTFJC",56,0)
 I '$P(DGPTTMP,U,10) S DGINAC=$P(DGPTTMP,U,12) I DGINAC<EFFDATE D MSG("Can not use inactive codes.") S DGER=1 Q
"RTN","DGPTFJC",57,0)
 ;end DG*636
"RTN","DGPTFJC",58,0)
 ;===================================================================
"RTN","DGPTFJC",59,0)
 I $P(DGPTTMP,U,11)]""&($P(DGPTTMP,U,11)'=$S($D(^DPT(+^DGPT(DA(1),0),0)):$P(^(0),U,2),1:"M")) D:K<24 MSG($P(DGPTTMP,U,2)_" can only be used with "_$S($P(DGPTTMP,U,11)="F":"FEMALES",1:"MALES")) S K=K+1,DGER=1 Q
"RTN","DGPTFJC",60,0)
 ;
"RTN","DGPTFJC",61,0)
 ; -- can't enter a code already in the movement
"RTN","DGPTFJC",62,0)
 S %=$P(^DGPT(DA(1),"M",DA,0),U,DGI) I $D(^DGPT(DA(1),"M","AC",+Y,DA)),%'=+Y W !,"Cannot enter the same code twice." S DGER=1 Q
"RTN","DGPTFJC",63,0)
 ;
"RTN","DGPTFJC",64,0)
 S %=U_$P(^DGPT(DA(1),"M",DA,0),U,5,15),$P(%,U,7)=U ;take movement date out of %
"RTN","DGPTFJC",65,0)
 D NOT(+Y,%)
"RTN","DGPTFJC",66,0)
 Q:DGER
"RTN","DGPTFJC",67,0)
 D REQ(+Y,%)
"RTN","DGPTFJC",68,0)
 Q
"RTN","DGPTFJC",69,0)
 ;
"RTN","DGPTFJC",70,0)
EN1 ; called from 601 movement procedure codes and 401 Surgical operations
"RTN","DGPTFJC",71,0)
 S K=$S($D(K):K,1:1),DGER=0
"RTN","DGPTFJC",72,0)
 ;
"RTN","DGPTFJC",73,0)
 N EFFDATE,DGTEMP,IMPDATE,DGPTDAT
"RTN","DGPTFJC",74,0)
 S:$G(DGIT)=5 DGCR="AP6",DGSB="P"
"RTN","DGPTFJC",75,0)
 S:$G(DGIT)=8 DGCR="AO",DGSB="S"
"RTN","DGPTFJC",76,0)
 D EFFDATE^DGPTIC10(DA(1))
"RTN","DGPTFJC",77,0)
 ;S DGICD0=$$ICDDATA^ICDXCODE("PROC",+Y,EFFDATE)
"RTN","DGPTFJC",78,0)
 N DGPRDT S DGPRDT=$S(+$G(DGPROCD):+DGPROCD,1:+$G(DGPROCI))
"RTN","DGPTFJC",79,0)
 S:'+$G(DGPRDT) DGICD0=$$ICDDATA^ICDXCODE("PROC",+Y,EFFDATE)
"RTN","DGPTFJC",80,0)
 I +$G(DGPRDT) D
"RTN","DGPTFJC",81,0)
 . ;if procedure before ICD-10 era but the effective date (discharge date) is after then use the eff date and quit
"RTN","DGPTFJC",82,0)
 . I DGPRDT<IMPDATE,EFFDATE'<IMPDATE S DGICD0=$$ICDDATA^ICDXCODE("PROC",+Y,EFFDATE) Q
"RTN","DGPTFJC",83,0)
 . ;otherwise use the procedure date
"RTN","DGPTFJC",84,0)
 . S DGICD0=$$ICDDATA^ICDXCODE("PROC",+Y,DGPRDT)
"RTN","DGPTFJC",85,0)
 ;
"RTN","DGPTFJC",86,0)
 I +DGICD0,0!('$P(DGICD0,U,10)) S DGER=1 Q
"RTN","DGPTFJC",87,0)
 I $P(DGICD0,U,11)]""&($P(DGICD0,U,11)'=$S($D(^DPT(+^DGPT(DA(1),0),0)):$P(^(0),U,2),1:"M")) D:K<24 MSG($P(DGICD0,U,2)_" can only be used with "_$S($P(DGICD0,U,11)="F":"FEMALES",1:"MALES")) S K=K+1,DGER=1 Q
"RTN","DGPTFJC",88,0)
 S %=$P(^DGPT(DA(1),$G(DGSB),DA,0),U,DGI)
"RTN","DGPTFJC",89,0)
 I $D(^DGPT(DA(1),$G(DGSB),$G(DGCR),Y,DA)),%'=Y S DGER=1 D MSG("Cannot enter the same code more than once within a "_$S(DGSB="S":"401",1:"601")_" transaction") Q
"RTN","DGPTFJC",90,0)
 Q
"RTN","DGPTFJC",91,0)
EN2 ; Called from 701 movement procedure codes
"RTN","DGPTFJC",92,0)
 S K=$S($D(K):K,1:1),DGER=0
"RTN","DGPTFJC",93,0)
 N EFFDATE,DGTEMP,IMPDATE,DGPTDAT
"RTN","DGPTFJC",94,0)
 D EFFDATE^DGPTIC10(DA)
"RTN","DGPTFJC",95,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+Y,EFFDATE)
"RTN","DGPTFJC",96,0)
 ; 
"RTN","DGPTFJC",97,0)
 I +DGPTTMP<0!('$P(DGPTTMP,U,10)) S DGER=1 Q
"RTN","DGPTFJC",98,0)
 I $P(DGPTTMP,U,11)]""&($P(DGPTTMP,U,11)'=$S($D(^DPT(+^DGPT(DA,0),0)):$P(^(0),U,2),1:"M")) D:K<24 MSG($P(DGPTTMP,U,2)_" can only be used with "_$S($P(DGPTTMP,U,11)="F":"FEMALES",1:"MALES")) S K=K+1,DGER=1 Q
"RTN","DGPTFJC",99,0)
 ;
"RTN","DGPTFJC",100,0)
 S L=$P($S($D(^DGPT((DA),"401P")):^("401P"),1:0),U,1,5)
"RTN","DGPTFJC",101,0)
 S %=$P(L,U,DGI)
"RTN","DGPTFJC",102,0)
 S L=$P(L,U,1,DGI-1)_U_$P(L,U,DGI+1,5)
"RTN","DGPTFJC",103,0)
 I L[+Y D MSG("Cannot enter the same code twice.") S DGER=1 Q
"RTN","DGPTFJC",104,0)
 Q
"RTN","DGPTFJC",105,0)
EN3 ;Called from 701 movement diagnosis fields (top level)
"RTN","DGPTFJC",106,0)
 ; - EFFDATE := date of interest e.g. patient discharge date
"RTN","DGPTFJC",107,0)
 ; - IMPDATE := ICD-10 implementation date
"RTN","DGPTFJC",108,0)
 ; - DGTEMP  := temp variable to hold data from $$IMPDATE^DGPTIC10
"RTN","DGPTFJC",109,0)
 ;
"RTN","DGPTFJC",110,0)
 N EFFDATE,DGTEMP,IMPDATE,DGINAC
"RTN","DGPTFJC",111,0)
 ;
"RTN","DGPTFJC",112,0)
 D EFFDATE^DGPTIC10(DA)
"RTN","DGPTFJC",113,0)
 ;
"RTN","DGPTFJC",114,0)
 S K=$S($D(K):K,1:1),DGER=0,DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+Y,EFFDATE)
"RTN","DGPTFJC",115,0)
 I +DGPTTMP<0 D MSG("Can not use inactive codes.") S DGER=1 Q
"RTN","DGPTFJC",116,0)
 I '$P(DGPTTMP,U,10) S DGINAC=$P(DGPTTMP,U,12) I DGINAC<EFFDATE D MSG("Can not use inactive codes.") S DGER=1 Q
"RTN","DGPTFJC",117,0)
 ; 
"RTN","DGPTFJC",118,0)
 ; - unacceptable as primary DX
"RTN","DGPTFJC",119,0)
 I DGI=1,$P(DGPTTMP,U,5) D MSG("Not acceptable as a primary Diagnosis.") S DGER=1 Q
"RTN","DGPTFJC",120,0)
 ;
"RTN","DGPTFJC",121,0)
 I $P(DGPTTMP,U,11)]""&($P(DGPTTMP,U,11)'=$S($D(^DPT(+^DGPT(DA,0),0)):$P(^(0),U,2),1:"M")) D
"RTN","DGPTFJC",122,0)
 . D:K<24 MSG($P(DGPTTMP,U,2)_" can only be used with "_$S($P(DGPTTMP,U,11)="F":"FEMALES",1:"MALES")) S K=K+1,DGER=1 Q
"RTN","DGPTFJC",123,0)
 ;
"RTN","DGPTFJC",124,0)
 ; -- build string of 701 dx codes
"RTN","DGPTFJC",125,0)
 S %=$S($D(^DGPT(DA,70)):^(70),1:""),%=U_$P(%,U,10)_U_$P(%,U,16,24)_U
"RTN","DGPTFJC",126,0)
 S:$G(^DGPT(DA,71))'="" %=%_^(71)_U
"RTN","DGPTFJC",127,0)
 ;
"RTN","DGPTFJC",128,0)
 ; -- can't enter the same entry twice
"RTN","DGPTFJC",129,0)
 S $P(%,U,DGI+1)=U I %[(U_+Y_U) S DGER=1 D MSG("Cannot enter the same code twice.") Q
"RTN","DGPTFJC",130,0)
 ;
"RTN","DGPTFJC",131,0)
 D NOT(+Y,%)
"RTN","DGPTFJC",132,0)
 Q:DGER
"RTN","DGPTFJC",133,0)
 ;
"RTN","DGPTFJC",134,0)
 D REQ(+Y,%)
"RTN","DGPTFJC",135,0)
 Q
"RTN","DGPTFJC",136,0)
EN4 ; called from ??
"RTN","DGPTFJC",137,0)
 S K=$S($D(K):K,1:1),DGER=0,N=$$ICDDATA^ICDXCODE("DIAG",+Y,$$GETDATE^ICDGTDRG(DA)) I N<0!'$P(N,U,10) S DGER=1 Q
"RTN","DGPTFJC",138,0)
 I DGI=1,$P(N,U,5) S DGER=1 Q
"RTN","DGPTFJC",139,0)
 I $P(N,U,11)]""&($P(N,U,11)'=$S($D(^DPT(+^DGPT(DA(2),0),0)):$P(^(0),U,2),1:"M")) D:K<24 MSG($P(N,U,2)_" can only be used with "_$S($P(N,U,11)="F":"FEMALES",1:"MALES")) S K=K+1,DGER=1 Q
"RTN","DGPTFJC",140,0)
 S %=$S($D(^DGPT(DA(2),"C",DA(1),"CPT",DA,0)):^(0),1:""),%=U_$P(%,U,4,7)_U,$P(%,U,DGI+1)=U I %[(U_+Y_U) S DGER=1 Q
"RTN","DGPTFJC",141,0)
 D NOT(+Y,%)
"RTN","DGPTFJC",142,0)
 Q:DGER
"RTN","DGPTFJC",143,0)
 D REQ(DA(2),+Y,%)
"RTN","DGPTFJC",144,0)
 Q
"RTN","DGPTFJC",145,0)
EN5 ; DG*5.3*850
"RTN","DGPTFJC",146,0)
 ; called from the diagnosis input transforms in file 46
"RTN","DGPTFJC",147,0)
 N EFFDATE,DGTEMP,IMPDATE
"RTN","DGPTFJC",148,0)
 I $G(PTF) D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPTFJC",149,0)
 S K=$S($D(K):K,1:1),DGER=0,DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+Y,EFFDATE)
"RTN","DGPTFJC",150,0)
 I +DGPTTMP<0!('$P(DGPTTMP,U,10)) D MSG("Must be an active code.") S DGER=1 Q
"RTN","DGPTFJC",151,0)
 ;
"RTN","DGPTFJC",152,0)
 I $P(DGPTTMP,U,11)]""&($P(DGPTTMP,U,11)'=$S($D(^DPT(+^DGPT(PTF,0),0)):$P(^(0),U,2),1:"M")) D
"RTN","DGPTFJC",153,0)
 . D:K<24 MSG($P(DGPTTMP,U,2)_" can only be used with "_$S($P(DGPTTMP,U,11)="F":"FEMALES",1:"MALES")) S K=K+1,DGER=1 Q
"RTN","DGPTFJC",154,0)
 ;
"RTN","DGPTFJC",155,0)
 S K=^DGCPT(46,DA,0) I $P(K,U,4,7)_U_$P(K,U,15,18)[Y D MSG("Cannot enter the same code twice.") S DGER=1 Q
"RTN","DGPTFJC",156,0)
 Q
"RTN","DGPTFJC",157,0)
EN6 ; -- called from file 46; .01 field
"RTN","DGPTFJC",158,0)
 I $P($G(^(0)),U,2)?.N S DGER=1 Q
"RTN","DGPTFJC",159,0)
 S DGER=0,N=$$CPT^ICPTCOD(+Y,$$GETDATE^ICDGTDRG($G(DA))) I N<0!'$P(N,"^",7) S DGER=1 Q
"RTN","DGPTFJC",160,0)
 S L=0 F  S L=$O(^DGCPT(46,L)) Q:L'>0  I +$G(^(L,1))=$G(DGPRD),$P(^(1),U,3)=$G(PTF),+^(0)=Y,'$G(^(9)) S DGER=1 Q
"RTN","DGPTFJC",161,0)
 K L Q
"RTN","DGPTFJC",162,0)
 Q
"RTN","DGPTFJC",163,0)
 ;
"RTN","DGPTFJC",164,0)
REQ(DX,STRING) ; - is another ICD code required with this code
"RTN","DGPTFJC",165,0)
 ; -- input     DX - code being entered
"RTN","DGPTFJC",166,0)
 ;          STRING - string of code iens already entered for movement ("^123^456^789^")
"RTN","DGPTFJC",167,0)
 ; -- output - writes message if another code is required
"RTN","DGPTFJC",168,0)
 ;
"RTN","DGPTFJC",169,0)
 N I,IEN,DGI,DZ
"RTN","DGPTFJC",170,0)
 K ^TMP("DGPTF-R",$J)
"RTN","DGPTFJC",171,0)
 Q:$G(DX)<1
"RTN","DGPTFJC",172,0)
 Q:'$$REQ^ICDEX(DX,"DGPTF-R",1)
"RTN","DGPTFJC",173,0)
 ;
"RTN","DGPTFJC",174,0)
 S DGI=1 S DZ="" F I=0:0 S DZ=$O(^TMP("DGPTF-R",$J,"B",DZ)) Q:DZ=""  D  Q:DG1=1
"RTN","DGPTFJC",175,0)
 . S IEN=$O(^TMP("DGPTF-R",$J,"B",DZ,0)) Q:IEN<1  S DG1=0 I STRING[(U_IEN_U) S DG1=1 Q
"RTN","DGPTFJC",176,0)
 I DG1=0 D MSG($S(+DGPTTMP>0:$P(DGPTTMP,U,2),1:"")_" requires additional code.")
"RTN","DGPTFJC",177,0)
 K ^TMP("DGPTF-R",$J)
"RTN","DGPTFJC",178,0)
 Q
"RTN","DGPTFJC",179,0)
 ;
"RTN","DGPTFJC",180,0)
NOT(DX,STRING) ; - is icd code not to use with existing codes
"RTN","DGPTFJC",181,0)
 ; -- input     DX - code being entered
"RTN","DGPTFJC",182,0)
 ;          STRING - string of code iens already entered for movement ("^123^456^789^")
"RTN","DGPTFJC",183,0)
 ; -- output  DGER :=1 if error
"RTN","DGPTFJC",184,0)
 ;            writes message if not allowed
"RTN","DGPTFJC",185,0)
 ;
"RTN","DGPTFJC",186,0)
 N I,IEN,DGI,DZ
"RTN","DGPTFJC",187,0)
 K ^TMP("DGPTF-N",$J)
"RTN","DGPTFJC",188,0)
 S DGER=0
"RTN","DGPTFJC",189,0)
 Q:$G(DX)<1
"RTN","DGPTFJC",190,0)
 ;
"RTN","DGPTFJC",191,0)
 Q:'$$NOT^ICDEX(DX,"DGPTF-N",1)
"RTN","DGPTFJC",192,0)
 ;
"RTN","DGPTFJC",193,0)
 S DGI=1 S DZ="" F I=0:0 S DZ=$O(^TMP("DGPTF-N",$J,"B",DZ)) Q:DZ=""  D  Q:DGER
"RTN","DGPTFJC",194,0)
 . S IEN=$O(^TMP("DGPTF-N",$J,"B",DZ,0)) Q:IEN<1  I STRING[(U_IEN_U) S DGER=1 D  Q:DGER
"RTN","DGPTFJC",195,0)
 .. D MSG("Cannot use "_$$CODEC^ICDEX(80,DX)_"  with "_$$CODEC^ICDEX(80,IEN)) Q
"RTN","DGPTFJC",196,0)
 K ^TMP("DGPTF-N",$J)
"RTN","DGPTFJC",197,0)
 Q
"RTN","DGPTFJC",198,0)
MSG(TEXT) ;
"RTN","DGPTFJC",199,0)
 D EN^DDIOL(TEXT)
"RTN","DGPTFJC",200,0)
 Q
"RTN","DGPTFM")
0^11^B72739353^B44873663
"RTN","DGPTFM",1,0)
DGPTFM ;ALB/MTC - PTF OP-PRO-DIAG ;7/22/05 9:18am
"RTN","DGPTFM",2,0)
 ;;5.3;Registration;**510,517,590,594,606,635,683,696,664,850**;Aug 13, 1993;Build 171
"RTN","DGPTFM",3,0)
 ;
"RTN","DGPTFM",4,0)
 K M,S,M1,M2,M3,S1,S2,PS2,SDCLY,^TMP("PTF",$J)
"RTN","DGPTFM",5,0)
 N EFFDATE,IMPDATE,DGMOVCNT,DGSURCNT,DGPROCNT,DGMMORE,DGPMORE
"RTN","DGPTFM",6,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTFM",7,0)
 S DGMOVCNT=0,DGSURCNT=0,DGPROCNT=0
"RTN","DGPTFM",8,0)
 S I=0 F I1=1:1 S I=$O(^DGPT(PTF,"M",I)) Q:'I  S DGMOVCNT=$G(DGMOVCNT)+1
"RTN","DGPTFM",9,0)
 S I=0 F I1=1:1 S I=$O(^DGPT(PTF,"S",I)) Q:'I  S DGSURCNT=$G(DGSURCNT)+1
"RTN","DGPTFM",10,0)
 S I=0 F I1=1:1 S I=$O(^DGPT(PTF,"P",I)) Q:'I  S DGPROCNT=$G(DGPROCNT)+1
"RTN","DGPTFM",11,0)
 S I=0 F I1=1:1:5 S I=$P($G(^DGPT(PTF,"401P")),U,I1) I +I S DGPRCNT=$G(DGPRCNT)+1
"RTN","DGPTFM",12,0)
 S DGMMORE=$G(DGSURCNT)+$G(DGPROCNT)+$G(DGPRCNT)
"RTN","DGPTFM",13,0)
 S DGPMORE=$G(DGPROCNT)+$G(DGPRCNT)
"RTN","DGPTFM",14,0)
 ;
"RTN","DGPTFM",15,0)
GET ;
"RTN","DGPTFM",16,0)
 S I=0 F I1=1:1 S I=$O(^DGPT(PTF,"M",I)) Q:'I  D
"RTN","DGPTFM",17,0)
 . S (M3(I1),M(I1))=^(I,0),M(I1,82)=$G(^DGPT(PTF,"M",I,82))
"RTN","DGPTFM",18,0)
 .I $D(^DGPT(PTF,"M",I,"P")) S $P(M(I1),U,20)=^("P")
"RTN","DGPTFM",19,0)
 ;
"RTN","DGPTFM",20,0)
 K MT D ORDER^DGPTF K MT
"RTN","DGPTFM",21,0)
 D GETVAR^DGPTFM6,CL^SDCO21(DFN,$P(^DGPT(PTF,0),U,2),"",.SDCLY),MOB^DGPTFM2
"RTN","DGPTFM",22,0)
 S DGPC=I1-1
"RTN","DGPTFM",23,0)
 D WR ; creates header
"RTN","DGPTFM",24,0)
 K M1,M2,^UTILITY($J)
"RTN","DGPTFM",25,0)
 S ST=1,M2=0
"RTN","DGPTFM",26,0)
DIAG ;
"RTN","DGPTFM",27,0)
 K DGZSER,DGZPRO,DGZSUR S DGZDIAG=1
"RTN","DGPTFM",28,0)
 G PRO1:$Y>16 W !
"RTN","DGPTFM",29,0)
 F J=ST:1:PM S NL=1,L5=0,L6=J D WD2,WD G PRO1:$Y>16 D WD3^DGPTFM8 W !
"RTN","DGPTFM",30,0)
 S ST=1 G SER
"RTN","DGPTFM",31,0)
WD ;
"RTN","DGPTFM",32,0)
 N DGMPOA
"RTN","DGPTFM",33,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTFM",34,0)
 W !?2,"Movement Diagnosis: ",$$GETLABEL^DGPTIC10(DGPTDAT,"D")
"RTN","DGPTFM",35,0)
 F J1=1:1:11 I J1'=6 S L=$P(M(J),U,J1+4),L1=0,L3=1 I +L D
"RTN","DGPTFM",36,0)
 . S DGMPOA=$P(M(J,82),U,$S(J1<6:J1,1:J1-1))
"RTN","DGPTFM",37,0)
 . D:+L WD1
"RTN","DGPTFM",38,0)
 Q
"RTN","DGPTFM",39,0)
WD1 ;
"RTN","DGPTFM",40,0)
 S N=$$ICDDATA^ICDXCODE("DIAG",+L,EFFDATE),M2=M2+1
"RTN","DGPTFM",41,0)
 W !,?L1,$J(M2,3)," "
"RTN","DGPTFM",42,0)
 D WRITECOD^DGPTIC10("DIAG",+L,EFFDATE,1,0,0)
"RTN","DGPTFM",43,0)
 I $P(N,U,20)=30,$G(DGMPOA)'="" W:$X>73 !,"            " W " (POA="_DGMPOA_")" W:$G(DGMPOA)="" " (POA='')"
"RTN","DGPTFM",44,0)
 W $S(+N<1!('$P(N,U,10)):"*",1:"")
"RTN","DGPTFM",45,0)
 ;
"RTN","DGPTFM",46,0)
 K ^UTILITY($J,"M2",M2) S ^UTILITY($J,"M2",M2)=+M(J+L1)_U_J1 Q
"RTN","DGPTFM",47,0)
WD2 ;
"RTN","DGPTFM",48,0)
 N Z3
"RTN","DGPTFM",49,0)
 W !?L5,"Move #",+L6 S Z=M(L6),Z3=M3(L6) W:+Z=1 " D/C" S Y=$P(Z,U,10)\1 D D^DGPTUTL W " ",Y," "
"RTN","DGPTFM",50,0)
 W " <",$S($P(Z3,U,18)=1:"",1:"N"),"SC"_$S($P(Z3,U,26)="Y":",AO",1:"")_$S($P(Z3,U,27)="Y":",IR",1:"")_$S($P(Z3,U,28)="Y":",SWAC",1:"")_$S($P(Z3,U,32)="Y":",SHAD",1:"")_">"
"RTN","DGPTFM",51,0)
 I $D(^DIC(42.4,+$P(Z,U,2),0)) D
"RTN","DGPTFM",52,0)
 . I $P(^DIC(42.4,+$P(Z,U,2),0),U,2)'="" W $E($P(^DIC(42.4,+$P(Z,U,2),0),U,2),1,10)
"RTN","DGPTFM",53,0)
 . E  W $E($P(^(0),U,1),1,10)
"RTN","DGPTFM",54,0)
 Q
"RTN","DGPTFM",55,0)
 ;
"RTN","DGPTFM",56,0)
NDG D WR S I=0 K M,M1,M2 S M2=0 F I1=1:1 S I=$O(^DGPT(PTF,"M",I)) Q:I'>0  S M(I1)=^(I,0),M(I1,82)=$G(^DGPT(PTF,"M",I,82))
"RTN","DGPTFM",57,0)
 S PM=I1-1 D ORDER^DGPTF K MT G DIAG:$D(ST) G GET S ST=1
"RTN","DGPTFM",58,0)
 ;
"RTN","DGPTFM",59,0)
SER ;
"RTN","DGPTFM",60,0)
 K DGZDIAG,DGZPRO,DGZSUR
"RTN","DGPTFM",61,0)
 S DGZSER=1
"RTN","DGPTFM",62,0)
 ;G PRO1:$Y>19
"RTN","DGPTFM",63,0)
 K S1,S2
"RTN","DGPTFM",64,0)
 S S2=0 G SERV:ST G PRO
"RTN","DGPTFM",65,0)
 ;
"RTN","DGPTFM",66,0)
SERV ;
"RTN","DGPTFM",67,0)
 ;F J=ST:2:SU S NL=1,L5=0,L6=J D SD2 S L5=1,L6=J+1 D:$D(S(L6)) SD2 D SD G PRO1:$Y>11 D SD3^DGPTFM8 G PRO1:$Y>11 W !
"RTN","DGPTFM",68,0)
 F J=ST:1:SU S NL=1,L5=0,L6=J D SD2,SD D SD3^DGPTFM8 G:(J<SU) PRO1:$Y>12 W !
"RTN","DGPTFM",69,0)
 K DGZSER
"RTN","DGPTFM",70,0)
 G PRC^DGPTFM0
"RTN","DGPTFM",71,0)
SD ;
"RTN","DGPTFM",72,0)
 F J1=1:1:5 S L=$P(S(J),U,J1+7),L1=0,L3=1 D:+L SD1
"RTN","DGPTFM",73,0)
 Q
"RTN","DGPTFM",74,0)
SD1 ;
"RTN","DGPTFM",75,0)
 S N=$$ICDDATA^ICDXCODE("PROC",+L,EFFDATE)
"RTN","DGPTFM",76,0)
 S S2=S2+1
"RTN","DGPTFM",77,0)
 W !,?L1,$J(S2,3)," " D WRITECOD^DGPTIC10("PROC",+L,EFFDATE,1,0,0)  W $S(+N<1!('$P(N,U,10)):"*",1:"")
"RTN","DGPTFM",78,0)
 K S2(S2) S S2(S2)=J+L1_U_J1
"RTN","DGPTFM",79,0)
 Q
"RTN","DGPTFM",80,0)
 ;
"RTN","DGPTFM",81,0)
SD2 ;
"RTN","DGPTFM",82,0)
 S Y=+S(L6) D D^DGPTUTL W !?L5,L6,"-Surgery date: ",Y,$$GETLABEL^DGPTIC10(EFFDATE,"P")
"RTN","DGPTFM",83,0)
 Q
"RTN","DGPTFM",84,0)
NSR K S,S1,S2 S I=0 F I1=1:1 S I=$O(^DGPT(PTF,"S",I)) Q:I'>0  S S(I1)=^(I,0),S(I1,1)=I
"RTN","DGPTFM",85,0)
 S S2=0,SU=I1-1 D WR G SERV
"RTN","DGPTFM",86,0)
 ;
"RTN","DGPTFM",87,0)
WR W @IOF,HEAD,?70 S Z="<MAS>" D Z
"RTN","DGPTFM",88,0)
 Q
"RTN","DGPTFM",89,0)
PRO ;
"RTN","DGPTFM",90,0)
 K DGZSER,DGZDIAG,DGZSUR
"RTN","DGPTFM",91,0)
 S DGZPRO=1
"RTN","DGPTFM",92,0)
 G:$G(DGPRCNT) PRO1:$Y>14
"RTN","DGPTFM",93,0)
 K P1,P2 S ST=1,P2=0
"RTN","DGPTFM",94,0)
 G NPR:'$D(PROC)
"RTN","DGPTFM",95,0)
 ;
"RTN","DGPTFM",96,0)
PROC ; Display procedures in field 45.01 - 45.05
"RTN","DGPTFM",97,0)
 ;
"RTN","DGPTFM",98,0)
 D:$Y>14 WR
"RTN","DGPTFM",99,0)
 S PROC=$S($D(^DGPT(PTF,"401P")):^("401P"),1:"")
"RTN","DGPTFM",100,0)
 F PR=1:1:5 S DGPROC=$G(DGPROC)_$P(PROC,"^",PR)
"RTN","DGPTFM",101,0)
 K PR
"RTN","DGPTFM",102,0)
 W:DGPROC]"" !,"Procedures: ",$$GETLABEL^DGPTIC10(DGPTDAT,"P")
"RTN","DGPTFM",103,0)
 F J1=1:1:5 S L=$P(PROC,"^",J1) I L'="" S P2=P2+1 D
"RTN","DGPTFM",104,0)
 . S N=$$ICDDATA^ICDXCODE("PROC",+L,EFFDATE)
"RTN","DGPTFM",105,0)
 . S L2=$S(N:$P(N,U,2,99),1:"")
"RTN","DGPTFM",106,0)
 . W !,$J(P2,3)," " D WRITECOD^DGPTIC10("PROC",+L,EFFDATE,1,0,0)
"RTN","DGPTFM",107,0)
 . W $S(+N<1!('$P(N,U,10)):"*",1:"")
"RTN","DGPTFM",108,0)
 . K P2(P2) S P2(P2)=J1 W:$X>45 !
"RTN","DGPTFM",109,0)
 K DGZSER,DGZPRO,DGZDIAG,DGZSUR
"RTN","DGPTFM",110,0)
 ;
"RTN","DGPTFM",111,0)
ENC ;G PRO1:$Y>7,PRO1:'$P(DGZPRF,U,3)
"RTN","DGPTFM",112,0)
 G PRO1:'$P(DGZPRF,U,3)
"RTN","DGPTFM",113,0)
 G PRO1:$Y>12
"RTN","DGPTFM",114,0)
 ;
"RTN","DGPTFM",115,0)
PF S PS2=0,J=+DGZPRF,Y=+DGZPRF(J),DGSTRT=$S(+$P(DGZPRF,U,4):$P(DGZPRF,U,4),1:4),DGLST=0
"RTN","DGPTFM",116,0)
 D CL^SDCO21(DFN,+DGZPRF(J),"",.SDCLY),ICDINFO^DGAPI(DFN,PTF),XREF^DGPTFM21 ; load SCI info and DGN's for this service date
"RTN","DGPTFM",117,0)
 D D^DGPTUTL W !,J,"-CPT Capture Date/Time: ",Y W:($P(DGZPRF,U,2)-1!($G(PGBRK))) " (cont.)"
"RTN","DGPTFM",118,0)
 I $P(DGZPRF(J),U,2) W !,?5,"Referring or Ordering Provider: " S L=$P(DGZPRF(J),U,2) D PRV
"RTN","DGPTFM",119,0)
 W !,?5,"Rendering Provider: " S L=$P(DGZPRF(J),U,3) D PRV
"RTN","DGPTFM",120,0)
 I $P(DGZPRF(J),U,5) W !,?5,"Rendering Location: ",$P($G(^SC($P(DGZPRF(J),U,5),0)),U)
"RTN","DGPTFM",121,0)
 S (L1,PGBRK)=0
"RTN","DGPTFM",122,0)
 F K=$P(DGZPRF,U,2):1 Q:'$D(DGZPRF(J,K))  I '$G(DGZPRF(J,K,9)) S PS2=PS2+1 W !,?2,PS2," " D CPT^DGPTUTL1 D  Q:$Y+$G(DGZPRF(J,K+1,1))>16!($G(PGBRK))
"RTN","DGPTFM",123,0)
 .; Add 801 logic
"RTN","DGPTFM",124,0)
 . W !,?4 S $P(DS,"-",21)="" W DS," Related Diagnosis",$$GETLABEL^DGPTIC10(+DGZPRF($G(J)),"D")," ",DS
"RTN","DGPTFM",125,0)
 . F L1=DGSTRT:1:11 S DGLOC=$S(L1<8:L1,1:L1+7),CD=$P(DGZPRF(J,K),U,DGLOC) I CD D  I $Y+$G(CKSCI)>16 S PGBRK=1 Q
"RTN","DGPTFM",126,0)
 . . S N=$$ICDDATA^ICDXCODE("DIAG",CD,EFFDATE) ;,N=$S(N:$P(N,U,2,99),1:"")
"RTN","DGPTFM",127,0)
 . . D WRITECOD^DGPTIC10("DIAG",CD,EFFDATE,2,1,8)
"RTN","DGPTFM",128,0)
 . . W $S(+N<1!('$P(N,U,10)):"*",1:"")
"RTN","DGPTFM",129,0)
 . . D CKSCI($P(DGZPRF(J,K),U,DGLOC))
"RTN","DGPTFM",130,0)
 . S PS2(PS2)=J_U_K,CD=1,DGLOC=0,DGSTRT=4
"RTN","DGPTFM",131,0)
 I L1'=11,$S(L1<8:$P($G(DGZPRF(J,K)),U,L1+1,7),1:"")_$P($G(DGZPRF(J,K)),U,$S(L1<8:15,1:L1+8),18)?."^" S L1=11
"RTN","DGPTFM",132,0)
 I L1=11 S $P(DGZPRF,U,1,2)=$S($D(DGZPRF(J,K+1)):J_U_(K+1),1:J+1_U_1),$P(DGZPRF,U,4)="",PGBRK=0
"RTN","DGPTFM",133,0)
 E  S $P(DGZPRF,U,1,2)=J_U_K,$P(DGZPRF,U,4)=L1+1
"RTN","DGPTFM",134,0)
 K I,K,L,L1,CD,N G PRO1
"RTN","DGPTFM",135,0)
 ;
"RTN","DGPTFM",136,0)
CKSCI(IEN)      ;print SCI for each Diagnosis code
"RTN","DGPTFM",137,0)
 N DGINFO Q:'$D(XREF(IEN))
"RTN","DGPTFM",138,0)
 S DGINFO=$G(^DGICD9(46.1,(XREF(IEN)),0)),CKSCI=0
"RTN","DGPTFM",139,0)
 I 'DGINFO Q
"RTN","DGPTFM",140,0)
 F I=3,7,1,2,4,5,6,8 I $D(SDCLY(I)) S L=$S(I=3:8,I<4:8+I,1:7+I) D
"RTN","DGPTFM",141,0)
 .W ?45 S M=1,CKSCI=CKSCI+1
"RTN","DGPTFM",142,0)
 .W !?8
"RTN","DGPTFM",143,0)
 .W $P("Treated for AO Condition^Treated for IR Condition^Treated for SC Condition^Exposed to SW Asia Conditions^Treatment for MST^Treatment for Head/Neck CA^Related to Combat^Treatment for SHAD Condition",U,I)
"RTN","DGPTFM",144,0)
 .W ": ",$S($P(DGINFO,U,($S(I<3:I+2,I=3:2,1:I+1))):"YES",1:"NO"),!
"RTN","DGPTFM",145,0)
 Q  ;CKSCI
"RTN","DGPTFM",146,0)
 ;
"RTN","DGPTFM",147,0)
NPR S ST=1,PROC=$S($D(^DGPT(PTF,"401P")):^("401P"),1:"") D WR G PRO
"RTN","DGPTFM",148,0)
 ;
"RTN","DGPTFM",149,0)
NPS D WR G PF
"RTN","DGPTFM",150,0)
 ;
"RTN","DGPTFM",151,0)
DONE G EN1^DGPTF4
"RTN","DGPTFM",152,0)
PRO1 ;SET MENU TYPE AND DISPLAY MENU
"RTN","DGPTFM",153,0)
 N ICDVDT,ICPTVDT
"RTN","DGPTFM",154,0)
 I $G(PTF)'="",$G(EFFDATE)="" D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTFM",155,0)
 S (ICDVDT,ICPTVDT)=$S($G(EFFDATE)'="":EFFDATE,$D(PTF):$$GETDATE^ICDGTDRG(PTF),1:DT)
"RTN","DGPTFM",156,0)
 S DGNUM=$S($D(DGZDIAG)!($D(DGZPRO))!($D(DGZSER))!($D(DGZSUR)!(+DGZPRF-1'=$P(DGZPRF,U,3))):"MAS",1:"701") G MAS^DGPTFJC:DGST F X=$Y:1:(IOSL-9) W !
"RTN","DGPTFM",157,0)
 W !! S Z="Patient Movements:" W Z S Z=" "_$S(DGPTFE:"M=Add PM  X=Delete PM",1:"M=Edit Treat Spec/PM ")_"  A=Add Code  D=Delete Code  V=Edit Mov" W Z
"RTN","DGPTFM",158,0)
 W ! S Z="Surgical Episodes:" W Z S Z=" S=Add SE  Z=Delete SE  O=Add Code  C=Delete Code  J=Edit SE" W Z
"RTN","DGPTFM",159,0)
 W ! S Z="Procedure Records:" W Z S Z=" T=Add PR  R=Delete PR  P=Add Code  Q=Delete Code  E=Edit PR" W Z
"RTN","DGPTFM",160,0)
 W ! S Z="              801:" W Z S Z=" I=Add 801 Y=Delete 801 N=Add CPT   G=Delete CPT   F=Edit 801" W Z K Z
"RTN","DGPTFM",161,0)
 W !,"                   ^=Abort   <RET> to Continue:<",DGNUM,">// " R ANS:DTIME K DGNUM
"RTN","DGPTFM",162,0)
A S Z="^C Delete Code^A Add Code^O Add Code^P Add NOP^S Add SE^D Delete Code^M Add PM^X Delete PM^Z Delete SE^J Edit SE^Q Delete NOP^V Edit Move^"
"RTN","DGPTFM",163,0)
 S Z=Z_"T Add PR^R Delete PR^E Edit PR^I Add 801^Y Delete 801^N Add CPT^G Delete CPT^F Edit 801"
"RTN","DGPTFM",164,0)
 I 'DGPTFE S $P(Z,U,8,9)="M Edit treat Spec/PM"
"RTN","DGPTFM",165,0)
 S X=ANS G Q^DGPTF:ANS="^" G ^DGPTFJ:ANS?1"^".E S (A,X)=ANS,X=$E(X,1) D IN^DGHELP
"RTN","DGPTFM",166,0)
 I $P(^DGPT(PTF,0),U,4),X'="","IYNGF"[X W !,"***WARNING: This is a Fee Basis PTF record*** 801 encounters are not allowed." H 3 G DGPTFM
"RTN","DGPTFM",167,0)
 I ANS="" S (ST,ST1)=J+1 D:$D(DGZSUR) WR G @($S($D(DGZDIAG):"NDG",$D(DGZSER):"NSR",$D(DGZPRO):"NPR",$D(DGZSUR):"EN^DGPTFM0",+DGZPRF-1'=$P(DGZPRF,U,3):"NPS",1:"DONE"))
"RTN","DGPTFM",168,0)
 G HELP^DGPTFM1A:$G(%)=-1 S Z=$L(A)-1 G @(X_$S(X="X":"",1:"^DGPTFM1"))
"RTN","DGPTFM",169,0)
PRV I $D(^VA(200,L,0)) W $P(^(0),U) Q
"RTN","DGPTFM",170,0)
 W L Q
"RTN","DGPTFM",171,0)
X ;
"RTN","DGPTFM",172,0)
 I 'Z S:PM=1 RC=1 G X1:PM=1 W !!,"Delete Patient move <1",$S(PM<3:"",1:"-"_(PM-1)),">: " R RC:DTIME G ^DGPTFM:RC["^"!(RC="")
"RTN","DGPTFM",173,0)
 E  S RC=$E(A,2,99) W !
"RTN","DGPTFM",174,0)
 I +RC'=RC!('$D(M(RC))) W !!,"Enter the record # to delete from the PTF file, 1",$S(PM<3:"",1:"-"_(PM-1)) S Z=0 G X
"RTN","DGPTFM",175,0)
X1 I +M(RC)=1 W !,*7,"Cannot delete discharge movement",! H 3 G ^DGPTFM
"RTN","DGPTFM",176,0)
 S DIE="^DGPT("_PTF_",""M"",",DP=45.02,DR=".01///@",DA(1)=PTF,DA=+M(RC) D ^DIE K DR W "  ",RC,"-DELETED***" H 2 G ^DGPTFM
"RTN","DGPTFM",177,0)
Z ;
"RTN","DGPTFM",178,0)
 W @DGVI,Z,@DGVO Q  ; Writes reverse video
"RTN","DGPTFM",179,0)
EN D WR G EN^DGPTFM0
"RTN","DGPTFM",180,0)
 Q
"RTN","DGPTFM0")
0^12^B10244116^B11221145
"RTN","DGPTFM0",1,0)
DGPTFM0 ;ALB/MAC/ADL - ROUTINE TO DISPLAY PROCEDURE CODES ON THE MAS SCREEN IN PTF LOAD/EDIT ;AUG 1 1989@1200
"RTN","DGPTFM0",2,0)
 ;;5.3;Registration;**510,517,850**;Aug 13, 1993;Build 171
"RTN","DGPTFM0",3,0)
 ;;ADL;;Update for CSV Project;;Mar 25, 2003
"RTN","DGPTFM0",4,0)
EN ;
"RTN","DGPTFM0",5,0)
 N EFFDATE,IMPDATE
"RTN","DGPTFM0",6,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTFM0",7,0)
 S I=0 K P F I1=1:1 S I=$O(^DGPT(PTF,"P",I)) Q:I'>0  S P(I1)=^(I,0),P(I1,1)=I
"RTN","DGPTFM0",8,0)
 S P2=0,(L6,P)=0 F J=ST:1:(I1-1) S NL=1,L5=0,L6=J D PD2 D PD G PRO1^DGPTFM:$Y>12 W !
"RTN","DGPTFM0",9,0)
 G PRO^DGPTFM
"RTN","DGPTFM0",10,0)
PD ;
"RTN","DGPTFM0",11,0)
 F J1=1:1:5 S L=$P($G(P(J)),U,J1+4),L1=0,L3=1 D:+L PD1
"RTN","DGPTFM0",12,0)
 Q
"RTN","DGPTFM0",13,0)
PD1 ;
"RTN","DGPTFM0",14,0)
 N J2
"RTN","DGPTFM0",15,0)
 S J2=$$ICDDATA^ICDXCODE("PROC",+L,EFFDATE)
"RTN","DGPTFM0",16,0)
 S P2=P2+1
"RTN","DGPTFM0",17,0)
 W !,?L1,$J(P2,3)," " D WRITECOD^DGPTIC10("PROC",+L,EFFDATE,1,0,0) W $S(+J2<1!('$P(J2,U,10)):"*",1:"")
"RTN","DGPTFM0",18,0)
 K P2(P2) S P2(P2)=J+L1_U_J1
"RTN","DGPTFM0",19,0)
 Q
"RTN","DGPTFM0",20,0)
PD2 ;
"RTN","DGPTFM0",21,0)
 S Y=+$G(P(L6)) D D^DGPTUTL W !,L6,"-Procedure date: ",Y,$$GETLABEL^DGPTIC10(EFFDATE,"P")
"RTN","DGPTFM0",22,0)
 Q
"RTN","DGPTFM0",23,0)
PRC ;
"RTN","DGPTFM0",24,0)
 K DGZSER,DGZDIAG,DGZPRO S DGZSUR=1,J=0
"RTN","DGPTFM0",25,0)
 G:$G(DGMMORE) PRO1^DGPTFM:$Y>12
"RTN","DGPTFM0",26,0)
 K P1,P2 S ST=1,P2=0
"RTN","DGPTFM0",27,0)
 S ST=1 G EN
"RTN","DGPTFM0",28,0)
 ;
"RTN","DGPTFM0",29,0)
C ; -- help for surgery
"RTN","DGPTFM0",30,0)
 W !!,"Enter the item #'s of the operation codes, 1-",S2,", that you wish to delete:"
"RTN","DGPTFM0",31,0)
 F L=1:1:S2 Q:'$D(S2(L))  I $D(S(+S2(L),1)),$D(^DGPT(PTF,"S",+S(+S2(L),1),0)) D
"RTN","DGPTFM0",32,0)
 . W !?5,$J(L,2),": " D WRITECOD^DGPTIC10("PROC",+$P(^(0),"^",7+$P(S2(L),"^",2)),EFFDATE,1,0,0)
"RTN","DGPTFM0",33,0)
 . W !,"here",*7
"RTN","DGPTFM0",34,0)
 Q
"RTN","DGPTFM0",35,0)
 ;
"RTN","DGPTFM0",36,0)
DX ; -- help for dx's
"RTN","DGPTFM0",37,0)
 W !!,"Enter the item #'s of the diagnoses, 1-",M2,", that you wish to delete:"
"RTN","DGPTFM0",38,0)
 S UTL="^UTILITY($J,""M2"")"
"RTN","DGPTFM0",39,0)
 F L=1:1:M2 Q:'$D(@UTL@(L))  I $D(^DGPT(PTF,"M",+@UTL@(L),0)) D
"RTN","DGPTFM0",40,0)
 . W !?5,$J(L,2),": " D WRITECOD^DGPTIC10("DIAG",+$P(^(0),"^",4+$P(@UTL@(L),"^",2)),EFFDATE,1,0,0)
"RTN","DGPTFM0",41,0)
 K UTL,L Q
"RTN","DGPTFM0",42,0)
 ;
"RTN","DGPTFM0",43,0)
Q ; -- help for procedure
"RTN","DGPTFM0",44,0)
 W !!,"Type the number of the procedure - not the procedure code -"
"RTN","DGPTFM0",45,0)
 W !,"for the procedure you wish to delete.",!
"RTN","DGPTFM0",46,0)
 W !,"However, this deletion function is not applicable"
"RTN","DGPTFM0",47,0)
 W !,"for procedures listed under 'Procedure date:' displays."
"RTN","DGPTFM0",48,0)
 W !,"Delete these codes using the 601 screen functionality."
"RTN","DGPTFM0",49,0)
 Q
"RTN","DGPTFM0",50,0)
 ;
"RTN","DGPTFM0",51,0)
D G DEL:Z
"RTN","DGPTFM0",52,0)
 I $D(M2),'M2 W !,"No codes to delete",! H 2 G ^DGPTFM
"RTN","DGPTFM0",53,0)
D1 R !!,"Enter the item #'s of the ICD Diagnosis codes to delete: ",A1:DTIME
"RTN","DGPTFM0",54,0)
 I A1'?1N.NP G ^DGPTFM:"^"[A1 W:A1'["?" "  ???",*7 D DX G D1
"RTN","DGPTFM0",55,0)
 S A=A_A1
"RTN","DGPTFM0",56,0)
DEL D EXPL^DGPTUTL
"RTN","DGPTFM0",57,0)
 K X,A1 S DIE="^DGPT("_PTF_",""M"",",DA(1)=PTF W !!
"RTN","DGPTFM0",58,0)
 F J=1:1 S DP=45.02,L=+$P(DGA,",",J) Q:'L  S L1=$S($D(^UTILITY($J,"M2",L)):^(L),1:"Undefined, ") W:'L1 " ",L,"-",L1 I L1 S DA=+L1,DR=4+$P(L1,U,2)_"///@",DA(1)=PTF D ^DIE K DR W " ",L,"-Deleted, " W:$X>70 !
"RTN","DGPTFM0",59,0)
 S DGPTF=PTF,DGMOV=+L1 D CHK501^DGPTSCAN
"RTN","DGPTFM0",60,0)
 H 2 G ^DGPTFM
"RTN","DGPTFM0",61,0)
 Q
"RTN","DGPTFM0",62,0)
 ;
"RTN","DGPTFM1")
0^71^B18916672^B19186087
"RTN","DGPTFM1",1,0)
DGPTFM1 ;ALB/MTC - MASTER DIAG/OP/PRO CODE ENTER/EDIT ;4/4/05 3:08pm
"RTN","DGPTFM1",2,0)
 ;;5.3;Registration;**114,517,635,850**;Aug 13, 1993;Build 171
"RTN","DGPTFM1",3,0)
 ;
"RTN","DGPTFM1",4,0)
D G D^DGPTFM0
"RTN","DGPTFM1",5,0)
 ;
"RTN","DGPTFM1",6,0)
A S L="" F I=1:1:PM S L2=1 F J=5:1:9 I L2&(J'=10)&($P(M(I),U,J)="") S L=L_I_",",L2=0
"RTN","DGPTFM1",7,0)
 I L="" W !!,"There are no movement records that can be added to.",*7,*7 H 2 G ^DGPTFM
"RTN","DGPTFM1",8,0)
 S L=$E(L,1,$L(L)-1) I L=+L S RC=+L G A2
"RTN","DGPTFM1",9,0)
A1 I 'Z W !!,"Add to movement record <",L,"> : " R RC:DTIME G ^DGPTFM:RC[U!('$T)!(RC="")
"RTN","DGPTFM1",10,0)
 E  S RC=+$E(A,2,99)
"RTN","DGPTFM1",11,0)
A2 I +RC'=RC!(","_L_","'[(","_RC_",")) W !!,"Enter the movement record number to add ICD diagnosis to: ",L S Z="" G A1
"RTN","DGPTFM1",12,0)
 S DIE="^DGPT(",(DA,DGPTF)=PTF,DR="[DG501]",DGJUMP=""
"RTN","DGPTFM1",13,0)
 S DGMOV=+M(RC),DGADD=1 D ^DIE K DR,DA,DGADD,DIE,DGJUMP,DGCODSYS,DGXX,DGTYPE D CHK501^DGPTSCAN K DGPTF,DGMOV,DGADD
"RTN","DGPTFM1",14,0)
 G ^DGPTFM
"RTN","DGPTFM1",15,0)
 ;
"RTN","DGPTFM1",16,0)
M I DGPTFE G ADD^DGPTFM4
"RTN","DGPTFM1",17,0)
 S X=80 X ^%ZOSF("RM") D MVT K T,AM,M I $L(DGVO_DGVI)>4 S X=132 X ^%ZOSF("RM")
"RTN","DGPTFM1",18,0)
 G ^DGPTFM:'$D(DGPMDA) S DA=$S('$D(^DGPM(DGPMDA,"PTF")):"",1:$P(^("PTF"),"^",3)) G ^DGPTFM:'$D(^DGPT(PTF,"M",+DA,0)) S Y=^(0)
"RTN","DGPTFM1",19,0)
 S X=$S($D(^DIC(42.4,+$P(Y,U,2),0)):$P(^(0),U,1),1:""),Y=$P(Y,U,10)
"RTN","DGPTFM1",20,0)
 D D^DGPTUTL K M W !,"Editing ",$S(DA=1:"Discharge ",1:""),"Movement " W:Y]"" "of ",Y W "  Losing Specialty ",X
"RTN","DGPTFM1",21,0)
 S DGMOV=DA,(DA,DGPTF)=PTF,DIE="^DGPT(",DR="[DG501]",DGJUMP="1-2" D ^DIE
"RTN","DGPTFM1",22,0)
 K DA,DR,DIE,DGJUMP,DGCODSYS,DGXX,DGTYPE D CHK501^DGPTSCAN K DGPTF,DGMOV
"RTN","DGPTFM1",23,0)
 ;- update MT indicator after edit movement
"RTN","DGPTFM1",24,0)
 N DGPMCA,DGPMAN D PM^DGPTUTL
"RTN","DGPTFM1",25,0)
 I '$G(DGADM) S DGADM=+^DGPT(PTF,0)
"RTN","DGPTFM1",26,0)
 D MT^DGPTUTL
"RTN","DGPTFM1",27,0)
 G ^DGPTFM
"RTN","DGPTFM1",28,0)
 ;
"RTN","DGPTFM1",29,0)
Z I 'SU W !,"No surgeries to delete",! H 3 G ^DGPTFM
"RTN","DGPTFM1",30,0)
 S ST=1 I 'Z W !!,"Delete surgery record <1",$S(SU=1:"",1:"-"_SU),">: " R RC:DTIME G ^DGPTFM:'$T!(RC[U)!(RC="")
"RTN","DGPTFM1",31,0)
 E  S RC=$E(A,2,99) W !
"RTN","DGPTFM1",32,0)
 I +RC'=RC!('$D(S(RC))) W !!,"Enter the record # to delete from the PTF file, 1",$S(SU=1:"",1:"-"_SU) S Z=0 G Z
"RTN","DGPTFM1",33,0)
 K DA S DIK="^DGPT("_PTF_",""S"",",ST=1,(DGPTF,DA(1))=PTF,(DGSUR,DA)=+S(RC,1) D ^DIK K DA W "  ",RC,"-DELETED***" D CHK401^DGPTSCAN K DGPTF,DGSUR H 2 G ^DGPTFM
"RTN","DGPTFM1",34,0)
 ;
"RTN","DGPTFM1",35,0)
C G CEL:Z
"RTN","DGPTFM1",36,0)
 I '$D(S2) W !,"View codes first",! H 2 G ^DGPTFM
"RTN","DGPTFM1",37,0)
 I 'S2 W !,"No codes to delete",! H 2 G ^DGPTFM
"RTN","DGPTFM1",38,0)
C1 R !!,"Enter the item #'s of the ICD operation codes to delete: ",A1:DTIME
"RTN","DGPTFM1",39,0)
 S:'$T A1=U I A1'?1N.NP G ^DGPTFM:"^"[A1 W:A1'["?" "  ???",*7 D C^DGPTFM0 G C1
"RTN","DGPTFM1",40,0)
 S A=A_A1
"RTN","DGPTFM1",41,0)
CEL D EXPL^DGPTUTL
"RTN","DGPTFM1",42,0)
 K X,A1 S DA(1)=PTF,DP=45.01 W !!
"RTN","DGPTFM1",43,0)
 F J=1:1 S L=+$P(DGA,",",J),DIE="^DGPT("_PTF_",""S""," Q:'L  D
"RTN","DGPTFM1",44,0)
 .S L1=$S($D(S2(L)):S2(L),1:"Undefined, ") W:'L1 " ",L,"-",L1
"RTN","DGPTFM1",45,0)
 .I L1 S (DA,DGSUR)=+S(+L1,1),(DA(1),DGPTF)=PTF,DR=7+$P(S2(+L),U,2)_"///@" D ^DIE,CEL1
"RTN","DGPTFM1",46,0)
 H 3 S ST=1 G ^DGPTFM
"RTN","DGPTFM1",47,0)
 ;
"RTN","DGPTFM1",48,0)
CEL1 ;
"RTN","DGPTFM1",49,0)
 K DR W " ",L,"-Deleted, " W:$X>70 ! D CHK401^DGPTSCAN K DGPTF,DGSUR
"RTN","DGPTFM1",50,0)
 Q
"RTN","DGPTFM1",51,0)
 ;
"RTN","DGPTFM1",52,0)
O S L="" F I=1:1:SU S L2=1 F J=8:1:12 I L2,$P(S(I),U,J)="" S L=L_I_",",L2=0
"RTN","DGPTFM1",53,0)
 I L="" W !!,"There are no surgery records that can be added to.",*7 H 2 S ST=1 G ^DGPTFM
"RTN","DGPTFM1",54,0)
 S L=$E(L,1,$L(L)-1) I L=+L S RC=+L G O2
"RTN","DGPTFM1",55,0)
O1 I 'Z S ST=1 W !!,"Add to surgery record <",L,"> : " R RC:DTIME G ^DGPTFM:'$T!(RC[U)!(RC="")
"RTN","DGPTFM1",56,0)
 E  S RC=+$E(A,2,99)
"RTN","DGPTFM1",57,0)
O2 I +RC'=RC!(","_L_","'[(","_RC_",")) W !!,"Enter the surgery record number to add ICD operation codes to: ",L G O1:'Z S Z="" G O1
"RTN","DGPTFM1",58,0)
 S DIE="^DGPT(",(DGPTF,DA)=PTF,DR="[DG401]"
"RTN","DGPTFM1",59,0)
 S ST=1,DGZS0=RC,DGADD=1,DGSUR=S(DGZS0,1) D ^DIE,CHK401^DGPTSCAN K DR,DGPTF,DGSUR,DGADD G ^DGPTFM
"RTN","DGPTFM1",60,0)
 ;
"RTN","DGPTFM1",61,0)
S G ADD^DGPTFM5
"RTN","DGPTFM1",62,0)
V S DGZM0=0 G ^DGPTFM4
"RTN","DGPTFM1",63,0)
J S DGZS0=0 G ^DGPTFM5
"RTN","DGPTFM1",64,0)
Q G QEL:Z
"RTN","DGPTFM1",65,0)
QQ R !!,"Enter the item #'s of the ICD Procedure codes to delete: ",A1:DTIME
"RTN","DGPTFM1",66,0)
 S:'$T A1=U I A1'?1N.NP G ^DGPTFM:"^"[A1 W:A1'["?" "  ???",*7 D Q^DGPTFM0 G QQ
"RTN","DGPTFM1",67,0)
 S A=A_A1
"RTN","DGPTFM1",68,0)
QEL S DGA=$E(A,2,999) K X,A1 S DIE="^DGPT(",DA=PTF W !!
"RTN","DGPTFM1",69,0)
 F J=1:1 S DP=45,L=+$P(DGA,",",J) Q:'L  D
"RTN","DGPTFM1",70,0)
 . S L1=$S($D(P2(L)):P2(L),1:"Undefined, ")
"RTN","DGPTFM1",71,0)
 . W:'L1 " ",L,"-",L1
"RTN","DGPTFM1",72,0)
 . I L1 S DR=+P2(+L)/100+45_"///@",DA(1)=PTF D
"RTN","DGPTFM1",73,0)
 .. D ^DIE
"RTN","DGPTFM1",74,0)
 .. K DR W " ",L,"-Deleted, " W:$X>70 !
"RTN","DGPTFM1",75,0)
 H 1 G ^DGPTFM
"RTN","DGPTFM1",76,0)
 ;
"RTN","DGPTFM1",77,0)
P G P^DGPTFM6
"RTN","DGPTFM1",78,0)
Q1 Q
"RTN","DGPTFM1",79,0)
T G ^DGPTFM6
"RTN","DGPTFM1",80,0)
R G R^DGPTFM4
"RTN","DGPTFM1",81,0)
E I $D(^DGPT(PTF,70)),+^(70)>2871000 D MOB^DGPTFM6 G SET^DGPTFM6
"RTN","DGPTFM1",82,0)
 I DT>2871000 D MOB^DGPTFM6 G SET^DGPTFM6
"RTN","DGPTFM1",83,0)
 G ^DGPTFM6
"RTN","DGPTFM1",84,0)
 ;
"RTN","DGPTFM1",85,0)
MVT ;
"RTN","DGPTFM1",86,0)
 N PTF,DGPMAN
"RTN","DGPTFM1",87,0)
 S DGPMT=6 D CA^DGPMV S DGPMDA=+Y
"RTN","DGPTFM1",88,0)
 K DGPMT Q
"RTN","DGPTFM1",89,0)
I G ADD^DGPTFM2
"RTN","DGPTFM1",90,0)
Y G DEL^DGPTFM2
"RTN","DGPTFM1",91,0)
N G N^DGPTFM2
"RTN","DGPTFM1",92,0)
G G DC^DGPTFM2
"RTN","DGPTFM1",93,0)
F G F^DGPTFM2
"RTN","DGPTFM1",94,0)
 Q
"RTN","DGPTFM2")
0^87^B50700609^B46843310
"RTN","DGPTFM2",1,0)
DGPTFM2 ;ALB/DWS - MASTER PROFESSIONAL SERVICE ENTER/EDIT ;6/16/05 8:33am
"RTN","DGPTFM2",2,0)
 ;;5.3;Registration;**517,590,606,635,850**;Aug 13, 1993;Build 171
"RTN","DGPTFM2",3,0)
ADD ;ADD CPT RECORD
"RTN","DGPTFM2",4,0)
 N DGZP S DGZP=0 S:'$D(^DGPT(PTF,"C",0)) ^(0)="^45.06D^^"
"RTN","DGPTFM2",5,0)
 S DIC="^DGPT("_PTF_",""C"",",DIC(0)="AELQMXZ",DA(1)=PTF,DLAYGO=45
"RTN","DGPTFM2",6,0)
 D ^DIC K DIC,DLAYGO G ^DGPTFM:Y'>0,^DGPTFM:'$D(^DGPT(PTF,"C",+Y))
"RTN","DGPTFM2",7,0)
 S DGPSM=+Y
"RTN","DGPTFM2",8,0)
 I '$P(Y,U,3) S DIR("A")="Do you want to edit this CPT RECORD DATE/TIME?",DIR(0)="Y",DIR("B")="YES" D ^DIR G ^DGPTFM:'Y!$D(DIRUT)
"RTN","DGPTFM2",9,0)
 D MOB
"RTN","DGPTFM2",10,0)
 I $P(DGZPRF,U,3) F I=1:1:$P(DGZPRF,U,3) S:DGZPRF(I,0)=DGPSM DGZP=I
"RTN","DGPTFM2",11,0)
 K I G:'DGZP ^DGPTFM S X="A,B",DGPSM=0
"RTN","DGPTFM2",12,0)
ED G HELP^DGPTUTL1:X'["A"&(X'["B")&(X'["a")&(X'["b") K DA
"RTN","DGPTFM2",13,0)
 S DGJUMP=X,DGPRD=+DGZPRF(DGZP),X1="^801"
"RTN","DGPTFM2",14,0)
 I X["A"!(X["a") D  L -^DGPT(PTF) I FLAG D MOB,REQ^DGPTFM3 G EXIT
"RTN","DGPTFM2",15,0)
 .S DA(1)=PTF,DIE="^DGPT("_PTF_",""C"",",(DA,REC)=DGZPRF(DGZP,0)
"RTN","DGPTFM2",16,0)
 .S DR=".01;.02;.03;.05;.09////0",DIC(0)="AELQZ" Q:'$$LOCK
"RTN","DGPTFM2",17,0)
 .D FMDIE S FLAG=$D(Y)>9!$D(DOUT)!'$D(DA) Q:$D(Y)>9!'$D(DA)
"RTN","DGPTFM2",18,0)
 .S DGPRD=+^DGPT(PTF,"C",DGZPRF(DGZP,0),0) Q:+DGZPRF(DGZP)=DGPRD
"RTN","DGPTFM2",19,0)
 .S DGI=0 F  S DGI=$O(^DGCPT(46,"C",PTF,DGI)) Q:DGI'>0  D  Q:$D(Y)>9!'$D(DA)
"RTN","DGPTFM2",20,0)
 ..Q:+^DGCPT(46,DGI,1)'=+DGZPRF(DGZP)  Q:$D(^(9))
"RTN","DGPTFM2",21,0)
 ..S DR=".14////"_DGPRD,(DA,REC)=DGI,DIE="^DGCPT(46," D FMDIE
"RTN","DGPTFM2",22,0)
 ..I $D(Y)>9!'$D(DA) S FLAG=1
"RTN","DGPTFM2",23,0)
 ..;ADD IMPDATE check to see if Edit on date changed coding system
"RTN","DGPTFM2",24,0)
 . I $P(DGZPRF(DGZP),U)<IMPDATE,DGPRD'<IMPDATE D EN^DDIOL("Primary Diagnosis changing from ICD-9 to ICD-10. You must edit the Diagnosis.") S DGJUMP="B"
"RTN","DGPTFM2",25,0)
 . I $P(DGZPRF(DGZP),U)'<IMPDATE,DGPRD<IMPDATE D EN^DDIOL("Primary Diagnosis changing from ICD-10 to ICD-9. You must edit the Diagnosis.") S DGJUMP="B"
"RTN","DGPTFM2",26,0)
 .S $P(DGZPRF(DGZP),U)=DGPRD
"RTN","DGPTFM2",27,0)
JUMP I DGJUMP["B"!(DGJUMP["b") S DGI=0 D CL^SDCO21(DFN,DGPRD,"",.SDCLY) D
"RTN","DGPTFM2",28,0)
 .F  S DGI=$O(^DGCPT(46,"C",PTF,DGI)) Q:DGI'>0  I +^DGCPT(46,DGI,1)=+DGZPRF(DGZP),'$G(^(9)) D  I $D(DUOUT) Q:'DGDIAG  K DUOUT S DGI=0
"RTN","DGPTFM2",29,0)
 ..S (DA,REC)=DGI,DR=".01;",DIE="^DGCPT(46," D GETINFO^DGPTFM21
"RTN","DGPTFM2",30,0)
 .Q:$D(DUOUT)
"RTN","DGPTFM2",31,0)
 .F  D  D ^DIC S A=0 Q:Y'>0  D SED Q:$D(DUOUT)
"RTN","DGPTFM2",32,0)
 ..S DA=PTF,DIC="^DGCPT(46,",DIC(0)="AELMQZ",DLAYGO=46
"RTN","DGPTFM2",33,0)
 ..S DIC("S")="D EN6^DGPTFJC I 'DGER"
"RTN","DGPTFM2",34,0)
 I $D(DUOUT),$G(DGDIAG) K DUOUT G JUMP
"RTN","DGPTFM2",35,0)
 I $D(DUOUT),$G(DGJUMP)["A"!($G(DGJUMP)["a") S X=DGJUMP K DUOUT G ED
"RTN","DGPTFM2",36,0)
 K DR,DIE,DIC,DA,DGI,DGJUMP,DGPRD,DLAYGO,XREF
"RTN","DGPTFM2",37,0)
 D REQ^DGPTFM3,MOB H:RFL 2 K RFL
"RTN","DGPTFM2",38,0)
 G ^DGPTFM:'$D(DGZPRF(DGZP,0)),^DGPTFM:'$D(^DGPT(PTF,"C",DGZPRF(DGZP,0)))
"RTN","DGPTFM2",39,0)
SET D MOB:'$D(DGZPRF) S:'$D(DGZP) DGZP=1 I $G(DGZPRF(DGZP,0))="" K DGZPRF(DGZP) G NEXP
"RTN","DGPTFM2",40,0)
WRT G ^DGPTFM:'$D(^DGPT(PTF,"C",DGZPRF(DGZP,0),0)) S J=DGZP W @IOF,HEAD,?68
"RTN","DGPTFM2",41,0)
 N DGNUM S Z="<"_DGZP_">" W @DGVI,Z,@DGVO,!! S Y=+DGZPRF(J),Z="A"
"RTN","DGPTFM2",42,0)
 D D^DGPTUTL,Z^DGPTFM5 W ?5,"CPT Record Date/Time: ",Y
"RTN","DGPTFM2",43,0)
 I $P(DGZPRF(J),U,8)'="" W ?55,"Visit Service Category: ",$P(DGZPRF(J),U,8)
"RTN","DGPTFM2",44,0)
 I $P(DGZPRF(J),U,2) W !,?5,"Referring or Ordering Provider: " D
"RTN","DGPTFM2",45,0)
 .S L=$P(DGZPRF(J),U,2) D PRV^DGPTFM
"RTN","DGPTFM2",46,0)
 W !,?5,"Rendering Provider: " S L=$P(DGZPRF(J),U,3) D PRV^DGPTFM
"RTN","DGPTFM2",47,0)
 I $P(DGZPRF(J),U,5) W !,?5,"Rendering Location: ",$P($G(^SC($P(DGZPRF(J),U,5),0)),U)
"RTN","DGPTFM2",48,0)
 W !! S Z="B" D Z^DGPTFM5 W "  Procedures:   "
"RTN","DGPTFM2",49,0)
 F K=$P(DGZPRF,U,2):1 Q:'$D(DGZPRF(J,K))  I '$D(DGZPRF(J,K,9)) D
"RTN","DGPTFM2",50,0)
 .W ?5 D CPT^DGPTUTL1 W ! Q:$Y>16
"RTN","DGPTFM2",51,0)
 F I=1:1:(IOSL-$Y-5) W !
"RTN","DGPTFM2",52,0)
 K I,J,K,L,Z S DGNUM=$S($D(DGZPRF(DGZP+1)):DGZP+1,1:"MAS")
"RTN","DGPTFM2",53,0)
 G 801^DGPTFJC:DGST
"RTN","DGPTFM2",54,0)
 S DIR("A")="Enter <RET> to continue, A-B to edit, 'I' to add an 801,"
"RTN","DGPTFM2",55,0)
 S DIR("A")=DIR("A")_$C(10,13)_"the number of an 801 screen, ?? to list 801 screens,"
"RTN","DGPTFM2",56,0)
 S DIR("A")=DIR("A")_$C(10,13)_"'S' for Send to PCE,"
"RTN","DGPTFM2",57,0)
 S DIR("A")=DIR("A")_" '^N' for screen N, or '^' to abort:"
"RTN","DGPTFM2",58,0)
 S DIR("?")="^D HELP^DGPTUTL1"
"RTN","DGPTFM2",59,0)
 S DIR(0)="F^OU",DIR("B")=DGNUM,DIR("??")="^D DISP^DGPTUTL1" D ^DIR
"RTN","DGPTFM2",60,0)
 K DIR G:$D(DIRUT) Q^DGPTF:X="^"
"RTN","DGPTFM2",61,0)
 I X?1"^".E S DGPTSCRN=801 G ^DGPTFJ
"RTN","DGPTFM2",62,0)
 I X="MAS" S DGZP=1 G ^DGPTFM
"RTN","DGPTFM2",63,0)
 G ADD:X="I"!(X="i"),HELP^DGPTUTL1:X["?"
"RTN","DGPTFM2",64,0)
 I X?1N.N,$D(DGZPRF(X)) S DGZP=X G SET
"RTN","DGPTFM2",65,0)
 I X["A"!(X["B")!(X["a")!(X["b") G ED
"RTN","DGPTFM2",66,0)
 I X="S"!(X="s") D PCE G WRT
"RTN","DGPTFM2",67,0)
 D HELP^DGPTUTL1 R !!,"Enter <RET>: ",X:DTIME G WRT
"RTN","DGPTFM2",68,0)
PCE L +^DGPT(PTF):2
"RTN","DGPTFM2",69,0)
 I '$T W !,"CPT Record is being edited by another user" H 2 Q
"RTN","DGPTFM2",70,0)
 D ICDINFO^DGAPI(DFN,PTF),XREF^DGPTFM21
"RTN","DGPTFM2",71,0)
 S RES=$$DATA2PCE^DGAPI1(DFN,PTF,DGZP)
"RTN","DGPTFM2",72,0)
 I RES=1 L -^DGPT(PTF) W !,"PTF Record sent to PCE" H 2 Q
"RTN","DGPTFM2",73,0)
 W @IOF
"RTN","DGPTFM2",74,0)
 ;F I=1:1 Q:'$D(^TMP("DGPAPI",$J,"DIERR",$J,1,"TEXT",I))  W !,^(I)
"RTN","DGPTFM2",75,0)
 W !,"The PTF Record may not have been filed in PCE due to errors."
"RTN","DGPTFM2",76,0)
 W !,"Press return to continue." R X:DTIME
"RTN","DGPTFM2",77,0)
 L -^DGPT(PTF) Q
"RTN","DGPTFM2",78,0)
NEXP S DGZP=DGZP+1
"RTN","DGPTFM2",79,0)
 I '$D(DGZPRF(DGZP)) W:DGZP=2 !,"NO PROF. SERVICES TO EDIT." G EXIT
"RTN","DGPTFM2",80,0)
 G SET
"RTN","DGPTFM2",81,0)
EXIT K DGPSM H 2 S DGZP=1 G ^DGPTFM
"RTN","DGPTFM2",82,0)
DEL ;DELETE A CPT RECORD
"RTN","DGPTFM2",83,0)
 I '$P(DGZPRF,U,3) G NOPROC
"RTN","DGPTFM2",84,0)
ASK S DIR("A")="Select 801 record to Delete"
"RTN","DGPTFM2",85,0)
 S DIR(0)="NO^1:"_$P(DGZPRF,U,3),DIR("??")="^D DISP^DGPTUTL1"
"RTN","DGPTFM2",86,0)
 D ^DIR K DIR G ^DGPTFM:$D(DIRUT),^DGPTFM:'Y,^DGPTFM:'$D(^DGPT(PTF,"C",DGZPRF(Y,0),0)) S DGZP=Y,Y=+^(0) D D^DGPTUTL
"RTN","DGPTFM2",87,0)
 S DIR("A")="Are you sure you want to delete the entire 801 for "_Y
"RTN","DGPTFM2",88,0)
 S DIR(0)="Y",DIR("B")="No" D ^DIR K DIR G ^DGPTFM:'Y,^DGPTFM:'$$LOCK
"RTN","DGPTFM2",89,0)
 S DGI=0 D NOW^%DTC
"RTN","DGPTFM2",90,0)
 F  S DGI=$O(^DGCPT(46,"C",PTF,DGI)) Q:DGI'>0  D:+^DGCPT(46,DGI,1)=+DGZPRF(DGZP)&'$G(^(9))
"RTN","DGPTFM2",91,0)
 .S (DA,REC)=DGI,DIE="^DGCPT(46,",DR="1////^S X=%" D FMDIE
"RTN","DGPTFM2",92,0)
 S DR=".09////1",DIE="^DGPT("_PTF_",""C"",",DA=DGZPRF(DGZP,0)
"RTN","DGPTFM2",93,0)
 S DA(1)=PTF D ^DIE L -^DGPT(PTF)
"RTN","DGPTFM2",94,0)
 W !!,"CPT Records....Deleted" H 2
"RTN","DGPTFM2",95,0)
 K DIK,DA,DGI,DGPROC,DGPSM,DGPNUM,Y D MOB G ^DGPTFM
"RTN","DGPTFM2",96,0)
NOPROC  W !!,*7,"No procedures to delete",! H 3 G ^DGPTFM
"RTN","DGPTFM2",97,0)
N ;ADD CPT CODES TO CPT RECORD
"RTN","DGPTFM2",98,0)
 I '$P(DGZPRF,U,3) W !!,"There are no 801 records that can be added to.",*7 H 2 G ^DGPTFM
"RTN","DGPTFM2",99,0)
P1 S DIR("A")="Add to 801 record ",DIR(0)="NO^1:"_$P(DGZPRF,U,3)
"RTN","DGPTFM2",100,0)
 S DIR("??")="^D DISP^DGPTUTL1"
"RTN","DGPTFM2",101,0)
 D ^DIR K DIR G ^DGPTFM:'Y
"RTN","DGPTFM2",102,0)
 S DGZP=Y,DGI=0,DGPRD=+DGZPRF(DGZP) D CL^SDCO21(DFN,DGPRD,"",.SDCLY)
"RTN","DGPTFM2",103,0)
 S DA=PTF,DIC="^DGCPT(46,",DIC(0)="AELQMZ",DLAYGO=46,DIC("S")="D EN6^DGPTFJC I 'DGER"
"RTN","DGPTFM2",104,0)
 D ^DIC K DIC,DLAYGO D:Y>0 SED,MOB,REQ^DGPTFM3 K DGPRD,Y
"RTN","DGPTFM2",105,0)
 D PCE^DGPTFQWK G ^DGPTFM
"RTN","DGPTFM2",106,0)
DC ;DELETE A CPT PROCEDURE
"RTN","DGPTFM2",107,0)
 I $E($G(ANS),2,99)>0 S DGPZ=+$E(ANS,2,99) G QQ
"RTN","DGPTFM2",108,0)
 S DIR("A")="Select 801 record to Delete a CPT code in"
"RTN","DGPTFM2",109,0)
 S DIR(0)="NO^1:"_$P(DGZPRF,U,3),DIR("??")="^D DISP^DGPTUTL1"
"RTN","DGPTFM2",110,0)
 D ^DIR K DIR G ^DGPTFM:$D(DIRUT),^DGPTFM:'Y,^DGPTFM:'$D(^DGPT(PTF,"C",DGZPRF(Y,0),0)) S DGZP=Y,Y=+^(0) D D^DGPTUTL
"RTN","DGPTFM2",111,0)
 F PS2=1:1 Q:'$D(DGZPRF(DGZP,PS2))  S PS2(PS2)=DGZP_"^"_PS2
"RTN","DGPTFM2",112,0)
 S PS2=PS2-1
"RTN","DGPTFM2",113,0)
QQ S DIR("A")="Select CPT code to Delete <1 - "_PS2_">",DIR(0)="NO^^K:X<1!(X>"_PS2_") X" D ^DIR K DIR G ^DGPTFM:$D(DIRUT),^DGPTFM:'Y
"RTN","DGPTFM2",114,0)
QQA S A1=Y,DGZP=+PS2(A1),CPT=+DGZPRF(DGZP,$P(PS2(A1),U,2))
"RTN","DGPTFM2",115,0)
 S DIR("A")="Are you sure you want to delete CPT code '"
"RTN","DGPTFM2",116,0)
 I $D(^ICPT(CPT)) D
"RTN","DGPTFM2",117,0)
 .S N=$$CPT^ICPTCOD(CPT,$$GETDATE^ICDGTDRG(PTF))
"RTN","DGPTFM2",118,0)
 .S N=$S(N>0:$P(N,U,2,99),1:"")
"RTN","DGPTFM2",119,0)
 .S DIR("A")=DIR("A")_$P(N,U)_" "_$P(N,U,2)_"'"
"RTN","DGPTFM2",120,0)
 E  S DIR("A")=DIR("A")_CPT_"  UNKNOWN"
"RTN","DGPTFM2",121,0)
 S DIR(0)="Y",DIR("B")="No" D ^DIR K DIR G ^DGPTFM:'Y
"RTN","DGPTFM2",122,0)
 G ^DGPTFM:'$$LOCK
"RTN","DGPTFM2",123,0)
QEL D NOW^%DTC S DA=DGZPRF(DGZP,$P(PS2(A1),U,2),0),DR="1////^S X=%"
"RTN","DGPTFM2",124,0)
 S REC=DGZPRF(DGZP,0)
"RTN","DGPTFM2",125,0)
 S DIE="^DGCPT(46," D FMDIE K A1,DR W !!,"CPT Code....Deleted"
"RTN","DGPTFM2",126,0)
 I '$D(DGZPRF(DGZP,2)) S DR=".09////1",DIE="^DGPT("_PTF_",""C"",",DA=DGZPRF(DGZP,0),DA(1)=PTF D ^DIE
"RTN","DGPTFM2",127,0)
 I $D(DGZPRF(DGZP,2)) D PCE^DGPTFQWK
"RTN","DGPTFM2",128,0)
 L -^DGPT(PTF) W:$X>70 ! D MOB H 2 G ^DGPTFM
"RTN","DGPTFM2",129,0)
F D MOB S DGZP=$S($E($G(ANS),2,99):+$E($G(ANS),2,99),1:1) G SET
"RTN","DGPTFM2",130,0)
MOB S (H,I,N)=0 K DGZPRF F M=1:1:6 S:$D(SDCLY(M)) N=N+1
"RTN","DGPTFM2",131,0)
 F I2=1:1 S H=$O(^DGPT(PTF,"C","B",H)) Q:H'>0  D
"RTN","DGPTFM2",132,0)
 .F  S I=$O(^DGPT(PTF,"C","B",H,I)) Q:I'>0  D
"RTN","DGPTFM2",133,0)
 ..S DGZPRF(I2)=^DGPT(PTF,"C",I,0),DGZPRF(I2,0)=I,(K,K1)=0,F=1 D
"RTN","DGPTFM2",134,0)
 ...F  S K=$O(^DGCPT(46,"C",PTF,K)),L=N+1\2+3 Q:K'>0  I +DGZPRF(I2)=+$G(^DGCPT(46,K,1)),'$G(^DGCPT(46,K,9)) D
"RTN","DGPTFM2",135,0)
 ....S K1=K1+1,DGZPRF(I2,K1)=^(0),DGZPRF(I2,K1,0)=K,F=0
"RTN","DGPTFM2",136,0)
 ....F M=2,3,5,6,7,15,16,17,18 S:$P(DGZPRF(I2,K1),U,M) L=L+1
"RTN","DGPTFM2",137,0)
 ....S DGZPRF(I2,K1,1)=L
"RTN","DGPTFM2",138,0)
 ...I F,$G(DGPSM)'=DGZPRF(I2,0) K DGZPRF(I2) S I2=I2-1
"RTN","DGPTFM2",139,0)
 S DGZPRF="1^1^"_(I2-1) K F,I,K,K1,N Q
"RTN","DGPTFM2",140,0)
SED S DR=".14////"_DGPRD_";.16////"_PTF_";",(DA,REC)=+Y,DIE="^DGCPT(46," D GETINFO^DGPTFM21 Q
"RTN","DGPTFM2",141,0)
FMDIE ;Prompt user for questions and file answers (using DIE)
"RTN","DGPTFM2",142,0)
 D ^DIE Q:$D(Y)>9  S RES=$$DELVFILE^DGAPI1(DFN,PTF,DGZP) K DIE,REC Q
"RTN","DGPTFM2",143,0)
LOCK() L +^DGPT(PTF):2 I  Q 1
"RTN","DGPTFM2",144,0)
ERR W !,"CPT Record is being edited by another user" K DIE,REC H 2 Q 0
"RTN","DGPTFM3")
0^13^B17913974^B16822857
"RTN","DGPTFM3",1,0)
DGPTFM3 ;ALB/ADL - MASTER CPT RECORD ENTER/EDIT PART 2 ;5/5/05 7:35am
"RTN","DGPTFM3",2,0)
 ;;5.3;Registration;**517,590,594,635,696,850**;Aug 13, 1993;Build 171
"RTN","DGPTFM3",3,0)
REQ ;CHECK FOR REQUIRED FIELDS IN CPT RECORDS.  RECORDS MISSING ONE OR MORE REQUIRED FIELDS ARE DELETED.
"RTN","DGPTFM3",4,0)
 S RFL=0 G REQQ:'$D(DGZPRF(DGZP,0))
"RTN","DGPTFM3",5,0)
 I '$P(^DGPT(PTF,"C",DGZPRF(DGZP,0),0),U,3) S DA(1)=PTF,DA=DGPSM,DIK="^DGPT("_PTF_",""C""," D  G REQQ
"RTN","DGPTFM3",6,0)
 .D ^DIK K DA W !!,"No CPT record has been filed because no performing provider was specified." S RFL=1
"RTN","DGPTFM3",7,0)
 S (I,FCPT)=0 D RESEQ(PTF)
"RTN","DGPTFM3",8,0)
 F J=1:1 S I=$O(^DGCPT(46,"C",PTF,I)) Q:'I  D:+^DGCPT(46,I,1)=+DGZPRF(DGZP)&'$G(^(9))
"RTN","DGPTFM3",9,0)
 .I $P(^DGCPT(46,I,0),U,4) S FCPT=1 Q
"RTN","DGPTFM3",10,0)
 .S DA=I,DIK="^DGCPT(46,",CPT=+^DGCPT(46,I,0) D ^DIK
"RTN","DGPTFM3",11,0)
 .W !!,"CPT " S N=$$CPT^ICPTCOD(CPT,$$GETDATE^ICDGTDRG(PTF)) W $P(N,U,2)," ",$P(N,U,3)," not filed because no diagnosis 1 was entered."
"RTN","DGPTFM3",12,0)
 .S RFL=1
"RTN","DGPTFM3",13,0)
 I FCPT K FCPT,I,J,N G REQQ
"RTN","DGPTFM3",14,0)
 S DA(1)=PTF,DA=DGZPRF(DGZP,0),DIK="^DGPT("_PTF_",""C"","
"RTN","DGPTFM3",15,0)
 D ^DIK K DA W !!,"No CPT record has been filed because no CPT codes were filed." S RFL=1 K FCPT,I,J,N
"RTN","DGPTFM3",16,0)
REQQ ;D RESEQ(PTF)
"RTN","DGPTFM3",17,0)
 Q  ;REQ
"RTN","DGPTFM3",18,0)
RESEQ(PTF)      ;A subroutine to check if a DGN in the DGCPT global has been deleted and the other DGN's need 
"RTN","DGPTFM3",19,0)
 ;to be moved down in sequence to fill the "gap" in the global
"RTN","DGPTFM3",20,0)
 N REC,CPTINFO,DGNARAY
"RTN","DGPTFM3",21,0)
 S REC=0
"RTN","DGPTFM3",22,0)
 F  S REC=$O(^DGCPT(46,"C",PTF,REC)) Q:REC=""  K DGNARAY S CPTINFO=^DGCPT(46,REC,0) D
"RTN","DGPTFM3",23,0)
 . F J=4:1:7,15:1:18 S DGNARAY(J)=$P(CPTINFO,U,J)
"RTN","DGPTFM3",24,0)
 . I $$CHKGAP(.DGNARAY) D RESEQDGN(.CPTINFO,.DGNARAY) S ^DGCPT(46,REC,0)=CPTINFO
"RTN","DGPTFM3",25,0)
 Q  ;RESEQ
"RTN","DGPTFM3",26,0)
CHKGAP(DGNARAY) ;Function call to determine if an inside DGN code has been deleted
"RTN","DGPTFM3",27,0)
 ;Back up in the DGNARAY array until a non-null DGN ien is found, then continuing backwards, 
"RTN","DGPTFM3",28,0)
 ;if a null ien is located, that means that an "inside" DGN was deleted
"RTN","DGPTFM3",29,0)
 S SEQ=999,END=1,MISSING=0
"RTN","DGPTFM3",30,0)
 F  S SEQ=$O(DGNARAY(SEQ),-1) Q:SEQ=""!MISSING  D
"RTN","DGPTFM3",31,0)
 . I DGNARAY(SEQ)'="" S END=1 Q
"RTN","DGPTFM3",32,0)
 . I DGNARAY(SEQ)="",END=1 S MISSING=1
"RTN","DGPTFM3",33,0)
 Q MISSING
"RTN","DGPTFM3",34,0)
 ;
"RTN","DGPTFM3",35,0)
RESEQDGN(CPTINFO,DGNARAY)       ;Subroutine to shift down DGN codes to replace any inside DGN's that were deleted by the user
"RTN","DGPTFM3",36,0)
 ;
"RTN","DGPTFM3",37,0)
 N I
"RTN","DGPTFM3",38,0)
 S SEQ="" K NOTNULL
"RTN","DGPTFM3",39,0)
 F  S SEQ=$O(DGNARAY(SEQ)) Q:SEQ=""  I DGNARAY(SEQ)'="" S NOTNULL(SEQ)=DGNARAY(SEQ)
"RTN","DGPTFM3",40,0)
 K DGNARAY S SEQ=""
"RTN","DGPTFM3",41,0)
 F I=4:1:7,15:1:18 S DGNARAY(I)=""
"RTN","DGPTFM3",42,0)
 F I=4:1:7,15:1:18 S SEQ=$O(NOTNULL(SEQ)) Q:SEQ=""  S DGNARAY(I)=NOTNULL(SEQ)
"RTN","DGPTFM3",43,0)
 F I=4:1:7,15:1:18 S $P(CPTINFO,U,I)=$G(DGNARAY(I))
"RTN","DGPTFM3",44,0)
 K NOTNULL
"RTN","DGPTFM3",45,0)
 Q  ;RESEQDGN
"RTN","DGPTFM3",46,0)
PF S PTF=D0,DFN=+^DGPT(D0,0) D MOB^DGPTFM2 S PS2=0,J=+DGZPRF
"RTN","DGPTFM3",47,0)
 G END:'$P(DGZPRF,U,3)
"RTN","DGPTFM3",48,0)
LOOP S Y=+DGZPRF(J),DGSTRT=$S(+$P(DGZPRF,U,4):$P(DGZPRF,U,4),1:4),DGLST=0
"RTN","DGPTFM3",49,0)
 D CL^SDCO21(DFN,+DGZPRF(J),"",.SDCLY),ICDINFO^DGAPI(DFN,PTF),XREF^DGPTFM21 ; load SCI info and DGN's for this service date
"RTN","DGPTFM3",50,0)
 D D^DGPTUTL W !,J,"-CPT Capture Date/Time: ",Y W:($P(DGZPRF,U,2)-1!($G(PGBRK))) " (cont.)"
"RTN","DGPTFM3",51,0)
 I $P(DGZPRF(J),U,2) W !,?5,"Referring or Ordering Provider: " S L=$P(DGZPRF(J),U,2) D PRV^DGPTFM
"RTN","DGPTFM3",52,0)
 W !,?5,"Rendering Provider: " S L=$P(DGZPRF(J),U,3) D PRV^DGPTFM
"RTN","DGPTFM3",53,0)
 I $P(DGZPRF(J),U,5) W !,?5,"Rendering Location: ",$P($G(^SC($P(DGZPRF(J),U,5),0)),U)
"RTN","DGPTFM3",54,0)
 S (L1,PGBRK)=0
"RTN","DGPTFM3",55,0)
 N EFFDATE,IMPDATE
"RTN","DGPTFM3",56,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTFM3",57,0)
 N ICDLABEL S ICDLABEL=$$GETLABEL^DGPTIC10(DGPTDAT,"P")
"RTN","DGPTFM3",58,0)
 F K1=$P(DGZPRF,U,2):1 Q:'$D(DGZPRF(J,K1))  I '$G(DGZPRF(J,K1,9)) D  Q:$Y+$G(DGZPRF(J,K1+1,1))>16!($G(PGBRK))
"RTN","DGPTFM3",59,0)
 . S PS2=PS2+1,K=K1 W !,?2,PS2," " D CPT^DGPTUTL1
"RTN","DGPTFM3",60,0)
 . W !,?4 S $P(DS,"-",21)="" W DS," Related Diagnosis",ICDLABEL," ",DS
"RTN","DGPTFM3",61,0)
 . F L1=DGSTRT:1:11 S DGLOC=$S(L1<8:L1,1:L1+7),CD=$P(DGZPRF(J,K1),U,DGLOC) I CD D  I $Y+$G(CKSCI)>16 S PGBRK=1 Q
"RTN","DGPTFM3",62,0)
 . . S N=$$ICDDATA^ICDXCODE("DIAG",CD,EFFDATE) ;,N=$S(N:$P(N,U,2,99),1:"")
"RTN","DGPTFM3",63,0)
 . . S CD=$P(N,U) D WRITECOD^DGPTIC10("DIAG",CD,EFFDATE,1,1,8) W $S(+N<1!('$P(N,U,10)):"*",1:"")
"RTN","DGPTFM3",64,0)
 . . D CKSCI^DGPTFM($P(DGZPRF(J,K1),U,DGLOC))
"RTN","DGPTFM3",65,0)
 . S PS2(PS2)=J_U_K1,CD=1,DGLOC=0,DGSTRT=4
"RTN","DGPTFM3",66,0)
 I L1'=11,$S(L1<8:$P($G(DGZPRF(J,K1)),U,L1+1,7),1:"")_$P($G(DGZPRF(J,K1)),U,$S(L1<8:15,1:L1+8),18)?."^" S L1=11
"RTN","DGPTFM3",67,0)
 I L1=11 S $P(DGZPRF,U,1,2)=$S($D(DGZPRF(J,K1+1)):J_U_(K1+1),1:J+1_U_1),$P(DGZPRF,U,4)="",PGBRK=0
"RTN","DGPTFM3",68,0)
 E  S $P(DGZPRF,U,1,2)=J_U_K1,$P(DGZPRF,U,4)=L1+1
"RTN","DGPTFM3",69,0)
 S J=+DGZPRF I $D(DGZPRF(J)) D HEAD^DGPTFMO G LOOP
"RTN","DGPTFM3",70,0)
END I $E(IOST)="C" W ! S DIR(0)="E" D ^DIR K DIR
"RTN","DGPTFM3",71,0)
 K I,K1,L1,CD,N Q
"RTN","DGPTFM4")
0^14^B31864138^B28140353
"RTN","DGPTFM4",1,0)
DGPTFM4 ;ALB/MTC/ADL - PTF ENTRY/EDIT-2 ;12/18/07 11:37am
"RTN","DGPTFM4",2,0)
 ;;5.3;Registration;**114,195,397,510,565,775,664,759,850**;Aug 13, 1993;Build 171
"RTN","DGPTFM4",3,0)
 ;;ADL;Update for CSV Project;;Mar 26, 2003
"RTN","DGPTFM4",4,0)
 ;
"RTN","DGPTFM4",5,0)
 S DGZM0=DGZM0+1
"RTN","DGPTFM4",6,0)
EN ;
"RTN","DGPTFM4",7,0)
 N M3,M82,DGMPOA
"RTN","DGPTFM4",8,0)
 D MOB:'$D(M)
"RTN","DGPTFM4",9,0)
 S M(DGZM0)=$S($D(M(DGZM0)):M(DGZM0),1:"") G NEXM:M(DGZM0)=""
"RTN","DGPTFM4",10,0)
 S (M3,M(DGZM0),M1)=$S($D(^DGPT(PTF,"M",+M(DGZM0),0)):^DGPT(PTF,"M",+M(DGZM0),0),1:"")
"RTN","DGPTFM4",11,0)
 S M82=$G(^DGPT(PTF,"M",+M(DGZM0),82))
"RTN","DGPTFM4",12,0)
 I $D(^DGPT(PTF,"M",+M(DGZM0),"P")) S $P(M(DGZM0),U,20)=^("P"),$P(M1,U,20)=^("P")
"RTN","DGPTFM4",13,0)
WR S DG300=$S($D(^DGPT(PTF,"M",+M(DGZM0),300)):^(300),1:"")
"RTN","DGPTFM4",14,0)
 W @IOF,HEAD,?70 S Z="<501-"_DGZM0_">" D Z^DGPTFM I +M(DGZM0)=1 W !,?62,"Discharge Movement"
"RTN","DGPTFM4",15,0)
M S L=+$P(M1,U,10),Y=L D D^DGPTUTL W !! S Z=1 D Z W "Date of Move: " S Z=Y,Z1=20 D Z1 W "Losing Specialty: ",$E($S($D(^DIC(42.4,+$P(M1,U,2),0)):$P(^(0),U,1),1:""),1,25)
"RTN","DGPTFM4",16,0)
 W !,"     Leave days: ",$P(M1,U,3),?44,"Pass days: ",$P(M1,U,4)
"RTN","DGPTFM4",17,0)
 W !,"Treated for SC Condition: ",$S($P(M3,U,18)=1:"Yes",1:"No")
"RTN","DGPTFM4",18,0)
 N NL S NL=0
"RTN","DGPTFM4",19,0)
 I $P(M3,U,31)'="" W @($S(NL#2:"!",1:"?37")),"Potentially Related to Combat: ",$S($P(M3,U,31)="Y":"Yes",1:"No") S NL=NL+1
"RTN","DGPTFM4",20,0)
 I $P(M3,U,26)'="" W @($S(NL#2:"!",1:"?37")),"Treated for AO Condition: ",$S($P(M3,U,26)="Y":"Yes",1:"No") S NL=NL+1
"RTN","DGPTFM4",21,0)
 I $P(M3,U,27)'="" W @($S(NL#2:"!",1:"?37")),"Treated for IR Condition: ",$S($P(M3,U,27)="Y":"Yes",1:"No") S NL=NL+1
"RTN","DGPTFM4",22,0)
 I $P(M3,U,28)'="" W @($S(NL#2:"!",1:"?37")),"Treated for service in SW Asia: ",$S($P(M3,U,28)="Y":"Yes",1:"No") S NL=NL+1
"RTN","DGPTFM4",23,0)
 I $P(M3,U,29)'="" W @($S(NL#2:"!",1:"?37")),"Treated for MST Condition: ",$S($P(M3,U,29)="Y":"Yes",1:"No") S NL=NL+1
"RTN","DGPTFM4",24,0)
 K DGNTARR
"RTN","DGPTFM4",25,0)
 S DGNTARR=$$GETCUR^DGNTAPI(DFN,"DGNTARR")
"RTN","DGPTFM4",26,0)
 I $P(M3,U,30)="",(",3,4,5,"[(","_$P($G(DGNTARR("STAT")),U)_",")) S $P(M3,U,30)="N"
"RTN","DGPTFM4",27,0)
 I $P(M3,U,30)'="" W @($S(NL#2:"!",1:"?37")),"Treated for HEAD/NECK CA Condition: ",$S($P(M3,U,30)="Y":"Yes",1:"No") S NL=NL+1
"RTN","DGPTFM4",28,0)
 I $P(M3,U,32)'="" W @($S(NL#2:"!",1:"?37")),"Treated for Project 112/SHAD: ",$S($P(M3,U,32)="Y":"Yes",1:"No")
"RTN","DGPTFM4",29,0)
 K NL
"RTN","DGPTFM4",30,0)
 N EFFDATE,IMPDATE
"RTN","DGPTFM4",31,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTFM4",32,0)
 W !! S Z=2 D Z W "          DX: ",$$GETLABEL^DGPTIC10(EFFDATE,"D")
"RTN","DGPTFM4",33,0)
 F I=1:1:11 S L=$P(M1,U,I+4) I L'=""&(I'=6) D
"RTN","DGPTFM4",34,0)
 . S DGMPOA=$P(M82,U,$S(I<6:I,1:I-1))
"RTN","DGPTFM4",35,0)
 . S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+L,EFFDATE)
"RTN","DGPTFM4",36,0)
 . D WRITECOD^DGPTIC10("DIAG",+L,EFFDATE,2,1,15)
"RTN","DGPTFM4",37,0)
 . I $P(DGPTTMP,U,20)=30,$G(DGMPOA)'="" W:$X>73 !,"            " W " (POA="_$G(DGMPOA)_")" W:$G(DGMPOA)="" " (POA='')"
"RTN","DGPTFM4",38,0)
 . W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"")
"RTN","DGPTFM4",39,0)
 D PRN2^DGPTFM8:DG300]""
"RTN","DGPTFM4",40,0)
 ;
"RTN","DGPTFM4",41,0)
 I $P(M1,U,20) S DRG=$P(M1,U,20) W:DRG=998!(DRG=999)!((DRG=468!(DRG=469)!(DRG=470))&(+$P($G(M1),U,10)<3071001)) *7 W !!?14,"TRANSFER DRG: ",DRG D
"RTN","DGPTFM4",42,0)
 . N DXD,DGDX
"RTN","DGPTFM4",43,0)
 . S DXD=$$DRGD^ICDGTDRG(DRG,"DGDX",,$P(M1,U,10)),DGDS=0
"RTN","DGPTFM4",44,0)
 . F  S DGDS=$O(DGDX(DGDS)) Q:'+DGDS  Q:DGDX(DGDS)=" "  W !,DGDX(DGDS)
"RTN","DGPTFM4",45,0)
JUMP K DG300 F I=$Y:1:21 W !
"RTN","DGPTFM4",46,0)
X S DGNUM=$S($D(M(DGZM0+1)):501_"-"_(DGZM0+1),1:"MAS") G 501^DGPTFJC:DGST
"RTN","DGPTFM4",47,0)
 W "Enter <RET> to continue, 1-2 to edit,",!,"'M' ",$S(DGPTFE:" to add a patient movement",1:"to edit Treat. Specialty"),", '^N' for screen N, or '^' to abort:<",DGNUM,">// " R X:DTIME
"RTN","DGPTFM4",48,0)
 K DGNUM G Q:X="^",NEXM:X="",^DGPTFJ:X?1"^".E,M^DGPTFM1:X="M"!(X="m")
"RTN","DGPTFM4",49,0)
X1 I X[1!(X[2) S DR="[DG501"_$E("F",DGPTFE),DR=DR_"]" D
"RTN","DGPTFM4",50,0)
 . S DGJUMP=X,DIE="^DGPT(",(DA,DGPTF)=PTF,DGMOV=+M(DGZM0) D ^DIE ;K M,DR,DIE D CHK501^DGPTSCAN K DGPTF,DGMOV
"RTN","DGPTFM4",51,0)
 . K DR,DA,DIE,DIC S DR="" X:(+M(DGZM0)=1) "S J=^DGPT(PTF,""M"",1,0) F I=11:1:15 I $P(J,U,I) S DR=DR_I_"";""" I DR'="" D
"RTN","DGPTFM4",52,0)
 .. S DGJUMP=X,DIE="^DGPT("_DGPTF_",""M"",",(DA(1),DGPTF)=PTF,(DA,DGMOV)=+M(DGZM0) D
"RTN","DGPTFM4",53,0)
 .. D ^DIE ;K M,DR,DIE D CHK501^DGPTSCAN K DGPTF,DGMOV
"RTN","DGPTFM4",54,0)
 . K M,DR,DIE D CHK501^DGPTSCAN K DGPTF,DGMOV
"RTN","DGPTFM4",55,0)
 ; Determine if NTR HISTORY (#28.11) filer is called if question for
"RTN","DGPTFM4",56,0)
 ;  'Treated for Head/Neck CA Condition:' is answered YES.
"RTN","DGPTFM4",57,0)
 ; Only a NTR screening status of 3=PENDING DIAGNOSIS gets Filed.
"RTN","DGPTFM4",58,0)
 I $P($G(M3),U,30)="Y",$P($G(DGNTARR("STAT")),U)=3 D
"RTN","DGPTFM4",59,0)
 .S DGNTARR=$$FILEHNC^DGNTAPI1(DFN)
"RTN","DGPTFM4",60,0)
 K DGNTARR
"RTN","DGPTFM4",61,0)
 ;- update MT indicator after edit movement
"RTN","DGPTFM4",62,0)
 N DGPMCA,DGPMAN D PM^DGPTUTL
"RTN","DGPTFM4",63,0)
 I '$G(DGADM) S DGADM=+^DGPT(PTF,0)
"RTN","DGPTFM4",64,0)
 D MT^DGPTUTL
"RTN","DGPTFM4",65,0)
 G EN
"RTN","DGPTFM4",66,0)
PR W !,"Enter '^' to stop the display and edit of data",!,"'^N' to jump to screen #N (appears in upper right of screen '<N>'",!,"<RET> to continue on to the next screen or 1-2 to edit:"
"RTN","DGPTFM4",67,0)
 W !?10,"1-",$S(DGPTFE:"Date of movement, Losing Specialty, ",1:""),"Leave and Pass days",!?10,"2-ICD DIAGNOSIS CODES"
"RTN","DGPTFM4",68,0)
 W !,"You may also enter 1-2",!
"RTN","DGPTFM4",69,0)
 R !!,"Enter <RET>: ",X:DTIME G WR
"RTN","DGPTFM4",70,0)
 Q
"RTN","DGPTFM4",71,0)
NEXM S DGZM0=DGZM0+1 G ^DGPTFM:'$D(M(DGZM0)),EN
"RTN","DGPTFM4",72,0)
ADD S DGZM0=$S($D(DGZM0):DGZM0+1,1:0) S L=$S($D(^DGPT(PTF,"M",0)):^(0),1:"^45.02DA^^"),L1=$P(L,U,3) F I=1:1 Q:'$D(^DGPT(PTF,"M",L1+I))
"RTN","DGPTFM4",73,0)
 S DA(1)=PTF,DIC="^DGPT("_DA(1)_",""M"",",X=L1+I,DIC(0)="LMZQE" D ^DIC K DIC,DIE G ^DGPTFM:Y'>0
"RTN","DGPTFM4",74,0)
 S M(DGZM0)=L1+I S X="1-2" G X1
"RTN","DGPTFM4",75,0)
 Q
"RTN","DGPTFM4",76,0)
MOB S I=0 K M,M1,M2 S M2=0 F I1=1:1 S I=$O(^DGPT(PTF,"M",I)) Q:'I  S M(I1)=^(I,0)
"RTN","DGPTFM4",77,0)
 S PM=I1-1 D ORDER^DGPTF Q
"RTN","DGPTFM4",78,0)
Q G Q^DGPTF
"RTN","DGPTFM4",79,0)
Z I 'DGN S Z=$S(IOST="C-QUME"&($L(DGVI)'=2):Z,1:"["_Z_"]") W @DGVI,Z,@DGVO
"RTN","DGPTFM4",80,0)
 E  W "   "
"RTN","DGPTFM4",81,0)
 Q
"RTN","DGPTFM4",82,0)
Z1 F I=1:1:(Z1-$L(Z)) S Z=Z_" "
"RTN","DGPTFM4",83,0)
 W Z
"RTN","DGPTFM4",84,0)
 Q
"RTN","DGPTFM4",85,0)
R ;DELETE PROCEDURE RECORD
"RTN","DGPTFM4",86,0)
 I '$D(^DGPT(PTF,"P")) G NOPROC
"RTN","DGPTFM4",87,0)
 I $O(^DGPT(PTF,"P",0))']"" G NOPROC
"RTN","DGPTFM4",88,0)
 S DGPNUM="" F DGPROC=0:0 S DGPROC=$O(P(DGPROC)) Q:'DGPROC  S:$D(P(DGPROC,1)) DGPNUM=DGPNUM_","_DGPROC
"RTN","DGPTFM4",89,0)
 S DGPNUM=DGPNUM_","
"RTN","DGPTFM4",90,0)
ASKPRO W !!,"Delete procedure record <",$P(DGPNUM,",",2,99),"> : " R DGPROC:DTIME I DGPROC[U!(DGPROC="") K DGPNUM,DGPROC G ^DGPTFM
"RTN","DGPTFM4",91,0)
 I DGPNUM'[(","_DGPROC_",") W !!,"Enter the record # to delete from the PTF file <",$P(DGPNUM,",",2,99),">",! G ASKPRO
"RTN","DGPTFM4",92,0)
 K DA N DGJ
"RTN","DGPTFM4",93,0)
 F DGJ=1:1 S DA=+$P(DGPROC,",",DGJ) Q:'DA  S DA=$S($D(P(DA,1)):+P(DA,1),1:0) I DA S DA(1)=PTF,DIK="^DGPT("_PTF_",""P""," D ^DIK K DA W "   ",$P(DGPROC,",",DGJ),"-DELETED***" H:'$P(DGPROC,",",DGJ+1) 2
"RTN","DGPTFM4",94,0)
 K DIK,DA,DGPROC,DGPNUM G ^DGPTFM
"RTN","DGPTFM4",95,0)
NOPROC W !!,*7,"No procedures to delete",! H 3 G ^DGPTFM
"RTN","DGPTFM4",96,0)
 Q
"RTN","DGPTFM5")
0^15^B13820382^B12890159
"RTN","DGPTFM5",1,0)
DGPTFM5 ;ALB/MTK/ADL - PTF ENTRY/EDIT-3 ;11 MAR 91  15:15
"RTN","DGPTFM5",2,0)
 ;;5.3;Registration;**510,606,850**;Aug 13, 1993;Build 171
"RTN","DGPTFM5",3,0)
 ;;ADL;Update for CSV Project;;Mar 26, 2003
"RTN","DGPTFM5",4,0)
 ;
"RTN","DGPTFM5",5,0)
 S DGZS0=DGZS0+1
"RTN","DGPTFM5",6,0)
EN D MOB:'$D(S) S S(DGZS0,1)=$S($D(S(DGZS0,1)):S(DGZS0,1),1:"") G NEXM:S(DGZS0,1)="" S (S1,S(DGZS0))=$S($D(^DGPT(PTF,"S",S(DGZS0,1),0)):^DGPT(PTF,"S",S(DGZS0,1),0),1:"")
"RTN","DGPTFM5",7,0)
WR ;
"RTN","DGPTFM5",8,0)
 N EFFDATE,IMPDATE
"RTN","DGPTFM5",9,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTFM5",10,0)
 W @IOF,HEAD,?72 S Z="<401-"_DGZS0_">" D Z^DGPTFM
"RTN","DGPTFM5",11,0)
 S L=+S(DGZS0),Y=L D D^DGPTUTL W !! S Z=1 D Z W "Date of Surg: " S Z=Y,Z1=28 D Z1 W "Chief Surg: " S L=";"_$P(^DD(45.01,4,0),U,3),L1=";"_$P(S1,U,4)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFM5",12,0)
 W !,"    Anesth Tech: " S L=";"_$P(^DD(45.01,6,0),U,3),L1=";"_$P(S1,U,6)_":" W $P($P(L,L1,2),";",1),?45,"First Asst: " S L=";"_$P(^DD(45.01,5,0),U,3),L1=";"_$P(S1,U,5)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFM5",13,0)
 W !,"  Source of pay: " S L=";"_$P(^DD(45.01,7,0),U,3),L1=";"_$P(S1,U,7)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFM5",14,0)
 W ?46,"Surg spec: ",$E($S($D(^DIC(45.3,+$P(S1,U,3),0)):$P(^(0),U,2),1:""),1,23)
"RTN","DGPTFM5",15,0)
 W !! S Z=2 D Z W "  Surg/pro: ",$$GETLABEL^DGPTIC10(EFFDATE,"P") ;,!?7
"RTN","DGPTFM5",16,0)
 F I=1:1:5 S L=$P(S1,U,I+7) I L'="" D
"RTN","DGPTFM5",17,0)
 . S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+L,EFFDATE)
"RTN","DGPTFM5",18,0)
 . D WRITECOD^DGPTIC10("PROC",+L,EFFDATE,2,1,7) W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"")
"RTN","DGPTFM5",19,0)
 ;-- kidney transplant source
"RTN","DGPTFM5",20,0)
 S DG300=$S($D(^DGPT(PTF,"S",S(DGZS0,1),300)):^(300),1:"") D:DG300]"" PRN3^DGPTFM8 K DG300
"RTN","DGPTFM5",21,0)
 W !!
"RTN","DGPTFM5",22,0)
JUMP F I=$Y:1:19 W !
"RTN","DGPTFM5",23,0)
X S DGNUM=$S($D(S(DGZS0+1)):401_"-"_(DGZS0+1),1:"MAS") G 401^DGPTFJC:DGST
"RTN","DGPTFM5",24,0)
 W "Enter <RET> to continue, 1-2 to edit,",!,"'S' to add a Surgical segment, '^N' for screen N, or '^' to abort:<",DGNUM,">// " R X:DTIME K DGNUM G Q:X="^",NEXM:X="",^DGPTFJ:X?1"^".E,ADD:X="S"!(X="s")
"RTN","DGPTFM5",25,0)
X1 G PR:X<1!(X>2) S DR="[DG401]",DGJUMP=X,DGSUR=+S(DGZS0,1)
"RTN","DGPTFM5",26,0)
 N ICDVDT,ICPTVDT,EFFDATE,IMPDATE
"RTN","DGPTFM5",27,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTFM5",28,0)
 ;S (ICDVDT,ICPTVDT)=$S($D(PTF):$$GETDATE^ICDGTDRG(PTF),1:DT)
"RTN","DGPTFM5",29,0)
 S (ICDVDT,ICPTVDT)=$S($G(EFFDATE)'="":EFFDATE,$D(PTF):$$GETDATE^ICDGTDRG(PTF),1:DT)
"RTN","DGPTFM5",30,0)
 K DA S DIE="^DGPT(",(DGPTF,DA)=PTF D ^DIE K DA,DR,DA
"RTN","DGPTFM5",31,0)
 D CHK401^DGPTSCAN K DGPTF,DGSUR D MOB G EN
"RTN","DGPTFM5",32,0)
PR W !,"Enter '^' to stop the display and edit of data",!,"'^N' to jump to screen #N (appears in upper right of screen '<N>'",!,"<RET> to continue on to the next screen or 1-2 to edit:"
"RTN","DGPTFM5",33,0)
 W !?10,"1-Surgical information",!?10,"2-Surgical/Procedure Codes"
"RTN","DGPTFM5",34,0)
 W !,"You may also enter any combination of the above, separated by commas(ex:1,3,5)",!
"RTN","DGPTFM5",35,0)
 R !!,"Enter <RET>: ",X:DTIME G WR
"RTN","DGPTFM5",36,0)
 Q
"RTN","DGPTFM5",37,0)
NEXM S DGZS0=DGZS0+1 G ^DGPTFM:'$D(S(DGZS0)) G EN
"RTN","DGPTFM5",38,0)
ADD K SUR S DGZS0=0 S:'$D(^DGPT(PTF,"S",0)) ^(0)="^45.01DA^^"
"RTN","DGPTFM5",39,0)
 S DIC="^DGPT("_PTF_",""S"",",DIC(0)="QEALM",DA(1)=PTF D ^DIC G ^DGPTFM:+Y'>0!('$D(^DGPT(PTF,"S",+Y)))
"RTN","DGPTFM5",40,0)
 D MOB I SU F I=1:1:SU S:S(I,1)=+Y DGZS0=I
"RTN","DGPTFM5",41,0)
 G ^DGPTFM:'DGZS0 S SUR(DGZS0)=+Y,X="1,2" G X1
"RTN","DGPTFM5",42,0)
MOB K S,S1,S2 S I=0,S2=0 F I1=1:1 S I=$O(^DGPT(PTF,"S",I)) Q:'I  S S(I1)=^(I,0),S(I1,1)=I I S(I1)']"" K S(I1) S I1=I1-1
"RTN","DGPTFM5",43,0)
 S SU=I1-1 Q
"RTN","DGPTFM5",44,0)
Q G Q^DGPTF
"RTN","DGPTFM5",45,0)
 Q
"RTN","DGPTFM5",46,0)
1 ;;.01;2;3;4;5;6;7
"RTN","DGPTFM5",47,0)
2 ;;8;9;10;11;12
"RTN","DGPTFM5",48,0)
 Q
"RTN","DGPTFM5",49,0)
Z I 'DGN S Z=$S(IOST="C-QUME"&($L(DGVI)'=2):Z,1:"["_Z_"]") W @DGVI,Z,@DGVO
"RTN","DGPTFM5",50,0)
 E  W "   "
"RTN","DGPTFM5",51,0)
 Q
"RTN","DGPTFM5",52,0)
Z1 F I=1:1:(Z1-$L(Z)) S Z=Z_" "
"RTN","DGPTFM5",53,0)
 W Z
"RTN","DGPTFM5",54,0)
 Q
"RTN","DGPTFM6")
0^18^B27555849^B20304000
"RTN","DGPTFM6",1,0)
DGPTFM6 ;ALB/BOK/ADL - 601 SCREEN: PROCEDURE ENTER/EDIT ;21 JUL 88 @ 0900
"RTN","DGPTFM6",2,0)
 ;;5.3;Registration;**164,510,729,850**;Aug 13, 1993;Build 171
"RTN","DGPTFM6",3,0)
 ;;ADL;Update for CSV Project;;Mar 26, 2003
"RTN","DGPTFM6",4,0)
EN ; Entry point - begin date checks
"RTN","DGPTFM6",5,0)
 I $D(^DGPTF(PTF,70)),+^(70)<2871000 W !!,"Data cannot be entered into these fields until after 10/1/1987" H 5 G ^DGPTFM
"RTN","DGPTFM6",6,0)
 I DT<2871000 W !!,"Data can not be entered into these fields until after 10/1/1987" H 5 G ^DGPTFM
"RTN","DGPTFM6",7,0)
 G @($S(X=6:"E",1:X))
"RTN","DGPTFM6",8,0)
T ;ADD PROCEDURE RECORD
"RTN","DGPTFM6",9,0)
 S DGZP=0 S:'$D(^DGPT(PTF,"P",0)) ^(0)="^45.05DA^^"
"RTN","DGPTFM6",10,0)
 S DIC="^DGPT("_PTF_",""P"",",DIC(0)="AEQLMZ",DA(1)=PTF D ^DIC G ^DGPTFM:Y'>0!('$D(^DGPT(PTF,"P",+Y))) S DGPROCM=+Y,DGPROCD=$P(Y,U,2) D MOB I DGPC F I=1:1:DGPC S:P(I,1)=DGPROCM DGZP=I
"RTN","DGPTFM6",11,0)
 G:'DGZP ^DGPTFM S DGPROC(DGZP)=DGPROCM,X="1,2"
"RTN","DGPTFM6",12,0)
EDIT ;
"RTN","DGPTFM6",13,0)
 G HELP:X<1!(X>2) S DIE="^DGPT(",(DA,DGPTF)=PTF,DR="[DG601]",DGJUMP=X
"RTN","DGPTFM6",14,0)
 S DIE="^DGPT(",DGJUMP=X D ^DIE,CHK601^DGPTSCAN K DR,DIE,DIC,DA,DGADD,DGJUMP D MOB
"RTN","DGPTFM6",15,0)
SET D MOB:'$D(P) S:'$D(DGZP) DGZP=1 S P(DGZP,1)=$S($D(P(DGZP,1)):P(DGZP,1),1:"") I P(DGZP,1)="" K P(DGZP) G NEXP
"RTN","DGPTFM6",16,0)
 S (P1,P(DGZP))=$S($D(^DGPT(PTF,"P",P(DGZP,1),0)):^(0),1:"")
"RTN","DGPTFM6",17,0)
WRT ;
"RTN","DGPTFM6",18,0)
 N EFFDATE,IMPDATE
"RTN","DGPTFM6",19,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTFM6",20,0)
 G:'$D(^DGPT(PTF,"P",P(DGZP,1),0)) ^DGPTFM S DGPROCI=^(0) W @IOF,HEAD,?68 S Z="<601-"_DGZP_">" W @DGVI,Z,@DGVO,!! S (Y,L)=+P(DGZP),Z=1 D D^DGPTUTL,Z^DGPTFM5 W $J("Date of Proc:  ",32),Y,!,$J("Specialty:  ",35)
"RTN","DGPTFM6",21,0)
 W $S($D(^DIC(42.4,+$P(P(DGZP),U,2),0)):$P(^(0),U),1:""),! I $P(P(DGZP),U,4) W "   Number of Dialysis Treatments:  ",$P(P(DGZP),U,4),!
"RTN","DGPTFM6",22,0)
 W !! S Z=2 D Z^DGPTFM5 W "  Procedures: ",$$GETLABEL^DGPTIC10(EFFDATE,"P")
"RTN","DGPTFM6",23,0)
 F I=1:1:5 S L=$P(P(DGZP),U,4+I) I L D
"RTN","DGPTFM6",24,0)
 . S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+L,EFFDATE)
"RTN","DGPTFM6",25,0)
 . D WRITECOD^DGPTIC10("PROC",+L,EFFDATE,2,1,7) W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"") ;W !?7
"RTN","DGPTFM6",26,0)
 F I=1:1:(IOSL-$Y-5) W !
"RTN","DGPTFM6",27,0)
 S DGNUM=$S($D(P(DGZP+1)):601_"-"_(DGZP+1),1:"MAS") G 601^DGPTFJC:DGST
"RTN","DGPTFM6",28,0)
 W "Enter <RET> to continue, 1-2 to edit,",!,"'T' to add a Procedure Segment, '^N' for screen N, or '^' to abort: <",DGNUM,">//"
"RTN","DGPTFM6",29,0)
 R X:DTIME S:'$T X="^",DGPTOUT=""
"RTN","DGPTFM6",30,0)
 K DGNUM G Q^DGPTF:X="^"
"RTN","DGPTFM6",31,0)
 I X?1"^".E S DGPTSCRN=601 G ^DGPTFJ
"RTN","DGPTFM6",32,0)
 G T:X="T"!(X="t"),HELP:X["?"
"RTN","DGPTFM6",33,0)
 I X[1!(X[2) S DA=+P(DGZP) G EDIT
"RTN","DGPTFM6",34,0)
 I X'="" G HELP
"RTN","DGPTFM6",35,0)
NEXP ;S DGZP=DGZP+1 G ^DGPTFM:'$D(P(DGZP)),SET
"RTN","DGPTFM6",36,0)
 S DGZP=DGZP+1 I '$D(P(DGZP)) S DGZP=1 G ^DGPTFM
"RTN","DGPTFM6",37,0)
 G SET
"RTN","DGPTFM6",38,0)
HELP W !,"Enter '^' to stop display and edit of data",!,"'^N' to jump to screen #N (appears in upper right of screen as <N>)",!,"<RET> to continue on to next screen or 1-2 to edit:"
"RTN","DGPTFM6",39,0)
 W !?10,"1-Procedure information",!,?10,"2-Procedure codes",!,"You may also enter any combination of the above, separated by commas (ex:1,2)",!
"RTN","DGPTFM6",40,0)
 R !!,"Enter <RET>: ",X:DTIME G WRT
"RTN","DGPTFM6",41,0)
MOB K P,P1,P2 S (I,P2)=0 F I1=1:1 S I=$O(^DGPT(PTF,"P",I)) Q:I'>0  S P(I1)=^(I,0),P(I1,1)=I I P(I1)']"" K P(I1) S I1=I1-1
"RTN","DGPTFM6",42,0)
 S DGPC=I1-1 Q
"RTN","DGPTFM6",43,0)
BS ;CALLED FROM [DG601]
"RTN","DGPTFM6",44,0)
 S I=$O(^DGPT(PTF,"M","AM",^DGPT(PTF,"P",DA,0)-.0000001)),I=$O(^(+I,0))
"RTN","DGPTFM6",45,0)
 S DGMOVM=$S($D(^DGPT(PTF,"M",$S(I:I,1:1),0)):$P(^(0),U,2),1:"")
"RTN","DGPTFM6",46,0)
 Q
"RTN","DGPTFM6",47,0)
R ;DELETE PROCEDURE RECORD
"RTN","DGPTFM6",48,0)
 G R^DGPTFM4
"RTN","DGPTFM6",49,0)
E ;EDIT PROCEDURE RECORD
"RTN","DGPTFM6",50,0)
 G E^DGPTFM1
"RTN","DGPTFM6",51,0)
P I $D(^DGPT(PTF,70)),+^(70)<2871000 G FY86
"RTN","DGPTFM6",52,0)
 I DT<2871000 G FY86
"RTN","DGPTFM6",53,0)
 S L="" F I=1:1:DGPC S L2=1 F J=5:1:9 I L2,$P(P(I),U,J)="" S L=L_I_",",L2=0
"RTN","DGPTFM6",54,0)
 I L="" W !!,"There are no procedure records that can be added to.",*7 H 2 G ^DGPTFM
"RTN","DGPTFM6",55,0)
 S L=$E(L,1,$L(L)-1) I L=+L S DGRC=+L G P2
"RTN","DGPTFM6",56,0)
P1 I 'Z W !!,"Add to procedure record <",L,"> : " R DGRC:DTIME G ^DGPTFM:DGRC[U!(DGRC="")
"RTN","DGPTFM6",57,0)
 E  S DGRC=+$E(A,2,99)
"RTN","DGPTFM6",58,0)
P2 I +DGRC'=DGRC!(","_L_","'[(","_DGRC_",")) W !!,"Enter the procedure record number to add ICD operation codes to: ",L G P1:'Z S Z="" G P1
"RTN","DGPTFM6",59,0)
 S DP=45.05,DIE="^DGPT("_PTF_",""P"",",DA(1)=PTF,DR="" F I=5:1:9 I $P(P(DGRC),U,I)="" S DR=DR_(I-1)_";"
"RTN","DGPTFM6",60,0)
 S DR=$E(DR,1,$L(DR)-1),DA=+P(DGRC,1),DA(1)=PTF D ^DIE K DR,DIE G ^DGPTFM
"RTN","DGPTFM6",61,0)
FY86 S DR="" F J=1:1:5 I $P(PROC,U,J)="" S DR=DR_(J/100+45)_";"
"RTN","DGPTFM6",62,0)
 I DR="" W !!,"No more procedures can be added.",*7 H 2 G ^DGPTFM
"RTN","DGPTFM6",63,0)
 S DR=$E(DR,1,$L(DR)-1),DP=45,DIE="^DGPT(",DA=PTF D ^DIE K DR,DIE G ^DGPTFM
"RTN","DGPTFM6",64,0)
GETVAR ;CALLED FROM GET+1^DGPTFM
"RTN","DGPTFM6",65,0)
 S PM=I1-1,I=0 F I1=1:1 S I=$O(^DGPT(PTF,"S",I)) Q:I'>0  S S(I1)=^(I,0),S(I1,1)=I
"RTN","DGPTFM6",66,0)
 K P2 S SU=I1-1 S PROC=$S($D(^DGPT(PTF,"401P")):^("401P"),1:""),P2=0 F J1=1:1:5 S:$P(PROC,U,J1) P2=P2+1,P2(P2)=J1
"RTN","DGPTFM6",67,0)
 K P S I=0 F I1=1:1 S I=$O(^DGPT(PTF,"P",I)) Q:I'>0  S P(I1)=^(I,0),P(I1,1)=I
"RTN","DGPTFM6",68,0)
 Q
"RTN","DGPTFM6",69,0)
 ;
"RTN","DGPTFM6",70,0)
BADDT(DGPROCD) ; Check patients admit date and entered date against census DATE
"RTN","DGPTFM6",71,0)
 ; If admit date is after census date then we're done
"RTN","DGPTFM6",72,0)
 ; checks to see if Patient has been discharged or has a closed census and returns false 
"RTN","DGPTFM6",73,0)
 ; If not discharged or closed and the admit and procedure date is within census date range then return false
"RTN","DGPTFM6",74,0)
 ; If admit date and procedure date is past the date range then return true
"RTN","DGPTFM6",75,0)
 I $G(DGPROCD,0)<$P(^DGPT(DA(1),0),U,2) D EN^DDIOL("Not Before Admission ") Q 1
"RTN","DGPTFM6",76,0)
 I $G(DGPROC,0)>($S($D(^DGPT(DA(1),70)):$S(+^(70):+^(70),1:9999999),1:9999999)) D EN^DDIOL("Not After discharge") Q 1
"RTN","DGPTFM6",77,0)
 I (DGADM>DGPTDAT) Q 0 ; Admit date is after census date
"RTN","DGPTFM6",78,0)
 K DGI N DG601DT
"RTN","DGPTFM6",79,0)
 F DGI=0:0 S DGI=$O(^DGPT("ACENSUS",PTF,DGI)) Q:'DGI  I $D(^DGPT(DGI,0)),$P(^(0),U,12)=PTF,$D(^DG(45.86,+$P(^(0),U,13),0)) S Y=+^(0) X ^DD("DD") S DGI(DGI)=Y
"RTN","DGPTFM6",80,0)
 Q:($D(DGI)>1) 0 ;Closed Census
"RTN","DGPTFM6",81,0)
 I $D(^DGPT(PTF,70)),$P($G(^(70)),U)'="" Q 0 ; Patient has been discharged
"RTN","DGPTFM6",82,0)
 S DG601DT=$S($G(DGPROCD):DGPROCD,1:$G(EFFDATE))
"RTN","DGPTFM6",83,0)
 Q:(DGADM<(DGPTDAT+.09))&(DG601DT<(DGPTDAT+.09)) 0 ;Admit and procedure Date in Census Range
"RTN","DGPTFM6",84,0)
 D EN^DDIOL("Not After Census Date") Q 1 ; Reject date
"RTN","DGPTFM8")
0^75^B7609505^B9470941
"RTN","DGPTFM8",1,0)
DGPTFM8 ;ALB/MTC - PTF ADDITIONAL QUESTION DISPLAY FOR MAS SCREEN ;25 APR 91
"RTN","DGPTFM8",2,0)
 ;;5.3;Registration;**729,850**;Aug 13, 1993;Build 171
"RTN","DGPTFM8",3,0)
 ;
"RTN","DGPTFM8",4,0)
 ; This routine has two entry points WD3 and SD3, called from
"RTN","DGPTFM8",5,0)
 ; DGPTFM. This entry points will display Additional PTF information
"RTN","DGPTFM8",6,0)
 ; on the <MAS> screen.
"RTN","DGPTFM8",7,0)
 ;
"RTN","DGPTFM8",8,0)
WD3 ;-- display information for additional PTF questions by movement
"RTN","DGPTFM8",9,0)
 S DG300A="" I $D(M(J)),$D(^DGPT(PTF,"M",+M(J),300)) S DG300A=^(300)
"RTN","DGPTFM8",10,0)
 I DG300A']"" G WD3Q
"RTN","DGPTFM8",11,0)
 S (DGCA,DGCB)=2
"RTN","DGPTFM8",12,0)
 D GETNUM^DGPTSCAN
"RTN","DGPTFM8",13,0)
 S DGL=0
"RTN","DGPTFM8",14,0)
 ;850 Only one movement per line change
"RTN","DGPTFM8",15,0)
 F DGI=0:0 S X=DGCA,DG300=DG300A D PRN1 S DGCA=X+1 Q:(DGCA>DGFNUM)
"RTN","DGPTFM8",16,0)
WD3Q ;
"RTN","DGPTFM8",17,0)
 K DGFNUM,DGI,DG300,DG300A,DG300B,DGL,DGCA,DGCB
"RTN","DGPTFM8",18,0)
 Q
"RTN","DGPTFM8",19,0)
PRN1 ;-- display additional PTF question information
"RTN","DGPTFM8",20,0)
 I X=2,$P(DG300,U,2)]"" W !?2,"Self Injury - "_$S($P(DG300,U,2)=1:"Attempted Suicide",$P(DG300,U,2)=2:"Accomplished Suicide",1:"Self Inflicted Injury") G PRNQ1
"RTN","DGPTFM8",21,0)
 S:X=2 X=3
"RTN","DGPTFM8",22,0)
 I X=3,$P(DG300,U,3)]"" W !?2,"Legionnaire's - "_$S($P(DG300,U,3)=1:"Yes",1:"No") G PRNQ1
"RTN","DGPTFM8",23,0)
 S:X=3 X=4
"RTN","DGPTFM8",24,0)
 I X=4,$P(DG300,U,4)]"" W !?2,"Substance - "_$S($D(^DIC(45.61,$P(DG300,U,4),0)):$P(^(0),U),1:"") G PRNQ1
"RTN","DGPTFM8",25,0)
 S:X=4 X=5
"RTN","DGPTFM8",26,0)
 S DGPSY=0 I "5,6,7"[X S X=7 F DGJ=5,6,7 I $P(DG300,U,DGJ)]"" S DGPSY=1 Q
"RTN","DGPTFM8",27,0)
 G PRNQ1:'DGPSY
"RTN","DGPTFM8",28,0)
 W !?2,"Psy- CL:",+$P(DG300,U,5),?DGL*40+13," CR:",+$P(DG300,U,6),?DGL*40+21," HI:",+$P(DG300,U,7)
"RTN","DGPTFM8",29,0)
PRNQ1 ;
"RTN","DGPTFM8",30,0)
 K DGJ,DGPSY
"RTN","DGPTFM8",31,0)
 Q
"RTN","DGPTFM8",32,0)
SD3 ;-- tag for printing kidney donor source 
"RTN","DGPTFM8",33,0)
 ; call only by DGPTFM@SERV
"RTN","DGPTFM8",34,0)
 S DGL=0
"RTN","DGPTFM8",35,0)
 S DGSUR=J D:$D(S(DGSUR)) KID
"RTN","DGPTFM8",36,0)
SD3Q K DGSUR,DGL
"RTN","DGPTFM8",37,0)
 Q
"RTN","DGPTFM8",38,0)
KID ;-- kidney transplant source
"RTN","DGPTFM8",39,0)
 W:('DGL)&($X>0) !
"RTN","DGPTFM8",40,0)
 I $D(^DGPT(PTF,"S",DGSUR,300)),$P(^(300),U)]"" W "  Kidney - "_$S(+^(300)=1:"Live Donor",1:"Cadaver")
"RTN","DGPTFM8",41,0)
 Q
"RTN","DGPTFM8",42,0)
PRN2 ;-- display additional PTF question information
"RTN","DGPTFM8",43,0)
 I $P(DG300,U,2)]"" W !,"Self Injury - "_$S($P(DG300,U,2)=1:"Attempted Suicide",$P(DG300,U,2)=2:"Accomplished Suicide",1:"Self Inflicted Injury")
"RTN","DGPTFM8",44,0)
 I $P(DG300,U,3)]"" W !,"Legionnaire's - "_$S($P(DG300,U,3)=1:"Yes",1:"No")
"RTN","DGPTFM8",45,0)
 I $P(DG300,U,4)]"" W !,"Substance - "_$S($D(^DIC(45.61,$P(DG300,U,4),0)):$P(^(0),U),1:"")
"RTN","DGPTFM8",46,0)
 S DGPSY=0 F DGI=5,6,7 I $P(DG300,U,DGI)]"" S DGPSY=1 Q
"RTN","DGPTFM8",47,0)
 G PRNQ2:'DGPSY
"RTN","DGPTFM8",48,0)
 W !,"Psy - CL:",+$P(DG300,U,5),?12,"CR:",+$P(DG300,U,6),?19,"HI:",+$P(DG300,U,7)
"RTN","DGPTFM8",49,0)
PRNQ2 ;
"RTN","DGPTFM8",50,0)
 K DGI,DGPSY
"RTN","DGPTFM8",51,0)
 Q
"RTN","DGPTFM8",52,0)
PRN3 ;-- print kidney additional question
"RTN","DGPTFM8",53,0)
 I $P(DG300,U)]"" W !,"Kidney - "_$S(+DG300=1:"Live Donor",1:"Cadaver")
"RTN","DGPTFM8",54,0)
PRNQ3 ;
"RTN","DGPTFM8",55,0)
 Q
"RTN","DGPTFMO")
0^16^B32031244^B26961325
"RTN","DGPTFMO",1,0)
DGPTFMO ;ALB/JDS/ADL - DGPTF PRINT TEMPLATE ;4/13/04 12:11pm
"RTN","DGPTFMO",2,0)
 ;;5.3;Registration;**195,397,510,590,594,606,683,729,664,850**;Aug 13, 1993;Build 171
"RTN","DGPTFMO",3,0)
 ;;ADL;Updated for CSV Project;;Mar 4, 2003
"RTN","DGPTFMO",4,0)
 ;FOR PTF REPORT CALLED FROM TEMPLATE DGPTF
"RTN","DGPTFMO",5,0)
 ;
"RTN","DGPTFMO",6,0)
EN ;
"RTN","DGPTFMO",7,0)
 K A,B,AD,ADA,DGDD,DGFC,HEAD,DGPTFE,DGST,DGN,T,T82,DGM82,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPTFMO",8,0)
 ;
"RTN","DGPTFMO",9,0)
 F I=0:0 S I=$O(^DGPT(D0,"M",I)) Q:I'>0  I $D(^(I,0)) S J=+$P(^(0),U,10) S:'J J=999999999 S:$D(T(J)) J=J+.01*I S T(J)=I
"RTN","DGPTFMO",10,0)
 F I=0:0 S I=$O(T(I)) Q:I'>0  S DGM=$S($D(^DGPT(D0,"M",T(I),0)):^(0),1:"") I DGM]"" S DGM82=$G(^DGPT(D0,"M",T(I),82)) D WRITE
"RTN","DGPTFMO",11,0)
 ;
"RTN","DGPTFMO",12,0)
 K T F I=0:0 S I=$O(^DGPT(D0,"S",I)) Q:I'>0  D SUR
"RTN","DGPTFMO",13,0)
 S DGOP1=$S($D(^DGPT(D0,"401P")):^("401P"),1:"")
"RTN","DGPTFMO",14,0)
 I DGOP1]"" D HEAD:$Y>(IOSL-10) G Q:'DN D PROC
"RTN","DGPTFMO",15,0)
 I $D(^DGPT(D0,"P")) D HEAD:$Y>(IOSL-10) G Q:'DN F I=0:0 S I=$O(^DGPT(D0,"P",I)) Q:I'>0  S DG601=^DGPT(D0,"P",I,0),Y=+DG601 D D^DGPTUTL W !!?5,"Procedure Date: ",Y,$$GETLABEL^DGPTIC10(EFFDATE,"P") D 601
"RTN","DGPTFMO",16,0)
 S DGPT=$G(^DGPT(D0,70)) I DGPT]"" G Q:'DN D DXLS
"RTN","DGPTFMO",17,0)
 K %,DGL,DGM,DGPT,DGOP,DGOP1,DGF,DGP,DXLS,DGICD,L1,S1,T,J,K,DGPR,DGN,AGE,B,DA,DAM,DFN,DGST,DOB,DP,DRG,EXP,NO,P,PTF,DGPTFE,SD1,SEX,TAC,TRS,DGDS,DGTD,DGPROC,DG601,DGPTDAT
"RTN","DGPTFMO",18,0)
 W !
"RTN","DGPTFMO",19,0)
 K T82,DGM82,DGMPOA
"RTN","DGPTFMO",20,0)
 Q
"RTN","DGPTFMO",21,0)
WRITE D HEAD:$Y>(IOSL-12) G Q:'DN S Y=$P(DGM,U,10),DGL=+$P(DGM,U,2),DGL=$S($D(^DIC(42.4,DGL,0)):^(0),1:""),DGL=$P(DGL,U,1) D D^DGPTUTL
"RTN","DGPTFMO",22,0)
 ; ICD-10 CALLS
"RTN","DGPTFMO",23,0)
 D EFFDATE^DGPTIC10(D0)
"RTN","DGPTFMO",24,0)
 ;
"RTN","DGPTFMO",25,0)
 W !!,"Movement Date: ",Y,?40,"Losing Specialty: ",$E(DGL,1,22),!,"Leave Days: ",$P(DGM,U,3),?40,"Pass Days: ",$P(DGM,U,4)
"RTN","DGPTFMO",26,0)
 W !,"Treated for SC condition: ",$S($P(DGM,U,18)=1:"Yes",1:"No")
"RTN","DGPTFMO",27,0)
 W:$P(DGM,U,31)'="" !,"Potentially Related to Combat: ",$S($P(DGM,U,31)="Y":"Yes",1:"No")
"RTN","DGPTFMO",28,0)
 W:$P(DGM,U,26)'="" !,"Treated for AO condition: ",$S($P(DGM,U,26)="Y":"Yes",1:"No")
"RTN","DGPTFMO",29,0)
 W:$P(DGM,U,27)'="" !,"Treated for IR condition: ",$S($P(DGM,U,27)="Y":"Yes",1:"No")
"RTN","DGPTFMO",30,0)
 W:$P(DGM,U,28)'="" !,"Treated for service in SW Asia: ",$S($P(DGM,U,28)="Y":"Yes",1:"No")
"RTN","DGPTFMO",31,0)
 W:$P(DGM,U,29)'="" !,"Treated for MST condition: ",$S($P(DGM,U,29)="Y":"Yes",$P(DGM,U,29)="N":"No",1:"Declined to answer") ; added 6/17/98 for MST enhancement
"RTN","DGPTFMO",32,0)
 W:$P(DGM,U,30)'="" !,"Treated for HEAD/NECK CA condition: ",$S($P(DGM,U,30)="Y":"Yes",1:"No")
"RTN","DGPTFMO",33,0)
 W:$P(DGM,U,32)'="" !,"Treated for SHAD Condition: ",$S($P(DGM,U,32)="Y":"Yes",1:"No")
"RTN","DGPTFMO",34,0)
 W:T(I)=1 !,"Discharge "
"RTN","DGPTFMO",35,0)
 S DGF="" F J=5:1:15 I J#10,+$P(DGM,U,J) S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DGM,U,J),EFFDATE) D 
"RTN","DGPTFMO",36,0)
 . S DGMPOA=$P($G(DGM82),U,$S(J<11:J-4,1:J-5))
"RTN","DGPTFMO",37,0)
 . W:DGF="" !!?5,"DX: ",$$GETLABEL^DGPTIC10(EFFDATE,"D")
"RTN","DGPTFMO",38,0)
 . D WRITECOD^DGPTIC10("DIAG",+$P(DGM,U,J),EFFDATE,2,1,8)
"RTN","DGPTFMO",39,0)
 . I $P(DGPTTMP,U,20)=30,$G(DGMPOA)'="" W:$X>73 !,"            " W " (POA="_$G(DGMPOA)_")" W:$G(DGMPOA)="" " (POA='')"
"RTN","DGPTFMO",40,0)
 . W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"")
"RTN","DGPTFMO",41,0)
 . S DGF=1
"RTN","DGPTFMO",42,0)
 ;-- display expanded codes 
"RTN","DGPTFMO",43,0)
 S DG300=$S($D(^DGPT(D0,"M",T(I),300)):^(300),1:"") I DG300]"" D HEAD:$Y>(IOSL-6) D PRN2^DGPTFM8 W !
"RTN","DGPTFMO",44,0)
 K DG300
"RTN","DGPTFMO",45,0)
 ;Display TRANSFER DRG with description
"RTN","DGPTFMO",46,0)
 Q:'$D(^DGPT(D0,"M",T(I),"P"))  S DGTD=+^("P") Q:'$D(^ICD(DGTD,0))  W !?3,"TRANSFER DRG: ",DGTD," - "
"RTN","DGPTFMO",47,0)
 N DXD,DGDX
"RTN","DGPTFMO",48,0)
 S DXD=$$DRGD^ICDGTDRG(DGTD,"DGDX",,$$GETDATE^ICDGTDRG(D0)),DGDS=0
"RTN","DGPTFMO",49,0)
 F  S DGDS=$O(DGDX(DGDS)) Q:'+DGDS  Q:DGDX(DGDS)=" "  W !,DGDX(DGDS)
"RTN","DGPTFMO",50,0)
 Q
"RTN","DGPTFMO",51,0)
HEAD I $E(IOST,1)="C" W *7 R X:DTIME I X=U S DN=0 Q
"RTN","DGPTFMO",52,0)
 S DC=DC+1 W @IOF,! X:$D(^UTILITY($J,2)) ^(2) W ! F K=1:1:IOM W "_"
"RTN","DGPTFMO",53,0)
 W !,"("_$P(^DPT(+^DGPT(D0,0),0),U,1)_")",!
"RTN","DGPTFMO",54,0)
 Q
"RTN","DGPTFMO",55,0)
SUR D HEAD:$Y>(IOSL-7) G Q:'DN S S1=^DGPT(D0,"S",I,0),Y=+S1 D D^DGPTUTL W !!,"   Date of Surg: ",Y,?45,"Chief Surg: " S L=";"_$P(^DD(45.01,4,0),U,3),L1=";"_$P(S1,U,4)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFMO",56,0)
 W !,"    Anesth Tech: " S L=";"_$P(^DD(45.01,6,0),U,3),L1=";"_$P(S1,U,6)_":" W $P($P(L,L1,2),";",1),?45,"First Asst: " S L=";"_$P(^DD(45.01,5,0),U,3),L1=";"_$P(S1,U,5)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFMO",57,0)
 W !,"  Source of pay: " S L=";"_$P(^DD(45.01,7,0),U,3),L1=";"_$P(S1,U,7)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFMO",58,0)
 W ?46,"Surg spec: ",$S($D(^DIC(45.3,+$P(S1,U,3),0)):$P(^(0),U,2),1:"")
"RTN","DGPTFMO",59,0)
 W !!,?5,"Surg/pro: ",$$GETLABEL^DGPTIC10(EFFDATE,"P"),!?7
"RTN","DGPTFMO",60,0)
 F K=1:1:5 S L=$P(S1,U,K+7) I L'="" S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+L,EFFDATE) D
"RTN","DGPTFMO",61,0)
 . D WRITECOD^DGPTIC10("PROC",+L,EFFDATE,2,1,8)
"RTN","DGPTFMO",62,0)
 . W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"")
"RTN","DGPTFMO",63,0)
 ;-- display expanded codes
"RTN","DGPTFMO",64,0)
 S DG300=$S($D(^DGPT(D0,"S",I,300)):^(300),1:"") I DG300]"" D PRN3^DGPTFM8
"RTN","DGPTFMO",65,0)
 K DG300
"RTN","DGPTFMO",66,0)
 Q
"RTN","DGPTFMO",67,0)
PROC ;
"RTN","DGPTFMO",68,0)
 S DGF="" F I=1:1:5 D:$P(DGOP1,U,I)'=""
"RTN","DGPTFMO",69,0)
 . S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+$P(DGOP1,U,I),EFFDATE)
"RTN","DGPTFMO",70,0)
 . W:'DGF !!?5,"Procedure: ",$$GETLABEL^DGPTIC10(EFFDATE,"P") S DGF=1
"RTN","DGPTFMO",71,0)
 . D WRITECOD^DGPTIC10("PROC",+$P(DGOP1,U,I),EFFDATE,2,1,8)
"RTN","DGPTFMO",72,0)
 . W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"")
"RTN","DGPTFMO",73,0)
 Q
"RTN","DGPTFMO",74,0)
601 ;print the procedures/dates from the 601 procedure multiple (eff. 10/1/87)
"RTN","DGPTFMO",75,0)
 F J=5:1:9 I +$P(DG601,U,J) S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+$P(DG601,U,J),EFFDATE) D  ;.,DGPROC=$S(+DGPTTMP>0:$P(DGPTTMP,U,2,99),1:"") D
"RTN","DGPTFMO",76,0)
 . D WRITECOD^DGPTIC10("PROC",+$P(DG601,U,J),EFFDATE,2,1,8)
"RTN","DGPTFMO",77,0)
 . W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"")
"RTN","DGPTFMO",78,0)
 Q
"RTN","DGPTFMO",79,0)
DXLS D HEAD:$Y>(IOSL-16)
"RTN","DGPTFMO",80,0)
 I +$P(DGPT,U,10) D
"RTN","DGPTFMO",81,0)
 . S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DGPT,U,10),EFFDATE),DXLS=$S(+DGPTTMP>0:$P(DGPTTMP,U,2,99),1:"")
"RTN","DGPTFMO",82,0)
 . W !!?5,"PRINCIPAL DIAGNOSIS: ",$$GETLABEL^DGPTIC10(EFFDATE,"D")
"RTN","DGPTFMO",83,0)
 . D WRITECOD^DGPTIC10("DIAG",+$P(DGPT,U,10),EFFDATE,2,1,8)
"RTN","DGPTFMO",84,0)
 . W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"")
"RTN","DGPTFMO",85,0)
 ;
"RTN","DGPTFMO",86,0)
 I +$P(DGPT,U,11) D
"RTN","DGPTFMO",87,0)
 . S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DGPT,U,11),EFFDATE)
"RTN","DGPTFMO",88,0)
 . D WRITECOD^DGPTIC10("DIAG",+$P(DGPT,U,11),EFFDATE,2,1,8)
"RTN","DGPTFMO",89,0)
 . W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"")
"RTN","DGPTFMO",90,0)
 S K=DGPT F I=16:1:24 D DSP:$P(K,"^",I)
"RTN","DGPTFMO",91,0)
 S K=$G(^DGPT(D0,71)) F I=1:1:4 D:$P(K,"^",I) DSP
"RTN","DGPTFMO",92,0)
 ;-- display expanded code information
"RTN","DGPTFMO",93,0)
 S DG300=$S($D(^DGPT(D0,300)):^(300),1:"") D:DG300]"" PRN2^DGPTFM8 K DG300
"RTN","DGPTFMO",94,0)
 D EN2^DGPTF4 Q
"RTN","DGPTFMO",95,0)
Q Q
"RTN","DGPTFMO",96,0)
Q1 K ^UTILITY(U,$J),DG1 Q
"RTN","DGPTFMO",97,0)
DT I Y W $P("JAN^FEB^MAR^APR^MAY^JUN^JUL^AUG^SEP^OCT^NOV^DEC",U,$E(Y,4,5))," " W:Y#100 $J(Y#100\1,2),"," W Y\10000+1700 W:Y#1 "  ",$E(Y_0,9,10),":",$E(Y_"000",11,12)
"RTN","DGPTFMO",98,0)
 Q
"RTN","DGPTFMO",99,0)
DSP ;
"RTN","DGPTFMO",100,0)
 S J=$$ICDDATA^ICDXCODE("DIAG",+$P(K,U,I),EFFDATE) D
"RTN","DGPTFMO",101,0)
 . D WRITECOD^DGPTIC10("DIAG",+$P(K,U,I),EFFDATE,2,1,8)
"RTN","DGPTFMO",102,0)
 . W $S(+J<1!('$P(J,U,10)):"*",1:"")
"RTN","DGPTFMO",103,0)
 Q
"RTN","DGPTFQWK")
0^72^B21436549^B20032997
"RTN","DGPTFQWK",1,0)
DGPTFQWK ;ALB/AS - QUICK/LOAD PTF DATA ;7/21/05 2:44pm
"RTN","DGPTFQWK",2,0)
 ;;5.3;Registration;**517,594,635,729,850**;Aug 13, 1993;Build 171
"RTN","DGPTFQWK",3,0)
 ;
"RTN","DGPTFQWK",4,0)
 S (DGPTF,DA)=PTF,DIE="^DGPT(",DR="[DGQWK"_$S('DGPTFE:"]",1:"F]") W !,"* editing 101 & 701 transactions" D ^DIE S DR="[DG701]" D ^DIE W !,"* editing 501 transactions"
"RTN","DGPTFQWK",5,0)
 F DGM=0:0 D S501 Q:Y'>0  K DA S (DGPTF,DA)=PTF S DGMOV=+Y,DGJUMP=$S('DGPTFE:"",1:"1-2"),DR=$S('DGPTFE:"[DG501]",1:"[DG501F]"),DIE="^DGPT(" D ^DIE,CHK501^DGPTSCAN K DGMOV
"RTN","DGPTFQWK",6,0)
 K DIC,DA,DR,DIE,DGCODSYS,DGXX,DGTYPE
"RTN","DGPTFQWK",7,0)
 W !,"* editing 401 transactions"
"RTN","DGPTFQWK",8,0)
 F DGM=0:0 D S401 Q:Y'>0  K DA S DGSUR=+Y,DGJUMP="1-2",DR="[DG401]",DIE="^DGPT(",(DA,DGPTF)=PTF D ^DIE,CHK401^DGPTSCAN K DGSUR
"RTN","DGPTFQWK",9,0)
 I '$P(^DGPT(PTF,0),U,4) W !,"* editing 801 transactions" D S801
"RTN","DGPTFQWK",10,0)
 K DIC,DA,DR,DIE
"RTN","DGPTFQWK",11,0)
 W !,"* editing 601 transactions"
"RTN","DGPTFQWK",12,0)
 F DGM=0:0 S DGZP=1 D S601 Q:Y'>0  K DA S P(DGZP,1)=+Y,DGJUMP="1-2",DR="[DG601]",DIE="^DGPT(",(DA,DGPTF)=PTF D ^DIE,CHK601^DGPTSCAN K P
"RTN","DGPTFQWK",13,0)
 K DIC,DA,DR,DIE
"RTN","DGPTFQWK",14,0)
 I '$P(^DGPT(PTF,0),"^",4)&('DGST) W !,"  Updating TRANSFER DRGs" S DGADM=$P(^DGPT(PTF,0),U,2) D SUDO1^DGPTSUDO
"RTN","DGPTFQWK",15,0)
 K DGM,DA,DGMOVENO,DIC,DIE,DR,Y,DGPTF,DGJUMP Q
"RTN","DGPTFQWK",16,0)
S501 ;-- set up 501 
"RTN","DGPTFQWK",17,0)
 ;set screen transaction identity
"RTN","DGPTFQWK",18,0)
 S X1="^501"
"RTN","DGPTFQWK",19,0)
 S DA(1)=PTF,DIC("A")="Select 501 MOVEMENT NUMBER: ",DIC(0)="AEQ",DIC="^DGPT("_PTF_",""M""," S:'$D(^DGPT(PTF,"M",0)) ^(0)="^45.02AI^^" D ^DIC
"RTN","DGPTFQWK",20,0)
 K DA,DIC
"RTN","DGPTFQWK",21,0)
 Q
"RTN","DGPTFQWK",22,0)
 ;
"RTN","DGPTFQWK",23,0)
S401 ;-- set up 401
"RTN","DGPTFQWK",24,0)
 ;set screen transaction identity
"RTN","DGPTFQWK",25,0)
 S X1="^401"
"RTN","DGPTFQWK",26,0)
 S DA(1)=PTF,DIC("A")="Select 401 SURGERY DATE: ",DIC(0)="AEQL",DIC="^DGPT("_PTF_",""S""," S:'$D(^DGPT(PTF,"S",0)) ^(0)="^45.01DA^^" D ^DIC
"RTN","DGPTFQWK",27,0)
 K DA,DIC
"RTN","DGPTFQWK",28,0)
 Q
"RTN","DGPTFQWK",29,0)
 ;
"RTN","DGPTFQWK",30,0)
S601 ;-- set up 601
"RTN","DGPTFQWK",31,0)
 ;set screen transaction identity
"RTN","DGPTFQWK",32,0)
 S X1="^601"
"RTN","DGPTFQWK",33,0)
 S DA(1)=PTF,DIC("A")="Select 601 PROCEDURE DATE: ",DIC(0)="AEQL",DIC="^DGPT("_PTF_",""P""," S:'$D(^DGPT(PTF,"P",0)) ^(0)="^45.05DA^^" D ^DIC
"RTN","DGPTFQWK",34,0)
 K DA,DIC
"RTN","DGPTFQWK",35,0)
 Q
"RTN","DGPTFQWK",36,0)
S801 ;-- set up 801
"RTN","DGPTFQWK",37,0)
 ;set screen transaction identity
"RTN","DGPTFQWK",38,0)
 S X1="^801"
"RTN","DGPTFQWK",39,0)
 F  D  D REQ:$D(PSIEN) Q:$G(RFL)=1!(Y<0)  D PCE
"RTN","DGPTFQWK",40,0)
 .S DIC("A")="Select 801 CPT DATE/TIME: "
"RTN","DGPTFQWK",41,0)
 .S DA(1)=PTF,DIC(0)="AEQLZ",DIC="^DGPT("_PTF_",""C"",",DLAYGO=45
"RTN","DGPTFQWK",42,0)
 .S:'$D(^DGPT(PTF,"C",0)) ^(0)="^45.06^^" D ^DIC
"RTN","DGPTFQWK",43,0)
 .K DA,DIC,PSIEN Q:Y'>0  S DGPRD=+Y(0),DGPSM=+Y D MOB^DGPTFM2 I $P(DGZPRF,U,3) F I=1:1:$P(DGZPRF,U,3) S:DGZPRF(I,0)=DGPSM DGZP=I
"RTN","DGPTFQWK",44,0)
 .S (DA(1),REC)=PTF,DIE="^DGPT("_PTF_",""C"",",(DA,PSIEN)=DGZPRF(DGZP,0),DR=".02;.03;.05" D FMDIE I $D(Y)>9!$D(DTOUT) S Y=-1 Q
"RTN","DGPTFQWK",45,0)
 .S DGI=0,DR=".01;" D CL^SDCO21(DFN,DGPRD,"",.SDCLY) D  S Y=1
"RTN","DGPTFQWK",46,0)
 ..F  S DGI=$O(^DGCPT(46,"C",PTF,DGI)) Q:DGI'>0  I +^DGCPT(46,DGI,1)=+DGZPRF(DGZP)&'$D(^(9)) S (DA,REC)=DGI,DR=".01;",DIE="^DGCPT(46," D GETINFO^DGPTFM21
"RTN","DGPTFQWK",47,0)
 ..F  S DA=PTF,DIC="^DGCPT(46,",DIC(0)="AELQMZ",DLAYGO=46,DIC("S")="D EN6^DGPTFJC I 'DGER" D ^DIC K DIC Q:Y'>0  D SED^DGPTFM2
"RTN","DGPTFQWK",48,0)
 ..S Y=1
"RTN","DGPTFQWK",49,0)
 ..Q
"RTN","DGPTFQWK",50,0)
 .Q
"RTN","DGPTFQWK",51,0)
 K DR,DIE,DIC,DA,DGI,DGJUMP,DGPRD,DLAYGO,RFL Q
"RTN","DGPTFQWK",52,0)
REQ ;CHECK FOR REQUIRED FIELDS IN CPT RECORDS.  RECORDS MISSING ONE OR MORE REQUIRED FIELDS ARE DELETED.
"RTN","DGPTFQWK",53,0)
 S RFL=0 I '$P(^DGPT(PTF,"C",PSIEN,0),U,3) S DA(1)=PTF,DA=DGPSM,DIK="^DGPT("_PTF_",""C""," D  G REQQ
"RTN","DGPTFQWK",54,0)
 .D ^DIK K DA W !!,"No CPT records have been filed because no performing provider was specified." S RFL=1
"RTN","DGPTFQWK",55,0)
 S (I,FCPT)=0 D RESEQ^DGPTFM3(PTF)
"RTN","DGPTFQWK",56,0)
 F J=1:1 S I=$O(^DGCPT(46,"C",PTF,I)) Q:'I  D:+^DGCPT(46,I,1)=DGPRD&'$G(^(9))
"RTN","DGPTFQWK",57,0)
 .I $P(^DGCPT(46,I,0),U,4) S FCPT=1 Q
"RTN","DGPTFQWK",58,0)
 .S DA=I,DIK="^DGCPT(46,",CPT=+^DGCPT(46,I,0) D ^DIK
"RTN","DGPTFQWK",59,0)
 .W !!,"CPT " S N=$$CPT^ICPTCOD(CPT,$$GETDATE^ICDGTDRG(PTF)) W $P(N,U,2)," ",$P(N,U,3)," not filed because no diagnosis 1 was entered."
"RTN","DGPTFQWK",60,0)
 .S RFL=2
"RTN","DGPTFQWK",61,0)
 I FCPT K FCPT,I,J,N G REQQ
"RTN","DGPTFQWK",62,0)
 S DA(1)=PTF,DA=PSIEN,DIK="^DGPT("_PTF_",""C"","
"RTN","DGPTFQWK",63,0)
 D ^DIK K DA W !!,"No CPT records have been filed because no CPT codes were filed." S RFL=1 K FCPT,I,J,N
"RTN","DGPTFQWK",64,0)
REQQ ;D RESEQ^DGPTFM3(PTF)
"RTN","DGPTFQWK",65,0)
 Q
"RTN","DGPTFQWK",66,0)
SED S DR=".14////"_DGPRD_";.16////"_PTF_";",DA=+Y,DIE="^DGCPT(46,"
"RTN","DGPTFQWK",67,0)
 S REC=PTF D SDR^DGPTFM21,FMDIE Q
"RTN","DGPTFQWK",68,0)
PCE S DIR("A")="Send record to PCE? ",DIR(0)="S^Y:YES;N:NO",DIR("B")="NO"
"RTN","DGPTFQWK",69,0)
 D ^DIR K DIR Q:Y="N"!$D(DIRUT)
"RTN","DGPTFQWK",70,0)
 D MOB^DGPTFM2 S RES=$$DATA2PCE^DGAPI1(DFN,PTF,DGZP)
"RTN","DGPTFQWK",71,0)
 I RES=1 L -^DGPT(PTF) W !,"PTF Record sent to PCE" H 2 Q
"RTN","DGPTFQWK",72,0)
 W @IOF
"RTN","DGPTFQWK",73,0)
 W !,"The PTF Record may not have been filed in PCE due to errors."
"RTN","DGPTFQWK",74,0)
 W !,"Press return to continue." R X:DTIME
"RTN","DGPTFQWK",75,0)
 L -^DGPT(PTF) Q
"RTN","DGPTFQWK",76,0)
FMDIE L +^DGPT(45,REC):2
"RTN","DGPTFQWK",77,0)
 I  D ^DIE S RES=$$DELVFILE^DGAPI1(DFN,PTF,DGZP) L -^DGPT(45,REC) Q
"RTN","DGPTFQWK",78,0)
ERR W !,"CPT record is being edited by another user" K DIE,REC S ERRFKG=1 H 2 Q
"RTN","DGPTFTR")
0^27^B24216608^B20387661
"RTN","DGPTFTR",1,0)
DGPTFTR ;ALB/JDS - TRANSMISSION OF PTF ;6/29/10 3:57pm
"RTN","DGPTFTR",2,0)
 ;;5.3;Registration;**37,415,530,601,614,645,787,850**;Aug 13, 1993;Build 171
"RTN","DGPTFTR",3,0)
 ;
"RTN","DGPTFTR",4,0)
ENN L +^DGP(45.83):$G(DILOCKTM,5) I '$T W !,"Already transmitting" Q  ;787 add +,DILOCKTM
"RTN","DGPTFTR",5,0)
 D CEN^DGPTUTL
"RTN","DGPTFTR",6,0)
 I '$D(DGRTY) S Y=1 D RTY^DGPTUTL
"RTN","DGPTFTR",7,0)
 D FDT^DGPTUTL S DGFMTDT=Y
"RTN","DGPTFTR",8,0)
 ;
"RTN","DGPTFTR",9,0)
EN5 K DIC,^TMP("DGPT",$J) S DIC=45.83,DIC(0)="AMZEQ",DIC("A")="Enter Start Date: "
"RTN","DGPTFTR",10,0)
 S DIC("S")="I $O(^DGP(45.83,+Y,""P"",0)) F DGX=0:0 S DGX=$O(^DGP(45.83,+Y,""P"",DGX)) Q:'DGX  I '$P(^DGP(45.83,+Y,""P"",DGX,0),U,2),$D(^DGPT(DGX,0)),$D(^(70)),+^(70)>2901000,$P(^(0),U,11)=+DGRTY S ^TMP(""DGPT"",$J,""ICD CHECK"",DGX)="""" Q"
"RTN","DGPTFTR",11,0)
 S D="ANT" D IX^DIC G ENQ1:X["^"!(X=""),EN5:Y'>0
"RTN","DGPTFTR",12,0)
 S DGSD=+Y(0),DIC(0)="EAMZQ",DIC("S")="I Y'<DGSD"_" "_DIC("S"),DIC("A")="Enter Through Date: TODAY//  ",D="ANT" D IX^DIC K DIC,D
"RTN","DGPTFTR",13,0)
 ;
"RTN","DGPTFTR",14,0)
 G ENQ1:X["^" S DGED=$S(Y>0:+Y(0),1:DT)
"RTN","DGPTFTR",15,0)
 ; -- 125 cols
"RTN","DGPTFTR",16,0)
 S VATNAME="PTF125" D ^VATRAN I VATERR K VATNAME,VATERR,VAT L -^DGP(45.83) G ENQ
"RTN","DGPTFTR",17,0)
 S DGFMT=2 D SCAN G:DGOUTX ENQ1
"RTN","DGPTFTR",18,0)
ENQ D SCAN^DGPTFTR3
"RTN","DGPTFTR",19,0)
ENQ1 L -^DGP(45.83) K DGACNT,DGXM,XMDUN,XMY,DGOUTX,DGSTCNT,DIC,DGX,DGRTY,DGRTY0,DGCN,DGCN0,DGPTFMT,DGFMT,DGFMTDT,DGLOGIC,VAT,VATERR,VATNAME,DGSD,DGED ;787 change L to  full - lock.
"RTN","DGPTFTR",20,0)
 Q
"RTN","DGPTFTR",21,0)
 ;
"RTN","DGPTFTR",22,0)
SCAN K DGERR ;S DGPTFMT=2 S Y=$G(DGY) D LOG S DGCNT=1,DGD=DGSD-.01,DGTR=0,DGID=1
"RTN","DGPTFTR",23,0)
 N DGY S DGY=$G(Y) D FMT^DGPTUTL S Y=$G(DGY)
"RTN","DGPTFTR",24,0)
 D LOG S DGCNT=1,DGD=DGSD-.01,DGTR=0,DGID=1
"RTN","DGPTFTR",25,0)
 ; DG*5.3*614 - DGFIRST identifies first record in a batch
"RTN","DGPTFTR",26,0)
 N DGFIRST S DGFIRST=1
"RTN","DGPTFTR",27,0)
 W !!,"Now transmitting 125 column ",$P(DGRTY0,U)," records..."
"RTN","DGPTFTR",28,0)
 W !,"Includes records of "
"RTN","DGPTFTR",29,0)
 ;
"RTN","DGPTFTR",30,0)
DAT D:DGCNT>1 XMIT S DGD=$O(^DGP(45.83,DGD))
"RTN","DGPTFTR",31,0)
 I DGD>0,DGD'>DGED D SETTRAN^DGPTUTL1 Q:DGOUTX
"RTN","DGPTFTR",32,0)
 I DGD'>0!(DGD>DGED) D BULL^DGPTFTR3 G DATQ
"RTN","DGPTFTR",33,0)
 S J=0 G PWR
"RTN","DGPTFTR",34,0)
DATQ Q
"RTN","DGPTFTR",35,0)
 ;
"RTN","DGPTFTR",36,0)
PWR ;
"RTN","DGPTFTR",37,0)
 D CEN^DGPTUTL
"RTN","DGPTFTR",38,0)
 S P=J,J=$O(^DGP(45.83,DGD,"P",J)) G DAT:J'>0,PWR:$P(^(J,0),U,2)
"RTN","DGPTFTR",39,0)
 I $D(^DGPT(J,0)),$P(^(0),U,11)'=+DGRTY G PWR
"RTN","DGPTFTR",40,0)
 I $P(DGCN0,U,3)>DT,DGRTY=1 D CEN^DGPTFTR3 G PWR:'Y
"RTN","DGPTFTR",41,0)
 S Y=$S($D(^DGPT(J,70)):+^(70),1:0) D FMT^DGPTUTL G PWR:DGPTFMT<DGFMT
"RTN","DGPTFTR",42,0)
 S T1=0,T2=9999999,Y=J,X=0 S:DGRTY=2 T2=+DGCN0_".9",T1=+$P(DGCN0,U,5) D LINES^DGPTFVC2 I (DGCNT+X)>VAT("F"),'$G(DGFIRST) S J=P G XMIT
"RTN","DGPTFTR",43,0)
 I $G(DGFIRST)=1 S DGFIRST=0
"RTN","DGPTFTR",44,0)
 K DICR S DGERR=0,DGSTCNT("P",J)=DGCNT
"RTN","DGPTFTR",45,0)
 W !,$E($P(^DPT(+^DGPT(J,0),0),U),1,25),?27,"(#",J,")" S X=^DGPT(J,0) Q:'$D(^(0))  S DGNODE=^(0),DGADM=$P(DGNODE,U,2) D
"RTN","DGPTFTR",46,0)
 . W "  Admitted: ",$TR($$FMTE^XLFDT(DGADM,"5DF")," ","0")," " K ^TMP("AEDIT",$J),^TMP("AERROR",$J) S DGACNT=0
"RTN","DGPTFTR",47,0)
 . F DGZ=6,4 S %=";"_$S($D(^DD(45,DGZ,0)):$P(^(0),U,3),1:"") W $P($P(%,";"_$P(DGNODE,U,DGZ)_":",2),";",1)_" "
"RTN","DGPTFTR",48,0)
 . K DGNODE,DGZ Q
"RTN","DGPTFTR",49,0)
 I DGRTY=1 D COM
"RTN","DGPTFTR",50,0)
 I DGRTY=2 S T2=+DGCN0_".9",T1=+$P(DGCN0,U,5),(PTF,DGCI)=J D COM1
"RTN","DGPTFTR",51,0)
 I DGERR D OPEN^DGPTFTR3
"RTN","DGPTFTR",52,0)
 K ^TMP("AEDIT",$J)
"RTN","DGPTFTR",53,0)
 I 'DGERR W ?70," Okay" S DGTR=DGTR+1 G XMIT:DGCNT>VAT("F")
"RTN","DGPTFTR",54,0)
 G PWR
"RTN","DGPTFTR",55,0)
 Q
"RTN","DGPTFTR",56,0)
 ;
"RTN","DGPTFTR",57,0)
XMIT K XMY D ROUTER
"RTN","DGPTFTR",58,0)
 S XMZ=DGXMZ,^XMB(3.9,XMZ,2,0)="^3.92A^"_(DGCNT-1)_"^"_(DGCNT-1)_"^"_DT,DGJ=J
"RTN","DGPTFTR",59,0)
 S XMDUZ=.5,XMDUN=$P(^VA(200,DUZ,0),U) D ENT1^XMD
"RTN","DGPTFTR",60,0)
 W !,"Transmission Queued" S DGIDN(DGID)=XMZ
"RTN","DGPTFTR",61,0)
 F DGK=0:0 S DGK=$O(DGSTCNT("P",DGK)) Q:DGK'>0  D REC
"RTN","DGPTFTR",62,0)
 S DGFIRST=1
"RTN","DGPTFTR",63,0)
 K DGK S DGCNT=1,DGID=DGID+1,J=DGJ Q:J'>0  D SETTRAN^DGPTUTL1 G:'DGOUTX PWR
"RTN","DGPTFTR",64,0)
 Q
"RTN","DGPTFTR",65,0)
 ;
"RTN","DGPTFTR",66,0)
REC ;
"RTN","DGPTFTR",67,0)
 S DGSENFLG=""
"RTN","DGPTFTR",68,0)
 S DIE="^DGP(45.83,",DA=DGD,DR="10///"_DGK,DR(2,45.831)="1///TODAY;2///"_XMZ D ^DIE K DA,DR,DIE
"RTN","DGPTFTR",69,0)
 S DIE="^DGPT(",DR="6///3",DA=DGK D ^DIE K DA,DR,DIE
"RTN","DGPTFTR",70,0)
 K DGSENFLG
"RTN","DGPTFTR",71,0)
 Q
"RTN","DGPTFTR",72,0)
 ;
"RTN","DGPTFTR",73,0)
COM S T1=0,T2=9999999 S:'$D(PTF) PTF=J S:PTF'=J PTF=J
"RTN","DGPTFTR",74,0)
COM1 F K=0,70,71,101,"401P" S @("DG"_K)=$S($D(^DGPT(J,K)):^(K),1:"")
"RTN","DGPTFTR",75,0)
 F K=10,.11,.3,.32,.321,.52,57 S @("DG"_$S(K[".":$E(K,2,99),1:K))=$S($D(^DGP(45.84,J,K)):^(K),$D(^DPT(+^DGPT(J,0),$S(K'=10:K,1:0))):$S(K'=10:^(K),1:^(0)),1:"")
"RTN","DGPTFTR",76,0)
 F K=.02,.06 M @("DG"_$S(K[".":$E(K,2,99),1:K))=^DPT(+^DGPT(J,0),K)
"RTN","DGPTFTR",77,0)
 D ^DGPTFTR0:DGPTFMT=1,^DGPTR0:DGPTFMT=2,^DGPTRI0:DGPTFMT=3
"RTN","DGPTFTR",78,0)
 ;
"RTN","DGPTFTR",79,0)
Q L -^DGP(45.83) F K=0,10,701,"401P",101,11,3,32,41,52,57,70,321,502,702,"02","06" K @("DG"_K) ;787 change L  to full - lock.
"RTN","DGPTFTR",80,0)
 K DGPICD10,DGCDR,DGT,DIC,DGADM,DGAO,DGDOB,DGHEAD,DGJ,DGK,DGL,DGM,DGNAM,DGNT,DGO,DGSSN,DGSUD,DGSUR,DGTD,DGX,DGXLS,E,ERR,F,G,H,I,K,L,T,W,Z,DGPROC,DGPROCD ;** NOTE: do not kill variables needed by PTF load/edit option!!!
"RTN","DGPTFTR",81,0)
 I $D(DGERR),DGERR<1 D ^DGPTFVC1 D:'T1 ^DGPTFVC3
"RTN","DGPTFTR",82,0)
 I $D(DGERR),DGERR<1 D EN^DGPTFVC2
"RTN","DGPTFTR",83,0)
 Q
"RTN","DGPTFTR",84,0)
 ;
"RTN","DGPTFTR",85,0)
LOG ;called from PRINT+1^DGPTF2,CLS+1^DGPTF2,EN^DGPTFVC
"RTN","DGPTFTR",86,0)
 D LOG^DGPTFTR1:DGPTFMT=1,LOG^DGPTR1:DGPTFMT=2,LOG^DGPTRI1:DGPTFMT=3,COM:$D(DGERR)
"RTN","DGPTFTR",87,0)
 Q
"RTN","DGPTFTR",88,0)
 ;
"RTN","DGPTFTR",89,0)
 ;-- check for real queue if census should be removed for national rel
"RTN","DGPTFTR",90,0)
ROUTER S XMDUZ=.5 F DGSDI=0:0 S DGSDI=$O(VAT(DGSDI)) Q:'DGSDI  S X=VAT(DGSDI),XMN=0,XMDF="" D INST^XMA21 K XMN,XMDF
"RTN","DGPTFTR",91,0)
 S XMY(DUZ)=""
"RTN","DGPTFTR",92,0)
 Q
"RTN","DGPTFTR0")
0^26^B16147582^B15326585
"RTN","DGPTFTR0",1,0)
DGPTFTR0 ;ALB/JDS/ADL/TJ - PTF TRANSMISSION ;10/1/03 6:52pm
"RTN","DGPTFTR0",2,0)
 ;;5.3;Registration;**247,510,524,850**;Aug 13, 1993;Build 171
"RTN","DGPTFTR0",3,0)
 ;;ADL;Update for CSV Project;;Mar 26, 2003
"RTN","DGPTFTR0",4,0)
 K DGICD10
"RTN","DGPTFTR0",5,0)
 S DGSSN=$P(DG10,U,9),DGHEAD=$S($E(DGSSN,10)="P":"P",1:" ")_$E(DGSSN,1,9)_" ",DGADM=$P(DG0,U,2)\1,DGHEAD=DGHEAD_$E(DGADM,4,5)_$E(DGADM,6,7)_$E(DGADM,2,3)
"RTN","DGPTFTR0",6,0)
 S Y=DGHEAD,L=3,X=DG0,Z=3 D ENTER S Y=Y_$E($P(X,U,5)_"   ",1,3)
"RTN","DGPTFTR0",7,0)
 S DGHEAD=Y,Y="    "_Y D HEAD^DGPTFTR1
"RTN","DGPTFTR0",8,0)
101 S Y=$S(T1:"C",1:"N")_"101"_DGHEAD,DGNAM=$P(DG10,U,1) D DGNAM S Y=Y_$E($P(DGNAM,",",1)_"           ",1,12)_$J($E($P(DGNAM,",",2),1),1)_$J($E($P($P(DGNAM,",",2)," ",2),1),1)
"RTN","DGPTFTR0",9,0)
 S Y=Y_$S($D(^DIC(45.1,+$P(DG101,U,1),0)):$J($P(^(0),U,1),2),1:"  ")
"RTN","DGPTFTR0",10,0)
 S L=3,X=DG101,Z=5 D ENTER S Y=Y_$E($P(X,U,6)_"   ",1,3)
"RTN","DGPTFTR0",11,0)
 S Y=Y_$S("A0"[$P(DG0,U,5):" ",1:$J($P(DG101,U,3),1))
"RTN","DGPTFTR0",12,0)
 ;POW Location
"RTN","DGPTFTR0",13,0)
 S Y=Y_$S($P(DG52,U,5)="N":1,$P(DG52,U,5)'="Y":3,$P(DG52,U,6)>0&($P(DG52,U,6)<7):3+$P(DG52,U,6),$P(DG52,U,6)>6&($P(DG52,U,6)<9):$C($P(DG52,U,6)+58),1:" ")
"RTN","DGPTFTR0",14,0)
 S Y=Y_$S($D(^DIC(11,+$P(DG10,U,5),0)):$E(^(0),1),1:" ")_$J($P(DG10,U,2),1)
"RTN","DGPTFTR0",15,0)
 S DGDOB=$P(DG10,U,3)\1,Y=Y_$E(DGDOB,4,5)_$E(DGDOB,6,7)_(1700+$E(DGDOB,1,3))
"RTN","DGPTFTR0",16,0)
 S C=$S($D(^DIC(45.82,+$P(DG101,U,4),0)):$P(^(0),U,1),1:" "),(G,E)=" " S:C=6 DGAO=$P(DG321,U,2),G=$S($P(DG321,U,1)'="Y":1,DGAO="N":2,DGAO="Y":3,1:4)
"RTN","DGPTFTR0",17,0)
 S:C="Z"!(C>1&(C<8)) DGNT=$P(DG321,U,12),E=$S($P(DG321,U,3)'="Y":1,DGNT="N":2,DGNT="T":3,DGNT="B":4,1:" ")
"RTN","DGPTFTR0",18,0)
 S Y=Y_C_G_E K C,G,E
"RTN","DGPTFTR0",19,0)
 ; state code
"RTN","DGPTFTR0",20,0)
 S X=$S($D(^DIC(5,+$P(DG11,U,5),0)):^(0),1:""),L=2,Z=3 D ENTER0
"RTN","DGPTFTR0",21,0)
 ; county code
"RTN","DGPTFTR0",22,0)
 S X=$S($D(^DIC(5,+$P(DG11,U,5),1,+$P(DG11,U,7),0)):^(0),1:""),L=3,Z=3 D ENTER0
"RTN","DGPTFTR0",23,0)
 ; zip code
"RTN","DGPTFTR0",24,0)
 S X=DG11,Z=6,L=5 D ENTER
"RTN","DGPTFTR0",25,0)
 ; means test
"RTN","DGPTFTR0",26,0)
 S Y=Y_$E($P(DG0,U,10),1,2)
"RTN","DGPTFTR0",27,0)
 F K=$L(Y):1:79 S Y=Y_" "
"RTN","DGPTFTR0",28,0)
 D SAVE
"RTN","DGPTFTR0",29,0)
P401 G 401:'$D(^DGPT(J,"401P"))!(T1) S DG41=^("401P"),Y=$S(T1:"C",1:"N")_"401"_DGHEAD_"P"_"           "
"RTN","DGPTFTR0",30,0)
 S DG41=$S($D(^DGPT(J,"401P")):^("401P"),1:"")
"RTN","DGPTFTR0",31,0)
 S L=1 F K=1:1:5 S:'$P(DG41,U,K) DG41=$P(DG41,U,1,K-1)_U_$P(DG41,U,K+1,99),K=K-1 S L=L+1 Q:L=5
"RTN","DGPTFTR0",32,0)
 N EFFDATE,IMPDATE,DGPTDAT D EFFDATE^DGPTIC10(J)
"RTN","DGPTFTR0",33,0)
 F I=1:1:5 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+$P(DG41,U,I),EFFDATE,"I") S Y=Y_$S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$J($P($P(DGPTTMP,U,2),".",1),2)_$E($P($P(DGPTTMP,U,2),".",2)_"   ",1,3),1:"     ")_"  "
"RTN","DGPTFTR0",34,0)
 I $E(Y,40)'=" " S Y=Y_"      " D SAVE
"RTN","DGPTFTR0",35,0)
 K DGPTEDT
"RTN","DGPTFTR0",36,0)
401 G 501:'$D(^DGPT(J,"S")) K ^UTILITY($J,"S") S I=0
"RTN","DGPTFTR0",37,0)
SUR S I=$O(^DGPT(J,"S",I)) G 501:I'>0 S DGSUR=^(I,0) G SUR:'DGSUR
"RTN","DGPTFTR0",38,0)
 G SUR:DGSUR<T1!(DGSUR>T2) S DGSUD=+^(0)\1,^UTILITY($J,"S",DGSUD)=$S($D(^UTILITY($J,"S",DGSUD)):^(DGSUD),1:0)+1,F=$S(DGSUD<2871000:0,1:1)
"RTN","DGPTFTR0",39,0)
 I ^UTILITY($J,"S",DGSUD)>$S(F:3,1:2) D  I Y'=1 S DGERR=1 Q
"RTN","DGPTFTR0",40,0)
 .W !!,"**There are more than ",$S(F:"three",1:"two")," surgeries on the same date**"
"RTN","DGPTFTR0",41,0)
 .S DIR(0)="Y",DIR("B")="YES",DIR("A")="OK to continue?" D ^DIR K DIR
"RTN","DGPTFTR0",42,0)
 S Y=$S(T1:"C",1:"N")_"40"_^(DGSUD)_DGHEAD_$E(DGSUD,4,5)_$E(DGSUD,6,7)_$E(DGSUD,2,3)_$S($D(^DIC(45.3,+$P(DGSUR,U,3),0)):$P(^(0),U,1),1:"  ")
"RTN","DGPTFTR0",43,0)
 N EFFDATE,IMPDATE,DGPTDAT D EFFDATE^DGPTIC10(J)
"RTN","DGPTFTR0",44,0)
 S L=1,X=DGSUR F Z=4:1:7 D ENTER
"RTN","DGPTFTR0",45,0)
 S L=1 F K=8:1:12 S:'$P(DGSUR,U,K) DGSUR=$P(DGSUR,U,1,K-1)_U_$P(DGSUR,U,K+1,99),K=K-1 S L=L+1 Q:L=5
"RTN","DGPTFTR0",46,0)
 F K=8:1:12 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+$P(DGSUR,U,I),EFFDATE,"I") S Y=Y_$S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$J($P($P(DGPTTMP,U,2),".",1),2)_$E($P($P(DGPTTMP,U,2),".",2)_"   ",1,3),1:"     ")_"  "
"RTN","DGPTFTR0",47,0)
 S Y=Y_"      "
"RTN","DGPTFTR0",48,0)
 K DGPTEDT
"RTN","DGPTFTR0",49,0)
 D SAVE G SUR
"RTN","DGPTFTR0",50,0)
501 G 501^DGPTFTR2
"RTN","DGPTFTR0",51,0)
 Q
"RTN","DGPTFTR0",52,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTFTR0",53,0)
 Q
"RTN","DGPTFTR0",54,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("00000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTFTR0",55,0)
 Q
"RTN","DGPTFTR0",56,0)
SAVE D START^DGPTFTR1 S:'DGERR ^UTILITY($J,DGCNT,0)=Y,DGCNT=DGCNT+1
"RTN","DGPTFTR0",57,0)
Q Q
"RTN","DGPTFTR0",58,0)
DGNAM S X=DGNAM I X?.E.P F I=1:1:$L(X) S Z=$E(X,I) Q:Z=","  S:Z?.P&(Z]"") X=$E(X,1,I-1)_$E(X,I+1,$L(X)),I=I-1 Q:X'?.E.P
"RTN","DGPTFTR0",59,0)
 I X?.E.L D UP^DGHELP
"RTN","DGPTFTR0",60,0)
 S DGNAM=X
"RTN","DGPTFTR0",61,0)
 Q
"RTN","DGPTFTR2")
0^64^B17811483^B15450104
"RTN","DGPTFTR2",1,0)
DGPTFTR2 ;ALB/JDS/TJ - ALB/BOK  PTF TRANSMISSION ;01 DEC 87 @0800
"RTN","DGPTFTR2",2,0)
 ;;5.3;Registration;**729,850**;Aug 13, 1993;Build 171
"RTN","DGPTFTR2",3,0)
501 ;
"RTN","DGPTFTR2",4,0)
 K DGCMVT I T2'=9999999 S DGCMVT=$O(^DGPT(J,"M","AM",+$P(T2,".")_".2359")),DGCMVT=$S('DGCMVT:1,$O(^(DGCMVT,0)):$O(^(0)),1:1)
"RTN","DGPTFTR2",5,0)
 N EFFDATE,IMPDATE,DGPTDAT D EFFDATE^DGPTIC10(J)
"RTN","DGPTFTR2",6,0)
 F I=0:0 S I=$O(^DGPT(J,"M",I)) G PROC:I'>0 I $D(^(I,0)) S DGM=^(0),DGTD=$P(DGM,U,10) S:$D(DGCMVT) DGTD=$S(I=DGCMVT:$P(T2,".")_".2359",1:DGTD) I $P(DGM,U,17)'="n",DGTD,DGTD'<T1,DGTD'>T2 D MOV
"RTN","DGPTFTR2",7,0)
MOV S DGM=$P(DGM,U,1,9)_U_$P(DGM,U,11,15),L=1
"RTN","DGPTFTR2",8,0)
 F Z=5:1:14 S:'$P(DGM,U,Z) DGM=$P(DGM,U,1,Z-1)_U_$P(DGM,U,Z+1,99) S:'$P(DGM,U,Z) Z=Z-1 S L=L+1 Q:L=10
"RTN","DGPTFTR2",9,0)
 S Y=$S(T1:"C",1:"N")_"501"_DGHEAD,X=$P(DGTD,".")_"       ",Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)
"RTN","DGPTFTR2",10,0)
 N DGSARRX,DGSARRY
"RTN","DGPTFTR2",11,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(DGM,U,2),.DGARRY)
"RTN","DGPTFTR2",12,0)
 S $P(DGM,U,2)=$G(DGARRY(7))
"RTN","DGPTFTR2",13,0)
 S L=2,X=DGM,Z=2 D ENTER0 S Y=Y_"  "
"RTN","DGPTFTR2",14,0)
 S L=3 F Z=3,4 D ENTER0
"RTN","DGPTFTR2",15,0)
 S L=1,X=DG57,Z=4 D ENTER S:I=1 DG502=Y
"RTN","DGPTFTR2",16,0)
 F Z=5:1:9 S F=$$ICDDATA^ICDXCODE("DIAG",+$P(DGM,U,Z),EFFDATE,"I") S F=$S(+F'<0:$P(F,U,2),1:"   ."),F=$P(F,".",1)_$E($P(F,".",2)_"    ",1,3),F=F_$E("      ",1,7-$L(F)),Y=Y_F
"RTN","DGPTFTR2",17,0)
 ; bed occupant
"RTN","DGPTFTR2",18,0)
 I T1 S Y=Y_$S(I=1:$E($P(DG70,U,14)_" "),$P(+DGTD,".")=$P(T2,"."):5,1:1)
"RTN","DGPTFTR2",19,0)
 I 'T1 S Y=Y_$S(I=1:$E($P(DG70,U,14)_" "),1:" ")
"RTN","DGPTFTR2",20,0)
 D SAVE
"RTN","DGPTFTR2",21,0)
 Q
"RTN","DGPTFTR2",22,0)
 ;
"RTN","DGPTFTR2",23,0)
PROC K DGCMVT,^UTILITY($J,"PROC") S I=0
"RTN","DGPTFTR2",24,0)
601 ;
"RTN","DGPTFTR2",25,0)
 N EFFDATE,IMPDATE,DGPTDAT D EFFDATE^DGPTIC10(J)
"RTN","DGPTFTR2",26,0)
 S I=$O(^DGPT(J,"P",I)) G 701:I'>0 S (X,DGPROC)=^(I,0) G 601:'DGPROC
"RTN","DGPTFTR2",27,0)
 G 601:DGPROC<T1!(DGPROC>T2) S DGPROCD=+^DGPT(J,"P",I,0)\1,^UTILITY($J,"PROC",DGPROCD)=$S($D(^UTILITY($J,"PROC",DGPROCD)):^(DGPROCD),1:0)+1
"RTN","DGPTFTR2",28,0)
 I ^UTILITY($J,"PROC",DGPROCD)>1 W !,"More than one procedure record on same date" S DGERR=1 Q
"RTN","DGPTFTR2",29,0)
 S Y=$S('T1:"N",1:"C")_"60"_^(DGPROCD)_DGHEAD_$E(DGPROCD,4,7)_$E(DGPROCD,2,3)
"RTN","DGPTFTR2",30,0)
 N DGARRY,DGARRX ;DG729
"RTN","DGPTFTR2",31,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(X,U,2),.DGARRY)
"RTN","DGPTFTR2",32,0)
 S $P(X,U,2)=$G(DGARRY(7))
"RTN","DGPTFTR2",33,0)
 S L=2,Z=2 D ENTER0 S L=1,Z=3 D ENTER S L=3,Z=4 D ENTER0
"RTN","DGPTFTR2",34,0)
 S L=1 F K=5:1:9 S:'$P(DGPROC,U,K) DGPROC=$P(DGPROC,U,1,K-1)_U_$P(DGPROC,U,K+1,99),K=K-1 S L=L+1 Q:L=5
"RTN","DGPTFTR2",35,0)
 F K=5:1:9 S F=$$ICDDATA^ICDXCODE("PROC",+$P(DGPROC,U,K),EFFDATE,"I") S Y=Y_$S(F'<0:$J($P($P(F,U,2),".",1),2)_$E($P($P(F,U,2),".",2)_"   ",1,3),1:"     ")_"  "
"RTN","DGPTFTR2",36,0)
 S Y=Y_"      " K DGPTEDT D SAVE G 601
"RTN","DGPTFTR2",37,0)
 Q
"RTN","DGPTFTR2",38,0)
 ;
"RTN","DGPTFTR2",39,0)
701 S Y=$S(T1:"C",1:"N")_"701"_DGHEAD,DGDDX=+DG70\1_"       ",Y=Y_$E(DGDDX,4,5)_$E(DGDDX,6,7)_$E(DGDDX,2,3)
"RTN","DGPTFTR2",40,0)
 S X=DG70
"RTN","DGPTFTR2",41,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTFTR2",42,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(X,U,2),.DGARRY)
"RTN","DGPTFTR2",43,0)
 S $P(X,U,2)=$G(DGARRY(7))
"RTN","DGPTFTR2",44,0)
 S (L,Z)=2 D ENTER0 S Y=Y_"  " K DGDDX
"RTN","DGPTFTR2",45,0)
 S X=DG70 I "467"[($P(X,U,3)\1) S Y=Y_$P(X,U,3)_"         " G J
"RTN","DGPTFTR2",46,0)
 S L=1 F Z=3:1:5 D ENTER
"RTN","DGPTFTR2",47,0)
 S Y=Y_$S($D(^DIC(45.6,+$P(X,U,6),0)):$P(^(0),U,2),1:" "),L=3,Z=12 D ENTER S Y=Y_$E($P(X,U,13)_"   ",1,3)
"RTN","DGPTFTR2",48,0)
J S L=3,Z=8 D ENTER0
"RTN","DGPTFTR2",49,0)
 S Y=Y_$S($D(^DIC(10,+$P(DG10,U,6),0)):$J($P(^(0),U,2),1),1:" ")_$J($P(DG70,U,9),1)
"RTN","DGPTFTR2",50,0)
 S DGXLS=$$ICDDATA^ICDXCODE("DIAG",+$P(DG70,U,10),EFFDATE,"I") S DGXLS=$S(DGXLS'<0:$P(DGXLS,U,2),1:""),Y=Y_$S(DGXLS[".":$J($P(DGXLS,".",1),3)_$E($P(DGXLS,".",2)_"   ",1,3),1:$J(DGXLS,6))_" "
"RTN","DGPTFTR2",51,0)
 S L=$P(DG70,U,16,24) S DG702=""
"RTN","DGPTFTR2",52,0)
 F K=1:1:9 S DGXLS=$$ICDDATA^ICDXCODE("DIAG",+$P(L,U,K),EFFDATE,"I") I +DGXLS'<0 S DG702=DG702_$P(DGXLS,U,2)_U
"RTN","DGPTFTR2",53,0)
 I DG702']"" S Y=Y_"X" K DGPTEDT
"RTN","DGPTFTR2",54,0)
 D Y
"RTN","DGPTFTR2",55,0)
 I T1 F K=34:1:47,60 S Y=$E(Y,1,K-1)_" "_$E(Y,K+1,80)
"RTN","DGPTFTR2",56,0)
 I T1 D CEN^DGPTFTR1 S:'DGERR ^UTILITY($J,DGCNT,0)=Y,DGCNT=DGCNT+1 Q
"RTN","DGPTFTR2",57,0)
 I 'T1 D SAVE
"RTN","DGPTFTR2",58,0)
702 ;
"RTN","DGPTFTR2",59,0)
 Q:DG702']""
"RTN","DGPTFTR2",60,0)
 S Y="N702"_$E(Y,5,33)
"RTN","DGPTFTR2",61,0)
 F K=1:1:5 S F=$P(DG702,U,K),F=$P(F,".",1)_$E($P(F,".",2)_"   ",1,3),F=F_$E("      ",1,7-$L(F)),Y=Y_F
"RTN","DGPTFTR2",62,0)
 D Y
"RTN","DGPTFTR2",63,0)
 I 'DGERR S ^UTILITY($J,DGCNT,0)=Y,DGCNT=DGCNT+1
"RTN","DGPTFTR2",64,0)
 S DG702=$P(DG702,U,6,9)
"RTN","DGPTFTR2",65,0)
 ;
"RTN","DGPTFTR2",66,0)
703 Q:DG702']""
"RTN","DGPTFTR2",67,0)
 S Y="N703"_$E(Y,5,33)
"RTN","DGPTFTR2",68,0)
 F K=1:1:4 S F=$P(DG702,U,K),F=$P(F,".",1)_$E($P(F,".",2)_"   ",1,3),F=F_$E("      ",1,7-$L(F)),Y=Y_F
"RTN","DGPTFTR2",69,0)
 D Y
"RTN","DGPTFTR2",70,0)
 I 'DGERR S ^UTILITY($J,DGCNT,0)=Y,DGCNT=DGCNT+1
"RTN","DGPTFTR2",71,0)
 Q
"RTN","DGPTFTR2",72,0)
 ;
"RTN","DGPTFTR2",73,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTFTR2",74,0)
 Q
"RTN","DGPTFTR2",75,0)
 ;
"RTN","DGPTFTR2",76,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("00000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTFTR2",77,0)
 Q
"RTN","DGPTFTR2",78,0)
 ;
"RTN","DGPTFTR2",79,0)
SAVE D START^DGPTFTR1 S:'DGERR ^UTILITY($J,DGCNT,0)=Y,DGCNT=DGCNT+1
"RTN","DGPTFTR2",80,0)
Q Q
"RTN","DGPTFTR2",81,0)
 ;
"RTN","DGPTFTR2",82,0)
Y F K=$L(Y):1:79 S Y=Y_" "
"RTN","DGPTFTR2",83,0)
 Q
"RTN","DGPTFVC")
0^68^B4764861^B4235217
"RTN","DGPTFVC",1,0)
DGPTFVC ;ALB/MTC - PTF VALIDITY CHECK ;01 MAY 91 @0800
"RTN","DGPTFVC",2,0)
 ;;5.3;Registration;**37,234,850**;Aug 13, 1993;Build 171
"RTN","DGPTFVC",3,0)
PTF S DIC="^DGPT(",DIC(0)="MAQE",DIC("S")="I $P(^(0),U,11)=1" D ^DIC K DIC Q:Y'>0  S DGERR=-1,(PTF,J)=+Y D LOG^DGPTFTR W:DGERR'>0 !," NO ERRORS"
"RTN","DGPTFVC",4,0)
 K DGLOGIC,DGDD,DGERR G PTF
"RTN","DGPTFVC",5,0)
 Q
"RTN","DGPTFVC",6,0)
EN ;entry point from menu option DG PTF VALIDITY CHECK
"RTN","DGPTFVC",7,0)
 ;--setup vars for Austin Edits
"RTN","DGPTFVC",8,0)
 K ^TMP("AEDIT",$J),^TMP("AERROR",$J) S DGACNT=0
"RTN","DGPTFVC",9,0)
 ;
"RTN","DGPTFVC",10,0)
 S DIC="^DGPT(",DIC(0)="MAQE",DIC("S")="I $P(^(0),U,11)=1" D ^DIC K DIC I Y'>0 K DGACNT Q
"RTN","DGPTFVC",11,0)
 N DGSDFN S DGSDFN=$P(Y,U,2)
"RTN","DGPTFVC",12,0)
 S PTF=+Y,Y=$S($D(^DGPT(+Y,70)):+^(70),1:0) D FMT^DGPTUTL
"RTN","DGPTFVC",13,0)
 S:DT<2901001 DGPTFMT=1 ; needed so test sites can still validate 80col.
"RTN","DGPTFVC",14,0)
 S Y=1 D RTY^DGPTUTL
"RTN","DGPTFVC",15,0)
 S DGERR=0,DGCNT=1,J=PTF
"RTN","DGPTFVC",16,0)
 D SETTRAN G:DGOUT Q
"RTN","DGPTFVC",17,0)
 D LOG^DGPTFTR G Q:DGERR>0
"RTN","DGPTFVC",18,0)
 D VERCHK^DGPTRI3(PTF) G Q:DGERR>0 ; for ICD-10 validate that record is all of correct type
"RTN","DGPTFVC",19,0)
 W !,"Performing Additional Edits..." D ^DGPTAE G Q:DGERR>0
"RTN","DGPTFVC",20,0)
XMIT K XMY S XMZ=DGXMZ,XMDUZ=.5,XMY(DUZ)="",DGJ=J,^XMB(3.9,XMZ,2,0)="3.92A^"_DGCNT-1_"^"_DGCNT-1_"^"_DT
"RTN","DGPTFVC",21,0)
 D ENT1^XMD
"RTN","DGPTFVC",22,0)
 W !,"Message Sent"
"RTN","DGPTFVC",23,0)
 ;
"RTN","DGPTFVC",24,0)
Q K DGXMZ,XMZ,XMDUN,XMY,DGOUT,DGLOGIC,DGERR,XMDUZ,DGRTY,DGRTY0,DGPTFMT,XMSUB,XMTEXT,Y,J,PTF,DGJ,DGCNT,DGACNT G EN
"RTN","DGPTFVC",25,0)
SETTRAN ;-- setup mailman transmission
"RTN","DGPTFVC",26,0)
 S DGOUT=0
"RTN","DGPTFVC",27,0)
 S Y=$P(^DPT(+^DGPT(+J,0),0),U,1),XMSUB=Y_"  PTF TRANSMISSION ",XMDUZ=DUZ,XMDUN=$P(^VA(200,DUZ,0),U)
"RTN","DGPTFVC",28,0)
 D GET^XMA2
"RTN","DGPTFVC",29,0)
 I $D(XMZ),(XMZ>0) S DGXMZ=XMZ K XMZ G SETQ
"RTN","DGPTFVC",30,0)
 W !,"*** ERROR *** Unable to create MailMan message... Try again later"
"RTN","DGPTFVC",31,0)
 S DGOUT=1
"RTN","DGPTFVC",32,0)
SETQ ;
"RTN","DGPTFVC",33,0)
 Q
"RTN","DGPTFVC1")
0^41^B39436670^B36905971
"RTN","DGPTFVC1",1,0)
DGPTFVC1 ;ALB/AS/ADL - Expanded PTF Close-Out Edits ;12/14/04 10:34am
"RTN","DGPTFVC1",2,0)
 ;;5.3;Registration;**52,58,79,114,164,400,342,466,415,493,512,510,544,629,817,850**;Aug 13, 1993;Build 171
"RTN","DGPTFVC1",3,0)
 ;;ADL;Updated for CSV Project;;Mar 26, 2003
"RTN","DGPTFVC1",4,0)
 ;Called from Q+2^DGPTFTR. Variable must be passed in: PTF
"RTN","DGPTFVC1",5,0)
 ;Variable returned: DGERR.   DGERR <-- 1 if record fails to pass a check; DGERR <-- "" if record passes all checks
"RTN","DGPTFVC1",6,0)
 ;
"RTN","DGPTFVC1",7,0)
 Q:'$D(PTF)
"RTN","DGPTFVC1",8,0)
 S DGERR="",DGV(701)=$S($D(^DGPT(PTF,70)):^(70),1:""),DGV(101)=^(0),DGSUFFIX=$P(DGV(101),"^",5),DGV("FEE")=$P(DGV(101),"^",4),DFN=$P(DGV(101),"^",1)
"RTN","DGPTFVC1",9,0)
 ;
"RTN","DGPTFVC1",10,0)
 I $P(DGV(101),"^",2)>2820700 D AO
"RTN","DGPTFVC1",11,0)
 ;
"RTN","DGPTFVC1",12,0)
 I DGRTY=1,DGV("FEE") D MT
"RTN","DGPTFVC1",13,0)
 ;
"RTN","DGPTFVC1",14,0)
 ; DG*512, sck/Remove 101-Means Test indicator = 'U' xmit block
"RTN","DGPTFVC1",15,0)
 ;
"RTN","DGPTFVC1",16,0)
 ; 850 - aas - hard coded ICD codes, diagnosis values, different for ICD-9 and ICD-10
"RTN","DGPTFVC1",17,0)
 N SYS,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPTFVC1",18,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPTFVC1",19,0)
 S SYS=$$SYS^ICDEX("DIAG",EFFDATE)
"RTN","DGPTFVC1",20,0)
 I $D(^DPT(DFN,57)),$P(^(57),"^",4)>0,SYS=1 S S0=$P(^(57),"^",4),DGDX=$S(S0=1!(S0=3):"344.1",1:"344.0"),DGSCI="" F DGX=0:0 S DGX=$O(^DGPT(PTF,"M",DGX)) Q:DGX'>0  S DGNODE=^(DGX,0),DGSCI="" D SCI
"RTN","DGPTFVC1",21,0)
 I $D(^DPT(DFN,57)),$P(^(57),"^",4)>0,SYS=30 S S0=$P(^(57),"^",4),DGDX=$S(S0=1!(S0=3):"G82.2",1:"G82.5"),DGSCI="" F DGX=0:0 S DGX=$O(^DGPT(PTF,"M",DGX)) Q:DGX'>0  S DGNODE=^(DGX,0),DGSCI="" D SCI
"RTN","DGPTFVC1",22,0)
 ;
"RTN","DGPTFVC1",23,0)
 S DGDP="",DGDISPO=$P(DGV(701),"^",6),DGRECSUF=$P(DGV(701),"^",13)
"RTN","DGPTFVC1",24,0)
 I DGRTY=1 D
"RTN","DGPTFVC1",25,0)
 .S DGSTATYP=$S(DGDISPO=12!(DGDISPO=13):30,DGDISPO=10:42,DGDISPO=8:40,1:"")
"RTN","DGPTFVC1",26,0)
 .I DGSTATYP]"" D
"RTN","DGPTFVC1",27,0)
 ..D NUMACT^DGPTSUF(DGSTATYP)
"RTN","DGPTFVC1",28,0)
 ..I DGANUM>0 F I=1:1:DGANUM I DGSUFFIX=DGSUFNAM(I) D
"RTN","DGPTFVC1",29,0)
 ...I DGDISPO'=8 I DGRECSUF=DGSUFNAM(DGANUM) S DGDP=5 D DP
"RTN","DGPTFVC1",30,0)
 ...I DGDISPO=8 N DGANUM,DGSUFNAM D NUMACT^DGPTSUF(42) I DGRECSUF=DGSUFNAM(DGANUM) S DGDP=5 D DP
"RTN","DGPTFVC1",31,0)
 .K DGANUM,DGSTATYP,DGSUFNAM,I
"RTN","DGPTFVC1",32,0)
 ;
"RTN","DGPTFVC1",33,0)
 I DGRTY=1 S %=$P(DGV(701),"^",3) I %=4!(%=6)!(%=7) S DGDP="" D OP I $P(DGV(701),"^",5)=1 S DGERR=1 W !,"701 VA AUSPICES",?23," value inconsistent for discharge"
"RTN","DGPTFVC1",34,0)
 ;
"RTN","DGPTFVC1",35,0)
 ;If PRRTP treating specialty, must have valid PRRTP suffix
"RTN","DGPTFVC1",36,0)
 ;Fee records would not contain PRRTP specialties
"RTN","DGPTFVC1",37,0)
 I 'DGV("FEE"),"^25^26^27^28^29^38^39^"[(U_$P(DGV(701),U,2)_U) D
"RTN","DGPTFVC1",38,0)
 .I DGSUFFIX'="PA",(DGSUFFIX'="PB"),(DGSUFFIX'="PC"),(DGSUFFIX'="PD") D
"RTN","DGPTFVC1",39,0)
 ..S DGERR=1
"RTN","DGPTFVC1",40,0)
 ..W !,"101 SUFFIX",?23,"value must be set to a valid PRRTP suffix."
"RTN","DGPTFVC1",41,0)
 ;
"RTN","DGPTFVC1",42,0)
 D RACETHNC
"RTN","DGPTFVC1",43,0)
 K DGDISPO,DGRECSUF,DGV,DGDP,DGDX,DGSCI,DGSUFFIX,DGNODE,DGX,%,S0,I,X
"RTN","DGPTFVC1",44,0)
 I DGERR H 4
"RTN","DGPTFVC1",45,0)
 Q
"RTN","DGPTFVC1",46,0)
 ;
"RTN","DGPTFVC1",47,0)
SCI ;
"RTN","DGPTFVC1",48,0)
 N EFFDATE,IMPDATE
"RTN","DGPTFVC1",49,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTFVC1",50,0)
 F X=5:1:15 I X#10,$P(DGNODE,"^",X) S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DGNODE,"^",X),EFFDATE) D
"RTN","DGPTFVC1",51,0)
 . I +DGPTTMP>0&($P(DGPTTMP,U,10)) S:$E($P(DGPTTMP,"^",2),1,5)=DGDX DGSCI=10 Q:DGSCI
"RTN","DGPTFVC1",52,0)
 I 'DGSCI S DGERR=1,%=$P(DGNODE,"^",10),X=$TR($$FMTE^XLFDT(%,"5DF")," ","0") W !,"501 ",X," SCI of ",S0,?23," requires an ICD Diagnosis code beginning with",!?12," or equal to ",DGDX
"RTN","DGPTFVC1",53,0)
 Q
"RTN","DGPTFVC1",54,0)
 ;
"RTN","DGPTFVC1",55,0)
MT S DGVMT=$P(DGV(101),"^",10),DGX=999 G DGX:DGVMT']"" I +$P(DGV(101),"^",2)<2860700!(DGSUFFIX="BU") S DGX="X" G DGX
"RTN","DGPTFVC1",56,0)
 S DGZEC=$P($G(^DGPT(PTF,101)),U,8),DGZEC=$S($D(^DIC(8,+DGZEC,0)):^(0),1:"") I $P(DGZEC,U,5)="N" S DGX="N" G DGX
"RTN","DGPTFVC1",57,0)
 S DGT=$P(DGV(701),".") G AS:'$O(^DGMT(408.31,"AD",1,DFN,0)) S DGZ1=$$LST^DGMTU(DFN,DGT) K:DGZ1']"" DGZ1
"RTN","DGPTFVC1",58,0)
 I DGVMT="X" K DGX,DGVMT Q
"RTN","DGPTFVC1",59,0)
 S DGX=$S('$D(DGZ1):"U",1:$P(DGZ1,U,4))
"RTN","DGPTFVC1",60,0)
 ; Determine if the Pending Adjudication is for MT(C) or GMT(G)
"RTN","DGPTFVC1",61,0)
 I DGX="P" D  G DGX
"RTN","DGPTFVC1",62,0)
 . I '+$P($G(DGZ1),U) S DGX="U" Q
"RTN","DGPTFVC1",63,0)
 . S DGX=$$PA^DGMTUTL($P(DGZ1,U)),DGX=$S('$D(DGX):"U",DGX="MT":"C",DGX="GMT":"G",1:"U")
"RTN","DGPTFVC1",64,0)
 I DGX="A",$P(DGZEC,U,4)=3,$$SC^DGMTR(DFN),$$ANYSC^DGPTSCAN(PTF) S DGX="AS" G DGX
"RTN","DGPTFVC1",65,0)
 I DGX="A","^1^3^"[("^"_$P(DGZEC,U,4)_"^"),$P($G(^DPT(DFN,.3)),U,2)>0 S DGX="AS" G DGX
"RTN","DGPTFVC1",66,0)
 S DGX=$S(DGX="A":"AN","BCGN"[DGX:DGX,1:"U") G AS:DGX="U" G DGX:DGX'="N"
"RTN","DGPTFVC1",67,0)
AS S DGZ=$S($D(^DPT(DFN,.321)):^(.321),1:0) I $P(DGZ,U,2)="Y"!($P(DGZ,U,3)="Y") S DGX="AS" G DGX
"RTN","DGPTFVC1",68,0)
 S DGZ=$S($D(^DPT(DFN,.322)):^(.322),1:0) I $P(DGZ,U,13)="Y" S DGX="AS" G DGX
"RTN","DGPTFVC1",69,0)
 N DGNTARR S DGZ=$S($$GETCUR^DGNTAPI(DFN,"DGNTARR")>0:DGNTARR("NTR"),1:"") I $P(DGZ,U)="Y" S DGX="AS" G DGX
"RTN","DGPTFVC1",70,0)
 S DGZ=$$GETSTAT^DGMSTAPI(DFN) I $P(DGZ,U,2)="Y" S DGX="AS" G DGX
"RTN","DGPTFVC1",71,0)
 I $P(DGZEC,U,5)="Y",$P(DGZEC,U,4)<4,"^2^15^"'[(U_$P(DGZEC,U,9)_U) S DGX="AS" G DGX
"RTN","DGPTFVC1",72,0)
 S DGX="AN"
"RTN","DGPTFVC1",73,0)
DGX ;DG*5.3*817/Remove 101-Means Test indicator = 'U' xmit block for FEE BASIS PTF 
"RTN","DGPTFVC1",74,0)
 I DGVMT'=DGX,DGVMT'="U" S DGERR=1 W !,"101 ","MEANS TEST",?23," value ",DGVMT,$S(DGVMT']"":"blank",DGVMT="X":" only for admissions prior to 7/1/86 or domicilliary use",1:" inconsistent with eligibility data")
"RTN","DGPTFVC1",75,0)
 K DGZEC,DGZ,DGZ1,DGT,DGX,DGVMT Q
"RTN","DGPTFVC1",76,0)
 ;
"RTN","DGPTFVC1",77,0)
DP I $P(DGV(701),"^",3)'=5 S DGERR=1 W !,"701 ",$E("TYPE OF DISPOSITION",1,18),?23," value inconsistent for discharge"
"RTN","DGPTFVC1",78,0)
OP I $P(DGV(701),"^",4)=1 S DGERR=1 W !,"701 ",$E("OUTPATIENT TREATMENT",1,18),?23," value inconsistent for discharge" Q:DGDP=""
"RTN","DGPTFVC1",79,0)
 I $P(DGV(701),"^",5)=2 S DGERR=1 W !,"701 VA AUSPICES",?23," value inconsistent for discharge"
"RTN","DGPTFVC1",80,0)
 Q
"RTN","DGPTFVC1",81,0)
 ;
"RTN","DGPTFVC1",82,0)
AO I DGPTFMT<2 D  Q
"RTN","DGPTFVC1",83,0)
 .S %=$S($D(^DGPT(PTF,101)):$P(^(101),"^",4),1:"")
"RTN","DGPTFVC1",84,0)
 .S %=$S($D(^DIC(45.82,+%,0)):$P(^(0),"^",1),1:"")
"RTN","DGPTFVC1",85,0)
 .S I=$S($D(^DPT(DFN,.321)):^(.321),1:"")
"RTN","DGPTFVC1",86,0)
 .S:$P(I,"^",2)="Y"&(%'=6) DGERR=1,DGV("E")=1
"RTN","DGPTFVC1",87,0)
 .W:$D(DGV("E")) !,"101 AGENT ORANGE",?23," value ",$S(DGV("E"):"can only be used with COB of '6'",1:"is inconsistent with Vietnam Service and/or COB")
"RTN","DGPTFVC1",88,0)
 ;
"RTN","DGPTFVC1",89,0)
 N AO,AOL,TMP
"RTN","DGPTFVC1",90,0)
 S TMP=$G(^DPT(DFN,.321))
"RTN","DGPTFVC1",91,0)
 S AO=$S($P(TMP,"^",2)="Y":1,1:0)
"RTN","DGPTFVC1",92,0)
 S AOL=$P(TMP,"^",13)
"RTN","DGPTFVC1",93,0)
 Q:('AO)
"RTN","DGPTFVC1",94,0)
 Q:(AOL'="")
"RTN","DGPTFVC1",95,0)
 S DGERR=1,DGV("E")=1
"RTN","DGPTFVC1",96,0)
 W !,"101 AGENT ORANGE LOCATION",?23,"value required if exposure to Agent Orange claimed"
"RTN","DGPTFVC1",97,0)
 Q
"RTN","DGPTFVC1",98,0)
RACETHNC        ;Race and ethnicity check
"RTN","DGPTFVC1",99,0)
 ;Ensure that a value for ethnicity and at least one race is on file.
"RTN","DGPTFVC1",100,0)
 ;Ensure all active race/ethnicity values have a valid PTF value and an
"RTN","DGPTFVC1",101,0)
 ;associated collection method.  Ensure all collection methods have a
"RTN","DGPTFVC1",102,0)
 ;valid PTF value.  Ignore race/ethnicity entries that are inactive or
"RTN","DGPTFVC1",103,0)
 ;invalid pointers.  Note: PTF sends first active ethnicity and first
"RTN","DGPTFVC1",104,0)
 ;six active races.
"RTN","DGPTFVC1",105,0)
 N REF,IEN,TYPE,TEXT,PTRVAL,PTRMTHD,NUM,MAX
"RTN","DGPTFVC1",106,0)
 N VALIDVAL,VALIDMTH,VALUE,VADM
"RTN","DGPTFVC1",107,0)
 D DEM^VADPT
"RTN","DGPTFVC1",108,0)
 F REF=11,12 D
"RTN","DGPTFVC1",109,0)
 .I REF=12 D
"RTN","DGPTFVC1",110,0)
 ..S MAX=6
"RTN","DGPTFVC1",111,0)
 ..S TYPE=1
"RTN","DGPTFVC1",112,0)
 ..S VALIDVAL=",3,8,9,A,B,C,D,"
"RTN","DGPTFVC1",113,0)
 ..S VALIDMTH=",S,P,O,U,"
"RTN","DGPTFVC1",114,0)
 ..S TEXT="RACE"
"RTN","DGPTFVC1",115,0)
 .I REF=11 D
"RTN","DGPTFVC1",116,0)
 ..S MAX=1
"RTN","DGPTFVC1",117,0)
 ..S TYPE=2
"RTN","DGPTFVC1",118,0)
 ..S TEXT="ETHNICITY"
"RTN","DGPTFVC1",119,0)
 ..S VALIDVAL=",H,N,D,U,"
"RTN","DGPTFVC1",120,0)
 ..S VALIDMTH=",S,P,O,U,"
"RTN","DGPTFVC1",121,0)
 .S NUM=1
"RTN","DGPTFVC1",122,0)
 .S IEN=0
"RTN","DGPTFVC1",123,0)
 .F  S IEN=+$O(VADM(REF,IEN)) Q:'IEN  D  Q:NUM>MAX
"RTN","DGPTFVC1",124,0)
 ..S PTRVAL=+VADM(REF,IEN)
"RTN","DGPTFVC1",125,0)
 ..S PTRMTHD=+$G(VADM(REF,IEN,1))
"RTN","DGPTFVC1",126,0)
 ..Q:'PTRVAL
"RTN","DGPTFVC1",127,0)
 ..Q:$$INACTIVE^DGUTL4(PTRVAL,TYPE)
"RTN","DGPTFVC1",128,0)
 ..S NUM=NUM+1
"RTN","DGPTFVC1",129,0)
 ..S VALUE=$$PTR2CODE^DGUTL4(PTRVAL,TYPE,4)
"RTN","DGPTFVC1",130,0)
 ..I (VALUE="")!(VALIDVAL'[VALUE) D  Q
"RTN","DGPTFVC1",131,0)
 ...W !,"701 ",TEXT,?23,"missing/invalid xmit value"
"RTN","DGPTFVC1",132,0)
 ...S DGERR=1
"RTN","DGPTFVC1",133,0)
 ..I ('PTRMTHD) D  Q
"RTN","DGPTFVC1",134,0)
 ...W !,"701 ",TEXT,?23,"method of collection missing/invalid"
"RTN","DGPTFVC1",135,0)
 ...S DGERR=1
"RTN","DGPTFVC1",136,0)
 ..S VALUE=$$PTR2CODE^DGUTL4(PTRMTHD,3,4)
"RTN","DGPTFVC1",137,0)
 ..I (VALUE="")!(VALIDMTH'[VALUE) D  Q
"RTN","DGPTFVC1",138,0)
 ...W !,"701 ",TEXT,?23,"missing/invalid xmit value for method of collection"
"RTN","DGPTFVC1",139,0)
 ...S DGERR=1
"RTN","DGPTFVC1",140,0)
 Q
"RTN","DGPTIC10")
0^1^B95648075^n/a
"RTN","DGPTIC10",1,0)
DGPTIC10 ;ALB/AAS - PTF API TO ICD10 Remediation calls ;9/29/2011
"RTN","DGPTIC10",2,0)
 ;;5.3;Registration;**850**;Aug 13, 1993;Build 171
"RTN","DGPTIC10",3,0)
 ;
"RTN","DGPTIC10",4,0)
 ; CODEC^ICDEX     ICR 5747
"RTN","DGPTIC10",5,0)
 ; VLT^ICDEX       ICR 5747
"RTN","DGPTIC10",6,0)
 ;
"RTN","DGPTIC10",7,0)
GETCODSY(CSYS,IEN,DATE) ; -- RETURN IF THIS IS ICD9 OR ICD10
"RTN","DGPTIC10",8,0)
 ; returns 20th piece of call to ICDDATA^ICDxcode
"RTN","DGPTIC10",9,0)
 Q $P($$ICDDATA^ICDXCODE(CSYS,IEN,DATE),"^",20)
"RTN","DGPTIC10",10,0)
 ;
"RTN","DGPTIC10",11,0)
 ;; ICDINFO^DGAPI
"RTN","DGPTIC10",12,0)
 ;
"RTN","DGPTIC10",13,0)
IMPDATE(CODESYS) ; - calls IMPDATE^LEXU(CODESYS)
"RTN","DGPTIC10",14,0)
 ;  CODESYS: 10D = diagnosis, 10P = procedure
"RTN","DGPTIC10",15,0)
 ; -- For testing, enter a valid date in MAS Parameter file, 
"RTN","DGPTIC10",16,0)
 ;    fields 50001 a 50002.  The two dates resolve the issue of collecting ICD-10
"RTN","DGPTIC10",17,0)
 ;    code earlier than their implementation and for storing them in fields that check
"RTN","DGPTIC10",18,0)
 ;    to see if they are active.  (Codes become active on 10/1/2013 currently)
"RTN","DGPTIC10",19,0)
 ;   
"RTN","DGPTIC10",20,0)
 ; -- The ICD-10 Implementation date (50001) allows setting of a test implementation date.
"RTN","DGPTIC10",21,0)
 ; -- The ICD-10 Active Date will be used in calls to test if the code is active on this date.
"RTN","DGPTIC10",22,0)
 ;    
"RTN","DGPTIC10",23,0)
 N TEST,IMPDATE
"RTN","DGPTIC10",24,0)
 S TEST=$G(^DG(43,1,"ICD10"))
"RTN","DGPTIC10",25,0)
 I +TEST?7N Q TEST
"RTN","DGPTIC10",26,0)
 I $G(CODESYS)="" S CODESYS="10D"
"RTN","DGPTIC10",27,0)
 S IMPDATE=$$IMPDATE^LEXU($G(CODESYS))
"RTN","DGPTIC10",28,0)
 Q IMPDATE
"RTN","DGPTIC10",29,0)
 ;
"RTN","DGPTIC10",30,0)
 ;
"RTN","DGPTIC10",31,0)
EFFDATE(DGPTF,DGTYPE,DGMOVE,DGCSYS) ;-- build ICD-10 Implementation date / effective date
"RTN","DGPTIC10",32,0)
 N DGTEMP,X,Y,I,J,DGFEE
"RTN","DGPTIC10",33,0)
 S:$G(DGTYPE)="" DGTYPE=$P($G(X1),U,2)
"RTN","DGPTIC10",34,0)
 I $G(DGCSYS)="" S DGCSYS="10D"
"RTN","DGPTIC10",35,0)
 I $G(DGPTF)="" S (DGPTDAT,EFFDATE)=DT G EQ
"RTN","DGPTIC10",36,0)
 I $G(DGTYPE)="" S DGTYPE="701"
"RTN","DGPTIC10",37,0)
 I (DGTYPE'="501")&(DGTYPE'="601")&(DGTYPE'="701")&(DGTYPE'="801") S DGTYPE="701"
"RTN","DGPTIC10",38,0)
 I $G(DGMOVE)="" S DGMOVE=1
"RTN","DGPTIC10",39,0)
 ;Add 801 logic - uses CPT/Record date for EFFDATE
"RTN","DGPTIC10",40,0)
 S:DGTYPE'="801" (DGPTDAT,EFFDATE)=$$GET7DATE^DGPTIC10(DGPTF)
"RTN","DGPTIC10",41,0)
 S:DGTYPE="801" (DGPTDAT,DGCPTDT,EFFDATE)=$$GET8DATE($G(DGPTF))
"RTN","DGPTIC10",42,0)
EQ S DGTEMP=$$IMPDATE^DGPTIC10(DGCSYS)
"RTN","DGPTIC10",43,0)
 S IMPDATE=$P(DGTEMP,U,1)
"RTN","DGPTIC10",44,0)
 I DGPTDAT'<IMPDATE,+$P(DGTEMP,U,2)?7N S EFFDATE=+$P(DGTEMP,U,2)
"RTN","DGPTIC10",45,0)
 Q
"RTN","DGPTIC10",46,0)
 ;
"RTN","DGPTIC10",47,0)
EFFDAT1(DGPTDAT) ;-- build ICD-10 Implementation date / effective date
"RTN","DGPTIC10",48,0)
 N DGTEMP,DGFEE
"RTN","DGPTIC10",49,0)
 Q:$G(DGPTDAT)=""
"RTN","DGPTIC10",50,0)
 S DGTEMP=$$IMPDATE^DGPTIC10("10D")
"RTN","DGPTIC10",51,0)
 S EFFDATE=+$E(DGPTDAT,1,7)
"RTN","DGPTIC10",52,0)
 S IMPDATE=$P(DGTEMP,U,1)
"RTN","DGPTIC10",53,0)
 I DGPTDAT'<IMPDATE,+$P(DGTEMP,U,2)?7N S EFFDATE=+$P(DGTEMP,U,2)
"RTN","DGPTIC10",54,0)
 Q
"RTN","DGPTIC10",55,0)
 ;
"RTN","DGPTIC10",56,0)
CODESYS(PTFIEN) ; returns coding system for a PTF Based on Discharge Date
"RTN","DGPTIC10",57,0)
 ; -- called from DG701 template
"RTN","DGPTIC10",58,0)
 N DISDATE,X,Y,DGFEE
"RTN","DGPTIC10",59,0)
 I '$D(^DGPT($G(PTFIEN),0)) Q $$GETCODS("10D",DT)
"RTN","DGPTIC10",60,0)
 ;
"RTN","DGPTIC10",61,0)
 ; -- Census Date
"RTN","DGPTIC10",62,0)
 ; -- Currently a census record
"RTN","DGPTIC10",63,0)
 S PTR=$P($G(^DGPT(PTFIEN,0)),U,13) I PTR'="" S DISDATE=$P($G(^DG(45.86,PTR,0)),U,1) G:DISDATE'="" CSQ
"RTN","DGPTIC10",64,0)
 ; -- requires a census
"RTN","DGPTIC10",65,0)
 S PTF=PTFIEN D:'$D(DGPMCA) PM^DGPTUTL ; -- gets admission in DGPMCA and 0th node in DGPMAN
"RTN","DGPTIC10",66,0)
 D CEN^DGPTC1
"RTN","DGPTIC10",67,0)
 ; -- DGCST=Census Status, dgcn=ien of census date file
"RTN","DGPTIC10",68,0)
 I $D(DGCST),DGCST=0,DGCN>0 S DISDATE=$P($G(^DG(45.86,DGCN,0)),U,1) G:DISDATE?7N CSQ
"RTN","DGPTIC10",69,0)
 ;
"RTN","DGPTIC10",70,0)
 S DISDATE=+$E($P($G(^DGPT($G(PTFIEN),70)),"^",1),1,7)
"RTN","DGPTIC10",71,0)
 I DISDATE<1 S DISDATE=DT
"RTN","DGPTIC10",72,0)
CSQ Q $$GETCODS("10D",DISDATE)
"RTN","DGPTIC10",73,0)
 ;
"RTN","DGPTIC10",74,0)
GETCODS(CODESYS,DATE) ; - Returns coding system for a date
"RTN","DGPTIC10",75,0)
 N IMPDATE,VERSION,DGFEE
"RTN","DGPTIC10",76,0)
 S IMPDATE=+$$IMPDATE(CODESYS)
"RTN","DGPTIC10",77,0)
 I +IMPDATE>0 D
"RTN","DGPTIC10",78,0)
 . I DATE<IMPDATE S VERSION="ICD9" Q
"RTN","DGPTIC10",79,0)
 . I DATE'<IMPDATE S VERSION="ICD10"
"RTN","DGPTIC10",80,0)
 I $G(VERSION)'="" Q VERSION
"RTN","DGPTIC10",81,0)
 Q "ICD9"
"RTN","DGPTIC10",82,0)
 ;
"RTN","DGPTIC10",83,0)
GET8DATE(PATNUM) ; GET CPT RECORD DATE FOR 801 SERVICE
"RTN","DGPTIC10",84,0)
 S EFFD=+$G(DGPRD)
"RTN","DGPTIC10",85,0)
 I EFFD="",$G(DGZP),$D(^DGPT(PATNUM,"C",DGZP,0))#10 S EFFD=+^DGPT(PATNUM,"C",DGZP,0)
"RTN","DGPTIC10",86,0)
 S:EFFD="" EFFD=DT
"RTN","DGPTIC10",87,0)
 Q $P(EFFD,U,1)
"RTN","DGPTIC10",88,0)
 ;
"RTN","DGPTIC10",89,0)
GET7DATE(PATNUM) ; FROM icdgtdrg
"RTN","DGPTIC10",90,0)
 ;Find the correct "EFFECTIVE DATE" for locating the icd codes for 701 fields
"RTN","DGPTIC10",91,0)
 ;
"RTN","DGPTIC10",92,0)
 ;  Input:    PATNUM - PTF Record Number
"RTN","DGPTIC10",93,0)
 ;  Output:   "effective date" to use
"RTN","DGPTIC10",94,0)
 ;
"RTN","DGPTIC10",95,0)
 N EFFD,PTR,IMPDATE,ADMDATE,PTF,X,Y,DGFEE
"RTN","DGPTIC10",96,0)
 S ADMDATE=$P($G(^DGPT(PATNUM,0)),U,2)
"RTN","DGPTIC10",97,0)
 ;
"RTN","DGPTIC10",98,0)
 ; -- Census Date
"RTN","DGPTIC10",99,0)
 ; -- Currently a census record
"RTN","DGPTIC10",100,0)
 S PTR=$P($G(^DGPT(PATNUM,0)),U,13) I PTR'="" S EFFD=$P($G(^DG(45.86,PTR,0)),U,1) G:EFFD'="" G7OUT
"RTN","DGPTIC10",101,0)
 ; -- requires a census
"RTN","DGPTIC10",102,0)
 S PTF=PATNUM D:'$D(DGPMCA) PM^DGPTUTL ; -- gets admission in DGPMCA and 0th node in DGPMAN
"RTN","DGPTIC10",103,0)
 D CEN^DGPTC1
"RTN","DGPTIC10",104,0)
 ; -- DGCST=Census Status, dgcn=ien of census date file
"RTN","DGPTIC10",105,0)
 I $D(DGCST),DGCST=0,DGCN>0 S EFFD=$P($G(^DG(45.86,DGCN,0)),U,1) G:EFFD?7N G7OUT
"RTN","DGPTIC10",106,0)
 ;
"RTN","DGPTIC10",107,0)
 ;  Discharge Date
"RTN","DGPTIC10",108,0)
 S DISDATE=$E($P($G(^DGPT(PATNUM,70)),U,1),1,7)
"RTN","DGPTIC10",109,0)
 I DISDATE'="" S EFFD=$P(DISDATE,".") G G7OUT
"RTN","DGPTIC10",110,0)
 I DISDATE="" S EFFD=DT G G7OUT
"RTN","DGPTIC10",111,0)
 ;  Default TODAY
"RTN","DGPTIC10",112,0)
 I $G(EFFD)="" S EFFD=DT
"RTN","DGPTIC10",113,0)
G7OUT Q EFFD
"RTN","DGPTIC10",114,0)
 ;
"RTN","DGPTIC10",115,0)
GET5DATE(PATNUM,MOVE) ; FROM icdgtdrg
"RTN","DGPTIC10",116,0)
 ;Find the correct "EFFECTIVE DATE" for locating the icd codes for 501 fields
"RTN","DGPTIC10",117,0)
 ;
"RTN","DGPTIC10",118,0)
 ;  Input:    PATNUM - PTF Record Number
"RTN","DGPTIC10",119,0)
 ;            MOVE   - PTF Movement Number
"RTN","DGPTIC10",120,0)
 ;  Output:   "effective date" to use
"RTN","DGPTIC10",121,0)
 ;
"RTN","DGPTIC10",122,0)
 N EFFD,PTR,IMPDATE,MOVDATE,X,Y,DGFEE
"RTN","DGPTIC10",123,0)
 ;  Census Date
"RTN","DGPTIC10",124,0)
 S PTR=$P($G(^DGPT(PATNUM,0)),U,13) I PTR'="" S EFFD=$P($G(^DG(45.86,PTR,0)),U,1) G:EFFD'="" G5OUT
"RTN","DGPTIC10",125,0)
 ; -- requires a census
"RTN","DGPTIC10",126,0)
 S PTF=PATNUM D:'$D(DGPMCA) PM^DGPTUTL ; -- gets admission in DGPMCA and 0th node in DGPMAN
"RTN","DGPTIC10",127,0)
 D CEN^DGPTC1
"RTN","DGPTIC10",128,0)
 ; -- DGCST=Census Status, dgcn=ien of census date file
"RTN","DGPTIC10",129,0)
 I $D(DGCST),DGCST=0,DGCN>0 S EFFD=$P($G(^DG(45.86,DGCN,0)),U,1) G:EFFD?7N G7OUT
"RTN","DGPTIC10",130,0)
 ;
"RTN","DGPTIC10",131,0)
 ;  Discharge Date
"RTN","DGPTIC10",132,0)
 S DISDATE=$E($P($G(^DGPT(PATNUM,70)),U,1),1,7)
"RTN","DGPTIC10",133,0)
 S MOVDATE=$P($G(^DGPT(PATNUM,"M",MOVE,0)),U,10)
"RTN","DGPTIC10",134,0)
 I DISDATE'="" S EFFD=$P(DISDATE,".") G G5OUT
"RTN","DGPTIC10",135,0)
 ;  Default TODAY
"RTN","DGPTIC10",136,0)
 S EFFD=DT
"RTN","DGPTIC10",137,0)
G5OUT ;
"RTN","DGPTIC10",138,0)
 Q EFFD
"RTN","DGPTIC10",139,0)
 ;
"RTN","DGPTIC10",140,0)
GET6DATE(PATNUM,PROC,DGI) ; FROM icdgtdrg
"RTN","DGPTIC10",141,0)
 ;Find the correct "EFFECTIVE DATE" for locating the icd codes for 601 fields
"RTN","DGPTIC10",142,0)
 ;
"RTN","DGPTIC10",143,0)
 ;  Input:    PATNUM - PTF Record Number
"RTN","DGPTIC10",144,0)
 ;            PROC   - Procedure or Surgery number
"RTN","DGPTIC10",145,0)
 ;            DGI    - 5- PROCEDURE NODE, 8 = SURGERY NODE
"RTN","DGPTIC10",146,0)
 ;  Output:   "effective date" to use
"RTN","DGPTIC10",147,0)
 ;
"RTN","DGPTIC10",148,0)
 N EFFD,PTR,IMPDATE,MOVDATE,X,Y,DGFEE
"RTN","DGPTIC10",149,0)
 I '$G(PATNUM) S PATNUM=$G(PROC)
"RTN","DGPTIC10",150,0)
 I '$G(PATNUM) S EFFD=DT G G6OUT
"RTN","DGPTIC10",151,0)
 ;  Census Date
"RTN","DGPTIC10",152,0)
 S PTR=$P($G(^DGPT(PATNUM,0)),U,13) I PTR'="" S EFFD=$P($G(^DG(45.86,PTR,0)),U,1) G:EFFD'="" G6OUT
"RTN","DGPTIC10",153,0)
 ; -- requires a census
"RTN","DGPTIC10",154,0)
 S PTF=PATNUM D:'$D(DGPMCA) PM^DGPTUTL ; -- gets admission in DGPMCA and 0th node in DGPMAN
"RTN","DGPTIC10",155,0)
 D CEN^DGPTC1
"RTN","DGPTIC10",156,0)
 ; -- DGCST=Census Status, dgcn=ien of census date file
"RTN","DGPTIC10",157,0)
 I $D(DGCST),DGCST=0,DGCN>0 S EFFD=$P($G(^DG(45.86,DGCN,0)),U,1) G:EFFD?7N G7OUT ; DGCNO=0th node
"RTN","DGPTIC10",158,0)
 ;
"RTN","DGPTIC10",159,0)
 ;  Discharge Date
"RTN","DGPTIC10",160,0)
 S DISDATE=$E($P($G(^DGPT(PATNUM,70)),U,1),1,7)
"RTN","DGPTIC10",161,0)
 ;
"RTN","DGPTIC10",162,0)
 I $G(DGI)=1 S MOVDATE=$S(DISDATE'="":DISDATE,1:DT)
"RTN","DGPTIC10",163,0)
 I $G(DGI)=5 S MOVDATE=$P($G(^DGPT(PATNUM,"P",PROC,0)),U,1)
"RTN","DGPTIC10",164,0)
 I $G(DGI)=8 S MOVDATE=$P($G(^DGPT(PATNUM,"S",PROC,0)),U,1)
"RTN","DGPTIC10",165,0)
 I DISDATE'="" S EFFD=$P(DISDATE,".") G G6OUT
"RTN","DGPTIC10",166,0)
 S EFFD=DT
"RTN","DGPTIC10",167,0)
G6OUT ;
"RTN","DGPTIC10",168,0)
 Q EFFD
"RTN","DGPTIC10",169,0)
 ;
"RTN","DGPTIC10",170,0)
GETCDATE(PATNUM,CPT) ;
"RTN","DGPTIC10",171,0)
 ;Find the correct "EFFECTIVE DATE" for CPT Procedures
"RTN","DGPTIC10",172,0)
 ;
"RTN","DGPTIC10",173,0)
 ;  Input:    PATNUM - PTF Record Number
"RTN","DGPTIC10",174,0)
 ;            cpt    - CPT Entry Number
"RTN","DGPTIC10",175,0)
 ;  Output:   "effective date" to use
"RTN","DGPTIC10",176,0)
 ;
"RTN","DGPTIC10",177,0)
 N EFFD,PTR,IMPDATE,MOVDATE,X,Y,DGFEE
"RTN","DGPTIC10",178,0)
 ;  Census Date
"RTN","DGPTIC10",179,0)
 S PTR=$P($G(^DGPT(PATNUM,0)),U,13) I PTR'="" S EFFD=$P($G(^DG(45.86,PTR,0)),U,1) G:EFFD'="" GCOUT
"RTN","DGPTIC10",180,0)
 ; -- requires a census
"RTN","DGPTIC10",181,0)
 S PTF=PATNUM D:'$D(DGPMCA) PM^DGPTUTL ; -- gets admission in DGPMCA and 0th node in DGPMAN
"RTN","DGPTIC10",182,0)
 D CEN^DGPTC1
"RTN","DGPTIC10",183,0)
 ; -- DGCST=Census Status, dgcn=ien of census date file
"RTN","DGPTIC10",184,0)
 I $D(DGCST),DGCST=0,DGCN>0 S EFFD=$P($G(^DG(45.86,DGCN,0)),U,1) G:EFFD?7N G7OUT
"RTN","DGPTIC10",185,0)
 ;
"RTN","DGPTIC10",186,0)
 ;  Discharge Date
"RTN","DGPTIC10",187,0)
 S DISDATE=$E($P($G(^DGPT(PATNUM,70)),U,1),1,7)
"RTN","DGPTIC10",188,0)
 I DISDATE'="" S EFFD=$P(DISDATE,".") G GCOUT
"RTN","DGPTIC10",189,0)
 ;  Default TODAY
"RTN","DGPTIC10",190,0)
 S EFFD=DT
"RTN","DGPTIC10",191,0)
GCOUT ;
"RTN","DGPTIC10",192,0)
 Q EFFD
"RTN","DGPTIC10",193,0)
 ;
"RTN","DGPTIC10",194,0)
GETLABEL(EVDATE,CODESYS) ; returns ICD label for printing
"RTN","DGPTIC10",195,0)
 ; CODESYS - D for diagnosis or P for  Procedures
"RTN","DGPTIC10",196,0)
 ; EVDATE - event date to use for determine label (discharge, movement date, etc.
"RTN","DGPTIC10",197,0)
 N ICDVER
"RTN","DGPTIC10",198,0)
 S ICDVER=""
"RTN","DGPTIC10",199,0)
 I CODESYS="D" S ICDVER=" (ICD-10-CM)"  I EVDATE<$P($$IMPDATE("10D"),U,1) S ICDVER=" (ICD-9-CM)"
"RTN","DGPTIC10",200,0)
 I CODESYS="P" S ICDVER=" (ICD-10-PCS)"  I EVDATE<$P($$IMPDATE("10P"),U,1) S ICDVER=" (ICD-9-CM)"
"RTN","DGPTIC10",201,0)
 Q ICDVER
"RTN","DGPTIC10",202,0)
 ;
"RTN","DGPTIC10",203,0)
DISPLY(FILE,IEN,DATE,FRMT) ; -- return the Code - Description for a code
"RTN","DGPTIC10",204,0)
 N CODE,DESC
"RTN","DGPTIC10",205,0)
 I $G(FILE)="DIAG"!($G(FILE)="ICD")!($G(FILE)="10D") S FILE=80
"RTN","DGPTIC10",206,0)
 I $G(FILE)="PROC"!($G(FILE)="ICP")!($G(FILE)="10P") S FILE=80.1
"RTN","DGPTIC10",207,0)
 I $G(FILE)'=80&($G(FILE)'=80.1) Q ""
"RTN","DGPTIC10",208,0)
 I $G(IEN)<1 Q ""
"RTN","DGPTIC10",209,0)
 I $G(FRMT)="" S FRMT=1
"RTN","DGPTIC10",210,0)
 I FRMT'=1&(FRMT'=2) S FRMT=1
"RTN","DGPTIC10",211,0)
 S CODE=$$CODEC^ICDEX(FILE,IEN)
"RTN","DGPTIC10",212,0)
 S DESC=$$VLT^ICDEX(FILE,IEN,$G(DATE))
"RTN","DGPTIC10",213,0)
 ;
"RTN","DGPTIC10",214,0)
 I $G(CODE)=""!($P($G(CODE),"^")=-1) S CODE="****"
"RTN","DGPTIC10",215,0)
 I $G(DESC)=""!($P($G(DESC),"^")=-1) S DESC="********************"
"RTN","DGPTIC10",216,0)
 I $G(FRMT)=1 Q $E(CODE_"      ",1,9)_DESC
"RTN","DGPTIC10",217,0)
 I $G(FRMT)=2 Q DESC_"("_CODE_")"
"RTN","DGPTIC10",218,0)
 Q "****   **********************"
"RTN","DGPTIC10",219,0)
 ;
"RTN","DGPTIC10",220,0)
WRITECOD(FILE,IEN,DATE,FRMT,RETURN,TAB) ;
"RTN","DGPTIC10",221,0)
 N I,X,X1,DGIOM,TAB1,TAB2,DGPARSE,DGPARSE2,DGSPACE,SIZE,DGSPACE2
"RTN","DGPTIC10",222,0)
 S TAB=+$G(TAB),RETURN=+$G(RETURN)
"RTN","DGPTIC10",223,0)
 S:TAB>20 TAB=20
"RTN","DGPTIC10",224,0)
 S SIZE=$S(TAB<1:4,1:TAB)
"RTN","DGPTIC10",225,0)
 S RETURN=$S(RETURN=0:"$C(0)",RETURN=1:"!",RETURN=2:"!!",RETURN=3:"!!!",1:"!")
"RTN","DGPTIC10",226,0)
 S DGIOM=+$G(IOM) I DGIOM<40 S DGIOM=80
"RTN","DGPTIC10",227,0)
 ;
"RTN","DGPTIC10",228,0)
 S X=$$DISPLY($G(FILE),$G(IEN),$G(DATE),$G(FRMT))
"RTN","DGPTIC10",229,0)
 I ($L(X)+SIZE)<DGIOM W @RETURN,?TAB,X Q
"RTN","DGPTIC10",230,0)
 ;
"RTN","DGPTIC10",231,0)
 S DGPARSE=DGIOM-TAB ; Find the place to start moving backwards looking for a space
"RTN","DGPTIC10",232,0)
 I TAB<1 S DGPARSE=DGPARSE-4
"RTN","DGPTIC10",233,0)
 ;
"RTN","DGPTIC10",234,0)
 F I=DGPARSE:-1:10 I $E(X,I)=" " Q
"RTN","DGPTIC10",235,0)
 S DGSPACE=I ; this is the space
"RTN","DGPTIC10",236,0)
 ;
"RTN","DGPTIC10",237,0)
 I FRMT=1 S TAB1=$F(X," ") D
"RTN","DGPTIC10",238,0)
 . S I=0 F  S I=$F(X," ",TAB1) Q:I'=(TAB1+1)  S TAB1=I
"RTN","DGPTIC10",239,0)
 . S TAB2=TAB1+1
"RTN","DGPTIC10",240,0)
 I FRMT'=1 S TAB2=TAB+3
"RTN","DGPTIC10",241,0)
 ;
"RTN","DGPTIC10",242,0)
 I ($L(X)+SIZE)>79 W @RETURN,?TAB,$E(X,1,DGSPACE) D
"RTN","DGPTIC10",243,0)
 . I (TAB2+$L($E(X,DGSPACE+1,$L(X))))<DGIOM D  Q
"RTN","DGPTIC10",244,0)
 .. W !,?TAB2,"  ",$E(X,DGSPACE+1,$L(X))
"RTN","DGPTIC10",245,0)
 . ;
"RTN","DGPTIC10",246,0)
 . S DGPARSE=DGIOM-TAB2-3
"RTN","DGPTIC10",247,0)
 . S X1=$E(X,DGSPACE+1,$L(X))
"RTN","DGPTIC10",248,0)
 . ;
"RTN","DGPTIC10",249,0)
 . F I=DGPARSE:-1:1 I $E(X1,I)=" " Q
"RTN","DGPTIC10",250,0)
 . S DGSPACE2=I
"RTN","DGPTIC10",251,0)
 . W !,?TAB2,"  ",$E(X1,1,DGSPACE2)
"RTN","DGPTIC10",252,0)
 . W !,?TAB2,"  ",$E(X1,DGSPACE2+1,$L(X1)) Q
"RTN","DGPTIC10",253,0)
 Q
"RTN","DGPTIC10",254,0)
 ;
"RTN","DGPTIC10",255,0)
PREV ;
"RTN","DGPTIC10",256,0)
 Q
"RTN","DGPTIC10",257,0)
 ;
"RTN","DGPTIC10",258,0)
ICDNAME() ; -- Called from PTF EXPANDED CODE file (45.89) field Name (#200)
"RTN","DGPTIC10",259,0)
 ; -- Determines ICD Code name using supported API's
"RTN","DGPTIC10",260,0)
 ;    Replaces direct global reads in computed Expression
"RTN","DGPTIC10",261,0)
 ;
"RTN","DGPTIC10",262,0)
 Q:'+$G(D0)&'+$G(DA)
"RTN","DGPTIC10",263,0)
 I '+$G(D0) S D0=DA
"RTN","DGPTIC10",264,0)
 N ENTRY,TYPE,X
"RTN","DGPTIC10",265,0)
 S X=""
"RTN","DGPTIC10",266,0)
 S ENTRY=$P($G(^DIC(45.89,D0,0)),U,2),VERSION=$P($G(^DIC(45.89,D0,0)),U,5)
"RTN","DGPTIC10",267,0)
 Q:'+$G(ENTRY) X
"RTN","DGPTIC10",268,0)
 S TYPE=$P(ENTRY,";",2),VERSION=$P(^DIC(45.89,D0,0),U,5)
"RTN","DGPTIC10",269,0)
 I TYPE="ICD9(" S X=$$VLT^ICDEX(80,+ENTRY)
"RTN","DGPTIC10",270,0)
 I TYPE="ICD0(" S X=$$VLT^ICDEX(80.1,+ENTRY)
"RTN","DGPTIC10",271,0)
 Q X
"RTN","DGPTIC10",272,0)
 ;
"RTN","DGPTIC10",273,0)
INPUT() ; - Input transform for 27.27;9  S X=$$INPUT^DGPTIC10() K:X<1 X
"RTN","DGPTIC10",274,0)
 N ICDVER,CAT
"RTN","DGPTIC10",275,0)
 S CAT=$P(^(0),U,2) S Y(0)=$S(CAT="D":80,CAT-"P":80.1,1:"")
"RTN","DGPTIC10",276,0)
 S ICDVER=$S(CAT="D":"10D",1:"10P")
"RTN","DGPTIC10",277,0)
 D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"RTN","DGPTIC10",278,0)
 Q X
"RTN","DGPTIC10",279,0)
DATERANG ; Get an ICD-10 compliant date range
"RTN","DGPTIC10",280,0)
 N IMPDATE,DGSDATE ;
"RTN","DGPTIC10",281,0)
 S IMPDATE=+$$IMPDATE^DGPTIC10("10D")
"RTN","DGPTIC10",282,0)
 W !!,"ICD-10 Implementation Date: ",$$FMTE^XLFDT(IMPDATE),!
"RTN","DGPTIC10",283,0)
 S DGSDATE=$$SDAT() G:DGSDATE<1 DRQ
"RTN","DGPTIC10",284,0)
 S DGEDATE=$$TDAT(DGSDATE)
"RTN","DGPTIC10",285,0)
 ;G:EDATE<1 DRQ
"RTN","DGPTIC10",286,0)
DRQ ;
"RTN","DGPTIC10",287,0)
 ;
"RTN","DGPTIC10",288,0)
SDAT() ; ask for start date
"RTN","DGPTIC10",289,0)
 N Y,DIR,DTOUT,DUOUT
"RTN","DGPTIC10",290,0)
 S DIR(0)="D^:"_DT_":EX",DIR("A")="Start Date"
"RTN","DGPTIC10",291,0)
 D ^DIR K DIR
"RTN","DGPTIC10",292,0)
 Q:$D(DTOUT)!($D(DUOUT)) -1
"RTN","DGPTIC10",293,0)
 Q Y
"RTN","DGPTIC10",294,0)
TDAT(DGSDAT) ; ask for end date
"RTN","DGPTIC10",295,0)
 N Y,DIR,DTOUT,DUOUT
"RTN","DGPTIC10",296,0)
 S DIR(0)="D^"_DGSDAT_":"_DT_":EX",DIR("A")="End Date"
"RTN","DGPTIC10",297,0)
 I '$D(IMPDATE) S IMPDATE=+$$IMPDATE^DGPTIC10("10D")
"RTN","DGPTIC10",298,0)
 I DGSDAT<IMPDATE,DT'<IMPDATE D
"RTN","DGPTIC10",299,0)
 . W !!,?10,"Start date is before ICD-10 implementation.",!,?10,"End date must be before ICD-10 implementation",!
"RTN","DGPTIC10",300,0)
 . S DIR(0)="D^"_DGSDAT_":"_$$FMADD^XLFDT(IMPDATE,-1)_":EX"
"RTN","DGPTIC10",301,0)
 D ^DIR K DIR
"RTN","DGPTIC10",302,0)
 Q:$D(DTOUT)!($D(DUOUT)) -1
"RTN","DGPTIC10",303,0)
 Q Y
"RTN","DGPTIC10",304,0)
 ;
"RTN","DGPTIC10",305,0)
CENSUS(DGPTF) ; display warning to user for ICD-10 transition census records
"RTN","DGPTIC10",306,0)
 ; -- do not remove this procedure from the routine
"RTN","DGPTIC10",307,0)
 ; -- called by input templates DG401, DG501, DG501F, DG601, and DG701
"RTN","DGPTIC10",308,0)
 ;
"RTN","DGPTIC10",309,0)
 ;
"RTN","DGPTIC10",310,0)
 Q
"RTN","DGPTIC10",311,0)
 N X,Y,CENDATE,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPTIC10",312,0)
 ;
"RTN","DGPTIC10",313,0)
 Q:'$D(PTF)  ; -- Called directly from fileman, no variable set up.
"RTN","DGPTIC10",314,0)
 ;
"RTN","DGPTIC10",315,0)
 ; -- Get census status (DGCST) and ien of census date (DGCN)
"RTN","DGPTIC10",316,0)
 D CEN^DGPTC1
"RTN","DGPTIC10",317,0)
 ;
"RTN","DGPTIC10",318,0)
 I '$D(DGCST) G CENSUSQ
"RTN","DGPTIC10",319,0)
 I $G(DGCST)>0 G CENSUSQ ; status no longer open
"RTN","DGPTIC10",320,0)
 ;
"RTN","DGPTIC10",321,0)
 ; -- DGCST=Census Status, dgcn=ien of census date file
"RTN","DGPTIC10",322,0)
 I $D(DGCST),DGCST=0,DGCN>0 S CENDATE=$P($G(^DG(45.86,DGCN,0)),U,1)
"RTN","DGPTIC10",323,0)
 D EFFDATE(DGPTF)
"RTN","DGPTIC10",324,0)
 I CENDATE<IMPDATE,DT'<IMPDATE D
"RTN","DGPTIC10",325,0)
 . W !!,?5,"Note: This PTF record is OPEN for CENSUS."
"RTN","DGPTIC10",326,0)
 . W !,?7,"Census requires ICD-9 codes."
"RTN","DGPTIC10",327,0)
 . W !,?7,"PTF will require ICD-10 codes after the census is closed.",!
"RTN","DGPTIC10",328,0)
CENSUSQ ;
"RTN","DGPTIC10",329,0)
 Q
"RTN","DGPTIC10",330,0)
 ;
"RTN","DGPTICD")
0^10^B10307606^B8832875
"RTN","DGPTICD",1,0)
DGPTICD ;ALB/MTC - PTF DRG Grouper Utility ;2/19/02 3:08pm
"RTN","DGPTICD",2,0)
 ;;5.3;Registration;**375,441,510,559,599,606,775,785,850**;Aug 13, 1993;Build 171
"RTN","DGPTICD",3,0)
 ;variables to pass in:
"RTN","DGPTICD",4,0)
 ;  DGDX <- format: DX CODE1^DX CODE2^DX CODE3^...                      (REQUIRED)
"RTN","DGPTICD",5,0)
 ;  DGDXPOA <- format: poa1^poa2^poa3....                               (REQUIRED for ICD-10 diag)
"RTN","DGPTICD",6,0)
 ;  DGSURG <- format: SURGERY CODE1^SURGERY CODE2^SURGERY CODE3^...       (OPTIONAL)
"RTN","DGPTICD",7,0)
 ;  DGPROC <- format: PROCEDURE CODE1^PROCEDURE CODE2^PROCEDURE CODE3^... (OPTIONAL)
"RTN","DGPTICD",8,0)
 ;  DGTRS  <- 1 if patient transferred to acute care facility             (REQUIRED)
"RTN","DGPTICD",9,0)
 ;  DGEXP  <- 1 if patient died during this episode                       (REQUIRED)
"RTN","DGPTICD",10,0)
 ;  DGDMS  <- 1 if patient was discharged with an Irregular discharge (discharged against medical advice) (REQUIRED)
"RTN","DGPTICD",11,0)
 ;  AGE,SEX     (REQUIRED)
"RTN","DGPTICD",12,0)
 ;values of variables listed above are left unchanged by this routine
"RTN","DGPTICD",13,0)
 ;variable passed back: DRG(0) <- zero node of DRG in DRG file
"RTN","DGPTICD",14,0)
 ;                    : DRG <- IFN of DRG in DRG file
"RTN","DGPTICD",15,0)
 ;  DGDAT  <- Effective date to be used in calculating DRG
"RTN","DGPTICD",16,0)
 ;
"RTN","DGPTICD",17,0)
 ;-- check for required variables
"RTN","DGPTICD",18,0)
 ;
"RTN","DGPTICD",19,0)
 Q:'$D(DGDX)!'$D(DGTRS)!'$D(DGEXP)!'$D(DGDMS)
"RTN","DGPTICD",20,0)
 N DGI
"RTN","DGPTICD",21,0)
 ;-- build ICDDX array
"RTN","DGPTICD",22,0)
 K ICDDX,ICDPOA
"RTN","DGPTICD",23,0)
 ;
"RTN","DGPTICD",24,0)
 I $G(EFFDATE)="" D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPTICD",25,0)
 S ICDEDT=EFFDATE
"RTN","DGPTICD",26,0)
 S DGI=0 F  S DGI=DGI+1 Q:$P(DGDX,U,DGI)=""  D
"RTN","DGPTICD",27,0)
 . S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DGDX,U,DGI),EFFDATE)
"RTN","DGPTICD",28,0)
 . I +DGPTTMP>0,($P(DGPTTMP,U,10)) S ICDDX(DGI)=$P(DGDX,U,DGI) D
"RTN","DGPTICD",29,0)
 .. I EFFDATE'<$$IMPDATE^LEXU("10D") S ICDPOA(DGI)=$S($G(DGDXPOA)'="":$P($G(DGDXPOA),U,DGI),1:"Y")
"RTN","DGPTICD",30,0)
 I '$D(ICDDX) W ! G Q
"RTN","DGPTICD",31,0)
 ;
"RTN","DGPTICD",32,0)
 ;-- build ICDPRC array
"RTN","DGPTICD",33,0)
 K ICDPRC
"RTN","DGPTICD",34,0)
 ;-- build ICDPRC array eliminating dupes as we go
"RTN","DGPTICD",35,0)
 K ICDPRC
"RTN","DGPTICD",36,0)
 N I,J,X,Y,FLG,SUB S SUB=0
"RTN","DGPTICD",37,0)
 I $D(DGPROC) F I=2:1 S X=$P(DGPROC,U,I) Q:X=""  D
"RTN","DGPTICD",38,0)
 . S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",X,+$G(EFFDATE))
"RTN","DGPTICD",39,0)
 . I +DGPTTMP>0,($P(DGPTTMP,U,10)) S SUB=SUB+1,ICDPRC(SUB)=X
"RTN","DGPTICD",40,0)
 I $D(DGSURG) F I=2:1 S X=$P(DGSURG,U,I) Q:X=""  D
"RTN","DGPTICD",41,0)
 . S J=0 F  S J=$O(ICDPRC(J)) Q:'J
"RTN","DGPTICD",42,0)
 . S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",X,+$G(EFFDATE))
"RTN","DGPTICD",43,0)
 . I +DGPTTMP>0,($P(DGPTTMP,U,10)) S SUB=SUB+1,ICDPRC(SUB)=X
"RTN","DGPTICD",44,0)
 . S ICDSURG(SUB)=$P(DGPTTMP,U,2)
"RTN","DGPTICD",45,0)
 ;
"RTN","DGPTICD",46,0)
 ;-- set other required variables
"RTN","DGPTICD",47,0)
 S ICDTRS=DGTRS,ICDEXP=DGEXP,ICDDMS=DGDMS
"RTN","DGPTICD",48,0)
 ;DRP S ICDDATE=$S($D(DGDAT):DGDAT,1:DT),DGDAT=ICDDATE  ;Ensure that DGDAT is defined prior to executing PRT
"RTN","DGPTICD",49,0)
 S ICDDATE=$S(+$G(DGDAT):DGDAT,1:DT),DGDAT=ICDDATE  ;Ensure that DGDAT is defined prior to executing PRT
"RTN","DGPTICD",50,0)
 ;
"RTN","DGPTICD",51,0)
 ;-- calculate DRG
"RTN","DGPTICD",52,0)
 ;reset ICD partition variables to prevent date/coding system conflicts
"RTN","DGPTICD",53,0)
 K ICDCSYS,ICD0,ICDCDSY,ICDEDT
"RTN","DGPTICD",54,0)
 D ^ICDDRG S DRG=ICDDRG I '$D(DGDRGPRT) G Q
"RTN","DGPTICD",55,0)
 ;
"RTN","DGPTICD",56,0)
PRT ;print DRG and national HCFA values
"RTN","DGPTICD",57,0)
 I (ICDDATE<3071001)&(DRG=468!(DRG=469)!(DRG=470)) W *7
"RTN","DGPTICD",58,0)
 I DRG=998!(DRG=999) W *7
"RTN","DGPTICD",59,0)
 S Y=ICDDATE D DD^%DT ; Y=external representation of effective date
"RTN","DGPTICD",60,0)
 W !!?9,"Effective Date:","  ",Y
"RTN","DGPTICD",61,0)
 S DRG(0)=$$DRG^ICDGTDRG(DRG,DGDAT) W !!,"Diagnosis Related Group: ",$J(DRG,6),?36,"Average Length of Stay(ALOS): ",$J($P(DRG(0),"^",8),6)
"RTN","DGPTICD",62,0)
 W !?17,"Weight: ",$J($P(DRG(0),"^",2),6)  ;,?40,"Local Breakeven: ",$J($P(DRG(0),"^",12),6)
"RTN","DGPTICD",63,0)
 W !?12," Low Day(s): ",$J($P(DRG(0),"^",3),6)  ;,?39,"Local Low Day(s): ",$J($P(DRG(0),"^",9),6)
"RTN","DGPTICD",64,0)
 W !?13," High Days: ",$J($P(DRG(0),"^",4),6)  ;,?40,"Local High Days: ",$J($P(DRG(0),"^",10),6)
"RTN","DGPTICD",65,0)
 N DXD,DGDX
"RTN","DGPTICD",66,0)
 S DXD=$$DRGD^ICDGTDRG(DRG,"DGDX",,DGDAT),DGI=0
"RTN","DGPTICD",67,0)
 W !!,"DRG: ",DRG,"-" F  S DGI=$O(DGDX(DGI)) Q:'+DGI  Q:DGDX(DGI)=" "  W ?10,DGDX(DGI),!
"RTN","DGPTICD",68,0)
 K ICDDATE
"RTN","DGPTICD",69,0)
Q K ICDDMS,ICDDRG,ICDDX,ICDEXP,ICDMDC,ICDPRC,ICDRTC,ICDTRS Q
"RTN","DGPTICD",70,0)
 ;
"RTN","DGPTICD",71,0)
80 ;
"RTN","DGPTICD",72,0)
 N DIC S DIC=80,DIC(0)="AEQLIM" D ^DIC
"RTN","DGPTICD",73,0)
 S OUT=Y
"RTN","DGPTICD",74,0)
 Q
"RTN","DGPTODR")
0^69^B5431903^B5634642
"RTN","DGPTODR",1,0)
DGPTODR ;ALB/ABS/ADL - DRG Information Report ;11/15/06 2:57pm
"RTN","DGPTODR",2,0)
 ;;5.3;Registration;**510,729,850**;Aug 13, 1993;Build 171
"RTN","DGPTODR",3,0)
 ;;ADL;Update for CSV Project;;Mar 28, 2003
"RTN","DGPTODR",4,0)
 S DGTMP=DGDX,DGDRGPRT=1,(DGPG,DGQ)=0,$P(DGLN,"=",81)="" D HDR
"RTN","DGPTODR",5,0)
 F DGX=1:1 Q:$P(DGTMP,"^",DGX)']""  D CONT:$E(IOST,1,2)="C-" Q:DGQ["^"  D
"RTN","DGPTODR",6,0)
 . W !,DGLN,!?10,"PRINCIPAL DIAGNOSIS:",$J($P(DGDX(DGX),"^"),8),"  ",$P(DGDX(DGX),"^",2) D ^DGPTICD S DGDX=$P(DGDX,"^",2,99)_"^"_$P(DGDX,"^")
"RTN","DGPTODR",7,0)
Q K AGE,NAME,SEX,DGDMS,DGDRGPRT,DGDX,DGEXP,DGSURG,DGTRS,DGLN,DGPG,DGQ,DGTMP,DGX,DGPTODR,I,Y Q
"RTN","DGPTODR",8,0)
HDR ;print heading
"RTN","DGPTODR",9,0)
 S DGPG=DGPG+1 W @IOF,"DRG INFORMATION REPORT",?45,"Date: " S Y=DT X ^DD("DD") W Y,"  Page: ",DGPG,!!
"RTN","DGPTODR",10,0)
 S Y=DGDAT D DD^%DT ; Y = external format of effective date
"RTN","DGPTODR",11,0)
 W "Effective Date: ",Y,! I NAME]"" W "Patient: ",NAME,?40
"RTN","DGPTODR",12,0)
 W "Sex: ",$S(SEX="M":"Male",1:"Female"),?61,"Age: ",AGE,!,"Expired: ",$S(DGEXP:"Yes",1:"No"),?18,"Transferred to Acute Care: ",$S(DGTRS:"Yes",1:"No"),?55,"Irreg D/C: ",$S(DGDMS:"Yes",1:"No")
"RTN","DGPTODR",13,0)
 Q:DGPG'=1  W !!,"Diagnosis Codes:" F I=0:0 S I=$O(DGDX(I)) Q:I'>0  W !,$J($P(DGDX(I),"^"),8),"  ",$P(DGDX(I),"^",2) I $G(DGDXPOA)'="" D
"RTN","DGPTODR",14,0)
 . W:DGTERMIN="10D" "  (POA="_$P(DGDXPOA,"^",I)_")"
"RTN","DGPTODR",15,0)
 I $D(DGSURG) W !!,"Operation/Procedure Codes:" F I=0:0 S I=$O(DGSURG(I)) Q:I'>0  W !,$J($P(DGSURG(I),"^"),8),"  ",$P(DGSURG(I),"^",2)
"RTN","DGPTODR",16,0)
 Q
"RTN","DGPTODR",17,0)
CONT I $Y+8>IOSL R !!?20,"Press <RET> to continue or ""^"" to abort ",DGQ:DTIME S:'$T DGQ="^" Q:DGQ["^"  D HDR
"RTN","DGPTODR",18,0)
 Q
"RTN","DGPTOLC2")
0^23^B25585897^B22638617
"RTN","DGPTOLC2",1,0)
DGPTOLC2 ;ALB/AS/ADL - SUMMARY BY ADM RPT, lists diagnoses,sur,pro (cont.) ;11/15/06 3:15pm
"RTN","DGPTOLC2",2,0)
 ;;5.3;Registration;**164,510,559,599,729,850**; Aug 13, 1993;Build 171
"RTN","DGPTOLC2",3,0)
 ;;ADL;Update for CSV Project;;Mar 27, 2003
"RTN","DGPTOLC2",4,0)
 ;
"RTN","DGPTOLC2",5,0)
EN D LO^DGUTL,NOW^%DTC S DGPT=0,DGDT=$TR($$FMTE^XLFDT(DT,"5DF")," ","0")_"@",%=$P(%,".",2),DGDT=DGDT_$E(%,1,2)_":"_$E(%_"0000",3,4)
"RTN","DGPTOLC2",6,0)
 F PTF=0:0 S PTF=$O(DGPTF(PTF)) Q:PTF'>0  S DGNAME=$P(DGPTF(PTF),"^"),DGADM=$P(DGPTF(PTF),"^",2),DGPTF(DGNAME,DGADM,PTF)="" K DGPTF(PTF) ;put names in alphabetical order
"RTN","DGPTOLC2",7,0)
 F DGPTX=0:0 S DGPT=$O(DGPTF(DGPT)) Q:DGPT']""  F DGADM=0:0 S DGADM=$O(DGPTF(DGPT,DGADM)) Q:DGADM'>0  S DGPG=1,PTF=$O(DGPTF(DGPT,DGADM,0)),DFN=$S($D(^DGPT(PTF,0)):+^(0),1:"") I DFN]"" S DGPMIFN=$O(^DGPM("APTF",PTF,0)) D E,HD,D
"RTN","DGPTOLC2",8,0)
 D Q2^DGPTOLC1 Q
"RTN","DGPTOLC2",9,0)
E ;
"RTN","DGPTOLC2",10,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTOLC2",11,0)
 S DGELIG=$S('$D(^DPT(DFN,.36)):"Unknown",$D(^DIC(8,+$P(^(.36),"^"),0)):$P(^(0),"^"),1:"Unknown"),X=$S($D(^DPT(DFN,.361)):$P(^(.361),"^"),1:""),%=";"_$P(^DD(2,.3611,0),"^",3),DGSTAT=$S(X']"":"Unknown",1:$P($P(%,";"_X_":",2),";",1))
"RTN","DGPTOLC2",12,0)
 S DG70=$S($D(^DGPT(PTF,70)):^(70),1:""),DGFEE=$S($P(^DGPT(PTF,0),"^",4):1,1:"") I DGFEE S X1=$S(+DG70:+DG70,1:DT),X2=DGADM D ^%DTC S DGLOS=$S(X:X,1:1),DGLV=0,D1=0
"RTN","DGPTOLC2",13,0)
 I '+DG70 S DGPRO=$S($D(^DPT(DFN,.104)):+^(.104),1:""),DGPRO=$S($D(^VA(200,+DGPRO,0)):$P(^(0),"^"),1:"Unknown")
"RTN","DGPTOLC2",14,0)
 I +DG70 S DGPRO=$S('$D(^DGPT(PTF,"M",1,"P")):"",1:$P(^("P"),"^",5)),DGPRO=$S($D(^VA(200,+DGPRO,0)):$P(^(0),"^"),1:"") I DGPRO']"" D DGPRO
"RTN","DGPTOLC2",15,0)
 Q
"RTN","DGPTOLC2",16,0)
CRT I IOST?1"C-".E R !?20,"Enter <RETURN> to continue",Y:DTIME
"RTN","DGPTOLC2",17,0)
HD W @IOF,?21,"PATIENT SUMMARY by ADMISSION",!!?51,"Run Date: ",DGDT,!,DGPT,?32,"SSN: ",$P(^DPT(+^DGPT(PTF,0),0),"^",9),?51,"Admitted: " S X=DGADM D DT
"RTN","DGPTOLC2",18,0)
 W !,"Elig: ",DGELIG,"  (",DGSTAT,")",?50,"Discharge: " S X=$P(DG70,"^") D DT W ! W:DGFEE "Fee Basis"
"RTN","DGPTOLC2",19,0)
 I DGPMIFN>0 W "Total LOS: " D ^DGPMLOS S X=+$P(X,"^")-(+$P(X,"^",2))-(+$P(X,"^",4)) W $S(X>0:X,1:"1") W ?18,"* Provider: ",$E(DGPRO,1,19)
"RTN","DGPTOLC2",20,0)
 W ?55,"PTF #: ",PTF,?72,"Pg: ",DGPG S DGPG=DGPG+1 W:DGPMIFN>0 !,"* indicates the most recent PROVIDER entered for this admission",! Q
"RTN","DGPTOLC2",21,0)
D G S:'$D(^DGPT(PTF,"M","AC"))
"RTN","DGPTOLC2",22,0)
 K DGMD F DGS=0:0 S DGS=$O(^DGPT(PTF,"M",DGS)) Q:DGS'>0  I $D(^(DGS,0)) S DGMD=+$P(^(0),"^",10) S:'DGMD DGMD=999999999 S:$D(DGMD(DGMD)) DGMD=DGMD+.01*DGS S DGMD(DGMD)=DGS ;put movements in date order
"RTN","DGPTOLC2",23,0)
 F DGS=0:0 S DGS=$O(DGMD(DGS)) Q:DGS'>0  I $D(^DGPT(PTF,"M",DGMD(DGS),0)) D
"RTN","DGPTOLC2",24,0)
 . S DGM=^(0),X=$P(DGM,"^",10),DGBS=+$P(DGM,"^",2)
"RTN","DGPTOLC2",25,0)
 . W !!,"Movement Date: " D DT W:DGMD(DGS)=1 ?40,"(Discharge 501)" W $$GETLABEL^DGPTIC10(EFFDATE,"D") D:DGFEE LOS D BS F DGC=5:1:15 I DGC#10 D C
"RTN","DGPTOLC2",26,0)
 I DG70 S DGM=DG70 W !!,"Discharge Move: (701/2/3 Diagnoses)",$$GETLABEL^DGPTIC10(EFFDATE,"D"),! F DGC=10,11,16:1:24 D C
"RTN","DGPTOLC2",27,0)
S ; --
"RTN","DGPTOLC2",28,0)
 S DGF="S" F DGS=0:0 S DGS=$O(^DGPT(PTF,"S",DGS)) Q:DGS'>0  S DGSUR=^(DGS,0),X=+DGSUR W !!,"Surgery Date: " D DT W $$GETLABEL^DGPTIC10(EFFDATE,"P") F DGC=8:1:12 D P1
"RTN","DGPTOLC2",29,0)
 K DGF I $D(^DGPT(PTF,"401P")) S DGSUR=^("401P") W:'$D(DGF) !!,"Procedure: (401P)",$$GETLABEL^DGPTIC10(EFFDATE,"P") F DGC=1:1:5 D P1
"RTN","DGPTOLC2",30,0)
 F DGS=0:0 S DGS=$O(^DGPT(PTF,"P",DGS)) Q:DGS'>0  S DGSUR=^(DGS,0),X=+DGSUR W !!,"Procedure Date: " D DT W $$GETLABEL^DGPTIC10(EFFDATE,"P") F DGC=5:1:9 D P1
"RTN","DGPTOLC2",31,0)
 W:DGFEE !,"Total LOS: ",$S(DGLOS>0:DGLOS,1:"1") W ! D:IOST?1"C-".E CONT Q
"RTN","DGPTOLC2",32,0)
 Q
"RTN","DGPTOLC2",33,0)
 ;
"RTN","DGPTOLC2",34,0)
C ; --Print Diagnosis display
"RTN","DGPTOLC2",35,0)
 Q:'+$P(DGM,"^",DGC)
"RTN","DGPTOLC2",36,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DGM,"^",DGC),EFFDATE) D  ;Q:+DGPTTMP<0!('$P(DGPTTMP,U,10))  S DGICD=$P(DGPTTMP,U,2,99) D
"RTN","DGPTOLC2",37,0)
 . I $Y>($S($D(IOSL):IOSL,1:66)-4) D CRT W !,"Diagnosis Codes, (cont.)",$$GETLABEL^DGPTIC10(EFFDATE,"D")
"RTN","DGPTOLC2",38,0)
 . W:DGC=10 ?4,"PRINCIPAL DIAGNOSIS: " ;W ?10,$P(DGICD,"^",3)_" ("_$P(DGICD,"^",1)_")" Q
"RTN","DGPTOLC2",39,0)
 . D WRITECOD^DGPTIC10("DIAG",+$P(DGM,"^",DGC),EFFDATE,2,1,7)
"RTN","DGPTOLC2",40,0)
 . W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"")
"RTN","DGPTOLC2",41,0)
 Q
"RTN","DGPTOLC2",42,0)
 ;
"RTN","DGPTOLC2",43,0)
P1 ; -- Print Procedure Code
"RTN","DGPTOLC2",44,0)
 Q:'+$P(DGSUR,"^",DGC)
"RTN","DGPTOLC2",45,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+$P(DGSUR,"^",DGC),EFFDATE) D  ;Q:+DGPTTMP<0!('$P(DGPTTMP,U,10))  S DGICD=$P(DGPTTMP,U,2,99) Q:DGICD']""  D
"RTN","DGPTOLC2",46,0)
 . I $Y>($S($D(IOSL):IOSL,1:66)-4) D CRT W !,$S('$D(DGF):"Non-OR Procedures",DGF="S":"Surgery",1:"Non-OR Procedures") W " Codes, (cont.)"
"RTN","DGPTOLC2",47,0)
 . D WRITECOD^DGPTIC10("PROC",+$P(DGSUR,"^",DGC),EFFDATE,2,1,7)
"RTN","DGPTOLC2",48,0)
 . W $S(+DGPTTMP<1!('$P(DGPTTMP,U,10)):"*",1:"")
"RTN","DGPTOLC2",49,0)
 Q
"RTN","DGPTOLC2",50,0)
 ;
"RTN","DGPTOLC2",51,0)
DT Q:X']""  W $TR($$FMTE^XLFDT(X,"5DF")," ","0") S X=$P(X,".",2) I X]"" W "@"_$E(X,1,2)_":"_$E(X_"0000",3,4)
"RTN","DGPTOLC2",52,0)
 Q
"RTN","DGPTOLC2",53,0)
BS S DGBS=$S('DGBS:DGBS,$D(^DIC(42.4,+DGBS,0)):$P(^(0),"^",1),1:"") W !,"Losing Specialty: ",DGBS Q
"RTN","DGPTOLC2",54,0)
LOS F %=3,4 S DGLV=$P(DGM,"^",%)+DGLV
"RTN","DGPTOLC2",55,0)
 S DGLOS=DGLOS-DGLV Q
"RTN","DGPTOLC2",56,0)
CONT F Y=1:1:($S($D(IOSL):IOSL,1:66)-$Y-2) W !
"RTN","DGPTOLC2",57,0)
 R ?20,"Enter <RETURN> to continue",Y:DTIME Q
"RTN","DGPTOLC2",58,0)
DGPRO S X=$O(^DGPM("APTF",PTF,0)),VAIP("E")=$S('$D(^DGPM(+X,0)):"",1:$P(^DGPM(X,0),"^",17))
"RTN","DGPTOLC2",59,0)
 I VAIP("E") D IN5^VADPT S DGPRO=$S($P(VAIP(7),"^",2)]"":$P(VAIP(7),"^",2),1:"Unknown") K VAIP Q
"RTN","DGPTOLC2",60,0)
 S DGPRO="Unknown" K VAIP Q
"RTN","DGPTR0")
0^29^B26425804^B25588863
"RTN","DGPTR0",1,0)
DGPTR0 ;MJK/JS/ADL/TJ - PTF TRANSMISSION ;9/26/05 6:44pm
"RTN","DGPTR0",2,0)
 ;;5.3;Registration;**114,247,338,342,510,524,565,678,729,664,850**;Aug 13, 1993;Build 171
"RTN","DGPTR0",3,0)
 ;;ADL;Update for CSV Project;;Mar 27, 2003
"RTN","DGPTR0",4,0)
 ; -- setup control data
"RTN","DGPTR0",5,0)
 ; ssn
"RTN","DGPTR0",6,0)
 S X=$P(DG10,U,9),Y=$S($E(X,10)="P":"P",1:" ")_$E(X_"         ",1,9)
"RTN","DGPTR0",7,0)
 ; -- adm d/t
"RTN","DGPTR0",8,0)
 S X=$P($P(DG0,U,2),"."),Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)_$E($P($P(DG0,U,2),".",2)_"0000",1,4)
"RTN","DGPTR0",9,0)
 ; -- facility #
"RTN","DGPTR0",10,0)
 S L=3,X=DG0,Z=3 D ENTER S Y=Y_$E($P(X,U,5)_"   ",1,3)
"RTN","DGPTR0",11,0)
 S DGHEAD=Y,Y="    "_Y D HEAD^DGPTR1
"RTN","DGPTR0",12,0)
 ;
"RTN","DGPTR0",13,0)
101 ; -- setup 101 transmission
"RTN","DGPTR0",14,0)
 ; control data and name
"RTN","DGPTR0",15,0)
 S Y=$S(T1:"C",1:"N")_"101"_DGHEAD S Y=Y_$$PTFNMFT($P(DG10,U))
"RTN","DGPTR0",16,0)
 ; source of admission
"RTN","DGPTR0",17,0)
 S Y=Y_$S($D(^DIC(45.1,+DG101,0)):$J($P(^(0),U,1),2),1:"  ")
"RTN","DGPTR0",18,0)
 ; xfring fac and suffix
"RTN","DGPTR0",19,0)
 S L=3,X=DG101,Z=5 D ENTER S Y=Y_$E($P(X,U,6)_"   ",1,3)
"RTN","DGPTR0",20,0)
 ; source of payment
"RTN","DGPTR0",21,0)
 S Y=Y_$S("A0"[$P(DG0,U,5):" ",1:$J($P(DG101,U,3),1))
"RTN","DGPTR0",22,0)
 ;POW Location
"RTN","DGPTR0",23,0)
 S Y=Y_$S($P(DG52,U,5)="N":1,$P(DG52,U,5)'="Y":3,$P(DG52,U,6)>0&($P(DG52,U,6)<7):3+$P(DG52,U,6),$P(DG52,U,6)>6&($P(DG52,U,6)<9):$C($P(DG52,U,6)+58),1:" ")
"RTN","DGPTR0",24,0)
 ;marital status, sex
"RTN","DGPTR0",25,0)
 S Y=Y_$S($D(^DIC(11,+$P(DG10,U,5),0)):$E(^(0),1),1:" ")_$J($P(DG10,U,2),1)
"RTN","DGPTR0",26,0)
 ;  date of birth
"RTN","DGPTR0",27,0)
 S DGDOB=$P(DG10,U,3)\1,Y=Y_$E(DGDOB,4,5)_$E(DGDOB,6,7)_(1700+$E(DGDOB,1,3))
"RTN","DGPTR0",28,0)
 ; period of service
"RTN","DGPTR0",29,0)
 S DGPOS=$S($D(^DIC(21,+$P(DG32,U,3),0)):$P(^(0),U,3),1:"")
"RTN","DGPTR0",30,0)
 I $D(^DGPM(+$O(^DGPM("APTF",J,0)),"ODS")),+^("ODS") S DGPOS=6
"RTN","DGPTR0",31,0)
 ;-- if non vet admitting eligibility make POS 9
"RTN","DGPTR0",32,0)
 S DGPOS=$$CKPOS^DGPTUTL($P($G(^DGPT(PTF,101)),U,8),DGPOS)
"RTN","DGPTR0",33,0)
 S X=DGPOS,Z=1,L=2 D ENTER
"RTN","DGPTR0",34,0)
 ; agent orange
"RTN","DGPTR0",35,0)
 S G=" " S DGAO=$P(DG321,U,2) S:DGPOS=7 G=$S($P(DG321,U)'="Y":1,DGAO="N":2,DGAO="Y":3,1:4) S:(DGAO="Y")&($P(DG321,U,13)="K") G=5
"RTN","DGPTR0",36,0)
 ; rad exposure
"RTN","DGPTR0",37,0)
 S E=" " I "^0^2^4^5^7^8^Z^"[(U_DGPOS_U) S DGNT=$P(DG321,U,12),E=$S($P(DG321,U,3)'="Y":1,DGNT="N":2,DGNT="T":3,DGNT="B":4,1:" ")
"RTN","DGPTR0",38,0)
 S Y=Y_G_E K DGPOS,G,E
"RTN","DGPTR0",39,0)
 ; state code
"RTN","DGPTR0",40,0)
 S X=$S($D(^DIC(5,+$P(DG11,U,5),0)):^(0),1:""),L=2,Z=3 D ENTER0
"RTN","DGPTR0",41,0)
 ; county code
"RTN","DGPTR0",42,0)
 S X=$S($D(^DIC(5,+$P(DG11,U,5),1,+$P(DG11,U,7),0)):^(0),1:""),L=3,Z=3 D ENTER0
"RTN","DGPTR0",43,0)
 ; zip code
"RTN","DGPTR0",44,0)
 S X=DG11,Z=6,L=5 D ENTER
"RTN","DGPTR0",45,0)
 ; means test
"RTN","DGPTR0",46,0)
 S Y=Y_$S($P(DG70,U,26)="Y":"AS",1:$E($P(DG0,U,10)_"  ",1,2))
"RTN","DGPTR0",47,0)
 ; income
"RTN","DGPTR0",48,0)
 I $L($P(DG101,U,7))>6 S Y=Y_"999999"
"RTN","DGPTR0",49,0)
 E  S X=DG101,Z=7,L=6 D ENTER0
"RTN","DGPTR0",50,0)
 ;MST
"RTN","DGPTR0",51,0)
 S X=$$GETSTAT^DGMSTAPI(+DG0) S Y=Y_$S(X<0:"U",1:$P(X,"^",2))
"RTN","DGPTR0",52,0)
 ;Combat Vet
"RTN","DGPTR0",53,0)
 S X=$$CVEDT^DGCV(+DG0,$P(DG0,"^",2)) S Y=Y_$S((+X)>0:1,1:0)
"RTN","DGPTR0",54,0)
 S X=$P(X,"^",2)_"       " S Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)
"RTN","DGPTR0",55,0)
 ;Project 112/SHAD
"RTN","DGPTR0",56,0)
 S X=$$SHAD^SDCO22(+DG0) S Y=Y_$S((+X)>0:1,1:0)
"RTN","DGPTR0",57,0)
 ;Emergency Response Indicator
"RTN","DGPTR0",58,0)
 S X=$$EMGRES^DGUTL(+DG0) S Y=Y_$S("^K^"[(U_X_U):X,1:" ")
"RTN","DGPTR0",59,0)
 ;Country Code
"RTN","DGPTR0",60,0)
 S X=$$GET1^DIQ(779.004,$P(DG11,U,10)_",",.01),Z=1,L=3 D ENTER
"RTN","DGPTR0",61,0)
 D FILL^DGPTR2,SAVE
"RTN","DGPTR0",62,0)
 I T1 S Y=$E(Y,1,52)_" "_$E(Y,54,125)
"RTN","DGPTR0",63,0)
 ;
"RTN","DGPTR0",64,0)
P401 ; -- setup 401P transaction
"RTN","DGPTR0",65,0)
 G 401:'$D(^DGPT(J,"401P"))!(T1) S DG41=^("401P"),Y=$S(T1:"C",1:"N")_"401"_DGHEAD_"P"_"           "
"RTN","DGPTR0",66,0)
 N EFFDATE,IMPDATE,DGPTDAT D EFFDATE^DGPTIC10(J)
"RTN","DGPTR0",67,0)
 S DG41=$S($D(^DGPT(J,"401P")):^("401P"),1:"")
"RTN","DGPTR0",68,0)
 S L=1 F K=1:1:5 S:'$P(DG41,U,K) DG41=$P(DG41,U,1,K-1)_U_$P(DG41,U,K+1,99),K=K-1 S L=L+1 Q:L=5
"RTN","DGPTR0",69,0)
 F I=1:1:5 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+$P(DG41,U,I),EFFDATE,"I"),Y=Y_$S(+DGPTTMP>0:$J($P($P(DGPTTMP,U,2),".",1),2)_$E($P($P(DGPTTMP,U,2),".",2)_"   ",1,3),1:"     ")_"  "
"RTN","DGPTR0",70,0)
 K DGPTEDT
"RTN","DGPTR0",71,0)
 I $E(Y,40)'=" " D FILL^DGPTR2,SAVE
"RTN","DGPTR0",72,0)
 ;
"RTN","DGPTR0",73,0)
401 ; -- setup 401 transactions
"RTN","DGPTR0",74,0)
 G 501:'$D(^DGPT(J,"S")) K ^UTILITY($J,"S") S I=0
"RTN","DGPTR0",75,0)
SUR ;
"RTN","DGPTR0",76,0)
 S I=$O(^DGPT(J,"S",I)) G 501:'I S DGSUR=^(I,0),DGAUX=$S($D(^DGPT(J,"S",I,300)):^(300),1:"") G SUR:'DGSUR
"RTN","DGPTR0",77,0)
 G SUR:DGSUR<T1!(DGSUR>T2) S DGSUD=+^(0)\1,^UTILITY($J,"S",DGSUD)=$S($D(^UTILITY($J,"S",DGSUD)):^(DGSUD),1:0)+1,F=$S(DGSUD<2871000:0,1:1)
"RTN","DGPTR0",78,0)
 I ^UTILITY($J,"S",DGSUD)>$S(F:3,1:2) D  I Y'=1 S DGERR=1 Q
"RTN","DGPTR0",79,0)
 .W !,"**There are more than ",$S(F:"three",1:"two")," surgeries on the same date**"
"RTN","DGPTR0",80,0)
 .S DIR(0)="Y",DIR("B")="YES",DIR("A")="OK to continue?" D ^DIR K DIR
"RTN","DGPTR0",81,0)
 S Y=$S(T1:"C",1:"N")_"40"_^(DGSUD)_DGHEAD_$E(DGSUD,4,5)_$E(DGSUD,6,7)_$E(DGSUD,2,3)_$E($P(+DGSUR,".",2)_"0000",1,4)_$S($D(^DIC(45.3,+$P(DGSUR,U,3),0)):$P(^(0),U,1),1:"  ")
"RTN","DGPTR0",82,0)
 S L=1,X=DGSUR F Z=4:1:7 D ENTER
"RTN","DGPTR0",83,0)
 N EFFDATE,IMPDATE,DGPTDAT D EFFDATE^DGPTIC10(J)
"RTN","DGPTR0",84,0)
 S L=1 F K=8:1:12 S:'$P(DGSUR,U,K) DGSUR=$P(DGSUR,U,1,K-1)_U_$P(DGSUR,U,K+1,99),K=K-1 S L=L+1 Q:L=5
"RTN","DGPTR0",85,0)
 F K=8:1:12 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+$P(DGSUR,U,K),EFFDATE,"I"),Y=Y_$S(+DGPTTMP>0:$J($P($P(DGPTTMP,U,2),".",1),2)_$E($P($P(DGPTTMP,U,2),".",2)_"   ",1,3),1:"     ")_"  "
"RTN","DGPTR0",86,0)
 ;
"RTN","DGPTR0",87,0)
 ;-- att phy
"RTN","DGPTR0",88,0)
 S Y=Y_"         "
"RTN","DGPTR0",89,0)
 ;-- additional ptf question
"RTN","DGPTR0",90,0)
 ;send null, if disch date>inactive date. DG/729
"RTN","DGPTR0",91,0)
 I +$P($G(^DIC(45.88,1,0)),U,3) S DGAUX=$S((+$G(^DGPT(J,70))<$P(^DIC(45.88,1,0),U,3)):DGAUX,1:"")
"RTN","DGPTR0",92,0)
 S Y=Y_$E($P(DGAUX,U)_" ")
"RTN","DGPTR0",93,0)
 K DGAUX
"RTN","DGPTR0",94,0)
 D FILL^DGPTR2,SAVE G SUR
"RTN","DGPTR0",95,0)
501 G 501^DGPTR2
"RTN","DGPTR0",96,0)
 Q
"RTN","DGPTR0",97,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTR0",98,0)
 Q
"RTN","DGPTR0",99,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("000000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTR0",100,0)
 Q
"RTN","DGPTR0",101,0)
SAVE D START^DGPTR1 S:'DGERR ^XMB(3.9,DGXMZ,2,DGCNT,0)=Y,DGCNT=DGCNT+1
"RTN","DGPTR0",102,0)
 I DGERR'>0 S DGACNT=DGACNT+1,^TMP("AEDIT",$J,$E(Y,1,4),DGACNT)=Y
"RTN","DGPTR0",103,0)
Q Q
"RTN","DGPTR0",104,0)
DGNAM S X=DGNAM I X?.E.P F I=1:1:$L(X) S Z=$E(X,I) Q:Z=","  S:Z?.P&(Z]"") X=$E(X,1,I-1)_$E(X,I+1,$L(X)),I=I-1 Q:X'?.E.P
"RTN","DGPTR0",105,0)
 I X?.E.L D UP^DGHELP
"RTN","DGPTR0",106,0)
 S DGNAM=X
"RTN","DGPTR0",107,0)
 Q
"RTN","DGPTR0",108,0)
 ;
"RTN","DGPTR0",109,0)
PTFNMFT(DG10) ;this function will format the name of the patient for
"RTN","DGPTR0",110,0)
 ; transmission of the 101 record to Austin. In addition, this
"RTN","DGPTR0",111,0)
 ; function will be used by OPC so that the format will be consistent
"RTN","DGPTR0",112,0)
 ; for OPC and PTF.
"RTN","DGPTR0",113,0)
 ;  INPUT :   DG10 - .01 field from the patient record.
"RTN","DGPTR0",114,0)
 ;  OUTPUT:   name in the format proper format.
"RTN","DGPTR0",115,0)
 ;        A = <12 - characters of last name padded with blanks>
"RTN","DGPTR0",116,0)
 ;        B = <1  - first initial of fist name>
"RTN","DGPTR0",117,0)
 ;        C = <1  - first initial of middle name>
"RTN","DGPTR0",118,0)
 ;      returns :ABC <14 - characters>
"RTN","DGPTR0",119,0)
 N X,I
"RTN","DGPTR0",120,0)
 S DGNAM=DG10 D DGNAM
"RTN","DGPTR0",121,0)
 Q $E($P(DGNAM,",",1)_"           ",1,12)_$J($E($P(DGNAM,",",2),1),1)_$J($E($P($P(DGNAM,",",2)," ",2),1),1)
"RTN","DGPTR1")
0^30^B29920843^B28617663
"RTN","DGPTR1",1,0)
DGPTR1 ;ALB/MTC - PTF VERIFICATION ;01 MAR 91 @0800
"RTN","DGPTR1",2,0)
 ;;5.3;Registration;**58,247,338,342,423,415,565,678,696,729,781,664,817,850**;Aug 13, 1993;Build 171
"RTN","DGPTR1",3,0)
START ;
"RTN","DGPTR1",4,0)
 S T=$E(Y,2,3),T=$S(T=40&($E(Y,28)="P"):"P40",1:T)
"RTN","DGPTR1",5,0)
 S ERR=$P($T(@("T"_T)),";;",2,999),W=$P($T(@(T)),";;",2,999),F=31 D L
"RTN","DGPTR1",6,0)
 I T=70 S ERR=$P($T(T701),";;",2,999),W=$P($T(701),";;",2,999),F=72 D L
"RTN","DGPTR1",7,0)
 D @("D"_T) Q
"RTN","DGPTR1",8,0)
 K DGFILL
"RTN","DGPTR1",9,0)
 Q
"RTN","DGPTR1",10,0)
 ;
"RTN","DGPTR1",11,0)
L ;
"RTN","DGPTR1",12,0)
 N DGFOR S DGFOR=$S($$FORIEN^DGADDUTL($P(DG11,U,10))<1:0,1:1) ;set foreign country flag =1, else, set as domestic
"RTN","DGPTR1",13,0)
 F H=1:1 S DGO=$P(W,U,H) Q:'DGO  D
"RTN","DGPTR1",14,0)
 . F Z=1:1:$P(DGO,";",3) D
"RTN","DGPTR1",15,0)
 .. S DGL=DGLOGIC(+DGO)
"RTN","DGPTR1",16,0)
 .. S X=$E(Y,F)
"RTN","DGPTR1",17,0)
 .. D @("ERR:"_DGL) S F=F+1
"RTN","DGPTR1",18,0)
 Q
"RTN","DGPTR1",19,0)
 ;
"RTN","DGPTR1",20,0)
T10 ;;1:NAME^2:SOURCE OF ADM^3:TRANS FAC.^4:SOURCE OF PAY^5:POW^6:MARITAL ST^7:SEX^8:DOB^9:POS^10:VIETNAM^11:ION RADIATION^12:RESIDENCE^13:MEANS TEST^14:INCOME^15:MST^16:COMBAT VET^17:CV END DT^18:PROJ 112/SHAD^19:ERI^20:COUNTRY
"RTN","DGPTR1",21,0)
 ;
"RTN","DGPTR1",22,0)
T70 ;;1:DT OF DISP.^2:DISCH BD SEC^3:TYPE OF DIS^4:OUT TREAT^5:VA AUS^6:PL OF DIS^7:REC FAC^8:ASIH DAYS^9:NOT USED^10:C&P STAT^11:PDXLS^12:ONLY DX^13:PHY MPCR
"RTN","DGPTR1",23,0)
 ;T701 is part 2 of T70
"RTN","DGPTR1",24,0)
T701 ;;1:PHY SPEC^2:%SC^3:LEGION^4:SUICIDE^5:DRUG^6:AXIS-IV^7:AXIS-V^8:SC^9:EXP^10:MST^11:HNC^12:ETHNICITY^13:RACE^14:COMBAT VET^15:PROJ 112/SHAD
"RTN","DGPTR1",25,0)
 ;
"RTN","DGPTR1",26,0)
T50 ;;1:DT OF MVMT^2:LOSING BD SEC MPCR^3:LOSING BD SEC^4:LEAVE DAYS^5:PASS DAYS^6:SCI^7:DIAG^8:DOCTOR'S SSN^9:PHY MPCR^10:PHY SPEC^11:DISCHARGE STAT^^^^^16:LEGION^17:SUICIDE^18:DRUG^19:AXIS-IV^20:AXIS-V^21:SC^22:EXP^23:MST^24:HNC
"RTN","DGPTR1",27,0)
 ;
"RTN","DGPTR1",28,0)
T53 ;;1:DATE OF PHYSICAL MOVEMENT^2:LOSING PHYSICAL MPCR^3:LOSING PHYSICAL SPECIALTY^4:TR SPECIALTY MPCR^5:TR SPECIALTY^6:LEAVE DAYS^7:PASS DAYS^8:DOCTOR'S SSN (NOT USED)
"RTN","DGPTR1",29,0)
 ;
"RTN","DGPTR1",30,0)
T40 ;;1:DATE OF SURGERY^2:SURG SPEC.^3:CAT CHIEF SURGEON^4:CAT FIRST ASS^5:ANEST. TECH.^6:SOURCE OF PAY^7:OP CODE^8:DOCTOR'S SSN (NOT USED)^^^^^13:TRANSPLANT STATUS
"RTN","DGPTR1",31,0)
 ;
"RTN","DGPTR1",32,0)
TP40 ;;1:OP CODE
"RTN","DGPTR1",33,0)
 ;
"RTN","DGPTR1",34,0)
T60 ;;1:DATE OF PROCEDURE^2:LOSING BD SEC^3:DIALYSIS TYPE^4:NUMBER OF TREATMENTS^5:PROCEDURE CODE
"RTN","DGPTR1",35,0)
 ;
"RTN","DGPTR1",36,0)
LOGIC ;;X'?.N^X'?.A&(X'=" ")^X'=" "^X'?.N&(X'=" ")^X'?.A&(X'=" ")^0^X'?.N&(X'="X")^X'=" "&(X'="P")^X="E"^X="Y"^X=" "^X'="A"&(X'=" ")^(X'?.A)&(X'?.N)&(X'=" ")^(X'?.AN)&('$P(DG0,U,4))^((T1)&(X'=" "))!(('T1)&(X'?.AN)&('$P(DG0,U,4)))
"RTN","DGPTR1",37,0)
 ;;(X'?.AN)^'$D(DGFOR)&(X'?.N)^'$D(DGFOR)&X'?.N&(X'="X")
"RTN","DGPTR1",38,0)
 ;;END
"RTN","DGPTR1",39,0)
 ;
"RTN","DGPTR1",40,0)
 ; edit check# ; edit field ; # x check preformed ; display error name #
"RTN","DGPTR1",41,0)
10 ;;6;;12;1^2;1;1;1^5;1;1;1^1;2;1;2^2;2;1;2^4;3;3;3^6;;3;3^4;4;1;4^6;5;1;5^2;6;1;6^2;7;1;7^1;8;8;8^6;;1;9^11;9;1;9^4;10;1;10^4;10;1;11^17;11;5;12^18;11;5;12^2;12;1;13^6;;1;13^1;;6;14^2;;1;15^1;;1;16^4;;6;17^1;;1;18^5;;1;19^5;;3;20^3;;26
"RTN","DGPTR1",42,0)
 ;
"RTN","DGPTR1",43,0)
70 ;;1;1;10;1^13;2;2;2^1;3;1;3^4;4;1;4^4;5;1;5^6;;1;6^4;7;3;7^6;;3;7^4;8;3;8^6;9;1;9^1;10;1;10^9;11;1;11^11;11;2;11^6;;3;11^10;11;1;11^6;;1;12^15;;6;13
"RTN","DGPTR1",44,0)
 ;701 is part 2 of 70
"RTN","DGPTR1",45,0)
701 ;;15;;2;1^1;;3;2^4;;1;3^4;;1;4^12;;1;5^4;;3;5^4;;1;6^4;;4;7^4;;1;8^5;;3;9^5;;1;10^5;;1;11^13;12;2;12^13;13;12;13^5;;1;14^5;;1;15^3;;16
"RTN","DGPTR1",46,0)
 ;
"RTN","DGPTR1",47,0)
50 ;;1;1;10;1^1;;6;2^16;3;2;3^1;4;3;4^1;5;3;5^6;;1;6^11;7;3;7^6;;32;7^6;;9;8^14;;6;9^14;;2;10^6;;1;11^4;;1;16^4;;1;17^12;;1;18^4;;3;18^4;;1;19^4;;4;20^4;;1;21^5;;3;22^5;;1;23^5;;1;24
"RTN","DGPTR1",48,0)
 ;
"RTN","DGPTR1",49,0)
53 ;;1;;10;1^1;;6;2^13;;2;3^1;;6;4^13;;2;5^1;;3;6^1;;3;7^3;;9;8^3;;54;
"RTN","DGPTR1",50,0)
 ;
"RTN","DGPTR1",51,0)
40 ;;1;1;10;1^1;2;2;2^11;3;1;3^4;4;1;4^6;5;1;5^4;6;1;6^11;7;2;7^6;;3;7^3;7;2;7^6;;5;7^3;7;2;7^6;;5;7^3;7;2;7^6;;5;7^3;7;2;7^6;;5;7^3;7;2;7^3;;9;8^4;;1;13^3;;34;
"RTN","DGPTR1",52,0)
 ;
"RTN","DGPTR1",53,0)
P40 ;;8;;1;^3;;11;^11;1;2;1^6;;3;1^3;1;2;1^6;;5;1^3;;2;1^6;;5;1^3;;2;1^6;;5;1^3;;2;1^6;;5;1^3;;2;1^3;;48
"RTN","DGPTR1",54,0)
 ;
"RTN","DGPTR1",55,0)
60 ;;1;1;10;1^13;2;2;2^4;3;1;3^4;4;3;4^11;5;3;5^6;;32;5^3;;44
"RTN","DGPTR1",56,0)
 ;
"RTN","DGPTR1",57,0)
ERR ;
"RTN","DGPTR1",58,0)
 S DGERR=1
"RTN","DGPTR1",59,0)
 W !,T,$S(T["H":" ",1:$E(Y,4)),"  "
"RTN","DGPTR1",60,0)
 W:"45"[$E(T,1) $E(Y,31,32),"-",$E(Y,33,34),"-",$E(Y,35,36),"@",$E(Y,37,40)
"RTN","DGPTR1",61,0)
 W ?25,$P($P(ERR,U,$P(DGO,";",4)),":",2),?40,"COL.",F,"  VALUE: ",$S($E(Y,F)=" ":"BLANK",1:$E(Y,F))
"RTN","DGPTR1",62,0)
 S I=$S('$D(I):1,I>0:I,1:1),^(I)=$S($D(^UTILITY("DG",$J,T_$S(T["H":"",1:$E(Y,4)),I)):^(I),1:U) I $P(DGO,";",2),^(I)'[(U_$P(DGO,";",2)_U) S ^(I)=^(I)_$P(DGO,";",2)_U
"RTN","DGPTR1",63,0)
 Q
"RTN","DGPTR1",64,0)
 ;
"RTN","DGPTR1",65,0)
D10 ;
"RTN","DGPTR1",66,0)
 I $E(Y,66)="Z" S (F,H)=68,W="11;10;1;10" D L
"RTN","DGPTR1",67,0)
 Q
"RTN","DGPTR1",68,0)
 ;
"RTN","DGPTR1",69,0)
D40 Q
"RTN","DGPTR1",70,0)
DP40 Q
"RTN","DGPTR1",71,0)
D70 I "467"'[$E(Y,43) S F=44,W="4;4;1;4^1;5;1;5^11;6;1;6" D L
"RTN","DGPTR1",72,0)
 Q
"RTN","DGPTR1",73,0)
D50 I "A0"[$P(DG0,U,5)!("A4"[$P(DG0,U,5))!('$D(^DGPT(J,70))) S W="11;6;1;6",F=55 D L
"RTN","DGPTR1",74,0)
 I $D(^DGPT(J,70)),$S(T1:1,1:+^(70)>2871000) S W="11;6;1;6",F=55 D L
"RTN","DGPTR1",75,0)
 I $E(Y,4)=1 S W="9;7;1;7",F=56 D L
"RTN","DGPTR1",76,0)
 I I=1,'T1 S W="1;11;1;11",F=108 D L
"RTN","DGPTR1",77,0)
 Q
"RTN","DGPTR1",78,0)
D53 Q
"RTN","DGPTR1",79,0)
D60 I $E(Y,43) S F=44,W="1;4;3;4" D L
"RTN","DGPTR1",80,0)
 Q
"RTN","DGPTR1",81,0)
HEAD S ERR="1:SSN^2:ADMISSION DATE^3:FACILITY #",W="8;1;1;1^1;1;9;1^1;2;10;2^1;3;3;3^6;;3;3",F=5,T="HEADER" D LOG
"RTN","DGPTR1",82,0)
 D L
"RTN","DGPTR1",83,0)
 Q
"RTN","DGPTR1",84,0)
LOG ;place DGLOGIC in array in order to add more logic tests ;DG*5.3*664
"RTN","DGPTR1",85,0)
 K DGLOGIC ;S DGLOGIC=$P($T(LOGIC),";;",2)
"RTN","DGPTR1",86,0)
 N LOGX,LOGI,LOGCNT,II,XX
"RTN","DGPTR1",87,0)
 S LOGI=0,LOGCNT=1
"RTN","DGPTR1",88,0)
 F LOGI=0:1 S LOGX=$P($T(LOGIC+LOGI),";;",2) Q:LOGX="END"  F II=1:1 S XX=$P(LOGX,U,II) Q:XX=""  S DGLOGIC(LOGCNT)=XX,LOGCNT=LOGCNT+1
"RTN","DGPTR1",89,0)
 Q
"RTN","DGPTR1",90,0)
CEN S T=70,ERR=$P($T(T70),";;",2),W=$P($T(70),";;",2,999),W="13;9;1;9"_$P(W,"13;9;1;9",2,999),F=56 D L
"RTN","DGPTR1",91,0)
 S ERR=$P($T(T701),";;",2),W=$P($T(701),";;",2,999),F=72 D L
"RTN","DGPTR1",92,0)
 Q
"RTN","DGPTR2")
0^60^B22938579^B21647835
"RTN","DGPTR2",1,0)
DGPTR2 ;ALB/JDS/MJK/MTC/ADL/TJ - ALB/BOK  PTF TRANSMISSION ;6/6/05 11:48am
"RTN","DGPTR2",2,0)
 ;;5.3;Registration;**183,338,423,510,636,729,850**;Aug 13, 1993;Build 171
"RTN","DGPTR2",3,0)
 ;;ADL;Update for CSV Project;;Mar 27,2003
"RTN","DGPTR2",4,0)
501 ; -- setup 501 transactions
"RTN","DGPTR2",5,0)
 ; DG*636
"RTN","DGPTR2",6,0)
 N DGPTMVDT
"RTN","DGPTR2",7,0)
 I $D(^DGPT(J,70))
"RTN","DGPTR2",8,0)
 K DGCMVT I T2'=9999999 S DGCMVT=$O(^DGPT(J,"M","AM",+$P(T2,".")_".2359")),DGCMVT=$S('DGCMVT:1,$O(^(DGCMVT,0)):$O(^(0)),1:1)
"RTN","DGPTR2",9,0)
 F I=0:0 S I=$O(^DGPT(J,"M",I)) G 535:I'>0 I $D(^(I,0)) D
"RTN","DGPTR2",10,0)
 . S DGM=^(0),DGSC=$P(DGM,U,18),DGAO=$P(DGM,U,26),DGIR=$P(DGM,U,27),DGEC=$P(DGM,U,28),DGMST=$P(DGM,U,29),DGHNC=$P(DGM,U,30),DGTD=$P(DGM,U,10),DGPTMVDT=$P(DGM,U,10)
"RTN","DGPTR2",11,0)
 . S:$D(DGCMVT) DGTD=$S(I=DGCMVT:$P(T2,".")_".2359",1:DGTD)
"RTN","DGPTR2",12,0)
 . I $P(DGM,U,17)'="n",DGTD,DGTD'<T1,DGTD'>T2 D MOV
"RTN","DGPTR2",13,0)
MOV S DGCDR=$P(DGM,U,16),DGM=$P(DGM,U,1,9)_U_$P(DGM,U,11,15),L=1 F Z=5:1:14 S:'$P(DGM,U,Z) DGM=$P(DGM,U,1,Z-1)_U_$P(DGM,U,Z+1,99) S:'$P(DGM,U,Z) Z=Z-1 S L=L+1 Q:L=10
"RTN","DGPTR2",14,0)
 S Y=$S(T1:"C",1:"N")_"501"_DGHEAD,X=$P(DGTD,".")_"       ",Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)_$E($P(DGTD,".",2)_"0000",1,4)
"RTN","DGPTR2",15,0)
 S Z=DGCDR D CDR
"RTN","DGPTR2",16,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTR2",17,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTR2",18,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(DGM,U,2),.DGARRY)
"RTN","DGPTR2",19,0)
 S $P(DGM,U,2)=$G(DGARRY(7))
"RTN","DGPTR2",20,0)
 S L=2,X=DGM,Z=2 D ENTER0
"RTN","DGPTR2",21,0)
 ; convert pass, leave days >999 to 999
"RTN","DGPTR2",22,0)
 S L=3 F Z=3,4 S:$P(X,U,Z)>999 $P(X,U,Z)=999 D ENTER0
"RTN","DGPTR2",23,0)
 S L=1,X=DG57,Z=4 D ENTER S:I=1 DG502=Y
"RTN","DGPTR2",24,0)
 N EFFDATE,IMPDATE,DGPTDAT D EFFDATE^DGPTIC10(J)
"RTN","DGPTR2",25,0)
 F Z=5:1:9 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DGM,U,Z),EFFDATE,"I") D
"RTN","DGPTR2",26,0)
 . S F=$S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$P(DGPTTMP,U,2),1:"   ."),F=$P(F,".",1)_$E($P(F,".",2)_"    ",1,3),F=F_$E("      ",1,7-$L(F)),Y=Y_F
"RTN","DGPTR2",27,0)
 K DGPTEDT
"RTN","DGPTR2",28,0)
 S Y=Y_"         "
"RTN","DGPTR2",29,0)
 S X=""
"RTN","DGPTR2",30,0)
 I 'T1 S Z=$S(I=1:+$O(^DGPT(J,535,"ADC",0)),1:+$O(^DGPT(J,535,"AM",DGTD-.0000001))) I $D(^DGPT(J,535,+$O(^(Z,0)),0)) S X=^(0)
"RTN","DGPTR2",31,0)
 I T1 S Z=+$O(^DGPT(J,535,"AM",DGTD-.0000001)) S:'Z Z=+$O(^DGPT(J,535,"ADC",0)) I $D(^DGPT(J,535,+$O(^(Z,0)),0)) S X=^(0)
"RTN","DGPTR2",32,0)
 S Z=$P(X,U,16) D CDR
"RTN","DGPTR2",33,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTR2",34,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTR2",35,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(X,U,2),.DGARRY)
"RTN","DGPTR2",36,0)
 S $P(X,U,2)=$G(DGARRY(7))
"RTN","DGPTR2",37,0)
 S L=2,Z=2 D ENTER0
"RTN","DGPTR2",38,0)
 ; bed occupant
"RTN","DGPTR2",39,0)
 I T1 S Y=Y_$S(I=1:$E($P(DG70,U,14)_" "),$P(+DGTD,".")=$P(T2,"."):5,1:1)
"RTN","DGPTR2",40,0)
 I 'T1 S Y=Y_$S(I=1:$E($P(DG70,U,14)_" "),1:" ")
"RTN","DGPTR2",41,0)
 ;-- additional ptf questions
"RTN","DGPTR2",42,0)
 S DGAUX=$S($D(^DGPT(J,"M",I,300)):^(300),1:"")
"RTN","DGPTR2",43,0)
 D ADDQUES
"RTN","DGPTR2",44,0)
 ;-- sc related care
"RTN","DGPTR2",45,0)
 S Y=Y_$E(DGSC_" ")
"RTN","DGPTR2",46,0)
 ;-- ao related care
"RTN","DGPTR2",47,0)
 S Y=Y_$E(DGAO_" ")
"RTN","DGPTR2",48,0)
 ;-- ir related care
"RTN","DGPTR2",49,0)
 S Y=Y_$E(DGIR_" ")
"RTN","DGPTR2",50,0)
 ;-- ec related care
"RTN","DGPTR2",51,0)
 S Y=Y_$E(DGEC_" ")
"RTN","DGPTR2",52,0)
 ;-- mst related care
"RTN","DGPTR2",53,0)
 S Y=Y_$E(DGMST_" ")
"RTN","DGPTR2",54,0)
 ;-- Head/Neck CA related care
"RTN","DGPTR2",55,0)
 S Y=Y_$E(DGHNC_" ")
"RTN","DGPTR2",56,0)
 K DGAUX,DGDRUG,DGSC,DGAO,DGIR,DGEC,DGMST,DGHNC
"RTN","DGPTR2",57,0)
 D FILL^DGPTR2,SAVE
"RTN","DGPTR2",58,0)
 Q
"RTN","DGPTR2",59,0)
535 ; -- do 535's
"RTN","DGPTR2",60,0)
 D 535^DGPTR3
"RTN","DGPTR2",61,0)
 ;
"RTN","DGPTR2",62,0)
PROC ; -- setup 601 transactions
"RTN","DGPTR2",63,0)
 K ^UTILITY($J,"PROC") S I=0
"RTN","DGPTR2",64,0)
601 S I=$O(^DGPT(J,"P",I)) G 701:I'>0 S (X,DGPROC)=^(I,0) G 601:'DGPROC
"RTN","DGPTR2",65,0)
 G 601:DGPROC<T1!(DGPROC>T2) S DGPROCD=+^DGPT(J,"P",I,0),^UTILITY($J,"PROC",DGPROCD)=$S($D(^UTILITY($J,"PROC",DGPROCD)):^(DGPROCD),1:0)+1
"RTN","DGPTR2",66,0)
 I ^UTILITY($J,"PROC",DGPROCD)>1 W !,"More than one procedure record on same date/time" S DGERR=1 Q
"RTN","DGPTR2",67,0)
 S Y=$S('T1:"N",1:"C")_"60"_^(DGPROCD)_DGHEAD_$E(DGPROCD,4,7)_$E(DGPROCD,2,3)_$E($P(+X,".",2)_"0000",1,4)
"RTN","DGPTR2",68,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTR2",69,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTR2",70,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(X,U,2),.DGARRY)
"RTN","DGPTR2",71,0)
 S $P(X,U,2)=$G(DGARRY(7))
"RTN","DGPTR2",72,0)
 S L=2,Z=2 D ENTER0
"RTN","DGPTR2",73,0)
 S L=1,Z=3 S $P(X,U,Z)="" D ENTER ;null dialysis type. DG729
"RTN","DGPTR2",74,0)
 S L=3,Z=4 D ENTER0
"RTN","DGPTR2",75,0)
 N EFFDATE,IMPDATE,DGPTDAT D EFFDATE^DGPTIC10(J)
"RTN","DGPTR2",76,0)
 S L=1 F K=5:1:9 S:'$P(DGPROC,U,K) DGPROC=$P(DGPROC,U,1,K-1)_U_$P(DGPROC,U,K+1,99),K=K-1 S L=L+1 Q:L=5
"RTN","DGPTR2",77,0)
 F K=5:1:9 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+$P(DGPROC,U,K),EFFDATE,"I") D
"RTN","DGPTR2",78,0)
 . S Y=Y_$S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$J($P($P(DGPTTMP,U,2),".",1),2)_$E($P($P(DGPTTMP,U,2),".",2)_"   ",1,3),1:"     ")_"  "
"RTN","DGPTR2",79,0)
 K DGPTEDT
"RTN","DGPTR2",80,0)
 D FILL,SAVE G 601
"RTN","DGPTR2",81,0)
 Q
"RTN","DGPTR2",82,0)
 ;
"RTN","DGPTR2",83,0)
701 ; -- setup 701 transaction
"RTN","DGPTR2",84,0)
 D 701^DGPTR4 Q
"RTN","DGPTR2",85,0)
 ;
"RTN","DGPTR2",86,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTR2",87,0)
 Q
"RTN","DGPTR2",88,0)
 ;
"RTN","DGPTR2",89,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("00000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTR2",90,0)
 Q
"RTN","DGPTR2",91,0)
 ;
"RTN","DGPTR2",92,0)
SAVE D START^DGPTR1 S:'DGERR ^XMB(3.9,DGXMZ,2,DGCNT,0)=Y,DGCNT=DGCNT+1
"RTN","DGPTR2",93,0)
 I DGERR'>0 S DGACNT=DGACNT+1,^TMP("AEDIT",$J,$E(Y,1,4),DGACNT)=Y
"RTN","DGPTR2",94,0)
Q Q
"RTN","DGPTR2",95,0)
 ;
"RTN","DGPTR2",96,0)
FILL F K=$L(Y):1:124 S Y=Y_" "
"RTN","DGPTR2",97,0)
 Q
"RTN","DGPTR2",98,0)
 ;
"RTN","DGPTR2",99,0)
CDR S Y=Y_$E($P(Z,".")_"0000",1,4)_$E($P(Z,".",2)_"00",1,2)
"RTN","DGPTR2",100,0)
 Q
"RTN","DGPTR2",101,0)
ADDQUES ;-- additional PTF questions load records for trans 501/701
"RTN","DGPTR2",102,0)
 N DGADDQ
"RTN","DGPTR2",103,0)
 F DGADDQ=2,3,4 D  ;null results if discharge>inactive date. DG/729
"RTN","DGPTR2",104,0)
 . I +$P($G(^DIC(45.88,DGADDQ,0)),U,3) S $P(DGAUX,U,DGADDQ)=$S((+$G(^DGPT(J,70))<$P(^DIC(45.88,DGADDQ,0),U,3)):$P(DGAUX,U,DGADDQ),1:"")
"RTN","DGPTR2",105,0)
 S DGDRUG=$S($D(^DIC(45.61,+$P(DGAUX,U,4),0)):$P(^(0),U,2),1:"    ")
"RTN","DGPTR2",106,0)
 S Y=Y_$E($P(DGAUX,U,3)_" ")_$E($P(DGAUX,U,2)_" ")_$J($P(DGDRUG,U),4)
"RTN","DGPTR2",107,0)
 S Y=Y_$E($P(DGAUX,U,5)_" ")
"RTN","DGPTR2",108,0)
 S DGT=0,X=$P(DGAUX,U,6) I X]"" S DGT=1,Z=1,L=2 D ENTER0
"RTN","DGPTR2",109,0)
 I 'DGT S Y=Y_"  "
"RTN","DGPTR2",110,0)
 S DGT=0,X=$P(DGAUX,U,7) I X]"" S DGT=1,Z=1,L=2 D ENTER0
"RTN","DGPTR2",111,0)
 I 'DGT S Y=Y_"  "
"RTN","DGPTR2",112,0)
 Q
"RTN","DGPTR4")
0^61^B20498105^B20521487
"RTN","DGPTR4",1,0)
DGPTR4 ;ALB/JDS/MJK/MTC/ADL/TJ - ALB/BOK  PTF TRANSMISSION ;11 JUL 05 @0800
"RTN","DGPTR4",2,0)
 ;;5.3;Registration;**338,423,415,510,565,645,729,664,850**;Aug 13, 1993;Build 171
"RTN","DGPTR4",3,0)
701 ; -- setup 701 transaction
"RTN","DGPTR4",4,0)
 S Y=$S(T1:"C",1:"N")_"701"_DGHEAD,DGDDX=$P(+DG70,".")_"       ",Y=Y_$E(DGDDX,4,5)_$E(DGDDX,6,7)_$E(DGDDX,2,3)_$E($P(+DG70,".",2)_"0000",1,4)
"RTN","DGPTR4",5,0)
 S X=DG70
"RTN","DGPTR4",6,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTR4",7,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTR4",8,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(X,U,2),.DGARRY)
"RTN","DGPTR4",9,0)
 S $P(X,U,2)=$G(DGARRY(7))
"RTN","DGPTR4",10,0)
 S (L,Z)=2 D ENTER0 K DGDDX
"RTN","DGPTR4",11,0)
 S X=DG70 I "467"[($P(X,U,3)\1) S Y=Y_$P(X,U,3)_"         " G J
"RTN","DGPTR4",12,0)
 S L=1 F Z=3:1:5 D ENTER
"RTN","DGPTR4",13,0)
 S Y=Y_$S($D(^DIC(45.6,+$P(X,U,6),0)):$P(^(0),U,2),1:" "),L=3,Z=12 D ENTER S Y=Y_$E($P(X,U,13)_"   ",1,3)
"RTN","DGPTR4",14,0)
J S L=3,Z=8 D ENTER0
"RTN","DGPTR4",15,0)
 S Y=Y_"X"_$J($P(DG70,U,9),1)
"RTN","DGPTR4",16,0)
 N EFFDATE,IMPDATE,DGPTDAT D EFFDATE^DGPTIC10(J)
"RTN","DGPTR4",17,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DG70,U,10),EFFDATE,"I")
"RTN","DGPTR4",18,0)
 S DGXLS=$S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$P(DGPTTMP,U,2),1:""),Y=Y_$S(DGXLS[".":$J($P(DGXLS,".",1),3)_$E($P(DGXLS,".",2)_"   ",1,3),1:$J(DGXLS,6))_" "
"RTN","DGPTR4",19,0)
 S L=$P(DG70,U,16,24)_U_DG71 S DG702=""
"RTN","DGPTR4",20,0)
 F K=1:1:12 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(L,U,K),EFFDATE,"I") I +DGPTTMP>0&($P(DGPTTMP,U,10)) S DG702=DG702_$P(DGPTTMP,U,2)_U
"RTN","DGPTR4",21,0)
 S Y=Y_$S(DG702']"":"X",1:" ")
"RTN","DGPTR4",22,0)
 ; -- get phy cdr @ d/c
"RTN","DGPTR4",23,0)
 S X="",Z=+$O(^DGPT(J,535,"AM",DG70-.0000001)) I $D(^DGPT(J,535,+$O(^(Z,0)),0)) S X=^(0)
"RTN","DGPTR4",24,0)
 ; -- set phy cdr
"RTN","DGPTR4",25,0)
 S Z=$P(X,U,16) D CDR
"RTN","DGPTR4",26,0)
 ; -- set phy spec
"RTN","DGPTR4",27,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTR4",28,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTR4",29,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(X,U,2),.DGARRY)
"RTN","DGPTR4",30,0)
 S $P(X,U,2)=$G(DGARRY(7))
"RTN","DGPTR4",31,0)
 S L=2,Z=2 D ENTER0
"RTN","DGPTR4",32,0)
 S X=$S($P(DG3,U)="Y":$$RTEN($P(DG3,U,2)),1:"0"),L=3,Z=1 D ENTER0
"RTN","DGPTR4",33,0)
 ;-- additional ptf questions
"RTN","DGPTR4",34,0)
 S DGAUX=$S($D(^DGPT(J,300)):^(300),1:"")
"RTN","DGPTR4",35,0)
 D ADDQUES
"RTN","DGPTR4",36,0)
 K DGAUX,DGDRUG
"RTN","DGPTR4",37,0)
 ;-- sc,ao,ir,ec questions
"RTN","DGPTR4",38,0)
 S X=DG70
"RTN","DGPTR4",39,0)
 ;-- sc
"RTN","DGPTR4",40,0)
 S Y=Y_$E($P(DG70,U,25)_" ")
"RTN","DGPTR4",41,0)
 ;-- ao
"RTN","DGPTR4",42,0)
 S Y=Y_$E($P(DG70,U,26)_" ")
"RTN","DGPTR4",43,0)
 ;-- ir
"RTN","DGPTR4",44,0)
 S Y=Y_$E($P(DG70,U,27)_" ")
"RTN","DGPTR4",45,0)
 ;-- SW Asia conditions/ec
"RTN","DGPTR4",46,0)
 S Y=Y_$E($P(DG70,U,28)_" ")
"RTN","DGPTR4",47,0)
 ;-- mst
"RTN","DGPTR4",48,0)
 S Y=Y_$E($P(DG70,U,29)_" ")
"RTN","DGPTR4",49,0)
 ;-- Head/Neck CA
"RTN","DGPTR4",50,0)
 S Y=Y_$E($P(DG70,U,30)_" ")
"RTN","DGPTR4",51,0)
 D ETHNIC
"RTN","DGPTR4",52,0)
 D RACE
"RTN","DGPTR4",53,0)
 ;Combat vet
"RTN","DGPTR4",54,0)
 S Y=Y_$E($P(DG70,U,31)_" ")
"RTN","DGPTR4",55,0)
 ;Project 112/SHAD
"RTN","DGPTR4",56,0)
 S Y=Y_$E($P(DG70,U,32)_" ")
"RTN","DGPTR4",57,0)
 D FILL
"RTN","DGPTR4",58,0)
 I T1 F K=41:1:55,65:1:73 S Y=$E(Y,1,K-1)_" "_$E(Y,K+1,125)
"RTN","DGPTR4",59,0)
 I T1 D CEN^DGPTR1 S:'DGERR ^XMB(3.9,DGXMZ,2,DGCNT,0)=Y,DGCNT=DGCNT+1 Q
"RTN","DGPTR4",60,0)
 I 'T1 D SAVE
"RTN","DGPTR4",61,0)
702 ;
"RTN","DGPTR4",62,0)
 Q:DG702']""
"RTN","DGPTR4",63,0)
 S Y="N702"_$E(Y,5,40)
"RTN","DGPTR4",64,0)
 F K=1:1:12 S F=$P(DG702,U,K),F=$P(F,".",1)_$E($P(F,".",2)_"   ",1,3),F=F_$E("      ",1,7-$L(F)),Y=Y_F
"RTN","DGPTR4",65,0)
 D FILL
"RTN","DGPTR4",66,0)
 I 'DGERR S ^XMB(3.9,DGXMZ,2,DGCNT,0)=Y,DGCNT=DGCNT+1
"RTN","DGPTR4",67,0)
 I DGERR'>0 S DGACNT=DGACNT+1,^TMP("AEDIT",$J,$E(Y,1,4),DGACNT)=Y
"RTN","DGPTR4",68,0)
 S DG702=$P(DG702,U,6,9)
"RTN","DGPTR4",69,0)
 Q
"RTN","DGPTR4",70,0)
 ;
"RTN","DGPTR4",71,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTR4",72,0)
 Q
"RTN","DGPTR4",73,0)
 ;
"RTN","DGPTR4",74,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("00000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTR4",75,0)
 Q
"RTN","DGPTR4",76,0)
 ;
"RTN","DGPTR4",77,0)
SAVE D START^DGPTR1 S:'DGERR ^XMB(3.9,DGXMZ,2,DGCNT,0)=Y,DGCNT=DGCNT+1
"RTN","DGPTR4",78,0)
 I DGERR'>0 S DGACNT=DGACNT+1,^TMP("AEDIT",$J,$E(Y,1,4),DGACNT)=Y
"RTN","DGPTR4",79,0)
Q Q
"RTN","DGPTR4",80,0)
 ;
"RTN","DGPTR4",81,0)
FILL F K=$L(Y):1:124 S Y=Y_" "
"RTN","DGPTR4",82,0)
 Q
"RTN","DGPTR4",83,0)
 ;
"RTN","DGPTR4",84,0)
CDR S Y=Y_$E($P(Z,".")_"0000",1,4)_$E($P(Z,".",2)_"00",1,2)
"RTN","DGPTR4",85,0)
 Q
"RTN","DGPTR4",86,0)
ADDQUES ;-- additional PTF questions load records for trans 501/701
"RTN","DGPTR4",87,0)
 N DGADDQ
"RTN","DGPTR4",88,0)
 F DGADDQ=2,3,4 D  ;null results if discharge>inactive date. DG/729
"RTN","DGPTR4",89,0)
 . I +$P($G(^DIC(45.88,DGADDQ,0)),U,3) S $P(DGAUX,U,DGADDQ)=$S((+$G(^DGPT(J,70))<$P(^DIC(45.88,DGADDQ,0),U,3)):$P(DGAUX,U,DGADDQ),1:"")
"RTN","DGPTR4",90,0)
 S DGDRUG=$S($D(^DIC(45.61,+$P(DGAUX,U,4),0)):$P(^(0),U,2),1:"    ")
"RTN","DGPTR4",91,0)
 S Y=Y_$E($P(DGAUX,U,3)_" ")_$E($P(DGAUX,U,2)_" ")_$J($P(DGDRUG,U),4)
"RTN","DGPTR4",92,0)
 S Y=Y_$E($P(DGAUX,U,5)_" ")
"RTN","DGPTR4",93,0)
 S DGT=0,X=$P(DGAUX,U,6) I X]"" S DGT=1,Z=1,L=2 D ENTER0
"RTN","DGPTR4",94,0)
 I 'DGT S Y=Y_"  "
"RTN","DGPTR4",95,0)
 S DGT=0,X=$P(DGAUX,U,7) I X]"" S DGT=1,Z=1,L=2 D ENTER0
"RTN","DGPTR4",96,0)
 I 'DGT S Y=Y_"  "
"RTN","DGPTR4",97,0)
 Q
"RTN","DGPTR4",98,0)
RTEN(X) ; This function will round X to the nearest multiple of ten.
"RTN","DGPTR4",99,0)
 ; 0-4 ->DOWN; 5-9->UP
"RTN","DGPTR4",100,0)
 Q (X\10)*10+$S(X#10>4:10,1:0)
"RTN","DGPTR4",101,0)
ETHNIC ;-- Ethnicity (use first active value)
"RTN","DGPTR4",102,0)
 N NODE,NUM,ETHNIC,I,X
"RTN","DGPTR4",103,0)
 S ETHNIC=""
"RTN","DGPTR4",104,0)
 S I=0
"RTN","DGPTR4",105,0)
 S NUM=1
"RTN","DGPTR4",106,0)
 F  S I=+$O(DG06(I)) Q:'I  D  Q:NUM>1
"RTN","DGPTR4",107,0)
 .S NODE=$G(DG06(I,0))
"RTN","DGPTR4",108,0)
 .Q:('NODE)!('$D(^DIC(10.2,+NODE,0)))
"RTN","DGPTR4",109,0)
 .Q:$$INACTIVE^DGUTL4(+NODE)
"RTN","DGPTR4",110,0)
 .S X=$$PTR2CODE^DGUTL4(+NODE,2,4)
"RTN","DGPTR4",111,0)
 .S ETHNIC=$S(X="":" ",1:X)
"RTN","DGPTR4",112,0)
 .S X=$$PTR2CODE^DGUTL4(+$P(NODE,"^",2),3,4)
"RTN","DGPTR4",113,0)
 .S ETHNIC=ETHNIC_$S(X="":" ",1:X)
"RTN","DGPTR4",114,0)
 .S NUM=NUM+1
"RTN","DGPTR4",115,0)
 S Y=Y_$S(ETHNIC="":"  ",1:ETHNIC)
"RTN","DGPTR4",116,0)
 Q
"RTN","DGPTR4",117,0)
RACE ;-- Race (use first 6 active values)
"RTN","DGPTR4",118,0)
 N NODE,NUM,RACE,I,X
"RTN","DGPTR4",119,0)
 S RACE=""
"RTN","DGPTR4",120,0)
 S I=0
"RTN","DGPTR4",121,0)
 S NUM=1
"RTN","DGPTR4",122,0)
 F  S I=+$O(DG02(I)) Q:'I  D  Q:NUM>6
"RTN","DGPTR4",123,0)
 .S NODE=$G(DG02(I,0))
"RTN","DGPTR4",124,0)
 .Q:('NODE)!('$D(^DIC(10,+NODE,0)))
"RTN","DGPTR4",125,0)
 .Q:$$INACTIVE^DGUTL4(+NODE)
"RTN","DGPTR4",126,0)
 .S X=$$PTR2CODE^DGUTL4(+NODE,1,4)
"RTN","DGPTR4",127,0)
 .S RACE=RACE_$S(X="":" ",1:X)
"RTN","DGPTR4",128,0)
 .S X=$$PTR2CODE^DGUTL4(+$P(NODE,"^",2),3,4)
"RTN","DGPTR4",129,0)
 .S RACE=RACE_$S(X="":" ",1:X)
"RTN","DGPTR4",130,0)
 .S NUM=NUM+1
"RTN","DGPTR4",131,0)
 S X="" S $P(X," ",12)=""
"RTN","DGPTR4",132,0)
 S RACE=$S(RACE="":"  ",1:RACE)_X
"RTN","DGPTR4",133,0)
 S Y=Y_$E(RACE,1,12)
"RTN","DGPTR4",134,0)
 Q
"RTN","DGPTRI0")
0^53^B26605957^n/a
"RTN","DGPTRI0",1,0)
DGPTRI0 ;MJK/JS/ADL/TJ - PTF TRANSMISSION ;9/26/2011 6:44pm
"RTN","DGPTRI0",2,0)
 ;;5.3;Registration;**850**;Aug 13, 1993;Build 171
"RTN","DGPTRI0",3,0)
 ;;ADL;Update for CSV Project;;Mar 27, 2003
"RTN","DGPTRI0",4,0)
 ; -- setup control data
"RTN","DGPTRI0",5,0)
 ; ssn
"RTN","DGPTRI0",6,0)
 S X=$P(DG10,U,9),Y=$S($E(X,10)="P":"P",1:" ")_$E(X_"         ",1,9)
"RTN","DGPTRI0",7,0)
 ; -- adm d/t
"RTN","DGPTRI0",8,0)
 S X=$P($P(DG0,U,2),"."),Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)_$E($P($P(DG0,U,2),".",2)_"0000",1,4)
"RTN","DGPTRI0",9,0)
 ; -- facility #
"RTN","DGPTRI0",10,0)
 S L=3,X=DG0,Z=3 D ENTER S Y=Y_$E($P(X,U,5)_"   ",1,3)
"RTN","DGPTRI0",11,0)
 S DGHEAD=Y,Y="    "_Y D HEAD^DGPTRI1
"RTN","DGPTRI0",12,0)
 ;
"RTN","DGPTRI0",13,0)
101 ; -- setup 101 transmission
"RTN","DGPTRI0",14,0)
 ; control data and name
"RTN","DGPTRI0",15,0)
 S Y=$S(T1:"C",1:"N")_"101"_DGHEAD S Y=Y_$$PTFNMFT($P(DG10,U))
"RTN","DGPTRI0",16,0)
 ; source of admission
"RTN","DGPTRI0",17,0)
 S Y=Y_$S($D(^DIC(45.1,+DG101,0)):$J($P(^(0),U,1),2),1:"  ")
"RTN","DGPTRI0",18,0)
 ; xfring fac and suffix
"RTN","DGPTRI0",19,0)
 S L=3,X=DG101,Z=5 D ENTER S Y=Y_$E($P(X,U,6)_"   ",1,3)
"RTN","DGPTRI0",20,0)
 ; source of payment
"RTN","DGPTRI0",21,0)
 S Y=Y_$S("A0"[$P(DG0,U,5):" ",1:$J($P(DG101,U,3),1))
"RTN","DGPTRI0",22,0)
 ;POW Location
"RTN","DGPTRI0",23,0)
 S Y=Y_$S($P(DG52,U,5)="N":1,$P(DG52,U,5)'="Y":3,$P(DG52,U,6)>0&($P(DG52,U,6)<7):3+$P(DG52,U,6),$P(DG52,U,6)>6&($P(DG52,U,6)<9):$C($P(DG52,U,6)+58),1:" ")
"RTN","DGPTRI0",24,0)
 ;marital status, sex
"RTN","DGPTRI0",25,0)
 S Y=Y_$S($D(^DIC(11,+$P(DG10,U,5),0)):$E(^(0),1),1:" ")_$J($P(DG10,U,2),1)
"RTN","DGPTRI0",26,0)
 ;  date of birth
"RTN","DGPTRI0",27,0)
 S DGDOB=$P(DG10,U,3)\1,Y=Y_$E(DGDOB,4,5)_$E(DGDOB,6,7)_(1700+$E(DGDOB,1,3))
"RTN","DGPTRI0",28,0)
 ; period of service
"RTN","DGPTRI0",29,0)
 S DGPOS=$S($D(^DIC(21,+$P(DG32,U,3),0)):$P(^(0),U,3),1:"")
"RTN","DGPTRI0",30,0)
 I $D(^DGPM(+$O(^DGPM("APTF",J,0)),"ODS")),+^("ODS") S DGPOS=6
"RTN","DGPTRI0",31,0)
 ;-- if non vet admitting eligibility make POS 9
"RTN","DGPTRI0",32,0)
 S DGPOS=$$CKPOS^DGPTUTL($P($G(^DGPT(PTF,101)),U,8),DGPOS)
"RTN","DGPTRI0",33,0)
 S X=DGPOS,Z=1,L=2 D ENTER
"RTN","DGPTRI0",34,0)
 ; agent orange
"RTN","DGPTRI0",35,0)
 S G=" " S DGAO=$P(DG321,U,2) S:DGPOS=7 G=$S($P(DG321,U)'="Y":1,DGAO="N":2,DGAO="Y":3,1:4) S:(DGAO="Y")&($P(DG321,U,13)="K") G=5
"RTN","DGPTRI0",36,0)
 ; rad exposure
"RTN","DGPTRI0",37,0)
 S E=" " I "^0^2^4^5^7^8^Z^"[(U_DGPOS_U) S DGNT=$P(DG321,U,12),E=$S($P(DG321,U,3)'="Y":1,DGNT="N":2,DGNT="T":3,DGNT="B":4,1:" ")
"RTN","DGPTRI0",38,0)
 S Y=Y_G_E K DGPOS,G,E
"RTN","DGPTRI0",39,0)
 ; state code
"RTN","DGPTRI0",40,0)
 S X=$S($D(^DIC(5,+$P(DG11,U,5),0)):^(0),1:""),L=2,Z=3 D ENTER0
"RTN","DGPTRI0",41,0)
 ; county code
"RTN","DGPTRI0",42,0)
 S X=$S($D(^DIC(5,+$P(DG11,U,5),1,+$P(DG11,U,7),0)):^(0),1:""),L=3,Z=3 D ENTER0
"RTN","DGPTRI0",43,0)
 ; zip code
"RTN","DGPTRI0",44,0)
 S X=DG11,Z=6,L=5 D ENTER
"RTN","DGPTRI0",45,0)
 ; means test
"RTN","DGPTRI0",46,0)
 S Y=Y_$S($P(DG70,U,26)="Y":"AS",1:$E($P(DG0,U,10)_"  ",1,2))
"RTN","DGPTRI0",47,0)
 ; income
"RTN","DGPTRI0",48,0)
 I $L($P(DG101,U,7))>6 S Y=Y_"999999"
"RTN","DGPTRI0",49,0)
 E  S X=DG101,Z=7,L=6 D ENTER0
"RTN","DGPTRI0",50,0)
 ;MST
"RTN","DGPTRI0",51,0)
 S X=$$GETSTAT^DGMSTAPI(+DG0) S Y=Y_$S(X<0:"U",1:$P(X,"^",2))
"RTN","DGPTRI0",52,0)
 ;Combat Vet
"RTN","DGPTRI0",53,0)
 S X=$$CVEDT^DGCV(+DG0,$P(DG0,"^",2)) S Y=Y_$S((+X)>0:1,1:0)
"RTN","DGPTRI0",54,0)
 S X=$P(X,"^",2)_"       " S Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)
"RTN","DGPTRI0",55,0)
 ;Project 112/SHAD
"RTN","DGPTRI0",56,0)
 S X=$$SHAD^SDCO22(+DG0) S Y=Y_$S((+X)>0:1,1:0)
"RTN","DGPTRI0",57,0)
 ;Emergency Response Indicator
"RTN","DGPTRI0",58,0)
 S X=$$EMGRES^DGUTL(+DG0) S Y=Y_$S("^K^"[(U_X_U):X,1:" ")
"RTN","DGPTRI0",59,0)
 ;Country Code
"RTN","DGPTRI0",60,0)
 S X=$$GET1^DIQ(779.004,$P(DG11,U,10)_",",.01),Z=1,L=3 D ENTER
"RTN","DGPTRI0",61,0)
 ;
"RTN","DGPTRI0",62,0)
 ;; - Insert POA here
"RTN","DGPTRI0",63,0)
 D POA^DGPTRI4(.Y)
"RTN","DGPTRI0",64,0)
 ;
"RTN","DGPTRI0",65,0)
 D FILL^DGPTRI2,SAVE
"RTN","DGPTRI0",66,0)
 I T1 S Y=$E(Y,1,52)_" "_$E(Y,54,125)
"RTN","DGPTRI0",67,0)
 ;
"RTN","DGPTRI0",68,0)
P401 ; -- setup 401P transaction
"RTN","DGPTRI0",69,0)
 G 401:'$D(^DGPT(J,"401P"))!(T1) S DG41=^("401P"),Y=$S(T1:"C",1:"N")_"401"_DGHEAD_"P"_"           "
"RTN","DGPTRI0",70,0)
 N EFFDATE,IMPDATE,DGPTDAT D EFFDATE^DGPTIC10(J)
"RTN","DGPTRI0",71,0)
 S DG41=$S($D(^DGPT(J,"401P")):^("401P"),1:"")
"RTN","DGPTRI0",72,0)
 S L=1 F K=1:1:5 S:'$P(DG41,U,K) DG41=$P(DG41,U,1,K-1)_U_$P(DG41,U,K+1,99),K=K-1 S L=L+1 Q:L=5
"RTN","DGPTRI0",73,0)
 F I=1:1:5 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+$P(DG41,U,I),EFFDATE,"I"),Y=Y_$S(+DGPTTMP>0:$J($P($P(DGPTTMP,U,2),".",1),2)_$E($P($P(DGPTTMP,U,2),".",2)_"   ",1,3),1:"     ")_"  "
"RTN","DGPTRI0",74,0)
 K DGPTEDT
"RTN","DGPTRI0",75,0)
 I $E(Y,40)'=" " D FILL^DGPTRI2,SAVE
"RTN","DGPTRI0",76,0)
 ;
"RTN","DGPTRI0",77,0)
401 ; -- setup 401 transactions
"RTN","DGPTRI0",78,0)
 G 501:'$D(^DGPT(J,"S")) K ^UTILITY($J,"S") S I=0
"RTN","DGPTRI0",79,0)
SUR ;
"RTN","DGPTRI0",80,0)
 S I=$O(^DGPT(J,"S",I)) G 501:'I
"RTN","DGPTRI0",81,0)
 S DGSUR=^DGPT(J,"S",I,0)
"RTN","DGPTRI0",82,0)
 S DGAUX=$S($D(^DGPT(J,"S",I,300)):^(300),1:"") G SUR:'DGSUR
"RTN","DGPTRI0",83,0)
 G SUR:DGSUR<T1!(DGSUR>T2) S DGSUD=+^(0)\1,^UTILITY($J,"S",DGSUD)=$S($D(^UTILITY($J,"S",DGSUD)):^(DGSUD),1:0)+1,F=$S(DGSUD<2871000:0,1:1)
"RTN","DGPTRI0",84,0)
 I ^UTILITY($J,"S",DGSUD)>$S(F:3,1:2) D  I Y'=1 S DGERR=1 Q
"RTN","DGPTRI0",85,0)
 .W !,"**There are more than ",$S(F:"three",1:"two")," surgeries on the same date**"
"RTN","DGPTRI0",86,0)
 .S DIR(0)="Y",DIR("B")="YES",DIR("A")="OK to continue?" D ^DIR K DIR
"RTN","DGPTRI0",87,0)
 S Y=$S(T1:"C",1:"N")_"40"_^(DGSUD)_DGHEAD_$E(DGSUD,4,5)_$E(DGSUD,6,7)_$E(DGSUD,2,3)_$E($P(+DGSUR,".",2)_"0000",1,4)_$S($D(^DIC(45.3,+$P(DGSUR,U,3),0)):$P(^(0),U,1),1:"  ")
"RTN","DGPTRI0",88,0)
 S L=1,X=DGSUR F Z=4:1:7 D ENTER
"RTN","DGPTRI0",89,0)
 N EFFDATE,IMPDATE,DGPTDAT D EFFDATE^DGPTIC10(J)
"RTN","DGPTRI0",90,0)
 S L=1 F K=8:1:12 S:'$P(DGSUR,U,K) DGSUR=$P(DGSUR,U,1,K-1)_U_$P(DGSUR,U,K+1,99),K=K-1 S L=L+1 Q:L=5
"RTN","DGPTRI0",91,0)
 ;F K=8:1:12 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+$P(DGSUR,U,K),EFFDATE,"I"),Y=Y_$S(+DGPTTMP>0:$J($P($P(DGPTTMP,U,2),".",1),2)_$E($P($P(DGPTTMP,U,2),".",2)_"   ",1,3),1:"     ")_"  "
"RTN","DGPTRI0",92,0)
 F K=8:1:12 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+$P(DGSUR,U,K),EFFDATE,"I") D
"RTN","DGPTRI0",93,0)
 . S Y=Y_$S(+DGPTTMP>0:$P(DGPTTMP,U,2),1:"       ")
"RTN","DGPTRI0",94,0)
 K DGPTEDT
"RTN","DGPTRI0",95,0)
 ;-- att phy
"RTN","DGPTRI0",96,0)
 S Y=Y_"         "
"RTN","DGPTRI0",97,0)
 ;-- additional ptf question
"RTN","DGPTRI0",98,0)
 ;send null, if disch date>inactive date. DG/729
"RTN","DGPTRI0",99,0)
 I +$P($G(^DIC(45.88,1,0)),U,3) S DGAUX=$S((+$G(^DGPT(J,70))<$P(^DIC(45.88,1,0),U,3)):DGAUX,1:"")
"RTN","DGPTRI0",100,0)
 S Y=Y_$E($P(DGAUX,U)_" ")
"RTN","DGPTRI0",101,0)
 K DGAUX
"RTN","DGPTRI0",102,0)
 D FILL^DGPTRI2,SAVE G SUR
"RTN","DGPTRI0",103,0)
501 G 501^DGPTRI2
"RTN","DGPTRI0",104,0)
 Q
"RTN","DGPTRI0",105,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTRI0",106,0)
 Q
"RTN","DGPTRI0",107,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("000000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTRI0",108,0)
 Q
"RTN","DGPTRI0",109,0)
SAVE D START^DGPTRI1 S:'DGERR ^XMB(3.9,DGXMZ,2,DGCNT,0)=Y,DGCNT=DGCNT+1
"RTN","DGPTRI0",110,0)
 I DGERR'>0 S DGACNT=DGACNT+1,^TMP("AEDIT",$J,$E(Y,1,4),DGACNT)=Y
"RTN","DGPTRI0",111,0)
Q Q
"RTN","DGPTRI0",112,0)
DGNAM S X=DGNAM I X?.E.P F I=1:1:$L(X) S Z=$E(X,I) Q:Z=","  S:Z?.P&(Z]"") X=$E(X,1,I-1)_$E(X,I+1,$L(X)),I=I-1 Q:X'?.E.P
"RTN","DGPTRI0",113,0)
 I X?.E.L D UP^DGHELP
"RTN","DGPTRI0",114,0)
 S DGNAM=X
"RTN","DGPTRI0",115,0)
 Q
"RTN","DGPTRI0",116,0)
 ;
"RTN","DGPTRI0",117,0)
PTFNMFT(DG10) ;this function will format the name of the patient for
"RTN","DGPTRI0",118,0)
 ; transmission of the 101 record to Austin. In addition, this
"RTN","DGPTRI0",119,0)
 ; function will be used by OPC so that the format will be consistent
"RTN","DGPTRI0",120,0)
 ; for OPC and PTF.
"RTN","DGPTRI0",121,0)
 ;  INPUT :   DG10 - .01 field from the patient record.
"RTN","DGPTRI0",122,0)
 ;  OUTPUT:   name in the format proper format.
"RTN","DGPTRI0",123,0)
 ;        A = <12 - characters of last name padded with blanks>
"RTN","DGPTRI0",124,0)
 ;        B = <1  - first initial of fist name>
"RTN","DGPTRI0",125,0)
 ;        C = <1  - first initial of middle name>
"RTN","DGPTRI0",126,0)
 ;      returns :ABC <14 - characters>
"RTN","DGPTRI0",127,0)
 N X,I
"RTN","DGPTRI0",128,0)
 S DGNAM=DG10 D DGNAM
"RTN","DGPTRI0",129,0)
 Q $E($P(DGNAM,",",1)_"           ",1,12)_$J($E($P(DGNAM,",",2),1),1)_$J($E($P($P(DGNAM,",",2)," ",2),1),1)
"RTN","DGPTRI1")
0^54^B37319384^n/a
"RTN","DGPTRI1",1,0)
DGPTRI1 ;ALB/MTC - PTF VERIFICATION ;01 MAR 2011 @0800
"RTN","DGPTRI1",2,0)
 ;;5.3;Registration;**850**;Aug 13, 1993;Build 171
"RTN","DGPTRI1",3,0)
 ;;Updated DGPTR1 for ICD-10 Transmission;;2/28/2012
"RTN","DGPTRI1",4,0)
START ;
"RTN","DGPTRI1",5,0)
 S T=$E(Y,2,3),T=$S(T=40&($E(Y,28)="P"):"P40",1:T)
"RTN","DGPTRI1",6,0)
 Q:($E(Y,2,4)="704"!($E(Y,2,4)=705))
"RTN","DGPTRI1",7,0)
 S ERR=$P($T(@("T"_T)),";;",2,999),W=$P($T(@(T)),";;",2,999),F=31 S:T="10" W=W_$P($T(@(T_"+1")),";;",2,999) D L
"RTN","DGPTRI1",8,0)
 I T=70 S ERR=$P($T(T701),";;",2,999),W=$P($T(701),";;",2,999),F=72 D L
"RTN","DGPTRI1",9,0)
 D @("D"_T) Q
"RTN","DGPTRI1",10,0)
 K DGFILL
"RTN","DGPTRI1",11,0)
 Q
"RTN","DGPTRI1",12,0)
 ;
"RTN","DGPTRI1",13,0)
L ;
"RTN","DGPTRI1",14,0)
 N DGFOR S DGFOR=$S($$FORIEN^DGADDUTL($P(DG11,U,10))<1:0,1:1) ;set foreign country flag =1, else, set as domestic
"RTN","DGPTRI1",15,0)
 F H=1:1 S DGO=$P(W,U,H) Q:'DGO  D
"RTN","DGPTRI1",16,0)
 . F Z=1:1:$P(DGO,";",3) D
"RTN","DGPTRI1",17,0)
 .. S DGL=DGLOGIC(+DGO)
"RTN","DGPTRI1",18,0)
 .. S X=$E(Y,F)
"RTN","DGPTRI1",19,0)
 .. D @("ERR:"_DGL)
"RTN","DGPTRI1",20,0)
 .. S F=F+1
"RTN","DGPTRI1",21,0)
 Q
"RTN","DGPTRI1",22,0)
 ;
"RTN","DGPTRI1",23,0)
T10 ;;1:NAME^2:SOURCE OF ADM^3:TRANS FAC.^4:SOURCE OF PAY^5:POW^6:MARITAL ST^7:SEX^8:DOB^9:POS^10:VIETNAM^11:ION RADIATION^12:RESIDENCE^13:MEANS TEST^14:INCOME^15:MST^16:COMBAT VET^17:CV END DT^18:PROJ 112/SHAD^19:ERI^20:COUNTRY^21;POA INDICATOR
"RTN","DGPTRI1",24,0)
 ;
"RTN","DGPTRI1",25,0)
T70 ;;1:DT OF DISP.^2:DISCH BD SEC^3:TYPE OF DIS^4:OUT TREAT^5:VA AUS^6:PL OF DIS^7:REC FAC^8:ASIH DAYS^9:NOT USED^10:C&P STAT^11:PDXLS^12:ONLY DX^13:PHY MPCR
"RTN","DGPTRI1",26,0)
 ;T701 is part 2 of T70
"RTN","DGPTRI1",27,0)
T701 ;;1:PHY SPEC^2:%SC^3:LEGION^4:SUICIDE^5:DRUG^6:AXIS-IV^7:AXIS-V^8:SC^9:EXP^10:MST^11:HNC^12:ETHNICITY^13:RACE^14:COMBAT VET^15:PROJ 112/SHAD
"RTN","DGPTRI1",28,0)
 ;
"RTN","DGPTRI1",29,0)
T50 ;;1:DT OF MVMT^2:LOSING BD SEC MPCR^3:LOSING BD SEC^4:LEAVE DAYS^5:PASS DAYS^6:SCI^7:DIAG^8:DOCTOR'S SSN^9:PHY MPCR^10:PHY SPEC^11:DISCHARGE STAT^^^^^16:LEGION^17:SUICIDE^18:DRUG^19:AXIS-IV^20:AXIS-V^21:SC^22:EXP^23:MST^24:HNC
"RTN","DGPTRI1",30,0)
 ;
"RTN","DGPTRI1",31,0)
T53 ;;1:DATE OF PHYSICAL MOVEMENT^2:LOSING PHYSICAL MPCR^3:LOSING PHYSICAL SPECIALTY^4:TR SPECIALTY MPCR^5:TR SPECIALTY^6:LEAVE DAYS^7:PASS DAYS^8:DOCTOR'S SSN (NOT USED)
"RTN","DGPTRI1",32,0)
 ;
"RTN","DGPTRI1",33,0)
T40 ;;1:DATE OF SURGERY^2:SURG SPEC.^3:CAT CHIEF SURGEON^4:CAT FIRST ASS^5:ANEST. TECH.^6:SOURCE OF PAY^7:OP CODE^8:DOCTOR'S SSN (NOT USED)^^^^^13:TRANSPLANT STATUS
"RTN","DGPTRI1",34,0)
 ;
"RTN","DGPTRI1",35,0)
TP40 ;;1:OP CODE
"RTN","DGPTRI1",36,0)
 ;
"RTN","DGPTRI1",37,0)
T60 ;;1:DATE OF PROCEDURE^2:LOSING BD SEC^3:DIALYSIS TYPE^4:NUMBER OF TREATMENTS^5:PROCEDURE CODE
"RTN","DGPTRI1",38,0)
 ;
"RTN","DGPTRI1",39,0)
LOGIC ;;X'?.N^X'?.A&(X'=" ")^X'=" "^X'?.N&(X'=" ")^X'?.A&(X'=" ")^0^X'?.N&(X'="X")^X'=" "&(X'="P")^X="E"^X="Y"^X=" "^X'="A"&(X'=" ")^(X'?.A)&(X'?.N)&(X'=" ")^(X'?.AN)&('$P(DG0,U,4))^((T1)&(X'=" "))!(('T1)&(X'?.AN)&('$P(DG0,U,4)))
"RTN","DGPTRI1",40,0)
 ;;(X'?.AN)^'$D(DGFOR)&(X'?.N)^'$D(DGFOR)&X'?.N&(X'="X")^X'?AN&X'=""^"YNUW "']X
"RTN","DGPTRI1",41,0)
 ;;END
"RTN","DGPTRI1",42,0)
 ;
"RTN","DGPTRI1",43,0)
 ; edit check# ; edit field ; # x check preformed ; display error name #
"RTN","DGPTRI1",44,0)
10 ;;6;;12;1^2;1;1;1^5;1;1;1^1;2;1;2^2;2;1;2^4;3;3;3^6;;3;3^4;4;1;4^6;5;1;5^2;6;1;6^2;7;1;7^1;8;8;8^6;;1;9^11;9;1;9^4;10;1;10^4;10;1;11^17;11;5;12^18;11;5;12^2;12;1;13^6;;1;13^1;;6;14^2;;1;15^1;;1;16^4;;6;17^1;;1;18^5;;1;19^5;;3;20^20;;13;21
"RTN","DGPTRI1",45,0)
 ;;^3;;13
"RTN","DGPTRI1",46,0)
 ;old 10
"RTN","DGPTRI1",47,0)
 ;;;6;;12;1^2;1;1;1^5;1;1;1^1;2;1;2^2;2;1;2^4;3;3;3^6;;3;3^4;4;1;4^6;5;1;5^2;6;1;6^2;7;1;7^1;8;8;8^6;;1;9^11;9;1;9^4;10;1;10^4;10;1;11^17;11;5;12^18;11;5;12^2;12;1;13^6;;1;13^1;;6;14^2;;1;15^1;;1;16^4;;6;17^1;;1;18^5;;1;19^5;;3;20^3;;26
"RTN","DGPTRI1",48,0)
 ;
"RTN","DGPTRI1",49,0)
70 ;;1;1;10;1^13;2;2;2^1;3;1;3^4;4;1;4^4;5;1;5^6;;1;6^4;7;3;7^6;;3;7^4;8;3;8^6;9;1;9^1;10;1;10^6;11;1;11^6;11;2;11^6;;3;11^6;11;1;11^6;;1;12^15;;6;13
"RTN","DGPTRI1",50,0)
 ;701 is part 2 of 70
"RTN","DGPTRI1",51,0)
701 ;;15;;2;1^1;;3;2^4;;1;3^4;;1;4^12;;1;5^4;;3;5^4;;1;6^4;;4;7^4;;1;8^5;;3;9^5;;1;10^5;;1;11^13;12;2;12^13;13;12;13^5;;1;14^5;;1;15^3;;16
"RTN","DGPTRI1",52,0)
 ;
"RTN","DGPTRI1",53,0)
50 ;;1;1;10;1^1;;6;2^16;3;2;3^1;4;3;4^1;5;3;5^6;;1;6^11;7;3;7^6;;32;7^6;;9;8^14;;6;9^14;;2;10^6;;1;11^4;;1;16^4;;1;17^12;;1;18^4;;3;18^4;;1;19^4;;4;20^4;;1;21^5;;3;22^5;;1;23^5;;1;24
"RTN","DGPTRI1",54,0)
 ;
"RTN","DGPTRI1",55,0)
53 ;;1;;10;1^1;;6;2^13;;2;3^1;;6;4^13;;2;5^1;;3;6^1;;3;7^3;;9;8^3;;54;
"RTN","DGPTRI1",56,0)
 ;
"RTN","DGPTRI1",57,0)
 ; 40 modified for ICD-10 for OP CODE pieces (changed DGLOGIC(3) to DGLOGIC(6)
"RTN","DGPTRI1",58,0)
40 ;;1;1;10;1^1;2;2;2^11;3;1;3^4;4;1;4^6;5;1;5^4;6;1;6^11;7;2;7^6;;3;7^6;7;2;7^6;;5;7^6;7;2;7^6;;5;7^6;7;2;7^6;;5;7^6;7;2;7^6;;5;7^6;7;2;7^3;;9;8^4;;1;13^3;;34;
"RTN","DGPTRI1",59,0)
 ;
"RTN","DGPTRI1",60,0)
P40 ;;8;;1;^3;;11;^11;1;2;1^6;;3;1^3;1;2;1^6;;5;1^3;;2;1^6;;5;1^3;;2;1^6;;5;1^3;;2;1^6;;5;1^3;;2;1^3;;48
"RTN","DGPTRI1",61,0)
 ;
"RTN","DGPTRI1",62,0)
60 ;;1;1;10;1^13;2;2;2^4;3;1;3^4;4;3;4^11;5;3;5^6;;32;5^3;;44
"RTN","DGPTRI1",63,0)
 ;
"RTN","DGPTRI1",64,0)
ERR S DGERR=1
"RTN","DGPTRI1",65,0)
 W !,T,$S(T["H":" ",1:$E(Y,4)),"  "
"RTN","DGPTRI1",66,0)
 W:"45"[$E(T,1) $E(Y,31,32),"-",$E(Y,33,34),"-",$E(Y,35,36),"@",$E(Y,37,40)
"RTN","DGPTRI1",67,0)
 W ?25,$P($P(ERR,U,$P(DGO,";",4)),":",2),?40,"COL.",F,"  VALUE: ",$S($E(Y,F)=" ":"BLANK",1:$E(Y,F))
"RTN","DGPTRI1",68,0)
 S I=$S('$D(I):1,I>0:I,1:1),^(I)=$S($D(^UTILITY("DG",$J,T_$S(T["H":"",1:$E(Y,4)),I)):^(I),1:U) I $P(DGO,";",2),^(I)'[(U_$P(DGO,";",2)_U) S ^(I)=^(I)_$P(DGO,";",2)_U
"RTN","DGPTRI1",69,0)
 Q
"RTN","DGPTRI1",70,0)
 ;
"RTN","DGPTRI1",71,0)
D10 ;
"RTN","DGPTRI1",72,0)
 I $E(Y,66)="Z" S (F,H)=68,W="11;10;1;10" D L
"RTN","DGPTRI1",73,0)
 Q
"RTN","DGPTRI1",74,0)
 ;
"RTN","DGPTRI1",75,0)
D40 Q
"RTN","DGPTRI1",76,0)
DP40 Q
"RTN","DGPTRI1",77,0)
D70 I "467"'[$E(Y,43) S F=44,W="4;4;1;4^1;5;1;5^11;6;1;6" D L
"RTN","DGPTRI1",78,0)
 Q
"RTN","DGPTRI1",79,0)
D50 I "A0"[$P(DG0,U,5)!("A4"[$P(DG0,U,5))!('$D(^DGPT(J,70))) S W="11;6;1;6",F=55 D L
"RTN","DGPTRI1",80,0)
 I $D(^DGPT(J,70)),$S(T1:1,1:+^(70)>2871000) S W="11;6;1;6",F=55 D L
"RTN","DGPTRI1",81,0)
 ;I $E(Y,4)=1 S W="9;7;1;7",F=56 D L
"RTN","DGPTRI1",82,0)
 I I=1,'T1 S W="1;11;1;11",F=108 D L
"RTN","DGPTRI1",83,0)
 Q
"RTN","DGPTRI1",84,0)
D53 Q
"RTN","DGPTRI1",85,0)
D60 I $E(Y,43) S F=44,W="1;4;3;4" D L
"RTN","DGPTRI1",86,0)
 Q
"RTN","DGPTRI1",87,0)
HEAD S ERR="1:SSN^2:ADMISSION DATE^3:FACILITY #",W="8;1;1;1^1;1;9;1^1;2;10;2^1;3;3;3^6;;3;3",F=5,T="HEADER" D LOG
"RTN","DGPTRI1",88,0)
 D L
"RTN","DGPTRI1",89,0)
 Q
"RTN","DGPTRI1",90,0)
LOG ;place DGLOGIC in array inorder to add more logic tests ;DG*5.3*664
"RTN","DGPTRI1",91,0)
 K DGLOGIC ;S DGLOGIC=$P($T(LOGIC),";;",2)
"RTN","DGPTRI1",92,0)
 N LOGX,LOGI,LOGCNT,II,XX
"RTN","DGPTRI1",93,0)
 S LOGI=0,LOGCNT=1
"RTN","DGPTRI1",94,0)
 F LOGI=0:1 S LOGX=$P($T(LOGIC+LOGI),";;",2) Q:LOGX="END"  F II=1:1 S XX=$P(LOGX,U,II) Q:XX=""  S DGLOGIC(LOGCNT)=XX,LOGCNT=LOGCNT+1
"RTN","DGPTRI1",95,0)
 Q
"RTN","DGPTRI1",96,0)
CEN S T=70,ERR=$P($T(T70),";;",2),W=$P($T(70),";;",2,999),W="13;9;1;9"_$P(W,"13;9;1;9",2,999),F=56 D L
"RTN","DGPTRI1",97,0)
 S ERR=$P($T(T701),";;",2),W=$P($T(701),";;",2,999),F=72 D L
"RTN","DGPTRI1",98,0)
 Q
"RTN","DGPTRI1",99,0)
 ;
"RTN","DGPTRI1",100,0)
DIAGPTRN(DGDIAG) ; -- icd-10 diagnosis pattern match
"RTN","DGPTRI1",101,0)
 ;    1  2  3  4  5  6  7  8
"RTN","DGPTRI1",102,0)
 ;    -  -  -  -  -  -  -  -
"RTN","DGPTRI1",103,0)
 ;    U  N  U  .  U  U  N  U
"RTN","DGPTRI1",104,0)
 ;    X     N     N  N  x  N
"RTN","DGPTRI1",105,0)
 ;                x  x  n  n
"RTN","DGPTRI1",106,0)
 ;                n  n     
"RTN","DGPTRI1",107,0)
 N OKAY S OKAY=0
"RTN","DGPTRI1",108,0)
 I DGDIAG?1U1N1UN1".".4AN S OKAY=1
"RTN","DGPTRI1",109,0)
 Q OKAY
"RTN","DGPTRI1",110,0)
TEST ;
"RTN","DGPTRI1",111,0)
 W !,"F14. ",$$DIAGPTRN("F14.")
"RTN","DGPTRI1",112,0)
 W !,"G1G.1234 ",$$DIAGPTRN("G1G.1234")
"RTN","DGPTRI1",113,0)
 W !,"330. ",$$DIAGPTRN("330")
"RTN","DGPTRI1",114,0)
 W !,"R54.3XxY ",$$DIAGPTRN("R54.3XxY")
"RTN","DGPTRI1",115,0)
 W !,"R543XxY ",$$PROCPTRN("R543XxY")
"RTN","DGPTRI1",116,0)
 W !,"10.44 ",$$PROCPTRN("10.44")
"RTN","DGPTRI1",117,0)
 W !,"3S82B1 ",$$PROCPTRN("3S82B1")
"RTN","DGPTRI1",118,0)
 W !,"G23244X ",$$PROCPTRN("G23244X")
"RTN","DGPTRI1",119,0)
 Q
"RTN","DGPTRI1",120,0)
 ;
"RTN","DGPTRI1",121,0)
PROCPTRN(DGPROC) ;ICD-10 Procedure Code Pattern Match
"RTN","DGPTRI1",122,0)
 ; 
"RTN","DGPTRI1",123,0)
 ;    1  2  3  4  5  6  7
"RTN","DGPTRI1",124,0)
 ;    -  -  -  -  -  -  -
"RTN","DGPTRI1",125,0)
 ;    U  U  U  U  U  U  U
"RTN","DGPTRI1",126,0)
 ;    N  N  N  N  N  N  N
"RTN","DGPTRI1",127,0)
 ;       Z     Z  Z  Z  Z
"RTN","DGPTRI1",128,0)
 ; 
"RTN","DGPTRI1",129,0)
 N OKAY S OKAY=0
"RTN","DGPTRI1",130,0)
 I DGPROC?7UN S OKAY=1
"RTN","DGPTRI1",131,0)
 Q OKAY
"RTN","DGPTRI2")
0^55^B26956533^n/a
"RTN","DGPTRI2",1,0)
DGPTRI2 ;ALB/JDS/MJK/MTC/ADL/TJ - ALB/BOK  PTF TRANSMISSION ;03 Dec 2012  10:56 PM
"RTN","DGPTRI2",2,0)
 ;;5.3;Registration;**850**;Aug 13, 1993;Build 171
"RTN","DGPTRI2",3,0)
 ;;ADL;Update for CSV Project;;Mar 27,2003
"RTN","DGPTRI2",4,0)
501 ; -- setup 501 transactions
"RTN","DGPTRI2",5,0)
 ; DG*636
"RTN","DGPTRI2",6,0)
 N DGPTMVDT,DGMPOA
"RTN","DGPTRI2",7,0)
 I $D(^DGPT(J,70))
"RTN","DGPTRI2",8,0)
 K DGCMVT I T2'=9999999 S DGCMVT=$O(^DGPT(J,"M","AM",+$P(T2,".")_".2359")),DGCMVT=$S('DGCMVT:1,$O(^(DGCMVT,0)):$O(^(0)),1:1)
"RTN","DGPTRI2",9,0)
 F I=0:0 S I=$O(^DGPT(J,"M",I)) G 535:I'>0 I $D(^DGPT(J,"M",I,0)) S DGM=^DGPT(J,"M",I,0),DGMPOA=$G(^DGPT(J,"M",I,82)) D
"RTN","DGPTRI2",10,0)
 . S DGPTMCNT=$G(DGPTMCNT)+1,DGSC=$P(DGM,U,18),DGAO=$P(DGM,U,26),DGIR=$P(DGM,U,27)
"RTN","DGPTRI2",11,0)
 . S DGEC=$P(DGM,U,28),DGMST=$P(DGM,U,29),DGHNC=$P(DGM,U,30),DGTD=$P(DGM,U,10),DGPTMVDT=$P(DGM,U,10)
"RTN","DGPTRI2",12,0)
 . S:$D(DGCMVT) DGTD=$S(I=DGCMVT:$P(T2,".")_".2359",1:DGTD)
"RTN","DGPTRI2",13,0)
 . I $P(DGM,U,17)'="n",DGTD,DGTD'<T1,DGTD'>T2 D MOV
"RTN","DGPTRI2",14,0)
 Q
"RTN","DGPTRI2",15,0)
MOV ; build movement record
"RTN","DGPTRI2",16,0)
 S DGCDR=$P(DGM,U,16)
"RTN","DGPTRI2",17,0)
 S DGM=$P(DGM,U,1,9)_U_$P(DGM,U,11,15),L=1
"RTN","DGPTRI2",18,0)
 ;
"RTN","DGPTRI2",19,0)
 ; -- remove any blank diagnosis and corresponding POA
"RTN","DGPTRI2",20,0)
 F Z=1:1:10 I $P(DGMPOA,U,Z)="" S $P(DGMPOA,U,Z)=" "
"RTN","DGPTRI2",21,0)
 F Z=5:1:14 S L=L+1 Q:L>10  I '$P(DGM,U,Z) D
"RTN","DGPTRI2",22,0)
 . S DGM=$P(DGM,U,1,Z-1)_U_$P(DGM,U,Z+1,99)
"RTN","DGPTRI2",23,0)
 . S Z1=Z-4
"RTN","DGPTRI2",24,0)
 . I Z1=1 S DGMPOA=$P(DGMPOA,U,2,99)
"RTN","DGPTRI2",25,0)
 . I Z1>1 S DGMPOA=$P(DGMPOA,U,1,Z1-1)_U_$P(DGMPOA,U,Z1+1,99)
"RTN","DGPTRI2",26,0)
 . S Z=Z-1
"RTN","DGPTRI2",27,0)
 ;-- AAS need to condence POA same as diagnosis
"RTN","DGPTRI2",28,0)
 ;
"RTN","DGPTRI2",29,0)
 S Y=$S(T1:"C",1:"N")_"501"_DGHEAD,X=$P(DGTD,".")_"       ",Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)_$E($P(DGTD,".",2)_"0000",1,4)
"RTN","DGPTRI2",30,0)
 S Z=DGCDR D CDR
"RTN","DGPTRI2",31,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTRI2",32,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTRI2",33,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(DGM,U,2),.DGARRY)
"RTN","DGPTRI2",34,0)
 S $P(DGM,U,2)=$G(DGARRY(7))
"RTN","DGPTRI2",35,0)
 S L=2,X=DGM,Z=2 D ENTER0
"RTN","DGPTRI2",36,0)
 ; convert pass, leave days >999 to 999
"RTN","DGPTRI2",37,0)
 S L=3 F Z=3,4 S:$P(X,U,Z)>999 $P(X,U,Z)=999 D ENTER0
"RTN","DGPTRI2",38,0)
 S L=1,X=DG57,Z=4 D ENTER S:I=1 DG502=Y
"RTN","DGPTRI2",39,0)
 N EFFDATE,IMPDATE,DGPTDAT D EFFDATE^DGPTIC10(J)
"RTN","DGPTRI2",40,0)
 F Z=5:1:9 S DGPTTMP=$S($P(DGM,U,Z):$$ICDDATA^ICDXCODE("DIAG",+$P(DGM,U,Z),EFFDATE,"I"),1:-1) D
"RTN","DGPTRI2",41,0)
 . S F=$S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$P(DGPTTMP,U,2),1:"   ."),F=$P(F,".",1)_$E($P(F,".",2)_"     ",1,4),F=F_$E("       ",1,7-$L(F)),Y=Y_F
"RTN","DGPTRI2",42,0)
 . S DGRPOA(DGPTMCNT)=$G(DGRPOA(DGPTMCNT))_$S($P(DGM,U,Z):$P(DGMPOA,U,Z-4),1:" ") ; Build POA String
"RTN","DGPTRI2",43,0)
 S DGRPOA(DGPTMCNT)=$E(DGRPOA(DGPTMCNT)_"      ",1,6) ; POA string plus 1 space
"RTN","DGPTRI2",44,0)
 K DGPTEDT
"RTN","DGPTRI2",45,0)
 S Y=Y_"         "
"RTN","DGPTRI2",46,0)
 S X=""
"RTN","DGPTRI2",47,0)
 I 'T1 S Z=$S(I=1:+$O(^DGPT(J,535,"ADC",0)),1:+$O(^DGPT(J,535,"AM",DGTD-.0000001))) I $D(^DGPT(J,535,+$O(^(Z,0)),0)) S X=^(0)
"RTN","DGPTRI2",48,0)
 I T1 S Z=+$O(^DGPT(J,535,"AM",DGTD-.0000001)) S:'Z Z=+$O(^DGPT(J,535,"ADC",0)) I $D(^DGPT(J,535,+$O(^(Z,0)),0)) S X=^(0)
"RTN","DGPTRI2",49,0)
 S Z=$P(X,U,16) D CDR
"RTN","DGPTRI2",50,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTRI2",51,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTRI2",52,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(X,U,2),.DGARRY)
"RTN","DGPTRI2",53,0)
 S $P(X,U,2)=$G(DGARRY(7))
"RTN","DGPTRI2",54,0)
 S L=2,Z=2 D ENTER0
"RTN","DGPTRI2",55,0)
 ; bed occupant
"RTN","DGPTRI2",56,0)
 I T1 S Y=Y_$S(I=1:$E($P(DG70,U,14)_" "),$P(+DGTD,".")=$P(T2,"."):5,1:1)
"RTN","DGPTRI2",57,0)
 I 'T1 S Y=Y_$S(I=1:$E($P(DG70,U,14)_" "),1:" ")
"RTN","DGPTRI2",58,0)
 ;-- additional ptf questions
"RTN","DGPTRI2",59,0)
 S DGAUX=$S($D(^DGPT(J,"M",I,300)):^(300),1:"")
"RTN","DGPTRI2",60,0)
 D ADDQUES
"RTN","DGPTRI2",61,0)
 ;-- sc related care
"RTN","DGPTRI2",62,0)
 S Y=Y_$E(DGSC_" ")
"RTN","DGPTRI2",63,0)
 ;-- ao related care
"RTN","DGPTRI2",64,0)
 S Y=Y_$E(DGAO_" ")
"RTN","DGPTRI2",65,0)
 ;-- ir related care
"RTN","DGPTRI2",66,0)
 S Y=Y_$E(DGIR_" ")
"RTN","DGPTRI2",67,0)
 ;-- ec related care
"RTN","DGPTRI2",68,0)
 S Y=Y_$E(DGEC_" ")
"RTN","DGPTRI2",69,0)
 ;-- mst related care
"RTN","DGPTRI2",70,0)
 S Y=Y_$E(DGMST_" ")
"RTN","DGPTRI2",71,0)
 ;-- Head/Neck CA related care
"RTN","DGPTRI2",72,0)
 S Y=Y_$E(DGHNC_" ")
"RTN","DGPTRI2",73,0)
 K DGAUX,DGDRUG,DGSC,DGAO,DGIR,DGEC,DGMST,DGHNC
"RTN","DGPTRI2",74,0)
 D FILL^DGPTRI2,SAVE
"RTN","DGPTRI2",75,0)
 Q
"RTN","DGPTRI2",76,0)
535 ; -- do 535's
"RTN","DGPTRI2",77,0)
 D 535^DGPTRI3
"RTN","DGPTRI2",78,0)
 ;
"RTN","DGPTRI2",79,0)
PROC ; -- setup 601 transactions
"RTN","DGPTRI2",80,0)
 K ^UTILITY($J,"PROC") S I=0
"RTN","DGPTRI2",81,0)
601 S I=$O(^DGPT(J,"P",I)) G 701:I'>0 S (X,DGPROC)=^(I,0) G 601:'DGPROC
"RTN","DGPTRI2",82,0)
 G 601:DGPROC<T1!(DGPROC>T2) S DGPROCD=+^DGPT(J,"P",I,0),^UTILITY($J,"PROC",DGPROCD)=$S($D(^UTILITY($J,"PROC",DGPROCD)):^(DGPROCD),1:0)+1
"RTN","DGPTRI2",83,0)
 I ^UTILITY($J,"PROC",DGPROCD)>1 W !,"More than one procedure record on same date/time" S DGERR=1 Q
"RTN","DGPTRI2",84,0)
 S Y=$S('T1:"N",1:"C")_"60"_^(DGPROCD)_DGHEAD_$E(DGPROCD,4,7)_$E(DGPROCD,2,3)_$E($P(+X,".",2)_"0000",1,4)
"RTN","DGPTRI2",85,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTRI2",86,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTRI2",87,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(X,U,2),.DGARRY)
"RTN","DGPTRI2",88,0)
 S $P(X,U,2)=$G(DGARRY(7))
"RTN","DGPTRI2",89,0)
 S L=2,Z=2 D ENTER0
"RTN","DGPTRI2",90,0)
 S L=1,Z=3 S $P(X,U,Z)="" D ENTER ;null dialysis type. DG729
"RTN","DGPTRI2",91,0)
 S L=3,Z=4 D ENTER0
"RTN","DGPTRI2",92,0)
 N EFFDATE,IMPDATE,DGPTDAT D EFFDATE^DGPTIC10(J)
"RTN","DGPTRI2",93,0)
 S L=1 F K=5:1:9 S:'$P(DGPROC,U,K) DGPROC=$P(DGPROC,U,1,K-1)_U_$P(DGPROC,U,K+1,99),K=K-1 S L=L+1 Q:L=5
"RTN","DGPTRI2",94,0)
 F K=5:1:9 S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",+$P(DGPROC,U,K),EFFDATE,"I") D
"RTN","DGPTRI2",95,0)
 . S Y=Y_$S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$P(DGPTTMP,U,2),1:"       ")
"RTN","DGPTRI2",96,0)
 K DGPTEDT
"RTN","DGPTRI2",97,0)
 D FILL,SAVE G 601
"RTN","DGPTRI2",98,0)
 Q
"RTN","DGPTRI2",99,0)
 ;
"RTN","DGPTRI2",100,0)
701 ; -- setup 701 transaction
"RTN","DGPTRI2",101,0)
 D 701^DGPTRI4 Q
"RTN","DGPTRI2",102,0)
 ;
"RTN","DGPTRI2",103,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTRI2",104,0)
 Q
"RTN","DGPTRI2",105,0)
 ;
"RTN","DGPTRI2",106,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("00000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTRI2",107,0)
 Q
"RTN","DGPTRI2",108,0)
 ;
"RTN","DGPTRI2",109,0)
SAVE D START^DGPTRI1 S:'DGERR ^XMB(3.9,DGXMZ,2,DGCNT,0)=Y,DGCNT=DGCNT+1
"RTN","DGPTRI2",110,0)
 I DGERR'>0 S DGACNT=DGACNT+1,^TMP("AEDIT",$J,$E(Y,1,4),DGACNT)=Y
"RTN","DGPTRI2",111,0)
Q Q
"RTN","DGPTRI2",112,0)
 ;
"RTN","DGPTRI2",113,0)
FILL F K=$L(Y):1:124 S Y=Y_" "
"RTN","DGPTRI2",114,0)
 Q
"RTN","DGPTRI2",115,0)
 ;
"RTN","DGPTRI2",116,0)
CDR S Y=Y_$E($P(Z,".")_"0000",1,4)_$E($P(Z,".",2)_"00",1,2)
"RTN","DGPTRI2",117,0)
 Q
"RTN","DGPTRI2",118,0)
ADDQUES ;-- additional PTF questions load records for trans 501/701
"RTN","DGPTRI2",119,0)
 N DGADDQ
"RTN","DGPTRI2",120,0)
 F DGADDQ=2,3,4 D  ;null results if discharge>inactive date. DG/729
"RTN","DGPTRI2",121,0)
 . I +$P($G(^DIC(45.88,DGADDQ,0)),U,3) S $P(DGAUX,U,DGADDQ)=$S((+$G(^DGPT(J,70))<$P(^DIC(45.88,DGADDQ,0),U,3)):$P(DGAUX,U,DGADDQ),1:"")
"RTN","DGPTRI2",122,0)
 S DGDRUG=$S($D(^DIC(45.61,+$P(DGAUX,U,4),0)):$P(^(0),U,2),1:"    ")
"RTN","DGPTRI2",123,0)
 S Y=Y_$E($P(DGAUX,U,3)_" ")_$E($P(DGAUX,U,2)_" ")_$J($P(DGDRUG,U),4)
"RTN","DGPTRI2",124,0)
 S Y=Y_$E($P(DGAUX,U,5)_" ")
"RTN","DGPTRI2",125,0)
 S DGT=0,X=$P(DGAUX,U,6) I X]"" S DGT=1,Z=1,L=2 D ENTER0
"RTN","DGPTRI2",126,0)
 I 'DGT S Y=Y_"  "
"RTN","DGPTRI2",127,0)
 S DGT=0,X=$P(DGAUX,U,7) I X]"" S DGT=1,Z=1,L=2 D ENTER0
"RTN","DGPTRI2",128,0)
 I 'DGT S Y=Y_"  "
"RTN","DGPTRI2",129,0)
 Q
"RTN","DGPTRI3")
0^56^B26611263^n/a
"RTN","DGPTRI3",1,0)
DGPTRI3 ;ALB/JDS/MJK - ALB/BOK  PTF TRANSMISSION ;3/12/11 7:21am
"RTN","DGPTRI3",2,0)
 ;;5.3;Registration;**850**;Aug 13, 1993;Build 171
"RTN","DGPTRI3",3,0)
 ;
"RTN","DGPTRI3",4,0)
 ; CSI^ICDEX      ICR 5747
"RTN","DGPTRI3",5,0)
 ;
"RTN","DGPTRI3",6,0)
535 ; -- setup 535 transactions
"RTN","DGPTRI3",7,0)
 F I=0:0 S I=$O(^DGPT(J,535,I)) Q:'I  I $D(^(I,0)) S DGM=^(0),DGTD=+$P(DGM,U,10) I $P(DGM,U,17)'="n",'$P(DGM,U,7),'$D(^DGPT(J,"M","AM",DGTD)),DGTD'<T1,DGTD'>T2 D PHY
"RTN","DGPTRI3",8,0)
 Q
"RTN","DGPTRI3",9,0)
 ;
"RTN","DGPTRI3",10,0)
PHY ; -- set up physical mvt
"RTN","DGPTRI3",11,0)
 S Y=$S(T1:"C",1:"N")_"535"_DGHEAD,X=$P(DGTD,".")_"       ",Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)_$E($P(DGTD,".",2)_"0000",1,4)
"RTN","DGPTRI3",12,0)
 ; physical cdr
"RTN","DGPTRI3",13,0)
 S Z=$P(DGM,U,16) D CDR^DGPTRI2
"RTN","DGPTRI3",14,0)
 ; physical specialty
"RTN","DGPTRI3",15,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTRI3",16,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTRI3",17,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(DGM,U,2),.DGARRY)
"RTN","DGPTRI3",18,0)
 S $P(DGM,U,2)=$G(DGARRY(7))
"RTN","DGPTRI3",19,0)
 S L=2,X=DGM,Z=2 D ENTER0
"RTN","DGPTRI3",20,0)
 ; find corresponding PTF mvt
"RTN","DGPTRI3",21,0)
 S X="",Z=+$O(^DGPT(J,"M","AM",DGTD-.0000001)),Z=$S(Z:+$O(^(Z,0)),1:1) I $D(^DGPT(J,"M",Z,0)) S X=^(0) ; use d/c mvt if 'Z
"RTN","DGPTRI3",22,0)
 ; specialty cdr
"RTN","DGPTRI3",23,0)
 S Z=$P(X,U,16) D CDR^DGPTRI2
"RTN","DGPTRI3",24,0)
 ; specialty
"RTN","DGPTRI3",25,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTRI3",26,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTRI3",27,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(X,U,2),.DGARRY)
"RTN","DGPTRI3",28,0)
 S $P(X,U,2)=$G(DGARRY(7))
"RTN","DGPTRI3",29,0)
 S L=2,Z=2 D ENTER0
"RTN","DGPTRI3",30,0)
 ; 
"RTN","DGPTRI3",31,0)
 ; convert pass, leave days >999 to 999
"RTN","DGPTRI3",32,0)
 S X=DGM,L=3 F Z=3,4 S:$P(X,U,Z)>999 $P(X,U,Z)=999 D ENTER0
"RTN","DGPTRI3",33,0)
 D FILL^DGPTRI2,SAVE
"RTN","DGPTRI3",34,0)
 K DGM,X,Z,L Q
"RTN","DGPTRI3",35,0)
 ;
"RTN","DGPTRI3",36,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTRI3",37,0)
 Q
"RTN","DGPTRI3",38,0)
 ;
"RTN","DGPTRI3",39,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("00000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTRI3",40,0)
 Q
"RTN","DGPTRI3",41,0)
 ;
"RTN","DGPTRI3",42,0)
SAVE D START^DGPTRI1 S:'DGERR ^XMB(3.9,DGXMZ,2,DGCNT,0)=Y,DGCNT=DGCNT+1
"RTN","DGPTRI3",43,0)
 I DGERR'>0 S DGACNT=DGACNT+1,^TMP("AEDIT",$J,$E(Y,1,4),DGACNT)=Y
"RTN","DGPTRI3",44,0)
Q Q
"RTN","DGPTRI3",45,0)
 ;
"RTN","DGPTRI3",46,0)
VERCHK(REC) ; -- check version for all diagnosis and procedure codes
"RTN","DGPTRI3",47,0)
 N I,J,X,Y,DGPTF,FLD,VER,%,ICD,DGICD,M,CODSYSD,CODSYSP,ERR1,ERR2,ERR3,ERR4,ERR5,ERR6
"RTN","DGPTRI3",48,0)
 N EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPTRI3",49,0)
 Q:+$G(REC)<1
"RTN","DGPTRI3",50,0)
 ;
"RTN","DGPTRI3",51,0)
 D EFFDATE^DGPTIC10(REC,"701")
"RTN","DGPTRI3",52,0)
 S CODSYSD=+$$CS^ICDEX(80,"I",EFFDATE)
"RTN","DGPTRI3",53,0)
 S CODSYSP=+$$CS^ICDEX(80.1,"I",EFFDATE)
"RTN","DGPTRI3",54,0)
 ;
"RTN","DGPTRI3",55,0)
 S %=$S($D(^DGPT(REC,70)):^(70),1:"") I %'="" D
"RTN","DGPTRI3",56,0)
 . S %=U_$P(%,U,10)_U_$P(%,U,16,24)_U_$G(^DGPT(REC,71))
"RTN","DGPTRI3",57,0)
 .F ICD=1:1:15 S DGICD=$P(%,U,ICD) I DGICD'="" D  Q:$G(ERR1)=1
"RTN","DGPTRI3",58,0)
 .. S X=$$CSI^ICDEX(80,DGICD)
"RTN","DGPTRI3",59,0)
 .. I +X'=CODSYSD S ERR1=CODSYSD ;W !,%,!,ICD,!,X
"RTN","DGPTRI3",60,0)
 .. Q
"RTN","DGPTRI3",61,0)
 . Q
"RTN","DGPTRI3",62,0)
 ;
"RTN","DGPTRI3",63,0)
 S M=0 F I=0:0 S I=$O(^DGPT(REC,"M",I)) Q:'I  D
"RTN","DGPTRI3",64,0)
 . S %=$G(^DGPT(REC,"M",I,0)) S %=U_$P(%,U,5,9)_U_$P(%,U,11,15)
"RTN","DGPTRI3",65,0)
 . F ICD=1:1:15 S DGICD=$P(%,U,ICD) I DGICD'="" D  Q:$G(ERR2)=1
"RTN","DGPTRI3",66,0)
 .. S X=$$CSI^ICDEX(80,DGICD)
"RTN","DGPTRI3",67,0)
 .. I +X'=CODSYSD S ERR2=CODSYSD
"RTN","DGPTRI3",68,0)
 .. Q
"RTN","DGPTRI3",69,0)
 . Q
"RTN","DGPTRI3",70,0)
 ;
"RTN","DGPTRI3",71,0)
 S I=0 F I=0:0 S I=$O(^DGPT(REC,"P",I)) Q:'I  D
"RTN","DGPTRI3",72,0)
 . S %=$G(^DGPT(REC,"P",I,0)) S %=U_$P(%,U,5,9)
"RTN","DGPTRI3",73,0)
 . F ICD=1:1:6 S DGICD=$P(%,U,ICD) I DGICD'="" D  Q:$G(ERR3)=1
"RTN","DGPTRI3",74,0)
 .. S X=$$CSI^ICDEX(80.1,DGICD)
"RTN","DGPTRI3",75,0)
 .. I +X'=CODSYSP S ERR3=CODSYSP ;W !,%,!,ICD,!,X,!,CODSYSP
"RTN","DGPTRI3",76,0)
 .. Q
"RTN","DGPTRI3",77,0)
 . Q
"RTN","DGPTRI3",78,0)
 ;
"RTN","DGPTRI3",79,0)
 S I=0 F I=0:0 S I=$O(^DGPT(REC,"S",I)) Q:'I  D
"RTN","DGPTRI3",80,0)
 . S %=$G(^DGPT(REC,"S",I,0)) S %=U_$P(%,U,8,12)
"RTN","DGPTRI3",81,0)
 . F ICD=1:1:6 S DGICD=$P(%,U,ICD) I DGICD'="" D  Q:$G(ERR4)=1
"RTN","DGPTRI3",82,0)
 .. S X=$$CSI^ICDEX(80.1,DGICD)
"RTN","DGPTRI3",83,0)
 .. I +X'=CODSYSP S ERR4=CODSYSP
"RTN","DGPTRI3",84,0)
 .. Q
"RTN","DGPTRI3",85,0)
 . Q
"RTN","DGPTRI3",86,0)
 ;
"RTN","DGPTRI3",87,0)
 S %=$S($D(^DGPT(REC,"401P")):^("401P"),1:"") I %'="" D
"RTN","DGPTRI3",88,0)
 . S %=U_$P(%,U,1,5)
"RTN","DGPTRI3",89,0)
 .F ICD=1:1:6 S DGICD=$P(%,U,ICD) I DGICD'="" D  Q:$G(ERR5)=1
"RTN","DGPTRI3",90,0)
 .. S X=$$CSI^ICDEX(80,DGICD)
"RTN","DGPTRI3",91,0)
 .. I +X'=CODSYSD S ERR5=CODSYSD ;W !,%,!,ICD,!,X
"RTN","DGPTRI3",92,0)
 .. Q
"RTN","DGPTRI3",93,0)
 . Q
"RTN","DGPTRI3",94,0)
 ;
"RTN","DGPTRI3",95,0)
 D CPTDATA
"RTN","DGPTRI3",96,0)
 ;
"RTN","DGPTRI3",97,0)
 I $G(ERR4) S DGERR=$G(DGERR)+1 W !,"401         ",$S(ERR4=2:"ICD-9",1:"ICD-10")," Code Expected, ",$S(ERR4=2:"ICD-10",1:"ICD-9")," Code found."
"RTN","DGPTRI3",98,0)
 I $G(ERR2) S DGERR=$G(DGERR)+1 W !,"501         ",$S(ERR2=1:"ICD-9",1:"ICD-10")," Code Expected, ",$S(ERR2=1:"ICD-10",1:"ICD-9")," Code found."
"RTN","DGPTRI3",99,0)
 I $G(ERR3) S DGERR=$G(DGERR)+1 W !,"601         ",$S(ERR3=2:"ICD-9",1:"ICD-10")," Code Expected, ",$S(ERR3=2:"ICD-10",1:"ICD-9")," Code found."
"RTN","DGPTRI3",100,0)
 I $G(ERR5) S DGERR=$G(DGERR)+1 W !,"601         ",$S(ERR5=1:"ICD-9",1:"ICD-10")," Code Expected, ",$S(ERR5=1:"ICD-10",1:"ICD-9")," Code found."
"RTN","DGPTRI3",101,0)
 I $G(ERR1) S DGERR=$G(DGERR)+1 W !,"701         ",$S(ERR1=1:"ICD-9",1:"ICD-10")," Code Expected, ",$S(ERR1=1:"ICD-10",1:"ICD-9")," Code found."
"RTN","DGPTRI3",102,0)
 I $G(ERR6) S DGERR=$G(DGERR)+1 W !,"801         ",$S(ERR6=1:"ICD-9",1:"ICD-10")," Code Expected, ",$S(ERR6=1:"ICD-10",1:"ICD-9")," Code found."
"RTN","DGPTRI3",103,0)
 ;
"RTN","DGPTRI3",104,0)
 Q
"RTN","DGPTRI3",105,0)
 ;
"RTN","DGPTRI3",106,0)
CPTDATA ; -- get 801 movement Diagnosis Data in DG801(i,j,"DATA")
"RTN","DGPTRI3",107,0)
 ; 801 movement uses CPT Record date instead of 701 type dates
"RTN","DGPTRI3",108,0)
 N H,I,I2,N,IEN,K,K1,L,DGCPTDT,DGCPTSYS
"RTN","DGPTRI3",109,0)
 S (H,I,N)=0
"RTN","DGPTRI3",110,0)
 F I2=1:1 S H=$O(^DGPT(PTF,"C","B",H)) Q:H'>0  D
"RTN","DGPTRI3",111,0)
 . F  S I=$O(^DGPT(PTF,"C","B",H,I)) Q:I'>0  D
"RTN","DGPTRI3",112,0)
 .. S DG801(I2)=^DGPT(PTF,"C",I,0),DGCPTDT=$P(DG801(I2),U,1),DGCPTSYS=+$$CS^ICDEX(80,"I",DGCPTDT)
"RTN","DGPTRI3",113,0)
 .. S (K,K1)=0,F=1 ;D
"RTN","DGPTRI3",114,0)
 .. F  S K=$O(^DGCPT(46,"C",PTF,K)) Q:K'>0  I +DG801(I2)=+$G(^DGCPT(46,K,1)),'$G(^DGCPT(46,K,9)) D
"RTN","DGPTRI3",115,0)
 ... S K1=K1+1
"RTN","DGPTRI3",116,0)
 ... S DG801(I2,K1,"DATA")=$P(^DGCPT(46,K,0),U,4,7)_U_$P(^DGCPT(46,K,0),U,15,18)
"RTN","DGPTRI3",117,0)
 ... F L=1:1:8 S DGICD=$P(DG801(I2,K1,"DATA"),U,L) I DGICD D  Q:$G(ERR6)
"RTN","DGPTRI3",118,0)
 .... S X=$$CSI^ICDEX(80,DGICD)
"RTN","DGPTRI3",119,0)
 .... I +X'=DGCPTSYS S ERR6=DGCPTSYS
"RTN","DGPTRI3",120,0)
 .... Q
"RTN","DGPTRI3",121,0)
 ... S F=0
"RTN","DGPTRI3",122,0)
 ... Q
"RTN","DGPTRI3",123,0)
 ..I F K DG801(I2) S I2=I2-1
"RTN","DGPTRI3",124,0)
 .. Q
"RTN","DGPTRI3",125,0)
 . Q
"RTN","DGPTRI3",126,0)
 K F,I,K,K1,N
"RTN","DGPTRI3",127,0)
 Q
"RTN","DGPTRI4")
0^57^B32872225^n/a
"RTN","DGPTRI4",1,0)
DGPTRI4 ;ALB/JDS/MJK/MTC/ADL/TJ - ALB/BOK  PTF TRANSMISSION ;03 Dec 2012  10:40 PM
"RTN","DGPTRI4",2,0)
 ;;5.3;Registration;**850**;Aug 13, 1993;Build 171
"RTN","DGPTRI4",3,0)
 ;
"RTN","DGPTRI4",4,0)
701 ; -- setup 701 transaction
"RTN","DGPTRI4",5,0)
 S Y=$S(T1:"C",1:"N")_"701"_DGHEAD,DGDDX=$P(+DG70,".")_"       ",Y=Y_$E(DGDDX,4,5)_$E(DGDDX,6,7)_$E(DGDDX,2,3)_$E($P(+DG70,".",2)_"0000",1,4)
"RTN","DGPTRI4",6,0)
 S X=DG70
"RTN","DGPTRI4",7,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTRI4",8,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTRI4",9,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(X,U,2),.DGARRY)
"RTN","DGPTRI4",10,0)
 S $P(X,U,2)=$G(DGARRY(7))
"RTN","DGPTRI4",11,0)
 S (L,Z)=2 D ENTER0 K DGDDX
"RTN","DGPTRI4",12,0)
 S X=DG70 I "467"[($P(X,U,3)\1) S Y=Y_$P(X,U,3)_"         " G J
"RTN","DGPTRI4",13,0)
 S L=1 F Z=3:1:5 D ENTER
"RTN","DGPTRI4",14,0)
 S Y=Y_$S($D(^DIC(45.6,+$P(X,U,6),0)):$P(^(0),U,2),1:" "),L=3,Z=12 D ENTER S Y=Y_$E($P(X,U,13)_"   ",1,3)
"RTN","DGPTRI4",15,0)
J S L=3,Z=8 D ENTER0
"RTN","DGPTRI4",16,0)
 S Y=Y_"X"_$J($P(DG70,U,9),1)
"RTN","DGPTRI4",17,0)
 N EFFDATE,IMPDATE,DGPTDAT D EFFDATE^DGPTIC10(J)
"RTN","DGPTRI4",18,0)
 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DG70,U,10),EFFDATE,"I")
"RTN","DGPTRI4",19,0)
 S DGXLS=$S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$P(DGPTTMP,U,2),1:""),Y=Y_$S(DGXLS[".":$J($P(DGXLS,".",1),3)_$E($P(DGXLS,".",2)_"    ",1,4),1:$J(DGXLS,7))
"RTN","DGPTRI4",20,0)
 ;
"RTN","DGPTRI4",21,0)
 S L=$P(DG70,U,16,24)_U_DG71 S DG702=""
"RTN","DGPTRI4",22,0)
 F K=1:1:12 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(L,U,K),EFFDATE,"I") D
"RTN","DGPTRI4",23,0)
 . I +DGPTTMP>0&($P(DGPTTMP,U,10)) S DG702=DG702_$P(DGPTTMP,U,2)_U
"RTN","DGPTRI4",24,0)
 S Y=Y_$S(DG702']"":"X",1:" ")
"RTN","DGPTRI4",25,0)
 ; -- get phy cdr @ d/c
"RTN","DGPTRI4",26,0)
 S X="",Z=+$O(^DGPT(J,535,"AM",DG70-.0000001)) I $D(^DGPT(J,535,+$O(^(Z,0)),0)) S X=^(0)
"RTN","DGPTRI4",27,0)
 ; -- set phy cdr
"RTN","DGPTRI4",28,0)
 S Z=$P(X,U,16) D CDR
"RTN","DGPTRI4",29,0)
 ; -- set phy spec
"RTN","DGPTRI4",30,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTRI4",31,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTRI4",32,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(X,U,2),.DGARRY)
"RTN","DGPTRI4",33,0)
 S $P(X,U,2)=$G(DGARRY(7))
"RTN","DGPTRI4",34,0)
 S L=2,Z=2 D ENTER0
"RTN","DGPTRI4",35,0)
 S X=$S($P(DG3,U)="Y":$$RTEN($P(DG3,U,2)),1:"0"),L=3,Z=1 D ENTER0
"RTN","DGPTRI4",36,0)
 ;-- additional ptf questions
"RTN","DGPTRI4",37,0)
 S DGAUX=$S($D(^DGPT(J,300)):^(300),1:"")
"RTN","DGPTRI4",38,0)
 D ADDQUES
"RTN","DGPTRI4",39,0)
 K DGAUX,DGDRUG
"RTN","DGPTRI4",40,0)
 ;
"RTN","DGPTRI4",41,0)
 ;-- sc,ao,ir,ec questions
"RTN","DGPTRI4",42,0)
 S X=DG70
"RTN","DGPTRI4",43,0)
 ;-- sc
"RTN","DGPTRI4",44,0)
 S Y=Y_$E($P(DG70,U,25)_" ") ; col 88
"RTN","DGPTRI4",45,0)
 ;-- ao
"RTN","DGPTRI4",46,0)
 S Y=Y_$E($P(DG70,U,26)_" ") ; col 89
"RTN","DGPTRI4",47,0)
 ;-- ir
"RTN","DGPTRI4",48,0)
 S Y=Y_$E($P(DG70,U,27)_" ") ; col 90
"RTN","DGPTRI4",49,0)
 ;-- SW Asia conditions/ec
"RTN","DGPTRI4",50,0)
 S Y=Y_$E($P(DG70,U,28)_" ") ; col 91
"RTN","DGPTRI4",51,0)
 ;-- mst
"RTN","DGPTRI4",52,0)
 S Y=Y_$E($P(DG70,U,29)_" ") ; col 92
"RTN","DGPTRI4",53,0)
 ;-- Head/Neck CA
"RTN","DGPTRI4",54,0)
 S Y=Y_$E($P(DG70,U,30)_" ")
"RTN","DGPTRI4",55,0)
 D ETHNIC
"RTN","DGPTRI4",56,0)
 D RACE
"RTN","DGPTRI4",57,0)
 ;Combat vet
"RTN","DGPTRI4",58,0)
 S Y=Y_$E($P(DG70,U,31)_" ")
"RTN","DGPTRI4",59,0)
 ;Project 112/SHAD
"RTN","DGPTRI4",60,0)
 S Y=Y_$E($P(DG70,U,32)_" ")
"RTN","DGPTRI4",61,0)
 D FILL
"RTN","DGPTRI4",62,0)
 I T1 F K=41:1:55,65:1:73 S Y=$E(Y,1,K-1)_" "_$E(Y,K+1,125)
"RTN","DGPTRI4",63,0)
 I T1 D CEN^DGPTRI1 S:'DGERR ^XMB(3.9,DGXMZ,2,DGCNT,0)=Y,DGCNT=DGCNT+1 Q
"RTN","DGPTRI4",64,0)
 I 'T1 D SAVE
"RTN","DGPTRI4",65,0)
 ;
"RTN","DGPTRI4",66,0)
702 ;
"RTN","DGPTRI4",67,0)
 I DG702']"" D 704 Q
"RTN","DGPTRI4",68,0)
 S Y="N702"_$E(Y,5,40)
"RTN","DGPTRI4",69,0)
 F K=1:1:12 S F=$P(DG702,U,K),F=$P(F,".",1)_$E($P(F,".",2)_"    ",1,4),F=F_$E("       ",1,7-$L(F)),Y=Y_F
"RTN","DGPTRI4",70,0)
 D FILL
"RTN","DGPTRI4",71,0)
 I 'DGERR S ^XMB(3.9,DGXMZ,2,DGCNT,0)=Y,DGCNT=DGCNT+1
"RTN","DGPTRI4",72,0)
 I DGERR'>0 S DGACNT=DGACNT+1,^TMP("AEDIT",$J,$E(Y,1,4),DGACNT)=Y
"RTN","DGPTRI4",73,0)
 S DG702=$P(DG702,U,6,9)
"RTN","DGPTRI4",74,0)
 D 704
"RTN","DGPTRI4",75,0)
 Q
"RTN","DGPTRI4",76,0)
 ;
"RTN","DGPTRI4",77,0)
704 ; -- Build segment 704 for 501 POA transmission
"RTN","DGPTRI4",78,0)
 N Y,I
"RTN","DGPTRI4",79,0)
 S Y=$S(T1:"C",1:"N")_"704"_DGHEAD,X=$P(DGTD,".")_"       "
"RTN","DGPTRI4",80,0)
 S Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)_$E($P(DGTD,".",2)_"0000",1,4)_" "
"RTN","DGPTRI4",81,0)
 ;
"RTN","DGPTRI4",82,0)
 F I=1:1:13 S Y=Y_$E($G(DGRPOA(I))_"      ",1,6)
"RTN","DGPTRI4",83,0)
 D FILL^DGPTRI2,SAVE
"RTN","DGPTRI4",84,0)
 ;only send 705 if more than 15 movements
"RTN","DGPTRI4",85,0)
 I DGPTMCNT>13 D 705
"RTN","DGPTRI4",86,0)
 ;always send 705 (Save For future implementation)
"RTN","DGPTRI4",87,0)
 ;D 705
"RTN","DGPTRI4",88,0)
 K DGPTMCNT,DGRPOA
"RTN","DGPTRI4",89,0)
 Q
"RTN","DGPTRI4",90,0)
 ;
"RTN","DGPTRI4",91,0)
705 ; -- Build the 705 segment for 501 POA transmission
"RTN","DGPTRI4",92,0)
 S Y=$S(T1:"C",1:"N")_"705"_DGHEAD,X=$P(DGTD,".")_"       "
"RTN","DGPTRI4",93,0)
 S Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)_$E($P(DGTD,".",2)_"0000",1,4)_" "
"RTN","DGPTRI4",94,0)
 S CNT=DGPTMCNT
"RTN","DGPTRI4",95,0)
 F I=1:1:12 S Y=Y_$E($G(DGRPOA(I+13))_"      ",1,6)
"RTN","DGPTRI4",96,0)
 D FILL^DGPTRI2,SAVE
"RTN","DGPTRI4",97,0)
 Q
"RTN","DGPTRI4",98,0)
 ;
"RTN","DGPTRI4",99,0)
 ;
"RTN","DGPTRI4",100,0)
POA(Y) ;-- Add POA to end of 101 segment with POA
"RTN","DGPTRI4",101,0)
 N DGPOA,L,K S DGPOA=$G(^DGPT(J,82))
"RTN","DGPTRI4",102,0)
 S L=$P(DG70,U,10)_U_$P(DG70,U,16,24)_U_DG71
"RTN","DGPTRI4",103,0)
 F K=1:1:13 S Y=Y_$S($P(L,U,K)'="":$$POAVAL($P(DGPOA,U,K)),1:" ") ;6/18/2012 send what is stored per call with Dorothea Garrett.
"RTN","DGPTRI4",104,0)
 Q
"RTN","DGPTRI4",105,0)
 ;
"RTN","DGPTRI4",106,0)
POAVAL(POA) ; -- Convert POA indicator to a 1 or 0 for use in calculating DRG
"RTN","DGPTRI4",107,0)
 ; -- note:  Transmission of space " " if no corresponding DIAGNOSIS
"RTN","DGPTRI4",108,0)
 ; -- see POA^DGPTFD, same logic, different return values.
"RTN","DGPTRI4",109,0)
 S POA=$G(POA)
"RTN","DGPTRI4",110,0)
 ;
"RTN","DGPTRI4",111,0)
 ; -- On 8/9/2012 the ADT SME Determined that null POA should be defaulted to Yes
"RTN","DGPTRI4",112,0)
 ;    Due to the fact that the COTS PTF software was not uploading POA information.
"RTN","DGPTRI4",113,0)
 Q $S(POA="Y":"Y",POA="N":"N",POA="":"Y",POA="U":"U",POA="W":"W",1:"Y")
"RTN","DGPTRI4",114,0)
 ;
"RTN","DGPTRI4",115,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTRI4",116,0)
 Q
"RTN","DGPTRI4",117,0)
 ;
"RTN","DGPTRI4",118,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("00000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTRI4",119,0)
 Q
"RTN","DGPTRI4",120,0)
 ;
"RTN","DGPTRI4",121,0)
SAVE D START^DGPTRI1 S:'DGERR ^XMB(3.9,DGXMZ,2,DGCNT,0)=Y,DGCNT=DGCNT+1
"RTN","DGPTRI4",122,0)
 I DGERR'>0 S DGACNT=DGACNT+1,^TMP("AEDIT",$J,$E(Y,1,4),DGACNT)=Y
"RTN","DGPTRI4",123,0)
Q Q
"RTN","DGPTRI4",124,0)
 ;
"RTN","DGPTRI4",125,0)
FILL F K=$L(Y):1:124 S Y=Y_" "
"RTN","DGPTRI4",126,0)
 Q
"RTN","DGPTRI4",127,0)
 ;
"RTN","DGPTRI4",128,0)
CDR S Y=Y_$E($P(Z,".")_"0000",1,4)_$E($P(Z,".",2)_"00",1,2)
"RTN","DGPTRI4",129,0)
 Q
"RTN","DGPTRI4",130,0)
ADDQUES ;-- additional PTF questions load records for trans 501/701
"RTN","DGPTRI4",131,0)
 N DGADDQ
"RTN","DGPTRI4",132,0)
 F DGADDQ=2,3,4 D  ;null results if discharge>inactive date. DG/729
"RTN","DGPTRI4",133,0)
 . I +$P($G(^DIC(45.88,DGADDQ,0)),U,3) S $P(DGAUX,U,DGADDQ)=$S((+$G(^DGPT(J,70))<$P(^DIC(45.88,DGADDQ,0),U,3)):$P(DGAUX,U,DGADDQ),1:"")
"RTN","DGPTRI4",134,0)
 S DGDRUG=$S($D(^DIC(45.61,+$P(DGAUX,U,4),0)):$P(^(0),U,2),1:"    ")
"RTN","DGPTRI4",135,0)
 S Y=Y_$E($P(DGAUX,U,3)_" ")_$E($P(DGAUX,U,2)_" ")_$J($P(DGDRUG,U),4) ; Substance abuse col 79 (4) 
"RTN","DGPTRI4",136,0)
 S Y=Y_$E($P(DGAUX,U,5)_" ") ;physical axis class col 83 (1)
"RTN","DGPTRI4",137,0)
 S DGT=0,X=$P(DGAUX,U,6) I X]"" S DGT=1,Z=1,L=2 D ENTER0 ;physical axis assessment col 84 (4)
"RTN","DGPTRI4",138,0)
 I 'DGT S Y=Y_"  "
"RTN","DGPTRI4",139,0)
 S DGT=0,X=$P(DGAUX,U,7) I X]"" S DGT=1,Z=1,L=2 D ENTER0
"RTN","DGPTRI4",140,0)
 I 'DGT S Y=Y_"  "
"RTN","DGPTRI4",141,0)
 Q
"RTN","DGPTRI4",142,0)
RTEN(X) ; This function will round X to the nearest multiple of ten.
"RTN","DGPTRI4",143,0)
 ; 0-4 ->DOWN; 5-9->UP
"RTN","DGPTRI4",144,0)
 Q (X\10)*10+$S(X#10>4:10,1:0)
"RTN","DGPTRI4",145,0)
ETHNIC ;-- Ethnicity (use first active value)
"RTN","DGPTRI4",146,0)
 N NODE,NUM,ETHNIC,I,X
"RTN","DGPTRI4",147,0)
 S ETHNIC=""
"RTN","DGPTRI4",148,0)
 S I=0
"RTN","DGPTRI4",149,0)
 S NUM=1
"RTN","DGPTRI4",150,0)
 F  S I=+$O(DG06(I)) Q:'I  D  Q:NUM>1
"RTN","DGPTRI4",151,0)
 .S NODE=$G(DG06(I,0))
"RTN","DGPTRI4",152,0)
 .Q:('NODE)!('$D(^DIC(10.2,+NODE,0)))
"RTN","DGPTRI4",153,0)
 .Q:$$INACTIVE^DGUTL4(+NODE)
"RTN","DGPTRI4",154,0)
 .S X=$$PTR2CODE^DGUTL4(+NODE,2,4)
"RTN","DGPTRI4",155,0)
 .S ETHNIC=$S(X="":" ",1:X)
"RTN","DGPTRI4",156,0)
 .S X=$$PTR2CODE^DGUTL4(+$P(NODE,"^",2),3,4)
"RTN","DGPTRI4",157,0)
 .S ETHNIC=ETHNIC_$S(X="":" ",1:X)
"RTN","DGPTRI4",158,0)
 .S NUM=NUM+1
"RTN","DGPTRI4",159,0)
 S Y=Y_$S(ETHNIC="":"  ",1:ETHNIC)
"RTN","DGPTRI4",160,0)
 Q
"RTN","DGPTRI4",161,0)
RACE ;-- Race (use first 6 active values)
"RTN","DGPTRI4",162,0)
 N NODE,NUM,RACE,I,X
"RTN","DGPTRI4",163,0)
 S RACE=""
"RTN","DGPTRI4",164,0)
 S I=0
"RTN","DGPTRI4",165,0)
 S NUM=1
"RTN","DGPTRI4",166,0)
 F  S I=+$O(DG02(I)) Q:'I  D  Q:NUM>6
"RTN","DGPTRI4",167,0)
 .S NODE=$G(DG02(I,0))
"RTN","DGPTRI4",168,0)
 .Q:('NODE)!('$D(^DIC(10,+NODE,0)))
"RTN","DGPTRI4",169,0)
 .Q:$$INACTIVE^DGUTL4(+NODE)
"RTN","DGPTRI4",170,0)
 .S X=$$PTR2CODE^DGUTL4(+NODE,1,4)
"RTN","DGPTRI4",171,0)
 .S RACE=RACE_$S(X="":" ",1:X)
"RTN","DGPTRI4",172,0)
 .S X=$$PTR2CODE^DGUTL4(+$P(NODE,"^",2),3,4)
"RTN","DGPTRI4",173,0)
 .S RACE=RACE_$S(X="":" ",1:X)
"RTN","DGPTRI4",174,0)
 .S NUM=NUM+1
"RTN","DGPTRI4",175,0)
 S X="" S $P(X," ",12)=""
"RTN","DGPTRI4",176,0)
 S RACE=$S(RACE="":"  ",1:RACE)_X
"RTN","DGPTRI4",177,0)
 S Y=Y_$E(RACE,1,12)
"RTN","DGPTRI4",178,0)
 Q
"RTN","DGPTSCAN")
0^67^B23143464^B23094075
"RTN","DGPTSCAN",1,0)
DGPTSCAN ;ALB/MTC - SPECIAL ACTION SCAN PROCESS ;1 MAR 91
"RTN","DGPTSCAN",2,0)
 ;;5.3;Registration;**29,64,114,189,729,850**;Aug 13, 1993;Build 171
"RTN","DGPTSCAN",3,0)
 ;;MAS 5.1
"RTN","DGPTSCAN",4,0)
CHK501 ;--
"RTN","DGPTSCAN",5,0)
 D INIT G ENQ:DGOUT
"RTN","DGPTSCAN",6,0)
 G ENQ:'$D(^DGPT(DGPTF,"M",+DGMOV,0)) S DGREC=^(0)
"RTN","DGPTSCAN",7,0)
 F DGI=5:1:9 I $P(DGREC,U,DGI) S DGPTIT($P(DGREC,U,DGI)_";ICD9(")=""
"RTN","DGPTSCAN",8,0)
 S DGHOLD=$S($D(^DGPT(DGPTF,"M",+DGMOV,300)):^(300),1:"")
"RTN","DGPTSCAN",9,0)
 D SCAN
"RTN","DGPTSCAN",10,0)
 I '$D(DGBPC),DGHOLD']"" G CHK5Q
"RTN","DGPTSCAN",11,0)
 S DIE="^DGPT(",DA=DGPTF,DR="[DGPT 501 CLEANUP]"
"RTN","DGPTSCAN",12,0)
 D ^DIE
"RTN","DGPTSCAN",13,0)
 ;;
"RTN","DGPTSCAN",14,0)
 ;;ADDED FOR GAF ENHANCEMENT 6/2/98
"RTN","DGPTSCAN",15,0)
 ;;Gathers GAF Score, GAF Date, GAF Provider and sends to
"RTN","DGPTSCAN",16,0)
 ;;Mental Health package
"RTN","DGPTSCAN",17,0)
 N DGGAFSC,DGGAFDT,DGGAFPR,DGDFN
"RTN","DGPTSCAN",18,0)
 S DGGAFSC=$P(DGHOLD,"^",6),DGDFN=$P(^DGPT(DGPTF,0),"^")
"RTN","DGPTSCAN",19,0)
 S DGGAFDT=$P(^DGPT(DGPTF,0),"^",2)\1
"RTN","DGPTSCAN",20,0)
 S DGGAFPR=$P($G(^DGPT(DGPTF,"M",+DGMOV,"P")),"^",5) ;Provider
"RTN","DGPTSCAN",21,0)
 D UPD^YSGAF(DGDFN,DGGAFSC,DGGAFDT,DGGAFPR,"I")
"RTN","DGPTSCAN",22,0)
 ;;END GAF ENHANCEMENTS
"RTN","DGPTSCAN",23,0)
 ;;
"RTN","DGPTSCAN",24,0)
CHK5Q K DA,DR,DGHOLD,DGBPC,DGPTIT,DIE,DGREC,DGI,DGSCDT,DGSTART,DGTREC,DGOUT
"RTN","DGPTSCAN",25,0)
 Q
"RTN","DGPTSCAN",26,0)
 ;
"RTN","DGPTSCAN",27,0)
CHK601 ;--
"RTN","DGPTSCAN",28,0)
 D INIT G ENQ:DGOUT
"RTN","DGPTSCAN",29,0)
 G ENQ:'$D(^DGPT(DGPTF,"P",+P(DGZP,1),0)) S DGREC=^(0)
"RTN","DGPTSCAN",30,0)
 F DGI=5:1:9 I $P(DGREC,U,DGI) S DGPTIT($P(DGREC,U,DGI)_";ICD0(")=""
"RTN","DGPTSCAN",31,0)
 S DGHOLD=DGREC
"RTN","DGPTSCAN",32,0)
 D SCAN
"RTN","DGPTSCAN",33,0)
 I '$D(DGBPC(8)),$P(DGHOLD,U,4)']"" G CHK6Q
"RTN","DGPTSCAN",34,0)
 S DIE="^DGPT(",DA=DGPTF,DR="[DGPT 601 CLEANUP]"
"RTN","DGPTSCAN",35,0)
 D ^DIE
"RTN","DGPTSCAN",36,0)
CHK6Q K DA,DR,DGHOLD,DGBPC,DGPTIT,DIE,DGREC,DGI,DGOUT
"RTN","DGPTSCAN",37,0)
 Q
"RTN","DGPTSCAN",38,0)
CHK401 ;-- 
"RTN","DGPTSCAN",39,0)
 D INIT G ENQ:DGOUT
"RTN","DGPTSCAN",40,0)
 G ENQ:'$D(^DGPT(DGPTF,"S",+DGSUR,0)) S DGREC=^(0)
"RTN","DGPTSCAN",41,0)
 F DGI=8:1:12 I $P(DGREC,U,DGI) S DGPTIT($P(DGREC,U,DGI)_";ICD0(")=""
"RTN","DGPTSCAN",42,0)
 S DGHOLD=$S($D(^DGPT(DGPTF,"S",+DGSUR,300)):^(300),1:"")
"RTN","DGPTSCAN",43,0)
 D SCAN
"RTN","DGPTSCAN",44,0)
 I '$D(DGBPC),DGHOLD']"" G CHK4Q
"RTN","DGPTSCAN",45,0)
 S DIE="^DGPT(",DA=DGPTF,DR="[DGPT 401 CLEANUP]"
"RTN","DGPTSCAN",46,0)
 D ^DIE
"RTN","DGPTSCAN",47,0)
CHK4Q K DA,DR,DGHOLD,DGBPC,DGPTIT,DIE,DGREC,DGI,DGSCDT,DGSTART,DGTREC,DGOUT
"RTN","DGPTSCAN",48,0)
 Q
"RTN","DGPTSCAN",49,0)
 ;
"RTN","DGPTSCAN",50,0)
CHK701 ;-- will get data from flagchk then stuff into 701 (300 node)
"RTN","DGPTSCAN",51,0)
 G CHK7Q:'$D(^DGPT(DGPTF,70)) S DGREC=^(70)
"RTN","DGPTSCAN",52,0)
 F DGI=10,16:1:24 I $P(DGREC,U,DGI) S DGPTIT($P(DGREC,U,DGI)_";ICD9(")=""
"RTN","DGPTSCAN",53,0)
 D DC,SCAN,ANYPSY,FLAGCHK
"RTN","DGPTSCAN",54,0)
 S DGREC=$S($D(^DGPT(DGPTF,300)):^(300),1:""),DR="",DA=DGPTF,DIE="^DGPT("
"RTN","DGPTSCAN",55,0)
 D GETNUM
"RTN","DGPTSCAN",56,0)
 F DGII=2:1:DGFNUM S DR=DR_$S($P(DG701,U,DGII)]""&($P(DG701,U,DGII)'=$P(DGREC,U,DGII)):"300.0"_DGII_"////"_$P(DG701,U,DGII)_";",'$D(DGBPC(DGII))&($P(DGREC,U,DGII)]"")&($P(DG701,U,DGII)']""):"300.0"_DGII_"////@;",1:"")
"RTN","DGPTSCAN",57,0)
CHK7J I DR]"" D ^DIE
"RTN","DGPTSCAN",58,0)
CHK7Q ;
"RTN","DGPTSCAN",59,0)
 K DGII,DA,DR,DIE,DG701,DGI,DGT,DGREC,DGFNUM,DGSCDT,DGSTART,DGTREC,DGOUT
"RTN","DGPTSCAN",60,0)
 Q
"RTN","DGPTSCAN",61,0)
FLAGCHK ;-- build 701 from 501 responses, kill flags if necessary
"RTN","DGPTSCAN",62,0)
 S DG701="",DGOUT=0
"RTN","DGPTSCAN",63,0)
 F DGI=0:0 S DGI=$O(^DGPT(DGPTF,"M","AM",DGI)) Q:DGI'>0  F DGJ=0:0 S DGJ=$O(^DGPT(DGPTF,"M","AM",DGI,DGJ)) Q:DGJ'>0  I $D(^DGPT(DGPTF,"M",DGJ,300)) S DGHOLD=^(300) D FL1
"RTN","DGPTSCAN",64,0)
 S DGNDIS=$S('$D(^DGPT(DGPTF,70)):0,1:+^(70))
"RTN","DGPTSCAN",65,0)
 I DGNDIS'>0,$D(^DGPT(DGPTF,"M",1,300)) S DGHOLD=^(300) D FL1
"RTN","DGPTSCAN",66,0)
FLAGQ K DGI,DGNDIS
"RTN","DGPTSCAN",67,0)
 Q
"RTN","DGPTSCAN",68,0)
FL1 ;
"RTN","DGPTSCAN",69,0)
 D GETNUM
"RTN","DGPTSCAN",70,0)
 F DGII=2:1:DGFNUM I $P(DGHOLD,U,DGII)]"",$P(DG701,U,DGII)']"" S $P(DG701,U,DGII)=$P(DGHOLD,U,DGII) K DGBPC(DGII)
"RTN","DGPTSCAN",71,0)
FL1Q K DGII,DGHOLD,DGK,DGFNUM
"RTN","DGPTSCAN",72,0)
 Q
"RTN","DGPTSCAN",73,0)
 ;
"RTN","DGPTSCAN",74,0)
SCAN ;-- process DGPTIT array
"RTN","DGPTSCAN",75,0)
 K DGBPC
"RTN","DGPTSCAN",76,0)
 D ISPSY
"RTN","DGPTSCAN",77,0)
 G:'$D(DGPTIT) SCANQ
"RTN","DGPTSCAN",78,0)
 D DC ;return discharge date or current date in DGSCDT
"RTN","DGPTSCAN",79,0)
 S DGI="" F DGJ=0:0 S DGI=$O(DGPTIT(DGI)) Q:DGI=""  F DGK=0:0 S DGK=$O(^DIC(45.89,"ASPL",DGI,DGK)) Q:'DGK  D S1
"RTN","DGPTSCAN",80,0)
SCANQ ;
"RTN","DGPTSCAN",81,0)
 K DGSPEC,DGI,DGJ,DGK
"RTN","DGPTSCAN",82,0)
 Q
"RTN","DGPTSCAN",83,0)
 ;
"RTN","DGPTSCAN",84,0)
S1 ;-- check inactive dates, set flag array
"RTN","DGPTSCAN",85,0)
 G S1Q:'$D(^DIC(45.89,DGK,0)) S X=^(0)
"RTN","DGPTSCAN",86,0)
 I $P(X,U,3)]"",$D(DGSCDT) G S1Q:DGSCDT>$P(X,U,3)
"RTN","DGPTSCAN",87,0)
 S Y=+X
"RTN","DGPTSCAN",88,0)
 G S1Q:'$D(^DIC(45.88,Y,0)) S X=^(0)
"RTN","DGPTSCAN",89,0)
 I $P(X,U,3)]"",$D(DGSCDT) G S1Q:DGSCDT>$P(X,U,3)
"RTN","DGPTSCAN",90,0)
 I $P(X,U,2)]"" S X=$P(X,U,2) F DGII=1:1 S Y=$P(X,",",DGII) Q:'Y  D FLGFIL
"RTN","DGPTSCAN",91,0)
S1Q ;
"RTN","DGPTSCAN",92,0)
 K X,Y,DGII
"RTN","DGPTSCAN",93,0)
 Q
"RTN","DGPTSCAN",94,0)
 ;
"RTN","DGPTSCAN",95,0)
DC ;-- find discharge date
"RTN","DGPTSCAN",96,0)
 S DGSCDT=$S('$D(^DGPT(PTF,70)):DT,^(70):+^(70),1:DT)
"RTN","DGPTSCAN",97,0)
 Q
"RTN","DGPTSCAN",98,0)
 ;
"RTN","DGPTSCAN",99,0)
ENQ ;
"RTN","DGPTSCAN",100,0)
 K DG701,DGSTART,DGI,DGOUT,DGREC,DGBPC,DGPTIT,DGTREC,DGSCDT
"RTN","DGPTSCAN",101,0)
 Q
"RTN","DGPTSCAN",102,0)
 ;
"RTN","DGPTSCAN",103,0)
GETNUM ;-- returns the number of additional questions/flags
"RTN","DGPTSCAN",104,0)
 S DGFNUM=7
"RTN","DGPTSCAN",105,0)
 Q
"RTN","DGPTSCAN",106,0)
 ;
"RTN","DGPTSCAN",107,0)
INIT ;-- init routine
"RTN","DGPTSCAN",108,0)
 S DGOUT=0,(DGTREC,DGHOLD)=""
"RTN","DGPTSCAN",109,0)
 ;-- DGSTART should be set to 2910930 for national release
"RTN","DGPTSCAN",110,0)
 S DGSTART=2910930
"RTN","DGPTSCAN",111,0)
 D DC
"RTN","DGPTSCAN",112,0)
 D LO^DGUTL,HOME^%ZIS
"RTN","DGPTSCAN",113,0)
 K DGPTIT
"RTN","DGPTSCAN",114,0)
INITQ ;
"RTN","DGPTSCAN",115,0)
 Q
"RTN","DGPTSCAN",116,0)
 ;
"RTN","DGPTSCAN",117,0)
ANYPSY ;-- will go through all movements check for PSYCH specialty
"RTN","DGPTSCAN",118,0)
 N DGMOV
"RTN","DGPTSCAN",119,0)
 K DGPSY
"RTN","DGPTSCAN",120,0)
 I '$D(^DGPT(DGPTF,"M")) G ANYQ
"RTN","DGPTSCAN",121,0)
 F DGMOV=0:0 S DGMOV=$O(^DGPT(DGPTF,"M",DGMOV)) Q:'DGMOV  D ISPSY I $D(DGSPEC) S DGPSY=""
"RTN","DGPTSCAN",122,0)
 I '$D(DGPSY) K DGBPC(5),DGBPC(6),DGBPC(7)
"RTN","DGPTSCAN",123,0)
ANYQ ;
"RTN","DGPTSCAN",124,0)
 K DGSPEC
"RTN","DGPTSCAN",125,0)
 Q
"RTN","DGPTSCAN",126,0)
ISPSY ;-- check if losing specialty is in psych range set flag.
"RTN","DGPTSCAN",127,0)
 ;-- if psych then $D(DGSPEC)
"RTN","DGPTSCAN",128,0)
 K DGSPEC
"RTN","DGPTSCAN",129,0)
 I '$D(DGMOV) S DGSPEC="" G ISPSYQ
"RTN","DGPTSCAN",130,0)
 ; -- 850 Fix (BELOW), problem in fee basis when DGMOV is defined but no global ref.
"RTN","DGPTSCAN",131,0)
 I $D(DGMOV) D
"RTN","DGPTSCAN",132,0)
 . S DGSPEC=$P($G(^DGPT(DGPTF,"M",+$G(DGMOV),0)),U,2)
"RTN","DGPTSCAN",133,0)
 . I '$P($G(^DIC(42.4,+$G(DGSPEC),0)),U,4) K DGSPEC
"RTN","DGPTSCAN",134,0)
ISPSYQ Q
"RTN","DGPTSCAN",135,0)
 ;
"RTN","DGPTSCAN",136,0)
FLGFIL ;-- fill DGBPC with correct flag.
"RTN","DGPTSCAN",137,0)
 I '$D(DGSPEC),Y>4,Y<8 G FLGFILQ
"RTN","DGPTSCAN",138,0)
 S DGBPC(Y)=""
"RTN","DGPTSCAN",139,0)
FLGFILQ ;
"RTN","DGPTSCAN",140,0)
 Q
"RTN","DGPTSCAN",141,0)
 ;
"RTN","DGPTSCAN",142,0)
ANYSC(PTF) ;-- will go through all movements check for sc treatment
"RTN","DGPTSCAN",143,0)
 ;  INPUT - ptf record ien to check
"RTN","DGPTSCAN",144,0)
 ;  OUTPUT- 1 sc treatment, 0 no sc treatment
"RTN","DGPTSCAN",145,0)
 N DGMOV,RESULT
"RTN","DGPTSCAN",146,0)
 S RESULT=0
"RTN","DGPTSCAN",147,0)
 I '$D(^DGPT(PTF,"M")) G ANYSCQ
"RTN","DGPTSCAN",148,0)
 S DGMOV=0 F  S DGMOV=$O(^DGPT(PTF,"M",DGMOV)) Q:'DGMOV  I $P(^(DGMOV,0),U,18)=1 S RESULT=1 Q
"RTN","DGPTSCAN",149,0)
ANYSCQ ;
"RTN","DGPTSCAN",150,0)
 Q RESULT
"RTN","DGPTSCAN",151,0)
 ;
"RTN","DGPTSUDO")
0^22^B23608581^B23038460
"RTN","DGPTSUDO",1,0)
DGPTSUDO ;ALB/MTC - PTF UPDATE TRANSFER DRG NODE;30 MAR 89@09 ;3/12/02 12:14pm
"RTN","DGPTSUDO",2,0)
 ;;5.3;Registration;**441,510,478,785,850**;Aug 13, 1993;Build 171
"RTN","DGPTSUDO",3,0)
 ;;ADL;Update for CSV Project;;Mar 28, 2003
"RTN","DGPTSUDO",4,0)
UTIL S ^UTILITY($J,"T",(9999999.999999-$E(I,1,14)))=K_"^"_$S($D(^DIC(45.7,J,0)):$P(^(0),"^",2),1:0)_"^"_X_"^^"_$P(Y,"^",8)
"RTN","DGPTSUDO",5,0)
 Q
"RTN","DGPTSUDO",6,0)
SUDO1 ;
"RTN","DGPTSUDO",7,0)
 N DGPOA,DGDXPOA
"RTN","DGPTSUDO",8,0)
 K ^UTILITY($J,"T"),T
"RTN","DGPTSUDO",9,0)
 F I=0:0 S I=$O(^DGPM("ATS",DFN,DGPMCA,I)) Q:I'>0  D
"RTN","DGPTSUDO",10,0)
 . S J=$O(^DGPM("ATS",DFN,DGPMCA,I,0)) I J D
"RTN","DGPTSUDO",11,0)
 .. S K=+$O(^(J,0)) I $D(^DGPM(K,0)) S Y=^(0),X=$S($D(^("PTF")):$P(^("PTF"),"^",2),1:"") I $D(^DGPT(PTF,"M",+X,0))!($D(^DGPM("APHY",+$P(Y,"^",14),K))) D UTIL
"RTN","DGPTSUDO",12,0)
 Q:'$D(^UTILITY($J,"T"))
"RTN","DGPTSUDO",13,0)
VARS I '$D(^UTILITY($J,"T")) G SUDO1
"RTN","DGPTSUDO",14,0)
 S (DGPRD,DGNXD)=$O(^UTILITY($J,"T",0)) G Q:DGPRD'>0 S T(DGPRD)=^(DGPRD),(DGEXP,DGDMS,DGTRS,DGTLOS,DGLOS,DGDAT)=0,DGPT(70)=$S($D(^DGPT(PTF,70)):^(70),1:""),SEX=$P(^DPT(DFN,0),U,2),DOB=$P(^(0),U,3)
"RTN","DGPTSUDO",15,0)
 S (DGDX,DGNSV,DGPSV,DGPOA,DGDXPOA)=""
"RTN","DGPTSUDO",16,0)
 N EFFDATE,DGTEMP,IMPDATE
"RTN","DGPTSUDO",17,0)
 D EFFDATE^DGPTIC10(PTF,,"10D")
"RTN","DGPTSUDO",18,0)
 K DGSURG,DGPROC S (DGSURG,DGPROC)=U
"RTN","DGPTSUDO",19,0)
 ;
"RTN","DGPTSUDO",20,0)
 ;-- build DGSURG array
"RTN","DGPTSUDO",21,0)
 F I=0:0 S I=$O(^DGPT(PTF,"S",I)) Q:I'>0  S X=$P(^(I,0),U,8,12) D
"RTN","DGPTSUDO",22,0)
 . I X]"",X'="^^^^" S Y=+^(0),Y=$S('$D(DGSURG(Y)):Y,Y[".":Y_I_1,1:Y_".0000"_I_1),DGSURG(Y)="" D
"RTN","DGPTSUDO",23,0)
 ..F J=1:1:5 I $P(X,U,J)]"" S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",$P(X,U,J),EFFDATE) I +DGPTTMP>0 S DGSURG(Y)=DGSURG(Y)_$P(X,U,J)_U
"RTN","DGPTSUDO",24,0)
 ;
"RTN","DGPTSUDO",25,0)
 ;-- build DGPROC array
"RTN","DGPTSUDO",26,0)
 F I=0:0 S I=$O(^DGPT(PTF,"P",I)) Q:I'>0  S X=$P(^(I,0),U,5,9) D
"RTN","DGPTSUDO",27,0)
 . I X]"",X'="^^^^" S Y=+^(0),Y=$S('$D(DGPROC(Y)):Y,Y[".":Y_I_1,1:Y_".0000"_I_1),DGPROC(Y)="" D
"RTN","DGPTSUDO",28,0)
 .. F J=1:1:5 I $P(X,U,J)]"" S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",$P(X,U,J),EFFDATE) I +DGPTTMP>0 S DGPROC(Y)=DGPROC(Y)_$P(X,U,J)_U
"RTN","DGPTSUDO",29,0)
 ;
"RTN","DGPTSUDO",30,0)
 I $D(^DGPT(PTF,"401P")),+DGPT(70),+DGPT(70)<2871000 S X=^("401P") I X]"",X'="^^^^" D
"RTN","DGPTSUDO",31,0)
 . F I=1:1:5 I $P(X,U,I)]"" S DGPTTMP=$$ICDDATA^ICDXCODE("PROC",$P(X,U,I),EFFDATE) I +EFFDATE>0 S DGPROC=DGPROC_$P(X,U,I)_U,DG401P=1
"RTN","DGPTSUDO",32,0)
 ;
"RTN","DGPTSUDO",33,0)
SUDO2 ;
"RTN","DGPTSUDO",34,0)
 S DGNXD=$O(^UTILITY($J,"T",DGNXD))
"RTN","DGPTSUDO",35,0)
 G ONE:DGNXD'>0 S T(DGNXD)=^UTILITY($J,"T",DGNXD),I1=+$P(T(DGNXD),U,3),DGDOC=$P(T(DGNXD),U,5)
"RTN","DGPTSUDO",36,0)
 F I=DGPRD,DGNXD S L1(I)=$P(T(I),U,2)
"RTN","DGPTSUDO",37,0)
 G:L1(DGPRD)=L1(DGNXD) SWCH
"RTN","DGPTSUDO",38,0)
 S DGPSV=$S($D(^DIC(42.4,+L1(DGPRD),0)):$P(^(0),U,3),1:""),DGNSV=$S($D(^DIC(42.4,+L1(DGNXD),0)):$P(^(0),U,3),1:"")
"RTN","DGPTSUDO",39,0)
 G:DGPSV']""!(DGNSV']"") SWCH
"RTN","DGPTSUDO",40,0)
 I "^I^SCI^B^NH^D^RE^"'[(U_DGPSV_U),$D(^DGPT(PTF,"M",I1,0)) D
"RTN","DGPTSUDO",41,0)
 . S DGNODE=^(0)
"RTN","DGPTSUDO",42,0)
 . S DGPOA=$G(^DGPT(PTF,"M",I1,82))
"RTN","DGPTSUDO",43,0)
 . D BLD I DGPSV'=DGNSV D DRG S DGSURG=U,DGDX="",DGLOS=0 I '$D(DG401P) S DGPROC=U
"RTN","DGPTSUDO",44,0)
SWCH ;
"RTN","DGPTSUDO",45,0)
 K DGLEV,DGPAS
"RTN","DGPTSUDO",46,0)
 S DGPRD=DGNXD,T(DGPRD)=T(DGNXD),(DGNSV,DGPSV)=""
"RTN","DGPTSUDO",47,0)
 G SUDO2
"RTN","DGPTSUDO",48,0)
 ;
"RTN","DGPTSUDO",49,0)
BLD ;
"RTN","DGPTSUDO",50,0)
 F I=9:-1:5 I $P(DGNODE,U,I)]"" S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",$P(DGNODE,U,I),EFFDATE) I +DGPTTMP>0 S DGDX=$P(DGNODE,U,I)_U_DGDX
"RTN","DGPTSUDO",51,0)
 S DGDXPOA=""
"RTN","DGPTSUDO",52,0)
 I $G(DGPOA)'="" F I=5:-1:1 S DGDXPOA=$P(DGPOA,U,I)_U_$G(DGDXPOA)
"RTN","DGPTSUDO",53,0)
 ;
"RTN","DGPTSUDO",54,0)
 S:$L(DGDX)>200 DGDX=$P(DGDX,U,1,30)
"RTN","DGPTSUDO",55,0)
 S DGLEV=$P(DGNODE,U,3),DGPAS=$P(DGNODE,U,4),X1=DGNXD,X2=DGPRD D ^%DTC S X=$S(X>0:X,1:1)-DGLEV-DGPAS,DGLOS=DGLOS+X
"RTN","DGPTSUDO",56,0)
 N I,J,X,Y,Z
"RTN","DGPTSUDO",57,0)
 F I=0:0 S I=$O(DGSURG(I)) Q:I'>0!(I\1>(DGNXD\1))  D SU
"RTN","DGPTSUDO",58,0)
 I '$D(DG401P) F I=0:0 S I=$O(DGPROC(I)) Q:I'>0!((I\1)>(DGNXD\1))  D
"RTN","DGPTSUDO",59,0)
 .S X=DGPROC(I)
"RTN","DGPTSUDO",60,0)
 .F J=1:1:5 S Y=$P(X,U,J) Q:Y=""  D
"RTN","DGPTSUDO",61,0)
 ..Q:$L(DGPROC)>240
"RTN","DGPTSUDO",62,0)
 ..S Z=U_Y_U
"RTN","DGPTSUDO",63,0)
 ..S DGPROC=DGPROC_Y_U
"RTN","DGPTSUDO",64,0)
 ..S DGPROC(J)=Y
"RTN","DGPTSUDO",65,0)
 ..K DGPROC(I)
"RTN","DGPTSUDO",66,0)
 Q
"RTN","DGPTSUDO",67,0)
SU ;
"RTN","DGPTSUDO",68,0)
 I I<DGNXD!(DGPSV=DGNSV)!(DGPSV="S") D
"RTN","DGPTSUDO",69,0)
 .S X=DGSURG(I)
"RTN","DGPTSUDO",70,0)
 .F J=1:1:5 S Y=$P(X,U,J) Q:Y=""  D
"RTN","DGPTSUDO",71,0)
 ..Q:$L(DGSURG)>240
"RTN","DGPTSUDO",72,0)
 ..S Z=U_Y_U
"RTN","DGPTSUDO",73,0)
 ..S DGSURG=DGSURG_Y_U
"RTN","DGPTSUDO",74,0)
 ..S ICDSURG(J)=Y
"RTN","DGPTSUDO",75,0)
 ..K DGSURG(I)
"RTN","DGPTSUDO",76,0)
 Q
"RTN","DGPTSUDO",77,0)
 ;
"RTN","DGPTSUDO",78,0)
DRG ;
"RTN","DGPTSUDO",79,0)
 S AGE=DGPRD-DOB\10000,DGTLOS=DGTLOS+DGLOS,DRG=""
"RTN","DGPTSUDO",80,0)
 D ^DGPTICD
"RTN","DGPTSUDO",81,0)
 S DGDOC=$S($D(^VA(200,+DGDOC)):DGDOC,1:"")
"RTN","DGPTSUDO",82,0)
 N DGFDA,DGMSG
"RTN","DGPTSUDO",83,0)
 S DGFDA(45.02,I1_","_PTF_",",20)=DRG
"RTN","DGPTSUDO",84,0)
 S DGFDA(45.02,I1_","_PTF_",",21)=DGPSV
"RTN","DGPTSUDO",85,0)
 S DGFDA(45.02,I1_","_PTF_",",22)=DGNXD
"RTN","DGPTSUDO",86,0)
 S DGFDA(45.02,I1_","_PTF_",",23)=DGLOS
"RTN","DGPTSUDO",87,0)
 S DGFDA(45.02,I1_","_PTF_",",24)=DGDOC
"RTN","DGPTSUDO",88,0)
 S DGFDA(45.02,I1_","_PTF_",",25)=DGTLOS
"RTN","DGPTSUDO",89,0)
 D FILE^DIE("","DGFDA","DGMSG")
"RTN","DGPTSUDO",90,0)
 Q
"RTN","DGPTSUDO",91,0)
 ;
"RTN","DGPTSUDO",92,0)
ONE ;
"RTN","DGPTSUDO",93,0)
 S DGNXD=$S(+$P(^DGPT(PTF,"M",1,0),U,10):$P(^(0),U,10),1:DT),L1(DGNXD)=$P(^(0),U,2) S:'$D(T(DGNXD)) T(DGNXD)=T(DGPRD),DGDOC=$P(T(DGNXD),U,5)
"RTN","DGPTSUDO",94,0)
 S:$P(DGPT(70),U,3)>5 DGEXP=1 S:$P(DGPT(70),U,3)=4 DGDMS=1 S:$P(DGPT(70),U,13) DGTRS=1
"RTN","DGPTSUDO",95,0)
 I L1(DGNXD),$D(^DIC(42.4,+L1(DGNXD),0)) S I1=1,DGPSV=$P(^(0),U,3),DGADM=$P(^DGPT(PTF,0),U,2)
"RTN","DGPTSUDO",96,0)
 S DGNODE=$S($D(^DGPT(PTF,"M",1,0)):^(0),1:"")
"RTN","DGPTSUDO",97,0)
 S DGPOA=$G(^DGPT(PTF,"M",1,82))
"RTN","DGPTSUDO",98,0)
 D BLD
"RTN","DGPTSUDO",99,0)
 I $D(^DGPT("AADA",DGADM,PTF)) S I=$S($P(DGPT(70),U,10):$P(DGPT(70),U,10),$P(DGPT(70),U,11):$P(DGPT(70),U,11),1:"") I I]"" S DGDX=I_U_DGDX
"RTN","DGPTSUDO",100,0)
 S I1=1 D DRG,^DGPTSUD1
"RTN","DGPTSUDO",101,0)
Q ;
"RTN","DGPTSUDO",102,0)
 K DGDMS,DGDOC,DGDX,DGEXP,DGLEV,DGLOS,DGNODE,DGNSV,DGNXD,DGPAS,DGPRD,DGPROC,DGPSV,DGPT,DGSURG,ICDSURG,DGTLOS,DGTRS,DG401P,I,I1,I2,J,L1,T,X,X1,X2,Y Q
"RTN","DGPTSUDO",103,0)
 ;
"RTN","DGPTTS")
0^63^B17997399^B17615190
"RTN","DGPTTS",1,0)
DGPTTS ;ALB/AS/ADL - UPDATE FACILITY TREATING SPECIALTY/501 MOVEMENTS IN PTF ;1/30/90@12
"RTN","DGPTTS",2,0)
 ;;5.3;Registration;**26,61,164,510,850**;Aug 13, 1993;Build 171
"RTN","DGPTTS",3,0)
 ;;ADL;Update for CSV Project;;Mar 28, 2003
"RTN","DGPTTS",4,0)
 ;needs to be done - OERR link
"RTN","DGPTTS",5,0)
 ;
"RTN","DGPTTS",6,0)
EV ;entry point from event driver
"RTN","DGPTTS",7,0)
 D EV^DGPTTS0
"RTN","DGPTTS",8,0)
 Q
"RTN","DGPTTS",9,0)
 ;
"RTN","DGPTTS",10,0)
DEL ;facility treating specialty has been deleted from ^DGPM
"RTN","DGPTTS",11,0)
 N EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPTTS",12,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTTS",13,0)
 S DGPTFP=^UTILITY("DGPM",$J,6,DGMV,"PTFP")
"RTN","DGPTTS",14,0)
 G DEL1:'$D(^DGPT(PTF,"M",+$P(DGPTFP,"^",2),0))
"RTN","DGPTTS",15,0)
 K DA S DGREC=^(0),DGEX=$S($D(^(300)):^(300),1:""),DA=$P(DGPTFP,"^",2),DA(1)=PTF,DIK="^DGPT("_DA(1)_",""M""," D ^DIK K DA
"RTN","DGPTTS",16,0)
 S DGMSG="" F X=5:1:15 I X'=10 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DGREC,U,X),EFFDATE),DGMSG=DGMSG_$S(+DGPTTMP>0:$P(DGPTTMP,U,2)_", ",1:"")
"RTN","DGPTTS",17,0)
 G DEL1:DGMSG']"" S ^UTILITY($J,"DEL",$P(DGPTFP,"^",2))=DGMSG
"RTN","DGPTTS",18,0)
 ;-- save expanded codes 
"RTN","DGPTTS",19,0)
 S DG1=""
"RTN","DGPTTS",20,0)
 I DGEX]"" F X=2:1:7 S:$P(DGEX,U,X)]"" $P(DG1,U,X)=$P(DGEX,U,X)
"RTN","DGPTTS",21,0)
 S:DG1]"" ^UTILITY($J,300,$P(DGPTFP,U,2))=DG1
"RTN","DGPTTS",22,0)
 K DGI
"RTN","DGPTTS",23,0)
 S Y=$P(DGREC,U,10) X ^DD("DD") S DGMSG="501 movement of "_$P(^DPT(DFN,0),U,1)_" of "_Y_" losing specialty "_$P(^DIC(42.4,$P(DGREC,U,2),0),U,1)_" was deleted by "_$P(^VA(200,DUZ,0),U,1)_" it contained diag "_$E(DGMSG,1,120)
"RTN","DGPTTS",24,0)
 S DGMSG1="501 Movement Deletion" D MSG^DGPTMSG1
"RTN","DGPTTS",25,0)
 ;
"RTN","DGPTTS",26,0)
DEL1 S X=^DPT(DFN,0),DGMSG="A transfer between treating specialties for "_$P(X,U,1)_" ("_$P(X,U,9)_") on "_$TR($$FMTE^XLFDT(+DGMVP,"5DF")," ","0")_" was deleted by "_$P(^VA(200,+DUZ,0),U)_".  Please verify PTF #"_PTF_"."
"RTN","DGPTTS",27,0)
 S DGMSG1="Facility Treating Specialty Deletion" D MSG^DGPTMSG1
"RTN","DGPTTS",28,0)
 ;
"RTN","DGPTTS",29,0)
 S DR="" I $P(DGPTFP,"^",3)=1 S DGREC=^DGPT(PTF,"M",1,0) F X=5:1:15 I X'=10 S:$P(DGREC,U,X) DR=DR_X_"///@;"
"RTN","DGPTTS",30,0)
 I DR]"" S DA(1)=PTF,DIE="^DGPT("_DA(1)_",""M"",",DA=1 D ^DIE
"RTN","DGPTTS",31,0)
 ;-- clean up expanded code data
"RTN","DGPTTS",32,0)
 S DR="" I $P(DGPTFP,U,3)=1,$D(^DGPT(PTF,"M",1,300)) S DGREC=^(300) F X=2:1:7 S:$P(DGREC,U,X) DR=DR_"300.0"_X_"///@;"
"RTN","DGPTTS",33,0)
 I DR]"" S DA=1,DA(1)=PTF D ^DIE
"RTN","DGPTTS",34,0)
 K DGPTFP,DGREC,DA,DR,DIE,Y,X,DGEX Q
"RTN","DGPTTS",35,0)
 ;
"RTN","DGPTTS",36,0)
LE ;entry point for PTF record update
"RTN","DGPTTS",37,0)
 I '$D(ZTQUEUED),'$G(DGQUIET) W !,"Updating PTF Record #",PTF,"..."
"RTN","DGPTTS",38,0)
 K ^UTILITY($J,"T")
"RTN","DGPTTS",39,0)
 S DGPREV=$O(^DGPM("ATS",DFN,DGPMCA,0)),DGDT=$S($D(^DGPM(+$P(DGPMAN,"^",17),0)):+^(0),1:"")
"RTN","DGPTTS",40,0)
 D NOTS:'DGPREV
"RTN","DGPTTS",41,0)
 I DGPREV S:DGDT T(DGDT)="" D ^DGPTTS1,VARS^DGPTSUDO
"RTN","DGPTTS",42,0)
 K DGDR,L,MN,DIE,DIC,DIS,D,J,ADM,%DT,DR,I1,LL,NOW,T,TRN,ZTSK,L1,L2,T1,T2,TD,TDD,I,PTN,NTR,DA,NX,NXX,PR,DGTNX,DGTEMP,DGTPR,LOL,LOP,Z,Y,A,B,C,DGAD,DGDEL,X1,X2,^UTILITY($J,"T"),DGTR,DGREC,DGDT1,DGTLOS
"RTN","DGPTTS",43,0)
 F DA=0:0 S DA=$O(^DGPT(PTF,"P",DA)) Q:DA'>0  I $D(^DGPT(PTF,"P",DA,0)) D BS^DGPTFM6 S DIE="^DGPT("_PTF_",""P"",",DA(1)=PTF,DR="1///"_DGMOVM D ^DIE
"RTN","DGPTTS",44,0)
 D EN^DGPTTS3 I '$D(ZTQUEUED),'$G(DGQUIET) W "completed."
"RTN","DGPTTS",45,0)
Q K DGDT,DA,DGP0,DGMSG,DGPREV,DGREC,DGMOVM,DIC,DIE,DR,V,X,Y Q
"RTN","DGPTTS",46,0)
 ;
"RTN","DGPTTS",47,0)
NTR S DGMSG="A Transfer on "_$TR($$FMTE^XLFDT(+DGMVA,"5DF")," ","0")_" was entered before the latest transfer.  Please verify PTF #"_PTF_"."
"RTN","DGPTTS",48,0)
 S DGMSG1="New Facility Treating Specialty" D MSG^DGPTMSG1
"RTN","DGPTTS",49,0)
 Q
"RTN","DGPTTS",50,0)
 ;
"RTN","DGPTTS",51,0)
NOTS ;
"RTN","DGPTTS",52,0)
 S DIE="^DGPT("_PTF_",""M"",",DA(1)=PTF,DA=1,DR="2///@" D ^DIE
"RTN","DGPTTS",53,0)
 F DA=0:0 S DA=$O(^DGPT(PTF,"P",DA)) Q:DA'>0  I $D(^DGPT(PTF,"P",DA,0)) S DIE="^DGPT("_PTF_",""P"",",DA(1)=PTF,DR="1///@" D ^DIE
"RTN","DGPTTS",54,0)
 Q
"RTN","DGPTTS",55,0)
 ;
"RTN","DGPTTS",56,0)
DGDT ; -- get first ts before dc date
"RTN","DGPTTS",57,0)
 N X S X=$P(9999999.999999-DGDT,".")
"RTN","DGPTTS",58,0)
 F DGPREV=0:0 S DGPREV=+$O(^DGPM("ATS",DFN,DGPMCA,DGPREV)) Q:$P(DGPREV,".")'=X
"RTN","DGPTTS",59,0)
 Q
"RTN","DGPTTS",60,0)
 ;
"RTN","DGPTTS",61,0)
CA ; -- determine CA info
"RTN","DGPTTS",62,0)
 S DGPMCA=$S($P(DGPMP,"^",14):$P(DGPMP,"^",14),1:$P(DGPMA,"^",14))
"RTN","DGPTTS",63,0)
 S DGPMAN=$S($D(^DGPM(+DGPMCA,0)):^(0),1:""),DGMVT=$S($P(DGPMP,"^",2):$P(DGPMP,"^",2),1:$P(DGPMA,"^",2)),PTF=$P(DGPMAN,"^",16),DGADM=+DGPMAN
"RTN","DGPTTS",64,0)
 Q
"RTN","DGPTTS1")
0^62^B23805966^B23751705
"RTN","DGPTTS1",1,0)
DGPTTS1 ;ALB/AS/ADL - FACILITY TREATING SPECIALTY AND 501 MOVEMENTS, cont. ;11/28/89 @12
"RTN","DGPTTS1",2,0)
 ;;5.3;Registration;**26,64,418,510,478,850**;Aug 13, 1993;Build 171
"RTN","DGPTTS1",3,0)
 ;;ADL;Update for CSV Project;;Mar 28, 2003
"RTN","DGPTTS1",4,0)
 ;
"RTN","DGPTTS1",5,0)
 ;build DGA array w/patient's last treat spec of the day as of 11:59 pm
"RTN","DGPTTS1",6,0)
 ;
"RTN","DGPTTS1",7,0)
LOOP ;
"RTN","DGPTTS1",8,0)
 S DGNEXT=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV))
"RTN","DGPTTS1",9,0)
 F DGNEXT=DGNEXT:0 Q:($P(DGPREV,".")'=$P(DGNEXT,"."))!('DGNEXT)  S DGNEXT=$O(^DGPM("ATS",DFN,DGPMCA,DGNEXT))
"RTN","DGPTTS1",10,0)
 S X=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV,0)),DGA(9999999.999999-$E(DGPREV,1,14))=$S($D(^DIC(45.7,+X,0)):$P(^(0),"^",2),1:0)_"^"_$O(^DGPM("ATS",DFN,DGPMCA,DGPREV,X,0)) I DGNEXT>0 S DGPREV=DGNEXT G LOOP
"RTN","DGPTTS1",11,0)
 S DGPREV=0,X=$S($D(^DIC(42,+$P(DGPMAN,"^",6),0)):$P(^(0),"^",3),1:0) I "^NH^D^"[(U_X_U)!($P(^(0),"^",17)=1) D ASIH^DGPTTS2 ;p-418
"RTN","DGPTTS1",12,0)
 ;
"RTN","DGPTTS1",13,0)
LOOP1 ; -- compare specs between mvts ; sort out xfr if spec did't change
"RTN","DGPTTS1",14,0)
 S DGSAVE=DGPREV
"RTN","DGPTTS1",15,0)
 S DGPREV=$O(DGA(DGPREV)),DGNEXT=$O(DGA(DGPREV)),X=+DGA(DGPREV) I DGNEXT S Y=+DGA(DGNEXT) I (X=Y)!((X=70)&(Y=71))!((X=71)&(Y=70)) K DGA(DGNEXT) S DGPREV=DGSAVE I $O(DGA(DGPREV))>0 G LOOP1
"RTN","DGPTTS1",16,0)
 ;
"RTN","DGPTTS1",17,0)
 ; -- is mvt during adm
"RTN","DGPTTS1",18,0)
 I DGPREV<+DGPMAN!($P(DGPREV,".")'<$S(DGDT:$P(+DGDT,"."),1:9999999)) S (DG1,DG2)=+$P(DGA(DGPREV),"^",2) D DEL:$S('$D(^DGPM(DG1,"PTF")):0,1:$P(^("PTF"),"^",2)]"") G LOOPQ
"RTN","DGPTTS1",19,0)
 ;
"RTN","DGPTTS1",20,0)
 ; build ^UTILITY for mvts whose spec changed
"RTN","DGPTTS1",21,0)
 S X=$S($D(^DGPM($P(DGA(DGPREV),"^",2),"PTF")):^("PTF"),1:""),^UTILITY($J,"T",DGPREV)=$P(DGA(DGPREV),"^",2)_"^"_+DGA(DGPREV)_"^"_$P(X,"^",2)_"^"_$P(X,"^",3)_"^"_$S($D(^DGPM($P(DGA(DGPREV),"^",2),0)):$P(^(0),"^",8),1:"")
"RTN","DGPTTS1",22,0)
LOOPQ I $O(DGA(DGPREV)) G LOOP1
"RTN","DGPTTS1",23,0)
 ;
"RTN","DGPTTS1",24,0)
 ; look for mvts in ^DGPM that have a PTF mvt # entry
"RTN","DGPTTS1",25,0)
 ; but not in ^UTILITY.  If any are found, delete from ^DGPT.
"RTN","DGPTTS1",26,0)
 F DGPREV=0:0 S DGPREV=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV)) Q:DGPREV'>0  S X=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV,0)),(DG1,DG2)=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV,+X,0)) I $D(^DGPM(+DG1,"PTF")),$P(^("PTF"),"^",2)]"" D DEL
"RTN","DGPTTS1",27,0)
 ;
"RTN","DGPTTS1",28,0)
 K Y S Y=+$O(^DGPM("APHY",DGPMCA,0)) I $D(^DGPM(Y,0)) S Y(0)=^(0),Y("PTF")=$S($D(^("PTF")):^("PTF"),1:"")
"RTN","DGPTTS1",29,0)
 I $D(Y)>10 S T("ADM")=Y_"^"_$S($D(^DIC(45.7,+$P(Y(0),"^",9),0)):$P(^(0),"^",2),1:"")_"^^"_$P(Y("PTF"),"^",3)_"^"_$P(Y(0),"^",8) K Y
"RTN","DGPTTS1",30,0)
 ;
"RTN","DGPTTS1",31,0)
 S DGDEL=$O(^UTILITY($J,"T",0))
"RTN","DGPTTS1",32,0)
 I DGDEL S T(DGDEL)=^(DGDEL),DG1=$P(T(DGDEL),"^",3) I DG1 S T(DGDEL)=$P(T(DGDEL),U,1,2),DGREC=$S($D(^DGPT(PTF,"M",DG1,0)):^(0),1:"") D MSG K DA S DIK="^DGPT("_PTF_",""M"",",DA(1)=PTF,DA=DG1 D ^DIK K DA S ^UTILITY($J,"T",DGDEL)=$P(T(DGDEL),U,1,2)
"RTN","DGPTTS1",33,0)
 K DGA K:$D(T(+DGDT)) T(DGDT)
"RTN","DGPTTS1",34,0)
 S DGAD=+DGPMAN F I=0:0 S I=$O(^UTILITY($J,"T",I)) Q:I'>0  S DGAD=I
"RTN","DGPTTS1",35,0)
 S DGREC1=$S($D(^DGPT(PTF,"M",1,0)):^(0),1:"")
"RTN","DGPTTS1",36,0)
 S DGREC=$S($D(^UTILITY($J,"T",DGAD)):^(DGAD),$D(T("ADM")):T("ADM"),1:"")
"RTN","DGPTTS1",37,0)
 I DGREC,$D(^DGPM(+DGREC,0)) D
"RTN","DGPTTS1",38,0)
 .N DGFDA,DGMSG
"RTN","DGPTTS1",39,0)
 .S DGFDA(405,(+DGREC)_",",53)=1
"RTN","DGPTTS1",40,0)
 .D FILE^DIE("","DGFDA","DGMSG")
"RTN","DGPTTS1",41,0)
 S DGREC=$P(DGREC,U,2)
"RTN","DGPTTS1",42,0)
 I DGDT W:'DGREC&'$D(ZTQUEUED) !,"No Treating Specialty Transfers",! S I1=1,DIE="^DGPT(",DA=PTF,DR="71///"_DGREC D ^DIE:DGREC S PR=DGAD,NX=DGDT D LOL^DGPTTS2 I $P(DGREC1,U,3,4)'=(LOL_U_LOP) S DR="3///"_LOL_";4///"_LOP,I1=1 D TD5^DGPTTS2 K DR
"RTN","DGPTTS1",43,0)
 I 'DGDT S PR=DGAD,NX=DT,I1=1 D LOL^DGPTTS2 I $P(DGREC1,U,2,4)'=(DGREC_U_LOL_U_LOP) S DR="3///"_LOL_";4///"_LOP_$S(DGREC:";2///"_DGREC,1:"") D TD5^DGPTTS2
"RTN","DGPTTS1",44,0)
 K DGSAVE,DR,DGREC1 D ^DGPTTS2 Q
"RTN","DGPTTS1",45,0)
DEL Q:$D(^UTILITY($J,"T",(9999999.999999-$E(DGPREV,1,14))))
"RTN","DGPTTS1",46,0)
 S DG1=$P(^DGPM(DG1,"PTF"),"^",2),DGREC=$S($D(^DGPT(PTF,"M",+DG1,0)):^(0),1:"") Q:DGREC']""  D MSG K DA S DIK="^DGPT("_PTF_",""M"",",DA(1)=PTF,DA=DG1 D ^DIK K DA
"RTN","DGPTTS1",47,0)
 S DA=DG2,DR="52///@;53///@",DIE="^DGPM(" D ^DIE Q
"RTN","DGPTTS1",48,0)
MSG ;
"RTN","DGPTTS1",49,0)
 N EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPTTS1",50,0)
 D EFFDATE^DGPTIC10(PTF)
"RTN","DGPTTS1",51,0)
 S DGMSG="" F X=5:1:15 I X'=10 S DGPTTMP=$$ICDDATA^ICDXCODE("DIAG",+$P(DGREC,U,X),EFFDATE),DGMSG=DGMSG_$S(+DGPTTMP>0:$P(DGPTTMP,U,2)_", ",1:"")
"RTN","DGPTTS1",52,0)
 Q:DGMSG']""  S ^UTILITY($J,"DEL",DG1)=DGMSG
"RTN","DGPTTS1",53,0)
 ;-- save expanded codes 
"RTN","DGPTTS1",54,0)
 S DGMSG1=""
"RTN","DGPTTS1",55,0)
 I $D(^DGPT(PTF,"M",+DG1,300)) S DGEX=^(300) F X=2:1:7 S:$P(DGEX,U,X)]"" $P(DGMSG1,U,X)=$P(DGEX,U,X)
"RTN","DGPTTS1",56,0)
 S:DGMSG1]"" ^UTILITY($J,300,DG1)=DGMSG1
"RTN","DGPTTS1",57,0)
 K DGMSG1
"RTN","DGPTTS1",58,0)
 S Y=$P(DGREC,U,10) X ^DD("DD") S DGMSG="501 movement of "_$P(^DPT(DFN,0),U,1)_" of "_Y_" losing specialty "_$P(^DIC(42.4,$P(DGREC,U,2),0),U,1)_" was deleted by "_$P(^VA(200,DUZ,0),U,1)_" it contained diag "_$E(DGMSG,1,120)
"RTN","DGPTTS1",59,0)
 S:'$D(DGPMAN) DGPMAN=^DGPM(DGPMCA,0) D MSG^DGPTMSG1
"RTN","DGPTTS1",60,0)
 K DGEX Q
"RTN","DGPTUTL")
0^31^B22849752^B21993815
"RTN","DGPTUTL",1,0)
DGPTUTL ;ALB/AS - PTF UTILITY ROUTINE ;8/14/03 11:35am
"RTN","DGPTUTL",2,0)
 ;;5.3;Registration;**26,114,234,466,544,850**;Aug 13, 1993;Build 171
"RTN","DGPTUTL",3,0)
D I $L(Y)'<7 S %=$E(Y,4,5)*3,Y=$E("JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC",%-2,%)_" "_$S($E(Y,6,7):$J(+$E(Y,6,7),2)_",",1:"")_($E(Y,1,3)+1700)_$S(Y[".":" "_$E(Y_0,9,10)_":"_$E(Y_"000",11,12),1:"") Q
"RTN","DGPTUTL",4,0)
 S Y="" Q
"RTN","DGPTUTL",5,0)
PM ;sets variables from ^DGPM global
"RTN","DGPTUTL",6,0)
 S DGPMCA=$O(^DGPM("APTF",PTF,0)),DGPMAN=$S($D(^DGPM(+DGPMCA,0)):^(0),1:"") Q
"RTN","DGPTUTL",7,0)
MT ;Determine and store Means Test Indicator
"RTN","DGPTUTL",8,0)
 ;-- get eligibility code
"RTN","DGPTUTL",9,0)
 S DGZEC=$P($G(^DGPT(PTF,101)),U,8),DGZEC=$S($D(^DIC(8,+DGZEC,0)):^(0),1:"") I $P(DGZEC,U,5)="N" S DGX="N" G DIE
"RTN","DGPTUTL",10,0)
 ;-- admit prior to 7/1/86 is an X
"RTN","DGPTUTL",11,0)
 I DGADM<2860701 S DGX="X" G DIE
"RTN","DGPTUTL",12,0)
 ;--
"RTN","DGPTUTL",13,0)
 I $D(^DGPT(PTF,101)),$D(^DIC(45.1,+^(101),0)),$P(^(0),"^",4) S DGX="X" G DIE
"RTN","DGPTUTL",14,0)
 I $P(^DG(43,1,0),U,21),DGADM]"",$D(^DIC(42,+$P(DGPMAN,U,6),0)),$P(^(0),U,3)="D" S DGX="X" G DIE
"RTN","DGPTUTL",15,0)
 S DGT=$P($G(^DGPT(PTF,70)),"."),DGZ1=$$LST^DGMTU(DFN,DGT) G AS:'DGZ1
"RTN","DGPTUTL",16,0)
 ;-- sc < 50 %, %O non comp, movements are sc
"RTN","DGPTUTL",17,0)
 I $P(DGZEC,U,4)=3,$$SC^DGMTR(DFN),$$ANYSC^DGPTSCAN(PTF) S DGX="AS" G DIE
"RTN","DGPTUTL",18,0)
 ;-- sc <50 %, %0 non-comp, no movement sc, mt =a
"RTN","DGPTUTL",19,0)
 I $P(DGZEC,U,4)=3,$$SC^DGMTR(DFN),'$$ANYSC^DGPTSCAN(PTF),$P(DGZ1,U,4)="A" S DGX="AN" G DIE
"RTN","DGPTUTL",20,0)
 ;-- sc, >0%  - DG*5.3*544
"RTN","DGPTUTL",21,0)
 I "^1^3^"[("^"_$P(DGZEC,U,4)_"^"),$P($G(^DPT(DFN,.3)),U,2)>0,$P(DGZ1,U,4)="A" S DGX="AS" G DIE
"RTN","DGPTUTL",22,0)
 ;
"RTN","DGPTUTL",23,0)
 S DGX=$S('$D(DGZ1):"U",1:$P(DGZ1,U,4))
"RTN","DGPTUTL",24,0)
 ; Determine if the Pending Adjudication is for MT(C) GMT(G)
"RTN","DGPTUTL",25,0)
 I DGX="P" D  G DIE
"RTN","DGPTUTL",26,0)
 . I '+$P($G(DGZ1),U) S DGX="U" Q
"RTN","DGPTUTL",27,0)
 . S DGX=$$PA^DGMTUTL($P(DGZ1,U)),DGX=$S('$D(DGX):"U",DGX="MT":"C",DGX="GMT":"G",1:"U")
"RTN","DGPTUTL",28,0)
 S DGX=$S(DGX="A":"AN","BCGN"[DGX:DGX,1:"U") G DIE:DGX'="N"
"RTN","DGPTUTL",29,0)
 ;-- AO or IR
"RTN","DGPTUTL",30,0)
AS S DGZ=$S($D(^DPT(DFN,.321)):^(.321),1:0) I $P(DGZ,U,2)="Y"!($P(DGZ,U,3)="Y") S DGX="AS" G DIE
"RTN","DGPTUTL",31,0)
 ;-- EC
"RTN","DGPTUTL",32,0)
 S DGZ=$S($D(^DPT(DFN,.322)):^(.322),1:0) I $P(DGZ,U,13)="Y" S DGX="AS" G DIE
"RTN","DGPTUTL",33,0)
 ;-- NTR
"RTN","DGPTUTL",34,0)
 N DGNTARR S DGZ=$S($$GETCUR^DGNTAPI(DFN,"DGNTARR")>0:DGNTARR("NTR"),1:"") I $P(DGZ,U)="Y" S DGX="AS" G DIE
"RTN","DGPTUTL",35,0)
 ;-- MST
"RTN","DGPTUTL",36,0)
 S DGZ=$$GETSTAT^DGMSTAPI(DFN) I $P(DGZ,U,2)="Y" S DGX="AS" G DIE
"RTN","DGPTUTL",37,0)
 ;-- if veteran and AA or Housebound
"RTN","DGPTUTL",38,0)
 I $P(DGZEC,U,5)="Y",$P(DGZEC,U,4)<4,"^2^15^"'[(U_$P(DGZEC,U,9)_U) S DGX="AS" G DIE
"RTN","DGPTUTL",39,0)
 ;
"RTN","DGPTUTL",40,0)
 I DGZEC]"" S DGX="AN" G DIE
"RTN","DGPTUTL",41,0)
 ;
"RTN","DGPTUTL",42,0)
 S DGX="U" I '$D(DGLN) W !,"===> this patient has a blank Eligibility Code"
"RTN","DGPTUTL",43,0)
 ;
"RTN","DGPTUTL",44,0)
DIE I '$D(DGBGJ) S DA=PTF,DR="10///"_DGX_$S('$P(^DGPT(PTF,0),U,3):";3///`"_$P($$SITE^VASITE,U),1:""),DIE="^DGPT(" D ^DIE K DGZEC,DGZ,DGZ1,DG1,DGX,DR,DGT,DA,DIE Q
"RTN","DGPTUTL",45,0)
 I DGX'=$P(^DGPT(PTF,0),"^",10) S DA=PTF,DR="10///"_DGX,DIE="^DGPT(" D ^DIE
"RTN","DGPTUTL",46,0)
 K DGZEC,DGZ,DGZ1,DG1,DGX,DGT,DR,DA,DIE Q
"RTN","DGPTUTL",47,0)
 ;
"RTN","DGPTUTL",48,0)
RTY ; -- set rec type variables
"RTN","DGPTUTL",49,0)
 ;  input:      Y := rec type #
"RTN","DGPTUTL",50,0)
 ; output:  DGRTY := rec type #
"RTN","DGPTUTL",51,0)
 ;         DGRTY0 := name of type (in future, may expand to 0th node)
"RTN","DGPTUTL",52,0)
 ;
"RTN","DGPTUTL",53,0)
 I Y=1 S DGRTY=1,DGRTY0="PTF"
"RTN","DGPTUTL",54,0)
 I Y=2 S DGRTY=2,DGRTY0="CENSUS"
"RTN","DGPTUTL",55,0)
 Q
"RTN","DGPTUTL",56,0)
 ;
"RTN","DGPTUTL",57,0)
HANG ;
"RTN","DGPTUTL",58,0)
 R DGPTHANG:4 K DGPTHANG Q
"RTN","DGPTUTL",59,0)
 ;
"RTN","DGPTUTL",60,0)
CEN ; -- find current active census ; return ifn and 0th node
"RTN","DGPTUTL",61,0)
 S DGCN=$O(^DG(45.86,"AC",1,0)),DGCN0=$S($D(^DG(45.86,+DGCN,0)):^(0),1:"")
"RTN","DGPTUTL",62,0)
 Q
"RTN","DGPTUTL",63,0)
 ;
"RTN","DGPTUTL",64,0)
FMT ; -- determine PTF record format
"RTN","DGPTUTL",65,0)
 ;
"RTN","DGPTUTL",66,0)
 N IMPDATE,EFFDATE,DGPTDAT
"RTN","DGPTUTL",67,0)
 S Z=$S($G(Y):Y,1:DT)
"RTN","DGPTUTL",68,0)
 S DGPTFMT=1 D FDT
"RTN","DGPTUTL",69,0)
 I Z>Y S DGPTFMT=2
"RTN","DGPTUTL",70,0)
 D EFFDATE^DGPTIC10($G(PTF))
"RTN","DGPTUTL",71,0)
 Q:IMPDATE'?7N
"RTN","DGPTUTL",72,0)
 I Z'<IMPDATE S DGPTFMT=3 ;(ICD-10)
"RTN","DGPTUTL",73,0)
 K Z
"RTN","DGPTUTL",74,0)
 Q
"RTN","DGPTUTL",75,0)
 ;
"RTN","DGPTUTL",76,0)
FDT ; -- set new format date for testing
"RTN","DGPTUTL",77,0)
 S Y=2901000 Q
"RTN","DGPTUTL",78,0)
 ;
"RTN","DGPTUTL",79,0)
UPDT ; -- update PTF record w/PTF and DFN defined
"RTN","DGPTUTL",80,0)
 I '$D(^DGPT(PTF,0)) W:'$D(ZTQUEUED) !!,*7,">>> PTF record #",PTF," does not exist." G UPDTQ
"RTN","DGPTUTL",81,0)
 S X=^(0)
"RTN","DGPTUTL",82,0)
 I $P(X,U,11)>1 W:'$D(ZTQUEUED) !!,*7,">>> Record #",PTF," is not a PTF record." G UPDTQ
"RTN","DGPTUTL",83,0)
 S DGPTFE=$P(X,U,4),(DGADM,AD)=+$P(X,U,2),DGST=$D(^DGP(45.84,PTF))>0
"RTN","DGPTUTL",84,0)
 I DGST W:'$D(ZTQUEUED) !!,*7,">>> PTF record #",PTF," is closed out. No updating allowed." G UPDTQ
"RTN","DGPTUTL",85,0)
 I DGPTFE W:'$D(ZTQUEUED) !!,*7,">>> PTF record #",PTF," is a fee PTF record. No updating is possible." G UPDTQ
"RTN","DGPTUTL",86,0)
 N DGPMCA,DGPMAN D PM
"RTN","DGPTUTL",87,0)
 I DGPMCA D:'$P(^DGPT(PTF,0),U,5) SUF^DGPTF D LE^DGPTTS,DC^DGPTF
"RTN","DGPTUTL",88,0)
 ;
"RTN","DGPTUTL",89,0)
UPDTQ K AGE,D0,D1,DA,DGADM,DGLAST,DGP,DGTY,DIC,DIE,DR,DIV,DIU,DISYS,DIK,DIKLM,DIG,DIH,DI,DIW,DIWL,DIWR,DIWT,DN,DOB,DQ,DG,DRG,SEX,TY,L,P1,DIS2,DGPTFE,DGST,DGX,DFN1,DFN2,PR,I1,TDD,AD
"RTN","DGPTUTL",90,0)
 Q
"RTN","DGPTUTL",91,0)
 ;
"RTN","DGPTUTL",92,0)
EXPL ; -- explode string A(input) to DGA(output)
"RTN","DGPTUTL",93,0)
 N J,L S DGA=$E(A,2,999)
"RTN","DGPTUTL",94,0)
 I DGA["-" S X=DGA,DGA="" F J=1:1 S L=$P(X,",",J) Q:'L  D EXPL1:L["-" S:L]"" DGA=DGA_L_"," Q:$P(X,",",J+1,999)=""
"RTN","DGPTUTL",95,0)
 Q
"RTN","DGPTUTL",96,0)
 ;
"RTN","DGPTUTL",97,0)
EXPL1 ; -- explode string 'L' of form "1-12" ; input and output is 'L'
"RTN","DGPTUTL",98,0)
 N I,X
"RTN","DGPTUTL",99,0)
 I $P(L,"-")'?1N.N!($P(L,"-",2,999)'?1N.N) S L="" G EXPL1Q
"RTN","DGPTUTL",100,0)
 I +L>$P(L,"-",2) S L="" G EXPL1Q
"RTN","DGPTUTL",101,0)
 I +L=+$P(L,"-",2) S L=+L G EXPL1Q
"RTN","DGPTUTL",102,0)
 S X="" F I=+L:1:+$P(L,"-",2) Q:($L(X)+$L(I)+1)>240  S X=X_I_","
"RTN","DGPTUTL",103,0)
 S L=$E(X,1,$L(X)-1)
"RTN","DGPTUTL",104,0)
EXPL1Q Q
"RTN","DGPTUTL",105,0)
 ;
"RTN","DGPTUTL",106,0)
CKPOS(ADEL,DEFAULT) ;-- This function will check the admitting eligibility
"RTN","DGPTUTL",107,0)
 ; and the POS to make sure for Non-Vet eligibilities that a
"RTN","DGPTUTL",108,0)
 ; 9 - Other or None POS is present.
"RTN","DGPTUTL",109,0)
 ;
"RTN","DGPTUTL",110,0)
 ;  INPUT - ADEL : Admitting Eligibility (Pointer to file 8)
"RTN","DGPTUTL",111,0)
 ;       DEFAULT : Default POS (optional) (Pointer to file 21)
"RTN","DGPTUTL",112,0)
 ;  OUTPUT- POS : POS Code. 0 - Error
"RTN","DGPTUTL",113,0)
 ;
"RTN","DGPTUTL",114,0)
 N RESULT,X,Y
"RTN","DGPTUTL",115,0)
 ;If DFN is not needed here, kill DFN to avoid VADPT error out.
"RTN","DGPTUTL",116,0)
 I $G(DFN)="" N DFN S DFN=$G(DGSDFN) I $G(DFN)="" K DFN
"RTN","DGPTUTL",117,0)
 D ELIG^VADPT
"RTN","DGPTUTL",118,0)
 I $D(VAEL(1))=1 S RESULT=$G(DEFAULT) G CKPOSQ
"RTN","DGPTUTL",119,0)
 S RESULT=0,Y=$G(DEFAULT)
"RTN","DGPTUTL",120,0)
 I '$D(^DIC(8,+ADEL,0)) G CKPOSQ
"RTN","DGPTUTL",121,0)
 S X=$G(^DIC(8.1,$P($G(^DIC(8,+ADEL,0)),U,9),0))
"RTN","DGPTUTL",122,0)
 ;-- if non vet set POS to Other
"RTN","DGPTUTL",123,0)
 I $P(X,U,5)="N" S RESULT=9
"RTN","DGPTUTL",124,0)
 ;-- if vet then use default
"RTN","DGPTUTL",125,0)
 I $P(X,U,5)="Y",Y'="" S RESULT=Y
"RTN","DGPTUTL",126,0)
CKPOSQ ;
"RTN","DGPTUTL",127,0)
 Q RESULT
"RTN","DGPTUTL",128,0)
 ;
"RTN","DGPTUTL1")
0^32^B33275346^B30078992
"RTN","DGPTUTL1",1,0)
DGPTUTL1 ;ALB/MJK - PTF Utility ;2/1/05 2:20pm
"RTN","DGPTUTL1",2,0)
 ;;5.3;Registration;**33,45,54,517,635,817,850**;Aug 13, 1993;Build 171
"RTN","DGPTUTL1",3,0)
 ;
"RTN","DGPTUTL1",4,0)
FLAG ; -- select PTF rec to update xmit flags
"RTN","DGPTUTL1",5,0)
 S DGMAX=25
"RTN","DGPTUTL1",6,0)
 W ! S DIC="^DGPT(",DIC(0)="AEMQ",DIC("S")="I '$P(^(0),U,6),$P(^(0),U,11)=1 D CHK^DGPTUTL1 I $D(DGMTY)>9"
"RTN","DGPTUTL1",7,0)
 D ^DIC K DIC G FLAGQ:+Y<0 S (Y,PTF)=+Y D CHK
"RTN","DGPTUTL1",8,0)
 F DGMTY=501,535 I $D(DGMTY(DGMTY)) D UP Q:$D(DGOUT)
"RTN","DGPTUTL1",9,0)
FLAGQ K DGMAX,DGT,DGADM,DGX,DGA1,DGA,DGMTY,C,DGOUT Q
"RTN","DGPTUTL1",10,0)
 ;
"RTN","DGPTUTL1",11,0)
UP ; -- select mvt and update xmit flag
"RTN","DGPTUTL1",12,0)
 I DGMTY=501 S DIC="^DGPT("_PTF_",""M"",",DIC("S")="I Y'=1"
"RTN","DGPTUTL1",13,0)
 I DGMTY=535 S DIC="^DGPT("_PTF_",535,",DIC("S")="I Y'=1"
"RTN","DGPTUTL1",14,0)
 W ! S DIC(0)="AEMQ" D ^DIC S DIE=DIC K DIC
"RTN","DGPTUTL1",15,0)
 K DGOUT I X["^" S DGOUT=""
"RTN","DGPTUTL1",16,0)
 I +Y<0 G UPQ
"RTN","DGPTUTL1",17,0)
 S DA=+Y,DR=17 D ^DIE K DE,DQ G UP
"RTN","DGPTUTL1",18,0)
UPQ K DIE,DR Q
"RTN","DGPTUTL1",19,0)
 ;
"RTN","DGPTUTL1",20,0)
CHK ;
"RTN","DGPTUTL1",21,0)
 N T1,T2,C K DGMTY S T1=0,T2=9999999
"RTN","DGPTUTL1",22,0)
 F DGMTY=501,535 D 501^DGPTFVC2:DGMTY=501,535^DGPTFVC2:DGMTY=535 S:C>DGMAX DGMTY(DGMTY)=""
"RTN","DGPTUTL1",23,0)
 Q
"RTN","DGPTUTL1",24,0)
 ;
"RTN","DGPTUTL1",25,0)
INCOME ;-- load ptf income information
"RTN","DGPTUTL1",26,0)
 ;   Use discharge date if available; else use current date/time
"RTN","DGPTUTL1",27,0)
 D NOW^%DTC
"RTN","DGPTUTL1",28,0)
 S X=$S($D(^DGPT(PTF,70)):+^(70),1:%),DGX=$S($D(^DGPT(PTF,101)):^(101),1:"")
"RTN","DGPTUTL1",29,0)
 D INC
"RTN","DGPTUTL1",30,0)
 G INQ:Y=$P(DGX,U,7)
"RTN","DGPTUTL1",31,0)
 S DIE="^DGPT(",DA=PTF,DR="101.07////"_Y
"RTN","DGPTUTL1",32,0)
 D ^DIE
"RTN","DGPTUTL1",33,0)
INQ ;
"RTN","DGPTUTL1",34,0)
 K DGX,DGINCM,DIE,DA,DR,DGI,DG30,DG362,DGT,%
"RTN","DGPTUTL1",35,0)
 Q
"RTN","DGPTUTL1",36,0)
 ;
"RTN","DGPTUTL1",37,0)
INC ;-- load income information  Input:X date,Output:Y-income
"RTN","DGPTUTL1",38,0)
 N DGINCM,DGI,DG30,DG362,DGT,DGX
"RTN","DGPTUTL1",39,0)
 I '$D(X) S Y="" G INCQ
"RTN","DGPTUTL1",40,0)
 S Y=+$P($$INCOME^VAFMON(DFN,X),".")
"RTN","DGPTUTL1",41,0)
 I Y<0 S Y=0
"RTN","DGPTUTL1",42,0)
INCQ Q
"RTN","DGPTUTL1",43,0)
 ;
"RTN","DGPTUTL1",44,0)
CHQUES ;-- This function will determine if the patient has any of the following
"RTN","DGPTUTL1",45,0)
 ;   indicated : AO, IR and EC. If so the array DGEXQ will contain
"RTN","DGPTUTL1",46,0)
 ;     DGEXQ(1)="" - AO
"RTN","DGPTUTL1",47,0)
 ;     DGEXQ(2)="" - IR
"RTN","DGPTUTL1",48,0)
 ;     DGEXQ(3)="" - EC
"RTN","DGPTUTL1",49,0)
 ;   Otherwise they will be undefined.
"RTN","DGPTUTL1",50,0)
 K DGEXQ
"RTN","DGPTUTL1",51,0)
 S DGEXQ(1)="",DGEXQ(2)="",DGEXQ(3)=""
"RTN","DGPTUTL1",52,0)
 Q
"RTN","DGPTUTL1",53,0)
 ;
"RTN","DGPTUTL1",54,0)
SETTRAN ;-- set transmission if error DGOUT=1, will return XMZ
"RTN","DGPTUTL1",55,0)
 K DGXMZ
"RTN","DGPTUTL1",56,0)
 S DGOUTX=0
"RTN","DGPTUTL1",57,0)
 S Y=$S($P(DGD,".",2)=99:DGSD,1:DGD) X ^DD("DD")
"RTN","DGPTUTL1",58,0)
 S XMSUB=Y_"  "_$P(DGRTY0,U)_" TRANSMISSION ",XMDUZ=.5
"RTN","DGPTUTL1",59,0)
 D GET^XMA2
"RTN","DGPTUTL1",60,0)
 I $D(XMZ),XMZ>0 S DGXMZ=XMZ K XMZ G SETQ
"RTN","DGPTUTL1",61,0)
 W !!,"*** ERROR *** Unable to create Mail Message #... Try again later."
"RTN","DGPTUTL1",62,0)
 S DGOUTX=1
"RTN","DGPTUTL1",63,0)
SETQ ;
"RTN","DGPTUTL1",64,0)
 Q
"RTN","DGPTUTL1",65,0)
 ;
"RTN","DGPTUTL1",66,0)
KVAR ; -- clean up for l/e
"RTN","DGPTUTL1",67,0)
 K DA,DFN,A,B,I,ANS,DIE,DR,%,%DT,DGPR,DGREL,DGST,DIC,HEAD,H,I,I2,J,K,L,M,N,MT,NU,PTF,DGPTFE,Y,DGZM0,DGZS0,DOB,L1,PT,SEX,AGE,CC,DAM,DOB,DXLS,EXP,NOR,NO,DRG,DRGCAL,DGZSUR,S1,SUR,M1,MOV,P,P1
"RTN","DGPTUTL1",68,0)
 K DGDX,DGER,DGI,DGINFO,DGLOS,DGNXD,DGP,DGPAS,DGPSV,DGTLOS,DGTY,DIS2,DGJUMP,DGPRD,DGPC,DGDRGNM,DGMOVM,DR,DGQWK,ST1,DGX,DQ,TY,DGRTY,DGRTY0,DGPTFMT,DG,DGA1,DGDC,DGNEXT,RC,DP,POP,DGICD0,DGPROCD,DGPROCI,DGPROCM,DGVAR,DGAD
"RTN","DGPTUTL1",69,0)
 K TAC,TRS,SD,PD,MDC,NDR,NSD,OR,ORG,T,DGZDIAG,DGZPRO,DGZSER,J1,I1,L2,L3,L4,L5,L6,PM,DGFC,S,M2,PROC,SU,ST,NL,DGDD,SD1,D,DFN,DFN1,DFN2,D0,P2,S2,X,DGNUM,DGN,DGERR,DGVI,DGVO,Z,Z1,DGZ,DGADM,DGNODE,^UTILITY($J),DGCFL
"RTN","DGPTUTL1",70,0)
 K DGPM2X,DGPMDA,DGPMDCD,DGPMVI,DGAMY,VAERR,VAIP,DGPTSCRN,DGREC,DGHOLD,DG300,DG300A,DG300B,DG701,DGBPC,DGPTIT,DGMOV,DGSUR
"RTN","DGPTUTL1",71,0)
 K M3,DGLAST,DGMVT,VAIN,DGMPOA,DGDXPOA,XX,ID,DGCR,DGZP,DGSB,M3,PTR,TYPE,DGMV,DGMV0,DGNTARR,DGPMY,DGRM,DGSPACE2,DGDS
"RTN","DGPTUTL1",72,0)
 K DGPTF,DGDAT,DGPOA,DGPTDAT,DISDATE,DGZPRF,DGPTTMP,DGTMP,ICDDA,ICDPOA,ICDTMP,ICDIEN,ICDX,ICD10ORT,ICD10NIORT,ICD10ORNIT,ICD10SDT,ICDEDT,ICDLABEL,ICDCSYS,ICDRG,VA,VAEL,STR,EFFDATE,IMPDATE,VACNT
"RTN","DGPTUTL1",73,0)
 Q
"RTN","DGPTUTL1",74,0)
 ;
"RTN","DGPTUTL1",75,0)
ELIG ; shows eligibility and disabilities
"RTN","DGPTUTL1",76,0)
 D ELIG^VADPT W #,!,"Eligibility: "_$P(VAEL(1),"^",2)_$S(+VAEL(3):"     SC%: "_$P(VAEL(3),"^",2),1:"")
"RTN","DGPTUTL1",77,0)
 W !,"Disabilities: " F I=0:0 S I=$O(^DPT(DFN,.372,I)) Q:'I  S I1=$S($D(^DPT(DFN,.372,I,0)):^(0),1:"") D:+I1
"RTN","DGPTUTL1",78,0)
 .S PSDIS=$S($P($G(^DIC(31,+I1,0)),"^")]""&($P($G(^(0)),"^",4)']""):$P(^(0),"^"),$P($G(^DIC(31,+I1,0)),"^",4)]"":$P(^(0),"^",4),1:""),PSCNT=$P(I1,"^",2)
"RTN","DGPTUTL1",79,0)
 .W:$L(PSDIS_"-"_PSCNT_"% ("_$S($P(I1,"^",3):"SC",1:"NSC")_"), ")+$X>80 !,?15
"RTN","DGPTUTL1",80,0)
 .W $S($G(PSDIS)]"":PSDIS_"-",1:"")_PSCNT_"% ("_$S($P(I1,"^",3):"SC",1:"NSC")_"), "
"RTN","DGPTUTL1",81,0)
 .I $Y>22 W !,"PRESS RETURN TO CONTINUE:" R X:DTIME W #
"RTN","DGPTUTL1",82,0)
 Q
"RTN","DGPTUTL1",83,0)
DATE ;EDIT CPT DATE/TIME TO BE AFTER ADMISSION DATE BUT BEFORE DISCHARGE
"RTN","DGPTUTL1",84,0)
 I X<$P(^DGPT(DA(1),0),U,2) W !,"Not before admission" K X Q
"RTN","DGPTUTL1",85,0)
 I $G(^(70)),X>^(70) W !,"Not after discharge" K X Q
"RTN","DGPTUTL1",86,0)
 S I=0 F  S I=$O(^DGPT(DA(1),"C",I)) Q:I'>0  I X=+^(I,0) W !,"Cannot change to existing CPT date/time entry" K X Q
"RTN","DGPTUTL1",87,0)
 Q
"RTN","DGPTUTL1",88,0)
SETABX ;SET AB CROSSREFERENCE IN FILE 45
"RTN","DGPTUTL1",89,0)
 G KILLABX:$P($G(^DGPT(DA(1),"C",DA,0)),U,7)
"RTN","DGPTUTL1",90,0)
 N BOOL S (DGCPT,BOOL)=0
"RTN","DGPTUTL1",91,0)
 F  S DGCPT=$O(^DGCPT(46,"C",DA(1),DGCPT)) Q:'DGCPT  D  Q:BOOL
"RTN","DGPTUTL1",92,0)
 .S BOOL='$G(^DGCPT(46,DGCPT,9))
"RTN","DGPTUTL1",93,0)
 I 'BOOL K ^DGPT("AB",$E(X,1,30),DA(1),DA)
"RTN","DGPTUTL1",94,0)
 S ^DGPT("AB",$E(X,1,30),DA(1),DA)="" Q
"RTN","DGPTUTL1",95,0)
KILLABX ;KILL AB CROSSREFERENCE IN FILE 45
"RTN","DGPTUTL1",96,0)
 G SETABX:'$P($G(^DGPT(DA(1),"C",DA,0)),U,7)
"RTN","DGPTUTL1",97,0)
 K ^DGPT("AB",$E(X,1,30),DA(1),DA) Q
"RTN","DGPTUTL1",98,0)
DISP F I=1:1:$P(DGZPRF,U,3) D
"RTN","DGPTUTL1",99,0)
 .S Y=+DGZPRF(I) D D^DGPTUTL W !,I,?5,Y
"RTN","DGPTUTL1",100,0)
 Q
"RTN","DGPTUTL1",101,0)
HELP W !,"Enter '^' to stop display and edit of data,"
"RTN","DGPTUTL1",102,0)
 W !,"'^N' to jump to screen #N (appears in upper right of screen as"
"RTN","DGPTUTL1",103,0)
 W " <N>),",!,"a number to jump to that number 801 screen,"
"RTN","DGPTUTL1",104,0)
 W " ?? to list the 801 screens,"
"RTN","DGPTUTL1",105,0)
 W !,"<RET> to continue on to next screen or A-B to edit:"
"RTN","DGPTUTL1",106,0)
 W !?10,"A-Professional service information",!,?10,"B-Procedure codes",!,"You may also enter any combination of the above, separated by commas (ex:A,B)",! Q
"RTN","DGPTUTL1",107,0)
CPT ;DISPLAY CPT CODES AND MODIFIERS
"RTN","DGPTUTL1",108,0)
 S CPT=+DGZPRF(J,K),N=$$CPT^ICPTCOD(CPT,$$GETDATE^ICDGTDRG(PTF)),N=$S(N>0:$P(N,U,2,99),1:"")
"RTN","DGPTUTL1",109,0)
 W $P(N,U),"  ",$P(N,U,2)
"RTN","DGPTUTL1",110,0)
 F I=1,2 S MOD=$P(DGZPRF(J,K),U,I+1) D MOD:MOD
"RTN","DGPTUTL1",111,0)
 W !,?7,"Quantity: ",$P(DGZPRF(J,K),U,14) K I,MOD,N Q
"RTN","DGPTUTL1",112,0)
MOD S N=$$MOD^ICPTMOD(MOD,"I",$$GETDATE^ICDGTDRG(PTF)) W !,?7,"CPT Modifier ",I,":",$P(N,U,2)," ",$P(N,U,3)
"RTN","DGPTUTL1",113,0)
 Q
"RTN","VAFHLDG1")
0^45^B28165122^B30271941
"RTN","VAFHLDG1",1,0)
VAFHLDG1 ;ALB/CM/ESD HL7 DG1 SEGMENT BUILDING ;3/24/05 5:05pm
"RTN","VAFHLDG1",2,0)
 ;;5.3;Registration;**94,151,190,511,606,614,850**;Aug 13, 1993;Build 171
"RTN","VAFHLDG1",3,0)
 ; Reference to $$CSI^ICDEX supported by ICR #5747
"RTN","VAFHLDG1",4,0)
 ; Reference to $$ICDDX^ICDEX supported by ICR #5747
"RTN","VAFHLDG1",5,0)
 ;Routine currently being changed by GRR/EDS
"RTN","VAFHLDG1",6,0)
 ;IN entry is being added
"RTN","VAFHLDG1",7,0)
 ;
"RTN","VAFHLDG1",8,0)
 ;This routine will build an HL7 DG1 segment for an inpatient or
"RTN","VAFHLDG1",9,0)
 ;outpatient event depending on the entry point used.
"RTN","VAFHLDG1",10,0)
 ;Use IN for inpatient
"RTN","VAFHLDG1",11,0)
 ;Use OUT for outpatient
"RTN","VAFHLDG1",12,0)
 ;
"RTN","VAFHLDG1",13,0)
IN(DFN,VAFHMIEN,VAFSTR,VAOUT,VAFHMDT) ;
"RTN","VAFHLDG1",14,0)
 ;Input parameters
"RTN","VAFHLDG1",15,0)
 ;DFN - Patient's Internal Entry Number
"RTN","VAFHLDG1",16,0)
 ;VAFHMIEN - Internal Entry Number of Movement
"RTN","VAFHLDG1",17,0)
 ;VAFSTR - Sequence numbers of segment to include
"RTN","VAFHLDG1",18,0)
 ;VAOUT - Variable name where output segments should be saved
"RTN","VAFHLDG1",19,0)
 ;
"RTN","VAFHLDG1",20,0)
 K @VAOUT ;Insure output array is empty
"RTN","VAFHLDG1",21,0)
 Q:VAFHMIEN=""
"RTN","VAFHLDG1",22,0)
 N VAFHLREC,VAFHAIEN,VAFHICD
"RTN","VAFHLDG1",23,0)
 S $P(VAFHLREC,HL("FS"))="DG1" ;Set the segment identifier
"RTN","VAFHLDG1",24,0)
 S VAFHMDT=$$GET1^DIQ(405,VAFHMIEN,".01","I") ;Movement Date/Time
"RTN","VAFHLDG1",25,0)
 S VAFHTT=$$GET1^DIQ(405,VAFHMIEN,".02","I") ;Get the movement transaction type (admit, transfer, discharge)
"RTN","VAFHLDG1",26,0)
 I VAFHTT=1 S VAFHAIEN=VAFHMIEN ;If 'admit' movement capture ien
"RTN","VAFHLDG1",27,0)
 I VAFHTT'=1 S VAFHAIEN=$$GET1^DIQ(405,VAFHMIEN,".14","I") ;If not 'admit' movement, get ien of admission movement
"RTN","VAFHLDG1",28,0)
 Q:VAFHAIEN=""  ;Quit if no admission movement
"RTN","VAFHLDG1",29,0)
 S VAFHADT=$$GET1^DIQ(405,VAFHAIEN,".01","I") ;Get Admission date/time
"RTN","VAFHLDG1",30,0)
 S VAFHPTF=$O(^DGPT("AAD",DFN,VAFHADT,"")) Q:VAFHPTF=""  ;Get pointer to ptf record and quit if none exists
"RTN","VAFHLDG1",31,0)
 S VACNT=0 ;Initialize counter
"RTN","VAFHLDG1",32,0)
 F VAFLD=79,79.16:.01:79.19,79.201,79.21:.01:79.24,79.241,79.242,79.243,79.244 D
"RTN","VAFHLDG1",33,0)
 . S VAFHICD=$$GET1^DIQ(45,VAFHPTF,VAFLD,"I")
"RTN","VAFHLDG1",34,0)
 . I VAFHICD]"" S VACNT=VACNT+1,VAFHICD(VACNT)=VAFHICD ;Check each ICD field for data and store in array if data exists
"RTN","VAFHLDG1",35,0)
 I $O(VAFHICD(0))="" Q  ;Quit if no data in ICD array
"RTN","VAFHLDG1",36,0)
 S VACNT=0 F  S VACNT=$O(VAFHICD(VACNT)) Q:VACNT=""  D  ;If array contains ICD data
"RTN","VAFHLDG1",37,0)
 .S $P(VAFHLREC,HL("FS"))="DG1" ;Set segment type to DG1
"RTN","VAFHLDG1",38,0)
 .S $P(VAFHLREC,HL("FS"),2)=VACNT ;Set Segment Set ID to next sequential number
"RTN","VAFHLDG1",39,0)
 .I VAFSTR[",2," S $P(VAFHLREC,HL("FS"),3)="I9" ;Set 'Diagnosis Coding Method' to reflect ICD9
"RTN","VAFHLDG1",40,0)
 .I VAFSTR[",3," D
"RTN","VAFHLDG1",41,0)
 .. S $P(VAFHLREC,HL("FS"),4)=$$GET1^DIQ(80,VAFHICD(VACNT),".01","I")_$E(HL("ECH"))_$P($$ICDDATA^ICDXCODE("DIAG",VAFHICD(VACNT),VAFHMDT),"^",4) ;Icd Code and Description
"RTN","VAFHLDG1",42,0)
 .I VAFSTR[",5," S $P(VAFHLREC,HL("FS"),6)=$$HLDATE^HLFNC(VAFHMDT) ;Diagnosis Date/Time set to Movement Date/Time
"RTN","VAFHLDG1",43,0)
 .S @VAOUT@(VACNT,0)=VAFHLREC ;Set next node of ICD output array to the newly created segment
"RTN","VAFHLDG1",44,0)
 Q
"RTN","VAFHLDG1",45,0)
 ;
"RTN","VAFHLDG1",46,0)
 ;
"RTN","VAFHLDG1",47,0)
OUT(DFN,EVT,EVDTS,VPTR,STRP,NUMP) ;
"RTN","VAFHLDG1",48,0)
 ;DFN - Patient File
"RTN","VAFHLDG1",49,0)
 ;EVT - event number from pivot file
"RTN","VAFHLDG1",50,0)
 ;EVDTS - event date/time FileMan
"RTN","VAFHLDG1",51,0)
 ;VPTR - variable pointer
"RTN","VAFHLDG1",52,0)
 ;STRP - string of fields
"RTN","VAFHLDG1",53,0)
 ;(if null - required fields, if "A" - supported
"RTN","VAFHLDG1",54,0)
 ;fields, or string of fields separated by commas")
"RTN","VAFHLDG1",55,0)
 ;NUMP - ID # (optional)
"RTN","VAFHLDG1",56,0)
 ;
"RTN","VAFHLDG1",57,0)
 N ERR
"RTN","VAFHLDG1",58,0)
 I '$D(NUMP) S NUMP=1
"RTN","VAFHLDG1",59,0)
 S ERR=$$ODG1^VAFHCDG($G(DFN),$G(EVT),$G(EVDTS),$G(VPTR),$G(STRP),NUMP)
"RTN","VAFHLDG1",60,0)
 Q ERR
"RTN","VAFHLDG1",61,0)
 ;
"RTN","VAFHLDG1",62,0)
 ;
"RTN","VAFHLDG1",63,0)
EN(VAFENC,VAFSTR,VAFHLQ,VAFHLFS,VAFARRY) ; Entry point for Ambulatory Care Database Project
"RTN","VAFHLDG1",64,0)
 ; - Entry point to return the HL7 DG1 segment
"RTN","VAFHLDG1",65,0)
 ;
"RTN","VAFHLDG1",66,0)
 ;   This function will create VA-specific DG1 segment(s) for a 
"RTN","VAFHLDG1",67,0)
 ;   given outpatient encounter.  The DG1 segment is designed to transfer
"RTN","VAFHLDG1",68,0)
 ;   generic information about an outpatient diagnosis or diagnoses.
"RTN","VAFHLDG1",69,0)
 ;
"RTN","VAFHLDG1",70,0)
 ;  Input:   VAFENC - IEN of the Outpatient Encounter (#409.68) file
"RTN","VAFHLDG1",71,0)
 ;           VAFSTR - String of fields requested separated by commas
"RTN","VAFHLDG1",72,0)
 ;           VAFHLQ - Optional HL7 null variable. If not there, use 
"RTN","VAFHLDG1",73,0)
 ;                    default HL7 variable
"RTN","VAFHLDG1",74,0)
 ;          VAFHLFS - Optional HL7 field separator. If not there, use 
"RTN","VAFHLDG1",75,0)
 ;                    default HL7 variable
"RTN","VAFHLDG1",76,0)
 ;          VAFARRY - Optional user-supplied array name to hold the HL7 DG1 segments
"RTN","VAFHLDG1",77,0)
 ;
"RTN","VAFHLDG1",78,0)
 ; Output:  Array of HL7 DG1 segments
"RTN","VAFHLDG1",79,0)
 ;
"RTN","VAFHLDG1",80,0)
 ;
"RTN","VAFHLDG1",81,0)
 N I,VAFIDX,VAFNODE,VAFDNODE,VAFY,VAXY,X,ICDVDT
"RTN","VAFHLDG1",82,0)
 S VAFARRY=$G(VAFARRY),ICDVDT=$$SCE^DGSDU(VAFENC,1,0)
"RTN","VAFHLDG1",83,0)
 ;
"RTN","VAFHLDG1",84,0)
 ; - If VAFARRY not defined, use ^TMP("VAFHL",$J,"DIAGNOSIS")
"RTN","VAFHLDG1",85,0)
 S:(VAFARRY="") VAFARRY="^TMP(""VAFHL"",$J,""DIAGNOSIS"")"
"RTN","VAFHLDG1",86,0)
 ;
"RTN","VAFHLDG1",87,0)
 ; - If VAFHLQ or VAFHLFS aren't passed in, use default HL7 variables
"RTN","VAFHLDG1",88,0)
 S VAFHLQ=$S($D(VAFHLQ):VAFHLQ,1:$G(HLQ)),VAFHLFS=$S($D(VAFHLFS):VAFHLFS,1:$G(HLFS))
"RTN","VAFHLDG1",89,0)
 I '$G(VAFENC)!($G(VAFSTR)']"") S @VAFARRY@(1,0)="DG1"_VAFHLFS_1 G ENQ
"RTN","VAFHLDG1",90,0)
 S VAFIDX=0,VAFSTR=","_VAFSTR_","
"RTN","VAFHLDG1",91,0)
 ;
"RTN","VAFHLDG1",92,0)
 ; - Get all outpatient diagnoses for encounter
"RTN","VAFHLDG1",93,0)
 D GETDX^SDOE(VAFENC,"VAXY")
"RTN","VAFHLDG1",94,0)
 ;
"RTN","VAFHLDG1",95,0)
 ; - Set diagnosis array to 0 if no outpatient diagnosis for encounter
"RTN","VAFHLDG1",96,0)
 I '$G(VAXY) S VAXY(1)=0
"RTN","VAFHLDG1",97,0)
 ;
"RTN","VAFHLDG1",98,0)
ALL ; -- All outpatient diagnoses for encounter
"RTN","VAFHLDG1",99,0)
 ;
"RTN","VAFHLDG1",100,0)
 ; -- only send dx once per encounter / build ok array
"RTN","VAFHLDG1",101,0)
 N VAOK
"RTN","VAFHLDG1",102,0)
 F I=0:0 S I=$O(VAXY(I)) Q:'I  D
"RTN","VAFHLDG1",103,0)
 . S VAFNODE=VAXY(I)
"RTN","VAFHLDG1",104,0)
 . ;
"RTN","VAFHLDG1",105,0)
 . ; -- if this is first entry for dx then 'ok' it
"RTN","VAFHLDG1",106,0)
 . IF '$D(VAOK(+VAFNODE)) S VAOK(+VAFNODE)=I Q
"RTN","VAFHLDG1",107,0)
 . ;
"RTN","VAFHLDG1",108,0)
 . ; -- if primary then 'ok' it (if two are primary we 'ok' last)
"RTN","VAFHLDG1",109,0)
 . IF $P(VAFNODE,U,12)="P" S VAOK(+VAFNODE)=I
"RTN","VAFHLDG1",110,0)
 ;
"RTN","VAFHLDG1",111,0)
 ;
"RTN","VAFHLDG1",112,0)
 F I=0:0 S I=$O(VAXY(I)) Q:'I  D
"RTN","VAFHLDG1",113,0)
 .;
"RTN","VAFHLDG1",114,0)
 .S VAFNODE=VAXY(I)
"RTN","VAFHLDG1",115,0)
 .;
"RTN","VAFHLDG1",116,0)
 .; - build array of HL7 (DG1) segments but only use ok'ed entry for dx
"RTN","VAFHLDG1",117,0)
 .IF $G(VAOK(+VAFNODE))=I D BUILD
"RTN","VAFHLDG1",118,0)
 ;
"RTN","VAFHLDG1",119,0)
ENQ Q
"RTN","VAFHLDG1",120,0)
 ;
"RTN","VAFHLDG1",121,0)
 ;
"RTN","VAFHLDG1",122,0)
BUILD ; - Build array of HL7 (DG1) segments
"RTN","VAFHLDG1",123,0)
 S $P(VAFY,VAFHLFS,16)="",VAFIDX=VAFIDX+1
"RTN","VAFHLDG1",124,0)
 ;
"RTN","VAFHLDG1",125,0)
 ; - Sequential number (required field)
"RTN","VAFHLDG1",126,0)
 S $P(VAFY,VAFHLFS,1)=VAFIDX
"RTN","VAFHLDG1",127,0)
 ;
"RTN","VAFHLDG1",128,0)
 I (VAFSTR[",2,")!(VAFSTR[",3,")!(VAFSTR[",4,") S VAFDNODE=$$ICDDX^ICDEX(+VAFNODE,$G(ICDVDT),$$CSI^ICDEX(80,+VAFNODE),"I")
"RTN","VAFHLDG1",129,0)
 I VAFSTR[",2," S X=$P($G(VAFDNODE),"^",20),$P(VAFY,VAFHLFS,2)=$S(X=30:"I10",1:"I9")
"RTN","VAFHLDG1",130,0)
 I VAFSTR[",3," S X=$P($G(VAFDNODE),"^",2),$P(VAFY,VAFHLFS,3)=$S(X]"":X,1:VAFHLQ) ; Diagnosis Code
"RTN","VAFHLDG1",131,0)
 I VAFSTR[",4," S X=$P($G(VAFDNODE),"^",4),$P(VAFY,VAFHLFS,4)=$S(X]"":X,1:VAFHLQ) ; Diagnosis Description
"RTN","VAFHLDG1",132,0)
 I VAFSTR[",5," S X=$$HLDATE^HLFNC($$SCE^DGSDU(VAFENC,1,0)),$P(VAFY,VAFHLFS,5)=$S(X]"":X,1:VAFHLQ) ; Diagnosis Date/Time (Encounter Date/Time)
"RTN","VAFHLDG1",133,0)
 ;
"RTN","VAFHLDG1",134,0)
 ; - Contains 1 if primary diagnosis, blank otherwise
"RTN","VAFHLDG1",135,0)
 I VAFSTR[",15," S X=$P($G(VAFNODE),"^",12),$P(VAFY,VAFHLFS,15)=$S(X="P":1,1:VAFHLQ) ; Diagnosis Ranking Number
"RTN","VAFHLDG1",136,0)
 ;
"RTN","VAFHLDG1",137,0)
 ; - Set all outpatient diagnoses into array
"RTN","VAFHLDG1",138,0)
 S @VAFARRY@(VAFIDX,0)="DG1"_VAFHLFS_$G(VAFY)
"RTN","VAFHLDG1",139,0)
 Q
"RTN","VAUTOMA")
0^66^B13075905^B12495883
"RTN","VAUTOMA",1,0)
VAUTOMA ;ALB/MLI - GENERIC ONE, MANY, ALL ROUTINE ;03/26/2004
"RTN","VAUTOMA",2,0)
 ;;5.3;Registration;**111,568,850**;Aug 13, 1993;Build 171
"RTN","VAUTOMA",3,0)
 ;;MAS VERSION 5.1;
"RTN","VAUTOMA",4,0)
DIVISION S VAUTVB="VAUTD",DIC="^DG(40.8,",VAUTNI=2,VAUTSTR="division" G FIRST
"RTN","VAUTOMA",5,0)
CLINIC S DIC="^SC(",DIC("S")="I $P(^(0),U,3)=""C""&'+$P($G(^(""OOS"")),U,1)&'+$P($G(^(""OOS"")),U,2)&$S(VAUTD:1,$D(VAUTD(+$P(^(0),U,15))):1,'+$P(^(0),U,15)&$D(VAUTD(+$O(^DG(40.8,0)))):1,1:0)",VAUTSTR="clinic",VAUTVB="VAUTC" G FIRST
"RTN","VAUTOMA",6,0)
 ;  DIC("S") modified in CLINIC call, to exclude Occasion of Service locations.  abr - 11/25/96
"RTN","VAUTOMA",7,0)
 ;
"RTN","VAUTOMA",8,0)
PATIENT S DIC="^DPT(",VAUTSTR="patient",VAUTVB="VAUTN" K DIC("IGNORE") G FIRST
"RTN","VAUTOMA",9,0)
WARD S DIC="^DIC(42,",VAUTSTR="ward",VAUTVB="VAUTW",DIC("S")="I $S(VAUTD:1,$D(VAUTD(+$P(^(0),U,11))):1,'+$P(^(0),U,11)&$D(VAUTD(^DG(40.8,+$O(^DG(40.8,0)),0))):1,1:0)" G FIRST
"RTN","VAUTOMA",10,0)
FIRST S DIC(0)="EQMNZ",DIC("A")="Select "_VAUTSTR_": " K @VAUTVB S (@VAUTVB,Y)=0
"RTN","VAUTOMA",11,0)
 I $G(DIC("IGNORE"))=1 I DIC=80!(DIC=80.1)!(DIC="^ICD9(")!(DIC="^ICD0(") S DIC(0)=DIC(0)_"I" K DIC("IGNORE")
"RTN","VAUTOMA",12,0)
REDO W !,DIC("A") W:'$D(VAUTNALL) "ALL// " R X:DTIME G ERR:(X="^")!'$T D:X["?" QQ I X="" G:$D(VAUTNALL) ERR S @VAUTVB=1 G QUIT
"RTN","VAUTOMA",13,0)
 S DIC("A")="Select another "_VAUTSTR_": " D ^DIC G:Y'>0 FIRST D SET
"RTN","VAUTOMA",14,0)
 F VAI=1:0:19 W !,DIC("A") R X:DTIME G ERR:(X="^")!'$T K Y Q:X=""  D QQ:X["?" S:$E(X)="-" VAUTX=X,X=$E(VAUTX,2,999) D ^DIC I Y>0 D SET G:VAX REDO S:'VAERR VAI=VAI+1
"RTN","VAUTOMA",15,0)
 G QUIT
"RTN","VAUTOMA",16,0)
SET S VAX=0 I $D(VAUTX) S J=$S(VAUTNI=2:+Y,1:$P(Y(0),"^")) K VAUTX S VAERR=$S($D(@VAUTVB@(J)):0,1:1) W $S('VAERR:"...removed from list...",1:"...not on list...can't remove") Q:VAERR  S VAI=VAI-1 K @VAUTVB@(J) S:$O(@VAUTVB@(0))']"" VAX=1 Q
"RTN","VAUTOMA",17,0)
 S VAERR=0 I $S($D(@VAUTVB@($P(Y(0),U))):1,$D(@VAUTVB@(+Y)):1,1:0) W !?3,*7,"You have already selected that ",VAUTSTR,".  Try again." S VAERR=1
"RTN","VAUTOMA",18,0)
 I VAUTNI=1 S @VAUTVB@($P(Y(0),U))=+Y Q
"RTN","VAUTOMA",19,0)
 I VAUTNI=3 S @VAUTVB@($P(Y(0,0),U))=+Y Q
"RTN","VAUTOMA",20,0)
 S @VAUTVB@(+Y)=$P(Y(0),U) Q
"RTN","VAUTOMA",21,0)
QQ W !,"ENTER:" W:($D(@(VAUTVB))=1&'$D(VAUTNALL)) !?5,"- Return for all ",VAUTSTR,"s, or" W !?5,"- A ",VAUTSTR," and return when all ",VAUTSTR,"s have been selected--limit 20"
"RTN","VAUTOMA",22,0)
 W !?5,"Imprecise selections will yield an additional prompt."
"RTN","VAUTOMA",23,0)
 W !?5,"(e.g. When a user enters 'A', all items beginning with 'A' are displayed.)"
"RTN","VAUTOMA",24,0)
 I $O(@VAUTVB@(0))]"" W !?5,"- An entry preceeded by a minus [-] sign to remove entry from list."
"RTN","VAUTOMA",25,0)
 I $O(@VAUTVB@(0))]"" W !,"NOTE, you have already selected:" S VAJ=0 F VAJ1=0:0 S VAJ=$O(@VAUTVB@(VAJ)) Q:VAJ=""  W !?8,$S(VAUTNI=1:VAJ,1:@VAUTVB@(VAJ))
"RTN","VAUTOMA",26,0)
 Q
"RTN","VAUTOMA",27,0)
ERR S Y=-1
"RTN","VAUTOMA",28,0)
QUIT S:'$D(Y) Y=1 K DIC,J,VAERR,VAI,VAJ,VAJ1,VAX,VAUTNALL,VAUTNI,VAUTSTR,VAUTVB,X Q
"UP",2,2.396,-1)
2^.396
"UP",2,2.396,0)
2.396
"UP",2,2.397,-1)
2^.397
"UP",2,2.397,0)
2.397
"UP",2,2.409,-2)
2^.399
"UP",2,2.409,-1)
2.399^1
"UP",2,2.409,0)
2.409
"UP",27.17,27.174,-1)
27.17^1
"UP",27.17,27.174,0)
27.174
"UP",45,45.01,-1)
45^S
"UP",45,45.01,0)
45.01
"UP",45,45.02,-1)
45^M
"UP",45,45.02,0)
45.02
"UP",45,45.05,-1)
45^P
"UP",45,45.05,0)
45.05
"UP",45,45.06,-1)
45^C
"UP",45,45.06,0)
45.06
"VER")
8.0^22.0
"^DD",2,2,.396,0)
CD STATUS DIAGNOSES^2.396P^^.396;0
"^DD",2,2,.396,12)
Must point to a CD REASON that is a diagnosis.
"^DD",2,2,.396,12.1)
S DIC("S")="I $P(^DGEN(27.17,Y,0),U,2)=""D"""
"^DD",2,2,.397,0)
CD STATUS PROCEDURES^2.397P^^.397;0
"^DD",2,2,.397,12)
Must select a CD REASON that is a valid procedure.
"^DD",2,2,.397,12.1)
S DIC("S")="I $P(^DGEN(27.17,Y,0),U,2)=""P"""
"^DD",2,2,.397,21,0)
^^1^1^3120210^
"^DD",2,2,.397,21,1,0)
The status procedure must be a valid procedure in the CD Reasons File (#27.17).
"^DD",2,2.396,0)
CD STATUS DIAGNOSES SUB-FIELD^^.01^1
"^DD",2,2.396,0,"NM","CD STATUS DIAGNOSES")

"^DD",2,2.396,.01,0)
CD STATUS DIAGNOSES^M*P27.17'XO^DGEN(27.17,^0;1^S DIC("S")="I $$TYPE^DGENA5(Y)=""D""&($P(^DGEN(27.17,+Y,0),U,9)=$$ICDVER^DGENA5(""D""))" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",2,2.396,.01,1,0)
^.1
"^DD",2,2.396,.01,1,1,0)
2.396^B
"^DD",2,2.396,.01,1,1,1)
S ^DPT(DA(1),.396,"B",$E(X,1,30),DA)=""
"^DD",2,2.396,.01,1,1,2)
K ^DPT(DA(1),.396,"B",$E(X,1,30),DA)
"^DD",2,2.396,.01,1,2,0)
2.396^AENR01^MUMPS
"^DD",2,2.396,.01,1,2,1)
D EVENT^IVMPLOG($G(DA(1)))
"^DD",2,2.396,.01,1,2,2)
D EVENT^IVMPLOG($G(DA(1)))
"^DD",2,2.396,.01,1,2,3)
 DO NOT DELETE
"^DD",2,2.396,.01,1,2,"%D",0)
^.101^2^2^3050913^^^^
"^DD",2,2.396,.01,1,2,"%D",1,0)
This cross-reference is used to notify HEC of changes that may affect
"^DD",2,2.396,.01,1,2,"%D",2,0)
enrollment.
"^DD",2,2.396,.01,1,2,"DT")
3050913
"^DD",2,2.396,.01,2)
S Y(0)=Y S Y=$$DISP^DGENLCD1(Y)
"^DD",2,2.396,.01,2.1)
S Y=$$DISP^DGENLCD1(Y)
"^DD",2,2.396,.01,3)
Select a CD diagnosis.
"^DD",2,2.396,.01,12)
Must specify a CD REASON that is a diagnosis and the diagnosis coding system must match the value stored in the CD Reasons file. 
"^DD",2,2.396,.01,12.1)
S DIC("S")="I $$TYPE^DGENA5(Y)=""D""&($P(^DGEN(27.17,+Y,0),U,9)=$$ICDVER^DGENA5(""D""))"
"^DD",2,2.396,.01,21,0)
^^2^2^3130828^
"^DD",2,2.396,.01,21,1,0)
This is a diagnosis which determines that the veteran is catastrophically 
"^DD",2,2.396,.01,21,2,0)
disabled.
"^DD",2,2.396,.01,"DT")
3130828
"^DD",2,2.397,0)
CD STATUS PROCEDURES SUB-FIELD^^1^2
"^DD",2,2.397,0,"NM","CD STATUS PROCEDURES")

"^DD",2,2.397,.01,0)
CD STATUS PROCEDURES^M*P27.17'XO^DGEN(27.17,^0;1^S DIC("S")="I $$TYPE^DGENA5(Y)=""P"" I ($P(^DGEN(27.17,+Y,0),U,3)[""ICPT"")!($P(^DGEN(27.17,+Y,0),U,9)=$$ICDVER^DGENA5(""P""))" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",2,2.397,.01,1,0)
^.1
"^DD",2,2.397,.01,1,1,0)
2.397^B
"^DD",2,2.397,.01,1,1,1)
S ^DPT(DA(1),.397,"B",$E(X,1,30),DA)=""
"^DD",2,2.397,.01,1,1,2)
K ^DPT(DA(1),.397,"B",$E(X,1,30),DA)
"^DD",2,2.397,.01,1,2,0)
2.397^AENR01^MUMPS
"^DD",2,2.397,.01,1,2,1)
D EVENT^IVMPLOG($G(DA(1)))
"^DD",2,2.397,.01,1,2,2)
D EVENT^IVMPLOG($G(DA(1)))
"^DD",2,2.397,.01,1,2,3)
 DO NOT DELETE
"^DD",2,2.397,.01,1,2,"%D",0)
^.101^2^2^3050913^^^^
"^DD",2,2.397,.01,1,2,"%D",1,0)
This cross-reference is used to notify HEC of changes that may affect
"^DD",2,2.397,.01,1,2,"%D",2,0)
enrollment.
"^DD",2,2.397,.01,1,2,"DT")
3050913
"^DD",2,2.397,.01,2)
S Y(0)=Y S Y=$$DISP^DGENLCD1(Y)
"^DD",2,2.397,.01,2.1)
S Y=$$DISP^DGENLCD1(Y)
"^DD",2,2.397,.01,3)
The status procedure must be a valid procedure in the CD Reasons File (#27.17).
"^DD",2,2.397,.01,12)
Must specify a CD REASON that is a procedure. The code must be a CPT code or the procedure coding system must match the value stored in the CD Reasons file.
"^DD",2,2.397,.01,12.1)
S DIC("S")="I $$TYPE^DGENA5(Y)=""P"" I ($P(^DGEN(27.17,+Y,0),U,3)[""ICPT"")!($P(^DGEN(27.17,+Y,0),U,9)=$$ICDVER^DGENA5(""P""))"
"^DD",2,2.397,.01,21,0)
^^3^3^3130828^
"^DD",2,2.397,.01,21,1,0)
This is for storage of either CPT procedure or ICD procedure codes.  ICD 
"^DD",2,2.397,.01,21,2,0)
codes must be for the correct coding system, as determined by procedure 
"^DD",2,2.397,.01,21,3,0)
date and stored in file 27.17 piece 9.
"^DD",2,2.397,.01,"DT")
3130828
"^DD",2,2.397,1,0)
AFFECTED EXTREMITY^R*S^RUE:Right Upper Extremity;LUE:Left Upper Extremity;RLE:Right Lower Extremity;LLE:Left Lower Extremity;BLE:Bilateral Lower Extremity;BUE:Bilateral Upper Extremity;^0;2^Q
"^DD",2,2.397,1,1,0)
^.1
"^DD",2,2.397,1,1,1,0)
2.397^AENR1^MUMPS
"^DD",2,2.397,1,1,1,1)
D EVENT^IVMPLOG($G(DA(1)))
"^DD",2,2.397,1,1,1,2)
D EVENT^IVMPLOG($G(DA(1)))
"^DD",2,2.397,1,1,1,3)
 DO NOT DELETE
"^DD",2,2.397,1,1,1,"%D",0)
^.101^2^2^3050913^^^^
"^DD",2,2.397,1,1,1,"%D",1,0)
This cross-reference is used to notify HEC of changes that may affect
"^DD",2,2.397,1,1,1,"%D",2,0)
enrollment.
"^DD",2,2.397,1,1,1,"DT")
3050913
"^DD",2,2.397,1,3)
Choose the affected extremity.
"^DD",2,2.397,1,12)
Must select an affected extremity that is valid for the procedure.
"^DD",2,2.397,1,12.1)
S DIC("S")="I $$LSCREEN^DGENA5(Y)"
"^DD",2,2.397,1,21,0)
^^1^1^3130828^
"^DD",2,2.397,1,21,1,0)
This is the affected extremity for this procedure.
"^DD",2,2.397,1,"DT")
3130828
"^DD",2,2.409,1,0)
AFFECTED EXTREMITY^S^RUE:RIGHT UPPER EXTREMITY;LUE:LEFT UPPER EXTREMITY;RLE:RIGHT LOWER EXTREMITY;LLE:LEFT LOWER EXTREMITY;BLE:Bilateral Lower Extremity;BLU:Bilateral Upper Extremity;^0;2^Q
"^DD",2,2.409,1,3)
Choose the affected extremity.
"^DD",2,2.409,1,21,0)
^^1^1^3130828^
"^DD",2,2.409,1,21,1,0)
This is the extremity affected by the CD.
"^DD",2,2.409,1,"DT")
3130828
"^DD",27.17,27.17,1,0)
TYPE^RSI^P:PROCEDURE;D:DIAGNOSIS;C:CONDITION;^0;2^Q
"^DD",27.17,27.17,1,3)
Enter the correct type.
"^DD",27.17,27.17,1,5,1,0)
27.17^3^1
"^DD",27.17,27.17,1,21,0)
^.001^3^3^3120124^^
"^DD",27.17,27.17,1,21,1,0)
This field contains the type of CATASTROPHIC DISABILITY REASON.  The
"^DD",27.17,27.17,1,21,2,0)
PATIENT file uses this set of codes to screen out Diagnoses, Procedures
"^DD",27.17,27.17,1,21,3,0)
and Conditions in its fields .396, .397, and .398
"^DD",27.17,27.17,1,"DT")
3120125
"^DD",27.17,27.17,3,0)
ICD OR CPT CODE^VX^^0;3^Q
"^DD",27.17,27.17,3,.1)

"^DD",27.17,27.17,3,1,0)
^.1
"^DD",27.17,27.17,3,1,1,0)
^^TRIGGER^27.17^1
"^DD",27.17,27.17,3,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGEN(27.17,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y X ^DD(27.17,3,1,1,1.1) S DIH=$G(^DGEN(27.17,DIV(0),0)),DIV=X S $P(^(0),U,2)=DIV,DIH=27.17,DIG=1 D ^DICR
"^DD",27.17,27.17,3,1,1,1.1)
S X=DIV N DGP S DGP=$P($P(^DGEN(27.17,DA,0),U,3),";",2) S X=$S(DGP="ICD9(":"D",DGP="ICD0(":"P",DGP="ICPT(":"P",1:"")
"^DD",27.17,27.17,3,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGEN(27.17,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" S DIH=$G(^DGEN(27.17,DIV(0),0)),DIV=X S $P(^(0),U,2)=DIV,DIH=27.17,DIG=1 D ^DICR
"^DD",27.17,27.17,3,1,1,3)
Do not Delete.
"^DD",27.17,27.17,3,1,1,"%D",0)
^.101^2^2^3130604^^^
"^DD",27.17,27.17,3,1,1,"%D",1,0)
This trigger populates the TYPE field to the correct value for any
"^DD",27.17,27.17,3,1,1,"%D",2,0)
Diagnosis or Procedure code entered.
"^DD",27.17,27.17,3,1,1,"CREATE VALUE")
N DGP S DGP=$P($P(^DGEN(27.17,DA,0),U,3),";",2) S X=$S(DGP="ICD9(":"D",DGP="ICD0(":"P",DGP="ICPT(":"P",1:"")
"^DD",27.17,27.17,3,1,1,"DELETE VALUE")
@
"^DD",27.17,27.17,3,1,1,"DT")
3120125
"^DD",27.17,27.17,3,1,1,"FIELD")
TYPE
"^DD",27.17,27.17,3,1,2,0)
^^TRIGGER^27.17^9
"^DD",27.17,27.17,3,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGEN(27.17,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y X ^DD(27.17,3,1,2,1.1) S DIH=$G(^DGEN(27.17,DIV(0),0)),DIV=X S $P(^(0),U,9)=DIV,DIH=27.17,DIG=9 D ^DICR
"^DD",27.17,27.17,3,1,2,1.1)
S X=DIV N DGP,DGIEN S DGP=$P($P(^DGEN(27.17,DA,0),U,3),";",2),DGIEN=+$P(^DGEN(27.17,DA,0),U,3) S X=$S(DGP="ICD9(":$$CSI^ICDEX(80,DGIEN),DGP="ICD0(":$$CSI^ICDEX(80.1,DGIEN),1:"")
"^DD",27.17,27.17,3,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGEN(27.17,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" S DIH=$G(^DGEN(27.17,DIV(0),0)),DIV=X S $P(^(0),U,9)=DIV,DIH=27.17,DIG=9 D ^DICR
"^DD",27.17,27.17,3,1,2,3)
Do Not Delete
"^DD",27.17,27.17,3,1,2,"%D",0)
^^1^1^3120130^
"^DD",27.17,27.17,3,1,2,"%D",1,0)
This trigger updates the ICD VERSION field to the correct value.
"^DD",27.17,27.17,3,1,2,"CREATE VALUE")
N DGP,DGIEN S DGP=$P($P(^DGEN(27.17,DA,0),U,3),";",2),DGIEN=+$P(^DGEN(27.17,DA,0),U,3) S X=$S(DGP="ICD9(":$$CSI^ICDEX(80,DGIEN),DGP="ICD0(":$$CSI^ICDEX(80.1,DGIEN),1:"")
"^DD",27.17,27.17,3,1,2,"DELETE VALUE")
@
"^DD",27.17,27.17,3,1,2,"DT")
3120130
"^DD",27.17,27.17,3,1,2,"FIELD")
ICD VERSION
"^DD",27.17,27.17,3,3)
Select an appropriate Diagnostic/Procedure code, if applicable.
"^DD",27.17,27.17,3,21,0)
^.001^8^8^3120113^^^^
"^DD",27.17,27.17,3,21,1,0)
If the type is "PROCEDURE" then this must be a CPT Code or an ICD
"^DD",27.17,27.17,3,21,2,0)
Operation/Procedure.  If the type is "DIAGNOSIS" then this must be
"^DD",27.17,27.17,3,21,3,0)
an ICD Diagnosis.  If the type is "CONDITION" then this 
"^DD",27.17,27.17,3,21,4,0)
field must be blank.
"^DD",27.17,27.17,3,21,5,0)
 
"^DD",27.17,27.17,3,21,6,0)
If this field contains an ICD Diagnosis or Procedure code
"^DD",27.17,27.17,3,21,7,0)
then the ICD VERSION field (#9) must point to the correct ICD
"^DD",27.17,27.17,3,21,8,0)
VERSION.
"^DD",27.17,27.17,3,"DT")
3120130
"^DD",27.17,27.17,3,"V",0)
^.12P^3^3
"^DD",27.17,27.17,3,"V",1,0)
80^ICD Diagnostic Code^10^ICDDI^^n
"^DD",27.17,27.17,3,"V",2,0)
80.1^ICD Operation/Procedure^20^ICDOP^^n
"^DD",27.17,27.17,3,"V",3,0)
81^CPT Procedure^30^ICPT^^n
"^DD",27.17,27.17,4,0)
AFFECTED LIMB^27.174SA^^1;0
"^DD",27.17,27.17,4,21,0)
^^2^2^2990520^
"^DD",27.17,27.17,4,21,1,0)
This set of codes determines to which limbs the procedure could apply.
"^DD",27.17,27.17,4,21,2,0)
A procedure cannot be entered for a limb that's not mentioned here.
"^DD",27.17,27.17,9,0)
ICD VERSION^P80.4'I^ICDS(^0;9^Q
"^DD",27.17,27.17,9,3)
Select the appropriate coding system for this entry.
"^DD",27.17,27.17,9,5,1,0)
27.17^3^2
"^DD",27.17,27.17,9,21,0)
^.001^9^9^3120125^^^^
"^DD",27.17,27.17,9,21,1,0)
Indicate the correct version of the ICD code for this entry.
"^DD",27.17,27.17,9,21,2,0)
 
"^DD",27.17,27.17,9,21,3,0)
If the type "PROCEDURE" then indicate the correct version of ICD
"^DD",27.17,27.17,9,21,4,0)
Operation/Procedure
"^DD",27.17,27.17,9,21,5,0)
 
"^DD",27.17,27.17,9,21,6,0)
If the type is "DIAGNOSIS" then indicate the correct version of ICD
"^DD",27.17,27.17,9,21,7,0)
Diagnosis.
"^DD",27.17,27.17,9,21,8,0)
 
"^DD",27.17,27.17,9,21,9,0)
If the type is "CONDITION" then this field must be blank
"^DD",27.17,27.17,9,"DT")
3120125
"^DD",27.17,27.17,10,0)
LONG DESCRIPTION^F^^5;1^K:$L(X)>130!($L(X)<3) X
"^DD",27.17,27.17,10,3)
Answer must be 3-130 characters in length.
"^DD",27.17,27.17,10,21,0)
^.001^1^1^3120620^^^^
"^DD",27.17,27.17,10,21,1,0)
Enter the long description to be used for Diagnosis or Procedure codes.
"^DD",27.17,27.17,10,"DT")
3111214
"^DD",27.17,27.174,0)
AFFECTED LIMB SUB-FIELD^^.01^1
"^DD",27.17,27.174,0,"NM","AFFECTED LIMB")

"^DD",27.17,27.174,.01,0)
AFFECTED LIMB^MS^RUE:Right Upper Extremity;RLE:Right Lower Extremity;LUE:Left Upper Extremity;LLE:Left Lower Extremity;BLE:Bilateral Lower Extremity;BUE:Bilateral Upper Extremity;^0;1^Q
"^DD",27.17,27.174,.01,1,0)
^.1
"^DD",27.17,27.174,.01,1,1,0)
27.174^B
"^DD",27.17,27.174,.01,1,1,1)
S ^DGEN(27.17,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",27.17,27.174,.01,1,1,2)
K ^DGEN(27.17,DA(1),1,"B",$E(X,1,30),DA)
"^DD",27.17,27.174,.01,21,0)
^^4^4^2990514^^^^
"^DD",27.17,27.174,.01,21,1,0)
For ICD Procedure Codes and CPT Codes, this field is used to define
"^DD",27.17,27.174,.01,21,2,0)
the acceptable extremities to which the code could apply.
"^DD",27.17,27.174,.01,21,3,0)
This field will also be used for V codes in the future.
"^DD",27.17,27.174,.01,21,4,0)
The field is not used for ICD Diagnostic codes.
"^DD",27.17,27.174,.01,"DT")
3120103
"^DD",45,45,9,0)
DRG^CJ8X^^ ; ^Q:'$D(^DGPT(D0,0))  S %PTF=1,DRG=$S($D(^DGP(45.84,D0,0)):$P(^(0),U,6),1:""),(ICDCAL,DGCPT)="",DFN=+^DGPT(D0,0),PTF=D0,ZTA=D0 D EN1^DGPTFD:'DRG S X=DRG,DRGCAL=$S($D(^ICD(+X,0)):^(0),1:"") K ZTA,DZ,DGCPT
"^DD",45,45,9,9)
^
"^DD",45,45,9,9.01)

"^DD",45,45,9,9.1)
S DZ=$S($D(DA):DA,$D(D0):D0,1:"") Q:DZ=""  S %PTF=1,DRG="",ICDCAL="",DFN=+^DGPT(DZ,0),PTF=D0,ZTA=D0 D EN1^DGPTFD S DA=ZTA,X=DRG K ZTA,DZ
"^DD",45,45,9,21,0)
^.001^2^2^3120302^^^^
"^DD",45,45,9,21,1,0)
This field contains the DRG for the episode of care described by the 
"^DD",45,45,9,21,2,0)
PTF record.
"^DD",45,45,9,"DT")
2890721
"^DD",45,45,45.01,0)
PROCEDURE 1^*P80.1'X^ICD0(^401P;1^N K,DGI S DGI=1 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA),"EN2")
"^DD",45,45,45.01,1,0)
^.1
"^DD",45,45,45.01,1,1,0)
45^AP^MUMPS
"^DD",45,45,45.01,1,1,1)
S ^DGPT(DA,"AP",X)=""
"^DD",45,45,45.01,1,1,2)
K ^DGPT(DA,"AP",X)
"^DD",45,45,45.01,3)
Enter the first procedure for this episode of care.
"^DD",45,45,45.01,21,0)
^.001^1^1^3121210^^^^
"^DD",45,45,45.01,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45,45.01,"DT")
3120827
"^DD",45,45,45.02,0)
PROCEDURE 2^*P80.1'X^ICD0(^401P;2^N K,DGI S DGI=2 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA),"EN2")
"^DD",45,45,45.02,1,0)
^.1
"^DD",45,45,45.02,1,1,0)
45^AP^MUMPS
"^DD",45,45,45.02,1,1,1)
S ^DGPT(DA,"AP",X)=""
"^DD",45,45,45.02,1,1,2)
K ^DGPT(DA,"AP",X)
"^DD",45,45,45.02,3)
Enter the 2nd procedure for this patient's current episode of care.
"^DD",45,45,45.02,21,0)
^.001^1^1^3120229^^^
"^DD",45,45,45.02,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45,45.02,"DT")
3120827
"^DD",45,45,45.03,0)
PROCEDURE 3^*P80.1'X^ICD0(^401P;3^N K,DGI S DGI=3 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA),"EN2")
"^DD",45,45,45.03,1,0)
^.1
"^DD",45,45,45.03,1,1,0)
45^AP^MUMPS
"^DD",45,45,45.03,1,1,1)
S ^DGPT(DA,"AP",X)=""
"^DD",45,45,45.03,1,1,2)
K ^DGPT(DA,"AP",X)
"^DD",45,45,45.03,3)
Enter the 3rd procedure performed on this patient during this episode of care.
"^DD",45,45,45.03,21,0)
^.001^1^1^3120229^^
"^DD",45,45,45.03,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45,45.03,"DT")
3121030
"^DD",45,45,45.04,0)
PROCEDURE 4^*P80.1'X^ICD0(^401P;4^N K,DGI S DGI=4 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA),"EN2")
"^DD",45,45,45.04,1,0)
^.1
"^DD",45,45,45.04,1,1,0)
45^AP^MUMPS
"^DD",45,45,45.04,1,1,1)
S ^DGPT(DA,"AP",X)=""
"^DD",45,45,45.04,1,1,2)
K ^DGPT(DA,"AP",X)
"^DD",45,45,45.04,3)
Enter the 4th procedure that was performed on the patient during his current episode of care.
"^DD",45,45,45.04,21,0)
^.001^1^1^3120229^^
"^DD",45,45,45.04,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45,45.04,"DT")
3121030
"^DD",45,45,45.05,0)
PROCEDURE 5^*P80.1'X^ICD0(^401P;5^N K,DGI S DGI=5 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA),"EN2")
"^DD",45,45,45.05,1,0)
^.1
"^DD",45,45,45.05,1,1,0)
45^AP^MUMPS
"^DD",45,45,45.05,1,1,1)
S ^DGPT(DA,"AP",X)=""
"^DD",45,45,45.05,1,1,2)
K ^DGPT(DA,"AP",X)
"^DD",45,45,45.05,3)
Enter the 5th procedure for the patient's current episode of care.
"^DD",45,45,45.05,21,0)
^.001^1^1^3120229^^
"^DD",45,45,45.05,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45,45.05,"DT")
3121030
"^DD",45,45,60,0)
601^45.05D^^P;0
"^DD",45,45,60,21,0)
^.001^1^1^3120229^^^
"^DD",45,45,60,21,1,0)
601 movements.
"^DD",45,45,79,0)
PRINCIPAL DIAGNOSIS^*P80'X^ICD9(^70;10^N DGI S DGI=1 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79,1,0)
^.1^^-1
"^DD",45,45,79,1,992,0)
45^ADGRU79^MUMPS
"^DD",45,45,79,1,992,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79,1,992,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79,1,992,"%D",0)
^.101^1^1^3040409^^^^
"^DD",45,45,79,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79,1,992,"DT")
3040409
"^DD",45,45,79,3)
Enter the ICD diagnosis responsible for the patient's greatest length of stay.
"^DD",45,45,79,4)
Q
"^DD",45,45,79,21,0)
^.001^2^2^3120306^^^^
"^DD",45,45,79,21,1,0)
This field contains the diagnosis responsible for the patient's
"^DD",45,45,79,21,2,0)
greatest length of stay.
"^DD",45,45,79,"DT")
3121030
"^DD",45,45,79.16,0)
SECONDARY DIAGNOSIS 1^*P80`X^ICD9(^70;16^N DGI S DGI=2 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.16,1,0)
^.1
"^DD",45,45,79.16,1,992,0)
45^ADGRU7916^MUMPS
"^DD",45,45,79.16,1,992,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.16,1,992,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.16,1,992,"%D",0)
^.101^1^1^3040409^^^^
"^DD",45,45,79.16,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.16,1,992,"DT")
3040409
"^DD",45,45,79.16,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.16,21,0)
^.001^2^2^3120222^^^^
"^DD",45,45,79.16,21,1,0)
This field contains a diagnosis for the patient during this episode of
"^DD",45,45,79.16,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.16,"DT")
3121030
"^DD",45,45,79.17,0)
SECONDARY DIAGNOSIS 2^*P80'X^ICD9(^70;17^N DGI S DGI=3 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.17,1,0)
^.1
"^DD",45,45,79.17,1,992,0)
45^ADGRU7917^MUMPS
"^DD",45,45,79.17,1,992,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.17,1,992,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.17,1,992,"%D",0)
^.101^1^1^3040409^^^^
"^DD",45,45,79.17,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.17,1,992,"DT")
3040409
"^DD",45,45,79.17,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.17,21,0)
^.001^2^2^3040115^^^^
"^DD",45,45,79.17,21,1,0)
This field contains a diagnosis for the patient during this episode of
"^DD",45,45,79.17,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.17,"DT")
3121030
"^DD",45,45,79.18,0)
SECONDARY DIAGNOSIS 3^*P80'X^ICD9(^70;18^N DGI S DGI=4 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.18,1,0)
^.1
"^DD",45,45,79.18,1,992,0)
45^ADGRU7818^MUMPS
"^DD",45,45,79.18,1,992,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.18,1,992,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.18,1,992,"%D",0)
^.101^1^1^3040409^^^^
"^DD",45,45,79.18,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.18,1,992,"DT")
3040409
"^DD",45,45,79.18,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.18,21,0)
^.001^2^2^3120110^^^^
"^DD",45,45,79.18,21,1,0)
This field contains a diagnosis for the patient during this episode of
"^DD",45,45,79.18,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.18,"DT")
3121030
"^DD",45,45,79.19,0)
SECONDARY DIAGNOSIS 4^*P80'X^ICD9(^70;19^N DGI S DGI=5 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.19,1,0)
^.1
"^DD",45,45,79.19,1,992,0)
45^ADGRU7919^MUMPS
"^DD",45,45,79.19,1,992,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.19,1,992,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.19,1,992,"%D",0)
^.101^1^1^3040409^^^^
"^DD",45,45,79.19,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.19,1,992,"DT")
3040409
"^DD",45,45,79.19,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.19,21,0)
^.001^2^2^3040115^^^^
"^DD",45,45,79.19,21,1,0)
This field contains a diagnosis for the patient during this episode of
"^DD",45,45,79.19,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.19,"DT")
3121030
"^DD",45,45,79.201,0)
SECONDARY DIAGNOSIS 5^*P80'X^ICD9(^70;20^N DGI S DGI=6 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.201,1,0)
^.1
"^DD",45,45,79.201,1,992,0)
45^ADGRU79201^MUMPS
"^DD",45,45,79.201,1,992,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.201,1,992,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.201,1,992,"%D",0)
^.101^1^1^3040409^^^^
"^DD",45,45,79.201,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.201,1,992,"DT")
3040409
"^DD",45,45,79.201,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.201,21,0)
^.001^2^2^3040115^^^^
"^DD",45,45,79.201,21,1,0)
This field contains a diagnosis for the patient during this episode of
"^DD",45,45,79.201,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.201,"DT")
3121030
"^DD",45,45,79.21,0)
SECONDARY DIAGNOSIS 6^*P80'X^ICD9(^70;21^N DGI S DGI=7 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.21,1,0)
^.1
"^DD",45,45,79.21,1,992,0)
45^ADGRU7921^MUMPS
"^DD",45,45,79.21,1,992,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.21,1,992,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.21,1,992,"%D",0)
^.101^1^1^3040409^^^^
"^DD",45,45,79.21,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.21,1,992,"DT")
3040409
"^DD",45,45,79.21,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.21,21,0)
^.001^2^2^3120110^^^^
"^DD",45,45,79.21,21,1,0)
This field contains a diagnosis for the patient during this episode of
"^DD",45,45,79.21,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.21,"DT")
3121030
"^DD",45,45,79.22,0)
SECONDARY DIAGNOSIS 7^*P80'X^ICD9(^70;22^N DGI S DGI=8 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.22,1,0)
^.1
"^DD",45,45,79.22,1,992,0)
45^ADGRU7922^MUMPS
"^DD",45,45,79.22,1,992,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.22,1,992,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.22,1,992,"%D",0)
^.101^1^1^3040409^^^^
"^DD",45,45,79.22,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.22,1,992,"DT")
3040409
"^DD",45,45,79.22,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.22,21,0)
^.001^2^2^3040115^^^^
"^DD",45,45,79.22,21,1,0)
This field contains a diagnosis for the patient during this episode of
"^DD",45,45,79.22,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.22,"DT")
3121030
"^DD",45,45,79.23,0)
SECONDARY DIAGNOSIS 8^*P80'X^ICD9(^70;23^N DGI S DGI=9 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.23,1,0)
^.1
"^DD",45,45,79.23,1,992,0)
45^ADGRU7923^MUMPS
"^DD",45,45,79.23,1,992,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.23,1,992,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.23,1,992,"%D",0)
^.101^1^1^3040409^^^^
"^DD",45,45,79.23,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.23,1,992,"DT")
3040409
"^DD",45,45,79.23,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.23,21,0)
^.001^2^2^3040115^^^^
"^DD",45,45,79.23,21,1,0)
This field contains a diagnosis for the patient during this episode of
"^DD",45,45,79.23,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.23,"DT")
3121030
"^DD",45,45,79.24,0)
SECONDARY DIAGNOSIS 9^*P80'X^ICD9(^70;24^N DGI S DGI=10 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.24,1,0)
^.1
"^DD",45,45,79.24,1,992,0)
45^ADGRU7924^MUMPS
"^DD",45,45,79.24,1,992,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.24,1,992,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.24,1,992,"%D",0)
^.101^1^1^3040409^^^^
"^DD",45,45,79.24,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.24,1,992,"DT")
3040409
"^DD",45,45,79.24,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.24,21,0)
^.001^2^2^3040115^^^^
"^DD",45,45,79.24,21,1,0)
This field contains a diagnosis for the patient during this episode of
"^DD",45,45,79.24,21,2,0)
care. This diagnosis is used in the calculation of the DRG.
"^DD",45,45,79.24,"DT")
3121030
"^DD",45,45,79.241,0)
SECONDARY DIAGNOSIS 10^*P80'X^ICD9(^71;1^N DGI S DGI=11 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.241,1,0)
^.1
"^DD",45,45,79.241,1,1,0)
45^ADGRU79241^MUMPS
"^DD",45,45,79.241,1,1,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.241,1,1,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.241,1,1,"%D",0)
^.101^1^1^3050324^^^
"^DD",45,45,79.241,1,1,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.241,1,1,"DT")
3050324
"^DD",45,45,79.241,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.241,21,0)
^.001^1^1^3120222^^^^
"^DD",45,45,79.241,21,1,0)
This field contains a diagnosis for the patient during this episode of care.
"^DD",45,45,79.241,"DT")
3121030
"^DD",45,45,79.242,0)
SECONDARY DIAGNOSIS 11^*P80'X^ICD9(^71;2^N DGI S DGI=12 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.242,1,0)
^.1
"^DD",45,45,79.242,1,1,0)
45^ADGRU79242^MUMPS
"^DD",45,45,79.242,1,1,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.242,1,1,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.242,1,1,"%D",0)
^^1^1^3050324^
"^DD",45,45,79.242,1,1,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.242,1,1,"DT")
3050324
"^DD",45,45,79.242,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.242,21,0)
^.001^1^1^3040115^^^^
"^DD",45,45,79.242,21,1,0)
This field contains a diagnosis for the patient during this episode of care.
"^DD",45,45,79.242,"DT")
3121030
"^DD",45,45,79.243,0)
SECONDARY DIAGNOSIS 12^*P80'X^ICD9(^71;3^N DGI S DGI=13 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.243,1,0)
^.1
"^DD",45,45,79.243,1,1,0)
45^ADGRU79243^MUMPS
"^DD",45,45,79.243,1,1,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.243,1,1,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.243,1,1,"%D",0)
^^1^1^3050324^
"^DD",45,45,79.243,1,1,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.243,1,1,"DT")
3050324
"^DD",45,45,79.243,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.243,21,0)
^.001^1^1^3040115^^^^
"^DD",45,45,79.243,21,1,0)
This field contains a diagnosis for the patient during this episode of care.
"^DD",45,45,79.243,"DT")
3121030
"^DD",45,45,79.244,0)
SECONDARY DIAGNOSIS 13^*P80'X^ICD9(^71;4^N DGI S DGI=14 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA),"EN3")
"^DD",45,45,79.244,1,0)
^.1
"^DD",45,45,79.244,1,1,0)
45^ADGRU79244^MUMPS
"^DD",45,45,79.244,1,1,1)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.244,1,1,2)
N DG1 S DG1=$P(^DGPT(DA,0),"^",1) N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  D:(+DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45,79.244,1,1,"%D",0)
^^1^1^3050324^
"^DD",45,45,79.244,1,1,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45,79.244,1,1,"DT")
3050324
"^DD",45,45,79.244,3)
Enter an ICD diagnosis for the patient during this episode of care.
"^DD",45,45,79.244,"DT")
3121030
"^DD",45,45,82.01,0)
POA PRINCIPAL DIAGNOSIS^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;1^Q
"^DD",45,45,82.01,3)
Apply the Present on Admission (POA) indicator for the Principal Diagnosis.
"^DD",45,45,82.01,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.01,21,1,0)
This is the Present on Admission (POA) indicator for the Principal
"^DD",45,45,82.01,21,2,0)
Diagnosis.  One of the following values should be assigned in 
"^DD",45,45,82.01,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.01,21,4,0)
 
"^DD",45,45,82.01,21,5,0)
 Y = present at the time of inpatient admission; 
"^DD",45,45,82.01,21,6,0)
 N = not present at the time of inpatient admission; 
"^DD",45,45,82.01,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.01,21,8,0)
     present on admission; 
"^DD",45,45,82.01,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.01,21,10,0)
     was present on admission or not
"^DD",45,45,82.01,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.01,23,0)
^.001^4^4^3121004^^^^
"^DD",45,45,82.01,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.01,23,2,0)
will be considered a Y, present at the time of inpatient admission,
"^DD",45,45,82.01,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.01,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.01,"DT")
3120229
"^DD",45,45,82.02,0)
POA SECONDARY DIAGNOSIS 1^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;2^Q
"^DD",45,45,82.02,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 1.
"^DD",45,45,82.02,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.02,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.02,21,2,0)
Diagnosis 1.  One of the following values should be assigned in 
"^DD",45,45,82.02,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.02,21,4,0)
 
"^DD",45,45,82.02,21,5,0)
 Y = present at the time of inpatient admission; 
"^DD",45,45,82.02,21,6,0)
 N = not present at the time of inpatient admission; 
"^DD",45,45,82.02,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.02,21,8,0)
     present on admission; 
"^DD",45,45,82.02,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.02,21,10,0)
     was present on admission or not
"^DD",45,45,82.02,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.02,23,0)
^.001^4^4^3121004^^^^
"^DD",45,45,82.02,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.02,23,2,0)
will be considered a Y, present at the time of inpatient admission,
"^DD",45,45,82.02,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.02,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.02,"DT")
3120229
"^DD",45,45,82.03,0)
POA SECONDARY DIAGNOSIS 2^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;3^Q
"^DD",45,45,82.03,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 2.
"^DD",45,45,82.03,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.03,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.03,21,2,0)
Diagnosis 2.  One of the following values should be assigned in 
"^DD",45,45,82.03,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.03,21,4,0)
 
"^DD",45,45,82.03,21,5,0)
 Y = present at the time of inpatient admission; 
"^DD",45,45,82.03,21,6,0)
 N = not present at the time of inpatient admission; 
"^DD",45,45,82.03,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.03,21,8,0)
     present on admission; 
"^DD",45,45,82.03,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.03,21,10,0)
     was present on admission or not
"^DD",45,45,82.03,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.03,23,0)
^.001^4^4^3121004^^^
"^DD",45,45,82.03,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.03,23,2,0)
will be considered a Y, present at the time of inpatient admission,
"^DD",45,45,82.03,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.03,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.03,"DT")
3120229
"^DD",45,45,82.04,0)
POA SECONDARY DIAGNOSIS 3^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;4^Q
"^DD",45,45,82.04,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 3.
"^DD",45,45,82.04,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.04,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.04,21,2,0)
Diagnosis 3.  One of the following values should be assigned in 
"^DD",45,45,82.04,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.04,21,4,0)
 
"^DD",45,45,82.04,21,5,0)
 Y = present at the time of inpatient admission; 
"^DD",45,45,82.04,21,6,0)
 N = not present at the time of inpatient admission; 
"^DD",45,45,82.04,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.04,21,8,0)
     present on admission; 
"^DD",45,45,82.04,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.04,21,10,0)
     was present on admission or not
"^DD",45,45,82.04,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.04,23,0)
^.001^4^4^3121004^^
"^DD",45,45,82.04,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.04,23,2,0)
will be considered a Y, present at the time of inpatient admission,
"^DD",45,45,82.04,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.04,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.04,"DT")
3120229
"^DD",45,45,82.05,0)
POA SECONDARY DIAGNOSIS 4^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;5^Q
"^DD",45,45,82.05,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 4.
"^DD",45,45,82.05,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.05,21,1,0)
This is the Present on Admission (POA) indicator for Secondary
"^DD",45,45,82.05,21,2,0)
Diagnosis 4.  One of the following values should be assigned in 
"^DD",45,45,82.05,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.05,21,4,0)
 
"^DD",45,45,82.05,21,5,0)
 Y = present at the time of inpatient admission; 
"^DD",45,45,82.05,21,6,0)
 N = not present at the time of inpatient admission; 
"^DD",45,45,82.05,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.05,21,8,0)
     present on admission; 
"^DD",45,45,82.05,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.05,21,10,0)
     was present on admission or not
"^DD",45,45,82.05,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.05,23,0)
^.001^4^4^3121004^^
"^DD",45,45,82.05,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.05,23,2,0)
will be considered a Y, present at the time of inpatient admission,
"^DD",45,45,82.05,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.05,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.05,"DT")
3120229
"^DD",45,45,82.06,0)
POA SECONDARY DIAGNOSIS 5^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;6^Q
"^DD",45,45,82.06,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 5.
"^DD",45,45,82.06,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.06,21,1,0)
This is the Present on Admission (POA) indicator for Secondary
"^DD",45,45,82.06,21,2,0)
Diagnosis 5.  One of the following values should be assigned in 
"^DD",45,45,82.06,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.06,21,4,0)
 
"^DD",45,45,82.06,21,5,0)
 Y = present at the time of inpatient admission; 
"^DD",45,45,82.06,21,6,0)
 N = not present at the time of inpatient admission; 
"^DD",45,45,82.06,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.06,21,8,0)
     present on admission; 
"^DD",45,45,82.06,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.06,21,10,0)
     was present on admission or not
"^DD",45,45,82.06,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.06,23,0)
^.001^4^4^3121004^^
"^DD",45,45,82.06,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.06,23,2,0)
will be considered a Y, present at the time of inpatient admission,
"^DD",45,45,82.06,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.06,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.06,"DT")
3120229
"^DD",45,45,82.07,0)
POA SECONDARY DIAGNOSIS 6^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;7^Q
"^DD",45,45,82.07,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 6.
"^DD",45,45,82.07,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.07,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.07,21,2,0)
Diagnosis 6.  One of the following values should be assigned in 
"^DD",45,45,82.07,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.07,21,4,0)
 
"^DD",45,45,82.07,21,5,0)
 Y = present at the time of inpatient admission; 
"^DD",45,45,82.07,21,6,0)
 N = not present at the time of inpatient admission; 
"^DD",45,45,82.07,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.07,21,8,0)
     present on admission; 
"^DD",45,45,82.07,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.07,21,10,0)
     was present on admission or not
"^DD",45,45,82.07,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.07,23,0)
^.001^4^4^3121004^^^
"^DD",45,45,82.07,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.07,23,2,0)
will be considered a Y, present at the time of inpatient admission,
"^DD",45,45,82.07,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.07,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.07,"DT")
3120229
"^DD",45,45,82.08,0)
POA SECONDARY DIAGNOSIS 7^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;8^Q
"^DD",45,45,82.08,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 7.
"^DD",45,45,82.08,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.08,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.08,21,2,0)
Diagnosis 7.  One of the following values should be assigned in 
"^DD",45,45,82.08,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.08,21,4,0)
 
"^DD",45,45,82.08,21,5,0)
 Y = present at the time of inpatient admission; 
"^DD",45,45,82.08,21,6,0)
 N = not present at the time of inpatient admission; 
"^DD",45,45,82.08,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.08,21,8,0)
     present on admission; 
"^DD",45,45,82.08,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.08,21,10,0)
     was present on admission or not
"^DD",45,45,82.08,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.08,23,0)
^.001^4^4^3121004^^
"^DD",45,45,82.08,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.08,23,2,0)
will be considered a Y, present at the time of inpatient admission,
"^DD",45,45,82.08,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.08,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.08,"DT")
3120229
"^DD",45,45,82.09,0)
POA SECONDARY DIAGNOSIS 8^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;9^Q
"^DD",45,45,82.09,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 8.
"^DD",45,45,82.09,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.09,21,1,0)
This is the Present on Admission (POA) indicator for Secondary
"^DD",45,45,82.09,21,2,0)
Diagnosis 8.  One of the following values should be assigned in 
"^DD",45,45,82.09,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.09,21,4,0)
 
"^DD",45,45,82.09,21,5,0)
 Y = present at the time of inpatient admission; 
"^DD",45,45,82.09,21,6,0)
 N = not present at the time of inpatient admission; 
"^DD",45,45,82.09,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.09,21,8,0)
     present on admission; 
"^DD",45,45,82.09,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.09,21,10,0)
     was present on admission or not
"^DD",45,45,82.09,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.09,23,0)
^.001^4^4^3121004^^
"^DD",45,45,82.09,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.09,23,2,0)
will be considered a Y, present at the time of inpatient admission,
"^DD",45,45,82.09,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.09,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.09,"DT")
3120229
"^DD",45,45,82.1,0)
POA SECONDARY DIAGNOSIS 9^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;10^Q
"^DD",45,45,82.1,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 9.
"^DD",45,45,82.1,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.1,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.1,21,2,0)
Diagnosis 9.  One of the following values should be assigned in 
"^DD",45,45,82.1,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.1,21,4,0)
 
"^DD",45,45,82.1,21,5,0)
 Y = present at the time of inpatient admission; 
"^DD",45,45,82.1,21,6,0)
 N = not present at the time of inpatient admission; 
"^DD",45,45,82.1,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.1,21,8,0)
     present on admission; 
"^DD",45,45,82.1,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.1,21,10,0)
     was present on admission or not
"^DD",45,45,82.1,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.1,23,0)
^.001^4^4^3121004^^
"^DD",45,45,82.1,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.1,23,2,0)
will be considered a Y, present at the time of inpatient admission,
"^DD",45,45,82.1,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.1,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.1,"DT")
3120229
"^DD",45,45,82.11,0)
POA SECONDARY DIAGNOSIS 10^S^Y:Present at  Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;11^Q
"^DD",45,45,82.11,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 10.
"^DD",45,45,82.11,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.11,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.11,21,2,0)
Diagnosis 10.  One of the following values should be assigned in 
"^DD",45,45,82.11,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.11,21,4,0)
 
"^DD",45,45,82.11,21,5,0)
 Y = present at the time of inpatient admission; 
"^DD",45,45,82.11,21,6,0)
 N = not present at the time of inpatient admission; 
"^DD",45,45,82.11,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.11,21,8,0)
     present on admission; 
"^DD",45,45,82.11,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.11,21,10,0)
     was present on admission or not
"^DD",45,45,82.11,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.11,23,0)
^.001^4^4^3121004^^
"^DD",45,45,82.11,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.11,23,2,0)
will be considered a Y, present at the time of inpatient admission,
"^DD",45,45,82.11,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.11,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.11,"DT")
3120229
"^DD",45,45,82.12,0)
POA SECONDARY DIAGNOSIS 11^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;12^Q
"^DD",45,45,82.12,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 11.
"^DD",45,45,82.12,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.12,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.12,21,2,0)
Diagnosis 11.  One of the following values should be assigned in 
"^DD",45,45,82.12,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.12,21,4,0)
 
"^DD",45,45,82.12,21,5,0)
 Y = present at the time of inpatient admission; 
"^DD",45,45,82.12,21,6,0)
 N = not present at the time of inpatient admission; 
"^DD",45,45,82.12,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.12,21,8,0)
     present on admission; 
"^DD",45,45,82.12,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.12,21,10,0)
     was present on admission or not
"^DD",45,45,82.12,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.12,23,0)
^.001^4^4^3121004^^^
"^DD",45,45,82.12,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.12,23,2,0)
will be considered a Y, present at the time of inpatient admission,
"^DD",45,45,82.12,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.12,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.12,"DT")
3120229
"^DD",45,45,82.13,0)
POA SECONDARY DIAGNOSIS 12^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;13^Q
"^DD",45,45,82.13,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 12.
"^DD",45,45,82.13,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.13,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.13,21,2,0)
Diagnosis 12.  One of the following values should be assigned in 
"^DD",45,45,82.13,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.13,21,4,0)
 
"^DD",45,45,82.13,21,5,0)
 Y = present at the time of inpatient admission; 
"^DD",45,45,82.13,21,6,0)
 N = not present at the time of inpatient admission; 
"^DD",45,45,82.13,21,7,0)
 U = documentation is insufficient to determine if condition is 
"^DD",45,45,82.13,21,8,0)
     present on admission; 
"^DD",45,45,82.13,21,9,0)
 W = provider is unable to clinically determine whether condition 
"^DD",45,45,82.13,21,10,0)
     was present on admission or not
"^DD",45,45,82.13,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.13,23,0)
^.001^4^4^3121004^^
"^DD",45,45,82.13,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.13,23,2,0)
will be considered a Y, present at the time of inpatient admission,
"^DD",45,45,82.13,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.13,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.13,"DT")
3120229
"^DD",45,45,82.14,0)
POA SECONDARY DIAGNOSIS 13^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;14^Q
"^DD",45,45,82.14,3)
Apply the Present on Admission (POA) indicator for Secondary Diagnosis 13.
"^DD",45,45,82.14,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45,82.14,21,1,0)
This is the Present on Admission (POA) indicator for Secondary 
"^DD",45,45,82.14,21,2,0)
Diagnosis 13.  One of the following values should be assigned in 
"^DD",45,45,82.14,21,3,0)
accordance with the official coding guidelines:  
"^DD",45,45,82.14,21,4,0)
 
"^DD",45,45,82.14,21,5,0)
 Y = present at the time of inpatient admission;             
"^DD",45,45,82.14,21,6,0)
 N = not present at the time of inpatient admission;           
"^DD",45,45,82.14,21,7,0)
 U = documentation is insufficient to determine if condition is         
"^DD",45,45,82.14,21,8,0)
     present on admission;                              
"^DD",45,45,82.14,21,9,0)
 W = provider is unable to clinically determine whether condition     
"^DD",45,45,82.14,21,10,0)
     was present on admission or not
"^DD",45,45,82.14,21,11,0)
 "" = null, no POA entered, user pressed <Return>
"^DD",45,45,82.14,23,0)
^.001^4^4^3121004^^^
"^DD",45,45,82.14,23,1,0)
Per a decision by the ADT SME on 8/9/2012 a null value of POA
"^DD",45,45,82.14,23,2,0)
will be considered a Y, present at the time of inpatient admission,
"^DD",45,45,82.14,23,3,0)
for calculation of a DRG and for transmission to AITC.  This is
"^DD",45,45,82.14,23,4,0)
because the COTS software used to do PTF does not upload the POA.
"^DD",45,45,82.14,"DT")
3120229
"^DD",45,45.01,8,0)
OPERATION CODE 1^*P80.1'X^ICD0(^0;8^N DGIT,DGI S DGIT=8,DGI=8 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,8,1,0)
^.1
"^DD",45,45.01,8,1,1,0)
45.01^AO
"^DD",45,45.01,8,1,1,1)
S ^DGPT(DA(1),"S","AO",$E(X,1,30),DA)=""
"^DD",45,45.01,8,1,1,2)
K ^DGPT(DA(1),"S","AO",$E(X,1,30),DA)
"^DD",45,45.01,8,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,8,21,0)
^.001^1^1^3120229^^^^
"^DD",45,45.01,8,21,1,0)
This is an operation or procedure performed during this episode of care.
"^DD",45,45.01,8,"DT")
3121030
"^DD",45,45.01,9,0)
OPERATION CODE 2^*P80.1'X^ICD0(^0;9^N DGIT,DGI S DGIT=8,DGI=9 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,9,1,0)
^.1
"^DD",45,45.01,9,1,1,0)
45.01^AO
"^DD",45,45.01,9,1,1,1)
S ^DGPT(DA(1),"S","AO",$E(X,1,30),DA)=""
"^DD",45,45.01,9,1,1,2)
K ^DGPT(DA(1),"S","AO",$E(X,1,30),DA)
"^DD",45,45.01,9,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,9,21,0)
^.001^1^1^3120229^^^
"^DD",45,45.01,9,21,1,0)
This is an operation or procedure performed during this episode of care.
"^DD",45,45.01,9,"DT")
3121030
"^DD",45,45.01,10,0)
OPERATION CODE 3^*P80.1'X^ICD0(^0;10^N DGIT,DGI S DGIT=8,DGI=10 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,10,1,0)
^.1
"^DD",45,45.01,10,1,1,0)
45.01^AO
"^DD",45,45.01,10,1,1,1)
S ^DGPT(DA(1),"S","AO",$E(X,1,30),DA)=""
"^DD",45,45.01,10,1,1,2)
K ^DGPT(DA(1),"S","AO",$E(X,1,30),DA)
"^DD",45,45.01,10,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,10,21,0)
^.001^1^1^3120229^^^^
"^DD",45,45.01,10,21,1,0)
This is an operation or procedure performed during this episode of care.
"^DD",45,45.01,10,"DT")
3121030
"^DD",45,45.01,11,0)
OPERATION CODE 4^*P80.1'X^ICD0(^0;11^N DGIT,DGI S DGIT=8,DGI=10 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,11,1,0)
^.1
"^DD",45,45.01,11,1,1,0)
45.01^AO
"^DD",45,45.01,11,1,1,1)
S ^DGPT(DA(1),"S","AO",$E(X,1,30),DA)=""
"^DD",45,45.01,11,1,1,2)
K ^DGPT(DA(1),"S","AO",$E(X,1,30),DA)
"^DD",45,45.01,11,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,11,21,0)
^.001^1^1^3120229^^^^
"^DD",45,45.01,11,21,1,0)
This is  an operation or procedure performed during this episode of care.
"^DD",45,45.01,11,"DT")
3140523
"^DD",45,45.01,12,0)
OPERATION CODE 5^*P80.1'X^ICD0(^0;12^N DGIT,DGI S DGIT=8,DGI=12 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.01,12,1,0)
^.1
"^DD",45,45.01,12,1,1,0)
45.01^AO
"^DD",45,45.01,12,1,1,1)
S ^DGPT(DA(1),"S","AO",$E(X,1,30),DA)=""
"^DD",45,45.01,12,1,1,2)
K ^DGPT(DA(1),"S","AO",$E(X,1,30),DA)
"^DD",45,45.01,12,3)
Enter the Operation or Procedure performed on this patient during this episode of care.
"^DD",45,45.01,12,21,0)
^.001^1^1^3120229^^^^
"^DD",45,45.01,12,21,1,0)
This is an operation or procedure performed during this episode of care.
"^DD",45,45.01,12,"DT")
3121030
"^DD",45,45.02,5,0)
ICD 1^*P80'X^ICD9(^0;5^N K,DGI S DGI=5 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN")
"^DD",45,45.02,5,1,0)
^.1
"^DD",45,45.02,5,1,1,0)
45.02^AC
"^DD",45,45.02,5,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,5,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,5,1,992,0)
45.02^ADGRU5^MUMPS
"^DD",45,45.02,5,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,5,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,5,1,992,"%D",0)
^^1^1^2991006^
"^DD",45,45.02,5,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45.02,5,1,992,"DT")
2991006
"^DD",45,45.02,5,3)
Enter the diagnosis that was responsible for the patient's greatest length of stay in this bedsection.
"^DD",45,45.02,5,21,0)
^.001^2^2^3121217^^^^
"^DD",45,45.02,5,21,1,0)
This field contains the diagnosis responsible for the greatest length
"^DD",45,45.02,5,21,2,0)
of stay in this bedsection.
"^DD",45,45.02,5,"DT")
3121030
"^DD",45,45.02,6,0)
ICD 2^*P80'X^ICD9(^0;6^N K,DGI S DGI=6 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN")
"^DD",45,45.02,6,1,0)
^.1
"^DD",45,45.02,6,1,1,0)
45.02^AC
"^DD",45,45.02,6,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,6,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,6,1,992,0)
45.02^ADGRU6^MUMPS
"^DD",45,45.02,6,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,6,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,6,1,992,"%D",0)
^^1^1^2991006^
"^DD",45,45.02,6,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45.02,6,1,992,"DT")
2991006
"^DD",45,45.02,6,3)
Enter the second diagnosis for this patient's stay in the bedsection.
"^DD",45,45.02,6,21,0)
^.001^1^1^3121217^^^^
"^DD",45,45.02,6,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,6,"DT")
3121030
"^DD",45,45.02,7,0)
ICD 3^*P80'X^ICD9(^0;7^N K,DGI S DGI=7 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN")
"^DD",45,45.02,7,1,0)
^.1
"^DD",45,45.02,7,1,1,0)
45.02^AC
"^DD",45,45.02,7,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,7,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,7,1,992,0)
45.02^ADGRU7^MUMPS
"^DD",45,45.02,7,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,7,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,7,1,992,"%D",0)
^^1^1^2991006^
"^DD",45,45.02,7,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45.02,7,1,992,"DT")
2991006
"^DD",45,45.02,7,3)
Enter the third ICD diagnosis for this patient's length of stay in the losing bedsection.
"^DD",45,45.02,7,21,0)
^^1^1^2920212^^^^
"^DD",45,45.02,7,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,7,"DT")
3121030
"^DD",45,45.02,8,0)
ICD 4^*P80'X^ICD9(^0;8^N K,DGI S DGI=8 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN")
"^DD",45,45.02,8,1,0)
^.1
"^DD",45,45.02,8,1,1,0)
45.02^AC
"^DD",45,45.02,8,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,8,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,8,1,992,0)
45.02^ADGRU8^MUMPS
"^DD",45,45.02,8,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,8,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,8,1,992,"%D",0)
^^1^1^2991006^
"^DD",45,45.02,8,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45.02,8,1,992,"DT")
2991006
"^DD",45,45.02,8,3)
Enter the fourth diagnosis responsible for this patient's length of stay in the medical center.
"^DD",45,45.02,8,21,0)
^^1^1^2920212^^^^
"^DD",45,45.02,8,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,8,"DT")
3121030
"^DD",45,45.02,9,0)
ICD 5^*P80'X^ICD9(^0;9^N K,DGI S DGI=9 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN")
"^DD",45,45.02,9,1,0)
^.1
"^DD",45,45.02,9,1,1,0)
45.02^AC
"^DD",45,45.02,9,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,9,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,9,1,992,0)
45.02^ADGRU9^MUMPS
"^DD",45,45.02,9,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,9,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,9,1,992,"%D",0)
^^1^1^2991006^
"^DD",45,45.02,9,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45.02,9,1,992,"DT")
2991006
"^DD",45,45.02,9,3)
Enter the fifth diagnosis responsible for this patient's length of stay in this medical center.
"^DD",45,45.02,9,21,0)
^^1^1^2920212^^^^
"^DD",45,45.02,9,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,9,"DT")
3121030
"^DD",45,45.02,11,0)
ICD 6^*P80'X^ICD9(^0;11^N K,DGI S DGI=11 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN")
"^DD",45,45.02,11,1,0)
^.1
"^DD",45,45.02,11,1,1,0)
45.02^AC
"^DD",45,45.02,11,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,11,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,11,1,992,0)
45.02^ADGRU11^MUMPS
"^DD",45,45.02,11,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,11,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,11,1,992,"%D",0)
^^1^1^2991006^
"^DD",45,45.02,11,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45.02,11,1,992,"DT")
2991006
"^DD",45,45.02,11,3)
Enter the sixth diagnosis for this patient's discharge movement
"^DD",45,45.02,11,21,0)
^^1^1^2920212^^^
"^DD",45,45.02,11,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,11,"DT")
3121030
"^DD",45,45.02,12,0)
ICD 7^*P80'X^ICD9(^0;12^N K,DGI S DGI=12 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN")
"^DD",45,45.02,12,1,0)
^.1
"^DD",45,45.02,12,1,1,0)
45.02^AC
"^DD",45,45.02,12,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,12,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,12,1,992,0)
45.02^ADGRU12^MUMPS
"^DD",45,45.02,12,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,12,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,12,1,992,"%D",0)
^^1^1^2991006^
"^DD",45,45.02,12,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45.02,12,1,992,"DT")
2991006
"^DD",45,45.02,12,3)
Enter the seventh diagnosis responsible for this patient's length of stay in this medical center.
"^DD",45,45.02,12,21,0)
^^1^1^2920212^^^
"^DD",45,45.02,12,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,12,"DT")
3121030
"^DD",45,45.02,13,0)
ICD 8^*P80'X^ICD9(^0;13^N K,DGI S DGI=13 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN")
"^DD",45,45.02,13,1,0)
^.1
"^DD",45,45.02,13,1,1,0)
45.02^AC
"^DD",45,45.02,13,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,13,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,13,1,992,0)
45.02^ADGRU13^MUMPS
"^DD",45,45.02,13,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,13,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,13,1,992,"%D",0)
^^1^1^2991006^
"^DD",45,45.02,13,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45.02,13,1,992,"DT")
2991006
"^DD",45,45.02,13,3)
Enter the eighth diagnosis responsible for this patient's length of stay in this medical center.
"^DD",45,45.02,13,21,0)
^.001^1^1^3120223^^^^
"^DD",45,45.02,13,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,13,"DT")
3121030
"^DD",45,45.02,14,0)
ICD 9^*P80'X^ICD9(^0;14^N K,DGI S DGI=14 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN")
"^DD",45,45.02,14,1,0)
^.1
"^DD",45,45.02,14,1,1,0)
45.02^AC
"^DD",45,45.02,14,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,14,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,14,1,992,0)
45.02^ADGRU14^MUMPS
"^DD",45,45.02,14,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,14,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,14,1,992,"%D",0)
^^1^1^2991006^
"^DD",45,45.02,14,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45.02,14,1,992,"DT")
2991006
"^DD",45,45.02,14,3)
Enter the ninth diagnosis responsible for this patient's length of stay in this medical center.
"^DD",45,45.02,14,21,0)
^.001^1^1^3120223^^^
"^DD",45,45.02,14,21,1,0)
This field contains diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,14,"DT")
3121030
"^DD",45,45.02,15,0)
ICD 10^*P80'X^ICD9(^0;15^N K,DGI S DGI=15 D GETAPI^DGICDGT("DG PTF","DIAG",$G(DA(1)),"EN")
"^DD",45,45.02,15,1,0)
^.1
"^DD",45,45.02,15,1,1,0)
45.02^AC
"^DD",45,45.02,15,1,1,1)
S ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)=""
"^DD",45,45.02,15,1,1,2)
K ^DGPT(DA(1),"M","AC",$E(X,1,30),DA)
"^DD",45,45.02,15,1,992,0)
45.02^ADGRU15^MUMPS
"^DD",45,45.02,15,1,992,1)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,15,1,992,2)
N X S X="DGRUDD01" X ^%ZOSF("TEST") Q:'$T  N DG1 S DG1=+$P(^DGPT(DA(1),0),"^",1) D:(DG1>0) ADGRU^DGRUDD01(DG1)
"^DD",45,45.02,15,1,992,"%D",0)
^^1^1^2991006^
"^DD",45,45.02,15,1,992,"%D",1,0)
Create a ADT/HL7 PIVOT (#391.71) entry when diagnosis changes
"^DD",45,45.02,15,1,992,"DT")
2991006
"^DD",45,45.02,15,3)
Enter the tenth diagnosis responsible for this patient's length of stay in this medical center.
"^DD",45,45.02,15,21,0)
^.001^1^1^3120223^^^
"^DD",45,45.02,15,21,1,0)
This field contains a diagnosis for the patient's stay in this bedsection.
"^DD",45,45.02,15,"DT")
3121030
"^DD",45,45.02,82.01,0)
POA FOR ICD 1^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;1^Q
"^DD",45,45.02,82.01,3)
Apply the Present on Admission (POA) indicator for ICD 1.
"^DD",45,45.02,82.01,21,0)
^.001^11^11^3121004^^^^
"^DD",45,45.02,82.01,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 1 (#5) field.
"^DD",45,45.02,82.01,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.01,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.01,21,4,0)
 
"^DD",45,45.02,82.01,21,5,0)
  Y = present at the time of inpatient admission; 
"^DD",45,45.02,82.01,21,6,0)
  N = not present at the time of inpatient admission; 
"^DD",45,45.02,82.01,21,7,0)
  U = documentation is insufficient to determine if condition is 
"^DD",45,45.02,82.01,21,8,0)
      present on admission; 
"^DD",45,45.02,82.01,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.01,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.01,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.01,23,0)
^.001^1^1^3121004^^^^
"^DD",45,45.02,82.01,23,1,0)
 
"^DD",45,45.02,82.01,"DT")
3121004
"^DD",45,45.02,82.02,0)
POA FOR ICD 2^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;2^Q
"^DD",45,45.02,82.02,3)
Apply the Present on Admission (POA) indicator for ICD 2.
"^DD",45,45.02,82.02,21,0)
^.001^11^11^3121004^^
"^DD",45,45.02,82.02,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 2 (#6) field.
"^DD",45,45.02,82.02,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.02,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.02,21,4,0)
 
"^DD",45,45.02,82.02,21,5,0)
  Y = present at the time of inpatient admission; 
"^DD",45,45.02,82.02,21,6,0)
  N = not present at the time of inpatient admission; 
"^DD",45,45.02,82.02,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.02,21,8,0)
      present on admission; 
"^DD",45,45.02,82.02,21,9,0)
  W = provider is unable to clinically determine whether condition was 
"^DD",45,45.02,82.02,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.02,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.02,23,0)
^.001^1^1^3121004^^
"^DD",45,45.02,82.02,23,1,0)
 
"^DD",45,45.02,82.02,"DT")
3121004
"^DD",45,45.02,82.03,0)
POA FOR ICD 3^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;3^Q
"^DD",45,45.02,82.03,3)
Apply the Present on Admission (POA) indicator for ICD 3.
"^DD",45,45.02,82.03,21,0)
^.001^11^11^3121004^^
"^DD",45,45.02,82.03,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 3 (#7) field.
"^DD",45,45.02,82.03,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.03,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.03,21,4,0)
 
"^DD",45,45.02,82.03,21,5,0)
  Y = present at the time of inpatient admission; 
"^DD",45,45.02,82.03,21,6,0)
  N = not present at the time of inpatient admission; 
"^DD",45,45.02,82.03,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.03,21,8,0)
      present on admission; 
"^DD",45,45.02,82.03,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.03,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.03,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.03,23,0)
^.001^1^1^3121004^^
"^DD",45,45.02,82.03,23,1,0)
 
"^DD",45,45.02,82.03,"DT")
3121004
"^DD",45,45.02,82.04,0)
POA FOR ICD 4^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;4^Q
"^DD",45,45.02,82.04,3)
Apply the Present on Admission (POA) indicator for ICD 4.
"^DD",45,45.02,82.04,21,0)
^.001^11^11^3121004^^
"^DD",45,45.02,82.04,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 4 (#8) field.
"^DD",45,45.02,82.04,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.04,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.04,21,4,0)
 
"^DD",45,45.02,82.04,21,5,0)
  Y = present at the time of inpatient admission; 
"^DD",45,45.02,82.04,21,6,0)
  N = not present at the time of inpatient admission; 
"^DD",45,45.02,82.04,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.04,21,8,0)
      present on admission; 
"^DD",45,45.02,82.04,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.04,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.04,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.04,23,0)
^.001^1^1^3121004^^
"^DD",45,45.02,82.04,23,1,0)
 
"^DD",45,45.02,82.04,"DT")
3121004
"^DD",45,45.02,82.05,0)
POA FOR ICD 5^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;5^Q
"^DD",45,45.02,82.05,3)
Apply the Present on Admission (POA) indicator for ICD 5.
"^DD",45,45.02,82.05,21,0)
^.001^11^11^3121004^^
"^DD",45,45.02,82.05,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 5 (#9) field.
"^DD",45,45.02,82.05,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.05,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.05,21,4,0)
 
"^DD",45,45.02,82.05,21,5,0)
  Y = present at the time of inpatient admission; 
"^DD",45,45.02,82.05,21,6,0)
  N = not present at the time of inpatient admission; 
"^DD",45,45.02,82.05,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.05,21,8,0)
      present on admission; 
"^DD",45,45.02,82.05,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.05,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.05,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.05,23,0)
^.001^1^1^3121004^^
"^DD",45,45.02,82.05,23,1,0)
 
"^DD",45,45.02,82.05,"DT")
3121004
"^DD",45,45.02,82.06,0)
POA FOR ICD 6^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;6^Q
"^DD",45,45.02,82.06,3)
Apply the Present on Admission (POA) indicator for ICD 6.
"^DD",45,45.02,82.06,21,0)
^.001^11^11^3121004^^
"^DD",45,45.02,82.06,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 6 (#11) field.
"^DD",45,45.02,82.06,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.06,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.06,21,4,0)
 
"^DD",45,45.02,82.06,21,5,0)
  Y = present at the time of inpatient admission; 
"^DD",45,45.02,82.06,21,6,0)
  N = not present at the time of inpatient admission; 
"^DD",45,45.02,82.06,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.06,21,8,0)
      present on admission; 
"^DD",45,45.02,82.06,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.06,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.06,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.06,23,0)
^.001^1^1^3121004^^
"^DD",45,45.02,82.06,23,1,0)
 
"^DD",45,45.02,82.06,"DT")
3121004
"^DD",45,45.02,82.07,0)
POA FOR ICD 7^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;7^Q
"^DD",45,45.02,82.07,3)
Apply the Present on Admission (POA) indicator for ICD 7.
"^DD",45,45.02,82.07,21,0)
^.001^11^11^3121004^^
"^DD",45,45.02,82.07,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 7 (#12) field.
"^DD",45,45.02,82.07,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.07,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.07,21,4,0)
 
"^DD",45,45.02,82.07,21,5,0)
  Y = present at the time of inpatient admission; 
"^DD",45,45.02,82.07,21,6,0)
  N = not present at the time of inpatient admission; 
"^DD",45,45.02,82.07,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.07,21,8,0)
      present on admission; 
"^DD",45,45.02,82.07,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.07,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.07,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.07,23,0)
^.001^1^1^3121004^^
"^DD",45,45.02,82.07,23,1,0)
 
"^DD",45,45.02,82.07,"DT")
3121004
"^DD",45,45.02,82.08,0)
POA FOR ICD 8^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;8^Q
"^DD",45,45.02,82.08,3)
Apply the Present on Admission (POA) indicator for ICD 8.
"^DD",45,45.02,82.08,21,0)
^.001^11^11^3121004^^^
"^DD",45,45.02,82.08,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 8 (#13) field.
"^DD",45,45.02,82.08,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.08,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.08,21,4,0)
 
"^DD",45,45.02,82.08,21,5,0)
  Y = present at the time of inpatient admission; 
"^DD",45,45.02,82.08,21,6,0)
  N = not present at the time of inpatient admission; 
"^DD",45,45.02,82.08,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.08,21,8,0)
      present on admission; 
"^DD",45,45.02,82.08,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.08,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.08,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.08,23,0)
^.001^1^1^3121004^^^
"^DD",45,45.02,82.08,23,1,0)
 
"^DD",45,45.02,82.08,"DT")
3121004
"^DD",45,45.02,82.09,0)
POA FOR ICD 9^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;9^Q
"^DD",45,45.02,82.09,3)
Apply the Present on Admission (POA) indicator for ICD 9.
"^DD",45,45.02,82.09,21,0)
^.001^11^11^3121004^^
"^DD",45,45.02,82.09,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 9 (#14) field.
"^DD",45,45.02,82.09,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.09,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.09,21,4,0)
 
"^DD",45,45.02,82.09,21,5,0)
  Y = present at the time of inpatient admission; 
"^DD",45,45.02,82.09,21,6,0)
  N = not present at the time of inpatient admission; 
"^DD",45,45.02,82.09,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.09,21,8,0)
      present on admission; 
"^DD",45,45.02,82.09,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.09,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.09,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.09,23,0)
^.001^1^1^3121004^^
"^DD",45,45.02,82.09,23,1,0)
 
"^DD",45,45.02,82.09,"DT")
3121004
"^DD",45,45.02,82.1,0)
POA FOR ICD 10^S^Y:Present at Admission;N:Not Present at Admission;U:Insufficient Docum to Present at Admission;W:Can't Determine if Present at Admission;^82;10^Q
"^DD",45,45.02,82.1,3)
Apply the Present on Admission (POA) indicator for ICD 10.
"^DD",45,45.02,82.1,21,0)
^.001^11^11^3121004^^
"^DD",45,45.02,82.1,21,1,0)
This is the Present on Admission (POA) Indicator for the ICD 10 (#15) field.
"^DD",45,45.02,82.1,21,2,0)
One of the following values should be assigned in 
"^DD",45,45.02,82.1,21,3,0)
accordance with the official coding guidelines: 
"^DD",45,45.02,82.1,21,4,0)
 
"^DD",45,45.02,82.1,21,5,0)
  Y = present at the time of inpatient admission; 
"^DD",45,45.02,82.1,21,6,0)
  N = not present at the time of inpatient admission; 
"^DD",45,45.02,82.1,21,7,0)
  U = documentation is insufficient to determine if condition is
"^DD",45,45.02,82.1,21,8,0)
      present on admission; 
"^DD",45,45.02,82.1,21,9,0)
  W = provider is unable to clinically determine whether condition was
"^DD",45,45.02,82.1,21,10,0)
      present on admission or not 
"^DD",45,45.02,82.1,21,11,0)
  "" = null, no POA entered, user pressed <Return> 
"^DD",45,45.02,82.1,23,0)
^.001^1^1^3121004^^
"^DD",45,45.02,82.1,23,1,0)
 
"^DD",45,45.02,82.1,"DT")
3121004
"^DD",45,45.05,0)
601 SUB-FIELD^^8^9
"^DD",45,45.05,0,"NM",601)

"^DD",45,45.05,.01,0)
PROCEDURE DATE^MDX^^0;1^S %DT="ET" D ^%DT S X=+Y K:+Y<1 X I $D(X) X $S($$BADDT^DGPTFM6(X):"K X",1:"S X=X")
"^DD",45,45.05,.01,3)
Enter a date after the admission date/time and before the discharge date/time.  If census is open must be before census close date.
"^DD",45,45.05,.01,21,0)
^.001^1^1^3131121^^^^
"^DD",45,45.05,.01,21,1,0)
This is the date of the procedure.
"^DD",45,45.05,.01,"DT")
3131121
"^DD",45,45.05,4,0)
PROCEDURE CODE 1^*P80.1'X^ICD0(^0;5^N DGIT,DGI S DGIT=5,DGI=5 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,4,1,0)
^.1
"^DD",45,45.05,4,1,1,0)
45.05^AP1^MUMPS
"^DD",45,45.05,4,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,4,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,4,3)
Enter the 1st procedure performed on this patient during this episode of care.
"^DD",45,45.05,4,21,0)
^.001^1^1^3120229^^^
"^DD",45,45.05,4,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,4,"DT")
3121030
"^DD",45,45.05,5,0)
PROCEDURE CODE 2^*P80.1'X^ICD0(^0;6^N DGIT,DGI S DGIT=5,DGI=6 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,5,1,0)
^.1
"^DD",45,45.05,5,1,1,0)
45.05^AP2^MUMPS
"^DD",45,45.05,5,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,5,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,5,3)
Enter the 2nd procedure performed on this patient during this episode of care.
"^DD",45,45.05,5,21,0)
^.001^1^1^3120229^^^
"^DD",45,45.05,5,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,5,"DT")
3121030
"^DD",45,45.05,6,0)
PROCEDURE CODE 3^*P80.1'X^ICD0(^0;7^N DGIT,DGI S DGIT=5,DGI=7 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,6,1,0)
^.1
"^DD",45,45.05,6,1,1,0)
45.05^AP3^MUMPS
"^DD",45,45.05,6,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,6,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,6,3)
Enter the 3rd procedure performed on this patient during this episode of care.
"^DD",45,45.05,6,21,0)
^.001^1^1^3120229^^
"^DD",45,45.05,6,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,6,"DT")
3121030
"^DD",45,45.05,7,0)
PROCEDURE CODE 4^*P80.1'X^ICD0(^0;8^N DGIT,DGI S DGIT=5,DGI=8 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,7,1,0)
^.1
"^DD",45,45.05,7,1,1,0)
45.05^AP4^MUMPS
"^DD",45,45.05,7,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,7,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,7,3)
Enter the 4th procedure performed on this patient during this episode of care.
"^DD",45,45.05,7,21,0)
^.001^1^1^3120229^^^^
"^DD",45,45.05,7,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,7,"DT")
3121030
"^DD",45,45.05,8,0)
PROCEDURE CODE 5^*P80.1'X^ICD0(^0;9^N DGIT,DGI S DGIT=5,DGI=9 D GETAPI^DGICDGT("DG PTF","PROC",$G(DA(1)),"EN1")
"^DD",45,45.05,8,1,0)
^.1
"^DD",45,45.05,8,1,1,0)
45.05^AP5^MUMPS
"^DD",45,45.05,8,1,1,1)
S ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)=""
"^DD",45,45.05,8,1,1,2)
K ^DGPT(DA(1),"P","AP6",$E(X,1,30),DA)
"^DD",45,45.05,8,3)
Enter the 5th procedure performed on this patient during this episode of care.
"^DD",45,45.05,8,21,0)
^.001^1^1^3120229^^^
"^DD",45,45.05,8,21,1,0)
This is a procedure performed during this episode of care.
"^DD",45,45.05,8,"DT")
3121030
"^DD",45,45.06,.04,0)
PRIMARY DIAGNOSIS^*RP80'X^ICD9(^0;4^D GETAPI^DGICDGT("DG PTF","DIAG",DA(1))
"^DD",45,45.06,.04,3)
Enter the Primary Diagnosis for this Professional Service.
"^DD",45,45.06,.04,21,0)
^^2^2^3030725^
"^DD",45,45.06,.04,21,1,0)
Enter the Diagnosis that should appear first in box 21 of the HCFA 1500
"^DD",45,45.06,.04,21,2,0)
insurance form.
"^DD",45,45.06,.04,23,0)
^^6^6^3130808^
"^DD",45,45.06,.04,23,1,0)
GETAPI^DGICGDT uses the 3 parameters passed to look up and execute the 
"^DD",45,45.06,.04,23,2,0)
appropriate input transform routine.  The parameters passed are
"^DD",45,45.06,.04,23,3,0)
1) APP="DG PTF", 2) TYPE="DIAG" and 3) DA(1), which is the IEN of the
"^DD",45,45.06,.04,23,4,0)
current top level entry in the PTF file (#45).  The resulting routine acts
"^DD",45,45.06,.04,23,5,0)
as a screen to allow users to enter only an input value that is a valid
"^DD",45,45.06,.04,23,6,0)
ICD Diagnosis.
"^DD",45,45.06,.04,"DT")
3130808
"^DD",45.89,45.89,.01,0)
CATEGORY^RP45.88'I^DIC(45.88,^0;1^Q
"^DD",45.89,45.89,.01,1,0)
^.1
"^DD",45.89,45.89,.01,1,1,0)
45.89^B
"^DD",45.89,45.89,.01,1,1,1)
S ^DIC(45.89,"B",$E(X,1,30),DA)=""
"^DD",45.89,45.89,.01,1,1,2)
K ^DIC(45.89,"B",$E(X,1,30),DA)
"^DD",45.89,45.89,.01,3)

"^DD",45.89,45.89,.01,21,0)
^.001^3^3^3120110^^^^
"^DD",45.89,45.89,.01,21,1,0)
This fields points to PTF Expanded Code Category File.
"^DD",45.89,45.89,.01,21,2,0)
Here the flags can be found that indicate which additional 
"^DD",45.89,45.89,.01,21,3,0)
questions should be asked.
"^DD",45.89,45.89,.01,"DT")
3120130
"^DD",45.89,45.89,.02,0)
DIAGNOSIS/PROCEDURE CODE^VI^^0;2^Q
"^DD",45.89,45.89,.02,1,0)
^.1
"^DD",45.89,45.89,.02,1,1,0)
45.89^ASPL
"^DD",45.89,45.89,.02,1,1,1)
S ^DIC(45.89,"ASPL",$E(X,1,30),DA)=""
"^DD",45.89,45.89,.02,1,1,2)
K ^DIC(45.89,"ASPL",$E(X,1,30),DA)
"^DD",45.89,45.89,.02,1,1,"%D",0)
^^5^5^3111219^
"^DD",45.89,45.89,.02,1,1,"%D",1,0)
The "ASPL" cross reference is used in PTF routines DGPTSC01 
"^DD",45.89,45.89,.02,1,1,"%D",2,0)
and DGPTSCAN to find ICD codes that require additional 
"^DD",45.89,45.89,.02,1,1,"%D",3,0)
questions to be asked for the PTF record.  The additional 
"^DD",45.89,45.89,.02,1,1,"%D",4,0)
data is stored in the 300 node of the 701 and 501 movements.  
"^DD",45.89,45.89,.02,1,1,"%D",5,0)
The specific fields to be asked are retrieved from file 45.88.
"^DD",45.89,45.89,.02,1,2,0)
^^TRIGGER^45.89^.05
"^DD",45.89,45.89,.02,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(45.89,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y X ^DD(45.89,.02,1,2,1.1) S DIH=$G(^DIC(45.89,DIV(0),0)),DIV=X S $P(^(0),U,5)=DIV,DIH=45.89,DIG=.05 D ^DICR
"^DD",45.89,45.89,.02,1,2,1.1)
S X=DIV N DGP,DGIEN S DGP=$P($P(^DIC(45.89,DA,0),U,2),";",2),DGIEN=+$P(^DIC(45.89,DA,0),U,2) S X=$S(DGP="ICD9(":$$CSI^ICDEX(80,DGIEN),DGP="ICD0(":$$CSI^ICDEX(80.1,DGIEN),1:"")
"^DD",45.89,45.89,.02,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(45.89,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" S DIH=$G(^DIC(45.89,DIV(0),0)),DIV=X S $P(^(0),U,5)=DIV,DIH=45.89,DIG=.05 D ^DICR
"^DD",45.89,45.89,.02,1,2,"%D",0)
^^1^1^3120130^
"^DD",45.89,45.89,.02,1,2,"%D",1,0)
This trigger updates the ICD VERSION field to the correct value.
"^DD",45.89,45.89,.02,1,2,"CREATE VALUE")
N DGP,DGIEN S DGP=$P($P(^DIC(45.89,DA,0),U,2),";",2),DGIEN=+$P(^DIC(45.89,DA,0),U,2) S X=$S(DGP="ICD9(":$$CSI^ICDEX(80,DGIEN),DGP="ICD0(":$$CSI^ICDEX(80.1,DGIEN),1:"")
"^DD",45.89,45.89,.02,1,2,"DELETE VALUE")
@
"^DD",45.89,45.89,.02,1,2,"DT")
3120130
"^DD",45.89,45.89,.02,1,2,"FIELD")
ICD VERSION
"^DD",45.89,45.89,.02,1,3,0)
45.89^ACODE^MUMPS
"^DD",45.89,45.89,.02,1,3,1)
S:+X>0 ^DIC(45.89,"ACODE",@("^"_$P(X,";",2)_+X_",0)"),DA)=""
"^DD",45.89,45.89,.02,1,3,2)
K:+X>0 ^DIC(45.89,"ACODE",@("^"_$P(X,";",2)_+X_",0)"),DA)
"^DD",45.89,45.89,.02,1,3,"%D",0)
^.101^1^1^3121107^^^^
"^DD",45.89,45.89,.02,1,3,"%D",1,0)
For lookup by code
"^DD",45.89,45.89,.02,1,3,"DT")
3121107
"^DD",45.89,45.89,.02,21,0)
^.001^2^2^3120130^^^^
"^DD",45.89,45.89,.02,21,1,0)
This field contains the ICD Diagnosis or Procedure code that 
"^DD",45.89,45.89,.02,21,2,0)
requires additional processing.
"^DD",45.89,45.89,.02,"DT")
3121107
"^DD",45.89,45.89,.02,"V",0)
^.12P^2^2
"^DD",45.89,45.89,.02,"V",1,0)
80^DIAGNOSIS^1^D^^n
"^DD",45.89,45.89,.02,"V",2,0)
80.1^PROCEDURE^2^P^^n
"^DD",45.89,45.89,.05,0)
ICD VERSION^P80.4'I^ICDS(^0;5^Q
"^DD",45.89,45.89,.05,3)
Select the appropriate coding system for this entry.
"^DD",45.89,45.89,.05,5,1,0)
45.89^.02^2
"^DD",45.89,45.89,.05,21,0)
^.001^2^2^3120130^^^^
"^DD",45.89,45.89,.05,21,1,0)
This field contains the version of the ICD Diagnosis or ICD Procedure 
"^DD",45.89,45.89,.05,21,2,0)
contained in DIAGNOSIS/PROCEDURE CODE field (.02).
"^DD",45.89,45.89,.05,"DT")
3120127
"^DD",45.89,45.89,200,0)
NAME^CJ80^^ ; ^S X="" I $T(ICDNAME^DGPTIC10)'="" S X=$$ICDNAME^DGPTIC10()
"^DD",45.89,45.89,200,9)
^
"^DD",45.89,45.89,200,9.01)

"^DD",45.89,45.89,200,9.1)
S X="" I $T(ICDNAME^DGPTIC10)'="" S X=$$ICDNAME^DGPTIC10()
"^DD",45.89,45.89,200,21,0)
^.001^1^1^3120130^^^
"^DD",45.89,45.89,200,21,1,0)
This field computes the name of the diagnosis.
"^DD",45.89,45.89,200,"DT")
3120817
"^DD",46,46,.04,0)
PRIMARY DIAGNOSIS^*P80X^ICD9(^0;4^D GETAPI^DGICDGT("DG PTF","DIAG",$G(PTF),"EN5")
"^DD",46,46,.04,3)
Select the primary diagnosis associated with the procedure performed on the CMS 1500.
"^DD",46,46,.04,21,0)
^.001^4^4^3120229^^^^
"^DD",46,46,.04,21,1,0)
The diagnosis code most directly related to the procedure code performed for 
"^DD",46,46,.04,21,2,0)
this professional service.  This field must be entered for each CPT code
"^DD",46,46,.04,21,3,0)
entered.  It appears in box 21 on the CMS-1500 and is associated with a
"^DD",46,46,.04,21,4,0)
procedure in box 24e.
"^DD",46,46,.04,"DT")
3120222
"^DD",46,46,.05,0)
SECONDARY DIAGNOSIS 1^*P80'X^ICD9(^0;5^D GETAPI^DGICDGT("DG PTF","DIAG",$G(PTF),"EN5")
"^DD",46,46,.05,3)
Select a secondary diagnosis associated with the procedure performed on the CMS 1500.
"^DD",46,46,.05,21,0)
^.001^3^3^3111230^^^^
"^DD",46,46,.05,21,1,0)
A secondary diagnosis related to the procedure performed for this 
"^DD",46,46,.05,21,2,0)
professional service.  This field is optional.  It appears in box 21 on 
"^DD",46,46,.05,21,3,0)
the CMS-1500 and is associated with a procedure in box 24e.
"^DD",46,46,.05,"DT")
3120222
"^DD",46,46,.06,0)
SECONDARY DIAGNOSIS 2^*P80'X^ICD9(^0;6^D GETAPI^DGICDGT("DG PTF","DIAG",$G(PTF),"EN5")
"^DD",46,46,.06,3)
Select a secondary diagnosis associated with the procedure performed on the CMS 1500.
"^DD",46,46,.06,21,0)
^^3^3^3070425^^
"^DD",46,46,.06,21,1,0)
A secondary diagnosis related to the procedure performed for this 
"^DD",46,46,.06,21,2,0)
professional service.  This field is optional.  It appears in box 21 on 
"^DD",46,46,.06,21,3,0)
the CMS-1500 and is associated with a procedure in box 24e.
"^DD",46,46,.06,"DT")
3120222
"^DD",46,46,.07,0)
SECONDARY DIAGNOSIS 3^*P80'X^ICD9(^0;7^D GETAPI^DGICDGT("DG PTF","DIAG",$G(PTF),"EN5")
"^DD",46,46,.07,3)
Select a secondary diagnosis associated with the procedure performed on the CMS 1500.
"^DD",46,46,.07,21,0)
^^3^3^3070425^
"^DD",46,46,.07,21,1,0)
A secondary diagnosis related to the procedure performed for this 
"^DD",46,46,.07,21,2,0)
professional service.  This field is optional.  It appears in box 21 on 
"^DD",46,46,.07,21,3,0)
the CMS-1500 and is associated with a procedure in box 24e.
"^DD",46,46,.07,"DT")
3120222
"^DD",46,46,.21,0)
SECONDARY DIAGNOSIS 4^*P80'X^ICD9(^0;15^D GETAPI^DGICDGT("DG PTF","DIAG",$G(PTF),"EN5")
"^DD",46,46,.21,3)
Select a secondary diagnosis associated with the procedure performed on the CMS 1500.
"^DD",46,46,.21,21,0)
^^3^3^3070430^
"^DD",46,46,.21,21,1,0)
A secondary diagnosis related to the procedure performed for this
"^DD",46,46,.21,21,2,0)
professional service. This field is optional. It appears in box 21 on
"^DD",46,46,.21,21,3,0)
the CMS-1500 and is associated with a procedure in box 24e.
"^DD",46,46,.21,"DT")
3120222
"^DD",46,46,.22,0)
SECONDARY DIAGNOSIS 5^*P80'X^ICD9(^0;16^D GETAPI^DGICDGT("DG PTF","DIAG",$G(PTF),"EN5")
"^DD",46,46,.22,3)
Select a secondary diagnosis associated with the procedure performed on the CMS 1500.
"^DD",46,46,.22,21,0)
^^3^3^3070425^
"^DD",46,46,.22,21,1,0)
A secondary diagnosis related to the procedure performed for this
"^DD",46,46,.22,21,2,0)
professional service. This field is optional. It appears in box 21 on
"^DD",46,46,.22,21,3,0)
the CMS-1500 and is associated with a procedure in box 24e.
"^DD",46,46,.22,"DT")
3120222
"^DD",46,46,.23,0)
SECONDARY DIAGNOSIS 6^*P80'X^ICD9(^0;17^D GETAPI^DGICDGT("DG PTF","DIAG",$G(PTF),"EN5")
"^DD",46,46,.23,3)
Select a secondary diagnosis associated with the procedure performed on the CMS 1500.
"^DD",46,46,.23,21,0)
^^3^3^3070425^
"^DD",46,46,.23,21,1,0)
A secondary diagnosis related to the procedure performed for this
"^DD",46,46,.23,21,2,0)
professional service. This field is optional. It appears in box 21 on
"^DD",46,46,.23,21,3,0)
the CMS-1500 and is associated with a procedure in box 24e.
"^DD",46,46,.23,"DT")
3120222
"^DD",46,46,.24,0)
SECONDARY DIAGNOSIS 7^*P80'X^ICD9(^0;18^D GETAPI^DGICDGT("DG PTF","DIAG",$G(PTF),"EN5")
"^DD",46,46,.24,3)
Select a secondary diagnosis associated with the procedure performed on the CMS 1500.
"^DD",46,46,.24,21,0)
^.001^3^3^3121129^^
"^DD",46,46,.24,21,1,0)
A secondary diagnosis related to the procedure performed for this
"^DD",46,46,.24,21,2,0)
professional service. This field is optional. It appears in box 21 on
"^DD",46,46,.24,21,3,0)
the CMS-1500 and is associated with a procedure in box 24e.
"^DD",46,46,.24,"DT")
3120222
"BLD",8723,6)
^780
**END**
**END**

