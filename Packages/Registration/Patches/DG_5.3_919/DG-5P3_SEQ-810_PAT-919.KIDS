Released DG*5.3*919 SEQ #810
Extracted from mail message
**KIDS**:DG*5.3*919^

**INSTALL NAME**
DG*5.3*919
"BLD",3146,0)
DG*5.3*919^REGISTRATION^0^3160209^y
"BLD",3146,1,0)
^^3^3^3151214^
"BLD",3146,1,1,0)
MASTER VETERAN INDEX VISTA ENHANCEMENTS - ITERATION 15
"BLD",3146,1,2,0)
Refer to patch DG*5.3*919 in the FORUM Patch Module for a complete
"BLD",3146,1,3,0)
description.
"BLD",3146,4,0)
^9.64PA^^
"BLD",3146,6.3)
4
"BLD",3146,"KRN",0)
^9.67PA^779.2^20
"BLD",3146,"KRN",.4,0)
.4
"BLD",3146,"KRN",.401,0)
.401
"BLD",3146,"KRN",.402,0)
.402
"BLD",3146,"KRN",.403,0)
.403
"BLD",3146,"KRN",.5,0)
.5
"BLD",3146,"KRN",.84,0)
.84
"BLD",3146,"KRN",3.6,0)
3.6
"BLD",3146,"KRN",3.8,0)
3.8
"BLD",3146,"KRN",9.2,0)
9.2
"BLD",3146,"KRN",9.8,0)
9.8
"BLD",3146,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",3146,"KRN",9.8,"NM",1,0)
DPTLK^^0^B126157640
"BLD",3146,"KRN",9.8,"NM",2,0)
DPTLK4^^0^B4091702
"BLD",3146,"KRN",9.8,"NM",3,0)
DPTLK7^^0^B185524079
"BLD",3146,"KRN",9.8,"NM","B","DPTLK",1)

"BLD",3146,"KRN",9.8,"NM","B","DPTLK4",2)

"BLD",3146,"KRN",9.8,"NM","B","DPTLK7",3)

"BLD",3146,"KRN",19,0)
19
"BLD",3146,"KRN",19.1,0)
19.1
"BLD",3146,"KRN",101,0)
101
"BLD",3146,"KRN",409.61,0)
409.61
"BLD",3146,"KRN",771,0)
771
"BLD",3146,"KRN",779.2,0)
779.2
"BLD",3146,"KRN",870,0)
870
"BLD",3146,"KRN",8989.51,0)
8989.51
"BLD",3146,"KRN",8989.52,0)
8989.52
"BLD",3146,"KRN",8994,0)
8994
"BLD",3146,"KRN","B",.4,.4)

"BLD",3146,"KRN","B",.401,.401)

"BLD",3146,"KRN","B",.402,.402)

"BLD",3146,"KRN","B",.403,.403)

"BLD",3146,"KRN","B",.5,.5)

"BLD",3146,"KRN","B",.84,.84)

"BLD",3146,"KRN","B",3.6,3.6)

"BLD",3146,"KRN","B",3.8,3.8)

"BLD",3146,"KRN","B",9.2,9.2)

"BLD",3146,"KRN","B",9.8,9.8)

"BLD",3146,"KRN","B",19,19)

"BLD",3146,"KRN","B",19.1,19.1)

"BLD",3146,"KRN","B",101,101)

"BLD",3146,"KRN","B",409.61,409.61)

"BLD",3146,"KRN","B",771,771)

"BLD",3146,"KRN","B",779.2,779.2)

"BLD",3146,"KRN","B",870,870)

"BLD",3146,"KRN","B",8989.51,8989.51)

"BLD",3146,"KRN","B",8989.52,8989.52)

"BLD",3146,"KRN","B",8994,8994)

"BLD",3146,"QDEF")
^^^^^^^^^^YES
"BLD",3146,"QUES",0)
^9.62^^
"BLD",3146,"REQB",0)
^9.611^1^1
"BLD",3146,"REQB",1,0)
DG*5.3*915^2
"BLD",3146,"REQB","B","DG*5.3*915",1)

"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813^2970721^12541
"PKG",5,22,1,"PAH",1,0)
919^3160209
"PKG",5,22,1,"PAH",1,1,0)
^^3^3^3160209
"PKG",5,22,1,"PAH",1,1,1,0)
MASTER VETERAN INDEX VISTA ENHANCEMENTS - ITERATION 15
"PKG",5,22,1,"PAH",1,1,2,0)
Refer to patch DG*5.3*919 in the FORUM Patch Module for a complete
"PKG",5,22,1,"PAH",1,1,3,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","DPTLK")
0^1^B126157640^B121219825
"RTN","DPTLK",1,0)
DPTLK ;ALB/RMO,RTK - MAS Patient Look-up Main Routine ; 3/22/05 4:19pm
"RTN","DPTLK",2,0)
 ;;5.3;Registration;**32,72,93,73,136,157,197,232,265,277,223,327,244,513,528,541,576,600,485,633,629,647,769,857,876,915,919**;Aug 13, 1993;Build 4
"RTN","DPTLK",3,0)
 ;
"RTN","DPTLK",4,0)
 ; mods made for magstripe read 12/96 - JFP
"RTN","DPTLK",5,0)
 ; mods made for VIC 4.0 (barcode and magstripe) read 4/2012 - ELZ (*857)
"RTN","DPTLK",6,0)
 ;
"RTN","DPTLK",7,0)
 ;Optional input: DPTNOFZY='1' to suppress fuzzy lookups implemented
"RTN","DPTLK",8,0)
 ;                by patch DG*5.3*244
"RTN","DPTLK",9,0)
 ;
"RTN","DPTLK",10,0)
EN ; -- Entry point
"RTN","DPTLK",11,0)
 N DIE,DR,DGSEARCH,DPTXX
"RTN","DPTLK",12,0)
 K DPTX,DPTDFN,DPTSAVX I $D(DIC(0)) G QK:DIC(0)["I"!(DIC(0)'["A"&('$D(X)))
"RTN","DPTLK",13,0)
 I '$D(^DD("VERSION")) W !!?3,"Unable to proceed. Fileman version node ^DD(""VERSION"") is undefined." G QK
"RTN","DPTLK",14,0)
 I '$D(^DPT(0))!(^DD("VERSION")<17.2) W !!?3,"Unable to proceed. ",$S('$D(^DPT(0)):"0th node of ^DPT missing",^DD("VERSION")<17.2:"Fileman version must be at least 17.2",1:""),"." G QK
"RTN","DPTLK",15,0)
EN2 K DO,DUOUT,DTOUT S U="^",DIC="^DPT(",DIC(0)=$S($D(DIC(0)):DIC(0),1:"AELMQ") S:DIC(0)'["A" (DPTX,DPTSAVX)=X
"RTN","DPTLK",16,0)
 S DPTSZ=1000 I $D(^DD("OS"))#2 S DPTSZ=$S(+$P(^DD("OS",^("OS"),0),U,2):$P(^(0),U,2),1:DPTSZ)
"RTN","DPTLK",17,0)
 ;
"RTN","DPTLK",18,0)
ASKPAT ; -- Prompt for patient
"RTN","DPTLK",19,0)
 I DIC(0)["A" D   G QK:'$T!($E(DPTX)["^")!(DPTX="")
"RTN","DPTLK",20,0)
 .K DTOUT,DUOUT,DGNEW,DGSEARCH
"RTN","DPTLK",21,0)
 .W !,$S($D(DIC("A")):DIC("A"),1:"Select PATIENT NAME: ") W:$D(DIC("B")) DIC("B"),"// "
"RTN","DPTLK",22,0)
 .R X:DTIME
"RTN","DPTLK",23,0)
 .S (DPTX,DPTXX)=X S:'$T DTOUT=1 S:$T&(DPTX="")&($D(DIC("B"))) DPTX=DIC("B") S:DPTX["^"&($E(DPTX)'="%") DUOUT=1
"RTN","DPTLK",24,0)
 ; -- Check for the IATA magnetic stripe input
"RTN","DPTLK",25,0)
 N MAG,GCHK,BARCODE,DGVIC40,DGCAC
"RTN","DPTLK",26,0)
 S (MAG,BARCODE,DGVIC40,DGCAC)=0
"RTN","DPTLK",27,0)
 I $E(DPTX)="%"!($E(DPTX)=";"),DPTX["?" S MAG=1,(X,DPTX)=$$IATA(DPTX)
"RTN","DPTLK",28,0)
 I 'MAG,DPTX?1"%"1N13ANP.3AN S BARCODE=1,(X,DPTX)=$$BARCODE($$UP^XLFSTR(DPTX))
"RTN","DPTLK",29,0)
 ; - read other line but don't use dbia#10096 don't display input
"RTN","DPTLK",30,0)
 I $G(DGVIC40),'BARCODE X ^%ZOSF("EOFF") R X(1):1 X ^%ZOSF("EON")
"RTN","DPTLK",31,0)
 I 'MAG,'BARCODE,DPTX?1N6AN1A7AN1A2AN S DGCAC=1,(X,DPTX)=$$CACCARD($$UP^XLFSTR(DPTX))
"RTN","DPTLK",32,0)
 ; fail VHIC card match but starts with %, we're done
"RTN","DPTLK",33,0)
 I 'MAG,'BARCODE,'DGCAC,$E(DPTX,1)="%" G CHKDFN
"RTN","DPTLK",34,0)
 ;
"RTN","DPTLK",35,0)
CHKPAT ; -- Custom Patient Lookup
"RTN","DPTLK",36,0)
 D DO^DIC1
"RTN","DPTLK",37,0)
 S DIC("W")=$S($D(DIC("W")):DIC("W"),1:"")
"RTN","DPTLK",38,0)
 K DPTIFNS,DPTS,DPTSEL
"RTN","DPTLK",39,0)
 S DPTCNT=0
"RTN","DPTLK",40,0)
 ; -- Check input for format an length
"RTN","DPTLK",41,0)
 G CHKDFN:DPTX?1A!(DPTX'?.ANP)!($L(DPTX)>30)&('$G(DGVIC40))
"RTN","DPTLK",42,0)
 ; -- Check for null response or abort
"RTN","DPTLK",43,0)
 I DPTX=""!(DPTX["^") G ASKPAT:DIC(0)["A",QK
"RTN","DPTLK",44,0)
 ; -- Check for question mark
"RTN","DPTLK",45,0)
 I DPTX["?" D  G ASKPAT:DIC(0)["A",QK
"RTN","DPTLK",46,0)
 .S D="B"
"RTN","DPTLK",47,0)
 .S DZ=$S(DPTX?1"?":"",1:"??")
"RTN","DPTLK",48,0)
 .G CHKPAT1:DZ="??"
"RTN","DPTLK",49,0)
 .N %
"RTN","DPTLK",50,0)
 .W !,?1,"Answer with PATIENT NAME, or SOCIAL SECURITY NUMBER, or last 4 digits",!,?4,"of SOCIAL SECURITY NUMBER, or first initial of"
"RTN","DPTLK",51,0)
 .W " last name with last",!,?4,"4 digits of SOCIAL SECURITY NUMBER"
"RTN","DPTLK",52,0)
 .W !,?1,"Do you want the entire ",+$P($G(^DPT(0)),"^",4),"-Entry PATIENT List" S %=0 D YN^DICN
"RTN","DPTLK",53,0)
 .Q:%'=1
"RTN","DPTLK",54,0)
 .S DZ="??"
"RTN","DPTLK",55,0)
CHKPAT1 .S X=DPTX
"RTN","DPTLK",56,0)
 .D DQ^DICQ
"RTN","DPTLK",57,0)
 ; -- Check for space bar, return
"RTN","DPTLK",58,0)
 I DPTX=" " D  G CHKDFN
"RTN","DPTLK",59,0)
 .S Y=$S('($D(DUZ)#2):-1,$D(^DISV(DUZ,"^DPT(")):^("^DPT("),1:-1)
"RTN","DPTLK",60,0)
 .D SETDPT^DPTLK1:Y>0
"RTN","DPTLK",61,0)
 .S DPTDFN=$S($D(DPTS(Y)):Y,1:-1)
"RTN","DPTLK",62,0)
 ; -- Check for DFN look up
"RTN","DPTLK",63,0)
 I $E(DPTX)="`" D  G CHKDFN
"RTN","DPTLK",64,0)
 .S Y=$S($D(^DPT(+$P(DPTX,"`",2),0)):+$P(DPTX,"`",2),1:-1)
"RTN","DPTLK",65,0)
 .D SETDPT^DPTLK1:Y>0
"RTN","DPTLK",66,0)
 .S DPTDFN=$S($D(DPTS(Y)):Y,1:-1)
"RTN","DPTLK",67,0)
 ; -- Puts input in correct format
"RTN","DPTLK",68,0)
 G CHKDFN:DPTX=""
"RTN","DPTLK",69,0)
 ; -- Force new entry
"RTN","DPTLK",70,0)
 I $E(DPTX)="""",$E(DPTX,$L(DPTX))="""" G NOPAT
"RTN","DPTLK",71,0)
 ; -- Check for EDIPI lookup
"RTN","DPTLK",72,0)
 I DPTX?10N,DIC(0)["M" D  G:$G(DPTDFN)>0 CHKDFN
"RTN","DPTLK",73,0)
 .N DGEDIPI
"RTN","DPTLK",74,0)
 .S DGEDIPI=0 F  S DGEDIPI=$O(^DGCN(391.91,"AISS",DPTX,"USDOD","NI",+$$IEN^XUAF4("200DOD"),DGEDIPI)) Q:'DGEDIPI  I $P($G(^DGCN(391.91,DGEDIPI,2)),"^",3)'="H" Q
"RTN","DPTLK",75,0)
 .Q:DGEDIPI<1
"RTN","DPTLK",76,0)
 .S Y=$P($G(^DGCN(391.91,DGEDIPI,0)),"^")
"RTN","DPTLK",77,0)
 .D SETDPT^DPTLK1:Y>0
"RTN","DPTLK",78,0)
 .S DPTDFN=$S($D(DPTS(Y)):Y,1:-1)
"RTN","DPTLK",79,0)
 ; -- Check for index lookups
"RTN","DPTLK",80,0)
 I '$G(DGVIC40)!(DPTX?9N) D ^DPTLK1  D  G QK:$D(DTOUT)!($D(DUOUT)&(DIC(0)'["A")),ASKPAT:$D(DUOUT),CHKPAT:DPTDFN<0,CHKDFN:DPTDFN>0 I DIC(0)["N",$D(^DPT(DPTX,0)) S Y=X D SETDPT^DPTLK1 S DPTDFN=$S($D(DPTS(Y)):Y,1:-1) G CHKDFN
"RTN","DPTLK",81,0)
 . I DPTDFN<1,$P($G(XQY0),"^",2)="Register a Patient",$T(PATIENT^MPIFXMLP)'="",'MAG D
"RTN","DPTLK",82,0)
 .. S DPTDFN=$$SEARCH^DPTLK7(DPTX,$G(DPTXX))
"RTN","DPTLK",83,0)
 .. I DPTDFN<1 K DO,D,DIC("W"),DPTCNT,DPTS,DPTSEL,DPTSZ S DPTDFN=-1,Y=-1,(DPTX,DPTXX)=""
"RTN","DPTLK",84,0)
 .. S DPTSZ=1000 I $D(^DD("OS"))#2 S DPTSZ=$S(+$P(^DD("OS",^("OS"),0),U,2):$P(^(0),U,2),1:DPTSZ)
"RTN","DPTLK",85,0)
 .. S:DPTDFN>0 DPTS(DPTDFN)=$P(^DPT(DPTDFN,0),"^")_"^"_$P(^DPT(DPTDFN,0),"^")
"RTN","DPTLK",86,0)
MAG ; -- No patient found, check for mag stripe input, create stub
"RTN","DPTLK",87,0)
 I 'MAG,'BARCODE,'DGCAC G NOPAT
"RTN","DPTLK",88,0)
 ; -- Check for ADT option(s) only
"RTN","DPTLK",89,0)
 N DGOPT
"RTN","DPTLK",90,0)
 S DGOPT=$P($G(XQY0),"^",2)
"RTN","DPTLK",91,0)
 I DGOPT'="Load/Edit Patient Data",DGOPT'="Register a Patient" D  G EN2
"RTN","DPTLK",92,0)
 .W !,"    ...Patient not in database, use ADT options to load patient" D Q1
"RTN","DPTLK",93,0)
 ; -- Prompt for creation of stub
"RTN","DPTLK",94,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Patient not found...Create stub entry: "
"RTN","DPTLK",95,0)
 S GCHK=$D(^TMP("DGVIC"))
"RTN","DPTLK",96,0)
 D ^DIR
"RTN","DPTLK",97,0)
 K DIR
"RTN","DPTLK",98,0)
 I 'Y D Q1 G EN2
"RTN","DPTLK",99,0)
 ; -- Parse IATA fields
"RTN","DPTLK",100,0)
 D @$S(DGVIC40:"VIC40(.DGFLDS,DGVIC40,DGCAC)",1:"FIELDS(IATA)")
"RTN","DPTLK",101,0)
 I '$D(@DGFLDS) W !,"Could not add patient to patient file" D Q1 G EN2
"RTN","DPTLK",102,0)
 ; -- Check for Duplicates, no checking if VIC 4.0 card or CAC card
"RTN","DPTLK",103,0)
 D:'$G(DGVIC40) EP2^DPTLK3
"RTN","DPTLK",104,0)
 ; -- No check done on VIC 4.0 or CAC card, so skip DPTDFN value
"RTN","DPTLK",105,0)
 ;    check, file record
"RTN","DPTLK",106,0)
 I 'DGVIC40,DPTDFN<0 D Q1 G EN2
"RTN","DPTLK",107,0)
 ; -- Creates Stub entry in patient file
"RTN","DPTLK",108,0)
 S Y=$$FILE^DPTLK4(DGFLDS,$G(DGVIC40))
"RTN","DPTLK",109,0)
 I $P(Y,"^",3)'=1 W !,"Could not add patient to patient file" D QK1 Q
"RTN","DPTLK",110,0)
 D QK1
"RTN","DPTLK",111,0)
 Q
"RTN","DPTLK",112,0)
 ;
"RTN","DPTLK",113,0)
NOPAT ; -- No patient found, ask to add new
"RTN","DPTLK",114,0)
 I DIC(0)["L" D ^DPTLK2 S Y=DPTDFN G ASKPAT:DIC(0)["A"&(Y<0)&('$G(DTOUT)),QK1
"RTN","DPTLK",115,0)
 ;
"RTN","DPTLK",116,0)
CHKDFN ; -- 
"RTN","DPTLK",117,0)
 S:'$D(DPTDFN) DPTDFN=-1 I DPTDFN'>0!('$D(DPTS(+DPTDFN))) W:DIC(0)["Q" *7," ??" G ASKPAT:DIC(0)["A",QK
"RTN","DPTLK",118,0)
 I DIC(0)["E" D  W $S('$D(DPTSEL)&('$D(DIVP)):$P(DPTS(DPTDFN),U,2)_"  "_$P(DPTS(DPTDFN),U)_"  ",$D(^DPT(DPTDFN,0)):"  "_$P(^(0),U)_"  ",1:"") S Y=DPTDFN X:$D(^DPT(DPTDFN,0)) "N DDS X DIC(""W"")"
"RTN","DPTLK",119,0)
 .I $D(DDS) D CLRMSG^DDS S DX=0,DY=DDSHBX+1 X DDXY
"RTN","DPTLK",120,0)
 ;
"RTN","DPTLK",121,0)
 ; check for other patients in "BS5" xref on Patient file
"RTN","DPTLK",122,0)
 ;I '$G(DICR),DPTDFN>0,DIC(0)["E",$$BS5^DPTLK5(+DPTDFN) D  G ASKPAT:DIC(0)["A"&(%'=1),QK:DPTDFN<0
"RTN","DPTLK",123,0)
 I DPTDFN>0,DIC(0)["E",$$BS5^DPTLK5(+DPTDFN),'$D(DGSEARCH) D  G ASKPAT:DIC(0)["A"&(%'=1),QK:DPTDFN<0  ;*TEST*
"RTN","DPTLK",124,0)
 .N DPTZERO,DPTLSNME,DPTSSN S DPTZERO=$G(^DPT(+DPTDFN,0)),DPTLSNME=$P($P(DPTZERO,U),","),DPTSSN=$E($P(DPTZERO,U,9),6,9)
"RTN","DPTLK",125,0)
 .W $C(7),!!,"There is more than one patient whose last name is '",DPTLSNME,"' and"
"RTN","DPTLK",126,0)
 .W !,"whose social security number ends with '",DPTSSN,"'."
"RTN","DPTLK",127,0)
 .W !,"Are you sure you wish to continue (Y/N)" S %=0 D YN^DICN
"RTN","DPTLK",128,0)
 .I %'=1 S DPTDFN=-1
"RTN","DPTLK",129,0)
 ;
"RTN","DPTLK",130,0)
 ;I '$G(DICR),DPTDFN>0 S Y=DPTDFN D ^DGSEC S DPTDFN=Y G ASKPAT:DIC(0)["A"&(DPTDFN<0),QK:DPTDFN<0
"RTN","DPTLK",131,0)
 I DPTDFN>0,DIC(0)["E" S Y=DPTDFN D ^DGSEC S DPTDFN=Y G ASKPAT:DIC(0)["A"&(DPTDFN<0),QK:DPTDFN<0 S DPTBTDT=1
"RTN","DPTLK",132,0)
 S DPTX=DPTX_$P(DPTS(DPTDFN),U,2),DPTDFN=DPTDFN_U_$P(^DPT(DPTDFN,0),U)
"RTN","DPTLK",133,0)
 ;
"RTN","DPTLK",134,0)
Q ; -- 
"RTN","DPTLK",135,0)
 S Y=$S('$D(DPTDFN):-1,'$D(DPTS(+DPTDFN)):-1,1:DPTDFN),X=$S($D(DPTX)&(+Y>0):DPTX,$D(DPTSAVX):DPTSAVX,$D(DPTX):DPTX,1:"")
"RTN","DPTLK",136,0)
 I Y>0 S:DIC(0)'["F" ^DISV($S($D(DUZ)#2:DUZ,1:0),"^DPT(")=+Y S:DIC(0)["Z" Y(0)=^DPT(+Y,0),Y(0,0)=$P(^(0),U,1)
"RTN","DPTLK",137,0)
 ;DG*600
"RTN","DPTLK",138,0)
 I DIC(0)["E",$$TESTPAT^VADPT(+Y) W *7,!,"WARNING : You may have selected a test patient."
"RTN","DPTLK",139,0)
 I DIC(0)["E",$$BADADR^DGUTL3(+Y) W *7,!,"WARNING : ** This patient has been flagged with a Bad Address Indicator."
"RTN","DPTLK",140,0)
 I DIC(0)["E",$$VAADV^DPTLK3(+Y) W *7,!,"** Patient is VA ADVANTAGE."
"RTN","DPTLK",141,0)
 ;DG*485
"RTN","DPTLK",142,0)
 I $D(^DPT("AXFFP",1,+Y)) D FFP^DPTLK5
"RTN","DPTLK",143,0)
 ;Display enrollment information
"RTN","DPTLK",144,0)
 I Y>0,DIC(0)["E" D ENR
"RTN","DPTLK",145,0)
 ;
"RTN","DPTLK",146,0)
 ;Call Combat Vet check
"RTN","DPTLK",147,0)
 I Y>0,DIC(0)["E" D CV
"RTN","DPTLK",148,0)
 ;
"RTN","DPTLK",149,0)
 ; check whether to display Means Test Required message
"RTN","DPTLK",150,0)
 D
"RTN","DPTLK",151,0)
 .N DPTDIV
"RTN","DPTLK",152,0)
 .I '$G(DUZ(2)) Q
"RTN","DPTLK",153,0)
 .I Y>0,DIC(0)["E" S DPTDIV=$$DMT^DPTLK5(+Y,DUZ(2)) I DPTDIV D
"RTN","DPTLK",154,0)
 ..W $C(7),!!,"MEANS TEST REQUIRED"
"RTN","DPTLK",155,0)
 ..W !,?3,$P($G(^DG(40.8,DPTDIV,"MT")),U,2)
"RTN","DPTLK",156,0)
 ..H 2
"RTN","DPTLK",157,0)
 ;
"RTN","DPTLK",158,0)
Q1 ; -- Clean up variables
"RTN","DPTLK",159,0)
 K D,DIC("W"),DO,DPTCNT,DPTDFN,DPTIFNS,DPTIX,DPTS
"RTN","DPTLK",160,0)
 K:'$G(DICR) DPTBTDT  ; IF DICR LEAVE FOR DGSEC TO HANDLE
"RTN","DPTLK",161,0)
 K DPTSAVX,DPTSEL,DPTSZ,DPTX
"RTN","DPTLK",162,0)
 ;
"RTN","DPTLK",163,0)
 K:$D(IATA) IATA
"RTN","DPTLK",164,0)
 K:$D(DGFLDS) @DGFLDS,DGFLDS
"RTN","DPTLK",165,0)
 Q
"RTN","DPTLK",166,0)
 ;
"RTN","DPTLK",167,0)
QK K:'$D(DPTNOFZK) DPTNOFZY G Q
"RTN","DPTLK",168,0)
 ;
"RTN","DPTLK",169,0)
QK1 K:'$D(DPTNOFZK) DPTNOFZY G Q1
"RTN","DPTLK",170,0)
 ;
"RTN","DPTLK",171,0)
IX ; --
"RTN","DPTLK",172,0)
 I $D(D),$D(^DD(2,0,"IX",D)),($E(D)'="A") S DPTIX=D
"RTN","DPTLK",173,0)
 G DPTLK
"RTN","DPTLK",174,0)
 ;
"RTN","DPTLK",175,0)
IATA(X) ; --
"RTN","DPTLK",176,0)
 ;This function pulls off ssn from the IATA track (old card)
"RTN","DPTLK",177,0)
 ; - If new card, then use card number to look-up DFN, returned as `DFN
"RTN","DPTLK",178,0)
 ;
"RTN","DPTLK",179,0)
 ;Input:  X   -  what was read in
"RTN","DPTLK",180,0)
 ;Output: SSN -  social security number OR `DFN if new card
"RTN","DPTLK",181,0)
 ;          Q -  quit
"RTN","DPTLK",182,0)
 ;
"RTN","DPTLK",183,0)
 ; Track            Start Sent     End Sent      Field Separator
"RTN","DPTLK",184,0)
 ; -----            ----------     --------      ---------------
"RTN","DPTLK",185,0)
 ;  IATA (alphanum)      %             ?          {   (Note: VA used ^)
"RTN","DPTLK",186,0)
 ;  ABA (numeric)        ;             ?          =    
"RTN","DPTLK",187,0)
 ;
"RTN","DPTLK",188,0)
 ;N IATA
"RTN","DPTLK",189,0)
 S (IATA)=""
"RTN","DPTLK",190,0)
 I $E(X)'="%" Q X ; no start sentinel
"RTN","DPTLK",191,0)
 I X'["?" Q "Q"
"RTN","DPTLK",192,0)
 ; -- Extract data from track
"RTN","DPTLK",193,0)
 S IATA=$$TRACK(X,"%","?")
"RTN","DPTLK",194,0)
 ; -- checks for no data
"RTN","DPTLK",195,0)
 I IATA="" Q "Q"
"RTN","DPTLK",196,0)
 ; -- checks for new card, look-up DFN
"RTN","DPTLK",197,0)
 I $E(X,1,29)?1"%"9NP1"^"17UNP1"?" D
"RTN","DPTLK",198,0)
 . N CARD
"RTN","DPTLK",199,0)
 . S CARD=+$P($P(X,"%",2),"^")
"RTN","DPTLK",200,0)
 . ; **919, Story 220135 (elz) log the card activity
"RTN","DPTLK",201,0)
 . D CARDLOG^MPIFAPI(CARD,"VHIC","SWIPE")
"RTN","DPTLK",202,0)
 . S IATA=$$CARD(CARD)
"RTN","DPTLK",203,0)
 ; -- Returns SSN or `DFN value
"RTN","DPTLK",204,0)
 I IATA'="" Q $P(IATA,"^")
"RTN","DPTLK",205,0)
 Q "Q"
"RTN","DPTLK",206,0)
 ;
"RTN","DPTLK",207,0)
TRACK(X,START,END) ; find track where start/end are sentinels
"RTN","DPTLK",208,0)
 ;
"RTN","DPTLK",209,0)
 Q $P($P($G(X),START,2),END,1)
"RTN","DPTLK",210,0)
 ;
"RTN","DPTLK",211,0)
FIELDS(IATA) ; -- Sets fields
"RTN","DPTLK",212,0)
 Q:'$D(IATA)
"RTN","DPTLK",213,0)
 N CNT,FIELD
"RTN","DPTLK",214,0)
 S DGFLDS="^TMP(""DGVIC"","_$J_")",CNT=1
"RTN","DPTLK",215,0)
 K @DGFLDS
"RTN","DPTLK",216,0)
 F  S FIELD=$P($G(IATA),"^",CNT)  Q:FIELD=""  D
"RTN","DPTLK",217,0)
 .S @DGFLDS@(CNT)=FIELD
"RTN","DPTLK",218,0)
 .S CNT=CNT+1
"RTN","DPTLK",219,0)
 ; -- Define fields for duplicate checker
"RTN","DPTLK",220,0)
 S DPTX=$G(@DGFLDS@(2)) ;NAME
"RTN","DPTLK",221,0)
 S DPTIDS(.03)=$G(@DGFLDS@(3)) ;DOB
"RTN","DPTLK",222,0)
 S DPTIDS(.09)=$G(@DGFLDS@(1)) ;SSN
"RTN","DPTLK",223,0)
 Q
"RTN","DPTLK",224,0)
BARCODE(X) ;
"RTN","DPTLK",225,0)
 ;This function pulls off card number from the barcode scan
"RTN","DPTLK",226,0)
 ;  looks up the patient (locally)
"RTN","DPTLK",227,0)
 ;  if not locally found, queries mpi 
"RTN","DPTLK",228,0)
 ;
"RTN","DPTLK",229,0)
 ;Input:  X   -  what was read in
"RTN","DPTLK",230,0)
 ;Output: DFN -  `DFN
"RTN","DPTLK",231,0)
 ;          Q -  quit
"RTN","DPTLK",232,0)
 ;
"RTN","DPTLK",233,0)
 ; Input       Start Data   VIC ver     DoD EDI_PIN     VA/VIC II   
"RTN","DPTLK",234,0)
 ; --------    ----------   -------     -----------     ----------
"RTN","DPTLK",235,0)
 ; alphanum        %           N         alphanum 7     alphanum 6
"RTN","DPTLK",236,0)
 ;
"RTN","DPTLK",237,0)
 N CARD
"RTN","DPTLK",238,0)
 S CARD=$$B32TO10($E(X,10,15)) I 'CARD Q "Q"
"RTN","DPTLK",239,0)
 ; **919, Story 220135 (elz) log the card activity
"RTN","DPTLK",240,0)
 D CARDLOG^MPIFAPI(CARD,"VHIC","SCAN")
"RTN","DPTLK",241,0)
 Q $$CARD(CARD)
"RTN","DPTLK",242,0)
 ;
"RTN","DPTLK",243,0)
CACCARD(X) ;
"RTN","DPTLK",244,0)
 ;This function pulls off EDIPI number from the CAC barcode scan
"RTN","DPTLK",245,0)
 ;  looks up the patient (locally)
"RTN","DPTLK",246,0)
 ;  if not locally found, queries mpi 
"RTN","DPTLK",247,0)
 ;
"RTN","DPTLK",248,0)
 ;Input:  X   -  what was read in
"RTN","DPTLK",249,0)
 ;Output: DFN -  `DFN
"RTN","DPTLK",250,0)
 ;          Q -  quit
"RTN","DPTLK",251,0)
 ;
"RTN","DPTLK",252,0)
 ; VC     PDI     PT       DoD EDI   PC     BC      CI
"RTN","DPTLK",253,0)
 ; --     ---     --       -------   --     ---     ---
"RTN","DPTLK",254,0)
 ; "1"    6UN     1U         7UN     1U     1UN     1UN
"RTN","DPTLK",255,0)
 ;
"RTN","DPTLK",256,0)
 N EDIPI
"RTN","DPTLK",257,0)
 S EDIPI=$$B32TO10($E(X,9,15)) I 'EDIPI Q "Q"
"RTN","DPTLK",258,0)
 Q $$EDIPI(EDIPI)
"RTN","DPTLK",259,0)
 ;
"RTN","DPTLK",260,0)
EDIPI(EDIPI) ; - returns `DFN from EDIPI number
"RTN","DPTLK",261,0)
 N DFN,VICFAC
"RTN","DPTLK",262,0)
 ; **919, Story 220135 (elz) log the card activity
"RTN","DPTLK",263,0)
 D CARDLOG^MPIFAPI(EDIPI,"CAC","SCAN")
"RTN","DPTLK",264,0)
 S VICFAC=+$$LKUP^XUAF4("200DOD") ; national DOD station number
"RTN","DPTLK",265,0)
 S DFN=+$G(^DGCN(391.91,+$O(^DGCN(391.91,"ASID",EDIPI,VICFAC,0)),0))
"RTN","DPTLK",266,0)
 S DGVIC40=EDIPI ; saving EDIPI number here so I don't have to look later
"RTN","DPTLK",267,0)
 I DFN Q "`"_DFN
"RTN","DPTLK",268,0)
 ; - not found locally, need to make sure we don't find anyone DGVIC40
"RTN","DPTLK",269,0)
 Q "Q"
"RTN","DPTLK",270,0)
CARD(CARD) ; - returns `DFN from card number
"RTN","DPTLK",271,0)
 N DFN,VICFAC
"RTN","DPTLK",272,0)
 S VICFAC=+$$LKUP^XUAF4("742V1") ; national vic facility number
"RTN","DPTLK",273,0)
 S DFN=+$G(^DGCN(391.91,+$O(^DGCN(391.91,"ASID",CARD,VICFAC,0)),0))
"RTN","DPTLK",274,0)
 S DGVIC40=CARD ; saving card number here so I don't have to look later
"RTN","DPTLK",275,0)
 I DFN Q "`"_DFN
"RTN","DPTLK",276,0)
 ; - not found locally, need to make sure we don't find anyone DGVIC40
"RTN","DPTLK",277,0)
 Q "Q"
"RTN","DPTLK",278,0)
VIC40(DGFLDS,DGVIC40,DGCAC) ; - returns the data used to create the
"RTN","DPTLK",279,0)
 ;  patient file entry from mpi
"RTN","DPTLK",280,0)
 N X,DGMPI
"RTN","DPTLK",281,0)
 S DGFLDS="^TMP(""DGVIC"","_$J_")"
"RTN","DPTLK",282,0)
 K @DGFLDS
"RTN","DPTLK",283,0)
 I $T(CARDPV^MPIFXMLS)'="" D CARDPV^MPIFXMLS(.DGMPI,DGVIC40,DGCAC)
"RTN","DPTLK",284,0)
 S X=0 F  S X=$O(DGMPI(X)) Q:'X  S @DGFLDS@(X)=DGMPI(X)
"RTN","DPTLK",285,0)
 Q
"RTN","DPTLK",286,0)
ENR ;Display Enrollment information after patient selection
"RTN","DPTLK",287,0)
 N DGENCAT,DGENDFN,DGENR,DGEGTIEN,DGEGT
"RTN","DPTLK",288,0)
 I '$$GET^DGENA($$FINDCUR^DGENA(+DPTDFN),.DGENR) Q
"RTN","DPTLK",289,0)
 S DGENCAT=$$CATEGORY^DGENA4(+DPTDFN)
"RTN","DPTLK",290,0)
 S DGENCAT=$$EXTERNAL^DILFD(27.15,.02,"",DGENCAT)
"RTN","DPTLK",291,0)
 W !?1,"Enrollment Priority: ",$S($G(DGENR("PRIORITY")):$$EXT^DGENU("PRIORITY",DGENR("PRIORITY")),1:""),$S($G(DGENR("SUBGRP"))="":"",1:$$EXT^DGENU("SUBGRP",$G(DGENR("SUBGRP"))))
"RTN","DPTLK",292,0)
 W ?33,"Category: ",DGENCAT
"RTN","DPTLK",293,0)
 W ?57,"End Date: ",$S($G(DGENR("END")):$$FMTE^XLFDT(DGENR("END"),"5DZ"),1:""),!
"RTN","DPTLK",294,0)
 ;If patient is NOT ELIGIBLE, display Enrollment Status (Ineligible Project Phase I)
"RTN","DPTLK",295,0)
 I $G(DGENR("STATUS"))=10!($G(DGENR("STATUS"))=19)!($G(DGENR("STATUS"))=20) D
"RTN","DPTLK",296,0)
 . W ?1,"Enrollment Status: ",$S($G(DGENR("STATUS")):$$EXT^DGENU("STATUS",DGENR("STATUS")),1:"") ;H 5
"RTN","DPTLK",297,0)
 ;check for Combat Veteran Eligibility, if elig do not display EGT info
"RTN","DPTLK",298,0)
 I $$CVEDT^DGCV(+DPTDFN) Q
"RTN","DPTLK",299,0)
 ;Get Enrollment Group Threshold Priority and Subgroup
"RTN","DPTLK",300,0)
 S DGEGTIEN=$$FINDCUR^DGENEGT
"RTN","DPTLK",301,0)
 S DGEGT=$$GET^DGENEGT(DGEGTIEN,.DGEGT)
"RTN","DPTLK",302,0)
 Q:$G(DGENR("PRIORITY"))=""!($G(DGEGT("PRIORITY"))="")
"RTN","DPTLK",303,0)
 ;Compare Patient's Enrollment Priority to Enrollment Group Threshold
"RTN","DPTLK",304,0)
 I '$$ABOVE^DGENEGT1(+DPTDFN,DGENR("PRIORITY"),$G(DGENR("SUBGRP")),DGEGT("PRIORITY"),DGEGT("SUBGRP")) D
"RTN","DPTLK",305,0)
 .N X,IORVOFF,IORVON
"RTN","DPTLK",306,0)
 .S X="IORVOFF;IORVON"
"RTN","DPTLK",307,0)
 .D ENDR^%ZISS
"RTN","DPTLK",308,0)
 .W !?32 W:$D(IORVON) IORVON  W "*** WARNING ***" W:$D(IORVOFF) IORVOFF
"RTN","DPTLK",309,0)
 .I DGENR("END")'="" W !?14 W:$D(IORVON) IORVON W "*** PATIENT ENROLLMENT END",$S(DT>+DGENR("END"):"ED",1:"S")," EFFECTIVE ",$$FMTE^XLFDT(DGENR("END"),"5DZ")," ***" W:$D(IORVOFF) IORVOFF Q
"RTN","DPTLK",310,0)
 .W !?5 W:$D(IORVON) IORVON W "*** PATIENT ENROLLMENT ENDING.  ENROLLMENT END DATE IS NOT KNOWN. ***" W:$D(IORVOFF) IORVOFF
"RTN","DPTLK",311,0)
 Q
"RTN","DPTLK",312,0)
CV ;check for Combat Vet status
"RTN","DPTLK",313,0)
 N DGCV
"RTN","DPTLK",314,0)
 S DGCV=$$CVEDT^DGCV(+DPTDFN)
"RTN","DPTLK",315,0)
 I $P(DGCV,U)=1 D  Q
"RTN","DPTLK",316,0)
 . I '$$GET^DGENA($$FINDCUR^DGENA(+DPTDFN),.DGENR) W !
"RTN","DPTLK",317,0)
 . W ?3,"Combat Vet Status: "_$S($P(DGCV,U,3)=1:"ELIGIBLE",1:"EXPIRED"),?57,"End Date: "_$$FMTE^XLFDT($P(DGCV,U,2),"5DZ")
"RTN","DPTLK",318,0)
 Q
"RTN","DPTLK",319,0)
B32TO10(X) ; - convert from base 32 to base 10
"RTN","DPTLK",320,0)
 N I,Y,S S Y=0,S="0123456789ABCDEFGHIJKLMNOPQRSTUV"
"RTN","DPTLK",321,0)
 I X[" " S X=$E(X,1,$F(X," ")-2)
"RTN","DPTLK",322,0)
 F I=1:1:$L(X) S Y=Y*32+($F(S,$E(X,I))-2)
"RTN","DPTLK",323,0)
 Q Y
"RTN","DPTLK",324,0)
RPCVIC(RETURN,DPTX) ; - patient lookup from VIC card, rpc/api
"RTN","DPTLK",325,0)
 ; non-interactive
"RTN","DPTLK",326,0)
 ; this function will return a patient's DFN based on input.  input must
"RTN","DPTLK",327,0)
 ; be in the form of the FULL input from a VIC card (magstripe or bar
"RTN","DPTLK",328,0)
 ; code), the patient must be locally known (FULL doesn't but can contain
"RTN","DPTLK",329,0)
 ; additional card tracks)
"RTN","DPTLK",330,0)
 ; RETURN input should be passed by reference
"RTN","DPTLK",331,0)
 ;
"RTN","DPTLK",332,0)
 ;  Input examples:
"RTN","DPTLK",333,0)
 ;     Barcode possibilities:
"RTN","DPTLK",334,0)
 ;            NNNNNNNNN (old VIC card, full 9 digit ssn)
"RTN","DPTLK",335,0)
 ;            CCCCCCCCCCCCCCCCCC (new VIC 4.0 card, 18 characters with
"RTN","DPTLK",336,0)
 ;                                10-15 being compressed card number)
"RTN","DPTLK",337,0)
 ;     Magstripe possibilities:
"RTN","DPTLK",338,0)
 ;            Must always start with %
"RTN","DPTLK",339,0)
 ;            Must contain ?
"RTN","DPTLK",340,0)
 ;            $E(X,2,10) = SSN (old card)
"RTN","DPTLK",341,0)
 ;            %NNNNNNNNN^CCCCCCCCCCCCCCCCC? (first 29 characters) where
"RTN","DPTLK",342,0)
 ;                                          N = card number (new card)
"RTN","DPTLK",343,0)
 ;
"RTN","DPTLK",344,0)
 ;  Return (pass by reference):  If patient known locally = DFN
"RTN","DPTLK",345,0)
 ;                                   If not known locally = -1
"RTN","DPTLK",346,0)
 ;
"RTN","DPTLK",347,0)
 N MAG,BARCODE
"RTN","DPTLK",348,0)
 S (RETURN,MAG,BARCODE)=0
"RTN","DPTLK",349,0)
 I '$D(DPTX) Q -1
"RTN","DPTLK",350,0)
 S DPTX=$$UP^XLFSTR(DPTX)
"RTN","DPTLK",351,0)
 I DPTX["?" S DPTX=$E(DPTX,1,$F(DPTX,"?")-1)
"RTN","DPTLK",352,0)
 I DPTX?9N S RETURN=$O(^DPT("SSN",DPTX,0))
"RTN","DPTLK",353,0)
 I $E(DPTX)="%"!($E(DPTX)=";"),DPTX["?",'RETURN S MAG=1,DPTX=$$IATA(DPTX)
"RTN","DPTLK",354,0)
 I 'MAG,DPTX?1"%"1N13UNP.3UN,'RETURN S BARCODE=1,DPTX=$$BARCODE(DPTX)
"RTN","DPTLK",355,0)
 I 'MAG,'BARCODE,DPTX?1N6UN1U7UN1U2UN S DPTX=$$CACCARD(DPTX)
"RTN","DPTLK",356,0)
 I 'RETURN,$E(DPTX,2,999) S RETURN=$S($E(DPTX)="`":$E(DPTX,2,999),1:$O(^DPT("SSN",DPTX,0)))
"RTN","DPTLK",357,0)
 S RETURN=$S(RETURN:RETURN,1:-1)
"RTN","DPTLK",358,0)
 Q
"RTN","DPTLK4")
0^2^B4091702^B3783232
"RTN","DPTLK4",1,0)
DPTLK4 ;ALB/JFP - MAS Patient Look-up Create stub entry patient file ; 09/01/96
"RTN","DPTLK4",2,0)
 ;;5.3;Registration;**73,857,915,919**;Aug 13, 1993;Build 4
"RTN","DPTLK4",3,0)
FILE(FLDARR,DGVIC40) ; -- Creates stub in patient file
"RTN","DPTLK4",4,0)
 ;Inputs:
"RTN","DPTLK4",5,0)
 ;   FLDARR   - array of field elements to file
"RTN","DPTLK4",6,0)
 ;   DGVIC40  - flag indicating VIC 4.0 card
"RTN","DPTLK4",7,0)
 ;Outputs:
"RTN","DPTLK4",8,0)
 ;   0        - sucess
"RTN","DPTLK4",9,0)
 ;   -1^error - 
"RTN","DPTLK4",10,0)
 ;
"RTN","DPTLK4",11,0)
 ; *857 made changes to support new vic 4.0 card (elz)
"RTN","DPTLK4",12,0)
 ;
"RTN","DPTLK4",13,0)
 ; -- Check input
"RTN","DPTLK4",14,0)
 Q:'$D(FLDARR) "-1^required parameter not passed"
"RTN","DPTLK4",15,0)
 ; -- New variables
"RTN","DPTLK4",16,0)
 N Y,Z,DIC,SAVY
"RTN","DPTLK4",17,0)
 ;
"RTN","DPTLK4",18,0)
 ; -- Create stub entry in patient file
"RTN","DPTLK4",19,0)
 S DIC="^DPT(",DIC(0)="EL",DLAYGO=2
"RTN","DPTLK4",20,0)
 ;
"RTN","DPTLK4",21,0)
 ; -- Set X = patient name
"RTN","DPTLK4",22,0)
 S X=$S($G(DGVIC40):$G(@FLDARR@(.01)),1:$G(@FLDARR@(2)))
"RTN","DPTLK4",23,0)
 ;
"RTN","DPTLK4",24,0)
 ; -- if VIC 4.0 card DIR string = 
"RTN","DPTLK4",25,0)
 ;    SEX;DOB;SSN;POBCity;POBState;MMN;ICN;ICNCheck;MBI
"RTN","DPTLK4",26,0)
 I $G(DGVIC40) S DIC("DR")="",Z=.01 F  S Z=$O(@FLDARR@(Z)) Q:'Z  S:Z'=991.01&(Z'=991.02) DIC("DR")=DIC("DR")_Z_$S($L(@FLDARR@(Z)):"///"_@FLDARR@(Z),1:"")_";"
"RTN","DPTLK4",27,0)
 ;
"RTN","DPTLK4",28,0)
 ; -- add in other fields for prompt PATIENT TYPE;VETERAN;SC;MBI
"RTN","DPTLK4",29,0)
 I  S DIC("DR")=DIC("DR")_"391;1901;.301"
"RTN","DPTLK4",30,0)
 ;
"RTN","DPTLK4",31,0)
 ; -- Set DIR string (old VIC) = SEX;DOB;SSN;PATIENT TYPE;VETERAN;SC
"RTN","DPTLK4",32,0)
 E  S DIC("DR")=".02///"_$G(@FLDARR@(4))_";.03///"_$G(@FLDARR@(3))_";.09////"_$G(@FLDARR@(1))_";391///"_$G(@FLDARR@(5))_";1901///"_$G(@FLDARR@(6))_";.301///"_$G(@FLDARR@(7))
"RTN","DPTLK4",33,0)
 ;
"RTN","DPTLK4",34,0)
 ; -- set date entered into file (missing from prior vic versions)
"RTN","DPTLK4",35,0)
 S DIC("DR")=DIC("DR")_";.097////"_DT
"RTN","DPTLK4",36,0)
 ; -- set who entered (missing from prior vic versions)
"RTN","DPTLK4",37,0)
 S:$G(DUZ) DIC("DR")=DIC("DR")_";.096////"_DUZ
"RTN","DPTLK4",38,0)
 ;
"RTN","DPTLK4",39,0)
 K DD,DO D FILE^DICN S SAVY=Y
"RTN","DPTLK4",40,0)
 K DIC,DLAYGO,X
"RTN","DPTLK4",41,0)
 ;
"RTN","DPTLK4",42,0)
 ; need to update mpi with icn/correlation
"RTN","DPTLK4",43,0)
 I Y>0,$G(@FLDARR@(991.01)),$G(@FLDARR@(991.02)),$T(VIC40^MPIFAPI)'="" D VIC40^MPIFAPI(+Y,@FLDARR@(991.01)_"V"_@FLDARR@(991.02))
"RTN","DPTLK4",44,0)
 ;
"RTN","DPTLK4",45,0)
 ; -- send bulletin for newly added patient
"RTN","DPTLK4",46,0)
 I SAVY>0 D BULL^DPTLK7(+SAVY)
"RTN","DPTLK4",47,0)
 ;
"RTN","DPTLK4",48,0)
 Q SAVY
"RTN","DPTLK4",49,0)
 ;
"RTN","DPTLK7")
0^3^B185524079^B174142560
"RTN","DPTLK7",1,0)
DPTLK7 ;OAK/ELZ - MAS PATIENT LOOKUP ENTERPRISE SEARCH ; 8/24/15 2:38pm
"RTN","DPTLK7",2,0)
 ;;5.3;Registration;**915,919**;Aug 13, 1993;Build 4
"RTN","DPTLK7",3,0)
 ;
"RTN","DPTLK7",4,0)
SEARCH(DGX,DGXOLD) ; do a search, pass in what the user entered
"RTN","DPTLK7",5,0)
 ; DGX is what the user originally entered, name is assumed unless it
"RTN","DPTLK7",6,0)
 ; is exactly 9 digits, DON'T pass by reference it may change
"RTN","DPTLK7",7,0)
 ; Return:  DFN (new or found locally), 0 if nothing found/added
"RTN","DPTLK7",8,0)
 ;
"RTN","DPTLK7",9,0)
 N DG20NAME,DGMPI,DGFLDS,DGOUT,%,%Y,DGMPIR,DGDFN,DGMPIICN,DGSAVE
"RTN","DPTLK7",10,0)
 N DGKEYREQ,X,DA,DO,DIC,DGADDREQ,DGMCID
"RTN","DPTLK7",11,0)
 Q:$G(DGSEARCH) 0
"RTN","DPTLK7",12,0)
 S (DGKEYREQ,DGOUT,DGADDREQ)=0,DGSEARCH=1,DGSAVE=DGX
"RTN","DPTLK7",13,0)
 Q:$T(PATIENT^MPIFXMLP)="" 0
"RTN","DPTLK7",14,0)
 ;
"RTN","DPTLK7",15,0)
YN ;Enterprise Search?
"RTN","DPTLK7",16,0)
 W !,"Do you want to do an Enterprise Search"
"RTN","DPTLK7",17,0)
 D YN^DICN I %=0 W !,"You must enter Yes or No." G YN
"RTN","DPTLK7",18,0)
 Q:%'=1 0
"RTN","DPTLK7",19,0)
 ;
"RTN","DPTLK7",20,0)
 I $G(DGXOLD)]"" S DGX=DGXOLD
"RTN","DPTLK7",21,0)
 ; if yes then ask questions
"RTN","DPTLK7",22,0)
 ; if 9 digits entered assume ssn, need to save
"RTN","DPTLK7",23,0)
PROMPT I DGX?9N S DGFLDS(.09)=DGX,DGX=""
"RTN","DPTLK7",24,0)
 ; if name in "" need to remove
"RTN","DPTLK7",25,0)
 I $E(DGX,1)="""" S DGX=$E(DGX,2,99)
"RTN","DPTLK7",26,0)
 I $E(DGX,$L(DGX))="""" S DGX=$E(DGX,1,$L(DGX)-1)
"RTN","DPTLK7",27,0)
 D NAME(.DGX,.DG20NAME,.DGOUT) Q:DGOUT 0
"RTN","DPTLK7",28,0)
 D FLDS(.DGFLDS,DG20NAME,.DGOUT) Q:DGOUT 0
"RTN","DPTLK7",29,0)
 I $G(DGFLDS(.09))'?9N S DGADDREQ=1
"RTN","DPTLK7",30,0)
 D:DGADDREQ ADDRESS(.DGFLDS,.DGOUT) Q:DGOUT 0
"RTN","DPTLK7",31,0)
 I DGADDREQ,'$$ADDREQ(.DGFLDS) D  G PROMPT
"RTN","DPTLK7",32,0)
 . W !,"You must enter an actual SSN, a COMPLETE Address or Phone to search.",!
"RTN","DPTLK7",33,0)
 . K DGX,DG20NAME,DGFLDS,DGMPI,DGMPIR
"RTN","DPTLK7",34,0)
 . S DGX=DGSAVE
"RTN","DPTLK7",35,0)
 ;
"RTN","DPTLK7",36,0)
 ; call MPI to get data
"RTN","DPTLK7",37,0)
 W !!,"Searching the MVI..."
"RTN","DPTLK7",38,0)
 D FORMAT(.DGMPI,.DG20NAME,.DGFLDS)
"RTN","DPTLK7",39,0)
 D PATIENT^MPIFXMLP(.DGMPIR,.DGMPI)
"RTN","DPTLK7",40,0)
 S DGMCID=$G(DGMPIR("mcid"))
"RTN","DPTLK7",41,0)
 ;
"RTN","DPTLK7",42,0)
 ; too many matches found, they need to get the numbers down, re-prompt
"RTN","DPTLK7",43,0)
 I $G(DGMPIR("count"))>10!($G(DGMPIR("Result"))="QE") D  G PROMPT
"RTN","DPTLK7",44,0)
 . W !,$S(DGMPIR("count")>10:DGMPIR("count"),1:"Too many")," records found, you need to provide more specific criteria.",!
"RTN","DPTLK7",45,0)
 . K DGX,DG20NAME,DGFLDS,DGMPI,DGMPIR
"RTN","DPTLK7",46,0)
 . S DGX=DGSAVE
"RTN","DPTLK7",47,0)
 ;
"RTN","DPTLK7",48,0)
 ; no matches found on the MPI offer to add
"RTN","DPTLK7",49,0)
 I '$G(DGMPIR("count")) W !,"No records found on the MVI.",! D  Q DGDFN
"RTN","DPTLK7",50,0)
 . S DPTX=$G(DGFLDS(.01)) D ASKADD^DPTLK2 I DPTDFN'>0 S DGDFN=0 Q
"RTN","DPTLK7",51,0)
 . S DGDFN=$$ADD(.DGFLDS,.DG20NAME) Q:'DGDFN
"RTN","DPTLK7",52,0)
 . ;
"RTN","DPTLK7",53,0)
 . ; setup DGMPIR since there was nothing
"RTN","DPTLK7",54,0)
 . M DGMPIR(1)=DGMPI
"RTN","DPTLK7",55,0)
 . S DGMPIR(+$O(DGMPIR(0)),"DFN")=DGDFN
"RTN","DPTLK7",56,0)
 . ;
"RTN","DPTLK7",57,0)
 . S DGMPIR("mcid")=DGMCID
"RTN","DPTLK7",58,0)
 . D MPIADD(.DGMPIR)
"RTN","DPTLK7",59,0)
 ;
"RTN","DPTLK7",60,0)
 ; do I have some records that are in autolink threshold? - key required
"RTN","DPTLK7",61,0)
 S X=0 F  S X=$O(DGMPIR(X)) Q:'X  I $G(DGMPIR(X,"Score"))'<$G(DGMPIR("matchThreshold")) S DGKEYREQ=1
"RTN","DPTLK7",62,0)
 ;
"RTN","DPTLK7",63,0)
 ; preset list to select patients
"RTN","DPTLK7",64,0)
 S DGDFN=$$ENP^MPIFVER(.DGMPIR,$G(DGMPIR("matchThreshold")),$G(DGMPIR("dupeThreshold")))
"RTN","DPTLK7",65,0)
 ;
"RTN","DPTLK7",66,0)
 ; found and selected local patient
"RTN","DPTLK7",67,0)
 I DGDFN>0 Q DGDFN
"RTN","DPTLK7",68,0)
 I DGDFN=-1 S DPTX="" Q 0
"RTN","DPTLK7",69,0)
 ;
"RTN","DPTLK7",70,0)
 ; need to add new patient based on return from selection
"RTN","DPTLK7",71,0)
 I $D(DGMPIR)>1 K DG20NAME D FORMATR(.DGFLDS,.DGMPIR,.DG20NAME) S DGDFN=$$ADD(.DGFLDS,.DG20NAME) D:DGDFN  G QUIT
"RTN","DPTLK7",72,0)
 . ;
"RTN","DPTLK7",73,0)
 . S DGMPIR(+$O(DGMPIR(0)),"DFN")=DGDFN
"RTN","DPTLK7",74,0)
 . ;
"RTN","DPTLK7",75,0)
 . S DGMPIR("mcid")=DGMCID
"RTN","DPTLK7",76,0)
 . D MPIADD(.DGMPIR)
"RTN","DPTLK7",77,0)
 . W !
"RTN","DPTLK7",78,0)
 . ;
"RTN","DPTLK7",79,0)
 . ; if known to ESR, send Z11 and monitor for return data
"RTN","DPTLK7",80,0)
 . I $G(DGMPIR(1,"Z11")) D
"RTN","DPTLK7",81,0)
 .. W !,"Adding site correlation to MVI "
"RTN","DPTLK7",82,0)
 .. N DGTIME,DGQRY,DGDONE,DGQSTAT
"RTN","DPTLK7",83,0)
 .. S (DGQSTAT,DGDONE)=0
"RTN","DPTLK7",84,0)
 .. F DGTIME=1:1:60 D
"RTN","DPTLK7",85,0)
 ... I $D(^XTMP("DPTLK7 A24 IN-PROCESS",DGDFN)) W "." H 1 Q
"RTN","DPTLK7",86,0)
 ... ;
"RTN","DPTLK7",87,0)
 ... ; not sending, maybe already sent or it is turned off
"RTN","DPTLK7",88,0)
 ... I 'DGDONE  S DGDONE=1 D  W "." H 1 Q
"RTN","DPTLK7",89,0)
 .... I $$QRY^DGENQRY(DGDFN) W !,"Enrollment/Eligibility Query processing "
"RTN","DPTLK7",90,0)
 ... ;
"RTN","DPTLK7",91,0)
 ... ; check for status until it is returned, end with set to 60 seconds
"RTN","DPTLK7",92,0)
 ... S DGQRY=$$GET^DGENQRY($$FINDLAST^DGENQRY($G(DGDFN)),.DGQRY) I $G(DGQRY("STATUS"))>2 S DGTIME=60,DGQSTAT=1 Q
"RTN","DPTLK7",93,0)
 ... W "." H 1
"RTN","DPTLK7",94,0)
 .. I 'DGQSTAT D
"RTN","DPTLK7",95,0)
 ... W !,"Query to ES timed out, proceeding with registration."
"RTN","DPTLK7",96,0)
 ... W !,"The data will be uploaded when received."
"RTN","DPTLK7",97,0)
 .. W !!
"RTN","DPTLK7",98,0)
 ;
"RTN","DPTLK7",99,0)
 ; no one selected but may still need to add based on traits entered
"RTN","DPTLK7",100,0)
 I DGKEYREQ,'$D(^XUSEC("DG MVI ADD PT",DUZ)) D
"RTN","DPTLK7",101,0)
 . W !,"The search returned one or more patients above the Auto-Link threshold,"
"RTN","DPTLK7",102,0)
 . W !,"none of them selected. Security key required to add without selection."
"RTN","DPTLK7",103,0)
 E  D
"RTN","DPTLK7",104,0)
 . N DPTDFN,DPTX,Y,%,%Y,DGMPIR
"RTN","DPTLK7",105,0)
 . M DGMPIR(1)=DGMPI
"RTN","DPTLK7",106,0)
 . S DPTX=$G(DGFLDS(.01)) D ASKADD^DPTLK2 I DPTDFN'>0 S DGDFN=0 Q
"RTN","DPTLK7",107,0)
 . S DGDFN=$$ADD(.DGFLDS,.DG20NAME) Q:'DGDFN
"RTN","DPTLK7",108,0)
 . S DGMPIR(+$O(DGMPIR(0)),"DFN")=DGDFN
"RTN","DPTLK7",109,0)
 . S DGMPIR("AddType")=$S(DGKEYREQ:"Explicit",1:"Implicit")
"RTN","DPTLK7",110,0)
 . S DGMPIR("mcid")=DGMCID
"RTN","DPTLK7",111,0)
 . D MPIADD(.DGMPIR)
"RTN","DPTLK7",112,0)
 ;
"RTN","DPTLK7",113,0)
QUIT Q $S(DGDFN:DGDFN,1:0)
"RTN","DPTLK7",114,0)
 ;
"RTN","DPTLK7",115,0)
MPIADD(DGMPIR) ; - call to add patient to the MPI and store ICN locally
"RTN","DPTLK7",116,0)
 ; - web service call for adding and getting new ICN
"RTN","DPTLK7",117,0)
 I '$G(DGMPIR(+$O(DGMPIR(0)),"ICN")) D
"RTN","DPTLK7",118,0)
 . W !,"Adding patient to the MVI..."
"RTN","DPTLK7",119,0)
 . N DGMPIICN
"RTN","DPTLK7",120,0)
 . I '$D(DGMPIR("AddType")) S DGMPIR("AddType")="Implicit"
"RTN","DPTLK7",121,0)
 . D GETICN^MPIFXMLI(.DGMPIICN,.DGMPIR)
"RTN","DPTLK7",122,0)
 . I $G(DGMPIICN("ICN"))>0 S DGMPIR(+$O(DGMPIR(0)),"ICN")=DGMPIICN("ICN")
"RTN","DPTLK7",123,0)
 . E  D  Q
"RTN","DPTLK7",124,0)
 .. W !,"Unable to add to MVI!",!,$G(DGMPIICN("ERRTXT")),!
"RTN","DPTLK7",125,0)
 .. S ^XTMP("MPIF EXPLICIT QUEUE",0)=$$FMADD^XLFDT(DT,60)_"^"_DT_"^MPIF EXPLICIT QUEUE"
"RTN","DPTLK7",126,0)
 .. S ^XTMP("MPIF EXPLICIT QUEUE",DGDFN)=DT_"^"_DGMPIR("AddType")_"^"_$G(DGMPIR(+$O(DGMPIR(0)),"mcid"))_"^"_$G(DGMPIICN("ERRTXT"))
"RTN","DPTLK7",127,0)
 .. S X=$$ICNLC^MPIF001(DGDFN)
"RTN","DPTLK7",128,0)
 ;
"RTN","DPTLK7",129,0)
 ; - need to have MPI do MPI fields
"RTN","DPTLK7",130,0)
 S ^XTMP("DPTLK7 A24 IN-PROCESS",0)=$$FMADD^XLFDT(DT,10)_"^"_DT_"^TRACK PROCESSING OF A24 MESSAGES"
"RTN","DPTLK7",131,0)
 S ^XTMP("DPTLK7 A24 IN-PROCESS",DGDFN)=DT
"RTN","DPTLK7",132,0)
 I $G(DGMPIR(+$O(DGMPIR(0)),"ICN")) D VIC40^MPIFAPI(DGDFN,DGMPIR(+$O(DGMPIR(0)),"ICN"))
"RTN","DPTLK7",133,0)
 Q
"RTN","DPTLK7",134,0)
 ;
"RTN","DPTLK7",135,0)
NAME(DGX,DG20NAME,DGOUT) ;- ask for name components
"RTN","DPTLK7",136,0)
 N DGC,DGCL,DGCOM,DGCX,DGI,DGY,DIR,X,DGCOMP
"RTN","DPTLK7",137,0)
START S DGOUT=0
"RTN","DPTLK7",138,0)
 S DGCOM="FAMILY^GIVEN^MIDDLE^PREFIX^SUFFIX^DEGREE"
"RTN","DPTLK7",139,0)
 S DGCX=" (LAST) NAME^ (FIRST) NAME^ NAME"
"RTN","DPTLK7",140,0)
 S DGCL="1:35^1:25^1:25^1:10^1:10^1:10"
"RTN","DPTLK7",141,0)
 I $G(DGX)'?9N S DGX=$G(DGX) D STDNAME^XLFNAME(.DGX,"C")
"RTN","DPTLK7",142,0)
 S DGX("SUFFIX")=$$CLEANC^XLFNAME(DGX("SUFFIX"))
"RTN","DPTLK7",143,0)
 M DG20NAME=DGX
"RTN","DPTLK7",144,0)
 S DIR("PRE")="D:X'=""@"" NCEVAL^DPTNAME1(DGCOMP,.X)"
"RTN","DPTLK7",145,0)
 W !,"Patient name components--"
"RTN","DPTLK7",146,0)
 F DGI=1:1:6 S DGC($P(DGCOM,U,DGI),DGI)=""
"RTN","DPTLK7",147,0)
 F DGI=1:1:6 Q:DGOUT  D
"RTN","DPTLK7",148,0)
AGAIN .S DGCOMP=$P(DGCOM,U,DGI)
"RTN","DPTLK7",149,0)
 . S DIR("A")=DGCOMP_$P(DGCX,U,DGI)
"RTN","DPTLK7",150,0)
 . S DIR(0)=$S(DGI=1:"F^"_$P(DGCL,U,DGI),1:"FO^"_$P(DGCL,U,DGI))
"RTN","DPTLK7",151,0)
 . S DIR("PRE")="D NCEVAL^DPTNAME1(DGCOMP,.X)"
"RTN","DPTLK7",152,0)
 . S DIR("B")=$S($D(DG20NAME(DGCOMP)):DG20NAME(DGCOMP),1:$G(DGX(DGCOMP)))
"RTN","DPTLK7",153,0)
 . K:'$L(DIR("B")) DIR("B")
"RTN","DPTLK7",154,0)
ASK . D ^DIR I $D(DTOUT)!(X=U) S DGOUT=1 Q
"RTN","DPTLK7",155,0)
 . I $A(X)=94 D JUMP^DPTNAME1(.DGI) G AGAIN
"RTN","DPTLK7",156,0)
 . I X="@",DGI=1 W !,$C(7),"Family name cannot be deleted!" G ASK
"RTN","DPTLK7",157,0)
 . I X="@" S DG20NAME(DGCOMP)="" Q
"RTN","DPTLK7",158,0)
 . Q:'$L(X)
"RTN","DPTLK7",159,0)
 . S DG20NAME=X
"RTN","DPTLK7",160,0)
 . I DGCOMP="SUFFIX" S DG20NAME=$$CLEANC^XLFNAME(DG20NAME)
"RTN","DPTLK7",161,0)
 . S DG20NAME=$$FORMAT^XLFNAME7(DG20NAME,1,35,,3,,1,1)
"RTN","DPTLK7",162,0)
 . I '$L(DG20NAME) W "  ??",$C(7) G ASK
"RTN","DPTLK7",163,0)
 . W:DG20NAME'=X "   (",DG20NAME,")" S DG20NAME(DGCOMP)=DG20NAME
"RTN","DPTLK7",164,0)
 Q:DGOUT ""
"RTN","DPTLK7",165,0)
 ; Reconstruct name
"RTN","DPTLK7",166,0)
 S DG20NAME=$$NAMEFMT^XLFNAME(.DG20NAME,"F","CFL30")
"RTN","DPTLK7",167,0)
 ; Format the .01 value
"RTN","DPTLK7",168,0)
 M DGY=DG20NAME
"RTN","DPTLK7",169,0)
 S DG20NAME=$$FORMAT^XLFNAME7(.DGY,3,30,,2)
"RTN","DPTLK7",170,0)
 ; Check the length
"RTN","DPTLK7",171,0)
 I $L(DG20NAME)<3 D  G START
"RTN","DPTLK7",172,0)
 . W !,"Invalid values to use, full name must be at least 3 characters!",$C(7)
"RTN","DPTLK7",173,0)
 . K DG20NAME,DGX,DGCOMP
"RTN","DPTLK7",174,0)
 Q
"RTN","DPTLK7",175,0)
 ;
"RTN","DPTLK7",176,0)
ADDRESS(DGFLDS,DGOUT) ;- prompt for address
"RTN","DPTLK7",177,0)
 N DGRET,FSTR
"RTN","DPTLK7",178,0)
 ;.111 STREET ADDRESS [LINE 1] (both, free text)
"RTN","DPTLK7",179,0)
 ;.112 STREET ADDRESS [LINE 2] (both, free text)
"RTN","DPTLK7",180,0)
 ;.113 STREET ADDRESS [LINE 3] (both, free text)
"RTN","DPTLK7",181,0)
 ;.114 CITY (both, free text)
"RTN","DPTLK7",182,0)
 ;.115 STATE (external^internal)
"RTN","DPTLK7",183,0)
 ;.116 ZIP CODE (both, free text)
"RTN","DPTLK7",184,0)
 ;.117 COUNTY (external^internal^code)
"RTN","DPTLK7",185,0)
 ;.1171 PROVINCE (both, free text)
"RTN","DPTLK7",186,0)
 ;.1172 POSTAL CODE (both, free text)
"RTN","DPTLK7",187,0)
 ;.1112 ZIP+4 (both, free text)
"RTN","DPTLK7",188,0)
 ;.1173 COUNTRY (external^internal)
"RTN","DPTLK7",189,0)
 ;.121 BAD ADDRESS INDICATOR (external^internal)
"RTN","DPTLK7",190,0)
 W !,"Patient address--"
"RTN","DPTLK7",191,0)
 D EN^DGREGAED(,,,.DGRET)
"RTN","DPTLK7",192,0)
 ; address doesn't prompt for phone but returns it, don't want
"RTN","DPTLK7",193,0)
 ; to overwrite
"RTN","DPTLK7",194,0)
 K DGRET(.131)
"RTN","DPTLK7",195,0)
 M DGFLDS=DGRET
"RTN","DPTLK7",196,0)
 Q
"RTN","DPTLK7",197,0)
FLDS(DGFLDS,DGNAME,DGOUT) ;- prompt for the various FM fields
"RTN","DPTLK7",198,0)
 ; Data returned in array
"RTN","DPTLK7",199,0)
 ;DGFLDS(.09)=SSN*
"RTN","DPTLK7",200,0)
 ;DGFLDS(.03)=DOB*
"RTN","DPTLK7",201,0)
 ;DGFLDS(.02)=GENDER*
"RTN","DPTLK7",202,0)
 ;DGFLDS(.2403)=MMN
"RTN","DPTLK7",203,0)
 ;DGFLDS(.092)=POB (city)
"RTN","DPTLK7",204,0)
 ;DGFLDS(.093)=POB (state)
"RTN","DPTLK7",205,0)
 ;DGFLDS(994)=MBI
"RTN","DPTLK7",206,0)
 ;DGFLDS(.131)=PHONE
"RTN","DPTLK7",207,0)
 ;DGFLDS("EDIPI")=EDIPI
"RTN","DPTLK7",208,0)
 ;
"RTN","DPTLK7",209,0)
 W !,"Patient identifiers--"
"RTN","DPTLK7",210,0)
 ; SSN is special handling
"RTN","DPTLK7",211,0)
 N DGFLD,DIR,X,Y,DG20NAME
"RTN","DPTLK7",212,0)
 S DIR(0)="F^1:9^K:X'?9N&(X'=""P"")&(X'=""p"") X"
"RTN","DPTLK7",213,0)
 S DIR("A")="SOCIAL SECURITY NUMBER"
"RTN","DPTLK7",214,0)
 S:$D(DGFLDS(.09)) DIR("B")=DGFLDS(.09)
"RTN","DPTLK7",215,0)
 S DIR("?")="Answer with the individual's social security, must be 9 numbers or 'P'."
"RTN","DPTLK7",216,0)
 D ^DIR
"RTN","DPTLK7",217,0)
 I $D(DUOUT) S DGOUT=1 Q
"RTN","DPTLK7",218,0)
 S DGFLDS(.09)=X
"RTN","DPTLK7",219,0)
 K DIR
"RTN","DPTLK7",220,0)
 ; prompt for EDIPI value before the FM fields
"RTN","DPTLK7",221,0)
 ;S DIR(0)="FO^10^K:X'?10N X"
"RTN","DPTLK7",222,0)
 ;S DIR("A")="EDIPI"
"RTN","DPTLK7",223,0)
 ;S DIR("?")="Answer with the individual's EDIPI, must be 10 numbers."
"RTN","DPTLK7",224,0)
 ;D ^DIR
"RTN","DPTLK7",225,0)
 ;I $D(DUOUT) S DGOUT=1 Q
"RTN","DPTLK7",226,0)
 ;S DGFLDS("EDIPI")=X
"RTN","DPTLK7",227,0)
 ;K DIR
"RTN","DPTLK7",228,0)
 F DGFLD=.03,.02,.2403,.092,.093,994,.131 D  Q:$D(DTOUT)!($D(DUOUT))
"RTN","DPTLK7",229,0)
 . S DIR(0)="2,"_DGFLD_$S(DGFLD=.03:"",DGFLD=.02:"",1:"O")
"RTN","DPTLK7",230,0)
 . D ^DIR
"RTN","DPTLK7",231,0)
 . Q:$D(DIRUT)
"RTN","DPTLK7",232,0)
 . S DGFLDS(DGFLD)=$P(Y,"^")
"RTN","DPTLK7",233,0)
 S:$D(DTOUT)!($D(DUOUT)) DGOUT=1
"RTN","DPTLK7",234,0)
 I $L($G(DGNAME)) S DGFLDS(.01)=DGNAME
"RTN","DPTLK7",235,0)
 Q
"RTN","DPTLK7",236,0)
 ;
"RTN","DPTLK7",237,0)
FORMAT(DGR,DGN,DGF) ; - format data for MPI call
"RTN","DPTLK7",238,0)
 N X
"RTN","DPTLK7",239,0)
 S:$G(DGN("FAMILY"))]"" DGR("Surname")=DGN("FAMILY")
"RTN","DPTLK7",240,0)
 S:$G(DGN("GIVEN"))]"" DGR("FirstName")=DGN("GIVEN")
"RTN","DPTLK7",241,0)
 S:$G(DGN("MIDDLE"))]"" DGR("MiddleName")=DGN("MIDDLE")
"RTN","DPTLK7",242,0)
 S:$G(DGN("SUFFIX"))]"" DGR("Suffix")=DGN("SUFFIX")
"RTN","DPTLK7",243,0)
 S:$G(DGN("PREFIX"))]"" DGR("Prefix")=DGN("PREFIX")
"RTN","DPTLK7",244,0)
 S:$G(DGN("DEGREE"))]"" DGR("Degree")=DGN("DEGREE")
"RTN","DPTLK7",245,0)
 S:$G(DGF(.02))]"" DGR("Gender")=DGF(.02)
"RTN","DPTLK7",246,0)
 S:$G(DGF(.03))]"" DGR("DOB")=DGF(.03)
"RTN","DPTLK7",247,0)
 I $G(DGF(.09))]"",DGF(.09)'="P",DGF(.09)'="p" S DGR("SSN")=DGF(.09)
"RTN","DPTLK7",248,0)
 S:$G(DGF(.2403))]"" DGR("MMN")=DGF(.2403)
"RTN","DPTLK7",249,0)
 S:$G(DGF(.092))]"" DGR("POBCity")=DGF(.092)
"RTN","DPTLK7",250,0)
 S:$G(DGF(.093)) DGR("POBState")=$P($G(^DIC(5,DGF(.093),0)),"^",2)
"RTN","DPTLK7",251,0)
 S:$G(DGF(994))]"" DGR("MBI")=DGF(994)
"RTN","DPTLK7",252,0)
 S:$G(DGF(.131))]"" DGR("ResPhone")=DGF(.131)
"RTN","DPTLK7",253,0)
 S:$D(DGF("EDIPI")) DGR("EDIPI")=DGF("EDIPI")
"RTN","DPTLK7",254,0)
 ;
"RTN","DPTLK7",255,0)
 ; only include address if deliverable
"RTN","DPTLK7",256,0)
 I $G(DGF(.121))]"" D
"RTN","DPTLK7",257,0)
 . S:$G(DGF(.111))]"" DGR("ResAddL1")=DGF(.111)
"RTN","DPTLK7",258,0)
 . S:$G(DGF(.1112))]"" DGR("ResAddZip4")=DGF(.1112)
"RTN","DPTLK7",259,0)
 . S:$G(DGF(.112))]"" DGR("ResAddL2")=DGF(.112)
"RTN","DPTLK7",260,0)
 . S:$G(DGF(.113))]"" DGR("ResAddL3")=DGF(.113)
"RTN","DPTLK7",261,0)
 . S:$G(DGF(.114))]"" DGR("CITY")=DGF(.114)
"RTN","DPTLK7",262,0)
 . S:$P($G(DGF(.115)),"^",2) DGR("ResAddState")=$P($G(^DIC(5,$P(DGF(.115),"^",2),0)),"^",2)
"RTN","DPTLK7",263,0)
 . S:$G(DGF(.1171))]"" DGR("ResAddProvince")=DGF(.1171)
"RTN","DPTLK7",264,0)
 . S:$G(DGF(.1172))]"" DGR("ResAddPCode")=DGF(.1172)
"RTN","DPTLK7",265,0)
 . S:$P($G(DGF(.1173)),"^")]"" DGR("ResAddCountry")=$P(DGF(.1173),"^")
"RTN","DPTLK7",266,0)
 Q
"RTN","DPTLK7",267,0)
 ;
"RTN","DPTLK7",268,0)
FORMATR(DGF,DGM,DG20NAME) ; - merge MPI and user input (MPI authorative)
"RTN","DPTLK7",269,0)
 N DGX,DGY,DGZ
"RTN","DPTLK7",270,0)
 S DGX=$O(DGM(0)) Q:'DGX
"RTN","DPTLK7",271,0)
 S DG20NAME("FAMILY")=$G(DGM(DGX,"Surname"))
"RTN","DPTLK7",272,0)
 S DG20NAME("GIVEN")=$G(DGM(DGX,"FirstName"))
"RTN","DPTLK7",273,0)
 S DG20NAME("MIDDLE")=$G(DGM(DGX,"MiddleName"))
"RTN","DPTLK7",274,0)
 S DG20NAME("PREFIX")=$G(DGM(DGX,"Prefix"))
"RTN","DPTLK7",275,0)
 S DG20NAME("SUFFIX")=$G(DGM(DGX,"Suffix"))
"RTN","DPTLK7",276,0)
 S DG20NAME("DEGREE")=$G(DGM(DGX,"Degree"))
"RTN","DPTLK7",277,0)
 ;Reconstruct name
"RTN","DPTLK7",278,0)
 S DG20NAME=$$NAMEFMT^XLFNAME(.DG20NAME,"F","CFL30")
"RTN","DPTLK7",279,0)
 ;Format the .01 value
"RTN","DPTLK7",280,0)
 M DGY=DG20NAME
"RTN","DPTLK7",281,0)
 S DGF(.01)=$$FORMAT^XLFNAME7(.DGY,3,30,,2)
"RTN","DPTLK7",282,0)
 S DGF(.02)=$G(DGM(DGX,"Gender"))
"RTN","DPTLK7",283,0)
 S DGF(.03)=$G(DGM(DGX,"DOB"))
"RTN","DPTLK7",284,0)
 S DGF(.09)=$G(DGM(DGX,"SSN"))
"RTN","DPTLK7",285,0)
 S DGF(.2403)=$G(DGM(DGX,"MMN"))
"RTN","DPTLK7",286,0)
 S DGF(.092)=$G(DGM(DGX,"POBCity"))
"RTN","DPTLK7",287,0)
 S DGY=$S($G(DGM(DGX,"POBState"))]"":$O(^DIC(5,"C",DGM(DGX,"POBState"),0)),1:"")
"RTN","DPTLK7",288,0)
 S DGF(.093)=DGY
"RTN","DPTLK7",289,0)
 S:$G(DGM(DGX,"ResAddL1"))]"" DGF(.111)=DGM(DGX,"ResAddL1")
"RTN","DPTLK7",290,0)
 S:$G(DGM(DGX,"ResAddL2"))]"" DGF(.112)=DGM(DGX,"ResAddL2")
"RTN","DPTLK7",291,0)
 S:$G(DGM(DGX,"ResAddL3"))]"" DGF(.113)=DGM(DGX,"ResAddL3")
"RTN","DPTLK7",292,0)
 S:$G(DGM(DGX,"City"))]"" DGF(.114)=DGM(DGX,"City")
"RTN","DPTLK7",293,0)
 S:$G(DGM(DGX,"ResAddCity"))]"" DGF(.114)=DGM(DGX,"ResAddCity")
"RTN","DPTLK7",294,0)
 ;
"RTN","DPTLK7",295,0)
 S DGY=$S($G(DGM(DGX,"ResAddState"))]"":$O(^DIC(5,"C",DGM(DGX,"ResAddState"),0)),1:"")
"RTN","DPTLK7",296,0)
 S:DGY DGF(.115)=DGY
"RTN","DPTLK7",297,0)
 S DGY=$S($G(DGM(DGX,"Country"))]"":$O(^HL(779.004,"B",DGM(DGX,"Country"),0)),1:"")
"RTN","DPTLK7",298,0)
 S:DGY DGF(.1173)=DGY
"RTN","DPTLK7",299,0)
 S DGY=$S($G(DGM(DGX,"ResAddCountry"))]"":$O(^HL(779.004,"B",DGM(DGX,"ResAddCountry"),0)),1:"")
"RTN","DPTLK7",300,0)
 S:DGY DGF(.1173)=DGY
"RTN","DPTLK7",301,0)
 S:$G(DGM(DGX,"PCode"))]"" DGF(.1172)=DGM(DGX,"PCode")
"RTN","DPTLK7",302,0)
 S:$G(DGM(DGX,"ResAddPCode"))]"" DGF(.1172)=DGM(DGX,"ResAddPCode")
"RTN","DPTLK7",303,0)
 S:$G(DGM(DGX,"Province"))]"" DGF(.1171)=DGM(DGX,"Province")
"RTN","DPTLK7",304,0)
 S:$G(DGM(DGX,"ResAddProvince"))]"" DGF(.1171)=DGM(DGX,"ResAddProvince")
"RTN","DPTLK7",305,0)
 S:$G(DGM(DGX,"ResAddZip4"))]"" DGF(.1112)=DGM(DGX,"ResAddZip4")
"RTN","DPTLK7",306,0)
 S:$G(DGM(DGX,"ResPhone"))]"" DGF(.131)=DGM(DGX,"ResPhone")
"RTN","DPTLK7",307,0)
 I $G(DGF(.1112)) D
"RTN","DPTLK7",308,0)
 . N DGX,DGCNTY
"RTN","DPTLK7",309,0)
 . D POSTAL^XIPUTIL(DGF(.1112),.DGX)
"RTN","DPTLK7",310,0)
 . I $G(DGX("FIPS CODE"))]"",$G(DGX("STATE POINTER")) D
"RTN","DPTLK7",311,0)
 .. S DGCNTY=$$FIND1^DIC(5.01,","_DGX("STATE POINTER")_",","MOXQ",$E($G(DGX("FIPS CODE")),3,5),"C")
"RTN","DPTLK7",312,0)
 . I $D(DGCNTY) S DGF(.117)=DGCNTY
"RTN","DPTLK7",313,0)
 ; alias loop
"RTN","DPTLK7",314,0)
 S DGZ=0 F  S DGZ=$O(DGM(DGX,"ALIAS",DGZ)) Q:'DGZ  D
"RTN","DPTLK7",315,0)
 . N DGY,DG20NAME
"RTN","DPTLK7",316,0)
 . I $G(DGM(DGX,"ALIAS",DGZ,"Surname"))]"" D
"RTN","DPTLK7",317,0)
 .. S DG20NAME("FAMILY")=$G(DGM(DGX,"ALIAS",DGZ,"Surname"))
"RTN","DPTLK7",318,0)
 .. S DG20NAME("GIVEN")=$G(DGM(DGX,"ALIAS",DGZ,"FirstName"))
"RTN","DPTLK7",319,0)
 .. S DG20NAME("MIDDLE")=$G(DGM(DGX,"ALIAS",DGZ,"MiddleName"))
"RTN","DPTLK7",320,0)
 .. S DG20NAME("PREFIX")=$G(DGM(DGX,"ALIAS",DGZ,"Prefix"))
"RTN","DPTLK7",321,0)
 .. S DG20NAME("SUFFIX")=$G(DGM(DGX,"ALIAS",DGZ,"Suffix"))
"RTN","DPTLK7",322,0)
 .. S DG20NAME("DEGREE")=$G(DGM(DGX,"ALIAS",DGZ,"Degree"))
"RTN","DPTLK7",323,0)
 .. ;Reconstruct name
"RTN","DPTLK7",324,0)
 .. S DG20NAME=$$NAMEFMT^XLFNAME(.DG20NAME,"F","CFL30")
"RTN","DPTLK7",325,0)
 .. ;Format the .01 value
"RTN","DPTLK7",326,0)
 .. M DGY=DG20NAME
"RTN","DPTLK7",327,0)
 .. S DGF("ALIAS",DGZ,.01)=$$FORMAT^XLFNAME7(.DGY,3,30,,2)
"RTN","DPTLK7",328,0)
 . I $G(DGM(DGX,"ALIAS",DGZ,"SSN"))]"" S DGF("ALIAS",DGZ,1)=DGM(DGX,"ALIAS",DGZ,"SSN")
"RTN","DPTLK7",329,0)
 S:$G(DGM(DGX,"ICN"))]"" DGF("ICN")=DGM(DGX,"ICN")
"RTN","DPTLK7",330,0)
 ;
"RTN","DPTLK7",331,0)
 ; - hanle pseudo SSN
"RTN","DPTLK7",332,0)
 I $G(DGF(.09))'?9N S DGF(.09)=$$PSEUDO($G(DGF(.01)),$G(DGF(.03)))
"RTN","DPTLK7",333,0)
 ;
"RTN","DPTLK7",334,0)
 Q
"RTN","DPTLK7",335,0)
ADD(DGF,DG20NAME) ; - stuff in patient
"RTN","DPTLK7",336,0)
 ; Pass in the fields to set in the DGF array.
"RTN","DPTLK7",337,0)
 ; Alaso Name components in DG20NAME array.  Returns new DFN
"RTN","DPTLK7",338,0)
 N X,Y,SAVY,FDA,IEN,DATA,DO,DIC,DA,X,DLAYGO,REQ,VAFCNO,DGY,DPTX
"RTN","DPTLK7",339,0)
 I $E($G(DGF(.09)),1,9)'?9N S DGF(.09)=$$PSEUDO(DGF(.01),$G(DGF(.03)))
"RTN","DPTLK7",340,0)
 ; check for SSN already exist
"RTN","DPTLK7",341,0)
 S DGY=$O(^DPT("SSN",DGF(.09),0)) I DGY>0,$D(^DPT(DGY,0)) W *7,"  SSN Already used by patient '",$P(^(0),"^"),"'." Q 0
"RTN","DPTLK7",342,0)
 ;
"RTN","DPTLK7",343,0)
 S DIC("DR")="",REQ="^.02^.03^.09^"
"RTN","DPTLK7",344,0)
 S DGF=.01 F  S DGF=$O(DGF(DGF)) Q:'DGF  D
"RTN","DPTLK7",345,0)
 . ; if the data has a second piece, then that's internal value to use
"RTN","DPTLK7",346,0)
 . S DATA=$S($P(DGF(DGF),"^",2):$P(DGF(DGF),"^",2),1:DGF(DGF))
"RTN","DPTLK7",347,0)
 . I DATA]""!(REQ[("^"_DGF_"^")) S DIC("DR")=DIC("DR")_DGF_$S(DATA]"":"////"_DATA,1:"")_";"
"RTN","DPTLK7",348,0)
 ; patient type
"RTN","DPTLK7",349,0)
 S DIC("DR")=DIC("DR")_"391///"_$O(^DG(391,"B","NSC VETERAN",0))_";"
"RTN","DPTLK7",350,0)
 ; veteran
"RTN","DPTLK7",351,0)
 S DIC("DR")=DIC("DR")_"1901///Y;"
"RTN","DPTLK7",352,0)
 ; SC
"RTN","DPTLK7",353,0)
 S DIC("DR")=DIC("DR")_".301///N;"
"RTN","DPTLK7",354,0)
 ; date added
"RTN","DPTLK7",355,0)
 S DIC("DR")=DIC("DR")_".097////"_DT
"RTN","DPTLK7",356,0)
 ; who added
"RTN","DPTLK7",357,0)
 S:$G(DUZ) DIC("DR")=DIC("DR")_";.096////"_DUZ
"RTN","DPTLK7",358,0)
 ;
"RTN","DPTLK7",359,0)
 S X=DGF(.01),DIC="^DPT(",DIC(0)="L",DLAYGO=2,VAFCNO=1
"RTN","DPTLK7",360,0)
 D FILE^DICN
"RTN","DPTLK7",361,0)
 S SAVY=+Y
"RTN","DPTLK7",362,0)
 ;
"RTN","DPTLK7",363,0)
 ; alias
"RTN","DPTLK7",364,0)
 S X=0 F  S X=$O(DGF("ALIAS",X)) Q:'X  D
"RTN","DPTLK7",365,0)
 . S DGF=0 F  S DGF=$O(DGF("ALIAS",X,DGF)) Q:'DGF  D
"RTN","DPTLK7",366,0)
 .. S FDA(2.01,"+"_X_","_SAVY_",",.01)=DGF("ALIAS",X,.01)
"RTN","DPTLK7",367,0)
 .. S:DGF("ALIAS",X,1)]"" FDA(2.01,"+"_X_","_SAVY_",",1)=DGF("ALIAS",X,1)
"RTN","DPTLK7",368,0)
 ;
"RTN","DPTLK7",369,0)
 I $D(FDA) D
"RTN","DPTLK7",370,0)
 . N DG20NAME
"RTN","DPTLK7",371,0)
 . D UPDATE^DIE("","FDA")
"RTN","DPTLK7",372,0)
 ;
"RTN","DPTLK7",373,0)
 ; send bulletin new patient added to system
"RTN","DPTLK7",374,0)
 I SAVY>0 D BULL(SAVY)
"RTN","DPTLK7",375,0)
 ;
"RTN","DPTLK7",376,0)
 Q SAVY
"RTN","DPTLK7",377,0)
 ;
"RTN","DPTLK7",378,0)
ADDREQ(DGFLDS) ; - determine if enough address data entered
"RTN","DPTLK7",379,0)
 ; returns OK to proceed (1) or not (0)
"RTN","DPTLK7",380,0)
 N DGOK,FIELD
"RTN","DPTLK7",381,0)
 S DGOK=1
"RTN","DPTLK7",382,0)
 ; is US or foreign
"RTN","DPTLK7",383,0)
 I $$FOR^DGADDUTL($P(DGFLDS(.1173),"^")) D
"RTN","DPTLK7",384,0)
 . F FIELD=.111,.114,.1171,.1172 S:$G(DGFLDS(FIELD))']"" DGOK=0
"RTN","DPTLK7",385,0)
 E  F FIELD=.111,.1112,.114,.115 S:$G(DGFLDS(FIELD))']"" DGOK=0
"RTN","DPTLK7",386,0)
 I $L($G(DGFLDS(.131))) S DGOK=1
"RTN","DPTLK7",387,0)
 Q DGOK
"RTN","DPTLK7",388,0)
 ;
"RTN","DPTLK7",389,0)
PSEUDO(NAM,DOB) ; - return pseudo ssn
"RTN","DPTLK7",390,0)
 N L1,L2,L3,Z
"RTN","DPTLK7",391,0)
 S NAM=$G(DGF(.01)),DOB=$G(DGF(.03))
"RTN","DPTLK7",392,0)
 I DOB="" S DOB=2000000
"RTN","DPTLK7",393,0)
 S L1=$E($P(NAM," ",2),1),L3=$E(NAM,1),NAM=$P(NAM,",",2),L2=$E(NAM,1)
"RTN","DPTLK7",394,0)
 S Z=L1 D CON^DGRPDD1 S L1=Z,Z=L2 D CON^DGRPDD1
"RTN","DPTLK7",395,0)
 S L2=Z,Z=L3 D CON^DGRPDD1 S L3=Z
"RTN","DPTLK7",396,0)
 Q L2_L1_L3_$E(DOB,4,7)_$E(DOB,2,3)_"P"
"RTN","DPTLK7",397,0)
 ;
"RTN","DPTLK7",398,0)
BULL(SAVY) ; - send bulletin that new patient added
"RTN","DPTLK7",399,0)
 N DGTEXT,DGNAM,DGSSN,DGDOB,DGB,DGZ
"RTN","DPTLK7",400,0)
 S DGB=2
"RTN","DPTLK7",401,0)
 S DGZ=$G(^DPT(SAVY,0))
"RTN","DPTLK7",402,0)
 S DGNAM=$P(DGZ,"^"),DGSSN=$P(DGZ,"^",9),DGDOB=$P(DGZ,"^",3)
"RTN","DPTLK7",403,0)
 S DGSSN=$E(DGSSN,1,3)_"-"_$E(DGSSN,4,5)_"-"_$E(DGSSN,6,10)
"RTN","DPTLK7",404,0)
 S DGDOB=$$FMTE^XLFDT(DGDOB)
"RTN","DPTLK7",405,0)
 S XMSUB="NEW PATIENT ADDED TO SYSTEM"
"RTN","DPTLK7",406,0)
 S DGTEXT(1,0)="NAME:  "_DGNAM
"RTN","DPTLK7",407,0)
 S DGTEXT(2,0)="SSN :  "_DGSSN
"RTN","DPTLK7",408,0)
 S DGTEXT(3,0)="DOB :  "_DGDOB
"RTN","DPTLK7",409,0)
 D ^DGBUL
"RTN","DPTLK7",410,0)
 Q
"VER")
8.0^22.0
"BLD",3146,6)
^810
**END**
**END**

