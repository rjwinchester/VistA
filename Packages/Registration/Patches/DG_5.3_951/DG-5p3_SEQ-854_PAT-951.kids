EMERGENCY Released DG*5.3*951 SEQ #854
Extracted from mail message
**KIDS**:DG*5.3*951^

**INSTALL NAME**
DG*5.3*951
"BLD",10231,0)
DG*5.3*951^REGISTRATION^0^3190205^y
"BLD",10231,1,0)
^^22^22^3190130^^^^
"BLD",10231,1,1,0)
This patch addresses enhancements to Patient Record Flags (PRF) to 
"BLD",10231,1,2,0)
improve the delivery of targeted Mental Health care for individuals at 
"BLD",10231,1,3,0)
high risk for suicide.
"BLD",10231,1,4,0)
 
"BLD",10231,1,5,0)
Enhancements to PRF reports were made to improve effective management of 
"BLD",10231,1,6,0)
coordination of care for high risk individuals and to include new data 
"BLD",10231,1,7,0)
elements introduced with this patch.
"BLD",10231,1,8,0)
 
"BLD",10231,1,9,0)
1. The Disruptive Behavior Reporting System (DBRS) record numbers are now 
"BLD",10231,1,10,0)
recorded in the PRF FileMan files to enable a convenient reference 
"BLD",10231,1,11,0)
between VistA and DBRS.
"BLD",10231,1,12,0)
 
"BLD",10231,1,13,0)
2. Modification to support TIU/CPRS Progress Note Properties' action list 
"BLD",10231,1,14,0)
functionality. 
"BLD",10231,1,15,0)
 
"BLD",10231,1,16,0)
3. Enhancements to PRF flags ownership transfers. The patch implements 
"BLD",10231,1,17,0)
new functionality and makes modification to existing code to improve the 
"BLD",10231,1,18,0)
process of ownership transfer and eliminate issues reported by PRF users. 
"BLD",10231,1,19,0)
 
"BLD",10231,1,20,0)
4. Various enhancements and fixes related to PRF flag HL7 transmissions 
"BLD",10231,1,21,0)
 
"BLD",10231,1,22,0)
Please see the patch description of the patch in FORUM for details.
"BLD",10231,4,0)
^9.64PA^26.22^3
"BLD",10231,4,26.13,0)
26.13
"BLD",10231,4,26.13,2,0)
^9.641^26.131^1
"BLD",10231,4,26.13,2,26.131,0)
DBRS NUMBER  (sub-file)
"BLD",10231,4,26.13,2,26.131,1,0)
^9.6411^^
"BLD",10231,4,26.13,222)
y^n^p^^^^n^^n
"BLD",10231,4,26.13,224)

"BLD",10231,4,26.14,0)
26.14
"BLD",10231,4,26.14,2,0)
^9.641^26.142^2
"BLD",10231,4,26.14,2,26.14,0)
PRF ASSIGNMENT HISTORY  (File-top level)
"BLD",10231,4,26.14,2,26.14,1,0)
^9.6411^.09^3
"BLD",10231,4,26.14,2,26.14,1,.01,0)
PRF ASSIGNMENT
"BLD",10231,4,26.14,2,26.14,1,.03,0)
ACTION
"BLD",10231,4,26.14,2,26.14,1,.09,0)
CREATED BY SITE
"BLD",10231,4,26.14,2,26.142,0)
DBRS NUMBER  (sub-file)
"BLD",10231,4,26.14,2,26.142,1,0)
^9.6411^^
"BLD",10231,4,26.14,222)
y^n^p^^^^n^^n
"BLD",10231,4,26.14,224)

"BLD",10231,4,26.22,0)
26.22
"BLD",10231,4,26.22,222)
y^y^f^^^^n
"BLD",10231,4,"APDD",26.13,26.131)

"BLD",10231,4,"APDD",26.14,26.14)

"BLD",10231,4,"APDD",26.14,26.14,.01)

"BLD",10231,4,"APDD",26.14,26.14,.03)

"BLD",10231,4,"APDD",26.14,26.14,.09)

"BLD",10231,4,"APDD",26.14,26.142)

"BLD",10231,4,"B",26.13,26.13)

"BLD",10231,4,"B",26.14,26.14)

"BLD",10231,4,"B",26.22,26.22)

"BLD",10231,6)
25^
"BLD",10231,6.3)
135
"BLD",10231,"ABPKG")
n
"BLD",10231,"INID")
^n
"BLD",10231,"INIT")
EN^DG53P951
"BLD",10231,"KRN",0)
^9.67PA^779.2^20
"BLD",10231,"KRN",.4,0)
.4
"BLD",10231,"KRN",.401,0)
.401
"BLD",10231,"KRN",.402,0)
.402
"BLD",10231,"KRN",.403,0)
.403
"BLD",10231,"KRN",.5,0)
.5
"BLD",10231,"KRN",.84,0)
.84
"BLD",10231,"KRN",3.6,0)
3.6
"BLD",10231,"KRN",3.8,0)
3.8
"BLD",10231,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",10231,"KRN",3.8,"NM",1,0)
DGPF PRF TRANSFER REQUESTS^^0
"BLD",10231,"KRN",3.8,"NM","B","DGPF PRF TRANSFER REQUESTS",1)

"BLD",10231,"KRN",9.2,0)
9.2
"BLD",10231,"KRN",9.8,0)
9.8
"BLD",10231,"KRN",9.8,"NM",0)
^9.68A^41^41
"BLD",10231,"KRN",9.8,"NM",1,0)
DGPFDBRS^^0^B1824667
"BLD",10231,"KRN",9.8,"NM",2,0)
DGPFLMA2^^0^B95827931
"BLD",10231,"KRN",9.8,"NM",3,0)
DGPFLMA3^^0^B115226280
"BLD",10231,"KRN",9.8,"NM",4,0)
DGPFAA^^0^B81848262
"BLD",10231,"KRN",9.8,"NM",5,0)
DGPFAA1^^0^B1552435
"BLD",10231,"KRN",9.8,"NM",6,0)
DGPFAAH^^0^B57134079
"BLD",10231,"KRN",9.8,"NM",7,0)
DGPFAAH1^^0^B1497249
"BLD",10231,"KRN",9.8,"NM",8,0)
DGPFUT^^0^B65688898
"BLD",10231,"KRN",9.8,"NM",9,0)
DGPFUT3^^0^B43190610
"BLD",10231,"KRN",9.8,"NM",10,0)
DGPFUT4^^0^B49462470
"BLD",10231,"KRN",9.8,"NM",11,0)
DGPFUT6^^0^B4892495
"BLD",10231,"KRN",9.8,"NM",12,0)
DGPFLMA5^^0^B26946927
"BLD",10231,"KRN",9.8,"NM",13,0)
DGPFAPI1^^0^B27698774
"BLD",10231,"KRN",9.8,"NM",14,0)
DGPFUT61^^0^B148565711
"BLD",10231,"KRN",9.8,"NM",15,0)
DGPFUT62^^0^B53001893
"BLD",10231,"KRN",9.8,"NM",16,0)
DGPFHLUT^^0^B64018223
"BLD",10231,"KRN",9.8,"NM",17,0)
DGPFHLU1^^0^B6628832
"BLD",10231,"KRN",9.8,"NM",18,0)
DGPFHLU2^^0^B25225629
"BLD",10231,"KRN",9.8,"NM",19,0)
DGPFHLU3^^0^B31602328
"BLD",10231,"KRN",9.8,"NM",20,0)
DGPFHLU4^^0^B17533287
"BLD",10231,"KRN",9.8,"NM",21,0)
DGPFHLQ4^^0^B34191835
"BLD",10231,"KRN",9.8,"NM",22,0)
DGPFHLQ^^0^B53156618
"BLD",10231,"KRN",9.8,"NM",23,0)
DGPFHLU^^0^B54583242
"BLD",10231,"KRN",9.8,"NM",24,0)
DGPFHLR^^0^B124847191
"BLD",10231,"KRN",9.8,"NM",25,0)
DGPFAA3^^0^B37090841
"BLD",10231,"KRN",9.8,"NM",26,0)
DGPFLMU1^^0^B57734763
"BLD",10231,"KRN",9.8,"NM",27,0)
DGPFHLT^^0^B17377719
"BLD",10231,"KRN",9.8,"NM",28,0)
DGPFHLT1^^0^B83307291
"BLD",10231,"KRN",9.8,"NM",29,0)
DGPFHLT2^^0^B13087829
"BLD",10231,"KRN",9.8,"NM",30,0)
DGPFHLTM^^0^B17001676
"BLD",10231,"KRN",9.8,"NM",31,0)
DGPFHLT3^^0^B17764072
"BLD",10231,"KRN",9.8,"NM",32,0)
DGPFTR^^0^B25361396
"BLD",10231,"KRN",9.8,"NM",33,0)
DGPFTR1^^0^B75593234
"BLD",10231,"KRN",9.8,"NM",34,0)
DGPFHLT4^^0^B1707116
"BLD",10231,"KRN",9.8,"NM",35,0)
DGPFAA2^^0^B33264279
"BLD",10231,"KRN",9.8,"NM",36,0)
DGPFRDB^^0^B2814866
"BLD",10231,"KRN",9.8,"NM",37,0)
DGPFRDB1^^0^B36629736
"BLD",10231,"KRN",9.8,"NM",38,0)
DGPFUT64^^0^B9605992
"BLD",10231,"KRN",9.8,"NM",39,0)
DGPFLMA4^^0^B45697880
"BLD",10231,"KRN",9.8,"NM",40,0)
DGPFHLF^^0^B68443058
"BLD",10231,"KRN",9.8,"NM",41,0)
DG53P951^^0^B177935300
"BLD",10231,"KRN",9.8,"NM","B","DG53P951",41)

"BLD",10231,"KRN",9.8,"NM","B","DGPFAA",4)

"BLD",10231,"KRN",9.8,"NM","B","DGPFAA1",5)

"BLD",10231,"KRN",9.8,"NM","B","DGPFAA2",35)

"BLD",10231,"KRN",9.8,"NM","B","DGPFAA3",25)

"BLD",10231,"KRN",9.8,"NM","B","DGPFAAH",6)

"BLD",10231,"KRN",9.8,"NM","B","DGPFAAH1",7)

"BLD",10231,"KRN",9.8,"NM","B","DGPFAPI1",13)

"BLD",10231,"KRN",9.8,"NM","B","DGPFDBRS",1)

"BLD",10231,"KRN",9.8,"NM","B","DGPFHLF",40)

"BLD",10231,"KRN",9.8,"NM","B","DGPFHLQ",22)

"BLD",10231,"KRN",9.8,"NM","B","DGPFHLQ4",21)

"BLD",10231,"KRN",9.8,"NM","B","DGPFHLR",24)

"BLD",10231,"KRN",9.8,"NM","B","DGPFHLT",27)

"BLD",10231,"KRN",9.8,"NM","B","DGPFHLT1",28)

"BLD",10231,"KRN",9.8,"NM","B","DGPFHLT2",29)

"BLD",10231,"KRN",9.8,"NM","B","DGPFHLT3",31)

"BLD",10231,"KRN",9.8,"NM","B","DGPFHLT4",34)

"BLD",10231,"KRN",9.8,"NM","B","DGPFHLTM",30)

"BLD",10231,"KRN",9.8,"NM","B","DGPFHLU",23)

"BLD",10231,"KRN",9.8,"NM","B","DGPFHLU1",17)

"BLD",10231,"KRN",9.8,"NM","B","DGPFHLU2",18)

"BLD",10231,"KRN",9.8,"NM","B","DGPFHLU3",19)

"BLD",10231,"KRN",9.8,"NM","B","DGPFHLU4",20)

"BLD",10231,"KRN",9.8,"NM","B","DGPFHLUT",16)

"BLD",10231,"KRN",9.8,"NM","B","DGPFLMA2",2)

"BLD",10231,"KRN",9.8,"NM","B","DGPFLMA3",3)

"BLD",10231,"KRN",9.8,"NM","B","DGPFLMA4",39)

"BLD",10231,"KRN",9.8,"NM","B","DGPFLMA5",12)

"BLD",10231,"KRN",9.8,"NM","B","DGPFLMU1",26)

"BLD",10231,"KRN",9.8,"NM","B","DGPFRDB",36)

"BLD",10231,"KRN",9.8,"NM","B","DGPFRDB1",37)

"BLD",10231,"KRN",9.8,"NM","B","DGPFTR",32)

"BLD",10231,"KRN",9.8,"NM","B","DGPFTR1",33)

"BLD",10231,"KRN",9.8,"NM","B","DGPFUT",8)

"BLD",10231,"KRN",9.8,"NM","B","DGPFUT3",9)

"BLD",10231,"KRN",9.8,"NM","B","DGPFUT4",10)

"BLD",10231,"KRN",9.8,"NM","B","DGPFUT6",11)

"BLD",10231,"KRN",9.8,"NM","B","DGPFUT61",14)

"BLD",10231,"KRN",9.8,"NM","B","DGPFUT62",15)

"BLD",10231,"KRN",9.8,"NM","B","DGPFUT64",38)

"BLD",10231,"KRN",19,0)
19
"BLD",10231,"KRN",19,"NM",0)
^9.68A^5^5
"BLD",10231,"KRN",19,"NM",1,0)
DGPF PRF TRANSFER REQUESTS^^0
"BLD",10231,"KRN",19,"NM",2,0)
DGPF RECORD FLAGS MAIN MENU^^2
"BLD",10231,"KRN",19,"NM",3,0)
DGPF DISRUPT BEHAVIOR REPORT^^0
"BLD",10231,"KRN",19,"NM",4,0)
DGPF RECORD FLAG REPORTS MENU^^2
"BLD",10231,"KRN",19,"NM",5,0)
DGPF RECORD REFRESH^^0
"BLD",10231,"KRN",19,"NM","B","DGPF DISRUPT BEHAVIOR REPORT",3)

"BLD",10231,"KRN",19,"NM","B","DGPF PRF TRANSFER REQUESTS",1)

"BLD",10231,"KRN",19,"NM","B","DGPF RECORD FLAG REPORTS MENU",4)

"BLD",10231,"KRN",19,"NM","B","DGPF RECORD FLAGS MAIN MENU",2)

"BLD",10231,"KRN",19,"NM","B","DGPF RECORD REFRESH",5)

"BLD",10231,"KRN",19.1,0)
19.1
"BLD",10231,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",10231,"KRN",101,0)
101
"BLD",10231,"KRN",101,"NM",0)
^9.68A^11^11
"BLD",10231,"KRN",101,"NM",1,0)
DGPF RECORD FLAG ASSIGNMENT MENU^^2
"BLD",10231,"KRN",101,"NM",2,0)
DGPF TRANSFER FLAG^^0
"BLD",10231,"KRN",101,"NM",3,0)
DGPF PRF QBP/Q11 EVENT^^0
"BLD",10231,"KRN",101,"NM",4,0)
DGPF PRF RSP/K11 SUBSC^^0
"BLD",10231,"KRN",101,"NM",5,0)
DGPF PRF TR REQ MENU^^0
"BLD",10231,"KRN",101,"NM",6,0)
DGPF PRF TR REQ REVIEW^^0
"BLD",10231,"KRN",101,"NM",7,0)
DGPF PRF TR REQ CHANGE VIEW^^0
"BLD",10231,"KRN",101,"NM",8,0)
DGPF PRF TR REQ DETAILS^^0
"BLD",10231,"KRN",101,"NM",9,0)
VALM QUIT^^0
"BLD",10231,"KRN",101,"NM",10,0)
DGPF PRF QBP/Q11 SUBSC^^0
"BLD",10231,"KRN",101,"NM",11,0)
DGPF PRF RSP/K11 EVENT^^0
"BLD",10231,"KRN",101,"NM","B","DGPF PRF QBP/Q11 EVENT",3)

"BLD",10231,"KRN",101,"NM","B","DGPF PRF QBP/Q11 SUBSC",10)

"BLD",10231,"KRN",101,"NM","B","DGPF PRF RSP/K11 EVENT",11)

"BLD",10231,"KRN",101,"NM","B","DGPF PRF RSP/K11 SUBSC",4)

"BLD",10231,"KRN",101,"NM","B","DGPF PRF TR REQ CHANGE VIEW",7)

"BLD",10231,"KRN",101,"NM","B","DGPF PRF TR REQ DETAILS",8)

"BLD",10231,"KRN",101,"NM","B","DGPF PRF TR REQ MENU",5)

"BLD",10231,"KRN",101,"NM","B","DGPF PRF TR REQ REVIEW",6)

"BLD",10231,"KRN",101,"NM","B","DGPF RECORD FLAG ASSIGNMENT MENU",1)

"BLD",10231,"KRN",101,"NM","B","DGPF TRANSFER FLAG",2)

"BLD",10231,"KRN",101,"NM","B","VALM QUIT",9)

"BLD",10231,"KRN",409.61,0)
409.61
"BLD",10231,"KRN",409.61,"NM",0)
^9.68A^1^1
"BLD",10231,"KRN",409.61,"NM",1,0)
DGPF PRF TRANSFER REQUESTS^^0
"BLD",10231,"KRN",409.61,"NM","B","DGPF PRF TRANSFER REQUESTS",1)

"BLD",10231,"KRN",771,0)
771
"BLD",10231,"KRN",771,"NM",0)
^9.68A^2^2
"BLD",10231,"KRN",771,"NM",1,0)
PRF-TRANS-REQ^^0
"BLD",10231,"KRN",771,"NM",2,0)
PRF-TRANS-RESP^^0
"BLD",10231,"KRN",771,"NM","B","PRF-TRANS-REQ",1)

"BLD",10231,"KRN",771,"NM","B","PRF-TRANS-RESP",2)

"BLD",10231,"KRN",779.2,0)
779.2
"BLD",10231,"KRN",870,0)
870
"BLD",10231,"KRN",8989.51,0)
8989.51
"BLD",10231,"KRN",8989.52,0)
8989.52
"BLD",10231,"KRN",8994,0)
8994
"BLD",10231,"KRN","B",.4,.4)

"BLD",10231,"KRN","B",.401,.401)

"BLD",10231,"KRN","B",.402,.402)

"BLD",10231,"KRN","B",.403,.403)

"BLD",10231,"KRN","B",.5,.5)

"BLD",10231,"KRN","B",.84,.84)

"BLD",10231,"KRN","B",3.6,3.6)

"BLD",10231,"KRN","B",3.8,3.8)

"BLD",10231,"KRN","B",9.2,9.2)

"BLD",10231,"KRN","B",9.8,9.8)

"BLD",10231,"KRN","B",19,19)

"BLD",10231,"KRN","B",19.1,19.1)

"BLD",10231,"KRN","B",101,101)

"BLD",10231,"KRN","B",409.61,409.61)

"BLD",10231,"KRN","B",771,771)

"BLD",10231,"KRN","B",779.2,779.2)

"BLD",10231,"KRN","B",870,870)

"BLD",10231,"KRN","B",8989.51,8989.51)

"BLD",10231,"KRN","B",8989.52,8989.52)

"BLD",10231,"KRN","B",8994,8994)

"BLD",10231,"QDEF")
^^^^NO^^^^YES^^YES
"BLD",10231,"QUES",0)
^9.62^^
"BLD",10231,"REQB",0)
^9.611^3^3
"BLD",10231,"REQB",1,0)
DG*5.3*864^2
"BLD",10231,"REQB",2,0)
DG*5.3*921^2
"BLD",10231,"REQB",3,0)
DG*5.3*911^2
"BLD",10231,"REQB","B","DG*5.3*864",1)

"BLD",10231,"REQB","B","DG*5.3*911",3)

"BLD",10231,"REQB","B","DG*5.3*921",2)

"FIA",26.13)
PRF ASSIGNMENT
"FIA",26.13,0)
^DGPF(26.13,
"FIA",26.13,0,0)
26.13PI
"FIA",26.13,0,1)
y^n^p^^^^n^^n
"FIA",26.13,0,10)

"FIA",26.13,0,11)

"FIA",26.13,0,"RLRO")

"FIA",26.13,0,"VR")
5.3^DG
"FIA",26.13,26.13)
1
"FIA",26.13,26.13,2)

"FIA",26.13,26.131)
0
"FIA",26.14)
PRF ASSIGNMENT HISTORY
"FIA",26.14,0)
^DGPF(26.14,
"FIA",26.14,0,0)
26.14IP
"FIA",26.14,0,1)
y^n^p^^^^n^^n
"FIA",26.14,0,10)

"FIA",26.14,0,11)

"FIA",26.14,0,"RLRO")

"FIA",26.14,0,"VR")
5.3^DG
"FIA",26.14,26.14)
1
"FIA",26.14,26.14,.01)

"FIA",26.14,26.14,.03)

"FIA",26.14,26.14,.09)

"FIA",26.14,26.14,2)

"FIA",26.14,26.142)
0
"FIA",26.22)
PRF HL7 REQUEST LOG
"FIA",26.22,0)
^DGPF(26.22,
"FIA",26.22,0,0)
26.22D
"FIA",26.22,0,1)
y^y^f^^^^n
"FIA",26.22,0,10)

"FIA",26.22,0,11)

"FIA",26.22,0,"RLRO")

"FIA",26.22,0,"VR")
5.3^DG
"FIA",26.22,26.22)
0
"INIT")
EN^DG53P951
"IX",26.13,26.13,"DBRS",0)
26.13^DBRS^Index entire file by DBRS#^R^^F^IR^W^26.131^^^^^LS
"IX",26.13,26.13,"DBRS",.1,0)
^^2^2^3180712^
"IX",26.13,26.13,"DBRS",.1,1,0)
This index is used by a KEY to ensure that a DBRS Number is entered once 
"IX",26.13,26.13,"DBRS",.1,2,0)
and only once in this VistA System.
"IX",26.13,26.13,"DBRS",1)
S ^DGPF(26.13,"DBRS",$E(X,1,30),DA(1),DA)=""
"IX",26.13,26.13,"DBRS",2)
K ^DGPF(26.13,"DBRS",$E(X,1,30),DA(1),DA)
"IX",26.13,26.13,"DBRS",2.5)
K ^DGPF(26.13,"DBRS")
"IX",26.13,26.13,"DBRS",11.1,0)
^.114IA^1^1
"IX",26.13,26.13,"DBRS",11.1,1,0)
1^F^26.131^.01^30^1^F
"IX",26.13,26.13,"DBRS",11.1,1,3)

"IX",26.13,26.13,"DBRS","NOREINDEX")
0
"IX",26.14,26.14,"APPRO",0)
26.14^APPRO^This is a regular index on the APPROVED BY and PRF ASSIGNMENT fields.^R^^R^IR^I^26.14^^^^^S
"IX",26.14,26.14,"APPRO",1)
S ^DGPF(26.14,"APPRO",X(1),X(2),DA)=""
"IX",26.14,26.14,"APPRO",2)
K ^DGPF(26.14,"APPRO",X(1),X(2),DA)
"IX",26.14,26.14,"APPRO",2.5)
K ^DGPF(26.14,"APPRO")
"IX",26.14,26.14,"APPRO",11.1,0)
^.114IA^2^2
"IX",26.14,26.14,"APPRO",11.1,1,0)
1^F^26.14^.05^^1^F
"IX",26.14,26.14,"APPRO",11.1,1,3)

"IX",26.14,26.14,"APPRO",11.1,2,0)
2^F^26.14^.01^^2^F
"IX",26.14,26.14,"APPRO",11.1,2,3)

"IX",26.14,26.14,"C",0)
26.14^C^This is a regular index on the PRF ASSIGNMENT & DATE/TIME FIELDS.^R^^R^IR^I^26.14^^^^^LS
"IX",26.14,26.14,"C",1)
S ^DGPF(26.14,"C",X(1),X(2),DA)=""
"IX",26.14,26.14,"C",2)
K ^DGPF(26.14,"C",X(1),X(2),DA)
"IX",26.14,26.14,"C",2.5)
K ^DGPF(26.14,"C")
"IX",26.14,26.14,"C",11.1,0)
^.114IA^2^2
"IX",26.14,26.14,"C",11.1,1,0)
1^F^26.14^.01^^1^F
"IX",26.14,26.14,"C",11.1,2,0)
2^F^26.14^.02^^2^F
"IX",26.22,26.22,"C",0)
26.22^C^index by query id^R^^F^IR^I^26.22^^^^^LS
"IX",26.22,26.22,"C",1)
S ^DGPF(26.22,"C",$E(X,1,30),DA)=""
"IX",26.22,26.22,"C",2)
K ^DGPF(26.22,"C",$E(X,1,30),DA)
"IX",26.22,26.22,"C",2.5)
K ^DGPF(26.22,"C")
"IX",26.22,26.22,"C",11.1,0)
^.114IA^1^1
"IX",26.22,26.22,"C",11.1,1,0)
1^F^26.22^.08^30^1^F
"IX",26.22,26.22,"C",11.1,1,3)

"IX",26.22,26.22,"D",0)
26.22^D^index by patient, PRF flag, status, request date/time^R^^R^IR^I^26.22^^^^^LS
"IX",26.22,26.22,"D",.1,0)
^^2^2^3180517^
"IX",26.22,26.22,"D",.1,1,0)
This index is used by DGPF PRF TRANSFER REQUESTS option, it allows users 
"IX",26.22,26.22,"D",.1,2,0)
to specify a subset of entries they wish to work with.
"IX",26.22,26.22,"D",1)
S ^DGPF(26.22,"D",$E(X(1),1,30),$E(X(2),1,30),$E(X(3),1,30),$E(X(4),1,30),DA)=""
"IX",26.22,26.22,"D",2)
K ^DGPF(26.22,"D",$E(X(1),1,30),$E(X(2),1,30),$E(X(3),1,30),$E(X(4),1,30),DA)
"IX",26.22,26.22,"D",2.5)
K ^DGPF(26.22,"D")
"IX",26.22,26.22,"D",11.1,0)
^.114IA^4^4
"IX",26.22,26.22,"D",11.1,1,0)
1^F^26.22^.03^30^1^F
"IX",26.22,26.22,"D",11.1,2,0)
2^F^26.22^.04^30^2^F
"IX",26.22,26.22,"D",11.1,3,0)
3^F^26.22^.05^30^3^F
"IX",26.22,26.22,"D",11.1,4,0)
4^F^26.22^.01^30^4^F
"KRN",3.8,445,-1)
0^1
"KRN",3.8,445,0)
DGPF PRF TRANSFER REQUESTS^PU^n^^^^
"KRN",3.8,445,2,0)
^3.801^2^2^3180730^^^
"KRN",3.8,445,2,1,0)
This is the mail group for individuals authorized to approve/reject
"KRN",3.8,445,2,2,0)
requests for active national (Cat I) PRF flag ownership transfer.
"KRN",3.8,445,3)

"KRN",3.8,445,5,0)
^3.811P
"KRN",19,12394,-1)
2^4
"KRN",19,12394,0)
DGPF RECORD FLAG REPORTS MENU^Record Flag Reports Menu^^M^10000000020^^^^^^^114^y^^
"KRN",19,12394,10,0)
^19.01IP^10^10
"KRN",19,12394,10,10,0)
14670^DBR^7
"KRN",19,12394,10,10,"^")
DGPF DISRUPT BEHAVIOR REPORT
"KRN",19,12394,"U")
RECORD FLAG REPORTS MENU
"KRN",19,12398,-1)
2^2
"KRN",19,12398,0)
DGPF RECORD FLAGS MAIN MENU^Patient Record Flags Main Menu^^M^10000000020^^^^^^^114
"KRN",19,12398,10,0)
^19.01IP^7^7
"KRN",19,12398,10,2,0)
12394^RM^10
"KRN",19,12398,10,2,"^")
DGPF RECORD FLAG REPORTS MENU
"KRN",19,12398,10,7,0)
14650^TR^60
"KRN",19,12398,10,7,"^")
DGPF PRF TRANSFER REQUESTS
"KRN",19,12398,"U")
PATIENT RECORD FLAGS MAIN MENU
"KRN",19,14650,-1)
0^1
"KRN",19,14650,0)
DGPF PRF TRANSFER REQUESTS^Record Flag Transfer Requests^^R^^DGPF ASSIGNMENT^^^^^^REGISTRATION
"KRN",19,14650,1,0)
^^3^3^3180509^
"KRN",19,14650,1,1,0)
This option provides a List Manager screen for viewing patient record 
"KRN",19,14650,1,2,0)
flag ownership transfer requests. In addition to that, it provides the 
"KRN",19,14650,1,3,0)
ability to review and approve / reject any pending transfer requests.
"KRN",19,14650,25)
EN^DGPFTR
"KRN",19,14650,"U")
RECORD FLAG TRANSFER REQUESTS
"KRN",19,14670,-1)
0^3
"KRN",19,14670,0)
DGPF DISRUPT BEHAVIOR REPORT^Behavioral PRF Disruptive Behavior Data Report^^R^^^^^^^^REGISTRATION^y
"KRN",19,14670,1,0)
^^6^6^3180919^
"KRN",19,14670,1,1,0)
For national Behavioral Flags, one may associate a Disruptive Behavioral 
"KRN",19,14670,1,2,0)
Reporting System (DBRS) number.  This report will prompt for a single 
"KRN",19,14670,1,3,0)
patient.  It will then display the changes over time made to the DBRS 
"KRN",19,14670,1,4,0)
data associated with the Behavioral Flag assignment.  There is no 
"KRN",19,14670,1,5,0)
electronic link between VistA and the DBRS.  The DBRS Number entered is 
"KRN",19,14670,1,6,0)
that link.
"KRN",19,14670,25)
EN^DGPFRDB
"KRN",19,14670,"U")
BEHAVIORAL PRF DISRUPTIVE BEHA
"KRN",19,14675,-1)
0^5
"KRN",19,14675,0)
DGPF RECORD REFRESH^Record Flag Data Refresh^^R^^DGPF TRANSMISSIONS^^^^^^REGISTRATION^n
"KRN",19,14675,1,0)
^^14^14^3180919^
"KRN",19,14675,1,1,0)
This option should have limited access.  It was intentionally exported as 
"KRN",19,14675,1,2,0)
stand alone option and not attached to a menu in order to prevent if from 
"KRN",19,14675,1,3,0)
being run accidently.
"KRN",19,14675,1,4,0)
 
"KRN",19,14675,1,5,0)
This option will allow a Patient Record Flag Assignment for a patient to 
"KRN",19,14675,1,6,0)
be retransmitted to all facilities for which this patient has been 
"KRN",19,14675,1,7,0)
registered.  Its primary use is to resynchronize all the VistA accounts 
"KRN",19,14675,1,8,0)
to a single image of a particular record flag assignment.  This situation 
"KRN",19,14675,1,9,0)
occurs when some of the HL7 PRF messages fail to properly update the 
"KRN",19,14675,1,10,0)
facility receiving that HL7 message.
"KRN",19,14675,1,11,0)
 
"KRN",19,14675,1,12,0)
It is the responsibility of the user running this option to ensure that 
"KRN",19,14675,1,13,0)
the data on file in this VistA system is accurate as this PRF Assignment 
"KRN",19,14675,1,14,0)
record will be used as an "authoritative source" for this information.
"KRN",19,14675,2)
y
"KRN",19,14675,25)
RF^DGPFHLF
"KRN",19,14675,200.9)
^y
"KRN",19,14675,"U")
RECORD FLAG DATA REFRESH
"KRN",101,1811,-1)
0^9
"KRN",101,1811,0)
VALM QUIT^Quit^^A^^^^^^^^
"KRN",101,1811,.1)
 
"KRN",101,1811,1,0)
^^1^1^2911105^
"KRN",101,1811,1,1,0)
This protocol can be used as a generic 'quit' action.
"KRN",101,1811,2,0)
^101.02A^2^2
"KRN",101,1811,2,1,0)
EXIT
"KRN",101,1811,2,2,0)
QUIT
"KRN",101,1811,2,"B","EXIT",1)

"KRN",101,1811,2,"B","QUIT",2)

"KRN",101,1811,15)

"KRN",101,1811,20)
Q
"KRN",101,1811,99)
65043,57920
"KRN",101,4926,-1)
2^1
"KRN",101,4926,0)
DGPF RECORD FLAG ASSIGNMENT MENU^^^M^520824650^^^^^^^114
"KRN",101,4926,10,0)
^101.01PA^8^8
"KRN",101,4926,10,8,0)
6490^FT^60^
"KRN",101,4926,10,8,"^")
DGPF TRANSFER FLAG
"KRN",101,6490,-1)
0^2
"KRN",101,6490,0)
DGPF TRANSFER FLAG^PRF Owner Transfer Request^^A^^^^^^^^REGISTRATION
"KRN",101,6490,1,0)
^101.06^1^1^3180502^^^^
"KRN",101,6490,1,1,0)
This action protocol permits the user to transfer a National Category 1 Patient Record Flag within the Record Flag Assignment [DGPFRECORD FLAG ASSIGNMENT] option.
"KRN",101,6490,20)
D TR^DGPFLMA5
"KRN",101,6490,24)
I $G(DGDFN)
"KRN",101,6490,99)
65043,57920
"KRN",101,6491,-1)
0^3
"KRN",101,6491,0)
DGPF PRF QBP/Q11 EVENT^QBP/Q11 event driver^^E^^^^^^^^REGISTRATION
"KRN",101,6491,1,0)
^101.06^1^1^3180518^^
"KRN",101,6491,1,1,0)
This protocol is the event protocol for the Patient Record Flags transfer request message (QBP^Q11).
"KRN",101,6491,99)
65043,57920
"KRN",101,6491,770)
PRF-TRANS-REQ^PRF-TRANS-RESP^QBP^Q11^^^^^^2.5^
"KRN",101,6491,772)
D EN^DGPFHLT1
"KRN",101,6491,773)
1^1
"KRN",101,6491,775,0)
^101.0775PA^1^1
"KRN",101,6491,775,1,0)
6497
"KRN",101,6491,775,1,"^")
DGPF PRF QBP/Q11 SUBSC
"KRN",101,6492,-1)
0^4
"KRN",101,6492,0)
DGPF PRF RSP/K11 SUBSC^RSP/K11 subscriber^^S^^^^^^^^REGISTRATION
"KRN",101,6492,1,0)
^^2^2^3180518^
"KRN",101,6492,1,1,0)
This protocol is the subscriber protocol for the response to Patient
"KRN",101,6492,1,2,0)
Record Flags transfer request message (RSP^K11).
"KRN",101,6492,99)
65043,57920
"KRN",101,6492,770)
PRF-TRANS-REQ^PRF-TRANS-RESP^^K11^^^^^^2.5^ACK
"KRN",101,6492,771)
D EN^DGPFHLT1
"KRN",101,6492,773)
1^1
"KRN",101,6492,774)
Q
"KRN",101,6493,-1)
0^6
"KRN",101,6493,0)
DGPF PRF TR REQ REVIEW^Review pending request^^A^^^^^^^^REGISTRATION
"KRN",101,6493,20)
D RR^DGPFTR1
"KRN",101,6493,99)
65043,57920
"KRN",101,6494,-1)
0^7
"KRN",101,6494,0)
DGPF PRF TR REQ CHANGE VIEW^Change current view^^A^^^^^^^^REGISTRATION
"KRN",101,6494,20)
D CV^DGPFTR1
"KRN",101,6494,99)
65043,57920
"KRN",101,6495,-1)
0^5
"KRN",101,6495,0)
DGPF PRF TR REQ MENU^^^M^^^^^^^^REGISTRATION
"KRN",101,6495,4)
40^3
"KRN",101,6495,10,0)
^101.01PA^4^4
"KRN",101,6495,10,1,0)
6494^CV^10^
"KRN",101,6495,10,1,"^")
DGPF PRF TR REQ CHANGE VIEW
"KRN",101,6495,10,2,0)
6496^SD^20^
"KRN",101,6495,10,2,"^")
DGPF PRF TR REQ DETAILS
"KRN",101,6495,10,3,0)
6493^RR^30^
"KRN",101,6495,10,3,"^")
DGPF PRF TR REQ REVIEW
"KRN",101,6495,10,4,0)
1811^Q^40^
"KRN",101,6495,10,4,"^")
VALM QUIT
"KRN",101,6495,26)
D SHOW^VALM
"KRN",101,6495,28)
Select Action:
"KRN",101,6495,99)
65043,57920
"KRN",101,6496,-1)
0^8
"KRN",101,6496,0)
DGPF PRF TR REQ DETAILS^Show request details^^A^^^^^^^^REGISTRATION
"KRN",101,6496,20)
D SD^DGPFTR1
"KRN",101,6496,99)
65043,57920
"KRN",101,6497,-1)
0^10
"KRN",101,6497,0)
DGPF PRF QBP/Q11 SUBSC^QBP/Q11 subscriber^^S^^^^^^^^
"KRN",101,6497,1,0)
^^2^2^3180518^
"KRN",101,6497,1,1,0)
This protocol is the subscriber protocol for the Patient Record Flags
"KRN",101,6497,1,2,0)
transfer request message (QBP^Q11).
"KRN",101,6497,99)
65043,57920
"KRN",101,6497,770)
PRF-TRANS-REQ^PRF-TRANS-RESP^QBP^Q11^^^^^^2.5^ACK
"KRN",101,6497,771)
D EN^DGPFHLT1
"KRN",101,6497,772)

"KRN",101,6497,773)
1^1
"KRN",101,6497,774)
Q
"KRN",101,6498,-1)
0^11
"KRN",101,6498,0)
DGPF PRF RSP/K11 EVENT^RSP/K11 event driver^^E^^^^^^^^
"KRN",101,6498,1,0)
^^2^2^3180518^
"KRN",101,6498,1,1,0)
This protocol is the event protocol for the response to Patient
"KRN",101,6498,1,2,0)
Record Flags transfer request message (RSP^K11).
"KRN",101,6498,99)
65043,57920
"KRN",101,6498,770)
PRF-TRANS-REQ^PRF-TRANS-RESP^RSP^K11^^^^^^2.5^
"KRN",101,6498,772)
D EN^DGPFHLT1
"KRN",101,6498,773)
1^1
"KRN",101,6498,775,0)
^101.0775PA^1^1
"KRN",101,6498,775,1,0)
6492
"KRN",101,6498,775,1,"^")
DGPF PRF RSP/K11 SUBSC
"KRN",409.61,873,-1)
0^1
"KRN",409.61,873,0)
DGPF PRF TRANSFER REQUESTS^1^^80^7^20^1^1^PRF Transfer Request^DGPF PRF TR REQ MENU^PRF TRANSFER REQUESTS^1^^1
"KRN",409.61,873,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,873,"COL",0)
^409.621^4^4
"KRN",409.61,873,"COL",1,0)
PATIENT^5^28^Patient Name^U^0
"KRN",409.61,873,"COL",2,0)
FLAG^34^24^Record Flag^U^0
"KRN",409.61,873,"COL",3,0)
STATUS^58^11^Status^U^0
"KRN",409.61,873,"COL",4,0)
DATE^71^8^Rq. Date^U^0
"KRN",409.61,873,"COL","AIDENT",0,1)

"KRN",409.61,873,"COL","AIDENT",0,2)

"KRN",409.61,873,"COL","AIDENT",0,3)

"KRN",409.61,873,"COL","AIDENT",0,4)

"KRN",409.61,873,"COL","B","DATE",4)

"KRN",409.61,873,"COL","B","FLAG",2)

"KRN",409.61,873,"COL","B","PATIENT",1)

"KRN",409.61,873,"COL","B","STATUS",3)

"KRN",409.61,873,"FNL")
D EXIT^DGPFTR
"KRN",409.61,873,"HDR")
D HDR^DGPFTR
"KRN",409.61,873,"HLP")
D HELP^DGPFTR
"KRN",409.61,873,"INIT")
D INIT^DGPFTR
"KRN",771,253,-1)
0^1
"KRN",771,253,0)
PRF-TRANS-REQ^a^^^^^USA
"KRN",771,254,-1)
0^2
"KRN",771,254,0)
PRF-TRANS-RESP^a^^^^^USA
"MBREQ")
0
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;HLAPDEL^XPDIA1(%)
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",114,-1)
1^1
"PKG",114,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",114,22,0)
^9.49I^1^1
"PKG",114,22,1,0)
5.3^2930813^2930821
"PKG",114,22,1,"PAH",1,0)
951^3190205^520824650
"PKG",114,22,1,"PAH",1,1,0)
^^22^22^3190205
"PKG",114,22,1,"PAH",1,1,1,0)
This patch addresses enhancements to Patient Record Flags (PRF) to 
"PKG",114,22,1,"PAH",1,1,2,0)
improve the delivery of targeted Mental Health care for individuals at 
"PKG",114,22,1,"PAH",1,1,3,0)
high risk for suicide.
"PKG",114,22,1,"PAH",1,1,4,0)
 
"PKG",114,22,1,"PAH",1,1,5,0)
Enhancements to PRF reports were made to improve effective management of 
"PKG",114,22,1,"PAH",1,1,6,0)
coordination of care for high risk individuals and to include new data 
"PKG",114,22,1,"PAH",1,1,7,0)
elements introduced with this patch.
"PKG",114,22,1,"PAH",1,1,8,0)
 
"PKG",114,22,1,"PAH",1,1,9,0)
1. The Disruptive Behavior Reporting System (DBRS) record numbers are now 
"PKG",114,22,1,"PAH",1,1,10,0)
recorded in the PRF FileMan files to enable a convenient reference 
"PKG",114,22,1,"PAH",1,1,11,0)
between VistA and DBRS.
"PKG",114,22,1,"PAH",1,1,12,0)
 
"PKG",114,22,1,"PAH",1,1,13,0)
2. Modification to support TIU/CPRS Progress Note Properties' action list 
"PKG",114,22,1,"PAH",1,1,14,0)
functionality. 
"PKG",114,22,1,"PAH",1,1,15,0)
 
"PKG",114,22,1,"PAH",1,1,16,0)
3. Enhancements to PRF flags ownership transfers. The patch implements 
"PKG",114,22,1,"PAH",1,1,17,0)
new functionality and makes modification to existing code to improve the 
"PKG",114,22,1,"PAH",1,1,18,0)
process of ownership transfer and eliminate issues reported by PRF users. 
"PKG",114,22,1,"PAH",1,1,19,0)
 
"PKG",114,22,1,"PAH",1,1,20,0)
4. Various enhancements and fixes related to PRF flag HL7 transmissions 
"PKG",114,22,1,"PAH",1,1,21,0)
 
"PKG",114,22,1,"PAH",1,1,22,0)
Please see the patch description of the patch in FORUM for details.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
41
"RTN","DG53P951")
0^41^B177935300^n/a
"RTN","DG53P951",1,0)
DG53P951 ;SHRPE/YMG - Post Install for DG patch 951 ;03-May-2018
"RTN","DG53P951",2,0)
 ;;5.3;Registration;**951**;Aug 13, 1993;Build 135
"RTN","DG53P951",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DG53P951",4,0)
 ;
"RTN","DG53P951",5,0)
EN ; entry point
"RTN","DG53P951",6,0)
 N XPDIDTOT,XPDIDVT
"RTN","DG53P951",7,0)
 S XPDIDTOT=2,XPDIDVT=0
"RTN","DG53P951",8,0)
 D USR(1)          ; 1. create non-human user for PRF interface
"RTN","DG53P951",9,0)
 D EN1(2)  ;entry point for HL7 CHECK POST INSTALLATION REPORT
"RTN","DG53P951",10,0)
 Q
"RTN","DG53P951",11,0)
 ;
"RTN","DG53P951",12,0)
USR(DGXPD) ; create non-human user for PRF interface
"RTN","DG53P951",13,0)
 N UIEN
"RTN","DG53P951",14,0)
 I '$D(ZTQUEUED) D  ;if not background
"RTN","DG53P951",15,0)
 .D BMES^XPDUTL(" STEP "_DGXPD_" of "_XPDIDTOT)
"RTN","DG53P951",16,0)
 .D MES^XPDUTL("-------------")
"RTN","DG53P951",17,0)
 .D MES^XPDUTL("Creating non-human user for PRF interface ... ")
"RTN","DG53P951",18,0)
 .Q
"RTN","DG53P951",19,0)
 ;
"RTN","DG53P951",20,0)
 ; either in taskmode or not
"RTN","DG53P951",21,0)
 ; ICR #4677.
"RTN","DG53P951",22,0)
 S UIEN=$$CREATE^XUSAP("DGPRF,INTERFACE","")
"RTN","DG53P951",23,0)
 I '$D(ZTQUEUED) D
"RTN","DG53P951",24,0)
 .I +UIEN=0 D BMES^XPDUTL(" Already exists.")
"RTN","DG53P951",25,0)
 .I +UIEN>0 D BMES^XPDUTL(" Successfully added.")
"RTN","DG53P951",26,0)
 .I +UIEN<0 D BMES^XPDUTL(" ERROR: user NOT added.")
"RTN","DG53P951",27,0)
 .D UPDATE^XPDID(DGXPD)
"RTN","DG53P951",28,0)
 .Q
"RTN","DG53P951",29,0)
 Q
"RTN","DG53P951",30,0)
 ;
"RTN","DG53P951",31,0)
 ; This subroutine is the post installation for patch DG*5.3*951
"RTN","DG53P951",32,0)
 ; that will generate HL7 CHECK POST INSTALLATION REPORT.
"RTN","DG53P951",33,0)
 ;
"RTN","DG53P951",34,0)
 ; The generation of report is required as there is a risk about being
"RTN","DG53P951",35,0)
 ; out of synchronization when flags are being transferred from one site
"RTN","DG53P951",36,0)
 ; to another, however, one of the sites has not installed the patch yet.
"RTN","DG53P951",37,0)
 ; This will produce errors in HL7.
"RTN","DG53P951",38,0)
 ;
"RTN","DG53P951",39,0)
 ;ICR#  TYPE      DESCRIPTION
"RTN","DG53P951",40,0)
 ;----- ----      ---------------------
"RTN","DG53P951",41,0)
 ;10103 Sup       ^XLFDT: $$FMADD,$$DT,$$HL7TFM
"RTN","DG53P951",42,0)
 ;2056  Sup       ^DIQ: $$GET1,GETS
"RTN","DG53P951",43,0)
 ;10070 Sup       ^XMD
"RTN","DG53P951",44,0)
 ;2171  Sup       ^XUAF4: $$IEN,$$NAME
"RTN","DG53P951",45,0)
 ;2172  Sup       UPDATE^XPDID
"RTN","DG53P951",46,0)
 ;2701  Sup       $$GETDFN^MPIF001
"RTN","DG53P951",47,0)
 ;10000 Sup       NOW^%DTC
"RTN","DG53P951",48,0)
 ;10003 Sup       DD^%DT
"RTN","DG53P951",49,0)
 ;3099  Sup       $$MSG^HLCSUTL
"RTN","DG53P951",50,0)
 ;4669  Private   DG has approval for direct global read of "B" index of FILE #773; Fileman read of field #2
"RTN","DG53P951",51,0)
 ;10035 Sup       Fileman read of FILE #2 ;field #.01
"RTN","DG53P951",52,0)
 ;2052  Sup       $$GET1^DID
"RTN","DG53P951",53,0)
 ;10141 Sup       ^XPDUTL:BMES, MES
"RTN","DG53P951",54,0)
 ;10063 Sup       %ZTLOAD
"RTN","DG53P951",55,0)
 ;
"RTN","DG53P951",56,0)
 ;
"RTN","DG53P951",57,0)
EN1(DGXPD) ;Queue the HL7 CHECK POST INSTALLATION REPORT to Taskman
"RTN","DG53P951",58,0)
 I $D(ZTQUEUED) D EN3 Q  ;queued to Taskman
"RTN","DG53P951",59,0)
 N X,MES,ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTREQ,ZTSK,ZTSAVE
"RTN","DG53P951",60,0)
 S MES(1)="  "
"RTN","DG53P951",61,0)
 S MES(2)=" STEP "_DGXPD_" of "_XPDIDTOT
"RTN","DG53P951",62,0)
 S MES(3)="-------------"
"RTN","DG53P951",63,0)
 S MES(4)="  "
"RTN","DG53P951",64,0)
 S MES(5)="You will now be prompted for Requested Start Time to generate"
"RTN","DG53P951",65,0)
 S MES(6)="the HL7 CHECK POST INSTALLATION REPORT"
"RTN","DG53P951",66,0)
 S MES(7)="  "
"RTN","DG53P951",67,0)
 S MES(8)="If you do not enter a time, then this report will be queued to run NOW."
"RTN","DG53P951",68,0)
 S MES(9)="  "
"RTN","DG53P951",69,0)
 D MES^XPDUTL(.MES)
"RTN","DG53P951",70,0)
 S ZTDESC="DGPF HL7 CHECK POST INSTALLATION REPORT GENERATION"
"RTN","DG53P951",71,0)
 S ZTRTN="EN3^DG53P951"
"RTN","DG53P951",72,0)
 S ZTIO=""
"RTN","DG53P951",73,0)
 D ^%ZTLOAD
"RTN","DG53P951",74,0)
 I $D(ZTSK) S X="Queued to Task #"_$G(ZTSK) D BMES^XPDUTL(X)
"RTN","DG53P951",75,0)
 I '$D(ZTSK) D
"RTN","DG53P951",76,0)
 . K MES
"RTN","DG53P951",77,0)
 . S MES(1)="  "
"RTN","DG53P951",78,0)
 . S MES(2)="******************************************"
"RTN","DG53P951",79,0)
 . S MES(3)="Since you did not enter a time to run the report"
"RTN","DG53P951",80,0)
 . S MES(4)="Running Post Installation Report NOW."
"RTN","DG53P951",81,0)
 . S MES(5)="  "
"RTN","DG53P951",82,0)
 . S MES(6)="Depending upon the size of your database, this report could take"
"RTN","DG53P951",83,0)
 . S MES(7)="sometime to run."
"RTN","DG53P951",84,0)
 . S MES(8)="  "
"RTN","DG53P951",85,0)
 . S MES(9)="There will be no further screen display while running this report."
"RTN","DG53P951",86,0)
 . S MES(10)="******************************************"
"RTN","DG53P951",87,0)
 . S MES(11)="  "
"RTN","DG53P951",88,0)
 . D MES^XPDUTL(.MES)
"RTN","DG53P951",89,0)
 . S ZTDESC="DGPF HL7 CHECK POST INSTALLATION REPORT GENERATION"
"RTN","DG53P951",90,0)
 . S ZTRTN="EN3^DG53P951"
"RTN","DG53P951",91,0)
 . S ZTIO=""
"RTN","DG53P951",92,0)
 . S ZTDTH=$H
"RTN","DG53P951",93,0)
 . D ^%ZTLOAD
"RTN","DG53P951",94,0)
 . S X="Queued to Task #"_$G(ZTSK) D BMES^XPDUTL(X)
"RTN","DG53P951",95,0)
 . Q
"RTN","DG53P951",96,0)
 D UPDATE^XPDID(DGXPD)
"RTN","DG53P951",97,0)
 Q
"RTN","DG53P951",98,0)
 ;
"RTN","DG53P951",99,0)
EN3 ;
"RTN","DG53P951",100,0)
 N DGLIST       ;temp global name used for report list
"RTN","DG53P951",101,0)
 N DGSORT       ;array or report parameters
"RTN","DG53P951",102,0)
 N ACTNARY      ;array that contain all the PRF ACTIONs
"RTN","DG53P951",103,0)
 N LN           ;subscript line
"RTN","DG53P951",104,0)
 N DGRCPNT
"RTN","DG53P951",105,0)
 N SNDMAIL
"RTN","DG53P951",106,0)
 S DGLIST=$NA(^TMP("DG951PST",$J))
"RTN","DG53P951",107,0)
 K @DGLIST
"RTN","DG53P951",108,0)
 ;
"RTN","DG53P951",109,0)
 D BLDARR  ;build PRF ACTION array
"RTN","DG53P951",110,0)
 S SNDMAIL=0
"RTN","DG53P951",111,0)
 ;beginning and ending date
"RTN","DG53P951",112,0)
 S DGSORT("DGBEG")=$$FMADD^XLFDT(DT,-4)
"RTN","DG53P951",113,0)
 S DGSORT("DGEND")=$$DT^XLFDT
"RTN","DG53P951",114,0)
 D LOOP1(DGLIST)
"RTN","DG53P951",115,0)
 D PRINT1(DGLIST)
"RTN","DG53P951",116,0)
 D RECPIENT
"RTN","DG53P951",117,0)
 D MAIL1
"RTN","DG53P951",118,0)
 K @DGLIST
"RTN","DG53P951",119,0)
 S ZTREQ="@"
"RTN","DG53P951",120,0)
 Q
"RTN","DG53P951",121,0)
 ;
"RTN","DG53P951",122,0)
BLDARR ;
"RTN","DG53P951",123,0)
 ;build PRF ACTION Array
"RTN","DG53P951",124,0)
 N I,X,DGERR,Y
"RTN","DG53P951",125,0)
 S X=$$GET1^DID(26.14,.03,,"SET OF CODES",,"DGERR")
"RTN","DG53P951",126,0)
 Q:$D(DGERR)
"RTN","DG53P951",127,0)
 F I=1:1:$L(X,";") S Y=$P(X,";",I) Q:Y=""  S ACTNARY($P(Y,":",2))=""
"RTN","DG53P951",128,0)
 Q
"RTN","DG53P951",129,0)
 ;
"RTN","DG53P951",130,0)
LOOP1(DGLIST) ;
"RTN","DG53P951",131,0)
 ;loop variable pointer flag x-ref file to run report
"RTN","DG53P951",132,0)
 N DG772,DG773,DGPROCDT,DGMSGTYP,DGREF,DGEVNTYP,DGPTICN
"RTN","DG53P951",133,0)
 N DGSTANUM,DGSTNAME,DGACTN,DGPTNAME,DGSSN
"RTN","DG53P951",134,0)
 S DGREF=$NA(^TMP("DG53951P1",$J))
"RTN","DG53P951",135,0)
 S DG772="" F  S DG772=$O(^HLMA("B",DG772),-1) Q:DG772=""  D
"RTN","DG53P951",136,0)
 . S DG773="" F  S DG773=$O(^HLMA("B",DG772,DG773),-1) Q:DG773=""  D
"RTN","DG53P951",137,0)
 . . K @DGREF,DGPROCDT,DGMSGTYP,DGEVNTYP,DGPTICN
"RTN","DG53P951",138,0)
 . . K DGSTANUM,DGSTNAME,DGACTN,DGPTNAME,DGSSN
"RTN","DG53P951",139,0)
 . . Q:$$MSG^HLCSUTL($$GET1^DIQ(773,DG773_",",2,"I"),$NA(@DGREF@(1)))<1
"RTN","DG53P951",140,0)
 . . D PARSE(DGREF)
"RTN","DG53P951",141,0)
 K @DGREF
"RTN","DG53P951",142,0)
 Q
"RTN","DG53P951",143,0)
 ;
"RTN","DG53P951",144,0)
PARSE(DGREF) ;
"RTN","DG53P951",145,0)
 N SUB1,SUB2,DGSGMENT,DGBEHAV,DFN,DGOUT
"RTN","DG53P951",146,0)
 S (SUB1,SUB2,DGSGMENT(0))=""
"RTN","DG53P951",147,0)
 S DGOUT=0
"RTN","DG53P951",148,0)
 F  S SUB1=$O(@DGREF@(SUB1)) Q:SUB1=""!DGOUT  D
"RTN","DG53P951",149,0)
 . N DGBEHAV,DFN
"RTN","DG53P951",150,0)
 . S DGBEHAV=0
"RTN","DG53P951",151,0)
 . F  S SUB2=$O(@DGREF@(SUB1,SUB2)) Q:SUB2=""!DGOUT  D
"RTN","DG53P951",152,0)
 . . S DGSGMENT(0)=$P(@DGREF@(SUB1,SUB2),U)
"RTN","DG53P951",153,0)
 . . I (",MSH,PID,QRD,OBR,OBX,")[(","_DGSGMENT(0)_",") D @DGSGMENT(0)
"RTN","DG53P951",154,0)
 Q
"RTN","DG53P951",155,0)
 ;
"RTN","DG53P951",156,0)
MSH ;Parse MSH segment
"RTN","DG53P951",157,0)
 ;Processing date/time check...
"RTN","DG53P951",158,0)
 S DGPROCDT=$$HL7TFM^XLFDT($P($P(@DGREF@(SUB1,SUB2),U,7),"-"))
"RTN","DG53P951",159,0)
 I DGPROCDT'>0 S DGOUT=1 Q
"RTN","DG53P951",160,0)
 ;check if date is within the date range TODAY-4 and TODAY
"RTN","DG53P951",161,0)
 I ($P(DGPROCDT,".")<DGSORT("DGBEG"))!($P(DGPROCDT,".")>DGSORT("DGEND")) S DGOUT=1 Q
"RTN","DG53P951",162,0)
 ;extract the message and event type
"RTN","DG53P951",163,0)
 S DGMSGTYP=$P($P(@DGREF@(SUB1,SUB2),U,9),"~")
"RTN","DG53P951",164,0)
 S DGEVNTYP=$P($P(@DGREF@(SUB1,SUB2),U,9),"~",2)
"RTN","DG53P951",165,0)
 I ((DGMSGTYP["ORU")&(DGEVNTYP["R01"))!((DGMSGTYP["ORF")&(DGEVNTYP["R04")) D
"RTN","DG53P951",166,0)
 . S DGSTANUM=$P($P(@DGREF@(SUB1,SUB2),U,4),"~")
"RTN","DG53P951",167,0)
 . I DGSTANUM'="" S DGSTNAME=$$NAME^XUAF4($$IEN^XUAF4(DGSTANUM))
"RTN","DG53P951",168,0)
 E  S DGOUT=1
"RTN","DG53P951",169,0)
 Q
"RTN","DG53P951",170,0)
 ;
"RTN","DG53P951",171,0)
PID ;Parse PID segment
"RTN","DG53P951",172,0)
 S DGPTICN=$P($P(@DGREF@(SUB1,SUB2),U,4),"~")
"RTN","DG53P951",173,0)
 S DFN=$$GETDFN^MPIF001(DGPTICN)
"RTN","DG53P951",174,0)
 Q:+DFN'>0
"RTN","DG53P951",175,0)
 S DGPTNAME=$$GET1^DIQ(2,DFN,.01)
"RTN","DG53P951",176,0)
 D SSN
"RTN","DG53P951",177,0)
 Q
"RTN","DG53P951",178,0)
 ;
"RTN","DG53P951",179,0)
QRD ;Parse QRD segment
"RTN","DG53P951",180,0)
 S DGPTICN=$P($P(@DGREF@(SUB1,SUB2),U,9),"~")
"RTN","DG53P951",181,0)
 S DFN=$$GETDFN^MPIF001(DGPTICN)
"RTN","DG53P951",182,0)
 Q:+DFN'>0
"RTN","DG53P951",183,0)
 S DGPTNAME=$$GET1^DIQ(2,DFN,.01)
"RTN","DG53P951",184,0)
 D SSN
"RTN","DG53P951",185,0)
 Q
"RTN","DG53P951",186,0)
 ;
"RTN","DG53P951",187,0)
OBR ;Parse OBR segment
"RTN","DG53P951",188,0)
 ;only check "BEHAVIORAL"
"RTN","DG53P951",189,0)
 I $P($P(@DGREF@(SUB1,SUB2),U,5),"~",2)="BEHAVIORAL" S DGBEHAV=1
"RTN","DG53P951",190,0)
 Q
"RTN","DG53P951",191,0)
 ;
"RTN","DG53P951",192,0)
OBX ;Parse OBX segment
"RTN","DG53P951",193,0)
 ;check the OBX segment if it contains the new DBRS DATA
"RTN","DG53P951",194,0)
 Q:DGBEHAV<1
"RTN","DG53P951",195,0)
 I $P(@DGREF@(SUB1,SUB2),U,3)="ST" S DGACTN=$P(@DGREF@(SUB1,SUB2),U,6)
"RTN","DG53P951",196,0)
 I $G(DGACTN)'="",$D(ACTNARY($G(DGACTN))),$P($P(@DGREF@(SUB1,SUB2),U,4),"~")="D" D BLDLST1(DGLIST)
"RTN","DG53P951",197,0)
 Q
"RTN","DG53P951",198,0)
 ;
"RTN","DG53P951",199,0)
SSN ;extract patient's SSN4
"RTN","DG53P951",200,0)
 D GETS^DIQ(2,DFN_",",.0905,"ER","DGSSN")
"RTN","DG53P951",201,0)
 S DGSSN=DGSSN(2,DFN_",","1U4N","E")
"RTN","DG53P951",202,0)
 Q
"RTN","DG53P951",203,0)
 ;
"RTN","DG53P951",204,0)
BLDLST1(DGLIST) ;
"RTN","DG53P951",205,0)
 ;Build the list to be printed later
"RTN","DG53P951",206,0)
 I DGPTNAME=""!DGSTANUM="" Q
"RTN","DG53P951",207,0)
 S @DGLIST@(DGPTNAME,DGSTANUM)=DGSSN_U_DGPTICN_U_DGSTANUM_U_DGSTNAME_U_DG772_U_DG773
"RTN","DG53P951",208,0)
 Q
"RTN","DG53P951",209,0)
 ;
"RTN","DG53P951",210,0)
PRINT1(DGLIST) ;
"RTN","DG53P951",211,0)
 ;
"RTN","DG53P951",212,0)
 N DDASH,DGSITE,DGPTNAME,DGCNT
"RTN","DG53P951",213,0)
 S DDASH="",$P(DDASH,"-",81)=""
"RTN","DG53P951",214,0)
 I $O(@DGLIST@(""))="" D  Q
"RTN","DG53P951",215,0)
 . S @DGLIST@(1,0)="  "
"RTN","DG53P951",216,0)
 . S @DGLIST@(2,0)=">>> No incoming ""BEHAVIORAL"" PRF HL7 transaction messages found"
"RTN","DG53P951",217,0)
 . S @DGLIST@(3,0)="    for the last 4 days "
"RTN","DG53P951",218,0)
 . S @DGLIST@(4,0)="  "
"RTN","DG53P951",219,0)
 . S @DGLIST@(5,0)="    NO REPORT GENERATED"
"RTN","DG53P951",220,0)
 S (DGSITE,DGPTNAME)="",DGCNT=0
"RTN","DG53P951",221,0)
 F  S DGPTNAME=$O(@DGLIST@(DGPTNAME)) Q:DGPTNAME=""  D
"RTN","DG53P951",222,0)
 . N DGDATA,TEXT
"RTN","DG53P951",223,0)
 . D:'DGCNT HEAD1(DGLIST)
"RTN","DG53P951",224,0)
 . F  S DGSITE=$O(@DGLIST@(DGPTNAME,DGSITE)) Q:DGSITE=""  D
"RTN","DG53P951",225,0)
 . . S DGDATA=@DGLIST@(DGPTNAME,DGSITE)
"RTN","DG53P951",226,0)
 . . S TEXT=DGSITE_"/"_$E($P(DGDATA,U,4),1,25)
"RTN","DG53P951",227,0)
 . . S TEXT=$$BLDSTR(DGSITE_"/"_$E($P(DGDATA,U,4),1,25),TEXT,1,30)
"RTN","DG53P951",228,0)
 . . S TEXT=$$BLDSTR($E(DGPTNAME,1,20),TEXT,33,20)
"RTN","DG53P951",229,0)
 . . S TEXT=$$BLDSTR($P(DGDATA,U,2),TEXT,55,17)
"RTN","DG53P951",230,0)
 . . S TEXT=$$BLDSTR($P(DGDATA,U),TEXT,75,5)
"RTN","DG53P951",231,0)
 . . S LN=LN+1
"RTN","DG53P951",232,0)
 . . S @DGLIST@(LN,0)=TEXT
"RTN","DG53P951",233,0)
 Q
"RTN","DG53P951",234,0)
 ;
"RTN","DG53P951",235,0)
HEAD1(DGLIST) ;
"RTN","DG53P951",236,0)
 ;Display user instruction
"RTN","DG53P951",237,0)
 N DDASH,TEXT
"RTN","DG53P951",238,0)
 S LN=1
"RTN","DG53P951",239,0)
 S @DGLIST@(LN,0)=""
"RTN","DG53P951",240,0)
 S DDASH="",$P(DDASH,"=",80)=""
"RTN","DG53P951",241,0)
 S LN=LN+1
"RTN","DG53P951",242,0)
 S @DGLIST@(LN,0)="The list of PRF BEHAVIORAL flags that will be reported to the help desk"
"RTN","DG53P951",243,0)
 S LN=LN+1
"RTN","DG53P951",244,0)
 S @DGLIST@(LN,0)="are contained below."
"RTN","DG53P951",245,0)
 S LN=LN+1
"RTN","DG53P951",246,0)
 S @DGLIST@(LN,0)="These flags need to be re-sent after the DG*5.3*951 compliance date by"
"RTN","DG53P951",247,0)
 S LN=LN+1
"RTN","DG53P951",248,0)
 S @DGLIST@(LN,0)="using the REFRESH option for the sites and patients listed below:"
"RTN","DG53P951",249,0)
 S LN=LN+1
"RTN","DG53P951",250,0)
 S @DGLIST@(LN,0)=""
"RTN","DG53P951",251,0)
 S TEXT="SENDING SITE#/NAME"
"RTN","DG53P951",252,0)
 S TEXT=$$BLDSTR("SENDING SITE#/NAME",TEXT,1,30)
"RTN","DG53P951",253,0)
 S TEXT=$$BLDSTR("PATIENT NAME",TEXT,33,20)
"RTN","DG53P951",254,0)
 S TEXT=$$BLDSTR("ICN #",TEXT,55,17)
"RTN","DG53P951",255,0)
 S TEXT=$$BLDSTR("SSN4",TEXT,75,5)
"RTN","DG53P951",256,0)
 S LN=LN+1
"RTN","DG53P951",257,0)
 S @DGLIST@(LN,0)=TEXT
"RTN","DG53P951",258,0)
 S LN=LN+1
"RTN","DG53P951",259,0)
 S @DGLIST@(LN,0)=DDASH
"RTN","DG53P951",260,0)
 S LN=LN+1
"RTN","DG53P951",261,0)
 S @DGLIST@(LN,0)=""
"RTN","DG53P951",262,0)
 S DGCNT=1
"RTN","DG53P951",263,0)
 Q
"RTN","DG53P951",264,0)
 ;
"RTN","DG53P951",265,0)
BLDSTR(NSTR,STR,COL,NSL) ;build a string
"RTN","DG53P951",266,0)
 Q $E(STR_$J("",COL-1),1,COL-1)_$E(NSTR_$J("",NSL),1,NSL)_$E(STR,COL+NSL,999)
"RTN","DG53P951",267,0)
 ;
"RTN","DG53P951",268,0)
RECPIENT ;
"RTN","DG53P951",269,0)
 ;mail recipient
"RTN","DG53P951",270,0)
 S DGRCPNT(1)="G.DGPF BEHAVIORAL FLAG REVIEW"
"RTN","DG53P951",271,0)
 S DGRCPNT(2)="G.IRM"
"RTN","DG53P951",272,0)
 Q
"RTN","DG53P951",273,0)
 ;
"RTN","DG53P951",274,0)
MAIL1 ;Send mailman message to user with results
"RTN","DG53P951",275,0)
 ;
"RTN","DG53P951",276,0)
 N DIFROM,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","DG53P951",277,0)
 S (XMDUZ,XMSUB)="HL7 CHECK POST-INSTALL REPORT"
"RTN","DG53P951",278,0)
 S XMTEXT="^TMP(""DG951PST"",$J,"
"RTN","DG53P951",279,0)
 S (XMY(DUZ),XMY(.5))=""
"RTN","DG53P951",280,0)
 S DGRCPNT="" F  S DGRCPNT=$O(DGRCPNT(DGRCPNT)) Q:DGRCPNT=""  S XMY(DGRCPNT(DGRCPNT))=""
"RTN","DG53P951",281,0)
 D NOW^%DTC S Y=% D DD^%DT
"RTN","DG53P951",282,0)
 D ^XMD
"RTN","DG53P951",283,0)
 S SNDMAIL=1
"RTN","DG53P951",284,0)
 Q
"RTN","DG53P951",285,0)
 ;
"RTN","DG53P951",286,0)
 ; This subroutine is the post installation for patch DG*5.3*951
"RTN","DG53P951",287,0)
 ; that will generate IOC SITE DBRS PATIENTS POST-RELEASE REPORT
"RTN","DG53P951",288,0)
 ;
"RTN","DG53P951",289,0)
 ; The "IOC SITE DBRS PATIENTS POST-RELEASE REPORT" will be developed to determine patients
"RTN","DG53P951",290,0)
 ; in the IOC site that meet the following criteria:
"RTN","DG53P951",291,0)
 ;  - have DBRS numbers in their behavioral flag in database by the end 
"RTN","DG53P951",292,0)
 ;    of National Release period,
"RTN","DG53P951",293,0)
 ;  - are registered in other sites 
"RTN","DG53P951",294,0)
 ; HL7 messages for these patients need to be re-sent to other site to
"RTN","DG53P951",295,0)
 ; ensure synchronization of DBRS data
"RTN","DG53P951",296,0)
 ;
"RTN","DG53P951",297,0)
 ; ICR# TYPE      DESCRIPTION
"RTN","DG53P951",298,0)
 ;----- ----      ---------------------
"RTN","DG53P951",299,0)
 ;10112 Sup       $$SITE^VASITE
"RTN","DG53P951",300,0)
 ;2056  Sup       ^DIQ: $$GET1,GETS
"RTN","DG53P951",301,0)
 ;10070 Sup       ^XMD
"RTN","DG53P951",302,0)
 ;10000 Sup       NOW^%DTC
"RTN","DG53P951",303,0)
 ;10003 Sup       DD^%DT
"RTN","DG53P951",304,0)
 ;2171  Sup       ^XUAF4: $$STA
"RTN","DG53P951",305,0)
 ;2990  Sup       TFL^VAFCTFU1
"RTN","DG53P951",306,0)
 ;
"RTN","DG53P951",307,0)
EN2 ;
"RTN","DG53P951",308,0)
 ;entry point for IOC SITE DBRS PATIENTS POST-RELEASE REPORT
"RTN","DG53P951",309,0)
 N DGLIST       ;temp global name used for report list
"RTN","DG53P951",310,0)
 N LN           ;subscript line
"RTN","DG53P951",311,0)
 N SNDMAIL
"RTN","DG53P951",312,0)
 N DGRCPNT
"RTN","DG53P951",313,0)
 S DGLIST=$NA(^TMP("DG53951P2",$J))
"RTN","DG53P951",314,0)
 K @DGLIST
"RTN","DG53P951",315,0)
 W @IOF
"RTN","DG53P951",316,0)
 W !,"DG*5.3*951 IOC SITE DBRS PATIENTS POST-RELEASE REPORT",!
"RTN","DG53P951",317,0)
 ;
"RTN","DG53P951",318,0)
 ;user description message
"RTN","DG53P951",319,0)
 D MSG2
"RTN","DG53P951",320,0)
 W !
"RTN","DG53P951",321,0)
 S SNDMAIL=0
"RTN","DG53P951",322,0)
 D LOOP2(DGLIST)
"RTN","DG53P951",323,0)
 D PRINT2(DGLIST)
"RTN","DG53P951",324,0)
 Q:$O(@DGLIST@(""))=""
"RTN","DG53P951",325,0)
 D RECPIENT
"RTN","DG53P951",326,0)
 D MAIL2
"RTN","DG53P951",327,0)
 K @DGLIST
"RTN","DG53P951",328,0)
 I $G(SNDMAIL) D
"RTN","DG53P951",329,0)
 . W !!,"SUCCESSFULLY SENT EMAIL   : IOC SITE DBRS PATIENTS POST-RELEASE REPORT",!!
"RTN","DG53P951",330,0)
 . W "To the following recipient:",!
"RTN","DG53P951",331,0)
 . W ?3,"POSTMASTER"
"RTN","DG53P951",332,0)
 . S DGRCPNT="" F  S DGRCPNT=$O(DGRCPNT(DGRCPNT)) Q:DGRCPNT=""  W !,?3,$G(DGRCPNT(DGRCPNT))
"RTN","DG53P951",333,0)
 W !!
"RTN","DG53P951",334,0)
 Q
"RTN","DG53P951",335,0)
 ;
"RTN","DG53P951",336,0)
MSG2 ;
"RTN","DG53P951",337,0)
 W !,"This post install routine will check all patients with DBRS data in the local"
"RTN","DG53P951",338,0)
 W !,"PRF ASSIGNMENT FILE (#26.13) and verify if patients are registered in other VA"
"RTN","DG53P951",339,0)
 W !,"sites."
"RTN","DG53P951",340,0)
 ;
"RTN","DG53P951",341,0)
 W !!,"HL7 transaction messages for these patients need to be re-sent to other site to"
"RTN","DG53P951",342,0)
 W !,"ensure synchronization of DBRS data.",!
"RTN","DG53P951",343,0)
 Q
"RTN","DG53P951",344,0)
 ;
"RTN","DG53P951",345,0)
LOOP2(DGLIST) ;
"RTN","DG53P951",346,0)
 ;loop variable pointer flag x-ref file to run report
"RTN","DG53P951",347,0)
 N DGDFN,DGIEN,DGINST,DGOWN,IOC
"RTN","DG53P951",348,0)
 I '$D(ZTQUEUED) S IOC=0 W "Working..."
"RTN","DG53P951",349,0)
 S DGDFN="" F  S DGDFN=$O(^DGPF(26.13,"B",DGDFN)) Q:DGDFN=""  D
"RTN","DG53P951",350,0)
 . S IOC=IOC+1
"RTN","DG53P951",351,0)
 . I '$D(ZTQUEUED),'(IOC#15) W "."
"RTN","DG53P951",352,0)
 . s DGIEN="" F  S DGIEN=$O(^DGPF(26.13,"B",DGDFN,DGIEN)) Q:DGIEN=""  D
"RTN","DG53P951",353,0)
 . . N DGFLDS,DGERR,DGRESULT,DGSITE,DGPTNAME,DGSSN4,DGOWN,DGCURNT
"RTN","DG53P951",354,0)
 . . D GETS^DIQ(26.13,DGIEN_",","**","IE","DGFLDS","DGERR")
"RTN","DG53P951",355,0)
 . . Q:$D(DGERR)
"RTN","DG53P951",356,0)
 . . ;check if BEHAVIORAL and contain DBRS data
"RTN","DG53P951",357,0)
 . . ;if true, check if patient is registered to other VA site
"RTN","DG53P951",358,0)
 . . I DGFLDS(26.13,DGIEN_",",.02,"E")="BEHAVIORAL",$D(DGFLDS(26.131)) D TFL^VAFCTFU1(.DGRESULT,DGDFN)
"RTN","DG53P951",359,0)
 . . Q:'$D(DGRESULT)
"RTN","DG53P951",360,0)
 . . Q:DGRESULT(1)'>0
"RTN","DG53P951",361,0)
 . . S DGPTNAME=DGFLDS(26.13,DGIEN_",",.01,"E") ;patient name
"RTN","DG53P951",362,0)
 . . ;extract the patient SSN terminal digits
"RTN","DG53P951",363,0)
 . . D GETS^DIQ(2,DGDFN_",",.0905,"ER","DGSSN4")
"RTN","DG53P951",364,0)
 . . S DGSSN4=DGSSN4(2,DGDFN_",","1U4N","E")
"RTN","DG53P951",365,0)
 . . ;PRF owned by this site?
"RTN","DG53P951",366,0)
 . . S DGSITE=DGFLDS(26.13,DGIEN_",",.04,"I")
"RTN","DG53P951",367,0)
 . . S DGOWN=$S($G(DGSITE)=$P($$SITE^VASITE,U):1,1:0)
"RTN","DG53P951",368,0)
 . . S DGCURNT=$$STA^XUAF4(DGSITE)
"RTN","DG53P951",369,0)
 . . D BLDLST2(DGLIST)
"RTN","DG53P951",370,0)
 Q
"RTN","DG53P951",371,0)
 ;
"RTN","DG53P951",372,0)
BLDLST2(DGLIST) ;
"RTN","DG53P951",373,0)
 ;build list
"RTN","DG53P951",374,0)
  S @DGLIST@(DGSITE,DGIEN,DGPTNAME)=DGSSN4_U_$S(DGOWN:"YES",1:"NO")_U_DGCURNT
"RTN","DG53P951",375,0)
  Q
"RTN","DG53P951",376,0)
  ;
"RTN","DG53P951",377,0)
PRINT2(DGLIST) ;
"RTN","DG53P951",378,0)
 ;print the list
"RTN","DG53P951",379,0)
 N DDASH,DGIEN,DGSITE,DGPTNAME,DGCNT
"RTN","DG53P951",380,0)
 S DDASH="",$P(DDASH,"-",81)=""
"RTN","DG53P951",381,0)
 I $O(@DGLIST@(""))="" D  Q
"RTN","DG53P951",382,0)
 . W !!," >>> No IOC SITE DBRS PATIENTS record have been found."
"RTN","DG53P951",383,0)
 . W !!,"     NO EMAIL GENERATED.",!
"RTN","DG53P951",384,0)
 S (DGSITE,DGPTNAME,DGIEN)="",DGCNT=0
"RTN","DG53P951",385,0)
 F  S DGSITE=$O(@DGLIST@(DGSITE)) Q:DGSITE=""  D
"RTN","DG53P951",386,0)
 . N DGDATA,TEXT
"RTN","DG53P951",387,0)
 . D:'DGCNT HEAD2(DGLIST)
"RTN","DG53P951",388,0)
 . F  S DGIEN=$O(@DGLIST@(DGSITE,DGIEN)) Q:DGIEN=""  D
"RTN","DG53P951",389,0)
 . . F  S DGPTNAME=$O(@DGLIST@(DGSITE,DGIEN,DGPTNAME)) Q:DGPTNAME=""  D
"RTN","DG53P951",390,0)
 . . . S DGDATA=@DGLIST@(DGSITE,DGIEN,DGPTNAME)
"RTN","DG53P951",391,0)
 . . . S TEXT=$E(DGPTNAME,1,30)
"RTN","DG53P951",392,0)
 . . . S TEXT=$$BLDSTR($E(DGPTNAME,1,30),TEXT,1,25)
"RTN","DG53P951",393,0)
 . . . S TEXT=$$BLDSTR($P(DGDATA,U),TEXT,28,5)
"RTN","DG53P951",394,0)
 . . . S TEXT=$$BLDSTR($P(DGDATA,U,2),TEXT,37,24)
"RTN","DG53P951",395,0)
 . . . S TEXT=$$BLDSTR($P(DGDATA,U,3),TEXT,62,18)
"RTN","DG53P951",396,0)
 . . . S LN=LN+1
"RTN","DG53P951",397,0)
 . . . S @DGLIST@(LN,0)=TEXT
"RTN","DG53P951",398,0)
 Q
"RTN","DG53P951",399,0)
 ;
"RTN","DG53P951",400,0)
HEAD2(DGLIST) ;
"RTN","DG53P951",401,0)
 ;Display user instruction
"RTN","DG53P951",402,0)
 N DDASH,TEXT
"RTN","DG53P951",403,0)
 S LN=1
"RTN","DG53P951",404,0)
 S @DGLIST@(LN,0)=""
"RTN","DG53P951",405,0)
 S DDASH="",$P(DDASH,"=",80)=""
"RTN","DG53P951",406,0)
 S LN=LN+1
"RTN","DG53P951",407,0)
 S @DGLIST@(LN,0)="The list of IOC SITE DBRS PATIENTS whose HL7 transaction messages needs to be"
"RTN","DG53P951",408,0)
 S LN=LN+1
"RTN","DG53P951",409,0)
 S @DGLIST@(LN,0)="re-sent using the REFRESH option to other site to ensure synchronization"
"RTN","DG53P951",410,0)
 S LN=LN+1
"RTN","DG53P951",411,0)
 S @DGLIST@(LN,0)="of DBRS data are listed below:"
"RTN","DG53P951",412,0)
 S LN=LN+1
"RTN","DG53P951",413,0)
 S @DGLIST@(LN,0)=""
"RTN","DG53P951",414,0)
 S TEXT="PATIENT NAME"
"RTN","DG53P951",415,0)
 S TEXT=$$BLDSTR("PATIENT NAME",TEXT,1,25)
"RTN","DG53P951",416,0)
 S TEXT=$$BLDSTR("SSN4",TEXT,28,5)
"RTN","DG53P951",417,0)
 S TEXT=$$BLDSTR("PRF OWNED BY THIS SITE?",TEXT,37,23)
"RTN","DG53P951",418,0)
 S TEXT=$$BLDSTR("CURRENT SITE OWNER",TEXT,62,18)
"RTN","DG53P951",419,0)
 S LN=LN+1
"RTN","DG53P951",420,0)
 S @DGLIST@(LN,0)=TEXT
"RTN","DG53P951",421,0)
 S LN=LN+1
"RTN","DG53P951",422,0)
 S @DGLIST@(LN,0)=DDASH
"RTN","DG53P951",423,0)
 S LN=LN+1
"RTN","DG53P951",424,0)
 S @DGLIST@(LN,0)=""
"RTN","DG53P951",425,0)
 S DGCNT=1
"RTN","DG53P951",426,0)
 Q
"RTN","DG53P951",427,0)
 ;
"RTN","DG53P951",428,0)
MAIL2 ;Send mailman message to user will results
"RTN","DG53P951",429,0)
 ;
"RTN","DG53P951",430,0)
 N DIFROM,%,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","DG53P951",431,0)
 S (XMDUZ,XMSUB)="IOC SITE DBRS PATIENTS REPORT"
"RTN","DG53P951",432,0)
 S XMTEXT="^TMP(""DG53951P2"",$J,"
"RTN","DG53P951",433,0)
 S (XMY(DUZ),XMY(.5))=""
"RTN","DG53P951",434,0)
 S DGRCPNT="" F  S DGRCPNT=$O(DGRCPNT(DGRCPNT)) Q:DGRCPNT=""  S XMY(DGRCPNT(DGRCPNT))=""
"RTN","DG53P951",435,0)
 D NOW^%DTC S Y=% D DD^%DT
"RTN","DG53P951",436,0)
 D ^XMD
"RTN","DG53P951",437,0)
 S SNDMAIL=1
"RTN","DG53P951",438,0)
 Q
"RTN","DG53P951",439,0)
 ; 
"RTN","DGPFAA")
0^4^B81848262^B41515033
"RTN","DGPFAA",1,0)
DGPFAA ;ALB/RPM,ASMR/JD - PRF ASSIGNMENT API'S ; 11/16/16 6:47pm
"RTN","DGPFAA",2,0)
 ;;5.3;Registration;**425,921,951**;Aug 13, 1993;Build 135
"RTN","DGPFAA",3,0)
 ;    Last edited: SHRPE/SGM - Sep 26, 2018 17:06
"RTN","DGPFAA",4,0)
 ;
"RTN","DGPFAA",5,0)
 ;   DE2813 - JD - 10/28/15
"RTN","DGPFAA",6,0)
 ;Done for eHMP project: DG*5.3*921
"RTN","DGPFAA",7,0)
 ;Add logic to trigger an unsolicited update when a patient flag is updated.
"RTN","DGPFAA",8,0)
 ;New code: Tag UU and any reference to that tag thereof.
"RTN","DGPFAA",9,0)
 ;     SHRPE/sgm - Jan 22, 2018
"RTN","DGPFAA",10,0)
 ;Done for SHRPE project: DG*5.3*951
"RTN","DGPFAA",11,0)
 ;  GETASGN is called via ICR.  So new input parameter introduced that
"RTN","DGPFAA",12,0)
 ;  is not part of the ICR for returning DBRS data.
"RTN","DGPFAA",13,0)
 ;
"RTN","DGPFAA",14,0)
 ; ICR# TYPE DESCRIPTION
"RTN","DGPFAA",15,0)
 ;----- ---- ----------------------------------
"RTN","DGPFAA",16,0)
 ;  872 CSub Global read of B index on file 101
"RTN","DGPFAA",17,0)
 ; 2056 Sup  GETS^DIQ
"RTN","DGPFAA",18,0)
 ; 2053 Sup  ^DIE: FILE, UPDATE
"RTN","DGPFAA",19,0)
 ;10101 Sup  EN1^XQOR
"RTN","DGPFAA",20,0)
 ;
"RTN","DGPFAA",21,0)
 Q  ;no direct entry
"RTN","DGPFAA",22,0)
 ;
"RTN","DGPFAA",23,0)
GETALL(DGDFN,DGIENS,DGSTAT,DGCAT) ;retrieve list of assignment IENs
"RTN","DGPFAA",24,0)
 ;This function returns an array of patient record flag assignment IENs
"RTN","DGPFAA",25,0)
 ;for a given patient.  The returned IEN array may optionally be
"RTN","DGPFAA",26,0)
 ;filtered by Active or Inactive status and by flag category.
"RTN","DGPFAA",27,0)
 ;
"RTN","DGPFAA",28,0)
 ;  Input:
"RTN","DGPFAA",29,0)
 ;    DGDFN - (required) Pointer to patient in PATIENT (#2) file
"RTN","DGPFAA",30,0)
 ;   DGIENS - (required) Result array passed by reference
"RTN","DGPFAA",31,0)
 ;   DGSTAT - (optional) Status filter (0:Inactive,1:Active,"":Both).
"RTN","DGPFAA",32,0)
 ;            Defaults to Both.
"RTN","DGPFAA",33,0)
 ;    DGCAT - (optional) Category filter
"RTN","DGPFAA",34,0)
 ;            (1:Category I,2:Category II,"":Both).  Defaults to Both.
"RTN","DGPFAA",35,0)
 ;
"RTN","DGPFAA",36,0)
 ;  Output:
"RTN","DGPFAA",37,0)
 ;   Function Value - Count of returned IENs
"RTN","DGPFAA",38,0)
 ;         DGIENS - Output array subscripted by the assignment IENs
"RTN","DGPFAA",39,0)
 ;
"RTN","DGPFAA",40,0)
 N DGCNT   ;number of returned values
"RTN","DGPFAA",41,0)
 N DGIEN   ;single IEN
"RTN","DGPFAA",42,0)
 N DGCKS   ;check status flag (1:check, 0:ignore)
"RTN","DGPFAA",43,0)
 N DGFLAG  ;pointer to #26.11 or #26.15
"RTN","DGPFAA",44,0)
 ;
"RTN","DGPFAA",45,0)
 S DGCNT=0
"RTN","DGPFAA",46,0)
 I $G(DGDFN)>0,$D(^DGPF(26.13,"B",DGDFN)) D
"RTN","DGPFAA",47,0)
 . S DGFLAG=""
"RTN","DGPFAA",48,0)
 . S DGCKS=0
"RTN","DGPFAA",49,0)
 . S DGSTAT=$G(DGSTAT)
"RTN","DGPFAA",50,0)
 . I DGSTAT=0!(DGSTAT=1) S DGCKS=1
"RTN","DGPFAA",51,0)
 . S DGCAT=+$G(DGCAT)
"RTN","DGPFAA",52,0)
 . S DGCAT=$S(DGCAT=1:"26.15",DGCAT=2:"26.11",1:0)
"RTN","DGPFAA",53,0)
 . F  S DGFLAG=$O(^DGPF(26.13,"C",DGDFN,DGFLAG)) Q:(DGFLAG="")  D
"RTN","DGPFAA",54,0)
 . . I DGCAT,DGFLAG'[DGCAT Q
"RTN","DGPFAA",55,0)
 . . S DGIEN=$O(^DGPF(26.13,"C",DGDFN,DGFLAG,0))
"RTN","DGPFAA",56,0)
 . . I DGCKS,'$D(^DGPF(26.13,"D",DGDFN,DGSTAT,DGIEN)) Q
"RTN","DGPFAA",57,0)
 . . S DGCNT=DGCNT+1
"RTN","DGPFAA",58,0)
 . . S DGIENS(DGIEN)=""
"RTN","DGPFAA",59,0)
 Q DGCNT
"RTN","DGPFAA",60,0)
 ;
"RTN","DGPFAA",61,0)
GETASGN(DGPFIEN,DGPFA,DGDBRS) ;retrieve a single assignment record
"RTN","DGPFAA",62,0)
 ;This function returns a single patient record flag assignment in an
"RTN","DGPFAA",63,0)
 ;array format.
"RTN","DGPFAA",64,0)
 ;
"RTN","DGPFAA",65,0)
 ;  Input:
"RTN","DGPFAA",66,0)
 ;    DGPFIEN - (required) Pointer to patient record flag assignment in
"RTN","DGPFAA",67,0)
 ;              PRF ASSIGNMENT (#26.13) file
"RTN","DGPFAA",68,0)
 ;      DGPFA - (required) Result array passed by reference
"RTN","DGPFAA",69,0)
 ;     DGDBRS - (optional) 1:return DBRS info in DGPFA() ; dg*951
"RTN","DGPFAA",70,0)
 ;
"RTN","DGPFAA",71,0)
 ;  Output:
"RTN","DGPFAA",72,0)
 ;   Function Value - Returns 1 on success, 0 on failure
"RTN","DGPFAA",73,0)
 ;            DGPFA - Output array containing assignment record field
"RTN","DGPFAA",74,0)
 ;                    values.
"RTN","DGPFAA",75,0)
 ;                    Subscript          Field#   Data
"RTN","DGPFAA",76,0)
 ;                    --------------     -------  ---------------------
"RTN","DGPFAA",77,0)
 ;                    "DFN"              .01      internal^external
"RTN","DGPFAA",78,0)
 ;                    "FLAG"             .02      internal^external
"RTN","DGPFAA",79,0)
 ;                    "STATUS"           .03      internal^external
"RTN","DGPFAA",80,0)
 ;                    "OWNER"            .04      internal^external
"RTN","DGPFAA",81,0)
 ;                    "ORIGSITE"         .05      internal^external
"RTN","DGPFAA",82,0)
 ;                    "REVIEWDT"         .06      internal^external
"RTN","DGPFAA",83,0)
 ;                    "NARR",line#,0     1        character string
"RTN","DGPFAA",84,0)
 ;                        If input DGDBRS>0 then
"RTN","DGPFAA",85,0)
 ;                    "DBRS#",line#      2;.01    internal^external
"RTN","DGPFAA",86,0)
 ;                    "DBRS OTHER",line# 2;.02    internal^external
"RTN","DGPFAA",87,0)
 ;                    "DBRS DATE",line#  2;.03    internal^external
"RTN","DGPFAA",88,0)
 ;                    "DBRS SITE",line#  2;.04    internal^external
"RTN","DGPFAA",89,0)
 ;
"RTN","DGPFAA",90,0)
 N DGRSLT
"RTN","DGPFAA",91,0)
 ;
"RTN","DGPFAA",92,0)
 S DGRSLT=0
"RTN","DGPFAA",93,0)
 I $G(DGPFIEN)>0,$D(^DGPF(26.13,DGPFIEN)) D
"RTN","DGPFAA",94,0)
 . N DGIENS   ;IEN string for DIQ
"RTN","DGPFAA",95,0)
 . N DGFLDS   ;results array for DIQ
"RTN","DGPFAA",96,0)
 . N DGERR  ;error array for DIQ
"RTN","DGPFAA",97,0)
 . N ARR,DF,DIERR
"RTN","DGPFAA",98,0)
 . S DGIENS=DGPFIEN_","
"RTN","DGPFAA",99,0)
 . S DF="*" I +$G(DGDBRS) S DF="**" ;   dg*5.3*951
"RTN","DGPFAA",100,0)
 . D GETS^DIQ(26.13,DGIENS,DF,"IEZ","DGFLDS","DGERR")
"RTN","DGPFAA",101,0)
 . Q:$D(DGERR)
"RTN","DGPFAA",102,0)
 . M ARR=DGFLDS(26.13,DGIENS)
"RTN","DGPFAA",103,0)
 . S DGRSLT=1
"RTN","DGPFAA",104,0)
 . S DGPFA("DFN")=$G(ARR(.01,"I"))_U_$G(ARR(.01,"E"))
"RTN","DGPFAA",105,0)
 . S DGPFA("FLAG")=$G(ARR(.02,"I"))_U_$G(ARR(.02,"E"))
"RTN","DGPFAA",106,0)
 . S DGPFA("STATUS")=$G(ARR(.03,"I"))_U_$G(ARR(.03,"E"))
"RTN","DGPFAA",107,0)
 . S DGPFA("OWNER")=$G(ARR(.04,"I"))_U_$G(ARR(.04,"E"))
"RTN","DGPFAA",108,0)
 . S DGPFA("ORIGSITE")=$G(ARR(.05,"I"))_U_$G(ARR(.05,"E"))
"RTN","DGPFAA",109,0)
 . S DGPFA("REVIEWDT")=$G(ARR(.06,"I"))_U_$G(ARR(.06,"E"))
"RTN","DGPFAA",110,0)
 . ;build assignment narrative word processing array
"RTN","DGPFAA",111,0)
 . M DGPFA("NARR")=ARR(1)
"RTN","DGPFAA",112,0)
 . K DGPFA("NARR","E"),DGPFA("NARR","I")
"RTN","DGPFAA",113,0)
 . I $D(DGFLDS(26.131)) D DBRS ;     DG*5.3*951
"RTN","DGPFAA",114,0)
 . Q
"RTN","DGPFAA",115,0)
 Q DGRSLT
"RTN","DGPFAA",116,0)
 ;
"RTN","DGPFAA",117,0)
FNDASGN(DGPFDFN,DGPFFLG) ;Find Assignment
"RTN","DGPFAA",118,0)
 ;  This function finds a patient record flag assignment record.
"RTN","DGPFAA",119,0)
 ;
"RTN","DGPFAA",120,0)
 ;  Input:
"RTN","DGPFAA",121,0)
 ;    DGDFN - Pointer to patient in the PATIENT (#2) file
"RTN","DGPFAA",122,0)
 ;   DGFLAG - Pointer to flag in either the PRF LOCAL FLAG (#26.11)
"RTN","DGPFAA",123,0)
 ;            file or the PRF NATIONAL FLAG (#26.15) file
"RTN","DGPFAA",124,0)
 ;
"RTN","DGPFAA",125,0)
 ;  Output:
"RTN","DGPFAA",126,0)
 ;   Function Value - Returns IEN of existing record on success, 0 on
"RTN","DGPFAA",127,0)
 ;                    failure
"RTN","DGPFAA",128,0)
 ;
"RTN","DGPFAA",129,0)
 N DGIEN
"RTN","DGPFAA",130,0)
 ;
"RTN","DGPFAA",131,0)
 I $G(DGPFDFN)>0,($G(DGPFFLG)>0) D
"RTN","DGPFAA",132,0)
 . S DGIEN=$O(^DGPF(26.13,"C",DGPFDFN,DGPFFLG,0))
"RTN","DGPFAA",133,0)
 Q $S($G(DGIEN)>0:DGIEN,1:0)
"RTN","DGPFAA",134,0)
 ;
"RTN","DGPFAA",135,0)
STOASGN(DGPFA,DGPFERR,DGPFUV) ;
"RTN","DGPFAA",136,0)
 ;Store a single PRF ASSIGNMENT (#26.13) file record
"RTN","DGPFAA",137,0)
 ;
"RTN","DGPFAA",138,0)
 ;  Input:
"RTN","DGPFAA",139,0)
 ;    DGPFA - (required) array of values to be filed (see GETASGN tag
"RTN","DGPFAA",140,0)
 ;            above for valid array structure)
"RTN","DGPFAA",141,0)
 ;              DGPFA() contains 2 "^"-pieces when called from AF/EF
"RTN","DGPFAA",142,0)
 ;                               1 "^"-piece when called from HL
"RTN","DGPFAA",143,0)
 ;            DGPFA("ACTION")=DGPFAH("ACTION") added by EF action and HL
"RTN","DGPFAA",144,0)
 ;            DGPFA("ACTION") = internal [ACTION; 26.14,.03]
"RTN","DGPFAA",145,0)
 ;  DGPFERR - (optional) passed by reference to contain error messages
"RTN","DGPFAA",146,0)
 ;   DGPFUV - (optional) see STOALL
"RTN","DGPFAA",147,0)
 ;             required to file DBRS data
"RTN","DGPFAA",148,0)
 ;
"RTN","DGPFAA",149,0)
 ;  Output:
"RTN","DGPFAA",150,0)
 ;   Function Value - Returns IEN of record on success, 0 on failure
"RTN","DGPFAA",151,0)
 ;          DGPFERR - Undefined on success, error message on failure
"RTN","DGPFAA",152,0)
 ;
"RTN","DGPFAA",153,0)
 N I,X,DGFLD,DGIEN,DGPFERR,DGSUB
"RTN","DGPFAA",154,0)
 S DGPFUV=$$UV
"RTN","DGPFAA",155,0)
 S X="ACTION^DFN^FLAG^ORIGSITE^OWNER^STATUS"
"RTN","DGPFAA",156,0)
 F I=1:1:$L(X,U) S DGSUB=$P(X,U,I),DGFLD(DGSUB)=$P($G(DGPFA(DGSUB)),U)
"RTN","DGPFAA",157,0)
 ;
"RTN","DGPFAA",158,0)
 ;only build DGFLD("REVIEWDT") if "REVIEWDT" is passed
"RTN","DGPFAA",159,0)
 I $D(DGPFA("REVIEWDT"))=1 S DGFLD("REVIEWDT")=$P(DGPFA("REVIEWDT"),U,1)
"RTN","DGPFAA",160,0)
 ;
"RTN","DGPFAA",161,0)
 I $D(DGPFA("NARR")) M DGFLD("NARR")=DGPFA("NARR")
"RTN","DGPFAA",162,0)
 ;
"RTN","DGPFAA",163,0)
 ;REFRESH option may reset STATUS value - DG*5.3*951
"RTN","DGPFAA",164,0)
 S X=DGFLD("ACTION") I (X=7)!(X=8) S DGFLD("STATUS")=X-7
"RTN","DGPFAA",165,0)
 ;
"RTN","DGPFAA",166,0)
 I $$VALID^DGPFUT("DGPFAA1",26.13,.DGFLD,.DGPFERR) D
"RTN","DGPFAA",167,0)
 . N X,DGDBRSE,DGCUR,DGFDA,DGFDAIEN,DGIENS,UPD
"RTN","DGPFAA",168,0)
 . S DGIEN=$$FNDASGN^DGPFAA(DGFLD("DFN"),DGFLD("FLAG"))
"RTN","DGPFAA",169,0)
 . I DGIEN S X=$$GETASGN(DGIEN,.DGCUR,1)
"RTN","DGPFAA",170,0)
 . I DGIEN S DGIENS=DGIEN_","
"RTN","DGPFAA",171,0)
 . E  S DGIENS="+1,"
"RTN","DGPFAA",172,0)
 . S DGFDA(26.13,DGIENS,.01)=DGFLD("DFN")
"RTN","DGPFAA",173,0)
 . S DGFDA(26.13,DGIENS,.02)=DGFLD("FLAG")
"RTN","DGPFAA",174,0)
 . S DGFDA(26.13,DGIENS,.03)=DGFLD("STATUS")
"RTN","DGPFAA",175,0)
 . S DGFDA(26.13,DGIENS,.04)=DGFLD("OWNER")
"RTN","DGPFAA",176,0)
 . S DGFDA(26.13,DGIENS,.05)=DGFLD("ORIGSITE")
"RTN","DGPFAA",177,0)
 . ;
"RTN","DGPFAA",178,0)
 . ;only touch REVIEW DATE (#.06) field if "REVIEWDT" is passed
"RTN","DGPFAA",179,0)
 . ;if called from REFRESH option re-evaluate - DG*5.3*951
"RTN","DGPFAA",180,0)
 . S X=DGFLD("ACTION") I (X=7)!(X=8) D
"RTN","DGPFAA",181,0)
 . . I '$$ISDIV^DGPFUT(DGFLD("OWNER")) S DGFLD("REVIEWDT")="" Q
"RTN","DGPFAA",182,0)
 . . I 'DGFLD("STATUS") S DGFLD("REVIEWDT")="" Q
"RTN","DGPFAA",183,0)
 . . I +$G(DGCUR("REVIEWDT")) Q
"RTN","DGPFAA",184,0)
 . . ;calculate the default review date
"RTN","DGPFAA",185,0)
 . . S DGFLD("REVIEWDT")=$$GETRDT^DGPFAA3(DGFLD("FLAG"),$$NOW^XLFDT)
"RTN","DGPFAA",186,0)
 . . Q
"RTN","DGPFAA",187,0)
 . I $D(DGFLD("REVIEWDT")) S DGFDA(26.13,DGIENS,.06)=DGFLD("REVIEWDT")
"RTN","DGPFAA",188,0)
 . ;
"RTN","DGPFAA",189,0)
 . I $D(DGFLD("NARR")) S DGFDA(26.13,DGIENS,1)=$NA(DGFLD("NARR"))
"RTN","DGPFAA",190,0)
 . ;
"RTN","DGPFAA",191,0)
 . ;add in DBRS# data into .DGFDA ; dg*5.3*951
"RTN","DGPFAA",192,0)
 . ;   if all existing DBRS data was deleted, $D(DGPFA("DBRS#"))=0
"RTN","DGPFAA",193,0)
 . ;   DGPFA("ACTION")=History action code (may not be present)
"RTN","DGPFAA",194,0)
 . ;
"RTN","DGPFAA",195,0)
 . I DGPFUV'=-1,$L($T(AASGN^DGPFUT6)),+$$FLAG(DGFLD("FLAG")) D
"RTN","DGPFAA",196,0)
 . . N ACT S ACT=+DGFLD("ACTION")
"RTN","DGPFAA",197,0)
 . . I ACT=3 S DGPFUV=""
"RTN","DGPFAA",198,0)
 . . I ACT=5 S DGPFUV="d"
"RTN","DGPFAA",199,0)
 . . I ACT=7 S DGPFUV="D"
"RTN","DGPFAA",200,0)
 . . D AASGN^DGPFUT6(DGIENS,.DGPFA,.DGFDA,DGPFUV,.DGPFERR)
"RTN","DGPFAA",201,0)
 . . Q
"RTN","DGPFAA",202,0)
 . Q:$D(DGPFERR)
"RTN","DGPFAA",203,0)
 . ;
"RTN","DGPFAA",204,0)
 . ;determine if update or file should be called
"RTN","DGPFAA",205,0)
 . S UPD=(DGIENS["+") I 'UPD D
"RTN","DGPFAA",206,0)
 . . N I,J
"RTN","DGPFAA",207,0)
 . . S I=0 F J=0:0 S I=$O(DGFDA(26.131,I)) Q:I=""  I I["+" S UPD=1 Q
"RTN","DGPFAA",208,0)
 . . Q
"RTN","DGPFAA",209,0)
 . ;
"RTN","DGPFAA",210,0)
 . ;  variable needed for ^DD(26.131,.01,"DEL")
"RTN","DGPFAA",211,0)
 . I $G(DGPFA("ACTION"))=5 S DGDBRSE=1
"RTN","DGPFAA",212,0)
 . I 'UPD D
"RTN","DGPFAA",213,0)
 . . N DGERR,DIERR
"RTN","DGPFAA",214,0)
 . . D FILE^DIE("","DGFDA","DGERR")
"RTN","DGPFAA",215,0)
 . . I $D(DGERR) S DGIEN=0
"RTN","DGPFAA",216,0)
 . . ;DG*5.3*921 - Trigger an unsolicited update if a patient flag is updated
"RTN","DGPFAA",217,0)
 . . I '$D(DGERR) D UU(.DGPFA)
"RTN","DGPFAA",218,0)
 . . Q
"RTN","DGPFAA",219,0)
 . E  D
"RTN","DGPFAA",220,0)
 . . N DGERR,DIERR
"RTN","DGPFAA",221,0)
 . . D UPDATE^DIE("","DGFDA","DGFDAIEN","DGERR")
"RTN","DGPFAA",222,0)
 . . I $D(DGERR),DGIENS'="+1," S DGIEN=0
"RTN","DGPFAA",223,0)
 . . I '$D(DGERR),DGIENS="+1," S DGIEN=$G(DGFDAIEN(1))
"RTN","DGPFAA",224,0)
 . . Q
"RTN","DGPFAA",225,0)
 . Q
"RTN","DGPFAA",226,0)
 Q $S($G(DGIEN)>0:DGIEN,1:0)
"RTN","DGPFAA",227,0)
 ;
"RTN","DGPFAA",228,0)
STOALL(DGPFA,DGPFAH,DGPFERR,DGPFUV) ;
"RTN","DGPFAA",229,0)
 ;Store both the assignment and history record
"RTN","DGPFAA",230,0)
 ;This function acts as a wrapper around the $$STOASGN and $$STOHIST
"RTN","DGPFAA",231,0)
 ;filer calls.
"RTN","DGPFAA",232,0)
 ;
"RTN","DGPFAA",233,0)
 ;  INPUT PARAMETERS:
"RTN","DGPFAA",234,0)
 ;    DGPFA - (required) array of assignment values to be filed (see
"RTN","DGPFAA",235,0)
 ;            $$GETASGN^DGPFAA for valid array structure)
"RTN","DGPFAA",236,0)
 ;   DGPFAH - (required) array of assignment history values to be filed
"RTN","DGPFAA",237,0)
 ;            (see $$STOHIST^DGPFAAH for valid array structure)
"RTN","DGPFAA",238,0)
 ;  DGPFERR - (optional) passed by reference to contain error messages
"RTN","DGPFAA",239,0)
 ;   DGPFUV - (optional) generic flag, single character, intent allow
"RTN","DGPFAA",240,0)
 ;            calls to STOALL to flag special handling cases
"RTN","DGPFAA",241,0)
 ;            D: STOASGN - first, mark all existing DBRS records for
"RTN","DGPFAA",242,0)
 ;               delete in FDA().  DGPFUT62 processing continues
"RTN","DGPFAA",243,0)
 ;            d: STOASGN - first, mark all existing DBRS records for
"RTN","DGPFAA",244,0)
 ;               delete in FDA().  DGPFUT62 processing stops and exits
"RTN","DGPFAA",245,0)
 ;           -1: DGPFUV was not passed in
"RTN","DGPFAA",246,0)
 ;               [difference between null and '$D(DGPFUV)]
"RTN","DGPFAA",247,0)
 ;
"RTN","DGPFAA",248,0)
 ;  Output:
"RTN","DGPFAA",249,0)
 ;   Function Value - Returns circumflex("^") delimited results of
"RTN","DGPFAA",250,0)
 ;                    $$STOASGN^DGPFAA and $$STOHIST^DGPFAAH calls
"RTN","DGPFAA",251,0)
 ;          DGPFERR - Undefined on success, error message on failure
"RTN","DGPFAA",252,0)
 ;
"RTN","DGPFAA",253,0)
 N DGOIEN    ;existing assignment file IEN used for "roll-back"
"RTN","DGPFAA",254,0)
 N DGPFOA    ;existing assignment data array used for "roll-back"
"RTN","DGPFAA",255,0)
 N DGAIEN    ;assignment file IEN
"RTN","DGPFAA",256,0)
 N DGAHIEN   ;assignment history file IEN
"RTN","DGPFAA",257,0)
 N DGDFN     ;"DFN" value
"RTN","DGPFAA",258,0)
 N DGFLG     ;"FLAG" value
"RTN","DGPFAA",259,0)
 ;
"RTN","DGPFAA",260,0)
 S (DGAIEN,DGAHIEN)=0
"RTN","DGPFAA",261,0)
 S DGDFN=$P($G(DGPFA("DFN")),U,1)
"RTN","DGPFAA",262,0)
 S DGFLG=$P($G(DGPFA("FLAG")),U,1)
"RTN","DGPFAA",263,0)
 S DGPFUV=$$UV
"RTN","DGPFAA",264,0)
 S DGOIEN=$$FNDASGN^DGPFAA(DGDFN,DGFLG)
"RTN","DGPFAA",265,0)
 D   ;drops out of block if can't rollback or assignment filer fails
"RTN","DGPFAA",266,0)
 . I DGOIEN,'$$GETASGN^DGPFAA(DGOIEN,.DGPFOA,1) Q  ;can't rollback, so quit
"RTN","DGPFAA",267,0)
 . ;
"RTN","DGPFAA",268,0)
 . ;store the assignment
"RTN","DGPFAA",269,0)
 . I '$D(DGPFA("ACTION")) S DGPFA("ACTION")=+$G(DGPFAH("ACTION"))
"RTN","DGPFAA",270,0)
 . S DGAIEN=$$STOASGN^DGPFAA(.DGPFA,.DGPFERR,DGPFUV)
"RTN","DGPFAA",271,0)
 . I $D(DGPFERR) S DGAIEN=0
"RTN","DGPFAA",272,0)
 . Q:'DGAIEN  ;assignment filer failed, so quit
"RTN","DGPFAA",273,0)
 . ;
"RTN","DGPFAA",274,0)
 . ;store the assignment history
"RTN","DGPFAA",275,0)
 . S DGPFAH("ASSIGN")=DGAIEN
"RTN","DGPFAA",276,0)
 . S DGAHIEN=$$STOHIST^DGPFAAH(.DGPFAH,.DGPFERR)
"RTN","DGPFAA",277,0)
 . I $D(DGPFERR) S DGAHIEN=0
"RTN","DGPFAA",278,0)
 . I DGAHIEN=0 D    ;history filer failed, so rollback the assignment
"RTN","DGPFAA",279,0)
 . . I 'DGOIEN,'$D(DGPFOA) S DGPFOA("DFN")="@"
"RTN","DGPFAA",280,0)
 . . I $$ROLLBACK^DGPFAA2(DGAIEN,.DGPFOA) S DGAIEN=0
"RTN","DGPFAA",281,0)
 . . Q
"RTN","DGPFAA",282,0)
 . Q
"RTN","DGPFAA",283,0)
 Q $S(+$G(DGAHIEN)=0:0,1:DGAIEN_"^"_DGAHIEN)
"RTN","DGPFAA",284,0)
 ;
"RTN","DGPFAA",285,0)
UU(ARRY) ;Fire off "DGPF ASSIGN FLAG" protocol for UPDATED flags
"RTN","DGPFAA",286,0)
 ;ARRY("DFN")=DFN
"RTN","DGPFAA",287,0)
 N DGDFN,X
"RTN","DGPFAA",288,0)
 S DGDFN=+ARRY("DFN")
"RTN","DGPFAA",289,0)
 S X=+$O(^ORD(101,"B","DGPF ASSIGN FLAG",0))_";ORD(101,"
"RTN","DGPFAA",290,0)
 D:X EN1^XQOR
"RTN","DGPFAA",291,0)
 Q
"RTN","DGPFAA",292,0)
 ;
"RTN","DGPFAA",293,0)
DBRS ; DG*5.3*951
"RTN","DGPFAA",294,0)
 ;  add DBRS data to DGPFA()
"RTN","DGPFAA",295,0)
 N I,X,Y,IENS
"RTN","DGPFAA",296,0)
 S (I,IENS)=0
"RTN","DGPFAA",297,0)
 F  S IENS=$O(DGFLDS(26.131,IENS)) Q:IENS=""  D
"RTN","DGPFAA",298,0)
 . N ARR M ARR=DGFLDS(26.131,IENS)
"RTN","DGPFAA",299,0)
 . S I=I+1
"RTN","DGPFAA",300,0)
 . S X=ARR(.01,"I") S DGPFA("DBRS#",I)=X_U_X
"RTN","DGPFAA",301,0)
 . S (X,Y)=ARR(.02,"I") S:Y="" Y="<no value>"
"RTN","DGPFAA",302,0)
 . S DGPFA("DBRS OTHER",I)=X_U_Y
"RTN","DGPFAA",303,0)
 . S DGPFA("DBRS DATE",I)=ARR(.03,"I")_U_ARR(.03,"E")
"RTN","DGPFAA",304,0)
 . S DGPFA("DBRS SITE",I)=ARR(.04,"I")_U_ARR(.04,"E")
"RTN","DGPFAA",305,0)
 . Q
"RTN","DGPFAA",306,0)
 Q
"RTN","DGPFAA",307,0)
 ;
"RTN","DGPFAA",308,0)
FLAG(VARPTR) ;
"RTN","DGPFAA",309,0)
 ;  Verify that variable flag pointer is BEHAVIORAL, Category I
"RTN","DGPFAA",310,0)
 ;  DGPFIN - required - variable pointer to 26.11 / 26.15
"RTN","DGPFAA",311,0)
 Q $$FLAG^DGPFUT6(VARPTR,"BEHAVIORAL","I")
"RTN","DGPFAA",312,0)
 ;
"RTN","DGPFAA",313,0)
UV() ;  return edited value for DGPFUV
"RTN","DGPFAA",314,0)
 ;   if '$D(DGPFUV) then set DGPFUV=-1
"RTN","DGPFAA",315,0)
 ;   also called from ^DGPFUT62
"RTN","DGPFAA",316,0)
 N Y,RET
"RTN","DGPFAA",317,0)
 S RET=-1
"RTN","DGPFAA",318,0)
 S Y=DGPFUV I $D(DGPFUV)#2 D
"RTN","DGPFAA",319,0)
 . I $L(Y)<2 S RET=$S("dD"[Y:Y,1:"") Q
"RTN","DGPFAA",320,0)
 . I Y["d" S RET="d" Q
"RTN","DGPFAA",321,0)
 . I (Y["AD")!(Y["DA") S RET="D" Q
"RTN","DGPFAA",322,0)
 . S RET=$S(Y["D":"D",1:"")
"RTN","DGPFAA",323,0)
 . Q
"RTN","DGPFAA",324,0)
 Q RET
"RTN","DGPFAA1")
0^5^B1552435^B954394
"RTN","DGPFAA1",1,0)
DGPFAA1 ;ALB/RPM - PRF ASSIGNMENT VALIDATION DATA ; 02/06/03
"RTN","DGPFAA1",2,0)
 ;;5.3;Registration;**425,951**;Aug 13, 1993;Build 135
"RTN","DGPFAA1",3,0)
 ;     Last Edited: SHRPE/sgm - Jul 13, 2018 17:20
"RTN","DGPFAA1",4,0)
 ;
"RTN","DGPFAA1",5,0)
 ; XREF+off = ;;p3;p4;p5;p6;p7  for ^DD(26.13)
"RTN","DGPFAA1",6,0)
 ;     p3=array node name          p4=field#
"RTN","DGPFAA1",7,0)
 ;     p5=required param           p7=description
"RTN","DGPFAA1",8,0)
 ;     p6=0 for single value field, 1 for wp fields
"RTN","DGPFAA1",9,0)
 ;
"RTN","DGPFAA1",10,0)
 ; XREF+off = ;;p3;p4;p5;p6;p7  for ^DD(26.131)
"RTN","DGPFAA1",11,0)
 ;     p3=array node name          p4=field#
"RTN","DGPFAA1",12,0)
 ;     p5=required param           p7=description
"RTN","DGPFAA1",13,0)
 ;     p6=0 for single value field, 1 for wp fields
"RTN","DGPFAA1",14,0)
 ;
"RTN","DGPFAA1",15,0)
XREF ;
"RTN","DGPFAA1",16,0)
 ;;DFN;.01;1;0;patient IEN
"RTN","DGPFAA1",17,0)
 ;;FLAG;.02;1;0;pointer to 26.11 or 26.15
"RTN","DGPFAA1",18,0)
 ;;STATUS;.03;1;0;active/inactive
"RTN","DGPFAA1",19,0)
 ;;OWNER;.04;1;0;site that controls the assignment
"RTN","DGPFAA1",20,0)
 ;;ORIGSITE;.05;1;0;site that created the assignment
"RTN","DGPFAA1",21,0)
 ;;REVIEWDT;.06;0;0;review date
"RTN","DGPFAA1",22,0)
 ;;NARR;1;1;1;assignment narrative
"RTN","DGPFAA1",23,0)
 ;;
"RTN","DGPFAA1",24,0)
 ;
"RTN","DGPFAA1",25,0)
DBRS ;  only appropriate for Category I Behavioral Assignments
"RTN","DGPFAA1",26,0)
 ;;DBRS#;.01;0;0;DBRS number
"RTN","DGPFAA1",27,0)
 ;;DBRS OTHER;.02;0;0;short description
"RTN","DGPFAA1",28,0)
 ;;DBRS DATE;.03;0;0;date DBRS record created
"RTN","DGPFAA1",29,0)
 ;;DBRS SITE;.04;0;0;site that created DBRS record
"RTN","DGPFAA2")
0^35^B33264279^B31192734
"RTN","DGPFAA2",1,0)
DGPFAA2 ;ALB/KCL - PRF ASSIGNMENT API'S CONTINUED ; 3/22/05
"RTN","DGPFAA2",2,0)
 ;;5.3;Registration;**425,554,650,951**;Aug 13, 1993;Build 135
"RTN","DGPFAA2",3,0)
 ;     Last Edited: SHRPE/SGM - Jul 24,2018 11:57
"RTN","DGPFAA2",4,0)
 ;
"RTN","DGPFAA2",5,0)
 ;no direct entry
"RTN","DGPFAA2",6,0)
 QUIT
"RTN","DGPFAA2",7,0)
 ;
"RTN","DGPFAA2",8,0)
ADDOK(DGDFN,DGFLG,DGEROOT) ;This function will be used to determine if a flag may be assigned to a patient.
"RTN","DGPFAA2",9,0)
 ;
"RTN","DGPFAA2",10,0)
 ;  Input:
"RTN","DGPFAA2",11,0)
 ;   DGDFN - (required) IEN of patient in PATIENT (#2) file
"RTN","DGPFAA2",12,0)
 ;   DGFLG - (required) IEN of patient record flag in PRF NATIONAL
"RTN","DGPFAA2",13,0)
 ;           FLAG (#26.15) file or PRF LOCAL FLAG (#26.11) file
"RTN","DGPFAA2",14,0)
 ;           [ex: "1;DGPF(26.15,"]
"RTN","DGPFAA2",15,0)
 ; DGEROOT - (optional) closed root array name (i.e. "DGERROR") for error
"RTN","DGPFAA2",16,0)
 ;           dialog returned from BLD^DIALOG.  If not passed, error
"RTN","DGPFAA2",17,0)
 ;           dialog is returned in ^TMP("DIERR",$J) global.
"RTN","DGPFAA2",18,0)
 ;
"RTN","DGPFAA2",19,0)
 ; Output:
"RTN","DGPFAA2",20,0)
 ;  Function Value - returns 1 on success, 0 on failure
"RTN","DGPFAA2",21,0)
 ;       DGEROOT() - error output array from BLD^DIALOG
"RTN","DGPFAA2",22,0)
 ;
"RTN","DGPFAA2",23,0)
 N DGRSLT   ;function result
"RTN","DGPFAA2",24,0)
 N DGFARRY  ;contains flag array
"RTN","DGPFAA2",25,0)
 K DGFARRY
"RTN","DGPFAA2",26,0)
 N DIERR    ;var returned from BLD^DIALOG
"RTN","DGPFAA2",27,0)
 ;
"RTN","DGPFAA2",28,0)
 ;init error output array if passed
"RTN","DGPFAA2",29,0)
 S DGEROOT=$G(DGEROOT)
"RTN","DGPFAA2",30,0)
 I DGEROOT]"" K @DGEROOT
"RTN","DGPFAA2",31,0)
 ;
"RTN","DGPFAA2",32,0)
 S DGRSLT=0
"RTN","DGPFAA2",33,0)
 ;
"RTN","DGPFAA2",34,0)
 D  ;drops out of block on failure
"RTN","DGPFAA2",35,0)
 . ;
"RTN","DGPFAA2",36,0)
 . ;quit if DFN invalid
"RTN","DGPFAA2",37,0)
 . I '$G(DGDFN)!'$D(^DPT(+$G(DGDFN),0)) D  Q
"RTN","DGPFAA2",38,0)
 . . D BLD^DIALOG(261110,,,DGEROOT,"F")
"RTN","DGPFAA2",39,0)
 . ;
"RTN","DGPFAA2",40,0)
 . ;quit if flag ien invalid
"RTN","DGPFAA2",41,0)
 . I '$$TESTVAL^DGPFUT(26.13,.02,DGFLG) D  Q
"RTN","DGPFAA2",42,0)
 . . D BLD^DIALOG(261111,,,DGEROOT,"F")
"RTN","DGPFAA2",43,0)
 . ;
"RTN","DGPFAA2",44,0)
 . ;quit if flag already assigned to patient
"RTN","DGPFAA2",45,0)
 . I $$FNDASGN^DGPFAA(DGDFN,DGFLG) D  Q
"RTN","DGPFAA2",46,0)
 . . D BLD^DIALOG(261112,,,DGEROOT,"F")
"RTN","DGPFAA2",47,0)
 . ;
"RTN","DGPFAA2",48,0)
 . ;quit if flag STATUS is INACTIVE
"RTN","DGPFAA2",49,0)
 . I $$GETFLAG^DGPFUT1(DGFLG,.DGFARRY),('+$G(DGFARRY("STAT"))) D  Q
"RTN","DGPFAA2",50,0)
 . . D BLD^DIALOG(261113,,,DGEROOT,"F")
"RTN","DGPFAA2",51,0)
 . ;
"RTN","DGPFAA2",52,0)
 . ;quit if no TIU PN TITLE IEN is found for the record flag
"RTN","DGPFAA2",53,0)
 . I '+$P($G(DGFARRY("TIUTITLE")),U) D  Q
"RTN","DGPFAA2",54,0)
 . . D BLD^DIALOG(261114,,,DGEROOT,"F")
"RTN","DGPFAA2",55,0)
 . ;
"RTN","DGPFAA2",56,0)
 . ;success
"RTN","DGPFAA2",57,0)
 . S DGRSLT=1
"RTN","DGPFAA2",58,0)
 ;
"RTN","DGPFAA2",59,0)
 Q DGRSLT
"RTN","DGPFAA2",60,0)
 ;
"RTN","DGPFAA2",61,0)
EDTOK(DGPFA,DGORIG,DGEROOT) ;This function will be used to determine if a flag assignment may be edited.
"RTN","DGPFAA2",62,0)
 ;
"RTN","DGPFAA2",63,0)
 ;  Input:
"RTN","DGPFAA2",64,0)
 ;    DGPFA - (required) array containing the flag assignment values
"RTN","DGPFAA2",65,0)
 ;   DGORIG - (optional) originating site [default = +$$SITE^VASITE()] 
"RTN","DGPFAA2",66,0)
 ;  DGEROOT - (optional) closed root array name (i.e. "DGERROR") for
"RTN","DGPFAA2",67,0)
 ;            error dialog returned from BLD^DIALOG.  If not passed,
"RTN","DGPFAA2",68,0)
 ;            error dialog is returned in ^TMP("DIERR",$J) global.
"RTN","DGPFAA2",69,0)
 ;
"RTN","DGPFAA2",70,0)
 ; Output:
"RTN","DGPFAA2",71,0)
 ;  Function Value - returns 1 on success, 0 on failure
"RTN","DGPFAA2",72,0)
 ;       DGEROOT() - error output array from BLD^DIALOG
"RTN","DGPFAA2",73,0)
 ;
"RTN","DGPFAA2",74,0)
 N DGRSLT   ;function result
"RTN","DGPFAA2",75,0)
 N DGFARRY  ;contains flag array
"RTN","DGPFAA2",76,0)
 K DGFARRY
"RTN","DGPFAA2",77,0)
 N DIERR    ;var returned from BLD^DIALOG
"RTN","DGPFAA2",78,0)
 ;
"RTN","DGPFAA2",79,0)
 ;init error output array if passed
"RTN","DGPFAA2",80,0)
 S DGEROOT=$G(DGEROOT)
"RTN","DGPFAA2",81,0)
 I DGEROOT]"" K @DGEROOT
"RTN","DGPFAA2",82,0)
 ;
"RTN","DGPFAA2",83,0)
 S DGRSLT=0
"RTN","DGPFAA2",84,0)
 ;
"RTN","DGPFAA2",85,0)
 D  ;drops out of block on failure
"RTN","DGPFAA2",86,0)
 . ;
"RTN","DGPFAA2",87,0)
 . ;quit if current site is not the owner site
"RTN","DGPFAA2",88,0)
 . I +$G(DGORIG)'>0 S DGORIG=+$$SITE^VASITE()
"RTN","DGPFAA2",89,0)
 . I +$G(DGPFA("OWNER"))'=DGORIG D  Q
"RTN","DGPFAA2",90,0)
 . . D BLD^DIALOG(261115,,,DGEROOT,"F")
"RTN","DGPFAA2",91,0)
 . ;
"RTN","DGPFAA2",92,0)
 . ;quit if flag STATUS is INACTIVE
"RTN","DGPFAA2",93,0)
 . I $$GETFLAG^DGPFUT1($P($G(DGPFA("FLAG")),U),.DGFARRY)
"RTN","DGPFAA2",94,0)
 . I '+$G(DGFARRY("STAT")) D  Q
"RTN","DGPFAA2",95,0)
 . . D BLD^DIALOG(261113,,,DGEROOT,"F")
"RTN","DGPFAA2",96,0)
 . ;
"RTN","DGPFAA2",97,0)
 . ;quit if no TIU PN TITLE is found for the record flag
"RTN","DGPFAA2",98,0)
 . I '+$P($G(DGFARRY("TIUTITLE")),U) D  Q
"RTN","DGPFAA2",99,0)
 . . D BLD^DIALOG(261114,,,DGEROOT,"F")
"RTN","DGPFAA2",100,0)
 . ;
"RTN","DGPFAA2",101,0)
 . ;success
"RTN","DGPFAA2",102,0)
 . S DGRSLT=1
"RTN","DGPFAA2",103,0)
 ;
"RTN","DGPFAA2",104,0)
 Q DGRSLT
"RTN","DGPFAA2",105,0)
 ;
"RTN","DGPFAA2",106,0)
ACTIONOK(DGPFA,DGACT,DGEROOT) ;This function will be used to verify that an assignment edit ACTION is appropriate for the current assignment STATUS.
"RTN","DGPFAA2",107,0)
 ;
"RTN","DGPFAA2",108,0)
 ;  Input:
"RTN","DGPFAA2",109,0)
 ;    DGPFA - (required) assignment array data from current record
"RTN","DGPFAA2",110,0)
 ;    DGACT - Assignment edit action in internal format
"RTN","DGPFAA2",111,0)
 ;            [1:NEW ASSIGNMENT,2:CONTINUE,3:INACTIVATE,4:REACTIVATE,5:ENTERED IN ERROR]
"RTN","DGPFAA2",112,0)
 ; DGEROOT - (optional) closed root array name (i.e. "DGERROR") for
"RTN","DGPFAA2",113,0)
 ;           error dialog returned from BLD^DIALOG. If not passed, error
"RTN","DGPFAA2",114,0)
 ;           dialog is returned in ^TMP("DIERR",$J) global.
"RTN","DGPFAA2",115,0)
 ;
"RTN","DGPFAA2",116,0)
 ; Output:
"RTN","DGPFAA2",117,0)
 ;  Function Value - returns 1 on success, 0 on failure
"RTN","DGPFAA2",118,0)
 ;         DGEROOT() - error output array from BLD^DIALOG
"RTN","DGPFAA2",119,0)
 ;
"RTN","DGPFAA2",120,0)
 N DGRSLT   ;function result
"RTN","DGPFAA2",121,0)
 N DGSTAT   ;current assignment status
"RTN","DGPFAA2",122,0)
 N DIERR    ;var returned from BLD^DIALOG
"RTN","DGPFAA2",123,0)
 ;
"RTN","DGPFAA2",124,0)
 ;init error output array if passed
"RTN","DGPFAA2",125,0)
 S DGEROOT=$G(DGEROOT)
"RTN","DGPFAA2",126,0)
 I DGEROOT]"" K @DGEROOT
"RTN","DGPFAA2",127,0)
 ;
"RTN","DGPFAA2",128,0)
 S DGACT=+$G(DGACT)
"RTN","DGPFAA2",129,0)
 S DGSTAT=$P($G(DGPFA("STATUS")),U,1)
"RTN","DGPFAA2",130,0)
 S DGRSLT=0
"RTN","DGPFAA2",131,0)
 ;
"RTN","DGPFAA2",132,0)
 D  ;drops out of block on failure
"RTN","DGPFAA2",133,0)
 . ;
"RTN","DGPFAA2",134,0)
 . ;is ACTION valid?
"RTN","DGPFAA2",135,0)
 . I '$$TESTVAL^DGPFUT(26.14,.03,DGACT),'DGSTAT?1N D  Q
"RTN","DGPFAA2",136,0)
 . . D BLD^DIALOG(261118,,,DGEROOT,"F")
"RTN","DGPFAA2",137,0)
 . ;
"RTN","DGPFAA2",138,0)
 . ;must not CONTINUE inactive assignments
"RTN","DGPFAA2",139,0)
 . I DGACT=2,DGSTAT=0 D  Q
"RTN","DGPFAA2",140,0)
 . . D BLD^DIALOG(261121,,,DGEROOT,"F")
"RTN","DGPFAA2",141,0)
 . ;
"RTN","DGPFAA2",142,0)
 . ;must not INACTIVATE inactive assignments
"RTN","DGPFAA2",143,0)
 . I DGACT=3,DGSTAT=0 D  Q
"RTN","DGPFAA2",144,0)
 . . D BLD^DIALOG(261122,,,DGEROOT,"F")
"RTN","DGPFAA2",145,0)
 . ;
"RTN","DGPFAA2",146,0)
 . ;must not ENTERED IN ERROR inactive assignments
"RTN","DGPFAA2",147,0)
 . I DGACT=5,DGSTAT=0 D  Q
"RTN","DGPFAA2",148,0)
 . . D BLD^DIALOG(261123,,,DGEROOT,"F")
"RTN","DGPFAA2",149,0)
 . ;
"RTN","DGPFAA2",150,0)
 . ;must not REACTIVATE active assignments
"RTN","DGPFAA2",151,0)
 . I DGACT=4,DGSTAT=1 D  Q
"RTN","DGPFAA2",152,0)
 . . D BLD^DIALOG(261124,,,DGEROOT,"F")
"RTN","DGPFAA2",153,0)
 . ;
"RTN","DGPFAA2",154,0)
 . ;success
"RTN","DGPFAA2",155,0)
 . S DGRSLT=1
"RTN","DGPFAA2",156,0)
 ;
"RTN","DGPFAA2",157,0)
 Q DGRSLT
"RTN","DGPFAA2",158,0)
 ;
"RTN","DGPFAA2",159,0)
CHGOWN(DGPFA,DGORIG,DGEROOT) ;This function is used to determine if a site is allowed to change ownership of a record flag assignment?
"RTN","DGPFAA2",160,0)
 ;
"RTN","DGPFAA2",161,0)
 ;  Input:
"RTN","DGPFAA2",162,0)
 ;    DGPFA - (required) array containing the flag assignment values
"RTN","DGPFAA2",163,0)
 ;   DGORIG - (optional) originating site [default = +$$SITE^VASITE()] 
"RTN","DGPFAA2",164,0)
 ;  DGEROOT - (optional) closed root array name (i.e. "DGERROR") for
"RTN","DGPFAA2",165,0)
 ;            error dialog returned from BLD^DIALOG.  If not passed,
"RTN","DGPFAA2",166,0)
 ;            error dialog is returned in ^TMP("DIERR",$J) global.
"RTN","DGPFAA2",167,0)
 ;
"RTN","DGPFAA2",168,0)
 ; Output:
"RTN","DGPFAA2",169,0)
 ;  Function Value - returns 1 on success, 0 on failure
"RTN","DGPFAA2",170,0)
 ;       DGEROOT() - error output array from BLD^DIALOG
"RTN","DGPFAA2",171,0)
 ;
"RTN","DGPFAA2",172,0)
 N DGRSLT   ;function result
"RTN","DGPFAA2",173,0)
 N DIERR    ;var returned from BLD^DIALOG
"RTN","DGPFAA2",174,0)
 ;
"RTN","DGPFAA2",175,0)
 ;init error output array if passed
"RTN","DGPFAA2",176,0)
 S DGEROOT=$G(DGEROOT)
"RTN","DGPFAA2",177,0)
 I DGEROOT]"" K @DGEROOT
"RTN","DGPFAA2",178,0)
 ;
"RTN","DGPFAA2",179,0)
 S:(+$G(DGORIG)'>0) DGORIG=(+$$SITE^VASITE())
"RTN","DGPFAA2",180,0)
 S DGRSLT=0
"RTN","DGPFAA2",181,0)
 ;
"RTN","DGPFAA2",182,0)
 D  ;drops out of block on failure
"RTN","DGPFAA2",183,0)
 . ;
"RTN","DGPFAA2",184,0)
 . ;ORIGINATING SITE must be OWNER and flag must be ACTIVE
"RTN","DGPFAA2",185,0)
 . Q:('$$EDTOK(.DGPFA,DGORIG,.DGEROOT))
"RTN","DGPFAA2",186,0)
 . ;
"RTN","DGPFAA2",187,0)
 . ;can't CHANGE OWNERSHIP for an INACTIVE assignment
"RTN","DGPFAA2",188,0)
 . I '+$G(DGPFA("STATUS")) D  Q
"RTN","DGPFAA2",189,0)
 . . D BLD^DIALOG(261117,,,DGEROOT,"F")
"RTN","DGPFAA2",190,0)
 . ;
"RTN","DGPFAA2",191,0)
 . ;success
"RTN","DGPFAA2",192,0)
 . S DGRSLT=1
"RTN","DGPFAA2",193,0)
 ;
"RTN","DGPFAA2",194,0)
 Q DGRSLT
"RTN","DGPFAA2",195,0)
 ;
"RTN","DGPFAA2",196,0)
ROLLBACK(DGAIEN,DGPFOA) ;Roll back an assignment record
"RTN","DGPFAA2",197,0)
 ;
"RTN","DGPFAA2",198,0)
 ;  Input:
"RTN","DGPFAA2",199,0)
 ;    DGAIEN - IEN of assignment to roll back in the PRF ASSIGNMENT
"RTN","DGPFAA2",200,0)
 ;             (#26.13) file
"RTN","DGPFAA2",201,0)
 ;    DGPFOA - Assignment data array prior to record modification
"RTN","DGPFAA2",202,0)
 ;
"RTN","DGPFAA2",203,0)
 ;  Output:
"RTN","DGPFAA2",204,0)
 ;    Function value - 1 on successful rollback, 0 on failure
"RTN","DGPFAA2",205,0)
 ;
"RTN","DGPFAA2",206,0)
 N DGRSLT   ;function result
"RTN","DGPFAA2",207,0)
 ;
"RTN","DGPFAA2",208,0)
 S DGRSLT=0
"RTN","DGPFAA2",209,0)
 I +$G(DGAIEN),$D(^DGPF(26.13,DGAIEN)),$D(DGPFOA) D
"RTN","DGPFAA2",210,0)
 . N DGIENS
"RTN","DGPFAA2",211,0)
 . S DGIENS=DGAIEN_","
"RTN","DGPFAA2",212,0)
 . I $G(DGPFOA("DFN"))="@" D
"RTN","DGPFAA2",213,0)
 . . N DGEROOT,DGFDA
"RTN","DGPFAA2",214,0)
 . . S DGFDA(26.13,DGIENS,.01)="@"
"RTN","DGPFAA2",215,0)
 . . D FILE^DIE("","DGFDA","DGEROOT")
"RTN","DGPFAA2",216,0)
 . . I '$D(DGEROOT) S DGRSLT=1
"RTN","DGPFAA2",217,0)
 . . Q
"RTN","DGPFAA2",218,0)
 . E  D
"RTN","DGPFAA2",219,0)
 . . ;  DG*5.3*951 - DBRS# multiple, remove all DBRS# before rollback
"RTN","DGPFAA2",220,0)
 . . D DEL^DGPFUT6(DGAIEN,26.13)
"RTN","DGPFAA2",221,0)
 . . I $$STOASGN^DGPFAA(.DGPFOA,.DGEROOT,1),'$D(DGEROOT) S DGRSLT=1
"RTN","DGPFAA2",222,0)
 . . Q
"RTN","DGPFAA2",223,0)
 . Q
"RTN","DGPFAA2",224,0)
 Q DGRSLT
"RTN","DGPFAA3")
0^25^B37090841^B36294863
"RTN","DGPFAA3",1,0)
DGPFAA3 ;ALB/RPM - PRF ASSIGNMENT API'S CONTINUED ; 3/28/03
"RTN","DGPFAA3",2,0)
 ;;5.3;Registration;**425,650,911,951**;Aug 13, 1993;Build 135
"RTN","DGPFAA3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPFAA3",4,0)
 ;
"RTN","DGPFAA3",5,0)
 Q  ;no direct entry
"RTN","DGPFAA3",6,0)
 ;
"RTN","DGPFAA3",7,0)
NOTIFYDT(DGFLG,DGRDT) ;calculate the notification date
"RTN","DGPFAA3",8,0)
 ;
"RTN","DGPFAA3",9,0)
 ;  Input:
"RTN","DGPFAA3",10,0)
 ;    DGFLG - (required) pointer to PRF LOCAL FLAG (#26.11) file or 
"RTN","DGPFAA3",11,0)
 ;            PRF NATIONAL FLAG (#26.15) file
"RTN","DGPFAA3",12,0)
 ;    DGRDT - (required) review date in FM format
"RTN","DGPFAA3",13,0)
 ;
"RTN","DGPFAA3",14,0)
 ;  Output:
"RTN","DGPFAA3",15,0)
 ;   Function Value - notification date in FM format on success, 0 on
"RTN","DGPFAA3",16,0)
 ;                    failure.
"RTN","DGPFAA3",17,0)
 ;
"RTN","DGPFAA3",18,0)
 N DGFLGA   ;flag file data array
"RTN","DGPFAA3",19,0)
 N DGNDT    ;function value
"RTN","DGPFAA3",20,0)
 ;
"RTN","DGPFAA3",21,0)
 S DGNDT=0
"RTN","DGPFAA3",22,0)
 I $G(DGFLG)]"",+$G(DGRDT)>0 D
"RTN","DGPFAA3",23,0)
 . ;
"RTN","DGPFAA3",24,0)
 . ;Retrieve the flag data array
"RTN","DGPFAA3",25,0)
 . Q:'$$GETFLAG^DGPFUT1(DGFLG,.DGFLGA)
"RTN","DGPFAA3",26,0)
 . ;
"RTN","DGPFAA3",27,0)
 . ;must have a review frequency 
"RTN","DGPFAA3",28,0)
 . Q:(+$G(DGFLGA("REVFREQ"))=0)
"RTN","DGPFAA3",29,0)
 . ;
"RTN","DGPFAA3",30,0)
 . ;determine notification date
"RTN","DGPFAA3",31,0)
 . S DGFLGA("NOTIDAYS")=$G(DGFLGA("NOTIDAYS"),0)
"RTN","DGPFAA3",32,0)
 . S DGRDT=+$$FMTH^XLFDT(DGRDT)
"RTN","DGPFAA3",33,0)
 . S DGNDT=+$$HTFM^XLFDT(DGRDT-DGFLGA("NOTIDAYS"))
"RTN","DGPFAA3",34,0)
 ;
"RTN","DGPFAA3",35,0)
 Q DGNDT
"RTN","DGPFAA3",36,0)
 ;
"RTN","DGPFAA3",37,0)
GETRDT(DGFLG,DGADT) ;calculate the review date
"RTN","DGPFAA3",38,0)
 ;
"RTN","DGPFAA3",39,0)
 ;  Input:
"RTN","DGPFAA3",40,0)
 ;    DGFLG - (required) pointer to PRF LOCAL FLAG (#26.11) file or 
"RTN","DGPFAA3",41,0)
 ;            PRF NATIONAL FLAG (#26.15) file
"RTN","DGPFAA3",42,0)
 ;    DGADT - (required) assignment date in FM format
"RTN","DGPFAA3",43,0)
 ;
"RTN","DGPFAA3",44,0)
 ;  Output:
"RTN","DGPFAA3",45,0)
 ;   Function Value - review date in FM format on success, 0 on failure
"RTN","DGPFAA3",46,0)
 ;
"RTN","DGPFAA3",47,0)
 N DGFLGA   ;flag file data array
"RTN","DGPFAA3",48,0)
 N DGRDT  ;function value
"RTN","DGPFAA3",49,0)
 ;
"RTN","DGPFAA3",50,0)
 S DGRDT=0
"RTN","DGPFAA3",51,0)
 I $G(DGFLG)]"",+$G(DGADT)>0 D
"RTN","DGPFAA3",52,0)
 . ;
"RTN","DGPFAA3",53,0)
 . ;Retrieve the flag data array
"RTN","DGPFAA3",54,0)
 . Q:'$$GETFLAG^DGPFUT1(DGFLG,.DGFLGA)
"RTN","DGPFAA3",55,0)
 . ;
"RTN","DGPFAA3",56,0)
 . ;must have a review frequency
"RTN","DGPFAA3",57,0)
 . Q:(+$G(DGFLGA("REVFREQ"))=0)
"RTN","DGPFAA3",58,0)
 . ;
"RTN","DGPFAA3",59,0)
 . ;determine review date
"RTN","DGPFAA3",60,0)
 . S DGADT=+$$FMTH^XLFDT(DGADT)
"RTN","DGPFAA3",61,0)
 . S DGRDT=+$$HTFM^XLFDT(DGADT+DGFLGA("REVFREQ"))
"RTN","DGPFAA3",62,0)
 ;
"RTN","DGPFAA3",63,0)
 Q DGRDT
"RTN","DGPFAA3",64,0)
 ;
"RTN","DGPFAA3",65,0)
LOCK(DGAIEN) ;Lock assignment record.
"RTN","DGPFAA3",66,0)
 ;
"RTN","DGPFAA3",67,0)
 ; This function is used to prevent another process from editing a
"RTN","DGPFAA3",68,0)
 ; patient's record flag assignment.
"RTN","DGPFAA3",69,0)
 ;
"RTN","DGPFAA3",70,0)
 ;  Input:
"RTN","DGPFAA3",71,0)
 ;   DGAIEN - IEN of record in the PRF ASSIGNMENT (#26.13) file
"RTN","DGPFAA3",72,0)
 ;
"RTN","DGPFAA3",73,0)
 ; Output:
"RTN","DGPFAA3",74,0)
 ;  Function Value - Returns 1 if the lock was successful, 0 otherwise
"RTN","DGPFAA3",75,0)
 ;
"RTN","DGPFAA3",76,0)
 I $G(DGAIEN) L +^DGPF(26.13,DGAIEN):10
"RTN","DGPFAA3",77,0)
 ;
"RTN","DGPFAA3",78,0)
 Q $T
"RTN","DGPFAA3",79,0)
 ;
"RTN","DGPFAA3",80,0)
UNLOCK(DGAIEN) ;Unlock assignment record.
"RTN","DGPFAA3",81,0)
 ;
"RTN","DGPFAA3",82,0)
 ; This procedure is used to release the lock created by $$LOCK.
"RTN","DGPFAA3",83,0)
 ;
"RTN","DGPFAA3",84,0)
 ;  Input:
"RTN","DGPFAA3",85,0)
 ;   DGAIEN - IEN of record in the PRF ASSIGNMENT (#26.13) file
"RTN","DGPFAA3",86,0)
 ;
"RTN","DGPFAA3",87,0)
 ; Output: None
"RTN","DGPFAA3",88,0)
 ;
"RTN","DGPFAA3",89,0)
 I $G(DGAIEN) L -^DGPF(26.13,DGAIEN)
"RTN","DGPFAA3",90,0)
 ;
"RTN","DGPFAA3",91,0)
 Q
"RTN","DGPFAA3",92,0)
 ;
"RTN","DGPFAA3",93,0)
STOHL7(DGPFA,DGPFAH,DGEROOT,DGPFUV) ;store a valid assignment from HL7 message
"RTN","DGPFAA3",94,0)
 ; This function files an assignment if the originating site is 
"RTN","DGPFAA3",95,0)
 ; authorized to update an existing record and if the action is valid for
"RTN","DGPFAA3",96,0)
 ; the status of an existing record. 
"RTN","DGPFAA3",97,0)
 ;
"RTN","DGPFAA3",98,0)
 ;  Input:
"RTN","DGPFAA3",99,0)
 ;    DGPFA - (required) array of assignment values to be filed (see
"RTN","DGPFAA3",100,0)
 ;            $$GETASGN^DGPFAA for valid array structure)
"RTN","DGPFAA3",101,0)
 ;   DGPFAH - (required) array of assignment history values to be filed
"RTN","DGPFAA3",102,0)
 ;            (see $$STOHIST^DGPFAAH for valid array structure)
"RTN","DGPFAA3",103,0)
 ;  DGEROOT - (optional) closed root array name (i.e. "DGERROR") for
"RTN","DGPFAA3",104,0)
 ;            error dialog returned from BLD^DIALOG. If not passed, error
"RTN","DGPFAA3",105,0)
 ;            dialog is returned in ^TMP("DIERR",$J) global.
"RTN","DGPFAA3",106,0)
 ;   DGPFUV - (optional) see STOALL^DGPFAA
"RTN","DGPFAA3",107,0)
 ;
"RTN","DGPFAA3",108,0)
 ;  Output:
"RTN","DGPFAA3",109,0)
 ;   Function Value - Returns 1 on success, 0 on failure
"RTN","DGPFAA3",110,0)
 ;        DGEROOT() - error output array from BLD^DIALOG
"RTN","DGPFAA3",111,0)
 ;
"RTN","DGPFAA3",112,0)
 N DGDFN
"RTN","DGPFAA3",113,0)
 N DGFLG
"RTN","DGPFAA3",114,0)
 N DGORIG
"RTN","DGPFAA3",115,0)
 N DGACT
"RTN","DGPFAA3",116,0)
 N DGMSG
"RTN","DGPFAA3",117,0)
 N DGRSLT
"RTN","DGPFAA3",118,0)
 N DIERR  ;var returned from BLD^DIALOG
"RTN","DGPFAA3",119,0)
 ;
"RTN","DGPFAA3",120,0)
 S DGDFN=+$G(DGPFA("DFN"))
"RTN","DGPFAA3",121,0)
 S DGFLG=$G(DGPFA("FLAG"))
"RTN","DGPFAA3",122,0)
 S DGORIG=+$G(DGPFA("SNDFAC"))
"RTN","DGPFAA3",123,0)
 S DGACT=+$G(DGPFAH("ACTION"))
"RTN","DGPFAA3",124,0)
 ;
"RTN","DGPFAA3",125,0)
 S DGRSLT=0
"RTN","DGPFAA3",126,0)
 ;
"RTN","DGPFAA3",127,0)
 D  ;drops out of block on failure
"RTN","DGPFAA3",128,0)
 . ;
"RTN","DGPFAA3",129,0)
 . ;check input params
"RTN","DGPFAA3",130,0)
 . I DGDFN'>0 D BLD^DIALOG(261110,,,DGEROOT,"F") Q
"RTN","DGPFAA3",131,0)
 . I DGFLG']"" D BLD^DIALOG(261111,,,DGEROOT,"F") Q
"RTN","DGPFAA3",132,0)
 . I DGORIG'>0 D BLD^DIALOG(261125,,,DGEROOT,"F") Q
"RTN","DGPFAA3",133,0)
 . I DGACT'>0 D BLD^DIALOG(261118,,,DGEROOT,"F") Q
"RTN","DGPFAA3",134,0)
 . ;
"RTN","DGPFAA3",135,0)
 . ;new assignment action
"RTN","DGPFAA3",136,0)
 . I DGACT=1,'$$ADDOK^DGPFAA2(DGDFN,DGFLG,DGEROOT) Q
"RTN","DGPFAA3",137,0)
 . ;
"RTN","DGPFAA3",138,0)
 . ;all other actions
"RTN","DGPFAA3",139,0)
 . I DGACT'=1,'$$HL7EDTOK(DGDFN,DGFLG,DGORIG,DGACT,DGEROOT) Q
"RTN","DGPFAA3",140,0)
 . ;
"RTN","DGPFAA3",141,0)
 . ;file the assignment and history
"RTN","DGPFAA3",142,0)
 . I '$$STOALL^DGPFAA(.DGPFA,.DGPFAH,.DGMSG,$G(DGPFUV))!($D(DGMSG)) D  Q
"RTN","DGPFAA3",143,0)
 . . D BLD^DIALOG(261120,,,DGEROOT,"F")
"RTN","DGPFAA3",144,0)
 . ;
"RTN","DGPFAA3",145,0)
 . ;success
"RTN","DGPFAA3",146,0)
 . S DGRSLT=1
"RTN","DGPFAA3",147,0)
 ;
"RTN","DGPFAA3",148,0)
 Q DGRSLT
"RTN","DGPFAA3",149,0)
 ;
"RTN","DGPFAA3",150,0)
HL7EDTOK(DGDFN,DGFLG,DGORIG,DGACT,DGEROOT) ;Is site allowed to edit assignment?
"RTN","DGPFAA3",151,0)
 ; This function acts as wrapper for $$EDTOK and $$ACTIONOK for edits
"RTN","DGPFAA3",152,0)
 ; that originate from PRF HL7 message processing.
"RTN","DGPFAA3",153,0)
 ;
"RTN","DGPFAA3",154,0)
 ;  Supported DBIA #2171:  This DBIA is used to access the KERNEL
"RTN","DGPFAA3",155,0)
 ;                         INSTITUTION (#4) file API PARENT^XUAF4.
"RTN","DGPFAA3",156,0)
 ;
"RTN","DGPFAA3",157,0)
 ;  Input:
"RTN","DGPFAA3",158,0)
 ;    DGDFN - IEN of patient in PATIENT (#2) file
"RTN","DGPFAA3",159,0)
 ;    DGFLG - IEN of patient record flag in PRF NATIONAL FLAG (#26.15)
"RTN","DGPFAA3",160,0)
 ;            file or PRF LOCAL FLAG (#26.11) file. [ex: "1;DGPF(26.15,"]
"RTN","DGPFAA3",161,0)
 ;   DGORIG - IEN of originating site in INSTITUTION (#4) file
"RTN","DGPFAA3",162,0)
 ;    DGACT - Assignment edit action in internal format
"RTN","DGPFAA3",163,0)
 ;            [1:NEW ASSIGNMENT,2:CONTINUE,3:INACTIVATE,4:REACTIVATE,5:ENTERED IN ERROR]
"RTN","DGPFAA3",164,0)
 ;  DGEROOT - (optional) closed root array name (i.e. "DGERROR") for
"RTN","DGPFAA3",165,0)
 ;            error dialog returned from BLD^DIALOG. If not passed, error
"RTN","DGPFAA3",166,0)
 ;            dialog is returned in ^TMP("DIERR",$J) global.
"RTN","DGPFAA3",167,0)
 ;
"RTN","DGPFAA3",168,0)
 ;  Output:
"RTN","DGPFAA3",169,0)
 ;   Function value - 1 if authorized, 0 if not authorized
"RTN","DGPFAA3",170,0)
 ;          DGEROOT() - error output array from BLD^DIALOG
"RTN","DGPFAA3",171,0)
 ;
"RTN","DGPFAA3",172,0)
 N DGIEN    ;pointer to PRF ASSIGNMENT (#26.13) file
"RTN","DGPFAA3",173,0)
 N DGPFA    ;assignment data array
"RTN","DGPFAA3",174,0)
 N DGFARRY  ;flag data array
"RTN","DGPFAA3",175,0)
 N DGOWNER  ;IEN of owner site in INSTITUTION (#4) file
"RTN","DGPFAA3",176,0)
 N DGRSLT   ;function value
"RTN","DGPFAA3",177,0)
 N DIERR    ;var returned from BLD^DIALOG
"RTN","DGPFAA3",178,0)
 ;
"RTN","DGPFAA3",179,0)
 ;init error output array if passed
"RTN","DGPFAA3",180,0)
 S DGEROOT=$G(DGEROOT)
"RTN","DGPFAA3",181,0)
 I DGEROOT]"" K @DGEROOT
"RTN","DGPFAA3",182,0)
 ;
"RTN","DGPFAA3",183,0)
 S DGACT=+$G(DGACT)
"RTN","DGPFAA3",184,0)
 S DGDFN=+$G(DGDFN)
"RTN","DGPFAA3",185,0)
 S DGFLG=$G(DGFLG)
"RTN","DGPFAA3",186,0)
 S DGORIG=+$G(DGORIG)
"RTN","DGPFAA3",187,0)
 S DGRSLT=0
"RTN","DGPFAA3",188,0)
 ;
"RTN","DGPFAA3",189,0)
 D  ;drops out of block on failure
"RTN","DGPFAA3",190,0)
 . ;
"RTN","DGPFAA3",191,0)
 . ;check input params
"RTN","DGPFAA3",192,0)
 . I DGDFN'>0 D BLD^DIALOG(261110,,,DGEROOT,"F") Q
"RTN","DGPFAA3",193,0)
 . I DGACT'>0 D BLD^DIALOG(261118,,,DGEROOT,"F") Q
"RTN","DGPFAA3",194,0)
 . I DGORIG'>0 D BLD^DIALOG(261125,,,DGEROOT,"F") Q
"RTN","DGPFAA3",195,0)
 . I DGFLG']"" D BLD^DIALOG(261111,,,DGEROOT,"F") Q
"RTN","DGPFAA3",196,0)
 . ;
"RTN","DGPFAA3",197,0)
 . ;retrieve existing assignment data
"RTN","DGPFAA3",198,0)
 . S DGIEN=$$FNDASGN^DGPFAA(DGDFN,DGFLG)
"RTN","DGPFAA3",199,0)
 . I '$$GETASGN^DGPFAA(DGIEN,.DGPFA) D  Q
"RTN","DGPFAA3",200,0)
 . . D BLD^DIALOG(261102,,,DGEROOT,"F")
"RTN","DGPFAA3",201,0)
 . ;
"RTN","DGPFAA3",202,0)
 . ;Patch 911, removing sending facility check, this does not allow 
"RTN","DGPFAA3",203,0)
 . ;sites to process msgs from integrated sites-BG
"RTN","DGPFAA3",204,0)
 . ;SENDING FACILITY be the OWNER or parent of the OWNER
"RTN","DGPFAA3",205,0)
 . ;S DGOWNER=+$G(DGPFA("OWNER"))
"RTN","DGPFAA3",206,0)
 . ;I DGORIG'=DGOWNER,DGORIG'=+$$PARENT^DGPFUT1(DGOWNER) D  Q
"RTN","DGPFAA3",207,0)
 . ;. D BLD^DIALOG(261116,,,DGEROOT,"F")
"RTN","DGPFAA3",208,0)
 . ;
"RTN","DGPFAA3",209,0)
 . ;quit if flag STATUS is INACTIVE
"RTN","DGPFAA3",210,0)
 . I $$GETFLAG^DGPFUT1($P($G(DGPFA("FLAG")),U),.DGFARRY)
"RTN","DGPFAA3",211,0)
 . I '+$G(DGFARRY("STAT")) D  Q
"RTN","DGPFAA3",212,0)
 . . D BLD^DIALOG(261113,,,DGEROOT,"F")
"RTN","DGPFAA3",213,0)
 . ;
"RTN","DGPFAA3",214,0)
 . ;quit if no TIU PN TITLE IEN is found for the record flag
"RTN","DGPFAA3",215,0)
 . I '+$P($G(DGFARRY("TIUTITLE")),U) D  Q
"RTN","DGPFAA3",216,0)
 . . D BLD^DIALOG(261114,,,DGEROOT,"F")
"RTN","DGPFAA3",217,0)
 . ;
"RTN","DGPFAA3",218,0)
 . ;ACTION must be valid for current assignment STATUS
"RTN","DGPFAA3",219,0)
 . Q:('$$ACTIONOK^DGPFAA2(.DGPFA,DGACT,DGEROOT))
"RTN","DGPFAA3",220,0)
 . ;
"RTN","DGPFAA3",221,0)
 . ;success
"RTN","DGPFAA3",222,0)
 . S DGRSLT=1
"RTN","DGPFAA3",223,0)
 ;
"RTN","DGPFAA3",224,0)
 Q DGRSLT
"RTN","DGPFAAH")
0^6^B57134079^B32554418
"RTN","DGPFAAH",1,0)
DGPFAAH ;ALB/RPM - PRF ASSIGNMENT HISTORY API'S ; 4/8/04 4:13pm
"RTN","DGPFAAH",2,0)
 ;;5.3;Registration;**425,554,951**;Aug 13, 1993;Build 135
"RTN","DGPFAAH",3,0)
 ;     Last Edited: SHRPE/sgm - Aug 16, 2018 11:46
"RTN","DGPFAAH",4,0)
 ;
"RTN","DGPFAAH",5,0)
 ; ICR#  TYPE  DESCRIPTION
"RTN","DGPFAAH",6,0)
 ;-----  ----  ---------------------------------------
"RTN","DGPFAAH",7,0)
 ; 2052  Sup   $$GET1^DID
"RTN","DGPFAAH",8,0)
 ; 2055  Sup   $$VFIELD^DILFD
"RTN","DGPFAAH",9,0)
 ; 2056  Sup   GETS^DIQ
"RTN","DGPFAAH",10,0)
 ; 2053  Sup   ^DIE: FILE, UPDATE
"RTN","DGPFAAH",11,0)
 ;
"RTN","DGPFAAH",12,0)
 Q  ;no direct entry
"RTN","DGPFAAH",13,0)
 ;
"RTN","DGPFAAH",14,0)
GETALL(DGPFIEN,DGPFIENS) ;retrieve list of history IENs for an assignment
"RTN","DGPFAAH",15,0)
 ;
"RTN","DGPFAAH",16,0)
 ;  Input:
"RTN","DGPFAAH",17,0)
 ;    DGPFIEN - (required) Pointer to PRF ASSIGNMENT (#26.13) file
"RTN","DGPFAAH",18,0)
 ;   DGPFIENS - (required) Result array passed by reference
"RTN","DGPFAAH",19,0)
 ;
"RTN","DGPFAAH",20,0)
 ;  Output:
"RTN","DGPFAAH",21,0)
 ;   Function Value - Count of returned IENs
"RTN","DGPFAAH",22,0)
 ;         DGPFIENS - Output array subscripted by assignment history IENs
"RTN","DGPFAAH",23,0)
 ;                    
"RTN","DGPFAAH",24,0)
 N DGCNT   ;number of returned values
"RTN","DGPFAAH",25,0)
 N DGHIEN  ;single history IEN
"RTN","DGPFAAH",26,0)
 ;
"RTN","DGPFAAH",27,0)
 S DGCNT=0
"RTN","DGPFAAH",28,0)
 I $G(DGPFIEN)>0,$D(^DGPF(26.14,"B",DGPFIEN)) D
"RTN","DGPFAAH",29,0)
 . S DGHIEN=0
"RTN","DGPFAAH",30,0)
 . F  S DGHIEN=$O(^DGPF(26.14,"B",DGPFIEN,DGHIEN)) Q:'DGHIEN  D
"RTN","DGPFAAH",31,0)
 . . S DGPFIENS(DGHIEN)=""
"RTN","DGPFAAH",32,0)
 . . S DGCNT=DGCNT+1
"RTN","DGPFAAH",33,0)
 Q DGCNT
"RTN","DGPFAAH",34,0)
 ;
"RTN","DGPFAAH",35,0)
GETALLDT(DGPFIEN,DGPFIENS) ;retrieve list of history IENs for an assignment
"RTN","DGPFAAH",36,0)
 ;
"RTN","DGPFAAH",37,0)
 ;  Input:
"RTN","DGPFAAH",38,0)
 ;    DGPFIEN - (required) Pointer to PRF ASSIGNMENT (#26.13) file
"RTN","DGPFAAH",39,0)
 ;   DGPFIENS - (required) Result array passed by reference
"RTN","DGPFAAH",40,0)
 ;
"RTN","DGPFAAH",41,0)
 ;  Output:
"RTN","DGPFAAH",42,0)
 ;   Function Value - Count of returned IENs
"RTN","DGPFAAH",43,0)
 ;         DGPFIENS - Output array subscripted by assignment history date
"RTN","DGPFAAH",44,0)
 ;
"RTN","DGPFAAH",45,0)
 N DGADT   ;assignment date
"RTN","DGPFAAH",46,0)
 N DGCNT   ;number of returned values
"RTN","DGPFAAH",47,0)
 N DGHIEN  ;single history IEN
"RTN","DGPFAAH",48,0)
 ;
"RTN","DGPFAAH",49,0)
 S DGCNT=0
"RTN","DGPFAAH",50,0)
 I $G(DGPFIEN)>0,$D(^DGPF(26.14,"C",DGPFIEN)) D
"RTN","DGPFAAH",51,0)
 . S DGADT=0
"RTN","DGPFAAH",52,0)
 . F  S DGADT=$O(^DGPF(26.14,"C",DGPFIEN,DGADT)) Q:'DGADT  D
"RTN","DGPFAAH",53,0)
 . . S DGHIEN=0
"RTN","DGPFAAH",54,0)
 . . F  S DGHIEN=$O(^DGPF(26.14,"C",DGPFIEN,DGADT,DGHIEN)) Q:'DGHIEN  D
"RTN","DGPFAAH",55,0)
 . . . S DGPFIENS(DGADT)=DGHIEN
"RTN","DGPFAAH",56,0)
 . . . S DGCNT=DGCNT+1
"RTN","DGPFAAH",57,0)
 Q DGCNT
"RTN","DGPFAAH",58,0)
 ;
"RTN","DGPFAAH",59,0)
GETHIST(DGPFIEN,DGPFAH,DGDBRS) ;retrieve a single assignment history record
"RTN","DGPFAAH",60,0)
 ;
"RTN","DGPFAAH",61,0)
 ;  Input:
"RTN","DGPFAAH",62,0)
 ;   DGPFIEN - (required) IEN for record in PRF ASSIGNMENT HISTORY
"RTN","DGPFAAH",63,0)
 ;             (#26.14) file 
"RTN","DGPFAAH",64,0)
 ;    DGPFAH - (required) Result array passed by reference
"RTN","DGPFAAH",65,0)
 ;    DGDBRS - (optional) If 1, return DBRS info in result array ; dg*951
"RTN","DGPFAAH",66,0)
 ;
"RTN","DGPFAAH",67,0)
 ;  Output:
"RTN","DGPFAAH",68,0)
 ;   Function Value - Return 1 on success, 0 on failure
"RTN","DGPFAAH",69,0)
 ;           DGPFAH - Output array containing the field values
"RTN","DGPFAAH",70,0)
 ;                    Subscript            Field#
"RTN","DGPFAAH",71,0)
 ;                    -----------------    ------
"RTN","DGPFAAH",72,0)
 ;                    "ASSIGN"             .01
"RTN","DGPFAAH",73,0)
 ;                    "ASSIGNDT"           .02
"RTN","DGPFAAH",74,0)
 ;                    "ACTION"             .03
"RTN","DGPFAAH",75,0)
 ;                    "ENTERBY"            .04
"RTN","DGPFAAH",76,0)
 ;                    "APPRVBY"            .05
"RTN","DGPFAAH",77,0)
 ;                    "TIULINK"            .06
"RTN","DGPFAAH",78,0)
 ;                    "ORIGFAC"            .09
"RTN","DGPFAAH",79,0)
 ;                    "COMMENT",line#,0    1
"RTN","DGPFAAH",80,0)
 ;                    "DBRS",line#         2 (multiple, all fields)
"RTN","DGPFAAH",81,0)
 ;                                            p1^p2^p3^p4^p5
"RTN","DGPFAAH",82,0)
 ;                                            p1 = dbrs#
"RTN","DGPFAAH",83,0)
 ;                                            p2 = dbrs_other
"RTN","DGPFAAH",84,0)
 ;                                            p3 = create_date_int;ext
"RTN","DGPFAAH",85,0)
 ;                                            p4 = status_int;ext
"RTN","DGPFAAH",86,0)
 ;                                            p5 = create_by_int;ext
"RTN","DGPFAAH",87,0)
 ;                               p3,p4,p5 - external ';'piece optional
"RTN","DGPFAAH",88,0)
 ;                                            
"RTN","DGPFAAH",89,0)
 ;
"RTN","DGPFAAH",90,0)
 N DGIENS  ;IEN string for DIQ
"RTN","DGPFAAH",91,0)
 N DGFLDS  ;results array for DIQ
"RTN","DGPFAAH",92,0)
 N DGERR  ;error array for DIQ
"RTN","DGPFAAH",93,0)
 N DGRSLT S DGRSLT=0
"RTN","DGPFAAH",94,0)
 I $G(DGPFIEN)>0,$D(^DGPF(26.14,DGPFIEN)) D
"RTN","DGPFAAH",95,0)
 . N ARR,DF,DIERR
"RTN","DGPFAAH",96,0)
 . S DGIENS=DGPFIEN_","
"RTN","DGPFAAH",97,0)
 . S DF="*"
"RTN","DGPFAAH",98,0)
 . I +$G(DGDBRS),$$VFIELD^DILFD(26.14,2) S DF="**"
"RTN","DGPFAAH",99,0)
 . D GETS^DIQ(26.14,DGIENS,DF,"IEZ","DGFLDS","DGERR")
"RTN","DGPFAAH",100,0)
 . Q:$D(DGERR)
"RTN","DGPFAAH",101,0)
 . S DGRSLT=1
"RTN","DGPFAAH",102,0)
 . M ARR=DGFLDS(26.14,DGIENS)
"RTN","DGPFAAH",103,0)
 . S DGPFAH("ASSIGN")=$G(ARR(.01,"I"))_U_$G(ARR(.01,"E"))
"RTN","DGPFAAH",104,0)
 . S DGPFAH("ASSIGNDT")=$G(ARR(.02,"I"))_U_$G(ARR(.02,"E"))
"RTN","DGPFAAH",105,0)
 . S DGPFAH("ACTION")=$G(ARR(.03,"I"))_U_$G(ARR(.03,"E"))
"RTN","DGPFAAH",106,0)
 . S DGPFAH("ENTERBY")=$G(ARR(.04,"I"))_U_$G(ARR(.04,"E"))
"RTN","DGPFAAH",107,0)
 . S DGPFAH("APPRVBY")=$G(ARR(.05,"I"))_U_$G(ARR(.05,"E"))
"RTN","DGPFAAH",108,0)
 . S DGPFAH("TIULINK")=$G(ARR(.06,"I"))_U_$G(ARR(.06,"E"))
"RTN","DGPFAAH",109,0)
 . ;build review comments word processing array
"RTN","DGPFAAH",110,0)
 . M DGPFAH("COMMENT")=ARR(1)
"RTN","DGPFAAH",111,0)
 . K DGPFAH("COMMENT","E"),DGPFAH("COMMENT","I")
"RTN","DGPFAAH",112,0)
 . ;  next two IF statement from DG*5.3*951
"RTN","DGPFAAH",113,0)
 . I $D(ARR(.09)) S DGPFAH("ORIGFAC")=ARR(.09,"I")_U_ARR(.09,"E")
"RTN","DGPFAAH",114,0)
 . I $D(DGFLDS(26.142)) D GETDBRS
"RTN","DGPFAAH",115,0)
 . Q
"RTN","DGPFAAH",116,0)
 . ;
"RTN","DGPFAAH",117,0)
 Q DGRSLT
"RTN","DGPFAAH",118,0)
 ;
"RTN","DGPFAAH",119,0)
GETFIRST(DGPFIEN) ;get IEN of the initial assignment
"RTN","DGPFAAH",120,0)
 ;This function returns the IEN of the initial history record for a
"RTN","DGPFAAH",121,0)
 ;given patient record flag assignment.
"RTN","DGPFAAH",122,0)
 ;
"RTN","DGPFAAH",123,0)
 ;  Input:
"RTN","DGPFAAH",124,0)
 ;   DGPFIEN - (required) IEN of record in PRF ASSIGNMENT (#26.13) file
"RTN","DGPFAAH",125,0)
 ;
"RTN","DGPFAAH",126,0)
 ;  Output:
"RTN","DGPFAAH",127,0)
 ;   Function Value - IEN of initial history record on success
"RTN","DGPFAAH",128,0)
 ;                    0 on failure
"RTN","DGPFAAH",129,0)
 ;
"RTN","DGPFAAH",130,0)
 N DGHIEN  ;history IEN
"RTN","DGPFAAH",131,0)
 N DGEDT   ;edit date
"RTN","DGPFAAH",132,0)
 N DGPFAH  ;history record data array
"RTN","DGPFAAH",133,0)
 ;
"RTN","DGPFAAH",134,0)
 S DGHIEN=0
"RTN","DGPFAAH",135,0)
 I $G(DGPFIEN)>0,$D(^DGPF(26.13,DGPFIEN)) D
"RTN","DGPFAAH",136,0)
 . S DGEDT=$O(^DGPF(26.14,"C",DGPFIEN,0))
"RTN","DGPFAAH",137,0)
 . I DGEDT>0 S DGHIEN=$O(^DGPF(26.14,"C",DGPFIEN,DGEDT,0))
"RTN","DGPFAAH",138,0)
 . Q
"RTN","DGPFAAH",139,0)
 Q $S($G(DGHIEN)>0:DGHIEN,1:0)
"RTN","DGPFAAH",140,0)
 ;
"RTN","DGPFAAH",141,0)
GETLAST(DGPFIEN) ;determine IEN of last assignment history record
"RTN","DGPFAAH",142,0)
 ;This function returns the IEN of the most recent history record for a
"RTN","DGPFAAH",143,0)
 ;given patient record flag assignment.
"RTN","DGPFAAH",144,0)
 ;
"RTN","DGPFAAH",145,0)
 ;  Input:
"RTN","DGPFAAH",146,0)
 ;   DGPFIEN - (required) IEN for record in PRF ASSIGNMENT (#26.13) file 
"RTN","DGPFAAH",147,0)
 ;
"RTN","DGPFAAH",148,0)
 ;  Output:
"RTN","DGPFAAH",149,0)
 ;   Function Value - IEN of last history record on success, 0 on failure
"RTN","DGPFAAH",150,0)
 ;
"RTN","DGPFAAH",151,0)
 N DGDAT
"RTN","DGPFAAH",152,0)
 N DGHIEN
"RTN","DGPFAAH",153,0)
 S DGHIEN=0
"RTN","DGPFAAH",154,0)
 I $G(DGPFIEN)>0,$D(^DGPF(26.13,DGPFIEN)) D
"RTN","DGPFAAH",155,0)
 . S DGDAT=$O(^DGPF(26.14,"C",DGPFIEN,""),-1)
"RTN","DGPFAAH",156,0)
 . I DGDAT>0 D
"RTN","DGPFAAH",157,0)
 . . S DGHIEN=$O(^DGPF(26.14,"C",DGPFIEN,DGDAT,0))
"RTN","DGPFAAH",158,0)
 Q $S($G(DGHIEN)>0:DGHIEN,1:0)
"RTN","DGPFAAH",159,0)
 ;
"RTN","DGPFAAH",160,0)
GETADT(DGPFIEN) ;get the initial assignment date
"RTN","DGPFAAH",161,0)
 ;This function returns the initial assignment date for a given patient
"RTN","DGPFAAH",162,0)
 ;record flag assignment.
"RTN","DGPFAAH",163,0)
 ;
"RTN","DGPFAAH",164,0)
 ;  Input:
"RTN","DGPFAAH",165,0)
 ;   DGPFIEN - (required) IEN for record in PRF ASSIGNMENT (#26.13) file
"RTN","DGPFAAH",166,0)
 ;
"RTN","DGPFAAH",167,0)
 ;  Output:
"RTN","DGPFAAH",168,0)
 ;   Function Value - assignment date in internal^external format on
"RTN","DGPFAAH",169,0)
 ;                    success, 0 on failure
"RTN","DGPFAAH",170,0)
 ;
"RTN","DGPFAAH",171,0)
 N DGHIEN  ;history IEN
"RTN","DGPFAAH",172,0)
 N DGEDT   ;edit date
"RTN","DGPFAAH",173,0)
 N DGADT   ;assignment date
"RTN","DGPFAAH",174,0)
 N DGPFAH  ;history record data array
"RTN","DGPFAAH",175,0)
 ;
"RTN","DGPFAAH",176,0)
 S DGADT=0
"RTN","DGPFAAH",177,0)
 S DGHIEN=0
"RTN","DGPFAAH",178,0)
 I $G(DGPFIEN)>0,$D(^DGPF(26.13,DGPFIEN)) D
"RTN","DGPFAAH",179,0)
 . S DGEDT=$O(^DGPF(26.14,"C",DGPFIEN,0))
"RTN","DGPFAAH",180,0)
 . I DGEDT>0 D
"RTN","DGPFAAH",181,0)
 . . S DGHIEN=$O(^DGPF(26.14,"C",DGPFIEN,DGEDT,0))
"RTN","DGPFAAH",182,0)
 . . I DGHIEN>0,$$GETHIST^DGPFAAH(DGHIEN,.DGPFAH) D
"RTN","DGPFAAH",183,0)
 . . . I $P($G(DGPFAH("ACTION")),U,2)="NEW ASSIGNMENT" D
"RTN","DGPFAAH",184,0)
 . . . . S DGADT=$G(DGPFAH("ASSIGNDT"))
"RTN","DGPFAAH",185,0)
 Q DGADT
"RTN","DGPFAAH",186,0)
 ;
"RTN","DGPFAAH",187,0)
FNDHIST(DGAIEN,DGADT) ;Find Assignment
"RTN","DGPFAAH",188,0)
 ;  This function finds a patient record flag assignment record.
"RTN","DGPFAAH",189,0)
 ;
"RTN","DGPFAAH",190,0)
 ;  Input:
"RTN","DGPFAAH",191,0)
 ;    DGAIEN - Pointer to assignment in the PRF ASSIGNMENT (#26.13) file
"RTN","DGPFAAH",192,0)
 ;     DGADT - Assignment date
"RTN","DGPFAAH",193,0)
 ;
"RTN","DGPFAAH",194,0)
 ;  Output:
"RTN","DGPFAAH",195,0)
 ;   Function Value - Returns IEN of existing record on success, 0 on
"RTN","DGPFAAH",196,0)
 ;                    failure
"RTN","DGPFAAH",197,0)
 ;
"RTN","DGPFAAH",198,0)
 N DGIEN
"RTN","DGPFAAH",199,0)
 ;
"RTN","DGPFAAH",200,0)
 I $G(DGAIEN)>0,($G(DGADT)>0) D
"RTN","DGPFAAH",201,0)
 . S DGIEN=$O(^DGPF(26.14,"C",DGAIEN,DGADT,0))
"RTN","DGPFAAH",202,0)
 Q $S($G(DGIEN)>0:DGIEN,1:0)
"RTN","DGPFAAH",203,0)
 ;
"RTN","DGPFAAH",204,0)
STOHIST(DGPFAH,DGPFERR) ;
"RTN","DGPFAAH",205,0)
 ;File a PRF ASSIGNMENT HISTORY (#26.14) file record
"RTN","DGPFAAH",206,0)
 ;
"RTN","DGPFAAH",207,0)
 ;  Input:
"RTN","DGPFAAH",208,0)
 ;   .DGPFAH - (required) Array of values to be filed (see GETHIST tag
"RTN","DGPFAAH",209,0)
 ;             above for valid array structure)
"RTN","DGPFAAH",210,0)
 ;  .DGPFERR - (optional) Passed by reference to contain error messages
"RTN","DGPFAAH",211,0)
 ;
"RTN","DGPFAAH",212,0)
 ;  Output:
"RTN","DGPFAAH",213,0)
 ;   Function Value - Returns IEN of record on success, 0 on failure
"RTN","DGPFAAH",214,0)
 ;          DGPFERR - Undefined on success, error message on failure
"RTN","DGPFAAH",215,0)
 ;
"RTN","DGPFAAH",216,0)
 N DGSUB
"RTN","DGPFAAH",217,0)
 N DGFLD
"RTN","DGPFAAH",218,0)
 N DGIEN
"RTN","DGPFAAH",219,0)
 N DGIENS
"RTN","DGPFAAH",220,0)
 N DGFDA
"RTN","DGPFAAH",221,0)
 N DGFDAIEN
"RTN","DGPFAAH",222,0)
 N DGERR
"RTN","DGPFAAH",223,0)
 N UPD
"RTN","DGPFAAH",224,0)
 ;
"RTN","DGPFAAH",225,0)
 F DGSUB="ASSIGN","ASSIGNDT","ACTION","ENTERBY","APPRVBY","TIULINK" D
"RTN","DGPFAAH",226,0)
 . S DGFLD(DGSUB)=$P($G(DGPFAH(DGSUB)),U)
"RTN","DGPFAAH",227,0)
 . Q
"RTN","DGPFAAH",228,0)
 I $D(DGPFAH("COMMENT")) M DGFLD("COMMENT")=DGPFAH("COMMENT")
"RTN","DGPFAAH",229,0)
 S X=$G(DGPFAH("ORIGFAC")) I +X S DGFLD("ORIGFAC")=+X ;  DG*5.3*951
"RTN","DGPFAAH",230,0)
 I $D(DGPFAH("DBRS")) M DGFLD("DBRS")=DGPFAH("DBRS") ;   DG*5.3*951
"RTN","DGPFAAH",231,0)
 ;
"RTN","DGPFAAH",232,0)
 I $$VALID^DGPFUT("DGPFAAH1",26.14,.DGFLD,.DGPFERR) D
"RTN","DGPFAAH",233,0)
 . N X,DIERR
"RTN","DGPFAAH",234,0)
 . S DGIEN=$$FNDHIST^DGPFAAH(DGFLD("ASSIGN"),DGFLD("ASSIGNDT"))
"RTN","DGPFAAH",235,0)
 . I DGIEN S DGIENS=DGIEN_","
"RTN","DGPFAAH",236,0)
 . E  S DGIENS="+1,"
"RTN","DGPFAAH",237,0)
 . S DGFDA(26.14,DGIENS,.01)=DGFLD("ASSIGN")
"RTN","DGPFAAH",238,0)
 . S DGFDA(26.14,DGIENS,.02)=DGFLD("ASSIGNDT")
"RTN","DGPFAAH",239,0)
 . S DGFDA(26.14,DGIENS,.03)=DGFLD("ACTION")
"RTN","DGPFAAH",240,0)
 . S DGFDA(26.14,DGIENS,.04)=DGFLD("ENTERBY")
"RTN","DGPFAAH",241,0)
 . S DGFDA(26.14,DGIENS,.05)=DGFLD("APPRVBY")
"RTN","DGPFAAH",242,0)
 . S DGFDA(26.14,DGIENS,.06)=DGFLD("TIULINK")
"RTN","DGPFAAH",243,0)
 . S DGFDA(26.14,DGIENS,1)=$NA(DGFLD("COMMENT"))
"RTN","DGPFAAH",244,0)
 . S X=+$G(DGFLD("ORIGFAC")) I X S DGFDA(26.14,DGIENS,.09)=X
"RTN","DGPFAAH",245,0)
 . ;  add in DBRS data to DGFDA
"RTN","DGPFAAH",246,0)
 . I $D(DGFLD("DBRS")) D  Q:$D(DGERR)
"RTN","DGPFAAH",247,0)
 . . D STOHIST^DGPFUT6(DGIENS,.DGFLD,.DGFDA,.DGERR)
"RTN","DGPFAAH",248,0)
 . . I $D(DGERR) S DGIEN=0
"RTN","DGPFAAH",249,0)
 . . Q
"RTN","DGPFAAH",250,0)
 . ;
"RTN","DGPFAAH",251,0)
 . ;determine if update or file should be called
"RTN","DGPFAAH",252,0)
 . S UPD=(DGIENS["+") I 'UPD D
"RTN","DGPFAAH",253,0)
 . . N I,J
"RTN","DGPFAAH",254,0)
 . . S I=0 F J=0:0 S I=$O(DGFDA(26.142,I)) Q:I=""  I I["+" S UPD=1 Q
"RTN","DGPFAAH",255,0)
 . . Q
"RTN","DGPFAAH",256,0)
 . ;
"RTN","DGPFAAH",257,0)
 . I 'UPD D
"RTN","DGPFAAH",258,0)
 . . N DGERR,DIERR
"RTN","DGPFAAH",259,0)
 . . D FILE^DIE("","DGFDA","DGERR")
"RTN","DGPFAAH",260,0)
 . . I $D(DGERR) S DGIEN=0
"RTN","DGPFAAH",261,0)
 . . Q
"RTN","DGPFAAH",262,0)
 . E  D
"RTN","DGPFAAH",263,0)
 . . N DGERR,DGFDAIEN,DIERR
"RTN","DGPFAAH",264,0)
 . . S DGFDAIEN=""
"RTN","DGPFAAH",265,0)
 . . I DGIENS="+1," S DGFDAIEN="DGFDAIEN",DGFDAIEN(1)=""
"RTN","DGPFAAH",266,0)
 . . D UPDATE^DIE("","DGFDA",DGFDAIEN,"DGERR")
"RTN","DGPFAAH",267,0)
 . . I $D(DGERR) S DGIEN=0 Q
"RTN","DGPFAAH",268,0)
 . . I DGIENS="+1," S DGIEN=+$G(DGFDAIEN(1))
"RTN","DGPFAAH",269,0)
 . . Q
"RTN","DGPFAAH",270,0)
 . Q
"RTN","DGPFAAH",271,0)
 Q $S($G(DGIEN)>0:DGIEN,1:0)
"RTN","DGPFAAH",272,0)
 ;
"RTN","DGPFAAH",273,0)
GETDBRS ;  called from GETHIST
"RTN","DGPFAAH",274,0)
 ;  expects DGFLDS() to contain GETS^DIQ(26.14) with all fields "**"
"RTN","DGPFAAH",275,0)
 ;  Return sorted by DBRS#:
"RTN","DGPFAAH",276,0)
 ;    DGPFAH("DBRS",inc) = p1^p2^p3^p4^p5
"RTN","DGPFAAH",277,0)
 ;      p1=DBRS#     p2=Other     p3=date_int;ext     p4=status_int;ext  
"RTN","DGPFAAH",278,0)
 ;      p5=site_int;ext
"RTN","DGPFAAH",279,0)
 ;
"RTN","DGPFAAH",280,0)
 N I,J,X,Y,DBNM,IENS,TMP
"RTN","DGPFAAH",281,0)
 S IENS=0 F  S IENS=$O(DGFLDS(26.142,IENS)) Q:'IENS  D
"RTN","DGPFAAH",282,0)
 . N ARR M ARR=DGFLDS(26.142,IENS)
"RTN","DGPFAAH",283,0)
 . S (X,DBNM)=$G(ARR(.01,"E")) Q:X=""
"RTN","DGPFAAH",284,0)
 . S $P(X,U,2)=$G(ARR(.02,"E"))
"RTN","DGPFAAH",285,0)
 . S $P(X,U,3)=$G(ARR(.03,"I"))_";"_$P($G(ARR(.03,"E")),":",1,2)
"RTN","DGPFAAH",286,0)
 . S $P(X,U,4)=$G(ARR(.04,"I"))_";"_$G(ARR(.04,"E"))
"RTN","DGPFAAH",287,0)
 . S $P(X,U,5)=$G(ARR(.05,"I"))_";"_$G(ARR(.05,"E"))
"RTN","DGPFAAH",288,0)
 . S TMP(DBNM,+IENS)=X
"RTN","DGPFAAH",289,0)
 . Q
"RTN","DGPFAAH",290,0)
 S X="TMP" F J=1:1 S X=$Q(@X) Q:X=""  S DGPFAH("DBRS",J)=@X
"RTN","DGPFAAH",291,0)
 Q
"RTN","DGPFAAH1")
0^7^B1497249^B1218620
"RTN","DGPFAAH1",1,0)
DGPFAAH1 ;ALB/RPM - PRF ASSIGNMENT HISTORY VALIDATION DATA ; 02/06/03
"RTN","DGPFAAH1",2,0)
 ;;5.3;Registration;**425,951**;Aug 13, 1993;Build 135
"RTN","DGPFAAH1",3,0)
 ;     Last Edited: SHRPE/sgm - May 30, 2018 11:38
"RTN","DGPFAAH1",4,0)
 ;
"RTN","DGPFAAH1",5,0)
XREF ;;array node name;field#;required field;word processing?;description
"RTN","DGPFAAH1",6,0)
 ;;ASSIGN;.01;1;0;pointer to 26.13
"RTN","DGPFAAH1",7,0)
 ;;ASSIGNDT;.02;1;0;date/time of edit activity
"RTN","DGPFAAH1",8,0)
 ;;ACTION;.03;1;0;type of edit performed
"RTN","DGPFAAH1",9,0)
 ;;ENTERBY;.04;1;0;pointer to NEW PERSON file for entering individual
"RTN","DGPFAAH1",10,0)
 ;;APPRVBY;.05;1;0;pointer to NEW PERSON file for approval individual
"RTN","DGPFAAH1",11,0)
 ;;COMMENT;1;0;1;review history comments
"RTN","DGPFAAH1",12,0)
 ;;ORIGFAC;.09;0;0;pointer to INSTITUTION file for entering site
"RTN","DGPFAPI1")
0^13^B27698774^B24558175
"RTN","DGPFAPI1",1,0)
DGPFAPI1 ;ALB/RBS - PRF EXTERNAL API'S ; 9/27/06 3:00pm
"RTN","DGPFAPI1",2,0)
 ;;5.3;Registration;**554,650,951**;Aug 13, 1993;Build 135
"RTN","DGPFAPI1",3,0)
 ;     Lasted Edited: SHRPE/SGM - Feb 16, 2018 12:48
"RTN","DGPFAPI1",4,0)
 ;
"RTN","DGPFAPI1",5,0)
 ; ICR# TYPE DESCRIPTION
"RTN","DGPFAPI1",6,0)
 ;----- ---- -------------------------------------
"RTN","DGPFAPI1",7,0)
 ; 2050 Sup  $$EZBLD^DIALOG
"RTN","DGPFAPI1",8,0)
 ;
"RTN","DGPFAPI1",9,0)
 Q  ;no direct entry
"RTN","DGPFAPI1",10,0)
 ;
"RTN","DGPFAPI1",11,0)
GETHTIU(DGDFN,DGTITLE,DGHTIU) ;retrieve PRF/TIU PN link Assignment data
"RTN","DGPFAPI1",12,0)
 ;This function is used to return a patient's ASSIGNMENT (active or
"RTN","DGPFAPI1",13,0)
 ;inactive) based on the TIU PN title.  If an ASSIGNMENT is found
"RTN","DGPFAPI1",14,0)
 ;then all ASSIGNMENT HISTORY records will be returned.
"RTN","DGPFAPI1",15,0)
 ;If the request is not from the Owner Site of the PRF Assignment,
"RTN","DGPFAPI1",16,0)
 ;no data is returned.
"RTN","DGPFAPI1",17,0)
 ;The TIU Progress Note Title IEN will be used to search for the
"RTN","DGPFAPI1",18,0)
 ;patient assignment that is linked to the associated record flag.
"RTN","DGPFAPI1",19,0)
 ;
"RTN","DGPFAPI1",20,0)
 ;  Associated DBIA:  #4383 - DGPF ASSIGNMENT LINK TIU PN
"RTN","DGPFAPI1",21,0)
 ;
"RTN","DGPFAPI1",22,0)
 ;  Input:
"RTN","DGPFAPI1",23,0)
 ;     DGDFN - [Required] IEN of PATIENT (#2) file
"RTN","DGPFAPI1",24,0)
 ;   DGTITLE - [Required] IEN of TIU DOCUMENT DEFINITION (#8925.1) file
"RTN","DGPFAPI1",25,0)
 ;    DGHTIU - [Optional] - default name is "DGPFHTIU"
"RTN","DGPFAPI1",26,0)
 ;             (Closed Root (local or global) array of return values)
"RTN","DGPFAPI1",27,0)
 ;
"RTN","DGPFAPI1",28,0)
 ;  Output:
"RTN","DGPFAPI1",29,0)
 ;   Function result - returns 1 on success
"RTN","DGPFAPI1",30,0)
 ;                   - returns two piece string on failure
"RTN","DGPFAPI1",31,0)
 ;                      Format: 0^error text generated from EZBLD^DIALOG
"RTN","DGPFAPI1",32,0)
 ;
"RTN","DGPFAPI1",33,0)
 ;    DGHTIU() - Array, passed by closed root reference.
"RTN","DGPFAPI1",34,0)
 ;               If this function is successful, this array will
"RTN","DGPFAPI1",35,0)
 ;               contain the PRF/TIU PN link Assignment data where
"RTN","DGPFAPI1",36,0)
 ;               the Subscript field value equals:
"RTN","DGPFAPI1",37,0)
 ;                   Internal Value^External Value
"RTN","DGPFAPI1",38,0)
 ;               Note: The "HISTORY" subscript level will contain a
"RTN","DGPFAPI1",39,0)
 ;               unique node for each PRF Assignment History record
"RTN","DGPFAPI1",40,0)
 ;               associated with the Assignment where nn = a unique
"RTN","DGPFAPI1",41,0)
 ;               number for each History record.
"RTN","DGPFAPI1",42,0)
 ;
"RTN","DGPFAPI1",43,0)
 ; Subscript                 Field Name      Field #/File #
"RTN","DGPFAPI1",44,0)
 ; -----------------------   -----------     ------------
"RTN","DGPFAPI1",45,0)
 ; "ASSIGNIEN"               NUMBER          (.001)/(#26.13)
"RTN","DGPFAPI1",46,0)
 ; "FLAG"                    FLAG NAME       (.02)/(#26.13)
"RTN","DGPFAPI1",47,0)
 ; "HISTORY"                 # OF HISTORY RECORDS    N/A
"RTN","DGPFAPI1",48,0)
 ; "HISTORY",nn,"ACTION")    ACTION          (.03)/(#26.14)
"RTN","DGPFAPI1",49,0)
 ; "HISTORY",nn,"APPRVBY")   APPROVED BY     (.05)/(#26.14)
"RTN","DGPFAPI1",50,0)
 ; "HISTORY",nn,"DATETIME")  DATE/TIME       (.02)/(#26.14)
"RTN","DGPFAPI1",51,0)
 ; "HISTORY",nn,"HISTIEN")   NUMBER          (.001)/(#26.14)
"RTN","DGPFAPI1",52,0)
 ; "HISTORY",nn,"TIUIEN")    TIU PN LINK     (.06)/(#26.14)
"RTN","DGPFAPI1",53,0)
 ; "HISTORY",nn,"ORIGFAC")   ORIGINATING FACILITY (.09)/(#26.14)
"RTN","DGPFAPI1",54,0)
 ; dg*3.5*951 - added apprvby, origfac
"RTN","DGPFAPI1",55,0)
 ;
"RTN","DGPFAPI1",56,0)
 N DGAIEN    ;ien of record flag assignment in (#26.13) file
"RTN","DGPFAPI1",57,0)
 N DGDIALOG  ;failure reason generated from EZBLD^DIALOG
"RTN","DGPFAPI1",58,0)
 N DGFIEN    ;variable pointer to #26.11 or #26.15 ie. "1;DGPF(26.15,"
"RTN","DGPFAPI1",59,0)
 N DGFLAG    ;flag name
"RTN","DGPFAPI1",60,0)
 N DGHIEN    ;ien of history record in (#26.14) file
"RTN","DGPFAPI1",61,0)
 N DGHIENS   ;array of all assignment history IEN's
"RTN","DGPFAPI1",62,0)
 N DGPFA     ;flag assignment array
"RTN","DGPFAPI1",63,0)
 N DGPFAH    ;flag assignment history array
"RTN","DGPFAPI1",64,0)
 N DGRSLT    ;function result
"RTN","DGPFAPI1",65,0)
 N DGTHCNT   ;"nn"=number of history records returned
"RTN","DGPFAPI1",66,0)
 ;
"RTN","DGPFAPI1",67,0)
 S DGDFN=+$G(DGDFN)
"RTN","DGPFAPI1",68,0)
 S DGTITLE=+$G(DGTITLE)
"RTN","DGPFAPI1",69,0)
 ;
"RTN","DGPFAPI1",70,0)
 ;setup return array
"RTN","DGPFAPI1",71,0)
 S DGHTIU=$G(DGHTIU)
"RTN","DGPFAPI1",72,0)
 I DGHTIU']"" S DGHTIU="DGPFHTIU"       ;setup default array name
"RTN","DGPFAPI1",73,0)
 K @DGHTIU                              ;Kill/initialize work array
"RTN","DGPFAPI1",74,0)
 ;
"RTN","DGPFAPI1",75,0)
 S DGRSLT=0
"RTN","DGPFAPI1",76,0)
 ;
"RTN","DGPFAPI1",77,0)
 ;get IEN variable pointer of National or Local flag
"RTN","DGPFAPI1",78,0)
 S DGFIEN=$P($$FNDTITLE(DGTITLE),U,1)  ;strip off flag name
"RTN","DGPFAPI1",79,0)
 ;
"RTN","DGPFAPI1",80,0)
 I '$G(DGFIEN) S DGDIALOG=$$EZBLD^DIALOG(261107)  ;no flag link
"RTN","DGPFAPI1",81,0)
 ;
"RTN","DGPFAPI1",82,0)
 ;if flag is assoc with TIU Progress Note Title (quit on failure)
"RTN","DGPFAPI1",83,0)
 I $G(DGFIEN) D
"RTN","DGPFAPI1",84,0)
 . ;
"RTN","DGPFAPI1",85,0)
 . ;get IEN of assignment linked to flag linked to TIU PN Title
"RTN","DGPFAPI1",86,0)
 . S DGAIEN=$$FNDASGN^DGPFAA(DGDFN,DGFIEN)
"RTN","DGPFAPI1",87,0)
 . I '$G(DGAIEN) S DGDIALOG=$$EZBLD^DIALOG(261108) Q
"RTN","DGPFAPI1",88,0)
 . ;
"RTN","DGPFAPI1",89,0)
 . ;get all assignment data for patient
"RTN","DGPFAPI1",90,0)
 . I '$$GETASGN^DGPFAA(DGAIEN,.DGPFA) S DGDIALOG=$$EZBLD^DIALOG(261102) Q
"RTN","DGPFAPI1",91,0)
 . ;
"RTN","DGPFAPI1",92,0)
 . ;check for owner site of assignment
"RTN","DGPFAPI1",93,0)
 . I '$$ISDIV^DGPFUT($P(DGPFA("OWNER"),U)) S DGDIALOG=$$EZBLD^DIALOG(261103) Q
"RTN","DGPFAPI1",94,0)
 . ;
"RTN","DGPFAPI1",95,0)
 . ;get all history ien's
"RTN","DGPFAPI1",96,0)
 . I '$$GETALL^DGPFAAH(DGAIEN,.DGHIENS) S DGDIALOG=$$EZBLD^DIALOG(261101) Q
"RTN","DGPFAPI1",97,0)
 . ;
"RTN","DGPFAPI1",98,0)
 . S DGHIEN="",DGTHCNT=0
"RTN","DGPFAPI1",99,0)
 . ;
"RTN","DGPFAPI1",100,0)
 . ;loop all assignment history ien's
"RTN","DGPFAPI1",101,0)
 . F  S DGHIEN=$O(DGHIENS(DGHIEN)) Q:DGHIEN=""  D  Q:$D(DGDIALOG)
"RTN","DGPFAPI1",102,0)
 . . K DGPFAH
"RTN","DGPFAPI1",103,0)
 . . ;get assignment history record
"RTN","DGPFAPI1",104,0)
 . . I '$$GETHIST^DGPFAAH(DGHIEN,.DGPFAH,1) D  Q
"RTN","DGPFAPI1",105,0)
 . . . S DGDIALOG=$$EZBLD^DIALOG(261101),DGTHCNT=0
"RTN","DGPFAPI1",106,0)
 . . . Q
"RTN","DGPFAPI1",107,0)
 . . ;
"RTN","DGPFAPI1",108,0)
 . . S DGTHCNT=DGTHCNT+1
"RTN","DGPFAPI1",109,0)
 . . S @DGHTIU@("HISTORY",DGTHCNT,"ACTION")=$G(DGPFAH("ACTION"))
"RTN","DGPFAPI1",110,0)
 . . S @DGHTIU@("HISTORY",DGTHCNT,"APPRVBY")=$G(DGPFAH("APPRVBY"))
"RTN","DGPFAPI1",111,0)
 . . S @DGHTIU@("HISTORY",DGTHCNT,"DATETIME")=$G(DGPFAH("ASSIGNDT"))
"RTN","DGPFAPI1",112,0)
 . . S @DGHTIU@("HISTORY",DGTHCNT,"HISTIEN")=DGHIEN_U_DGHIEN
"RTN","DGPFAPI1",113,0)
 . . S @DGHTIU@("HISTORY",DGTHCNT,"TIUIEN")=$G(DGPFAH("TIULINK"))
"RTN","DGPFAPI1",114,0)
 . . S @DGHTIU@("HISTORY",DGTHCNT,"ORIGFAC")=$G(DGPFAH("ORIGFAC"))
"RTN","DGPFAPI1",115,0)
 . ;
"RTN","DGPFAPI1",116,0)
 . Q:$D(DGDIALOG)  ;stop on error
"RTN","DGPFAPI1",117,0)
 . ;
"RTN","DGPFAPI1",118,0)
 . I DGTHCNT D
"RTN","DGPFAPI1",119,0)
 . . S @DGHTIU@("ASSIGNIEN")=DGAIEN_U_$P($G(DGPFA("DFN")),U,2)
"RTN","DGPFAPI1",120,0)
 . . S @DGHTIU@("FLAG")=$G(DGPFA("FLAG"))
"RTN","DGPFAPI1",121,0)
 . . S @DGHTIU@("HISTORY")=DGTHCNT
"RTN","DGPFAPI1",122,0)
 . ;
"RTN","DGPFAPI1",123,0)
 . S DGRSLT=1  ;success
"RTN","DGPFAPI1",124,0)
 ;
"RTN","DGPFAPI1",125,0)
 ;if failure delete return array
"RTN","DGPFAPI1",126,0)
 I $D(DGDIALOG) K @DGHTIU
"RTN","DGPFAPI1",127,0)
 ;
"RTN","DGPFAPI1",128,0)
 Q $S(DGRSLT:1,1:DGRSLT_"^"_$G(DGDIALOG))
"RTN","DGPFAPI1",129,0)
 ;
"RTN","DGPFAPI1",130,0)
FNDTITLE(DGTITLE) ;retrieve IEN of associated PRF (National or Local) Flag
"RTN","DGPFAPI1",131,0)
 ;This function returns the IEN and Name of the National or Local flag
"RTN","DGPFAPI1",132,0)
 ;that is associated with the TIU Progress Note Title.
"RTN","DGPFAPI1",133,0)
 ;
"RTN","DGPFAPI1",134,0)
 ;  Input:
"RTN","DGPFAPI1",135,0)
 ;   DGTITLE - [Required] IEN of TIU DOCUMENT DEFINITION (#8925.1) file
"RTN","DGPFAPI1",136,0)
 ;
"RTN","DGPFAPI1",137,0)
 ;  Output:
"RTN","DGPFAPI1",138,0)
 ;   Function Value - returns two piece ^ string on failure or success
"RTN","DGPFAPI1",139,0)
 ;                  On Failure - 0^error text generated from EZBLD^DIALOG
"RTN","DGPFAPI1",140,0)
 ;                  On Success - IEN^External Flag Name
"RTN","DGPFAPI1",141,0)
 ;                    [example:  1;DGPF(26.15,^BEHAVIORAL]
"RTN","DGPFAPI1",142,0)
 ;                    [Note:    "1;DGPF(26.15," is a variable pointer]
"RTN","DGPFAPI1",143,0)
 ;
"RTN","DGPFAPI1",144,0)
 S DGTITLE=+$G(DGTITLE)
"RTN","DGPFAPI1",145,0)
 ;
"RTN","DGPFAPI1",146,0)
 N DGDIALOG ;failure reason
"RTN","DGPFAPI1",147,0)
 N DGFLAG   ;flag name
"RTN","DGPFAPI1",148,0)
 N DGIEN    ;ien of flag
"RTN","DGPFAPI1",149,0)
 ;
"RTN","DGPFAPI1",150,0)
 ; search for Local Flag
"RTN","DGPFAPI1",151,0)
 I $D(^DGPF(26.11,"ATIU",DGTITLE)) D
"RTN","DGPFAPI1",152,0)
 . S DGFLAG=$O(^DGPF(26.11,"ATIU",DGTITLE,""))
"RTN","DGPFAPI1",153,0)
 . I DGFLAG]"" D
"RTN","DGPFAPI1",154,0)
 . . S DGIEN=$O(^DGPF(26.11,"ATIU",DGTITLE,DGFLAG,0))
"RTN","DGPFAPI1",155,0)
 . . I '$D(^DGPF(26.11,DGIEN,0)) K DGIEN Q
"RTN","DGPFAPI1",156,0)
 . . S:$G(DGIEN) DGIEN=DGIEN_";DGPF(26.11,^"_DGFLAG  ;add flag name
"RTN","DGPFAPI1",157,0)
 ;
"RTN","DGPFAPI1",158,0)
 ; search for National Flag - (if Title not found in Local Flag file)
"RTN","DGPFAPI1",159,0)
 I '$G(DGIEN),$D(^DGPF(26.15,"ATIU",DGTITLE)) D
"RTN","DGPFAPI1",160,0)
 . S DGFLAG=$O(^DGPF(26.15,"ATIU",DGTITLE,""))
"RTN","DGPFAPI1",161,0)
 . I DGFLAG]"" D
"RTN","DGPFAPI1",162,0)
 . . S DGIEN=$O(^DGPF(26.15,"ATIU",DGTITLE,DGFLAG,0))
"RTN","DGPFAPI1",163,0)
 . . I '$D(^DGPF(26.15,DGIEN,0)) K DGIEN Q
"RTN","DGPFAPI1",164,0)
 . . S:$G(DGIEN) DGIEN=DGIEN_";DGPF(26.15,^"_DGFLAG  ;add flag name
"RTN","DGPFAPI1",165,0)
 ;
"RTN","DGPFAPI1",166,0)
 I '$G(DGIEN) S DGDIALOG=$$EZBLD^DIALOG(261107)
"RTN","DGPFAPI1",167,0)
 ;
"RTN","DGPFAPI1",168,0)
 Q $S($G(DGIEN)>0:DGIEN,1:"0^"_$G(DGDIALOG))
"RTN","DGPFAPI1",169,0)
 ;
"RTN","DGPFAPI1",170,0)
GETLINK(DGTIUIEN) ;get linked assignment history ien
"RTN","DGPFAPI1",171,0)
 ;This function returns the IEN of a patient's record flag assignment
"RTN","DGPFAPI1",172,0)
 ;history record that is linked to a specific TIU Progress Note.
"RTN","DGPFAPI1",173,0)
 ;
"RTN","DGPFAPI1",174,0)
 ; Associated DBIA:  #4383 - DGPF ASSIGNMENT LINK TIU PN
"RTN","DGPFAPI1",175,0)
 ;
"RTN","DGPFAPI1",176,0)
 ;  Input:
"RTN","DGPFAPI1",177,0)
 ;   DGTIUIEN - [Required] IEN of TIU DOCUMENT (#8925) file
"RTN","DGPFAPI1",178,0)
 ;
"RTN","DGPFAPI1",179,0)
 ;  Output:
"RTN","DGPFAPI1",180,0)
 ;   Function result - returns IEN of linked history record on success
"RTN","DGPFAPI1",181,0)
 ;                   - "0" if no link found
"RTN","DGPFAPI1",182,0)
 ;
"RTN","DGPFAPI1",183,0)
 Q +$O(^DGPF(26.14,"ATIUPN",+$G(DGTIUIEN),0))
"RTN","DGPFDBRS")
0^1^B1824667^n/a
"RTN","DGPFDBRS",1,0)
DGPFDBRS ;SLC/SS - PRF DBRS ; 12/26/17
"RTN","DGPFDBRS",2,0)
 ;;5.3;Registration;**951**;Aug 13, 1993;Build 135
"RTN","DGPFDBRS",3,0)
 ;
"RTN","DGPFDBRS",4,0)
 ;The API to get the DBRS information
"RTN","DGPFDBRS",5,0)
 ;Implements the ICR# 6874
"RTN","DGPFDBRS",6,0)
 ;Parameters:
"RTN","DGPFDBRS",7,0)
 ; DGDFN - patient's DFN
"RTN","DGPFDBRS",8,0)
 ; DGRETARR - array to return information in the format:
"RTN","DGPFDBRS",9,0)
 ;   ARR(1)="DBRS#^DBRS date^DBRS other information"
"RTN","DGPFDBRS",10,0)
 ;   ARR(2)="DBRS#^DBRS date^DBRS other information"
"RTN","DGPFDBRS",11,0)
 ;   ...
"RTN","DGPFDBRS",12,0)
 ;   ARR(n)="DBRS#^DBRS date^DBRS other information"
"RTN","DGPFDBRS",13,0)
 ; Note: the DBRS entries are listed in the reversed order. 
"RTN","DGPFDBRS",14,0)
 ;   ARR(1) contains the latest entry
"RTN","DGPFDBRS",15,0)
 ; DGFLAG - for which flag the DBRS entry data need to be returned 
"RTN","DGPFDBRS",16,0)
 ;   Note: Default is "BEHAVIORAL"
"RTN","DGPFDBRS",17,0)
 ;
"RTN","DGPFDBRS",18,0)
 ;Returns:
"RTN","DGPFDBRS",19,0)
 ; the latest entry ARR(1) - if any entries exist
"RTN","DGPFDBRS",20,0)
 ;or
"RTN","DGPFDBRS",21,0)
 ; "" - if no entries found
"RTN","DGPFDBRS",22,0)
 ; "" - if the patient doesn't have a PRF flag
"RTN","DGPFDBRS",23,0)
 ;
"RTN","DGPFDBRS",24,0)
GETDBRS(DGDFN,DGRETARR,DGFLAG) ;
"RTN","DGPFDBRS",25,0)
 N DG2613,DGARR,DGIEN,DGCNT,DGCURFLG
"RTN","DGPFDBRS",26,0)
 S DGFLAG=$G(DGFLAG,"BEHAVIORAL")
"RTN","DGPFDBRS",27,0)
 S DG2613=0 F  S DG2613=$O(^DGPF(26.13,"B",DGDFN,DG2613)) Q:+DG2613=0  D
"RTN","DGPFDBRS",28,0)
 . K DGARR
"RTN","DGPFDBRS",29,0)
 . D GETS^DIQ(26.13,DG2613_",",".02;2*","E","DGARR")
"RTN","DGPFDBRS",30,0)
 . S DGCURFLG=$G(DGARR(26.13,DG2613_",",.02,"E"))
"RTN","DGPFDBRS",31,0)
 . I DGCURFLG']"" Q
"RTN","DGPFDBRS",32,0)
 . S DGIEN="Z",DGCNT=0
"RTN","DGPFDBRS",33,0)
 . F  S DGIEN=$O(DGARR(26.131,DGIEN),-1) Q:DGIEN']""  D
"RTN","DGPFDBRS",34,0)
 . . S DGCNT=DGCNT+1 S DGRETARR(DGCURFLG,DGCNT)=DGARR(26.131,DGIEN,.01,"E")_U_DGARR(26.131,DGIEN,.02,"E")
"RTN","DGPFDBRS",35,0)
 I '$D(DGRETARR) Q ""
"RTN","DGPFDBRS",36,0)
 Q $G(DGRETARR(DGFLAG,1))
"RTN","DGPFDBRS",37,0)
 ;
"RTN","DGPFHLF")
0^40^B68443058^n/a
"RTN","DGPFHLF",1,0)
DGPFHLF ;SHRPE/SGM - PRF REFRESH ASSIGNMENT ; Aug 21, 2018 11:30
"RTN","DGPFHLF",2,0)
 ;;5.3;Registration;**951**;Aug 13, 1993;Build 135
"RTN","DGPFHLF",3,0)
 ;    Last edited: SHRPE/SGM - Nov 15,, 2018 14:25
"RTN","DGPFHLF",4,0)
 ;
"RTN","DGPFHLF",5,0)
 QUIT
"RTN","DGPFHLF",6,0)
 ; ICR#  TYPE  DESCRIPTION
"RTN","DGPFHLF",7,0)
 ;-----  ----  -------------------------
"RTN","DGPFHLF",8,0)
 ; 2056  Sup   ^DIQ
"RTN","DGPFHLF",9,0)
 ; 3277  Sup   OWNSKEY^XUSRB
"RTN","DGPFHLF",10,0)
 ;10103  Sup   ^XLFDT: $$FMTE, $$NOW
"RTN","DGPFHLF",11,0)
 ;10112  Sup   $$SITE^VASITE
"RTN","DGPFHLF",12,0)
 ;
"RTN","DGPFHLF",13,0)
RF ; Option: DGPF RECORD REFRESH
"RTN","DGPFHLF",14,0)
 ;  .DGPFA() - contains the assignment data
"RTN","DGPFHLF",15,0)
 ;  if Ownership failure choice selected then certain values may change
"RTN","DGPFHLF",16,0)
 ;
"RTN","DGPFHLF",17,0)
 N I,J,X,NOW,SITE,TXT,USER
"RTN","DGPFHLF",18,0)
 N DGIEN,DGPFA,DGPFAH,DGWHO,DGWHY
"RTN","DGPFHLF",19,0)
 N DGAHIEN,DGERR,DGIEN,DGPFA,DGPFAH
"RTN","DGPFHLF",20,0)
 ;   Introductory text
"RTN","DGPFHLF",21,0)
 K TXT D TXT(.TXT,10,0,1)
"RTN","DGPFHLF",22,0)
 W @IOF F I=1:1 Q:'$D(TXT(I))  W !,TXT(I)
"RTN","DGPFHLF",23,0)
 W !
"RTN","DGPFHLF",24,0)
 ;
"RTN","DGPFHLF",25,0)
 ;   Authorization check
"RTN","DGPFHLF",26,0)
 Q:'$$CHECK
"RTN","DGPFHLF",27,0)
 ;
"RTN","DGPFHLF",28,0)
 ;   select PRF Assignment
"RTN","DGPFHLF",29,0)
 S DGIEN=$$SELASGN^DGPFUT6("I $P(^(0),U,2)[""(26.15,""")
"RTN","DGPFHLF",30,0)
 Q:DGIEN<1
"RTN","DGPFHLF",31,0)
 ;
"RTN","DGPFHLF",32,0)
 ;   attempt to obtain lock on assignment record
"RTN","DGPFHLF",33,0)
 I '$$LOCK^DGPFAA3(DGIEN) D  Q
"RTN","DGPFHLF",34,0)
 . K TXT D TXT(.TXT,26,0,1) W !!,TXT(1)
"RTN","DGPFHLF",35,0)
 . Q
"RTN","DGPFHLF",36,0)
 ;
"RTN","DGPFHLF",37,0)
 ;   get assignment into DGPFA array
"RTN","DGPFHLF",38,0)
 I '$$GETASGN^DGPFAA(DGIEN,.DGPFA,1) D  G OUT
"RTN","DGPFHLF",39,0)
 . K TXT D TXT(.TXT,28,0,1) W !!,TXT(1)
"RTN","DGPFHLF",40,0)
 . Q
"RTN","DGPFHLF",41,0)
 ;
"RTN","DGPFHLF",42,0)
 ;   prompt for reason for doing refresh
"RTN","DGPFHLF",43,0)
 ;   if OWNER SITE update needed, prompt for OWNER SITE value
"RTN","DGPFHLF",44,0)
 S DGWHY=$$PROMPT I $S(DGWHY'?1U:1,1:"OU"'[DGWHY) G OUT
"RTN","DGPFHLF",45,0)
 I DGWHY="O" D  I DGWHO<1 G OUT
"RTN","DGPFHLF",46,0)
 . S DGWHO=$$OWNER I DGWHO<1 Q
"RTN","DGPFHLF",47,0)
 . I DGWHO=DGPFA("OWNER") Q
"RTN","DGPFHLF",48,0)
 . S DGPFA("OWNER")=DGWHO
"RTN","DGPFHLF",49,0)
 . I '$$ISDIV^DGPFUT(+DGWHO) S DGPFA("REVIEWDT")=""
"RTN","DGPFHLF",50,0)
 . I '$D(^DG(40.8,"APRF",+DGWHO)) S DGPFA("REVIEWDT")=""
"RTN","DGPFHLF",51,0)
 . Q
"RTN","DGPFHLF",52,0)
 ;
"RTN","DGPFHLF",53,0)
 ;   add or rest some DGPFA()
"RTN","DGPFHLF",54,0)
 S NOW=$$NOW^XLFDT,$P(NOW,U,2)=$$FMTE^XLFDT(+$E(NOW,1,12))
"RTN","DGPFHLF",55,0)
 S SITE=$$SITE^VASITE
"RTN","DGPFHLF",56,0)
 S USER=$$DIQ^DGPFUT(200,DUZ,.01)
"RTN","DGPFHLF",57,0)
 S DGPFA("ACTION")=7+DGPFA("STATUS")
"RTN","DGPFHLF",58,0)
 ;
"RTN","DGPFHLF",59,0)
 ;   build DGPFAH()
"RTN","DGPFHLF",60,0)
 S DGPFAH("ASSIGN")=DGIEN_U_$P(DGPFA("DFN"),U,2)
"RTN","DGPFHLF",61,0)
 S DGPFAH("ASSIGNDT")=+NOW
"RTN","DGPFHLF",62,0)
 S DGPFAH("ACTION")=DGPFA("ACTION")
"RTN","DGPFHLF",63,0)
 S DGPFAH("ENTERBY")=DUZ
"RTN","DGPFHLF",64,0)
 S DGPFAH("APPRVBY")=DUZ
"RTN","DGPFHLF",65,0)
 S DGPFAH("TIULINK")=""
"RTN","DGPFHLF",66,0)
 S DGPFAH("ORIGFAC")=+SITE
"RTN","DGPFHLF",67,0)
 ;
"RTN","DGPFHLF",68,0)
 K TXT D TXT(.TXT,1,1,0)
"RTN","DGPFHLF",69,0)
 S $P(TXT(4,0),":",2)=" "_$P(SITE,U,2)
"RTN","DGPFHLF",70,0)
 S $P(TXT(5,0),":",2)=" "_USER
"RTN","DGPFHLF",71,0)
 S $P(TXT(6,0),":",2)=" "_$P(NOW,U,2)
"RTN","DGPFHLF",72,0)
 M DGPFAH("COMMENT")=TXT
"RTN","DGPFHLF",73,0)
 ;
"RTN","DGPFHLF",74,0)
 S J=0 F I=0:0 S I=$O(DGPFA("DBRS#",I)) Q:'I  D
"RTN","DGPFHLF",75,0)
 . S X=$P(DGPFA("DBRS#",I),U)
"RTN","DGPFHLF",76,0)
 . S $P(X,U,2)=$P($G(DGPFA("DBRS OTHER",I)),U)
"RTN","DGPFHLF",77,0)
 . S $P(X,U,3)=$P($G(DGPFA("DBRS DATE",I)),U)
"RTN","DGPFHLF",78,0)
 . S $P(X,U,5)=$P($G(DGPFA("DBRS SITE",I)),U)
"RTN","DGPFHLF",79,0)
 . S $P(X,U,4)="N"
"RTN","DGPFHLF",80,0)
 . S J=J+1,DGPFAH("DBRS",J)=X
"RTN","DGPFHLF",81,0)
 . Q
"RTN","DGPFHLF",82,0)
 ;
"RTN","DGPFHLF",83,0)
 ;   Display flag assignment review screen to user
"RTN","DGPFHLF",84,0)
 ;   9/6/2018 - business analyst said to not show the display screen
"RTN","DGPFHLF",85,0)
 ; S X="DGPF FLAG ASSIGNMENT REFRESH"
"RTN","DGPFHLF",86,0)
 ; S X(0)="^^ASSIGNMENT REFRESH^"
"RTN","DGPFHLF",87,0)
 ; D REVIEW^DGPFUT3(.DGPFA,.DGPFAH,DGIEN,X,X(0))
"RTN","DGPFHLF",88,0)
 ;
"RTN","DGPFHLF",89,0)
 ;   display message about the choices made
"RTN","DGPFHLF",90,0)
 K TXT D TXT(.TXT,41,0,1)
"RTN","DGPFHLF",91,0)
 W ! I DGWHY="O" W !,TXT(1),!,TXT(2)_$P(DGWHO,U,2)
"RTN","DGPFHLF",92,0)
 W !,TXT(3),!,TXT(4),!
"RTN","DGPFHLF",93,0)
 ;
"RTN","DGPFHLF",94,0)
 ;   prompt if which to continue
"RTN","DGPFHLF",95,0)
 S X="Do you wish to send an HL7 update message now"
"RTN","DGPFHLF",96,0)
 I $$ANSWER^DGPFUT(X,"NO","YO")<1 G OUT
"RTN","DGPFHLF",97,0)
 ;
"RTN","DGPFHLF",98,0)
 ;   if refresh due to change of ownership update, then file assignment
"RTN","DGPFHLF",99,0)
 K DGERR,TXT
"RTN","DGPFHLF",100,0)
 D TXT(.TXT,46,0,1)
"RTN","DGPFHLF",101,0)
 I +$G(DGWHO) D  I $D(DGERR) G OUT
"RTN","DGPFHLF",102,0)
 . D STOASGN^DGPFAA(.DGPFA,.DGERR,"D")
"RTN","DGPFHLF",103,0)
 . I $D(DGERR) W !!,TXT(1),!,TXT(2),!
"RTN","DGPFHLF",104,0)
 . Q
"RTN","DGPFHLF",105,0)
 ;   create History record, display message if failed
"RTN","DGPFHLF",106,0)
 W !!,TXT(3)
"RTN","DGPFHLF",107,0)
 S DGAHIEN=$$STOHIST^DGPFAAH(.DGPFAH,.DGERR)
"RTN","DGPFHLF",108,0)
 I $D(DGERR) W !,TXT(4),!,TXT(2) G OUT
"RTN","DGPFHLF",109,0)
 ;
"RTN","DGPFHLF",110,0)
 ;   send HL7 update message to refresh assignment of a CAT I flag
"RTN","DGPFHLF",111,0)
 S X=$$SNDORU^DGPFHLS(DGIEN) W ! W:X TXT(5) W:'X TXT(6)
"RTN","DGPFHLF",112,0)
 ;
"RTN","DGPFHLF",113,0)
OUT ;
"RTN","DGPFHLF",114,0)
 ;   release lock
"RTN","DGPFHLF",115,0)
 D UNLOCK^DGPFAA3(DGIEN)
"RTN","DGPFHLF",116,0)
 W ! I $$ANSWER^DGPFUT("Press any key to continue",,"E")
"RTN","DGPFHLF",117,0)
 Q
"RTN","DGPFHLF",118,0)
 ;
"RTN","DGPFHLF",119,0)
 ;---------------------------------------------------------------------
"RTN","DGPFHLF",120,0)
CHECK() ;   validate user authorized to run this Option
"RTN","DGPFHLF",121,0)
 N X,Y,DGRET,KEY,TXT
"RTN","DGPFHLF",122,0)
 S KEY="DGPF TRANSMISSIONS"
"RTN","DGPFHLF",123,0)
 D OWNSKEY^XUSRB(.DGRET,KEY,DUZ)
"RTN","DGPFHLF",124,0)
 S Y=(DGRET(0)=1)
"RTN","DGPFHLF",125,0)
 S X=($G(DUZ(0))="@")
"RTN","DGPFHLF",126,0)
 I X,Y Q 1
"RTN","DGPFHLF",127,0)
 D TXT(.TXT,8,0,1) W !!,TXT(1),!
"RTN","DGPFHLF",128,0)
 Q 0
"RTN","DGPFHLF",129,0)
 ;
"RTN","DGPFHLF",130,0)
OWNER() ;   prompt user for site to be assignment owner
"RTN","DGPFHLF",131,0)
 ;   code copied from CHANGE OWNERSHIP action CO^DGPFLMA4
"RTN","DGPFHLF",132,0)
 ;   do not remove current facility from list
"RTN","DGPFHLF",133,0)
 N I,X,DFN,DGOWN,DIR0,DIRA,DIRS,DIV,TXT
"RTN","DGPFHLF",134,0)
 S DFN=+DGPFA("DFN")
"RTN","DGPFHLF",135,0)
 ;
"RTN","DGPFHLF",136,0)
 ;   add treating facilities to selection list for Cat I assignments
"RTN","DGPFHLF",137,0)
 ;   display message if no other facilities found for patient
"RTN","DGPFHLF",138,0)
 I '$$BLDTFL^DGPFUT2(DFN,.DGOWN) D  Q 0
"RTN","DGPFHLF",139,0)
 . D TXT(.TXT,36,0,1)
"RTN","DGPFHLF",140,0)
 . W ! F I=1:1 Q:'$D(TXT(I))  W !,TXT(I)
"RTN","DGPFHLF",141,0)
 . W !
"RTN","DGPFHLF",142,0)
 . Q
"RTN","DGPFHLF",143,0)
 S DIV=0 F I=0:0 S DIV=$O(^DG(40.8,"APRF",DIV)) Q:'DIV  D
"RTN","DGPFHLF",144,0)
 . I $$TF^XUAF4(DIV) S DGOWN(DIV)=""
"RTN","DGPFHLF",145,0)
 . Q
"RTN","DGPFHLF",146,0)
 ;
"RTN","DGPFHLF",147,0)
 S DIRA="Select new owner site for this record flag assignment"
"RTN","DGPFHLF",148,0)
 S DIR0="P^4:EMZ"
"RTN","DGPFHLF",149,0)
 S DIRS="I $D(DGOWN(+Y))"
"RTN","DGPFHLF",150,0)
 W ! S X=$$ANSWER^DGPFUT(DIRA,,DIR0,,DIRS)
"RTN","DGPFHLF",151,0)
 I X>0 S $P(X,U,2)=$$NAME^XUAF4(+X)
"RTN","DGPFHLF",152,0)
 Q X
"RTN","DGPFHLF",153,0)
 ; 
"RTN","DGPFHLF",154,0)
PROMPT() ;   prompt user for reason for running this option
"RTN","DGPFHLF",155,0)
 N X,DIR0,DIRA,DGDIRH,TXT
"RTN","DGPFHLF",156,0)
 S DIR0="SO^U:Update failed;O:Ownership transfer failed"
"RTN","DGPFHLF",157,0)
 S DIRA="Reason for refreshing data"
"RTN","DGPFHLF",158,0)
 D TXT(.DGDIRH,30,0,1)
"RTN","DGPFHLF",159,0)
 S DGDIRH="   "
"RTN","DGPFHLF",160,0)
 S X=$$ANSWER^DGPFUT(DIRA,,DIR0,.DGDIRH)
"RTN","DGPFHLF",161,0)
 Q X
"RTN","DGPFHLF",162,0)
 ;
"RTN","DGPFHLF",163,0)
TXT(TXT,ST,ZERO,PAD) ;
"RTN","DGPFHLF",164,0)
 N I,J,X S J=0
"RTN","DGPFHLF",165,0)
 F I=ST:1 S J=J+1,X=$P($T(T+I),";",3,99) Q:X?1"[end]".E  D
"RTN","DGPFHLF",166,0)
 . I $G(PAD) S X="   "_X
"RTN","DGPFHLF",167,0)
 . I $G(ZERO) S TXT(J,0)=X
"RTN","DGPFHLF",168,0)
 . E  S TXT(J)=X
"RTN","DGPFHLF",169,0)
 . Q
"RTN","DGPFHLF",170,0)
 Q
"RTN","DGPFHLF",171,0)
 ;
"RTN","DGPFHLF",172,0)
T ;
"RTN","DGPFHLF",173,0)
1 ;;Updated PRF Assignment with the current data from this site.
"RTN","DGPFHLF",174,0)
 ;;This action will make all the recipients of the HL7 message to
"RTN","DGPFHLF",175,0)
 ;;update their assignment to exactly match the data in this message.
"RTN","DGPFHLF",176,0)
 ;;  Originating Facility:
"RTN","DGPFHLF",177,0)
 ;;  Updated By          :
"RTN","DGPFHLF",178,0)
 ;;  Date action taken   :
"RTN","DGPFHLF",179,0)
 ;;[end]
"RTN","DGPFHLF",180,0)
8 ;;Sorry, you are not authorized to run this Option.
"RTN","DGPFHLF",181,0)
 ;;[end]
"RTN","DGPFHLF",182,0)
10 ;;This option is designed to resynchronize a Flag Assignment which has
"RTN","DGPFHLF",183,0)
 ;;differing values at various VAMC facilities where the patient has
"RTN","DGPFHLF",184,0)
 ;;been registered.  The data on this system will be considered the
"RTN","DGPFHLF",185,0)
 ;;authorized source of that information for this flag assignment at
"RTN","DGPFHLF",186,0)
 ;;this time.
"RTN","DGPFHLF",187,0)
 ;;
"RTN","DGPFHLF",188,0)
 ;;Please make sure all the data associated with this Flag Assignment
"RTN","DGPFHLF",189,0)
 ;;is correct.  If not, make those corrections before running this
"RTN","DGPFHLF",190,0)
 ;;option for all flag assignment fields except for the OWNER SITE
"RTN","DGPFHLF",191,0)
 ;;field.
"RTN","DGPFHLF",192,0)
 ;;
"RTN","DGPFHLF",193,0)
 ;;If you are running this option because a previous CHANGE OF
"RTN","DGPFHLF",194,0)
 ;;OWNERSHIP action failed to properly update all facilities, then this
"RTN","DGPFHLF",195,0)
 ;;option will prompt you for the name of that facility which is to be
"RTN","DGPFHLF",196,0)
 ;;the OWNER SITE for this flag assignment.
"RTN","DGPFHLF",197,0)
 ;;[end]
"RTN","DGPFHLF",198,0)
26 ;;Record flag assignment currently in use, cannot be edited!
"RTN","DGPFHLF",199,0)
 ;;[end]
"RTN","DGPFHLF",200,0)
28 ;;Unable to retrieve the record flag assignment selected.
"RTN","DGPFHLF",201,0)
 ;;[end]
"RTN","DGPFHLF",202,0)
30 ;;Enter the reason for exercising this option.
"RTN","DGPFHLF",203,0)
 ;;Enter 'O' if a change of ownership was done but some HL7 update
"RTN","DGPFHLF",204,0)
 ;;  message failed resulting if various facilities having a different
"RTN","DGPFHLF",205,0)
 ;;  value for the OWNER SITE field for this assignment.
"RTN","DGPFHLF",206,0)
 ;;Enter 'U' for all other reasons.
"RTN","DGPFHLF",207,0)
 ;;[end]
"RTN","DGPFHLF",208,0)
36 ;;Your TREATING FACILITY LIST file does not show any other VAMC
"RTN","DGPFHLF",209,0)
 ;;facilities as having registered this patient.  Please use one of the
"RTN","DGPFHLF",210,0)
 ;;other Patient Record Flag options to correct the data for this flag
"RTN","DGPFHLF",211,0)
 ;;assignment.
"RTN","DGPFHLF",212,0)
 ;;[end]
"RTN","DGPFHLF",213,0)
41 ;;You have selected this Facility/Division as the OWNER SITE:
"RTN","DGPFHLF",214,0)
 ;;    
"RTN","DGPFHLF",215,0)
 ;;This assignment will now be refreshed/resent to all sites where
"RTN","DGPFHLF",216,0)
 ;;this patient has been registered.
"RTN","DGPFHLF",217,0)
 ;;[end]
"RTN","DGPFHLF",218,0)
46 ;;PRF Assignment update for change of ownership failed.
"RTN","DGPFHLF",219,0)
 ;;No HL7 update messages were sent to the other sites.
"RTN","DGPFHLF",220,0)
 ;;Creating a PRF Assignment History record of this action.
"RTN","DGPFHLF",221,0)
 ;;PRF Assignment History record was not filed successfully.
"RTN","DGPFHLF",222,0)
 ;;HL7 message sent...updating patient's sites of record.
"RTN","DGPFHLF",223,0)
 ;;HL7 message **NOT** sent updating patient's sites of record.
"RTN","DGPFHLF",224,0)
 ;;[end]
"RTN","DGPFHLQ")
0^22^B53156618^B44511391
"RTN","DGPFHLQ",1,0)
DGPFHLQ ;ALB/RPM - PRF HL7 QRY/ORF PROCESSING ; 1/23/03
"RTN","DGPFHLQ",2,0)
 ;;5.3;Registration;**425,650,951**;Aug 13, 1993;Build 135
"RTN","DGPFHLQ",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPFHLQ",4,0)
 ;
"RTN","DGPFHLQ",5,0)
BLDQRY(DGDFN,DGICN,DGROOT,DGHL) ;Build QRY~R02 Message/Segments
"RTN","DGPFHLQ",6,0)
 ;
"RTN","DGPFHLQ",7,0)
 ;  Input:
"RTN","DGPFHLQ",8,0)
 ;    DGDFN - (required) Pointer to patient in PATIENT (#2) file
"RTN","DGPFHLQ",9,0)
 ;    DGICN - (required) Patient's Integrated Control Number
"RTN","DGPFHLQ",10,0)
 ;   DGROOT - (required) Closed root array or global name for segment
"RTN","DGPFHLQ",11,0)
 ;            storage.
"RTN","DGPFHLQ",12,0)
 ;     DGHL - (required) VistA HL7 environment array
"RTN","DGPFHLQ",13,0)
 ;
"RTN","DGPFHLQ",14,0)
 ;  Output:
"RTN","DGPFHLQ",15,0)
 ;   Function Value - 1 on success, 0 on failure
"RTN","DGPFHLQ",16,0)
 ;           DGROOT - array of HL7 segments on success
"RTN","DGPFHLQ",17,0)
 ;
"RTN","DGPFHLQ",18,0)
 N DGCNT   ;segment counter
"RTN","DGPFHLQ",19,0)
 N DGDEM   ;pt. demographics array
"RTN","DGPFHLQ",20,0)
 N DGQRD   ;formatted QRD segment
"RTN","DGPFHLQ",21,0)
 N DGQRF   ;formatted QRF segment
"RTN","DGPFHLQ",22,0)
 N DGRSLT  ;function value
"RTN","DGPFHLQ",23,0)
 N DGSTR   ;field string
"RTN","DGPFHLQ",24,0)
 ;
"RTN","DGPFHLQ",25,0)
 S DGRSLT=0
"RTN","DGPFHLQ",26,0)
 S DGCNT=0
"RTN","DGPFHLQ",27,0)
 ;
"RTN","DGPFHLQ",28,0)
 I +$G(DGDFN),+$G(DGICN),$G(DGROOT)]"" D
"RTN","DGPFHLQ",29,0)
 . ;
"RTN","DGPFHLQ",30,0)
 . ;get patient demographics
"RTN","DGPFHLQ",31,0)
 . Q:'$$GETPAT^DGPFUT2(DGDFN,.DGDEM)
"RTN","DGPFHLQ",32,0)
 . ;
"RTN","DGPFHLQ",33,0)
 . ;build QRD
"RTN","DGPFHLQ",34,0)
 . S DGSTR="1,2,3,4,7,8,9,10"
"RTN","DGPFHLQ",35,0)
 . S DGQRD=$$QRD^DGPFHLQ1(DGDFN,DGICN,DGSTR,.DGHL)
"RTN","DGPFHLQ",36,0)
 . Q:(DGQRD="")
"RTN","DGPFHLQ",37,0)
 . S DGCNT=DGCNT+1,@DGROOT@(DGCNT)=DGQRD
"RTN","DGPFHLQ",38,0)
 . ;
"RTN","DGPFHLQ",39,0)
 . ;build QRF
"RTN","DGPFHLQ",40,0)
 . S DGSTR="1,4,5"
"RTN","DGPFHLQ",41,0)
 . S DGQRF=$$QRF^DGPFHLQ2($G(DGDEM("SSN")),$G(DGDEM("DOB")),DGSTR,.DGHL)
"RTN","DGPFHLQ",42,0)
 . Q:(DGQRF="")
"RTN","DGPFHLQ",43,0)
 . S DGCNT=DGCNT+1,@DGROOT@(DGCNT)=DGQRF
"RTN","DGPFHLQ",44,0)
 . ;
"RTN","DGPFHLQ",45,0)
 . S DGRSLT=1
"RTN","DGPFHLQ",46,0)
 Q DGRSLT
"RTN","DGPFHLQ",47,0)
 ;
"RTN","DGPFHLQ",48,0)
BLDORF(DGROOT,DGHL,DGDFN,DGQRY,DGSEGERR,DGQRYERR) ;Build ORF~R04 Message/Segments
"RTN","DGPFHLQ",49,0)
 ;
"RTN","DGPFHLQ",50,0)
 ;  Input:
"RTN","DGPFHLQ",51,0)
 ;     DGROOT - (required) Segment array
"RTN","DGPFHLQ",52,0)
 ;       DGHL - (required) HL7 environment array
"RTN","DGPFHLQ",53,0)
 ;      DGDFN - (required) Pointer to patient in PATIENT (#2) file
"RTN","DGPFHLQ",54,0)
 ;      DGQRY - (required) Array of parsed QRY data
"RTN","DGPFHLQ",55,0)
 ;   DGSEGERR - (optional) Array of errors encountered during QRY parsing
"RTN","DGPFHLQ",56,0)
 ;   DGQRYERR - (optional) Error encountered during ICN to DFN conversion
"RTN","DGPFHLQ",57,0)
 ;
"RTN","DGPFHLQ",58,0)
 ;  Output:
"RTN","DGPFHLQ",59,0)
 ;   Function Value - 1 on success, 0 on failure
"RTN","DGPFHLQ",60,0)
 ;
"RTN","DGPFHLQ",61,0)
 N DGACK     ;acknowledgment code (i.e. AA, AE)
"RTN","DGPFHLQ",62,0)
 N DGAIENS   ;array of assignment IENS
"RTN","DGPFHLQ",63,0)
 N DGCNT     ;segment counter
"RTN","DGPFHLQ",64,0)
 N DGI       ;generic index
"RTN","DGPFHLQ",65,0)
 N DGOBROOT  ;temporary storage of OBR/OBX segments
"RTN","DGPFHLQ",66,0)
 N DGRSLT    ;function value
"RTN","DGPFHLQ",67,0)
 N DGSEGSTR  ;formatted segment string
"RTN","DGPFHLQ",68,0)
 N DGSTR     ;comma-delimited list of fields to include
"RTN","DGPFHLQ",69,0)
 ;
"RTN","DGPFHLQ",70,0)
 S DGRSLT=0
"RTN","DGPFHLQ",71,0)
 S DGOBROOT=$NA(^TMP("DGPF OB",$J))
"RTN","DGPFHLQ",72,0)
 K @DGOBROOT
"RTN","DGPFHLQ",73,0)
 ;
"RTN","DGPFHLQ",74,0)
 I $G(DGROOT)]"",$D(DGQRY) D
"RTN","DGPFHLQ",75,0)
 . S DGCNT=0
"RTN","DGPFHLQ",76,0)
 . S DGACK=$S($D(DGSEGERR):"AE",$D(DGQRYERR):"AE",1:"AA")
"RTN","DGPFHLQ",77,0)
 . ;
"RTN","DGPFHLQ",78,0)
 . ;build OBR/OBX segments for any Category I record flag assignments
"RTN","DGPFHLQ",79,0)
 . I DGACK="AA",$$GETALL^DGPFAA($G(DGDFN),.DGAIENS,"",1) D
"RTN","DGPFHLQ",80,0)
 . . ;
"RTN","DGPFHLQ",81,0)
 . . ;build and temporarily store OBR/OBX segments
"RTN","DGPFHLQ",82,0)
 . . Q:$$BLDALLOB(DGOBROOT,.DGAIENS,.DGHL)
"RTN","DGPFHLQ",83,0)
 . . ;
"RTN","DGPFHLQ",84,0)
 . . ;if we get here then the data retrieval failed
"RTN","DGPFHLQ",85,0)
 . . S DGQRYERR=261130  ;unable to retrieve existing assignments
"RTN","DGPFHLQ",86,0)
 . . S DGACK="AE"
"RTN","DGPFHLQ",87,0)
 . . K @DGOBROOT
"RTN","DGPFHLQ",88,0)
 . ;
"RTN","DGPFHLQ",89,0)
 . ;build MSA segment
"RTN","DGPFHLQ",90,0)
 . S DGSTR=$S($D(DGQRYERR):"1,2,6",1:"1,2")
"RTN","DGPFHLQ",91,0)
 . S DGSEGSTR=$$MSA^DGPFHLU3(DGACK,DGHL("MID"),.DGQRYERR,DGSTR,.DGHL)
"RTN","DGPFHLQ",92,0)
 . Q:(DGSEGSTR="")
"RTN","DGPFHLQ",93,0)
 . S DGCNT=DGCNT+1,@DGROOT@(DGCNT)=DGSEGSTR
"RTN","DGPFHLQ",94,0)
 . ;
"RTN","DGPFHLQ",95,0)
 . ;build ERR segments for any segment parsing errors
"RTN","DGPFHLQ",96,0)
 . I $D(DGSEGERR),'$$BLDERR^DGPFHLU4(DGROOT,.DGSEGERR,.DGHL,.DGCNT) Q
"RTN","DGPFHLQ",97,0)
 . ;
"RTN","DGPFHLQ",98,0)
 . ;build QRD segment
"RTN","DGPFHLQ",99,0)
 . S DGSTR="1,2,3,4,7,8,9,10"
"RTN","DGPFHLQ",100,0)
 . S DGSEGSTR=$$QRD^DGPFHLQ1($G(DGQRY("QID")),$G(DGQRY("ICN")),DGSTR,.DGHL)
"RTN","DGPFHLQ",101,0)
 . Q:(DGSEGSTR="")
"RTN","DGPFHLQ",102,0)
 . S DGCNT=DGCNT+1,@DGROOT@(DGCNT)=DGSEGSTR
"RTN","DGPFHLQ",103,0)
 . ;
"RTN","DGPFHLQ",104,0)
 . ;move any OBR/OBX segments into the message
"RTN","DGPFHLQ",105,0)
 . S DGI=0
"RTN","DGPFHLQ",106,0)
 . F  S DGI=$O(@DGOBROOT@(DGI)) Q:'DGI  D
"RTN","DGPFHLQ",107,0)
 . . S DGCNT=DGCNT+1,@DGROOT@(DGCNT)=@DGOBROOT@(DGI)
"RTN","DGPFHLQ",108,0)
 . ;
"RTN","DGPFHLQ",109,0)
 . ;success
"RTN","DGPFHLQ",110,0)
 . S DGRSLT=1
"RTN","DGPFHLQ",111,0)
 ;
"RTN","DGPFHLQ",112,0)
 ;cleanup
"RTN","DGPFHLQ",113,0)
 K @DGOBROOT
"RTN","DGPFHLQ",114,0)
 ;
"RTN","DGPFHLQ",115,0)
 Q DGRSLT
"RTN","DGPFHLQ",116,0)
 ;
"RTN","DGPFHLQ",117,0)
BLDALLOB(DGROOT,DGAIENS,DGHL) ;build all OBRs and OBXs for a patient
"RTN","DGPFHLQ",118,0)
 ;
"RTN","DGPFHLQ",119,0)
 ;  Input:
"RTN","DGPFHLQ",120,0)
 ;  DGROOT - (required) Closed root array or global name for segment
"RTN","DGPFHLQ",121,0)
 ;            storage.
"RTN","DGPFHLQ",122,0)
 ; DGAIENS - (required) Array of pointers to PRF ASSIGNMENT (#26.13) file
"RTN","DGPFHLQ",123,0)
 ;    DGHL - (required) VistA HL7 environment array
"RTN","DGPFHLQ",124,0)
 ;
"RTN","DGPFHLQ",125,0)
 ;  Output:
"RTN","DGPFHLQ",126,0)
 ;   Function Value - 1 on success, 0 on failure
"RTN","DGPFHLQ",127,0)
 ;           DGROOT - array of HL7 segments on success
"RTN","DGPFHLQ",128,0)
 ;
"RTN","DGPFHLQ",129,0)
 N DGAIEN    ;single assignment IEN
"RTN","DGPFHLQ",130,0)
 N DGCNT     ;segment counter
"RTN","DGPFHLQ",131,0)
 N DGHIEN    ;single assignment history IEN
"RTN","DGPFHLQ",132,0)
 N DGHIENS   ;array of assignment history IENs
"RTN","DGPFHLQ",133,0)
 N DGOBRSET  ;OBR segment Set ID
"RTN","DGPFHLQ",134,0)
 N DGOBXOK   ;OBX segment creation flag
"RTN","DGPFHLQ",135,0)
 N DGOBXSET  ;OBX segment Set ID
"RTN","DGPFHLQ",136,0)
 N DGPFA     ;assignment data array
"RTN","DGPFHLQ",137,0)
 N DGPFAH    ;assignment history data array
"RTN","DGPFHLQ",138,0)
 N DGRSLT    ;function value
"RTN","DGPFHLQ",139,0)
 N DGSEGSTR  ;formatted segment string
"RTN","DGPFHLQ",140,0)
 N DGSTR     ;comma-delimited list of fields to include
"RTN","DGPFHLQ",141,0)
 N DGTROOT   ;closed root name of text array value
"RTN","DGPFHLQ",142,0)
 N LASTH     ;last assignment history entry
"RTN","DGPFHLQ",143,0)
 N DBRSSTR,Z
"RTN","DGPFHLQ",144,0)
 ;
"RTN","DGPFHLQ",145,0)
 S (DGCNT,DGRSLT)=0
"RTN","DGPFHLQ",146,0)
 I $G(DGROOT)]"",$D(DGAIENS) D
"RTN","DGPFHLQ",147,0)
 .S (DGAIEN,DGOBRSET)=0
"RTN","DGPFHLQ",148,0)
 .F  S DGAIEN=$O(DGAIENS(DGAIEN)) Q:'DGAIEN  D
"RTN","DGPFHLQ",149,0)
 ..N DGHIENS  ;array of assignment history IENS
"RTN","DGPFHLQ",150,0)
 ..N DGPFA    ;assignment data array
"RTN","DGPFHLQ",151,0)
 ..;get assignment details
"RTN","DGPFHLQ",152,0)
 ..Q:'$$GETASGN^DGPFAA(DGAIEN,.DGPFA)
"RTN","DGPFHLQ",153,0)
 ..;get last assignment history for narrative observation date
"RTN","DGPFHLQ",154,0)
 ..Q:'$$GETHIST^DGPFAAH($$GETLAST^DGPFAAH(DGAIEN),.DGPFAH,1)
"RTN","DGPFHLQ",155,0)
 ..K LASTH M LASTH=DGPFAH
"RTN","DGPFHLQ",156,0)
 ..;build OBR segment for this assignment
"RTN","DGPFHLQ",157,0)
 ..S DGSTR="1,4,7,20,21"
"RTN","DGPFHLQ",158,0)
 ..S DGOBRSET=DGOBRSET+1
"RTN","DGPFHLQ",159,0)
 ..S DGSEGSTR=$$OBR^DGPFHLU1(DGOBRSET,.DGPFA,.DGPFAH,DGSTR,.DGHL)
"RTN","DGPFHLQ",160,0)
 ..Q:DGSEGSTR=""
"RTN","DGPFHLQ",161,0)
 ..S DGCNT=DGCNT+1,@DGROOT@(DGCNT)=DGSEGSTR
"RTN","DGPFHLQ",162,0)
 ..;build narrative OBX segment for this assignment
"RTN","DGPFHLQ",163,0)
 ..S DGOBXSET=0
"RTN","DGPFHLQ",164,0)
 ..S DGTROOT="DGPFA(""NARR"")"
"RTN","DGPFHLQ",165,0)
 ..Q:'$$BLDOBXTX^DGPFHLU2(DGROOT,DGTROOT,"N",.DGPFAH,.DGHL,.DGCNT,.DGOBXSET)
"RTN","DGPFHLQ",166,0)
 ..;get a list of all assignment histories
"RTN","DGPFHLQ",167,0)
 ..Q:'$$GETALL^DGPFAAH(DGAIEN,.DGHIENS)
"RTN","DGPFHLQ",168,0)
 ..S DGSTR="1,2,3,5,11,14,23"
"RTN","DGPFHLQ",169,0)
 ..;loop through each assignment history entry
"RTN","DGPFHLQ",170,0)
 ..S DGHIEN=0 F  S DGHIEN=$O(DGHIENS(DGHIEN)) Q:'DGHIEN  D  Q:'DGOBXOK
"RTN","DGPFHLQ",171,0)
 ...N DGPFAH
"RTN","DGPFHLQ",172,0)
 ...S DGOBXOK=0
"RTN","DGPFHLQ",173,0)
 ...;get single assignment history record
"RTN","DGPFHLQ",174,0)
 ...Q:'$$GETHIST^DGPFAAH(DGHIEN,.DGPFAH)
"RTN","DGPFHLQ",175,0)
 ...;build status OBX segment for this history record
"RTN","DGPFHLQ",176,0)
 ...S DGOBXSET=DGOBXSET+1
"RTN","DGPFHLQ",177,0)
 ...S DGSEGSTR=$$OBX^DGPFHLU2(DGOBXSET,"S","",$P($G(DGPFAH("ACTION")),U,2),.DGPFAH,DGSTR,.DGHL)
"RTN","DGPFHLQ",178,0)
 ...Q:DGSEGSTR=""
"RTN","DGPFHLQ",179,0)
 ...S DGCNT=DGCNT+1,@DGROOT@(DGCNT)=DGSEGSTR
"RTN","DGPFHLQ",180,0)
 ...;build review comment OBX segments for this history record
"RTN","DGPFHLQ",181,0)
 ...S DGTROOT="DGPFAH(""COMMENT"")"
"RTN","DGPFHLQ",182,0)
 ...Q:'$$BLDOBXTX^DGPFHLU2(DGROOT,DGTROOT,"C",.DGPFAH,.DGHL,.DGCNT,.DGOBXSET)
"RTN","DGPFHLQ",183,0)
 ...S DGOBXOK=1
"RTN","DGPFHLQ",184,0)
 ...Q
"RTN","DGPFHLQ",185,0)
 ..; build DBRS OBX segments
"RTN","DGPFHLQ",186,0)
 ..; ORF message never updates existing assignment records, so send all DBRS data except for deleted entries
"RTN","DGPFHLQ",187,0)
 ..; regardless of the action code in 26.14.
"RTN","DGPFHLQ",188,0)
 ..S Z="" F  S Z=$O(LASTH("DBRS",Z)) Q:Z=""  D  Q:'DGOBXOK
"RTN","DGPFHLQ",189,0)
 ...S DGOBXOK=0
"RTN","DGPFHLQ",190,0)
 ...S DBRSSTR=$G(LASTH("DBRS",Z))
"RTN","DGPFHLQ",191,0)
 ...; don't send deleted DBRS entries
"RTN","DGPFHLQ",192,0)
 ...I $P($P(DBRSSTR,U,4),";")="D" Q
"RTN","DGPFHLQ",193,0)
 ...S DGOBXSET=DGOBXSET+1
"RTN","DGPFHLQ",194,0)
 ...S DGSEGSTR=$$OBX^DGPFHLU2(DGOBXSET,"D","",DBRSSTR,.LASTH,"1,2,3,5,11,14,23",.DGHL)
"RTN","DGPFHLQ",195,0)
 ...Q:DGSEGSTR=""
"RTN","DGPFHLQ",196,0)
 ...S DGCNT=DGCNT+1,@DGROOT@(DGCNT)=DGSEGSTR
"RTN","DGPFHLQ",197,0)
 ...S DGOBXOK=1
"RTN","DGPFHLQ",198,0)
 ...Q
"RTN","DGPFHLQ",199,0)
 ..Q:'DGOBXOK
"RTN","DGPFHLQ",200,0)
 ..S DGRSLT=1
"RTN","DGPFHLQ",201,0)
 ..Q
"RTN","DGPFHLQ",202,0)
 .Q
"RTN","DGPFHLQ",203,0)
 Q DGRSLT
"RTN","DGPFHLQ4")
0^21^B34191835^B17883143
"RTN","DGPFHLQ4",1,0)
DGPFHLQ4 ;ALB/RPM - PRF HL7 ORF PROCESSING ; 12/13/04
"RTN","DGPFHLQ4",2,0)
 ;;5.3;Registration;**425,650,951**;Aug 13, 1993;Build 135
"RTN","DGPFHLQ4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPFHLQ4",4,0)
 ;
"RTN","DGPFHLQ4",5,0)
PARSORF(DGWRK,DGHL,DGROOT,DGMSG) ;Parse ORF~R04 Message/Segments
"RTN","DGPFHLQ4",6,0)
 ;
"RTN","DGPFHLQ4",7,0)
 ;  Input:
"RTN","DGPFHLQ4",8,0)
 ;     DGWRK - Closed root work global reference
"RTN","DGPFHLQ4",9,0)
 ;      DGHL - HL7 environment array
"RTN","DGPFHLQ4",10,0)
 ;    DGROOT - Closed root ORF results array
"RTN","DGPFHLQ4",11,0)
 ;
"RTN","DGPFHLQ4",12,0)
 ;  Output:
"RTN","DGPFHLQ4",13,0)
 ;    DGROOT - array of ORF results
"RTN","DGPFHLQ4",14,0)
 ;             OBRsetID,assigndt,"ACTION"
"RTN","DGPFHLQ4",15,0)
 ;             OBRsetID,assigndt,"COMMENT",line#
"RTN","DGPFHLQ4",16,0)
 ;             OBRsetID,"FLAG"
"RTN","DGPFHLQ4",17,0)
 ;             OBRsetID,"NARR",line#
"RTN","DGPFHLQ4",18,0)
 ;             OBRsetID,"OWNER"
"RTN","DGPFHLQ4",19,0)
 ;             "ACKCODE" - acknowledgment code ("AA","AE","AR")
"RTN","DGPFHLQ4",20,0)
 ;             "ICN"     - patient's Integrated Control Number
"RTN","DGPFHLQ4",21,0)
 ;             "MSGDTM"  - message creation date/time in FileMan format
"RTN","DGPFHLQ4",22,0)
 ;             "MSGID"   -
"RTN","DGPFHLQ4",23,0)
 ;             "QID"     - query ID (DFN)
"RTN","DGPFHLQ4",24,0)
 ;             "RCVFAC"  - receiving facility
"RTN","DGPFHLQ4",25,0)
 ;             "SNDFAC"  - sending facility
"RTN","DGPFHLQ4",26,0)
 ;
"RTN","DGPFHLQ4",27,0)
 ;     DGMSG - undefined on success, array of MailMan text on failure
"RTN","DGPFHLQ4",28,0)
 ;
"RTN","DGPFHLQ4",29,0)
 N DGFS      ;field separator
"RTN","DGPFHLQ4",30,0)
 N DGCS      ;component separator
"RTN","DGPFHLQ4",31,0)
 N DGRS      ;repetition separator
"RTN","DGPFHLQ4",32,0)
 N DGSS      ;sub-component separator
"RTN","DGPFHLQ4",33,0)
 N DGCURLIN  ;current line
"RTN","DGPFHLQ4",34,0)
 ;
"RTN","DGPFHLQ4",35,0)
 S DGFS=DGHL("FS")
"RTN","DGPFHLQ4",36,0)
 S DGCS=$E(DGHL("ECH"),1)
"RTN","DGPFHLQ4",37,0)
 S DGRS=$E(DGHL("ECH"),2)
"RTN","DGPFHLQ4",38,0)
 S DGSS=$E(DGHL("ECH"),4)
"RTN","DGPFHLQ4",39,0)
 S HLECH=DGHL("ECH"),HLFS=DGHL("FS")
"RTN","DGPFHLQ4",40,0)
 S DGCURLIN=0
"RTN","DGPFHLQ4",41,0)
 ;
"RTN","DGPFHLQ4",42,0)
 ;loop through the message segments and retrieve the field data
"RTN","DGPFHLQ4",43,0)
 F  D  Q:'DGCURLIN
"RTN","DGPFHLQ4",44,0)
 . N DGSEG
"RTN","DGPFHLQ4",45,0)
 . S DGCURLIN=$$NXTSEG^DGPFHLUT(DGWRK,DGCURLIN,DGFS,.DGSEG)
"RTN","DGPFHLQ4",46,0)
 . Q:'DGCURLIN
"RTN","DGPFHLQ4",47,0)
 . D @(DGSEG("TYPE")_"(.DGSEG,DGCS,DGRS,DGSS,DGROOT,.DGMSG)")
"RTN","DGPFHLQ4",48,0)
 Q
"RTN","DGPFHLQ4",49,0)
 ;
"RTN","DGPFHLQ4",50,0)
MSH(DGSEG,DGCS,DGRS,DGSS,DGORF,DGERR) ;
"RTN","DGPFHLQ4",51,0)
 ;
"RTN","DGPFHLQ4",52,0)
 ;  Input:
"RTN","DGPFHLQ4",53,0)
 ;    DGSEG - MSH segment field array
"RTN","DGPFHLQ4",54,0)
 ;     DGCS - HL7 component separator
"RTN","DGPFHLQ4",55,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGPFHLQ4",56,0)
 ;     DGSS - HL7 sub-component separator
"RTN","DGPFHLQ4",57,0)
 ;
"RTN","DGPFHLQ4",58,0)
 ;  Output:
"RTN","DGPFHLQ4",59,0)
 ;    DGORF - array of ORF results
"RTN","DGPFHLQ4",60,0)
 ;            "SNDFAC" - sending facility
"RTN","DGPFHLQ4",61,0)
 ;            "RCVFAC" - receiving facility
"RTN","DGPFHLQ4",62,0)
 ;            "MSGDTM" - message creation date/time in FileMan format
"RTN","DGPFHLQ4",63,0)
 ;    DGERR - undefined on success, error array on failure
"RTN","DGPFHLQ4",64,0)
 ;
"RTN","DGPFHLQ4",65,0)
 N DGARR
"RTN","DGPFHLQ4",66,0)
 D MSH^DGPFHLU4(.DGSEG,DGCS,DGRS,DGSS,.DGARR,.DGERR)
"RTN","DGPFHLQ4",67,0)
 I $D(DGARR) M @DGORF=DGARR
"RTN","DGPFHLQ4",68,0)
 Q
"RTN","DGPFHLQ4",69,0)
 ;
"RTN","DGPFHLQ4",70,0)
MSA(DGSEG,DGCS,DGRS,DGSS,DGORF,DGERR) ;
"RTN","DGPFHLQ4",71,0)
 ;
"RTN","DGPFHLQ4",72,0)
 ;  Input:
"RTN","DGPFHLQ4",73,0)
 ;    DGSEG - MSH segment field array
"RTN","DGPFHLQ4",74,0)
 ;     DGCS - HL7 component separator
"RTN","DGPFHLQ4",75,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGPFHLQ4",76,0)
 ;     DGSS - HL7 sub-component separator
"RTN","DGPFHLQ4",77,0)
 ;
"RTN","DGPFHLQ4",78,0)
 ;  Output:
"RTN","DGPFHLQ4",79,0)
 ;    DGORF - array of ORF results
"RTN","DGPFHLQ4",80,0)
 ;            "ACKCODE" - Acknowledgment code
"RTN","DGPFHLQ4",81,0)
 ;            "MSGID" - Message Control ID of the message being ACK'ed
"RTN","DGPFHLQ4",82,0)
 ;    DGERR - undefined on success, error array on failure
"RTN","DGPFHLQ4",83,0)
 ;
"RTN","DGPFHLQ4",84,0)
 N DGARR
"RTN","DGPFHLQ4",85,0)
 D MSA^DGPFHLU4(.DGSEG,DGCS,DGRS,DGSS,.DGARR,.DGERR)
"RTN","DGPFHLQ4",86,0)
 I $D(DGARR) M @DGORF=DGARR
"RTN","DGPFHLQ4",87,0)
 Q
"RTN","DGPFHLQ4",88,0)
 ;
"RTN","DGPFHLQ4",89,0)
ERR(DGSEG,DGCS,DGRS,DGSS,DGORF,DGERR) ;
"RTN","DGPFHLQ4",90,0)
 ;
"RTN","DGPFHLQ4",91,0)
 ;  Input:
"RTN","DGPFHLQ4",92,0)
 ;    DGSEG - MSH segment field array
"RTN","DGPFHLQ4",93,0)
 ;     DGCS - HL7 component separator
"RTN","DGPFHLQ4",94,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGPFHLQ4",95,0)
 ;     DGSS - HL7 sub-component separator
"RTN","DGPFHLQ4",96,0)
 ;
"RTN","DGPFHLQ4",97,0)
 ;  Output:
"RTN","DGPFHLQ4",98,0)
 ;    DGORF - array of ORF results
"RTN","DGPFHLQ4",99,0)
 ;    DGERR - undefined on success, error array on failure
"RTN","DGPFHLQ4",100,0)
 ;
"RTN","DGPFHLQ4",101,0)
 N DGARR
"RTN","DGPFHLQ4",102,0)
 D ERR^DGPFHLU4(.DGSEG,DGCS,DGRS,DGSS,.DGARR,.DGERR)
"RTN","DGPFHLQ4",103,0)
 I $D(DGARR) M @DGORF=DGARR
"RTN","DGPFHLQ4",104,0)
 Q
"RTN","DGPFHLQ4",105,0)
 ;
"RTN","DGPFHLQ4",106,0)
QRD(DGSEG,DGCS,DGRS,DGSS,DGQRY,DGERR) ;
"RTN","DGPFHLQ4",107,0)
 ;
"RTN","DGPFHLQ4",108,0)
 ;  Input:
"RTN","DGPFHLQ4",109,0)
 ;    DGSEG - MSH segment field array
"RTN","DGPFHLQ4",110,0)
 ;     DGCS - HL7 component separator
"RTN","DGPFHLQ4",111,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGPFHLQ4",112,0)
 ;     DGSS - HL7 sub-component separator
"RTN","DGPFHLQ4",113,0)
 ;
"RTN","DGPFHLQ4",114,0)
 ;  Output:
"RTN","DGPFHLQ4",115,0)
 ;    DGQRY("ICN") - Patient's Integrated Control Number
"RTN","DGPFHLQ4",116,0)
 ;    DGQRY("QID") - Query ID
"RTN","DGPFHLQ4",117,0)
 ;           DGERR - undefined on success, error array on failure
"RTN","DGPFHLQ4",118,0)
 ;                      format: DGERR(seg_id,sequence,fld_pos)=error code
"RTN","DGPFHLQ4",119,0)
 ;
"RTN","DGPFHLQ4",120,0)
 S @DGQRY@("QID")=$G(DGSEG(4))
"RTN","DGPFHLQ4",121,0)
 S @DGQRY@("ICN")=+$P($G(DGSEG(8)),DGCS,1)
"RTN","DGPFHLQ4",122,0)
 Q
"RTN","DGPFHLQ4",123,0)
 ;
"RTN","DGPFHLQ4",124,0)
OBR(DGSEG,DGCS,DGRS,DGSS,DGORF,DGERR) ;
"RTN","DGPFHLQ4",125,0)
 ;
"RTN","DGPFHLQ4",126,0)
 ;  Input:
"RTN","DGPFHLQ4",127,0)
 ;    DGSEG - OBR segment field array
"RTN","DGPFHLQ4",128,0)
 ;     DGCS - HL7 component separator
"RTN","DGPFHLQ4",129,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGPFHLQ4",130,0)
 ;     DGSS - HL7 sub-component separator
"RTN","DGPFHLQ4",131,0)
 ;
"RTN","DGPFHLQ4",132,0)
 ;  Output:
"RTN","DGPFHLQ4",133,0)
 ;     DGORF(setid,"FLAG") - FLAG NAME  (.02) field, file #26.13
"RTN","DGPFHLQ4",134,0)
 ;    DGORF(setid,"OWNER") - OWNER SITE (.04) field, file #26.13
"RTN","DGPFHLQ4",135,0)
 ; DGORF(setid,"ORIGSITE") - ORIGINATING SITE (.05) field, file #26.13
"RTN","DGPFHLQ4",136,0)
 ;          DGORF("SETID") - OBR segment Set ID
"RTN","DGPFHLQ4",137,0)
 ;                   DGERR - undefined on success, error array on failure
"RTN","DGPFHLQ4",138,0)
 ;                    format: DGERR(seg_id,sequence,fld_pos)=error code
"RTN","DGPFHLQ4",139,0)
 N DGSETID  ;OBR segment Set ID
"RTN","DGPFHLQ4",140,0)
 N PRFFLG   ; ien of received PRF flag in file 26.15
"RTN","DGPFHLQ4",141,0)
 ;
"RTN","DGPFHLQ4",142,0)
 S (@DGORF@("SETID"),DGSETID)=+$G(DGSEG(1))
"RTN","DGPFHLQ4",143,0)
 I DGSETID>0 D
"RTN","DGPFHLQ4",144,0)
 .S PRFFLG=+$$FIND1^DIC(26.15,,"X",$$DECHL7^DGPFHLUT($P($G(DGSEG(4)),DGCS,2)))
"RTN","DGPFHLQ4",145,0)
 .I 'PRFFLG S DGSTAT="RJ",DGERR($O(DGERR(""),-1)+1)=261120 Q  ; bail out with "Unable to file" error
"RTN","DGPFHLQ4",146,0)
 .S @DGORF@(DGSETID,"FLAG")=PRFFLG_";DGPF(26.15,"
"RTN","DGPFHLQ4",147,0)
 .S @DGORF@(DGSETID,"OWNER")=$$IEN^XUAF4($G(DGSEG(20)))
"RTN","DGPFHLQ4",148,0)
 .S @DGORF@(DGSETID,"ORIGSITE")=$$IEN^XUAF4($G(DGSEG(21)))
"RTN","DGPFHLQ4",149,0)
 .Q
"RTN","DGPFHLQ4",150,0)
 Q
"RTN","DGPFHLQ4",151,0)
 ;
"RTN","DGPFHLQ4",152,0)
OBX(DGSEG,DGCS,DGRS,DGSS,DGORF,DGERR) ;
"RTN","DGPFHLQ4",153,0)
 ;
"RTN","DGPFHLQ4",154,0)
 ;  Input:
"RTN","DGPFHLQ4",155,0)
 ;    DGSEG - OBX segment field array
"RTN","DGPFHLQ4",156,0)
 ;     DGCS - HL7 component separator
"RTN","DGPFHLQ4",157,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGPFHLQ4",158,0)
 ;     DGSS - HL7 sub-component separator
"RTN","DGPFHLQ4",159,0)
 ;
"RTN","DGPFHLQ4",160,0)
 ;  Output:
"RTN","DGPFHLQ4",161,0)
 ;             DGORF(setid,"NARR",line) - ASSIGNMENT NARRATIVE (1) field,
"RTN","DGPFHLQ4",162,0)
 ;                                        file #26.13
"RTN","DGPFHLQ4",163,0)
 ;       DGORF(setid,assigndt,"ACTION") - ACTION             (.03) field,
"RTN","DGPFHLQ4",164,0)
 ;                                        file #26.14
"RTN","DGPFHLQ4",165,0)
 ; DGORF(setid,assigndt,"COMMENT",line) - HISTORY COMMENTS     (1) field,
"RTN","DGPFHLQ4",166,0)
 ;                                        file #26.14
"RTN","DGPFHLQ4",167,0)
 ;              DGERR - undefined on success, error array on failure
"RTN","DGPFHLQ4",168,0)
 ;                      format: DGERR(seg_id,sequence,fld_pos)=error code
"RTN","DGPFHLQ4",169,0)
 ;
"RTN","DGPFHLQ4",170,0)
 N DGADT     ;assignment date
"RTN","DGPFHLQ4",171,0)
 N DGI
"RTN","DGPFHLQ4",172,0)
 N DGLINE    ;text line counter
"RTN","DGPFHLQ4",173,0)
 N DGRSLT
"RTN","DGPFHLQ4",174,0)
 N DGSETID   ;OBR segment Set ID
"RTN","DGPFHLQ4",175,0)
 N DGRSLT,DBRSACT,DBRSDT,DBRSNUM,DBRSOTH,DBRSSITE
"RTN","DGPFHLQ4",176,0)
 ;
"RTN","DGPFHLQ4",177,0)
 S DGSETID=+$G(@DGORF@("SETID"))
"RTN","DGPFHLQ4",178,0)
 Q:(DGSETID'>0)
"RTN","DGPFHLQ4",179,0)
 ; Narrative Observation Identifier
"RTN","DGPFHLQ4",180,0)
 I $P(DGSEG(3),DGCS,1)="N" D
"RTN","DGPFHLQ4",181,0)
 .S DGLINE=$O(@DGORF@(DGSETID,"NARR",""),-1)
"RTN","DGPFHLQ4",182,0)
 .F DGI=1:1:$L(DGSEG(5),DGRS) S @DGORF@(DGSETID,"NARR",DGLINE+DGI,0)=$$DECHL7^DGPFHLUT($P(DGSEG(5),DGRS,DGI))
"RTN","DGPFHLQ4",183,0)
 .Q
"RTN","DGPFHLQ4",184,0)
 ; Status Observation Identifier
"RTN","DGPFHLQ4",185,0)
 I $P(DGSEG(3),DGCS,1)="S" D
"RTN","DGPFHLQ4",186,0)
 .S DGADT=$$HL7TFM^XLFDT(DGSEG(14),"L")
"RTN","DGPFHLQ4",187,0)
 .Q:(+DGADT'>0)
"RTN","DGPFHLQ4",188,0)
 .D CHK^DIE(26.14,.03,,$$DECHL7^DGPFHLUT(DGSEG(5)),.DGRSLT) S @DGORF@(DGSETID,DGADT,"ACTION")=+DGRSLT
"RTN","DGPFHLQ4",189,0)
 .Q
"RTN","DGPFHLQ4",190,0)
 ; Comment Observation Identifier
"RTN","DGPFHLQ4",191,0)
 I $P(DGSEG(3),DGCS,1)="C" D
"RTN","DGPFHLQ4",192,0)
 .S DGADT=$$HL7TFM^XLFDT(DGSEG(14),"L")
"RTN","DGPFHLQ4",193,0)
 .Q:(+DGADT'>0)
"RTN","DGPFHLQ4",194,0)
 .S DGLINE=$O(@DGORF@(DGSETID,DGADT,"COMMENT",""),-1)
"RTN","DGPFHLQ4",195,0)
 .F DGI=1:1:$L(DGSEG(5),DGRS) D
"RTN","DGPFHLQ4",196,0)
 ..S @DGORF@(DGSETID,DGADT,"COMMENT",DGLINE+DGI,0)=$$DECHL7^DGPFHLUT($P(DGSEG(5),DGRS,DGI))
"RTN","DGPFHLQ4",197,0)
 ..Q
"RTN","DGPFHLQ4",198,0)
 .S @DGORF@(DGSETID,DGADT,"ORIGFAC")=$$IEN^XUAF4($P($G(DGSEG(23)),DGCS,3))
"RTN","DGPFHLQ4",199,0)
 .Q
"RTN","DGPFHLQ4",200,0)
 ; DBRS Observation Identifier
"RTN","DGPFHLQ4",201,0)
 I $P(DGSEG(3),DGCS,1)="D" D
"RTN","DGPFHLQ4",202,0)
 .S DBRSACT=$S($P(DGSEG(3),DGCS,2)="DBRS-Delete":"D",1:"U")      ; "U" = add/update, "D" = delete
"RTN","DGPFHLQ4",203,0)
 .S DBRSNUM=$$DECHL7^DGPFHLUT($P(DGSEG(5),DGRS,1)) Q:DBRSNUM=""  ; DBRS #
"RTN","DGPFHLQ4",204,0)
 .S DBRSOTH=$$DECHL7^DGPFHLUT($P(DGSEG(5),DGRS,2))               ; DBRS OTHER
"RTN","DGPFHLQ4",205,0)
 .S DBRSDT=+$$HL7TFM^XLFDT(DGSEG(14),"L")                        ; DBRS date
"RTN","DGPFHLQ4",206,0)
 .S DBRSSITE=$$IEN^XUAF4($P($G(DGSEG(23)),DGCS,3))              ; DBRS creating site
"RTN","DGPFHLQ4",207,0)
 .S @DGORF@(DGSETID,"DBRS",DBRSNUM,"ACTION")=DBRSACT
"RTN","DGPFHLQ4",208,0)
 .S @DGORF@(DGSETID,"DBRS",DBRSNUM,"OTHER")=DBRSOTH
"RTN","DGPFHLQ4",209,0)
 .S @DGORF@(DGSETID,"DBRS",DBRSNUM,"DATE")=DBRSDT
"RTN","DGPFHLQ4",210,0)
 .S @DGORF@(DGSETID,"DBRS",DBRSNUM,"SITE")=$S(DBRSSITE>0:DBRSSITE,1:"")
"RTN","DGPFHLQ4",211,0)
 .Q
"RTN","DGPFHLQ4",212,0)
 Q
"RTN","DGPFHLR")
0^24^B124847191^B69390340
"RTN","DGPFHLR",1,0)
DGPFHLR ;ALB/RPM - PRF HL7 RECEIVE DRIVERS ; 8/14/06 12:01pm
"RTN","DGPFHLR",2,0)
 ;;5.3;Registration;**425,650,951**;Aug 13, 1993;Build 135
"RTN","DGPFHLR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPFHLR",4,0)
 ;
"RTN","DGPFHLR",5,0)
RCV ;Receive all message types and route to message specific receiver
"RTN","DGPFHLR",6,0)
 ;
"RTN","DGPFHLR",7,0)
 ;This procedure is the main driver entry point for receiving all
"RTN","DGPFHLR",8,0)
 ;message types (ORU, ACK, QRY and ORF) for patient record flag
"RTN","DGPFHLR",9,0)
 ;assignment sharing.
"RTN","DGPFHLR",10,0)
 ;
"RTN","DGPFHLR",11,0)
 ;All procedures and functions assume that all VistA HL7 environment
"RTN","DGPFHLR",12,0)
 ;variables are properly initialized and will produce a fatal error if
"RTN","DGPFHLR",13,0)
 ;they are missing.
"RTN","DGPFHLR",14,0)
 ;
"RTN","DGPFHLR",15,0)
 ;The received message is copied to a temporary work global for
"RTN","DGPFHLR",16,0)
 ;processing.  The message type is determined from the MSH segment and
"RTN","DGPFHLR",17,0)
 ;a receive processing procedure specific to the message type is called.
"RTN","DGPFHLR",18,0)
 ;(Ex. ORU~R01 message calls procedure: RCVORU).  The specific receive
"RTN","DGPFHLR",19,0)
 ;processing procedure calls a message specific parse procedure to
"RTN","DGPFHLR",20,0)
 ;validate the message data and return data arrays for storage.  If no
"RTN","DGPFHLR",21,0)
 ;parse errors are reported during validation, then the data arrays are
"RTN","DGPFHLR",22,0)
 ;stored by the receive processing procedure.  Control, along with any
"RTN","DGPFHLR",23,0)
 ;parse validation errors, is then passed to the message specific send
"RTN","DGPFHLR",24,0)
 ;processing procedures to build and transmit the acknowledgment and
"RTN","DGPFHLR",25,0)
 ;query results messages.
"RTN","DGPFHLR",26,0)
 ;
"RTN","DGPFHLR",27,0)
 ;  The message specific procedures are as follows:
"RTN","DGPFHLR",28,0)
 ;
"RTN","DGPFHLR",29,0)
 ;  Message   Receive Procedure   Parse Procedure    Send Procedure
"RTN","DGPFHLR",30,0)
 ;  -------   -----------------   ----------------    --------------
"RTN","DGPFHLR",31,0)
 ;  ORU~R01   RCVORU^DGPFHLR      PARSORU^DGPFHLU    SNDACK^DGPFHLS
"RTN","DGPFHLR",32,0)
 ;  ACK~R01   RCVACK^DGPFHLR      PARSACK^DGPFHLU4   N/A
"RTN","DGPFHLR",33,0)
 ;  QRY~R02   RCVQRY^DGPFHLR      PARSQRY^DGPFHLQ3   SNDORF^DGPFHLS
"RTN","DGPFHLR",34,0)
 ;  ORF~R04   RCVORF^DGPFHLR      PARSORF^DGPFHLQ3   N/A
"RTN","DGPFHLR",35,0)
 ;
"RTN","DGPFHLR",36,0)
 N DGCNT
"RTN","DGPFHLR",37,0)
 N DGMSGTYP
"RTN","DGPFHLR",38,0)
 N DGSEG
"RTN","DGPFHLR",39,0)
 N DGSEGCNT
"RTN","DGPFHLR",40,0)
 N DGWRK
"RTN","DGPFHLR",41,0)
 ;
"RTN","DGPFHLR",42,0)
 S DGWRK=$NA(^TMP("DGPFHL7",$J))
"RTN","DGPFHLR",43,0)
 K @DGWRK
"RTN","DGPFHLR",44,0)
 ;
"RTN","DGPFHLR",45,0)
 ;load work global with segments
"RTN","DGPFHLR",46,0)
 F DGSEGCNT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","DGPFHLR",47,0)
 . S DGCNT=0
"RTN","DGPFHLR",48,0)
 . S @DGWRK@(DGSEGCNT,DGCNT)=HLNODE
"RTN","DGPFHLR",49,0)
 . F  S DGCNT=$O(HLNODE(DGCNT)) Q:'DGCNT  D
"RTN","DGPFHLR",50,0)
 . . S @DGWRK@(DGSEGCNT,DGCNT)=HLNODE(DGCNT)
"RTN","DGPFHLR",51,0)
 ;
"RTN","DGPFHLR",52,0)
 ;get message type from "MSH"
"RTN","DGPFHLR",53,0)
 I $$NXTSEG^DGPFHLUT(DGWRK,0,HL("FS"),.DGSEG),$G(DGSEG("TYPE"))="MSH" D
"RTN","DGPFHLR",54,0)
 . S DGMSGTYP=$P(DGSEG(9),$E(HL("ECH"),1),1)
"RTN","DGPFHLR",55,0)
 . ;HLMTIENS is only required by RCVORU and RCVQRY, thus $GET
"RTN","DGPFHLR",56,0)
 . I DGMSGTYP=HL("MTN") D @("RCV"_DGMSGTYP_"(DGWRK,$G(HLMTIENS),.HL)")
"RTN","DGPFHLR",57,0)
 ;
"RTN","DGPFHLR",58,0)
 ;cleanup
"RTN","DGPFHLR",59,0)
 K @DGWRK
"RTN","DGPFHLR",60,0)
 Q
"RTN","DGPFHLR",61,0)
 ;
"RTN","DGPFHLR",62,0)
RCVORU(DGWRK,DGMIEN,DGHL) ;Receive ORU Message Types (ORU~R01)
"RTN","DGPFHLR",63,0)
 ;
"RTN","DGPFHLR",64,0)
 ;  Input:
"RTN","DGPFHLR",65,0)
 ;    DGWRK - name of work global containing segments
"RTN","DGPFHLR",66,0)
 ;   DGMIEN - IEN of message entry in file #773
"RTN","DGPFHLR",67,0)
 ;     DGHL - HL environment array
"RTN","DGPFHLR",68,0)
 ;
"RTN","DGPFHLR",69,0)
 ;  Output:
"RTN","DGPFHLR",70,0)
 ;    none
"RTN","DGPFHLR",71,0)
 ;
"RTN","DGPFHLR",72,0)
 N DGORU
"RTN","DGPFHLR",73,0)
 N DGSEGERR
"RTN","DGPFHLR",74,0)
 N DGSTOERR   ;store error array
"RTN","DGPFHLR",75,0)
 N DGACKTYP
"RTN","DGPFHLR",76,0)
 ;
"RTN","DGPFHLR",77,0)
 S DGORU=$NA(^TMP("DGPF",$J))
"RTN","DGPFHLR",78,0)
 K @DGORU
"RTN","DGPFHLR",79,0)
 D PARSORU^DGPFHLU(DGWRK,.DGHL,DGORU,.DGSEGERR)
"RTN","DGPFHLR",80,0)
 ;
"RTN","DGPFHLR",81,0)
 I '$D(DGSEGERR),$$STOORU(DGORU,.DGSTOERR) D
"RTN","DGPFHLR",82,0)
 . S DGACKTYP="AA"
"RTN","DGPFHLR",83,0)
 E  D
"RTN","DGPFHLR",84,0)
 . S DGACKTYP="AE"
"RTN","DGPFHLR",85,0)
 ;
"RTN","DGPFHLR",86,0)
 D SNDACK^DGPFHLS(DGACKTYP,DGMIEN,.DGHL,.DGSEGERR,.DGSTOERR)
"RTN","DGPFHLR",87,0)
 ;
"RTN","DGPFHLR",88,0)
 ;cleanup
"RTN","DGPFHLR",89,0)
 K @DGORU
"RTN","DGPFHLR",90,0)
 Q
"RTN","DGPFHLR",91,0)
 ;
"RTN","DGPFHLR",92,0)
STOORU(DGORU,DGERR) ;store ORU data array
"RTN","DGPFHLR",93,0)
 ;
"RTN","DGPFHLR",94,0)
 ;  Input:
"RTN","DGPFHLR",95,0)
 ;    DGORU - parsed ORU segment data array
"RTN","DGPFHLR",96,0)
 ;    
"RTN","DGPFHLR",97,0)
 ;  Output:
"RTN","DGPFHLR",98,0)
 ;   Function value - 1 on success; 0 on failure
"RTN","DGPFHLR",99,0)
 ;            DGERR - defined on failure
"RTN","DGPFHLR",100,0)
 ;    
"RTN","DGPFHLR",101,0)
 N DGADT     ;assignment date
"RTN","DGPFHLR",102,0)
 N DGCNT     ;count of assignment histories sent
"RTN","DGPFHLR",103,0)
 N DGPFA     ;assignment data array
"RTN","DGPFHLR",104,0)
 N DGPFAH    ;assignment history data array
"RTN","DGPFHLR",105,0)
 N DGSINGLE  ;flag to indicate a single history update
"RTN","DGPFHLR",106,0)
 N CURASGN,DBRSCNT,DBRSNUM,LASTDT,RES,STOFLG
"RTN","DGPFHLR",107,0)
 ;
"RTN","DGPFHLR",108,0)
 ;
"RTN","DGPFHLR",109,0)
 S DGPFA("SNDFAC")=$G(@DGORU@("SNDFAC"))
"RTN","DGPFHLR",110,0)
 S DGPFA("DFN")=$G(@DGORU@("DFN"))
"RTN","DGPFHLR",111,0)
 S DGPFA("FLAG")=$G(@DGORU@("FLAG"))
"RTN","DGPFHLR",112,0)
 ;
"RTN","DGPFHLR",113,0)
 ;init STATUS as a placeholder, $$STATUS^DGPFUT sets value in loop
"RTN","DGPFHLR",114,0)
 S DGPFA("STATUS")=""
"RTN","DGPFHLR",115,0)
 S DGPFA("OWNER")=$G(@DGORU@("OWNER"))
"RTN","DGPFHLR",116,0)
 S DGPFA("ORIGSITE")=$G(@DGORU@("ORIGSITE"))
"RTN","DGPFHLR",117,0)
 M DGPFA("NARR")=@DGORU@("NARR")
"RTN","DGPFHLR",118,0)
 ; DBRS data
"RTN","DGPFHLR",119,0)
 S DBRSCNT=0,DBRSNUM="" F  S DBRSNUM=$O(@DGORU@("DBRS",DBRSNUM)) Q:DBRSNUM=""  D
"RTN","DGPFHLR",120,0)
 .S DBRSCNT=DBRSCNT+1
"RTN","DGPFHLR",121,0)
 .S DGPFA("DBRS#",DBRSCNT)=DBRSNUM
"RTN","DGPFHLR",122,0)
 .S DGPFA("DBRS OTHER",DBRSCNT)=$G(@DGORU@("DBRS",DBRSNUM,"OTHER"))
"RTN","DGPFHLR",123,0)
 .S DGPFA("DBRS DATE",DBRSCNT)=$G(@DGORU@("DBRS",DBRSNUM,"DATE"))
"RTN","DGPFHLR",124,0)
 .S DGPFA("DBRS ACTION",DBRSCNT)=$G(@DGORU@("DBRS",DBRSNUM,"ACTION"))
"RTN","DGPFHLR",125,0)
 .S DGPFA("DBRS SITE",DBRSCNT)=$G(@DGORU@("DBRS",DBRSNUM,"SITE"))
"RTN","DGPFHLR",126,0)
 .Q
"RTN","DGPFHLR",127,0)
 ;count number of assignment histories sent
"RTN","DGPFHLR",128,0)
 S (DGADT,DGCNT)=0
"RTN","DGPFHLR",129,0)
 F  S DGADT=$O(@DGORU@(DGADT)) Q:'DGADT  S DGCNT=DGCNT+1
"RTN","DGPFHLR",130,0)
 S DGSINGLE=$S(DGCNT>1:0,1:1)
"RTN","DGPFHLR",131,0)
 S DGADT=0
"RTN","DGPFHLR",132,0)
 S LASTDT=+$O(@DGORU@(9999999.999999),-1) ; date of last history record
"RTN","DGPFHLR",133,0)
 ;
"RTN","DGPFHLR",134,0)
 ;process only the last history action when assignment already exists
"RTN","DGPFHLR",135,0)
 S CURASGN=$$FNDASGN^DGPFAA(DGPFA("DFN"),DGPFA("FLAG"))
"RTN","DGPFHLR",136,0)
 I 'DGSINGLE,CURASGN S DGADT=LASTDT,DGSINGLE=1
"RTN","DGPFHLR",137,0)
 ;
"RTN","DGPFHLR",138,0)
 F  S DGADT=$O(@DGORU@(DGADT)) Q:'DGADT  D  Q:$D(DGERR)
"RTN","DGPFHLR",139,0)
 .N DGPFAH   ;assignment history data array
"RTN","DGPFHLR",140,0)
 .;
"RTN","DGPFHLR",141,0)
 .S DGPFAH("ASSIGNDT")=DGADT
"RTN","DGPFHLR",142,0)
 .S DGPFAH("ACTION")=$G(@DGORU@(DGADT,"ACTION"))
"RTN","DGPFHLR",143,0)
 .S DGPFAH("ENTERBY")=.5  ;POSTMASTER
"RTN","DGPFHLR",144,0)
 .S DGPFAH("APPRVBY")=.5  ;POSTMASTER
"RTN","DGPFHLR",145,0)
 .M DGPFAH("COMMENT")=@DGORU@(DGADT,"COMMENT")
"RTN","DGPFHLR",146,0)
 .S DGPFAH("ORIGFAC")=$G(@DGORU@(DGADT,"ORIGFAC"))
"RTN","DGPFHLR",147,0)
 .; DBRS data
"RTN","DGPFHLR",148,0)
 .S DBRSCNT=0,DBRSNUM="" F  S DBRSNUM=$O(@DGORU@("DBRS",DBRSNUM)) Q:DBRSNUM=""  D
"RTN","DGPFHLR",149,0)
 ..S DBRSCNT=DBRSCNT+1
"RTN","DGPFHLR",150,0)
 ..S DGPFAH("DBRS",DBRSCNT)=DBRSNUM_U_$G(@DGORU@("DBRS",DBRSNUM,"OTHER"))_U_$G(@DGORU@("DBRS",DBRSNUM,"DATE"))
"RTN","DGPFHLR",151,0)
 ..I $G(@DGORU@("DBRS",DBRSNUM,"ACTION"))="U" D
"RTN","DGPFHLR",152,0)
 ...S RES=$$FIND1^DIC(26.131,","_CURASGN_",","X",DBRSNUM)
"RTN","DGPFHLR",153,0)
 ...S DGPFAH("DBRS",DBRSCNT)=DGPFAH("DBRS",DBRSCNT)_U_$S(RES:"E",1:"A")
"RTN","DGPFHLR",154,0)
 ...Q
"RTN","DGPFHLR",155,0)
 ..I $G(@DGORU@("DBRS",DBRSNUM,"ACTION"))="D" S DGPFAH("DBRS",DBRSCNT)=DGPFAH("DBRS",DBRSCNT)_U_"D"
"RTN","DGPFHLR",156,0)
 ..S DGPFAH("DBRS",DBRSCNT)=DGPFAH("DBRS",DBRSCNT)_U_$G(@DGORU@("DBRS",DBRSNUM,"SITE"))
"RTN","DGPFHLR",157,0)
 ..Q
"RTN","DGPFHLR",158,0)
 .; calculate the assignment STATUS from the ACTION
"RTN","DGPFHLR",159,0)
 .S DGPFA("STATUS")=$$STATUS^DGPFUT(DGPFAH("ACTION"))
"RTN","DGPFHLR",160,0)
 .; calculate new review date if this is ownership transfer
"RTN","DGPFHLR",161,0)
 .; if action = "continue" and current owner on file is different from owner in HL7 message, then it's an ownership transfer
"RTN","DGPFHLR",162,0)
 .I DGPFAH("ACTION")=2,$$GET1^DIQ(26.13,CURASGN_",",.04,"I")'=DGPFA("OWNER") D
"RTN","DGPFHLR",163,0)
 ..; if local site or division is the new owner, set review date
"RTN","DGPFHLR",164,0)
 ..I DGPFA("OWNER")=$P($$SITE^VASITE(),U)!$$ISDIV^DGPFUT(DGPFA("OWNER")) D
"RTN","DGPFHLR",165,0)
 ...S DGPFA("REVIEWDT")=$$GETRDT^DGPFAA3($P(DGPFA("FLAG"),U),DGPFAH("ASSIGNDT"))
"RTN","DGPFHLR",166,0)
 ...Q
"RTN","DGPFHLR",167,0)
 ..Q
"RTN","DGPFHLR",168,0)
 .; find out if we want to overwrite existing DBRS data
"RTN","DGPFHLR",169,0)
 .S STOFLG="" I DGADT=LASTDT,"^2^4^5^7^8^"[(U_DGPFAH("ACTION")_U) S STOFLG="D"
"RTN","DGPFHLR",170,0)
 .;validate before filing for single updates and new assignments
"RTN","DGPFHLR",171,0)
 .I DGSINGLE!(DGPFAH("ACTION")=1) S RES=$$STOHL7^DGPFAA3(.DGPFA,.DGPFAH,"DGERR",STOFLG) Q
"RTN","DGPFHLR",172,0)
 .;otherwise, just file it
"RTN","DGPFHLR",173,0)
 .S RES=$$STOALL^DGPFAA(.DGPFA,.DGPFAH,.DGERR,STOFLG)
"RTN","DGPFHLR",174,0)
 .Q
"RTN","DGPFHLR",175,0)
 ;convert dialog to dialog code
"RTN","DGPFHLR",176,0)
 I $D(DGERR) S DGERR=$G(DGERR("DIERR",1))
"RTN","DGPFHLR",177,0)
 ;
"RTN","DGPFHLR",178,0)
 Q '$D(DGERR)
"RTN","DGPFHLR",179,0)
 ;
"RTN","DGPFHLR",180,0)
RCVACK(DGWRK,DGMIEN,DGHL) ;Receive ACK Message Types (ACK~R01)
"RTN","DGPFHLR",181,0)
 ;
"RTN","DGPFHLR",182,0)
 ;  Input:
"RTN","DGPFHLR",183,0)
 ;    DGWRK - name of work global containing segments
"RTN","DGPFHLR",184,0)
 ;   DGMIEN - IEN of message entry in file #773
"RTN","DGPFHLR",185,0)
 ;     DGHL - HL environment array
"RTN","DGPFHLR",186,0)
 ;
"RTN","DGPFHLR",187,0)
 ;  Output:
"RTN","DGPFHLR",188,0)
 ;    none
"RTN","DGPFHLR",189,0)
 ;
"RTN","DGPFHLR",190,0)
 N DGACK   ;ACK data array
"RTN","DGPFHLR",191,0)
 N DGERR   ;error array
"RTN","DGPFHLR",192,0)
 N DGLIEN  ;HL7 transmission log IEN
"RTN","DGPFHLR",193,0)
 ;
"RTN","DGPFHLR",194,0)
 D PARSACK^DGPFHLU4(DGWRK,.DGHL,.DGACK,.DGERR)
"RTN","DGPFHLR",195,0)
 S DGLIEN=$$FNDLOG^DGPFHLL(26.17,$G(DGACK("MSGID")))
"RTN","DGPFHLR",196,0)
 Q:'DGLIEN
"RTN","DGPFHLR",197,0)
 ;
"RTN","DGPFHLR",198,0)
 I $G(DGACK("ACKCODE"))="AA" D
"RTN","DGPFHLR",199,0)
 . D STOSTAT^DGPFHLL(26.17,DGLIEN,"A",.DGERR)
"RTN","DGPFHLR",200,0)
 E  D
"RTN","DGPFHLR",201,0)
 . ;update transmission log status (REJECTED) and process error
"RTN","DGPFHLR",202,0)
 . D STOSTAT^DGPFHLL(26.17,DGLIEN,"RJ",.DGERR)
"RTN","DGPFHLR",203,0)
 . D PROCERR^DGPFHLU5(DGLIEN,.DGACK,.DGERR)
"RTN","DGPFHLR",204,0)
 Q
"RTN","DGPFHLR",205,0)
 ;
"RTN","DGPFHLR",206,0)
RCVQRY(DGWRK,DGMIEN,DGHL) ;Receive QRY Message Types (QRY~R02)
"RTN","DGPFHLR",207,0)
 ;
"RTN","DGPFHLR",208,0)
 ;  Input:
"RTN","DGPFHLR",209,0)
 ;    DGWRK - name of work global containing segments
"RTN","DGPFHLR",210,0)
 ;   DGMIEN - IEN of message entry in file #773
"RTN","DGPFHLR",211,0)
 ;     DGHL - HL environment array
"RTN","DGPFHLR",212,0)
 ;
"RTN","DGPFHLR",213,0)
 ;  Output:
"RTN","DGPFHLR",214,0)
 ;    none
"RTN","DGPFHLR",215,0)
 ;
"RTN","DGPFHLR",216,0)
 N DGDFN
"RTN","DGPFHLR",217,0)
 N DGDFNERR
"RTN","DGPFHLR",218,0)
 N DGQRY
"RTN","DGPFHLR",219,0)
 N DGQRYERR
"RTN","DGPFHLR",220,0)
 N DGSEGERR
"RTN","DGPFHLR",221,0)
 ;
"RTN","DGPFHLR",222,0)
 D PARSQRY^DGPFHLQ3(DGWRK,.DGHL,.DGQRY,.DGSEGERR)
"RTN","DGPFHLR",223,0)
 S DGDFN=$$GETDFN^DGPFUT2(DGQRY("ICN"),"DGDFNERR")
"RTN","DGPFHLR",224,0)
 I DGDFN'>0,$G(DGDFNERR("DIERR",1))]"" D
"RTN","DGPFHLR",225,0)
 . S DGQRYERR=DGDFNERR("DIERR",1)
"RTN","DGPFHLR",226,0)
 D SNDORF^DGPFHLS(.DGQRY,DGMIEN,.DGHL,DGDFN,.DGSEGERR,.DGQRYERR)
"RTN","DGPFHLR",227,0)
 Q
"RTN","DGPFHLR",228,0)
 ;
"RTN","DGPFHLR",229,0)
RCVORF(DGWRK,DGMIEN,DGHL) ;Receive ORF Message Types (ORF~R04)
"RTN","DGPFHLR",230,0)
 ;
"RTN","DGPFHLR",231,0)
 ;  Input:
"RTN","DGPFHLR",232,0)
 ;    DGWRK - name of work global containing segments
"RTN","DGPFHLR",233,0)
 ;   DGMIEN - IEN of message entry in file #773
"RTN","DGPFHLR",234,0)
 ;     DGHL - HL environment array
"RTN","DGPFHLR",235,0)
 ;
"RTN","DGPFHLR",236,0)
 ;  Output:
"RTN","DGPFHLR",237,0)
 ;    none
"RTN","DGPFHLR",238,0)
 ;
"RTN","DGPFHLR",239,0)
 N DGDFN   ;pointer to PATIENT (#2) file
"RTN","DGPFHLR",240,0)
 N DGLIEN  ;HL7 query log IEN
"RTN","DGPFHLR",241,0)
 N DGORF   ;ORF data array root
"RTN","DGPFHLR",242,0)
 N DGERR   ;parser error array
"RTN","DGPFHLR",243,0)
 N DGSTAT  ;query log status
"RTN","DGPFHLR",244,0)
 ;
"RTN","DGPFHLR",245,0)
 S DGORF=$NA(^TMP("DGPF",$J))
"RTN","DGPFHLR",246,0)
 K @DGORF
"RTN","DGPFHLR",247,0)
 D PARSORF^DGPFHLQ4(DGWRK,.DGHL,DGORF,.DGERR)
"RTN","DGPFHLR",248,0)
 S DGDFN=+$$GETDFN^MPIF001($G(@DGORF@("ICN")))
"RTN","DGPFHLR",249,0)
 ;
"RTN","DGPFHLR",250,0)
 ;successful query
"RTN","DGPFHLR",251,0)
 I $G(@DGORF@("ACKCODE"))="AA" D
"RTN","DGPFHLR",252,0)
 . S DGSTAT=$S(+$O(@DGORF@(0))>0:"A",1:"AN")
"RTN","DGPFHLR",253,0)
 . ;
"RTN","DGPFHLR",254,0)
 . ;REJECT when filer fails; otherwise mark event as COMPLETE
"RTN","DGPFHLR",255,0)
 . I '$$STOORF(DGDFN,DGORF) D
"RTN","DGPFHLR",256,0)
 . . S DGSTAT="RJ"
"RTN","DGPFHLR",257,0)
 . . S DGERR($O(DGERR(""),-1)+1)=261120  ;Unable to file
"RTN","DGPFHLR",258,0)
 . E  D STOEVNT^DGPFHLL1(DGDFN,"C")
"RTN","DGPFHLR",259,0)
 ;
"RTN","DGPFHLR",260,0)
 ;failed query
"RTN","DGPFHLR",261,0)
 I $G(@DGORF@("ACKCODE"))'="AA" S DGSTAT="RJ"
"RTN","DGPFHLR",262,0)
 ;
"RTN","DGPFHLR",263,0)
 ;find and update query log status
"RTN","DGPFHLR",264,0)
 S DGLIEN=$$FNDLOG^DGPFHLL(26.19,$G(@DGORF@("MSGID")))
"RTN","DGPFHLR",265,0)
 I DGLIEN D STOSTAT^DGPFHLL(26.19,DGLIEN,DGSTAT,.DGERR)
"RTN","DGPFHLR",266,0)
 ;
"RTN","DGPFHLR",267,0)
 ;purge PRF HL7 QUERY LOG when status is COMPLETE
"RTN","DGPFHLR",268,0)
 I $$GETSTAT^DGPFHLL1(DGDFN)="C" D PRGQLOG^DGPFHLL($$FNDEVNT^DGPFHLL1(DGDFN))
"RTN","DGPFHLR",269,0)
 ;
"RTN","DGPFHLR",270,0)
 ;cleanup
"RTN","DGPFHLR",271,0)
 K @DGORF
"RTN","DGPFHLR",272,0)
 Q
"RTN","DGPFHLR",273,0)
 ;
"RTN","DGPFHLR",274,0)
STOORF(DGDFN,DGORF,DGERR) ;store ORF data
"RTN","DGPFHLR",275,0)
 ;
"RTN","DGPFHLR",276,0)
 ;  Input:
"RTN","DGPFHLR",277,0)
 ;    DGDFN - pointer to patient in PATIENT (#2) file
"RTN","DGPFHLR",278,0)
 ;    DGORF - parsed ORF segments data array
"RTN","DGPFHLR",279,0)
 ;
"RTN","DGPFHLR",280,0)
 ;  Output:
"RTN","DGPFHLR",281,0)
 ;   Function value - 1 on success; 0 on failure
"RTN","DGPFHLR",282,0)
 ;    DGERR - defined on failure
"RTN","DGPFHLR",283,0)
 ;
"RTN","DGPFHLR",284,0)
 N DGADT     ;activity date ("ASSIGNDT")
"RTN","DGPFHLR",285,0)
 N DGPFA     ;assignment data array
"RTN","DGPFHLR",286,0)
 N DGPFAH    ;assignment history data array
"RTN","DGPFHLR",287,0)
 N DGSET     ;set id to represent a single PRF assignment
"RTN","DGPFHLR",288,0)
 N CURASGN,DBRSCNT,DBRSNUM,RES
"RTN","DGPFHLR",289,0)
 ;
"RTN","DGPFHLR",290,0)
 S DGSET=0 F  S DGSET=$O(@DGORF@(DGSET)) Q:'DGSET  D
"RTN","DGPFHLR",291,0)
 .N DGPFA   ;assignment data array
"RTN","DGPFHLR",292,0)
 .;
"RTN","DGPFHLR",293,0)
 .S DGPFA("DFN")=DGDFN
"RTN","DGPFHLR",294,0)
 .S DGPFA("FLAG")=$G(@DGORF@(DGSET,"FLAG"))
"RTN","DGPFHLR",295,0)
 .Q:DGPFA("FLAG")']""
"RTN","DGPFHLR",296,0)
 .;prevent overwriting existing assignments
"RTN","DGPFHLR",297,0)
 .S CURASGN=$$FNDASGN^DGPFAA(DGPFA("DFN"),DGPFA("FLAG")) Q:CURASGN
"RTN","DGPFHLR",298,0)
 .;init STATUS as a placeholder, $$STATUS^DGPFUT sets value in loop
"RTN","DGPFHLR",299,0)
 .S DGPFA("STATUS")=""
"RTN","DGPFHLR",300,0)
 .S DGPFA("OWNER")=$G(@DGORF@(DGSET,"OWNER"))
"RTN","DGPFHLR",301,0)
 .S DGPFA("ORIGSITE")=$G(@DGORF@(DGSET,"ORIGSITE"))
"RTN","DGPFHLR",302,0)
 .M DGPFA("NARR")=@DGORF@(DGSET,"NARR")
"RTN","DGPFHLR",303,0)
 .; DBRS data
"RTN","DGPFHLR",304,0)
 .S DBRSCNT=0,DBRSNUM="" F  S DBRSNUM=$O(@DGORF@(DGSET,"DBRS",DBRSNUM)) Q:DBRSNUM=""  D
"RTN","DGPFHLR",305,0)
 ..S DBRSCNT=DBRSCNT+1
"RTN","DGPFHLR",306,0)
 ..S DGPFA("DBRS#",DBRSCNT)=DBRSNUM
"RTN","DGPFHLR",307,0)
 ..S DGPFA("DBRS OTHER",DBRSCNT)=$G(@DGORF@(DGSET,"DBRS",DBRSNUM,"OTHER"))
"RTN","DGPFHLR",308,0)
 ..S DGPFA("DBRS DATE",DBRSCNT)=$G(@DGORF@(DGSET,"DBRS",DBRSNUM,"DATE"))
"RTN","DGPFHLR",309,0)
 ..S DGPFA("DBRS ACTION",DBRSCNT)=$G(@DGORF@(DGSET,"DBRS",DBRSNUM,"ACTION"))
"RTN","DGPFHLR",310,0)
 ..S DGPFA("DBRS SITE",DBRSCNT)=$G(@DGORF@(DGSET,"DBRS",DBRSNUM,"SITE"))
"RTN","DGPFHLR",311,0)
 ..Q
"RTN","DGPFHLR",312,0)
 .S DGADT=0  ;each DGADT represents a single PRF history action
"RTN","DGPFHLR",313,0)
 .F  S DGADT=$O(@DGORF@(DGSET,DGADT)) Q:'DGADT  D  Q:$D(DGERR)
"RTN","DGPFHLR",314,0)
 ..N DGPFAH   ;assignment history data array
"RTN","DGPFHLR",315,0)
 ..;
"RTN","DGPFHLR",316,0)
 ..S DGPFAH("ASSIGNDT")=DGADT
"RTN","DGPFHLR",317,0)
 ..S DGPFAH("ACTION")=$G(@DGORF@(DGSET,DGADT,"ACTION"))
"RTN","DGPFHLR",318,0)
 ..S DGPFAH("ENTERBY")=.5  ;POSTMASTER
"RTN","DGPFHLR",319,0)
 ..S DGPFAH("APPRVBY")=.5  ;POSTMASTER
"RTN","DGPFHLR",320,0)
 ..M DGPFAH("COMMENT")=@DGORF@(DGSET,DGADT,"COMMENT")
"RTN","DGPFHLR",321,0)
 ..S DGPFAH("ORIGFAC")=$G(@DGORF@(DGSET,DGADT,"ORIGFAC"))
"RTN","DGPFHLR",322,0)
 ..; DBRS data
"RTN","DGPFHLR",323,0)
 ..S DBRSCNT=0,DBRSNUM="" F  S DBRSNUM=$O(@DGORF@(DGSET,"DBRS",DBRSNUM)) Q:DBRSNUM=""  D
"RTN","DGPFHLR",324,0)
 ...S DBRSCNT=DBRSCNT+1
"RTN","DGPFHLR",325,0)
 ...S DGPFAH("DBRS",DBRSCNT)=DBRSNUM_U_$G(@DGORF@(DGSET,"DBRS",DBRSNUM,"OTHER"))
"RTN","DGPFHLR",326,0)
 ...S DGPFAH("DBRS",DBRSCNT)=DGPFAH("DBRS",DBRSCNT)_U_$G(@DGORF@(DGSET,"DBRS",DBRSNUM,"DATE"))
"RTN","DGPFHLR",327,0)
 ...I $G(@DGORF@(DGSET,"DBRS",DBRSNUM,"ACTION"))="D" S DGPFAH("DBRS",DBRSCNT)=DGPFAH("DBRS",DBRSCNT)_U_"D" Q
"RTN","DGPFHLR",328,0)
 ...S DGPFAH("DBRS",DBRSCNT)=DGPFAH("DBRS",DBRSCNT)_U_"A"
"RTN","DGPFHLR",329,0)
 ...S DGPFAH("DBRS",DBRSCNT)=DGPFAH("DBRS",DBRSCNT)_U_$G(@DGORF@(DGSET,"DBRS",DBRSNUM,"SITE"))
"RTN","DGPFHLR",330,0)
 ...Q
"RTN","DGPFHLR",331,0)
 ..;calculate the assignment STATUS from the ACTION
"RTN","DGPFHLR",332,0)
 ..S DGPFA("STATUS")=$$STATUS^DGPFUT(DGPFAH("ACTION"))
"RTN","DGPFHLR",333,0)
 ..S RES=$$STOALL^DGPFAA(.DGPFA,.DGPFAH,.DGERR,"")
"RTN","DGPFHLR",334,0)
 ..Q
"RTN","DGPFHLR",335,0)
 .Q
"RTN","DGPFHLR",336,0)
 Q '$D(DGERR)
"RTN","DGPFHLT")
0^27^B17377719^n/a
"RTN","DGPFHLT",1,0)
DGPFHLT ;SHRPE/YMG - PRF HL7 QBP/RSP PROCESSING ; 05/02/18
"RTN","DGPFHLT",2,0)
 ;;5.3;Registration;**951**;Aug 13, 1993;Build 135
"RTN","DGPFHLT",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPFHLT",4,0)
 ;
"RTN","DGPFHLT",5,0)
 ; This is the main driver for sending QBP^Q11 (PRF flag transfer request) messages.
"RTN","DGPFHLT",6,0)
 ;
"RTN","DGPFHLT",7,0)
 Q
"RTN","DGPFHLT",8,0)
 ;
"RTN","DGPFHLT",9,0)
SEND(DFN,FLAG,FCLTY,REASON) ; entry point
"RTN","DGPFHLT",10,0)
 ; DFN - Patient's DFN
"RTN","DGPFHLT",11,0)
 ; FLAG - PRF flag to transfer (ien in file 26.15)
"RTN","DGPFHLT",12,0)
 ; FCLTY - Facility to send the message to (ien in file 4)
"RTN","DGPFHLT",13,0)
 ; REASON - request reason
"RTN","DGPFHLT",14,0)
 ;
"RTN","DGPFHLT",15,0)
 ; Returns status^HL7 message id^error code^error description^error source
"RTN","DGPFHLT",16,0)
 ;  status is the following set of codes:
"RTN","DGPFHLT",17,0)
 ;    0 = failure
"RTN","DGPFHLT",18,0)
 ;    1 = success
"RTN","DGPFHLT",19,0)
 ;  error source is the following set of codes:
"RTN","DGPFHLT",20,0)
 ;    1 = HL7
"RTN","DGPFHLT",21,0)
 ;    2 = Filer (UPDATE^DIE)
"RTN","DGPFHLT",22,0)
 ;
"RTN","DGPFHLT",23,0)
 N HL,HLCMP,HLECH,HLFS,HLL,HLSCMP ; HL7 variables
"RTN","DGPFHLT",24,0)
 N DGDTM,DGFAC,DGFDA,DGERR,DGICN,DGHLLNK,DGHLRSLT,REQBY,REQID,SEGCNT
"RTN","DGPFHLT",25,0)
 ;
"RTN","DGPFHLT",26,0)
 I +$G(DFN)'>0 Q "0^0^^Invalid DFN"
"RTN","DGPFHLT",27,0)
 ; ICN must be national
"RTN","DGPFHLT",28,0)
 I '$$MPIOK^DGPFUT(DFN,.DGICN) Q "0^0^^Invalid ICN"
"RTN","DGPFHLT",29,0)
 ; Retrieve treating facility HL Logical Link
"RTN","DGPFHLT",30,0)
 S DGHLLNK=$$GETLINK^DGPFHLUT(FCLTY)
"RTN","DGPFHLT",31,0)
 I DGHLLNK=0 Q "0^0^^Unable to get HL7 logical link for facility "_$$STA^XUAF4(FCLTY)_". Please contact the National Help Desk to rectify the issue. As a workaround, please utilize the existing 'CO - Change Ownership' functionality."
"RTN","DGPFHLT",32,0)
 ;
"RTN","DGPFHLT",33,0)
 S REQBY=$$GET1^DIQ(200,DUZ_",",.01) ; Requester's name
"RTN","DGPFHLT",34,0)
 S DGDTM=$$NOW^XLFDT()
"RTN","DGPFHLT",35,0)
 S REQID=$$GENQID(DGDTM) ; Next available query ID
"RTN","DGPFHLT",36,0)
 S HLL("LINKS",1)="DGPF PRF QBP/Q11 SUBSC"_U_DGHLLNK
"RTN","DGPFHLT",37,0)
 ; Initialize the HL7
"RTN","DGPFHLT",38,0)
 D INIT^HLFNC2("DGPF PRF QBP/Q11 EVENT",.HL)
"RTN","DGPFHLT",39,0)
 S HLFS=HL("FS"),HLECH=HL("ECH"),HLCMP=$E(HLECH),HLSCMP=$E(HL("ECH"),4)
"RTN","DGPFHLT",40,0)
 K ^TMP("HLS",$J)
"RTN","DGPFHLT",41,0)
 ; Create HL7 message
"RTN","DGPFHLT",42,0)
 S SEGCNT=0
"RTN","DGPFHLT",43,0)
 S SEGCNT=$$SAVESEG(SEGCNT,$$QPD()) ; QPD segment
"RTN","DGPFHLT",44,0)
 S SEGCNT=$$SAVESEG(SEGCNT,$$NTE()) ; NTE segment
"RTN","DGPFHLT",45,0)
 S SEGCNT=$$SAVESEG(SEGCNT,$$RCP()) ; RCP segment
"RTN","DGPFHLT",46,0)
 ; Send HL7 message
"RTN","DGPFHLT",47,0)
 D GENERATE^HLMA("DGPF PRF QBP/Q11 EVENT","GM",1,.DGHLRSLT)
"RTN","DGPFHLT",48,0)
 ; DHLRSLT = message ID^error code^error description
"RTN","DGPFHLT",49,0)
 I $P(DGHLRSLT,U)>0,$P(DGHLRSLT,U,2)="" D
"RTN","DGPFHLT",50,0)
 .; File new entry into log file 26.22
"RTN","DGPFHLT",51,0)
 .S DGFDA(26.22,"+1,",.01)=DGDTM
"RTN","DGPFHLT",52,0)
 .S DGFDA(26.22,"+1,",.02)=REQBY
"RTN","DGPFHLT",53,0)
 .S DGFDA(26.22,"+1,",.03)=DFN
"RTN","DGPFHLT",54,0)
 .S DGFDA(26.22,"+1,",.04)=FLAG
"RTN","DGPFHLT",55,0)
 .S DGFDA(26.22,"+1,",.05)=1
"RTN","DGPFHLT",56,0)
 .S DGFDA(26.22,"+1,",.08)=REQID
"RTN","DGPFHLT",57,0)
 .S DGFDA(26.22,"+1,",.09)=$P(DGHLRSLT,U)
"RTN","DGPFHLT",58,0)
 .S DGFDA(26.22,"+1,",.1)=DUZ(2)
"RTN","DGPFHLT",59,0)
 .S DGFDA(26.22,"+1,",2.01)=REASON
"RTN","DGPFHLT",60,0)
 .D UPDATE^DIE(,"DGFDA",,"DGERR")
"RTN","DGPFHLT",61,0)
 .Q
"RTN","DGPFHLT",62,0)
 K ^TMP("HLS",$J)
"RTN","DGPFHLT",63,0)
 I $D(DGERR) Q "0^0^"_$G(DGERR("DIERR",1))_U_$G(DGERR("DIERR",1,"TEXT",1))_"^2"
"RTN","DGPFHLT",64,0)
 ; change status of previous requests with "SENT" status to "NO RESPONSE"
"RTN","DGPFHLT",65,0)
 D NORESP^DGPFHLT1(DFN,FLAG,1)
"RTN","DGPFHLT",66,0)
 ;
"RTN","DGPFHLT",67,0)
 Q $S($P(DGHLRSLT,U,2)'="":0,1:1)_U_DGHLRSLT_"^1"
"RTN","DGPFHLT",68,0)
 ;
"RTN","DGPFHLT",69,0)
QPD() ; create QPD segment
"RTN","DGPFHLT",70,0)
 N SEG
"RTN","DGPFHLT",71,0)
 S $P(SEG,HLFS)="PRFREQ01"_HLCMP_"PRF Ownership Transfer Request"   ; field 1
"RTN","DGPFHLT",72,0)
 S $P(SEG,HLFS,2)=REQID                                             ; field 2
"RTN","DGPFHLT",73,0)
 S $P(SEG,HLFS,3)=DGICN                                             ; field 3
"RTN","DGPFHLT",74,0)
 S $P(SEG,HLFS,4)=$$ENCHL7^DGPFHLUT($$GET1^DIQ(26.15,FLAG_",",.01)) ; field 4
"RTN","DGPFHLT",75,0)
 S SEG="QPD"_HLFS_SEG
"RTN","DGPFHLT",76,0)
 Q SEG
"RTN","DGPFHLT",77,0)
 ;
"RTN","DGPFHLT",78,0)
NTE() ; create NTE segment
"RTN","DGPFHLT",79,0)
 N NAME,SEG,Z
"RTN","DGPFHLT",80,0)
 S $P(SEG,HLFS)="1"                             ; field 1
"RTN","DGPFHLT",81,0)
 S $P(SEG,HLFS,3)=$$ENCHL7^DGPFHLUT(REASON)     ; field 3
"RTN","DGPFHLT",82,0)
 S $P(SEG,HLFS,4)="RE"                          ; field 4
"RTN","DGPFHLT",83,0)
 S NAME=$$ENCHL7^DGPFHLUT(REQBY)
"RTN","DGPFHLT",84,0)
 S Z=$$HLNAME^HLFNC(NAME,HLECH)
"RTN","DGPFHLT",85,0)
 S $P(Z,HLCMP,14)=HLSCMP_$$STA^XUAF4(DUZ(2))
"RTN","DGPFHLT",86,0)
 S $P(SEG,HLFS,5)=Z                             ; field 5
"RTN","DGPFHLT",87,0)
 S $P(SEG,HLFS,6)=$$HLDATE^HLFNC(DGDTM)         ; field 6
"RTN","DGPFHLT",88,0)
 S SEG="NTE"_HLFS_SEG
"RTN","DGPFHLT",89,0)
 Q SEG
"RTN","DGPFHLT",90,0)
 ;
"RTN","DGPFHLT",91,0)
RCP() ; create RCP segment
"RTN","DGPFHLT",92,0)
 N SEG
"RTN","DGPFHLT",93,0)
 S $P(SEG,HLFS)="D"                             ; field 1
"RTN","DGPFHLT",94,0)
 S $P(SEG,HLFS,2)="1"_HLCMP_"LI"                ; field 2
"RTN","DGPFHLT",95,0)
 S $P(SEG,HLFS,3)="T"                           ; field 3
"RTN","DGPFHLT",96,0)
 S SEG="RCP"_HLFS_SEG
"RTN","DGPFHLT",97,0)
 Q SEG
"RTN","DGPFHLT",98,0)
 ;
"RTN","DGPFHLT",99,0)
SAVESEG(SEGCNT,SEG) ; save created segment in ^TMP global
"RTN","DGPFHLT",100,0)
 ; SEGCNT - current segment count
"RTN","DGPFHLT",101,0)
 ; SEG - segment to save
"RTN","DGPFHLT",102,0)
 ;
"RTN","DGPFHLT",103,0)
 S SEGCNT=SEGCNT+1
"RTN","DGPFHLT",104,0)
 S ^TMP("HLS",$J,SEGCNT)=SEG
"RTN","DGPFHLT",105,0)
 Q SEGCNT
"RTN","DGPFHLT",106,0)
 ;
"RTN","DGPFHLT",107,0)
GENQID(DGDTM) ; generate new query ID
"RTN","DGPFHLT",108,0)
 ;
"RTN","DGPFHLT",109,0)
 ; DGDTM - timestamp to use in ID generation
"RTN","DGPFHLT",110,0)
 ;
"RTN","DGPFHLT",111,0)
 ; returns next available query ID
"RTN","DGPFHLT",112,0)
 ;
"RTN","DGPFHLT",113,0)
 N QID,SEQ,STOP
"RTN","DGPFHLT",114,0)
 S QID=$$STA^XUAF4(DUZ(2))_$TR($G(DGDTM),".","")
"RTN","DGPFHLT",115,0)
 S STOP=0 F SEQ=1:1:99999 S:'$O(^DGPF(26.22,"C",QID_SEQ,"")) STOP=1 Q:STOP
"RTN","DGPFHLT",116,0)
 Q QID_SEQ
"RTN","DGPFHLT1")
0^28^B83307291^n/a
"RTN","DGPFHLT1",1,0)
DGPFHLT1 ;SHRPE/YMG - PRF HL7 QBP/RSP PROCESSING ; 05/02/18
"RTN","DGPFHLT1",2,0)
 ;;5.3;Registration;**951**;Aug 13, 1993;Build 135
"RTN","DGPFHLT1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPFHLT1",4,0)
 ;
"RTN","DGPFHLT1",5,0)
 ; This is the main driver for processing QBP^Q11 (PRF flag transfer request) messages.
"RTN","DGPFHLT1",6,0)
 ;
"RTN","DGPFHLT1",7,0)
 Q
"RTN","DGPFHLT1",8,0)
 ;
"RTN","DGPFHLT1",9,0)
EN ; entry point
"RTN","DGPFHLT1",10,0)
 ; DATAARY array has the following structure:
"RTN","DGPFHLT1",11,0)
 ;    DATAARY("ACTIVE") = 1 if PRF flag is active, 0 otherwise
"RTN","DGPFHLT1",12,0)
 ;    DATAARY("REVBY")  = name of the person reviewing the request
"RTN","DGPFHLT1",13,0)
 ;    DATAARY("REVDUZ") = DUZ of the person reviewing the request
"RTN","DGPFHLT1",14,0)
 ;    DATAARY("REVDTM") = Date/time of the review
"RTN","DGPFHLT1",15,0)
 ;    DATAARY("REVRES") = Result of the review
"RTN","DGPFHLT1",16,0)
 ;       "A" for approval
"RTN","DGPFHLT1",17,0)
 ;       "D" for denial/rejection
"RTN","DGPFHLT1",18,0)
 ;    DATAARY("REVCMT") = review comment/reason
"RTN","DGPFHLT1",19,0)
 ;    DATAARY("DFN")    = patient DFN
"RTN","DGPFHLT1",20,0)
 ;    DATAARY("FLAG")   = PRF flag ien in file 26.15
"RTN","DGPFHLT1",21,0)
 ;    DATAARY("ICN")    = patient ICN
"RTN","DGPFHLT1",22,0)
 ;    DATAARY("MSGID")  = HL7 message Id
"RTN","DGPFHLT1",23,0)
 ;    DATAARY("QOK")    = flag for QAK segment in RSP^K11 message
"RTN","DGPFHLT1",24,0)
 ;       1 if  patient + PRF flag data has been found and retrieved
"RTN","DGPFHLT1",25,0)
 ;       0 otherwise
"RTN","DGPFHLT1",26,0)
 ;    DATAARY("REQBY")  = requester name
"RTN","DGPFHLT1",27,0)
 ;    DATAARY("REQDTM") = request date/time
"RTN","DGPFHLT1",28,0)
 ;    DATAARY("REQCMT") = request comment/reason
"RTN","DGPFHLT1",29,0)
 ;    DATAARY("REQID")  = query id
"RTN","DGPFHLT1",30,0)
 ;    DATAARY("SENDTO") = file 4  ien of facility we're sending HL7 message to
"RTN","DGPFHLT1",31,0)
 ;    DATAARY("SFIEN")  = ien of sending facility in file 4
"RTN","DGPFHLT1",32,0)
 ;    DATAARY("SFNAME") = formatted name of sending facility
"RTN","DGPFHLT1",33,0)
 ;    DATAARY("ORIGOWN")= file 4 ien of flag's original owner
"RTN","DGPFHLT1",34,0)
 ;
"RTN","DGPFHLT1",35,0)
 N HLCMP,HLECH,HLFS,HLREP,HLSCMP ; HL7 variables
"RTN","DGPFHLT1",36,0)
 N CNT,DATAARY,DGERR,DGFDA,DGIEN,DGPFA,DGPFAH,DIERR,FLAGNM,MSGTYPE,SEGCNT,SEGNM,SEGSTR,SNDDIV,SNDFAC
"RTN","DGPFHLT1",37,0)
 ;
"RTN","DGPFHLT1",38,0)
 S HLFS=HL("FS"),HLECH=HL("ECH"),HLCMP=$E(HLECH),HLREP=$E(HL("ECH"),2),HLSCMP=$E(HL("ECH"),4)
"RTN","DGPFHLT1",39,0)
 K ^TMP("DGPFHLT1",$J)
"RTN","DGPFHLT1",40,0)
 ; load segments into ^TMP global
"RTN","DGPFHLT1",41,0)
 F SEGCNT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","DGPFHLT1",42,0)
 .S CNT=0,^TMP("DGPFHLT1",$J,SEGCNT,CNT)=HLNODE
"RTN","DGPFHLT1",43,0)
 .F  S CNT=$O(HLNODE(CNT)) Q:'CNT  S ^TMP("DGPFHLT1",$J,SEGCNT,CNT)=HLNODE(CNT)
"RTN","DGPFHLT1",44,0)
 .Q
"RTN","DGPFHLT1",45,0)
 ; check message type
"RTN","DGPFHLT1",46,0)
 S SEGSTR=$G(^TMP("DGPFHLT1",$J,1,0))
"RTN","DGPFHLT1",47,0)
 ; if ACK, just bail out
"RTN","DGPFHLT1",48,0)
 I $P(SEGSTR,HLFS)="MSH",$P($P(SEGSTR,HLFS,9),HLCMP)="ACK" K ^TMP("DGPFHLT1",$J) Q
"RTN","DGPFHLT1",49,0)
 ; if RSP^K11 call DGPFHLT3 and bail out
"RTN","DGPFHLT1",50,0)
 I $P(SEGSTR,HLFS)="MSH",$P($P(SEGSTR,HLFS,9),HLCMP)="RSP" D EN^DGPFHLT3 Q
"RTN","DGPFHLT1",51,0)
 ;
"RTN","DGPFHLT1",52,0)
 S (SNDDIV,SNDFAC,FLAGNM)=""
"RTN","DGPFHLT1",53,0)
 ; parse the message
"RTN","DGPFHLT1",54,0)
 S SEGCNT="" F  S SEGCNT=$O(^TMP("DGPFHLT1",$J,SEGCNT)) Q:SEGCNT=""  D
"RTN","DGPFHLT1",55,0)
 .S SEGSTR=$G(^TMP("DGPFHLT1",$J,SEGCNT,0))
"RTN","DGPFHLT1",56,0)
 .S SEGNM=$P(SEGSTR,HLFS)
"RTN","DGPFHLT1",57,0)
 .I SEGNM="MSH" D
"RTN","DGPFHLT1",58,0)
 ..; parse MSH segment
"RTN","DGPFHLT1",59,0)
 ..S SNDFAC=$P($P(SEGSTR,HLFS,4),HLCMP) ; sending facility (station #)
"RTN","DGPFHLT1",60,0)
 ..S DATAARY("MSGID")=$P(SEGSTR,HLFS,10)
"RTN","DGPFHLT1",61,0)
 ..Q
"RTN","DGPFHLT1",62,0)
 .I SEGNM="QPD" D
"RTN","DGPFHLT1",63,0)
 ..; parse QPD segment
"RTN","DGPFHLT1",64,0)
 ..S DATAARY("REQID")=$P(SEGSTR,HLFS,3)
"RTN","DGPFHLT1",65,0)
 ..S DATAARY("ICN")=$P(SEGSTR,HLFS,4)
"RTN","DGPFHLT1",66,0)
 ..S FLAGNM=$$DECHL7^DGPFHLUT($P(SEGSTR,HLFS,5))    ; PRF flag name
"RTN","DGPFHLT1",67,0)
 ..Q
"RTN","DGPFHLT1",68,0)
 .I SEGNM="NTE" D
"RTN","DGPFHLT1",69,0)
 ..; parse NTE segment
"RTN","DGPFHLT1",70,0)
 ..S DATAARY("REQCMT")=$$DECHL7^DGPFHLUT($P(SEGSTR,HLFS,4))
"RTN","DGPFHLT1",71,0)
 ..S DATAARY("REQBY")=$$FMNAME^HLFNC($P($P(SEGSTR,HLFS,6),HLCMP,1,5),HLECH)
"RTN","DGPFHLT1",72,0)
 ..S DATAARY("REQBY")=$$DECHL7^DGPFHLUT(DATAARY("REQBY")) ; requester's name
"RTN","DGPFHLT1",73,0)
 ..S SNDDIV=$P($P($P(SEGSTR,HLFS,6),HLCMP,14),HLSCMP,2) ; sending division (station #)
"RTN","DGPFHLT1",74,0)
 ..S DATAARY("REQDTM")=$$FMDATE^HLFNC($P(SEGSTR,HLFS,7))
"RTN","DGPFHLT1",75,0)
 ..Q
"RTN","DGPFHLT1",76,0)
 .Q
"RTN","DGPFHLT1",77,0)
 ; make sure that we got all necessary pieces of data
"RTN","DGPFHLT1",78,0)
 S DATAARY("QOK")=0,DGERR=$$CHK()
"RTN","DGPFHLT1",79,0)
 ; determine if flag is active
"RTN","DGPFHLT1",80,0)
 S DATAARY("ACTIVE")=$S($P($G(DGPFA("STATUS")),U)=1:1,1:0)
"RTN","DGPFHLT1",81,0)
 I 'DATAARY("ACTIVE") D
"RTN","DGPFHLT1",82,0)
 .N DIERR,DGHERR
"RTN","DGPFHLT1",83,0)
 .S DATAARY("REVBY")="DGPRF,INTERFACE"
"RTN","DGPFHLT1",84,0)
 .S DATAARY("REVDUZ")=+$$FIND1^DIC(200,"","X",DATAARY("REVBY"),,,"DGHERR")
"RTN","DGPFHLT1",85,0)
 .I 'DATAARY("REVDUZ") S DGERR="Receiver tried to use invalid reviewer name."
"RTN","DGPFHLT1",86,0)
 .I 'DGERR S DATAARY("REVDTM")=$$NOW^XLFDT(),DATAARY("REVRES")="A"
"RTN","DGPFHLT1",87,0)
 .Q
"RTN","DGPFHLT1",88,0)
 ; send ACK message
"RTN","DGPFHLT1",89,0)
 D SEND^DGPFHLT4(DATAARY("MSGID"),DGERR)
"RTN","DGPFHLT1",90,0)
 ; if everything checked out, file a log entry
"RTN","DGPFHLT1",91,0)
 I DGERR="" S DGERR=$$UPDLOG(.DATAARY)
"RTN","DGPFHLT1",92,0)
 I DGERR="" D
"RTN","DGPFHLT1",93,0)
 .; change status of previous requests with "PENDING" status to "NO RESPONSE"
"RTN","DGPFHLT1",94,0)
 .D NORESP(DATAARY("DFN"),DATAARY("FLAG"),2)
"RTN","DGPFHLT1",95,0)
 .; if flag is active, send Mailman notification
"RTN","DGPFHLT1",96,0)
 .I DATAARY("ACTIVE") D TREQMSG^DGPFHLTM(.DATAARY,.DGPFA,1)
"RTN","DGPFHLT1",97,0)
 .;if flag is inactive, activate it and transfer ownership to the requester
"RTN","DGPFHLT1",98,0)
 .I 'DATAARY("ACTIVE") D
"RTN","DGPFHLT1",99,0)
 ..S DATAARY("ORIGOWN")=$P($G(DGPFA("OWNER")),U)
"RTN","DGPFHLT1",100,0)
 ..S DGERR=$$UPDASGN(1,DGIEN,.DATAARY,.DGPFA)
"RTN","DGPFHLT1",101,0)
 ..S DATAARY("SENDTO")=$P($$PARENT^DGPFUT1(DATAARY("SFIEN")),U)
"RTN","DGPFHLT1",102,0)
 ..I DATAARY("SENDTO")=0 S DATAARY("SENDTO")=DATAARY("SFIEN")
"RTN","DGPFHLT1",103,0)
 ..; send response message (RSP^K11)
"RTN","DGPFHLT1",104,0)
 ..D SEND^DGPFHLT2(DGERR,.DATAARY)
"RTN","DGPFHLT1",105,0)
 ..Q
"RTN","DGPFHLT1",106,0)
 .Q
"RTN","DGPFHLT1",107,0)
 I DGERR'="" D
"RTN","DGPFHLT1",108,0)
 .; Send Mailman notification
"RTN","DGPFHLT1",109,0)
 .S ERTXT(1)="Error while processing QBP^Q11 HL7 message with message Id "_$G(DATAARY("MSGID"))_"."
"RTN","DGPFHLT1",110,0)
 .S ERTXT(4)="Error description: "_DGERR
"RTN","DGPFHLT1",111,0)
 .D TERRMSG^DGPFHLTM($G(DATAARY("MSGID")),.ERTXT)
"RTN","DGPFHLT1",112,0)
 .Q
"RTN","DGPFHLT1",113,0)
 K ^TMP("DGPFHLT1",$J)
"RTN","DGPFHLT1",114,0)
 Q
"RTN","DGPFHLT1",115,0)
 ;
"RTN","DGPFHLT1",116,0)
CHK() ; Check data in incoming message
"RTN","DGPFHLT1",117,0)
 ; Called from EN tag, relies on (and sets) some variables defined in there
"RTN","DGPFHLT1",118,0)
 ; Returns "" if there are no problems, or error message otherwise
"RTN","DGPFHLT1",119,0)
 ;
"RTN","DGPFHLT1",120,0)
 N DGTFL,FCLTY,OWNER,DIERR,DGHERR
"RTN","DGPFHLT1",121,0)
 I $G(DATAARY("MSGID"))="" Q "Missing message Id in MSH segment."
"RTN","DGPFHLT1",122,0)
 I SNDDIV="" Q "Missing sending facility in NTE segment."
"RTN","DGPFHLT1",123,0)
 I $G(DATAARY("REQID"))="" Q "Missing query Id in QPD segment."
"RTN","DGPFHLT1",124,0)
 S DATAARY("DFN")=+$$GETDFN^MPIF001($G(DATAARY("ICN")))
"RTN","DGPFHLT1",125,0)
 I DATAARY("DFN")'>0 Q "Invalid or missing ICN in QPD segment."
"RTN","DGPFHLT1",126,0)
 S DATAARY("SFIEN")=+$$IEN^XUAF4(SNDDIV)
"RTN","DGPFHLT1",127,0)
 I DATAARY("SFIEN")'>0 Q "Invalid sending facility in NTE segment."
"RTN","DGPFHLT1",128,0)
 D BLDTFL^DGPFUT2(DATAARY("DFN"),.DGTFL)
"RTN","DGPFHLT1",129,0)
 I '$D(DGTFL(+$$IEN^XUAF4(SNDFAC))) Q "Sending facility in MSH segment is not on receiver's treating facility list."
"RTN","DGPFHLT1",130,0)
 S DATAARY("SFNAME")="Station # "_SNDDIV_"("_$$NAME^XUAF4(DATAARY("SFIEN"))_")"
"RTN","DGPFHLT1",131,0)
 S DATAARY("FLAG")=+$$FIND1^DIC(26.15,,"X",FLAGNM,,,"DGHERR")
"RTN","DGPFHLT1",132,0)
 I DATAARY("FLAG")'>0 Q "Invalid or missing PRF flag name in QPD segment."
"RTN","DGPFHLT1",133,0)
 S DGIEN=$$FNDASGN^DGPFAA(DATAARY("DFN"),DATAARY("FLAG")_";DGPF(26.15,") ; PRF assignment ien in file 26.13 
"RTN","DGPFHLT1",134,0)
 I DGIEN'>0 Q "Receiver was unable to find corresponding PRF flag assignment."
"RTN","DGPFHLT1",135,0)
 I '$$GETASGN^DGPFAA(DGIEN,.DGPFA,1) Q "Receiver was unable to retrieve corresponding PRF flag assignment."
"RTN","DGPFHLT1",136,0)
 S DATAARY("QOK")=1
"RTN","DGPFHLT1",137,0)
 S OWNER=$P($G(DGPFA("OWNER")),U)
"RTN","DGPFHLT1",138,0)
 S FCLTY=$P($$SITE^VASITE(),U)
"RTN","DGPFHLT1",139,0)
 I OWNER'=FCLTY,$P($$PARENT^DGPFUT1(OWNER),U)'=FCLTY Q "Receiver is not the owner of PRF flag in question."
"RTN","DGPFHLT1",140,0)
 I $G(DATAARY("REQBY"))="" Q "Invalid or missing requester's name in NTE segment."
"RTN","DGPFHLT1",141,0)
 I $G(DATAARY("REQDTM"))="" Q "Invalid or missing request date/time in NTE segment."
"RTN","DGPFHLT1",142,0)
 Q ""
"RTN","DGPFHLT1",143,0)
 ;
"RTN","DGPFHLT1",144,0)
UPDLOG(DATA) ; file a log entry
"RTN","DGPFHLT1",145,0)
 ; DATA - Array of values to file (see tag EN)
"RTN","DGPFHLT1",146,0)
 ; Returns "" if there are no problems, or error message otherwise
"RTN","DGPFHLT1",147,0)
 ; 
"RTN","DGPFHLT1",148,0)
 N DGFDA,DIEERR,DIERR
"RTN","DGPFHLT1",149,0)
 S DGFDA(26.22,"+1,",.01)=$G(DATA("REQDTM"))
"RTN","DGPFHLT1",150,0)
 S DGFDA(26.22,"+1,",.02)=$G(DATA("REQBY"))
"RTN","DGPFHLT1",151,0)
 S DGFDA(26.22,"+1,",.03)=$G(DATA("DFN"))
"RTN","DGPFHLT1",152,0)
 S DGFDA(26.22,"+1,",.04)=$G(DATA("FLAG"))
"RTN","DGPFHLT1",153,0)
 S DGFDA(26.22,"+1,",.05)=$S($G(DATA("ACTIVE"))=1:2,1:3)
"RTN","DGPFHLT1",154,0)
 I $G(DATA("REVBY"))'="" D
"RTN","DGPFHLT1",155,0)
 .S DGFDA(26.22,"+1,",.06)=DATA("REVBY")
"RTN","DGPFHLT1",156,0)
 .S DGFDA(26.22,"+1,",.07)=$G(DATA("REVDTM"))
"RTN","DGPFHLT1",157,0)
 .Q
"RTN","DGPFHLT1",158,0)
 S DGFDA(26.22,"+1,",.08)=$G(DATA("REQID"))
"RTN","DGPFHLT1",159,0)
 S DGFDA(26.22,"+1,",.09)=$G(DATA("MSGID"))
"RTN","DGPFHLT1",160,0)
 S DGFDA(26.22,"+1,",.1)=$G(DATA("SFIEN"))
"RTN","DGPFHLT1",161,0)
 S DGFDA(26.22,"+1,",2.01)=$G(DATA("REQCMT"))
"RTN","DGPFHLT1",162,0)
 D UPDATE^DIE(,"DGFDA",,"DIEERR")
"RTN","DGPFHLT1",163,0)
 I $D(DIEERR) Q $E("Log filer: "_$G(DIEERR("DIERR",1,"TEXT",1)),1,80)
"RTN","DGPFHLT1",164,0)
 Q ""
"RTN","DGPFHLT1",165,0)
 ;
"RTN","DGPFHLT1",166,0)
UPDASGN(AFLG,DGIEN,DATA,DGPFA) ; update PRF assignment and assignment history
"RTN","DGPFHLT1",167,0)
 ; AFLG - 1 if flag needs to be reactivated, 0 otherwise
"RTN","DGPFHLT1",168,0)
 ; DGIEN - ien of PRF assignment record
"RTN","DGPFHLT1",169,0)
 ; DATA - Array of values to work with (see tag EN)
"RTN","DGPFHLT1",170,0)
 ; DGPFA - PRF assignment array
"RTN","DGPFHLT1",171,0)
 ; Returns "" if there are no problems, or error message otherwise
"RTN","DGPFHLT1",172,0)
 ;
"RTN","DGPFHLT1",173,0)
 N DBRSCNT,DBRSDATA,DBRSNUM,RES,Z
"RTN","DGPFHLT1",174,0)
 S RES=""
"RTN","DGPFHLT1",175,0)
 S DGPFAH("APPRVBY")=$G(DATA("REVDUZ"))
"RTN","DGPFHLT1",176,0)
 S DGPFAH("ASSIGNDT")=$G(DATA("REVDTM"))
"RTN","DGPFHLT1",177,0)
 S DGPFAH("ENTERBY")=$G(DATA("REVDUZ"))
"RTN","DGPFHLT1",178,0)
 S DGPFA("REVIEWDT")=""
"RTN","DGPFHLT1",179,0)
 S DGPFA("STATUS")=1 ; flag status = Active
"RTN","DGPFHLT1",180,0)
 S DGPFAH("COMMENT",1,0)="Ownership transfer request has been received for this flag."
"RTN","DGPFHLT1",181,0)
 ; add DBRS data to DGPFAH array
"RTN","DGPFHLT1",182,0)
 D GETDBRS^DGPFUT6(.DBRSDATA,DGIEN)
"RTN","DGPFHLT1",183,0)
 S (DBRSCNT,DBRSNUM)=0 F  S DBRSNUM=$O(DBRSDATA(DBRSNUM)) Q:DBRSNUM=""  D
"RTN","DGPFHLT1",184,0)
 .S DBRSCNT=DBRSCNT+1
"RTN","DGPFHLT1",185,0)
 .S DGPFAH("DBRS",DBRSCNT)=DBRSNUM_U_$P($G(DBRSDATA(DBRSNUM,"OTHER")),U)_U_$P($G(DBRSDATA(DBRSNUM,"DATE")),U)
"RTN","DGPFHLT1",186,0)
 .S DGPFAH("DBRS",DBRSCNT)=DGPFAH("DBRS",DBRSCNT)_U_"N"_U_$P($G(DBRSDATA(DBRSNUM,"SITE")),U)
"RTN","DGPFHLT1",187,0)
 .Q
"RTN","DGPFHLT1",188,0)
 ; reactivate flag if it's inactive
"RTN","DGPFHLT1",189,0)
 I AFLG D
"RTN","DGPFHLT1",190,0)
 .S DGPFAH("ACTION")=4               ; Action = Reactivate
"RTN","DGPFHLT1",191,0)
 .S DGPFAH("COMMENT",2,0)="As a result, flag has been reactivated."
"RTN","DGPFHLT1",192,0)
 .S Z=$$STOALL^DGPFAA(.DGPFA,.DGPFAH,,"")
"RTN","DGPFHLT1",193,0)
 .I $P(Z,U)'>0 S RES="Receiver was unable to update PRF assignment record." Q
"RTN","DGPFHLT1",194,0)
 .I $P(Z,U,2)'>0 S RES="Receiver was unable to update PRF history record." Q
"RTN","DGPFHLT1",195,0)
 .; send ORU HL7 message for reactivation
"RTN","DGPFHLT1",196,0)
 .S:'$$SNDORU^DGPFHLS(DGIEN) RES="Receiver was unable to send HL7 message update (ORU message)."
"RTN","DGPFHLT1",197,0)
 .Q
"RTN","DGPFHLT1",198,0)
 I RES="" D
"RTN","DGPFHLT1",199,0)
 .; change ownership
"RTN","DGPFHLT1",200,0)
 .S DGPFAH("ACTION")=2               ; Action = Continue
"RTN","DGPFHLT1",201,0)
 .S DGPFA("OWNER")=$G(DATA("SFIEN")) ; New owner site
"RTN","DGPFHLT1",202,0)
 .S DGPFAH("COMMENT",2,0)="As a result, flag ownership has been transferred"
"RTN","DGPFHLT1",203,0)
 .S DGPFAH("COMMENT",3,0)="to "_$G(DATA("SFNAME"))
"RTN","DGPFHLT1",204,0)
 .H 1 S DGPFAH("ASSIGNDT")=$$NOW^XLFDT() ; ensure that date/time of this history record differs from the previous one (reactivation)
"RTN","DGPFHLT1",205,0)
 .S Z=$$STOALL^DGPFAA(.DGPFA,.DGPFAH,,"")
"RTN","DGPFHLT1",206,0)
 .I $P(Z,U)'>0 S RES="Receiver was unable to update PRF assignment record." Q
"RTN","DGPFHLT1",207,0)
 .I $P(Z,U,2)'>0 S RES="Receiver was unable to update PRF history record." Q
"RTN","DGPFHLT1",208,0)
 .; send ORU HL7 message for ownership transfer
"RTN","DGPFHLT1",209,0)
 .S:'$$SNDORU^DGPFHLS(DGIEN) RES="Receiver was unable to send HL7 message update (ORU message)."
"RTN","DGPFHLT1",210,0)
 .Q
"RTN","DGPFHLT1",211,0)
 Q RES
"RTN","DGPFHLT1",212,0)
 ;
"RTN","DGPFHLT1",213,0)
NORESP(DFN,FLAG,STATUS) ; set status of entries in file 26.22 to "NO RESPONSE"
"RTN","DGPFHLT1",214,0)
 ; DFN - patient DFN
"RTN","DGPFHLT1",215,0)
 ; FLAG - flag ien in file 26.15
"RTN","DGPFHLT1",216,0)
 ; STATUS - current status of entries that should be flipped to "NO RESPONSE" (internal code)
"RTN","DGPFHLT1",217,0)
 ;
"RTN","DGPFHLT1",218,0)
 N DATE,DGFDA,DGHERR,DIERR,IEN
"RTN","DGPFHLT1",219,0)
 I +DFN'>0 Q
"RTN","DGPFHLT1",220,0)
 I +FLAG'>0 Q
"RTN","DGPFHLT1",221,0)
 I +STATUS'>0 Q
"RTN","DGPFHLT1",222,0)
 ; skip the latest entry
"RTN","DGPFHLT1",223,0)
 S DATE=$O(^DGPF(26.22,"D",DFN,FLAG,STATUS,""),-1)
"RTN","DGPFHLT1",224,0)
 ; loop backwards, starting from the second to last entry
"RTN","DGPFHLT1",225,0)
 F  S DATE=$O(^DGPF(26.22,"D",DFN,FLAG,STATUS,DATE),-1) Q:DATE=""  D
"RTN","DGPFHLT1",226,0)
 .S IEN=+$O(^DGPF(26.22,"D",DFN,FLAG,STATUS,DATE,""))
"RTN","DGPFHLT1",227,0)
 .S DGFDA(26.22,IEN_",",.05)=6
"RTN","DGPFHLT1",228,0)
 .D FILE^DIE(,"DGFDA","DGHERR") K DGFDA
"RTN","DGPFHLT1",229,0)
 .Q
"RTN","DGPFHLT1",230,0)
 Q
"RTN","DGPFHLT2")
0^29^B13087829^n/a
"RTN","DGPFHLT2",1,0)
DGPFHLT2 ;SHRPE/YMG - PRF HL7 QBP/RSP PROCESSING ; 05/02/18
"RTN","DGPFHLT2",2,0)
 ;;5.3;Registration;**951**;Aug 13, 1993;Build 135
"RTN","DGPFHLT2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPFHLT2",4,0)
 ;
"RTN","DGPFHLT2",5,0)
 ; This is the main driver for sending RSP^K11 (response to PRF flag transfer request) messages.
"RTN","DGPFHLT2",6,0)
 ;
"RTN","DGPFHLT2",7,0)
 Q
"RTN","DGPFHLT2",8,0)
 ;
"RTN","DGPFHLT2",9,0)
SEND(DGMERR,DATA) ; entry point
"RTN","DGPFHLT2",10,0)
 ; DATA - Array of values to file (see tag EN^DGPFHLT1)
"RTN","DGPFHLT2",11,0)
 ; DGMERR - error message to include in MSA segment
"RTN","DGPFHLT2",12,0)
 ;
"RTN","DGPFHLT2",13,0)
 N DGERR,DGFDA,DGHLRSLT,ERTXT,IENS,SEGCNT
"RTN","DGPFHLT2",14,0)
 N HL,HLCMP,HLECH,HLFS,HLL,HLREP,HLSCMP
"RTN","DGPFHLT2",15,0)
 K ^TMP("HLS",$J)
"RTN","DGPFHLT2",16,0)
 ; get logical link
"RTN","DGPFHLT2",17,0)
 S HLL("LINKS",1)="DGPF PRF RSP/K11 SUBSC"_U_$$GETLINK^DGPFHLUT(DATA("SENDTO"))
"RTN","DGPFHLT2",18,0)
 ; Initialize the HL7
"RTN","DGPFHLT2",19,0)
 D INIT^HLFNC2("DGPF PRF RSP/K11 EVENT",.HL)
"RTN","DGPFHLT2",20,0)
 S HLFS=HL("FS"),HLECH=HL("ECH"),HLCMP=$E(HLECH),HLREP=$E(HL("ECH"),2),HLSCMP=$E(HL("ECH"),4)
"RTN","DGPFHLT2",21,0)
 ; Create HL7 message
"RTN","DGPFHLT2",22,0)
 S SEGCNT=0
"RTN","DGPFHLT2",23,0)
 S SEGCNT=$$SAVESEG^DGPFHLT(SEGCNT,$$QAK()) ; QAK segment
"RTN","DGPFHLT2",24,0)
 S SEGCNT=$$SAVESEG^DGPFHLT(SEGCNT,$$QPD()) ; QPD segment
"RTN","DGPFHLT2",25,0)
 S SEGCNT=$$SAVESEG^DGPFHLT(SEGCNT,$$NTE()) ; NTE segment
"RTN","DGPFHLT2",26,0)
 ; Send HL7 message
"RTN","DGPFHLT2",27,0)
 D GENERATE^HLMA("DGPF PRF RSP/K11 EVENT","GM",1,.DGHLRSLT)
"RTN","DGPFHLT2",28,0)
 I $P(DGHLRSLT,U,2)'="" D
"RTN","DGPFHLT2",29,0)
 .; There was an error while sending RSP^K11 message
"RTN","DGPFHLT2",30,0)
 .; Update log entry in file 26.22 accordingly
"RTN","DGPFHLT2",31,0)
 .S IENS=$O(^DGPF(26.22,"B",$G(DATA("REQDTM")),""))_","
"RTN","DGPFHLT2",32,0)
 .S DGFDA(26.22,IENS,.05)=5
"RTN","DGPFHLT2",33,0)
 .S DGFDA(26.22,IENS,1)=$E($P(DGHLRSLT,U,3),1,80)
"RTN","DGPFHLT2",34,0)
 .D FILE^DIE(,"DGFDA","DGERR")
"RTN","DGPFHLT2",35,0)
 .; Send Mailman notification
"RTN","DGPFHLT2",36,0)
 .S ERTXT(1)="Error while sending RSP^K11 HL7 message in response to QBP^Q11 HL7"
"RTN","DGPFHLT2",37,0)
 .S ERTXT(2)="message with message Id "_$G(DATA("MSGID"))_"."
"RTN","DGPFHLT2",38,0)
 .S ERTXT(3)="Error code: "_$P(DGHLRSLT,U,2)
"RTN","DGPFHLT2",39,0)
 .S ERTXT(4)="Error description: "_$P(DGHLRSLT,U,3)
"RTN","DGPFHLT2",40,0)
 .I $D(DGERR) D
"RTN","DGPFHLT2",41,0)
 ..S ERTXT(5)=""
"RTN","DGPFHLT2",42,0)
 ..S ERTXT(6)="Error while updating log entry in file 26.22."
"RTN","DGPFHLT2",43,0)
 ..S ERTXT(7)="Error code: "_$G(DGERR("DIERR",1))
"RTN","DGPFHLT2",44,0)
 ..S ERTXT(8)="Error description: "_$G(DGERR("DIERR",1,"TEXT",1))
"RTN","DGPFHLT2",45,0)
 ..Q
"RTN","DGPFHLT2",46,0)
 .D TERRMSG^DGPFHLTM($P(DGHLRSLT,U),.ERTXT)
"RTN","DGPFHLT2",47,0)
 .Q
"RTN","DGPFHLT2",48,0)
 ; update "NO RESPONSE" entries with new review date/time
"RTN","DGPFHLT2",49,0)
 D NORESPDT^DGPFHLT3($G(DATA("DFN")),$G(DATA("FLAG")),$G(DATA("REVDTM")))
"RTN","DGPFHLT2",50,0)
 K ^TMP("HLS",$J)
"RTN","DGPFHLT2",51,0)
 Q
"RTN","DGPFHLT2",52,0)
 ;
"RTN","DGPFHLT2",53,0)
QAK() ; create QAK segment
"RTN","DGPFHLT2",54,0)
 N SEG
"RTN","DGPFHLT2",55,0)
 S $P(SEG,HLFS)=$G(DATA("REQID"))                                   ; field 1
"RTN","DGPFHLT2",56,0)
 S $P(SEG,HLFS,2)=$S($G(DATA("QOK"))=1:"OK",1:"AR")                 ; field 2
"RTN","DGPFHLT2",57,0)
 S $P(SEG,HLFS,3)="PRFREQ01"_HLCMP_"PRF Ownership Transfer Request" ; field 3
"RTN","DGPFHLT2",58,0)
 S SEG="QAK"_HLFS_SEG
"RTN","DGPFHLT2",59,0)
 Q SEG
"RTN","DGPFHLT2",60,0)
 ;
"RTN","DGPFHLT2",61,0)
QPD() ; create QPD segment
"RTN","DGPFHLT2",62,0)
 N IENS,SEG
"RTN","DGPFHLT2",63,0)
 S $P(SEG,HLFS)="PRFREQ01"_HLCMP_"PRF Ownership Transfer Request"   ; field 1
"RTN","DGPFHLT2",64,0)
 S $P(SEG,HLFS,2)=$G(DATA("REQID"))                                 ; field 2
"RTN","DGPFHLT2",65,0)
 S $P(SEG,HLFS,3)=$G(DATA("ICN"))                                   ; field 3
"RTN","DGPFHLT2",66,0)
 S IENS=$G(DATA("FLAG"))_","
"RTN","DGPFHLT2",67,0)
 S $P(SEG,HLFS,4)=$$ENCHL7^DGPFHLUT($$GET1^DIQ(26.15,IENS,.01))     ; field 4
"RTN","DGPFHLT2",68,0)
 S $P(SEG,HLFS,5)=$$ENCHL7^DGPFHLUT($G(DATA("REVBY")))              ; field 5
"RTN","DGPFHLT2",69,0)
 S $P(SEG,HLFS,6)=$$HLDATE^HLFNC($G(DATA("REVDTM")))                ; field 6
"RTN","DGPFHLT2",70,0)
 S SEG="QPD"_HLFS_SEG
"RTN","DGPFHLT2",71,0)
 Q SEG
"RTN","DGPFHLT2",72,0)
 ;
"RTN","DGPFHLT2",73,0)
NTE() ; create NTE segment
"RTN","DGPFHLT2",74,0)
 N NAME,SEG,Z
"RTN","DGPFHLT2",75,0)
 S $P(SEG,HLFS)="1"                                 ; field 1
"RTN","DGPFHLT2",76,0)
 S Z=$G(DATA("REVRES"))_HLREP_$$ENCHL7^DGPFHLUT($G(DATA("REVCMT")))
"RTN","DGPFHLT2",77,0)
 S $P(SEG,HLFS,3)=Z                                 ; field 3
"RTN","DGPFHLT2",78,0)
 S $P(SEG,HLFS,4)="RE"                              ; field 4
"RTN","DGPFHLT2",79,0)
 S Z="",$P(Z,HLCMP,14)=HLSCMP_$G(DATA("ORIGOWN"))
"RTN","DGPFHLT2",80,0)
 S $P(SEG,HLFS,5)=Z                                 ; field 5
"RTN","DGPFHLT2",81,0)
 S SEG="NTE"_HLFS_SEG
"RTN","DGPFHLT2",82,0)
 Q SEG
"RTN","DGPFHLT3")
0^31^B17764072^n/a
"RTN","DGPFHLT3",1,0)
DGPFHLT3 ;SHRPE/YMG - PRF HL7 QBP/RSP PROCESSING ; 05/02/18
"RTN","DGPFHLT3",2,0)
 ;;5.3;Registration;**951**;Aug 13, 1993;Build 135
"RTN","DGPFHLT3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPFHLT3",4,0)
 ;
"RTN","DGPFHLT3",5,0)
 ; This is the main driver for processing RSP^K11 (response to PRF flag transfer request) messages
"RTN","DGPFHLT3",6,0)
 ;
"RTN","DGPFHLT3",7,0)
 Q
"RTN","DGPFHLT3",8,0)
 ;
"RTN","DGPFHLT3",9,0)
EN ; entry point
"RTN","DGPFHLT3",10,0)
 ; called from EN^DGPFHLT1, uses ^TMP("DGPFHLT1,$J") work global created there.
"RTN","DGPFHLT3",11,0)
 ;
"RTN","DGPFHLT3",12,0)
 N DGERR,DGFDA,DGFERR,ERTXT,IENS,LOGIEN,MAILARY,MAILPFA,MSGID,REQID,SEGCNT,SEGNM,SEGSTR,SNDFAC,STOP
"RTN","DGPFHLT3",13,0)
 ;
"RTN","DGPFHLT3",14,0)
 S STOP=0,DGERR=""
"RTN","DGPFHLT3",15,0)
 ; parse the message
"RTN","DGPFHLT3",16,0)
 S SEGCNT="" F  S SEGCNT=$O(^TMP("DGPFHLT1",$J,SEGCNT)) Q:SEGCNT=""  D  Q:STOP
"RTN","DGPFHLT3",17,0)
 .S SEGSTR=$G(^TMP("DGPFHLT1",$J,SEGCNT,0))
"RTN","DGPFHLT3",18,0)
 .S SEGNM=$P(SEGSTR,HLFS)
"RTN","DGPFHLT3",19,0)
 .I SEGNM="MSH" D
"RTN","DGPFHLT3",20,0)
 ..; parse MSH segment
"RTN","DGPFHLT3",21,0)
 ..S SNDFAC=$P($P(SEGSTR,HLFS,4),HLCMP) ; sending facility (station #) for use in error messages
"RTN","DGPFHLT3",22,0)
 ..S MSGID=$P(SEGSTR,HLFS,10) ; HL7 message Id
"RTN","DGPFHLT3",23,0)
 ..Q
"RTN","DGPFHLT3",24,0)
 .I SEGNM="QAK" D  Q:STOP
"RTN","DGPFHLT3",25,0)
 ..; parse QAK segment
"RTN","DGPFHLT3",26,0)
 ..S REQID=$P(SEGSTR,HLFS,2) ; query Id
"RTN","DGPFHLT3",27,0)
 ..S LOGIEN=$$FNDLOG(REQID) I 'LOGIEN D  Q
"RTN","DGPFHLT3",28,0)
 ...S DGERR="Unable to find log entry for query id "_REQID
"RTN","DGPFHLT3",29,0)
 ...D SENDERR(MSGID,SNDFAC,"",DGERR)
"RTN","DGPFHLT3",30,0)
 ...S STOP=1
"RTN","DGPFHLT3",31,0)
 ...Q
"RTN","DGPFHLT3",32,0)
 ..S IENS=LOGIEN_","
"RTN","DGPFHLT3",33,0)
 ..I DGERR="",$P(SEGSTR,HLFS,3)'="OK" S DGERR="Receiver was unable to find corresponding PRF flag assignment."
"RTN","DGPFHLT3",34,0)
 ..Q
"RTN","DGPFHLT3",35,0)
 .I SEGNM="QPD" D
"RTN","DGPFHLT3",36,0)
 ..; parse QPD segment
"RTN","DGPFHLT3",37,0)
 ..S MAILARY("REVBY")=$$DECHL7^DGPFHLUT($P(SEGSTR,HLFS,6)) ; reviewer name
"RTN","DGPFHLT3",38,0)
 ..S MAILARY("REVDTM")=$$FMDATE^HLFNC($P(SEGSTR,HLFS,7)) ; review date/time
"RTN","DGPFHLT3",39,0)
 ..Q
"RTN","DGPFHLT3",40,0)
 .I SEGNM="NTE" D
"RTN","DGPFHLT3",41,0)
 ..; parse NTE segment
"RTN","DGPFHLT3",42,0)
 ..S MAILARY("REVRES")=$P($P(SEGSTR,HLFS,4),HLREP) ; result of the review
"RTN","DGPFHLT3",43,0)
 ..S MAILARY("REVCMT")=$$DECHL7^DGPFHLUT($P($P(SEGSTR,HLFS,4),HLREP,2)) ; review reason
"RTN","DGPFHLT3",44,0)
 ..Q
"RTN","DGPFHLT3",45,0)
 .Q
"RTN","DGPFHLT3",46,0)
 S MAILARY("REVRES")=$G(MAILARY("REVRES"))
"RTN","DGPFHLT3",47,0)
 I "^A^D^"'[(U_MAILARY("REVRES")_U),DGERR="" S DGERR="Invalid review status code received."
"RTN","DGPFHLT3",48,0)
 ; send ACK message
"RTN","DGPFHLT3",49,0)
 D SEND^DGPFHLT4(MSGID,DGERR)
"RTN","DGPFHLT3",50,0)
 ; update log entry
"RTN","DGPFHLT3",51,0)
 I $G(IENS) D UPDLOG(IENS,DGERR,.MAILARY,.DGFERR)
"RTN","DGPFHLT3",52,0)
 I DGERR'=""!$D(DGFERR) D  G ENX
"RTN","DGPFHLT3",53,0)
 .; Send Mailman notification for error
"RTN","DGPFHLT3",54,0)
 .D:DGERR'="" SENDERR(MSGID,SNDFAC,"",DGERR)
"RTN","DGPFHLT3",55,0)
 .D:$D(DGFERR) SENDERR(MSGID,SNDFAC,$G(DGFERR("DIERR",1)),$G(DGFERR("DIERR",1,"TEXT",1)))
"RTN","DGPFHLT3",56,0)
 .Q
"RTN","DGPFHLT3",57,0)
 ; finish setting up data structures for DGPFHLTM and send Mailman notification about response
"RTN","DGPFHLT3",58,0)
 K DGFDA D GETS^DIQ(26.22,IENS,".01:.04;2.01",,"DGFDA")
"RTN","DGPFHLT3",59,0)
 S MAILARY("REQDTM")=$G(DGFDA(26.22,IENS,.01))
"RTN","DGPFHLT3",60,0)
 S MAILARY("REQBY")=$G(DGFDA(26.22,IENS,.02))
"RTN","DGPFHLT3",61,0)
 S MAILARY("REQCMT")=$G(DGFDA(26.22,IENS,2.01))
"RTN","DGPFHLT3",62,0)
 ; only set external values here for TREQMSG^DGPFHLTM, full DGPFA is not needed.
"RTN","DGPFHLT3",63,0)
 S MAILPFA("DFN")=U_$G(DGFDA(26.22,IENS,.03))
"RTN","DGPFHLT3",64,0)
 S MAILPFA("FLAG")=U_$G(DGFDA(26.22,IENS,.04))
"RTN","DGPFHLT3",65,0)
 D TREQMSG^DGPFHLTM(.MAILARY,.MAILPFA,2)
"RTN","DGPFHLT3",66,0)
 ; update "NO RESPONSE" entries with new review date/time
"RTN","DGPFHLT3",67,0)
 D NORESPDT($$FIND1^DIC(2,,"X",$G(DGFDA(26.22,IENS,.03))),$$FIND1^DIC(26.15,,"X",$G(DGFDA(26.22,IENS,.04))),MAILARY("REVDTM"))
"RTN","DGPFHLT3",68,0)
 ;
"RTN","DGPFHLT3",69,0)
ENX ; exit point
"RTN","DGPFHLT3",70,0)
 K ^TMP("DGPFHLT1",$J)
"RTN","DGPFHLT3",71,0)
 Q
"RTN","DGPFHLT3",72,0)
 ;
"RTN","DGPFHLT3",73,0)
FNDLOG(REQID) ; find log entry (file 26.22) for a given query id
"RTN","DGPFHLT3",74,0)
 ; REQID - query id to look for
"RTN","DGPFHLT3",75,0)
 ; Returns ien in file 26.22 on success, 0 otherwise
"RTN","DGPFHLT3",76,0)
 N RES
"RTN","DGPFHLT3",77,0)
 S RES=0 I $G(REQID)'="" S RES=+$O(^DGPF(26.22,"C",REQID,""))
"RTN","DGPFHLT3",78,0)
 Q RES
"RTN","DGPFHLT3",79,0)
 ;
"RTN","DGPFHLT3",80,0)
SENDERR(MSGID,SNDFAC,DGECODE,DGERR) ; send Mailman notification for an error
"RTN","DGPFHLT3",81,0)
 N ERTXT
"RTN","DGPFHLT3",82,0)
 S ERTXT(1)="Error while processing RSP^K11 HL7 message from station # "_$G(SNDFAC)_"."
"RTN","DGPFHLT3",83,0)
 S ERTXT(3)="Error code: "_$S($G(DGECODE)="":"N/A",1:$G(DGECODE))
"RTN","DGPFHLT3",84,0)
 S ERTXT(4)="Error description: "_$G(DGERR)
"RTN","DGPFHLT3",85,0)
 D TERRMSG^DGPFHLTM(MSGID,.ERTXT)
"RTN","DGPFHLT3",86,0)
 Q
"RTN","DGPFHLT3",87,0)
 ;
"RTN","DGPFHLT3",88,0)
UPDLOG(IENS,DGERR,DATA,DGFERR) ; update log entry in file 26.22
"RTN","DGPFHLT3",89,0)
 ; only updates fields .05,.06,.07,and 1
"RTN","DGPFHLT3",90,0)
 ;
"RTN","DGPFHLT3",91,0)
 ; IENS - ien in file 26.22_","
"RTN","DGPFHLT3",92,0)
 ; DGERR - error text to file into 26.22/1
"RTN","DGPFHLT3",93,0)
 ; DATA - array of values to file (see tag EN^DGPFHLT1)
"RTN","DGPFHLT3",94,0)
 ; DGFERR - array to return FM filing errors in
"RTN","DGPFHLT3",95,0)
 ;
"RTN","DGPFHLT3",96,0)
 ; returns filing errors in DGFERR, if any.
"RTN","DGPFHLT3",97,0)
 ;
"RTN","DGPFHLT3",98,0)
 N DGFDA
"RTN","DGPFHLT3",99,0)
 S DGFDA(26.22,IENS,.05)=$S(DGERR'="":5,DATA("REVRES")="A":3,1:4)
"RTN","DGPFHLT3",100,0)
 S DGFDA(26.22,IENS,.06)=$G(DATA("REVBY"))
"RTN","DGPFHLT3",101,0)
 S DGFDA(26.22,IENS,.07)=$G(DATA("REVDTM"))
"RTN","DGPFHLT3",102,0)
 S DGFDA(26.22,IENS,2.02)=$G(DATA("REVCMT"))
"RTN","DGPFHLT3",103,0)
 S:DGERR'="" DGFDA(26.22,IENS,1)=DGERR
"RTN","DGPFHLT3",104,0)
 D FILE^DIE(,"DGFDA","DGFERR")
"RTN","DGPFHLT3",105,0)
 Q
"RTN","DGPFHLT3",106,0)
 ;
"RTN","DGPFHLT3",107,0)
NORESPDT(DFN,FLAG,RDT) ; update review date/time of "NO RESPONSE" entries in file 26.22
"RTN","DGPFHLT3",108,0)
 ; DFN - patient DFN
"RTN","DGPFHLT3",109,0)
 ; FLAG - flag ien in file 26.15
"RTN","DGPFHLT3",110,0)
 ; RDT - review date/time to use in internal FM format
"RTN","DGPFHLT3",111,0)
 ;
"RTN","DGPFHLT3",112,0)
 N DATE,DGFDA,DIERR,IEN
"RTN","DGPFHLT3",113,0)
 I +DFN'>0!(+FLAG'>0) Q
"RTN","DGPFHLT3",114,0)
 ; loop through "NO RESPONSE" entries
"RTN","DGPFHLT3",115,0)
 S DATE="" F  S DATE=$O(^DGPF(26.22,"D",DFN,FLAG,6,DATE)) Q:DATE=""  D
"RTN","DGPFHLT3",116,0)
 .S IEN=+$O(^DGPF(26.22,"D",DFN,FLAG,6,DATE,""))
"RTN","DGPFHLT3",117,0)
 .S DGFDA(26.22,IEN_",",.07)=RDT
"RTN","DGPFHLT3",118,0)
 .D FILE^DIE(,"DGFDA","DIERR") K DGFDA
"RTN","DGPFHLT3",119,0)
 .Q
"RTN","DGPFHLT3",120,0)
 Q
"RTN","DGPFHLT4")
0^34^B1707116^n/a
"RTN","DGPFHLT4",1,0)
DGPFHLT4 ;SHRPE/YMG - PRF HL7 QBP/RSP PROCESSING ; 05/02/18
"RTN","DGPFHLT4",2,0)
 ;;5.3;Registration;**951**;Aug 13, 1993;Build 135
"RTN","DGPFHLT4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPFHLT4",4,0)
 ;
"RTN","DGPFHLT4",5,0)
 ; This is the main driver for sending ACK (general acknowledgement) messages.
"RTN","DGPFHLT4",6,0)
 ;
"RTN","DGPFHLT4",7,0)
 Q
"RTN","DGPFHLT4",8,0)
 ;
"RTN","DGPFHLT4",9,0)
SEND(MSGID,DGMERR) ; entry point
"RTN","DGPFHLT4",10,0)
 ; MSGID - HL7 message id to send ACK for
"RTN","DGPFHLT4",11,0)
 ; DGMERR - error message to include in MSA segment
"RTN","DGPFHLT4",12,0)
 ;
"RTN","DGPFHLT4",13,0)
 N DGHLRSLT,SEGCNT
"RTN","DGPFHLT4",14,0)
 K ^TMP("HLA",$J)
"RTN","DGPFHLT4",15,0)
 ; Create HL7 message
"RTN","DGPFHLT4",16,0)
 S SEGCNT=0
"RTN","DGPFHLT4",17,0)
 S SEGCNT=$$SAVESEG(SEGCNT,$$MSA()) ; MSA segment
"RTN","DGPFHLT4",18,0)
 ; Send HL7 message
"RTN","DGPFHLT4",19,0)
 D GENACK^HLMA1(HL("EID"),$G(HLMTIENS),HL("EIDS"),"GM",1,.DGHLRSLT)
"RTN","DGPFHLT4",20,0)
 K ^TMP("HLA",$J)
"RTN","DGPFHLT4",21,0)
 Q
"RTN","DGPFHLT4",22,0)
 ;
"RTN","DGPFHLT4",23,0)
MSA() ; create MSA segment
"RTN","DGPFHLT4",24,0)
 N SEG
"RTN","DGPFHLT4",25,0)
 S $P(SEG,HLFS)=$S($G(DGMERR)="":"AA",1:"AE")                ; field 1
"RTN","DGPFHLT4",26,0)
 S $P(SEG,HLFS,2)=$G(MSGID)                                  ; field 2
"RTN","DGPFHLT4",27,0)
 I $G(DGMERR)'="" S $P(SEG,HLFS,3)=$$ENCHL7^DGPFHLUT(DGMERR) ; field 3
"RTN","DGPFHLT4",28,0)
 S SEG="MSA"_HLFS_SEG
"RTN","DGPFHLT4",29,0)
 Q SEG
"RTN","DGPFHLT4",30,0)
 ;
"RTN","DGPFHLT4",31,0)
SAVESEG(SEGCNT,SEG) ; save created segment in ^TMP global
"RTN","DGPFHLT4",32,0)
 ; SEGCNT - current segment count
"RTN","DGPFHLT4",33,0)
 ; SEG - segment to save
"RTN","DGPFHLT4",34,0)
 ;
"RTN","DGPFHLT4",35,0)
 S SEGCNT=SEGCNT+1
"RTN","DGPFHLT4",36,0)
 S ^TMP("HLA",$J,SEGCNT)=SEG
"RTN","DGPFHLT4",37,0)
 Q SEGCNT
"RTN","DGPFHLTM")
0^30^B17001676^n/a
"RTN","DGPFHLTM",1,0)
DGPFHLTM ;SHRPE/YMG - PRF HL7 QBP/RSP PROCESSING ; 05/02/18
"RTN","DGPFHLTM",2,0)
 ;;5.3;Registration;**951**;Aug 13, 1993;Build 135
"RTN","DGPFHLTM",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPFHLTM",4,0)
 ;
"RTN","DGPFHLTM",5,0)
 ; This routine contains functions for sending Mailman messages related to PRF flag transfer requests.
"RTN","DGPFHLTM",6,0)
 ;
"RTN","DGPFHLTM",7,0)
 Q
"RTN","DGPFHLTM",8,0)
 ;
"RTN","DGPFHLTM",9,0)
TREQMSG(DATA,DGPFA,TYPE) ; sends notification about PRF flag ownership transfer request
"RTN","DGPFHLTM",10,0)
 ; DATA - Array of values to include in the message (see tag EN^DGPFHLT1)
"RTN","DGPFHLTM",11,0)
 ; DGPFA - PRF assignment array
"RTN","DGPFHLTM",12,0)
 ; TYPE - 1 = notification about received request, 2 = notification about received response
"RTN","DGPFHLTM",13,0)
 ;
"RTN","DGPFHLTM",14,0)
 N DGMAX,MSGTXT,LNCNT,MGRP,RESLT,Z
"RTN","DGPFHLTM",15,0)
 S MGRP="DGPF PRF TRANSFER REQUESTS" ; PRF transfer requests mail group
"RTN","DGPFHLTM",16,0)
 S DGMAX=78 ; Max. line length
"RTN","DGPFHLTM",17,0)
 ;
"RTN","DGPFHLTM",18,0)
 D ADDLINE^DGPFBGR("",0,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",19,0)
 D ADDLINE^DGPFBGR($$CJ^XLFSTR("* * * *  PRF OWNERSHIP TRANSFER REQUEST NOTIFICATION  * * * *",78," "),0,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",20,0)
 D ADDLINE^DGPFBGR("",0,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",21,0)
 D ADDLINE^DGPFBGR("The following PRF ownership transfer "_$S(TYPE=1:"request",1:"response")_" has been received:",0,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",22,0)
 D ADDLINE^DGPFBGR("",0,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",23,0)
 I TYPE=1 D ADDLINE^DGPFBGR($$LJ^XLFSTR("Requesting facility: ",22," ")_$G(DATA("SFNAME")),5,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",24,0)
 D ADDLINE^DGPFBGR($$LJ^XLFSTR("Requester name: ",22," ")_$G(DATA("REQBY")),5,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",25,0)
 D ADDLINE^DGPFBGR($$LJ^XLFSTR("Request date/time: ",22," ")_$$FMTE^XLFDT($G(DATA("REQDTM")),"1S"),5,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",26,0)
 D ADDLINE^DGPFBGR($$LJ^XLFSTR("Request reason: ",22," ")_$G(DATA("REQCMT")),5,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",27,0)
 D ADDLINE^DGPFBGR($$LJ^XLFSTR("PRF flag: ",22," ")_$P($G(DGPFA("FLAG")),U,2),5,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",28,0)
 D ADDLINE^DGPFBGR($$LJ^XLFSTR("Patient name: ",22," ")_$P($G(DGPFA("DFN")),U,2),5,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",29,0)
 I TYPE=2 D
"RTN","DGPFHLTM",30,0)
 .D ADDLINE^DGPFBGR($$LJ^XLFSTR("Reviewer name: ",22," ")_$G(DATA("REVBY")),5,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",31,0)
 .D ADDLINE^DGPFBGR($$LJ^XLFSTR("Review date/time: ",22," ")_$$FMTE^XLFDT($G(DATA("REVDTM")),"1S"),5,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",32,0)
 .D ADDLINE^DGPFBGR($$LJ^XLFSTR("Review reason: ",22," ")_$G(DATA("REVCMT")),5,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",33,0)
 .S Z=$G(DATA("REVRES")),RESLT=$S(Z="A":"Request approved",Z="D":"Request rejected",1:"Unknown")
"RTN","DGPFHLTM",34,0)
 .D ADDLINE^DGPFBGR($$LJ^XLFSTR("Review result: ",22," ")_RESLT,5,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",35,0)
 .Q
"RTN","DGPFHLTM",36,0)
 D ADDLINE^DGPFBGR($$REPEAT^XLFSTR("-",DGMAX),0,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",37,0)
 ;
"RTN","DGPFHLTM",38,0)
 D SEND(MGRP,"PRF ownership transfer request notification","MSGTXT(")
"RTN","DGPFHLTM",39,0)
 Q
"RTN","DGPFHLTM",40,0)
 ;
"RTN","DGPFHLTM",41,0)
TERRMSG(MSGID,ERTXT) ; sends notification about an error that occurred in PRF flag ownership transfer request process
"RTN","DGPFHLTM",42,0)
 ; MSGID - HL7 message Id
"RTN","DGPFHLTM",43,0)
 ; ERTXT - array containing error text, ERTXT(line #) contains each line
"RTN","DGPFHLTM",44,0)
 ;
"RTN","DGPFHLTM",45,0)
 N DGMAX,MSGTXT,ERLN,LNCNT,MGRP
"RTN","DGPFHLTM",46,0)
 S MGRP="DGPF HL7 TRANSMISSION ERRORS"
"RTN","DGPFHLTM",47,0)
 S DGMAX=78 ; Max. line length
"RTN","DGPFHLTM",48,0)
 ;
"RTN","DGPFHLTM",49,0)
 D ADDLINE^DGPFBGR("",0,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",50,0)
 D ADDLINE^DGPFBGR($$CJ^XLFSTR("* * * *  PRF OWNERSHIP TRANSFER REQUEST ERROR  * * * *",78," "),0,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",51,0)
 D ADDLINE^DGPFBGR("",0,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",52,0)
 D ADDLINE^DGPFBGR("The following error occurred during PRF ownership transfer request:",0,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",53,0)
 D ADDLINE^DGPFBGR("",0,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",54,0)
 S ERLN="" F  S ERLN=$O(ERTXT(ERLN)) Q:ERLN=""  D ADDLINE^DGPFBGR($G(ERTXT(ERLN)),0,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",55,0)
 I $G(MSGID) D
"RTN","DGPFHLTM",56,0)
 .D ADDLINE^DGPFBGR("",0,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",57,0)
 .D ADDLINE^DGPFBGR("HL7 message Id: "_MSGID,5,DGMAX,.LNCNT,"MSGTXT")
"RTN","DGPFHLTM",58,0)
 .Q
"RTN","DGPFHLTM",59,0)
 ;
"RTN","DGPFHLTM",60,0)
 D SEND(MGRP,"PRF ownership transfer request error","MSGTXT(")
"RTN","DGPFHLTM",61,0)
 Q
"RTN","DGPFHLTM",62,0)
 ;
"RTN","DGPFHLTM",63,0)
SEND(MGRP,SUBJ,MSGARY) ;send the MailMan message
"RTN","DGPFHLTM",64,0)
 ; MGRP - mail group name
"RTN","DGPFHLTM",65,0)
 ; MSGARY - name of message text array in open format
"RTN","DGPFHLTM",66,0)
 ; SUBJ - Subject line
"RTN","DGPFHLTM",67,0)
 ;
"RTN","DGPFHLTM",68,0)
 N DIFROM  ;protect FM package
"RTN","DGPFHLTM",69,0)
 N XMDUZ   ;sender
"RTN","DGPFHLTM",70,0)
 N XMSUB   ;message subject
"RTN","DGPFHLTM",71,0)
 N XMTEXT  ;name of message text array in open format
"RTN","DGPFHLTM",72,0)
 N XMY     ;recipient array
"RTN","DGPFHLTM",73,0)
 N XMZ     ;returned message number
"RTN","DGPFHLTM",74,0)
 N XMMG    ;error
"RTN","DGPFHLTM",75,0)
 ;
"RTN","DGPFHLTM",76,0)
 I MGRP="" Q
"RTN","DGPFHLTM",77,0)
 S XMDUZ="DGPRF,INTERFACE"
"RTN","DGPFHLTM",78,0)
 S XMSUB=$G(SUBJ)
"RTN","DGPFHLTM",79,0)
 S XMTEXT=MSGARY
"RTN","DGPFHLTM",80,0)
 S XMY("G."_MGRP)=""
"RTN","DGPFHLTM",81,0)
 D ^XMD
"RTN","DGPFHLTM",82,0)
 Q
"RTN","DGPFHLU")
0^23^B54583242^B34815804
"RTN","DGPFHLU",1,0)
DGPFHLU ;ALB/RPM - PRF HL7 ORU/ACK PROCESSING ; 6/21/06 10:27am
"RTN","DGPFHLU",2,0)
 ;;5.3;Registration;**425,718,650,951**;Aug 13, 1993;Build 135
"RTN","DGPFHLU",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPFHLU",4,0)
 ;
"RTN","DGPFHLU",5,0)
BLDORU(DGPFA,DGHARR,DGHL,DGROOT) ;Build ORU~R01 Message/Segments
"RTN","DGPFHLU",6,0)
 ;
"RTN","DGPFHLU",7,0)
 ;  Input:
"RTN","DGPFHLU",8,0)
 ;      DGPFA - (required) Assignment data array
"RTN","DGPFHLU",9,0)
 ;     DGHARR - (required) Assignment history IENs array
"RTN","DGPFHLU",10,0)
 ;       DGHL - (required) HL7 Kernel array passed by reference
"RTN","DGPFHLU",11,0)
 ;     DGROOT - (required) Closed root segment storage array name
"RTN","DGPFHLU",12,0)
 ;
"RTN","DGPFHLU",13,0)
 ;  Output:
"RTN","DGPFHLU",14,0)
 ;   Function Value - IEN of last assignment history included in
"RTN","DGPFHLU",15,0)
 ;                    message segments, 0 on failure
"RTN","DGPFHLU",16,0)
 ;           DGROOT - array of HL7 segments
"RTN","DGPFHLU",17,0)
 ;
"RTN","DGPFHLU",18,0)
 N DGADT     ;assignment date
"RTN","DGPFHLU",19,0)
 N DGHIEN    ;function value
"RTN","DGPFHLU",20,0)
 N DGLDT     ;last assignment date
"RTN","DGPFHLU",21,0)
 N DGPFAH    ;assignment history data array
"RTN","DGPFHLU",22,0)
 N DGSEG     ;segment counter
"RTN","DGPFHLU",23,0)
 N DGSEGSTR  ;formatted segment string
"RTN","DGPFHLU",24,0)
 N DGSET     ;set id
"RTN","DGPFHLU",25,0)
 N DGTROOT   ;text root
"RTN","DGPFHLU",26,0)
 N LASTH     ;last assignment history entry
"RTN","DGPFHLU",27,0)
 N DBRSSTR,Z
"RTN","DGPFHLU",28,0)
 ;
"RTN","DGPFHLU",29,0)
 S DGHIEN=0
"RTN","DGPFHLU",30,0)
 S DGSEG=0
"RTN","DGPFHLU",31,0)
 ;
"RTN","DGPFHLU",32,0)
 I $D(DGPFA),$D(DGHARR),$G(DGROOT)]"" D
"RTN","DGPFHLU",33,0)
 .; build PID
"RTN","DGPFHLU",34,0)
 .S DGSEGSTR=$$EN^VAFHLPID(+DGPFA("DFN"),"1,2,3,5,7,8,19",1,1) Q:DGSEGSTR=""
"RTN","DGPFHLU",35,0)
 .S DGSEG=DGSEG+1,@DGROOT@(DGSEG)=DGSEGSTR
"RTN","DGPFHLU",36,0)
 .; build OBR
"RTN","DGPFHLU",37,0)
 .S DGLDT=+$O(DGHARR(""),-1)  ; get last assignment date
"RTN","DGPFHLU",38,0)
 .Q:'$$GETHIST^DGPFAAH(DGHARR(DGLDT),.DGPFAH,1)  ; load asgn hx array
"RTN","DGPFHLU",39,0)
 .M LASTH=DGPFAH
"RTN","DGPFHLU",40,0)
 .S DGSEGSTR=$$OBR^DGPFHLU1(1,.DGPFA,.DGPFAH,"1,4,7,20,21",.DGHL) Q:DGSEGSTR=""
"RTN","DGPFHLU",41,0)
 .S DGSEG=DGSEG+1,@DGROOT@(DGSEG)=DGSEGSTR
"RTN","DGPFHLU",42,0)
 .; start OBX segments
"RTN","DGPFHLU",43,0)
 .S DGSET=0
"RTN","DGPFHLU",44,0)
 .; build narrative OBX segments
"RTN","DGPFHLU",45,0)
 .S DGTROOT="DGPFA(""NARR"")"
"RTN","DGPFHLU",46,0)
 .Q:'$$BLDOBXTX^DGPFHLU2(DGROOT,DGTROOT,"N",.DGPFAH,.DGHL,.DGSEG,.DGSET)
"RTN","DGPFHLU",47,0)
 .; for each history build status & comment OBX segments
"RTN","DGPFHLU",48,0)
 .S DGADT=0 F  S DGADT=$O(DGHARR(DGADT)) Q:'DGADT  D  Q:'DGHIEN
"RTN","DGPFHLU",49,0)
 ..N DGPFAH
"RTN","DGPFHLU",50,0)
 ..S DGHIEN=0
"RTN","DGPFHLU",51,0)
 ..Q:'$$GETHIST^DGPFAAH(DGHARR(DGADT),.DGPFAH)
"RTN","DGPFHLU",52,0)
 ..; build status OBX segment
"RTN","DGPFHLU",53,0)
 ..S DGSET=DGSET+1
"RTN","DGPFHLU",54,0)
 ..S DGSEGSTR=$$OBX^DGPFHLU2(DGSET,"S","",$P($G(DGPFAH("ACTION")),U,2),.DGPFAH,"1,2,3,5,11,14",.DGHL)
"RTN","DGPFHLU",55,0)
 ..Q:DGSEGSTR=""
"RTN","DGPFHLU",56,0)
 ..S DGSEG=DGSEG+1,@DGROOT@(DGSEG)=DGSEGSTR
"RTN","DGPFHLU",57,0)
 ..; build review comment OBX segments
"RTN","DGPFHLU",58,0)
 ..S DGTROOT="DGPFAH(""COMMENT"")"
"RTN","DGPFHLU",59,0)
 ..Q:'$$BLDOBXTX^DGPFHLU2(DGROOT,DGTROOT,"C",.DGPFAH,.DGHL,.DGSEG,.DGSET)
"RTN","DGPFHLU",60,0)
 ..; success
"RTN","DGPFHLU",61,0)
 ..S DGHIEN=DGHARR(DGADT)
"RTN","DGPFHLU",62,0)
 ..Q
"RTN","DGPFHLU",63,0)
 .; build DBRS OBX segments
"RTN","DGPFHLU",64,0)
 .; build only if action is not "INACTIVATE"
"RTN","DGPFHLU",65,0)
 .I +LASTH("ACTION")'=3 S Z="" F  S Z=$O(LASTH("DBRS",Z)) Q:Z=""  D  Q:'DGHIEN
"RTN","DGPFHLU",66,0)
 ..S DBRSSTR=$G(LASTH("DBRS",Z))
"RTN","DGPFHLU",67,0)
 ..; don't send unchanged DBRS entries if action is "DBRS#/OTHER FIELD UPDATE"
"RTN","DGPFHLU",68,0)
 ..I $P($P(DBRSSTR,U,4),";")="N",+LASTH("ACTION")=6 Q
"RTN","DGPFHLU",69,0)
 ..S DGSET=DGSET+1
"RTN","DGPFHLU",70,0)
 ..S DGSEGSTR=$$OBX^DGPFHLU2(DGSET,"D","",DBRSSTR,.LASTH,"1,2,3,5,11,14,23",.DGHL)
"RTN","DGPFHLU",71,0)
 ..I DGSEGSTR="" S DGHIEN=0 Q
"RTN","DGPFHLU",72,0)
 ..S DGSEG=DGSEG+1,@DGROOT@(DGSEG)=DGSEGSTR
"RTN","DGPFHLU",73,0)
 ..Q
"RTN","DGPFHLU",74,0)
 .Q
"RTN","DGPFHLU",75,0)
 ;
"RTN","DGPFHLU",76,0)
 Q DGHIEN
"RTN","DGPFHLU",77,0)
 ;
"RTN","DGPFHLU",78,0)
PARSORU(DGWRK,DGHL,DGROOT,DGPFERR) ;Parse ORU~R01 Message/Segments
"RTN","DGPFHLU",79,0)
 ;
"RTN","DGPFHLU",80,0)
 ;  Input:
"RTN","DGPFHLU",81,0)
 ;     DGWRK - Closed root work global reference
"RTN","DGPFHLU",82,0)
 ;      DGHL - HL7 environment array
"RTN","DGPFHLU",83,0)
 ;    DGROOT - Closed root ORU results array name
"RTN","DGPFHLU",84,0)
 ;
"RTN","DGPFHLU",85,0)
 ;  Output:
"RTN","DGPFHLU",86,0)
 ;    DGROOT - ORU results array
"RTN","DGPFHLU",87,0)
 ;     Subscript                Field name            Fld# File#
"RTN","DGPFHLU",88,0)
 ;     -----------------------  --------------------  ---- -----
"RTN","DGPFHLU",89,0)
 ;     "SNDFAC"                 N/A                   N/A  N/A
"RTN","DGPFHLU",90,0)
 ;     "DFN"                    PATIENT NAME          .01  26.13
"RTN","DGPFHLU",91,0)
 ;     "FLAG"                   FLAG NAME             .02  26.13
"RTN","DGPFHLU",92,0)
 ;     "OWNER"                  OWNER SITE            .04  26.13
"RTN","DGPFHLU",93,0)
 ;     "ORIGSITE"               ORIGINATING SITE      .05  26.13 
"RTN","DGPFHLU",94,0)
 ;     "NARR",line              ASSIGNMENT NARRATIVE   1   26.13
"RTN","DGPFHLU",95,0)
 ;     assigndt,"ACTION"        ACTION                .03  26.13
"RTN","DGPFHLU",96,0)
 ;     assigndt,"COMMENT",line  HISTORY COMMENTS       1   26.14
"RTN","DGPFHLU",97,0)
 ;   DGPFERR - Undefined on success, ERR segment data array on failure
"RTN","DGPFHLU",98,0)
 ;             Format:  DGPFERR(seg_id,sequence,fld_pos)=error_code
"RTN","DGPFHLU",99,0)
 ;
"RTN","DGPFHLU",100,0)
 N DGFS      ;field separator
"RTN","DGPFHLU",101,0)
 N DGCS      ;component separator
"RTN","DGPFHLU",102,0)
 N DGRS      ;repetition separator
"RTN","DGPFHLU",103,0)
 N DGCURLIN  ;current segment line
"RTN","DGPFHLU",104,0)
 N DGSEG     ;segment field data array
"RTN","DGPFHLU",105,0)
 N DGERR     ;error processing array
"RTN","DGPFHLU",106,0)
 ;
"RTN","DGPFHLU",107,0)
 S DGFS=DGHL("FS")
"RTN","DGPFHLU",108,0)
 S DGCS=$E(DGHL("ECH"),1)
"RTN","DGPFHLU",109,0)
 S DGRS=$E(DGHL("ECH"),2)
"RTN","DGPFHLU",110,0)
 S HLECH=DGHL("ECH"),HLFS=DGHL("FS")
"RTN","DGPFHLU",111,0)
 S DGCURLIN=0
"RTN","DGPFHLU",112,0)
 ;
"RTN","DGPFHLU",113,0)
 ;loop through message segments and retrieve field data
"RTN","DGPFHLU",114,0)
 F  D  Q:'DGCURLIN
"RTN","DGPFHLU",115,0)
 . N DGSEG
"RTN","DGPFHLU",116,0)
 . S DGCURLIN=$$NXTSEG^DGPFHLUT(DGWRK,DGCURLIN,DGFS,.DGSEG)
"RTN","DGPFHLU",117,0)
 . Q:'DGCURLIN
"RTN","DGPFHLU",118,0)
 . D @(DGSEG("TYPE")_"(.DGSEG,DGCS,DGRS,DGROOT,.DGPFERR)")
"RTN","DGPFHLU",119,0)
 ;
"RTN","DGPFHLU",120,0)
MSH(DGSEG,DGCS,DGRS,DGORU,DGERR) ;
"RTN","DGPFHLU",121,0)
 ;
"RTN","DGPFHLU",122,0)
 ;  Input:
"RTN","DGPFHLU",123,0)
 ;    DGSEG - MSH segment field array
"RTN","DGPFHLU",124,0)
 ;     DGCS - HL7 component separator
"RTN","DGPFHLU",125,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGPFHLU",126,0)
 ;    DGORU - Closed root ORU results array name
"RTN","DGPFHLU",127,0)
 ;
"RTN","DGPFHLU",128,0)
 ;  Output:
"RTN","DGPFHLU",129,0)
 ;    DGORU - ORU results array
"RTN","DGPFHLU",130,0)
 ;            Subscript
"RTN","DGPFHLU",131,0)
 ;            ---------
"RTN","DGPFHLU",132,0)
 ;            "SNDFAC"
"RTN","DGPFHLU",133,0)
 ;    DGERR - undefined on success, error array on failure
"RTN","DGPFHLU",134,0)
 ;            format: DGERR(seg_id,sequence,fld_pos)=error code
"RTN","DGPFHLU",135,0)
 ;
"RTN","DGPFHLU",136,0)
 S @DGORU@("SNDFAC")=$$IEN^XUAF4($P(DGSEG(4),DGCS,1))
"RTN","DGPFHLU",137,0)
 Q
"RTN","DGPFHLU",138,0)
 ;
"RTN","DGPFHLU",139,0)
PID(DGSEG,DGCS,DGRS,DGORU,DGERR) ;
"RTN","DGPFHLU",140,0)
 ;
"RTN","DGPFHLU",141,0)
 ;  Input:
"RTN","DGPFHLU",142,0)
 ;    DGSEG - PID segment field array
"RTN","DGPFHLU",143,0)
 ;     DGCS - HL7 component separator
"RTN","DGPFHLU",144,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGPFHLU",145,0)
 ;    DGORU - Closed root ORU results array name
"RTN","DGPFHLU",146,0)
 ;
"RTN","DGPFHLU",147,0)
 ;  Output:
"RTN","DGPFHLU",148,0)
 ;    DGORU - ORU results array
"RTN","DGPFHLU",149,0)
 ;            Subscript
"RTN","DGPFHLU",150,0)
 ;            ---------
"RTN","DGPFHLU",151,0)
 ;            "DFN"
"RTN","DGPFHLU",152,0)
 ;    DGERR - undefined on success, error array on failure
"RTN","DGPFHLU",153,0)
 ;            format: DGERR(seg_id,sequence,fld_pos)=error code
"RTN","DGPFHLU",154,0)
 ;
"RTN","DGPFHLU",155,0)
 N DGARR
"RTN","DGPFHLU",156,0)
 N DGDFNERR
"RTN","DGPFHLU",157,0)
 N DGICN
"RTN","DGPFHLU",158,0)
 ;
"RTN","DGPFHLU",159,0)
 S DGICN=+$P(DGSEG(3),DGCS,1)
"RTN","DGPFHLU",160,0)
 S DGARR("DFN")=$$GETDFN^DGPFUT2(DGICN,"DGDFNERR")
"RTN","DGPFHLU",161,0)
 I 'DGARR("DFN"),$G(DGDFNERR("DIERR",1))]"" D
"RTN","DGPFHLU",162,0)
 . S DGERR("PID",DGSEG(1),3)=DGDFNERR("DIERR",1)  ;no match
"RTN","DGPFHLU",163,0)
 ;
"RTN","DGPFHLU",164,0)
 ;load results array
"RTN","DGPFHLU",165,0)
 S @DGORU@("DFN")=DGARR("DFN")
"RTN","DGPFHLU",166,0)
 Q
"RTN","DGPFHLU",167,0)
 ;
"RTN","DGPFHLU",168,0)
OBR(DGSEG,DGCS,DGRS,DGORU,DGERR) ;
"RTN","DGPFHLU",169,0)
 ;
"RTN","DGPFHLU",170,0)
 ;  Input:
"RTN","DGPFHLU",171,0)
 ;    DGSEG - OBR segment field array
"RTN","DGPFHLU",172,0)
 ;     DGCS - HL7 component separator
"RTN","DGPFHLU",173,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGPFHLU",174,0)
 ;    DGORU - Closed root ORU results array name
"RTN","DGPFHLU",175,0)
 ;
"RTN","DGPFHLU",176,0)
 ;  Output:
"RTN","DGPFHLU",177,0)
 ;    DGORU - ORU results array
"RTN","DGPFHLU",178,0)
 ;            Subscript
"RTN","DGPFHLU",179,0)
 ;            ----------------
"RTN","DGPFHLU",180,0)
 ;            "FLAG"
"RTN","DGPFHLU",181,0)
 ;            "OWNER"
"RTN","DGPFHLU",182,0)
 ;            "ORIGSITE"
"RTN","DGPFHLU",183,0)
 ;    DGERR - undefined on success, error array on failure
"RTN","DGPFHLU",184,0)
 ;            format: DGERR(seg_id,sequence,fld_pos)=error code
"RTN","DGPFHLU",185,0)
 ;
"RTN","DGPFHLU",186,0)
 N DGARR
"RTN","DGPFHLU",187,0)
 N PRFFLG   ; ien of received PRF flag in file 26.15
"RTN","DGPFHLU",188,0)
 ;
"RTN","DGPFHLU",189,0)
 S PRFFLG=+$$FIND1^DIC(26.15,,"X",$$DECHL7^DGPFHLUT($P($G(DGSEG(4)),DGCS,2)))
"RTN","DGPFHLU",190,0)
 S DGARR("FLAG")=PRFFLG_";DGPF(26.15,"
"RTN","DGPFHLU",191,0)
 I '$$TESTVAL^DGPFUT(26.13,.02,DGARR("FLAG")) D
"RTN","DGPFHLU",192,0)
 .S DGERR("OBR",DGSEG(1),4)=261111   ;invalid flag
"RTN","DGPFHLU",193,0)
 .Q
"RTN","DGPFHLU",194,0)
 ;
"RTN","DGPFHLU",195,0)
 S DGARR("OWNER")=$$IEN^XUAF4(DGSEG(20))
"RTN","DGPFHLU",196,0)
 I (DGARR("OWNER")="")!('$$TESTVAL^DGPFUT(26.13,.04,DGARR("OWNER"))) D 
"RTN","DGPFHLU",197,0)
 .S DGERR("OBR",DGSEG(1),20)=261126  ;invalid owner site
"RTN","DGPFHLU",198,0)
 .Q
"RTN","DGPFHLU",199,0)
 ;
"RTN","DGPFHLU",200,0)
 S DGARR("ORIGSITE")=$$IEN^XUAF4($G(DGSEG(21)))
"RTN","DGPFHLU",201,0)
 I DGARR("ORIGSITE")="" S DGARR("ORIGSITE")=@DGORU@("SNDFAC")
"RTN","DGPFHLU",202,0)
 I (DGARR("ORIGSITE")="")!('$$TESTVAL^DGPFUT(26.13,.05,DGARR("ORIGSITE"))) D
"RTN","DGPFHLU",203,0)
 .S DGERR("OBR",DGSEG(1),21)=261125  ;invalid originating site
"RTN","DGPFHLU",204,0)
 .Q
"RTN","DGPFHLU",205,0)
 ;
"RTN","DGPFHLU",206,0)
 ;load results array
"RTN","DGPFHLU",207,0)
 M @DGORU=DGARR
"RTN","DGPFHLU",208,0)
 Q
"RTN","DGPFHLU",209,0)
 ;
"RTN","DGPFHLU",210,0)
OBX(DGSEG,DGCS,DGRS,DGORU,DGERR) ;
"RTN","DGPFHLU",211,0)
 ;
"RTN","DGPFHLU",212,0)
 ;  Input:
"RTN","DGPFHLU",213,0)
 ;    DGSEG - OBX segment field array
"RTN","DGPFHLU",214,0)
 ;     DGCS - HL7 component separator
"RTN","DGPFHLU",215,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGPFHLU",216,0)
 ;    DGORU - Closed root ORU results array name
"RTN","DGPFHLU",217,0)
 ;
"RTN","DGPFHLU",218,0)
 ;  Output:
"RTN","DGPFHLU",219,0)
 ;    DGORU - ORU results array
"RTN","DGPFHLU",220,0)
 ;            Subscript
"RTN","DGPFHLU",221,0)
 ;            -----------------------
"RTN","DGPFHLU",222,0)
 ;            "NARR",line
"RTN","DGPFHLU",223,0)
 ;            assigndt,"ACTION"
"RTN","DGPFHLU",224,0)
 ;            assigndt,"COMMENT",line
"RTN","DGPFHLU",225,0)
 ;   DGERR - undefined on success, error array on failure
"RTN","DGPFHLU",226,0)
 ;           format: DGERR(seg_id,sequence,fld_pos)=error code
"RTN","DGPFHLU",227,0)
 ;
"RTN","DGPFHLU",228,0)
 N DGADT    ;assignment date
"RTN","DGPFHLU",229,0)
 N DGI
"RTN","DGPFHLU",230,0)
 N DGLINE   ;word processing line count
"RTN","DGPFHLU",231,0)
 N DGRSLT,DBRSACT,DBRSDT,DBRSNUM,DBRSOTH,DBRSSITE
"RTN","DGPFHLU",232,0)
 ;
"RTN","DGPFHLU",233,0)
 ; Narrative Observation Identifier
"RTN","DGPFHLU",234,0)
 I $P(DGSEG(3),DGCS,1)="N" D
"RTN","DGPFHLU",235,0)
 .S DGLINE=$O(@DGORU@("NARR",""),-1)
"RTN","DGPFHLU",236,0)
 .F DGI=1:1:$L(DGSEG(5),DGRS) S @DGORU@("NARR",DGLINE+DGI,0)=$$DECHL7^DGPFHLUT($P(DGSEG(5),DGRS,DGI))
"RTN","DGPFHLU",237,0)
 .Q
"RTN","DGPFHLU",238,0)
 ; Status Observation Identifier
"RTN","DGPFHLU",239,0)
 I $P(DGSEG(3),DGCS,1)="S" D
"RTN","DGPFHLU",240,0)
 .S DGADT=$$HL7TFM^XLFDT(DGSEG(14),"L") Q:+DGADT'>0
"RTN","DGPFHLU",241,0)
 .D CHK^DIE(26.14,.03,,$$DECHL7^DGPFHLUT(DGSEG(5)),.DGRSLT)
"RTN","DGPFHLU",242,0)
 .S @DGORU@(DGADT,"ACTION")=+DGRSLT
"RTN","DGPFHLU",243,0)
 .Q
"RTN","DGPFHLU",244,0)
 ; Comment Observation Identifier
"RTN","DGPFHLU",245,0)
 I $P(DGSEG(3),DGCS,1)="C" D
"RTN","DGPFHLU",246,0)
 .S DGADT=$$HL7TFM^XLFDT(DGSEG(14),"L") Q:+DGADT'>0
"RTN","DGPFHLU",247,0)
 .S DGLINE=$O(@DGORU@(DGADT,"COMMENT",""),-1)
"RTN","DGPFHLU",248,0)
 .F DGI=1:1:$L(DGSEG(5),DGRS) S @DGORU@(DGADT,"COMMENT",DGLINE+DGI,0)=$$DECHL7^DGPFHLUT($P(DGSEG(5),DGRS,DGI))
"RTN","DGPFHLU",249,0)
 .S @DGORU@(DGADT,"ORIGFAC")=$$IEN^XUAF4($P($G(DGSEG(23)),DGCS,3))
"RTN","DGPFHLU",250,0)
 .Q
"RTN","DGPFHLU",251,0)
 ; DBRS Observation Identifier
"RTN","DGPFHLU",252,0)
 I $P(DGSEG(3),DGCS,1)="D" D
"RTN","DGPFHLU",253,0)
 .S DBRSACT=$S($P(DGSEG(3),DGCS,2)="DBRS-Delete":"D",1:"U")      ; "U" = add/update, "D" = delete
"RTN","DGPFHLU",254,0)
 .S DBRSNUM=$$DECHL7^DGPFHLUT($P(DGSEG(5),DGRS,1)) Q:DBRSNUM=""  ; DBRS #
"RTN","DGPFHLU",255,0)
 .S DBRSOTH=$$DECHL7^DGPFHLUT($P(DGSEG(5),DGRS,2))               ; DBRS OTHER
"RTN","DGPFHLU",256,0)
 .S DBRSDT=+$$HL7TFM^XLFDT(DGSEG(14),"L")                        ; DBRS date
"RTN","DGPFHLU",257,0)
 .S DBRSSITE=$$IEN^XUAF4($P($G(DGSEG(23)),DGCS,3))              ; DBRS creating site
"RTN","DGPFHLU",258,0)
 .S @DGORU@("DBRS",DBRSNUM,"ACTION")=DBRSACT
"RTN","DGPFHLU",259,0)
 .S @DGORU@("DBRS",DBRSNUM,"OTHER")=DBRSOTH
"RTN","DGPFHLU",260,0)
 .S @DGORU@("DBRS",DBRSNUM,"DATE")=DBRSDT
"RTN","DGPFHLU",261,0)
 .S @DGORU@("DBRS",DBRSNUM,"SITE")=$S(DBRSSITE>0:DBRSSITE,1:"")
"RTN","DGPFHLU",262,0)
 .Q
"RTN","DGPFHLU",263,0)
 Q
"RTN","DGPFHLU1")
0^17^B6628832^B28767858
"RTN","DGPFHLU1",1,0)
DGPFHLU1 ;ALB/RPM - PRF HL7 BUILD OBR SEGMENT ; 2/18/03
"RTN","DGPFHLU1",2,0)
 ;;5.3;Registration;**425,951**;Aug 13, 1993;Build 135
"RTN","DGPFHLU1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPFHLU1",4,0)
 ;
"RTN","DGPFHLU1",5,0)
 Q
"RTN","DGPFHLU1",6,0)
 ;
"RTN","DGPFHLU1",7,0)
OBR(DGSET,DGPFA,DGPFAH,DGFLD,DGHL) ;OBR Segment API
"RTN","DGPFHLU1",8,0)
 ;This function wraps the data retrieval and segment creation APIs and
"RTN","DGPFHLU1",9,0)
 ;returns a formatted OBR segment.
"RTN","DGPFHLU1",10,0)
 ;
"RTN","DGPFHLU1",11,0)
 ;  Input:
"RTN","DGPFHLU1",12,0)
 ;     DGSET - (required) OBR segment Set ID
"RTN","DGPFHLU1",13,0)
 ;     DGPFA - (required) Assignment data array
"RTN","DGPFHLU1",14,0)
 ;    DGPFAH - (required) Assignment history data array
"RTN","DGPFHLU1",15,0)
 ;     DGFLD - (optional) List of comma-separated fields (sequence #'s)
"RTN","DGPFHLU1",16,0)
 ;             to include.  Defaults to all required fields (4).
"RTN","DGPFHLU1",17,0)
 ;      DGHL - HL7 environment array
"RTN","DGPFHLU1",18,0)
 ;
"RTN","DGPFHLU1",19,0)
 ;  Output:
"RTN","DGPFHLU1",20,0)
 ;   Function Value - OBR segment on success, "" on failure
"RTN","DGPFHLU1",21,0)
 ;
"RTN","DGPFHLU1",22,0)
 N DGOBR
"RTN","DGPFHLU1",23,0)
 N DGVAL
"RTN","DGPFHLU1",24,0)
 ;
"RTN","DGPFHLU1",25,0)
 S HLECH=DGHL("ECH"),HLFS=DGHL("FS")
"RTN","DGPFHLU1",26,0)
 S DGOBR=""
"RTN","DGPFHLU1",27,0)
 I $G(DGSET)>0,$D(DGPFA),$D(DGPFAH) D
"RTN","DGPFHLU1",28,0)
 . S DGFLD=$$CKSTR^DGPFHLUT("4",DGFLD)  ;validate the field string
"RTN","DGPFHLU1",29,0)
 . S DGFLD=","_DGFLD_","
"RTN","DGPFHLU1",30,0)
 . I $$OBRVAL(DGFLD,DGSET,.DGPFA,.DGPFAH,.DGVAL) D
"RTN","DGPFHLU1",31,0)
 . . S DGOBR=$$BLDSEG^DGPFHLUT("OBR",.DGVAL,.DGHL)
"RTN","DGPFHLU1",32,0)
 Q DGOBR
"RTN","DGPFHLU1",33,0)
 ;
"RTN","DGPFHLU1",34,0)
OBRVAL(DGFLD,DGSET,DGPFA,DGPFAH,DGVAL) ;build OBR value array
"RTN","DGPFHLU1",35,0)
 ;
"RTN","DGPFHLU1",36,0)
 ;  Input:
"RTN","DGPFHLU1",37,0)
 ;     DGFLD - (required) Fields string
"RTN","DGPFHLU1",38,0)
 ;     DGSET - (required) OBR segment Set ID
"RTN","DGPFHLU1",39,0)
 ;     DGPFA - (required) Assignment data array
"RTN","DGPFHLU1",40,0)
 ;    DGPFAH - (required) Assignment history data array
"RTN","DGPFHLU1",41,0)
 ;
"RTN","DGPFHLU1",42,0)
 ;  Output:
"RTN","DGPFHLU1",43,0)
 ;   Function Value - 1 on success, 0 on failure
"RTN","DGPFHLU1",44,0)
 ;            DGVAL - OBR field array [SUB1:field, SUB2:repetition,
"RTN","DGPFHLU1",45,0)
 ;                                    SUB3:component, SUB4:sub-component]
"RTN","DGPFHLU1",46,0)
 ;
"RTN","DGPFHLU1",47,0)
 N DGRSLT  ;function value
"RTN","DGPFHLU1",48,0)
 N DGADT   ;assignment date
"RTN","DGPFHLU1",49,0)
 N DGORIG  ;originating site
"RTN","DGPFHLU1",50,0)
 N DGOWN   ;assignment owner
"RTN","DGPFHLU1",51,0)
 ;
"RTN","DGPFHLU1",52,0)
 S DGRSLT=0
"RTN","DGPFHLU1",53,0)
 I $G(DGFLD)]"",+$G(DGSET)>0,+$G(DGPFA("FLAG"))>0,+$G(DGPFAH("ASSIGN"))>0 D
"RTN","DGPFHLU1",54,0)
 .; seq 1 Set ID
"RTN","DGPFHLU1",55,0)
 .I DGFLD[",1," S DGVAL(1)=DGSET
"RTN","DGPFHLU1",56,0)
 .; seq 4 Universal Service ID
"RTN","DGPFHLU1",57,0)
 .I DGFLD[",4," D   ;required field
"RTN","DGPFHLU1",58,0)
 ..S DGVAL(4,1,1)=+DGPFA("FLAG")                            ;flag ien
"RTN","DGPFHLU1",59,0)
 ..S DGVAL(4,1,2)=$$ENCHL7^DGPFHLUT($P(DGPFA("FLAG"),U,2))  ;flag name
"RTN","DGPFHLU1",60,0)
 ..S DGVAL(4,1,3)="VA085"                                 ;table name
"RTN","DGPFHLU1",61,0)
 ..Q
"RTN","DGPFHLU1",62,0)
 .; seq 7 Observation Date/Time
"RTN","DGPFHLU1",63,0)
 .I DGFLD[",7," D
"RTN","DGPFHLU1",64,0)
 ..S DGADT=$$FMTHL7^XLFDT(+$$GETADT^DGPFAAH(+DGPFAH("ASSIGN")))
"RTN","DGPFHLU1",65,0)
 ..S DGVAL(7)=$S(DGADT>0:DGADT,1:"")
"RTN","DGPFHLU1",66,0)
 ..Q
"RTN","DGPFHLU1",67,0)
 .; seq 20 Filler field 1
"RTN","DGPFHLU1",68,0)
 .I DGFLD[",20," D
"RTN","DGPFHLU1",69,0)
 ..S DGOWN=+$G(DGPFA("OWNER"))
"RTN","DGPFHLU1",70,0)
 ..S DGVAL(20)=$S(DGOWN>0:$$STA^XUAF4(DGOWN),1:"")
"RTN","DGPFHLU1",71,0)
 ..Q
"RTN","DGPFHLU1",72,0)
 .; seq 21 Filler Field 2
"RTN","DGPFHLU1",73,0)
 .I DGFLD[",21," D
"RTN","DGPFHLU1",74,0)
 ..S DGORIG=+$G(DGPFA("ORIGSITE"))
"RTN","DGPFHLU1",75,0)
 ..S DGVAL(21)=$S(DGORIG>0:$$STA^XUAF4(DGORIG),1:"")
"RTN","DGPFHLU1",76,0)
 ..Q
"RTN","DGPFHLU1",77,0)
 .S DGRSLT=1
"RTN","DGPFHLU1",78,0)
 .Q
"RTN","DGPFHLU1",79,0)
 I 'DGRSLT K DGVAL
"RTN","DGPFHLU1",80,0)
 Q DGRSLT
"RTN","DGPFHLU2")
0^18^B25225629^B22238545
"RTN","DGPFHLU2",1,0)
DGPFHLU2 ;ALB/RPM - PRF HL7 BUILD OBX SEGMENT ; 2/20/03
"RTN","DGPFHLU2",2,0)
 ;;5.3;Registration;**425,951**;Aug 13, 1993;Build 135
"RTN","DGPFHLU2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPFHLU2",4,0)
 ;
"RTN","DGPFHLU2",5,0)
 Q
"RTN","DGPFHLU2",6,0)
 ;
"RTN","DGPFHLU2",7,0)
OBX(DGSET,DGID,DGSUBID,DGVALUE,DGPFAH,DGFLD,DGHL) ;OBX Segment API
"RTN","DGPFHLU2",8,0)
 ;This function wraps the data retrieval and segment creation APIs and
"RTN","DGPFHLU2",9,0)
 ;returns a formatted OBX segment.
"RTN","DGPFHLU2",10,0)
 ;
"RTN","DGPFHLU2",11,0)
 ;  Input:
"RTN","DGPFHLU2",12,0)
 ;     DGSET - (required) OBX segment Set ID
"RTN","DGPFHLU2",13,0)
 ;      DGID - (required) Observation identifier code
"RTN","DGPFHLU2",14,0)
 ;   DGSUBID - (optional) Observation Sub-ID
"RTN","DGPFHLU2",15,0)
 ;   DGVALUE - (required) Observation value
"RTN","DGPFHLU2",16,0)
 ;    DGPFAH - (required) Assignment history data array
"RTN","DGPFHLU2",17,0)
 ;     DGFLD - (optional) List of comma-separated fields (sequence #'s)
"RTN","DGPFHLU2",18,0)
 ;             to include.  Defaults to all required fields (3,11).
"RTN","DGPFHLU2",19,0)
 ;      DGHL - HL7 environment array
"RTN","DGPFHLU2",20,0)
 ;
"RTN","DGPFHLU2",21,0)
 ;  Output:
"RTN","DGPFHLU2",22,0)
 ;   Function Value - OBX segment on success, "" on failure
"RTN","DGPFHLU2",23,0)
 ;
"RTN","DGPFHLU2",24,0)
 N DGOBX
"RTN","DGPFHLU2",25,0)
 N DGVAL
"RTN","DGPFHLU2",26,0)
 ;
"RTN","DGPFHLU2",27,0)
 S HLECH=DGHL("ECH"),HLFS=DGHL("FS")
"RTN","DGPFHLU2",28,0)
 S DGOBX=""
"RTN","DGPFHLU2",29,0)
 I $G(DGSET)>0,$G(DGID)?1A,$G(DGVALUE)]"" D
"RTN","DGPFHLU2",30,0)
 . S DGFLD=$$CKSTR^DGPFHLUT("3,11",DGFLD)  ;required fields
"RTN","DGPFHLU2",31,0)
 . S DGFLD=","_DGFLD_","
"RTN","DGPFHLU2",32,0)
 . I $$OBXVAL(DGFLD,DGSET,DGID,DGSUBID,DGVALUE,.DGPFAH,.DGVAL) D
"RTN","DGPFHLU2",33,0)
 . . S DGOBX=$$BLDSEG^DGPFHLUT("OBX",.DGVAL,.DGHL)
"RTN","DGPFHLU2",34,0)
 Q DGOBX
"RTN","DGPFHLU2",35,0)
 ;
"RTN","DGPFHLU2",36,0)
OBXVAL(DGFLD,DGSET,DGID,DGSUBID,DGVALUE,DGPFAH,DGVAL) ;build OBX value array
"RTN","DGPFHLU2",37,0)
 ;
"RTN","DGPFHLU2",38,0)
 ;  Input:
"RTN","DGPFHLU2",39,0)
 ;     DGFLD - (required) Fields string
"RTN","DGPFHLU2",40,0)
 ;     DGSET - (required) OBX segment Set ID
"RTN","DGPFHLU2",41,0)
 ;      DGID - (required) Observation identifier code
"RTN","DGPFHLU2",42,0)
 ;   DGSUBID - (optional) Observation Sub-ID
"RTN","DGPFHLU2",43,0)
 ;   DGVALUE - (required) Observation value, or DBRS data string in case of DBRS OBX segment
"RTN","DGPFHLU2",44,0)
 ;    DGPFAH - (required) Assignment history data array
"RTN","DGPFHLU2",45,0)
 ;
"RTN","DGPFHLU2",46,0)
 ;  Output:
"RTN","DGPFHLU2",47,0)
 ;   Function Value - 1 on success, 0 on failure
"RTN","DGPFHLU2",48,0)
 ;            DGVAL - OBX field array [SUB1:field, SUB2:repetition,
"RTN","DGPFHLU2",49,0)
 ;                                    SUB3:component, SUB4:sub-component]
"RTN","DGPFHLU2",50,0)
 ;
"RTN","DGPFHLU2",51,0)
 N DGRSLT   ;function value
"RTN","DGPFHLU2",52,0)
 N DGTYPE   ;observation value type
"RTN","DGPFHLU2",53,0)
 N DGIDSTR  ;observation identifier string
"RTN","DGPFHLU2",54,0)
 N DGDAT    ;observation date
"RTN","DGPFHLU2",55,0)
 N ACTION,DBRSSTAT
"RTN","DGPFHLU2",56,0)
 ;
"RTN","DGPFHLU2",57,0)
 S DGRSLT=0
"RTN","DGPFHLU2",58,0)
 S ACTION=+$G(DGPFAH("ACTION"))
"RTN","DGPFHLU2",59,0)
 I DGID="D" S DBRSSTAT=$P($P(DGVALUE,U,4),";")
"RTN","DGPFHLU2",60,0)
 ;
"RTN","DGPFHLU2",61,0)
 I $G(DGFLD)]"",+$G(DGSET)>0,$G(DGID)?1A,$G(DGVALUE)]"" D
"RTN","DGPFHLU2",62,0)
 .; seq 1 Set ID
"RTN","DGPFHLU2",63,0)
 .I DGFLD[",1," S DGVAL(1)=DGSET
"RTN","DGPFHLU2",64,0)
 .; seq 2 Value Type
"RTN","DGPFHLU2",65,0)
 .I DGFLD[",2," D
"RTN","DGPFHLU2",66,0)
 ..S DGTYPE=$S(DGID="S":"ST",DGID="N":"TX",DGID="C":"TX",DGID="D":"TX",1:"") Q:(DGTYPE']"")
"RTN","DGPFHLU2",67,0)
 ..S DGVAL(2)=DGTYPE
"RTN","DGPFHLU2",68,0)
 ..Q
"RTN","DGPFHLU2",69,0)
 .; seq 3 Observation Identifier
"RTN","DGPFHLU2",70,0)
 .I DGFLD[",3," D  Q:'$D(DGVAL(3))   ;required field
"RTN","DGPFHLU2",71,0)
 ..I DGID="D" S DGIDSTR="DBRS-"_$S(DBRSSTAT="D":"Delete",1:"Update")
"RTN","DGPFHLU2",72,0)
 ..I DGID'="D" S DGIDSTR=$S(DGID="S":"Status",DGID="N":"Narrative",DGID="C":"Comment",1:"") Q:(DGIDSTR']"")
"RTN","DGPFHLU2",73,0)
 ..S DGVAL(3,1,1)=DGID
"RTN","DGPFHLU2",74,0)
 ..S DGVAL(3,1,2)=DGIDSTR
"RTN","DGPFHLU2",75,0)
 ..S DGVAL(3,1,3)="L"
"RTN","DGPFHLU2",76,0)
 ..Q
"RTN","DGPFHLU2",77,0)
 .; seq 4 Observation Sub-ID (optional)
"RTN","DGPFHLU2",78,0)
 .I DGFLD[",4," S DGVAL(4)=$S(+$G(DGSUBID)>0:DGSUBID,1:"")
"RTN","DGPFHLU2",79,0)
 .; seq 5 Observation Value
"RTN","DGPFHLU2",80,0)
 .I DGFLD[",5," D
"RTN","DGPFHLU2",81,0)
 ..I DGID="D" S DGVAL(5,1)=$$ENCHL7^DGPFHLUT($P(DGVALUE,U)),DGVAL(5,2)=$$ENCHL7^DGPFHLUT($P(DGVALUE,U,2)) Q
"RTN","DGPFHLU2",82,0)
 ..S DGVAL(5)=$$ENCHL7^DGPFHLUT(DGVALUE)
"RTN","DGPFHLU2",83,0)
 ..Q
"RTN","DGPFHLU2",84,0)
 .; seq 6 Units
"RTN","DGPFHLU2",85,0)
 .I DGFLD[",6," S DGVAL(6)=""
"RTN","DGPFHLU2",86,0)
 .; seq 7 Reference Range
"RTN","DGPFHLU2",87,0)
 .I DGFLD[",7," S DGVAL(7)=""
"RTN","DGPFHLU2",88,0)
 .; seq 8 Abnormal Flags
"RTN","DGPFHLU2",89,0)
 .I DGFLD[",8," S DGVAL(8)=""
"RTN","DGPFHLU2",90,0)
 .; seq 9 Probability
"RTN","DGPFHLU2",91,0)
 .I DGFLD[",9," S DGVAL(9)=""
"RTN","DGPFHLU2",92,0)
 .; seq 10 Nature of Abnormal Test
"RTN","DGPFHLU2",93,0)
 .I DGFLD[",10," S DGVAL(10)=""
"RTN","DGPFHLU2",94,0)
 .; seq 11 Observation Result Status
"RTN","DGPFHLU2",95,0)
 .I DGFLD[",11," S DGVAL(11)="F"
"RTN","DGPFHLU2",96,0)
 .; seq 12 Date last Obs Normal Values
"RTN","DGPFHLU2",97,0)
 .I DGFLD[",12," S DGVAL(12)=""
"RTN","DGPFHLU2",98,0)
 .; seq 13 User Defined Access Checks
"RTN","DGPFHLU2",99,0)
 .I DGFLD[",13," S DGVAL(13)=""
"RTN","DGPFHLU2",100,0)
 .; seq 14 Date/Time of the Observation
"RTN","DGPFHLU2",101,0)
 .I DGFLD[",14," D
"RTN","DGPFHLU2",102,0)
 ..S DGDAT=$$FMTHL7^XLFDT($S(DGID="D":$P($P(DGVALUE,U,3),";"),1:+$G(DGPFAH("ASSIGNDT"))))
"RTN","DGPFHLU2",103,0)
 ..S DGVAL(14)=$S(DGDAT>0:DGDAT,1:"")
"RTN","DGPFHLU2",104,0)
 ..Q
"RTN","DGPFHLU2",105,0)
 .; seq 15 Producer's ID
"RTN","DGPFHLU2",106,0)
 .I DGFLD[",15," S DGVAL(15)=""
"RTN","DGPFHLU2",107,0)
 .; seq 16 Responsible Observer
"RTN","DGPFHLU2",108,0)
 .I DGFLD[",16," S DGVAL(16)=""
"RTN","DGPFHLU2",109,0)
 .; seq 17 Observation Method
"RTN","DGPFHLU2",110,0)
 .I DGFLD[",17," S DGVAL(17)=""
"RTN","DGPFHLU2",111,0)
 .; seq 23 Performing Organization Name
"RTN","DGPFHLU2",112,0)
 .I DGFLD[",23," D
"RTN","DGPFHLU2",113,0)
 ..I DGID="D" S DGVAL(23,1,3)=$$STA^XUAF4(+$P($P(DGVALUE,U,5),";")) Q
"RTN","DGPFHLU2",114,0)
 ..S DGVAL(23,1,3)=$$STA^XUAF4(+$G(DGPFAH("ORIGFAC")))
"RTN","DGPFHLU2",115,0)
 ..Q
"RTN","DGPFHLU2",116,0)
 .;
"RTN","DGPFHLU2",117,0)
 .S DGRSLT=1
"RTN","DGPFHLU2",118,0)
 .Q
"RTN","DGPFHLU2",119,0)
 I 'DGRSLT K DGVAL
"RTN","DGPFHLU2",120,0)
 Q DGRSLT
"RTN","DGPFHLU2",121,0)
 ;
"RTN","DGPFHLU2",122,0)
BLDOBXTX(DGROOT,DGTXTA,DGID,DGPFAH,DGHL,DGSEG,DGSET) ;build OBX text segments
"RTN","DGPFHLU2",123,0)
 ;
"RTN","DGPFHLU2",124,0)
 ;  Input:
"RTN","DGPFHLU2",125,0)
 ;     DGROOT - (required) Closed root array or global name for segment
"RTN","DGPFHLU2",126,0)
 ;              storage
"RTN","DGPFHLU2",127,0)
 ;     DGTXTA - (required) Closed root array containing text
"RTN","DGPFHLU2",128,0)
 ;       DGID - (required) OBX segment Observation ID
"RTN","DGPFHLU2",129,0)
 ;     DGPFAH - (required) Assignment history data array
"RTN","DGPFHLU2",130,0)
 ;       DGHL - (required) VistA HL7 environment array
"RTN","DGPFHLU2",131,0)
 ;      DGSEG - (optional) Previous segment # in DGROOT
"RTN","DGPFHLU2",132,0)
 ;      DGSET - (optional) Previous OBX Set ID
"RTN","DGPFHLU2",133,0)
 ;
"RTN","DGPFHLU2",134,0)
 ;  Output:
"RTN","DGPFHLU2",135,0)
 ;   Function Value - 1 on success, 0 on failure
"RTN","DGPFHLU2",136,0)
 ;
"RTN","DGPFHLU2",137,0)
 N DGI       ;generic counter
"RTN","DGPFHLU2",138,0)
 N DGOBX     ;formatted OBX segment
"RTN","DGPFHLU2",139,0)
 N DGOBXTX   ;array of pre-processed text lines
"RTN","DGPFHLU2",140,0)
 N DGRSLT    ;function value
"RTN","DGPFHLU2",141,0)
 N DGSTR     ;list of OBX segment fields to include
"RTN","DGPFHLU2",142,0)
 ;
"RTN","DGPFHLU2",143,0)
 S DGRSLT=0
"RTN","DGPFHLU2",144,0)
 S DGSTR="1,2,3,5,11,14,23"
"RTN","DGPFHLU2",145,0)
 I $G(DGROOT)]"",$G(DGTXTA)]"",$G(DGID)?1A,$D(DGPFAH) D
"RTN","DGPFHLU2",146,0)
 . Q:'$$BLDTEXT^DGPFHLUT(DGTXTA,.DGHL,.DGOBXTX)
"RTN","DGPFHLU2",147,0)
 . S DGSEG=$G(DGSEG,0)
"RTN","DGPFHLU2",148,0)
 . S DGSET=$G(DGSET,0)
"RTN","DGPFHLU2",149,0)
 . S DGI=0
"RTN","DGPFHLU2",150,0)
 . F  S DGI=$O(DGOBXTX(DGI)) Q:'DGI  D  Q:(DGOBX="")
"RTN","DGPFHLU2",151,0)
 . . S DGSET=DGSET+1
"RTN","DGPFHLU2",152,0)
 . . S DGOBX=$$OBX^DGPFHLU2(DGSET,DGID,"",DGOBXTX(DGI),.DGPFAH,DGSTR,.DGHL)
"RTN","DGPFHLU2",153,0)
 . . Q:(DGOBX="")
"RTN","DGPFHLU2",154,0)
 . . S DGSEG=DGSEG+1,@DGROOT@(DGSEG)=DGOBX
"RTN","DGPFHLU2",155,0)
 . Q:(DGOBX)=""
"RTN","DGPFHLU2",156,0)
 . ;
"RTN","DGPFHLU2",157,0)
 . ;success
"RTN","DGPFHLU2",158,0)
 . S DGRSLT=1
"RTN","DGPFHLU2",159,0)
 ;
"RTN","DGPFHLU2",160,0)
 Q DGRSLT
"RTN","DGPFHLU3")
0^19^B31602328^B31915353
"RTN","DGPFHLU3",1,0)
DGPFHLU3 ;ALB/RPM - PRF HL7 BUILD MSA/ERR SEGMENTS ; 3/03/03
"RTN","DGPFHLU3",2,0)
 ;;5.3;Registration;**425,650,951**;Aug 13, 1993;Build 135
"RTN","DGPFHLU3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPFHLU3",4,0)
 ;
"RTN","DGPFHLU3",5,0)
 Q
"RTN","DGPFHLU3",6,0)
 ;
"RTN","DGPFHLU3",7,0)
MSA(DGACK,DGID,DGERR,DGFLD,DGHL) ;MSA Segment API
"RTN","DGPFHLU3",8,0)
 ;This function wraps the data retrieval and segment creation APIs and
"RTN","DGPFHLU3",9,0)
 ;returns a formatted MSA segment.
"RTN","DGPFHLU3",10,0)
 ;
"RTN","DGPFHLU3",11,0)
 ;  Input:
"RTN","DGPFHLU3",12,0)
 ;     DGACK - (required) MSA segment Acknowledgment code
"RTN","DGPFHLU3",13,0)
 ;      DGID - (required) Message Control ID
"RTN","DGPFHLU3",14,0)
 ;     DGERR - (optional) Error condition
"RTN","DGPFHLU3",15,0)
 ;     DGFLD - (optional) List of comma-separated fields (sequence #'s)
"RTN","DGPFHLU3",16,0)
 ;             to include.  Defaults to all required fields (1,2).
"RTN","DGPFHLU3",17,0)
 ;      DGHL - (required) HL7 environment array
"RTN","DGPFHLU3",18,0)
 ;
"RTN","DGPFHLU3",19,0)
 ;  Output:
"RTN","DGPFHLU3",20,0)
 ;   Function Value - MSA segment on success, "" on failure
"RTN","DGPFHLU3",21,0)
 ;
"RTN","DGPFHLU3",22,0)
 N DGMSA
"RTN","DGPFHLU3",23,0)
 N DGVAL
"RTN","DGPFHLU3",24,0)
 ;
"RTN","DGPFHLU3",25,0)
 S HLECH=DGHL("ECH"),HLFS=DGHL("FS")
"RTN","DGPFHLU3",26,0)
 S DGMSA=""
"RTN","DGPFHLU3",27,0)
 I $G(DGACK)]"",+$G(DGID) D
"RTN","DGPFHLU3",28,0)
 . S DGERR=$G(DGERR)
"RTN","DGPFHLU3",29,0)
 . S DGFLD=$$CKSTR^DGPFHLUT("1,2",DGFLD)  ;validate field string
"RTN","DGPFHLU3",30,0)
 . I DGERR]"" S DGFLD=DGFLD_",6"
"RTN","DGPFHLU3",31,0)
 . S DGFLD=","_DGFLD_","
"RTN","DGPFHLU3",32,0)
 . I $$MSAVAL(DGFLD,DGACK,DGID,"","","",DGERR,.DGVAL) D
"RTN","DGPFHLU3",33,0)
 . . S DGMSA=$$BLDSEG^DGPFHLUT("MSA",.DGVAL,.DGHL)
"RTN","DGPFHLU3",34,0)
 Q DGMSA
"RTN","DGPFHLU3",35,0)
 ;
"RTN","DGPFHLU3",36,0)
MSAVAL(DGFLD,DGACK,DGID,DGTEXT,DGESN,DGDAT,DGERR,DGVAL) ;build MSA value array
"RTN","DGPFHLU3",37,0)
 ;
"RTN","DGPFHLU3",38,0)
 ;  Input:
"RTN","DGPFHLU3",39,0)
 ;     DGFLD - (required) fields string
"RTN","DGPFHLU3",40,0)
 ;     DGACK - (required) MSA segment Acknowledgment code
"RTN","DGPFHLU3",41,0)
 ;      DGID - (required) Message Control ID
"RTN","DGPFHLU3",42,0)
 ;    DGTEXT - (optional) Text message
"RTN","DGPFHLU3",43,0)
 ;     DGESN - (optional) Expected sequence number
"RTN","DGPFHLU3",44,0)
 ;     DGDAT - (optional) Delayed acknowledgment type
"RTN","DGPFHLU3",45,0)
 ;     DGERR - (optional) Error condition
"RTN","DGPFHLU3",46,0)
 ;
"RTN","DGPFHLU3",47,0)
 ;  Output:
"RTN","DGPFHLU3",48,0)
 ;   Function Value - 1 on success, 0 on failure
"RTN","DGPFHLU3",49,0)
 ;            DGVAL - MSA field array [SUB1:field, SUB2:repetition,
"RTN","DGPFHLU3",50,0)
 ;                                    SUB3:component, SUB4:sub-component]
"RTN","DGPFHLU3",51,0)
 ;
"RTN","DGPFHLU3",52,0)
 N DGRSLT    ;function value
"RTN","DGPFHLU3",53,0)
 N DGACKS    ;array of valid ACK codes
"RTN","DGPFHLU3",54,0)
 N DGCOD     ;ACK code string
"RTN","DGPFHLU3",55,0)
 ;
"RTN","DGPFHLU3",56,0)
 S DGRSLT=0
"RTN","DGPFHLU3",57,0)
 I $G(DGFLD)]"",$G(DGACK)]"",+$G(DGID) D
"RTN","DGPFHLU3",58,0)
 .F DGCOD="AA","AE","AR","CA","CE","CR" S DGACKS(DGCOD)=""
"RTN","DGPFHLU3",59,0)
 .; seq 1 Acknowledgment Code
"RTN","DGPFHLU3",60,0)
 .I DGFLD[",1," S DGVAL(1)=$S($D(DGACKS(DGACK)):DGACK,1:"")
"RTN","DGPFHLU3",61,0)
 .Q:(DGVAL(1)="")  ;required field
"RTN","DGPFHLU3",62,0)
 .; seq 2 Message Control ID
"RTN","DGPFHLU3",63,0)
 .I DGFLD[",2," S DGVAL(2)=DGID
"RTN","DGPFHLU3",64,0)
 .Q:(DGVAL(2)="")  ;required field
"RTN","DGPFHLU3",65,0)
 .; seq 3 Text Message
"RTN","DGPFHLU3",66,0)
 .I DGFLD[",3," S DGVAL(3)=$$ENCHL7^DGPFHLUT($G(DGTEXT))
"RTN","DGPFHLU3",67,0)
 .; seq 4 Expected Sequence Number
"RTN","DGPFHLU3",68,0)
 .I DGFLD[",4," S DGVAL(4)=$G(DGESN)
"RTN","DGPFHLU3",69,0)
 .; seq 5 Delayed Acknowledgment Type
"RTN","DGPFHLU3",70,0)
 .I DGFLD[",5," D
"RTN","DGPFHLU3",71,0)
 ..S DGDAT=$G(DGDAT)
"RTN","DGPFHLU3",72,0)
 ..S DGVAL(5)=$S(DGDAT="D":DGDAT,DGDAT="F":DGDAT,1:"")
"RTN","DGPFHLU3",73,0)
 ..Q
"RTN","DGPFHLU3",74,0)
 .; seq 6 Error Condition
"RTN","DGPFHLU3",75,0)
 .I DGFLD[",6," D
"RTN","DGPFHLU3",76,0)
 ..S DGVAL(6,1,1)=$$ENCHL7^DGPFHLUT(DGERR)
"RTN","DGPFHLU3",77,0)
 ..S DGVAL(6,1,2)=$$ENCHL7^DGPFHLUT($$EZBLD^DIALOG(DGERR))
"RTN","DGPFHLU3",78,0)
 ..S DGVAL(6,1,3)="L"
"RTN","DGPFHLU3",79,0)
 ..Q
"RTN","DGPFHLU3",80,0)
 .S DGRSLT=1
"RTN","DGPFHLU3",81,0)
 I 'DGRSLT K DGVAL
"RTN","DGPFHLU3",82,0)
 Q DGRSLT
"RTN","DGPFHLU3",83,0)
 ;
"RTN","DGPFHLU3",84,0)
ERR(DGSEG,DGSEQ,DGPOS,DGCOD,DGFLD,DGHL) ;ERR segment API
"RTN","DGPFHLU3",85,0)
 ;
"RTN","DGPFHLU3",86,0)
 ;  Input:
"RTN","DGPFHLU3",87,0)
 ;    DGSEG - (required) Segment ID
"RTN","DGPFHLU3",88,0)
 ;    DGSEQ - (required) Sequence
"RTN","DGPFHLU3",89,0)
 ;    DGPOS - (required) Field position
"RTN","DGPFHLU3",90,0)
 ;    DGCOD - (required) Error code
"RTN","DGPFHLU3",91,0)
 ;    DGFLD - (optional) List of comma-separated fields (sequence #'s)
"RTN","DGPFHLU3",92,0)
 ;             to include.  Defaults to all required fields (1).
"RTN","DGPFHLU3",93,0)
 ;     DGHL - (required) HL7 Environment array
"RTN","DGPFHLU3",94,0)
 ;
"RTN","DGPFHLU3",95,0)
 ;  Output:
"RTN","DGPFHLU3",96,0)
 ;   Function value - ERR segment on success, "" on failure
"RTN","DGPFHLU3",97,0)
 ;
"RTN","DGPFHLU3",98,0)
 N DGERR
"RTN","DGPFHLU3",99,0)
 N DGVAL
"RTN","DGPFHLU3",100,0)
 ;
"RTN","DGPFHLU3",101,0)
 S DGERR=""
"RTN","DGPFHLU3",102,0)
 I $G(DGSEG)]"",+$G(DGSEQ),+$G(DGPOS),$G(DGCOD)]"",$G(DGHL("ECH"))]"" D
"RTN","DGPFHLU3",103,0)
 . S DGFLD=$$CKSTR^DGPFHLUT("1",DGFLD)  ;validate field string
"RTN","DGPFHLU3",104,0)
 . S DGFLD=","_DGFLD_","
"RTN","DGPFHLU3",105,0)
 . I $$ERRVAL(DGFLD,DGSEG,DGSEQ,DGPOS,DGCOD,.DGVAL) D
"RTN","DGPFHLU3",106,0)
 . . S DGERR=$$BLDSEG^DGPFHLUT("ERR",.DGVAL,.DGHL)
"RTN","DGPFHLU3",107,0)
 Q DGERR
"RTN","DGPFHLU3",108,0)
 ;
"RTN","DGPFHLU3",109,0)
ERRVAL(DGFLD,DGSEG,DGSEQ,DGPOS,DGCOD,DGVAL) ;build ERR value array
"RTN","DGPFHLU3",110,0)
 ;
"RTN","DGPFHLU3",111,0)
 ;  Input:
"RTN","DGPFHLU3",112,0)
 ;    DGFLD - (required) Field string
"RTN","DGPFHLU3",113,0)
 ;    DGSEG - (required) Segment ID
"RTN","DGPFHLU3",114,0)
 ;    DGSEQ - (required) Sequence
"RTN","DGPFHLU3",115,0)
 ;    DGPOS - (required) Field position
"RTN","DGPFHLU3",116,0)
 ;    DGCOD - (required) Error code
"RTN","DGPFHLU3",117,0)
 ;    
"RTN","DGPFHLU3",118,0)
 ;  Output:
"RTN","DGPFHLU3",119,0)
 ;   Function value - 1 on success, 0 on failure
"RTN","DGPFHLU3",120,0)
 ;            DGVAL - ERR field array [SUB1:field, SUB2:repetition,
"RTN","DGPFHLU3",121,0)
 ;                                    SUB3:component, SUB4:sub-component]
"RTN","DGPFHLU3",122,0)
 N DGRSLT
"RTN","DGPFHLU3",123,0)
 ;
"RTN","DGPFHLU3",124,0)
 S DGRSLT=0
"RTN","DGPFHLU3",125,0)
 I $G(DGFLD)]"",$G(DGSEG)]"",+$G(DGSEQ),+$G(DGPOS),$G(DGCOD)]"" D
"RTN","DGPFHLU3",126,0)
 . I DGFLD[",1," D
"RTN","DGPFHLU3",127,0)
 . . S DGVAL(1,1,1)=DGSEG
"RTN","DGPFHLU3",128,0)
 . . S DGVAL(1,1,2)=DGSEQ
"RTN","DGPFHLU3",129,0)
 . . S DGVAL(1,1,3)=DGPOS
"RTN","DGPFHLU3",130,0)
 . . S DGVAL(1,1,4,1)=DGCOD
"RTN","DGPFHLU3",131,0)
 . . S DGVAL(1,1,4,2)=$$EZBLD^DIALOG(DGCOD)
"RTN","DGPFHLU3",132,0)
 . . S DGVAL(1,1,4,3)="L"
"RTN","DGPFHLU3",133,0)
 . S DGRSLT=1
"RTN","DGPFHLU3",134,0)
 Q DGRSLT
"RTN","DGPFHLU3",135,0)
 ;
"RTN","DGPFHLU3",136,0)
BLDVA086(DGTBL) ;build error code/text array for table VA086
"RTN","DGPFHLU3",137,0)
 ;
"RTN","DGPFHLU3",138,0)
 ;  Input:
"RTN","DGPFHLU3",139,0)
 ;    none
"RTN","DGPFHLU3",140,0)
 ;
"RTN","DGPFHLU3",141,0)
 ;  Output:
"RTN","DGPFHLU3",142,0)
 ;    DGTBL - error code array subscripted by code containing error text
"RTN","DGPFHLU3",143,0)
 ;
"RTN","DGPFHLU3",144,0)
 N DGI
"RTN","DGPFHLU3",145,0)
 N DGLINE
"RTN","DGPFHLU3",146,0)
 N DGCOD
"RTN","DGPFHLU3",147,0)
 N DGTXT
"RTN","DGPFHLU3",148,0)
 N DGDESC
"RTN","DGPFHLU3",149,0)
 ;
"RTN","DGPFHLU3",150,0)
 F DGI=1:1 S DGLINE=$T(ERRTBL+DGI) Q:DGLINE=""  D
"RTN","DGPFHLU3",151,0)
 . S DGCOD=$P(DGLINE,";",3)
"RTN","DGPFHLU3",152,0)
 . S DGTXT=$P(DGLINE,";",4)
"RTN","DGPFHLU3",153,0)
 . S DGDESC=$P(DGLINE,";",5)
"RTN","DGPFHLU3",154,0)
 . S DGTBL(DGCOD)=DGTXT
"RTN","DGPFHLU3",155,0)
 . S DGTBL(DGCOD,"DESC")=DGDESC
"RTN","DGPFHLU3",156,0)
 Q
"RTN","DGPFHLU3",157,0)
 ;
"RTN","DGPFHLU3",158,0)
ERRTBL ;VA086 Error Code Table;error code;error text
"RTN","DGPFHLU3",159,0)
 ;;FE;Filer Error;An error occurred at the remote site when attempting to add, update or retrieve assignment data.
"RTN","DGPFHLU3",160,0)
 ;;IF;Invalid Patient Record Flag;The transmitted Patient Record Flag is not defined at the remote site.
"RTN","DGPFHLU3",161,0)
 ;;IID;Invalid Observation ID;The transmitted observation ID is not "N"arrative, "S"tatus or "C"omment.
"RTN","DGPFHLU3",162,0)
 ;;IOR;Invalid Originating Site;The originating site of the transmission is not defined at the remote site.
"RTN","DGPFHLU3",163,0)
 ;;IOW;Invalid Owner Site;The transmitted owning site is not defined at the remote site.
"RTN","DGPFHLU3",164,0)
 ;;NM;No Match;No patient was found that correlates to the transmitted ICN, DOB and SSN.
"RTN","DGPFHLU3",165,0)
 ;;UU;Unauthorized Update;The originating site of the transmission is not defined as the owning site of the assignment or an invalid action was transmitted (i.e. Reactivate an already active assignment).
"RTN","DGPFHLU4")
0^20^B17533287^B16669354
"RTN","DGPFHLU4",1,0)
DGPFHLU4 ;ALB/RPM - PRF HL7 ACK PROCESSING ; 3/04/03
"RTN","DGPFHLU4",2,0)
 ;;5.3;Registration;**425,951**;Aug 13, 1993;Build 135
"RTN","DGPFHLU4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPFHLU4",4,0)
 ;
"RTN","DGPFHLU4",5,0)
BLDACK(DGACK,DGROOT,DGHL,DGSEGERR,DGSTOERR) ;Build ACK Message/Segments
"RTN","DGPFHLU4",6,0)
 ;
"RTN","DGPFHLU4",7,0)
 ;  Input:
"RTN","DGPFHLU4",8,0)
 ;      DGACK - (required) Acknowledgement code
"RTN","DGPFHLU4",9,0)
 ;     DGROOT - (required) Segment array name
"RTN","DGPFHLU4",10,0)
 ;       DGHL - (required) HL7 environment array
"RTN","DGPFHLU4",11,0)
 ;   DGSEGERR - (optional) defined only if errors during parsing
"RTN","DGPFHLU4",12,0)
 ;   DGSTOERR - (optional) defined only if errors during filing
"RTN","DGPFHLU4",13,0)
 ;
"RTN","DGPFHLU4",14,0)
 ;  Output:
"RTN","DGPFHLU4",15,0)
 ;   Function Value - 1 on success, 0 on failure
"RTN","DGPFHLU4",16,0)
 ;   ^TMP("HLA",$J) - Array of ACK segments
"RTN","DGPFHLU4",17,0)
 ;
"RTN","DGPFHLU4",18,0)
 N DGCNT   ;segment counter
"RTN","DGPFHLU4",19,0)
 N DGMSA   ;formatted MSA segment
"RTN","DGPFHLU4",20,0)
 N DGRSLT  ;function value
"RTN","DGPFHLU4",21,0)
 ;
"RTN","DGPFHLU4",22,0)
 S DGRSLT=0
"RTN","DGPFHLU4",23,0)
 I $G(DGACK)]"",$G(DGROOT)]"" D
"RTN","DGPFHLU4",24,0)
 . S DGCNT=0
"RTN","DGPFHLU4",25,0)
 . ;
"RTN","DGPFHLU4",26,0)
 . ;build MSA segment
"RTN","DGPFHLU4",27,0)
 . S DGMSA=$$MSA^DGPFHLU3(DGACK,DGHL("MID"),.DGSTOERR,"1,2",.DGHL)
"RTN","DGPFHLU4",28,0)
 . Q:(DGMSA="")
"RTN","DGPFHLU4",29,0)
 . S DGCNT=DGCNT+1,@DGROOT@(DGCNT)=DGMSA
"RTN","DGPFHLU4",30,0)
 . ;
"RTN","DGPFHLU4",31,0)
 . ;build ERR segments
"RTN","DGPFHLU4",32,0)
 . Q:($D(DGSEGERR)&('$$BLDERR(DGROOT,.DGSEGERR,.DGHL,.DGCNT)))
"RTN","DGPFHLU4",33,0)
 . ;
"RTN","DGPFHLU4",34,0)
 . ;success
"RTN","DGPFHLU4",35,0)
 . S DGRSLT=1
"RTN","DGPFHLU4",36,0)
 Q DGRSLT
"RTN","DGPFHLU4",37,0)
 ;
"RTN","DGPFHLU4",38,0)
PARSACK(DGWRK,DGHL,DGACK,DGMSG) ;Parse ACK Message/Segments
"RTN","DGPFHLU4",39,0)
 ;
"RTN","DGPFHLU4",40,0)
 ;  Input:
"RTN","DGPFHLU4",41,0)
 ;    DGWRK - Closed root work global reference
"RTN","DGPFHLU4",42,0)
 ;     DGHL - HL7 environment array
"RTN","DGPFHLU4",43,0)
 ;
"RTN","DGPFHLU4",44,0)
 ;  Output:
"RTN","DGPFHLU4",45,0)
 ;    DGACK - array of ACK results
"RTN","DGPFHLU4",46,0)
 ;    DGMSG - undefined on success, array of MailMan text on failure
"RTN","DGPFHLU4",47,0)
 ;
"RTN","DGPFHLU4",48,0)
 N DGFS
"RTN","DGPFHLU4",49,0)
 N DGCS
"RTN","DGPFHLU4",50,0)
 N DGRS
"RTN","DGPFHLU4",51,0)
 N DGSS
"RTN","DGPFHLU4",52,0)
 N DGCURLIN
"RTN","DGPFHLU4",53,0)
 ;
"RTN","DGPFHLU4",54,0)
 S DGFS=DGHL("FS")
"RTN","DGPFHLU4",55,0)
 S DGCS=$E(DGHL("ECH"),1)
"RTN","DGPFHLU4",56,0)
 S DGRS=$E(DGHL("ECH"),2)
"RTN","DGPFHLU4",57,0)
 S DGSS=$E(DGHL("ECH"),4)
"RTN","DGPFHLU4",58,0)
 S HLECH=DGHL("ECH"),HLFS=DGHL("FS")
"RTN","DGPFHLU4",59,0)
 S DGCURLIN=0
"RTN","DGPFHLU4",60,0)
 ;
"RTN","DGPFHLU4",61,0)
 ;loop through the message segments and retrieve the field data
"RTN","DGPFHLU4",62,0)
 F  D  Q:'DGCURLIN
"RTN","DGPFHLU4",63,0)
 . N DGSEG
"RTN","DGPFHLU4",64,0)
 . S DGCURLIN=$$NXTSEG^DGPFHLUT(DGWRK,DGCURLIN,DGFS,.DGSEG)
"RTN","DGPFHLU4",65,0)
 . Q:'DGCURLIN
"RTN","DGPFHLU4",66,0)
 . D @(DGSEG("TYPE")_"(.DGSEG,DGCS,DGRS,DGSS,.DGACK,.DGMSG)")
"RTN","DGPFHLU4",67,0)
 Q
"RTN","DGPFHLU4",68,0)
 ;
"RTN","DGPFHLU4",69,0)
MSH(DGSEG,DGCS,DGRS,DGSS,DGACK,DGERR) ;
"RTN","DGPFHLU4",70,0)
 ;
"RTN","DGPFHLU4",71,0)
 ;  Input:
"RTN","DGPFHLU4",72,0)
 ;    DGSEG - MSH segment field array
"RTN","DGPFHLU4",73,0)
 ;     DGCS - HL7 component separator
"RTN","DGPFHLU4",74,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGPFHLU4",75,0)
 ;     DGSS - HL7 sub-component separator
"RTN","DGPFHLU4",76,0)
 ;
"RTN","DGPFHLU4",77,0)
 ;  Output:
"RTN","DGPFHLU4",78,0)
 ;    DGACK - array of ACK results
"RTN","DGPFHLU4",79,0)
 ;            "SNDFAC" - sending facility
"RTN","DGPFHLU4",80,0)
 ;            "RCVFAC" - receiving facility
"RTN","DGPFHLU4",81,0)
 ;            "MSGDTM" - message creation date/time in FileMan format
"RTN","DGPFHLU4",82,0)
 ;    DGERR - undefined on success, error array on failure
"RTN","DGPFHLU4",83,0)
 ;
"RTN","DGPFHLU4",84,0)
 S DGACK("SNDFAC")=$P($G(DGSEG(4)),DGCS,1)
"RTN","DGPFHLU4",85,0)
 S DGACK("RCVFAC")=$P($G(DGSEG(6)),DGCS,1)
"RTN","DGPFHLU4",86,0)
 S DGACK("MSGDTM")=$$HL7TFM^XLFDT($G(DGSEG(7)))
"RTN","DGPFHLU4",87,0)
 Q
"RTN","DGPFHLU4",88,0)
 ;
"RTN","DGPFHLU4",89,0)
MSA(DGSEG,DGCS,DGRS,DGSS,DGACK,DGERR) ;
"RTN","DGPFHLU4",90,0)
 ;
"RTN","DGPFHLU4",91,0)
 ;  Input:
"RTN","DGPFHLU4",92,0)
 ;    DGSEG - MSH segment field array
"RTN","DGPFHLU4",93,0)
 ;     DGCS - HL7 component separator
"RTN","DGPFHLU4",94,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGPFHLU4",95,0)
 ;     DGSS - HL7 sub-component separator
"RTN","DGPFHLU4",96,0)
 ;
"RTN","DGPFHLU4",97,0)
 ;  Output:
"RTN","DGPFHLU4",98,0)
 ;    DGACK - array of ACK results
"RTN","DGPFHLU4",99,0)
 ;            "ACKCODE" - Acknowledgment code
"RTN","DGPFHLU4",100,0)
 ;            "MSGID" - Message Control ID of the message being ACK'ed
"RTN","DGPFHLU4",101,0)
 ;    DGERR - undefined on success, error array on failure
"RTN","DGPFHLU4",102,0)
 ;
"RTN","DGPFHLU4",103,0)
 N DGCNT
"RTN","DGPFHLU4",104,0)
 ;
"RTN","DGPFHLU4",105,0)
 S DGACK("ACKCODE")=$G(DGSEG(1))
"RTN","DGPFHLU4",106,0)
 S DGACK("MSGID")=$G(DGSEG(2))
"RTN","DGPFHLU4",107,0)
 I DGACK("ACKCODE")'="AA",$G(DGSEG(6))]"" D
"RTN","DGPFHLU4",108,0)
 .S DGCNT=$O(DGERR(""),-1),DGCNT=DGCNT+1
"RTN","DGPFHLU4",109,0)
 .S DGERR(DGCNT)=$$DECHL7^DGPFHLUT($P(DGSEG(6),DGCS,1))
"RTN","DGPFHLU4",110,0)
 .Q
"RTN","DGPFHLU4",111,0)
 Q
"RTN","DGPFHLU4",112,0)
 ;
"RTN","DGPFHLU4",113,0)
ERR(DGSEG,DGCS,DGRS,DGSS,DGACK,DGERR) ;
"RTN","DGPFHLU4",114,0)
 ;
"RTN","DGPFHLU4",115,0)
 ;  Input:
"RTN","DGPFHLU4",116,0)
 ;    DGSEG - MSH segment field array
"RTN","DGPFHLU4",117,0)
 ;     DGCS - HL7 component separator
"RTN","DGPFHLU4",118,0)
 ;     DGRS - HL7 repetition separator
"RTN","DGPFHLU4",119,0)
 ;     DGSS - HL7 sub-component separator
"RTN","DGPFHLU4",120,0)
 ;
"RTN","DGPFHLU4",121,0)
 ;  Output:
"RTN","DGPFHLU4",122,0)
 ;    DGACK - array of ACK results
"RTN","DGPFHLU4",123,0)
 ;    DGERR - undefined on success, error array on failure
"RTN","DGPFHLU4",124,0)
 ;
"RTN","DGPFHLU4",125,0)
 N DGCNT
"RTN","DGPFHLU4",126,0)
 N DGCOD
"RTN","DGPFHLU4",127,0)
 ;
"RTN","DGPFHLU4",128,0)
 I $G(DGSEG(1))]"" D
"RTN","DGPFHLU4",129,0)
 . S DGCOD=$P($P(DGSEG(1),DGCS,4),DGSS,1)
"RTN","DGPFHLU4",130,0)
 . I DGCOD]"" D
"RTN","DGPFHLU4",131,0)
 . . S DGCNT=$O(DGERR(""),-1),DGCNT=DGCNT+1
"RTN","DGPFHLU4",132,0)
 . . S DGERR(DGCNT)=DGCOD
"RTN","DGPFHLU4",133,0)
 Q
"RTN","DGPFHLU4",134,0)
 ;
"RTN","DGPFHLU4",135,0)
BLDERR(DGROOT,DGSEGERR,DGHL,DGCNT) ;build all ERR segments
"RTN","DGPFHLU4",136,0)
 ;This function builds a formatted ERR segment for each entry in the
"RTN","DGPFHLU4",137,0)
 ;segment error array (DGSEGERR).
"RTN","DGPFHLU4",138,0)
 ;
"RTN","DGPFHLU4",139,0)
 ;  Input:
"RTN","DGPFHLU4",140,0)
 ;     DGROOT - (required) Closed root array or global name for segment
"RTN","DGPFHLU4",141,0)
 ;              storage
"RTN","DGPFHLU4",142,0)
 ;   DGSEGERR - (required) Array of segment errors
"RTN","DGPFHLU4",143,0)
 ;              Format: DGSEGERR(segment name,sequence,field)=error code
"RTN","DGPFHLU4",144,0)
 ;       DGHL - (required) VistA HL7 environment array
"RTN","DGPFHLU4",145,0)
 ;      DGCNT - (optional) Previous segment # in DGROOT
"RTN","DGPFHLU4",146,0)
 ;
"RTN","DGPFHLU4",147,0)
 ;  Output:
"RTN","DGPFHLU4",148,0)
 ;   Function Value - 1 on success, 0 on failure
"RTN","DGPFHLU4",149,0)
 ;
"RTN","DGPFHLU4",150,0)
 N DGCOD   ;error code
"RTN","DGPFHLU4",151,0)
 N DGERR   ;formatted ERR segment
"RTN","DGPFHLU4",152,0)
 N DGPOS   ;field positions containing error
"RTN","DGPFHLU4",153,0)
 N DGSEG   ;segment name containing error
"RTN","DGPFHLU4",154,0)
 N DGSEQ   ;sequence of segment containing error
"RTN","DGPFHLU4",155,0)
 N DGRSLT  ;function value
"RTN","DGPFHLU4",156,0)
 ;
"RTN","DGPFHLU4",157,0)
 S DGRSLT=0
"RTN","DGPFHLU4",158,0)
 I $G(DGROOT)]"",$D(DGSEGERR) D
"RTN","DGPFHLU4",159,0)
 . S DGCNT=$G(DGCNT,0)
"RTN","DGPFHLU4",160,0)
 . S DGSEG=""
"RTN","DGPFHLU4",161,0)
 . F  S DGSEG=$O(DGSEGERR(DGSEG)) Q:(DGSEG="")  D  Q:(DGERR="")
"RTN","DGPFHLU4",162,0)
 . . S DGSEQ=0
"RTN","DGPFHLU4",163,0)
 . . F  S DGSEQ=$O(DGSEGERR(DGSEG,DGSEQ)) Q:'DGSEQ  D  Q:(DGERR="")
"RTN","DGPFHLU4",164,0)
 . . . S DGPOS=0
"RTN","DGPFHLU4",165,0)
 . . . F  S DGPOS=$O(DGSEGERR(DGSEG,DGSEQ,DGPOS)) Q:'DGPOS  D  Q:(DGERR="")
"RTN","DGPFHLU4",166,0)
 . . . . S DGCOD=DGSEGERR(DGSEG,DGSEQ,DGPOS)
"RTN","DGPFHLU4",167,0)
 . . . . S DGERR=$$ERR^DGPFHLU3(DGSEG,DGSEQ,DGPOS,DGCOD,"1",.DGHL)
"RTN","DGPFHLU4",168,0)
 . . . . Q:(DGERR="")
"RTN","DGPFHLU4",169,0)
 . . . . S DGCNT=DGCNT+1,@DGROOT@(DGCNT)=DGERR
"RTN","DGPFHLU4",170,0)
 . Q:(DGERR="")
"RTN","DGPFHLU4",171,0)
 . S DGRSLT=1
"RTN","DGPFHLU4",172,0)
 Q DGRSLT
"RTN","DGPFHLUT")
0^16^B64018223^B36458354
"RTN","DGPFHLUT",1,0)
DGPFHLUT ;ALB/RPM - PRF HL7 UTILITIES ; 5/31/05 3:45pm
"RTN","DGPFHLUT",2,0)
 ;;5.3;Registration;**425,650,951**;Aug 13, 1993;Build 135
"RTN","DGPFHLUT",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPFHLUT",4,0)
 ;
"RTN","DGPFHLUT",5,0)
 ;This routine contains generic utilities used when building
"RTN","DGPFHLUT",6,0)
 ;or processing received patient record flag HL7 messages.
"RTN","DGPFHLUT",7,0)
 ;
"RTN","DGPFHLUT",8,0)
 Q  ;no supported direct entry
"RTN","DGPFHLUT",9,0)
 ;
"RTN","DGPFHLUT",10,0)
INIT(DGPROT,DGHL) ;Kernel HL7 INIT wrapper
"RTN","DGPFHLUT",11,0)
 ;
"RTN","DGPFHLUT",12,0)
 ;  Supported DBIA #2161:  The supported DBIA is used to access the
"RTN","DGPFHLUT",13,0)
 ;                         VistA HL7 API to initialize the HL7 environ-
"RTN","DGPFHLUT",14,0)
 ;                         ment variables.
"RTN","DGPFHLUT",15,0)
 ;
"RTN","DGPFHLUT",16,0)
 ;  Input:
"RTN","DGPFHLUT",17,0)
 ;    DGPROT - Event protocol name
"RTN","DGPFHLUT",18,0)
 ;
"RTN","DGPFHLUT",19,0)
 ;  Output:
"RTN","DGPFHLUT",20,0)
 ;    Function value - HLEID on success;0 on failure
"RTN","DGPFHLUT",21,0)
 ;    DGHL - HL array from INIT^HLFNC2 Kernel call
"RTN","DGPFHLUT",22,0)
 ;
"RTN","DGPFHLUT",23,0)
 N DGHLEID
"RTN","DGPFHLUT",24,0)
 S DGHLEID=0
"RTN","DGPFHLUT",25,0)
 S DGHLEID=$$HLEID(DGPROT)
"RTN","DGPFHLUT",26,0)
 I DGHLEID D
"RTN","DGPFHLUT",27,0)
 . D INIT^HLFNC2(DGHLEID,.DGHL)
"RTN","DGPFHLUT",28,0)
 . I $O(DGHL(""))="" S DGHLEID=0
"RTN","DGPFHLUT",29,0)
 Q DGHLEID
"RTN","DGPFHLUT",30,0)
 ;
"RTN","DGPFHLUT",31,0)
HLEID(DGPROT) ;return IEN of HL7 protocol
"RTN","DGPFHLUT",32,0)
 ;
"RTN","DGPFHLUT",33,0)
 ;  Input:  
"RTN","DGPFHLUT",34,0)
 ;    DGPROT - Protocol name
"RTN","DGPFHLUT",35,0)
 ;
"RTN","DGPFHLUT",36,0)
 ;  Output:  
"RTN","DGPFHLUT",37,0)
 ;   Function value - IEN of protocol on success, 0 on failure
"RTN","DGPFHLUT",38,0)
 ;
"RTN","DGPFHLUT",39,0)
 I $G(DGPROT)="" Q 0
"RTN","DGPFHLUT",40,0)
 Q +$O(^ORD(101,"B",DGPROT,0))
"RTN","DGPFHLUT",41,0)
 ;
"RTN","DGPFHLUT",42,0)
GETLINK(DGINST) ;retrieve a single link for a given institution
"RTN","DGPFHLUT",43,0)
 ;
"RTN","DGPFHLUT",44,0)
 ;  Supported DBIA #2271:  The supported DBIA is used to access the
"RTN","DGPFHLUT",45,0)
 ;                         VistA HL7 API to retrieve logical links
"RTN","DGPFHLUT",46,0)
 ;                         given a pointer to the INSTITUTION (#4) file.
"RTN","DGPFHLUT",47,0)
 ;
"RTN","DGPFHLUT",48,0)
 ;  Input:
"RTN","DGPFHLUT",49,0)
 ;    DGINST - IEN of site in INSTITUTION (#4) file
"RTN","DGPFHLUT",50,0)
 ;
"RTN","DGPFHLUT",51,0)
 ;  Output:
"RTN","DGPFHLUT",52,0)
 ;    Function Value - HL Logical link on success, 0 on failure
"RTN","DGPFHLUT",53,0)
 ;
"RTN","DGPFHLUT",54,0)
 N DGLINKS
"RTN","DGPFHLUT",55,0)
 N DGLNK
"RTN","DGPFHLUT",56,0)
 N DGRSLT
"RTN","DGPFHLUT",57,0)
 ;
"RTN","DGPFHLUT",58,0)
 S DGRSLT=0
"RTN","DGPFHLUT",59,0)
 I $G(DGINST)>0 D
"RTN","DGPFHLUT",60,0)
 . D LINK^HLUTIL3(DGINST,.DGLINKS)
"RTN","DGPFHLUT",61,0)
 . S DGLNK=$O(DGLINKS(0))
"RTN","DGPFHLUT",62,0)
 . S DGRSLT=$S(DGLNK>0:DGLINKS(DGLNK),1:0)
"RTN","DGPFHLUT",63,0)
 Q DGRSLT
"RTN","DGPFHLUT",64,0)
 ;
"RTN","DGPFHLUT",65,0)
BLDTEXT(DGWP,DGHL,DGARR) ;Build HL7 word proc text array
"RTN","DGPFHLUT",66,0)
 ;
"RTN","DGPFHLUT",67,0)
 ;  Supported DBIA #10104:  The supported DBIA is used to access KERNEL
"RTN","DGPFHLUT",68,0)
 ;                          string functions.
"RTN","DGPFHLUT",69,0)
 ;
"RTN","DGPFHLUT",70,0)
 ;  Input:
"RTN","DGPFHLUT",71,0)
 ;     DGWP - Word processing closed root
"RTN","DGPFHLUT",72,0)
 ;     DGHL - HL7 environment array
"RTN","DGPFHLUT",73,0)
 ;
"RTN","DGPFHLUT",74,0)
 ;  Output:
"RTN","DGPFHLUT",75,0)
 ;   Function Value - count of segment array elements on success,
"RTN","DGPFHLUT",76,0)
 ;                    0 on failure
"RTN","DGPFHLUT",77,0)
 ;            DGARR - array of segment text data
"RTN","DGPFHLUT",78,0)
 ;
"RTN","DGPFHLUT",79,0)
 N DGLIN   ;word processing line iterator
"RTN","DGPFHLUT",80,0)
 N DGCNT   ;text segment counter
"RTN","DGPFHLUT",81,0)
 N DGTXT   ;word processing text
"RTN","DGPFHLUT",82,0)
 N DGBLK   ;blank line counter
"RTN","DGPFHLUT",83,0)
 N DGREP   ;HL7 repetition character
"RTN","DGPFHLUT",84,0)
 ;
"RTN","DGPFHLUT",85,0)
 S DGLIN=0
"RTN","DGPFHLUT",86,0)
 S DGCNT=0
"RTN","DGPFHLUT",87,0)
 S DGBLK=0
"RTN","DGPFHLUT",88,0)
 S DGREP=$E(DGHL("ECH"),2)
"RTN","DGPFHLUT",89,0)
 ;
"RTN","DGPFHLUT",90,0)
 F  S DGLIN=$O(@DGWP@(DGLIN)) Q:'DGLIN  D
"RTN","DGPFHLUT",91,0)
 . S DGTXT=$G(@DGWP@(DGLIN,0))
"RTN","DGPFHLUT",92,0)
 . S DGTXT=$$STRIPTS^DGPFHLUT(DGTXT)      ;strip trailing spaces
"RTN","DGPFHLUT",93,0)
 . I DGTXT?1.PC!(DGTXT="") S DGBLK=DGBLK+1 Q
"RTN","DGPFHLUT",94,0)
 . S DGCNT=DGCNT+1
"RTN","DGPFHLUT",95,0)
 . I DGBLK D
"RTN","DGPFHLUT",96,0)
 . . S DGARR(DGCNT)=$$REPEAT^XLFSTR(DGREP,DGBLK)_DGTXT
"RTN","DGPFHLUT",97,0)
 . . S DGBLK=0
"RTN","DGPFHLUT",98,0)
 . E  S DGARR(DGCNT)=DGTXT
"RTN","DGPFHLUT",99,0)
 Q DGCNT
"RTN","DGPFHLUT",100,0)
 ;
"RTN","DGPFHLUT",101,0)
NXTSEG(DGROOT,DGCURR,DGFS,DGFLD) ;retrieves next sequential segment
"RTN","DGPFHLUT",102,0)
 ; This function retrieves the next segment in the work global, returns
"RTN","DGPFHLUT",103,0)
 ; an array of field values and the segment's work global index.  If
"RTN","DGPFHLUT",104,0)
 ; the next segment does not exist, then the function returns a zero.
"RTN","DGPFHLUT",105,0)
 ;
"RTN","DGPFHLUT",106,0)
 ;  Input:
"RTN","DGPFHLUT",107,0)
 ;    DGROOT - close root name of work global
"RTN","DGPFHLUT",108,0)
 ;    DGCURR - index of current segment
"RTN","DGPFHLUT",109,0)
 ;      DGFS - HL7 field separator character
"RTN","DGPFHLUT",110,0)
 ;
"RTN","DGPFHLUT",111,0)
 ;  Output:
"RTN","DGPFHLUT",112,0)
 ;   Function Value  - index of the next segment on success, 0 on failure
"RTN","DGPFHLUT",113,0)
 ;             DGFLD - array of segment field values
"RTN","DGPFHLUT",114,0)
 ;
"RTN","DGPFHLUT",115,0)
 N NXTSEG
"RTN","DGPFHLUT",116,0)
 ;
"RTN","DGPFHLUT",117,0)
 S DGCURR=DGCURR+1
"RTN","DGPFHLUT",118,0)
 S NXTSEG=$G(@DGROOT@(DGCURR,0))
"RTN","DGPFHLUT",119,0)
 I NXTSEG]"" D
"RTN","DGPFHLUT",120,0)
 . D GETFLDS(NXTSEG,DGFS,.DGFLD)
"RTN","DGPFHLUT",121,0)
 E  D
"RTN","DGPFHLUT",122,0)
 . S DGCURR=0
"RTN","DGPFHLUT",123,0)
 Q DGCURR
"RTN","DGPFHLUT",124,0)
 ;
"RTN","DGPFHLUT",125,0)
GETFLDS(DGSEG,DGFS,DGFLD) ;retrieve HL7 segment fields into an array
"RTN","DGPFHLUT",126,0)
 ;This procedure parses a single HL7 segment and builds an array
"RTN","DGPFHLUT",127,0)
 ;subscripted by the field number that contains the data for that field.
"RTN","DGPFHLUT",128,0)
 ;An additional subscript node, "TYPE" is created containing the segment
"RTN","DGPFHLUT",129,0)
 ;type.
"RTN","DGPFHLUT",130,0)
 ;
"RTN","DGPFHLUT",131,0)
 ;  Input:
"RTN","DGPFHLUT",132,0)
 ;     DGSEG - HL7 segment to parse
"RTN","DGPFHLUT",133,0)
 ;      DGFS - HL7 field separator
"RTN","DGPFHLUT",134,0)
 ;
"RTN","DGPFHLUT",135,0)
 ;  Output:
"RTN","DGPFHLUT",136,0)
 ;    DGFLD - array of segment field values subscripted by field #
"RTN","DGPFHLUT",137,0)
 ;            Example: DGFLD(2)="DOE,JOHN"
"RTN","DGPFHLUT",138,0)
 ;
"RTN","DGPFHLUT",139,0)
 N DGI
"RTN","DGPFHLUT",140,0)
 ;
"RTN","DGPFHLUT",141,0)
 S DGFLD("TYPE")=$P(DGSEG,DGFS)
"RTN","DGPFHLUT",142,0)
 F DGI=2:1:$L(DGSEG,DGFS) D
"RTN","DGPFHLUT",143,0)
 . S DGFLD($S(DGFLD("TYPE")="MSH":DGI,1:DGI-1))=$P(DGSEG,DGFS,DGI)
"RTN","DGPFHLUT",144,0)
 Q
"RTN","DGPFHLUT",145,0)
 ;
"RTN","DGPFHLUT",146,0)
STRIPTS(DGSTR) ;Strip trailing spaces from a line of text
"RTN","DGPFHLUT",147,0)
 ;
"RTN","DGPFHLUT",148,0)
 ;  Input:
"RTN","DGPFHLUT",149,0)
 ;    DGSTR - Text string
"RTN","DGPFHLUT",150,0)
 ;
"RTN","DGPFHLUT",151,0)
 ;  Output:
"RTN","DGPFHLUT",152,0)
 ;   Function Value - Input text string with trailing spaces removed
"RTN","DGPFHLUT",153,0)
 ;
"RTN","DGPFHLUT",154,0)
 N SPACE
"RTN","DGPFHLUT",155,0)
 S SPACE=$C(32)
"RTN","DGPFHLUT",156,0)
 F  Q:$E(DGSTR,$L(DGSTR))'=SPACE  S DGSTR=$E(DGSTR,1,$L(DGSTR)-1)
"RTN","DGPFHLUT",157,0)
 Q DGSTR
"RTN","DGPFHLUT",158,0)
 ;
"RTN","DGPFHLUT",159,0)
BLDSEG(DGTYP,DGVAL,DGHL) ;generic segment builder
"RTN","DGPFHLUT",160,0)
 ;
"RTN","DGPFHLUT",161,0)
 ;  Input:
"RTN","DGPFHLUT",162,0)
 ;    DGTYP - segment type
"RTN","DGPFHLUT",163,0)
 ;    DGVAL - field data array [SUB1:field, SUB2:repetition,
"RTN","DGPFHLUT",164,0)
 ;                              SUB3:component, SUB4:sub-component] 
"RTN","DGPFHLUT",165,0)
 ;     DGHL - HL7 environment array
"RTN","DGPFHLUT",166,0)
 ;
"RTN","DGPFHLUT",167,0)
 ;  Output:
"RTN","DGPFHLUT",168,0)
 ;   Function Value - Formatted HL7 segment on success, "" on failure
"RTN","DGPFHLUT",169,0)
 ;
"RTN","DGPFHLUT",170,0)
 N DGCMP     ;component subscript
"RTN","DGPFHLUT",171,0)
 N DGCMPVAL  ;component value
"RTN","DGPFHLUT",172,0)
 N DGFLD     ;field subscript
"RTN","DGPFHLUT",173,0)
 N DGFLDVAL  ;field value
"RTN","DGPFHLUT",174,0)
 N DGREP     ;repetition subscript
"RTN","DGPFHLUT",175,0)
 N DGREPVAL  ;repetition value
"RTN","DGPFHLUT",176,0)
 N DGSUB     ;sub-component subscript
"RTN","DGPFHLUT",177,0)
 N DGSUBVAL  ;sub-component value
"RTN","DGPFHLUT",178,0)
 N DGFS      ;field separator
"RTN","DGPFHLUT",179,0)
 N DGCS      ;component separator
"RTN","DGPFHLUT",180,0)
 N DGRS      ;repetition separator
"RTN","DGPFHLUT",181,0)
 N DGSS      ;sub-component separator
"RTN","DGPFHLUT",182,0)
 N DGSEG
"RTN","DGPFHLUT",183,0)
 N DGSEP
"RTN","DGPFHLUT",184,0)
 ;
"RTN","DGPFHLUT",185,0)
 Q:($G(DGTYP)']"") ""
"RTN","DGPFHLUT",186,0)
 ;
"RTN","DGPFHLUT",187,0)
 S DGSEG=DGTYP
"RTN","DGPFHLUT",188,0)
 S DGFS=DGHL("FS")
"RTN","DGPFHLUT",189,0)
 S DGCS=$E(DGHL("ECH"))
"RTN","DGPFHLUT",190,0)
 S DGRS=$E(DGHL("ECH"),2)
"RTN","DGPFHLUT",191,0)
 S DGSS=$E(DGHL("ECH"),4)
"RTN","DGPFHLUT",192,0)
 ;
"RTN","DGPFHLUT",193,0)
 F DGFLD=1:1:$O(DGVAL(""),-1) D
"RTN","DGPFHLUT",194,0)
 . S DGFLDVAL=$G(DGVAL(DGFLD)),DGSEP=DGFS
"RTN","DGPFHLUT",195,0)
 . D ADD(DGFLDVAL,DGSEP,.DGSEG)
"RTN","DGPFHLUT",196,0)
 . F DGREP=1:1:$O(DGVAL(DGFLD,""),-1)  D
"RTN","DGPFHLUT",197,0)
 . . S DGREPVAL=$G(DGVAL(DGFLD,DGREP))
"RTN","DGPFHLUT",198,0)
 . . S DGSEP=$S(DGREP=1:"",1:DGRS)
"RTN","DGPFHLUT",199,0)
 . . D ADD(DGREPVAL,DGSEP,.DGSEG)
"RTN","DGPFHLUT",200,0)
 . . F DGCMP=1:1:$O(DGVAL(DGFLD,DGREP,""),-1) D
"RTN","DGPFHLUT",201,0)
 . . . S DGCMPVAL=$G(DGVAL(DGFLD,DGREP,DGCMP))
"RTN","DGPFHLUT",202,0)
 . . . S DGSEP=$S(DGCMP=1:"",1:DGCS)
"RTN","DGPFHLUT",203,0)
 . . . D ADD(DGCMPVAL,DGSEP,.DGSEG)
"RTN","DGPFHLUT",204,0)
 . . . F DGSUB=1:1:$O(DGVAL(DGFLD,DGREP,DGCMP,""),-1) D
"RTN","DGPFHLUT",205,0)
 . . . . S DGSUBVAL=$G(DGVAL(DGFLD,DGREP,DGCMP,DGSUB))
"RTN","DGPFHLUT",206,0)
 . . . . S DGSEP=$S(DGSUB=1:"",1:DGSS)
"RTN","DGPFHLUT",207,0)
 . . . . D ADD(DGSUBVAL,DGSEP,.DGSEG)
"RTN","DGPFHLUT",208,0)
 Q DGSEG
"RTN","DGPFHLUT",209,0)
 ;
"RTN","DGPFHLUT",210,0)
ADD(DGVAL,DGSEP,DGSEG) ;append a value onto segment
"RTN","DGPFHLUT",211,0)
 ;
"RTN","DGPFHLUT",212,0)
 ;  Input:
"RTN","DGPFHLUT",213,0)
 ;    DGVAL - value to append
"RTN","DGPFHLUT",214,0)
 ;    DGSEP - HL7 separator
"RTN","DGPFHLUT",215,0)
 ;
"RTN","DGPFHLUT",216,0)
 ;  Output:
"RTN","DGPFHLUT",217,0)
 ;    DGSEG - segment passed by reference
"RTN","DGPFHLUT",218,0)
 ;
"RTN","DGPFHLUT",219,0)
 S DGSEP=$G(DGSEP)
"RTN","DGPFHLUT",220,0)
 S DGVAL=$G(DGVAL)
"RTN","DGPFHLUT",221,0)
 S DGSEG=DGSEG_DGSEP_DGVAL
"RTN","DGPFHLUT",222,0)
 Q
"RTN","DGPFHLUT",223,0)
 ;
"RTN","DGPFHLUT",224,0)
CKSTR(DGFLDS,DGSTR) ;validate comma-delimited HL7 field string
"RTN","DGPFHLUT",225,0)
 ;
"RTN","DGPFHLUT",226,0)
 ;  Input:
"RTN","DGPFHLUT",227,0)
 ;    DGFLDS - (required) comma delimited string of required fields
"RTN","DGPFHLUT",228,0)
 ;    DGSTR - (optional) comma delimited string of fields to include
"RTN","DGPFHLUT",229,0)
 ;            in an HL7 segment.
"RTN","DGPFHLUT",230,0)
 ;
"RTN","DGPFHLUT",231,0)
 ;  Output:
"RTN","DGPFHLUT",232,0)
 ;   Function Value - validated string of fields
"RTN","DGPFHLUT",233,0)
 ;
"RTN","DGPFHLUT",234,0)
 N DGI     ;generic index
"RTN","DGPFHLUT",235,0)
 N DGREQ   ;required field
"RTN","DGPFHLUT",236,0)
 ;
"RTN","DGPFHLUT",237,0)
 Q:($G(DGFLDS)']"") ""
"RTN","DGPFHLUT",238,0)
 S DGSTR=$G(DGSTR)
"RTN","DGPFHLUT",239,0)
 F DGI=1:1 S DGREQ=$P(DGFLDS,",",DGI) Q:DGREQ=""  D
"RTN","DGPFHLUT",240,0)
 . I ","_DGSTR_","'[(","_DGREQ_",") S DGSTR=DGSTR_$S($L(DGSTR)>0:",",1:"")_DGREQ
"RTN","DGPFHLUT",241,0)
 Q DGSTR
"RTN","DGPFHLUT",242,0)
 ;
"RTN","DGPFHLUT",243,0)
CONVMID(DGID) ;convert #772 msgid to #773 msgid
"RTN","DGPFHLUT",244,0)
 ;This function takes the HL7 message ID from the DIRECT^HLMA API result,
"RTN","DGPFHLUT",245,0)
 ;which is based on the HL7 MESSAGE TEXT (#772) file IEN and converts it
"RTN","DGPFHLUT",246,0)
 ;into a message ID based on the HL7 MESSAGE ADMINISTRATION (#773) file.
"RTN","DGPFHLUT",247,0)
 ;
"RTN","DGPFHLUT",248,0)
 ;  Integration Agreements:
"RTN","DGPFHLUT",249,0)
 ;    #4564 - allows access to the "C" index of HL7 MESSAGE TEXT (#772)
"RTN","DGPFHLUT",250,0)
 ;    #4669 - allows access to the "B" index and MESSAGE ID (#2) field
"RTN","DGPFHLUT",251,0)
 ;            of HL7 MESSAGE ADMINISTRATION (#773) file.
"RTN","DGPFHLUT",252,0)
 ;  Input:
"RTN","DGPFHLUT",253,0)
 ;    DGID - HL7 message id returned from DIRECT^HLMA
"RTN","DGPFHLUT",254,0)
 ;
"RTN","DGPFHLUT",255,0)
 ;  Output:
"RTN","DGPFHLUT",256,0)
 ;    Function value - returns HL7 message control ID from HL MESSAGE
"RTN","DGPFHLUT",257,0)
 ;                     ADMINISTRATION (#773) file on success;
"RTN","DGPFHLUT",258,0)
 ;                     0 on failure
"RTN","DGPFHLUT",259,0)
 ;
"RTN","DGPFHLUT",260,0)
 N DG772  ;HL7 MESSAGE TEXT (#772) file IEN
"RTN","DGPFHLUT",261,0)
 N DG773  ;HL7 MESSAGE ADMINISTRATION (#773) file IEN
"RTN","DGPFHLUT",262,0)
 N DGERR  ;FM error array
"RTN","DGPFHLUT",263,0)
 N DGMCID  ;message ID
"RTN","DGPFHLUT",264,0)
 ;
"RTN","DGPFHLUT",265,0)
 S DG772=+$O(^HL(772,"C",+$G(DGID),0))
"RTN","DGPFHLUT",266,0)
 S DG773=+$O(^HLMA("B",DG772,0))
"RTN","DGPFHLUT",267,0)
 S DGMCID=+$$GET1^DIQ(773,DG773_",",2,"I","","DGERR")
"RTN","DGPFHLUT",268,0)
 Q $S(DGMCID&('$D(DGERR)):DGMCID,1:0)
"RTN","DGPFHLUT",269,0)
 ;
"RTN","DGPFHLUT",270,0)
ENCHL7(STR) ; Encode HL7 escape sequences in a string
"RTN","DGPFHLUT",271,0)
 ;
"RTN","DGPFHLUT",272,0)
 ; Input:
"RTN","DGPFHLUT",273,0)
 ; STR = string possibly containing HL7 encoding chars
"RTN","DGPFHLUT",274,0)
 ;
"RTN","DGPFHLUT",275,0)
 ; HLFS and HLECH are assumed to be already initialized by HL7 (call to INIT^HLFNC2)
"RTN","DGPFHLUT",276,0)
 ;
"RTN","DGPFHLUT",277,0)
 ; Returns string with encoded escape seqs as follows:
"RTN","DGPFHLUT",278,0)
 ;  field separator (HLFS) --> \F\
"RTN","DGPFHLUT",279,0)
 ;  component separator (HLECH-1) --> \S\
"RTN","DGPFHLUT",280,0)
 ;  repetition separator (HLECH-2) --> \R\
"RTN","DGPFHLUT",281,0)
 ;  escape character (HLECH-3) --> \E\
"RTN","DGPFHLUT",282,0)
 ;  subcomponent separator (HLECH-4) --> \T\
"RTN","DGPFHLUT",283,0)
 ;
"RTN","DGPFHLUT",284,0)
 N CHR,CHRSTR,CNT,ESC,FLG,NEW,RPLC,Z1,Z2
"RTN","DGPFHLUT",285,0)
 ;
"RTN","DGPFHLUT",286,0)
 S ESC=$E(HLECH,3) ; escape character
"RTN","DGPFHLUT",287,0)
 S CHRSTR=HLFS_HLECH,FLG=0 F Z1=1:1:5 S CHR=$E(CHRSTR,Z1),CNT=$L(STR,CHR) I CNT>1 D
"RTN","DGPFHLUT",288,0)
 .S NEW=$P(STR,CHR)
"RTN","DGPFHLUT",289,0)
 .S RPLC=$C(26)_$TR(CHR,CHRSTR,"FSRET")_$C(26)
"RTN","DGPFHLUT",290,0)
 .F Z2=2:1:CNT S NEW=NEW_RPLC_$P(STR,CHR,Z2)
"RTN","DGPFHLUT",291,0)
 .S STR=NEW
"RTN","DGPFHLUT",292,0)
 .S FLG=1 ; flag to indicate that at least one escape sequence was encoded
"RTN","DGPFHLUT",293,0)
 .Q
"RTN","DGPFHLUT",294,0)
 S:FLG STR=$TR(STR,$C(26),ESC)
"RTN","DGPFHLUT",295,0)
 Q STR
"RTN","DGPFHLUT",296,0)
 ;
"RTN","DGPFHLUT",297,0)
DECHL7(STR) ; Decode HL7 escape sequences in a string
"RTN","DGPFHLUT",298,0)
 ;
"RTN","DGPFHLUT",299,0)
 ; Input:
"RTN","DGPFHLUT",300,0)
 ; STR = string possibly containing HL7 escape sequences for encoding chars
"RTN","DGPFHLUT",301,0)
 ;
"RTN","DGPFHLUT",302,0)
 ; HLFS and HLECH are assumed to be already initialized by HL7 (call to INIT^HLFNC2)
"RTN","DGPFHLUT",303,0)
 ;
"RTN","DGPFHLUT",304,0)
 ; Returns string with decoded escape seqs as follows:
"RTN","DGPFHLUT",305,0)
 ;  \F\ --> field separator (HLFS)
"RTN","DGPFHLUT",306,0)
 ;  \S\ --> component separator (HLECH-1)
"RTN","DGPFHLUT",307,0)
 ;  \R\ --> repetition separator (HLECH-2)
"RTN","DGPFHLUT",308,0)
 ;  \E\ --> escape character (HLECH-3)
"RTN","DGPFHLUT",309,0)
 ;  \T\ --> subcomponent separator (HLECH-4)
"RTN","DGPFHLUT",310,0)
 ;
"RTN","DGPFHLUT",311,0)
 ; Note: if any of HL7 encoding characters is "^", it gets replaced with a single space
"RTN","DGPFHLUT",312,0)
 ;       in order to prevent filing problems.
"RTN","DGPFHLUT",313,0)
 ;
"RTN","DGPFHLUT",314,0)
 N ECHARS,ECODE,ESC,LEN,PAT,PCE,REPL
"RTN","DGPFHLUT",315,0)
 ;
"RTN","DGPFHLUT",316,0)
 ; Replace ^ with a single space to prevent filing problems
"RTN","DGPFHLUT",317,0)
 S ECHARS=$TR(HLECH,"^"," ")
"RTN","DGPFHLUT",318,0)
 S ESC=$E(ECHARS,3) ; escape character
"RTN","DGPFHLUT",319,0)
 ; Check for escape sequences, quit if none found
"RTN","DGPFHLUT",320,0)
 I STR'[ESC Q STR
"RTN","DGPFHLUT",321,0)
 ; Array of rep. chars
"RTN","DGPFHLUT",322,0)
 S REPL("F")=$S(HLFS="^":" ",1:HLFS) ;Field delimiter
"RTN","DGPFHLUT",323,0)
 S REPL("S")=$E(ECHARS)              ;Comp. delimiter
"RTN","DGPFHLUT",324,0)
 S REPL("R")=$E(ECHARS,2)            ;Rep. delimiter
"RTN","DGPFHLUT",325,0)
 ; Temp. replace w/ASC 26, until after other ESC are stripped
"RTN","DGPFHLUT",326,0)
 S REPL("E")=$C(26)                  ;Esc. char
"RTN","DGPFHLUT",327,0)
 S REPL("T")=$E(ECHARS,4)            ;Subcomp. delimiter
"RTN","DGPFHLUT",328,0)
 ; Translate escape seqs left to right
"RTN","DGPFHLUT",329,0)
 S LEN=$L(STR,ESC) F PCE=1:1:(LEN-1)\2 D
"RTN","DGPFHLUT",330,0)
 .; Ignore empty or unrecognized escape sequences
"RTN","DGPFHLUT",331,0)
 .S ECODE=$P(STR,ESC,2) I ECODE="" S ECODE="XXXX"
"RTN","DGPFHLUT",332,0)
 .I $D(REPL(ECODE))'>0 S STR=$P(STR,ESC)_$C(26)_$P(STR,ESC,2)_$C(26)_$P(STR,ESC,3,LEN) Q
"RTN","DGPFHLUT",333,0)
 .; Else, replace escape sequence with encoding character
"RTN","DGPFHLUT",334,0)
 .S STR=$P(STR,ESC)_$G(REPL(ECODE))_$P(STR,ESC,3,LEN)
"RTN","DGPFHLUT",335,0)
 ;Replace the decoded ESC chars that were actually sent
"RTN","DGPFHLUT",336,0)
 S STR=$TR(STR,$C(26),ESC)
"RTN","DGPFHLUT",337,0)
 Q STR
"RTN","DGPFLMA2")
0^2^B95827931^B58607996
"RTN","DGPFLMA2",1,0)
DGPFLMA2 ;ALB/KCL - PRF ASSIGNMENT LM PROTOCOL ACTIONS CONT. ; 6/12/06 12:46pm
"RTN","DGPFLMA2",2,0)
 ;;5.3;Registration;**425,623,554,650,864,951**;Aug 13, 1993;Build 135
"RTN","DGPFLMA2",3,0)
 ;    Last edited: SHRPE/SGM - Nov 9, 2018 12:44
"RTN","DGPFLMA2",4,0)
 ;
"RTN","DGPFLMA2",5,0)
 QUIT
"RTN","DGPFLMA2",6,0)
 ; ICR#  TYPE  DESCRIPTION
"RTN","DGPFLMA2",7,0)
 ;-----  ----  -------------------------
"RTN","DGPFLMA2",8,0)
 ; 2050  Sup   ^DIALOG: BLD, MSG
"RTN","DGPFLMA2",9,0)
 ; 2054  Sup   $$OREF^DILF
"RTN","DGPFLMA2",10,0)
 ; 2055  Sup   $$EXTERNAL^DILFD
"RTN","DGPFLMA2",11,0)
 ; 2056  Sup   $$GET1^DIQ
"RTN","DGPFLMA2",12,0)
 ; 2171  Sup   ^XUAF4: $$NS, $$STA, $$TF
"RTN","DGPFLMA2",13,0)
 ;10028  Sup   EN^DIWE
"RTN","DGPFLMA2",14,0)
 ;10103  Sup   ^XLFDT: $$FMTE, $$NOW
"RTN","DGPFLMA2",15,0)
 ;10116  Sup   ^VALM1: FULL, PAUSE
"RTN","DGPFLMA2",16,0)
 ;
"RTN","DGPFLMA2",17,0)
AF ;Entry point for DGPF ASSIGN FLAG action protocol.
"RTN","DGPFLMA2",18,0)
 ;
"RTN","DGPFLMA2",19,0)
 ;  Input:
"RTN","DGPFLMA2",20,0)
 ;     DGDFN - pointer to patient in PATIENT (#2) file
"RTN","DGPFLMA2",21,0)
 ;
"RTN","DGPFLMA2",22,0)
 ; Output:
"RTN","DGPFLMA2",23,0)
 ;   VALMBCK - 'R' = refresh screen
"RTN","DGPFLMA2",24,0)
 ;
"RTN","DGPFLMA2",25,0)
 N DIC,DGWPROOT,DIWETXT,DIWESUB,DWLW,DWPK  ;input vars for EN^DIWE call
"RTN","DGPFLMA2",26,0)
 N DGABORT   ;abort flag for entering assignment narrative
"RTN","DGPFLMA2",27,0)
 N DGFAC     ;pointer to INSTITUTION (#4) file
"RTN","DGPFLMA2",28,0)
 N DGOK      ;ok flag for entering assignment narrative
"RTN","DGPFLMA2",29,0)
 N DGPFA     ;assignment array
"RTN","DGPFLMA2",30,0)
 N DGPFAH    ;assignment history array
"RTN","DGPFLMA2",31,0)
 N DGRDAT    ;results of review date calculation
"RTN","DGPFLMA2",32,0)
 N DGRESULT  ;result of STOALL api call
"RTN","DGPFLMA2",33,0)
 N DGERR     ;if unable to add assignment
"RTN","DGPFLMA2",34,0)
 N DGPFERR   ;if error returned from STOALL
"RTN","DGPFLMA2",35,0)
 N PRFIEN    ;PRF IEN from file 26.15 dg*5.3*864
"RTN","DGPFLMA2",36,0)
 N PRFNAME   ;PRF NAME (.01) field dg*5.3*864
"RTN","DGPFLMA2",37,0)
 ;
"RTN","DGPFLMA2",38,0)
 ;set screen to full scroll region
"RTN","DGPFLMA2",39,0)
 D FULL^VALM1
"RTN","DGPFLMA2",40,0)
 ;
"RTN","DGPFLMA2",41,0)
 ;quit if patient not selected
"RTN","DGPFLMA2",42,0)
 I '$G(DGDFN) D  Q
"RTN","DGPFLMA2",43,0)
 . D BLD^DIALOG(261129,"Patient has not been selected.","","DGERR","F")
"RTN","DGPFLMA2",44,0)
 . D MSG^DIALOG("WE","","","","DGERR") W *7
"RTN","DGPFLMA2",45,0)
 . D PAUSE^VALM1
"RTN","DGPFLMA2",46,0)
 . S VALMBCK="R"
"RTN","DGPFLMA2",47,0)
 ;
"RTN","DGPFLMA2",48,0)
 ;is user's DUZ(2) an enabled Division for PRF ASSIGNMENT OWNERSHIP
"RTN","DGPFLMA2",49,0)
 I '$D(^DG(40.8,"APRF",+$G(DUZ(2)))) D  Q
"RTN","DGPFLMA2",50,0)
 . D BLD^DIALOG(261129,"Your Division, "_$$STA^XUAF4($G(DUZ(2)))_", is not enabled for PRF Assignment Ownership.","","DGERR","F")
"RTN","DGPFLMA2",51,0)
 . D MSG^DIALOG("WE","","","","DGERR") W *7
"RTN","DGPFLMA2",52,0)
 . D PAUSE^VALM1
"RTN","DGPFLMA2",53,0)
 . S VALMBCK="R"
"RTN","DGPFLMA2",54,0)
 ;
"RTN","DGPFLMA2",55,0)
 D  ;drops out of DO block on assignment failure
"RTN","DGPFLMA2",56,0)
 . ;
"RTN","DGPFLMA2",57,0)
 . ;init assignment and history arrays
"RTN","DGPFLMA2",58,0)
 . K DGPFA,DGPFAH
"RTN","DGPFLMA2",59,0)
 . ;
"RTN","DGPFLMA2",60,0)
 . ;get patient DFN into assignment array
"RTN","DGPFLMA2",61,0)
 . S DGPFA("DFN")=$G(DGDFN)
"RTN","DGPFLMA2",62,0)
 . Q:'DGPFA("DFN")
"RTN","DGPFLMA2",63,0)
 . ;
"RTN","DGPFLMA2",64,0)
 . ;select flag for assignment
"RTN","DGPFLMA2",65,0)
 . S DGPFA("FLAG")=$$ANSWER^DGPFUT("Select a flag for this assignment","","26.13,.02")
"RTN","DGPFLMA2",66,0)
 . Q:(DGPFA("FLAG")'>0)
"RTN","DGPFLMA2",67,0)
 . ; Urgent    Address is Female,check if user has programmer access dg*5.3*864.
"RTN","DGPFLMA2",68,0)
 . N PRFIEN,PRFNAME,PRFNAT
"RTN","DGPFLMA2",69,0)
 . S PRFNAT="" I $P(DGPFA("FLAG"),";",2)="DGPF(26.15," S PRFNAT=1
"RTN","DGPFLMA2",70,0)
 . S PRFIEN="" I PRFNAT=1 S PRFIEN=$P(DGPFA("FLAG"),";")
"RTN","DGPFLMA2",71,0)
 . S PRFNAME="" I PRFIEN'="" S PRFNAME=$$GET1^DIQ(26.15,PRFIEN,.01)
"RTN","DGPFLMA2",72,0)
 . I PRFNAME="URGENT    ADDRESS AS FEMALE"&(DUZ("0")'="@") D  Q
"RTN","DGPFLMA2",73,0)
 . . W !!!,"The URGENT    ADDRESS AS FEMALE National Flag is limited to purposes"
"RTN","DGPFLMA2",74,0)
 . . W !,"authorized by the Undersecretary for Health only."
"RTN","DGPFLMA2",75,0)
 . . W !!!
"RTN","DGPFLMA2",76,0)
 . . D PAUSE^VALM1
"RTN","DGPFLMA2",77,0)
 . ;
"RTN","DGPFLMA2",78,0)
 . ;National ICN when Cat I assignment?
"RTN","DGPFLMA2",79,0)
 . I $P(DGPFA("FLAG"),U)["26.15",'$$MPIOK^DGPFUT(DGPFA("DFN")) D  Q
"RTN","DGPFLMA2",80,0)
 . . W !!,"Unable to proceed with flag assignment..."
"RTN","DGPFLMA2",81,0)
 . . D BLD^DIALOG(261132,"","","DGERR","F")
"RTN","DGPFLMA2",82,0)
 . . D MSG^DIALOG("WE","","","","DGERR") W *7
"RTN","DGPFLMA2",83,0)
 . . D PAUSE^VALM1
"RTN","DGPFLMA2",84,0)
 . ;
"RTN","DGPFLMA2",85,0)
 . ;run query for Cat I assignments
"RTN","DGPFLMA2",86,0)
 . I $P(DGPFA("FLAG"),U)["26.15",$$GETSTAT^DGPFHLL1(DGDFN)'="C" D
"RTN","DGPFLMA2",87,0)
 . . N DGDIFF ;   difference between pre and post query count
"RTN","DGPFLMA2",88,0)
 . . N DGFLGCNT ; total count of Cat I flags
"RTN","DGPFLMA2",89,0)
 . . N DGMSG ;    temp array for messages
"RTN","DGPFLMA2",90,0)
 . . N DGPRECNT ; pre-query count of Cat I assignments
"RTN","DGPFLMA2",91,0)
 . . N DGPSTCNT ; post-query count of Cat I assignments
"RTN","DGPFLMA2",92,0)
 . . N L,X
"RTN","DGPFLMA2",93,0)
 . . ;
"RTN","DGPFLMA2",94,0)
 . . ;get count of current assignments
"RTN","DGPFLMA2",95,0)
 . . S (DGPRECNT,DGPSTCNT)=$$GETALL^DGPFAA(DGDFN,,,1)
"RTN","DGPFLMA2",96,0)
 . . ;
"RTN","DGPFLMA2",97,0)
 . . ;get total count of possible Category I flags
"RTN","DGPFLMA2",98,0)
 . . S DGFLGCNT=$$CNTRECS^DGPFUT1(26.15)
"RTN","DGPFLMA2",99,0)
 . . ;
"RTN","DGPFLMA2",100,0)
 . . ;stop if all flags are assigned
"RTN","DGPFLMA2",101,0)
 . . Q:DGPRECNT=DGFLGCNT
"RTN","DGPFLMA2",102,0)
 . . ;
"RTN","DGPFLMA2",103,0)
 . . ;execute the query...stop on failure
"RTN","DGPFLMA2",104,0)
 . . Q:'$$SNDQRY^DGPFHLS(DGDFN,1,.DGFAC)
"RTN","DGPFLMA2",105,0)
 . . ;
"RTN","DGPFLMA2",106,0)
 . . ;recheck current assignment count
"RTN","DGPFLMA2",107,0)
 . . S DGPSTCNT=$$GETALL^DGPFAA(DGDFN,,,1)
"RTN","DGPFLMA2",108,0)
 . . S DGDIFF=DGPSTCNT-DGPRECNT
"RTN","DGPFLMA2",109,0)
 . . S L=2,DGMSG("DIMSG",1)="   "
"RTN","DGPFLMA2",110,0)
 . . S X="    "_$S(DGDIFF:"One or more",1:"No")
"RTN","DGPFLMA2",111,0)
 . . S X=X_" Category I record flag assignments were "
"RTN","DGPFLMA2",112,0)
 . . S X=X_$S(DGDIFF:"returned",DGPSTCNT:"returned",1:"found.")
"RTN","DGPFLMA2",113,0)
 . . S DGMSG("DIMSG",2)=X
"RTN","DGPFLMA2",114,0)
 . . I DGDIFF!DGPSTCNT D
"RTN","DGPFLMA2",115,0)
 . . . S X="    from "_$P($$NS^XUAF4($G(DGFAC)),U)
"RTN","DGPFLMA2",116,0)
 . . . I DGDIFF S X=X_" and filed on your system."
"RTN","DGPFLMA2",117,0)
 . . . S DGMSG("DIMSG",3)=X,L=3
"RTN","DGPFLMA2",118,0)
 . . . Q
"RTN","DGPFLMA2",119,0)
 . . S L=L+1,DGMSG("DIMSG",L)="   "
"RTN","DGPFLMA2",120,0)
 . . D MSG^DIALOG("MW",,,,"DGMSG")
"RTN","DGPFLMA2",121,0)
 . . ;
"RTN","DGPFLMA2",122,0)
 . . ;re-build list when flag assignments have been added
"RTN","DGPFLMA2",123,0)
 . . I DGDIFF D BLDLIST^DGPFLMU(DGDFN)
"RTN","DGPFLMA2",124,0)
 . ;
"RTN","DGPFLMA2",125,0)
 . ;ok to add new assignment?
"RTN","DGPFLMA2",126,0)
 . I '$$ADDOK^DGPFAA2(DGPFA("DFN"),$P(DGPFA("FLAG"),U),"DGERR") D  Q
"RTN","DGPFLMA2",127,0)
 . . W !!,"Unable to proceed with flag assignment..."
"RTN","DGPFLMA2",128,0)
 . . D MSG^DIALOG("WE","","",5,"DGERR")
"RTN","DGPFLMA2",129,0)
 . . D PAUSE^VALM1
"RTN","DGPFLMA2",130,0)
 . ;
"RTN","DGPFLMA2",131,0)
 . ;prompt for owner site
"RTN","DGPFLMA2",132,0)
 . S DGPFA("OWNER")=$$ANSWER^DGPFUT("Enter Owner Site",$$EXTERNAL^DILFD(26.13,.04,"",DUZ(2),"DGERR"),"P^4:EMZ","","I $D(^DG(40.8,""APRF"",+Y)),$$TF^XUAF4(+Y)")
"RTN","DGPFLMA2",133,0)
 . Q:(DGPFA("OWNER")'>0)
"RTN","DGPFLMA2",134,0)
 . ;
"RTN","DGPFLMA2",135,0)
 . ;prompt user for approved by person, quit if not selected
"RTN","DGPFLMA2",136,0)
 . S DGPFAH("APPRVBY")=$$ANSWER^DGPFUT("Approved By","","P^200:EMZ")
"RTN","DGPFLMA2",137,0)
 . Q:(DGPFAH("APPRVBY")'>0)
"RTN","DGPFLMA2",138,0)
 . ;
"RTN","DGPFLMA2",139,0)
 . ;have user enter assignment narrative text (required)
"RTN","DGPFLMA2",140,0)
 . S (DGABORT,DGOK)=0
"RTN","DGPFLMA2",141,0)
 . S DGWPROOT=$NA(^TMP($J,"DGPFNARR"))
"RTN","DGPFLMA2",142,0)
 . K @DGWPROOT
"RTN","DGPFLMA2",143,0)
 . F  D  Q:(DGOK!DGABORT)
"RTN","DGPFLMA2",144,0)
 . . N I,DGTX
"RTN","DGPFLMA2",145,0)
 . . S I="" ; init. I in order to prevent <UNDEFINED> error in LNQ^DIWE5 (part of EN^DIWE API call)
"RTN","DGPFLMA2",146,0)
 . . W !!,"Enter Narrative Text for this record flag assignment:" ;needed for line editor
"RTN","DGPFLMA2",147,0)
 . . S DIC=$$OREF^DILF(DGWPROOT)
"RTN","DGPFLMA2",148,0)
 . . S DIWETXT="Patient Record Flag - Assignment Narrative Text"
"RTN","DGPFLMA2",149,0)
 . . S DIWESUB="Assignment Narrative Text"
"RTN","DGPFLMA2",150,0)
 . . S DWLW=75 ;max # of chars allowed to be stored on WP global node
"RTN","DGPFLMA2",151,0)
 . . S DWPK=1  ;if line editor, don't join lines
"RTN","DGPFLMA2",152,0)
 . . D EN^DIWE
"RTN","DGPFLMA2",153,0)
 . . I $$CKWP^DGPFUT(DGWPROOT,.DGTX) S DGOK=1
"RTN","DGPFLMA2",154,0)
 . . E  D
"RTN","DGPFLMA2",155,0)
 . . . W !,"Assignment Narrative Text is required!"_$C(7)
"RTN","DGPFLMA2",156,0)
 . . . I $D(DGTX) S I=0 F  S I=$O(DGTX(I)) Q:'I  W !,DGTX(I)
"RTN","DGPFLMA2",157,0)
 . . . I '$$CONTINUE^DGPFUT() S DGABORT=1
"RTN","DGPFLMA2",158,0)
 . . . Q
"RTN","DGPFLMA2",159,0)
 . . Q
"RTN","DGPFLMA2",160,0)
 . . ;
"RTN","DGPFLMA2",161,0)
 . ;quit if required assignment narrative not entered
"RTN","DGPFLMA2",162,0)
 . Q:$G(DGABORT)
"RTN","DGPFLMA2",163,0)
 . ;
"RTN","DGPFLMA2",164,0)
 . ;place assignment narrative text into assignment array
"RTN","DGPFLMA2",165,0)
 . M DGPFA("NARR")=@DGWPROOT K @DGWPROOT
"RTN","DGPFLMA2",166,0)
 . ;
"RTN","DGPFLMA2",167,0)
 . ;setup remaining assignment and history array nodes for filing
"RTN","DGPFLMA2",168,0)
 . S DGPFA("STATUS")=1 ;                active
"RTN","DGPFLMA2",169,0)
 . S DGPFA("ORIGSITE")=DUZ(2) ;         current user's login site
"RTN","DGPFLMA2",170,0)
 . S DGPFAH("ASSIGNDT")=$$NOW^XLFDT ;   current date/time
"RTN","DGPFLMA2",171,0)
 . S DGPFAH("ACTION")=1 ;               new assignment
"RTN","DGPFLMA2",172,0)
 . S DGPFAH("ENTERBY")=DUZ ;            current user
"RTN","DGPFLMA2",173,0)
 . S DGPFAH("ORIGFAC")=+$$SITE^VASITE ; created by site
"RTN","DGPFLMA2",174,0)
 . S DGPFAH("COMMENT",1,0)="New record flag assignment."
"RTN","DGPFLMA2",175,0)
 . ;
"RTN","DGPFLMA2",176,0)
 . ;calculate the default review date
"RTN","DGPFLMA2",177,0)
 . S DGRDAT=$$GETRDT^DGPFAA3($P(DGPFA("FLAG"),U),DGPFAH("ASSIGNDT"))
"RTN","DGPFLMA2",178,0)
 . ;
"RTN","DGPFLMA2",179,0)
 . ;prompt for review date on valid default review date, otherwise null
"RTN","DGPFLMA2",180,0)
 . I DGRDAT>0 D
"RTN","DGPFLMA2",181,0)
 . . N X,XO
"RTN","DGPFLMA2",182,0)
 . . S X=$$FMTE^XLFDT(DGRDAT,"5D")
"RTN","DGPFLMA2",183,0)
 . . S XO="D^"_DT_":"_DGRDAT_":EX"
"RTN","DGPFLMA2",184,0)
 . . S DGPFA("REVIEWDT")=$$ANSWER^DGPFUT("Enter Review Date",X,XO)
"RTN","DGPFLMA2",185,0)
 . . Q
"RTN","DGPFLMA2",186,0)
 . E  S DGPFA("REVIEWDT")=""
"RTN","DGPFLMA2",187,0)
 . Q:DGPFA("REVIEWDT")<0
"RTN","DGPFLMA2",188,0)
 . ;
"RTN","DGPFLMA2",189,0)
 . ;prompt for DBRS# ; DG*5.3*951
"RTN","DGPFLMA2",190,0)
 . D DBRS
"RTN","DGPFLMA2",191,0)
 . ;
"RTN","DGPFLMA2",192,0)
 . ;display flag assignment review screen to user
"RTN","DGPFLMA2",193,0)
 . D REVIEW^DGPFUT3(.DGPFA,.DGPFAH,"",XQY0,XQORNOD(0))
"RTN","DGPFLMA2",194,0)
 . ;
"RTN","DGPFLMA2",195,0)
 . Q:$$ANSWER^DGPFUT("Would you like to file this new record flag assignment","YES","Y")'>0
"RTN","DGPFLMA2",196,0)
 . ;
"RTN","DGPFLMA2",197,0)
 . ;file the assignment and history using STOALL api
"RTN","DGPFLMA2",198,0)
 . W !,"Filing the patient's new record flag assignment..."
"RTN","DGPFLMA2",199,0)
 . S DGRESULT=$$STOALL^DGPFAA(.DGPFA,.DGPFAH,.DGPFERR,"D")
"RTN","DGPFLMA2",200,0)
 . W !?5,"Assignment was "_$S(+$G(DGRESULT):"filed successfully.",1:"not filed successfully.")
"RTN","DGPFLMA2",201,0)
 . ;
"RTN","DGPFLMA2",202,0)
 . ;send HL7 message if adding an assignment to a CAT I flag
"RTN","DGPFLMA2",203,0)
 . I $G(DGRESULT),DGPFA("FLAG")["26.15",$$SNDORU^DGPFHLS(+DGRESULT) D
"RTN","DGPFLMA2",204,0)
 . . W !?5,"Message sent...updating patient's sites of record."
"RTN","DGPFLMA2",205,0)
 . ;
"RTN","DGPFLMA2",206,0)
 . D PAUSE^VALM1
"RTN","DGPFLMA2",207,0)
 . ;
"RTN","DGPFLMA2",208,0)
 . ;re-build list of flag assignments for patient
"RTN","DGPFLMA2",209,0)
 . D BLDLIST^DGPFLMU(DGDFN)
"RTN","DGPFLMA2",210,0)
 . Q
"RTN","DGPFLMA2",211,0)
 ;
"RTN","DGPFLMA2",212,0)
 S VALMBCK="R"
"RTN","DGPFLMA2",213,0)
 ;
"RTN","DGPFLMA2",214,0)
 Q
"RTN","DGPFLMA2",215,0)
 ;---------------------------------------------------------------------
"RTN","DGPFLMA2",216,0)
DBRS() ; DG*951
"RTN","DGPFLMA2",217,0)
 ;Expects:
"RTN","DGPFLMA2",218,0)
 ;   DGPFA() = int^ext  /  PRFNAME = name of flag
"RTN","DGPFLMA2",219,0)
 ;  DGPFAH() = int
"RTN","DGPFLMA2",220,0)
 ;
"RTN","DGPFLMA2",221,0)
 I $G(DGPFA("FLAG"))'["26.15," Q 1
"RTN","DGPFLMA2",222,0)
 I PRFNAME'="BEHAVIORAL" Q 1
"RTN","DGPFLMA2",223,0)
 ;
"RTN","DGPFLMA2",224,0)
 N J,X,DBRS,OUT
"RTN","DGPFLMA2",225,0)
 ;
"RTN","DGPFLMA2",226,0)
 ;   prompt for dbrs# /other
"RTN","DGPFLMA2",227,0)
 S OUT=0 F J=0:0 D  Q:OUT
"RTN","DGPFLMA2",228,0)
 . N L,X,DGNM,DGXA,OTH
"RTN","DGPFLMA2",229,0)
 . ;  build DIR("A") if appropriate
"RTN","DGPFLMA2",230,0)
 . S L=1,DGXA("A",1)="   Disruptive Behavior Report System Number"
"RTN","DGPFLMA2",231,0)
 . I $D(DBRS) D
"RTN","DGPFLMA2",232,0)
 . . N X,Y,SCR
"RTN","DGPFLMA2",233,0)
 . . S L=L+1
"RTN","DGPFLMA2",234,0)
 . . S DGXA("A",L)="The following DBRS Numbers have already been entered:"
"RTN","DGPFLMA2",235,0)
 . . S (X,Y)="" F  S X=$O(DBRS(X)) Q:X=""  D
"RTN","DGPFLMA2",236,0)
 . . . S Y=Y_$E(X_"                    ",1,20)
"RTN","DGPFLMA2",237,0)
 . . . I $L(Y)>60 S L=L+1,DGXA("A",L)=Y,Y=""
"RTN","DGPFLMA2",238,0)
 . . . Q
"RTN","DGPFLMA2",239,0)
 . . I $L(Y) S L=L+1,DGXA("A",L)=Y
"RTN","DGPFLMA2",240,0)
 . . S L=L+1,DGXA("A",L)="   "
"RTN","DGPFLMA2",241,0)
 . . Q
"RTN","DGPFLMA2",242,0)
 . S L=L+1,DGXA("A",L)="   "
"RTN","DGPFLMA2",243,0)
 . S DGXA="Enter DBRS Number"
"RTN","DGPFLMA2",244,0)
 . S SCR="26.131,.01Or^^S:X?.E1L.E X=$$UP^XLFSTR(X) K:$D(DBRS(X))!($$DBRSNO^DGPFUT6(X)<0) X"
"RTN","DGPFLMA2",245,0)
 . W ! S DGNM=$$ANSWER^DGPFUT(.DGXA,,SCR)
"RTN","DGPFLMA2",246,0)
 . I (DGNM<0)!("@"[DGNM) S OUT=1 Q
"RTN","DGPFLMA2",247,0)
 . ;
"RTN","DGPFLMA2",248,0)
 . S OTH=$$ANSWER^DGPFUT("DBRS Other",,"26.131,.02")
"RTN","DGPFLMA2",249,0)
 . S OTH=$S(OTH=-1:"",OTH="@":"",1:OTH)
"RTN","DGPFLMA2",250,0)
 . S DBRS(DGNM)=OTH
"RTN","DGPFLMA2",251,0)
 . Q
"RTN","DGPFLMA2",252,0)
 ;
"RTN","DGPFLMA2",253,0)
 ;  set up DGPFA() and DGPFAH()
"RTN","DGPFLMA2",254,0)
 I $D(DBRS) D
"RTN","DGPFLMA2",255,0)
 . N J,L,Y,DATE,NM,OTH,SITE
"RTN","DGPFLMA2",256,0)
 . S DATE=+$E($$NOW^XLFDT,1,12),$P(DATE,U,2)=$$FMTE^XLFDT(DATE,"1Z")
"RTN","DGPFLMA2",257,0)
 . S SITE=$P($$SITE^VASITE,U,1,2)
"RTN","DGPFLMA2",258,0)
 . S (L,NM)=0 F J=0:0 S NM=$O(DBRS(NM)) Q:NM=""  D
"RTN","DGPFLMA2",259,0)
 . . S L=L+1
"RTN","DGPFLMA2",260,0)
 . . S OTH=DBRS(NM)
"RTN","DGPFLMA2",261,0)
 . . S DGPFA("DBRS#",L)=NM_U_NM
"RTN","DGPFLMA2",262,0)
 . . S DGPFA("DBRS OTHER",L)=OTH_U_OTH
"RTN","DGPFLMA2",263,0)
 . . S DGPFA("DBRS DATE",L)=DATE
"RTN","DGPFLMA2",264,0)
 . . S DGPFA("DBRS SITE",L)=SITE
"RTN","DGPFLMA2",265,0)
 . . S DGPFAH("DBRS",L)=NM_U_OTH_U_(+DATE)_"^A^"_(+SITE)
"RTN","DGPFLMA2",266,0)
 . . ;   all five piece are internal FM format 
"RTN","DGPFLMA2",267,0)
 . . Q
"RTN","DGPFLMA2",268,0)
 . Q
"RTN","DGPFLMA2",269,0)
 Q
"RTN","DGPFLMA3")
0^3^B115226280^B74777125
"RTN","DGPFLMA3",1,0)
DGPFLMA3 ;ALB/KCL - PRF ASSIGNMENT LM PROTOCOL ACTIONS CONT. ; 6/2/05 3:24pm
"RTN","DGPFLMA3",2,0)
 ;;5.3;Registration;**425,623,554,650,864,951**;Aug 13, 1993;Build 135
"RTN","DGPFLMA3",3,0)
 ;     Last Edited: SHRPE/SGM - Sep 25, 2018 17:31
"RTN","DGPFLMA3",4,0)
 ;NOTES:
"RTN","DGPFLMA3",5,0)
 ; 1/23/2018 - with addition of DBRS, when to not complete action
"RTN","DGPFLMA3",6,0)
 ;             changes from previous version.  One can edit DBRS#
"RTN","DGPFLMA3",7,0)
 ;             only with no other changes.
"RTN","DGPFLMA3",8,0)
 ; ICR#  TYPE  DESCRIPTION
"RTN","DGPFLMA3",9,0)
 ;-----  ----  -------------------------------
"RTN","DGPFLMA3",10,0)
 ; 2050  Sup   ^DIALOG: BLD, MSG
"RTN","DGPFLMA3",11,0)
 ; 2051  Sup   UPDATE^DIE
"RTN","DGPFLMA3",12,0)
 ; 2054  Sup   $$OREF^DILF
"RTN","DGPFLMA3",13,0)
 ; 2056  Sup   $$GET1^DIQ
"RTN","DGPFLMA3",14,0)
 ;10028  Sup   EN^DIWE
"RTN","DGPFLMA3",15,0)
 ;10060  Sup   File 200 FM read of all fields
"RTN","DGPFLMA3",16,0)
 ;10103  Sup   ^XLFDT: $$FMTE, $$NOW
"RTN","DGPFLMA3",17,0)
 ;10113  Sup   ^DIK
"RTN","DGPFLMA3",18,0)
 ;10116  Sup   ^VALM1: FULL, PAUSE
"RTN","DGPFLMA3",19,0)
 ;10119  Sup   EN^VALM2
"RTN","DGPFLMA3",20,0)
 ;
"RTN","DGPFLMA3",21,0)
 QUIT
"RTN","DGPFLMA3",22,0)
 ;
"RTN","DGPFLMA3",23,0)
EF ;Entry point for DGPF EDIT ASSIGNMENT action protocol.
"RTN","DGPFLMA3",24,0)
 ;
"RTN","DGPFLMA3",25,0)
 ;  Input: None
"RTN","DGPFLMA3",26,0)
 ;
"RTN","DGPFLMA3",27,0)
 ; Output:
"RTN","DGPFLMA3",28,0)
 ;   VALMBCK - 'R' = refresh screen
"RTN","DGPFLMA3",29,0)
 ;
"RTN","DGPFLMA3",30,0)
 ;input vars for EN^DIWE call
"RTN","DGPFLMA3",31,0)
 N X,Y,DIC,DGWPROOT,DIWETXT,DIWESUB,DWLW,DWPK
"RTN","DGPFLMA3",32,0)
 N DGAROOT   ;assignment narrative word processing root
"RTN","DGPFLMA3",33,0)
 N DGCROOT   ;assignment history comment word processing root
"RTN","DGPFLMA3",34,0)
 N DGABORT   ;abort flag for entering assignment narrative
"RTN","DGPFLMA3",35,0)
 N DGASK     ;return value from $$ANSWER^DGPFUT call
"RTN","DGPFLMA3",36,0)
 N DGOK      ;ok flag for entering assignment narrative
"RTN","DGPFLMA3",37,0)
 N DGCODE    ;action code
"RTN","DGPFLMA3",38,0)
 N DGDFN     ;pointer to patient in PATIENT (#2) file
"RTN","DGPFLMA3",39,0)
 N DGIEN     ;assignment ien
"RTN","DGPFLMA3",40,0)
 N DGPFA     ;assignment array
"RTN","DGPFLMA3",41,0)
 N DGPFAH    ;assignment history array
"RTN","DGPFLMA3",42,0)
 N DGPFERR   ;if error returned from STOALL api call
"RTN","DGPFLMA3",43,0)
 N DGQ       ;quit var for narrative edit
"RTN","DGPFLMA3",44,0)
 N DGRDAT    ;review date
"RTN","DGPFLMA3",45,0)
 N DGRESULT  ;result of STOALL api call
"RTN","DGPFLMA3",46,0)
 N DGERR     ;error if unable to edit assignment
"RTN","DGPFLMA3",47,0)
 N DGETEXT   ;error text
"RTN","DGPFLMA3",48,0)
 N DGSUB     ;for loop var
"RTN","DGPFLMA3",49,0)
 N SEL       ;user selection (list item)
"RTN","DGPFLMA3",50,0)
 N VALMY     ;output of EN^VALM2 call, array of user selected entries
"RTN","DGPFLMA3",51,0)
 ;
"RTN","DGPFLMA3",52,0)
 ;set screen to full scroll region
"RTN","DGPFLMA3",53,0)
 D FULL^VALM1
"RTN","DGPFLMA3",54,0)
 ;
"RTN","DGPFLMA3",55,0)
 ;quit if selected action is not appropriate
"RTN","DGPFLMA3",56,0)
 I '$D(@VALMAR@("IDX")) D  Q
"RTN","DGPFLMA3",57,0)
 . I '$G(DGDFN) S DGETEXT(1)="Patient has not been selected."
"RTN","DGPFLMA3",58,0)
 . E  S DGETEXT(1)="Patient has no record flag assignments."
"RTN","DGPFLMA3",59,0)
 . D BLD^DIALOG(261129,.DGETEXT,"","DGERR","F")
"RTN","DGPFLMA3",60,0)
 . D MSG^DIALOG("WE","","","","DGERR") W $C(7)
"RTN","DGPFLMA3",61,0)
 . D PAUSE^VALM1
"RTN","DGPFLMA3",62,0)
 . S VALMBCK="R"
"RTN","DGPFLMA3",63,0)
 ;
"RTN","DGPFLMA3",64,0)
 ;allow user to select a SINGLE flag assignment for editing
"RTN","DGPFLMA3",65,0)
 S (DGIEN,VALMBCK)=""
"RTN","DGPFLMA3",66,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","DGPFLMA3",67,0)
 ;
"RTN","DGPFLMA3",68,0)
 ;process user selection
"RTN","DGPFLMA3",69,0)
 S SEL=$O(VALMY(""))
"RTN","DGPFLMA3",70,0)
 I SEL,$D(@VALMAR@("IDX",SEL,SEL)) D
"RTN","DGPFLMA3",71,0)
 . N X
"RTN","DGPFLMA3",72,0)
 . S DGIEN=$P($G(@VALMAR@("IDX",SEL,SEL)),U)
"RTN","DGPFLMA3",73,0)
 . S DGDFN=$P($G(@VALMAR@("IDX",SEL,SEL)),U,2)
"RTN","DGPFLMA3",74,0)
 . ;
"RTN","DGPFLMA3",75,0)
 . ;attempt to obtain lock on assignment record
"RTN","DGPFLMA3",76,0)
 . I '$$LOCK^DGPFAA3(DGIEN) D  Q
"RTN","DGPFLMA3",77,0)
 . . W !!,"Record flag assignment currently in use, cannot be edited!"
"RTN","DGPFLMA3",78,0)
 . . D PAUSE^VALM1
"RTN","DGPFLMA3",79,0)
 . ;
"RTN","DGPFLMA3",80,0)
 . ;init word processing arrays 
"RTN","DGPFLMA3",81,0)
 . S DGAROOT=$NA(^TMP($J,"DGPFNARR"))
"RTN","DGPFLMA3",82,0)
 . S DGCROOT=$NA(^TMP($J,"DGPFCMNT"))
"RTN","DGPFLMA3",83,0)
 . K @DGAROOT,@DGCROOT
"RTN","DGPFLMA3",84,0)
 . ;
"RTN","DGPFLMA3",85,0)
 . ;get assignment into DGPFA array
"RTN","DGPFLMA3",86,0)
 . I '$$GETASGN^DGPFAA(DGIEN,.DGPFA,1) D  Q
"RTN","DGPFLMA3",87,0)
 . . W !!,"Unable to retrieve the record flag assignment selected."
"RTN","DGPFLMA3",88,0)
 . . D PAUSE^VALM1
"RTN","DGPFLMA3",89,0)
 . ;
"RTN","DGPFLMA3",90,0)
 . ;urgent address as female flag can't be edited dg*5.3*864
"RTN","DGPFLMA3",91,0)
 . I $P(DGPFA("FLAG"),",",2)="^URGENT    ADDRESS AS FEMALE" D  Q
"RTN","DGPFLMA3",92,0)
 . . W !!
"RTN","DGPFLMA3",93,0)
 . . W !!,"The URGENT    ADDRESS AS FEMALE Flag assignment cannot be edited."
"RTN","DGPFLMA3",94,0)
 . . W !!
"RTN","DGPFLMA3",95,0)
 . . D PAUSE^VALM1
"RTN","DGPFLMA3",96,0)
 . ;
"RTN","DGPFLMA3",97,0)
 . ;is assignment edit allowed?
"RTN","DGPFLMA3",98,0)
 . I '$$EDTOK^DGPFAA2(.DGPFA,DUZ(2),"DGERR") D  Q
"RTN","DGPFLMA3",99,0)
 . . W !!,"Assignment can not be edited..."
"RTN","DGPFLMA3",100,0)
 . . D MSG^DIALOG("WE","","",5,"DGERR")
"RTN","DGPFLMA3",101,0)
 . . D PAUSE^VALM1
"RTN","DGPFLMA3",102,0)
 . ;
"RTN","DGPFLMA3",103,0)
 . ;-if assignment is active, set available action codes to Continue
"RTN","DGPFLMA3",104,0)
 . ; and Inactivate; else set code to Reactivate
"RTN","DGPFLMA3",105,0)
 . ;-if Local Flag or PRF Phase 2 active, add Entered in Error code
"RTN","DGPFLMA3",106,0)
 . ;-dg*951 - add DBRS edit option.  This action is worded to allow
"RTN","DGPFLMA3",107,0)
 . ;    for future fields to be added without having to add new
"RTN","DGPFLMA3",108,0)
 . ;    actions.  DBRS edit action only available on actions Continue
"RTN","DGPFLMA3",109,0)
 . ;    and Reactivate
"RTN","DGPFLMA3",110,0)
 . I +DGPFA("STATUS")=1 D
"RTN","DGPFLMA3",111,0)
 . . S DGCODE="S^C:Continue Assignment;I:Inactivate Assignment"
"RTN","DGPFLMA3",112,0)
 . . I $$P2ON^DGPFPARM()!(DGPFA("FLAG")["26.11") S DGCODE=DGCODE_";E:Entered in Error"
"RTN","DGPFLMA3",113,0)
 . . I $P(DGPFA("FLAG"),U,2)="BEHAVIORAL" D  ;          dg*5.3*951
"RTN","DGPFLMA3",114,0)
 . . . S DGCODE=DGCODE_";X:DBRS/Other Field Edit Only"
"RTN","DGPFLMA3",115,0)
 . . . Q
"RTN","DGPFLMA3",116,0)
 . . Q
"RTN","DGPFLMA3",117,0)
 . E  S DGCODE="S^R:Reactivate Assignment"
"RTN","DGPFLMA3",118,0)
 . ;
"RTN","DGPFLMA3",119,0)
 . ;prompt user for assignment action, quit if no action selected
"RTN","DGPFLMA3",120,0)
 . ;"ACTION" will have a value from 1-6 ; dg*951
"RTN","DGPFLMA3",121,0)
 . S X=$$ANSWER^DGPFUT("Select an assignment action","",DGCODE)
"RTN","DGPFLMA3",122,0)
 . Q:(X=-1)
"RTN","DGPFLMA3",123,0)
 . S X=$F("CIREX",X) Q:'X  S DGPFAH("ACTION")=X
"RTN","DGPFLMA3",124,0)
 . ;
"RTN","DGPFLMA3",125,0)
 . ;if assignment action is 'Inactivate' or 'Entered in Error',
"RTN","DGPFLMA3",126,0)
 . ;set status to 'Inactive'. default='Active'
"RTN","DGPFLMA3",127,0)
 . ;if action is DBRS do not change current status; DG*5.3*951
"RTN","DGPFLMA3",128,0)
 . I DGPFAH("ACTION")'=6 D
"RTN","DGPFLMA3",129,0)
 . . S DGPFA("STATUS")=$S(DGPFAH("ACTION")=3:0,DGPFAH("ACTION")=5:0,1:1)
"RTN","DGPFLMA3",130,0)
 . . Q
"RTN","DGPFLMA3",131,0)
 . ;
"RTN","DGPFLMA3",132,0)
 . ;  DBRS ; DG*5.3*951
"RTN","DGPFLMA3",133,0)
 . I $$BEH,'$$EIE I '$$DBRSEDIT^DGPFUT6 Q
"RTN","DGPFLMA3",134,0)
 . ;
"RTN","DGPFLMA3",135,0)
 . ;if action is not 'Inactivate', then prompt user to edit the narr
"RTN","DGPFLMA3",136,0)
 . S (DGABORT,DGOK,DGQ)=0
"RTN","DGPFLMA3",137,0)
 . I 36'[DGPFAH("ACTION") D
"RTN","DGPFLMA3",138,0)
 . . F  D  Q:(DGOK!DGABORT!DGQ)
"RTN","DGPFLMA3",139,0)
 . . . N I,DGTX
"RTN","DGPFLMA3",140,0)
 . . . ; if action code not 'Entered in Error', can't force edit
"RTN","DGPFLMA3",141,0)
 . . . I '$$EIE D  Q:(DGQ!DGABORT)
"RTN","DGPFLMA3",142,0)
 . . . . S DGASK=$$ANSWER^DGPFUT("Would you like to edit the assignment narrative","YES","Y")
"RTN","DGPFLMA3",143,0)
 . . . . I DGASK<0 S DGABORT=1 Q  ;abort edit action
"RTN","DGPFLMA3",144,0)
 . . . . I DGASK'=1 S DGQ=1 Q
"RTN","DGPFLMA3",145,0)
 . . . ;
"RTN","DGPFLMA3",146,0)
 . . . ;--edit narrative - only '5;Entered in Error' Required
"RTN","DGPFLMA3",147,0)
 . . . ;--edit the assignment narrative
"RTN","DGPFLMA3",148,0)
 . . . S DGAROOT=$$GET1^DIQ(26.13,DGIEN,"1","Z",DGAROOT)
"RTN","DGPFLMA3",149,0)
 . . . S DIC=$$OREF^DILF(DGAROOT)
"RTN","DGPFLMA3",150,0)
 . . . S DIWETXT="Patient Record Flag - Assignment Narrative Text"
"RTN","DGPFLMA3",151,0)
 . . . S DIWESUB="Assignment Narrative Text"
"RTN","DGPFLMA3",152,0)
 . . . S DWLW=75 ;max # of chars allowed to be stored on WP global node
"RTN","DGPFLMA3",153,0)
 . . . S DWPK=1  ;if line editor, don't join lines
"RTN","DGPFLMA3",154,0)
 . . . D EN^DIWE
"RTN","DGPFLMA3",155,0)
 . . . I '$$CKWP^DGPFUT(DGAROOT,.DGTX) D  Q
"RTN","DGPFLMA3",156,0)
 . . . . W !,"Assignment Narrative Text is required!"_$C(7)
"RTN","DGPFLMA3",157,0)
 . . . . I $D(DGTX) S I=0 F  S I=$O(DGTX(I)) Q:'I  W !,DGTX(I)
"RTN","DGPFLMA3",158,0)
 . . . . I '$$CONTINUE^DGPFUT() S DGABORT=1
"RTN","DGPFLMA3",159,0)
 . . . . Q
"RTN","DGPFLMA3",160,0)
 . . . ;  if number of text lines not the same, a change was made
"RTN","DGPFLMA3",161,0)
 . . . I $O(DGPFA("NARR",""),-1)'=$O(@DGAROOT@(""),-1) S DGOK=1 Q
"RTN","DGPFLMA3",162,0)
 . . . ;  now check for a difference in text line content
"RTN","DGPFLMA3",163,0)
 . . . S DGSUB=0
"RTN","DGPFLMA3",164,0)
 . . . F  S DGSUB=$O(DGPFA("NARR",DGSUB)) Q:DGSUB=""  D  Q:DGOK
"RTN","DGPFLMA3",165,0)
 . . . . I DGPFA("NARR",DGSUB,0)'=@DGAROOT@(DGSUB,0) S DGOK=1
"RTN","DGPFLMA3",166,0)
 . . . Q:DGOK
"RTN","DGPFLMA3",167,0)
 . . . I 'DGOK,$$EIE D  Q  ;required edit
"RTN","DGPFLMA3",168,0)
 . . . . W !!,"No editing was found to the Narrative text."
"RTN","DGPFLMA3",169,0)
 . . . . W !,"For 'Entered in Error' Action, you must edit the Assignment Narrative Text."_$C(7),!
"RTN","DGPFLMA3",170,0)
 . . . . I '$$CONTINUE^DGPFUT() S DGABORT=1
"RTN","DGPFLMA3",171,0)
 . . . S DGOK=1
"RTN","DGPFLMA3",172,0)
 . . . Q
"RTN","DGPFLMA3",173,0)
 . . Q
"RTN","DGPFLMA3",174,0)
 . ;
"RTN","DGPFLMA3",175,0)
 . Q:$G(DGABORT)
"RTN","DGPFLMA3",176,0)
 . ;
"RTN","DGPFLMA3",177,0)
 . ;if narrative edited, place new narrative into DGPFA array
"RTN","DGPFLMA3",178,0)
 . I $G(DGOK) D
"RTN","DGPFLMA3",179,0)
 . . K DGPFA("NARR")  ;remove old narrative text
"RTN","DGPFLMA3",180,0)
 . . M DGPFA("NARR")=@DGAROOT K @DGAROOT
"RTN","DGPFLMA3",181,0)
 . ;
"RTN","DGPFLMA3",182,0)
 . ;prompt user for 'Approved By' person, quit if not selected
"RTN","DGPFLMA3",183,0)
 . S DGPFAH("APPRVBY")=$$ANSWER^DGPFUT("Approved By","","P^200:EMZ")
"RTN","DGPFLMA3",184,0)
 . Q:(DGPFAH("APPRVBY")'>0)
"RTN","DGPFLMA3",185,0)
 . ;
"RTN","DGPFLMA3",186,0)
 . ;have user enter the edit reason/history comments (required)
"RTN","DGPFLMA3",187,0)
 . ;quit if required edit reason/history comments not entered
"RTN","DGPFLMA3",188,0)
 . S (DGABORT,DGOK)=0
"RTN","DGPFLMA3",189,0)
 . F  D  Q:(DGOK!DGABORT)
"RTN","DGPFLMA3",190,0)
 . . N I,DGTX,DIC,DIWESUB,DIWETXT,DWLW,DWPK
"RTN","DGPFLMA3",191,0)
 . . W !!,"Enter the reason for editing this assignment:"  ;needed for line editor
"RTN","DGPFLMA3",192,0)
 . . S DIC=$$OREF^DILF(DGCROOT)
"RTN","DGPFLMA3",193,0)
 . . S DIWETXT="Patient Record Flag - Edit Reason Text"
"RTN","DGPFLMA3",194,0)
 . . S DIWESUB="Edit Reason Text"
"RTN","DGPFLMA3",195,0)
 . . S DWLW=75 ;max # of chars allowed to be stored on WP global node
"RTN","DGPFLMA3",196,0)
 . . S DWPK=1  ;if line editor, don't join lines
"RTN","DGPFLMA3",197,0)
 . . D EN^DIWE
"RTN","DGPFLMA3",198,0)
 . . I $$CKWP^DGPFUT(DGCROOT,.DGTX) S DGOK=1
"RTN","DGPFLMA3",199,0)
 . . E  D
"RTN","DGPFLMA3",200,0)
 . . . W !,"Edit Reason is required!"_$C(7)
"RTN","DGPFLMA3",201,0)
 . . . I $D(DGTX) S I=0 F  S I=$O(DGTX(I)) Q:'I  W !,DGTX(I)
"RTN","DGPFLMA3",202,0)
 . . . I '$$CONTINUE^DGPFUT() S DGABORT=1
"RTN","DGPFLMA3",203,0)
 . . . Q
"RTN","DGPFLMA3",204,0)
 . . Q
"RTN","DGPFLMA3",205,0)
 . ;
"RTN","DGPFLMA3",206,0)
 . ;quit if required edit reason/history comments not entered
"RTN","DGPFLMA3",207,0)
 . Q:$G(DGABORT)
"RTN","DGPFLMA3",208,0)
 . ;
"RTN","DGPFLMA3",209,0)
 . ; place comments into history array
"RTN","DGPFLMA3",210,0)
 . I 'DGABORT M DGPFAH("COMMENT")=@DGCROOT K @DGCROOT
"RTN","DGPFLMA3",211,0)
 . ;
"RTN","DGPFLMA3",212,0)
 . ;setup remaining assignment history nodes for filing
"RTN","DGPFLMA3",213,0)
 . S DGPFAH("ASSIGNDT")=$$NOW^XLFDT  ;current date/time
"RTN","DGPFLMA3",214,0)
 . S DGPFAH("ENTERBY")=DUZ             ;current user
"RTN","DGPFLMA3",215,0)
 . ;
"RTN","DGPFLMA3",216,0)
 . ;calculate the default review date
"RTN","DGPFLMA3",217,0)
 . S DGRDAT=$$GETRDT^DGPFAA3($P(DGPFA("FLAG"),U),DGPFAH("ASSIGNDT"))
"RTN","DGPFLMA3",218,0)
 . ;
"RTN","DGPFLMA3",219,0)
 . ;prompt for review date when valid default review date and ACTIVE
"RTN","DGPFLMA3",220,0)
 . ;status, otherwise null
"RTN","DGPFLMA3",221,0)
 . ; DG*3.5*951 - for new X action, no review date changes
"RTN","DGPFLMA3",222,0)
 . ;              move pre-DG*5.3*951 code inside first argumentless DO
"RTN","DGPFLMA3",223,0)
 . I DGPFAH("ACTION")<6 D
"RTN","DGPFLMA3",224,0)
 . . I DGRDAT>0,DGPFA("STATUS")=1 D
"RTN","DGPFLMA3",225,0)
 . . . N Y,XDT S Y=$$FMTE^XLFDT(DGRDAT,"5D")
"RTN","DGPFLMA3",226,0)
 . . . S XDT="D^"_DT_":"_DGRDAT_":EX"
"RTN","DGPFLMA3",227,0)
 . . . S DGPFA("REVIEWDT")=$$ANSWER^DGPFUT("Enter Review Date",Y,XDT)
"RTN","DGPFLMA3",228,0)
 . . . Q
"RTN","DGPFLMA3",229,0)
 . . E  S DGPFA("REVIEWDT")=""
"RTN","DGPFLMA3",230,0)
 . . Q
"RTN","DGPFLMA3",231,0)
 . Q:DGPFA("REVIEWDT")<0
"RTN","DGPFLMA3",232,0)
 . ;
"RTN","DGPFLMA3",233,0)
 . ;DG*5.3*951 - update DGPFA() and DGPFAH() as appropriate
"RTN","DGPFLMA3",234,0)
 . I $$EIE D EIEARR
"RTN","DGPFLMA3",235,0)
 . S DGPFA("ACTION")=$P(DGPFAH("ACTION"),U)
"RTN","DGPFLMA3",236,0)
 . ;
"RTN","DGPFLMA3",237,0)
 . ;display flag assignment review screen to user
"RTN","DGPFLMA3",238,0)
 . D REVIEW^DGPFUT3(.DGPFA,.DGPFAH,DGIEN,XQY0,XQORNOD(0))
"RTN","DGPFLMA3",239,0)
 . ;
"RTN","DGPFLMA3",240,0)
 . ;if EIE,Behavioral flag, display warning ; DG*5.3*951
"RTN","DGPFLMA3",241,0)
 . I $$EIE,$$BEH D EIE^DGPFUT6(.DGPFAH)
"RTN","DGPFLMA3",242,0)
 . ;
"RTN","DGPFLMA3",243,0)
 . Q:$$ANSWER^DGPFUT("Would you like to file the assignment changes","YES","Y")'>0
"RTN","DGPFLMA3",244,0)
 . ;
"RTN","DGPFLMA3",245,0)
 . ;file the assignment and history using STOALL api
"RTN","DGPFLMA3",246,0)
 . W !,"Updating the patient's record flag assignment..."
"RTN","DGPFLMA3",247,0)
 . S DGRESULT=$$STOALL^DGPFAA(.DGPFA,.DGPFAH,.DGPFERR,"D")
"RTN","DGPFLMA3",248,0)
 . S X="Assignment was "_$S('DGRESULT:"not ",1:"")_"filed successfully."
"RTN","DGPFLMA3",249,0)
 . W !?5,X
"RTN","DGPFLMA3",250,0)
 . ;
"RTN","DGPFLMA3",251,0)
 . ;send HL7 message if editing assignment to a CAT I flag
"RTN","DGPFLMA3",252,0)
 . I DGRESULT,DGPFA("FLAG")["26.15",$$SNDORU^DGPFHLS(+DGRESULT) D
"RTN","DGPFLMA3",253,0)
 . . W !?5,"Message sent...updating patient's sites of record."
"RTN","DGPFLMA3",254,0)
 . . Q
"RTN","DGPFLMA3",255,0)
 . ;
"RTN","DGPFLMA3",256,0)
 . D PAUSE^VALM1
"RTN","DGPFLMA3",257,0)
 . ;re-build list of flag assignments for patient
"RTN","DGPFLMA3",258,0)
 . D BLDLIST^DGPFLMU(DGDFN)
"RTN","DGPFLMA3",259,0)
 . Q
"RTN","DGPFLMA3",260,0)
 ;
"RTN","DGPFLMA3",261,0)
 ;release lock after edit
"RTN","DGPFLMA3",262,0)
 D UNLOCK^DGPFAA3(DGIEN)
"RTN","DGPFLMA3",263,0)
 ;
"RTN","DGPFLMA3",264,0)
 ;return to LM (refresh screen)
"RTN","DGPFLMA3",265,0)
 S VALMBCK="R"
"RTN","DGPFLMA3",266,0)
 ;
"RTN","DGPFLMA3",267,0)
 Q
"RTN","DGPFLMA3",268,0)
 ;
"RTN","DGPFLMA3",269,0)
BEH() ;
"RTN","DGPFLMA3",270,0)
 N X,Y S X=$G(DGPFA("FLAG"))
"RTN","DGPFLMA3",271,0)
 S Y=0 I X[26.15,$P(X,U,2)="BEHAVIORAL" S Y=1
"RTN","DGPFLMA3",272,0)
 Q Y
"RTN","DGPFLMA3",273,0)
 ;
"RTN","DGPFLMA3",274,0)
EIE() ;  was this action ENTERED IN ERROR
"RTN","DGPFLMA3",275,0)
 Q +$G(DGPFAH("ACTION"))=5
"RTN","DGPFLMA3",276,0)
 ;
"RTN","DGPFLMA3",277,0)
EIEARR ;
"RTN","DGPFLMA3",278,0)
 ;  Reset DGPFA() and DGPFAH() for DBRS EIE action
"RTN","DGPFLMA3",279,0)
 N I,J,X,Y
"RTN","DGPFLMA3",280,0)
 K DGPFAH("DBRS")
"RTN","DGPFLMA3",281,0)
 S (I,J)=0 F  S I=$O(DGPFA("DBRS#",I)) Q:'I  D
"RTN","DGPFLMA3",282,0)
 . S X=$P(DGPFA("DBRS#",I),U)
"RTN","DGPFLMA3",283,0)
 . S $P(X,U,2)=$P($G(DGPFA("DBRS OTHER",I)),U)
"RTN","DGPFLMA3",284,0)
 . S $P(X,U,3)=$P($G(DGPFA("DBRS DATE",I)),U)
"RTN","DGPFLMA3",285,0)
 . S $P(X,U,4)="D"
"RTN","DGPFLMA3",286,0)
 . S $P(X,U,5)=$P($G(DGPFA("DBRS SITE",I)),U)
"RTN","DGPFLMA3",287,0)
 . S J=J+1,DGPFAH("DBRS",J)=X
"RTN","DGPFLMA3",288,0)
 . Q
"RTN","DGPFLMA3",289,0)
 F Y="DBRS#","DBRS DATE","DBRS OTHER","DBRS SITE" K DGPFA(Y)
"RTN","DGPFLMA3",290,0)
 Q
"RTN","DGPFLMA4")
0^39^B45697880^B39834723
"RTN","DGPFLMA4",1,0)
DGPFLMA4 ;ALB/KCL - PRF ASSIGNMENT LM PROTOCOL ACTIONS CONT. ; 10/18/06 9:41am
"RTN","DGPFLMA4",2,0)
 ;;5.3;Registration;**425,554,650,951**;Aug 13, 1993;Build 135
"RTN","DGPFLMA4",3,0)
 ;
"RTN","DGPFLMA4",4,0)
 ;no direct entry
"RTN","DGPFLMA4",5,0)
 Q
"RTN","DGPFLMA4",6,0)
 ;
"RTN","DGPFLMA4",7,0)
 ;
"RTN","DGPFLMA4",8,0)
CO ;Entry point for DGPF CHANGE ASSIGNMENT OWNERSHIP action protocol.
"RTN","DGPFLMA4",9,0)
 ;
"RTN","DGPFLMA4",10,0)
 ;  Input: None
"RTN","DGPFLMA4",11,0)
 ;
"RTN","DGPFLMA4",12,0)
 ; Output:
"RTN","DGPFLMA4",13,0)
 ;   VALMBCK - 'R' = refresh screen
"RTN","DGPFLMA4",14,0)
 ;
"RTN","DGPFLMA4",15,0)
 N DIC,DGWPROOT,DIWETXT,DIWESUB,DWLW,DDWC,DWPK  ;input vars for EN^DIWE 
"RTN","DGPFLMA4",16,0)
 N DGCROOT  ;assignment history comment word processing root
"RTN","DGPFLMA4",17,0)
 N DGABORT  ;abort flag for entering assignment narrative
"RTN","DGPFLMA4",18,0)
 N DGOK     ;ok flag for entering assignment narrative
"RTN","DGPFLMA4",19,0)
 N DGIEN    ;assignment ien
"RTN","DGPFLMA4",20,0)
 N DGINST   ;institution ien
"RTN","DGPFLMA4",21,0)
 N DGPFA    ;assignment array
"RTN","DGPFLMA4",22,0)
 N DGPFAH   ;assignment history array
"RTN","DGPFLMA4",23,0)
 N DGRESULT ;result of STOALL api call
"RTN","DGPFLMA4",24,0)
 N DGERR    ;error if unable to edit assignment
"RTN","DGPFLMA4",25,0)
 N DGETEXT  ;error text
"RTN","DGPFLMA4",26,0)
 N DGPFERR  ;if error returned from STOALL api call
"RTN","DGPFLMA4",27,0)
 N DGOWN    ;valid owner list array
"RTN","DGPFLMA4",28,0)
 N SEL      ;user selection (list item)
"RTN","DGPFLMA4",29,0)
 N VALMY    ;output of EN^VALM2 call, array of user selected entries
"RTN","DGPFLMA4",30,0)
 N DBRSDATA ;array containing DBRS data from file 26.13
"RTN","DGPFLMA4",31,0)
 N DBRSCNT  ;DBRS counter
"RTN","DGPFLMA4",32,0)
 N DBRSNUM  ;DBRS #
"RTN","DGPFLMA4",33,0)
 ;
"RTN","DGPFLMA4",34,0)
 ; set screen to full scroll region
"RTN","DGPFLMA4",35,0)
 D FULL^VALM1
"RTN","DGPFLMA4",36,0)
 ; quit if selected action is not appropriate
"RTN","DGPFLMA4",37,0)
 I '$D(@VALMAR@("IDX")) D  Q
"RTN","DGPFLMA4",38,0)
 .S DGETEXT(1)="Patient has no record flag assignments."
"RTN","DGPFLMA4",39,0)
 .I '$G(DGDFN) S DGETEXT(1)="Patient has not been selected."
"RTN","DGPFLMA4",40,0)
 .D BLD^DIALOG(261129,.DGETEXT,"","DGERR","F")
"RTN","DGPFLMA4",41,0)
 .D MSG^DIALOG("WE","","","","DGERR") W *7
"RTN","DGPFLMA4",42,0)
 .D PAUSE^VALM1
"RTN","DGPFLMA4",43,0)
 .S VALMBCK="R"
"RTN","DGPFLMA4",44,0)
 .Q
"RTN","DGPFLMA4",45,0)
 ; allow user to select a SINGLE flag assignment for ownership change
"RTN","DGPFLMA4",46,0)
 S (DGIEN,VALMBCK)=""
"RTN","DGPFLMA4",47,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","DGPFLMA4",48,0)
 ; process user selection
"RTN","DGPFLMA4",49,0)
 S SEL=$O(VALMY(""))
"RTN","DGPFLMA4",50,0)
 I SEL,$D(@VALMAR@("IDX",SEL,SEL)) D
"RTN","DGPFLMA4",51,0)
 .S DGIEN=$P($G(@VALMAR@("IDX",SEL,SEL)),U)
"RTN","DGPFLMA4",52,0)
 .S DGDFN=$P($G(@VALMAR@("IDX",SEL,SEL)),U,2)
"RTN","DGPFLMA4",53,0)
 .; attempt to obtain lock on assignment record
"RTN","DGPFLMA4",54,0)
 .I '$$LOCK^DGPFAA3(DGIEN) D  Q
"RTN","DGPFLMA4",55,0)
 ..W !!,"Record flag assignment currently in use, can not be edited!",*7
"RTN","DGPFLMA4",56,0)
 ..D PAUSE^VALM1
"RTN","DGPFLMA4",57,0)
 ..Q
"RTN","DGPFLMA4",58,0)
 .; get assignment into DGPFA array
"RTN","DGPFLMA4",59,0)
 .I '$$GETASGN^DGPFAA(DGIEN,.DGPFA,1) D  Q
"RTN","DGPFLMA4",60,0)
 ..W !!,"Unable to retrieve the record flag assignment selected.",*7
"RTN","DGPFLMA4",61,0)
 ..D PAUSE^VALM1
"RTN","DGPFLMA4",62,0)
 ..Q
"RTN","DGPFLMA4",63,0)
 .; check for pending transfer requests
"RTN","DGPFLMA4",64,0)
 .I $O(^DGPF(26.22,"D",DGDFN,$P($P(DGPFA("FLAG"),U),";"),2,""))'="" D  Q
"RTN","DGPFLMA4",65,0)
 ..W !!,"Please review active FT request to complete ownership transfer.",*7
"RTN","DGPFLMA4",66,0)
 ..D PAUSE^VALM1
"RTN","DGPFLMA4",67,0)
 ..Q
"RTN","DGPFLMA4",68,0)
 .; can site change ownership of the assignment?
"RTN","DGPFLMA4",69,0)
 .I '$$CHGOWN^DGPFAA2(.DGPFA,$G(DUZ(2)),"DGERR") D  Q
"RTN","DGPFLMA4",70,0)
 ..W !!,"Changing the ownership of this record flag assignment not allowed...",*7
"RTN","DGPFLMA4",71,0)
 ..D MSG^DIALOG("WE","","",5,"DGERR")
"RTN","DGPFLMA4",72,0)
 ..D PAUSE^VALM1
"RTN","DGPFLMA4",73,0)
 ..Q
"RTN","DGPFLMA4",74,0)
 .; prompt for new OWNER SITE of the assignment
"RTN","DGPFLMA4",75,0)
 .;
"RTN","DGPFLMA4",76,0)
 .;-create selection list of enabled division owners
"RTN","DGPFLMA4",77,0)
 .S DGINST=0 F  S DGINST=$O(^DG(40.8,"APRF",DGINST)) Q:'DGINST  D
"RTN","DGPFLMA4",78,0)
 ..I $$TF^XUAF4(DGINST) S DGOWN(DGINST)=""
"RTN","DGPFLMA4",79,0)
 ..Q
"RTN","DGPFLMA4",80,0)
 .;-add treating facilities to selection list for Cat I assignments
"RTN","DGPFLMA4",81,0)
 .I $G(DGPFA("FLAG"))["26.15",$$BLDTFL^DGPFUT2(DGDFN,.DGOWN)
"RTN","DGPFLMA4",82,0)
 .;-remove existing owner from selection list
"RTN","DGPFLMA4",83,0)
 .K DGOWN(+$G(DGPFA("OWNER")))
"RTN","DGPFLMA4",84,0)
 .;
"RTN","DGPFLMA4",85,0)
 .S DGPFA("OWNER")=$$ANSWER^DGPFUT("Select new owner site for this record flag assignment","","P^4:EMZ","","I $D(DGOWN(+Y))")
"RTN","DGPFLMA4",86,0)
 .Q:(DGPFA("OWNER")'>0)
"RTN","DGPFLMA4",87,0)
 .; prompt for APPROVED BY person
"RTN","DGPFLMA4",88,0)
 .S DGPFAH("APPRVBY")=$$ANSWER^DGPFUT("Approved By","","P^200:EMZ")
"RTN","DGPFLMA4",89,0)
 .Q:(DGPFAH("APPRVBY")'>0)
"RTN","DGPFLMA4",90,0)
 .; allow user to enter HISTORY COMMENTS (edit reason)
"RTN","DGPFLMA4",91,0)
 .S DGCROOT=$NA(^TMP($J,"DGPFCMNT"))  ;init WP array for hist comments
"RTN","DGPFLMA4",92,0)
 .K @DGCROOT
"RTN","DGPFLMA4",93,0)
 .S (DGABORT,DGOK)=0
"RTN","DGPFLMA4",94,0)
 .F  D  Q:(DGOK!DGABORT)
"RTN","DGPFLMA4",95,0)
 ..W !!,"Enter the reason for editing this assignment:"  ;needed for line editor
"RTN","DGPFLMA4",96,0)
 ..S @DGCROOT@(1,0)="Change of flag assignment ownership.  "
"RTN","DGPFLMA4",97,0)
 ..S DIC=$$OREF^DILF(DGCROOT)
"RTN","DGPFLMA4",98,0)
 ..S DIWETXT="Enter the reason for record flag assignment ownership change:"
"RTN","DGPFLMA4",99,0)
 ..S DIWESUB="Change of Ownership Reason"
"RTN","DGPFLMA4",100,0)
 ..S DWLW=75   ;max # of chars allowed to be stored on WP global node
"RTN","DGPFLMA4",101,0)
 ..S DWPK=1    ;if line editor, don't join lines
"RTN","DGPFLMA4",102,0)
 ..S DDWC="E"  ;initially place cursor at end of line 1
"RTN","DGPFLMA4",103,0)
 ..D EN^DIWE
"RTN","DGPFLMA4",104,0)
 ..I $$CKWP^DGPFUT(DGCROOT) S DGOK=1 Q
"RTN","DGPFLMA4",105,0)
 ..W !,"The reason for editing this record flag assignment is required!",*7
"RTN","DGPFLMA4",106,0)
 ..I '$$CONTINUE^DGPFUT() S DGABORT=1
"RTN","DGPFLMA4",107,0)
 ..Q
"RTN","DGPFLMA4",108,0)
 .; quit if required HISTORY COMMENTS not entered
"RTN","DGPFLMA4",109,0)
 .Q:$G(DGABORT)
"RTN","DGPFLMA4",110,0)
 .; place HISTORY COMMENTS into history array
"RTN","DGPFLMA4",111,0)
 .M DGPFAH("COMMENT")=@DGCROOT K @DGCROOT
"RTN","DGPFLMA4",112,0)
 .; setup remaining assignment history array nodes for filing
"RTN","DGPFLMA4",113,0)
 .S DGPFAH("ACTION")=2                ;continue
"RTN","DGPFLMA4",114,0)
 .S DGPFAH("ASSIGNDT")=$$NOW^XLFDT()  ;current date/time
"RTN","DGPFLMA4",115,0)
 .S DGPFAH("ENTERBY")=DUZ             ;current user
"RTN","DGPFLMA4",116,0)
 .; relinquishing ownership should remove existing review date when
"RTN","DGPFLMA4",117,0)
 .; new owner is not a local division
"RTN","DGPFLMA4",118,0)
 .I '$D(^DG(40.8,"APRF",DGPFA("OWNER"))) S DGPFA("REVIEWDT")=""
"RTN","DGPFLMA4",119,0)
 .; add DBRS data to DGPFAH array
"RTN","DGPFLMA4",120,0)
 .D GETDBRS^DGPFUT6(.DBRSDATA,DGIEN)
"RTN","DGPFLMA4",121,0)
 .S (DBRSCNT,DBRSNUM)=0 F  S DBRSNUM=$O(DBRSDATA(DBRSNUM)) Q:DBRSNUM=""  D
"RTN","DGPFLMA4",122,0)
 ..S DBRSCNT=DBRSCNT+1
"RTN","DGPFLMA4",123,0)
 ..S DGPFAH("DBRS",DBRSCNT)=DBRSNUM_U_$P($G(DBRSDATA(DBRSNUM,"OTHER")),U)_U_$P($G(DBRSDATA(DBRSNUM,"DATE")),U)
"RTN","DGPFLMA4",124,0)
 ..S DGPFAH("DBRS",DBRSCNT)=DGPFAH("DBRS",DBRSCNT)_U_"N"_U_$P($G(DBRSDATA(DBRSNUM,"SITE")),U)
"RTN","DGPFLMA4",125,0)
 ..Q
"RTN","DGPFLMA4",126,0)
 .; display flag assignment review screen to user
"RTN","DGPFLMA4",127,0)
 .D REVIEW^DGPFUT3(.DGPFA,.DGPFAH,DGIEN,XQY0,XQORNOD(0))
"RTN","DGPFLMA4",128,0)
 .; ask user if ok to file ownership change 
"RTN","DGPFLMA4",129,0)
 .Q:$$ANSWER^DGPFUT("Would you like to file the assignment ownership change","YES","Y")'>0
"RTN","DGPFLMA4",130,0)
 .; file the assignment and history using STOALL api
"RTN","DGPFLMA4",131,0)
 .W !!,"Updating the ownership of this patient's record flag assignment..."
"RTN","DGPFLMA4",132,0)
 .S DGRESULT=$$STOALL^DGPFAA(.DGPFA,.DGPFAH,.DGPFERR,"")
"RTN","DGPFLMA4",133,0)
 .W !?5,"Update was "_$S(+$G(DGRESULT):"successful",1:"not successful")_"."
"RTN","DGPFLMA4",134,0)
 .; send HL7 ORU msg if editing assignment to a Cat I flag
"RTN","DGPFLMA4",135,0)
 .I +$G(DGRESULT),$G(DGPFA("FLAG"))["26.15",$$SNDORU^DGPFHLS(+DGRESULT) W !?5,"Message sent...updating patient's sites of record."
"RTN","DGPFLMA4",136,0)
 .D PAUSE^VALM1
"RTN","DGPFLMA4",137,0)
 .; rebuild list of flag assignments for patient
"RTN","DGPFLMA4",138,0)
 .D BLDLIST^DGPFLMU(DGDFN)
"RTN","DGPFLMA4",139,0)
 .; release lock after CO edit
"RTN","DGPFLMA4",140,0)
 .D UNLOCK^DGPFAA3(DGIEN)
"RTN","DGPFLMA4",141,0)
 .Q
"RTN","DGPFLMA4",142,0)
 ;return to LM (refresh screen)
"RTN","DGPFLMA4",143,0)
 S VALMBCK="R"
"RTN","DGPFLMA4",144,0)
 ;
"RTN","DGPFLMA4",145,0)
 Q
"RTN","DGPFLMA5")
0^12^B26946927^n/a
"RTN","DGPFLMA5",1,0)
DGPFLMA5 ;SLC/SS - PRF ASSIGNMENT LM PROTOCOL ACTIONS CONT. ; 01/24/18
"RTN","DGPFLMA5",2,0)
 ;;5.3;Registration;**951**;Aug 13, 1993;Build 135
"RTN","DGPFLMA5",3,0)
 ;
"RTN","DGPFLMA5",4,0)
 ;no direct entry
"RTN","DGPFLMA5",5,0)
 Q
"RTN","DGPFLMA5",6,0)
 ;
"RTN","DGPFLMA5",7,0)
TR ; Entry point for DGPF TRANSFER FLAG action protocol.
"RTN","DGPFLMA5",8,0)
 N DGDFN     ; Pointer to patient in PATIENT (#2) file
"RTN","DGPFLMA5",9,0)
 N DGIEN     ; Assignment ien
"RTN","DGPFLMA5",10,0)
 N DGPFA     ; Assignment array
"RTN","DGPFLMA5",11,0)
 N SEL       ; User selection (list item)
"RTN","DGPFLMA5",12,0)
 N REASON    ; reason for the request
"RTN","DGPFLMA5",13,0)
 N RES       ; Result of request attempt
"RTN","DGPFLMA5",14,0)
 N DIV       ; sign-on division name ^ sign-on division station #
"RTN","DGPFLMA5",15,0)
 N OWNER     ; current flag owner
"RTN","DGPFLMA5",16,0)
 N Z
"RTN","DGPFLMA5",17,0)
 ;
"RTN","DGPFLMA5",18,0)
 ; Set screen to full scroll region
"RTN","DGPFLMA5",19,0)
 D FULL^VALM1
"RTN","DGPFLMA5",20,0)
 S VALMBCK="R"
"RTN","DGPFLMA5",21,0)
 ; Quit if selected action is not appropriate
"RTN","DGPFLMA5",22,0)
 I '$D(@VALMAR@("IDX")) D DISPMSG("0^0^^Action not permitted - "_$S('$G(DGDFN):"Patient has not been selected.",1:"Patient has no record flag assignments.")) Q
"RTN","DGPFLMA5",23,0)
 ; Quit if user's DUZ(2) is not an enabled division for PRF ASSIGNMENT OWNERSHIP
"RTN","DGPFLMA5",24,0)
 I '$D(^DG(40.8,"APRF",+DUZ(2))) D DISPMSG("0^0^^Action not permitted - You are signed into a division which is not PRF enabled, the FT action cannot be used to request PRF transfer to this division") Q
"RTN","DGPFLMA5",25,0)
 ; Quit if user's DUZ(2) is neither parent facility, nor a division in an integrated site
"RTN","DGPFLMA5",26,0)
 I '$$CHKINT() D DISPMSG("0^0^^Action not permitted - You are signed into a division which is neither a parent facility, nor a VAMC type division in an integrated site.") Q
"RTN","DGPFLMA5",27,0)
 ; Allow user to select a single flag assignment
"RTN","DGPFLMA5",28,0)
 S DGIEN="" D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","DGPFLMA5",29,0)
 ; Process user selection
"RTN","DGPFLMA5",30,0)
 S SEL=$O(VALMY("")) I 'SEL Q
"RTN","DGPFLMA5",31,0)
 S DGIEN=$P($G(@VALMAR@("IDX",SEL,SEL)),U)
"RTN","DGPFLMA5",32,0)
 S DGDFN=$P($G(@VALMAR@("IDX",SEL,SEL)),U,2)
"RTN","DGPFLMA5",33,0)
 S DIV=$$NS^XUAF4(+DUZ(2))
"RTN","DGPFLMA5",34,0)
 ; Attempt to obtain lock on assignment record
"RTN","DGPFLMA5",35,0)
 I '$$LOCK^DGPFAA3(DGIEN) D DISPMSG("0^0^^Record flag assignment currently in use.") Q
"RTN","DGPFLMA5",36,0)
 ; Get assignment into DGPFA array
"RTN","DGPFLMA5",37,0)
 I '$$GETASGN^DGPFAA(DGIEN,.DGPFA) D DISPMSG("0^0^^Unable to retrieve the record flag assignment selected.") G TRX
"RTN","DGPFLMA5",38,0)
 ; Check who is the current owner
"RTN","DGPFLMA5",39,0)
 S Z=$$PARENT^DGPFUT1($P($G(DGPFA("OWNER")),U))
"RTN","DGPFLMA5",40,0)
 S OWNER=$P(Z,U) I OWNER=0!($P(Z,U,3)="") S OWNER=$P($G(DGPFA("OWNER")),U)
"RTN","DGPFLMA5",41,0)
 I OWNER=+DUZ(2)!(OWNER=$P($$PARENT^DGPFUT1(+DUZ(2)),U)) D DISPMSG("0^0^^Your division/facility is the current owner of this record flag assignment.") G TRX
"RTN","DGPFLMA5",42,0)
 ;
"RTN","DGPFLMA5",43,0)
 I DGPFA("FLAG")'["26.15" D DISPMSG("0^0^^Only ownership of national (Cat I) flag assignments can be transferred.") G TRX
"RTN","DGPFLMA5",44,0)
 ; prompt for request reason
"RTN","DGPFLMA5",45,0)
 S REASON=$$ASKRSN^DGPFTR1(0,1) I REASON="" G TRX
"RTN","DGPFLMA5",46,0)
 ;
"RTN","DGPFLMA5",47,0)
 W !!,"You're about to request ownership transfer of the following"
"RTN","DGPFLMA5",48,0)
 W !,"record flag assignment to division "_$P(DIV,U)_" (station #"_$P(DIV,U,2)_"):"
"RTN","DGPFLMA5",49,0)
 W !!,"Patient:         ",$P($G(DGPFA("DFN")),U,2)
"RTN","DGPFLMA5",50,0)
 W !,"PRF flag:        ",$P($G(DGPFA("FLAG")),U,2)
"RTN","DGPFLMA5",51,0)
 W !,"PRF flag status: ",$P($G(DGPFA("STATUS")),U,2)
"RTN","DGPFLMA5",52,0)
 W !,"Current owner:   ",$P($G(DGPFA("OWNER")),U,2)
"RTN","DGPFLMA5",53,0)
 W !,"Request reason:  ",REASON
"RTN","DGPFLMA5",54,0)
 I '$$ASKCONT() G TRX
"RTN","DGPFLMA5",55,0)
 ;
"RTN","DGPFLMA5",56,0)
 S RES=$$SEND^DGPFHLT(DGDFN,$P($P($G(DGPFA("FLAG")),U),";"),OWNER,REASON)
"RTN","DGPFLMA5",57,0)
 ;
"RTN","DGPFLMA5",58,0)
 D DISPMSG(RES)
"RTN","DGPFLMA5",59,0)
 ; rebuild list of flag assignments for this patient
"RTN","DGPFLMA5",60,0)
 D BLDLIST^DGPFLMU(DGDFN)
"RTN","DGPFLMA5",61,0)
TRX ; exit point
"RTN","DGPFLMA5",62,0)
 ; Release lock on assignment record
"RTN","DGPFLMA5",63,0)
 D UNLOCK^DGPFAA3(DGIEN)
"RTN","DGPFLMA5",64,0)
 Q
"RTN","DGPFLMA5",65,0)
 ;
"RTN","DGPFLMA5",66,0)
ASKCONT() ; Asks user if they wish to continue
"RTN","DGPFLMA5",67,0)
 ; Returns 1 if response is "YES", 0 otherwise
"RTN","DGPFLMA5",68,0)
 ;
"RTN","DGPFLMA5",69,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","DGPFLMA5",70,0)
 S DIR(0)="Y",DIR("A")="Do you wish to send this request",DIR("B")="NO"
"RTN","DGPFLMA5",71,0)
 D ^DIR
"RTN","DGPFLMA5",72,0)
 Q +Y
"RTN","DGPFLMA5",73,0)
 ;
"RTN","DGPFLMA5",74,0)
DISPMSG(MSG) ; Display message to the user
"RTN","DGPFLMA5",75,0)
 ; status^HL7 message id^error code^error description^error source
"RTN","DGPFLMA5",76,0)
 N ERRSTR,HL7OK,Z
"RTN","DGPFLMA5",77,0)
 S ERRSTR="the following error has occurred:"
"RTN","DGPFLMA5",78,0)
 S HL7OK="Transfer request sent successfully."
"RTN","DGPFLMA5",79,0)
 I +MSG W !!,HL7OK
"RTN","DGPFLMA5",80,0)
 I '+MSG D
"RTN","DGPFLMA5",81,0)
 .I +$P(MSG,U,5)=0 W !!,"Unable to proceed, ",ERRSTR
"RTN","DGPFLMA5",82,0)
 .I +$P(MSG,U,5)=1 W !!,"Unable to send transfer request, ",ERRSTR
"RTN","DGPFLMA5",83,0)
 .I +$P(MSG,U,5)=2 W !!,HL7OK,!,"...but error occurred while filing log entry:"
"RTN","DGPFLMA5",84,0)
 .W !
"RTN","DGPFLMA5",85,0)
 .S Z=$P(MSG,U,2) I +Z W !?2,"HL7 Message ID: ",Z
"RTN","DGPFLMA5",86,0)
 .S Z=$P(MSG,U,3) I +Z W !?2,"Error Code: ",Z
"RTN","DGPFLMA5",87,0)
 .S Z=$P(MSG,U,4) I Z'="" W !?2,"Error Text: ",!,Z
"RTN","DGPFLMA5",88,0)
 .Q
"RTN","DGPFLMA5",89,0)
 D PAUSE^VALM1
"RTN","DGPFLMA5",90,0)
 Q
"RTN","DGPFLMA5",91,0)
 ;
"RTN","DGPFLMA5",92,0)
CHKINT() ; check for integrated site divisions
"RTN","DGPFLMA5",93,0)
 ; only ingrated site divisions are allowed to use FT action
"RTN","DGPFLMA5",94,0)
 ;
"RTN","DGPFLMA5",95,0)
 ; returns 1 if division is allowed to use FT, 0 otherwise
"RTN","DGPFLMA5",96,0)
 ;
"RTN","DGPFLMA5",97,0)
 N DIV,DIVST,EXCLUDE,FDATA,INTFCLTY,PARENT,PRNTIEN,PRNTST,RES
"RTN","DGPFLMA5",98,0)
 ;
"RTN","DGPFLMA5",99,0)
 S INTFCLTY="^528^589^636^657^" ; list of int. site parent facilities (station #s)
"RTN","DGPFLMA5",100,0)
 S EXCLUDE="^636A4^636A5^" ; list of divisions excluded from transfers (special case for VISN 23)
"RTN","DGPFLMA5",101,0)
 S DIV=+DUZ(2) ; sign-on division ien
"RTN","DGPFLMA5",102,0)
 S RES=0
"RTN","DGPFLMA5",103,0)
 S PARENT=$$PARENT^DGPFUT1(DIV),DIVST=$$STA^XUAF4(DIV),PRNTIEN=$P(PARENT,U),PRNTST=$P(PARENT,U,3)
"RTN","DGPFLMA5",104,0)
 I PRNTIEN=0!(PRNTST="")!(PRNTIEN=DIV) S RES=1 ; it's a parent facility
"RTN","DGPFLMA5",105,0)
 I 'RES,EXCLUDE'[(U_DIVST_U) D
"RTN","DGPFLMA5",106,0)
 .; not on excluded divisions list
"RTN","DGPFLMA5",107,0)
 .I INTFCLTY[(U_PRNTST_U) D
"RTN","DGPFLMA5",108,0)
 ..; division's parent is on integrated facility list
"RTN","DGPFLMA5",109,0)
 ..D F4^XUAF4(DIVST,.FDATA)
"RTN","DGPFLMA5",110,0)
 ..I $G(FDATA("TYPE"))="VAMC" S RES=1 ; division's facility type is VAMC
"RTN","DGPFLMA5",111,0)
 ..Q
"RTN","DGPFLMA5",112,0)
 .Q
"RTN","DGPFLMA5",113,0)
 Q RES
"RTN","DGPFLMU1")
0^26^B57734763^B45355090
"RTN","DGPFLMU1",1,0)
DGPFLMU1 ;ALB/KCL - PRF DISPLAY FLAG DETAIL LM UTILITIES CONT ; 10/12/05 10:26am
"RTN","DGPFLMU1",2,0)
 ;;5.3;Registration;**425,554,650,951**;Aug 13, 1993;Build 135
"RTN","DGPFLMU1",3,0)
 ;     Last Edited:  SHRPE/SGM - Aug 16, 2018 11:02
"RTN","DGPFLMU1",4,0)
 ;
"RTN","DGPFLMU1",5,0)
 ;no direct entry
"RTN","DGPFLMU1",6,0)
 QUIT
"RTN","DGPFLMU1",7,0)
 ;
"RTN","DGPFLMU1",8,0)
EN(DGARY,DGIEN,DGDFN,DGCNT) ;Entry point to build flag assignment detail list area.
"RTN","DGPFLMU1",9,0)
 ;
"RTN","DGPFLMU1",10,0)
 ;  Input:
"RTN","DGPFLMU1",11,0)
 ;    DGARY - global array subscript
"RTN","DGPFLMU1",12,0)
 ;    DGIEN - ien of PATIENT ASSIGNMENT (#26.13) file
"RTN","DGPFLMU1",13,0)
 ;    DGDFN - ien of PATIENT (#2) file
"RTN","DGPFLMU1",14,0)
 ;
"RTN","DGPFLMU1",15,0)
 ; Output:
"RTN","DGPFLMU1",16,0)
 ;    DGCNT - number of lines in the list, pass by reference
"RTN","DGPFLMU1",17,0)
 ;
"RTN","DGPFLMU1",18,0)
 N DGHIEN   ;assignment history ien
"RTN","DGPFLMU1",19,0)
 N DGHIENS  ;contains assignment history ien's 
"RTN","DGPFLMU1",20,0)
 N DGHISCNT ;count of history records
"RTN","DGPFLMU1",21,0)
 N DGLINE   ;line counter
"RTN","DGPFLMU1",22,0)
 N DGPFA    ;assignment array
"RTN","DGPFLMU1",23,0)
 N DGPFAH   ;assignment history array
"RTN","DGPFLMU1",24,0)
 N DGPFF    ;flag array
"RTN","DGPFLMU1",25,0)
 N DGSUB    ;subscript of history ien's array
"RTN","DGPFLMU1",26,0)
 ;
"RTN","DGPFLMU1",27,0)
 ;init variables
"RTN","DGPFLMU1",28,0)
 S DGCNT=0
"RTN","DGPFLMU1",29,0)
 S (DGLINE,VALMBEG)=1
"RTN","DGPFLMU1",30,0)
 K DGPFA
"RTN","DGPFLMU1",31,0)
 K DGPFAH
"RTN","DGPFLMU1",32,0)
 K DGPFF
"RTN","DGPFLMU1",33,0)
 K DGHIENS
"RTN","DGPFLMU1",34,0)
 ;
"RTN","DGPFLMU1",35,0)
 Q:'$G(DGIEN)
"RTN","DGPFLMU1",36,0)
 ;
"RTN","DGPFLMU1",37,0)
 ;get assignment into DGPFA array
"RTN","DGPFLMU1",38,0)
 Q:'$$GETASGN^DGPFAA(DGIEN,.DGPFA,1)
"RTN","DGPFLMU1",39,0)
 S DGPFA("INITASSIGN")=$$GETADT^DGPFAAH(DGIEN)  ;initial assign date
"RTN","DGPFLMU1",40,0)
 ;
"RTN","DGPFLMU1",41,0)
 ;get most recent assignment history and place in DGPFAH array
"RTN","DGPFLMU1",42,0)
 Q:'$$GETHIST^DGPFAAH($$GETLAST^DGPFAAH(DGIEN),.DGPFAH,1)
"RTN","DGPFLMU1",43,0)
 ;
"RTN","DGPFLMU1",44,0)
 ;get record flag into DGPFF array
"RTN","DGPFLMU1",45,0)
 Q:'$$GETFLAG^DGPFUT1($P($G(DGPFA("FLAG")),U),.DGPFF)
"RTN","DGPFLMU1",46,0)
 ;
"RTN","DGPFLMU1",47,0)
 ;build Assignment Details area
"RTN","DGPFLMU1",48,0)
 D ASGN(DGARY,.DGPFA,.DGPFAH,.DGPFF,.DGLINE,.DGCNT)
"RTN","DGPFLMU1",49,0)
 ;
"RTN","DGPFLMU1",50,0)
 ;build Assignment History heading
"RTN","DGPFLMU1",51,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",52,0)
 D SET(DGARY,DGLINE,$TR($J("",80)," ","="),1,,,.DGCNT)
"RTN","DGPFLMU1",53,0)
 D SET(DGARY,DGLINE,"<Assignment History>",30,IORVON,IORVOFF,.DGCNT)
"RTN","DGPFLMU1",54,0)
 ;
"RTN","DGPFLMU1",55,0)
 ;get all history ien's associated with the assignment
"RTN","DGPFLMU1",56,0)
 Q:'$$GETALLDT^DGPFAAH(DGIEN,.DGHIENS)
"RTN","DGPFLMU1",57,0)
 ;
"RTN","DGPFLMU1",58,0)
 ;reverse loop through each assignment history ien
"RTN","DGPFLMU1",59,0)
 ;and get record into DGPFAH array
"RTN","DGPFLMU1",60,0)
 S DGHISCNT=0,DGSUB=9999999.999999
"RTN","DGPFLMU1",61,0)
 F  S DGSUB=$O(DGHIENS(DGSUB),-1) Q:DGSUB=""  D
"RTN","DGPFLMU1",62,0)
 . S DGHIEN=+$G(DGHIENS(DGSUB))
"RTN","DGPFLMU1",63,0)
 . K DGPFAH
"RTN","DGPFLMU1",64,0)
 . I $$GETHIST^DGPFAAH(DGHIEN,.DGPFAH,1) D
"RTN","DGPFLMU1",65,0)
 . . ;
"RTN","DGPFLMU1",66,0)
 . . ;-history record counter
"RTN","DGPFLMU1",67,0)
 . . S DGHISCNT=DGHISCNT+1
"RTN","DGPFLMU1",68,0)
 . . ;
"RTN","DGPFLMU1",69,0)
 . . ;-build assignment history area
"RTN","DGPFLMU1",70,0)
 . . D HIST(DGARY,.DGPFAH,.DGPFA,.DGLINE,DGHISCNT,.DGCNT)
"RTN","DGPFLMU1",71,0)
 Q
"RTN","DGPFLMU1",72,0)
 ;
"RTN","DGPFLMU1",73,0)
 ;
"RTN","DGPFLMU1",74,0)
ASGN(DGARY,DGPFA,DGPFAH,DGPFF,DGLINE,DGCNT) ;This procedure will build the lines of FLAG ASSIGNMENT details.
"RTN","DGPFLMU1",75,0)
 ;
"RTN","DGPFLMU1",76,0)
 ;  Input:
"RTN","DGPFLMU1",77,0)
 ;    DGARY - global array subscript
"RTN","DGPFLMU1",78,0)
 ;    DGPFF - flag array, pass by reference
"RTN","DGPFLMU1",79,0)
 ;    DGPFA - assignment array, pass by reference
"RTN","DGPFLMU1",80,0)
 ;   DGPFAH - assignment history array, pass by reference
"RTN","DGPFLMU1",81,0)
 ;   DGLINE - line counter
"RTN","DGPFLMU1",82,0)
 ;
"RTN","DGPFLMU1",83,0)
 ; Output:
"RTN","DGPFLMU1",84,0)
 ;    DGCNT - number of lines in the list, pass by reference
"RTN","DGPFLMU1",85,0)
 ;
"RTN","DGPFLMU1",86,0)
 ;temporary variables used
"RTN","DGPFLMU1",87,0)
 N DGSUB
"RTN","DGPFLMU1",88,0)
 N DGTMP
"RTN","DGPFLMU1",89,0)
 ;
"RTN","DGPFLMU1",90,0)
 ;set flag name
"RTN","DGPFLMU1",91,0)
 D SET(DGARY,DGLINE,"Flag Name: "_$P($G(DGPFA("FLAG")),U,2),12,,,.DGCNT)
"RTN","DGPFLMU1",92,0)
 ;
"RTN","DGPFLMU1",93,0)
 ;set flag type
"RTN","DGPFLMU1",94,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",95,0)
 D SET(DGARY,DGLINE,"Flag Type: "_$P($G(DGPFF("TYPE")),U,2),12,,,.DGCNT)
"RTN","DGPFLMU1",96,0)
 ;
"RTN","DGPFLMU1",97,0)
 ;set flag category
"RTN","DGPFLMU1",98,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",99,0)
 S DGTMP=$S($P($G(DGPFA("FLAG")),U)["26.11":"II (LOCAL)",1:"I (NATIONAL)")
"RTN","DGPFLMU1",100,0)
 D SET(DGARY,DGLINE,"Flag Category: "_DGTMP,8,,,.DGCNT)
"RTN","DGPFLMU1",101,0)
 ;
"RTN","DGPFLMU1",102,0)
 ;set flag assignment status
"RTN","DGPFLMU1",103,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",104,0)
 D SET(DGARY,DGLINE,"Assignment Status: "_$P($G(DGPFA("STATUS")),U,2),4,,,.DGCNT)
"RTN","DGPFLMU1",105,0)
 ;
"RTN","DGPFLMU1",106,0)
 ;set initial assignment date
"RTN","DGPFLMU1",107,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",108,0)
 D SET(DGARY,DGLINE,"Initial Assignment: "_$$FDTTM^VALM1($P(+$G(DGPFA("INITASSIGN")),U)),3,,,.DGCNT)
"RTN","DGPFLMU1",109,0)
 ;
"RTN","DGPFLMU1",110,0)
 ;set last review date (do not set if only initial assignment)
"RTN","DGPFLMU1",111,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",112,0)
 I (+$G(DGPFAH("ASSIGNDT")))=(+$G(DGPFA("INITASSIGN"))) D
"RTN","DGPFLMU1",113,0)
 . S DGTMP="N/A"
"RTN","DGPFLMU1",114,0)
 E  S DGTMP=$$FDATE^VALM1(+$G(DGPFAH("ASSIGNDT")))
"RTN","DGPFLMU1",115,0)
 D SET(DGARY,DGLINE,"Last Review Date: "_DGTMP,5,,,.DGCNT)
"RTN","DGPFLMU1",116,0)
 ;
"RTN","DGPFLMU1",117,0)
 ;set next review date
"RTN","DGPFLMU1",118,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",119,0)
 S DGTMP=+$G(DGPFA("REVIEWDT"))
"RTN","DGPFLMU1",120,0)
 S DGTMP=$S(DGTMP:$$FDATE^VALM1(DGTMP),1:"N/A")
"RTN","DGPFLMU1",121,0)
 D SET(DGARY,DGLINE,"Next Review Date: "_DGTMP,5,,,.DGCNT)
"RTN","DGPFLMU1",122,0)
 ;
"RTN","DGPFLMU1",123,0)
 ;set owner site
"RTN","DGPFLMU1",124,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",125,0)
 D SET(DGARY,DGLINE,"Owner Site: "_$P($G(DGPFA("OWNER")),U,2)_"  "_$$FMTPRNT^DGPFUT1($P($G(DGPFA("OWNER")),U)),11,,,.DGCNT)
"RTN","DGPFLMU1",126,0)
 ;
"RTN","DGPFLMU1",127,0)
 ;set originating site
"RTN","DGPFLMU1",128,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",129,0)
 D SET(DGARY,DGLINE,"Originating Site: "_$P($G(DGPFA("ORIGSITE")),U,2)_"  "_$$FMTPRNT^DGPFUT1($P($G(DGPFA("ORIGSITE")),U)),5,,,.DGCNT)
"RTN","DGPFLMU1",130,0)
 ;
"RTN","DGPFLMU1",131,0)
 ;add dbrs# data for behavioral flag ; DG*5.3*951
"RTN","DGPFLMU1",132,0)
 D DBRS(26.13)
"RTN","DGPFLMU1",133,0)
 ;
"RTN","DGPFLMU1",134,0)
 ;set assignment narrative
"RTN","DGPFLMU1",135,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",136,0)
 D SET(DGARY,DGLINE,"",1,,,.DGCNT)
"RTN","DGPFLMU1",137,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",138,0)
 D SET(DGARY,DGLINE,"Record Flag Assignment Narrative:",1,IORVON,IORVOFF,.DGCNT)
"RTN","DGPFLMU1",139,0)
 I '$D(DGPFA("NARR",1,0)) D  Q
"RTN","DGPFLMU1",140,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLMU1",141,0)
 . D SET(DGARY,DGLINE,"No Narrative Text",1,,,.DGCNT)
"RTN","DGPFLMU1",142,0)
 S (DGSUB,DGTMP)=""
"RTN","DGPFLMU1",143,0)
 F  S DGSUB=$O(DGPFA("NARR",DGSUB)) Q:'DGSUB  D
"RTN","DGPFLMU1",144,0)
 . S DGTMP=$G(DGPFA("NARR",DGSUB,0))
"RTN","DGPFLMU1",145,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLMU1",146,0)
 . D SET(DGARY,DGLINE,DGTMP,1,,,.DGCNT)
"RTN","DGPFLMU1",147,0)
 ;
"RTN","DGPFLMU1",148,0)
 ;set blank lines
"RTN","DGPFLMU1",149,0)
 S DGLINE=DGLINE+2
"RTN","DGPFLMU1",150,0)
 D SET(DGARY,DGLINE,"",1,,,.DGCNT)
"RTN","DGPFLMU1",151,0)
 ;
"RTN","DGPFLMU1",152,0)
 Q
"RTN","DGPFLMU1",153,0)
 ;
"RTN","DGPFLMU1",154,0)
 ;
"RTN","DGPFLMU1",155,0)
HIST(DGARY,DGPFAH,DGPFA,DGLINE,DGHISCNT,DGCNT) ;This procedure will build the lines of FLAG ASSIGNMENT HISTORY details.
"RTN","DGPFLMU1",156,0)
 ;
"RTN","DGPFLMU1",157,0)
 ;  Input:
"RTN","DGPFLMU1",158,0)
 ;    DGARY - global array subscript
"RTN","DGPFLMU1",159,0)
 ;   DGPFAH - assignment history array, pass by reference
"RTN","DGPFLMU1",160,0)
 ;    DGPFA - assignment array, pass by reference
"RTN","DGPFLMU1",161,0)
 ;   DGLINE - line counter
"RTN","DGPFLMU1",162,0)
 ; DGHISCNT - counter of history record
"RTN","DGPFLMU1",163,0)
 ;
"RTN","DGPFLMU1",164,0)
 ; Output:
"RTN","DGPFLMU1",165,0)
 ;    DGCNT - number of lines in the list, pass by reference
"RTN","DGPFLMU1",166,0)
 ;
"RTN","DGPFLMU1",167,0)
 ;temporary variables used
"RTN","DGPFLMU1",168,0)
 N DGTMP
"RTN","DGPFLMU1",169,0)
 N DGSUB
"RTN","DGPFLMU1",170,0)
 ;
"RTN","DGPFLMU1",171,0)
 ;set blank line
"RTN","DGPFLMU1",172,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",173,0)
 D SET(DGARY,DGLINE,"",1,,,.DGCNT)
"RTN","DGPFLMU1",174,0)
 ;
"RTN","DGPFLMU1",175,0)
 ;add an additional blank line except on the first history
"RTN","DGPFLMU1",176,0)
 I DGHISCNT>1 D
"RTN","DGPFLMU1",177,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLMU1",178,0)
 . D SET(DGARY,DGLINE,"",1,,,.DGCNT)
"RTN","DGPFLMU1",179,0)
 ;
"RTN","DGPFLMU1",180,0)
 ;set action
"RTN","DGPFLMU1",181,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",182,0)
 S DGTMP=DGHISCNT_"."
"RTN","DGPFLMU1",183,0)
 D SET(DGARY,DGLINE,DGTMP,1,IORVON,IORVOFF,.DGCNT)
"RTN","DGPFLMU1",184,0)
 D SET(DGARY,DGLINE,"Action: "_$P($G(DGPFAH("ACTION")),U,2),10,IORVON,IORVOFF,.DGCNT)
"RTN","DGPFLMU1",185,0)
 ;
"RTN","DGPFLMU1",186,0)
 ;set assignment date
"RTN","DGPFLMU1",187,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",188,0)
 D SET(DGARY,DGLINE,"Action Date: "_$$FDTTM^VALM1($P($G(DGPFAH("ASSIGNDT")),U)),5,,,.DGCNT)
"RTN","DGPFLMU1",189,0)
 ;
"RTN","DGPFLMU1",190,0)
 ;set entered by
"RTN","DGPFLMU1",191,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",192,0)
 D SET(DGARY,DGLINE,"Entered By: "_$P($G(DGPFAH("ENTERBY")),U,2),6,,,.DGCNT)
"RTN","DGPFLMU1",193,0)
 ;
"RTN","DGPFLMU1",194,0)
 ;set approved by
"RTN","DGPFLMU1",195,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",196,0)
 D SET(DGARY,DGLINE,"Approved By: "_$P($G(DGPFAH("APPRVBY")),U,2),5,,,.DGCNT)
"RTN","DGPFLMU1",197,0)
 ;
"RTN","DGPFLMU1",198,0)
 ;set progress note linked
"RTN","DGPFLMU1",199,0)
 I $D(^DG(40.8,"AD",+$P($G(DGPFA("OWNER")),U))) D
"RTN","DGPFLMU1",200,0)
 . Q:+$G(DGPFAH("ACTION"))=5  ;don't display ENTERED IN ERROR action
"RTN","DGPFLMU1",201,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLMU1",202,0)
 . D SET(DGARY,DGLINE,"Progress Note: "_$P($G(DGPFAH("TIULINK")),U,2),3,,,.DGCNT)
"RTN","DGPFLMU1",203,0)
 ;
"RTN","DGPFLMU1",204,0)
 ;add dbrs# data for behavioral flag ; DG*5.3*951
"RTN","DGPFLMU1",205,0)
 D DBRS(26.14)
"RTN","DGPFLMU1",206,0)
 ;
"RTN","DGPFLMU1",207,0)
 ;set history comments
"RTN","DGPFLMU1",208,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",209,0)
 D SET(DGARY,DGLINE,"Action Comments:",1,,,.DGCNT)
"RTN","DGPFLMU1",210,0)
 S DGLINE=DGLINE+1
"RTN","DGPFLMU1",211,0)
 D SET(DGARY,DGLINE,"----------------",1,,,.DGCNT)
"RTN","DGPFLMU1",212,0)
 I $D(DGPFAH("COMMENT",1,0)) D
"RTN","DGPFLMU1",213,0)
 . S (DGSUB,DGTMP)=""
"RTN","DGPFLMU1",214,0)
 . F  S DGSUB=$O(DGPFAH("COMMENT",DGSUB)) Q:'DGSUB  D
"RTN","DGPFLMU1",215,0)
 .. S DGTMP=$G(DGPFAH("COMMENT",DGSUB,0))
"RTN","DGPFLMU1",216,0)
 .. S DGLINE=DGLINE+1
"RTN","DGPFLMU1",217,0)
 .. D SET(DGARY,DGLINE,DGTMP,1,,,.DGCNT)
"RTN","DGPFLMU1",218,0)
 E  D
"RTN","DGPFLMU1",219,0)
 . S DGLINE=DGLINE+1
"RTN","DGPFLMU1",220,0)
 . D SET(DGARY,DGLINE,"No Comments on file.",1,,,.DGCNT)
"RTN","DGPFLMU1",221,0)
 ;
"RTN","DGPFLMU1",222,0)
 Q
"RTN","DGPFLMU1",223,0)
 ;
"RTN","DGPFLMU1",224,0)
SET(DGARY,DGLINE,DGTEXT,DGCOL,DGON,DGOFF,DGCNT) ;
"RTN","DGPFLMU1",225,0)
 ; This procedure will set the lines of flag assignment details into
"RTN","DGPFLMU1",226,0)
 ; the LM display area.
"RTN","DGPFLMU1",227,0)
 ;
"RTN","DGPFLMU1",228,0)
 ;  Input:
"RTN","DGPFLMU1",229,0)
 ;    DGARY - global array subscript
"RTN","DGPFLMU1",230,0)
 ;   DGLINE - line number
"RTN","DGPFLMU1",231,0)
 ;   DGTEXT - text
"RTN","DGPFLMU1",232,0)
 ;    DGCOL - starting column
"RTN","DGPFLMU1",233,0)
 ;     DGON - highlighting on
"RTN","DGPFLMU1",234,0)
 ;    DGOFF - highlighting off
"RTN","DGPFLMU1",235,0)
 ;
"RTN","DGPFLMU1",236,0)
 ; Output:
"RTN","DGPFLMU1",237,0)
 ;    DGCNT - number of lines in the list, pass by reference
"RTN","DGPFLMU1",238,0)
 ;
"RTN","DGPFLMU1",239,0)
 N DGX  ;temp variable for line of display text
"RTN","DGPFLMU1",240,0)
 ;
"RTN","DGPFLMU1",241,0)
 S DGCNT=DGLINE
"RTN","DGPFLMU1",242,0)
 S DGX=$S($D(^TMP(DGARY,$J,DGLINE,0)):^(0),1:"")
"RTN","DGPFLMU1",243,0)
 S ^TMP(DGARY,$J,DGLINE,0)=$$SETSTR^VALM1(DGTEXT,DGX,DGCOL,$L(DGTEXT))
"RTN","DGPFLMU1",244,0)
 D:$G(DGON)]""!($G(DGOFF)]"") CNTRL^VALM10(DGLINE,DGCOL,$L(DGTEXT),$G(DGON),$G(DGOFF))
"RTN","DGPFLMU1",245,0)
 Q
"RTN","DGPFLMU1",246,0)
 ;
"RTN","DGPFLMU1",247,0)
DBRS(FILE) ; DG*5.3*951
"RTN","DGPFLMU1",248,0)
 ;  Add DBRS data to the ListManager Display Assignment Details action
"RTN","DGPFLMU1",249,0)
 ;
"RTN","DGPFLMU1",250,0)
 S FILE=$G(FILE) I FILE'=26.13,FILE'=26.14 Q
"RTN","DGPFLMU1",251,0)
 I FILE=26.13,'$D(DGPFA("DBRS#")) Q
"RTN","DGPFLMU1",252,0)
 I FILE=26.14,'$D(DGPFAH("DBRS")) Q
"RTN","DGPFLMU1",253,0)
 N I,TEXT
"RTN","DGPFLMU1",254,0)
 S TEXT="" D DBRSET
"RTN","DGPFLMU1",255,0)
 S TEXT="DBRS NUMBER",$E(TEXT,20)="DBRS OTHER INFORMATION" D DBRSET
"RTN","DGPFLMU1",256,0)
 S TEXT="",$P(TEXT,"-",80)="",$E(TEXT,19)=" " D DBRSET
"RTN","DGPFLMU1",257,0)
 I FILE=26.13 D
"RTN","DGPFLMU1",258,0)
 . S I=0 F  S I=$O(DGPFA("DBRS#",I)) Q:'I  D
"RTN","DGPFLMU1",259,0)
 . . S TEXT=$P(DGPFA("DBRS#",I),U)
"RTN","DGPFLMU1",260,0)
 . . S $E(TEXT,20)=$P($G(DGPFA("DBRS OTHER",I)),U)
"RTN","DGPFLMU1",261,0)
 . . D DBRSET
"RTN","DGPFLMU1",262,0)
 . . Q
"RTN","DGPFLMU1",263,0)
 . Q
"RTN","DGPFLMU1",264,0)
 I FILE=26.14 D
"RTN","DGPFLMU1",265,0)
 . S I=0 F  S I=$O(DGPFAH("DBRS",I)) Q:'I  D
"RTN","DGPFLMU1",266,0)
 . . S TEXT=$P(DGPFAH("DBRS",I),U)
"RTN","DGPFLMU1",267,0)
 . . S $E(TEXT,20)=$P(DGPFAH("DBRS",I),U,2)
"RTN","DGPFLMU1",268,0)
 . . D DBRSET
"RTN","DGPFLMU1",269,0)
 . . Q
"RTN","DGPFLMU1",270,0)
 . S TEXT="" D DBRSET
"RTN","DGPFLMU1",271,0)
 . Q
"RTN","DGPFLMU1",272,0)
 Q
"RTN","DGPFLMU1",273,0)
 ;
"RTN","DGPFLMU1",274,0)
DBRSET ;
"RTN","DGPFLMU1",275,0)
 S DGLINE=DGLINE+1 D SET(DGARY,DGLINE,TEXT,1,,,.DGCNT)
"RTN","DGPFLMU1",276,0)
 Q
"RTN","DGPFRDB")
0^36^B2814866^n/a
"RTN","DGPFRDB",1,0)
DGPFRDB ;SHRPE/SGM - DBRS HISTORY REPORT ; Aug 07, 2018 09:45
"RTN","DGPFRDB",2,0)
 ;;5.3;Registration;**951**;Aug 13, 1993;Build 135
"RTN","DGPFRDB",3,0)
 ;     Last Edited: SHRPE/SGM - Aug 17,2018 10:16
"RTN","DGPFRDB",4,0)
 ;
"RTN","DGPFRDB",5,0)
 ; ICR# TYPE DESCRIIPTION
"RTN","DGPFRDB",6,0)
 ;----- ---- ----------------------------
"RTN","DGPFRDB",7,0)
 ; 1519 Sup  EN^XUTMDEVQ
"RTN","DGPFRDB",8,0)
 ;10006 Sup  ^DIC
"RTN","DGPFRDB",9,0)
 ;10086 Sup  HOME^%ZIS
"RTN","DGPFRDB",10,0)
 ;      Sup  $$FMTE^XLFDT
"RTN","DGPFRDB",11,0)
 ;
"RTN","DGPFRDB",12,0)
 QUIT
"RTN","DGPFRDB",13,0)
 ;
"RTN","DGPFRDB",14,0)
 ; 1. Select one Category I Behavioral flag assignment
"RTN","DGPFRDB",15,0)
 ; 2. Enter starting and ending dates.  These dates will be checked
"RTN","DGPFRDB",16,0)
 ;    against the DATE/TIME field in file 26.14
"RTN","DGPFRDB",17,0)
 ;
"RTN","DGPFRDB",18,0)
EN ;Entry point
"RTN","DGPFRDB",19,0)
 N X,Y,DGSRC,ZTSAVE,ZTREQ,ZTSK
"RTN","DGPFRDB",20,0)
 ;
"RTN","DGPFRDB",21,0)
 ;--- select a patient, behavioral flag assignment
"RTN","DGPFRDB",22,0)
 S X=$$SELASGN^DGPFUT6("BEH","Z") Q:X<1
"RTN","DGPFRDB",23,0)
 S DGSRC("ASGN")=+X
"RTN","DGPFRDB",24,0)
 S DGSRC("DFN")=$P(X,U,2)
"RTN","DGPFRDB",25,0)
 ;
"RTN","DGPFRDB",26,0)
 ;--- select beginning date
"RTN","DGPFRDB",27,0)
 W ! S X=$$DATEBEG Q:X<1
"RTN","DGPFRDB",28,0)
 ;
"RTN","DGPFRDB",29,0)
 ;--- select end date
"RTN","DGPFRDB",30,0)
 Q:$$DATEEND<1
"RTN","DGPFRDB",31,0)
 ;
"RTN","DGPFRDB",32,0)
 ;--- prompt for device
"RTN","DGPFRDB",33,0)
 S ZTSAVE("DGSRC(")=""
"RTN","DGPFRDB",34,0)
 S X="PRF DBRS Numbers Report"
"RTN","DGPFRDB",35,0)
 D EN^XUTMDEVQ("START^DGPFRDB1",X,.ZTSAVE)
"RTN","DGPFRDB",36,0)
 D HOME^%ZIS
"RTN","DGPFRDB",37,0)
 Q
"RTN","DGPFRDB",38,0)
 ;
"RTN","DGPFRDB",39,0)
 ;------------------------ PRIVATE SUBROUTINES ------------------------
"RTN","DGPFRDB",40,0)
 ;
"RTN","DGPFRDB",41,0)
DATEBEG() ;-- prompt for beginning date
"RTN","DGPFRDB",42,0)
 N X,Y,DGDIRA,DGDIRB
"RTN","DGPFRDB",43,0)
 S DGDIRA="Select Beginning Date"
"RTN","DGPFRDB",44,0)
 S DGDIRB=""
"RTN","DGPFRDB",45,0)
 S DGDIRO="DO"
"RTN","DGPFRDB",46,0)
 S X=$$ANSWER^DGPFUT(DGDIRA,DGDIRB,DGDIRO)
"RTN","DGPFRDB",47,0)
 I X>0 S DGSRC("BEG")=X
"RTN","DGPFRDB",48,0)
 Q X>0
"RTN","DGPFRDB",49,0)
 ;
"RTN","DGPFRDB",50,0)
DATEEND() ;-- prompt for ending date
"RTN","DGPFRDB",51,0)
 N X,Y,DGDIRA,DGDIRB,DGDIRO
"RTN","DGPFRDB",52,0)
 S Y=$$FMTE(DGSRC("BEG"))_" - "_$$FMTE(DT)
"RTN","DGPFRDB",53,0)
 S DGDIRA="Select Ending Date ("_Y_"): "
"RTN","DGPFRDB",54,0)
 S DGDIRB=$$FMTE(DT,"1Z")
"RTN","DGPFRDB",55,0)
 S DGDIRO="DOA^"_DGSRC("BEG")_":DT:EX"
"RTN","DGPFRDB",56,0)
 S X=$$ANSWER^DGPFUT(DGDIRA,DGDIRB,DGDIRO)
"RTN","DGPFRDB",57,0)
 I X>0 S DGSRC("END")=X
"RTN","DGPFRDB",58,0)
 Q X>0
"RTN","DGPFRDB",59,0)
 ;
"RTN","DGPFRDB",60,0)
FMTE(DATE,FMT) ;
"RTN","DGPFRDB",61,0)
 S:$G(FMT)="" FMT="2Z"
"RTN","DGPFRDB",62,0)
 Q $$FMTE^XLFDT(DATE,FMT)
"RTN","DGPFRDB",63,0)
 ;
"RTN","DGPFRDB",64,0)
 ; **** REPORT FORMAT ****
"RTN","DGPFRDB",65,0)
 ;         1         2         3         4         5         6         7         8
"RTN","DGPFRDB",66,0)
 ;12345678901234567890123456789012345678901234567890123456789012345678901234567890
"RTN","DGPFRDB",67,0)
 ;BEHAVIORAL PRF DISRUPTIVE BEHAVIOR DATA REPORT                         Page: 1
"RTN","DGPFRDB",68,0)
 ;Patient: [-----patient name-----------] (6890)        Dates: 01/01/18 - 03/09/18
"RTN","DGPFRDB",69,0)
 ;================================================================================
"RTN","DGPFRDB",70,0)
 ;
"RTN","DGPFRDB",71,0)
 ;   DBRS Number        Date    DBRS Other Information
"RTN","DGPFRDB",72,0)
 ;------------------  --------  --------------------------------------------------
"RTN","DGPFRDB",73,0)
 ;294AC Batavia NY VAMC              03/07/18    Rupert, Connie
"RTN","DGPFRDB",74,0)
 ;------------------  --------  --------------------------------------------------
"RTN","DGPFRDB",75,0)
 ;294AC.484744        03/07/18  Secondary DBRS Case opened for Patient.
"RTN","DGPFRDB",76,0)
 ;345.484744          03/07/18  Patient threatened clinician at outpatient appointm
"RTN","DGPFRDB",77,0)
 ;                              ent.  DBRS case opened.
"RTN","DGPFRDB",78,0)
 ;673AA.180320        02/12/18  Patient admitted and was belligerent and said he wou
"RTN","DGPFRDB",79,0)
 ;                              Ld like to talk with doctor.
"RTN","DGPFRDB",80,0)
 ;673AB.180310        02/12/18  Patient first came to 673AB
"RTN","DGPFRDB",81,0)
 ;_______________________________________________________________________________
"RTN","DGPFRDB1")
0^37^B36629736^n/a
"RTN","DGPFRDB1",1,0)
DGPFRDB1 ;SHRPE/SGM - DBRS HISTORY REPORT ; Aug 07, 2018 09:45
"RTN","DGPFRDB1",2,0)
 ;;5.3;Registration;**951**;Aug 13, 1993;Build 135
"RTN","DGPFRDB1",3,0)
 ;     Last Edited: SHRPE/SGM, Aug 10, 2018 16:04
"RTN","DGPFRDB1",4,0)
 ;
"RTN","DGPFRDB1",5,0)
 ; ICR# TYPE DESCRIIPTION
"RTN","DGPFRDB1",6,0)
 ;----- ---- ----------------------------
"RTN","DGPFRDB1",7,0)
 ;      Sup  $$FMTE^XLFDT
"RTN","DGPFRDB1",8,0)
 ;      Sup  $$STA^XUAF4
"RTN","DGPFRDB1",9,0)
 ;
"RTN","DGPFRDB1",10,0)
 ;  Called from DGPFRDB routine
"RTN","DGPFRDB1",11,0)
 ;  See DGPFRDB for example format of report
"RTN","DGPFRDB1",12,0)
 QUIT
"RTN","DGPFRDB1",13,0)
 ;
"RTN","DGPFRDB1",14,0)
 ;     PAGE(page#,row#) = line of data in report
"RTN","DGPFRDB1",15,0)
 ;     PG = total number of pages in report
"RTN","DGPFRDB1",16,0)
 ;
"RTN","DGPFRDB1",17,0)
START ;--- Taskman Entry Point
"RTN","DGPFRDB1",18,0)
 N X,Y,DGHIST,HEAD,PG,PAGE,RPT,TRM
"RTN","DGPFRDB1",19,0)
 Q:'$G(DGSRC("ASGN"))
"RTN","DGPFRDB1",20,0)
 S TRM=($E(IOST)="C")
"RTN","DGPFRDB1",21,0)
 S PG=0
"RTN","DGPFRDB1",22,0)
 S RPT=$NA(^TMP("DGPFRDB",$J)) K @RPT
"RTN","DGPFRDB1",23,0)
 D GET ;           create DGHIST()
"RTN","DGPFRDB1",24,0)
 D BLDHEAD ;       create HEAD()
"RTN","DGPFRDB1",25,0)
 D BLDPAGES ;      create formatted pages for the report
"RTN","DGPFRDB1",26,0)
 D DISPLAY
"RTN","DGPFRDB1",27,0)
 I TRM W @IOF
"RTN","DGPFRDB1",28,0)
 K @RPT
"RTN","DGPFRDB1",29,0)
 Q
"RTN","DGPFRDB1",30,0)
 ;
"RTN","DGPFRDB1",31,0)
 ;------------------------ PRIVATE SUBROUTINES ------------------------
"RTN","DGPFRDB1",32,0)
BLDHEAD ; construct HEAD()
"RTN","DGPFRDB1",33,0)
 ;;
"RTN","DGPFRDB1",34,0)
 ;;BEHAVIORAL PRF DISRUPTIVE BEHAVIOR DATA REPORT                         Page:
"RTN","DGPFRDB1",35,0)
 ;;Patient: [-----patient name-----------] (6890)        Dates: 01/01/18 - 03/09/18
"RTN","DGPFRDB1",36,0)
 ;;================================================================================
"RTN","DGPFRDB1",37,0)
 ;;   DBRS Number        Date    DBRS Other Information
"RTN","DGPFRDB1",38,0)
 ;;------------------  --------  --------------------------------------------------
"RTN","DGPFRDB1",39,0)
 ;;
"RTN","DGPFRDB1",40,0)
 N X,Y,TMP
"RTN","DGPFRDB1",41,0)
 S X="BEHAVIORAL PRF DISRUPTIVE BEHAVIOR DATA REPORT",$E(X,72)="Page: "
"RTN","DGPFRDB1",42,0)
 S HEAD(1)=$P($T(BLDHEAD+2),";",3)
"RTN","DGPFRDB1",43,0)
 ;
"RTN","DGPFRDB1",44,0)
 D GETPAT^DGPFUT2(DGSRC("DFN"),.TMP)
"RTN","DGPFRDB1",45,0)
 S X="Patient: "_TMP("NAME")_" ("_$E(TMP("SSN"),6,$L(TMP("SSN")))_")"
"RTN","DGPFRDB1",46,0)
 S Y="Dates: "_$$FMTE(DGSRC("BEG"))_" - "_$$FMTE(DGSRC("END"))
"RTN","DGPFRDB1",47,0)
 S $E(X,55)=Y
"RTN","DGPFRDB1",48,0)
 S HEAD(2)=X
"RTN","DGPFRDB1",49,0)
 S $P(HEAD(3),"=",81)=""
"RTN","DGPFRDB1",50,0)
 S HEAD(4)=$P($T(BLDHEAD+5),";",3)
"RTN","DGPFRDB1",51,0)
 S HEAD(5)=$P($T(BLDHEAD+6),";",3)
"RTN","DGPFRDB1",52,0)
 S HEAD(9)=$TR(HEAD(3),"=","_")
"RTN","DGPFRDB1",53,0)
 Q
"RTN","DGPFRDB1",54,0)
 ;
"RTN","DGPFRDB1",55,0)
BLDPAGES ; construct PAGE(page#,row#)
"RTN","DGPFRDB1",56,0)
 N J,DATE,ROW
"RTN","DGPFRDB1",57,0)
 S PG=0
"RTN","DGPFRDB1",58,0)
 D BLDPGA
"RTN","DGPFRDB1",59,0)
 I '$G(@RPT@("DATE")) D  Q
"RTN","DGPFRDB1",60,0)
 . S J="     There were no DBRS data edits found for this assignment."
"RTN","DGPFRDB1",61,0)
 . D BLDPGS(J)
"RTN","DGPFRDB1",62,0)
 . Q
"RTN","DGPFRDB1",63,0)
 S DATE="A" F J=0:0 S DATE=$O(@RPT@("DATE",DATE),-1) Q:'DATE  D
"RTN","DGPFRDB1",64,0)
 . N I,L,X,Y,Z,DBRS,DBRSX,OTHER,VAL
"RTN","DGPFRDB1",65,0)
 . D BLDPGN(0)
"RTN","DGPFRDB1",66,0)
 . S X=@RPT@("DATE",DATE,0)
"RTN","DGPFRDB1",67,0)
 . S VAL=$P(X,U),$E(VAL,41)=$P(X,U,2),$E(VAL,51)=$P(X,U,3)
"RTN","DGPFRDB1",68,0)
 . D BLDPGS(VAL),BLDPGS(HEAD(5))
"RTN","DGPFRDB1",69,0)
 . S DBRSX=0
"RTN","DGPFRDB1",70,0)
 . F I=0:0 S DBRSX=$O(@RPT@("DATE",DATE,1,DBRSX)) Q:DBRSX=""  D
"RTN","DGPFRDB1",71,0)
 . . S X=@RPT@("DATE",DATE,1,DBRSX)
"RTN","DGPFRDB1",72,0)
 . . S DBRS=$P(X,U)
"RTN","DGPFRDB1",73,0)
 . . S Y=$P(X,U,2)
"RTN","DGPFRDB1",74,0)
 . . S OTHER=$P(X,U,3)
"RTN","DGPFRDB1",75,0)
 . . S X=DBRS,$E(X,21)=Y,$E(X,31)=OTHER
"RTN","DGPFRDB1",76,0)
 . . D BLDPGS(X) S X=$E(X,81,$L(X)) ; remnant no more than 10 chars
"RTN","DGPFRDB1",77,0)
 . . ;  are we at end of page?
"RTN","DGPFRDB1",78,0)
 . . I (IOSL-ROW)<2 D BLDPGA
"RTN","DGPFRDB1",79,0)
 . . I $L(X) D BLDPGN(1) S Z="",$E(Z,31)=X D BLDPGS(Z)
"RTN","DGPFRDB1",80,0)
 . . ;  are we at end of page
"RTN","DGPFRDB1",81,0)
 . . I (IOSL-ROW)<2 D BLDPGA
"RTN","DGPFRDB1",82,0)
 . . Q
"RTN","DGPFRDB1",83,0)
 . D BLDPGS("")
"RTN","DGPFRDB1",84,0)
 . Q
"RTN","DGPFRDB1",85,0)
 Q
"RTN","DGPFRDB1",86,0)
 ;
"RTN","DGPFRDB1",87,0)
BLDPGN(WHERE) ;  add a new page?
"RTN","DGPFRDB1",88,0)
 ;   if WHERE=0, starting new history record
"RTN","DGPFRDB1",89,0)
 ;   if WHERE=1, for a history record writing a DBRS record
"RTN","DGPFRDB1",90,0)
 I +$G(WHERE)=0 I (IOSL-ROW)>3 Q
"RTN","DGPFRDB1",91,0)
 I +$G(WHERE) I (IOSL-ROW)>1 Q
"RTN","DGPFRDB1",92,0)
 ;
"RTN","DGPFRDB1",93,0)
BLDPGA ;  add a new page
"RTN","DGPFRDB1",94,0)
 ;  fill out existing page if PG>0
"RTN","DGPFRDB1",95,0)
 I PG>0,(IOSL-ROW)>0 D
"RTN","DGPFRDB1",96,0)
 . N L,T,X
"RTN","DGPFRDB1",97,0)
 . S T="   Press any key to continue, '^' to exit: "
"RTN","DGPFRDB1",98,0)
 . F L=ROW+1:1:IOSL S X="" S:(L=IOSL)&TRM X=T D BLDPGS(X)
"RTN","DGPFRDB1",99,0)
 . Q
"RTN","DGPFRDB1",100,0)
 ;   start a new page
"RTN","DGPFRDB1",101,0)
 S PG=1+PG
"RTN","DGPFRDB1",102,0)
 S @RPT@("RPT",PG,1)=HEAD(1)_PG
"RTN","DGPFRDB1",103,0)
 N I F I=2:1:5 S @RPT@("RPT",PG,I)=HEAD(I)
"RTN","DGPFRDB1",104,0)
 S ROW=5
"RTN","DGPFRDB1",105,0)
 Q
"RTN","DGPFRDB1",106,0)
 ;
"RTN","DGPFRDB1",107,0)
BLDPGS(V) ;  set a row in PAGE()
"RTN","DGPFRDB1",108,0)
 S ROW=ROW+1,@RPT@("RPT",PG,ROW)=$E(V,1,80)
"RTN","DGPFRDB1",109,0)
 Q
"RTN","DGPFRDB1",110,0)
 ;
"RTN","DGPFRDB1",111,0)
DISPLAY ;
"RTN","DGPFRDB1",112,0)
 N I,J,X,PG,OUT,ROW
"RTN","DGPFRDB1",113,0)
 S OUT=0
"RTN","DGPFRDB1",114,0)
 I TRM W @IOF
"RTN","DGPFRDB1",115,0)
 F PG=0:0 S PG=$O(@RPT@("RPT",PG)) Q:'PG  D  Q:OUT
"RTN","DGPFRDB1",116,0)
 . N L,X,PAGE
"RTN","DGPFRDB1",117,0)
 . M PAGE=@RPT@("RPT",PG)
"RTN","DGPFRDB1",118,0)
 . I PG>1 W @IOF
"RTN","DGPFRDB1",119,0)
 . F ROW=0:0 S ROW=$O(PAGE(ROW)) Q:'ROW  W !,PAGE(ROW)
"RTN","DGPFRDB1",120,0)
 . I TRM S OUT=$$DISPX
"RTN","DGPFRDB1",121,0)
 . Q
"RTN","DGPFRDB1",122,0)
 ;  for terminal, last page may not have press return text
"RTN","DGPFRDB1",123,0)
 I TRM D
"RTN","DGPFRDB1",124,0)
 . S PG=$O(@RPT@("RPT","A"),-1)
"RTN","DGPFRDB1",125,0)
 . S ROW=$O(@RPT@("RPT",PG,"A"),-1)
"RTN","DGPFRDB1",126,0)
 . S X=@RPT@("RPT",PG,ROW)
"RTN","DGPFRDB1",127,0)
 Q
"RTN","DGPFRDB1",128,0)
 ;
"RTN","DGPFRDB1",129,0)
DISPX() ;  for terminal, check if this is the last page
"RTN","DGPFRDB1",130,0)
 I '$O(@RPT@("RPT",PG)) D
"RTN","DGPFRDB1",131,0)
 . I ROW<IOSL W !,"   Press any key to continue, '^' to exit: "
"RTN","DGPFRDB1",132,0)
 . Q
"RTN","DGPFRDB1",133,0)
 N X R X:DTIME
"RTN","DGPFRDB1",134,0)
 Q $S('$T:1,1:X[U)
"RTN","DGPFRDB1",135,0)
 ;
"RTN","DGPFRDB1",136,0)
FMTE(DATE) Q $$FMTE^XLFDT(DATE,"2Z")
"RTN","DGPFRDB1",137,0)
 ;
"RTN","DGPFRDB1",138,0)
GET ;
"RTN","DGPFRDB1",139,0)
 ;   get the History data
"RTN","DGPFRDB1",140,0)
 ;   store a copy of data in ^TMP
"RTN","DGPFRDB1",141,0)
 ;      @RPT@("INPUT")        = input answers
"RTN","DGPFRDB1",142,0)
 ;      @RPT@("HIST",date)    = history DGPFAH()
"RTN","DGPFRDB1",143,0)
 ;      @RPT@("HIST",9999999) = current DGPFA()
"RTN","DGPFRDB1",144,0)
 ;      @RPT@("DATE")                  = total number of records
"RTN","DGPFRDB1",145,0)
 ;      @RPT@("DATE",DATE,0)           = SITE_U_EDITDT_U_ENTERBY 
"RTN","DGPFRDB1",146,0)
 ;      @RPT@("DATE",date,1," "_dbrs#) = dbrs#^ext_date^other
"RTN","DGPFRDB1",147,0)
 ;
"RTN","DGPFRDB1",148,0)
 N J,X,Y,DATE,DGHIST,DGPFA,ED,ST,TOT
"RTN","DGPFRDB1",149,0)
 ;  save input date to ^TMP
"RTN","DGPFRDB1",150,0)
 M @RPT@("INPUT")=DGSRC
"RTN","DGPFRDB1",151,0)
 S ST=DGSRC("BEG")-.000001
"RTN","DGPFRDB1",152,0)
 S ED=(DGSRC("END")+.25)
"RTN","DGPFRDB1",153,0)
 S TOT=0 ;    total# of History records with edited DBRS
"RTN","DGPFRDB1",154,0)
 ;
"RTN","DGPFRDB1",155,0)
 ;--- get all history records sorted by date
"RTN","DGPFRDB1",156,0)
 D GETALLDT^DGPFAAH(DGSRC("ASGN"),.DGHIST)
"RTN","DGPFRDB1",157,0)
 F DATE=ST:0 S DATE=$O(DGHIST(DATE)) Q:'DATE  Q:DATE>ED  D
"RTN","DGPFRDB1",158,0)
 . N I,X,Y,L,DGPFAH,EDITDT,ENTERBY,IEN,SITE
"RTN","DGPFRDB1",159,0)
 . S IEN=DGHIST(DATE)
"RTN","DGPFRDB1",160,0)
 . D GETHIST^DGPFAAH(IEN,.DGPFAH,1)
"RTN","DGPFRDB1",161,0)
 . Q:'$D(DGPFAH("DBRS"))
"RTN","DGPFRDB1",162,0)
 . M @RPT@("HIST",DATE)=DGPFAH
"RTN","DGPFRDB1",163,0)
 . ;   assignment history data for the report
"RTN","DGPFRDB1",164,0)
 . S ENTERBY=$P($G(DGPFAH("ENTERBY")),U,2)
"RTN","DGPFRDB1",165,0)
 . S EDITDT=$$FMTE(DATE\1)
"RTN","DGPFRDB1",166,0)
 . S SITE="",Y=$G(DGPFAH("ORIGFAC"))
"RTN","DGPFRDB1",167,0)
 . I +Y S SITE=$$STA^XUAF4(+Y)_" "_$P(Y,U,2)
"RTN","DGPFRDB1",168,0)
 . S @RPT@("DATE",DATE,0)=SITE_U_EDITDT_U_ENTERBY
"RTN","DGPFRDB1",169,0)
 . ;
"RTN","DGPFRDB1",170,0)
 . S L=0 F  S L=$O(DGPFAH("DBRS",L)) Q:'L  D
"RTN","DGPFRDB1",171,0)
 . . N X,Y,DAT,DBDT,DBRS,OTHER,STAT
"RTN","DGPFRDB1",172,0)
 . . F I=1:1:5 S DAT(I)=$P(DGPFAH("DBRS",L),U,I)
"RTN","DGPFRDB1",173,0)
 . . S STAT=$P(DAT(4),";")
"RTN","DGPFRDB1",174,0)
 . . Q:STAT="N"  ;   no change to DBRS data
"RTN","DGPFRDB1",175,0)
 . . S DBRS=DAT(1)
"RTN","DGPFRDB1",176,0)
 . . S OTHER=DAT(2)
"RTN","DGPFRDB1",177,0)
 . . I STAT="D" S OTHER="[DELETED] "_OTHER
"RTN","DGPFRDB1",178,0)
 . . I STAT="A" S OTHER="[NEW] "_OTHER
"RTN","DGPFRDB1",179,0)
 . . S DBDT=$P(DAT(3),";") S:DBDT DBDT=$$FMTE(DBDT\1)
"RTN","DGPFRDB1",180,0)
 . . S @RPT@("DATE",DATE,1," "_DBRS)=DBRS_U_DBDT_U_OTHER
"RTN","DGPFRDB1",181,0)
 . . Q
"RTN","DGPFRDB1",182,0)
 . I $D(@RPT@("DATE",DATE,1)) S TOT=TOT+1
"RTN","DGPFRDB1",183,0)
 . Q
"RTN","DGPFRDB1",184,0)
 ;
"RTN","DGPFRDB1",185,0)
 ;   get the current DBRS data
"RTN","DGPFRDB1",186,0)
 D GETASGN^DGPFAA(DGSRC("ASGN"),.DGPFA,1) D
"RTN","DGPFRDB1",187,0)
 . N L,X,SITE
"RTN","DGPFRDB1",188,0)
 . S X=DGPFA("OWNER")
"RTN","DGPFRDB1",189,0)
 . S SITE=$$STA^XUAF4(+X)_" "_$P(X,U,2)
"RTN","DGPFRDB1",190,0)
 . M @RPT@("HIST",9999999)=DGPFA
"RTN","DGPFRDB1",191,0)
 . S @RPT@("DATE",9999999,0)=SITE_"^Current^"
"RTN","DGPFRDB1",192,0)
 . F L=0:0 S L=$O(DGPFA("DBRS#",L)) Q:'L  D
"RTN","DGPFRDB1",193,0)
 . . N DATE,DBRS,OTHER
"RTN","DGPFRDB1",194,0)
 . . S DBRS=$P(DGPFA("DBRS#",L),U)
"RTN","DGPFRDB1",195,0)
 . . S DATE=$P($G(DGPFA("DBRS DATE",L)),U) S:DATE DATE=$$FMTE(DATE\1)
"RTN","DGPFRDB1",196,0)
 . . S OTHER=$P($G(DGPFA("DBRS OTHER",L)),U)
"RTN","DGPFRDB1",197,0)
 . . S @RPT@("DATE",9999999,1," "_DBRS)=DBRS_U_DATE_U_OTHER
"RTN","DGPFRDB1",198,0)
 . . Q
"RTN","DGPFRDB1",199,0)
 . S TOT=TOT+1
"RTN","DGPFRDB1",200,0)
 . Q
"RTN","DGPFRDB1",201,0)
 S @RPT@("DATE")=TOT
"RTN","DGPFRDB1",202,0)
 Q
"RTN","DGPFTR")
0^32^B25361396^n/a
"RTN","DGPFTR",1,0)
DGPFTR ;SHRPE/YMG - PRF TRANSFER REQUESTS SCREEN ; 05/08/18
"RTN","DGPFTR",2,0)
 ;;5.3;Registration;**951**;Aug 13, 1993;Build 135
"RTN","DGPFTR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPFTR",4,0)
 ;
"RTN","DGPFTR",5,0)
 ; This is the main screen for DGPF PRF TRANSFER REQUESTS option.
"RTN","DGPFTR",6,0)
 ;
"RTN","DGPFTR",7,0)
 Q
"RTN","DGPFTR",8,0)
EN ; entry point
"RTN","DGPFTR",9,0)
 N DSPSTR ; string of filters for display list
"RTN","DGPFTR",10,0)
 ;
"RTN","DGPFTR",11,0)
 S DSPSTR="ALL^ALL^ALL^2^ALL" ; default to display all pending requests
"RTN","DGPFTR",12,0)
 ; load list template 
"RTN","DGPFTR",13,0)
 D EN^VALM("DGPF PRF TRANSFER REQUESTS")
"RTN","DGPFTR",14,0)
 Q
"RTN","DGPFTR",15,0)
 ;
"RTN","DGPFTR",16,0)
HDR ;Header Code
"RTN","DGPFTR",17,0)
 D BLDHDR(DSPSTR)
"RTN","DGPFTR",18,0)
 Q
"RTN","DGPFTR",19,0)
 ;
"RTN","DGPFTR",20,0)
INIT ;Init variables and list array
"RTN","DGPFTR",21,0)
 S VALMBG=1
"RTN","DGPFTR",22,0)
 ; display list of pending requests by default
"RTN","DGPFTR",23,0)
 D BLD(DSPSTR)
"RTN","DGPFTR",24,0)
 Q
"RTN","DGPFTR",25,0)
 ;
"RTN","DGPFTR",26,0)
HELP ;Help Code
"RTN","DGPFTR",27,0)
 D FULL^VALM1
"RTN","DGPFTR",28,0)
 W @IOF
"RTN","DGPFTR",29,0)
 W !,"This screen lists PRF transfer requests. It also allows users to review"
"RTN","DGPFTR",30,0)
 W !,"and subsequently approve / reject a pending transfer request."
"RTN","DGPFTR",31,0)
 W !
"RTN","DGPFTR",32,0)
 S VALMBCK="R"
"RTN","DGPFTR",33,0)
 Q
"RTN","DGPFTR",34,0)
 ;
"RTN","DGPFTR",35,0)
EXIT ; exit point
"RTN","DGPFTR",36,0)
 ;
"RTN","DGPFTR",37,0)
 D CLEAN^VALM10
"RTN","DGPFTR",38,0)
 D CLEAR^VALM1
"RTN","DGPFTR",39,0)
 Q
"RTN","DGPFTR",40,0)
 ;
"RTN","DGPFTR",41,0)
BLD(STR) ; build list of transfer requests for display
"RTN","DGPFTR",42,0)
 ; STR - string of parameters that limit which entries to include:
"RTN","DGPFTR",43,0)
 ;   query id ^ patient ^ PRF flag ^ request status ^ start date/time ^ end date/time
"RTN","DGPFTR",44,0)
 ;   Note: any piece may be set to "ALL" instead of an actual value
"RTN","DGPFTR",45,0)
 ;
"RTN","DGPFTR",46,0)
 N EDTM,FLAG,PAT,REQIEN,SDTM,STATUS
"RTN","DGPFTR",47,0)
 N DIDX,DIDX1,DIDX2,FIDX,FIDX1,FIDX2,PIDX,PIDX1,PIDX2,SIDX,SIDX1,SIDX2
"RTN","DGPFTR",48,0)
 D CLEAN^VALM10 S VALMCNT=0
"RTN","DGPFTR",49,0)
 W !!,"Working..."
"RTN","DGPFTR",50,0)
 I $P(STR,U)'="ALL" D  Q
"RTN","DGPFTR",51,0)
 .; looking for a specific query id - there's only one entry possible
"RTN","DGPFTR",52,0)
 .S REQIEN=$$FNDLOG^DGPFHLT3($P(STR,U))
"RTN","DGPFTR",53,0)
 .I 'REQIEN S VALMCNT=$$NOREC() Q
"RTN","DGPFTR",54,0)
 .S VALMCNT=$$BLDLN(VALMCNT,REQIEN)
"RTN","DGPFTR",55,0)
 .Q
"RTN","DGPFTR",56,0)
 S PAT=$P(STR,U,2),FLAG=$P(STR,U,3),STATUS=$P(STR,U,4),SDTM=$P(STR,U,5),EDTM=$P(STR,U,6)
"RTN","DGPFTR",57,0)
 ; loop through patient level
"RTN","DGPFTR",58,0)
 S PIDX1=$S(PAT="ALL":"",1:$O(^DGPF(26.22,"D",PAT),-1))
"RTN","DGPFTR",59,0)
 S PIDX2=$S(PAT="ALL":"",1:$O(^DGPF(26.22,"D",PAT)))
"RTN","DGPFTR",60,0)
 S PIDX=PIDX1 F  S PIDX=$O(^DGPF(26.22,"D",PIDX)) Q:PIDX=PIDX2  D
"RTN","DGPFTR",61,0)
 .; loop through flag level
"RTN","DGPFTR",62,0)
 .S FIDX1=$S(FLAG="ALL":"",1:$O(^DGPF(26.22,"D",PIDX,FLAG),-1))
"RTN","DGPFTR",63,0)
 .S FIDX2=$S(FLAG="ALL":"",1:$O(^DGPF(26.22,"D",PIDX,FLAG)))
"RTN","DGPFTR",64,0)
 .S FIDX=FIDX1 F  S FIDX=$O(^DGPF(26.22,"D",PIDX,FIDX)) Q:FIDX=FIDX2  D
"RTN","DGPFTR",65,0)
 ..; loop through status level
"RTN","DGPFTR",66,0)
 ..S SIDX1=$S(STATUS="ALL":"",1:$O(^DGPF(26.22,"D",PIDX,FIDX,STATUS),-1))
"RTN","DGPFTR",67,0)
 ..S SIDX2=$S(STATUS="ALL":"",1:$O(^DGPF(26.22,"D",PIDX,FIDX,STATUS)))
"RTN","DGPFTR",68,0)
 ..S SIDX=SIDX1 F  S SIDX=$O(^DGPF(26.22,"D",PIDX,FIDX,SIDX)) Q:SIDX=SIDX2  D
"RTN","DGPFTR",69,0)
 ...; loop through request date/time level
"RTN","DGPFTR",70,0)
 ...S DIDX1=$S(SDTM="ALL":"",1:$O(^DGPF(26.22,"D",PIDX,FIDX,SIDX,SDTM),-1))
"RTN","DGPFTR",71,0)
 ...S DIDX2=$S(SDTM="ALL":"",EDTM="ALL":"",1:$O(^DGPF(26.22,"D",PIDX,FIDX,SIDX,EDTM)))
"RTN","DGPFTR",72,0)
 ...S DIDX=DIDX1 F  S DIDX=$O(^DGPF(26.22,"D",PIDX,FIDX,SIDX,DIDX)) Q:DIDX=DIDX2  D
"RTN","DGPFTR",73,0)
 ....S REQIEN=$O(^DGPF(26.22,"D",PIDX,FIDX,SIDX,DIDX,""))
"RTN","DGPFTR",74,0)
 ....I REQIEN S VALMCNT=$$BLDLN(VALMCNT,REQIEN)
"RTN","DGPFTR",75,0)
 ....I '(VALMCNT#10) W "."
"RTN","DGPFTR",76,0)
 ....Q
"RTN","DGPFTR",77,0)
 ...Q
"RTN","DGPFTR",78,0)
 ..Q
"RTN","DGPFTR",79,0)
 .Q
"RTN","DGPFTR",80,0)
 I VALMCNT=0 S VALMCNT=$$NOREC()
"RTN","DGPFTR",81,0)
 Q
"RTN","DGPFTR",82,0)
 ;
"RTN","DGPFTR",83,0)
NOREC() ; show message when display list is empty
"RTN","DGPFTR",84,0)
 ; returns line count in the created array
"RTN","DGPFTR",85,0)
 ;
"RTN","DGPFTR",86,0)
 D SET^VALM10(1,"")
"RTN","DGPFTR",87,0)
 D SET^VALM10(2,"")
"RTN","DGPFTR",88,0)
 D SET^VALM10(3,$$SETSTR^VALM1("No transfer request(s) found.","",26,29))
"RTN","DGPFTR",89,0)
 Q 3
"RTN","DGPFTR",90,0)
 ;
"RTN","DGPFTR",91,0)
BLDLN(LNUM,REQIEN) ; build one line to display
"RTN","DGPFTR",92,0)
 ; LNUM - last line number
"RTN","DGPFTR",93,0)
 ; REQIEN - request ien in file 26.22
"RTN","DGPFTR",94,0)
 ;
"RTN","DGPFTR",95,0)
 ; returns current line number
"RTN","DGPFTR",96,0)
 ;
"RTN","DGPFTR",97,0)
 N DGFDA,FLAG,IENS,LINE,LN,PAT,REQDTM,STATUS
"RTN","DGPFTR",98,0)
 ; get data from 26.22
"RTN","DGPFTR",99,0)
 S IENS=REQIEN_"," D GETS^DIQ(26.22,IENS,".01;.03:.05","EI","DGFDA")
"RTN","DGPFTR",100,0)
 S PAT=$G(DGFDA(26.22,IENS,.03,"E"))
"RTN","DGPFTR",101,0)
 S FLAG=$G(DGFDA(26.22,IENS,.04,"E"))
"RTN","DGPFTR",102,0)
 S STATUS=$G(DGFDA(26.22,IENS,.05,"E"))
"RTN","DGPFTR",103,0)
 S REQDTM=$$FMTE^XLFDT($G(DGFDA(26.22,IENS,.01,"I")),"2DZ")
"RTN","DGPFTR",104,0)
 ; build line
"RTN","DGPFTR",105,0)
 S LINE="",LN=LNUM+1
"RTN","DGPFTR",106,0)
 S LINE=$$SETSTR^VALM1(LN,LINE,1,3)
"RTN","DGPFTR",107,0)
 S LINE=$$SETFLD^VALM1(PAT,LINE,"PATIENT")
"RTN","DGPFTR",108,0)
 S LINE=$$SETFLD^VALM1(FLAG,LINE,"FLAG")
"RTN","DGPFTR",109,0)
 S LINE=$$SETFLD^VALM1(STATUS,LINE,"STATUS")
"RTN","DGPFTR",110,0)
 S LINE=$$SETFLD^VALM1(REQDTM,LINE,"DATE")
"RTN","DGPFTR",111,0)
 D SET^VALM10(LN,LINE,LN)
"RTN","DGPFTR",112,0)
 S @VALMAR@("IDX",LN,LN)=$G(REQIEN)
"RTN","DGPFTR",113,0)
 Q LN
"RTN","DGPFTR",114,0)
 ;
"RTN","DGPFTR",115,0)
BLDHDR(STR) ; build display header
"RTN","DGPFTR",116,0)
 ; STR - string of parameters for the current view (see tag BLD)
"RTN","DGPFTR",117,0)
 ;
"RTN","DGPFTR",118,0)
 N EDTM,FLAG,PAT,QID,SDTM,STATUS
"RTN","DGPFTR",119,0)
 S QID=$P(STR,U),PAT=$P(STR,U,2),FLAG=$P(STR,U,3),STATUS=$P(STR,U,4),SDTM=$P(STR,U,5),EDTM=$P(STR,U,6)
"RTN","DGPFTR",120,0)
 S VALMHDR(1)="Current view:"
"RTN","DGPFTR",121,0)
 S VALMHDR(2)="Query Id: "_$$LJ^XLFSTR(QID,4) I QID'="ALL" Q
"RTN","DGPFTR",122,0)
 S VALMHDR(2)=VALMHDR(2)_"Req. Status: "_$$LJ^XLFSTR($S(STATUS="ALL":STATUS,1:$$EXTERNAL^DILFD(26.22,.05,,STATUS)),8)
"RTN","DGPFTR",123,0)
 S VALMHDR(2)=VALMHDR(2)_" Dates: "_$$FMTE^XLFDT(SDTM,"2Z")_$S(SDTM="ALL":"",+$P(SDTM,".",2)'>0:"@00:00:00",1:"")
"RTN","DGPFTR",124,0)
 I EDTM'="" S VALMHDR(2)=VALMHDR(2)_" - "_$$FMTE^XLFDT(EDTM,"2Z")_$S(+$P(EDTM,".",2)'>0:"@00:00:00",1:"")
"RTN","DGPFTR",125,0)
 S VALMHDR(3)="Patient: "_$$LJ^XLFSTR($S(PAT="ALL":PAT,1:$$EXTERNAL^DILFD(26.22,.03,,$P(STR,U,2))),39)
"RTN","DGPFTR",126,0)
 S VALMHDR(3)=VALMHDR(3)_"Flag: "_$$LJ^XLFSTR($S(FLAG="ALL":FLAG,1:$$EXTERNAL^DILFD(26.22,.04,,$P(STR,U,3))),39)
"RTN","DGPFTR",127,0)
 S VALMHDR(4)=""
"RTN","DGPFTR",128,0)
 Q
"RTN","DGPFTR1")
0^33^B75593234^n/a
"RTN","DGPFTR1",1,0)
DGPFTR1 ;SHRPE/YMG - PRF TRANSFER REQUESTS ACTIONS ; 05/08/18
"RTN","DGPFTR1",2,0)
 ;;5.3;Registration;**951**;Aug 13, 1993;Build 135
"RTN","DGPFTR1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","DGPFTR1",4,0)
 ;
"RTN","DGPFTR1",5,0)
 ; List Manager actions for DGPF PRF TRANSFER REQUESTS option.
"RTN","DGPFTR1",6,0)
 ;
"RTN","DGPFTR1",7,0)
 Q
"RTN","DGPFTR1",8,0)
 ;
"RTN","DGPFTR1",9,0)
CV ; change list view
"RTN","DGPFTR1",10,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","DGPFTR1",11,0)
 N DTMOK,EDTM,FLAG,PAT,QID,SDTM,STATUS,STR,TMPDTM,XQY0
"RTN","DGPFTR1",12,0)
 D FULL^VALM1,CLEAR^VALM1
"RTN","DGPFTR1",13,0)
 S STR=""
"RTN","DGPFTR1",14,0)
 ; query Id selection
"RTN","DGPFTR1",15,0)
 S QID=$$ASKALL("query Id","query Ids") I QID="" G CVX
"RTN","DGPFTR1",16,0)
 I QID'="ALL" S QID=$$SELQID() S STR=QID D BLDHDR^DGPFTR(STR),BLD^DGPFTR(STR) G CVX
"RTN","DGPFTR1",17,0)
 ; patient selection
"RTN","DGPFTR1",18,0)
 S PAT=$$ASKALL("patient","patients") I PAT="" G CVX
"RTN","DGPFTR1",19,0)
 I PAT'="ALL" D  I $D(DUOUT)!$D(DTOUT) G CVX
"RTN","DGPFTR1",20,0)
 .S DIR(0)="PA^2:AEMQ"
"RTN","DGPFTR1",21,0)
 .S DIR("S")="I $O(^DGPF(26.22,""D"",Y,""""))"
"RTN","DGPFTR1",22,0)
 .S DIR("A",1)=""
"RTN","DGPFTR1",23,0)
 .S DIR("A")="Select patient to view requests for: "
"RTN","DGPFTR1",24,0)
 .D ^DIR K DIR
"RTN","DGPFTR1",25,0)
 .S PAT=$P(Y,U) ; patient DFN
"RTN","DGPFTR1",26,0)
 .Q
"RTN","DGPFTR1",27,0)
 ; flag selection
"RTN","DGPFTR1",28,0)
 S FLAG=$$ASKALL("flag","flags") I FLAG="" G CVX
"RTN","DGPFTR1",29,0)
 I FLAG'="ALL" D  I $D(DUOUT)!$D(DTOUT) G CVX
"RTN","DGPFTR1",30,0)
 .S DIR(0)="PA^26.15:AEMQ"
"RTN","DGPFTR1",31,0)
 .S DIR("A",1)=""
"RTN","DGPFTR1",32,0)
 .S DIR("A")="Select record flag to view requests for: "
"RTN","DGPFTR1",33,0)
 .D ^DIR K DIR
"RTN","DGPFTR1",34,0)
 .S FLAG=$P(Y,U) ; flag ien in file 26.15
"RTN","DGPFTR1",35,0)
 .Q
"RTN","DGPFTR1",36,0)
 ; status selection
"RTN","DGPFTR1",37,0)
 S STATUS=$$ASKALL("status","statuses") I STATUS="" G CVX
"RTN","DGPFTR1",38,0)
 I STATUS'="ALL" D  I $D(DUOUT)!$D(DTOUT) G CVX
"RTN","DGPFTR1",39,0)
 .S DIR(0)="26.22,.05A"
"RTN","DGPFTR1",40,0)
 .S DIR("A",1)=""
"RTN","DGPFTR1",41,0)
 .S DIR("A")="Select status of the requests to view: "
"RTN","DGPFTR1",42,0)
 .D ^DIR K DA,DIR
"RTN","DGPFTR1",43,0)
 .S STATUS=+Y ; internal status code (26.22/.05)
"RTN","DGPFTR1",44,0)
 .Q
"RTN","DGPFTR1",45,0)
 ; date/time selection
"RTN","DGPFTR1",46,0)
 S SDTM=$$ASKALL("date/time","dates/times") I SDTM="" G CVX
"RTN","DGPFTR1",47,0)
 I SDTM'="ALL" D  I $D(DUOUT)!$D(DTOUT) G CVX
"RTN","DGPFTR1",48,0)
 .S TMPDTM=$O(^DGPF(26.22,"B",""))
"RTN","DGPFTR1",49,0)
 .S DIR(0)="DA^::TSX"
"RTN","DGPFTR1",50,0)
 .S DIR("A",1)=""
"RTN","DGPFTR1",51,0)
 .S DIR("A",2)="Note: starting date defaults to the earliest request on file."
"RTN","DGPFTR1",52,0)
 .S DIR("A",3)=""
"RTN","DGPFTR1",53,0)
 .S DIR("A")="Enter the starting date of the requests to view: "
"RTN","DGPFTR1",54,0)
 .S DIR("B")=$$FMTE^XLFDT(TMPDTM,1)
"RTN","DGPFTR1",55,0)
 .D ^DIR K DIR
"RTN","DGPFTR1",56,0)
 .S SDTM=+Y
"RTN","DGPFTR1",57,0)
 .I $D(DUOUT)!$D(DTOUT) Q
"RTN","DGPFTR1",58,0)
 .S TMPDTM=$O(^DGPF(26.22,"B",""),-1)
"RTN","DGPFTR1",59,0)
 .S DTMOK=0 F  D  Q:DTMOK!$D(DUOUT)!$D(DTOUT)
"RTN","DGPFTR1",60,0)
 ..S DIR(0)="DA^::TSX"
"RTN","DGPFTR1",61,0)
 ..S DIR("A",1)=""
"RTN","DGPFTR1",62,0)
 ..S DIR("A",2)="Note: ending date defaults to the latest request on file."
"RTN","DGPFTR1",63,0)
 ..S DIR("A",3)=""
"RTN","DGPFTR1",64,0)
 ..S DIR("A")="Enter the ending date of the requests to view: "
"RTN","DGPFTR1",65,0)
 ..S DIR("B")=$$FMTE^XLFDT(TMPDTM,1)
"RTN","DGPFTR1",66,0)
 ..D ^DIR K DIR I $D(DUOUT)!$D(DTOUT) Q
"RTN","DGPFTR1",67,0)
 ..I SDTM>+Y W !!!,"Starting date cannot be later than ending date!",! Q
"RTN","DGPFTR1",68,0)
 ..S DTMOK=1
"RTN","DGPFTR1",69,0)
 ..Q
"RTN","DGPFTR1",70,0)
 .S EDTM=+Y
"RTN","DGPFTR1",71,0)
 .Q
"RTN","DGPFTR1",72,0)
 S STR=QID_U_PAT_U_FLAG_U_STATUS_U_SDTM S:$G(EDTM) STR=STR_U_EDTM
"RTN","DGPFTR1",73,0)
 S VALMBG=1 D BLDHDR^DGPFTR(STR),BLD^DGPFTR(STR)
"RTN","DGPFTR1",74,0)
 S DSPSTR=STR ; save new display filters
"RTN","DGPFTR1",75,0)
 ;
"RTN","DGPFTR1",76,0)
CVX ; exit point
"RTN","DGPFTR1",77,0)
 S VALMBCK="R"
"RTN","DGPFTR1",78,0)
 Q
"RTN","DGPFTR1",79,0)
 ;
"RTN","DGPFTR1",80,0)
SELQID() ; user prompt for selection of query Id
"RTN","DGPFTR1",81,0)
 ;
"RTN","DGPFTR1",82,0)
 ; returns selected query Id or "" for user exit
"RTN","DGPFTR1",83,0)
 ;
"RTN","DGPFTR1",84,0)
 N D,DIC,DTOUT,DUOUT,X,Y
"RTN","DGPFTR1",85,0)
 S DIC="^DGPF(26.22,",DIC(0)="AEOQSX",D="C"
"RTN","DGPFTR1",86,0)
 S DIC("A")="Select query Id of the request to view: "
"RTN","DGPFTR1",87,0)
 D IX^DIC
"RTN","DGPFTR1",88,0)
 I $D(DUOUT)!$D(DTOUT) Q ""
"RTN","DGPFTR1",89,0)
 Q X
"RTN","DGPFTR1",90,0)
 ;
"RTN","DGPFTR1",91,0)
ASKALL(STR1,STR2) ; user prompt for All / Selected
"RTN","DGPFTR1",92,0)
 ; STR1 - item name to ask about (singular)
"RTN","DGPFTR1",93,0)
 ; STR2 - item name to ask about (plural)
"RTN","DGPFTR1",94,0)
 ;
"RTN","DGPFTR1",95,0)
 ; returns "ALL" for All, "S" for singular, or "" for user exit
"RTN","DGPFTR1",96,0)
 ;
"RTN","DGPFTR1",97,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","DGPFTR1",98,0)
 S DIR("B")="ALL"
"RTN","DGPFTR1",99,0)
 S DIR("A",1)=""
"RTN","DGPFTR1",100,0)
 S DIR("A")="View requests for all "_STR2_" or selected "_STR1_" (ALL/S): "
"RTN","DGPFTR1",101,0)
 S DIR(0)="SA^ALL:All "_STR2_";S:Selected "_STR1
"RTN","DGPFTR1",102,0)
 D ^DIR K DIR
"RTN","DGPFTR1",103,0)
 I $D(DUOUT)!$D(DTOUT) Q ""
"RTN","DGPFTR1",104,0)
 Q Y
"RTN","DGPFTR1",105,0)
 ;
"RTN","DGPFTR1",106,0)
SD ; show request details
"RTN","DGPFTR1",107,0)
 N DGFDA,DGIEN,IENS,SEL
"RTN","DGPFTR1",108,0)
 D FULL^VALM1
"RTN","DGPFTR1",109,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","DGPFTR1",110,0)
 S SEL=$O(VALMY("")) I SEL,$D(@VALMAR@("IDX",SEL,SEL)) D
"RTN","DGPFTR1",111,0)
 .S DGIEN=+$G(@VALMAR@("IDX",SEL,SEL)) I 'DGIEN W !!,"Invalid selection." Q
"RTN","DGPFTR1",112,0)
 .S IENS=DGIEN_"," D GETS^DIQ(26.22,IENS,"*","E","DGFDA")
"RTN","DGPFTR1",113,0)
 .W !!,"     Transfer request details:"
"RTN","DGPFTR1",114,0)
 .W !,"     -------------------------"
"RTN","DGPFTR1",115,0)
 .D DISPREQ(IENS,.DGFDA)
"RTN","DGPFTR1",116,0)
 .Q
"RTN","DGPFTR1",117,0)
 D PAUSE^VALM1
"RTN","DGPFTR1",118,0)
 S VALMBCK="R"
"RTN","DGPFTR1",119,0)
 Q
"RTN","DGPFTR1",120,0)
 ;
"RTN","DGPFTR1",121,0)
RR ; review pending request
"RTN","DGPFTR1",122,0)
 N ACT,ASGIEN,DATAARY,DFN,DGERR,DGFDA,DGFERR,DGICN,DGIEN,DGPFA,IENS,SEL,STATUS
"RTN","DGPFTR1",123,0)
 D FULL^VALM1
"RTN","DGPFTR1",124,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","DGPFTR1",125,0)
 S SEL=$O(VALMY("")) I SEL,$D(@VALMAR@("IDX",SEL,SEL)) D
"RTN","DGPFTR1",126,0)
 .S DGIEN=+$G(@VALMAR@("IDX",SEL,SEL)) I 'DGIEN W !!,"Invalid selection." Q
"RTN","DGPFTR1",127,0)
 .S IENS=DGIEN_"," D GETS^DIQ(26.22,IENS,"*","EI","DGFDA")
"RTN","DGPFTR1",128,0)
 .S STATUS=$G(DGFDA(26.22,IENS,.05,"I"))
"RTN","DGPFTR1",129,0)
 .; if request status is not "PENDING", bail out
"RTN","DGPFTR1",130,0)
 .I STATUS'=2 D  Q
"RTN","DGPFTR1",131,0)
 ..W !!,"Only transfer requests with 'PENDING' status are eligible for review."
"RTN","DGPFTR1",132,0)
 ..W !,"This request has ",$G(DGFDA(26.22,IENS,.05,"E"))," status!"
"RTN","DGPFTR1",133,0)
 ..Q
"RTN","DGPFTR1",134,0)
 .W !!,"     Review transfer request:"
"RTN","DGPFTR1",135,0)
 .W !,"     ------------------------"
"RTN","DGPFTR1",136,0)
 .D DISPREQ(IENS,.DGFDA)
"RTN","DGPFTR1",137,0)
 .S ACT=$$ASKREV() ; ask user for approval / rejection
"RTN","DGPFTR1",138,0)
 .I ACT'="" D
"RTN","DGPFTR1",139,0)
 ..S DATAARY("REVCMT")=$$ASKRSN(1,$S(ACT="R":1,1:0)) I ACT="R",DATAARY("REVCMT")="" Q
"RTN","DGPFTR1",140,0)
 ..S DGERR=""
"RTN","DGPFTR1",141,0)
 ..S DATAARY("REQDTM")=$G(DGFDA(26.22,IENS,.01,"I"))
"RTN","DGPFTR1",142,0)
 ..S DFN=$G(DGFDA(26.22,IENS,.03,"I"))
"RTN","DGPFTR1",143,0)
 ..I '$$MPIOK^DGPFUT(DFN,.DGICN) W !!,"Invalid patient ICN - must be national." Q
"RTN","DGPFTR1",144,0)
 ..S DATAARY("DFN")=DFN
"RTN","DGPFTR1",145,0)
 ..S DATAARY("ICN")=DGICN
"RTN","DGPFTR1",146,0)
 ..S DATAARY("FLAG")=$G(DGFDA(26.22,IENS,.04,"I"))
"RTN","DGPFTR1",147,0)
 ..S DATAARY("REVBY")=$$GET1^DIQ(200,DUZ_",",.01)
"RTN","DGPFTR1",148,0)
 ..S DATAARY("REVDTM")=$$NOW^XLFDT()
"RTN","DGPFTR1",149,0)
 ..S DATAARY("REQID")=$G(DGFDA(26.22,IENS,.08,"E"))
"RTN","DGPFTR1",150,0)
 ..S DATAARY("MSGID")=$G(DGFDA(26.22,IENS,.09,"E"))
"RTN","DGPFTR1",151,0)
 ..S DATAARY("QOK")=1
"RTN","DGPFTR1",152,0)
 ..S DATAARY("REVRES")=$S(ACT="R":"D",1:"A")
"RTN","DGPFTR1",153,0)
 ..; update log entry
"RTN","DGPFTR1",154,0)
 ..L +^DGPF(26.22,DGIEN):5 I '$T W !!,"Record locked by another user. Please try again later." Q
"RTN","DGPFTR1",155,0)
 ..D UPDLOG^DGPFHLT3(IENS,"",.DATAARY,.DGFERR)
"RTN","DGPFTR1",156,0)
 ..L -^DGPF(26.22,DGIEN)
"RTN","DGPFTR1",157,0)
 ..I $D(DGFERR) D  Q
"RTN","DGPFTR1",158,0)
 ...W !!,"Error while updating log entry with ien = ",DGIEN
"RTN","DGPFTR1",159,0)
 ...W !,"Error code: ",$G(DGFERR("DIERR",1))
"RTN","DGPFTR1",160,0)
 ...W !,"Error text: ",$G(DGFERR("DIERR",1,"TEXT",1))
"RTN","DGPFTR1",161,0)
 ...Q
"RTN","DGPFTR1",162,0)
 ..S DATAARY("REVDUZ")=DUZ
"RTN","DGPFTR1",163,0)
 ..S DATAARY("SENDTO")=$P($$PARENT^DGPFUT1($G(DGFDA(26.22,IENS,.1,"I"))),U)
"RTN","DGPFTR1",164,0)
 ..I DATAARY("SENDTO")=0 S DATAARY("SENDTO")=$G(DGFDA(26.22,IENS,.1,"I"))
"RTN","DGPFTR1",165,0)
 ..S ASGIEN=$$FNDASGN^DGPFAA(DFN,DATAARY("FLAG")_";DGPF(26.15,") ; PRF assignment ien in file 26.13
"RTN","DGPFTR1",166,0)
 ..I ASGIEN'>0 S DGERR="Receiver was unable to find corresponding PRF flag assignment."
"RTN","DGPFTR1",167,0)
 ..I DGERR="",'$$GETASGN^DGPFAA(ASGIEN,.DGPFA,1) S DGERR="Receiver was unable to retrieve corresponding PRF flag assignment."
"RTN","DGPFTR1",168,0)
 ..S DATAARY("ORIGOWN")=$P($G(DGPFA("OWNER")),U)
"RTN","DGPFTR1",169,0)
 ..S DATAARY("SFIEN")=$S(ACT="R":$P($G(DGPFA("OWNER")),U),1:$G(DGFDA(26.22,IENS,.1,"I")))
"RTN","DGPFTR1",170,0)
 ..S DATAARY("SFNAME")="Station # "_$$STA^XUAF4(DATAARY("SFIEN"))_"("_$$NAME^XUAF4(DATAARY("SFIEN"))_")"
"RTN","DGPFTR1",171,0)
 ..I ACT="A" D
"RTN","DGPFTR1",172,0)
 ...; approved request - change ownership
"RTN","DGPFTR1",173,0)
 ...I DGERR="" S DGERR=$$UPDASGN^DGPFHLT1(0,ASGIEN,.DATAARY,.DGPFA)
"RTN","DGPFTR1",174,0)
 ...Q
"RTN","DGPFTR1",175,0)
 ..; send response message (RSP^K11)
"RTN","DGPFTR1",176,0)
 ..D SEND^DGPFHLT2(DGERR,.DATAARY)
"RTN","DGPFTR1",177,0)
 ..D BLD^DGPFTR(DSPSTR) ; rebuild display list
"RTN","DGPFTR1",178,0)
 ..Q
"RTN","DGPFTR1",179,0)
 .Q
"RTN","DGPFTR1",180,0)
 D PAUSE^VALM1
"RTN","DGPFTR1",181,0)
 S VALMBCK="R"
"RTN","DGPFTR1",182,0)
 Q
"RTN","DGPFTR1",183,0)
 ;
"RTN","DGPFTR1",184,0)
DISPREQ(IENS,DGFDA) ; display request data
"RTN","DGPFTR1",185,0)
 ; IENS - ien in file 26.22_","
"RTN","DGPFTR1",186,0)
 ; DGFDA - FDA array containing data for a given transfer request log entry
"RTN","DGPFTR1",187,0)
 ;
"RTN","DGPFTR1",188,0)
 N STR
"RTN","DGPFTR1",189,0)
 I '$D(DGFDA) Q
"RTN","DGPFTR1",190,0)
 W !
"RTN","DGPFTR1",191,0)
 S STR=$G(DGFDA(26.22,IENS,.01,"E"))
"RTN","DGPFTR1",192,0)
 W !,"Request date/time:   ",$S(STR'="":STR,1:"N/A")
"RTN","DGPFTR1",193,0)
 S STR=$G(DGFDA(26.22,IENS,.02,"E"))
"RTN","DGPFTR1",194,0)
 W !,"Requester name:      ",$S(STR'="":STR,1:"N/A")
"RTN","DGPFTR1",195,0)
 S STR=$G(DGFDA(26.22,IENS,2.01,"E"))
"RTN","DGPFTR1",196,0)
 W !,"Request reason:      ",$S(STR'="":STR,1:"N/A")
"RTN","DGPFTR1",197,0)
 S STR=$G(DGFDA(26.22,IENS,.03,"E"))
"RTN","DGPFTR1",198,0)
 W !,"Patient name:        ",$S(STR'="":STR,1:"N/A")
"RTN","DGPFTR1",199,0)
 S STR=$G(DGFDA(26.22,IENS,.04,"E"))
"RTN","DGPFTR1",200,0)
 W !,"Record flag name:    ",$S(STR'="":STR,1:"N/A")
"RTN","DGPFTR1",201,0)
 S STR=$G(DGFDA(26.22,IENS,.05,"E"))
"RTN","DGPFTR1",202,0)
 W !,"Request status:      ",$S(STR'="":STR,1:"N/A")
"RTN","DGPFTR1",203,0)
 S STR=$G(DGFDA(26.22,IENS,.06,"E"))
"RTN","DGPFTR1",204,0)
 W !,"Reviewer name:       ",$S(STR'="":STR,1:"N/A")
"RTN","DGPFTR1",205,0)
 S STR=$G(DGFDA(26.22,IENS,.07,"E"))
"RTN","DGPFTR1",206,0)
 W !,"Review date/time:    ",$S(STR'="":STR,1:"N/A")
"RTN","DGPFTR1",207,0)
  S STR=$G(DGFDA(26.22,IENS,2.02,"E"))
"RTN","DGPFTR1",208,0)
 W !,"Review reason:       ",$S(STR'="":STR,1:"N/A")
"RTN","DGPFTR1",209,0)
 S STR=$G(DGFDA(26.22,IENS,.08,"E"))
"RTN","DGPFTR1",210,0)
 W !,"Query id:            ",$S(STR'="":STR,1:"N/A")
"RTN","DGPFTR1",211,0)
 S STR=$G(DGFDA(26.22,IENS,.09,"E"))
"RTN","DGPFTR1",212,0)
 W !,"HL7 message id:      ",$S(STR'="":STR,1:"N/A")
"RTN","DGPFTR1",213,0)
 S STR=$G(DGFDA(26.22,IENS,.1,"E"))
"RTN","DGPFTR1",214,0)
 W !,"Requesting facility: ",$S(STR'="":STR,1:"N/A")
"RTN","DGPFTR1",215,0)
 S STR=$G(DGFDA(26.22,IENS,1,"E"))
"RTN","DGPFTR1",216,0)
 W !,"Error message:       ",$S(STR'="":STR,1:"N/A")
"RTN","DGPFTR1",217,0)
 Q
"RTN","DGPFTR1",218,0)
 ;
"RTN","DGPFTR1",219,0)
ASKREV() ; user prompt for request approval / rejection
"RTN","DGPFTR1",220,0)
 ;
"RTN","DGPFTR1",221,0)
 ; returns "A" for Approval, "R" for rejection, or "" for user exit
"RTN","DGPFTR1",222,0)
 ;
"RTN","DGPFTR1",223,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","DGPFTR1",224,0)
 S DIR("A",1)=""
"RTN","DGPFTR1",225,0)
 S DIR("A",2)=""
"RTN","DGPFTR1",226,0)
 S DIR("A")="Do you wish to approve or reject this transfer request? (A/R): "
"RTN","DGPFTR1",227,0)
 S DIR(0)="SA^A:Approve request;R:Reject request"
"RTN","DGPFTR1",228,0)
 D ^DIR K DIR
"RTN","DGPFTR1",229,0)
 I $D(DUOUT)!$D(DTOUT) Q ""
"RTN","DGPFTR1",230,0)
 Q Y
"RTN","DGPFTR1",231,0)
 ;
"RTN","DGPFTR1",232,0)
ASKRSN(TYPE,RFLG) ; user prompt for request / response reason
"RTN","DGPFTR1",233,0)
 ;
"RTN","DGPFTR1",234,0)
 ; TYPE = 0 for request reason, 1 for response reason
"RTN","DGPFTR1",235,0)
 ; RFLG = 0 for optional entry, 1 for required entry
"RTN","DGPFTR1",236,0)
 ;
"RTN","DGPFTR1",237,0)
 ; returns entered reason or "" for user exit
"RTN","DGPFTR1",238,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","DGPFTR1",239,0)
 S DIR("A",1)=""
"RTN","DGPFTR1",240,0)
 S DIR("A",2)=""
"RTN","DGPFTR1",241,0)
 S DIR("A")="Ownership Request"_$S(TYPE:" Approval/Rejection",1:"")_" Reason: "
"RTN","DGPFTR1",242,0)
 S DIR(0)="FA"_$S(RFLG:"",1:"O")_"^10:80"
"RTN","DGPFTR1",243,0)
 D ^DIR K DIR
"RTN","DGPFTR1",244,0)
 I $D(DUOUT)!$D(DTOUT) Q ""
"RTN","DGPFTR1",245,0)
 Q Y
"RTN","DGPFUT")
0^8^B65688898^B38902808
"RTN","DGPFUT",1,0)
DGPFUT ;ALB/RPM - PRF UTILITIES ; 6/7/05 3:13pm
"RTN","DGPFUT",2,0)
 ;;5.3;Registration;**425,554,650,951**;Aug 13, 1993;Build 135
"RTN","DGPFUT",3,0)
 ;     Last Edited: SHRPE/sgm - Sep 26, 2018 16:46
"RTN","DGPFUT",4,0)
 ;
"RTN","DGPFUT",5,0)
 ; ICR# TYPE DESCRIPTION
"RTN","DGPFUT",6,0)
 ;----- ---- ------------------------------
"RTN","DGPFUT",7,0)
 ;10026 Sup  ^DIR
"RTN","DGPFUT",8,0)
 ; 2052 Sup  $$GET1^DID
"RTN","DGPFUT",9,0)
 ; 2053 Sup  CHK^DIE
"RTN","DGPFUT",10,0)
 ; 2055 Sup  $$EXTERNAL^DILFD
"RTN","DGPFUT",11,0)
 ; 2701 Sup  ^MPIF001: $$GETICN, $$IFLOCAL
"RTN","DGPFUT",12,0)
 ;
"RTN","DGPFUT",13,0)
 Q   ;no direct entry
"RTN","DGPFUT",14,0)
 ;
"RTN","DGPFUT",15,0)
ANSWER(DGDIRA,DGDIRB,DGDIR0,DGDIRH,DGDIRS,DIRX) ;
"RTN","DGPFUT",16,0)
 ; Wrap FileMan Classic Reader call
"RTN","DGPFUT",17,0)
 ; Input
"RTN","DGPFUT",18,0)
 ;    DGDIR0 - DIR(0) string
"RTN","DGPFUT",19,0)
 ;    DGDIRA - DIR("A") string (may be passed by reference [dg*951])
"RTN","DGPFUT",20,0)
 ;    DGDIRB - DIR("B") string
"RTN","DGPFUT",21,0)
 ;    DGDIRH - DIR("?") string (may be passed by reference [dg*951])
"RTN","DGPFUT",22,0)
 ;    DGDIRS - DIR("S") string
"RTN","DGPFUT",23,0)
 ;     .DIRX - [optional] - multi-function - DG*5.3*951
"RTN","DGPFUT",24,0)
 ;         a) you may pass .DIR() instead of individual variables
"RTN","DGPFUT",25,0)
 ;         b) if DIRX=-2 you wish this API to return -2 upon time-out
"RTN","DGPFUT",26,0)
 ;
"RTN","DGPFUT",27,0)
 ;  Output
"RTN","DGPFUT",28,0)
 ;   Function Value - Internal value returned from ^DIR or -1 if user
"RTN","DGPFUT",29,0)
 ;                    up-arrows, double up-arrows or the read times out.
"RTN","DGPFUT",30,0)
 ;                    DG*5.3*951, if .DIRX is passed then upon time out
"RTN","DGPFUT",31,0)
 ;                       return -2
"RTN","DGPFUT",32,0)
 ;
"RTN","DGPFUT",33,0)
 ;          DIR(0) type      Results
"RTN","DGPFUT",34,0)
 ;          ------------     -------------------------------
"RTN","DGPFUT",35,0)
 ;          DD               IEN of selected entry
"RTN","DGPFUT",36,0)
 ;          Pointer          IEN of selected entry
"RTN","DGPFUT",37,0)
 ;          Set of Codes     Internal value of code
"RTN","DGPFUT",38,0)
 ;          Yes/No           0 for No, 1 for Yes
"RTN","DGPFUT",39,0)
 ;
"RTN","DGPFUT",40,0)
 N X,Y,Z,DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","DGPFUT",41,0)
 I $D(DIRX),$G(DIRX)'=-2 M DIR=DIRX
"RTN","DGPFUT",42,0)
 E  D
"RTN","DGPFUT",43,0)
 . S DIR(0)=DGDIR0
"RTN","DGPFUT",44,0)
 . S DIR("A")=$G(DGDIRA)
"RTN","DGPFUT",45,0)
 . I $D(DGDIRA)>9 M DIR("A")=DGDIRA("A")
"RTN","DGPFUT",46,0)
 . I $G(DGDIRB)]"" S DIR("B")=DGDIRB
"RTN","DGPFUT",47,0)
 . I $D(DGDIRH) S DIR("?")=DGDIRH
"RTN","DGPFUT",48,0)
 . I $D(DGDIRH)>9 M DIR("?")=DGDIRH
"RTN","DGPFUT",49,0)
 . I $G(DGDIRS)]"" S DIR("S")=DGDIRS
"RTN","DGPFUT",50,0)
 . Q
"RTN","DGPFUT",51,0)
 D ^DIR
"RTN","DGPFUT",52,0)
 ; DG*5.3*951 - original code did not distinguish between time-out
"RTN","DGPFUT",53,0)
 ; and "^"-out and just pressing ENTER.
"RTN","DGPFUT",54,0)
 I $D(DIRX) D  Q Z
"RTN","DGPFUT",55,0)
 . S Z=$S($D(DTOUT):-2,$D(DUOUT):-1,$D(DIROUT):-1,1:"")
"RTN","DGPFUT",56,0)
 . I Z="" S Z=$S(Y=-1:"",X="@":"@",1:$P(Y,U))
"RTN","DGPFUT",57,0)
 . Q
"RTN","DGPFUT",58,0)
 I $D(DTOUT)!$D(DUOUT)!$D(DIROUT) Q -1
"RTN","DGPFUT",59,0)
 Q $S(X="@":"@",1:$P(Y,U))
"RTN","DGPFUT",60,0)
 ;
"RTN","DGPFUT",61,0)
CONTINUE() ;pause display
"RTN","DGPFUT",62,0)
 ;
"RTN","DGPFUT",63,0)
 ;  Input:  none
"RTN","DGPFUT",64,0)
 ;
"RTN","DGPFUT",65,0)
 ;  Output:  1 - continue
"RTN","DGPFUT",66,0)
 ;           0 - quit
"RTN","DGPFUT",67,0)
 ;
"RTN","DGPFUT",68,0)
 N DIR,Y
"RTN","DGPFUT",69,0)
 S DIR(0)="E" D ^DIR
"RTN","DGPFUT",70,0)
 Q $S(Y'=1:0,1:1)
"RTN","DGPFUT",71,0)
 ;
"RTN","DGPFUT",72,0)
CKWP(DGROOT,DGTX) ;  ck word processing required fields
"RTN","DGPFUT",73,0)
 ;;Text did not have a minimum of 3 consecutive alpha characters
"RTN","DGPFUT",74,0)
 ;;Text contained TAB characters
"RTN","DGPFUT",75,0)
 ;;Text contained control characters
"RTN","DGPFUT",76,0)
 ;;Each <TAB> character was replaced with a single <space> character
"RTN","DGPFUT",77,0)
 ;;
"RTN","DGPFUT",78,0)
 ; rewritten in DG*5.3*951
"RTN","DGPFUT",79,0)
 ; Require a minimum of 3 alpha characters, no control codes
"RTN","DGPFUT",80,0)
 ; INPUT PARAMETERS:
"RTN","DGPFUT",81,0)
 ;   .DGROOT(n,0) = (required) text
"RTN","DGPFUT",82,0)
 ;   .DGTX(n)     = (optional) return additional text for calling
"RTN","DGPFUT",83,0)
 ;                   program to display
"RTN","DGPFUT",84,0)
 ;
"RTN","DGPFUT",85,0)
 ; EXTRINSIC FUNCTION returns:
"RTN","DGPFUT",86,0)
 ;     1:text is good, 0:text is not acceptable
"RTN","DGPFUT",87,0)
 ;
"RTN","DGPFUT",88,0)
 N X,Y,ALPHA,LINE,STR,NOCTRL,NOTAB,TEMP
"RTN","DGPFUT",89,0)
 S (ALPHA,LINE)=0,(NOCTRL,NOTAB)=1,STR=""
"RTN","DGPFUT",90,0)
 I $D(@DGROOT) D
"RTN","DGPFUT",91,0)
 . N I,X S I=0 F  S I=$O(@DGROOT@(I)) Q:I=""  S X=@DGROOT@(I,0) D
"RTN","DGPFUT",92,0)
 . . I 'ALPHA S STR=STR_X_" "
"RTN","DGPFUT",93,0)
 . . I 'ALPHA,STR?.E3A.E S ALPHA=1
"RTN","DGPFUT",94,0)
 . . I NOTAB,X[$C(9) S NOTAB=0
"RTN","DGPFUT",95,0)
 . . S X=$TR(X,$C(9))
"RTN","DGPFUT",96,0)
 . . I NOCTRL,X?.E1C.E S NOCTRL=0
"RTN","DGPFUT",97,0)
 . . Q
"RTN","DGPFUT",98,0)
 . Q
"RTN","DGPFUT",99,0)
 ;
"RTN","DGPFUT",100,0)
 I 'ALPHA S LINE=LINE+1,DGTX(LINE)=$TR($T(CKWP+1),";"," ")
"RTN","DGPFUT",101,0)
 I 'NOTAB S LINE=LINE+1,DGTX(LINE)=$TR($T(CKWP+2),";"," ")
"RTN","DGPFUT",102,0)
 I 'NOCTRL S LINE=LINE+1,DGTX(LINE)=$TR($T(CKWP+3),";"," ")
"RTN","DGPFUT",103,0)
 Q $D(DGTX)=0
"RTN","DGPFUT",104,0)
 ;
"RTN","DGPFUT",105,0)
DIQ(FILE,XDA,FLD) ;   retrieve single value from record; DG*5.3*951
"RTN","DGPFUT",106,0)
 N X,DGERR,DGWP,DIERR
"RTN","DGPFUT",107,0)
 S FILE=+$G(FILE) I FILE<2 Q ""
"RTN","DGPFUT",108,0)
 S FLD=$G(FLD) I '$L(FLD) Q ""
"RTN","DGPFUT",109,0)
 S XDA=$G(XDA) I 'XDA Q ""
"RTN","DGPFUT",110,0)
 I $E(XDA,$L(XDA))'="," S XDA=XDA_","
"RTN","DGPFUT",111,0)
 S X=$$GET1^DIQ(FILE,XDA,FLD,.DGWP,,"DGERR")
"RTN","DGPFUT",112,0)
 S:$D(DIERR) X=-1
"RTN","DGPFUT",113,0)
 Q X
"RTN","DGPFUT",114,0)
 ;
"RTN","DGPFUT",115,0)
GET1(FILE,FLD,FLG,ATT,PAD) ; call $$GET1^DID ; dg*951
"RTN","DGPFUT",116,0)
 N X,DGPFERR,DIERR,MSG
"RTN","DGPFUT",117,0)
 S MSG="Unexpected error encountered"
"RTN","DGPFUT",118,0)
 I '$G(FILE) Q MSG
"RTN","DGPFUT",119,0)
 I '$L($G(FLD)) Q MSG
"RTN","DGPFUT",120,0)
 I '$L($G(ATT)) Q MSG
"RTN","DGPFUT",121,0)
 S FLG=$G(FLG),PAD=$G(PAD)
"RTN","DGPFUT",122,0)
 S X=$$GET1^DID(FILE,FLD,FLG,ATT,,"DGPFERR")
"RTN","DGPFUT",123,0)
 I $D(DIERR) Q MSG
"RTN","DGPFUT",124,0)
 S:$L(PAD) X=X_" "_PAD
"RTN","DGPFUT",125,0)
 Q X
"RTN","DGPFUT",126,0)
 ;
"RTN","DGPFUT",127,0)
GETNXTF(DGDFN,DGLTF) ;get previous treating facility
"RTN","DGPFUT",128,0)
 ;This function will return the treating facility with a DATE LAST
"RTN","DGPFUT",129,0)
 ;TREATED value immediately prior to the date for the treating facility
"RTN","DGPFUT",130,0)
 ;passed as the second parameter.  The most recent treating facility
"RTN","DGPFUT",131,0)
 ;will be returned when the second parameter is missing, null, or zero. 
"RTN","DGPFUT",132,0)
 ;
"RTN","DGPFUT",133,0)
 ;  Input:
"RTN","DGPFUT",134,0)
 ;    DGDFN - pointer to patient in PATIENT (#2) file
"RTN","DGPFUT",135,0)
 ;    DGLTF - (optional) last treating facility [default=0]
"RTN","DGPFUT",136,0)
 ;
"RTN","DGPFUT",137,0)
 ;  Output:
"RTN","DGPFUT",138,0)
 ;    Function value - previous facility as a pointer to INSTITUTION (#4)
"RTN","DGPFUT",139,0)
 ;                     file on success; 0 on failure
"RTN","DGPFUT",140,0)
 ;
"RTN","DGPFUT",141,0)
 N DGARR   ;fully subscripted array node
"RTN","DGPFUT",142,0)
 N DGDARR  ;date sorted treating facilities
"RTN","DGPFUT",143,0)
 N DGINST  ;institution pointer
"RTN","DGPFUT",144,0)
 N DGNAM   ;name of sorted treating facilities array
"RTN","DGPFUT",145,0)
 N DGTFARR  ;array of non-local treating facilities
"RTN","DGPFUT",146,0)
 ;
"RTN","DGPFUT",147,0)
 ;
"RTN","DGPFUT",148,0)
 I $G(DGDFN)>0,$$BLDTFL^DGPFUT2(DGDFN,.DGTFARR) D
"RTN","DGPFUT",149,0)
 . ;
"RTN","DGPFUT",150,0)
 . ;validate last treating facility input parameter
"RTN","DGPFUT",151,0)
 . S DGLTF=+$G(DGLTF)
"RTN","DGPFUT",152,0)
 . S DGLTF=$S(DGLTF&($D(DGTFARR(DGLTF))):DGLTF,1:0)
"RTN","DGPFUT",153,0)
 . ;
"RTN","DGPFUT",154,0)
 . ;build date sorted list
"RTN","DGPFUT",155,0)
 . S DGINST=0
"RTN","DGPFUT",156,0)
 . F  S DGINST=$O(DGTFARR(DGINST)) Q:'DGINST  D
"RTN","DGPFUT",157,0)
 . . S DGDARR(DGTFARR(DGINST),DGINST)=""
"RTN","DGPFUT",158,0)
 . ;
"RTN","DGPFUT",159,0)
 . ;find entry for previous treating facility
"RTN","DGPFUT",160,0)
 . S DGNAM="DGDARR"
"RTN","DGPFUT",161,0)
 . S DGARR=$QUERY(@DGNAM@(""),-1)
"RTN","DGPFUT",162,0)
 . I DGLTF,DGARR]"" D
"RTN","DGPFUT",163,0)
 . . I $QS(DGARR,2)'=DGLTF D
"RTN","DGPFUT",164,0)
 . . . F  S DGARR=$QUERY(@DGARR,-1) Q:+$QS(DGARR,2)=DGLTF
"RTN","DGPFUT",165,0)
 . . S DGARR=$QUERY(@DGARR,-1)
"RTN","DGPFUT",166,0)
 ;
"RTN","DGPFUT",167,0)
 Q $S($G(DGARR)]"":+$QS(DGARR,2),1:0)
"RTN","DGPFUT",168,0)
 ;
"RTN","DGPFUT",169,0)
ISDIV(DGSITE) ;is site local division
"RTN","DGPFUT",170,0)
 ;
"RTN","DGPFUT",171,0)
 ;  Input:
"RTN","DGPFUT",172,0)
 ;    DGSITE - pointer to INSTITUTION (#4) file
"RTN","DGPFUT",173,0)
 ;
"RTN","DGPFUT",174,0)
 ;  Output:
"RTN","DGPFUT",175,0)
 ;    Function value - 1 on success; 0 on failure
"RTN","DGPFUT",176,0)
 ;
"RTN","DGPFUT",177,0)
 S DGSITE=+$G(DGSITE)
"RTN","DGPFUT",178,0)
 Q $S($D(^DG(40.8,"AD",DGSITE)):1,1:0)
"RTN","DGPFUT",179,0)
 ;
"RTN","DGPFUT",180,0)
MPIOK(DGDFN,DGICN) ;return national ICN
"RTN","DGPFUT",181,0)
 ;This function verifies that a given patient has a valid national
"RTN","DGPFUT",182,0)
 ;Integration Control Number.
"RTN","DGPFUT",183,0)
 ; 
"RTN","DGPFUT",184,0)
 ;  Supported DBIA #2701:  The supported DBIA is used to access MPI
"RTN","DGPFUT",185,0)
 ;                         APIs to retrieve ICN and determine if ICN
"RTN","DGPFUT",186,0)
 ;                         is local.
"RTN","DGPFUT",187,0)
 ;
"RTN","DGPFUT",188,0)
 ;  Input:
"RTN","DGPFUT",189,0)
 ;    DGDFN - (required) IEN of patient in PATIENT (#2) file
"RTN","DGPFUT",190,0)
 ;    DGICN - (optional) passed by reference to contain national ICN
"RTN","DGPFUT",191,0)
 ;
"RTN","DGPFUT",192,0)
 ;  Output:
"RTN","DGPFUT",193,0)
 ;   Function Value - 1 on valid national ICN;
"RTN","DGPFUT",194,0)
 ;                    0 on failure
"RTN","DGPFUT",195,0)
 ;            DGICN - Patient's Integrated Control Number
"RTN","DGPFUT",196,0)
 ;
"RTN","DGPFUT",197,0)
 N DGRSLT
"RTN","DGPFUT",198,0)
 S DGRSLT=0
"RTN","DGPFUT",199,0)
 I $G(DGDFN)>0 D
"RTN","DGPFUT",200,0)
 . S DGICN=$$GETICN^MPIF001(DGDFN)
"RTN","DGPFUT",201,0)
 . ;
"RTN","DGPFUT",202,0)
 . ;ICN must be valid
"RTN","DGPFUT",203,0)
 . Q:(DGICN'>0)
"RTN","DGPFUT",204,0)
 . ;
"RTN","DGPFUT",205,0)
 . ;ICN must not be local
"RTN","DGPFUT",206,0)
 . Q:$$IFLOCAL^MPIF001(DGDFN)
"RTN","DGPFUT",207,0)
 . ;
"RTN","DGPFUT",208,0)
 . S DGRSLT=1
"RTN","DGPFUT",209,0)
 Q DGRSLT
"RTN","DGPFUT",210,0)
 ;
"RTN","DGPFUT",211,0)
STATUS(DGACT) ;calculate the assignment STATUS given an ACTION code
"RTN","DGPFUT",212,0)
 ;
"RTN","DGPFUT",213,0)
 ;  Input:
"RTN","DGPFUT",214,0)
 ;    DGACT - (required) Action (.03) field value for PRF ASSIGNMENT
"RTN","DGPFUT",215,0)
 ;            HISTORY (#26.14) file in internal or external format
"RTN","DGPFUT",216,0)
 ;
"RTN","DGPFUT",217,0)
 ;  Output:
"RTN","DGPFUT",218,0)
 ;   Function Value - Status value on success, -1 on failure
"RTN","DGPFUT",219,0)
 ;
"RTN","DGPFUT",220,0)
 N DGERR   ;FM message root
"RTN","DGPFUT",221,0)
 N DGRSLT  ;CHK^DIE result array
"RTN","DGPFUT",222,0)
 N DGSTAT  ;calculated status value
"RTN","DGPFUT",223,0)
 ;
"RTN","DGPFUT",224,0)
 S DGSTAT=-1
"RTN","DGPFUT",225,0)
 I $G(DGACT)]"" D
"RTN","DGPFUT",226,0)
 . N DIERR
"RTN","DGPFUT",227,0)
 . I DGACT?1.N S DGACT=$$EXTERNAL^DILFD(26.14,.03,"F",DGACT,"DGERR")
"RTN","DGPFUT",228,0)
 . Q:$D(DGERR)
"RTN","DGPFUT",229,0)
 . D CHK^DIE(26.14,.03,"E",DGACT,.DGRSLT,"DGERR")
"RTN","DGPFUT",230,0)
 . Q:$D(DGERR)
"RTN","DGPFUT",231,0)
 . I DGRSLT(0)="INACTIVATE"!(DGRSLT(0)="ENTERED IN ERROR") S DGSTAT=0
"RTN","DGPFUT",232,0)
 . E  S DGSTAT=1
"RTN","DGPFUT",233,0)
 Q DGSTAT
"RTN","DGPFUT",234,0)
 ;
"RTN","DGPFUT",235,0)
TESTVAL(DGFIL,DGFLD,DGVAL) ;validate individual value against field def
"RTN","DGPFUT",236,0)
 ;
"RTN","DGPFUT",237,0)
 ;  Input:
"RTN","DGPFUT",238,0)
 ;    DGFIL - (required) File number
"RTN","DGPFUT",239,0)
 ;    DGFLD - (required) Field number or sub-dd#,field#
"RTN","DGPFUT",240,0)
 ;    DGVAL - (required) Field value to be validated
"RTN","DGPFUT",241,0)
 ;
"RTN","DGPFUT",242,0)
 ;  Output:
"RTN","DGPFUT",243,0)
 ;   Function Value - Returns 1 if value is valid, 0 if value is invalid
"RTN","DGPFUT",244,0)
 ;
"RTN","DGPFUT",245,0)
 N DGVALEX  ;external value after conversion
"RTN","DGPFUT",246,0)
 N DGTYP    ;field type
"RTN","DGPFUT",247,0)
 N DGRSLT   ;results of CHK^DIE
"RTN","DGPFUT",248,0)
 N VALID    ;function results
"RTN","DGPFUT",249,0)
 ;
"RTN","DGPFUT",250,0)
 S VALID=1
"RTN","DGPFUT",251,0)
 S DGFIL=$G(DGFIL),DGFLD=$G(DGFLD),DGVAL=$G(DGVAL)
"RTN","DGPFUT",252,0)
 I $L(DGFIL),$L(DGFLD),$L(DGVAL) D
"RTN","DGPFUT",253,0)
 . N DGPFERR,DIERR
"RTN","DGPFUT",254,0)
 . S DGVALEX=$$EXTERNAL^DILFD(DGFIL,DGFLD,"F",DGVAL,"DGPFERR")
"RTN","DGPFUT",255,0)
 . I $D(DIERR) S VALID=0 Q
"RTN","DGPFUT",256,0)
 . I DGVALEX="" S VALID=0 Q
"RTN","DGPFUT",257,0)
 . I $$GET1(DGFIL,DGFLD,"","TYPE")'["POINTER" D
"RTN","DGPFUT",258,0)
 . . D:'$D(DIERR) CHK^DIE(DGFIL,DGFLD,,DGVALEX,.DGRSLT,"DGFERR")
"RTN","DGPFUT",259,0)
 . . I '$D(DIERR),DGRSLT="^" S VALID=0
"RTN","DGPFUT",260,0)
 . . Q
"RTN","DGPFUT",261,0)
 . I $D(DIERR) S VALID=0
"RTN","DGPFUT",262,0)
 Q VALID
"RTN","DGPFUT",263,0)
 ;
"RTN","DGPFUT",264,0)
VALID(DGRTN,DGFILE,DGIP,DGERR) ;validate input values before filing
"RTN","DGPFUT",265,0)
 ;
"RTN","DGPFUT",266,0)
 ;  Input:
"RTN","DGPFUT",267,0)
 ;    DGRTN - (required) Routine name that contains $TEXT table
"RTN","DGPFUT",268,0)
 ;   DGFILE - (required) File number for input values
"RTN","DGPFUT",269,0)
 ;     DGIP - (required) Input value array passed by reference
"RTN","DGPFUT",270,0)
 ;    DGERR - (optional) Returns error message passed by reference
"RTN","DGPFUT",271,0)
 ;
"RTN","DGPFUT",272,0)
 ;  Output:
"RTN","DGPFUT",273,0)
 ;   Function Value - Returns 1 on all values valid, 0 on failure
"RTN","DGPFUT",274,0)
 ;
"RTN","DGPFUT",275,0)
 I $G(DGRTN)=""!('$G(DGFILE)) Q 0
"RTN","DGPFUT",276,0)
 N DGVLD   ;function return value
"RTN","DGPFUT",277,0)
 N DGFXR   ;node name to field xref array
"RTN","DGPFUT",278,0)
 N DGREQ   ;array of required fields
"RTN","DGPFUT",279,0)
 N DGWP    ;1:word processing;
"RTN","DGPFUT",280,0)
 N DGN     ;array node name
"RTN","DGPFUT",281,0)
 ;
"RTN","DGPFUT",282,0)
 S DGVLD=1
"RTN","DGPFUT",283,0)
 S DGN=""
"RTN","DGPFUT",284,0)
 D BLDXR(DGRTN,.DGFXR)
"RTN","DGPFUT",285,0)
 ;
"RTN","DGPFUT",286,0)
 F  S DGN=$O(DGFXR(DGN)) Q:DGN=""  D  Q:'DGVLD
"RTN","DGPFUT",287,0)
 . N DGPFERR,DIERR
"RTN","DGPFUT",288,0)
 . S DGREQ=$P(DGFXR(DGN),U,2)
"RTN","DGPFUT",289,0)
 . S DGWP=$P(DGFXR(DGN),U,3)
"RTN","DGPFUT",290,0)
 . I DGREQ D   ;required field check
"RTN","DGPFUT",291,0)
 . . I DGWP=1,'$$CKWP("DGIP(DGN)") S DGVLD=0 Q
"RTN","DGPFUT",292,0)
 . . I 'DGWP,$G(DGIP(DGN))']"" S DGVLD=0
"RTN","DGPFUT",293,0)
 . . Q
"RTN","DGPFUT",294,0)
 . I 'DGVLD D  Q
"RTN","DGPFUT",295,0)
 . . S DGERR=$$GET1(DGFILE,+DGFXR(DGN),,"LABEL","REQUIRED")
"RTN","DGPFUT",296,0)
 . . Q
"RTN","DGPFUT",297,0)
 . Q:DGWP=1  ;don't check word processing fields for invalid values
"RTN","DGPFUT",298,0)
 . ;check for invalid values
"RTN","DGPFUT",299,0)
 . I '$$TESTVAL(DGFILE,+DGFXR(DGN),$P($G(DGIP(DGN)),U)) D  Q
"RTN","DGPFUT",300,0)
 . . S DGVLD=0,DGERR=$$GET1(DGFILE,+DGFXR(DGN),,"LABEL","NOT VALID")
"RTN","DGPFUT",301,0)
 Q DGVLD
"RTN","DGPFUT",302,0)
 ;
"RTN","DGPFUT",303,0)
BLDXR(DGRTN,DGFLDA) ;build name/field xref array
"RTN","DGPFUT",304,0)
 ;This procedure reads in the text from the XREF line tag of the DGRTN
"RTN","DGPFUT",305,0)
 ;input parameter, loads name/field xref array with parsed line data.
"RTN","DGPFUT",306,0)
 ;
"RTN","DGPFUT",307,0)
 ;  Input:
"RTN","DGPFUT",308,0)
 ;    DGRTN - (req) Routine name that contains the XREF line tag
"RTN","DGPFUT",309,0)
 ;   DGFLDA - (req) Array name for name/field xref passed by reference
"RTN","DGPFUT",310,0)
 ;
"RTN","DGPFUT",311,0)
 ;  Output:
"RTN","DGPFUT",312,0)
 ;   Function Value - Returns 1 on success, 0 on failure
"RTN","DGPFUT",313,0)
 ;   DGFLDA - Name/field xref array
"RTN","DGPFUT",314,0)
 ;    format: DGFLDA(subscript)=field#^required?^0/1 where
"RTN","DGPFUT",315,0)
 ;            0:single value field; 1:word proc field
"RTN","DGPFUT",316,0)
 ;
"RTN","DGPFUT",317,0)
 S DGRTN=$G(DGRTN) Q:DGRTN=""
"RTN","DGPFUT",318,0)
 I $E(DGRTN,1)'="^" S DGRTN="^"_DGRTN
"RTN","DGPFUT",319,0)
 Q:($T(@DGRTN)="")
"RTN","DGPFUT",320,0)
 N LINE,OFF,REF
"RTN","DGPFUT",321,0)
 ;
"RTN","DGPFUT",322,0)
 F OFF=1:1 S REF="XREF+"_OFF_DGRTN D  Q:LINE=""
"RTN","DGPFUT",323,0)
 . N NM S LINE=$P($T(@REF),";",3,9)
"RTN","DGPFUT",324,0)
 . I $L(LINE) S NM=$P(LINE,";"),DGFLDA(NM)=$TR($P(LINE,";",2,4),";",U)
"RTN","DGPFUT",325,0)
 . Q
"RTN","DGPFUT",326,0)
 Q
"RTN","DGPFUT3")
0^9^B43190610^B35131526
"RTN","DGPFUT3",1,0)
DGPFUT3 ;ALB/SAE - PRF UTILITIES CONTINUED ; 6/9/04 5:06pm
"RTN","DGPFUT3",2,0)
 ;;5.3;Registration;**554,951**;Aug 13, 1993;Build 135
"RTN","DGPFUT3",3,0)
 ;     Last Edited: SHRPE/SGM, Aug 22, 2018 18:22
"RTN","DGPFUT3",4,0)
 ;
"RTN","DGPFUT3",5,0)
 Q  ; no direct entry
"RTN","DGPFUT3",6,0)
 ; ICR# TYPE DESCRIPTION
"RTN","DGPFUT3",7,0)
 ;----- ---- ------------------------------------------
"RTN","DGPFUT3",8,0)
 ; 2055 Sup  $$EXTERNAL^DILFD
"RTN","DGPFUT3",9,0)
 ; 2056 Sup  $$GET1^DIQ
"RTN","DGPFUT3",10,0)
 ; 2171 Sup  $$NS^XUAF4
"RTN","DGPFUT3",11,0)
 ;10103 Sup  ^XLFDT: $$FMTE, $$NOW
"RTN","DGPFUT3",12,0)
 ;10060 Sup  File 200 FM Read
"RTN","DGPFUT3",13,0)
 ;
"RTN","DGPFUT3",14,0)
REVIEW(DGPFDA,DGPFHX,DGPFIEN,DGPFOPT,DGPFACT) ; Entry point for review display
"RTN","DGPFUT3",15,0)
 ;
"RTN","DGPFUT3",16,0)
 ; This is the driver routine for redisplaying entry detail to the user
"RTN","DGPFUT3",17,0)
 ; for their review before filing a new or edited PRF Flag or PRF Flag
"RTN","DGPFUT3",18,0)
 ; Assignment record.
"RTN","DGPFUT3",19,0)
 ;
"RTN","DGPFUT3",20,0)
 ; This routine builds the temporary array which is then used to
"RTN","DGPFUT3",21,0)
 ; create the temporary global for review by the user.
"RTN","DGPFUT3",22,0)
 ;
"RTN","DGPFUT3",23,0)
 ; Called from the following options and actions:
"RTN","DGPFUT3",24,0)
 ; Option                    Action                       Calling Routine
"RTN","DGPFUT3",25,0)
 ; RECORD FLAG ASSIGNMENT    ASSIGN FLAG                  AF^DGPFLMA2
"RTN","DGPFUT3",26,0)
 ; RECORD FLAG ASSIGNMENT    EDIT FLAG ASSIGNMENT         EF^DGPFLMA3
"RTN","DGPFUT3",27,0)
 ; RECORD FLAG ASSIGNMENT    CHANGE ASSIGNMENT OWNERSHIP  CO^DGPFLMA4
"RTN","DGPFUT3",28,0)
 ; RECORD FLAG MANAGEMENT    ADD NEW RECORD FLAG          AF^DGPFLF3
"RTN","DGPFUT3",29,0)
 ; RECORD FLAG MANAGEMENT    EDIT RECORD FLAG             EF^DGPFLF5
"RTN","DGPFUT3",30,0)
 ; RECORD FLAG RETRANSMISSION  <no LM action>             RT^DGPFHLF
"RTN","DGPFUT3",31,0)
 ;
"RTN","DGPFUT3",32,0)
 ; Input:
"RTN","DGPFUT3",33,0)
 ;   DGPFDA - data array
"RTN","DGPFUT3",34,0)
 ;        - derived from DGPFA  if called by Flag Assignment transaction
"RTN","DGPFUT3",35,0)
 ;        - derived from DGPFLF if called by Flag Management transaction
"RTN","DGPFUT3",36,0)
 ;   DGPFHX - history array
"RTN","DGPFUT3",37,0)
 ;        - derived from DGPFAH if called by Flag Assignment transaction
"RTN","DGPFUT3",38,0)
 ;        - derived from DGPFLH if called by Flag Management transaction
"RTN","DGPFUT3",39,0)
 ;   DGPFIEN - IEN of the Flag Assignment for EF and CO
"RTN","DGPFUT3",40,0)
 ;           - this will be null for all other calls to this routine
"RTN","DGPFUT3",41,0)
 ;   DGPFOPT - XQY0 variable for option name - used for headers
"RTN","DGPFUT3",42,0)
 ;   DGPFACT - XQORNOD(0) variable for action name - used for headers
"RTN","DGPFUT3",43,0)
 ;
"RTN","DGPFUT3",44,0)
 ; Output:
"RTN","DGPFUT3",45,0)
 ;   none - A temporary global is built and displayed.
"RTN","DGPFUT3",46,0)
 ;
"RTN","DGPFUT3",47,0)
 ; Temporary variables:
"RTN","DGPFUT3",48,0)
 N TXN  ; transaction - one of the following:
"RTN","DGPFUT3",49,0)
 ;        FA - FLAG ASSIGNMENT - Assign Flag
"RTN","DGPFUT3",50,0)
 ;        FA - FLAG ASSIGNMENT - Edit Flag Assignment
"RTN","DGPFUT3",51,0)
 ;        FA - FLAG ASSIGNMENT - Change Assignment Ownership
"RTN","DGPFUT3",52,0)
 ;        FM - FLAG MANAGEMENT - Add New Record Flag
"RTN","DGPFUT3",53,0)
 ;        FM - FLAG MANAGEMENT - Edit Record Flag
"RTN","DGPFUT3",54,0)
 ;
"RTN","DGPFUT3",55,0)
 ; dg*951
"RTN","DGPFUT3",56,0)
 ; The variable DGPFIEN is reset in this module to a different meaning
"RTN","DGPFUT3",57,0)
 N DGFIEN S DGFIEN=+$G(DGPFIEN)
"RTN","DGPFUT3",58,0)
 N DGPFLOUT  ; (L)ocal(OUT)put array with values needed to setup global
"RTN","DGPFUT3",59,0)
 N DGPFGOUT  ; (G)lobal (OUT)put array name.  Contains assignment detail
"RTN","DGPFUT3",60,0)
 ;
"RTN","DGPFUT3",61,0)
 S TXN=$S($P(DGPFOPT,U)["FLAG ASSIGNMENT":"FA",1:"FM")
"RTN","DGPFUT3",62,0)
 S TXN=TXN_U_$P($P(DGPFOPT,U),"DGPF ",2)
"RTN","DGPFUT3",63,0)
 S TXN=TXN_U_$P(DGPFACT,U,3,4)
"RTN","DGPFUT3",64,0)
 ;
"RTN","DGPFUT3",65,0)
 S DGPFGOUT=$NA(^TMP("DGPFARY",$J)) K @DGPFGOUT
"RTN","DGPFUT3",66,0)
 S DGPFLOUT("ASGMNTIEN")=DGPFIEN
"RTN","DGPFUT3",67,0)
 ;
"RTN","DGPFUT3",68,0)
 D BLDLOCAL(.DGPFDA,.DGPFHX,TXN,.DGPFLOUT)
"RTN","DGPFUT3",69,0)
 D BLDGLOB^DGPFUT4(.DGPFDA,.DGPFHX,TXN,.DGPFLOUT,DGPFGOUT)
"RTN","DGPFUT3",70,0)
 D DISPLAY^DGPFUT5(TXN,DGPFGOUT) ; order thru global, display to user
"RTN","DGPFUT3",71,0)
 ;
"RTN","DGPFUT3",72,0)
 K @DGPFGOUT ; remove temporary global array
"RTN","DGPFUT3",73,0)
 Q
"RTN","DGPFUT3",74,0)
 ;
"RTN","DGPFUT3",75,0)
BLDLOCAL(DGPFDA,DGPFHX,TXN,DGPFLOUT) ;
"RTN","DGPFUT3",76,0)
 ; This procedure builds a local array (DPGFLOUT) of all fields
"RTN","DGPFUT3",77,0)
 ;
"RTN","DGPFUT3",78,0)
 ; Input:
"RTN","DGPFUT3",79,0)
 ;   DGPFDA - flag assignment data array
"RTN","DGPFUT3",80,0)
 ;   DGPFHX - flag assignment history array
"RTN","DGPFUT3",81,0)
 ;   TXN - transaction containing current option and action
"RTN","DGPFUT3",82,0)
 ;   DGPFLOUT - Local Output array
"RTN","DGPFUT3",83,0)
 ;
"RTN","DGPFUT3",84,0)
 ; Output:
"RTN","DGPFUT3",85,0)
 ;   none
"RTN","DGPFUT3",86,0)
 ;
"RTN","DGPFUT3",87,0)
 I $P(TXN,U)="FA" D BLDLOCFA(.DGPFDA,.DGPFHX,.DGPFLOUT) ; bld local array
"RTN","DGPFUT3",88,0)
 I $P(TXN,U)="FM" D BLDLOCFM(.DGPFDA,.DGPFHX,.DGPFLOUT) ; bld local array
"RTN","DGPFUT3",89,0)
 Q
"RTN","DGPFUT3",90,0)
 ;
"RTN","DGPFUT3",91,0)
BLDLOCFA(DGPFDA,DGPFHX,DGPFLOUT) ; build (L)ocal (OUT)put array
"RTN","DGPFUT3",92,0)
 ;
"RTN","DGPFUT3",93,0)
 ; This procedure builds a local array (DPGFLOUT) of all
"RTN","DGPFUT3",94,0)
 ; FLAG ASSIGNMENT fields to be presented to the user.
"RTN","DGPFUT3",95,0)
 ;
"RTN","DGPFUT3",96,0)
 ; Input:
"RTN","DGPFUT3",97,0)
 ;   DGPFDA - flag assignment data array
"RTN","DGPFUT3",98,0)
 ;   DGPFHX - flag assignment history array
"RTN","DGPFUT3",99,0)
 ;   DGPFLOUT - Local Output array
"RTN","DGPFUT3",100,0)
 ;
"RTN","DGPFUT3",101,0)
 ; Output:
"RTN","DGPFUT3",102,0)
 ;   DGPFLOUT - (L)ocal (OUT)put array
"RTN","DGPFUT3",103,0)
 ;
"RTN","DGPFUT3",104,0)
 ; Temporary variables:
"RTN","DGPFUT3",105,0)
 N DGERR,DIERR
"RTN","DGPFUT3",106,0)
 N DGPFIEN  ; Internal Entry Number
"RTN","DGPFUT3",107,0)
 N DGPFPAT  ; patient data array
"RTN","DGPFUT3",108,0)
 N DGPFFLG  ; flag data array
"RTN","DGPFUT3",109,0)
 N DGPFAHX  ; temporary array for holding last assignment
"RTN","DGPFUT3",110,0)
 N DGPFIA   ; initial assignment internal value
"RTN","DGPFUT3",111,0)
 N DGPFLAST ; last assignment
"RTN","DGPFUT3",112,0)
 ;
"RTN","DGPFUT3",113,0)
 Q:'$$GETPAT^DGPFUT2($P(DGPFDA("DFN"),U),.DGPFPAT)
"RTN","DGPFUT3",114,0)
 Q:'$$GETFLAG^DGPFUT1($P($G(DGPFDA("FLAG")),U),.DGPFFLG)
"RTN","DGPFUT3",115,0)
 ;
"RTN","DGPFUT3",116,0)
 S DGPFLOUT("PATIENT")=$G(DGPFPAT("NAME"))
"RTN","DGPFUT3",117,0)
 S DGPFLOUT("FLAGNAME")=$P($G(DGPFFLG("FLAG")),U)
"RTN","DGPFUT3",118,0)
 S DGPFLOUT("FLAGTYPE")=$P($G(DGPFFLG("TYPE")),U,2)
"RTN","DGPFUT3",119,0)
 S DGPFLOUT("CATEGORY")=$S(DGPFDA("FLAG")["26.11":"II (LOCAL)",DGPFDA("FLAG")["26.15":"I (NATIONAL)",1:"")
"RTN","DGPFUT3",120,0)
 ;
"RTN","DGPFUT3",121,0)
 S DGPFIEN=+$G(DGPFDA("STATUS"))
"RTN","DGPFUT3",122,0)
 S DGPFLOUT("STATUS")=$$EXTERNAL^DILFD(26.13,.03,"F",DGPFIEN)
"RTN","DGPFUT3",123,0)
 ;
"RTN","DGPFUT3",124,0)
 ; set initial assignment
"RTN","DGPFUT3",125,0)
 S DGPFLOUT("INITASSIGN")=$$FMTE^XLFDT($P($G(DGPFHX("ASSIGNDT")),U),"5")  ; AF
"RTN","DGPFUT3",126,0)
 I $G(DGPFLOUT("ASGMNTIEN"))]"" D  ; EF and CO actions
"RTN","DGPFUT3",127,0)
 . S DGPFIA=$$GETADT^DGPFAAH(DGPFLOUT("ASGMNTIEN"))
"RTN","DGPFUT3",128,0)
 . S DGPFLOUT("INITASSIGN")=$$FMTE^XLFDT($P($G(DGPFIA),U),"5")
"RTN","DGPFUT3",129,0)
 ;
"RTN","DGPFUT3",130,0)
 ; set last review date
"RTN","DGPFUT3",131,0)
 S DGPFLOUT("LASTREVIEW")="N/A"  ; AF action
"RTN","DGPFUT3",132,0)
 I $G(DGPFLOUT("ASGMNTIEN"))]"" D  ; EF and CO actions
"RTN","DGPFUT3",133,0)
 . S DGPFLAST=$$GETLAST^DGPFAAH(DGPFLOUT("ASGMNTIEN"))
"RTN","DGPFUT3",134,0)
 . S DGPFAHX=$$GETHIST^DGPFAAH(DGPFLAST,.DGPFAHX)
"RTN","DGPFUT3",135,0)
 . Q:+$G(DGPFAHX("ASSIGNDT"))=+$G(DGPFIA)  ; do not set if = init asgn
"RTN","DGPFUT3",136,0)
 . S DGPFLOUT("LASTREVIEW")=$$FMTE^XLFDT($P($G(DGPFAHX("ASSIGNDT")),U),"5D")
"RTN","DGPFUT3",137,0)
 ;
"RTN","DGPFUT3",138,0)
 ; set next review date
"RTN","DGPFUT3",139,0)
 S DGPFLOUT("REVIEWDT")="N/A"
"RTN","DGPFUT3",140,0)
 I $G(DGPFDA("REVIEWDT"))]"" D
"RTN","DGPFUT3",141,0)
 . S DGPFLOUT("REVIEWDT")=$$FMTE^XLFDT($P($G(DGPFDA("REVIEWDT")),U),"5D")
"RTN","DGPFUT3",142,0)
 ;
"RTN","DGPFUT3",143,0)
 S DGPFIEN=+$G(DGPFDA("OWNER"))_","
"RTN","DGPFUT3",144,0)
 S DGPFLOUT("OWNER")=$P($$NS^XUAF4(+DGPFIEN),U)
"RTN","DGPFUT3",145,0)
 ;
"RTN","DGPFUT3",146,0)
 S DGPFIEN=+$G(DGPFDA("ORIGSITE"))_","
"RTN","DGPFUT3",147,0)
 S DGPFLOUT("ORIGSITE")=$P($$NS^XUAF4(+DGPFIEN),U)
"RTN","DGPFUT3",148,0)
 ;
"RTN","DGPFUT3",149,0)
 S DGPFIEN=$G(DGPFHX("ACTION"))
"RTN","DGPFUT3",150,0)
 S DGPFLOUT("ACTION")=$$EXTERNAL^DILFD(26.14,.03,"F",DGPFIEN)
"RTN","DGPFUT3",151,0)
 ;
"RTN","DGPFUT3",152,0)
 S DGPFLOUT("ACTIONDT")=$$FMTE^XLFDT($$NOW^XLFDT,"5T")
"RTN","DGPFUT3",153,0)
 ;
"RTN","DGPFUT3",154,0)
 S DGPFIEN=DUZ_","
"RTN","DGPFUT3",155,0)
 S DGPFLOUT("ENTERBY")=$$GET1^DIQ(200,DGPFIEN,.01,"","","DGERR")
"RTN","DGPFUT3",156,0)
 ;
"RTN","DGPFUT3",157,0)
 ; word processing fields
"RTN","DGPFUT3",158,0)
 S DGPFIEN=+$G(DGPFHX("APPRVBY"))_","
"RTN","DGPFUT3",159,0)
 S DGPFLOUT("APPRVBY")=$$GET1^DIQ(200,DGPFIEN,.01,"","","DGERR")
"RTN","DGPFUT3",160,0)
 ;
"RTN","DGPFUT3",161,0)
 ; set DBRS if present, dg*3.5*951
"RTN","DGPFUT3",162,0)
 ; for EF action, show all DBRS# to display
"RTN","DGPFUT3",163,0)
 ; for AF action DGFIEN=0
"RTN","DGPFUT3",164,0)
 ; see DBRS^DGPFUT61 for format of DGPFA("DBRS"_x)
"RTN","DGPFUT3",165,0)
 ;
"RTN","DGPFUT3",166,0)
 I DGPFLOUT("FLAGNAME")="BEHAVIORAL" D
"RTN","DGPFUT3",167,0)
 . Q:'$D(DGPFDA("DBRS#"))
"RTN","DGPFUT3",168,0)
 . N I,J S (I,J)=0 F  S I=$O(DGPFDA("DBRS#",I)) Q:I=""  D
"RTN","DGPFUT3",169,0)
 . . N X,Y,NM,OTH
"RTN","DGPFUT3",170,0)
 . . S NM=$P(DGPFDA("DBRS#",I),U)
"RTN","DGPFUT3",171,0)
 . . S OTH=$P(DGPFDA("DBRS OTHER",I),U,2)
"RTN","DGPFUT3",172,0)
 . . I OTH="" S OTH="<no value>"
"RTN","DGPFUT3",173,0)
 . . S J=J+1
"RTN","DGPFUT3",174,0)
 . . S DGPFLOUT("DBRS#",J)=NM
"RTN","DGPFUT3",175,0)
 . . S DGPFLOUT("DBRS OTHER",J)=OTH
"RTN","DGPFUT3",176,0)
 . . Q
"RTN","DGPFUT3",177,0)
 . Q
"RTN","DGPFUT3",178,0)
 ;
"RTN","DGPFUT3",179,0)
 M DGPFLOUT("NARR")=DGPFDA("NARR")
"RTN","DGPFUT3",180,0)
 M DGPFLOUT("COMMENT")=DGPFHX("COMMENT")
"RTN","DGPFUT3",181,0)
 ;
"RTN","DGPFUT3",182,0)
 Q
"RTN","DGPFUT3",183,0)
 ;
"RTN","DGPFUT3",184,0)
BLDLOCFM(DGPFDA,DGPFHX,DGPFLOUT) ; build (L)ocal (OUT)put array
"RTN","DGPFUT3",185,0)
 ;
"RTN","DGPFUT3",186,0)
 ; This procedure builds a local array (DPGFLOUT) of all
"RTN","DGPFUT3",187,0)
 ; FLAG MANAGEMENT fields to be presented to the user.
"RTN","DGPFUT3",188,0)
 ;
"RTN","DGPFUT3",189,0)
 ; Input:
"RTN","DGPFUT3",190,0)
 ;   DGPFDA - flag management data array
"RTN","DGPFUT3",191,0)
 ;   DGPFHX - flag management history array
"RTN","DGPFUT3",192,0)
 ;   DGPFLOUT - (L)ocal (OUT)put array
"RTN","DGPFUT3",193,0)
 ;
"RTN","DGPFUT3",194,0)
 ; Output:
"RTN","DGPFUT3",195,0)
 ;   DGPFLOUT - (L)ocal (OUT)put array
"RTN","DGPFUT3",196,0)
 ;
"RTN","DGPFUT3",197,0)
 ; Temporary variables:
"RTN","DGPFUT3",198,0)
 N DGPFSUB  ; loop control variable
"RTN","DGPFUT3",199,0)
 ;
"RTN","DGPFUT3",200,0)
 S DGPFLOUT("FLAGNAME")=$P($G(DGPFDA("FLAG")),U,2)
"RTN","DGPFUT3",201,0)
 S DGPFLOUT("CATEGORY")="II (LOCAL)"
"RTN","DGPFUT3",202,0)
 S DGPFLOUT("FLAGTYPE")=$P($G(DGPFDA("TYPE")),U,2)
"RTN","DGPFUT3",203,0)
 S DGPFLOUT("STATUS")=$P($G(DGPFDA("STAT")),U,2)
"RTN","DGPFUT3",204,0)
 S DGPFLOUT("REVFREQ")=$P(DGPFDA("REVFREQ"),U)
"RTN","DGPFUT3",205,0)
 S DGPFLOUT("NOTIDAYS")=$P(DGPFDA("NOTIDAYS"),U)
"RTN","DGPFUT3",206,0)
 S DGPFLOUT("REVGRP")=$P(DGPFDA("REVGRP"),U,2)
"RTN","DGPFUT3",207,0)
 S DGPFLOUT("TIUTITLE")=$E($P(DGPFDA("TIUTITLE"),U,2),1,51)
"RTN","DGPFUT3",208,0)
 S DGPFLOUT("ENTERDT")=$$FMTE^XLFDT($$NOW^XLFDT,"5T")
"RTN","DGPFUT3",209,0)
 S DGPFIEN=DUZ_","
"RTN","DGPFUT3",210,0)
 S DGPFLOUT("ENTERBY")=$$GET1^DIQ(200,DGPFIEN,.01,"","","DGERR")
"RTN","DGPFUT3",211,0)
 ;
"RTN","DGPFUT3",212,0)
 ; principal investigator(s)
"RTN","DGPFUT3",213,0)
 S DGPFSUB=""
"RTN","DGPFUT3",214,0)
 F  S DGPFSUB=$O(DGPFDA("PRININV",DGPFSUB)) Q:DGPFSUB=""  D
"RTN","DGPFUT3",215,0)
 . Q:$G(DGPFDA("PRININV",DGPFSUB,0))="@"
"RTN","DGPFUT3",216,0)
 . S DGPFLOUT("PRININV",DGPFSUB,0)=$P($G(DGPFDA("PRININV",DGPFSUB,0)),U,2)
"RTN","DGPFUT3",217,0)
 ;
"RTN","DGPFUT3",218,0)
 ; word processing fields
"RTN","DGPFUT3",219,0)
 M DGPFLOUT("DESC")=DGPFDA("DESC")
"RTN","DGPFUT3",220,0)
 M DGPFLOUT("REASON")=DGPFHX("REASON")
"RTN","DGPFUT3",221,0)
 ;
"RTN","DGPFUT3",222,0)
 Q
"RTN","DGPFUT4")
0^10^B49462470^B36954590
"RTN","DGPFUT4",1,0)
DGPFUT4 ;ALB/SAE - PRF UTILITIES CONTINUED ; 6/9/04 1:33pm
"RTN","DGPFUT4",2,0)
 ;;5.3;Registration;**554,951**;Aug 13, 1993;Build 135
"RTN","DGPFUT4",3,0)
 ;     Last Edited: SHRPE/sgm - Jul 31, 2018 15:36
"RTN","DGPFUT4",4,0)
 ;
"RTN","DGPFUT4",5,0)
 Q  ; no direct entry
"RTN","DGPFUT4",6,0)
 ;
"RTN","DGPFUT4",7,0)
BLDGLOB(DGPFDA,DGPFHX,TXN,DGPFLOUT,DGPFGOUT) ; build global
"RTN","DGPFUT4",8,0)
 ;
"RTN","DGPFUT4",9,0)
 ; This procedure builds the temporary global for display.
"RTN","DGPFUT4",10,0)
 ; It first determines the longest label, then it steps thru the $TEXT
"RTN","DGPFUT4",11,0)
 ; list of labels of fields, which control the order of nodes created.
"RTN","DGPFUT4",12,0)
 ; For each label it appends the field value then adds the resulting
"RTN","DGPFUT4",13,0)
 ; value to the temporary global ^TMP("DGPFARY",$J).
"RTN","DGPFUT4",14,0)
 ;
"RTN","DGPFUT4",15,0)
 ; Input:
"RTN","DGPFUT4",16,0)
 ;   DGPFDA - data array
"RTN","DGPFUT4",17,0)
 ;        - derived from DGPFA  if called by Flag Assignment transaction
"RTN","DGPFUT4",18,0)
 ;        - derived from DGPFLF if called by Flag Management transaction
"RTN","DGPFUT4",19,0)
 ;   DGPFHX - history array
"RTN","DGPFUT4",20,0)
 ;        - derived from DGPFAH if called by Flag Assignment transaction
"RTN","DGPFUT4",21,0)
 ;        - derived from DGPFLH if called by Flag Management transaction
"RTN","DGPFUT4",22,0)
 ;   TXN - transaction - one of the following:
"RTN","DGPFUT4",23,0)
 ;         FA - FLAG ASSIGNMENT - Assign Flag
"RTN","DGPFUT4",24,0)
 ;         FA - FLAG ASSIGNMENT - Edit Flag Assignment
"RTN","DGPFUT4",25,0)
 ;         FA - FLAG ASSIGNMENT - Change Assignment Ownership
"RTN","DGPFUT4",26,0)
 ;         FM - FLAG MANAGEMENT - Add New Record Flag
"RTN","DGPFUT4",27,0)
 ;         FM - FLAG MANAGEMENT - Edit Record Flag
"RTN","DGPFUT4",28,0)
 ;   DGPFLOUT - (L)ocal (OUT)put array, containing non-WP fields
"RTN","DGPFUT4",29,0)
 ;   DGPFGOUT - (G)lobal (OUT)put array name to be built.
"RTN","DGPFUT4",30,0)
 ;
"RTN","DGPFUT4",31,0)
 ; Output:
"RTN","DGPFUT4",32,0)
 ;   DGPFGOUT - (G)lobal (OUT)put - name of ^TMP global built
"RTN","DGPFUT4",33,0)
 ;              Contains assignment detail
"RTN","DGPFUT4",34,0)
 ;              This global is displayed to screen for user.
"RTN","DGPFUT4",35,0)
 ;
"RTN","DGPFUT4",36,0)
 ; Temporary variables:
"RTN","DGPFUT4",37,0)
 N DGPFROOT  ; Array root subscript
"RTN","DGPFUT4",38,0)
 N DGPFCOL   ; Column value for each display field, stored in text block
"RTN","DGPFUT4",39,0)
 N DGPFLABL  ; Label of DGPFROOT for display
"RTN","DGPFUT4",40,0)
 N DGPFVAL   ; Value from DGPFROOT array node
"RTN","DGPFUT4",41,0)
 N DGPFPAD   ; Holds padded spaces for display alignment
"RTN","DGPFUT4",42,0)
 N DGPFOFST  ; Offset of text line in text subroutine
"RTN","DGPFUT4",43,0)
 N DGPFLONG  ; Longest label for later display
"RTN","DGPFUT4",44,0)
 N DGPFLINE  ; Line number incremented during final global build in SET
"RTN","DGPFUT4",45,0)
 N DGPFRTN   ; Routine that contains the TEXT from which to read
"RTN","DGPFUT4",46,0)
 N DGPFTEXT  ; value of text line retrieved from TEXT
"RTN","DGPFUT4",47,0)
 N DGPFTAG   ; tag at offset of TEXT
"RTN","DGPFUT4",48,0)
 N DGPFSR    ; TEXT subroutine to use to acquire data
"RTN","DGPFUT4",49,0)
 N DGPFPICT  ; count of number of times PRININV array has been read
"RTN","DGPFUT4",50,0)
 ;
"RTN","DGPFUT4",51,0)
 S DGPFLINE=0
"RTN","DGPFUT4",52,0)
 S DGPFRTN=$P(TXN,U)_"TXT"
"RTN","DGPFUT4",53,0)
 S DGPFPICT=0
"RTN","DGPFUT4",54,0)
 ;
"RTN","DGPFUT4",55,0)
 ; determine longest label - set this value into the variable DGPFLONG:
"RTN","DGPFUT4",56,0)
 S DGPFLONG=1
"RTN","DGPFUT4",57,0)
 F DGPFOFST=2:1 D  Q:DGPFROOT=""!(DGPFROOT="QUIT")
"RTN","DGPFUT4",58,0)
 . S DGPFTAG=DGPFRTN_"+"_DGPFOFST,DGPFTEXT=$T(@DGPFTAG)
"RTN","DGPFUT4",59,0)
 . S DGPFROOT=$P(DGPFTEXT,";",3)
"RTN","DGPFUT4",60,0)
 . Q:DGPFROOT=""!(";DESC;NARR;COMMENT;REASON;QUIT;"[(";"_DGPFROOT_";"))
"RTN","DGPFUT4",61,0)
 . I DGPFROOT="PRININV",'$D(DGPFLOUT(DGPFROOT)) Q
"RTN","DGPFUT4",62,0)
 . S DGPFLABL=$P(DGPFTEXT,";",5)
"RTN","DGPFUT4",63,0)
 . S DGPFLONG=$S($L(DGPFLABL)+1>DGPFLONG:$L(DGPFLABL)+1,1:DGPFLONG)
"RTN","DGPFUT4",64,0)
 ;
"RTN","DGPFUT4",65,0)
 ; step thru the text - this controls the order of display
"RTN","DGPFUT4",66,0)
 F DGPFOFST=2:1 D  Q:DGPFROOT=""!(DGPFROOT="QUIT")
"RTN","DGPFUT4",67,0)
 . S DGPFTAG=DGPFRTN_"+"_DGPFOFST,DGPFTEXT=$T(@DGPFTAG)
"RTN","DGPFUT4",68,0)
 . S DGPFROOT=$P(DGPFTEXT,";",3)
"RTN","DGPFUT4",69,0)
 . S DGPFLABL=$P(DGPFTEXT,";",5)
"RTN","DGPFUT4",70,0)
 . Q:DGPFROOT=""!(DGPFROOT="QUIT")
"RTN","DGPFUT4",71,0)
 . ;
"RTN","DGPFUT4",72,0)
 . ; build array from Principal Investigator multiple
"RTN","DGPFUT4",73,0)
 . I DGPFROOT="PRININV" D  Q
"RTN","DGPFUT4",74,0)
 . . D BLDPI(DGPFROOT,DGPFLABL,DGPFLONG,.DGPFLINE,.DGPFLOUT,DGPFGOUT)
"RTN","DGPFUT4",75,0)
 . ;
"RTN","DGPFUT4",76,0)
 . ; build array from word-processing multiple:
"RTN","DGPFUT4",77,0)
 . I ";DESC;NARR;COMMENT;REASON;"[(";"_DGPFROOT_";") D  Q
"RTN","DGPFUT4",78,0)
 . . D BLDWP(DGPFROOT,DGPFLABL,.DGPFLINE,.DGPFLOUT,DGPFGOUT)
"RTN","DGPFUT4",79,0)
 . ;
"RTN","DGPFUT4",80,0)
 . ; DG*5.3*951 introduces a multiple
"RTN","DGPFUT4",81,0)
 . S DGPFCOL=DGPFLONG-$L(DGPFLABL)
"RTN","DGPFUT4",82,0)
 . S DGPFPAD=$E($J("",DGPFCOL),1,DGPFCOL)
"RTN","DGPFUT4",83,0)
 . I DGPFROOT'["DBRS" D
"RTN","DGPFUT4",84,0)
 . . S DGPFVAL=DGPFPAD_DGPFLABL_DGPFLOUT(DGPFROOT)
"RTN","DGPFUT4",85,0)
 . . S DGPFLINE=DGPFLINE+1
"RTN","DGPFUT4",86,0)
 . . S @DGPFGOUT@(DGPFLINE,0)=DGPFVAL
"RTN","DGPFUT4",87,0)
 . . Q
"RTN","DGPFUT4",88,0)
 . I DGPFROOT="DBRS#" I DGPFLOUT("FLAGNAME")="BEHAVIORAL" D DBRS
"RTN","DGPFUT4",89,0)
 . Q
"RTN","DGPFUT4",90,0)
 Q
"RTN","DGPFUT4",91,0)
 ;
"RTN","DGPFUT4",92,0)
BLDPI(DGPFROOT,DGPFLABL,DGPFLONG,DGPFLINE,DGPFLOUT,DGPFGOUT) ;
"RTN","DGPFUT4",93,0)
 ;
"RTN","DGPFUT4",94,0)
 ; Add each of the nodes from the PRININV array multiple to temp global.
"RTN","DGPFUT4",95,0)
 ;
"RTN","DGPFUT4",96,0)
 ; Input:
"RTN","DGPFUT4",97,0)
 ;   DGPFROOT - Name of the field derived from the $TEXT segment below
"RTN","DGPFUT4",98,0)
 ;   DGPFLABL - Label
"RTN","DGPFUT4",99,0)
 ;   DGPFLONG - Contains length of longest label
"RTN","DGPFUT4",100,0)
 ;   DGPFLINE - Line number for incrementing of global array nodes
"RTN","DGPFUT4",101,0)
 ;   DGPFLOUT - Local array of WP text
"RTN","DGPFUT4",102,0)
 ;   DGPFGOUT - (G)lobal (OUT)put - name of ^TMP global built
"RTN","DGPFUT4",103,0)
 ;
"RTN","DGPFUT4",104,0)
 ; Output:
"RTN","DGPFUT4",105,0)
 ;   none - build DGPFGOUT - (G)lobal (OUT)put ^TMP global
"RTN","DGPFUT4",106,0)
 ;
"RTN","DGPFUT4",107,0)
 ; Temporary variables:
"RTN","DGPFUT4",108,0)
 N DGPFSUB ; subscript
"RTN","DGPFUT4",109,0)
 N DGPFPAD ; padding for leading spaces for display
"RTN","DGPFUT4",110,0)
 N DGPFCOL ; column value for Principal Investigator label
"RTN","DGPFUT4",111,0)
 N DGPFVAL ; value from DGPFROOT array node
"RTN","DGPFUT4",112,0)
 ;
"RTN","DGPFUT4",113,0)
 S DGPFCOL=DGPFLONG-$L(DGPFLABL)
"RTN","DGPFUT4",114,0)
 S DGPFPAD=$E($J("",DGPFCOL),1,DGPFCOL)
"RTN","DGPFUT4",115,0)
 ;
"RTN","DGPFUT4",116,0)
 S DGPFSUB=""
"RTN","DGPFUT4",117,0)
 F  S DGPFSUB=$O(DGPFLOUT(DGPFROOT,DGPFSUB)) Q:'DGPFSUB  D
"RTN","DGPFUT4",118,0)
 . S DGPFVAL=DGPFPAD_DGPFLABL_$G(DGPFLOUT(DGPFROOT,DGPFSUB,0))
"RTN","DGPFUT4",119,0)
 . ;
"RTN","DGPFUT4",120,0)
 . S DGPFLINE=DGPFLINE+1
"RTN","DGPFUT4",121,0)
 . S @DGPFGOUT@(DGPFLINE,0)=DGPFVAL
"RTN","DGPFUT4",122,0)
 Q
"RTN","DGPFUT4",123,0)
 ;
"RTN","DGPFUT4",124,0)
BLDWP(DGPFROOT,DGPFLABL,DGPFLINE,DGPFLOUT,DGPFGOUT) ;build WP array
"RTN","DGPFUT4",125,0)
 ;
"RTN","DGPFUT4",126,0)
 ; This procedure adds each of the nodes from the word-processing
"RTN","DGPFUT4",127,0)
 ; multiple to the temp global (^TMP).
"RTN","DGPFUT4",128,0)
 ;
"RTN","DGPFUT4",129,0)
 ; Input:
"RTN","DGPFUT4",130,0)
 ;   DGPFROOT - Name of the field derived from the $TEXT segment below
"RTN","DGPFUT4",131,0)
 ;   DGPFLABL - label
"RTN","DGPFUT4",132,0)
 ;   DGPFLINE - Line number for incrementing of global array nodes
"RTN","DGPFUT4",133,0)
 ;   DGPFLOUT - Local array of WP text to be added to the global array
"RTN","DGPFUT4",134,0)
 ;   DGPFGOUT - (G)lobal (OUT)put - name of ^TMP global built
"RTN","DGPFUT4",135,0)
 ;
"RTN","DGPFUT4",136,0)
 ; Output:
"RTN","DGPFUT4",137,0)
 ;   none - build DGPFGOUT - (G)lobal (OUT)put ^TMP global
"RTN","DGPFUT4",138,0)
 ;
"RTN","DGPFUT4",139,0)
 ; Temporary variables:
"RTN","DGPFUT4",140,0)
 N DGSUB ; subscript value in word processing fields
"RTN","DGPFUT4",141,0)
 N DGPFPAD ; Padding as spaces for alignment of headers
"RTN","DGPFUT4",142,0)
 N DGPFVAL ; value from DGPFROOT array node
"RTN","DGPFUT4",143,0)
 ;
"RTN","DGPFUT4",144,0)
 S DGPFPAD=" "
"RTN","DGPFUT4",145,0)
 ;
"RTN","DGPFUT4",146,0)
 ; insert header for narrative:
"RTN","DGPFUT4",147,0)
 S DGPFVAL=DGPFPAD_DGPFLABL
"RTN","DGPFUT4",148,0)
 ;
"RTN","DGPFUT4",149,0)
 S DGPFLINE=DGPFLINE+1
"RTN","DGPFUT4",150,0)
 S @DGPFGOUT@(DGPFLINE,0)=DGPFVAL
"RTN","DGPFUT4",151,0)
 ;
"RTN","DGPFUT4",152,0)
 ; set each word processing line
"RTN","DGPFUT4",153,0)
 S DGSUB=0
"RTN","DGPFUT4",154,0)
 F  S DGSUB=$O(DGPFLOUT(DGPFROOT,DGSUB)) Q:'DGSUB  D
"RTN","DGPFUT4",155,0)
 . S DGPFVAL=DGPFPAD_$G(DGPFLOUT(DGPFROOT,DGSUB,0))
"RTN","DGPFUT4",156,0)
 . ;
"RTN","DGPFUT4",157,0)
 . S DGPFLINE=DGPFLINE+1
"RTN","DGPFUT4",158,0)
 . S @DGPFGOUT@(DGPFLINE,0)=DGPFVAL
"RTN","DGPFUT4",159,0)
 Q
"RTN","DGPFUT4",160,0)
 ;
"RTN","DGPFUT4",161,0)
DBRS ;  DG*5.3*951 - display data in DBRS multiple
"RTN","DGPFUT4",162,0)
 ;   got here where DBRS# text line processed
"RTN","DGPFUT4",163,0)
 N I,J,X,LBL,PAD,ROOT,VAL
"RTN","DGPFUT4",164,0)
 S PAD(1)=DGPFPAD
"RTN","DGPFUT4",165,0)
 S LBL(1)=DGPFLABL
"RTN","DGPFUT4",166,0)
 S ROOT(1)=DGPFROOT
"RTN","DGPFUT4",167,0)
 ;  get settings for second field
"RTN","DGPFUT4",168,0)
 S DGPFOFST=DGPFOFST+1
"RTN","DGPFUT4",169,0)
 S DGPFTAG=DGPFRTN_"+"_DGPFOFST,DGPFTEXT=$T(@DGPFTAG)
"RTN","DGPFUT4",170,0)
 S DGPFROOT=$P(DGPFTEXT,";",3) S ROOT(2)=DGPFROOT
"RTN","DGPFUT4",171,0)
 S DGPFLABL=$P(DGPFTEXT,";",5) S LBL(2)=DGPFLABL
"RTN","DGPFUT4",172,0)
 S DGPFCOL=DGPFLONG-$L(DGPFLABL)
"RTN","DGPFUT4",173,0)
 S DGPFPAD=$E($J("",DGPFCOL),1,DGPFCOL) S PAD(2)=DGPFPAD
"RTN","DGPFUT4",174,0)
 S I=0 F J=0:0 S I=$O(DGPFLOUT("DBRS#",I)) Q:'I  D
"RTN","DGPFUT4",175,0)
 . S VAL=PAD(1)_LBL(1)_DGPFLOUT(ROOT(1),I)
"RTN","DGPFUT4",176,0)
 . S DGPFLINE=DGPFLINE+1
"RTN","DGPFUT4",177,0)
 . S @DGPFGOUT@(DGPFLINE,0)=VAL
"RTN","DGPFUT4",178,0)
 . S VAL=$G(DGPFLOUT(ROOT(2),I))
"RTN","DGPFUT4",179,0)
 . S:VAL="" VAL="<no value>"
"RTN","DGPFUT4",180,0)
 . S VAL=PAD(2)_LBL(2)_VAL
"RTN","DGPFUT4",181,0)
 . S DGPFLINE=DGPFLINE+1
"RTN","DGPFUT4",182,0)
 . S @DGPFGOUT@(DGPFLINE,0)=VAL
"RTN","DGPFUT4",183,0)
 . Q
"RTN","DGPFUT4",184,0)
 Q
"RTN","DGPFUT4",185,0)
 ;
"RTN","DGPFUT4",186,0)
FATXT ; ordered list of fields to be presented to user for Flag Assignment
"RTN","DGPFUT4",187,0)
 ;;ROOT;       ;LABEL;
"RTN","DGPFUT4",188,0)
 ;;PATIENT;    ;Patient Name: ;
"RTN","DGPFUT4",189,0)
 ;;FLAGNAME;   ;Flag Name: ;
"RTN","DGPFUT4",190,0)
 ;;FLAGTYPE;   ;Flag Type: ;
"RTN","DGPFUT4",191,0)
 ;;CATEGORY;   ;Flag Category: ;
"RTN","DGPFUT4",192,0)
 ;;STATUS;     ;Assignment Status: ;
"RTN","DGPFUT4",193,0)
 ;;INITASSIGN; ;Initial Assignment: ;
"RTN","DGPFUT4",194,0)
 ;;LASTREVIEW; ;Last Review Date: ;
"RTN","DGPFUT4",195,0)
 ;;REVIEWDT;   ;Next Review Date: ;
"RTN","DGPFUT4",196,0)
 ;;OWNER;      ;Owner Site: ;
"RTN","DGPFUT4",197,0)
 ;;ORIGSITE;   ;Originating Site: ;
"RTN","DGPFUT4",198,0)
 ;;ACTION;     ;Assignment Action: ;
"RTN","DGPFUT4",199,0)
 ;;ACTIONDT;   ;Action Date: ;
"RTN","DGPFUT4",200,0)
 ;;ENTERBY;    ;Entered By: ;
"RTN","DGPFUT4",201,0)
 ;;APPRVBY;    ;Approved By: ;
"RTN","DGPFUT4",202,0)
 ;;DBRS#;      ;DBRS No.: ;
"RTN","DGPFUT4",203,0)
 ;;DBRS OTHER; ;DBRS Other: ;
"RTN","DGPFUT4",204,0)
 ;;NARR;       ;Record Flag Assignment Narrative: ;
"RTN","DGPFUT4",205,0)
 ;;COMMENT;    ;Action Comments: ;
"RTN","DGPFUT4",206,0)
 ;;QUIT;
"RTN","DGPFUT4",207,0)
 Q
"RTN","DGPFUT4",208,0)
 ;
"RTN","DGPFUT4",209,0)
FMTXT ; ordered list of fields to be presented to user for Flag Management
"RTN","DGPFUT4",210,0)
 ;;ROOT;       ;LABEL;
"RTN","DGPFUT4",211,0)
 ;;FLAGNAME;   ;Flag Name: ;
"RTN","DGPFUT4",212,0)
 ;;CATEGORY;   ;Flag Category: ;
"RTN","DGPFUT4",213,0)
 ;;FLAGTYPE;   ;Flag Type: ;
"RTN","DGPFUT4",214,0)
 ;;STATUS;     ;Flag Status: ;
"RTN","DGPFUT4",215,0)
 ;;REVFREQ;    ;Review Frequency Days: ;
"RTN","DGPFUT4",216,0)
 ;;NOTIDAYS;   ;Notification Days: ;
"RTN","DGPFUT4",217,0)
 ;;REVGRP;     ;Review Mail Group: ;
"RTN","DGPFUT4",218,0)
 ;;TIUTITLE;   ;Progress Note Title: ;
"RTN","DGPFUT4",219,0)
 ;;ENTERDT;    ;Enter/Edit On: ;
"RTN","DGPFUT4",220,0)
 ;;ENTERBY;    ;Enter/Edit By: ;
"RTN","DGPFUT4",221,0)
 ;;PRININV;    ;Principal Investigator(s): ;
"RTN","DGPFUT4",222,0)
 ;;DESC;       ;Flag Description: ;
"RTN","DGPFUT4",223,0)
 ;;REASON;     ;Reason For Flag Enter/Edit: ;
"RTN","DGPFUT4",224,0)
 ;;QUIT;
"RTN","DGPFUT4",225,0)
 Q
"RTN","DGPFUT6")
0^11^B4892495^n/a
"RTN","DGPFUT6",1,0)
DGPFUT6 ;SHRPE/SGM - PRF DBRS# MAIN DRIVER ; Jan 19, 2018 16:45
"RTN","DGPFUT6",2,0)
 ;;5.3;Registration;**951**;Aug 13, 1993;Build 135
"RTN","DGPFUT6",3,0)
 ;     Last Edited: SHRPE/sgm - Aug 22, 2018 09:16
"RTN","DGPFUT6",4,0)
 ;
"RTN","DGPFUT6",5,0)
 ; ICR#  TYPE  DESCRIPTION
"RTN","DGPFUT6",6,0)
 ;-----  ----  -----------------------------------------
"RTN","DGPFUT6",7,0)
 ; 2051  Sup   $$FIND1^DIC
"RTN","DGPFUT6",8,0)
 ; 2056  Sup   $$GET1^DIQ
"RTN","DGPFUT6",9,0)
 ;10112  Sup   $$SITE^VASITE
"RTN","DGPFUT6",10,0)
 ;
"RTN","DGPFUT6",11,0)
 ;=====================================================================
"RTN","DGPFUT6",12,0)
 ;***   This routine is the gateway to the other DGPFUT6* routines  ***
"RTN","DGPFUT6",13,0)
 ;***   DGPFUT6 is the only routine authorized to invoke other      ***
"RTN","DGPFUT6",14,0)
 ;***   DGPFUT6* routines.                                          ***
"RTN","DGPFUT6",15,0)
 ;=====================================================================
"RTN","DGPFUT6",16,0)
 ;
"RTN","DGPFUT6",17,0)
 Q
"RTN","DGPFUT6",18,0)
 ;
"RTN","DGPFUT6",19,0)
 ;=====================================================================
"RTN","DGPFUT6",20,0)
AASGN(DGIENS,DGPFA,DGFDA,DGPFUV,DGPFERR) ;
"RTN","DGPFUT6",21,0)
 ;  set up FILE^DIE or UPDATE^DIE input array for DBRS data
"RTN","DGPFUT6",22,0)
 D AASGN^DGPFUT62($G(DGIENS),.DGPFA,.DGFDA,$G(DGPFUV),.DGPFERR)
"RTN","DGPFUT6",23,0)
 Q
"RTN","DGPFUT6",24,0)
 ;
"RTN","DGPFUT6",25,0)
 ;=====================================================================
"RTN","DGPFUT6",26,0)
DBRSEDIT() ;  called from AF/EF Listmanager actions
"RTN","DGPFUT6",27,0)
 Q $$DBRS^DGPFUT61
"RTN","DGPFUT6",28,0)
 ;
"RTN","DGPFUT6",29,0)
 ;=====================================================================
"RTN","DGPFUT6",30,0)
DBRSNO(DGN,DGNIEN) ; validate DBRS# unique in VistA
"RTN","DGPFUT6",31,0)
 Q $$DBRSVAL^DGPFUT61($G(DGN),$G(DGNIEN))
"RTN","DGPFUT6",32,0)
 ;
"RTN","DGPFUT6",33,0)
 ;=====================================================================
"RTN","DGPFUT6",34,0)
DEFDIV() ;   return a valid PRF division for this user
"RTN","DGPFUT6",35,0)
 N X
"RTN","DGPFUT6",36,0)
 S X=+$G(DUZ(2)) I X,$$ISDIV^DGPFUT(X) Q X
"RTN","DGPFUT6",37,0)
 S X=+$$SITE^VASITE
"RTN","DGPFUT6",38,0)
 Q X
"RTN","DGPFUT6",39,0)
 ;
"RTN","DGPFUT6",40,0)
 ;=====================================================================
"RTN","DGPFUT6",41,0)
DEL(DGXIEN,DGFILE) ;  delete DBRS data from FM record
"RTN","DGPFUT6",42,0)
 ;   DGXIEN - ien to file 26.13 OR 26.14
"RTN","DGPFUT6",43,0)
 ;   DGFILE - 26.13 or 26.14
"RTN","DGPFUT6",44,0)
 D DEL^DGPFUT62(DGXIEN,DGFILE)
"RTN","DGPFUT6",45,0)
 Q
"RTN","DGPFUT6",46,0)
 ;
"RTN","DGPFUT6",47,0)
EIE(DGPFIN) ; warning message that all DBRS# will be removed
"RTN","DGPFUT6",48,0)
 D EIE^DGPFUT61(.DGPFIN)
"RTN","DGPFUT6",49,0)
 Q
"RTN","DGPFUT6",50,0)
 ;
"RTN","DGPFUT6",51,0)
 ;=====================================================================
"RTN","DGPFUT6",52,0)
FLAG(DGPFIN,SCR,TYPE) ;
"RTN","DGPFUT6",53,0)
 ; Find one flag matching 
"RTN","DGPFUT6",54,0)
 ; INPUT PARAMETERS:
"RTN","DGPFUT6",55,0)
 ;   DGPFIN - required - flag full name or variable-pointer syntax
"RTN","DGPFUT6",56,0)
 ;      SCR - required - flag name to use as a screen if DGPFIN is
"RTN","DGPFUT6",57,0)
 ;                       var-pointer
"RTN","DGPFUT6",58,0)
 ;     TYPE - optional - I or II or <null or 0 - for either>
"RTN","DGPFUT6",59,0)
 ; EXTRINSIC FUNCTION returns 0 or variable_pointer^flag_name
"RTN","DGPFUT6",60,0)
 ;
"RTN","DGPFUT6",61,0)
 Q $$FLAG^DGPFUT64($G(DGPFIN),$G(SCR),$G(TYPE))
"RTN","DGPFUT6",62,0)
 ;
"RTN","DGPFUT6",63,0)
 ;=====================================================================
"RTN","DGPFUT6",64,0)
FLAGCVRT(DGRET,VAL,TYPE) ;
"RTN","DGPFUT6",65,0)
 ;Convert flag name to variable pointer / variable pointer to flag name
"RTN","DGPFUT6",66,0)
 ;INPUT PARAMETERS:
"RTN","DGPFUT6",67,0)
 ;   TYPE - optional -  I:only return Cat I values
"RTN","DGPFUT6",68,0)
 ;                     II:only return Cat II values
"RTN","DGPFUT6",69,0)
 ;              null or 0:return either Cat I or Cat II   
"RTN","DGPFUT6",70,0)
 ;    VAL - required - flag full name or variable-pointer syntax
"RTN","DGPFUT6",71,0)
 ;
"RTN","DGPFUT6",72,0)
 ;EXTRINSIC FUNCTION and RETURN PARAMETER DGRET returns:
"RTN","DGPFUT6",73,0)
 ;   0 if no matches or error encountered
"RTN","DGPFUT6",74,0)
 ;   else variable_pointer ^ name of flag
"RTN","DGPFUT6",75,0)
 ;   This expects that there are not multiple flags with the same name
"RTN","DGPFUT6",76,0)
 ;
"RTN","DGPFUT6",77,0)
 D FLAGCVRT^DGPFUT64(.DGRET,$G(VAL),$G(TYPE))
"RTN","DGPFUT6",78,0)
 Q:$Q DGRET
"RTN","DGPFUT6",79,0)
 Q
"RTN","DGPFUT6",80,0)
 ;=====================================================================
"RTN","DGPFUT6",81,0)
GETDBRS(DGRET,DGAIEN) ; Get DBRS data for an Assignment record
"RTN","DGPFUT6",82,0)
 D GETDBRS^DGPFUT62(.DGRET,$G(DGAIEN))
"RTN","DGPFUT6",83,0)
 Q
"RTN","DGPFUT6",84,0)
 ;
"RTN","DGPFUT6",85,0)
 ;=====================================================================
"RTN","DGPFUT6",86,0)
GETDBRSH(DGRET,DGHIEN) ; Get DBRS data fOR a History record
"RTN","DGPFUT6",87,0)
 D GETDBRSH^DGPFUT62(.DGRET,$G(DGHIEN))
"RTN","DGPFUT6",88,0)
 Q
"RTN","DGPFUT6",89,0)
 ;
"RTN","DGPFUT6",90,0)
 ;=====================================================================
"RTN","DGPFUT6",91,0)
ICR() ;
"RTN","DGPFUT6",92,0)
 ; called from ICR entry points
"RTN","DGPFUT6",93,0)
 ; to not update the ICR agreements affected, DBRS data will not be
"RTN","DGPFUT6",94,0)
 ;    returned from a call that is invoking that ICR agreement unless
"RTN","DGPFUT6",95,0)
 ;    one undertakes the responsibility of upgrading the calling
"RTN","DGPFUT6",96,0)
 ;    program also.
"RTN","DGPFUT6",97,0)
 ;  Return 1 if called from external source via ICR
"RTN","DGPFUT6",98,0)
 ;         0 if called from DG internal sources
"RTN","DGPFUT6",99,0)
 ;         0 if external source will use updated info
"RTN","DGPFUT6",100,0)
 N X,Y
"RTN","DGPFUT6",101,0)
 S Y=1,X=$G(XQY0)
"RTN","DGPFUT6",102,0)
 I $E(X,1,2)="DG" S Y=0
"RTN","DGPFUT6",103,0)
 I Y,$E(X,1,2)="OR" S Y=0
"RTN","DGPFUT6",104,0)
 Q Y
"RTN","DGPFUT6",105,0)
 ;
"RTN","DGPFUT6",106,0)
 ;=====================================================================
"RTN","DGPFUT6",107,0)
LOC(DGIN) ; Was History record created locally or at another VAMC
"RTN","DGPFUT6",108,0)
 Q $$LOC^DGPFUT63(.DGIN)
"RTN","DGPFUT6",109,0)
 ;
"RTN","DGPFUT6",110,0)
 ;=====================================================================
"RTN","DGPFUT6",111,0)
SELASGN(DGSCR,FLG) ;
"RTN","DGPFUT6",112,0)
 ;  select an existing assignment from from 26.13
"RTN","DGPFUT6",113,0)
 ;INPUT PARAMETER: DGSCR - optional - ^DIC input parameter DIC("S")
"RTN","DGPFUT6",114,0)
 ;                 FLG   - optional, if Z then return zeroth node as
"RTN","DGPFUT6",115,0)
 ;                         second and subsequent "^"-pieces 
"RTN","DGPFUT6",116,0)
 ;EXTRINSIC FUNCTION: ien or ien[^zeroth node] or 0 or -1
"RTN","DGPFUT6",117,0)
 ;
"RTN","DGPFUT6",118,0)
 Q $$SELASGN^DGPFUT64($G(DGSCR),$G(FLG))
"RTN","DGPFUT6",119,0)
 ;
"RTN","DGPFUT6",120,0)
 ;=====================================================================
"RTN","DGPFUT6",121,0)
STOHIST(DGIENS,DGFLD,DGFDA,DGPFERR) ;
"RTN","DGPFUT6",122,0)
 ;   File DBRS data for History record
"RTN","DGPFUT6",123,0)
 D STOHIST^DGPFUT62(DGIENS,.DGFLD,.DGFDA,.DGPFERR)
"RTN","DGPFUT6",124,0)
 Q
"RTN","DGPFUT61")
0^14^B148565711^n/a
"RTN","DGPFUT61",1,0)
DGPFUT61 ;SHRPE/SGM - DBRS# EDIT UTILS ; Jan 19, 2018 16:45
"RTN","DGPFUT61",2,0)
 ;;5.3;Registration;**951**;Aug 13, 1993;Build 135
"RTN","DGPFUT61",3,0)
 ;     Last Edited: SHRPE/sgm - Nov 7, 2018 09:26
"RTN","DGPFUT61",4,0)
 ;
"RTN","DGPFUT61",5,0)
 ; This routine is only invoked via routine DGPFUT6
"RTN","DGPFUT61",6,0)
 ;
"RTN","DGPFUT61",7,0)
 ; ICR#  TYPE  DESCRIPTION
"RTN","DGPFUT61",8,0)
 ;-----  ----  -----------------------------------------
"RTN","DGPFUT61",9,0)
 ; 2050  Sup   MSG^DIALOG
"RTN","DGPFUT61",10,0)
 ; 2053  Sup   ^DIE: CHK, $$FILE, $$UPDATE
"RTN","DGPFUT61",11,0)
 ; 2171  Sup   $$NS^XUAF4
"RTN","DGPFUT61",12,0)
 ;10006  Sup   ^DIC
"RTN","DGPFUT61",13,0)
 ;10013  Sup   ^DIK
"RTN","DGPFUT61",14,0)
 ;10018  Sup   ^DIE
"RTN","DGPFUT61",15,0)
 ;10103  Sup   $$NOW^XLFDT
"RTN","DGPFUT61",16,0)
 ;10112  Sup   $$SITE^VASITE
"RTN","DGPFUT61",17,0)
 ;
"RTN","DGPFUT61",18,0)
 Q
"RTN","DGPFUT61",19,0)
 ;=====================================================================
"RTN","DGPFUT61",20,0)
 ;  $$GETASGN^DGPFA initializes DGPFA()
"RTN","DGPFUT61",21,0)
 ;  Use ^DIC to select DBRS record, may add a new record
"RTN","DGPFUT61",22,0)
 ;  Use ^DIR to edit .01 and/or .02 fields
"RTN","DGPFUT61",23,0)
 ;  When editing done, put file 26.13 entry back to state before edit
"RTN","DGPFUT61",24,0)
 ;  Set up DPGFA() and DGPFAH().  See ^DGPFAA for array formats
"RTN","DGPFUT61",25,0)
 ;
"RTN","DGPFUT61",26,0)
DBRS() ;  called from DGPFLMA3, action = 3,4,5,6
"RTN","DGPFUT61",27,0)
 ;EXTRINSIC FUNCTION:  1:allow DGPFLMA3 to continue
"RTN","DGPFUT61",28,0)
 ;                     0:DGPFLMA3 is to exit and return to LM screen
"RTN","DGPFUT61",29,0)
 ;
"RTN","DGPFUT61",30,0)
 ; Expected local variables from DGPFLMA3:
"RTN","DGPFUT61",31,0)
 ;   DGPFA(), DGPFAH(), DGIEN
"RTN","DGPFUT61",32,0)
 ;
"RTN","DGPFUT61",33,0)
 N I,J,X,Y,ACT,CHG,DBRS,NM,OUT
"RTN","DGPFUT61",34,0)
 ;----- only select actions to be prompted for DBRS enter/edit
"RTN","DGPFUT61",35,0)
 S ACT=+DGPFAH("ACTION") I "^2^3^4^6^"'[(U_ACT_U) Q 1
"RTN","DGPFUT61",36,0)
 S OUT=1
"RTN","DGPFUT61",37,0)
 ;
"RTN","DGPFUT61",38,0)
 ;----- initially set up the PRE and POST arrays to be the same
"RTN","DGPFUT61",39,0)
 D GET(.DBRS,"PRE",DGIEN)
"RTN","DGPFUT61",40,0)
 M DBRS("POST")=DBRS("PRE")
"RTN","DGPFUT61",41,0)
 ;----- inactivate action does not edit dbrs data
"RTN","DGPFUT61",42,0)
 I ACT=3 D EDTINACT Q 1
"RTN","DGPFUT61",43,0)
 ;
"RTN","DGPFUT61",44,0)
 D EDIT I OUT=-2 Q 0
"RTN","DGPFUT61",45,0)
 ;------ If no changes what action should LM take?
"RTN","DGPFUT61",46,0)
 ;       If action="X", exit to LM menu
"RTN","DGPFUT61",47,0)
 ;       If no data changes, no change to DGPFA(), setup DGPFAH()
"RTN","DGPFUT61",48,0)
 I '$$EDITCHG Q $S(ACT=6:0,1:1)
"RTN","DGPFUT61",49,0)
 ;------ Set DGPFA() to be what it will look like if accept changes
"RTN","DGPFUT61",50,0)
 D EDITPFA
"RTN","DGPFUT61",51,0)
 ;------ Build DBRS(0) which sorts data by DBRS#
"RTN","DGPFUT61",52,0)
 ;       DBRS(0,dbrs#,1,field#) = pre-image value
"RTN","DGPFUT61",53,0)
 ;       DBRS(0,dbrs#,2,field#) = post-image value
"RTN","DGPFUT61",54,0)
 D EDITSORT
"RTN","DGPFUT61",55,0)
 ;------ Build DGPFAH()
"RTN","DGPFUT61",56,0)
 D EDITPFAH
"RTN","DGPFUT61",57,0)
 Q 1
"RTN","DGPFUT61",58,0)
 ;
"RTN","DGPFUT61",59,0)
 ;=====================================================================
"RTN","DGPFUT61",60,0)
DBRSVAL(DGN,DGNIEN) ;  validate DBRS#, check for uniqueness
"RTN","DGPFUT61",61,0)
 ; INPUT PARAMETERS:
"RTN","DGPFUT61",62,0)
 ;      DGN - required - DBRS Number
"RTN","DGPFUT61",63,0)
 ;   DGNIEN - optional - <26.131_ien>,<26.13_ien>
"RTN","DGPFUT61",64,0)
 ;                       if passed, 26.13_ien is required
"RTN","DGPFUT61",65,0)
 ;                       26.131_ien can be "", n, or +n
"RTN","DGPFUT61",66,0)
 ;                       26.13_ien required if passed
"RTN","DGPFUT61",67,0)
 ;                       if adding a new DBRS, 26.131_ien=""
"RTN","DGPFUT61",68,0)
 ; EXTRINSIC FUNCTION returns:  p1^p2^p3 where
"RTN","DGPFUT61",69,0)
 ;   p1 = -1:failed   0:passed with conditions  1:DBRS# unique
"RTN","DGPFUT61",70,0)
 ;   p2 = message
"RTN","DGPFUT61",71,0)
 ;        -1^message = failure
"RTN","DGPFUT61",72,0)
 ;         0^message = DGN passed, DGN assigned, but cannot determine
"RTN","DGPFUT61",73,0)
 ;                     if DGNIEN and that assignment are the same or
"RTN","DGPFUT61",74,0)
 ;                     that the DBRS internal record number match
"RTN","DGPFUT61",75,0)
 ;         0^iens    = DGN passed, 26.13 values match, cannot determine
"RTN","DGPFUT61",76,0)
 ;                     if DBRS record number match.  If DBRS#
"RTN","DGPFUT61",77,0)
 ;                     registered then iens=26.131ien,26.13ien
"RTN","DGPFUT61",78,0)
 ;         1[^iens]  = DGN passes all business rules
"RTN","DGPFUT61",79,0)
 ;                     if appropriate pass back the existing IENS for
"RTN","DGPFUT61",80,0)
 ;                     that DBRS#
"RTN","DGPFUT61",81,0)
 ;
"RTN","DGPFUT61",82,0)
 N X,Y,ANS,ASGN,DA,DGA,DGERR,DIERR,DGRET,IEN,MSG
"RTN","DGPFUT61",83,0)
 S MSG(1)="DBRS# not of the proper format"
"RTN","DGPFUT61",84,0)
 S MSG(2)="Invalid IENS value received"
"RTN","DGPFUT61",85,0)
 S MSG(3)="This DBRS# is already assigned to another assignment: #"
"RTN","DGPFUT61",86,0)
 S MSG(4)="This DBRS# already assigned to this flag assignment"
"RTN","DGPFUT61",87,0)
 S MSG(5)="Assignment IEN received does not exist: "
"RTN","DGPFUT61",88,0)
 S DGNIEN=$G(DGNIEN) S:DGNIEN="" DGNIEN=",,"
"RTN","DGPFUT61",89,0)
 I $L(DGNIEN,",")'=3 S ANS="-1^2" G DVOUT
"RTN","DGPFUT61",90,0)
 ;
"RTN","DGPFUT61",91,0)
 ;   check format of DBRS#
"RTN","DGPFUT61",92,0)
 I '$L($G(DGN)) S ANS="-1^1" G DVOUT
"RTN","DGPFUT61",93,0)
 ;
"RTN","DGPFUT61",94,0)
 D CHK^DIE(26.131,.01,,DGN,.DGRET,"DGERR") K DA
"RTN","DGPFUT61",95,0)
 I $D(DIERR)!(DGRET=U) S ANS="-1^1" G DVOUT
"RTN","DGPFUT61",96,0)
 ;
"RTN","DGPFUT61",97,0)
 ;  check for uniqueness of DBRS#
"RTN","DGPFUT61",98,0)
 ;  DA has existing IEN values for DBRS#
"RTN","DGPFUT61",99,0)
 ;  DGA has iens from input DGNIEN
"RTN","DGPFUT61",100,0)
 S (DA,DA(1))=0
"RTN","DGPFUT61",101,0)
 S Y=$O(^DGPF(26.13,"DBRS",DGN,0)) I Y D
"RTN","DGPFUT61",102,0)
 . S DA(1)=Y,DA=$O(^DGPF(26.13,"DBRS",DGN,DA(1),0))
"RTN","DGPFUT61",103,0)
 . Q
"RTN","DGPFUT61",104,0)
 S DGA=$P(DGNIEN,",")
"RTN","DGPFUT61",105,0)
 S DGA(1)=$P(DGNIEN,",",2)
"RTN","DGPFUT61",106,0)
 ;  dbrs# is not already assigned
"RTN","DGPFUT61",107,0)
 I 'DA(1) S ANS=1 G DVOUT
"RTN","DGPFUT61",108,0)
 ;  dbrs# is assigned to some assignment
"RTN","DGPFUT61",109,0)
 ;  iens is adding a new assignment or looking for one
"RTN","DGPFUT61",110,0)
 I $E(DGA(1))="+" S ANS="-1^3^"_DA(1) G DVOUT
"RTN","DGPFUT61",111,0)
 I $E(DGA(1))="?" S ANS="0^3^"_DA(1) G DVOUT
"RTN","DGPFUT61",112,0)
 ;  validate assignment ien passed in
"RTN","DGPFUT61",113,0)
 I +DGA(1)=0 S ANS="0^3^"_DA(1) G DVOUT
"RTN","DGPFUT61",114,0)
 I +DGA(1),'$D(^DGPF(26.13,DGA(1),0)) S ANS="-1^5"_DGA(1) G DVOUT
"RTN","DGPFUT61",115,0)
 I DGA(1)'=DA(1) S ANS="-1^3^"_DA(1) G DVOUT
"RTN","DGPFUT61",116,0)
 ;  evaluate if trying to add DBRS a second time to an assignment
"RTN","DGPFUT61",117,0)
 I 'DA S ANS=1 G DVOUT
"RTN","DGPFUT61",118,0)
 I $E(DGA)="+" S ANS="-1^4" G DVOUT
"RTN","DGPFUT61",119,0)
 I $E(DGA)="?" S ANS="0^4" G DVOUT
"RTN","DGPFUT61",120,0)
 I +DGA=0 S ANS="0^4" G DVOUT
"RTN","DGPFUT61",121,0)
 I DGA'=DA S ANS="-1^4" G DVOUT
"RTN","DGPFUT61",122,0)
 S ANS=1
"RTN","DGPFUT61",123,0)
DVOUT ;
"RTN","DGPFUT61",124,0)
 S X=$P(ANS,U),Y=$P(ANS,U,2) S:Y X=X_U_MSG(Y)_$P(ANS,U,3)
"RTN","DGPFUT61",125,0)
 Q X
"RTN","DGPFUT61",126,0)
 ;
"RTN","DGPFUT61",127,0)
 ;=====================================================================
"RTN","DGPFUT61",128,0)
EIE(DGPFH) ;   Message about EIE and deleting DBRS data
"RTN","DGPFUT61",129,0)
 ;  INPUT: .DGPFH = .DGPFAH, see GETHIST^DGPFAAH for array description
"RTN","DGPFUT61",130,0)
 Q:'$D(DGPFH("DBRS"))
"RTN","DGPFUT61",131,0)
 N I,X,Y,DGT,INC,JINC,NM,SP,TXT
"RTN","DGPFUT61",132,0)
 D TEXT(.TXT,7,1)
"RTN","DGPFUT61",133,0)
 F I=1:1:3 S DGT("DIMSG",I)=TXT(I)
"RTN","DGPFUT61",134,0)
 S $P(SP," ",21)=""
"RTN","DGPFUT61",135,0)
 S INC=3
"RTN","DGPFUT61",136,0)
 S (X,NM)="" F JINC=0:0 S JINC=$O(DGPFH("DBRS",JINC)) Q:'JINC  D
"RTN","DGPFUT61",137,0)
 . S Y=DGPFH("DBRS",JINC),NM=$P(Y,U) Q:$P(Y,U,4)'="D"
"RTN","DGPFUT61",138,0)
 . S X=X_$E(NM_SP,1,20) I $L(X)>60 S INC=INC+1,DGT("DIMSG",INC)=X,X=""
"RTN","DGPFUT61",139,0)
 . Q
"RTN","DGPFUT61",140,0)
 I $L(X) S INC=INC+1,DGT("DIMSG",INC)=X
"RTN","DGPFUT61",141,0)
 S INC=INC+1,DGT("DIMAG",INC)="   "
"RTN","DGPFUT61",142,0)
 F J=4,5 S INC=INC+1,DGT("DIMSG",INC)=TXT(J)
"RTN","DGPFUT61",143,0)
 S INC=INC+1,DGT("DIMSG",INC)="   "
"RTN","DGPFUT61",144,0)
 D MSG^DIALOG("MW",,,,"DGT")
"RTN","DGPFUT61",145,0)
 Q
"RTN","DGPFUT61",146,0)
 ;
"RTN","DGPFUT61",147,0)
 ;=====================================================================
"RTN","DGPFUT61",148,0)
 ;                         PRIVATE SUBROUTINES
"RTN","DGPFUT61",149,0)
 ;=====================================================================
"RTN","DGPFUT61",150,0)
ADD(DGIEN,DGDATA,DEL) ;
"RTN","DGPFUT61",151,0)
 ;   INPUT PARAMETERS
"RTN","DGPFUT61",152,0)
 ;      DGIEN  - required - file 26.13 ien
"RTN","DGPFUT61",153,0)
 ;      DEL    - optional - 1:delete any existing dbrs#
"RTN","DGPFUT61",154,0)
 ;     .DGDATA - optional - DBRS# to be added, do not add dups
"RTN","DGPFUT61",155,0)
 ;        DGDATA(dbrs#)        = iens for dbrs multiple
"RTN","DGPFUT61",156,0)
 ;                               first ien may be a number or +inc
"RTN","DGPFUT61",157,0)
 ;        DGDATA(dbrs#,field#) = internal value
"RTN","DGPFUT61",158,0)
 ;
"RTN","DGPFUT61",159,0)
 N I,J,X,Y,DGERR,DGEXIST,DGFDA,DIERR,INC,NM
"RTN","DGPFUT61",160,0)
 Q:$G(DGIEN)<1  Q:$E(DGIEN)="+"
"RTN","DGPFUT61",161,0)
 Q:'$D(^DGPF(26.13,+DGIEN,0))
"RTN","DGPFUT61",162,0)
 D GETDBRS^DGPFUT6(.DGEXIST,+DGIEN) ;     get any existing iens
"RTN","DGPFUT61",163,0)
 I +$G(DEL) D DEL^DGPFUT6(+DGIEN,26.13) K DGEXIST
"RTN","DGPFUT61",164,0)
 I '$D(DGDATA) Q
"RTN","DGPFUT61",165,0)
 S INC=0
"RTN","DGPFUT61",166,0)
 S NM=0 F I=0:0 S NM=$O(DGDATA(NM)) Q:NM=""  D
"RTN","DGPFUT61",167,0)
 . N IENS
"RTN","DGPFUT61",168,0)
 . I $D(DGEXIST(NM)) Q
"RTN","DGPFUT61",169,0)
 . S INC=INC+1
"RTN","DGPFUT61",170,0)
 . S IENS="+"_INC_","_(+DGIEN)_","
"RTN","DGPFUT61",171,0)
 . S DGFDA(26.131,IENS,.01)=NM
"RTN","DGPFUT61",172,0)
 . S X=$P($G(DGDATA(NM,.02)),U)
"RTN","DGPFUT61",173,0)
 . I $L(X),X'="<no value>" S DGFDA(26.131,IENS,.02)=X
"RTN","DGPFUT61",174,0)
 . S X=$P($G(DGDATA(NM,.03)),U) I +X S DGFDA(26.131,IENS,.03)=X
"RTN","DGPFUT61",175,0)
 . S X=$P($G(DGDATA(NM,.04)),U) I +X S DGFDA(26.131,IENS,.04)=X
"RTN","DGPFUT61",176,0)
 . Q
"RTN","DGPFUT61",177,0)
 I $D(DGFDA) D UPDATE^DIE(,"DGFDA","DGERR")
"RTN","DGPFUT61",178,0)
 Q
"RTN","DGPFUT61",179,0)
 ;
"RTN","DGPFUT61",180,0)
 ;  ===============  FM ENTER/EDIT DBRS DATA  ===============
"RTN","DGPFUT61",181,0)
EDIT ;
"RTN","DGPFUT61",182,0)
 ;  Only certain actions allowed to edit DBRS#
"RTN","DGPFUT61",183,0)
 ;  FOR loop allows for editing more than one DBRS#
"RTN","DGPFUT61",184,0)
 ;  DBRS() reset if appropriate in each iteration through FOR loop
"RTN","DGPFUT61",185,0)
 ;
"RTN","DGPFUT61",186,0)
 N DGPRE
"RTN","DGPFUT61",187,0)
 D EH
"RTN","DGPFUT61",188,0)
 F  D  Q:OUT<0
"RTN","DGPFUT61",189,0)
 . ; DATA := value of DBRS record data after DIC selection
"RTN","DGPFUT61",190,0)
 . ;         DATA(1) = after ^DIC, .01^.02^.03^.04^dbrs#_iens^new_flag
"RTN","DGPFUT61",191,0)
 . ;         DATA(2) = after ^DIR, .01^.02^.03^.04
"RTN","DGPFUT61",192,0)
 . ; OUT := controller of FOR loop and ListManager action
"RTN","DGPFUT61",193,0)
 . ;       -2 := time_out, exit to Listmanager, make no changes
"RTN","DGPFUT61",194,0)
 . ;       -1 := finish editing, continue processing
"RTN","DGPFUT61",195,0)
 . ;        1 := one DBRS# edit session completely successfully
"RTN","DGPFUT61",196,0)
 . ;
"RTN","DGPFUT61",197,0)
 . ;----- select or add a new DBRS record
"RTN","DGPFUT61",198,0)
 . N X,Y,DGDIC,DGDIE,NM
"RTN","DGPFUT61",199,0)
 . S OUT=1
"RTN","DGPFUT61",200,0)
 . D  I OUT<0 Q
"RTN","DGPFUT61",201,0)
 . . N X,DA,DIC,DLAYGO,DTOUT,DUOUT,TMP
"RTN","DGPFUT61",202,0)
 . . S DA(1)=DGIEN
"RTN","DGPFUT61",203,0)
 . . S DIC=$NA(^DGPF(26.13,+DGIEN,2)),DIC=$TR(DIC,")",",")
"RTN","DGPFUT61",204,0)
 . . S DIC(0)="QAELMZn",DLAYGO=26.131
"RTN","DGPFUT61",205,0)
 . . S DIC("DR")=".02""DBRS Other"""
"RTN","DGPFUT61",206,0)
 . . W ! D ^DIC I $D(DTOUT) S OUT=-2 Q
"RTN","DGPFUT61",207,0)
 . . I $D(DUOUT)!(Y<1) S OUT=-1 Q
"RTN","DGPFUT61",208,0)
 . . ;   TMP = .01^.02^.03^.04^iens^new_flag
"RTN","DGPFUT61",209,0)
 . . S TMP=Y(0),$P(TMP,U,5)=(+Y)_","_DGIEN_","_U_$P(Y,U,3)
"RTN","DGPFUT61",210,0)
 . . ;   is new record a duplicate?
"RTN","DGPFUT61",211,0)
 . . I +$P(TMP,U,6),$D(DBRS("POST",$P(TMP,U))) D  S OUT=0
"RTN","DGPFUT61",212,0)
 . . . S OUT=0 W ! D TEXT(,1) W !
"RTN","DGPFUT61",213,0)
 . . . N Y,DA,DIK
"RTN","DGPFUT61",214,0)
 . . . S Y=$P(TMP,U,5),DA=+Y,DA(1)=+$P(Y,",",2),DIK=DIC D ^DIK
"RTN","DGPFUT61",215,0)
 . . . Q
"RTN","DGPFUT61",216,0)
 . . S DGDIC=TMP
"RTN","DGPFUT61",217,0)
 . . Q
"RTN","DGPFUT61",218,0)
 . ;
"RTN","DGPFUT61",219,0)
 . I '$D(DGDIC) S OUT=-1 Q
"RTN","DGPFUT61",220,0)
 . S DGDIE=$P(DGDIC,U,1,4)
"RTN","DGPFUT61",221,0)
 . ;
"RTN","DGPFUT61",222,0)
 . ;-----  if existing record selected, allow editing of .01 field
"RTN","DGPFUT61",223,0)
 . I '$P(DGDIC,U,6),DGDIE'="@" D  I OUT<1 Q
"RTN","DGPFUT61",224,0)
 . . N A,X,Y,DR,DIE,DR,DTOUT,DUOUT,PRE
"RTN","DGPFUT61",225,0)
 . . S A=$P(DGDIC,U,5),DA=+A,DA(1)=+$P(A,",",2)
"RTN","DGPFUT61",226,0)
 . . S PRE=^DGPF(26.13,DA(1),2,DA,0)
"RTN","DGPFUT61",227,0)
 . . S DIE=$NA(^DGPF(26.13,+DGIEN,2)),DIE=$TR(DIE,")",",")
"RTN","DGPFUT61",228,0)
 . . S DR=".01;.02"
"RTN","DGPFUT61",229,0)
 . . W ! D ^DIE
"RTN","DGPFUT61",230,0)
 . . I $D(DTOUT) S OUT=-2 Q
"RTN","DGPFUT61",231,0)
 . . S A=$P(DGDIC,U,5),DA=+A,DA(1)=+$P(A,",",2)
"RTN","DGPFUT61",232,0)
 . . S X=$G(^DGPF(26.13,DA(1),2,DA,0))
"RTN","DGPFUT61",233,0)
 . . I X="" S DGDIE="@" Q
"RTN","DGPFUT61",234,0)
 . . E  S DGDIE=X
"RTN","DGPFUT61",235,0)
 . . I $P(X,U)=$P(PRE,U) Q
"RTN","DGPFUT61",236,0)
 . . I '$D(DBRS("POST",$P(X,U))) Q
"RTN","DGPFUT61",237,0)
 . . W ! D TEXT(,3) W ! S OUT=0
"RTN","DGPFUT61",238,0)
 . . S DR=".01///"_$P(PRE,U)_";.02///"_$P(PRE,U,2) D ^DIE
"RTN","DGPFUT61",239,0)
 . . Q
"RTN","DGPFUT61",240,0)
 . ;
"RTN","DGPFUT61",241,0)
 . ;----- now make changes to DBRS()
"RTN","DGPFUT61",242,0)
 . S NM=$P(DGDIC,U)
"RTN","DGPFUT61",243,0)
 . S NM(1)=$P(DGDIE,U)
"RTN","DGPFUT61",244,0)
 . ;      new record added
"RTN","DGPFUT61",245,0)
 . I +$P(DGDIC,U,6) D  Q
"RTN","DGPFUT61",246,0)
 . . S DBRS("POST",NM)=$P(DGDIC,U,5)
"RTN","DGPFUT61",247,0)
 . . S DBRS("POST",NM,.01)=$P(DGDIC,U,1)
"RTN","DGPFUT61",248,0)
 . . S DBRS("POST",NM,.02)=$P(DGDIC,U,2)
"RTN","DGPFUT61",249,0)
 . . S DBRS("POST",NM,.03)=$P(DGDIC,U,3)
"RTN","DGPFUT61",250,0)
 . . S DBRS("POST",NM,.04)=$P(DGDIC,U,4)
"RTN","DGPFUT61",251,0)
 . . Q
"RTN","DGPFUT61",252,0)
 . ;      existing record to be deleted
"RTN","DGPFUT61",253,0)
 . I NM(1)="@" K DBRS("POST",NM) Q
"RTN","DGPFUT61",254,0)
 . ;      existing record .01 field value changed
"RTN","DGPFUT61",255,0)
 . I NM'=NM(1) D  Q
"RTN","DGPFUT61",256,0)
 . . K DBRS("POST",NM)
"RTN","DGPFUT61",257,0)
 . . S DBRS("POST",NM(1))=$P(DGDIC,U,5)
"RTN","DGPFUT61",258,0)
 . . S DBRS("POST",NM(1),.01)=$P(DGDIE,U,1)
"RTN","DGPFUT61",259,0)
 . . S DBRS("POST",NM(1),.02)=$P(DGDIE,U,2)
"RTN","DGPFUT61",260,0)
 . . S DBRS("POST",NM(1),.03)=$P(DGDIE,U,3)
"RTN","DGPFUT61",261,0)
 . . S DBRS("POST",NM(1),.04)=$P(DGDIE,U,4)
"RTN","DGPFUT61",262,0)
 . . Q
"RTN","DGPFUT61",263,0)
 . ;   dbrs# unchanged, OTHER may or may not have changed
"RTN","DGPFUT61",264,0)
 . S DBRS("POST",NM(1),.02)=$P(DGDIE,U,2)
"RTN","DGPFUT61",265,0)
 . Q
"RTN","DGPFUT61",266,0)
 ;    Reset 26.13 file DBRS data to pre-edit state
"RTN","DGPFUT61",267,0)
 M DGPRE=DBRS("PRE") D ADD(DGIEN,.DGPRE,1)
"RTN","DGPFUT61",268,0)
 Q
"RTN","DGPFUT61",269,0)
 ;
"RTN","DGPFUT61",270,0)
EDITCHG() ;----- check to see if any data changed at all
"RTN","DGPFUT61",271,0)
 N J,X,CHG,INC,NM
"RTN","DGPFUT61",272,0)
 S CHG=0
"RTN","DGPFUT61",273,0)
 S NM=0 F J=0:0 S NM=$O(DBRS("PRE",NM)) Q:NM=""  D  Q:CHG
"RTN","DGPFUT61",274,0)
 . I DBRS("PRE",NM,.01)'=$G(DBRS("POST",NM,.01)) S CHG=1
"RTN","DGPFUT61",275,0)
 . I DBRS("PRE",NM,.02)'=$G(DBRS("POST",NM,.02)) S CHG=1
"RTN","DGPFUT61",276,0)
 . Q
"RTN","DGPFUT61",277,0)
 I 'CHG S NM=0 F J=0:0 S NM=$O(DBRS("POST",NM)) Q:NM=""  D  Q:CHG
"RTN","DGPFUT61",278,0)
 . I DBRS("POST",NM,.01)'=$G(DBRS("PRE",NM,.01)) S CHG=1
"RTN","DGPFUT61",279,0)
 . I DBRS("POST",NM,.02)'=$G(DBRS("PRE",NM,.02)) S CHG=1
"RTN","DGPFUT61",280,0)
 . Q
"RTN","DGPFUT61",281,0)
 I 'CHG D EDTINACT
"RTN","DGPFUT61",282,0)
 Q CHG
"RTN","DGPFUT61",283,0)
 ;
"RTN","DGPFUT61",284,0)
EDTINACT ;  set up DGPFAH() if no change
"RTN","DGPFUT61",285,0)
 N J,X,INC,NM
"RTN","DGPFUT61",286,0)
 S INC=0
"RTN","DGPFUT61",287,0)
 S NM=0 F J=0:0 S NM=$O(DBRS("PRE",NM)) Q:NM=""  D
"RTN","DGPFUT61",288,0)
 . S X=DBRS("PRE",NM,.01)_U_DBRS("PRE",NM,.02)_U_DBRS("PRE",NM,.03)
"RTN","DGPFUT61",289,0)
 . S X=X_U_"N"_U_DBRS("PRE",NM,.04)
"RTN","DGPFUT61",290,0)
 . S INC=INC+1,DGPFAH("DBRS",INC)=X
"RTN","DGPFUT61",291,0)
 . Q
"RTN","DGPFUT61",292,0)
 Q
"RTN","DGPFUT61",293,0)
 ;
"RTN","DGPFUT61",294,0)
EDITPFA ;----- set DGPFA() to values if changes accepted
"RTN","DGPFUT61",295,0)
 N J,X,NM
"RTN","DGPFUT61",296,0)
 F X="DBRS#","DBRS OTHER","DBRS DATE","DBRS SITE" K DGPFA(X)
"RTN","DGPFUT61",297,0)
 S (J,NM)=0 F J=0:0 S NM=$O(DBRS("POST",NM)) Q:NM=""  D
"RTN","DGPFUT61",298,0)
 . S J=J+1
"RTN","DGPFUT61",299,0)
 . S DGPFA("DBRS#",J)=DBRS("POST",NM,.01)_U_$$EXT(NM,.01)
"RTN","DGPFUT61",300,0)
 . S DGPFA("DBRS OTHER",J)=DBRS("POST",NM,.02)_U_$$EXT(NM,.02)
"RTN","DGPFUT61",301,0)
 . S DGPFA("DBRS DATE",J)=DBRS("POST",NM,.03)_U_$$EXT(NM,.03)
"RTN","DGPFUT61",302,0)
 . S DGPFA("DBRS SITE",J)=DBRS("POST",NM,.04)_U_$$EXT(NM,.04)
"RTN","DGPFUT61",303,0)
 . Q
"RTN","DGPFUT61",304,0)
 Q
"RTN","DGPFUT61",305,0)
 ;
"RTN","DGPFUT61",306,0)
EDITPFAH ;----- Create DGPFAH()
"RTN","DGPFUT61",307,0)
 N I,J,X,Y,INC,NM
"RTN","DGPFUT61",308,0)
 S (INC,NM)=0 F I=0:0 S NM=$O(DBRS(0,NM)) Q:NM=""  D
"RTN","DGPFUT61",309,0)
 . N PRE,POST
"RTN","DGPFUT61",310,0)
 . S PRE="" I $D(DBRS(0,NM,1)) D
"RTN","DGPFUT61",311,0)
 . . S $P(PRE,U,1)=$G(DBRS(0,NM,1,.01))
"RTN","DGPFUT61",312,0)
 . . S $P(PRE,U,2)=$G(DBRS(0,NM,1,.02))
"RTN","DGPFUT61",313,0)
 . . S $P(PRE,U,3)=$G(DBRS(0,NM,1,.03))
"RTN","DGPFUT61",314,0)
 . . S $P(PRE,U,5)=$G(DBRS(0,NM,1,.04))
"RTN","DGPFUT61",315,0)
 . . Q
"RTN","DGPFUT61",316,0)
 . S POST="" I $D(DBRS(0,NM,2)) D
"RTN","DGPFUT61",317,0)
 . . S $P(POST,U,1)=$G(DBRS(0,NM,2,.01))
"RTN","DGPFUT61",318,0)
 . . S $P(POST,U,2)=$G(DBRS(0,NM,2,.02))
"RTN","DGPFUT61",319,0)
 . . S $P(POST,U,3)=$G(DBRS(0,NM,2,.03))
"RTN","DGPFUT61",320,0)
 . . S $P(POST,U,5)=$G(DBRS(0,NM,2,.04))
"RTN","DGPFUT61",321,0)
 . . Q
"RTN","DGPFUT61",322,0)
 . S INC=INC+1
"RTN","DGPFUT61",323,0)
 . ;----- no changes to DBRS
"RTN","DGPFUT61",324,0)
 . I PRE=POST S:PRE'="" $P(PRE,U,4)="N",DGPFAH("DBRS",INC)=PRE Q
"RTN","DGPFUT61",325,0)
 . ;----- POST="", DBRS deleted
"RTN","DGPFUT61",326,0)
 . I POST="" S $P(PRE,U,4)="D",DGPFAH("DBRS",INC)=PRE Q
"RTN","DGPFUT61",327,0)
 . ;----- PRE="", DBRS added
"RTN","DGPFUT61",328,0)
 . I PRE="" S $P(POST,U,4)="A",DGPFAH("DBRS",INC)=POST Q
"RTN","DGPFUT61",329,0)
 . ;----- DBRS record edited
"RTN","DGPFUT61",330,0)
 . ;      If date/site exist, may not be changed
"RTN","DGPFUT61",331,0)
 . S $P(POST,U,4)="E"
"RTN","DGPFUT61",332,0)
 . S X=$P(PRE,U,3) I X>0,$P(POST,U,3)'=X S $P(POST,U,3)=X
"RTN","DGPFUT61",333,0)
 . S X=$P(PRE,U,5) I X>0,$P(POST,U,5)'=X S $P(POST,U,5)=X
"RTN","DGPFUT61",334,0)
 . S DGPFAH("DBRS",INC)=POST
"RTN","DGPFUT61",335,0)
 . Q
"RTN","DGPFUT61",336,0)
 Q
"RTN","DGPFUT61",337,0)
 ;
"RTN","DGPFUT61",338,0)
EDITSORT ;----- Sort the DBRS() by DBRS#
"RTN","DGPFUT61",339,0)
 N I,NM
"RTN","DGPFUT61",340,0)
 S NM=0
"RTN","DGPFUT61",341,0)
 F I=0:0 S NM=$O(DBRS("PRE",NM)) Q:NM=""  M DBRS(0,NM,1)=DBRS("PRE",NM)
"RTN","DGPFUT61",342,0)
 S NM=0
"RTN","DGPFUT61",343,0)
 F I=0:0  S NM=$O(DBRS("POST",NM)) Q:NM=""  M DBRS(0,NM,2)=DBRS("POST",NM)
"RTN","DGPFUT61",344,0)
 Q
"RTN","DGPFUT61",345,0)
 ;
"RTN","DGPFUT61",346,0)
EH ;
"RTN","DGPFUT61",347,0)
 ;;You may add, edit, or delete a DBRS entry for this assignment.
"RTN","DGPFUT61",348,0)
 ;;To delete an entry, use the '@' sign after '//'.
"RTN","DGPFUT61",349,0)
 ;;
"RTN","DGPFUT61",350,0)
 N I,X,Y
"RTN","DGPFUT61",351,0)
 W !
"RTN","DGPFUT61",352,0)
 F I=1:1 S X=$P($T(EH+I),";;",2) Q:X=""  W !,X
"RTN","DGPFUT61",353,0)
 ; S X=$$ANSWER^DGPFUT("Press any key to continue",,"E")
"RTN","DGPFUT61",354,0)
 Q
"RTN","DGPFUT61",355,0)
 ;
"RTN","DGPFUT61",356,0)
EXT(DBS,FLD) ;  get external value
"RTN","DGPFUT61",357,0)
 ;   DBS = DBRS#
"RTN","DGPFUT61",358,0)
 ;   FLD = field number
"RTN","DGPFUT61",359,0)
 N X,Y
"RTN","DGPFUT61",360,0)
 S Y="",X=$G(DBRS("POST",NM,FLD))
"RTN","DGPFUT61",361,0)
 I FLD=.01 S Y=X
"RTN","DGPFUT61",362,0)
 I FLD=.02 S Y=X S:X="" Y="<no value>"
"RTN","DGPFUT61",363,0)
 I FLD=.03,X>0 S Y=$$FMTE^XLFDT(X,"5Z")
"RTN","DGPFUT61",364,0)
 I FLD=.04,X>0 S Y=$P($$NS^XUAF4(X),U)
"RTN","DGPFUT61",365,0)
 Q Y
"RTN","DGPFUT61",366,0)
 ;
"RTN","DGPFUT61",367,0)
GET(DBRS,NODE,IEN) ;
"RTN","DGPFUT61",368,0)
 ;   get dbrs records from 26.13
"RTN","DGPFUT61",369,0)
 ;   only return DBRS() with internal FM form of the data
"RTN","DGPFUT61",370,0)
 ;  .DBRS - return array
"RTN","DGPFUT61",371,0)
 ;   NODE = PRE or POST
"RTN","DGPFUT61",372,0)
 ;    IEN = file 26.13 ien
"RTN","DGPFUT61",373,0)
 N I,DGRET,NM
"RTN","DGPFUT61",374,0)
 Q:$G(IEN)<1
"RTN","DGPFUT61",375,0)
 D GETDBRS^DGPFUT6(.DGRET,IEN)
"RTN","DGPFUT61",376,0)
 ;   see GETDBRS^DGPRUT62 for description of .DGRET
"RTN","DGPFUT61",377,0)
 S DBRS(NODE)=0
"RTN","DGPFUT61",378,0)
 S (I,NM)=0 F  S NM=$O(DGRET(NM)) Q:NM=""  D
"RTN","DGPFUT61",379,0)
 . S DBRS(NODE)=1+$G(DBRS(NODE))
"RTN","DGPFUT61",380,0)
 . S DBRS(NODE,NM)=DGRET(NM) ;   iens
"RTN","DGPFUT61",381,0)
 . S DBRS(NODE,NM,.01)=NM
"RTN","DGPFUT61",382,0)
 . S DBRS(NODE,NM,.02)=$P(DGRET(NM,"OTHER"),U)
"RTN","DGPFUT61",383,0)
 . S DBRS(NODE,NM,.03)=$P(DGRET(NM,"DATE"),U)
"RTN","DGPFUT61",384,0)
 . S DBRS(NODE,NM,.04)=$P(DGRET(NM,"SITE"),U)
"RTN","DGPFUT61",385,0)
 . Q
"RTN","DGPFUT61",386,0)
 Q
"RTN","DGPFUT61",387,0)
 ;
"RTN","DGPFUT61",388,0)
NOW() N I,X,Y,Z Q $E($$NOW^XLFDT,1,12)
"RTN","DGPFUT61",389,0)
 ;
"RTN","DGPFUT61",390,0)
TEXT(TXT,ST,NOWR) ;
"RTN","DGPFUT61",391,0)
 N I,J,X S J=0
"RTN","DGPFUT61",392,0)
 F I=ST:1 S X=$P($T(T+I),";",3,9) Q:X="[end]"  S J=J+1,TXT(J)="   "_X
"RTN","DGPFUT61",393,0)
 I '$G(NOWR) F I=1:1 Q:'$D(TXT(I))  W !,TXT(I)
"RTN","DGPFUT61",394,0)
 Q
"RTN","DGPFUT61",395,0)
T ;
"RTN","DGPFUT61",396,0)
 ;;This DBRS# Number is already associated with this assignment.
"RTN","DGPFUT61",397,0)
 ;;[end]
"RTN","DGPFUT61",398,0)
 ;;You have changed the name of an existing DBRS Number to be the same
"RTN","DGPFUT61",399,0)
 ;;as an existing DBRS entry for this flag assignment.  This is not
"RTN","DGPFUT61",400,0)
 ;;allowed.
"RTN","DGPFUT61",401,0)
 ;;[end]
"RTN","DGPFUT61",402,0)
 ;;   
"RTN","DGPFUT61",403,0)
 ;;You have marked this assignment as Entered In Error
"RTN","DGPFUT61",404,0)
 ;;All of the following DBRS Numbers will be removed from this assignment:
"RTN","DGPFUT61",405,0)
 ;;DO NOT file the assignment if you do not wish these DBRS Numbers
"RTN","DGPFUT61",406,0)
 ;;removed from this assignment.
"RTN","DGPFUT61",407,0)
 ;;[end]
"RTN","DGPFUT62")
0^15^B53001893^n/a
"RTN","DGPFUT62",1,0)
DGPFUT62 ;SHRPE/SGM - PRF DBRS FILE/GET/SORT ; Mar 1, 2018 17:20
"RTN","DGPFUT62",2,0)
 ;;5.3;Registration;**951**;Aug 13, 1993;Build 135
"RTN","DGPFUT62",3,0)
 ;     Last Edited: SHRPE/SGM - Oct 08, 2018 11:08
"RTN","DGPFUT62",4,0)
 ;
"RTN","DGPFUT62",5,0)
 ; ^DGPFUT6 is the only component to directly reference this routine
"RTN","DGPFUT62",6,0)
 ;
"RTN","DGPFUT62",7,0)
 ; ICR#  TYPE  DESCRIPTION
"RTN","DGPFUT62",8,0)
 ;-----  ----  -----------------------------------------
"RTN","DGPFUT62",9,0)
 ; 2056  Sup   $$GET1^DIQ, GETS^DIQ
"RTN","DGPFUT62",10,0)
 ; 2051  Sup   $$FIND1^DIC
"RTN","DGPFUT62",11,0)
 ; 2053  Sup   ^DIE: FILE, UPDATE
"RTN","DGPFUT62",12,0)
 ;10013  Sup   ^DIK
"RTN","DGPFUT62",13,0)
 ;10112  Sup   $$SITE^VASITE
"RTN","DGPFUT62",14,0)
 ;
"RTN","DGPFUT62",15,0)
 ;=====================================================================
"RTN","DGPFUT62",16,0)
AASGN(DGIENS,DGPFIN,DGFDA,DGPFUV,DGPFERR) ;
"RTN","DGPFUT62",17,0)
 ;    Called from STOASGN^DGPFAA
"RTN","DGPFUT62",18,0)
 ;BUSINESS RULES:
"RTN","DGPFUT62",19,0)
 ; 1. Create FDA(), do not change any data in existing files
"RTN","DGPFUT62",20,0)
 ;      Calling program will call FILE^DIE or UPDATE^DIE
"RTN","DGPFUT62",21,0)
 ; 2. Calling program may add DGPFA("ACTION") if it has an associated
"RTN","DGPFUT62",22,0)
 ;      History record.
"RTN","DGPFUT62",23,0)
 ; 3. If ACTION is 3 (Inactive) no DBRS data edited
"RTN","DGPFUT62",24,0)
 ; 4. If ACTION is 5 (EIE), delete all existing DBRS data, add no new
"RTN","DGPFUT62",25,0)
 ;      DBRS data
"RTN","DGPFUT62",26,0)
 ; 5. If ACTION is 7 (Refresh), delete all existing DBRS before adding
"RTN","DGPFUT62",27,0)
 ; 6. Updates called from processing HL7 message
"RTN","DGPFUT62",28,0)
 ;      May set DGPFA("DBRS ACTION") = U:add/update  D:delete
"RTN","DGPFUT62",29,0)
 ;      Applies to that one DBRS record only
"RTN","DGPFUT62",30,0)
 ; 7. DBRS DATE and SITE fields may not be overwritten except for
"RTN","DGPFUT62",31,0)
 ;      Refresh
"RTN","DGPFUT62",32,0)
 ; 8. Only REFRESH action is authorized to overwrite an existing field
"RTN","DGPFUT62",33,0)
 ;      values for DATE and CREATE SITE
"RTN","DGPFUT62",34,0)
 ;
"RTN","DGPFUT62",35,0)
 ;INPUT PARAMETERS:
"RTN","DGPFUT62",36,0)
 ;   DGIENS - 26.13 iens, may be +N, or N,
"RTN","DGPFUT62",37,0)
 ;  .DGPFIN - DGPFA() passed by reference - see DGPFAA for details
"RTN","DGPFUT62",38,0)
 ;  .DGFDA  - FDA() array to be populated, may have existing values
"RTN","DGPFUT62",39,0)
 ;   DGPFUV - optional - default to "", consists of single character
"RTN","DGPFUT62",40,0)
 ;           ="D" delete all existing DBRS records before adding others
"RTN","DGPFUT62",41,0)
 ;           ="d" delete all existing DBRS record, quit, do not
"RTN","DGPFUT62",42,0)
 ;                  continue processing in this module
"RTN","DGPFUT62",43,0)
 ;           =""  only act upon DBRS# indicated in DGPFA()
"RTN","DGPFUT62",44,0)
 ;
"RTN","DGPFUT62",45,0)
 ;RETURN PARAMETERS:
"RTN","DGPFUT62",46,0)
 ;   .DGFDA - FDA() array to be populated if appropriate
"RTN","DGPFUT62",47,0)
 ; .DGPFERR - error message array
"RTN","DGPFUT62",48,0)
 ;            $D(DGPFERR) - fail, calling program does not continue
"RTN","DGPFUT62",49,0)
 ;           '$D(DGPFERR) - calling program continues
"RTN","DGPFUT62",50,0)
 ;
"RTN","DGPFUT62",51,0)
 N I,J,X,ACT,FAC,DBRS,DGDBRS,DIEN,INC,NOW,SITE
"RTN","DGPFUT62",52,0)
 ;   initialize local variables
"RTN","DGPFUT62",53,0)
 I '$L($G(DGIENS)) Q
"RTN","DGPFUT62",54,0)
 S:$E(DGIENS,$L(DGIENS))'="," DGIENS=DGIENS_","
"RTN","DGPFUT62",55,0)
 S NOW=+$E($$NOW^XLFDT,1,12)
"RTN","DGPFUT62",56,0)
 S FAC=+$$SITE^VASITE
"RTN","DGPFUT62",57,0)
 S ACT=+$G(DGPFIN("ACTION"))
"RTN","DGPFUT62",58,0)
 S DGPFUV=$$UV^DGPFAA Q:DGPFUV=-1
"RTN","DGPFUT62",59,0)
 I ACT=5,DGPFUV'="d" S DGPFUV="d"
"RTN","DGPFUT62",60,0)
 I ACT=3 Q  ;  no editing of DBRS data for inactivate
"RTN","DGPFUT62",61,0)
 ;             do not set up DGFDA()
"RTN","DGPFUT62",62,0)
 ;
"RTN","DGPFUT62",63,0)
 ;  see GETDBRS for array description
"RTN","DGPFUT62",64,0)
 ;      DBRS(dbrs#,1)     = 26.131_iens
"RTN","DGPFUT62",65,0)
 ;      DBRS(dbrs#,1,sub) = pre_edit_image
"RTN","DGPFUT62",66,0)
 ;      DBRS(dbrs#,2)     = < does not exist >
"RTN","DGPFUT62",67,0)
 ;      DBRS(dbrs#,2,sub) = post_edit_image
"RTN","DGPFUT62",68,0)
 ;
"RTN","DGPFUT62",69,0)
 ;  get current DBRS records on file (PRE-image)
"RTN","DGPFUT62",70,0)
 I DGIENS'["+" D
"RTN","DGPFUT62",71,0)
 . N X,ARR
"RTN","DGPFUT62",72,0)
 . D GETDBRS(.ARR,DGIENS)
"RTN","DGPFUT62",73,0)
 . I $G(ARR(0))>0 S X=0 F  S X=$O(ARR(X)) Q:X=""  D
"RTN","DGPFUT62",74,0)
 . . S DBRS(X,1)=ARR(X) ;    26.131 iens value
"RTN","DGPFUT62",75,0)
 . . S DBRS(X,1,"DBRS#")=X
"RTN","DGPFUT62",76,0)
 . . S DBRS(X,1,"OTHER")=$P($G(ARR(X,"OTHER")),U)
"RTN","DGPFUT62",77,0)
 . . S DBRS(X,1,"DATE")=$P($G(ARR(X,"DATE")),U)
"RTN","DGPFUT62",78,0)
 . . S DBRS(X,1,"SITE")=$P($G(ARR(X,"SITE")),U)
"RTN","DGPFUT62",79,0)
 . . Q
"RTN","DGPFUT62",80,0)
 . Q
"RTN","DGPFUT62",81,0)
 ;
"RTN","DGPFUT62",82,0)
 ;  moved INPUT data to DBRS(dbrs#,2) [POST-image]
"RTN","DGPFUT62",83,0)
 S I=0 F J=0:0 S I=$O(DGPFIN("DBRS#",I)) Q:'I  D
"RTN","DGPFUT62",84,0)
 . N X,Y
"RTN","DGPFUT62",85,0)
 . S DBRS=$P(DGPFIN("DBRS#",I),U)
"RTN","DGPFUT62",86,0)
 . S DBRS(DBRS,2,"DBRS#")=DBRS
"RTN","DGPFUT62",87,0)
 . S Y=$P(DGPFIN("DBRS OTHER",I),U) S:Y="<no value>" Y=""
"RTN","DGPFUT62",88,0)
 . S DBRS(DBRS,2,"OTHER")=Y
"RTN","DGPFUT62",89,0)
 . S Y=$P(DGPFIN("DBRS DATE",I),U)
"RTN","DGPFUT62",90,0)
 . S DBRS(DBRS,2,"DATE")=Y
"RTN","DGPFUT62",91,0)
 . S Y=$P(DGPFIN("DBRS SITE",I),U)
"RTN","DGPFUT62",92,0)
 . S DBRS(DBRS,2,"SITE")=Y
"RTN","DGPFUT62",93,0)
 . ;   DBRS ACTION only comes from HL7 message processing
"RTN","DGPFUT62",94,0)
 . ;   Set ACT to -1 if not coming from HL7 processing
"RTN","DGPFUT62",95,0)
 . S X=$G(DGPFIN("DBRS ACTION",I),-1)
"RTN","DGPFUT62",96,0)
 . S DBRS(DBRS,2,"ACT")=$P(X,U)
"RTN","DGPFUT62",97,0)
 . Q
"RTN","DGPFUT62",98,0)
 ;
"RTN","DGPFUT62",99,0)
 ;  set up FDA()
"RTN","DGPFUT62",100,0)
 ; 
"RTN","DGPFUT62",101,0)
 ;  if DGPFUV="d" or ="D" then set all existing DBRS records to be
"RTN","DGPFUT62",102,0)
 ;     deleted.  Edits may override delete
"RTN","DGPFUT62",103,0)
 ;  if DGPFUV="" then called from PRF HL processor, only act upon
"RTN","DGPFUT62",104,0)
 ;     specific DBRS# listed in DGPFA()
"RTN","DGPFUT62",105,0)
 ;
"RTN","DGPFUT62",106,0)
 I DGPFUV="D"!(DGPFUV="d") D
"RTN","DGPFUT62",107,0)
 . N X,Y,IENS,NM
"RTN","DGPFUT62",108,0)
 . S NM="" F  S NM=$O(DBRS(NM)) Q:NM=""  I $D(DBRS(NM,1)) D
"RTN","DGPFUT62",109,0)
 . . S IENS=DBRS(NM,1),DGFDA(26.131,IENS,.01)="@"
"RTN","DGPFUT62",110,0)
 . . Q
"RTN","DGPFUT62",111,0)
 . Q
"RTN","DGPFUT62",112,0)
 I DGPFUV="d" Q
"RTN","DGPFUT62",113,0)
 ;
"RTN","DGPFUT62",114,0)
 S INC=10 ;    incrementor used for add new DBRS record
"RTN","DGPFUT62",115,0)
 S DBRS=0 F J=0:0 S DBRS=$O(DBRS(DBRS)) Q:DBRS=""  D
"RTN","DGPFUT62",116,0)
 . N ACT,HLACT,DIEN,IENS
"RTN","DGPFUT62",117,0)
 . S IENS=$G(DBRS(DBRS,1))
"RTN","DGPFUT62",118,0)
 . S HLACT=$G(DBRS(DBRS,2,"ACT"))
"RTN","DGPFUT62",119,0)
 . S ACT=+$G(DGPFIN("ACTION"))
"RTN","DGPFUT62",120,0)
 . ;
"RTN","DGPFUT62",121,0)
 . ;  PRE exists, POST does not;  record deleted if DGPFUV="D"
"RTN","DGPFUT62",122,0)
 . I $D(DBRS(DBRS,1)),'$D(DBRS(DBRS,2)) Q
"RTN","DGPFUT62",123,0)
 . ;
"RTN","DGPFUT62",124,0)
 . ;  POST exists, PRE does not, adding a new record
"RTN","DGPFUT62",125,0)
 . ;     Post DBRS action may be Delete
"RTN","DGPFUT62",126,0)
 . I $D(DBRS(DBRS,2)),'$D(DBRS(DBRS,1)) D  Q
"RTN","DGPFUT62",127,0)
 . . I HLACT="D" Q
"RTN","DGPFUT62",128,0)
 . . S INC=INC+1,DIEN="+"_INC_","_DGIENS
"RTN","DGPFUT62",129,0)
 . . S DGFDA(26.131,DIEN,.01)=DBRS
"RTN","DGPFUT62",130,0)
 . . S X=DBRS(DBRS,2,"OTHER") S:$L(X) DGFDA(26.131,DIEN,.02)=X
"RTN","DGPFUT62",131,0)
 . . S X=DBRS(DBRS,2,"DATE") S:+X DGFDA(26.131,DIEN,.03)=X
"RTN","DGPFUT62",132,0)
 . . S X=DBRS(DBRS,2,"SITE") S:+X DGFDA(26.131,DIEN,.04)=X
"RTN","DGPFUT62",133,0)
 . . Q
"RTN","DGPFUT62",134,0)
 . ;
"RTN","DGPFUT62",135,0)
 . ;  Both PRE and POST exists, update existing record
"RTN","DGPFUT62",136,0)
 . ;    conditional update of fields .03,.04
"RTN","DGPFUT62",137,0)
 . I HLACT="D" S DGFDA(26.131,IENS,.01)="@" Q
"RTN","DGPFUT62",138,0)
 . K DGFDA(26.131,IENS,.01)
"RTN","DGPFUT62",139,0)
 . S X=$G(DBRS(DBRS,1,"OTHER")),Y=$G(DBRS(DBRS,2,"OTHER")) D
"RTN","DGPFUT62",140,0)
 . . I X'=Y S DGFDA(26.131,IENS,.02)=Y
"RTN","DGPFUT62",141,0)
 . . Q
"RTN","DGPFUT62",142,0)
 . S X=$G(DBRS(DBRS,1,"DATE")),Y=$G(DBRS(DBRS,2,"DATE")) D
"RTN","DGPFUT62",143,0)
 . . I $S((ACT=7)!(ACT=8):1,+X:0,1:+Y) S DGFDA(26.131,IENS,.03)=Y
"RTN","DGPFUT62",144,0)
 . . Q
"RTN","DGPFUT62",145,0)
 . S X=$G(DBRS(DBRS,1,"SITE")),Y=$G(DBRS(DBRS,2,"SITE")) D
"RTN","DGPFUT62",146,0)
 . . I $S((ACT=7)!(ACT=8):1,+X:0,1:+Y) S DGFDA(26.131,IENS,.04)=Y
"RTN","DGPFUT62",147,0)
 . . Q
"RTN","DGPFUT62",148,0)
 . Q
"RTN","DGPFUT62",149,0)
 Q
"RTN","DGPFUT62",150,0)
 ;
"RTN","DGPFUT62",151,0)
 ;=====================================================================
"RTN","DGPFUT62",152,0)
DEL(DGXIEN,DGFILE) ;
"RTN","DGPFUT62",153,0)
 ;   delete all DBRS records for a flag assignment or history record
"RTN","DGPFUT62",154,0)
 ;   QA on input values done in DGPFUT6
"RTN","DGPFUT62",155,0)
 Q:'$G(DGXIEN)  Q:'$G(DGFILE)
"RTN","DGPFUT62",156,0)
 S DGXIEN=+DGXIEN
"RTN","DGPFUT62",157,0)
 Q:'$O(^DGPF(DGFILE,DGXIEN,2,0))
"RTN","DGPFUT62",158,0)
 Q:"^26.13^26.14^"'[(U_DGFILE_U)
"RTN","DGPFUT62",159,0)
 N X,Y,DA,DGDBRSE,DIK
"RTN","DGPFUT62",160,0)
 S DGDBRSE=1 ;  not need but cya, DEL node on ^DD(26.131,.01)
"RTN","DGPFUT62",161,0)
 S DIK="^DGPF("_DGFILE_","_DGXIEN_",2," S DA(1)=DGIEN
"RTN","DGPFUT62",162,0)
 S DA=0 F  S DA=$O(^DGPF(DGFILE,DGXIEN,2,DA)) Q:'DA  D ^DIK
"RTN","DGPFUT62",163,0)
 Q
"RTN","DGPFUT62",164,0)
 ;
"RTN","DGPFUT62",165,0)
 ;=====================================================================
"RTN","DGPFUT62",166,0)
GETDBRS(DGRET,DGAIEN) ;
"RTN","DGPFUT62",167,0)
 ;Return all DBRS data associated with a CAT I BEHAVIORAL assignment
"RTN","DGPFUT62",168,0)
 ;INPUT PARAMETER:  DGPFIEN - req - file_26.13_ien
"RTN","DGPFUT62",169,0)
 ;RETURN VALUES:
"RTN","DGPFUT62",170,0)
 ;  .DGRET(0)             = total number of DBRS records [0,1,2,...]
"RTN","DGPFUT62",171,0)
 ;  .DGRET(dbrs#)         = <26.131_ien>,<26.13_ien>, [iens]
"RTN","DGPFUT62",172,0)
 ;        (dbrs#,"DBRS#") = internal^external  [#.01]
"RTN","DGPFUT62",173,0)
 ;        (dbrs#,"OTHER") = internal^external  [#.02]
"RTN","DGPFUT62",174,0)
 ;        (dbrs#,"DATE")  = internal^external  [#.03]
"RTN","DGPFUT62",175,0)
 ;        (dbrs#,"SITE")  = internal^external  [#.04]
"RTN","DGPFUT62",176,0)
 ;
"RTN","DGPFUT62",177,0)
 N X,Y,DGARR,DGIEN,DGERR,DIERR,IENS
"RTN","DGPFUT62",178,0)
 S DGRET(0)=0
"RTN","DGPFUT62",179,0)
 S DGAIEN=$G(DGAIEN) Q:$E(DGAIEN)="+"  Q:'DGAIEN
"RTN","DGPFUT62",180,0)
 ;
"RTN","DGPFUT62",181,0)
 S DGIEN=(+DGAIEN)_","
"RTN","DGPFUT62",182,0)
 D GETS^DIQ(26.13,DGIEN,".02;2*","IE","DGARR","DGERR")
"RTN","DGPFUT62",183,0)
 Q:$D(DIERR)
"RTN","DGPFUT62",184,0)
 Q:DGARR(26.13,DGIEN,.02,"I")'[26.15
"RTN","DGPFUT62",185,0)
 Q:DGARR(26.13,DGIEN,.02,"E")'="BEHAVIORAL"
"RTN","DGPFUT62",186,0)
 S IENS=0 F  S IENS=$O(DGARR(26.131,IENS)) Q:'IENS  D
"RTN","DGPFUT62",187,0)
 . N DBRS,TMP M TMP=DGARR(26.131,IENS)
"RTN","DGPFUT62",188,0)
 . S DBRS=TMP(.01,"E")
"RTN","DGPFUT62",189,0)
 . S DGRET(0)=1+DGRET(0)
"RTN","DGPFUT62",190,0)
 . S DGRET(DBRS)=IENS
"RTN","DGPFUT62",191,0)
 . S DGRET(DBRS,"DBRS#")=TMP(.01,"I")_U_TMP(.01,"E")
"RTN","DGPFUT62",192,0)
 . S DGRET(DBRS,"OTHER")=TMP(.02,"I")_U_TMP(.02,"E")
"RTN","DGPFUT62",193,0)
 . S DGRET(DBRS,"DATE")=TMP(.03,"I")_U_TMP(.03,"E")
"RTN","DGPFUT62",194,0)
 . S DGRET(DBRS,"SITE")=TMP(.04,"I")_U_TMP(.04,"E")
"RTN","DGPFUT62",195,0)
 . Q
"RTN","DGPFUT62",196,0)
 Q
"RTN","DGPFUT62",197,0)
 ;
"RTN","DGPFUT62",198,0)
 ;=====================================================================
"RTN","DGPFUT62",199,0)
GETDBRSH(DGRET,DGHIEN) ;
"RTN","DGPFUT62",200,0)
 ;   Get DBRS data for a History record
"RTN","DGPFUT62",201,0)
 ;INPUT PARAMETERS:  DGPFIEN - req - ien to file 26.14
"RTN","DGPFUT62",202,0)
 ;RETURN VALUES:
"RTN","DGPFUT62",203,0)
 ;  .DGRET(0)             = total number of DBRS records
"RTN","DGPFUT62",204,0)
 ;  .DGRET(dbrs#)         = <26.142_ien>,<26.14_ien>, [iens]
"RTN","DGPFUT62",205,0)
 ;        (dbrs#,"DBRS#") = internal^external  [#.01]
"RTN","DGPFUT62",206,0)
 ;        (dbrs#,"OTHER") = internal^external  [#.02]
"RTN","DGPFUT62",207,0)
 ;        (dbrs#,"DATE")  = internal^external  [#.03]
"RTN","DGPFUT62",208,0)
 ;        (dbrs#,"STAT")  = internal^external  [#.04]
"RTN","DGPFUT62",209,0)
 ;        (dbrs#,"SITE")  = internal^external  [#.05]
"RTN","DGPFUT62",210,0)
 ;
"RTN","DGPFUT62",211,0)
 S DGRET(0)=0
"RTN","DGPFUT62",212,0)
 S DGHIEN=$G(DGHIEN)
"RTN","DGPFUT62",213,0)
 I DGHIEN,$D(^DGPF(26.14,DGHIEN,2)) D
"RTN","DGPFUT62",214,0)
 . N DGARR,DGERR,DIERR,IEN,IENS
"RTN","DGPFUT62",215,0)
 . S IENS=(+DGHIEN)_","
"RTN","DGPFUT62",216,0)
 . D GETS^DIQ(26.14,IENS,"2*","IE","DGARR","DGERR")
"RTN","DGPFUT62",217,0)
 . Q:$D(DIERR)
"RTN","DGPFUT62",218,0)
 . S IEN=0 F  S IEN=$O(DGARR(26.142,IEN)) Q:'IEN  D
"RTN","DGPFUT62",219,0)
 . . N DBRS,TMP
"RTN","DGPFUT62",220,0)
 . . M TMP=DGARR(26.142,IEN)
"RTN","DGPFUT62",221,0)
 . . S DBRS=TMP(.01,"E")
"RTN","DGPFUT62",222,0)
 . . S DGRET(0)=1+DGRET(0)
"RTN","DGPFUT62",223,0)
 . . S DGRET(DBRS)=IEN
"RTN","DGPFUT62",224,0)
 . . S DGRET(DBRS,"DBRS#")=TMP(.01,"I")_U_TMP(.01,"E")
"RTN","DGPFUT62",225,0)
 . . S DGRET(DBRS,"OTHER")=TMP(.02,"I")_U_TMP(.02,"E")
"RTN","DGPFUT62",226,0)
 . . S DGRET(DBRS,"DATE")=TMP(.03,"I")_U_$P(TMP(.03,"E"),":",1,2)
"RTN","DGPFUT62",227,0)
 . . S DGRET(DBRS,"STAT")=TMP(.04,"I")_U_TMP(.04,"E")
"RTN","DGPFUT62",228,0)
 . . S DGRET(DBRS,"SITE")=TMP(.05,"I")_U_TMP(.05,"E")
"RTN","DGPFUT62",229,0)
 . . Q
"RTN","DGPFUT62",230,0)
 . Q
"RTN","DGPFUT62",231,0)
 Q
"RTN","DGPFUT62",232,0)
 ;
"RTN","DGPFUT62",233,0)
 ;=====================================================================
"RTN","DGPFUT62",234,0)
STOHIST(DGIENS,DGFLD,DGFDA,DGPFERR) ;
"RTN","DGPFUT62",235,0)
 ;  Set up FDA() for use in UPDATE^DIE
"RTN","DGPFUT62",236,0)
 ;  For more information on input params, see STOHIST^DGPFAAH
"RTN","DGPFUT62",237,0)
 ;INPUT PARAMETERS:
"RTN","DGPFUT62",238,0)
 ;  DGIENS - req - fda() iens to file 26.14, may be "+1,"
"RTN","DGPFUT62",239,0)
 ;  .DGFLD - req - subset of DGPFAH()
"RTN","DGPFUT62",240,0)
 ;RETURN PARAMETERS:
"RTN","DGPFUT62",241,0)
 ;   .DGFDA - FDA array of UPDATE^DIE
"RTN","DGPFUT62",242,0)
 ;            DGFDA() may have existing nodes unrelated to DBRS
"RTN","DGPFUT62",243,0)
 ; .DGPFERR - error array to return to calling program
"RTN","DGPFUT62",244,0)
 ;
"RTN","DGPFUT62",245,0)
 N I,J,IEN,INC
"RTN","DGPFUT62",246,0)
 S DGIENS=$G(DGIENS) I DGIENS="" Q
"RTN","DGPFUT62",247,0)
 I $E(DGIENS)'="+",'$D(^DGPF(26.14,+DGIENS,0)) Q
"RTN","DGPFUT62",248,0)
 Q:'$D(DGFLD("DBRS"))
"RTN","DGPFUT62",249,0)
 ;
"RTN","DGPFUT62",250,0)
 S INC=50,I=0 F J=0:0 S I=$O(DGFLD("DBRS",I)) Q:'I  D
"RTN","DGPFUT62",251,0)
 . N J,IENS,INP
"RTN","DGPFUT62",252,0)
 . ;  expects DGFLD("DBRS",I) to consist of 5 single valued pieces
"RTN","DGPFUT62",253,0)
 . F J=1:1:5 S INP(J)=$P(DGFLD("DBRS",I),U,J)
"RTN","DGPFUT62",254,0)
 . S INC=INC+1,IENS="+"_INC_","_DGIENS
"RTN","DGPFUT62",255,0)
 . S DGFDA(26.142,IENS,.01)=INP(1) ;              DBRS#
"RTN","DGPFUT62",256,0)
 . I $L(INP(2)) S DGFDA(26.142,IENS,.02)=INP(2) ; OTHER
"RTN","DGPFUT62",257,0)
 . I +INP(3) S DGFDA(26.142,IENS,.03)=INP(3) ;    DATE
"RTN","DGPFUT62",258,0)
 . I INP(4)?1U S DGFDA(26.142,IENS,.04)=INP(4) ;  STAT
"RTN","DGPFUT62",259,0)
 . I +INP(5) S DGFDA(26.142,IENS,.05)=INP(5) ;    SITE
"RTN","DGPFUT62",260,0)
 . Q
"RTN","DGPFUT62",261,0)
 Q
"RTN","DGPFUT64")
0^38^B9605992^n/a
"RTN","DGPFUT64",1,0)
DGPFUT64 ;SHRPE/SGM - FLAG UTILITIES ; Aug 17, 2018 09:30
"RTN","DGPFUT64",2,0)
 ;;5.3;Registration;**951**;Aug 13, 1993;Build 135
"RTN","DGPFUT64",3,0)
 ;     Last Edited: SHRPE/SGM - Aug 22, 2018 17:50
"RTN","DGPFUT64",4,0)
 ;
"RTN","DGPFUT64",5,0)
 ; This routine is to be invoked ONLY from ^DGPFUT6
"RTN","DGPFUT64",6,0)
 ;
"RTN","DGPFUT64",7,0)
 ; ICR#  TYPE  DESCRIPTION
"RTN","DGPFUT64",8,0)
 ;-----  ----  ------------------------------------
"RTN","DGPFUT64",9,0)
 ; 2051  Sup   $$FIND1^DIC
"RTN","DGPFUT64",10,0)
 ; 2056  Sup   $$GET1^DIQ
"RTN","DGPFUT64",11,0)
 ;10006  Sup   ^DIC
"RTN","DGPFUT64",12,0)
 ;
"RTN","DGPFUT64",13,0)
 ;=====================================================================
"RTN","DGPFUT64",14,0)
FLAG(DGPFIN,SCR,TYPE) ;
"RTN","DGPFUT64",15,0)
 ; Does flag name and flag variable pointer match?
"RTN","DGPFUT64",16,0)
 ; INPUT PARAMETERS:
"RTN","DGPFUT64",17,0)
 ;   DGPFIN - required - flag full name or variable-pointer syntax
"RTN","DGPFUT64",18,0)
 ;      SCR - required - flag name to use as a screen if DGPFIN is
"RTN","DGPFUT64",19,0)
 ;                       var-pointer
"RTN","DGPFUT64",20,0)
 ;     TYPE - optional - I:only return Cat I values
"RTN","DGPFUT64",21,0)
 ;                      II:only return Cat II values
"RTN","DGPFUT64",22,0)
 ;               null or 0:return either Cat I or Cat II  
"RTN","DGPFUT64",23,0)
 ; EXTRINSIC FUNCTION returns 0 or variable_pointer^flag_name
"RTN","DGPFUT64",24,0)
 ;
"RTN","DGPFUT64",25,0)
 I $G(SCR)="" Q 0
"RTN","DGPFUT64",26,0)
 N X,Y
"RTN","DGPFUT64",27,0)
 S X=$$FLAGCVRT(,$G(DGPFIN),$G(TYPE))
"RTN","DGPFUT64",28,0)
 S Y=$S(X=0:0,$P(X,U,2)=SCR:X,1:0)
"RTN","DGPFUT64",29,0)
 Q Y
"RTN","DGPFUT64",30,0)
 ;
"RTN","DGPFUT64",31,0)
 ;=====================================================================
"RTN","DGPFUT64",32,0)
FLAGCVRT(DGRET,VAL,TYPE) ;
"RTN","DGPFUT64",33,0)
 ;Convert flag name to variable pointer / variable pointer to flag name
"RTN","DGPFUT64",34,0)
 ;INPUT PARAMETERS:
"RTN","DGPFUT64",35,0)
 ;   TYPE - optional -  I:only return Cat I values
"RTN","DGPFUT64",36,0)
 ;                     II:only return Cat II values
"RTN","DGPFUT64",37,0)
 ;              null or 0:return either Cat I or Cat II   
"RTN","DGPFUT64",38,0)
 ;    VAL - required - flag name or variable pointer syntax
"RTN","DGPFUT64",39,0)
 ;
"RTN","DGPFUT64",40,0)
 ;EXTRINSIC FUNCTION and RETURN PARAMETER DGRET returns:
"RTN","DGPFUT64",41,0)
 ;   0 if no matches or error encountered
"RTN","DGPFUT64",42,0)
 ;   else variable_pointer ^ name of flag
"RTN","DGPFUT64",43,0)
 ;   This expects that there are not multiple flags with the same name
"RTN","DGPFUT64",44,0)
 ;
"RTN","DGPFUT64",45,0)
 N X,ERR,FLGX,NAME,PTR,ROOT
"RTN","DGPFUT64",46,0)
 S ERR=0
"RTN","DGPFUT64",47,0)
 S FLGX=$P($G(VAL),U) I FLGX="" Q 0
"RTN","DGPFUT64",48,0)
 S FLGX(1)=0 ;  extrinsic function return value
"RTN","DGPFUT64",49,0)
 S TYPE=$G(TYPE)
"RTN","DGPFUT64",50,0)
 I TYPE="",FLGX["26.15," S TYPE="I"
"RTN","DGPFUT64",51,0)
 I TYPE="",FLGX["26.11," S TYPE="II"
"RTN","DGPFUT64",52,0)
 I $L(TYPE),TYPE'="I",TYPE'="II" S TYPE=""
"RTN","DGPFUT64",53,0)
 S (NAME,PTR,ROOT)=""
"RTN","DGPFUT64",54,0)
 I FLGX'["(26.1" S NAME=FLGX
"RTN","DGPFUT64",55,0)
 E  D  I ERR Q 0
"RTN","DGPFUT64",56,0)
 . N X,Y,GL
"RTN","DGPFUT64",57,0)
 . S Y=$P(FLGX,";"),GL=$P(FLGX,";",2)
"RTN","DGPFUT64",58,0)
 . I Y'=+Y S ERR=1 Q
"RTN","DGPFUT64",59,0)
 . I (GL'="DGPF(26.11,"),(GL'="DGPF(26.15,") S ERR=1 Q
"RTN","DGPFUT64",60,0)
 . S PTR=Y,ROOT=GL
"RTN","DGPFUT64",61,0)
 . Q
"RTN","DGPFUT64",62,0)
 I PTR D
"RTN","DGPFUT64",63,0)
 . N X,Y,DGERR,DIERR,FILE,IENS
"RTN","DGPFUT64",64,0)
 . S FILE=$P($P(ROOT,"(",2),",")
"RTN","DGPFUT64",65,0)
 . S IENS=PTR_","
"RTN","DGPFUT64",66,0)
 . S Y=$$GET1^DIQ(FILE,IENS,.01,,,"DGERR")
"RTN","DGPFUT64",67,0)
 . I '$D(DIERR),$L(Y) S FLGX(1)=FLGX_U_Y
"RTN","DGPFUT64",68,0)
 . Q
"RTN","DGPFUT64",69,0)
 I $L(NAME) D
"RTN","DGPFUT64",70,0)
 . N X,Y,DGERR,DIERR,FLAG
"RTN","DGPFUT64",71,0)
 . I TYPE'="II" D
"RTN","DGPFUT64",72,0)
 . . S Y=$$FIND1^DIC(26.15,,"QX",FLGX,"B",,"DGERR")
"RTN","DGPFUT64",73,0)
 . . I '$D(DIERR),Y>0 S FLGX("I")=Y_";DGPF(26.15,"_U_NAME
"RTN","DGPFUT64",74,0)
 . . Q
"RTN","DGPFUT64",75,0)
 . I TYPE'="I" D
"RTN","DGPFUT64",76,0)
 . . S Y=$$FIND1^DIC(26.11,,"QX",FLGX,"B",,"DGERR")
"RTN","DGPFUT64",77,0)
 . . I '$D(DIERR),Y>0 S FLGX("II")=Y_"DGPF(26.11,"_U_NAME
"RTN","DGPFUT64",78,0)
 . . Q
"RTN","DGPFUT64",79,0)
 . I $D(FLGX("I")),'$D(FLGX("II")) S FLGX(1)=FLGX("I")
"RTN","DGPFUT64",80,0)
 . I $D(FLGX("II")),'$D(FLGX("I")) S FLGX(1)=FLGX("II")
"RTN","DGPFUT64",81,0)
 . Q
"RTN","DGPFUT64",82,0)
 S DGRET=FLGX(1)
"RTN","DGPFUT64",83,0)
 Q:$Q DGRET
"RTN","DGPFUT64",84,0)
 Q
"RTN","DGPFUT64",85,0)
 ;
"RTN","DGPFUT64",86,0)
 ;=====================================================================
"RTN","DGPFUT64",87,0)
SELASGN(DGSCR,FLG) ;
"RTN","DGPFUT64",88,0)
 ;  select an existing assignment from from 26.13
"RTN","DGPFUT64",89,0)
 ;INPUT PARAMETER: DGSCR - optional - ^DIC input parameter DIC("S")
"RTN","DGPFUT64",90,0)
 ;                 FLG   - optional. if "Z" then return zeroth node as
"RTN","DGPFUT64",91,0)
 ;                                   second and subsequent "^"-pieces 
"RTN","DGPFUT64",92,0)
 ;EXTRINSIC FUNCTION: ien or ien[^zeroth node] or 0 or -1
"RTN","DGPFUT64",93,0)
 ;
"RTN","DGPFUT64",94,0)
 N X,Y,DA,DIC,DTOUT,DUOUT,XQY0
"RTN","DGPFUT64",95,0)
 S DIC=26.13,DIC(0)="QAEMZ"
"RTN","DGPFUT64",96,0)
 S DIC("A")="Select PATIENT: "
"RTN","DGPFUT64",97,0)
 S DGSCR=$G(DGSCR) I $L(DGSCR) D
"RTN","DGPFUT64",98,0)
 . N BEH
"RTN","DGPFUT64",99,0)
 . I DGSCR'="BEH" S DIC("S")=DGSCR Q
"RTN","DGPFUT64",100,0)
 . S BEH=$$FLAGCVRT(,"BEHAVIORAL","I")
"RTN","DGPFUT64",101,0)
 . I BEH>0 S DIC("S")="I $P(^(0),U,2)="_$C(34)_$P(BEH,U)_$C(34)
"RTN","DGPFUT64",102,0)
 . Q
"RTN","DGPFUT64",103,0)
 S X="Select a Patient Record Flag Assignment"
"RTN","DGPFUT64",104,0)
 S:DGSCR="BEH" X="Select Patient who has a BEHAVIORAL flag assigned."
"RTN","DGPFUT64",105,0)
 W !!,X
"RTN","DGPFUT64",106,0)
 D ^DIC
"RTN","DGPFUT64",107,0)
 I Y>0 S X=+Y S:$G(FLG)="Z" X=X_U_Y(0) S Y=X
"RTN","DGPFUT64",108,0)
 Q $S($D(DTOUT):-1,Y>0:Y,1:0)
"SEC","^DIC",26.22,26.22,0,"AUDIT")
@
"SEC","^DIC",26.22,26.22,0,"DD")
@
"SEC","^DIC",26.22,26.22,0,"DEL")
@
"SEC","^DIC",26.22,26.22,0,"LAYGO")
@
"SEC","^DIC",26.22,26.22,0,"RD")
@
"SEC","^DIC",26.22,26.22,0,"WR")
@
"UP",26.13,26.131,-1)
26.13^2
"UP",26.13,26.131,0)
26.131
"UP",26.14,26.142,-1)
26.14^2
"UP",26.14,26.142,0)
26.142
"VER")
8.0^22.2
"^DD",26.13,26.13,2,0)
DBRS NUMBER^26.131^^2;0
"^DD",26.13,26.13,2,21,0)
^^3^3^3180529^
"^DD",26.13,26.13,2,21,1,0)
This multiple will allow the documentation of the identifiers recorded in 
"^DD",26.13,26.13,2,21,2,0)
the Disruptive Behavior Record System (DBRS). One can also associate a 
"^DD",26.13,26.13,2,21,3,0)
brief description for each DBRS number.
"^DD",26.13,26.13,2,"DT")
3180213
"^DD",26.13,26.131,0)
DBRS NUMBER SUB-FIELD^^.04^4
"^DD",26.13,26.131,0,"DT")
3190130
"^DD",26.13,26.131,0,"IX","B",26.131,.01)

"^DD",26.13,26.131,0,"NM","DBRS NUMBER")

"^DD",26.13,26.131,0,"UP")
26.13
"^DD",26.13,26.131,.01,0)
DBRS NUMBER^MFJ17X^^0;1^S:X?.E1L.E X=$$UP^XLFSTR(X) K:$L(X)>17!($L(X)<10)!'((X?3N.7UN1"."6N)!(X?3N1"/".6UN1"."6N)) X
"^DD",26.13,26.131,.01,1,0)
^.1^^-1
"^DD",26.13,26.131,.01,1,1,0)
26.131^B
"^DD",26.13,26.131,.01,1,1,1)
S ^DGPF(26.13,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",26.13,26.131,.01,1,1,2)
K ^DGPF(26.13,DA(1),2,"B",$E(X,1,30),DA)
"^DD",26.13,26.131,.01,1,2,0)
^^TRIGGER^26.131^.03
"^DD",26.13,26.131,.01,1,2,1)
X ^DD(26.131,.01,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^DGPF(26.13,D0,2,D1,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$E($$NOW^XLFDT,1,12) X ^DD(26.131,.01,1,2,1.4)
"^DD",26.13,26.131,.01,1,2,1.3)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(0)=X S Y(1)=$S($D(^DGPF(26.13,D0,2,D1,0)):^(0),1:"") S X=$P(Y(1),U,3)=""
"^DD",26.13,26.131,.01,1,2,1.4)
S DIH=$G(^DGPF(26.13,DIV(0),2,DIV(1),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=26.131,DIG=.03 D ^DICR
"^DD",26.13,26.131,.01,1,2,2)
Q
"^DD",26.13,26.131,.01,1,2,"%D",0)
^.101^3^3^3180816^^
"^DD",26.13,26.131,.01,1,2,"%D",1,0)
This data is computer generated.  Whenever a new record is created in 
"^DD",26.13,26.131,.01,1,2,"%D",2,0)
this multiple, this trigger will stuff the date and time that this record 
"^DD",26.13,26.131,.01,1,2,"%D",3,0)
was created.
"^DD",26.13,26.131,.01,1,2,"CREATE CONDITION")
DATE=""
"^DD",26.13,26.131,.01,1,2,"CREATE VALUE")
S X=+$E($$NOW^XLFDT,1,12)
"^DD",26.13,26.131,.01,1,2,"DELETE VALUE")
NO EFFECT
"^DD",26.13,26.131,.01,1,2,"DT")
3180305
"^DD",26.13,26.131,.01,1,2,"FIELD")
DATE
"^DD",26.13,26.131,.01,1,3,0)
^^TRIGGER^26.131^.04
"^DD",26.13,26.131,.01,1,3,1)
X ^DD(26.131,.01,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^DGPF(26.13,D0,2,D1,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X=+$$SITE^VASITE X ^DD(26.131,.01,1,3,1.4)
"^DD",26.13,26.131,.01,1,3,1.3)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(0)=X S Y(1)=$S($D(^DGPF(26.13,D0,2,D1,0)):^(0),1:"") S X=$P($G(^DIC(4,+$P(Y(1),U,4),0)),U)=""
"^DD",26.13,26.131,.01,1,3,1.4)
S DIH=$G(^DGPF(26.13,DIV(0),2,DIV(1),0)),DIV=X S $P(^(0),U,4)=DIV,DIH=26.131,DIG=.04 D ^DICR
"^DD",26.13,26.131,.01,1,3,2)
Q
"^DD",26.13,26.131,.01,1,3,"%D",0)
^^1^1^3180712^
"^DD",26.13,26.131,.01,1,3,"%D",1,0)
This will populate the CREATE SITE field with the VAMC Facility name.
"^DD",26.13,26.131,.01,1,3,"CREATE CONDITION")
CREATE SITE=""
"^DD",26.13,26.131,.01,1,3,"CREATE VALUE")
S X=+$$SITE^VASITE
"^DD",26.13,26.131,.01,1,3,"DELETE VALUE")
NO EFFECT
"^DD",26.13,26.131,.01,1,3,"DT")
3180712
"^DD",26.13,26.131,.01,1,3,"FIELD")
CREATE
"^DD",26.13,26.131,.01,3)
Answer must be 10-17 characters in length, <site#>.NNNNNN
"^DD",26.13,26.131,.01,21,0)
^^9^9^3180529^^
"^DD",26.13,26.131,.01,21,1,0)
This is the number as registered in the external system Disruptive
"^DD",26.13,26.131,.01,21,2,0)
Behavioral Record System (DBRS).
"^DD",26.13,26.131,.01,21,3,0)
 
"^DD",26.13,26.131,.01,21,4,0)
The DBRS# format on that system is <site_number>.YYNNNC where:
"^DD",26.13,26.131,.01,21,5,0)
    site_number := 3 numbers followed by 0-7 alphanumeric characters
"^DD",26.13,26.131,.01,21,6,0)
                   for example: 6739AA for a nursing home
"^DD",26.13,26.131,.01,21,7,0)
    site_number := 3 numbers, 1 "/", 1-6 alphanumeric characters
"^DD",26.13,26.131,.01,21,8,0)
                   for example: 673/107C
"^DD",26.13,26.131,.01,21,9,0)
         YYNNNC := 6 numbers
"^DD",26.13,26.131,.01,"DEL",1,0)
I +$P(^DGPF(26.13,DA(1),2,DA,0),U,4)'=+$$SITE^VASITE,'$G(DGDBRSE) D EN^DDIOL("Only the facility which first entered this record may delete it!"),EN^DDIOL("","","!?0")
"^DD",26.13,26.131,.01,"DT")
3180726
"^DD",26.13,26.131,.02,0)
OTHER DBRS DATA^FJ60^^0;2^K:$L(X)>60!($L(X)<3) X
"^DD",26.13,26.131,.02,3)
Answer must be 3-60 characters in length.
"^DD",26.13,26.131,.02,21,0)
^.001^1^1^3180103^^
"^DD",26.13,26.131,.02,21,1,0)
Enter any relevant information as desired.
"^DD",26.13,26.131,.02,"DT")
3180103
"^DD",26.13,26.131,.03,0)
DATE^D^^0;3^S %DT="ETX" D ^%DT S X=Y K:X<1 X
"^DD",26.13,26.131,.03,3)
(No range limit on date)
"^DD",26.13,26.131,.03,5,1,0)
26.131^.01^2
"^DD",26.13,26.131,.03,21,0)
^^4^4^3180305^
"^DD",26.13,26.131,.03,21,1,0)
This date is computer generated at the time this DBRS record was created 
"^DD",26.13,26.131,.03,21,2,0)
by a trigger cross reference on the .01 field.  Thus the meaning of this 
"^DD",26.13,26.131,.03,21,3,0)
is that it is the date that this DBRS record was entered in the owner 
"^DD",26.13,26.131,.03,21,4,0)
facility system.
"^DD",26.13,26.131,.03,"DT")
3180305
"^DD",26.13,26.131,.04,0)
CREATE SITE^P4'^DIC(4,^0;4^Q
"^DD",26.13,26.131,.04,3)
VAMC that first entered this DBRS Number
"^DD",26.13,26.131,.04,5,1,0)
26.131^.01^3
"^DD",26.13,26.131,.04,21,0)
^^6^6^3180727^
"^DD",26.13,26.131,.04,21,1,0)
This field value is created by a Trigger cross reference on the .01 
"^DD",26.13,26.131,.04,21,2,0)
field.  It is the name of the facility that first entered this DBRS# for 
"^DD",26.13,26.131,.04,21,3,0)
this assignment.
"^DD",26.13,26.131,.04,21,4,0)
 
"^DD",26.13,26.131,.04,21,5,0)
Business rule: only the VAMC that created this DBRS record is 
"^DD",26.13,26.131,.04,21,6,0)
allowed to delete it.
"^DD",26.13,26.131,.04,"DT")
3180727
"^DD",26.14,26.14,.01,0)
PRF ASSIGNMENT^RP26.13'I^DGPF(26.13,^0;1^Q
"^DD",26.14,26.14,.01,1,0)
^.1^^-1
"^DD",26.14,26.14,.01,1,1,0)
26.14^B
"^DD",26.14,26.14,.01,1,1,1)
S ^DGPF(26.14,"B",$E(X,1,30),DA)=""
"^DD",26.14,26.14,.01,1,1,2)
K ^DGPF(26.14,"B",$E(X,1,30),DA)
"^DD",26.14,26.14,.01,1,2,0)
^^TRIGGER^26.14^.09
"^DD",26.14,26.14,.01,1,2,1)
X ^DD(26.14,.01,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^DGPF(26.14,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X=DIV S X=+$$SITE^VASITE S DIH=$G(^DGPF(26.14,DIV(0),0)),DIV=X S $P(^(0),U,9)=DIV,DIH=26.14,DIG=.09 D ^DICR
"^DD",26.14,26.14,.01,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGPF(26.14,D0,0)):^(0),1:"") S X=$P($G(^DIC(4,+$P(Y(1),U,9),0)),U)=""
"^DD",26.14,26.14,.01,1,2,2)
Q
"^DD",26.14,26.14,.01,1,2,"%D",0)
^^2^2^3180326^
"^DD",26.14,26.14,.01,1,2,"%D",1,0)
Upon creation of a History record, stuff the current default INSTITUTION 
"^DD",26.14,26.14,.01,1,2,"%D",2,0)
into field CREATED BY SITE.
"^DD",26.14,26.14,.01,1,2,"CREATE CONDITION")
#.09=""
"^DD",26.14,26.14,.01,1,2,"CREATE VALUE")
S X=+$$SITE^VASITE
"^DD",26.14,26.14,.01,1,2,"DELETE VALUE")
NO EFFECT
"^DD",26.14,26.14,.01,1,2,"DT")
3180208
"^DD",26.14,26.14,.01,1,2,"FIELD")
#.09
"^DD",26.14,26.14,.01,3)
Enter the record flag assignment associated with this history record.
"^DD",26.14,26.14,.01,21,0)
^^2^2^3030421^
"^DD",26.14,26.14,.01,21,1,0)
This field contains the history record's parent Patient Record Flag
"^DD",26.14,26.14,.01,21,2,0)
Assignment in the PRF ASSIGNMENT file.
"^DD",26.14,26.14,.01,23,0)
^.001^2^2^3030421^^
"^DD",26.14,26.14,.01,23,1,0)
This field is a pointer to the history record's parent Patient Record Flag
"^DD",26.14,26.14,.01,23,2,0)
Assignment in the PRF ASSIGNMENT file (#26.13).
"^DD",26.14,26.14,.01,"DT")
3180524
"^DD",26.14,26.14,.03,0)
ACTION^RSI^1:NEW ASSIGNMENT;2:CONTINUE;3:INACTIVATE;4:REACTIVATE;5:ENTERED IN ERROR;6:DBRS#/OTHER FIELD UPDATE;7:REFRESH INACTIVE;8:REFRESH ACTIVE;^0;3^Q
"^DD",26.14,26.14,.03,3)
Enter the action associated with the assignment history.
"^DD",26.14,26.14,.03,21,0)
^^2^2^3180816^
"^DD",26.14,26.14,.03,21,1,0)
This field contains the event that occurred to create this PRF ASSIGNMENT
"^DD",26.14,26.14,.03,21,2,0)
HISTORY record.
"^DD",26.14,26.14,.03,"DT")
3180911
"^DD",26.14,26.14,.09,0)
CREATED BY SITE^P4'^DIC(4,^0;9^Q
"^DD",26.14,26.14,.09,3)
Enter the name of the facility that created this record.
"^DD",26.14,26.14,.09,5,1,0)
26.14^.01^2
"^DD",26.14,26.14,.09,21,0)
^^4^4^3180924^
"^DD",26.14,26.14,.09,21,1,0)
Enter the name of the INSTITUTION which created this history record.  
"^DD",26.14,26.14,.09,21,2,0)
This field is auto-populated with the system's facility name whenever a
"^DD",26.14,26.14,.09,21,3,0)
new record is created in this file by a Fileman trigger cross reference 
"^DD",26.14,26.14,.09,21,4,0)
on the .01 field.
"^DD",26.14,26.14,.09,"DT")
3180924
"^DD",26.14,26.14,2,0)
DBRS NUMBER^26.142^^2;0
"^DD",26.14,26.14,2,21,0)
^^3^3^3180920^^
"^DD",26.14,26.14,2,21,1,0)
The Disruptive Behavior Reporting System (DBRS) has information which 
"^DD",26.14,26.14,2,21,2,0)
might be of interest.  This field records any changes to DBRS# records in 
"^DD",26.14,26.14,2,21,3,0)
file 26.13.
"^DD",26.14,26.142,0)
DBRS NUMBER SUB-FIELD^^.05^5
"^DD",26.14,26.142,0,"DT")
3190130
"^DD",26.14,26.142,0,"IX","B",26.142,.01)

"^DD",26.14,26.142,0,"NM","DBRS NUMBER")

"^DD",26.14,26.142,0,"UP")
26.14
"^DD",26.14,26.142,.01,0)
DBRS NUMBER^MFJ17X^^0;1^S:X?.E1L.E X=$$UP^XLFSTR(X) K:$L(X)>17!($L(X)<10)!'((X?3N.7UN1"."6N)!(X?3N1"/".6UN1"."6N)) X
"^DD",26.14,26.142,.01,1,0)
^.1^^-1
"^DD",26.14,26.142,.01,1,1,0)
26.142^B
"^DD",26.14,26.142,.01,1,1,1)
S ^DGPF(26.14,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",26.14,26.142,.01,1,1,2)
K ^DGPF(26.14,DA(1),2,"B",$E(X,1,30),DA)
"^DD",26.14,26.142,.01,3)
Answer must be 10-17 characters in length, <site#>.NNNNNN
"^DD",26.14,26.142,.01,21,0)
^^9^9^3180920^^
"^DD",26.14,26.142,.01,21,1,0)
This is the number as registered in the external system Disruptive
"^DD",26.14,26.142,.01,21,2,0)
Behavioral Record System (DBRS).
"^DD",26.14,26.142,.01,21,3,0)
 
"^DD",26.14,26.142,.01,21,4,0)
The DBRS# format on that system is <site_number>.YYNNNC where:
"^DD",26.14,26.142,.01,21,5,0)
    site_number := 3 numbers followed by 0-7 alphanumeric characters
"^DD",26.14,26.142,.01,21,6,0)
                   for example: 673AA for a nursing home
"^DD",26.14,26.142,.01,21,7,0)
    site_number := 3 numbers, 1 "/", 1-6 alphanumeric characters
"^DD",26.14,26.142,.01,21,8,0)
                   for example: 673/107C
"^DD",26.14,26.142,.01,21,9,0)
         YYNNNC := 6 numbers
"^DD",26.14,26.142,.01,23,0)
^^5^5^3180920^
"^DD",26.14,26.142,.01,23,1,0)
In most cases, a History record for DBRS# will contain the complete set of
"^DD",26.14,26.142,.01,23,2,0)
DBRS# data that existed at the time this record was created.  The HL7 
"^DD",26.14,26.142,.01,23,3,0)
processing routines at the site that receives the message will delete all
"^DD",26.14,26.142,.01,23,4,0)
existing DBRS# for that assignment and then add in all the DBRS# in that
"^DD",26.14,26.142,.01,23,5,0)
HL7 message.  There are a few exceptions to this general rule.
"^DD",26.14,26.142,.01,"DT")
3180920
"^DD",26.14,26.142,.02,0)
DBRS OTHER^FJ60^^0;2^K:$L(X)>60!($L(X)<3) X
"^DD",26.14,26.142,.02,3)
Answer must be 3-60 characters in length.
"^DD",26.14,26.142,.02,21,0)
^^1^1^3180611^
"^DD",26.14,26.142,.02,21,1,0)
Additional information pertinent to this DBRS#
"^DD",26.14,26.142,.02,"DT")
3180611
"^DD",26.14,26.142,.03,0)
DATE^D^^0;3^S %DT="ETX" D ^%DT S X=Y K:X<1 X
"^DD",26.14,26.142,.03,3)
Enter the date that the DBRS record was created in file 26.13.
"^DD",26.14,26.142,.03,21,0)
^^3^3^3180924^
"^DD",26.14,26.142,.03,21,1,0)
This is the date that this DBRS record was created on the system which
"^DD",26.14,26.142,.03,21,2,0)
first entered this DBRS record for this assignment. It should be the same
"^DD",26.14,26.142,.03,21,3,0)
value as that recorded in the PRF Assignment file (#26.13).
"^DD",26.14,26.142,.03,"DT")
3180924
"^DD",26.14,26.142,.04,0)
STATUS^S^A:Add;D:Delete;E:Edit;N:No Change;^0;4^Q
"^DD",26.14,26.142,.04,3)
Enter the type edit action that occurred.
"^DD",26.14,26.142,.04,21,0)
^^4^4^3180419^
"^DD",26.14,26.142,.04,21,1,0)
If any changes occur to any DBRS entry in file 26.13, then for that 
"^DD",26.14,26.142,.04,21,2,0)
corresponding History record show all the DBRS records that existed at 
"^DD",26.14,26.142,.04,21,3,0)
that time.  This status value will indicate the status of that DBRS 
"^DD",26.14,26.142,.04,21,4,0)
record in 26.13 at the time this History record was created.
"^DD",26.14,26.142,.04,"DT")
3180920
"^DD",26.14,26.142,.05,0)
CREATE SITE^P4'^DIC(4,^0;5^Q
"^DD",26.14,26.142,.05,3)
This is the name of Facility that first entered this DBRS#
"^DD",26.14,26.142,.05,21,0)
^^2^2^3180712^
"^DD",26.14,26.142,.05,21,1,0)
This is the name of the Facility that first created this DBRS# record.  
"^DD",26.14,26.142,.05,21,2,0)
It should be the same value as in the associated Flag Assignment (#26.13).
"^DD",26.14,26.142,.05,"DT")
3180712
"^DD",26.22,26.22,0)
FIELD^^2.02^13
"^DD",26.22,26.22,0,"DT")
3190130
"^DD",26.22,26.22,0,"IX","B",26.22,.01)

"^DD",26.22,26.22,0,"NM","PRF HL7 REQUEST LOG")

"^DD",26.22,26.22,0,"VRPK")
DG
"^DD",26.22,26.22,.01,0)
REQUEST DATE/TIME^RD^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",26.22,26.22,.01,1,0)
^.1
"^DD",26.22,26.22,.01,1,1,0)
26.22^B
"^DD",26.22,26.22,.01,1,1,1)
S ^DGPF(26.22,"B",$E(X,1,30),DA)=""
"^DD",26.22,26.22,.01,1,1,2)
K ^DGPF(26.22,"B",$E(X,1,30),DA)
"^DD",26.22,26.22,.01,3)
Enter date and time for this request.
"^DD",26.22,26.22,.01,21,0)
^^1^1^3180429^
"^DD",26.22,26.22,.01,21,1,0)
Date and time of the request.
"^DD",26.22,26.22,.01,"DT")
3180512
"^DD",26.22,26.22,.02,0)
REQUESTED BY^FJ50^^0;2^K:$L(X)>50!($L(X)<3) X
"^DD",26.22,26.22,.02,3)
Answer must be 3-50 characters in length.
"^DD",26.22,26.22,.02,21,0)
^^1^1^3180429^
"^DD",26.22,26.22,.02,21,1,0)
Name of the person who requested the transfer.
"^DD",26.22,26.22,.02,"DT")
3180429
"^DD",26.22,26.22,.03,0)
PATIENT^RP2'^DPT(^0;3^Q
"^DD",26.22,26.22,.03,3)
Select a patient for this transfer request.
"^DD",26.22,26.22,.03,21,0)
^^1^1^3180429^
"^DD",26.22,26.22,.03,21,1,0)
Patient associated with this transfer request.
"^DD",26.22,26.22,.03,"DT")
3180512
"^DD",26.22,26.22,.04,0)
PRF FLAG^RP26.15'^DGPF(26.15,^0;4^Q
"^DD",26.22,26.22,.04,3)
Select PRF flag to be transferred.
"^DD",26.22,26.22,.04,21,0)
^^1^1^3180429^
"^DD",26.22,26.22,.04,21,1,0)
National PRF flag to be transferred.
"^DD",26.22,26.22,.04,"DT")
3180512
"^DD",26.22,26.22,.05,0)
STATUS^RS^1:SENT;2:PENDING;3:APPROVED;4:REJECTED;5:ERROR;6:NO RESPONSE;^0;5^Q
"^DD",26.22,26.22,.05,3)
Select status of the request.
"^DD",26.22,26.22,.05,21,0)
^^1^1^3180429^
"^DD",26.22,26.22,.05,21,1,0)
Status of the request.
"^DD",26.22,26.22,.05,"DT")
3180724
"^DD",26.22,26.22,.06,0)
REVIEWED BY^FJ50^^0;6^K:$L(X)>50!($L(X)<3) X
"^DD",26.22,26.22,.06,3)
Answer must be 3-50 characters in length.
"^DD",26.22,26.22,.06,21,0)
^^1^1^3180429^
"^DD",26.22,26.22,.06,21,1,0)
Name of the person who approved or rejected the request.
"^DD",26.22,26.22,.06,"DT")
3180429
"^DD",26.22,26.22,.07,0)
REVIEW DATE/TIME^D^^0;7^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",26.22,26.22,.07,3)
Enter the date/time for approval or rejection of this request.
"^DD",26.22,26.22,.07,21,0)
^^1^1^3180429^
"^DD",26.22,26.22,.07,21,1,0)
Date and time of request approval/rejection.
"^DD",26.22,26.22,.07,"DT")
3180429
"^DD",26.22,26.22,.08,0)
QUERY ID^RFJ30^^0;8^K:$L(X)>30!($L(X)<1) X
"^DD",26.22,26.22,.08,3)
Answer must be 1-30 characters in length.
"^DD",26.22,26.22,.08,21,0)
^^1^1^3180502^
"^DD",26.22,26.22,.08,21,1,0)
Query ID for HL7 message.
"^DD",26.22,26.22,.08,"DT")
3180517
"^DD",26.22,26.22,.09,0)
HL7 MESSAGE ID^FJ60^^0;9^K:$L(X)>60!($L(X)<1) X
"^DD",26.22,26.22,.09,3)
Answer must be 1-60 characters in length.
"^DD",26.22,26.22,.09,21,0)
^^1^1^3180502^
"^DD",26.22,26.22,.09,21,1,0)
Unique ID for this HL7 message.
"^DD",26.22,26.22,.09,"DT")
3180502
"^DD",26.22,26.22,.1,0)
SENDING FACILITY^P4'^DIC(4,^0;10^Q
"^DD",26.22,26.22,.1,3)
Select sending facility for this request.
"^DD",26.22,26.22,.1,21,0)
^^1^1^3180503^
"^DD",26.22,26.22,.1,21,1,0)
This field contains sending facility for this transfer request.
"^DD",26.22,26.22,.1,"DT")
3180503
"^DD",26.22,26.22,1,0)
ERROR DESCRIPTION^FJ80^^1;1^K:$L(X)>80!($L(X)<1) X
"^DD",26.22,26.22,1,3)
Answer must be 1-80 characters in length.
"^DD",26.22,26.22,1,21,0)
^^1^1^3180503^
"^DD",26.22,26.22,1,21,1,0)
This field contains error text, if STATUS is "ERROR".
"^DD",26.22,26.22,1,"DT")
3180503
"^DD",26.22,26.22,2.01,0)
REQUEST COMMENT^FJ80^^2;1^K:$L(X)>80!($L(X)<10) X
"^DD",26.22,26.22,2.01,3)
Answer must be 10-80 characters in length.
"^DD",26.22,26.22,2.01,21,0)
^^1^1^3180724^
"^DD",26.22,26.22,2.01,21,1,0)
This field contains reason/comment for ownership transfer request.
"^DD",26.22,26.22,2.01,"DT")
3180724
"^DD",26.22,26.22,2.02,0)
REVIEW COMMENT^FJ80^^2;2^K:$L(X)>80!($L(X)<10) X
"^DD",26.22,26.22,2.02,3)
Answer must be 10-80 characters in length.
"^DD",26.22,26.22,2.02,21,0)
^^2^2^3180724^
"^DD",26.22,26.22,2.02,21,1,0)
This field contains reason/comment for approval or rejection of ownership 
"^DD",26.22,26.22,2.02,21,2,0)
transfer request.
"^DD",26.22,26.22,2.02,"DT")
3180724
"^DIC",26.22,26.22,0)
PRF HL7 REQUEST LOG^26.22
"^DIC",26.22,26.22,0,"GL")
^DGPF(26.22,
"^DIC",26.22,26.22,"%",0)
^1.005^^0
"^DIC",26.22,26.22,"%D",0)
^^1^1^3180429^
"^DIC",26.22,26.22,"%D",1,0)
This file contains log of PRF flag transfer requests.
"^DIC",26.22,"B","PRF HL7 REQUEST LOG",26.22)

"BLD",10231,6)
^854
**END**
**END**

