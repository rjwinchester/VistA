Released DG*5.3*945 SEQ #840
Extracted from mail message
**KIDS**:DG*5.3*945^

**INSTALL NAME**
DG*5.3*945
"BLD",10832,0)
DG*5.3*945^REGISTRATION^0^3180430^y
"BLD",10832,1,0)
^^3^3^3180430^
"BLD",10832,1,1,0)
Patch DG*5.3*945 addresses the issue of the Purge Duplicate
"BLD",10832,1,2,0)
Income Tests [DG CLEANUP INCOME TEST DUPES] option not completing
"BLD",10832,1,3,0)
due to an error in routine DG53558N.
"BLD",10832,4,0)
^9.64PA^^
"BLD",10832,6.3)
6
"BLD",10832,"ABPKG")
n
"BLD",10832,"KRN",0)
^9.67PA^779.2^20
"BLD",10832,"KRN",.4,0)
.4
"BLD",10832,"KRN",.401,0)
.401
"BLD",10832,"KRN",.402,0)
.402
"BLD",10832,"KRN",.403,0)
.403
"BLD",10832,"KRN",.5,0)
.5
"BLD",10832,"KRN",.84,0)
.84
"BLD",10832,"KRN",3.6,0)
3.6
"BLD",10832,"KRN",3.8,0)
3.8
"BLD",10832,"KRN",9.2,0)
9.2
"BLD",10832,"KRN",9.8,0)
9.8
"BLD",10832,"KRN",9.8,"NM",0)
^9.68A^3^2
"BLD",10832,"KRN",9.8,"NM",2,0)
DG53558^^0^B51651508
"BLD",10832,"KRN",9.8,"NM",3,0)
DG53558N^^0^B10096856
"BLD",10832,"KRN",9.8,"NM","B","DG53558",2)

"BLD",10832,"KRN",9.8,"NM","B","DG53558N",3)

"BLD",10832,"KRN",19,0)
19
"BLD",10832,"KRN",19.1,0)
19.1
"BLD",10832,"KRN",101,0)
101
"BLD",10832,"KRN",409.61,0)
409.61
"BLD",10832,"KRN",771,0)
771
"BLD",10832,"KRN",779.2,0)
779.2
"BLD",10832,"KRN",870,0)
870
"BLD",10832,"KRN",8989.51,0)
8989.51
"BLD",10832,"KRN",8989.52,0)
8989.52
"BLD",10832,"KRN",8994,0)
8994
"BLD",10832,"KRN","B",.4,.4)

"BLD",10832,"KRN","B",.401,.401)

"BLD",10832,"KRN","B",.402,.402)

"BLD",10832,"KRN","B",.403,.403)

"BLD",10832,"KRN","B",.5,.5)

"BLD",10832,"KRN","B",.84,.84)

"BLD",10832,"KRN","B",3.6,3.6)

"BLD",10832,"KRN","B",3.8,3.8)

"BLD",10832,"KRN","B",9.2,9.2)

"BLD",10832,"KRN","B",9.8,9.8)

"BLD",10832,"KRN","B",19,19)

"BLD",10832,"KRN","B",19.1,19.1)

"BLD",10832,"KRN","B",101,101)

"BLD",10832,"KRN","B",409.61,409.61)

"BLD",10832,"KRN","B",771,771)

"BLD",10832,"KRN","B",779.2,779.2)

"BLD",10832,"KRN","B",870,870)

"BLD",10832,"KRN","B",8989.51,8989.51)

"BLD",10832,"KRN","B",8989.52,8989.52)

"BLD",10832,"KRN","B",8994,8994)

"BLD",10832,"QDEF")
^^^^^^^^^^YES
"BLD",10832,"QUES",0)
^9.62^^
"BLD",10832,"REQB",0)
^9.611^2^1
"BLD",10832,"REQB",2,0)
DG*5.3*688^1
"BLD",10832,"REQB","B","DG*5.3*688",2)

"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
945^3180430
"PKG",5,22,1,"PAH",1,1,0)
^^3^3^3180430
"PKG",5,22,1,"PAH",1,1,1,0)
Patch DG*5.3*945 addresses the issue of the Purge Duplicate
"PKG",5,22,1,"PAH",1,1,2,0)
Income Tests [DG CLEANUP INCOME TEST DUPES] option not completing
"PKG",5,22,1,"PAH",1,1,3,0)
due to an error in routine DG53558N.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","DG53558")
0^2^B51651508^B51112654
"RTN","DG53558",1,0)
DG53558 ;ALB/GN - DG*5.3*558 CLEANUP FOR DUPE MEANS TEST FILE ;8/15/08 12:27pm
"RTN","DG53558",2,0)
 ;;5.3;Registration;**558,579,688,945**;Aug 13, 1993;Build 6
"RTN","DG53558",3,0)
 ;
"RTN","DG53558",4,0)
 ; Read through the Mean Test file (#408.31) via the "C" xref.
"RTN","DG53558",5,0)
 ; Search for duplicate & Bad tests and delete them.  Duplicates are
"RTN","DG53558",6,0)
 ; defined as more than one test for the same patient for the same day
"RTN","DG53558",7,0)
 ; and the same status.  All dupes but the primary test will be
"RTN","DG53558",8,0)
 ; deleted and when no primary test on a given day then the last
"RTN","DG53558",9,0)
 ; transmission for that day will be kept
"RTN","DG53558",10,0)
 ;
"RTN","DG53558",11,0)
 ; Bad tests are defined as those that have a NULL status code in
"RTN","DG53558",12,0)
 ; the 0 node of file 408.31.
"RTN","DG53558",13,0)
 ;
"RTN","DG53558",14,0)
 ; DG*5.3*579 - changes were made to fix a problem when future dated
"RTN","DG53558",15,0)
 ; tests come in and flip a test from Primary to Non-Primary.  This
"RTN","DG53558",16,0)
 ; should not be done for IVM converted cases.  This patch will
"RTN","DG53558",17,0)
 ; find those IVM tests and flip them back to Priamry and flip the
"RTN","DG53558",18,0)
 ; future test that caused this back to Non-Primary.
"RTN","DG53558",19,0)
 Q
"RTN","DG53558",20,0)
TEST ; Entry point for testing this routine
"RTN","DG53558",21,0)
 S TESTING=1
"RTN","DG53558",22,0)
EN ;  Entry point for purging Duplicate Means Tests
"RTN","DG53558",23,0)
 ;
"RTN","DG53558",24,0)
 N QUIT,ZTDESC,ZTIO,ZTRTN,ZTSK,ZTQUEUED,ZTSAVE,CHKPNT
"RTN","DG53558",25,0)
 S CHKPNT=5
"RTN","DG53558",26,0)
 W !,"Do you want to process a group of "_CHKPNT_" duplicates and stop? "
"RTN","DG53558",27,0)
 K DIR
"RTN","DG53558",28,0)
 S DIR("?",1)="  Enter Y to process at least "_CHKPNT_" dupes and stop the utility.  This will "
"RTN","DG53558",29,0)
 S DIR("?",2)="  allow you to verify the cleanup in small steps.  Enter N to process the "
"RTN","DG53558",30,0)
 S DIR("?")="  remainder of the file to completion."
"RTN","DG53558",31,0)
 S DIR(0)="Y" D ^DIR
"RTN","DG53558",32,0)
 I $D(DTOUT)!$D(DUOUT) W !,"Cancelled...",! Q
"RTN","DG53558",33,0)
 ;
"RTN","DG53558",34,0)
 S:'Y CHKPNT=0                               ;do not use check points
"RTN","DG53558",35,0)
 ;
"RTN","DG53558",36,0)
 ; setup TM variables and Load 
"RTN","DG53558",37,0)
 S ZTRTN=$S($G(TESTING):"QUET^DG53558",1:"QUE^DG53558")
"RTN","DG53558",38,0)
 S ZTDESC="Cleanup Duplicates in the Means Test file"
"RTN","DG53558",39,0)
 S ZTIO=""
"RTN","DG53558",40,0)
 S ZTSAVE("CHKPNT")=""
"RTN","DG53558",41,0)
 ;
"RTN","DG53558",42,0)
 W !!,ZTDESC,!
"RTN","DG53558",43,0)
 ;check if already running or completed.
"RTN","DG53558",44,0)
 S QUIT=$$CHKSTAT(0)
"RTN","DG53558",45,0)
 Q:QUIT
"RTN","DG53558",46,0)
 D ^%ZTLOAD
"RTN","DG53558",47,0)
 L -^XTMP($$NAMSPC)
"RTN","DG53558",48,0)
 I $D(ZTSK) D
"RTN","DG53558",49,0)
 . W !,"This request queued as Task # ",ZTSK,!
"RTN","DG53558",50,0)
 Q
"RTN","DG53558",51,0)
 ;
"RTN","DG53558",52,0)
POST ;
"RTN","DG53558",53,0)
 N ZTDTH,ZTDESC,ZTIO,ZTRTN,ZTSK,ZTQUEUED,ZTSAVE,CHKPNT
"RTN","DG53558",54,0)
 D MES^XPDUTL("")
"RTN","DG53558",55,0)
 D MES^XPDUTL("=====================================================")
"RTN","DG53558",56,0)
 D MES^XPDUTL("Queuing Dupe Income Test Purge Utility.....")
"RTN","DG53558",57,0)
 I $$CHKSTAT(1) D  Q
"RTN","DG53558",58,0)
 . D BMES^XPDUTL("ABORTING  Post Install Utility Queuing")
"RTN","DG53558",59,0)
 . D MES^XPDUTL("=====================================================")
"RTN","DG53558",60,0)
 S ZTRTN="QUE^DG53558"
"RTN","DG53558",61,0)
 S ZTDESC="Cleanup Duplicates in the Means Test file"
"RTN","DG53558",62,0)
 S ZTIO="",ZTDTH=$H
"RTN","DG53558",63,0)
 S CHKPNT=0,ZTSAVE("CHKPNT")=""
"RTN","DG53558",64,0)
 D ^%ZTLOAD
"RTN","DG53558",65,0)
 L -^XTMP($$NAMSPC)
"RTN","DG53558",66,0)
 D MES^XPDUTL("This request queued as Task # "_ZTSK)
"RTN","DG53558",67,0)
 D MES^XPDUTL("=====================================================")
"RTN","DG53558",68,0)
 D MES^XPDUTL("")
"RTN","DG53558",69,0)
 Q
"RTN","DG53558",70,0)
 ;
"RTN","DG53558",71,0)
QUET ; Entry point for taskman (testing mode)
"RTN","DG53558",72,0)
 S TESTING=1
"RTN","DG53558",73,0)
QUE ; Entry point for taskman (live mode)
"RTN","DG53558",74,0)
 N NAMSPC S NAMSPC=$$NAMSPC^DG53558
"RTN","DG53558",75,0)
 L +^XTMP(NAMSPC):10 I '$T D  Q   ;quit if can't get a lock
"RTN","DG53558",76,0)
 . S $P(^XTMP(NAMSPC,0,0),U,5)="NO LOCK GAINED"
"RTN","DG53558",77,0)
 N QQ,ZTSTOP,XREC,MTIEN,DIK,DA,IVMTOT,IVMPUR,BEGTIME,PURGDT,IVMBAD
"RTN","DG53558",78,0)
 N DFN,TMP,ICDT,MTST,IVMDUPE,COUNT,PRI,TYPE,TYPNAM,DELETED,IVMIEN,PRIM
"RTN","DG53558",79,0)
 N SRCE,TMPIVM,XX,IVMCV,MAX,IVMIEND,IVMPFL,LINK,LTYP,LTNAM,MTVER
"RTN","DG53558",80,0)
 S TESTING=+$G(TESTING)
"RTN","DG53558",81,0)
 ;
"RTN","DG53558",82,0)
 ;get last run info if exists
"RTN","DG53558",83,0)
 S XREC=$G(^XTMP(NAMSPC,0,0))
"RTN","DG53558",84,0)
 S DFN=$P(XREC,U,1)         ;last REC processed
"RTN","DG53558",85,0)
 S IVMTOT=+$P(XREC,U,2)          ;total records processed
"RTN","DG53558",86,0)
 S IVMPUR=+$P(XREC,U,3)          ;total dupe records purged
"RTN","DG53558",87,0)
 S IVMBAD=+$P(XREC,U,7)          ;total bad records purged
"RTN","DG53558",88,0)
 S IVMPFL=+$P(XREC,U,8)          ;total PRIM records flipped
"RTN","DG53558",89,0)
 S IVMDUPE=IVMPUR
"RTN","DG53558",90,0)
 ;
"RTN","DG53558",91,0)
 ;setup XTMP according to stds. & for 60 day expiration
"RTN","DG53558",92,0)
 D SETUPX^DG53558M(60)
"RTN","DG53558",93,0)
 ;
"RTN","DG53558",94,0)
 ;init status field and start date & time if null
"RTN","DG53558",95,0)
 S $P(^XTMP(NAMSPC,0,0),U,5,6)="RUNNING^"
"RTN","DG53558",96,0)
 S:$P(^XTMP(NAMSPC,0,0),U,4)="" $P(^XTMP(NAMSPC,0,0),U,4)=$$NOW^XLFDT
"RTN","DG53558",97,0)
 ;
"RTN","DG53558",98,0)
 ;drive through "C" XREF level of  MT  file
"RTN","DG53558",99,0)
 S ZTSTOP=0,DELETED=0
"RTN","DG53558",100,0)
 F QQ=1:1 S DFN=$O(^DGMT(408.31,"C",DFN)) Q:'DFN  D  Q:ZTSTOP
"RTN","DG53558",101,0)
 . I $G(CHKPNT)>1,IVMPUR>IVMDUPE,IVMPUR-CHKPNT>IVMDUPE S ZTSTOP=1 Q
"RTN","DG53558",102,0)
 . K TMP,TMPIVM
"RTN","DG53558",103,0)
 . S IVMTOT=IVMTOT+1
"RTN","DG53558",104,0)
 . ;
"RTN","DG53558",105,0)
 . ;build local TMP and prioritize dupes
"RTN","DG53558",106,0)
 . S MTIEN=0
"RTN","DG53558",107,0)
 . F  S MTIEN=$O(^DGMT(408.31,"C",DFN,MTIEN)) Q:'MTIEN  D
"RTN","DG53558",108,0)
 . . I '$D(^DGMT(408.31,MTIEN,0)) K ^DGMT(408.31,"C",DFN,MTIEN) Q
"RTN","DG53558",109,0)
 . . S ICDT=$P(^DGMT(408.31,MTIEN,0),"^",1)
"RTN","DG53558",110,0)
 . . S MTST=$P(^DGMT(408.31,MTIEN,0),"^",3)
"RTN","DG53558",111,0)
 . . S PRI=+$G(^DGMT(408.31,MTIEN,"PRIM"))
"RTN","DG53558",112,0)
 . . S SRCE=+$P(^DGMT(408.31,MTIEN,0),"^",23)
"RTN","DG53558",113,0)
 . . S MTVER=+$P($G(^DGMT(408.31,MTIEN,2)),"^",11)
"RTN","DG53558",114,0)
 . . S MAX=0
"RTN","DG53558",115,0)
 . . S:$D(^DGMT(408.31,MTIEN,"C")) MAX=$O(^DGMT(408.31,MTIEN,"C",""),-1)
"RTN","DG53558",116,0)
 . . S IVMCV=0               ;init IVM converted flag to no DG*5.3*579
"RTN","DG53558",117,0)
 . . F XX=1:1:MAX D  Q:IVMCV
"RTN","DG53558",118,0)
 . . . S:^DGMT(408.31,MTIEN,"C",XX,0)["Z06 MT via Edb" IVMCV=1
"RTN","DG53558",119,0)
 . . I SRCE=2,IVMCV D                     ;IVM converted test from EDB
"RTN","DG53558",120,0)
 . . . S TMPIVM(DFN,ICDT,MTST)=MTIEN,TMPIVM(DFN,ICDT)=MTIEN
"RTN","DG53558",121,0)
 . . . S PRI=1                            ;set as PRIMARY
"RTN","DG53558",122,0)
 . . ;
"RTN","DG53558",123,0)
 . . ;test for null MT status & flag as BAD and delete
"RTN","DG53558",124,0)
 . . I MTST="" D  Q
"RTN","DG53558",125,0)
 . . . S TYPE=$P($G(^DGMT(408.31,MTIEN,0)),"^",19),TYPNAM=""
"RTN","DG53558",126,0)
 . . . S:TYPE]"" TYPNAM=$G(^DG(408.33,TYPE,0))
"RTN","DG53558",127,0)
 . . . D DELBAD(MTIEN,DFN,.IVMBAD,.DELETED)
"RTN","DG53558",128,0)
 . . . Q:'DELETED
"RTN","DG53558",129,0)
 . . . S ^XTMP(NAMSPC,DFN,ICDT,MTVER,999999,MTIEN,"BAD")=TYPE
"RTN","DG53558",130,0)
 . . . S ^XTMP(NAMSPC_".DET",DFN,ICDT,MTVER,MTIEN,"BAD")=TYPNAM
"RTN","DG53558",131,0)
 . . . S $P(^XTMP(NAMSPC,0,0),U,7)=IVMBAD
"RTN","DG53558",132,0)
 . . ;
"RTN","DG53558",133,0)
 . . S COUNT=+$G(TMP(DFN,ICDT,MTVER,MTST))+1 ;DG*5.3*945 - insert MTVER node
"RTN","DG53558",134,0)
 . . S TMP(DFN,ICDT,MTVER,MTST)=COUNT
"RTN","DG53558",135,0)
 . . S TMP(DFN,ICDT,MTVER,MTST,MTIEN)=PRI
"RTN","DG53558",136,0)
 . . S:PRI TMP(DFN,ICDT,MTVER,MTST,"P")=MTIEN
"RTN","DG53558",137,0)
 . ;
"RTN","DG53558",138,0)
 . D CLNDUPS^DG53558N(DFN)
"RTN","DG53558",139,0)
 . ;update last processed info
"RTN","DG53558",140,0)
 . S $P(^XTMP(NAMSPC,0,0),U,1,3)=DFN_U_IVMTOT_U_IVMPUR
"RTN","DG53558",141,0)
 . S $P(^XTMP(NAMSPC,0,0),U,7,8)=IVMBAD_U_IVMPFL
"RTN","DG53558",142,0)
 . ;
"RTN","DG53558",143,0)
 . ;check for stop request after every 100 processed DFN recs
"RTN","DG53558",144,0)
 . I QQ#100=0 D
"RTN","DG53558",145,0)
 . . S:$$S^%ZTLOAD ZTSTOP=1
"RTN","DG53558",146,0)
 . . I $D(^XTMP(NAMSPC,0,"STOP")) S ZTSTOP=1 K ^XTMP(NAMSPC,0,"STOP")
"RTN","DG53558",147,0)
 ;
"RTN","DG53558",148,0)
 ;set status and mail stats
"RTN","DG53558",149,0)
 I ZTSTOP S $P(^XTMP(NAMSPC,0,0),U,5,6)="STOPPED"_U_$$NOW^XLFDT
"RTN","DG53558",150,0)
 E  S $P(^XTMP(NAMSPC,0,0),U,5,6)="COMPLETED"_U_$$NOW^XLFDT
"RTN","DG53558",151,0)
 D MAIL^DG53558M
"RTN","DG53558",152,0)
 K TESTING
"RTN","DG53558",153,0)
 L -^XTMP($$NAMSPC)
"RTN","DG53558",154,0)
 Q
"RTN","DG53558",155,0)
 ;
"RTN","DG53558",156,0)
 ;DG*5.3*579 released SETPRIM and 688 moved it to DG53558M
"RTN","DG53558",157,0)
 ;
"RTN","DG53558",158,0)
DELBAD(IEN,DFN,PUR,DELETED) ; Kill Bad test
"RTN","DG53558",159,0)
 S DELETED=0
"RTN","DG53558",160,0)
 Q:'$G(IEN)
"RTN","DG53558",161,0)
 S TESTING=+$G(TESTING,1),DFN=$G(DFN)
"RTN","DG53558",162,0)
 I 'TESTING S DELETED=$$DEL^DG53558M(IEN,.LINK,DFN)
"RTN","DG53558",163,0)
 S:TESTING DELETED=1
"RTN","DG53558",164,0)
 Q:'DELETED
"RTN","DG53558",165,0)
 S IVMBAD=IVMBAD+1
"RTN","DG53558",166,0)
 I '$D(ZTQUEUED) W !,"Deleting BAD IEN in 408.31 > ",IEN," for DFN > ",DFN
"RTN","DG53558",167,0)
 Q
"RTN","DG53558",168,0)
 ;
"RTN","DG53558",169,0)
CHKSTAT(POST) ;check if job is running, stopped, or completed
"RTN","DG53558",170,0)
 N Y,DUOUT,DTOUT,QUIT,STAT,STIME,NAMSPC
"RTN","DG53558",171,0)
 S QUIT=0
"RTN","DG53558",172,0)
 S NAMSPC=$$NAMSPC
"RTN","DG53558",173,0)
 L +^XTMP(NAMSPC):1
"RTN","DG53558",174,0)
 I '$T D BMES^XPDUTL("*** ALREADY RUNNING ***") Q 1
"RTN","DG53558",175,0)
 ;
"RTN","DG53558",176,0)
 ; get job status
"RTN","DG53558",177,0)
 S STAT=$P($G(^XTMP(NAMSPC,0,0)),U,5)
"RTN","DG53558",178,0)
 S STIME=$P($G(^XTMP(NAMSPC,0,0)),U,6)
"RTN","DG53558",179,0)
 ;
"RTN","DG53558",180,0)
 I POST D KILIT Q 0                                     ;DG*5.3*579
"RTN","DG53558",181,0)
 ;
"RTN","DG53558",182,0)
 ;if job Completed and run from menu opt, ask to Re-Run
"RTN","DG53558",183,0)
 I STAT="COMPLETED" D
"RTN","DG53558",184,0)
 . W " was Completed on "_$$FMTE^XLFDT(STIME)
"RTN","DG53558",185,0)
 . W !,"  Do you want to Re-Run again?"
"RTN","DG53558",186,0)
 . K DIR
"RTN","DG53558",187,0)
 . S DIR("?",1)="  Entering Y, will delete the XTMP global where the previous cleanup"
"RTN","DG53558",188,0)
 . S DIR("?")="  information was stored and begin a new job, or N to cancel request"
"RTN","DG53558",189,0)
 . S DIR(0)="Y" D ^DIR
"RTN","DG53558",190,0)
 . I 'Y S QUIT=1 Q
"RTN","DG53558",191,0)
 . W !," ARE YOU SURE?"
"RTN","DG53558",192,0)
 . K DIR
"RTN","DG53558",193,0)
 . S DIR("?")="Enter Y to begin a new Job or N to cancel request"
"RTN","DG53558",194,0)
 . S DIR(0)="Y" D ^DIR
"RTN","DG53558",195,0)
 . I 'Y S QUIT=1 Q
"RTN","DG53558",196,0)
 . ;fall thru to re-run mode, kill ^XTMPs
"RTN","DG53558",197,0)
 . D KILIT
"RTN","DG53558",198,0)
 Q QUIT
"RTN","DG53558",199,0)
 ;
"RTN","DG53558",200,0)
KILIT ; kill Xtmp work files for a re-run
"RTN","DG53558",201,0)
 S:'$D(NAMSPC) NAMSPC=$$NAMSPC^DG53558
"RTN","DG53558",202,0)
 K ^XTMP(NAMSPC),^XTMP(NAMSPC_".DET")
"RTN","DG53558",203,0)
 Q
"RTN","DG53558",204,0)
 ;
"RTN","DG53558",205,0)
STOP ; alternate stop method
"RTN","DG53558",206,0)
 S ^XTMP($$NAMSPC,0,"STOP")=""
"RTN","DG53558",207,0)
 Q
"RTN","DG53558",208,0)
 ;
"RTN","DG53558",209,0)
NAMSPC() ; Return a consistent name space variable
"RTN","DG53558",210,0)
 Q "DG53558"
"RTN","DG53558N")
0^3^B10096856^B9470625
"RTN","DG53558N",1,0)
DG53558N ;ALB/GN/GTS - DG*5.3*558 CLEANUP FOR DUPE MEANS TEST FILE (cont) ;12/14/05 15:47pm
"RTN","DG53558N",2,0)
 ;;5.3;Registration;**688,945**;Aug 13, 1993;Build 6
"RTN","DG53558N",3,0)
CLNDUPS(DFN) ;
"RTN","DG53558N",4,0)
 ;This code was removed from DG53558 and added here to allow expansion of code in DG53558.
"RTN","DG53558N",5,0)
 ;Entry point to drive through TMP array and delete all Duplicates except last one per day per status
"RTN","DG53558N",6,0)
 ; INPUT - DFN : Patient file IEN
"RTN","DG53558N",7,0)
 ;       - Several local variables
"RTN","DG53558N",8,0)
 ;
"RTN","DG53558N",9,0)
 ; OUTPUT -  Several local and global variables (including TMP, and ^XTMP) (Defined and
"RTN","DG53558N",10,0)
 ;           KILLed by DG53558).
"RTN","DG53558N",11,0)
 ;
"RTN","DG53558N",12,0)
 S ICDT=""
"RTN","DG53558N",13,0)
 F  S ICDT=$O(TMP(DFN,ICDT)) Q:ICDT=""  D
"RTN","DG53558N",14,0)
 . ;
"RTN","DG53558N",15,0)
 . ;if this is the IVM test that is set to not prim, then flip it
"RTN","DG53558N",16,0)
 . S IVMIEND=$G(TMPIVM(DFN,ICDT))  ;DG*5.3*579
"RTN","DG53558N",17,0)
 . I IVMIEND D
"RTN","DG53558N",18,0)
 . . D SETPRIM(IVMIEND,1,.IVMPFL)
"RTN","DG53558N",19,0)
 . . S LINK=$P($G(^DGMT(408.31,IVMIEND,2)),"^",6)
"RTN","DG53558N",20,0)
 . . D:LINK SETPRIM(LINK,1,.IVMPFL)  ;set any linked test to PRIM
"RTN","DG53558N",21,0)
 . ;
"RTN","DG53558N",22,0)
 . S MTVER=""
"RTN","DG53558N",23,0)
 . F  S MTVER=$O(TMP(DFN,ICDT,MTVER)) Q:MTVER=""  D
"RTN","DG53558N",24,0)
 . . ;
"RTN","DG53558N",25,0)
 . . S MTST=""
"RTN","DG53558N",26,0)
 . . F  S MTST=$O(TMP(DFN,ICDT,MTVER,MTST)) Q:MTST=""  D
"RTN","DG53558N",27,0)
 . . .;keep at least one test per day per status, even if not PRIM
"RTN","DG53558N",28,0)
 . . . D:'$D(TMP(DFN,ICDT,MTVER,MTST,"P")) SETPRI(.TMP)
"RTN","DG53558N",29,0)
 . . . ;    drive thru ien's and del dupes
"RTN","DG53558N",30,0)
 . . . S MTIEN=0
"RTN","DG53558N",31,0)
 . . . F  S MTIEN=$O(TMP(DFN,ICDT,MTVER,MTST,MTIEN)) Q:'MTIEN  D
"RTN","DG53558N",32,0)
 . . . . S PRIM=$G(^DGMT(408.31,MTIEN,"PRIM"))
"RTN","DG53558N",33,0)
 . . . . S LINK=$P($G(^DGMT(408.31,MTIEN,2)),"^",6)
"RTN","DG53558N",34,0)
 . . . . ;
"RTN","DG53558N",35,0)
 . . . .;if this ien is primary & it is not the IVM test or Linked to
"RTN","DG53558N",36,0)
 . . . .;the IVM test, then it should be flipped back to Not Primary
"RTN","DG53558N",37,0)
 . . . . I IVMIEND,PRIM,MTIEN'=IVMIEND,LINK'=IVMIEND D     ;DG*5.3*579
"RTN","DG53558N",38,0)
 . . . . . D SETPRIM(MTIEN,0,.IVMPFL)
"RTN","DG53558N",39,0)
 . . . . . S TMP(DFN,ICDT,MTVER,MTST,MTIEN)=0 ;DG*5.3*945 - insert MTVER node
"RTN","DG53558N",40,0)
 . . . .;
"RTN","DG53558N",41,0)
 . . . . I TMP(DFN,ICDT,MTVER,MTST,"P")'=MTIEN D
"RTN","DG53558N",42,0)
 . . . . . S TYPE=$P($G(^DGMT(408.31,MTIEN,0)),"^",19),TYPNAM=""
"RTN","DG53558N",43,0)
 . . . . . S:TYPE]"" TYPNAM=$G(^DG(408.33,TYPE,0))
"RTN","DG53558N",44,0)
 . . . . . D DELMT^DG53558M(MTIEN,DFN,.IVMPUR,.DELETED,.LINK)
"RTN","DG53558N",45,0)
 . . . . . Q:'DELETED
"RTN","DG53558N",46,0)
 . . . . . S ^XTMP(NAMSPC_".DET",DFN,ICDT,MTVER,MTIEN)=TYPNAM
"RTN","DG53558N",47,0)
 . . . . . I LINK,'$D(^DGMT(408.31,LINK,0)) S LINK=0
"RTN","DG53558N",48,0)
 . . . . . Q:'LINK
"RTN","DG53558N",49,0)
 . . . . . S LTYP=$P($G(^DGMT(408.31,LINK,0)),"^",19),LTNAM=""
"RTN","DG53558N",50,0)
 . . . . . S:LTYP LTNAM=$G(^DG(408.33,LTYP,0))
"RTN","DG53558N",51,0)
 . . . . . S ^XTMP(NAMSPC_".DET",DFN,ICDT,MTVER,LINK)=LTNAM
"RTN","DG53558N",52,0)
 . . . . M ^XTMP(NAMSPC,DFN,ICDT,MTVER,MTST)=TMP(DFN,ICDT,MTVER,MTST) ;DG*5.3*945 insert MTVER node
"RTN","DG53558N",53,0)
 Q
"RTN","DG53558N",54,0)
 ;
"RTN","DG53558N",55,0)
 ;DG*5.3*579 released SETPRIM and 688 moved it to this routine.
"RTN","DG53558N",56,0)
SETPRIM(DA,PR,IVMP) ; set an Income Test (in #408.31) to either Prim or Not
"RTN","DG53558N",57,0)
 Q:'$D(DA)!'$D(PR)
"RTN","DG53558N",58,0)
 N DR,DIE,DGDATA,DGPRI
"RTN","DG53558N",59,0)
 S DGPRI=$G(^DGMT(408.31,DA,"PRIM"))
"RTN","DG53558N",60,0)
 Q:DGPRI=PR                               ;quit if already at that sts
"RTN","DG53558N",61,0)
 S IVMP=$G(IVMP)+1
"RTN","DG53558N",62,0)
 S DGDATA="FLIPPED TO "_$S(PR=0:"NOT PRIMARY",1:"PRIMARY")
"RTN","DG53558N",63,0)
 S:$D(NAMSPC) ^XTMP(NAMSPC_".DET",DFN,ICDT,DA)=DGDATA
"RTN","DG53558N",64,0)
 S DR="2////"_PR,DIE="^DGMT(408.31,"
"RTN","DG53558N",65,0)
 D:'$G(TESTING) ^DIE
"RTN","DG53558N",66,0)
 Q
"RTN","DG53558N",67,0)
 ;
"RTN","DG53558N",68,0)
SETPRI(TMP) ;indicate like a primary (in TMP) to avoid it from being deleted
"RTN","DG53558N",69,0)
 N IEN
"RTN","DG53558N",70,0)
 S IEN=$O(TMP(DFN,ICDT,MTVER,MTST,""),-1)
"RTN","DG53558N",71,0)
 S TMP(DFN,ICDT,MTVER,MTST,IEN)=1
"RTN","DG53558N",72,0)
 S TMP(DFN,ICDT,MTVER,MTST,"P")=IEN
"RTN","DG53558N",73,0)
 Q
"VER")
8.0^22.2
"BLD",10832,6)
^840
**END**
**END**

