Released DG*5.3*940 SEQ #831
Extracted from mail message
**KIDS**:DG*5.3*940^

**INSTALL NAME**
DG*5.3*940
"BLD",10208,0)
DG*5.3*940^REGISTRATION^0^3170818^y
"BLD",10208,1,0)
^^1^1^3170601^^
"BLD",10208,1,1,0)
DG*5.3*940 EHBD BUILD 3 UPDATES
"BLD",10208,4,0)
^9.64PA^27.15^2
"BLD",10208,4,27.11,0)
27.11
"BLD",10208,4,27.11,2,0)
^9.641^27.11^1
"BLD",10208,4,27.11,2,27.11,0)
PATIENT ENROLLMENT  (File-top level)
"BLD",10208,4,27.11,2,27.11,1,0)
^9.6411^.13^1
"BLD",10208,4,27.11,2,27.11,1,.13,0)
REASON FOR CLOSED APPLICATION
"BLD",10208,4,27.11,222)
y^y^p^^^^n^^n
"BLD",10208,4,27.11,224)

"BLD",10208,4,27.15,0)
27.15
"BLD",10208,4,27.15,222)
y^y^f^^n^^y^m^n
"BLD",10208,4,"APDD",27.11,27.11)

"BLD",10208,4,"APDD",27.11,27.11,.13)

"BLD",10208,4,"B",27.11,27.11)

"BLD",10208,4,"B",27.15,27.15)

"BLD",10208,6.3)
11
"BLD",10208,"ABPKG")
n
"BLD",10208,"KRN",0)
^9.67PA^779.2^20
"BLD",10208,"KRN",.4,0)
.4
"BLD",10208,"KRN",.401,0)
.401
"BLD",10208,"KRN",.402,0)
.402
"BLD",10208,"KRN",.403,0)
.403
"BLD",10208,"KRN",.5,0)
.5
"BLD",10208,"KRN",.84,0)
.84
"BLD",10208,"KRN",3.6,0)
3.6
"BLD",10208,"KRN",3.8,0)
3.8
"BLD",10208,"KRN",9.2,0)
9.2
"BLD",10208,"KRN",9.8,0)
9.8
"BLD",10208,"KRN",9.8,"NM",0)
^9.68A^11^8
"BLD",10208,"KRN",9.8,"NM",4,0)
DGENA^^0^B26339818
"BLD",10208,"KRN",9.8,"NM",5,0)
DGENA1A^^0^B20462776
"BLD",10208,"KRN",9.8,"NM",6,0)
DGENL1^^0^B75564196
"BLD",10208,"KRN",9.8,"NM",7,0)
DGENU^^0^B48629112
"BLD",10208,"KRN",9.8,"NM",8,0)
DGENUPL2^^0^B83311291
"BLD",10208,"KRN",9.8,"NM",9,0)
DGENUPL8^^0^B19283363
"BLD",10208,"KRN",9.8,"NM",10,0)
DGENA6^^0^B21685346
"BLD",10208,"KRN",9.8,"NM",11,0)
DGRPD^^0^B79894914
"BLD",10208,"KRN",9.8,"NM","B","DGENA",4)

"BLD",10208,"KRN",9.8,"NM","B","DGENA1A",5)

"BLD",10208,"KRN",9.8,"NM","B","DGENA6",10)

"BLD",10208,"KRN",9.8,"NM","B","DGENL1",6)

"BLD",10208,"KRN",9.8,"NM","B","DGENU",7)

"BLD",10208,"KRN",9.8,"NM","B","DGENUPL2",8)

"BLD",10208,"KRN",9.8,"NM","B","DGENUPL8",9)

"BLD",10208,"KRN",9.8,"NM","B","DGRPD",11)

"BLD",10208,"KRN",19,0)
19
"BLD",10208,"KRN",19,"NM",0)
^9.68A^^
"BLD",10208,"KRN",19.1,0)
19.1
"BLD",10208,"KRN",101,0)
101
"BLD",10208,"KRN",409.61,0)
409.61
"BLD",10208,"KRN",771,0)
771
"BLD",10208,"KRN",779.2,0)
779.2
"BLD",10208,"KRN",870,0)
870
"BLD",10208,"KRN",8989.51,0)
8989.51
"BLD",10208,"KRN",8989.52,0)
8989.52
"BLD",10208,"KRN",8994,0)
8994
"BLD",10208,"KRN","B",.4,.4)

"BLD",10208,"KRN","B",.401,.401)

"BLD",10208,"KRN","B",.402,.402)

"BLD",10208,"KRN","B",.403,.403)

"BLD",10208,"KRN","B",.5,.5)

"BLD",10208,"KRN","B",.84,.84)

"BLD",10208,"KRN","B",3.6,3.6)

"BLD",10208,"KRN","B",3.8,3.8)

"BLD",10208,"KRN","B",9.2,9.2)

"BLD",10208,"KRN","B",9.8,9.8)

"BLD",10208,"KRN","B",19,19)

"BLD",10208,"KRN","B",19.1,19.1)

"BLD",10208,"KRN","B",101,101)

"BLD",10208,"KRN","B",409.61,409.61)

"BLD",10208,"KRN","B",771,771)

"BLD",10208,"KRN","B",779.2,779.2)

"BLD",10208,"KRN","B",870,870)

"BLD",10208,"KRN","B",8989.51,8989.51)

"BLD",10208,"KRN","B",8989.52,8989.52)

"BLD",10208,"KRN","B",8994,8994)

"BLD",10208,"QDEF")
^^^^NO^^^^NO^^YES
"BLD",10208,"QUES",0)
^9.62^^
"BLD",10208,"REQB",0)
^9.611^4^3
"BLD",10208,"REQB",2,0)
DG*5.3*934^1
"BLD",10208,"REQB",3,0)
DG*5.3*909^1
"BLD",10208,"REQB",4,0)
DG*5.3*936^1
"BLD",10208,"REQB","B","DG*5.3*909",3)

"BLD",10208,"REQB","B","DG*5.3*934",2)

"BLD",10208,"REQB","B","DG*5.3*936",4)

"DATA",27.15,1,0)
UNVERIFIED^P
"DATA",27.15,2,0)
VERIFIED^E
"DATA",27.15,3,0)
INACTIVE
"DATA",27.15,4,0)
REJECTED
"DATA",27.15,5,0)
SUSPENDED
"DATA",27.15,6,0)
DECEASED^N
"DATA",27.15,7,0)
CANCELLED/DECLINED^N
"DATA",27.15,8,0)
EXPIRED
"DATA",27.15,9,0)
PENDING^P
"DATA",27.15,10,0)
NOT ELIGIBLE^N
"DATA",27.15,11,0)
REJECTED; FISCAL YEAR^N
"DATA",27.15,12,0)
REJECTED; MID-CYCLE^N
"DATA",27.15,13,0)
REJECTED; STOP NEW ENROLLMENTS^N
"DATA",27.15,14,0)
REJECTED; INITIAL APPLICATION BY VAMC^N
"DATA",27.15,15,0)
PENDING; NO ELIGIBILITY CODE^P
"DATA",27.15,16,0)
PENDING; MEANS TEST REQUIRED^P
"DATA",27.15,17,0)
PENDING; ELIGIBILITY STATUS IS UNVERIFIED^P
"DATA",27.15,18,0)
PENDING; OTHER^P
"DATA",27.15,19,0)
NOT ELIGIBLE; REFUSED TO PAY COPAY^N
"DATA",27.15,20,0)
NOT ELIGIBLE; INELIGIBLE DATE^N
"DATA",27.15,21,0)
PENDING; PURPLE HEART UNCONFIRMED^P
"DATA",27.15,22,0)
REJECTED; BELOW ENROLLMENT GROUP THRESHOLD^N
"DATA",27.15,23,0)
NOT APPLICABLE^N
"DATA",27.15,24,0)
CLOSED APPLICATION^N
"FIA",27.11)
PATIENT ENROLLMENT
"FIA",27.11,0)
^DGEN(27.11,
"FIA",27.11,0,0)
27.11OID
"FIA",27.11,0,1)
y^y^p^^^^n^^n
"FIA",27.11,0,10)

"FIA",27.11,0,11)

"FIA",27.11,0,"RLRO")

"FIA",27.11,0,"VR")
5.3^DG
"FIA",27.11,27.11)
1
"FIA",27.11,27.11,.13)

"FIA",27.15)
ENROLLMENT STATUS
"FIA",27.15,0)
^DGEN(27.15,
"FIA",27.15,0,0)
27.15
"FIA",27.15,0,1)
y^y^f^^n^^y^m^n
"FIA",27.15,0,10)

"FIA",27.15,0,11)

"FIA",27.15,0,"RLRO")

"FIA",27.15,0,"VR")
5.3^DG
"FIA",27.15,27.15)
0
"FIA",27.15,27.1525)
0
"MBREQ")
0
"PKG",47,-1)
1^1
"PKG",47,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",47,20,0)
^9.402P^^
"PKG",47,22,0)
^9.49I^1^1
"PKG",47,22,1,0)
5.3^2930813^2960613
"PKG",47,22,1,"PAH",1,0)
940^3170818^101100
"PKG",47,22,1,"PAH",1,1,0)
^^1^1^3170818
"PKG",47,22,1,"PAH",1,1,1,0)
DG*5.3*940 EHBD BUILD 3 UPDATES
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","DGENA")
0^4^B26339818^B24665348
"RTN","DGENA",1,0)
DGENA ;ALB/CJM,ISA/KWP,Zoltan,LBD,CKN,EG,ERC,TDM,JLS - Enrollment API - Retrieve Data ;03 Mar 2015  10:25 AM
"RTN","DGENA",2,0)
 ;;5.3;Registration;**121,122,147,232,314,564,672,659,653,688,841,909,940**;Aug 13, 1993;Build 11
"RTN","DGENA",3,0)
 ;
"RTN","DGENA",4,0)
FINDCUR(DFN) ;
"RTN","DGENA",5,0)
 ;Description: Used to find a patients current enrollment.
"RTN","DGENA",6,0)
 ;Input :
"RTN","DGENA",7,0)
 ;  DFN - Patient IEN
"RTN","DGENA",8,0)
 ;Output:
"RTN","DGENA",9,0)
 ;  Function Value - returns the internal entry number of the patient's
"RTN","DGENA",10,0)
 ;     current enrollment if there is one, NULL otherwise. Checks that
"RTN","DGENA",11,0)
 ;     current enrollment actually belongs to the patient.
"RTN","DGENA",12,0)
 ;
"RTN","DGENA",13,0)
 Q:'$G(DFN) ""
"RTN","DGENA",14,0)
 ;
"RTN","DGENA",15,0)
 N CUR
"RTN","DGENA",16,0)
 S CUR=$P($G(^DPT(DFN,"ENR")),"^")
"RTN","DGENA",17,0)
 I CUR,$P($G(^DGEN(27.11,CUR,0)),"^",2)'=DFN S CUR=""
"RTN","DGENA",18,0)
 Q CUR
"RTN","DGENA",19,0)
 ;
"RTN","DGENA",20,0)
FINDPRI(DGENRIEN) ;
"RTN","DGENA",21,0)
 ;Description: Used to obtain a patient's  enrollment record that was
"RTN","DGENA",22,0)
 ;     prior to the enrollment identified by DGENRIEN.
"RTN","DGENA",23,0)
 ;Input :
"RTN","DGENA",24,0)
 ;  DGENRIEN - this is the internal entry number of a PATIENT ENROLLMENT
"RTN","DGENA",25,0)
 ;     record
"RTN","DGENA",26,0)
 ;Output:
"RTN","DGENA",27,0)
 ;  Function Value - returns the internal entry number of the prior
"RTN","DGENA",28,0)
 ;     enrollment for the patient if there is one, NULL otherwise.
"RTN","DGENA",29,0)
 ;
"RTN","DGENA",30,0)
 Q:'$G(DGENRIEN) ""
"RTN","DGENA",31,0)
 Q $P($G(^DGEN(27.11,DGENRIEN,0)),"^",9)
"RTN","DGENA",32,0)
 ;
"RTN","DGENA",33,0)
ENROLLED(DFN) ;
"RTN","DGENA",34,0)
 ;Description: Returns whether the patient is currently enrolled.
"RTN","DGENA",35,0)
 ;Input:
"RTN","DGENA",36,0)
 ;  DFN - Patient IEN
"RTN","DGENA",37,0)
 ;Output:
"RTN","DGENA",38,0)
 ;  Function Value - returns 1 if the patient is currently enrolled with
"RTN","DGENA",39,0)
 ;     a status of VERIFIED, 0 otherwise
"RTN","DGENA",40,0)
 ;
"RTN","DGENA",41,0)
 N STATUS
"RTN","DGENA",42,0)
 S STATUS=$$STATUS($G(DFN))
"RTN","DGENA",43,0)
 I (STATUS=2) Q 1
"RTN","DGENA",44,0)
 Q 0
"RTN","DGENA",45,0)
 ;
"RTN","DGENA",46,0)
STATUS(DFN) ;
"RTN","DGENA",47,0)
 ;Description: Returns ENROLLMENT STATUS from the patient's current
"RTN","DGENA",48,0)
 ;     enrollment.
"RTN","DGENA",49,0)
 ;Input:
"RTN","DGENA",50,0)
 ;  DFN -  Patient IEN
"RTN","DGENA",51,0)
 ;Output:
"RTN","DGENA",52,0)
 ;  Function Value - If the patient has a current ENROLLMENT STATUS this
"RTN","DGENA",53,0)
 ;     function will return its value, otherwise it returns NULL.
"RTN","DGENA",54,0)
 N DGENRIEN
"RTN","DGENA",55,0)
 S DGENRIEN=$$FINDCUR($G(DFN))
"RTN","DGENA",56,0)
 Q:'DGENRIEN ""
"RTN","DGENA",57,0)
 Q $P($G(^DGEN(27.11,DGENRIEN,0)),"^",4)
"RTN","DGENA",58,0)
 ;
"RTN","DGENA",59,0)
PRIORITY(DFN) ;
"RTN","DGENA",60,0)
 ;Description: Returns ENROLLMENT PRIORITY from the patient's current
"RTN","DGENA",61,0)
 ;     enrollment.
"RTN","DGENA",62,0)
 ;Input:
"RTN","DGENA",63,0)
 ;  DFN -  Patient IEN
"RTN","DGENA",64,0)
 ;Output:
"RTN","DGENA",65,0)
 ;  Function Value - If the patient has a current ENROLLMENT PRIORITY
"RTN","DGENA",66,0)
 ;     this function will return its value, otherwise it returns NULL.
"RTN","DGENA",67,0)
 N DGENRIEN
"RTN","DGENA",68,0)
 S DGENRIEN=$$FINDCUR($G(DFN))
"RTN","DGENA",69,0)
 Q:'DGENRIEN ""
"RTN","DGENA",70,0)
 Q $P($G(^DGEN(27.11,DGENRIEN,0)),"^",7)
"RTN","DGENA",71,0)
 ;
"RTN","DGENA",72,0)
SOURCE(DFN) ;
"RTN","DGENA",73,0)
 ;Description: Returns SOURCE OF ENROLLMENT from the patient's current
"RTN","DGENA",74,0)
 ;     enrollment.
"RTN","DGENA",75,0)
 ;Input:
"RTN","DGENA",76,0)
 ;  DFN -  Patient IEN
"RTN","DGENA",77,0)
 ;Output:
"RTN","DGENA",78,0)
 ;  Function Value - If the patient has a current ENROLLMENT 
"RTN","DGENA",79,0)
 ;     this function will return the SOURCE OF ENROLLMENT, otherwise
"RTN","DGENA",80,0)
 ;     it returns NULL.
"RTN","DGENA",81,0)
 ;
"RTN","DGENA",82,0)
 N DGENRIEN
"RTN","DGENA",83,0)
 S DGENRIEN=$$FINDCUR($G(DFN))
"RTN","DGENA",84,0)
 Q:'DGENRIEN ""
"RTN","DGENA",85,0)
 Q $P($G(^DGEN(27.11,DGENRIEN,0)),"^",3)
"RTN","DGENA",86,0)
 ;
"RTN","DGENA",87,0)
GET(DGENRIEN,DGENR) ;
"RTN","DGENA",88,0)
 ;Description: Used to obtain a record from the Patient Enrollment file
"RTN","DGENA",89,0)
 ;     into the local DGENR array.
"RTN","DGENA",90,0)
 ;Input :
"RTN","DGENA",91,0)
 ;  DGENRIEN - this is the internal entry number of a PATIENT ENROLLMENT record
"RTN","DGENA",92,0)
 ;Output:
"RTN","DGENA",93,0)
 ;  Function  Value - returns 1 on success, 0 on failure.
"RTN","DGENA",94,0)
 ;  DGENR - this is the name of  a local array, it should be passed by
"RTN","DGENA",95,0)
 ;     reference. If the function is successful this array will
"RTN","DGENA",96,0)
 ;     contain the enrollment.
"RTN","DGENA",97,0)
 ;
"RTN","DGENA",98,0)
 ;      subscript      field name
"RTN","DGENA",99,0)
 ;     "APP"           Enrollment Application Date
"RTN","DGENA",100,0)
 ;     "DATE"          Enrollment Date
"RTN","DGENA",101,0)
 ;     "END"           Enrollment End Date
"RTN","DGENA",102,0)
 ;     "DFN"           Patient IEN
"RTN","DGENA",103,0)
 ;     "SOURCE"        Enrollment Source
"RTN","DGENA",104,0)
 ;     "STATUS"        Enrollment Status
"RTN","DGENA",105,0)
 ;     "REASON"        Reason Canceled/Declined
"RTN","DGENA",106,0)
 ;     "REMARKS"       Canceled/Declined Remarks
"RTN","DGENA",107,0)
 ;     "FACREC"        Facility Received
"RTN","DGENA",108,0)
 ;     "PRIORITY"      Enrollment Priority
"RTN","DGENA",109,0)
 ;     "SUBGRP"        Enrollment Sub-Group
"RTN","DGENA",110,0)
 ;     "RCODE"         Reason for Closed Application ;;DJE DG*5.3*940 - Closed Application
"RTN","DGENA",111,0)
 ;     "EFFDATE"       Effective Date
"RTN","DGENA",112,0)
 ;     "PRIORREC"      Prior Enrollment Record
"RTN","DGENA",113,0)
 ;     "ELIG","CODE"            Primary Eligibility Code
"RTN","DGENA",114,0)
 ;     "ELIG","CODE",<code ien> Eligibility Codes
"RTN","DGENA",115,0)
 ;     "ELIG","SC"              Service Connected
"RTN","DGENA",116,0)
 ;     "ELIG","SCPER"           Service Connected Percentage
"RTN","DGENA",117,0)
 ;     "ELIG","POW"             POW Status Indicated
"RTN","DGENA",118,0)
 ;     "ELIG","A&A"             Receiving A&A Benefits
"RTN","DGENA",119,0)
 ;     "ELIG","HB"              Receiving Housebound Benefits
"RTN","DGENA",120,0)
 ;     "ELIG","VAPEN"           Receiving a VA Pension
"RTN","DGENA",121,0)
 ;     "ELIG","VACKAMT"         Total Annual VA Check Amount
"RTN","DGENA",122,0)
 ;     "ELIG","DISRET"          Military Disability Retirement
"RTN","DGENA",123,0)
 ;     "ELIG","DISLOD"          Discharged Due to Disability
"RTN","DGENA",124,0)
 ;     "ELIG","MEDICAID"        Medicaid
"RTN","DGENA",125,0)
 ;     "ELIG","AO"              Exposed to Agent Orange
"RTN","DGENA",126,0)
 ;     "ELIG","AOEXPLOC"        Agent Orange Exposure Location
"RTN","DGENA",127,0)
 ;     "ELIG","IR"              Radiation Exposure Indicated
"RTN","DGENA",128,0)
 ;     "ELIG","RADEXPM"         Radiation Exposure Method
"RTN","DGENA",129,0)
 ;     "ELIG","EC"              SW Asia Cond - was Env Con, DG*5.3*688
"RTN","DGENA",130,0)
 ;     "ELIG","MTSTA"           Means Test Status
"RTN","DGENA",131,0)
 ;     "ELIG","VCD"             Veteran Catastrophically Disabled?
"RTN","DGENA",132,0)
 ;     "ELIG","PH"              Purple Heart Indicated?
"RTN","DGENA",133,0)
 ;     "ELIG","UNEMPLOY"        Unemployable
"RTN","DGENA",134,0)
 ;     "ELIG","CVELEDT"         Combat Veteran End Date
"RTN","DGENA",135,0)
 ;     "ELIG","SHAD"            SHAD Indicated
"RTN","DGENA",136,0)
 ;     "ELIG","MOH"             Medal of Honor Indicated
"RTN","DGENA",137,0)
 ;     "ELIG","CLE"             Camp Lejeune Indicated?    DG*5.3*909
"RTN","DGENA",138,0)
 ;     "ELIG","CLEDT"           Camp Lejeune Date          DG*5.3*909
"RTN","DGENA",139,0)
 ;     "ELIG","CLEST"           Camp Lejeune Change Site   DG*5.3*909
"RTN","DGENA",140,0)
 ;     "ELIG","CLESOR"          Camp Lejeune Source        DG*5.3*909
"RTN","DGENA",141,0)
 ;     "DATETIME"      Date/Time Entered
"RTN","DGENA",142,0)
 ;     "USER"          Entered By
"RTN","DGENA",143,0)
 ;    
"RTN","DGENA",144,0)
 N SUB,NODE
"RTN","DGENA",145,0)
 I '$G(DGENRIEN) Q 0
"RTN","DGENA",146,0)
 I '$D(^DGEN(27.11,DGENRIEN,0)) Q 0
"RTN","DGENA",147,0)
 K DGENR
"RTN","DGENA",148,0)
 S DGENR=""
"RTN","DGENA",149,0)
 S NODE=$G(^DGEN(27.11,DGENRIEN,0))
"RTN","DGENA",150,0)
 S DGENR("APP")=$P(NODE,"^")
"RTN","DGENA",151,0)
 S DGENR("DATE")=$P(NODE,"^",10)
"RTN","DGENA",152,0)
 S DGENR("END")=$P(NODE,"^",11)
"RTN","DGENA",153,0)
 S DGENR("DFN")=$P(NODE,"^",2)
"RTN","DGENA",154,0)
 S DGENR("SOURCE")=$P(NODE,"^",3)
"RTN","DGENA",155,0)
 S DGENR("STATUS")=$P(NODE,"^",4)
"RTN","DGENA",156,0)
 S DGENR("REASON")=$P(NODE,"^",5)
"RTN","DGENA",157,0)
 S DGENR("FACREC")=$P(NODE,"^",6)
"RTN","DGENA",158,0)
 S DGENR("PRIORITY")=$P(NODE,"^",7)
"RTN","DGENA",159,0)
 S DGENR("EFFDATE")=$P(NODE,"^",8)
"RTN","DGENA",160,0)
 S DGENR("PRIORREC")=$P(NODE,"^",9)
"RTN","DGENA",161,0)
 ;Phase II Get enrollment sub-grp (SRS 6.4)
"RTN","DGENA",162,0)
 S DGENR("SUBGRP")=$P(NODE,"^",12)
"RTN","DGENA",163,0)
 S DGENR("RCODE")=$P(NODE,"^",13) ;DJE field added with DG*5.3*940 - Closed Application - RM#867186
"RTN","DGENA",164,0)
 S NODE=$G(^DGEN(27.11,DGENRIEN,"R"))
"RTN","DGENA",165,0)
 S DGENR("REMARKS")=$P(NODE,"^")
"RTN","DGENA",166,0)
 S NODE=$G(^DGEN(27.11,DGENRIEN,"E"))
"RTN","DGENA",167,0)
 S DGENR("ELIG","CODE")=$P(NODE,"^")
"RTN","DGENA",168,0)
 S DGENR("ELIG","SC")=$P(NODE,"^",2)
"RTN","DGENA",169,0)
 S DGENR("ELIG","SCPER")=$P(NODE,"^",3)
"RTN","DGENA",170,0)
 S DGENR("ELIG","POW")=$P(NODE,"^",4)
"RTN","DGENA",171,0)
 S DGENR("ELIG","A&A")=$P(NODE,"^",5)
"RTN","DGENA",172,0)
 S DGENR("ELIG","HB")=$P(NODE,"^",6)
"RTN","DGENA",173,0)
 S DGENR("ELIG","VAPEN")=$P(NODE,"^",7)
"RTN","DGENA",174,0)
 S DGENR("ELIG","VACKAMT")=$P(NODE,"^",8)
"RTN","DGENA",175,0)
 S DGENR("ELIG","DISRET")=$P(NODE,"^",9)
"RTN","DGENA",176,0)
 S DGENR("ELIG","DISLOD")=$P(NODE,"^",20)  ;added with DG*5.3*672
"RTN","DGENA",177,0)
 S DGENR("ELIG","MEDICAID")=$P(NODE,"^",10)
"RTN","DGENA",178,0)
 S DGENR("ELIG","AO")=$P(NODE,"^",11)
"RTN","DGENA",179,0)
 S DGENR("ELIG","AOEXPLOC")=$P(NODE,"^",22)  ;added with DG*5.3*688
"RTN","DGENA",180,0)
 S DGENR("ELIG","IR")=$P(NODE,"^",12)
"RTN","DGENA",181,0)
 S DGENR("ELIG","EC")=$P(NODE,"^",13)
"RTN","DGENA",182,0)
 S DGENR("ELIG","MTSTA")=$P(NODE,"^",14)
"RTN","DGENA",183,0)
 S DGENR("ELIG","VCD")=$P(NODE,"^",15)
"RTN","DGENA",184,0)
 S DGENR("ELIG","PH")=$P(NODE,"^",16)
"RTN","DGENA",185,0)
 S DGENR("ELIG","UNEMPLOY")=$P(NODE,"^",17)
"RTN","DGENA",186,0)
 S DGENR("ELIG","CVELEDT")=$P(NODE,"^",18)
"RTN","DGENA",187,0)
 S DGENR("ELIG","SHAD")=$P(NODE,"^",19)
"RTN","DGENA",188,0)
 S DGENR("ELIG","RADEXPM")=$P(NODE,"^",21)
"RTN","DGENA",189,0)
 S DGENR("ELIG","MOH")=$P(NODE,"^",23)
"RTN","DGENA",190,0)
 S DGENR("ELIG","CLE")=$P(NODE,"^",24)      ;added with DG*5.3*909
"RTN","DGENA",191,0)
 S DGENR("ELIG","CLEDT")=$P(NODE,"^",25)    ;added with DG*5.3*909
"RTN","DGENA",192,0)
 S DGENR("ELIG","CLEST")=$P(NODE,"^",26)    ;added with DG*5.3*909
"RTN","DGENA",193,0)
 S DGENR("ELIG","CLESOR")=$P(NODE,"^",27)   ;added with DG*5.3*909
"RTN","DGENA",194,0)
 ;S DGENCDZZ=1 ; for CD Testing (disabled).
"RTN","DGENA",195,0)
 S NODE=$G(^DGEN(27.11,DGENRIEN,"U"))
"RTN","DGENA",196,0)
 S DGENR("DATETIME")=$P(NODE,"^")
"RTN","DGENA",197,0)
 S DGENR("USER")=$P(NODE,"^",2)
"RTN","DGENA",198,0)
 Q 1
"RTN","DGENA",199,0)
 ;
"RTN","DGENA1A")
0^5^B20462776^B18101095
"RTN","DGENA1A",1,0)
DGENA1A ;ALB/CJM,ISA/KWP,Zoltan,LBD,EG,CKN,ERC,TDM,JLS - Enrollment API - File Data Continued ;5/10/11 12:03pm
"RTN","DGENA1A",2,0)
 ;;5.3;Registration;**121,147,232,314,564,672,659,653,688,841,909,940**;Aug 13,1993;Build 11
"RTN","DGENA1A",3,0)
 ;
"RTN","DGENA1A",4,0)
KILLALL(DGENRIEN) ;
"RTN","DGENA1A",5,0)
 ;kills all x-refs on the record in the Patient Enrollment file
"RTN","DGENA1A",6,0)
 ;pointed to by DGENRIEN
"RTN","DGENA1A",7,0)
 ;
"RTN","DGENA1A",8,0)
 N DGENR,SUB,VALUE
"RTN","DGENA1A",9,0)
 Q:'$G(DGENRIEN)
"RTN","DGENA1A",10,0)
 Q:'$$GET^DGENA(DGENRIEN,.DGENR)
"RTN","DGENA1A",11,0)
 S SUB=""
"RTN","DGENA1A",12,0)
 F  S SUB=$O(DGENR(SUB)) Q:SUB=""  D
"RTN","DGENA1A",13,0)
 .Q:(SUB="ELIG")
"RTN","DGENA1A",14,0)
 .Q:DGENR(SUB)=""
"RTN","DGENA1A",15,0)
 .D KILL(27.11,DGENRIEN,$$FIELD^DGENU(SUB),DGENR(SUB))
"RTN","DGENA1A",16,0)
 S SUB=""
"RTN","DGENA1A",17,0)
 F  S SUB=$O(DGENR("ELIG",SUB)) Q:SUB=""  D
"RTN","DGENA1A",18,0)
 .Q:DGENR("ELIG",SUB)=""
"RTN","DGENA1A",19,0)
 .D KILL(27.11,DGENRIEN,$$FIELD^DGENU(SUB),DGENR("ELIG",SUB))
"RTN","DGENA1A",20,0)
 Q
"RTN","DGENA1A",21,0)
 ;
"RTN","DGENA1A",22,0)
SETALL(DGENRIEN,DGENR) ;
"RTN","DGENA1A",23,0)
 ;Sets all x-refs on the record in the Patient Enrollment file.
"RTN","DGENA1A",24,0)
 ;Inputs:
"RTN","DGENA1A",25,0)
 ;  DGENRIEN - pointer to PATIENT ENROLLMENT file
"RTN","DGENA1A",26,0)
 ;  DGENR - array containing the record, pass by reference
"RTN","DGENA1A",27,0)
 ;
"RTN","DGENA1A",28,0)
 N SUB,VALUE
"RTN","DGENA1A",29,0)
 Q:'$G(DGENRIEN)
"RTN","DGENA1A",30,0)
 Q:'$D(DGENR)
"RTN","DGENA1A",31,0)
 ;
"RTN","DGENA1A",32,0)
 S SUB=""
"RTN","DGENA1A",33,0)
 F  S SUB=$O(DGENR(SUB)) Q:SUB=""  D
"RTN","DGENA1A",34,0)
 .Q:(SUB="ELIG")
"RTN","DGENA1A",35,0)
 .Q:DGENR(SUB)=""
"RTN","DGENA1A",36,0)
 .D SET(27.11,DGENRIEN,$$FIELD^DGENU(SUB),DGENR(SUB))
"RTN","DGENA1A",37,0)
 S SUB=""
"RTN","DGENA1A",38,0)
 F  S SUB=$O(DGENR("ELIG",SUB)) Q:SUB=""  D
"RTN","DGENA1A",39,0)
 .Q:DGENR("ELIG",SUB)=""
"RTN","DGENA1A",40,0)
 .D SET(27.11,DGENRIEN,$$FIELD^DGENU(SUB),DGENR("ELIG",SUB))
"RTN","DGENA1A",41,0)
 Q
"RTN","DGENA1A",42,0)
 ;
"RTN","DGENA1A",43,0)
KILL(FILE,IEN,FIELD,VALUE) ;
"RTN","DGENA1A",44,0)
 ;executes all the kill logic for x-refs on the field=FIELD for the
"RTN","DGENA1A",45,0)
 ;record=DGENRIEN for the file=FILE for the field value=VALUE
"RTN","DGENA1A",46,0)
 ;
"RTN","DGENA1A",47,0)
 N D0,DA,DIV,DGIX,X
"RTN","DGENA1A",48,0)
 S DA=IEN,X=VALUE,DGIX=0
"RTN","DGENA1A",49,0)
 F  S DGIX=$O(^DD(FILE,FIELD,1,DGIX)) Q:'DGIX  X ^(DGIX,2) S X=VALUE
"RTN","DGENA1A",50,0)
 Q
"RTN","DGENA1A",51,0)
 ;
"RTN","DGENA1A",52,0)
SET(FILE,IEN,FIELD,VALUE) ;
"RTN","DGENA1A",53,0)
 ;executes all the set logic for x-refs on the field=FIELD for the
"RTN","DGENA1A",54,0)
 ;record=DGENRIEN for the file=FILE for the field value=VALUE
"RTN","DGENA1A",55,0)
 ;
"RTN","DGENA1A",56,0)
 N D0,DA,DIV,DGIX,X
"RTN","DGENA1A",57,0)
 S DA=IEN,X=VALUE,DGIX=0
"RTN","DGENA1A",58,0)
 F  S DGIX=$O(^DD(FILE,FIELD,1,DGIX)) Q:'DGIX  X ^(DGIX,1)
"RTN","DGENA1A",59,0)
 Q
"RTN","DGENA1A",60,0)
 ;
"RTN","DGENA1A",61,0)
EDIT(DA,DGENR) ;
"RTN","DGENA1A",62,0)
 ;Description: Overlays a currently existing record, ien=DA, with values
"RTN","DGENA1A",63,0)
 ;     from DGENR array
"RTN","DGENA1A",64,0)
 ;Input -
"RTN","DGENA1A",65,0)
 ;  DA - ien of record in Patient Enrollment file
"RTN","DGENA1A",66,0)
 ;  DGENR - array containing an enrollment, pass by reference
"RTN","DGENA1A",67,0)
 ;Output - 1 on success, 0 on failure
"RTN","DGENA1A",68,0)
 ;
"RTN","DGENA1A",69,0)
 ; *** NOTE: This is called from within FM.  There is a problem in ***
"RTN","DGENA1A",70,0)
 ; *** that ^DIE cannot be used.  Instead, the fields              ***
"RTN","DGENA1A",71,0)
 ; *** are hard-set and cross-referenced.                          ***
"RTN","DGENA1A",72,0)
 ;
"RTN","DGENA1A",73,0)
 N NODE
"RTN","DGENA1A",74,0)
 Q:'$G(DA) 0
"RTN","DGENA1A",75,0)
 S NODE=$G(^DGEN(27.11,$G(DA),0))
"RTN","DGENA1A",76,0)
 Q:NODE="" 0
"RTN","DGENA1A",77,0)
 ;
"RTN","DGENA1A",78,0)
 ;kill off all the cross-references (FM doesn't have an API to do this)
"RTN","DGENA1A",79,0)
 D KILLALL(DA)
"RTN","DGENA1A",80,0)
 ;
"RTN","DGENA1A",81,0)
 ;now hand-set all the fields
"RTN","DGENA1A",82,0)
 ;Phase II Add subgroup to the 12 piece (SRS 6.4)
"RTN","DGENA1A",83,0)
 S NODE=DGENR("APP")_U_DGENR("DFN")_U_DGENR("SOURCE")_U_DGENR("STATUS")_U_DGENR("REASON")_U_DGENR("FACREC")  ;DJE field added with DG*5.3*940 - Closed Application (line split) - RM#867186
"RTN","DGENA1A",84,0)
 S NODE=NODE_U_DGENR("PRIORITY")_U_DGENR("EFFDATE")_U_DGENR("PRIORREC")_U_DGENR("DATE")_U_DGENR("END")_U_DGENR("SUBGRP")_U_DGENR("RCODE") ;DJE field added with DG*5.3*940 - Closed Application - RM#867186
"RTN","DGENA1A",85,0)
 S ^DGEN(27.11,DA,0)=NODE
"RTN","DGENA1A",86,0)
 S ^DGEN(27.11,DA,"R")=DGENR("REMARKS")
"RTN","DGENA1A",87,0)
 S NODE=DGENR("ELIG","CODE")
"RTN","DGENA1A",88,0)
 S NODE=NODE_U_DGENR("ELIG","SC")
"RTN","DGENA1A",89,0)
 S NODE=NODE_U_DGENR("ELIG","SCPER")
"RTN","DGENA1A",90,0)
 S NODE=NODE_U_DGENR("ELIG","POW")
"RTN","DGENA1A",91,0)
 S NODE=NODE_U_DGENR("ELIG","A&A")
"RTN","DGENA1A",92,0)
 S NODE=NODE_U_DGENR("ELIG","HB")
"RTN","DGENA1A",93,0)
 S NODE=NODE_U_DGENR("ELIG","VAPEN")
"RTN","DGENA1A",94,0)
 S NODE=NODE_U_DGENR("ELIG","VACKAMT")
"RTN","DGENA1A",95,0)
 S NODE=NODE_U_DGENR("ELIG","DISRET")
"RTN","DGENA1A",96,0)
 S NODE=NODE_U_DGENR("ELIG","MEDICAID")
"RTN","DGENA1A",97,0)
 S NODE=NODE_U_DGENR("ELIG","AO")
"RTN","DGENA1A",98,0)
 S NODE=NODE_U_DGENR("ELIG","IR")
"RTN","DGENA1A",99,0)
 S NODE=NODE_U_DGENR("ELIG","EC")  ;changed to SW Asia Cond - DG*5.3*688
"RTN","DGENA1A",100,0)
 S NODE=NODE_U_DGENR("ELIG","MTSTA")
"RTN","DGENA1A",101,0)
 S NODE=NODE_U_DGENR("ELIG","VCD")
"RTN","DGENA1A",102,0)
 S NODE=NODE_U_DGENR("ELIG","PH")
"RTN","DGENA1A",103,0)
 S NODE=NODE_U_DGENR("ELIG","UNEMPLOY")
"RTN","DGENA1A",104,0)
 S NODE=NODE_U_DGENR("ELIG","CVELEDT")
"RTN","DGENA1A",105,0)
 S NODE=NODE_U_DGENR("ELIG","SHAD") ;field added with DG*5.3*653
"RTN","DGENA1A",106,0)
 S NODE=NODE_U_DGENR("ELIG","DISLOD") ;field added with DG*5.3*672
"RTN","DGENA1A",107,0)
 S NODE=NODE_U_DGENR("ELIG","RADEXPM")
"RTN","DGENA1A",108,0)
 S NODE=NODE_U_DGENR("ELIG","AOEXPLOC") ;field added with DG*5.3*688
"RTN","DGENA1A",109,0)
 S NODE=NODE_U_DGENR("ELIG","MOH") ;field added with DG*5.3*841
"RTN","DGENA1A",110,0)
 S NODE=NODE_U_DGENR("ELIG","CLE")     ;field added with DG*5.3*909
"RTN","DGENA1A",111,0)
 S NODE=NODE_U_DGENR("ELIG","CLEDT")   ;field added with DG*5.3*909
"RTN","DGENA1A",112,0)
 S NODE=NODE_U_DGENR("ELIG","CLEST")   ;field added with DG*5.3*909
"RTN","DGENA1A",113,0)
 S NODE=NODE_U_DGENR("ELIG","CLESOR")  ;field added with DG*5.3*909
"RTN","DGENA1A",114,0)
 S ^DGEN(27.11,DA,"E")=NODE
"RTN","DGENA1A",115,0)
 S ^DGEN(27.11,DA,"U")=DGENR("DATETIME")_U_DGENR("USER")
"RTN","DGENA1A",116,0)
 ;
"RTN","DGENA1A",117,0)
 ;set the x-refs
"RTN","DGENA1A",118,0)
 D SETALL(DA,.DGENR)
"RTN","DGENA1A",119,0)
 Q 1
"RTN","DGENA6")
0^10^B21685346^B20843063
"RTN","DGENA6",1,0)
DGENA6 ;ALB/CJM,ISA,KWP,RTK,LBD,CKN - Enrollment API to create enrollment record; 04/24/03 ; 8/31/05 2:44pm
"RTN","DGENA6",2,0)
 ;;5.3;Registration;**232,327,417,491,513,672,940**;Aug 13, 1993;Build 11
"RTN","DGENA6",3,0)
 ;
"RTN","DGENA6",4,0)
 ;CREATE line tag moved from DGENA in DG*5.3*232.;MM  
"RTN","DGENA6",5,0)
 ;
"RTN","DGENA6",6,0)
CREATE(DFN,APP,EFFDATE,REASON,REMARKS,DGENR,ENRDATE,END) ;
"RTN","DGENA6",7,0)
 ;Description: Creates a local enrollment as a local array.
"RTN","DGENA6",8,0)
 ;Input :
"RTN","DGENA6",9,0)
 ;  DFN- Patient IEN
"RTN","DGENA6",10,0)
 ;  APP - the Enrollment Application Date to use
"RTN","DGENA6",11,0)
 ;  EFFDATE - the Effective Date, if  NULL assume the same as the
"RTN","DGENA6",12,0)
 ;     Enrollment Date
"RTN","DGENA6",13,0)
 ;  REASON - used to create an enrollment with CANCELLED/DECLINED status,
"RTN","DGENA6",14,0)
 ;     pass in the code for REASON CANCELED/DECLINED
"RTN","DGENA6",15,0)
 ;  REMARKS - if creating an enrollment with CANCELLED/DECLINED status,
"RTN","DGENA6",16,0)
 ;     and the reason is can optionally pass in textual remarks for
"RTN","DGENA6",17,0)
 ;     CANCELED/DECLINED REMARKS 
"RTN","DGENA6",18,0)
 ;  ENRDATE - the Enrollment Date to use (optional)
"RTN","DGENA6",19,0)
 ;  END - the Enrollment End Date to use (optional)
"RTN","DGENA6",20,0)
 ;Output:
"RTN","DGENA6",21,0)
 ;  Function Value - returns 1 if successful, 0 otherwise
"RTN","DGENA6",22,0)
 ;  DGENR - a local array where the enrollment object will be stored,
"RTN","DGENA6",23,0)
 ;     pass by reference
"RTN","DGENA6",24,0)
 ;
"RTN","DGENA6",25,0)
 K DGENR
"RTN","DGENA6",26,0)
 S DGENR=""
"RTN","DGENA6",27,0)
 N DGELGSUB,PRIORITY,DEATH,PRIGRP,DODUPD
"RTN","DGENA6",28,0)
 ;Re-Enrollment - var PRIGRP contains priority and subgroup
"RTN","DGENA6",29,0)
 S PRIGRP=$$PRIORITY^DGENELA4(DFN,,.DGELGSUB,$G(ENRDATE),$G(APP))
"RTN","DGENA6",30,0)
 S PRIORITY=$P(PRIGRP,"^")  ; Re-Enrollment - Priority is first piece
"RTN","DGENA6",31,0)
 S DGENR("APP")=$G(APP)
"RTN","DGENA6",32,0)
 S DGENR("DATE")=$G(ENRDATE)
"RTN","DGENA6",33,0)
 S DGENR("END")=$G(END)
"RTN","DGENA6",34,0)
 S DGENR("DFN")=DFN
"RTN","DGENA6",35,0)
 S DGENR("SOURCE")=1
"RTN","DGENA6",36,0)
 D  ;drops out of block when status is determined
"RTN","DGENA6",37,0)
 .I $G(REASON) D  Q
"RTN","DGENA6",38,0)
 ..S DGENR("STATUS")=7,DGENR("REMARKS")=$G(REMARKS),DGENR("REASON")=REASON ;CANCELED/DECLINED
"RTN","DGENA6",39,0)
 .E  S DGENR("REMARKS")="",DGENR("REASON")=""
"RTN","DGENA6",40,0)
 .S DEATH=$$DEATH^DGENPTA(DFN)
"RTN","DGENA6",41,0)
 .I DEATH D  Q
"RTN","DGENA6",42,0)
 ..S DGENR("STATUS")=6 ;DECEASED
"RTN","DGENA6",43,0)
 ..S DGENR("END")=DEATH
"RTN","DGENA6",44,0)
 ..S DODUPD=$P($G(^DPT(DFN,.35)),"^",4) ;Get Date of Death last updated date
"RTN","DGENA6",45,0)
 ..;S EFFDATE=DEATH ;Removed - DG*5.3*672
"RTN","DGENA6",46,0)
 ..S EFFDATE=$S($G(DODUPD)'="":DODUPD,1:DT) ;DG*5.3*672
"RTN","DGENA6",47,0)
 ..;Find patient's current enrollment record
"RTN","DGENA6",48,0)
 ..N DGENRIEN,DGENRC
"RTN","DGENA6",49,0)
 ..S DGENRIEN=$$FINDCUR^DGENA(DFN)
"RTN","DGENA6",50,0)
 ..S DGENRC=$$GET^DGENA(DGENRIEN,.DGENRC)
"RTN","DGENA6",51,0)
 ..S DGENR("DATE")=$S($G(DGENRC("DATE"))'="":DGENRC("DATE"),1:"")  ;enrollment date
"RTN","DGENA6",52,0)
 .I '$$VET^DGENPTA(DFN) D  Q  ;NOT ELIGIBLE
"RTN","DGENA6",53,0)
 ..N DGPAT,DGENRIEN,DGENRC
"RTN","DGENA6",54,0)
 ..S DGENR("STATUS")=20 ;new status for Ineligible Project
"RTN","DGENA6",55,0)
 ..;Find patient's current enrollment record
"RTN","DGENA6",56,0)
 ..S DGENRIEN=$$FINDCUR^DGENA(DFN)
"RTN","DGENA6",57,0)
 ..S DGENRC=$$GET^DGENA(DGENRIEN,.DGENRC)
"RTN","DGENA6",58,0)
 ..S DGENR("DATE")=$S($G(DGENRC("DATE"))'="":DGENRC("DATE"),1:"")  ;enrollment date
"RTN","DGENA6",59,0)
 ..;Phase II The TESTVAL was moved from DGENA1 to DGENA3 (SRS 6.5.2.1)
"RTN","DGENA6",60,0)
 ..;if vet has an Ineligible Date then the Effective Date should be the later of the Ineligible Date or App Date
"RTN","DGENA6",61,0)
 ..I $$GET^DGENPTA(DFN,.DGENPTA),DGENPTA("INELDATE"),$$TESTVAL^DGENA3("EFFDATE",DGENPTA("INELDATE")),DGENRC=1 S EFFDATE=$G(DGENPTA("INELDATE"))
"RTN","DGENA6",62,0)
 ..I '$G(EFFDATE) S EFFDATE=$G(APP)
"RTN","DGENA6",63,0)
 ..;If currently enrolled, set end date = ineligible date
"RTN","DGENA6",64,0)
 ..I DGENRC=1 S DGENR("END")=$G(DGENPTA("INELDATE"))
"RTN","DGENA6",65,0)
 ..;If not currently enrolled or no ineligible date, set end date = application date
"RTN","DGENA6",66,0)
 ..I '$G(DGENR("END")) S DGENR("END")=$G(APP)
"RTN","DGENA6",67,0)
 .;Determine preliminary enrollment status based on enrollment group threshold
"RTN","DGENA6",68,0)
 .;Get enrollment group threshold
"RTN","DGENA6",69,0)
 .N DGEGTIEN,DGEGT,DGENRC,DGENRIEN
"RTN","DGENA6",70,0)
 .S DGEGTIEN=$$FINDCUR^DGENEGT
"RTN","DGENA6",71,0)
 .S DGEGT=$$GET^DGENEGT(DGEGTIEN,.DGEGT)
"RTN","DGENA6",72,0)
 .;If patient's enrollment status not above enrollment group threshold 
"RTN","DGENA6",73,0)
 .;set status to Rejected:  Initial Application by VAMC)
"RTN","DGENA6",74,0)
 .I $G(PRIORITY)'="",'$$ABOVE2^DGENEGT1(DFN,$G(APP),PRIORITY,$P(PRIGRP,U,2)) D  Q
"RTN","DGENA6",75,0)
 ..;Find patient's current enrollment record
"RTN","DGENA6",76,0)
 ..S DGENRIEN=$$FINDCUR^DGENA(DFN)
"RTN","DGENA6",77,0)
 ..S DGENRC=$$GET^DGENA(DGENRIEN,.DGENRC)
"RTN","DGENA6",78,0)
 ..S DGENR("DATE")=$S($G(DGENRC("DATE"))'="":DGENRC("DATE"),1:"")  ;enrollment date
"RTN","DGENA6",79,0)
 ..S DGENR("END")=$G(APP)  ;enrollment end date = application date
"RTN","DGENA6",80,0)
 ..S EFFDATE=$G(APP)  ; effective date = application date
"RTN","DGENA6",81,0)
 ..S DGENR("STATUS")=14  ;Rejected: Initial Application by VAMC
"RTN","DGENA6",82,0)
 .S DGENR("STATUS")=1 Q  ;UNVERIFIED
"RTN","DGENA6",83,0)
 S DGENR("FACREC")=$$INST^DGENU()
"RTN","DGENA6",84,0)
 S DGENR("PRIORITY")=PRIORITY
"RTN","DGENA6",85,0)
 ;Phase II add subgroup (SRS 6.4)
"RTN","DGENA6",86,0)
 S DGENR("SUBGRP")=$P(PRIGRP,"^",2)
"RTN","DGENA6",87,0)
 S DGENR("EFFDATE")=$S($G(EFFDATE):EFFDATE,$G(ENRDATE):$G(ENRDATE),1:$G(APP))
"RTN","DGENA6",88,0)
 S DGENR("USER")=$G(DUZ)
"RTN","DGENA6",89,0)
 S DGENR("DATETIME")=$$NOW^XLFDT ;Moved to top of the routine DG*5.3*672
"RTN","DGENA6",90,0)
 S DGENR("PRIORREC")=""
"RTN","DGENA6",91,0)
 S DGENR("RCODE")=""  ;DJE field added with DG*5.3*940 - Closed Application - RM#867186 
"RTN","DGENA6",92,0)
 M DGENR("ELIG")=DGELGSUB
"RTN","DGENA6",93,0)
 ;
"RTN","DGENA6",94,0)
 Q 1
"RTN","DGENL1")
0^6^B75564196^B71896061
"RTN","DGENL1",1,0)
DGENL1 ;ALB/RMO,ISA/KWP,Zoltan,ALB/BRM,LBD,ERC,EG,CKN,BAJ,JLS - Patient Enrollment - Build List Area ;5/12/11 3:53pm
"RTN","DGENL1",2,0)
 ;;5.3;Registration;**121,147,232,266,343,564,672,659,653,688,838,841,909,940**;Aug 13,1993;Build 11
"RTN","DGENL1",3,0)
 ;
"RTN","DGENL1",4,0)
EN(DGARY,DFN,DGENRIEN,DGCNT) ;Entry point to build list area
"RTN","DGENL1",5,0)
 ; for patient enrollment and patient enrollment history
"RTN","DGENL1",6,0)
 ; Input  -- DGARY    Global array subscript
"RTN","DGENL1",7,0)
 ;           DFN      Patient IEN
"RTN","DGENL1",8,0)
 ;           DGENRIEN Enrollment IEN
"RTN","DGENL1",9,0)
 ; Output -- DGCNT    Number of lines in the list
"RTN","DGENL1",10,0)
 N DGENCAT,DGENR,DGLINE
"RTN","DGENL1",11,0)
 I DGENRIEN,$$GET^DGENA(DGENRIEN,.DGENR) ;set-up enrollment array
"RTN","DGENL1",12,0)
 S DGENCAT=$$CATEGORY^DGENA4(,$G(DGENR("STATUS")))  ;enrollment category
"RTN","DGENL1",13,0)
 S DGENCAT=$$EXTERNAL^DILFD(27.15,.02,"",DGENCAT)
"RTN","DGENL1",14,0)
 S DGLINE=1,DGCNT=0
"RTN","DGENL1",15,0)
 D ENR(DGARY,DFN,.DGENR,.DGLINE,.DGCNT) ;enrollment
"RTN","DGENL1",16,0)
 D PF(DGARY,DFN,.DGENR,.DGLINE,.DGCNT) ;priority factors
"RTN","DGENL1",17,0)
 D HIS^DGENL2(DGARY,DFN,DGENRIEN,.DGLINE,.DGCNT) ;history
"RTN","DGENL1",18,0)
 Q
"RTN","DGENL1",19,0)
 ;
"RTN","DGENL1",20,0)
ENR(DGARY,DFN,DGENR,DGLINE,DGCNT) ;Enrollment 
"RTN","DGENL1",21,0)
 ; Input  -- DGARY    Global array subscript
"RTN","DGENL1",22,0)
 ;           DFN      Patient IEN
"RTN","DGENL1",23,0)
 ;           DGENR    Enrollment array
"RTN","DGENL1",24,0)
 ;           DGLINE   Line number
"RTN","DGENL1",25,0)
 ; Output -- DGCNT    Number of lines in the list
"RTN","DGENL1",26,0)
 N DGSTART
"RTN","DGENL1",27,0)
 ;
"RTN","DGENL1",28,0)
 S DGSTART=DGLINE ; starting line number
"RTN","DGENL1",29,0)
 D SET(DGARY,DGLINE,"Enrollment",31,IORVON,IORVOFF,,,,.DGCNT)
"RTN","DGENL1",30,0)
 ;
"RTN","DGENL1",31,0)
 ;Enrollment Date
"RTN","DGENL1",32,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",33,0)
 D SET(DGARY,DGLINE,"Enrollment Date: "_$S($G(DGENR("DATE")):$$EXT^DGENU("DATE",DGENR("DATE")),1:""),11,,,,,,.DGCNT)
"RTN","DGENL1",34,0)
 ;
"RTN","DGENL1",35,0)
 ;
"RTN","DGENL1",36,0)
 ;Enrollment End Date
"RTN","DGENL1",37,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",38,0)
 D SET(DGARY,DGLINE,"Enrollment End Date: "_$S($G(DGENR("END")):$$EXT^DGENU("END",DGENR("END")),1:""),7,,,,,,.DGCNT)
"RTN","DGENL1",39,0)
 ;
"RTN","DGENL1",40,0)
 ;Enrollment Application Date
"RTN","DGENL1",41,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",42,0)
 D SET(DGARY,DGLINE,"Application Date: "_$S($G(DGENR("APP")):$$EXT^DGENU("APP",DGENR("APP")),1:""),10,,,,,,.DGCNT)
"RTN","DGENL1",43,0)
 ;
"RTN","DGENL1",44,0)
 ;Source
"RTN","DGENL1",45,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",46,0)
 D SET(DGARY,DGLINE,"Source of Enrollment: "_$S($G(DGENR("SOURCE")):$$EXT^DGENU("SOURCE",DGENR("SOURCE")),1:""),6,,,,,,.DGCNT)
"RTN","DGENL1",47,0)
 ;
"RTN","DGENL1",48,0)
 ;Category
"RTN","DGENL1",49,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",50,0)
 D SET(DGARY,DGLINE,"Enrollment Category: "_DGENCAT,7,IORVON,IORVOFF,,,,.DGCNT)
"RTN","DGENL1",51,0)
 ;
"RTN","DGENL1",52,0)
 ;Status
"RTN","DGENL1",53,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",54,0)
 D SET(DGARY,DGLINE,"Enrollment Status: "_$S($G(DGENR("STATUS")):$$EXT^DGENU("STATUS",DGENR("STATUS")),1:""),9,,,,,,.DGCNT)
"RTN","DGENL1",55,0)
 ;
"RTN","DGENL1",56,0)
 ;Reason for Closed Application
"RTN","DGENL1",57,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",58,0)
 D SET(DGARY,DGLINE,"Reason for Closed Application: "_$S($G(DGENR("RCODE")):$$EXT^DGENU("RCODE",DGENR("RCODE")),1:""),,,,,,,.DGCNT)  ;DJE DG*5.3*940 - Closed Application - display reason - - RM#867190
"RTN","DGENL1",59,0)
 ;
"RTN","DGENL1",60,0)
 ;Priority
"RTN","DGENL1",61,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",62,0)
 D SET(DGARY,DGLINE,"Enrollment Priority: "_$S($G(DGENR("PRIORITY")):DGENR("PRIORITY"),1:"")_$S($G(DGENR("SUBGRP")):$$EXT^DGENU("SUBGRP",DGENR("SUBGRP")),1:""),7,,,,,,.DGCNT)
"RTN","DGENL1",63,0)
 ;
"RTN","DGENL1",64,0)
 ;
"RTN","DGENL1",65,0)
 ;Effective date
"RTN","DGENL1",66,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",67,0)
 D SET(DGARY,DGLINE,"Effective Date: "_$S($G(DGENR("EFFDATE")):$$EXT^DGENU("EFFDATE",DGENR("EFFDATE")),1:""),12,,,,,,.DGCNT)
"RTN","DGENL1",68,0)
 ;
"RTN","DGENL1",69,0)
 ;Reason canceled/declined
"RTN","DGENL1",70,0)
 ; Removed blank line to fix format after screen header was increased
"RTN","DGENL1",71,0)
 ; to 3 lines (DG*5.3*838).
"RTN","DGENL1",72,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",73,0)
 D SET(DGARY,DGLINE,"Reason Canceled/Declined: "_$S($G(DGENR("REASON")):$$EXT^DGENU("REASON",DGENR("REASON")),1:""),2,,,,,,.DGCNT)
"RTN","DGENL1",74,0)
 ;
"RTN","DGENL1",75,0)
 ;Canceled/declined remarks
"RTN","DGENL1",76,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",77,0)
 D SET(DGARY,DGLINE,"Canceled/Declined Remarks: "_$S($G(DGENR("REASON"))'="":$$EXT^DGENU("REMARKS",DGENR("REMARKS")),1:""),1,,,,,,.DGCNT)
"RTN","DGENL1",78,0)
 ;
"RTN","DGENL1",79,0)
 ;Entered by
"RTN","DGENL1",80,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",81,0)
 D SET(DGARY,DGLINE,"",1,,,,,,.DGCNT)
"RTN","DGENL1",82,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",83,0)
 D SET(DGARY,DGLINE,"Entered By: "_$S($G(DGENR("USER")):$$EXT^DGENU("USER",DGENR("USER")),1:""),16,,,,,,.DGCNT)
"RTN","DGENL1",84,0)
 ;
"RTN","DGENL1",85,0)
 ;Date/time entered
"RTN","DGENL1",86,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",87,0)
 D SET(DGARY,DGLINE,"Date/Time Entered: "_$S($G(DGENR("DATETIME")):$$EXT^DGENU("DATETIME",DGENR("DATETIME")),1:""),9,,,,,,.DGCNT)
"RTN","DGENL1",88,0)
 ;
"RTN","DGENL1",89,0)
 ;Set line to start on next page
"RTN","DGENL1",90,0)
 F DGLINE=DGLINE+1:1:DGSTART+VALM("LINES") D SET(DGARY,DGLINE,"",1,,,,,,.DGCNT)
"RTN","DGENL1",91,0)
 Q
"RTN","DGENL1",92,0)
 ;
"RTN","DGENL1",93,0)
PF(DGARY,DFN,DGENR,DGLINE,DGCNT) ;Priority factors 
"RTN","DGENL1",94,0)
 ; Input  -- DGARY    Global array subscript
"RTN","DGENL1",95,0)
 ;           DFN      Patient IEN
"RTN","DGENL1",96,0)
 ;           DGENR    Enrollment array
"RTN","DGENL1",97,0)
 ;           DGLINE   Line number
"RTN","DGENL1",98,0)
 ; Output -- DGCNT    Number of lines in the list
"RTN","DGENL1",99,0)
 N DGSTART
"RTN","DGENL1",100,0)
 ;
"RTN","DGENL1",101,0)
 S DGSTART=DGLINE ; starting line number
"RTN","DGENL1",102,0)
 D SET(DGARY,DGLINE,"Priority Factors",31,IORVON,IORVOFF,,,,.DGCNT)
"RTN","DGENL1",103,0)
 ;
"RTN","DGENL1",104,0)
 ;POW
"RTN","DGENL1",105,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",106,0)
 D SET(DGARY,DGLINE,"POW: "_$S($G(DGENR("ELIG","POW"))'="":$$EXT^DGENU("POW",DGENR("ELIG","POW")),1:""),19,,,,,,.DGCNT)
"RTN","DGENL1",107,0)
 ;
"RTN","DGENL1",108,0)
 ;Medal of Honor (DG*5.3*841)
"RTN","DGENL1",109,0)
 I $G(DGENR("ELIG","MOH"))="Y" D
"RTN","DGENL1",110,0)
 .D SET(DGARY,DGLINE,"Medal of Honor: YES",48,,,,,,.DGCNT)
"RTN","DGENL1",111,0)
 ;
"RTN","DGENL1",112,0)
 ;Purple Heart - added for patch 343;brm;10/23/00
"RTN","DGENL1",113,0)
 N PHDAT
"RTN","DGENL1",114,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",115,0)
 S PHDAT=$$PHEART(DFN,$G(DGENRIEN),$G(DGENR("DATETIME")))
"RTN","DGENL1",116,0)
 D SET(DGARY,DGLINE,"Purple Hrt: "_$P(PHDAT,U),12,,,,,,.DGCNT)
"RTN","DGENL1",117,0)
 D:$P(PHDAT,U)="YES" SET(DGARY,DGLINE,"Status: "_$P(PHDAT,U,2),32,,,,,,.DGCNT)
"RTN","DGENL1",118,0)
 D:$P(PHDAT,U)="NO" SET(DGARY,DGLINE,"Remarks: "_$P(PHDAT,U,3),31,,,,,,.DGCNT)
"RTN","DGENL1",119,0)
 ;
"RTN","DGENL1",120,0)
 ;Agent orange
"RTN","DGENL1",121,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",122,0)
 D SET(DGARY,DGLINE,"A/O Exp.: "_$S($G(DGENR("ELIG","AO"))'="":$$EXT^DGENU("AO",DGENR("ELIG","AO")),1:""),14,,,,,,.DGCNT)
"RTN","DGENL1",123,0)
 D SET(DGARY,DGLINE,"A/O Exp Loc: "_$S($G(DGENR("ELIG","AOEXPLOC"))'="":$$EXT^DGENU("AOEXPLOC",DGENR("ELIG","AOEXPLOC")),1:""),51,,,,,,.DGCNT)
"RTN","DGENL1",124,0)
 ;
"RTN","DGENL1",125,0)
 ;Ionizing radiation
"RTN","DGENL1",126,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",127,0)
 D SET(DGARY,DGLINE,"ION Rad.: "_$S($G(DGENR("ELIG","IR"))'="":$$EXT^DGENU("IR",DGENR("ELIG","IR")),1:""),14,,,,,,.DGCNT)
"RTN","DGENL1",128,0)
 ;
"RTN","DGENL1",129,0)
 ;Radiation Exposure Method
"RTN","DGENL1",130,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",131,0)
 D SET(DGARY,DGLINE,"Rad Exp Method: "_$S($G(DGENR("ELIG","RADEXPM"))'="":$$EXT^DGENU("RADEXPM",DGENR("ELIG","RADEXPM")),1:""),8,,,,,,.DGCNT)
"RTN","DGENL1",132,0)
 ;
"RTN","DGENL1",133,0)
 ;SW Asia Conditions - name change from Env con DG*5.3*688
"RTN","DGENL1",134,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",135,0)
 D SET(DGARY,DGLINE,"SW Asia Cond: "_$S($G(DGENR("ELIG","EC"))'="":$$EXT^DGENU("EC",DGENR("ELIG","EC")),1:""),10,,,,,,.DGCNT)
"RTN","DGENL1",136,0)
 ;
"RTN","DGENL1",137,0)
 ;Camp Lejeune Eligibility Indicator - new fields added with DG*5.3*909
"RTN","DGENL1",138,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",139,0)
 D SET(DGARY,DGLINE,"Camp Lejeune: "_$S($G(DGENR("ELIG","CLE"))'="":$$EXT^DGENU("CLE",DGENR("ELIG","CLE")),1:""),10,,,,,,.DGCNT)
"RTN","DGENL1",140,0)
 ;
"RTN","DGENL1",141,0)
 ;Military retirement - new fields added with DG*5.3*672
"RTN","DGENL1",142,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",143,0)
 S DGRET=$G(DGENR("ELIG","DISRET"))
"RTN","DGENL1",144,0)
 D SET(DGARY,DGLINE,"Mil Disab Retirement: "_$S($G(DGRET)=0:"NO",$G(DGRET)=1:"YES",$G(DGRET)=2:"YES",$G(DGRET)=3:"UNK",1:""),2,,,,,,.DGCNT)
"RTN","DGENL1",145,0)
 D SET(DGARY,DGLINE,"Dischrg Due to Disab: "_$S($G(DGENR("ELIG","DISLOD"))'="":$$EXT^DGENU("DISLOD",DGENR("ELIG","DISLOD")),1:""),42,,,,,,.DGCNT)
"RTN","DGENL1",146,0)
 ;
"RTN","DGENL1",147,0)
 ;Combat Vet End Date (added for DG*5.3*564 - HVE Phase III)
"RTN","DGENL1",148,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",149,0)
 D SET(DGARY,DGLINE,"Combat Vet End Date: "_$S($G(DGENR("ELIG","CVELEDT"))'="":$$EXT^DGENU("CVELEDT",DGENR("ELIG","CVELEDT")),1:""),3,,,,,,.DGCNT)
"RTN","DGENL1",150,0)
 ;
"RTN","DGENL1",151,0)
 ;Eligible for medicaid
"RTN","DGENL1",152,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",153,0)
 D SET(DGARY,DGLINE,"Eligible for MEDICAID: "_$S($G(DGENR("ELIG","MEDICAID"))'="":$$EXT^DGENU("MEDICAID",DGENR("ELIG","MEDICAID")),1:""),1,,,,,,.DGCNT)
"RTN","DGENL1",154,0)
 ;
"RTN","DGENL1",155,0)
 ;Service connected and percentage
"RTN","DGENL1",156,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",157,0)
 D SET(DGARY,DGLINE,"",1,,,,,,.DGCNT)
"RTN","DGENL1",158,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",159,0)
 D SET(DGARY,DGLINE,"Svc Connected: "_$S($G(DGENR("ELIG","SC"))'="":$$EXT^DGENU("SC",DGENR("ELIG","SC")),1:""),9,,,,,,.DGCNT)
"RTN","DGENL1",160,0)
 D SET(DGARY,DGLINE,"SC Percent: "_$S($G(DGENR("ELIG","SCPER"))'="":$$EXT^DGENU("SCPER",DGENR("ELIG","SCPER"))_"%",1:""),52,,,,,,.DGCNT)
"RTN","DGENL1",161,0)
 ;
"RTN","DGENL1",162,0)
 ;Aid & attendance and housebound
"RTN","DGENL1",163,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",164,0)
 D SET(DGARY,DGLINE,"Aid & Attendance: "_$S($G(DGENR("ELIG","A&A"))'="":$$EXT^DGENU("A&A",DGENR("ELIG","A&A")),1:""),6,,,,,,.DGCNT)
"RTN","DGENL1",165,0)
 D SET(DGARY,DGLINE,"Housebound: "_$S($G(DGENR("ELIG","HB"))'="":$$EXT^DGENU("HB",DGENR("ELIG","HB")),1:""),52,,,,,,.DGCNT)
"RTN","DGENL1",166,0)
 ;
"RTN","DGENL1",167,0)
 ;VA Pension
"RTN","DGENL1",168,0)
 ;Unemployable (added for DG*5.3*564 - HVE Phase III)
"RTN","DGENL1",169,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",170,0)
 D SET(DGARY,DGLINE,"VA Pension: "_$S($G(DGENR("ELIG","VAPEN"))'="":$$EXT^DGENU("VAPEN",DGENR("ELIG","VAPEN")),1:""),12,,,,,,.DGCNT)
"RTN","DGENL1",171,0)
 D SET(DGARY,DGLINE,"Unemployable: "_$S($G(DGENR("ELIG","UNEMPLOY"))'="":$$EXT^DGENU("UNEMPLOY",DGENR("ELIG","UNEMPLOY")),1:""),50,,,,,,.DGCNT)
"RTN","DGENL1",172,0)
 ;
"RTN","DGENL1",173,0)
 ;Total check amount
"RTN","DGENL1",174,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",175,0)
 D SET(DGARY,DGLINE,"Total Check Amount: "_$S($G(DGENR("ELIG","VACKAMT"))'="":$$EXT^DGENU("VACKAMT",DGENR("ELIG","VACKAMT")),1:""),4,,,,,,.DGCNT)
"RTN","DGENL1",176,0)
 ;
"RTN","DGENL1",177,0)
 ;PROJ 112/SHAD - DG*5.3*653
"RTN","DGENL1",178,0)
 I $G(DGENR("ELIG","SHAD"))=1 D
"RTN","DGENL1",179,0)
 .D SET(DGARY,DGLINE,"Proj 112/SHAD: "_$$EXT^DGENU("SHAD",DGENR("ELIG","SHAD")),49,,,,,,.DGCNT)
"RTN","DGENL1",180,0)
 ;
"RTN","DGENL1",181,0)
 ;Eligibility code
"RTN","DGENL1",182,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",183,0)
 D SET(DGARY,DGLINE,"Eligibility Code: "_$S($G(DGENR("ELIG","CODE"))'="":$$EXT^DGENU("CODE",DGENR("ELIG","CODE")),1:""),6,,,,,,.DGCNT)
"RTN","DGENL1",184,0)
 ;
"RTN","DGENL1",185,0)
 ;Means test
"RTN","DGENL1",186,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",187,0)
 D SET(DGARY,DGLINE,"Means Test Status: "_$S($G(DGENR("ELIG","MTSTA"))'="":$$EXT^DGENU("MTSTA",DGENR("ELIG","MTSTA")),1:""),5,,,,,,.DGCNT)
"RTN","DGENL1",188,0)
 ;
"RTN","DGENL1",189,0)
 ;Veteran Catastrophically Disabled
"RTN","DGENL1",190,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",191,0)
 D SET(DGARY,DGLINE,"Veteran CD Status: "_$S($G(DGENR("ELIG","VCD"))'="":$$EXT^DGENU("VCD",DGENR("ELIG","VCD")),1:""),5,,,,,,.DGCNT)
"RTN","DGENL1",192,0)
 ;
"RTN","DGENL1",193,0)
 ;Set line to start on next page
"RTN","DGENL1",194,0)
 F DGLINE=DGLINE+1:1:DGSTART+VALM("LINES") D SET(DGARY,DGLINE,"",1,,,,,,.DGCNT)
"RTN","DGENL1",195,0)
 Q
"RTN","DGENL1",196,0)
 ;
"RTN","DGENL1",197,0)
SET(DGARY,DGLINE,DGTEXT,DGCOL,DGON,DGOFF,DGSUB,DGNUM,DGDATA,DGCNT) ; moved to
"RTN","DGENL1",198,0)
 ;DGENL2 as DGENL1 was getting too big
"RTN","DGENL1",199,0)
 I $G(DGCOL)']"" S DGCOL=""
"RTN","DGENL1",200,0)
 I $G(DGON)']"" S DGON=""
"RTN","DGENL1",201,0)
 I $G(DGOFF)']"" S DGOFF=""
"RTN","DGENL1",202,0)
 I $G(DGSUB)']"" S DGSUB=""
"RTN","DGENL1",203,0)
 I $G(DGNUM)']"" S DGNUM=""
"RTN","DGENL1",204,0)
 I $G(DGDATA)']"" S DGDATA=""
"RTN","DGENL1",205,0)
 D SET^DGENL2(DGARY,DGLINE,DGTEXT,DGCOL,DGON,DGOFF,DGSUB,DGNUM,DGDATA,.DGCNT)
"RTN","DGENL1",206,0)
 Q
"RTN","DGENL1",207,0)
PHEART(DFN,DGENRIEN,PHENRDT) ;move to DGENL2
"RTN","DGENL1",208,0)
 N PHI,PHST,PHRR,PHDAT
"RTN","DGENL1",209,0)
 S PHDAT=$$PHEART^DGENL2(DFN,$G(DGENRIEN),$G(DGENR("DATETIME")))
"RTN","DGENL1",210,0)
 S PHI=$P(PHDAT,U),PHST=$P(PHDAT,U,2),PHRR=$P(PHDAT,U,3)
"RTN","DGENL1",211,0)
 I ($G(PHI)]""!($G(PHST)]"")!($G(PHRR)]"")) Q $G(PHI)_"^"_$G(PHST)_"^"_$G(PHRR)
"RTN","DGENL1",212,0)
 Q ""
"RTN","DGENU")
0^7^B48629112^B47398135
"RTN","DGENU",1,0)
DGENU ;ALB/CJM,ISA/KWP,Zoltan,LBD,EG,CKN,ERC,TMK,PWC,TDM,JLS - Enrollment Utilities ;04/24/2006 9:20 AM
"RTN","DGENU",2,0)
 ;;5.3;Registration;**121,122,147,232,314,564,624,672,659,653,688,536,838,841,909,940**;Aug 13,1993;Build 11
"RTN","DGENU",3,0)
 ;
"RTN","DGENU",4,0)
DISPLAY(DFN) ;
"RTN","DGENU",5,0)
 ;Description: Display status message, current enrollment and
"RTN","DGENU",6,0)
 ;     preferred facility information
"RTN","DGENU",7,0)
 ;Input:
"RTN","DGENU",8,0)
 ;  DFN - Patient IEN
"RTN","DGENU",9,0)
 ;  Output:     none
"RTN","DGENU",10,0)
 ;
"RTN","DGENU",11,0)
 N STATUS
"RTN","DGENU",12,0)
 S STATUS=$$STATUS^DGENA(DFN)
"RTN","DGENU",13,0)
 I 'STATUS W !!,"Patient is NOT enrolled in the VA Patient Enrollment System..."
"RTN","DGENU",14,0)
 E  I STATUS=2 D
"RTN","DGENU",15,0)
 .W !!,"Patient is enrolled in the VA Patient Enrollment System..."
"RTN","DGENU",16,0)
 ; Purple Heart added status 21
"RTN","DGENU",17,0)
 E  I (STATUS=9)!(STATUS=1)!(STATUS=15)!(STATUS=16)!(STATUS=17)!(STATUS=18)!(STATUS=21) D
"RTN","DGENU",18,0)
 .W !!,"Application is pending for enrollment in the VA Patient Enrollment System..."
"RTN","DGENU",19,0)
 E  D
"RTN","DGENU",20,0)
 .W !!,"Patient is NOT enrolled in the VA Patient Enrollment System..."
"RTN","DGENU",21,0)
 D CUR(DFN)
"RTN","DGENU",22,0)
 Q
"RTN","DGENU",23,0)
 ;
"RTN","DGENU",24,0)
CUR(DFN) ;
"RTN","DGENU",25,0)
 ;Description - displays current enrollment, category, enrollment
"RTN","DGENU",26,0)
 ;  group threshold, preferred facility and source designation
"RTN","DGENU",27,0)
 ;
"RTN","DGENU",28,0)
 N FACNAME,PREFAC,PFSRC,DGEGT,DGEGTIEN,DGENCAT,DGENR,IORVON,IORVOFF
"RTN","DGENU",29,0)
 I $$GET^DGENA($$FINDCUR^DGENA(DFN),.DGENR)
"RTN","DGENU",30,0)
 ;Get enrollment category
"RTN","DGENU",31,0)
 S DGENCAT=$$CATEGORY^DGENA4(DFN)
"RTN","DGENU",32,0)
 ;Display Category in reverse video
"RTN","DGENU",33,0)
 D REV
"RTN","DGENU",34,0)
 ;Get enrollment group threshold
"RTN","DGENU",35,0)
 S DGEGTIEN=$$FINDCUR^DGENEGT
"RTN","DGENU",36,0)
 S DGEGT=$$GET^DGENEGT(DGEGTIEN,.DGEGT)
"RTN","DGENU",37,0)
 ;Preferred facility
"RTN","DGENU",38,0)
 S PREFAC=$$PREF^DGENPTA(DFN,.FACNAME)
"RTN","DGENU",39,0)
 ;Source Designation
"RTN","DGENU",40,0)
 S PFSRC=$$GET1^DIQ(2,DFN_",",27.03)
"RTN","DGENU",41,0)
 W !?3,"Enrollment Date",?35,": ",$S('$G(DGENR("DATE")):"-none-",1:$$EXT^DGENU("DATE",DGENR("DATE")))
"RTN","DGENU",42,0)
 W !?3,"Enrollment Application Date",?35,": ",$S('$G(DGENR("APP")):"-none-",1:$$EXT^DGENU("DATE",DGENR("APP")))
"RTN","DGENU",43,0)
 W !?3,IORVON,"Enrollment Category             : ",$S($G(DGENCAT)="":"-none-",1:$$EXTERNAL^DILFD(27.15,.02,"",DGENCAT)),IORVOFF
"RTN","DGENU",44,0)
 W !?3,"Enrollment Status",?35,": ",$S($G(DGENR("STATUS"))="":"-none-",1:$$EXT^DGENU("STATUS",DGENR("STATUS")))
"RTN","DGENU",45,0)
 W !?3,"Enrollment Priority",?35,": ",$S($G(DGENR("PRIORITY"))="":"-none-",1:DGENR("PRIORITY")),$S($G(DGENR("SUBGRP"))="":"",1:$$EXT("SUBGRP",DGENR("SUBGRP")))
"RTN","DGENU",46,0)
 W !?3,"Preferred Facility",?35,": ",$S($G(FACNAME)'="":FACNAME,1:"-none-")
"RTN","DGENU",47,0)
 W !?3,"Preferred Facility Source",?35,": ",$S($G(PFSRC)'="":PFSRC,1:"-none-")
"RTN","DGENU",48,0)
 W !?3,"Enrollment Group Threshold",?35,": ",$S($G(DGEGT("PRIORITY"))="":"-none-",1:$$EXTERNAL^DILFD(27.16,.02,"",$G(DGEGT("PRIORITY")))),$S($G(DGEGT("SUBGRP"))="":"",1:$$EXTERNAL^DILFD(27.16,.03,"",$G(DGEGT("SUBGRP"))))
"RTN","DGENU",49,0)
 W !
"RTN","DGENU",50,0)
 Q
"RTN","DGENU",51,0)
REV ;Get variables to display text in reverse video
"RTN","DGENU",52,0)
 N X
"RTN","DGENU",53,0)
 S X="IORVON;IORVOFF"
"RTN","DGENU",54,0)
 D ENDR^%ZISS
"RTN","DGENU",55,0)
 Q
"RTN","DGENU",56,0)
PATID(DFN) ;
"RTN","DGENU",57,0)
 ;Description - Called by FileMan as an identifier for the Patient file.
"RTN","DGENU",58,0)
 ;Displays current enrollment status, priority, and preferred facility.
"RTN","DGENU",59,0)
 ;
"RTN","DGENU",60,0)
 ;Input:
"RTN","DGENU",61,0)
 ;  DFN - ien to Patient file
"RTN","DGENU",62,0)
 ;
"RTN","DGENU",63,0)
 N PREFAC,DGENR,OUTPUT
"RTN","DGENU",64,0)
 I '$$GET^DGENA($$FINDCUR^DGENA(DFN),.DGENR) D
"RTN","DGENU",65,0)
 .S OUTPUT="NO ENROLLMENT APPLICATION ON FILE "
"RTN","DGENU",66,0)
 E  D
"RTN","DGENU",67,0)
 .S OUTPUT=$E("PRIORITY:"_DGENR("PRIORITY")_"   ",1,12)_$E("STATUS:"_$$EXT^DGENU("STATUS",DGENR("STATUS"))_"         ",1,26)
"RTN","DGENU",68,0)
 S PREFAC=$$PREF^DGENPTA(DFN)
"RTN","DGENU",69,0)
 S:PREFAC OUTPUT=OUTPUT_"PREFERRED FACILITY:"_$P($G(^DIC(4,PREFAC,99)),"^")
"RTN","DGENU",70,0)
 I $G(IOM) I ($X#$G(IOM))<6 D
"RTN","DGENU",71,0)
 .D EN^DDIOL(OUTPUT,,"?($X+(10-($X#IOM)))")
"RTN","DGENU",72,0)
 E  D
"RTN","DGENU",73,0)
 .D EN^DDIOL(OUTPUT,,"!?10")
"RTN","DGENU",74,0)
 Q
"RTN","DGENU",75,0)
 ;
"RTN","DGENU",76,0)
EXT(SUB,VAL) ;
"RTN","DGENU",77,0)
 ;Description: Given the subscript used in the PATIENT ENROLLMENT array,
"RTN","DGENU",78,0)
 ;     and a field value, returns the external representation of the
"RTN","DGENU",79,0)
 ;     value, as defined in the fields output transform of the PATIENT
"RTN","DGENU",80,0)
 ;     ENROLLMENT file.
"RTN","DGENU",81,0)
 ;Input: 
"RTN","DGENU",82,0)
 ;  SUB - subscript in the array defined by the PATIENT ENROLLMENT object
"RTN","DGENU",83,0)
 ;  VAL - value of the PATIENT ENROLLMENT object attribute named by SUB
"RTN","DGENU",84,0)
 ;Output:
"RTN","DGENU",85,0)
 ;  Function Value - returns the external value of the attribute as
"RTN","DGENU",86,0)
 ;     defined by the PATIENT ENROLLMENT file
"RTN","DGENU",87,0)
 ;
"RTN","DGENU",88,0)
 Q:(($G(SUB)="")!($G(VAL)="")) ""
"RTN","DGENU",89,0)
 ;
"RTN","DGENU",90,0)
 N FLD
"RTN","DGENU",91,0)
 S FLD=$$FIELD(SUB)
"RTN","DGENU",92,0)
 ;
"RTN","DGENU",93,0)
 Q:(FLD="") ""
"RTN","DGENU",94,0)
 Q $$EXTERNAL^DILFD(27.11,FLD,"F",VAL)
"RTN","DGENU",95,0)
 ;
"RTN","DGENU",96,0)
FIELD(SUB) ;
"RTN","DGENU",97,0)
 ;Description: given a subscript in the enrollment array, returns the
"RTN","DGENU",98,0)
 ;     corresponding field number
"RTN","DGENU",99,0)
 N FLD S FLD=""
"RTN","DGENU",100,0)
 D  ;drops out of block once SUB is determined
"RTN","DGENU",101,0)
 .I SUB="APP" S FLD=.01 Q
"RTN","DGENU",102,0)
 .I SUB="DATE" S FLD=.1 Q
"RTN","DGENU",103,0)
 .I SUB="END" S FLD=.11 Q
"RTN","DGENU",104,0)
 .I SUB="DFN" S FLD=.02 Q
"RTN","DGENU",105,0)
 .I SUB="SOURCE" S FLD=.03 Q
"RTN","DGENU",106,0)
 .I SUB="STATUS" S FLD=.04 Q
"RTN","DGENU",107,0)
 .I SUB="REASON" S FLD=.05 Q
"RTN","DGENU",108,0)
 .I SUB="REMARKS" S FLD=25 Q
"RTN","DGENU",109,0)
 .I SUB="FACREC" S FLD=.06 Q
"RTN","DGENU",110,0)
 .I SUB="PRIORITY" S FLD=.07 Q
"RTN","DGENU",111,0)
 .I SUB="EFFDATE" S FLD=.08 Q
"RTN","DGENU",112,0)
 .I SUB="PRIORREC" S FLD=.09 Q
"RTN","DGENU",113,0)
 .I SUB="SUBGRP" S FLD=.12 Q
"RTN","DGENU",114,0)
 .I SUB="RCODE" S FLD=.13 Q  ;DJE field added with DG*5.3*940 - Closed Application - RM#867186
"RTN","DGENU",115,0)
 .I SUB="CODE" S FLD=50.01 Q
"RTN","DGENU",116,0)
 .I SUB="SC" S FLD=50.02 Q
"RTN","DGENU",117,0)
 .I SUB="SCPER" S FLD=50.03 Q
"RTN","DGENU",118,0)
 .I SUB="POW" S FLD=50.04 Q
"RTN","DGENU",119,0)
 .I SUB="A&A" S FLD=50.05 Q
"RTN","DGENU",120,0)
 .I SUB="HB" S FLD=50.06 Q
"RTN","DGENU",121,0)
 .I SUB="VAPEN" S FLD=50.07 Q
"RTN","DGENU",122,0)
 .I SUB="VACKAMT" S FLD=50.08 Q
"RTN","DGENU",123,0)
 .I SUB="DISRET" S FLD=50.09 Q
"RTN","DGENU",124,0)
 .I SUB="DISLOD" S FLD=50.2 Q  ;field added with DG*5.3*672
"RTN","DGENU",125,0)
 .I SUB="MEDICAID" S FLD=50.1 Q
"RTN","DGENU",126,0)
 .I SUB="AO" S FLD=50.11 Q
"RTN","DGENU",127,0)
 .I SUB="AOEXPLOC" S FLD=50.22 Q  ;field added with DG*5.3*688
"RTN","DGENU",128,0)
 .I SUB="IR" S FLD=50.12 Q
"RTN","DGENU",129,0)
 .I SUB="EC" S FLD=50.13 Q    ;name now SW Asia Con, was Env Con DG*5.3*688
"RTN","DGENU",130,0)
 .I SUB="MTSTA" S FLD=50.14 Q
"RTN","DGENU",131,0)
 .I SUB="VCD" S FLD=50.15 Q
"RTN","DGENU",132,0)
 .I SUB="PH" S FLD=50.16 Q
"RTN","DGENU",133,0)
 .I SUB="UNEMPLOY" S FLD=50.17 Q
"RTN","DGENU",134,0)
 .I SUB="CVELEDT" S FLD=50.18 Q
"RTN","DGENU",135,0)
 .I SUB="SHAD" S FLD=50.19 Q  ;field added with DG*5.3*653
"RTN","DGENU",136,0)
 .I SUB="MOH" S FLD=50.23 Q
"RTN","DGENU",137,0)
 .I SUB="CLE" S FLD=50.24 Q      ;field added with DG*5.3*909
"RTN","DGENU",138,0)
 .I SUB="CLEDT" S FLD=50.25 Q    ;field added with DG*5.3*909
"RTN","DGENU",139,0)
 .I SUB="CLEST" S FLD=50.26 Q    ;field added with DG*5.3*909
"RTN","DGENU",140,0)
 .I SUB="CLESOR" S FLD=50.27 Q   ;field added with DG*5.3*909
"RTN","DGENU",141,0)
 .I SUB="DATETIME" S FLD=75.01 Q
"RTN","DGENU",142,0)
 .I SUB="USER" S FLD=75.02 Q
"RTN","DGENU",143,0)
 .I SUB="RADEXPM" S FLD=76 Q
"RTN","DGENU",144,0)
 Q FLD
"RTN","DGENU",145,0)
 ;
"RTN","DGENU",146,0)
PROMPT(FILE,FIELD,DEFAULT,RESPONSE,REQUIRE,PRMPTNM) ;
"RTN","DGENU",147,0)
 ;Description: requests user to enter a single field value.
"RTN","DGENU",148,0)
 ;Input:
"RTN","DGENU",149,0)
 ;  FILE - the file #
"RTN","DGENU",150,0)
 ;  FIELD - the field #
"RTN","DGENU",151,0)
 ;  DEFAULT - default value, internal form
"RTN","DGENU",152,0)
 ;  REQUIRE - a flag, (+value)'=0 means to require a value to be
"RTN","DGENU",153,0)
 ;            entered and to return failure otherwise (optional)
"RTN","DGENU",154,0)
 ;  PRMPTNM - Optional
"RTN","DGENU",155,0)
 ;             0 - display field LABEL
"RTN","DGENU",156,0)
 ;             1 - Prompt field TITLE
"RTN","DGENU",157,0)
 ;Output:
"RTN","DGENU",158,0)
 ;  Function Value - 0 on failure, 1 on success
"RTN","DGENU",159,0)
 ;  RESPONSE - value entered by user, pass by reference
"RTN","DGENU",160,0)
 ;
"RTN","DGENU",161,0)
 Q:(('$G(FILE))!('$G(FIELD))) 0
"RTN","DGENU",162,0)
 S REQUIRE=$G(REQUIRE)
"RTN","DGENU",163,0)
 S PRMPTNM=$G(PRMPTNM)
"RTN","DGENU",164,0)
 N DIR,DA,QUIT,AGAIN
"RTN","DGENU",165,0)
 ;
"RTN","DGENU",166,0)
 S DIR(0)=FILE_","_FIELD_$S($G(REQUIRE):"",1:"O")_"AO"
"RTN","DGENU",167,0)
 I $G(DEFAULT)'="" DO
"RTN","DGENU",168,0)
 . S:+$G(PRMPTNM)=0 DIR("A")=$$GET1^DID(FILE,FIELD,"","LABEL")_": "_$$EXTERNAL^DILFD(FILE,FIELD,"F",DEFAULT)_"// "
"RTN","DGENU",169,0)
 . S:+$G(PRMPTNM)>0 DIR("A")=$$GET1^DID(FILE,FIELD,"","TITLE")_": "_$$EXTERNAL^DILFD(FILE,FIELD,"F",DEFAULT)_"// "
"RTN","DGENU",170,0)
 S QUIT=0
"RTN","DGENU",171,0)
 F  D  Q:QUIT
"RTN","DGENU",172,0)
 . D ^DIR
"RTN","DGENU",173,0)
 . I $D(DTOUT)!$D(DUOUT) S QUIT=1 Q
"RTN","DGENU",174,0)
 . I X="@" D  Q:AGAIN
"RTN","DGENU",175,0)
 . . S AGAIN=0
"RTN","DGENU",176,0)
 . . I 'REQUIRE,"Yy"'[$E($$YN^DGENCD1("  Are you sure")_"X") S AGAIN=1 Q
"RTN","DGENU",177,0)
 . . S RESPONSE="" ; This might trigger the "required" message below.
"RTN","DGENU",178,0)
 . E  I X="" S RESPONSE=$G(DEFAULT)
"RTN","DGENU",179,0)
 . E  S RESPONSE=$P(Y,"^")
"RTN","DGENU",180,0)
 . ;
"RTN","DGENU",181,0)
 . ; quit this loop if the user entered value OR value not required
"RTN","DGENU",182,0)
 . I RESPONSE'="" S QUIT=1 Q
"RTN","DGENU",183,0)
 . I 'REQUIRE S QUIT=1 Q
"RTN","DGENU",184,0)
 . W !,"This is a required response. Enter '^' to exit"
"RTN","DGENU",185,0)
 I $D(DTOUT)!$D(DUOUT) Q 0
"RTN","DGENU",186,0)
 Q 1
"RTN","DGENU",187,0)
 ;
"RTN","DGENU",188,0)
INST(VADUZ,VACHK) ;
"RTN","DGENU",189,0)
 ; Description: Determine the institution affiliation associated with a
"RTN","DGENU",190,0)
 ;              user.
"RTN","DGENU",191,0)
 ;
"RTN","DGENU",192,0)
 ;  Input:
"RTN","DGENU",193,0)
 ;     VADUZ =  array if passed by reference:
"RTN","DGENU",194,0)
 ;           VADUZ = DUZ
"RTN","DGENU",195,0)
 ;           VADUZ(2) =  
"RTN","DGENU",196,0)
 ;              o  if this value is null: DUZ(2) (institution affiliated
"RTN","DGENU",197,0)
 ;                    with user, prompted at Kernel sign-on)
"RTN","DGENU",198,0)
 ;              o  if value is not null: site to check as valid for the
"RTN","DGENU",199,0)
 ;                    user (Pointer to INSTITUTION (#4) file)
"RTN","DGENU",200,0)
 ; Output:
"RTN","DGENU",201,0)
 ;   Function Value - Returns pointer to the INSTITUTION (#4) file
"RTN","DGENU",202,0)
 ;    entry that is associated with the user, otherwise the pointer
"RTN","DGENU",203,0)
 ;    to the INSTITUTION (#4) file entry of the primary VA Medical
"RTN","DGENU",204,0)
 ;    Center division is returned.
"RTN","DGENU",205,0)
 ;
"RTN","DGENU",206,0)
 ;    VACHK = passed by reference, returned as:
"RTN","DGENU",207,0)
 ;         null if the value in VADUZ(2) is null
"RTN","DGENU",208,0)
 ;            0 if the value in VADUZ(2) is not null and is not a valid
"RTN","DGENU",209,0)
 ;              site for the user
"RTN","DGENU",210,0)
 ;            1 if the value in VADUZ(2) is not null and is a valid site
"RTN","DGENU",211,0)
 ;              for the user
"RTN","DGENU",212,0)
 ;
"RTN","DGENU",213,0)
 S VACHK=$S($G(VADUZ(2))="":"",1:0)
"RTN","DGENU",214,0)
 I $G(VADUZ(2)) D
"RTN","DGENU",215,0)
 . N X,ZZ
"RTN","DGENU",216,0)
 . Q:'$G(VADUZ)
"RTN","DGENU",217,0)
 . S X=$$DIV4^XUSER(.ZZ,VADUZ)
"RTN","DGENU",218,0)
 . I X,$D(ZZ(VADUZ(2))) S VACHK=1
"RTN","DGENU",219,0)
 I '$G(VADUZ(2)) S VADUZ(2)=$G(DUZ(2))
"RTN","DGENU",220,0)
 Q $S($G(VADUZ(2)):VADUZ(2),1:$P($$SITE^VASITE(),"^"))
"RTN","DGENU",221,0)
 ;
"RTN","DGENU",222,0)
GETINST(DGPREFAC,DGINST) ;Get Institution file data
"RTN","DGENU",223,0)
 ; Input  -- DGPREFAC Institution file IEN
"RTN","DGENU",224,0)
 ; Output -- 1=Successful and 0=Failure
"RTN","DGENU",225,0)
 ;           DGINST - Institution file Array
"RTN","DGENU",226,0)
 N DGINST0,DGINST99,DGOKF
"RTN","DGENU",227,0)
 S DGINST0=$G(^DIC(4,DGPREFAC,0)) G GETQ:DGINST0=""
"RTN","DGENU",228,0)
 S DGINST("NAME")=$P(DGINST0,U)
"RTN","DGENU",229,0)
 S DGINST99=$G(^DIC(4,DGPREFAC,99))
"RTN","DGENU",230,0)
 S DGINST("STANUM")=$P(DGINST99,U)
"RTN","DGENU",231,0)
 S DGOKF=1
"RTN","DGENU",232,0)
GETQ Q +$G(DGOKF)
"RTN","DGENUPL2")
0^8^B83311291^B81902835
"RTN","DGENUPL2",1,0)
DGENUPL2 ;ALB/CJM,RTK,TMK,ISA/KWP/RMM/CKN,EG,ERC,PWC,TDM,TEJ - PROCESS INCOMING (Z11 EVENT TYPE) HL7 MESSAGES ; 13 Feb 2017  1:07 PM
"RTN","DGENUPL2",2,0)
 ;;5.3;REGISTRATION;**147,222,232,310,314,367,397,677,631,675,672,673,716,653,688,838,842,894,934,940**;Aug 13,1993;Build 11
"RTN","DGENUPL2",3,0)
 ;
"RTN","DGENUPL2",4,0)
 ;**************************************************************
"RTN","DGENUPL2",5,0)
 ;The following procedures parse particular segment types.
"RTN","DGENUPL2",6,0)
 ;Input:SEG(),MSGID
"RTN","DGENUPL2",7,0)
 ;Output:DGPAT(),DGELG(),DGENR(),DGCDIS(),DGNTR(),DGOEIF(),ERROR
"RTN","DGENUPL2",8,0)
 ;**************************************************************
"RTN","DGENUPL2",9,0)
 ;
"RTN","DGENUPL2",10,0)
PID ;
"RTN","DGENUPL2",11,0)
 S DGPAT("SSN")=SEG(19)
"RTN","DGENUPL2",12,0)
 Q
"RTN","DGENUPL2",13,0)
 ;
"RTN","DGENUPL2",14,0)
ZPD ;
"RTN","DGENUPL2",15,0)
 D ZPD^DGENUPLA ;code removed due to size of DGENUPLA - DG*5.3*688
"RTN","DGENUPL2",16,0)
 Q
"RTN","DGENUPL2",17,0)
 ;
"RTN","DGENUPL2",18,0)
ZIE ;
"RTN","DGENUPL2",19,0)
 S DGPAT("INELDATE")=$$CONVERT^DGENUPL1(SEG(2),"DATE",.ERROR)
"RTN","DGENUPL2",20,0)
 I ERROR D  Q
"RTN","DGENUPL2",21,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZIE SEGMENT, SEQ 2",.ERRCOUNT)
"RTN","DGENUPL2",22,0)
 S DGPAT("INELREA")=$$CONVERT^DGENUPL1(SEG(3))
"RTN","DGENUPL2",23,0)
 S DGPAT("INELDEC")=$$CONVERT^DGENUPL1(SEG(4))
"RTN","DGENUPL2",24,0)
 Q
"RTN","DGENUPL2",25,0)
 ;
"RTN","DGENUPL2",26,0)
ZIO ;New segment - DG*5.3*653
"RTN","DGENUPL2",27,0)
 D ZIO^DGENUPLA  ;Code for ZIO has moved to DGENUPLA
"RTN","DGENUPL2",28,0)
 Q
"RTN","DGENUPL2",29,0)
 ;
"RTN","DGENUPL2",30,0)
ZEL(COUNT) ;
"RTN","DGENUPL2",31,0)
 D ZEL^DGENUPLA(COUNT)  ;code for ZEL segment has moved to DGENUPLA
"RTN","DGENUPL2",32,0)
 Q
"RTN","DGENUPL2",33,0)
 ;
"RTN","DGENUPL2",34,0)
ZEN ;
"RTN","DGENUPL2",35,0)
 N SUB
"RTN","DGENUPL2",36,0)
 S DGENR("DATE")=$$CONVERT^DGENUPL1(SEG(2),"DATE",.ERROR)
"RTN","DGENUPL2",37,0)
 I ERROR D  Q
"RTN","DGENUPL2",38,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEN SEGMENT, SEQ 2",.ERRCOUNT)
"RTN","DGENUPL2",39,0)
 S DGENR("SOURCE")=$$CONVERT^DGENUPL1(SEG(3))
"RTN","DGENUPL2",40,0)
 S DGENR("STATUS")=$$CONVERT^DGENUPL1(SEG(4))
"RTN","DGENUPL2",41,0)
 ;S ERROR=$$PEND(DFN,DGENR("STATUS"))  ;DG*5.3*934
"RTN","DGENUPL2",42,0)
 S ERROR=0  ;DG*5.3*934
"RTN","DGENUPL2",43,0)
 ;I ERROR D  Q  ;DG*5.3*934
"RTN","DGENUPL2",44,0)
 ;.D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"ENROLLMENT STATUS PENDING-ELIGIBILITY IS VERIFIED",.ERRCOUNT)
"RTN","DGENUPL2",45,0)
 S DGENR("REASON")=$$CONVERT^DGENUPL1(SEG(5))
"RTN","DGENUPL2",46,0)
 S DGENR("REMARKS")=$$CONVERT^DGENUPL1(SEG(6))
"RTN","DGENUPL2",47,0)
 S DGENR("FACREC")=$$CONVERT^DGENUPL1(SEG(7),"INSTITUTION",.ERROR)
"RTN","DGENUPL2",48,0)
 I ERROR D  Q
"RTN","DGENUPL2",49,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"FACILITY RECEIVED "_SEG(7)_" NOT FOUND IN THE INSTITUTION FILE",.ERRCOUNT)
"RTN","DGENUPL2",50,0)
 S DGPAT("PREFAC")=$$CONVERT^DGENUPL1(SEG(8),"INSTITUTION",.ERROR)
"RTN","DGENUPL2",51,0)
 I ERROR D  Q
"RTN","DGENUPL2",52,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"PREFERRED FACILITY "_SEG(8)_" NOT FOUND IN THE INSTITUTION FILE",.ERRCOUNT)
"RTN","DGENUPL2",53,0)
 ;
"RTN","DGENUPL2",54,0)
 S DGENR("PRIORITY")=$$CONVERT^DGENUPL1(SEG(9))
"RTN","DGENUPL2",55,0)
 S DGENR("EFFDATE")=$$CONVERT^DGENUPL1(SEG(10),"DATE",.ERROR)
"RTN","DGENUPL2",56,0)
 I ERROR D  Q
"RTN","DGENUPL2",57,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEN SEGMENT, SEQ 10",.ERRCOUNT)
"RTN","DGENUPL2",58,0)
 S DGENR("APP")=$$CONVERT^DGENUPL1(SEG(11),"DATE",.ERROR)
"RTN","DGENUPL2",59,0)
 I ERROR D  Q
"RTN","DGENUPL2",60,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEN SEGMENT, SEQ 11",.ERRCOUNT)
"RTN","DGENUPL2",61,0)
 ;
"RTN","DGENUPL2",62,0)
 ;!!!!!! take next line out when HEC begins transmitting application dt
"RTN","DGENUPL2",63,0)
 I DGENR("APP")=""!(DGENR("APP")="@") S DGENR("APP")=DGENR("DATE")
"RTN","DGENUPL2",64,0)
 I DGENR("APP")=""!(DGENR("APP")="@") S DGENR("APP")=DGENR("EFFDATE")
"RTN","DGENUPL2",65,0)
 ;
"RTN","DGENUPL2",66,0)
 S DGENR("END")=$$CONVERT^DGENUPL1(SEG(12),"DATE",.ERROR)
"RTN","DGENUPL2",67,0)
 I ERROR D  Q
"RTN","DGENUPL2",68,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEN SEGMENT, SEQ 12",.ERRCOUNT)
"RTN","DGENUPL2",69,0)
 ;Phase II Parse out Sub-Group (SRS 6[B.4)
"RTN","DGENUPL2",70,0)
 S DGENR("SUBGRP")=$$CONVERT^DGENUPL1(SEG(13))
"RTN","DGENUPL2",71,0)
 S DGPAT("PFSRC")=$$CONVERT^DGENUPL1(SEG(14)) N PFSRC S PFSRC=DGPAT("PFSRC")
"RTN","DGENUPL2",72,0)
 I PFSRC'="V"&(PFSRC'="E")&(PFSRC'="PA")&(PFSRC'="PI")&(PFSRC'="@")&(PFSRC'="") D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEN SEGMENT, SEQ 14",.ERRCOUNT) Q
"RTN","DGENUPL2",73,0)
 ;
"RTN","DGENUPL2",74,0)
 S DGENR("RCODE")=$$CONVERT^DGENUPL1(SEG(15))  ;DJE field added with DG*5.3*940 - Closed Application - RM#867186
"RTN","DGENUPL2",75,0)
 ;want to ignore double quotes sent for enrollment fields
"RTN","DGENUPL2",76,0)
 S SUB=""
"RTN","DGENUPL2",77,0)
 F  S SUB=$O(DGENR(SUB)) Q:SUB=""  I DGENR(SUB)="@"!(DGENR(SUB)="""""") S DGENR(SUB)=""
"RTN","DGENUPL2",78,0)
 ;
"RTN","DGENUPL2",79,0)
 Q
"RTN","DGENUPL2",80,0)
 ;
"RTN","DGENUPL2",81,0)
ZMT ;
"RTN","DGENUPL2",82,0)
 I SEG(1)>1 D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"ZMT SEGMENT, SEQ 1, SHOULD SPECIFY MEANS TEST",.ERRCOUNT) S ERROR=1 Q
"RTN","DGENUPL2",83,0)
 S DGELG("MTSTA")=$$CONVERT^DGENUPL1(SEG(3),"MT",.ERROR)
"RTN","DGENUPL2",84,0)
 I ERROR D  Q
"RTN","DGENUPL2",85,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZMT SEGMENT, SEQ 3",.ERRCOUNT)
"RTN","DGENUPL2",86,0)
 Q
"RTN","DGENUPL2",87,0)
 ;
"RTN","DGENUPL2",88,0)
ZCD ;
"RTN","DGENUPL2",89,0)
 ;Phase II for multiple ZCD's
"RTN","DGENUPL2",90,0)
 I SEG(1)>1 G SKIP
"RTN","DGENUPL2",91,0)
 S DGCDIS("BY")=$$CONVERT^DGENUPL1(SEG(3))
"RTN","DGENUPL2",92,0)
 S DGCDIS("DATE")=$$CONVERT^DGENUPL1(SEG(5),"DATE",.ERROR)
"RTN","DGENUPL2",93,0)
 I ERROR D  Q
"RTN","DGENUPL2",94,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZCD SEGMENT, SEQ 5",.ERRCOUNT)
"RTN","DGENUPL2",95,0)
 S DGCDIS("FACDET")=$$CONVERT^DGENUPL1(SEG(4),"INSTITUTION",.ERROR)
"RTN","DGENUPL2",96,0)
 I ERROR D  Q
"RTN","DGENUPL2",97,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"FACILITY "_SEG(4)_" MAKING CATASTROPHIC DISABILITY DETERMINATION NOT FOUND IN THE INSTITUTION FILE",.ERRCOUNT)
"RTN","DGENUPL2",98,0)
 S DGCDIS("REVDTE")=$$CONVERT^DGENUPL1(SEG(2),"DATE",.ERROR)
"RTN","DGENUPL2",99,0)
 I ERROR D  Q
"RTN","DGENUPL2",100,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZCD SEGMENT, SEQ 2",.ERRCOUNT)
"RTN","DGENUPL2",101,0)
 S DGCDIS("METDET")=$$CONVERT^DGENUPL1($P(SEG(6),$E(HLECH)))
"RTN","DGENUPL2",102,0)
 S DGCDIS("VCD")=$$CONVERT^DGENUPL1(SEG(12))
"RTN","DGENUPL2",103,0)
 ;SEQ 14 - DATE VETERAN REQUESTED CD EVALUATION
"RTN","DGENUPL2",104,0)
 S DGCDIS("VETREQDT")=$$CONVERT^DGENUPL1(SEG(14),"DATE",.ERROR)
"RTN","DGENUPL2",105,0)
 I ERROR D  Q
"RTN","DGENUPL2",106,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZCD SEGMENT, SEQ 14",.ERRCOUNT)
"RTN","DGENUPL2",107,0)
 ;SEQ 15 - DATE FACILITY INITIATED REVIEW
"RTN","DGENUPL2",108,0)
 S DGCDIS("DTFACIRV")=$$CONVERT^DGENUPL1(SEG(15),"DATE",.ERROR)
"RTN","DGENUPL2",109,0)
 I ERROR D  Q
"RTN","DGENUPL2",110,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZCD SEGMENT, SEQ 15",.ERRCOUNT)
"RTN","DGENUPL2",111,0)
 ;SEQ 16 - DATE VETERAN WAS NOTIFIED
"RTN","DGENUPL2",112,0)
 S DGCDIS("DTVETNOT")=$$CONVERT^DGENUPL1(SEG(16),"DATE",.ERROR)
"RTN","DGENUPL2",113,0)
 I ERROR D  Q
"RTN","DGENUPL2",114,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZCD SEGMENT, SEQ 16",.ERRCOUNT)
"RTN","DGENUPL2",115,0)
SKIP ;
"RTN","DGENUPL2",116,0)
 ;Phase II Parse out additional fields.  CONVERT type of RSN converts the code to IEN for diagnosis,procedure and condition (HL7TORSN^DGENA5).
"RTN","DGENUPL2",117,0)
 ; * check the new DESCRIPTOR sequences  -  DG*5.3*894
"RTN","DGENUPL2",118,0)
 N I,D3     ; DG*5.3*894
"RTN","DGENUPL2",119,0)
 S D3="|"   ; DG*5.3*894
"RTN","DGENUPL2",120,0)
 F I=1:1 Q:$P(SEG(17),D3,I)=""  D
"RTN","DGENUPL2",121,0)
 . S DGCDIS("DESCR",I)=$$CONVERT^DGENUPL1($P(SEG(17),D3,I),"CDDSCR")
"RTN","DGENUPL2",122,0)
 ;
"RTN","DGENUPL2",123,0)
 I '$D(DGCDIS("DESCR")) D
"RTN","DGENUPL2",124,0)
 .S DGCDIS("DIAG",SEG(1))=$$CONVERT^DGENUPL1(SEG(7),"CDRSN")
"RTN","DGENUPL2",125,0)
 .S DGCDIS("PROC",SEG(1))=$$CONVERT^DGENUPL1(SEG(8),"CDRSN")
"RTN","DGENUPL2",126,0)
 .S DGCDIS("COND",SEG(1))=$$CONVERT^DGENUPL1(SEG(10),"CDRSN")
"RTN","DGENUPL2",127,0)
 ;
"RTN","DGENUPL2",128,0)
 S DGCDIS("EXT",SEG(1),1)=$$CONVERT^DGENUPL1($P(SEG(9),$E(HLECH)),"EXT")
"RTN","DGENUPL2",129,0)
 S DGCDIS("SCORE",SEG(1))=$$CONVERT^DGENUPL1($P(SEG(11),$E(HLECH)))
"RTN","DGENUPL2",130,0)
 S DGCDIS("PERM",SEG(1))=$$CONVERT^DGENUPL1($P(SEG(13),$E(HLECH)))
"RTN","DGENUPL2",131,0)
 I DGCDIS("VCD")="Y",'$D(DGCDIS("DIAG")),'$D(DGCDIS("PROC")),'$D(DGCDIS("COND")),'$D(DGCDIS("DESCR")) D  Q
"RTN","DGENUPL2",132,0)
 .S ERROR=1 D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"NO VALID DIAGNOSIS,PROCEDURE,CONDITION, OR DESCRIPTOR IN THE ZCD SEGMENT",.ERRCOUNT)
"RTN","DGENUPL2",133,0)
 Q
"RTN","DGENUPL2",134,0)
 ;
"RTN","DGENUPL2",135,0)
ZSP ;
"RTN","DGENUPL2",136,0)
 S DGELG("SC")=$$CONVERT^DGENUPL1(SEG(2),"Y/N",.ERROR)
"RTN","DGENUPL2",137,0)
 I ERROR D  Q
"RTN","DGENUPL2",138,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 2",.ERRCOUNT)
"RTN","DGENUPL2",139,0)
 S DGELG("SCPER")=$$CONVERT^DGENUPL1(SEG(3))
"RTN","DGENUPL2",140,0)
 S DGELG("POS")=$$CONVERT^DGENUPL1(SEG(4),"POS",.ERROR)
"RTN","DGENUPL2",141,0)
 I ERROR D  Q
"RTN","DGENUPL2",142,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 4",.ERRCOUNT)
"RTN","DGENUPL2",143,0)
 S DGELG("EFFDT")=$$CONVERT^DGENUPL1(SEG(11),"DATE",.ERROR)
"RTN","DGENUPL2",144,0)
 I ERROR D  Q
"RTN","DGENUPL2",145,0)
 . D ADDERROR^DGENUPL(MSGID,$G(DGELG("EFFDT")),"BAD VALUE, ZSP SEGMENT, SEQ 11",.ERRCOUNT)
"RTN","DGENUPL2",146,0)
 ;if effective date is null, set update value to "@" (delete)
"RTN","DGENUPL2",147,0)
 I DGELG("EFFDT")="" S DGELG("EFFDT")="@"
"RTN","DGENUPL2",148,0)
 ;
"RTN","DGENUPL2",149,0)
 ;added 8/3/98 to reduce #rejects
"RTN","DGENUPL2",150,0)
 ;if HEC sends SC=NO, SC% not sent, and site has value for SC% then delete it
"RTN","DGENUPL2",151,0)
 I DGELG("SC")="N",DGELG("SCPER")="" S DGELG("SCPER")="@"
"RTN","DGENUPL2",152,0)
 ;
"RTN","DGENUPL2",153,0)
 S DGELG("P&T")=$$CONVERT^DGENUPL1(SEG(6),"Y/N",.ERROR)
"RTN","DGENUPL2",154,0)
 I ERROR D  Q
"RTN","DGENUPL2",155,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 6",.ERRCOUNT)
"RTN","DGENUPL2",156,0)
 S DGELG("UNEMPLOY")=$$CONVERT^DGENUPL1(SEG(7),"Y/N",.ERROR)
"RTN","DGENUPL2",157,0)
 I ERROR D  Q
"RTN","DGENUPL2",158,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 7",.ERRCOUNT)
"RTN","DGENUPL2",159,0)
 S DGELG("SCAWDATE")=$$CONVERT^DGENUPL1(SEG(8),"DATE",.ERROR)
"RTN","DGENUPL2",160,0)
 I ERROR D  Q
"RTN","DGENUPL2",161,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 8",.ERRCOUNT)
"RTN","DGENUPL2",162,0)
 S DGELG("P&TDT")=$$CONVERT^DGENUPL1(SEG(10),"DATE",.ERROR)
"RTN","DGENUPL2",163,0)
 I ERROR D
"RTN","DGENUPL2",164,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 10 - P&T EFFECTIVE DATE",.ERRCOUNT)
"RTN","DGENUPL2",165,0)
 S DGPAT("DENTC2IN")=$$CONVERT^DGENUPL1(SEG(12),"Y/N",.ERROR)
"RTN","DGENUPL2",166,0)
 I ERROR D  Q
"RTN","DGENUPL2",167,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 12",.ERRCOUNT)
"RTN","DGENUPL2",168,0)
 S DGPAT("DENTC2DT")=$$CONVERT^DGENUPL1(SEG(13),"DATE",.ERROR)
"RTN","DGENUPL2",169,0)
 I ERROR D  Q
"RTN","DGENUPL2",170,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 13",.ERRCOUNT)
"RTN","DGENUPL2",171,0)
 Q
"RTN","DGENUPL2",172,0)
 ;
"RTN","DGENUPL2",173,0)
ZMH ;Purple Heart, OEFOIE, POW
"RTN","DGENUPL2",174,0)
 D ZMH^DGENUPL3 ;Moved to DGENUPL3 - DG*5.3*653 
"RTN","DGENUPL2",175,0)
 Q
"RTN","DGENUPL2",176,0)
 ;
"RTN","DGENUPL2",177,0)
ZRD ;
"RTN","DGENUPL2",178,0)
 N COUNT,DXCODE,NAME,COND
"RTN","DGENUPL2",179,0)
 S DXCODE=$P(SEG(2),$E(HLECH))
"RTN","DGENUPL2",180,0)
 I DXCODE="""""" S DXCODE=""
"RTN","DGENUPL2",181,0)
 S NAME=$P(SEG(2),$E(HLECH),2)
"RTN","DGENUPL2",182,0)
 Q:DXCODE=""  ;segment does not contain a disability condition
"RTN","DGENUPL2",183,0)
 ;
"RTN","DGENUPL2",184,0)
 S COUNT=1+(+$G(DGELG("RATEDIS")))
"RTN","DGENUPL2",185,0)
 S (COND,DGELG("RATEDIS",COUNT,"RD"))=$$DCLOOKUP(DXCODE,NAME)
"RTN","DGENUPL2",186,0)
 S DGELG("RATEDIS",COUNT,"PER")=$$CONVERT^DGENUPL1(SEG(3)),DGELG("RATEDIS")=COUNT
"RTN","DGENUPL2",187,0)
 S DGELG("RATEDIS",COUNT,"RDEXT")=$$CONVERT^DGENUPL1(SEG(12))
"RTN","DGENUPL2",188,0)
 S DGELG("RATEDIS",COUNT,"RDORIG")=$$CONVERT^DGENUPL1(SEG(13),"DATE",.ERROR)
"RTN","DGENUPL2",189,0)
 I ERROR D  Q
"RTN","DGENUPL2",190,0)
 . D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZRD SEGMENT, S 13",.ERRCOUNT)
"RTN","DGENUPL2",191,0)
 S DGELG("RATEDIS",COUNT,"RDCURR")=$$CONVERT^DGENUPL1(SEG(14),"DATE",.ERROR)
"RTN","DGENUPL2",192,0)
 I ERROR D  Q
"RTN","DGENUPL2",193,0)
 . D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZRD SEGMENT, S 14",.ERRCOUNT)
"RTN","DGENUPL2",194,0)
 I 'COND D  Q
"RTN","DGENUPL2",195,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZRD SEGMENT, SEQ 2 - DISABILTY CONDITION LOOKUP FAILED",.ERRCOUNT)
"RTN","DGENUPL2",196,0)
 .S ERROR=1
"RTN","DGENUPL2",197,0)
 Q
"RTN","DGENUPL2",198,0)
OBX ;
"RTN","DGENUPL2",199,0)
 D OBX^DGENUPLA  ;code for OBX segment moved to DGENUPLA
"RTN","DGENUPL2",200,0)
 Q
"RTN","DGENUPL2",201,0)
 ;
"RTN","DGENUPL2",202,0)
 ;*********** end of segment parsers ****
"RTN","DGENUPL2",203,0)
 ;
"RTN","DGENUPL2",204,0)
DCLOOKUP(DGCODE,DGNAME) ;
"RTN","DGENUPL2",205,0)
 ; Description: Returns the ien of a Disability Condition (file #31) based on the DGCODE and DGNAME
"RTN","DGENUPL2",206,0)
 ;
"RTN","DGENUPL2",207,0)
 ;Input:
"RTN","DGENUPL2",208,0)
 ;  DGCODE - DX Code of the Disability Condition
"RTN","DGENUPL2",209,0)
 ;  DGNAME - name of the Disability Condition
"RTN","DGENUPL2",210,0)
 ;Output:
"RTN","DGENUPL2",211,0)
 ;  Function Value: ien of the entry found, or 0 otherwise
"RTN","DGENUPL2",212,0)
 ;
"RTN","DGENUPL2",213,0)
 Q:(DGCODE="") 0
"RTN","DGENUPL2",214,0)
 N NODE,IEN,FOUND
"RTN","DGENUPL2",215,0)
 S (FOUND,IEN)=0
"RTN","DGENUPL2",216,0)
 F  S IEN=$O(^DIC(31,"C",DGCODE,IEN)) Q:'IEN  D  Q:FOUND
"RTN","DGENUPL2",217,0)
 .S NODE=$G(^DIC(31,IEN,0))
"RTN","DGENUPL2",218,0)
 .I DGNAME=$P(NODE,"^"),DGCODE=$P(NODE,"^",3) S FOUND=1
"RTN","DGENUPL2",219,0)
 I 'FOUND S IEN=$O(^DIC(31,"C",DGCODE,0))
"RTN","DGENUPL2",220,0)
 Q +IEN
"RTN","DGENUPL2",221,0)
 ;
"RTN","DGENUPL2",222,0)
REGCHECK(DFN) ;
"RTN","DGENUPL2",223,0)
 ; Description: passes patient through the registration consistency checker
"RTN","DGENUPL2",224,0)
 ;Input -
"RTN","DGENUPL2",225,0)
 ;  DFN - is a pointer to the Patient File
"RTN","DGENUPL2",226,0)
 ;
"RTN","DGENUPL2",227,0)
 N DGCD,DGCHK,DGDAY,DGEDCN,DGER,DGLST,DGNCK,DGRPCOLD,DGSC,DGTYPE,DGVT,VA,X
"RTN","DGENUPL2",228,0)
 ;
"RTN","DGENUPL2",229,0)
 S DGEDCN=0
"RTN","DGENUPL2",230,0)
 D ^DGRPC
"RTN","DGENUPL2",231,0)
 Q
"RTN","DGENUPL2",232,0)
PEND(DFN,DGSTAT) ;
"RTN","DGENUPL2",233,0)
 N DGARR,DGEC,DGERR,DGX
"RTN","DGENUPL2",234,0)
 I $P($G(^DPT(DFN,.361)),U)'="V" Q 0
"RTN","DGENUPL2",235,0)
 I $G(DGSTAT)="@" Q 0
"RTN","DGENUPL2",236,0)
 I $G(DGSTAT)']"" Q 0
"RTN","DGENUPL2",237,0)
 S DGSTAT="^"_DGSTAT_"^"
"RTN","DGENUPL2",238,0)
 Q:"^15^17^"'[DGSTAT 0
"RTN","DGENUPL2",239,0)
 D GETS^DIQ(2,DFN_",",".301;.302;.361;.36295","IE","DGARR","DGERR")
"RTN","DGENUPL2",240,0)
 I $D(DGERR) Q 0
"RTN","DGENUPL2",241,0)
 S DGEC=$G(DGARR(2,DFN_",",.361,"I"))
"RTN","DGENUPL2",242,0)
 I $G(DGEC)']"" Q 0
"RTN","DGENUPL2",243,0)
 S DGEC=$P($G(^DIC(8,DGEC,0)),U,9)
"RTN","DGENUPL2",244,0)
 I $G(DGEC)']"" Q 0
"RTN","DGENUPL2",245,0)
 I DGEC=5 Q 1
"RTN","DGENUPL2",246,0)
 I DGEC=3 D  Q DGX
"RTN","DGENUPL2",247,0)
 . S DGX=1
"RTN","DGENUPL2",248,0)
 . I $G(DGARR(2,DFN_",",.301,"I"))'="Y" S DGX=0 Q
"RTN","DGENUPL2",249,0)
 . I +$G(DGARR(2,DFN_",",.302,"I"))>0 S DGX=0 Q
"RTN","DGENUPL2",250,0)
 . I +$G(DGARR(2,DFN_",",.36295,"I"))>0 S DGX=0 Q
"RTN","DGENUPL2",251,0)
 Q 0
"RTN","DGENUPL8")
0^9^B19283363^B13177328
"RTN","DGENUPL8",1,0)
DGENUPL8 ;ISA/KWP,RTK,PHH,ERC - PROCESS INCOMING (Z11 EVENT TYPE) HL7 MESSAGES ; 8/15/08 12:41pm
"RTN","DGENUPL8",2,0)
 ;;5.3;REGISTRATION;**232,266,327,314,365,417,514,688,940**;Aug 13,1993;Build 11
"RTN","DGENUPL8",3,0)
 ;Moved ENRUPLD from DGENUPL3
"RTN","DGENUPL8",4,0)
 ;
"RTN","DGENUPL8",5,0)
ENRUPLD(DGENR,DGPAT) ;
"RTN","DGENUPL8",6,0)
 ;Description: uploads an enrollment receieved from HEC. The consistency
"RTN","DGENUPL8",7,0)
 ;checks are assumed to have been done, the other patient and eligibility
"RTN","DGENUPL8",8,0)
 ;data filed already.
"RTN","DGENUPL8",9,0)
 ;
"RTN","DGENUPL8",10,0)
 ;Inputs:
"RTN","DGENUPL8",11,0)
 ;  DGENR - enrollment array (pass by reference)
"RTN","DGENUPL8",12,0)
 ;  DGPAT - patient array (pass by reference)
"RTN","DGENUPL8",13,0)
 ;
"RTN","DGENUPL8",14,0)
 ;Output: none
"RTN","DGENUPL8",15,0)
 ;
"RTN","DGENUPL8",16,0)
 ;Phase II if HEC sends enrollment statuses VERIFIED(2),UNVERIFIED(1),REJECTED-FISCAL YEAR(11),REJECTED-MID-CYCLE(12),REJECTED-STOP ENROLLING NEW APPLiCANTS(13),PENDING-NO ELIGIBILITY CODE IN VIVA(15)
"RTN","DGENUPL8",17,0)
 ; PENDING-ELIGIBILITY UNVERIFIED(17),PENDING MEANS TEST REQUIRED(16),PENDING-OTHER(18),NOT ELIGIBLE; REFUSED TO PAY COPAY(19)
"RTN","DGENUPL8",18,0)
 ; NOT ELIGIBLE; INELIGIBLE DATE(20),PENDING PURPLE HEART UNCONFIRMED(21),DECEASED(6),CANCELED/DECLINED(7),REJECTED-INITIAL APPLICATION BY VAMC(14),REJECTED BELOW EGT THRESHOLD(22) then store enrollment (SRS6.5.1.2 f)
"RTN","DGENUPL8",19,0)
 ;
"RTN","DGENUPL8",20,0)
 N CURIEN,CURENR
"RTN","DGENUPL8",21,0)
 ;
"RTN","DGENUPL8",22,0)
 ;source should not be VAMC, since it is not a local enrollment
"RTN","DGENUPL8",23,0)
 I DGENR("SOURCE")=1 S DGENR("SOURCE")=2
"RTN","DGENUPL8",24,0)
 ;
"RTN","DGENUPL8",25,0)
 ;is there a local enrollment?
"RTN","DGENUPL8",26,0)
 S CURIEN=$$FINDCUR^DGENA(DGENR("DFN"))
"RTN","DGENUPL8",27,0)
 ;
"RTN","DGENUPL8",28,0)
 ;if there is no current enrollment, store HEC enrollment and quit
"RTN","DGENUPL8",29,0)
 I 'CURIEN D  G EXIT
"RTN","DGENUPL8",30,0)
 .;Phase II (SRS 6.5.1.2 f)
"RTN","DGENUPL8",31,0)
 .I "^1^2^6^7^11^12^13^14^15^16^17^18^19^20^21^22^23^24^"[("^"_DGENR("STATUS")_"^") I $$STORECUR^DGENA1(.DGENR,1) ;DJE DG*5.3*940 - Closed Application (status 24) - RM#867186
"RTN","DGENUPL8",32,0)
 I '$$GET^DGENA(CURIEN,.CURENR) D  G EXIT
"RTN","DGENUPL8",33,0)
 .;Phase II (SRS 6.5.1.2 f)
"RTN","DGENUPL8",34,0)
 .I "^1^2^6^7^11^12^13^14^15^16^17^18^19^20^21^22^23^24^"[("^"_DGENR("STATUS")_"^") I $$STORECUR^DGENA1(.DGENR,1) ;DJE DG*5.3*940 - Closed Application (status 24) - RM#867186
"RTN","DGENUPL8",35,0)
 ;
"RTN","DGENUPL8",36,0)
 ;check for duplicate
"RTN","DGENUPL8",37,0)
 Q:$$DUP(.DGENR,.CURENR)
"RTN","DGENUPL8",38,0)
 ;
"RTN","DGENUPL8",39,0)
 ;if there is no local enrollment, HEC enrollment becomes current
"RTN","DGENUPL8",40,0)
 I CURENR("SOURCE")'=1 D  G EXIT
"RTN","DGENUPL8",41,0)
 .;Phase II (SRS 6.5.1.2 f)
"RTN","DGENUPL8",42,0)
 .I "^1^2^6^7^11^12^13^14^15^16^17^18^19^20^21^22^23^24^"[("^"_DGENR("STATUS")_"^") I $$STORECUR^DGENA1(.DGENR,1) ;DJE DG*5.3*940 - Closed Application (status 24) - RM#867186
"RTN","DGENUPL8",43,0)
 ;********************************************************************
"RTN","DGENUPL8",44,0)
 ;check for exceptions to making HEC enrollment the patient's current enrollment,i.e.,cases in which local enrollment remains the current enrollment
"RTN","DGENUPL8",45,0)
 ;********************************************************************
"RTN","DGENUPL8",46,0)
 ;
"RTN","DGENUPL8",47,0)
 ;if local enrollment has status of Deceased, if the patient is dead and HEC's enrollment doesn't have status of Deceased reject upload
"RTN","DGENUPL8",48,0)
 I (CURENR("STATUS")=6),DGENR("STATUS")'=6,DGPAT("DEATH") D  G EXIT
"RTN","DGENUPL8",49,0)
 .D ADDERROR^DGENUPL(MSGID,DGPAT("SSN"),"LOCAL SITE REQUESTED TO VERIFY PATIENT DEATH",.ERRCOUNT)
"RTN","DGENUPL8",50,0)
 .D ADDMSG^DGENUPL3(.MSGS,"ELIBILITY UPLOAD DOESN'T CONTAINED DATE OF DEATH AND WAS REJECTED, PLEASE VERIFY PATIENT DEATH",1)
"RTN","DGENUPL8",51,0)
 .D NOTIFY^DGENUPL3(.DGPAT,.MSGS)
"RTN","DGENUPL8",52,0)
 .S ERROR=1
"RTN","DGENUPL8",53,0)
 ;
"RTN","DGENUPL8",54,0)
 ;Phase II if local enrollment has status UNVERIFIED(1),REJECTED-INITIAL APPLICATION BY VAMC(14),PENDING(9)
"RTN","DGENUPL8",55,0)
 ;and HEC sends status of REJECTED-FISCAL YEAR(11),REJECTED-MID-CYCLE(12),REJECTED-STOP ENROLLING APPLICATIONS(13),PENDING-NO ELIGIBILITY CODE in VIVA(15),REJECTED BELOW EGT THRESHOLD
"RTN","DGENUPL8",56,0)
 ;PENDING-ELIGIBILITY UNVERIFIED(17),PENDING-MEANS TEST REQUIRED(16),PENDING-OTHER(18)
"RTN","DGENUPL8",57,0)
 ;CANCELED/DECLINED(7) accept upload (SRS 6.5.1.2 h)
"RTN","DGENUPL8",58,0)
 I "^1^9^14^"[("^"_CURENR("STATUS")_"^"),"^7^11^12^13^15^16^17^18^19^20^21^22^23^24^"[("^"_DGENR("STATUS")_"^") D  G EXIT  ;DJE DG*5.3*940 - Closed Application (status 24) - RM#867186
"RTN","DGENUPL8",59,0)
 .I $$STORECUR^DGENA1(.DGENR,1)
"RTN","DGENUPL8",60,0)
 ;
"RTN","DGENUPL8",61,0)
 ;if local enrollment has status of Canceled/Declined, HEC enrollment has status of Verified or Unverified, HEC enrollment has an earlier or same effective date accept upload
"RTN","DGENUPL8",62,0)
 I (CURENR("STATUS")=7),"^1^2^24^"[("^"_DGENR("STATUS")_"^"),(CURENR("EFFDATE")'<DGENR("EFFDATE")) D  G EXIT  ;DJE DG*5.3*940 - Closed Application (status 24) - RM#867186
"RTN","DGENUPL8",63,0)
 .I $$STORECUR^DGENA1(.DGENR,1)
"RTN","DGENUPL8",64,0)
 ;
"RTN","DGENUPL8",65,0)
 ;If local enrollment has a status of Unverified(1) and the HEC enrollment
"RTN","DGENUPL8",66,0)
 ; status is Verified(2), Deceased(6), Cancelled/declined(7) or Pending; Means(16)
"RTN","DGENUPL8",67,0)
 ; Test Required accept upload
"RTN","DGENUPL8",68,0)
 I "^1^"[("^"_CURENR("STATUS")_"^"),"^2^6^7^16^19^20^21^24^"[("^"_DGENR("STATUS")_"^") D  G EXIT ;DJE DG*5.3*940 - Closed Application (status 24) - RM#867186
"RTN","DGENUPL8",69,0)
 .I $$STORECUR^DGENA1(.DGENR,1)
"RTN","DGENUPL8",70,0)
 ;
"RTN","DGENUPL8",71,0)
 ;********************************************************
"RTN","DGENUPL8",72,0)
 ;end of exceptions
"RTN","DGENUPL8",73,0)
 ;********************************************************
"RTN","DGENUPL8",74,0)
 ;
"RTN","DGENUPL8",75,0)
 ;none of the exceptions apply, so make the HEC enrollment current
"RTN","DGENUPL8",76,0)
 ;Phase II (SRS 6.5.1.2 f)
"RTN","DGENUPL8",77,0)
 I "^1^2^6^7^11^12^13^14^15^16^17^18^19^20^21^22^24^"[("^"_DGENR("STATUS")_"^") I $$STORECUR^DGENA1(.DGENR,1) ;DJE DG*5.3*940 - Closed Application (status 24) - RM#867186
"RTN","DGENUPL8",78,0)
EXIT Q
"RTN","DGENUPL8",79,0)
 ;
"RTN","DGENUPL8",80,0)
DUP(DGENR1,DGENR2) ;
"RTN","DGENUPL8",81,0)
 ;Descripition: returns 1 if the enrollments are dupliates (other than
"RTN","DGENUPL8",82,0)
 ;audit information), 0 otherwise
"RTN","DGENUPL8",83,0)
 ;
"RTN","DGENUPL8",84,0)
 ;Inputs:
"RTN","DGENUPL8",85,0)
 ;  DGENR1, DGENR2 are arrays containing enrollments (pass by reference)
"RTN","DGENUPL8",86,0)
 ;
"RTN","DGENUPL8",87,0)
 ;Outputs:
"RTN","DGENUPL8",88,0)
 ;  Function Value: 1 if identical, 0 otherwise
"RTN","DGENUPL8",89,0)
 ;
"RTN","DGENUPL8",90,0)
 N SUB,SAME
"RTN","DGENUPL8",91,0)
 S SAME=1
"RTN","DGENUPL8",92,0)
 S SUB=""
"RTN","DGENUPL8",93,0)
 F  S SUB=$O(DGENR1(SUB)) Q:SUB=""  D
"RTN","DGENUPL8",94,0)
 .Q:(SUB="ELIG")
"RTN","DGENUPL8",95,0)
 .Q:(SUB="DATETIME")
"RTN","DGENUPL8",96,0)
 .Q:(SUB="USER")
"RTN","DGENUPL8",97,0)
 .Q:(SUB="PRIORREC")
"RTN","DGENUPL8",98,0)
 .I DGENR1(SUB)'=DGENR2(SUB) S SAME=0
"RTN","DGENUPL8",99,0)
 I SAME D
"RTN","DGENUPL8",100,0)
 .S SUB=""
"RTN","DGENUPL8",101,0)
 .F  S SUB=$O(DGENR1("ELIG",SUB)) Q:SUB=""  I DGENR1("ELIG",SUB)'=DGENR2("ELIG",SUB) S SAME=0
"RTN","DGENUPL8",102,0)
 Q SAME
"RTN","DGENUPL8",103,0)
 ;
"RTN","DGENUPL8",104,0)
STOREHIS(DGENR,PRIORTO) ;
"RTN","DGENUPL8",105,0)
 ;Description: Stores the enrollment contained in the DGENR array
"RTN","DGENUPL8",106,0)
 ; before the enrollment pointed to by PRIORTO.
"RTN","DGENUPL8",107,0)
 ;
"RTN","DGENUPL8",108,0)
 ;Inputs:
"RTN","DGENUPL8",109,0)
 ;  DGENR - an array containing an enrollment to be stored
"RTN","DGENUPL8",110,0)
 ;  PRIORTO - ien of the enrollment where the new enrollment should be
"RTN","DGENUPL8",111,0)
 ;            stored.  DGENR will be stored as its prior enrollment.
"RTN","DGENUPL8",112,0)
 ;
"RTN","DGENUPL8",113,0)
 Q:'$G(PRIORTO)
"RTN","DGENUPL8",114,0)
 ;
"RTN","DGENUPL8",115,0)
 N DGENRIEN,OK
"RTN","DGENUPL8",116,0)
 S OK=1
"RTN","DGENUPL8",117,0)
 ;
"RTN","DGENUPL8",118,0)
 ;the new record should point to the record prior to PRIORTO
"RTN","DGENUPL8",119,0)
 S DGENR("PRIORREC")=$$FINDPRI^DGENA(PRIORTO)
"RTN","DGENUPL8",120,0)
 ;
"RTN","DGENUPL8",121,0)
 ;store the record
"RTN","DGENUPL8",122,0)
 S DGENRIEN=$$STORE^DGENA1(.DGENR,1)
"RTN","DGENUPL8",123,0)
 I 'DGENRIEN S OK=0
"RTN","DGENUPL8",124,0)
 ;
"RTN","DGENUPL8",125,0)
 ;now point the record=PRIORTO to the new record
"RTN","DGENUPL8",126,0)
 D:OK
"RTN","DGENUPL8",127,0)
 .N DATA
"RTN","DGENUPL8",128,0)
 .S DATA(.09)=DGENRIEN
"RTN","DGENUPL8",129,0)
 .I $$UPD^DGENDBS(27.11,PRIORTO,.DATA) ;then success
"RTN","DGENUPL8",130,0)
 Q
"RTN","DGRPD")
0^11^B79894914^B77747984
"RTN","DGRPD",1,0)
DGRPD ;ALB/MRL,MLR,JAN,LBD,EG,BRM,JRC,BAJ,KUM - PATIENT INQUIRY (NEW) ;August 18, 2017
"RTN","DGRPD",2,0)
 ;;5.3;Registration;**109,124,121,57,161,149,286,358,436,445,489,498,506,513,518,550,545,568,585,677,703,688,887,907,925,936,940**;Aug 13, 1993;Build 11
"RTN","DGRPD",3,0)
 ;  *286*  Newing variables X,Y in OKLINE subroutine
"RTN","DGRPD",4,0)
 ;  *358*  If a patient is on a domiciliary ward, don't display MEANS
"RTN","DGRPD",5,0)
 ;         TEST required/Medication Copayment Exemption messages
"RTN","DGRPD",6,0)
 ;  *436*  If an inpatient is not on a domiciliary ward, don't display
"RTN","DGRPD",7,0)
 ;         Medication Copayment Exemption message
"RTN","DGRPD",8,0)
 ;  *545*  Add death information near the remarks field
"RTN","DGRPD",9,0)
 ;  *677*  Added Emergency Response
"RTN","DGRPD",10,0)
 ;  *688*  Modified to display Country and Foreign Address
"RTN","DGRPD",11,0)
 ;  *936*  Modified to display Health Benefit Plans
"RTN","DGRPD",12,0)
 ;  *940*  #879316,#879318 - Display Permanent & Total Disabled Status
"RTN","DGRPD",13,0)
 ;
"RTN","DGRPD",14,0)
 ;  Integration Agreements:
"RTN","DGRPD",15,0)
 ;        6138 - DGHBPUTL API
"RTN","DGRPD",16,0)
 ;
"RTN","DGRPD",17,0)
SEL K DFN,DGRPOUT W ! S DIC="^DPT(",DIC(0)="AEQMZ" D ^DIC G Q:Y'>0 S DFN=+Y N Y W ! S DIR(0)="E" D ^DIR G SEL:$D(DTOUT)!($D(DUOUT)) D EN G SEL
"RTN","DGRPD",18,0)
EN ;call to display patient inquiry - input DFN
"RTN","DGRPD",19,0)
 ;MPI/PD CHANGE
"RTN","DGRPD",20,0)
 S DGCMOR="UNSPECIFIED",DGMPI=$G(^DPT(+DFN,"MPI"))
"RTN","DGRPD",21,0)
 S DGLOCATN=$$FIND1^DIC(4,"","MX","`"_+$P(DGMPI,U,3)),DGLOCATN=$S(+DGLOCATN>0:$P($$NS^XUAF4(DGLOCATN),U),1:"NOT LISTED")
"RTN","DGRPD",22,0)
 I $D(DGMPI),$D(DGLOCATN) S DGCMOR=$P(DGLOCATN,"^")
"RTN","DGRPD",23,0)
 ;END MPI/PD CHANGE
"RTN","DGRPD",24,0)
 K DGRPOUT,DGHOW S DGABBRV=$S($D(^DG(43,1,0)):+$P(^(0),"^",38),1:0),DGRPU="UNSPECIFIED" D DEM^VADPT,HDR^DGRPD1 F I=0,.11,.13,.121,.122,.31,.32,.36,.361,.141,.3 S DGRP(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","DGRPD",25,0)
 S DGAD=.11,(DGA1,DGA2)=1 D A^DGRPU S DGTMPAD=0 I $P(DGRP(.121),"^",9)="Y" S DGTMPAD=$S('$P(DGRP(.121),"^",8):1,$P(DGRP(.121),"^",8)'<DT:1,1:0) I DGTMPAD S DGAD=.121,DGA1=1,DGA2=2 D A^DGRPU
"RTN","DGRPD",26,0)
 ;jam DG*5.3*925 RM#788099 Add/Edit Residential address - move addresses down 1 line below the field labels
"RTN","DGRPD",27,0)
 ; and change labels to "Permanent Mailing Address" and "Temporary Mailing Address"
"RTN","DGRPD",28,0)
 W ?1,"Permanent Mailing Address: ",?40,"Temporary Mailing Address: "
"RTN","DGRPD",29,0)
 W !,?9,$S($D(DGA(1)):DGA(1),1:"NONE ON FILE"),?48,$S($D(DGA(2)):DGA(2),1:"NO TEMPORARY MAILING")
"RTN","DGRPD",30,0)
 S I=2 F I1=0:0 S I=$O(DGA(I)) Q:I=""  W:(I#2)!($X>50) !?9 W:'(I#2) ?48 W DGA(I)
"RTN","DGRPD",31,0)
 S DGCC=+$P(DGRP(.11),U,7),DGST=+$P(DGRP(.11),U,5),DGCC=$S($D(^DIC(5,DGST,1,DGCC,0)):$E($P(^(0),U,1),1,20)_$S($P(^(0),U,3)]"":" ("_$P(^(0),U,3)_")",1:""),1:DGRPU)
"RTN","DGRPD",32,0)
 N DGCNTRY,DGFORGN S DGCNTRY=$P(DGRP(.11),"^",10),DGFORGN=$$FORIEN^DGADDUTL(DGCNTRY) I 'DGFORGN W !?2,"County: ",DGCC
"RTN","DGRPD",33,0)
 S X="NOT APPLICABLE" I DGTMPAD S Y=$P(DGRP(.121),U,7) X:Y]"" ^DD("DD") S X=$S(Y]"":Y,1:DGRPU)_"-",Y=$P(DGRP(.121),U,8) X:Y]"" ^DD("DD") S X=X_$S(Y]"":Y,1:DGRPU)
"RTN","DGRPD",34,0)
 N DGSKIP S DGSKIP=$S(DGFORGN:"!,?42,""From/To: """,1:"?42, ""From/To: """)
"RTN","DGRPD",35,0)
 W @DGSKIP,X,!?3,"Phone: ",$S($P(DGRP(.13),U,1)]"":$P(DGRP(.13),U,1),1:DGRPU),?44,"Phone: ",$S('DGTMPAD:X,$P(DGRP(.121),U,10)]"":$P(DGRP(.121),U,10),1:DGRPU) K DGTMPADW
"RTN","DGRPD",36,0)
 W !?2,"Office: ",$S($P(DGRP(.13),U,2)]"":$P(DGRP(.13),U,2),1:DGRPU)
"RTN","DGRPD",37,0)
 W !?4,"Cell: ",$S($P(DGRP(.13),U,4)]"":$P(DGRP(.13),U,4),1:DGRPU)
"RTN","DGRPD",38,0)
 W !?2,"E-mail: ",$S($P(DGRP(.13),U,3)]"":$P(DGRP(.13),U,3),1:DGRPU)
"RTN","DGRPD",39,0)
 W !,"Bad Addr: ",$$EXTERNAL^DILFD(2,.121,"",$$BADADR^DGUTL3(+DFN))
"RTN","DGRPD",40,0)
 D CA
"RTN","DGRPD",41,0)
 N DGEMER S DGEMER=$$EXTERNAL^DILFD(2,.181,"",$P($G(^DPT(DFN,.18)),"^"))
"RTN","DGRPD",42,0)
 W:DGEMER]"" !?32,"Emergency Response: ",DGEMER
"RTN","DGRPD",43,0)
 I 'DGABBRV W !!?4,"POS: ",$S($D(^DIC(21,+$P(DGRP(.32),"^",3),0)):$P(^(0),"^",1),1:DGRPU),?42,"Claim #: ",$S($P(DGRP(.31),"^",3)]"":$P(DGRP(.31),"^",3),1:"UNSPECIFIED")
"RTN","DGRPD",44,0)
 I 'DGABBRV W !?2,"Relig: ",$S($D(^DIC(13,+$P(DGRP(0),"^",8),0)):$P(^(0),"^",1),1:DGRPU),?46,"Birth Sex: ",$S($P(VADM(5),"^",2)]"":$P(VADM(5),"^",2),1:"UNSPECIFIED") ; DG*5.3*907
"RTN","DGRPD",45,0)
 I 'DGABBRV W ! D
"RTN","DGRPD",46,0)
 .N RACE,ETHNIC,PTR,VAL,X,DIWL,DIWR,DIWF
"RTN","DGRPD",47,0)
 .K ^UTILITY($J,"W")
"RTN","DGRPD",48,0)
 .S PTR=0 F  S PTR=+$O(^DPT(DFN,.02,PTR)) Q:'PTR  D
"RTN","DGRPD",49,0)
 ..S VAL=+$G(^DPT(DFN,.02,PTR,0))
"RTN","DGRPD",50,0)
 ..Q:$$INACTIVE^DGUTL4(VAL,1)
"RTN","DGRPD",51,0)
 ..S VAL=$$PTR2TEXT^DGUTL4(VAL,1) S:+$O(^DPT(DFN,.02,PTR)) VAL=VAL_", "
"RTN","DGRPD",52,0)
 ..S X=VAL,DIWL=0,DIWR=30,DIWF="" D ^DIWP
"RTN","DGRPD",53,0)
 .M RACE=^UTILITY($J,"W",0) S:$G(RACE(1,0))="" RACE(1,0)="UNANSWERED"
"RTN","DGRPD",54,0)
 .K ^UTILITY($J,"W")
"RTN","DGRPD",55,0)
 .S PTR=0 F  S PTR=+$O(^DPT(DFN,.06,PTR)) Q:'PTR  D
"RTN","DGRPD",56,0)
 ..S VAL=+$G(^DPT(DFN,.06,PTR,0))
"RTN","DGRPD",57,0)
 ..Q:$$INACTIVE^DGUTL4(VAL,2)
"RTN","DGRPD",58,0)
 ..S VAL=$$PTR2TEXT^DGUTL4(VAL,2) S:+$O(^DPT(DFN,.06,PTR)) VAL=VAL_", "
"RTN","DGRPD",59,0)
 ..S X=VAL,DIWL=0,DIWR=30,DIWF="" D ^DIWP
"RTN","DGRPD",60,0)
 .M ETHNIC=^UTILITY($J,"W",0) S:$G(ETHNIC(1,0))="" ETHNIC(1,0)="UNANSWERED"
"RTN","DGRPD",61,0)
 .K ^UTILITY($J,"W")
"RTN","DGRPD",62,0)
 .W ?3,"Race: ",RACE(1,0),?40,"Ethnicity: ",ETHNIC(1,0)
"RTN","DGRPD",63,0)
 .F X=2:1 Q:'$D(RACE(X,0))&'$D(ETHNIC(X,0))  W !,?9,$G(RACE(X,0)),?51,$G(ETHNIC(X,0))
"RTN","DGRPD",64,0)
 I '$$OKLINE^DGRPD1(16) G Q
"RTN","DGRPD",65,0)
 D LANGUAGE
"RTN","DGRPD",66,0)
 I '$$OKLINE^DGRPD1(10) G Q
"RTN","DGRPD",67,0)
 ;display cv status #4156
"RTN","DGRPD",68,0)
 N DGCV S DGCV=$$CVEDT^DGCV(+DFN)
"RTN","DGRPD",69,0)
 W !!,?2,"Combat Vet Status: "_$S($P(DGCV,U,3)=1:"ELIGIBLE",$P(DGCV,U,3)="":"NOT ELIGIBLE",1:"EXPIRED") I DGCV>0 W ?45,"End Date: "_$$FMTE^XLFDT($P(DGCV,U,2),"5DZ")
"RTN","DGRPD",70,0)
 ;display primary eligibility
"RTN","DGRPD",71,0)
 S X1=DGRP(.36),X=$P(DGRP(.361),"^",1) W !,"Primary Eligibility: ",$S($D(^DIC(8,+X1,0)):$P(^(0),"^",1)_" ("_$S(X="V":"VERIFIED",X="P":"PENDING VERIFICATION",X="R":"PENDING REVERIFICATION",1:"NOT VERIFIED")_")",1:DGRPU)
"RTN","DGRPD",72,0)
 W !,"Other Eligibilities: " F I=0:0 S I=$O(^DIC(8,I)) Q:'I  I $D(^DIC(8,I,0)),I'=+X1 S X=$P(^(0),"^",1)_", " I $D(^DPT("AEL",DFN,I)) W:$X+$L(X)>79 !?21 W X
"RTN","DGRPD",73,0)
 I '$$OKLINE^DGRPD1(16) G Q
"RTN","DGRPD",74,0)
 ;employability status
"RTN","DGRPD",75,0)
 W !?6,"Unemployable: ",$S($P(DGRP(.3),U,5)="Y":"YES",1:"NO")
"RTN","DGRPD",76,0)
 I '$$OKLINE^DGRPD1(19) G Q
"RTN","DGRPD",77,0)
 ; KUM DG*5.3*940 RM #879316,#879318 - Display Permanent & Total Disabled status
"RTN","DGRPD",78,0)
 W !?6,"Permanent & Total Disabled: ",$S($P(DGRP(.3),U,4)="Y":"YES",1:"NO")
"RTN","DGRPD",79,0)
 I '$$OKLINE^DGRPD1(19) G Q
"RTN","DGRPD",80,0)
 ;display the catastrophic disability review date if there is one
"RTN","DGRPD",81,0)
 D CATDIS^DGRPD1
"RTN","DGRPD",82,0)
 I $G(DGPRFLG)=1 G Q:'$$OKLINE^DGRPD1(19) D
"RTN","DGRPD",83,0)
 . N DGPDT,DGPTM
"RTN","DGRPD",84,0)
 . W !,$$REPEAT^XLFSTR("-",78)
"RTN","DGRPD",85,0)
 . S DGPDT="",DGPDT=$O(^DGS(41.41,"ADC",DFN,DGPDT),-1)
"RTN","DGRPD",86,0)
 . W !,"[PRE-REGISTER DATE:]  "_$S(DGPDT]"":$$FMTE^XLFDT(DGPDT,"1D"),1:"NONE ON FILE")
"RTN","DGRPD",87,0)
 . S DGPTM=$$PCTEAM^DGSDUTL(DFN)
"RTN","DGRPD",88,0)
 . I $P(DGPTM,U,2)]"" W !,"[PRIMARY CARE TEAM:] "_$P(DGPTM,U,2)
"RTN","DGRPD",89,0)
 . W !,$$REPEAT^XLFSTR("-",78)
"RTN","DGRPD",90,0)
 ; Check if patient is an inpatient and on a DOM ward
"RTN","DGRPD",91,0)
 ; If inpatient is on a DOM ward, don't display MT or CP messages
"RTN","DGRPD",92,0)
 ; If inpatient is NOT on a DOM ward, don't display CP message
"RTN","DGRPD",93,0)
 N DGDOM,DGDOM1,VAHOW,VAROOT,VAINDT,VAIP,VAERR
"RTN","DGRPD",94,0)
 G Q:'$$OKLINE^DGRPD1(16)
"RTN","DGRPD",95,0)
 D DOM^DGMTR
"RTN","DGRPD",96,0)
 I '$G(DGDOM) D
"RTN","DGRPD",97,0)
 .D DIS^DGMTU(DFN)
"RTN","DGRPD",98,0)
 .D IN5^VADPT
"RTN","DGRPD",99,0)
 .I $G(VAIP(1))="" D DISP^IBARXEU(DFN,DT,3,1)
"RTN","DGRPD",100,0)
 ;I 'DGABBRV,$E(IOST,1,2)="C-" F I=$Y:1:20 W !
"RTN","DGRPD",101,0)
 D DIS^EASECU(DFN)   ;Added for LTC III (DG*5.3*518)
"RTN","DGRPD",102,0)
 S VAIP("L")=""
"RTN","DGRPD",103,0)
 I $$OKLINE^DGRPD1(14) D INP
"RTN","DGRPD",104,0)
 I '$G(DGRPOUT),($$OKLINE^DGRPD1(10)) D SA ;*KNR*
"RTN","DGRPD",105,0)
 ;MPI/PD CHANGE
"RTN","DGRPD",106,0)
Q D KVA^VADPT K %DT,D0,D1,DGA,DGA1,DGA2,DGABBRV,DGAD,DGCC,DGCMOR,DGDOM,DGLOCATN,DGMPI,DGRP,DGRPU,DGS,DGST,DGXFR0,DIC,DIR,DTOUT,DUOUT,DIRUT,DIROUT,I,I1,L,LDM,POP,SDCT,VA,X,X1,Y Q
"RTN","DGRPD",107,0)
CA ;Confidential Address
"RTN","DGRPD",108,0)
 W !!?1,"Confidential Address:  ",?44,"Confidential Address Categories:"
"RTN","DGRPD",109,0)
 N DGCABEG,DGCAEND,DGA,DGARRAY,DGERROR
"RTN","DGRPD",110,0)
 S DGCABEG=$P(DGRP(.141),U,7),DGCAEND=$P(DGRP(.141),U,8)
"RTN","DGRPD",111,0)
 I 'DGCABEG!(DGCABEG>DT)!(DGCAEND&(DGCAEND<DT)) D  Q
"RTN","DGRPD",112,0)
 .W !?9,"NO CONFIDENTIAL ADDRESS"
"RTN","DGRPD",113,0)
 .W !?1,"From/To: NOT APPLICABLE"
"RTN","DGRPD",114,0)
 S DGAD=.141,(DGA1,DGA2)=1
"RTN","DGRPD",115,0)
 D AL^DGRPU(30)
"RTN","DGRPD",116,0)
 D GETS^DIQ(2,DFN,".141*,","E","DGARRAY","DGERROR")
"RTN","DGRPD",117,0)
 ;Format Confidential Address categories
"RTN","DGRPD",118,0)
 N DGIEN,DGCAST
"RTN","DGRPD",119,0)
 S DGIEN=0
"RTN","DGRPD",120,0)
 S DGA2=2
"RTN","DGRPD",121,0)
 F  S DGIEN=$O(DGARRAY(2.141,DGIEN)) Q:'DGIEN  D
"RTN","DGRPD",122,0)
 .S DGA(DGA2)=DGARRAY(2.141,DGIEN,.01,"E")
"RTN","DGRPD",123,0)
 .S DGCAST=DGARRAY(2.141,DGIEN,1,"E")
"RTN","DGRPD",124,0)
 .S DGA(DGA2)=DGA(DGA2)_"("_$S(DGCAST="YES":"Active",1:"Inactive")_")"
"RTN","DGRPD",125,0)
 .S DGA2=DGA2+2
"RTN","DGRPD",126,0)
 S I=0 F I1=0:0 S I=$O(DGA(I)) Q:I=""  W:(I#2)!($X>43) !?9 W:'(I#2) ?44 W DGA(I)
"RTN","DGRPD",127,0)
 W !?1,"From/To:  ",$$FMTE^XLFDT(DGCABEG)_"-"_$S(DGCAEND'="":$$FMTE^XLFDT(DGCAEND),1:"UNANSWERED")
"RTN","DGRPD",128,0)
 Q
"RTN","DGRPD",129,0)
INP S VAIP("D")="L" D INP^DGPMV10
"RTN","DGRPD",130,0)
 S DGPMT=0
"RTN","DGRPD",131,0)
 D CS^DGPMV10 K DGPMT,DGPMIFN K:'$D(DGSWITCH) DGPMVI,DGPMDCD Q
"RTN","DGRPD",132,0)
SA F I=0:0 S I=$O(^DGS(41.1,"B",DFN,I)) G CL:'I S X=^DGS(41.1,I,0) I $P(X,"^",2)>(DT-1),$P(X,"^",13)']"",'$P(X,"^",17) S L=$P(X,"^",2) D:$$OKLINE^DGRPD1(17) SAA Q:$G(DGRPOUT)
"RTN","DGRPD",133,0)
 Q
"RTN","DGRPD",134,0)
SAA ;Scheduled Admit Data
"RTN","DGRPD",135,0)
 W !!?14,"Scheduled Admit"
"RTN","DGRPD",136,0)
 W:$D(^DIC(42,+$P(X,U,8),0)) " on ward "_$P(^(0),U)
"RTN","DGRPD",137,0)
 W:$D(^DIC(45.7,+$P(X,U,9),0)) " for treating specialty "_$P(^(0),U)
"RTN","DGRPD",138,0)
 W " on "_$$FMTE^XLFDT(L,"5DZ")
"RTN","DGRPD",139,0)
 Q  ;SAA
"RTN","DGRPD",140,0)
 ;
"RTN","DGRPD",141,0)
CL G FA:$O(^DPT(DFN,"DE",0))="" S SDCT=0 F I=0:0 S I=$O(^DPT(DFN,"DE",I)) Q:'I  I $D(^(I,0)),$P(^(0),"^",2)'="I",$O(^(0)) S SDCT=SDCT+1 W:SDCT=1 !!,"Currently enrolled in " W:$X>50 !?22 W $S($D(^SC(+^(0),0)):$P(^(0),"^",1)_", ",1:"")
"RTN","DGRPD",142,0)
 ;
"RTN","DGRPD",143,0)
FA ;
"RTN","DGRPD",144,0)
 N DGARRAY,SDCNT
"RTN","DGRPD",145,0)
 S DGARRAY("FLDS")="1;2;3;18",DGARRAY(4)=DFN,DGARRAY(1)=DT,DGARRAY("SORT")="P"
"RTN","DGRPD",146,0)
 S SDCNT=$$SDAPI^SDAMA301(.DGARRAY),CT=0 W !!,"Future Appointments: "
"RTN","DGRPD",147,0)
 ;if there is lower subscripts hanging from the 101 node,
"RTN","DGRPD",148,0)
 ;then it is a valid appointment, otherwise it is
"RTN","DGRPD",149,0)
 ;an error eg 01/20/2005
"RTN","DGRPD",150,0)
 ;G:'$$OKLINE^DGRPD1(13) RMK ;*///*
"RTN","DGRPD",151,0)
 I $D(^TMP($J,"SDAMA301",101))=1 W "Appointment Database is Unavailable" G RMK
"RTN","DGRPD",152,0)
 I $O(^TMP($J,"SDAMA301",DFN,DT))'>0 W "NONE" G RMK
"RTN","DGRPD",153,0)
 ;
"RTN","DGRPD",154,0)
 W ?22,"Date",?33,"Time",?39,"Clinic",!?22 F I=22:1:75 W "="
"RTN","DGRPD",155,0)
 F FA=DT:0 S FA=$O(^TMP($J,"SDAMA301",DFN,FA)) G RMK:'FA D  Q:CT>5
"RTN","DGRPD",156,0)
 .N STAT S STAT=$P($P(^TMP($J,"SDAMA301",DFN,FA),U,3),";")
"RTN","DGRPD",157,0)
 .S C=+$P(^TMP($J,"SDAMA301",DFN,FA),U,2) I STAT'["C" D
"RTN","DGRPD",158,0)
 ..D COV
"RTN","DGRPD",159,0)
 ..N DGAPPT S DGAPPT=$$FMTE^XLFDT($E(FA,1,12),"5Z")
"RTN","DGRPD",160,0)
 ..W !?22,$P(DGAPPT,"@"),?33,$P(DGAPPT,"@",2)
"RTN","DGRPD",161,0)
 ..W ?39,$P($P(^TMP($J,"SDAMA301",DFN,FA),U,2),";",2)," ",COV
"RTN","DGRPD",162,0)
 ..Q
"RTN","DGRPD",163,0)
 I $O(^TMP($J,"SDAMA301",DFN,FA))>0 W !,"See Scheduling options for additional appointments."
"RTN","DGRPD",164,0)
RMK I '$G(DGRPOUT),($$OKLINE^DGRPD1(15)) W !!,"Remarks: ",$P(^DPT(DFN,0),"^",10) ;*///*
"RTN","DGRPD",165,0)
 D GETS^DIQ(2,DFN_",",".351;.353;.354;.355","E","PDTHINFO")
"RTN","DGRPD",166,0)
 W !!
"RTN","DGRPD",167,0)
 W "Date of Death Information"
"RTN","DGRPD",168,0)
 W !,?5,"Date of Death: ",$G(PDTHINFO(2,DFN_",",.351,"E"))
"RTN","DGRPD",169,0)
 W !,?5,"Source of Notification: ",$G(PDTHINFO(2,DFN_",",.353,"E"))
"RTN","DGRPD",170,0)
 W !,?5,"Updated Date/Time: ",$G(PDTHINFO(2,DFN_",",.354,"E"))
"RTN","DGRPD",171,0)
 W !,?5,"Last Edited By: ",$G(PDTHINFO(2,DFN_",",.355,"E")),!
"RTN","DGRPD",172,0)
 I $$OKLINE^DGRPD1(14) D EC^DGRPD1
"RTN","DGRPD",173,0)
 D HBP
"RTN","DGRPD",174,0)
 K DGARRAY,SDCNT,^TMP($J,"SDAMA301"),ADM,L,TRN,DIS,SSN,FA,C,COV,NOW,CT,DGD,DGD1,I ;Y killed after dghinqky
"RTN","DGRPD",175,0)
 Q
"RTN","DGRPD",176,0)
 ; KUM DG*5.3*936 Display Health Benefit Plans assigned to Veteran
"RTN","DGRPD",177,0)
HBP W !!,"Health Benefit Plans Currently Assigned to Veteran:"
"RTN","DGRPD",178,0)
 N DGHBP,HBP,DGCOUNT
"RTN","DGRPD",179,0)
 S DGCOUNT=0
"RTN","DGRPD",180,0)
 D GETHBP^DGHBPUTL(DFN)
"RTN","DGRPD",181,0)
 S DGHBP="" F  S DGHBP=$O(HBP("CUR",DGHBP)) Q:DGHBP=""  D
"RTN","DGRPD",182,0)
 .W !,?3,DGHBP
"RTN","DGRPD",183,0)
 .S DGCOUNT=DGCOUNT+1
"RTN","DGRPD",184,0)
 I DGCOUNT=0 W !,?3,"None"
"RTN","DGRPD",185,0)
 Q
"RTN","DGRPD",186,0)
 ;
"RTN","DGRPD",187,0)
COV S COV=$S(+$P(^TMP($J,"SDAMA301",DFN,FA),U,18)=7:" (Collateral) ",1:"")
"RTN","DGRPD",188,0)
 S COV=COV_$S(STAT["NT":" * NO ACTION TAKEN *",STAT["N":" * NO-SHOW *",1:""),CT=CT+1 Q
"RTN","DGRPD",189,0)
 Q
"RTN","DGRPD",190,0)
 ;
"RTN","DGRPD",191,0)
OREN S XQORQUIT=1 Q:'$D(ORVP)  S DFN=+ORVP D EN R !!,"Press RETURN to CONTINUE: ",X:DTIME
"RTN","DGRPD",192,0)
 Q
"RTN","DGRPD",193,0)
LANGUAGE ; Get language data *///*
"RTN","DGRPD",194,0)
 S DGLANGDT=9999999,(DGPRFLAN,DGLANG0)=""
"RTN","DGRPD",195,0)
 S DGLANGDT=$O(^DPT(DFN,.207,"B",DGLANGDT),-1)
"RTN","DGRPD",196,0)
 I DGLANGDT="" G L1
"RTN","DGRPD",197,0)
 S DGLANGDA=$O(^DPT(DFN,.207,"B",DGLANGDT,0))
"RTN","DGRPD",198,0)
 S DGLANG0=$G(^DPT(DFN,.207,DGLANGDA,0)),Y=$P(DGLANG0,U),DGPRFLAN=$P(DGLANG0,U,2)
"RTN","DGRPD",199,0)
 S Y=DGLANGDT X ^DD("DD") S DGLANGDT=Y
"RTN","DGRPD",200,0)
L1 W !!,"Language Date/Time: ",$S(DGLANGDT="":"UNANSWERED",1:DGLANGDT),!
"RTN","DGRPD",201,0)
 W ?1,"Preferred Language: ",$S(DGPRFLAN="":"UNANSWERED",1:DGPRFLAN)
"RTN","DGRPD",202,0)
 K DGLANGDT,DGPRFLAN,DGLANG0,DGLANGDA
"RTN","DGRPD",203,0)
 Q
"VER")
8.0^22.2
"^DD",27.11,27.11,.13,0)
REASON FOR CLOSED APPLICATION^S^1:ABANDONED APPLICATION;^0;13^Q
"^DD",27.11,27.11,.13,3)
Select '1', ABANDONED APPLICATION, as the reason the Veteran's application has been closed.
"^DD",27.11,27.11,.13,21,0)
^^2^2^3170516^
"^DD",27.11,27.11,.13,21,1,0)
When an application is closed due to no response received from veteran 
"^DD",27.11,27.11,.13,21,2,0)
for 365 days after initial pending notifications were sent.
"^DD",27.11,27.11,.13,"DT")
3170516
"^DD",27.15,27.15,0)
FIELD^^25^5
"^DD",27.15,27.15,0,"DDA")
N
"^DD",27.15,27.15,0,"DT")
2990422
"^DD",27.15,27.15,0,"IX","B",27.15,.01)

"^DD",27.15,27.15,0,"NM","ENROLLMENT STATUS")

"^DD",27.15,27.15,0,"PT",27.11,.04)

"^DD",27.15,27.15,0,"PT",727.809,48)

"^DD",27.15,27.15,0,"PT",727.81,57)

"^DD",27.15,27.15,0,"PT",727.826,55)

"^DD",27.15,27.15,0,"PT",727.827,61)

"^DD",27.15,27.15,0,"PT",727.832,22)

"^DD",27.15,27.15,0,"PT",727.833,54)

"^DD",27.15,27.15,0,"VRPK")
DG
"^DD",27.15,27.15,.001,0)
ENTRY NUMBER^NJ3,0^^ ^K:+X'=X!(X>100)!(X<1)!(X?.E1"."1N.N) X
"^DD",27.15,27.15,.001,3)
Type a Number between 1 and 100, 0 Decimal Digits
"^DD",27.15,27.15,.001,21,0)
^^1^1^2990422^
"^DD",27.15,27.15,.001,21,1,0)
This field will indicate the internal entry number associated with the enrollment status.
"^DD",27.15,27.15,.001,"DT")
2990422
"^DD",27.15,27.15,.01,0)
NAME^RF^^0;1^K:$L(X)>45!($L(X)<3)!'(X'?1P.E) X
"^DD",27.15,27.15,.01,1,0)
^.1
"^DD",27.15,27.15,.01,1,1,0)
27.15^B
"^DD",27.15,27.15,.01,1,1,1)
S ^DGEN(27.15,"B",$E(X,1,30),DA)=""
"^DD",27.15,27.15,.01,1,1,2)
K ^DGEN(27.15,"B",$E(X,1,30),DA)
"^DD",27.15,27.15,.01,3)
Answer must be 3-45 characters in length.
"^DD",27.15,27.15,.01,21,0)
^^1^1^2990422^^^
"^DD",27.15,27.15,.01,21,1,0)
This field contains the enrollment status name.
"^DD",27.15,27.15,.01,"DT")
2990422
"^DD",27.15,27.15,.02,0)
ENROLLMENT CATEGORY^S^E:ENROLLED;N:NOT ENROLLED;P:IN PROCESS;^0;2^Q
"^DD",27.15,27.15,.02,21,0)
^^1^1^2990422^^
"^DD",27.15,27.15,.02,21,1,0)
This field will contain the enrollment category associated with the enrollment status.
"^DD",27.15,27.15,.02,"DT")
2990422
"^DD",27.15,27.15,.03,0)
INACTIVE DATE^D^^0;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",27.15,27.15,.03,3)

"^DD",27.15,27.15,.03,21,0)
^^1^1^2990422^^^
"^DD",27.15,27.15,.03,21,1,0)
This field will contain the date that the enrollment status became inactive.
"^DD",27.15,27.15,.03,"DT")
2990422
"^DD",27.15,27.15,25,0)
DESCRIPTION^27.1525^^D;0
"^DD",27.15,27.1525,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",27.15,27.1525,0,"DT")
2990422
"^DD",27.15,27.1525,0,"NM","DESCRIPTION")

"^DD",27.15,27.1525,0,"UP")
27.15
"^DD",27.15,27.1525,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",27.15,27.1525,.01,21,0)
^^1^1^2990422^
"^DD",27.15,27.1525,.01,21,1,0)
This field will contain the description associated with the enrollment status.
"^DD",27.15,27.1525,.01,"DT")
2990422
"^DIC",27.15,27.15,0)
ENROLLMENT STATUS^27.15
"^DIC",27.15,27.15,0,"GL")
^DGEN(27.15,
"^DIC",27.15,27.15,"%D",0)
^^1^1^2990621^^^
"^DIC",27.15,27.15,"%D",1,0)
This file will contain the statuses associated with an enrollment application.
"^DIC",27.15,"B","ENROLLMENT STATUS",27.15)

"BLD",10208,6)
^831
**END**
**END**

