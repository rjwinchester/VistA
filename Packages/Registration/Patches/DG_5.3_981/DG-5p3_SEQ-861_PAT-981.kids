Released DG*5.3*981 SEQ #861
Extracted from mail message
**KIDS**:DG*5.3*981^

**INSTALL NAME**
DG*5.3*981
"BLD",3405,0)
DG*5.3*981^REGISTRATION^0^3190826^y
"BLD",3405,1,0)
^^3^3^3190826^^
"BLD",3405,1,1,0)
MASTER VETERAN INDEX VISTA ENHANCEMENTS - EHRM SUPPORT
"BLD",3405,1,2,0)
Refer to patch DG*5.3*981 in the FORUM Patch Module for a complete
"BLD",3405,1,3,0)
description.
"BLD",3405,4,0)
^9.64PA^391.919^1
"BLD",3405,4,391.919,0)
391.919
"BLD",3405,4,391.919,222)
y^y^f^^^^n
"BLD",3405,4,"B",391.919,391.919)

"BLD",3405,6.3)
1
"BLD",3405,"KRN",0)
^9.67PA^1.5^24
"BLD",3405,"KRN",.4,0)
.4
"BLD",3405,"KRN",.401,0)
.401
"BLD",3405,"KRN",.402,0)
.402
"BLD",3405,"KRN",.403,0)
.403
"BLD",3405,"KRN",.5,0)
.5
"BLD",3405,"KRN",.84,0)
.84
"BLD",3405,"KRN",1.5,0)
1.5
"BLD",3405,"KRN",1.6,0)
1.6
"BLD",3405,"KRN",1.61,0)
1.61
"BLD",3405,"KRN",1.62,0)
1.62
"BLD",3405,"KRN",3.6,0)
3.6
"BLD",3405,"KRN",3.8,0)
3.8
"BLD",3405,"KRN",9.2,0)
9.2
"BLD",3405,"KRN",9.8,0)
9.8
"BLD",3405,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",3405,"KRN",9.8,"NM",1,0)
VAFCCRNR^^0^B4581659
"BLD",3405,"KRN",9.8,"NM",2,0)
VAFCTFU2^^0^B48038371
"BLD",3405,"KRN",9.8,"NM",3,0)
VAFCRPC^^0^B7979176
"BLD",3405,"KRN",9.8,"NM",4,0)
DPTLK7^^0^B207157129
"BLD",3405,"KRN",9.8,"NM",5,0)
VAFCQRY1^^0^B99425329
"BLD",3405,"KRN",9.8,"NM","B","DPTLK7",4)

"BLD",3405,"KRN",9.8,"NM","B","VAFCCRNR",1)

"BLD",3405,"KRN",9.8,"NM","B","VAFCQRY1",5)

"BLD",3405,"KRN",9.8,"NM","B","VAFCRPC",3)

"BLD",3405,"KRN",9.8,"NM","B","VAFCTFU2",2)

"BLD",3405,"KRN",19,0)
19
"BLD",3405,"KRN",19.1,0)
19.1
"BLD",3405,"KRN",101,0)
101
"BLD",3405,"KRN",409.61,0)
409.61
"BLD",3405,"KRN",771,0)
771
"BLD",3405,"KRN",779.2,0)
779.2
"BLD",3405,"KRN",870,0)
870
"BLD",3405,"KRN",8989.51,0)
8989.51
"BLD",3405,"KRN",8989.52,0)
8989.52
"BLD",3405,"KRN",8994,0)
8994
"BLD",3405,"KRN",8994,"NM",0)
^9.68A^1^1
"BLD",3405,"KRN",8994,"NM",1,0)
VAFC MVI MGRTD FACILITIES UPDT^^0
"BLD",3405,"KRN",8994,"NM","B","VAFC MVI MGRTD FACILITIES UPDT",1)

"BLD",3405,"KRN","B",.4,.4)

"BLD",3405,"KRN","B",.401,.401)

"BLD",3405,"KRN","B",.402,.402)

"BLD",3405,"KRN","B",.403,.403)

"BLD",3405,"KRN","B",.5,.5)

"BLD",3405,"KRN","B",.84,.84)

"BLD",3405,"KRN","B",1.5,1.5)

"BLD",3405,"KRN","B",1.6,1.6)

"BLD",3405,"KRN","B",1.61,1.61)

"BLD",3405,"KRN","B",1.62,1.62)

"BLD",3405,"KRN","B",3.6,3.6)

"BLD",3405,"KRN","B",3.8,3.8)

"BLD",3405,"KRN","B",9.2,9.2)

"BLD",3405,"KRN","B",9.8,9.8)

"BLD",3405,"KRN","B",19,19)

"BLD",3405,"KRN","B",19.1,19.1)

"BLD",3405,"KRN","B",101,101)

"BLD",3405,"KRN","B",409.61,409.61)

"BLD",3405,"KRN","B",771,771)

"BLD",3405,"KRN","B",779.2,779.2)

"BLD",3405,"KRN","B",870,870)

"BLD",3405,"KRN","B",8989.51,8989.51)

"BLD",3405,"KRN","B",8989.52,8989.52)

"BLD",3405,"KRN","B",8994,8994)

"BLD",3405,"QDEF")
^^^^NO^^^^NO^^YES
"BLD",3405,"QUES",0)
^9.62^^
"BLD",3405,"REQB",0)
^9.611^4^4
"BLD",3405,"REQB",1,0)
DG*5.3*825^2
"BLD",3405,"REQB",2,0)
DG*5.3*863^2
"BLD",3405,"REQB",3,0)
DG*5.3*967^2
"BLD",3405,"REQB",4,0)
DG*5.3*974^2
"BLD",3405,"REQB","B","DG*5.3*825",1)

"BLD",3405,"REQB","B","DG*5.3*863",2)

"BLD",3405,"REQB","B","DG*5.3*967",3)

"BLD",3405,"REQB","B","DG*5.3*974",4)

"FIA",391.919)
EHRM MIGRATED FACILITIES
"FIA",391.919,0)
^DGCN(391.919,
"FIA",391.919,0,0)
391.919P
"FIA",391.919,0,1)
y^y^f^^^^n
"FIA",391.919,0,10)

"FIA",391.919,0,11)

"FIA",391.919,0,"RLRO")

"FIA",391.919,0,"VR")
5.3^DG
"FIA",391.919,391.919)
0
"IX",391.919,391.919,"ACRNR",0)
391.919^ACRNR^CERNER Implemented Facilities^R^^R^IR^I^391.919^^^^^S
"IX",391.919,391.919,"ACRNR",.1,0)
^^2^2^3190329^
"IX",391.919,391.919,"ACRNR",.1,1,0)
The ACRNR cross-reference is used as a quick check to see if a facility 
"IX",391.919,391.919,"ACRNR",.1,2,0)
has migrated to/implemented the CERNER application.
"IX",391.919,391.919,"ACRNR",1)
S ^DGCN(391.919,"ACRNR",X(1),DA)=""
"IX",391.919,391.919,"ACRNR",1.4)
S X=+X2(2)>0
"IX",391.919,391.919,"ACRNR",2)
K ^DGCN(391.919,"ACRNR",X(1),DA)
"IX",391.919,391.919,"ACRNR",2.5)
K ^DGCN(391.919,"ACRNR")
"IX",391.919,391.919,"ACRNR",11.1,0)
^.114IA^2^2
"IX",391.919,391.919,"ACRNR",11.1,1,0)
1^F^391.919^.01^^1^F
"IX",391.919,391.919,"ACRNR",11.1,1,2)
S X=$$STA^XUAF4(X)
"IX",391.919,391.919,"ACRNR",11.1,2,0)
2^F^391.919^.02^^^F
"IX",391.919,391.919,"ACRNR",11.1,2,3)

"KRN",8994,1055,-1)
0^1
"KRN",8994,1055,0)
VAFC MVI MGRTD FACILITIES UPDT^UPDMFAC^VAFCRPC^2^A^0^^^1^^0
"KRN",8994,1055,1,0)
^8994.01^6^6^3190403^^^^
"KRN",8994,1055,1,1,0)
This Remote Procedure Call (RPC) will be used to create/update entries in 
"KRN",8994,1055,1,2,0)
a site's EHRM MIGRATED FACILITIES (#391.919) file, which will allow the 
"KRN",8994,1055,1,3,0)
facility to determine if a site has migrated to the CERNER application.
"KRN",8994,1055,1,4,0)
The Master Veteran Index (MVI) will be the authoritative source of this 
"KRN",8994,1055,1,5,0)
information and as such will push the migrated site information down to 
"KRN",8994,1055,1,6,0)
the sites on an as needed basis.
"KRN",8994,1055,2,0)
^8994.02A^1^1
"KRN",8994,1055,2,1,0)
ARRCRNR^2^32000^1^1
"KRN",8994,1055,2,1,1,0)
^8994.021^7^7^3190403^^^^
"KRN",8994,1055,2,1,1,1,0)
The ARRCRNR parameter contains a list of the Stations Numbers passed from 
"KRN",8994,1055,2,1,1,2,0)
the Master Veteran Index (MVI) that indicates the VAMC sites that have 
"KRN",8994,1055,2,1,1,3,0)
migrated to the CERNER application.
"KRN",8994,1055,2,1,1,4,0)
   
"KRN",8994,1055,2,1,1,5,0)
     Ie. ARRCRNR(<Station #>)=""
"KRN",8994,1055,2,1,1,6,0)
         ARRCRNR(<Station #>)=""
"KRN",8994,1055,2,1,1,7,0)
         etc...
"KRN",8994,1055,2,"B","ARRCRNR",1)

"KRN",8994,1055,2,"PARAMSEQ",1,1)

"KRN",8994,1055,3,0)
^^5^5^3190403^
"KRN",8994,1055,3,1,0)
The return parameter will return the following information depending on 
"KRN",8994,1055,3,2,0)
whether the RPC call was successful or not:
"KRN",8994,1055,3,3,0)
 
"KRN",8994,1055,3,4,0)
  -                 ARRAY(0)=1
"KRN",8994,1055,3,5,0)
  - If errors     : ARRAY(<#>)=Station # ^ Error Code ^ Error Message
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;RPCE1^XPDIA1;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813^2970721^12541
"PKG",5,22,1,"PAH",1,0)
981^3190826
"PKG",5,22,1,"PAH",1,1,0)
^^3^3^3190826
"PKG",5,22,1,"PAH",1,1,1,0)
MASTER VETERAN INDEX VISTA ENHANCEMENTS - EHRM SUPPORT
"PKG",5,22,1,"PAH",1,1,2,0)
Refer to patch DG*5.3*981 in the FORUM Patch Module for a complete
"PKG",5,22,1,"PAH",1,1,3,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","DPTLK7")
0^4^B207157129^B199815452
"RTN","DPTLK7",1,0)
DPTLK7 ;OAK/ELZ - MAS PATIENT LOOKUP ENTERPRISE SEARCH ; 4/3/19 5:12pm
"RTN","DPTLK7",2,0)
 ;;5.3;Registration;**915,919,926,967,981**;Aug 13, 1993;Build 1
"RTN","DPTLK7",3,0)
 ;
"RTN","DPTLK7",4,0)
SEARCH(DGX,DGXOLD) ; do a search, pass in what the user entered
"RTN","DPTLK7",5,0)
 ; DGX is what the user originally entered, name is assumed unless it
"RTN","DPTLK7",6,0)
 ; is exactly 9 digits, DON'T pass by reference it may change
"RTN","DPTLK7",7,0)
 ; Return:  DFN (new or found locally), 0 if nothing found/added
"RTN","DPTLK7",8,0)
 ;
"RTN","DPTLK7",9,0)
 N DG20NAME,DGMPI,DGFLDS,DGOUT,%,%Y,DGMPIR,DGDFN,DGMPIICN,DGSAVE
"RTN","DPTLK7",10,0)
 N DGKEYREQ,X,DA,DO,DIC,DGADDREQ,DGMCID
"RTN","DPTLK7",11,0)
 Q:$G(DGSEARCH) 0
"RTN","DPTLK7",12,0)
 S (DGKEYREQ,DGOUT,DGADDREQ)=0,DGSEARCH=1,DGSAVE=DGX
"RTN","DPTLK7",13,0)
 Q:$T(PATIENT^MPIFXMLP)="" 0
"RTN","DPTLK7",14,0)
 ;
"RTN","DPTLK7",15,0)
YN ;Enterprise Search?
"RTN","DPTLK7",16,0)
 W !,"Do you want to do an Enterprise Search"
"RTN","DPTLK7",17,0)
 D YN^DICN I %=0 W !,"You must enter Yes or No." G YN
"RTN","DPTLK7",18,0)
 Q:%'=1 0
"RTN","DPTLK7",19,0)
 ;
"RTN","DPTLK7",20,0)
 I $G(DGXOLD)]"" S DGX=DGXOLD
"RTN","DPTLK7",21,0)
 ; if yes then ask questions
"RTN","DPTLK7",22,0)
 ; if 9 digits entered assume ssn, need to save
"RTN","DPTLK7",23,0)
PROMPT I DGX?9N S DGFLDS(.09)=DGX,DGX=""
"RTN","DPTLK7",24,0)
 ; if name in "" need to remove
"RTN","DPTLK7",25,0)
 I $E(DGX,1)="""" S DGX=$E(DGX,2,99)
"RTN","DPTLK7",26,0)
 I $E(DGX,$L(DGX))="""" S DGX=$E(DGX,1,$L(DGX)-1)
"RTN","DPTLK7",27,0)
 D NAME(.DGX,.DG20NAME,.DGOUT) Q:DGOUT 0
"RTN","DPTLK7",28,0)
 D FLDS(.DGFLDS,DG20NAME,.DGOUT) Q:DGOUT 0
"RTN","DPTLK7",29,0)
 I $G(DGFLDS(.09))'?9N S DGADDREQ=1
"RTN","DPTLK7",30,0)
 D:DGADDREQ ADDRESS(.DGFLDS,.DGOUT) Q:DGOUT 0
"RTN","DPTLK7",31,0)
 I DGADDREQ,'$$ADDREQ(.DGFLDS) D  G PROMPT
"RTN","DPTLK7",32,0)
 . W !,"You must enter an actual SSN, a COMPLETE Address or Phone to search.",!
"RTN","DPTLK7",33,0)
 . K DGX,DG20NAME,DGFLDS,DGMPI,DGMPIR
"RTN","DPTLK7",34,0)
 . S DGX=DGSAVE
"RTN","DPTLK7",35,0)
 ;
"RTN","DPTLK7",36,0)
 ; call MPI to get data
"RTN","DPTLK7",37,0)
 W !!,"Searching the MVI..."
"RTN","DPTLK7",38,0)
 D FORMAT(.DGMPI,.DG20NAME,.DGFLDS)
"RTN","DPTLK7",39,0)
 D PATIENT^MPIFXMLP(.DGMPIR,.DGMPI)
"RTN","DPTLK7",40,0)
 S DGMCID=$G(DGMPIR("mcid"))
"RTN","DPTLK7",41,0)
 ;
"RTN","DPTLK7",42,0)
 ; too many matches found, they need to get the numbers down, re-prompt
"RTN","DPTLK7",43,0)
 I $G(DGMPIR("count"))>10!($G(DGMPIR("Result"))="QE") D  G PROMPT
"RTN","DPTLK7",44,0)
 . W !,$S(DGMPIR("count")>10:DGMPIR("count"),1:"Too many")," records found, you need to provide more specific criteria.",!
"RTN","DPTLK7",45,0)
 . K DGX,DG20NAME,DGFLDS,DGMPI,DGMPIR
"RTN","DPTLK7",46,0)
 . S DGX=DGSAVE
"RTN","DPTLK7",47,0)
 ;
"RTN","DPTLK7",48,0)
 ; no matches found on the MPI offer to add
"RTN","DPTLK7",49,0)
 I '$G(DGMPIR("count")) W !,"No records found on the MVI.",! D  Q DGDFN
"RTN","DPTLK7",50,0)
 . S DPTX=$G(DGFLDS(.01)) D ASKADD^DPTLK2 I DPTDFN'>0 S DGDFN=0 Q
"RTN","DPTLK7",51,0)
 . S DGDFN=$$ADD(.DGFLDS,.DG20NAME) Q:'DGDFN
"RTN","DPTLK7",52,0)
 . ;
"RTN","DPTLK7",53,0)
 . ; setup DGMPIR since there was nothing
"RTN","DPTLK7",54,0)
 . M DGMPIR(1)=DGMPI
"RTN","DPTLK7",55,0)
 . S DGMPIR(+$O(DGMPIR(0)),"DFN")=DGDFN
"RTN","DPTLK7",56,0)
 . ;
"RTN","DPTLK7",57,0)
 . S DGMPIR("mcid")=DGMCID
"RTN","DPTLK7",58,0)
 .;**981 - Story 841885 (ckn)
"RTN","DPTLK7",59,0)
 . S DGMPIR("SelIdentifier")=""
"RTN","DPTLK7",60,0)
 . D MPIADD(.DGMPIR)
"RTN","DPTLK7",61,0)
 ;
"RTN","DPTLK7",62,0)
 ; do I have some records that are in autolink threshold? - key required
"RTN","DPTLK7",63,0)
 S X=0 F  S X=$O(DGMPIR(X)) Q:'X  I $G(DGMPIR(X,"Score"))'<$G(DGMPIR("matchThreshold")) S DGKEYREQ=1
"RTN","DPTLK7",64,0)
 ;
"RTN","DPTLK7",65,0)
 ; preset list to select patients
"RTN","DPTLK7",66,0)
 S DGDFN=$$ENP^MPIFVER(.DGMPIR,$G(DGMPIR("matchThreshold")),$G(DGMPIR("dupeThreshold")))
"RTN","DPTLK7",67,0)
 ;
"RTN","DPTLK7",68,0)
 ; found and selected local patient
"RTN","DPTLK7",69,0)
 I DGDFN>0 Q DGDFN
"RTN","DPTLK7",70,0)
 I DGDFN=-1 S DPTX="" Q 0
"RTN","DPTLK7",71,0)
 ;
"RTN","DPTLK7",72,0)
 ; need to add new patient based on return from selection
"RTN","DPTLK7",73,0)
 I $D(DGMPIR)>1 K DG20NAME D FORMATR(.DGFLDS,.DGMPIR,.DG20NAME) S DGDFN=$$ADD(.DGFLDS,.DG20NAME) D:DGDFN  G QUIT
"RTN","DPTLK7",74,0)
 . ;
"RTN","DPTLK7",75,0)
 . S DGMPIR(+$O(DGMPIR(0)),"DFN")=DGDFN
"RTN","DPTLK7",76,0)
 . ;
"RTN","DPTLK7",77,0)
 . S DGMPIR("mcid")=DGMCID
"RTN","DPTLK7",78,0)
 .;**981 - Story 841885 (ckn)
"RTN","DPTLK7",79,0)
 . I $G(DGMPIR(1,"ICN"))'="" S DGMPIR("SelIdentifier")=DGMPIR(1,"ICN")_"^NI^200M^USVHA"
"RTN","DPTLK7",80,0)
 . I $G(DGMPIR(1,"IDS",1,"ID"))'="" S DGMPIR("SelIdentifier")=DGMPIR(1,"IDS",1,"ID")_"^NI^200DOD^USDOD"
"RTN","DPTLK7",81,0)
 . D MPIADD(.DGMPIR)
"RTN","DPTLK7",82,0)
 . W !
"RTN","DPTLK7",83,0)
 . ;
"RTN","DPTLK7",84,0)
 . ; if known to ESR, send Z11 and monitor for return data
"RTN","DPTLK7",85,0)
 . I $G(DGMPIR(1,"Z11")) D
"RTN","DPTLK7",86,0)
 .. W !,"Adding site correlation to MVI "
"RTN","DPTLK7",87,0)
 .. N DGTIME,DGQRY,DGDONE,DGQSTAT
"RTN","DPTLK7",88,0)
 .. S (DGQSTAT,DGDONE)=0
"RTN","DPTLK7",89,0)
 .. F DGTIME=1:1:60 D
"RTN","DPTLK7",90,0)
 ... I $D(^XTMP("DPTLK7 A24 IN-PROCESS",DGDFN)) W "." H 1 Q
"RTN","DPTLK7",91,0)
 ... ;
"RTN","DPTLK7",92,0)
 ... ; not sending, maybe already sent or it is turned off
"RTN","DPTLK7",93,0)
 ... I 'DGDONE  S DGDONE=1 D  W "." H 1 Q
"RTN","DPTLK7",94,0)
 .... I $$QRY^DGENQRY(DGDFN) W !,"Enrollment/Eligibility Query processing "
"RTN","DPTLK7",95,0)
 ... ;
"RTN","DPTLK7",96,0)
 ... ; check for status until it is returned, end with set to 60 seconds
"RTN","DPTLK7",97,0)
 ... S DGQRY=$$GET^DGENQRY($$FINDLAST^DGENQRY($G(DGDFN)),.DGQRY) I $G(DGQRY("STATUS"))>2 S DGTIME=60,DGQSTAT=1 Q
"RTN","DPTLK7",98,0)
 ... W "." H 1
"RTN","DPTLK7",99,0)
 .. I 'DGQSTAT D
"RTN","DPTLK7",100,0)
 ... W !,"Query to ES timed out, proceeding with registration."
"RTN","DPTLK7",101,0)
 ... W !,"The data will be uploaded when received."
"RTN","DPTLK7",102,0)
 .. W !!
"RTN","DPTLK7",103,0)
 ;
"RTN","DPTLK7",104,0)
 ; no one selected but may still need to add based on traits entered
"RTN","DPTLK7",105,0)
 I DGKEYREQ,'$D(^XUSEC("DG MVI ADD PT",DUZ)) D
"RTN","DPTLK7",106,0)
 . W !,"The search returned one or more patients above the Auto-Link threshold,"
"RTN","DPTLK7",107,0)
 . W !,"none of them selected. Security key required to add without selection."
"RTN","DPTLK7",108,0)
 E  D
"RTN","DPTLK7",109,0)
 . N DPTDFN,DPTX,Y,%,%Y,DGMPIR
"RTN","DPTLK7",110,0)
 . M DGMPIR(1)=DGMPI
"RTN","DPTLK7",111,0)
 . S DPTX=$G(DGFLDS(.01)) D ASKADD^DPTLK2 I DPTDFN'>0 S DGDFN=0 Q
"RTN","DPTLK7",112,0)
 . S DGDFN=$$ADD(.DGFLDS,.DG20NAME) Q:'DGDFN
"RTN","DPTLK7",113,0)
 . S DGMPIR(+$O(DGMPIR(0)),"DFN")=DGDFN
"RTN","DPTLK7",114,0)
 . S DGMPIR("AddType")=$S(DGKEYREQ:"Explicit",1:"Implicit")
"RTN","DPTLK7",115,0)
 . S DGMPIR("mcid")=DGMCID
"RTN","DPTLK7",116,0)
 .;**981 - Story 841885 (ckn)
"RTN","DPTLK7",117,0)
 . S DGMPIR("SelIdentifier")=""
"RTN","DPTLK7",118,0)
 . D MPIADD(.DGMPIR)
"RTN","DPTLK7",119,0)
 ;
"RTN","DPTLK7",120,0)
QUIT Q $S(DGDFN:DGDFN,1:0)
"RTN","DPTLK7",121,0)
 ;
"RTN","DPTLK7",122,0)
MPIADD(DGMPIR) ; - call to add patient to the MPI and store ICN locally
"RTN","DPTLK7",123,0)
 ; - web service call for adding and getting new ICN
"RTN","DPTLK7",124,0)
 I '$G(DGMPIR(+$O(DGMPIR(0)),"ICN")) D
"RTN","DPTLK7",125,0)
 . W !,"Adding patient to the MVI..."
"RTN","DPTLK7",126,0)
 . N DGMPIICN
"RTN","DPTLK7",127,0)
 . I '$D(DGMPIR("AddType")) S DGMPIR("AddType")="Implicit"
"RTN","DPTLK7",128,0)
 . D GETICN^MPIFXMLI(.DGMPIICN,.DGMPIR)
"RTN","DPTLK7",129,0)
 . I $G(DGMPIICN("ICN"))>0 S DGMPIR(+$O(DGMPIR(0)),"ICN")=DGMPIICN("ICN")
"RTN","DPTLK7",130,0)
 . E  D  Q
"RTN","DPTLK7",131,0)
 .. W !,"Unable to add to MVI!",!,$G(DGMPIICN("ERRTXT")),!
"RTN","DPTLK7",132,0)
 .. S ^XTMP("MPIF EXPLICIT QUEUE",0)=$$FMADD^XLFDT(DT,60)_"^"_DT_"^MPIF EXPLICIT QUEUE"
"RTN","DPTLK7",133,0)
 .. S ^XTMP("MPIF EXPLICIT QUEUE",DGDFN)=DT_"^"_DGMPIR("AddType")_"^"_$G(DGMPIR(+$O(DGMPIR(0)),"mcid"))_"^"_$G(DGMPIICN("ERRTXT"))
"RTN","DPTLK7",134,0)
 .. S X=$$ICNLC^MPIF001(DGDFN)
"RTN","DPTLK7",135,0)
 ;
"RTN","DPTLK7",136,0)
 ; - need to have MPI do MPI fields
"RTN","DPTLK7",137,0)
 S ^XTMP("DPTLK7 A24 IN-PROCESS",0)=$$FMADD^XLFDT(DT,10)_"^"_DT_"^TRACK PROCESSING OF A24 MESSAGES"
"RTN","DPTLK7",138,0)
 S ^XTMP("DPTLK7 A24 IN-PROCESS",DGDFN)=DT
"RTN","DPTLK7",139,0)
 I $G(DGMPIR(+$O(DGMPIR(0)),"ICN")) D VIC40^MPIFAPI(DGDFN,DGMPIR(+$O(DGMPIR(0)),"ICN"))
"RTN","DPTLK7",140,0)
 Q
"RTN","DPTLK7",141,0)
 ;
"RTN","DPTLK7",142,0)
NAME(DGX,DG20NAME,DGOUT) ;- ask for name components
"RTN","DPTLK7",143,0)
 N DGC,DGCL,DGCOM,DGCX,DGI,DGY,DIR,X,DGCOMP
"RTN","DPTLK7",144,0)
START S DGOUT=0
"RTN","DPTLK7",145,0)
 S DGCOM="FAMILY^GIVEN^MIDDLE^PREFIX^SUFFIX^DEGREE"
"RTN","DPTLK7",146,0)
 S DGCX=" (LAST) NAME^ (FIRST) NAME^ NAME"
"RTN","DPTLK7",147,0)
 S DGCL="1:35^1:25^1:25^1:10^1:10^1:10"
"RTN","DPTLK7",148,0)
 I $G(DGX)'?9N S DGX=$G(DGX) D STDNAME^XLFNAME(.DGX,"C")
"RTN","DPTLK7",149,0)
 S DGX("SUFFIX")=$$CLEANC^XLFNAME(DGX("SUFFIX"))
"RTN","DPTLK7",150,0)
 M DG20NAME=DGX
"RTN","DPTLK7",151,0)
 S DIR("PRE")="D:X'=""@"" NCEVAL^DPTNAME1(DGCOMP,.X)"
"RTN","DPTLK7",152,0)
 W !,"Patient name components--"
"RTN","DPTLK7",153,0)
 F DGI=1:1:6 S DGC($P(DGCOM,U,DGI),DGI)=""
"RTN","DPTLK7",154,0)
 F DGI=1:1:6 Q:DGOUT  D
"RTN","DPTLK7",155,0)
AGAIN .S DGCOMP=$P(DGCOM,U,DGI)
"RTN","DPTLK7",156,0)
 . S DIR("A")=DGCOMP_$P(DGCX,U,DGI)
"RTN","DPTLK7",157,0)
 . S DIR(0)=$S(DGI=1:"F^"_$P(DGCL,U,DGI),1:"FO^"_$P(DGCL,U,DGI))
"RTN","DPTLK7",158,0)
 . S DIR("PRE")="D NCEVAL^DPTNAME1(DGCOMP,.X)"
"RTN","DPTLK7",159,0)
 . S DIR("B")=$S($D(DG20NAME(DGCOMP)):DG20NAME(DGCOMP),1:$G(DGX(DGCOMP)))
"RTN","DPTLK7",160,0)
 . K:'$L(DIR("B")) DIR("B")
"RTN","DPTLK7",161,0)
ASK . D ^DIR I $D(DTOUT)!(X=U) S DGOUT=1 Q
"RTN","DPTLK7",162,0)
 . I $A(X)=94 D JUMP^DPTNAME1(.DGI) G AGAIN
"RTN","DPTLK7",163,0)
 . I X="@",DGI=1 W !,$C(7),"Family name cannot be deleted!" G ASK
"RTN","DPTLK7",164,0)
 . I X="@" S DG20NAME(DGCOMP)="" Q
"RTN","DPTLK7",165,0)
 . Q:'$L(X)
"RTN","DPTLK7",166,0)
 . S DG20NAME=X
"RTN","DPTLK7",167,0)
 . I DGCOMP="SUFFIX" S DG20NAME=$$CLEANC^XLFNAME(DG20NAME)
"RTN","DPTLK7",168,0)
 . S DG20NAME=$$FORMAT^XLFNAME7(DG20NAME,1,35,,3,,1,1)
"RTN","DPTLK7",169,0)
 . I '$L(DG20NAME) W "  ??",$C(7) G ASK
"RTN","DPTLK7",170,0)
 . W:DG20NAME'=X "   (",DG20NAME,")" S DG20NAME(DGCOMP)=DG20NAME
"RTN","DPTLK7",171,0)
 Q:DGOUT ""
"RTN","DPTLK7",172,0)
 ; Reconstruct name
"RTN","DPTLK7",173,0)
 S DG20NAME=$$NAMEFMT^XLFNAME(.DG20NAME,"F","CFL30")
"RTN","DPTLK7",174,0)
 ; Format the .01 value
"RTN","DPTLK7",175,0)
 M DGY=DG20NAME
"RTN","DPTLK7",176,0)
 S DG20NAME=$$FORMAT^XLFNAME7(.DGY,3,30,,2)
"RTN","DPTLK7",177,0)
 ; Check the length
"RTN","DPTLK7",178,0)
 I $L(DG20NAME)<3 D  G START
"RTN","DPTLK7",179,0)
 . W !,"Invalid values to use, full name must be at least 3 characters!",$C(7)
"RTN","DPTLK7",180,0)
 . K DG20NAME,DGX,DGCOMP
"RTN","DPTLK7",181,0)
 Q
"RTN","DPTLK7",182,0)
 ;
"RTN","DPTLK7",183,0)
ADDRESS(DGFLDS,DGOUT) ;- prompt for address
"RTN","DPTLK7",184,0)
 N DGRET,FSTR
"RTN","DPTLK7",185,0)
 ;.111 STREET ADDRESS [LINE 1] (both, free text)
"RTN","DPTLK7",186,0)
 ;.112 STREET ADDRESS [LINE 2] (both, free text)
"RTN","DPTLK7",187,0)
 ;.113 STREET ADDRESS [LINE 3] (both, free text)
"RTN","DPTLK7",188,0)
 ;.114 CITY (both, free text)
"RTN","DPTLK7",189,0)
 ;.115 STATE (external^internal)
"RTN","DPTLK7",190,0)
 ;.116 ZIP CODE (both, free text)
"RTN","DPTLK7",191,0)
 ;.117 COUNTY (external^internal^code)
"RTN","DPTLK7",192,0)
 ;.1171 PROVINCE (both, free text)
"RTN","DPTLK7",193,0)
 ;.1172 POSTAL CODE (both, free text)
"RTN","DPTLK7",194,0)
 ;.1112 ZIP+4 (both, free text)
"RTN","DPTLK7",195,0)
 ;.1173 COUNTRY (external^internal)
"RTN","DPTLK7",196,0)
 ;.121 BAD ADDRESS INDICATOR (external^internal)
"RTN","DPTLK7",197,0)
 W !,"Patient address--"
"RTN","DPTLK7",198,0)
 D EN^DGREGAED(,,,.DGRET)
"RTN","DPTLK7",199,0)
 ; address doesn't prompt for phone but returns it, don't want
"RTN","DPTLK7",200,0)
 ; to overwrite
"RTN","DPTLK7",201,0)
 K DGRET(.131)
"RTN","DPTLK7",202,0)
 M DGFLDS=DGRET
"RTN","DPTLK7",203,0)
 Q
"RTN","DPTLK7",204,0)
FLDS(DGFLDS,DGNAME,DGOUT) ;- prompt for the various FM fields
"RTN","DPTLK7",205,0)
 ; Data returned in array
"RTN","DPTLK7",206,0)
 ;DGFLDS(.09)=SSN*
"RTN","DPTLK7",207,0)
 ;DGFLDS(.03)=DOB*
"RTN","DPTLK7",208,0)
 ;DGFLDS(.02)=GENDER*
"RTN","DPTLK7",209,0)
 ;DGFLDS(.2403)=MMN
"RTN","DPTLK7",210,0)
 ;DGFLDS(.092)=POB (city)
"RTN","DPTLK7",211,0)
 ;DGFLDS(.093)=POB (state)
"RTN","DPTLK7",212,0)
 ;DGFLDS(994)=MBI
"RTN","DPTLK7",213,0)
 ;DGFLDS(.131)=PHONE
"RTN","DPTLK7",214,0)
 ;DGFLDS("EDIPI")=EDIPI
"RTN","DPTLK7",215,0)
 ;
"RTN","DPTLK7",216,0)
 W !,"Patient identifiers--"
"RTN","DPTLK7",217,0)
 ; SSN is special handling
"RTN","DPTLK7",218,0)
 N DGFLD,DIR,X,Y,DG20NAME
"RTN","DPTLK7",219,0)
 S DIR(0)="F^1:9^K:X'?9N&(X'=""P"")&(X'=""p"") X"
"RTN","DPTLK7",220,0)
 S DIR("A")="SOCIAL SECURITY NUMBER"
"RTN","DPTLK7",221,0)
 S:$D(DGFLDS(.09)) DIR("B")=DGFLDS(.09)
"RTN","DPTLK7",222,0)
 S DIR("?")="Answer with the individual's social security, must be 9 numbers or 'P'."
"RTN","DPTLK7",223,0)
 D ^DIR
"RTN","DPTLK7",224,0)
 I $D(DUOUT) S DGOUT=1 Q
"RTN","DPTLK7",225,0)
 S DGFLDS(.09)=X
"RTN","DPTLK7",226,0)
 K DIR
"RTN","DPTLK7",227,0)
 ; Story 338378 (elz) if pseudo, prompt pseudo reason
"RTN","DPTLK7",228,0)
 I DGFLDS(.09)="P"!(DGFLDS(.09)="p") D PSREASON(.DGFLDS,.DGOUT)  Q:DGOUT
"RTN","DPTLK7",229,0)
 ; prompt for EDIPI value before the FM fields
"RTN","DPTLK7",230,0)
 ;S DIR(0)="FO^10^K:X'?10N X"
"RTN","DPTLK7",231,0)
 ;S DIR("A")="EDIPI"
"RTN","DPTLK7",232,0)
 ;S DIR("?")="Answer with the individual's EDIPI, must be 10 numbers."
"RTN","DPTLK7",233,0)
 ;D ^DIR
"RTN","DPTLK7",234,0)
 ;I $D(DUOUT) S DGOUT=1 Q
"RTN","DPTLK7",235,0)
 ;S DGFLDS("EDIPI")=X
"RTN","DPTLK7",236,0)
 ;K DIR
"RTN","DPTLK7",237,0)
 F DGFLD=.03,.02,.2403,.092,.093,994,.131 D  Q:$D(DTOUT)!($D(DUOUT))
"RTN","DPTLK7",238,0)
 . S DIR(0)="2,"_DGFLD_$S(DGFLD=.03:"",DGFLD=.02:"",1:"O")
"RTN","DPTLK7",239,0)
 . D ^DIR
"RTN","DPTLK7",240,0)
 . Q:$D(DIRUT)
"RTN","DPTLK7",241,0)
 . S DGFLDS(DGFLD)=$P(Y,"^")
"RTN","DPTLK7",242,0)
 S:$D(DTOUT)!($D(DUOUT)) DGOUT=1
"RTN","DPTLK7",243,0)
 I $L($G(DGNAME)) S DGFLDS(.01)=DGNAME
"RTN","DPTLK7",244,0)
 Q
"RTN","DPTLK7",245,0)
 ;
"RTN","DPTLK7",246,0)
PSREASON(DGFLDS,DGOUT) ; - prompts (and requires) pseudo reason
"RTN","DPTLK7",247,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT,DIRUT,DPTSET,P
"RTN","DPTLK7",248,0)
 S DPTSET=$P(^DD(2,.0906,0),"^",3)
"RTN","DPTLK7",249,0)
PSAGAIN S DIR(0)="2,.0906" D ^DIR
"RTN","DPTLK7",250,0)
 I $D(DTOUT)!($D(DUOUT))!($D(DIROUT)) S DGOUT=1 Q
"RTN","DPTLK7",251,0)
 I Y="" W *7,"??",!!,"Choose from:" D
"RTN","DPTLK7",252,0)
 . F P=1:1 Q:$P(DPTSET,";",P)=""  W !,$P($P(DPTSET,";",P),":"),?10,$P($P(DPTSET,";",P),":",2)
"RTN","DPTLK7",253,0)
 . W ! G PSAGAIN
"RTN","DPTLK7",254,0)
 I Y["^" S DGOUT=1 Q
"RTN","DPTLK7",255,0)
 S DGFLDS(.0906)=$P(Y,":")
"RTN","DPTLK7",256,0)
 Q
"RTN","DPTLK7",257,0)
FORMAT(DGR,DGN,DGF) ; - format data for MPI call
"RTN","DPTLK7",258,0)
 N X
"RTN","DPTLK7",259,0)
 S:$G(DGN("FAMILY"))]"" DGR("Surname")=DGN("FAMILY")
"RTN","DPTLK7",260,0)
 S:$G(DGN("GIVEN"))]"" DGR("FirstName")=DGN("GIVEN")
"RTN","DPTLK7",261,0)
 S:$G(DGN("MIDDLE"))]"" DGR("MiddleName")=DGN("MIDDLE")
"RTN","DPTLK7",262,0)
 S:$G(DGN("SUFFIX"))]"" DGR("Suffix")=DGN("SUFFIX")
"RTN","DPTLK7",263,0)
 S:$G(DGN("PREFIX"))]"" DGR("Prefix")=DGN("PREFIX")
"RTN","DPTLK7",264,0)
 S:$G(DGN("DEGREE"))]"" DGR("Degree")=DGN("DEGREE")
"RTN","DPTLK7",265,0)
 S:$G(DGF(.02))]"" DGR("Gender")=DGF(.02)
"RTN","DPTLK7",266,0)
 S:$G(DGF(.03))]"" DGR("DOB")=DGF(.03)
"RTN","DPTLK7",267,0)
 I $G(DGF(.09))]"",DGF(.09)'="P",DGF(.09)'="p" S DGR("SSN")=DGF(.09)
"RTN","DPTLK7",268,0)
 S:$G(DGF(.2403))]"" DGR("MMN")=DGF(.2403)
"RTN","DPTLK7",269,0)
 S:$G(DGF(.092))]"" DGR("POBCity")=DGF(.092)
"RTN","DPTLK7",270,0)
 S:$G(DGF(.093)) DGR("POBState")=$P($G(^DIC(5,DGF(.093),0)),"^",2)
"RTN","DPTLK7",271,0)
 S:$G(DGF(994))]"" DGR("MBI")=DGF(994)
"RTN","DPTLK7",272,0)
 S:$G(DGF(.131))]"" DGR("ResPhone")=DGF(.131)
"RTN","DPTLK7",273,0)
 S:$D(DGF("EDIPI")) DGR("EDIPI")=DGF("EDIPI")
"RTN","DPTLK7",274,0)
 ;
"RTN","DPTLK7",275,0)
 ; only include address if deliverable
"RTN","DPTLK7",276,0)
 I $G(DGF(.121))]"" D
"RTN","DPTLK7",277,0)
 . S:$G(DGF(.111))]"" DGR("ResAddL1")=DGF(.111)
"RTN","DPTLK7",278,0)
 . S:$G(DGF(.1112))]"" DGR("ResAddZip4")=DGF(.1112)
"RTN","DPTLK7",279,0)
 . S:$G(DGF(.112))]"" DGR("ResAddL2")=DGF(.112)
"RTN","DPTLK7",280,0)
 . S:$G(DGF(.113))]"" DGR("ResAddL3")=DGF(.113)
"RTN","DPTLK7",281,0)
 . S:$G(DGF(.114))]"" DGR("CITY")=DGF(.114)
"RTN","DPTLK7",282,0)
 . S:$P($G(DGF(.115)),"^",2) DGR("ResAddState")=$P($G(^DIC(5,$P(DGF(.115),"^",2),0)),"^",2)
"RTN","DPTLK7",283,0)
 . S:$G(DGF(.1171))]"" DGR("ResAddProvince")=DGF(.1171)
"RTN","DPTLK7",284,0)
 . S:$G(DGF(.1172))]"" DGR("ResAddPCode")=DGF(.1172)
"RTN","DPTLK7",285,0)
 . S:$P($G(DGF(.1173)),"^")]"" DGR("ResAddCountry")=$P(DGF(.1173),"^")
"RTN","DPTLK7",286,0)
 Q
"RTN","DPTLK7",287,0)
 ;
"RTN","DPTLK7",288,0)
FORMATR(DGF,DGM,DG20NAME) ; - merge MPI and user input (MPI authorative)
"RTN","DPTLK7",289,0)
 N DGX,DGY,DGZ
"RTN","DPTLK7",290,0)
 S DGX=$O(DGM(0)) Q:'DGX
"RTN","DPTLK7",291,0)
 S DG20NAME("FAMILY")=$G(DGM(DGX,"Surname"))
"RTN","DPTLK7",292,0)
 S DG20NAME("GIVEN")=$G(DGM(DGX,"FirstName"))
"RTN","DPTLK7",293,0)
 S DG20NAME("MIDDLE")=$G(DGM(DGX,"MiddleName"))
"RTN","DPTLK7",294,0)
 S DG20NAME("PREFIX")=$G(DGM(DGX,"Prefix"))
"RTN","DPTLK7",295,0)
 S DG20NAME("SUFFIX")=$G(DGM(DGX,"Suffix"))
"RTN","DPTLK7",296,0)
 S DG20NAME("DEGREE")=$G(DGM(DGX,"Degree"))
"RTN","DPTLK7",297,0)
 ;Reconstruct name
"RTN","DPTLK7",298,0)
 S DG20NAME=$$NAMEFMT^XLFNAME(.DG20NAME,"F","CFL30")
"RTN","DPTLK7",299,0)
 ;Format the .01 value
"RTN","DPTLK7",300,0)
 M DGY=DG20NAME
"RTN","DPTLK7",301,0)
 S DGF(.01)=$$FORMAT^XLFNAME7(.DGY,3,30,,2)
"RTN","DPTLK7",302,0)
 S DGF(.02)=$G(DGM(DGX,"Gender"))
"RTN","DPTLK7",303,0)
 S DGF(.03)=$G(DGM(DGX,"DOB"))
"RTN","DPTLK7",304,0)
 S DGF(.09)=$G(DGM(DGX,"SSN"))
"RTN","DPTLK7",305,0)
 S DGF(.2403)=$G(DGM(DGX,"MMN"))
"RTN","DPTLK7",306,0)
 S DGF(.092)=$G(DGM(DGX,"POBCity"))
"RTN","DPTLK7",307,0)
 S DGY=$S($G(DGM(DGX,"POBState"))]"":$O(^DIC(5,"C",DGM(DGX,"POBState"),0)),1:"")
"RTN","DPTLK7",308,0)
 S DGF(.093)=DGY
"RTN","DPTLK7",309,0)
 S:$G(DGM(DGX,"ResAddL1"))]"" DGF(.111)=DGM(DGX,"ResAddL1")
"RTN","DPTLK7",310,0)
 S:$G(DGM(DGX,"ResAddL2"))]"" DGF(.112)=DGM(DGX,"ResAddL2")
"RTN","DPTLK7",311,0)
 S:$G(DGM(DGX,"ResAddL3"))]"" DGF(.113)=DGM(DGX,"ResAddL3")
"RTN","DPTLK7",312,0)
 S:$G(DGM(DGX,"City"))]"" DGF(.114)=DGM(DGX,"City")
"RTN","DPTLK7",313,0)
 S:$G(DGM(DGX,"ResAddCity"))]"" DGF(.114)=DGM(DGX,"ResAddCity")
"RTN","DPTLK7",314,0)
 ;
"RTN","DPTLK7",315,0)
 S DGY=$S($G(DGM(DGX,"ResAddState"))]"":$O(^DIC(5,"C",DGM(DGX,"ResAddState"),0)),1:"")
"RTN","DPTLK7",316,0)
 S:DGY DGF(.115)=DGY
"RTN","DPTLK7",317,0)
 S DGY=$S($G(DGM(DGX,"Country"))]"":$O(^HL(779.004,"B",DGM(DGX,"Country"),0)),1:"")
"RTN","DPTLK7",318,0)
 S:DGY DGF(.1173)=DGY
"RTN","DPTLK7",319,0)
 S DGY=$S($G(DGM(DGX,"ResAddCountry"))]"":$O(^HL(779.004,"B",DGM(DGX,"ResAddCountry"),0)),1:"")
"RTN","DPTLK7",320,0)
 S:DGY DGF(.1173)=DGY
"RTN","DPTLK7",321,0)
 S:$G(DGM(DGX,"PCode"))]"" DGF(.1172)=DGM(DGX,"PCode")
"RTN","DPTLK7",322,0)
 S:$G(DGM(DGX,"ResAddPCode"))]"" DGF(.1172)=DGM(DGX,"ResAddPCode")
"RTN","DPTLK7",323,0)
 S:$G(DGM(DGX,"Province"))]"" DGF(.1171)=DGM(DGX,"Province")
"RTN","DPTLK7",324,0)
 S:$G(DGM(DGX,"ResAddProvince"))]"" DGF(.1171)=DGM(DGX,"ResAddProvince")
"RTN","DPTLK7",325,0)
 ;**967, Story 827326 (jfw) - Ensure Dash is removed if exists
"RTN","DPTLK7",326,0)
 S:$G(DGM(DGX,"ResAddZip4"))]"" DGF(.1112)=$TR(DGM(DGX,"ResAddZip4"),"-","")
"RTN","DPTLK7",327,0)
 S:$G(DGM(DGX,"ResPhone"))]"" DGF(.131)=DGM(DGX,"ResPhone")
"RTN","DPTLK7",328,0)
 I $G(DGF(.1112)) D
"RTN","DPTLK7",329,0)
 . N DGX,DGCNTY
"RTN","DPTLK7",330,0)
 . D POSTAL^XIPUTIL(DGF(.1112),.DGX)
"RTN","DPTLK7",331,0)
 . I $G(DGX("FIPS CODE"))]"",$G(DGX("STATE POINTER")) D
"RTN","DPTLK7",332,0)
 .. S DGCNTY=$$FIND1^DIC(5.01,","_DGX("STATE POINTER")_",","MOXQ",$E($G(DGX("FIPS CODE")),3,5),"C")
"RTN","DPTLK7",333,0)
 . I $D(DGCNTY) S DGF(.117)=DGCNTY
"RTN","DPTLK7",334,0)
 ; alias loop
"RTN","DPTLK7",335,0)
 S DGZ=0 F  S DGZ=$O(DGM(DGX,"ALIAS",DGZ)) Q:'DGZ  D
"RTN","DPTLK7",336,0)
 . N DGY,DG20NAME
"RTN","DPTLK7",337,0)
 . I $G(DGM(DGX,"ALIAS",DGZ,"Surname"))]"" D
"RTN","DPTLK7",338,0)
 .. S DG20NAME("FAMILY")=$G(DGM(DGX,"ALIAS",DGZ,"Surname"))
"RTN","DPTLK7",339,0)
 .. S DG20NAME("GIVEN")=$G(DGM(DGX,"ALIAS",DGZ,"FirstName"))
"RTN","DPTLK7",340,0)
 .. S DG20NAME("MIDDLE")=$G(DGM(DGX,"ALIAS",DGZ,"MiddleName"))
"RTN","DPTLK7",341,0)
 .. S DG20NAME("PREFIX")=$G(DGM(DGX,"ALIAS",DGZ,"Prefix"))
"RTN","DPTLK7",342,0)
 .. S DG20NAME("SUFFIX")=$G(DGM(DGX,"ALIAS",DGZ,"Suffix"))
"RTN","DPTLK7",343,0)
 .. S DG20NAME("DEGREE")=$G(DGM(DGX,"ALIAS",DGZ,"Degree"))
"RTN","DPTLK7",344,0)
 .. ;Reconstruct name
"RTN","DPTLK7",345,0)
 .. S DG20NAME=$$NAMEFMT^XLFNAME(.DG20NAME,"F","CFL30")
"RTN","DPTLK7",346,0)
 .. ;Format the .01 value
"RTN","DPTLK7",347,0)
 .. M DGY=DG20NAME
"RTN","DPTLK7",348,0)
 .. S DGF("ALIAS",DGZ,.01)=$$FORMAT^XLFNAME7(.DGY,3,30,,2)
"RTN","DPTLK7",349,0)
 . I $G(DGM(DGX,"ALIAS",DGZ,"SSN"))]"" S DGF("ALIAS",DGZ,1)=DGM(DGX,"ALIAS",DGZ,"SSN")
"RTN","DPTLK7",350,0)
 S:$G(DGM(DGX,"ICN"))]"" DGF("ICN")=DGM(DGX,"ICN")
"RTN","DPTLK7",351,0)
 ;
"RTN","DPTLK7",352,0)
 ; - Story 338378 (elz) handle pseudo SSN
"RTN","DPTLK7",353,0)
 I $G(DGF(.09))'?9N S DGF(.09)=$$PSEUDO($G(DGF(.01)),$G(DGF(.03)))
"RTN","DPTLK7",354,0)
 E  K DGF(.0906) ; remove pseudo reason if we have a ssn
"RTN","DPTLK7",355,0)
 ;
"RTN","DPTLK7",356,0)
 Q
"RTN","DPTLK7",357,0)
ADD(DGF,DG20NAME) ; - stuff in patient
"RTN","DPTLK7",358,0)
 ; Pass in the fields to set in the DGF array.
"RTN","DPTLK7",359,0)
 ; Alaso Name components in DG20NAME array.  Returns new DFN
"RTN","DPTLK7",360,0)
 N X,Y,SAVY,FDA,IEN,DATA,DO,DIC,DA,X,DLAYGO,REQ,VAFCNO,DGY,DPTX
"RTN","DPTLK7",361,0)
 I $E($G(DGF(.09)),1,9)'?9N S DGF(.09)=$$PSEUDO(DGF(.01),$G(DGF(.03)))
"RTN","DPTLK7",362,0)
 ; check for SSN already exist
"RTN","DPTLK7",363,0)
 S DGY=$O(^DPT("SSN",DGF(.09),0)) I DGY>0,$D(^DPT(DGY,0)) W *7,"  SSN Already used by patient '",$P(^(0),"^"),"'." Q 0
"RTN","DPTLK7",364,0)
 ;
"RTN","DPTLK7",365,0)
 S DIC("DR")="",REQ="^.02^.03^.09^"
"RTN","DPTLK7",366,0)
 S DGF=.01 F  S DGF=$O(DGF(DGF)) Q:'DGF  D
"RTN","DPTLK7",367,0)
 . ; if the data has a second piece, then that's internal value to use
"RTN","DPTLK7",368,0)
 . S DATA=$S($P(DGF(DGF),"^",2):$P(DGF(DGF),"^",2),1:DGF(DGF))
"RTN","DPTLK7",369,0)
 . I DATA]""!(REQ[("^"_DGF_"^")) S DIC("DR")=DIC("DR")_DGF_$S(DATA]"":"////"_DATA,1:"")_";"
"RTN","DPTLK7",370,0)
 ; patient type
"RTN","DPTLK7",371,0)
 S DIC("DR")=DIC("DR")_"391///"_$O(^DG(391,"B","NSC VETERAN",0))_";"
"RTN","DPTLK7",372,0)
 ; veteran
"RTN","DPTLK7",373,0)
 S DIC("DR")=DIC("DR")_"1901///Y;"
"RTN","DPTLK7",374,0)
 ; SC
"RTN","DPTLK7",375,0)
 S DIC("DR")=DIC("DR")_".301///N;"
"RTN","DPTLK7",376,0)
 ; date added
"RTN","DPTLK7",377,0)
 S DIC("DR")=DIC("DR")_".097////"_DT
"RTN","DPTLK7",378,0)
 ; who added
"RTN","DPTLK7",379,0)
 S:$G(DUZ) DIC("DR")=DIC("DR")_";.096////"_DUZ
"RTN","DPTLK7",380,0)
 ;
"RTN","DPTLK7",381,0)
 S X=DGF(.01),DIC="^DPT(",DIC(0)="L",DLAYGO=2,VAFCNO=1
"RTN","DPTLK7",382,0)
 D FILE^DICN
"RTN","DPTLK7",383,0)
 S SAVY=+Y
"RTN","DPTLK7",384,0)
 ;
"RTN","DPTLK7",385,0)
 ; alias
"RTN","DPTLK7",386,0)
 S X=0 F  S X=$O(DGF("ALIAS",X)) Q:'X  D
"RTN","DPTLK7",387,0)
 . S DGF=0 F  S DGF=$O(DGF("ALIAS",X,DGF)) Q:'DGF  D
"RTN","DPTLK7",388,0)
 .. S FDA(2.01,"+"_X_","_SAVY_",",.01)=DGF("ALIAS",X,.01)
"RTN","DPTLK7",389,0)
 .. S:DGF("ALIAS",X,1)]"" FDA(2.01,"+"_X_","_SAVY_",",1)=DGF("ALIAS",X,1)
"RTN","DPTLK7",390,0)
 ;
"RTN","DPTLK7",391,0)
 I $D(FDA) D
"RTN","DPTLK7",392,0)
 . N DG20NAME
"RTN","DPTLK7",393,0)
 . D UPDATE^DIE("","FDA")
"RTN","DPTLK7",394,0)
 ;
"RTN","DPTLK7",395,0)
 ; send bulletin new patient added to system
"RTN","DPTLK7",396,0)
 I SAVY>0 D BULL(SAVY)
"RTN","DPTLK7",397,0)
 ;
"RTN","DPTLK7",398,0)
 Q SAVY
"RTN","DPTLK7",399,0)
 ;
"RTN","DPTLK7",400,0)
ADDREQ(DGFLDS) ; - determine if enough address data entered
"RTN","DPTLK7",401,0)
 ; returns OK to proceed (1) or not (0)
"RTN","DPTLK7",402,0)
 N DGOK,FIELD
"RTN","DPTLK7",403,0)
 S DGOK=1
"RTN","DPTLK7",404,0)
 ; is US or foreign
"RTN","DPTLK7",405,0)
 I $$FOR^DGADDUTL($P(DGFLDS(.1173),"^")) D
"RTN","DPTLK7",406,0)
 . F FIELD=.111,.114,.1171,.1172 S:$G(DGFLDS(FIELD))']"" DGOK=0
"RTN","DPTLK7",407,0)
 E  F FIELD=.111,.1112,.114,.115 S:$G(DGFLDS(FIELD))']"" DGOK=0
"RTN","DPTLK7",408,0)
 I $L($G(DGFLDS(.131))) S DGOK=1
"RTN","DPTLK7",409,0)
 Q DGOK
"RTN","DPTLK7",410,0)
 ;
"RTN","DPTLK7",411,0)
PSEUDO(NAM,DOB) ; - return pseudo ssn
"RTN","DPTLK7",412,0)
 N L1,L2,L3,Z
"RTN","DPTLK7",413,0)
 S NAM=$G(DGF(.01)),DOB=$G(DGF(.03))
"RTN","DPTLK7",414,0)
 I DOB="" S DOB=2000000
"RTN","DPTLK7",415,0)
 S L1=$E($P(NAM," ",2),1),L3=$E(NAM,1),NAM=$P(NAM,",",2),L2=$E(NAM,1)
"RTN","DPTLK7",416,0)
 S Z=L1 D CON^DGRPDD1 S L1=Z,Z=L2 D CON^DGRPDD1
"RTN","DPTLK7",417,0)
 S L2=Z,Z=L3 D CON^DGRPDD1 S L3=Z
"RTN","DPTLK7",418,0)
 Q L2_L1_L3_$E(DOB,4,7)_$E(DOB,2,3)_"P"
"RTN","DPTLK7",419,0)
 ;
"RTN","DPTLK7",420,0)
BULL(SAVY) ; - send bulletin that new patient added
"RTN","DPTLK7",421,0)
 N DGTEXT,DGNAM,DGSSN,DGDOB,DGB,DGZ
"RTN","DPTLK7",422,0)
 S DGB=2
"RTN","DPTLK7",423,0)
 S DGZ=$G(^DPT(SAVY,0))
"RTN","DPTLK7",424,0)
 S DGNAM=$P(DGZ,"^"),DGSSN=$P(DGZ,"^",9),DGDOB=$P(DGZ,"^",3)
"RTN","DPTLK7",425,0)
 S DGSSN=$E(DGSSN,1,3)_"-"_$E(DGSSN,4,5)_"-"_$E(DGSSN,6,10)
"RTN","DPTLK7",426,0)
 S DGDOB=$$FMTE^XLFDT(DGDOB)
"RTN","DPTLK7",427,0)
 S XMSUB="NEW PATIENT ADDED TO SYSTEM"
"RTN","DPTLK7",428,0)
 S DGTEXT(1,0)="NAME:  "_DGNAM
"RTN","DPTLK7",429,0)
 S DGTEXT(2,0)="SSN :  "_DGSSN
"RTN","DPTLK7",430,0)
 S DGTEXT(3,0)="DOB :  "_DGDOB
"RTN","DPTLK7",431,0)
 D ^DGBUL
"RTN","DPTLK7",432,0)
 Q
"RTN","VAFCCRNR")
0^1^B4581659^n/a
"RTN","VAFCCRNR",1,0)
VAFCCRNR ;BIR/JFW-VAFC EHRM MIGRATED FACILITIES FILE (#391.919) Utilities; ; 7/22/19 2:39pm
"RTN","VAFCCRNR",2,0)
 ;;5.3;Registration;**981**;Aug 13, 1993;Build 1
"RTN","VAFCCRNR",3,0)
 ;
"RTN","VAFCCRNR",4,0)
 ;Story 961754 (jfw) - Support processes where there is a need to know
"RTN","VAFCCRNR",5,0)
 ;                     which facilities have migrated to CERNER.
"RTN","VAFCCRNR",6,0)
 ;DBIA: $$IEN^XUAF4 : Supported - #2171
"RTN","VAFCCRNR",7,0)
 Q
"RTN","VAFCCRNR",8,0)
 ;
"RTN","VAFCCRNR",9,0)
 ;Input: VAFCARY - Array of Station #'s migrated to CERNER (*Required by Ref.)
"RTN","VAFCCRNR",10,0)
 ;                 ie. VAFCARY(<Station#>)=""
"RTN","VAFCCRNR",11,0)
 ;       VAFCRTN - 1 upon processing completed (*Required by Ref.)
"RTN","VAFCCRNR",12,0)
 ;                 Additional Error Info - VAFCRTN(<#>)=Station# ^ Error Code ^ Error Message
"RTN","VAFCCRNR",13,0)
UPDT(VAFCARY,VAFCRTN) ;Add/Update EHRM MIGRATED FACILITIES (#391.919) records
"RTN","VAFCCRNR",14,0)
 N VAFCSN,VAFCSITE,VAFCRSLT
"RTN","VAFCCRNR",15,0)
 ;Remove CERNER ENABLED? Flag if site is no longer using the application
"RTN","VAFCCRNR",16,0)
 S VAFCSN=0 F  S VAFCSN=$O(^DGCN(391.919,"ACRNR",VAFCSN)) Q:'+VAFCSN  D
"RTN","VAFCCRNR",17,0)
 .D:('($D(VAFCARY(VAFCSN))))
"RTN","VAFCCRNR",18,0)
 ..S VAFCRSLT=$$OFFCRNR($$IEN^XUAF4(VAFCSN))
"RTN","VAFCCRNR",19,0)
 ..S:(VAFCRSLT'=1) VAFCRTN(VAFCSN)=VAFCRSLT
"RTN","VAFCCRNR",20,0)
 ;Add/Update Facility entries that have migrated to CERNER if applicable
"RTN","VAFCCRNR",21,0)
 S VAFCSN=0 F  S VAFCSN=$O(VAFCARY(VAFCSN)) Q:'+VAFCSN  D
"RTN","VAFCCRNR",22,0)
 .D:('($D(^DGCN(391.919,"ACRNR",VAFCSN))))
"RTN","VAFCCRNR",23,0)
 ..S VAFCRSLT=$$ONCRNR($$IEN^XUAF4(VAFCSN))
"RTN","VAFCCRNR",24,0)
 ..S:(VAFCRSLT'=1) VAFCRTN(VAFCSN)=VAFCSN_"^"_VAFCRSLT
"RTN","VAFCCRNR",25,0)
 S VAFCRTN=1
"RTN","VAFCCRNR",26,0)
 Q
"RTN","VAFCCRNR",27,0)
 ;
"RTN","VAFCCRNR",28,0)
 ;Input: VAFCSIEN - IEN of the Facility to Add/Update
"RTN","VAFCCRNR",29,0)
 ;Output: 1 if Successful or ErrorCode ^ Error Message
"RTN","VAFCCRNR",30,0)
ONCRNR(VAFCSIEN) ;Update EHRM MIGRATED FACILITIES (#391.919) entry to show site migrated to CERNER
"RTN","VAFCCRNR",31,0)
 N VAFCFDA,VAFCEMSG,VAFCEXST,VAFCFIEN
"RTN","VAFCCRNR",32,0)
 Q:(VAFCSIEN="") "^IEN for Station Number is NOT known!"
"RTN","VAFCCRNR",33,0)
 S VAFCEXST=$D(^DGCN(391.919,"B",VAFCSIEN))
"RTN","VAFCCRNR",34,0)
 ;Add new facility entry to the file
"RTN","VAFCCRNR",35,0)
 D:('VAFCEXST)
"RTN","VAFCCRNR",36,0)
 .S VAFCFDA(391.919,"+1,",.01)=VAFCSIEN
"RTN","VAFCCRNR",37,0)
 .S VAFCFDA(391.919,"+1,",.02)=1
"RTN","VAFCCRNR",38,0)
 .S VAFCFIEN(1)=VAFCSIEN  ;.01 is DINUMED to Site IEN.
"RTN","VAFCCRNR",39,0)
 .D UPDATE^DIE("","VAFCFDA","VAFCFIEN","VAFCEMSG")
"RTN","VAFCCRNR",40,0)
 ;Updating existing facility entry in the file
"RTN","VAFCCRNR",41,0)
 D:(VAFCEXST)
"RTN","VAFCCRNR",42,0)
 .S VAFCFDA(391.919,VAFCSIEN_",",.02)=1
"RTN","VAFCCRNR",43,0)
 .D FILE^DIE("K","VAFCFDA","VAFCEMSG")
"RTN","VAFCCRNR",44,0)
 Q $S('$D(VAFCEMSG):1,1:$G(VAFCEMSG("DIERR",1))_"^"_$G(VAFCEMSG("DIERR",1,"TEXT",1)))
"RTN","VAFCCRNR",45,0)
 ;
"RTN","VAFCCRNR",46,0)
 ;Input: VAFCSIEN - IEN of the Facility to Update
"RTN","VAFCCRNR",47,0)
 ;Output: 1 if Successful or ErrorCode ^ Error Message
"RTN","VAFCCRNR",48,0)
OFFCRNR(VAFCSIEN) ;Set CERNER ENABLED? field to NO for Site
"RTN","VAFCCRNR",49,0)
 N VAFCFDA,VAFCEMSG
"RTN","VAFCCRNR",50,0)
 Q:(VAFCSIEN="") "^IEN for Station Number is NOT known!"
"RTN","VAFCCRNR",51,0)
 S VAFCFDA(391.919,VAFCSIEN_",",.02)=0
"RTN","VAFCCRNR",52,0)
 D FILE^DIE("K","VAFCFDA","VAFCEMSG")
"RTN","VAFCCRNR",53,0)
 Q $S('$D(VAFCEMSG):1,1:$G(VAFCEMSG("DIERR",1))_"^"_$G(VAFCEMSG("DIERR",1,"TEXT",1)))
"RTN","VAFCQRY1")
0^5^B99425329^B93833983
"RTN","VAFCQRY1",1,0)
VAFCQRY1 ;BIR/DLR-Query for patient demographics ; 4/19/19 2:15pm
"RTN","VAFCQRY1",2,0)
 ;;5.3;Registration;**428,474,477,575,627,648,698,711,707,837,874,937,974,981**;Aug 13, 1993;Build 1
"RTN","VAFCQRY1",3,0)
 ;
"RTN","VAFCQRY1",4,0)
 ;Reference to $$GETDFNS^MPIF002 supported by IA #3634.
"RTN","VAFCQRY1",5,0)
 ;
"RTN","VAFCQRY1",6,0)
BLDPID(DFN,CNT,SEQ,PID,HL,ERR) ;build PID from File #2
"RTN","VAFCQRY1",7,0)
 ; Variable list
"RTN","VAFCQRY1",8,0)
 ;  DFN - internal PATIENT (#2) number
"RTN","VAFCQRY1",9,0)
 ;  CNT - value to be place in PID seq#1 (SET ID)
"RTN","VAFCQRY1",10,0)
 ;  SEQ - variable consisting of sequence numbers delimited by commas
"RTN","VAFCQRY1",11,0)
 ;        that will be used to build the message (default is ALL)
"RTN","VAFCQRY1",12,0)
 ;  PID (passed by reference) - array location to place PID segment
"RTN","VAFCQRY1",13,0)
 ;        result, the array can have existing values when passed.
"RTN","VAFCQRY1",14,0)
 ;   HL - array that contains the necessary HL variables (init^hlsub)
"RTN","VAFCQRY1",15,0)
 ;  ERR - array that is used to return an error
"RTN","VAFCQRY1",16,0)
 ;
"RTN","VAFCQRY1",17,0)
 ; DG*5.3*981 introduced changes to support the local modifications for HAC/MVI integration in CH*1.3*22529.
"RTN","VAFCQRY1",18,0)
 ;
"RTN","VAFCQRY1",19,0)
 N VAFCMN,VAFCMMN,SITE,VAFCZN,SSN,SITE,APID,HIST,HISTDT,VAFCHMN,NXT,NXTC,COMP,REP,SUBCOMP,STATE,CITY,CLAIM,HLECH,HLFS,HLQ,STATEIEN,SARY,LVL,LNGTH,X,STN,SITA,HLES
"RTN","VAFCQRY1",20,0)
 I '$D(SEQ) S SEQ="ALL"
"RTN","VAFCQRY1",21,0)
 I SEQ="" S SEQ="ALL"
"RTN","VAFCQRY1",22,0)
 I SEQ'="ALL" D
"RTN","VAFCQRY1",23,0)
 .; setting up temp array to hold fields to be included in message
"RTN","VAFCQRY1",24,0)
 .N POS,EN S POS=1 F  S EN=$P(SEQ,",",POS) Q:EN=""  S SARY(EN)="",POS=POS+1
"RTN","VAFCQRY1",25,0)
 S HLECH=HL("ECH"),HLFS=HL("FS"),HLQ=HL("Q"),(COMP,HL("COMP"))=$E(HL("ECH"),1)
"RTN","VAFCQRY1",26,0)
 S (SUBCOMP,HL("SUBCOMP"))=$E(HL("ECH"),4),(REP,HL("REP"))=$E(HL("ECH"),2),HLES=$E(HL("ECH"),3)
"RTN","VAFCQRY1",27,0)
 ;get Patient File MPI node
"RTN","VAFCQRY1",28,0)
 S VAFCMN=""
"RTN","VAFCQRY1",29,0)
 N X S X="MPIFAPI" X ^%ZOSF("TEST") I $T S VAFCMN=$$MPINODE^MPIFAPI(DFN)
"RTN","VAFCQRY1",30,0)
 I +VAFCMN<0 S VAFCMN=""
"RTN","VAFCQRY1",31,0)
 S VAFCZN=^DPT(DFN,0),SSN=$P(^DPT(DFN,0),"^",9)
"RTN","VAFCQRY1",32,0)
 ;**974,Story 841921 (mko): Get the internal Alias values instead of external
"RTN","VAFCQRY1",33,0)
 ;  so that the internal pointer (IEN) of the Name Components entry can be retrieved.
"RTN","VAFCQRY1",34,0)
 ;  In the following code, values are obtained from the "I" nodes instead of the "E" nodes.
"RTN","VAFCQRY1",35,0)
 N VAFCA,VAFCA1 D GETS^DIQ(2,DFN_",","1*","I","VAFCA") ;**698 GETTING ALIAS INFO
"RTN","VAFCQRY1",36,0)
 ;** 707 reformat alias information to include ALIAS SSN in PID-3 with a location reference to the name in PID-5
"RTN","VAFCQRY1",37,0)
 I $D(VAFCA) N CT,ENT S CT=0,ENT="" F  S ENT=$O(VAFCA(2.01,ENT)) Q:ENT=""  D
"RTN","VAFCQRY1",38,0)
 .S CT=CT+1
"RTN","VAFCQRY1",39,0)
 .S VAFCA1(CT,"NAME")=$G(VAFCA(2.01,ENT,.01,"I"))
"RTN","VAFCQRY1",40,0)
 .;I $G(VAFCA(2.01,ENT,1,"E"))'="" S VAFCA1("SSN")="",VAFCA1(CT,"SSN")=$G(VAFCA(2.01,ENT,1,"E"))
"RTN","VAFCQRY1",41,0)
 .S VAFCA1(CT,"SSN")=$G(VAFCA(2.01,ENT,1,"I"))
"RTN","VAFCQRY1",42,0)
 .S VAFCA1(CT,"NCIEN")=$G(VAFCA(2.01,ENT,100.03,"I"))_"^"_ENT ;**974,Story 841921 (mko): Get Name Components pointer and save IENS of Alias subentry
"RTN","VAFCQRY1",43,0)
 ;custom change - if current site is HAC then use station number 741MM - CH*1.3*22529
"RTN","VAFCQRY1",44,0)
 S SITE=$$SITE^VASITE,STN=$P($$SITE^VASITE,"^",3) I STN=741 S STN="741MM"
"RTN","VAFCQRY1",45,0)
 N TMP F TMP=1:1:31 S APID(TMP)=""
"RTN","VAFCQRY1",46,0)
 S APID(2)=CNT
"RTN","VAFCQRY1",47,0)
 ;list of fields used for backwards compatibility with HDR
"RTN","VAFCQRY1",48,0)
 I $D(SARY(2))!(SEQ="ALL") I VAFCMN'="" S APID(3)=$P(VAFCMN,"^")_"V"_$P(VAFCMN,"^",2)  ;Patient ID
"RTN","VAFCQRY1",49,0)
 ;repeat patient ID list including ICN (NI),SSN (SS),CLAIM# (PN) and DFN (PI)
"RTN","VAFCQRY1",50,0)
 I $D(SARY(3))!(SEQ="ALL") D
"RTN","VAFCQRY1",51,0)
 .S APID(4)=""
"RTN","VAFCQRY1",52,0)
 .;National Identifier (ICN)
"RTN","VAFCQRY1",53,0)
 .I VAFCMN'="",+VAFCMN>0 D
"RTN","VAFCQRY1",54,0)
 ..I $E($P(VAFCMN,"^"),1,3)=STN S SITA=STN
"RTN","VAFCQRY1",55,0)
 ..; custom change - if current site is HAC then use station number 741MM - CH*1.3*22529
"RTN","VAFCQRY1",56,0)
 ..I $E($P(VAFCMN,"^"),1,3)=+STN I +STN="741" S SITA=+STN I SITA=741 S SITA="741MM"
"RTN","VAFCQRY1",57,0)
 ..I $E($P(VAFCMN,"^"),1,3)'=+STN S SITA="200M" ; **707 update assigning authority for national ICNs to 200M for MPI
"RTN","VAFCQRY1",58,0)
 ..S APID(4)=$P(VAFCMN,"^")_"V"_$P(VAFCMN,"^",2)_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_SITA_SUBCOMP_"L" D
"RTN","VAFCQRY1",59,0)
 ..;Assumption that if this is a local ICN at this point send the message with an expiration date of today, so that it will be treated as a deprecated ID and stored on the MPI as such
"RTN","VAFCQRY1",60,0)
 ..I $E($P(VAFCMN,"^"),1,3)=STN S APID(4)=APID(4)_COMP_COMP_$$HLDATE^HLFNC(DT,"DT") ;**707 TO ONLY SEND DATE NO TIME
"RTN","VAFCQRY1",61,0)
 .I $G(SSN)'="" S APID(4)=APID(4)_$S(APID(4)'="":REP,1:"")_SSN_COMP_COMP_COMP_"USSSA"_SUBCOMP_SUBCOMP_"0363"_COMP_"SS"_COMP_"VA FACILITY ID"_SUBCOMP_STN_SUBCOMP_"L"
"RTN","VAFCQRY1",62,0)
 .S NXTC=0,LVL=0 ;**837,MVI_879: Move here, so that LVL gets set before pulling in TIN and FIN
"RTN","VAFCQRY1",63,0)
 .;**837,MVI_879: Get TIN and FIN from Patient file and put in PID-3
"RTN","VAFCQRY1",64,0)
 .N TIN,FIN,REF
"RTN","VAFCQRY1",65,0)
 .S TIN=$P(VAFCMN,"^",8),FIN=$P(VAFCMN,"^",9),REF=$NA(APID(4))
"RTN","VAFCQRY1",66,0)
 .D ADDLINE($S(TIN="":HLQ,1:TIN)_COMP_COMP_COMP_"USDOD"_SUBCOMP_SUBCOMP_"0363"_COMP_"TIN"_COMP_"VA FACILITY ID"_SUBCOMP_STN_SUBCOMP_"L",.LVL,REF,REP)
"RTN","VAFCQRY1",67,0)
 .D ADDLINE($S(FIN="":HLQ,1:FIN)_COMP_COMP_COMP_"USDOD"_SUBCOMP_SUBCOMP_"0363"_COMP_"FIN"_COMP_"VA FACILITY ID"_SUBCOMP_STN_SUBCOMP_"L",.LVL,REF,REP)
"RTN","VAFCQRY1",68,0)
 .I $G(DFN)'="" D
"RTN","VAFCQRY1",69,0)
 ..D ADDLINE(DFN_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"PI"_COMP_"VA FACILITY ID"_SUBCOMP_STN_SUBCOMP_"L",.LVL,REF,REP)
"RTN","VAFCQRY1",70,0)
 ..;CLAIM# **707 moved dfn and claim number up here since Alias SSN could be many
"RTN","VAFCQRY1",71,0)
 ..I $D(^DPT(DFN,.31)) S CLAIM=$P(^DPT(DFN,.31),"^",3) I +CLAIM>0 D ADDLINE(CLAIM_COMP_COMP_COMP_"USVBA"_SUBCOMP_SUBCOMP_"0363"_COMP_"PN"_COMP_"VA FACILITY ID"_SUBCOMP_STN_SUBCOMP_"L",.LVL,REF,REP)
"RTN","VAFCQRY1",72,0)
 .I $D(VAFCA1) D
"RTN","VAFCQRY1",73,0)
 ..;Have Alias SSNs
"RTN","VAFCQRY1",74,0)
 ..S CT=0 F  S CT=$O(VAFCA1(CT)) Q:+CT<1  D
"RTN","VAFCQRY1",75,0)
 ...S NXT=$S($G(VAFCA1(CT,"SSN"))="":HL("Q"),1:$G(VAFCA1(CT,"SSN")))_COMP_COMP_COMP_"USSSA"_SUBCOMP_SUBCOMP_"0363"_COMP_"SS"_COMP_"VA FACILITY ID"_SUBCOMP_STN_SUBCOMP_"L"_COMP_COMP_$$HLDATE^HLFNC(DT,"DT")
"RTN","VAFCQRY1",76,0)
 ...I LVL=0 D
"RTN","VAFCQRY1",77,0)
 ....I $L(APID(4)_NXT)'>244 S APID(4)=APID(4)_REP_NXT Q
"RTN","VAFCQRY1",78,0)
 ....I $L(APID(4)_NXT)>244 S LVL=1 S LNGTH=244-$L(APID(4)),APID(4)=APID(4)_REP_$E(NXT,1,LNGTH) S LNGTH=LNGTH+1,NXT=$E(NXT,LNGTH,$L(NXT)),NXTC=1
"RTN","VAFCQRY1",79,0)
 ...I LVL>0 D
"RTN","VAFCQRY1",80,0)
 ....I $L($G(APID(4,LVL))_NXT)'>245 S APID(4,LVL)=$G(APID(4,LVL))_$S(NXTC=0:REP,1:"")_NXT Q
"RTN","VAFCQRY1",81,0)
 ....I $L($G(APID(4,LVL))_NXT)>245 S LNGTH=244-$L(APID(4,LVL)),APID(4,LVL)=APID(4,LVL)_REP_$E(NXT,1,LNGTH) S LNGTH=LNGTH+1,NXT=$E(NXT,LNGTH,$L(NXT)) S LVL=LVL+1 S APID(4,LVL)=NXT
"RTN","VAFCQRY1",82,0)
 ...I NXTC=1 S NXTC=0
"RTN","VAFCQRY1",83,0)
 .I $D(^DPT(DFN,"MPIFHIS")) N HIST S HIST=0  F  S HIST=$O(^DPT(DFN,"MPIFHIS",HIST)) Q:'HIST  S VAFCHMN=^DPT(DFN,"MPIFHIS",HIST,0) S HISTDT=$P(VAFCHMN,"^",4) D
"RTN","VAFCQRY1",84,0)
 ..;**477 due to a timing issue if checksum and D/T of deprecation of ICN is not present hang two seconds and try again if still not able to get ICN set D/T to DT
"RTN","VAFCQRY1",85,0)
 ..I $G(HISTDT)="" H 2 S VAFCHMN=^DPT(DFN,"MPIFHIS",HIST,0) S HISTDT=$P(VAFCHMN,"^",4) I HISTDT="" S HISTDT=DT
"RTN","VAFCQRY1",86,0)
 ..I APID(4)'="" D
"RTN","VAFCQRY1",87,0)
 ...; custom change - if current site is HAC then use station number 741MM - CH*1.3*22529
"RTN","VAFCQRY1",88,0)
 ...I $E($P(VAFCHMN,"^"),1,3)=+STN S SITA=+STN I SITA=741 S SITA="741MM"
"RTN","VAFCQRY1",89,0)
 ...I $E($P(VAFCHMN,"^"),1,3)'=+STN S SITA="200M" ; **707 update assigning authority for national ICNs to 200M for MPI
"RTN","VAFCQRY1",90,0)
 ...S NXT=$P(VAFCHMN,"^")_"V"_$P(VAFCHMN,"^",2)_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_SITA_SUBCOMP_"L"_COMP_COMP_$$HLDATE^HLFNC(HISTDT,"DT") ;**648 only send date not time
"RTN","VAFCQRY1",91,0)
 ...I LVL=0 D
"RTN","VAFCQRY1",92,0)
 ....I $L(APID(4)_NXT)'>244 S APID(4)=APID(4)_REP_NXT Q
"RTN","VAFCQRY1",93,0)
 ....I $L(APID(4)_NXT)>244 S LVL=1 S LNGTH=244-$L(APID(4)),APID(4)=APID(4)_REP_$E(NXT,1,LNGTH) S LNGTH=LNGTH+1,NXT=$E(NXT,LNGTH,$L(NXT)),NXTC=1
"RTN","VAFCQRY1",94,0)
 ...I LVL>0 D
"RTN","VAFCQRY1",95,0)
 ....I $L($G(APID(4,LVL))_NXT)'>245 S APID(4,LVL)=$G(APID(4,LVL))_$S(NXTC=0:REP,1:"")_NXT Q
"RTN","VAFCQRY1",96,0)
 ....I $L($G(APID(4,LVL))_NXT)>245 S LNGTH=244-$L(APID(4,LVL)),APID(4,LVL)=APID(4,LVL)_REP_$E(NXT,1,LNGTH) S LNGTH=LNGTH+1,NXT=$E(NXT,LNGTH,$L(NXT)) S LVL=LVL+1 S APID(4,LVL)=NXT
"RTN","VAFCQRY1",97,0)
 ..I NXTC=1 S NXTC=0
"RTN","VAFCQRY1",98,0)
 ..I APID(4)="" D
"RTN","VAFCQRY1",99,0)
 ...; custom change - if current site is HAC then use station number 741MM - CH*1.3*22529
"RTN","VAFCQRY1",100,0)
 ...I $E($P(VAFCHMN,"^"),1,3)=+STN S SITA=+STN I SITA=741 S SITA="741MM"
"RTN","VAFCQRY1",101,0)
 ...I $E($P(VAFCHMN,"^"),1,3)'=+STN S SITA="200M"
"RTN","VAFCQRY1",102,0)
 ...S APID(4)=$P(VAFCHMN,"^")_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_SITA_SUBCOMP_"L"_COMP_COMP_$$HLDATE^HLFNC(HISTDT,"DT") ;**707 ONLY DATE NOT TIME
"RTN","VAFCQRY1",103,0)
 ;
"RTN","VAFCQRY1",104,0)
ALTID ;**874 MVI_3035 (elz) alternate ID
"RTN","VAFCQRY1",105,0)
 I $D(SARY(4))!(SEQ="ALL") D
"RTN","VAFCQRY1",106,0)
 . S REF=$NA(APID(5)),@REF="",LVL=0
"RTN","VAFCQRY1",107,0)
 . I $G(DFN) D
"RTN","VAFCQRY1",108,0)
 .. ;VIC card number, station 742V1
"RTN","VAFCQRY1",109,0)
 .. N VAVICF,VAVICX,VAVIC,X
"RTN","VAFCQRY1",110,0)
 .. S VAVICF=+$$LKUP^XUAF4("742V1")
"RTN","VAFCQRY1",111,0)
 .. S VAVICX=0 F  S VAVICX=$O(^DGCN(391.91,"APAT",DFN,VAVICF,VAVICX)) Q:'VAVICX  D
"RTN","VAFCQRY1",112,0)
 ... F X=0,2 S VAVIC(X)=$G(^DGCN(391.91,VAVICX,X))
"RTN","VAFCQRY1",113,0)
 ... I $P(VAVIC(2),"^",2),$P(VAVIC(2),"^",3)'="H",$L($P(VAVIC(2),"^")),$L($P(VAVIC(0),"^",9)) D
"RTN","VAFCQRY1",114,0)
 .... D ADDLINE($P(VAVIC(2),"^",2)_COMP_COMP_COMP_$P(VAVIC(2),"^")_SUBCOMP_SUBCOMP_"0363"_COMP_$P(VAVIC(0),"^",9)_COMP_"VA FACILITY ID"_SUBCOMP_"742V1"_SUBCOMP_"L",.LVL,REF,REP)
"RTN","VAFCQRY1",115,0)
 ;
"RTN","VAFCQRY1",116,0)
NAMEPID ;patient name (last^first^middle^suffix^prefix^^"L" for legal)
"RTN","VAFCQRY1",117,0)
 I $D(SARY(5))!(SEQ="ALL") D
"RTN","VAFCQRY1",118,0)
 .;**711 code REMOVED PREFIX due to issues with existing PATIENT Name Standardization functionality
"RTN","VAFCQRY1",119,0)
 .N X S X=$P(VAFCZN,"^") D NAME^VAFCPID2(DFN,.X) S APID(6)=$$HLNAME^XLFNAME(X,"",$E(HL("ECH"),1)) I $P(APID(6),$E(HL("ECH"),1),7)'="L" S $P(APID(6),$E(HL("ECH"),1),7)="L"
"RTN","VAFCQRY1",120,0)
PREFNAME .; Story 455447 (elz)DG*5.3*937 Preferred Name (^preferred name^^^^^"N" for nickname)
"RTN","VAFCQRY1",121,0)
 .N PREFNAM S PREFNAM=$P($G(^DPT(DFN,.24)),"^",5)
"RTN","VAFCQRY1",122,0)
 .D HL7TXT(.PREFNAM,.HL,HLES) S APID(6)=APID(6)_$S(APID(6)]"":REP,1:"")_$S(PREFNAM]"":PREFNAM,1:"""""")_COMP_COMP_COMP_COMP_COMP_COMP_"N"
"RTN","VAFCQRY1",123,0)
ALIAS .;patient alias (last^first^middle^suffice^prefix^^"A" for alias - can be multiple)
"RTN","VAFCQRY1",124,0)
 .N ALIAS,ALIEN,LVL6,NXTC,LNGTH S NXTC=0,LVL6=0
"RTN","VAFCQRY1",125,0)
 .I $D(VAFCA1) S ALIEN=0 F  S ALIEN=$O(VAFCA1(ALIEN)) Q:'ALIEN  D
"RTN","VAFCQRY1",126,0)
 ..;**974,Story 841921 (mko): Get the Name Components themselves
"RTN","VAFCQRY1",127,0)
 ..;  rather than parsing them out of the Name field
"RTN","VAFCQRY1",128,0)
 ..I $G(VAFCA1(ALIEN,"NCIEN"))>0 D
"RTN","VAFCQRY1",129,0)
 ...N NAMEC
"RTN","VAFCQRY1",130,0)
 ...S NAMEC("FILE")=2.01,NAMEC("IENS")=$P(VAFCA1(ALIEN,"NCIEN"),"^",2),NAMEC("FIELD")=.01
"RTN","VAFCQRY1",131,0)
 ...S ALIAS=$$HLNAME^XLFNAME(.NAMEC,"",$E(HL("ECH")))
"RTN","VAFCQRY1",132,0)
 ..E  S ALIAS=$$HLNAME^XLFNAME(VAFCA1(ALIEN,"NAME"),"",$E(HL("ECH"),1))
"RTN","VAFCQRY1",133,0)
 ..Q:ALIAS=""
"RTN","VAFCQRY1",134,0)
 ..S $P(ALIAS,$E(HL("ECH"),1),7)="A"
"RTN","VAFCQRY1",135,0)
 ..I LVL6=0 D
"RTN","VAFCQRY1",136,0)
 ...I $L(APID(6)_ALIAS)'>244 S APID(6)=APID(6)_REP_ALIAS Q
"RTN","VAFCQRY1",137,0)
 ...I $L(APID(6)_ALIAS)>244 S LVL6=1 S LNGTH=244-$L(APID(6)),APID(6)=APID(6)_REP_$E(ALIAS,1,LNGTH) S LNGTH=LNGTH+1,ALIAS=$E(ALIAS,LNGTH,$L(ALIAS)),NXTC=1
"RTN","VAFCQRY1",138,0)
 ..I LVL6>0 D
"RTN","VAFCQRY1",139,0)
 ...I $L($G(APID(6,LVL6))_ALIAS)'>245 S APID(6,LVL6)=$G(APID(6,LVL6))_$S(NXTC=0:REP,1:"")_ALIAS Q
"RTN","VAFCQRY1",140,0)
 ...I $L($G(APID(6,LVL6))_ALIAS)>245 S LNGTH=244-$L(APID(6,LVL6)),APID(6,LVL6)=APID(6,LVL6)_REP_$E(ALIAS,1,LNGTH) S LNGTH=LNGTH+1,ALIAS=$E(ALIAS,LNGTH,$L(ALIAS)) S LVL6=LVL6+1 S APID(6,LVL6)=ALIAS
"RTN","VAFCQRY1",141,0)
 ..I NXTC=1 S NXTC=0
"RTN","VAFCQRY1",142,0)
 . I APID(6)="" S APID(6)=HL("Q")
"RTN","VAFCQRY1",143,0)
MOTHER ;mother's maiden name  (last^first^middle^suffix^prefix^^"M" for maiden name)
"RTN","VAFCQRY1",144,0)
 I $D(SARY(6))!(SEQ="ALL") D
"RTN","VAFCQRY1",145,0)
 .S APID(7)=HL("Q")
"RTN","VAFCQRY1",146,0)
 .I $D(^DPT(DFN,.24)) S VAFCMMN=$P(^DPT(DFN,.24),"^",3) D
"RTN","VAFCQRY1",147,0)
 ..S APID(7)=$$HLNAME^XLFNAME(VAFCMMN,"",$E(HL("ECH"),1)) I APID(7)="" S APID(7)=HL("Q")
"RTN","VAFCQRY1",148,0)
 ..I $P(APID(7),$E(HL("ECH"),1),7)'="M" S $P(APID(7),$E(HL("ECH"),1),7)="M"
"RTN","VAFCQRY1",149,0)
 .I APID(7)="" S APID(7)=HL("Q")
"RTN","VAFCQRY1",150,0)
 I $D(SARY(7))!(SEQ="ALL") S APID(8)=$$HLDATE^HLFNC($P(VAFCZN,"^",3)) I APID(8)="" S APID(8)=HL("Q") ;date/time of birth
"RTN","VAFCQRY1",151,0)
 I $D(SARY(8))!(SEQ="ALL") S APID(9)=$P(VAFCZN,"^",2) I APID(9)="" S APID(9)=HL("Q") ;sex
"RTN","VAFCQRY1",152,0)
 ;place of birth city and state
"RTN","VAFCQRY1",153,0)
 ;split into 2 routines **707
"RTN","VAFCQRY1",154,0)
 D CONT^VAFCQRY3(DFN,.APID,.PID,.HL,HLES,.SARY,SEQ,.ERR,REP,COMP,SSN,VAFCMN)
"RTN","VAFCQRY1",155,0)
 D KVA^VADPT
"RTN","VAFCQRY1",156,0)
 Q
"RTN","VAFCQRY1",157,0)
HL7TXT(HL7STRG,HL,HLES) ; Replace occurrences of embedded HL7 delimiters with
"RTN","VAFCQRY1",158,0)
 ; HL7 escape sequence
"RTN","VAFCQRY1",159,0)
 ;
"RTN","VAFCQRY1",160,0)
 ; Inputs: HL7STRG - Data string to be checked
"RTN","VAFCQRY1",161,0)
 ;        HL("ECH") - HL7 delimiter string
"RTN","VAFCQRY1",162,0)
 ;              Delimiters MUST be in the following order,
"RTN","VAFCQRY1",163,0)
 ;              Escape, Field, Component, Repeat, Subcomponent
"RTN","VAFCQRY1",164,0)
 ;              Example: \^~|&
"RTN","VAFCQRY1",165,0)
 ;
"RTN","VAFCQRY1",166,0)
 ; Output: HL7XTRG - Data string with escape sequence added (if needed)
"RTN","VAFCQRY1",167,0)
 ;
"RTN","VAFCQRY1",168,0)
 N OCHR,RCHR,RCHRI,TYPE,I,HLES2
"RTN","VAFCQRY1",169,0)
 ;
"RTN","VAFCQRY1",170,0)
 I $G(HL("COMP"))="" S HL("COMP")=$E(HL("ECH"),1),HL("REP")=$E(HL("ECH"),2),HL("SUBCOMP")=$E(HL("ECH"),4)
"RTN","VAFCQRY1",171,0)
 ; Set HL7 escape char
"RTN","VAFCQRY1",172,0)
 S HLES2=HLES_HL("FS")_HL("COMP")_HL("REP")_HL("SUBCOMP")
"RTN","VAFCQRY1",173,0)
 ;
"RTN","VAFCQRY1",174,0)
 ; Search for occurrence of each delimiter and replace it with "\<type>\"
"RTN","VAFCQRY1",175,0)
 F TYPE="E","F","C","R","S" D
"RTN","VAFCQRY1",176,0)
 . S RCHRI=$S(TYPE="E":1,TYPE="F":2,TYPE="C":3,TYPE="R":4,TYPE="S":5)
"RTN","VAFCQRY1",177,0)
 . ;
"RTN","VAFCQRY1",178,0)
 . ; OCHR=original char, RCHR=replacement char
"RTN","VAFCQRY1",179,0)
 . S OCHR=$E(HLES2,RCHRI),RCHR=$E("EFSRT",RCHRI) Q:'$F(HL7STRG,OCHR)
"RTN","VAFCQRY1",180,0)
 . F I=1:1 Q:$E(HL7STRG,I)=""  I $E(HL7STRG,I)=OCHR S HL7STRG=$E(HL7STRG,1,I-1)_HLES_RCHR_HLES_$E(HL7STRG,I+1,999),I=I+2
"RTN","VAFCQRY1",181,0)
 Q
"RTN","VAFCQRY1",182,0)
 ;
"RTN","VAFCQRY1",183,0)
ADDLINE(NXT,LVL,REF,REP) ; Prepend REP to NXT and add it to the @REF
"RTN","VAFCQRY1",184,0)
 ; array, starting at subscript LVL. If appending NXT causes the node
"RTN","VAFCQRY1",185,0)
 ; to exceed 245 chars in length, add as much of NXT as possible to the
"RTN","VAFCQRY1",186,0)
 ; current level, and the remaining at the next level.
"RTN","VAFCQRY1",187,0)
 ; In:
"RTN","VAFCQRY1",188,0)
 ;   NXT = string to add to the @REF array
"RTN","VAFCQRY1",189,0)
 ;  .LVL = current subscript level (passed by referenced)
"RTN","VAFCQRY1",190,0)
 ;   REF = array reference string
"RTN","VAFCQRY1",191,0)
 ;   REP = repetition character (e.g., |)
"RTN","VAFCQRY1",192,0)
 ; **837,MVI_879: Created this subroutine to aid in adding TIN and FIN to PID-3.
"RTN","VAFCQRY1",193,0)
 N LNGTH,CURREF
"RTN","VAFCQRY1",194,0)
 S:$G(LVL)<1 LVL=0
"RTN","VAFCQRY1",195,0)
 S CURREF=$S(LVL=0:REF,1:$NA(@REF@(LVL)))
"RTN","VAFCQRY1",196,0)
 I LVL>0!($G(@CURREF)]"") S NXT=REP_NXT
"RTN","VAFCQRY1",197,0)
 I $L($G(@CURREF))+$L(NXT)'>245 S @CURREF=$G(@CURREF)_NXT
"RTN","VAFCQRY1",198,0)
 E  S LNGTH=245-$L(@CURREF),@CURREF=@CURREF_$E(NXT,1,LNGTH),LVL=LVL+1,@REF@(LVL)=$E(NXT,LNGTH+1,$L(NXT))
"RTN","VAFCQRY1",199,0)
 Q
"RTN","VAFCRPC")
0^3^B7979176^B7679300
"RTN","VAFCRPC",1,0)
VAFCRPC ;BIR/DLR-RPC ENTRY POINTS ; 8/11/10 6:18pm
"RTN","VAFCRPC",2,0)
 ;;5.3;Registration;**414,440,474,477,479,825,981**;Aug 13, 1993;Build 1
"RTN","VAFCRPC",3,0)
 ;;Routine uses the following supported IAs #2701 and #3027.
"RTN","VAFCRPC",4,0)
PDAT(RETURN,VALUE,SSN) ;remote pdat display
"RTN","VAFCRPC",5,0)
 ;'value' will pass in either an icn, ssn, dfn or patient name
"RTN","VAFCRPC",6,0)
 N ARRAY,DFN,ICN,NAME,SSN,VAFCSEN
"RTN","VAFCRPC",7,0)
 I $O(VALUE(""))="" S VALUE("ICN")=VALUE ;backwards compatibility - sites passing in an icn
"RTN","VAFCRPC",8,0)
 S ICN=$G(VALUE("ICN")) ;icn (local or national) passed in from mpi
"RTN","VAFCRPC",9,0)
 S NAME=$G(VALUE("NAME")) ;patient name passed in from mpi
"RTN","VAFCRPC",10,0)
 S SSN=$G(VALUE("SSN")) ;social security number passed in from mpi
"RTN","VAFCRPC",11,0)
 S DFN=$G(VALUE("DFN")) ;patient file ien passed in from mpi
"RTN","VAFCRPC",12,0)
 I $G(SSN)'="" S DFN=$O(^DPT("SSN",SSN,0)) I DFN="" S RETURN(1)="-1^Invalid SSN passed into RPC" Q
"RTN","VAFCRPC",13,0)
 I $G(ICN)'="" S DFN=$$GETDFN^MPIF001(ICN) I +DFN<0 S RETURN(1)="-1^Invalid ICN passed into RPC" Q  ;IA 2701
"RTN","VAFCRPC",14,0)
 I $G(NAME)'="" S DFN=$O(^DPT("B",NAME,0)) I DFN="" S RETURN(1)="-1^Invalid NAME passed into RPC" Q
"RTN","VAFCRPC",15,0)
 I $S('$G(DFN):1,'$D(^DPT(DFN,0)):1,1:0) S RETURN(1)="-1^Invalid DFN passed into RPC" Q
"RTN","VAFCRPC",16,0)
 ;log patient sensitivity on receiving system and send msg bulletin
"RTN","VAFCRPC",17,0)
 ;D NOTICE^DGSEC4(.VAFCSEN,DFN,"RPC - VAFC REMOTE AUDIT FROM THE MPI^Remote Audit Query",3) ;IA #3027
"RTN","VAFCRPC",18,0)
 S ARRAY="^TMP(""VAFCHFS"","_$J_")"
"RTN","VAFCRPC",19,0)
 D HFS^VAFCHFS("START^VAFCPDAT")
"RTN","VAFCRPC",20,0)
 ;M RETURN=@ARRAY
"RTN","VAFCRPC",21,0)
 D DSPPDAT^VAFCHFS(.RETURN)
"RTN","VAFCRPC",22,0)
 K ^TMP("VAFCHFS",$J)
"RTN","VAFCRPC",23,0)
 Q
"RTN","VAFCRPC",24,0)
 ;
"RTN","VAFCRPC",25,0)
AUDIT(RETURN,VALUE,SSN,SDT,EDT) ;remote audit display
"RTN","VAFCRPC",26,0)
 ;'value' will pass in either an icn, ssn, dfn or patient name
"RTN","VAFCRPC",27,0)
 N ARRAY,DFN,ICN,NAME,SSN,VAFCSEN
"RTN","VAFCRPC",28,0)
 S ICN=$G(VALUE("ICN")) ;icn (local or national) passed in
"RTN","VAFCRPC",29,0)
 S NAME=$G(VALUE("NAME")) ;patient name passed in
"RTN","VAFCRPC",30,0)
 S SSN=$G(VALUE("SSN")) ;social security number passed in
"RTN","VAFCRPC",31,0)
 S DFN=$G(VALUE("DFN")) ;patient file ien passed in
"RTN","VAFCRPC",32,0)
 I $G(SSN)'="" S DFN=$O(^DPT("SSN",SSN,0)) I DFN="" S RETURN(1)="-1^Invalid SSN passed into RPC" Q
"RTN","VAFCRPC",33,0)
 I $G(ICN)'="" S DFN=$$GETDFN^MPIF001(ICN) I +DFN<0 S RETURN(1)="-1^Invalid ICN passed into RPC" Q  ;IA 2701
"RTN","VAFCRPC",34,0)
 I $G(NAME)'="" S DFN=$O(^DPT("B",NAME,0)) I DFN="" S RETURN(1)="-1^Invalid NAME passed into RPC" Q
"RTN","VAFCRPC",35,0)
 I $S('$G(DFN):1,'$D(^DPT(DFN,0)):1,1:0) S RETURN(1)="-1^Invalid DFN passed into RPC" Q
"RTN","VAFCRPC",36,0)
 ;log patient sensitivity on receiving system and send msg bulletin
"RTN","VAFCRPC",37,0)
 ;D NOTICE^DGSEC4(.VAFCSEN,DFN,"RPC - VAFC REMOTE AUDIT FROM THE MPI^Remote Audit Query",3) ;IA #3027
"RTN","VAFCRPC",38,0)
 S ARRAY="^TMP(""VAFCHFS"","_$J_")"
"RTN","VAFCRPC",39,0)
 D HFS^VAFCHFS("START^VAFCAUD(DFN,SDT,EDT,1)")
"RTN","VAFCRPC",40,0)
 ;M RETURN=@ARRAY
"RTN","VAFCRPC",41,0)
 D DSPPDAT^VAFCHFS(.RETURN)
"RTN","VAFCRPC",42,0)
 K ^TMP("VAFCHFS",$J)
"RTN","VAFCRPC",43,0)
 Q
"RTN","VAFCRPC",44,0)
AAUPD(RETURN,ARRAA) ;Assigning authority update
"RTN","VAFCRPC",45,0)
 ;RPC: VAFC AA UPDATE
"RTN","VAFCRPC",46,0)
 S RETURN=$$ADD^VAFCAAUT(.ARRAA,.ERR)
"RTN","VAFCRPC",47,0)
 Q
"RTN","VAFCRPC",48,0)
 ;
"RTN","VAFCRPC",49,0)
 ;**128, Story 951754 (jfw) - Maintain EHRM MIGRATED FACILITIES File #391.919
"RTN","VAFCRPC",50,0)
 ;Input: ARRCRNR - List of Sites that have migrated to CERNER.
"RTN","VAFCRPC",51,0)
 ;       ie. ARRCRN(<Station#>)=""
"RTN","VAFCRPC",52,0)
 ;           ARRCRN(<Station#>)=""
"RTN","VAFCRPC",53,0)
 ;           etc..
"RTN","VAFCRPC",54,0)
 ;Output: 1 if successful else ERROR CODE ^ ERROR MESSAGE
"RTN","VAFCRPC",55,0)
UPDMFAC(RETURN,ARRCRNR) ;Update EHRM MIGRATED FACILITIES (#391.919) file
"RTN","VAFCRPC",56,0)
 ;RPC: VAFC MVI MGRTD FACILITIES UPDT
"RTN","VAFCRPC",57,0)
 ;MVI will remotely update the EHRM MIGRATED FACILITIES (#391.919) file
"RTN","VAFCRPC",58,0)
 ;with sites that have Migrated to using the CERNER application.
"RTN","VAFCRPC",59,0)
 D UPDT^VAFCCRNR(.ARRCRNR,.RETURN)
"RTN","VAFCRPC",60,0)
 Q
"RTN","VAFCTFU2")
0^2^B48038371^B47004597
"RTN","VAFCTFU2",1,0)
VAFCTFU2 ;BHM/CMC,CKN-Utilities for the Treating Facility file 391.91, CONTINUED ; 5/23/12 6:25pm
"RTN","VAFCTFU2",2,0)
 ;;5.3;Registration;**821,856,863,981**;Aug 13, 1993;Build 1
"RTN","VAFCTFU2",3,0)
TFL(LIST,PT) ;for this PT [patient] (either DFN, ICN or EDIPI) return the list of treating facilities
"RTN","VAFCTFU2",4,0)
 ; CALLED FROM RPC VAFC LOCAL GET CORRESPONDINGIDS
"RTN","VAFCTFU2",5,0)
 ; PT values -->
"RTN","VAFCTFU2",6,0)
 ;ICN example:   1008520438V882204^NI^USVHA^200M
"RTN","VAFCTFU2",7,0)
 ;DFN example:   100000511^PI^USVHA^500
"RTN","VAFCTFU2",8,0)
 ;EDIPI example: 852043888^NI^USDOD^200DOD
"RTN","VAFCTFU2",9,0)
 ; 
"RTN","VAFCTFU2",10,0)
 ; Return:
"RTN","VAFCTFU2",11,0)
 ; This will return the ICN and the list of treating facilities in the following.
"RTN","VAFCTFU2",12,0)
 ;
"RTN","VAFCTFU2",13,0)
 ;   format:
"RTN","VAFCTFU2",14,0)
 ;   Id^IdType^AssigningAuthority^AssigningFacility^IdStatus
"RTN","VAFCTFU2",15,0)
 ;
"RTN","VAFCTFU2",16,0)
 ;   Examples:
"RTN","VAFCTFU2",17,0)
 ;   RESULT(1)="1011232151V598646^NI^200M^A"
"RTN","VAFCTFU2",18,0)
 ;   RESULT(2)="7168937^PI^USVHA^500^A"
"RTN","VAFCTFU2",19,0)
 ;   RESULT(3)="852043888^NI^USDOD^200DOD^A"
"RTN","VAFCTFU2",20,0)
 ;
"RTN","VAFCTFU2",21,0)
 N X,ICN,DA,DR,VAFCTFU1,DIC,DIQ,VAFC,DFN,EDIPI,ASSIGN,ID,SITE,TYPE
"RTN","VAFCTFU2",22,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T S LIST(1)="-1^MPI Not Installed" Q
"RTN","VAFCTFU2",23,0)
 ; clear "return" variable
"RTN","VAFCTFU2",24,0)
 K LIST
"RTN","VAFCTFU2",25,0)
 ; what do we have
"RTN","VAFCTFU2",26,0)
 S TYPE=$P(PT,"^",2),SITE=$P(PT,"^",4),ID=$P(PT,"^"),ASSIGN=$P(PT,"^",3)
"RTN","VAFCTFU2",27,0)
 ; check input data
"RTN","VAFCTFU2",28,0)
 I ID']"" S LIST(1)="-1^Id is not defined." Q
"RTN","VAFCTFU2",29,0)
 I TYPE'="NI",TYPE'="PI" S LIST(1)="-1^Invalid Id Type." Q
"RTN","VAFCTFU2",30,0)
 I ASSIGN'="USVHA",ASSIGN'="USDOD" S LIST(1)="-1^Invalid Assigning Authority." Q
"RTN","VAFCTFU2",31,0)
 I SITE']"" S LIST(1)="-1^Missing Assigning Facility." Q
"RTN","VAFCTFU2",32,0)
 ; find the ien for the station number
"RTN","VAFCTFU2",33,0)
 S SITEIEN=$O(^DIC(4,"D",SITE,0))
"RTN","VAFCTFU2",34,0)
 I 'SITEIEN S LIST(1)="-1^Assigning Facility is not defined in database." Q
"RTN","VAFCTFU2",35,0)
 ;
"RTN","VAFCTFU2",36,0)
 I TYPE="PI",ASSIGN="USVHA" S DFN=ID
"RTN","VAFCTFU2",37,0)
 I TYPE="NI",ASSIGN="USVHA",SITE="200M" S ICN=ID
"RTN","VAFCTFU2",38,0)
 I TYPE="NI",ASSIGN="USDOD",SITE="200DOD" S EDIPI=ID
"RTN","VAFCTFU2",39,0)
 I $D(ICN) S DFN=$$GETDFN^MPIF001(ICN) D  Q:$D(LIST(1))
"RTN","VAFCTFU2",40,0)
 . I +DFN<0 S LIST(1)="-1^ICN is not known" Q
"RTN","VAFCTFU2",41,0)
 . S SITEIEN=$$IEN^XUAF4($P($$SITE^VASITE,"^",3))
"RTN","VAFCTFU2",42,0)
 ;
"RTN","VAFCTFU2",43,0)
 I $D(DFN) S ICN=$$GETICN^MPIF001(DFN)
"RTN","VAFCTFU2",44,0)
 ; DFN should be defined, but ICN may not.
"RTN","VAFCTFU2",45,0)
 ; I $D(EDIPI) S ICN=$$GETICN(EDIPI)
"RTN","VAFCTFU2",46,0)
 ; check EDIPI
"RTN","VAFCTFU2",47,0)
 ;I $D(EDIPI),'$D(^DGCN(391.91,"ASCR",EDIPI,SITEIEN)) D  Q
"RTN","VAFCTFU2",48,0)
 ;. S LIST(1)="-1^EDIPI Record is unknown at this facility"
"RTN","VAFCTFU2",49,0)
 ;I $D(EDIPI),$D(^DGCN(391.91,"ASCR",EDIPI,SITEIEN)) D
"RTN","VAFCTFU2",50,0)
 ;.S EN=$O(^DGCN(391.91,"ASCR",EDIPI,SITEIEN,0))
"RTN","VAFCTFU2",51,0)
 ;.S DFN=$P($G(^DGCN(391.91,EN,0)),"^")
"RTN","VAFCTFU2",52,0)
 ;**856 MVI 1371 (ckn)
"RTN","VAFCTFU2",53,0)
 ;Use new xref AISS appropriately to retrieve DFN from EDIPI
"RTN","VAFCTFU2",54,0)
 I $D(EDIPI)=""!(ASSIGN="")!(TYPE="")!(SITEIEN="") S LIST(1)="-1^Insufficient data" Q
"RTN","VAFCTFU2",55,0)
 I $D(EDIPI),'$D(^DGCN(391.91,"AISS",EDIPI,ASSIGN,TYPE,SITEIEN)) D  Q
"RTN","VAFCTFU2",56,0)
 . S LIST(1)="-1^EDIPI Record is unknown at this facility"
"RTN","VAFCTFU2",57,0)
 I $D(EDIPI),$D(^DGCN(391.91,"AISS",EDIPI,ASSIGN,TYPE,SITEIEN)) D
"RTN","VAFCTFU2",58,0)
 .S EN=$O(^DGCN(391.91,"AISS",EDIPI,ASSIGN,TYPE,SITEIEN,0))
"RTN","VAFCTFU2",59,0)
 .S DFN=$P($G(^DGCN(391.91,EN,0)),"^")
"RTN","VAFCTFU2",60,0)
 ;
"RTN","VAFCTFU2",61,0)
 ; if ICN is not defined, it is OK, but DFN should be defined
"RTN","VAFCTFU2",62,0)
 ; I $G(ICN)<0 S LIST(1)=ICN Q
"RTN","VAFCTFU2",63,0)
 ; bad input, such as Id^NI^USVHA^123
"RTN","VAFCTFU2",64,0)
 I '$G(DFN) S LIST(1)="-1^Invalid input" Q
"RTN","VAFCTFU2",65,0)
 ; check DFN and Site to be matching an entry in file #391.91
"RTN","VAFCTFU2",66,0)
 I '$O(^DGCN(391.91,"APAT",DFN,SITEIEN,0)) D  Q
"RTN","VAFCTFU2",67,0)
 . S LIST(1)="-1^Id as '"_ID_"'"_" is not in database"
"RTN","VAFCTFU2",68,0)
 ; DFN should be defined, but ICN may not.
"RTN","VAFCTFU2",69,0)
 S X=$$QUERYTF($P($G(ICN),"V"),"LIST")
"RTN","VAFCTFU2",70,0)
 I $P(X,U)="1" S LIST(1)="-1"_U_$P(X,U,2) Q
"RTN","VAFCTFU2",71,0)
 ;S DR=".01;13;99",DIC=4,DIQ(0)="E",DIQ="VAFCTFU2"
"RTN","VAFCTFU2",72,0)
 ;F VAFC=0:0 S VAFC=$O(LIST(VAFC)) Q:VAFC=""  D
"RTN","VAFCTFU2",73,0)
 ;.K VAFCTFU2
"RTN","VAFCTFU2",74,0)
 ;.S DA=+LIST(VAFC)
"RTN","VAFCTFU2",75,0)
 ;.D EN^DIQ1
"RTN","VAFCTFU2",76,0)
 ;.S LIST(VAFC)=VAFCTFU2(4,+LIST(VAFC),99,"E")_"^"_VAFCTFU2(4,+LIST(VAFC),.01,"E")_"^"_$P(LIST(VAFC),"^",2)_"^"_$P(LIST(VAFC),"^",3)_"^"_VAFCTFU2(4,+LIST(VAFC),13,"E")_"^"_$P(LIST(VAFC),"^",4)
"RTN","VAFCTFU2",77,0)
 Q
"RTN","VAFCTFU2",78,0)
GETICN(EDIPI) ;return the ICN when EDIPI is passed
"RTN","VAFCTFU2",79,0)
 N EN,DFN,ICN,IEN
"RTN","VAFCTFU2",80,0)
 S IEN=$$IEN^XUAF4("200DOD")
"RTN","VAFCTFU2",81,0)
 I 'IEN Q "-1^Unknown Assigning Facility."
"RTN","VAFCTFU2",82,0)
 I '$D(^DGCN(391.91,"ASCR",EDIPI,IEN)) Q "-1^EDIPI Record is unknown at this facility"
"RTN","VAFCTFU2",83,0)
 I $D(^DGCN(391.91,"ASCR",EDIPI,IEN)) D
"RTN","VAFCTFU2",84,0)
 .S EN=$O(^DGCN(391.91,"ASCR",EDIPI,$$IEN^XUAF4("200DOD"),""))
"RTN","VAFCTFU2",85,0)
 .S DFN=$P($G(^DGCN(391.91,EN,0)),"^")
"RTN","VAFCTFU2",86,0)
 .I DFN'="" S ICN=$$GETICN^MPIF001(DFN)
"RTN","VAFCTFU2",87,0)
 .I DFN="" S ICN="-1^No Site Record associated with this entry"
"RTN","VAFCTFU2",88,0)
 Q ICN
"RTN","VAFCTFU2",89,0)
 ;
"RTN","VAFCTFU2",90,0)
SET(TFIEN,ARY,CTR) ;This sets the array with the treating facility list.
"RTN","VAFCTFU2",91,0)
 ;  Ex  ARY(1)=<ID> ^ <ID TYPE> ^ <Assigning Authority> ^ <Assigning Facility> ^ <ID Status>
"RTN","VAFCTFU2",92,0)
 N DGCN,INSTIEN,LSTA,SOURCE,EN,NODE,SDFN,STATUS,SITEN,ID,IDTYPE,SITE,ASSAUTH,FOUND,NODE0,NODE2
"RTN","VAFCTFU2",93,0)
 S DGCN(0)=$G(^DGCN(391.91,TFIEN,0)),SITEN=""
"RTN","VAFCTFU2",94,0)
 ;** FROM DG*5.3*800 - (ckn) - Quit if IPP field is not set for 200MH record - removed in **863 MVI 2544
"RTN","VAFCTFU2",95,0)
 S INSTIEN=$P($G(DGCN(0)),"^",2),LSTA=$$STA^XUAF4(INSTIEN)
"RTN","VAFCTFU2",96,0)
 ;I $E(LSTA,1,5)="200MH",$P($G(DGCN(0)),"^",8)'=1 Q  ;include all MHV records MVI 2544 **863
"RTN","VAFCTFU2",97,0)
 S ID=$P(DGCN(0),"^"),SITE=$P(DGCN(0),"^",2) I SITE'="" S SITEN=$$STA^XUAF4(SITE)
"RTN","VAFCTFU2",98,0)
 ;S IDTYPE="PI"
"RTN","VAFCTFU2",99,0)
 ;I SITEN="200DOD"!(SITEN["200N") S IDTYPE="NI"
"RTN","VAFCTFU2",100,0)
 ;S ASSAUTH="USVHA"
"RTN","VAFCTFU2",101,0)
 ;I SITEN="200DOD" S ASSAUTH="USDOD"
"RTN","VAFCTFU2",102,0)
 ; GET SOURCE ID AND SOURCE STATUS - CAN BE MORE THAN ONE
"RTN","VAFCTFU2",103,0)
 ;^DGCN(391.91,14842,0)=7169806^17942
"RTN","VAFCTFU2",104,0)
 ;^DGCN(391.91,14842,1,0)=^391.9101A^2^2
"RTN","VAFCTFU2",105,0)
 ;^DGCN(391.91,14842,1,1,0)=1^A
"RTN","VAFCTFU2",106,0)
 ;^DGCN(391.91,14842,1,2,0)=2^H
"RTN","VAFCTFU2",107,0)
 ;^DGCN(391.91,14842,1,"B",1,1)=
"RTN","VAFCTFU2",108,0)
 ;^DGCN(391.91,14842,1,"B",2,2)=
"RTN","VAFCTFU2",109,0)
 ;^DGCN(391.91,1708,0)=7169806^500^3081204.152808^^^^1
"RTN","VAFCTFU2",110,0)
 ;^DGCN(391.91,1708,1,0)=^391.9101A^1^1
"RTN","VAFCTFU2",111,0)
 ;^DGCN(391.91,1708,1,1,0)=27^H
"RTN","VAFCTFU2",112,0)
 ;^DGCN(391.91,1708,1,"B",27,1)=
"RTN","VAFCTFU2",113,0)
 ;**856 - MVI 1371 (ckn)
"RTN","VAFCTFU2",114,0)
 ;After DG*5.3*837 - TREATING FACILITY LIST file #391.91 does not
"RTN","VAFCTFU2",115,0)
 ;store Source Id value in SOURCE ID multiple field. This field is
"RTN","VAFCTFU2",116,0)
 ;is moved to top level. We no longer need to loop through SOURNCE ID
"RTN","VAFCTFU2",117,0)
 ;multiple to get the values.
"RTN","VAFCTFU2",118,0)
 ;S SOURCE="",FOUND=0
"RTN","VAFCTFU2",119,0)
 ;I $D(^DGCN(391.91,TFIEN,1)) D
"RTN","VAFCTFU2",120,0)
 ;.S EN=0 F  S EN=$O(^DGCN(391.91,TFIEN,1,EN)) Q:EN=""  D
"RTN","VAFCTFU2",121,0)
 ;..;S NODE=$G(^DGCN(391.91,TFIEN,1,EN,0))
"RTN","VAFCTFU2",122,0)
 S NODE0=$G(^DGCN(391.91,TFIEN,0))
"RTN","VAFCTFU2",123,0)
 S NODE2=$G(^DGCN(391.91,TFIEN,2))
"RTN","VAFCTFU2",124,0)
 S SDFN=$P(NODE2,"^",2),STATUS=$P(NODE2,"^",3),IDTYPE=$P(NODE0,"^",9)
"RTN","VAFCTFU2",125,0)
 S ASSAUTH=$P(NODE2,"^")
"RTN","VAFCTFU2",126,0)
 I SITEN="200DOD"!(SITEN["200N") S IDTYPE="NI"
"RTN","VAFCTFU2",127,0)
 I SITEN="200DOD" S ASSAUTH="USDOD"
"RTN","VAFCTFU2",128,0)
 I IDTYPE="" S IDTYPE="PI"
"RTN","VAFCTFU2",129,0)
 I ASSAUTH="" S ASSAUTH="USVHA"
"RTN","VAFCTFU2",130,0)
 I SITEN["200N"&(IDTYPE="NI")&(ASSAUTH="USVHA") S ASSAUTH=""
"RTN","VAFCTFU2",131,0)
 ;S SDFN=$P(NODE,"^"),STATUS=$P(NODE,"^",2)
"RTN","VAFCTFU2",132,0)
 ;**981, Story 961754 (jfw) - Allow for Status of CERNER if NOT currently MERGED
"RTN","VAFCTFU2",133,0)
 S:(STATUS'="H") STATUS=$S($D(^DGCN(391.919,"ACRNR",SITEN)):"C",1:STATUS)
"RTN","VAFCTFU2",134,0)
 I SDFN'="" S CTR=CTR+1,@ARY@(CTR)=SDFN_"^"_IDTYPE_"^"_ASSAUTH_"^"_SITEN_"^"_STATUS,FOUND=1
"RTN","VAFCTFU2",135,0)
 ;I FOUND=0 S CTR=CTR+1,@ARY@(CTR)=""_"^"_IDTYPE_"^"_ASSAUTH_"^"_SITEN
"RTN","VAFCTFU2",136,0)
 Q
"RTN","VAFCTFU2",137,0)
 ;
"RTN","VAFCTFU2",138,0)
QUERYTF(PAT,ARY) ;a query for Treating Facility.
"RTN","VAFCTFU2",139,0)
 ;INPUT   PAT - The patient's ICN
"RTN","VAFCTFU2",140,0)
 ;        ARY - The array in which to return the Treating facility info.
"RTN","VAFCTFU2",141,0)
 ;OUTPUT  A list of the Treating Facilities in the array provided from
"RTN","VAFCTFU2",142,0)
 ;        the parameter.  It will be in the structure of x(1), x(2) etc.
"RTN","VAFCTFU2",143,0)
 ;  Ex  X(1)=<ID> ^ <ID TYPE> ^ <Assigning Authority> ^ <Assigning Facility> ^ <ID Status>
"RTN","VAFCTFU2",144,0)
 ;
"RTN","VAFCTFU2",145,0)
 ;    This is also a function call.  If there is an error then a 
"RTN","VAFCTFU2",146,0)
 ;    1^error description will be returned. 
"RTN","VAFCTFU2",147,0)
 ;
"RTN","VAFCTFU2",148,0)
 ;  *** If no data is found the array will not be populated and
"RTN","VAFCTFU2",149,0)
 ;  a 1^error description will be returned.
"RTN","VAFCTFU2",150,0)
 ;
"RTN","VAFCTFU2",151,0)
 N PDFN,VAFCER,LP,CTR
"RTN","VAFCTFU2",152,0)
 ;
"RTN","VAFCTFU2",153,0)
 ; ICN is not required, comment out
"RTN","VAFCTFU2",154,0)
 ; I '$G(PAT)!('$D(ARY)) S VAFCER="1^Parameter missing." G QUERYTFQ
"RTN","VAFCTFU2",155,0)
 I ('$D(ARY)) S VAFCER="1^Parameter missing." G QUERYTFQ
"RTN","VAFCTFU2",156,0)
 S VAFCER=0,CTR=1
"RTN","VAFCTFU2",157,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T G QUERYTFQ
"RTN","VAFCTFU2",158,0)
 ; ICN is not required, comment out
"RTN","VAFCTFU2",159,0)
 ; S PDFN=$$GETDFN^MPIF001(PAT)
"RTN","VAFCTFU2",160,0)
 ; I PDFN<0 S VAFCER="1^No patient DFN." G QUERYTFQ
"RTN","VAFCTFU2",161,0)
 S PDFN=$G(DFN)
"RTN","VAFCTFU2",162,0)
 I '$G(PDFN) S VAFCER="1^DFN is not defined." G QUERYTFQ
"RTN","VAFCTFU2",163,0)
 ;SET FIRST ENTRY TO BE THE ICN - FULL ICN - PAT IS NOT THE ICN
"RTN","VAFCTFU2",164,0)
 S @ARY@(CTR)=$$GETICN^MPIF001(PDFN)_"^NI^USVHA^200M^A"
"RTN","VAFCTFU2",165,0)
 ;**856 - MVI 1371 (ckn)
"RTN","VAFCTFU2",166,0)
 ;Loop through all TFIENs for site
"RTN","VAFCTFU2",167,0)
 ;F LP=0:0 S LP=$O(^DGCN(391.91,"APAT",PDFN,LP)) Q:'LP  S TFIEN=$O(^(LP,"")) D SET(TFIEN,ARY,.CTR)
"RTN","VAFCTFU2",168,0)
 F LP=0:0 S LP=$O(^DGCN(391.91,"APAT",PDFN,LP)) Q:'LP  D
"RTN","VAFCTFU2",169,0)
 .S TFIEN=0 F  S TFIEN=$O(^DGCN(391.91,"APAT",PDFN,LP,TFIEN)) Q:'TFIEN  D
"RTN","VAFCTFU2",170,0)
 ..D SET(TFIEN,ARY,.CTR)
"RTN","VAFCTFU2",171,0)
 I $D(@ARY)'>9 S VAFCER="1^Could not find Treating Facilities"
"RTN","VAFCTFU2",172,0)
QUERYTFQ Q VAFCER
"RTN","VAFCTFU2",173,0)
 ;
"RTN","VAFCTFU2",174,0)
NEWTF(RESULT,DFN,EDIPI) ;
"RTN","VAFCTFU2",175,0)
 ; for MPIC_2019
"RTN","VAFCTFU2",176,0)
 ; called from RPC: VAFC NEW NC TREATING FACILITY
"RTN","VAFCTFU2",177,0)
 ; Input:
"RTN","VAFCTFU2",178,0)
 ;   DFN: Vista Patient Identifier will be the PATIENT file (#2) IEN (aka DFN)
"RTN","VAFCTFU2",179,0)
 ;        example of DFN="7168937"
"RTN","VAFCTFU2",180,0)
 ;
"RTN","VAFCTFU2",181,0)
 ;   EDIPI: The DOD Identifier will be EDIPI data with the
"RTN","VAFCTFU2",182,0)
 ;          following format:
"RTN","VAFCTFU2",183,0)
 ;          Id^IdType^AssigningAuthority^AssigningFacility
"RTN","VAFCTFU2",184,0)
 ;          example:  852043888^NI^USDOD^200DOD
"RTN","VAFCTFU2",185,0)
 ;
"RTN","VAFCTFU2",186,0)
 ; Return:
"RTN","VAFCTFU2",187,0)
 ; This will return a list of treating facilities in the following.
"RTN","VAFCTFU2",188,0)
 ;
"RTN","VAFCTFU2",189,0)
 ;   format:
"RTN","VAFCTFU2",190,0)
 ;   Id^IdType^AssigningAuthority^AssigningFacility^IdStatus[^NEW]
"RTN","VAFCTFU2",191,0)
 ;
"RTN","VAFCTFU2",192,0)
 ;   Examples:
"RTN","VAFCTFU2",193,0)
 ;   RESULT(1)="7168937^PI^USVHA^500^A"
"RTN","VAFCTFU2",194,0)
 ;   RESULT(2)="85204388^NI^USDOD^200DOD^A^NEW"
"RTN","VAFCTFU2",195,0)
 ;     Note: If there is data in the 6th piece of the RESULT(<number>),
"RTN","VAFCTFU2",196,0)
 ;       with data value as "NEW", then it means that the entry was
"RTN","VAFCTFU2",197,0)
 ;       newly created in the TREATING FACILITY LIST (#391.91) file
"RTN","VAFCTFU2",198,0)
 ;       by this RPC call.
"RTN","VAFCTFU2",199,0)
 ;
"RTN","VAFCTFU2",200,0)
 N X,TYPE,SITE,ID,ASSIGN,PTDFN,LP,CTR,NCTFIEN,ERROR,II
"RTN","VAFCTFU2",201,0)
 S X="MPIF001" X ^%ZOSF("TEST") I '$T S RESULT(1)="-1^MPI Not Installed" Q
"RTN","VAFCTFU2",202,0)
 ; clear "return" variable
"RTN","VAFCTFU2",203,0)
 K RESULT
"RTN","VAFCTFU2",204,0)
 ; input parameters
"RTN","VAFCTFU2",205,0)
 S PTDFN=$G(DFN)
"RTN","VAFCTFU2",206,0)
 I 'PTDFN S RESULT(1)="-1^Invalid DFN:"""_PTDFN_"""" Q
"RTN","VAFCTFU2",207,0)
 ; check the field #.01 data in patient entry
"RTN","VAFCTFU2",208,0)
 I $P($G(^DPT(PTDFN,0)),"^")']"" D  Q
"RTN","VAFCTFU2",209,0)
 . S RESULT(1)="-1^No patient in database for the DFN:"_PTDFN
"RTN","VAFCTFU2",210,0)
 ;
"RTN","VAFCTFU2",211,0)
 S ID=$P(EDIPI,"^"),TYPE=$P(EDIPI,"^",2),ASSIGN=$P(EDIPI,"^",3)
"RTN","VAFCTFU2",212,0)
 S SITE=$P(EDIPI,"^",4)
"RTN","VAFCTFU2",213,0)
 ;
"RTN","VAFCTFU2",214,0)
 I ID']"" S RESULT(1)="-1^Id is not defined." Q
"RTN","VAFCTFU2",215,0)
 I TYPE'="NI" S RESULT(1)="-1^Invalid Id Type." Q
"RTN","VAFCTFU2",216,0)
 I ASSIGN'="USDOD" S RESULT(1)="-1^Invalid Assigning Authority." Q
"RTN","VAFCTFU2",217,0)
 I SITE'="200DOD" S RESULT(1)="-1^Invalid Assigning Facility." Q
"RTN","VAFCTFU2",218,0)
 S SITEIEN=$O(^DIC(4,"D","200DOD",0))
"RTN","VAFCTFU2",219,0)
 I 'SITEIEN S RESULT(1)="-1^Assigning Facility is not defined in database." Q
"RTN","VAFCTFU2",220,0)
 ;
"RTN","VAFCTFU2",221,0)
 ; get ien of file #391.91
"RTN","VAFCTFU2",222,0)
 S NCTFIEN=$O(^DGCN(391.91,"APAT",PTDFN,SITEIEN,0))
"RTN","VAFCTFU2",223,0)
 ;
"RTN","VAFCTFU2",224,0)
 ; Assigning Facility as "200DOD" of the patient is already existed
"RTN","VAFCTFU2",225,0)
 ; in file #391.91
"RTN","VAFCTFU2",226,0)
 S CTR=0
"RTN","VAFCTFU2",227,0)
 I NCTFIEN D  Q
"RTN","VAFCTFU2",228,0)
 . N TFIEN
"RTN","VAFCTFU2",229,0)
 . F LP=0:0 S LP=$O(^DGCN(391.91,"APAT",PTDFN,LP)) Q:'LP  S TFIEN=$O(^(LP,0)) D
"RTN","VAFCTFU2",230,0)
 .. Q:'TFIEN
"RTN","VAFCTFU2",231,0)
 .. ; retrieve entry in file #391.91
"RTN","VAFCTFU2",232,0)
 .. D SET(TFIEN,"RESULT",.CTR)
"RTN","VAFCTFU2",233,0)
 ;
"RTN","VAFCTFU2",234,0)
 ; add new entry to file #391.91
"RTN","VAFCTFU2",235,0)
 D FILENEW^VAFCTFU(PTDFN,SITEIEN,"","","",.ERROR,"",ID,"A")
"RTN","VAFCTFU2",236,0)
 I $D(ERROR(SITEIEN)) D  Q
"RTN","VAFCTFU2",237,0)
 . S RESULT(1)="-1^"_$G(ERROR(SITEIEN))
"RTN","VAFCTFU2",238,0)
 ;
"RTN","VAFCTFU2",239,0)
 ; for Cache client/server model in case that there is a delay for
"RTN","VAFCTFU2",240,0)
 ; retrieving the new created entry.
"RTN","VAFCTFU2",241,0)
 F II=1:1:5 Q:$O(^DGCN(391.91,"APAT",PTDFN,SITEIEN,0))  H II
"RTN","VAFCTFU2",242,0)
 ; retrieving the results
"RTN","VAFCTFU2",243,0)
 F LP=0:0 S LP=$O(^DGCN(391.91,"APAT",PTDFN,LP)) Q:'LP  S TFIEN=$O(^(LP,0)) D
"RTN","VAFCTFU2",244,0)
 . Q:'TFIEN
"RTN","VAFCTFU2",245,0)
 . ; retrieve entry in file #391.91
"RTN","VAFCTFU2",246,0)
 . D SET(TFIEN,"RESULT",.CTR)
"RTN","VAFCTFU2",247,0)
 . I $P($G(RESULT(CTR)),"^",3)="USDOD" S RESULT(CTR)=RESULT(CTR)_"^NEW"
"RTN","VAFCTFU2",248,0)
 Q
"RTN","VAFCTFU2",249,0)
 ;
"SEC","^DIC",391.919,391.919,0,"AUDIT")
@
"SEC","^DIC",391.919,391.919,0,"DD")
@
"SEC","^DIC",391.919,391.919,0,"DEL")
@
"SEC","^DIC",391.919,391.919,0,"LAYGO")
@
"SEC","^DIC",391.919,391.919,0,"RD")
@
"SEC","^DIC",391.919,391.919,0,"WR")
@
"VER")
8.0^22.2
"^DD",391.919,391.919,0)
FIELD^^.02^2
"^DD",391.919,391.919,0,"DT")
3190328
"^DD",391.919,391.919,0,"IX","B",391.919,.01)

"^DD",391.919,391.919,0,"NM","EHRM MIGRATED FACILITIES")

"^DD",391.919,391.919,.01,0)
INSTITUTION^RP4'X^DIC(4,^0;1^S:$D(X) DINUM=X Q
"^DD",391.919,391.919,.01,1,0)
^.1
"^DD",391.919,391.919,.01,1,1,0)
391.919^B
"^DD",391.919,391.919,.01,1,1,1)
S ^DGCN(391.919,"B",$E(X,1,30),DA)=""
"^DD",391.919,391.919,.01,1,1,2)
K ^DGCN(391.919,"B",$E(X,1,30),DA)
"^DD",391.919,391.919,.01,3)
Select the appropriate INSTITUTION from the list that identifies the facility that has implemented CERNER.
"^DD",391.919,391.919,.01,21,0)
^.001^3^3^3190328^^
"^DD",391.919,391.919,.01,21,1,0)
INSTITUTION identifies the facility from the INSTITUTION (#4) file that 
"^DD",391.919,391.919,.01,21,2,0)
has implemented the CERNER application in support of the Electronic 
"^DD",391.919,391.919,.01,21,3,0)
Health Record Modernization (EHRM).
"^DD",391.919,391.919,.01,"DT")
3190329
"^DD",391.919,391.919,.02,0)
CERNER ENABLED?^S^1:YES;0:NO;^0;2^Q
"^DD",391.919,391.919,.02,3)
Has CERNER been implemented at this facility?
"^DD",391.919,391.919,.02,21,0)
^^2^2^3190329^
"^DD",391.919,391.919,.02,21,1,0)
The CERNER ENABLED? field indicates whether the CERNER application has 
"^DD",391.919,391.919,.02,21,2,0)
been installed/implemented at the site or not.
"^DD",391.919,391.919,.02,"DT")
3190329
"^DIC",391.919,391.919,0)
EHRM MIGRATED FACILITIES^391.919
"^DIC",391.919,391.919,0,"GL")
^DGCN(391.919,
"^DIC",391.919,391.919,"%D",0)
^^7^7^3190329^
"^DIC",391.919,391.919,"%D",1,0)
This file contains a list of all of the facilities that have migrated 
"^DIC",391.919,391.919,"%D",2,0)
to/implemented the CERNER application in support of the Electronic Health 
"^DIC",391.919,391.919,"%D",3,0)
Record Modernization (EHRM).
"^DIC",391.919,391.919,"%D",4,0)
 
"^DIC",391.919,391.919,"%D",5,0)
NOTE: Entries will be added/updated to this file remotely and distributed 
"^DIC",391.919,391.919,"%D",6,0)
      out to all sites through a Remote Procedure Call (RPC) executed on 
"^DIC",391.919,391.919,"%D",7,0)
      the Master Patient Index.
"^DIC",391.919,"B","EHRM MIGRATED FACILITIES",391.919)

"BLD",3405,6)
^861
**END**
**END**

