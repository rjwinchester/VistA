Released DG*5.3*984 SEQ #862
Extracted from mail message
**KIDS**:DG*5.3*984^

**INSTALL NAME**
DG*5.3*984
"BLD",11531,0)
DG*5.3*984^REGISTRATION^0^3190718^y
"BLD",11531,1,0)
^^3^3^3190715^
"BLD",11531,1,1,0)
Patch DG*5.3*984 modifies routine VAFHLZPD to use a different Application 
"BLD",11531,1,2,0)
Program Interface (API) call when retrieving the Homeless Indicator due 
"BLD",11531,1,3,0)
to the decommissioning of the Social Work (SOWK) package.
"BLD",11531,4,0)
^9.64PA^^
"BLD",11531,6.3)
6
"BLD",11531,"KRN",0)
^9.67PA^1.5^24
"BLD",11531,"KRN",.4,0)
.4
"BLD",11531,"KRN",.401,0)
.401
"BLD",11531,"KRN",.402,0)
.402
"BLD",11531,"KRN",.403,0)
.403
"BLD",11531,"KRN",.5,0)
.5
"BLD",11531,"KRN",.84,0)
.84
"BLD",11531,"KRN",1.5,0)
1.5
"BLD",11531,"KRN",1.6,0)
1.6
"BLD",11531,"KRN",1.61,0)
1.61
"BLD",11531,"KRN",1.62,0)
1.62
"BLD",11531,"KRN",3.6,0)
3.6
"BLD",11531,"KRN",3.8,0)
3.8
"BLD",11531,"KRN",9.2,0)
9.2
"BLD",11531,"KRN",9.8,0)
9.8
"BLD",11531,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",11531,"KRN",9.8,"NM",1,0)
VAFHLZPD^^0^B58005848
"BLD",11531,"KRN",9.8,"NM","B","VAFHLZPD",1)

"BLD",11531,"KRN",19,0)
19
"BLD",11531,"KRN",19.1,0)
19.1
"BLD",11531,"KRN",101,0)
101
"BLD",11531,"KRN",409.61,0)
409.61
"BLD",11531,"KRN",771,0)
771
"BLD",11531,"KRN",779.2,0)
779.2
"BLD",11531,"KRN",870,0)
870
"BLD",11531,"KRN",8989.51,0)
8989.51
"BLD",11531,"KRN",8989.52,0)
8989.52
"BLD",11531,"KRN",8994,0)
8994
"BLD",11531,"KRN","B",.4,.4)

"BLD",11531,"KRN","B",.401,.401)

"BLD",11531,"KRN","B",.402,.402)

"BLD",11531,"KRN","B",.403,.403)

"BLD",11531,"KRN","B",.5,.5)

"BLD",11531,"KRN","B",.84,.84)

"BLD",11531,"KRN","B",1.5,1.5)

"BLD",11531,"KRN","B",1.6,1.6)

"BLD",11531,"KRN","B",1.61,1.61)

"BLD",11531,"KRN","B",1.62,1.62)

"BLD",11531,"KRN","B",3.6,3.6)

"BLD",11531,"KRN","B",3.8,3.8)

"BLD",11531,"KRN","B",9.2,9.2)

"BLD",11531,"KRN","B",9.8,9.8)

"BLD",11531,"KRN","B",19,19)

"BLD",11531,"KRN","B",19.1,19.1)

"BLD",11531,"KRN","B",101,101)

"BLD",11531,"KRN","B",409.61,409.61)

"BLD",11531,"KRN","B",771,771)

"BLD",11531,"KRN","B",779.2,779.2)

"BLD",11531,"KRN","B",870,870)

"BLD",11531,"KRN","B",8989.51,8989.51)

"BLD",11531,"KRN","B",8989.52,8989.52)

"BLD",11531,"KRN","B",8994,8994)

"BLD",11531,"QUES",0)
^9.62^^
"BLD",11531,"REQB",0)
^9.611^1^1
"BLD",11531,"REQB",1,0)
DG*5.3*688^1
"BLD",11531,"REQB","B","DG*5.3*688",1)

"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
984^3190718
"PKG",5,22,1,"PAH",1,1,0)
^^3^3^3190718
"PKG",5,22,1,"PAH",1,1,1,0)
Patch DG*5.3*984 modifies routine VAFHLZPD to use a different Application 
"PKG",5,22,1,"PAH",1,1,2,0)
Program Interface (API) call when retrieving the Homeless Indicator due 
"PKG",5,22,1,"PAH",1,1,3,0)
to the decommissioning of the Social Work (SOWK) package.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","VAFHLZPD")
0^1^B58005848^B57162988
"RTN","VAFHLZPD",1,0)
VAFHLZPD ;ALB/KCL/PHH,TDM - Create generic HL7 ZPD segment ; 8/15/08 11:42am
"RTN","VAFHLZPD",2,0)
 ;;5.3;Registration;**94,122,160,220,247,545,564,568,677,653,688,984**;Aug 13, 1993;Build 6
"RTN","VAFHLZPD",3,0)
 ;
"RTN","VAFHLZPD",4,0)
 ;
"RTN","VAFHLZPD",5,0)
EN(DFN,VAFSTR) ; This generic extrinsic function was designed to return
"RTN","VAFHLZPD",6,0)
 ;  sequences 1 throught 21 of the HL7 ZPD segment.  This segment
"RTN","VAFHLZPD",7,0)
 ;  contains VA-specific patient information that is not contained in
"RTN","VAFHLZPD",8,0)
 ;  the HL7 PID segment.  This call does not accomodate a segment
"RTN","VAFHLZPD",9,0)
 ;  length greater than 245 and has been superceeded by EN1^VAFHLZPD.
"RTN","VAFHLZPD",10,0)
 ;  This line tag has been left for backwards compatability.
"RTN","VAFHLZPD",11,0)
 ;
"RTN","VAFHLZPD",12,0)
 ;Input - DFN as internal entry number of the PATIENT file
"RTN","VAFHLZPD",13,0)
 ;      - VAFSTR as the string of fields requested seperated by commas
"RTN","VAFHLZPD",14,0)
 ;        (Defaults to all fields)
"RTN","VAFHLZPD",15,0)
 ;
"RTN","VAFHLZPD",16,0)
 ;     *****Also assumes all HL7 variables returned from*****
"RTN","VAFHLZPD",17,0)
 ;          INIT^HLTRANS are defined.
"RTN","VAFHLZPD",18,0)
 ;
"RTN","VAFHLZPD",19,0)
 ;Output - String of data forming the ZPD segment.
"RTN","VAFHLZPD",20,0)
 ;
"RTN","VAFHLZPD",21,0)
 ;
"RTN","VAFHLZPD",22,0)
 N VAFY,VAFZPD,REMARKS
"RTN","VAFHLZPD",23,0)
 S VAFY=$$EN1($G(DFN),$G(VAFSTR))
"RTN","VAFHLZPD",24,0)
 ;Segment less than 245 characters
"RTN","VAFHLZPD",25,0)
 I ('$D(VAFZPD(1))) D
"RTN","VAFHLZPD",26,0)
 . ;Remove sequences 22 and higher
"RTN","VAFHLZPD",27,0)
 . S VAFY=$P(VAFY,HLFS,1,22)
"RTN","VAFHLZPD",28,0)
 ;Segment greater than 245 characters
"RTN","VAFHLZPD",29,0)
 I ($D(VAFZPD(1))) D
"RTN","VAFHLZPD",30,0)
 . ;Strip out REMARKS (seq 2)
"RTN","VAFHLZPD",31,0)
 . S REMARKS=$P(VAFY,HLFS,3)
"RTN","VAFHLZPD",32,0)
 . S $P(VAFY,HLFS,3)=""
"RTN","VAFHLZPD",33,0)
 . ;Append up to sequence 21 (PRIMARY CARE TEAM)
"RTN","VAFHLZPD",34,0)
 . S VAFY=VAFY_$P(VAFZPD(1),HLFS,1,((21-$L(VAFY,HLFS))+2))
"RTN","VAFHLZPD",35,0)
 . ;Place REMARKS back into segment, truncating if needed
"RTN","VAFHLZPD",36,0)
 . S $P(VAFY,HLFS,3)=$E(REMARKS,1,(245-$L(VAFY)))
"RTN","VAFHLZPD",37,0)
 ;Done
"RTN","VAFHLZPD",38,0)
 Q VAFY
"RTN","VAFHLZPD",39,0)
 ;
"RTN","VAFHLZPD",40,0)
EN1(DFN,VAFSTR) ; This generic extrinsic function was designed to return the
"RTN","VAFHLZPD",41,0)
 ;  HL7 ZPD segment.  This segment contains VA-specific patient
"RTN","VAFHLZPD",42,0)
 ;  information that is not contained in the HL7 PID segment.  This
"RTN","VAFHLZPD",43,0)
 ;  call superceeds EN^VAFHLZPD because it accomodates a segment
"RTN","VAFHLZPD",44,0)
 ;  length greater than 245.
"RTN","VAFHLZPD",45,0)
 ; 
"RTN","VAFHLZPD",46,0)
 ;
"RTN","VAFHLZPD",47,0)
 ;Input  : DFN - Pointer to PATIENT file (#2)
"RTN","VAFHLZPD",48,0)
 ;         VAFSTR - List of data elements to retrieve seperated
"RTN","VAFHLZPD",49,0)
 ;                  by commas (ex: 1,2,3)
"RTN","VAFHLZPD",50,0)
 ;                - Defaults to all data elements
"RTN","VAFHLZPD",51,0)
 ;         Existance of HL7 encoding variables is assumed
"RTN","VAFHLZPD",52,0)
 ;         (HLFS, HLENC, HLQ)
"RTN","VAFHLZPD",53,0)
 ;Output : ZPD segment
"RTN","VAFHLZPD",54,0)
 ;       : If the ZPD segment becomes longer than 245 characters,
"RTN","VAFHLZPD",55,0)
 ;         remaining fields will be placed in VAFZPD(1)
"RTN","VAFHLZPD",56,0)
 ;Notes  : Sequence 1 (Set ID) will always have a value of '1'
"RTN","VAFHLZPD",57,0)
 ;       : A ZPD segment with sequence one set to '1' will be returned
"RTN","VAFHLZPD",58,0)
 ;         if DFN is not valid
"RTN","VAFHLZPD",59,0)
 ;       : Variable VAFZPD is initialized on entry
"RTN","VAFHLZPD",60,0)
 ;
"RTN","VAFHLZPD",61,0)
 ;Declare variables
"RTN","VAFHLZPD",62,0)
 N VAFHLZPD,VAFY,SEQ,SPILL,SPILLON,SPOT,LASTSEQ,MAXLEN
"RTN","VAFHLZPD",63,0)
 K VAFZPD
"RTN","VAFHLZPD",64,0)
 S MAXLEN=245
"RTN","VAFHLZPD",65,0)
 ;Get data
"RTN","VAFHLZPD",66,0)
 D GETDATA($G(DFN),$G(VAFSTR),"VAFHLZPD")
"RTN","VAFHLZPD",67,0)
 ;Build segment
"RTN","VAFHLZPD",68,0)
 S VAFY="VAFHLZPD"
"RTN","VAFHLZPD",69,0)
 S SPILL=0
"RTN","VAFHLZPD",70,0)
 S SPILLON=0
"RTN","VAFHLZPD",71,0)
 S @VAFY="ZPD"
"RTN","VAFHLZPD",72,0)
 S LASTSEQ=+$O(VAFHLZPD(""),-1)
"RTN","VAFHLZPD",73,0)
 F SEQ=1:1:LASTSEQ D
"RTN","VAFHLZPD",74,0)
 . ;Make sure maximum length won't be exceeded
"RTN","VAFHLZPD",75,0)
 . I ($L(@VAFY)+$L($G(VAFHLZPD(SEQ)))+1)>MAXLEN D
"RTN","VAFHLZPD",76,0)
 . . ;Max length exceeded - start putting data on next node
"RTN","VAFHLZPD",77,0)
 . . S SPILL=SPILL+1
"RTN","VAFHLZPD",78,0)
 . . S SPILLON=SEQ-1
"RTN","VAFHLZPD",79,0)
 . . S VAFY=$NA(VAFZPD(SPILL))
"RTN","VAFHLZPD",80,0)
 . ;Add to string
"RTN","VAFHLZPD",81,0)
 . S SPOT=(SEQ+1)-SPILLON
"RTN","VAFHLZPD",82,0)
 . S $P(@VAFY,HLFS,SPOT)=$G(VAFHLZPD(SEQ))
"RTN","VAFHLZPD",83,0)
 ;Return segment
"RTN","VAFHLZPD",84,0)
 Q VAFHLZPD
"RTN","VAFHLZPD",85,0)
 ;
"RTN","VAFHLZPD",86,0)
GETDATA(DFN,VAFSTR,ARRAY) ;Get info needed to build segment
"RTN","VAFHLZPD",87,0)
 ;Input  : DFN - Pointer to PATIENT file (#2)
"RTN","VAFHLZPD",88,0)
 ;         VAFSTR - List of data elements to retrieve seperated
"RTN","VAFHLZPD",89,0)
 ;                  by commas (ex: 1,2,3)
"RTN","VAFHLZPD",90,0)
 ;                - Defaults to all data elements
"RTN","VAFHLZPD",91,0)
 ;         ARRAY - Array to return data in (full global reference)
"RTN","VAFHLZPD",92,0)
 ;                 Defaults to ^TMP($J,"VAFHLZPD")
"RTN","VAFHLZPD",93,0)
 ;         Existance of HL7 encoding variables is assumed
"RTN","VAFHLZPD",94,0)
 ;         (HLFS, HLENC, HLQ)
"RTN","VAFHLZPD",95,0)
 ;Output : Nothing
"RTN","VAFHLZPD",96,0)
 ;           ARRAY(SeqNum) = Value
"RTN","VAFHLZPD",97,0)
 ;Notes  : ARRAY is initialized (KILLed) on entry
"RTN","VAFHLZPD",98,0)
 ;       : Sequence 1 (Set ID) will always have a value of '1'
"RTN","VAFHLZPD",99,0)
 ;
"RTN","VAFHLZPD",100,0)
 ;Check input
"RTN","VAFHLZPD",101,0)
 S ARRAY=$G(ARRAY)
"RTN","VAFHLZPD",102,0)
 S:(ARRAY="") ARRAY=$NA(^TMP($J,"VAFHLZPD"))
"RTN","VAFHLZPD",103,0)
 K @ARRAY
"RTN","VAFHLZPD",104,0)
 ;Sequence 1 - Set ID
"RTN","VAFHLZPD",105,0)
 ;  value is always '1'
"RTN","VAFHLZPD",106,0)
 S @ARRAY@(1)=1
"RTN","VAFHLZPD",107,0)
 S DFN=+$G(DFN)
"RTN","VAFHLZPD",108,0)
 S VAFSTR=$G(VAFSTR)
"RTN","VAFHLZPD",109,0)
 S:(VAFSTR="") VAFSTR=$$COMMANUM(1,40)
"RTN","VAFHLZPD",110,0)
 S VAFSTR=","_VAFSTR_","
"RTN","VAFHLZPD",111,0)
 ;Declare variables
"RTN","VAFHLZPD",112,0)
 N VAFNODE,VAPD,X1,X
"RTN","VAFHLZPD",113,0)
 ;Get zero node
"RTN","VAFHLZPD",114,0)
 S VAFNODE=$G(^DPT(DFN,0))
"RTN","VAFHLZPD",115,0)
 ;Get other patient data from VADPT
"RTN","VAFHLZPD",116,0)
 D OPD^VADPT
"RTN","VAFHLZPD",117,0)
 ;Sequence 2 - Remarks (truncate to 60 characters)
"RTN","VAFHLZPD",118,0)
 I VAFSTR[",2," S X=$P(VAFNODE,"^",10),@ARRAY@(2)=$S(X="":HLQ,1:$E(X,1,60))
"RTN","VAFHLZPD",119,0)
 ;Sequence 3 - Place of birth (city)
"RTN","VAFHLZPD",120,0)
 I VAFSTR[",3," S @ARRAY@(3)=$S(VAPD(1)]"":VAPD(1),1:HLQ)
"RTN","VAFHLZPD",121,0)
 ;Sequence 4 - Place of birth (State abbrv.)
"RTN","VAFHLZPD",122,0)
 I VAFSTR[",4," S X1=$P($G(^DIC(5,$P(+VAPD(2),"^",1),0)),"^",2),@ARRAY@(4)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",123,0)
 ;Sequence 5 - Current means test status
"RTN","VAFHLZPD",124,0)
 I VAFSTR[",5," S X=$P(VAFNODE,"^",14),X1=$P($G(^DG(408.32,+X,0)),"^",2),@ARRAY@(5)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",125,0)
 ;Sequence 6 - Fathers name
"RTN","VAFHLZPD",126,0)
 I VAFSTR[",6," S @ARRAY@(6)=$S(VAPD(3)]"":VAPD(3),1:HLQ)
"RTN","VAFHLZPD",127,0)
 ;Sequence 7 - Mothers name
"RTN","VAFHLZPD",128,0)
 I VAFSTR[",7," S @ARRAY@(7)=$S(VAPD(4)]"":VAPD(4),1:HLQ)
"RTN","VAFHLZPD",129,0)
 ;Sequence 8 - Rated incompetent
"RTN","VAFHLZPD",130,0)
 I VAFSTR[",8," S X1=$$YN^VAFHLFNC($P($G(^DPT(DFN,.29)),"^",12)),@ARRAY@(8)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",131,0)
 ;Sequence 9 - Date of Death
"RTN","VAFHLZPD",132,0)
 I VAFSTR[",9," S X=$P($G(^DPT(DFN,.35)),"^",1),X1=$$HLDATE^HLFNC(X),@ARRAY@(9)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",133,0)
 ;Sequence 10 - Collateral sponser name
"RTN","VAFHLZPD",134,0)
 I VAFSTR[10 D
"RTN","VAFHLZPD",135,0)
 . S X=$P($G(^DPT(DFN,.36)),"^",11)
"RTN","VAFHLZPD",136,0)
 . S X1=$P($G(^DPT(+X,0)),"^",1)
"RTN","VAFHLZPD",137,0)
 . S @ARRAY@(10)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",138,0)
 ;Sequence 11 - Active Health Insurance?
"RTN","VAFHLZPD",139,0)
 I VAFSTR[11 S X=$$INS^VAFHLFNC(DFN),X1=$$YN^VAFHLFNC(X),@ARRAY@(11)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",140,0)
 ;Sequences 12 & 13
"RTN","VAFHLZPD",141,0)
 I VAFSTR[12!(VAFSTR[13) D
"RTN","VAFHLZPD",142,0)
 . S X=$G(^DPT(DFN,.38))
"RTN","VAFHLZPD",143,0)
 . ;Sequence 12 - Eligible for Medicaid
"RTN","VAFHLZPD",144,0)
 . I VAFSTR[12 S X1=$$YN^VAFHLFNC($P(X,"^",1)),@ARRAY@(12)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",145,0)
 . ;Sequence 13 - Date Medicaid last asked
"RTN","VAFHLZPD",146,0)
 . I VAFSTR[13 S X1=$$HLDATE^HLFNC($P(X,"^",2)),@ARRAY@(13)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",147,0)
 ;Sequence 14 - Race
"RTN","VAFHLZPD",148,0)
 I VAFSTR[14 S X=$P(VAFNODE,"^",6) S X1=$P($G(^DIC(10,+X,0)),"^",2),@ARRAY@(14)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",149,0)
 ;Sequence 15 - Religious Preference
"RTN","VAFHLZPD",150,0)
 I VAFSTR[15 S X=$P(VAFNODE,"^",8) S X1=$P($G(^DIC(13,+X,0)),"^",4),@ARRAY@(15)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",151,0)
 ;Sequence 16 - Homeless Indicator
"RTN","VAFHLZPD",152,0)
 ;I VAFSTR[16 S X=$T(HOMELESS^SOWKHIRM) S @ARRAY@(16)=$S(X]"":$$HOMELESS^SOWKHIRM(DFN),1:HLQ)   ;Social Work being decommissioned, API call will no longer be active
"RTN","VAFHLZPD",153,0)
 I VAFSTR[16 S @ARRAY@(16)=$S($$BADADR^DGUTL3(DFN)=2:1,1:HLQ)    ;DG 984 uses different API call for Homeless Indicator
"RTN","VAFHLZPD",154,0)
 ;Sequences 17 & 20
"RTN","VAFHLZPD",155,0)
 I ((VAFSTR[17)!(VAFSTR[20)) D
"RTN","VAFHLZPD",156,0)
 . ;POW Status & Location
"RTN","VAFHLZPD",157,0)
 . N VAF52,POW,LOC
"RTN","VAFHLZPD",158,0)
 . S VAF52=$G(^DPT(DFN,.52))
"RTN","VAFHLZPD",159,0)
 . ;POW Status Indicated?
"RTN","VAFHLZPD",160,0)
 . S POW=$P(VAF52,"^",5)
"RTN","VAFHLZPD",161,0)
 . S:(POW="") POW=HLQ
"RTN","VAFHLZPD",162,0)
 . ;POW Confinement Location (translates pointer to coded value)
"RTN","VAFHLZPD",163,0)
 . S LOC=$P(VAF52,"^",6)
"RTN","VAFHLZPD",164,0)
 . S:(LOC="") LOC=HLQ
"RTN","VAFHLZPD",165,0)
 . I (LOC'=HLQ) S LOC=$S(LOC>0&(LOC<7):LOC+3,LOC>6&(LOC<9):$C(LOC+58),1:"")
"RTN","VAFHLZPD",166,0)
 . ;Add to output array
"RTN","VAFHLZPD",167,0)
 . ;Sequence 17 - POW Status
"RTN","VAFHLZPD",168,0)
 . S:(VAFSTR[17) @ARRAY@(17)=POW
"RTN","VAFHLZPD",169,0)
 . ;Sequence 20 - POW Confinement Location
"RTN","VAFHLZPD",170,0)
 . S:(VAFSTR[20) @ARRAY@(20)=LOC
"RTN","VAFHLZPD",171,0)
 ;Sequence 18 - Insurance Type
"RTN","VAFHLZPD",172,0)
 I VAFSTR[18 S X=+$$INSTYP^IBCNS1(DFN),@ARRAY@(18)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZPD",173,0)
 ;Sequence 19 - RX Copay Exemption Status
"RTN","VAFHLZPD",174,0)
 I VAFSTR[19 S X=+$$RXST^IBARXEU(DFN),@ARRAY@(19)=$S(X'<0:X,1:HLQ)
"RTN","VAFHLZPD",175,0)
 ;Sequence 21 - Primary Care Team
"RTN","VAFHLZPD",176,0)
 I (VAFSTR[21) D
"RTN","VAFHLZPD",177,0)
 . ;Get Primary Care Team  (as defined in PCMM)
"RTN","VAFHLZPD",178,0)
 . S X=$$PCTEAM^DGSDUTL(DFN)
"RTN","VAFHLZPD",179,0)
 . S X=$P(X,"^",2)
"RTN","VAFHLZPD",180,0)
 . S:(X="") X=HLQ
"RTN","VAFHLZPD",181,0)
 . ;Put into output array
"RTN","VAFHLZPD",182,0)
 . S @ARRAY@(21)=X
"RTN","VAFHLZPD",183,0)
 ; 
"RTN","VAFHLZPD",184,0)
 ; Sequences 22 thru 30 added by DG*5.3*264 (Smart Card)
"RTN","VAFHLZPD",185,0)
 ;
"RTN","VAFHLZPD",186,0)
 ; Sequences 22 & 23
"RTN","VAFHLZPD",187,0)
 I VAFSTR[22!(VAFSTR[23) D
"RTN","VAFHLZPD",188,0)
 . ; GI Insurance
"RTN","VAFHLZPD",189,0)
 . S X=$G(^DPT(DFN,.362))
"RTN","VAFHLZPD",190,0)
 . I VAFSTR[22 S X1=$P(X,U,17),@ARRAY@(22)=$S(X1="U":"N",X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",191,0)
 . I VAFSTR[23 S X1=$P(X,U,6),@ARRAY@(23)=$S(X1:$E(X1,1,6),1:HLQ)
"RTN","VAFHLZPD",192,0)
 ; Sequences 24 through 27
"RTN","VAFHLZPD",193,0)
 I VAFSTR[24!(VAFSTR[25)!(VAFSTR[26)!(VAFSTR[27) D
"RTN","VAFHLZPD",194,0)
 . ; Most recent care dates & locations
"RTN","VAFHLZPD",195,0)
 . S X=$G(^DPT(DFN,1010.15))
"RTN","VAFHLZPD",196,0)
 . I VAFSTR[24 S X1=$$HLDATE^HLFNC($P(X,U)),@ARRAY@(24)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",197,0)
 . I VAFSTR[25 S X1=$P(X,U,2),X1=$P($G(^DIC(4,+X1,0)),U),@ARRAY@(25)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",198,0)
 . I VAFSTR[26 S X1=$$HLDATE^HLFNC($P(X,U,3)),@ARRAY@(26)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",199,0)
 . I VAFSTR[27 S X1=$P(X,U,4),X1=$P($G(^DIC(4,+X1,0)),U),@ARRAY@(27)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",200,0)
 ; Sequences 28 & 29
"RTN","VAFHLZPD",201,0)
 I VAFSTR[28!(VAFSTR[29) D
"RTN","VAFHLZPD",202,0)
 . ; dates ruled incompetent (civil and VA)
"RTN","VAFHLZPD",203,0)
 . S X=$G(^DPT(DFN,.29))
"RTN","VAFHLZPD",204,0)
 . I VAFSTR[28 S X1=$$HLDATE^HLFNC($P(X,U,2)),@ARRAY@(28)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",205,0)
 . I VAFSTR[29 S X1=$$HLDATE^HLFNC($P(X,U)),@ARRAY@(29)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",206,0)
 ; Sequence 30 - Spinal cord injury
"RTN","VAFHLZPD",207,0)
 I VAFSTR[30 S X=$P($G(^DPT(DFN,57)),U,4),@ARRAY@(30)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZPD",208,0)
 ; Sequence 31 - Source of Notification
"RTN","VAFHLZPD",209,0)
 I VAFSTR[9&(VAFSTR[31) S X=$P($G(^DPT(DFN,.35)),U,3),@ARRAY@(31)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZPD",210,0)
 ; Sequence 32 - Date/Time Last Updated
"RTN","VAFHLZPD",211,0)
 I VAFSTR[9&(VAFSTR[32) S X=$P($G(^DPT(DFN,.35)),U,4),X1=$$HLDATE^HLFNC(X),@ARRAY@(32)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",212,0)
 ; Sequence 33 - Filipino Veteran Proof
"RTN","VAFHLZPD",213,0)
 I VAFSTR[33 S X=$P($G(^DPT(DFN,.321)),U,14),@ARRAY@(33)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZPD",214,0)
 ; Sequence 34 - Pseudo SSN Reason - Veteran
"RTN","VAFHLZPD",215,0)
 I VAFSTR[34 S X=$P($G(^DPT(DFN,"SSN")),U),@ARRAY@(34)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZPD",216,0)
 ; Sequence 35 - Agency/Allied Country
"RTN","VAFHLZPD",217,0)
 I VAFSTR[35 S X=$P($G(^DPT(DFN,.3)),U,9),X1=$P($G(^DIC(35,+X,0)),U,2),@ARRAY@(35)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",218,0)
 ; Sequence 40 - Emergency Response Indicator
"RTN","VAFHLZPD",219,0)
 I VAFSTR[40 S X=$P($G(^DPT(DFN,.18)),U),@ARRAY@(40)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZPD",220,0)
 ;Done - cleanup & quit
"RTN","VAFHLZPD",221,0)
 D KVA^VADPT
"RTN","VAFHLZPD",222,0)
 Q
"RTN","VAFHLZPD",223,0)
 ;
"RTN","VAFHLZPD",224,0)
COMMANUM(FROM,TO) ;Build comma seperated list of numbers
"RTN","VAFHLZPD",225,0)
 ;Input  : FROM - Starting number (default = 1)
"RTN","VAFHLZPD",226,0)
 ;         TO - Ending number (default = FROM)
"RTN","VAFHLZPD",227,0)
 ;Output : Comma seperated list of numbers between FROM and TO
"RTN","VAFHLZPD",228,0)
 ;         (Ex: 1,2,3)
"RTN","VAFHLZPD",229,0)
 ;Notes  : Call assumes FROM <= TO
"RTN","VAFHLZPD",230,0)
 ;
"RTN","VAFHLZPD",231,0)
 S FROM=$G(FROM) S:(FROM="") FROM=1
"RTN","VAFHLZPD",232,0)
 S TO=$G(TO) S:(TO="") TO=FROM
"RTN","VAFHLZPD",233,0)
 N OUTPUT,X
"RTN","VAFHLZPD",234,0)
 S OUTPUT=FROM
"RTN","VAFHLZPD",235,0)
 F X=(FROM+1):1:TO S OUTPUT=(OUTPUT_","_X)
"RTN","VAFHLZPD",236,0)
 Q OUTPUT
"VER")
8.0^22.2
"BLD",11531,6)
^862
**END**
**END**

