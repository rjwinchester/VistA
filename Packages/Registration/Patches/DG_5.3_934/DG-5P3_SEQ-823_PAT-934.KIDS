Released DG*5.3*934 SEQ #823
Extracted from mail message
**KIDS**:DG*5.3*934^

**INSTALL NAME**
DG*5.3*934
"BLD",9906,0)
DG*5.3*934^REGISTRATION^0^3170213^y
"BLD",9906,4,0)
^9.64PA^^
"BLD",9906,6)
2^
"BLD",9906,6.3)
4
"BLD",9906,"ABPKG")
n
"BLD",9906,"KRN",0)
^9.67PA^779.2^20
"BLD",9906,"KRN",.4,0)
.4
"BLD",9906,"KRN",.4,"NM",0)
^9.68A^^
"BLD",9906,"KRN",.401,0)
.401
"BLD",9906,"KRN",.402,0)
.402
"BLD",9906,"KRN",.403,0)
.403
"BLD",9906,"KRN",.5,0)
.5
"BLD",9906,"KRN",.84,0)
.84
"BLD",9906,"KRN",3.6,0)
3.6
"BLD",9906,"KRN",3.8,0)
3.8
"BLD",9906,"KRN",9.2,0)
9.2
"BLD",9906,"KRN",9.8,0)
9.8
"BLD",9906,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",9906,"KRN",9.8,"NM",1,0)
DGENUPL2^^0^B81902835
"BLD",9906,"KRN",9.8,"NM","B","DGENUPL2",1)

"BLD",9906,"KRN",19,0)
19
"BLD",9906,"KRN",19.1,0)
19.1
"BLD",9906,"KRN",101,0)
101
"BLD",9906,"KRN",409.61,0)
409.61
"BLD",9906,"KRN",771,0)
771
"BLD",9906,"KRN",779.2,0)
779.2
"BLD",9906,"KRN",870,0)
870
"BLD",9906,"KRN",8989.51,0)
8989.51
"BLD",9906,"KRN",8989.52,0)
8989.52
"BLD",9906,"KRN",8994,0)
8994
"BLD",9906,"KRN","B",.4,.4)

"BLD",9906,"KRN","B",.401,.401)

"BLD",9906,"KRN","B",.402,.402)

"BLD",9906,"KRN","B",.403,.403)

"BLD",9906,"KRN","B",.5,.5)

"BLD",9906,"KRN","B",.84,.84)

"BLD",9906,"KRN","B",3.6,3.6)

"BLD",9906,"KRN","B",3.8,3.8)

"BLD",9906,"KRN","B",9.2,9.2)

"BLD",9906,"KRN","B",9.8,9.8)

"BLD",9906,"KRN","B",19,19)

"BLD",9906,"KRN","B",19.1,19.1)

"BLD",9906,"KRN","B",101,101)

"BLD",9906,"KRN","B",409.61,409.61)

"BLD",9906,"KRN","B",771,771)

"BLD",9906,"KRN","B",779.2,779.2)

"BLD",9906,"KRN","B",870,870)

"BLD",9906,"KRN","B",8989.51,8989.51)

"BLD",9906,"KRN","B",8989.52,8989.52)

"BLD",9906,"KRN","B",8994,8994)

"BLD",9906,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9906,"QUES",0)
^9.62^^
"BLD",9906,"REQB",0)
^9.611^1^1
"BLD",9906,"REQB",1,0)
DG*5.3*894^1
"BLD",9906,"REQB","B","DG*5.3*894",1)

"MBREQ")
0
"PKG",47,-1)
1^1
"PKG",47,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",47,20,0)
^9.402P^^
"PKG",47,22,0)
^9.49I^1^1
"PKG",47,22,1,0)
5.3^2930813^2960613
"PKG",47,22,1,"PAH",1,0)
934^3170213^101099
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","DGENUPL2")
0^1^B81902835^B82241171
"RTN","DGENUPL2",1,0)
DGENUPL2 ;ALB/CJM,RTK,TMK,ISA/KWP/RMM/CKN,EG,ERC,PWC,TDM,TEJ - PROCESS INCOMING (Z11 EVENT TYPE) HL7 MESSAGES ; 13 Feb 2017  1:07 PM
"RTN","DGENUPL2",2,0)
 ;;5.3;REGISTRATION;**147,222,232,310,314,367,397,677,631,675,672,673,716,653,688,838,842,894,934**;Aug 13,1993;Build 4
"RTN","DGENUPL2",3,0)
 ;
"RTN","DGENUPL2",4,0)
 ;**************************************************************
"RTN","DGENUPL2",5,0)
 ;The following procedures parse particular segment types.
"RTN","DGENUPL2",6,0)
 ;Input:SEG(),MSGID
"RTN","DGENUPL2",7,0)
 ;Output:DGPAT(),DGELG(),DGENR(),DGCDIS(),DGNTR(),DGOEIF(),ERROR
"RTN","DGENUPL2",8,0)
 ;**************************************************************
"RTN","DGENUPL2",9,0)
 ;
"RTN","DGENUPL2",10,0)
PID ;
"RTN","DGENUPL2",11,0)
 S DGPAT("SSN")=SEG(19)
"RTN","DGENUPL2",12,0)
 Q
"RTN","DGENUPL2",13,0)
 ;
"RTN","DGENUPL2",14,0)
ZPD ;
"RTN","DGENUPL2",15,0)
 D ZPD^DGENUPLA ;code removed due to size of DGENUPLA - DG*5.3*688
"RTN","DGENUPL2",16,0)
 Q
"RTN","DGENUPL2",17,0)
 ;
"RTN","DGENUPL2",18,0)
ZIE ;
"RTN","DGENUPL2",19,0)
 S DGPAT("INELDATE")=$$CONVERT^DGENUPL1(SEG(2),"DATE",.ERROR)
"RTN","DGENUPL2",20,0)
 I ERROR D  Q
"RTN","DGENUPL2",21,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZIE SEGMENT, SEQ 2",.ERRCOUNT)
"RTN","DGENUPL2",22,0)
 S DGPAT("INELREA")=$$CONVERT^DGENUPL1(SEG(3))
"RTN","DGENUPL2",23,0)
 S DGPAT("INELDEC")=$$CONVERT^DGENUPL1(SEG(4))
"RTN","DGENUPL2",24,0)
 Q
"RTN","DGENUPL2",25,0)
 ;
"RTN","DGENUPL2",26,0)
ZIO ;New segment - DG*5.3*653
"RTN","DGENUPL2",27,0)
 D ZIO^DGENUPLA  ;Code for ZIO has moved to DGENUPLA
"RTN","DGENUPL2",28,0)
 Q
"RTN","DGENUPL2",29,0)
 ;
"RTN","DGENUPL2",30,0)
ZEL(COUNT) ;
"RTN","DGENUPL2",31,0)
 D ZEL^DGENUPLA(COUNT)  ;code for ZEL segment has moved to DGENUPLA
"RTN","DGENUPL2",32,0)
 Q
"RTN","DGENUPL2",33,0)
 ;
"RTN","DGENUPL2",34,0)
ZEN ;
"RTN","DGENUPL2",35,0)
 N SUB
"RTN","DGENUPL2",36,0)
 S DGENR("DATE")=$$CONVERT^DGENUPL1(SEG(2),"DATE",.ERROR)
"RTN","DGENUPL2",37,0)
 I ERROR D  Q
"RTN","DGENUPL2",38,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEN SEGMENT, SEQ 2",.ERRCOUNT)
"RTN","DGENUPL2",39,0)
 S DGENR("SOURCE")=$$CONVERT^DGENUPL1(SEG(3))
"RTN","DGENUPL2",40,0)
 S DGENR("STATUS")=$$CONVERT^DGENUPL1(SEG(4))
"RTN","DGENUPL2",41,0)
 ;S ERROR=$$PEND(DFN,DGENR("STATUS"))  ;DG*5.3*934
"RTN","DGENUPL2",42,0)
 S ERROR=0  ;DG*5.3*934
"RTN","DGENUPL2",43,0)
 ;I ERROR D  Q  ;DG*5.3*934
"RTN","DGENUPL2",44,0)
 ;.D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"ENROLLMENT STATUS PENDING-ELIGIBILITY IS VERIFIED",.ERRCOUNT)
"RTN","DGENUPL2",45,0)
 S DGENR("REASON")=$$CONVERT^DGENUPL1(SEG(5))
"RTN","DGENUPL2",46,0)
 S DGENR("REMARKS")=$$CONVERT^DGENUPL1(SEG(6))
"RTN","DGENUPL2",47,0)
 S DGENR("FACREC")=$$CONVERT^DGENUPL1(SEG(7),"INSTITUTION",.ERROR)
"RTN","DGENUPL2",48,0)
 I ERROR D  Q
"RTN","DGENUPL2",49,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"FACILITY RECEIVED "_SEG(7)_" NOT FOUND IN THE INSTITUTION FILE",.ERRCOUNT)
"RTN","DGENUPL2",50,0)
 S DGPAT("PREFAC")=$$CONVERT^DGENUPL1(SEG(8),"INSTITUTION",.ERROR)
"RTN","DGENUPL2",51,0)
 I ERROR D  Q
"RTN","DGENUPL2",52,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"PREFERRED FACILITY "_SEG(8)_" NOT FOUND IN THE INSTITUTION FILE",.ERRCOUNT)
"RTN","DGENUPL2",53,0)
 ;
"RTN","DGENUPL2",54,0)
 S DGENR("PRIORITY")=$$CONVERT^DGENUPL1(SEG(9))
"RTN","DGENUPL2",55,0)
 S DGENR("EFFDATE")=$$CONVERT^DGENUPL1(SEG(10),"DATE",.ERROR)
"RTN","DGENUPL2",56,0)
 I ERROR D  Q
"RTN","DGENUPL2",57,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEN SEGMENT, SEQ 10",.ERRCOUNT)
"RTN","DGENUPL2",58,0)
 S DGENR("APP")=$$CONVERT^DGENUPL1(SEG(11),"DATE",.ERROR)
"RTN","DGENUPL2",59,0)
 I ERROR D  Q
"RTN","DGENUPL2",60,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEN SEGMENT, SEQ 11",.ERRCOUNT)
"RTN","DGENUPL2",61,0)
 ;
"RTN","DGENUPL2",62,0)
 ;!!!!!! take next line out when HEC begins transmitting application dt
"RTN","DGENUPL2",63,0)
 I DGENR("APP")=""!(DGENR("APP")="@") S DGENR("APP")=DGENR("DATE")
"RTN","DGENUPL2",64,0)
 I DGENR("APP")=""!(DGENR("APP")="@") S DGENR("APP")=DGENR("EFFDATE")
"RTN","DGENUPL2",65,0)
 ;
"RTN","DGENUPL2",66,0)
 S DGENR("END")=$$CONVERT^DGENUPL1(SEG(12),"DATE",.ERROR)
"RTN","DGENUPL2",67,0)
 I ERROR D  Q
"RTN","DGENUPL2",68,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEN SEGMENT, SEQ 12",.ERRCOUNT)
"RTN","DGENUPL2",69,0)
 ;Phase II Parse out Sub-Group (SRS 6[B.4)
"RTN","DGENUPL2",70,0)
 S DGENR("SUBGRP")=$$CONVERT^DGENUPL1(SEG(13))
"RTN","DGENUPL2",71,0)
 S DGPAT("PFSRC")=$$CONVERT^DGENUPL1(SEG(14)) N PFSRC S PFSRC=DGPAT("PFSRC")
"RTN","DGENUPL2",72,0)
 I PFSRC'="V"&(PFSRC'="E")&(PFSRC'="PA")&(PFSRC'="PI")&(PFSRC'="@")&(PFSRC'="") D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEN SEGMENT, SEQ 14",.ERRCOUNT) Q
"RTN","DGENUPL2",73,0)
 ;
"RTN","DGENUPL2",74,0)
 ;want to ignore double quotes sent for enrollment fields
"RTN","DGENUPL2",75,0)
 S SUB=""
"RTN","DGENUPL2",76,0)
 F  S SUB=$O(DGENR(SUB)) Q:SUB=""  I DGENR(SUB)="@"!(DGENR(SUB)="""""") S DGENR(SUB)=""
"RTN","DGENUPL2",77,0)
 ;
"RTN","DGENUPL2",78,0)
 Q
"RTN","DGENUPL2",79,0)
 ;
"RTN","DGENUPL2",80,0)
ZMT ;
"RTN","DGENUPL2",81,0)
 I SEG(1)>1 D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"ZMT SEGMENT, SEQ 1, SHOULD SPECIFY MEANS TEST",.ERRCOUNT) S ERROR=1 Q
"RTN","DGENUPL2",82,0)
 S DGELG("MTSTA")=$$CONVERT^DGENUPL1(SEG(3),"MT",.ERROR)
"RTN","DGENUPL2",83,0)
 I ERROR D  Q
"RTN","DGENUPL2",84,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZMT SEGMENT, SEQ 3",.ERRCOUNT)
"RTN","DGENUPL2",85,0)
 Q
"RTN","DGENUPL2",86,0)
 ;
"RTN","DGENUPL2",87,0)
ZCD ;
"RTN","DGENUPL2",88,0)
 ;Phase II for multiple ZCD's
"RTN","DGENUPL2",89,0)
 I SEG(1)>1 G SKIP
"RTN","DGENUPL2",90,0)
 S DGCDIS("BY")=$$CONVERT^DGENUPL1(SEG(3))
"RTN","DGENUPL2",91,0)
 S DGCDIS("DATE")=$$CONVERT^DGENUPL1(SEG(5),"DATE",.ERROR)
"RTN","DGENUPL2",92,0)
 I ERROR D  Q
"RTN","DGENUPL2",93,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZCD SEGMENT, SEQ 5",.ERRCOUNT)
"RTN","DGENUPL2",94,0)
 S DGCDIS("FACDET")=$$CONVERT^DGENUPL1(SEG(4),"INSTITUTION",.ERROR)
"RTN","DGENUPL2",95,0)
 I ERROR D  Q
"RTN","DGENUPL2",96,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"FACILITY "_SEG(4)_" MAKING CATASTROPHIC DISABILITY DETERMINATION NOT FOUND IN THE INSTITUTION FILE",.ERRCOUNT)
"RTN","DGENUPL2",97,0)
 S DGCDIS("REVDTE")=$$CONVERT^DGENUPL1(SEG(2),"DATE",.ERROR)
"RTN","DGENUPL2",98,0)
 I ERROR D  Q
"RTN","DGENUPL2",99,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZCD SEGMENT, SEQ 2",.ERRCOUNT)
"RTN","DGENUPL2",100,0)
 S DGCDIS("METDET")=$$CONVERT^DGENUPL1($P(SEG(6),$E(HLECH)))
"RTN","DGENUPL2",101,0)
 S DGCDIS("VCD")=$$CONVERT^DGENUPL1(SEG(12))
"RTN","DGENUPL2",102,0)
 ;SEQ 14 - DATE VETERAN REQUESTED CD EVALUATION
"RTN","DGENUPL2",103,0)
 S DGCDIS("VETREQDT")=$$CONVERT^DGENUPL1(SEG(14),"DATE",.ERROR)
"RTN","DGENUPL2",104,0)
 I ERROR D  Q
"RTN","DGENUPL2",105,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZCD SEGMENT, SEQ 14",.ERRCOUNT)
"RTN","DGENUPL2",106,0)
 ;SEQ 15 - DATE FACILITY INITIATED REVIEW
"RTN","DGENUPL2",107,0)
 S DGCDIS("DTFACIRV")=$$CONVERT^DGENUPL1(SEG(15),"DATE",.ERROR)
"RTN","DGENUPL2",108,0)
 I ERROR D  Q
"RTN","DGENUPL2",109,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZCD SEGMENT, SEQ 15",.ERRCOUNT)
"RTN","DGENUPL2",110,0)
 ;SEQ 16 - DATE VETERAN WAS NOTIFIED
"RTN","DGENUPL2",111,0)
 S DGCDIS("DTVETNOT")=$$CONVERT^DGENUPL1(SEG(16),"DATE",.ERROR)
"RTN","DGENUPL2",112,0)
 I ERROR D  Q
"RTN","DGENUPL2",113,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZCD SEGMENT, SEQ 16",.ERRCOUNT)
"RTN","DGENUPL2",114,0)
SKIP ;
"RTN","DGENUPL2",115,0)
 ;Phase II Parse out additional fields.  CONVERT type of RSN converts the code to IEN for diagnosis,procedure and condition (HL7TORSN^DGENA5).
"RTN","DGENUPL2",116,0)
 ; * check the new DESCRIPTOR sequences  -  DG*5.3*894
"RTN","DGENUPL2",117,0)
 N I,D3     ; DG*5.3*894
"RTN","DGENUPL2",118,0)
 S D3="|"   ; DG*5.3*894
"RTN","DGENUPL2",119,0)
 F I=1:1 Q:$P(SEG(17),D3,I)=""  D
"RTN","DGENUPL2",120,0)
 . S DGCDIS("DESCR",I)=$$CONVERT^DGENUPL1($P(SEG(17),D3,I),"CDDSCR")
"RTN","DGENUPL2",121,0)
 ;
"RTN","DGENUPL2",122,0)
 I '$D(DGCDIS("DESCR")) D
"RTN","DGENUPL2",123,0)
 .S DGCDIS("DIAG",SEG(1))=$$CONVERT^DGENUPL1(SEG(7),"CDRSN")
"RTN","DGENUPL2",124,0)
 .S DGCDIS("PROC",SEG(1))=$$CONVERT^DGENUPL1(SEG(8),"CDRSN")
"RTN","DGENUPL2",125,0)
 .S DGCDIS("COND",SEG(1))=$$CONVERT^DGENUPL1(SEG(10),"CDRSN")
"RTN","DGENUPL2",126,0)
 ;
"RTN","DGENUPL2",127,0)
 S DGCDIS("EXT",SEG(1),1)=$$CONVERT^DGENUPL1($P(SEG(9),$E(HLECH)),"EXT")
"RTN","DGENUPL2",128,0)
 S DGCDIS("SCORE",SEG(1))=$$CONVERT^DGENUPL1($P(SEG(11),$E(HLECH)))
"RTN","DGENUPL2",129,0)
 S DGCDIS("PERM",SEG(1))=$$CONVERT^DGENUPL1($P(SEG(13),$E(HLECH)))
"RTN","DGENUPL2",130,0)
 I DGCDIS("VCD")="Y",'$D(DGCDIS("DIAG")),'$D(DGCDIS("PROC")),'$D(DGCDIS("COND")),'$D(DGCDIS("DESCR")) D  Q
"RTN","DGENUPL2",131,0)
 .S ERROR=1 D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"NO VALID DIAGNOSIS,PROCEDURE,CONDITION, OR DESCRIPTOR IN THE ZCD SEGMENT",.ERRCOUNT)
"RTN","DGENUPL2",132,0)
 Q
"RTN","DGENUPL2",133,0)
 ;
"RTN","DGENUPL2",134,0)
ZSP ;
"RTN","DGENUPL2",135,0)
 S DGELG("SC")=$$CONVERT^DGENUPL1(SEG(2),"Y/N",.ERROR)
"RTN","DGENUPL2",136,0)
 I ERROR D  Q
"RTN","DGENUPL2",137,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 2",.ERRCOUNT)
"RTN","DGENUPL2",138,0)
 S DGELG("SCPER")=$$CONVERT^DGENUPL1(SEG(3))
"RTN","DGENUPL2",139,0)
 S DGELG("POS")=$$CONVERT^DGENUPL1(SEG(4),"POS",.ERROR)
"RTN","DGENUPL2",140,0)
 I ERROR D  Q
"RTN","DGENUPL2",141,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 4",.ERRCOUNT)
"RTN","DGENUPL2",142,0)
 S DGELG("EFFDT")=$$CONVERT^DGENUPL1(SEG(11),"DATE",.ERROR)
"RTN","DGENUPL2",143,0)
 I ERROR D  Q
"RTN","DGENUPL2",144,0)
 . D ADDERROR^DGENUPL(MSGID,$G(DGELG("EFFDT")),"BAD VALUE, ZSP SEGMENT, SEQ 11",.ERRCOUNT)
"RTN","DGENUPL2",145,0)
 ;if effective date is null, set update value to "@" (delete)
"RTN","DGENUPL2",146,0)
 I DGELG("EFFDT")="" S DGELG("EFFDT")="@"
"RTN","DGENUPL2",147,0)
 ;
"RTN","DGENUPL2",148,0)
 ;added 8/3/98 to reduce #rejects
"RTN","DGENUPL2",149,0)
 ;if HEC sends SC=NO, SC% not sent, and site has value for SC% then delete it
"RTN","DGENUPL2",150,0)
 I DGELG("SC")="N",DGELG("SCPER")="" S DGELG("SCPER")="@"
"RTN","DGENUPL2",151,0)
 ;
"RTN","DGENUPL2",152,0)
 S DGELG("P&T")=$$CONVERT^DGENUPL1(SEG(6),"Y/N",.ERROR)
"RTN","DGENUPL2",153,0)
 I ERROR D  Q
"RTN","DGENUPL2",154,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 6",.ERRCOUNT)
"RTN","DGENUPL2",155,0)
 S DGELG("UNEMPLOY")=$$CONVERT^DGENUPL1(SEG(7),"Y/N",.ERROR)
"RTN","DGENUPL2",156,0)
 I ERROR D  Q
"RTN","DGENUPL2",157,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 7",.ERRCOUNT)
"RTN","DGENUPL2",158,0)
 S DGELG("SCAWDATE")=$$CONVERT^DGENUPL1(SEG(8),"DATE",.ERROR)
"RTN","DGENUPL2",159,0)
 I ERROR D  Q
"RTN","DGENUPL2",160,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 8",.ERRCOUNT)
"RTN","DGENUPL2",161,0)
 S DGELG("P&TDT")=$$CONVERT^DGENUPL1(SEG(10),"DATE",.ERROR)
"RTN","DGENUPL2",162,0)
 I ERROR D
"RTN","DGENUPL2",163,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 10 - P&T EFFECTIVE DATE",.ERRCOUNT)
"RTN","DGENUPL2",164,0)
 S DGPAT("DENTC2IN")=$$CONVERT^DGENUPL1(SEG(12),"Y/N",.ERROR)
"RTN","DGENUPL2",165,0)
 I ERROR D  Q
"RTN","DGENUPL2",166,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 12",.ERRCOUNT)
"RTN","DGENUPL2",167,0)
 S DGPAT("DENTC2DT")=$$CONVERT^DGENUPL1(SEG(13),"DATE",.ERROR)
"RTN","DGENUPL2",168,0)
 I ERROR D  Q
"RTN","DGENUPL2",169,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 13",.ERRCOUNT)
"RTN","DGENUPL2",170,0)
 Q
"RTN","DGENUPL2",171,0)
 ;
"RTN","DGENUPL2",172,0)
ZMH ;Purple Heart, OEFOIE, POW
"RTN","DGENUPL2",173,0)
 D ZMH^DGENUPL3 ;Moved to DGENUPL3 - DG*5.3*653 
"RTN","DGENUPL2",174,0)
 Q
"RTN","DGENUPL2",175,0)
 ;
"RTN","DGENUPL2",176,0)
ZRD ;
"RTN","DGENUPL2",177,0)
 N COUNT,DXCODE,NAME,COND
"RTN","DGENUPL2",178,0)
 S DXCODE=$P(SEG(2),$E(HLECH))
"RTN","DGENUPL2",179,0)
 I DXCODE="""""" S DXCODE=""
"RTN","DGENUPL2",180,0)
 S NAME=$P(SEG(2),$E(HLECH),2)
"RTN","DGENUPL2",181,0)
 Q:DXCODE=""  ;segment does not contain a disability condition
"RTN","DGENUPL2",182,0)
 ;
"RTN","DGENUPL2",183,0)
 S COUNT=1+(+$G(DGELG("RATEDIS")))
"RTN","DGENUPL2",184,0)
 S (COND,DGELG("RATEDIS",COUNT,"RD"))=$$DCLOOKUP(DXCODE,NAME)
"RTN","DGENUPL2",185,0)
 S DGELG("RATEDIS",COUNT,"PER")=$$CONVERT^DGENUPL1(SEG(3)),DGELG("RATEDIS")=COUNT
"RTN","DGENUPL2",186,0)
 S DGELG("RATEDIS",COUNT,"RDEXT")=$$CONVERT^DGENUPL1(SEG(12))
"RTN","DGENUPL2",187,0)
 S DGELG("RATEDIS",COUNT,"RDORIG")=$$CONVERT^DGENUPL1(SEG(13),"DATE",.ERROR)
"RTN","DGENUPL2",188,0)
 I ERROR D  Q
"RTN","DGENUPL2",189,0)
 . D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZRD SEGMENT, S 13",.ERRCOUNT)
"RTN","DGENUPL2",190,0)
 S DGELG("RATEDIS",COUNT,"RDCURR")=$$CONVERT^DGENUPL1(SEG(14),"DATE",.ERROR)
"RTN","DGENUPL2",191,0)
 I ERROR D  Q
"RTN","DGENUPL2",192,0)
 . D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZRD SEGMENT, S 14",.ERRCOUNT)
"RTN","DGENUPL2",193,0)
 I 'COND D  Q
"RTN","DGENUPL2",194,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZRD SEGMENT, SEQ 2 - DISABILTY CONDITION LOOKUP FAILED",.ERRCOUNT)
"RTN","DGENUPL2",195,0)
 .S ERROR=1
"RTN","DGENUPL2",196,0)
 Q
"RTN","DGENUPL2",197,0)
OBX ;
"RTN","DGENUPL2",198,0)
 D OBX^DGENUPLA  ;code for OBX segment moved to DGENUPLA
"RTN","DGENUPL2",199,0)
 Q
"RTN","DGENUPL2",200,0)
 ;
"RTN","DGENUPL2",201,0)
 ;*********** end of segment parsers ****
"RTN","DGENUPL2",202,0)
 ;
"RTN","DGENUPL2",203,0)
DCLOOKUP(DGCODE,DGNAME) ;
"RTN","DGENUPL2",204,0)
 ; Description: Returns the ien of a Disability Condition (file #31) based on the DGCODE and DGNAME
"RTN","DGENUPL2",205,0)
 ;
"RTN","DGENUPL2",206,0)
 ;Input:
"RTN","DGENUPL2",207,0)
 ;  DGCODE - DX Code of the Disability Condition
"RTN","DGENUPL2",208,0)
 ;  DGNAME - name of the Disability Condition
"RTN","DGENUPL2",209,0)
 ;Output:
"RTN","DGENUPL2",210,0)
 ;  Function Value: ien of the entry found, or 0 otherwise
"RTN","DGENUPL2",211,0)
 ;
"RTN","DGENUPL2",212,0)
 Q:(DGCODE="") 0
"RTN","DGENUPL2",213,0)
 N NODE,IEN,FOUND
"RTN","DGENUPL2",214,0)
 S (FOUND,IEN)=0
"RTN","DGENUPL2",215,0)
 F  S IEN=$O(^DIC(31,"C",DGCODE,IEN)) Q:'IEN  D  Q:FOUND
"RTN","DGENUPL2",216,0)
 .S NODE=$G(^DIC(31,IEN,0))
"RTN","DGENUPL2",217,0)
 .I DGNAME=$P(NODE,"^"),DGCODE=$P(NODE,"^",3) S FOUND=1
"RTN","DGENUPL2",218,0)
 I 'FOUND S IEN=$O(^DIC(31,"C",DGCODE,0))
"RTN","DGENUPL2",219,0)
 Q +IEN
"RTN","DGENUPL2",220,0)
 ;
"RTN","DGENUPL2",221,0)
REGCHECK(DFN) ;
"RTN","DGENUPL2",222,0)
 ; Description: passes patient through the registration consistency checker
"RTN","DGENUPL2",223,0)
 ;Input -
"RTN","DGENUPL2",224,0)
 ;  DFN - is a pointer to the Patient File
"RTN","DGENUPL2",225,0)
 ;
"RTN","DGENUPL2",226,0)
 N DGCD,DGCHK,DGDAY,DGEDCN,DGER,DGLST,DGNCK,DGRPCOLD,DGSC,DGTYPE,DGVT,VA,X
"RTN","DGENUPL2",227,0)
 ;
"RTN","DGENUPL2",228,0)
 S DGEDCN=0
"RTN","DGENUPL2",229,0)
 D ^DGRPC
"RTN","DGENUPL2",230,0)
 Q
"RTN","DGENUPL2",231,0)
PEND(DFN,DGSTAT) ;
"RTN","DGENUPL2",232,0)
 N DGARR,DGEC,DGERR,DGX
"RTN","DGENUPL2",233,0)
 I $P($G(^DPT(DFN,.361)),U)'="V" Q 0
"RTN","DGENUPL2",234,0)
 I $G(DGSTAT)="@" Q 0
"RTN","DGENUPL2",235,0)
 I $G(DGSTAT)']"" Q 0
"RTN","DGENUPL2",236,0)
 S DGSTAT="^"_DGSTAT_"^"
"RTN","DGENUPL2",237,0)
 Q:"^15^17^"'[DGSTAT 0
"RTN","DGENUPL2",238,0)
 D GETS^DIQ(2,DFN_",",".301;.302;.361;.36295","IE","DGARR","DGERR")
"RTN","DGENUPL2",239,0)
 I $D(DGERR) Q 0
"RTN","DGENUPL2",240,0)
 S DGEC=$G(DGARR(2,DFN_",",.361,"I"))
"RTN","DGENUPL2",241,0)
 I $G(DGEC)']"" Q 0
"RTN","DGENUPL2",242,0)
 S DGEC=$P($G(^DIC(8,DGEC,0)),U,9)
"RTN","DGENUPL2",243,0)
 I $G(DGEC)']"" Q 0
"RTN","DGENUPL2",244,0)
 I DGEC=5 Q 1
"RTN","DGENUPL2",245,0)
 I DGEC=3 D  Q DGX
"RTN","DGENUPL2",246,0)
 . S DGX=1
"RTN","DGENUPL2",247,0)
 . I $G(DGARR(2,DFN_",",.301,"I"))'="Y" S DGX=0 Q
"RTN","DGENUPL2",248,0)
 . I +$G(DGARR(2,DFN_",",.302,"I"))>0 S DGX=0 Q
"RTN","DGENUPL2",249,0)
 . I +$G(DGARR(2,DFN_",",.36295,"I"))>0 S DGX=0 Q
"RTN","DGENUPL2",250,0)
 Q 0
"VER")
8.0^22.0
"BLD",9906,6)
^823
**END**
**END**

