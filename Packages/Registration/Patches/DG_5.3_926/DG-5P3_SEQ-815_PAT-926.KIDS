Released DG*5.3*926 SEQ #815
Extracted from mail message
**KIDS**:DG*5.3*926^

**INSTALL NAME**
DG*5.3*926
"BLD",3174,0)
DG*5.3*926^REGISTRATION^0^3161117^y
"BLD",3174,1,0)
^^3^3^3160726^
"BLD",3174,1,1,0)
MASTER VETERAN INDEX VISTA ENHANCEMENTS - ITERATION 16 / RELEASE 2
"BLD",3174,1,2,0)
Refer to patch DG*5.3*926 in the FORUM Patch Module for a complete
"BLD",3174,1,3,0)
description.
"BLD",3174,4,0)
^9.64PA^43^4
"BLD",3174,4,2,0)
2
"BLD",3174,4,2,2,0)
^9.641^2^1
"BLD",3174,4,2,2,2,0)
PATIENT  (File-top level)
"BLD",3174,4,2,2,2,1,0)
^9.6411^.358^3
"BLD",3174,4,2,2,2,1,.353,0)
SOURCE OF NOTIFICATION
"BLD",3174,4,2,2,2,1,.357,0)
SUPPORTING DOCUMENT TYPE
"BLD",3174,4,2,2,2,1,.358,0)
DATE OF DEATH OPTION USED
"BLD",3174,4,2,222)
y^y^p^^^^n^^n
"BLD",3174,4,2,224)

"BLD",3174,4,43,0)
43
"BLD",3174,4,43,2,0)
^9.641^43^1
"BLD",3174,4,43,2,43,0)
MAS PARAMETERS  (File-top level)
"BLD",3174,4,43,2,43,1,0)
^9.6411^1401^1
"BLD",3174,4,43,2,43,1,1401,0)
PROCESS MVI DOD UPDATE?
"BLD",3174,4,43,222)
y^y^p^^^^n^^n
"BLD",3174,4,43,224)

"BLD",3174,4,47.75,0)
47.75
"BLD",3174,4,47.75,222)
y^y^f^^n^^y^o^n
"BLD",3174,4,47.76,0)
47.76
"BLD",3174,4,47.76,222)
y^y^f^^n^^y^o^n
"BLD",3174,4,"APDD",2,2)

"BLD",3174,4,"APDD",2,2,.353)

"BLD",3174,4,"APDD",2,2,.357)

"BLD",3174,4,"APDD",2,2,.358)

"BLD",3174,4,"APDD",43,43)

"BLD",3174,4,"APDD",43,43,1401)

"BLD",3174,4,"B",2,2)

"BLD",3174,4,"B",43,43)

"BLD",3174,4,"B",47.75,47.75)

"BLD",3174,4,"B",47.76,47.76)

"BLD",3174,6.3)
6
"BLD",3174,"ABPKG")
n
"BLD",3174,"KRN",0)
^9.67PA^779.2^20
"BLD",3174,"KRN",.4,0)
.4
"BLD",3174,"KRN",.401,0)
.401
"BLD",3174,"KRN",.402,0)
.402
"BLD",3174,"KRN",.403,0)
.403
"BLD",3174,"KRN",.5,0)
.5
"BLD",3174,"KRN",.84,0)
.84
"BLD",3174,"KRN",3.6,0)
3.6
"BLD",3174,"KRN",3.8,0)
3.8
"BLD",3174,"KRN",9.2,0)
9.2
"BLD",3174,"KRN",9.8,0)
9.8
"BLD",3174,"KRN",9.8,"NM",0)
^9.68A^8^8
"BLD",3174,"KRN",9.8,"NM",1,0)
VAFCTR^^0^B4717959
"BLD",3174,"KRN",9.8,"NM",2,0)
DGDEATH^^0^B59149786
"BLD",3174,"KRN",9.8,"NM",3,0)
VAFCDODA^^0^B4999443
"BLD",3174,"KRN",9.8,"NM",4,0)
DPTLK7^^0^B199396274
"BLD",3174,"KRN",9.8,"NM",5,0)
DGREG^^0^B55364867
"BLD",3174,"KRN",9.8,"NM",6,0)
VAFCQRY^^0^B26626095
"BLD",3174,"KRN",9.8,"NM",7,0)
VAFCSB^^0^B45868659
"BLD",3174,"KRN",9.8,"NM",8,0)
VAFCPDAT^^0^B63310519
"BLD",3174,"KRN",9.8,"NM","B","DGDEATH",2)

"BLD",3174,"KRN",9.8,"NM","B","DGREG",5)

"BLD",3174,"KRN",9.8,"NM","B","DPTLK7",4)

"BLD",3174,"KRN",9.8,"NM","B","VAFCDODA",3)

"BLD",3174,"KRN",9.8,"NM","B","VAFCPDAT",8)

"BLD",3174,"KRN",9.8,"NM","B","VAFCQRY",6)

"BLD",3174,"KRN",9.8,"NM","B","VAFCSB",7)

"BLD",3174,"KRN",9.8,"NM","B","VAFCTR",1)

"BLD",3174,"KRN",19,0)
19
"BLD",3174,"KRN",19.1,0)
19.1
"BLD",3174,"KRN",101,0)
101
"BLD",3174,"KRN",409.61,0)
409.61
"BLD",3174,"KRN",771,0)
771
"BLD",3174,"KRN",779.2,0)
779.2
"BLD",3174,"KRN",870,0)
870
"BLD",3174,"KRN",8989.51,0)
8989.51
"BLD",3174,"KRN",8989.52,0)
8989.52
"BLD",3174,"KRN",8994,0)
8994
"BLD",3174,"KRN",8994,"NM",0)
^9.68A^1^1
"BLD",3174,"KRN",8994,"NM",1,0)
VAFC DOD ACCEPT SET/DISPLAY^^0
"BLD",3174,"KRN",8994,"NM","B","VAFC DOD ACCEPT SET/DISPLAY",1)

"BLD",3174,"KRN","B",.4,.4)

"BLD",3174,"KRN","B",.401,.401)

"BLD",3174,"KRN","B",.402,.402)

"BLD",3174,"KRN","B",.403,.403)

"BLD",3174,"KRN","B",.5,.5)

"BLD",3174,"KRN","B",.84,.84)

"BLD",3174,"KRN","B",3.6,3.6)

"BLD",3174,"KRN","B",3.8,3.8)

"BLD",3174,"KRN","B",9.2,9.2)

"BLD",3174,"KRN","B",9.8,9.8)

"BLD",3174,"KRN","B",19,19)

"BLD",3174,"KRN","B",19.1,19.1)

"BLD",3174,"KRN","B",101,101)

"BLD",3174,"KRN","B",409.61,409.61)

"BLD",3174,"KRN","B",771,771)

"BLD",3174,"KRN","B",779.2,779.2)

"BLD",3174,"KRN","B",870,870)

"BLD",3174,"KRN","B",8989.51,8989.51)

"BLD",3174,"KRN","B",8989.52,8989.52)

"BLD",3174,"KRN","B",8994,8994)

"BLD",3174,"QDEF")
^^^^^^^^^^YES
"BLD",3174,"QUES",0)
^9.62^^
"BLD",3174,"REQB",0)
^9.611^4^4
"BLD",3174,"REQB",1,0)
DG*5.3*901^2
"BLD",3174,"REQB",2,0)
DG*5.3*902^2
"BLD",3174,"REQB",3,0)
DG*5.3*915^2
"BLD",3174,"REQB",4,0)
DG*5.3*919^2
"BLD",3174,"REQB","B","DG*5.3*901",1)

"BLD",3174,"REQB","B","DG*5.3*902",2)

"BLD",3174,"REQB","B","DG*5.3*915",3)

"BLD",3174,"REQB","B","DG*5.3*919",4)

"DATA",47.75,1,0)
DEATH CERTIFICATE^DC
"DATA",47.75,1,1,0)
^47.751^1^1^3160627^^
"DATA",47.75,1,1,1,0)
Death Certificate [38 CFR  3.211 (a)(1)]
"DATA",47.75,2,0)
STATE PUBLIC RECORD OF DEATH^SPROD
"DATA",47.75,2,1,0)
^^2^2^3160621^
"DATA",47.75,2,1,1,0)
A copy of the public record of the State or community where death 
"DATA",47.75,2,1,2,0)
occurred [38 CFR  3.211(a)(1)]
"DATA",47.75,3,0)
CORONER'S REPORT^CR
"DATA",47.75,3,1,0)
^^3^3^3160621^
"DATA",47.75,3,1,1,0)
A copy of a coroner's report of death or a verdict of a coroner's jury of 
"DATA",47.75,3,1,2,0)
the State or community where death occurred, provided such report or 
"DATA",47.75,3,1,3,0)
verdict properly identified the deceased. [38 CFR  3.211 (a)(2)]
"DATA",47.75,4,0)
DEATH CERTIFICATE US GOVT^DCUSG
"DATA",47.75,4,1,0)
^^2^2^3160621^
"DATA",47.75,4,1,1,0)
A death certificate signed by a medical office where death occurs in a 
"DATA",47.75,4,1,2,0)
hospital or institution under the control of the US Government.
"DATA",47.75,5,0)
CLINICAL SUMMARY US GOVT^CSUSG
"DATA",47.75,5,1,0)
^^3^3^3160621^
"DATA",47.75,5,1,1,0)
A clinical summary or other report showing fact and date of death signed 
"DATA",47.75,5,1,2,0)
by a medical officer where death occurs in a hospital or institution 
"DATA",47.75,5,1,3,0)
under the control of the US Government.
"DATA",47.75,6,0)
OFFICIAL REPORT UNIFORMED SERVICE^ORUS
"DATA",47.75,6,1,0)
^^4^4^3160621^
"DATA",47.75,6,1,1,0)
An official report of death of a member of a uniformed service from the 
"DATA",47.75,6,1,2,0)
Secretary of the department concerned where death occurs while deceased 
"DATA",47.75,6,1,3,0)
was on the retired list in an inactive duty status or in the active 
"DATA",47.75,6,1,4,0)
service.
"DATA",47.75,7,0)
NONUS DEATH US CONSULAR REPORT OF DEATH^NDUCROD
"DATA",47.75,7,1,0)
^47.751^2^2^3160718^^
"DATA",47.75,7,1,1,0)
A US consular report of death bearing the signature and seal of the US 
"DATA",47.75,7,1,2,0)
consul if death occurs abroad.
"DATA",47.75,8,0)
NONUS DEATH PUBLIC RECORD AUTHENTICATED^NDPRA
"DATA",47.75,8,1,0)
^47.751^2^2^3160718^^
"DATA",47.75,8,1,1,0)
A copy of the public records of death authenticated by the US consul or 
"DATA",47.75,8,1,2,0)
other agency of the State Department if death occurs abroad.
"DATA",47.75,9,0)
NONUS DEATH CIVILIAN EMPLOYEE OFFICIAL REPORT^NDCEOR
"DATA",47.75,9,1,0)
^^3^3^3160621^
"DATA",47.75,9,1,1,0)
An official report of death from the head of the department concerned, 
"DATA",47.75,9,1,2,0)
where the deceased person was at the time of death, a civilian employee 
"DATA",47.75,9,1,3,0)
of such department where death occurred abroad.
"DATA",47.75,10,0)
NO OTHER 38 CFR DOCUMENTATION AFFIDAVIT PROVIDED^NODAP
"DATA",47.75,10,1,0)
^^6^6^3160718^
"DATA",47.75,10,1,1,0)
If the foregoing evidence cannot be furnished, the reason must be stated. 
"DATA",47.75,10,1,2,0)
The fact of death may then be established by the affidavits of persons 
"DATA",47.75,10,1,3,0)
who have personal knowledge of the fact of death, have viewed the body of 
"DATA",47.75,10,1,4,0)
the deceased, know it to be the body of the person whose death is being 
"DATA",47.75,10,1,5,0)
established, setting forth all the facts and circumstances concerning the 
"DATA",47.75,10,1,6,0)
death, place, date, time and cause thereof.
"DATA",47.75,11,0)
NO OTHER 38 CFR DOCUMENTATION OFFICIAL FINDING^NODOF
"DATA",47.75,11,1,0)
^^8^8^3160621^
"DATA",47.75,11,1,1,0)
If proof of death, as defined in paragraphs (a) through (e) of this 
"DATA",47.75,11,1,2,0)
section cannot be furnished, a finding of fact of death, where death is 
"DATA",47.75,11,1,3,0)
otherwise shown by competent evidence, may be made by an official 
"DATA",47.75,11,1,4,0)
authorized to approve such findings. Where it is indicated that the 
"DATA",47.75,11,1,5,0)
veteran died under circumstances which precluded recovery or 
"DATA",47.75,11,1,6,0)
identification of the body, the fact of death should be established by 
"DATA",47.75,11,1,7,0)
the best evidence, which from the nature of the case must be supposed to 
"DATA",47.75,11,1,8,0)
exist.
"DATA",47.75,12,0)
NO OTHER 38 CFR DOCUMENTATION OTHER FEDERAL AGENCY FINDING^NODOFAF
"DATA",47.75,12,1,0)
^^3^3^3160621^
"DATA",47.75,12,1,1,0)
In the absence of evidence to the contrary, a finding of fact of death 
"DATA",47.75,12,1,2,0)
made by another Federal agency will be accepted for the purposes of 
"DATA",47.75,12,1,3,0)
paragraph (f) of this section.
"DATA",47.75,13,0)
UNEXPLAINED ABSENCE 38 CFR 3.212 CRITERIA MET^UACCM
"DATA",47.75,13,1,0)
^^1^1^3160621^
"DATA",47.75,13,1,1,0)
Unexplained absence for 7 years as defined in 38 CFR 3.212.
"DATA",47.75,14,0)
NCA ELECTRONIC FILE^NCAEF
"DATA",47.75,14,1,0)
^^1^1^3160621^
"DATA",47.75,14,1,1,0)
Electronic notification by NCA.
"DATA",47.75,15,0)
SSA DMF^SDMF
"DATA",47.75,15,1,0)
^^1^1^3160621^
"DATA",47.75,15,1,1,0)
Social Security Association Death Master File.
"DATA",47.75,16,0)
MILITARY PERSONNEL SOURCES^MPS
"DATA",47.75,16,1,0)
^^1^1^3160622^
"DATA",47.75,16,1,1,0)
Military Personnel Sources.
"DATA",47.75,17,0)
BENEFICIARY SUPPORT TOOL^BST
"DATA",47.75,17,1,0)
^^1^1^3160622^
"DATA",47.75,17,1,1,0)
Beneficiary Support Tool.
"DATA",47.75,18,0)
EVVE CERTIFICATION^EC
"DATA",47.75,18,1,0)
^^1^1^3160622^
"DATA",47.75,18,1,1,0)
EVVE Certification.
"DATA",47.75,19,0)
VAMC EHR INPATIENT DEATH^INPTD
"DATA",47.75,19,1,0)
^^1^1^3160621^
"DATA",47.75,19,1,1,0)
VAMC Electronic Health Record.
"DATA",47.76,1,0)
VAMC INPATIENT DEATH^1^1
"DATA",47.76,2,0)
NON-VA MEDICAL FACILITY^2^0
"DATA",47.76,3,0)
DEATH CERTIFICATE ON FILE^3^0
"DATA",47.76,4,0)
CORP^4^1
"DATA",47.76,5,0)
VA INSURANCE^5^0
"DATA",47.76,6,0)
SSA^6^0
"DATA",47.76,7,0)
NCA^7^1
"DATA",47.76,8,0)
SPOUSE/NEXT OF KIN/OTHER PERSON^8^1
"DATA",47.76,9,0)
OTHER^9^0
"DATA",47.76,10,0)
EVVE QUERY^10^1
"DATA",47.76,11,0)
SSA DMF^11^1
"DATA",47.76,12,0)
MILITARY PERSONNEL SOURCES^12^1
"DATA",47.76,13,0)
BENEFICIARY SUPPORT TOOL^13^1
"FIA",2)
PATIENT
"FIA",2,0)
^DPT(
"FIA",2,0,0)
2I
"FIA",2,0,1)
y^y^p^^^^n^^n
"FIA",2,0,10)

"FIA",2,0,11)

"FIA",2,0,"RLRO")

"FIA",2,0,"VR")
5.3^DG
"FIA",2,2)
1
"FIA",2,2,.353)

"FIA",2,2,.357)

"FIA",2,2,.358)

"FIA",43)
MAS PARAMETERS
"FIA",43,0)
^DG(43,
"FIA",43,0,0)
43
"FIA",43,0,1)
y^y^p^^^^n^^n
"FIA",43,0,10)

"FIA",43,0,11)

"FIA",43,0,"RLRO")

"FIA",43,0,"VR")
5.3^DG
"FIA",43,43)
1
"FIA",43,43,1401)

"FIA",47.75)
SUPPORTING DOCUMENTATION TYPES
"FIA",47.75,0)
^DG(47.75,
"FIA",47.75,0,0)
47.75
"FIA",47.75,0,1)
y^y^f^^n^^y^o^n
"FIA",47.75,0,10)

"FIA",47.75,0,11)

"FIA",47.75,0,"RLRO")

"FIA",47.75,0,"VR")
5.3^DG
"FIA",47.75,47.75)
0
"FIA",47.75,47.751)
0
"FIA",47.76)
SOURCE OF NOTIFICATIONS
"FIA",47.76,0)
^DG(47.76,
"FIA",47.76,0,0)
47.76
"FIA",47.76,0,1)
y^y^f^^n^^y^o^n
"FIA",47.76,0,10)

"FIA",47.76,0,11)

"FIA",47.76,0,"RLRO")

"FIA",47.76,0,"VR")
5.3^DG
"FIA",47.76,47.76)
0
"IX",2,2,"AVAFC353",0)
2^AVAFC353^This x-ref calls the DG FIELD MONITOR event point.^MU^^F^I^I^2^^^^^A
"IX",2,2,"AVAFC353",.1,0)
^^5^5^3141222
"IX",2,2,"AVAFC353",.1,1,0)
This cross-reference activates the DG FIELD MONITOR event point.
"IX",2,2,"AVAFC353",.1,2,0)
Applications that wish to monitor edit activity related to this field may
"IX",2,2,"AVAFC353",.1,3,0)
subscribe to that event point and take action as indicated by the changes
"IX",2,2,"AVAFC353",.1,4,0)
that occur.  Refer to the DG FIELD MONITOR protocol for a description of
"IX",2,2,"AVAFC353",.1,5,0)
the information available at the time of the event.
"IX",2,2,"AVAFC353",1)
D FC^DGFCPROT(.DA,2,.353,"SET",$H,$G(DUZ),.X,.X1,.X2,$G(XQY0)) Q
"IX",2,2,"AVAFC353",2)
D FC^DGFCPROT(.DA,2,.353,"KILL",$H,$G(DUZ),.X,.X1,.X2,$G(XQY0)) Q
"IX",2,2,"AVAFC353",11.1,0)
^.114IA^1^1
"IX",2,2,"AVAFC353",11.1,1,0)
1^F^2^.353^^^F
"IX",2,2,"AVAFC357",0)
2^AVAFC357^This x-ref calls the DG FIELD MONITOR event point.^MU^^F^I^I^2^^^^^A
"IX",2,2,"AVAFC357",.1,0)
^^5^5^3160622
"IX",2,2,"AVAFC357",.1,1,0)
This cross-reference activates the DG FIELD MONITOR event point.
"IX",2,2,"AVAFC357",.1,2,0)
Applications that wish to monitor edit activity related to this field may
"IX",2,2,"AVAFC357",.1,3,0)
subscribe to that event point and take action as indicated by the changes
"IX",2,2,"AVAFC357",.1,4,0)
that occur.  Refer to the DG FIELD MONITOR protocol for a description of
"IX",2,2,"AVAFC357",.1,5,0)
the information available at the time of the event.
"IX",2,2,"AVAFC357",1)
D FC^DGFCPROT(.DA,2,.357,"SET",$H,$G(DUZ),.X,.X1,.X2,$G(XQY0)) Q
"IX",2,2,"AVAFC357",2)
D FC^DGFCPROT(.DA,2,.357,"KILL",$H,$G(DUZ),.X,.X1,.X2,$G(XQY0)) Q
"IX",2,2,"AVAFC357",11.1,0)
^.114IA^1^1
"IX",2,2,"AVAFC357",11.1,1,0)
1^F^2^.357^^^F
"KRN",8994,648,-1)
0^1
"KRN",8994,648,0)
VAFC DOD ACCEPT SET/DISPLAY^EN^VAFCDODA^1^R^0^^1^1^^1
"KRN",8994,648,1,0)
^^3^3^3160627^
"KRN",8994,648,1,1,0)
Depending on the type of call, this RPC will SET the PROCESS MVI DOD 
"KRN",8994,648,1,2,0)
UPDATE? (#1401) field in MAS Parameters (#43) or will DISPLAY the field 
"KRN",8994,648,1,3,0)
via a remote call from the MPI.
"KRN",8994,648,2,0)
^8994.02A^2^2
"KRN",8994,648,2,1,0)
TYPE^1^1^1^2
"KRN",8994,648,2,1,1,0)
^^6^6^3160627^
"KRN",8994,648,2,1,1,1,0)
If TYPE="S", this is a remote call from the MPI to SET the value of the 
"KRN",8994,648,2,1,1,2,0)
PROCESS MVI DOD UPDATE? (#1401) field in MAS Parameters (#43) at a 
"KRN",8994,648,2,1,1,3,0)
specific site.
"KRN",8994,648,2,1,1,4,0)
If TYPE="D", this is a remote call from the MPI to return the current 
"KRN",8994,648,2,1,1,5,0)
setting of the PROCESS MVI DOD UPDATE? (#1401) field in MAS Parameters 
"KRN",8994,648,2,1,1,6,0)
(#43) at a specific site.
"KRN",8994,648,2,2,0)
SET^1^1^0^3
"KRN",8994,648,2,2,1,0)
^^3^3^3160627^
"KRN",8994,648,2,2,1,1,0)
If TYPE="S", this is the toggle value to set the PROCESS MVI DOD UPDATE? 
"KRN",8994,648,2,2,1,2,0)
(#1401) field in MAS Parameters (#43) at a specific site. "1" for "YES", 
"KRN",8994,648,2,2,1,3,0)
"0" for "NO".
"KRN",8994,648,2,"B","SET",2)

"KRN",8994,648,2,"B","TYPE",1)

"KRN",8994,648,2,"PARAMSEQ",2,1)

"KRN",8994,648,2,"PARAMSEQ",3,2)

"KRN",8994,648,3,0)
^^3^3^3160627^
"KRN",8994,648,3,1,0)
If field is set to "YES: RET(1)="1-PROCESS MVI DOD UPDATE? set to 'YES'"
"KRN",8994,648,3,2,0)
If field is set to "NO" or is null:  RET(1)="1-PROCESS MVI DOD UPDATE? 
"KRN",8994,648,3,3,0)
set to 'NO' or null"
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813^2970721^12541
"PKG",5,22,1,"PAH",1,0)
926^3161117
"PKG",5,22,1,"PAH",1,1,0)
^^3^3^3161117
"PKG",5,22,1,"PAH",1,1,1,0)
MASTER VETERAN INDEX VISTA ENHANCEMENTS - ITERATION 16 / RELEASE 2
"PKG",5,22,1,"PAH",1,1,2,0)
Refer to patch DG*5.3*926 in the FORUM Patch Module for a complete
"PKG",5,22,1,"PAH",1,1,3,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","DGDEATH")
0^2^B59149786^B44578937
"RTN","DGDEATH",1,0)
DGDEATH ;ALB/MRL,PJR,DJS-PROCESS DECEASED PATIENTS ;10/27/04 9:45pm
"RTN","DGDEATH",2,0)
 ;;5.3;Registration;**45,84,101,149,392,545,595,568,563,725,772,863,901,926**;Aug 13, 1993;Build 6
"RTN","DGDEATH",3,0)
 ;
"RTN","DGDEATH",4,0)
GET N DGMTI,DATA,DGDWHO,DTOUT,DUOUT,DIRUT,DIROUT,DIR,DIE,DA,DFN,DR,DIC,DGDNEW,DGDSON,DGDOCT,DGUPDATE
"RTN","DGDEATH",5,0)
 S DGDTHEN="" W !! S (DIE,DIC)="^DPT(",DIC(0)="AEQMZ" D ^DIC G Q:Y'>0 S (DA,DFN)=+Y
"RTN","DGDEATH",6,0)
 S DGDOLD=$G(^DPT(DFN,.35))
"RTN","DGDEATH",7,0)
 I $P(DGDOLD,"^",1)="" G CONT
"RTN","DGDEATH",8,0)
 ; Story 340911 (elz), allow DOD to be delted regarless (but not edited later on)
"RTN","DGDEATH",9,0)
 ;I $P(DGDOLD,"^",1)'="" S DGDWHO=$P($G(DGDOLD),"^",5) I DGDWHO="" G CONT
"RTN","DGDEATH",10,0)
 ;I ((DGDWHO'="")&(DGDWHO<1))!('$D(^VA(200,DGDWHO))) W !!,"YOU MAY NOT EDIT DATE OF DEATH IF IT WAS NOT ENTERED BY A USER AT THIS SITE" S ^DPT(DFN,.35)=DGDOLD G GET
"RTN","DGDEATH",11,0)
CONT I $D(^DPT(DFN,.1)) W !?3,"Patient is currently in-house.  Discharge him with a discharge type of DEATH." G GET
"RTN","DGDEATH",12,0)
 I $S($D(^DPT(DFN,.35)):^(.35),1:"") F DGY=0:0 S DGY=$O(^DGPM("ATID1",DFN,DGY)) Q:'DGY  S DGDA=$O(^(DGY,0)) I $D(^DGPM(+DGDA,0)),$P(^(0),"^",17)]"" S DGXX=$P(^(0),"^",17),DGXX=^DGPM(DGXX,0) I "^12^38^"[("^"_$P(DGXX,"^",18)_"^") G DIS
"RTN","DGDEATH",13,0)
 ; Story 340911 (elz) prompt for DOD, just keep it on hand without filing the data.
"RTN","DGDEATH",14,0)
 W ! S DIR(0)="2,.351" S:DGDOLD DIR("B")=$$FMTE^XLFDT(+DGDOLD) D ^DIR K DIR("B") S DGDNEW=Y
"RTN","DGDEATH",15,0)
 I X="@" S DIR("A")="Are you sure you want to delete the Date of Death" S DIR(0)="Y" D ^DIR K ^DIR("A") I Y S DR=".351///@;.352////@;.353///@;.357///@;.358///@;.354////"_$$NOW^XLFDT_".355////"_DUZ D ^DIE G GET
"RTN","DGDEATH",16,0)
 I $D(DIRUT) G GET
"RTN","DGDEATH",17,0)
 ; don't allow edit if not entered at this site
"RTN","DGDEATH",18,0)
 I '$D(^VA(200,+$P(DGDOLD,"^",5),0)),$P(DGDOLD,"^")'="",$P(DGDOLD,"^")'=Y W !!,"YOU MAY NOT EDIT DATE OF DEATH IF IT WAS NOT ENTERED BY A USER AT THIS SITE" S ^DPT(DFN,.35)=DGDOLD G GET
"RTN","DGDEATH",19,0)
 S DGDNEW=Y,^TMP("DEATH",$J)=1
"RTN","DGDEATH",20,0)
SN ; Story 340911 Source of Notification, updated to 1 or 8 (elz)
"RTN","DGDEATH",21,0)
 S DGDSON=$P(DGDOLD,"^",3)
"RTN","DGDEATH",22,0)
 S DIC="^DG(47.76,",DIC(0)="AEMNQ",DIC("A")="SOURCE OF NOTIFICATION: ",DIC("S")="I Y=1!(Y=8)" S:DGDSON DIC("B")=$P(^DG(47.76,DGDSON,0),"^") D ^DIC K DIC("A"),DIC("B"),DIC("S")
"RTN","DGDEATH",23,0)
 I DGDNEW,$D(DTOUT)!($D(DUOUT)) W !!,"Death data not filed/updated!" K ^TMP("DEATH",$J) G GET
"RTN","DGDEATH",24,0)
 I DGDNEW,Y<0 W !,*7,?5,"Source of Notification is REQUIRED!!" G SN
"RTN","DGDEATH",25,0)
 S $P(DGDNEW,"^",3)=+Y
"RTN","DGDEATH",26,0)
DOCT ; Story 340911 Supporting document type, added with story (elz)
"RTN","DGDEATH",27,0)
 S DGDOCT=$P(DGDOLD,"^",7)
"RTN","DGDEATH",28,0)
 I DGDNEW,$$OCK S DIR(0)="2,.357" S:DGDOCT DIR("B")=$P(^DG(47.75,DGDOCT,0),"^") D ^DIR K DIR("B")
"RTN","DGDEATH",29,0)
 I $D(DTOUT)!($D(DUOUT))!($D(DIROUT)) W !!,"Death data not filed/updated!" K ^TMP("DEATH",$J) G GET
"RTN","DGDEATH",30,0)
 I $$OCK,'Y W !,*7,?5,"Supporting Document Type is REQUIRED!!" G DOCT
"RTN","DGDEATH",31,0)
 S:$$OCK $P(DGDNEW,"^",7)=+Y,$P(DGDNEW,"^",8)="VDE"
"RTN","DGDEATH",32,0)
 ;
"RTN","DGDEATH",33,0)
 S DR="",DGUPDATE=0
"RTN","DGDEATH",34,0)
 F P=1,3,7,8 I $P(DGDOLD,"^",P)'=$P(DGDNEW,"^",P),$L($P(DGDNEW,"^")) S DGUPDATE=1
"RTN","DGDEATH",35,0)
 I DGUPDATE F P=1,3,7,8 S DR=DR_".35"_P_"////"_$P(DGDNEW,"^",P)_";"
"RTN","DGDEATH",36,0)
 I $L(DR) S:$P(DGDOLD,"^")'=$P(DGDNEW,"^") DR=DR_".354////"_$$NOW^XLFDT S DIE="^DPT(",^TMP("DEATH",$J)=1 D ^DIE,DISCHRGE
"RTN","DGDEATH",37,0)
 I $P(DGDOLD,"^",1)'=$P(DGDNEW,"^",1) D XFR
"RTN","DGDEATH",38,0)
 K ^TMP("DEATH",$J) G GET
"RTN","DGDEATH",39,0)
 ;
"RTN","DGDEATH",40,0)
DIS W !,"Patient has a discharge type of Death",!,"Edit the discharge",!
"RTN","DGDEATH",41,0)
Q K A,DA,DFN,DGDA,DIC,DIE,DR,DGXX,DGY,DGDTHEN,DGDOLD,DGDNEW,DGDONOT Q
"RTN","DGDEATH",42,0)
XFR ; called from set x-ref of field .351 of file 2
"RTN","DGDEATH",43,0)
 N DGPCMM,DGFAPT,DGFAPTI,DGFAPT1
"RTN","DGDEATH",44,0)
 Q:'$D(DFN)
"RTN","DGDEATH",45,0)
 K DGTEXT D ^DGPATV S DGDEATH=$$GET1^DIQ(2,DFN,.351,"I"),XMSUB="PATIENT HAS EXPIRED",DGCT=0
"RTN","DGDEATH",46,0)
 D DEMOG
"RTN","DGDEATH",47,0)
 S DGT=X-.0001,(Y,DGDDT)=X,DG1="" D:DGT]"" ^DGPMSTAT
"RTN","DGDEATH",48,0)
 S Y=$$FMTE^XLFDT(Y),Y=$S(Y]"":Y,1:"UNKNOWN")
"RTN","DGDEATH",49,0)
 S DGDONOT=0 D APTT3
"RTN","DGDEATH",50,0)
 D LINE("")
"RTN","DGDEATH",51,0)
 D LINE("      Date/Time of Death: "_DEATHVAL_$S(DGDONOT:"",'DG1:"",$D(DGDTHEN):"",1:"  (While an inpatient)"))
"RTN","DGDEATH",52,0)
 D LINE("")
"RTN","DGDEATH",53,0)
 I '$D(ADM),DG1,$D(^DGPM(+DGA1,0)) S ADM=+^DGPM($P(^(0),"^",14),0)
"RTN","DGDEATH",54,0)
 S Y=$$FMTE^XLFDT($S($D(ADM):ADM,1:""))
"RTN","DGDEATH",55,0)
 D LINE($S($D(DGDTHEN):"",DG1:"     Admission Date/Time: "_Y_$S((DGDDT-ADM)<1:"  (Within 24 hours of hospitalization)",1:""),1:""))
"RTN","DGDEATH",56,0)
 D LINE("")
"RTN","DGDEATH",57,0)
 S DGX=$P($G(^DGPM(+$G(DGA1),0)),"^",6),DGX=$P($G(^DIC(42,+DGX,0)),U,1)
"RTN","DGDEATH",58,0)
 D LINE($S($D(DGDTHEN):"",('DG1):"",$D(DGA1):"             Admitted To: "_$S(DGX]"":DGX,1:"UNKNOWN"),1:"")) K DGX
"RTN","DGDEATH",59,0)
 D LINE("")
"RTN","DGDEATH",60,0)
 I DG1&'$D(DGDTHEN) D 
"RTN","DGDEATH",61,0)
 . D LINE($S($D(DGXFR0):"           Last Transfer: "_$S($D(^DIC(42,+$P(DGXFR0,"^",6),0)):$P(^(0),"^"),1:"UNKNOWN"),1:""))
"RTN","DGDEATH",62,0)
 . D LINE("")
"RTN","DGDEATH",63,0)
F N DGARRAY,SDCNT S DGFAPT=DGDEATH,DGFAPTI=""
"RTN","DGDEATH",64,0)
 S DGARRAY("FLDS")=3,DGARRAY(4)=DFN,DGARRAY("SORT")="P",DGARRAY(1)=DT,DGARRAY(3)="I;R"
"RTN","DGDEATH",65,0)
 S SDCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGDEATH",66,0)
 ;
"RTN","DGDEATH",67,0)
 I SDCNT>0 F  S DGFAPT=$O(^TMP($J,"SDAMA301",DFN,DGFAPT)) Q:'DGFAPT  S DGFAPT1=$G(^TMP($J,"SDAMA301",DFN,DGFAPT)) Q:DGFAPT1']""  D  Q:DGFAPTI
"RTN","DGDEATH",68,0)
 .I $P($P(DGFAPT1,U,3),";")'["C" D LINE("NOTE: Patient has future appointments scheduled!!") S DGFAPTI=1
"RTN","DGDEATH",69,0)
 S DGSCHAD=0 D SA I DGSCHAD D LINE("NOTE: Patient had scheduled admissions which have been cancelled!!")
"RTN","DGDEATH",70,0)
 I 'DGVETS D LINE("Patient is a NON-VETERAN."_$S($D(^DIC(21,+$P($G(^DPT(DFN,.32)),"^",3),0)):"  ["_$P(^(0),"^",1)_"]",1:""))
"RTN","DGDEATH",71,0)
 S DGPCMM=$$PCMMXMY^SCAPMC25(1,DFN,,,0) ;creates xmy array
"RTN","DGDEATH",72,0)
 S DGCT=$$PCMAIL^SCMCMM(DFN,"DGTEXT",DT)
"RTN","DGDEATH",73,0)
Q1 S DGB=1 D ^DGBUL S X=DGDEATH
"RTN","DGDEATH",74,0)
 K DGDEATH,DGSCHAD,DGI,Y,DGDDT,^TMP($J,"SDAMA301") D KILL^DGPATV K ADM,DG1,DGA1,DGCT,DGT,DGXX,DGY,Z Q
"RTN","DGDEATH",75,0)
SA F DGI=0:0 S DGI=$O(^DGS(41.1,"B",DFN,DGI)) Q:'DGI  I $D(^DGS(41.1,DGI,0)),($P(^(0),"^",13)']""),($P(^(0),"^",17)']"") S $P(^(0),"^",13)=DGDEATH,$P(^(0),"^",14)=+DUZ,$P(^(0),"^",15)=1,$P(^(0),"^",16)=2,DGSCHAD=1
"RTN","DGDEATH",76,0)
 Q
"RTN","DGDEATH",77,0)
 ;
"RTN","DGDEATH",78,0)
DEL ; delete death bulletin
"RTN","DGDEATH",79,0)
 N DGPCMM,DELBY,DELTM,DTHINFO
"RTN","DGDEATH",80,0)
 S DFN=+$G(DA) I '$D(^DPT(DFN,0)) Q  ; no patient node
"RTN","DGDEATH",81,0)
 I +$G(^DPT(DFN,.35)) Q  ; not deletion
"RTN","DGDEATH",82,0)
 S DGDEATH=X,XMSUB="Patient Death has been Deleted",DGCT=0
"RTN","DGDEATH",83,0)
 D ^DGPATV
"RTN","DGDEATH",84,0)
 D LINE("The date of death for the following patient has been deleted.")
"RTN","DGDEATH",85,0)
 D LINE("")
"RTN","DGDEATH",86,0)
 D DEMOG
"RTN","DGDEATH",87,0)
 D LINE("")
"RTN","DGDEATH",88,0)
 S DGPCMM=$$PCMMXMY^SCAPMC25(1,DFN,,,0) ;creates xmy array
"RTN","DGDEATH",89,0)
 S DGCT=$$PCMAIL^SCMCMM(DFN,"DGTEXT",DT)
"RTN","DGDEATH",90,0)
 S DGB=1 D ^DGBUL S X=DGDEATH
"RTN","DGDEATH",91,0)
 K DGCT,DGDEATH D KILL^DGPATV
"RTN","DGDEATH",92,0)
 Q
"RTN","DGDEATH",93,0)
 ;
"RTN","DGDEATH",94,0)
DEMOG ; list main demographics
"RTN","DGDEATH",95,0)
 D LINE("                    NAME: "_DGNAME)
"RTN","DGDEATH",96,0)
 D LINE("                     SSN: "_$P(SSN,"^",2))
"RTN","DGDEATH",97,0)
 D LINE("                     DOB: "_$P(DOB,"^",2))
"RTN","DGDEATH",98,0)
 I DGVETS D
"RTN","DGDEATH",99,0)
 . N DGX
"RTN","DGDEATH",100,0)
 . S DGX=$G(^DPT(DFN,.31))
"RTN","DGDEATH",101,0)
 . S DGLOCATN=$$FIND1^DIC(4,"","MX","`"_+$P(DGX,U,4)),DGLOCATN=$S(+DGLOCATN>0:$P($$NS^XUAF4(DGLOCATN),U),1:"NOT LISTED")
"RTN","DGDEATH",102,0)
 . D LINE("   CLAIM FOLDER LOCATION: "_$S($D(DGLOCATN):DGLOCATN,1:"NOT LISTED"))
"RTN","DGDEATH",103,0)
 . D LINE("            CLAIM NUMBER: "_$S($P(DGX,"^",3)]"":$P(DGX,"^",3),1:"NOT LISTED"))
"RTN","DGDEATH",104,0)
 ;D LINE("   COORDINATING MASTER OF RECORD: "_DGCMOR)  ;**863 - MVI_2351 (ptd)
"RTN","DGDEATH",105,0)
 D GETS^DIQ(2,DFN_",",".351;.353;.354;.355","E","DTHINFO")
"RTN","DGDEATH",106,0)
 S DEATHVAL=$G(DTHINFO(2,DFN_",",.351,"E"))
"RTN","DGDEATH",107,0)
 S DEATHVAL=$$FMTE^XLFDT(DEATHVAL),DEATHVAL=$S(DEATHVAL]"":DEATHVAL,1:"UNKNOWN")
"RTN","DGDEATH",108,0)
 S SOURCE=$G(DTHINFO(2,DFN_",",.353,"E"))
"RTN","DGDEATH",109,0)
 S DELTM=$G(DTHINFO(2,DFN_",",.354,"E"))
"RTN","DGDEATH",110,0)
 S DELBY=$G(DTHINFO(2,DFN_",",.355,"E"))
"RTN","DGDEATH",111,0)
 D LINE("")
"RTN","DGDEATH",112,0)
 D LINE("             LAST EDITED BY: "_DELBY)
"RTN","DGDEATH",113,0)
 D LINE("    DATE/TIME LAST MODIFIED: "_DELTM)
"RTN","DGDEATH",114,0)
 D LINE("     SOURCE OF NOTIFICATION: "_$S(SOURCE="":"UNDEFINED",1:SOURCE))
"RTN","DGDEATH",115,0)
 ;K DEATHVAL,SOURCE,DELTM,DELBY
"RTN","DGDEATH",116,0)
 Q
"RTN","DGDEATH",117,0)
 ;
"RTN","DGDEATH",118,0)
LINE(X) ; add line contained in X to array
"RTN","DGDEATH",119,0)
 S DGCT=DGCT+1
"RTN","DGDEATH",120,0)
 S DGTEXT(DGCT,0)=X
"RTN","DGDEATH",121,0)
 Q
"RTN","DGDEATH",122,0)
DSBULL ;
"RTN","DGDEATH",123,0)
 ;
"RTN","DGDEATH",124,0)
 I $G(IVMDODUP)=1 Q
"RTN","DGDEATH",125,0)
 S DFN=DA
"RTN","DGDEATH",126,0)
 I $D(DGPMDA) D  Q
"RTN","DGDEATH",127,0)
 .S DISTYPE=$P($G(^DGPM(DGPMDA,0)),"^",18)
"RTN","DGDEATH",128,0)
 .I $G(^DG(405.2,DISTYPE,0))["DEATH" D
"RTN","DGDEATH",129,0)
 ..S FDA(2,DFN_",",.353)=1
"RTN","DGDEATH",130,0)
 ..; Story 940911 (elz) update document type and option used.
"RTN","DGDEATH",131,0)
 ..S:$$OCK FDA(2,DFN_",",.357)=+$O(^DG(47.75,"B","VAMC EHR INPATIENT DEATH",0)),FDA(2,DFN_",",.358)="VDP"
"RTN","DGDEATH",132,0)
 ..D FILE^DIE(,"FDA","BWFERR")
"RTN","DGDEATH",133,0)
 ..D DISCHRGE,XFR
"RTN","DGDEATH",134,0)
 I $D(^TMP("DEATH",$J)) Q
"RTN","DGDEATH",135,0)
 D DISCHRGE,XFR
"RTN","DGDEATH",136,0)
 Q
"RTN","DGDEATH",137,0)
DKBULL ;
"RTN","DGDEATH",138,0)
 S DFN=DA
"RTN","DGDEATH",139,0)
 S FDA(2,DFN_",",.353)="@"
"RTN","DGDEATH",140,0)
 ; Story 940911 (elz) update document type and option used
"RTN","DGDEATH",141,0)
 S:$$OCK FDA(2,DFN_",",.357)="@",FDA(2,DFN_",",.358)="@"
"RTN","DGDEATH",142,0)
 I $D(^TMP("DEATH",$J)) S FDA(2,DFN_",",.355)=DUZ
"RTN","DGDEATH",143,0)
 D FILE^DIE(,"FDA",)
"RTN","DGDEATH",144,0)
 D DEL
"RTN","DGDEATH",145,0)
 Q
"RTN","DGDEATH",146,0)
DISCHRGE ;
"RTN","DGDEATH",147,0)
 ; If the patient is being discharged, determine values needed for 
"RTN","DGDEATH",148,0)
 ; Source of Notification and Date/Time last entered.
"RTN","DGDEATH",149,0)
 ;
"RTN","DGDEATH",150,0)
 I '$D(DGNOW) S DGNOW=$$HTFM^XLFDT($H)
"RTN","DGDEATH",151,0)
 I $G(DGDAUTO)'=1 S FDA(2,DFN_",",.354)=DGNOW
"RTN","DGDEATH",152,0)
 S FDA(2,DFN_",",.355)=DUZ
"RTN","DGDEATH",153,0)
 D FILE^DIE(,"FDA",)
"RTN","DGDEATH",154,0)
 Q
"RTN","DGDEATH",155,0)
APTT3 ;Check to exclude "While an Inpatient" from DOD Bulletin
"RTN","DGDEATH",156,0)
 ; Input:  DFN  Output: DGDONOT
"RTN","DGDEATH",157,0)
 N DATE,XIEN,TYPE,XDOD,YES
"RTN","DGDEATH",158,0)
 S DGDONOT=0
"RTN","DGDEATH",159,0)
 S XDOD=$P($G(^DPT(DFN,.35)),"^",1) I 'XDOD Q
"RTN","DGDEATH",160,0)
 S XDOD=$P(XDOD,".",1),YES=0,TYPE=""
"RTN","DGDEATH",161,0)
 I '$D(^DGPM("APTT3",DFN)) Q
"RTN","DGDEATH",162,0)
 S DATE=$O(^DGPM("APTT3",DFN,XDOD)) I 'DATE Q
"RTN","DGDEATH",163,0)
 I $P(DATE,".",1)=XDOD S YES=1
"RTN","DGDEATH",164,0)
 I ($P(DATE,".",1)-1)=XDOD S YES=1
"RTN","DGDEATH",165,0)
 S XIEN=$O(^DGPM("APTT3",DFN,DATE,"")) I 'XIEN Q
"RTN","DGDEATH",166,0)
 S TYPE=$P($G(^DGPM(XIEN,0)),"^",4)
"RTN","DGDEATH",167,0)
 I YES,'((TYPE=27)!(TYPE=32)) S DGDONOT=1
"RTN","DGDEATH",168,0)
 Q
"RTN","DGDEATH",169,0)
OCK() ; - Only specific options for fields .357 and .358 Story 340911 (elz)
"RTN","DGDEATH",170,0)
 N RETURN
"RTN","DGDEATH",171,0)
 S RETURN=0
"RTN","DGDEATH",172,0)
 I $P(XQY0,"^")="DG DEATH ENTRY" S RETURN=1
"RTN","DGDEATH",173,0)
 I $P(XQY0,"^")="DG DISCHARGE PATIENT" S RETURN=1
"RTN","DGDEATH",174,0)
 Q RETURN
"RTN","DGDEATH",175,0)
 ;
"RTN","DGDEATH",176,0)
 ;**926, Story 323008 (JFW)
"RTN","DGDEATH",177,0)
SDTHELP ;Supporting Document Type Help (XECUTABLE HELP for 2..357)
"RTN","DGDEATH",178,0)
 D:($G(X)["??")
"RTN","DGDEATH",179,0)
 .N MPIOUT,MPII,MPIC,MPIDESC,DIWL,DIWR,DIWF,X
"RTN","DGDEATH",180,0)
 .S MPII=0,DIWL=1,DIWR=$S($G(IOM)]"":IOM,1:70)
"RTN","DGDEATH",181,0)
 .D LIST^DIC(47.75,"",".01","P","","","","","","","MPIOUT")  ;Supported DBIA #2051
"RTN","DGDEATH",182,0)
 .F  S MPII=$O(MPIOUT("DILIST",MPII)) Q:MPII=""  D 
"RTN","DGDEATH",183,0)
 ..K MPIDESC D GET1^DIQ(47.75,$P(MPIOUT("DILIST",MPII,0),"^")_",","50","E","MPIDESC","")  ;Supported DBIA #2056
"RTN","DGDEATH",184,0)
 ..W !,$P(MPIOUT("DILIST",MPII,0),"^",2)_" : "
"RTN","DGDEATH",185,0)
 ..K ^UTILITY($J,"W") S MPIC=0 F  S MPIC=$O(MPIDESC(MPIC)) Q:MPIC=""  D
"RTN","DGDEATH",186,0)
 ...S X=MPIDESC(MPIC) D ^DIWP  ;Supported DBIA #10011
"RTN","DGDEATH",187,0)
 ..D ^DIWW  ;Supported DBIA #10029
"RTN","DGDEATH",188,0)
 Q
"RTN","DGREG")
0^5^B55364867^B51312405
"RTN","DGREG",1,0)
DGREG ;ALB/JDS,MRL/PJR/PHH-REGISTER PATIENT ; 3/28/14 12:38pm
"RTN","DGREG",2,0)
 ;;5.3;Registration;**1,32,108,147,149,182,245,250,513,425,533,574,563,624,658,864,886,915,926**;Aug 13, 1993;Build 6
"RTN","DGREG",3,0)
START ;
"RTN","DGREG",4,0)
EN D LO^DGUTL S DGCLPR=""
"RTN","DGREG",5,0)
 N DGDIV
"RTN","DGREG",6,0)
 S DGDIV=$$PRIM^VASITE
"RTN","DGREG",7,0)
 S:DGDIV %ZIS("B")=$P($G(^DG(40.8,+DGDIV,"DEV")),U,1)
"RTN","DGREG",8,0)
 I $P(^DG(43,1,0),U,39) S %ZIS="NQ",%ZIS("A")="Select 1010 printer: " D ^%ZIS Q:POP  S (DGIO(10),DGIO("PRF"),DGIO("RT"),DGIO("HS"))=ION,DGASKDEV="" I $E(IOST,1,2)'["P-" W !,$C(7),"Not a printer" G DGREG
"RTN","DGREG",9,0)
 K %ZIS("B")
"RTN","DGREG",10,0)
 I '$D(DGIO),$P(^DG(43,1,0),U,30) S %ZIS="N",IOP="HOME" D ^%ZIS I $D(IOS),IOS,$D(^%ZIS(1,+IOS,99)),$D(^%ZIS(1,+^(99),0)) S Y=$P(^(0),U,1) W !,"Using closest printer ",Y,! F I=10,"PRF","RT","HS" S DGIO(I)=Y
"RTN","DGREG",11,0)
A D ENDREG($G(DFN))
"RTN","DGREG",12,0)
 W !! S DIC=2,DIC(0)="ALEQM",DLAYGO=2 K DIC("S"),DIC("B") D ^DIC K DLAYGO G Q1:Y<0 S (DFN,DA)=+Y,DGNEW=$P(Y,"^",3) N Y D PAUSE^DG10 D BEGINREG(DFN) I DGNEW D NEW^DGRP
"RTN","DGREG",13,0)
 ;
"RTN","DGREG",14,0)
 ;; ask to continue if patient died - DG*5.3*563 - pjr 10/12/04
"RTN","DGREG",15,0)
 S DOD="" I $G(DFN) S DOD=$P($G(^DPT(DFN,.35)),"^",1)
"RTN","DGREG",16,0)
 I DOD S Y=DOD,DGPME=0 D DIED^DGPMV I DGPME K DFN,DGRPOUT G A
"RTN","DGREG",17,0)
 ;
"RTN","DGREG",18,0)
 D CIRN
"RTN","DGREG",19,0)
 ;
"RTN","DGREG",20,0)
 I +$G(DGNEW) D
"RTN","DGREG",21,0)
 . ; query CMOR for Patient Record Flag Assignments if NEW patient and
"RTN","DGREG",22,0)
 . ; display results.
"RTN","DGREG",23,0)
 . I $$PRFQRY^DGPFAPI(DFN) D DISPPRF^DGPFAPI(DFN)
"RTN","DGREG",24,0)
 . I $$EN^DGPFMPI(DFN)
"RTN","DGREG",25,0)
 ;
"RTN","DGREG",26,0)
 D ROMQRY
"RTN","DGREG",27,0)
 ;
"RTN","DGREG",28,0)
 S (DGFC,CURR)=0
"RTN","DGREG",29,0)
 D:'$G(DGNEW) WARN S DA=DFN,DGFC="^1",VET=$S($D(^DPT(DFN,"VET")):^("VET")'="Y",1:0)
"RTN","DGREG",30,0)
 S %ZIS="N",IOP="HOME" D ^%ZIS S DGELVER=0 D EN^DGRPD I $D(DGRPOUT) D ENDREG($G(DFN)) D HL7A08^VAFCDD01 K DFN,DGRPOUT G A
"RTN","DGREG",31,0)
 D HINQ^DG10
"RTN","DGREG",32,0)
 I $D(^DIC(195.4,1,"UP")) I ^("UP") D ADM^RTQ3
"RTN","DGREG",33,0)
 D REG^IVMCQ($G(DFN))  ; send financial query  
"RTN","DGREG",34,0)
 G A1
"RTN","DGREG",35,0)
 ;
"RTN","DGREG",36,0)
RT I $D(^DIC(195.4,1,"UP")) I ^("UP") S $P(DGFC,U,1)=DIV D ADM^RTQ3
"RTN","DGREG",37,0)
 Q
"RTN","DGREG",38,0)
 ;
"RTN","DGREG",39,0)
A1 W !,"Do you want to ",$S(DGNEW:"enter",1:"edit")," Patient Data" S %=1 D YN^DICN D  G H:'%,CK:%'=1 S DGRPV=0 D EN1^DGRP G Q:'$D(DA)
"RTN","DGREG",40,0)
 .I +$G(DGNEW) Q
"RTN","DGREG",41,0)
 .I $$ADD^DGADDUTL($G(DFN)) ;
"RTN","DGREG",42,0)
 G CH
"RTN","DGREG",43,0)
PR W !!,"Is the patient currently being followed in a clinic for the same condition" S %=0 D YN^DICN G Q:%=-1
"RTN","DGREG",44,0)
 I '% W !?4,$C(7),"Enter 'Y' if the patient is being followed in clinic for condition for which",!?6,"registered, 'N' if not." G PR
"RTN","DGREG",45,0)
 S CURR=% G SEEN
"RTN","DGREG",46,0)
 ;
"RTN","DGREG",47,0)
CK S DGEDCN=1 D ^DGRPC
"RTN","DGREG",48,0)
CH S X=$S('$D(^DPT(DFN,.36)):1,$P(^(.36),"^",1)']"":1,1:0),X1=$S('$D(^DPT(DFN,.32)):1,$P(^(.32),"^",3)']"":1,1:0) I 'X,'X1 G CH1
"RTN","DGREG",49,0)
CH1 S DA=DFN G PR:'$D(^DPT("ADA",1,DA)) W !!,"There is still an open disposition--register aborted.",$C(7),$C(7) G Q
"RTN","DGREG",50,0)
SEEN W !!,"Is the patient to be examined in the medical center today" S %=1 D YN^DICN S SEEN=% G:%<0 Q I %'>0 W !!,"Enter 'Y' if the patient is to be examined today, 'N' if not.",$C(7) G SEEN
"RTN","DGREG",51,0)
ABIL D ^DGREGG
"RTN","DGREG",52,0)
ENR ; next line appears to be dead code.  left commented just to test.  mli 4/28/94
"RTN","DGREG",53,0)
 ;S DE=0 F I=0:0 S I=$O(^DPT(DA,"DE",I)) Q:'I  I $P(^(I,0),"^",3)'?7N Q  D PR:'DE S L=+$P($S($D(^SC(L,0)):^(0),1:""),"^",1)
"RTN","DGREG",54,0)
REG S (DIE,DIC)="^DPT("_DFN_",""DIS"",",%DT="PTEX",%DT("A")="Registration login date/time: NOW// "
"RTN","DGREG",55,0)
 W !,%DT("A") R ANS:DTIME S:'$T ANS="^" S:ANS="" ANS="N" S X=ANS G Q:ANS="^" S DA(1)=DFN D CHK^DIE(2.101,.01,"E",X,.RESULT) G REG:RESULT="^"!('$D(RESULT)),PR3:'(RESULT#1) S Y=RESULT
"RTN","DGREG",56,0)
 I (RESULT'="^") W "  ("_RESULT(0)_")"
"RTN","DGREG",57,0)
 S DINUM=9999999-RESULT
"RTN","DGREG",58,0)
 S (DFN1,Y1)=DINUM,APD=Y I $D(^DPT(DFN,"DIS",Y1)) W !!,"You must enter a date that does not exist.",$C(7),$C(7) G REG
"RTN","DGREG",59,0)
 ;patch 886 changed to incremental lock and dilocktm
"RTN","DGREG",60,0)
 G:$D(^DPT("ADA",1,DA)) CH1 L +@(DIE_DINUM_")"):$G(DILOCKTM,3) G:'$T MSG S:'($D(^DPT(DA(1),"DIS",0))#2) ^(0)="^2.101D^^" S DIC(0)="L",X=+Y D ^DIC
"RTN","DGREG",61,0)
 ;
"RTN","DGREG",62,0)
 ;SAVE OFF DATE/TIME OF REGISTRATION FOR HL7 V2.3 MESSAGING, IN VAFCDDT
"RTN","DGREG",63,0)
 S VAFCDDT=X
"RTN","DGREG",64,0)
 ;
"RTN","DGREG",65,0)
 S DA=DFN1,DIE("NO^")="",DA(1)=DFN,DP=2.101,DR="1///"_$S(SEEN=2:2,CURR=1:1,1:0)_";Q;2"_$S(CURR=1:"///3",1:"")_";2.1;3//"_$S($P(^DG(43,1,"GL"),"^",2):"",1:"/")_$S($D(^DG(40.8,+$P(^DG(43,1,"GL"),"^",3),0)):$P(^(0),"^",1),1:"")_";4////"_DUZ
"RTN","DGREG",66,0)
 ;patch 886 changed lock to use dilocktm
"RTN","DGREG",67,0)
 D EL K DIC("A") N DGNDLOCK S DGNDLOCK=DIE_DFN1_")" L +@DGNDLOCK:$G(DILOCKTM,3) G:'$T MSG D ^DIE L -@DGNDLOCK
"RTN","DGREG",68,0)
 I $D(DTOUT) D  G Q
"RTN","DGREG",69,0)
 .K DTOUT
"RTN","DGREG",70,0)
 .N DA,DIK
"RTN","DGREG",71,0)
 .S DA(1)=DFN,DA=DFN1,DIK="^DPT("_DFN_",""DIS"","
"RTN","DGREG",72,0)
 .D ^DIK
"RTN","DGREG",73,0)
 .W !!?5,"User Time-out.  Required registration data could be missing."
"RTN","DGREG",74,0)
 .W !,?5,"This registration has been deleted."
"RTN","DGREG",75,0)
 ; check whether facility applying to (division) is inactive
"RTN","DGREG",76,0)
 I '$$DIVCHK^DGREGFAC(DFN,DFN1) G CONT
"RTN","DGREG",77,0)
ASKDIV W !!?5,"The facility chosen either has no pointer to an Institution"
"RTN","DGREG",78,0)
 W !?5,"file record or the Institution file record is inactive."
"RTN","DGREG",79,0)
 W !?5,"Please choose another division."
"RTN","DGREG",80,0)
 S DA=DFN1,DIE("NO^")="",DA(1)=DFN,DP=2.101,DR="3" D ^DIE
"RTN","DGREG",81,0)
 I $$DIVCHK^DGREGFAC(DFN,DFN1) G ASKDIV
"RTN","DGREG",82,0)
CONT ; continue
"RTN","DGREG",83,0)
 S DGXXXD=1 D EL^DGREGE I $P(^DPT(DFN,"DIS",DFN1,0),"^",3)=4 S DA=DFN,DIE="^DPT(",DR=".368;.369" D ^DIE S DIE="^DPT("_DFN_",""DIS"",",DA(1)=DFN,DA=DFN1
"RTN","DGREG",84,0)
 S DA=DFN,DR="[DGREG]",DIE="^DPT(" D ^DIE K DIE("NO^")
"RTN","DGREG",85,0)
 I $D(^DPT(DFN,"DIS",DFN1,2)),$P(^(2),"^",1)="Y" S DIE="^DPT(",DR="[DG EMPLOYER]",DA=DFN D ^DIE
"RTN","DGREG",86,0)
 G ^DGREG0
"RTN","DGREG",87,0)
PR2 W !!,"You can only enter new registrations through this option.",$C(7),$C(7) G REG
"RTN","DGREG",88,0)
PR3 W !!,"Time is required to register the patient.",!!,$C(7),$C(7) G REG
"RTN","DGREG",89,0)
H W !?5,"Enter 'YES' to enter/edit registration data or 'NO' to continue." G A1
"RTN","DGREG",90,0)
Q K DG,DQ G Q1^DGREG0
"RTN","DGREG",91,0)
Q1 K DGIO,DGASKDEV,DGFC,DGCLRP,CURR,DGELVER,DGNEW Q
"RTN","DGREG",92,0)
EL S DR=DR_";13//" I $D(^DPT(DFN,.36)),$D(^DIC(8,+^(.36),0)) S DR=DR_$P(^(0),"^",1) Q
"RTN","DGREG",93,0)
 S DR=DR_"HUMANITARIAN EMERGENCY" Q
"RTN","DGREG",94,0)
FEE S DGRPFEE=1 D DGREG K DGRPFEE G Q1
"RTN","DGREG",95,0)
 ;
"RTN","DGREG",96,0)
WARN I $S('$D(^DPT(DFN,.1)):0,$P(^(.1),"^",1)']"":0,1:1) W !,$C(7),"***PATIENT IS CURRENTLY AN INPATIENT***",! H 2
"RTN","DGREG",97,0)
 I $S('$D(^DPT(DFN,.107)):0,$P(^(.107),"^",1)']"":0,1:1) W !,$C(7),"***PATIENT IS CURRENTLY A LODGER***",! H 2
"RTN","DGREG",98,0)
 Q
"RTN","DGREG",99,0)
MSG W !,"Another user is editing, try later ..." G Q
"RTN","DGREG",100,0)
 ;
"RTN","DGREG",101,0)
BEGINREG(DFN) ;
"RTN","DGREG",102,0)
 N DGQRY
"RTN","DGREG",103,0)
 ;Description: This is called at the beginning of the registration process.
"RTN","DGREG",104,0)
 ;Concurrent processes can check the lock to determine if the patient is
"RTN","DGREG",105,0)
 ;currently being registered.
"RTN","DGREG",106,0)
 ;
"RTN","DGREG",107,0)
 Q:'$G(DFN) 0
"RTN","DGREG",108,0)
 ; **915, check to see if a query was done within the last 5 minutes so we don't send again
"RTN","DGREG",109,0)
 S DGQRY=$$GET^DGENQRY($$FINDLAST^DGENQRY($G(DFN)),.DGQRY)
"RTN","DGREG",110,0)
 I $$FMDIFF^XLFDT($$NOW^XLFDT,$G(DGQRY("SENT")),2)>300,$$QRY^DGENQRY(DFN) W !!,"Enrollment/Eligibility Query sent ...",!!
"RTN","DGREG",111,0)
 ;patch 886 changed lock to use dilocktm
"RTN","DGREG",112,0)
 L +^TMP(DFN,"REGISTRATION IN PROGRESS"):$G(DILOCKTM,3)
"RTN","DGREG",113,0)
 I $$LOCK^DGENPTA1(DFN) ;try to lock the patient record
"RTN","DGREG",114,0)
 Q
"RTN","DGREG",115,0)
 ;
"RTN","DGREG",116,0)
ENDREG(DFN) ;
"RTN","DGREG",117,0)
 ;Description: releases the lock obtained by calling BEGINREG.
"RTN","DGREG",118,0)
 ;
"RTN","DGREG",119,0)
 Q:'$G(DFN)
"RTN","DGREG",120,0)
 L -^TMP(DFN,"REGISTRATION IN PROGRESS")
"RTN","DGREG",121,0)
 D UNLOCK^DGENPTA1(DFN)
"RTN","DGREG",122,0)
 Q
"RTN","DGREG",123,0)
 ;
"RTN","DGREG",124,0)
IFREG(DFN) ;
"RTN","DGREG",125,0)
 ;Description: tests whether the lock set by BEGINREG is set
"RTN","DGREG",126,0)
 ;
"RTN","DGREG",127,0)
 ;Input:  DFN
"RTN","DGREG",128,0)
 ;Output:
"RTN","DGREG",129,0)
 ;      Function Value = 1 if lock is set, 0 otherwise
"RTN","DGREG",130,0)
 ;
"RTN","DGREG",131,0)
 N RETURN
"RTN","DGREG",132,0)
 Q:'$G(DFN) 0
"RTN","DGREG",133,0)
 ;patch 886 changed lock to use dilocktm
"RTN","DGREG",134,0)
 L +^TMP(DFN,"REGISTRATION IN PROGRESS"):$G(DILOCKTM,3)
"RTN","DGREG",135,0)
 S RETURN='$T
"RTN","DGREG",136,0)
 L -^TMP(DFN,"REGISTRATION IN PROGRESS")
"RTN","DGREG",137,0)
 Q RETURN
"RTN","DGREG",138,0)
 Q
"RTN","DGREG",139,0)
CIRN ;MPI QUERY
"RTN","DGREG",140,0)
 ;check to see if CIRN PD/MPI is installed
"RTN","DGREG",141,0)
 N X S X="MPIFAPI" X ^%ZOSF("TEST") Q:'$T
"RTN","DGREG",142,0)
 K MPIFRTN
"RTN","DGREG",143,0)
 D MPIQ^MPIFAPI(DFN)
"RTN","DGREG",144,0)
 K MPIFRTN
"RTN","DGREG",145,0)
 Q
"RTN","DGREG",146,0)
ROMQRY ;**926 TRIGGER IB INSURANCE QUERY
"RTN","DGREG",147,0)
 N ZTSAVE,A,ZTRTN,ZTDESC,ZTIO,ZTDTH,DGMSG
"RTN","DGREG",148,0)
 ;Invoke IB Insurance Query (Patch IB*2.0*214)
"RTN","DGREG",149,0)
 S ZTSAVE("IBTYPE")=1,ZTSAVE("DFN")=DFN,ZTSAVE("IBDUZ")=$G(DUZ)
"RTN","DGREG",150,0)
 S ZTRTN="BACKGND^IBCNRDV",ZTDTH=$H,ZTDESC="IBCN INSURANCE QUERY TASK",ZTIO=""
"RTN","DGREG",151,0)
 D ^%ZTLOAD
"RTN","DGREG",152,0)
 ;display busy message to interactive users
"RTN","DGREG",153,0)
 S DGMSG(1)="Insurance data retrieval has been initiated."
"RTN","DGREG",154,0)
 S DGMSG(2)=" "
"RTN","DGREG",155,0)
 D EN^DDIOL(.DGMSG)
"RTN","DGREG",156,0)
 Q  ;**915 all register once functionality no longer executed.
"RTN","DGREG",157,0)
 I +$G(DGNEW) D
"RTN","DGREG",158,0)
 . ; query LST for Patient Demographic Information if NEW patient and
"RTN","DGREG",159,0)
 . ; file into patient's record.
"RTN","DGREG",160,0)
 . N A
"RTN","DGREG",161,0)
 . I $$ROMQRY^DGROAPI(DFN) D
"RTN","DGREG",162,0)
 . . ;display busy message to interactive users
"RTN","DGREG",163,0)
 . .S DGMSG(1)="Data retrieval from LST site has been completed successfully"
"RTN","DGREG",164,0)
 . .S DGMSG(2)="Thank you for your patience."
"RTN","DGREG",165,0)
 . .D EN^DDIOL(.DGMSG) R A:5
"RTN","DGREG",166,0)
 . E  D
"RTN","DGREG",167,0)
 . . ;display busy message to interactive users
"RTN","DGREG",168,0)
 . .S DGMSG(1)="Data retrieval from LST site has not been successful."
"RTN","DGREG",169,0)
 . .S DGMSG(2)="Please continue the Registration Process."
"RTN","DGREG",170,0)
 . .D EN^DDIOL(.DGMSG) R A:5
"RTN","DGREG",171,0)
 . ;
"RTN","DGREG",172,0)
 Q
"RTN","DPTLK7")
0^4^B199396274^B185524079
"RTN","DPTLK7",1,0)
DPTLK7 ;OAK/ELZ - MAS PATIENT LOOKUP ENTERPRISE SEARCH ; 8/24/15 2:38pm
"RTN","DPTLK7",2,0)
 ;;5.3;Registration;**915,919,926**;Aug 13, 1993;Build 6
"RTN","DPTLK7",3,0)
 ;
"RTN","DPTLK7",4,0)
SEARCH(DGX,DGXOLD) ; do a search, pass in what the user entered
"RTN","DPTLK7",5,0)
 ; DGX is what the user originally entered, name is assumed unless it
"RTN","DPTLK7",6,0)
 ; is exactly 9 digits, DON'T pass by reference it may change
"RTN","DPTLK7",7,0)
 ; Return:  DFN (new or found locally), 0 if nothing found/added
"RTN","DPTLK7",8,0)
 ;
"RTN","DPTLK7",9,0)
 N DG20NAME,DGMPI,DGFLDS,DGOUT,%,%Y,DGMPIR,DGDFN,DGMPIICN,DGSAVE
"RTN","DPTLK7",10,0)
 N DGKEYREQ,X,DA,DO,DIC,DGADDREQ,DGMCID
"RTN","DPTLK7",11,0)
 Q:$G(DGSEARCH) 0
"RTN","DPTLK7",12,0)
 S (DGKEYREQ,DGOUT,DGADDREQ)=0,DGSEARCH=1,DGSAVE=DGX
"RTN","DPTLK7",13,0)
 Q:$T(PATIENT^MPIFXMLP)="" 0
"RTN","DPTLK7",14,0)
 ;
"RTN","DPTLK7",15,0)
YN ;Enterprise Search?
"RTN","DPTLK7",16,0)
 W !,"Do you want to do an Enterprise Search"
"RTN","DPTLK7",17,0)
 D YN^DICN I %=0 W !,"You must enter Yes or No." G YN
"RTN","DPTLK7",18,0)
 Q:%'=1 0
"RTN","DPTLK7",19,0)
 ;
"RTN","DPTLK7",20,0)
 I $G(DGXOLD)]"" S DGX=DGXOLD
"RTN","DPTLK7",21,0)
 ; if yes then ask questions
"RTN","DPTLK7",22,0)
 ; if 9 digits entered assume ssn, need to save
"RTN","DPTLK7",23,0)
PROMPT I DGX?9N S DGFLDS(.09)=DGX,DGX=""
"RTN","DPTLK7",24,0)
 ; if name in "" need to remove
"RTN","DPTLK7",25,0)
 I $E(DGX,1)="""" S DGX=$E(DGX,2,99)
"RTN","DPTLK7",26,0)
 I $E(DGX,$L(DGX))="""" S DGX=$E(DGX,1,$L(DGX)-1)
"RTN","DPTLK7",27,0)
 D NAME(.DGX,.DG20NAME,.DGOUT) Q:DGOUT 0
"RTN","DPTLK7",28,0)
 D FLDS(.DGFLDS,DG20NAME,.DGOUT) Q:DGOUT 0
"RTN","DPTLK7",29,0)
 I $G(DGFLDS(.09))'?9N S DGADDREQ=1
"RTN","DPTLK7",30,0)
 D:DGADDREQ ADDRESS(.DGFLDS,.DGOUT) Q:DGOUT 0
"RTN","DPTLK7",31,0)
 I DGADDREQ,'$$ADDREQ(.DGFLDS) D  G PROMPT
"RTN","DPTLK7",32,0)
 . W !,"You must enter an actual SSN, a COMPLETE Address or Phone to search.",!
"RTN","DPTLK7",33,0)
 . K DGX,DG20NAME,DGFLDS,DGMPI,DGMPIR
"RTN","DPTLK7",34,0)
 . S DGX=DGSAVE
"RTN","DPTLK7",35,0)
 ;
"RTN","DPTLK7",36,0)
 ; call MPI to get data
"RTN","DPTLK7",37,0)
 W !!,"Searching the MVI..."
"RTN","DPTLK7",38,0)
 D FORMAT(.DGMPI,.DG20NAME,.DGFLDS)
"RTN","DPTLK7",39,0)
 D PATIENT^MPIFXMLP(.DGMPIR,.DGMPI)
"RTN","DPTLK7",40,0)
 S DGMCID=$G(DGMPIR("mcid"))
"RTN","DPTLK7",41,0)
 ;
"RTN","DPTLK7",42,0)
 ; too many matches found, they need to get the numbers down, re-prompt
"RTN","DPTLK7",43,0)
 I $G(DGMPIR("count"))>10!($G(DGMPIR("Result"))="QE") D  G PROMPT
"RTN","DPTLK7",44,0)
 . W !,$S(DGMPIR("count")>10:DGMPIR("count"),1:"Too many")," records found, you need to provide more specific criteria.",!
"RTN","DPTLK7",45,0)
 . K DGX,DG20NAME,DGFLDS,DGMPI,DGMPIR
"RTN","DPTLK7",46,0)
 . S DGX=DGSAVE
"RTN","DPTLK7",47,0)
 ;
"RTN","DPTLK7",48,0)
 ; no matches found on the MPI offer to add
"RTN","DPTLK7",49,0)
 I '$G(DGMPIR("count")) W !,"No records found on the MVI.",! D  Q DGDFN
"RTN","DPTLK7",50,0)
 . S DPTX=$G(DGFLDS(.01)) D ASKADD^DPTLK2 I DPTDFN'>0 S DGDFN=0 Q
"RTN","DPTLK7",51,0)
 . S DGDFN=$$ADD(.DGFLDS,.DG20NAME) Q:'DGDFN
"RTN","DPTLK7",52,0)
 . ;
"RTN","DPTLK7",53,0)
 . ; setup DGMPIR since there was nothing
"RTN","DPTLK7",54,0)
 . M DGMPIR(1)=DGMPI
"RTN","DPTLK7",55,0)
 . S DGMPIR(+$O(DGMPIR(0)),"DFN")=DGDFN
"RTN","DPTLK7",56,0)
 . ;
"RTN","DPTLK7",57,0)
 . S DGMPIR("mcid")=DGMCID
"RTN","DPTLK7",58,0)
 . D MPIADD(.DGMPIR)
"RTN","DPTLK7",59,0)
 ;
"RTN","DPTLK7",60,0)
 ; do I have some records that are in autolink threshold? - key required
"RTN","DPTLK7",61,0)
 S X=0 F  S X=$O(DGMPIR(X)) Q:'X  I $G(DGMPIR(X,"Score"))'<$G(DGMPIR("matchThreshold")) S DGKEYREQ=1
"RTN","DPTLK7",62,0)
 ;
"RTN","DPTLK7",63,0)
 ; preset list to select patients
"RTN","DPTLK7",64,0)
 S DGDFN=$$ENP^MPIFVER(.DGMPIR,$G(DGMPIR("matchThreshold")),$G(DGMPIR("dupeThreshold")))
"RTN","DPTLK7",65,0)
 ;
"RTN","DPTLK7",66,0)
 ; found and selected local patient
"RTN","DPTLK7",67,0)
 I DGDFN>0 Q DGDFN
"RTN","DPTLK7",68,0)
 I DGDFN=-1 S DPTX="" Q 0
"RTN","DPTLK7",69,0)
 ;
"RTN","DPTLK7",70,0)
 ; need to add new patient based on return from selection
"RTN","DPTLK7",71,0)
 I $D(DGMPIR)>1 K DG20NAME D FORMATR(.DGFLDS,.DGMPIR,.DG20NAME) S DGDFN=$$ADD(.DGFLDS,.DG20NAME) D:DGDFN  G QUIT
"RTN","DPTLK7",72,0)
 . ;
"RTN","DPTLK7",73,0)
 . S DGMPIR(+$O(DGMPIR(0)),"DFN")=DGDFN
"RTN","DPTLK7",74,0)
 . ;
"RTN","DPTLK7",75,0)
 . S DGMPIR("mcid")=DGMCID
"RTN","DPTLK7",76,0)
 . D MPIADD(.DGMPIR)
"RTN","DPTLK7",77,0)
 . W !
"RTN","DPTLK7",78,0)
 . ;
"RTN","DPTLK7",79,0)
 . ; if known to ESR, send Z11 and monitor for return data
"RTN","DPTLK7",80,0)
 . I $G(DGMPIR(1,"Z11")) D
"RTN","DPTLK7",81,0)
 .. W !,"Adding site correlation to MVI "
"RTN","DPTLK7",82,0)
 .. N DGTIME,DGQRY,DGDONE,DGQSTAT
"RTN","DPTLK7",83,0)
 .. S (DGQSTAT,DGDONE)=0
"RTN","DPTLK7",84,0)
 .. F DGTIME=1:1:60 D
"RTN","DPTLK7",85,0)
 ... I $D(^XTMP("DPTLK7 A24 IN-PROCESS",DGDFN)) W "." H 1 Q
"RTN","DPTLK7",86,0)
 ... ;
"RTN","DPTLK7",87,0)
 ... ; not sending, maybe already sent or it is turned off
"RTN","DPTLK7",88,0)
 ... I 'DGDONE  S DGDONE=1 D  W "." H 1 Q
"RTN","DPTLK7",89,0)
 .... I $$QRY^DGENQRY(DGDFN) W !,"Enrollment/Eligibility Query processing "
"RTN","DPTLK7",90,0)
 ... ;
"RTN","DPTLK7",91,0)
 ... ; check for status until it is returned, end with set to 60 seconds
"RTN","DPTLK7",92,0)
 ... S DGQRY=$$GET^DGENQRY($$FINDLAST^DGENQRY($G(DGDFN)),.DGQRY) I $G(DGQRY("STATUS"))>2 S DGTIME=60,DGQSTAT=1 Q
"RTN","DPTLK7",93,0)
 ... W "." H 1
"RTN","DPTLK7",94,0)
 .. I 'DGQSTAT D
"RTN","DPTLK7",95,0)
 ... W !,"Query to ES timed out, proceeding with registration."
"RTN","DPTLK7",96,0)
 ... W !,"The data will be uploaded when received."
"RTN","DPTLK7",97,0)
 .. W !!
"RTN","DPTLK7",98,0)
 ;
"RTN","DPTLK7",99,0)
 ; no one selected but may still need to add based on traits entered
"RTN","DPTLK7",100,0)
 I DGKEYREQ,'$D(^XUSEC("DG MVI ADD PT",DUZ)) D
"RTN","DPTLK7",101,0)
 . W !,"The search returned one or more patients above the Auto-Link threshold,"
"RTN","DPTLK7",102,0)
 . W !,"none of them selected. Security key required to add without selection."
"RTN","DPTLK7",103,0)
 E  D
"RTN","DPTLK7",104,0)
 . N DPTDFN,DPTX,Y,%,%Y,DGMPIR
"RTN","DPTLK7",105,0)
 . M DGMPIR(1)=DGMPI
"RTN","DPTLK7",106,0)
 . S DPTX=$G(DGFLDS(.01)) D ASKADD^DPTLK2 I DPTDFN'>0 S DGDFN=0 Q
"RTN","DPTLK7",107,0)
 . S DGDFN=$$ADD(.DGFLDS,.DG20NAME) Q:'DGDFN
"RTN","DPTLK7",108,0)
 . S DGMPIR(+$O(DGMPIR(0)),"DFN")=DGDFN
"RTN","DPTLK7",109,0)
 . S DGMPIR("AddType")=$S(DGKEYREQ:"Explicit",1:"Implicit")
"RTN","DPTLK7",110,0)
 . S DGMPIR("mcid")=DGMCID
"RTN","DPTLK7",111,0)
 . D MPIADD(.DGMPIR)
"RTN","DPTLK7",112,0)
 ;
"RTN","DPTLK7",113,0)
QUIT Q $S(DGDFN:DGDFN,1:0)
"RTN","DPTLK7",114,0)
 ;
"RTN","DPTLK7",115,0)
MPIADD(DGMPIR) ; - call to add patient to the MPI and store ICN locally
"RTN","DPTLK7",116,0)
 ; - web service call for adding and getting new ICN
"RTN","DPTLK7",117,0)
 I '$G(DGMPIR(+$O(DGMPIR(0)),"ICN")) D
"RTN","DPTLK7",118,0)
 . W !,"Adding patient to the MVI..."
"RTN","DPTLK7",119,0)
 . N DGMPIICN
"RTN","DPTLK7",120,0)
 . I '$D(DGMPIR("AddType")) S DGMPIR("AddType")="Implicit"
"RTN","DPTLK7",121,0)
 . D GETICN^MPIFXMLI(.DGMPIICN,.DGMPIR)
"RTN","DPTLK7",122,0)
 . I $G(DGMPIICN("ICN"))>0 S DGMPIR(+$O(DGMPIR(0)),"ICN")=DGMPIICN("ICN")
"RTN","DPTLK7",123,0)
 . E  D  Q
"RTN","DPTLK7",124,0)
 .. W !,"Unable to add to MVI!",!,$G(DGMPIICN("ERRTXT")),!
"RTN","DPTLK7",125,0)
 .. S ^XTMP("MPIF EXPLICIT QUEUE",0)=$$FMADD^XLFDT(DT,60)_"^"_DT_"^MPIF EXPLICIT QUEUE"
"RTN","DPTLK7",126,0)
 .. S ^XTMP("MPIF EXPLICIT QUEUE",DGDFN)=DT_"^"_DGMPIR("AddType")_"^"_$G(DGMPIR(+$O(DGMPIR(0)),"mcid"))_"^"_$G(DGMPIICN("ERRTXT"))
"RTN","DPTLK7",127,0)
 .. S X=$$ICNLC^MPIF001(DGDFN)
"RTN","DPTLK7",128,0)
 ;
"RTN","DPTLK7",129,0)
 ; - need to have MPI do MPI fields
"RTN","DPTLK7",130,0)
 S ^XTMP("DPTLK7 A24 IN-PROCESS",0)=$$FMADD^XLFDT(DT,10)_"^"_DT_"^TRACK PROCESSING OF A24 MESSAGES"
"RTN","DPTLK7",131,0)
 S ^XTMP("DPTLK7 A24 IN-PROCESS",DGDFN)=DT
"RTN","DPTLK7",132,0)
 I $G(DGMPIR(+$O(DGMPIR(0)),"ICN")) D VIC40^MPIFAPI(DGDFN,DGMPIR(+$O(DGMPIR(0)),"ICN"))
"RTN","DPTLK7",133,0)
 Q
"RTN","DPTLK7",134,0)
 ;
"RTN","DPTLK7",135,0)
NAME(DGX,DG20NAME,DGOUT) ;- ask for name components
"RTN","DPTLK7",136,0)
 N DGC,DGCL,DGCOM,DGCX,DGI,DGY,DIR,X,DGCOMP
"RTN","DPTLK7",137,0)
START S DGOUT=0
"RTN","DPTLK7",138,0)
 S DGCOM="FAMILY^GIVEN^MIDDLE^PREFIX^SUFFIX^DEGREE"
"RTN","DPTLK7",139,0)
 S DGCX=" (LAST) NAME^ (FIRST) NAME^ NAME"
"RTN","DPTLK7",140,0)
 S DGCL="1:35^1:25^1:25^1:10^1:10^1:10"
"RTN","DPTLK7",141,0)
 I $G(DGX)'?9N S DGX=$G(DGX) D STDNAME^XLFNAME(.DGX,"C")
"RTN","DPTLK7",142,0)
 S DGX("SUFFIX")=$$CLEANC^XLFNAME(DGX("SUFFIX"))
"RTN","DPTLK7",143,0)
 M DG20NAME=DGX
"RTN","DPTLK7",144,0)
 S DIR("PRE")="D:X'=""@"" NCEVAL^DPTNAME1(DGCOMP,.X)"
"RTN","DPTLK7",145,0)
 W !,"Patient name components--"
"RTN","DPTLK7",146,0)
 F DGI=1:1:6 S DGC($P(DGCOM,U,DGI),DGI)=""
"RTN","DPTLK7",147,0)
 F DGI=1:1:6 Q:DGOUT  D
"RTN","DPTLK7",148,0)
AGAIN .S DGCOMP=$P(DGCOM,U,DGI)
"RTN","DPTLK7",149,0)
 . S DIR("A")=DGCOMP_$P(DGCX,U,DGI)
"RTN","DPTLK7",150,0)
 . S DIR(0)=$S(DGI=1:"F^"_$P(DGCL,U,DGI),1:"FO^"_$P(DGCL,U,DGI))
"RTN","DPTLK7",151,0)
 . S DIR("PRE")="D NCEVAL^DPTNAME1(DGCOMP,.X)"
"RTN","DPTLK7",152,0)
 . S DIR("B")=$S($D(DG20NAME(DGCOMP)):DG20NAME(DGCOMP),1:$G(DGX(DGCOMP)))
"RTN","DPTLK7",153,0)
 . K:'$L(DIR("B")) DIR("B")
"RTN","DPTLK7",154,0)
ASK . D ^DIR I $D(DTOUT)!(X=U) S DGOUT=1 Q
"RTN","DPTLK7",155,0)
 . I $A(X)=94 D JUMP^DPTNAME1(.DGI) G AGAIN
"RTN","DPTLK7",156,0)
 . I X="@",DGI=1 W !,$C(7),"Family name cannot be deleted!" G ASK
"RTN","DPTLK7",157,0)
 . I X="@" S DG20NAME(DGCOMP)="" Q
"RTN","DPTLK7",158,0)
 . Q:'$L(X)
"RTN","DPTLK7",159,0)
 . S DG20NAME=X
"RTN","DPTLK7",160,0)
 . I DGCOMP="SUFFIX" S DG20NAME=$$CLEANC^XLFNAME(DG20NAME)
"RTN","DPTLK7",161,0)
 . S DG20NAME=$$FORMAT^XLFNAME7(DG20NAME,1,35,,3,,1,1)
"RTN","DPTLK7",162,0)
 . I '$L(DG20NAME) W "  ??",$C(7) G ASK
"RTN","DPTLK7",163,0)
 . W:DG20NAME'=X "   (",DG20NAME,")" S DG20NAME(DGCOMP)=DG20NAME
"RTN","DPTLK7",164,0)
 Q:DGOUT ""
"RTN","DPTLK7",165,0)
 ; Reconstruct name
"RTN","DPTLK7",166,0)
 S DG20NAME=$$NAMEFMT^XLFNAME(.DG20NAME,"F","CFL30")
"RTN","DPTLK7",167,0)
 ; Format the .01 value
"RTN","DPTLK7",168,0)
 M DGY=DG20NAME
"RTN","DPTLK7",169,0)
 S DG20NAME=$$FORMAT^XLFNAME7(.DGY,3,30,,2)
"RTN","DPTLK7",170,0)
 ; Check the length
"RTN","DPTLK7",171,0)
 I $L(DG20NAME)<3 D  G START
"RTN","DPTLK7",172,0)
 . W !,"Invalid values to use, full name must be at least 3 characters!",$C(7)
"RTN","DPTLK7",173,0)
 . K DG20NAME,DGX,DGCOMP
"RTN","DPTLK7",174,0)
 Q
"RTN","DPTLK7",175,0)
 ;
"RTN","DPTLK7",176,0)
ADDRESS(DGFLDS,DGOUT) ;- prompt for address
"RTN","DPTLK7",177,0)
 N DGRET,FSTR
"RTN","DPTLK7",178,0)
 ;.111 STREET ADDRESS [LINE 1] (both, free text)
"RTN","DPTLK7",179,0)
 ;.112 STREET ADDRESS [LINE 2] (both, free text)
"RTN","DPTLK7",180,0)
 ;.113 STREET ADDRESS [LINE 3] (both, free text)
"RTN","DPTLK7",181,0)
 ;.114 CITY (both, free text)
"RTN","DPTLK7",182,0)
 ;.115 STATE (external^internal)
"RTN","DPTLK7",183,0)
 ;.116 ZIP CODE (both, free text)
"RTN","DPTLK7",184,0)
 ;.117 COUNTY (external^internal^code)
"RTN","DPTLK7",185,0)
 ;.1171 PROVINCE (both, free text)
"RTN","DPTLK7",186,0)
 ;.1172 POSTAL CODE (both, free text)
"RTN","DPTLK7",187,0)
 ;.1112 ZIP+4 (both, free text)
"RTN","DPTLK7",188,0)
 ;.1173 COUNTRY (external^internal)
"RTN","DPTLK7",189,0)
 ;.121 BAD ADDRESS INDICATOR (external^internal)
"RTN","DPTLK7",190,0)
 W !,"Patient address--"
"RTN","DPTLK7",191,0)
 D EN^DGREGAED(,,,.DGRET)
"RTN","DPTLK7",192,0)
 ; address doesn't prompt for phone but returns it, don't want
"RTN","DPTLK7",193,0)
 ; to overwrite
"RTN","DPTLK7",194,0)
 K DGRET(.131)
"RTN","DPTLK7",195,0)
 M DGFLDS=DGRET
"RTN","DPTLK7",196,0)
 Q
"RTN","DPTLK7",197,0)
FLDS(DGFLDS,DGNAME,DGOUT) ;- prompt for the various FM fields
"RTN","DPTLK7",198,0)
 ; Data returned in array
"RTN","DPTLK7",199,0)
 ;DGFLDS(.09)=SSN*
"RTN","DPTLK7",200,0)
 ;DGFLDS(.03)=DOB*
"RTN","DPTLK7",201,0)
 ;DGFLDS(.02)=GENDER*
"RTN","DPTLK7",202,0)
 ;DGFLDS(.2403)=MMN
"RTN","DPTLK7",203,0)
 ;DGFLDS(.092)=POB (city)
"RTN","DPTLK7",204,0)
 ;DGFLDS(.093)=POB (state)
"RTN","DPTLK7",205,0)
 ;DGFLDS(994)=MBI
"RTN","DPTLK7",206,0)
 ;DGFLDS(.131)=PHONE
"RTN","DPTLK7",207,0)
 ;DGFLDS("EDIPI")=EDIPI
"RTN","DPTLK7",208,0)
 ;
"RTN","DPTLK7",209,0)
 W !,"Patient identifiers--"
"RTN","DPTLK7",210,0)
 ; SSN is special handling
"RTN","DPTLK7",211,0)
 N DGFLD,DIR,X,Y,DG20NAME
"RTN","DPTLK7",212,0)
 S DIR(0)="F^1:9^K:X'?9N&(X'=""P"")&(X'=""p"") X"
"RTN","DPTLK7",213,0)
 S DIR("A")="SOCIAL SECURITY NUMBER"
"RTN","DPTLK7",214,0)
 S:$D(DGFLDS(.09)) DIR("B")=DGFLDS(.09)
"RTN","DPTLK7",215,0)
 S DIR("?")="Answer with the individual's social security, must be 9 numbers or 'P'."
"RTN","DPTLK7",216,0)
 D ^DIR
"RTN","DPTLK7",217,0)
 I $D(DUOUT) S DGOUT=1 Q
"RTN","DPTLK7",218,0)
 S DGFLDS(.09)=X
"RTN","DPTLK7",219,0)
 K DIR
"RTN","DPTLK7",220,0)
 ; Story 338378 (elz) if pseudo, prompt pseudo reason
"RTN","DPTLK7",221,0)
 I DGFLDS(.09)="P"!(DGFLDS(.09)="p") D PSREASON(.DGFLDS,.DGOUT)  Q:DGOUT
"RTN","DPTLK7",222,0)
 ; prompt for EDIPI value before the FM fields
"RTN","DPTLK7",223,0)
 ;S DIR(0)="FO^10^K:X'?10N X"
"RTN","DPTLK7",224,0)
 ;S DIR("A")="EDIPI"
"RTN","DPTLK7",225,0)
 ;S DIR("?")="Answer with the individual's EDIPI, must be 10 numbers."
"RTN","DPTLK7",226,0)
 ;D ^DIR
"RTN","DPTLK7",227,0)
 ;I $D(DUOUT) S DGOUT=1 Q
"RTN","DPTLK7",228,0)
 ;S DGFLDS("EDIPI")=X
"RTN","DPTLK7",229,0)
 ;K DIR
"RTN","DPTLK7",230,0)
 F DGFLD=.03,.02,.2403,.092,.093,994,.131 D  Q:$D(DTOUT)!($D(DUOUT))
"RTN","DPTLK7",231,0)
 . S DIR(0)="2,"_DGFLD_$S(DGFLD=.03:"",DGFLD=.02:"",1:"O")
"RTN","DPTLK7",232,0)
 . D ^DIR
"RTN","DPTLK7",233,0)
 . Q:$D(DIRUT)
"RTN","DPTLK7",234,0)
 . S DGFLDS(DGFLD)=$P(Y,"^")
"RTN","DPTLK7",235,0)
 S:$D(DTOUT)!($D(DUOUT)) DGOUT=1
"RTN","DPTLK7",236,0)
 I $L($G(DGNAME)) S DGFLDS(.01)=DGNAME
"RTN","DPTLK7",237,0)
 Q
"RTN","DPTLK7",238,0)
 ;
"RTN","DPTLK7",239,0)
PSREASON(DGFLDS,DGOUT) ; - prompts (and requires) pseudo reason
"RTN","DPTLK7",240,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT,DIRUT,DPTSET,P
"RTN","DPTLK7",241,0)
 S DPTSET=$P(^DD(2,.0906,0),"^",3)
"RTN","DPTLK7",242,0)
PSAGAIN S DIR(0)="2,.0906" D ^DIR
"RTN","DPTLK7",243,0)
 I $D(DTOUT)!($D(DUOUT))!($D(DIROUT)) S DGOUT=1 Q
"RTN","DPTLK7",244,0)
 I Y="" W *7,"??",!!,"Choose from:" D
"RTN","DPTLK7",245,0)
 . F P=1:1 Q:$P(DPTSET,";",P)=""  W !,$P($P(DPTSET,";",P),":"),?10,$P($P(DPTSET,";",P),":",2)
"RTN","DPTLK7",246,0)
 . W ! G PSAGAIN
"RTN","DPTLK7",247,0)
 I Y["^" S DGOUT=1 Q
"RTN","DPTLK7",248,0)
 S DGFLDS(.0906)=$P(Y,":")
"RTN","DPTLK7",249,0)
 Q
"RTN","DPTLK7",250,0)
FORMAT(DGR,DGN,DGF) ; - format data for MPI call
"RTN","DPTLK7",251,0)
 N X
"RTN","DPTLK7",252,0)
 S:$G(DGN("FAMILY"))]"" DGR("Surname")=DGN("FAMILY")
"RTN","DPTLK7",253,0)
 S:$G(DGN("GIVEN"))]"" DGR("FirstName")=DGN("GIVEN")
"RTN","DPTLK7",254,0)
 S:$G(DGN("MIDDLE"))]"" DGR("MiddleName")=DGN("MIDDLE")
"RTN","DPTLK7",255,0)
 S:$G(DGN("SUFFIX"))]"" DGR("Suffix")=DGN("SUFFIX")
"RTN","DPTLK7",256,0)
 S:$G(DGN("PREFIX"))]"" DGR("Prefix")=DGN("PREFIX")
"RTN","DPTLK7",257,0)
 S:$G(DGN("DEGREE"))]"" DGR("Degree")=DGN("DEGREE")
"RTN","DPTLK7",258,0)
 S:$G(DGF(.02))]"" DGR("Gender")=DGF(.02)
"RTN","DPTLK7",259,0)
 S:$G(DGF(.03))]"" DGR("DOB")=DGF(.03)
"RTN","DPTLK7",260,0)
 I $G(DGF(.09))]"",DGF(.09)'="P",DGF(.09)'="p" S DGR("SSN")=DGF(.09)
"RTN","DPTLK7",261,0)
 S:$G(DGF(.2403))]"" DGR("MMN")=DGF(.2403)
"RTN","DPTLK7",262,0)
 S:$G(DGF(.092))]"" DGR("POBCity")=DGF(.092)
"RTN","DPTLK7",263,0)
 S:$G(DGF(.093)) DGR("POBState")=$P($G(^DIC(5,DGF(.093),0)),"^",2)
"RTN","DPTLK7",264,0)
 S:$G(DGF(994))]"" DGR("MBI")=DGF(994)
"RTN","DPTLK7",265,0)
 S:$G(DGF(.131))]"" DGR("ResPhone")=DGF(.131)
"RTN","DPTLK7",266,0)
 S:$D(DGF("EDIPI")) DGR("EDIPI")=DGF("EDIPI")
"RTN","DPTLK7",267,0)
 ;
"RTN","DPTLK7",268,0)
 ; only include address if deliverable
"RTN","DPTLK7",269,0)
 I $G(DGF(.121))]"" D
"RTN","DPTLK7",270,0)
 . S:$G(DGF(.111))]"" DGR("ResAddL1")=DGF(.111)
"RTN","DPTLK7",271,0)
 . S:$G(DGF(.1112))]"" DGR("ResAddZip4")=DGF(.1112)
"RTN","DPTLK7",272,0)
 . S:$G(DGF(.112))]"" DGR("ResAddL2")=DGF(.112)
"RTN","DPTLK7",273,0)
 . S:$G(DGF(.113))]"" DGR("ResAddL3")=DGF(.113)
"RTN","DPTLK7",274,0)
 . S:$G(DGF(.114))]"" DGR("CITY")=DGF(.114)
"RTN","DPTLK7",275,0)
 . S:$P($G(DGF(.115)),"^",2) DGR("ResAddState")=$P($G(^DIC(5,$P(DGF(.115),"^",2),0)),"^",2)
"RTN","DPTLK7",276,0)
 . S:$G(DGF(.1171))]"" DGR("ResAddProvince")=DGF(.1171)
"RTN","DPTLK7",277,0)
 . S:$G(DGF(.1172))]"" DGR("ResAddPCode")=DGF(.1172)
"RTN","DPTLK7",278,0)
 . S:$P($G(DGF(.1173)),"^")]"" DGR("ResAddCountry")=$P(DGF(.1173),"^")
"RTN","DPTLK7",279,0)
 Q
"RTN","DPTLK7",280,0)
 ;
"RTN","DPTLK7",281,0)
FORMATR(DGF,DGM,DG20NAME) ; - merge MPI and user input (MPI authorative)
"RTN","DPTLK7",282,0)
 N DGX,DGY,DGZ
"RTN","DPTLK7",283,0)
 S DGX=$O(DGM(0)) Q:'DGX
"RTN","DPTLK7",284,0)
 S DG20NAME("FAMILY")=$G(DGM(DGX,"Surname"))
"RTN","DPTLK7",285,0)
 S DG20NAME("GIVEN")=$G(DGM(DGX,"FirstName"))
"RTN","DPTLK7",286,0)
 S DG20NAME("MIDDLE")=$G(DGM(DGX,"MiddleName"))
"RTN","DPTLK7",287,0)
 S DG20NAME("PREFIX")=$G(DGM(DGX,"Prefix"))
"RTN","DPTLK7",288,0)
 S DG20NAME("SUFFIX")=$G(DGM(DGX,"Suffix"))
"RTN","DPTLK7",289,0)
 S DG20NAME("DEGREE")=$G(DGM(DGX,"Degree"))
"RTN","DPTLK7",290,0)
 ;Reconstruct name
"RTN","DPTLK7",291,0)
 S DG20NAME=$$NAMEFMT^XLFNAME(.DG20NAME,"F","CFL30")
"RTN","DPTLK7",292,0)
 ;Format the .01 value
"RTN","DPTLK7",293,0)
 M DGY=DG20NAME
"RTN","DPTLK7",294,0)
 S DGF(.01)=$$FORMAT^XLFNAME7(.DGY,3,30,,2)
"RTN","DPTLK7",295,0)
 S DGF(.02)=$G(DGM(DGX,"Gender"))
"RTN","DPTLK7",296,0)
 S DGF(.03)=$G(DGM(DGX,"DOB"))
"RTN","DPTLK7",297,0)
 S DGF(.09)=$G(DGM(DGX,"SSN"))
"RTN","DPTLK7",298,0)
 S DGF(.2403)=$G(DGM(DGX,"MMN"))
"RTN","DPTLK7",299,0)
 S DGF(.092)=$G(DGM(DGX,"POBCity"))
"RTN","DPTLK7",300,0)
 S DGY=$S($G(DGM(DGX,"POBState"))]"":$O(^DIC(5,"C",DGM(DGX,"POBState"),0)),1:"")
"RTN","DPTLK7",301,0)
 S DGF(.093)=DGY
"RTN","DPTLK7",302,0)
 S:$G(DGM(DGX,"ResAddL1"))]"" DGF(.111)=DGM(DGX,"ResAddL1")
"RTN","DPTLK7",303,0)
 S:$G(DGM(DGX,"ResAddL2"))]"" DGF(.112)=DGM(DGX,"ResAddL2")
"RTN","DPTLK7",304,0)
 S:$G(DGM(DGX,"ResAddL3"))]"" DGF(.113)=DGM(DGX,"ResAddL3")
"RTN","DPTLK7",305,0)
 S:$G(DGM(DGX,"City"))]"" DGF(.114)=DGM(DGX,"City")
"RTN","DPTLK7",306,0)
 S:$G(DGM(DGX,"ResAddCity"))]"" DGF(.114)=DGM(DGX,"ResAddCity")
"RTN","DPTLK7",307,0)
 ;
"RTN","DPTLK7",308,0)
 S DGY=$S($G(DGM(DGX,"ResAddState"))]"":$O(^DIC(5,"C",DGM(DGX,"ResAddState"),0)),1:"")
"RTN","DPTLK7",309,0)
 S:DGY DGF(.115)=DGY
"RTN","DPTLK7",310,0)
 S DGY=$S($G(DGM(DGX,"Country"))]"":$O(^HL(779.004,"B",DGM(DGX,"Country"),0)),1:"")
"RTN","DPTLK7",311,0)
 S:DGY DGF(.1173)=DGY
"RTN","DPTLK7",312,0)
 S DGY=$S($G(DGM(DGX,"ResAddCountry"))]"":$O(^HL(779.004,"B",DGM(DGX,"ResAddCountry"),0)),1:"")
"RTN","DPTLK7",313,0)
 S:DGY DGF(.1173)=DGY
"RTN","DPTLK7",314,0)
 S:$G(DGM(DGX,"PCode"))]"" DGF(.1172)=DGM(DGX,"PCode")
"RTN","DPTLK7",315,0)
 S:$G(DGM(DGX,"ResAddPCode"))]"" DGF(.1172)=DGM(DGX,"ResAddPCode")
"RTN","DPTLK7",316,0)
 S:$G(DGM(DGX,"Province"))]"" DGF(.1171)=DGM(DGX,"Province")
"RTN","DPTLK7",317,0)
 S:$G(DGM(DGX,"ResAddProvince"))]"" DGF(.1171)=DGM(DGX,"ResAddProvince")
"RTN","DPTLK7",318,0)
 S:$G(DGM(DGX,"ResAddZip4"))]"" DGF(.1112)=DGM(DGX,"ResAddZip4")
"RTN","DPTLK7",319,0)
 S:$G(DGM(DGX,"ResPhone"))]"" DGF(.131)=DGM(DGX,"ResPhone")
"RTN","DPTLK7",320,0)
 I $G(DGF(.1112)) D
"RTN","DPTLK7",321,0)
 . N DGX,DGCNTY
"RTN","DPTLK7",322,0)
 . D POSTAL^XIPUTIL(DGF(.1112),.DGX)
"RTN","DPTLK7",323,0)
 . I $G(DGX("FIPS CODE"))]"",$G(DGX("STATE POINTER")) D
"RTN","DPTLK7",324,0)
 .. S DGCNTY=$$FIND1^DIC(5.01,","_DGX("STATE POINTER")_",","MOXQ",$E($G(DGX("FIPS CODE")),3,5),"C")
"RTN","DPTLK7",325,0)
 . I $D(DGCNTY) S DGF(.117)=DGCNTY
"RTN","DPTLK7",326,0)
 ; alias loop
"RTN","DPTLK7",327,0)
 S DGZ=0 F  S DGZ=$O(DGM(DGX,"ALIAS",DGZ)) Q:'DGZ  D
"RTN","DPTLK7",328,0)
 . N DGY,DG20NAME
"RTN","DPTLK7",329,0)
 . I $G(DGM(DGX,"ALIAS",DGZ,"Surname"))]"" D
"RTN","DPTLK7",330,0)
 .. S DG20NAME("FAMILY")=$G(DGM(DGX,"ALIAS",DGZ,"Surname"))
"RTN","DPTLK7",331,0)
 .. S DG20NAME("GIVEN")=$G(DGM(DGX,"ALIAS",DGZ,"FirstName"))
"RTN","DPTLK7",332,0)
 .. S DG20NAME("MIDDLE")=$G(DGM(DGX,"ALIAS",DGZ,"MiddleName"))
"RTN","DPTLK7",333,0)
 .. S DG20NAME("PREFIX")=$G(DGM(DGX,"ALIAS",DGZ,"Prefix"))
"RTN","DPTLK7",334,0)
 .. S DG20NAME("SUFFIX")=$G(DGM(DGX,"ALIAS",DGZ,"Suffix"))
"RTN","DPTLK7",335,0)
 .. S DG20NAME("DEGREE")=$G(DGM(DGX,"ALIAS",DGZ,"Degree"))
"RTN","DPTLK7",336,0)
 .. ;Reconstruct name
"RTN","DPTLK7",337,0)
 .. S DG20NAME=$$NAMEFMT^XLFNAME(.DG20NAME,"F","CFL30")
"RTN","DPTLK7",338,0)
 .. ;Format the .01 value
"RTN","DPTLK7",339,0)
 .. M DGY=DG20NAME
"RTN","DPTLK7",340,0)
 .. S DGF("ALIAS",DGZ,.01)=$$FORMAT^XLFNAME7(.DGY,3,30,,2)
"RTN","DPTLK7",341,0)
 . I $G(DGM(DGX,"ALIAS",DGZ,"SSN"))]"" S DGF("ALIAS",DGZ,1)=DGM(DGX,"ALIAS",DGZ,"SSN")
"RTN","DPTLK7",342,0)
 S:$G(DGM(DGX,"ICN"))]"" DGF("ICN")=DGM(DGX,"ICN")
"RTN","DPTLK7",343,0)
 ;
"RTN","DPTLK7",344,0)
 ; - Story 338378 (elz) handle pseudo SSN
"RTN","DPTLK7",345,0)
 I $G(DGF(.09))'?9N S DGF(.09)=$$PSEUDO($G(DGF(.01)),$G(DGF(.03)))
"RTN","DPTLK7",346,0)
 E  K DGF(.0906) ; remove pseudo reason if we have a ssn
"RTN","DPTLK7",347,0)
 ;
"RTN","DPTLK7",348,0)
 Q
"RTN","DPTLK7",349,0)
ADD(DGF,DG20NAME) ; - stuff in patient
"RTN","DPTLK7",350,0)
 ; Pass in the fields to set in the DGF array.
"RTN","DPTLK7",351,0)
 ; Alaso Name components in DG20NAME array.  Returns new DFN
"RTN","DPTLK7",352,0)
 N X,Y,SAVY,FDA,IEN,DATA,DO,DIC,DA,X,DLAYGO,REQ,VAFCNO,DGY,DPTX
"RTN","DPTLK7",353,0)
 I $E($G(DGF(.09)),1,9)'?9N S DGF(.09)=$$PSEUDO(DGF(.01),$G(DGF(.03)))
"RTN","DPTLK7",354,0)
 ; check for SSN already exist
"RTN","DPTLK7",355,0)
 S DGY=$O(^DPT("SSN",DGF(.09),0)) I DGY>0,$D(^DPT(DGY,0)) W *7,"  SSN Already used by patient '",$P(^(0),"^"),"'." Q 0
"RTN","DPTLK7",356,0)
 ;
"RTN","DPTLK7",357,0)
 S DIC("DR")="",REQ="^.02^.03^.09^"
"RTN","DPTLK7",358,0)
 S DGF=.01 F  S DGF=$O(DGF(DGF)) Q:'DGF  D
"RTN","DPTLK7",359,0)
 . ; if the data has a second piece, then that's internal value to use
"RTN","DPTLK7",360,0)
 . S DATA=$S($P(DGF(DGF),"^",2):$P(DGF(DGF),"^",2),1:DGF(DGF))
"RTN","DPTLK7",361,0)
 . I DATA]""!(REQ[("^"_DGF_"^")) S DIC("DR")=DIC("DR")_DGF_$S(DATA]"":"////"_DATA,1:"")_";"
"RTN","DPTLK7",362,0)
 ; patient type
"RTN","DPTLK7",363,0)
 S DIC("DR")=DIC("DR")_"391///"_$O(^DG(391,"B","NSC VETERAN",0))_";"
"RTN","DPTLK7",364,0)
 ; veteran
"RTN","DPTLK7",365,0)
 S DIC("DR")=DIC("DR")_"1901///Y;"
"RTN","DPTLK7",366,0)
 ; SC
"RTN","DPTLK7",367,0)
 S DIC("DR")=DIC("DR")_".301///N;"
"RTN","DPTLK7",368,0)
 ; date added
"RTN","DPTLK7",369,0)
 S DIC("DR")=DIC("DR")_".097////"_DT
"RTN","DPTLK7",370,0)
 ; who added
"RTN","DPTLK7",371,0)
 S:$G(DUZ) DIC("DR")=DIC("DR")_";.096////"_DUZ
"RTN","DPTLK7",372,0)
 ;
"RTN","DPTLK7",373,0)
 S X=DGF(.01),DIC="^DPT(",DIC(0)="L",DLAYGO=2,VAFCNO=1
"RTN","DPTLK7",374,0)
 D FILE^DICN
"RTN","DPTLK7",375,0)
 S SAVY=+Y
"RTN","DPTLK7",376,0)
 ;
"RTN","DPTLK7",377,0)
 ; alias
"RTN","DPTLK7",378,0)
 S X=0 F  S X=$O(DGF("ALIAS",X)) Q:'X  D
"RTN","DPTLK7",379,0)
 . S DGF=0 F  S DGF=$O(DGF("ALIAS",X,DGF)) Q:'DGF  D
"RTN","DPTLK7",380,0)
 .. S FDA(2.01,"+"_X_","_SAVY_",",.01)=DGF("ALIAS",X,.01)
"RTN","DPTLK7",381,0)
 .. S:DGF("ALIAS",X,1)]"" FDA(2.01,"+"_X_","_SAVY_",",1)=DGF("ALIAS",X,1)
"RTN","DPTLK7",382,0)
 ;
"RTN","DPTLK7",383,0)
 I $D(FDA) D
"RTN","DPTLK7",384,0)
 . N DG20NAME
"RTN","DPTLK7",385,0)
 . D UPDATE^DIE("","FDA")
"RTN","DPTLK7",386,0)
 ;
"RTN","DPTLK7",387,0)
 ; send bulletin new patient added to system
"RTN","DPTLK7",388,0)
 I SAVY>0 D BULL(SAVY)
"RTN","DPTLK7",389,0)
 ;
"RTN","DPTLK7",390,0)
 Q SAVY
"RTN","DPTLK7",391,0)
 ;
"RTN","DPTLK7",392,0)
ADDREQ(DGFLDS) ; - determine if enough address data entered
"RTN","DPTLK7",393,0)
 ; returns OK to proceed (1) or not (0)
"RTN","DPTLK7",394,0)
 N DGOK,FIELD
"RTN","DPTLK7",395,0)
 S DGOK=1
"RTN","DPTLK7",396,0)
 ; is US or foreign
"RTN","DPTLK7",397,0)
 I $$FOR^DGADDUTL($P(DGFLDS(.1173),"^")) D
"RTN","DPTLK7",398,0)
 . F FIELD=.111,.114,.1171,.1172 S:$G(DGFLDS(FIELD))']"" DGOK=0
"RTN","DPTLK7",399,0)
 E  F FIELD=.111,.1112,.114,.115 S:$G(DGFLDS(FIELD))']"" DGOK=0
"RTN","DPTLK7",400,0)
 I $L($G(DGFLDS(.131))) S DGOK=1
"RTN","DPTLK7",401,0)
 Q DGOK
"RTN","DPTLK7",402,0)
 ;
"RTN","DPTLK7",403,0)
PSEUDO(NAM,DOB) ; - return pseudo ssn
"RTN","DPTLK7",404,0)
 N L1,L2,L3,Z
"RTN","DPTLK7",405,0)
 S NAM=$G(DGF(.01)),DOB=$G(DGF(.03))
"RTN","DPTLK7",406,0)
 I DOB="" S DOB=2000000
"RTN","DPTLK7",407,0)
 S L1=$E($P(NAM," ",2),1),L3=$E(NAM,1),NAM=$P(NAM,",",2),L2=$E(NAM,1)
"RTN","DPTLK7",408,0)
 S Z=L1 D CON^DGRPDD1 S L1=Z,Z=L2 D CON^DGRPDD1
"RTN","DPTLK7",409,0)
 S L2=Z,Z=L3 D CON^DGRPDD1 S L3=Z
"RTN","DPTLK7",410,0)
 Q L2_L1_L3_$E(DOB,4,7)_$E(DOB,2,3)_"P"
"RTN","DPTLK7",411,0)
 ;
"RTN","DPTLK7",412,0)
BULL(SAVY) ; - send bulletin that new patient added
"RTN","DPTLK7",413,0)
 N DGTEXT,DGNAM,DGSSN,DGDOB,DGB,DGZ
"RTN","DPTLK7",414,0)
 S DGB=2
"RTN","DPTLK7",415,0)
 S DGZ=$G(^DPT(SAVY,0))
"RTN","DPTLK7",416,0)
 S DGNAM=$P(DGZ,"^"),DGSSN=$P(DGZ,"^",9),DGDOB=$P(DGZ,"^",3)
"RTN","DPTLK7",417,0)
 S DGSSN=$E(DGSSN,1,3)_"-"_$E(DGSSN,4,5)_"-"_$E(DGSSN,6,10)
"RTN","DPTLK7",418,0)
 S DGDOB=$$FMTE^XLFDT(DGDOB)
"RTN","DPTLK7",419,0)
 S XMSUB="NEW PATIENT ADDED TO SYSTEM"
"RTN","DPTLK7",420,0)
 S DGTEXT(1,0)="NAME:  "_DGNAM
"RTN","DPTLK7",421,0)
 S DGTEXT(2,0)="SSN :  "_DGSSN
"RTN","DPTLK7",422,0)
 S DGTEXT(3,0)="DOB :  "_DGDOB
"RTN","DPTLK7",423,0)
 D ^DGBUL
"RTN","DPTLK7",424,0)
 Q
"RTN","VAFCDODA")
0^3^B4999443^n/a
"RTN","VAFCDODA",1,0)
VAFCDODA ;BIR/CML-Accept Date of Death Updates Utilities ;6/23/16
"RTN","VAFCDODA",2,0)
 ;;5.3;Registration;**926**;Aug 13, 1993;Build 6
"RTN","VAFCDODA",3,0)
 ;
"RTN","VAFCDODA",4,0)
 ; Routine created for DG*5.3*926 Story #340909 (cml)
"RTN","VAFCDODA",5,0)
 ;
"RTN","VAFCDODA",6,0)
CHK() ; API to return value of PROCESS MVI DOD UPDATE? field (#1401) in MAS Parameters file (#43)
"RTN","VAFCDODA",7,0)
 ; Return 1 if value is set to "YES" (1); otherwise return 0
"RTN","VAFCDODA",8,0)
 N RES S RES=1
"RTN","VAFCDODA",9,0)
 I $P($G(^DG(43,1,"MVI")),"^")'=1 S RES=0
"RTN","VAFCDODA",10,0)
 Q RES
"RTN","VAFCDODA",11,0)
 ;
"RTN","VAFCDODA",12,0)
EN(RET,TYPE,SET) ; API called from RPC [] to update or display the PROCESS MVI DOD UPDATE? (#1401) field in MAS Parameters (#43)
"RTN","VAFCDODA",13,0)
 ;TYPE: the type of action:
"RTN","VAFCDODA",14,0)
 ; If TYPE="S", this is a remote call from the MPI to toggle the value to set the PROCESS MVI DOD UPDATE? (#1401) 
"RTN","VAFCDODA",15,0)
 ; field in MAS Parameters (#43) at a specific site.
"RTN","VAFCDODA",16,0)
 ; If TYPE="D", this is a remote call from the MPI to return the current setting of the PROCESS MVI DOD UPDATE? (#1401) 
"RTN","VAFCDODA",17,0)
 ; field in MAS Parameters (#43) at a specific site.
"RTN","VAFCDODA",18,0)
 ;SET: If TYPE="S", SET is the value PROCESS MVI DOD UPDATE? is to be set to. (1:YES, 0:NO)
"RTN","VAFCDODA",19,0)
 ;
"RTN","VAFCDODA",20,0)
 N SITE,SITENAM,SITENUM
"RTN","VAFCDODA",21,0)
 S SITE=$$SITE^VASITE,SITENAM=$P(SITE,"^",2),SITENUM=$P(SITE,"^",3)
"RTN","VAFCDODA",22,0)
 ;
"RTN","VAFCDODA",23,0)
 I TYPE'="S"&(TYPE'="D") S RET(1)="-1:Station #"_SITENUM_" - Invalid TYPE sent for PROCESS MVI DOD UPDATE? field request." Q
"RTN","VAFCDODA",24,0)
 I TYPE="S" I SET'=1&(SET'=0) S RET(1)="-1:Station #"_SITENUM_" - Invalid update parameter sent for PROCESS MVI DOD UPDATE? field" Q
"RTN","VAFCDODA",25,0)
 I TYPE="S" I SET=1!(SET=0) D SET Q
"RTN","VAFCDODA",26,0)
 I TYPE="D" D DISP Q
"RTN","VAFCDODA",27,0)
 ; 
"RTN","VAFCDODA",28,0)
DISP ; Return display of PROCESS MVI DOD UPDATE? field (#1401) in MAS Parameters file (#43) set to "YES" (1); otherwise return 0
"RTN","VAFCDODA",29,0)
 N IEN
"RTN","VAFCDODA",30,0)
 S IEN=$O(^DG(43,0))
"RTN","VAFCDODA",31,0)
 Q:IEN<1
"RTN","VAFCDODA",32,0)
 S RET(1)="1:Station #"_SITENUM_" - PROCESS MVI DOD UPDATE? set to 'YES'"
"RTN","VAFCDODA",33,0)
 I $P($G(^DG(43,IEN,"MVI")),"^")'=1 S RET(1)="1:Station #"_SITENUM_" - PROCESS MVI DOD UPDATE? set to 'NO' or null"
"RTN","VAFCDODA",34,0)
 Q
"RTN","VAFCDODA",35,0)
 ;
"RTN","VAFCDODA",36,0)
SET ; Update PROCESS MVI DOD UPDATE? field (#1401) in MAS Parameters file (#43)
"RTN","VAFCDODA",37,0)
 ;
"RTN","VAFCDODA",38,0)
 N IEN,VAL,DIE,DA,DR
"RTN","VAFCDODA",39,0)
 S IEN=$O(^DG(43,0))
"RTN","VAFCDODA",40,0)
 Q:IEN<1
"RTN","VAFCDODA",41,0)
 S DIE="^DG(43,",DA=IEN,DR="1401////^S X=SET"
"RTN","VAFCDODA",42,0)
 D ^DIE
"RTN","VAFCDODA",43,0)
 S VAL=$P($G(^DG(43,IEN,"MVI")),"^")
"RTN","VAFCDODA",44,0)
 I VAL=1 S RET(1)="1:Station #"_SITENUM_" - PROCESS MVI DOD UPDATE? set to 'YES'"
"RTN","VAFCDODA",45,0)
 I VAL=0!(VAL="") S RET(1)="1:Station #"_SITENUM_" - PROCESS MVI DOD UPDATE? set to 'NO' or null"
"RTN","VAFCDODA",46,0)
 Q
"RTN","VAFCPDAT")
0^8^B63310519^B52424341
"RTN","VAFCPDAT",1,0)
VAFCPDAT ;BIR/CML/ALS-DISPLAY MPI/PD INFORMATION FOR SELECTED PATIENT ; 7/12/16 11:11am
"RTN","VAFCPDAT",2,0)
 ;;5.3;Registration;**333,414,474,505,707,712,837,863,876,902,926**;Aug 13, 1993;Build 6
"RTN","VAFCPDAT",3,0)
 ;Registration has IA #3299 for MPI/PD to call START^VAFCPDAT
"RTN","VAFCPDAT",4,0)
 ;
"RTN","VAFCPDAT",5,0)
 ;variable DFN is not NEWed or KILLed in this routine as that variable is passed in
"RTN","VAFCPDAT",6,0)
 ;
"RTN","VAFCPDAT",7,0)
MAIN ; Entry point with device call
"RTN","VAFCPDAT",8,0)
 S NOTRPC=1
"RTN","VAFCPDAT",9,0)
 K ZTSAVE S ZTSAVE("DFN")=""
"RTN","VAFCPDAT",10,0)
 D EN^XUTMDEVQ("START^VAFCPDAT","Print MPI/PD Patient Data",.ZTSAVE)
"RTN","VAFCPDAT",11,0)
 K NOTRPC
"RTN","VAFCPDAT",12,0)
 Q
"RTN","VAFCPDAT",13,0)
 ;
"RTN","VAFCPDAT",14,0)
START ;Entry point without device call, used for RPC calls
"RTN","VAFCPDAT",15,0)
 N X S X="MPIF001" X ^%ZOSF("TEST") I '$T W !,"MPI not installed." G QUIT  ;**863 - MVI_2351 (ptd)
"RTN","VAFCPDAT",16,0)
 S $P(LN,"=",80)="",$P(LN2,"=",60)="",QFLG=0
"RTN","VAFCPDAT",17,0)
 D NOW^%DTC S HDT=$$FMTE^XLFDT($E(%,1,12))
"RTN","VAFCPDAT",18,0)
 S SITE=$$SITE^VASITE(),SITENAM=$P(SITE,"^",2),SITENUM=$P(SITE,"^",3),SITEIEN=$P(SITE,"^")
"RTN","VAFCPDAT",19,0)
 I +DFN<0 D  Q
"RTN","VAFCPDAT",20,0)
 .I $D(NOTRPC) W @IOF,!," "
"RTN","VAFCPDAT",21,0)
 .W !,"ICN ",$G(ICN)," does not exist at ",SITENAM,"."
"RTN","VAFCPDAT",22,0)
 .W !,"Search date: ",HDT,!,LN
"RTN","VAFCPDAT",23,0)
 S DIC=2,DR=".01;.02;.03;.09;.111;.112;.113;.114;.115;.1112;.131;.313;.351;994;.0907;.0906;.121;.1171;.1172;.1173;.024;.352;.353;.354;.355;.357;.358",DA=DFN,DIQ(0)="EI",DIQ="DNODE"  ;**707,712,863,876
"RTN","VAFCPDAT",24,0)
 N NAME,SSN,DOB,SEX,CLAIM,DOD,ICN,STR1,STR2,STR3,CTY,ST,ZIP,PHN,MBI,SSNVER,PREAS,BAI,TIN,FIN,COUNTRY,CCODE,CNAME,PROVINCE,POSTCODE,SIGEN ;**707,712,837,863,876
"RTN","VAFCPDAT",25,0)
 N DODD,DODENTBY,DODSRC,DODLUPD,DODLEBY,DODOPT ;**926 Story 323009 (ckn)
"RTN","VAFCPDAT",26,0)
 D EN^DIQ1 K DIC,DR,DA,DIQ
"RTN","VAFCPDAT",27,0)
 S NAME=$G(DNODE(2,DFN,.01,"E")),SSN=$G(DNODE(2,DFN,.09,"E"))
"RTN","VAFCPDAT",28,0)
 S DOB=$$FMTE^XLFDT($G(DNODE(2,DFN,.03,"I")))
"RTN","VAFCPDAT",29,0)
 S MBI=$G(DNODE(2,DFN,994,"I")),MBI=$S(MBI="Y":"YES",MBI="N":"NO",1:"NULL")  ;**707
"RTN","VAFCPDAT",30,0)
 S SEX=$G(DNODE(2,DFN,.02,"E")),SIGEN=$G(DNODE(2,DFN,.024,"E")),DOD=$G(DNODE(2,DFN,.351,"E"))  ;**876 - MVI_3432 (cml)
"RTN","VAFCPDAT",31,0)
 S CLAIM=$G(DNODE(2,DFN,.313,"E")) S:CLAIM="" CLAIM="None"
"RTN","VAFCPDAT",32,0)
 S BAI=$G(DNODE(2,DFN,.121,"E"))  ;**712
"RTN","VAFCPDAT",33,0)
 S STR1=$G(DNODE(2,DFN,.111,"E")),STR2=$G(DNODE(2,DFN,.112,"E")),STR3=$G(DNODE(2,DFN,.113,"E"))
"RTN","VAFCPDAT",34,0)
 S CTY=$G(DNODE(2,DFN,.114,"E")),ST=$G(DNODE(2,DFN,.115,"E")),ZIP=$G(DNODE(2,DFN,.1112,"E"))
"RTN","VAFCPDAT",35,0)
 S COUNTRY=$G(DNODE(2,DFN,.1173,"I")),(CCODE,CNAME)="" I COUNTRY]"" S CCODE=$$GET1^DIQ(779.004,+COUNTRY_",",.01),CNAME=$$GET1^DIQ(779.004,+COUNTRY_",",1.3)  ;**863 - MVI_1902 (ptd)
"RTN","VAFCPDAT",36,0)
 S PROVINCE=$G(DNODE(2,DFN,.1171,"E")),POSTCODE=$G(DNODE(2,DFN,.1172,"E"))
"RTN","VAFCPDAT",37,0)
 S PHN=$G(DNODE(2,DFN,.131,"E"))
"RTN","VAFCPDAT",38,0)
 S SSNVER=$G(DNODE(2,DFN,.0907,"E"))  ;**707
"RTN","VAFCPDAT",39,0)
 S PREAS=$G(DNODE(2,DFN,.0906,"E"))  ;**707
"RTN","VAFCPDAT",40,0)
 S MNODE=$$MPINODE^MPIFAPI(DFN) I +MNODE=-1 S MNODE="^^^^^^^^"
"RTN","VAFCPDAT",41,0)
 S (ICN,SCN,SCORE,SCRDT,DIFF,TIN,FIN)=""   ;**837, MVI_883
"RTN","VAFCPDAT",42,0)
 S ICN=$$GETICN^MPIF001(DFN) S:(+ICN=-1) ICN="None" ;**863 - MVI_2351 (ptd)
"RTN","VAFCPDAT",43,0)
 ;**926 - Story 323009 (ckn): DOD fields
"RTN","VAFCPDAT",44,0)
 I DOD'="" D
"RTN","VAFCPDAT",45,0)
 . S DODENTBY=$G(DNODE(2,DFN,.352,"E"))  ;Date of Death Entered By
"RTN","VAFCPDAT",46,0)
 . S DODSRC=$G(DNODE(2,DFN,.353,"E"))  ;Date of Death Source of Notification
"RTN","VAFCPDAT",47,0)
 . S DODLUPD=$G(DNODE(2,DFN,.354,"E"))  ;Date of Death Last Updated
"RTN","VAFCPDAT",48,0)
 . S DODLEBY=$G(DNODE(2,DFN,.355,"E"))  ;Date of Death Last Edited By
"RTN","VAFCPDAT",49,0)
 . S DODD=$G(DNODE(2,DFN,.357,"E"))  ;Date of Death Supporting Document Type
"RTN","VAFCPDAT",50,0)
 . S DODOPT=$G(DNODE(2,DFN,.358,"E"))  ;Date of Death Option Used
"RTN","VAFCPDAT",51,0)
 ;S CMOR=$$GET1^DIQ(4,+$P($G(MNODE),"^",3)_",",.01) S:CMOR="" CMOR="None"    ;removed for **837, MVI_918
"RTN","VAFCPDAT",52,0)
 I $E(ICN,1,3)=SITENUM S GOT=0 D
"RTN","VAFCPDAT",53,0)
 . I $P($G(MNODE),"^",4)=""!('$D(^DPT("AICNL",1,DFN))) S ICN=ICN_"**"
"RTN","VAFCPDAT",54,0)
 S TIN=$P($G(MNODE),"^",8),FIN=$P($G(MNODE),"^",9)   ;**837, MVI_883
"RTN","VAFCPDAT",55,0)
 ;
"RTN","VAFCPDAT",56,0)
 I $D(NOTRPC) W @IOF,!
"RTN","VAFCPDAT",57,0)
 W !,"MPI/PD Data for: ",NAME,"  (DFN #",DFN,")"
"RTN","VAFCPDAT",58,0)
 ; check for patient sensitivity and user security
"RTN","VAFCPDAT",59,0)
 N RESULT,RGSENS,SENSTV,DA,DR,DIC,DIQ,VAFCSEN
"RTN","VAFCPDAT",60,0)
 D PTSEC^DGSEC4(.RESULT,DFN,0,"MPI/PD Patient Inquiry^MPI/PD Patient Inquiry")
"RTN","VAFCPDAT",61,0)
 I RESULT(1)=-1 W !!,"Access denied: Required parameters not defined" G QUIT
"RTN","VAFCPDAT",62,0)
 I RESULT(1)>0 W ?50,"***PATIENT MARKED SENSITIVE***"
"RTN","VAFCPDAT",63,0)
 I RESULT(1)=3 W !!,"Access not allowed on your own PATIENT (#2) file entry" G QUIT
"RTN","VAFCPDAT",64,0)
 I RESULT(1)=4 W !!,"Access denied: Your SSN is not defined" G QUIT
"RTN","VAFCPDAT",65,0)
 I RESULT(1)<3 D
"RTN","VAFCPDAT",66,0)
 . I RESULT(1)=1 D NOTICE^DGSEC4(.VAFCSEN,DFN,"RPC - VAFC REMOTE PDAT FROM THE MPI^MPI/PD Patient Inquiry (Remote)",2) ;IA #3027
"RTN","VAFCPDAT",67,0)
 . I RESULT(1)=2 D NOTICE^DGSEC4(.VAFCSEN,DFN,"RPC - VAFC REMOTE PDAT FROM THE MPI^MPI/PD Patient Inquiry (Remote)",3) ;IA #3027
"RTN","VAFCPDAT",68,0)
 W !,"Printed ",HDT," at ",SITENAM,!,LN
"RTN","VAFCPDAT",69,0)
 S $Y=$Y+1
"RTN","VAFCPDAT",70,0)
 ;next 7 lines modified for **707
"RTN","VAFCPDAT",71,0)
 W !,"ICN    : ",ICN  ;CMOR removed  **837, MVI_918
"RTN","VAFCPDAT",72,0)
 W !,"SSN    : ",SSN
"RTN","VAFCPDAT",73,0)
 I SSNVER]"" W !?9,"SSN Verification Status: ",SSNVER
"RTN","VAFCPDAT",74,0)
 I SSNVER="",PREAS]"" W !?9,"Pseudo SSN Reason: ",PREAS
"RTN","VAFCPDAT",75,0)
 I SSNVER]"",PREAS]"" W !?9,"Pseudo SSN Reason      : ",PREAS
"RTN","VAFCPDAT",76,0)
 W !,"Sex    : ",SEX
"RTN","VAFCPDAT",77,0)
 W !,"Claim #: ",CLAIM
"RTN","VAFCPDAT",78,0)
 W !,"Date of Birth: ",DOB
"RTN","VAFCPDAT",79,0)
 ;**926 - Story 323009 (ckn): DOD fields
"RTN","VAFCPDAT",80,0)
 I DOD]"" D
"RTN","VAFCPDAT",81,0)
 . W !,"Date of Death: ",DOD
"RTN","VAFCPDAT",82,0)
 . I DODENTBY]"" W !,?15,"Entered By: ",?42,DODENTBY
"RTN","VAFCPDAT",83,0)
 . I DODSRC]"" W !,?15,"Source of Notification: ",?42,DODSRC
"RTN","VAFCPDAT",84,0)
 . I DODLUPD]"" W !,?15,"Last Updated: ",?42,DODLUPD
"RTN","VAFCPDAT",85,0)
 . I DODLEBY]"" W !,?15,"Last Edited By: ",?42,DODLEBY
"RTN","VAFCPDAT",86,0)
 . I DODD]"" W !,?15,"Supporting Document Type: ",?42,DODD
"RTN","VAFCPDAT",87,0)
 . I DODOPT]"" W !,?15,"Option Used: ",?42,DODOPT
"RTN","VAFCPDAT",88,0)
 ;I DOD]"" W !,"Date of Death: ",DOD
"RTN","VAFCPDAT",89,0)
 I MBI]"" W !,"Multiple Birth Indicator: ",MBI  ;**707
"RTN","VAFCPDAT",90,0)
 I TIN]"" W !,"DoD Temporary ID Number : ",TIN  ;**837, MVI_883
"RTN","VAFCPDAT",91,0)
 I FIN]"" W !,"DoD Foreign ID Number   : ",FIN  ;**837, MVI_883
"RTN","VAFCPDAT",92,0)
 W !,"Address:" I BAI'="" W " (Bad Address Indicator: ",BAI,")"
"RTN","VAFCPDAT",93,0)
 I STR1'="" W !?9,STR1
"RTN","VAFCPDAT",94,0)
 I STR2'="" W !?9,STR2
"RTN","VAFCPDAT",95,0)
 I STR3'="" W !?9,STR3
"RTN","VAFCPDAT",96,0)
 I COUNTRY=""!(CCODE="USA") D   ;USA Address  **863 - MVI_1902 (ptd)
"RTN","VAFCPDAT",97,0)
 .I CTY]"" W !?9,$E(CTY,1,20)_", "_$G(ST)_" "_$G(ZIP)
"RTN","VAFCPDAT",98,0)
 I COUNTRY]"",CCODE'="USA" D   ;Foreign Address
"RTN","VAFCPDAT",99,0)
 .I CTY]""!(PROVINCE]"")!(POSTCODE]"") D
"RTN","VAFCPDAT",100,0)
 ..I PROVINCE]"" W !?9,CTY_", "_PROVINCE_" ("_CNAME_")  "_POSTCODE
"RTN","VAFCPDAT",101,0)
 ..I PROVINCE="" W !?9,CTY_", "_"("_CNAME_")  "_POSTCODE
"RTN","VAFCPDAT",102,0)
 I PHN'="" W !,"Phone #: ",PHN
"RTN","VAFCPDAT",103,0)
 I SIGEN]"" W !,"Self-Identified Gender Identity: ",SIGEN  ;**876 - MVI_3432 (cml)  **902 - MVI_4730 (cml)
"RTN","VAFCPDAT",104,0)
 I $G(IOSL)<30&($E(IOST,1,2)="C-") D
"RTN","VAFCPDAT",105,0)
 .I $Y>23 D
"RTN","VAFCPDAT",106,0)
 ..S DIR(0)="E" D  D ^DIR K DIR I 'Y S QFLG=1
"RTN","VAFCPDAT",107,0)
 ...S SS=22-$Y F JJ=1:1:SS W !
"RTN","VAFCPDAT",108,0)
 ..S $Y=0
"RTN","VAFCPDAT",109,0)
 I QFLG=1 G QUIT
"RTN","VAFCPDAT",110,0)
 ;
"RTN","VAFCPDAT",111,0)
TF ;List Treating Facilities for this patient
"RTN","VAFCPDAT",112,0)
 D TFHDR
"RTN","VAFCPDAT",113,0)
 K TFARR
"RTN","VAFCPDAT",114,0)
 S TF=0 F  S TF=$O(^DGCN(391.91,"APAT",DFN,TF)) Q:'TF  D
"RTN","VAFCPDAT",115,0)
 .S TFIEN=$O(^DGCN(391.91,"APAT",DFN,TF,0))
"RTN","VAFCPDAT",116,0)
 . S DIC="^DGCN(391.91,",DR=".02;.03;.07",DA=TFIEN,DIQ(0)="EI",DIQ="TFDATA"
"RTN","VAFCPDAT",117,0)
 . D EN^DIQ1 K DIC,DA,DR,DIQ
"RTN","VAFCPDAT",118,0)
 . S INST="",STATION=""
"RTN","VAFCPDAT",119,0)
 . S INST=$G(TFDATA(391.91,TFIEN,.02,"I"))
"RTN","VAFCPDAT",120,0)
 . I INST'="" D
"RTN","VAFCPDAT",121,0)
 .. S DIC=4,DR="99",DA=INST,DIQ(0)="E",DIQ="STA"
"RTN","VAFCPDAT",122,0)
 .. D EN^DIQ1 K DIC,DA,DR,DIQ
"RTN","VAFCPDAT",123,0)
 .. S STATION=$G(STA(4,INST,99,"E"))
"RTN","VAFCPDAT",124,0)
 . S TFNM=$G(TFDATA(391.91,TFIEN,.02,"E"))
"RTN","VAFCPDAT",125,0)
 . S LSTDT=$G(TFDATA(391.91,TFIEN,.03,"I")) S:LSTDT="" LSTDT="none found"
"RTN","VAFCPDAT",126,0)
 . S LSTSORT=9999999
"RTN","VAFCPDAT",127,0)
 . I +LSTDT S LSTSORT=9999999-LSTDT,LSTDT=$$FMTE^XLFDT($E(LSTDT,1,12))
"RTN","VAFCPDAT",128,0)
 . S REACODE=$G(TFDATA(391.91,TFIEN,.07,"E")) S REASON="none found"
"RTN","VAFCPDAT",129,0)
 . I REACODE'="" D
"RTN","VAFCPDAT",130,0)
 .. S DIC="^VAT(391.72,",DIC(0)="Z",X=REACODE D ^DIC K DIC,X
"RTN","VAFCPDAT",131,0)
 .. S REASON=$P($G(Y(0)),"^",4)
"RTN","VAFCPDAT",132,0)
 . S TFARR(LSTSORT,TFNM)=TFIEN_"^"_REASON_"^"_$G(STATION)_"^"_LSTDT
"RTN","VAFCPDAT",133,0)
 I '$D(TFARR) W !,"No Treating Facilities found." G SUB
"RTN","VAFCPDAT",134,0)
 S LSTSORT=0 F  S LSTSORT=$O(TFARR(LSTSORT)) Q:'LSTSORT  D  G:QFLG QUIT
"RTN","VAFCPDAT",135,0)
 .S TFNM="" F  S TFNM=$O(TFARR(LSTSORT,TFNM)) Q:TFNM=""  D  Q:QFLG
"RTN","VAFCPDAT",136,0)
 ..S REASON=$P(TFARR(LSTSORT,TFNM),"^",2)
"RTN","VAFCPDAT",137,0)
 ..S STATION=$P(TFARR(LSTSORT,TFNM),"^",3)
"RTN","VAFCPDAT",138,0)
 ..S LSTDT=$P(TFARR(LSTSORT,TFNM),"^",4)
"RTN","VAFCPDAT",139,0)
 ..I $Y+3>IOSL&($E(IOST,1,2)="C-") D  Q:QFLG
"RTN","VAFCPDAT",140,0)
 ...S LNQ=22 D SS Q:QFLG
"RTN","VAFCPDAT",141,0)
 ...W @IOF,!,"MPI/PD data for: ",NAME,"  (DFN #",DFN,")",!,LN2 D TFHDR
"RTN","VAFCPDAT",142,0)
 ..W !,$E(TFNM,1,20),?22,$G(STATION),?32,LSTDT,?54,REASON
"RTN","VAFCPDAT",143,0)
SUB ;removed listing of subscribers for RG*1.0*23
"RTN","VAFCPDAT",144,0)
HIS ;find ICN history
"RTN","VAFCPDAT",145,0)
 I '$O(^DPT(DFN,"MPIFHIS",0)) G CONT
"RTN","VAFCPDAT",146,0)
 ;
"RTN","VAFCPDAT",147,0)
 I $Y+4>IOSL&($E(IOST,1,2)="C-") D  G:QFLG QUIT
"RTN","VAFCPDAT",148,0)
 .S LNQ=22 D SS Q:QFLG
"RTN","VAFCPDAT",149,0)
 .W @IOF,!,"MPI/PD data for: ",NAME,"  (DFN #",DFN,")",!,LN2
"RTN","VAFCPDAT",150,0)
 D ICNHDR
"RTN","VAFCPDAT",151,0)
 S HIS=0 F  S HIS=$O(^DPT(DFN,"MPIFHIS",HIS)) Q:'HIS  D  G:QFLG QUIT
"RTN","VAFCPDAT",152,0)
 .S DIC=2,DR="992",DR(2.0992)=".01;1;3",DA=DFN,DA(2.0992)=HIS ;**863 - MVI_2351 (ptd)
"RTN","VAFCPDAT",153,0)
 .S DIQ(0)="E",DIQ="HISNODE"
"RTN","VAFCPDAT",154,0)
 .D EN^DIQ1 K DIC,DA,DR,DIQ
"RTN","VAFCPDAT",155,0)
 .S HISICN=$G(HISNODE(2.0992,HIS,.01,"E"))
"RTN","VAFCPDAT",156,0)
 .S HISCHK=$G(HISNODE(2.0992,HIS,1,"E")) ;**863 - MVI_2351 (ptd) history checksum
"RTN","VAFCPDAT",157,0)
 .S HFULLICN=HISICN_$S(HISCHK]"":"V"_HISCHK,1:"") ;**863 - MVI_2351 (ptd) History full ICN
"RTN","VAFCPDAT",158,0)
 .S HISDT=$G(HISNODE(2.0992,HIS,3,"E"))
"RTN","VAFCPDAT",159,0)
 .I $Y+3>IOSL&($E(IOST,1,2)="C-") D  Q:QFLG
"RTN","VAFCPDAT",160,0)
 ..S LNQ=22 D SS Q:QFLG
"RTN","VAFCPDAT",161,0)
 ..W @IOF,!,"MPI/PD data for: ",NAME,"  (DFN #",DFN,")",!,LN2 D ICNHDR
"RTN","VAFCPDAT",162,0)
 .W !,HFULLICN I HISDT]"" W "  - changed ",HISDT ;**863 - MVI_2351 (ptd)
"RTN","VAFCPDAT",163,0)
 ;
"RTN","VAFCPDAT",164,0)
CONT ;Continue to VAFCPDT2 for extended data
"RTN","VAFCPDAT",165,0)
 ;D CMORHIS^VAFCPDT2  
"RTN","VAFCPDAT",166,0)
 ;CMOR History removed, called changed to EXT^VAFCPDT2  **837, MVI_918
"RTN","VAFCPDAT",167,0)
 D EXT^VAFCPDT2
"RTN","VAFCPDAT",168,0)
DONE ;
"RTN","VAFCPDAT",169,0)
 I QFLG G QUIT
"RTN","VAFCPDAT",170,0)
 I ($E(IOST,1,2)="C-") S LNQ=24 D SS
"RTN","VAFCPDAT",171,0)
 ;
"RTN","VAFCPDAT",172,0)
QUIT ;
"RTN","VAFCPDAT",173,0)
 K %,CMOR,DIC,DIR,DIRUT,DNODE,GOT,HDT,HFULLICN,HIS,HISCHK,HISDT,HISICN,JJ,LIEN
"RTN","VAFCPDAT",174,0)
 K LINST,LN,LSTDT,MNODE,REACODE,REASON,SCN,SCORE,SITE,SITEIEN,SITENAM,SITENUM
"RTN","VAFCPDAT",175,0)
 K SS,SUBN,SUBARR,TERM,TERMDT,TF,TFARR,TFDATA,TFIEN,TFNM,Y,D,CHG,CHGNODE
"RTN","VAFCPDAT",176,0)
 K HISNODE,DIFF,INST,RGDFN,SCRDT,STATION,STA,LN2,NAME,LSTSORT,LNQ,QFLG,MBI
"RTN","VAFCPDAT",177,0)
 Q
"RTN","VAFCPDAT",178,0)
TFHDR ;
"RTN","VAFCPDAT",179,0)
 W !!,"Treating Facilities:",?22,"Station:",?32,"DT Last Treated",?54,"Event Reason"
"RTN","VAFCPDAT",180,0)
 W !,"--------------------",?22,"--------",?32,"---------------",?54,"------------"
"RTN","VAFCPDAT",181,0)
 Q
"RTN","VAFCPDAT",182,0)
ICNHDR W !!,"ICN History:",!,"------------"
"RTN","VAFCPDAT",183,0)
 Q
"RTN","VAFCPDAT",184,0)
 ;
"RTN","VAFCPDAT",185,0)
SS S DIR(0)="E" D  D ^DIR K DIR I 'Y S QFLG=1
"RTN","VAFCPDAT",186,0)
 .S SS=LNQ-$Y F JJ=1:1:SS W !
"RTN","VAFCPDAT",187,0)
 Q
"RTN","VAFCQRY")
0^6^B26626095^B23196961
"RTN","VAFCQRY",1,0)
VAFCQRY ;BIR/DLR-Query for patient demographics ; 7/12/16 11:06am
"RTN","VAFCQRY",2,0)
 ;;5.3;Registration;**428,575,627,707,863,902,926**;Aug 13, 1993;Build 6
"RTN","VAFCQRY",3,0)
 ;   
"RTN","VAFCQRY",4,0)
IN ;process in the patient query
"RTN","VAFCQRY",5,0)
 N IEN,HLA,VAFCCNT,ICN,CLAIM,SG,VAFCER,VAFC,DFN,STATE,CITY,SUBCOMP,COMP,REP,LVL,LVL2,VAFC,SSN,SAVEDFN
"RTN","VAFCQRY",6,0)
 S VAFCCNT=1,VAFCER=1
"RTN","VAFCQRY",7,0)
 F VAFC=1:1 X HLNEXT Q:HLQUIT'>0  S SG=$E(HLNODE,1,3) D:$T(@SG)]"" @SG
"RTN","VAFCQRY",8,0)
 S SAVEDFN=$G(DFN)
"RTN","VAFCQRY",9,0)
 D CHKID^VAFCQRY2(.ICN,.SSN,.DFN)
"RTN","VAFCQRY",10,0)
 I $G(DFN)'>0 D
"RTN","VAFCQRY",11,0)
 . ;**863 MVI_2352 if merged send back merged record info for update
"RTN","VAFCQRY",12,0)
 . I SAVEDFN,$D(^DPT(SAVEDFN,-9)) D  Q
"RTN","VAFCQRY",13,0)
 .. N DFN,ICN
"RTN","VAFCQRY",14,0)
 .. S DFN=^DPT(SAVEDFN,-9),ICN=$$GETICN^MPIF001(+DFN)
"RTN","VAFCQRY",15,0)
 .. S VAFCER="-1^New Primary record "_DFN_" at site with ICN "_ICN
"RTN","VAFCQRY",16,0)
 . S VAFCER="-1^Unknown ICN#"_$G(ICN)_" and SSN#"_$G(SSN)
"RTN","VAFCQRY",17,0)
 S ^TMP("HLA",$J,VAFCCNT)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS")_$S(+$G(VAFCER)'>0:$P(VAFCER,"^",2),1:""),VAFCCNT=VAFCCNT+1
"RTN","VAFCQRY",18,0)
 S ^TMP("HLA",$J,VAFCCNT)=VAFCQRD,VAFCCNT=VAFCCNT+1
"RTN","VAFCQRY",19,0)
 I $G(VAFCER)>0 D BLDRSP(DFN,.VAFCCNT)
"RTN","VAFCQRY",20,0)
 D LINK^HLUTIL3(SITE,.VAFC) S IEN=$O(VAFC(0)) S HLL("LINKS",1)="^"_VAFC(IEN)
"RTN","VAFCQRY",21,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"GM",1,.HLRESLTA,"",.HL)
"RTN","VAFCQRY",22,0)
 K VAFCER,VAFCID,COMP,SITE,VAFCFS,VAFCRCV,VAFCQRD,^TMP("HLA",$J)
"RTN","VAFCQRY",23,0)
 Q
"RTN","VAFCQRY",24,0)
RESP ;Response processing initiated from the MPI.
"RTN","VAFCQRY",25,0)
 Q
"RTN","VAFCQRY",26,0)
ROUTE ;Routine logic initiated from the MPI.
"RTN","VAFCQRY",27,0)
 Q
"RTN","VAFCQRY",28,0)
BLDRSP(DFN,VAFCCNT) ;
"RTN","VAFCQRY",29,0)
 N EVN,PID,PD1,SEQ,ERR,CNT,X,PV2,RADE,LABE,PRES
"RTN","VAFCQRY",30,0)
 N SIDG,ZEL,ZSP,NAMECOMP,OLD,PV1,DODF,DODD,DODOPT,DODNP,DODDISDT
"RTN","VAFCQRY",31,0)
 ;construct EVN (for TF Event Type AND Last Treatment Date)
"RTN","VAFCQRY",32,0)
 S SEQ="1,2" D BLDEVN(DFN,.SEQ,.EVN,.HL,"A19",.ERR) S ^TMP("HLA",$J,VAFCCNT)=EVN(1) S VAFCCNT=VAFCCNT+1
"RTN","VAFCQRY",33,0)
 ;construct PID
"RTN","VAFCQRY",34,0)
 S SEQ="ALL" D BLDPID(DFN,1,.SEQ,.PID,.HL,.ERR) S ^TMP("HLA",$J,VAFCCNT)=PID(1) S X=1,CNT=1 F  S X=$O(PID(X)) Q:'X  I $D(PID(X)) S ^TMP("HLA",$J,VAFCCNT,CNT)=PID(X),CNT=CNT+1
"RTN","VAFCQRY",35,0)
 S VAFCCNT=VAFCCNT+1
"RTN","VAFCQRY",36,0)
 ;construct PD1 **707
"RTN","VAFCQRY",37,0)
 ;S SEQ="3" D BLDPD1(DFN,.SEQ,.PD1,.HL,.ERR) S ^TMP("HLA",$J,VAFCCNT)=PD1(1)
"RTN","VAFCQRY",38,0)
 S PD1=$$PD1^VAFCSB I PD1'="" S ^TMP("HLA",$J,VAFCCNT)=PD1,VAFCCNT=VAFCCNT+1 ;**707
"RTN","VAFCQRY",39,0)
 S PV1=$$PV1^VAFCSB I PV1'="" S ^TMP("HLA",$J,VAFCCNT)=PV1,VAFCCNT=VAFCCNT+1 ;**707
"RTN","VAFCQRY",40,0)
 S PV2=$$PV2^VAFCSB I PV2'="" S ^TMP("HLA",$J,VAFCCNT)=PV2,VAFCCNT=VAFCCNT+1 ;**707
"RTN","VAFCQRY",41,0)
 S PRES=$$PHARA^VAFCSB I PRES'="" S ^TMP("HLA",$J,VAFCCNT)=PRES,VAFCCNT=VAFCCNT+1 ;**707
"RTN","VAFCQRY",42,0)
 S LABE=$$LABE^VAFCSB I LABE'="" S ^TMP("HLA",$J,VAFCCNT)=LABE,VAFCCNT=VAFCCNT+1 ;**707
"RTN","VAFCQRY",43,0)
 S RADE=$$RADE^VAFCSB I RADE'="" S ^TMP("HLA",$J,VAFCCNT)=RADE,VAFCCNT=VAFCCNT+1 ;**707
"RTN","VAFCQRY",44,0)
 S SIDG=$$SIG^VAFCSB(DFN) I $G(SIDG)'="" S ^TMP("HLA",$J,VAFCCNT)=SIDG,VAFCCNT=VAFCCNT+1  ;**902 MVI_4634 (ckn) - OBX FOR SELF ID GENDER
"RTN","VAFCQRY",45,0)
 S NAMECOMP=$$NAMEOBX^VAFCSB(DFN) I $G(NAMECOMP)'="" S ^TMP("HLA",$J,VAFCCNT)=NAMECOMP,VAFCCNT=VAFCCNT+1  ;**902 MVI_4634 (ckn): OBX for Patient .01 and Name Components
"RTN","VAFCQRY",46,0)
 S OLD=$$OLD(DFN) I $G(OLD)'="" S ^TMP("HLA",$J,VAFCCNT)=OLD,VAFCCNT=VAFCCNT+1  ;**902 MVI_4634 (ckn) - OBX to mark and Older record
"RTN","VAFCQRY",47,0)
 S DODF=$$DODF^VAFCSB(DFN) I $G(DODF)'="" S ^TMP("HLA",$J,VAFCCNT)=DODF,VAFCCNT=VAFCCNT+1  ;**902 MVI_4898 (ckn) : OBX for DOD fields
"RTN","VAFCQRY",48,0)
 ;**926 Story 3230009 (ckn) : OBX for Additional DOD fields
"RTN","VAFCQRY",49,0)
 S DODD=$$DODD^VAFCSB(DFN) I $G(DODD)'="" S ^TMP("HLA",$J,VAFCCNT)=DODD,VAFCCNT=VAFCCNT+1  ;Date of Death Documents
"RTN","VAFCQRY",50,0)
 S DODOPT=$$DODOPT^VAFCSB(DFN) I $G(DODOPT)'="" S ^TMP("HLA",$J,VAFCCNT)=DODOPT,VAFCCNT=VAFCCNT+1  ;Date of Death Option
"RTN","VAFCQRY",51,0)
 S DODNP=$$DODNTPRV^VAFCSB(DFN) I $G(DODNP)'="" S ^TMP("HLA",$J,VAFCCNT)=DODNP,VAFCCNT=VAFCCNT+1  ;Date Of Death Notify Provider
"RTN","VAFCQRY",52,0)
 ;** PATCH 575
"RTN","VAFCQRY",53,0)
 ;construct ZPD segment
"RTN","VAFCQRY",54,0)
 S SEQ="1,17,21,34" ;**707 Added 1, 21 and 34 to ZPD fields
"RTN","VAFCQRY",55,0)
 S ^TMP("HLA",$J,VAFCCNT)=$$EN1^VAFHLZPD(DFN,SEQ)
"RTN","VAFCQRY",56,0)
 S VAFCCNT=VAFCCNT+1
"RTN","VAFCQRY",57,0)
 ;**902 MVI_4634 (ckn) - Add ZSP and ZEL segments
"RTN","VAFCQRY",58,0)
 S ZSP=$$EN^VAFHLZSP(DFN) I $G(ZSP)'="" S ^TMP("HLA",$J,VAFCCNT)=ZSP,VAFCCNT=VAFCCNT+1  ;ZSP segment
"RTN","VAFCQRY",59,0)
 S ZEL=$$EN^VAFHLZEL(DFN,"1,8,9",1) I $G(ZEL)'="" S ^TMP("HLA",$J,VAFCCNT)=ZEL,VAFCCNT=VAFCCNT+1  ;ZEL segment
"RTN","VAFCQRY",60,0)
 Q
"RTN","VAFCQRY",61,0)
MSH ;process MSH segment
"RTN","VAFCQRY",62,0)
 S VAFCFS=HL("FS")
"RTN","VAFCQRY",63,0)
 S HLQ=HL("Q"),HLFS=HL("FS"),HLECH=HL("ECH")
"RTN","VAFCQRY",64,0)
 S VAFCID=HL("MID")
"RTN","VAFCQRY",65,0)
 S COMP=$E(HL("ECH"),1)
"RTN","VAFCQRY",66,0)
 S REP=$E(HL("ECH"),2)
"RTN","VAFCQRY",67,0)
 S SUBCOMP=$E(HL("ECH"),4)
"RTN","VAFCQRY",68,0)
 S SITE=$$LKUP^XUAF4($P($P(HLNODE,HL("FS"),4),COMP))
"RTN","VAFCQRY",69,0)
 Q
"RTN","VAFCQRY",70,0)
QRD ;process QRD segment
"RTN","VAFCQRY",71,0)
 N QRD,X,IDS,WSF,ID,QRDAA,QRDNTC
"RTN","VAFCQRY",72,0)
 S VAFCQRD=HLNODE
"RTN","VAFCQRY",73,0)
 S VAFCRCV=$P(VAFCQRD,HL("FS"),5)
"RTN","VAFCQRY",74,0)
 S IDS=$P(VAFCQRD,HL("FS"),9)
"RTN","VAFCQRY",75,0)
 F X=1:1:$L(IDS,REP) S WSF=$P(IDS,REP,X) D
"RTN","VAFCQRY",76,0)
 . ;get id, assigning authority, and name type code
"RTN","VAFCQRY",77,0)
 . S ID=$P(WSF,COMP),QRDAA=$P($P(WSF,COMP,9),SUBCOMP),QRDNTC=$P(WSF,COMP,10)
"RTN","VAFCQRY",78,0)
 . ;check assigning authority(0363) AND name type code(0203)
"RTN","VAFCQRY",79,0)
 . I QRDAA="USVHA" D
"RTN","VAFCQRY",80,0)
 .. I QRDNTC="NI" S ICN=ID  ;National unique individual identifier
"RTN","VAFCQRY",81,0)
 .. I QRDNTC="PI" S DFN=ID  ;Patient internal identifier
"RTN","VAFCQRY",82,0)
 . I QRDAA="USSSA" D
"RTN","VAFCQRY",83,0)
 .. I QRDNTC="SS" S SSN=ID  ;Social Security number
"RTN","VAFCQRY",84,0)
 Q
"RTN","VAFCQRY",85,0)
BLDEVN(DFN,SEQ,EVN,HL,EVR,ERR) ;build EVN for TF last treatment date and event reason
"RTN","VAFCQRY",86,0)
 ; At this point only sequence one and two are supported
"RTN","VAFCQRY",87,0)
 ; Variable list
"RTN","VAFCQRY",88,0)
 ;  DFN - internal PATIENT (#2) number
"RTN","VAFCQRY",89,0)
 ;  SEQ - variable consisting of sequence numbers delimited by commas
"RTN","VAFCQRY",90,0)
 ;        that will be used to build the message
"RTN","VAFCQRY",91,0)
 ;  EVN (passed by reference) - array location to place EVN segment result, the array can have existing values when passed.
"RTN","VAFCQRY",92,0)
 ;   HL - array that contains the necessary HL variables (init^hlsub)
"RTN","VAFCQRY",93,0)
 ;  EVR - event reason that triggered this message
"RTN","VAFCQRY",94,0)
 ;  ERR - array that is used to return an error
"RTN","VAFCQRY",95,0)
 ;
"RTN","VAFCQRY",96,0)
 D BLDEVN^VAFCQRY2(DFN,SEQ,.EVN,.HL,EVR,.ERR)
"RTN","VAFCQRY",97,0)
 Q
"RTN","VAFCQRY",98,0)
BLDPD1(DFN,SEQ,PD1,HL,ERR) ;
"RTN","VAFCQRY",99,0)
 ; At this point only sequence 3 is supported
"RTN","VAFCQRY",100,0)
 ; Variable list
"RTN","VAFCQRY",101,0)
 ;  DFN - internal PATIENT (#2) number
"RTN","VAFCQRY",102,0)
 ;  SEQ - variable consisting of sequence numbers delimited by commas
"RTN","VAFCQRY",103,0)
 ;        that will be used to build the message
"RTN","VAFCQRY",104,0)
 ;  PD1 (passed by reference) - array location to place PD1 segment result, the array can have existing values when passed.
"RTN","VAFCQRY",105,0)
 ;   HL - array that contains the necessary HL variables (init^hlsub)
"RTN","VAFCQRY",106,0)
 ;  ERR - array that is used to return an error
"RTN","VAFCQRY",107,0)
 ;
"RTN","VAFCQRY",108,0)
 D BLDPD1^VAFCQRY2(DFN,SEQ,.PD1,.HL,.ERR)
"RTN","VAFCQRY",109,0)
 Q
"RTN","VAFCQRY",110,0)
BLDPID(DFN,CNT,SEQ,PID,HL,ERR) ;build PID from File #2
"RTN","VAFCQRY",111,0)
 ;The required sequences 3 and 5 will be returned and at this point
"RTN","VAFCQRY",112,0)
 ;sequences 1-3,5-8,10-14,16,17,19,22-24 and 29 are supported
"RTN","VAFCQRY",113,0)
 ;
"RTN","VAFCQRY",114,0)
 ; At this point only sequence one and two are supported
"RTN","VAFCQRY",115,0)
 ; Variable list
"RTN","VAFCQRY",116,0)
 ;  DFN - internal PATIENT (#2) number
"RTN","VAFCQRY",117,0)
 ;  CNT - value to be place in PID seq#1 (SET ID)
"RTN","VAFCQRY",118,0)
 ;  SEQ - variable consisting of sequence numbers delimited by commas
"RTN","VAFCQRY",119,0)
 ;        that will be used to build the message
"RTN","VAFCQRY",120,0)
 ;  PID (passed by reference) - array location to place PID segment
"RTN","VAFCQRY",121,0)
 ;        result, the array can have existing values when passed.
"RTN","VAFCQRY",122,0)
 ;   HL - array that contains the necessary HL variables (init^hlsub)
"RTN","VAFCQRY",123,0)
 ;  ERR - array that is used to return an error
"RTN","VAFCQRY",124,0)
 ;
"RTN","VAFCQRY",125,0)
 ;if this is a mismatch a null or """" should be passed in, so that
"RTN","VAFCQRY",126,0)
 ;the ICN will be removed at the site
"RTN","VAFCQRY",127,0)
 ;
"RTN","VAFCQRY",128,0)
 D BLDPID^VAFCQRY1(DFN,CNT,SEQ,.PID,.HL,.ERR)
"RTN","VAFCQRY",129,0)
 Q
"RTN","VAFCQRY",130,0)
OLD(DFN) ; **902 MVI_4634 (ckn) Return OBX segment to flag a record as "old"
"RTN","VAFCQRY",131,0)
 Q $S($D(^XTMP("MPIF OLD RECORDS",DFN))#2:"OBX"_HL("FS")_HL("FS")_"CE"_HL("FS")_"OLDER RECORD"_HL("FS")_HL("FS")_"Y",1:"")
"RTN","VAFCSB")
0^7^B45868659^B32788021
"RTN","VAFCSB",1,0)
VAFCSB ;BIR/CMC-CONT ADT PROCESSOR TO RETRIGGER A08 or A04 MESSAGES WITH AL/AL (COMMIT/APPLICATION) ACKNOWLEDGEMENTS ; 7/13/16 6:16pm
"RTN","VAFCSB",2,0)
 ;;5.3;Registration;**707,756,825,876,902,926**;Aug 13, 1993;Build 6
"RTN","VAFCSB",3,0)
 ;
"RTN","VAFCSB",4,0)
 ;Reference to $$XAMDT^RAO7UTL1 is supported by IA #4875
"RTN","VAFCSB",5,0)
 ;Reference to RESUTLS^LRPXAPI is supported by IA #4245
"RTN","VAFCSB",6,0)
 ;
"RTN","VAFCSB",7,0)
PV2() ;build pv2 segment
"RTN","VAFCSB",8,0)
 N PV2,LSTA,APPT,VASD,VAIP,VARP,VAROOT
"RTN","VAFCSB",9,0)
 S PV2=""
"RTN","VAFCSB",10,0)
 ;get next outpatient appointment
"RTN","VAFCSB",11,0)
 K ^UTILITY("VASD",$J) S VASD("F")=DT D SDA^VADPT
"RTN","VAFCSB",12,0)
 S APPT=$P($G(^UTILITY("VASD",$J,1,"I")),"^")
"RTN","VAFCSB",13,0)
 I APPT'="" S $P(PV2,HL("FS"),9)=$$HLDATE^HLFNC(APPT)
"RTN","VAFCSB",14,0)
 ;GET LAST ADMISSION DATE
"RTN","VAFCSB",15,0)
 K VAIP S VAIP("D")="LAST",VAIP("M")=0 D IN5^VADPT
"RTN","VAFCSB",16,0)
 ; **825,CR_1184: for PV2-14, it will be re-set as the 15th piece
"RTN","VAFCSB",17,0)
 ; in PV2 segment a few lines below
"RTN","VAFCSB",18,0)
 ; I VAIP(2)="1^ADMISSION" S $P(PV2,HL("FS"),15)=$$HLDATE^HLFNC($P(VAIP(3),"^"))
"RTN","VAFCSB",19,0)
 I VAIP(2)="1^ADMISSION" S $P(PV2,HL("FS"),14)=$$HLDATE^HLFNC($P(VAIP(3),"^"))
"RTN","VAFCSB",20,0)
 ;get last registration
"RTN","VAFCSB",21,0)
 S VAROOT="VARP"
"RTN","VAFCSB",22,0)
 D REG^VADPT
"RTN","VAFCSB",23,0)
 I $D(VARP(1,"I")),$G(VARP(1,"I"))>0 S $P(PV2,HL("FS"),46)=$$HLDATE^HLFNC($P(VARP(1,"I"),"^"),"DT"),$P(PV2,HL("FS"),24)="CR"
"RTN","VAFCSB",24,0)
 ;**756 ^ ONLY RETURN DATE FOR LAST REGISTRATION AS HL7 STANDARD CAN ONLY HAVE DATE
"RTN","VAFCSB",25,0)
 I PV2'="" S PV2="PV2"_HL("FS")_PV2
"RTN","VAFCSB",26,0)
 Q PV2
"RTN","VAFCSB",27,0)
PHARA() ;build obx to show active prescriptions
"RTN","VAFCSB",28,0)
 N RET S RET=""
"RTN","VAFCSB",29,0)
 I '$$PATCH^XPDUTL("PSS*1.0*101") Q RET
"RTN","VAFCSB",30,0)
 N PHARM,DGLIST
"RTN","VAFCSB",31,0)
 S PHARM="" D PROF^PSO52API(DFN,"DGLIST")
"RTN","VAFCSB",32,0)
 I +$G(^TMP($J,"DGLIST",DFN,0))>0 S PHARM="OBX"_HL("FS")_HL("FS")_"CE"_HL("FS")_"ACTIVE PRESCRIPTIONS"_HL("FS")_HL("FS")_"Y"
"RTN","VAFCSB",33,0)
 ;**756 CE added as the data type
"RTN","VAFCSB",34,0)
 Q PHARM
"RTN","VAFCSB",35,0)
SIG(DFN) ;**876 MVI_3467 (ckn) Build OBX for Self Identified Gender
"RTN","VAFCSB",36,0)
 N SIG,SIGE,SIGTMP,OBX S OBX=""
"RTN","VAFCSB",37,0)
 ;I '$$PATCH^XPDUTL("DG*5.3*876") Q OBX
"RTN","VAFCSB",38,0)
 S DIC=2,DA=DFN,DR=".024",DIQ="SIGTMP",DIQ(0)="I,E,N" D EN^DIQ1
"RTN","VAFCSB",39,0)
 I '$D(SIGTMP) K DA,DR,DIQ  Q OBX
"RTN","VAFCSB",40,0)
 S SIG=$G(SIGTMP(2,DFN,DR,"I")),SIGE=$G(SIGTMP(2,DFN,DR,"E"))
"RTN","VAFCSB",41,0)
 S OBX="OBX"_HL("FS")_HL("FS")_"CE"_HL("FS")_"SELF ID GENDER"_HL("FS")_HL("FS")_SIG_$E(HL("ECH"),1)_SIGE
"RTN","VAFCSB",42,0)
 K DA,DR,DIC,DIQ
"RTN","VAFCSB",43,0)
 Q OBX
"RTN","VAFCSB",44,0)
DODF(DFN) ;**902 MVI_4898 (ckn) Build OBX for DOD fields
"RTN","VAFCSB",45,0)
 N DODTMP,DODEB,DODLEB,DODSRC,DODLUPD,DODSRCI,DODSRCE,CS,DODLNAM
"RTN","VAFCSB",46,0)
 N DODFNAM,DODMNAM,DODEBE,DODEBI,DODLEBE,DODLEBI,DODSRCCD
"RTN","VAFCSB",47,0)
 S CS=$E(HL("ECH")),SC=$E(HL("ECH"),4)
"RTN","VAFCSB",48,0)
 S DIC=2,DA=DFN,DR=".352;.353;.354;.355",DIQ="DODTMP",DIQ(0)="I,E,N" D EN^DIQ1
"RTN","VAFCSB",49,0)
 S DODSRCI=$G(DODTMP(2,DFN,.353,"I")),DODSRCE=$G(DODTMP(2,DFN,.353,"E")),DODSRC=HL("Q")
"RTN","VAFCSB",50,0)
 ; **926, Story #3230009 (ckn): Source of Notification moved from set of codes to pointer which is pointing to new Source Of Notification file (#47.76)
"RTN","VAFCSB",51,0)
 I DODSRCE'="" D
"RTN","VAFCSB",52,0)
 . S DODSRCCD=$P($G(^DG(47.76,DODSRCI,0)),"^",2)
"RTN","VAFCSB",53,0)
 . S DODSRC=DODSRCCD_CS_DODSRCE_CS_"L"
"RTN","VAFCSB",54,0)
 I DODSRCE'="" S DODSRC=DODSRCI_CS_DODSRCE_CS_"L"
"RTN","VAFCSB",55,0)
 S DODLUPD=$G(DODTMP(2,DFN,.354,"I")) S DODLUPD=$S(DODLUPD="":HL("Q"),1:$$HLDATE^HLFNC(DODLUPD))
"RTN","VAFCSB",56,0)
 ;If LAST EDITED BY field(#.355) have value, use it to populate sequence 16 of OBX
"RTN","VAFCSB",57,0)
 ;If LAST EDITED BY field(#.355) does not have value, use DEATH ENTERED BY field(#.352) to populate sequence 16 of OBX
"RTN","VAFCSB",58,0)
 ;If both fields empty, send double quotes in sequence 16 of OBX
"RTN","VAFCSB",59,0)
 S DODLEB=HL("Q") ;Default seq 16
"RTN","VAFCSB",60,0)
 S DODEBE=$G(DODTMP(2,DFN,.352,"E")),DODEBI=$G(DODTMP(2,DFN,.352,"I")) ;DOD Entered by
"RTN","VAFCSB",61,0)
 S DODLEBE=$G(DODTMP(2,DFN,.355,"E")),DODLEBI=$G(DODTMP(2,DFN,.355,"I")) ;DOD Last Edited By
"RTN","VAFCSB",62,0)
 I DODLEBE'="" D
"RTN","VAFCSB",63,0)
 .S DODLEBE=$$HLNAME^HLFNC(DODLEBE,CS),DODLNAM=$S($P(DODLEBE,CS)="":HL("Q"),1:$P(DODLEBE,CS)),DODFNAM=$S($P(DODLEBE,CS,2)="":HL("Q"),1:$P(DODLEBE,CS,2)),DODMNAM=$S($P(DODLEBE,CS,3)="":HL("Q"),1:$P(DODLEBE,CS,3))
"RTN","VAFCSB",64,0)
 .S DODLEB=$S(DODLEBI="":HL("Q"),1:DODLEBI)_CS_DODLNAM_CS_DODFNAM_CS_DODMNAM_CS_CS_CS_CS_CS_"USVHA"_SC_SC_"0363"_CS_"L"_CS_CS_CS_"PN"_CS_"VA FACILITY ID"_SC_$P($$SITE^VASITE(),"^",3)_SC_"L"
"RTN","VAFCSB",65,0)
 I DODLEBE="",(DODEBE'="") D
"RTN","VAFCSB",66,0)
 .S DODEBE=$$HLNAME^HLFNC(DODEBE,CS),DODLNAM=$S($P(DODEBE,CS)="":HL("Q"),1:$P(DODEBE,CS)),DODFNAM=$S($P(DODEBE,CS,2)="":HL("Q"),1:$P(DODEBE,CS,2)),DODMNAM=$S($P(DODEBE,CS,3)="":HL("Q"),1:$P(DODEBE,CS,3))
"RTN","VAFCSB",67,0)
 .S DODLEB=$S(DODEBI="":HL("Q"),1:DODEBI)_CS_DODLNAM_CS_DODFNAM_CS_DODMNAM_CS_CS_CS_CS_CS_"USVHA"_SC_SC_"0363"_CS_"L"_CS_CS_CS_"PN"_CS_"VA FACILITY ID"_SC_$P($$SITE^VASITE(),"^",3)_SC_"L"
"RTN","VAFCSB",68,0)
 S OBX="OBX"_HL("FS")_HL("FS")_"CE"_HL("FS")_"DATE OF DEATH DATA"_HL("FS")_HL("FS")_DODSRC_HL("FS")_HL("FS")_HL("FS")_HL("FS")_HL("FS")_HL("FS")_"R"_HL("FS")_HL("FS")_HL("FS")_DODLUPD_HL("FS")_HL("FS")_$G(DODLEB)
"RTN","VAFCSB",69,0)
 K DA,DR,DIC,DIQ
"RTN","VAFCSB",70,0)
 Q OBX
"RTN","VAFCSB",71,0)
 ;
"RTN","VAFCSB",72,0)
DODD(DFN) ;**926, Story #3230009 (ckn): Build OBX for DATE OF DEATH DOCUMENTS
"RTN","VAFCSB",73,0)
 N OBX,DODTMP,DODDI,DODD,DODDE,DODDCD
"RTN","VAFCSB",74,0)
 S CS=$E(HL("ECH"))
"RTN","VAFCSB",75,0)
 S DIC=2,DA=DFN,DR=".357",DIQ="DODTMP",DIQ(0)="I,E,N" D EN^DIQ1
"RTN","VAFCSB",76,0)
 S DODDI=$G(DODTMP(2,DFN,.357,"I")),DODDE=$G(DODTMP(2,DFN,.357,"E")),DODD=HL("Q")
"RTN","VAFCSB",77,0)
 I DODDE'="" D
"RTN","VAFCSB",78,0)
 . S DODDCD=$P($G(^DG(47.75,DODDI,0)),"^",2)
"RTN","VAFCSB",79,0)
 . S DODD=DODDCD_CS_DODDE_CS_"L"
"RTN","VAFCSB",80,0)
 S OBX="OBX"_HL("FS")_HL("FS")_"CE"_HL("FS")_"DATE OF DEATH DOCUMENTS"_HL("FS")_HL("FS")_DODD
"RTN","VAFCSB",81,0)
 K DA,DR,DIC,DIQ
"RTN","VAFCSB",82,0)
 Q OBX
"RTN","VAFCSB",83,0)
 ;
"RTN","VAFCSB",84,0)
DODOPT(DFN) ;**926, Story #3230009 (ckn): Build OBX for DATE OF DEATH OPTION
"RTN","VAFCSB",85,0)
 N OBX,DODOPT,DODOPTE,DODOPTI
"RTN","VAFCSB",86,0)
 S CS=$E(HL("ECH"))
"RTN","VAFCSB",87,0)
 S DIC=2,DA=DFN,DR=".358",DIQ="DODTMP",DIQ(0)="I,E,N" D EN^DIQ1
"RTN","VAFCSB",88,0)
 S DODOPTE=$G(DODTMP(2,DFN,.358,"E")),DODOPTI=$G(DODTMP(2,DFN,.358,"I")),DODOPT=HL("Q")
"RTN","VAFCSB",89,0)
 I DODOPTE'="" S DODOPT=DODOPTI_CS_DODOPTE_CS_"L"
"RTN","VAFCSB",90,0)
 S OBX="OBX"_HL("FS")_HL("FS")_"CE"_HL("FS")_"DATE OF DEATH OPTION"_HL("FS")_HL("FS")_DODOPT
"RTN","VAFCSB",91,0)
 K DA,DR,DIC,DIQ
"RTN","VAFCSB",92,0)
 Q OBX
"RTN","VAFCSB",93,0)
 ;
"RTN","VAFCSB",94,0)
DODDISDT(DFN) ;**926, Story #3230009 (ckn): Build OBX for DATE OF DEATH DISCHARGE DATE
"RTN","VAFCSB",95,0)
 ;Q OBX
"RTN","VAFCSB",96,0)
 ;
"RTN","VAFCSB",97,0)
DODNTPRV(DFN) ;**926, Story #3230009 (ckn): Build OBX for DATE OF DEATH NOTIFICATION
"RTN","VAFCSB",98,0)
 N OBX,DODNP,STN
"RTN","VAFCSB",99,0)
 S CS=$E(HL("ECH")),STN=$$SITE^VASITE(),DODNP=""
"RTN","VAFCSB",100,0)
 ;Populate notify provider if Date of Death last updated have value
"RTN","VAFCSB",101,0)
 I $$GET1^DIQ(2,DFN_",",.354,"I")'="" S DODNP=$P(STN,"^",3)_CS_$P(STN,"^",2)_CS_"L"
"RTN","VAFCSB",102,0)
 S OBX="OBX"_HL("FS")_HL("FS")_"CE"_HL("FS")_"NOTIFY PROVIDER"_HL("FS")_HL("FS")_DODNP
"RTN","VAFCSB",103,0)
 Q OBX
"RTN","VAFCSB",104,0)
 ;
"RTN","VAFCSB",105,0)
NAMEOBX(DFN) ;**876,MVI_3453 (mko): Build OBX for Patient .01 and Name Components
"RTN","VAFCSB",106,0)
 N FS
"RTN","VAFCSB",107,0)
 S FS=HL("FS")
"RTN","VAFCSB",108,0)
 Q "OBX"_FS_FS_"CE"_FS_"NAME COMPONENTS"_FS_FS_$$NAMECOMP(DFN,$E(HL("ECH")))
"RTN","VAFCSB",109,0)
NAMEERR(DFN) ;**876,MVI_3453 (mko): Build ERR for Patient .01 and Name Components
"RTN","VAFCSB",110,0)
 N CS,SC
"RTN","VAFCSB",111,0)
 S CS=$E(HL("ECH")),SC=$E(HL("ECH"),4)
"RTN","VAFCSB",112,0)
 Q "ERR"_HL("FS")_CS_CS_CS_SC_$$NAMECOMP(DFN,SC)
"RTN","VAFCSB",113,0)
NAMECOMP(DFN,DELIM) ;**876,MVI_3453 (mko): Return Patient .01 and Name Components
"RTN","VAFCSB",114,0)
 N DIHELP,DIMSG,DIERR,MSG,NC,NCIEN,NCIENS,NCPTR,TARG
"RTN","VAFCSB",115,0)
 S NC=$P($G(^DPT(DFN,0)),"^")
"RTN","VAFCSB",116,0)
 S NCPTR=$P($G(^DPT(DFN,"NAME")),"^") Q:'NCPTR NC
"RTN","VAFCSB",117,0)
 S NCIEN=$$FIND1^DIC(20,"","","`"_NCPTR,"","","MSG") Q:'NCIEN NC
"RTN","VAFCSB",118,0)
 S NCIENS=NCIEN_","
"RTN","VAFCSB",119,0)
 D GETS^DIQ(20,NCIENS,"1:5","","TARG","MSG") Q:$G(DIERR) NC
"RTN","VAFCSB",120,0)
 S NC=NC_DELIM_TARG(20,NCIENS,1)_DELIM_TARG(20,NCIENS,2)_DELIM_TARG(20,NCIENS,3)_DELIM_TARG(20,NCIENS,5)_DELIM_TARG(20,NCIENS,4)
"RTN","VAFCSB",121,0)
 Q NC
"RTN","VAFCSB",122,0)
LABE() ;BUILD OBX FOR LAST LAB TEST DATE
"RTN","VAFCSB",123,0)
 N OBX S OBX=""
"RTN","VAFCSB",124,0)
 I '$$PATCH^XPDUTL("LR*5.2*295") Q OBX
"RTN","VAFCSB",125,0)
 N LAB,LAB2,EN
"RTN","VAFCSB",126,0)
 S LAB="" K ^TMP("DGLAB",$J) D RESULTS^LRPXAPI("DGLAB",DFN,"C")
"RTN","VAFCSB",127,0)
 S EN=$O(^TMP("DGLAB",$J,"")) I EN'="" S LAB=$P($G(^TMP("DGLAB",$J,EN)),"^")
"RTN","VAFCSB",128,0)
 K ^TMP("DGLAB",$J) D RESULTS^LRPXAPI("DGLAB",DFN,"A")
"RTN","VAFCSB",129,0)
 S EN=$O(^TMP("DGLAB",$J,"")) I EN'="" S LAB2=$P($G(^TMP("DGLAB",$J,EN)),"^") I LAB2>LAB S LAB=LAB2
"RTN","VAFCSB",130,0)
 K ^TMP("DGLAB",$J) D RESULTS^LRPXAPI("DGLAB",DFN,"M")
"RTN","VAFCSB",131,0)
 S EN=$O(^TMP("DGLAB",$J,"")) I EN'="" S LAB2=$P($G(^TMP("DGLAB",$J,EN)),"^") I LAB2>LAB S LAB=LAB2
"RTN","VAFCSB",132,0)
 I LAB'="" D
"RTN","VAFCSB",133,0)
 .S $P(OBX,HL("FS"),2)="TS" ;**756 added the data type
"RTN","VAFCSB",134,0)
 .S $P(OBX,HL("FS"),3)="LAST LAB TEST DATE/TIME"
"RTN","VAFCSB",135,0)
 .S $P(OBX,HL("FS"),11)="F"
"RTN","VAFCSB",136,0)
 .S $P(OBX,HL("FS"),14)=$$HLDATE^HLFNC(LAB)
"RTN","VAFCSB",137,0)
 .S OBX="OBX"_HL("FS")_OBX
"RTN","VAFCSB",138,0)
 Q OBX
"RTN","VAFCSB",139,0)
RADE() ;BUILD OBX FOR LAST RADIOLOGY TEST DATE
"RTN","VAFCSB",140,0)
 N RET S RET=""
"RTN","VAFCSB",141,0)
 I '$$PATCH^XPDUTL("RA*5.0*76") Q RET
"RTN","VAFCSB",142,0)
 N RAD,RADE
"RTN","VAFCSB",143,0)
 S RAD="",RADE=$$XAMDT^RAO7UTL1(DFN) I +RADE<1 Q RAD
"RTN","VAFCSB",144,0)
 I +RADE>0 D
"RTN","VAFCSB",145,0)
 .S $P(OBX,HL("FS"),2)="TS" ;**756 added the data type
"RTN","VAFCSB",146,0)
 .S $P(RAD,HL("FS"),3)="LAST RADIOLOGY EXAM DATE/TIME"
"RTN","VAFCSB",147,0)
 .S $P(RAD,HL("FS"),11)="F"
"RTN","VAFCSB",148,0)
 .S $P(RAD,HL("FS"),14)=$$HLDATE^HLFNC(RADE)
"RTN","VAFCSB",149,0)
 .S RAD="OBX"_HL("FS")_RAD
"RTN","VAFCSB",150,0)
 Q RAD
"RTN","VAFCSB",151,0)
PD1() ;BUILD PD1 segment
"RTN","VAFCSB",152,0)
 ;PREFERRED FACILITY -- NOT GOING TO BE PASSED PER IMDQ 9/7/06
"RTN","VAFCSB",153,0)
 N TEAM,PD1
"RTN","VAFCSB",154,0)
 S PD1=""
"RTN","VAFCSB",155,0)
 ;S TEAM=$$PREF^DGENPTA(DFN)
"RTN","VAFCSB",156,0)
 ;I TEAM'="" S PD1="PD1"_HL("FS")_HL("FS")_HL("FS")_$$STA^XUAF4(TEAM)
"RTN","VAFCSB",157,0)
 Q PD1
"RTN","VAFCSB",158,0)
PV1() ;BUILD PV1 SEGMENT
"RTN","VAFCSB",159,0)
 ;CURRENTLY ADMITTED?
"RTN","VAFCSB",160,0)
 N PV1,VAINDT
"RTN","VAFCSB",161,0)
 S PV1=""
"RTN","VAFCSB",162,0)
 S VAINDT=DT
"RTN","VAFCSB",163,0)
 D INP^VADPT
"RTN","VAFCSB",164,0)
 I $G(VAIN(1))'="" S $P(PV1,HL("FS"),44)=$$HLDATE^HLFNC($P(VAIN(7),"^")),PV1="PV1"_HL("FS")_PV1
"RTN","VAFCSB",165,0)
 K VAIN
"RTN","VAFCSB",166,0)
 Q PV1
"RTN","VAFCTR")
0^1^B4717959^B4435550
"RTN","VAFCTR",1,0)
VAFCTR ;BIR/CMC,ERC,PTD-Monitoring fields for MPI/PD via DG field monitoring ; 3/30/07
"RTN","VAFCTR",2,0)
 ;;5.3;Registration;**575,648,653,712,876,902,926**;Aug 13, 1993;Build 6
"RTN","VAFCTR",3,0)
 Q  ; quit if called from the top
"RTN","VAFCTR",4,0)
 ;
"RTN","VAFCTR",5,0)
MPIPD ; protocol entry point for monitoring fields via DG field monitoring
"RTN","VAFCTR",6,0)
 ; Currently monitoring for fields:
"RTN","VAFCTR",7,0)
 ; 1 ALIAS - .01 of the multiple
"RTN","VAFCTR",8,0)
 ; 2 RACE INFORMATION - .01 of the multiple
"RTN","VAFCTR",9,0)
 ; 6 ETHNICITY INFORMATION - .01 of the multiple
"RTN","VAFCTR",10,0)
 ; 994 MULTIPLE BIRTH INDICATOR
"RTN","VAFCTR",11,0)
 ; .525 POW STAUTS INDICATED?
"RTN","VAFCTR",12,0)
 ; .0906 PSEUDO SSN REASON
"RTN","VAFCTR",13,0)
 ; .121 BAD ADDRESS INDICATOR
"RTN","VAFCTR",14,0)
 ; .133 EMAIL ADDRESS
"RTN","VAFCTR",15,0)
 ; .134 PHONE NUMBER [CELLULAR]
"RTN","VAFCTR",16,0)
 ; .024 SELF IDENTIFIED GENDER **876
"RTN","VAFCTR",17,0)
 ; 391 TYPE ;**876
"RTN","VAFCTR",18,0)
 ; 1901 VETERAN Y/N? **876
"RTN","VAFCTR",19,0)
 ; .323 PERIOD OF SERVICE **876
"RTN","VAFCTR",20,0)
 ; .352 DEATH ENTERED BY **902 MVI_4735 (jfw)
"RTN","VAFCTR",21,0)
 ; .353 SOURCE OF NOTIFICATION **902 MVI_4735 (jfw)
"RTN","VAFCTR",22,0)
 ; .354 DATE OF DEATH LAST UPDATED **902 MVI_4735 (jfw)
"RTN","VAFCTR",23,0)
 ; .355 LAST EDITED BY **902 MVI_4735 (jfw)
"RTN","VAFCTR",24,0)
 ; .357 SUPPORTING DOCUMENT TYPE **926 STORY 323008 (jfw)
"RTN","VAFCTR",25,0)
 ;
"RTN","VAFCTR",26,0)
 N MVIRSLT
"RTN","VAFCTR",27,0)
 I $G(DGFILE)'=2&($G(DGFILE)'=2.01)&($G(DGFILE)'=2.02)&($G(DGFILE)'=2.06) Q
"RTN","VAFCTR",28,0)
 S DGFIELD=$G(DGFIELD)
"RTN","VAFCTR",29,0)
 ;I DGFIELD'=.01&(DGFIELD'=994)&(DGFIELD'=.525)&(DGFIELD'=.0906)&(DGFIELD'=.121)&(DGFIELD'=.133)&(DGFIELD'=.134)&(DGFIELD'=391)&(DGFIELD'=1901)&(DGFIELD'=.323)&(DGFIELD'=.024) Q
"RTN","VAFCTR",30,0)
 ;**902 MVI_4735 (jfw) Add 4 new fields to list (Break apart long If line above)
"RTN","VAFCTR",31,0)
 S MVIRSLT=(DGFIELD'=.01)&(DGFIELD'=994)&(DGFIELD'=.525)&(DGFIELD'=.0906)&(DGFIELD'=.121)&(DGFIELD'=.133)
"RTN","VAFCTR",32,0)
 S MVIRSLT=MVIRSLT&(DGFIELD'=.134)&(DGFIELD'=391)&(DGFIELD'=1901)&(DGFIELD'=.323)&(DGFIELD'=.024)
"RTN","VAFCTR",33,0)
 S MVIRSLT=MVIRSLT&(DGFIELD'=.352)&(DGFIELD'=.353)&(DGFIELD'=.354)&(DGFIELD'=.355)&(DGFIELD'=.357)
"RTN","VAFCTR",34,0)
 Q:(MVIRSLT)
"RTN","VAFCTR",35,0)
 I $T(AVAFC^VAFCDD01)="" Q
"RTN","VAFCTR",36,0)
 ;The fields below are not multiples
"RTN","VAFCTR",37,0)
 ;I (DGFIELD=994)!(DGFIELD=.525)!(DGFIELD=.0906)!(DGFIELD=.121)!(DGFIELD=.133)!(DGFIELD=.134)!(DGFIELD=.024)!(DGFIELD=391)!(DGFIELD=1901)!(DGFIELD=.323) S VAFCF=DGFIELD_";" D AVAFC^VAFCDD01(DGDA)
"RTN","VAFCTR",38,0)
 ;**902 MVI_4735 (jfw) Add 4 new fields to list (Break apart long If line above)
"RTN","VAFCTR",39,0)
 S MVIRSLT=(DGFIELD=994)!(DGFIELD=.525)!(DGFIELD=.0906)!(DGFIELD=.121)!(DGFIELD=.133)
"RTN","VAFCTR",40,0)
 S MVIRSLT=MVIRSLT!(DGFIELD=.134)!(DGFIELD=.024)!(DGFIELD=391)!(DGFIELD=1901)!(DGFIELD=.323)
"RTN","VAFCTR",41,0)
 S MVIRSLT=MVIRSLT!(DGFIELD=.352)!(DGFIELD=.353)!(DGFIELD=.354)!(DGFIELD=.355)!(DGFIELD=.357)
"RTN","VAFCTR",42,0)
 I MVIRSLT S VAFCF=DGFIELD_";" D AVAFC^VAFCDD01(DGDA)
"RTN","VAFCTR",43,0)
 ;The fields below ARE multiples
"RTN","VAFCTR",44,0)
 I DGFILE=2.01 S VAFCF="1;" D AVAFC^VAFCDD01(DGDA(1)) ;ALIAS
"RTN","VAFCTR",45,0)
 I DGFILE=2.02 S VAFCF="2.02,.01;" D AVAFC^VAFCDD01(DGDA(1)) ;RACE INFORMATION
"RTN","VAFCTR",46,0)
 I DGFILE=2.06 S VAFCF="2.06,.01;" D AVAFC^VAFCDD01(DGDA(1)) ;ETHNICITY INFORMATION
"RTN","VAFCTR",47,0)
 Q
"SEC","^DIC",47.75,47.75,0,"AUDIT")
@
"SEC","^DIC",47.75,47.75,0,"DD")
@
"SEC","^DIC",47.75,47.75,0,"DEL")
@
"SEC","^DIC",47.75,47.75,0,"LAYGO")
@
"SEC","^DIC",47.75,47.75,0,"RD")
@
"SEC","^DIC",47.75,47.75,0,"WR")
@
"SEC","^DIC",47.76,47.76,0,"AUDIT")
@
"SEC","^DIC",47.76,47.76,0,"DD")
@
"SEC","^DIC",47.76,47.76,0,"DEL")
@
"SEC","^DIC",47.76,47.76,0,"LAYGO")
@
"SEC","^DIC",47.76,47.76,0,"RD")
@
"SEC","^DIC",47.76,47.76,0,"WR")
@
"VER")
8.0^22.0
"^DD",2,2,.353,0)
SOURCE OF NOTIFICATION^*P47.76'a^DG(47.76,^.35;3^S DIC("S")="I $P(^(0),U,3)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",2,2,.353,1,0)
^.1^^0
"^DD",2,2,.353,1,1,0)
2^AENR353^MUMPS
"^DD",2,2,.353,1,1,1)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.353,1,1,2)
D EVENT^IVMPLOG(DA)
"^DD",2,2,.353,1,1,3)
 DO NOT DELETE
"^DD",2,2,.353,1,1,"%D",0)
^.101^2^2^3050608^^^^
"^DD",2,2,.353,1,1,"%D",1,0)
This cross-reference is used to notify HEC of changes that may affect
"^DD",2,2,.353,1,1,"%D",2,0)
enrollment.
"^DD",2,2,.353,1,1,"DT")
3050608
"^DD",2,2,.353,3)
Select the appropriate SOURCE OF NOTIFICATION from the list that specifies who first notified the VA of the patient's death.
"^DD",2,2,.353,12)
Only 'Active' notifications may be selected from the list.
"^DD",2,2,.353,12.1)
S DIC("S")="I $P(^(0),U,3)=1"
"^DD",2,2,.353,21,0)
^.001^2^2^3160622^^^^
"^DD",2,2,.353,21,1,0)
SOURCE OF NOTIFICATION represents who/what notified the VA of the 
"^DD",2,2,.353,21,2,0)
patient's DATE OF DEATH.
"^DD",2,2,.353,"AUDIT")
y
"^DD",2,2,.353,"DT")
3160622
"^DD",2,2,.357,0)
SUPPORTING DOCUMENT TYPE^P47.75'a^DG(47.75,^.35;7^Q
"^DD",2,2,.357,3)
Select the appropriate SUPPORTING DOCUMENT TYPE from the list that identifies the current document used to inform of a patient's death.
"^DD",2,2,.357,4)
D SDTHELP^DGDEATH
"^DD",2,2,.357,21,0)
^.001^2^2^3160718^^^^
"^DD",2,2,.357,21,1,0)
The Supporting Document Type selected from the available list identifies 
"^DD",2,2,.357,21,2,0)
the current method of how the site was notified of a patient's death.
"^DD",2,2,.357,"AUDIT")
y
"^DD",2,2,.357,"DT")
3160622
"^DD",2,2,.358,0)
DATE OF DEATH OPTION USED^Sa^JOBJ:JRN_OBJ;JAPP:JRN_APP;JSTN:JRN_STN;VDE:DEATH ENTRY;VDP:DISCHARGE A PATIENT;^.35;8^Q
"^DD",2,2,.358,3)
Select the code that specifies the option used when modifying a patient's DATE OF DEATH.
"^DD",2,2,.358,21,0)
^^3^3^3160718^
"^DD",2,2,.358,21,1,0)
The DATE OF DEATH OPTION USED value indicates the option that was 
"^DD",2,2,.358,21,2,0)
executed when a patient's DATE OF DEATH is modified at the medical 
"^DD",2,2,.358,21,3,0)
facility.
"^DD",2,2,.358,"AUDIT")
y
"^DD",2,2,.358,"DT")
3160708
"^DD",43,43,1401,0)
PROCESS MVI DOD UPDATE?^S^1:YES;0:NO;^MVI;1^Q
"^DD",43,43,1401,3)
Select the code that specifies if DOD messages from MVI should be processed.
"^DD",43,43,1401,21,0)
^^2^2^3160623^
"^DD",43,43,1401,21,1,0)
The PROCESS MVI DOD UPDATE? value indicates whether the site should 
"^DD",43,43,1401,21,2,0)
process Date of Death (DOD) messages from the Master Veteran Index (MVI).
"^DD",43,43,1401,"DT")
3160623
"^DD",47.75,47.75,0)
FIELD^^50^3
"^DD",47.75,47.75,0,"DDA")
N
"^DD",47.75,47.75,0,"DT")
3160621
"^DD",47.75,47.75,0,"IX","B",47.75,.01)

"^DD",47.75,47.75,0,"IX","C",47.75,1)

"^DD",47.75,47.75,0,"NM","SUPPORTING DOCUMENTATION TYPES")

"^DD",47.75,47.75,0,"PT",2,.357)

"^DD",47.75,47.75,.01,0)
SUPPORTING DOCUMENTATION TYPE^RF^^0;1^K:$L(X)>100!($L(X)<3)!'(X'?1P.E) X
"^DD",47.75,47.75,.01,1,0)
^.1
"^DD",47.75,47.75,.01,1,1,0)
47.75^B
"^DD",47.75,47.75,.01,1,1,1)
S ^DG(47.75,"B",$E(X,1,100),DA)=""
"^DD",47.75,47.75,.01,1,1,2)
K ^DG(47.75,"B",$E(X,1,100),DA)
"^DD",47.75,47.75,.01,3)
Enter the Supporting Documentation Type (3-100 characters) that defines a document that records a patient's death.
"^DD",47.75,47.75,.01,21,0)
^^3^3^3160621^
"^DD",47.75,47.75,.01,21,1,0)
The SUPPORTING DOCUMENTATION TYPE field identifies the document 
"^DD",47.75,47.75,.01,21,2,0)
associated with a specific patient death event. Specifically how the 
"^DD",47.75,47.75,.01,21,3,0)
patient's death was recorded.
"^DD",47.75,47.75,.01,"DT")
3160621
"^DD",47.75,47.75,1,0)
TYPE CODE^RF^^0;2^K:$L(X)>10!($L(X)<1) X
"^DD",47.75,47.75,1,1,0)
^.1
"^DD",47.75,47.75,1,1,1,0)
47.75^C
"^DD",47.75,47.75,1,1,1,1)
S ^DG(47.75,"C",$E(X,1,30),DA)=""
"^DD",47.75,47.75,1,1,1,2)
K ^DG(47.75,"C",$E(X,1,30),DA)
"^DD",47.75,47.75,1,1,1,"%D",0)
^^3^3^3160621^
"^DD",47.75,47.75,1,1,1,"%D",1,0)
This cross-reference creates an index of all the TYPE CODEs so that they 
"^DD",47.75,47.75,1,1,1,"%D",2,0)
can be used as a lookup to retrieve the full name value of the SUPPORTING 
"^DD",47.75,47.75,1,1,1,"%D",3,0)
DOCUMENTATION TYPE field.
"^DD",47.75,47.75,1,1,1,"DT")
3160621
"^DD",47.75,47.75,1,3)
Enter the code (1-10 characters) associated with the SUPPORTING DOCUMENTATION TYPE.
"^DD",47.75,47.75,1,21,0)
^^1^1^3160621^
"^DD",47.75,47.75,1,21,1,0)
This code uniquely identifies the SUPPORTING DOCUMENTATION TYPE record.
"^DD",47.75,47.75,1,"DT")
3160621
"^DD",47.75,47.75,50,0)
DESCRIPTION^47.751^^1;0
"^DD",47.75,47.751,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",47.75,47.751,0,"DT")
3160621
"^DD",47.75,47.751,0,"NM","DESCRIPTION")

"^DD",47.75,47.751,0,"UP")
47.75
"^DD",47.75,47.751,.01,0)
DESCRIPTION^Wx^^0;1^Q
"^DD",47.75,47.751,.01,3)
Enter the description that defines the SUPPORTING DOCUMENTATION type.
"^DD",47.75,47.751,.01,21,0)
^^2^2^3160621^
"^DD",47.75,47.751,.01,21,1,0)
The DESCRIPTION value details the content of the SUPPORTING DOCUMENTATION 
"^DD",47.75,47.751,.01,21,2,0)
TYPE record, including regulation references if available/known.
"^DD",47.75,47.751,.01,"DT")
3160621
"^DD",47.76,47.76,0)
FIELD^^2^3
"^DD",47.76,47.76,0,"DDA")
N
"^DD",47.76,47.76,0,"DT")
3160621
"^DD",47.76,47.76,0,"IX","B",47.76,.01)

"^DD",47.76,47.76,0,"IX","C",47.76,1)

"^DD",47.76,47.76,0,"NM","SOURCE OF NOTIFICATIONS")

"^DD",47.76,47.76,0,"PT",2,.353)

"^DD",47.76,47.76,.01,0)
SOURCE OF NOTIFICATION^RF^^0;1^K:$L(X)>75!($L(X)<2)!'(X'?1P.E) X
"^DD",47.76,47.76,.01,1,0)
^.1
"^DD",47.76,47.76,.01,1,1,0)
47.76^B
"^DD",47.76,47.76,.01,1,1,1)
S ^DG(47.76,"B",$E(X,1,75),DA)=""
"^DD",47.76,47.76,.01,1,1,2)
K ^DG(47.76,"B",$E(X,1,75),DA)
"^DD",47.76,47.76,.01,3)
Enter the Source of Notification (2-75 characters) that identifies who first notified the VA of the patient's death.
"^DD",47.76,47.76,.01,21,0)
^^2^2^3160621^
"^DD",47.76,47.76,.01,21,1,0)
The SOURCE OF NOTIFICATION field identifies the entity who first notified 
"^DD",47.76,47.76,.01,21,2,0)
the VA of the patient's death.
"^DD",47.76,47.76,.01,"DT")
3160621
"^DD",47.76,47.76,1,0)
NOTIFICATION CODE^RNJ10,0^^0;2^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",47.76,47.76,1,1,0)
^.1
"^DD",47.76,47.76,1,1,1,0)
47.76^C
"^DD",47.76,47.76,1,1,1,1)
S ^DG(47.76,"C",$E(X,1,30),DA)=""
"^DD",47.76,47.76,1,1,1,2)
K ^DG(47.76,"C",$E(X,1,30),DA)
"^DD",47.76,47.76,1,1,1,"%D",0)
^^3^3^3160621^
"^DD",47.76,47.76,1,1,1,"%D",1,0)
This cross-reference creates an index of all the NOTIFICATION CODEs so 
"^DD",47.76,47.76,1,1,1,"%D",2,0)
that they can be used as a lookup to retrieve the full named value of the 
"^DD",47.76,47.76,1,1,1,"%D",3,0)
SOURCE OF NOTIFICATION field.
"^DD",47.76,47.76,1,1,1,"DT")
3160621
"^DD",47.76,47.76,1,3)
Enter the code (1-10 digits) associated with the SOURCE OF NOTIFICATION.
"^DD",47.76,47.76,1,21,0)
^^1^1^3160621^
"^DD",47.76,47.76,1,21,1,0)
The code that uniquely identifies the SOURCE OF NOTIFICATION record.
"^DD",47.76,47.76,1,"DT")
3160621
"^DD",47.76,47.76,2,0)
ACTIVE?^S^0:NO;1:YES;^0;3^Q
"^DD",47.76,47.76,2,3)
Select the code that specifies whether the notification is active or historical.
"^DD",47.76,47.76,2,21,0)
^^3^3^3160621^
"^DD",47.76,47.76,2,21,1,0)
The ACTIVE value indicates whether the SOURCE OF NOTIFICATION is 
"^DD",47.76,47.76,2,21,2,0)
active (1) and available for selection or is historical (0) and is NOT 
"^DD",47.76,47.76,2,21,3,0)
available for selection.
"^DD",47.76,47.76,2,"DT")
3160622
"^DIC",47.75,47.75,0)
SUPPORTING DOCUMENTATION TYPES^47.75
"^DIC",47.75,47.75,0,"GL")
^DG(47.75,
"^DIC",47.75,47.75,"%D",0)
^^3^3^3160621^
"^DIC",47.75,47.75,"%D",1,0)
This file contains all of the allowable Supporting Documentation Types 
"^DIC",47.75,47.75,"%D",2,0)
that identify the available documents detailing how a patient's death was 
"^DIC",47.75,47.75,"%D",3,0)
recorded.
"^DIC",47.75,"B","SUPPORTING DOCUMENTATION TYPES",47.75)

"^DIC",47.76,47.76,0)
SOURCE OF NOTIFICATIONS^47.76
"^DIC",47.76,47.76,0,"GL")
^DG(47.76,
"^DIC",47.76,47.76,"%D",0)
^1.001^5^5^3160621^^
"^DIC",47.76,47.76,"%D",1,0)
This file contains all of the allowable Source of Notifications that are 
"^DIC",47.76,47.76,"%D",2,0)
available for identifying who first notified the VA of a patient's death.
"^DIC",47.76,47.76,"%D",3,0)
 
"^DIC",47.76,47.76,"%D",4,0)
NOTE: The first nine (9) entries exported in this file will correlate to 
"^DIC",47.76,47.76,"%D",5,0)
the SET OF CODES that this file is replacing.
"^DIC",47.76,"B","SOURCE OF NOTIFICATIONS",47.76)

"BLD",3174,6)
^815
**END**
**END**

