Released DG*5.3*971 SEQ #852
Extracted from mail message
**KIDS**:DG*5.3*971^

**INSTALL NAME**
DG*5.3*971
"BLD",11241,0)
DG*5.3*971^REGISTRATION^0^3181017^y
"BLD",11241,1,0)
^^4^4^3181017^
"BLD",11241,1,1,0)
User gets <UNDEFINED>ACTIVE+51^DGPFAPIU *DGACT(0) when using the Reminder 
"BLD",11241,1,2,0)
Test[PXRM REMINDER TEST] option in the Reminder Managers Menu[PXRM 
"BLD",11241,1,3,0)
MANAGERS MENU] when the end date of the PRF Assignment date is the same 
"BLD",11241,1,4,0)
as the end date for the report. 
"BLD",11241,4,0)
^9.64PA^^
"BLD",11241,6.3)
5
"BLD",11241,"ABPKG")
n
"BLD",11241,"KRN",0)
^9.67PA^779.2^20
"BLD",11241,"KRN",.4,0)
.4
"BLD",11241,"KRN",.401,0)
.401
"BLD",11241,"KRN",.402,0)
.402
"BLD",11241,"KRN",.403,0)
.403
"BLD",11241,"KRN",.5,0)
.5
"BLD",11241,"KRN",.84,0)
.84
"BLD",11241,"KRN",3.6,0)
3.6
"BLD",11241,"KRN",3.8,0)
3.8
"BLD",11241,"KRN",9.2,0)
9.2
"BLD",11241,"KRN",9.8,0)
9.8
"BLD",11241,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",11241,"KRN",9.8,"NM",1,0)
DGPFAPIU^^0^B23563339
"BLD",11241,"KRN",9.8,"NM","B","DGPFAPIU",1)

"BLD",11241,"KRN",19,0)
19
"BLD",11241,"KRN",19.1,0)
19.1
"BLD",11241,"KRN",101,0)
101
"BLD",11241,"KRN",409.61,0)
409.61
"BLD",11241,"KRN",771,0)
771
"BLD",11241,"KRN",779.2,0)
779.2
"BLD",11241,"KRN",870,0)
870
"BLD",11241,"KRN",8989.51,0)
8989.51
"BLD",11241,"KRN",8989.52,0)
8989.52
"BLD",11241,"KRN",8994,0)
8994
"BLD",11241,"KRN","B",.4,.4)

"BLD",11241,"KRN","B",.401,.401)

"BLD",11241,"KRN","B",.402,.402)

"BLD",11241,"KRN","B",.403,.403)

"BLD",11241,"KRN","B",.5,.5)

"BLD",11241,"KRN","B",.84,.84)

"BLD",11241,"KRN","B",3.6,3.6)

"BLD",11241,"KRN","B",3.8,3.8)

"BLD",11241,"KRN","B",9.2,9.2)

"BLD",11241,"KRN","B",9.8,9.8)

"BLD",11241,"KRN","B",19,19)

"BLD",11241,"KRN","B",19.1,19.1)

"BLD",11241,"KRN","B",101,101)

"BLD",11241,"KRN","B",409.61,409.61)

"BLD",11241,"KRN","B",771,771)

"BLD",11241,"KRN","B",779.2,779.2)

"BLD",11241,"KRN","B",870,870)

"BLD",11241,"KRN","B",8989.51,8989.51)

"BLD",11241,"KRN","B",8989.52,8989.52)

"BLD",11241,"KRN","B",8994,8994)

"BLD",11241,"QDEF")
^^^^^^^^^^YES
"BLD",11241,"QUES",0)
^9.62^^
"BLD",11241,"REQB",0)
^9.611^1^1
"BLD",11241,"REQB",1,0)
DG*5.3*836^1
"BLD",11241,"REQB","B","DG*5.3*836",1)

"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
971^3181017
"PKG",5,22,1,"PAH",1,1,0)
^^4^4^3181017
"PKG",5,22,1,"PAH",1,1,1,0)
User gets <UNDEFINED>ACTIVE+51^DGPFAPIU *DGACT(0) when using the Reminder 
"PKG",5,22,1,"PAH",1,1,2,0)
Test[PXRM REMINDER TEST] option in the Reminder Managers Menu[PXRM 
"PKG",5,22,1,"PAH",1,1,3,0)
MANAGERS MENU] when the end date of the PRF Assignment date is the same 
"PKG",5,22,1,"PAH",1,1,4,0)
as the end date for the report. 
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","DGPFAPIU")
0^1^B23563339^B23057347
"RTN","DGPFAPIU",1,0)
DGPFAPIU ;ALB/SCK - PRF API UTILITIES FOR HIGH RISK MENTAL HEALTH ;Jan 21, 2011
"RTN","DGPFAPIU",2,0)
 ;;5.3;Registration;**836,971**;Aug 13, 1993;Build 5
"RTN","DGPFAPIU",3,0)
 ;
"RTN","DGPFAPIU",4,0)
 Q  ; No direct entry
"RTN","DGPFAPIU",5,0)
 ;
"RTN","DGPFAPIU",6,0)
CHKDATE(DGSTART,DGEND,DGRANGE) ; Check for valid start and end dates, set DGRANGE parameter
"RTN","DGPFAPIU",7,0)
 N DGRSLT
"RTN","DGPFAPIU",8,0)
 ;
"RTN","DGPFAPIU",9,0)
 S DGSTART=+$G(DGSTART),DGEND=+$G(DGEND)
"RTN","DGPFAPIU",10,0)
 S:DGSTART<0 DGSTART=0
"RTN","DGPFAPIU",11,0)
 ;
"RTN","DGPFAPIU",12,0)
 I 'DGSTART&('DGEND) D
"RTN","DGPFAPIU",13,0)
 . S DGRANGE="A"
"RTN","DGPFAPIU",14,0)
 . S DGSTART=0,DGEND=$P($$NOW^XLFDT,".")
"RTN","DGPFAPIU",15,0)
 E  D
"RTN","DGPFAPIU",16,0)
 . S DGRANGE="S"
"RTN","DGPFAPIU",17,0)
 ;
"RTN","DGPFAPIU",18,0)
 S DGRANGE("START")=DGSTART,DGRANGE("END")=DGEND
"RTN","DGPFAPIU",19,0)
 Q 1
"RTN","DGPFAPIU",20,0)
 ;
"RTN","DGPFAPIU",21,0)
CHKDFN(DGDFN,DGNAME) ; Check for a valid entry in the PATIENT file
"RTN","DGPFAPIU",22,0)
 N DGERR,DGRSLT
"RTN","DGPFAPIU",23,0)
 ;
"RTN","DGPFAPIU",24,0)
 S DGRSLT=1
"RTN","DGPFAPIU",25,0)
 S DGNAME=$$GET1^DIQ(2,DGDFN,.01,,,"DGERR")
"RTN","DGPFAPIU",26,0)
 I $D(DGERR) S DGRSLT=0,DGNAME=DGERR("DIERR",1,"TEXT",1)
"RTN","DGPFAPIU",27,0)
 Q $G(DGRSLT)
"RTN","DGPFAPIU",28,0)
 ;
"RTN","DGPFAPIU",29,0)
ASGNDATE(DGIEN) ; Get intial assignment date from new record history entry
"RTN","DGPFAPIU",30,0)
 N DGRSLT,DGX
"RTN","DGPFAPIU",31,0)
 ;
"RTN","DGPFAPIU",32,0)
 S DGX=0
"RTN","DGPFAPIU",33,0)
 F  S DGX=$O(^DGPF(26.14,"B",DGIEN,DGX)) Q:'DGX  D
"RTN","DGPFAPIU",34,0)
 . I $P($G(^DGPF(26.14,DGX,0)),U,3)=1 S DGRSLT=$P($G(^DGPF(26.14,DGX,0)),U,2)
"RTN","DGPFAPIU",35,0)
 ;
"RTN","DGPFAPIU",36,0)
 Q +$G(DGRSLT)
"RTN","DGPFAPIU",37,0)
 ;
"RTN","DGPFAPIU",38,0)
GETFLAG(DGPRF,DGCAT) ; Get the variable pointer value for the flag text passed in
"RTN","DGPFAPIU",39,0)
 ;  Input:  DGPRF - Flag name, i.e. BEHAVIORAL
"RTN","DGPFAPIU",40,0)
 ;          DGCAT - Flag Category, N - National  [Optional]
"RTN","DGPFAPIU",41,0)
 ;                                 L - Local
"RTN","DGPFAPIU",42,0)
 ;
"RTN","DGPFAPIU",43,0)
 ;  Output:  Returns the variable pointer value for the flag, i.e. "1;DGPF(25.15"
"RTN","DGPFAPIU",44,0)
 ;           If not found, returns "-1;NOT FOUND"
"RTN","DGPFAPIU",45,0)
 ;           If not Active, returns "-1;NOt ACTIVE"
"RTN","DGPFAPIU",46,0)
 ;
"RTN","DGPFAPIU",47,0)
 N DGIEN,DGDONE,DGRSLT,DGSTAT
"RTN","DGPFAPIU",48,0)
 ;
"RTN","DGPFAPIU",49,0)
 S DGCAT=$G(DGCAT)
"RTN","DGPFAPIU",50,0)
 S DGCAT=$S(DGCAT="N":1,DGCAT="L":2,1:0)
"RTN","DGPFAPIU",51,0)
 ;
"RTN","DGPFAPIU",52,0)
 I DGCAT=1 D
"RTN","DGPFAPIU",53,0)
 . S DGIEN=$O(^DGPF(26.15,"B",DGPRF,0))
"RTN","DGPFAPIU",54,0)
 . I DGIEN S DGDONE=1,DGRSLT=DGIEN_";DGPF(26.15,"
"RTN","DGPFAPIU",55,0)
 ;
"RTN","DGPFAPIU",56,0)
 I DGCAT=2 D
"RTN","DGPFAPIU",57,0)
 . S DGIEN=$O(^DGPF(26.11,"B",DGPRF,0))
"RTN","DGPFAPIU",58,0)
 . I DGIEN S DGDONE=1,DGRSLT=DGIEN_";DGPF(26.11,"
"RTN","DGPFAPIU",59,0)
 ;
"RTN","DGPFAPIU",60,0)
 I DGCAT=0 D
"RTN","DGPFAPIU",61,0)
 . ; Check the PRF local flag file for the flag first.  If found, return the appropriate variable pointer
"RTN","DGPFAPIU",62,0)
 . S DGIEN=$O(^DGPF(26.11,"B",DGPRF,0))
"RTN","DGPFAPIU",63,0)
 . I DGIEN S DGDONE=1,DGRSLT=DGIEN_";DGPF(26.11,"
"RTN","DGPFAPIU",64,0)
 . ; If not found in the PRF Local Flag file, then check the PRF National Flag file.  If found, return the appropriate variable pointer. 
"RTN","DGPFAPIU",65,0)
 . I '$G(DGDONE) D
"RTN","DGPFAPIU",66,0)
 .. S DGIEN=$O(^DGPF(26.15,"B",DGPRF,0))
"RTN","DGPFAPIU",67,0)
 .. I DGIEN S DGDONE=1,DGRSLT=DGIEN_";DGPF(26.15,"
"RTN","DGPFAPIU",68,0)
 ;
"RTN","DGPFAPIU",69,0)
 I '$G(DGDONE) S DGRSLT="-1;NOT FOUND"
"RTN","DGPFAPIU",70,0)
 ;
"RTN","DGPFAPIU",71,0)
 ; Check active status
"RTN","DGPFAPIU",72,0)
 I +$G(DGRSLT)>0 D
"RTN","DGPFAPIU",73,0)
 . S DGSTAT=$$GET1^DIQ($S(DGRSLT[26.11:26.11,1:26.15),+DGRSLT,.02,"I")
"RTN","DGPFAPIU",74,0)
 . I 'DGSTAT S DGRSLT="-1;NOT ACTIVE"
"RTN","DGPFAPIU",75,0)
 ; 
"RTN","DGPFAPIU",76,0)
 Q $G(DGRSLT)
"RTN","DGPFAPIU",77,0)
 ;
"RTN","DGPFAPIU",78,0)
ACTIVE(DGIEN,DGRANGE) ; Check if "active" during date range
"RTN","DGPFAPIU",79,0)
 ; Input
"RTN","DGPFAPIU",80,0)
 ;       DGIEN    - Pointer to PRF Assignment File (#26.13)
"RTN","DGPFAPIU",81,0)
 ;       DGRANGE  - Array containg Start Date/End Date
"RTN","DGPFAPIU",82,0)
 ;
"RTN","DGPFAPIU",83,0)
 ; Output
"RTN","DGPFAPIU",84,0)
 ;       DGRSLT: 1 - "Active"
"RTN","DGPFAPIU",85,0)
 ;               0 - "Not Active"
"RTN","DGPFAPIU",86,0)
 ;
"RTN","DGPFAPIU",87,0)
 N DGDT,DGX,DGACT,DGRSLT,DGACT2,DGPRE,DGPST,DGRSLT,DGCNT,DGDTPRE,DGDTPST
"RTN","DGPFAPIU",88,0)
 ;
"RTN","DGPFAPIU",89,0)
 S DGRSLT=0
"RTN","DGPFAPIU",90,0)
 ; Build array of actions fro processing
"RTN","DGPFAPIU",91,0)
 S (DGCNT,DGDT)=0
"RTN","DGPFAPIU",92,0)
 F  S DGDT=$O(^DGPF(26.14,"C",DGIEN,DGDT)) Q:'DGDT  D
"RTN","DGPFAPIU",93,0)
 . S DGX=$O(^DGPF(26.14,"C",DGIEN,DGDT,0)) Q:'DGX
"RTN","DGPFAPIU",94,0)
 . S DGACT(DGX)=$P($G(^DGPF(26.14,DGX,0)),U,3)_"^"_$P($P($G(^DGPF(26.14,DGX,0)),U,2),".")
"RTN","DGPFAPIU",95,0)
 . S DGCNT=DGCNT+1
"RTN","DGPFAPIU",96,0)
 S DGACT=DGCNT
"RTN","DGPFAPIU",97,0)
 ;
"RTN","DGPFAPIU",98,0)
 ; Check for last action of Entered in Error, if there is one, all previous actions are void
"RTN","DGPFAPIU",99,0)
 ; Quit, returning inactive status
"RTN","DGPFAPIU",100,0)
 S DGX=$O(DGACT(99999999),-1)
"RTN","DGPFAPIU",101,0)
 I $P(DGACT(DGX),U)=5 S DGRSLT=0 G CHKQ
"RTN","DGPFAPIU",102,0)
 ;
"RTN","DGPFAPIU",103,0)
 ; Begin checking history file
"RTN","DGPFAPIU",104,0)
 I DGRANGE["A" D
"RTN","DGPFAPIU",105,0)
 . I DGACT=1 D  ; If only one entry, should be NEW, process as active
"RTN","DGPFAPIU",106,0)
 .. S DGX=$O(DGACT(0))
"RTN","DGPFAPIU",107,0)
 .. S DGRSLT=$S($P(DGACT(DGX),U)=1:1,1:0)
"RTN","DGPFAPIU",108,0)
 . E  D
"RTN","DGPFAPIU",109,0)
 .. S DGX=$O(DGACT(99999999),-1)
"RTN","DGPFAPIU",110,0)
 .. I "3,5"[$P(DGACT(DGX),U) S DGRSLT=0 ; Check last entry for EiE or Inact
"RTN","DGPFAPIU",111,0)
 .. E  S DGRSLT=1
"RTN","DGPFAPIU",112,0)
 E  D
"RTN","DGPFAPIU",113,0)
 . I $P($$ASGNDATE^DGPFAPIU(DGIEN),".")>DGRANGE("END") S DGRSLT=0 Q
"RTN","DGPFAPIU",114,0)
 . S (DGACT2,DGX)=0
"RTN","DGPFAPIU",115,0)
 . F  S DGX=$O(DGACT(DGX)) Q:'DGX  D
"RTN","DGPFAPIU",116,0)
 .. I $P(DGACT(DGX),U,2)>DGRANGE("START")&($P(DGACT(DGX),U,2)<=DGRANGE("END")) S DGACT2(DGX)=DGACT(DGX),DGACT2=DGACT2+1 ; DG*971 Inclusive Range
"RTN","DGPFAPIU",117,0)
 . ; If actions are found within the date range, process for active status.
"RTN","DGPFAPIU",118,0)
 . I DGACT2>0 D
"RTN","DGPFAPIU",119,0)
 .. S DGX=0 F  S DGX=$O(DGACT2(DGX)) Q:'DGX  D
"RTN","DGPFAPIU",120,0)
 ... S DGRSLT=$S("1,2,4"[$P(DGACT2(DGX),U):1,1:0)
"RTN","DGPFAPIU",121,0)
 . ; If no action entry is found within the date range specified, then try to determine the status from
"RTN","DGPFAPIU",122,0)
 . ; the nearest action.
"RTN","DGPFAPIU",123,0)
 . E  D
"RTN","DGPFAPIU",124,0)
 .. S DGDTPRE=DGRANGE("START")_".999999"
"RTN","DGPFAPIU",125,0)
 .. S DGDTPRE=$O(^DGPF(26.14,"C",DGIEN,DGDTPRE),-1)
"RTN","DGPFAPIU",126,0)
 .. S DGPRE=$S(DGDTPRE>0:$O(^DGPF(26.14,"C",DGIEN,DGDTPRE,0)),1:0)
"RTN","DGPFAPIU",127,0)
 .. S DGDTPST=$O(^DGPF(26.14,"C",DGIEN,DGRANGE("END")))
"RTN","DGPFAPIU",128,0)
 .. S DGPST=$S(DGDTPST>0:$O(^DGPF(26.14,"C",DGIEN,DGDTPST,0)),1:0)
"RTN","DGPFAPIU",129,0)
 .. S DGRSLT=$S("1,2,4"[$P(DGACT(DGPRE),U):1,1:0)
"RTN","DGPFAPIU",130,0)
 .. I DGPST>0,$P(DGACT(DGPST),U)="5" S DGRSLT=0
"RTN","DGPFAPIU",131,0)
 ;
"RTN","DGPFAPIU",132,0)
CHKQ ;
"RTN","DGPFAPIU",133,0)
 ;
"RTN","DGPFAPIU",134,0)
 Q +$G(DGRSLT)
"VER")
8.0^22.2
"BLD",11241,6)
^852
**END**
**END**

