Released DG*5.3*915 SEQ #799
Extracted from mail message
**KIDS**:DG*5.3*915^

**INSTALL NAME**
DG*5.3*915
"BLD",3126,0)
DG*5.3*915^REGISTRATION^0^3151005^y
"BLD",3126,1,0)
^^3^3^3150713^
"BLD",3126,1,1,0)
ENTERPRISE REGISTRATION - ITERATION 14
"BLD",3126,1,2,0)
Refer to patch DG*5.3*915 in the FORUM Patch Module for a complete
"BLD",3126,1,3,0)
description.
"BLD",3126,4,0)
^9.64PA^^
"BLD",3126,6.3)
6
"BLD",3126,"ABNS",0)
^9.66A^^
"BLD",3126,"ABPKG")
n^y^G.CIRN DEV@FORUM.DOMAIN.EXT
"BLD",3126,"KRN",0)
^9.67PA^779.2^20
"BLD",3126,"KRN",.4,0)
.4
"BLD",3126,"KRN",.401,0)
.401
"BLD",3126,"KRN",.402,0)
.402
"BLD",3126,"KRN",.403,0)
.403
"BLD",3126,"KRN",.5,0)
.5
"BLD",3126,"KRN",.84,0)
.84
"BLD",3126,"KRN",3.6,0)
3.6
"BLD",3126,"KRN",3.8,0)
3.8
"BLD",3126,"KRN",9.2,0)
9.2
"BLD",3126,"KRN",9.8,0)
9.8
"BLD",3126,"KRN",9.8,"NM",0)
^9.68A^9^9
"BLD",3126,"KRN",9.8,"NM",1,0)
DGREGAZL^^0^B42841680
"BLD",3126,"KRN",9.8,"NM",2,0)
DGREGAED^^0^B42299807
"BLD",3126,"KRN",9.8,"NM",3,0)
DGADDUTL^^0^B57517976
"BLD",3126,"KRN",9.8,"NM",4,0)
DPTLK2^^0^B34529775
"BLD",3126,"KRN",9.8,"NM",5,0)
DGREG^^0^B51312405
"BLD",3126,"KRN",9.8,"NM",6,0)
DPTLK7^^0^B174142560
"BLD",3126,"KRN",9.8,"NM",7,0)
DPTLK1^^0^B48432581
"BLD",3126,"KRN",9.8,"NM",8,0)
DPTLK^^0^B121219825
"BLD",3126,"KRN",9.8,"NM",9,0)
DPTLK4^^0^B3783232
"BLD",3126,"KRN",9.8,"NM","B","DGADDUTL",3)

"BLD",3126,"KRN",9.8,"NM","B","DGREG",5)

"BLD",3126,"KRN",9.8,"NM","B","DGREGAED",2)

"BLD",3126,"KRN",9.8,"NM","B","DGREGAZL",1)

"BLD",3126,"KRN",9.8,"NM","B","DPTLK",8)

"BLD",3126,"KRN",9.8,"NM","B","DPTLK1",7)

"BLD",3126,"KRN",9.8,"NM","B","DPTLK2",4)

"BLD",3126,"KRN",9.8,"NM","B","DPTLK4",9)

"BLD",3126,"KRN",9.8,"NM","B","DPTLK7",6)

"BLD",3126,"KRN",19,0)
19
"BLD",3126,"KRN",19.1,0)
19.1
"BLD",3126,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",3126,"KRN",19.1,"NM",1,0)
DG MVI ADD PT^^0
"BLD",3126,"KRN",19.1,"NM","B","DG MVI ADD PT",1)

"BLD",3126,"KRN",101,0)
101
"BLD",3126,"KRN",409.61,0)
409.61
"BLD",3126,"KRN",771,0)
771
"BLD",3126,"KRN",779.2,0)
779.2
"BLD",3126,"KRN",870,0)
870
"BLD",3126,"KRN",8989.51,0)
8989.51
"BLD",3126,"KRN",8989.52,0)
8989.52
"BLD",3126,"KRN",8994,0)
8994
"BLD",3126,"KRN","B",.4,.4)

"BLD",3126,"KRN","B",.401,.401)

"BLD",3126,"KRN","B",.402,.402)

"BLD",3126,"KRN","B",.403,.403)

"BLD",3126,"KRN","B",.5,.5)

"BLD",3126,"KRN","B",.84,.84)

"BLD",3126,"KRN","B",3.6,3.6)

"BLD",3126,"KRN","B",3.8,3.8)

"BLD",3126,"KRN","B",9.2,9.2)

"BLD",3126,"KRN","B",9.8,9.8)

"BLD",3126,"KRN","B",19,19)

"BLD",3126,"KRN","B",19.1,19.1)

"BLD",3126,"KRN","B",101,101)

"BLD",3126,"KRN","B",409.61,409.61)

"BLD",3126,"KRN","B",771,771)

"BLD",3126,"KRN","B",779.2,779.2)

"BLD",3126,"KRN","B",870,870)

"BLD",3126,"KRN","B",8989.51,8989.51)

"BLD",3126,"KRN","B",8989.52,8989.52)

"BLD",3126,"KRN","B",8994,8994)

"BLD",3126,"QUES",0)
^9.62^^
"BLD",3126,"REQB",0)
^9.611^8^8
"BLD",3126,"REQB",1,0)
DG*5.3*872^2
"BLD",3126,"REQB",2,0)
DG*5.3*886^2
"BLD",3126,"REQB",3,0)
DG*5.3*808^2
"BLD",3126,"REQB",4,0)
DG*5.3*760^2
"BLD",3126,"REQB",5,0)
DG*5.3*876^2
"BLD",3126,"REQB",6,0)
DG*5.3*657^2
"BLD",3126,"REQB",7,0)
DG*5.3*653^2
"BLD",3126,"REQB",8,0)
DG*5.3*857^2
"BLD",3126,"REQB","B","DG*5.3*653",7)

"BLD",3126,"REQB","B","DG*5.3*657",6)

"BLD",3126,"REQB","B","DG*5.3*760",4)

"BLD",3126,"REQB","B","DG*5.3*808",3)

"BLD",3126,"REQB","B","DG*5.3*857",8)

"BLD",3126,"REQB","B","DG*5.3*872",1)

"BLD",3126,"REQB","B","DG*5.3*876",5)

"BLD",3126,"REQB","B","DG*5.3*886",2)

"KRN",19.1,306,-1)
0^1
"KRN",19.1,306,0)
DG MVI ADD PT^ADD A PATIENT NOT ON THE MPI
"KRN",19.1,306,1,0)
^19.11^3^3^3150610^^
"KRN",19.1,306,1,1,0)
This key will allow the user to add patients when an Enterprise Search 
"KRN",19.1,306,1,2,0)
has occurred and there are patients that are found to be above the 
"KRN",19.1,306,1,3,0)
Auto-Match threshold.
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813^2970721^12541
"PKG",5,22,1,"PAH",1,0)
915^3151005
"PKG",5,22,1,"PAH",1,1,0)
^^3^3^3151005
"PKG",5,22,1,"PAH",1,1,1,0)
ENTERPRISE REGISTRATION - ITERATION 14
"PKG",5,22,1,"PAH",1,1,2,0)
Refer to patch DG*5.3*915 in the FORUM Patch Module for a complete
"PKG",5,22,1,"PAH",1,1,3,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
9
"RTN","DGADDUTL")
0^3^B57517976^B57456144
"RTN","DGADDUTL",1,0)
DGADDUTL ;ALB/PHH,EG,BAJ,ERC,CKN,TDM,LBD-PATIENT ADDRESS ; 8/19/13 11:13am
"RTN","DGADDUTL",2,0)
 ;;5.3;Registration;**658,695,730,688,808,851,872,915**;Aug 13, 1993;Build 6
"RTN","DGADDUTL",3,0)
 Q
"RTN","DGADDUTL",4,0)
ADDR ; validate/edit Patient address (entry for DG ADDRESS UPDATE option)
"RTN","DGADDUTL",5,0)
 N %,QUIT,DIC,Y,DFN,USERSEL
"RTN","DGADDUTL",6,0)
ADDRLOOP ;
"RTN","DGADDUTL",7,0)
 W !!
"RTN","DGADDUTL",8,0)
 K DIC,Y,DFN,USERSEL
"RTN","DGADDUTL",9,0)
 S DIC="^DPT(",DIC(0)="AEMZQ",DIC("A")="Veteran Name/SSN: " D ^DIC
"RTN","DGADDUTL",10,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","DGADDUTL",11,0)
 Q:Y'>0
"RTN","DGADDUTL",12,0)
 ;
"RTN","DGADDUTL",13,0)
 S DFN=+Y,QUIT=0
"RTN","DGADDUTL",14,0)
 L +^DPT(DFN):3 E  W !!,"Patient is being edited. Try again later."  G ADDR
"RTN","DGADDUTL",15,0)
 F  D  Q:QUIT
"RTN","DGADDUTL",16,0)
 .W !!,"Do you want to update the (P)ermanent Address, (T)emporary Address, or (B)oth? "
"RTN","DGADDUTL",17,0)
 .R USERSEL:300
"RTN","DGADDUTL",18,0)
 .I '$T S USERSEL="^"
"RTN","DGADDUTL",19,0)
 .I USERSEL["^"!(USERSEL="") S QUIT=1 Q
"RTN","DGADDUTL",20,0)
 .S USERSEL=$TR(USERSEL,"ptb","PTB")
"RTN","DGADDUTL",21,0)
 .I USERSEL'="P",USERSEL'="T",USERSEL'="B" D  Q
"RTN","DGADDUTL",22,0)
 ..W !,"Invalid selection!"
"RTN","DGADDUTL",23,0)
 .I USERSEL="P"!(USERSEL="B") W ! D UPDATE(DFN,"PERM")
"RTN","DGADDUTL",24,0)
 .I USERSEL="T"!(USERSEL="B") D UPDATE(DFN,"TEMP")
"RTN","DGADDUTL",25,0)
 .S QUIT=1
"RTN","DGADDUTL",26,0)
 L -^DPT(DFN)
"RTN","DGADDUTL",27,0)
 G ADDRLOOP
"RTN","DGADDUTL",28,0)
ADD(DFN) ; validate/edit Patient address (entry point for routine DGREG)
"RTN","DGADDUTL",29,0)
 ;         Input  -- DFN
"RTN","DGADDUTL",30,0)
 ;
"RTN","DGADDUTL",31,0)
 N RETVAL,ADDYN
"RTN","DGADDUTL",32,0)
 ;Display the permanent address (DG*5.3*851)
"RTN","DGADDUTL",33,0)
 D DISPADD^DGADDUT2(DFN)
"RTN","DGADDUTL",34,0)
 S (RETVAL,ADDYN)=0
"RTN","DGADDUTL",35,0)
 F  D  Q:ADDYN
"RTN","DGADDUTL",36,0)
 .S ADDYN=$$ADDYN("Do you want to edit the Patient's Address")
"RTN","DGADDUTL",37,0)
 .S RETVAL=ADDYN
"RTN","DGADDUTL",38,0)
 .I ADDYN'=1,ADDYN'=2 S (ADDYN,RETVAL)=0
"RTN","DGADDUTL",39,0)
 .I 'ADDYN W !?5,"Enter 'YES' to edit Patient's Address or 'NO' to continue."
"RTN","DGADDUTL",40,0)
 I ADDYN=1,$G(DFN)'="",$D(^DPT(DFN,0)) D
"RTN","DGADDUTL",41,0)
 .D UPDATE(DFN,"PERM")
"RTN","DGADDUTL",42,0)
 .S RETVAL=1
"RTN","DGADDUTL",43,0)
 Q RETVAL
"RTN","DGADDUTL",44,0)
ADDYN(PROMPT) ; Yes/No Prompt to Edit/Validate Address
"RTN","DGADDUTL",45,0)
 ;         Input  -- None
"RTN","DGADDUTL",46,0)
 ;         Output --  1 = YES
"RTN","DGADDUTL",47,0)
 ;                    2 = NO
"RTN","DGADDUTL",48,0)
 ;                   -1 = Aborted
"RTN","DGADDUTL",49,0)
 ;
"RTN","DGADDUTL",50,0)
 N %
"RTN","DGADDUTL",51,0)
 W !,PROMPT
"RTN","DGADDUTL",52,0)
 D YN^DICN
"RTN","DGADDUTL",53,0)
 Q %
"RTN","DGADDUTL",54,0)
UPDATE(DFN,TYPE) ; Update the Address
"RTN","DGADDUTL",55,0)
 ;         Input  -- TYPE = "PERM" for Permanent Address
"RTN","DGADDUTL",56,0)
 ;                        = "TEMP" for Temporary Address
"RTN","DGADDUTL",57,0)
 ;         Output -- None
"RTN","DGADDUTL",58,0)
 ;         
"RTN","DGADDUTL",59,0)
 I TYPE'="PERM",TYPE'="TEMP" Q
"RTN","DGADDUTL",60,0)
 I TYPE="PERM" D
"RTN","DGADDUTL",61,0)
 .W !
"RTN","DGADDUTL",62,0)
 .N FLG S (FLG(1),FLG(2))=1
"RTN","DGADDUTL",63,0)
 .D ADDRED(DFN,.FLG)
"RTN","DGADDUTL",64,0)
 ;
"RTN","DGADDUTL",65,0)
 I TYPE="TEMP" D
"RTN","DGADDUTL",66,0)
 .D EDITTADR(DFN)
"RTN","DGADDUTL",67,0)
 Q
"RTN","DGADDUTL",68,0)
UPDDTTM(DFN,TYPE) ; Update the PATIENT file #2 with the current date and time
"RTN","DGADDUTL",69,0)
 ;
"RTN","DGADDUTL",70,0)
 D UPDDTTM^DGADDUT2(DFN,TYPE)
"RTN","DGADDUTL",71,0)
 Q
"RTN","DGADDUTL",72,0)
ADDRED(DFN,FLG) ; Address Edit (Code copied from DGREGAED and modified)
"RTN","DGADDUTL",73,0)
 ;Input:
"RTN","DGADDUTL",74,0)
 ;  DFN (required) - Internal Entry # of Patient File (#2)
"RTN","DGADDUTL",75,0)
 ;  FLG (optional) - Flags of 1 or 0; if null, 0 is assumed. Details:
"RTN","DGADDUTL",76,0)
 ;    FLG(1) - if 1, let user edit phone numbers (field #.131 and #.132)
"RTN","DGADDUTL",77,0)
 ;    FLG(2) - if 1, display before & after address for user confirmation
"RTN","DGADDUTL",78,0)
 N SRC,%,DGINPUT,I,X,Y
"RTN","DGADDUTL",79,0)
 S SRC="ADDUTL"
"RTN","DGADDUTL",80,0)
 D EN^DGREGAED(DFN,.FLG,SRC)
"RTN","DGADDUTL",81,0)
 ;
"RTN","DGADDUTL",82,0)
 ; Update the Date/Time Stamp
"RTN","DGADDUTL",83,0)
 ;The next line was disabled to fix problem of Date/Time stamp being
"RTN","DGADDUTL",84,0)
 ;updated even if no changes were made (DG*5.3*851).
"RTN","DGADDUTL",85,0)
 ;D UPDDTTM(DFN,TYPE)
"RTN","DGADDUTL",86,0)
 Q
"RTN","DGADDUTL",87,0)
GETPRIOR(DFN,DGPRIOR) ; Get prior address fields.
"RTN","DGADDUTL",88,0)
 N DGCURR,DGN,DGARRY,DGCIEN,DGST,DGCNTY
"RTN","DGADDUTL",89,0)
 D GETS^DIQ(2,DFN_",",".111;.112;.113;.114;.115;.117;.1112;.131;.132;.121;.118;.119;.12;.122;.1171:.1173","I","DGCURR")
"RTN","DGADDUTL",90,0)
 F DGN=.111,.112,.113,.114,.115,.117,.1112,.131,.132,.121,.118,.119,.12,.122,.1171,.1172,.1173 D
"RTN","DGADDUTL",91,0)
 . S DGARRY("OLD",DGN)=$G(DGCURR(2,DFN_",",DGN,"I"))
"RTN","DGADDUTL",92,0)
 M DGPRIOR=DGARRY("OLD")
"RTN","DGADDUTL",93,0)
 Q
"RTN","DGADDUTL",94,0)
GETUPDTS(DFN,DGINPUT) ; Get current address fields.
"RTN","DGADDUTL",95,0)
 N DGCURR,DGN,DGARRY
"RTN","DGADDUTL",96,0)
 D GETS^DIQ(2,DFN_",",".118;.119;.12;.122","I","DGCURR")
"RTN","DGADDUTL",97,0)
 F DGN=.118,.119,.12,.122 D
"RTN","DGADDUTL",98,0)
 . S DGARRY("NEW",DGN)=$G(DGCURR(2,DFN_",",DGN,"I"))
"RTN","DGADDUTL",99,0)
 M DGINPUT=DGARRY("NEW")
"RTN","DGADDUTL",100,0)
 Q
"RTN","DGADDUTL",101,0)
FILEYN(DGOLD,DGNEW) ; Determine whether or not to file to #301.7
"RTN","DGADDUTL",102,0)
 N RETVAL
"RTN","DGADDUTL",103,0)
 S RETVAL=0
"RTN","DGADDUTL",104,0)
 D
"RTN","DGADDUTL",105,0)
 .I DGOLD(.111)'=$G(DGNEW(.111)) S RETVAL=1 Q
"RTN","DGADDUTL",106,0)
 .I DGOLD(.112)'=$G(DGNEW(.112)) S RETVAL=1 Q
"RTN","DGADDUTL",107,0)
 .I DGOLD(.113)'=$G(DGNEW(.113)) S RETVAL=1 Q
"RTN","DGADDUTL",108,0)
 .I DGOLD(.114)'=$G(DGNEW(.114)) S RETVAL=1 Q
"RTN","DGADDUTL",109,0)
 .I DGOLD(.115)'=$P($G(DGNEW(.115)),"^",2) S RETVAL=1 Q
"RTN","DGADDUTL",110,0)
 .I DGOLD(.1112)'=$G(DGNEW(.1112)) S RETVAL=1 Q
"RTN","DGADDUTL",111,0)
 .I DGOLD(.117)'=$P($G(DGNEW(.117)),"^",2) S RETVAL=1 Q
"RTN","DGADDUTL",112,0)
 .I DGOLD(.131)'=$G(DGNEW(.131)) S RETVAL=1 Q
"RTN","DGADDUTL",113,0)
 .I DGOLD(.1171)'=$G(DGNEW(.1171)) S RETVAL=1 Q
"RTN","DGADDUTL",114,0)
 .I DGOLD(.1172)'=$G(DGNEW(.1172)) S RETVAL=1 Q
"RTN","DGADDUTL",115,0)
 .I DGOLD(.1173)'=$P($G(DGNEW(.1173)),"^",2) S RETVAL=1 Q
"RTN","DGADDUTL",116,0)
 .I DGOLD(.121)'=$G(DGNEW(.121)) S RETVAL=1 Q
"RTN","DGADDUTL",117,0)
 Q RETVAL
"RTN","DGADDUTL",118,0)
FOREIGN(DFN,CIEN,FILE,FIELD,COUNTRY) ;
"RTN","DGADDUTL",119,0)
 ; ** NOTE we have to default the value for "US" into the prompt if it is blank
"RTN","DGADDUTL",120,0)
 N FORGN,DA,DIR,DTOUT,DUOUT,DIROUT,DONE,INDX
"RTN","DGADDUTL",121,0)
 S:'$G(FILE) FILE=2  I '$G(FIELD) S FIELD=.1173
"RTN","DGADDUTL",122,0)
 S DIR(0)=FILE_","_FIELD,DONE=0 S:DFN DA=DFN
"RTN","DGADDUTL",123,0)
 S DIR("B")=$E($$CNTRYI^DGADDUTL(CIEN),1,19) I DIR("B")=-1 S DIR("B")="UNKNOWN COUNTRY"
"RTN","DGADDUTL",124,0)
 F  D  Q:DONE
"RTN","DGADDUTL",125,0)
 . D ^DIR
"RTN","DGADDUTL",126,0)
 . I $D(DTOUT) S DONE=1,FORGN=-1 Q
"RTN","DGADDUTL",127,0)
 . I $D(DUOUT)!$D(DIROUT) W !,"EXIT NOT ALLOWED" Q
"RTN","DGADDUTL",128,0)
 . I $D(DIRUT) W !,"This is a required response." Q
"RTN","DGADDUTL",129,0)
 . S COUNTRY=$P($G(Y),"^",2),FORGN=$$FORIEN($P($G(Y),"^")),DONE=1
"RTN","DGADDUTL",130,0)
 Q FORGN
"RTN","DGADDUTL",131,0)
UPDADDLG(DFN,DGPRIOR,DGINPUT) ; Update the IVM ADDRESS CHANGE LOG file #301.7
"RTN","DGADDUTL",132,0)
 ;
"RTN","DGADDUTL",133,0)
 D UPDADDLG^DGADDUT2(DFN,.DGPRIOR,.DGINPUT)
"RTN","DGADDUTL",134,0)
 Q
"RTN","DGADDUTL",135,0)
EDITTADR(DFN) ; Edit Temporary Address
"RTN","DGADDUTL",136,0)
 N DGPRIOR,DGCH,DGRPAN,DGDR,DGRPS
"RTN","DGADDUTL",137,0)
 I $G(DFN)="" Q
"RTN","DGADDUTL",138,0)
 ;I ($G(DFN)'?.N) Q
"RTN","DGADDUTL",139,0)
 ;
"RTN","DGADDUTL",140,0)
 ; Get the current Temporary Address and display it
"RTN","DGADDUTL",141,0)
 D GETTADR(DFN,.DGPRIOR)
"RTN","DGADDUTL",142,0)
 D DISPTADR(DFN,.DGPRIOR)
"RTN","DGADDUTL",143,0)
 W !!
"RTN","DGADDUTL",144,0)
 ;
"RTN","DGADDUTL",145,0)
 S DGCH=5,DGRPAN="1,2,3,4,5,",DGDR="",DGRPS=1
"RTN","DGADDUTL",146,0)
 D CHOICE^DGRPP
"RTN","DGADDUTL",147,0)
 D ^DGRPE
"RTN","DGADDUTL",148,0)
 ; Update the Date/Time Stamp
"RTN","DGADDUTL",149,0)
 D UPDDTTM(DFN,TYPE)
"RTN","DGADDUTL",150,0)
 Q
"RTN","DGADDUTL",151,0)
GETTADR(DFN,DGPRIOR) ; Get prior temporary address fields.
"RTN","DGADDUTL",152,0)
 N DGCURR,DGN,DGARRY,DGCIEN,DGST,DGCNTY
"RTN","DGADDUTL",153,0)
 D GETS^DIQ(2,DFN_",",".1211;.1212;.1213;.1214;.1215;.1216;.1217;.1218;.12105;.1219;.12111;.12112;.12113;.12114;.1221:.1223","I","DGCURR")
"RTN","DGADDUTL",154,0)
 F DGN=.1211,.1212,.1213,.1214,.1215,.1216,.1217,.1218,.12105,.1219,.12111,.12112,.12113,.12114,.1221,.1222,.1223 D
"RTN","DGADDUTL",155,0)
 .S DGARRY("OLD",DGN)=$G(DGCURR(2,DFN_",",DGN,"I"))
"RTN","DGADDUTL",156,0)
 M DGPRIOR=DGARRY("OLD")
"RTN","DGADDUTL",157,0)
 Q
"RTN","DGADDUTL",158,0)
DISPTADR(DFN,DGARRY) ; Display Temporary Address
"RTN","DGADDUTL",159,0)
 N DGADRACT,DGADR1,DGADR2,DGADR3,DGCITY,DGSTATE,DGZIP
"RTN","DGADDUTL",160,0)
 N DGCOUNTY,DGPHONE,DGFROMDT,DGTODT,DGPROV,DGPCODE,DGCNTRY,DGFORN
"RTN","DGADDUTL",161,0)
 ;
"RTN","DGADDUTL",162,0)
 S DGADRACT=$G(DGARRY(.12105))
"RTN","DGADDUTL",163,0)
 S DGADR1=$G(DGARRY(.1211))
"RTN","DGADDUTL",164,0)
 S DGADR2=$G(DGARRY(.1212))
"RTN","DGADDUTL",165,0)
 S DGADR3=$G(DGARRY(.1213))
"RTN","DGADDUTL",166,0)
 S DGCITY=$G(DGARRY(.1214))
"RTN","DGADDUTL",167,0)
 S DGSTATE=$G(DGARRY(.1215))
"RTN","DGADDUTL",168,0)
 S DGZIP=$G(DGARRY(.1216))
"RTN","DGADDUTL",169,0)
 S DGCOUNTY=$G(DGARRY(.12111))
"RTN","DGADDUTL",170,0)
 I DGCOUNTY'="",DGSTATE'="",$D(^DIC(5,DGSTATE,1,DGCOUNTY,0)) D
"RTN","DGADDUTL",171,0)
 .S DGCOUNTY=$P(^DIC(5,DGSTATE,1,DGCOUNTY,0),"^")_$S($P(^DIC(5,DGSTATE,1,DGCOUNTY,0),"^",4)'="":"("_$P(^DIC(5,DGSTATE,1,DGCOUNTY,0),"^",4)_")",1:"")
"RTN","DGADDUTL",172,0)
 ;changing to remove display of empty (), will only display if a code is in the 4th piece of the state file-Patch 872
"RTN","DGADDUTL",173,0)
 ;S DGCOUNTY=$P(^DIC(5,DGSTATE,1,DGCOUNTY,0),"^")_"( "_$P(^DIC(5,DGSTATE,1,DGCOUNTY,0),"^",4)
"RTN","DGADDUTL",174,0)
 I DGADRACT'="Y" S DGCOUNTY="NOT APPLICABLE"
"RTN","DGADDUTL",175,0)
 I DGSTATE'="",$D(^DIC(5,DGSTATE,0)) S DGSTATE=$P(^DIC(5,DGSTATE,0),"^",2)
"RTN","DGADDUTL",176,0)
 S DGPROV=$G(DGARRY(.1221))
"RTN","DGADDUTL",177,0)
 S DGPCODE=$G(DGARRY(.1222))
"RTN","DGADDUTL",178,0)
 S DGCNTRY=$G(DGARRY(.1223))
"RTN","DGADDUTL",179,0)
 S DGFORN=$$FORIEN(DGCNTRY)
"RTN","DGADDUTL",180,0)
 I DGCNTRY]"" S DGCNTRY=$$CNTRYI(DGCNTRY)
"RTN","DGADDUTL",181,0)
 S DGPHONE=$G(DGARRY(.1219))
"RTN","DGADDUTL",182,0)
 S DGFROMDT=$$FMTE^XLFDT($G(DGARRY(.1217)))
"RTN","DGADDUTL",183,0)
 S DGTODT=$$FMTE^XLFDT($G(DGARRY(.1218)))
"RTN","DGADDUTL",184,0)
 ;
"RTN","DGADDUTL",185,0)
 W !!,"Temporary Address: "
"RTN","DGADDUTL",186,0)
 I DGADRACT="Y" D
"RTN","DGADDUTL",187,0)
 .W:DGADR1'="" !?9,DGADR1
"RTN","DGADDUTL",188,0)
 .W:DGADR2'="" !?9,DGADR2
"RTN","DGADDUTL",189,0)
 .W:DGADR3'="" !?9,DGADR3
"RTN","DGADDUTL",190,0)
 .I DGFORN=0 D
"RTN","DGADDUTL",191,0)
 ..W !?9,$S(DGCITY'="":DGCITY,1:"")_$S(DGCITY'="":",",1:" ")_$S(DGSTATE'="":DGSTATE,1:"")_" "_$S(DGZIP'="":DGZIP,1:"")
"RTN","DGADDUTL",192,0)
 .I DGFORN W !?8,$S(DGPCODE'="":DGPCODE,1:"")_" "_$S(DGCITY'="":DGCITY,1:"")_$S(DGCITY'="":",",1:" ")_$S(DGPROV'="":DGPROV,1:"")
"RTN","DGADDUTL",193,0)
 ;commenting out, causes address to print 2x. Patch 872
"RTN","DGADDUTL",194,0)
 ;W !?9,$S(DGCITY'="":DGCITY,1:"")_","_$S(DGSTATE'="":DGSTATE,1:"")_" "_$S(DGZIP'="":DGZIP,1:"")
"RTN","DGADDUTL",195,0)
 ;Removing lines from dot structure Patch 872
"RTN","DGADDUTL",196,0)
 W !," County: "_DGCOUNTY
"RTN","DGADDUTL",197,0)
 W !,"  Phone: "_DGPHONE
"RTN","DGADDUTL",198,0)
 W !,"From/To: "_$P(DGFROMDT,",")_","_$P(DGFROMDT,", ",2)_"-"_$P(DGTODT,",")_","_$P(DGTODT,", ",2)
"RTN","DGADDUTL",199,0)
 ;
"RTN","DGADDUTL",200,0)
 I $G(DGARRY(.12105))="N" D
"RTN","DGADDUTL",201,0)
 .W:$G(DGARRY(.1211))="" !?9,"NO TEMPORARY ADDRESS"
"RTN","DGADDUTL",202,0)
 .W:$G(DGARRY(.1212))="" !?9,""
"RTN","DGADDUTL",203,0)
 .W !," County: NOT APPLICABLE"
"RTN","DGADDUTL",204,0)
 .W !,"  Phone: NOT APPLICABLE"
"RTN","DGADDUTL",205,0)
 .W !,"From/To: NOT APPLICABLE"
"RTN","DGADDUTL",206,0)
 Q
"RTN","DGADDUTL",207,0)
COUNTRY(DGC) ;
"RTN","DGADDUTL",208,0)
 ;where DGC is the external value of the country
"RTN","DGADDUTL",209,0)
 ;return value is in upper case display mode
"RTN","DGADDUTL",210,0)
 ;if DGC is invalid, return -1
"RTN","DGADDUTL",211,0)
 N DGCC,DGIEN
"RTN","DGADDUTL",212,0)
 ; if input is NULL change to US
"RTN","DGADDUTL",213,0)
 I $G(DGC)="" S DGC="USA"
"RTN","DGADDUTL",214,0)
 ; Get IEN from B index, error if not found
"RTN","DGADDUTL",215,0)
 S DGIEN=$O(^HL(779.004,"B",DGC,"")) Q:DGIEN']"" -1
"RTN","DGADDUTL",216,0)
 ; xlate IEN to POSTAL NAME
"RTN","DGADDUTL",217,0)
 S DGCC=$P(^HL(779.004,DGIEN,"SDS"),U,3)
"RTN","DGADDUTL",218,0)
 ; if POSTAL NAME = "<NULL>" return DESCRIPTION
"RTN","DGADDUTL",219,0)
 I DGCC="<NULL>" D
"RTN","DGADDUTL",220,0)
 . S DGCC=$$UPPER^DGUTL($P(^HL(779.004,DGIEN,0),U,2))
"RTN","DGADDUTL",221,0)
 Q DGCC
"RTN","DGADDUTL",222,0)
FOR(DGC) ;returns a 1 if address is foreign, a 0 if domestic, -1 if DGC is not valid
"RTN","DGADDUTL",223,0)
 ; DGC is the external value of the country (.01 field of file 779.004)
"RTN","DGADDUTL",224,0)
 N DGFOR
"RTN","DGADDUTL",225,0)
 S DGFOR=0
"RTN","DGADDUTL",226,0)
 I $G(DGC)="" Q DGFOR
"RTN","DGADDUTL",227,0)
 I '$D(^HL(779.004,"B",DGC)) Q -1
"RTN","DGADDUTL",228,0)
 I DGC'="USA" S DGFOR=1
"RTN","DGADDUTL",229,0)
 Q DGFOR
"RTN","DGADDUTL",230,0)
CNTRYI(DGIEN) ;where DGC is the internal value of the country
"RTN","DGADDUTL",231,0)
 ;return DGC as the display value for the country
"RTN","DGADDUTL",232,0)
 ;if the input value is not a valid IEN, return -1
"RTN","DGADDUTL",233,0)
 ;if the input value is null, return null
"RTN","DGADDUTL",234,0)
 N DGCC
"RTN","DGADDUTL",235,0)
 I $G(DGIEN)="" Q ""
"RTN","DGADDUTL",236,0)
 I '$D(^HL(779.004,DGIEN,0)) Q -1
"RTN","DGADDUTL",237,0)
 ; xlate IEN to POSTAL NAME
"RTN","DGADDUTL",238,0)
 S DGCC=$P(^HL(779.004,DGIEN,"SDS"),U,3)
"RTN","DGADDUTL",239,0)
 ; if POSTAL NAME = "<NULL>" return DESCRIPTION
"RTN","DGADDUTL",240,0)
 I DGCC="<NULL>" D
"RTN","DGADDUTL",241,0)
 . S DGCC=$$UPPER^DGUTL($P(^HL(779.004,DGIEN,0),U,2))
"RTN","DGADDUTL",242,0)
 Q DGCC
"RTN","DGADDUTL",243,0)
FORIEN(DGC) ;returns a 1 if address is foreign, a 0 if domestic, -1 if DGC is invalid
"RTN","DGADDUTL",244,0)
 ;DGC is the IEN of the country file (#779.004)
"RTN","DGADDUTL",245,0)
 N DGFOR
"RTN","DGADDUTL",246,0)
 S DGFOR=0
"RTN","DGADDUTL",247,0)
 I $G(DGC)="" Q DGFOR
"RTN","DGADDUTL",248,0)
 I DGC'?1.3N Q -1
"RTN","DGADDUTL",249,0)
 I '$D(^HL(779.004,DGC,0)) Q -1
"RTN","DGADDUTL",250,0)
 I DGC]"",(DGC'=$O(^HL(779.004,"B","USA",""))) S DGFOR=1
"RTN","DGADDUTL",251,0)
 Q DGFOR
"RTN","DGREG")
0^5^B51312405^B48715273
"RTN","DGREG",1,0)
DGREG ;ALB/JDS,MRL/PJR/PHH-REGISTER PATIENT ; 3/28/14 12:38pm
"RTN","DGREG",2,0)
 ;;5.3;Registration;**1,32,108,147,149,182,245,250,513,425,533,574,563,624,658,864,886,915**;Aug 13, 1993;Build 6
"RTN","DGREG",3,0)
START ;
"RTN","DGREG",4,0)
EN D LO^DGUTL S DGCLPR=""
"RTN","DGREG",5,0)
 N DGDIV
"RTN","DGREG",6,0)
 S DGDIV=$$PRIM^VASITE
"RTN","DGREG",7,0)
 S:DGDIV %ZIS("B")=$P($G(^DG(40.8,+DGDIV,"DEV")),U,1)
"RTN","DGREG",8,0)
 I $P(^DG(43,1,0),U,39) S %ZIS="NQ",%ZIS("A")="Select 1010 printer: " D ^%ZIS Q:POP  S (DGIO(10),DGIO("PRF"),DGIO("RT"),DGIO("HS"))=ION,DGASKDEV="" I $E(IOST,1,2)'["P-" W !,$C(7),"Not a printer" G DGREG
"RTN","DGREG",9,0)
 K %ZIS("B")
"RTN","DGREG",10,0)
 I '$D(DGIO),$P(^DG(43,1,0),U,30) S %ZIS="N",IOP="HOME" D ^%ZIS I $D(IOS),IOS,$D(^%ZIS(1,+IOS,99)),$D(^%ZIS(1,+^(99),0)) S Y=$P(^(0),U,1) W !,"Using closest printer ",Y,! F I=10,"PRF","RT","HS" S DGIO(I)=Y
"RTN","DGREG",11,0)
A D ENDREG($G(DFN))
"RTN","DGREG",12,0)
 W !! S DIC=2,DIC(0)="ALEQM",DLAYGO=2 K DIC("S"),DIC("B") D ^DIC K DLAYGO G Q1:Y<0 S (DFN,DA)=+Y,DGNEW=$P(Y,"^",3) N Y D PAUSE^DG10 D BEGINREG(DFN) I DGNEW D NEW^DGRP
"RTN","DGREG",13,0)
 ;
"RTN","DGREG",14,0)
 ;; ask to continue if patient died - DG*5.3*563 - pjr 10/12/04
"RTN","DGREG",15,0)
 S DOD="" I $G(DFN) S DOD=$P($G(^DPT(DFN,.35)),"^",1)
"RTN","DGREG",16,0)
 I DOD S Y=DOD,DGPME=0 D DIED^DGPMV I DGPME K DFN,DGRPOUT G A
"RTN","DGREG",17,0)
 ;
"RTN","DGREG",18,0)
 D CIRN
"RTN","DGREG",19,0)
 ;
"RTN","DGREG",20,0)
 I +$G(DGNEW) D
"RTN","DGREG",21,0)
 . ; query CMOR for Patient Record Flag Assignments if NEW patient and
"RTN","DGREG",22,0)
 . ; display results.
"RTN","DGREG",23,0)
 . I $$PRFQRY^DGPFAPI(DFN) D DISPPRF^DGPFAPI(DFN)
"RTN","DGREG",24,0)
 . I $$EN^DGPFMPI(DFN)
"RTN","DGREG",25,0)
 ;
"RTN","DGREG",26,0)
 D ROMQRY
"RTN","DGREG",27,0)
 ;
"RTN","DGREG",28,0)
 S (DGFC,CURR)=0
"RTN","DGREG",29,0)
 D:'$G(DGNEW) WARN S DA=DFN,DGFC="^1",VET=$S($D(^DPT(DFN,"VET")):^("VET")'="Y",1:0)
"RTN","DGREG",30,0)
 S %ZIS="N",IOP="HOME" D ^%ZIS S DGELVER=0 D EN^DGRPD I $D(DGRPOUT) D ENDREG($G(DFN)) D HL7A08^VAFCDD01 K DFN,DGRPOUT G A
"RTN","DGREG",31,0)
 D HINQ^DG10
"RTN","DGREG",32,0)
 I $D(^DIC(195.4,1,"UP")) I ^("UP") D ADM^RTQ3
"RTN","DGREG",33,0)
 D REG^IVMCQ($G(DFN))  ; send financial query  
"RTN","DGREG",34,0)
 G A1
"RTN","DGREG",35,0)
 ;
"RTN","DGREG",36,0)
RT I $D(^DIC(195.4,1,"UP")) I ^("UP") S $P(DGFC,U,1)=DIV D ADM^RTQ3
"RTN","DGREG",37,0)
 Q
"RTN","DGREG",38,0)
 ;
"RTN","DGREG",39,0)
A1 W !,"Do you want to ",$S(DGNEW:"enter",1:"edit")," Patient Data" S %=1 D YN^DICN D  G H:'%,CK:%'=1 S DGRPV=0 D EN1^DGRP G Q:'$D(DA)
"RTN","DGREG",40,0)
 .I +$G(DGNEW) Q
"RTN","DGREG",41,0)
 .I $$ADD^DGADDUTL($G(DFN)) ;
"RTN","DGREG",42,0)
 G CH
"RTN","DGREG",43,0)
PR W !!,"Is the patient currently being followed in a clinic for the same condition" S %=0 D YN^DICN G Q:%=-1
"RTN","DGREG",44,0)
 I '% W !?4,$C(7),"Enter 'Y' if the patient is being followed in clinic for condition for which",!?6,"registered, 'N' if not." G PR
"RTN","DGREG",45,0)
 S CURR=% G SEEN
"RTN","DGREG",46,0)
 ;
"RTN","DGREG",47,0)
CK S DGEDCN=1 D ^DGRPC
"RTN","DGREG",48,0)
CH S X=$S('$D(^DPT(DFN,.36)):1,$P(^(.36),"^",1)']"":1,1:0),X1=$S('$D(^DPT(DFN,.32)):1,$P(^(.32),"^",3)']"":1,1:0) I 'X,'X1 G CH1
"RTN","DGREG",49,0)
CH1 S DA=DFN G PR:'$D(^DPT("ADA",1,DA)) W !!,"There is still an open disposition--register aborted.",$C(7),$C(7) G Q
"RTN","DGREG",50,0)
SEEN W !!,"Is the patient to be examined in the medical center today" S %=1 D YN^DICN S SEEN=% G:%<0 Q I %'>0 W !!,"Enter 'Y' if the patient is to be examined today, 'N' if not.",$C(7) G SEEN
"RTN","DGREG",51,0)
ABIL D ^DGREGG
"RTN","DGREG",52,0)
ENR ; next line appears to be dead code.  left commented just to test.  mli 4/28/94
"RTN","DGREG",53,0)
 ;S DE=0 F I=0:0 S I=$O(^DPT(DA,"DE",I)) Q:'I  I $P(^(I,0),"^",3)'?7N Q  D PR:'DE S L=+$P($S($D(^SC(L,0)):^(0),1:""),"^",1)
"RTN","DGREG",54,0)
REG S (DIE,DIC)="^DPT("_DFN_",""DIS"",",%DT="PTEX",%DT("A")="Registration login date/time: NOW// "
"RTN","DGREG",55,0)
 W !,%DT("A") R ANS:DTIME S:'$T ANS="^" S:ANS="" ANS="N" S X=ANS G Q:ANS="^" S DA(1)=DFN D CHK^DIE(2.101,.01,"E",X,.RESULT) G REG:RESULT="^"!('$D(RESULT)),PR3:'(RESULT#1) S Y=RESULT
"RTN","DGREG",56,0)
 I (RESULT'="^") W "  ("_RESULT(0)_")"
"RTN","DGREG",57,0)
 S DINUM=9999999-RESULT
"RTN","DGREG",58,0)
 S (DFN1,Y1)=DINUM,APD=Y I $D(^DPT(DFN,"DIS",Y1)) W !!,"You must enter a date that does not exist.",$C(7),$C(7) G REG
"RTN","DGREG",59,0)
 ;patch 886 changed to incremental lock and dilocktm
"RTN","DGREG",60,0)
 G:$D(^DPT("ADA",1,DA)) CH1 L +@(DIE_DINUM_")"):$G(DILOCKTM,3) G:'$T MSG S:'($D(^DPT(DA(1),"DIS",0))#2) ^(0)="^2.101D^^" S DIC(0)="L",X=+Y D ^DIC
"RTN","DGREG",61,0)
 ;
"RTN","DGREG",62,0)
 ;SAVE OFF DATE/TIME OF REGISTRATION FOR HL7 V2.3 MESSAGING, IN VAFCDDT
"RTN","DGREG",63,0)
 S VAFCDDT=X
"RTN","DGREG",64,0)
 ;
"RTN","DGREG",65,0)
 S DA=DFN1,DIE("NO^")="",DA(1)=DFN,DP=2.101,DR="1///"_$S(SEEN=2:2,CURR=1:1,1:0)_";Q;2"_$S(CURR=1:"///3",1:"")_";2.1;3//"_$S($P(^DG(43,1,"GL"),"^",2):"",1:"/")_$S($D(^DG(40.8,+$P(^DG(43,1,"GL"),"^",3),0)):$P(^(0),"^",1),1:"")_";4////"_DUZ
"RTN","DGREG",66,0)
 ;patch 886 changed lock to use dilocktm
"RTN","DGREG",67,0)
 D EL K DIC("A") N DGNDLOCK S DGNDLOCK=DIE_DFN1_")" L +@DGNDLOCK:$G(DILOCKTM,3) G:'$T MSG D ^DIE L -@DGNDLOCK
"RTN","DGREG",68,0)
 I $D(DTOUT) D  G Q
"RTN","DGREG",69,0)
 .K DTOUT
"RTN","DGREG",70,0)
 .N DA,DIK
"RTN","DGREG",71,0)
 .S DA(1)=DFN,DA=DFN1,DIK="^DPT("_DFN_",""DIS"","
"RTN","DGREG",72,0)
 .D ^DIK
"RTN","DGREG",73,0)
 .W !!?5,"User Time-out.  Required registration data could be missing."
"RTN","DGREG",74,0)
 .W !,?5,"This registration has been deleted."
"RTN","DGREG",75,0)
 ; check whether facility applying to (division) is inactive
"RTN","DGREG",76,0)
 I '$$DIVCHK^DGREGFAC(DFN,DFN1) G CONT
"RTN","DGREG",77,0)
ASKDIV W !!?5,"The facility chosen either has no pointer to an Institution"
"RTN","DGREG",78,0)
 W !?5,"file record or the Institution file record is inactive."
"RTN","DGREG",79,0)
 W !?5,"Please choose another division."
"RTN","DGREG",80,0)
 S DA=DFN1,DIE("NO^")="",DA(1)=DFN,DP=2.101,DR="3" D ^DIE
"RTN","DGREG",81,0)
 I $$DIVCHK^DGREGFAC(DFN,DFN1) G ASKDIV
"RTN","DGREG",82,0)
CONT ; continue
"RTN","DGREG",83,0)
 S DGXXXD=1 D EL^DGREGE I $P(^DPT(DFN,"DIS",DFN1,0),"^",3)=4 S DA=DFN,DIE="^DPT(",DR=".368;.369" D ^DIE S DIE="^DPT("_DFN_",""DIS"",",DA(1)=DFN,DA=DFN1
"RTN","DGREG",84,0)
 S DA=DFN,DR="[DGREG]",DIE="^DPT(" D ^DIE K DIE("NO^")
"RTN","DGREG",85,0)
 I $D(^DPT(DFN,"DIS",DFN1,2)),$P(^(2),"^",1)="Y" S DIE="^DPT(",DR="[DG EMPLOYER]",DA=DFN D ^DIE
"RTN","DGREG",86,0)
 G ^DGREG0
"RTN","DGREG",87,0)
PR2 W !!,"You can only enter new registrations through this option.",$C(7),$C(7) G REG
"RTN","DGREG",88,0)
PR3 W !!,"Time is required to register the patient.",!!,$C(7),$C(7) G REG
"RTN","DGREG",89,0)
H W !?5,"Enter 'YES' to enter/edit registration data or 'NO' to continue." G A1
"RTN","DGREG",90,0)
Q K DG,DQ G Q1^DGREG0
"RTN","DGREG",91,0)
Q1 K DGIO,DGASKDEV,DGFC,DGCLRP,CURR,DGELVER,DGNEW Q
"RTN","DGREG",92,0)
EL S DR=DR_";13//" I $D(^DPT(DFN,.36)),$D(^DIC(8,+^(.36),0)) S DR=DR_$P(^(0),"^",1) Q
"RTN","DGREG",93,0)
 S DR=DR_"HUMANITARIAN EMERGENCY" Q
"RTN","DGREG",94,0)
FEE S DGRPFEE=1 D DGREG K DGRPFEE G Q1
"RTN","DGREG",95,0)
 ;
"RTN","DGREG",96,0)
WARN I $S('$D(^DPT(DFN,.1)):0,$P(^(.1),"^",1)']"":0,1:1) W !,$C(7),"***PATIENT IS CURRENTLY AN INPATIENT***",! H 2
"RTN","DGREG",97,0)
 I $S('$D(^DPT(DFN,.107)):0,$P(^(.107),"^",1)']"":0,1:1) W !,$C(7),"***PATIENT IS CURRENTLY A LODGER***",! H 2
"RTN","DGREG",98,0)
 Q
"RTN","DGREG",99,0)
MSG W !,"Another user is editing, try later ..." G Q
"RTN","DGREG",100,0)
 ;
"RTN","DGREG",101,0)
BEGINREG(DFN) ;
"RTN","DGREG",102,0)
 N DGQRY
"RTN","DGREG",103,0)
 ;Description: This is called at the beginning of the registration process.
"RTN","DGREG",104,0)
 ;Concurrent processes can check the lock to determine if the patient is
"RTN","DGREG",105,0)
 ;currently being registered.
"RTN","DGREG",106,0)
 ;
"RTN","DGREG",107,0)
 Q:'$G(DFN) 0
"RTN","DGREG",108,0)
 ; **915, check to see if a query was done within the last 5 minutes so we don't send again
"RTN","DGREG",109,0)
 S DGQRY=$$GET^DGENQRY($$FINDLAST^DGENQRY($G(DFN)),.DGQRY)
"RTN","DGREG",110,0)
 I $$FMDIFF^XLFDT($$NOW^XLFDT,$G(DGQRY("SENT")),2)>300,$$QRY^DGENQRY(DFN) W !!,"Enrollment/Eligibility Query sent ...",!!
"RTN","DGREG",111,0)
 ;patch 886 changed lock to use dilocktm
"RTN","DGREG",112,0)
 L +^TMP(DFN,"REGISTRATION IN PROGRESS"):$G(DILOCKTM,3)
"RTN","DGREG",113,0)
 I $$LOCK^DGENPTA1(DFN) ;try to lock the patient record
"RTN","DGREG",114,0)
 Q
"RTN","DGREG",115,0)
 ;
"RTN","DGREG",116,0)
ENDREG(DFN) ;
"RTN","DGREG",117,0)
 ;Description: releases the lock obtained by calling BEGINREG.
"RTN","DGREG",118,0)
 ;
"RTN","DGREG",119,0)
 Q:'$G(DFN)
"RTN","DGREG",120,0)
 L -^TMP(DFN,"REGISTRATION IN PROGRESS")
"RTN","DGREG",121,0)
 D UNLOCK^DGENPTA1(DFN)
"RTN","DGREG",122,0)
 Q
"RTN","DGREG",123,0)
 ;
"RTN","DGREG",124,0)
IFREG(DFN) ;
"RTN","DGREG",125,0)
 ;Description: tests whether the lock set by BEGINREG is set
"RTN","DGREG",126,0)
 ;
"RTN","DGREG",127,0)
 ;Input:  DFN
"RTN","DGREG",128,0)
 ;Output:
"RTN","DGREG",129,0)
 ;      Function Value = 1 if lock is set, 0 otherwise
"RTN","DGREG",130,0)
 ;
"RTN","DGREG",131,0)
 N RETURN
"RTN","DGREG",132,0)
 Q:'$G(DFN) 0
"RTN","DGREG",133,0)
 ;patch 886 changed lock to use dilocktm
"RTN","DGREG",134,0)
 L +^TMP(DFN,"REGISTRATION IN PROGRESS"):$G(DILOCKTM,3)
"RTN","DGREG",135,0)
 S RETURN='$T
"RTN","DGREG",136,0)
 L -^TMP(DFN,"REGISTRATION IN PROGRESS")
"RTN","DGREG",137,0)
 Q RETURN
"RTN","DGREG",138,0)
 Q
"RTN","DGREG",139,0)
CIRN ;MPI QUERY
"RTN","DGREG",140,0)
 ;check to see if CIRN PD/MPI is installed
"RTN","DGREG",141,0)
 N X S X="MPIFAPI" X ^%ZOSF("TEST") Q:'$T
"RTN","DGREG",142,0)
 K MPIFRTN
"RTN","DGREG",143,0)
 D MPIQ^MPIFAPI(DFN)
"RTN","DGREG",144,0)
 K MPIFRTN
"RTN","DGREG",145,0)
 Q
"RTN","DGREG",146,0)
ROMQRY ;
"RTN","DGREG",147,0)
 Q  ;**915 all register once functionality no longer executed.
"RTN","DGREG",148,0)
 I +$G(DGNEW) D
"RTN","DGREG",149,0)
 . ; query LST for Patient Demographic Information if NEW patient and
"RTN","DGREG",150,0)
 . ; file into patient's record.
"RTN","DGREG",151,0)
 . N A
"RTN","DGREG",152,0)
 . I $$ROMQRY^DGROAPI(DFN) D
"RTN","DGREG",153,0)
 . . ;display busy message to interactive users
"RTN","DGREG",154,0)
 . .S DGMSG(1)="Data retrieval from LST site has been completed successfully"
"RTN","DGREG",155,0)
 . .S DGMSG(2)="Thank you for your patience."
"RTN","DGREG",156,0)
 . .D EN^DDIOL(.DGMSG) R A:5
"RTN","DGREG",157,0)
 . E  D
"RTN","DGREG",158,0)
 . . ;display busy message to interactive users
"RTN","DGREG",159,0)
 . .S DGMSG(1)="Data retrieval from LST site has not been successful."
"RTN","DGREG",160,0)
 . .S DGMSG(2)="Please continue the Registration Process."
"RTN","DGREG",161,0)
 . .D EN^DDIOL(.DGMSG) R A:5
"RTN","DGREG",162,0)
 . ;
"RTN","DGREG",163,0)
 Q
"RTN","DGREGAED")
0^2^B42299807^B40377250
"RTN","DGREGAED",1,0)
DGREGAED ;ALB/DW/PHH,BAJ,TDM - Address Edit API; 01/03/2006 ; 4/2/09 2:29pm
"RTN","DGREGAED",2,0)
 ;;5.3;Registration;**522,560,658,730,688,808,915**;Aug 13, 1993;Build 6
"RTN","DGREGAED",3,0)
 ;;
"RTN","DGREGAED",4,0)
 ;; **688** Modifications for Country and Foreign address
"RTN","DGREGAED",5,0)
 ;; **915** Make DFN optional in case one is not established yet
"RTN","DGREGAED",6,0)
 ;
"RTN","DGREGAED",7,0)
EN(DFN,FLG,SRC,DGRET) ;Entry point
"RTN","DGREGAED",8,0)
 ;Input: 
"RTN","DGREGAED",9,0)
 ;  DFN (optional) - Internal Entry # of Patient File (#2)
"RTN","DGREGAED",10,0)
 ;                   If not supplied then nothing filed or defaulted
"RTN","DGREGAED",11,0)
 ;  FLG (optional) - Flags of 1 or 0; if null, 0 is assumed. Details:
"RTN","DGREGAED",12,0)
 ;    FLG(1) - if 1 let user edit phone numbers (field #.131 and #.132)
"RTN","DGREGAED",13,0)
 ;    FLG(2) - if 1 display before & after address for user confirmation
"RTN","DGREGAED",14,0)
 ;  DGRET - if passed by reference will contain address info array
"RTN","DGREGAED",15,0)
 K EASZIPLK,DGRET
"RTN","DGREGAED",16,0)
 N DGINPUT,DGCMP,ICNTRY,CNTRY,FORGN,PSTR,OLDC
"RTN","DGREGAED",17,0)
 N I,X,Y
"RTN","DGREGAED",18,0)
 S DFN=+$G(DFN)
"RTN","DGREGAED",19,0)
 ;I ($G(DFN)'?.N) Q
"RTN","DGREGAED",20,0)
 S FLG(1)=$G(FLG(1)),FLG(2)=$G(FLG(2))
"RTN","DGREGAED",21,0)
 D GETOLD(.DGCMP,DFN)
"RTN","DGREGAED",22,0)
 S CNTRY="",ICNTRY=$S(DFN:$P($G(^DPT(DFN,.11)),"^",10),1:"")
"RTN","DGREGAED",23,0)
 I ICNTRY="" S ICNTRY=1  ;default country is USA if NULL
"RTN","DGREGAED",24,0)
 S OLDC=DGCMP("OLD",.1173),FORGN=$$FOREIGN^DGADDUTL(DFN,ICNTRY,2,.1173,.CNTRY) I FORGN=-1 Q
"RTN","DGREGAED",25,0)
 S FSTR=$$INPT1(FORGN,.PSTR)      ;set up field string of address prompts
"RTN","DGREGAED",26,0)
 S DGINPUT=1 D INPUT(.DGINPUT,DFN,FSTR,CNTRY) I $G(DGINPUT)=-1 Q
"RTN","DGREGAED",27,0)
 I 'DFN M DGRET=DGINPUT Q
"RTN","DGREGAED",28,0)
 I $G(FLG(2))=1 D COMPARE(.DGINPUT,.DGCMP,.FLG)
"RTN","DGREGAED",29,0)
 I '$$CONFIRM() W !,"Change aborted." D EOP Q
"RTN","DGREGAED",30,0)
 N DGPRIOR
"RTN","DGREGAED",31,0)
 D GETPRIOR^DGADDUTL(DFN,.DGPRIOR)
"RTN","DGREGAED",32,0)
 D SAVE(.DGINPUT,DFN,FSTR,FORGN) I $G(SRC)="",+$G(DGNEW) Q
"RTN","DGREGAED",33,0)
 Q:'$$FILEYN^DGADDUTL(.DGPRIOR,.DGINPUT)
"RTN","DGREGAED",34,0)
 D GETUPDTS^DGADDUTL(DFN,.DGINPUT)
"RTN","DGREGAED",35,0)
 D UPDADDLG^DGADDUTL(DFN,.DGPRIOR,.DGINPUT)
"RTN","DGREGAED",36,0)
 Q
"RTN","DGREGAED",37,0)
INPUT(DGINPUT,DFN,FSTR,CNTRY) ;Let user input address changes
"RTN","DGREGAED",38,0)
 ;Output: DGINPUT(field#)=external^internal(if any)
"RTN","DGREGAED",39,0)
 N DIR,X,Y,DA,DGR,DTOUT,DUOUT,DIROUT,DGN,L
"RTN","DGREGAED",40,0)
 F L=1:1:$L(FSTR,",") S DGN=$P(FSTR,",",L),DGINPUT(DGN)="" Q:DGINPUT=-1  D
"RTN","DGREGAED",41,0)
 . I $$SKIP(DGN,.DGINPUT,.FLG) Q
"RTN","DGREGAED",42,0)
 . I DGN=.1112 D ZIPINP(.DGINPUT,DFN) Q
"RTN","DGREGAED",43,0)
 . I '$$READ(DFN,DGN,.Y) S DGINPUT=-1 Q
"RTN","DGREGAED",44,0)
 . I DGN=.121 S Y=$G(Y) D  Q
"RTN","DGREGAED",45,0)
 .. I Y="",DGINPUT(DGN)="" Q
"RTN","DGREGAED",46,0)
 .. I DFN,$P(Y,U)=$$GET1^DIQ(2,DFN_",",DGN,"I") S DGINPUT(DGN)=$$GET1^DIQ(2,DFN_",",DGN)_U_$P(Y,U) Q
"RTN","DGREGAED",47,0)
 .. S DGINPUT(DGN)=$P(Y(0),U)_U_Y
"RTN","DGREGAED",48,0)
 . S DGINPUT(DGN)=$G(Y)
"RTN","DGREGAED",49,0)
 I DGINPUT'=-1 S DGINPUT(.1173)=CNTRY_"^"_$O(^HL(779.004,"B",CNTRY,""))
"RTN","DGREGAED",50,0)
 Q
"RTN","DGREGAED",51,0)
GETOLD(DGCMP,DFN) ;populate array with existing address info
"RTN","DGREGAED",52,0)
 N CCIEN,DGCURR,CFORGN,CFSTR,L,T,DGCIEN,DGST,DGCNTY,COUNTRY
"RTN","DGREGAED",53,0)
 S CFORGN=0
"RTN","DGREGAED",54,0)
 ; get current country
"RTN","DGREGAED",55,0)
 ; If current country is NULL it is old data
"RTN","DGREGAED",56,0)
 ; Leave it NULL here because this is not an edit funtion
"RTN","DGREGAED",57,0)
 S CCIEN=$S(DFN:$$GET1^DIQ(2,DFN_",","COUNTRY","I"),1:"")
"RTN","DGREGAED",58,0)
 ;I CCIEN="" S CCIEN=$O(^HL(779.004,"D","UNITED STATES",""))
"RTN","DGREGAED",59,0)
 S CFORGN=$$FORIEN^DGADDUTL(CCIEN)
"RTN","DGREGAED",60,0)
 ;get current address fields and xlate to ^DIQ format
"RTN","DGREGAED",61,0)
 S CFSTR=$$INPT1(CFORGN),CFSTR=$TR(CFSTR,",",";")
"RTN","DGREGAED",62,0)
 ; Domestic data needs some extra fields
"RTN","DGREGAED",63,0)
 I 'CFORGN S CFSTR=CFSTR_";.114;.115;.117"
"RTN","DGREGAED",64,0)
 I DFN D GETS^DIQ(2,DFN_",",CFSTR,"EI","DGCURR")
"RTN","DGREGAED",65,0)
 F L=1:1:$L(CFSTR,";") S T=$P(CFSTR,";",L),DGCMP("OLD",T)=$G(DGCURR(2,DFN_",",T,"E"))
"RTN","DGREGAED",66,0)
 S COUNTRY=$$CNTRYI^DGADDUTL(CCIEN) I COUNTRY=-1 S COUNTRY="UNKNOWN COUNTRY"
"RTN","DGREGAED",67,0)
 S DGCMP("OLD",.1173)=COUNTRY_"^"_CCIEN
"RTN","DGREGAED",68,0)
 I 'CFORGN D
"RTN","DGREGAED",69,0)
 . S DGCIEN=$G(DGCURR(2,DFN_",",.117,"I"))
"RTN","DGREGAED",70,0)
 . S DGST=$G(DGCURR(2,DFN_",",.115,"I"))
"RTN","DGREGAED",71,0)
 . S DGCNTY=$$CNTY^DGREGAZL(DGST,DGCIEN)
"RTN","DGREGAED",72,0)
 . I DGCNTY=-1 S DGCNTY=""
"RTN","DGREGAED",73,0)
 . S DGCMP("OLD",.117)=$P(DGCNTY,U)_" "_$P(DGCNTY,U,3)
"RTN","DGREGAED",74,0)
 Q
"RTN","DGREGAED",75,0)
 ;
"RTN","DGREGAED",76,0)
COMPARE(DGINPUT,DGCMP,FLG) ;Display before & after address fields.
"RTN","DGREGAED",77,0)
 N DGM
"RTN","DGREGAED",78,0)
 M DGCMP("NEW")=DGINPUT
"RTN","DGREGAED",79,0)
 F DGM="OLD","NEW" D
"RTN","DGREGAED",80,0)
 . I DGCMP(DGM,.1173)]"",$$FORIEN^DGADDUTL($P(DGCMP(DGM,.1173),U,2)) D DISPFGN(.DGCMP,DGM,.FLG) Q
"RTN","DGREGAED",81,0)
 . I DGM="NEW" D
"RTN","DGREGAED",82,0)
 . . S DGCNTY=$P($G(DGCMP("NEW",.117)),U)_" "_$P($G(DGCMP("NEW",.117)),U,3)
"RTN","DGREGAED",83,0)
 . . S DGCMP("NEW",.117)=DGCNTY
"RTN","DGREGAED",84,0)
 . . I ($L(DGCMP("NEW",.1112))>5)&($P(DGCMP("NEW",.1112),"-",2)="") S DGCMP("NEW",.1112)=$E(DGCMP("NEW",.1112),1,5)_"-"_$E(DGCMP("NEW",.1112),6,9)
"RTN","DGREGAED",85,0)
 . D DISPUS(.DGCMP,DGM,.FLG)
"RTN","DGREGAED",86,0)
 Q
"RTN","DGREGAED",87,0)
 ;
"RTN","DGREGAED",88,0)
DISPUS(DGCMP,DGM,FLG) ;tag to display US data
"RTN","DGREGAED",89,0)
 N DGCNTRY
"RTN","DGREGAED",90,0)
 W !,?2,"[",DGM," ADDRESS]"
"RTN","DGREGAED",91,0)
 W ?16,$P($G(DGCMP(DGM,.111)),U)
"RTN","DGREGAED",92,0)
 I $P($G(DGCMP(DGM,.112)),U)'="" W !,?16,$P($G(DGCMP(DGM,.112)),U)
"RTN","DGREGAED",93,0)
 I $P($G(DGCMP(DGM,.113)),U)'="" W !,?16,$P($G(DGCMP(DGM,.113)),U)
"RTN","DGREGAED",94,0)
 W !,?16,$P($G(DGCMP(DGM,.114)),U)
"RTN","DGREGAED",95,0)
 W:($P($G(DGCMP(DGM,.114)),U)'="")!($P($G(DGCMP(DGM,.115)),U)'="") ","
"RTN","DGREGAED",96,0)
 W $P($G(DGCMP(DGM,.115)),U)
"RTN","DGREGAED",97,0)
 W " ",$G(DGCMP(DGM,.1112))
"RTN","DGREGAED",98,0)
 S DGCNTRY=$$CNTRYI^DGADDUTL($P($G(DGCMP(DGM,.1173)),U,2))
"RTN","DGREGAED",99,0)
 I DGCNTRY]"",(DGCNTRY'=-1) W !?16,DGCNTRY
"RTN","DGREGAED",100,0)
 I $P($G(DGCMP(DGM,.117)),U)'="" W !,?6,"  County: ",$P($G(DGCMP(DGM,.117)),U)
"RTN","DGREGAED",101,0)
 I $G(FLG(1))=1 D
"RTN","DGREGAED",102,0)
 . W !,?6,"   Phone: ",?16,$P($G(DGCMP(DGM,.131)),U)
"RTN","DGREGAED",103,0)
 . W !,?6,"  Office: ",?16,$P($G(DGCMP(DGM,.132)),U)
"RTN","DGREGAED",104,0)
 W !,?6,"Bad Addr: ",?16,$P($G(DGCMP(DGM,.121)),U)
"RTN","DGREGAED",105,0)
 W !
"RTN","DGREGAED",106,0)
 Q
"RTN","DGREGAED",107,0)
 ;
"RTN","DGREGAED",108,0)
DISPFGN(DGCMP,DGM,FLG) ;tag to display Foreign data
"RTN","DGREGAED",109,0)
 N DGCNTRY
"RTN","DGREGAED",110,0)
 W !,?2,"[",DGM," ADDRESS]"
"RTN","DGREGAED",111,0)
 W ?16,$P($G(DGCMP(DGM,.111)),U)
"RTN","DGREGAED",112,0)
 I $P($G(DGCMP(DGM,.112)),U)'="" W !,?16,$P($G(DGCMP(DGM,.112)),U)
"RTN","DGREGAED",113,0)
 I $P($G(DGCMP(DGM,.113)),U)'="" W !,?16,$P($G(DGCMP(DGM,.113)),U)
"RTN","DGREGAED",114,0)
 W !,?16,$P($G(DGCMP(DGM,.1172)),U)_" "_$P($G(DGCMP(DGM,.114)),U)_" "_$P($G(DGCMP(DGM,.1171)),U)
"RTN","DGREGAED",115,0)
 S DGCNTRY=$$CNTRYI^DGADDUTL($P($G(DGCMP(DGM,.1173)),U,2))
"RTN","DGREGAED",116,0)
 S DGCNTRY=$S(DGCNTRY="":"UNSPECIFIED COUNTRY",DGCNTRY=-1:"UNKNOWN COUNTRY",1:DGCNTRY)
"RTN","DGREGAED",117,0)
 I DGCNTRY]"" W !?16,DGCNTRY
"RTN","DGREGAED",118,0)
 I $G(FLG(1))=1 D
"RTN","DGREGAED",119,0)
 . W !,?6,"   Phone: ",?16,$P($G(DGCMP(DGM,.131)),U)
"RTN","DGREGAED",120,0)
 . W !,?6,"  Office: ",?16,$P($G(DGCMP(DGM,.132)),U)
"RTN","DGREGAED",121,0)
 W !,?6,"Bad Addr: ",?16,$P($G(DGCMP(DGM,.121)),U)
"RTN","DGREGAED",122,0)
 W !
"RTN","DGREGAED",123,0)
 Q
"RTN","DGREGAED",124,0)
 ;
"RTN","DGREGAED",125,0)
CONFIRM() ;Confirm if user wants to save the change
"RTN","DGREGAED",126,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT
"RTN","DGREGAED",127,0)
 S DIR(0)="Y"
"RTN","DGREGAED",128,0)
 S DIR("A")="Are you sure that you want to save the above changes"
"RTN","DGREGAED",129,0)
 S DIR("?")="Please answer Y for YES or N for NO."
"RTN","DGREGAED",130,0)
 D ^DIR
"RTN","DGREGAED",131,0)
 I $D(DTOUT)!($G(Y)=0) Q 0
"RTN","DGREGAED",132,0)
 I $D(DUOUT)!$D(DIROUT) Q 0
"RTN","DGREGAED",133,0)
 Q 1
"RTN","DGREGAED",134,0)
SAVE(DGINPUT,DFN,FSTR,FORGN) ;Save changes
"RTN","DGREGAED",135,0)
 N DGN,DGER,DGM,L
"RTN","DGREGAED",136,0)
 S DGER=0
"RTN","DGREGAED",137,0)
 ; need to get the country code into the DGINPUT array
"RTN","DGREGAED",138,0)
 ; if it's a domestic address, we have to add in CITY,STATE & COUNTY
"RTN","DGREGAED",139,0)
 S FSTR=FSTR_$S('FORGN:",.114,.115,.117,.1173",1:",.1173")
"RTN","DGREGAED",140,0)
 F L=1:1:$L(FSTR,",") S DGN=$P(FSTR,",",L) D
"RTN","DGREGAED",141,0)
 . I ($G(FLG(1))'=1)&((DGN=.131)!(DGN=.132)) Q
"RTN","DGREGAED",142,0)
 . N DGCODE,DGNAME,FDA,MSG
"RTN","DGREGAED",143,0)
 . S DGCODE=$P($G(DGINPUT(DGN)),U,2)
"RTN","DGREGAED",144,0)
 . S DGNAME=$P($G(DGINPUT(DGN)),U)
"RTN","DGREGAED",145,0)
 . S FDA(2,DFN_",",DGN)=$S(DGCODE:DGCODE,1:DGNAME)
"RTN","DGREGAED",146,0)
 . D FILE^DIE($S(DGCODE:"",1:"E"),"FDA","MSG")
"RTN","DGREGAED",147,0)
 . I $D(MSG) D
"RTN","DGREGAED",148,0)
 .. S DGM="",DGER=1
"RTN","DGREGAED",149,0)
 .. W !,"Please review the saved changes!!",!
"RTN","DGREGAED",150,0)
 .. F  S DGM=$O(MSG("DIERR",1,"TEXT",DGM)) Q:DGM=""  D
"RTN","DGREGAED",151,0)
 ... W $G(MSG("DIERR",1,"TEXT",DGM))
"RTN","DGREGAED",152,0)
 I $G(DGER)=0 W !,"Change saved."
"RTN","DGREGAED",153,0)
 D EOP
"RTN","DGREGAED",154,0)
 Q
"RTN","DGREGAED",155,0)
READ(DFN,DGN,Y) ;Read input, return success
"RTN","DGREGAED",156,0)
 N SUCCESS,DIR,DA,DTOUT,DUOUT,DIROUT,L,POP
"RTN","DGREGAED",157,0)
 S SUCCESS=1,POP=0
"RTN","DGREGAED",158,0)
 F L=0:0 D  Q:POP
"RTN","DGREGAED",159,0)
 . S DIR(0)=2_","_DGN
"RTN","DGREGAED",160,0)
 . I DFN S DA=DFN
"RTN","DGREGAED",161,0)
 . D ^DIR
"RTN","DGREGAED",162,0)
 . I $D(DTOUT) S POP=1,SUCCESS=0 Q
"RTN","DGREGAED",163,0)
 . I $D(DUOUT)!$D(DIROUT) D UPCT Q
"RTN","DGREGAED",164,0)
 . S POP=1
"RTN","DGREGAED",165,0)
 Q SUCCESS
"RTN","DGREGAED",166,0)
INPT1(FORGN,PSTR) ; first address input prompts
"RTN","DGREGAED",167,0)
 N FSTR
"RTN","DGREGAED",168,0)
 ; PSTR is the full set of fields domestic & foreign combined
"RTN","DGREGAED",169,0)
 ; FSTR is the set of fields depending on Country code
"RTN","DGREGAED",170,0)
 S PSTR=".111,.112,.113,.114,.115,.117,.1112,.1171,.1172,.1173,.131,.132,.121"
"RTN","DGREGAED",171,0)
 S FSTR=".111,.112,.113,.1112,.131,.132,.121"
"RTN","DGREGAED",172,0)
 I FORGN S FSTR=".111,.112,.113,.114,.1171,.1172,.131,.132,.121"
"RTN","DGREGAED",173,0)
 Q FSTR
"RTN","DGREGAED",174,0)
ZIPINP(DGINPUT,DFN) ; get ZIP+4 input
"RTN","DGREGAED",175,0)
 N DGR
"RTN","DGREGAED",176,0)
 D EN^DGREGAZL(.DGR,DFN)
"RTN","DGREGAED",177,0)
 I $G(DGR)=-1 Q
"RTN","DGREGAED",178,0)
 M DGINPUT=DGR
"RTN","DGREGAED",179,0)
 Q
"RTN","DGREGAED",180,0)
SKIP(DGN,DGINPUT,FLG) ; determine whether or not to skip this step
"RTN","DGREGAED",181,0)
 N SKIP
"RTN","DGREGAED",182,0)
 S SKIP=0
"RTN","DGREGAED",183,0)
 I ($G(DGINPUT(.111))="")&((DGN=.112)!(DGN=.113)) S SKIP=1
"RTN","DGREGAED",184,0)
 I ($G(DGINPUT(.112))="")&(DGN=.113) S SKIP=1
"RTN","DGREGAED",185,0)
 I ($G(FLG(1))'=1)&((DGN=.131)!(DGN=.132)) S SKIP=1
"RTN","DGREGAED",186,0)
 Q SKIP
"RTN","DGREGAED",187,0)
EOP ;End of page prompt
"RTN","DGREGAED",188,0)
 N DIR,DTOUT,DUOUT,DIROUT,X,Y
"RTN","DGREGAED",189,0)
 S DIR(0)="E"
"RTN","DGREGAED",190,0)
 S DIR("A")="Press ENTER to continue"
"RTN","DGREGAED",191,0)
 D ^DIR
"RTN","DGREGAED",192,0)
 Q
"RTN","DGREGAED",193,0)
UPCT ;Indicate "^" or "^^" are unacceptable inputs.
"RTN","DGREGAED",194,0)
 W !,"EXIT NOT ALLOWED ??"
"RTN","DGREGAED",195,0)
 Q
"RTN","DGREGAZL")
0^1^B42841680^B41604558
"RTN","DGREGAZL",1,0)
DGREGAZL ;ALB/DW - ZIP LINKING UTILITY ; 5/27/04 10:54am
"RTN","DGREGAZL",2,0)
 ;;5.3;Registration;**522,560,581,730,760,915**;Aug 13, 1993;Build 6
"RTN","DGREGAZL",3,0)
 ;
"RTN","DGREGAZL",4,0)
EN(RESULT,DFN) ;Let user edit zip+4, city, state, county based on zip-linking
"RTN","DGREGAZL",5,0)
 ; DFN optional for defauls
"RTN","DGREGAZL",6,0)
 ; Output: RESULT(field#) = User Input External ^ Internal
"RTN","DGREGAZL",7,0)
 K RESULT
"RTN","DGREGAZL",8,0)
 N DGIND,DGTOT
"RTN","DGREGAZL",9,0)
 I $G(DFN)="" S DFN=0
"RTN","DGREGAZL",10,0)
 N DGR,DGDFLT,DGALW,DGZIP,DGN
"RTN","DGREGAZL",11,0)
 S DGN=""
"RTN","DGREGAZL",12,0)
 I $$FOREIGN() D  Q
"RTN","DGREGAZL",13,0)
 . D FRGNEDT(.DGR,DFN)
"RTN","DGREGAZL",14,0)
 . I $G(DGR)=-1 S RESULT=-1 Q
"RTN","DGREGAZL",15,0)
 . F DGN=.1112,.114,.115,.117 S RESULT(DGN)=$G(DGR(DGN))
"RTN","DGREGAZL",16,0)
 S DGZIP=$$ZIP(DFN)
"RTN","DGREGAZL",17,0)
 I DGZIP=-1 S RESULT=-1 Q
"RTN","DGREGAZL",18,0)
 S RESULT(.1112)=DGZIP
"RTN","DGREGAZL",19,0)
 S DGIND=$$CITY(.DGR,DGZIP,DFN)
"RTN","DGREGAZL",20,0)
 I DGIND=$G(DGTOT)+1 S DGIND=""
"RTN","DGREGAZL",21,0)
 I $G(DGR)=-1 S RESULT=-1 Q
"RTN","DGREGAZL",22,0)
 S RESULT(.114)=$G(DGR)
"RTN","DGREGAZL",23,0)
 S DGALW=$$ALWEDT^DGREGDD1($G(DUZ),DGZIP)
"RTN","DGREGAZL",24,0)
 I DGALW=1 D
"RTN","DGREGAZL",25,0)
 . K DGR D STCNTY(.DGR,DGZIP,DFN,DGIND)
"RTN","DGREGAZL",26,0)
 . I $G(DGR)=-1 S RESULT=-1 Q
"RTN","DGREGAZL",27,0)
 . S RESULT(.115)=$G(DGR(.115))
"RTN","DGREGAZL",28,0)
 . S RESULT(.117)=$G(DGR(.117))
"RTN","DGREGAZL",29,0)
 I DGALW=0 D
"RTN","DGREGAZL",30,0)
 . I DGZIP'="" D LINK(.DGDFLT,DGZIP,1)
"RTN","DGREGAZL",31,0)
 . S RESULT(.115)=$G(DGDFLT(.115))
"RTN","DGREGAZL",32,0)
 . S RESULT(.117)=$G(DGDFLT(.117))
"RTN","DGREGAZL",33,0)
 Q
"RTN","DGREGAZL",34,0)
ZIP(DFN) ;Let user input zip+4
"RTN","DGREGAZL",35,0)
ZAGN N DIR,DTOUT,DUOUT,DIROUT,DGDATA
"RTN","DGREGAZL",36,0)
 S DIR(0)="2,.1112"
"RTN","DGREGAZL",37,0)
 S:DFN DA=DFN
"RTN","DGREGAZL",38,0)
 D ^DIR
"RTN","DGREGAZL",39,0)
 I $D(DTOUT) Q -1
"RTN","DGREGAZL",40,0)
 I $D(DUOUT)!$D(DIROUT) D UPCT^DGREGAED G ZAGN
"RTN","DGREGAZL",41,0)
 S DGZIP=$G(Y)
"RTN","DGREGAZL",42,0)
 ;allow bogus zip:
"RTN","DGREGAZL",43,0)
 I $D(^XUSEC("EAS GMT COUNTY EDIT",+DUZ)) Q DGZIP
"RTN","DGREGAZL",44,0)
 I DGZIP="" Q DGZIP
"RTN","DGREGAZL",45,0)
 D POSTALB^XIPUTIL(DGZIP,.DGDATA)
"RTN","DGREGAZL",46,0)
  ;DG*730 - later commented out by DG*760
"RTN","DGREGAZL",47,0)
 ;I $G(DGDATA(1,"CITY ABBREVIATION"))'="",$G(DGDATA(1,"CITY ABBREVIATION"))=$G(DGDATA(2,"CITY")) S DGDATA=1 K DGDATA(2)
"RTN","DGREGAZL",48,0)
 I $D(DGDATA("ERROR")) D  G ZAGN
"RTN","DGREGAZL",49,0)
 . W $C(7)," ??"
"RTN","DGREGAZL",50,0)
 Q DGZIP
"RTN","DGREGAZL",51,0)
CITY(RESULT,ZIP,DFN) ;Base on zip, let user input city(#.114)
"RTN","DGREGAZL",52,0)
 ; Input:
"RTN","DGREGAZL",53,0)
 ;   ZIP - user input zip for the patient primary address
"RTN","DGREGAZL",54,0)
 ;   DFN - Interal entry number of Patient File (#2)
"RTN","DGREGAZL",55,0)
 ;         (optional, used for default)
"RTN","DGREGAZL",56,0)
 ; Output:RESULT=-1 (input error or timed or ^ out) 
"RTN","DGREGAZL",57,0)
 ;        or    =user input city
"RTN","DGREGAZL",58,0)
 ;        Array index # of selected city.
"RTN","DGREGAZL",59,0)
 K RESULT
"RTN","DGREGAZL",60,0)
 N DGDATA,DIR,DA,Y,DTOUT,DUOUT,DIROUT,DGIND
"RTN","DGREGAZL",61,0)
 N DGCITY,DGST,DGCNTY,DGABRV,DGN,DGECH,DGSOC
"RTN","DGREGAZL",62,0)
 N DOLDCITY,DGSAME,DGELEVEN
"RTN","DGREGAZL",63,0)
 ; DG*760 brought in DGCITI
"RTN","DGREGAZL",64,0)
 N DGCITI
"RTN","DGREGAZL",65,0)
 S DGIND=""
"RTN","DGREGAZL",66,0)
 D POSTALB^XIPUTIL(ZIP,.DGDATA)
"RTN","DGREGAZL",67,0)
 ;DG*730 - later commented out by DG*760
"RTN","DGREGAZL",68,0)
 ;I $G(DGDATA(1,"CITY ABBREVIATION"))'="",$G(DGDATA(1,"CITY ABBREVIATION"))=$G(DGDATA(2,"CITY")) S DGDATA=1 K DGDATA(2)
"RTN","DGREGAZL",69,0)
 D FIELD^DID(2,.114,"N","LABEL","DGCITY")
"RTN","DGREGAZL",70,0)
 S DGN=""
"RTN","DGREGAZL",71,0)
 I '$D(DGDATA("ERROR")) D
"RTN","DGREGAZL",72,0)
 . S DOLDCITY=$S(DFN:$$GET1^DIQ(2,DFN_",",.114),1:"")
"RTN","DGREGAZL",73,0)
 . S DGSAME=0
"RTN","DGREGAZL",74,0)
 . F  S DGN=$O(DGDATA(DGN)) Q:DGN=""  D
"RTN","DGREGAZL",75,0)
 .. S DGCITI=$P($G(DGDATA(DGN,"CITY")),"*",1)
"RTN","DGREGAZL",76,0)
 .. S DGABRV=$G(DGDATA(DGN,"CITY ABBREVIATION"))
"RTN","DGREGAZL",77,0)
 .. I DOLDCITY'="",DGCITI=DOLDCITY!(DGABRV=DOLDCITY) S DGSAME=1
"RTN","DGREGAZL",78,0)
 .. ; next 4 commented out lines done by DG*760
"RTN","DGREGAZL",79,0)
 .. ;I DGABRV="" S DGABRV=$P($G(DGDATA(DGN,"CITY")),"*",1)
"RTN","DGREGAZL",80,0)
 .. ;I DOLDCITY'="",DGABRV=DOLDCITY S DGSAME=1
"RTN","DGREGAZL",81,0)
 .. ;I $G(DGDATA(DGN,"CITY"))["*" S:DGABRV'="" DGABRV=DGABRV_"*"
"RTN","DGREGAZL",82,0)
 .. I $G(DGDATA(DGN,"CITY"))["*" S DGCITI=DGCITI_"*"
"RTN","DGREGAZL",83,0)
 .. ;S DGECH=DGN_":"_DGABRV
"RTN","DGREGAZL",84,0)
 .. S DGECH=DGN_":"_DGCITI
"RTN","DGREGAZL",85,0)
 .. S DGSOC=$S($G(DGSOC)="":DGECH,1:DGSOC_";"_DGECH)
"RTN","DGREGAZL",86,0)
 .. S DGTOT=DGN
"RTN","DGREGAZL",87,0)
 .I 'DGSAME S DGELEVEN=$S(DFN:$G(^DPT(DFN,.11)),1:"") D
"RTN","DGREGAZL",88,0)
 ..Q:$P(DGELEVEN,U,6)'=$G(DGDATA(DGTOT,"POSTAL CODE"))
"RTN","DGREGAZL",89,0)
 ..Q:$P(DGELEVEN,U,14)'="VAMC"
"RTN","DGREGAZL",90,0)
 ..Q:$P(DGELEVEN,U,15)'=$$GETSITE^DGMTU4($G(DUZ))
"RTN","DGREGAZL",91,0)
 ..Q:$P(DGELEVEN,U,17)'>.5
"RTN","DGREGAZL",92,0)
 ..S DGN=DGTOT+1,DGECH=DGN_":"_DOLDCITY,DGSOC=DGSOC_";"_DGECH
"RTN","DGREGAZL",93,0)
 .;
"RTN","DGREGAZL",94,0)
 . I $D(^XUSEC("EAS GMT COUNTY EDIT",+DUZ)) D
"RTN","DGREGAZL",95,0)
 .. S DGSOC=$G(DGSOC)_";"_99_":"_"FREE TEXT"
"RTN","DGREGAZL",96,0)
 . S DIR(0)="SO^"_$G(DGSOC)
"RTN","DGREGAZL",97,0)
 . ;if zip '= zip on file, default = ""; else default=city on file
"RTN","DGREGAZL",98,0)
 . ;I ($G(DFN)'="")&($E(ZIP,1,5)=$$GET1^DIQ(2,DFN_",",.116)) D
"RTN","DGREGAZL",99,0)
 . S:DFN DIR("B")=$$GET1^DIQ(2,DFN_",",.114)
"RTN","DGREGAZL",100,0)
 . S DIR("A")=$G(DGCITY("LABEL"))
"RTN","DGREGAZL",101,0)
CAGN1 . D ^DIR
"RTN","DGREGAZL",102,0)
 . I $D(DTOUT) S RESULT=-1 Q
"RTN","DGREGAZL",103,0)
 . I $D(DUOUT)!$D(DIROUT) D UPCT^DGREGAED G CAGN1
"RTN","DGREGAZL",104,0)
 . S RESULT=$P($G(Y(0)),"*")
"RTN","DGREGAZL",105,0)
 . S DGIND=$G(Y)
"RTN","DGREGAZL",106,0)
 I ($G(Y)=99)!($D(DGDATA("ERROR"))) D
"RTN","DGREGAZL",107,0)
CAGN2 . I '$D(^XUSEC("EAS GMT COUNTY EDIT",+DUZ)) Q
"RTN","DGREGAZL",108,0)
 . N DIR,X,Y
"RTN","DGREGAZL",109,0)
 . S DIR(0)="2,.114"
"RTN","DGREGAZL",110,0)
 . S:DFN DA=DFN
"RTN","DGREGAZL",111,0)
 . D ^DIR
"RTN","DGREGAZL",112,0)
 . I $D(DTOUT) S RESULT=-1 Q
"RTN","DGREGAZL",113,0)
 . I $D(DUOUT)!$D(DIROUT) D UPCT^DGREGAED G CAGN2
"RTN","DGREGAZL",114,0)
 . S RESULT=$G(Y)
"RTN","DGREGAZL",115,0)
 I $L($G(RESULT))>15 D
"RTN","DGREGAZL",116,0)
 . S DGN=Y
"RTN","DGREGAZL",117,0)
 . S RESULT=$G(DGDATA(DGN,"CITY ABBREVIATION"))
"RTN","DGREGAZL",118,0)
 Q DGIND
"RTN","DGREGAZL",119,0)
 ;
"RTN","DGREGAZL",120,0)
LINK(RESULT,ZIP,DGN) ;From zip, get the linked state,county
"RTN","DGREGAZL",121,0)
 K RESULT
"RTN","DGREGAZL",122,0)
 N DGDATA,CNTYIEN
"RTN","DGREGAZL",123,0)
 S CNTYIEN=""
"RTN","DGREGAZL",124,0)
 S DGN=$G(DGN)
"RTN","DGREGAZL",125,0)
 I (DGN="")&($$MLT^DGREGDD1(ZIP)) S DGN=1
"RTN","DGREGAZL",126,0)
 I (DGN=99)&($$MLT^DGREGDD1(ZIP)) S DGN=1
"RTN","DGREGAZL",127,0)
 I (DGN="")!(DGN=99) Q
"RTN","DGREGAZL",128,0)
 D POSTALB^XIPUTIL(ZIP,.DGDATA)
"RTN","DGREGAZL",129,0)
 S:$G(DGDATA(DGN,"STATE POINTER"))'="" CNTYIEN=$$FIND1^DIC(5.01,","_$G(DGDATA(DGN,"STATE POINTER"))_",","MOXQ",$E($G(DGDATA(DGN,"FIPS CODE")),3,5),"C")
"RTN","DGREGAZL",130,0)
 D:'CNTYIEN  ;could be duplicate county codes in subfile #5.01
"RTN","DGREGAZL",131,0)
 .Q:'$D(^DIC(5,+$G(DGDATA(DGN,"STATE POINTER")),1))
"RTN","DGREGAZL",132,0)
 .Q:$E($G(DGDATA(DGN,"FIPS CODE")),3,5)=""
"RTN","DGREGAZL",133,0)
 .S CNTYIEN=$O(^DIC(5,$G(DGDATA(DGN,"STATE POINTER")),1,"C",$E($G(DGDATA(DGN,"FIPS CODE")),3,5),""))
"RTN","DGREGAZL",134,0)
 S RESULT(.115)=$G(DGDATA(DGN,"STATE"))_U_$G(DGDATA(DGN,"STATE POINTER"))
"RTN","DGREGAZL",135,0)
 S RESULT(.117)=$G(DGDATA(DGN,"COUNTY"))_U_$G(CNTYIEN)_U_$E($G(DGDATA(DGN,"FIPS CODE")),3,5)
"RTN","DGREGAZL",136,0)
 Q
"RTN","DGREGAZL",137,0)
 ;
"RTN","DGREGAZL",138,0)
STCNTY(RESULT,ZIP,DFN,DGNUM) ;Based on zip,input state (#.115) and county (#.117)
"RTN","DGREGAZL",139,0)
 ; DFN optional for default
"RTN","DGREGAZL",140,0)
 K RESULT
"RTN","DGREGAZL",141,0)
 S DGNUM=$G(DGNUM)
"RTN","DGREGAZL",142,0)
 N DGN,DGDFLT,DGST,POP,DIR,X,Y,DTOUT,DUOUT,DIROUT
"RTN","DGREGAZL",143,0)
 S POP=0
"RTN","DGREGAZL",144,0)
 D LINK(.DGDFLT,ZIP,DGNUM)
"RTN","DGREGAZL",145,0)
 F DGN=.115,.117 Q:POP  D
"RTN","DGREGAZL",146,0)
SCAGN . I DGN=.115 S DIR(0)=2_","_DGN
"RTN","DGREGAZL",147,0)
 . I ($G(DGST)="")&(DGN=.117) Q
"RTN","DGREGAZL",148,0)
 . I DGN=.117 S DIR(0)="POA^DIC(5,DGST,1,:AEMQ"
"RTN","DGREGAZL",149,0)
 . S DIR("B")=$P($G(DGDFLT(DGN)),U)
"RTN","DGREGAZL",150,0)
 . D ^DIR
"RTN","DGREGAZL",151,0)
 . I $D(DTOUT) S POP=1 Q
"RTN","DGREGAZL",152,0)
 . I $D(DUOUT)!$D(DIROUT) D UPCT^DGREGAED G SCAGN
"RTN","DGREGAZL",153,0)
 . S RESULT(DGN)=$P($G(Y),U,2)_U_$P($G(Y),U)
"RTN","DGREGAZL",154,0)
 . I DGN=.115 S DGST=$P($G(Y),U)
"RTN","DGREGAZL",155,0)
 . I DGN=.117 S RESULT(.117)=$$CNTY(DGST,$P($G(RESULT(.117)),U,2))
"RTN","DGREGAZL",156,0)
 I POP=1 S RESULT=-1
"RTN","DGREGAZL",157,0)
 Q
"RTN","DGREGAZL",158,0)
CNTY(DGST,DGCIEN) ;Return county name and code
"RTN","DGREGAZL",159,0)
 ;Input:state number and county IEN
"RTN","DGREGAZL",160,0)
 ;Output: CountyName^CountyIEN^CountyCode
"RTN","DGREGAZL",161,0)
 I ($G(DGST)="")!($G(DGCIEN)="") S RESULT=-1 Q RESULT
"RTN","DGREGAZL",162,0)
 N DGR,RESULT
"RTN","DGREGAZL",163,0)
 S DGR=$G(^DIC(5,DGST,1,DGCIEN,0))
"RTN","DGREGAZL",164,0)
 S RESULT=$P($G(DGR),U)_U_DGCIEN_U_$P($G(DGR),U,3)
"RTN","DGREGAZL",165,0)
 Q RESULT
"RTN","DGREGAZL",166,0)
FOREIGN() ;Manila (Philippines) doesn't need zip linking.
"RTN","DGREGAZL",167,0)
 ;Output: 1 - area need no zip linking
"RTN","DGREGAZL",168,0)
 ;        0 - zip-linking area
"RTN","DGREGAZL",169,0)
 I $$STA^XUAF4(+$$KSP^XUPARAM("INST"))=358 Q 1
"RTN","DGREGAZL",170,0)
 ;;;I $$STA^XUAF4(+$$KSP^XUPARAM("INST"))=500 Q 1 ;;HERE TEST
"RTN","DGREGAZL",171,0)
 Q 0
"RTN","DGREGAZL",172,0)
FRGNEDT(DGINPUT,DFN) ;Edit zip+4, city, state, county for no zip-linking area
"RTN","DGREGAZL",173,0)
 ; DFN optional for default
"RTN","DGREGAZL",174,0)
 K DGINPUT
"RTN","DGREGAZL",175,0)
 N DGN,DIR,DTOUT,DUOUT,DIROUT,X,Y,POP,DGST
"RTN","DGREGAZL",176,0)
 S POP=0
"RTN","DGREGAZL",177,0)
 F DGN=.1112,.114,.115,.117 Q:POP  D
"RTN","DGREGAZL",178,0)
FAGN . I ($G(DGST)="")&(DGN=.117) Q
"RTN","DGREGAZL",179,0)
 . S DIR(0)=2_","_DGN
"RTN","DGREGAZL",180,0)
 . I DGN=.117 D
"RTN","DGREGAZL",181,0)
 .. S DIR(0)="POA^DIC(5,DGST,1,:AEMQ"
"RTN","DGREGAZL",182,0)
 .. S:DFN DIR("B")=$$GET1^DIQ(2,DFN_",",.117)
"RTN","DGREGAZL",183,0)
 . I DGN'=.117 S:DFN DA=DFN
"RTN","DGREGAZL",184,0)
 . D ^DIR
"RTN","DGREGAZL",185,0)
 . I $D(DTOUT) S POP=1 Q
"RTN","DGREGAZL",186,0)
 . I $D(DUOUT)!$D(DIROUT) D UPCT^DGREGAED G FAGN
"RTN","DGREGAZL",187,0)
 . I (DGN=.114)!(DGN=.1112) S DGINPUT(DGN)=$G(Y)
"RTN","DGREGAZL",188,0)
 . I (DGN=.115) D
"RTN","DGREGAZL",189,0)
 .. S DGST=$P($G(Y),U)
"RTN","DGREGAZL",190,0)
 .. I DFN,DGST=$$GET1^DIQ(2,DFN_",",.115,"I") D
"RTN","DGREGAZL",191,0)
 ... S DGINPUT(.115)=$$GET1^DIQ(2,DFN_",",.115)_U_DGST
"RTN","DGREGAZL",192,0)
 .. I 'DFN!(DGST'=$$GET1^DIQ(2,DFN_",",.115,"I")) D
"RTN","DGREGAZL",193,0)
 ... S DGINPUT(.115)=$P($G(Y(0)),U)_U_DGST
"RTN","DGREGAZL",194,0)
 . I DGN=.117 S DGINPUT(DGN)=$P($G(Y),U,2)_U_$P($G(Y),U)
"RTN","DGREGAZL",195,0)
 I POP=1 S RESULT=-1
"RTN","DGREGAZL",196,0)
 Q
"RTN","DPTLK")
0^8^B121219825^B116067548
"RTN","DPTLK",1,0)
DPTLK ;ALB/RMO,RTK - MAS Patient Look-up Main Routine ; 3/22/05 4:19pm
"RTN","DPTLK",2,0)
 ;;5.3;Registration;**32,72,93,73,136,157,197,232,265,277,223,327,244,513,528,541,576,600,485,633,629,647,769,857,876,915**;Aug 13, 1993;Build 6
"RTN","DPTLK",3,0)
 ;
"RTN","DPTLK",4,0)
 ; mods made for magstripe read 12/96 - JFP
"RTN","DPTLK",5,0)
 ; mods made for VIC 4.0 (barcode and magstripe) read 4/2012 - ELZ (*857)
"RTN","DPTLK",6,0)
 ;
"RTN","DPTLK",7,0)
 ;Optional input: DPTNOFZY='1' to suppress fuzzy lookups implemented
"RTN","DPTLK",8,0)
 ;                by patch DG*5.3*244
"RTN","DPTLK",9,0)
 ;
"RTN","DPTLK",10,0)
EN ; -- Entry point
"RTN","DPTLK",11,0)
 N DIE,DR,DGSEARCH,DPTXX
"RTN","DPTLK",12,0)
 K DPTX,DPTDFN,DPTSAVX I $D(DIC(0)) G QK:DIC(0)["I"!(DIC(0)'["A"&('$D(X)))
"RTN","DPTLK",13,0)
 I '$D(^DD("VERSION")) W !!?3,"Unable to proceed. Fileman version node ^DD(""VERSION"") is undefined." G QK
"RTN","DPTLK",14,0)
 I '$D(^DPT(0))!(^DD("VERSION")<17.2) W !!?3,"Unable to proceed. ",$S('$D(^DPT(0)):"0th node of ^DPT missing",^DD("VERSION")<17.2:"Fileman version must be at least 17.2",1:""),"." G QK
"RTN","DPTLK",15,0)
EN2 K DO,DUOUT,DTOUT S U="^",DIC="^DPT(",DIC(0)=$S($D(DIC(0)):DIC(0),1:"AELMQ") S:DIC(0)'["A" (DPTX,DPTSAVX)=X
"RTN","DPTLK",16,0)
 S DPTSZ=1000 I $D(^DD("OS"))#2 S DPTSZ=$S(+$P(^DD("OS",^("OS"),0),U,2):$P(^(0),U,2),1:DPTSZ)
"RTN","DPTLK",17,0)
 ;
"RTN","DPTLK",18,0)
ASKPAT ; -- Prompt for patient
"RTN","DPTLK",19,0)
 I DIC(0)["A" D   G QK:'$T!($E(DPTX)["^")!(DPTX="")
"RTN","DPTLK",20,0)
 .K DTOUT,DUOUT,DGNEW,DGSEARCH
"RTN","DPTLK",21,0)
 .W !,$S($D(DIC("A")):DIC("A"),1:"Select PATIENT NAME: ") W:$D(DIC("B")) DIC("B"),"// "
"RTN","DPTLK",22,0)
 .R X:DTIME
"RTN","DPTLK",23,0)
 .S (DPTX,DPTXX)=X S:'$T DTOUT=1 S:$T&(DPTX="")&($D(DIC("B"))) DPTX=DIC("B") S:DPTX["^"&($E(DPTX)'="%") DUOUT=1
"RTN","DPTLK",24,0)
 ; -- Check for the IATA magnetic stripe input
"RTN","DPTLK",25,0)
 N MAG,GCHK,BARCODE,DGVIC40,DGCAC
"RTN","DPTLK",26,0)
 S (MAG,BARCODE,DGVIC40,DGCAC)=0
"RTN","DPTLK",27,0)
 I $E(DPTX)="%"!($E(DPTX)=";"),DPTX["?" S MAG=1,(X,DPTX)=$$IATA(DPTX)
"RTN","DPTLK",28,0)
 I 'MAG,DPTX?1"%"1N13ANP.3AN S BARCODE=1,(X,DPTX)=$$BARCODE($$UP^XLFSTR(DPTX))
"RTN","DPTLK",29,0)
 ; - read other line but don't use dbia#10096 don't display input
"RTN","DPTLK",30,0)
 I $G(DGVIC40),'BARCODE X ^%ZOSF("EOFF") R X(1):1 X ^%ZOSF("EON")
"RTN","DPTLK",31,0)
 I 'MAG,'BARCODE,DPTX?1N6AN1A7AN1A2AN S DGCAC=1,(X,DPTX)=$$CACCARD($$UP^XLFSTR(DPTX))
"RTN","DPTLK",32,0)
 ; fail VHIC card match but starts with %, we're done
"RTN","DPTLK",33,0)
 I 'MAG,'BARCODE,'DGCAC,$E(DPTX,1)="%" G CHKDFN
"RTN","DPTLK",34,0)
 ;
"RTN","DPTLK",35,0)
CHKPAT ; -- Custom Patient Lookup
"RTN","DPTLK",36,0)
 D DO^DIC1
"RTN","DPTLK",37,0)
 S DIC("W")=$S($D(DIC("W")):DIC("W"),1:"")
"RTN","DPTLK",38,0)
 K DPTIFNS,DPTS,DPTSEL
"RTN","DPTLK",39,0)
 S DPTCNT=0
"RTN","DPTLK",40,0)
 ; -- Check input for format an length
"RTN","DPTLK",41,0)
 G CHKDFN:DPTX?1A!(DPTX'?.ANP)!($L(DPTX)>30)&('$G(DGVIC40))
"RTN","DPTLK",42,0)
 ; -- Check for null response or abort
"RTN","DPTLK",43,0)
 I DPTX=""!(DPTX["^") G ASKPAT:DIC(0)["A",QK
"RTN","DPTLK",44,0)
 ; -- Check for question mark
"RTN","DPTLK",45,0)
 I DPTX["?" D  G ASKPAT:DIC(0)["A",QK
"RTN","DPTLK",46,0)
 .S D="B"
"RTN","DPTLK",47,0)
 .S DZ=$S(DPTX?1"?":"",1:"??")
"RTN","DPTLK",48,0)
 .G CHKPAT1:DZ="??"
"RTN","DPTLK",49,0)
 .N %
"RTN","DPTLK",50,0)
 .W !,?1,"Answer with PATIENT NAME, or SOCIAL SECURITY NUMBER, or last 4 digits",!,?4,"of SOCIAL SECURITY NUMBER, or first initial of"
"RTN","DPTLK",51,0)
 .W " last name with last",!,?4,"4 digits of SOCIAL SECURITY NUMBER"
"RTN","DPTLK",52,0)
 .W !,?1,"Do you want the entire ",+$P($G(^DPT(0)),"^",4),"-Entry PATIENT List" S %=0 D YN^DICN
"RTN","DPTLK",53,0)
 .Q:%'=1
"RTN","DPTLK",54,0)
 .S DZ="??"
"RTN","DPTLK",55,0)
CHKPAT1 .S X=DPTX
"RTN","DPTLK",56,0)
 .D DQ^DICQ
"RTN","DPTLK",57,0)
 ; -- Check for space bar, return
"RTN","DPTLK",58,0)
 I DPTX=" " D  G CHKDFN
"RTN","DPTLK",59,0)
 .S Y=$S('($D(DUZ)#2):-1,$D(^DISV(DUZ,"^DPT(")):^("^DPT("),1:-1)
"RTN","DPTLK",60,0)
 .D SETDPT^DPTLK1:Y>0
"RTN","DPTLK",61,0)
 .S DPTDFN=$S($D(DPTS(Y)):Y,1:-1)
"RTN","DPTLK",62,0)
 ; -- Check for DFN look up
"RTN","DPTLK",63,0)
 I $E(DPTX)="`" D  G CHKDFN
"RTN","DPTLK",64,0)
 .S Y=$S($D(^DPT(+$P(DPTX,"`",2),0)):+$P(DPTX,"`",2),1:-1)
"RTN","DPTLK",65,0)
 .D SETDPT^DPTLK1:Y>0
"RTN","DPTLK",66,0)
 .S DPTDFN=$S($D(DPTS(Y)):Y,1:-1)
"RTN","DPTLK",67,0)
 ; -- Puts input in correct format
"RTN","DPTLK",68,0)
 G CHKDFN:DPTX=""
"RTN","DPTLK",69,0)
 ; -- Force new entry
"RTN","DPTLK",70,0)
 I $E(DPTX)="""",$E(DPTX,$L(DPTX))="""" G NOPAT
"RTN","DPTLK",71,0)
 ; -- Check for EDIPI lookup
"RTN","DPTLK",72,0)
 I DPTX?10N,DIC(0)["M" D  G:$G(DPTDFN)>0 CHKDFN
"RTN","DPTLK",73,0)
 .N DGEDIPI
"RTN","DPTLK",74,0)
 .S DGEDIPI=0 F  S DGEDIPI=$O(^DGCN(391.91,"AISS",DPTX,"USDOD","NI",+$$IEN^XUAF4("200DOD"),DGEDIPI)) Q:'DGEDIPI  I $P($G(^DGCN(391.91,DGEDIPI,2)),"^",3)'="H" Q
"RTN","DPTLK",75,0)
 .Q:DGEDIPI<1
"RTN","DPTLK",76,0)
 .S Y=$P($G(^DGCN(391.91,DGEDIPI,0)),"^")
"RTN","DPTLK",77,0)
 .D SETDPT^DPTLK1:Y>0
"RTN","DPTLK",78,0)
 .S DPTDFN=$S($D(DPTS(Y)):Y,1:-1)
"RTN","DPTLK",79,0)
 ; -- Check for index lookups
"RTN","DPTLK",80,0)
 I '$G(DGVIC40)!(DPTX?9N) D ^DPTLK1  D  G QK:$D(DTOUT)!($D(DUOUT)&(DIC(0)'["A")),ASKPAT:$D(DUOUT),CHKPAT:DPTDFN<0,CHKDFN:DPTDFN>0 I DIC(0)["N",$D(^DPT(DPTX,0)) S Y=X D SETDPT^DPTLK1 S DPTDFN=$S($D(DPTS(Y)):Y,1:-1) G CHKDFN
"RTN","DPTLK",81,0)
 . I DPTDFN<1,$P($G(XQY0),"^",2)="Register a Patient",$T(PATIENT^MPIFXMLP)'="" D
"RTN","DPTLK",82,0)
 .. S DPTDFN=$$SEARCH^DPTLK7(DPTX,$G(DPTXX))
"RTN","DPTLK",83,0)
 .. I DPTDFN<1 K DO,D,DIC("W"),DPTCNT,DPTS,DPTSEL,DPTSZ S DPTDFN=-1,Y=-1,(DPTX,DPTXX)=""
"RTN","DPTLK",84,0)
 .. S DPTSZ=1000 I $D(^DD("OS"))#2 S DPTSZ=$S(+$P(^DD("OS",^("OS"),0),U,2):$P(^(0),U,2),1:DPTSZ)
"RTN","DPTLK",85,0)
 .. S:DPTDFN>0 DPTS(DPTDFN)=$P(^DPT(DPTDFN,0),"^")_"^"_$P(^DPT(DPTDFN,0),"^")
"RTN","DPTLK",86,0)
MAG ; -- No patient found, check for mag stripe input, create stub
"RTN","DPTLK",87,0)
 I 'MAG,'BARCODE,'DGCAC G NOPAT
"RTN","DPTLK",88,0)
 ; -- Check for ADT option(s) only
"RTN","DPTLK",89,0)
 N DGOPT
"RTN","DPTLK",90,0)
 S DGOPT=$P($G(XQY0),"^",2)
"RTN","DPTLK",91,0)
 I DGOPT'="Load/Edit Patient Data",DGOPT'="Register a Patient" D  G EN2
"RTN","DPTLK",92,0)
 .W !,"    ...Patient not in database, use ADT options to load patient" D Q1
"RTN","DPTLK",93,0)
 ; -- Prompt for creation of stub
"RTN","DPTLK",94,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Patient not found...Create stub entry: "
"RTN","DPTLK",95,0)
 S GCHK=$D(^TMP("DGVIC"))
"RTN","DPTLK",96,0)
 D ^DIR
"RTN","DPTLK",97,0)
 K DIR
"RTN","DPTLK",98,0)
 I 'Y D Q1 G EN2
"RTN","DPTLK",99,0)
 ; -- Parse IATA fields
"RTN","DPTLK",100,0)
 D @$S(DGVIC40:"VIC40(.DGFLDS,DGVIC40,DGCAC)",1:"FIELDS(IATA)")
"RTN","DPTLK",101,0)
 I '$D(@DGFLDS) W !,"Could not add patient to patient file" D Q1 G EN2
"RTN","DPTLK",102,0)
 ; -- Check for Duplicates, no checking if VIC 4.0 card or CAC card
"RTN","DPTLK",103,0)
 D:'$G(DGVIC40) EP2^DPTLK3
"RTN","DPTLK",104,0)
 ; -- No check done on VIC 4.0 or CAC card, so skip DPTDFN value
"RTN","DPTLK",105,0)
 ;    check, file record
"RTN","DPTLK",106,0)
 I 'DGVIC40,DPTDFN<0 D Q1 G EN2
"RTN","DPTLK",107,0)
 ; -- Creates Stub entry in patient file
"RTN","DPTLK",108,0)
 S Y=$$FILE^DPTLK4(DGFLDS,$G(DGVIC40))
"RTN","DPTLK",109,0)
 I $P(Y,"^",3)'=1 W !,"Could not add patient to patient file" D QK1 Q
"RTN","DPTLK",110,0)
 D QK1
"RTN","DPTLK",111,0)
 Q
"RTN","DPTLK",112,0)
 ;
"RTN","DPTLK",113,0)
NOPAT ; -- No patient found, ask to add new
"RTN","DPTLK",114,0)
 I DIC(0)["L" D ^DPTLK2 S Y=DPTDFN G ASKPAT:DIC(0)["A"&(Y<0)&('$G(DTOUT)),QK1
"RTN","DPTLK",115,0)
 ;
"RTN","DPTLK",116,0)
CHKDFN ; -- 
"RTN","DPTLK",117,0)
 S:'$D(DPTDFN) DPTDFN=-1 I DPTDFN'>0!('$D(DPTS(+DPTDFN))) W:DIC(0)["Q" *7," ??" G ASKPAT:DIC(0)["A",QK
"RTN","DPTLK",118,0)
 I DIC(0)["E" D  W $S('$D(DPTSEL)&('$D(DIVP)):$P(DPTS(DPTDFN),U,2)_"  "_$P(DPTS(DPTDFN),U)_"  ",$D(^DPT(DPTDFN,0)):"  "_$P(^(0),U)_"  ",1:"") S Y=DPTDFN X:$D(^DPT(DPTDFN,0)) "N DDS X DIC(""W"")"
"RTN","DPTLK",119,0)
 .I $D(DDS) D CLRMSG^DDS S DX=0,DY=DDSHBX+1 X DDXY
"RTN","DPTLK",120,0)
 ;
"RTN","DPTLK",121,0)
 ; check for other patients in "BS5" xref on Patient file
"RTN","DPTLK",122,0)
 ;I '$G(DICR),DPTDFN>0,DIC(0)["E",$$BS5^DPTLK5(+DPTDFN) D  G ASKPAT:DIC(0)["A"&(%'=1),QK:DPTDFN<0
"RTN","DPTLK",123,0)
 I DPTDFN>0,DIC(0)["E",$$BS5^DPTLK5(+DPTDFN),'$D(DGSEARCH) D  G ASKPAT:DIC(0)["A"&(%'=1),QK:DPTDFN<0  ;*TEST*
"RTN","DPTLK",124,0)
 .N DPTZERO,DPTLSNME,DPTSSN S DPTZERO=$G(^DPT(+DPTDFN,0)),DPTLSNME=$P($P(DPTZERO,U),","),DPTSSN=$E($P(DPTZERO,U,9),6,9)
"RTN","DPTLK",125,0)
 .W $C(7),!!,"There is more than one patient whose last name is '",DPTLSNME,"' and"
"RTN","DPTLK",126,0)
 .W !,"whose social security number ends with '",DPTSSN,"'."
"RTN","DPTLK",127,0)
 .W !,"Are you sure you wish to continue (Y/N)" S %=0 D YN^DICN
"RTN","DPTLK",128,0)
 .I %'=1 S DPTDFN=-1
"RTN","DPTLK",129,0)
 ;
"RTN","DPTLK",130,0)
 ;I '$G(DICR),DPTDFN>0 S Y=DPTDFN D ^DGSEC S DPTDFN=Y G ASKPAT:DIC(0)["A"&(DPTDFN<0),QK:DPTDFN<0
"RTN","DPTLK",131,0)
 I DPTDFN>0,DIC(0)["E" S Y=DPTDFN D ^DGSEC S DPTDFN=Y G ASKPAT:DIC(0)["A"&(DPTDFN<0),QK:DPTDFN<0 S DPTBTDT=1
"RTN","DPTLK",132,0)
 S DPTX=DPTX_$P(DPTS(DPTDFN),U,2),DPTDFN=DPTDFN_U_$P(^DPT(DPTDFN,0),U)
"RTN","DPTLK",133,0)
 ;
"RTN","DPTLK",134,0)
Q ; -- 
"RTN","DPTLK",135,0)
 S Y=$S('$D(DPTDFN):-1,'$D(DPTS(+DPTDFN)):-1,1:DPTDFN),X=$S($D(DPTX)&(+Y>0):DPTX,$D(DPTSAVX):DPTSAVX,$D(DPTX):DPTX,1:"")
"RTN","DPTLK",136,0)
 I Y>0 S:DIC(0)'["F" ^DISV($S($D(DUZ)#2:DUZ,1:0),"^DPT(")=+Y S:DIC(0)["Z" Y(0)=^DPT(+Y,0),Y(0,0)=$P(^(0),U,1)
"RTN","DPTLK",137,0)
 ;DG*600
"RTN","DPTLK",138,0)
 I DIC(0)["E",$$TESTPAT^VADPT(+Y) W *7,!,"WARNING : You may have selected a test patient."
"RTN","DPTLK",139,0)
 I DIC(0)["E",$$BADADR^DGUTL3(+Y) W *7,!,"WARNING : ** This patient has been flagged with a Bad Address Indicator."
"RTN","DPTLK",140,0)
 I DIC(0)["E",$$VAADV^DPTLK3(+Y) W *7,!,"** Patient is VA ADVANTAGE."
"RTN","DPTLK",141,0)
 ;DG*485
"RTN","DPTLK",142,0)
 I $D(^DPT("AXFFP",1,+Y)) D FFP^DPTLK5
"RTN","DPTLK",143,0)
 ;Display enrollment information
"RTN","DPTLK",144,0)
 I Y>0,DIC(0)["E" D ENR
"RTN","DPTLK",145,0)
 ;
"RTN","DPTLK",146,0)
 ;Call Combat Vet check
"RTN","DPTLK",147,0)
 I Y>0,DIC(0)["E" D CV
"RTN","DPTLK",148,0)
 ;
"RTN","DPTLK",149,0)
 ; check whether to display Means Test Required message
"RTN","DPTLK",150,0)
 D
"RTN","DPTLK",151,0)
 .N DPTDIV
"RTN","DPTLK",152,0)
 .I '$G(DUZ(2)) Q
"RTN","DPTLK",153,0)
 .I Y>0,DIC(0)["E" S DPTDIV=$$DMT^DPTLK5(+Y,DUZ(2)) I DPTDIV D
"RTN","DPTLK",154,0)
 ..W $C(7),!!,"MEANS TEST REQUIRED"
"RTN","DPTLK",155,0)
 ..W !,?3,$P($G(^DG(40.8,DPTDIV,"MT")),U,2)
"RTN","DPTLK",156,0)
 ..H 2
"RTN","DPTLK",157,0)
 ;
"RTN","DPTLK",158,0)
Q1 ; -- Clean up variables
"RTN","DPTLK",159,0)
 K D,DIC("W"),DO,DPTCNT,DPTDFN,DPTIFNS,DPTIX,DPTS
"RTN","DPTLK",160,0)
 K:'$G(DICR) DPTBTDT  ; IF DICR LEAVE FOR DGSEC TO HANDLE
"RTN","DPTLK",161,0)
 K DPTSAVX,DPTSEL,DPTSZ,DPTX
"RTN","DPTLK",162,0)
 ;
"RTN","DPTLK",163,0)
 K:$D(IATA) IATA
"RTN","DPTLK",164,0)
 K:$D(DGFLDS) @DGFLDS,DGFLDS
"RTN","DPTLK",165,0)
 Q
"RTN","DPTLK",166,0)
 ;
"RTN","DPTLK",167,0)
QK K:'$D(DPTNOFZK) DPTNOFZY G Q
"RTN","DPTLK",168,0)
 ;
"RTN","DPTLK",169,0)
QK1 K:'$D(DPTNOFZK) DPTNOFZY G Q1
"RTN","DPTLK",170,0)
 ;
"RTN","DPTLK",171,0)
IX ; --
"RTN","DPTLK",172,0)
 I $D(D),$D(^DD(2,0,"IX",D)),($E(D)'="A") S DPTIX=D
"RTN","DPTLK",173,0)
 G DPTLK
"RTN","DPTLK",174,0)
 ;
"RTN","DPTLK",175,0)
IATA(X) ; --
"RTN","DPTLK",176,0)
 ;This function pulls off ssn from the IATA track (old card)
"RTN","DPTLK",177,0)
 ; - If new card, then use card number to look-up DFN, returned as `DFN
"RTN","DPTLK",178,0)
 ;
"RTN","DPTLK",179,0)
 ;Input:  X   -  what was read in
"RTN","DPTLK",180,0)
 ;Output: SSN -  social security number OR `DFN if new card
"RTN","DPTLK",181,0)
 ;          Q -  quit
"RTN","DPTLK",182,0)
 ;
"RTN","DPTLK",183,0)
 ; Track            Start Sent     End Sent      Field Separator
"RTN","DPTLK",184,0)
 ; -----            ----------     --------      ---------------
"RTN","DPTLK",185,0)
 ;  IATA (alphanum)      %             ?          {   (Note: VA used ^)
"RTN","DPTLK",186,0)
 ;  ABA (numeric)        ;             ?          =    
"RTN","DPTLK",187,0)
 ;
"RTN","DPTLK",188,0)
 ;N IATA
"RTN","DPTLK",189,0)
 S (IATA)=""
"RTN","DPTLK",190,0)
 I $E(X)'="%" Q X ; no start sentinel
"RTN","DPTLK",191,0)
 I X'["?" Q "Q"
"RTN","DPTLK",192,0)
 ; -- Extract data from track
"RTN","DPTLK",193,0)
 S IATA=$$TRACK(X,"%","?")
"RTN","DPTLK",194,0)
 ; -- checks for no data
"RTN","DPTLK",195,0)
 I IATA="" Q "Q"
"RTN","DPTLK",196,0)
 ; -- checks for new card, look-up DFN
"RTN","DPTLK",197,0)
 I $E(X,1,29)?1"%"9NP1"^"17UNP1"?" S IATA=$$CARD(+$P($P(X,"%",2),"^"))
"RTN","DPTLK",198,0)
 ; -- Returns SSN or `DFN value
"RTN","DPTLK",199,0)
 I IATA'="" Q $P(IATA,"^")
"RTN","DPTLK",200,0)
 Q "Q"
"RTN","DPTLK",201,0)
 ;
"RTN","DPTLK",202,0)
TRACK(X,START,END) ; find track where start/end are sentinels
"RTN","DPTLK",203,0)
 ;
"RTN","DPTLK",204,0)
 Q $P($P($G(X),START,2),END,1)
"RTN","DPTLK",205,0)
 ;
"RTN","DPTLK",206,0)
FIELDS(IATA) ; -- Sets fields
"RTN","DPTLK",207,0)
 Q:'$D(IATA)
"RTN","DPTLK",208,0)
 N CNT,FIELD
"RTN","DPTLK",209,0)
 S DGFLDS="^TMP(""DGVIC"","_$J_")",CNT=1
"RTN","DPTLK",210,0)
 K @DGFLDS
"RTN","DPTLK",211,0)
 F  S FIELD=$P($G(IATA),"^",CNT)  Q:FIELD=""  D
"RTN","DPTLK",212,0)
 .S @DGFLDS@(CNT)=FIELD
"RTN","DPTLK",213,0)
 .S CNT=CNT+1
"RTN","DPTLK",214,0)
 ; -- Define fields for duplicate checker
"RTN","DPTLK",215,0)
 S DPTX=$G(@DGFLDS@(2)) ;NAME
"RTN","DPTLK",216,0)
 S DPTIDS(.03)=$G(@DGFLDS@(3)) ;DOB
"RTN","DPTLK",217,0)
 S DPTIDS(.09)=$G(@DGFLDS@(1)) ;SSN
"RTN","DPTLK",218,0)
 Q
"RTN","DPTLK",219,0)
BARCODE(X) ;
"RTN","DPTLK",220,0)
 ;This function pulls off card number from the barcode scan
"RTN","DPTLK",221,0)
 ;  looks up the patient (locally)
"RTN","DPTLK",222,0)
 ;  if not locally found, queries mpi 
"RTN","DPTLK",223,0)
 ;
"RTN","DPTLK",224,0)
 ;Input:  X   -  what was read in
"RTN","DPTLK",225,0)
 ;Output: DFN -  `DFN
"RTN","DPTLK",226,0)
 ;          Q -  quit
"RTN","DPTLK",227,0)
 ;
"RTN","DPTLK",228,0)
 ; Input       Start Data   VIC ver     DoD EDI_PIN     VA/VIC II   
"RTN","DPTLK",229,0)
 ; --------    ----------   -------     -----------     ----------
"RTN","DPTLK",230,0)
 ; alphanum        %           N         alphanum 7     alphanum 6
"RTN","DPTLK",231,0)
 ;
"RTN","DPTLK",232,0)
 N CARD
"RTN","DPTLK",233,0)
 S CARD=$$B32TO10($E(X,10,15)) I 'CARD Q "Q"
"RTN","DPTLK",234,0)
 Q $$CARD(CARD)
"RTN","DPTLK",235,0)
 ;
"RTN","DPTLK",236,0)
CACCARD(X) ;
"RTN","DPTLK",237,0)
 ;This function pulls off EDIPI number from the CAC barcode scan
"RTN","DPTLK",238,0)
 ;  looks up the patient (locally)
"RTN","DPTLK",239,0)
 ;  if not locally found, queries mpi 
"RTN","DPTLK",240,0)
 ;
"RTN","DPTLK",241,0)
 ;Input:  X   -  what was read in
"RTN","DPTLK",242,0)
 ;Output: DFN -  `DFN
"RTN","DPTLK",243,0)
 ;          Q -  quit
"RTN","DPTLK",244,0)
 ;
"RTN","DPTLK",245,0)
 ; VC     PDI     PT       DoD EDI   PC     BC      CI
"RTN","DPTLK",246,0)
 ; --     ---     --       -------   --     ---     ---
"RTN","DPTLK",247,0)
 ; "1"    6UN     1U         7UN     1U     1UN     1UN
"RTN","DPTLK",248,0)
 ;
"RTN","DPTLK",249,0)
 N EDIPI
"RTN","DPTLK",250,0)
 S EDIPI=$$B32TO10($E(X,9,15)) I 'EDIPI Q "Q"
"RTN","DPTLK",251,0)
 Q $$EDIPI(EDIPI)
"RTN","DPTLK",252,0)
 ;
"RTN","DPTLK",253,0)
EDIPI(EDIPI) ; - returns `DFN from EDIPI number
"RTN","DPTLK",254,0)
 N DFN,VICFAC
"RTN","DPTLK",255,0)
 S VICFAC=+$$LKUP^XUAF4("200DOD") ; national DOD station number
"RTN","DPTLK",256,0)
 S DFN=+$G(^DGCN(391.91,+$O(^DGCN(391.91,"ASID",EDIPI,VICFAC,0)),0))
"RTN","DPTLK",257,0)
 S DGVIC40=EDIPI ; saving EDIPI number here so I don't have to look later
"RTN","DPTLK",258,0)
 I DFN Q "`"_DFN
"RTN","DPTLK",259,0)
 ; - not found locally, need to make sure we don't find anyone DGVIC40
"RTN","DPTLK",260,0)
 Q "Q"
"RTN","DPTLK",261,0)
CARD(CARD) ; - returns `DFN from card number
"RTN","DPTLK",262,0)
 N DFN,VICFAC
"RTN","DPTLK",263,0)
 S VICFAC=+$$LKUP^XUAF4("742V1") ; national vic facility number
"RTN","DPTLK",264,0)
 S DFN=+$G(^DGCN(391.91,+$O(^DGCN(391.91,"ASID",CARD,VICFAC,0)),0))
"RTN","DPTLK",265,0)
 S DGVIC40=CARD ; saving card number here so I don't have to look later
"RTN","DPTLK",266,0)
 I DFN Q "`"_DFN
"RTN","DPTLK",267,0)
 ; - not found locally, need to make sure we don't find anyone DGVIC40
"RTN","DPTLK",268,0)
 Q "Q"
"RTN","DPTLK",269,0)
VIC40(DGFLDS,DGVIC40,DGCAC) ; - returns the data used to create the
"RTN","DPTLK",270,0)
 ;  patient file entry from mpi
"RTN","DPTLK",271,0)
 N X,DGMPI
"RTN","DPTLK",272,0)
 S DGFLDS="^TMP(""DGVIC"","_$J_")"
"RTN","DPTLK",273,0)
 K @DGFLDS
"RTN","DPTLK",274,0)
 I $T(CARDPV^MPIFXMLS)'="" D CARDPV^MPIFXMLS(.DGMPI,DGVIC40,DGCAC)
"RTN","DPTLK",275,0)
 S X=0 F  S X=$O(DGMPI(X)) Q:'X  S @DGFLDS@(X)=DGMPI(X)
"RTN","DPTLK",276,0)
 Q
"RTN","DPTLK",277,0)
ENR ;Display Enrollment information after patient selection
"RTN","DPTLK",278,0)
 N DGENCAT,DGENDFN,DGENR,DGEGTIEN,DGEGT
"RTN","DPTLK",279,0)
 I '$$GET^DGENA($$FINDCUR^DGENA(+DPTDFN),.DGENR) Q
"RTN","DPTLK",280,0)
 S DGENCAT=$$CATEGORY^DGENA4(+DPTDFN)
"RTN","DPTLK",281,0)
 S DGENCAT=$$EXTERNAL^DILFD(27.15,.02,"",DGENCAT)
"RTN","DPTLK",282,0)
 W !?1,"Enrollment Priority: ",$S($G(DGENR("PRIORITY")):$$EXT^DGENU("PRIORITY",DGENR("PRIORITY")),1:""),$S($G(DGENR("SUBGRP"))="":"",1:$$EXT^DGENU("SUBGRP",$G(DGENR("SUBGRP"))))
"RTN","DPTLK",283,0)
 W ?33,"Category: ",DGENCAT
"RTN","DPTLK",284,0)
 W ?57,"End Date: ",$S($G(DGENR("END")):$$FMTE^XLFDT(DGENR("END"),"5DZ"),1:""),!
"RTN","DPTLK",285,0)
 ;If patient is NOT ELIGIBLE, display Enrollment Status (Ineligible Project Phase I)
"RTN","DPTLK",286,0)
 I $G(DGENR("STATUS"))=10!($G(DGENR("STATUS"))=19)!($G(DGENR("STATUS"))=20) D
"RTN","DPTLK",287,0)
 . W ?1,"Enrollment Status: ",$S($G(DGENR("STATUS")):$$EXT^DGENU("STATUS",DGENR("STATUS")),1:"") ;H 5
"RTN","DPTLK",288,0)
 ;check for Combat Veteran Eligibility, if elig do not display EGT info
"RTN","DPTLK",289,0)
 I $$CVEDT^DGCV(+DPTDFN) Q
"RTN","DPTLK",290,0)
 ;Get Enrollment Group Threshold Priority and Subgroup
"RTN","DPTLK",291,0)
 S DGEGTIEN=$$FINDCUR^DGENEGT
"RTN","DPTLK",292,0)
 S DGEGT=$$GET^DGENEGT(DGEGTIEN,.DGEGT)
"RTN","DPTLK",293,0)
 Q:$G(DGENR("PRIORITY"))=""!($G(DGEGT("PRIORITY"))="")
"RTN","DPTLK",294,0)
 ;Compare Patient's Enrollment Priority to Enrollment Group Threshold
"RTN","DPTLK",295,0)
 I '$$ABOVE^DGENEGT1(+DPTDFN,DGENR("PRIORITY"),$G(DGENR("SUBGRP")),DGEGT("PRIORITY"),DGEGT("SUBGRP")) D
"RTN","DPTLK",296,0)
 .N X,IORVOFF,IORVON
"RTN","DPTLK",297,0)
 .S X="IORVOFF;IORVON"
"RTN","DPTLK",298,0)
 .D ENDR^%ZISS
"RTN","DPTLK",299,0)
 .W !?32 W:$D(IORVON) IORVON  W "*** WARNING ***" W:$D(IORVOFF) IORVOFF
"RTN","DPTLK",300,0)
 .I DGENR("END")'="" W !?14 W:$D(IORVON) IORVON W "*** PATIENT ENROLLMENT END",$S(DT>+DGENR("END"):"ED",1:"S")," EFFECTIVE ",$$FMTE^XLFDT(DGENR("END"),"5DZ")," ***" W:$D(IORVOFF) IORVOFF Q
"RTN","DPTLK",301,0)
 .W !?5 W:$D(IORVON) IORVON W "*** PATIENT ENROLLMENT ENDING.  ENROLLMENT END DATE IS NOT KNOWN. ***" W:$D(IORVOFF) IORVOFF
"RTN","DPTLK",302,0)
 Q
"RTN","DPTLK",303,0)
CV ;check for Combat Vet status
"RTN","DPTLK",304,0)
 N DGCV
"RTN","DPTLK",305,0)
 S DGCV=$$CVEDT^DGCV(+DPTDFN)
"RTN","DPTLK",306,0)
 I $P(DGCV,U)=1 D  Q
"RTN","DPTLK",307,0)
 . I '$$GET^DGENA($$FINDCUR^DGENA(+DPTDFN),.DGENR) W !
"RTN","DPTLK",308,0)
 . W ?3,"Combat Vet Status: "_$S($P(DGCV,U,3)=1:"ELIGIBLE",1:"EXPIRED"),?57,"End Date: "_$$FMTE^XLFDT($P(DGCV,U,2),"5DZ")
"RTN","DPTLK",309,0)
 Q
"RTN","DPTLK",310,0)
B32TO10(X) ; - convert from base 32 to base 10
"RTN","DPTLK",311,0)
 N I,Y,S S Y=0,S="0123456789ABCDEFGHIJKLMNOPQRSTUV"
"RTN","DPTLK",312,0)
 I X[" " S X=$E(X,1,$F(X," ")-2)
"RTN","DPTLK",313,0)
 F I=1:1:$L(X) S Y=Y*32+($F(S,$E(X,I))-2)
"RTN","DPTLK",314,0)
 Q Y
"RTN","DPTLK",315,0)
RPCVIC(RETURN,DPTX) ; - patient lookup from VIC card, rpc/api
"RTN","DPTLK",316,0)
 ; non-interactive
"RTN","DPTLK",317,0)
 ; this function will return a patient's DFN based on input.  input must
"RTN","DPTLK",318,0)
 ; be in the form of the FULL input from a VIC card (magstripe or bar
"RTN","DPTLK",319,0)
 ; code), the patient must be locally known (FULL doesn't but can contain
"RTN","DPTLK",320,0)
 ; additional card tracks)
"RTN","DPTLK",321,0)
 ; RETURN input should be passed by reference
"RTN","DPTLK",322,0)
 ;
"RTN","DPTLK",323,0)
 ;  Input examples:
"RTN","DPTLK",324,0)
 ;     Barcode possibilities:
"RTN","DPTLK",325,0)
 ;            NNNNNNNNN (old VIC card, full 9 digit ssn)
"RTN","DPTLK",326,0)
 ;            CCCCCCCCCCCCCCCCCC (new VIC 4.0 card, 18 characters with
"RTN","DPTLK",327,0)
 ;                                10-15 being compressed card number)
"RTN","DPTLK",328,0)
 ;     Magstripe possibilities:
"RTN","DPTLK",329,0)
 ;            Must always start with %
"RTN","DPTLK",330,0)
 ;            Must contain ?
"RTN","DPTLK",331,0)
 ;            $E(X,2,10) = SSN (old card)
"RTN","DPTLK",332,0)
 ;            %NNNNNNNNN^CCCCCCCCCCCCCCCCC? (first 29 characters) where
"RTN","DPTLK",333,0)
 ;                                          N = card number (new card)
"RTN","DPTLK",334,0)
 ;
"RTN","DPTLK",335,0)
 ;  Return (pass by reference):  If patient known locally = DFN
"RTN","DPTLK",336,0)
 ;                                   If not known locally = -1
"RTN","DPTLK",337,0)
 ;
"RTN","DPTLK",338,0)
 N MAG,BARCODE
"RTN","DPTLK",339,0)
 S (RETURN,MAG,BARCODE)=0
"RTN","DPTLK",340,0)
 I '$D(DPTX) Q -1
"RTN","DPTLK",341,0)
 S DPTX=$$UP^XLFSTR(DPTX)
"RTN","DPTLK",342,0)
 I DPTX["?" S DPTX=$E(DPTX,1,$F(DPTX,"?")-1)
"RTN","DPTLK",343,0)
 I DPTX?9N S RETURN=$O(^DPT("SSN",DPTX,0))
"RTN","DPTLK",344,0)
 I $E(DPTX)="%"!($E(DPTX)=";"),DPTX["?",'RETURN S MAG=1,DPTX=$$IATA(DPTX)
"RTN","DPTLK",345,0)
 I 'MAG,DPTX?1"%"1N13UNP.3UN,'RETURN S BARCODE=1,DPTX=$$BARCODE(DPTX)
"RTN","DPTLK",346,0)
 I 'MAG,'BARCODE,DPTX?1N6UN1U7UN1U2UN S DPTX=$$CACCARD(DPTX)
"RTN","DPTLK",347,0)
 I 'RETURN,$E(DPTX,2,999) S RETURN=$S($E(DPTX)="`":$E(DPTX,2,999),1:$O(^DPT("SSN",DPTX,0)))
"RTN","DPTLK",348,0)
 S RETURN=$S(RETURN:RETURN,1:-1)
"RTN","DPTLK",349,0)
 Q
"RTN","DPTLK1")
0^7^B48432581^B42806553
"RTN","DPTLK1",1,0)
DPTLK1 ;ALB/RMO,EG - MAS Patient Look-up Check Cross-References ; 08/15/2006
"RTN","DPTLK1",2,0)
 ;;5.3;Registration;**32,50,197,249,317,391,244,532,574,620,641,680,538,657,915**;Aug 13, 1993;Build 6
"RTN","DPTLK1",3,0)
FIND ;Cross reference patient lookup
"RTN","DPTLK1",4,0)
 ;Optional input: DPTNOFZY='1' to suppress fuzzy lookups implemented
"RTN","DPTLK1",5,0)
 ;                by patch DG*5.3*244
"RTN","DPTLK1",6,0)
 ;
"RTN","DPTLK1",7,0)
 N DDCOMA,DPTXOLD,DPTOUT,DPTOVAL,DGLASTLK
"RTN","DPTLK1",8,0)
 S DGLASTLK=1
"RTN","DPTLK1",9,0)
 S (DPTXOLD,DPTX)=$$UCASE(DPTX)
"RTN","DPTLK1",10,0)
 I DPTX?1A.E1","1.A.E S DPTXOLD=DPTX,DDCOMA="I $E($P($G(DPTVAL),"","",2),1,"_$L($P(DPTX,",",2))_")="""_$TR($P(DPTX,",",2),"""")_"""",DPTX=$P(DPTX,",")
"RTN","DPTLK1",11,0)
 K DPTREFS S DPTREFS=$S(DIC(0)'["M":"B,NOP",DPTX?1A1N.N:$S($L(DPTX)<6:"BS5,CN,RM",1:"CN,RM"),DPTX?4N!(DPTX?4N1A):"BS,SSN,CN,RM",DPTX?9N.E:"SSN,CN,RM",1:"")
"RTN","DPTLK1",12,0)
 S:DPTREFS="" DPTREFS=$S(DPTX?1N.N:$S($L(DPTX)<5:"CN,RM,BS,SSN",1:"CN,RM,SSN"),DPTX?1N.E:"CN,RM",1:"B,NOP,CN,RM") S:$D(DPTIX) DPTREFS=DPTIX_","_DPTREFS
"RTN","DPTLK1",13,0)
 ;Use cross reference passed to LIST^DPTLK1 by Person Service Lookup (DPTPSREF) if defined.
"RTN","DPTLK1",14,0)
 I $G(DPTPSREF)'="" S DPTREFS=DPTPSREF
"RTN","DPTLK1",15,0)
 S DPTBEG=1,(DPTDFN,DPTNUM,DPTOUT)=0
"RTN","DPTLK1",16,0)
 F DPTLP=1:1 S DPTREF=$P(DPTREFS,",",DPTLP) Q:DPTREF=""!(DPTDFN)  D  Q:DPTDFN!DPTOUT
"RTN","DPTLK1",17,0)
 .S DPTVAL=DPTX
"RTN","DPTLK1",18,0)
 .I DPTREF="NOP",'$G(DPTNOFZY) S DPTVAL=$$FORMAT^XLFNAME7(DPTVAL,2,30,1,0,,1) Q:'$L(DPTVAL)
"RTN","DPTLK1",19,0)
 .D LOOK(DPTVAL)
"RTN","DPTLK1",20,0)
 .I DPTREF="B",'$G(DPTNOFZY) S DPTVAL=$$FORMAT^XLFNAME7(DPTX,2,30,1,0,,1) D:DPTVAL'=DPTX LOOK(DPTVAL)
"RTN","DPTLK1",21,0)
 .Q
"RTN","DPTLK1",22,0)
SET I 'DPTDFN S:DPTCNT=1&($D(DPTIFNS(DPTCNT))) DPTDFN=+DPTIFNS(DPTCNT) S DPT("NOPRT^")="" D PRTDPT:'DPTDFN&(DPTCNT>DPTNUM)&(DIC(0)["E") K DPT("NOPRT^") I 'DPTDFN,$D(DPTSEL),DPTSEL="" S DPTX="",DPTDFN=-1
"RTN","DPTLK1",23,0)
 I DPTDFN'>0,$L($G(DPTXOLD)) I DPTX=$P(DPTXOLD,",") S DPTX=DPTXOLD
"RTN","DPTLK1",24,0)
 I DPTDFN>0,$D(DPTXOLD) S DPTX=DPTXOLD
"RTN","DPTLK1",25,0)
 ; one last stab at lookup - DG*641
"RTN","DPTLK1",26,0)
 I '$G(DPTCNT),DPTX[",",DGLASTLK=1,'$G(DPTNOFZY) D
"RTN","DPTLK1",27,0)
 .S DPTX=$$FORMAT^XLFNAME7(DPTX,2,30,1)
"RTN","DPTLK1",28,0)
 .S DDCOMA="I $E($P($G(DPTVAL),"","",2),1,"_$L($P(DPTX,",",2))_")="""_$TR($P(DPTX,",",2),"""")_""""
"RTN","DPTLK1",29,0)
 .S DPTX=$P(DPTX,",")
"RTN","DPTLK1",30,0)
 .S DGLASTLK=0
"RTN","DPTLK1",31,0)
 .S DPTREFS="B,NOP,CN,RM"
"RTN","DPTLK1",32,0)
 .;Person Service Lookup does not allow lookup by RM cross reference
"RTN","DPTLK1",33,0)
 .;PSL release 4 does not allow lookup by ward (CN) cross reference
"RTN","DPTLK1",34,0)
 .I $G(DPTPSREF)'="" S DPTREFS="B,NOP"
"RTN","DPTLK1",35,0)
 .F DPTLP=1:1 S DPTREF=$P(DPTREFS,",",DPTLP) Q:DPTREF=""!(DPTDFN)  D  Q:DPTDFN!DPTOUT
"RTN","DPTLK1",36,0)
 ..S DPTVAL=DPTX
"RTN","DPTLK1",37,0)
 ..D LOOK(DPTVAL)
"RTN","DPTLK1",38,0)
 ;**915 enterprise search
"RTN","DPTLK1",39,0)
YN I DPTCNT=1,$P($G(XQY0),"^",2)="Register a Patient",DPTDFN,$T(PATIENT^MPIFXMLP)'="" D  I 'DPTDFN S DPTX="",DPTDFN=-1
"RTN","DPTLK1",40,0)
 . N %,%Y
"RTN","DPTLK1",41,0)
 . W !,"Found: ",$P(^DPT(DPTDFN,0),"^")," ",$$FMTE^XLFDT($P(^DPT(DPTDFN,0),"^",3),"2D")," ",$P(^DPT(DPTDFN,0),"^",9)," ",$$GET1^DIQ(2,DPTDFN_",",.301)," ",$$GET1^DIQ(2,DPTDFN_",",391)
"RTN","DPTLK1",42,0)
 . W !," Ok" D YN^DICN
"RTN","DPTLK1",43,0)
 . I %=2 S DPTDFN=$$SEARCH^DPTLK7(DPTX,DPTXX) S:DPTDFN<1 DPTCNT=0 D:DPTDFN>1  Q
"RTN","DPTLK1",44,0)
 .. S DPTS(DPTDFN)=$P(^DPT(DPTDFN,0),"^")_"^"_$P(^DPT(DPTDFN,0),"^")
"RTN","DPTLK1",45,0)
 . I %=1 Q
"RTN","DPTLK1",46,0)
 . S DPTDFN=0 G Q
"RTN","DPTLK1",47,0)
 ;**915 end
"RTN","DPTLK1",48,0)
 I DGLASTLK=0,$G(DPTCNT) S DGLASTLK=1 G SET
"RTN","DPTLK1",49,0)
 I DGLASTLK=0,'$G(DPTCNT),$L($G(DPTXOLD)) S DPTX=DPTXOLD
"RTN","DPTLK1",50,0)
 ; end of DG*641 change
"RTN","DPTLK1",51,0)
 ;
"RTN","DPTLK1",52,0)
Q K DPTBEG,DPTIFN,DPTIFNS,DPTLP,DPTLP1,DPTNUM,DPTREF,DPTREFS,DPTVAL
"RTN","DPTLK1",53,0)
 K DPTOVAL,DPTOUT,DPTXOLD,^TMP("DPTLK",$J)
"RTN","DPTLK1",54,0)
 Q
"RTN","DPTLK1",55,0)
 ;
"RTN","DPTLK1",56,0)
LOOK(DPTVAL) ;Look for x-ref matches
"RTN","DPTLK1",57,0)
 ;Input: DPTVAL=lookup seed value
"RTN","DPTLK1",58,0)
 I $L(DPTVAL),$D(^DPT(DPTREF,DPTVAL)) D CHKIFN Q:DPTDFN!DPTOUT
"RTN","DPTLK1",59,0)
 I $L(DPTVAL),'($D(^DPT(DPTREF,DPTVAL))&(DIC(0)["O"))&(DIC(0)'["X") D CHKVAL
"RTN","DPTLK1",60,0)
 Q
"RTN","DPTLK1",61,0)
 ;
"RTN","DPTLK1",62,0)
CHKVAL S DPTOVAL=DPTVAL
"RTN","DPTLK1",63,0)
 N DPTSEED S DPTSEED=DPTVAL
"RTN","DPTLK1",64,0)
 I DPTREF="SSN",(DPTVAL?9N1"p") D  Q
"RTN","DPTLK1",65,0)
 .S DPTVAL=$E(DPTVAL,1,9)_"P" D CHKIFN
"RTN","DPTLK1",66,0)
 .Q
"RTN","DPTLK1",67,0)
 I DPTREF="SSN",(DPTVAL?2.9N) D  Q
"RTN","DPTLK1",68,0)
 .S DPTVAL=$E(DPTVAL_"0000000",1,9)
"RTN","DPTLK1",69,0)
 .D CV1(DPTVAL),CHKIFN
"RTN","DPTLK1",70,0)
 .S DPTVAL=DPTVAL_"P" D CV1(DPTVAL),CHKIFN
"RTN","DPTLK1",71,0)
 .Q
"RTN","DPTLK1",72,0)
 D CV1(DPTVAL)
"RTN","DPTLK1",73,0)
 I DPTREF="CN"!(DPTREF="RM"),DPTVAL'["E",DPTVAL=+DPTVAL,'$D(^DPT(DPTREF,DPTVAL)) D  Q
"RTN","DPTLK1",74,0)
 .S DPTVAL=$O(^DPT(DPTREF,DPTVAL_" "),-1)
"RTN","DPTLK1",75,0)
 .D CV1(DPTVAL)
"RTN","DPTLK1",76,0)
 .Q
"RTN","DPTLK1",77,0)
 Q
"RTN","DPTLK1",78,0)
 ;
"RTN","DPTLK1",79,0)
CV1(DPTVAL) ;Look for input value matches
"RTN","DPTLK1",80,0)
 I $L(DPTVAL) F DPTLP1=0:0 S DPTVAL=$O(^DPT(DPTREF,DPTVAL)) Q:DPTVAL=""!(DPTDFN)!($P(DPTVAL,DPTSEED)'="")  D CHKIFN
"RTN","DPTLK1",81,0)
 Q
"RTN","DPTLK1",82,0)
 ;
"RTN","DPTLK1",83,0)
CHKIFN F DPTIFN=0:0 S DPTIFN=$O(^DPT(DPTREF,DPTVAL,DPTIFN)) Q:'DPTIFN!(DPTDFN)!DPTOUT  S Y=DPTIFN D SETDPT I $S<DPTSZ F I=1:1:DPTNUM-7 S J=$S($D(DPTIFNS(I)):+DPTIFNS(I),1:0) K DPTIFNS(I),DPTS(J) S DPTBEG=I
"RTN","DPTLK1",84,0)
 Q
"RTN","DPTLK1",85,0)
 ;
"RTN","DPTLK1",86,0)
SETDPT Q:($D(DPTS(Y))&($G(DPTREF)'="B"))!'$D(^DPT(Y,0))
"RTN","DPTLK1",87,0)
 ; screen out MERGED FROM records - DG/574
"RTN","DPTLK1",88,0)
 Q:$D(^DPT(Y,-9))
"RTN","DPTLK1",89,0)
 N DPTNVAL I '$D(DPTOVAL) N DPTOVAL S DPTOVAL=DPTX
"RTN","DPTLK1",90,0)
 I 1 S X=DPTOVAL X:$D(DIC("S")) DIC("S") Q:'$T  X:($D(DO("SCR"))) DO("SCR") Q:'$T  X:$D(DDCOMA) DDCOMA Q:'$T
"RTN","DPTLK1",91,0)
 K:$G(DPTCNT)<1 ^TMP("DPTLK",$J)
"RTN","DPTLK1",92,0)
 S DPTS(Y)=$S('$D(DPTREF):$P(^DPT(Y,0),U),1:$P(^DPT(Y,0),U))_U_$S($D(DPTVAL):$E(DPTVAL,($L(DPTOVAL)+1),$L(DPTVAL)),1:"")
"RTN","DPTLK1",93,0)
 S DPTNVAL=$P(^DPT(Y,0),U)_U_$S($G(DPTREF)="NOP":$P(^DPT(Y,0),U),$D(DPTVAL):DPTVAL,1:"")
"RTN","DPTLK1",94,0)
 Q:$D(^TMP("DPTLK",$J,Y,DPTNVAL))
"RTN","DPTLK1",95,0)
 S DPTCNT=DPTCNT+1,^TMP("DPTLK",$J,Y,DPTNVAL)="",DPTIFNS(DPTCNT)=Y_U_DPTNVAL
"RTN","DPTLK1",96,0)
 I $D(DPTLARR) D  Q
"RTN","DPTLK1",97,0)
 .I DPTLMAX,DPTCNT>DPTLMAX D  Q
"RTN","DPTLK1",98,0)
 ..S @DPTLARR@(DPTCNT)="ADDITIONAL MATCHES FOUND BUT NOT RETURNED"
"RTN","DPTLK1",99,0)
 ..S DPTOUT=1
"RTN","DPTLK1",100,0)
 ..Q
"RTN","DPTLK1",101,0)
 .S @DPTLARR@(DPTCNT)=DPTIFNS(DPTCNT)_U_$$SSN(Y)_U_$$DOB(Y)
"RTN","DPTLK1",102,0)
 .Q
"RTN","DPTLK1",103,0)
 I '(DPTCNT#5),DIC(0)["E" D PRTDPT
"RTN","DPTLK1",104,0)
 Q
"RTN","DPTLK1",105,0)
 ;
"RTN","DPTLK1",106,0)
PRTDPT I $D(DDS) D CLRMSG^DDS S DX=0,DY=DDSHBX+1 X DDXY S X=0 X ^%ZOSF("RM")
"RTN","DPTLK1",107,0)
 N DPTP1,DPTP2
"RTN","DPTLK1",108,0)
 F DPTNUM=DPTNUM+1:1:DPTCNT Q:DPTOUT  S DPTIFN=+DPTIFNS(DPTNUM) D
"RTN","DPTLK1",109,0)
 .W:'$D(DDS) !
"RTN","DPTLK1",110,0)
 .S DPTP2=$P(DPTIFNS(DPTNUM),U,3)
"RTN","DPTLK1",111,0)
 .S DPTP1=$P(DPTIFNS(DPTNUM),U,2)
"RTN","DPTLK1",112,0)
 .W ?3,DPTNUM,?$X+(4-$L(DPTNUM))
"RTN","DPTLK1",113,0)
 .; write the xref value
"RTN","DPTLK1",114,0)
 .W DPTP2_"  "
"RTN","DPTLK1",115,0)
 .; write patient name if diff than xref value
"RTN","DPTLK1",116,0)
 .I DPTP1'=DPTP2 W DPTP1
"RTN","DPTLK1",117,0)
 .S Y=DPTIFN X:$D(^DPT(DPTIFN,0)) "N DDS X DIC(""W"")" I $D(DDS) S DY=DY+1,DX=0 X DDXY S $X=0
"RTN","DPTLK1",118,0)
 I '$D(DPT("NOPRT^")) W:'$D(DDS) ! W "ENTER '^' TO STOP, OR "
"RTN","DPTLK1",119,0)
 W:'$D(DDS) ! W "CHOOSE ",DPTBEG,"-",DPTNUM,": " R X:DTIME S DPTSEL=X D  Q:DPTSEL=""!$D(DTOUT)!$D(DUOUT)
"RTN","DPTLK1",120,0)
 .S:'$T DPTSEL=$S($D(DPTOVAL):DPTOVAL,$D(DPTVAL):DPTVAL,$D(DPTX):DPTX,$D(DPTXOLD):DPTXOLD,1:""),(DPTOUT,DTOUT)=1
"RTN","DPTLK1",121,0)
 .S:X="^" (DPTOUT,DUOUT)=1
"RTN","DPTLK1",122,0)
 S DPTDFN=$S(DPTSEL'?.ANP!($L(DPTSEL)>30):-1,'$D(DPTIFNS(DPTSEL)):-1,$D(DPTS(+DPTIFNS(DPTSEL))):+DPTIFNS(DPTSEL),1:-1),DPTX=$S(DPTDFN<0:DPTSEL,1:DPTX)
"RTN","DPTLK1",123,0)
 S:DPTDFN=-1 DPTXOLD=DPTSEL
"RTN","DPTLK1",124,0)
 Q
"RTN","DPTLK1",125,0)
 ;
"RTN","DPTLK1",126,0)
LIST(DPTX,DPTLMAX,DPTLARR) ;Silent lookup list
"RTN","DPTLK1",127,0)
 ;Input: DPTX=lookup value (name, SSN, room, ward, DFN or 
"RTN","DPTLK1",128,0)
 ;             "space_return").
"RTN","DPTLK1",129,0)
 ;       DPTLMAX=maximum number of matches to return (optional), this
"RTN","DPTLK1",130,0)
 ;               parameter has no effect if DFN or "space_return"
"RTN","DPTLK1",131,0)
 ;               lookup methods are used.
"RTN","DPTLK1",132,0)
 ;       DPTLARR=name of array to return list of matches, this should
"RTN","DPTLK1",133,0)
 ;               be a global if DPTLMAX is a large value or unspecified
"RTN","DPTLK1",134,0)
 ;               This array is returned in the format:
"RTN","DPTLK1",135,0)
 ;               @DPTLARR@(n)=DFN^patient_name^xref_lookup_match_value^
"RTN","DPTLK1",136,0)
 ;                            SSN^Date_of_Birth
"RTN","DPTLK1",137,0)
 ;               If more matches exist than the maximum to be returned
"RTN","DPTLK1",138,0)
 ;               as specified by DPTLMAX, the @DPTLARR@(DPTLMAX+1) node
"RTN","DPTLK1",139,0)
 ;               will be defined = "ADDITIONAL MATCHES FOUND BUT NOT 
"RTN","DPTLK1",140,0)
 ;               RETURNED".
"RTN","DPTLK1",141,0)
 ;               The calling program has the responsibility to kill
"RTN","DPTLK1",142,0)
 ;               @DPTLARR prior to calling this entry point.
"RTN","DPTLK1",143,0)
 ;Output: number of matches and array named by DPTLARR.
"RTN","DPTLK1",144,0)
 ;
"RTN","DPTLK1",145,0)
 N X,Y,DPTCNT,DIC,DPTSZ,DPTDFN,DPTIFNS,DPTS
"RTN","DPTLK1",146,0)
 S DPTCNT=0,DIC(0)="M",DPTSZ=1000 S:$G(DPTLMAX)<1 DPTLMAX=0
"RTN","DPTLK1",147,0)
 ;Check for "space_return" or DFN lookup
"RTN","DPTLK1",148,0)
 I DPTX=" "!($E(DPTX)="`") D  Q DPTCNT
"RTN","DPTLK1",149,0)
 .I DPTX=" " S Y=$S('($D(DUZ)#2):-1,$D(^DISV(DUZ,"^DPT(")):^("^DPT("),1:-1)
"RTN","DPTLK1",150,0)
 .I $E(DPTX)="`" S Y=$S($D(^DPT(+$P(DPTX,"`",2),0)):+$P(DPTX,"`",2),1:-1)
"RTN","DPTLK1",151,0)
 .Q:Y<1  Q:'$D(^DPT(Y,0))  D SETDPT S DPTCNT=1
"RTN","DPTLK1",152,0)
 .Q
"RTN","DPTLK1",153,0)
 D FIND
"RTN","DPTLK1",154,0)
 Q $S(DPTLMAX&(DPTCNT>DPTLMAX):DPTLMAX,1:DPTCNT)
"RTN","DPTLK1",155,0)
 ;
"RTN","DPTLK1",156,0)
UCASE(DGX) ;Uppercase lookup value
"RTN","DPTLK1",157,0)
 ;Input: DGX=lookup value
"RTN","DPTLK1",158,0)
 ;Output: transformed DGX
"RTN","DPTLK1",159,0)
 N DGI,DGY,DGZ S DGZ=DGX,DGX=""
"RTN","DPTLK1",160,0)
 F DGI=1:1:$L(DGZ) S DGY=$E(DGZ,DGI) D
"RTN","DPTLK1",161,0)
 .S:DGY?1L DGY=$C($A(DGY)-32)
"RTN","DPTLK1",162,0)
 .S DGX=DGX_DGY
"RTN","DPTLK1",163,0)
 Q DGX
"RTN","DPTLK1",164,0)
 ;        
"RTN","DPTLK1",165,0)
SSN(DFN) ;do not show ssn identifier for patient
"RTN","DPTLK1",166,0)
 ; input DFN = ien in file #2 [required]
"RTN","DPTLK1",167,0)
 ; output SSN = nnnnnnnnn
"RTN","DPTLK1",168,0)
 ;
"RTN","DPTLK1",169,0)
 N SSN
"RTN","DPTLK1",170,0)
 S SSN="",DFN=+DFN
"RTN","DPTLK1",171,0)
 I DFN>0 D
"RTN","DPTLK1",172,0)
 .I $$SCREEN(DFN) S SSN="*SENSITIVE*" Q
"RTN","DPTLK1",173,0)
 .S SSN=$P($G(^DPT(DFN,0)),U,9)
"RTN","DPTLK1",174,0)
 .; DG*5.3*657 BAJ 11/20 2005
"RTN","DPTLK1",175,0)
 .; display Pseudo SSN alert on list
"RTN","DPTLK1",176,0)
 .I SSN?9N1"P" S SSN=SSN_" **Pseudo SSN**"
"RTN","DPTLK1",177,0)
 .Q 
"RTN","DPTLK1",178,0)
 Q SSN
"RTN","DPTLK1",179,0)
 ;
"RTN","DPTLK1",180,0)
DOB(DFN,DGYR) ;do not show dob identifier for patient
"RTN","DPTLK1",181,0)
 ; input DFN = ien in file #2  [required]
"RTN","DPTLK1",182,0)
 ;       DGYR = 0/1  [optional]
"RTN","DPTLK1",183,0)
 ;              where 0 returns 4-digit year (default)
"RTN","DPTLK1",184,0)
 ;                    1 returns 2-digit year
"RTN","DPTLK1",185,0)
 ;                    2 returns File manager date
"RTN","DPTLK1",186,0)
 ; output DOB = mm/dd/yyyy (default)
"RTN","DPTLK1",187,0)
 ;            = mm/dd/yy, if DGYR=1
"RTN","DPTLK1",188,0)
 ;            = yyymmdd, if DGYR=2
"RTN","DPTLK1",189,0)
 N B,DOB,YEAR
"RTN","DPTLK1",190,0)
 S DOB="",DFN=+DFN,DGYR=+$G(DGYR)
"RTN","DPTLK1",191,0)
 I DFN>0 D
"RTN","DPTLK1",192,0)
 .I $$SCREEN(DFN) S DOB="*SENSITIVE*" Q
"RTN","DPTLK1",193,0)
 .S B=$P($G(^DPT(DFN,0)),U,3)
"RTN","DPTLK1",194,0)
 .I DGYR'=2 D  Q
"RTN","DPTLK1",195,0)
 ..S YEAR=$S(DGYR=1:"2D",1:"5D")
"RTN","DPTLK1",196,0)
 ..S DOB=$$FMTE^XLFDT(B,YEAR)
"RTN","DPTLK1",197,0)
 .S DOB=B
"RTN","DPTLK1",198,0)
 Q DOB
"RTN","DPTLK1",199,0)
 ;
"RTN","DPTLK1",200,0)
SCREEN(DFN) ;Screening logic for SSN & DOB
"RTN","DPTLK1",201,0)
 ;Input  : DFN - Pointer to PATIENT file (#2)
"RTN","DPTLK1",202,0)
 ;Output : 1 - Apply screen
"RTN","DPTLK1",203,0)
 ;         0 - Don't apply screen
"RTN","DPTLK1",204,0)
 ;Notes  : Screen applied if patient is sensitive or an employee
"RTN","DPTLK1",205,0)
 ;
"RTN","DPTLK1",206,0)
 N DGTIME,DGT,DGA1,DG1,DGXFR0
"RTN","DPTLK1",207,0)
 ;Inpatient check - no longer used (kept for future reference)
"RTN","DPTLK1",208,0)
 ;D H^DGUTL S DGT=DGTIME D ^DGPMSTAT I DG1 Q 0
"RTN","DPTLK1",209,0)
 ;Sensitive - screen
"RTN","DPTLK1",210,0)
 I $P($G(^DGSL(38.1,DFN,0)),"^",2) Q 1
"RTN","DPTLK1",211,0)
 ;Employee - screen
"RTN","DPTLK1",212,0)
 I $$EMPL^DGSEC4(DFN) Q 1
"RTN","DPTLK1",213,0)
 ;Don't screen
"RTN","DPTLK1",214,0)
 Q 0
"RTN","DPTLK2")
0^4^B34529775^B32261378
"RTN","DPTLK2",1,0)
DPTLK2 ;ALB/RMO,ERC - MAS Patient Look-up Add New Patient ; 07/07/06
"RTN","DPTLK2",2,0)
 ;;5.3;Registration;**32,197,214,244,532,578,615,620,647,680,702,653,915**;Aug 13, 1993;Build 6
"RTN","DPTLK2",3,0)
 N DPTCT,DGVV,DPTLIDR,DGCOL S DGCOL=0
"RTN","DPTLK2",4,0)
 I $D(DDS) D CLRMSG^DDS S DX=0,DY=DDSHBX+1 X DDXY
"RTN","DPTLK2",5,0)
 I '$D(DUZ(0)) W:DIC(0)["Q" !?3,*7,"Unable to Add Patient. Your Fileman Access Code is undefined." S DPTDFN=-1 G Q
"RTN","DPTLK2",6,0)
 I $S($D(DLAYGO):2\1-(DLAYGO\1),1:1),DUZ(0)'="@",$D(^DIC(2,0,"LAYGO")) F I=1:1 I DUZ(0)[$E(^("LAYGO"),I) Q:I'>$L(^("LAYGO"))  S DPTDFN=-1 W:DIC(0)["Q" *7," ??" G Q
"RTN","DPTLK2",7,0)
 N DG20NAME S DG20NAME=$G(DPTX),DPTX=$$FORMAT^XLFNAME7(.DG20NAME,3,30,,1)
"RTN","DPTLK2",8,0)
 S DPTX=$S($E(DPTX)[""""&($E(DPTX,$L(DPTX))[""""):$P(DPTX,"""",2),$E(DPTX)["""":$P(DPTX,"""",2),$E(DPTX,$L(DPTX))["""":$P(DPTX,"""",1),1:DPTX)
"RTN","DPTLK2",9,0)
 I $L(DPTX)<3!($L(DPTX)>30)!(DPTX?1P.E)!(DPTX'[",")!(DPTX'?1U.ANP) W:DIC(0)["Q" *7," ??" S DPTDFN=-1 G Q
"RTN","DPTLK2",10,0)
 ; DG*647
"RTN","DPTLK2",11,0)
 I $P($G(XQY0),U)="DG COLLATERAL PATIENT" S DGCOL=1,DGCOL("DR")=$P(DIC("DR"),";",5,8)
"RTN","DPTLK2",12,0)
 ;**915 do enterprise search if register a patient option
"RTN","DPTLK2",13,0)
 I $P($G(XQY0),"^",2)="Register a Patient",$T(PATIENT^MPIFXMLP)'="" D  G Q
"RTN","DPTLK2",14,0)
 . N DGSAVDFN
"RTN","DPTLK2",15,0)
 . I '$G(DGSEARCH) S DGSAVDFN=$$SEARCH^DPTLK7(DPTX,DPTXX)
"RTN","DPTLK2",16,0)
 . I $G(DGSAVDFN)>0 S DPTDFN=DGSAVDFN Q
"RTN","DPTLK2",17,0)
 . S DPTDFN=-1 S:DPTDFN<1&('$D(DTOUT)) DUOUT=1
"RTN","DPTLK2",18,0)
 K DPTLID I DIC(0)["E" D ASKADD D  G Q:DPTDFN<0 I ('$D(DIC("DR")))!(DGCOL) D CHKID G Q:DPTDFN<0 D ^DPTLK3 G Q:DPTDFN<0 W !!?3,"...adding new patient"
"RTN","DPTLK2",19,0)
 .S:DPTDFN<1&('$D(DTOUT)) DUOUT=1
"RTN","DPTLK2",20,0)
 S X=DPTX,DPT("NO^")=$G(DIE("NO^")) K DD,DO,DPTX N DPTZNV
"RTN","DPTLK2",21,0)
 S:$D(DPT("DR")) DIC("DR")="S DIE(""NO^"")=""BACK"";"_DPT("DR")
"RTN","DPTLK2",22,0)
 I DGCOL S:$D(DPT("DR")) DIC("DR")=DPT("DR")_";"_DGCOL("DR")
"RTN","DPTLK2",23,0)
 D FILE^DICN K:$D(DPT("DR")) DIC("DR")
"RTN","DPTLK2",24,0)
 I +Y>0 W ?24,"...new patient added",!?3
"RTN","DPTLK2",25,0)
 S DPTDFN=Y S:$L(DPT("NO^")) DIE("NO^")=DPT("NO^")
"RTN","DPTLK2",26,0)
 ;offer prompt of patient file components
"RTN","DPTLK2",27,0)
 K DA,DIE,DR
"RTN","DPTLK2",28,0)
 S DIE="^DPT(",DA=+Y,DR="S DIE(""NO^"")=""BACK"";.01///^S (X,DPTZNV)=$$NCEDIT^DPTNAME(DA,1,.DG20NAME)"
"RTN","DPTLK2",29,0)
 D ^DIE K DR
"RTN","DPTLK2",30,0)
 ;look for other (local) identifiers
"RTN","DPTLK2",31,0)
 I '$D(DIC("DR")),DIC(0)["E",'DGCOL D
"RTN","DPTLK2",32,0)
 .F DPTID=0:0 S DPTID=$O(^DD(2,0,"ID",DPTID)) Q:'DPTID  D
"RTN","DPTLK2",33,0)
 ..I $F(DPTGID,U_DPTID_U) Q
"RTN","DPTLK2",34,0)
 ..I '$D(^DD(2,DPTID,0)) Q
"RTN","DPTLK2",35,0)
 ..S DPTLID=""
"RTN","DPTLK2",36,0)
 ..S DPTLIDR=$S('$D(DPTLIDR):DPTID,1:DPTLIDR_";"_DPTID)
"RTN","DPTLK2",37,0)
 I $D(DPTLID) W !!?3,"Please enter the following additional information:",!?3 S DIE="^DPT(",DA=+DPTDFN,DIE("NO^")="BACK",DR=DPTLIDR D ^DIE K DIE,DA,DR
"RTN","DPTLK2",38,0)
 ;
"RTN","DPTLK2",39,0)
Q K DFN,DPT("DR"),DPTLID,DPTGID,DPTID,DPTID0,DPTIDS
"RTN","DPTLK2",40,0)
 Q
"RTN","DPTLK2",41,0)
 ;
"RTN","DPTLK2",42,0)
ASKADD I $D(DDS) I $Y>21 D CLRMSG^DDS S DX=0,DY=DDSHBX+1 X DDXY
"RTN","DPTLK2",43,0)
 S Y=+$P(^DPT(0),U,4)+1 W !?3,*7,"ARE YOU ADDING ",$S(DPTX'?.N:"'"_DPTX_"' AS ",1:""),"A NEW PATIENT (THE ",Y,$S(Y#10=1&(Y#100-11):"ST",Y#10=2&(Y#100-12):"ND",Y#10=3&(Y#100-13):"RD",1:"TH"),")"
"RTN","DPTLK2",44,0)
 S %=2 D YN^DICN S DPTDFN=$S(%<0!(%=2):-1,%=1:1,1:0) I 'DPTDFN W !?6,"Enter 'YES' to add a new applicant, or 'NO' not to." G ASKADD
"RTN","DPTLK2",45,0)
 I %=1 S:$$CONF1^DPTNAME(DPTX)'=1 DPTDFN=-1
"RTN","DPTLK2",46,0)
 Q
"RTN","DPTLK2",47,0)
 ;
"RTN","DPTLK2",48,0)
CHKID K DFN S DPTDFN=1,DPTGID="^.02^.03^.09^391^1901^.301^994^" I DGCOL S DPTGID="^.03^.09^.02^.3601^"
"RTN","DPTLK2",49,0)
 F DPTCT=2:1 S DPTID=$P(DPTGID,U,DPTCT) Q:'DPTID!(DPTDFN<0)  D CHKID1
"RTN","DPTLK2",50,0)
 Q
"RTN","DPTLK2",51,0)
 ;
"RTN","DPTLK2",52,0)
CHKID1 I $D(^DD(2,DPTID,0)) S DPT("DR")=$S('$D(DPT("DR")):DPTID,1:DPT("DR")_";"_DPTID),DPTID0=^DD(2,DPTID,0) D ASKID S:'$D(X) DPTDFN=-1
"RTN","DPTLK2",53,0)
 Q
"RTN","DPTLK2",54,0)
 ;
"RTN","DPTLK2",55,0)
ASKID N DGREC W !?3,"PATIENT ",$P(DPTID0,U),": " R X:DTIME D  I $D(DTOUT)!$G(DUOUT)!($G(DGREC)=1) W !?6,*7,"<'",DPTX,"'> NOT ADDED" K X Q
"RTN","DPTLK2",56,0)
 .S:'$T DTOUT=U
"RTN","DPTLK2",57,0)
 .S:X="^" DUOUT=1
"RTN","DPTLK2",58,0)
 .Q:$D(DTOUT)!($G(DUOUT))!(X["^")
"RTN","DPTLK2",59,0)
 .I DPTID=.09 D
"RTN","DPTLK2",60,0)
 ..;added with DG*5.3*653 - ERC
"RTN","DPTLK2",61,0)
 ..I X="P"!(X="p") S DPTGID=$P(DPTGID,".09",1)_".09^.0906"_$P(DPTGID,".09",2)
"RTN","DPTLK2",62,0)
 ..N DGNEWPT
"RTN","DPTLK2",63,0)
 ..S DGNEWPT=1
"RTN","DPTLK2",64,0)
 ..D REC^DGSEC
"RTN","DPTLK2",65,0)
 I X["^" W:$E(X)["^" !?6,*7,"Sorry, '^' not allowed!" W " ??" G ASKID
"RTN","DPTLK2",66,0)
 ; field 994 is not a required field
"RTN","DPTLK2",67,0)
 I DPTID=994 I X["?" D HLPID G ASKID
"RTN","DPTLK2",68,0)
 I DPTID=994 I X="" G SKIP
"RTN","DPTLK2",69,0)
 I X["?"!(X="") W:X="" *7," ??" D HLPID G ASKID
"RTN","DPTLK2",70,0)
 I $P(DPTID0,U,2)["S" F I=1:1 S Y=$P($P(DPTID0,U,3),";",I) K:Y="" X Q:Y=""  I $P(Y,":",1)=X!($E($P(Y,":",2),1,$L(X))=X) S X=$P(Y,":",1),DPTSET=$P(Y,":",2) Q
"RTN","DPTLK2",71,0)
SKIP I $P(DPTID0,U,2)["P" D P1 G ASKID:Y'>0 Q:'$D(X)  S DPTIDS(DPTID)=X,DPT("DR")=DPT("DR")_"///"_X K DPTSET Q
"RTN","DPTLK2",72,0)
 I DPTID=.301,$D(X) D CHKIT Q:'$D(X)  I $D(X) W:$D(DPTSET) " ",DPTSET S DPTIDS(DPTID)=X,DPT("DR")=DPT("DR")_"///"_X K DPTSET Q
"RTN","DPTLK2",73,0)
 I DPTID'=.301 X $P(DPTID0,U,5,99) I $D(X) W:$D(DPTSET) " ",DPTSET S DPTIDS(DPTID)=X,DPT("DR")=DPT("DR")_"///"_X K DPTSET Q
"RTN","DPTLK2",74,0)
 W:'$D(X)&($P(DPTID0,U,2)'["D") *7," ??" D HLPID G ASKID
"RTN","DPTLK2",75,0)
 ;
"RTN","DPTLK2",76,0)
HLPID W:$D(^DD(2,DPTID,.1)) !?5,^(.1) W:$D(^DD(2,DPTID,3)) !?5,^(3) I $D(X),X["?" F I=0:0 S I=$O(^DD(2,DPTID,21,I)) Q:'I!(I>3&(X?1"?"))  I $D(^(I,0)) W !?5,^(0) I I>2,X?1"?" W !?5,"..."
"RTN","DPTLK2",77,0)
 X:$D(^DD(2,DPTID,4)) ^(4) I $P(DPTID0,U,2)["D" S X="?",%DT="E" D ^%DT
"RTN","DPTLK2",78,0)
 I $P(DPTID0,U,2)["S" W !?7,"CHOOSE FROM: " F I=1:1 S Y=$P($P(DPTID0,U,3),";",I) Q:Y=""  W !?7,$P(Y,":",1),?15," ",$P(Y,":",2)
"RTN","DPTLK2",79,0)
 I $P(DPTID0,U,2)["P" D P1
"RTN","DPTLK2",80,0)
 Q
"RTN","DPTLK2",81,0)
P1 I DPTID=".3601" S X=$$UCASE^DPTLK1(X) ;DG*5.3*680
"RTN","DPTLK2",82,0)
 S DPTDIC=$G(DIC),DPTDIC(0)=$G(DIC(0)) S:$D(DIC("S")) DPTDIC("S")=DIC("S") S:$D(DIC("W")) DPTDIC("W")=DIC("W") S DIC="^"_$P(DPTID0,"^",3),DIC(0)="QEMZ",D="B" D IX^DIC
"RTN","DPTLK2",83,0)
 S DIC=DPTDIC,DIC(0)=DPTDIC(0) S:$D(DPTDIC("S")) DIC("S")=DPTDIC("S") S:$D(DPTDIC("W")) DIC("W")=DPTDIC("W") K DPTDIC D DO^DIC1 S:X["^" DPTDFN=-1 I X'["^",X'["?",Y'>0 S X="?" G P1
"RTN","DPTLK2",84,0)
 ; DG*5.3*680  S X=+Y stores the IEN of the sponsor picked to pass to FILE^DICN 
"RTN","DPTLK2",85,0)
 I DPTID=".3601" S X=+Y I '$D(^DPT(+Y,"VET"))!($P($G(^DPT(+Y,"VET")),U)'="Y") D EN^DDIOL("Sponsor must be a veteran","","!?4") K X W !?6,*7,"<'",DPTX,"'> NOT ADDED"
"RTN","DPTLK2",86,0)
 Q
"RTN","DPTLK2",87,0)
CHKIT ; do input transform for .301
"RTN","DPTLK2",88,0)
 I X'="Y" Q
"RTN","DPTLK2",89,0)
 S DGVV=DPTIDS(391),DGVV=$O(^DG(391,"B",DGVV,0))
"RTN","DPTLK2",90,0)
 S DGVV=$S($D(^DG(391,+DGVV,0)):$P(^(0),"^",2),1:"")
"RTN","DPTLK2",91,0)
 I DPTIDS(1901)'="Y",'DGVV D EN^DDIOL("Applicant is NOT a veteran!!","","!?4") K X W !?6,*7,"<'",DPTX,"'> NOT ADDED"
"RTN","DPTLK2",92,0)
 Q
"RTN","DPTLK2",93,0)
DEL ;Delete logic
"RTN","DPTLK2",94,0)
 N I,J,A,G,Q,ERR S Q="""",ERR=0 F I=0:0 S I=$O(^DD(2,0,"PT",I)) Q:'I  F J=0:0 S J=$O(^DD(2,0,"PT",I,J)) Q:'J  D
"RTN","DPTLK2",95,0)
  .F K=0:0 S K=$O(^DD(I,+J,1,K)) Q:'K  S A=$G(^(K,0)) I $L($P(A,U,2)),'$L($P(A,U,3)) D
"RTN","DPTLK2",96,0)
 ..S G=$G(^DIC(+I,0,"GL")) Q:'$L(G)  I $D(@(G_Q_$P(A,U,2)_Q_","_DA_")")) W !,"Entry in "_$P($G(^DIC(I,0)),U)_" ("_I_") refers to this patient" S ERR=1 Q
"RTN","DPTLK2",97,0)
 I ERR
"RTN","DPTLK4")
0^9^B3783232^B3734144
"RTN","DPTLK4",1,0)
DPTLK4 ;ALB/JFP - MAS Patient Look-up Create stub entry patient file ; 09/01/96
"RTN","DPTLK4",2,0)
 ;;5.3;Registration;**73,857,915**;Aug 13, 1993;Build 6
"RTN","DPTLK4",3,0)
FILE(FLDARR,DGVIC40) ; -- Creates stub in patient file
"RTN","DPTLK4",4,0)
 ;Inputs:
"RTN","DPTLK4",5,0)
 ;   FLDARR   - array of field elements to file
"RTN","DPTLK4",6,0)
 ;   DGVIC40  - flag indicating VIC 4.0 card
"RTN","DPTLK4",7,0)
 ;Outputs:
"RTN","DPTLK4",8,0)
 ;   0        - sucess
"RTN","DPTLK4",9,0)
 ;   -1^error - 
"RTN","DPTLK4",10,0)
 ;
"RTN","DPTLK4",11,0)
 ; *857 made changes to support new vic 4.0 card (elz)
"RTN","DPTLK4",12,0)
 ;
"RTN","DPTLK4",13,0)
 ; -- Check input
"RTN","DPTLK4",14,0)
 Q:'$D(FLDARR) "-1^required parameter not passed"
"RTN","DPTLK4",15,0)
 ; -- New variables
"RTN","DPTLK4",16,0)
 N Y,Z,DIC,SAVY
"RTN","DPTLK4",17,0)
 ;
"RTN","DPTLK4",18,0)
 ; -- Create stub entry in patient file
"RTN","DPTLK4",19,0)
 S DIC="^DPT(",DIC(0)="EL",DLAYGO=2
"RTN","DPTLK4",20,0)
 ;
"RTN","DPTLK4",21,0)
 ; -- Set X = patient name
"RTN","DPTLK4",22,0)
 S X=$S($G(DGVIC40):$G(@FLDARR@(.01)),1:$G(@FLDARR@(2)))
"RTN","DPTLK4",23,0)
 ;
"RTN","DPTLK4",24,0)
 ; -- if VIC 4.0 card DIR string = 
"RTN","DPTLK4",25,0)
 ;    SEX;DOB;SSN;POBCity;POBState;MMN;ICN;ICNCheck;MBI
"RTN","DPTLK4",26,0)
 I $G(DGVIC40) S DIC("DR")="",Z=.01 F  S Z=$O(@FLDARR@(Z)) Q:'Z  S:Z'=991.01&(Z'=991.02) DIC("DR")=DIC("DR")_Z_$S($L(@FLDARR@(Z)):"///"_@FLDARR@(Z),1:"")_";"
"RTN","DPTLK4",27,0)
 ;
"RTN","DPTLK4",28,0)
 ; -- add in other fields for prompt PATIENT TYPE;VETERAN;SC;MBI
"RTN","DPTLK4",29,0)
 I  S DIC("DR")=DIC("DR")_"391;1901;.301"
"RTN","DPTLK4",30,0)
 ;
"RTN","DPTLK4",31,0)
 ; -- Set DIR string (old VIC) = SEX;DOB;SSN;PATIENT TYPE;VETERAN;SC
"RTN","DPTLK4",32,0)
 E  S DIC("DR")=".02///"_$G(@FLDARR@(4))_";.03///"_$G(@FLDARR@(3))_";.09////"_$G(@FLDARR@(1))_";391///"_$G(@FLDARR@(5))_";1901///"_$G(@FLDARR@(6))_";.301///"_$G(@FLDARR@(7))
"RTN","DPTLK4",33,0)
 ;
"RTN","DPTLK4",34,0)
 ; -- set date entered into file (missing from prior vic versions)
"RTN","DPTLK4",35,0)
 S DIC("DR")=DIC("DR")_";.097////"_DT
"RTN","DPTLK4",36,0)
 ;
"RTN","DPTLK4",37,0)
 K DD,DO D FILE^DICN S SAVY=Y
"RTN","DPTLK4",38,0)
 K DIC,DLAYGO,X
"RTN","DPTLK4",39,0)
 ;
"RTN","DPTLK4",40,0)
 ; need to update mpi with icn/correlation
"RTN","DPTLK4",41,0)
 I Y>0,$G(@FLDARR@(991.01)),$G(@FLDARR@(991.02)),$T(VIC40^MPIFAPI)'="" D VIC40^MPIFAPI(+Y,@FLDARR@(991.01)_"V"_@FLDARR@(991.02))
"RTN","DPTLK4",42,0)
 Q SAVY
"RTN","DPTLK4",43,0)
 ;
"RTN","DPTLK7")
0^6^B174142560^n/a
"RTN","DPTLK7",1,0)
DPTLK7 ;OAK/ELZ - MAS PATIENT LOOKUP ENTERPRISE SEARCH ; 8/24/15 2:38pm
"RTN","DPTLK7",2,0)
 ;;5.3;Registration;**915**;Aug 13, 1993;Build 6
"RTN","DPTLK7",3,0)
 ;
"RTN","DPTLK7",4,0)
SEARCH(DGX,DGXOLD) ; do a search, pass in what the user entered
"RTN","DPTLK7",5,0)
 ; DGX is what the user originally entered, name is assumed unless it
"RTN","DPTLK7",6,0)
 ; is exactly 9 digits, DON'T pass by reference it may change
"RTN","DPTLK7",7,0)
 ; Return:  DFN (new or found locally), 0 if nothing found/added
"RTN","DPTLK7",8,0)
 ;
"RTN","DPTLK7",9,0)
 N DG20NAME,DGMPI,DGFLDS,DGOUT,%,%Y,DGMPIR,DGDFN,DGMPIICN,DGSAVE
"RTN","DPTLK7",10,0)
 N DGKEYREQ,X,DA,DO,DIC,DGADDREQ,DGMCID
"RTN","DPTLK7",11,0)
 Q:$G(DGSEARCH) 0
"RTN","DPTLK7",12,0)
 S (DGKEYREQ,DGOUT,DGADDREQ)=0,DGSEARCH=1,DGSAVE=DGX
"RTN","DPTLK7",13,0)
 Q:$T(PATIENT^MPIFXMLP)="" 0
"RTN","DPTLK7",14,0)
 ;
"RTN","DPTLK7",15,0)
YN ;Enterprise Search?
"RTN","DPTLK7",16,0)
 W !,"Do you want to do an Enterprise Search"
"RTN","DPTLK7",17,0)
 D YN^DICN I %=0 W !,"You must enter Yes or No." G YN
"RTN","DPTLK7",18,0)
 Q:%'=1 0
"RTN","DPTLK7",19,0)
 ;
"RTN","DPTLK7",20,0)
 I $G(DGXOLD)]"" S DGX=DGXOLD
"RTN","DPTLK7",21,0)
 ; if yes then ask questions
"RTN","DPTLK7",22,0)
 ; if 9 digits entered assume ssn, need to save
"RTN","DPTLK7",23,0)
PROMPT I DGX?9N S DGFLDS(.09)=DGX,DGX=""
"RTN","DPTLK7",24,0)
 ; if name in "" need to remove
"RTN","DPTLK7",25,0)
 I $E(DGX,1)="""" S DGX=$E(DGX,2,99)
"RTN","DPTLK7",26,0)
 I $E(DGX,$L(DGX))="""" S DGX=$E(DGX,1,$L(DGX)-1)
"RTN","DPTLK7",27,0)
 D NAME(.DGX,.DG20NAME,.DGOUT) Q:DGOUT 0
"RTN","DPTLK7",28,0)
 D FLDS(.DGFLDS,DG20NAME,.DGOUT) Q:DGOUT 0
"RTN","DPTLK7",29,0)
 I $G(DGFLDS(.09))'?9N S DGADDREQ=1
"RTN","DPTLK7",30,0)
 D:DGADDREQ ADDRESS(.DGFLDS,.DGOUT) Q:DGOUT 0
"RTN","DPTLK7",31,0)
 I DGADDREQ,'$$ADDREQ(.DGFLDS) D  G PROMPT
"RTN","DPTLK7",32,0)
 . W !,"You must enter an actual SSN, a COMPLETE Address or Phone to search.",!
"RTN","DPTLK7",33,0)
 . K DGX,DG20NAME,DGFLDS,DGMPI,DGMPIR
"RTN","DPTLK7",34,0)
 . S DGX=DGSAVE
"RTN","DPTLK7",35,0)
 ;
"RTN","DPTLK7",36,0)
 ; call MPI to get data
"RTN","DPTLK7",37,0)
 W !!,"Searching the MVI..."
"RTN","DPTLK7",38,0)
 D FORMAT(.DGMPI,.DG20NAME,.DGFLDS)
"RTN","DPTLK7",39,0)
 D PATIENT^MPIFXMLP(.DGMPIR,.DGMPI)
"RTN","DPTLK7",40,0)
 S DGMCID=$G(DGMPIR("mcid"))
"RTN","DPTLK7",41,0)
 ;
"RTN","DPTLK7",42,0)
 ; too many matches found, they need to get the numbers down, re-prompt
"RTN","DPTLK7",43,0)
 I $G(DGMPIR("count"))>10!($G(DGMPIR("Result"))="QE") D  G PROMPT
"RTN","DPTLK7",44,0)
 . W !,$S(DGMPIR("count")>10:DGMPIR("count"),1:"Too many")," records found, you need to provide more specific criteria.",!
"RTN","DPTLK7",45,0)
 . K DGX,DG20NAME,DGFLDS,DGMPI,DGMPIR
"RTN","DPTLK7",46,0)
 . S DGX=DGSAVE
"RTN","DPTLK7",47,0)
 ;
"RTN","DPTLK7",48,0)
 ; no matches found on the MPI offer to add
"RTN","DPTLK7",49,0)
 I '$G(DGMPIR("count")) W !,"No records found on the MVI.",! D  Q DGDFN
"RTN","DPTLK7",50,0)
 . S DPTX=$G(DGFLDS(.01)) D ASKADD^DPTLK2 I DPTDFN'>0 S DGDFN=0 Q
"RTN","DPTLK7",51,0)
 . S DGDFN=$$ADD(.DGFLDS,.DG20NAME) Q:'DGDFN
"RTN","DPTLK7",52,0)
 . ;
"RTN","DPTLK7",53,0)
 . ; setup DGMPIR since there was nothing
"RTN","DPTLK7",54,0)
 . M DGMPIR(1)=DGMPI
"RTN","DPTLK7",55,0)
 . S DGMPIR(+$O(DGMPIR(0)),"DFN")=DGDFN
"RTN","DPTLK7",56,0)
 . ;
"RTN","DPTLK7",57,0)
 . S DGMPIR("mcid")=DGMCID
"RTN","DPTLK7",58,0)
 . D MPIADD(.DGMPIR)
"RTN","DPTLK7",59,0)
 ;
"RTN","DPTLK7",60,0)
 ; do I have some records that are in autolink threshold? - key required
"RTN","DPTLK7",61,0)
 S X=0 F  S X=$O(DGMPIR(X)) Q:'X  I $G(DGMPIR(X,"Score"))'<$G(DGMPIR("matchThreshold")) S DGKEYREQ=1
"RTN","DPTLK7",62,0)
 ;
"RTN","DPTLK7",63,0)
 ; preset list to select patients
"RTN","DPTLK7",64,0)
 S DGDFN=$$ENP^MPIFVER(.DGMPIR,$G(DGMPIR("matchThreshold")),$G(DGMPIR("dupeThreshold")))
"RTN","DPTLK7",65,0)
 ;
"RTN","DPTLK7",66,0)
 ; found and selected local patient
"RTN","DPTLK7",67,0)
 I DGDFN>0 Q DGDFN
"RTN","DPTLK7",68,0)
 I DGDFN=-1 S DPTX="" Q 0
"RTN","DPTLK7",69,0)
 ;
"RTN","DPTLK7",70,0)
 ; need to add new patient based on return from selection
"RTN","DPTLK7",71,0)
 I $D(DGMPIR)>1 K DG20NAME D FORMATR(.DGFLDS,.DGMPIR,.DG20NAME) S DGDFN=$$ADD(.DGFLDS,.DG20NAME) D:DGDFN  G QUIT
"RTN","DPTLK7",72,0)
 . ;
"RTN","DPTLK7",73,0)
 . S DGMPIR(+$O(DGMPIR(0)),"DFN")=DGDFN
"RTN","DPTLK7",74,0)
 . ;
"RTN","DPTLK7",75,0)
 . S DGMPIR("mcid")=DGMCID
"RTN","DPTLK7",76,0)
 . D MPIADD(.DGMPIR)
"RTN","DPTLK7",77,0)
 . W !
"RTN","DPTLK7",78,0)
 . ;
"RTN","DPTLK7",79,0)
 . ; if known to ESR, send Z11 and monitor for return data
"RTN","DPTLK7",80,0)
 . I $G(DGMPIR(1,"Z11")) D
"RTN","DPTLK7",81,0)
 .. W !,"Adding site correlation to MVI "
"RTN","DPTLK7",82,0)
 .. N DGTIME,DGQRY,DGDONE,DGQSTAT
"RTN","DPTLK7",83,0)
 .. S (DGQSTAT,DGDONE)=0
"RTN","DPTLK7",84,0)
 .. F DGTIME=1:1:60 D
"RTN","DPTLK7",85,0)
 ... I $D(^XTMP("DPTLK7 A24 IN-PROCESS",DGDFN)) W "." H 1 Q
"RTN","DPTLK7",86,0)
 ... ;
"RTN","DPTLK7",87,0)
 ... ; not sending, maybe already sent or it is turned off
"RTN","DPTLK7",88,0)
 ... I 'DGDONE  S DGDONE=1 D  W "." H 1 Q
"RTN","DPTLK7",89,0)
 .... I $$QRY^DGENQRY(DGDFN) W !,"Enrollment/Eligibility Query processing "
"RTN","DPTLK7",90,0)
 ... ;
"RTN","DPTLK7",91,0)
 ... ; check for status until it is returned, end with set to 60 seconds
"RTN","DPTLK7",92,0)
 ... S DGQRY=$$GET^DGENQRY($$FINDLAST^DGENQRY($G(DGDFN)),.DGQRY) I $G(DGQRY("STATUS"))>2 S DGTIME=60,DGQSTAT=1 Q
"RTN","DPTLK7",93,0)
 ... W "." H 1
"RTN","DPTLK7",94,0)
 .. I 'DGQSTAT D
"RTN","DPTLK7",95,0)
 ... W !,"Query to ES timed out, proceeding with registration."
"RTN","DPTLK7",96,0)
 ... W !,"The data will be uploaded when received."
"RTN","DPTLK7",97,0)
 .. W !!
"RTN","DPTLK7",98,0)
 ;
"RTN","DPTLK7",99,0)
 ; no one selected but may still need to add based on traits entered
"RTN","DPTLK7",100,0)
 I DGKEYREQ,'$D(^XUSEC("DG MVI ADD PT",DUZ)) D
"RTN","DPTLK7",101,0)
 . W !,"The search returned one or more patients above the Auto-Link threshold,"
"RTN","DPTLK7",102,0)
 . W !,"none of them selected. Security key required to add without selection."
"RTN","DPTLK7",103,0)
 E  D
"RTN","DPTLK7",104,0)
 . N DPTDFN,DPTX,Y,%,%Y,DGMPIR
"RTN","DPTLK7",105,0)
 . M DGMPIR(1)=DGMPI
"RTN","DPTLK7",106,0)
 . S DPTX=$G(DGFLDS(.01)) D ASKADD^DPTLK2 I DPTDFN'>0 S DGDFN=0 Q
"RTN","DPTLK7",107,0)
 . S DGDFN=$$ADD(.DGFLDS,.DG20NAME) Q:'DGDFN
"RTN","DPTLK7",108,0)
 . S DGMPIR(+$O(DGMPIR(0)),"DFN")=DGDFN
"RTN","DPTLK7",109,0)
 . S DGMPIR("AddType")=$S(DGKEYREQ:"Explicit",1:"Implicit")
"RTN","DPTLK7",110,0)
 . S DGMPIR("mcid")=DGMCID
"RTN","DPTLK7",111,0)
 . D MPIADD(.DGMPIR)
"RTN","DPTLK7",112,0)
 ;
"RTN","DPTLK7",113,0)
QUIT Q $S(DGDFN:DGDFN,1:0)
"RTN","DPTLK7",114,0)
 ;
"RTN","DPTLK7",115,0)
MPIADD(DGMPIR) ; - call to add patient to the MPI and store ICN locally
"RTN","DPTLK7",116,0)
 ; - web service call for adding and getting new ICN
"RTN","DPTLK7",117,0)
 I '$G(DGMPIR(+$O(DGMPIR(0)),"ICN")) D
"RTN","DPTLK7",118,0)
 . W !,"Adding patient to the MVI..."
"RTN","DPTLK7",119,0)
 . N DGMPIICN
"RTN","DPTLK7",120,0)
 . I '$D(DGMPIR("AddType")) S DGMPIR("AddType")="Implicit"
"RTN","DPTLK7",121,0)
 . D GETICN^MPIFXMLI(.DGMPIICN,.DGMPIR)
"RTN","DPTLK7",122,0)
 . I $G(DGMPIICN("ICN"))>0 S DGMPIR(+$O(DGMPIR(0)),"ICN")=DGMPIICN("ICN")
"RTN","DPTLK7",123,0)
 . E  D  Q
"RTN","DPTLK7",124,0)
 .. W !,"Unable to add to MVI!",!,$G(DGMPIICN("ERRTXT")),!
"RTN","DPTLK7",125,0)
 .. S ^XTMP("MPIF EXPLICIT QUEUE",0)=$$FMADD^XLFDT(DT,60)_"^"_DT_"^MPIF EXPLICIT QUEUE"
"RTN","DPTLK7",126,0)
 .. S ^XTMP("MPIF EXPLICIT QUEUE",DGDFN)=DT_"^"_DGMPIR("AddType")_"^"_$G(DGMPIR(+$O(DGMPIR(0)),"mcid"))_"^"_$G(DGMPIICN("ERRTXT"))
"RTN","DPTLK7",127,0)
 .. S X=$$ICNLC^MPIF001(DGDFN)
"RTN","DPTLK7",128,0)
 ;
"RTN","DPTLK7",129,0)
 ; - need to have MPI do MPI fields
"RTN","DPTLK7",130,0)
 S ^XTMP("DPTLK7 A24 IN-PROCESS",0)=$$FMADD^XLFDT(DT,10)_"^"_DT_"^TRACK PROCESSING OF A24 MESSAGES"
"RTN","DPTLK7",131,0)
 S ^XTMP("DPTLK7 A24 IN-PROCESS",DGDFN)=DT
"RTN","DPTLK7",132,0)
 I $G(DGMPIR(+$O(DGMPIR(0)),"ICN")) D VIC40^MPIFAPI(DGDFN,DGMPIR(+$O(DGMPIR(0)),"ICN"))
"RTN","DPTLK7",133,0)
 Q
"RTN","DPTLK7",134,0)
 ;
"RTN","DPTLK7",135,0)
NAME(DGX,DG20NAME,DGOUT) ;- ask for name components
"RTN","DPTLK7",136,0)
 N DGC,DGCL,DGCOM,DGCX,DGI,DGY,DIR,X,DGCOMP
"RTN","DPTLK7",137,0)
START S DGOUT=0
"RTN","DPTLK7",138,0)
 S DGCOM="FAMILY^GIVEN^MIDDLE^PREFIX^SUFFIX^DEGREE"
"RTN","DPTLK7",139,0)
 S DGCX=" (LAST) NAME^ (FIRST) NAME^ NAME"
"RTN","DPTLK7",140,0)
 S DGCL="1:35^1:25^1:25^1:10^1:10^1:10"
"RTN","DPTLK7",141,0)
 I $G(DGX)'?9N S DGX=$G(DGX) D STDNAME^XLFNAME(.DGX,"C")
"RTN","DPTLK7",142,0)
 S DGX("SUFFIX")=$$CLEANC^XLFNAME(DGX("SUFFIX"))
"RTN","DPTLK7",143,0)
 M DG20NAME=DGX
"RTN","DPTLK7",144,0)
 S DIR("PRE")="D:X'=""@"" NCEVAL^DPTNAME1(DGCOMP,.X)"
"RTN","DPTLK7",145,0)
 W !,"Patient name components--"
"RTN","DPTLK7",146,0)
 F DGI=1:1:6 S DGC($P(DGCOM,U,DGI),DGI)=""
"RTN","DPTLK7",147,0)
 F DGI=1:1:6 Q:DGOUT  D
"RTN","DPTLK7",148,0)
AGAIN .S DGCOMP=$P(DGCOM,U,DGI)
"RTN","DPTLK7",149,0)
 . S DIR("A")=DGCOMP_$P(DGCX,U,DGI)
"RTN","DPTLK7",150,0)
 . S DIR(0)=$S(DGI=1:"F^"_$P(DGCL,U,DGI),1:"FO^"_$P(DGCL,U,DGI))
"RTN","DPTLK7",151,0)
 . S DIR("PRE")="D NCEVAL^DPTNAME1(DGCOMP,.X)"
"RTN","DPTLK7",152,0)
 . S DIR("B")=$S($D(DG20NAME(DGCOMP)):DG20NAME(DGCOMP),1:$G(DGX(DGCOMP)))
"RTN","DPTLK7",153,0)
 . K:'$L(DIR("B")) DIR("B")
"RTN","DPTLK7",154,0)
ASK . D ^DIR I $D(DTOUT)!(X=U) S DGOUT=1 Q
"RTN","DPTLK7",155,0)
 . I $A(X)=94 D JUMP^DPTNAME1(.DGI) G AGAIN
"RTN","DPTLK7",156,0)
 . I X="@",DGI=1 W !,$C(7),"Family name cannot be deleted!" G ASK
"RTN","DPTLK7",157,0)
 . I X="@" S DG20NAME(DGCOMP)="" Q
"RTN","DPTLK7",158,0)
 . Q:'$L(X)
"RTN","DPTLK7",159,0)
 . S DG20NAME=X
"RTN","DPTLK7",160,0)
 . I DGCOMP="SUFFIX" S DG20NAME=$$CLEANC^XLFNAME(DG20NAME)
"RTN","DPTLK7",161,0)
 . S DG20NAME=$$FORMAT^XLFNAME7(DG20NAME,1,35,,3,,1,1)
"RTN","DPTLK7",162,0)
 . I '$L(DG20NAME) W "  ??",$C(7) G ASK
"RTN","DPTLK7",163,0)
 . W:DG20NAME'=X "   (",DG20NAME,")" S DG20NAME(DGCOMP)=DG20NAME
"RTN","DPTLK7",164,0)
 Q:DGOUT ""
"RTN","DPTLK7",165,0)
 ; Reconstruct name
"RTN","DPTLK7",166,0)
 S DG20NAME=$$NAMEFMT^XLFNAME(.DG20NAME,"F","CFL30")
"RTN","DPTLK7",167,0)
 ; Format the .01 value
"RTN","DPTLK7",168,0)
 M DGY=DG20NAME
"RTN","DPTLK7",169,0)
 S DG20NAME=$$FORMAT^XLFNAME7(.DGY,3,30,,2)
"RTN","DPTLK7",170,0)
 ; Check the length
"RTN","DPTLK7",171,0)
 I $L(DG20NAME)<3 D  G START
"RTN","DPTLK7",172,0)
 . W !,"Invalid values to use, full name must be at least 3 characters!",$C(7)
"RTN","DPTLK7",173,0)
 . K DG20NAME,DGX,DGCOMP
"RTN","DPTLK7",174,0)
 Q
"RTN","DPTLK7",175,0)
 ;
"RTN","DPTLK7",176,0)
ADDRESS(DGFLDS,DGOUT) ;- prompt for address
"RTN","DPTLK7",177,0)
 N DGRET,FSTR
"RTN","DPTLK7",178,0)
 ;.111 STREET ADDRESS [LINE 1] (both, free text)
"RTN","DPTLK7",179,0)
 ;.112 STREET ADDRESS [LINE 2] (both, free text)
"RTN","DPTLK7",180,0)
 ;.113 STREET ADDRESS [LINE 3] (both, free text)
"RTN","DPTLK7",181,0)
 ;.114 CITY (both, free text)
"RTN","DPTLK7",182,0)
 ;.115 STATE (external^internal)
"RTN","DPTLK7",183,0)
 ;.116 ZIP CODE (both, free text)
"RTN","DPTLK7",184,0)
 ;.117 COUNTY (external^internal^code)
"RTN","DPTLK7",185,0)
 ;.1171 PROVINCE (both, free text)
"RTN","DPTLK7",186,0)
 ;.1172 POSTAL CODE (both, free text)
"RTN","DPTLK7",187,0)
 ;.1112 ZIP+4 (both, free text)
"RTN","DPTLK7",188,0)
 ;.1173 COUNTRY (external^internal)
"RTN","DPTLK7",189,0)
 ;.121 BAD ADDRESS INDICATOR (external^internal)
"RTN","DPTLK7",190,0)
 W !,"Patient address--"
"RTN","DPTLK7",191,0)
 D EN^DGREGAED(,,,.DGRET)
"RTN","DPTLK7",192,0)
 ; address doesn't prompt for phone but returns it, don't want
"RTN","DPTLK7",193,0)
 ; to overwrite
"RTN","DPTLK7",194,0)
 K DGRET(.131)
"RTN","DPTLK7",195,0)
 M DGFLDS=DGRET
"RTN","DPTLK7",196,0)
 Q
"RTN","DPTLK7",197,0)
FLDS(DGFLDS,DGNAME,DGOUT) ;- prompt for the various FM fields
"RTN","DPTLK7",198,0)
 ; Data returned in array
"RTN","DPTLK7",199,0)
 ;DGFLDS(.09)=SSN*
"RTN","DPTLK7",200,0)
 ;DGFLDS(.03)=DOB*
"RTN","DPTLK7",201,0)
 ;DGFLDS(.02)=GENDER*
"RTN","DPTLK7",202,0)
 ;DGFLDS(.2403)=MMN
"RTN","DPTLK7",203,0)
 ;DGFLDS(.092)=POB (city)
"RTN","DPTLK7",204,0)
 ;DGFLDS(.093)=POB (state)
"RTN","DPTLK7",205,0)
 ;DGFLDS(994)=MBI
"RTN","DPTLK7",206,0)
 ;DGFLDS(.131)=PHONE
"RTN","DPTLK7",207,0)
 ;DGFLDS("EDIPI")=EDIPI
"RTN","DPTLK7",208,0)
 ;
"RTN","DPTLK7",209,0)
 W !,"Patient identifiers--"
"RTN","DPTLK7",210,0)
 ; SSN is special handling
"RTN","DPTLK7",211,0)
 N DGFLD,DIR,X,Y,DG20NAME
"RTN","DPTLK7",212,0)
 S DIR(0)="F^1:9^K:X'?9N&(X'=""P"")&(X'=""p"") X"
"RTN","DPTLK7",213,0)
 S DIR("A")="SOCIAL SECURITY NUMBER"
"RTN","DPTLK7",214,0)
 S:$D(DGFLDS(.09)) DIR("B")=DGFLDS(.09)
"RTN","DPTLK7",215,0)
 S DIR("?")="Answer with the individual's social security, must be 9 numbers or 'P'."
"RTN","DPTLK7",216,0)
 D ^DIR
"RTN","DPTLK7",217,0)
 I $D(DUOUT) S DGOUT=1 Q
"RTN","DPTLK7",218,0)
 S DGFLDS(.09)=X
"RTN","DPTLK7",219,0)
 K DIR
"RTN","DPTLK7",220,0)
 ; prompt for EDIPI value before the FM fields
"RTN","DPTLK7",221,0)
 ;S DIR(0)="FO^10^K:X'?10N X"
"RTN","DPTLK7",222,0)
 ;S DIR("A")="EDIPI"
"RTN","DPTLK7",223,0)
 ;S DIR("?")="Answer with the individual's EDIPI, must be 10 numbers."
"RTN","DPTLK7",224,0)
 ;D ^DIR
"RTN","DPTLK7",225,0)
 ;I $D(DUOUT) S DGOUT=1 Q
"RTN","DPTLK7",226,0)
 ;S DGFLDS("EDIPI")=X
"RTN","DPTLK7",227,0)
 ;K DIR
"RTN","DPTLK7",228,0)
 F DGFLD=.03,.02,.2403,.092,.093,994,.131 D  Q:$D(DTOUT)!($D(DUOUT))
"RTN","DPTLK7",229,0)
 . S DIR(0)="2,"_DGFLD_$S(DGFLD=.03:"",DGFLD=.02:"",1:"O")
"RTN","DPTLK7",230,0)
 . D ^DIR
"RTN","DPTLK7",231,0)
 . Q:$D(DIRUT)
"RTN","DPTLK7",232,0)
 . S DGFLDS(DGFLD)=$P(Y,"^")
"RTN","DPTLK7",233,0)
 S:$D(DTOUT)!($D(DUOUT)) DGOUT=1
"RTN","DPTLK7",234,0)
 I $L($G(DGNAME)) S DGFLDS(.01)=DGNAME
"RTN","DPTLK7",235,0)
 Q
"RTN","DPTLK7",236,0)
 ;
"RTN","DPTLK7",237,0)
FORMAT(DGR,DGN,DGF) ; - format data for MPI call
"RTN","DPTLK7",238,0)
 N X
"RTN","DPTLK7",239,0)
 S:$G(DGN("FAMILY"))]"" DGR("Surname")=DGN("FAMILY")
"RTN","DPTLK7",240,0)
 S:$G(DGN("GIVEN"))]"" DGR("FirstName")=DGN("GIVEN")
"RTN","DPTLK7",241,0)
 S:$G(DGN("MIDDLE"))]"" DGR("MiddleName")=DGN("MIDDLE")
"RTN","DPTLK7",242,0)
 S:$G(DGN("SUFFIX"))]"" DGR("Suffix")=DGN("SUFFIX")
"RTN","DPTLK7",243,0)
 S:$G(DGN("PREFIX"))]"" DGR("Prefix")=DGN("PREFIX")
"RTN","DPTLK7",244,0)
 S:$G(DGN("DEGREE"))]"" DGR("Degree")=DGN("DEGREE")
"RTN","DPTLK7",245,0)
 S:$G(DGF(.02))]"" DGR("Gender")=DGF(.02)
"RTN","DPTLK7",246,0)
 S:$G(DGF(.03))]"" DGR("DOB")=DGF(.03)
"RTN","DPTLK7",247,0)
 I $G(DGF(.09))]"",DGF(.09)'="P",DGF(.09)'="p" S DGR("SSN")=DGF(.09)
"RTN","DPTLK7",248,0)
 S:$G(DGF(.2403))]"" DGR("MMN")=DGF(.2403)
"RTN","DPTLK7",249,0)
 S:$G(DGF(.092))]"" DGR("POBCity")=DGF(.092)
"RTN","DPTLK7",250,0)
 S:$G(DGF(.093)) DGR("POBState")=$P($G(^DIC(5,DGF(.093),0)),"^",2)
"RTN","DPTLK7",251,0)
 S:$G(DGF(994))]"" DGR("MBI")=DGF(994)
"RTN","DPTLK7",252,0)
 S:$G(DGF(.131))]"" DGR("ResPhone")=DGF(.131)
"RTN","DPTLK7",253,0)
 S:$D(DGF("EDIPI")) DGR("EDIPI")=DGF("EDIPI")
"RTN","DPTLK7",254,0)
 ;
"RTN","DPTLK7",255,0)
 ; only include address if deliverable
"RTN","DPTLK7",256,0)
 I $G(DGF(.121))]"" D
"RTN","DPTLK7",257,0)
 . S:$G(DGF(.111))]"" DGR("ResAddL1")=DGF(.111)
"RTN","DPTLK7",258,0)
 . S:$G(DGF(.1112))]"" DGR("ResAddZip4")=DGF(.1112)
"RTN","DPTLK7",259,0)
 . S:$G(DGF(.112))]"" DGR("ResAddL2")=DGF(.112)
"RTN","DPTLK7",260,0)
 . S:$G(DGF(.113))]"" DGR("ResAddL3")=DGF(.113)
"RTN","DPTLK7",261,0)
 . S:$G(DGF(.114))]"" DGR("CITY")=DGF(.114)
"RTN","DPTLK7",262,0)
 . S:$P($G(DGF(.115)),"^",2) DGR("ResAddState")=$P($G(^DIC(5,$P(DGF(.115),"^",2),0)),"^",2)
"RTN","DPTLK7",263,0)
 . S:$G(DGF(.1171))]"" DGR("ResAddProvince")=DGF(.1171)
"RTN","DPTLK7",264,0)
 . S:$G(DGF(.1172))]"" DGR("ResAddPCode")=DGF(.1172)
"RTN","DPTLK7",265,0)
 . S:$P($G(DGF(.1173)),"^")]"" DGR("ResAddCountry")=$P(DGF(.1173),"^")
"RTN","DPTLK7",266,0)
 Q
"RTN","DPTLK7",267,0)
 ;
"RTN","DPTLK7",268,0)
FORMATR(DGF,DGM,DG20NAME) ; - merge MPI and user input (MPI authorative)
"RTN","DPTLK7",269,0)
 N DGX,DGY,DGZ
"RTN","DPTLK7",270,0)
 S DGX=$O(DGM(0)) Q:'DGX
"RTN","DPTLK7",271,0)
 S DG20NAME("FAMILY")=$G(DGM(DGX,"Surname"))
"RTN","DPTLK7",272,0)
 S DG20NAME("GIVEN")=$G(DGM(DGX,"FirstName"))
"RTN","DPTLK7",273,0)
 S DG20NAME("MIDDLE")=$G(DGM(DGX,"MiddleName"))
"RTN","DPTLK7",274,0)
 S DG20NAME("PREFIX")=$G(DGM(DGX,"Prefix"))
"RTN","DPTLK7",275,0)
 S DG20NAME("SUFFIX")=$G(DGM(DGX,"Suffix"))
"RTN","DPTLK7",276,0)
 S DG20NAME("DEGREE")=$G(DGM(DGX,"Degree"))
"RTN","DPTLK7",277,0)
 ;Reconstruct name
"RTN","DPTLK7",278,0)
 S DG20NAME=$$NAMEFMT^XLFNAME(.DG20NAME,"F","CFL30")
"RTN","DPTLK7",279,0)
 ;Format the .01 value
"RTN","DPTLK7",280,0)
 M DGY=DG20NAME
"RTN","DPTLK7",281,0)
 S DGF(.01)=$$FORMAT^XLFNAME7(.DGY,3,30,,2)
"RTN","DPTLK7",282,0)
 S DGF(.02)=$G(DGM(DGX,"Gender"))
"RTN","DPTLK7",283,0)
 S DGF(.03)=$G(DGM(DGX,"DOB"))
"RTN","DPTLK7",284,0)
 S DGF(.09)=$G(DGM(DGX,"SSN"))
"RTN","DPTLK7",285,0)
 S DGF(.2403)=$G(DGM(DGX,"MMN"))
"RTN","DPTLK7",286,0)
 S DGF(.092)=$G(DGM(DGX,"POBCity"))
"RTN","DPTLK7",287,0)
 S DGY=$S($G(DGM(DGX,"POBState"))]"":$O(^DIC(5,"C",DGM(DGX,"POBState"),0)),1:"")
"RTN","DPTLK7",288,0)
 S DGF(.093)=DGY
"RTN","DPTLK7",289,0)
 S:$G(DGM(DGX,"ResAddL1"))]"" DGF(.111)=DGM(DGX,"ResAddL1")
"RTN","DPTLK7",290,0)
 S:$G(DGM(DGX,"ResAddL2"))]"" DGF(.112)=DGM(DGX,"ResAddL2")
"RTN","DPTLK7",291,0)
 S:$G(DGM(DGX,"ResAddL3"))]"" DGF(.113)=DGM(DGX,"ResAddL3")
"RTN","DPTLK7",292,0)
 S:$G(DGM(DGX,"City"))]"" DGF(.114)=DGM(DGX,"City")
"RTN","DPTLK7",293,0)
 S:$G(DGM(DGX,"ResAddCity"))]"" DGF(.114)=DGM(DGX,"ResAddCity")
"RTN","DPTLK7",294,0)
 ;
"RTN","DPTLK7",295,0)
 S DGY=$S($G(DGM(DGX,"ResAddState"))]"":$O(^DIC(5,"C",DGM(DGX,"ResAddState"),0)),1:"")
"RTN","DPTLK7",296,0)
 S:DGY DGF(.115)=DGY
"RTN","DPTLK7",297,0)
 S DGY=$S($G(DGM(DGX,"Country"))]"":$O(^HL(779.004,"B",DGM(DGX,"Country"),0)),1:"")
"RTN","DPTLK7",298,0)
 S:DGY DGF(.1173)=DGY
"RTN","DPTLK7",299,0)
 S DGY=$S($G(DGM(DGX,"ResAddCountry"))]"":$O(^HL(779.004,"B",DGM(DGX,"ResAddCountry"),0)),1:"")
"RTN","DPTLK7",300,0)
 S:DGY DGF(.1173)=DGY
"RTN","DPTLK7",301,0)
 S:$G(DGM(DGX,"PCode"))]"" DGF(.1172)=DGM(DGX,"PCode")
"RTN","DPTLK7",302,0)
 S:$G(DGM(DGX,"ResAddPCode"))]"" DGF(.1172)=DGM(DGX,"ResAddPCode")
"RTN","DPTLK7",303,0)
 S:$G(DGM(DGX,"Province"))]"" DGF(.1171)=DGM(DGX,"Province")
"RTN","DPTLK7",304,0)
 S:$G(DGM(DGX,"ResAddProvince"))]"" DGF(.1171)=DGM(DGX,"ResAddProvince")
"RTN","DPTLK7",305,0)
 S:$G(DGM(DGX,"ResAddZip4"))]"" DGF(.1112)=DGM(DGX,"ResAddZip4")
"RTN","DPTLK7",306,0)
 S:$G(DGM(DGX,"ResPhone"))]"" DGF(.131)=DGM(DGX,"ResPhone")
"RTN","DPTLK7",307,0)
 I $G(DGF(.1112)) D
"RTN","DPTLK7",308,0)
 . N DGX,DGCNTY
"RTN","DPTLK7",309,0)
 . D POSTAL^XIPUTIL(DGF(.1112),.DGX)
"RTN","DPTLK7",310,0)
 . I $G(DGX("FIPS CODE"))]"",$G(DGX("STATE POINTER")) D
"RTN","DPTLK7",311,0)
 .. S DGCNTY=$$FIND1^DIC(5.01,","_DGX("STATE POINTER")_",","MOXQ",$E($G(DGX("FIPS CODE")),3,5),"C")
"RTN","DPTLK7",312,0)
 . I $D(DGCNTY) S DGF(.117)=DGCNTY
"RTN","DPTLK7",313,0)
 ; alias loop
"RTN","DPTLK7",314,0)
 S DGZ=0 F  S DGZ=$O(DGM(DGX,"ALIAS",DGZ)) Q:'DGZ  D
"RTN","DPTLK7",315,0)
 . N DGY,DG20NAME
"RTN","DPTLK7",316,0)
 . I $G(DGM(DGX,"ALIAS",DGZ,"Surname"))]"" D
"RTN","DPTLK7",317,0)
 .. S DG20NAME("FAMILY")=$G(DGM(DGX,"ALIAS",DGZ,"Surname"))
"RTN","DPTLK7",318,0)
 .. S DG20NAME("GIVEN")=$G(DGM(DGX,"ALIAS",DGZ,"FirstName"))
"RTN","DPTLK7",319,0)
 .. S DG20NAME("MIDDLE")=$G(DGM(DGX,"ALIAS",DGZ,"MiddleName"))
"RTN","DPTLK7",320,0)
 .. S DG20NAME("PREFIX")=$G(DGM(DGX,"ALIAS",DGZ,"Prefix"))
"RTN","DPTLK7",321,0)
 .. S DG20NAME("SUFFIX")=$G(DGM(DGX,"ALIAS",DGZ,"Suffix"))
"RTN","DPTLK7",322,0)
 .. S DG20NAME("DEGREE")=$G(DGM(DGX,"ALIAS",DGZ,"Degree"))
"RTN","DPTLK7",323,0)
 .. ;Reconstruct name
"RTN","DPTLK7",324,0)
 .. S DG20NAME=$$NAMEFMT^XLFNAME(.DG20NAME,"F","CFL30")
"RTN","DPTLK7",325,0)
 .. ;Format the .01 value
"RTN","DPTLK7",326,0)
 .. M DGY=DG20NAME
"RTN","DPTLK7",327,0)
 .. S DGF("ALIAS",DGZ,.01)=$$FORMAT^XLFNAME7(.DGY,3,30,,2)
"RTN","DPTLK7",328,0)
 . I $G(DGM(DGX,"ALIAS",DGZ,"SSN"))]"" S DGF("ALIAS",DGZ,1)=DGM(DGX,"ALIAS",DGZ,"SSN")
"RTN","DPTLK7",329,0)
 S:$G(DGM(DGX,"ICN"))]"" DGF("ICN")=DGM(DGX,"ICN")
"RTN","DPTLK7",330,0)
 ;
"RTN","DPTLK7",331,0)
 ; - hanle pseudo SSN
"RTN","DPTLK7",332,0)
 I $G(DGF(.09))'?9N S DGF(.09)=$$PSEUDO($G(DGF(.01)),$G(DGF(.03)))
"RTN","DPTLK7",333,0)
 ;
"RTN","DPTLK7",334,0)
 Q
"RTN","DPTLK7",335,0)
ADD(DGF,DG20NAME) ; - stuff in patient
"RTN","DPTLK7",336,0)
 ; Pass in the fields to set in the DGF array.
"RTN","DPTLK7",337,0)
 ; Alaso Name components in DG20NAME array.  Returns new DFN
"RTN","DPTLK7",338,0)
 N X,Y,SAVY,FDA,IEN,DATA,DO,DIC,DA,X,DLAYGO,REQ,VAFCNO,DGY,DPTX
"RTN","DPTLK7",339,0)
 I $E($G(DGF(.09)),1,9)'?9N S DGF(.09)=$$PSEUDO(DGF(.01),$G(DGF(.03)))
"RTN","DPTLK7",340,0)
 ; check for SSN already exist
"RTN","DPTLK7",341,0)
 S DGY=$O(^DPT("SSN",DGF(.09),0)) I DGY>0,$D(^DPT(DGY,0)) W *7,"  SSN Already used by patient '",$P(^(0),"^"),"'." Q 0
"RTN","DPTLK7",342,0)
 ;
"RTN","DPTLK7",343,0)
 S DIC("DR")="",REQ="^.02^.03^.09^"
"RTN","DPTLK7",344,0)
 S DGF=.01 F  S DGF=$O(DGF(DGF)) Q:'DGF  D
"RTN","DPTLK7",345,0)
 . ; if the data has a second piece, then that's interal value to use
"RTN","DPTLK7",346,0)
 . S DATA=$S($P(DGF(DGF),"^",2):$P(DGF(DGF),"^",2),1:DGF(DGF))
"RTN","DPTLK7",347,0)
 . I DATA]""!(REQ[("^"_DGF_"^")) S DIC("DR")=DIC("DR")_DGF_$S(DATA]"":"////"_DATA,1:"")_";"
"RTN","DPTLK7",348,0)
 ; patient type
"RTN","DPTLK7",349,0)
 S DIC("DR")=DIC("DR")_"391///"_$O(^DG(391,"B","NSC VETERAN",0))_";"
"RTN","DPTLK7",350,0)
 ; veteran
"RTN","DPTLK7",351,0)
 S DIC("DR")=DIC("DR")_"1901///Y;"
"RTN","DPTLK7",352,0)
 ; SC
"RTN","DPTLK7",353,0)
 S DIC("DR")=DIC("DR")_".301///N;"
"RTN","DPTLK7",354,0)
 ; date added
"RTN","DPTLK7",355,0)
 S DIC("DR")=DIC("DR")_".097////"_DT
"RTN","DPTLK7",356,0)
 ;
"RTN","DPTLK7",357,0)
 S X=DGF(.01),DIC="^DPT(",DIC(0)="L",DLAYGO=2,VAFCNO=1
"RTN","DPTLK7",358,0)
 D FILE^DICN
"RTN","DPTLK7",359,0)
 S SAVY=+Y
"RTN","DPTLK7",360,0)
 ;
"RTN","DPTLK7",361,0)
 ; alias
"RTN","DPTLK7",362,0)
 S X=0 F  S X=$O(DGF("ALIAS",X)) Q:'X  D
"RTN","DPTLK7",363,0)
 . S DGF=0 F  S DGF=$O(DGF("ALIAS",X,DGF)) Q:'DGF  D
"RTN","DPTLK7",364,0)
 .. S FDA(2.01,"+"_X_","_SAVY_",",.01)=DGF("ALIAS",X,.01)
"RTN","DPTLK7",365,0)
 .. S:DGF("ALIAS",X,1)]"" FDA(2.01,"+"_X_","_SAVY_",",1)=DGF("ALIAS",X,1)
"RTN","DPTLK7",366,0)
 ;
"RTN","DPTLK7",367,0)
 I $D(FDA) D
"RTN","DPTLK7",368,0)
 . N DG20NAME
"RTN","DPTLK7",369,0)
 . D UPDATE^DIE("","FDA")
"RTN","DPTLK7",370,0)
 ;
"RTN","DPTLK7",371,0)
 Q SAVY
"RTN","DPTLK7",372,0)
 ;
"RTN","DPTLK7",373,0)
ADDREQ(DGFLDS) ; - determine if enough address data entered
"RTN","DPTLK7",374,0)
 ; returns OK to proceed (1) or not (0)
"RTN","DPTLK7",375,0)
 N DGOK,FIELD
"RTN","DPTLK7",376,0)
 S DGOK=1
"RTN","DPTLK7",377,0)
 ; is US or foreign
"RTN","DPTLK7",378,0)
 I $$FOR^DGADDUTL($P(DGFLDS(.1173),"^")) D
"RTN","DPTLK7",379,0)
 . F FIELD=.111,.114,.1171,.1172 S:$G(DGFLDS(FIELD))']"" DGOK=0
"RTN","DPTLK7",380,0)
 E  F FIELD=.111,.1112,.114,.115 S:$G(DGFLDS(FIELD))']"" DGOK=0
"RTN","DPTLK7",381,0)
 I $L($G(DGFLDS(.131))) S DGOK=1
"RTN","DPTLK7",382,0)
 Q DGOK
"RTN","DPTLK7",383,0)
 ;
"RTN","DPTLK7",384,0)
PSEUDO(NAM,DOB) ; - return pseudo ssn
"RTN","DPTLK7",385,0)
 N L1,L2,L3,Z
"RTN","DPTLK7",386,0)
 S NAM=$G(DGF(.01)),DOB=$G(DGF(.03))
"RTN","DPTLK7",387,0)
 I DOB="" S DOB=2000000
"RTN","DPTLK7",388,0)
 S L1=$E($P(NAM," ",2),1),L3=$E(NAM,1),NAM=$P(NAM,",",2),L2=$E(NAM,1)
"RTN","DPTLK7",389,0)
 S Z=L1 D CON^DGRPDD1 S L1=Z,Z=L2 D CON^DGRPDD1
"RTN","DPTLK7",390,0)
 S L2=Z,Z=L3 D CON^DGRPDD1 S L3=Z
"RTN","DPTLK7",391,0)
 Q L2_L1_L3_$E(DOB,4,7)_$E(DOB,2,3)_"P"
"RTN","DPTLK7",392,0)
 ;
"VER")
8.0^22.0
"BLD",3126,6)
^799
**END**
**END**

