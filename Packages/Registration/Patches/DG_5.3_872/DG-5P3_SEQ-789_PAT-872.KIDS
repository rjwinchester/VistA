Released DG*5.3*872 SEQ #789
Extracted from mail message
**KIDS**:DG*5.3*872^

**INSTALL NAME**
DG*5.3*872
"BLD",9434,0)
DG*5.3*872^REGISTRATION^0^3140701^y
"BLD",9434,1,0)
^^6^6^3140516^
"BLD",9434,1,1,0)
Patch DG*5.3*872 addresses 2 issues:
"BLD",9434,1,2,0)
 
"BLD",9434,1,3,0)
       1.  APPOINTMENT TYPE SUB-CATEGORY field (#24) of the APPOINTMENT 
"BLD",9434,1,4,0)
           sub-file (#2.98) of the PATIENT file (#2) is not assigned
"BLD",9434,1,5,0)
           properly.
"BLD",9434,1,6,0)
       2.  Patient Address Update option is not displaying correctly.
"BLD",9434,4,0)
^9.64PA^^0
"BLD",9434,6.3)
28
"BLD",9434,"ABPKG")
n
"BLD",9434,"INI")

"BLD",9434,"INID")
^^
"BLD",9434,"KRN",0)
^9.67PA^779.2^20
"BLD",9434,"KRN",.4,0)
.4
"BLD",9434,"KRN",.401,0)
.401
"BLD",9434,"KRN",.402,0)
.402
"BLD",9434,"KRN",.403,0)
.403
"BLD",9434,"KRN",.5,0)
.5
"BLD",9434,"KRN",.84,0)
.84
"BLD",9434,"KRN",3.6,0)
3.6
"BLD",9434,"KRN",3.8,0)
3.8
"BLD",9434,"KRN",9.2,0)
9.2
"BLD",9434,"KRN",9.8,0)
9.8
"BLD",9434,"KRN",9.8,"NM",0)
^9.68A^3^2
"BLD",9434,"KRN",9.8,"NM",2,0)
DGSAUTL^^0^B23374835
"BLD",9434,"KRN",9.8,"NM",3,0)
DGADDUTL^^0^B57456144
"BLD",9434,"KRN",9.8,"NM","B","DGADDUTL",3)

"BLD",9434,"KRN",9.8,"NM","B","DGSAUTL",2)

"BLD",9434,"KRN",19,0)
19
"BLD",9434,"KRN",19.1,0)
19.1
"BLD",9434,"KRN",101,0)
101
"BLD",9434,"KRN",409.61,0)
409.61
"BLD",9434,"KRN",771,0)
771
"BLD",9434,"KRN",779.2,0)
779.2
"BLD",9434,"KRN",870,0)
870
"BLD",9434,"KRN",8989.51,0)
8989.51
"BLD",9434,"KRN",8989.52,0)
8989.52
"BLD",9434,"KRN",8994,0)
8994
"BLD",9434,"KRN","B",.4,.4)

"BLD",9434,"KRN","B",.401,.401)

"BLD",9434,"KRN","B",.402,.402)

"BLD",9434,"KRN","B",.403,.403)

"BLD",9434,"KRN","B",.5,.5)

"BLD",9434,"KRN","B",.84,.84)

"BLD",9434,"KRN","B",3.6,3.6)

"BLD",9434,"KRN","B",3.8,3.8)

"BLD",9434,"KRN","B",9.2,9.2)

"BLD",9434,"KRN","B",9.8,9.8)

"BLD",9434,"KRN","B",19,19)

"BLD",9434,"KRN","B",19.1,19.1)

"BLD",9434,"KRN","B",101,101)

"BLD",9434,"KRN","B",409.61,409.61)

"BLD",9434,"KRN","B",771,771)

"BLD",9434,"KRN","B",779.2,779.2)

"BLD",9434,"KRN","B",870,870)

"BLD",9434,"KRN","B",8989.51,8989.51)

"BLD",9434,"KRN","B",8989.52,8989.52)

"BLD",9434,"KRN","B",8994,8994)

"BLD",9434,"QDEF")
^^^^NO^^^^^^YES
"BLD",9434,"QUES",0)
^9.62^^
"BLD",9434,"REQB",0)
^9.611^3^2
"BLD",9434,"REQB",2,0)
DG*5.3*851^2
"BLD",9434,"REQB",3,0)
DG*5.3*216^2
"BLD",9434,"REQB","B","DG*5.3*216",3)

"BLD",9434,"REQB","B","DG*5.3*851",2)

"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
872^3140701
"PKG",5,22,1,"PAH",1,1,0)
^^6^6^3140701
"PKG",5,22,1,"PAH",1,1,1,0)
Patch DG*5.3*872 addresses 2 issues:
"PKG",5,22,1,"PAH",1,1,2,0)
 
"PKG",5,22,1,"PAH",1,1,3,0)
       1.  APPOINTMENT TYPE SUB-CATEGORY field (#24) of the APPOINTMENT 
"PKG",5,22,1,"PAH",1,1,4,0)
           sub-file (#2.98) of the PATIENT file (#2) is not assigned
"PKG",5,22,1,"PAH",1,1,5,0)
           properly.
"PKG",5,22,1,"PAH",1,1,6,0)
       2.  Patient Address Update option is not displaying correctly.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","DGADDUTL")
0^3^B57456144^B57638537
"RTN","DGADDUTL",1,0)
DGADDUTL ;ALB/PHH,EG,BAJ,ERC,CKN,TDM,LBD-PATIENT ADDRESS ; 8/19/13 11:13am
"RTN","DGADDUTL",2,0)
 ;;5.3;Registration;**658,695,730,688,808,851,872**;Aug 13, 1993;Build 28
"RTN","DGADDUTL",3,0)
 Q
"RTN","DGADDUTL",4,0)
ADDR ; validate/edit Patient address (entry for DG ADDRESS UPDATE option)
"RTN","DGADDUTL",5,0)
 N %,QUIT,DIC,Y,DFN,USERSEL
"RTN","DGADDUTL",6,0)
ADDRLOOP ;
"RTN","DGADDUTL",7,0)
 W !!
"RTN","DGADDUTL",8,0)
 K DIC,Y,DFN,USERSEL
"RTN","DGADDUTL",9,0)
 S DIC="^DPT(",DIC(0)="AEMZQ",DIC("A")="Veteran Name/SSN: " D ^DIC
"RTN","DGADDUTL",10,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","DGADDUTL",11,0)
 Q:Y'>0
"RTN","DGADDUTL",12,0)
 ;
"RTN","DGADDUTL",13,0)
 S DFN=+Y,QUIT=0
"RTN","DGADDUTL",14,0)
 L +^DPT(DFN):3 E  W !!,"Patient is being edited. Try again later."  G ADDR
"RTN","DGADDUTL",15,0)
 F  D  Q:QUIT
"RTN","DGADDUTL",16,0)
 .W !!,"Do you want to update the (P)ermanent Address, (T)emporary Address, or (B)oth? "
"RTN","DGADDUTL",17,0)
 .R USERSEL:300
"RTN","DGADDUTL",18,0)
 .I '$T S USERSEL="^"
"RTN","DGADDUTL",19,0)
 .I USERSEL["^"!(USERSEL="") S QUIT=1 Q
"RTN","DGADDUTL",20,0)
 .S USERSEL=$TR(USERSEL,"ptb","PTB")
"RTN","DGADDUTL",21,0)
 .I USERSEL'="P",USERSEL'="T",USERSEL'="B" D  Q
"RTN","DGADDUTL",22,0)
 ..W !,"Invalid selection!"
"RTN","DGADDUTL",23,0)
 .I USERSEL="P"!(USERSEL="B") W ! D UPDATE(DFN,"PERM")
"RTN","DGADDUTL",24,0)
 .I USERSEL="T"!(USERSEL="B") D UPDATE(DFN,"TEMP")
"RTN","DGADDUTL",25,0)
 .S QUIT=1
"RTN","DGADDUTL",26,0)
 L -^DPT(DFN)
"RTN","DGADDUTL",27,0)
 G ADDRLOOP
"RTN","DGADDUTL",28,0)
ADD(DFN) ; validate/edit Patient address (entry point for routine DGREG)
"RTN","DGADDUTL",29,0)
 ;         Input  -- DFN
"RTN","DGADDUTL",30,0)
 ;
"RTN","DGADDUTL",31,0)
 N RETVAL,ADDYN
"RTN","DGADDUTL",32,0)
 ;Display the permanent address (DG*5.3*851)
"RTN","DGADDUTL",33,0)
 D DISPADD^DGADDUT2(DFN)
"RTN","DGADDUTL",34,0)
 S (RETVAL,ADDYN)=0
"RTN","DGADDUTL",35,0)
 F  D  Q:ADDYN
"RTN","DGADDUTL",36,0)
 .S ADDYN=$$ADDYN("Do you want to edit the Patient's Address")
"RTN","DGADDUTL",37,0)
 .S RETVAL=ADDYN
"RTN","DGADDUTL",38,0)
 .I ADDYN'=1,ADDYN'=2 S (ADDYN,RETVAL)=0
"RTN","DGADDUTL",39,0)
 .I 'ADDYN W !?5,"Enter 'YES' to edit Patient's Address or 'NO' to continue."
"RTN","DGADDUTL",40,0)
 I ADDYN=1,$G(DFN)'="",$D(^DPT(DFN,0)) D
"RTN","DGADDUTL",41,0)
 .D UPDATE(DFN,"PERM")
"RTN","DGADDUTL",42,0)
 .S RETVAL=1
"RTN","DGADDUTL",43,0)
 Q RETVAL
"RTN","DGADDUTL",44,0)
ADDYN(PROMPT) ; Yes/No Prompt to Edit/Validate Address
"RTN","DGADDUTL",45,0)
 ;         Input  -- None
"RTN","DGADDUTL",46,0)
 ;         Output --  1 = YES
"RTN","DGADDUTL",47,0)
 ;                    2 = NO
"RTN","DGADDUTL",48,0)
 ;                   -1 = Aborted
"RTN","DGADDUTL",49,0)
 ;
"RTN","DGADDUTL",50,0)
 N %
"RTN","DGADDUTL",51,0)
 W !,PROMPT
"RTN","DGADDUTL",52,0)
 D YN^DICN
"RTN","DGADDUTL",53,0)
 Q %
"RTN","DGADDUTL",54,0)
UPDATE(DFN,TYPE) ; Update the Address
"RTN","DGADDUTL",55,0)
 ;         Input  -- TYPE = "PERM" for Permanent Address
"RTN","DGADDUTL",56,0)
 ;                        = "TEMP" for Temporary Address
"RTN","DGADDUTL",57,0)
 ;         Output -- None
"RTN","DGADDUTL",58,0)
 ;         
"RTN","DGADDUTL",59,0)
 I TYPE'="PERM",TYPE'="TEMP" Q
"RTN","DGADDUTL",60,0)
 I TYPE="PERM" D
"RTN","DGADDUTL",61,0)
 .W !
"RTN","DGADDUTL",62,0)
 .N FLG S (FLG(1),FLG(2))=1
"RTN","DGADDUTL",63,0)
 .D ADDRED(DFN,.FLG)
"RTN","DGADDUTL",64,0)
 ;
"RTN","DGADDUTL",65,0)
 I TYPE="TEMP" D
"RTN","DGADDUTL",66,0)
 .D EDITTADR(DFN)
"RTN","DGADDUTL",67,0)
 Q
"RTN","DGADDUTL",68,0)
UPDDTTM(DFN,TYPE) ; Update the PATIENT file #2 with the current date and time
"RTN","DGADDUTL",69,0)
 ;
"RTN","DGADDUTL",70,0)
 D UPDDTTM^DGADDUT2(DFN,TYPE)
"RTN","DGADDUTL",71,0)
 Q
"RTN","DGADDUTL",72,0)
ADDRED(DFN,FLG) ; Address Edit (Code copied from DGREGAED and modified)
"RTN","DGADDUTL",73,0)
 ;Input:
"RTN","DGADDUTL",74,0)
 ;  DFN (required) - Internal Entry # of Patient File (#2)
"RTN","DGADDUTL",75,0)
 ;  FLG (optional) - Flags of 1 or 0; if null, 0 is assumed. Details:
"RTN","DGADDUTL",76,0)
 ;    FLG(1) - if 1, let user edit phone numbers (field #.131 and #.132)
"RTN","DGADDUTL",77,0)
 ;    FLG(2) - if 1, display before & after address for user confirmation
"RTN","DGADDUTL",78,0)
 N SRC,%,DGINPUT,I,X,Y
"RTN","DGADDUTL",79,0)
 S SRC="ADDUTL"
"RTN","DGADDUTL",80,0)
 D EN^DGREGAED(DFN,.FLG,SRC)
"RTN","DGADDUTL",81,0)
 ;
"RTN","DGADDUTL",82,0)
 ; Update the Date/Time Stamp
"RTN","DGADDUTL",83,0)
 ;The next line was disabled to fix problem of Date/Time stamp being
"RTN","DGADDUTL",84,0)
 ;updated even if no changes were made (DG*5.3*851).
"RTN","DGADDUTL",85,0)
 ;D UPDDTTM(DFN,TYPE)
"RTN","DGADDUTL",86,0)
 Q
"RTN","DGADDUTL",87,0)
GETPRIOR(DFN,DGPRIOR) ; Get prior address fields.
"RTN","DGADDUTL",88,0)
 N DGCURR,DGN,DGARRY,DGCIEN,DGST,DGCNTY
"RTN","DGADDUTL",89,0)
 D GETS^DIQ(2,DFN_",",".111;.112;.113;.114;.115;.117;.1112;.131;.132;.121;.118;.119;.12;.122;.1171:.1173","I","DGCURR")
"RTN","DGADDUTL",90,0)
 F DGN=.111,.112,.113,.114,.115,.117,.1112,.131,.132,.121,.118,.119,.12,.122,.1171,.1172,.1173 D
"RTN","DGADDUTL",91,0)
 . S DGARRY("OLD",DGN)=$G(DGCURR(2,DFN_",",DGN,"I"))
"RTN","DGADDUTL",92,0)
 M DGPRIOR=DGARRY("OLD")
"RTN","DGADDUTL",93,0)
 Q
"RTN","DGADDUTL",94,0)
GETUPDTS(DFN,DGINPUT) ; Get current address fields.
"RTN","DGADDUTL",95,0)
 N DGCURR,DGN,DGARRY
"RTN","DGADDUTL",96,0)
 D GETS^DIQ(2,DFN_",",".118;.119;.12;.122","I","DGCURR")
"RTN","DGADDUTL",97,0)
 F DGN=.118,.119,.12,.122 D
"RTN","DGADDUTL",98,0)
 . S DGARRY("NEW",DGN)=$G(DGCURR(2,DFN_",",DGN,"I"))
"RTN","DGADDUTL",99,0)
 M DGINPUT=DGARRY("NEW")
"RTN","DGADDUTL",100,0)
 Q
"RTN","DGADDUTL",101,0)
FILEYN(DGOLD,DGNEW) ; Determine whether or not to file to #301.7
"RTN","DGADDUTL",102,0)
 N RETVAL
"RTN","DGADDUTL",103,0)
 S RETVAL=0
"RTN","DGADDUTL",104,0)
 D
"RTN","DGADDUTL",105,0)
 .I DGOLD(.111)'=$G(DGNEW(.111)) S RETVAL=1 Q
"RTN","DGADDUTL",106,0)
 .I DGOLD(.112)'=$G(DGNEW(.112)) S RETVAL=1 Q
"RTN","DGADDUTL",107,0)
 .I DGOLD(.113)'=$G(DGNEW(.113)) S RETVAL=1 Q
"RTN","DGADDUTL",108,0)
 .I DGOLD(.114)'=$G(DGNEW(.114)) S RETVAL=1 Q
"RTN","DGADDUTL",109,0)
 .I DGOLD(.115)'=$P($G(DGNEW(.115)),"^",2) S RETVAL=1 Q
"RTN","DGADDUTL",110,0)
 .I DGOLD(.1112)'=$G(DGNEW(.1112)) S RETVAL=1 Q
"RTN","DGADDUTL",111,0)
 .I DGOLD(.117)'=$P($G(DGNEW(.117)),"^",2) S RETVAL=1 Q
"RTN","DGADDUTL",112,0)
 .I DGOLD(.131)'=$G(DGNEW(.131)) S RETVAL=1 Q
"RTN","DGADDUTL",113,0)
 .I DGOLD(.1171)'=$G(DGNEW(.1171)) S RETVAL=1 Q
"RTN","DGADDUTL",114,0)
 .I DGOLD(.1172)'=$G(DGNEW(.1172)) S RETVAL=1 Q
"RTN","DGADDUTL",115,0)
 .I DGOLD(.1173)'=$P($G(DGNEW(.1173)),"^",2) S RETVAL=1 Q
"RTN","DGADDUTL",116,0)
 .I DGOLD(.121)'=$G(DGNEW(.121)) S RETVAL=1 Q
"RTN","DGADDUTL",117,0)
 Q RETVAL
"RTN","DGADDUTL",118,0)
FOREIGN(DFN,CIEN,FILE,FIELD,COUNTRY) ;
"RTN","DGADDUTL",119,0)
 ; ** NOTE we have to default the value for "US" into the prompt if it is blank
"RTN","DGADDUTL",120,0)
 N FORGN,DA,DIR,DTOUT,DUOUT,DIROUT,DONE,INDX
"RTN","DGADDUTL",121,0)
 S:'$G(FILE) FILE=2  I '$G(FIELD) S FIELD=.1173
"RTN","DGADDUTL",122,0)
 S DIR(0)=FILE_","_FIELD,DA=DFN,DONE=0
"RTN","DGADDUTL",123,0)
 S DIR("B")=$E($$CNTRYI^DGADDUTL(CIEN),1,19) I DIR("B")=-1 S DIR("B")="UNKNOWN COUNTRY"
"RTN","DGADDUTL",124,0)
 F  D  Q:DONE
"RTN","DGADDUTL",125,0)
 . D ^DIR
"RTN","DGADDUTL",126,0)
 . I $D(DTOUT) S DONE=1,FORGN=-1 Q
"RTN","DGADDUTL",127,0)
 . I $D(DUOUT)!$D(DIROUT) W !,"EXIT NOT ALLOWED" Q
"RTN","DGADDUTL",128,0)
 . I $D(DIRUT) W !,"This is a required response." Q
"RTN","DGADDUTL",129,0)
 . S COUNTRY=$P($G(Y),"^",2),FORGN=$$FORIEN($P($G(Y),"^")),DONE=1
"RTN","DGADDUTL",130,0)
 Q FORGN
"RTN","DGADDUTL",131,0)
UPDADDLG(DFN,DGPRIOR,DGINPUT) ; Update the IVM ADDRESS CHANGE LOG file #301.7
"RTN","DGADDUTL",132,0)
 ;
"RTN","DGADDUTL",133,0)
 D UPDADDLG^DGADDUT2(DFN,.DGPRIOR,.DGINPUT)
"RTN","DGADDUTL",134,0)
 Q
"RTN","DGADDUTL",135,0)
EDITTADR(DFN) ; Edit Temporary Address
"RTN","DGADDUTL",136,0)
 N DGPRIOR,DGCH,DGRPAN,DGDR,DGRPS
"RTN","DGADDUTL",137,0)
 I $G(DFN)="" Q
"RTN","DGADDUTL",138,0)
 ;I ($G(DFN)'?.N) Q
"RTN","DGADDUTL",139,0)
 ;
"RTN","DGADDUTL",140,0)
 ; Get the current Temporary Address and display it
"RTN","DGADDUTL",141,0)
 D GETTADR(DFN,.DGPRIOR)
"RTN","DGADDUTL",142,0)
 D DISPTADR(DFN,.DGPRIOR)
"RTN","DGADDUTL",143,0)
 W !!
"RTN","DGADDUTL",144,0)
 ;
"RTN","DGADDUTL",145,0)
 S DGCH=5,DGRPAN="1,2,3,4,5,",DGDR="",DGRPS=1
"RTN","DGADDUTL",146,0)
 D CHOICE^DGRPP
"RTN","DGADDUTL",147,0)
 D ^DGRPE
"RTN","DGADDUTL",148,0)
 ; Update the Date/Time Stamp
"RTN","DGADDUTL",149,0)
 D UPDDTTM(DFN,TYPE)
"RTN","DGADDUTL",150,0)
 Q
"RTN","DGADDUTL",151,0)
GETTADR(DFN,DGPRIOR) ; Get prior temporary address fields.
"RTN","DGADDUTL",152,0)
 N DGCURR,DGN,DGARRY,DGCIEN,DGST,DGCNTY
"RTN","DGADDUTL",153,0)
 D GETS^DIQ(2,DFN_",",".1211;.1212;.1213;.1214;.1215;.1216;.1217;.1218;.12105;.1219;.12111;.12112;.12113;.12114;.1221:.1223","I","DGCURR")
"RTN","DGADDUTL",154,0)
 F DGN=.1211,.1212,.1213,.1214,.1215,.1216,.1217,.1218,.12105,.1219,.12111,.12112,.12113,.12114,.1221,.1222,.1223 D
"RTN","DGADDUTL",155,0)
 .S DGARRY("OLD",DGN)=$G(DGCURR(2,DFN_",",DGN,"I"))
"RTN","DGADDUTL",156,0)
 M DGPRIOR=DGARRY("OLD")
"RTN","DGADDUTL",157,0)
 Q
"RTN","DGADDUTL",158,0)
DISPTADR(DFN,DGARRY) ; Display Temporary Address
"RTN","DGADDUTL",159,0)
 N DGADRACT,DGADR1,DGADR2,DGADR3,DGCITY,DGSTATE,DGZIP
"RTN","DGADDUTL",160,0)
 N DGCOUNTY,DGPHONE,DGFROMDT,DGTODT,DGPROV,DGPCODE,DGCNTRY,DGFORN
"RTN","DGADDUTL",161,0)
 ;
"RTN","DGADDUTL",162,0)
 S DGADRACT=$G(DGARRY(.12105))
"RTN","DGADDUTL",163,0)
 S DGADR1=$G(DGARRY(.1211))
"RTN","DGADDUTL",164,0)
 S DGADR2=$G(DGARRY(.1212))
"RTN","DGADDUTL",165,0)
 S DGADR3=$G(DGARRY(.1213))
"RTN","DGADDUTL",166,0)
 S DGCITY=$G(DGARRY(.1214))
"RTN","DGADDUTL",167,0)
 S DGSTATE=$G(DGARRY(.1215))
"RTN","DGADDUTL",168,0)
 S DGZIP=$G(DGARRY(.1216))
"RTN","DGADDUTL",169,0)
 S DGCOUNTY=$G(DGARRY(.12111))
"RTN","DGADDUTL",170,0)
 I DGCOUNTY'="",DGSTATE'="",$D(^DIC(5,DGSTATE,1,DGCOUNTY,0)) D
"RTN","DGADDUTL",171,0)
 .S DGCOUNTY=$P(^DIC(5,DGSTATE,1,DGCOUNTY,0),"^")_$S($P(^DIC(5,DGSTATE,1,DGCOUNTY,0),"^",4)'="":"("_$P(^DIC(5,DGSTATE,1,DGCOUNTY,0),"^",4)_")",1:"")
"RTN","DGADDUTL",172,0)
 ;changing to remove display of empty (), will only display if a code is in the 4th piece of the state file-Patch 872
"RTN","DGADDUTL",173,0)
 ;S DGCOUNTY=$P(^DIC(5,DGSTATE,1,DGCOUNTY,0),"^")_"( "_$P(^DIC(5,DGSTATE,1,DGCOUNTY,0),"^",4)
"RTN","DGADDUTL",174,0)
 I DGADRACT'="Y" S DGCOUNTY="NOT APPLICABLE"
"RTN","DGADDUTL",175,0)
 I DGSTATE'="",$D(^DIC(5,DGSTATE,0)) S DGSTATE=$P(^DIC(5,DGSTATE,0),"^",2)
"RTN","DGADDUTL",176,0)
 S DGPROV=$G(DGARRY(.1221))
"RTN","DGADDUTL",177,0)
 S DGPCODE=$G(DGARRY(.1222))
"RTN","DGADDUTL",178,0)
 S DGCNTRY=$G(DGARRY(.1223))
"RTN","DGADDUTL",179,0)
 S DGFORN=$$FORIEN(DGCNTRY)
"RTN","DGADDUTL",180,0)
 I DGCNTRY]"" S DGCNTRY=$$CNTRYI(DGCNTRY)
"RTN","DGADDUTL",181,0)
 S DGPHONE=$G(DGARRY(.1219))
"RTN","DGADDUTL",182,0)
 S DGFROMDT=$$FMTE^XLFDT($G(DGARRY(.1217)))
"RTN","DGADDUTL",183,0)
 S DGTODT=$$FMTE^XLFDT($G(DGARRY(.1218)))
"RTN","DGADDUTL",184,0)
 ;
"RTN","DGADDUTL",185,0)
 W !!,"Temporary Address: "
"RTN","DGADDUTL",186,0)
 I DGADRACT="Y" D
"RTN","DGADDUTL",187,0)
 .W:DGADR1'="" !?9,DGADR1
"RTN","DGADDUTL",188,0)
 .W:DGADR2'="" !?9,DGADR2
"RTN","DGADDUTL",189,0)
 .W:DGADR3'="" !?9,DGADR3
"RTN","DGADDUTL",190,0)
 .I DGFORN=0 D
"RTN","DGADDUTL",191,0)
 ..W !?9,$S(DGCITY'="":DGCITY,1:"")_$S(DGCITY'="":",",1:" ")_$S(DGSTATE'="":DGSTATE,1:"")_" "_$S(DGZIP'="":DGZIP,1:"")
"RTN","DGADDUTL",192,0)
 .I DGFORN W !?8,$S(DGPCODE'="":DGPCODE,1:"")_" "_$S(DGCITY'="":DGCITY,1:"")_$S(DGCITY'="":",",1:" ")_$S(DGPROV'="":DGPROV,1:"")
"RTN","DGADDUTL",193,0)
 ;commenting out, causes address to print 2x. Patch 872
"RTN","DGADDUTL",194,0)
 ;W !?9,$S(DGCITY'="":DGCITY,1:"")_","_$S(DGSTATE'="":DGSTATE,1:"")_" "_$S(DGZIP'="":DGZIP,1:"")
"RTN","DGADDUTL",195,0)
 ;Removing lines from dot structure Patch 872
"RTN","DGADDUTL",196,0)
 W !," County: "_DGCOUNTY
"RTN","DGADDUTL",197,0)
 W !,"  Phone: "_DGPHONE
"RTN","DGADDUTL",198,0)
 W !,"From/To: "_$P(DGFROMDT,",")_","_$P(DGFROMDT,", ",2)_"-"_$P(DGTODT,",")_","_$P(DGTODT,", ",2)
"RTN","DGADDUTL",199,0)
 ;
"RTN","DGADDUTL",200,0)
 I $G(DGARRY(.12105))="N" D
"RTN","DGADDUTL",201,0)
 .W:$G(DGARRY(.1211))="" !?9,"NO TEMPORARY ADDRESS"
"RTN","DGADDUTL",202,0)
 .W:$G(DGARRY(.1212))="" !?9,""
"RTN","DGADDUTL",203,0)
 .W !," County: NOT APPLICABLE"
"RTN","DGADDUTL",204,0)
 .W !,"  Phone: NOT APPLICABLE"
"RTN","DGADDUTL",205,0)
 .W !,"From/To: NOT APPLICABLE"
"RTN","DGADDUTL",206,0)
 Q
"RTN","DGADDUTL",207,0)
COUNTRY(DGC) ;
"RTN","DGADDUTL",208,0)
 ;where DGC is the external value of the country
"RTN","DGADDUTL",209,0)
 ;return value is in upper case display mode
"RTN","DGADDUTL",210,0)
 ;if DGC is invalid, return -1
"RTN","DGADDUTL",211,0)
 N DGCC,DGIEN
"RTN","DGADDUTL",212,0)
 ; if input is NULL change to US
"RTN","DGADDUTL",213,0)
 I $G(DGC)="" S DGC="USA"
"RTN","DGADDUTL",214,0)
 ; Get IEN from B index, error if not found
"RTN","DGADDUTL",215,0)
 S DGIEN=$O(^HL(779.004,"B",DGC,"")) Q:DGIEN']"" -1
"RTN","DGADDUTL",216,0)
 ; xlate IEN to POSTAL NAME
"RTN","DGADDUTL",217,0)
 S DGCC=$P(^HL(779.004,DGIEN,"SDS"),U,3)
"RTN","DGADDUTL",218,0)
 ; if POSTAL NAME = "<NULL>" return DESCRIPTION
"RTN","DGADDUTL",219,0)
 I DGCC="<NULL>" D
"RTN","DGADDUTL",220,0)
 . S DGCC=$$UPPER^DGUTL($P(^HL(779.004,DGIEN,0),U,2))
"RTN","DGADDUTL",221,0)
 Q DGCC
"RTN","DGADDUTL",222,0)
FOR(DGC) ;returns a 1 if address is foreign, a 0 if domestic, -1 if DGC is not valid
"RTN","DGADDUTL",223,0)
 ; DGC is the external value of the country (.01 field of file 779.004)
"RTN","DGADDUTL",224,0)
 N DGFOR
"RTN","DGADDUTL",225,0)
 S DGFOR=0
"RTN","DGADDUTL",226,0)
 I $G(DGC)="" Q DGFOR
"RTN","DGADDUTL",227,0)
 I '$D(^HL(779.004,"B",DGC)) Q -1
"RTN","DGADDUTL",228,0)
 I DGC'="USA" S DGFOR=1
"RTN","DGADDUTL",229,0)
 Q DGFOR
"RTN","DGADDUTL",230,0)
CNTRYI(DGIEN) ;where DGC is the internal value of the country
"RTN","DGADDUTL",231,0)
 ;return DGC as the display value for the country
"RTN","DGADDUTL",232,0)
 ;if the input value is not a valid IEN, return -1
"RTN","DGADDUTL",233,0)
 ;if the input value is null, return null
"RTN","DGADDUTL",234,0)
 N DGCC
"RTN","DGADDUTL",235,0)
 I $G(DGIEN)="" Q ""
"RTN","DGADDUTL",236,0)
 I '$D(^HL(779.004,DGIEN,0)) Q -1
"RTN","DGADDUTL",237,0)
 ; xlate IEN to POSTAL NAME
"RTN","DGADDUTL",238,0)
 S DGCC=$P(^HL(779.004,DGIEN,"SDS"),U,3)
"RTN","DGADDUTL",239,0)
 ; if POSTAL NAME = "<NULL>" return DESCRIPTION
"RTN","DGADDUTL",240,0)
 I DGCC="<NULL>" D
"RTN","DGADDUTL",241,0)
 . S DGCC=$$UPPER^DGUTL($P(^HL(779.004,DGIEN,0),U,2))
"RTN","DGADDUTL",242,0)
 Q DGCC
"RTN","DGADDUTL",243,0)
FORIEN(DGC) ;returns a 1 if address is foreign, a 0 if domestic, -1 if DGC is invalid
"RTN","DGADDUTL",244,0)
 ;DGC is the IEN of the country file (#779.004)
"RTN","DGADDUTL",245,0)
 N DGFOR
"RTN","DGADDUTL",246,0)
 S DGFOR=0
"RTN","DGADDUTL",247,0)
 I $G(DGC)="" Q DGFOR
"RTN","DGADDUTL",248,0)
 I DGC'?1.3N Q -1
"RTN","DGADDUTL",249,0)
 I '$D(^HL(779.004,DGC,0)) Q -1
"RTN","DGADDUTL",250,0)
 I DGC]"",(DGC'=$O(^HL(779.004,"B","USA",""))) S DGFOR=1
"RTN","DGADDUTL",251,0)
 Q DGFOR
"RTN","DGSAUTL")
0^2^B23374835^B23041075
"RTN","DGSAUTL",1,0)
DGSAUTL ;ALB/MTC - SHARING AGREEMENTS UTILITY FUNCTIONS ; 9/12/13 9:54am
"RTN","DGSAUTL",2,0)
 ;;5.3;Registration;**114,194,216,872**;Aug 13, 1993;Build 28
"RTN","DGSAUTL",3,0)
 ;
"RTN","DGSAUTL",4,0)
 Q
"RTN","DGSAUTL",5,0)
 ;
"RTN","DGSAUTL",6,0)
EN(ORG) ;-- Entry point to Add/Edit Sharing Agreement Sub-Categories
"RTN","DGSAUTL",7,0)
 ;
"RTN","DGSAUTL",8,0)
 ;   ORG - This parameter specifies the originating process
"RTN","DGSAUTL",9,0)
 ;         "SD" - Appointment Type, "DG" - Admitting Regulation
"RTN","DGSAUTL",10,0)
 ;
"RTN","DGSAUTL",11,0)
 ;-- get the appropriate Admitting Reg or Appointment Type
"RTN","DGSAUTL",12,0)
 N DGAPT,DGCAT
"RTN","DGSAUTL",13,0)
 ;
"RTN","DGSAUTL",14,0)
 S DGAPT=$$GET(ORG)
"RTN","DGSAUTL",15,0)
 ;-- if no selection quit
"RTN","DGSAUTL",16,0)
 I DGAPT'>0 G ENQ
"RTN","DGSAUTL",17,0)
 ;-- get category
"RTN","DGSAUTL",18,0)
 S DGCAT=$$CAT(ORG)
"RTN","DGSAUTL",19,0)
 I DGCAT'>0 G ENQ
"RTN","DGSAUTL",20,0)
 ;-- put it all together
"RTN","DGSAUTL",21,0)
 D GOGO(ORG,DGAPT,DGCAT)
"RTN","DGSAUTL",22,0)
ENQ ;
"RTN","DGSAUTL",23,0)
 Q
"RTN","DGSAUTL",24,0)
 ;
"RTN","DGSAUTL",25,0)
GOGO(ORG,ATR,CAT) ;-- This function does something
"RTN","DGSAUTL",26,0)
 ;
"RTN","DGSAUTL",27,0)
 I ORG=""!(ATR'>0)!(CAT'>0) G GOGOQ
"RTN","DGSAUTL",28,0)
 ;
"RTN","DGSAUTL",29,0)
 N DGX,DA
"RTN","DGSAUTL",30,0)
 S DGX=$S(ORG="SD":"AT",1:"AR"),DIC("V")=$S(ORG="SD":"I +Y(0)=409.1",1:"I +Y(0)=43.4")
"RTN","DGSAUTL",31,0)
 S DA=$O(^DG(35.1,DGX,+ATR,+CAT,0))
"RTN","DGSAUTL",32,0)
 I DA D
"RTN","DGSAUTL",33,0)
 . N DGEDMODE S DIE="^DG(35.1,",DR="[DGSHARESUB]" D ^DIE
"RTN","DGSAUTL",34,0)
 E  D
"RTN","DGSAUTL",35,0)
 .S X=+ATR_";"_$S(ORG="SD":"SD(409.1,",1:"DIC(43.4,")
"RTN","DGSAUTL",36,0)
 . S (DIC,DIK)="^DG(35.1,",DIC(0)="L",DLAYGO=35.1
"RTN","DGSAUTL",37,0)
 . S DIC("DR")=".02////"_+CAT_";.03"
"RTN","DGSAUTL",38,0)
 .K DD,DO D FILE^DICN
"RTN","DGSAUTL",39,0)
 ;
"RTN","DGSAUTL",40,0)
GOGOQ K DIE,DIC
"RTN","DGSAUTL",41,0)
 Q
"RTN","DGSAUTL",42,0)
 ;
"RTN","DGSAUTL",43,0)
GET(ORG) ;-- This function will get the appropriate App Type or Admit Reg
"RTN","DGSAUTL",44,0)
 N DGX
"RTN","DGSAUTL",45,0)
 S:ORG="SD" DGX=$$GETAT
"RTN","DGSAUTL",46,0)
 S:ORG="DG" DGX=$$GETAR
"RTN","DGSAUTL",47,0)
 Q DGX
"RTN","DGSAUTL",48,0)
 ;
"RTN","DGSAUTL",49,0)
GETAT() ;-- get appointment type
"RTN","DGSAUTL",50,0)
 K DIC,Y
"RTN","DGSAUTL",51,0)
 S DIC="^SD(409.1,"
"RTN","DGSAUTL",52,0)
 S DIC("S")="I +$P(^(0),U,3)=0"
"RTN","DGSAUTL",53,0)
 S DIC(0)="AEZNQ"
"RTN","DGSAUTL",54,0)
 D ^DIC
"RTN","DGSAUTL",55,0)
 K DIC
"RTN","DGSAUTL",56,0)
 Q $G(Y)
"RTN","DGSAUTL",57,0)
 ;
"RTN","DGSAUTL",58,0)
GETAR() ;-- get admitting regulation
"RTN","DGSAUTL",59,0)
 N DIC,Y
"RTN","DGSAUTL",60,0)
 S DIC="^DIC(43.4,"
"RTN","DGSAUTL",61,0)
 S DIC("S")="I +$P(^(0),U,4)=0"
"RTN","DGSAUTL",62,0)
 S DIC(0)="AEZNQ"
"RTN","DGSAUTL",63,0)
 D ^DIC
"RTN","DGSAUTL",64,0)
 K DIC
"RTN","DGSAUTL",65,0)
 Q $G(Y)
"RTN","DGSAUTL",66,0)
 ;
"RTN","DGSAUTL",67,0)
CAT(DGORG) ;
"RTN","DGSAUTL",68,0)
 N DIC,Y
"RTN","DGSAUTL",69,0)
 ;-- get category from 35.2
"RTN","DGSAUTL",70,0)
 S DIC="^DG(35.2,"
"RTN","DGSAUTL",71,0)
 S DIC(0)="SLAEZQ"
"RTN","DGSAUTL",72,0)
 D ^DIC
"RTN","DGSAUTL",73,0)
 K DIC
"RTN","DGSAUTL",74,0)
 Q $G(Y)
"RTN","DGSAUTL",75,0)
 ;
"RTN","DGSAUTL",76,0)
HLP ;-- help for Sub-Category file
"RTN","DGSAUTL",77,0)
 ;
"RTN","DGSAUTL",78,0)
 I '$D(DGAPT)!('$D(DGORG)) G HLPQ
"RTN","DGSAUTL",79,0)
 ;
"RTN","DGSAUTL",80,0)
 N DGX,DGI,DGJ
"RTN","DGSAUTL",81,0)
 S DGJ=1
"RTN","DGSAUTL",82,0)
 S DGX=$S(DGORG="SD":"AT",1:"AR")
"RTN","DGSAUTL",83,0)
 S DGI=0 F  S DGI=$O(^DG(35.1,DGX,+DGAPT,DGI)) Q:'DGI  S DGK=$O(^(DGI,0)) D
"RTN","DGSAUTL",84,0)
 . I DGORG="SD" D
"RTN","DGSAUTL",85,0)
 .. I DGJ W !,"APPOINTMENT TYPE :",$P(DGAPT,U,2),!,?5,"CATEGORY :" S DGJ=0
"RTN","DGSAUTL",86,0)
 . I DGORG="DG" D
"RTN","DGSAUTL",87,0)
 .. I DGJ W !,"VA ADMITTING REGULATION :",$P(DGAPT,U,2),!,?5,"CATEGORY :" S DGJ=0
"RTN","DGSAUTL",88,0)
 . W !,?10,$P(^DG(35.2,$P(^DG(35.1,DGK,0),U,2),0),U),?35,$S($P(^DG(35.1,DGK,0),U,3)=1:"ACTIVE",1:"INACTIVE")
"RTN","DGSAUTL",89,0)
HLPQ ;
"RTN","DGSAUTL",90,0)
 Q
"RTN","DGSAUTL",91,0)
 ;
"RTN","DGSAUTL",92,0)
ADCAT(ADCAT) ;-- This function will prompt the user for the category
"RTN","DGSAUTL",93,0)
 ; associated with the admitting regulation selected.
"RTN","DGSAUTL",94,0)
 ;
"RTN","DGSAUTL",95,0)
 N RESULT,DGSA
"RTN","DGSAUTL",96,0)
 S RESULT=$$SUB(ADCAT,1,$P($G(^DGPM(+$G(DA),"PTF")),U,4))
"RTN","DGSAUTL",97,0)
 Q RESULT
"RTN","DGSAUTL",98,0)
 ;
"RTN","DGSAUTL",99,0)
GETSA(ATAR,SOURCE,ACTIVE) ;-- This function will build the DGSA array containing all the
"RTN","DGSAUTL",100,0)
 ;   sub-categories associated with an admitting reg.
"RTN","DGSAUTL",101,0)
 ;
"RTN","DGSAUTL",102,0)
 ;
"RTN","DGSAUTL",103,0)
 Q:'$G(ATAR)
"RTN","DGSAUTL",104,0)
 N DGX,DGY
"RTN","DGSAUTL",105,0)
 S DGY=1,DGX=0 F  S DGX=$O(^DG(35.1,$S(SOURCE=1:"AR",1:"AT"),ATAR,DGX)) Q:'DGX  D
"RTN","DGSAUTL",106,0)
 . N DGSCREEN S DGSCREEN=1 I $G(ACTIVE) S DGSCREEN=+$O(^(DGX,0)),DGSCREEN=$P($G(^DG(35.1,DGSCREEN,0)),U,3)
"RTN","DGSAUTL",107,0)
 . I DGSCREEN S DGSA(1,DGX)=DGX_U_$P($G(^DG(35.2,DGX,0)),U)
"RTN","DGSAUTL",108,0)
 Q
"RTN","DGSAUTL",109,0)
 ;
"RTN","DGSAUTL",110,0)
SUB(ATAR,SOURCE,DEFAULT) ;-- This function will check and prompt for sharing
"RTN","DGSAUTL",111,0)
 ; agreement sub-categories associated with either an Admitting Reg
"RTN","DGSAUTL",112,0)
 ; or a Appointment Type.
"RTN","DGSAUTL",113,0)
 ;
"RTN","DGSAUTL",114,0)
 ;   INPUT:  ATAR - IEN if Admitting Reg or Appointment Type
"RTN","DGSAUTL",115,0)
 ;           SOURCE - (1:ADT,2:SCHEDULING)
"RTN","DGSAUTL",116,0)
 ;           DEFAULT - IEN from file 35.2
"RTN","DGSAUTL",117,0)
 ;  OUTPUT:  IEN of file 35.2^Name
"RTN","DGSAUTL",118,0)
 ;
"RTN","DGSAUTL",119,0)
 ;
"RTN","DGSAUTL",120,0)
 N RESULT,ALLEL,EMP,X,DGDEF,Y
"RTN","DGSAUTL",121,0)
 ;
"RTN","DGSAUTL",122,0)
 ;-- get eligibility codes
"RTN","DGSAUTL",123,0)
 D GETSA(ATAR,SOURCE,1)
"RTN","DGSAUTL",124,0)
 S DGDEF=$P($G(^DG(35.2,+$G(DEFAULT),0)),U)
"RTN","DGSAUTL",125,0)
 I DGDEF'="" S DGDEF=DEFAULT_U_DGDEF
"RTN","DGSAUTL",126,0)
 ;
"RTN","DGSAUTL",127,0)
 S RESULT=""
"RTN","DGSAUTL",128,0)
 ;
"RTN","DGSAUTL",129,0)
 I '$D(DGSA) G SUBQ
"RTN","DGSAUTL",130,0)
 S X=0,X=$O(DGSA(1,X))
"RTN","DGSAUTL",131,0)
 I '$O(DGSA(1,X)) S RESULT=DGSA(1,X) G SUBQ
"RTN","DGSAUTL",132,0)
 ;-- if no default set default to first entry
"RTN","DGSAUTL",133,0)
 I DGDEF="" S DGDEF=DGSA(1,X)
"RTN","DGSAUTL",134,0)
 ;
"RTN","DGSAUTL",135,0)
DISP ;-- display choices
"RTN","DGSAUTL",136,0)
 ;
"RTN","DGSAUTL",137,0)
 S ALLEL=""
"RTN","DGSAUTL",138,0)
 ;-- get the name of the Admitting Reg or Appointment Type
"RTN","DGSAUTL",139,0)
 I SOURCE=1 S DGNAME=$P($G(^DIC(43.4,ATAR,0)),U)
"RTN","DGSAUTL",140,0)
 E  S DGNAME=$P($G(^SD(409.1,ATAR,0)),U)
"RTN","DGSAUTL",141,0)
 ;
"RTN","DGSAUTL",142,0)
 W !,"THE ["_DGNAME_$S(SOURCE=1:"] ADMITTING REGULATION",1:"] APPOINTMENT TYPE")
"RTN","DGSAUTL",143,0)
 W !,"HAS THE FOLLOWING SUB-CATEGORIES DEFINED."
"RTN","DGSAUTL",144,0)
 S X="" F  S X=$O(DGSA(1,X)) Q:'X  D
"RTN","DGSAUTL",145,0)
 . W !?5,$P(DGSA(1,X),U,2)
"RTN","DGSAUTL",146,0)
 . S ALLEL=ALLEL_U_$P(DGSA(1,X),U,2)
"RTN","DGSAUTL",147,0)
 ;
"RTN","DGSAUTL",148,0)
 ;-- prompt for sub-categories
"RTN","DGSAUTL",149,0)
 ;
"RTN","DGSAUTL",150,0)
1 W !,"ENTER THE SUB-CAT FOR THE ["_DGNAME_$S(SOURCE=1:"] ADMITTING REG",1:"] APPT TYPE")_": "_$P(DGDEF,U,2)_"// "
"RTN","DGSAUTL",151,0)
 R X:DTIME
"RTN","DGSAUTL",152,0)
 ;-- if timeout
"RTN","DGSAUTL",153,0)
 G SUBQ:'$T
"RTN","DGSAUTL",154,0)
 ;-- if ^
"RTN","DGSAUTL",155,0)
 G SUBQ:X[U
"RTN","DGSAUTL",156,0)
 ;-- if default (primary) quit
"RTN","DGSAUTL",157,0)
 I X="" S RESULT=DGDEF G SUBQ
"RTN","DGSAUTL",158,0)
 ;-- find eligibility
"RTN","DGSAUTL",159,0)
 S X=$$UPPER^VALM1(X)
"RTN","DGSAUTL",160,0)
 G DISP:X["?",1:ALLEL'[(U_X)
"RTN","DGSAUTL",161,0)
 N CNT,RES S CNT=0
"RTN","DGSAUTL",162,0)
 S EMP=X ;_$P($P(ALLEL,U_X,2),U) ;W $P($P(ALLEL,U_X,2),U)
"RTN","DGSAUTL",163,0)
 S X="" F  S X=$O(DGSA(1,X)) Q:X'>0  D
"RTN","DGSAUTL",164,0)
 . I $E($P(DGSA(1,X),U,2),1,$L(EMP))=EMP S CNT=CNT+1,(RES(CNT),RESULT)=X_U_$P(DGSA(1,X),U,2)
"RTN","DGSAUTL",165,0)
 W:CNT=1 $P($P(ALLEL,U_EMP,2),U) I CNT>1 D  G 1:(('RESULT)&(X'[U))
"RTN","DGSAUTL",166,0)
 .N I F I=1:1:CNT W !?5,I_"  "_$P(RES(I),U,2)
"RTN","DGSAUTL",167,0)
 .W !,"CHOOSE 1 - "_CNT_": "
"RTN","DGSAUTL",168,0)
 .S RESULT="" R X:DTIME I $D(RES(+X)) S RESULT=RES(+X) W " "_$P(RES(+X),U,2)
"RTN","DGSAUTL",169,0)
SUBQ ;
"RTN","DGSAUTL",170,0)
 K DGSA
"RTN","DGSAUTL",171,0)
 S RESULT=$P(RESULT,U)
"RTN","DGSAUTL",172,0)
 ;Q +RESULT
"RTN","DGSAUTL",173,0)
 ;returning null if no result, to populate pointer field appt. type subcategory(.14)of the appt. sub-file(2.98) of the patient file(2) correctly.  Patch 872
"RTN","DGSAUTL",174,0)
 Q RESULT
"VER")
8.0^22.0
"BLD",9434,6)
^789
**END**
**END**

