Released DG*5.3*905 SEQ #794
Extracted from mail message
**KIDS**:DG*5.3*905^

**INSTALL NAME**
DG*5.3*905
"BLD",9963,0)
DG*5.3*905^REGISTRATION^0^3150528^y
"BLD",9963,1,0)
^^10^10^3150528^
"BLD",9963,1,1,0)
After the installation of the DG*5.3*850 patch, sites reported these 
"BLD",9963,1,2,0)
three issues that are being fixed with this patch:
"BLD",9963,1,3,0)
 
"BLD",9963,1,4,0)
1) The Census Status Report [DGPT CENSUS STATUS REPORT] is reporting the
"BLD",9963,1,5,0)
   admission ward instead of the last movement ward.
"BLD",9963,1,6,0)
2) When entering a movement for a Post-Vietnam P.O.S. and the SW Asia
"BLD",9963,1,7,0)
   Service flag has been set, a prompt for establishing the SW Asia
"BLD",9963,1,8,0)
   condition will cause a hard error when answered.
"BLD",9963,1,9,0)
3) When performing an inquiry in option MPCR INQUIRY [DGPT MPCR
"BLD",9963,1,10,0)
   INQUIRY] a hard error occurs.
"BLD",9963,4,0)
^9.64PA^^
"BLD",9963,6)
1^
"BLD",9963,6.3)
2
"BLD",9963,"KRN",0)
^9.67PA^779.2^20
"BLD",9963,"KRN",.4,0)
.4
"BLD",9963,"KRN",.401,0)
.401
"BLD",9963,"KRN",.402,0)
.402
"BLD",9963,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",9963,"KRN",.402,"NM",1,0)
DG501F    FILE #45^45^0
"BLD",9963,"KRN",.402,"NM","B","DG501F    FILE #45",1)

"BLD",9963,"KRN",.403,0)
.403
"BLD",9963,"KRN",.5,0)
.5
"BLD",9963,"KRN",.84,0)
.84
"BLD",9963,"KRN",3.6,0)
3.6
"BLD",9963,"KRN",3.8,0)
3.8
"BLD",9963,"KRN",9.2,0)
9.2
"BLD",9963,"KRN",9.8,0)
9.8
"BLD",9963,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",9963,"KRN",9.8,"NM",1,0)
DGPTC1^^0^B26112849
"BLD",9963,"KRN",9.8,"NM",2,0)
DGPTIC10^^0^B100685699
"BLD",9963,"KRN",9.8,"NM","B","DGPTC1",1)

"BLD",9963,"KRN",9.8,"NM","B","DGPTIC10",2)

"BLD",9963,"KRN",19,0)
19
"BLD",9963,"KRN",19,"NM",0)
^9.68A^^
"BLD",9963,"KRN",19.1,0)
19.1
"BLD",9963,"KRN",101,0)
101
"BLD",9963,"KRN",409.61,0)
409.61
"BLD",9963,"KRN",771,0)
771
"BLD",9963,"KRN",779.2,0)
779.2
"BLD",9963,"KRN",870,0)
870
"BLD",9963,"KRN",870,"NM",0)
^9.68A^^
"BLD",9963,"KRN",8989.51,0)
8989.51
"BLD",9963,"KRN",8989.52,0)
8989.52
"BLD",9963,"KRN",8994,0)
8994
"BLD",9963,"KRN","B",.4,.4)

"BLD",9963,"KRN","B",.401,.401)

"BLD",9963,"KRN","B",.402,.402)

"BLD",9963,"KRN","B",.403,.403)

"BLD",9963,"KRN","B",.5,.5)

"BLD",9963,"KRN","B",.84,.84)

"BLD",9963,"KRN","B",3.6,3.6)

"BLD",9963,"KRN","B",3.8,3.8)

"BLD",9963,"KRN","B",9.2,9.2)

"BLD",9963,"KRN","B",9.8,9.8)

"BLD",9963,"KRN","B",19,19)

"BLD",9963,"KRN","B",19.1,19.1)

"BLD",9963,"KRN","B",101,101)

"BLD",9963,"KRN","B",409.61,409.61)

"BLD",9963,"KRN","B",771,771)

"BLD",9963,"KRN","B",779.2,779.2)

"BLD",9963,"KRN","B",870,870)

"BLD",9963,"KRN","B",8989.51,8989.51)

"BLD",9963,"KRN","B",8989.52,8989.52)

"BLD",9963,"KRN","B",8994,8994)

"BLD",9963,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9963,"QUES",0)
^9.62^^
"BLD",9963,"REQB",0)
^9.611^1^1
"BLD",9963,"REQB",1,0)
DG*5.3*850^2
"BLD",9963,"REQB","B","DG*5.3*850",1)

"KRN",.402,220,-1)
0^1
"KRN",.402,220,0)
DG501F^3141006.0834^^45^^^3130328
"KRN",.402,220,"AR",45.02,440)
1^DGX5F4
"KRN",.402,220,"AR",45.02,441)
2^DGX5F4
"KRN",.402,220,"AR",45.02,442)
3^DGX5F4
"KRN",.402,220,"AR",45.02,443)
4^DGX5F4
"KRN",.402,220,"AR",45.02,444)
5^DGX5F4
"KRN",.402,220,"AR",45.02,445)
6^DGX5F4
"KRN",.402,220,"AR",45.02,446)
7^DGX5F4
"KRN",.402,220,"AR",45.02,447)
8^DGX5F4
"KRN",.402,220,"AR",45.02,448)
9^DGX5F4
"KRN",.402,220,"AR",45.02,449)
10^DGX5F4
"KRN",.402,220,"DIAB",1,1,45.02,1)
TREATED FOR SC CONDITION//NO;"WAS TREATMENT FOR A SERVICE CONNECTED CONDITION?"
"KRN",.402,220,"DIAB",1,1,45.02,10)
TREATED FOR AO CONDITION;"WAS TREATMENT RELATED TO AGENT ORANGE EXPOSURE?"
"KRN",.402,220,"DIAB",1,1,45.02,11)
EXPOSED TO SW ASIA CONDITIONS;"WAS TREATMENT RELATED TO SERVICE IN SW ASIA?"
"KRN",.402,220,"DIAB",1,1,45.02,12)
29;"WAS TREATMENT RELATED TO MILITARY SEXUAL TRAUMA?"
"KRN",.402,220,"DIAB",5,1,45.02,9)
POTENTIALLY RELATED TO COMBAT//YES;"WAS TREATMENT RELATED TO COMBAT?"
"KRN",.402,220,"DIAB",7,1,45.02,10)
TREATED FOR IR CONDITION;"WAS TREATMENT RELATED TO IONIZING RADIATION EXPOSURE?"
"KRN",.402,220,"DIAB",7,1,45.02,11)
32;"WAS TREATMENT RELATED TO PROJ 112/SHAD?"
"KRN",.402,220,"DIAB",7,1,45.02,12)
30;"WAS TREATMENT RELATED TO HEAD AND/OR NECK CANCER?"
"KRN",.402,220,"DR",1,45)
F X=2:1:7 S DGDUP(X)=0;K DGPTIT;I $G(DGPTF)<1 S DGPTF=D0 W !!,"Editing PTF Record "_DGPTF_" in VA FileManager.";I $G(DGMOV)<1 S DGMOV=1 W !!,"Editing Discharge Movement in VA FileManager";I $G(DFN)<1 S DFN=+$G(^DGPT(D0,0));
"KRN",.402,220,"DR",1,45,1)
D CENSUS^DGPTIC10(DA);S DGJUMP=$G(DGJUMP);S DGXX="",DGTYPE=$P(^DGPT(D0,0),U,11),DGCODSYS=$$CODESYS^DGPTIC10(D0);S DGHOLD=$S($D(^DGPT(DGPTF,"M",+DGMOV,0)):^(0),1:"");S:'$D(DGADD) DGADD=0;S DGNFLD="@10";50///^S X=+DGMOV;
"KRN",.402,220,"DR",2,45.02)
S:DGJUMP'[1 Y="@2";10;@10;S DGNFLD="@15";2;@15;S DGNFLD="@16";3;@16;S DGNFLD="@17";4;@17;S:DGJUMP'[2 Y=0;@2;I $D(^DPT(+^DGPT(DGPTF,0),.3)),$P(^(.3),U)="Y" S (DGNFLD,Y)="@25";18////^S X=2;S (DGNFLD,Y)="@27";@25;
"KRN",.402,220,"DR",2,45.02,1)
18WAS TREATMENT FOR A SERVICE CONNECTED CONDITION?~//NO;@27;S DGNFLD="@28";S Y="@9000";@28;S DGNFLD="@40";5;S DGXX=X;I DGCODSYS="ICD9"!(DGTYPE=2)!(DGXX="") S Y="@26";82.01;@26;S X=DGXX;
"KRN",.402,220,"DR",2,45.02,2)
I X K DGPTIT S DGNFLD="@40",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@40;I DGADD,$P(DGHOLD,U,6)]"" S Y="@50";S DGNFLD="@50";6;S DGXX=X;I DGCODSYS="ICD9"!(DGTYPE=2)!(DGXX="") S Y="@41";82.02;@41;S X=DGXX;
"KRN",.402,220,"DR",2,45.02,3)
I X K DGPTIT S DGNFLD="@50",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@50;I DGADD,$P(DGHOLD,U,7)]"" S Y="@60";S DGNFLD="@60";7;S DGXX=X;I DGCODSYS="ICD9"!(DGTYPE=2)!(DGXX="") S Y="@51";82.03;@51;S X=DGXX;
"KRN",.402,220,"DR",2,45.02,4)
I X K DGPTIT S DGNFLD="@60",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@60;I DGADD,$P(DGHOLD,U,8)]"" S Y="@70";S DGNFLD="@70";8;S DGXX=X;I DGCODSYS="ICD9"!(DGTYPE=2)!(DGXX="") S Y="@61";82.04;@61;S X=DGXX;
"KRN",.402,220,"DR",2,45.02,5)
I X K DGPTIT S DGNFLD="@70",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@70;I DGADD,$P(DGHOLD,U,9)]"" S Y="@80";S DGNFLD="@80";9;S DGXX=X;I DGCODSYS="ICD9"!(DGTYPE=2)!(DGXX="") S Y="@71";82.05;@71;S X=DGXX;
"KRN",.402,220,"DR",2,45.02,6)
I X K DGPTIT S DGNFLD="@80",Y="@8000",DGPTIT(X_$C(59)_"ICD9(")="";@80;K DGNFLD,DGDUP,DGADD,DGXX,DGCODSYS S Y="";@8000;D SCAN^DGPTSCAN S:'$D(DGBPC) Y="@8990";I '$D(DGBPC(2))!(DGDUP(2)) S Y="@8200";300.02;S:X]"" DGDUP(2)=1;@8200;
"KRN",.402,220,"DR",2,45.02,7)
I '$D(DGBPC(3))!(DGDUP(3)) S Y="@8300";300.03;S:X]"" DGDUP(3)=1;@8300;I '$D(DGBPC(4))!(DGDUP(4)) S Y="@8400";D DRUG^DGPTSC01 I $D(DGTX) S Y="@8350";300.04;S:X]"" DGDUP(4)=1;S Y="@8400";@8350;300.04//^S X=DGTX;S:X]"" DGDUP(4)=1;
"KRN",.402,220,"DR",2,45.02,8)
@8400;I '$D(DGBPC(5))!(DGDUP(5)) S Y="@8500";300.05;S:X]"" DGDUP(5)=1;@8500;I '$D(DGBPC(6))!(DGDUP(6)) S Y="@8600";300.06;S:X]"" DGDUP(6)=1;@8600;I '$D(DGBPC(7))!(DGDUP(7)) S Y="@8990";300.07;S:X]"" DGDUP(7)=1;@8990;
"KRN",.402,220,"DR",2,45.02,9)
K DGPTIT S Y=DGNFLD;@9000;K DGEXQ D CHQUES^DGPTSPQ I '$D(DGEXQ) S Y="@9999";I '$D(DGEXQ(6)) S Y="@9040";31WAS TREATMENT RELATED TO COMBAT?~//YES;S Y="@9050";@9040;31///@;@9050;I '$D(DGEXQ(1)) S Y="@9100";
"KRN",.402,220,"DR",2,45.02,10)
26WAS TREATMENT RELATED TO AGENT ORANGE EXPOSURE?~;S Y="@9150";@9100;26///@;@9150;I '$D(DGEXQ(2)) S Y="@9200";27WAS TREATMENT RELATED TO IONIZING RADIATION EXPOSURE?~;S Y="@9250";@9200;27///@;@9250;I '$D(DGEXQ(3)) S Y="@9300";
"KRN",.402,220,"DR",2,45.02,11)
28WAS TREATMENT RELATED TO SERVICE IN SW ASIA?~;S Y="@9350";@9300;28///@;@9350;I '$D(DGEXQ(7)) S Y="@9400";32WAS TREATMENT RELATED TO PROJ 112/SHAD?~;S Y="@9450";@9400;32///@;@9450;I '$D(DGEXQ(4)) S Y="@9500";
"KRN",.402,220,"DR",2,45.02,12)
29WAS TREATMENT RELATED TO MILITARY SEXUAL TRAUMA?~;S Y="@9550";@9500;29///@;@9550;I '$D(DGEXQ(5)) S Y="@9600";30WAS TREATMENT RELATED TO HEAD AND/OR NECK CANCER?~;I X["Y",$D(DFN),$$FILEHNC^DGNTAPI1(DFN);S Y="@9650";@9600;30///@;
"KRN",.402,220,"DR",2,45.02,13)
@9650;@9999;K DGEXQ S Y=DGNFLD;@99999;
"KRN",.402,220,"ROU")
^DGX5F
"KRN",.402,220,"ROUOLD")
DGX5F
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
905^3150528^1267
"PKG",5,22,1,"PAH",1,1,0)
^^10^10^3150528
"PKG",5,22,1,"PAH",1,1,1,0)
After the installation of the DG*5.3*850 patch, sites reported these 
"PKG",5,22,1,"PAH",1,1,2,0)
three issues that are being fixed with this patch:
"PKG",5,22,1,"PAH",1,1,3,0)
 
"PKG",5,22,1,"PAH",1,1,4,0)
1) The Census Status Report [DGPT CENSUS STATUS REPORT] is reporting the
"PKG",5,22,1,"PAH",1,1,5,0)
   admission ward instead of the last movement ward.
"PKG",5,22,1,"PAH",1,1,6,0)
2) When entering a movement for a Post-Vietnam P.O.S. and the SW Asia
"PKG",5,22,1,"PAH",1,1,7,0)
   Service flag has been set, a prompt for establishing the SW Asia
"PKG",5,22,1,"PAH",1,1,8,0)
   condition will cause a hard error when answered.
"PKG",5,22,1,"PAH",1,1,9,0)
3) When performing an inquiry in option MPCR INQUIRY [DGPT MPCR
"PKG",5,22,1,"PAH",1,1,10,0)
   INQUIRY] a hard error occurs.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","DGPTC1")
0^1^B26112849^B26022907
"RTN","DGPTC1",1,0)
DGPTC1 ;ALN/MJK - Census Record Processing;JAN 27, 2005
"RTN","DGPTC1",2,0)
 ;;5.3;Registration;**37,413,643,701,850,905**;Aug 13, 1993;Build 2
"RTN","DGPTC1",3,0)
 ;
"RTN","DGPTC1",4,0)
CEN ; -- determine if PTF rec is current Census rec
"RTN","DGPTC1",5,0)
 ; input: PTF   := ptf rec #
"RTN","DGPTC1",6,0)
 ;     DGPMCA   := corres. adm           (non-fee)
"RTN","DGPTC1",7,0)
 ;     DGPMAN   := 0th node of corrs adm     "
"RTN","DGPTC1",8,0)
 ;output: DGCI  := census rec #
"RTN","DGPTC1",9,0)
 ;        DGCST := census rec status
"RTN","DGPTC1",10,0)
 ;        DGCN  := census date entry to 45.86
"RTN","DGPTC1",11,0)
 ;
"RTN","DGPTC1",12,0)
 K DGCST,DGCI,DGCN,DGCN0,DGFEE
"RTN","DGPTC1",13,0)
 S DGFEE=0
"RTN","DGPTC1",14,0)
 G CENQ:'$D(^DGPT(PTF,0)) N DFN S DGPTF0=^(0),DFN=+DGPTF0
"RTN","DGPTC1",15,0)
 D CEN^DGPTUTL I DGCN0=""!(DT'>DGCN0) K DGCN G CENQ
"RTN","DGPTC1",16,0)
 S DGT=$P(DGCN0,U)_".9" I '$P(DGPTF0,U,4) D WARD I 'Y K DGCN G CENQ
"RTN","DGPTC1",17,0)
 ;if Fee Basis quit if admit > census date or admit < census date if disch
"RTN","DGPTC1",18,0)
 I $P(DGPTF0,U,4)=1,$P(DGPTF0,U,2)>DGT G CENQ
"RTN","DGPTC1",19,0)
 I $P(DGPTF0,U,4)=1,+$P($G(^DGPT(PTF,70)),U),$P(DGPTF0,U,2)<DGT G CENQ
"RTN","DGPTC1",20,0)
 I $P(DGPTF0,U,4)=1 D FEE G CENQ
"RTN","DGPTC1",21,0)
 S DGCST=0,DGCI=""
"RTN","DGPTC1",22,0)
 F  S DGCI=$O(^DGPT("ACENSUS",PTF,DGCI)) Q:'DGCI  I $D(^DGPT(DGCI,0)),$P(^(0),U,13)=DGCN S DGCST=$P(^(0),U,6) Q:DGCST'=0  D  Q
"RTN","DGPTC1",23,0)
 .S DGCI=$$RDGCI(DGCI),DGCST=1
"RTN","DGPTC1",24,0)
CENQ K DGCN0,DGA1,DGT,X,DGPTF0,DGFEE Q
"RTN","DGPTC1",25,0)
 ;
"RTN","DGPTC1",26,0)
KVAR K DGCN,DGCI,DGCST Q
"RTN","DGPTC1",27,0)
 ;
"RTN","DGPTC1",28,0)
FEE ;
"RTN","DGPTC1",29,0)
 S DGCST=0,DGCI="",DGFEE=1
"RTN","DGPTC1",30,0)
 F  S DGCI=$O(^DGPT("ACENSUS",PTF,DGCI)) Q:'DGCI  I $D(^DGPT(DGCI,0)),$P(^(0),U,13)=DGCN S DGCST=$P(^(0),U,6) Q:DGCST'=0  D  Q
"RTN","DGPTC1",31,0)
 . S DGCI=$$RDGCI(DGCI),DGCST=+$P(^DGPT(DGCI,0),U,6)
"RTN","DGPTC1",32,0)
 Q
"RTN","DGPTC1",33,0)
ACT ; -- census actions with input of X
"RTN","DGPTC1",34,0)
 Q:'$D(X)
"RTN","DGPTC1",35,0)
 S Y=2 D RTY^DGPTUTL
"RTN","DGPTC1",36,0)
 I X="L" D CLS G ACTQ
"RTN","DGPTC1",37,0)
 I X="P" D OPEN G ACTQ
"RTN","DGPTC1",38,0)
 I X="E" S DGPTFLE=1,DGPTIFN=DGCI D EN^DGPTFREL K DGRTY,DGRTY0 G ^DGPTF
"RTN","DGPTC1",39,0)
ACTQ K DGRTY,DGRTY0 G EN1^DGPTF4
"RTN","DGPTC1",40,0)
 ;
"RTN","DGPTC1",41,0)
RDGCI(DGCI) ;-- eliminating 'OPEN' status census record and duplicates
"RTN","DGPTC1",42,0)
 S DGDL=DGCI,DGCIR="" D
"RTN","DGPTC1",43,0)
 .F  S DGCIR=$O(^DGPT("ACENSUS",PTF,DGCIR),-1) Q:DGCIR<DGDL  D
"RTN","DGPTC1",44,0)
 ..I $D(^DGPT(DGCIR,0)),$P(^(0),U,13)=DGCN S:DGCI=DGDL DGCI=DGCIR D
"RTN","DGPTC1",45,0)
 ...I DGCIR<DGCI S DGPTIFN=DGCIR,DGRTY=2 D KDGP^DGPTFDEL,KDGPT^DGPTFDEL
"RTN","DGPTC1",46,0)
 Q DGCI
"RTN","DGPTC1",47,0)
 ;
"RTN","DGPTC1",48,0)
CLS ;
"RTN","DGPTC1",49,0)
 S DGFEE=0
"RTN","DGPTC1",50,0)
 I $P(^DGPT(DGPTF,0),U,4)'=1 W !,"Updating TRANSFER DRGs..." S DGADM=$P(^DGPT(PTF,0),U,2) D SUDO1^DGPTSUDO
"RTN","DGPTC1",51,0)
 S J=PTF,DGERR=-1,T2=^DG(45.86,DGCN,0)+.9,T1=$P(^(0),U,5)
"RTN","DGPTC1",52,0)
 S DGPTFMTX=DGPTFMT S Y=T2 D FMT^DGPTUTL
"RTN","DGPTC1",53,0)
 W !,"Performing edit checks..."
"RTN","DGPTC1",54,0)
 ;-- init for Austin Edits
"RTN","DGPTC1",55,0)
 K ^TMP("AEDIT",$J),^TMP("AERROR",$J) S DGACNT=0
"RTN","DGPTC1",56,0)
 ;
"RTN","DGPTC1",57,0)
 D LOG^DGPTFTR1:DGPTFMT=1,LOG^DGPTR1:DGPTFMT=2,LOG^DGPTR1:DGPTFMT=3,COM1^DGPTFTR
"RTN","DGPTC1",58,0)
 K DGLOGIC,T1,T2,DGCCO D LO^DGUTL
"RTN","DGPTC1",59,0)
 D VERCHK^DGPTRI3(DGPTF) I DGERR>0 D HANG^DGPTUTL K DGERR G CLSQ
"RTN","DGPTC1",60,0)
 I DGERR>0 K DGERR D ^DGPTF2 G CLSQ
"RTN","DGPTC1",61,0)
 ;-- do austin edits
"RTN","DGPTC1",62,0)
 ;
"RTN","DGPTC1",63,0)
 D ^DGPTAE I DGERR>0 K DGERR D ^DGPTF2 G CLSQ
"RTN","DGPTC1",64,0)
 K DGERR,^TMP("AEDIT",$J),DGACNT
"RTN","DGPTC1",65,0)
 I $P(^DGPT(PTF,0),U,4) S DGFEE=1 D FEE1 G CLSQ:'DGCI
"RTN","DGPTC1",66,0)
 I $P(^DGPT(PTF,0),U,4)'=1 D CREATE G CLSQ:'DGCI
"RTN","DGPTC1",67,0)
 S DR="7////"_DUZ_";8///T",DA=DGCI,DIE="^DGPT(" D ^DIE K DIE,DR
"RTN","DGPTC1",68,0)
 S (X,DINUM)=DGCI,DIC(0)="L",DIC="^DGP(45.84,",DIC("DR")="2///NOW;3////"_DUZ
"RTN","DGPTC1",69,0)
 K DD,DO D FILE^DICN K DIC,DINUM,DO
"RTN","DGPTC1",70,0)
 F I=0,.11,.52,.321,.32,57,.3 S:$D(^DPT(DFN,I)) ^DGP(45.84,DGCI,$S(I=0:10,1:I))=^DPT(DFN,I)
"RTN","DGPTC1",71,0)
 W !,"****** CENSUS CLOSED OUT ******" D HANG^DGPTUTL
"RTN","DGPTC1",72,0)
 S DGCST=1
"RTN","DGPTC1",73,0)
CLSQ S DGPTFMT=DGPTFMTX K DGPTFMTX,DGFEE Q
"RTN","DGPTC1",74,0)
 ;
"RTN","DGPTC1",75,0)
CREATE ; -- create census record
"RTN","DGPTC1",76,0)
 W !,"Creating Census Record..."
"RTN","DGPTC1",77,0)
 S Y=$P(^DGPT(PTF,0),U,2) D CREATE^DGPTFCR G CREATEQ:Y<0 S DGCI=+Y W "#",DGCI
"RTN","DGPTC1",78,0)
 S DGEND=+^DG(45.86,DGCN,0)_".2359",DGBEG=+$P(^(0),U,5)
"RTN","DGPTC1",79,0)
 S ^DGPT(DGCI,0)=$P(^DGPT(PTF,0),U,1,10)_"^2^"_PTF_"^"_DGCN,DGCSUF=$P(^(0),U,5)
"RTN","DGPTC1",80,0)
 ;S ^DGPT(DGCI,0)=$P(^DGPT(PTF,0),U,1,5)_"^1^"_$P(^DGPT(PTF,0),U,7,10)_"^2^"_PTF_"^"_DGCN,DGCSUF=$P(^(0),U,5)
"RTN","DGPTC1",81,0)
 S Y=DGEND D BS^DGPTC2 S X="",$P(X,U)=DGEND,$P(X,U,14)=Y
"RTN","DGPTC1",82,0)
 I $D(^DGPT(PTF,70)) S Y=^(70) F I=8,9,10 S $P(X,U,I)=$P(Y,U,I)
"RTN","DGPTC1",83,0)
 S ^DGPT(DGCI,70)=X D ASIH
"RTN","DGPTC1",84,0)
 I $D(^DGPT(PTF,82)) S ^DGPT(DGCI,82)=^DGPT(PTF,82)
"RTN","DGPTC1",85,0)
 I $D(^DGPT(PTF,101)) S ^DGPT(DGCI,101)=^DGPT(PTF,101)
"RTN","DGPTC1",86,0)
 F NODE="M","P","S",535 F I=0:0 S I=$O(^DGPT(PTF,NODE,I)) Q:'I  I $D(^DGPT(PTF,NODE,I,0)) S X=^(0) D @("SET"_NODE_"^DGPTC2")
"RTN","DGPTC1",87,0)
 K DA,DIKLM S DA=DGCI,DIK="^DGPT(" D IX1^DIK
"RTN","DGPTC1",88,0)
CREATEQ K X,Y,DGCSUF,DGBEG,DGEND Q
"RTN","DGPTC1",89,0)
 ;
"RTN","DGPTC1",90,0)
FEE1 ; -- create census record for fee record
"RTN","DGPTC1",91,0)
 W !,"Creating Census Record..."
"RTN","DGPTC1",92,0)
 S Y=$P(^DGPT(PTF,0),U,2) D CREATE^DGPTFCR G CREATEQ:Y<0 S DGCI=+Y W "#",DGCI
"RTN","DGPTC1",93,0)
 S DGEND=+^DG(45.86,DGCN,0)_".2359",DGBEG=+$P(^(0),U,5)
"RTN","DGPTC1",94,0)
 S ^DGPT(DGCI,0)=$P(^DGPT(PTF,0),U,1,10)_"^2^"_PTF_"^"_DGCN,DGCSUF=$P(^(0),U,5)
"RTN","DGPTC1",95,0)
 I $D(^DGPT(PTF,70)) S ^DGPT(DGCI,70)=^DGPT(PTF,70)
"RTN","DGPTC1",96,0)
 S $P(^DGPT(DGCI,70),U)=DGEND
"RTN","DGPTC1",97,0)
 I $D(^DGPT(PTF,101)) S ^DGPT(DGCI,101)=^DGPT(PTF,101)
"RTN","DGPTC1",98,0)
 F NODE="M","P","S",535 F I=0:0 S I=$O(^DGPT(PTF,NODE,I)) Q:'I  I $D(^DGPT(PTF,NODE,I,0)) S X=^(0) D @("SET"_NODE_"^DGPTC2")
"RTN","DGPTC1",99,0)
 K DA,DIKLM S DA=DGCI,DIK="^DGPT(" D IX1^DIK
"RTN","DGPTC1",100,0)
FEE1Q K X,Y,DGCSUF,DGBEG,DGEND Q
"RTN","DGPTC1",101,0)
OPEN ; -- re-open census rec by deleting
"RTN","DGPTC1",102,0)
 S DGPTIFN=DGCI D OPEN^DGPTFDEL S (DGCI,DGCST)=0
"RTN","DGPTC1",103,0)
 K DGPTIFN Q
"RTN","DGPTC1",104,0)
 ;
"RTN","DGPTC1",105,0)
WARD ; -- ward @ census d/t for an adm(even if nhcu/dom adm that is ASIH)
"RTN","DGPTC1",106,0)
 ;  input:  DGPMCA := corres adm
"RTN","DGPTC1",107,0)
 ;          DGPMAN := corres adm 0th node
"RTN","DGPTC1",108,0)
 ; output:       Y := ward ptr or null
"RTN","DGPTC1",109,0)
 ;
"RTN","DGPTC1",110,0)
 N MVT,M
"RTN","DGPTC1",111,0)
 S Y=""
"RTN","DGPTC1",112,0)
 I +DGPMAN>DGT Q
"RTN","DGPTC1",113,0)
 I $D(^DGPM(+$P(DGPMAN,U,17),0)),+^(0)<DGT Q
"RTN","DGPTC1",114,0)
 F %=(9999999.9999999-DGT):0 S %=$O(^DGPM("APMV",+$G(DFN),+$G(DGPMCA),%)) Q:'%  D
"RTN","DGPTC1",115,0)
 . F MVT=0:0 S MVT=$O(^DGPM("APMV",$G(DFN),$G(DGPMCA),%,MVT)) Q:'MVT  D
"RTN","DGPTC1",116,0)
 .. I $D(^DGPM(MVT,0)) S M=^(0) D
"RTN","DGPTC1",117,0)
 ... I "^13^43^44^45^"'[(U_$P(M,U,18)_U),$D(^DIC(42,+$P(M,U,6),0)) S Y=+$P(M,U,6) S %=9999999.9999999
"RTN","DGPTC1",118,0)
 ... Q
"RTN","DGPTC1",119,0)
 ..Q
"RTN","DGPTC1",120,0)
 Q
"RTN","DGPTC1",121,0)
 ;WARDQ Q
"RTN","DGPTC1",122,0)
 ;
"RTN","DGPTC1",123,0)
ASIH ; -- calc asih days
"RTN","DGPTC1",124,0)
 N DGADM,DGREC,DGBDT,DGEDT,DGMVTP
"RTN","DGPTC1",125,0)
 S X1=DGBEG,X2=-1 D C^%DTC S DGBDT=X
"RTN","DGPTC1",126,0)
 S X1=$P(DGEND,"."),X2=1 D C^%DTC S DGEDT=X
"RTN","DGPTC1",127,0)
 S DGADM=$P(^DGPT(DGCI,0),U,2) D ASIH^DGUTL2
"RTN","DGPTC1",128,0)
 S $P(^DGPT(DGCI,70),U,8)=DGREC
"RTN","DGPTC1",129,0)
 Q
"RTN","DGPTIC10")
0^2^B100685699^B95648075
"RTN","DGPTIC10",1,0)
DGPTIC10 ;ALB/AAS - PTF API TO ICD10 Remediation calls ;9/29/2011
"RTN","DGPTIC10",2,0)
 ;;5.3;Registration;**850,905**;Aug 13, 1993;Build 2
"RTN","DGPTIC10",3,0)
 ;
"RTN","DGPTIC10",4,0)
 ; CODEC^ICDEX     ICR 5747
"RTN","DGPTIC10",5,0)
 ; VLT^ICDEX       ICR 5747
"RTN","DGPTIC10",6,0)
 ;
"RTN","DGPTIC10",7,0)
GETCODSY(CSYS,IEN,DATE) ; -- RETURN IF THIS IS ICD9 OR ICD10
"RTN","DGPTIC10",8,0)
 ; returns 20th piece of call to ICDDATA^ICDxcode
"RTN","DGPTIC10",9,0)
 Q $P($$ICDDATA^ICDXCODE(CSYS,IEN,DATE),"^",20)
"RTN","DGPTIC10",10,0)
 ;
"RTN","DGPTIC10",11,0)
 ;; ICDINFO^DGAPI
"RTN","DGPTIC10",12,0)
 ;
"RTN","DGPTIC10",13,0)
IMPDATE(CODESYS) ; - calls IMPDATE^LEXU(CODESYS)
"RTN","DGPTIC10",14,0)
 ;  CODESYS: 10D = diagnosis, 10P = procedure
"RTN","DGPTIC10",15,0)
 ; -- For testing, enter a valid date in MAS Parameter file, 
"RTN","DGPTIC10",16,0)
 ;    fields 50001 a 50002.  The two dates resolve the issue of collecting ICD-10
"RTN","DGPTIC10",17,0)
 ;    code earlier than their implementation and for storing them in fields that check
"RTN","DGPTIC10",18,0)
 ;    to see if they are active.  (Codes become active on 10/1/2013 currently)
"RTN","DGPTIC10",19,0)
 ;   
"RTN","DGPTIC10",20,0)
 ; -- The ICD-10 Implementation date (50001) allows setting of a test implementation date.
"RTN","DGPTIC10",21,0)
 ; -- The ICD-10 Active Date will be used in calls to test if the code is active on this date.
"RTN","DGPTIC10",22,0)
 ;    
"RTN","DGPTIC10",23,0)
 N TEST,IMPDATE
"RTN","DGPTIC10",24,0)
 S TEST=$G(^DG(43,1,"ICD10"))
"RTN","DGPTIC10",25,0)
 I +TEST?7N Q TEST
"RTN","DGPTIC10",26,0)
 I $G(CODESYS)="" S CODESYS="10D"
"RTN","DGPTIC10",27,0)
 S IMPDATE=$$IMPDATE^LEXU($G(CODESYS))
"RTN","DGPTIC10",28,0)
 Q IMPDATE
"RTN","DGPTIC10",29,0)
 ;
"RTN","DGPTIC10",30,0)
 ;
"RTN","DGPTIC10",31,0)
EFFDATE(DGPTF,DGTYPE,DGMOVE,DGCSYS) ;-- build ICD-10 Implementation date / effective date
"RTN","DGPTIC10",32,0)
 N DGTEMP,X,Y,I,J,DGFEE
"RTN","DGPTIC10",33,0)
 S:$G(DGTYPE)="" DGTYPE=$P($G(X1),U,2)
"RTN","DGPTIC10",34,0)
 I $G(DGCSYS)="" S DGCSYS="10D"
"RTN","DGPTIC10",35,0)
 I $G(DGPTF)="" S (DGPTDAT,EFFDATE)=DT G EQ
"RTN","DGPTIC10",36,0)
 I $G(DGTYPE)="" S DGTYPE="701"
"RTN","DGPTIC10",37,0)
 I (DGTYPE'="501")&(DGTYPE'="601")&(DGTYPE'="701")&(DGTYPE'="801") S DGTYPE="701"
"RTN","DGPTIC10",38,0)
 I $G(DGMOVE)="" S DGMOVE=1
"RTN","DGPTIC10",39,0)
 ;Add 801 logic - uses CPT/Record date for EFFDATE
"RTN","DGPTIC10",40,0)
 S:DGTYPE'="801" (DGPTDAT,EFFDATE)=$$GET7DATE^DGPTIC10(DGPTF)
"RTN","DGPTIC10",41,0)
 S:DGTYPE="801" (DGPTDAT,DGCPTDT,EFFDATE)=$$GET8DATE($G(DGPTF))
"RTN","DGPTIC10",42,0)
EQ S DGTEMP=$$IMPDATE^DGPTIC10(DGCSYS)
"RTN","DGPTIC10",43,0)
 S IMPDATE=$P(DGTEMP,U,1)
"RTN","DGPTIC10",44,0)
 I DGPTDAT'<IMPDATE,+$P(DGTEMP,U,2)?7N S EFFDATE=+$P(DGTEMP,U,2)
"RTN","DGPTIC10",45,0)
 Q
"RTN","DGPTIC10",46,0)
 ;
"RTN","DGPTIC10",47,0)
EFFDAT1(DGPTDAT) ;-- build ICD-10 Implementation date / effective date
"RTN","DGPTIC10",48,0)
 N DGTEMP,DGFEE
"RTN","DGPTIC10",49,0)
 Q:$G(DGPTDAT)=""
"RTN","DGPTIC10",50,0)
 S DGTEMP=$$IMPDATE^DGPTIC10("10D")
"RTN","DGPTIC10",51,0)
 S EFFDATE=+$E(DGPTDAT,1,7)
"RTN","DGPTIC10",52,0)
 S IMPDATE=$P(DGTEMP,U,1)
"RTN","DGPTIC10",53,0)
 I DGPTDAT'<IMPDATE,+$P(DGTEMP,U,2)?7N S EFFDATE=+$P(DGTEMP,U,2)
"RTN","DGPTIC10",54,0)
 Q
"RTN","DGPTIC10",55,0)
 ;
"RTN","DGPTIC10",56,0)
CODESYS(PTFIEN) ; returns coding system for a PTF Based on Discharge Date
"RTN","DGPTIC10",57,0)
 ; -- called from DG701 template
"RTN","DGPTIC10",58,0)
 N DISDATE,X,Y,DGFEE
"RTN","DGPTIC10",59,0)
 I '$D(^DGPT($G(PTFIEN),0)) Q $$GETCODS("10D",DT)
"RTN","DGPTIC10",60,0)
 ;
"RTN","DGPTIC10",61,0)
 ; -- Census Date
"RTN","DGPTIC10",62,0)
 ; -- Currently a census record
"RTN","DGPTIC10",63,0)
 S PTR=$P($G(^DGPT(PTFIEN,0)),U,13) I PTR'="" S DISDATE=$P($G(^DG(45.86,PTR,0)),U,1) G:DISDATE'="" CSQ
"RTN","DGPTIC10",64,0)
 ; -- requires a census
"RTN","DGPTIC10",65,0)
 S PTF=PTFIEN D:'$D(DGPMCA) PM^DGPTUTL ; -- gets admission in DGPMCA and 0th node in DGPMAN
"RTN","DGPTIC10",66,0)
 ;905 D CEN^DGPTC1
"RTN","DGPTIC10",67,0)
 N DGSAVE S DGSAVE=$G(DGPTF0) D CEN^DGPTC1 S DGPTF0=DGSAVE
"RTN","DGPTIC10",68,0)
 ; -- DGCST=Census Status, dgcn=ien of census date file
"RTN","DGPTIC10",69,0)
 I $D(DGCST),DGCST=0,DGCN>0 S DISDATE=$P($G(^DG(45.86,DGCN,0)),U,1) G:DISDATE?7N CSQ
"RTN","DGPTIC10",70,0)
 ;
"RTN","DGPTIC10",71,0)
 S DISDATE=+$E($P($G(^DGPT($G(PTFIEN),70)),"^",1),1,7)
"RTN","DGPTIC10",72,0)
 I DISDATE<1 S DISDATE=DT
"RTN","DGPTIC10",73,0)
CSQ Q $$GETCODS("10D",DISDATE)
"RTN","DGPTIC10",74,0)
 ;
"RTN","DGPTIC10",75,0)
GETCODS(CODESYS,DATE) ; - Returns coding system for a date
"RTN","DGPTIC10",76,0)
 N IMPDATE,VERSION,DGFEE
"RTN","DGPTIC10",77,0)
 S IMPDATE=+$$IMPDATE(CODESYS)
"RTN","DGPTIC10",78,0)
 I +IMPDATE>0 D
"RTN","DGPTIC10",79,0)
 . I DATE<IMPDATE S VERSION="ICD9" Q
"RTN","DGPTIC10",80,0)
 . I DATE'<IMPDATE S VERSION="ICD10"
"RTN","DGPTIC10",81,0)
 I $G(VERSION)'="" Q VERSION
"RTN","DGPTIC10",82,0)
 Q "ICD9"
"RTN","DGPTIC10",83,0)
 ;
"RTN","DGPTIC10",84,0)
GET8DATE(PATNUM) ; GET CPT RECORD DATE FOR 801 SERVICE
"RTN","DGPTIC10",85,0)
 S EFFD=+$G(DGPRD)
"RTN","DGPTIC10",86,0)
 I EFFD="",$G(DGZP),$D(^DGPT(PATNUM,"C",DGZP,0))#10 S EFFD=+^DGPT(PATNUM,"C",DGZP,0)
"RTN","DGPTIC10",87,0)
 S:EFFD="" EFFD=DT
"RTN","DGPTIC10",88,0)
 Q $P(EFFD,U,1)
"RTN","DGPTIC10",89,0)
 ;
"RTN","DGPTIC10",90,0)
GET7DATE(PATNUM) ; FROM icdgtdrg
"RTN","DGPTIC10",91,0)
 ;Find the correct "EFFECTIVE DATE" for locating the icd codes for 701 fields
"RTN","DGPTIC10",92,0)
 ;
"RTN","DGPTIC10",93,0)
 ;  Input:    PATNUM - PTF Record Number
"RTN","DGPTIC10",94,0)
 ;  Output:   "effective date" to use
"RTN","DGPTIC10",95,0)
 ;
"RTN","DGPTIC10",96,0)
 N EFFD,PTR,IMPDATE,ADMDATE,PTF,X,Y,DGFEE
"RTN","DGPTIC10",97,0)
 S ADMDATE=$P($G(^DGPT(PATNUM,0)),U,2)
"RTN","DGPTIC10",98,0)
 ;
"RTN","DGPTIC10",99,0)
 ; -- Census Date
"RTN","DGPTIC10",100,0)
 ; -- Currently a census record
"RTN","DGPTIC10",101,0)
 S PTR=$P($G(^DGPT(PATNUM,0)),U,13) I PTR'="" S EFFD=$P($G(^DG(45.86,PTR,0)),U,1) G:EFFD'="" G7OUT
"RTN","DGPTIC10",102,0)
 ; -- requires a census
"RTN","DGPTIC10",103,0)
 S PTF=PATNUM D:'$D(DGPMCA) PM^DGPTUTL ; -- gets admission in DGPMCA and 0th node in DGPMAN
"RTN","DGPTIC10",104,0)
 ;905 D CEN^DGPTC1
"RTN","DGPTIC10",105,0)
 N DGSAVE S DGSAVE=$G(DGPTF0) D CEN^DGPTC1 S DGPTF0=DGSAVE
"RTN","DGPTIC10",106,0)
 ; -- DGCST=Census Status, dgcn=ien of census date file
"RTN","DGPTIC10",107,0)
 I $D(DGCST),DGCST=0,DGCN>0 S EFFD=$P($G(^DG(45.86,DGCN,0)),U,1) G:EFFD?7N G7OUT
"RTN","DGPTIC10",108,0)
 ;
"RTN","DGPTIC10",109,0)
 ;  Discharge Date
"RTN","DGPTIC10",110,0)
 S DISDATE=$E($P($G(^DGPT(PATNUM,70)),U,1),1,7)
"RTN","DGPTIC10",111,0)
 I DISDATE'="" S EFFD=$P(DISDATE,".") G G7OUT
"RTN","DGPTIC10",112,0)
 I DISDATE="" S EFFD=DT G G7OUT
"RTN","DGPTIC10",113,0)
 ;  Default TODAY
"RTN","DGPTIC10",114,0)
 I $G(EFFD)="" S EFFD=DT
"RTN","DGPTIC10",115,0)
G7OUT Q EFFD
"RTN","DGPTIC10",116,0)
 ;
"RTN","DGPTIC10",117,0)
GET5DATE(PATNUM,MOVE) ; FROM icdgtdrg
"RTN","DGPTIC10",118,0)
 ;Find the correct "EFFECTIVE DATE" for locating the icd codes for 501 fields
"RTN","DGPTIC10",119,0)
 ;
"RTN","DGPTIC10",120,0)
 ;  Input:    PATNUM - PTF Record Number
"RTN","DGPTIC10",121,0)
 ;            MOVE   - PTF Movement Number
"RTN","DGPTIC10",122,0)
 ;  Output:   "effective date" to use
"RTN","DGPTIC10",123,0)
 ;
"RTN","DGPTIC10",124,0)
 N EFFD,PTR,IMPDATE,MOVDATE,X,Y,DGFEE
"RTN","DGPTIC10",125,0)
 ;  Census Date
"RTN","DGPTIC10",126,0)
 S PTR=$P($G(^DGPT(PATNUM,0)),U,13) I PTR'="" S EFFD=$P($G(^DG(45.86,PTR,0)),U,1) G:EFFD'="" G5OUT
"RTN","DGPTIC10",127,0)
 ; -- requires a census
"RTN","DGPTIC10",128,0)
 S PTF=PATNUM D:'$D(DGPMCA) PM^DGPTUTL ; -- gets admission in DGPMCA and 0th node in DGPMAN
"RTN","DGPTIC10",129,0)
 ;905 D CEN^DGPTC1
"RTN","DGPTIC10",130,0)
 N DGSAVE S DGSAVE=$G(DGPTF0) D CEN^DGPTC1 S DGPTF0=DGSAVE
"RTN","DGPTIC10",131,0)
 ; -- DGCST=Census Status, dgcn=ien of census date file
"RTN","DGPTIC10",132,0)
 I $D(DGCST),DGCST=0,DGCN>0 S EFFD=$P($G(^DG(45.86,DGCN,0)),U,1) G:EFFD?7N G7OUT
"RTN","DGPTIC10",133,0)
 ;
"RTN","DGPTIC10",134,0)
 ;  Discharge Date
"RTN","DGPTIC10",135,0)
 S DISDATE=$E($P($G(^DGPT(PATNUM,70)),U,1),1,7)
"RTN","DGPTIC10",136,0)
 S MOVDATE=$P($G(^DGPT(PATNUM,"M",MOVE,0)),U,10)
"RTN","DGPTIC10",137,0)
 I DISDATE'="" S EFFD=$P(DISDATE,".") G G5OUT
"RTN","DGPTIC10",138,0)
 ;  Default TODAY
"RTN","DGPTIC10",139,0)
 S EFFD=DT
"RTN","DGPTIC10",140,0)
G5OUT ;
"RTN","DGPTIC10",141,0)
 Q EFFD
"RTN","DGPTIC10",142,0)
 ;
"RTN","DGPTIC10",143,0)
GET6DATE(PATNUM,PROC,DGI) ; FROM icdgtdrg
"RTN","DGPTIC10",144,0)
 ;Find the correct "EFFECTIVE DATE" for locating the icd codes for 601 fields
"RTN","DGPTIC10",145,0)
 ;
"RTN","DGPTIC10",146,0)
 ;  Input:    PATNUM - PTF Record Number
"RTN","DGPTIC10",147,0)
 ;            PROC   - Procedure or Surgery number
"RTN","DGPTIC10",148,0)
 ;            DGI    - 5- PROCEDURE NODE, 8 = SURGERY NODE
"RTN","DGPTIC10",149,0)
 ;  Output:   "effective date" to use
"RTN","DGPTIC10",150,0)
 ;
"RTN","DGPTIC10",151,0)
 N EFFD,PTR,IMPDATE,MOVDATE,X,Y,DGFEE
"RTN","DGPTIC10",152,0)
 I '$G(PATNUM) S PATNUM=$G(PROC)
"RTN","DGPTIC10",153,0)
 I '$G(PATNUM) S EFFD=DT G G6OUT
"RTN","DGPTIC10",154,0)
 ;  Census Date
"RTN","DGPTIC10",155,0)
 S PTR=$P($G(^DGPT(PATNUM,0)),U,13) I PTR'="" S EFFD=$P($G(^DG(45.86,PTR,0)),U,1) G:EFFD'="" G6OUT
"RTN","DGPTIC10",156,0)
 ; -- requires a census
"RTN","DGPTIC10",157,0)
 S PTF=PATNUM D:'$D(DGPMCA) PM^DGPTUTL ; -- gets admission in DGPMCA and 0th node in DGPMAN
"RTN","DGPTIC10",158,0)
 ;905 D CEN^DGPTC1
"RTN","DGPTIC10",159,0)
 N DGSAVE S DGSAVE=$G(DGPTF0) D CEN^DGPTC1 S DGPTF0=DGSAVE
"RTN","DGPTIC10",160,0)
 ; -- DGCST=Census Status, dgcn=ien of census date file
"RTN","DGPTIC10",161,0)
 I $D(DGCST),DGCST=0,DGCN>0 S EFFD=$P($G(^DG(45.86,DGCN,0)),U,1) G:EFFD?7N G7OUT ; DGCNO=0th node
"RTN","DGPTIC10",162,0)
 ;
"RTN","DGPTIC10",163,0)
 ;  Discharge Date
"RTN","DGPTIC10",164,0)
 S DISDATE=$E($P($G(^DGPT(PATNUM,70)),U,1),1,7)
"RTN","DGPTIC10",165,0)
 ;
"RTN","DGPTIC10",166,0)
 I $G(DGI)=1 S MOVDATE=$S(DISDATE'="":DISDATE,1:DT)
"RTN","DGPTIC10",167,0)
 I $G(DGI)=5 S MOVDATE=$P($G(^DGPT(PATNUM,"P",PROC,0)),U,1)
"RTN","DGPTIC10",168,0)
 I $G(DGI)=8 S MOVDATE=$P($G(^DGPT(PATNUM,"S",PROC,0)),U,1)
"RTN","DGPTIC10",169,0)
 I DISDATE'="" S EFFD=$P(DISDATE,".") G G6OUT
"RTN","DGPTIC10",170,0)
 S EFFD=DT
"RTN","DGPTIC10",171,0)
G6OUT ;
"RTN","DGPTIC10",172,0)
 Q EFFD
"RTN","DGPTIC10",173,0)
 ;
"RTN","DGPTIC10",174,0)
GETCDATE(PATNUM,CPT) ;
"RTN","DGPTIC10",175,0)
 ;Find the correct "EFFECTIVE DATE" for CPT Procedures
"RTN","DGPTIC10",176,0)
 ;
"RTN","DGPTIC10",177,0)
 ;  Input:    PATNUM - PTF Record Number
"RTN","DGPTIC10",178,0)
 ;            cpt    - CPT Entry Number
"RTN","DGPTIC10",179,0)
 ;  Output:   "effective date" to use
"RTN","DGPTIC10",180,0)
 ;
"RTN","DGPTIC10",181,0)
 N EFFD,PTR,IMPDATE,MOVDATE,X,Y,DGFEE
"RTN","DGPTIC10",182,0)
 ;  Census Date
"RTN","DGPTIC10",183,0)
 S PTR=$P($G(^DGPT(PATNUM,0)),U,13) I PTR'="" S EFFD=$P($G(^DG(45.86,PTR,0)),U,1) G:EFFD'="" GCOUT
"RTN","DGPTIC10",184,0)
 ; -- requires a census
"RTN","DGPTIC10",185,0)
 S PTF=PATNUM D:'$D(DGPMCA) PM^DGPTUTL ; -- gets admission in DGPMCA and 0th node in DGPMAN
"RTN","DGPTIC10",186,0)
 ;905 D CEN^DGPTC1
"RTN","DGPTIC10",187,0)
 N DGSAVE S DGSAVE=$G(DGPTF0) D CEN^DGPTC1 S DGPTF0=DGSAVE
"RTN","DGPTIC10",188,0)
 ; -- DGCST=Census Status, dgcn=ien of census date file
"RTN","DGPTIC10",189,0)
 I $D(DGCST),DGCST=0,DGCN>0 S EFFD=$P($G(^DG(45.86,DGCN,0)),U,1) G:EFFD?7N G7OUT
"RTN","DGPTIC10",190,0)
 ;
"RTN","DGPTIC10",191,0)
 ;  Discharge Date
"RTN","DGPTIC10",192,0)
 S DISDATE=$E($P($G(^DGPT(PATNUM,70)),U,1),1,7)
"RTN","DGPTIC10",193,0)
 I DISDATE'="" S EFFD=$P(DISDATE,".") G GCOUT
"RTN","DGPTIC10",194,0)
 ;  Default TODAY
"RTN","DGPTIC10",195,0)
 S EFFD=DT
"RTN","DGPTIC10",196,0)
GCOUT ;
"RTN","DGPTIC10",197,0)
 Q EFFD
"RTN","DGPTIC10",198,0)
 ;
"RTN","DGPTIC10",199,0)
GETLABEL(EVDATE,CODESYS) ; returns ICD label for printing
"RTN","DGPTIC10",200,0)
 ; CODESYS - D for diagnosis or P for  Procedures
"RTN","DGPTIC10",201,0)
 ; EVDATE - event date to use for determine label (discharge, movement date, etc.
"RTN","DGPTIC10",202,0)
 N ICDVER
"RTN","DGPTIC10",203,0)
 S ICDVER=""
"RTN","DGPTIC10",204,0)
 I CODESYS="D" S ICDVER=" (ICD-10-CM)"  I EVDATE<$P($$IMPDATE("10D"),U,1) S ICDVER=" (ICD-9-CM)"
"RTN","DGPTIC10",205,0)
 I CODESYS="P" S ICDVER=" (ICD-10-PCS)"  I EVDATE<$P($$IMPDATE("10P"),U,1) S ICDVER=" (ICD-9-CM)"
"RTN","DGPTIC10",206,0)
 Q ICDVER
"RTN","DGPTIC10",207,0)
 ;
"RTN","DGPTIC10",208,0)
DISPLY(FILE,IEN,DATE,FRMT) ; -- return the Code - Description for a code
"RTN","DGPTIC10",209,0)
 N CODE,DESC
"RTN","DGPTIC10",210,0)
 I $G(FILE)="DIAG"!($G(FILE)="ICD")!($G(FILE)="10D") S FILE=80
"RTN","DGPTIC10",211,0)
 I $G(FILE)="PROC"!($G(FILE)="ICP")!($G(FILE)="10P") S FILE=80.1
"RTN","DGPTIC10",212,0)
 I $G(FILE)'=80&($G(FILE)'=80.1) Q ""
"RTN","DGPTIC10",213,0)
 I $G(IEN)<1 Q ""
"RTN","DGPTIC10",214,0)
 I $G(FRMT)="" S FRMT=1
"RTN","DGPTIC10",215,0)
 I FRMT'=1&(FRMT'=2) S FRMT=1
"RTN","DGPTIC10",216,0)
 S CODE=$$CODEC^ICDEX(FILE,IEN)
"RTN","DGPTIC10",217,0)
 S DESC=$$VLT^ICDEX(FILE,IEN,$G(DATE))
"RTN","DGPTIC10",218,0)
 ;
"RTN","DGPTIC10",219,0)
 I $G(CODE)=""!($P($G(CODE),"^")=-1) S CODE="****"
"RTN","DGPTIC10",220,0)
 I $G(DESC)=""!($P($G(DESC),"^")=-1) S DESC="********************"
"RTN","DGPTIC10",221,0)
 I $G(FRMT)=1 Q $E(CODE_"      ",1,9)_DESC
"RTN","DGPTIC10",222,0)
 I $G(FRMT)=2 Q DESC_"("_CODE_")"
"RTN","DGPTIC10",223,0)
 Q "****   **********************"
"RTN","DGPTIC10",224,0)
 ;
"RTN","DGPTIC10",225,0)
WRITECOD(FILE,IEN,DATE,FRMT,RETURN,TAB) ;
"RTN","DGPTIC10",226,0)
 N I,X,X1,DGIOM,TAB1,TAB2,DGPARSE,DGPARSE2,DGSPACE,SIZE,DGSPACE2
"RTN","DGPTIC10",227,0)
 S TAB=+$G(TAB),RETURN=+$G(RETURN)
"RTN","DGPTIC10",228,0)
 S:TAB>20 TAB=20
"RTN","DGPTIC10",229,0)
 S SIZE=$S(TAB<1:4,1:TAB)
"RTN","DGPTIC10",230,0)
 S RETURN=$S(RETURN=0:"$C(0)",RETURN=1:"!",RETURN=2:"!!",RETURN=3:"!!!",1:"!")
"RTN","DGPTIC10",231,0)
 S DGIOM=+$G(IOM) I DGIOM<40 S DGIOM=80
"RTN","DGPTIC10",232,0)
 ;
"RTN","DGPTIC10",233,0)
 S X=$$DISPLY($G(FILE),$G(IEN),$G(DATE),$G(FRMT))
"RTN","DGPTIC10",234,0)
 I ($L(X)+SIZE)<DGIOM W @RETURN,?TAB,X Q
"RTN","DGPTIC10",235,0)
 ;
"RTN","DGPTIC10",236,0)
 S DGPARSE=DGIOM-TAB ; Find the place to start moving backwards looking for a space
"RTN","DGPTIC10",237,0)
 I TAB<1 S DGPARSE=DGPARSE-4
"RTN","DGPTIC10",238,0)
 ;
"RTN","DGPTIC10",239,0)
 F I=DGPARSE:-1:10 I $E(X,I)=" " Q
"RTN","DGPTIC10",240,0)
 S DGSPACE=I ; this is the space
"RTN","DGPTIC10",241,0)
 ;
"RTN","DGPTIC10",242,0)
 I FRMT=1 S TAB1=$F(X," ") D
"RTN","DGPTIC10",243,0)
 . S I=0 F  S I=$F(X," ",TAB1) Q:I'=(TAB1+1)  S TAB1=I
"RTN","DGPTIC10",244,0)
 . S TAB2=TAB1+1
"RTN","DGPTIC10",245,0)
 I FRMT'=1 S TAB2=TAB+3
"RTN","DGPTIC10",246,0)
 ;
"RTN","DGPTIC10",247,0)
 I ($L(X)+SIZE)>79 W @RETURN,?TAB,$E(X,1,DGSPACE) D
"RTN","DGPTIC10",248,0)
 . I (TAB2+$L($E(X,DGSPACE+1,$L(X))))<DGIOM D  Q
"RTN","DGPTIC10",249,0)
 .. W !,?TAB2,"  ",$E(X,DGSPACE+1,$L(X))
"RTN","DGPTIC10",250,0)
 . ;
"RTN","DGPTIC10",251,0)
 . S DGPARSE=DGIOM-TAB2-3
"RTN","DGPTIC10",252,0)
 . S X1=$E(X,DGSPACE+1,$L(X))
"RTN","DGPTIC10",253,0)
 . ;
"RTN","DGPTIC10",254,0)
 . F I=DGPARSE:-1:1 I $E(X1,I)=" " Q
"RTN","DGPTIC10",255,0)
 . S DGSPACE2=I
"RTN","DGPTIC10",256,0)
 . W !,?TAB2,"  ",$E(X1,1,DGSPACE2)
"RTN","DGPTIC10",257,0)
 . W !,?TAB2,"  ",$E(X1,DGSPACE2+1,$L(X1)) Q
"RTN","DGPTIC10",258,0)
 Q
"RTN","DGPTIC10",259,0)
 ;
"RTN","DGPTIC10",260,0)
PREV ;
"RTN","DGPTIC10",261,0)
 Q
"RTN","DGPTIC10",262,0)
 ;
"RTN","DGPTIC10",263,0)
ICDNAME() ; -- Called from PTF EXPANDED CODE file (45.89) field Name (#200)
"RTN","DGPTIC10",264,0)
 ; -- Determines ICD Code name using supported API's
"RTN","DGPTIC10",265,0)
 ;    Replaces direct global reads in computed Expression
"RTN","DGPTIC10",266,0)
 ;
"RTN","DGPTIC10",267,0)
 Q:'+$G(D0)&'+$G(DA)
"RTN","DGPTIC10",268,0)
 I '+$G(D0) S D0=DA
"RTN","DGPTIC10",269,0)
 N ENTRY,TYPE,X
"RTN","DGPTIC10",270,0)
 S X=""
"RTN","DGPTIC10",271,0)
 S ENTRY=$P($G(^DIC(45.89,D0,0)),U,2),VERSION=$P($G(^DIC(45.89,D0,0)),U,5)
"RTN","DGPTIC10",272,0)
 Q:'+$G(ENTRY) X
"RTN","DGPTIC10",273,0)
 S TYPE=$P(ENTRY,";",2),VERSION=$P(^DIC(45.89,D0,0),U,5)
"RTN","DGPTIC10",274,0)
 I TYPE="ICD9(" S X=$$VLT^ICDEX(80,+ENTRY)
"RTN","DGPTIC10",275,0)
 I TYPE="ICD0(" S X=$$VLT^ICDEX(80.1,+ENTRY)
"RTN","DGPTIC10",276,0)
 Q X
"RTN","DGPTIC10",277,0)
 ;
"RTN","DGPTIC10",278,0)
INPUT() ; - Input transform for 27.27;9  S X=$$INPUT^DGPTIC10() K:X<1 X
"RTN","DGPTIC10",279,0)
 N ICDVER,CAT
"RTN","DGPTIC10",280,0)
 S CAT=$P(^(0),U,2) S Y(0)=$S(CAT="D":80,CAT-"P":80.1,1:"")
"RTN","DGPTIC10",281,0)
 S ICDVER=$S(CAT="D":"10D",1:"10P")
"RTN","DGPTIC10",282,0)
 D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"RTN","DGPTIC10",283,0)
 Q X
"RTN","DGPTIC10",284,0)
DATERANG ; Get an ICD-10 compliant date range
"RTN","DGPTIC10",285,0)
 N IMPDATE,DGSDATE ;
"RTN","DGPTIC10",286,0)
 S IMPDATE=+$$IMPDATE^DGPTIC10("10D")
"RTN","DGPTIC10",287,0)
 W !!,"ICD-10 Implementation Date: ",$$FMTE^XLFDT(IMPDATE),!
"RTN","DGPTIC10",288,0)
 S DGSDATE=$$SDAT() G:DGSDATE<1 DRQ
"RTN","DGPTIC10",289,0)
 S DGEDATE=$$TDAT(DGSDATE)
"RTN","DGPTIC10",290,0)
 ;G:EDATE<1 DRQ
"RTN","DGPTIC10",291,0)
DRQ ;
"RTN","DGPTIC10",292,0)
 ;
"RTN","DGPTIC10",293,0)
SDAT() ; ask for start date
"RTN","DGPTIC10",294,0)
 N Y,DIR,DTOUT,DUOUT
"RTN","DGPTIC10",295,0)
 S DIR(0)="D^:"_DT_":EX",DIR("A")="Start Date"
"RTN","DGPTIC10",296,0)
 D ^DIR K DIR
"RTN","DGPTIC10",297,0)
 Q:$D(DTOUT)!($D(DUOUT)) -1
"RTN","DGPTIC10",298,0)
 Q Y
"RTN","DGPTIC10",299,0)
TDAT(DGSDAT) ; ask for end date
"RTN","DGPTIC10",300,0)
 N Y,DIR,DTOUT,DUOUT
"RTN","DGPTIC10",301,0)
 S DIR(0)="D^"_DGSDAT_":"_DT_":EX",DIR("A")="End Date"
"RTN","DGPTIC10",302,0)
 I '$D(IMPDATE) S IMPDATE=+$$IMPDATE^DGPTIC10("10D")
"RTN","DGPTIC10",303,0)
 I DGSDAT<IMPDATE,DT'<IMPDATE D
"RTN","DGPTIC10",304,0)
 . W !!,?10,"Start date is before ICD-10 implementation.",!,?10,"End date must be before ICD-10 implementation",!
"RTN","DGPTIC10",305,0)
 . S DIR(0)="D^"_DGSDAT_":"_$$FMADD^XLFDT(IMPDATE,-1)_":EX"
"RTN","DGPTIC10",306,0)
 D ^DIR K DIR
"RTN","DGPTIC10",307,0)
 Q:$D(DTOUT)!($D(DUOUT)) -1
"RTN","DGPTIC10",308,0)
 Q Y
"RTN","DGPTIC10",309,0)
 ;
"RTN","DGPTIC10",310,0)
CENSUS(DGPTF) ; display warning to user for ICD-10 transition census records
"RTN","DGPTIC10",311,0)
 ; -- do not remove this procedure from the routine
"RTN","DGPTIC10",312,0)
 ; -- called by input templates DG401, DG501, DG501F, DG601, and DG701
"RTN","DGPTIC10",313,0)
 ;
"RTN","DGPTIC10",314,0)
 ;
"RTN","DGPTIC10",315,0)
 Q
"RTN","DGPTIC10",316,0)
 N X,Y,CENDATE,EFFDATE,IMPDATE,DGPTDAT
"RTN","DGPTIC10",317,0)
 ;
"RTN","DGPTIC10",318,0)
 Q:'$D(PTF)  ; -- Called directly from fileman, no variable set up.
"RTN","DGPTIC10",319,0)
 ;
"RTN","DGPTIC10",320,0)
 ; -- Get census status (DGCST) and ien of census date (DGCN)
"RTN","DGPTIC10",321,0)
 ;905 D CEN^DGPTC1
"RTN","DGPTIC10",322,0)
 N DGSAVE S DGSAVE=$G(DGPTF0) D CEN^DGPTC1 S DGPTF0=DGSAVE
"RTN","DGPTIC10",323,0)
 ;
"RTN","DGPTIC10",324,0)
 I '$D(DGCST) G CENSUSQ
"RTN","DGPTIC10",325,0)
 I $G(DGCST)>0 G CENSUSQ ; status no longer open
"RTN","DGPTIC10",326,0)
 ;
"RTN","DGPTIC10",327,0)
 ; -- DGCST=Census Status, dgcn=ien of census date file
"RTN","DGPTIC10",328,0)
 I $D(DGCST),DGCST=0,DGCN>0 S CENDATE=$P($G(^DG(45.86,DGCN,0)),U,1)
"RTN","DGPTIC10",329,0)
 D EFFDATE(DGPTF)
"RTN","DGPTIC10",330,0)
 I CENDATE<IMPDATE,DT'<IMPDATE D
"RTN","DGPTIC10",331,0)
 . W !!,?5,"Note: This PTF record is OPEN for CENSUS."
"RTN","DGPTIC10",332,0)
 . W !,?7,"Census requires ICD-9 codes."
"RTN","DGPTIC10",333,0)
 . W !,?7,"PTF will require ICD-10 codes after the census is closed.",!
"RTN","DGPTIC10",334,0)
CENSUSQ ;
"RTN","DGPTIC10",335,0)
 Q
"RTN","DGPTIC10",336,0)
 ;
"VER")
8.0^22.0
"BLD",9963,6)
^794
**END**
**END**

