KIDS Distribution saved on Jan 28, 2016@10:05:01
OR*3*424
**KIDS**:OR*3.0*424^

**INSTALL NAME**
OR*3.0*424
"BLD",9477,0)
OR*3.0*424^ORDER ENTRY/RESULTS REPORTING^0^3160128^y
"BLD",9477,4,0)
^9.64PA^101.41^1
"BLD",9477,4,101.41,0)
101.41
"BLD",9477,4,101.41,222)
n^n^f^^y^^y^o^n
"BLD",9477,4,101.41,224)
I Y=51
"BLD",9477,4,"B",101.41,101.41)

"BLD",9477,6.3)
8
"BLD",9477,"ABPKG")
n
"BLD",9477,"KRN",0)
^9.67PA^779.2^20
"BLD",9477,"KRN",.4,0)
.4
"BLD",9477,"KRN",.401,0)
.401
"BLD",9477,"KRN",.402,0)
.402
"BLD",9477,"KRN",.403,0)
.403
"BLD",9477,"KRN",.5,0)
.5
"BLD",9477,"KRN",.84,0)
.84
"BLD",9477,"KRN",3.6,0)
3.6
"BLD",9477,"KRN",3.8,0)
3.8
"BLD",9477,"KRN",9.2,0)
9.2
"BLD",9477,"KRN",9.8,0)
9.8
"BLD",9477,"KRN",9.8,"NM",0)
^9.68A^7^6
"BLD",9477,"KRN",9.8,"NM",1,0)
ORDV06B^^0^B43977169
"BLD",9477,"KRN",9.8,"NM",3,0)
ORWDX^^0^B72026068
"BLD",9477,"KRN",9.8,"NM",4,0)
ORWDPS2^^0^B63130016
"BLD",9477,"KRN",9.8,"NM",5,0)
ORWU^^0^B62136332
"BLD",9477,"KRN",9.8,"NM",6,0)
ORIMO^^0^B3277195
"BLD",9477,"KRN",9.8,"NM",7,0)
ORUTL4^^0^B10505895
"BLD",9477,"KRN",9.8,"NM","B","ORDV06B",1)

"BLD",9477,"KRN",9.8,"NM","B","ORIMO",6)

"BLD",9477,"KRN",9.8,"NM","B","ORUTL4",7)

"BLD",9477,"KRN",9.8,"NM","B","ORWDPS2",4)

"BLD",9477,"KRN",9.8,"NM","B","ORWDX",3)

"BLD",9477,"KRN",9.8,"NM","B","ORWU",5)

"BLD",9477,"KRN",19,0)
19
"BLD",9477,"KRN",19,"NM",0)
^9.68A^^
"BLD",9477,"KRN",19.1,0)
19.1
"BLD",9477,"KRN",101,0)
101
"BLD",9477,"KRN",409.61,0)
409.61
"BLD",9477,"KRN",771,0)
771
"BLD",9477,"KRN",779.2,0)
779.2
"BLD",9477,"KRN",870,0)
870
"BLD",9477,"KRN",8989.51,0)
8989.51
"BLD",9477,"KRN",8989.52,0)
8989.52
"BLD",9477,"KRN",8994,0)
8994
"BLD",9477,"KRN","B",.4,.4)

"BLD",9477,"KRN","B",.401,.401)

"BLD",9477,"KRN","B",.402,.402)

"BLD",9477,"KRN","B",.403,.403)

"BLD",9477,"KRN","B",.5,.5)

"BLD",9477,"KRN","B",.84,.84)

"BLD",9477,"KRN","B",3.6,3.6)

"BLD",9477,"KRN","B",3.8,3.8)

"BLD",9477,"KRN","B",9.2,9.2)

"BLD",9477,"KRN","B",9.8,9.8)

"BLD",9477,"KRN","B",19,19)

"BLD",9477,"KRN","B",19.1,19.1)

"BLD",9477,"KRN","B",101,101)

"BLD",9477,"KRN","B",409.61,409.61)

"BLD",9477,"KRN","B",771,771)

"BLD",9477,"KRN","B",779.2,779.2)

"BLD",9477,"KRN","B",870,870)

"BLD",9477,"KRN","B",8989.51,8989.51)

"BLD",9477,"KRN","B",8989.52,8989.52)

"BLD",9477,"KRN","B",8994,8994)

"BLD",9477,"QUES",0)
^9.62^^
"BLD",9477,"REQB",0)
^9.611^1^1
"BLD",9477,"REQB",1,0)
OR*3.0*350^2
"BLD",9477,"REQB","B","OR*3.0*350",1)

"DATA",101.41,51,0)
GMRCOR CONSULT^Consult^^D^11^2^294^1^1
"DATA",101.41,51,3)
D GETSERV^ORCDGMRC
"DATA",101.41,51,3.1)
D GETSERV^ORCDGMRC
"DATA",101.41,51,4)
K ORSERV,ORPDX,GMRCNOPD,GMRCNOAT,GMRCREAF,^TMP("GMRCS",$J),^TMP("GMRCSLIST",$J)
"DATA",101.41,51,5)
^^^Consult^110
"DATA",101.41,51,10,0)
^101.412IA^10^10
"DATA",101.41,51,10,1,0)
1^4^^Consult to Service/Specialty: ^^1^^^^S.CSLT
"DATA",101.41,51,10,1,1)
Select the service/specialty consultation you wish to request for this patient.
"DATA",101.41,51,10,1,2)
2^^^^Cons
"DATA",101.41,51,10,1,3)
I $G(ORTYPE)'="Q",'$D(OREDIT),'$G(OREWRITE)
"DATA",101.41,51,10,1,4)
I $$ACTIVE^ORDD43(Y),$D(^TMP("GMRCS",$J,+$P(^(0),U,2)))
"DATA",101.41,51,10,1,5)
I $G(ORESET)'=+Y D CKSERV^ORCDGMRC K GMRCREAF
"DATA",101.41,51,10,1,6)
D LISTSERV^ORCDGMRC(1)
"DATA",101.41,51,10,1,10)
N OI S OI=+$G(ORDIALOG(PROMPT,INST)),ORSERV=+$P($G(^ORD(101.43,OI,0)),U,2) D:ORSERV SERVMSG^ORCDGMRC
"DATA",101.41,51,10,1,"W")
cboService
"DATA",101.41,51,10,2,0)
2^15^^Reason for Request: ^^1
"DATA",101.41,51,10,2,1)
Enter a brief description of why this consult is being requested.
"DATA",101.41,51,10,2,3)
I $G(ORTYPE)="Z"!'$G(GMRCREAF)!($G(GMRCREAF)=1&'FIRST)
"DATA",101.41,51,10,2,7)
D REASON^ORCDGMRC
"DATA",101.41,51,10,2,9)
S:'$D(GMRCREAF) GMRCREAF=$$REAF^GMRCDRFR(+$G(ORSERV))
"DATA",101.41,51,10,2,"W")
memReason
"DATA",101.41,51,10,3,0)
3^10^^^^1
"DATA",101.41,51,10,3,1)
Enter if the service rendered will be on an inpatient or outpatient basis.
"DATA",101.41,51,10,3,5)
I $G(ORESET)'="",ORESET'=$P(Y,U) D CHANGED^ORCDGMRC("CAT")
"DATA",101.41,51,10,3,6)
D SETLIST^ORCD
"DATA",101.41,51,10,3,7)
S:$G(ORTYPE)'="Z" Y=$S($$INPT^ORCD:"I",1:"O")
"DATA",101.41,51,10,3,9)
S ORDIALOG(PROMPT,0)=$P(ORDIALOG(PROMPT,0),";",1,2) ;I or O only
"DATA",101.41,51,10,3,"W")
refCategory
"DATA",101.41,51,10,4,0)
4^7^^^^1^^^^S.GMRCT
"DATA",101.41,51,10,4,1)
Select the urgency indicating how quickly results from this consult are needed.
"DATA",101.41,51,10,4,2)
4^^ROUTINE
"DATA",101.41,51,10,4,7)
S Y=9
"DATA",101.41,51,10,4,9)
D URGENCY^ORCDGMRC("C")
"DATA",101.41,51,10,4,"W")
cboUrgency
"DATA",101.41,51,10,5,0)
5^140^^^^1
"DATA",101.41,51,10,5,1)
Select the preferred place to see the patient for this consult.
"DATA",101.41,51,10,5,2)
3
"DATA",101.41,51,10,5,6)
D LIST^ORCD
"DATA",101.41,51,10,5,7)
S:$G(ORTYPE)'="Z" Y=$S($$VAL^ORCD("CATEGORY")="I":"B",1:"C")
"DATA",101.41,51,10,5,9)
D PLACE^ORCDGMRC
"DATA",101.41,51,10,5,"W")
cboPlace
"DATA",101.41,51,10,6,0)
6^17^^Attention: 
"DATA",101.41,51,10,6,1)
Enter the service/specialty user who is to be notified of this request.
"DATA",101.41,51,10,6,3)
I '$G(GMRCNOAT)
"DATA",101.41,51,10,6,4)
N ORT S ORT=$P(^(0),U,11) I 'ORT!(ORT>DT)
"DATA",101.41,51,10,6,"W")
txtAttn
"DATA",101.41,51,10,7,0)
7^20^^Provisional Diagnosis: 
"DATA",101.41,51,10,7,1)
Enter a preliminary diagnosis relating to this request, up to 240 characters.
"DATA",101.41,51,10,7,3)
I '$G(GMRCNOPD)
"DATA",101.41,51,10,7,5)
D LEX^ORCDGMRC
"DATA",101.41,51,10,7,9)
D ENPDX^ORCDGMRC
"DATA",101.41,51,10,7,"W")
txtProvDiag
"DATA",101.41,51,10,8,0)
1.1^178^^Consult Type: 
"DATA",101.41,51,10,8,1)
Enter the type of consult you wish to have done at this service
"DATA",101.41,51,10,8,2)
1
"DATA",101.41,51,10,8,3)
I $G(ORTYPE)="Z"!$D(ORDIALOG(PROMPT,INST)) ;populated by QO only
"DATA",101.41,51,10,9,0)
7.1^173^^^^^^^^^20
"DATA",101.41,51,10,9,3)
I 0 ;stuffed in via Prov Dx
"DATA",101.41,51,10,10,0)
4.5^15820^^Clinically Indicated Date:^^^^^W
"DATA",101.41,51,10,10,1)
Enter the clinically indicated date for this consult to be performed.
"DATA",101.41,51,10,10,3)
Q:'$G(ORSERV)  I $G(^GMR(123.5,ORSERV,"INT"))'=1
"DATA",101.41,51,10,10,5)
Q:$G(ORTYPE)'="Z"  I $G(ORDIALOG(PROMPT,INST))'["T" K DONE W $C(7),!,"Response must be relative date (e.g. TODAY, T+7D, T+3M)"
"DATA",101.41,51,10,10,7)
S Y=$$GET^XPAR("DIV^SYS^PKG","ORCDGMRC CLIN IND DATE DEFAULT",1,"Q")
"DATA",101.41,51,10,10,10)
N X,Y,%DT S X=$G(ORDIALOG(PROMPT,INST)),%DT="X" I $L(X) D ^%DT S:Y>0 ORDATE=$P(Y,".")
"DATA",101.41,51,10,10,"W")
calClinicallyIndicated
"DATA",101.41,51,10,10,"W7")
S Y=$$GET^XPAR("DIV^SYS^PKG","ORCDGMRC CLIN IND DATE DEFAULT",1,"Q")
"DATA",101.41,51,99)
63861,21761
"FIA",101.41)
ORDER DIALOG
"FIA",101.41,0)
^ORD(101.41,
"FIA",101.41,0,0)
101.41I
"FIA",101.41,0,1)
n^n^f^^y^^y^o^n
"FIA",101.41,0,10)

"FIA",101.41,0,11)
I Y=51
"FIA",101.41,0,"RLRO")

"FIA",101.41,0,"VR")
3.0^OR
"FIA",101.41,101.41)
0
"FIA",101.41,101.411)
0
"FIA",101.41,101.412)
0
"FIA",101.41,101.41218)
0
"FIA",101.41,101.415)
0
"FIA",101.41,101.416)
0
"FIA",101.41,101.4162)
0
"FRV1",101.41,"51,0",5)
CONSULTS
"FRV1",101.41,"51,0",5,"F")
;ORD(100.98,
"FRV1",101.41,"51,0",7)
CONSULT/REQUEST TRACKING
"FRV1",101.41,"51,0",7,"F")
;DIC(9.4,
"FRV1",101.41,"51,10,1,0",2)
OR GTX ORDERABLE ITEM
"FRV1",101.41,"51,10,1,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,10,0",2)
OR GTX CLINICALLY INDICATED DATE
"FRV1",101.41,"51,10,10,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,2,0",2)
OR GTX WORD PROCESSING 1
"FRV1",101.41,"51,10,2,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,3,0",2)
OR GTX CATEGORY
"FRV1",101.41,"51,10,3,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,4,0",2)
OR GTX URGENCY
"FRV1",101.41,"51,10,4,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,5,0",2)
OR GTX PLACE OF CONSULTATION
"FRV1",101.41,"51,10,5,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,6,0",2)
OR GTX PROVIDER
"FRV1",101.41,"51,10,6,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,7,0",2)
OR GTX FREE TEXT
"FRV1",101.41,"51,10,7,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,8,0",2)
OR GTX FREE TEXT OI
"FRV1",101.41,"51,10,8,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,9,0",2)
OR GTX CODE
"FRV1",101.41,"51,10,9,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,9,0",11)
OR GTX FREE TEXT
"FRV1",101.41,"51,10,9,0",11,"F")
;ORD(101.41,
"IX",101.41,101.41,"B",0)
101.41^B^Regular B index using full field length^R^^F^IR^I^101.41^^^^^LS
"IX",101.41,101.41,"B",1)
S ^ORD(101.41,"B",$E(X,1,63),DA)=""
"IX",101.41,101.41,"B",2)
K ^ORD(101.41,"B",$E(X,1,63),DA)
"IX",101.41,101.41,"B",2.5)
K ^ORD(101.41,"B")
"IX",101.41,101.41,"B",11.1,0)
^.114IA^1^1
"IX",101.41,101.41,"B",11.1,1,0)
1^F^101.41^.01^63^1^F
"MBREQ")
0
"PGL",101.41,0,5,5)
DISPLAY GROUP^P100.98'^ORD(100.98,^0;5^Q
"PGL",101.41,0,7,7)
PACKAGE^P9.4'^DIC(9.4,^0;7^Q
"PGL",101.412,0,2,2)
ITEM^P101.41'X^ORD(101.41,^0;2^D TREE^ORDD41
"PGL",101.412,0,11,1)
PARENT^P101.41'^ORD(101.41,^0;11^Q
"PGL",101.415,0,2,2)
ITEM^P101.41'^ORD(101.41,^0;2^Q
"PGL",101.416,0,2,.02)
DIALOG^P101.41'^ORD(101.41,^0;2^Q
"PKG",170,-1)
1^1
"PKG",170,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",170,20,0)
^9.402P^^
"PKG",170,22,0)
^9.49I^1^1
"PKG",170,22,1,0)
3.0^2971217^2980917^11712
"PKG",170,22,1,"PAH",1,0)
424^3160128
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","ORDV06B")
0^1^B43977169
"RTN","ORDV06B",1,0)
ORDV06B ; slc/dcm - OE/RR Report Extracts ;12/02/15  05:38
"RTN","ORDV06B",2,0)
 ;;3.0;ORDER ENTRY RESULTS REPORTING;**312,350,424**;Dec 17, 1997;Build 8
"RTN","ORDV06B",3,0)
 ;Pharmacy Extracts for VistaWeb and ALL Medication Report
"RTN","ORDV06B",4,0)
RXALL(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ;All Patient Meds
"RTN","ORDV06B",5,0)
 ;Call to PSOORRL
"RTN","ORDV06B",6,0)
 I $L($T(GCPR^OMGCOAS1)) D  ; Call if FHIE station 200
"RTN","ORDV06B",7,0)
 . D GCPR^OMGCOAS1(DFN,"RXOP",ORDBEG,ORDEND,9999)
"RTN","ORDV06B",8,0)
 ;
"RTN","ORDV06B",9,0)
 N ORRXSTAT,GO
"RTN","ORDV06B",10,0)
 Q:'$L(OREXT)
"RTN","ORDV06B",11,0)
 S GO=$P(OREXT,";")_"^"_$P(OREXT,";",2)
"RTN","ORDV06B",12,0)
 Q:'$L($T(@GO))
"RTN","ORDV06B",13,0)
 S ORRXSTAT=""
"RTN","ORDV06B",14,0)
 D GETMED
"RTN","ORDV06B",15,0)
 Q
"RTN","ORDV06B",16,0)
IN ;Setup and call to Pharmacy API
"RTN","ORDV06B",17,0)
 ;LST(i)=
"RTN","ORDV06B",18,0)
 ;LST(i) flags: "~" Start of new record, "/" Continuation line (concatination with Line feed CRLF)
"RTN","ORDV06B",19,0)
 ;
"RTN","ORDV06B",20,0)
 ;{          1     2      3     4       5     6       7       8        9      10     11           16
"RTN","ORDV06B",21,0)
 ;{ Pieces: Typ^PharmID^Drug^InfRate^StopDt^RefRem^TotDose^UnitDose^OrderID^Status^LastFill^...^StartDt^  }
"RTN","ORDV06B",22,0)
 ;If $P($P(X,"^",2),";",2)= "I" or "C" then Inpatient=TRUE
"RTN","ORDV06B",23,0)
 ;If $P(X,"^",1)="~NV" then NonVAMed=TRUE and Instruct="Non-VA "_Instruct
"RTN","ORDV06B",24,0)
 ;If $E($P(X,"^",1),1,2)="t\" then this is a comment, strip off the 1st character (t) and concatenate to other text
"RTN","ORDV06B",25,0)
 ;Location  := $P($P(X,U,1),":",2);
"RTN","ORDV06B",26,0)
 K ^TMP("PS",$J),^TMP("ORACT",$J),^TMP("ORPS",$J)
"RTN","ORDV06B",27,0)
 N ORBEG,OREND,ERROR,ORCTX,ORVIEW
"RTN","ORDV06B",28,0)
 S (ORBEG,OREND,ORCTX)=""
"RTN","ORDV06B",29,0)
 S ORVIEW=1
"RTN","ORDV06B",30,0)
 S ORBEG=$S($G(ORDBEG):ORDBEG,1:$$DT^ORWPS("T-50000")),OREND=$S(ORDEND<DT:ORDEND,1:$$DT^ORWPS("T+3000"))
"RTN","ORDV06B",31,0)
 D OCL^PSOORRL(DFN,$$DT^ORWPS("T-50000"),$$DT^ORWPS("T+3000"),ORVIEW)
"RTN","ORDV06B",32,0)
 N ITMP,FIELDS,INSTRUCT,COMMENTS,REASON,NVSDT,TYPE,ILST,J,SORTDT,STOPDT
"RTN","ORDV06B",33,0)
 S ILST=0,ITMP=""
"RTN","ORDV06B",34,0)
 F  S ITMP=$O(^TMP("PS",$J,ITMP)) Q:'ITMP  D
"RTN","ORDV06B",35,0)
 . K INSTRUCT,COMMENTS,REASON,ORIFN
"RTN","ORDV06B",36,0)
 . K ^TMP("ORACT",$J,"COMMENTS")
"RTN","ORDV06B",37,0)
 . S COMMENTS="^TMP(""ORACT"",$J,""COMMENTS"")"
"RTN","ORDV06B",38,0)
 . S (INSTRUCT,@COMMENTS,STOPDT)="",FIELDS=^TMP("PS",$J,ITMP,0)
"RTN","ORDV06B",39,0)
 . S $P(FIELDS,"^",17)=$P($G(^TMP("PS",$J,ITMP,"P",0)),"^",2) ;Provider
"RTN","ORDV06B",40,0)
 . S SORTDT=$S($L($P(FIELDS,"^",10)):$P(FIELDS,"^",10),1:$P(FIELDS,"^",15)) ;Date Priority: 1)Last Fill Date, 2)Issue/Start Date, 3)Order Date
"RTN","ORDV06B",41,0)
 . I 'SORTDT D  ;If pharmacy API doesn't screen out data within selected date range, check CPRS OrderDate and screen out as appropriate
"RTN","ORDV06B",42,0)
 .. K ^TMP("ORXPS",$J) M ^TMP("ORXPS",$J)=^TMP("PS",$J)
"RTN","ORDV06B",43,0)
 .. D OEL^PSOORRL(DFN,$P(FIELDS,"^")) ;This API uses same ^TMP("PS" global
"RTN","ORDV06B",44,0)
 .. S ORIFN=+$P(^TMP("PS",$J,0),"^",11) I ORIFN S SORTDT=$P(^OR(100,ORIFN,0),"^",7),STOPDT=$P(^(0),"^",9)
"RTN","ORDV06B",45,0)
 .. M ^TMP("PS",$J)=^TMP("ORXPS",$J) K ^TMP("ORXPS",$J)
"RTN","ORDV06B",46,0)
 . S TYPE=$S($P($P(FIELDS,U),";",2)="O":"OP",1:"UD")
"RTN","ORDV06B",47,0)
 . I $D(^TMP("PS",$J,ITMP,"CLINIC",0)) S TYPE="CP"
"RTN","ORDV06B",48,0)
 . N LOC,LOCEX S (LOC,LOCEX)=""
"RTN","ORDV06B",49,0)
 . I TYPE="CP" S LOC=$G(^TMP("PS",$J,ITMP,"CLINIC",0))
"RTN","ORDV06B",50,0)
 . S:LOC LOCEX=$P($G(^SC(+LOC,0)),U)_":"_+LOC ;IMO
"RTN","ORDV06B",51,0)
 . I TYPE="OP",$P(FIELDS,";")["N" S TYPE="NV" ;non-VA med
"RTN","ORDV06B",52,0)
 . ;Next line excludes any data where (ExpirationDate, LastFill Date, StartDate or OrderDate) is outside of selected date range for everything except non-VAmeds.
"RTN","ORDV06B",53,0)
 . I TYPE'="NV",SORTDT<ORBEG!(SORTDT>OREND),($P(FIELDS,"^",4)<ORBEG!($P(FIELDS,"^",4)>OREND)),($P(FIELDS,"^",10)<ORBEG!($P(FIELDS,"^",10)>OREND)),($P(FIELDS,"^",15)<ORBEG!($P(FIELDS,"^",15)>OREND)) Q
"RTN","ORDV06B",54,0)
 . I $P(FIELDS,"^",9)["DISCONTINUED",(TYPE="OP"!(TYPE="NV")) D
"RTN","ORDV06B",55,0)
 .. K ^TMP("ORXPS",$J) M ^TMP("ORXPS",$J)=^TMP("PS",$J)
"RTN","ORDV06B",56,0)
 .. D OEL^PSOORRL(DFN,$P(FIELDS,"^")) ;This API uses same ^TMP("PS" global
"RTN","ORDV06B",57,0)
 .. S ORIFN=+$P(^TMP("PS",$J,0),"^",11) I ORIFN S STOPDT=$P(^OR(100,ORIFN,0),"^",9)
"RTN","ORDV06B",58,0)
 .. M ^TMP("PS",$J)=^TMP("ORXPS",$J) K ^TMP("ORXPS",$J)
"RTN","ORDV06B",59,0)
 .. I TYPE="NV",'$L($P(FIELDS,"^",4)) S $P(FIELDS,"^",4)=STOPDT
"RTN","ORDV06B",60,0)
 .. I TYPE="OP" S $P(FIELDS,"^",4)=STOPDT
"RTN","ORDV06B",61,0)
 . I $O(^TMP("PS",$J,ITMP,"A",0))>0 S TYPE="IV"
"RTN","ORDV06B",62,0)
 . I $O(^TMP("PS",$J,ITMP,"B",0))>0 S TYPE="IV"
"RTN","ORDV06B",63,0)
 . I (TYPE="UD")!(TYPE="CP") D UDINST^ORWPS(.INSTRUCT,ITMP)
"RTN","ORDV06B",64,0)
 . I TYPE="OP" D OPINST^ORWPS(.INSTRUCT,ITMP)
"RTN","ORDV06B",65,0)
 . I TYPE="IV" D IVINST^ORWPS(.INSTRUCT,ITMP)
"RTN","ORDV06B",66,0)
 . I TYPE="NV" D NVINST^ORWPS(.INSTRUCT,ITMP),NVREASON^ORWPS(.REASON,.NVSDT,ITMP)
"RTN","ORDV06B",67,0)
 . I (TYPE="UD")!(TYPE="IV")!(TYPE="NV")!(TYPE="CP") D SETMULT^ORWPS(COMMENTS,ITMP,"SIO")
"RTN","ORDV06B",68,0)
 . M COMMENTS=@COMMENTS
"RTN","ORDV06B",69,0)
 . I $D(COMMENTS(1)) S COMMENTS(1)="\"_COMMENTS(1)
"RTN","ORDV06B",70,0)
 . I '$L($P(FIELDS,U,15)) S:TYPE="NV" $P(FIELDS,U,15)=$P($G(NVSDT),".") ;Set Start Date for non-VA Med (from file 100, which currently doesn't get set)
"RTN","ORDV06B",71,0)
 . I LOC S ^TMP("ORPS",$J,$$NXT)="~CP:"_LOCEX_U_FIELDS
"RTN","ORDV06B",72,0)
 . E  S ^TMP("ORPS",$J,$$NXT)="~"_TYPE_U_FIELDS
"RTN","ORDV06B",73,0)
 . S J=0 F  S J=$O(INSTRUCT(J)) Q:'J  S ^TMP("ORPS",$J,$$NXT)=INSTRUCT(J)
"RTN","ORDV06B",74,0)
 . S J=0 F  S J=$O(COMMENTS(J)) Q:'J  S ^TMP("ORPS",$J,$$NXT)="t"_COMMENTS(J)
"RTN","ORDV06B",75,0)
 . S J=0 F  S J=$O(REASON(J)) Q:'J  S ^TMP("ORPS",$J,$$NXT)="t"_REASON(J)
"RTN","ORDV06B",76,0)
 K ^TMP("PS",$J),^TMP("ORACT",$J)
"RTN","ORDV06B",77,0)
 Q
"RTN","ORDV06B",78,0)
NXT() ; increment ILST
"RTN","ORDV06B",79,0)
 S ILST=ILST+1
"RTN","ORDV06B",80,0)
 Q ILST
"RTN","ORDV06B",81,0)
 ;
"RTN","ORDV06B",82,0)
GETMED ;
"RTN","ORDV06B",83,0)
 N J,ORIPS,ORIPSS,ORDRGIEN,ORDRG,ORRXNO,ORSTAT,ORQTY,OREXP,ORISSUE,ORLAST,ORREF,ORPRVD,ORCOST,ORSIG,ORT,ORX0
"RTN","ORDV06B",84,0)
 N ECD,GMR,GMW,IX,PSOBEGIN,GMTSNDM,GMTS1,GMTS2,ORSITE,SITE,X,NONVA,INST,OLDORI,RT,X,X2,X3,ORII,ORKK
"RTN","ORDV06B",85,0)
 S ORSITE=$$SITE^VASITE,ORSITE=$P(ORSITE,"^",2)_";"_$P(ORSITE,"^",3)
"RTN","ORDV06B",86,0)
 ;Sorted by STATUS then by DRUG NAME
"RTN","ORDV06B",87,0)
 K ^TMP("ORDATA",$J),^TMP("ORXPND",$J),^TMP("ORT",$J)
"RTN","ORDV06B",88,0)
 I '$L($T(GCPR^OMGCOAS1)) D
"RTN","ORDV06B",89,0)
 . K ^TMP("ORPS",$J)
"RTN","ORDV06B",90,0)
 . D @GO
"RTN","ORDV06B",91,0)
 S (OLDORI,ORIPS,ORT)=0
"RTN","ORDV06B",92,0)
 F  S ORIPS=$O(^TMP("ORPS",$J,ORIPS)) Q:(ORIPS'>0)  S X=$G(^(ORIPS)) I X'="" D
"RTN","ORDV06B",93,0)
 . I $E(X)="~" D  Q
"RTN","ORDV06B",94,0)
 .. S OLDORI=ORIPS,ORT=0,X3=$S($L($P(X,"^",10)):$P(X,"^",10),1:"ZUNKNOWN"),X2=$S($L($P(X,"^",3)):$P(X,"^",3),1:"ZUNKNOWN")
"RTN","ORDV06B",95,0)
 .. S ^TMP("ORT",$J,X3,X2,ORIPS)=X
"RTN","ORDV06B",96,0)
 . I $L(X2),$L(X3),$E(X)="\" S ORT=ORT+1,^TMP("ORT",$J,X3,X2,OLDORI,ORT)=$E(X,2,9999)
"RTN","ORDV06B",97,0)
 S ORII=""
"RTN","ORDV06B",98,0)
 F  S ORII=$O(^TMP("ORT",$J,ORII)) Q:ORII=""  S ORKK="" F  S ORKK=$O(^TMP("ORT",$J,ORII,ORKK)) Q:ORKK=""  D
"RTN","ORDV06B",99,0)
 . S ORIPS=0 F  S ORIPS=$O(^TMP("ORT",$J,ORII,ORKK,ORIPS)) Q:(ORIPS'>0)  S ORX0=^(ORIPS) D
"RTN","ORDV06B",100,0)
 .. I $E(ORX0)="~" D  Q
"RTN","ORDV06B",101,0)
 ... S ORIPSS=$S($L($P(ORX0,U,10)):$E($P(ORX0,U,10),1,10),1:"UNK")_"_"_$S($L($P(ORX0,U,3)):$P(ORX0,U,3),1:"UNK")_"_"_ORIPS
"RTN","ORDV06B",102,0)
 ... S ^TMP("ORDATA",$J,ORIPSS,"WP",1)="1^"_ORSITE ;Station ID
"RTN","ORDV06B",103,0)
 ... S ^TMP("ORDATA",$J,ORIPSS,"WP",2)="2^"_$P(ORX0,U,3) ;Medication Name
"RTN","ORDV06B",104,0)
 ... S ^TMP("ORDATA",$J,ORIPSS,"WP",3)="3^"_$P(ORX0,U,10) ;Status
"RTN","ORDV06B",105,0)
 ... S X=$P($P(ORX0,"^",2),";",2),^TMP("ORDATA",$J,ORIPSS,"WP",4)="4^"_$S(X="I":"IN",X="C":"IN",1:"OUT") ;In/OutPatient
"RTN","ORDV06B",106,0)
 ... S X=$P(ORX0,"^"),^TMP("ORDATA",$J,ORIPSS,"WP",5)="5^"_$S(X="~NV":"NonVAMed",1:"RX") ;Type: RX or NonVA Med
"RTN","ORDV06B",107,0)
 ... S ^TMP("ORDATA",$J,ORIPSS,"WP",6)="6^"_$$DATE^ORDVU($P(ORX0,U,16)) ;Start Date
"RTN","ORDV06B",108,0)
 ... S ^TMP("ORDATA",$J,ORIPSS,"WP",7)="7^"_$$DATE^ORDVU($P(ORX0,U,5)) ;Stop Date
"RTN","ORDV06B",109,0)
 ... S ^TMP("ORDATA",$J,ORIPSS,"WP",8)="8^"_$$DATE^ORDVU($P(ORX0,U,11)) ;Last Fill Date
"RTN","ORDV06B",110,0)
 ... S ^TMP("ORDATA",$J,ORIPSS,"WP",9)="9^"_$P(ORX0,U,18) ;Provider
"RTN","ORDV06B",111,0)
 ... S ^TMP("ORDATA",$J,ORIPSS,"WP",12)="12^[+]" ;flag for detail
"RTN","ORDV06B",112,0)
 ... S X=$P(ORX0,"^",2) D DETAIL^ORWPS(.RT,DFN,X)
"RTN","ORDV06B",113,0)
 ... S J=0 F  S J=$O(^TMP("ORXPND",$J,J)) Q:'J  S X=^(J,0),^TMP("ORDATA",$J,ORIPSS,"WP",11,J)="11^"_X ;Details from Order
"RTN","ORDV06B",114,0)
 ... K ^TMP("ORXPND",$J)
"RTN","ORDV06B",115,0)
 ... S ORT=0 F  S ORT=$O(^TMP("ORT",$J,ORII,ORKK,ORIPS,ORT)) Q:'ORT  S X=^(ORT),^TMP("ORDATA",$J,ORIPSS,"WP",10,ORT)="10^"_X ;Instructions
"RTN","ORDV06B",116,0)
 K ^TMP("ORPS",$J),^TMP("ORXPND",$J),^TMP("ORT",$J)
"RTN","ORDV06B",117,0)
 S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV06B",118,0)
 Q
"RTN","ORIMO")
0^6^B3277195
"RTN","ORIMO",1,0)
ORIMO ;SLC/JDL - Inpatient medication on outpatient. ;01/13/16  15:15
"RTN","ORIMO",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**187,190,195,215,243,350,424**;Dec 17, 1997;Build 8
"RTN","ORIMO",3,0)
IMOLOC(ORY,ORLOC,ORDFN) ;ORY>=0: LOC is an IMO authorized location
"RTN","ORIMO",4,0)
 S ORY=-1
"RTN","ORIMO",5,0)
 N PACH,A
"RTN","ORIMO",6,0)
 K ^TMP($J,"ORIMO")
"RTN","ORIMO",7,0)
 S PACH=$$PATCH^XPDUTL("PSJ*5.0*111")
"RTN","ORIMO",8,0)
 Q:'PACH
"RTN","ORIMO",9,0)
 I $L($TEXT(SDIMO^SDAMA203)) D
"RTN","ORIMO",10,0)
 . ;#DBIA 4133
"RTN","ORIMO",11,0)
 . S ORY=$$SDIMO^SDAMA203(ORLOC,ORDFN)
"RTN","ORIMO",12,0)
 . ;if RSA returns an error then check against Clinic Loc.
"RTN","ORIMO",13,0)
 . I ORY=-3 D
"RTN","ORIMO",14,0)
 . .I $P($G(^SC(ORLOC,0)),U,3)'="C" Q
"RTN","ORIMO",15,0)
 . .I $D(^SC("AE",1,ORLOC))=1 S ORY=1
"RTN","ORIMO",16,0)
 . K SDIMO(1)
"RTN","ORIMO",17,0)
 I $D(^TMP($J,"OR MOB APP1")) K ^("OR MOB APP1") D ALL^PSJ53P46(+ORLOC,"ORIMO") S A=$G(^TMP($J,"ORIMO",0)) I A'>0!(+$G(^TMP($J,"ORIMO",A,3))=0) S ORY=-1
"RTN","ORIMO",18,0)
 Q
"RTN","ORIMO",19,0)
 ;
"RTN","ORIMO",20,0)
IMOOD(ORY,ORDERID) ;Is it an IMO order?
"RTN","ORIMO",21,0)
 Q:'$D(^OR(100,+ORDERID,0))
"RTN","ORIMO",22,0)
 N PIMO,DGRP,CMGRP,CIGRP
"RTN","ORIMO",23,0)
 S (DGRP,CMGRP,CIGRP,ORY)=0
"RTN","ORIMO",24,0)
 S DGRP=$P($G(^OR(100,+ORDERID,0)),U,11)
"RTN","ORIMO",25,0)
 S CMGRP=$O(^ORD(100.98,"B","CLINIC MEDICATIONS",""))
"RTN","ORIMO",26,0)
 S CIGRP=$O(^ORD(100.98,"B","CLINIC INFUSIONS",""))
"RTN","ORIMO",27,0)
 I DGRP=CMGRP S ORY=1
"RTN","ORIMO",28,0)
 I DGRP=CIGRP S ORY=1
"RTN","ORIMO",29,0)
 Q
"RTN","ORIMO",30,0)
 ;
"RTN","ORIMO",31,0)
ISCLOC(ORY,ALOC) ;Is it a clinical location
"RTN","ORIMO",32,0)
 S ORY=0
"RTN","ORIMO",33,0)
 Q:'$D(^SC(+ALOC,0))
"RTN","ORIMO",34,0)
 I $P(^SC(+ALOC,0),U,3)="C" S ORY=1
"RTN","ORIMO",35,0)
 Q
"RTN","ORIMO",36,0)
ISIVQO(ORY,DLGID) ;Is it an IV quick order
"RTN","ORIMO",37,0)
 S ORY=0
"RTN","ORIMO",38,0)
 Q:'$D(^ORD(101.41,DLGID,0))
"RTN","ORIMO",39,0)
 N IVGRP,DLGTYP,DLGGRP
"RTN","ORIMO",40,0)
 S IVGRP=$O(^ORD(100.98,"B","IV RX",0))
"RTN","ORIMO",41,0)
 S DLGTYP=$P($G(^ORD(101.41,DLGID,0)),U,4)
"RTN","ORIMO",42,0)
 S DLGGRP=$P($G(^ORD(101.41,DLGID,0)),U,5)
"RTN","ORIMO",43,0)
 I (DLGTYP="Q"),(DLGGRP=IVGRP) S ORY=1
"RTN","ORIMO",44,0)
 Q
"RTN","ORUTL4")
0^7^B10505895
"RTN","ORUTL4",1,0)
ORUTL4 ;SLC/CB/TC - OE/RR Utilities ;12/11/15  07:57
"RTN","ORUTL4",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**350,424**;Dec 17, 1997;Build 8
"RTN","ORUTL4",3,0)
 ;
"RTN","ORUTL4",4,0)
 ;
"RTN","ORUTL4",5,0)
 ;
"RTN","ORUTL4",6,0)
DLL(ORRSLTS,ORDLLNME,ORDLLVRS) ; Will check DLL version against the server to see if it's valid
"RTN","ORUTL4",7,0)
 ; Input parameters
"RTN","ORUTL4",8,0)
 ;  1. ORRSLTS    RPC Return array
"RTN","ORUTL4",9,0)
 ;  2. ORDLLNME   Name of Dll to look up
"RTN","ORUTL4",10,0)
 ;  3. ORDLLVRS   Version of the DLL on the user's machine
"RTN","ORUTL4",11,0)
 ;
"RTN","ORUTL4",12,0)
 S ORDLLNME=$$UP^XLFSTR(ORDLLNME)
"RTN","ORUTL4",13,0)
 I ORDLLNME="GMV_VITALSVIEWENTER.DLL" D VITAL(.ORRSLTS,ORDLLVRS)
"RTN","ORUTL4",14,0)
 I ORDLLNME=$$UP^XLFSTR($$GET^XPAR("SYS","YS MHA_A DLL NAME")) D MENTAL(.ORRSLTS,ORDLLVRS,ORDLLNME)
"RTN","ORUTL4",15,0)
 I ORDLLNME="ORDERCOM.DLL" D CPRSMOB(.ORRSLTS,ORDLLVRS) S ^TMP($J,"OR MOB APP1")=""
"RTN","ORUTL4",16,0)
 I ORRSLTS="" S ORRSLTS="-1"
"RTN","ORUTL4",17,0)
 Q
"RTN","ORUTL4",18,0)
 ;
"RTN","ORUTL4",19,0)
VITAL(ORRSLTS,ORDLLVRS) ;
"RTN","ORUTL4",20,0)
 ; Input parameters
"RTN","ORUTL4",21,0)
 ;  1. ORRSLTS    The return message
"RTN","ORUTL4",22,0)
 ;  2. ORDLLVRS   Version of the DLL on the user's machine
"RTN","ORUTL4",23,0)
 ;
"RTN","ORUTL4",24,0)
 N ORVAL S ORRSLTS=""
"RTN","ORUTL4",25,0)
 S ORVAL=$$GET^XPAR("SYS","GMV DLL VERSION",ORDLLVRS,"E")
"RTN","ORUTL4",26,0)
 I ORVAL="YES" S ORRSLTS=1
"RTN","ORUTL4",27,0)
 E  S ORRSLTS="-1^This version of the Vitals Viewer "_ORDLLVRS_" is not compatible with the server software. Please contact IRM to update the GMV_VitalsViewEnter.dll file."
"RTN","ORUTL4",28,0)
 Q
"RTN","ORUTL4",29,0)
 ;
"RTN","ORUTL4",30,0)
MENTAL(ORRSLTS,ORDLLVRS,ORDLLNME) ;
"RTN","ORUTL4",31,0)
 ; Input parameters
"RTN","ORUTL4",32,0)
 ;  1. ORRSLTS    The return message
"RTN","ORUTL4",33,0)
 ;  2. ORDLLVRS   Version of the DLL on the user's machine
"RTN","ORUTL4",34,0)
 ;  3. ORDLLNME   Name of Dll to look up
"RTN","ORUTL4",35,0)
 ;
"RTN","ORUTL4",36,0)
 N ORYSLST,ORYSVAL,ORREQVER S ORRSLTS=""
"RTN","ORUTL4",37,0)
 D FIND^DIC(19,,1,"X","YS BROKER1",1,,,,"ORYSLST")
"RTN","ORUTL4",38,0)
 I 'ORYSLST("DILIST",0) S ORRSLTS="-1^The YS BROKER1 option is not installed on this server. Please contact IRM to get this installed." Q
"RTN","ORUTL4",39,0)
 S ORYSVAL=$G(ORYSLST("DILIST","ID",1,1))
"RTN","ORUTL4",40,0)
 S ORREQVER=$P($P(ORYSVAL,"version ",2),"~",2)
"RTN","ORUTL4",41,0)
 I ORDLLVRS=ORREQVER S ORRSLTS=1
"RTN","ORUTL4",42,0)
 E  S ORRSLTS="-1^This is version "_ORDLLVRS_" of "_ORDLLNME_". "_ORREQVER_" is now the proper version in service. Please contact your local IRM or CPRS expert to obtain the updated version."
"RTN","ORUTL4",43,0)
 Q
"RTN","ORUTL4",44,0)
 ;
"RTN","ORUTL4",45,0)
CPRSMOB(ORRSLTS,ORDLLVRS) ;
"RTN","ORUTL4",46,0)
 ; Input parameters
"RTN","ORUTL4",47,0)
 ;  1. ORRSLTS    The return message
"RTN","ORUTL4",48,0)
 ;  2. ORDLLVRS   Version of the DLL on the user's machine
"RTN","ORUTL4",49,0)
 ;
"RTN","ORUTL4",50,0)
 N ORREQVER S ORRSLTS=""
"RTN","ORUTL4",51,0)
 S ORREQVER=$$GET^XPAR("SYS^PKG","OR MOB DLL VERSION")
"RTN","ORUTL4",52,0)
 I ORDLLVRS=ORREQVER S ORRSLTS="1^"_ORREQVER
"RTN","ORUTL4",53,0)
 E  S ORRSLTS="-1^"_ORREQVER_"^This version of the CPRS MOB "_ORDLLVRS_" is not compatible with the server software. Please contact IRM to update the OrderCom.dll file."
"RTN","ORUTL4",54,0)
 Q
"RTN","ORUTL4",55,0)
 ;
"RTN","ORWDPS2")
0^4^B63130016
"RTN","ORWDPS2",1,0)
ORWDPS2 ; SLC/KCM/JLI - Pharmacy Calls for Windows Dialog;05/09/2007 ;01/04/16  09:23
"RTN","ORWDPS2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**85,116,125,131,132,148,141,195,215,258,243,424**;Dec 17, 1997;Build 8
"RTN","ORWDPS2",3,0)
 ;
"RTN","ORWDPS2",4,0)
OISLCT(LST,OI,PSTYPE,ORVP,NEEDPI,PKIACTIV) ; return for defaults for pharmacy orderable item
"RTN","ORWDPS2",5,0)
 I $D(NEEDPI),(NEEDPI="Y"),$G(^TMP($J,"ORWDX LOADRSP","QO SAVE")) D  ;check if bug for Supply, Clin Med/IV for NEEDPI
"RTN","ORWDPS2",6,0)
 .N ORQOIEN S ORQOIEN=$O(^ORD(101.41,"B","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDPS2",7,0)
 .N ORQOI S ORQOI=$O(^ORD(101.41,$G(^TMP($J,"ORWDX LOADRSP","QO SAVE")),6,"D",ORQOIEN,0)) Q:'ORQOI
"RTN","ORWDPS2",8,0)
 .N ORQOOI S ORQOOI=$G(^ORD(101.41,$G(^TMP($J,"ORWDX LOADRSP","QO SAVE")),6,ORQOI,1)) Q:'ORQOOI
"RTN","ORWDPS2",9,0)
 .I +OI=+ORQOOI D  ;make sure QO orderable is the same as the orderable here
"RTN","ORWDPS2",10,0)
 ..N ORQOPIDA S ORQOPIDA=$O(^ORD(101.41,"B","OR GTX PATIENT INSTRUCTIONS",0))
"RTN","ORWDPS2",11,0)
 ..I '$D(^ORD(101.41,$G(^TMP($J,"ORWDX LOADRSP","QO SAVE")),6,"D",ORQOPIDA)) S NEEDPI="N"
"RTN","ORWDPS2",12,0)
 K ^TMP($J,"ORWDX LOADRSP","QO SAVE")
"RTN","ORWDPS2",13,0)
 N ILST,ORDOSE,ORWPSOI,ORWDOSES,X1,X2
"RTN","ORWDPS2",14,0)
 K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J),^TMP("PSSDIN",$J)
"RTN","ORWDPS2",15,0)
 S ILST=0
"RTN","ORWDPS2",16,0)
 S ORWPSOI=0
"RTN","ORWDPS2",17,0)
 S:+OI ORWPSOI=+$P($G(^ORD(101.43,+OI,0)),U,2)
"RTN","ORWDPS2",18,0)
 D START^PSSJORDF(ORWPSOI,$S(PSTYPE="U":"I",1:"O")) ; dflt route, schedule, etc.
"RTN","ORWDPS2",19,0)
 I '$L($T(DOSE^PSSOPKI1)) D DOSE^PSSORUTL(.ORDOSE,ORWPSOI,PSTYPE,ORVP)       ; dflt doses
"RTN","ORWDPS2",20,0)
 I $L($T(DOSE^PSSOPKI1)) D DOSE^PSSOPKI1(.ORDOSE,ORWPSOI,PSTYPE,ORVP)       ; dflt doses NEW PKI CODE from pharmacy
"RTN","ORWDPS2",21,0)
 D EN^PSSDIN(ORWPSOI)                               ; nfi text
"RTN","ORWDPS2",22,0)
 S ILST=ILST+1,LST(ILST)="~Medication"
"RTN","ORWDPS2",23,0)
 S ILST=ILST+1,LST(ILST)="d"_OI_U_$S(+OI:$P(^ORD(101.43,OI,0),U),1:"")
"RTN","ORWDPS2",24,0)
 S ILST=ILST+1,LST(ILST)="~Verb"
"RTN","ORWDPS2",25,0)
 S ILST=ILST+1,LST(ILST)="d"_$P($G(ORDOSE("MISC")),U)
"RTN","ORWDPS2",26,0)
 S ILST=ILST+1,LST(ILST)="~Preposition"
"RTN","ORWDPS2",27,0)
 S ILST=ILST+1,LST(ILST)="d"_$P($G(ORDOSE("MISC")),U,2)
"RTN","ORWDPS2",28,0)
 I $D(NEEDPI),(NEEDPI="Y") S ILST=ILST+1,LST(ILST)="~PtInstr" D PTINSTR
"RTN","ORWDPS2",29,0)
 ;S:NEEDPI="Y" ILST=ILST+1,LST(ILST)="~PtInstr"   D PTINSTR
"RTN","ORWDPS2",30,0)
 S ILST=ILST+1,LST(ILST)="~AllDoses"  D ALLDOSE ; must do before DOSAGE
"RTN","ORWDPS2",31,0)
 S ILST=ILST+1,LST(ILST)="~Dosage"    D DOSAGE
"RTN","ORWDPS2",32,0)
 S ILST=ILST+1,LST(ILST)="~Dispense"  D DISPLST
"RTN","ORWDPS2",33,0)
 S ILST=ILST+1,LST(ILST)="~Route"     D ROUTE
"RTN","ORWDPS2",34,0)
 S ILST=ILST+1,LST(ILST)="~Schedule"  D SCHED
"RTN","ORWDPS2",35,0)
 S ILST=ILST+1,LST(ILST)="~Guideline" D GUIDE
"RTN","ORWDPS2",36,0)
 S ILST=ILST+1,LST(ILST)="~Message"   D OIMSG
"RTN","ORWDPS2",37,0)
 S ILST=ILST+1,LST(ILST)="~DEASchedule" ;PKI
"RTN","ORWDPS2",38,0)
 ;S ILST=ILST+1,LST(ILST)="d"_$P($G(ORDOSE("DEA")),U) ;PKI
"RTN","ORWDPS2",39,0)
 S ILST=ILST+1,LST(ILST)="d" ;PKI
"RTN","ORWDPS2",40,0)
 I $D(ORDOSE("DEA")) S X="",X1=$P(ORDOSE("DEA"),";"),X2=$P(ORDOSE("DEA"),";",2) D
"RTN","ORWDPS2",41,0)
 . I '$L(X2) Q
"RTN","ORWDPS2",42,0)
 . I $G(PKIACTIV)="Y" S X=X2
"RTN","ORWDPS2",43,0)
 S LST(ILST)=LST(ILST)_X
"RTN","ORWDPS2",44,0)
 I PSTYPE="U" D
"RTN","ORWDPS2",45,0)
 . ; start, expires, next admin
"RTN","ORWDPS2",46,0)
 I PSTYPE="O" D
"RTN","ORWDPS2",47,0)
 . ; days supply, quantity, refills
"RTN","ORWDPS2",48,0)
 K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J),^TMP("PSSDIN",$J)
"RTN","ORWDPS2",49,0)
 Q
"RTN","ORWDPS2",50,0)
 ;
"RTN","ORWDPS2",51,0)
PTINSTR ; from OISLCT, set up patient instructions
"RTN","ORWDPS2",52,0)
 N I
"RTN","ORWDPS2",53,0)
 S I=0 F  S I=$O(ORDOSE("PI",I)) Q:I'>0  S ILST=ILST+1,LST(ILST)="t"_ORDOSE("PI",I)
"RTN","ORWDPS2",54,0)
 Q
"RTN","ORWDPS2",55,0)
DOSAGE ; from OISLCT, set up the list of dosages
"RTN","ORWDPS2",56,0)
 ; LST(n)=iDrugName^Strength^NF^... (see BLDDOSE)
"RTN","ORWDPS2",57,0)
 ; must be called after ALLDOSE so ORWDOSES is set up
"RTN","ORWDPS2",58,0)
 N I
"RTN","ORWDPS2",59,0)
 S I=0 F  S I=$O(ORWDOSES(I)) Q:I'>0  S ILST=ILST+1,LST(ILST)=ORWDOSES(I)
"RTN","ORWDPS2",60,0)
 Q
"RTN","ORWDPS2",61,0)
DISPLST ; from OISLCT, set up list of dispense drugs
"RTN","ORWDPS2",62,0)
 ; DrugIEN^Strength^Units^Name^Split
"RTN","ORWDPS2",63,0)
 N DD
"RTN","ORWDPS2",64,0)
 S DD=0 F  S DD=$O(ORDOSE("DD",DD)) Q:'DD  D
"RTN","ORWDPS2",65,0)
 . S ILST=ILST+1
"RTN","ORWDPS2",66,0)
 . S LST(ILST)="i"_DD_U_$P(ORDOSE("DD",DD),U,5,6)_U_$P(ORDOSE("DD",DD),U)_U_$P(ORDOSE("DD",DD),U,11)
"RTN","ORWDPS2",67,0)
 Q
"RTN","ORWDPS2",68,0)
ALLDOSE ; from OISLCT, set up a list of all possible doses
"RTN","ORWDPS2",69,0)
 ; LST(n)=iDrugName^Strength^NF^... (see BLDDOSE)
"RTN","ORWDPS2",70,0)
 N I,J,CONJ,DD,DRUG,DDNM,LDOSE,TEXT,STREN,UD,COST,NF,ID,X
"RTN","ORWDPS2",71,0)
 S CONJ=$P($G(ORDOSE("MISC")),U,3),ORWDOSES=0
"RTN","ORWDPS2",72,0)
 S:$L(CONJ) CONJ=" "_CONJ_" " S:'$L(CONJ) CONJ=" "
"RTN","ORWDPS2",73,0)
 S I=0 F  S I=$O(ORDOSE(I)) Q:I'>0  D
"RTN","ORWDPS2",74,0)
 . S X=$$BLDDOSE(ORDOSE(I))
"RTN","ORWDPS2",75,0)
 . S ORWDOSES=ORWDOSES+1,ORWDOSES(ORWDOSES)=X
"RTN","ORWDPS2",76,0)
 . S ILST=ILST+1
"RTN","ORWDPS2",77,0)
 . S LST(ILST)="i"_$P(X,U,5)_U_$P($P(X,U,4),"&",6)_U_$P(X,U,4)
"RTN","ORWDPS2",78,0)
 . S J=0 F  S J=$O(ORDOSE(I,J)) Q:J'>0  D
"RTN","ORWDPS2",79,0)
 . . S X=$$BLDDOSE(ORDOSE(I,J))
"RTN","ORWDPS2",80,0)
 . . S ILST=ILST+1
"RTN","ORWDPS2",81,0)
 . . S LST(ILST)="i"_$P(X,U,5)_U_$P($P(X,U,4),"&",6)_U_$P(X,U,4)
"RTN","ORWDPS2",82,0)
 Q
"RTN","ORWDPS2",83,0)
BLDDOSE(X) ; build dose info where X is ORDOSE node
"RTN","ORWDPS2",84,0)
 ; from ALLDOSE
"RTN","ORWDPS2",85,0)
 ;    X=TotalDose^Units^U/D^Noun^LocalDose^DispDrugIEN
"RTN","ORWDPS2",86,0)
 ;    Y=iDrugName^Strength^NF^TDose&Units&U/D&Noun&LDose&Drug&Stren&Units^
"RTN","ORWDPS2",87,0)
 ;      DoseText^CostText^MaxRefills^DispUnits^CanSplit
"RTN","ORWDPS2",88,0)
 ; DRUG=Name^Cost^NF^DispUnit^Strength^Units^DoseForm^MaxRefills^
"RTN","ORWDPS2",89,0)
 ; No TotalDose,           use LocalDose
"RTN","ORWDPS2",90,0)
 ; TotalDose & Strength,   use LocalDose+Conjunction+Strength+Units
"RTN","ORWDPS2",91,0)
 ; TotalDose, No Strength, use LocalDose+Conjunction+DispenseName
"RTN","ORWDPS2",92,0)
 N Y
"RTN","ORWDPS2",93,0)
 S DD=+$P(X,U,6),DRUG=ORDOSE("DD",DD),DDNM=$P(DRUG,U),ID=$P(X,U,1,6)
"RTN","ORWDPS2",94,0)
 S LDOSE=$P(X,U,5),TEXT=LDOSE,STREN=$P(DRUG,U,5)_$P(DRUG,U,6)
"RTN","ORWDPS2",95,0)
 S $P(ID,U,7)=$P(DRUG,U,5) S $P(ID,U,8)=$P(DRUG,U,6) ; add strength
"RTN","ORWDPS2",96,0)
 I '$L($P(X,U)),$L($P(DRUG,U,5))  S TEXT=TEXT_CONJ_STREN
"RTN","ORWDPS2",97,0)
 I '$L($P(X,U)),'$L($P(DRUG,U,5)) S TEXT=TEXT_CONJ_$P(DRUG,U)
"RTN","ORWDPS2",98,0)
 S UD=$P(X,U,3),COST=$P(X,U,7),NF=$S($P(DRUG,U,3):"NF",1:"")
"RTN","ORWDPS2",99,0)
 ;I UD S COST="$"_$J(UD*$P(DRUG,U,2),1,3) ;_" per "_UD_" "_$P(X,U,4)
"RTN","ORWDPS2",100,0)
 S Y="i"_DDNM_U_STREN_U_NF_U_$TR(ID,U,"&")_U_TEXT_U_COST_U_$P(DRUG,U,8)_U_$P(DRUG,U,4)
"RTN","ORWDPS2",101,0)
 Q Y
"RTN","ORWDPS2",102,0)
ROUTE ; from OISLCT, get list of routes for the drug form
"RTN","ORWDPS2",103,0)
 ; ** NEED BOTH ABBREVIATION & NAME IN LIST BOX
"RTN","ORWDPS2",104,0)
 N I,CNT,ABBR,IEN,ROUT,EXP,X
"RTN","ORWDPS2",105,0)
 S I="" F  S I=$O(^TMP("PSJMR",$J,I)) Q:I=""  D
"RTN","ORWDPS2",106,0)
 . S X=^TMP("PSJMR",$J,I)
"RTN","ORWDPS2",107,0)
 . S ROUT=$P(X,U),ABBR=$P(X,U,2),IEN=$P(X,U,3),EXP=$P(X,U,4)
"RTN","ORWDPS2",108,0)
 . S ILST=ILST+1,LST(ILST)="i"_IEN_U_ROUT_U_ABBR_U_EXP_U_$P(X,U,5)
"RTN","ORWDPS2",109,0)
 . I $P(X,U,6)="D",IEN S ILST=ILST+1,LST(ILST)="d"_IEN_U_ROUT ;_U_ABBR ; assume first always default
"RTN","ORWDPS2",110,0)
 ; add abbreviations to list of routes, commented out for 15.5 on
"RTN","ORWDPS2",111,0)
 ; S I="" F  S I=$O(^TMP("PSJMR",$J,I)) Q:I=""  D
"RTN","ORWDPS2",112,0)
 ; . S X=^TMP("PSJMR",$J,I)
"RTN","ORWDPS2",113,0)
 ; . S ROUT=$P(X,U),ABBR=$P(X,U,2),IEN=$P(X,U,3),EXP=$P(X,U,4)
"RTN","ORWDPS2",114,0)
 ; . I $L(ABBR),(ABBR'=ROUT) S ILST=ILST+1,LST(ILST)="i"_IEN_U_ABBR_" ("_ROUT_")"_U_ABBR_U_EXP
"RTN","ORWDPS2",115,0)
 Q
"RTN","ORWDPS2",116,0)
SCHED ; from OISLCT, get default schedule for this medication
"RTN","ORWDPS2",117,0)
 I $L($G(^TMP("PSJSCH",$J))) S ILST=ILST+1,LST(ILST)="d"_^($J)
"RTN","ORWDPS2",118,0)
 Q
"RTN","ORWDPS2",119,0)
GUIDE ; from OISLCT, get guidelines associated with this medication
"RTN","ORWDPS2",120,0)
 N IEN,I
"RTN","ORWDPS2",121,0)
 S IEN=0 F  S IEN=$O(^TMP("PSSDIN",$J,"OI",ORWPSOI,IEN)) Q:'IEN  D
"RTN","ORWDPS2",122,0)
 . S I=0 F  S I=$O(^TMP("PSSDIN",$J,"OI",ORWPSOI,IEN,I)) Q:'I  D
"RTN","ORWDPS2",123,0)
 . . S ILST=ILST+1,LST(ILST)="t"_^TMP("PSSDIN",$J,"OI",ORWPSOI,IEN,I)
"RTN","ORWDPS2",124,0)
 Q
"RTN","ORWDPS2",125,0)
OIMSG ; from OISLCT, get the orderable item message for this medication
"RTN","ORWDPS2",126,0)
 S I=0 F  S I=$O(^ORD(101.43,OI,8,I)) Q:I'>0  S ILST=ILST+1,LST(ILST)="t"_^(I,0)
"RTN","ORWDPS2",127,0)
 Q
"RTN","ORWDPS2",128,0)
ADMIN(REC,DFN,SCH,OI,LOC,ADMIN) ; return administration time info
"RTN","ORWDPS2",129,0)
 ; REC: StartText^StartTime^Duration^FirstAdmin
"RTN","ORWDPS2",130,0)
 S OI=+$P($G(^ORD(101.43,+OI,0)),U,2)
"RTN","ORWDPS2",131,0)
 S LOC=+$G(^SC(LOC,42)),REC=""
"RTN","ORWDPS2",132,0)
 I $L($G(^DPT(DFN,.1))) S REC=$$FIRST^ORCDPS3(DFN,LOC,OI,SCH,"",$G(ADMIN))
"RTN","ORWDPS2",133,0)
 Q
"RTN","ORWDPS2",134,0)
REQST(VAL,DFN,SCH,OI,LOC,TXT) ; return requested start time
"RTN","ORWDPS2",135,0)
 ; VAL: FirstAdmin time
"RTN","ORWDPS2",136,0)
 S VAL=""
"RTN","ORWDPS2",137,0)
 Q:'$L($G(SCH))  Q:'$G(OI)
"RTN","ORWDPS2",138,0)
 S OI=+$P($G(^ORD(101.43,+OI,0)),U,2)
"RTN","ORWDPS2",139,0)
 S LOC=+$G(^SC(LOC,42))
"RTN","ORWDPS2",140,0)
 S VAL=$P($$RESOLVE^PSJORPOE(DFN,SCH,OI,TXT,LOC),U,2)
"RTN","ORWDPS2",141,0)
 Q
"RTN","ORWDPS2",142,0)
DAY2QTY(VAL,DAY,UPD,SCH,DUR,PAT,DRG) ; return qty for days supply
"RTN","ORWDPS2",143,0)
 ; VAL: quantity
"RTN","ORWDPS2",144,0)
 N ORWX,I,X,ADUR,ADURNM
"RTN","ORWDPS2",145,0)
 S ORWX("DAYS SUPPLY")=DAY
"RTN","ORWDPS2",146,0)
 S ORWX("PATIENT")=PAT
"RTN","ORWDPS2",147,0)
 I DRG S ORWX("DRUG")=DRG
"RTN","ORWDPS2",148,0)
 F I=1:1:$L(UPD,U)-1 D
"RTN","ORWDPS2",149,0)
 . S ORWX("DOSE ORDERED",I)=$P(UPD,U,I)
"RTN","ORWDPS2",150,0)
 . S ORWX("SCHEDULE",I)=$P(SCH,U,I)
"RTN","ORWDPS2",151,0)
 . S ADUR=$P(DUR,U,I),ADURNM=$P($P(ADUR," ",2),"~")
"RTN","ORWDPS2",152,0)
 . S:ADURNM="MONTHS" X=+ADUR_"L"
"RTN","ORWDPS2",153,0)
 . S:ADURNM'="MONTHS" X=+ADUR_$E($P(ADUR," ",2))
"RTN","ORWDPS2",154,0)
 . I $L(X) S ORWX("DURATION",I)=X
"RTN","ORWDPS2",155,0)
 . S X=$E($P(ADUR,"~",2))
"RTN","ORWDPS2",156,0)
 . I $L(X) S ORWX("CONJUNCTION",I)=X
"RTN","ORWDPS2",157,0)
 D QTYX^PSOSIG(.ORWX)
"RTN","ORWDPS2",158,0)
 S VAL=$G(ORWX("QTY"))
"RTN","ORWDPS2",159,0)
 Q
"RTN","ORWDPS2",160,0)
QTY2DAY(VAL,QTY,UPD,SCH,DUR,PAT,DRG) ; return days supply given quantity
"RTN","ORWDPS2",161,0)
 ; VAL: days supply
"RTN","ORWDPS2",162,0)
 N ORWX,I,X,ADUR
"RTN","ORWDPS2",163,0)
 S ORWX("QTY")=QTY
"RTN","ORWDPS2",164,0)
 S ORWX("PATIENT")=PAT
"RTN","ORWDPS2",165,0)
 I DRG S ORWX("DRUG")=DRG
"RTN","ORWDPS2",166,0)
 F I=1:1:$L(UPD,U)-1 D
"RTN","ORWDPS2",167,0)
 . S ORWX("DOSE ORDERED",I)=$P(UPD,U,I)
"RTN","ORWDPS2",168,0)
 . S ORWX("SCHEDULE",I)=$P(SCH,U,I)
"RTN","ORWDPS2",169,0)
 . S ADUR=$P(DUR,U,I),X=+ADUR_$E($P(ADUR," ",2))
"RTN","ORWDPS2",170,0)
 . I $L(X) S ORWX("DURATION",I)=X
"RTN","ORWDPS2",171,0)
 . S X=$E($P(ADUR,"~",2))
"RTN","ORWDPS2",172,0)
 . I $L(X) S ORWX("CONJUNCTION",I)=X
"RTN","ORWDPS2",173,0)
 D QTYX^PSOSIG(.ORWX)
"RTN","ORWDPS2",174,0)
 S VAL=$G(ORWX("DAYS SUPPLY"))
"RTN","ORWDPS2",175,0)
 Q
"RTN","ORWDPS2",176,0)
MAXREF(VAL,PAT,DRG,SUP,OI,OUT) ; return the maximum number of refills
"RTN","ORWDPS2",177,0)
 ; PAT=Patient DFN, DRG=ptr50, SUP=days supply, OI=orderable item
"RTN","ORWDPS2",178,0)
 ; VAL: maximum refills allowed
"RTN","ORWDPS2",179,0)
 N ORWX
"RTN","ORWDPS2",180,0)
 S ORWX("PATIENT")=PAT
"RTN","ORWDPS2",181,0)
 I $G(DRG) S ORWX("DRUG")=+DRG
"RTN","ORWDPS2",182,0)
 I $G(SUP) S ORWX("DAYS SUPPLY")=SUP
"RTN","ORWDPS2",183,0)
 I $G(OI)  S ORWX("ITEM")=+$P(^ORD(101.43,+OI,0),U,2)
"RTN","ORWDPS2",184,0)
 I $G(OUT) S ORWX("DISCHARGE")=1
"RTN","ORWDPS2",185,0)
 D MAX^PSOSIGDS(.ORWX)
"RTN","ORWDPS2",186,0)
 S VAL=$G(ORWX("MAX"))
"RTN","ORWDPS2",187,0)
 Q
"RTN","ORWDPS2",188,0)
SCHREQ(VAL,OI,RTE,DRG) ; return 1 if schedule is required
"RTN","ORWDPS2",189,0)
 ; OI=orderable item, RTE=ptr route, DRG=ptr dispense drug
"RTN","ORWDPS2",190,0)
 S VAL=1
"RTN","ORWDPS2",191,0)
 Q:'$G(OI)  Q:'$G(RTE)
"RTN","ORWDPS2",192,0)
 S VAL=$$SCHREQ^PSJORPOE(RTE,OI,+$G(DRG))
"RTN","ORWDPS2",193,0)
 Q
"RTN","ORWDPS2",194,0)
CHKPI(VAL,ODIFN) ; return pre-existing patient instruct
"RTN","ORWDPS2",195,0)
 N IDNUM,IDPI
"RTN","ORWDPS2",196,0)
 S (IDNUM,IDPI)=0,VAL=""
"RTN","ORWDPS2",197,0)
 I '$D(^OR(100,ODIFN,4.5,"ID","PI")) S VAL="" Q
"RTN","ORWDPS2",198,0)
 F  S IDNUM=$O(^OR(100,ODIFN,4.5,"ID","PI",IDNUM)) Q:'IDNUM  D
"RTN","ORWDPS2",199,0)
 . F  S IDPI=$O(^OR(100,ODIFN,4.5,IDNUM,2,IDPI)) Q:'IDPI  D
"RTN","ORWDPS2",200,0)
 .. S VAL=VAL_^OR(100,ODIFN,4.5,IDNUM,2,IDPI,0)
"RTN","ORWDPS2",201,0)
 K IDNUM,IDPI
"RTN","ORWDPS2",202,0)
 Q
"RTN","ORWDPS2",203,0)
CHKGRP(VAL,ORIFN) ;
"RTN","ORWDPS2",204,0)
 ;Inpatient Med Order Group or Clin Meds Group: return 1
"RTN","ORWDPS2",205,0)
 ;If order belong to Outpatient Med Order Grpoup: return 2
"RTN","ORWDPS2",206,0)
 ;Otherwise, return 0
"RTN","ORWDPS2",207,0)
 S VAL=0
"RTN","ORWDPS2",208,0)
 I '$L(ORIFN) Q
"RTN","ORWDPS2",209,0)
 N UDGRP,IPGRP,OPGRP,ODGRP,ODID,CLMED
"RTN","ORWDPS2",210,0)
 S ODID=+ORIFN
"RTN","ORWDPS2",211,0)
 Q:ODID<1
"RTN","ORWDPS2",212,0)
 S (UDGRP,IPGRP,OPGRP,ODGRP,CLMED)=0
"RTN","ORWDPS2",213,0)
 S UDGRP=$O(^ORD(100.98,"B","UD RX",UDGRP))
"RTN","ORWDPS2",214,0)
 S OPGRP=$O(^ORD(100.98,"B","OUTPATIENT MEDICATIONS",OPGRP))
"RTN","ORWDPS2",215,0)
 S IPGRP=$O(^ORD(100.98,"B","INPATIENT MEDICATIONS",IPGRP))
"RTN","ORWDPS2",216,0)
 S CLMED=$O(^ORD(100.98,"B","CLINIC ORDERS",CLMED))
"RTN","ORWDPS2",217,0)
 S:IPGRP=0 IPGRP=$O(^ORD(100.98,"B","I RX",IPGRP))
"RTN","ORWDPS2",218,0)
 I $L($G(^OR(100,ODID,0)))<1 Q
"RTN","ORWDPS2",219,0)
 S ODGRP=$P(^OR(100,ODID,0),U,11)
"RTN","ORWDPS2",220,0)
 I (UDGRP=ODGRP)!(CLMED=ODGRP) S VAL=1
"RTN","ORWDPS2",221,0)
 I IPGRP=ODGRP S VAL=1
"RTN","ORWDPS2",222,0)
 I OPGRP=ODGRP S VAL=2
"RTN","ORWDPS2",223,0)
 K UDGRP,ODGRP,OPGRP,IPGRP,ODID,CLMED
"RTN","ORWDPS2",224,0)
 Q
"RTN","ORWDPS2",225,0)
QOGRP(VAL,QOIFN) ;
"RTN","ORWDPS2",226,0)
 ;If quick order belong to Inpatient Med Order Group: return 1
"RTN","ORWDPS2",227,0)
 ;Otherwise, return 0
"RTN","ORWDPS2",228,0)
 S VAL=0
"RTN","ORWDPS2",229,0)
 I '$L(QOIFN) Q
"RTN","ORWDPS2",230,0)
 N UDGRP,IPGRP,QOGRP,QOID,CLMED
"RTN","ORWDPS2",231,0)
 S QOID=+QOIFN
"RTN","ORWDPS2",232,0)
 Q:QOID<1
"RTN","ORWDPS2",233,0)
 S (UDGRP,IPGRP,QOGRP,CLMED)=0
"RTN","ORWDPS2",234,0)
 S UDGRP=$O(^ORD(100.98,"B","UD RX",UDGRP))
"RTN","ORWDPS2",235,0)
 S IPGRP=$O(^ORD(100.98,"B","INPATIENT MEDICATIONS",IPGRP))
"RTN","ORWDPS2",236,0)
 S CLMED=$O(^ORD(100.98,"B","CLINIC ORDERS",CLMED))
"RTN","ORWDPS2",237,0)
 S:IPGRP=0 IPGRP=$O(^ORD(100.98,"B","I RX",IPGRP))
"RTN","ORWDPS2",238,0)
 I $L($G(^ORD(101.41,QOID,0)))<1 Q
"RTN","ORWDPS2",239,0)
 S QOGRP=$P(^ORD(101.41,QOID,0),U,5)
"RTN","ORWDPS2",240,0)
 I UDGRP=QOGRP S VAL=1
"RTN","ORWDPS2",241,0)
 I (IPGRP=QOGRP)!(CLMED=QOGRP) S VAL=1
"RTN","ORWDPS2",242,0)
 K UDGRP,QOGRP,QOID,IPGRP,CLMED
"RTN","ORWDPS2",243,0)
 Q
"RTN","ORWDX")
0^3^B72026068
"RTN","ORWDX",1,0)
ORWDX ; SLC/KCM/REV/JLI - Order dialog utilities ;12/07/15  10:59
"RTN","ORWDX",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,125,131,132,141,164,178,187,190,195,215,246,243,283,296,280,306,350,424**;Dec 17, 1997;Build 8
"RTN","ORWDX",3,0)
 ;Per VHA Directive 6402, this routine should not be modified.
"RTN","ORWDX",4,0)
 ;Reference to DIC(9.4 supported by IA #2058
"RTN","ORWDX",5,0)
 ;
"RTN","ORWDX",6,0)
ORDITM(Y,FROM,DIR,XREF,QOCALL) ; Subset of orderable items
"RTN","ORWDX",7,0)
 ; Y(n)=IEN^.01 Name^.01 Name  -or-  IEN^Synonym <.01 Name>^.01 Name
"RTN","ORWDX",8,0)
 N I,IEN,CNT,X,DTXT,CURTM,DEFROUTE
"RTN","ORWDX",9,0)
 S DEFROUTE=""
"RTN","ORWDX",10,0)
 S QOCALL=+$G(QOCALL)
"RTN","ORWDX",11,0)
 S I=0,CNT=44,CURTM=$$NOW^XLFDT
"RTN","ORWDX",12,0)
 F  Q:I'<CNT  S FROM=$O(^ORD(101.43,XREF,FROM),DIR) Q:FROM=""  D
"RTN","ORWDX",13,0)
 . S IEN="" F  S IEN=$O(^ORD(101.43,XREF,FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWDX",14,0)
 . . S X=^ORD(101.43,XREF,FROM,IEN)
"RTN","ORWDX",15,0)
 . . I +$P(X,U,3),$P(X,U,3)<CURTM Q
"RTN","ORWDX",16,0)
 . . I 'QOCALL,$P(X,U,5) Q
"RTN","ORWDX",17,0)
 . . S I=I+1
"RTN","ORWDX",18,0)
 . . I 'X S Y(I)=IEN_U_$P(X,U,2)_U_$P(X,U,2)
"RTN","ORWDX",19,0)
 . . E  S Y(I)=IEN_U_$P(X,U,2)_$C(9)_"<"_$P(X,U,4)_">"_U_$P(X,U,4)
"RTN","ORWDX",20,0)
 Q
"RTN","ORWDX",21,0)
ODITMBC(Y,XREF,ODLST) ;
"RTN","ORWDX",22,0)
 N CNT,NM,XRF
"RTN","ORWDX",23,0)
 S CNT=0,NM=0,XRF=XREF
"RTN","ORWDX",24,0)
 F  S CNT=$O(ODLST(CNT)) Q:'CNT  D FNDINFO(.Y,ODLST(CNT))
"RTN","ORWDX",25,0)
 Q
"RTN","ORWDX",26,0)
FNDINFO(Y,ODIEN) ;
"RTN","ORWDX",27,0)
 D FNDINFO^ORWDX1(.Y,.ODIEN)
"RTN","ORWDX",28,0)
 Q
"RTN","ORWDX",29,0)
DLGDEF(LST,DLG) ; Format mapping for a dlg
"RTN","ORWDX",30,0)
 D DLGDEF^ORWDX1(.LST,.DLG)
"RTN","ORWDX",31,0)
 Q
"RTN","ORWDX",32,0)
DLGQUIK(LST,QO) ;(NOT USED)
"RTN","ORWDX",33,0)
 D LOADRSP(.LST,QO)
"RTN","ORWDX",34,0)
 Q
"RTN","ORWDX",35,0)
LOADRSP(LST,RSPID,TRANS)      ; Load responses from 101.41 or 100
"RTN","ORWDX",36,0)
 ; RSPID:  C123456;1-3243 = cached copy,   134-3234 = cached quick
"RTN","ORWDX",37,0)
 ;         X123456;1      = change order,  134      = quick dialog
"RTN","ORWDX",38,0)
 N I,J,DLG,INST,ID,VAL,ILST,ROOT,ORLOC S ROOT=""
"RTN","ORWDX",39,0)
 K ^TMP($J,"ORWDX LOADRSP","QO SAVE")
"RTN","ORWDX",40,0)
 I +RSPID=$P(RSPID,"-",1) D
"RTN","ORWDX",41,0)
 .S ^TMP($J,"ORWDX LOADRSP","QO SAVE")=+RSPID
"RTN","ORWDX",42,0)
 I RSPID["-" S ROOT="^TMP(""ORWDXMQ"",$J,"""_RSPID_""")" G XROOT^ORWDX2
"RTN","ORWDX",43,0)
 I $E(RSPID)="X" S ROOT="^OR(100,"_+$P(RSPID,"X",2)_",4.5)"  G XROOT^ORWDX2
"RTN","ORWDX",44,0)
 I +RSPID=RSPID  S ROOT="^ORD(101.41,"_+RSPID_",6)" G XROOT^ORWDX2
"RTN","ORWDX",45,0)
 Q:ROOT=""
"RTN","ORWDX",46,0)
 G XROOT^ORWDX2
"RTN","ORWDX",47,0)
SAVE(REC,ORVP,ORNP,ORL,DLG,ORDG,ORIT,ORIFN,ORDIALOG,ORDEA,ORAPPT,ORSRC,OREVTDF) ;
"RTN","ORWDX",48,0)
 ; ORVP=DFN, ORNP=Provider, ORL=Location, DLG=Order Dialog,
"RTN","ORWDX",49,0)
 ; ORDG=Display Group, ORIT=Quick Order Dialog, ORAPPT=Appointment
"RTN","ORWDX",50,0)
 N ORDUZ,ORSTS,OREVENT,ORCAT,ORDA,ORTS,ORNEW,ORCHECK,ORLOG,ORLEAD,ORTRAIL,ORPKG,ORWP94,ORCATFN,OREVTYPE,ONPASS
"RTN","ORWDX",51,0)
 N XCNT,XCOMM,XDONE,XX  ;SBR
"RTN","ORWDX",52,0)
 S (XCOMM,XCNT)=""  ;SBR
"RTN","ORWDX",53,0)
 I $G(ORIFN)'="" D  ;SBR problem only occurs on change or renew orders
"RTN","ORWDX",54,0)
 . S XCNT=$O(^OR(100,+ORIFN,4.5,"ID","COMMENT",XCNT))  ;SBR
"RTN","ORWDX",55,0)
 . I XCNT'="" S XCOMM=$P($G(^OR(100,+ORIFN,4.5,XCNT,0)),"^",2)  ;SBR
"RTN","ORWDX",56,0)
 . I XCOMM'="" S XDONE=0,XX="" F  S XX=$O(ORDIALOG("WP",XCOMM,1,XX)) Q:XX=""  D  ;SBR
"RTN","ORWDX",57,0)
 . . I ORDIALOG("WP",XCOMM,1,XX,0)'="" S XDONE=1 Q  ;SBR
"RTN","ORWDX",58,0)
 . I XCOMM'="",'$G(XDONE),$D(ORDIALOG("WP",XCOMM)) K ORDIALOG("WP",XCOMM)  ;SBR
"RTN","ORWDX",59,0)
 S ORCATFN="" I $L($P(DLG,U,2)) S ORCATFN=$P(DLG,U,2),DLG=$P(DLG,U,1)
"RTN","ORWDX",60,0)
 ;Remove treating facility if inpatient and IMO order 26.42
"RTN","ORWDX",61,0)
 I $G(^DPT(ORVP,.1))'="",$P($G(^ORD(100.98,ORDG,0)),U)="CLINIC MEDICATIONS" K ORDIALOG("ORTS")
"RTN","ORWDX",62,0)
 I $G(^DPT(ORVP,.1))'="",$P($G(^ORD(100.98,ORDG,0)),U)="CLINIC INFUSIONS" K ORDIALOG("ORTS")
"RTN","ORWDX",63,0)
 I $G(ORDIALOG("ORTS")) S ORTS=ORDIALOG("ORTS") K ORDIALOG("ORTS")
"RTN","ORWDX",64,0)
 I $G(ORDIALOG("ORSLOG")) S ORLOG=ORDIALOG("ORSLOG") K ORDIALOG("ORSLOG")
"RTN","ORWDX",65,0)
 I $D(ORDIALOG("OREVENT")) S OREVENT=ORDIALOG("OREVENT") K ORDIALOG("OREVENT")
"RTN","ORWDX",66,0)
 ;=====================================================
"RTN","ORWDX",67,0)
 ; Changed for v26.27 (RV)
"RTN","ORWDX",68,0)
 S ORCAT=$$INPT^ORCD,ORCAT=$S(ORCAT=1:"I",1:"O")
"RTN","ORWDX",69,0)
 ;I $L($G(OREVENT)) D
"RTN","ORWDX",70,0)
 ;. S ONPASS=0
"RTN","ORWDX",71,0)
 ;. S OREVTYPE=$$TYPE^OREVNTX(OREVENT)
"RTN","ORWDX",72,0)
 ;. I OREVTYPE="T" D ISPASS^OREVNTX1(.ONPASS,+OREVENT,"T")
"RTN","ORWDX",73,0)
 ;. S ORCAT=$S(OREVTYPE="A":"I",OREVTYPE="T":"I",ONPASS=1:"O",1:"O")
"RTN","ORWDX",74,0)
 ;E  S ORCAT=$S($L($P($G(^DPT(+ORVP,.1)),U)):"I",1:"O")
"RTN","ORWDX",75,0)
 ;=====================================================
"RTN","ORWDX",76,0)
 I DLG="PS MEDS" S ORWP94=1 D
"RTN","ORWDX",77,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSO SUPPLY",0)) S DLG="PSO SUPPLY"
"RTN","ORWDX",78,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSO OERR",0)) S DLG="PSO OERR"
"RTN","ORWDX",79,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSJ OR PAT OE",0)) S DLG="PSJ OR PAT OE"
"RTN","ORWDX",80,0)
 I DLG="PSO OERR"!(DLG="PSO SUPPLY") S ORCAT="O" I $G(OREVENT("EFFECTIVE")) D
"RTN","ORWDX",81,0)
 . S ORDIALOG($O(^ORD(101.41,"B","OR GTX START DATE"_$S($G(ORWP94):"/TIME",1:""),0)),1)=OREVENT("EFFECTIVE")
"RTN","ORWDX",82,0)
 I DLG="PSJ OR PAT OE" S ORCAT="I"
"RTN","ORWDX",83,0)
 I DLG="PSJ OR CLINIC OE" S ORCAT="I"
"RTN","ORWDX",84,0)
 I DLG="CLINIC OR PAT FLUID OE" S ORCAT="I"
"RTN","ORWDX",85,0)
 S:DLG="FHW1" ORCAT="I" S:DLG?1"FHW "2.7U1" MEAL" ORCAT="O"
"RTN","ORWDX",86,0)
 S ORVP=ORVP_";DPT(",ORL(2)=ORL_";SC(",ORL=ORL(2)
"RTN","ORWDX",87,0)
 I ORDG=$O(^ORD(100.98,"B","LAB",0)) D  ;use section
"RTN","ORWDX",88,0)
 . N OI,SUB S OI=+$G(ORDIALOG($$PTR^ORCD("OR GTX ORDERABLE ITEM"),1))
"RTN","ORWDX",89,0)
 . S SUB=$P($G(^ORD(101.43,OI,"LR")),U,6),ORDG=$$DGRP^ORMLR(SUB)
"RTN","ORWDX",90,0)
 K:'ORDG ORDG K:'ORIT ORIT ; Dgrp & Quick must be non-zero
"RTN","ORWDX",91,0)
 M ORCHECK=ORDIALOG("ORCHECK") K ORDIALOG("ORCHECK")
"RTN","ORWDX",92,0)
 S ORDIALOG=$O(^ORD(101.41,"AB",DLG,0))
"RTN","ORWDX",93,0)
 I 'ORDIALOG S ORDIALOG=$O(^ORD(101.41,"B",DLG,0))
"RTN","ORWDX",94,0)
 I $D(ORDIALOG("ORLEAD")) S ORLEAD=ORDIALOG("ORLEAD")
"RTN","ORWDX",95,0)
 I $D(ORDIALOG("ORTRAIL")) S ORTRAIL=ORDIALOG("ORTRAIL")
"RTN","ORWDX",96,0)
 D GETDLG1^ORCD(ORDIALOG)
"RTN","ORWDX",97,0)
 I $L(ORCATFN) S ORCAT=ORCATFN
"RTN","ORWDX",98,0)
 I $G(ORWP94) D
"RTN","ORWDX",99,0)
 . N SIGPRMT S SIGPRMT=$O(^ORD(101.41,"B","OR GTX SIG",0))
"RTN","ORWDX",100,0)
 . N INSPRMT S INSPRMT=$O(^ORD(101.41,"B","OR GTX INSTRUCTIONS",0))
"RTN","ORWDX",101,0)
 . I $L($G(ORDIALOG(SIGPRMT,1))) S ORDIALOG(INSPRMT,"FORMAT")="@"
"RTN","ORWDX",102,0)
 . I ORCAT="O" S ORPKG=$O(^DIC(9.4,"C","PSO",0))
"RTN","ORWDX",103,0)
 . I ORCAT="I" S ORPKG=$O(^DIC(9.4,"C","PSJ",0))
"RTN","ORWDX",104,0)
 S ORSRC=$G(ORSRC)
"RTN","ORWDX",105,0)
 D DELPI^ORWDX1 ;delete empty PI
"RTN","ORWDX",106,0)
 I $G(ORIFN)="" D  ; new order
"RTN","ORWDX",107,0)
 . D EN^ORCSAVE
"RTN","ORWDX",108,0)
 . S REC="" I ORIFN D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDX",109,0)
 . I '$D(^TMP("ORECALL",$J,ORDIALOG)) M ^TMP("ORECALL",$J,ORDIALOG)=ORDIALOG
"RTN","ORWDX",110,0)
 E  D
"RTN","ORWDX",111,0)
 . N OR0
"RTN","ORWDX",112,0)
 . S OR0=$G(^OR(100,+ORIFN,0)),ORSTS=$P($G(^(3)),U,3),ORDG=$P(OR0,U,11)
"RTN","ORWDX",113,0)
 . I $L($P(OR0,U,17)),ORSTS=10 S OREVENT=$P(OR0,U,17),OREVENT("TS")=$P(OR0,U,13)
"RTN","ORWDX",114,0)
 . D XX^ORCSAVE ; edit order
"RTN","ORWDX",115,0)
 . S REC="" S ORIFN=+ORIFN_";"_ORDA D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDX",116,0)
 Q
"RTN","ORWDX",117,0)
SENDED(ORWLST,ORIENS,TS,LOC) ; Release EDOs to svc
"RTN","ORWDX",118,0)
 N OK,ORVP,ORWERR,ORSIGST,ORDA,ORNATURE,ORIX,X,PTEVT,ORIFN,J,EVENT,LOCK,OR3
"RTN","ORWDX",119,0)
 S ORWERR="",ORIX=0,LOC=LOC_";SC("
"RTN","ORWDX",120,0)
 F  S ORIX=$O(ORIENS(ORIX)) Q:'ORIX  D  Q:ORWERR]""
"RTN","ORWDX",121,0)
 . S (ORIFN,ORWLST(ORIX))=ORIENS(ORIX)
"RTN","ORWDX",122,0)
 . S PTEVT=$P(^OR(100,+ORIFN,0),U,17)
"RTN","ORWDX",123,0)
 . I PTEVT D
"RTN","ORWDX",124,0)
 .. I $D(EVENT(PTEVT)) S LOCK=1 Q
"RTN","ORWDX",125,0)
 .. S LOCK=$$LCKEVT^ORX2(PTEVT) S:LOCK EVENT(PTEVT)=""
"RTN","ORWDX",126,0)
 . I 'LOCK S ORWERR="1^delayed event is locked - another user is processing orders for this event" S ORWLST(ORIX)=ORWLST(ORIX)_"^E^"_ORWERR Q
"RTN","ORWDX",127,0)
 . S ORDA=$P(ORIFN,";",2) S:'ORDA ORDA=1
"RTN","ORWDX",128,0)
 . S ORVP=$P($G(^OR(100,+ORIFN,0)),U,2)
"RTN","ORWDX",129,0)
 . I $D(^OR(100,+ORIFN,8,ORDA,0)) D
"RTN","ORWDX",130,0)
 .. S ORSIGST=$P($G(^(0)),U,4),ORNATURE=$P($G(^(0)),U,12) ;naked references refer to OR(100,+ORIFN,8,ORDA on line above
"RTN","ORWDX",131,0)
 . S OK=$$LOCK1^ORX2(ORIFN) I 'OK S ORWERR="1^"_$P(OK,U,2)
"RTN","ORWDX",132,0)
 . I OK,$G(LOCK) D
"RTN","ORWDX",133,0)
 .. S OR3=$G(^OR(100,+ORIFN,3)) I $P(OR3,"^",3)'=10!($P(OR3,"^",9)]"") D UNLK1^ORX2(ORIENS(ORIX)) Q  ;order already released or has a parent
"RTN","ORWDX",134,0)
 .. S:$G(LOC) $P(^OR(100,+ORIFN,0),U,10)=LOC ;set location
"RTN","ORWDX",135,0)
 .. S:$G(TS) $P(^OR(100,+ORIFN,0),U,13)=TS ;set specialty
"RTN","ORWDX",136,0)
 .. D EN2^ORCSEND(ORIENS(ORIX),ORSIGST,ORNATURE,.ORWERR),UNLK1^ORX2(ORIENS(ORIX)) ;add ,LOCK to if statement for 195
"RTN","ORWDX",137,0)
 . I $L(ORWERR) S ORWLST(ORIX)=ORWLST(ORIX)_"^E^"_ORWERR Q
"RTN","ORWDX",138,0)
 . E  D
"RTN","ORWDX",139,0)
 .. S PTEVT=$P($G(^OR(100,+ORIENS(ORIX),0)),U,17)
"RTN","ORWDX",140,0)
 .. D:$$TYPE^OREVNTX(PTEVT)="M" SAVE^ORMEVNT1(ORIENS(ORIX),PTEVT,2)
"RTN","ORWDX",141,0)
 . S X="RS"
"RTN","ORWDX",142,0)
 . S $P(ORWLST(ORIX),U,2)=X
"RTN","ORWDX",143,0)
 S J=0 F  S J=$O(EVENT(J)) Q:'+J  D UNLEVT^ORX2(J) ;195
"RTN","ORWDX",144,0)
 Q
"RTN","ORWDX",145,0)
SEND(ORWLST,DFN,ORNP,ORL,ES,ORWREC) ; Sign
"RTN","ORWDX",146,0)
 ; DFN=Patient, ORNP=Provider, ORL=Location, ES=Encrypted ES code
"RTN","ORWDX",147,0)
 ; ORWREC(n)=ORIFN;Action^Signature Sts^Release Sts^Nature of Order
"RTN","ORWDX",148,0)
SEND1 N ORVP,ORWI,ORWERR,ORWREL,ORWSIG,ORWNATR,ORDERID,ORBEF,ORLR,ORLAB,X,I
"RTN","ORWDX",149,0)
 S ORVP=DFN_";DPT(",ORL=ORL_";SC(",ORL(2)=ORL,ORWLST=0
"RTN","ORWDX",150,0)
 F I="LR","VBEC" S X=+$O(^DIC(9.4,"C",I,0)) S:X ORLR(X)=1
"RTN","ORWDX",151,0)
 S ORWI=0 F  S ORWI=$O(ORWREC(ORWI)) Q:'ORWI  D
"RTN","ORWDX",152,0)
 . S X=ORWREC(ORWI),ORWERR=""
"RTN","ORWDX",153,0)
 . S ORDERID=$P(X,U),ORWSIG=$P(X,U,2),ORWREL=$P(X,U,3),ORWNATR=$P(X,U,4)
"RTN","ORWDX",154,0)
 . S ORBEF=0
"RTN","ORWDX",155,0)
 . I '$D(^OR(100,+ORDERID,0)) Q
"RTN","ORWDX",156,0)
 . I $D(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0)) S ORBEF=$P(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0),U,15)
"RTN","ORWDX",157,0)
 . S:$D(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0)) ORWNATR=$S($P(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0),"^",4)=3:"",1:ORWNATR)
"RTN","ORWDX",158,0)
 . S ORWERR=$$CHKACT^ORWDXR(ORDERID,ORWSIG,ORWREL,ORWNATR)
"RTN","ORWDX",159,0)
 . I $L(ORWERR) S ORWERR="1^"_ORWERR
"RTN","ORWDX",160,0)
 . I '$L(ORWERR) D
"RTN","ORWDX",161,0)
 .. I $G(ORLR(+$P(^OR(100,+ORDERID,0),U,14))),'$G(ORLAB) D  ; lab batch start
"RTN","ORWDX",162,0)
 ... I $L($T(BHS^ORMBLD)) D BHS^ORMBLD(ORVP) S ORLAB=1
"RTN","ORWDX",163,0)
 .. N OK S OK=$$LOCK1^ORX2(ORDERID) I 'OK S ORWERR="1^"_$P(OK,U,2)
"RTN","ORWDX",164,0)
 .. I OK D EN^ORCSEND(ORDERID,"",ORWSIG,ORWREL,ORWNATR,"",.ORWERR),UNLK1^ORX2(ORDERID)
"RTN","ORWDX",165,0)
 . S ORWLST(ORWI)=ORDERID,X=""
"RTN","ORWDX",166,0)
 . I $L(ORWERR) S ORWLST(ORWI)=ORWLST(ORWI)_"^E^"_ORWERR Q
"RTN","ORWDX",167,0)
 . I ORWREL,((ORBEF=10)!(ORBEF=11)),($P(^OR(100,+ORDERID,3),U,3)'=10) S X="R"
"RTN","ORWDX",168,0)
 . I ORWSIG'=2 S X=X_"S"
"RTN","ORWDX",169,0)
 . S $P(ORWLST(ORWI),U,2)=X
"RTN","ORWDX",170,0)
 I $G(ORLAB) D BTS^ORMBLD(ORVP)
"RTN","ORWDX",171,0)
 I $D(ORWLST)>9 D
"RTN","ORWDX",172,0)
 . N I,A
"RTN","ORWDX",173,0)
 . S I=0 F  S I=$O(ORWLST(I)) Q:I=""  S A=$G(ORWLST(I)) I A["Invalid Procedure, Inactive, no Imaging Type" D SM^ORWDX2(A)
"RTN","ORWDX",174,0)
  Q
"RTN","ORWDX",175,0)
DLGID(VAL,ORIFN) ; return dlg IEN for order
"RTN","ORWDX",176,0)
 S VAL=$P(^OR(100,+ORIFN,0),U,5)
"RTN","ORWDX",177,0)
 S VAL=$S($P(VAL,";",2)="ORD(101.41,":+VAL,1:0)
"RTN","ORWDX",178,0)
 Q
"RTN","ORWDX",179,0)
FORMID(VAL,ORIFN) ; Base dlg FormID for an order
"RTN","ORWDX",180,0)
 N DLG
"RTN","ORWDX",181,0)
 S VAL=0,DLG=$P(^OR(100,+ORIFN,0),U,5)
"RTN","ORWDX",182,0)
 Q:$P(DLG,";",2)'="ORD(101.41,"
"RTN","ORWDX",183,0)
 D FORMID^ORWDXM(.VAL,+DLG)
"RTN","ORWDX",184,0)
 Q
"RTN","ORWDX",185,0)
AGAIN(VAL,DLG) ; return true to keep dlg for another order
"RTN","ORWDX",186,0)
 S VAL=''$P($G(^ORD(101.41,DLG,0)),U,9)
"RTN","ORWDX",187,0)
 Q
"RTN","ORWDX",188,0)
DGRP(VAL,DLG) ; Display grp pointer for a dlg
"RTN","ORWDX",189,0)
 S DLG=$S($E(DLG)="`":+$P(DLG,"`",2),1:$O(^ORD(101.41,"AB",DLG,0))) ;kcm
"RTN","ORWDX",190,0)
 S VAL=$P($G(^ORD(101.41,DLG,0)),U,5)
"RTN","ORWDX",191,0)
 Q
"RTN","ORWDX",192,0)
DGNM(VAL,NM) ; Display grp pointer for name
"RTN","ORWDX",193,0)
 S VAL=$O(^ORD(100.98,"B",NM,0))
"RTN","ORWDX",194,0)
 Q
"RTN","ORWDX",195,0)
WRLST(LST,LOC) ; List of dlgs for writing orders
"RTN","ORWDX",196,0)
 G WRLST1^ORWDX1
"RTN","ORWDX",197,0)
MSG(LST,IEN) ; Msg text for orderable item
"RTN","ORWDX",198,0)
 N I
"RTN","ORWDX",199,0)
 S I=0 F  S I=$O(^ORD(101.43,IEN,8,I)) Q:I'>0  S LST(I)=^(I,0)
"RTN","ORWDX",200,0)
 Q
"RTN","ORWDX",201,0)
DISMSG(VAL,IEN) ; Disabled mge for ordering dlg
"RTN","ORWDX",202,0)
 S VAL=$P($G(^ORD(101.41,+IEN,0)),U,3)
"RTN","ORWDX",203,0)
 Q
"RTN","ORWDX",204,0)
LOCK(OK,DFN) ; Attempt to lock pt for ordering
"RTN","ORWDX",205,0)
 S OK=$$LOCK^ORX2(DFN)
"RTN","ORWDX",206,0)
 Q
"RTN","ORWDX",207,0)
UNLOCK(OK,DFN) ; Unlock pt for ordering
"RTN","ORWDX",208,0)
 D UNLOCK^ORX2(DFN) S OK=1
"RTN","ORWDX",209,0)
 Q
"RTN","ORWDX",210,0)
LOCKORD(OK,ORIFN) ; Attempt to lock order
"RTN","ORWDX",211,0)
 S OK=$$LOCK1^ORX2(ORIFN)
"RTN","ORWDX",212,0)
 Q
"RTN","ORWDX",213,0)
UNLKORD(OK,ORIFN) ; Unlock order
"RTN","ORWDX",214,0)
 D UNLK1^ORX2(ORIFN) S OK=1
"RTN","ORWDX",215,0)
 Q
"RTN","ORWDX",216,0)
UNLKOTH(OK,ORIFN) ; Unlock pt not by this session
"RTN","ORWDX",217,0)
 K ^XTMP("ORPTLK-"_ORIFN) S OK=1
"RTN","ORWDX",218,0)
 Q
"RTN","ORWU")
0^5^B62136332
"RTN","ORWU",1,0)
ORWU ;SLC/KCM - GENERAL UTILITIES FOR WINDOWS CALLS ;01/04/16  09:24
"RTN","ORWU",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,132,148,149,187,195,215,243,350,424**;Dec 17, 1997;Build 8
"RTN","ORWU",3,0)
 ;
"RTN","ORWU",4,0)
DT(Y,X,%DT) ; Internal Fileman Date/Time
"RTN","ORWU",5,0)
 ; change the '00:00' that could be passed so Fileman doesn't reject
"RTN","ORWU",6,0)
 I $L($P(X,"@",2)),("00000000"[$TR($P(X,"@",2),":","")) S $P(X,"@",2)="00:00:01"
"RTN","ORWU",7,0)
 S %DT=$G(%DT,"TS") D ^%DT K %DT
"RTN","ORWU",8,0)
 Q
"RTN","ORWU",9,0)
VALDT(Y,X,%DT) ; Validate date/time
"RTN","ORWU",10,0)
 S:'$D(%DT) %DT="TX" D ^%DT
"RTN","ORWU",11,0)
 Q
"RTN","ORWU",12,0)
USERINFO(REC) ; Relevant info for current user
"RTN","ORWU",13,0)
 ; return DUZ^NAME^USRCLS^CANSIGN^ISPROVIDER^ORDERROLE^NOORDER^DTIME^
"RTN","ORWU",14,0)
 ;        COUNTDOWN^ENABLEVERIFY^NOTIFYAPPS^MSGHANG^DOMAIN^SERVICE^
"RTN","ORWU",15,0)
 ;        AUTOSAVE^INITTAB^LASTTAB^WEBACCESS^ALLOWHOLD^ISRPL^RPLLIST^
"RTN","ORWU",16,0)
 ;        CORTABS^RPTTAB^STANUM^GECSTATUS^PRODACCT
"RTN","ORWU",17,0)
 N X,ORRPL,ORRPL1,ORRPL2,ORTAB,CORTABS,RPTTAB,ORDT,OREFF,OREXP,ORDATEOK
"RTN","ORWU",18,0)
 S REC=DUZ_U_$P(^VA(200,DUZ,0),U)
"RTN","ORWU",19,0)
 S $P(REC,U,3)=$S($D(^XUSEC("ORES",DUZ)):3,$D(^XUSEC("ORELSE",DUZ)):2,$D(^XUSEC("OREMAS",DUZ)):1,1:0)
"RTN","ORWU",20,0)
 S $P(REC,U,4)=$D(^XUSEC("ORES",DUZ))&$D(^XUSEC("PROVIDER",DUZ))
"RTN","ORWU",21,0)
 S $P(REC,U,5)=$D(^XUSEC("PROVIDER",DUZ))
"RTN","ORWU",22,0)
 S $P(REC,U,6)=$$ORDROLE
"RTN","ORWU",23,0)
 S $P(REC,U,7)=$$GET^XPAR("USR^SYS^PKG","ORWOR DISABLE ORDERING",1,"I")
"RTN","ORWU",24,0)
 S $P(REC,U,8)=$$GET^XPAR("USR^SYS","ORWOR TIMEOUT CHART",1,"I")
"RTN","ORWU",25,0)
 I '$P(REC,U,8),$G(DTIME) S $P(REC,U,8)=DTIME
"RTN","ORWU",26,0)
 S $P(REC,U,9)=$$GET^XPAR("USR^SYS^PKG","ORWOR TIMEOUT COUNTDOWN",1,"I")
"RTN","ORWU",27,0)
 S X=$$GET^XPAR("USR^SYS^PKG","ORWOR ENABLE VERIFY",1,"I")
"RTN","ORWU",28,0)
 S $P(REC,U,10)=$S(X=1:1,X=2:0,1:'$P(REC,U,7))
"RTN","ORWU",29,0)
 S $P(REC,U,11)=$$GET^XPAR("USR^SYS^PKG","ORWOR BROADCAST MESSAGES",1,"I")
"RTN","ORWU",30,0)
 S $P(REC,U,12)=$$GET^XPAR("USR^SYS^PKG","ORWOR AUTO CLOSE PT MSG",1,"I")
"RTN","ORWU",31,0)
 S $P(REC,U,13)=$$KSP^XUPARAM("WHERE")  ; domain
"RTN","ORWU",32,0)
 S $P(REC,U,14)=+$G(^VA(200,DUZ,5))     ; service/section
"RTN","ORWU",33,0)
 S $P(REC,U,15)=$$GET^XPAR("USR^SYS^PKG","ORWOR AUTOSAVE NOTE",1,"I")
"RTN","ORWU",34,0)
 S $P(REC,U,16)=$$GET^XPAR("USR^DIV^SYS^PKG","ORCH INITIAL TAB",1,"I")
"RTN","ORWU",35,0)
 S $P(REC,U,17)=$$GET^XPAR("USR^DIV^SYS^PKG","ORCH USE LAST TAB",1,"I")
"RTN","ORWU",36,0)
 S $P(REC,U,18)=$$GET^XPAR("USR^DIV^SYS^PKG","ORWOR DISABLE WEB ACCESS",1,"I")
"RTN","ORWU",37,0)
 S $P(REC,U,19)=$$GET^XPAR("SYS^PKG","ORWOR DISABLE HOLD ORDERS",1,"I")
"RTN","ORWU",38,0)
 ; 2 pieces added by PKS on 11/5/2001 for "Reports Only:"
"RTN","ORWU",39,0)
 ; IA# 10060 allows read access to ^VA(200 file.
"RTN","ORWU",40,0)
 S ORRPL=$G(^VA(200,DUZ,101))           ; RPL node.
"RTN","ORWU",41,0)
 S ORRPL1=$P(ORRPL,U)
"RTN","ORWU",42,0)
 S $P(REC,U,20)=ORRPL1                  ; ISRPL piece.
"RTN","ORWU",43,0)
 S ORRPL2=$P(ORRPL,U,2)
"RTN","ORWU",44,0)
 S $P(REC,U,21)=ORRPL2                  ; RPLLIST piece.
"RTN","ORWU",45,0)
 ;
"RTN","ORWU",46,0)
 ; Additional pieces for CPRS tabs access:
"RTN","ORWU",47,0)
 ; IA# 10060 allows read access to ^VA(200.01013 multiple.
"RTN","ORWU",48,0)
 S ORDT=DT                              ; Today.
"RTN","ORWU",49,0)
 S (CORTABS,RPTTAB)=0
"RTN","ORWU",50,0)
 S ORRPL=0
"RTN","ORWU",51,0)
 F  S ORRPL=$O(^VA(200,DUZ,"ORD",ORRPL)) Q:ORRPL<1  D
"RTN","ORWU",52,0)
 .S ORTAB=$G(^VA(200,DUZ,"ORD",ORRPL,0))
"RTN","ORWU",53,0)
 .I ORTAB="" Q
"RTN","ORWU",54,0)
 .S OREFF=$P(ORTAB,U,2)
"RTN","ORWU",55,0)
 .S OREXP=$P(ORTAB,U,3)
"RTN","ORWU",56,0)
 .S ORTAB=$P(ORTAB,U)
"RTN","ORWU",57,0)
 .I ORTAB="" Q
"RTN","ORWU",58,0)
 .S ORTAB=$G(^ORD(101.13,ORTAB,0))
"RTN","ORWU",59,0)
 .I ORTAB="" Q
"RTN","ORWU",60,0)
 .S ORTAB=$P(ORTAB,U)
"RTN","ORWU",61,0)
 .I ORTAB="" Q
"RTN","ORWU",62,0)
 .S ORTAB=$$UP^XLFSTR(ORTAB)
"RTN","ORWU",63,0)
 .S ORDATEOK=1                             ; Default.
"RTN","ORWU",64,0)
 .I ((OREFF="")!(OREFF>ORDT)) S ORDATEOK=0 ; Eff. date NG.
"RTN","ORWU",65,0)
 .I ORDATEOK  D
"RTN","ORWU",66,0)
 ..I OREXP="" Q                            ; No exp. date.
"RTN","ORWU",67,0)
 ..I (OREXP<ORDT) S ORDATEOK=0             ; Exp. date NG.
"RTN","ORWU",68,0)
 ..I (OREXP=ORDT) S ORDATEOK=0             ; Exp. date NG.
"RTN","ORWU",69,0)
 .;
"RTN","ORWU",70,0)
 .; Set TRUE if OK:
"RTN","ORWU",71,0)
 .I ((ORTAB="COR")&(ORDATEOK)) S CORTABS=1
"RTN","ORWU",72,0)
 .I ((ORTAB="RPT")&(ORDATEOK)) S RPTTAB=1
"RTN","ORWU",73,0)
 ;
"RTN","ORWU",74,0)
 ; When done, set all valid tabs for access:
"RTN","ORWU",75,0)
 S $P(REC,U,22)=CORTABS                 ; "Core" tabs.
"RTN","ORWU",76,0)
 S $P(REC,U,23)=RPTTAB                  ; "Reports" tab.
"RTN","ORWU",77,0)
 ;
"RTN","ORWU",78,0)
 S $P(REC,U,24)=$P($$SITE^VASITE,U,3)
"RTN","ORWU",79,0)
 S $P(REC,U,25)=$$GET^XPAR("USR^TEA","PXRM GEC STATUS CHECK",1,"I")
"RTN","ORWU",80,0)
 S $P(REC,U,26)=$$PROD^XUPROD
"RTN","ORWU",81,0)
 Q
"RTN","ORWU",82,0)
 ;
"RTN","ORWU",83,0)
HASKEY(VAL,KEY) ; returns TRUE if the user possesses the security key
"RTN","ORWU",84,0)
 S VAL=''$D(^XUSEC(KEY,DUZ))
"RTN","ORWU",85,0)
 Q
"RTN","ORWU",86,0)
HASOPTN(VAL,OPTION) ; returns TRUE if the user has access to a menu option
"RTN","ORWU",87,0)
 S VAL=+$$ACCESS^XQCHK(DUZ,OPTION)
"RTN","ORWU",88,0)
 I VAL'>0 S VAL=0
"RTN","ORWU",89,0)
 E  S VAL=1
"RTN","ORWU",90,0)
 Q
"RTN","ORWU",91,0)
NPHASKEY(VAL,NP,KEY) ; returns TRUE if the person has the security key
"RTN","ORWU",92,0)
 S VAL=''$D(^XUSEC(KEY,NP))
"RTN","ORWU",93,0)
 Q
"RTN","ORWU",94,0)
ORDROLE() ; returns the role a person takes in ordering
"RTN","ORWU",95,0)
 ; VAL: 0=nokey, 1=clerk, 2=nurse, 3=physician, 4=student, 5=bad keys
"RTN","ORWU",96,0)
 ;I '$G(ORWCLVER) Q 0  ; version of client is to old for ordering
"RTN","ORWU",97,0)
 I ($D(^XUSEC("OREMAS",DUZ))+$D(^XUSEC("ORELSE",DUZ))+$D(^XUSEC("ORES",DUZ)))>1 Q 5
"RTN","ORWU",98,0)
 I $D(^XUSEC("OREMAS",DUZ)) Q 1                           ; clerk
"RTN","ORWU",99,0)
 I $D(^XUSEC("ORELSE",DUZ)) Q 2                           ; nurse
"RTN","ORWU",100,0)
 I $D(^XUSEC("ORES",DUZ)),$D(^XUSEC("PROVIDER",DUZ)) Q 3  ; doctor
"RTN","ORWU",101,0)
 I $D(^XUSEC("PROVIDER",DUZ)) Q 4                         ; student
"RTN","ORWU",102,0)
 Q 0
"RTN","ORWU",103,0)
VALIDSIG(ESOK,X) ; returns TRUE if valid electronic signature
"RTN","ORWU",104,0)
 S X=$$DECRYP^XUSRB1(X),ESOK=0                   ; network encrypted
"RTN","ORWU",105,0)
 D HASH^XUSHSHP
"RTN","ORWU",106,0)
 I X=$P($G(^VA(200,+DUZ,20)),U,4) S ESOK=1
"RTN","ORWU",107,0)
 Q
"RTN","ORWU",108,0)
TOOLMENU(ORLST) ; returns a list of items for the Tools menu
"RTN","ORWU",109,0)
 N ANENT
"RTN","ORWU",110,0)
 S ANENT="ALL^"_$S($G(^VA(200,DUZ,5)):"^SRV.`"_+$G(^(5)),1:"")
"RTN","ORWU",111,0)
 D GETLST^XPAR(.ORLST,ANENT,"ORWT TOOLS MENU","N")
"RTN","ORWU",112,0)
 Q
"RTN","ORWU",113,0)
ACTLOC(LOC) ; Function: returns TRUE if active hospital location
"RTN","ORWU",114,0)
 ; IA# 10040.
"RTN","ORWU",115,0)
 N D0,X I +$G(^SC(LOC,"OOS")) Q 0                ; screen out OOS entry
"RTN","ORWU",116,0)
 S D0=+$G(^SC(LOC,42)) I D0 D WIN^DGPMDDCF Q 'X  ; chk out of svc wards
"RTN","ORWU",117,0)
 S X=$G(^SC(LOC,"I")) I +X=0 Q 1                 ; no inactivate date
"RTN","ORWU",118,0)
 I DT>$P(X,U)&($P(X,U,2)=""!(DT<$P(X,U,2))) Q 0  ; chk reactivate date
"RTN","ORWU",119,0)
 Q 1                                             ; must still be active
"RTN","ORWU",120,0)
 ;
"RTN","ORWU",121,0)
CLINLOC(Y,FROM,DIR) ; Return a set of clinics from HOSPITAL LOCATION
"RTN","ORWU",122,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",123,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU",124,0)
 F  Q:I'<CNT  S FROM=$O(^SC("B",FROM),DIR) Q:FROM=""  D  ; IA# 10040.
"RTN","ORWU",125,0)
 . S IEN="" F  S IEN=$O(^SC("B",FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU",126,0)
 . . I ($P($G(^SC(IEN,0)),U,3)'="C")!('$$ACTLOC(IEN)) Q
"RTN","ORWU",127,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",128,0)
 Q
"RTN","ORWU",129,0)
INPLOC(Y,FROM,DIR) ;Return a set of wards from HOSPITAL LOCATION
"RTN","ORWU",130,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",131,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU",132,0)
 F  Q:I'<CNT  S FROM=$O(^SC("B",FROM),DIR) Q:FROM=""  D  ; IA# 10040.
"RTN","ORWU",133,0)
 . S IEN="" F  S IEN=$O(^SC("B",FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU",134,0)
 . . I ($P($G(^SC(IEN,0)),U,3)'="W") Q
"RTN","ORWU",135,0)
 . . I '$$ACTLOC(IEN) Q
"RTN","ORWU",136,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",137,0)
 Q
"RTN","ORWU",138,0)
HOSPLOC(Y,FROM,DIR) ; Return a set of locations from HOSPITAL LOCATION
"RTN","ORWU",139,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",140,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU",141,0)
 F  Q:I'<CNT  S FROM=$O(^SC("B",FROM),DIR) Q:FROM=""  D  ; IA# 10040.
"RTN","ORWU",142,0)
 . S IEN="" F  S IEN=$O(^SC("B",FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU",143,0)
 . . Q:("CW"'[$P($G(^SC(IEN,0)),U,3)!('$$ACTLOC(IEN)))
"RTN","ORWU",144,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",145,0)
 Q
"RTN","ORWU",146,0)
NEWPERS(ORY,ORFROM,ORDIR,ORKEY,ORDATE,ORVIZ,ORALL) ; Return a set of names from the NEW PERSON file.
"RTN","ORWU",147,0)
 ; SLC/PKS: Code moved to ORWU1 on 12/3/2002.
"RTN","ORWU",148,0)
 D NP1^ORWU1
"RTN","ORWU",149,0)
 Q
"RTN","ORWU",150,0)
GBLREF(VAL,FN) ; return global reference for file number
"RTN","ORWU",151,0)
 S VAL="" Q:'FN
"RTN","ORWU",152,0)
 S VAL=$$ROOT^DILFD(+FN)
"RTN","ORWU",153,0)
 ; I $E($RE(VAL))="," S VAL=$E(VAL,1,$L(VAL)-1)_")"
"RTN","ORWU",154,0)
 ; I $E($RE(VAL))="(" S VAL=$P(VAL,"(",1)
"RTN","ORWU",155,0)
 Q
"RTN","ORWU",156,0)
GENERIC(Y,FROM,DIR,REF) ; Return a set of entries from xref in REF
"RTN","ORWU",157,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",158,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU",159,0)
 F  Q:I'<CNT  S FROM=$O(@REF@(FROM),DIR) Q:FROM=""  D
"RTN","ORWU",160,0)
 . S IEN="" F  S IEN=$O(@REF@(FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU",161,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",162,0)
 Q
"RTN","ORWU",163,0)
EXTNAME(VAL,IEN,FN) ; return external form of pointer
"RTN","ORWU",164,0)
 ; IEN=internal number, FN=file number
"RTN","ORWU",165,0)
 N REF S REF=$G(^DIC(FN,0,"GL")),VAL=""
"RTN","ORWU",166,0)
 I $L(REF),+IEN S VAL=$P($G(@(REF_IEN_",0)")),U)
"RTN","ORWU",167,0)
 Q
"RTN","ORWU",168,0)
PARAM(VAL,APARAM) ; return a parameter value for a user
"RTN","ORWU",169,0)
 ; call assumes current user, default entities, single instance
"RTN","ORWU",170,0)
 S VAL=$$GET^XPAR("ALL",APARAM,1,"I")
"RTN","ORWU",171,0)
 Q
"RTN","ORWU",172,0)
PARAMS(ORLIST,APARAM) ; return a list of parameter values
"RTN","ORWU",173,0)
 ; call assumes current user, default entities, multiple instances
"RTN","ORWU",174,0)
 D GETLST^XPAR(.ORLIST,"ALL",APARAM,"Q")
"RTN","ORWU",175,0)
 Q
"RTN","ORWU",176,0)
DEVICE(Y,FROM,DIR) ; Return a subset of entries from the Device file
"RTN","ORWU",177,0)
 ; .LST(n)=IEN;Name^DisplayName^Location^RMar^PLen
"RTN","ORWU",178,0)
 ; FROM=text to $O from, DIR=$O direction
"RTN","ORWU",179,0)
 N I,IEN,CNT,SHOW,X S I=0,CNT=20
"RTN","ORWU",180,0)
 I FROM["<" S FROM=$RE($P($RE(FROM),"<  ",2))
"RTN","ORWU",181,0)
 F  Q:I'<CNT  S FROM=$O(^%ZIS(1,"B",FROM),DIR) Q:FROM=""  D
"RTN","ORWU",182,0)
 . S IEN=0 F  S IEN=$O(^%ZIS(1,"B",FROM,IEN)) Q:'IEN  D
"RTN","ORWU",183,0)
 .. N X0,X1,X90,X91,X95,XTYPE,XSTYPE,XTIME,ORA,ORPX,POP,ORPCNT
"RTN","ORWU",184,0)
 .. Q:'$D(^%ZIS(1,IEN,0))  S X0=^(0),X1=$G(^(1)),X90=$G(^(90)),X91=$G(^(91)),X95=$G(^(95)),XSTYPE=$G(^("SUBTYPE")),XTIME=$G(^("TIME")),XTYPE=$G(^("TYPE"))
"RTN","ORWU",185,0)
 .. I $E($G(^%ZIS(2,+XSTYPE,0)))'="P" Q  ;Printers only
"RTN","ORWU",186,0)
 .. S X=$P(XTYPE,"^") I X'="TRM",X'="HG",X'="HFS",X'="CHAN" Q  ;Device Types
"RTN","ORWU",187,0)
 .. S X=X0 I ($P(X,U,2)="0")!($P(X,U,12)=2) Q  ;Queuing allowed
"RTN","ORWU",188,0)
 .. S X=+X90 I X,(X'>DT) Q  ;Out of Service
"RTN","ORWU",189,0)
 .. I XTIME]"" S ORA=$P(XTIME,"^"),ORPX=$P($H,",",2),ORPCNT=ORPX\60#60+(ORPX\3600*100),ORPX=$P(ORA,"-",2) I ORPX'<ORA&(ORPCNT'>ORPX&(ORPCNT'<ORA))!(ORPX<ORA&(ORPCNT'<ORA!(ORPCNT'>ORPX))) Q  ;Prohibited Times
"RTN","ORWU",190,0)
 .. S POP=0
"RTN","ORWU",191,0)
 .. I X95]"" S ORPX=$G(DUZ(0)) I ORPX'="@" S POP=1 F ORA=1:1:$L(ORPX) I X95[$E(ORPX,ORA) S POP=0 Q
"RTN","ORWU",192,0)
 .. Q:POP  ;Security check
"RTN","ORWU",193,0)
 .. S SHOW=$P(X0,U) I SHOW'=FROM S SHOW=FROM_"  <"_SHOW_">"
"RTN","ORWU",194,0)
 .. S I=I+1,Y(I)=IEN_";"_$P(X0,U)_U_SHOW_U_$P(X1,U)_U_$P(X91,U)_U_$P(X91,U,3)
"RTN","ORWU",195,0)
 Q
"RTN","ORWU",196,0)
URGENCY(Y) ; -- retrieve set values from dd for discharge summary urgency
"RTN","ORWU",197,0)
 N ORDD,I,X
"RTN","ORWU",198,0)
 D FIELD^DID(8925,.09,"","POINTER","ORDD")
"RTN","ORWU",199,0)
 F I=1:1 S X=$P(ORDD("POINTER"),";",I) Q:X=""   S Y(I)=$TR(X,":","^")
"RTN","ORWU",200,0)
 Q
"RTN","ORWU",201,0)
PATCH(VAL,X) ; Return 1 if patch X is installed
"RTN","ORWU",202,0)
 S VAL=$$PATCH^XPDUTL(X)
"RTN","ORWU",203,0)
 Q
"RTN","ORWU",204,0)
VERSION(VAL,X) ;Return version of package or namespace
"RTN","ORWU",205,0)
 S VAL=$$VERSION^XPDUTL(X)
"RTN","ORWU",206,0)
 Q
"RTN","ORWU",207,0)
VERSRV(VAL,X,CLVER) ; Return server version of option name
"RTN","ORWU",208,0)
 S ORWCLVER=$G(CLVER)  ; leave in partition for session
"RTN","ORWU",209,0)
 N BADVAL,ORLST
"RTN","ORWU",210,0)
 D FIND^DIC(19,"",1,"X",X,1,,,,"ORLST")
"RTN","ORWU",211,0)
 I 'ORLST("DILIST",0) S VAL="0.0.0.0" Q
"RTN","ORWU",212,0)
 S VAL=ORLST("DILIST","ID",1,1)
"RTN","ORWU",213,0)
 S VAL=$P(VAL,"version ",2)
"RTN","ORWU",214,0)
 S BADVAL=0
"RTN","ORWU",215,0)
 I $P(VAL,".",1)="" S BADVAL=1
"RTN","ORWU",216,0)
 I $P(VAL,".",2)="" S BADVAL=1
"RTN","ORWU",217,0)
 I $P(VAL,".",3)="" S BADVAL=1
"RTN","ORWU",218,0)
 I $P(VAL,".",4)="" S BADVAL=1
"RTN","ORWU",219,0)
 I ((BADVAL)!('VAL)!(VAL="")) S VAL="0.0.0.0"
"RTN","ORWU",220,0)
 Q
"RTN","ORWU",221,0)
OVERDL(VAL) ;Return parameter value of ORPARAM OVER DATELINE
"RTN","ORWU",222,0)
 S VAL=$$GET^XPAR("ALL","ORPARAM OVER DATELINE")
"RTN","ORWU",223,0)
 Q
"RTN","ORWU",224,0)
MOBAPP(VAL,ORAPP) ;set ^TMP($J,"OR MOB APP")
"RTN","ORWU",225,0)
 S ^TMP($J,"OR MOB APP")=ORAPP
"RTN","ORWU",226,0)
 S VAL=1
"RTN","ORWU",227,0)
 Q
"VER")
8.0^22.0
"^DD",101.41,101.41,0)
FIELD^^99^30
"^DD",101.41,101.41,0,"DDA")
N
"^DD",101.41,101.41,0,"DT")
2980501
"^DD",101.41,101.41,0,"IX","AB",101.41,.01)

"^DD",101.41,101.41,0,"IX","AD",101.412,2)

"^DD",101.41,101.41,0,"IX","AM",101.41,99)

"^DD",101.41,101.41,0,"IX","AM2",101.41,2)

"^DD",101.41,101.41,0,"IX","AM51",101.41,51)

"^DD",101.41,101.41,0,"IX","AM52",101.41,52)

"^DD",101.41,101.41,0,"IX","AMM",101.412,.01)

"^DD",101.41,101.41,0,"IX","AMM2",101.412,2)

"^DD",101.41,101.41,0,"IX","AMM3",101.412,3)

"^DD",101.41,101.41,0,"IX","AMM4",101.412,4)

"^DD",101.41,101.41,0,"IX","AMM5",101.412,5)

"^DD",101.41,101.41,0,"IX","APKG",101.41,7)

"^DD",101.41,101.41,0,"IX","C",101.41,2)

"^DD",101.41,101.41,0,"NM","ORDER DIALOG")

"^DD",101.41,101.41,0,"PT",100,2)

"^DD",101.41,101.41,0,"PT",100,7)

"^DD",101.41,101.41,0,"PT",100.045,.02)

"^DD",101.41,101.41,0,"PT",100.5,4)

"^DD",101.41,101.41,0,"PT",100.5,5)

"^DD",101.41,101.41,0,"PT",100.98,4)

"^DD",101.41,101.41,0,"PT",101.412,1)

"^DD",101.41,101.41,0,"PT",101.412,2)

"^DD",101.41,101.41,0,"PT",101.415,2)

"^DD",101.41,101.41,0,"PT",101.416,.02)

"^DD",101.41,101.41,0,"PT",101.441,.01)

"^DD",101.41,101.41,0,"PT",801.41,15)

"^DD",101.41,101.41,0,"PT",801.4118,.01)

"^DD",101.41,101.41,0,"VRPK")
OR
"^DD",101.41,101.41,.01,0)
NAME^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>63!($L(X)<3)!'(X'?1P.E) X
"^DD",101.41,101.41,.01,1,0)
^.1^^-1
"^DD",101.41,101.41,.01,1,2,0)
101.41^AB
"^DD",101.41,101.41,.01,1,2,1)
S ^ORD(101.41,"AB",$E(X,1,63),DA)=""
"^DD",101.41,101.41,.01,1,2,2)
K ^ORD(101.41,"AB",$E(X,1,63),DA)
"^DD",101.41,101.41,.01,1,2,"%D",0)
^^1^1^2971020^
"^DD",101.41,101.41,.01,1,2,"%D",1,0)
This is a regular index on the full 63 characters of the Name field.
"^DD",101.41,101.41,.01,1,2,"DT")
2971020
"^DD",101.41,101.41,.01,3)
Answer must be 3-63 characters in length.
"^DD",101.41,101.41,.01,21,0)
^^3^3^2971219^
"^DD",101.41,101.41,.01,21,1,0)
This is the name of the dialog; entries that were converted from the
"^DD",101.41,101.41,.01,21,2,0)
Protocol file will retain the same name.  Namespacing is not required,
"^DD",101.41,101.41,.01,21,3,0)
but still encouraged.
"^DD",101.41,101.41,.01,"DT")
2971020
"^DD",101.41,101.41,2,0)
DISPLAY TEXT^FX^^0;2^K:$L(X)>80!($L(X)<3)!($$CHKNAM^ORUTL(X)) X
"^DD",101.41,101.41,2,1,0)
^.1
"^DD",101.41,101.41,2,1,1,0)
101.41^C
"^DD",101.41,101.41,2,1,1,1)
S ^ORD(101.41,"C",$$UP^XLFSTR($E(X,1,63)),DA)=""
"^DD",101.41,101.41,2,1,1,2)
K ^ORD(101.41,"C",$$UP^XLFSTR($E(X,1,63)),DA)
"^DD",101.41,101.41,2,1,1,"DT")
2950112
"^DD",101.41,101.41,2,1,2,0)
101.41^AM2^MUMPS
"^DD",101.41,101.41,2,1,2,1)
D REDOM^ORDD41
"^DD",101.41,101.41,2,1,2,2)
D REDOM^ORDD41
"^DD",101.41,101.41,2,1,2,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.41,2,1,2,"%D",1,0)
Update TIMESTAMP whenever DISPLAY TEXT is changed.
"^DD",101.41,101.41,2,1,2,"DT")
2990210
"^DD",101.41,101.41,2,3)
Answer must be 3-80 characters in length and cannot contain a semicolon (;), a comma (,), an up-arrow (^), a dash (-), or an equal sign (=). 
"^DD",101.41,101.41,2,21,0)
^.001^1^1^3010913^^^^
"^DD",101.41,101.41,2,21,1,0)
The text of this dialog's name as it appears on a menu or subheader.
"^DD",101.41,101.41,2,"DT")
3000823
"^DD",101.41,101.41,3,0)
DISABLE^F^^0;3^K:$L(X)>40!($L(X)<1) X
"^DD",101.41,101.41,3,3)
Enter a message here to disable this dialog, 1-40 characters in length.
"^DD",101.41,101.41,3,21,0)
^^3^3^2950112^
"^DD",101.41,101.41,3,21,1,0)
This field disables use of this dialog when it contains text.  The text
"^DD",101.41,101.41,3,21,2,0)
should be a short message explaining why use of this dialog has been
"^DD",101.41,101.41,3,21,3,0)
disabled, as it will be displayed if this dialog is selected.
"^DD",101.41,101.41,3,"DT")
2950112
"^DD",101.41,101.41,4,0)
TYPE^RS^P:prompt;D:dialog;Q:quick order;O:order set;M:menu;A:action;^0;4^Q
"^DD",101.41,101.41,4,3)
Specify a type for this dialog.
"^DD",101.41,101.41,4,21,0)
^^5^5^2950716^^^^
"^DD",101.41,101.41,4,21,1,0)
This field defines the type of order dialog to be processed.  Control
"^DD",101.41,101.41,4,21,2,0)
will be passed to the OE/RR Dialog Processor for dialog items; menu types
"^DD",101.41,101.41,4,21,3,0)
are used for displaying and selecting dialog items.  Action types will only
"^DD",101.41,101.41,4,21,4,0)
execute the entry and exit actions, ignoring any items that may exist; these
"^DD",101.41,101.41,4,21,5,0)
dialogs should not create entries in the Orders file.
"^DD",101.41,101.41,4,"DT")
2950716
"^DD",101.41,101.41,5,0)
DISPLAY GROUP^P100.98'^ORD(100.98,^0;5^Q
"^DD",101.41,101.41,5,3)
Enter the display group containing orderable items defined by this dialog.
"^DD",101.41,101.41,5,21,0)
^^3^3^2950112^
"^DD",101.41,101.41,5,21,1,0)
This field determines what display group this dialog has been defined for.
"^DD",101.41,101.41,5,21,2,0)
It will define which orderable items are selectable with this dialog,
"^DD",101.41,101.41,5,21,3,0)
as well as what service to send the order to when it is complete.
"^DD",101.41,101.41,5,"DT")
2950112
"^DD",101.41,101.41,6,0)
SIGNATURE REQUIRED^S^0:NONE;1:ORELSE;2:ORES;^0;6^Q
"^DD",101.41,101.41,6,3)
Enter the OR key required to sign orders created by this dialog
"^DD",101.41,101.41,6,21,0)
^^6^6^2970318^^
"^DD",101.41,101.41,6,21,1,0)
This field indicates what signature will be required for orders created by
"^DD",101.41,101.41,6,21,2,0)
this dialog, to be considered complete and ready to release to the service
"^DD",101.41,101.41,6,21,3,0)
for action.  If this flag is set to NO and the dialog contains a prompt
"^DD",101.41,101.41,6,21,4,0)
for item(s) from the Orderable Item file, the order created may still
"^DD",101.41,101.41,6,21,5,0)
require a signature if any of the items ordered are individually flagged
"^DD",101.41,101.41,6,21,6,0)
as requiring a signature.
"^DD",101.41,101.41,6,"DT")
2970318
"^DD",101.41,101.41,7,0)
PACKAGE^P9.4'^DIC(9.4,^0;7^Q
"^DD",101.41,101.41,7,1,0)
^.1
"^DD",101.41,101.41,7,1,1,0)
101.41^APKG
"^DD",101.41,101.41,7,1,1,1)
S ^ORD(101.41,"APKG",$E(X,1,30),DA)=""
"^DD",101.41,101.41,7,1,1,2)
K ^ORD(101.41,"APKG",$E(X,1,30),DA)
"^DD",101.41,101.41,7,1,1,"DT")
2970325
"^DD",101.41,101.41,7,3)
Enter the VISTA package that is to receive orders created by this dialog.
"^DD",101.41,101.41,7,21,0)
^^3^3^2950208^
"^DD",101.41,101.41,7,21,1,0)
This is the VISTA package that is intended to receive orders created by
"^DD",101.41,101.41,7,21,2,0)
this dialog; this is required for creating the HL7 messages to pass the
"^DD",101.41,101.41,7,21,3,0)
order.
"^DD",101.41,101.41,7,"DT")
2970325
"^DD",101.41,101.41,8,0)
VERIFY ORDER^S^1:YES;0:NO;^0;8^Q
"^DD",101.41,101.41,8,3)
Enter YES to have orders created by this dialog presented to the user before saving, with the opportunity to edit.
"^DD",101.41,101.41,8,21,0)
^^3^3^2950623^
"^DD",101.41,101.41,8,21,1,0)
This field is a flag, which determines if the order created by this dialog
"^DD",101.41,101.41,8,21,2,0)
will be presented to the user for verification before saving in the Orders
"^DD",101.41,101.41,8,21,3,0)
file; for most quick orders, this flag should be set to 0 (no).
"^DD",101.41,101.41,8,"DT")
2950623
"^DD",101.41,101.41,9,0)
ASK FOR ANOTHER ORDER^S^0:NO;1:YES;2:YES-DON'T ASK;^0;9^Q
"^DD",101.41,101.41,9,3)
Enter YES to have the user asked to enter another order from this dialog before exiting.
"^DD",101.41,101.41,9,21,0)
^^6^6^2970616^^^
"^DD",101.41,101.41,9,21,1,0)
This field allows the user to add another order from this dialog, when the
"^DD",101.41,101.41,9,21,2,0)
initial order is accepted and placed; if set to YES, the user will be
"^DD",101.41,101.41,9,21,3,0)
asked "Add another <dialog display text> order?" to allow for either
"^DD",101.41,101.41,9,21,4,0)
exiting the processor or adding an additional order of the same type.
"^DD",101.41,101.41,9,21,5,0)
This field can also be set to YES-DON'T ASK to force the processor to
"^DD",101.41,101.41,9,21,6,0)
automatically drop into prompting for another order without asking first.
"^DD",101.41,101.41,9,"DT")
2970616
"^DD",101.41,101.41,10,0)
ITEMS^101.412IA^^10;0
"^DD",101.41,101.41,10,21,0)
^^5^5^2990211^^^^
"^DD",101.41,101.41,10,21,1,0)
This field contains the components for dialogs:
"^DD",101.41,101.41,10,21,2,0)
     Dialogs      -> prompts
"^DD",101.41,101.41,10,21,3,0)
     Quick orders -> prompts (completed)
"^DD",101.41,101.41,10,21,4,0)
     Order sets   -> dialogs or quick orders
"^DD",101.41,101.41,10,21,5,0)
     Menus        -> dialogs, quick orders, or order sets
"^DD",101.41,101.41,11,0)
DATA TYPE^S^D:date/time;R:free text date/time;F:free text;N:numeric;S:set of codes;Y:yes/no;P:pointer;W:word processing;^1;1^Q
"^DD",101.41,101.41,11,3)
Enter the type of data to be collected at this prompt.
"^DD",101.41,101.41,11,21,0)
^^2^2^2950823^^
"^DD",101.41,101.41,11,21,1,0)
This is the type of data being prompted for; this field is used to define
"^DD",101.41,101.41,11,21,2,0)
a call to the reader (^DIR) in most cases.
"^DD",101.41,101.41,11,23,0)
^^1^1^2950823^^
"^DD",101.41,101.41,11,23,1,0)
Used with Prompt-type only.
"^DD",101.41,101.41,11,"DT")
2950407
"^DD",101.41,101.41,12,0)
DOMAIN^F^^1;2^K:$L(X)>235!($L(X)<1) X
"^DD",101.41,101.41,12,3)
Answer must be 1-235 characters in length.
"^DD",101.41,101.41,12,21,0)
^^3^3^2990225^^^^
"^DD",101.41,101.41,12,21,1,0)
This is a parameter that may be used to further specify the data type.
"^DD",101.41,101.41,12,21,2,0)
The string stored here should be appropriate for the second ^-piece of
"^DD",101.41,101.41,12,21,3,0)
DIR(0) when used with the data type field.
"^DD",101.41,101.41,12,23,0)
^^1^1^2990225^^^^
"^DD",101.41,101.41,12,23,1,0)
Used with Prompt-type only.
"^DD",101.41,101.41,12,"DT")
2990225
"^DD",101.41,101.41,13,0)
ID^F^^1;3^K:$L(X)>10!($L(X)<2) X
"^DD",101.41,101.41,13,3)
Answer must be 2-10 characters in length.
"^DD",101.41,101.41,13,21,0)
^.001^20^20^3010727^^
"^DD",101.41,101.41,13,21,1,0)
This field may contain a single word identifier which will be
"^DD",101.41,101.41,13,21,2,0)
stored with the user response in the Orders file #100, where it
"^DD",101.41,101.41,13,21,3,0)
will be indexed for quick reference to certain values in the
"^DD",101.41,101.41,13,21,4,0)
order dialog.  The following are some examples of values
"^DD",101.41,101.41,13,21,5,0)
currently in use:
"^DD",101.41,101.41,13,21,6,0)
 
"^DD",101.41,101.41,13,21,7,0)
   START      -> Start date/time
"^DD",101.41,101.41,13,21,8,0)
   STOP       -> Stop date/time
"^DD",101.41,101.41,13,21,9,0)
   SCHEDULE   -> Administration Schedule
"^DD",101.41,101.41,13,21,10,0)
   ORDERABLE  -> Orderable Item
"^DD",101.41,101.41,13,21,11,0)
   DRUG       -> Dispense Drug
"^DD",101.41,101.41,13,21,12,0)
   CANCEL     -> Cancel Future Orders flag
"^DD",101.41,101.41,13,21,13,0)
   COMMENT    -> Word processing comments
"^DD",101.41,101.41,13,21,14,0)
 
"^DD",101.41,101.41,13,21,15,0)
These values must be unique among entries within an order dialog
"^DD",101.41,101.41,13,21,16,0)
but do not need to be unique across the entire file.  Be sure to
"^DD",101.41,101.41,13,21,17,0)
check the IDs assigned to generic text entries to make sure that
"^DD",101.41,101.41,13,21,18,0)
all IDs are unique.  In order to avoid potential problems it's
"^DD",101.41,101.41,13,21,19,0)
recommended that you use unique IDs for any local entries that you
"^DD",101.41,101.41,13,21,20,0)
create.
"^DD",101.41,101.41,13,"DT")
2960215
"^DD",101.41,101.41,17,0)
VALIDATION^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,17,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,17,9)
@
"^DD",101.41,101.41,17,21,0)
^^3^3^2960912^
"^DD",101.41,101.41,17,21,1,0)
This is MUMPS code that will be executed at the time of releasing an
"^DD",101.41,101.41,17,21,2,0)
order created with this dialog; dialog responses may be checked again
"^DD",101.41,101.41,17,21,3,0)
here before releasing the order to the service.
"^DD",101.41,101.41,17,"DT")
2960912
"^DD",101.41,101.41,19,0)
ADDITIONAL TEXT^K^^9;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,19,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,19,9)
@
"^DD",101.41,101.41,19,21,0)
^^3^3^2960405^^
"^DD",101.41,101.41,19,21,1,0)
This is MUMPS code that will be executed when order ORIFN created by this
"^DD",101.41,101.41,19,21,2,0)
dialog is about to be displayed; any string that should be appended to the
"^DD",101.41,101.41,19,21,3,0)
order text should be returned in Y.
"^DD",101.41,101.41,19,"DT")
2960405
"^DD",101.41,101.41,20,0)
DESCRIPTION^101.411^^2;0
"^DD",101.41,101.41,20,21,0)
^^1^1^2971219^
"^DD",101.41,101.41,20,21,1,0)
This is a description of the dialog and its uses.
"^DD",101.41,101.41,21,0)
RESPONSES^101.416^^6;0
"^DD",101.41,101.41,21,21,0)
^^2^2^2971219^
"^DD",101.41,101.41,21,21,1,0)
This multiple contains any responses to prompts that have been pre-answered
"^DD",101.41,101.41,21,21,2,0)
to create a quick order.
"^DD",101.41,101.41,30,0)
ENTRY ACTION^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,30,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,30,9)
@
"^DD",101.41,101.41,30,21,0)
^^4^4^2950425^
"^DD",101.41,101.41,30,21,1,0)
This is MUMPS code that will be executed at the top of a dialog, prior to
"^DD",101.41,101.41,30,21,2,0)
the execution of any prompts; it may perform functions such as listing
"^DD",101.41,101.41,30,21,3,0)
the recent Radiology exams before ordering a new one, or alerting the
"^DD",101.41,101.41,30,21,4,0)
user to an existing diet order before making a change.
"^DD",101.41,101.41,30,"DT")
2950425
"^DD",101.41,101.41,31,0)
QUICK SETUP^K^^3.1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,31,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,31,9)
@
"^DD",101.41,101.41,31,21,0)
^^3^3^2970113^
"^DD",101.41,101.41,31,21,1,0)
This is MUMPS code that will be executed in the place of the Entry Action
"^DD",101.41,101.41,31,21,2,0)
when creating quick orders for this dialog; variables may be set here
"^DD",101.41,101.41,31,21,3,0)
instead to bypass the usual dependence on specific patient values.
"^DD",101.41,101.41,31,"DT")
2970113
"^DD",101.41,101.41,40,0)
EXIT ACTION^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,40,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,40,9)
@
"^DD",101.41,101.41,40,21,0)
^^2^2^2950622^
"^DD",101.41,101.41,40,21,1,0)
This is MUMPS code that will be executed upon completion of processing the
"^DD",101.41,101.41,40,21,2,0)
dialog; it is currently used only with dialog-type entries.
"^DD",101.41,101.41,40,"DT")
2950622
"^DD",101.41,101.41,50,0)
CONTROLS^101.415A^^50;0
"^DD",101.41,101.41,51,0)
COLUMN WIDTH^NJ3,0^^5;1^K:+X'=X!(X>240)!(X<20)!(X?.E1"."1N.N) X
"^DD",101.41,101.41,51,1,0)
^.1
"^DD",101.41,101.41,51,1,1,0)
101.41^AM51^MUMPS
"^DD",101.41,101.41,51,1,1,1)
D REDO^ORDD41
"^DD",101.41,101.41,51,1,1,2)
D REDO^ORDD41
"^DD",101.41,101.41,51,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.41,51,1,1,"%D",1,0)
Update TIMESTAMP whenever COLUMN WIDTH is changed.
"^DD",101.41,101.41,51,1,1,"DT")
2990210
"^DD",101.41,101.41,51,3)
Type a Number between 20 and 240, 0 Decimal Digits
"^DD",101.41,101.41,51,21,0)
^^2^2^2950623^
"^DD",101.41,101.41,51,21,1,0)
This is the width, in characters, for each column in a menu.  For example,
"^DD",101.41,101.41,51,21,2,0)
to have 3 columns on an 80 character device, enter a width of 26.
"^DD",101.41,101.41,51,"DT")
2990210
"^DD",101.41,101.41,52,0)
MNEMONIC WIDTH^NJ1,0^^5;2^K:+X'=X!(X>9)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.41,52,1,0)
^.1
"^DD",101.41,101.41,52,1,1,0)
101.41^AM52^MUMPS
"^DD",101.41,101.41,52,1,1,1)
D REDO^ORDD41
"^DD",101.41,101.41,52,1,1,2)
D REDO^ORDD41
"^DD",101.41,101.41,52,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.41,52,1,1,"%D",1,0)
Update TIMESTAMP whenever MNEMONIC WIDTH is changed.
"^DD",101.41,101.41,52,1,1,"DT")
2990210
"^DD",101.41,101.41,52,3)
Type a Number between 1 and 9, 0 Decimal Digits
"^DD",101.41,101.41,52,21,0)
^^2^2^2950623^
"^DD",101.41,101.41,52,21,1,0)
This field allows the width of item mnemonics to be varied; the default
"^DD",101.41,101.41,52,21,2,0)
value is 5.
"^DD",101.41,101.41,52,"DT")
2990210
"^DD",101.41,101.41,53,0)
PATH SWITCH^S^1:YES;0:NO;^5;3^Q
"^DD",101.41,101.41,53,3)
Enter YES if this menu should be redisplayed when traversing back up the menu tree.
"^DD",101.41,101.41,53,21,0)
^^5^5^2950623^
"^DD",101.41,101.41,53,21,1,0)
This switch allows the user, when traversing back UP the tree of menus and
"^DD",101.41,101.41,53,21,2,0)
items, to select a new path back down the tree.  In other words, the menu
"^DD",101.41,101.41,53,21,3,0)
is redisplayed when returning to that menu's level in the tree and
"^DD",101.41,101.41,53,21,4,0)
processing back down the tree is possible from that point.  If nothing is
"^DD",101.41,101.41,53,21,5,0)
selected from the menu, the path continues back up the tree.
"^DD",101.41,101.41,53,"DT")
2950623
"^DD",101.41,101.41,54,0)
LISTBOX TEXT^F^^5;4^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.41,54,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.41,54,"DT")
2960524
"^DD",101.41,101.41,55,0)
WINDOW FORM ID^NJ4,0^^5;5^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
"^DD",101.41,101.41,55,3)
Type a Number between 0 and 9999, 0 Decimal Digits
"^DD",101.41,101.41,55,21,0)
^.001^23^23^3010727^^
"^DD",101.41,101.41,55,21,1,0)
This field tells the GUI DELPHI code which form to use to process the
"^DD",101.41,101.41,55,21,2,0)
order dialog.  Each number represents a unique form.  Following are some
"^DD",101.41,101.41,55,21,3,0)
of the more common codes and their corresponding form in DELPHI.
"^DD",101.41,101.41,55,21,4,0)
 
"^DD",101.41,101.41,55,21,5,0)
    Form Name     Windows Form ID
"^DD",101.41,101.41,55,21,6,0)
    ---------     ---------------
"^DD",101.41,101.41,55,21,7,0)
  OD_ACTIVITY           100
"^DD",101.41,101.41,55,21,8,0)
  OD_ALLERGY            105
"^DD",101.41,101.41,55,21,9,0)
  OD_CONSULT            110
"^DD",101.41,101.41,55,21,10,0)
  OD_PROCEDURE          112
"^DD",101.41,101.41,55,21,11,0)
  OD_DIET_TXT           115
"^DD",101.41,101.41,55,21,12,0)
  OD_DIET               117
"^DD",101.41,101.41,55,21,13,0)
  OD_LAB                120
"^DD",101.41,101.41,55,21,14,0)
  OD_MEDINPT            130
"^DD",101.41,101.41,55,21,15,0)
  OD_MEDS               135
"^DD",101.41,101.41,55,21,16,0)
  OD_MEDOUTPT           140
"^DD",101.41,101.41,55,21,17,0)
  OD_NURSING            150
"^DD",101.41,101.41,55,21,18,0)
  OD_MISC               151
"^DD",101.41,101.41,55,21,19,0)
  OD_GENERIC            152
"^DD",101.41,101.41,55,21,20,0)
  OD_IMAGING            160
"^DD",101.41,101.41,55,21,21,0)
  OD_VITALS             171 
"^DD",101.41,101.41,55,21,22,0)
  OD_MEDIV              180
"^DD",101.41,101.41,55,21,23,0)
  OD_TEXTONLY           999
"^DD",101.41,101.41,55,"DT")
2960804
"^DD",101.41,101.41,56,0)
CREATE PARENT ORDER^S^1:YES;0:NO;^5;6^Q
"^DD",101.41,101.41,56,3)
Enter YES if a parent order should be created for this order set
"^DD",101.41,101.41,56,21,0)
^^6^6^2970227^
"^DD",101.41,101.41,56,21,1,0)
This flag indicates whether a parent order should be created to group
"^DD",101.41,101.41,56,21,2,0)
together all the orders created by this order set; this flag is only
"^DD",101.41,101.41,56,21,3,0)
valid with SET type order dialogs.  If this value is YES, a parent
"^DD",101.41,101.41,56,21,4,0)
order will be created, and only the parent will be presented on the
"^DD",101.41,101.41,56,21,5,0)
orders list for display and action; NO will prevent a parent from being
"^DD",101.41,101.41,56,21,6,0)
created and all orders will be created and displayed independently.
"^DD",101.41,101.41,56,"DT")
2970227
"^DD",101.41,101.41,57,0)
DISPLAY SUBHEADER^S^1:YES;0:NO;^5;7^Q
"^DD",101.41,101.41,57,3)
Enter YES if a subheader should be displayed as each order in this set is processed
"^DD",101.41,101.41,57,21,0)
^^3^3^2970227^
"^DD",101.41,101.41,57,21,1,0)
This flag indicates whether a subheader is to be displayed for each order
"^DD",101.41,101.41,57,21,2,0)
in this set as it is processed and placed; this flag is only valid with
"^DD",101.41,101.41,57,21,3,0)
SET type order dialogs.
"^DD",101.41,101.41,57,"DT")
2970227
"^DD",101.41,101.41,58,0)
AUTO-ACCEPT QUICK ORDER^S^1:YES;^5;8^Q
"^DD",101.41,101.41,58,3)
Enter 'Yes' if the order should be placed without displaying the dialog window.
"^DD",101.41,101.41,58,21,0)
^^2^2^2980902^
"^DD",101.41,101.41,58,21,1,0)
This can be set to yes for a quick order so that it can be placed simply
"^DD",101.41,101.41,58,21,2,0)
by clicking on it in the GUI (no ordering dialog is displayed).
"^DD",101.41,101.41,58,"DT")
2980902
"^DD",101.41,101.41,99,0)
TIMESTAMP^F^^99;1^K:$L(X)>15!($L(X)<1) X
"^DD",101.41,101.41,99,1,0)
^.1
"^DD",101.41,101.41,99,1,1,0)
101.41^AM^MUMPS
"^DD",101.41,101.41,99,1,1,1)
D SET^ORDD41(DA)
"^DD",101.41,101.41,99,1,1,2)
D KILL^ORDD41(DA)
"^DD",101.41,101.41,99,1,1,"%D",0)
^^2^2^2990210^
"^DD",101.41,101.41,99,1,1,"%D",1,0)
Recompiles order dialog menus in ^XUTL("XQORM",<dialog#>_";ORD(101.41,")
"^DD",101.41,101.41,99,1,1,"%D",2,0)
whenever fields necessary to displaying the menu are changed.
"^DD",101.41,101.41,99,1,1,"DT")
2990210
"^DD",101.41,101.41,99,3)
Answer must be 1-15 characters in length.
"^DD",101.41,101.41,99,21,0)
^^2^2^2980501^
"^DD",101.41,101.41,99,21,1,0)
For menus, this contains the $H time the menu was last compiled for use
"^DD",101.41,101.41,99,21,2,0)
with the Unwinder utility (^XQOR).
"^DD",101.41,101.41,99,"DT")
2990210
"^DD",101.41,101.411,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",101.41,101.411,0,"DT")
2950407
"^DD",101.41,101.411,0,"NM","DESCRIPTION")

"^DD",101.41,101.411,0,"UP")
101.41
"^DD",101.41,101.411,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",101.41,101.411,.01,3)
Enter a description of this dialog.
"^DD",101.41,101.411,.01,21,0)
^^1^1^2950425^^
"^DD",101.41,101.411,.01,21,1,0)
This field contains a description of the content and use of this dialog.
"^DD",101.41,101.411,.01,"DT")
2950407
"^DD",101.41,101.412,0)
ITEMS SUB-FIELD^^117^37
"^DD",101.41,101.412,0,"DT")
2971117
"^DD",101.41,101.412,0,"ID","WRITE")
N OR0,ORNM S OR0=^(0) I $P(OR0,U,2) S ORNM=$P($G(^ORD(101.41,+$P(OR0,U,2),0)),U) D:$L(ORNM) EN^DDIOL(ORNM,,"?10")
"^DD",101.41,101.412,0,"IX","ATXT",101.412,21)

"^DD",101.41,101.412,0,"IX","B",101.412,.01)

"^DD",101.41,101.412,0,"IX","D",101.412,2)

"^DD",101.41,101.412,0,"IX","DAD",101.412,1)

"^DD",101.41,101.412,0,"IX","DAD1",101.412,.01)

"^DD",101.41,101.412,0,"NM","ITEMS")

"^DD",101.41,101.412,0,"UP")
101.41
"^DD",101.41,101.412,.01,0)
SEQUENCE^MNJ5,1^^0;1^K:+X'=X!(X>999.9)!(X<.1)!(X?.E1"."2N.N) X
"^DD",101.41,101.412,.01,1,0)
^.1
"^DD",101.41,101.412,.01,1,1,0)
101.412^B
"^DD",101.41,101.412,.01,1,1,1)
S ^ORD(101.41,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",101.41,101.412,.01,1,1,2)
K ^ORD(101.41,DA(1),10,"B",$E(X,1,30),DA)
"^DD",101.41,101.412,.01,1,2,0)
101.412^DAD1^MUMPS
"^DD",101.41,101.412,.01,1,2,1)
N ORP S ORP=$P(^ORD(101.41,DA(1),10,DA,0),U,11) S:ORP ^ORD(101.41,DA(1),10,"DAD",ORP,X,DA)=""
"^DD",101.41,101.412,.01,1,2,2)
N ORP S ORP=$P(^ORD(101.41,DA(1),10,DA,0),U,11) K:ORP ^ORD(101.41,DA(1),10,"DAD",ORP,X,DA)
"^DD",101.41,101.412,.01,1,2,"%D",0)
^^1^1^2950511^
"^DD",101.41,101.412,.01,1,2,"%D",1,0)
Allows retrieval of 'child' prompts in sequence by parent.
"^DD",101.41,101.412,.01,1,2,"DT")
2950511
"^DD",101.41,101.412,.01,1,3,0)
101.41^AMM^MUMPS
"^DD",101.41,101.412,.01,1,3,1)
D REDOX^ORDD41
"^DD",101.41,101.412,.01,1,3,2)
D REDOX^ORDD41
"^DD",101.41,101.412,.01,1,3,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,.01,1,3,"%D",1,0)
Update TIMESTAMP whenever SEQUENCE is changed.
"^DD",101.41,101.412,.01,1,3,"DT")
2990210
"^DD",101.41,101.412,.01,3)
Type a Number between .1 and 999.9, 1 Decimal Digit
"^DD",101.41,101.412,.01,21,0)
^^2^2^2971117^^^^
"^DD",101.41,101.412,.01,21,1,0)
This field specifies the order in which this item will be displayed or
"^DD",101.41,101.412,.01,21,2,0)
processed.
"^DD",101.41,101.412,.01,"DT")
2990210
"^DD",101.41,101.412,.1,0)
INPUT TRANSFORM^K^^.1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,.1,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,.1,9)
@
"^DD",101.41,101.412,.1,21,0)
^^2^2^2950816^
"^DD",101.41,101.412,.1,21,1,0)
This is code that will be used as the third piece of DIR(0) when asking
"^DD",101.41,101.412,.1,21,2,0)
this prompt.
"^DD",101.41,101.412,.1,"DT")
2950816
"^DD",101.41,101.412,1,0)
PARENT^P101.41'^ORD(101.41,^0;11^Q
"^DD",101.41,101.412,1,1,0)
^.1
"^DD",101.41,101.412,1,1,1,0)
101.412^DAD^MUMPS
"^DD",101.41,101.412,1,1,1,1)
S ^ORD(101.41,DA(1),10,"DAD",X,$P(^ORD(101.41,DA(1),10,DA,0),U),DA)=""
"^DD",101.41,101.412,1,1,1,2)
K ^ORD(101.41,DA(1),10,"DAD",X,$P(^ORD(101.41,DA(1),10,DA,0),U),DA)
"^DD",101.41,101.412,1,1,1,"%D",0)
^^1^1^2950511^^
"^DD",101.41,101.412,1,1,1,"%D",1,0)
Allows retrieval of 'child' prompts in sequence by parent.
"^DD",101.41,101.412,1,1,1,"DT")
2950511
"^DD",101.41,101.412,1,3)
If this prompt is subordinate to another in this dialog, enter the parent prompt here
"^DD",101.41,101.412,1,21,0)
^^4^4^2950511^
"^DD",101.41,101.412,1,21,1,0)
This field controls the behavior of this prompt.  If a parent is defined
"^DD",101.41,101.412,1,21,2,0)
here, this prompt will be asked from within the parent's dialog; when it
"^DD",101.41,101.412,1,21,3,0)
is invoked independently based on its position sequence number, the child
"^DD",101.41,101.412,1,21,4,0)
prompt will be ignored.
"^DD",101.41,101.412,1,"DT")
2950511
"^DD",101.41,101.412,2,0)
ITEM^P101.41'X^ORD(101.41,^0;2^D TREE^ORDD41
"^DD",101.41,101.412,2,1,0)
^.1
"^DD",101.41,101.412,2,1,1,0)
101.41^AD
"^DD",101.41,101.412,2,1,1,1)
S ^ORD(101.41,"AD",$E(X,1,30),DA(1),DA)=""
"^DD",101.41,101.412,2,1,1,2)
K ^ORD(101.41,"AD",$E(X,1,30),DA(1),DA)
"^DD",101.41,101.412,2,1,1,"DT")
2950123
"^DD",101.41,101.412,2,1,2,0)
101.412^D
"^DD",101.41,101.412,2,1,2,1)
S ^ORD(101.41,DA(1),10,"D",$E(X,1,30),DA)=""
"^DD",101.41,101.412,2,1,2,2)
K ^ORD(101.41,DA(1),10,"D",$E(X,1,30),DA)
"^DD",101.41,101.412,2,1,2,"DT")
2950411
"^DD",101.41,101.412,2,1,3,0)
101.41^AMM2^MUMPS
"^DD",101.41,101.412,2,1,3,1)
D REDOX^ORDD41
"^DD",101.41,101.412,2,1,3,2)
D REDOX^ORDD41
"^DD",101.41,101.412,2,1,3,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,2,1,3,"%D",1,0)
Update TIMESTAMP whenever ITEM is changed.
"^DD",101.41,101.412,2,1,3,"DT")
2990210
"^DD",101.41,101.412,2,3)
Enter an order dialog; a dialog that is an ancestor may not also be a sub-item.
"^DD",101.41,101.412,2,21,0)
^^3^3^2950123^
"^DD",101.41,101.412,2,21,1,0)
This field points to an order dialog which is subordinate to this dialog.
"^DD",101.41,101.412,2,21,2,0)
NOTE:  The parent dialog menu or one of its ancestors may not be entered
"^DD",101.41,101.412,2,21,3,0)
as an item.
"^DD",101.41,101.412,2,"DT")
2990217
"^DD",101.41,101.412,3,0)
MNEMONIC^FX^^0;3^K:$L(X)>4!($L(X)<1)!(+X=X&($L(X,".")>1))!($$CHKMNE^ORUTL(X)) X
"^DD",101.41,101.412,3,1,0)
^.1
"^DD",101.41,101.412,3,1,1,0)
101.41^AMM3^MUMPS
"^DD",101.41,101.412,3,1,1,1)
D REDOX^ORDD41
"^DD",101.41,101.412,3,1,1,2)
D REDOX^ORDD41
"^DD",101.41,101.412,3,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,3,1,1,"%D",1,0)
Update TIMESTAMP whenever MNEMONIC is changed.
"^DD",101.41,101.412,3,1,1,"DT")
2990210
"^DD",101.41,101.412,3,3)
Enter a mnemonic to be used when this dialog is displayed for selection, 1-4 characters in length with no decimal places if numeric. Standard list manager mnemonics may not be used.
"^DD",101.41,101.412,3,21,0)
^.001^2^2^3010727^^^^
"^DD",101.41,101.412,3,21,1,0)
This is a short abbreviation for this item dialog to be used when this
"^DD",101.41,101.412,3,21,2,0)
dialog is displayed for selection.
"^DD",101.41,101.412,3,"DT")
3000822
"^DD",101.41,101.412,4,0)
DISPLAY TEXT^FX^^0;4^K:$L(X)>80!($L(X)<1)!($$CHKNAM^ORUTL(X)) X
"^DD",101.41,101.412,4,1,0)
^.1
"^DD",101.41,101.412,4,1,1,0)
101.41^AMM4^MUMPS
"^DD",101.41,101.412,4,1,1,1)
D REDOX^ORDD41
"^DD",101.41,101.412,4,1,1,2)
D REDOX^ORDD41
"^DD",101.41,101.412,4,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,4,1,1,"%D",1,0)
Update TIMESTAMP whenever DISPLAY TEXT is changed.
"^DD",101.41,101.412,4,1,1,"DT")
2990210
"^DD",101.41,101.412,4,3)
Answer must be 1-80 characters in length and cannot contain a semicolon (;), a comma (,), an up-arrow (^), a dash (-), or an equal sign (=).
"^DD",101.41,101.412,4,21,0)
^.001^2^2^3010419^^^^
"^DD",101.41,101.412,4,21,1,0)
This field allows the text that normally appears for this item to be
"^DD",101.41,101.412,4,21,2,0)
replaced with alternate text for use in this dialog or menu.
"^DD",101.41,101.412,4,"DT")
3000823
"^DD",101.41,101.412,5,0)
DISPLAY ONLY?^S^0:NO;1:YES;2:YES-HEADER;^0;5^Q
"^DD",101.41,101.412,5,1,0)
^.1
"^DD",101.41,101.412,5,1,1,0)
101.41^AMM5^MUMPS
"^DD",101.41,101.412,5,1,1,1)
D REDOX^ORDD41
"^DD",101.41,101.412,5,1,1,2)
D REDOX^ORDD41
"^DD",101.41,101.412,5,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,5,1,1,"%D",1,0)
Update TIMESTAMP whenever DISPLAY ONLY? is changed.
"^DD",101.41,101.412,5,1,1,"DT")
2990210
"^DD",101.41,101.412,5,3)
Enter YES if this item is text for display only and not a selectable item.
"^DD",101.41,101.412,5,21,0)
^^3^3^2970409^^^^
"^DD",101.41,101.412,5,21,1,0)
This field identifies an item as being free text for display purposes
"^DD",101.41,101.412,5,21,2,0)
only.  The text in the Display Text field will be displayed, but it
"^DD",101.41,101.412,5,21,3,0)
is not selectable; if designated as a header, the text will be underlined.
"^DD",101.41,101.412,5,"DT")
2990210
"^DD",101.41,101.412,6,0)
REQUIRED^S^1:YES;0:NO;^0;6^Q
"^DD",101.41,101.412,6,3)
Enter YES if a response to this prompt is mandatory.
"^DD",101.41,101.412,6,21,0)
^^1^1^2950407^
"^DD",101.41,101.412,6,21,1,0)
This field indicates that the user must enter a response to this prompt.
"^DD",101.41,101.412,6,"DT")
2950407
"^DD",101.41,101.412,7,0)
MULTIPLE VALUED^S^1:YES;0:NO;^0;7^Q
"^DD",101.41,101.412,7,3)
Enter YES if this prompt is to be asked multiple times.
"^DD",101.41,101.412,7,21,0)
^^3^3^2950407^
"^DD",101.41,101.412,7,21,1,0)
This field determines if this prompt will be allowed to have multiple
"^DD",101.41,101.412,7,21,2,0)
values, or be prompted for only once; if this prompt is a sub-dialog,
"^DD",101.41,101.412,7,21,3,0)
the entire dialog will be asked once or many times, as a group.
"^DD",101.41,101.412,7,"DT")
2950407
"^DD",101.41,101.412,7.1,0)
MAX NUMBER OF MULTIPLES^NJ2,0^^0;12^K:+X'=X!(X>99)!(X<2)!(X?.E1"."1N.N) X
"^DD",101.41,101.412,7.1,3)
Type a Number between 2 and 99, 0 Decimal Digits
"^DD",101.41,101.412,7.1,21,0)
^^4^4^2950815^
"^DD",101.41,101.412,7.1,21,1,0)
This is the maximum number of values that may be entered for this prompt,
"^DD",101.41,101.412,7.1,21,2,0)
if it is flagged as being multiple-valued.  For example, a diet order may
"^DD",101.41,101.412,7.1,21,3,0)
have up to 5 diet modifications entered, where 5 is the maximum allowed
"^DD",101.41,101.412,7.1,21,4,0)
that would be entered here.
"^DD",101.41,101.412,7.1,"DT")
2950815
"^DD",101.41,101.412,7.2,0)
TITLE^F^^0;13^K:$L(X)>30!($L(X)<3) X
"^DD",101.41,101.412,7.2,3)
Answer must be 3-30 characters in length.
"^DD",101.41,101.412,7.2,21,0)
^^8^8^2970430^^
"^DD",101.41,101.412,7.2,21,1,0)
This is text that will be used in place of the prompt when the order is
"^DD",101.41,101.412,7.2,21,2,0)
displayed for place, edit, or cancel, or at the top of a multiple-valued
"^DD",101.41,101.412,7.2,21,3,0)
prompt.  The Display Text for the prompt will be used together with the
"^DD",101.41,101.412,7.2,21,4,0)
instance number to prompt for user input; for example if Title="Lab Tests:"
"^DD",101.41,101.412,7.2,21,5,0)
and Display Text="Test:" the user would see
"^DD",101.41,101.412,7.2,21,6,0)
  Lab Tests:
"^DD",101.41,101.412,7.2,21,7,0)
  1. Test:
"^DD",101.41,101.412,7.2,21,8,0)
  2. Test:
"^DD",101.41,101.412,7.2,"DT")
2950815
"^DD",101.41,101.412,7.3,0)
PROMPT^F^^0;14^K:$L(X)>10!($L(X)<1) X
"^DD",101.41,101.412,7.3,3)
Answer must be 1-10 characters in length.
"^DD",101.41,101.412,7.3,21,0)
^^3^3^2970618^
"^DD",101.41,101.412,7.3,21,1,0)
This field contains text that will be appended to the beginning of the
"^DD",101.41,101.412,7.3,21,2,0)
display text when prompting for additional values; if this field is
"^DD",101.41,101.412,7.3,21,3,0)
empty, then "Another " will be used.
"^DD",101.41,101.412,7.3,"DT")
2970618
"^DD",101.41,101.412,8,0)
ASK ON EDIT ONLY^S^1:YES;0:NO;^0;8^Q
"^DD",101.41,101.412,8,3)
Enter YES if this prompt should not be asked initially when creating this order, only if the user chooses to edit the order.
"^DD",101.41,101.412,8,21,0)
^^4^4^2960112^^^
"^DD",101.41,101.412,8,21,1,0)
This field determines the behaviour of the dialog driver for this prompt;
"^DD",101.41,101.412,8,21,2,0)
if no value or the defined default is usually correct for this prompt,
"^DD",101.41,101.412,8,21,3,0)
enter YES here to have this prompt skipped on the first pass through this
"^DD",101.41,101.412,8,21,4,0)
dialog when creating an order.
"^DD",101.41,101.412,8,"DT")
2950407
"^DD",101.41,101.412,9,0)
ASK ON ACTION^F^^0;9^K:$L(X)>3!($L(X)<1) X
"^DD",101.41,101.412,9,3)
Answer must be 1-3 characters in length.
"^DD",101.41,101.412,9,21,0)
^^6^6^2970708^^^
"^DD",101.41,101.412,9,21,1,0)
This field determines the behaviour of the dialog driver for this prompt
"^DD",101.41,101.412,9,21,2,0)
when taking a particular action on an order created by this dialog.  If
"^DD",101.41,101.412,9,21,3,0)
this string contains "R", this prompt will be asked when renewing an order;
"^DD",101.41,101.412,9,21,4,0)
if this string contains "C", this prompt will be asked when changing an
"^DD",101.41,101.412,9,21,5,0)
order; if this string contains "W", this prompt will be asked when
"^DD",101.41,101.412,9,21,6,0)
rewriting an order.
"^DD",101.41,101.412,9,"DT")
2970708
"^DD",101.41,101.412,10,0)
INDEX^F^^0;10^K:$L(X)>25!($L(X)<1) X
"^DD",101.41,101.412,10,3)
Answer must be 1-25 characters in length.
"^DD",101.41,101.412,10,21,0)
^^3^3^2950713^^^
"^DD",101.41,101.412,10,21,1,0)
For pointer-type prompts, this is the index to use when searching the file;
"^DD",101.41,101.412,10,21,2,0)
it must be in the form of a regular cross-reference.  To search on multiple
"^DD",101.41,101.412,10,21,3,0)
indices, enter a string of index names separated by semi-colons, i.e. "B;C".
"^DD",101.41,101.412,10,"DT")
2950713
"^DD",101.41,101.412,11,0)
HELP MESSAGE^F^^1;1^K:$L(X)>160!($L(X)<1) X
"^DD",101.41,101.412,11,3)
Answer must be 1-160 characters in length.
"^DD",101.41,101.412,11,21,0)
^^2^2^2970609^^
"^DD",101.41,101.412,11,21,1,0)
This field contains the help message to be presented when the user enters
"^DD",101.41,101.412,11,21,2,0)
a question mark at this prompt.
"^DD",101.41,101.412,11,"DT")
2970609
"^DD",101.41,101.412,12,0)
SPECIAL LOOKUP ROUTINE^F^^1;2^K:$L(X)>20!($L(X)<3) X
"^DD",101.41,101.412,12,3)
Enter the routine to use instead of DIC to do this lookup, as [TAG;]ROUTINE
"^DD",101.41,101.412,12,21,0)
^^3^3^2970609^
"^DD",101.41,101.412,12,21,1,0)
This field contains a routine to execute that will replace the standard
"^DD",101.41,101.412,12,21,2,0)
DIC lookup for this prompt; it must be entered here as LINETAG;ROUTINE
"^DD",101.41,101.412,12,21,3,0)
using a ; instead of ^ and where LINETAG is optional.
"^DD",101.41,101.412,12,"DT")
2970609
"^DD",101.41,101.412,13,0)
ASK ON CONDITION^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,13,3)
This is MUMPS code that sets $T to determine if this prompt should be asked, or given a default value and bypassed.
"^DD",101.41,101.412,13,9)
@
"^DD",101.41,101.412,13,21,0)
^^5^5^2950407^
"^DD",101.41,101.412,13,21,1,0)
This is MUMPS code that sets $T to determine if this prompt should be asked
"^DD",101.41,101.412,13,21,2,0)
or simply given a default value and presented to the user for acceptance
"^DD",101.41,101.412,13,21,3,0)
or editing.  For example, the prompt "Pregnant: " may have code here to
"^DD",101.41,101.412,13,21,4,0)
check the sex of the current patient, i.e. I ORSEX="F" will allow it to be
"^DD",101.41,101.412,13,21,5,0)
asked only for female patients.
"^DD",101.41,101.412,13,"DT")
2950407
"^DD",101.41,101.412,14,0)
SCREEN^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,14,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,14,9)
@
"^DD",101.41,101.412,14,21,0)
^^2^2^2950407^
"^DD",101.41,101.412,14,21,1,0)
For pointer-type prompts, this field may contain MUMPS code that will be
"^DD",101.41,101.412,14,21,2,0)
set into DIC("S") to screen the possible choices in the pointed-to file.
"^DD",101.41,101.412,14,"DT")
2950407
"^DD",101.41,101.412,15,0)
POST-SELECTION ACTION^K^^5;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,15,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,15,9)
@
"^DD",101.41,101.412,15,21,0)
^^3^3^2970923^^^^
"^DD",101.41,101.412,15,21,1,0)
This is code that will be executed after a response is entered to this
"^DD",101.41,101.412,15,21,2,0)
prompt; if this prompt should be re-asked, kill the variable DONE.
"^DD",101.41,101.412,15,21,3,0)
If execution of the ordering dialog should be stopped, set ORQUIT=1.
"^DD",101.41,101.412,15,"DT")
2970923
"^DD",101.41,101.412,16,0)
XECUTABLE HELP^K^^6;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,16,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,16,9)
@
"^DD",101.41,101.412,16,21,0)
^^2^2^2950407^
"^DD",101.41,101.412,16,21,1,0)
This is code that is to be executed when the user enters two or more
"^DD",101.41,101.412,16,21,2,0)
question marks at this prompt.
"^DD",101.41,101.412,16,"DT")
2950407
"^DD",101.41,101.412,17,0)
DEFAULT^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,17,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,17,9)
@
"^DD",101.41,101.412,17,21,0)
^^2^2^2971219^^^^
"^DD",101.41,101.412,17,21,1,0)
This is code that is to be executed to determine the appropriate default
"^DD",101.41,101.412,17,21,2,0)
value for this prompt, setting Y=internal form of this value.
"^DD",101.41,101.412,17,"DT")
2950519
"^DD",101.41,101.412,18,0)
DEFAULT WORD-PROCESSING TEXT^101.41218^^8;0
"^DD",101.41,101.412,18,21,0)
^^1^1^2971219^
"^DD",101.41,101.412,18,21,1,0)
This is default text to be stuffed into this word-processing prompt.
"^DD",101.41,101.412,19,0)
ENTRY ACTION^K^^9;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,19,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,19,9)
@
"^DD",101.41,101.412,19,21,0)
^^3^3^2970609^
"^DD",101.41,101.412,19,21,1,0)
This is code that will be executed at the beginning of the processing of
"^DD",101.41,101.412,19,21,2,0)
this prompt, before the Default and Ask on Condition fields are executed;
"^DD",101.41,101.412,19,21,3,0)
any special setup required for this field should be done here.
"^DD",101.41,101.412,19,"DT")
2970609
"^DD",101.41,101.412,20,0)
EXIT ACTION^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,20,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,20,9)
@
"^DD",101.41,101.412,20,21,0)
^^3^3^2970609^
"^DD",101.41,101.412,20,21,1,0)
This is code that will be executed at the very end of the processing of
"^DD",101.41,101.412,20,21,2,0)
this prompt, after prompting and the Validation field is executed;
"^DD",101.41,101.412,20,21,3,0)
any special cleanup should be done here.
"^DD",101.41,101.412,20,"DT")
2970609
"^DD",101.41,101.412,21,0)
ORDER TEXT SEQUENCE^NJ5,2^^2;1^K:+X'=X!(X>99.99)!(X<1)!(X?.E1"."3N.N) X
"^DD",101.41,101.412,21,1,0)
^.1
"^DD",101.41,101.412,21,1,1,0)
101.412^ATXT
"^DD",101.41,101.412,21,1,1,1)
S ^ORD(101.41,DA(1),10,"ATXT",$E(X,1,30),DA)=""
"^DD",101.41,101.412,21,1,1,2)
K ^ORD(101.41,DA(1),10,"ATXT",$E(X,1,30),DA)
"^DD",101.41,101.412,21,1,1,"%D",0)
^^1^1^2960226^
"^DD",101.41,101.412,21,1,1,"%D",1,0)
Used to build order text.
"^DD",101.41,101.412,21,1,1,"DT")
2960226
"^DD",101.41,101.412,21,3)
Enter the order in which this value should be added to the order text, as a number between 1 and 99.99; leave this field blank to prevent this value from being included
"^DD",101.41,101.412,21,21,0)
^^3^3^2970607^^^
"^DD",101.41,101.412,21,21,1,0)
This field indicates the order in which values will be concatenated
"^DD",101.41,101.412,21,21,2,0)
together to build the order text; this may differ from the prompting
"^DD",101.41,101.412,21,21,3,0)
order defined in the .01 Sequence field.
"^DD",101.41,101.412,21,"DT")
2960226
"^DD",101.41,101.412,22,0)
FORMAT^F^^2;2^K:$L(X)>10!($L(X)<1) X
"^DD",101.41,101.412,22,3)
Answer must be 1-10 characters in length.
"^DD",101.41,101.412,22,21,0)
^^15^15^2971207^^^^
"^DD",101.41,101.412,22,21,1,0)
This is a string of characters that will define any exceptions to how
"^DD",101.41,101.412,22,21,2,0)
the external form of this value is generated.  Possible values include:
"^DD",101.41,101.412,22,21,3,0)
  Pointer         -> <field #>~<piece in RPC list of field #>, default =.01
"^DD",101.41,101.412,22,21,4,0)
  Set of Codes    -> 1~<piece in RPC list of code> to use code for name
"^DD",101.41,101.412,22,21,5,0)
  Date/Time       -> Format string to pass $$FMTE^XLFDT (default = 2)
"^DD",101.41,101.412,22,21,6,0)
  
"^DD",101.41,101.412,22,21,7,0)
  Suppress value  -> @
"^DD",101.41,101.412,22,21,8,0)
  Replace value   -> @<ptr> where ptr is the Dialog IEN of the prompt
"^DD",101.41,101.412,22,21,9,0)
                      whose value, when present, supersedes this value
"^DD",101.41,101.412,22,21,10,0)
  Required value  -> *<ptr> where ptr is the Dialog IEN of the prompt
"^DD",101.41,101.412,22,21,11,0)
                      whose value is required to be present to include
"^DD",101.41,101.412,22,21,12,0)
                      this value
"^DD",101.41,101.412,22,21,13,0)
  Ignore if same  -> =<ptr> where ptr is the Dialog IEN of the prompt
"^DD",101.41,101.412,22,21,14,0)
                      whose value, if the external form is the same,
"^DD",101.41,101.412,22,21,15,0)
                      supersedes this value
"^DD",101.41,101.412,22,"DT")
2960226
"^DD",101.41,101.412,23,0)
OMIT TEXT^F^^2;3^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,23,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,23,21,0)
^^3^3^2970829^^^^
"^DD",101.41,101.412,23,21,1,0)
This is the external form of a value that is not to be included when building
"^DD",101.41,101.412,23,21,2,0)
the order text.  E.g. to include the urgency in the order text unless it
"^DD",101.41,101.412,23,21,3,0)
is routine, enter "ROUTINE" here.
"^DD",101.41,101.412,23,"DT")
2970829
"^DD",101.41,101.412,24,0)
LEADING TEXT^F^^2;4^K:$L(X)>80!($L(X)<1) X
"^DD",101.41,101.412,24,3)
Answer must be 1-80 characters in length.
"^DD",101.41,101.412,24,21,0)
^^3^3^2970724^^^^
"^DD",101.41,101.412,24,21,1,0)
This field contains text that will be appended to the order text
"^DD",101.41,101.412,24,21,2,0)
immediately in front of this value, e.g. "Instructions:".  If this text
"^DD",101.41,101.412,24,21,3,0)
is contained in a variable, enter @NAME where NAME is the variable name.
"^DD",101.41,101.412,24,"DT")
2970724
"^DD",101.41,101.412,25,0)
TRAILING TEXT^F^^2;5^K:$L(X)>80!($L(X)<1) X
"^DD",101.41,101.412,25,3)
Answer must be 1-80 characters in length.
"^DD",101.41,101.412,25,21,0)
^^3^3^2970724^^^^
"^DD",101.41,101.412,25,21,1,0)
This field contains text that will be appended to the order text
"^DD",101.41,101.412,25,21,2,0)
immediately following this value, e.g. "refills".  If this text is
"^DD",101.41,101.412,25,21,3,0)
contained in a variable, enter @NAME where NAME is the variable name.
"^DD",101.41,101.412,25,"DT")
2970724
"^DD",101.41,101.412,26,0)
START NEW LINE^S^1:YES;0:NO;^2;6^Q
"^DD",101.41,101.412,26,3)
Enter YES if this value should begin on a new line in the order text.
"^DD",101.41,101.412,26,21,0)
0^^2^2^2970911^
"^DD",101.41,101.412,26,21,1,0)
This field determines if this value is concatenated onto the current line
"^DD",101.41,101.412,26,21,2,0)
when building the order text, or if a new line is started with this value.
"^DD",101.41,101.412,26,"DT")
2970911
"^DD",101.41,101.412,27,0)
WORD-WRAP^S^1:DON'T WRAP;0:WRAP;^2;7^Q
"^DD",101.41,101.412,27,3)
Enter 'Don't Wrap' to have the text be added line-by-line as it is stored; the default formatting is 'Wrap'.
"^DD",101.41,101.412,27,21,0)
^^3^3^2970926^^^
"^DD",101.41,101.412,27,21,1,0)
This field determines if this text should be wrapped when added to the
"^DD",101.41,101.412,27,21,2,0)
order text, or appended line by line as stored in the file; this is only
"^DD",101.41,101.412,27,21,3,0)
used for word-processing type prompts.
"^DD",101.41,101.412,27,"DT")
2970926
"^DD",101.41,101.412,101,0)
WINDOWS CONTROL^F^^W;1^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,101,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,101,21,0)
^^2^2^2950715^
"^DD",101.41,101.412,101,21,1,0)
Stores the type of Windows control necessary to get the data for this
"^DD",101.41,101.412,101,21,2,0)
prompt.
"^DD",101.41,101.412,101,"DT")
2960517
"^DD",101.41,101.412,102,0)
API NAME^F^^W;2^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,102,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,102,21,0)
^^3^3^2950715^
"^DD",101.41,101.412,102,21,1,0)
This is the API that should be called when the control is used.  How the API
"^DD",101.41,101.412,102,21,2,0)
is used varys with the control.  Examples are: filling list boxes, getting
"^DD",101.41,101.412,102,21,3,0)
boilerplate text, etc.
"^DD",101.41,101.412,102,"DT")
2951002
"^DD",101.41,101.412,103,0)
API PARAMETER #1^F^^W;3^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,103,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,103,21,0)
^^1^1^2950715^
"^DD",101.41,101.412,103,21,1,0)
A parameter that is used by the API call may be stored here.
"^DD",101.41,101.412,103,"DT")
2950715
"^DD",101.41,101.412,113,0)
WINDOWS CONDITION^K^^W3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,113,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,113,9)
@
"^DD",101.41,101.412,113,21,0)
^^3^3^2950715^
"^DD",101.41,101.412,113,21,1,0)
This is silent code that is executed when building the dialog for windows.
"^DD",101.41,101.412,113,21,2,0)
It identifies which prompts should be included in the dialog.  The condition
"^DD",101.41,101.412,113,21,3,0)
should leave $T false if the prompt should not be asked.
"^DD",101.41,101.412,113,"DT")
2950715
"^DD",101.41,101.412,117,0)
WINDOWS DEFAULT^K^^W7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,117,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,117,9)
@
"^DD",101.41,101.412,117,21,0)
^^2^2^2950715^
"^DD",101.41,101.412,117,21,1,0)
This code should silently set the default value of a prompt when it is 
"^DD",101.41,101.412,117,21,2,0)
selected.
"^DD",101.41,101.412,117,"DT")
2950715
"^DD",101.41,101.41218,0)
DEFAULT WORD-PROCESSING TEXT SUB-FIELD^^.01^1
"^DD",101.41,101.41218,0,"DT")
2950407
"^DD",101.41,101.41218,0,"NM","DEFAULT WORD-PROCESSING TEXT")

"^DD",101.41,101.41218,0,"UP")
101.412
"^DD",101.41,101.41218,.01,0)
DEFAULT WORD-PROCESSING TEXT^W^^0;1^Q
"^DD",101.41,101.41218,.01,3)
Enter the default response for a word-processing type prompt.
"^DD",101.41,101.41218,.01,21,0)
^^2^2^2950407^
"^DD",101.41,101.41218,.01,21,1,0)
This field contains the text to be presented as the default for this prompt,
"^DD",101.41,101.41218,.01,21,2,0)
for word-processing type prompts.
"^DD",101.41,101.41218,.01,"DT")
2950407
"^DD",101.41,101.415,0)
CONTROLS SUB-FIELD^^14^14
"^DD",101.41,101.415,0,"DT")
2960202
"^DD",101.41,101.415,0,"IX","AC",101.415,3)

"^DD",101.41,101.415,0,"IX","B",101.415,.01)

"^DD",101.41,101.415,0,"NM","CONTROLS")

"^DD",101.41,101.415,0,"UP")
101.41
"^DD",101.41,101.415,.01,0)
LOGICAL NAME^MF^^0;1^K:$L(X)>8!($L(X)<1)!'(X?1.8U) X
"^DD",101.41,101.415,.01,1,0)
^.1
"^DD",101.41,101.415,.01,1,1,0)
101.415^B
"^DD",101.41,101.415,.01,1,1,1)
S ^ORD(101.41,DA(1),50,"B",$E(X,1,30),DA)=""
"^DD",101.41,101.415,.01,1,1,2)
K ^ORD(101.41,DA(1),50,"B",$E(X,1,30),DA)
"^DD",101.41,101.415,.01,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,.01,21,0)
^^1^1^2960202^
"^DD",101.41,101.415,.01,21,1,0)
This is the name by which controls can refer to each other.
"^DD",101.41,101.415,.01,"DT")
2960202
"^DD",101.41,101.415,2,0)
ITEM^P101.41'^ORD(101.41,^0;2^Q
"^DD",101.41,101.415,2,"DT")
2960202
"^DD",101.41,101.415,3,0)
CREATE SEQUENCE^NJ2,0^^0;3^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.415,3,1,0)
^.1
"^DD",101.41,101.415,3,1,1,0)
101.415^AC
"^DD",101.41,101.415,3,1,1,1)
S ^ORD(101.41,DA(1),50,"AC",$E(X,1,30),DA)=""
"^DD",101.41,101.415,3,1,1,2)
K ^ORD(101.41,DA(1),50,"AC",$E(X,1,30),DA)
"^DD",101.41,101.415,3,1,1,"%D",0)
^^2^2^2960202^
"^DD",101.41,101.415,3,1,1,"%D",1,0)
The 'AC' cross-reference puts in window controls in order by creation 
"^DD",101.41,101.415,3,1,1,"%D",2,0)
sequence.
"^DD",101.41,101.415,3,1,1,"DT")
2960202
"^DD",101.41,101.415,3,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",101.41,101.415,3,"DT")
2960202
"^DD",101.41,101.415,4,0)
CONTROL TYPE^S^0:Label;1:Button;2:Edit;3:Memo;4:ListBox;5:SimpleCombo;6:DropDownList;7:LongCombo;^0;4^Q
"^DD",101.41,101.415,4,"DT")
2960202
"^DD",101.41,101.415,5,0)
LABEL^F^^0;5^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.415,5,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.415,5,"DT")
2960202
"^DD",101.41,101.415,6,0)
BESIDE^F^^0;6^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,6,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,6,"DT")
2960202
"^DD",101.41,101.415,7,0)
BELOW^F^^0;7^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,7,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,7,"DT")
2960202
"^DD",101.41,101.415,8,0)
WIDTH^NJ6,4^^0;8^K:+X'=X!(X>1)!(X<0)!(X?.E1"."5N.N) X
"^DD",101.41,101.415,8,3)
Type a Number between 0 and 1, 4 Decimal Digits
"^DD",101.41,101.415,8,"DT")
2960202
"^DD",101.41,101.415,9,0)
LEFT CONTROL^F^^0;9^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,9,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,9,"DT")
2960202
"^DD",101.41,101.415,10,0)
RIGHT CONTROL^F^^0;10^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,10,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,10,"DT")
2960202
"^DD",101.41,101.415,11,0)
HEIGHT^NJ2,0^^0;11^K:+X'=X!(X>15)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.415,11,3)
Type a Number between 1 and 15, 0 Decimal Digits
"^DD",101.41,101.415,11,"DT")
2960202
"^DD",101.41,101.415,12,0)
UPPER CONTROL^F^^0;12^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,12,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,12,"DT")
2960202
"^DD",101.41,101.415,13,0)
LOWER CONTROL^F^^0;13^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,13,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,13,"DT")
2960202
"^DD",101.41,101.415,14,0)
TAB SEQUENCE^NJ2,0^^0;14^K:+X'=X!(X>89)!(X<0)!(X?.E1"."1N.N) X
"^DD",101.41,101.415,14,3)
Type a Number between 0 and 89, 0 Decimal Digits
"^DD",101.41,101.415,14,"DT")
2960202
"^DD",101.41,101.416,0)
RESPONSES SUB-FIELD^^2^5
"^DD",101.41,101.416,0,"DT")
2960717
"^DD",101.41,101.416,0,"IX","D",101.416,.02)

"^DD",101.41,101.416,0,"NM","RESPONSES")

"^DD",101.41,101.416,0,"UP")
101.41
"^DD",101.41,101.416,.01,0)
ITEM ENTRY^MNJ7,0^^0;1^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.416,.01,1,0)
^.1^^0
"^DD",101.41,101.416,.01,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",101.41,101.416,.01,21,0)
^^2^2^2971219^^^
"^DD",101.41,101.416,.01,21,1,0)
This is the internal entry number of the prompt in the Item multiple
"^DD",101.41,101.416,.01,21,2,0)
by which this response was obtained.
"^DD",101.41,101.416,.01,"DT")
2961118
"^DD",101.41,101.416,.02,0)
DIALOG^P101.41'^ORD(101.41,^0;2^Q
"^DD",101.41,101.416,.02,1,0)
^.1
"^DD",101.41,101.416,.02,1,1,0)
101.416^D
"^DD",101.41,101.416,.02,1,1,1)
S ^ORD(101.41,DA(1),6,"D",$E(X,1,30),DA)=""
"^DD",101.41,101.416,.02,1,1,2)
K ^ORD(101.41,DA(1),6,"D",$E(X,1,30),DA)
"^DD",101.41,101.416,.02,1,1,"DT")
2961118
"^DD",101.41,101.416,.02,3)
Select the dialog prompt from which this response was generated.
"^DD",101.41,101.416,.02,21,0)
^^2^2^2960717^
"^DD",101.41,101.416,.02,21,1,0)
This is a pointer to the dialog prompt, which is in the Order Dialog file
"^DD",101.41,101.416,.02,21,2,0)
as type prompt.
"^DD",101.41,101.416,.02,"DT")
2961118
"^DD",101.41,101.416,.03,0)
INSTANCE^NJ7,0^^0;3^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.416,.03,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",101.41,101.416,.03,21,0)
^^2^2^2960717^
"^DD",101.41,101.416,.03,21,1,0)
In the case of multiple answers for the same item, this identifies the
"^DD",101.41,101.416,.03,21,2,0)
individual instance.
"^DD",101.41,101.416,.03,"DT")
2960717
"^DD",101.41,101.416,1,0)
VALUE^FO^^1;1^K:$L(X)>245!($L(X)<1) X
"^DD",101.41,101.416,1,2)
S Y(0)=Y S Y=$$OUTPUT^ORCMEDT5(Y)
"^DD",101.41,101.416,1,2.1)
S Y=$$OUTPUT^ORCMEDT5(Y)
"^DD",101.41,101.416,1,3)
Answer must be 1-245 characters in length.
"^DD",101.41,101.416,1,21,0)
^^2^2^2971219^^
"^DD",101.41,101.416,1,21,1,0)
This contains the actual response, unless the value is a word processing
"^DD",101.41,101.416,1,21,2,0)
type.
"^DD",101.41,101.416,1,"DT")
2980717
"^DD",101.41,101.416,2,0)
TEXT^101.4162^^2;0
"^DD",101.41,101.416,2,21,0)
^^1^1^2971219^
"^DD",101.41,101.416,2,21,1,0)
This contains the actual response, for word-processing type prompts.
"^DD",101.41,101.416,2,"DT")
2960717
"^DD",101.41,101.4162,0)
TEXT SUB-FIELD^^.01^1
"^DD",101.41,101.4162,0,"DT")
2960717
"^DD",101.41,101.4162,0,"NM","TEXT")

"^DD",101.41,101.4162,0,"UP")
101.416
"^DD",101.41,101.4162,.01,0)
TEXT^WL^^0;1^Q
"^DD",101.41,101.4162,.01,21,0)
^^1^1^2960717^^
"^DD",101.41,101.4162,.01,21,1,0)
This contains responses to items that are a word processing type.
"^DD",101.41,101.4162,.01,"DT")
2960717
"^DIC",101.41,101.41,0)
ORDER DIALOG^101.41
"^DIC",101.41,101.41,0,"GL")
^ORD(101.41,
"^DIC",101.41,101.41,"%D",0)
^^2^2^2960819^^
"^DIC",101.41,101.41,"%D",1,0)
This file contains the information needed to define how to prompt for each
"^DIC",101.41,101.41,"%D",2,0)
order, what values are acceptable, etc.
"^DIC",101.41,"B","ORDER DIALOG",101.41)

**END**
**END**
