Released OR*3*397 SEQ #431
Extracted from mail message
**KIDS**:OR*3.0*397^

**INSTALL NAME**
OR*3.0*397
"BLD",9661,0)
OR*3.0*397^ORDER ENTRY/RESULTS REPORTING^0^3190903^y
"BLD",9661,4,0)
^9.64PA^101.41^1
"BLD",9661,4,101.41,0)
101.41
"BLD",9661,4,101.41,222)
n^n^^^y^^y^r^n
"BLD",9661,4,101.41,224)
I $$SENDDLG^ORY397($P(^(0),U))
"BLD",9661,4,"B",101.41,101.41)

"BLD",9661,6)
2^
"BLD",9661,6.3)
22
"BLD",9661,"ABPKG")
n
"BLD",9661,"INID")
^n
"BLD",9661,"INIT")
EN^ORY397A
"BLD",9661,"KRN",0)
^9.67PA^779.2^20
"BLD",9661,"KRN",.4,0)
.4
"BLD",9661,"KRN",.401,0)
.401
"BLD",9661,"KRN",.402,0)
.402
"BLD",9661,"KRN",.403,0)
.403
"BLD",9661,"KRN",.5,0)
.5
"BLD",9661,"KRN",.84,0)
.84
"BLD",9661,"KRN",3.6,0)
3.6
"BLD",9661,"KRN",3.8,0)
3.8
"BLD",9661,"KRN",9.2,0)
9.2
"BLD",9661,"KRN",9.8,0)
9.8
"BLD",9661,"KRN",9.8,"NM",0)
^9.68A^21^17
"BLD",9661,"KRN",9.8,"NM",2,0)
ORUPREF1^^0^B13019106
"BLD",9661,"KRN",9.8,"NM",4,0)
ORCMEDT4^^0^B106382562
"BLD",9661,"KRN",9.8,"NM",5,0)
ORCMEDT9^^0^B56544037
"BLD",9661,"KRN",9.8,"NM",6,0)
ORCSAVE^^0^B127708326
"BLD",9661,"KRN",9.8,"NM",9,0)
ORMPS1^^0^B74117658
"BLD",9661,"KRN",9.8,"NM",10,0)
ORUTL3^^0^B3158346
"BLD",9661,"KRN",9.8,"NM",11,0)
ORY397^^0^B90876
"BLD",9661,"KRN",9.8,"NM",12,0)
ORWDXM3^^0^B121166242
"BLD",9661,"KRN",9.8,"NM",13,0)
ORWDXA^^0^B119665285
"BLD",9661,"KRN",9.8,"NM",14,0)
ORUTL5^^0^B2631005
"BLD",9661,"KRN",9.8,"NM",15,0)
ORWDX^^0^B92501053
"BLD",9661,"KRN",9.8,"NM",16,0)
ORCACT01^^0^B89927371
"BLD",9661,"KRN",9.8,"NM",17,0)
ORWDPS32^^0^B78799489
"BLD",9661,"KRN",9.8,"NM",18,0)
ORSPUTIL^^0^B24172750
"BLD",9661,"KRN",9.8,"NM",19,0)
ORWDXM1^^0^B121528037
"BLD",9661,"KRN",9.8,"NM",20,0)
ORWDPS3^^0^B22042687
"BLD",9661,"KRN",9.8,"NM",21,0)
ORWDXR^^0^B60290017
"BLD",9661,"KRN",9.8,"NM","B","ORCACT01",16)

"BLD",9661,"KRN",9.8,"NM","B","ORCMEDT4",4)

"BLD",9661,"KRN",9.8,"NM","B","ORCMEDT9",5)

"BLD",9661,"KRN",9.8,"NM","B","ORCSAVE",6)

"BLD",9661,"KRN",9.8,"NM","B","ORMPS1",9)

"BLD",9661,"KRN",9.8,"NM","B","ORSPUTIL",18)

"BLD",9661,"KRN",9.8,"NM","B","ORUPREF1",2)

"BLD",9661,"KRN",9.8,"NM","B","ORUTL3",10)

"BLD",9661,"KRN",9.8,"NM","B","ORUTL5",14)

"BLD",9661,"KRN",9.8,"NM","B","ORWDPS3",20)

"BLD",9661,"KRN",9.8,"NM","B","ORWDPS32",17)

"BLD",9661,"KRN",9.8,"NM","B","ORWDX",15)

"BLD",9661,"KRN",9.8,"NM","B","ORWDXA",13)

"BLD",9661,"KRN",9.8,"NM","B","ORWDXM1",19)

"BLD",9661,"KRN",9.8,"NM","B","ORWDXM3",12)

"BLD",9661,"KRN",9.8,"NM","B","ORWDXR",21)

"BLD",9661,"KRN",9.8,"NM","B","ORY397",11)

"BLD",9661,"KRN",19,0)
19
"BLD",9661,"KRN",19,"NM",0)
^9.68A^4^2
"BLD",9661,"KRN",19,"NM",3,0)
OR SUPPLY QO CONVERSION^^0
"BLD",9661,"KRN",19,"NM",4,0)
OR SUPPLY UTIL MENU^^2
"BLD",9661,"KRN",19,"NM","B","OR SUPPLY QO CONVERSION",3)

"BLD",9661,"KRN",19,"NM","B","OR SUPPLY UTIL MENU",4)

"BLD",9661,"KRN",19.1,0)
19.1
"BLD",9661,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",9661,"KRN",101,0)
101
"BLD",9661,"KRN",101,"NM",0)
^9.68A^1^1
"BLD",9661,"KRN",101,"NM",1,0)
OR COMPLETE ORDER^^0
"BLD",9661,"KRN",101,"NM","B","OR COMPLETE ORDER",1)

"BLD",9661,"KRN",409.61,0)
409.61
"BLD",9661,"KRN",771,0)
771
"BLD",9661,"KRN",779.2,0)
779.2
"BLD",9661,"KRN",870,0)
870
"BLD",9661,"KRN",8989.51,0)
8989.51
"BLD",9661,"KRN",8989.52,0)
8989.52
"BLD",9661,"KRN",8994,0)
8994
"BLD",9661,"KRN","B",.4,.4)

"BLD",9661,"KRN","B",.401,.401)

"BLD",9661,"KRN","B",.402,.402)

"BLD",9661,"KRN","B",.403,.403)

"BLD",9661,"KRN","B",.5,.5)

"BLD",9661,"KRN","B",.84,.84)

"BLD",9661,"KRN","B",3.6,3.6)

"BLD",9661,"KRN","B",3.8,3.8)

"BLD",9661,"KRN","B",9.2,9.2)

"BLD",9661,"KRN","B",9.8,9.8)

"BLD",9661,"KRN","B",19,19)

"BLD",9661,"KRN","B",19.1,19.1)

"BLD",9661,"KRN","B",101,101)

"BLD",9661,"KRN","B",409.61,409.61)

"BLD",9661,"KRN","B",771,771)

"BLD",9661,"KRN","B",779.2,779.2)

"BLD",9661,"KRN","B",870,870)

"BLD",9661,"KRN","B",8989.51,8989.51)

"BLD",9661,"KRN","B",8989.52,8989.52)

"BLD",9661,"KRN","B",8994,8994)

"BLD",9661,"QUES",0)
^9.62^^
"BLD",9661,"REQB",0)
^9.611^14^6
"BLD",9661,"REQB",7,0)
OR*3.0*382^2
"BLD",9661,"REQB",9,0)
OR*3.0*111^2
"BLD",9661,"REQB",11,0)
OR*3.0*441^2
"BLD",9661,"REQB",12,0)
OR*3.0*490^2
"BLD",9661,"REQB",13,0)
OR*3.0*494^2
"BLD",9661,"REQB",14,0)
OR*3.0*409^2
"BLD",9661,"REQB","B","OR*3.0*111",9)

"BLD",9661,"REQB","B","OR*3.0*382",7)

"BLD",9661,"REQB","B","OR*3.0*409",14)

"BLD",9661,"REQB","B","OR*3.0*441",11)

"BLD",9661,"REQB","B","OR*3.0*490",12)

"BLD",9661,"REQB","B","OR*3.0*494",13)

"DATA",101.41,51,0)
GMRCOR CONSULT^Consult^^D^11^2^294^1^1
"DATA",101.41,51,3)
D GETSERV^ORCDGMRC
"DATA",101.41,51,3.1)
D GETSERV^ORCDGMRC
"DATA",101.41,51,4)
K ORSERV,ORPDX,GMRCNOPD,GMRCNOAT,GMRCREAF,^TMP("GMRCS",$J),^TMP("GMRCSLIST",$J)
"DATA",101.41,51,5)
^^^Consult^110
"DATA",101.41,51,6,0)
^101.416
"DATA",101.41,51,10,0)
^101.412IA^10^10
"DATA",101.41,51,10,1,0)
1^4^^Consult to Service/Specialty: ^^1^^^^S.CSLT
"DATA",101.41,51,10,1,1)
Select the service/specialty consultation you wish to request for this patient.
"DATA",101.41,51,10,1,2)
2^^^^Cons
"DATA",101.41,51,10,1,3)
I $G(ORTYPE)'="Q",'$D(OREDIT),'$G(OREWRITE)
"DATA",101.41,51,10,1,4)
I $$ACTIVE^ORDD43(Y),$D(^TMP("GMRCS",$J,+$P(^(0),U,2)))
"DATA",101.41,51,10,1,5)
I $G(ORESET)'=+Y D CKSERV^ORCDGMRC K GMRCREAF
"DATA",101.41,51,10,1,6)
D LISTSERV^ORCDGMRC(1)
"DATA",101.41,51,10,1,10)
N OI S OI=+$G(ORDIALOG(PROMPT,INST)),ORSERV=+$P($G(^ORD(101.43,OI,0)),U,2) D:ORSERV SERVMSG^ORCDGMRC
"DATA",101.41,51,10,1,"W")
cboService
"DATA",101.41,51,10,2,0)
2^15^^Reason for Request: ^^1
"DATA",101.41,51,10,2,1)
Enter a brief description of why this consult is being requested.
"DATA",101.41,51,10,2,3)
I $G(ORTYPE)="Z"!'$G(GMRCREAF)!($G(GMRCREAF)=1&'FIRST)
"DATA",101.41,51,10,2,7)
D REASON^ORCDGMRC
"DATA",101.41,51,10,2,9)
S:'$D(GMRCREAF) GMRCREAF=$$REAF^GMRCDRFR(+$G(ORSERV))
"DATA",101.41,51,10,2,"W")
memReason
"DATA",101.41,51,10,3,0)
3^10^^^^1
"DATA",101.41,51,10,3,1)
Enter if the service rendered will be on an inpatient or outpatient basis.
"DATA",101.41,51,10,3,5)
I $G(ORESET)'="",ORESET'=$P(Y,U) D CHANGED^ORCDGMRC("CAT")
"DATA",101.41,51,10,3,6)
D SETLIST^ORCD
"DATA",101.41,51,10,3,7)
S:$G(ORTYPE)'="Z" Y=$S($$INPT^ORCD:"I",1:"O")
"DATA",101.41,51,10,3,9)
S ORDIALOG(PROMPT,0)=$P(ORDIALOG(PROMPT,0),";",1,2) ;I or O only
"DATA",101.41,51,10,3,"W")
refCategory
"DATA",101.41,51,10,4,0)
4^7^^^^1^^^^S.GMRCT
"DATA",101.41,51,10,4,1)
Select the urgency indicating how quickly results from this consult are needed.
"DATA",101.41,51,10,4,2)
4^^ROUTINE
"DATA",101.41,51,10,4,7)
S Y=9
"DATA",101.41,51,10,4,9)
D URGENCY^ORCDGMRC("C")
"DATA",101.41,51,10,4,"W")
cboUrgency
"DATA",101.41,51,10,5,0)
5^140^^^^1
"DATA",101.41,51,10,5,1)
Select the preferred place to see the patient for this consult.
"DATA",101.41,51,10,5,2)
3
"DATA",101.41,51,10,5,6)
D LIST^ORCD
"DATA",101.41,51,10,5,7)
S:$G(ORTYPE)'="Z" Y=$S($$VAL^ORCD("CATEGORY")="I":"B",1:"C")
"DATA",101.41,51,10,5,9)
D PLACE^ORCDGMRC
"DATA",101.41,51,10,5,"W")
cboPlace
"DATA",101.41,51,10,6,0)
6^17^^Attention: 
"DATA",101.41,51,10,6,1)
Enter the service/specialty user who is to be notified of this request.
"DATA",101.41,51,10,6,3)
I '$G(GMRCNOAT)
"DATA",101.41,51,10,6,4)
N ORT S ORT=$P(^(0),U,11) I 'ORT!(ORT>DT)
"DATA",101.41,51,10,6,"W")
txtAttn
"DATA",101.41,51,10,7,0)
7^20^^Provisional Diagnosis: ^^
"DATA",101.41,51,10,7,1)
Enter a preliminary diagnosis relating to this request, up to 240 characters.
"DATA",101.41,51,10,7,3)
I '$G(GMRCNOPD)
"DATA",101.41,51,10,7,5)
D LEX^ORCDGMRC
"DATA",101.41,51,10,7,9)
D ENPDX^ORCDGMRC
"DATA",101.41,51,10,7,"W")
txtProvDiag
"DATA",101.41,51,10,8,0)
1.1^178^^Consult Type: 
"DATA",101.41,51,10,8,1)
Enter the type of consult you wish to have done at this service
"DATA",101.41,51,10,8,2)
1
"DATA",101.41,51,10,8,3)
I $G(ORTYPE)="Z"!$D(ORDIALOG(PROMPT,INST)) ;populated by QO only
"DATA",101.41,51,10,9,0)
7.1^173^^^^^^^^^20
"DATA",101.41,51,10,9,3)
I 0 ;stuffed in via Prov Dx
"DATA",101.41,51,10,10,0)
4.5^15820^^Clinically Indicated Date:^^1^^^W
"DATA",101.41,51,10,10,1)
Enter the clinically indicated date for this consult to be performed.
"DATA",101.41,51,10,10,3)
Q:'$G(ORSERV)  I $G(^GMR(123.5,ORSERV,"INT"))'=1
"DATA",101.41,51,10,10,5)
Q:$G(ORTYPE)'="Z"  I $G(ORDIALOG(PROMPT,INST))'["T" K DONE W $C(7),!,"Response must be relative date (e.g. TODAY, T+7D, T+3M)"
"DATA",101.41,51,10,10,7)
Q:'$G(ORSERV)  S:$G(^GMR(123.5,ORSERV,"INT"))'=1 Y=$$GET^XPAR("DIV^SYS^PKG","ORCDGMRC CLIN IND DATE DEFAULT",1,"Q")
"DATA",101.41,51,10,10,10)
N X,Y,%DT S X=$G(ORDIALOG(PROMPT,INST)),%DT="X" I $L(X) D ^%DT S:Y>0 ORDATE=$P(Y,".")
"DATA",101.41,51,10,10,"W")
calClinicallyIndicated
"DATA",101.41,51,10,10,"W7")
S Y=$$GET^XPAR("DIV^SYS^PKG","ORCDGMRC CLIN IND DATE DEFAULT",1,"Q")
"DATA",101.41,51,99)
65259,29515
"DATA",101.41,52,0)
GMRCOR REQUEST^Procedure^^D^43^2^294^1^2
"DATA",101.41,52,4)
K ORSERV,ORPDX,GMRCNOAT,GMRCNOPD,GMRCREAF,ORPROC
"DATA",101.41,52,5)
^^^Procedure^112
"DATA",101.41,52,10,0)
^101.412IA^10^10
"DATA",101.41,52,10,1,0)
1^4^^Procedure: ^^1^^^^S.PROC
"DATA",101.41,52,10,1,1)
Select the procedure you wish to request for this patient.
"DATA",101.41,52,10,1,2)
1
"DATA",101.41,52,10,1,4)
I $$ACTIVE^ORDD43(Y)
"DATA",101.41,52,10,1,5)
I $G(ORESET)'=$P(Y,U) D CKPROCSV^ORCDGMRC Q:'$G(DONE)  D:$G(ORESET) CHANGED^ORCDGMRC("OI")
"DATA",101.41,52,10,1,6)
N IDX,SCR S IDX=$G(ORDIALOG(PROMPT,"D")),SCR=$G(ORDIALOG(PROMPT,"S")) D XHELP^ORDD43(IDX,SCR)
"DATA",101.41,52,10,1,10)
N OI S OI=+$G(ORDIALOG(PROMPT,INST)) I $P($G(^ORD(101.43,OI,0)),"^",2)["99PRC" S ORPROC=$P(^ORD(101.43,OI,0),"^",2) D SERVMSG^ORCDGMRC
"DATA",101.41,52,10,2,0)
2^15^^Reason for Request: ^^1
"DATA",101.41,52,10,2,1)
Enter a brief description of why this procedure is being requested.
"DATA",101.41,52,10,2,3)
I $G(ORTYPE)="Z"!'$G(GMRCREAF)!($G(GMRCREAF)=1&'FIRST)
"DATA",101.41,52,10,2,7)
D REASON^ORCDGMRC
"DATA",101.41,52,10,2,9)
S:'$D(GMRCREAF)&('$G(ORPROC)) GMRCREAF=$$REAF^GMRCDRFR($G(ORPROC))
"DATA",101.41,52,10,3,0)
3^10^^^^1
"DATA",101.41,52,10,3,1)
Enter if the service rendered will be on an inpatient or outpatient basis.
"DATA",101.41,52,10,3,5)
I $G(ORESET)'="",ORESET'=$P(Y,U) D CHANGED^ORCDGMRC("CAT")
"DATA",101.41,52,10,3,6)
D SETLIST^ORCD
"DATA",101.41,52,10,3,7)
S:$G(ORTYPE)'="Z" Y=$S($$INPT^ORCD:"I",1:"O")
"DATA",101.41,52,10,3,9)
S ORDIALOG(PROMPT,0)=$P(ORDIALOG(PROMPT,0),";",1,2) ;I or O only
"DATA",101.41,52,10,4,0)
4^7^^^^1^^^^S.GMRCR
"DATA",101.41,52,10,4,1)
Select the urgency indicating how quickly results from this procedure are needed.
"DATA",101.41,52,10,4,2)
4^^ROUTINE
"DATA",101.41,52,10,4,7)
S Y=9
"DATA",101.41,52,10,4,9)
D URGENCY^ORCDGMRC("R")
"DATA",101.41,52,10,5,0)
5^140^^^^1
"DATA",101.41,52,10,5,1)
Select the preferred place to see the patient for this consult.
"DATA",101.41,52,10,5,2)
3
"DATA",101.41,52,10,5,6)
D LIST^ORCD
"DATA",101.41,52,10,5,7)
S:$G(ORTYPE)'="Z" Y=$S($$VAL^ORCD("CATEGORY")="I":"B",1:"C")
"DATA",101.41,52,10,5,9)
D PLACE^ORCDGMRC
"DATA",101.41,52,10,6,0)
6^17^^Attention: 
"DATA",101.41,52,10,6,1)
Enter the service/specialty user who is to be notified of this request.
"DATA",101.41,52,10,6,3)
I '$G(GMRCNOAT)
"DATA",101.41,52,10,6,4)
N ORT S ORT=$P(^(0),U,11) I 'ORT!(ORT>DT)
"DATA",101.41,52,10,7,0)
7^20^^Provisional Diagnosis: 
"DATA",101.41,52,10,7,1)
Enter a preliminary diagnosis relating to this request, up to 240 characters.
"DATA",101.41,52,10,7,3)
I '$G(GMRCNOPD)
"DATA",101.41,52,10,7,5)
D LEX^ORCDGMRC
"DATA",101.41,52,10,7,9)
D ENPDX^ORCDGMRC
"DATA",101.41,52,10,8,0)
1.1^166^^^^1
"DATA",101.41,52,10,8,1)
Enter the service that will be requested to perform this procedure
"DATA",101.41,52,10,8,2)
2^^^^Proc
"DATA",101.41,52,10,8,3)
I $G(ORDIALOG(PROMPT,"LIST"))>0
"DATA",101.41,52,10,8,6)
D LIST^ORCD
"DATA",101.41,52,10,8,7)
S:+$G(ORDIALOG(PROMPT,"LIST"))=1 Y=+$G(ORDIALOG(PROMPT,"LIST",1))
"DATA",101.41,52,10,8,9)
D PROCSVC^ORCDGMRC
"DATA",101.41,52,10,9,0)
7.1^173^^^^^^^^^20
"DATA",101.41,52,10,9,3)
I 0 ;stuffed in via Prov Dx
"DATA",101.41,52,10,10,0)
4.5^15820^^Clinically Indicated Date:^^1^^^W
"DATA",101.41,52,10,10,1)
Enter the clinically indicated date for this procedure to be performed.
"DATA",101.41,52,10,10,5)
Q:$G(ORTYPE)'="Z"  I $G(ORDIALOG(PROMPT,INST))'["T" K DONE W $C(7),!,"Response must be relative date (e.g. TODAY, T+7D, T+3M)"
"DATA",101.41,52,10,10,7)
S Y=$$GET^XPAR("DIV^SYS^PKG","ORCDGMRC CLIN IND DATE DEFAULT",1,"Q")
"DATA",101.41,52,10,10,10)
N X,Y,%DT S X=$G(ORDIALOG(PROMPT,INST)),%DT="X" I $L(X) D ^%DT S:Y>0 ORDATE=$P(Y,".")
"DATA",101.41,52,10,10,"W")
calClinicallyIndicated
"DATA",101.41,52,10,10,"W7")
S Y=$$GET^XPAR("DIV^SYS^PKG","ORCDGMRC CLIN IND DATE DEFAULT",1,"Q")
"DATA",101.41,52,99)
65259,29515
"FIA",101.41)
ORDER DIALOG
"FIA",101.41,0)
^ORD(101.41,
"FIA",101.41,0,0)
101.41I
"FIA",101.41,0,1)
n^n^f^^y^^y^r^n
"FIA",101.41,0,10)

"FIA",101.41,0,11)
I $$SENDDLG^ORY397($P(^(0),U))
"FIA",101.41,0,"RLRO")

"FIA",101.41,0,"VR")
3.0^OR
"FIA",101.41,101.41)
0
"FIA",101.41,101.411)
0
"FIA",101.41,101.412)
0
"FIA",101.41,101.41218)
0
"FIA",101.41,101.415)
0
"FIA",101.41,101.416)
0
"FIA",101.41,101.4162)
0
"FRV1",101.41,"51,0",5)
CONSULTS
"FRV1",101.41,"51,0",5,"F")
;ORD(100.98,
"FRV1",101.41,"51,0",7)
CONSULT/REQUEST TRACKING
"FRV1",101.41,"51,0",7,"F")
;DIC(9.4,
"FRV1",101.41,"51,10,1,0",2)
OR GTX ORDERABLE ITEM
"FRV1",101.41,"51,10,1,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,10,0",2)
OR GTX CLINICALLY INDICATED DATE
"FRV1",101.41,"51,10,10,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,2,0",2)
OR GTX WORD PROCESSING 1
"FRV1",101.41,"51,10,2,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,3,0",2)
OR GTX CATEGORY
"FRV1",101.41,"51,10,3,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,4,0",2)
OR GTX URGENCY
"FRV1",101.41,"51,10,4,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,5,0",2)
OR GTX PLACE OF CONSULTATION
"FRV1",101.41,"51,10,5,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,6,0",2)
OR GTX PROVIDER
"FRV1",101.41,"51,10,6,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,7,0",2)
OR GTX FREE TEXT
"FRV1",101.41,"51,10,7,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,8,0",2)
OR GTX FREE TEXT OI
"FRV1",101.41,"51,10,8,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,9,0",2)
OR GTX CODE
"FRV1",101.41,"51,10,9,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,9,0",11)
OR GTX FREE TEXT
"FRV1",101.41,"51,10,9,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"52,0",5)
PROCEDURES
"FRV1",101.41,"52,0",5,"F")
;ORD(100.98,
"FRV1",101.41,"52,0",7)
CONSULT/REQUEST TRACKING
"FRV1",101.41,"52,0",7,"F")
;DIC(9.4,
"FRV1",101.41,"52,10,1,0",2)
OR GTX ORDERABLE ITEM
"FRV1",101.41,"52,10,1,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,10,0",2)
OR GTX CLINICALLY INDICATED DATE
"FRV1",101.41,"52,10,10,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,2,0",2)
OR GTX WORD PROCESSING 1
"FRV1",101.41,"52,10,2,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,3,0",2)
OR GTX CATEGORY
"FRV1",101.41,"52,10,3,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,4,0",2)
OR GTX URGENCY
"FRV1",101.41,"52,10,4,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,5,0",2)
OR GTX PLACE OF CONSULTATION
"FRV1",101.41,"52,10,5,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,6,0",2)
OR GTX PROVIDER
"FRV1",101.41,"52,10,6,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,7,0",2)
OR GTX FREE TEXT
"FRV1",101.41,"52,10,7,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,8,0",2)
OR GTX REQUEST SERVICE
"FRV1",101.41,"52,10,8,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,9,0",2)
OR GTX CODE
"FRV1",101.41,"52,10,9,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,9,0",11)
OR GTX FREE TEXT
"FRV1",101.41,"52,10,9,0",11,"F")
;ORD(101.41,
"INIT")
EN^ORY397A
"IX",101.41,101.41,"B",0)
101.41^B^Regular B index using full field length^R^^F^IR^I^101.41^^^^^LS
"IX",101.41,101.41,"B",1)
S ^ORD(101.41,"B",$E(X,1,63),DA)=""
"IX",101.41,101.41,"B",2)
K ^ORD(101.41,"B",$E(X,1,63),DA)
"IX",101.41,101.41,"B",2.5)
K ^ORD(101.41,"B")
"IX",101.41,101.41,"B",11.1,0)
^.114IA^1^1
"IX",101.41,101.41,"B",11.1,1,0)
1^F^101.41^.01^63^1^F
"KRN",19,14387,-1)
2^4
"KRN",19,14387,0)
OR SUPPLY UTIL MENU^SUPPLY COVERSION UTILITY MENU^^M^10000000191
"KRN",19,14387,10,0)
^19.01IP^3^3
"KRN",19,14387,10,3,0)
14582^QO
"KRN",19,14387,10,3,"^")
OR SUPPLY QO CONVERSION
"KRN",19,14387,"U")
SUPPLY COVERSION UTILITY MENU
"KRN",19,14582,-1)
0^3
"KRN",19,14582,0)
OR SUPPLY QO CONVERSION^CONVERT SUPPLY QUICK ORDERS^^R^^^^^^^^
"KRN",19,14582,1,0)
^^3^3^3170828^
"KRN",19,14582,1,1,0)
Use this option to convert all Outpatient Medication quick orders that
"KRN",19,14582,1,2,0)
were built for orderable items that are considered supply items, to use
"KRN",19,14582,1,3,0)
the PSO SUPPLY dialog.
"KRN",19,14582,25)
SUPPLYQO^ORSPUTIL
"KRN",19,14582,"U")
CONVERT SUPPLY QUICK ORDERS
"KRN",101,6434,-1)
0^1
"KRN",101,6434,0)
OR COMPLETE ORDER^Complete^^X^^^^^^^^
"KRN",101,6434,1,0)
^101.06^5^5^3180914^^^^
"KRN",101,6434,1,1,0)
The purpose of this protocol is to create a way for packages (including 
"KRN",101,6434,1,2,0)
COTS or Class 3) to receive notifications when an order is set to a 
"KRN",101,6434,1,3,0)
complete status in CPRS.
"KRN",101,6434,1,4,0)
 
"KRN",101,6434,1,5,0)
The array ORINFO will be passed to the protocol. 
"KRN",101,6434,10,0)
^101.01PA^1^1
"KRN",101,6434,99)
64905,37991
"MBREQ")
0
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PGL",101.41,0,5,5)
DISPLAY GROUP^P100.98'^ORD(100.98,^0;5^Q
"PGL",101.41,0,7,7)
PACKAGE^P9.4'^DIC(9.4,^0;7^Q
"PGL",101.412,0,2,2)
ITEM^P101.41'X^ORD(101.41,^0;2^D TREE^ORDD41
"PGL",101.412,0,11,1)
PARENT^P101.41'^ORD(101.41,^0;11^Q
"PGL",101.415,0,2,2)
ITEM^P101.41'^ORD(101.41,^0;2^Q
"PGL",101.416,0,2,.02)
DIALOG^P101.41'^ORD(101.41,^0;2^Q
"PKG",170,-1)
1^1
"PKG",170,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",170,22,0)
^9.49I^1^1
"PKG",170,22,1,0)
3.0^2971217^2980917^11712
"PKG",170,22,1,"PAH",1,0)
397^3190903^10000000200
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
18
"RTN","ORCACT01")
0^16^B89927371^B77384512
"RTN","ORCACT01",1,0)
ORCACT01 ;SLC/MKB-Validate order actions cont ;Aug 24, 2018@08:17
"RTN","ORCACT01",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**94,116,134,141,163,187,190,213,243,306,374,350,397**;Dec 17, 1997;Build 22
"RTN","ORCACT01",3,0)
 ;
"RTN","ORCACT01",4,0)
 ;
"RTN","ORCACT01",5,0)
 ;
"RTN","ORCACT01",6,0)
ES ; -- sign [on chart]
"RTN","ORCACT01",7,0)
 I ORDSTS=11,VER<3,PKG'="OR" S ERROR="This order cannot be released and must be discontinued!" Q
"RTN","ORCACT01",8,0)
 N X I ACTSTS=11!(ACTSTS=10) D  Q:$L($G(ERROR))
"RTN","ORCACT01",9,0)
 . I $P(ORA0,U,2)="DC",$$DONE^ORCACT0 D CANCEL^ORCSEND(+IFN),UNOTIF^ORCSIGN S OREBUILD=1 Q
"RTN","ORCACT01",10,0)
 . S X=$$DISABLED^ORCACT0 I X S ERROR=$P(X,U,2) Q
"RTN","ORCACT01",11,0)
 I ACTION="OC",$G(DG)="NV RX" S:MEDPARM<2 ERROR="You are not authorized to release non-VA med orders!" Q
"RTN","ORCACT01",12,0)
 S X=$P(ORA0,U,4) I X=3 S:ACTSTS'=11&(ACTSTS'=10) ERROR="This order does not require a signature!" Q
"RTN","ORCACT01",13,0)
 I X'=2 S ERROR="This order has been signed!" Q
"RTN","ORCACT01",14,0)
 N ORCS D CSVALUE^ORDEA(.ORCS,+IFN)
"RTN","ORCACT01",15,0)
 I DG="O RX",ACTION="RS",$G(NATR)="I",ORCS=1 S ERROR="Controlled Substance outpatient meds may not be released without a clinician's signature!" Q
"RTN","ORCACT01",16,0)
 I DG="O RX",ACTION'="ES",ACTION'="DS",$G(NATR)'="I" S ERROR="Outpatient meds may not be released without a clinician's signature!" Q
"RTN","ORCACT01",17,0)
 I (ACTION="ES"!(ACTION="DS")),$D(^XUSEC("ORELSE",DUZ)),$P(OR0,U,16)'<2 S ERROR="You are not privileged to sign this order!" Q
"RTN","ORCACT01",18,0)
 ;
"RTN","ORCACT01",19,0)
 I DG="SPLY" D  Q:$D(ERROR)
"RTN","ORCACT01",20,0)
 . N ORALLOWED,ORAUTHMEDS,ORHASSUPKEY,ORX
"RTN","ORCACT01",21,0)
 . ; User must have ORSUPPLY or Auth to Write Meds to release supply items
"RTN","ORCACT01",22,0)
 . S ORHASSUPKEY=$D(^XUSEC("ORSUPPLY",DUZ))
"RTN","ORCACT01",23,0)
 . S ORAUTHMEDS=1
"RTN","ORCACT01",24,0)
 . S ORX=$G(^VA(200,DUZ,"PS"))
"RTN","ORCACT01",25,0)
 . I '$P(ORX,U)!($P(ORX,U,4)&(DT>$P(ORX,U,4))) S ORAUTHMEDS=0
"RTN","ORCACT01",26,0)
 . I 'ORHASSUPKEY,'ORAUTHMEDS D  Q
"RTN","ORCACT01",27,0)
 . . S ERROR="You are not authorized to release supply orders."
"RTN","ORCACT01",28,0)
 . ; only allow release by policy, signed on chart, or ES
"RTN","ORCACT01",29,0)
 . ; release via verbal or telephone is not allowed
"RTN","ORCACT01",30,0)
 . S ORALLOWED=0
"RTN","ORCACT01",31,0)
 . I ACTION?1(1"ES",1"DS",1"OC") S ORALLOWED=1
"RTN","ORCACT01",32,0)
 . I ACTION="RS",$G(NATR)?1(1"I",1"W") S ORALLOWED=1
"RTN","ORCACT01",33,0)
 . I 'ORALLOWED S ERROR="Supplies may not be released with this action."
"RTN","ORCACT01",34,0)
 ;
"RTN","ORCACT01",35,0)
 I ACTION="OC" S:MEDPARM<2 ERROR="You are not authorized to release med orders!" Q
"RTN","ORCACT01",36,0)
 I ACTION="RS" D  Q:$D(ERROR)  Q:$G(NATR)'="I"
"RTN","ORCACT01",37,0)
 . Q:ACTSTS=11  Q:ACTSTS=10  ;unreleased - ok
"RTN","ORCACT01",38,0)
 . S ERROR="This order has already been released!"
"RTN","ORCACT01",39,0)
ES1 I PKG="PS" D  ;authorized to write meds?
"RTN","ORCACT01",40,0)
 . N TYPE,OI,PSOI,DEAFLG,PKI,IVERROR,ORDGNM
"RTN","ORCACT01",41,0)
 . S X=$G(^VA(200,DUZ,"PS"))
"RTN","ORCACT01",42,0)
 . I DG'="SPLY",'$P(X,U) S ERROR="You are not authorized to sign med orders!" Q
"RTN","ORCACT01",43,0)
 . I DG'="SPLY",$P(X,U,4),$$NOW^XLFDT>$P(X,U,4) S ERROR="You are no longer authorized to sign med orders!" Q
"RTN","ORCACT01",44,0)
 . ;Q:DG="IV RX"  Q:$P(ORA0,U,2)="DC"  ;don't need to ck DEA#
"RTN","ORCACT01",45,0)
 . Q:$P(ORA0,U,2)="DC"
"RTN","ORCACT01",46,0)
 . S ORDGNM=$$GET1^DIQ(100,+IFN_",",2)
"RTN","ORCACT01",47,0)
 . I ORDGNM["FLUID OE" D  Q
"RTN","ORCACT01",48,0)
 . .S FAIL=$$IVDEACHK(+IFN) I FAIL'=0 S ERROR=FAIL
"RTN","ORCACT01",49,0)
 . S OI=+$$VALUE^ORX8(+IFN,"ORDERABLE")
"RTN","ORCACT01",50,0)
 . S PSOI=+$P($G(^ORD(101.43,OI,0)),U,2) Q:PSOI'>0
"RTN","ORCACT01",51,0)
 . S TYPE=$S($P(DG," ")="O":"O",1:"I"),DEAFLG=$P($$OIDEA^PSSOPKI(PSOI,TYPE),";",2)
"RTN","ORCACT01",52,0)
 . S DETFLAG=$$OIDETOX^PSSOPKI(PSOI,TYPE)
"RTN","ORCACT01",53,0)
 . S DETPRO=$$DETOX^XUSER(+$G(DUZ))
"RTN","ORCACT01",54,0)
 . I DETFLAG,DETPRO="" S ERROR=3 Q
"RTN","ORCACT01",55,0)
 . I DETFLAG,DETPRO>0 S Y=DETPRO X ^DD("DD") S ERROR="5^"_Y Q
"RTN","ORCACT01",56,0)
 . I (DEAFLG>0!($$ISCLOZ^ORALWORD(OI))) D  I $G(ERROR)]"" Q
"RTN","ORCACT01",57,0)
 .. N RET
"RTN","ORCACT01",58,0)
 .. I $$ISCLOZ^ORALWORD(OI) D  Q
"RTN","ORCACT01",59,0)
 ... S RET=$$DEA^XUSER(,DUZ) I RET="" S ERROR=1
"RTN","ORCACT01",60,0)
 .. S RET=$$SDEA^XUSER(,DUZ,DEAFLG)
"RTN","ORCACT01",61,0)
 .. I RET=1 S ERROR=1 Q
"RTN","ORCACT01",62,0)
 .. I RET=2 S ERROR="2^"_$$UP^XLFSTR(DEAFLG) Q
"RTN","ORCACT01",63,0)
 .. I RET?1"4".E S ERROR=RET Q
"RTN","ORCACT01",64,0)
 .. I RET?1N.E S ERROR=RET
"RTN","ORCACT01",65,0)
 . D PKISITE^ORWOR(.PKI)
"RTN","ORCACT01",66,0)
 . I $G(PKI),ACTION="RS",DEAFLG=1 S ERROR="This order cannot be released without a Digital Signature" Q
"RTN","ORCACT01",67,0)
 Q
"RTN","ORCACT01",68,0)
 ;
"RTN","ORCACT01",69,0)
IVDEACHK(IFN) ; -- Returns value of prompt by ID
"RTN","ORCACT01",70,0)
 I '$G(IFN)!('$D(^OR(100,+$G(IFN),0))) Q ""
"RTN","ORCACT01",71,0)
 N I,DIAL,DIALTYP,FAIL,PATCLASS,RESULT,Y
"RTN","ORCACT01",72,0)
 S PATCLASS=$P(^OR(100,+IFN,0),U,12)
"RTN","ORCACT01",73,0)
 S RESULT=0
"RTN","ORCACT01",74,0)
 ;if ORNP is not set then assume this is called from VistA not CPRS
"RTN","ORCACT01",75,0)
 I $G(ORNP)="" S ORNP=DUZ
"RTN","ORCACT01",76,0)
 S I=0,Y="" S:'$G(INST) INST=1
"RTN","ORCACT01",77,0)
 F  S I=$O(^OR(100,+IFN,4.5,"ID","ORDERABLE",I)) Q:I'>0!(RESULT=1)  D
"RTN","ORCACT01",78,0)
 .S Y=$G(^OR(100,+IFN,4.5,I,1)) Q:Y'>0
"RTN","ORCACT01",79,0)
 .;S PSOI=+$P($G(^ORD(101.43,Y,0)),U,2) Q:PSOI'>0
"RTN","ORCACT01",80,0)
 .I PATCLASS="I" D  Q
"RTN","ORCACT01",81,0)
 ..D FAILDEA^ORWDPS1(.FAIL,Y,ORNP,"I") I FAIL'=0 S RESULT=FAIL
"RTN","ORCACT01",82,0)
 .S DIAL=+$P(^OR(100,+IFN,4.5,I,0),U,2)
"RTN","ORCACT01",83,0)
 .S DIALTYP=$S($P(^ORD(101.41,DIAL,0),U)["ADDITIVE":"A",1:"S")
"RTN","ORCACT01",84,0)
 .D FDEA1^ORWDPS1(.FAIL,Y,DIALTYP,ORNP)
"RTN","ORCACT01",85,0)
 .I FAIL'=0 S RESULT=FAIL
"RTN","ORCACT01",86,0)
 .;I $$OIDEA^PSSUTLA1(PSOI,"I")>0 S RESULT=1 Q
"RTN","ORCACT01",87,0)
 Q RESULT
"RTN","ORCACT01",88,0)
 ;
"RTN","ORCACT01",89,0)
XFR ; -- transfer to inpt/outpt [IFN=order to be transferred]
"RTN","ORCACT01",90,0)
 N OI,PS I DG="TPN" S ERROR="TPN orders may not be copied!" Q
"RTN","ORCACT01",91,0)
 I $$INACTIVE^ORCACT03 S ERROR="Orders for inactive orderables may not be transferred; please enter a new order!" Q
"RTN","ORCACT01",92,0)
 S OI=+$O(^OR(100,+IFN,.1,"B",0)),ORPS=$G(^ORD(101.43,OI,"PS"))
"RTN","ORCACT01",93,0)
 I DG="UD RX",'$P(ORPS,U,2) S ERROR="This drug may not be ordered for an outpatient!" Q
"RTN","ORCACT01",94,0)
 I DG="O RX" D  Q:$L($G(ERROR))
"RTN","ORCACT01",95,0)
 . I '$P(ORPS,U) S ERROR="This drug may not be ordered for an inpatient!" Q
"RTN","ORCACT01",96,0)
 . D:$O(^OR(100,+IFN,4.5,"ID","MISC",0)) DOSES^ORCACT02(+IFN)
"RTN","ORCACT01",97,0)
 Q
"RTN","ORCACT01",98,0)
 ;
"RTN","ORCACT01",99,0)
RW ; -- rewrite/copy
"RTN","ORCACT01",100,0)
 N ORISCL D ISCLORD^ORUTL(.ORISCL,+IFN)
"RTN","ORCACT01",101,0)
 I ORISCL S ERROR="Cannot copy Clinic Medication or Clinic Infusion orders!"
"RTN","ORCACT01",102,0)
 I ACTSTS=12 S ERROR="Orders that have been dc'd due to editing may not be copied!" Q
"RTN","ORCACT01",103,0)
 I DG="NV RX" S ERROR="Non-VA Med orders cannot be copied!" Q
"RTN","ORCACT01",104,0)
 I DG="TPN" S ERROR="TPN orders may not be rewritten!" Q
"RTN","ORCACT01",105,0)
 I DG="UD RX",$$NTBG^ORCACT03(+IFN) S ERROR="This order has been marked 'Not to be Given' and may not be rewritten!" Q
"RTN","ORCACT01",106,0)
 I $$INACTIVE^ORCACT03 S ERROR="Orders for inactive orderables may not be copied; please enter a new order!" Q
"RTN","ORCACT01",107,0)
 I PKG="PS",'$$MEDOK^ORCACT03 S ERROR="This drug may not be ordered!" Q
"RTN","ORCACT01",108,0)
 I DG="O RX",$O(^OR(100,+IFN,4.5,"ID","MISC",0)) D DOSES^ORCACT02(+IFN) ;old form
"RTN","ORCACT01",109,0)
 Q
"RTN","ORCACT01",110,0)
 ;
"RTN","ORCACT01",111,0)
RN ; -- renew
"RTN","ORCACT01",112,0)
 I PKG'="PS",PKG'="OR" S ERROR="This order may not be renewed!" Q
"RTN","ORCACT01",113,0)
 I (ORDSTS=11)!(ORDSTS=10) S ERROR="This order has not been released to the service." Q
"RTN","ORCACT01",114,0)
 I ACTSTS=12 S ERROR="Orders that have been dc'd due to editing may not be renewed!" Q
"RTN","ORCACT01",115,0)
 I $P(OR3,U,6) S ERROR="This order has already been "_$S($P($G(^OR(100,+$P(OR3,U,6),3)),U,11)=1:"changed!",1:"renewed!") Q
"RTN","ORCACT01",116,0)
 I PKG="OR" D  Q  ;Generic orders
"RTN","ORCACT01",117,0)
 . I $$INACTIVE^ORCACT03 S ERROR="Orders for inactive orderables may not be renewed!" Q
"RTN","ORCACT01",118,0)
 . I DG="ADT" S ERROR="M.A.S. orders may not be renewed!" Q
"RTN","ORCACT01",119,0)
 . I "^1^2^6^7^"[(U_ORDSTS_U) Q  ;ok
"RTN","ORCACT01",120,0)
 . S ERROR="This order may not be renewed!"
"RTN","ORCACT01",121,0)
 I (PKG="PS"),$$INACTIVE^ORCACT03 S ERROR="Orders for inactive orderables may not be renewed!" Q
"RTN","ORCACT01",122,0)
 I '$$MEDOK^ORCACT03 S ERROR="This drug may not be ordered!" Q
"RTN","ORCACT01",123,0)
RN1 N PSIFN S PSIFN=$G(^OR(100,+IFN,4))
"RTN","ORCACT01",124,0)
 I PSIFN<1,'$O(^OR(100,+IFN,2,0)) S ERROR="Missing or invalid order number!" Q
"RTN","ORCACT01",125,0)
 I DG="O RX"!(DG="SPLY") D  Q  ;Outpt Meds
"RTN","ORCACT01",126,0)
 . N ORZ,ORD S ORZ=$L($T(RENEW^PSORENW),",")
"RTN","ORCACT01",127,0)
 . I ORZ>1 S ORD=+$$VALUE^ORX8(+IFN,"DRUG"),X=$$RENEW^PSORENW(PSIFN,ORD)
"RTN","ORCACT01",128,0)
 . S:ORZ'>1 X=$$RENEW^PSORENW(PSIFN) I X<1 S ERROR=$P(X,U,2) Q
"RTN","ORCACT01",129,0)
 . S X=+$P(X,U,2) D:X RESET^ORCACT03(+IFN,X)
"RTN","ORCACT01",130,0)
 . I $O(^OR(100,+IFN,4.5,"ID","MISC",0)) D DOSES^ORCACT02(+IFN) ;old format
"RTN","ORCACT01",131,0)
 I DG="UD RX",$$NTBG^ORCACT03(+IFN) S ERROR="This order has been marked 'Not to be Given' and may not be renewed!" Q
"RTN","ORCACT01",132,0)
 I ORDSTS=7,'$$IV^ORCACT03,$P(OR0,U,9)<$$FMADD^XLFDT(DT,-4)  S ERROR="Inpatient med orders may not be renewed more than 4 days after expiration!" Q
"RTN","ORCACT01",133,0)
 I ORDSTS'=6,ORDSTS'=7 S ERROR="This order may not be renewed!" Q
"RTN","ORCACT01",134,0)
RN2 I $O(^OR(100,+IFN,2,0))!$P(OR3,U,9) D  Q:$D(ERROR)!'PSIFN
"RTN","ORCACT01",135,0)
 . I $P(OR3,U,9),$$VALUE^ORX8(+IFN,"SCHEDULE",1,"E")="NOW" S ERROR="One-time NOW orders may not be renewed!" Q
"RTN","ORCACT01",136,0)
 . N DAD,ORD3,I,Y S DAD=$S($P(OR3,U,9):+$P(OR3,U,9),1:+IFN),Y=0
"RTN","ORCACT01",137,0)
 . S ORD3=$G(^OR(100,DAD,3)) I $P(ORD3,U,6) S ERROR="This complex order has already been renewed!" Q
"RTN","ORCACT01",138,0)
 . I $P(ORD3,U,3)'=6 S ERROR="This complex order is not active and may not be renewed!" Q
"RTN","ORCACT01",139,0)
 . I '$$AND^ORX8(DAD) S ERROR="Complex orders with sequential doses may not be renewed!" Q
"RTN","ORCACT01",140,0)
 . S I=0 F  S I=+$O(^OR(100,DAD,2,I)) Q:I<1  D  Q:Y
"RTN","ORCACT01",141,0)
 .. I I=+$O(^OR(100,DAD,2,0)),$$VALUE^ORX8(I,"SCHEDULE",1,"E")="NOW",$$VALUE^ORX8(DAD,"NOW") Q  ;ignore NOW orders
"RTN","ORCACT01",142,0)
 .. I $P($G(^OR(100,I,3)),U,3)'=6 S Y=1,ERROR="Complex orders with terminated doses may not be renewed!" Q
"RTN","ORCACT01",143,0)
 .. I PSIFN<1 S X=$$ACTIVE^PSJORREN(+ORVP,$G(^OR(100,I,4))) I +X'=1 S ERROR="This order may not be renewed: "_$S(+X>1:"Inactive orderable item",1:$P(X,U,2)) Q
"RTN","ORCACT01",144,0)
 ;I DG="TPN" S ERROR="TPN orders may not be renewed!" Q
"RTN","ORCACT01",145,0)
 S X=$$ACTIVE^PSJORREN(+ORVP,PSIFN) Q:+X=1  ;Ok
"RTN","ORCACT01",146,0)
 I +X>1,$P(X,U,2) D RESET^ORCACT03(+IFN,+$P(X,U,2)) Q  ;replace OI
"RTN","ORCACT01",147,0)
 S ERROR="This order may not be renewed: "_$P(X,U,2)
"RTN","ORCACT01",148,0)
 Q
"RTN","ORCACT01",149,0)
 ;
"RTN","ORCACT01",150,0)
XX ; -- edit/change--
"RTN","ORCACT01",151,0)
 I PKG="RA",ORDSTS'=11,ORDSTS'=10 S ERROR="Orders released to Radiology cannot be changed!" Q
"RTN","ORCACT01",152,0)
 I PKG="LR",ORDSTS'=11,ORDSTS'=10 S ERROR="Orders released to Lab cannot be changed!" Q
"RTN","ORCACT01",153,0)
 I PKG="FH",ORDSTS'=11,ORDSTS'=10 S ERROR="Orders released to Dietetics cannot be changed!" Q
"RTN","ORCACT01",154,0)
 I PKG="GMRC",ORDSTS'=11,ORDSTS'=10 S ERROR="Orders released to Consults cannot be changed!" Q
"RTN","ORCACT01",155,0)
 I DG="TPN" S ERROR="TPN orders may not be changed!" Q
"RTN","ORCACT01",156,0)
 I ORDSTS=3 S ERROR="Orders on hold may not be changed!" Q
"RTN","ORCACT01",157,0)
 I DG="UD RX",$$NTBG^ORCACT03(+IFN) S ERROR="This order has been marked 'Not to be Given' and may not be changed!" Q
"RTN","ORCACT01",158,0)
 I $O(^OR(100,+IFN,2,0)) S ERROR="Complex orders may not be changed!" Q
"RTN","ORCACT01",159,0)
 I $P(OR3,U,9) D  Q:$D(ERROR)
"RTN","ORCACT01",160,0)
 . Q:$$VALUE^ORX8(+IFN,"SCHEDULE",1,"E")="NOW"  ;NOW ok
"RTN","ORCACT01",161,0)
 . Q:'$O(^OR(100,+$P(OR3,U,9),4.5,"ID","CONJ",0))  ;no conj=1dose/ok
"RTN","ORCACT01",162,0)
 . S ERROR="Complex orders may not be changed!" Q
"RTN","ORCACT01",163,0)
 I $P(OR3,U,6) S ERROR="This order may not be changed - a "_$S($P($G(^OR(100,+$P(OR3,U,6),3)),U,11)=1:"change",1:"renewal")_" order already exists!" Q
"RTN","ORCACT01",164,0)
 I $P(OR3,U,11)=2 D  Q:$D(ERROR)
"RTN","ORCACT01",165,0)
 . I (ORDSTS=10!(ORDSTS=11)),DG'="O RX" S ERROR="Unreleased renewals may not be changed!" Q
"RTN","ORCACT01",166,0)
 . I PKG="PS",ORDSTS=5 S ERROR="Pending renewals may not be changed!" Q
"RTN","ORCACT01",167,0)
 I $$INACTIVE^ORCACT03 S ERROR="Orders for inactive orderables may not be changed; please enter a new order!" Q
"RTN","ORCACT01",168,0)
 I PKG="PS",'$$MEDOK^ORCACT03 S ERROR="This drug may not be ordered!" Q
"RTN","ORCACT01",169,0)
 I DG="O RX",$O(^OR(100,+IFN,4.5,"ID","MISC",0)) D DOSES^ORCACT02(+IFN) ;old form
"RTN","ORCACT01",170,0)
 Q
"RTN","ORCACT01",171,0)
 ;
"RTN","ORCMEDT4")
0^4^B106382562^B93356095
"RTN","ORCMEDT4",1,0)
ORCMEDT4 ;SLC/MKB-Prompt Editor ;07/29/16  09:26
"RTN","ORCMEDT4",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**8,46,95,245,313,389,397**;Dec 17, 1997;Build 22
"RTN","ORCMEDT4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ORCMEDT4",4,0)
EN ; -- Enter/edit prompts
"RTN","ORCMEDT4",5,0)
 N PRMT F  S PRMT=+$$PROMPT Q:PRMT'>0  D  W !
"RTN","ORCMEDT4",6,0)
 . I $P($G(^ORD(101.41,PRMT,0)),U,7)=$O(^DIC(9.4,"C","OR",0)) D  Q
"RTN","ORCMEDT4",7,0)
 . . N DIC,DA S DIC="^ORD(101.41,",DA=PRMT D EN^DIQ
"RTN","ORCMEDT4",8,0)
 . . W !,"This prompt is not editable!"
"RTN","ORCMEDT4",9,0)
 . D EDIT(PRMT)
"RTN","ORCMEDT4",10,0)
 Q
"RTN","ORCMEDT4",11,0)
 ;
"RTN","ORCMEDT4",12,0)
EDIT(DA) ; -- Edit prompt DA
"RTN","ORCMEDT4",13,0)
 N DR,DIE,NAME,TEXT,TYPE,DOMAIN,OR0,OR1,ORP
"RTN","ORCMEDT4",14,0)
 Q:'$G(DA)  S OR0=$G(^ORD(101.41,DA,0)),OR1=$G(^(1)),ORP=DA
"RTN","ORCMEDT4",15,0)
 S NAME=$$NAME(DA) Q:(NAME="@")!(NAME="^")  ;deleted or quit
"RTN","ORCMEDT4",16,0)
 S TEXT=$$DTEXT($P(OR0,U,2)) Q:TEXT="^"
"RTN","ORCMEDT4",17,0)
 S TYPE=$$DATATYPE($P(OR1,U)) Q:TYPE="^"  S DOMAIN=$P(OR1,U,2)
"RTN","ORCMEDT4",18,0)
 D @$S(TYPE="D"!(TYPE="R"):"DATE",TYPE="F":"TEXT",TYPE="N":"NMBR",TYPE="P":"PTR",TYPE="S":"SET",1:"OTHER") Q:DOMAIN="^"
"RTN","ORCMEDT4",19,0)
 S $P(^ORD(101.41,DA,1),U,1,2)=TYPE_U_DOMAIN,DIE="^ORD(101.41,"
"RTN","ORCMEDT4",20,0)
 S DR=$S(NAME'=$P(OR0,U):".01///^S X=NAME;",1:"")_$S(TEXT'=$P(OR0,U,2):"2///^S X=TEXT;",1:"")_"20"_";13" D ^DIE ;95
"RTN","ORCMEDT4",21,0)
 Q
"RTN","ORCMEDT4",22,0)
 ;
"RTN","ORCMEDT4",23,0)
PROMPT() ; -- Find prompt in #101.41
"RTN","ORCMEDT4",24,0)
 N X,Y,DIC,DLAYGO
"RTN","ORCMEDT4",25,0)
 S DIC="^ORD(101.41,",DIC(0)="AEQLM",DLAYGO=101.41
"RTN","ORCMEDT4",26,0)
 S DIC("A")="Select PROMPT: ",DIC("S")="I $P(^(0),U,4)=""P"""
"RTN","ORCMEDT4",27,0)
 S DIC("DR")="4////P" D ^DIC
"RTN","ORCMEDT4",28,0)
 Q Y
"RTN","ORCMEDT4",29,0)
 ;
"RTN","ORCMEDT4",30,0)
NAME(IFN) ; -- Edit .01 name of dialog IFN
"RTN","ORCMEDT4",31,0)
 N X,Y,DIR,OLDNAME,ISPQO,NODELETE,DA,DIK,TYPE
"RTN","ORCMEDT4",32,0)
 S DIR(0)="FAO^3:63",DIR("A")="NAME: "
"RTN","ORCMEDT4",33,0)
 S OLDNAME=$P($G(^ORD(101.41,IFN,0)),U),ISPQO=0,NODELETE=1
"RTN","ORCMEDT4",34,0)
 S TYPE=$P($G(^ORD(101.41,IFN,0)),U,4)
"RTN","ORCMEDT4",35,0)
 I TYPE="Q",$E(OLDNAME,1,6)="ORWDQ " S ISPQO=1
"RTN","ORCMEDT4",36,0)
 I ISPQO!(TYPE="P") S NODELETE=0 ; OK to delete personal quick orders and prompts
"RTN","ORCMEDT4",37,0)
 S DIR("B")=OLDNAME
"RTN","ORCMEDT4",38,0)
 S DIR("?")="Enter a unique name, up to 63 characters in length."
"RTN","ORCMEDT4",39,0)
NM I $L($P($G(^ORD(101.41,IFN,0)),U,3))>0 W !,!,"(This "_$$GETITM(IFN)_" has been disabled)"
"RTN","ORCMEDT4",40,0)
 D ^DIR S:$D(DTOUT)!(X["^") Y="^"
"RTN","ORCMEDT4",41,0)
 I X="@" D  G NM:X=""
"RTN","ORCMEDT4",42,0)
 . I $D(^ORD(101.41,"AD",IFN)) W $C(7),!,"Cannot delete - currently in use!",! S X="" Q
"RTN","ORCMEDT4",43,0)
 . I $$INUSE^ORCMEDT5(IFN) W $C(7),!,"Cannot delete - currently an Add Orders Menu!",! S X="" Q
"RTN","ORCMEDT4",44,0)
 . S NODELETE=$$PTRCHK(IFN,"ORDLG PTRS") I NODELETE D
"RTN","ORCMEDT4",45,0)
 . . N CONTINUE W $C(7),!,"Cannot delete - other file entries point to this order dialog!",!
"RTN","ORCMEDT4",46,0)
 . . S CONTINUE=$$CONT D:CONTINUE'["^" PTRRPT("ORDLG PTRS",IFN)
"RTN","ORCMEDT4",47,0)
 . I NODELETE D DISABLE(IFN) S X="" Q
"RTN","ORCMEDT4",48,0)
 . I '$$SURE(IFN) S X="" Q  ;reask
"RTN","ORCMEDT4",49,0)
 . N IDX1,IDX2 S IDX1=0
"RTN","ORCMEDT4",50,0)
 . F  S IDX1=$O(^ORD(101.44,"C",IFN,IDX1)) Q:'IDX1  D
"RTN","ORCMEDT4",51,0)
 . . S IDX2=0
"RTN","ORCMEDT4",52,0)
 . . F  S IDX2=$O(^ORD(101.44,"C",IFN,IDX1,IDX2)) Q:'IDX2  D
"RTN","ORCMEDT4",53,0)
 . . . S DA=IDX2,DA(1)=IDX1,DIK="^ORD(101.44,"_IDX1_",10," D ^DIK
"RTN","ORCMEDT4",54,0)
 . K DA S DA=IFN,DIK="^ORD(101.41," D ^DIK W "  ...deleted." S (X,Y)="@"
"RTN","ORCMEDT4",55,0)
 I ISPQO,Y'="^",X'="@",Y'=OLDNAME D  G NM
"RTN","ORCMEDT4",56,0)
 . W $C(7),!,"Cannot rename a personal quick order",!
"RTN","ORCMEDT4",57,0)
 K ^TMP($J,"ORDLG PTRS")
"RTN","ORCMEDT4",58,0)
 Q Y
"RTN","ORCMEDT4",59,0)
 ;
"RTN","ORCMEDT4",60,0)
GETITM(DLG) ;
"RTN","ORCMEDT4",61,0)
 N ITM
"RTN","ORCMEDT4",62,0)
 S ITM=$P($G(^ORD(101.41,DLG,0)),U,4)
"RTN","ORCMEDT4",63,0)
 I ITM="Q",$E($P($G(^ORD(101.41,IFN,0)),U),1,6)="ORWDQ " Q "personal quick order"
"RTN","ORCMEDT4",64,0)
 S ITM=$S(ITM="P":"prompt",ITM="D":"dialog",ITM="Q":"quick order",ITM="O":"order set",ITM="A":"action",ITM="M":"menu",1:"item")
"RTN","ORCMEDT4",65,0)
 Q ITM
"RTN","ORCMEDT4",66,0)
 ;
"RTN","ORCMEDT4",67,0)
SURE(DLG) ; -- Are you sure?
"RTN","ORCMEDT4",68,0)
 N X,Y,DIR,ITM,DA
"RTN","ORCMEDT4",69,0)
 S ITM=$$GETITM(DLG)
"RTN","ORCMEDT4",70,0)
 S DIR(0)="YA",DIR("A")="Are you sure you want to delete this "_ITM_"? "
"RTN","ORCMEDT4",71,0)
 S DIR("?")="Enter YES if you want to delete this "_ITM_" from the file, or NO to quit."
"RTN","ORCMEDT4",72,0)
 D ^DIR
"RTN","ORCMEDT4",73,0)
 Q +Y
"RTN","ORCMEDT4",74,0)
 ;
"RTN","ORCMEDT4",75,0)
DISABLE(DLG) ; Disable item - return true if disabled
"RTN","ORCMEDT4",76,0)
 N DIR,X,Y,ITM,DA,DR,DIE,DIDEL,DISABLED
"RTN","ORCMEDT4",77,0)
 ;W $C(7),!,!,"Deletion not allowed outside of FileMan."
"RTN","ORCMEDT4",78,0)
 S ITM=$$GETITM(DLG)
"RTN","ORCMEDT4",79,0)
 S DISABLED=$L($P($G(^ORD(101.41,IFN,0)),U,3))>0
"RTN","ORCMEDT4",80,0)
 S DIR(0)="YA"
"RTN","ORCMEDT4",81,0)
 I DISABLED D  I 1
"RTN","ORCMEDT4",82,0)
 . S DIR("A",1)="This "_ITM_" is already disabled."
"RTN","ORCMEDT4",83,0)
 . S DIR("A")="Would you like to edit the disable message? "
"RTN","ORCMEDT4",84,0)
 . S DIR("?")="Enter YES if you want to edit the disabled message, or NO to quit."
"RTN","ORCMEDT4",85,0)
 . S DIR("B")="NO"
"RTN","ORCMEDT4",86,0)
 E  D
"RTN","ORCMEDT4",87,0)
 . S DIR("A")="Would you like to disable this "_ITM_"? "
"RTN","ORCMEDT4",88,0)
 . S DIR("?")="Enter YES if you want to disable this "_ITM_", or NO to quit."
"RTN","ORCMEDT4",89,0)
 . S DIR("B")="YES"
"RTN","ORCMEDT4",90,0)
 D ^DIR
"RTN","ORCMEDT4",91,0)
 I '+Y Q
"RTN","ORCMEDT4",92,0)
 W !,"Enter disable message:"
"RTN","ORCMEDT4",93,0)
 S DA=DLG,DR="3",DIE="^ORD(101.41,"
"RTN","ORCMEDT4",94,0)
 D ^DIE
"RTN","ORCMEDT4",95,0)
 Q
"RTN","ORCMEDT4",96,0)
 ;
"RTN","ORCMEDT4",97,0)
DTEXT(X) ; -- Enter/edit display text of prompt
"RTN","ORCMEDT4",98,0)
 N Y,DIR
"RTN","ORCMEDT4",99,0)
 S DIR(0)="FA^3:63",DIR("A")="TEXT OF PROMPT: " S:$L($G(X)) DIR("B")=X
"RTN","ORCMEDT4",100,0)
 S DIR("?")="Enter the text of this prompt, including any punctuation and spaces"
"RTN","ORCMEDT4",101,0)
 D ^DIR S:$D(DTOUT) Y="^"
"RTN","ORCMEDT4",102,0)
 Q Y
"RTN","ORCMEDT4",103,0)
 ;
"RTN","ORCMEDT4",104,0)
DATATYPE(X) ; -- Returns desired datatype for prompt
"RTN","ORCMEDT4",105,0)
 N DIR,Y S DIR("A")="TYPE OF PROMPT: "
"RTN","ORCMEDT4",106,0)
 S DIR(0)="SAM^D:date/time;R:relative date/time;F:free text;N:numeric;S:set of codes;P:pointer to a file;Y:yes/no;W:word processing;"
"RTN","ORCMEDT4",107,0)
 S:$L($G(X)) DIR("B")=$P($P(DIR(0),X_":",2),";")
"RTN","ORCMEDT4",108,0)
 S DIR("?")="Select the type of data to be entered at this prompt"
"RTN","ORCMEDT4",109,0)
 D ^DIR S:$D(DTOUT) Y="^"
"RTN","ORCMEDT4",110,0)
 Q Y
"RTN","ORCMEDT4",111,0)
 ;
"RTN","ORCMEDT4",112,0)
DATE ; -- date parameters
"RTN","ORCMEDT4",113,0)
 N X,Y,DIR,ORX,ORT,ORS,ORR
"RTN","ORCMEDT4",114,0)
 S X=$P(DOMAIN,":",3),ORX=X["X",ORT=X["T",ORS=X["S",ORR=X["R",DIR(0)="YA"
"RTN","ORCMEDT4",115,0)
 ; Still need to handle Earliest and Latest dates allowed
"RTN","ORCMEDT4",116,0)
 S DIR("A")="CAN DATE BE IMPRECISE? ",DIR("B")=$S(ORX:"NO",1:"YES")
"RTN","ORCMEDT4",117,0)
 D ^DIR S ORX='Y I $D(DUOUT)!($D(DTOUT)) S DOMAIN="^" Q
"RTN","ORCMEDT4",118,0)
 S DIR("A")="CAN TIME OF DAY BE ENTERED? ",DIR("B")=$S(ORT:"YES",1:"NO")
"RTN","ORCMEDT4",119,0)
 D ^DIR I $D(DUOUT)!($D(DTOUT)) S DOMAIN="^" Q
"RTN","ORCMEDT4",120,0)
 S ORT=Y I 'Y S (ORS,ORR)=0 G DQ
"RTN","ORCMEDT4",121,0)
 S DIR("A")="CAN SECONDS BE ENTERED? ",DIR("B")=$S(ORS:"YES",1:"NO")
"RTN","ORCMEDT4",122,0)
 D ^DIR S ORS=Y I $D(DUOUT)!($D(DTOUT)) S DOMAIN="^" Q
"RTN","ORCMEDT4",123,0)
 S DIR("A")="IS TIME REQUIRED? ",DIR("B")=$S(ORR:"YES",1:"NO")
"RTN","ORCMEDT4",124,0)
 D ^DIR S ORR=Y I $D(DUOUT)!($D(DTOUT)) S DOMAIN="^" Q
"RTN","ORCMEDT4",125,0)
DQ S DOMAIN="::E"_$S(ORX:"X",1:"")_$S(ORT:"T",1:"")_$S(ORS:"S",1:"")_$S(ORR:"R",1:"")
"RTN","ORCMEDT4",126,0)
 Q
"RTN","ORCMEDT4",127,0)
 ;
"RTN","ORCMEDT4",128,0)
TEXT ; -- free text
"RTN","ORCMEDT4",129,0)
 N X,Y,DIR
"RTN","ORCMEDT4",130,0)
 S DIR(0)="NAO^1:245",DIR("A")="MINIMUM LENGTH: "
"RTN","ORCMEDT4",131,0)
 S:+DOMAIN DIR("B")=+DOMAIN
"RTN","ORCMEDT4",132,0)
 D ^DIR I $D(DTOUT)!($D(DUOUT)) S DOMAIN="^" Q
"RTN","ORCMEDT4",133,0)
 S $P(DOMAIN,":")=Y,DIR("A")="MAXIMUM LENGTH: " K DIR("B")
"RTN","ORCMEDT4",134,0)
 S:$P(DOMAIN,":",2) DIR("B")=$P(DOMAIN,":",2)
"RTN","ORCMEDT4",135,0)
 D ^DIR I $D(DUOUT)!($D(DTOUT)) S DOMAIN="^" Q
"RTN","ORCMEDT4",136,0)
 S $P(DOMAIN,":",2)=Y
"RTN","ORCMEDT4",137,0)
 ; Opt pattern match ??
"RTN","ORCMEDT4",138,0)
 Q
"RTN","ORCMEDT4",139,0)
 ;
"RTN","ORCMEDT4",140,0)
NMBR ; -- numeric
"RTN","ORCMEDT4",141,0)
 N X,Y,DIR,STR
"RTN","ORCMEDT4",142,0)
 S DIR(0)="NAO^::"_+$P(DOMAIN,":",3),DIR("A")="INCLUSIVE LOWER BOUND: ",DIR("B")=+DOMAIN ;95
"RTN","ORCMEDT4",143,0)
 D ^DIR I $D(DTOUT)!($D(DUOUT)) S DOMAIN="^" Q
"RTN","ORCMEDT4",144,0)
 S STR=Y,DIR(0)="NAO^"_Y_"::"_+$P(DOMAIN,":",3),DIR("A")="INCLUSIVE UPPER BOUND: ",DIR("B")=+$P(DOMAIN,":",2) ;95
"RTN","ORCMEDT4",145,0)
 D ^DIR I $D(DTOUT)!($D(DUOUT)) S DOMAIN="^" Q
"RTN","ORCMEDT4",146,0)
 S STR=STR_":"_Y,DIR(0)="NAO",DIR("A")="MAXIMUM NUMBER OF FRACTIONAL DIGITS: ",DIR("B")=+$P(DOMAIN,":",3) ;95
"RTN","ORCMEDT4",147,0)
 D ^DIR I $D(DUOUT)!($D(DTOUT)) S DOMAIN="^" Q
"RTN","ORCMEDT4",148,0)
 S DOMAIN=STR_":"_Y
"RTN","ORCMEDT4",149,0)
 Q
"RTN","ORCMEDT4",150,0)
 ;
"RTN","ORCMEDT4",151,0)
PTR ; -- pointer
"RTN","ORCMEDT4",152,0)
 I DUZ(0)="@"!($L(DOMAIN)&'DOMAIN) D ROOT Q  ; allow file root
"RTN","ORCMEDT4",153,0)
 N X,Y,DIR,DIE,DR,FILE,STR,SCR
"RTN","ORCMEDT4",154,0)
 S DIR(0)="PA^1:AEQM",DIR("A")="POINT TO WHICH FILE: "
"RTN","ORCMEDT4",155,0)
 S:$L(DOMAIN) DIR("B")=$$FILENAME(+DOMAIN)
"RTN","ORCMEDT4",156,0)
 D ^DIR I $D(DUOUT)!($D(DTOUT)) S DOMAIN="^" Q
"RTN","ORCMEDT4",157,0)
 S FILE=+Y,STR=$P(DOMAIN,":",2) S:'$L(STR) STR="EQ"
"RTN","ORCMEDT4",158,0)
 S DOMAIN=FILE_":"_STR
"RTN","ORCMEDT4",159,0)
 Q
"RTN","ORCMEDT4",160,0)
 ;
"RTN","ORCMEDT4",161,0)
ROOT ; -- pointer via file root
"RTN","ORCMEDT4",162,0)
 N X,Y,DIR,STR
"RTN","ORCMEDT4",163,0)
 S DIR(0)="FA^1:100",DIR("A")="POINT TO WHICH FILE: "
"RTN","ORCMEDT4",164,0)
 S DIR("?")="Enter the file by name, file number, or global root (without the leading '^')."
"RTN","ORCMEDT4",165,0)
 S:$L(DOMAIN) DIR("B")=$S(+DOMAIN:$$FILENAME(+DOMAIN),1:$P(DOMAIN,":"))
"RTN","ORCMEDT4",166,0)
RT1 D ^DIR I $D(DTOUT)!$D(DUOUT) S DOMAIN="^" Q
"RTN","ORCMEDT4",167,0)
 I $L(DOMAIN),$L(X),X=$G(DIR("B")) S Y=$P(DOMAIN,":") G RTQ ; default
"RTN","ORCMEDT4",168,0)
 I +Y=Y S X=$$FILENAME(+Y) I $L(X) W "   "_X G RTQ ; valid file number
"RTN","ORCMEDT4",169,0)
 I $L(Y),+Y'=Y D  G:$D(Y) RTQ ; valid root or name
"RTN","ORCMEDT4",170,0)
 . I "(,"[$E(Y,$L(Y)) Q:$D(@(U_Y_"0)"))  ; valid file root
"RTN","ORCMEDT4",171,0)
 . S DIC=1,DIC(0)="EQ",X=Y D ^DIC S:Y>0 Y=+Y K:Y'>0 Y
"RTN","ORCMEDT4",172,0)
 W $C(7),!,"Invalid file!" G RT1
"RTN","ORCMEDT4",173,0)
RTQ S STR=$P(DOMAIN,":",2),DOMAIN=Y_":"_$S($L(STR):STR,1:"EQ")
"RTN","ORCMEDT4",174,0)
 Q
"RTN","ORCMEDT4",175,0)
 ;
"RTN","ORCMEDT4",176,0)
SET ; -- set of codes
"RTN","ORCMEDT4",177,0)
 N I,ORI,ORJ,ITEM,X,Y,ORQUIT,NEWLNG S ORJ=0
"RTN","ORCMEDT4",178,0)
 F I=1:1:$L(DOMAIN,";") S:$P(DOMAIN,";",I)'="" ITEM(I)=$P(DOMAIN,";",I)
"RTN","ORCMEDT4",179,0)
 S ORI=0 F  S ORI=$O(ITEM(ORI)) Q:ORI'>0  D SETEDIT Q:$G(ORQUIT)!(Y="")
"RTN","ORCMEDT4",180,0)
 I $G(ORQUIT) S DOMAIN="^" Q
"RTN","ORCMEDT4",181,0)
 S ORI=ORJ F  S ORI=ORI+1 D SETEDIT Q:$G(ORQUIT)!(Y="")  ; new codes
"RTN","ORCMEDT4",182,0)
 I $G(ORQUIT) S DOMAIN="^" Q
"RTN","ORCMEDT4",183,0)
 ; now done editing, rebuild DOMAIN
"RTN","ORCMEDT4",184,0)
 S I=0,DOMAIN="" F  S I=$O(ITEM(I)) Q:I'>0  S NEWLNG=$L(DOMAIN)+$L(ITEM(I))+1 S:NEWLNG'>235 DOMAIN=DOMAIN_ITEM(I)_";" I NEWLNG>235 W $C(7),!,"Domain too long - unable to store all codes."  H 2 Q
"RTN","ORCMEDT4",185,0)
 Q
"RTN","ORCMEDT4",186,0)
SETEDIT ; -- edit each item in DOMAIN
"RTN","ORCMEDT4",187,0)
 N DIR,TEXT,CODE S DIR(0)="FAO^1:5",DIR("A")="INTERNALLY-STORED CODE: "
"RTN","ORCMEDT4",188,0)
 S CODE=$P($G(ITEM(ORI)),":"),TEXT=$P($G(ITEM(ORI)),":",2),ORJ=ORI
"RTN","ORCMEDT4",189,0)
 S:$L(CODE) DIR("B")=CODE
"RTN","ORCMEDT4",190,0)
 D ^DIR S:$D(DUOUT)!($D(DTOUT)) ORQUIT=1 Q:$G(ORQUIT)!(X="")
"RTN","ORCMEDT4",191,0)
 I X="@" K ITEM(ORI) Q
"RTN","ORCMEDT4",192,0)
 S CODE=X W "  WILL STAND FOR: " W:$L(TEXT) TEXT_"// "
"RTN","ORCMEDT4",193,0)
SE1 R Y:DTIME I '$T!(Y["^") S ORQUIT=1 Q
"RTN","ORCMEDT4",194,0)
 S:Y="" Y=TEXT I "@"[Y W $C(7),!,"  Required value!",!,"'"_CODE_"' WILL STAND FOR: " W:$L(TEXT) TEXT_"// " G SE1
"RTN","ORCMEDT4",195,0)
 S TEXT=Y,ITEM(ORI)=CODE_":"_TEXT
"RTN","ORCMEDT4",196,0)
 Q
"RTN","ORCMEDT4",197,0)
 ;
"RTN","ORCMEDT4",198,0)
OTHER ; -- no parameters needed
"RTN","ORCMEDT4",199,0)
 S DOMAIN=""
"RTN","ORCMEDT4",200,0)
 Q
"RTN","ORCMEDT4",201,0)
 ;
"RTN","ORCMEDT4",202,0)
FILENAME(FNUM) ; -- Returns name of file FNUM
"RTN","ORCMEDT4",203,0)
 N ORY,Y D:$G(FNUM) FILE^DID(+FNUM,,"NAME","ORY")
"RTN","ORCMEDT4",204,0)
 S Y=$G(ORY("NAME"))
"RTN","ORCMEDT4",205,0)
 Q Y
"RTN","ORCMEDT4",206,0)
PTRCHK(DLG,ARRNAME) ; --check for pointers to order dialog
"RTN","ORCMEDT4",207,0)
 K ^TMP($J,ARRNAME)
"RTN","ORCMEDT4",208,0)
 N AREPTRS,INC S AREPTRS=0
"RTN","ORCMEDT4",209,0)
 I +$G(DLG) D
"RTN","ORCMEDT4",210,0)
 .D OR100(DLG,ARRNAME)
"RTN","ORCMEDT4",211,0)
 .D ORD10098(DLG,ARRNAME)
"RTN","ORCMEDT4",212,0)
 .D PTR80141^ORQQPXRM(DLG_";ORD(101.41,",ARRNAME)
"RTN","ORCMEDT4",213,0)
 S AREPTRS=$D(^TMP($J,ARRNAME))
"RTN","ORCMEDT4",214,0)
 Q +AREPTRS
"RTN","ORCMEDT4",215,0)
PTRRPT(ARRNAME,ORIFN) ; --show list of pointers to order dialog
"RTN","ORCMEDT4",216,0)
 N FILENUM,ITEMIEN,IEN,TAB,ITEM,LINCNT,CONTINUE S (FILENUM,ITEMIEN,IEN,CONTINUE)="",LINCNT=0
"RTN","ORCMEDT4",217,0)
 F FILENUM=100.98,801.41,100 D
"RTN","ORCMEDT4",218,0)
 .I $D(^TMP($J,ARRNAME,FILENUM)) D
"RTN","ORCMEDT4",219,0)
 ..W @IOF S (CONTINUE,ITEMIEN)=""
"RTN","ORCMEDT4",220,0)
 ..W !,$P(^ORD(101.41,ORIFN,0),U)_" is pointed to by:"
"RTN","ORCMEDT4",221,0)
 ..W !,"FILE  ",?13,"IEN",?23,"NAME"
"RTN","ORCMEDT4",222,0)
 ..W !,$$REPEAT^XLFSTR("-",27)
"RTN","ORCMEDT4",223,0)
 ..F  S ITEMIEN=$O(^TMP($J,ARRNAME,FILENUM,ITEMIEN)) Q:ITEMIEN=""!(CONTINUE["^")  D
"RTN","ORCMEDT4",224,0)
 ...S ITEM=^TMP($J,ARRNAME,FILENUM,ITEMIEN)
"RTN","ORCMEDT4",225,0)
 ...W !,$S(FILENUM=100:"ORDER",FILENUM=100.98:"DISPLAY GRP",FILENUM=801.41:"REMINDER DLG",1:FILENUM),?13,ITEMIEN
"RTN","ORCMEDT4",226,0)
 ...W ?23,$S(FILENUM=100:"N/A",1:ITEM)
"RTN","ORCMEDT4",227,0)
 ...S LINCNT=LINCNT+1
"RTN","ORCMEDT4",228,0)
 ...I LINCNT#20=0 S CONTINUE=$$CONT I CONTINUE'["^" D HDR
"RTN","ORCMEDT4",229,0)
 ...Q:CONTINUE["^"
"RTN","ORCMEDT4",230,0)
 ..Q:$G(CONTINUE)="^"  S CONTINUE=$$CONT Q:CONTINUE["^"
"RTN","ORCMEDT4",231,0)
 K ^TMP($J,ARRNAME)
"RTN","ORCMEDT4",232,0)
 Q
"RTN","ORCMEDT4",233,0)
 ;
"RTN","ORCMEDT4",234,0)
OR100(DLG,ARR) ;100
"RTN","ORCMEDT4",235,0)
 N ORIFN,TEMP
"RTN","ORCMEDT4",236,0)
 S TEMP=DLG_";ORD(101.41,",ORIFN=""
"RTN","ORCMEDT4",237,0)
 I $D(^OR(100,"C",TEMP)) D
"RTN","ORCMEDT4",238,0)
 .F  S ORIFN=$O(^OR(100,"C",TEMP,ORIFN)) Q:ORIFN=""  D
"RTN","ORCMEDT4",239,0)
 ..Q:$D(^OR(100,ORIFN))=0
"RTN","ORCMEDT4",240,0)
 ..I $P(^OR(100,ORIFN,0),U,5)=TEMP D  ;if DIALOG has pointer to order dialog
"RTN","ORCMEDT4",241,0)
 ...S ^TMP($J,ARR,100,ORIFN)=$P(^OR(100,ORIFN,0),U,5)
"RTN","ORCMEDT4",242,0)
 S ORIFN=""
"RTN","ORCMEDT4",243,0)
 I $D(^OR(100,"D",TEMP)) D
"RTN","ORCMEDT4",244,0)
 .F  S ORIFN=$O(^OR(100,"D",TEMP,ORIFN)) Q:ORIFN=""  D
"RTN","ORCMEDT4",245,0)
 ..Q:$D(^OR(100,ORIFN))=0
"RTN","ORCMEDT4",246,0)
 ..I $P(^OR(100,ORIFN,3),U,4)=TEMP D  ;if ITEM ORDERED has pointer to order dialog
"RTN","ORCMEDT4",247,0)
 ...S ^TMP($J,ARR,100,ORIFN)=$P(^OR(100,ORIFN,3),U,4)
"RTN","ORCMEDT4",248,0)
 Q
"RTN","ORCMEDT4",249,0)
 ;
"RTN","ORCMEDT4",250,0)
ORD10098(DLG,ARR) ;100.98
"RTN","ORCMEDT4",251,0)
 N DISGRP,DISIEN S DISGRP="",DISIEN=""
"RTN","ORCMEDT4",252,0)
 F  S DISGRP=$O(^ORD(100.98,"B",DISGRP)) Q:DISGRP=""  D
"RTN","ORCMEDT4",253,0)
 .F  S DISIEN=$O(^ORD(100.98,"B",DISGRP,DISIEN)) Q:DISIEN=""  D
"RTN","ORCMEDT4",254,0)
 ..Q:^ORD(100.98,"B",DISGRP,DISIEN)=1  ;second B x-ref entry for SHORT NAME, Q to avoid duplicates in results
"RTN","ORCMEDT4",255,0)
 ..I $P(^ORD(100.98,DISIEN,0),U,4)=DLG D  ;if DEFAULT DIALOG has pointer to order dialog
"RTN","ORCMEDT4",256,0)
 ...S ^TMP($J,ARR,100.98,DISIEN)=$P(^ORD(100.98,DISIEN,0),U)
"RTN","ORCMEDT4",257,0)
 Q
"RTN","ORCMEDT4",258,0)
 ;
"RTN","ORCMEDT4",259,0)
HDR ;header
"RTN","ORCMEDT4",260,0)
 W @IOF
"RTN","ORCMEDT4",261,0)
 W !,"FILE  ",?13,"IEN",?23,"NAME"
"RTN","ORCMEDT4",262,0)
 W !,$$REPEAT^XLFSTR("-",27)
"RTN","ORCMEDT4",263,0)
 Q
"RTN","ORCMEDT4",264,0)
CONT() ; -- gives user a chance to read output from pointer check
"RTN","ORCMEDT4",265,0)
 N X,Y,DIR
"RTN","ORCMEDT4",266,0)
 S DIR(0)="FO",DIR("A")="Press any key to continue reviewing pointer report"
"RTN","ORCMEDT4",267,0)
 S DIR("?")="Enter any key to continue; enter ^ to exit."
"RTN","ORCMEDT4",268,0)
 D ^DIR
"RTN","ORCMEDT4",269,0)
 Q X
"RTN","ORCMEDT4",270,0)
 ;
"RTN","ORCMEDT9")
0^5^B56544037^B52002206
"RTN","ORCMEDT9",1,0)
ORCMEDT9 ;ISP/WAT - Move/copy utility for QOs ;08/03/16  11:56
"RTN","ORCMEDT9",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**389,423,397**;Dec 17, 1997;Build 22
"RTN","ORCMEDT9",3,0)
UDQO ; -- unit dose quick order
"RTN","ORCMEDT9",4,0)
 N ORQDLG,ORDG,ORCMDG,ORCIDG,ORABORT,ORPMAX,ORINDEX
"RTN","ORCMEDT9",5,0)
 N ORSTART S ORSTART=""
"RTN","ORCMEDT9",6,0)
 S ORABORT=0,ORPMAX=IOSL-5,ORINDEX=""
"RTN","ORCMEDT9",7,0)
 S ORCMDG=$O(^ORD(100.98,"B","CLINIC MEDICATIONS",""))
"RTN","ORCMEDT9",8,0)
 S ORCIDG=$O(^ORD(100.98,"B","CLINIC INFUSIONS",""))
"RTN","ORCMEDT9",9,0)
 I +$G(ORCMDG)'>0 W !,"Abort: Clinic Medications display group not found!" Q
"RTN","ORCMEDT9",10,0)
 I +$G(ORCIDG)'>0 W !,"Abort: Clinic Infusions display group not found!" Q
"RTN","ORCMEDT9",11,0)
 D BLDUDQO
"RTN","ORCMEDT9",12,0)
 F  D  Q:ORABORT=1
"RTN","ORCMEDT9",13,0)
 . D DISP(ORPMAX,.ORINDEX)
"RTN","ORCMEDT9",14,0)
 . D CHOOSE(.ORABORT)
"RTN","ORCMEDT9",15,0)
 D CLEAN^DILF
"RTN","ORCMEDT9",16,0)
 Q
"RTN","ORCMEDT9",17,0)
 ;
"RTN","ORCMEDT9",18,0)
CHOOSE(ORABORT) ;select qo for action
"RTN","ORCMEDT9",19,0)
 N ORACT
"RTN","ORCMEDT9",20,0)
 N DIR,X,Y,DIRUT,DTOUT,DUOUT
"RTN","ORCMEDT9",21,0)
 S DIR(0)="LO"
"RTN","ORCMEDT9",22,0)
 D ^DIR
"RTN","ORCMEDT9",23,0)
 I $D(DTOUT) S ORABORT=1 Q
"RTN","ORCMEDT9",24,0)
 I $D(DUOUT) S ORABORT=1 Q
"RTN","ORCMEDT9",25,0)
 Q:X=""
"RTN","ORCMEDT9",26,0)
 I X'[","&(X'["-")&($D(^TMP("ORUDQO",$J,X))) D  Q  ;single selection can Move OR Copy
"RTN","ORCMEDT9",27,0)
 . S ORACT=$$ACTASK
"RTN","ORCMEDT9",28,0)
 . I ORACT="^" S ORABORT=1 Q
"RTN","ORCMEDT9",29,0)
 . E  D ACTION(ORACT,X)
"RTN","ORCMEDT9",30,0)
 I X[","!(X["-") D ACTION(1,Y) ;check for series of numbers. Move only
"RTN","ORCMEDT9",31,0)
 Q
"RTN","ORCMEDT9",32,0)
 ;
"RTN","ORCMEDT9",33,0)
ACTION(ORGO,ORNUMBER) ;
"RTN","ORCMEDT9",34,0)
 ;ORGO=1 MOVE, ORGO=2 COPY
"RTN","ORCMEDT9",35,0)
 N ORTEMP,ORCOUNT
"RTN","ORCMEDT9",36,0)
 S ORINDEX=ORSTART-1 ;if user comes to action, try to return them to list in the same set of QOS i.e. #21-40
"RTN","ORCMEDT9",37,0)
 I $G(ORGO)=2 D COPY(ORNUMBER) Q
"RTN","ORCMEDT9",38,0)
 I '$$MOVOK() Q
"RTN","ORCMEDT9",39,0)
 W !,"Moving selected quick order(s)..." H 5
"RTN","ORCMEDT9",40,0)
 S:$G(ORCMDG)="" ORCMDG=$O(^ORD(100.98,"B","CLINIC MEDICATIONS",""))
"RTN","ORCMEDT9",41,0)
 S ORCOUNT=1
"RTN","ORCMEDT9",42,0)
 F  S ORTEMP=$P(ORNUMBER,",",ORCOUNT) Q:$G(ORTEMP)=""  D
"RTN","ORCMEDT9",43,0)
 . I $D(^TMP("ORUDQO",$J,ORTEMP)) D MOVE(ORTEMP)
"RTN","ORCMEDT9",44,0)
 . S ORCOUNT=ORCOUNT+1
"RTN","ORCMEDT9",45,0)
 W " Done!" H 2
"RTN","ORCMEDT9",46,0)
 Q
"RTN","ORCMEDT9",47,0)
 ;
"RTN","ORCMEDT9",48,0)
DISP(ORPMAX,ORINDEX) ; show qo dialogs for action choices
"RTN","ORCMEDT9",49,0)
 N ORDLGNM,ORIFN,ORQONAM,ORDISABL,ORDG
"RTN","ORCMEDT9",50,0)
 D HEADER
"RTN","ORCMEDT9",51,0)
 S ORIFN=""
"RTN","ORCMEDT9",52,0)
 F  S ORINDEX=$O(^TMP("ORUDQO",$J,ORINDEX)) Q:ORINDEX=""  D  Q:$Y>ORPMAX
"RTN","ORCMEDT9",53,0)
 . I IOSL-$Y<5 D HEADER
"RTN","ORCMEDT9",54,0)
 . S ORQONAM=$P(^TMP("ORUDQO",$J,ORINDEX),U,2),ORQONAM=$E(ORQONAM,1,45)
"RTN","ORCMEDT9",55,0)
 . S ORDG=$P(^TMP("ORUDQO",$J,ORINDEX),U,3)
"RTN","ORCMEDT9",56,0)
 . S ORDISABL=$P(^TMP("ORUDQO",$J,ORINDEX),U,4)
"RTN","ORCMEDT9",57,0)
 . W !,$J(ORINDEX,5)_". "_ORQONAM,?60,ORDG,?70,ORDISABL
"RTN","ORCMEDT9",58,0)
 S ORSTART=ORINDEX-ORPMAX
"RTN","ORCMEDT9",59,0)
 Q
"RTN","ORCMEDT9",60,0)
 ;
"RTN","ORCMEDT9",61,0)
MOVE(ORQDLG) ;Move changes the DISPLAY GROUP to CLINIC MEDICATIONS or CLINIC INFUSIONS
"RTN","ORCMEDT9",62,0)
 ;ORQDLG is the index from ^TMP("ORUDQO",$J,index)=order dialog ifn^order NAME(.01)^DisplayGroup^Disabled
"RTN","ORCMEDT9",63,0)
 N ORIFN,ORCONVDG S ORIFN=$P(^TMP("ORUDQO",$J,ORQDLG),U) Q:$G(ORIFN)=""
"RTN","ORCMEDT9",64,0)
 I $D(^ORD(101.41,ORIFN,0)) D  Q
"RTN","ORCMEDT9",65,0)
 . S ORCONVDG=$P(^TMP("ORUDQO",$J,ORQDLG),U,3)
"RTN","ORCMEDT9",66,0)
 . S ORCONVDG=$S(ORCONVDG="UDM":ORCMDG,1:ORCIDG)
"RTN","ORCMEDT9",67,0)
 . S $P(^ORD(101.41,ORIFN,0),U,5)=$G(ORCONVDG)
"RTN","ORCMEDT9",68,0)
 . I $D(^TMP("ORUDQO",$J,ORQDLG)) K ^TMP("ORUDQO",$J,ORQDLG)
"RTN","ORCMEDT9",69,0)
 E  D
"RTN","ORCMEDT9",70,0)
 . W $C(7),!,"Abort: Order dialog not found - check file entry and try again."
"RTN","ORCMEDT9",71,0)
 . W !,"Order Dialog: "_$P(^ORD(101.41,ORIFN,0),U)
"RTN","ORCMEDT9",72,0)
 Q
"RTN","ORCMEDT9",73,0)
COPY(ORQDLG) ;copy creates a new CLINIC MEDICATIONS or CLINIC INFUSIONS qo dialog and will ask to delete the original qo
"RTN","ORCMEDT9",74,0)
 ;ORQDLG is the index from ^TMP("ORUDQO",$J,index)=order dialog ifn^order NAME(.01)^DisplayGroup^Disabled
"RTN","ORCMEDT9",75,0)
 N ORQIFN,ORNUNAME,ORNUIFN,ORCUR0,ORESULT,ORPOINT,OR30350,ORTMPDLG,ORDIGP
"RTN","ORCMEDT9",76,0)
 S OR30350=$$PATCH^XPDUTL("OR*3.0*350") ;no delete if 350 not installed
"RTN","ORCMEDT9",77,0)
 S ORQIFN=$P(^TMP("ORUDQO",$J,ORQDLG),U) Q:+$G(ORQIFN)'>0
"RTN","ORCMEDT9",78,0)
 S ORDIGP=$P(^TMP("ORUDQO",$J,ORQDLG),U,3)
"RTN","ORCMEDT9",79,0)
 S ORDIGP=$S(ORDIGP="UDM":ORCMDG,1:ORCIDG)
"RTN","ORCMEDT9",80,0)
 Q:'$D(^ORD(101.41,ORQIFN,0))
"RTN","ORCMEDT9",81,0)
 S ORNUNAME=$$GETNAME() I $G(ORNUNAME)="^" S ORQDLG=ORNUNAME Q
"RTN","ORCMEDT9",82,0)
 S ORNUIFN=$$STUB(101.41,ORNUNAME) I +$G(ORNUIFN)'>0 W !,"Error creating new entry. Please try again later." Q
"RTN","ORCMEDT9",83,0)
 N I,DA,DIE,DR,DIK,ORTEMP
"RTN","ORCMEDT9",84,0)
 S ORCUR0=^ORD(101.41,ORQIFN,0) ;get 0 node of current QO
"RTN","ORCMEDT9",85,0)
 F I=2,4,6,8,9 S $P(^ORD(101.41,ORNUIFN,0),U,I)=$P(ORCUR0,U,I)
"RTN","ORCMEDT9",86,0)
 S $P(^ORD(101.41,ORNUIFN,0),U,5)=$G(ORDIGP)
"RTN","ORCMEDT9",87,0)
 S:$L($P(ORCUR0,U,2)) ^ORD(101.41,"C",$$UP^XLFSTR($P(ORCUR0,U,2)),ORNUIFN)="" ;disp text
"RTN","ORCMEDT9",88,0)
 F I=2,3,3.1,4,5,6,7,9,10 I $D(^ORD(101.41,ORQIFN,I)) M ^ORD(101.41,ORNUIFN,I)=^ORD(101.41,ORQIFN,I)
"RTN","ORCMEDT9",89,0)
 I $P(ORCUR0,U,7) S ORTEMP=$P(ORCUR0,U,7),DA=ORNUIFN,DIE="^ORD(101.41,",DR="7///^S X=ORTEMP;99///^S X=$H" D ^DIE
"RTN","ORCMEDT9",90,0)
 K DA S DA(1)=ORNUIFN,DIK="^ORD(101.41,"_ORNUIFN_",10,",DIK(1)="2^AD" D ENALL^DIK
"RTN","ORCMEDT9",91,0)
 W !!,"  Quick order copy complete."
"RTN","ORCMEDT9",92,0)
 I ($G(OR30350)=1) D  Q
"RTN","ORCMEDT9",93,0)
 . I '$$DELOK() D  Q
"RTN","ORCMEDT9",94,0)
 . . W !,"OK - If desired, you can manually delete the QO via the QO editor."
"RTN","ORCMEDT9",95,0)
 . . S ORQDLG="^" D CONT("using the conversion utility")
"RTN","ORCMEDT9",96,0)
 . S ORPOINT=$$PTRCHECK(ORQIFN) I +$G(ORPOINT)>0 D  Q
"RTN","ORCMEDT9",97,0)
 . . S ORQDLG="^" D CONT("using the conversion utility")
"RTN","ORCMEDT9",98,0)
 . Q:$G(ORQDLG)="^"
"RTN","ORCMEDT9",99,0)
 . W !,"Now deleting original quick order..."
"RTN","ORCMEDT9",100,0)
 . S ORESULT=$$DELETE(ORQIFN)
"RTN","ORCMEDT9",101,0)
 . I $G(ORESULT)'="@" W !,"Error deleting IEN "_ORQIFN_" from ORDER DIALOG (101.41)."
"RTN","ORCMEDT9",102,0)
 . E  I $D(^TMP("ORUDQO",$J,ORQDLG)) K ^TMP("ORUDQO",$J,ORQDLG)
"RTN","ORCMEDT9",103,0)
 Q
"RTN","ORCMEDT9",104,0)
 ;
"RTN","ORCMEDT9",105,0)
BLDUDQO ;build list of UDM and IVM qos
"RTN","ORCMEDT9",106,0)
 N ORUDMDG,ORIVMED,ORDLGNM,ORIFN,ORINDEX,ORDISABL,ORDG
"RTN","ORCMEDT9",107,0)
 S ORINDEX=1,ORDLGNM=""
"RTN","ORCMEDT9",108,0)
 S ORUDMDG=$O(^ORD(100.98,"B","UNIT DOSE MEDICATIONS",""))
"RTN","ORCMEDT9",109,0)
 S ORIVMED=$O(^ORD(100.98,"B","IV MEDICATIONS",""))
"RTN","ORCMEDT9",110,0)
 Q:$G(ORUDMDG)=""!($G(ORIVMED)="")
"RTN","ORCMEDT9",111,0)
 K ^TMP("ORUDQO",$J)
"RTN","ORCMEDT9",112,0)
 F  S ORDLGNM=$O(^ORD(101.41,"B",ORDLGNM))  Q:$G(ORDLGNM)=""  D
"RTN","ORCMEDT9",113,0)
 . S ORIFN=$O(^ORD(101.41,"B",ORDLGNM,""))
"RTN","ORCMEDT9",114,0)
 . Q:+$G(ORIFN)'>0
"RTN","ORCMEDT9",115,0)
 . Q:$P($G(^ORD(101.41,ORIFN,0)),U,5)'=ORUDMDG&($P($G(^ORD(101.41,ORIFN,0)),U,5)'=ORIVMED)!($P($G(^ORD(101.41,ORIFN,0)),U,5)="")
"RTN","ORCMEDT9",116,0)
 . Q:$P($G(^(0)),U,4)'="Q"
"RTN","ORCMEDT9",117,0)
 . Q:$E($P($G(^(0)),U),1,6)="ORWDQ "
"RTN","ORCMEDT9",118,0)
 . S ORDISABL=$P($G(^(0)),U,3)
"RTN","ORCMEDT9",119,0)
 . S ORDG=$P($G(^(0)),U,5) S ORDG=$S(ORDG=ORUDMDG:"UDM",ORDG=ORIVMED:"IVM",1:"")
"RTN","ORCMEDT9",120,0)
 . S ORDISABL=$S($L($G(ORDISABL))>0:"YES",1:"")
"RTN","ORCMEDT9",121,0)
 . S ^TMP("ORUDQO",$J,ORINDEX)=ORIFN_"^"_$P(^ORD(101.41,ORIFN,0),U)_"^"_ORDG_"^"_ORDISABL,ORINDEX=ORINDEX+1
"RTN","ORCMEDT9",122,0)
 Q
"RTN","ORCMEDT9",123,0)
 ;
"RTN","ORCMEDT9",124,0)
GETNAME() ;get new name for copied dialog
"RTN","ORCMEDT9",125,0)
 N DIR,X,Y ;prompt for new NAME .01
"RTN","ORCMEDT9",126,0)
 S DIR(0)="F^3:63^",DIR("A")="NAME"
"RTN","ORCMEDT9",127,0)
 S DIR("?")="Enter a NAME (between 3 and 63 characters) for the new order dialog."
"RTN","ORCMEDT9",128,0)
NM D ^DIR
"RTN","ORCMEDT9",129,0)
 I $D(DIRUT)!($D(DUOUT)) S Y="^" Q Y
"RTN","ORCMEDT9",130,0)
 I $O(^ORD(101.41,"AB",X,""))'="" W $C(7),!,"Another entry already exists by this name!",! S X="" G NM
"RTN","ORCMEDT9",131,0)
 K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>63!($L(X)<3)!'(X'?1P.E) X
"RTN","ORCMEDT9",132,0)
 I '$D(X) G NM
"RTN","ORCMEDT9",133,0)
 Q Y
"RTN","ORCMEDT9",134,0)
PTRCHECK(ORIEN) ; check for pointers if Copy action
"RTN","ORCMEDT9",135,0)
 N IHAZPTR S IHAZPTR=0
"RTN","ORCMEDT9",136,0)
 I $D(^ORD(101.41,"AD",ORIEN)) S IHAZPTR=1 W $C(7),!,"Cannot delete order dialog - currently in use!",! Q IHAZPTR
"RTN","ORCMEDT9",137,0)
 S IHAZPTR=$$PTRCHK^ORCMEDT4(ORIEN,"QO PTRS")
"RTN","ORCMEDT9",138,0)
 I IHAZPTR D
"RTN","ORCMEDT9",139,0)
 . W $C(7),!,"Cannot delete order dialog - other file entries point to this order dialog!",!
"RTN","ORCMEDT9",140,0)
 . D CONT("reviewing pointer report")
"RTN","ORCMEDT9",141,0)
 . D PTRRPT^ORCMEDT4("QO PTRS",ORIEN)
"RTN","ORCMEDT9",142,0)
 Q IHAZPTR
"RTN","ORCMEDT9",143,0)
 ;
"RTN","ORCMEDT9",144,0)
ACTASK() ; get action Move or Copy
"RTN","ORCMEDT9",145,0)
 N DIR,X,Y
"RTN","ORCMEDT9",146,0)
 S DIR(0)="S^1:MOVE;2:COPY"
"RTN","ORCMEDT9",147,0)
 S DIR("?")="Choose an action for this quick order"
"RTN","ORCMEDT9",148,0)
 S DIR("?",1)="Move converts the selected QO into a new Clinic Medication QO."
"RTN","ORCMEDT9",149,0)
 S DIR("?",2)="Copy clones the selected QO into a new Clinic Medication QO."
"RTN","ORCMEDT9",150,0)
 S DIR("?",3)="The original QO is then deleted."
"RTN","ORCMEDT9",151,0)
 D ^DIR
"RTN","ORCMEDT9",152,0)
 S:$D(DTOUT)!($D(DUOUT)) Y="^"
"RTN","ORCMEDT9",153,0)
 Q Y
"RTN","ORCMEDT9",154,0)
 ;
"RTN","ORCMEDT9",155,0)
DELETE(IFN) ;remove old QO;
"RTN","ORCMEDT9",156,0)
 N Y,DA,DIK,IDX1,IDX2 S (IDX1,Y)=0
"RTN","ORCMEDT9",157,0)
 F  S IDX1=$O(^ORD(101.44,"C",IFN,IDX1)) Q:'IDX1  D
"RTN","ORCMEDT9",158,0)
 . S IDX2=0
"RTN","ORCMEDT9",159,0)
 . F  S IDX2=$O(^ORD(101.44,"C",IFN,IDX1,IDX2)) Q:'IDX2  D
"RTN","ORCMEDT9",160,0)
 . . S DA=IDX2,DA(1)=IDX1,DIK="^ORD(101.44,"_IDX1_",10," D ^DIK
"RTN","ORCMEDT9",161,0)
 K DA S DA=IFN,DIK="^ORD(101.41," D ^DIK W "  ...deleted." S Y="@"
"RTN","ORCMEDT9",162,0)
 Q Y
"RTN","ORCMEDT9",163,0)
 ;
"RTN","ORCMEDT9",164,0)
STUB(ORFILE,ORNAME) ; create new entry in file
"RTN","ORCMEDT9",165,0)
 N FDA,MSG,IEN
"RTN","ORCMEDT9",166,0)
 S FDA(ORFILE,"+1,",.01)=ORNAME
"RTN","ORCMEDT9",167,0)
 D UPDATE^DIE("","FDA","IEN","MSG")
"RTN","ORCMEDT9",168,0)
 I $D(MSG)>0
"RTN","ORCMEDT9",169,0)
 D CLEAN^DILF
"RTN","ORCMEDT9",170,0)
 Q IEN(1)
"RTN","ORCMEDT9",171,0)
 ;
"RTN","ORCMEDT9",172,0)
CONT(MSG) ; -- gives user a chance to read output from pointer check
"RTN","ORCMEDT9",173,0)
 N X,Y,DIR
"RTN","ORCMEDT9",174,0)
 S DIR(0)="FO",DIR("A")="Press any key to continue "_MSG
"RTN","ORCMEDT9",175,0)
 S DIR("?")="Enter any key to continue; enter ^ to exit."
"RTN","ORCMEDT9",176,0)
 D ^DIR
"RTN","ORCMEDT9",177,0)
 Q
"RTN","ORCMEDT9",178,0)
DELOK() ; -- Are you ready?
"RTN","ORCMEDT9",179,0)
 N X,Y,DIR
"RTN","ORCMEDT9",180,0)
 S DIR(0)="YA",DIR("A")="Do you want to delete the original quick order? ",DIR("B")="NO"
"RTN","ORCMEDT9",181,0)
 W ! D ^DIR
"RTN","ORCMEDT9",182,0)
 Q +Y
"RTN","ORCMEDT9",183,0)
MOVOK() ; -- Are you ready?
"RTN","ORCMEDT9",184,0)
 N X,Y,DIR
"RTN","ORCMEDT9",185,0)
 S DIR(0)="YA",DIR("A")="Do you want to MOVE the selected quick order(s)? ",DIR("B")="NO"
"RTN","ORCMEDT9",186,0)
 W ! D ^DIR
"RTN","ORCMEDT9",187,0)
 Q +Y
"RTN","ORCMEDT9",188,0)
HEADER ;header
"RTN","ORCMEDT9",189,0)
 W @IOF
"RTN","ORCMEDT9",190,0)
 W ".......Quick Order",$$REPEAT^XLFSTR(".",42),?60,"Type...",?67,"Disabled....."
"RTN","ORCMEDT9",191,0)
 Q
"RTN","ORCSAVE")
0^6^B127708326^B127544119
"RTN","ORCSAVE",1,0)
ORCSAVE ;SLC/MKB/JDL-Save ;Mar 06, 2018@10:27
"RTN","ORCSAVE",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**7,56,70,73,92,94,116,141,163,187,190,195,243,303,293,280,306,286,269,423,421,382,397**;Dec 17, 1997;Build 22
"RTN","ORCSAVE",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","ORCSAVE",4,0)
 ;
"RTN","ORCSAVE",5,0)
 ; DBIA 10103   ^XLFDT
"RTN","ORCSAVE",6,0)
 ;
"RTN","ORCSAVE",7,0)
NEW(ORDIALOG,ORDG,ORPKG,ORCAT,OREVENT,ORDUZ,ORLOG) ; -- New order
"RTN","ORCSAVE",8,0)
 ; Returns ORIFN = [new] order number, if created/saved
"RTN","ORCSAVE",9,0)
 D EN
"RTN","ORCSAVE",10,0)
 Q
"RTN","ORCSAVE",11,0)
 ;
"RTN","ORCSAVE",12,0)
XX ; -- save new/unreleased edited order into Orders file
"RTN","ORCSAVE",13,0)
 ;    Requires: ORDIALOG() = array of dialog values
"RTN","ORCSAVE",14,0)
 ;              ORIFN      = IFN of original order that was edited
"RTN","ORCSAVE",15,0)
 ;
"RTN","ORCSAVE",16,0)
 N OLDIFN S ORIFN=+ORIFN,OLDIFN=0
"RTN","ORCSAVE",17,0)
 I $S($P(^OR(100,ORIFN,3),U,3)=11:0,$P(^(3),U,3)'=10:1,$P(^(8,1,0),U,4)=2:0,1:1) S OLDIFN=ORIFN K ORIFN ; create new order if released or delayed&signed
"RTN","ORCSAVE",18,0)
 D EN Q:'ORIFN  S:'$G(ORDA) ORDA=1
"RTN","ORCSAVE",19,0)
 I $G(OLDIFN) D  ;save links between orders
"RTN","ORCSAVE",20,0)
 . S $P(^OR(100,ORIFN,3),U,5)=OLDIFN,$P(^(3),U,11)=1
"RTN","ORCSAVE",21,0)
 . S $P(^OR(100,OLDIFN,3),U,6)=ORIFN S:$D(^(5)) ^OR(100,ORIFN,5)=^OR(100,OLDIFN,5)
"RTN","ORCSAVE",22,0)
 I $D(^OR(100,+OLDIFN,0)) D
"RTN","ORCSAVE",23,0)
 . Q:'$G(OREVTDF)
"RTN","ORCSAVE",24,0)
 . N OLDEVT,OLDSTS,LSTACT,PATID,NOW,WHEN
"RTN","ORCSAVE",25,0)
 . S (OLDEVT,OLDSTS,LSTACT)=0
"RTN","ORCSAVE",26,0)
 . S NOW=$$NOW^XLFDT
"RTN","ORCSAVE",27,0)
 . S OLDEVT=$P(^OR(100,+OLDIFN,0),U,17),OLDSTS=$P(^OR(100,+OLDIFN,3),U,3)
"RTN","ORCSAVE",28,0)
 . ; Active status = 6 from #100.01
"RTN","ORCSAVE",29,0)
 . I (OLDEVT>0),OLDSTS=6 D
"RTN","ORCSAVE",30,0)
 . . S $P(^OR(100,+ORIFN,0),U,17)=OLDEVT
"RTN","ORCSAVE",31,0)
 . . S $P(^OR(100,+ORIFN,3),U,3)=11
"RTN","ORCSAVE",32,0)
 . . S LSTACT=$P($G(^OR(100,+ORIFN,3)),U,7)
"RTN","ORCSAVE",33,0)
 . . I $D(^OR(100,+ORIFN,8,LSTACT,0)) D
"RTN","ORCSAVE",34,0)
 . . . S $P(^OR(100,+ORIFN,8,LSTACT,0),U,15)=11
"RTN","ORCSAVE",35,0)
 . . . S PATID=$P(^OR(100,+ORIFN,0),U,2)
"RTN","ORCSAVE",36,0)
 . . . S WHEN=$P(^OR(100,+ORIFN,8,LSTACT,0),U)
"RTN","ORCSAVE",37,0)
 . . . S ^OR(100,"AC",PATID,9999999-WHEN,+ORIFN,LSTACT)=""
"RTN","ORCSAVE",38,0)
 Q
"RTN","ORCSAVE",39,0)
 ;
"RTN","ORCSAVE",40,0)
RN ; -- save new/unreleased renewal order into Orders file
"RTN","ORCSAVE",41,0)
 ;    Requires: ORDIALOG() = array of new dialog values
"RTN","ORCSAVE",42,0)
 ;              ORIFN      = IFN of original order that was renewed
"RTN","ORCSAVE",43,0)
 ;
"RTN","ORCSAVE",44,0)
 N OLDIFN S OLDIFN=+ORIFN K ORIFN
"RTN","ORCSAVE",45,0)
 D EN Q:'ORIFN  S:'$G(ORDA) ORDA=1
"RTN","ORCSAVE",46,0)
 S $P(^OR(100,ORIFN,3),U,5)=OLDIFN,$P(^(3),U,11)=2
"RTN","ORCSAVE",47,0)
 S $P(^OR(100,OLDIFN,3),U,6)=ORIFN S:$D(^(5)) ^OR(100,ORIFN,5)=^OR(100,OLDIFN,5)
"RTN","ORCSAVE",48,0)
 Q
"RTN","ORCSAVE",49,0)
 ;
"RTN","ORCSAVE",50,0)
EN ; -- save new/unreleased order in ORDIALOG() into Orders file
"RTN","ORCSAVE",51,0)
 ;    Requires: ORVP, ORNP [and ORL, ORTS, ORAPPT if available]
"RTN","ORCSAVE",52,0)
 ;    If defined: ORCAT,ORPKG,ORDG,ORLOG,ORDUZ,OREVENT,ORDCNTRL,ORSRC
"RTN","ORCSAVE",53,0)
 ;     (else use values from ORDIALOG and current state)
"RTN","ORCSAVE",54,0)
 ;
"RTN","ORCSAVE",55,0)
 N PKG,NOW,NODE,CNT,CDL,I,X,STS,SIGNREQD,LOC,TRSPEC,NATR,CATG,DG,LOG,USR,TYPE,ORK
"RTN","ORCSAVE",56,0)
 Q:'$G(ORVP)  Q:'$G(ORDIALOG)  Q:'$D(^ORD(101.41,+ORDIALOG,0))
"RTN","ORCSAVE",57,0)
 S NOW=$$NOW^XLFDT,SIGNREQD=+$P(^ORD(101.41,+ORDIALOG,0),U,6)
"RTN","ORCSAVE",58,0)
 S CATG=$S($L($G(ORCAT)):ORCAT,1:$S($$INPT^ORCD:"I",1:"O"))
"RTN","ORCSAVE",59,0)
 S PKG=$S($G(ORPKG):ORPKG,1:$P(^ORD(101.41,+ORDIALOG,0),U,7))
"RTN","ORCSAVE",60,0)
 S LOG=$S($G(ORLOG):ORLOG,1:+$E(NOW,1,12)),USR=$S($G(ORDUZ):ORDUZ,1:DUZ)
"RTN","ORCSAVE",61,0)
 I $G(ORIFN),$D(^OR(100,ORIFN,0)) S STS=$P(^(3),U,3) G EN2 ; unrel order
"RTN","ORCSAVE",62,0)
 S DG=$S($G(ORDG):+ORDG,1:$P(^ORD(101.41,+ORDIALOG,0),U,5))
"RTN","ORCSAVE",63,0)
 I $G(OREVENT),"^PSO^RA^"'["^"_$$GET1^DIQ(9.4,+PKG_",",1)_"^",'$G(DGPMT) S LOC="",TRSPEC="" ; p286 added radiology package
"RTN","ORCSAVE",64,0)
 E  S LOC=$G(ORL),TRSPEC=$G(ORTS)
"RTN","ORCSAVE",65,0)
 S TYPE=$S("^B^C^X^P^0^"[(U_$G(ORSRC)_U):ORSRC,$G(ORDCNTRL)="SN":"P",1:0)
"RTN","ORCSAVE",66,0)
 ;S LOG=$S($G(ORLOG):ORLOG,1:+$E(NOW,1,12)),USR=$S($G(ORDUZ):ORDUZ,1:DUZ) moved up before EN2 call
"RTN","ORCSAVE",67,0)
 S NATR=+$O(^ORD(100.02,"C","E",0)) ;assume Elec Entered until changed
"RTN","ORCSAVE",68,0)
 S STS=$S($G(OREVENT):10,1:11),ORIFN=$$NEXTIFN Q:'ORIFN
"RTN","ORCSAVE",69,0)
EN1 S ^OR(100,ORIFN,0)=ORIFN_U_ORVP_U_U_$G(ORNP)_U_+ORDIALOG_";ORD(101.41,^"_USR_U_LOG_U_U_U_LOC_U_DG_U_CATG_U_TRSPEC_U_PKG_U_U_SIGNREQD_U_$G(OREVENT)_U_$G(ORAPPT)
"RTN","ORCSAVE",70,0)
 S ^OR(100,ORIFN,3)=LOG_"^90^"_STS_U_$S($G(ORIT):ORIT_";ORD(101.41,",1:"")_U_$G(ORDIALOG("PREV"))_"^^1^^^^"_TYPE
"RTN","ORCSAVE",71,0)
 S ^OR(100,ORIFN,8,0)="^100.008DA^1^1",^OR(100,ORIFN,8,1,0)=LOG_"^NW^"_$G(ORNP)_U_$S(SIGNREQD:2,1:3)_"^^^^^^^^"_NATR_U_USR_"^1^"_STS,^OR(100,ORIFN,8,"C","NW",1)=""
"RTN","ORCSAVE",72,0)
 S ^OR(100,"AF",LOG,ORIFN,1)=""
"RTN","ORCSAVE",73,0)
 S ^OR(100,"C",+ORDIALOG_";ORD(101.41,",ORIFN)=""  ;patch 423
"RTN","ORCSAVE",74,0)
 S:+$G(ORIT) ^OR(100,"D",+ORIT_";ORD(101.41,",ORIFN)=""  ;patch 423
"RTN","ORCSAVE",75,0)
 S ^OR(100,"ACT",ORVP,9999999-LOG,+DG,ORIFN,1)=""
"RTN","ORCSAVE",76,0)
 ;US10045 - PB - Nov 19, 2015 modification to capture the order create date/time with seconds in HMP(800000 orders multiple to track seconds
"RTN","ORCSAVE",77,0)
 D:$P(ORVP,";",2)="DPT("
"RTN","ORCSAVE",78,0)
 . N RSLT,VALS
"RTN","ORCSAVE",79,0)
 . S VALS(.02)=$$NOW^XLFDT
"RTN","ORCSAVE",80,0)
 . D ADDORDR^HMPOR(.RSLT,.VALS,ORIFN,+ORVP)  ;ORVP is variable pointer
"RTN","ORCSAVE",81,0)
 . Q:RSLT<0  ; sub-file entry not created
"RTN","ORCSAVE",82,0)
 . D COMP^ORMBLDOR(+$G(ORIFN)) ;Nov 12, 2015 - PB - trigger unsolicited sync action when order is saved
"RTN","ORCSAVE",83,0)
 ;
"RTN","ORCSAVE",84,0)
 S:STS'=10 ^OR(100,"AC",ORVP,9999999-LOG,ORIFN,1)=""
"RTN","ORCSAVE",85,0)
 S:SIGNREQD ^OR(100,"AS",ORVP,9999999-LOG,ORIFN,1)=""
"RTN","ORCSAVE",86,0)
 S:$G(OREVENT) ^OR(100,"AEVNT",ORVP,OREVENT,ORIFN)=""
"RTN","ORCSAVE",87,0)
 ;check if OR GTX STUDY REASON is in ORDIALOG and strip out control characters
"RTN","ORCSAVE",88,0)
 N ORRFSID
"RTN","ORCSAVE",89,0)
 S ORRFSID=$O(^ORD(101.41,"B","OR GTX STUDY REASON",""))
"RTN","ORCSAVE",90,0)
 I ORRFSID,$D(ORDIALOG(ORRFSID,1)) D
"RTN","ORCSAVE",91,0)
 .N X,I
"RTN","ORCSAVE",92,0)
 .S X=ORDIALOG(ORRFSID,1)
"RTN","ORCSAVE",93,0)
 .F I=1:1:31 S X=$TR(X,$C(I))
"RTN","ORCSAVE",94,0)
 .S ORDIALOG(ORRFSID,1)=X
"RTN","ORCSAVE",95,0)
EN2 S ORIFN=+ORIFN D RESPONSE ; save responses
"RTN","ORCSAVE",96,0)
 I $P(^OR(100,ORIFN,0),"^",5) D  ;Copy orders PKI fix
"RTN","ORCSAVE",97,0)
 . N OI,ORPKIU
"RTN","ORCSAVE",98,0)
 . S OI=+$O(^OR(100,ORIFN,4.5,"ID","ORDERABLE",0)),OI=+$G(^OR(100,ORIFN,4.5,OI,1)) Q:'OI
"RTN","ORCSAVE",99,0)
 . I PKG'=$O(^DIC(9.4,"B","OUTPATIENT PHARMACY",0)) Q
"RTN","ORCSAVE",100,0)
 . S ORPKIU=0 I $D(^ORD(100.7,"C",DUZ)) S ORPKIU=1
"RTN","ORCSAVE",101,0)
 . D PKI^ORWDPS1(.ORY,OI,CATG,+ORVP,ORPKIU)
"RTN","ORCSAVE",102,0)
 . I $E($G(ORY))=2 S ORDEA=ORY
"RTN","ORCSAVE",103,0)
 K ^OR(100,ORIFN,8,1,.1) D ORDTEXT^ORCSAVE1(ORIFN_";1") ; order text
"RTN","ORCSAVE",104,0)
 S NODE=$G(^OR(100,ORIFN,8,1,0)) D  S ^OR(100,ORIFN,8,1,0)=NODE
"RTN","ORCSAVE",105,0)
 . S $P(NODE,U,3)=$G(ORNP)
"RTN","ORCSAVE",106,0)
 . S $P(NODE,U,13)=USR
"RTN","ORCSAVE",107,0)
 S NODE=$G(^OR(100,ORIFN,0)) D  S ^OR(100,ORIFN,0)=NODE
"RTN","ORCSAVE",108,0)
 . S $P(NODE,U,4)=$G(ORNP)
"RTN","ORCSAVE",109,0)
 . S I=$O(^OR(100,ORIFN,4.5,"ID","LOCATION",0))
"RTN","ORCSAVE",110,0)
 . I I,$P(NODE,U,10) S X=+$G(^OR(100,ORIFN,4.5,+I,1)) S:X $P(NODE,U,10)=X_";SC(" ;reset Loc if prev value
"RTN","ORCSAVE",111,0)
 . S I=$O(^OR(100,ORIFN,4.5,"ID","CLASS",0))
"RTN","ORCSAVE",112,0)
 . I I S X=$G(^OR(100,ORIFN,4.5,+I,1)) S:"^I^O^"[(U_X_U) $P(NODE,U,12)=X
"RTN","ORCSAVE",113,0)
 S $P(^OR(100,ORIFN,3),U)=NOW
"RTN","ORCSAVE",114,0)
 D DELOCC^OROCAPI1(ORIFN,"ACCEPTANCE_CPRS")
"RTN","ORCSAVE",115,0)
 I $G(ORCHECK) D  ; save order checks
"RTN","ORCSAVE",116,0)
 . N ORCROC
"RTN","ORCSAVE",117,0)
 . S (CNT,CDL)=0 F  S CDL=$O(ORCHECK("NEW",CDL)) Q:CDL'>0  S I=0 D
"RTN","ORCSAVE",118,0)
 . . F  S I=$O(ORCHECK("NEW",CDL,I)) Q:I'>0  D
"RTN","ORCSAVE",119,0)
 . . . I $D(ORCHECK("NEW",CDL,I,0)) D
"RTN","ORCSAVE",120,0)
 . . . . N J S J=0,ORCHECK("NEW",CDL,I)=ORCHECK("NEW",CDL,I,J) F  S J=$O(ORCHECK("NEW",CDL,I,J)) Q:'J  S ORCHECK("NEW",CDL,I)=ORCHECK("NEW",CDL,I)_ORCHECK("NEW",CDL,I,J)
"RTN","ORCSAVE",121,0)
 . . . S X=ORCHECK("NEW",CDL,I)
"RTN","ORCSAVE",122,0)
 . . . S ORK(I,1)=+ORIFN_U_"ACCEPTANCE_CPRS"_U_DUZ_U_$$NOW^XLFDT_U_$P(X,U)_U_CDL
"RTN","ORCSAVE",123,0)
 . . . S ORK(I,2,1)=$P(X,U,3)
"RTN","ORCSAVE",124,0)
 . . . I $E(ORK(I,2,1),0,2)="||" D
"RTN","ORCSAVE",125,0)
 . . . . N ORGLOB,ORRULE,ORI,ORLINE
"RTN","ORCSAVE",126,0)
 . . . . S ORGLOB=$P($P(ORK(I,2,1),"||",2),"&"),ORRULE=$P($P(ORK(I,2,1),"||",2),"&",2)
"RTN","ORCSAVE",127,0)
 . . . . S ORCROC(I)=$P($P(ORK(I,2,1),"||",2),"&",3)_U_$P($P(ORK(I,2,1),"||",2),"&",4)
"RTN","ORCSAVE",128,0)
 . . . . S ORK(I,2,1)=ORRULE,ORI=0,ORLINE=2
"RTN","ORCSAVE",129,0)
 . . . . F  S ORI=$O(^TMP($J,"ORK XTRA TXT",ORGLOB,ORRULE,ORI)) Q:'ORI  S ORK(I,2,ORLINE)=^TMP($J,"ORK XTRA TXT",ORGLOB,ORRULE,ORI),ORLINE=ORLINE+1
"RTN","ORCSAVE",130,0)
 . I $D(ORK) D
"RTN","ORCSAVE",131,0)
 . . N OCRET,ORKI
"RTN","ORCSAVE",132,0)
 . . D SAVEOC^OROCAPI1(.ORK,.OCRET)
"RTN","ORCSAVE",133,0)
 . . I $D(ORCROC) D
"RTN","ORCSAVE",134,0)
 . . . N ORCROCI S ORCROCI=0 F  S ORCROCI=$O(ORCROC(ORCROCI)) Q:'ORCROCI  D
"RTN","ORCSAVE",135,0)
 . . . . N OCINST S OCINST=$O(OCRET(ORCROCI,"")) Q:'OCINST  D
"RTN","ORCSAVE",136,0)
 . . . . . S ^ORD(100.05,OCINST,12)=ORCROC(ORCROCI)
"RTN","ORCSAVE",137,0)
 . . S ORKI=0 F  S ORKI=$O(ORK(ORKI)) Q:'ORKI  D
"RTN","ORCSAVE",138,0)
 . . . N OCINST,OCTXT S OCTXT=$G(ORK(ORKI,2,1))
"RTN","ORCSAVE",139,0)
 . . . S OCINST=$O(OCRET(ORKI,0))
"RTN","ORCSAVE",140,0)
 . . . N ORMONOI,ORMONOQ S ORMONOI=0,ORMONOQ=0 F  Q:ORMONOQ=1  S ORMONOI=$O(^TMP($J,"ORMONOGRAPH",ORMONOI)) Q:'ORMONOI  D
"RTN","ORCSAVE",141,0)
 . . . . I OCTXT[$G(^TMP($J,"ORMONOGRAPH",ORMONOI,"OC")) D
"RTN","ORCSAVE",142,0)
 . . . . . S ORMONOQ=1
"RTN","ORCSAVE",143,0)
 . . . . . S ^ORD(100.05,OCINST,17)=^TMP($J,"ORMONOGRAPH",ORMONOI,"INT")
"RTN","ORCSAVE",144,0)
 . . . . . M ^ORD(100.05,OCINST,16)=^TMP($J,"ORMONOGRAPH",ORMONOI,"DATA")
"RTN","ORCSAVE",145,0)
 . . . . . S ^ORD(100.05,OCINST,16,0)="^^"_$O(^ORD(100.05,OCINST,16,""),-1)_U_$O(^ORD(100.05,OCINST,16,""),-1)_U_+$$NOW^XLFDT_U
"RTN","ORCSAVE",146,0)
 . . K ^TMP($J,"ORMONOGRAPH")
"RTN","ORCSAVE",147,0)
 . . K ^TMP($J,"ORK XTRA TXT")
"RTN","ORCSAVE",148,0)
 K ORDEA
"RTN","ORCSAVE",149,0)
ENQ Q
"RTN","ORCSAVE",150,0)
 ;
"RTN","ORCSAVE",151,0)
NEXTIFN() ; -- Returns next available ORIFN
"RTN","ORCSAVE",152,0)
 N I,HDR,LAST,TOTAL,DA
"RTN","ORCSAVE",153,0)
 L +^OR(100,0):$S($G(DILOCKTM)>0:DILOCKTM,1:5)
"RTN","ORCSAVE",154,0)
 I '$T Q "^"
"RTN","ORCSAVE",155,0)
 S HDR=$G(^OR(100,0)),TOTAL=+$P(HDR,U,4),LAST=$O(^OR(100,"?"),-1)
"RTN","ORCSAVE",156,0)
 S I=LAST\1 F I=(I+1):1 Q:'$D(^OR(100,I,0))
"RTN","ORCSAVE",157,0)
 S DA=I,^OR(100,DA,0)=DA,$P(HDR,U,3,4)=DA_U_(TOTAL+1)
"RTN","ORCSAVE",158,0)
 S ^OR(100,0)=HDR L -^OR(100,0)
"RTN","ORCSAVE",159,0)
 Q DA
"RTN","ORCSAVE",160,0)
 ;
"RTN","ORCSAVE",161,0)
RESPONSE ; -- Save responses in ORDIALOG() into ^OR(100,ORIFN,4.5)
"RTN","ORCSAVE",162,0)
 N PROMPT,CNT,ITM,TYPE,INST,VALUE,I,START,PAT,X
"RTN","ORCSAVE",163,0)
 S PAT=$P(^OR(100,ORIFN,0),U,2),START=$P(^(0),U,8) K ^(4.5)
"RTN","ORCSAVE",164,0)
 S (PROMPT,CNT)=0 F  S PROMPT=$O(ORDIALOG(PROMPT)) Q:PROMPT'>0  D
"RTN","ORCSAVE",165,0)
 . S ITM=$G(ORDIALOG(PROMPT)) Q:'ITM
"RTN","ORCSAVE",166,0)
 . S TYPE=$E($G(ORDIALOG(PROMPT,0))) Q:'$L(TYPE)
"RTN","ORCSAVE",167,0)
 . S INST=0 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:INST'>0  D
"RTN","ORCSAVE",168,0)
 . . S VALUE=$G(ORDIALOG(PROMPT,INST)) Q:VALUE=""  S CNT=CNT+1
"RTN","ORCSAVE",169,0)
 . . S ^OR(100,ORIFN,4.5,CNT,0)=+ITM_U_PROMPT_U_INST_U_$P(ITM,U,2)
"RTN","ORCSAVE",170,0)
 . . S:$L($P(ITM,U,2)) ^OR(100,ORIFN,4.5,"ID",$P(ITM,U,2),CNT)=""
"RTN","ORCSAVE",171,0)
 . . I VALUE<1,TYPE="N" S VALUE=0_+VALUE I VALUE="00" S VALUE=0
"RTN","ORCSAVE",172,0)
 . . S:TYPE'="W" ^OR(100,ORIFN,4.5,CNT,1)=VALUE
"RTN","ORCSAVE",173,0)
 . . M:TYPE="W" ^OR(100,ORIFN,4.5,CNT,2)=@VALUE ; array root
"RTN","ORCSAVE",174,0)
 S ^OR(100,ORIFN,4.5,0)="^100.045A^"_CNT_U_CNT
"RTN","ORCSAVE",175,0)
R1 ; [Reset] Orderables
"RTN","ORCSAVE",176,0)
 I $D(^OR(100,ORIFN,.1)) S I=0 F  S I=$O(^OR(100,ORIFN,.1,I)) Q:I'>0  S X=$G(^(I,0)) I X,PAT,START K ^OR(100,"AOI",X,PAT,9999999-START,ORIFN) ; kill xref
"RTN","ORCSAVE",177,0)
 K ^OR(100,ORIFN,.1) I $D(^OR(100,ORIFN,4.5,"ID","ORDERABLE")) D
"RTN","ORCSAVE",178,0)
 . S (I,CNT)=0
"RTN","ORCSAVE",179,0)
 . F  S I=$O(^OR(100,ORIFN,4.5,"ID","ORDERABLE",I)) Q:I'>0  D
"RTN","ORCSAVE",180,0)
 . . S X=$G(^OR(100,ORIFN,4.5,I,1)) Q:'X
"RTN","ORCSAVE",181,0)
 . . S CNT=CNT+1,^OR(100,ORIFN,.1,CNT,0)=X,^OR(100,ORIFN,.1,"B",X,CNT)=""
"RTN","ORCSAVE",182,0)
 . . I PAT,START S ^OR(100,"AOI",X,PAT,9999999-START,ORIFN)=""
"RTN","ORCSAVE",183,0)
 . S ^OR(100,ORIFN,.1,0)="^100.001PA^"_CNT_U_CNT
"RTN","ORCSAVE",184,0)
 Q
"RTN","ORCSAVE",185,0)
 ;
"RTN","ORCSAVE",186,0)
RESUME(IFN) ; -- add Response nodes for RESUME tray service
"RTN","ORCSAVE",187,0)
 ; S ^OR(100,+IFN,4.5,<next>,0)=DT_"^^^RESUME",^(1)=1
"RTN","ORCSAVE",188,0)
 ;
"RTN","ORCSAVE",189,0)
 N X,Y,DA,DIC,DLAYGO
"RTN","ORCSAVE",190,0)
 S DIC="^OR(100,"_+IFN_",4.5,",DIC(0)="LX",DA(1)=+IFN,X=DT
"RTN","ORCSAVE",191,0)
 S DIC("DR")=".04///RESUME",DIC("P")=$P(^DD(100,4.5,0),U,2),DLAYGO=100
"RTN","ORCSAVE",192,0)
 D ^DIC S:Y ^OR(100,+IFN,4.5,+Y,1)=1
"RTN","ORCSAVE",193,0)
 Q
"RTN","ORCSAVE",194,0)
 ;
"RTN","ORCSAVE",195,0)
PROVIDER(ORDER,PROV) ; -- Change PROVider assigned to ORDER
"RTN","ORCSAVE",196,0)
 Q:'$G(ORDER)  Q:'$G(PROV)
"RTN","ORCSAVE",197,0)
 N ORACT S ORACT=+$P(ORDER,";",2) S:'ORACT ORACT=1
"RTN","ORCSAVE",198,0)
 S $P(^OR(100,+ORDER,8,ORACT,0),U,3)=PROV
"RTN","ORCSAVE",199,0)
 S:ORACT=1 $P(^OR(100,+ORDER,0),U,4)=PROV
"RTN","ORCSAVE",200,0)
 Q
"RTN","ORCSAVE",201,0)
 ;
"RTN","ORCSAVE",202,0)
ACTION(CODE,DA,PROV,REASON,WHEN,WHO) ; -- save new action
"RTN","ORCSAVE",203,0)
 N NEXT,TOTAL,HDR,LAST,X,PAT,DGRP,SIG,NATR,TXT S DA=+DA
"RTN","ORCSAVE",204,0)
 Q:'$D(^OR(100,DA,0)) 0 Q:$G(CODE)'?2U 0
"RTN","ORCSAVE",205,0)
 S:'$G(WHEN) WHEN=+$E($$NOW^XLFDT,1,12) S:'$G(WHO) WHO=DUZ
"RTN","ORCSAVE",206,0)
 S NATR=+$O(^ORD(100.02,"C","E",0)) ;assume Elec Entered until changed
"RTN","ORCSAVE",207,0)
 S PAT=$P(^OR(100,DA,0),U,2),DGRP=$P(^(0),U,11),SIG=$P(^(0),U,16),X=+$P($G(^(3)),U,7),HDR=$G(^(8,0))
"RTN","ORCSAVE",208,0)
 S:X'>0 X=1 S TXT=$P($G(^OR(100,DA,8,X,0)),U,14) ;current actn's txt ptr
"RTN","ORCSAVE",209,0)
 S:HDR="" HDR="^100.008DA^^" S TOTAL=+$P(HDR,U,4)
"RTN","ORCSAVE",210,0)
 S LAST=$O(^OR(100,DA,8,"C",CODE,"?"),-1) I LAST D
"RTN","ORCSAVE",211,0)
 . S X=$G(^OR(100,DA,8,LAST,0)) Q:$P(X,U,15)'=11  Q:$P(X,U,4)'=2
"RTN","ORCSAVE",212,0)
 . S NEXT=LAST I PAT,$P(X,U) D  ; kill old xref entries
"RTN","ORCSAVE",213,0)
 . . K:DGRP ^OR(100,"ACT",PAT,(9999999-$P(X,U)),DGRP,DA,NEXT)
"RTN","ORCSAVE",214,0)
 . . K ^OR(100,"AC",PAT,(9999999-$P(X,U)),DA,NEXT),^OR(100,"AS",PAT,(9999999-$P(X,U)),DA,NEXT),^OR(100,"AF",$P(X,U),DA,NEXT)
"RTN","ORCSAVE",215,0)
 S:'$G(NEXT) NEXT=$O(^OR(100,DA,8,"?"),-1)+1,TOTAL=TOTAL+1
"RTN","ORCSAVE",216,0)
 S ^OR(100,DA,8,NEXT,0)=WHEN_U_CODE_U_$G(PROV)_U_$S(SIG:2,1:3)_"^^^^^^^^"_NATR_U_WHO_U_TXT_"^11",^OR(100,DA,8,"C",CODE,NEXT)=""
"RTN","ORCSAVE",217,0)
 S ^OR(100,"AF",WHEN,DA,NEXT)=""
"RTN","ORCSAVE",218,0)
 I PAT,DGRP S ^OR(100,"ACT",PAT,9999999-WHEN,DGRP,DA,NEXT)=""
"RTN","ORCSAVE",219,0)
 I PAT S ^OR(100,"AC",PAT,9999999-WHEN,DA,NEXT)=""
"RTN","ORCSAVE",220,0)
 I SIG S ^OR(100,"AS",PAT,9999999-WHEN,DA,NEXT)=""
"RTN","ORCSAVE",221,0)
 S:$L($G(REASON)) ^OR(100,DA,8,NEXT,1)=REASON
"RTN","ORCSAVE",222,0)
 S $P(HDR,U,3,4)=NEXT_U_TOTAL,^OR(100,DA,8,0)=HDR
"RTN","ORCSAVE",223,0)
 ;
"RTN","ORCSAVE",224,0)
 D   ; DE3504 - Jan 19, 2016 ,US10045 - PB capture the DC of an order not signed in HMP(800000)
"RTN","ORCSAVE",225,0)
 . N FLD,HMDFN,HMORIS,JDSNOW,RSLT,SRVRNUM,VALS,ORIFN
"RTN","ORCSAVE",226,0)
 . S ORIFN=DA,HMDFN=+$P(^OR(100,+ORIFN,0),U,2),SRVRNUM=$$SRVRNO^HMPOR(HMDFN)
"RTN","ORCSAVE",227,0)
 . Q:'SRVRNUM  ; patient not in the HMP(800000 file
"RTN","ORCSAVE",228,0)
 . S HMORIS=$$ORDRCHK^HMPOR(+ORIFN,HMDFN)  ; does order exist?  ; Jan 26, 2016 - DE3584
"RTN","ORCSAVE",229,0)
 . S JDSNOW=$$NOW^XLFDT
"RTN","ORCSAVE",230,0)
 . ;^(#.03)SIGNED BY^(#.04)SIGNED DATE/TIME^(#.14)ORDER ACTION^(#.15)ACTION DATE/TIME
"RTN","ORCSAVE",231,0)
 . S VALS(.03)=$G(WHO),VALS(.14)=$G(CODE),VALS(.15)=JDSNOW  ; SIGNED BY updated to reflect action user
"RTN","ORCSAVE",232,0)
 . S:$G(SIG)'=2 VALS(.04)=JDSNOW  ; SIG=2 means NOT SIGNED, don't update SIGNED DATE/TIME
"RTN","ORCSAVE",233,0)
 . D:HMORIS UPDTORDR^HMPOR(.RSLT,.VALS,+ORIFN,HMDFN)  ; order exists update it
"RTN","ORCSAVE",234,0)
 . D:'HMORIS ADDORDR^HMPOR(.RSLT,.VALS,+ORIFN,HMDFN)  ; create new order in HMP(800000)
"RTN","ORCSAVE",235,0)
 . D COMP^ORMBLDOR(+$G(ORIFN))  ; send message for completed orders
"RTN","ORCSAVE",236,0)
 ; end DE3504
"RTN","ORCSAVE",237,0)
 Q NEXT
"RTN","ORCSAVE",238,0)
 ;
"RTN","ORCSAVE",239,0)
SET(DLG) ; -- Create new parent for order set ORDIALOG
"RTN","ORCSAVE",240,0)
 ; Returns ORPIFN = ifn of new parent order for set
"RTN","ORCSAVE",241,0)
 ;
"RTN","ORCSAVE",242,0)
 Q:'$G(ORVP)  Q:'$G(DLG)  N OR0,PKG,NOW,CATG,STS,ORLOC,TRSPEC,X
"RTN","ORCSAVE",243,0)
 S OR0=$G(^ORD(101.41,DLG,0)) Q:OR0=""  S ORPIFN=$$NEXTIFN Q:'ORPIFN
"RTN","ORCSAVE",244,0)
 S PKG=$O(^DIC(9.4,"C","OR",0)),CATG=$S($$INPT^ORCD:"I",1:"O"),STS=$S($G(OREVENT):10,1:11),NOW=$S($G(ORSLOG):ORSLOG,1:+$E($$NOW^XLFDT,1,12))
"RTN","ORCSAVE",245,0)
 I $G(OREVENT) S ORLOC="",TRSPEC=""
"RTN","ORCSAVE",246,0)
 S ^OR(100,ORPIFN,0)=ORPIFN_U_ORVP_U_U_$G(ORNP)_U_DLG_";ORD(101.41,^"_DUZ_U_NOW_U_U_U_ORLOC_U_U_CATG_U_TRSPEC_U_PKG_"^^^"_$G(OREVENT),^(3)=NOW_"^90^"_STS_U_$S($G(ORIT):ORIT_"ORD(101.41,",1:"")_"^^^1^^^^0^^"_+$P(OR0,U,6)
"RTN","ORCSAVE",247,0)
 S ^OR(100,ORPIFN,8,0)="^100.008DA^1^1",^(1,0)=NOW_"^NW^"_$G(ORNP)_"^^^^^^^^^^"_DUZ_"^^"_STS,^OR(100,ORPIFN,8,"C","NW",1)="",^OR(100,"AF",NOW,ORPIFN,1)=""
"RTN","ORCSAVE",248,0)
 S ^OR(100,"ACT",ORVP,9999999-NOW,ORPIFN,1)=""
"RTN","ORCSAVE",249,0)
 S:STS=11 ^OR(100,"AC",ORVP,9999999-NOW,ORPIFN,1)=""
"RTN","ORCSAVE",250,0)
 ; AEVNT ??
"RTN","ORCSAVE",251,0)
 S ^OR(100,ORPIFN,1,0)="^100.011^1^1",^(1,0)=$P(OR0,U,2) ; Order text
"RTN","ORCSAVE",252,0)
 Q
"RTN","ORMPS1")
0^9^B74117658^B71534901
"RTN","ORMPS1",1,0)
ORMPS1 ;SLC/MKB - Process Pharmacy ORM msgs cont ;May 30, 2019@11:25
"RTN","ORMPS1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**86,92,94,116,134,152,158,149,190,195,215,265,275,243,280,350,382,397**;Dec 17, 1997;Build 22
"RTN","ORMPS1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","ORMPS1",4,0)
 ;
"RTN","ORMPS1",5,0)
 ;
"RTN","ORMPS1",6,0)
UDOSE ; -- new Unit Dose order
"RTN","ORMPS1",7,0)
 N ADMIN,QT,DRUG,INSTR,DOSE,RTE,SCH,OI,URG,WP,DUR,STR,DRGNM,X,PSOI,PSDD,S0,ID,LDOSE,XC,NTE,S0,RXR
"RTN","ORMPS1",8,0)
 S ORDIALOG=+$O(^ORD(101.41,"AB","PSJ OR PAT OE",0))
"RTN","ORMPS1",9,0)
 I $G(ORAPPT)>0 S ORDG=+$O(^ORD(100.98,"B","CLINIC MEDICATIONS",0))
"RTN","ORMPS1",10,0)
 E  S ORDG=+$O(^ORD(100.98,"B","UNIT DOSE MEDICATIONS",0))
"RTN","ORMPS1",11,0)
 S ORPKG=+$$PKG("PSJ")
"RTN","ORMPS1",12,0)
 D GETDLG1^ORCD(ORDIALOG) S QT=$G(ORQT(1))
"RTN","ORMPS1",13,0)
 S DRUG=$$PTR("DISPENSE DRUG"),INSTR=$$PTR("INSTRUCTIONS")
"RTN","ORMPS1",14,0)
 S DOSE=$$PTR("DOSE"),RTE=$$PTR("ROUTE")
"RTN","ORMPS1",15,0)
 S SCH=$$PTR("SCHEDULE"),ADMIN=$$PTR("ADMIN TIMES")
"RTN","ORMPS1",16,0)
 S OI=$$PTR("ORDERABLE ITEM"),URG=$$PTR("URGENCY")
"RTN","ORMPS1",17,0)
 S WP=$$PTR("WORD PROCESSING 1"),DUR=$$PTR("DURATION")
"RTN","ORMPS1",18,0)
 S STR=$$PTR("STRENGTH"),DRGNM=$$PTR("DRUG NAME")
"RTN","ORMPS1",19,0)
UD1 S:RXO X=$P(RXO,"|",2),ORDIALOG(OI,1)=$$ORDITEM^ORM(X),PSOI=$P(X,U,4,5)
"RTN","ORMPS1",20,0)
 I '$G(ORDIALOG(OI,1)) S ORERR="Missing or invalid orderable item" Q
"RTN","ORMPS1",21,0)
 S PSDD=$P($$FIND^ORM(+RXE,3),U,4,5),ORDIALOG(DRUG,1)=+PSDD
"RTN","ORMPS1",22,0)
 S S0=$$FIND^ORM(+RXE,26)_"&"_$P($$FIND^ORM(+RXE,27),U,5)
"RTN","ORMPS1",23,0)
 S ID=$P(QT,U),LDOSE=$P(QT,U,8) I 'ID,S0 D
"RTN","ORMPS1",24,0)
 . N UNT,PTRN S UNT=$P(S0,"&",2),PTRN="1.N1"""_UNT_""""
"RTN","ORMPS1",25,0)
 . I LDOSE?@PTRN S $P(ID,"&",1,2)=+LDOSE_"&"_UNT_"&&" Q  ;pre-POE orders
"RTN","ORMPS1",26,0)
 . S:$P(PSOI,U,2)'[S0 ORDIALOG(STR,1)=$TR(S0,"&")
"RTN","ORMPS1",27,0)
 I 'ID,'S0 S ORDIALOG(DRGNM,1)=$$UNESC^ORMPS2($P(PSDD,U,2))
"RTN","ORMPS1",28,0)
 S:$L(ID) ORDIALOG(DOSE,1)=$$UNESC^ORMPS2($P(ID,"&",1,4)_"&"_LDOSE_"&"_+PSDD_"&"_S0)
"RTN","ORMPS1",29,0)
 I LDOSE="" D  I LDOSE="" S ORERR="Unable to determine instructions" Q
"RTN","ORMPS1",30,0)
 . I $G(RXC)'>0 D  Q  ;look for units/dose
"RTN","ORMPS1",31,0)
 .. S LDOSE=$P(ID,"&",3),X=$P(ID,"&",4) I 'LDOSE S LDOSE="" Q
"RTN","ORMPS1",32,0)
 .. S:'$L(X) X=$$UNESC^ORMPS2($P($$FIND^ORM(+RXE,7),U,5)) S:$L(X) LDOSE=LDOSE_" "_X
"RTN","ORMPS1",33,0)
 .. S ORDIALOG(DRGNM,1)=$$UNESC^ORMPS2($P(PSDD,U,2)) ;force use of DD
"RTN","ORMPS1",34,0)
 . F  D  Q:LDOSE'=""  S RXC=$O(@ORMSG@(RXC)) Q:'RXC  Q:$E(@ORMSG@(RXC),1,3)'="RXC"
"RTN","ORMPS1",35,0)
 .. S XC=@ORMSG@(RXC) Q:+$P($P(XC,"|",3),U,4)'=+PSOI
"RTN","ORMPS1",36,0)
 .. S LDOSE=$P(XC,"|",4)_$P($P(XC,"|",5),U,5) ;strength_units
"RTN","ORMPS1",37,0)
 S ORDIALOG(INSTR,1)=$$UNESC^ORMPS2(LDOSE)
"RTN","ORMPS1",38,0)
UD2 S NTE=$$NTE^ORMPS3(21) I NTE D
"RTN","ORMPS1",39,0)
 . N CNT,I S CNT=1,^TMP("ORWORD",$J,WP,1,CNT,0)=$$UNESC^ORMPS2($P(@ORMSG@(NTE),"|",4))
"RTN","ORMPS1",40,0)
 . I $O(@ORMSG@(NTE,0)) S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S CNT=CNT+1,^TMP("ORWORD",$J,WP,1,CNT,0)=$$UNESC^ORMPS2(@ORMSG@(NTE,I))
"RTN","ORMPS1",41,0)
 . S ^TMP("ORWORD",$J,WP,1,0)="^^"_CNT_U_CNT_U_DT_U
"RTN","ORMPS1",42,0)
 . S ORDIALOG(WP,1)="^TMP(""ORWORD"",$J,"_WP_",1)"
"RTN","ORMPS1",43,0)
 S RXR=$$RXR^ORMPS I 'RXR S ORERR="Missing or invalid RXR segment" Q
"RTN","ORMPS1",44,0)
 S ORDIALOG(RTE,1)=$P($P(RXR,"|",2),U,4),ORDIALOG(URG,1)=ORURG
"RTN","ORMPS1",45,0)
 S X=$P(QT,U,2)
"RTN","ORMPS1",46,0)
 S ORDIALOG(SCH,1)=$$UNESC^ORMPS2($P(X,"&"))
"RTN","ORMPS1",47,0)
 S:$L($P(X,"&",2)) ORDIALOG(ADMIN,1)=$P(X,"&",2)
"RTN","ORMPS1",48,0)
 S X=$P(QT,U,3) I $L(X) D  ;set only if previous order had duration
"RTN","ORMPS1",49,0)
 . N IFN S IFN=$S($G(ORIFN):+ORIFN,$P(ZRX,"|",2):+$P(ZRX,"|",2),1:0)
"RTN","ORMPS1",50,0)
 . S:$O(^OR(100,+IFN,4.5,"ID","DAYS",0)) ORDIALOG(DUR,1)=$$DURATION^ORMPS3(X)
"RTN","ORMPS1",51,0)
 D DOSETEXT^ORCDPS2 ;reset Instructions text, SIG
"RTN","ORMPS1",52,0)
 D UNESCARR^ORMPS2("ORDIALOG")
"RTN","ORMPS1",53,0)
 Q
"RTN","ORMPS1",54,0)
OUT ; -- new Outpt order
"RTN","ORMPS1",55,0)
 N OI,SIG,INSTR,DOSE,RTE,SCH,DUR,SC,STR,DRUG,PI,CONJ,PSOI,PSDD,S0,X,I,RXR,J,NTE,ZSC,CNT,PC
"RTN","ORMPS1",56,0)
 S ORDIALOG=+$O(^ORD(101.41,"AB","PSO OERR",0))
"RTN","ORMPS1",57,0)
 S ORDG=+$O(^ORD(100.98,"B","OUTPATIENT MEDICATIONS",0))
"RTN","ORMPS1",58,0)
 S PSDD=$P($$FIND^ORM(+RXE,3),U,4,5)
"RTN","ORMPS1",59,0)
 I $$ISSUPPLY^ORUTL3(+PSDD) D
"RTN","ORMPS1",60,0)
 . S ORDIALOG=+$O(^ORD(101.41,"AB","PSO SUPPLY",0))
"RTN","ORMPS1",61,0)
 . S ORDG=+$O(^ORD(100.98,"B","SUPPLIES/DEVICES",0))
"RTN","ORMPS1",62,0)
 S ORPKG=+$$PKG("PSO")
"RTN","ORMPS1",63,0)
 D GETDLG1^ORCD(ORDIALOG)
"RTN","ORMPS1",64,0)
 S OI=$$PTR("ORDERABLE ITEM"),SIG=$$PTR("SIG")
"RTN","ORMPS1",65,0)
 S INSTR=$$PTR("INSTRUCTIONS"),DOSE=$$PTR("DOSE")
"RTN","ORMPS1",66,0)
 S SCH=$$PTR("SCHEDULE"),DUR=$$PTR("DURATION")
"RTN","ORMPS1",67,0)
 S RTE=$$PTR("ROUTE"),SC=$$PTR("SERVICE CONNECTED")
"RTN","ORMPS1",68,0)
 S STR=$$PTR("STRENGTH"),DRUG=$$PTR("DISPENSE DRUG")
"RTN","ORMPS1",69,0)
 S PI=$$PTR("PATIENT INSTRUCTIONS"),CONJ=$$PTR("AND/THEN")
"RTN","ORMPS1",70,0)
 S PC=$$PTR("WORD PROCESSING 1")
"RTN","ORMPS1",71,0)
 S:RXO X=$P(RXO,"|",2),ORDIALOG(OI,1)=$$ORDITEM^ORM(X),PSOI=$P(X,U,4,5)
"RTN","ORMPS1",72,0)
 I '$G(ORDIALOG(OI,1)) S ORERR="Missing or invalid orderable item" Q
"RTN","ORMPS1",73,0)
 S ORDIALOG(DRUG,1)=+PSDD
"RTN","ORMPS1",74,0)
 S S0=$$FIND^ORM(+RXE,26)_"&"_$P($$FIND^ORM(+RXE,27),U,5)
"RTN","ORMPS1",75,0)
 I S0,$P(PSOI,U,2)'[S0 S ORDIALOG(STR,1)=$TR(S0,"&")
"RTN","ORMPS1",76,0)
 I 'S0,'$G(ORQT(1)) S ORDIALOG($$PTR("DRUG NAME"),1)=$$UNESC^ORMPS2($P(PSDD,U,2))
"RTN","ORMPS1",77,0)
OUT1 S ORDIALOG($$PTR("QUANTITY"),1)=$$FIND^ORM(+RXE,11)
"RTN","ORMPS1",78,0)
 S ORDIALOG($$PTR("REFILLS"),1)=$$FIND^ORM(+RXE,13)
"RTN","ORMPS1",79,0)
 S X=$$FIND^ORM(+RXE,23) S:$E(X)="D" X=+$E(X,2,99)
"RTN","ORMPS1",80,0)
 S:X ORDIALOG($$PTR("DAYS SUPPLY"),1)=X
"RTN","ORMPS1",81,0)
 I ZRX S X=$P(ZRX,"|",5) S:$L(X) ORDIALOG($$PTR("ROUTING"),1)=X
"RTN","ORMPS1",82,0)
 S:ORURG ORDIALOG($$PTR("URGENCY"),1)=ORURG F I=1:1:ORQT D
"RTN","ORMPS1",83,0)
 . S ORDIALOG(INSTR,I)=$$UNESC^ORMPS2($P(ORQT(I),U,8)),X=$P(ORQT(I),U)
"RTN","ORMPS1",84,0)
 . S:$L(X) ORDIALOG(DOSE,I)=$$UNESC^ORMPS2($P(X,"&",1,4)_"&"_$P(ORQT(I),U,8)_"&"_+PSDD_"&"_S0)
"RTN","ORMPS1",85,0)
 . S X=$P(ORQT(I),U,2) S:$L(X) ORDIALOG(SCH,I)=$$UNESC^ORMPS2(X)
"RTN","ORMPS1",86,0)
 . S X=$P(ORQT(I),U,3) S:$L(X) ORDIALOG(DUR,I)=$$DURATION^ORMPS3(X)
"RTN","ORMPS1",87,0)
 . S X=$P(ORQT(I),U,9) S:$L(X) ORDIALOG(CONJ,I)=$S(X="S":"T",1:X)
"RTN","ORMPS1",88,0)
 S RXR=$$RXR^ORMPS I RXR S ORDIALOG(RTE,1)=$P($P(RXR,"|",2),U,4) D
"RTN","ORMPS1",89,0)
 . S I=1,J=+RXR ;look for multiple RXR's
"RTN","ORMPS1",90,0)
 . F  S J=$O(@ORMSG@(J)) Q:J'>0  S RXR=@ORMSG@(J) Q:$E(RXR,1,3)'="RXR"  S I=I+1,ORDIALOG(RTE,I)=$P($P(RXR,"|",2),U,4)
"RTN","ORMPS1",91,0)
OUT2 S NTE=$$NTE^ORMPS3(6) I NTE D  ;Prov Comm ;D:'NTE PCOMM^ORMPS2
"RTN","ORMPS1",92,0)
 . S CNT=1,^TMP("ORWORD",$J,PC,1,CNT,0)=$$UNESC^ORMPS2($P(@ORMSG@(NTE),"|",4))
"RTN","ORMPS1",93,0)
 . I $O(@ORMSG@(NTE,0)) S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S CNT=CNT+1,^TMP("ORWORD",$J,PC,1,CNT,0)=$$UNESC^ORMPS2(@ORMSG@(NTE,I))
"RTN","ORMPS1",94,0)
 . S ^TMP("ORWORD",$J,PC,1,0)="^^"_CNT_U_CNT_U_DT_U
"RTN","ORMPS1",95,0)
 . S ORDIALOG(PC,1)="^TMP(""ORWORD"",$J,"_PC_",1)",ORDIALOG(PC,"FORMAT")="@" ;keep, don't show
"RTN","ORMPS1",96,0)
 . N XCNT,XCOMM,XCOMMENT,XORCOMM,XXCNT,XORIFN
"RTN","ORMPS1",97,0)
 . S XORIFN=$G(ORIFN) S:XORIFN="" XORIFN=$P(RXR,"|",2) Q:XORIFN=""
"RTN","ORMPS1",98,0)
 . S XCOMM=$O(^OR(100,+XORIFN,4.5,"ID","COMMENT",0)) Q:XCOMM=""
"RTN","ORMPS1",99,0)
 . S XCNT=0 F  S XCNT=$O(^TMP("ORWORD",$J,PC,1,XCNT)) Q:XCNT=""  S XCOMMENT=^TMP("ORWORD",$J,PC,1,XCNT,0) D
"RTN","ORMPS1",100,0)
 .. S XORCOMM=$G(^OR(100,+XORIFN,4.5,XCOMM,2,XCNT,0)),XXCNT=0
"RTN","ORMPS1",101,0)
 .. I XORCOMM="" F  S XXCNT=$O(^OR(100,+XORIFN,4.5,XCOMM,2,XXCNT)) Q:XXCNT=""  S XORCOMM=$G(^(XXCNT,0)) Q:XORCOMM'=""
"RTN","ORMPS1",102,0)
 .. I $G(XCOMMENT)=$G(XORCOMM) S ORDIALOG(PC,"FORMAT")="@"
"RTN","ORMPS1",103,0)
 S NTE=$$NTE^ORMPS3(7) I NTE D  ;Pat Instr
"RTN","ORMPS1",104,0)
 . S CNT=1,^TMP("ORWORD",$J,PI,1,CNT,0)=$$UNESC^ORMPS2($P(@ORMSG@(NTE),"|",4))
"RTN","ORMPS1",105,0)
 . I $O(@ORMSG@(NTE,0)) S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S CNT=CNT+1,^TMP("ORWORD",$J,PI,1,CNT,0)=$$UNESC^ORMPS2(@ORMSG@(NTE,I))
"RTN","ORMPS1",106,0)
 . S ^TMP("ORWORD",$J,PI,1,0)="^^"_CNT_U_CNT_U_DT_U
"RTN","ORMPS1",107,0)
 . S ORDIALOG(PI,1)="^TMP(""ORWORD"",$J,"_PI_",1)"
"RTN","ORMPS1",108,0)
 S NTE=$$NTE^ORMPS3(21) I NTE D  ;Sig
"RTN","ORMPS1",109,0)
 . S CNT=1,^TMP("ORWORD",$J,SIG,1,CNT,0)=$$UNESC^ORMPS2($P(@ORMSG@(NTE),"|",4))
"RTN","ORMPS1",110,0)
 . I $O(@ORMSG@(NTE,0)) S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S CNT=CNT+1,^TMP("ORWORD",$J,SIG,1,CNT,0)=$$UNESC^ORMPS2(@ORMSG@(NTE,I))
"RTN","ORMPS1",111,0)
 . S ^TMP("ORWORD",$J,SIG,1,0)="^^"_CNT_U_CNT_U_DT_U
"RTN","ORMPS1",112,0)
 . S ORDIALOG(SIG,1)="^TMP(""ORWORD"",$J,"_SIG_",1)"
"RTN","ORMPS1",113,0)
 . S ORDIALOG(PI,"FORMAT")="@" ;PI already included in Sig
"RTN","ORMPS1",114,0)
OUT3 I '$G(ORQT(1))!('NTE) D DOSETEXT^ORCDPS2 ;reset Instructions text, Sig
"RTN","ORMPS1",115,0)
 S ZSC=$$ZSC^ORMPS3,X=$P(ZSC,"|",2) I X?2.3U S ORDIALOG(SC,1)=$S(X="SC":1,1:0)
"RTN","ORMPS1",116,0)
 Q
"RTN","ORMPS1",117,0)
IV ; -- new IV order
"RTN","ORMPS1",118,0)
 N IVTYP,IVTYPE S IVTYP=$P(ZRX,"|",7) I IVTYP="",$$NUMADDS^ORMPS3'>1 G UDOSE
"RTN","ORMPS1",119,0)
 N SOLN,VOL,ADDS,STR,UNITS,RATE,URG,X,X1,X2,X3,I,J,TYPE,OI,WP,NTE,SCH
"RTN","ORMPS1",120,0)
 N DAYS,ROUTE,ADMIN,RXR,ADDFREQ
"RTN","ORMPS1",121,0)
 S ORDIALOG=+$O(^ORD(101.41,"AB","PSJI OR PAT FLUID OE",0))
"RTN","ORMPS1",122,0)
 I +$G(ORAPPT)>0 S ORDG=+$O(^ORD(100.98,"B","CLINIC INFUSIONS",0))
"RTN","ORMPS1",123,0)
 E  S ORDG=+$O(^ORD(100.98,"B",$S($P(ZRX,"|",7)="TPN":"TPN",1:"IV RX"),0))
"RTN","ORMPS1",124,0)
 S ORPKG=+$$PKG("PSJ") D GETDLG1^ORCD(ORDIALOG)
"RTN","ORMPS1",125,0)
 S SOLN=$$PTR("ORDERABLE ITEM"),VOL=$$PTR("VOLUME"),SCH=$$PTR("SCHEDULE")
"RTN","ORMPS1",126,0)
 S RATE=$$PTR("INFUSION RATE") S:ORURG ORDIALOG($$PTR("URGENCY"),1)=ORURG
"RTN","ORMPS1",127,0)
 S WP=$$PTR("WORD PROCESSING 1"),ADDS=$$PTR("ADDITIVE")
"RTN","ORMPS1",128,0)
 S ADDFREQ=$$PTR("ADDITIVE FREQUENCY")
"RTN","ORMPS1",129,0)
 S STR=$$PTR("STRENGTH PSIV"),UNITS=$$PTR("UNITS")
"RTN","ORMPS1",130,0)
 S DAYS=$$PTR("DURATION"),IVTYPE=$$PTR("IV TYPE"),ADMIN=$$PTR("ADMIN TIMES")
"RTN","ORMPS1",131,0)
IV1 S NTE=$$NTE^ORMPS3(21) I NTE D
"RTN","ORMPS1",132,0)
 . N CNT,I S CNT=1,^TMP("ORWORD",$J,WP,1,CNT,0)=$$UNESC^ORMPS2($P(@ORMSG@(NTE),"|",4))
"RTN","ORMPS1",133,0)
 . I $O(@ORMSG@(NTE,0)) S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S CNT=CNT+1,^TMP("ORWORD",$J,WP,1,CNT,0)=$$UNESC^ORMPS2(@ORMSG@(NTE,I))
"RTN","ORMPS1",134,0)
 . S ^TMP("ORWORD",$J,WP,1,0)="^^"_CNT_U_CNT_U_DT_U
"RTN","ORMPS1",135,0)
 . S ORDIALOG(WP,1)="^TMP(""ORWORD"",$J,"_WP_",1)"
"RTN","ORMPS1",136,0)
 N ORDAYS S ORDAYS=""
"RTN","ORMPS1",137,0)
 S:$D(RXO) ORDAYS=$P($P(RXO,"|",2),"^",3)
"RTN","ORMPS1",138,0)
 S:$L(ORDAYS) ORDAYS=$$IVLIM^ORMPS2(ORDAYS)
"RTN","ORMPS1",139,0)
 S:$L(ORDAYS) ORDIALOG(DAYS,1)=ORDAYS
"RTN","ORMPS1",140,0)
 S ORDIALOG(IVTYPE,1)=IVTYP
"RTN","ORMPS1",141,0)
 S X=$P($$FIND^ORM(+RXE,25),U,5)
"RTN","ORMPS1",142,0)
 S ORDIALOG(RATE,1)=$$FIND^ORM(+RXE,24)_$S($L(X):" "_X,1:""),(I,J)=0
"RTN","ORMPS1",143,0)
 F  D  S RXC=$O(@ORMSG@(RXC)) Q:'RXC  Q:$E(@ORMSG@(RXC),1,3)'="RXC"
"RTN","ORMPS1",144,0)
 . S X=@ORMSG@(RXC),TYPE=$P(X,"|",2),OI=$$ORDITEM^ORM($P(X,"|",3)) Q:'OI
"RTN","ORMPS1",145,0)
 . S X1=$P(X,"|",4),X2=$P($P(X,"|",5),U,5),X3=$P(X,"|",6)
"RTN","ORMPS1",146,0)
 . I $E(TYPE)="B" S J=J+1,ORDIALOG(SOLN,J)=OI,ORDIALOG(VOL,J)=X1 Q
"RTN","ORMPS1",147,0)
 . S I=I+1,ORDIALOG(ADDS,I)=OI,ORDIALOG(STR,I)=X1,ORDIALOG(UNITS,I)=X2,ORDIALOG(ADDFREQ,I)=$$ADDFRQCV^ORMBLDP1(X3,"I")
"RTN","ORMPS1",148,0)
IV2 ;
"RTN","ORMPS1",149,0)
 S RXR=$$RXR^ORMPS
"RTN","ORMPS1",150,0)
 S ROUTE=$P(RXR,"|",2)
"RTN","ORMPS1",151,0)
 S ORDIALOG($$PTR("ROUTE"),1)=$P(ROUTE,U,4)
"RTN","ORMPS1",152,0)
 I IVTYP="I" S X=$P($G(ORQT(1)),U,2) D
"RTN","ORMPS1",153,0)
 .S:$L($P(X,"&")) ORDIALOG(SCH,1)=$P(X,"&")
"RTN","ORMPS1",154,0)
 .S:$L($P(X,"&",2)) ORDIALOG(ADMIN,1)=$P(X,"&",2)
"RTN","ORMPS1",155,0)
 D UNESCARR^ORMPS2("ORDIALOG")
"RTN","ORMPS1",156,0)
 Q
"RTN","ORMPS1",157,0)
PKG(NMSP) ; -- Return Package file ptr for NMSP
"RTN","ORMPS1",158,0)
 N I S I=0
"RTN","ORMPS1",159,0)
 F  S I=+$O(^DIC(9.4,"C",NMSP,I)) Q:I<1  Q:'$O(^(I,0))  ;no Addl Prefs
"RTN","ORMPS1",160,0)
 Q I
"RTN","ORMPS1",161,0)
PTR(NAME) ; -- Returns ien of prompt NAME in Order Dialog file #101.41
"RTN","ORMPS1",162,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORMPS1",163,0)
QT ; -- Unpiece the Q/T field from RXE
"RTN","ORMPS1",164,0)
 I 'RXE S ORQT(1)=ORQT,ORQT=1 Q  ; nothing to reset
"RTN","ORMPS1",165,0)
 N X,Y,I,J,P,SEG,DONE K ORQT
"RTN","ORMPS1",166,0)
 S SEG=$G(@ORMSG@(+RXE)),X=$P(SEG,"|",2),(I,J,P,DONE)=0
"RTN","ORMPS1",167,0)
 F  D  Q:DONE
"RTN","ORMPS1",168,0)
 . S P=P+1,Y=$P(X,"~",P) I Y="" S DONE=1 Q
"RTN","ORMPS1",169,0)
 . I P<$L(X,"~") S I=I+1,ORQT(I)=Y Q
"RTN","ORMPS1",170,0)
 . I $L(SEG,"|")>2 S I=I+1,ORQT(I)=Y,DONE=1 Q
"RTN","ORMPS1",171,0)
 . S J=+$O(@ORMSG@(+RXE,J)) I J'>0 S I=I+1,ORQT(I)=Y,DONE=1 Q
"RTN","ORMPS1",172,0)
 . S SEG=$G(@ORMSG@(+RXE,J)),X=$P(SEG,"|"),P=1,I=I+1,ORQT(I)=Y_$P(X,"~")
"RTN","ORMPS1",173,0)
 S ORQT=I Q:'ORQT  ; else reset ORSTRT, ORSTOP, ORURG
"RTN","ORMPS1",174,0)
 S ORSTRT=$P(ORQT(1),U,4),ORSTOP=$P(ORQT(ORQT),U,5),ORURG=$P(ORQT(1),U,6)
"RTN","ORMPS1",175,0)
 S:ORSTRT ORSTRT=$$FMDATE^ORM(ORSTRT) S:ORSTOP ORSTOP=$$FMDATE^ORM(ORSTOP) S:$L(ORURG) ORURG=$$URGENCY^ORM(ORURG)
"RTN","ORMPS1",176,0)
 Q
"RTN","ORSPUTIL")
0^18^B24172750^B5339128
"RTN","ORSPUTIL",1,0)
ORSPUTIL ;SLC/JMH - SUPPLY CONVERSION UTILITY ;08/29/17  08:48
"RTN","ORSPUTIL",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**423,397**;Dec 17, 1997;Build 22
"RTN","ORSPUTIL",3,0)
 ;
"RTN","ORSPUTIL",4,0)
 ;
"RTN","ORSPUTIL",5,0)
 ;
"RTN","ORSPUTIL",6,0)
SUPPLYNF ;if OI is marked as NON-FORMULARY and SUPPLY then set QO-ONLY to yes for SUPPLY
"RTN","ORSPUTIL",7,0)
 W @IOF
"RTN","ORSPUTIL",8,0)
 W "This utility will convert all items from the ORDERABLE ITEMS file that are "
"RTN","ORSPUTIL",9,0)
 W !,"marked for both Supplies and Non-Formulary, to be QO-ONLY to YES for"
"RTN","ORSPUTIL",10,0)
 W !,"Supplies."
"RTN","ORSPUTIL",11,0)
 I '$$SURE("Are you sure you want to continue?") Q
"RTN","ORSPUTIL",12,0)
 N I
"RTN","ORSPUTIL",13,0)
 S I=0 F  S I=$O(^ORD(101.43,I)) Q:'I  D
"RTN","ORSPUTIL",14,0)
 .Q:'$D(^ORD(101.43,I,"PS"))
"RTN","ORSPUTIL",15,0)
 .Q:'$P(^ORD(101.43,I,"PS"),U,5)  ;quit if not set to supply
"RTN","ORSPUTIL",16,0)
 .Q:'$P(^ORD(101.43,I,"PS"),U,6)  ;quit if not set to non-formulary
"RTN","ORSPUTIL",17,0)
 .W !,"OI IEN: ",I,?20,"OI NAME: ",$P(^ORD(101.43,I,0),U)
"RTN","ORSPUTIL",18,0)
 .D SET("SPLY",I)
"RTN","ORSPUTIL",19,0)
 Q
"RTN","ORSPUTIL",20,0)
 ;
"RTN","ORSPUTIL",21,0)
COPYO2S ;if OI is marked QO-ONLY for OUTPATIENT Med then set QO-ONLY to yes for SUPPLY
"RTN","ORSPUTIL",22,0)
 W @IOF
"RTN","ORSPUTIL",23,0)
 W "This utility will convert all items from the ORDERABLE ITEMS file that are "
"RTN","ORSPUTIL",24,0)
 W !,"marked for Supplies and also set as QO-ONLY yes for Outpatient Meds,"
"RTN","ORSPUTIL",25,0)
 W !,"to be QO-ONLY to YES for Supplies."
"RTN","ORSPUTIL",26,0)
 I '$$SURE("Are you sure you want to continue?") Q
"RTN","ORSPUTIL",27,0)
 N I
"RTN","ORSPUTIL",28,0)
 S I=0 F  S I=$O(^ORD(101.43,I)) Q:'I  D
"RTN","ORSPUTIL",29,0)
 .Q:'$D(^ORD(101.43,I,"PS"))
"RTN","ORSPUTIL",30,0)
 .Q:'$P(^ORD(101.43,I,"PS"),U,5)  ;quit if not set to supply
"RTN","ORSPUTIL",31,0)
 .Q:'$$GET("O RX",I)  ;quit if not set to YES for QO-ONLY for outpatient meds
"RTN","ORSPUTIL",32,0)
 .W !,"OI IEN: ",I,?20,"OI NAME: ",$P(^ORD(101.43,I,0),U)
"RTN","ORSPUTIL",33,0)
 .D SET("SPLY",I)
"RTN","ORSPUTIL",34,0)
 Q
"RTN","ORSPUTIL",35,0)
 ;
"RTN","ORSPUTIL",36,0)
SUPPLYQO ; Convert Outpatient Med QO to Supply dialog
"RTN","ORSPUTIL",37,0)
 ;
"RTN","ORSPUTIL",38,0)
 N ORCOUNT,ORDGPSO,ORDGSUP,ORDLGOI,ORERR,ORERRFLAG,ORFDA,ORIEN,OROIIEN,ORX
"RTN","ORSPUTIL",39,0)
 ;
"RTN","ORSPUTIL",40,0)
 W @IOF
"RTN","ORSPUTIL",41,0)
 W "This utility will convert all Outpatient Medication quick orders that were"
"RTN","ORSPUTIL",42,0)
 W !,"built for orderable items that are considered supply items, to use the"
"RTN","ORSPUTIL",43,0)
 W !,"PSO SUPPLY dialog."
"RTN","ORSPUTIL",44,0)
 I '$$SURE("Are you sure you want to continue?") Q
"RTN","ORSPUTIL",45,0)
 W !!
"RTN","ORSPUTIL",46,0)
 ;
"RTN","ORSPUTIL",47,0)
 S ORDGPSO=+$O(^ORD(100.98,"B","OUTPATIENT MEDICATIONS",0))
"RTN","ORSPUTIL",48,0)
 I 'ORDGPSO D ERROR("Unable to find the OUTPATIENT MEDICATIONS display group.") Q
"RTN","ORSPUTIL",49,0)
 S ORDGSUP=+$O(^ORD(100.98,"B","SUPPLIES/DEVICES",0))
"RTN","ORSPUTIL",50,0)
 I 'ORDGSUP D ERROR("Unable to find the SUPPLIES/DEVICES display group.") Q
"RTN","ORSPUTIL",51,0)
 S ORDLGOI=+$O(^ORD(101.41,"B","OR GTX ORDERABLE ITEM",0))
"RTN","ORSPUTIL",52,0)
 I 'ORDLGOI D ERROR("Unable to find the OR GTX ORDERABLE ITEM dialog.") Q
"RTN","ORSPUTIL",53,0)
 ;
"RTN","ORSPUTIL",54,0)
 S ORCOUNT=0
"RTN","ORSPUTIL",55,0)
 S ORIEN=0
"RTN","ORSPUTIL",56,0)
 F  S ORIEN=$O(^ORD(101.41,ORIEN)) Q:'ORIEN  D
"RTN","ORSPUTIL",57,0)
 . ; Skip disabled quick order (field #3 not blank)
"RTN","ORSPUTIL",58,0)
 . I $P(^ORD(101.41,ORIEN,0),U,3)'="" Q
"RTN","ORSPUTIL",59,0)
 . ; Skip non-quick order
"RTN","ORSPUTIL",60,0)
 . I $P(^ORD(101.41,ORIEN,0),U,4)'="Q" Q
"RTN","ORSPUTIL",61,0)
 . ; Skip non-outpatient medications
"RTN","ORSPUTIL",62,0)
 . I $P(^ORD(101.41,ORIEN,0),U,5)'=ORDGPSO Q
"RTN","ORSPUTIL",63,0)
 . ;
"RTN","ORSPUTIL",64,0)
 . ; Determine if the orderable item is a supply
"RTN","ORSPUTIL",65,0)
 . S ORX=+$O(^ORD(101.41,ORIEN,6,"D",ORDLGOI,0))
"RTN","ORSPUTIL",66,0)
 . I 'ORX Q
"RTN","ORSPUTIL",67,0)
 . S OROIIEN=+$P($G(^ORD(101.41,ORIEN,6,ORX,1)),U,1)
"RTN","ORSPUTIL",68,0)
 . I 'OROIIEN Q
"RTN","ORSPUTIL",69,0)
 . I $P($P($G(^ORD(101.43,OROIIEN,0)),U,2),";",2)'="99PSP" Q
"RTN","ORSPUTIL",70,0)
 . I $$ISOISPLY^ORUTL3(OROIIEN) D
"RTN","ORSPUTIL",71,0)
 . . K ORERR,ORFDA
"RTN","ORSPUTIL",72,0)
 . . S ORFDA(101.41,ORIEN_",",5)=ORDGSUP
"RTN","ORSPUTIL",73,0)
 . . D FILE^DIE("K","ORFDA","ORERR")
"RTN","ORSPUTIL",74,0)
 . . I $D(ORERR) D
"RTN","ORSPUTIL",75,0)
 . . . D ERRORFM("Unable to convert quick order '"_$P($G(^ORD(101.41,ORIEN,0)),U,1)_"' (IEN #"_ORIEN_")",.ORERR)
"RTN","ORSPUTIL",76,0)
 . . . S ORERRFLAG=1
"RTN","ORSPUTIL",77,0)
 . . E  D
"RTN","ORSPUTIL",78,0)
 . . . W !,"QO IEN: ",ORIEN,?20,"QO NAME: ",$P($G(^ORD(101.41,ORIEN,0)),U,1)
"RTN","ORSPUTIL",79,0)
 . . . S ORCOUNT=ORCOUNT+1
"RTN","ORSPUTIL",80,0)
 ;
"RTN","ORSPUTIL",81,0)
 I $G(ORERRFLAG) D
"RTN","ORSPUTIL",82,0)
 . W !!,"There were some quick orders that could not be converted."
"RTN","ORSPUTIL",83,0)
 . W !,"Please see output above for more information."
"RTN","ORSPUTIL",84,0)
 . W !!,"Please log a CA SDM ticket for assistance.",!
"RTN","ORSPUTIL",85,0)
 E  D
"RTN","ORSPUTIL",86,0)
 . W !!,"The quick order conversion completed successfully."
"RTN","ORSPUTIL",87,0)
 ;
"RTN","ORSPUTIL",88,0)
 I ORCOUNT>0 D
"RTN","ORSPUTIL",89,0)
 . W !,ORCOUNT_" quick order"_$S(ORCOUNT=1:" was",1:"s were")_" converted.",!!
"RTN","ORSPUTIL",90,0)
 E  D
"RTN","ORSPUTIL",91,0)
 . W !,"No quick orders were converted"_$S('$G(ORERRFLAG):", as none met the search criteria.",1:"."),!!
"RTN","ORSPUTIL",92,0)
 H 1
"RTN","ORSPUTIL",93,0)
 ;
"RTN","ORSPUTIL",94,0)
 Q
"RTN","ORSPUTIL",95,0)
 ;
"RTN","ORSPUTIL",96,0)
GET(CODE,ORIEN) ;get the current status of QO-ONLY for a specific package type(CODE)
"RTN","ORSPUTIL",97,0)
 N DA,ORY S ORY=0
"RTN","ORSPUTIL",98,0)
 S DA=$O(^ORD(101.43,ORIEN,9,"B",CODE,""))
"RTN","ORSPUTIL",99,0)
 I DA D
"RTN","ORSPUTIL",100,0)
 .I $P($G(^ORD(101.43,ORIEN,9,DA,0)),U,2) S ORY=1
"RTN","ORSPUTIL",101,0)
 Q ORY
"RTN","ORSPUTIL",102,0)
 ;
"RTN","ORSPUTIL",103,0)
SET(CODE,ORIEN) ;set the status of QO-ONLY to YES for a specific package type(CODE)
"RTN","ORSPUTIL",104,0)
 N ORDA
"RTN","ORSPUTIL",105,0)
 S ORDA=$O(^ORD(101.43,ORIEN,9,"B",CODE,""))
"RTN","ORSPUTIL",106,0)
 I ORDA D
"RTN","ORSPUTIL",107,0)
 .N DA,DR,DIE
"RTN","ORSPUTIL",108,0)
 .S DA(1)=ORIEN,DA=ORDA,DR=2_"///YES",DIE="^ORD(101.43,"_DA(1)_",9," D ^DIE
"RTN","ORSPUTIL",109,0)
 Q
"RTN","ORSPUTIL",110,0)
 ;
"RTN","ORSPUTIL",111,0)
SURE(ORMSG) ; -- sure you want to delete?
"RTN","ORSPUTIL",112,0)
 N X,Y,DIR
"RTN","ORSPUTIL",113,0)
 S DIR(0)="YA",DIR("A")="  "_ORMSG_" "
"RTN","ORSPUTIL",114,0)
 S DIR("B")="NO" W $C(7) D ^DIR
"RTN","ORSPUTIL",115,0)
 S:$D(DTOUT) Y="^"
"RTN","ORSPUTIL",116,0)
 Q Y
"RTN","ORSPUTIL",117,0)
 ;
"RTN","ORSPUTIL",118,0)
ERROR(ORERROR) ;
"RTN","ORSPUTIL",119,0)
 W !!,ORERROR
"RTN","ORSPUTIL",120,0)
 W !,"Please log a CA SDM ticket for assistance.",!
"RTN","ORSPUTIL",121,0)
 H 2
"RTN","ORSPUTIL",122,0)
 Q
"RTN","ORSPUTIL",123,0)
 ;
"RTN","ORSPUTIL",124,0)
ERRORFM(ORTEXT,ORERROR) ; Output FileMan Error Messages
"RTN","ORSPUTIL",125,0)
 N ORX
"RTN","ORSPUTIL",126,0)
 W !!,"ERROR: "_ORTEXT_"."
"RTN","ORSPUTIL",127,0)
 W !,"VA FileMan Error #"_$G(ORERROR("DIERR",1))_":"
"RTN","ORSPUTIL",128,0)
 F ORX=1:1:+$O(ORERROR("DIERR",1,"TEXT","A"),-1) D
"RTN","ORSPUTIL",129,0)
 . W !,$G(ORERROR("DIERR",1,"TEXT",ORX))
"RTN","ORSPUTIL",130,0)
 Q
"RTN","ORUPREF1")
0^2^B13019106^B12497628
"RTN","ORUPREF1",1,0)
ORUPREF1 ; slc/dcm - Key allocation ;04/22/16  07:45
"RTN","ORUPREF1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**132,397**;Dec 17, 1997;Build 22
"RTN","ORUPREF1",3,0)
 ;;397 - WAT Add ORSUPPLY to KEY
"RTN","ORUPREF1",4,0)
EN ;
"RTN","ORUPREF1",5,0)
 K ORC W $C(27),"[44;37m"
"RTN","ORUPREF1",6,0)
 S ORC(1)="Black^0",ORC(2)="Red^1",ORC(3)="Green^2",ORC(4)="Yellow^3",ORC(5)="Blue^4",ORC(6)="Magenta^5",ORC(7)="Cyan^6",ORC(8)="White^7"
"RTN","ORUPREF1",7,0)
 S ORC("B","BLACK",1)="",ORC("B","RED",2)="",ORC("B","GREEN",3)="",ORC("B","YELLOW",4)="",ORC("B","BLUE",5)="",ORC("B","MAGENTA",6)="",ORC("B","CYAN",7)="",ORC("B","WHITE",8)=""
"RTN","ORUPREF1",8,0)
 K ORBACK D DISP,SEL S ORF=$S(Y'=-1:Y,1:37)
"RTN","ORUPREF1",9,0)
 S ORBACK=1 D DISP,SEL S ORB=$S(Y'=-1:Y,1:40)
"RTN","ORUPREF1",10,0)
 W !,$C(27),"["_(29+ORF)_";"_(39+ORB)_"m"
"RTN","ORUPREF1",11,0)
END K ORBACK,ORF,ORB,ORC,ORI
"RTN","ORUPREF1",12,0)
 Q
"RTN","ORUPREF1",13,0)
DISP F ORI=1:1:8 W !?10,$C(27),"["_($S($D(ORBACK):40+$P(ORC(ORI),"^",2),1:30+$P(ORC(ORI),"^",2))_"m"),ORI_"  ",$P(ORC(ORI),"^")_$E("       ",1,7-$L($P(ORC(ORI),"^"))) W $C(27),"["_($S($D(ORBACK):"44;37",1:"44;37")_"m")
"RTN","ORUPREF1",14,0)
 Q
"RTN","ORUPREF1",15,0)
SEL S Y=-1 W !!,"Select "_$S($D(ORBACK):"BACKGROUND",1:"FOREGROUND")_" COLOR: " R X:DTIME Q:'$T!(X["^")!(X="")  D UP
"RTN","ORUPREF1",16,0)
 I X="BL" W !,"Please be more specific" G SEL
"RTN","ORUPREF1",17,0)
 I $D(ORC("B",X)) S X=$O(ORC("B",X,0)) G S1
"RTN","ORUPREF1",18,0)
 I $E($O(ORC("B",X)),1,$L(X))=X,X'="BL" S X=$O(ORC("B",X)),X=$O(ORC("B",X,0)) G S1
"RTN","ORUPREF1",19,0)
 I X'?1N!('$D(ORC(X))) W !,"Select a number for one of the choices shown" G SEL
"RTN","ORUPREF1",20,0)
S1 W "   ",$C(27),"["_($S($D(ORBACK):40+$P(ORC(X),"^",2),1:30+$P(ORC(X),"^",2))_"m"),$P(ORC(X),"^") S Y=X
"RTN","ORUPREF1",21,0)
 W $C(27),"["_($S($D(ORBACK):"44;37",1:"44;37")_"m")
"RTN","ORUPREF1",22,0)
 Q
"RTN","ORUPREF1",23,0)
UP ;Upper case
"RTN","ORUPREF1",24,0)
 F %=1:1:$L(X) I $E(X,%)?1L S X=$E(X,1,%-1)_$C($A(X,%)-32)_$E(X,%+1,99)
"RTN","ORUPREF1",25,0)
 Q
"RTN","ORUPREF1",26,0)
KEY ;Edit user security keys
"RTN","ORUPREF1",27,0)
 N I
"RTN","ORUPREF1",28,0)
 S OREND=0,ORVER=+($G(^DD(200,0,"VR")))
"RTN","ORUPREF1",29,0)
 F ORKEY="ORES","ORELSE","OREMAS","ORSUPPLY" D K1 Q:OREND  W ! F I=1:1:(IOM-1) W "="
"RTN","ORUPREF1",30,0)
 S OREND=0 K DLAYGO,DA,DR,DIE,DIC,OREND,ORK,ORKEY,ORHEAD,ORVER
"RTN","ORUPREF1",31,0)
 Q
"RTN","ORUPREF1",32,0)
K1 N % I '$D(^DIC(19.1,"B",ORKEY)) W !,ORKEY_" is not in the Security Key file" Q
"RTN","ORUPREF1",33,0)
 S ORK=$O(^DIC(19.1,"B",ORKEY,0)) I 'ORK!('$D(^DIC(19.1,ORK))) W !,ORKEY_" is not in the Security Key file" Q
"RTN","ORUPREF1",34,0)
 W !!,"KEY: "_ORKEY,! S I=0 F  S I=$O(^DIC(19.1,ORK,1,I)) Q:I<1  W !,^(I,0)
"RTN","ORUPREF1",35,0)
K2 W !!,"Edit Holders" S %=1 D YN^DICN S:%=-1 OREND=1
"RTN","ORUPREF1",36,0)
 I %=0 W !!,"Enter YES to edit holders of this key, NO to quit." G K2
"RTN","ORUPREF1",37,0)
 Q:%'=1
"RTN","ORUPREF1",38,0)
 W ! D K7
"RTN","ORUPREF1",39,0)
 Q
"RTN","ORUPREF1",40,0)
K7 ;edits holders for Kernel V7.0 in file #200
"RTN","ORUPREF1",41,0)
 N DIC,Y
"RTN","ORUPREF1",42,0)
 S DIC=200,DIC(0)="AEQM",DIC("A")="Select HOLDER: "
"RTN","ORUPREF1",43,0)
 F  D ^DIC Q:Y<1  S ORDUZ=Y,ORHAVE=$D(^XUSEC(ORKEY,+ORDUZ)) D K7SET:'ORHAVE,K7DEL:ORHAVE Q:OREND
"RTN","ORUPREF1",44,0)
 K ORDUZ,ORHAVE Q
"RTN","ORUPREF1",45,0)
K7DEL ;deletes ORKEY from person
"RTN","ORUPREF1",46,0)
 N DA,DIK
"RTN","ORUPREF1",47,0)
 W !?10,"Delete key" S %=1 D YN^DICN I (%<0) S OREND=1 Q
"RTN","ORUPREF1",48,0)
 I %=2 W !?15,"Nothing changed!",! Q
"RTN","ORUPREF1",49,0)
 I %=0 D  G K7DEL
"RTN","ORUPREF1",50,0)
 .W !?7,"This person already holds the "_ORKEY_" key; answer YES"
"RTN","ORUPREF1",51,0)
 .W !?7,"to de-allocate this key from this user."
"RTN","ORUPREF1",52,0)
 .W !!?7,"HOLDER: "_$P(ORDUZ,"^",2)
"RTN","ORUPREF1",53,0)
 S DA=$O(^VA(200,+ORDUZ,51,"B",ORK,0)),DA(1)=+ORDUZ
"RTN","ORUPREF1",54,0)
 I DA S DIK="^VA(200,"_DA(1)_",51," D ^DIK
"RTN","ORUPREF1",55,0)
 W !?15,$S(DA:"DELETED!",1:"Error: ^XUSEC not consistent with keys in User file"),!
"RTN","ORUPREF1",56,0)
 Q
"RTN","ORUPREF1",57,0)
K7SET ;allocates ORKEY to person
"RTN","ORUPREF1",58,0)
 N DIC,DA,DINUM,X
"RTN","ORUPREF1",59,0)
 I '$D(^VA(200,+ORDUZ,51,0)) S ^VA(200,+ORDUZ,51,0)="^200.051PA^^"
"RTN","ORUPREF1",60,0)
 S DA(1)=+ORDUZ,DIC="^VA(200,"_DA(1)_",51,",DIC(0)="L",(DINUM,X)=ORK
"RTN","ORUPREF1",61,0)
 D FILE^DICN W !?15,$S(Y>0:"Added.",1:"Error - not added."),!
"RTN","ORUPREF1",62,0)
 Q
"RTN","ORUTL3")
0^10^B3158346^B1549938
"RTN","ORUTL3",1,0)
ORUTL3 ;SLC/JLC - OE/RR Utilities ;08/28/17  14:37
"RTN","ORUTL3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**111,397**;Dec 17, 1997;Build 22
"RTN","ORUTL3",3,0)
 ;
"RTN","ORUTL3",4,0)
 ;
"RTN","ORUTL3",5,0)
 ;
"RTN","ORUTL3",6,0)
NATURE(ORIFN) ;find nature of order
"RTN","ORUTL3",7,0)
 ;ORIFN is the order;action being requested
"RTN","ORUTL3",8,0)
 ;if no action is present, the API will find the most recent action that has
"RTN","ORUTL3",9,0)
 ;a nature of order
"RTN","ORUTL3",10,0)
 N OR8,ORACT,ORNAT,ORNATURE
"RTN","ORUTL3",11,0)
 S ORACT=$P(ORIFN,";",2),ORIFN=$P(ORIFN,";")
"RTN","ORUTL3",12,0)
 I '$D(^OR(100,ORIFN,0)) Q 0 ; not a valid order
"RTN","ORUTL3",13,0)
 I ORACT="" D
"RTN","ORUTL3",14,0)
 . N S1,A
"RTN","ORUTL3",15,0)
 . S S1=0
"RTN","ORUTL3",16,0)
 . F  S S1=$O(^OR(100,ORIFN,8,S1)) Q:'S1  S A=$P($G(^(S1,0)),"^",12) I A]"" S ORACT=S1
"RTN","ORUTL3",17,0)
 I ORACT="" Q 0 ;not a valid order action
"RTN","ORUTL3",18,0)
 I '$D(^OR(100,ORIFN,8,ORACT)) Q 0 ;not a valid order action
"RTN","ORUTL3",19,0)
 S OR8=$G(^OR(100,ORIFN,8,ORACT,0)) S ORNATURE=$P(OR8,"^",12),ORNAT=$$TEXT(ORNATURE)
"RTN","ORUTL3",20,0)
 Q ORNATURE_"^"_ORNAT
"RTN","ORUTL3",21,0)
TEXT(X) ; -- Returns 3 ^-piece identifier for nature X
"RTN","ORUTL3",22,0)
 N ORN,Y S ORN=$G(^ORD(100.02,+$G(X),0))
"RTN","ORUTL3",23,0)
 S Y=$P(ORN,U,2)_U_$P(ORN,U)_"^99ORN"
"RTN","ORUTL3",24,0)
 Q Y
"RTN","ORUTL3",25,0)
ISSUPPLY(ORDDIEN) ;IS THIS DISPENSE DRUG A SUPPLY ORDER
"RTN","ORUTL3",26,0)
 ;INPUT: ORDDIEN - DISPENSE DRUG TO BE CHECKED
"RTN","ORUTL3",27,0)
 D ZERO^PSS50(ORDDIEN,,,,,"ORDRUG")
"RTN","ORUTL3",28,0)
 I ^TMP($J,"ORDRUG",0)<1 Q
"RTN","ORUTL3",29,0)
 I "^XA^XX^"[("^"_$E(^TMP($J,"ORDRUG",ORDDIEN,2),1,2)_"^") Q 1
"RTN","ORUTL3",30,0)
 I ^TMP($J,"ORDRUG",ORDDIEN,2)="DX900",$G(^TMP($J,"ORDRUG",ORDDIEN,3))["S" Q 1
"RTN","ORUTL3",31,0)
 Q 0
"RTN","ORUTL3",32,0)
 ;
"RTN","ORUTL3",33,0)
ISOISPLY(OROIIEN) ;is this orderable item a supply order
"RTN","ORUTL3",34,0)
 ; Input: OROIIEN - Orderable Item IEN (#101.43) to be checked
"RTN","ORUTL3",35,0)
 N ORDRUG,ORLST,ORSPLY
"RTN","ORUTL3",36,0)
 ;
"RTN","ORUTL3",37,0)
 S ORSPLY=1
"RTN","ORUTL3",38,0)
 ;
"RTN","ORUTL3",39,0)
 D OI2DD^ORKCHK5(.ORLST,OROIIEN,"O")
"RTN","ORUTL3",40,0)
 I '$O(ORLST(0)) S ORSPLY=0
"RTN","ORUTL3",41,0)
 S ORDRUG=""
"RTN","ORUTL3",42,0)
 F  S ORDRUG=$O(ORLST(ORDRUG)) Q:ORDRUG=""!('ORSPLY)  D
"RTN","ORUTL3",43,0)
 . I '$$ISSUPPLY(+ORDRUG) S ORSPLY=0
"RTN","ORUTL3",44,0)
 ;
"RTN","ORUTL3",45,0)
 Q ORSPLY
"RTN","ORUTL5")
0^14^B2631005^B1343402
"RTN","ORUTL5",1,0)
ORUTL5 ; SLC/JLC - OE/RR Utilities ;07/27/17  14:21
"RTN","ORUTL5",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**461,397**;Dec 17, 1997;Build 22
"RTN","ORUTL5",3,0)
 ;
"RTN","ORUTL5",4,0)
 ;
"RTN","ORUTL5",5,0)
 ;
"RTN","ORUTL5",6,0)
MSG(ORREC,ORMSGT) ;
"RTN","ORUTL5",7,0)
 N XMSUB,XMY,XMTEXT,XMDUZ,ORTEXT,SITE,I,A
"RTN","ORUTL5",8,0)
 S ORTEXT(1)="Attempt to save order with INPATIENT MEDICATIONS Display Group",SITE=$$SITE^VASITE()
"RTN","ORUTL5",9,0)
 S ORTEXT(2)=" "
"RTN","ORUTL5",10,0)
 S A="ORMSGT("""")" F I=3:1 S A=$Q(@A) Q:A=""  S ORTEXT(I)=$P(A,"(",2,99)_" = "_@A
"RTN","ORUTL5",11,0)
 S XMDUZ=DUZ
"RTN","ORUTL5",12,0)
 S XMSUB="NEW PROBLEM ORDER SUBMITTED FROM "_$P(SITE,"^",2)
"RTN","ORUTL5",13,0)
 S XMY("G.HPS CLIN2@FORUM.DOMAIN.EXT")="",XMY("G.CLINICAL REMINDERS SUPPORT@FORUM.DOMAIN.EXT")=""
"RTN","ORUTL5",14,0)
 S XMTEXT="ORTEXT("
"RTN","ORUTL5",15,0)
 D ^XMD
"RTN","ORUTL5",16,0)
 Q
"RTN","ORUTL5",17,0)
COMPLETE(ORID) ;
"RTN","ORUTL5",18,0)
 N ORDN,ORD,ORDIALOG,ORINFO
"RTN","ORUTL5",19,0)
 S ORINFO("OR0")=$G(^OR(100,+ORID,0)),ORINFO("OR3")=$G(^(3)),ORINFO("OR4")=$G(^(4)),ORINFO("OR6")=$G(^(6)),ORINFO("OR7")=$G(^(7))
"RTN","ORUTL5",20,0)
 S ORDN=$P(ORINFO("OR0"),"^",5) Q:ORDN'["101.41"  S ORDN=+ORDN
"RTN","ORUTL5",21,0)
 D GETDLG^ORCD(ORDN),GETORDER^ORCD(+ORID,"ORD")
"RTN","ORUTL5",22,0)
 S ORINFO("DIALOG")=ORDN
"RTN","ORUTL5",23,0)
 M ORINFO("RESPONSES")=ORD
"RTN","ORUTL5",24,0)
 D MSG^XQOR("OR COMPLETE ORDER",.ORINFO)
"RTN","ORUTL5",25,0)
 Q
"RTN","ORWDPS3")
0^20^B22042687^B24262284
"RTN","ORWDPS3",1,0)
ORWDPS3 ;SLC/KCM,JLI - ORDER DIALOGS AND MENUS ;Aug 30, 2018@09:12
"RTN","ORWDPS3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**85,94,116,132,187,195,215,280,350,397**;Dec 17, 1997;Build 22
"RTN","ORWDPS3",3,0)
 ;
"RTN","ORWDPS3",4,0)
 ;
"RTN","ORWDPS3",5,0)
 ;
"RTN","ORWDPS3",6,0)
MEDXFER ; -- setup ORDIALOG for a med that is transferred (from SETUP^ORWDXM4)
"RTN","ORWDPS3",7,0)
 N IVDIALOG,OI K ^TMP("PS",$J)
"RTN","ORWDPS3",8,0)
 S IVDIALOG=$O(^ORD(101.41,"AB","PSJI OR PAT FLUID OE",0))
"RTN","ORWDPS3",9,0)
 S ORDIALOG=$O(^ORD(101.41,"AB","PS MEDS",0))
"RTN","ORWDPS3",10,0)
 I +$P($G(^OR(100,+ORIT,0)),U,5)=IVDIALOG S ORDIALOG=IVDIALOG
"RTN","ORWDPS3",11,0)
 S ORDG=+$P(^ORD(101.41,ORDIALOG,0),U,5)
"RTN","ORWDPS3",12,0)
 D GETDLG^ORCD(ORDIALOG)
"RTN","ORWDPS3",13,0)
 D GETORDER^ORCD("^OR(100,"_+ORIT_",4.5)")
"RTN","ORWDPS3",14,0)
 ;I ORDIALOG=IVDIALOG Q
"RTN","ORWDPS3",15,0)
 S OI=$$VAL^ORCD("MEDICATION")
"RTN","ORWDPS3",16,0)
 I ORDIALOG'=IVDIALOG,'$$MEDOK(OI,ORCAT) D SETERR(ORIT,"This may not be ordered as an "_$S(ORCAT="I":"in",1:"out")_"patient drug.") Q
"RTN","ORWDPS3",17,0)
 I +$G(OI)>0,$G(^ORD(101.43,OI,.1)),(^(.1)<$$NOW^XLFDT) D SETERR(ORIT,"This may no longer be ordered.") Q
"RTN","ORWDPS3",18,0)
 I (ORDIALOG'=IVDIALOG),(ORCAT="I") D OUT^ORCMED
"RTN","ORWDPS3",19,0)
 I (ORDIALOG'=IVDIALOG),(ORCAT="O") D IN^ORCMED
"RTN","ORWDPS3",20,0)
 S ORWPSWRG="" ; force interactive dialog for transfers
"RTN","ORWDPS3",21,0)
 Q
"RTN","ORWDPS3",22,0)
MEDOK(OI,CAT)   ; return 1 if med may be ordered for this patient category
"RTN","ORWDPS3",23,0)
 N P S P=$S(CAT="I":1,1:2)
"RTN","ORWDPS3",24,0)
 I ORIMO S P=1
"RTN","ORWDPS3",25,0)
 N THEGRP,INPTGRP
"RTN","ORWDPS3",26,0)
 S THEGRP=0
"RTN","ORWDPS3",27,0)
 I $D(ORIT),+ORIT S THEGRP=$P($G(^OR(100,+ORIT,0)),U,11)
"RTN","ORWDPS3",28,0)
 S INPTGRP=$O(^ORD(100.98,"B","UD RX",0))
"RTN","ORWDPS3",29,0)
 I P=2,(INPTGRP=THEGRP),($P($G(^ORD(101.43,+OI,"PS")),U,1)=2) Q 2
"RTN","ORWDPS3",30,0)
 E  Q $P($G(^ORD(101.43,+OI,"PS")),U,P)
"RTN","ORWDPS3",31,0)
 ;
"RTN","ORWDPS3",32,0)
SETERR(ID,X)       ; sets LST to rejection with error message
"RTN","ORWDPS3",33,0)
 D GETTXT^ORWORR(.LST,ID)
"RTN","ORWDPS3",34,0)
 S LST(0)="8^0",LST(.5)=X,LST(.6)=""
"RTN","ORWDPS3",35,0)
 Q
"RTN","ORWDPS3",36,0)
 ;
"RTN","ORWDPS3",37,0)
PS ; setup environment for medications
"RTN","ORWDPS3",38,0)
 D AUTHMED Q:$G(ORQUIT)  ; checks authorized to write meds
"RTN","ORWDPS3",39,0)
 K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J)
"RTN","ORWDPS3",40,0)
 N PROMPT,OI
"RTN","ORWDPS3",41,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDPS3",42,0)
 S OI=""
"RTN","ORWDPS3",43,0)
 I $D(ORDIALOG(PROMPT,1)) S OI=ORDIALOG(PROMPT,1) D MEDACTV Q:$G(ORQUIT)
"RTN","ORWDPS3",44,0)
 N PSOI
"RTN","ORWDPS3",45,0)
 S PSOI=+$P($G(^ORD(101.43,+OI,0)),U,2) D START^PSSJORDF(PSOI,ORCAT)
"RTN","ORWDPS3",46,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX SCHEDULE",0))
"RTN","ORWDPS3",47,0)
 I $D(ORDIALOG(PROMPT,1)) S ORSCH=ORDIALOG(PROMPT,1)
"RTN","ORWDPS3",48,0)
 I (ORCAT="I"),$L($G(ORSCH)) D
"RTN","ORWDPS3",49,0)
 . S ORSD=""
"RTN","ORWDPS3",50,0)
 . I $L($G(^DPT(+ORVP,.1))) S ORSD=$$STARTSTP^PSJORPOE(+ORVP,ORSCH,PSOI,+$G(ORWARD),"")
"RTN","ORWDPS3",51,0)
 . I $P(ORSD,U)="NEXT" S $P(ORSD,U)="NEXTA"
"RTN","ORWDPS3",52,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX DAYS SUPPLY",0))
"RTN","ORWDPS3",53,0)
 I $D(ORDIALOG(PROMPT,1)) S ORDSUP=ORDIALOG(PROMPT,1)
"RTN","ORWDPS3",54,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX DISPENSE DRUG",0))
"RTN","ORWDPS3",55,0)
 I $D(ORDIALOG(PROMPT,1)) S ORDRUG=ORDIALOG(PROMPT,1)
"RTN","ORWDPS3",56,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX REFILLS",0))
"RTN","ORWDPS3",57,0)
 I $D(ORDIALOG(PROMPT,1)) S OREFILLS=ORDIALOG(PROMPT,1)
"RTN","ORWDPS3",58,0)
 I ORCAT="O" S ORCOPAY=$$ASKSC^ORCDPS1
"RTN","ORWDPS3",59,0)
 I ORCAT="I" S PROMPT=$O(^ORD(101.41,"AB","OR GTX START DATE/TIME",0)) D
"RTN","ORWDPS3",60,0)
 . I $L($P($G(ORSD),U)),'$D(ORDIALOG(PROMPT,1)) S ORDIALOG(PROMPT,1)=$P(ORSD,U)
"RTN","ORWDPS3",61,0)
 ; create a SIG if none exists (i.e., when copying pre-POE orders)
"RTN","ORWDPS3",62,0)
 I '$L($G(ORDIALOG($$PTR^ORCD("OR GTX SIG"),1))) D
"RTN","ORWDPS3",63,0)
 . N ORDOSE,ORDRUG,ORWPSOI,PROMPT,DRUG
"RTN","ORWDPS3",64,0)
 . S PROMPT=$$PTR^ORCD("OR GTX INSTRUCTIONS")
"RTN","ORWDPS3",65,0)
 . S ORDRUG=$G(ORDIALOG($$PTR^ORCD("OR GTX DISPENSE DRUG"),1))
"RTN","ORWDPS3",66,0)
 . S ORWPSOI=+$G(ORDIALOG($$PTR^ORCD("OR GTX ORDERABLE ITEM"),1))
"RTN","ORWDPS3",67,0)
 . I ORWPSOI S ORWPSOI=+$P($G(^ORD(101.43,+ORWPSOI,0)),U,2)
"RTN","ORWDPS3",68,0)
 . D DOSE^PSSORUTL(.ORDOSE,ORWPSOI,$S(ORCAT="I":"U",1:"O"),ORVP)       ; dflt doses
"RTN","ORWDPS3",69,0)
 . D D1^ORCDPS2  ; set up ORDOSE & xrefs in ORDIALOG
"RTN","ORWDPS3",70,0)
 . S DRUG=$G(ORDOSE("DD",+ORDRUG))
"RTN","ORWDPS3",71,0)
 . I DRUG,ORCAT="O" D RESETID^ORCDPS
"RTN","ORWDPS3",72,0)
 . D SIG^ORCDPS2
"RTN","ORWDPS3",73,0)
 Q
"RTN","ORWDPS3",74,0)
AUTHMED ; sets ORQUIT if not authorized to write meds
"RTN","ORWDPS3",75,0)
 N NOAUTH,NAME
"RTN","ORWDPS3",76,0)
 D AUTH^ORWDPS32(.NOAUTH,ORNP,$G(ORDIALOG))
"RTN","ORWDPS3",77,0)
 I +NOAUTH D
"RTN","ORWDPS3",78,0)
 . S ORQUIT=1
"RTN","ORWDPS3",79,0)
 . S LST(0)="8^0"
"RTN","ORWDPS3",80,0)
 . I $P(NOAUTH,U,2)'="" S LST(.5)=$P(NOAUTH,U,2) Q
"RTN","ORWDPS3",81,0)
 . S NAME=$P($G(^VA(200,+ORNP,20)),U,2)
"RTN","ORWDPS3",82,0)
 . I '$L(NAME) S NAME=$P($G(^VA(200,+ORNP,0)),U,1)
"RTN","ORWDPS3",83,0)
 . S LST(.5)=NAME_" is not authorized to write med orders."
"RTN","ORWDPS3",84,0)
 Q
"RTN","ORWDPS3",85,0)
MEDACTV ; sets ORQUIT if the orderable item is not active for a med
"RTN","ORWDPS3",86,0)
 Q:'$G(OI)
"RTN","ORWDPS3",87,0)
 I $G(^ORD(101.43,OI,.1)),^(.1)'>$$NOW^XLFDT D
"RTN","ORWDPS3",88,0)
 . S ORQUIT=1
"RTN","ORWDPS3",89,0)
 . S LST(0)="8^0"
"RTN","ORWDPS3",90,0)
 . S LST(.5)=$P($G(^ORD(101.43,OI,0)),U)_" has been inactivated and may not be ordered anymore."
"RTN","ORWDPS3",91,0)
 I $D(ORQUIT) Q:ORQUIT
"RTN","ORWDPS3",92,0)
 ; copied from ORDITM^ORCDPS1 to make sure quick order if for right dialog
"RTN","ORWDPS3",93,0)
 N ORPS,PSOI,ORIV,ORINPT
"RTN","ORWDPS3",94,0)
 S ORINPT=$$INPT^ORCD
"RTN","ORWDPS3",95,0)
 S ORPS=$G(^ORD(101.43,+OI,"PS")),PSOI=+$P($G(^(0)),U,2)
"RTN","ORWDPS3",96,0)
 S ORIV=$S($P(ORPS,U)=2:1,1:0)
"RTN","ORWDPS3",97,0)
 I $G(ORCAT)="O",'$P(ORPS,U,2),'ORIMO S LST(.5)="This drug may not be used in an outpatient order."
"RTN","ORWDPS3",98,0)
 I $G(ORCAT)="I" D
"RTN","ORWDPS3",99,0)
 . I $G(ORINPT),'$P(ORPS,U),'$P(ORPS,"^",5),'ORIMO S LST(.5)="This drug may not be used in an inpatient order."
"RTN","ORWDPS3",100,0)
 . I '$G(ORINPT),'ORIV,'ORIMO S LST(.5)="This drug may not be ordered for an outpatient."
"RTN","ORWDPS3",101,0)
 I $L($G(LST(.5))) S ORQUIT=1,LST(0)="8^0"
"RTN","ORWDPS3",102,0)
 Q
"RTN","ORWDPS32")
0^17^B78799489^B77153006
"RTN","ORWDPS32",1,0)
ORWDPS32 ; SLC/KCM - Pharmacy Calls for GUI Dialog ;08/23/17  12:00
"RTN","ORWDPS32",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,94,190,195,237,243,350,397**;Dec 17, 1997;Build 22
"RTN","ORWDPS32",3,0)
 ;Per VHA Directive 6402, this routine should not be modified.
"RTN","ORWDPS32",4,0)
 ;
"RTN","ORWDPS32",5,0)
 ;
"RTN","ORWDPS32",6,0)
 ;
"RTN","ORWDPS32",7,0)
NXT() ; -- ret next available index in data array
"RTN","ORWDPS32",8,0)
 S ILST=ILST+1
"RTN","ORWDPS32",9,0)
 Q ILST
"RTN","ORWDPS32",10,0)
 ;
"RTN","ORWDPS32",11,0)
DLGSLCT(LST,PSTYPE,DFN,LOCIEN) ; return def lists for dialog
"RTN","ORWDPS32",12,0)
 ; PSTYPE: pharmacy type (U=unit dose, F=IV fluids, O=outpt)
"RTN","ORWDPS32",13,0)
 N ILST S ILST=0
"RTN","ORWDPS32",14,0)
 I PSTYPE="F" D  Q                       ; IV Fluids
"RTN","ORWDPS32",15,0)
 . S LST($$NXT)="~ShortList"  D SHORT
"RTN","ORWDPS32",16,0)
 . S LST($$NXT)="~Priorities" D PRIOR
"RTN","ORWDPS32",17,0)
 . ;S LST($$NXT)="~Schedules"  D SCHED(LOCIEN)
"RTN","ORWDPS32",18,0)
 . S LST($$NXT)="~Route" D IVROUTE
"RTN","ORWDPS32",19,0)
 ;
"RTN","ORWDPS32",20,0)
 S LST($$NXT)="~ShortList"  D SHORT      ; Unit Dose & Outpt
"RTN","ORWDPS32",21,0)
 ;S LST($$NXT)="~Schedules"  D SCHED(LOCIEN)
"RTN","ORWDPS32",22,0)
 S LST($$NXT)="~Priorities" D PRIOR
"RTN","ORWDPS32",23,0)
 I PSTYPE="O" D                          ; Outpt
"RTN","ORWDPS32",24,0)
 . S LST($$NXT)="~Pickup"   D PICKUP
"RTN","ORWDPS32",25,0)
 . S LST($$NXT)="~SCStatus" D SCLIST
"RTN","ORWDPS32",26,0)
 Q
"RTN","ORWDPS32",27,0)
SHORT ; from DLGSLCT, get short list of med quick orders
"RTN","ORWDPS32",28,0)
 ; !!! change this so that it uses the ORWDXQ call!!!
"RTN","ORWDPS32",29,0)
 N I,X,TMP
"RTN","ORWDPS32",30,0)
 I PSTYPE="U" S X="UD RX"
"RTN","ORWDPS32",31,0)
 I PSTYPE="F" S X="IV RX"
"RTN","ORWDPS32",32,0)
 I PSTYPE="O" S X="O RX"
"RTN","ORWDPS32",33,0)
 D GETQLST^ORWDXQ(.TMP,X,"iQ")
"RTN","ORWDPS32",34,0)
 S I=0 F  S I=$O(TMP(I)) Q:'I  S LST($$NXT)=TMP(I)
"RTN","ORWDPS32",35,0)
 Q
"RTN","ORWDPS32",36,0)
SCHEDA ; (similar to SCHED, but also rtns admin times)
"RTN","ORWDPS32",37,0)
 N X,IEN,SCH,TIME
"RTN","ORWDPS32",38,0)
 K ^TMP($J,"ORWDPS32 SCHEDA")
"RTN","ORWDPS32",39,0)
 D AP^PSS51P1("PSJ",,,,"ORWDPS32 SCHEDA")
"RTN","ORWDPS32",40,0)
 S SCH="" F  S SCH=$O(^TMP($J,"ORWDPS32 SCHEDA","APPSJ",SCH)) Q:SCH=""  D
"RTN","ORWDPS32",41,0)
 .S IEN="" F  S IEN=$O(^TMP($J,"ORWDPS32 SCHEDA","APPSJ",SCH,IEN)) Q:IEN'>0  D
"RTN","ORWDPS32",42,0)
 ..S TIME=$G(^TMP($J,"ORWDPS32 SCHEDA",IEN,1))
"RTN","ORWDPS32",43,0)
 ..S X=$S($L(TIME):"  ("_TIME_")",1:"")
"RTN","ORWDPS32",44,0)
 ..S LST($$NXT)="i"_IEN_U_SCH_U_X
"RTN","ORWDPS32",45,0)
 K ^TMP($J,"ORWDPS32 SCHEDA")
"RTN","ORWDPS32",46,0)
 Q
"RTN","ORWDPS32",47,0)
 ;
"RTN","ORWDPS32",48,0)
IVROUTE ;
"RTN","ORWDPS32",49,0)
 N ABB,EXP,IEN,RTE
"RTN","ORWDPS32",50,0)
 K ^TMP($J,"ORWDPS32 IVROUTE")
"RTN","ORWDPS32",51,0)
 D ALL^PSS51P2(,"??",,1,"ORWDPS32 IVROUTE")
"RTN","ORWDPS32",52,0)
 S RTE="" F  S RTE=$O(^TMP($J,"ORWDPS32 IVROUTE","B",RTE)) Q:RTE=""  D
"RTN","ORWDPS32",53,0)
 .S IEN=$O(^TMP($J,"ORWDPS32 IVROUTE","IV",RTE,"")) Q:IEN'>0
"RTN","ORWDPS32",54,0)
 .S ABB=$G(^TMP($J,"ORWDPS32 IVROUTE",IEN,1))
"RTN","ORWDPS32",55,0)
 .S EXP=$G(^TMP($J,"ORWDPS32 IVROUTE",IEN,4))
"RTN","ORWDPS32",56,0)
 .S LST($$NXT)="i"_IEN_U_RTE_U_ABB_U_EXP
"RTN","ORWDPS32",57,0)
 K ^TMP($J,"ORWDPS32 IVROUTE")
"RTN","ORWDPS32",58,0)
 Q
"RTN","ORWDPS32",59,0)
 ;
"RTN","ORWDPS32",60,0)
ALLIVRTE(LST) ;
"RTN","ORWDPS32",61,0)
 N ABB,CNT,EXP,IEN,RTE
"RTN","ORWDPS32",62,0)
 K ^TMP($J,"ORWDPS32 ALLIVRTE")
"RTN","ORWDPS32",63,0)
 S CNT=0
"RTN","ORWDPS32",64,0)
 D ALL^PSS51P2(,"??",,1,"ORWDPS32 ALLIVRTE")
"RTN","ORWDPS32",65,0)
 S RTE="" F  S RTE=$O(^TMP($J,"ORWDPS32 ALLIVRTE","B",RTE)) Q:RTE=""  D
"RTN","ORWDPS32",66,0)
 .S IEN=$O(^TMP($J,"ORWDPS32 ALLIVRTE","IV",RTE,"")) Q:IEN'>0
"RTN","ORWDPS32",67,0)
 .S ABB=$G(^TMP($J,"ORWDPS32 ALLIVRTE",IEN,1))
"RTN","ORWDPS32",68,0)
 .S EXP=$G(^TMP($J,"ORWDPS32 ALLIVRTE",IEN,4))
"RTN","ORWDPS32",69,0)
 .S CNT=CNT+1,LST(CNT)=IEN_U_RTE_U_ABB_U_U_U_U
"RTN","ORWDPS32",70,0)
 K ^TMP($J,"ORWDPS32 IVROUTE")
"RTN","ORWDPS32",71,0)
 Q
"RTN","ORWDPS32",72,0)
 ;
"RTN","ORWDPS32",73,0)
ROUTE ; from OISLCT^ORWDPS32, get list of routes for the drug form
"RTN","ORWDPS32",74,0)
 ; ** NEED BOTH ABBREVIATION & NAME IN LIST BOX
"RTN","ORWDPS32",75,0)
 N I,CNT,ABBR,IEN,ROUT,X
"RTN","ORWDPS32",76,0)
 S I="" F  S I=$O(^TMP("PSJMR",$J,I)) Q:I=""  D
"RTN","ORWDPS32",77,0)
 . S ROUT=$P(^TMP("PSJMR",$J,I),U),ABBR=$P(^(I),U,2),IEN=$P(^(I),U,3)
"RTN","ORWDPS32",78,0)
 . S LST($$NXT)="i"_IEN_U_ROUT_U_ABBR
"RTN","ORWDPS32",79,0)
 . I I=1,IEN S LST($$NXT)="d"_IEN_U_ROUT ;_U_ABBR ; assume first always default
"RTN","ORWDPS32",80,0)
 S I="" F  S I=$O(^TMP("PSJMR",$J,I)) Q:I=""  D
"RTN","ORWDPS32",81,0)
 . S ROUT=$P(^TMP("PSJMR",$J,I),U),ABBR=$P(^(I),U,2),IEN=$P(^(I),U,3)
"RTN","ORWDPS32",82,0)
 . I $L(ABBR),(ABBR'=ROUT) S LST($$NXT)="i"_IEN_U_ABBR_" ("_ROUT_")"_U_ABBR
"RTN","ORWDPS32",83,0)
 Q
"RTN","ORWDPS32",84,0)
 ;similar to SCHED^ORWDPS32, also returns Admin Time for Patient ward location
"RTN","ORWDPS32",85,0)
 ;AGP CPRS 27.72 THIS CODE IS NOT NEEDED ANYMORE
"RTN","ORWDPS32",86,0)
SCHED(LOCIEN) ;
"RTN","ORWDPS32",87,0)
 N CNT,ORARRAY,SCH,IEN,EXP,TIME,TYP,X0,WIEN
"RTN","ORWDPS32",88,0)
 ;K ^TMP($J,"ORWDPS32 SCHED1")
"RTN","ORWDPS32",89,0)
 S WIEN=$$WARDIEN(+LOCIEN)
"RTN","ORWDPS32",90,0)
 D SCHED^PSS51P1(WIEN,.ORARRAY)
"RTN","ORWDPS32",91,0)
 S CNT=0 F  S CNT=$O(ORARRAY(CNT)) Q:CNT'>0  D
"RTN","ORWDPS32",92,0)
 .S LST($$NXT)="i"_$P(ORARRAY(CNT),U,2,5)
"RTN","ORWDPS32",93,0)
 Q
"RTN","ORWDPS32",94,0)
 ;
"RTN","ORWDPS32",95,0)
WARDIEN(LOCIEN) ;
"RTN","ORWDPS32",96,0)
 N RESULT
"RTN","ORWDPS32",97,0)
 S RESULT=0
"RTN","ORWDPS32",98,0)
 I LOCIEN=0 Q RESULT
"RTN","ORWDPS32",99,0)
 I $P($G(^SC(LOCIEN,42)),U)="" Q RESULT
"RTN","ORWDPS32",100,0)
 S RESULT=+$P($G(^SC(LOCIEN,42)),U)
"RTN","ORWDPS32",101,0)
 Q RESULT
"RTN","ORWDPS32",102,0)
PRIOR ; from DLGSLCT, get list of allowed priorities
"RTN","ORWDPS32",103,0)
 N X,XREF
"RTN","ORWDPS32",104,0)
 S XREF=$S(PSTYPE="O":"S.PSO",1:"S.PSJ")
"RTN","ORWDPS32",105,0)
 S X="" F  S X=$O(^ORD(101.42,XREF,X)) Q:'$L(X)  D
"RTN","ORWDPS32",106,0)
 . S LST($$NXT)="i"_$O(^ORD(101.42,XREF,X,0))_U_X
"RTN","ORWDPS32",107,0)
 S LST($$NXT)="d"_$O(^ORD(101.42,"B","ROUTINE",0))_U_"ROUTINE"
"RTN","ORWDPS32",108,0)
 Q
"RTN","ORWDPS32",109,0)
PICKUP ; from DLGSLCT, get prescription routing
"RTN","ORWDPS32",110,0)
 N X,EDITONLY
"RTN","ORWDPS32",111,0)
 F X="W^at Window","M^by Mail","C^in Clinic" S LST($$NXT)="i"_X
"RTN","ORWDPS32",112,0)
 S X=$$DEFPICK I $L(X) S LST($$NXT)="d"_X
"RTN","ORWDPS32",113,0)
 Q
"RTN","ORWDPS32",114,0)
DEFPICK()       ; ret def routing
"RTN","ORWDPS32",115,0)
 N X,DLG,PRMT
"RTN","ORWDPS32",116,0)
 S DLG=$O(^ORD(101.41,"AB","PSO OERR",0)),X=""
"RTN","ORWDPS32",117,0)
 S PRMT=$O(^ORD(101.41,"AB","OR GTX ROUTING",0))
"RTN","ORWDPS32",118,0)
 I $D(^TMP("ORECALL",$J,+DLG,+PRMT,1)) S X=^(1)
"RTN","ORWDPS32",119,0)
 I X'="" S EDITONLY=1 Q X  ; EDITONLY used by def action
"RTN","ORWDPS32",120,0)
 ;
"RTN","ORWDPS32",121,0)
 S X=$$GET^XPAR("ALL","ORWDPS ROUTING DEFAULT",1,"I")
"RTN","ORWDPS32",122,0)
 I X="C" S X="C^in Clinic" G XPICK
"RTN","ORWDPS32",123,0)
 I X="M" S X="M^by Mail"   G XPICK
"RTN","ORWDPS32",124,0)
 I X="W" S X="W^at Window" G XPICK
"RTN","ORWDPS32",125,0)
 I X="N" S X=""             G XPICK
"RTN","ORWDPS32",126,0)
 I X=""  S X=$S($D(^PSX(550,"C")):"M^by Mail",1:"W^at Window")
"RTN","ORWDPS32",127,0)
XPICK Q X
"RTN","ORWDPS32",128,0)
 ;
"RTN","ORWDPS32",129,0)
SCLIST ; from DLGSLCT, get options for service connected
"RTN","ORWDPS32",130,0)
 F X="0^No","1^Yes" S LST($$NXT)="i"_X
"RTN","ORWDPS32",131,0)
 Q
"RTN","ORWDPS32",132,0)
 ;
"RTN","ORWDPS32",133,0)
OISLCT(LST,OI,PSTYPE,ORVP) ; rtn for defaults for pharm OI
"RTN","ORWDPS32",134,0)
 N ILST S ILST=0
"RTN","ORWDPS32",135,0)
 K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J)
"RTN","ORWDPS32",136,0)
 S LST($$NXT)="~Dispense" D DISPDRG
"RTN","ORWDPS32",137,0)
 S LST($$NXT)="~Instruct" D INSTRCT
"RTN","ORWDPS32",138,0)
 S LST($$NXT)="~Route"    D ROUTE
"RTN","ORWDPS32",139,0)
 S LST($$NXT)="~Message"  D MESSAGE
"RTN","ORWDPS32",140,0)
 I $L($G(^TMP("PSJSCH",$J))) S LST($$NXT)="~DefSched",LST($$NXT)="d"_^($J)
"RTN","ORWDPS32",141,0)
 K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J)
"RTN","ORWDPS32",142,0)
 Q
"RTN","ORWDPS32",143,0)
 ;
"RTN","ORWDPS32",144,0)
DISPDRUG(LST,OI) ; list dispense drugs for an OI
"RTN","ORWDPS32",145,0)
 N ILST,PSTYPE S ILST=0,PSTYPE="U" D DISPDRG
"RTN","ORWDPS32",146,0)
 Q
"RTN","ORWDPS32",147,0)
 ;
"RTN","ORWDPS32",148,0)
DISPDRG ; from OISLCT, get disp drugs for this pharm OI
"RTN","ORWDPS32",149,0)
 N I,ORTMP,ORX
"RTN","ORWDPS32",150,0)
 S ORX=$T(ENDD^PSJORUTL),ORX=$L($P(ORX,";"),",")
"RTN","ORWDPS32",151,0)
 I ORX>3 D ENDD^PSJORUTL("^^^"_+$P($G(^ORD(101.43,OI,0)),"^",2),PSTYPE,.ORTMP,+ORVP)
"RTN","ORWDPS32",152,0)
 I ORX'>3 D ENDD^PSJORUTL("^^^"_+$P($G(^ORD(101.43,OI,0)),"^",2),PSTYPE,.ORTMP)
"RTN","ORWDPS32",153,0)
 S I="" F  S I=$O(ORTMP(I)) Q:I=""  D
"RTN","ORWDPS32",154,0)
 . I $P(ORTMP(I),U,4)="1" S $P(ORTMP(I),U,4)="NF"
"RTN","ORWDPS32",155,0)
 . S $P(ORTMP(I),U,3)="$"_$P(ORTMP(I),U,3)_" per "_$P(ORTMP(I),U,5)
"RTN","ORWDPS32",156,0)
 . S LST($$NXT)="i"_ORTMP(I)
"RTN","ORWDPS32",157,0)
 Q
"RTN","ORWDPS32",158,0)
INSTRCT ; from OISLCT, get list of potential instructs (based on drug form)
"RTN","ORWDPS32",159,0)
 N INOUN,NOUN,IINS,INS,VERB,INSREC
"RTN","ORWDPS32",160,0)
 D START^PSSJORDF(+$P(^ORD(101.43,OI,0),U,2))
"RTN","ORWDPS32",161,0)
 I PSTYPE="U" Q  ; don't use the instructions list for inpatients
"RTN","ORWDPS32",162,0)
 S IINS=0 F  S IINS=$O(^TMP("PSJINS",$J,IINS)) Q:'IINS  D
"RTN","ORWDPS32",163,0)
 . S INSREC=$G(^TMP("PSJINS",$J,IINS))
"RTN","ORWDPS32",164,0)
 . I '$D(VERB) S VERB=$P(INSREC,U)
"RTN","ORWDPS32",165,0)
 . I $L($P(INSREC,U,2)) S LST($$NXT)="i"_$P(INSREC,U,2)
"RTN","ORWDPS32",166,0)
 S LST($$NXT)="~Nouns"
"RTN","ORWDPS32",167,0)
 S INOUN=0 F  S INOUN=$O(^TMP("PSJNOUN",$J,INOUN)) Q:'INOUN  D
"RTN","ORWDPS32",168,0)
 . S LST($$NXT)="i"_$P(^TMP("PSJNOUN",$J,INOUN),U)
"RTN","ORWDPS32",169,0)
 I $D(VERB) S LST($$NXT)="~Verb",LST($$NXT)="d"_VERB
"RTN","ORWDPS32",170,0)
 ;
"RTN","ORWDPS32",171,0)
 Q
"RTN","ORWDPS32",172,0)
MIXED(X)   ; Return mixed case
"RTN","ORWDPS32",173,0)
 Q X
"RTN","ORWDPS32",174,0)
 ;
"RTN","ORWDPS32",175,0)
MESSAGE ; message
"RTN","ORWDPS32",176,0)
 S I=0 F  S I=$O(^ORD(101.43,OI,8,I)) Q:I'>0  S LST($$NXT)="t"_^(I,0)
"RTN","ORWDPS32",177,0)
 Q
"RTN","ORWDPS32",178,0)
ALLROUTE(LST) ; returns a list of all available med routes
"RTN","ORWDPS32",179,0)
 N I,X,ILST
"RTN","ORWDPS32",180,0)
 S ILST=0
"RTN","ORWDPS32",181,0)
 K ^TMP($J,"ORWDPS32 ALLROUTE")
"RTN","ORWDPS32",182,0)
 D ALL^PSS51P2(,"??",,,"ORWDPS32 ALLROUTE")
"RTN","ORWDPS32",183,0)
 S I=0 F  S I=$O(^TMP($J,"ORWDPS32 ALLROUTE",I)) Q:'I  D
"RTN","ORWDPS32",184,0)
 . I +$P(^TMP($J,"ORWDPS32 ALLROUTE",I,3),U)>0 S LST($$NXT)=I_U_^TMP($J,"ORWDPS32 ALLROUTE",I,.01)_U_^TMP($J,"ORWDPS32 ALLROUTE",I,1)
"RTN","ORWDPS32",185,0)
 K ^TMP($J,"ORWDPS32 ALLROUTE")
"RTN","ORWDPS32",186,0)
 Q
"RTN","ORWDPS32",187,0)
VALROUTE(REC,X)        ; validates route name & returns IEN + abbreviation
"RTN","ORWDPS32",188,0)
 N ABBR,NAME,IEN
"RTN","ORWDPS32",189,0)
 K ^TMP($J,"ORWDPS32 VALROUTE")
"RTN","ORWDPS32",190,0)
 S X=$$UPPER(X)
"RTN","ORWDPS32",191,0)
 D ALL^PSS51P2(,X,,1,"ORWDPS32 VALROUTE")
"RTN","ORWDPS32",192,0)
 I $P(^TMP($J,"ORWDPS32 VALROUTE",0),U)=-1 K ^TMP($J,"ORWDPS32 VALROUTE") S REC=0 Q
"RTN","ORWDPS32",193,0)
 S IEN=$O(^TMP($J,"ORWDPS32 VALROUTE","B",X,""))
"RTN","ORWDPS32",194,0)
 I IEN'>0 S IEN=$O(^TMP($J,"ORWDPS32 VALROUTE","C",X,""))
"RTN","ORWDPS32",195,0)
 I IEN'>0 S REC=0 Q
"RTN","ORWDPS32",196,0)
 S NAME=$G(^TMP($J,"ORWDPS32 VALROUTE",IEN,.01))
"RTN","ORWDPS32",197,0)
 S ABBR=$G(^TMP($J,"ORWDPS32 VALROUTE",IEN,1))
"RTN","ORWDPS32",198,0)
 I '$L(ABBR) S ABBR=NAME
"RTN","ORWDPS32",199,0)
 I ($$UPPER(NAME)'=X),($$UPPER(ABBR)'=X) S REC=0 K ^TMP($J,"ORWDPS32 VALROUTE") Q
"RTN","ORWDPS32",200,0)
 S REC=IEN_U_ABBR
"RTN","ORWDPS32",201,0)
 K ^TMP($J,"ORWDPS32 VALROUTE")
"RTN","ORWDPS32",202,0)
 Q
"RTN","ORWDPS32",203,0)
AUTH(VAL,PRV,ORDLOG) ; For inpatient meds, check restrictions
"RTN","ORWDPS32",204,0)
 N NAME,AUTH,INACT,X,ORSDLOG,ORDL,A,IFN,B
"RTN","ORWDPS32",205,0)
 S VAL=0
"RTN","ORWDPS32",206,0)
 S NAME=$P($G(^VA(200,PRV,20)),U,2) S:'$L(NAME) NAME=$P(^(0),U)
"RTN","ORWDPS32",207,0)
 S X=$G(^VA(200,PRV,"PS")),AUTH=$P(X,U),INACT=$P(X,U,4)
"RTN","ORWDPS32",208,0)
 S ORDLOG=$G(ORDLOG),ORDL=""
"RTN","ORWDPS32",209,0)
 I ORDLOG?1"X".E S IFN=$E(ORDLOG,2,99),A=$P($G(^OR(100,+IFN,0)),"^",5) D
"RTN","ORWDPS32",210,0)
 . I $P(A,";",2)[101.41 S ORDLOG=+A Q
"RTN","ORWDPS32",211,0)
 . S ORDLOG=""
"RTN","ORWDPS32",212,0)
 I ORDLOG]"" S A=$G(^ORD(101.41,ORDLOG,0)) I $P(A,"^",4)="Q" S B=$P(A,"^",5) I B]"" S ORDL=$P($G(^ORD(100.98,B,0)),"^",4)
"RTN","ORWDPS32",213,0)
 S ORSDLOG=$O(^ORD(101.41,"B","PSO SUPPLY",""))
"RTN","ORWDPS32",214,0)
 I 'AUTH!(INACT&(DT>INACT)) D  Q:VAL
"RTN","ORWDPS32",215,0)
 . I (ORDLOG=ORSDLOG!(ORDL=ORSDLOG)),$D(^XUSEC("ORSUPPLY",DUZ)) Q
"RTN","ORWDPS32",216,0)
 . S VAL="1^"_NAME_" is not authorized to write medication orders."
"RTN","ORWDPS32",217,0)
 I $D(^XUSEC("OREMAS",DUZ)),'$$GET^XPAR("ALL","OR OREMAS MED ORDERS") D  Q
"RTN","ORWDPS32",218,0)
 . S VAL="1^OREMAS key holders may not enter medication orders."
"RTN","ORWDPS32",219,0)
 Q
"RTN","ORWDPS32",220,0)
 ;
"RTN","ORWDPS32",221,0)
AUTHNVA(VAL,PRV) ; For Non-VA meds, check restrictions
"RTN","ORWDPS32",222,0)
 N NAME,AUTH,INACT,X S VAL=0
"RTN","ORWDPS32",223,0)
 I $D(^XUSEC("OREMAS",DUZ)),$$GET^XPAR("ALL","OR OREMAS NON-VA MED ORDERS")=2 Q
"RTN","ORWDPS32",224,0)
 I $D(^XUSEC("OREMAS",DUZ)),'$$GET^XPAR("ALL","OR OREMAS NON-VA MED ORDERS") D  Q
"RTN","ORWDPS32",225,0)
 . S VAL="1^OREMAS key holders may not enter non-VA medication orders."
"RTN","ORWDPS32",226,0)
 S NAME=$P($G(^VA(200,PRV,20)),U,2) S:'$L(NAME) NAME=$P(^(0),U)
"RTN","ORWDPS32",227,0)
 S X=$G(^VA(200,PRV,"PS")),AUTH=$P(X,U),INACT=$P(X,U,4)
"RTN","ORWDPS32",228,0)
 I 'AUTH!(INACT&(DT>INACT)) D  Q
"RTN","ORWDPS32",229,0)
 . S VAL="1^"_NAME_" is not authorized to write medication orders."
"RTN","ORWDPS32",230,0)
 Q
"RTN","ORWDPS32",231,0)
 ;
"RTN","ORWDPS32",232,0)
UPPER(X)        ; return uppercase
"RTN","ORWDPS32",233,0)
 Q $TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ORWDPS32",234,0)
 ;
"RTN","ORWDPS32",235,0)
TRIM(X) ; trim leading and trailing spaces
"RTN","ORWDPS32",236,0)
 S X=$RE(X) F  S:$E(X)=" " X=$E(X,2,999) Q:$E(X)'=" "  Q:'$L(X)  ;trail
"RTN","ORWDPS32",237,0)
 S X=$RE(X) F  S:$E(X)=" " X=$E(X,2,999) Q:$E(X)'=" "  Q:'$L(X)  ;lead
"RTN","ORWDPS32",238,0)
 Q X
"RTN","ORWDPS32",239,0)
 ;
"RTN","ORWDX")
0^15^B92501053^B85570425
"RTN","ORWDX",1,0)
ORWDX ; SLC/KCM/REV/JLI - Order dialog utilities ;Oct 03, 2018@13:53
"RTN","ORWDX",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,125,131,132,141,164,178,187,190,195,215,246,243,283,296,280,306,350,424,421,461,490,397**;Dec 17, 1997;Build 22
"RTN","ORWDX",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","ORWDX",4,0)
 ;
"RTN","ORWDX",5,0)
 ;Reference to DIC(9.4 supported by IA #2058
"RTN","ORWDX",6,0)
 ;Reference to ^SC( supported by ICR #10040
"RTN","ORWDX",7,0)
 ;Reference to ^DPT( supported by ICR #10035
"RTN","ORWDX",8,0)
 ;
"RTN","ORWDX",9,0)
 ;Sep 18, 2015 - PB - modified to trigger an unsolicited sync action
"RTN","ORWDX",10,0)
 ;
"RTN","ORWDX",11,0)
ORDITM(Y,FROM,DIR,XREF,QOCALL) ; Subset of orderable items
"RTN","ORWDX",12,0)
 ; Y(n)=IEN^.01 Name^.01 Name  -or-  IEN^Synonym <.01 Name>^.01 Name
"RTN","ORWDX",13,0)
 N I,IEN,CNT,X,DTXT,CURTM,DEFROUTE
"RTN","ORWDX",14,0)
 S DEFROUTE=""
"RTN","ORWDX",15,0)
 S QOCALL=+$G(QOCALL)
"RTN","ORWDX",16,0)
 S I=0,CNT=44,CURTM=$$NOW^XLFDT
"RTN","ORWDX",17,0)
 F  Q:I'<CNT  S FROM=$O(^ORD(101.43,XREF,FROM),DIR) Q:FROM=""  D
"RTN","ORWDX",18,0)
 . S IEN="" F  S IEN=$O(^ORD(101.43,XREF,FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWDX",19,0)
 . . S X=^ORD(101.43,XREF,FROM,IEN)
"RTN","ORWDX",20,0)
 . . I +$P(X,U,3),$P(X,U,3)<CURTM Q
"RTN","ORWDX",21,0)
 . . I 'QOCALL,$P(X,U,5) Q
"RTN","ORWDX",22,0)
 . . S I=I+1
"RTN","ORWDX",23,0)
 . . I 'X S Y(I)=IEN_U_$P(X,U,2)_U_$P(X,U,2)
"RTN","ORWDX",24,0)
 . . E  S Y(I)=IEN_U_$P(X,U,2)_$C(9)_"<"_$P(X,U,4)_">"_U_$P(X,U,4)
"RTN","ORWDX",25,0)
 Q
"RTN","ORWDX",26,0)
ODITMBC(Y,XREF,ODLST) ;
"RTN","ORWDX",27,0)
 N CNT,NM,XRF
"RTN","ORWDX",28,0)
 S CNT=0,NM=0,XRF=XREF
"RTN","ORWDX",29,0)
 F  S CNT=$O(ODLST(CNT)) Q:'CNT  D FNDINFO(.Y,ODLST(CNT))
"RTN","ORWDX",30,0)
 Q
"RTN","ORWDX",31,0)
FNDINFO(Y,ODIEN) ;
"RTN","ORWDX",32,0)
 D FNDINFO^ORWDX1(.Y,.ODIEN)
"RTN","ORWDX",33,0)
 Q
"RTN","ORWDX",34,0)
DLGDEF(LST,DLG) ; Format mapping for a dlg
"RTN","ORWDX",35,0)
 D DLGDEF^ORWDX1(.LST,.DLG)
"RTN","ORWDX",36,0)
 Q
"RTN","ORWDX",37,0)
DLGQUIK(LST,QO) ;(NOT USED)
"RTN","ORWDX",38,0)
 D LOADRSP(.LST,QO)
"RTN","ORWDX",39,0)
 Q
"RTN","ORWDX",40,0)
LOADRSP(LST,RSPID,TRANS)      ; Load responses from 101.41 or 100
"RTN","ORWDX",41,0)
 ; RSPID:  C123456;1-3243 = cached copy,   134-3234 = cached quick
"RTN","ORWDX",42,0)
 ;         X123456;1      = change order,  134      = quick dialog
"RTN","ORWDX",43,0)
 N I,J,DLG,INST,ID,VAL,ILST,ROOT,ORLOC S ROOT=""
"RTN","ORWDX",44,0)
 K ^TMP($J,"ORWDX LOADRSP","QO SAVE")
"RTN","ORWDX",45,0)
 I +RSPID=$P(RSPID,"-",1) D
"RTN","ORWDX",46,0)
 .S ^TMP($J,"ORWDX LOADRSP","QO SAVE")=+RSPID
"RTN","ORWDX",47,0)
 I RSPID["-" S ROOT="^TMP(""ORWDXMQ"",$J,"""_RSPID_""")" G XROOT^ORWDX2
"RTN","ORWDX",48,0)
 I $E(RSPID)="X" S ROOT="^OR(100,"_+$P(RSPID,"X",2)_",4.5)"  G XROOT^ORWDX2
"RTN","ORWDX",49,0)
 I +RSPID=RSPID  S ROOT="^ORD(101.41,"_+RSPID_",6)" G XROOT^ORWDX2
"RTN","ORWDX",50,0)
 Q:ROOT=""
"RTN","ORWDX",51,0)
 G XROOT^ORWDX2
"RTN","ORWDX",52,0)
SAVE(REC,ORVP,ORNP,ORL,DLG,ORDG,ORIT,ORIFN,ORDIALOG,ORDEA,ORAPPT,ORSRC,OREVTDF) ;
"RTN","ORWDX",53,0)
 ; ORVP=DFN, ORNP=Provider, ORL=Location, DLG=Order Dialog,
"RTN","ORWDX",54,0)
 ; ORDG=Display Group, ORIT=Quick Order Dialog, ORAPPT=Appointment
"RTN","ORWDX",55,0)
 N ORDUZ,ORSTS,OREVENT,ORCAT,ORDA,ORTS,ORNEW,ORCHECK,ORLOG,ORLEAD,ORTRAIL,ORPKG,ORWP94,ORCATFN,OREVTYPE,ONPASS
"RTN","ORWDX",56,0)
 N MSGCAPT,SENDMSG
"RTN","ORWDX",57,0)
 ;S ORDG=$O(^ORD(100.98,"B","INPATIENT MEDICATIONS",""))
"RTN","ORWDX",58,0)
 N XCNT,XCOMM,XDONE,XX  ;SBR
"RTN","ORWDX",59,0)
 S (XCOMM,XCNT)=""  ;SBR
"RTN","ORWDX",60,0)
 I $G(ORIFN)'="" D  ;SBR problem only occurs on change or renew orders
"RTN","ORWDX",61,0)
 . S XCNT=$O(^OR(100,+ORIFN,4.5,"ID","COMMENT",XCNT))  ;SBR
"RTN","ORWDX",62,0)
 . I XCNT'="" S XCOMM=$P($G(^OR(100,+ORIFN,4.5,XCNT,0)),"^",2)  ;SBR
"RTN","ORWDX",63,0)
 . I XCOMM'="" S XDONE=0,XX="" F  S XX=$O(ORDIALOG("WP",XCOMM,1,XX)) Q:XX=""  D  ;SBR
"RTN","ORWDX",64,0)
 . . I ORDIALOG("WP",XCOMM,1,XX,0)'="" S XDONE=1 Q  ;SBR
"RTN","ORWDX",65,0)
 . I XCOMM'="",'$G(XDONE),$D(ORDIALOG("WP",XCOMM)) K ORDIALOG("WP",XCOMM)  ;SBR
"RTN","ORWDX",66,0)
 S ORCATFN="" I $L($P(DLG,U,2)) S ORCATFN=$P(DLG,U,2),DLG=$P(DLG,U,1)
"RTN","ORWDX",67,0)
 S SENDMSG=0 I $P($G(^ORD(100.98,ORDG,0)),U)="INPATIENT MEDICATIONS" D
"RTN","ORWDX",68,0)
 .S MSGCAPT("PATIENT")=ORVP,MSGCAPT("USER")=ORNP,MSGCAPT("LOC")=+$G(ORL)
"RTN","ORWDX",69,0)
 .S MSGCAPT("DIALOG")=DLG,MSGCAPT("DISPLAY GROUP")=ORDG,MSGCAPT("QUICK ORDER")=ORIT
"RTN","ORWDX",70,0)
 .M MSGCAPT("ORDIALOG")=ORDIALOG
"RTN","ORWDX",71,0)
 .S ORDG=$O(^ORD(100.98,"B","UNIT DOSE MEDICATIONS","")),SENDMSG=1
"RTN","ORWDX",72,0)
 ;Remove treating facility if inpatient and IMO order 26.42
"RTN","ORWDX",73,0)
 I $G(^DPT(ORVP,.1))'="",$P($G(^ORD(100.98,ORDG,0)),U)="CLINIC MEDICATIONS" K ORDIALOG("ORTS")
"RTN","ORWDX",74,0)
 I $G(^DPT(ORVP,.1))'="",$P($G(^ORD(100.98,ORDG,0)),U)="CLINIC INFUSIONS" K ORDIALOG("ORTS")
"RTN","ORWDX",75,0)
 I $G(ORDIALOG("ORTS")) S ORTS=ORDIALOG("ORTS") K ORDIALOG("ORTS")
"RTN","ORWDX",76,0)
 I $G(ORDIALOG("ORSLOG")) S ORLOG=ORDIALOG("ORSLOG") K ORDIALOG("ORSLOG")
"RTN","ORWDX",77,0)
 I $D(ORDIALOG("OREVENT")) S OREVENT=ORDIALOG("OREVENT") K ORDIALOG("OREVENT")
"RTN","ORWDX",78,0)
 ;=====================================================
"RTN","ORWDX",79,0)
 ; Changed for v26.27 (RV)
"RTN","ORWDX",80,0)
 S ORCAT=$$INPT^ORCD,ORCAT=$S(ORCAT=1:"I",1:"O")
"RTN","ORWDX",81,0)
 ;I $L($G(OREVENT)) D
"RTN","ORWDX",82,0)
 ;. S ONPASS=0
"RTN","ORWDX",83,0)
 ;. S OREVTYPE=$$TYPE^OREVNTX(OREVENT)
"RTN","ORWDX",84,0)
 ;. I OREVTYPE="T" D ISPASS^OREVNTX1(.ONPASS,+OREVENT,"T")
"RTN","ORWDX",85,0)
 ;. S ORCAT=$S(OREVTYPE="A":"I",OREVTYPE="T":"I",ONPASS=1:"O",1:"O")
"RTN","ORWDX",86,0)
 ;E  S ORCAT=$S($L($P($G(^DPT(+ORVP,.1)),U)):"I",1:"O")
"RTN","ORWDX",87,0)
 ;=====================================================
"RTN","ORWDX",88,0)
 I DLG="PS MEDS" S ORWP94=1 D
"RTN","ORWDX",89,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSO SUPPLY",0)) S DLG="PSO SUPPLY"
"RTN","ORWDX",90,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSO OERR",0)) S DLG="PSO OERR"
"RTN","ORWDX",91,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSJ OR PAT OE",0)) S DLG="PSJ OR PAT OE"
"RTN","ORWDX",92,0)
 I DLG="PSO OERR"!(DLG="PSO SUPPLY") S ORCAT="O" I $G(OREVENT("EFFECTIVE")) D
"RTN","ORWDX",93,0)
 . S ORDIALOG($O(^ORD(101.41,"B","OR GTX START DATE"_$S($G(ORWP94):"/TIME",1:""),0)),1)=OREVENT("EFFECTIVE")
"RTN","ORWDX",94,0)
 I DLG="PSO OERR" D
"RTN","ORWDX",95,0)
 . N DRUGPRMT,OIPRMT,ORDRUG,OROI
"RTN","ORWDX",96,0)
 . S DRUGPRMT=+$O(^ORD(101.41,"B","OR GTX DISPENSE DRUG",0))
"RTN","ORWDX",97,0)
 . S ORDRUG=$G(ORDIALOG(DRUGPRMT,1))
"RTN","ORWDX",98,0)
 . I ORDRUG,$$ISSUPPLY^ORUTL3(ORDRUG) D
"RTN","ORWDX",99,0)
 . . S ORDG=+$O(^ORD(100.98,"B","SUPPLIES/DEVICES",0))
"RTN","ORWDX",100,0)
 . S OIPRMT=+$O(^ORD(101.41,"B","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDX",101,0)
 . S OROI=$G(ORDIALOG(OIPRMT,1))
"RTN","ORWDX",102,0)
 . I 'ORDRUG,OROI,$$ISOISPLY^ORUTL3(OROI) D
"RTN","ORWDX",103,0)
 . . S ORDG=+$O(^ORD(100.98,"B","SUPPLIES/DEVICES",0))
"RTN","ORWDX",104,0)
 I DLG="PSJ OR PAT OE" S ORCAT="I"
"RTN","ORWDX",105,0)
 I DLG="PSJ OR CLINIC OE" S ORCAT="I"
"RTN","ORWDX",106,0)
 I DLG="CLINIC OR PAT FLUID OE" S ORCAT="I"
"RTN","ORWDX",107,0)
 S:DLG="FHW1" ORCAT="I" S:DLG?1"FHW "2.7U1" MEAL" ORCAT="O"
"RTN","ORWDX",108,0)
 S ORVP=ORVP_";DPT(",ORL(2)=ORL_";SC(",ORL=ORL(2)
"RTN","ORWDX",109,0)
 I ORDG=$O(^ORD(100.98,"B","LAB",0)) D  ;use section
"RTN","ORWDX",110,0)
 . N OI,SUB S OI=+$G(ORDIALOG($$PTR^ORCD("OR GTX ORDERABLE ITEM"),1))
"RTN","ORWDX",111,0)
 . S SUB=$P($G(^ORD(101.43,OI,"LR")),U,6),ORDG=$$DGRP^ORMLR(SUB)
"RTN","ORWDX",112,0)
 K:'ORDG ORDG K:'ORIT ORIT ; Dgrp & Quick must be non-zero
"RTN","ORWDX",113,0)
 M ORCHECK=ORDIALOG("ORCHECK") K ORDIALOG("ORCHECK")
"RTN","ORWDX",114,0)
 S ORDIALOG=$O(^ORD(101.41,"AB",DLG,0))
"RTN","ORWDX",115,0)
 I 'ORDIALOG S ORDIALOG=$O(^ORD(101.41,"B",DLG,0))
"RTN","ORWDX",116,0)
 I $D(ORDIALOG("ORLEAD")) S ORLEAD=ORDIALOG("ORLEAD")
"RTN","ORWDX",117,0)
 I $D(ORDIALOG("ORTRAIL")) S ORTRAIL=ORDIALOG("ORTRAIL")
"RTN","ORWDX",118,0)
 D GETDLG1^ORCD(ORDIALOG)
"RTN","ORWDX",119,0)
 I $L(ORCATFN) S ORCAT=ORCATFN
"RTN","ORWDX",120,0)
 I $G(ORWP94) D
"RTN","ORWDX",121,0)
 . N SIGPRMT S SIGPRMT=$O(^ORD(101.41,"B","OR GTX SIG",0))
"RTN","ORWDX",122,0)
 . N INSPRMT S INSPRMT=$O(^ORD(101.41,"B","OR GTX INSTRUCTIONS",0))
"RTN","ORWDX",123,0)
 . I $L($G(ORDIALOG(SIGPRMT,1))) S ORDIALOG(INSPRMT,"FORMAT")="@"
"RTN","ORWDX",124,0)
 . I ORCAT="O" S ORPKG=$O(^DIC(9.4,"C","PSO",0))
"RTN","ORWDX",125,0)
 . I ORCAT="I" S ORPKG=$O(^DIC(9.4,"C","PSJ",0))
"RTN","ORWDX",126,0)
 S ORSRC=$G(ORSRC)
"RTN","ORWDX",127,0)
 D DELPI^ORWDX1 ;delete empty PI
"RTN","ORWDX",128,0)
 I $G(ORIFN)="" D  ; new order
"RTN","ORWDX",129,0)
 . D EN^ORCSAVE
"RTN","ORWDX",130,0)
 . S REC="" I ORIFN D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDX",131,0)
 . I '$D(^TMP("ORECALL",$J,ORDIALOG)) M ^TMP("ORECALL",$J,ORDIALOG)=ORDIALOG
"RTN","ORWDX",132,0)
 . D COMP^ORMBLDOR(+$G(ORIFN)) ;Sep 28, 2015 - PB - modified to trigger an unsolicited sync action
"RTN","ORWDX",133,0)
 E  D
"RTN","ORWDX",134,0)
 . N OR0
"RTN","ORWDX",135,0)
 . S OR0=$G(^OR(100,+ORIFN,0)),ORSTS=$P($G(^(3)),U,3),ORDG=$P(OR0,U,11)
"RTN","ORWDX",136,0)
 . I $L($P(OR0,U,17)),ORSTS=10 S OREVENT=$P(OR0,U,17),OREVENT("TS")=$P(OR0,U,13)
"RTN","ORWDX",137,0)
 . D XX^ORCSAVE ; edit order
"RTN","ORWDX",138,0)
 . D COMP^ORMBLDOR(+$G(ORIFN)) ;Sep 28, 2015 - PB - modified to trigger an unsolicited sync action
"RTN","ORWDX",139,0)
 . S REC="" S ORIFN=+ORIFN_";"_ORDA D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDX",140,0)
 I SENDMSG D
"RTN","ORWDX",141,0)
 .S MSGCAPT("ORIGINAL IEN")=$G(ORIFN)
"RTN","ORWDX",142,0)
 .D MSG^ORUTL5(REC,.MSGCAPT)
"RTN","ORWDX",143,0)
 .;M ^XTMP("AGP ORDER TEST")=MSGCAPT
"RTN","ORWDX",144,0)
 D:DLG="GMRCOR CONSULT" CHKAUTO^ORCSLT
"RTN","ORWDX",145,0)
 Q
"RTN","ORWDX",146,0)
SENDED(ORWLST,ORIENS,TS,LOC) ; Release EDOs to svc
"RTN","ORWDX",147,0)
 N OK,ORVP,ORWERR,ORSIGST,ORDA,ORNATURE,ORIX,X,PTEVT,ORIFN,J,EVENT,LOCK,OR3
"RTN","ORWDX",148,0)
 S ORWERR="",ORIX=0,LOC=LOC_";SC("
"RTN","ORWDX",149,0)
 F  S ORIX=$O(ORIENS(ORIX)) Q:'ORIX  D  Q:ORWERR]""
"RTN","ORWDX",150,0)
 . S (ORIFN,ORWLST(ORIX))=ORIENS(ORIX)
"RTN","ORWDX",151,0)
 . S PTEVT=$P(^OR(100,+ORIFN,0),U,17)
"RTN","ORWDX",152,0)
 . I PTEVT D
"RTN","ORWDX",153,0)
 .. I $D(EVENT(PTEVT)) S LOCK=1 Q
"RTN","ORWDX",154,0)
 .. S LOCK=$$LCKEVT^ORX2(PTEVT) S:LOCK EVENT(PTEVT)=""
"RTN","ORWDX",155,0)
 . I 'LOCK S ORWERR="1^delayed event is locked - another user is processing orders for this event" S ORWLST(ORIX)=ORWLST(ORIX)_"^E^"_ORWERR Q
"RTN","ORWDX",156,0)
 . S ORDA=$P(ORIFN,";",2) S:'ORDA ORDA=1
"RTN","ORWDX",157,0)
 . S ORVP=$P($G(^OR(100,+ORIFN,0)),U,2)
"RTN","ORWDX",158,0)
 . I $D(^OR(100,+ORIFN,8,ORDA,0)) D
"RTN","ORWDX",159,0)
 .. S ORSIGST=$P($G(^(0)),U,4),ORNATURE=$P($G(^(0)),U,12) ;naked references refer to OR(100,+ORIFN,8,ORDA on line above
"RTN","ORWDX",160,0)
 . S OK=$$LOCK1^ORX2(ORIFN) I 'OK S ORWERR="1^"_$P(OK,U,2)
"RTN","ORWDX",161,0)
 . I OK,$G(LOCK) D
"RTN","ORWDX",162,0)
 .. S OR3=$G(^OR(100,+ORIFN,3)) I $P(OR3,"^",3)'=10!($P(OR3,"^",9)]"") D UNLK1^ORX2(ORIENS(ORIX)) Q  ;order already released or has a parent
"RTN","ORWDX",163,0)
 .. S:$G(LOC) $P(^OR(100,+ORIFN,0),U,10)=LOC ;set location
"RTN","ORWDX",164,0)
 .. S:$G(TS) $P(^OR(100,+ORIFN,0),U,13)=TS ;set specialty
"RTN","ORWDX",165,0)
 .. D EN2^ORCSEND(ORIENS(ORIX),ORSIGST,ORNATURE,.ORWERR),UNLK1^ORX2(ORIENS(ORIX)) ;add ,LOCK to if statement for 195
"RTN","ORWDX",166,0)
 . I $L(ORWERR) S ORWLST(ORIX)=ORWLST(ORIX)_"^E^"_ORWERR Q
"RTN","ORWDX",167,0)
 . E  D
"RTN","ORWDX",168,0)
 .. S PTEVT=$P($G(^OR(100,+ORIENS(ORIX),0)),U,17)
"RTN","ORWDX",169,0)
 .. D:$$TYPE^OREVNTX(PTEVT)="M" SAVE^ORMEVNT1(ORIENS(ORIX),PTEVT,2)
"RTN","ORWDX",170,0)
 . S X="RS"
"RTN","ORWDX",171,0)
 . S $P(ORWLST(ORIX),U,2)=X
"RTN","ORWDX",172,0)
 S J=0 F  S J=$O(EVENT(J)) Q:'+J  D UNLEVT^ORX2(J) ;195
"RTN","ORWDX",173,0)
 Q
"RTN","ORWDX",174,0)
SEND(ORWLST,DFN,ORNP,ORL,ES,ORWREC) ; Sign
"RTN","ORWDX",175,0)
 ; DFN=Patient, ORNP=Provider, ORL=Location, ES=Encrypted ES code
"RTN","ORWDX",176,0)
 ; ORWREC(n)=ORIFN;Action^Signature Sts^Release Sts^Nature of Order
"RTN","ORWDX",177,0)
SEND1 N ORVP,ORWI,ORWERR,ORWREL,ORWSIG,ORWNATR,ORDERID,ORBEF,ORLR,ORLAB,X,I
"RTN","ORWDX",178,0)
 S ORVP=DFN_";DPT(",ORL=ORL_";SC(",ORL(2)=ORL,ORWLST=0
"RTN","ORWDX",179,0)
 F I="LR","VBEC" S X=+$O(^DIC(9.4,"C",I,0)) S:X ORLR(X)=1
"RTN","ORWDX",180,0)
 S ORWI=0 F  S ORWI=$O(ORWREC(ORWI)) Q:'ORWI  D
"RTN","ORWDX",181,0)
 . S X=ORWREC(ORWI),ORWERR=""
"RTN","ORWDX",182,0)
 . S ORDERID=$P(X,U),ORWSIG=$P(X,U,2),ORWREL=$P(X,U,3),ORWNATR=$P(X,U,4)
"RTN","ORWDX",183,0)
 . S ORBEF=0
"RTN","ORWDX",184,0)
 . I '$D(^OR(100,+ORDERID,0)) Q
"RTN","ORWDX",185,0)
 . I $D(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0)) S ORBEF=$P(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0),U,15)
"RTN","ORWDX",186,0)
 . S:$D(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0)) ORWNATR=$S($P(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0),"^",4)=3:"",1:ORWNATR)
"RTN","ORWDX",187,0)
 . S ORWERR=$$CHKACT^ORWDXR(ORDERID,ORWSIG,ORWREL,ORWNATR)
"RTN","ORWDX",188,0)
 . I $L(ORWERR) S ORWERR="1^"_ORWERR
"RTN","ORWDX",189,0)
 . I '$L(ORWERR) D
"RTN","ORWDX",190,0)
 .. I $G(ORLR(+$P(^OR(100,+ORDERID,0),U,14))),'$G(ORLAB) D  ; lab batch start
"RTN","ORWDX",191,0)
 ... I $L($T(BHS^ORMBLD)) D BHS^ORMBLD(ORVP) S ORLAB=1
"RTN","ORWDX",192,0)
 .. N OK S OK=$$LOCK1^ORX2(ORDERID) I 'OK S ORWERR="1^"_$P(OK,U,2)
"RTN","ORWDX",193,0)
 .. I OK D EN^ORCSEND(ORDERID,"",ORWSIG,ORWREL,ORWNATR,"",.ORWERR),UNLK1^ORX2(ORDERID)
"RTN","ORWDX",194,0)
 . S ORWLST(ORWI)=ORDERID,X=""
"RTN","ORWDX",195,0)
 . I $L(ORWERR) S ORWLST(ORWI)=ORWLST(ORWI)_"^E^"_ORWERR Q
"RTN","ORWDX",196,0)
 . I ORWREL,((ORBEF=10)!(ORBEF=11)),($P(^OR(100,+ORDERID,3),U,3)'=10) S X="R"
"RTN","ORWDX",197,0)
 . I ORWSIG'=2 S X=X_"S"
"RTN","ORWDX",198,0)
 . S $P(ORWLST(ORWI),U,2)=X
"RTN","ORWDX",199,0)
 I $G(ORLAB) D BTS^ORMBLD(ORVP)
"RTN","ORWDX",200,0)
 I $D(ORWLST)>9 D
"RTN","ORWDX",201,0)
 . N I,A
"RTN","ORWDX",202,0)
 . S I=0 F  S I=$O(ORWLST(I)) Q:I=""  S A=$G(ORWLST(I)) I A["Invalid Procedure, Inactive, no Imaging Type" D SM^ORWDX2(A)
"RTN","ORWDX",203,0)
  Q
"RTN","ORWDX",204,0)
DLGID(VAL,ORIFN) ; return dlg IEN for order
"RTN","ORWDX",205,0)
 S VAL=$P(^OR(100,+ORIFN,0),U,5)
"RTN","ORWDX",206,0)
 S VAL=$S($P(VAL,";",2)="ORD(101.41,":+VAL,1:0)
"RTN","ORWDX",207,0)
 Q
"RTN","ORWDX",208,0)
FORMID(VAL,ORIFN) ; Base dlg FormID for an order
"RTN","ORWDX",209,0)
 N DLG
"RTN","ORWDX",210,0)
 S VAL=0,DLG=$P(^OR(100,+ORIFN,0),U,5)
"RTN","ORWDX",211,0)
 Q:$P(DLG,";",2)'="ORD(101.41,"
"RTN","ORWDX",212,0)
 D FORMID^ORWDXM(.VAL,+DLG)
"RTN","ORWDX",213,0)
 Q
"RTN","ORWDX",214,0)
AGAIN(VAL,DLG) ; return true to keep dlg for another order
"RTN","ORWDX",215,0)
 S VAL=''$P($G(^ORD(101.41,DLG,0)),U,9)
"RTN","ORWDX",216,0)
 Q
"RTN","ORWDX",217,0)
DGRP(VAL,DLG) ; Display grp pointer for a dlg
"RTN","ORWDX",218,0)
 S DLG=$S($E(DLG)="`":+$P(DLG,"`",2),1:$O(^ORD(101.41,"AB",DLG,0))) ;kcm
"RTN","ORWDX",219,0)
 S VAL=$P($G(^ORD(101.41,DLG,0)),U,5)
"RTN","ORWDX",220,0)
 Q
"RTN","ORWDX",221,0)
DGNM(VAL,NM) ; Display grp pointer for name
"RTN","ORWDX",222,0)
 S VAL=$O(^ORD(100.98,"B",NM,0))
"RTN","ORWDX",223,0)
 Q
"RTN","ORWDX",224,0)
WRLST(LST,LOC) ; List of dlgs for writing orders
"RTN","ORWDX",225,0)
 G WRLST1^ORWDX1
"RTN","ORWDX",226,0)
MSG(LST,IEN) ; Msg text for orderable item
"RTN","ORWDX",227,0)
 N I
"RTN","ORWDX",228,0)
 S I=0 F  S I=$O(^ORD(101.43,IEN,8,I)) Q:I'>0  S LST(I)=^(I,0)
"RTN","ORWDX",229,0)
 Q
"RTN","ORWDX",230,0)
DISMSG(VAL,IEN) ; Disabled mge for ordering dlg
"RTN","ORWDX",231,0)
 S VAL=$P($G(^ORD(101.41,+IEN,0)),U,3)
"RTN","ORWDX",232,0)
 Q
"RTN","ORWDX",233,0)
LOCK(OK,DFN) ; Attempt to lock pt for ordering
"RTN","ORWDX",234,0)
 S OK=$$LOCK^ORX2(DFN)
"RTN","ORWDX",235,0)
 Q
"RTN","ORWDX",236,0)
UNLOCK(OK,DFN) ; Unlock pt for ordering
"RTN","ORWDX",237,0)
 D UNLOCK^ORX2(DFN) S OK=1
"RTN","ORWDX",238,0)
 Q
"RTN","ORWDX",239,0)
LOCKORD(OK,ORIFN) ; Attempt to lock order
"RTN","ORWDX",240,0)
 S OK=$$LOCK1^ORX2(ORIFN)
"RTN","ORWDX",241,0)
 Q
"RTN","ORWDX",242,0)
UNLKORD(OK,ORIFN) ; Unlock order
"RTN","ORWDX",243,0)
 D UNLK1^ORX2(ORIFN) S OK=1
"RTN","ORWDX",244,0)
 Q
"RTN","ORWDX",245,0)
UNLKOTH(OK,ORIFN) ; Unlock pt not by this session
"RTN","ORWDX",246,0)
 K ^XTMP("ORPTLK-"_ORIFN) S OK=1
"RTN","ORWDX",247,0)
 Q
"RTN","ORWDXA")
0^13^B119665285^B119097370
"RTN","ORWDXA",1,0)
ORWDXA ; SLC/KCM/JLI - Utilites for Order Actions ;12/21/17  07:23
"RTN","ORWDXA",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,132,148,141,149,187,213,195,215,243,280,306,390,421,436,434,397**;Dec 17, 1997;Build 22
"RTN","ORWDXA",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","ORWDXA",4,0)
 ;
"RTN","ORWDXA",5,0)
 ;
"RTN","ORWDXA",6,0)
VALID(VAL,ORID,ACTION,ORNP,ORWNAT) ; Is action valid for order?
"RTN","ORWDXA",7,0)
 N DG,ORACT,ORVP,ORVER,ORIFN,PRTID S VAL="",PRTID=0
"RTN","ORWDXA",8,0)
 I +ORID=0 S VAL="This order has been deleted." Q
"RTN","ORWDXA",9,0)
 I '$D(^OR(100,+ORID,0)) S VAL="This order has been deleted!" Q
"RTN","ORWDXA",10,0)
 I ACTION="XFR",'$L($T(XFR^ORCACT01)) S ACTION="RW" ; for pre-POE
"RTN","ORWDXA",11,0)
 N ORNSS S ORNSS=1
"RTN","ORWDXA",12,0)
 I (ACTION="RN") D VALSCH^ORWNSS(.ORNSS,ORID)
"RTN","ORWDXA",13,0)
 I ORNSS=0 S VAL="This order contains an invalid administration schedule." Q
"RTN","ORWDXA",14,0)
 I (ACTION="RN") D ISVALIV^ORWDPS33(.VAL,ORID,ACTION) I $L(VAL)>0 Q
"RTN","ORWDXA",15,0)
 S ORIFN=ORID,ORVP=$P(^OR(100,+ORID,0),U,2)  ; ORCACT0 expects
"RTN","ORWDXA",16,0)
 I (ACTION="RN") D  Q:$L(VAL)
"RTN","ORWDXA",17,0)
 . N DLG S DLG=$P(^OR(100,+ORID,0),U,5) Q:DLG'[";ORD(101.41,"
"RTN","ORWDXA",18,0)
 . I $G(^ORD(101.41,+DLG,3))'["PROVIDER^ORCDPSIV" Q
"RTN","ORWDXA",19,0)
 . D AUTH^ORWDPS32(.VAL,ORNP,+DLG)
"RTN","ORWDXA",20,0)
 . I VAL S VAL=$P(VAL,U,2)
"RTN","ORWDXA",21,0)
 . E  S VAL=""
"RTN","ORWDXA",22,0)
 S ORVER=$S(ACTION="CR":"R",$D(^XUSEC("ORELSE",DUZ)):"N",$D(^XUSEC("OREMAS",DUZ)):"C",1:"^")
"RTN","ORWDXA",23,0)
 I ACTION="CR" S ACTION="VR"
"RTN","ORWDXA",24,0)
 I (ACTION="ES")!(ACTION="OC")!(ACTION="RS") S ORACT=ACTION ; why not defined???
"RTN","ORWDXA",25,0)
 I (ACTION="VR"),'($D(^XUSEC("ORELSE",DUZ))!$D(^XUSEC("OREMAS",DUZ))) D  Q
"RTN","ORWDXA",26,0)
 . S VAL="You are not authorized to verify these orders."
"RTN","ORWDXA",27,0)
 I $L(VAL) Q
"RTN","ORWDXA",28,0)
 N OIIEN,ISIV,IVOD
"RTN","ORWDXA",29,0)
 S (ISIV,OIIEN,IVOD)=0
"RTN","ORWDXA",30,0)
 I (ACTION="RW")!(ACTION="XX")!(ACTION="XFR") D  Q:$L(VAL)
"RTN","ORWDXA",31,0)
 . S ISIV=$P(^OR(100,+ORID,0),U,11)
"RTN","ORWDXA",32,0)
 . I ISIV,($P(^ORD(100.98,ISIV,0),U,3)="IV RX") S IVOD=1
"RTN","ORWDXA",33,0)
 . D:'IVOD GTORITM^ORWDXR(.OIIEN,+ORID)
"RTN","ORWDXA",34,0)
 . D:OIIEN ISACTOI(.VAL,OIIEN) I $L(VAL)>0 Q
"RTN","ORWDXA",35,0)
 . N DLG,FRM,A,ORDG,I,TYPE,B
"RTN","ORWDXA",36,0)
 . S A=^OR(100,+ORID,0),DLG=$P(A,U,5),ORDG=$P(A,"^",11),FRM=0
"RTN","ORWDXA",37,0)
 . I $P(DLG,";",2)'="ORD(101.41," S DLG=0
"RTN","ORWDXA",38,0)
 . I DLG D FORMID^ORWDXM(.FRM,+DLG)
"RTN","ORWDXA",39,0)
 . I '(DLG&FRM) D
"RTN","ORWDXA",40,0)
 . . S VAL="Copy & Change are not implemented for this order that predates CPRS."
"RTN","ORWDXA",41,0)
 . I ACTION="XX" D  ;PATLOC is being passed in and not defined in this routine
"RTN","ORWDXA",42,0)
 .. F I="UNIT DOSE MEDICATIONS","INPATIENT MEDICATIONS","IV MEDICATIONS" S A=$O(^ORD(100.98,"B",I,"")) I A S A(A)=""
"RTN","ORWDXA",43,0)
 .. S TYPE="" I $G(PATLOC) S TYPE=$P(^SC(PATLOC,0),"^",3)
"RTN","ORWDXA",44,0)
 .. I $D(A(ORDG)),TYPE="C" S B=1 D SDAUTHCL^SDAMA203(PATLOC,.B) I B=1 S VAL="Cannot use a Clinic Location for this change. Please check your encounter location."
"RTN","ORWDXA",45,0)
 S DG=$P(^OR(100,+ORID,0),U,11)
"RTN","ORWDXA",46,0)
 I DG,($P(^ORD(100.98,DG,0),U,3)="CSDAM"),$P($G(^OR(100,+ORID,3)),U,3)=9 S VAL="Partial Return to Clinic Orders cannot be discontinued." Q
"RTN","ORWDXA",47,0)
 N OREBUILD
"RTN","ORWDXA",48,0)
 ;I (ACTION="RW")!(ACTION="XFR")!(ACTION="RN") D ISVALIV^ORWDPS33(.VAL,ORID,ACTION) I $L(VAL)>0 Q
"RTN","ORWDXA",49,0)
 I $$VALID^ORCACT0(ORID,ACTION,.VAL,$G(ORWNAT)) S VAL="" ; VAL=error
"RTN","ORWDXA",50,0)
 I ACTION="RN",$$UPCTCHK(ORID) S VAL="Cannot renew this order due to an illegal character ""^"" in the comments or patient instructions."
"RTN","ORWDXA",51,0)
 I ACTION="RW",$$UPCTCHK(ORID) S VAL="Cannot copy this order due to an illegal character ""^"" in the comments or patient instructions."
"RTN","ORWDXA",52,0)
 Q
"RTN","ORWDXA",53,0)
 ;
"RTN","ORWDXA",54,0)
HOLD(REC,ORID,ORNP) ; Place order on hold
"RTN","ORWDXA",55,0)
 N ACTDA
"RTN","ORWDXA",56,0)
 S ACTDA=$$ACTION^ORCSAVE("HD",+ORID,ORNP)
"RTN","ORWDXA",57,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",58,0)
 Q
"RTN","ORWDXA",59,0)
UNHOLD(REC,ORID,ORNP) ; Release order from hold
"RTN","ORWDXA",60,0)
 N ACTDA
"RTN","ORWDXA",61,0)
 S ACTDA=$$ACTION^ORCSAVE("RL",+ORID,ORNP)
"RTN","ORWDXA",62,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",63,0)
 Q
"RTN","ORWDXA",64,0)
DC(REC,ORID,ORNP,ORL,REASON,DCORIG,ISNEWORD) ; Discontinue/Cancel/Delete order
"RTN","ORWDXA",65,0)
 N NATURE,CREATE,PRINT,STATUS,ACTDA,SIGSTS
"RTN","ORWDXA",66,0)
 N X3,X8,CURRACT
"RTN","ORWDXA",67,0)
 Q:'+ORID
"RTN","ORWDXA",68,0)
 I $G(DCORIG)="" S DCORIG=0
"RTN","ORWDXA",69,0)
 S CURRACT=0
"RTN","ORWDXA",70,0)
 S ORL(2)=ORL_";SC(",ORL=ORL(2),NATURE=""
"RTN","ORWDXA",71,0)
 I REASON S NATURE=$P(^ORD(100.02,$P(^ORD(100.03,REASON,0),U,7),0),U,2)
"RTN","ORWDXA",72,0)
 S:NATURE="" NATURE="W"  ; S:ORNP=DUZ NATURE="E"
"RTN","ORWDXA",73,0)
 ;change the way create work to support forcing signature for all DC
"RTN","ORWDXA",74,0)
 ;reasons
"RTN","ORWDXA",75,0)
 S CREATE=1,PRINT=$$PRINT^ORCACT2(NATURE)
"RTN","ORWDXA",76,0)
 ;S CREATE=$$CREATE^ORX1(NATURE)
"RTN","ORWDXA",77,0)
 S X3=$G(^OR(100,+ORID,3))
"RTN","ORWDXA",78,0)
 S CURRACT=$P(X3,U,7) S:CURRACT<1 CURRACT=+$O(^OR(100,+ORID,8,"?"),-1)
"RTN","ORWDXA",79,0)
 I '$D(^OR(100,+ORID,8,+$P(ORID,";",2),0)) D
"RTN","ORWDXA",80,0)
 . S X8=$G(^OR(100,+ORID,8,CURRACT,0))
"RTN","ORWDXA",81,0)
 . S SIGSTS=$P(X8,U,4)
"RTN","ORWDXA",82,0)
 . S $P(ORID,";",2)=CURRACT
"RTN","ORWDXA",83,0)
 E  D
"RTN","ORWDXA",84,0)
 . S X8=^OR(100,+ORID,8,+$P(ORID,";",2),0)
"RTN","ORWDXA",85,0)
 . S SIGSTS=$P(X8,U,4)
"RTN","ORWDXA",86,0)
 I '$D(SIGSTS) S SIGSTS=1
"RTN","ORWDXA",87,0)
 S STATUS=$P($G(^OR(100,+ORID,8,+$P(ORID,";",2),0)),U,15)
"RTN","ORWDXA",88,0)
 I (STATUS=10)!(STATUS=11) D  Q   ; delete/cancel unreleased order
"RTN","ORWDXA",89,0)
 . N RPLORD
"RTN","ORWDXA",90,0)
 . S RPLORD=$P($G(^OR(100,+ORID,3)),U,5)    ; replaced order
"RTN","ORWDXA",91,0)
 . D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",92,0)
 . I STATUS=10,($P(X8,U,4)'=2) D  ; CANCEL signed, delayed, unreleased
"RTN","ORWDXA",93,0)
 . . ; taken from CLRDLY^ORCACT2
"RTN","ORWDXA",94,0)
 . . I REASON D SET^ORCACT2(+ORID,NATURE,REASON,,DCORIG)
"RTN","ORWDXA",95,0)
 . . I 'REASON D SET^ORCACT2(+ORID,"M","","Delayed Order Cancelled",DCORIG)
"RTN","ORWDXA",96,0)
 . . D STATUS^ORCSAVE2(+ORID,13) S $P(^OR(100,+ORID,8,1,0),U,15)=13
"RTN","ORWDXA",97,0)
 . . ;D COMP^ORMBLDOR(+$G(ORID)) ;  modified to trigger an unsolicited sync action when a signed order is discontinued
"RTN","ORWDXA",98,0)
 . E  D                           ; CANCEL OR DELETE unsigned, unreleased
"RTN","ORWDXA",99,0)
 . . I $P(X8,U,2)="DC" K ^OR(100,+ORID,6)
"RTN","ORWDXA",100,0)
 . . ; delete fwd ptr to order about to be deleted
"RTN","ORWDXA",101,0)
 . . I RPLORD,$P(X8,U,2)="NW" S $P(^OR(100,RPLORD,3),U,6)=""
"RTN","ORWDXA",102,0)
 . . ; delete ptr to order in Patient Event file #100.2
"RTN","ORWDXA",103,0)
 . . N EVT S EVT=$P($G(^OR(100,+ORID,0)),U,17) I EVT,EVT=+$O(^ORE(100.2,"AO",+ORID,0)) S $P(^ORE(100.2,EVT,0),U,4)="" K ^ORE(100.2,"AO",+ORID,EVT)
"RTN","ORWDXA",104,0)
 . . I $G(ISNEWORD) D POST^HMPEVNT(+$P(^OR(100,+ORID,0),U,2),"order",+ORID,"@") D
"RTN","ORWDXA",105,0)
 . . . ; Delete the discontinued order in HMP(800000, if the order is discontinued before it is signed it is deleted in OR(100,
"RTN","ORWDXA",106,0)
 . . . ; we need to delete in HMP(800000 as since the order number can be reused by OR(100
"RTN","ORWDXA",107,0)
 . . . N HDFN S HDFN=+$P(^OR(100,+ORID,0),U,2) I $D(^HMP(800000,$$SRVRNO^HMPOR(HDFN),1,HDFN,1,+ORID,0)) D DELORDR^HMPOR(+HDFN,+ORID)
"RTN","ORWDXA",108,0)
 . . I $G(ISNEWORD) D DELETE^ORCSAVE2(ORID)
"RTN","ORWDXA",109,0)
 . . I '$G(ISNEWORD) D
"RTN","ORWDXA",110,0)
 . . . ; Update action date/time in hmp orders subfile
"RTN","ORWDXA",111,0)
 . . . N RSLT,VALS,HDFN
"RTN","ORWDXA",112,0)
 . . . S HDFN=+$P(^OR(100,+ORID,0),U,2)
"RTN","ORWDXA",113,0)
 . . . S VALS(.15)=$$NOW^XLFDT
"RTN","ORWDXA",114,0)
 . . . D UPDTORDR^HMPOR(.RSLT,.VALS,+ORID,HDFN)
"RTN","ORWDXA",115,0)
 . . . ; handle errors from UPDTORDR, Can't just quit here
"RTN","ORWDXA",116,0)
 . . . ; Trigger unsolicited update
"RTN","ORWDXA",117,0)
 . . . D POST^HMPEVNT(+$P(^OR(100,+ORID,0),U,2),"order",+ORID)
"RTN","ORWDXA",118,0)
 . . . ; Now cancel the order
"RTN","ORWDXA",119,0)
 . . . D CANCEL^ORCSAVE2(ORID)
"RTN","ORWDXA",120,0)
 . I RPLORD,'(SIGSTS=1) S ORID=RPLORD  ; for Renews & Changes, show replaced order
"RTN","ORWDXA",121,0)
 . I '$D(^OR(100,+ORID)) D
"RTN","ORWDXA",122,0)
 . . S $P(REC(1),U)="~0",REC(2)="tDELETED: "_$E(REC(2),2,245)
"RTN","ORWDXA",123,0)
 . E  D
"RTN","ORWDXA",124,0)
 . . K REC
"RTN","ORWDXA",125,0)
 . . D GETBYIFN^ORWORR(.REC,+ORID_";"_$P($G(^OR(100,+ORID,3)),U,7))
"RTN","ORWDXA",126,0)
 . S $P(REC(1),U,14)=2 ; DCType = deletion
"RTN","ORWDXA",127,0)
 S ACTDA=$$ACTION^ORCSAVE("DC",+ORID,ORNP)
"RTN","ORWDXA",128,0)
 D SET^ORCACT2(+ORID,NATURE,REASON,,DCORIG)
"RTN","ORWDXA",129,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",130,0)
 S $P(REC(1),U,14)=$S(CREATE:1,1:3)  ;DCType - 1=NewOrder, 3=NewStatus
"RTN","ORWDXA",131,0)
 N PKG
"RTN","ORWDXA",132,0)
 S PKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDXA",133,0)
 S PKG=$$NMSP^ORCD(PKG)
"RTN","ORWDXA",134,0)
 I REASON=16&(PKG="PS") D
"RTN","ORWDXA",135,0)
 . N XMB
"RTN","ORWDXA",136,0)
 . S XMB="OR DRUG ORDER CANCELLED"
"RTN","ORWDXA",137,0)
 . S XMB(1)=$P($G(REC(2)),"tDiscontinue",2),XMB(4)=$P($G(^VA(200,DUZ,0)),U)
"RTN","ORWDXA",138,0)
 . S XMB(2)=+ORID
"RTN","ORWDXA",139,0)
 . S XMB(3)=+$P($G(^OR(100,+ORID,0)),U,2)
"RTN","ORWDXA",140,0)
 . S XMB(3)=$P($G(^DPT(XMB(3),0)),U)
"RTN","ORWDXA",141,0)
 . D ^XMB
"RTN","ORWDXA",142,0)
 Q
"RTN","ORWDXA",143,0)
DCREQIEN(VAL) ; Return IEN for Req Phys Cancelled reason
"RTN","ORWDXA",144,0)
 S VAL=$O(^ORD(100.03,"S","REQ",0))
"RTN","ORWDXA",145,0)
 Q
"RTN","ORWDXA",146,0)
COMPLETE(REC,ORID,ESCODE) ; Complete order (generic)
"RTN","ORWDXA",147,0)
 ;N X S X=+$E($$NOW^XLFDT,1,12)
"RTN","ORWDXA",148,0)
 ;D DATES^ORCSAVE2(+ORID,,X)
"RTN","ORWDXA",149,0)
 ;D STATUS^ORCSAVE2(+ORID,2)
"RTN","ORWDXA",150,0)
 ; validate ESCode
"RTN","ORWDXA",151,0)
 D COMP^ORCSAVE2(ORID)
"RTN","ORWDXA",152,0)
 D COMP^ORMBLDOR(ORID)
"RTN","ORWDXA",153,0)
 D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",154,0)
 D COMPLETE^ORUTL5(ORID)
"RTN","ORWDXA",155,0)
 Q
"RTN","ORWDXA",156,0)
VERIFY(REC,ORID,ESCODE,ORVER) ; Verify order
"RTN","ORWDXA",157,0)
 ; validate ESCode
"RTN","ORWDXA",158,0)
 S ORVER=$G(ORVER,$S($D(^XUSEC("ORELSE",DUZ)):"N",$D(^XUSEC("OREMAS",DUZ)):"C",1:U))
"RTN","ORWDXA",159,0)
 I ORVER'=U D
"RTN","ORWDXA",160,0)
 . N ORIFN,ORES,ORI
"RTN","ORWDXA",161,0)
 . ; VERIFY any replaced orders:
"RTN","ORWDXA",162,0)
 . S ORIFN=ORID,ORES(ORIFN)="" D REPLCD^ORCACT1
"RTN","ORWDXA",163,0)
 . S ORI="" F  S ORI=$O(ORES(ORI)) Q:ORI=""  D EN^ORCSEND(ORI,"VR","",""),UNLK1^ORX2(+ORI):ORI'=ORID ;ORID locked prior
"RTN","ORWDXA",164,0)
 D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",165,0)
 Q
"RTN","ORWDXA",166,0)
ALERT(DUMMY,ORID,ORDUZ) ; alert user (ORDUZ) when order (ORID) resulted
"RTN","ORWDXA",167,0)
 ;if no user passed, use ordering provider:
"RTN","ORWDXA",168,0)
 I $G(ORDUZ)<1 S ORDUZ=+$$ORDERER^ORQOR2(+ORID)
"RTN","ORWDXA",169,0)
 I $L($G(ORDUZ))<1 S ORDUZ=DUZ
"RTN","ORWDXA",170,0)
 S DUMMY=1,$P(^OR(100,+ORID,3),U,10)=ORDUZ
"RTN","ORWDXA",171,0)
 Q
"RTN","ORWDXA",172,0)
FLAG(REC,ORIFN,OREASON,ORNP) ; Flag order
"RTN","ORWDXA",173,0)
 ;variable XMZ is not defined by this section, but passed in (if available)
"RTN","ORWDXA",174,0)
 N ORB,ORVP,DA,ORPS,ORNOW
"RTN","ORWDXA",175,0)
 S ORNOW=$$NOW^XLFDT
"RTN","ORWDXA",176,0)
 D BULLETIN
"RTN","ORWDXA",177,0)
 S DA=$P(ORIFN,";",2),ORVP=+$P(^OR(100,+ORIFN,0),U,2)
"RTN","ORWDXA",178,0)
 K ^OR(100,+ORIFN,8,DA,3) S ^(3)="1^"_$G(XMZ)_U_+$E($$NOW^XLFDT,1,12)_U_DUZ_U_OREASON_$S($G(ORNP):"^^^^"_+ORNP,1:"")
"RTN","ORWDXA",179,0)
 D KILL^XM,MSG^ORCFLAG(ORIFN)
"RTN","ORWDXA",180,0)
 S $P(^OR(100,+ORIFN,3),U)=ORNOW ; Last Activity
"RTN","ORWDXA",181,0)
 I +$G(ORNP)<1 S ORNP=+$P($G(^OR(100,+ORIFN,8,DA,0)),U,3)
"RTN","ORWDXA",182,0)
 S ORB=+ORVP_U_+ORIFN_U_ORNP_"^1" D EN^OCXOERR(ORB) ; notification
"RTN","ORWDXA",183,0)
 D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDXA",184,0)
 D HMPFLAG(+ORIFN,ORVP,ORNOW,DUZ,"F",OREASON,DA)
"RTN","ORWDXA",185,0)
 ;
"RTN","ORWDXA",186,0)
 Q
"RTN","ORWDXA",187,0)
BULLETIN ; flagged order bulletin
"RTN","ORWDXA",188,0)
 ;variables OREASON and ORIFN are assumed to be defined by the calling process and
"RTN","ORWDXA",189,0)
 ;are neither KILLed or NEWed in this section
"RTN","ORWDXA",190,0)
 N OR0,OR3,ORDTXT,XMB,XMY,XMDUZ,ORENT,BULL,ORSRV,ORUSR
"RTN","ORWDXA",191,0)
 S OR0=$G(^OR(100,+ORIFN,0)),OR3=$G(^(3))
"RTN","ORWDXA",192,0)
 ;CLA - 3/21/96:
"RTN","ORWDXA",193,0)
 S ORUSR=+$P(OR0,U,4)
"RTN","ORWDXA",194,0)
 S ORSRV=$G(^VA(200,ORUSR,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORWDXA",195,0)
 S ORENT="USR.`"_ORUSR_"^SRV.`"_$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","ORWDXA",196,0)
 S BULL=$$GET^XPAR(ORENT,"ORB FLAGGED ORDERS BULLETIN",1,"Q")
"RTN","ORWDXA",197,0)
 Q:$G(BULL)'="Y"   ;quit if parm val not 'Y'es
"RTN","ORWDXA",198,0)
 ;
"RTN","ORWDXA",199,0)
 S XMB="OR FLAGGED ORDER",XMDUZ=DUZ,XMY(+$P(OR0,U,4))=""
"RTN","ORWDXA",200,0)
 S XMB(1)=$P(^DPT(+$P(OR0,U,2),0),U),XMB(2)=$P(^(0),U,9),XMB(3)="" ;sb AGE
"RTN","ORWDXA",201,0)
 S XMB(4)=$$FMTE^XLFDT($P(OR0,U,7))
"RTN","ORWDXA",202,0)
 D TEXT^ORQ12(.ORDTXT,+ORIFN,80)
"RTN","ORWDXA",203,0)
 S XMB(5)=$G(ORDTXT(1)),XMB(6)=$G(ORDTXT(2)),XMB(7)=$G(ORDTXT(3))
"RTN","ORWDXA",204,0)
 S XMB(8)=$$FMTE^XLFDT($P(OR0,U,8)),XMB(9)=$$FMTE^XLFDT($P(OR0,U,9)),XMB(10)=OREASON
"RTN","ORWDXA",205,0)
 S XMB(11)=$P($G(^ORD(100.01,+$P(OR3,U,3),0)),U)
"RTN","ORWDXA",206,0)
 D EN^XMB
"RTN","ORWDXA",207,0)
 Q
"RTN","ORWDXA",208,0)
UNFLAG(REC,ORIFN,OREASON) ; Unflag order
"RTN","ORWDXA",209,0)
 N DA,ORB,ORNP,ORVP,ORPS,ORNOW
"RTN","ORWDXA",210,0)
 S ORNOW=$$NOW^XLFDT
"RTN","ORWDXA",211,0)
 S DA=$P(ORIFN,";",2),ORVP=+$P(^OR(100,+ORIFN,0),U,2)
"RTN","ORWDXA",212,0)
 S $P(^OR(100,+ORIFN,8,DA,3),U)=0,$P(^(3),U,6,8)=+$E($$NOW^XLFDT,1,12)_U_DUZ_U_OREASON D MSG^ORCFLAG(ORIFN)
"RTN","ORWDXA",213,0)
 S $P(^OR(100,+ORIFN,3),U)=ORNOW  ; Last Activity
"RTN","ORWDXA",214,0)
 S ORNP=+$P($G(^OR(100,+ORIFN,8,DA,0)),U,3)
"RTN","ORWDXA",215,0)
 S ORB=+ORVP_U_+ORIFN_U_ORNP_"^0" D EN^OCXOERR(ORB) ; notification
"RTN","ORWDXA",216,0)
 D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDXA",217,0)
 D HMPFLAG(+ORIFN,ORVP,ORNOW,DUZ,"U",OREASON,DA)
"RTN","ORWDXA",218,0)
 Q
"RTN","ORWDXA",219,0)
FLAGTXT(LST,ORID) ; flag reason
"RTN","ORWDXA",220,0)
 N FLAG
"RTN","ORWDXA",221,0)
 S FLAG=$G(^OR(100,+ORID,8,$P(ORID,";",2),3))
"RTN","ORWDXA",222,0)
 S LST(1)="FLAGGED: "_$$FMTE^XLFDT($P(FLAG,U,3))_" by "_$P($G(^VA(200,+$P(FLAG,U,4),0)),U)
"RTN","ORWDXA",223,0)
 S LST(2)=$P(FLAG,U,5) ; reason
"RTN","ORWDXA",224,0)
 Q
"RTN","ORWDXA",225,0)
WCGET(LST,ORID) ; ward comments
"RTN","ORWDXA",226,0)
 N I,ORIFN,ACT S ORIFN=+ORID,ACT=+$P(ORID,";",2)
"RTN","ORWDXA",227,0)
 S I=0 F  S I=$O(^OR(100,ORIFN,8,ACT,5,I)) Q:'I  S LST(I)=$G(^(I,0))
"RTN","ORWDXA",228,0)
 Q
"RTN","ORWDXA",229,0)
WCPUT(ERR,ORID,WCLST) ; Set ward comments
"RTN","ORWDXA",230,0)
 N DIERR,ERRLST,ORIFN,ACT S ORIFN=+ORID,ACT=+$P(ORID,";",2)
"RTN","ORWDXA",231,0)
 D WP^DIE(100.008,ACT_","_ORIFN_",",50,"","WCLST","ERRLST")
"RTN","ORWDXA",232,0)
 S ERR="" I $D(DIERR) S ERR="An error occurred while saving comments."
"RTN","ORWDXA",233,0)
 Q
"RTN","ORWDXA",234,0)
OFCPLX(ORY,ORID,PRTORDER) ; is ORID child of PRTORDER
"RTN","ORWDXA",235,0)
 N NUMCHDS,NOWID,NOWVAL,X3,ORDA,ISNOW
"RTN","ORWDXA",236,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXA",237,0)
 S ISNOW=0
"RTN","ORWDXA",238,0)
 D ISNOW^ORWDXR(.ISNOW,+ORID)
"RTN","ORWDXA",239,0)
 Q:ISNOW
"RTN","ORWDXA",240,0)
 N PKG
"RTN","ORWDXA",241,0)
 S PKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDXA",242,0)
 S PKG=$$NMSP^ORCD(PKG)
"RTN","ORWDXA",243,0)
 I PKG'="PS" Q
"RTN","ORWDXA",244,0)
 I $L($G(^OR(100,+ORID,3))),('$L($P(^(3),U,9))) Q
"RTN","ORWDXA",245,0)
 S (NUMCHDS,NOWID,NOWVAL,X3,ORDA)=0
"RTN","ORWDXA",246,0)
 S PRTORDER=+$P(^(3),U,9)
"RTN","ORWDXA",247,0)
 S X3=$G(^OR(100,PRTORDER,3)),ORDA=$P(X3,U,7)
"RTN","ORWDXA",248,0)
 S PRTORDER=PRTORDER_";"_ORDA
"RTN","ORWDXA",249,0)
 S NUMCHDS=$P($G(^OR(100,+PRTORDER,2,0)),U,4)
"RTN","ORWDXA",250,0)
 I NUMCHDS>2 S ORY="COMPLEX-PSI"_U_PRTORDER
"RTN","ORWDXA",251,0)
 S:$D(^OR(100,+PRTORDER,4.5,"ID","NOW")) NOWID=$O(^("NOW",0))
"RTN","ORWDXA",252,0)
 S:NOWID NOWVAL=$G(^OR(100,+PRTORDER,4.5,NOWID,1))
"RTN","ORWDXA",253,0)
 I NOWVAL=1 Q
"RTN","ORWDXA",254,0)
 E  S ORY="COMPLEX-PSI"_U_PRTORDER
"RTN","ORWDXA",255,0)
 Q
"RTN","ORWDXA",256,0)
ISACTOI(ORY,OI) ; Is ord item active?
"RTN","ORWDXA",257,0)
 I $G(^ORD(101.43,+OI,.1)),^(.1)'>$$NOW^XLFDT D
"RTN","ORWDXA",258,0)
 . S ORY=$P($G(^ORD(101.43,OI,0)),U)_" has been inactivated and may not be ordered anymore."
"RTN","ORWDXA",259,0)
 Q
"RTN","ORWDXA",260,0)
UPCTCHK(ORID) ;
"RTN","ORWDXA",261,0)
 ;ORID=ORDER NUMBER
"RTN","ORWDXA",262,0)
 ;RETURNS 1 IF THERE IS AN UPCARET IN THE ORDER'S COMMENTS
"RTN","ORWDXA",263,0)
 N RET,COMMID,WPCNT,PIID S RET=0
"RTN","ORWDXA",264,0)
 S COMMID=$O(^OR(100,+ORID,4.5,"ID","COMMENT",0))
"RTN","ORWDXA",265,0)
 I COMMID S WPCNT=0 F  S WPCNT=$O(^OR(100,+ORID,4.5,COMMID,2,WPCNT)) Q:'WPCNT!(RET)  D
"RTN","ORWDXA",266,0)
 .I $G(^OR(100,+ORID,4.5,COMMID,2,WPCNT,0))["^" S RET=1
"RTN","ORWDXA",267,0)
 S PIID=$O(^OR(100,+ORID,4.5,"ID","PI",0))
"RTN","ORWDXA",268,0)
 I PIID S WPCNT=0 F  S WPCNT=$O(^OR(100,+ORID,4.5,PIID,2,WPCNT)) Q:'WPCNT!(RET)  D
"RTN","ORWDXA",269,0)
 .I $G(^OR(100,+ORID,4.5,PIID,2,WPCNT,0))["^" S RET=1
"RTN","ORWDXA",270,0)
 Q RET
"RTN","ORWDXA",271,0)
HMPFLAG(ORIFN,HMDFN,WHEN,USR,FLGACTN,RSN,ORACLVL) ;
"RTN","ORWDXA",272,0)
 ; ORACLVL = ^OR(100,ORIFN,8,level)
"RTN","ORWDXA",273,0)
 ;
"RTN","ORWDXA",274,0)
 N RSLT,VAL  ; result, FileMan values
"RTN","ORWDXA",275,0)
 S VAL(.01)=$G(WHEN)  ; date/time of activity
"RTN","ORWDXA",276,0)
 S VAL(.02)=$G(FLGACTN)  ; flag or unflag
"RTN","ORWDXA",277,0)
 S VAL(.03)=$G(USR)  ; DUZ
"RTN","ORWDXA",278,0)
 S VAL(.04)=$G(RSN)  ; flag/unflag reason
"RTN","ORWDXA",279,0)
 D ADDFLAG^HMPOR(.RSLT,.VAL,+$G(ORIFN),$G(HMDFN),ORACLVL_";"_$G(FLGACTN))
"RTN","ORWDXA",280,0)
 Q:RSLT<0  D COMP^ORMBLDOR(+$G(ORIFN))  ;trigger unsolicited synch for flag/unflag
"RTN","ORWDXA",281,0)
 Q
"RTN","ORWDXM1")
0^19^B121528037^B114227639
"RTN","ORWDXM1",1,0)
ORWDXM1 ;SLC/KCM - Order Dialogs, Menus ;Apr 16, 2019@14:14
"RTN","ORWDXM1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,131,132,141,178,185,187,215,243,280,331,388,350,423,434,494,397**;Dec 17, 1997;Build 22
"RTN","ORWDXM1",3,0)
 ;
"RTN","ORWDXM1",4,0)
 ;
"RTN","ORWDXM1",5,0)
BLDQRSP(LST,ORIT,FLDS,ISIMO,ENCLOC) ; Build responses for an order
"RTN","ORWDXM1",6,0)
 ; LST=QuickLevel^ResponseID(ORIT;$H)^Dialog^Type^FormID^DGrp
"RTN","ORWDXM1",7,0)
 ; LST(n)=verify or reject text
"RTN","ORWDXM1",8,0)
 ; ORIT= ptr to 101.41 for quick order, 100 for copy
"RTN","ORWDXM1",9,0)
 ; 1 2 3 4 5 6 7 8 11-20
"RTN","ORWDXM1",10,0)
 ; FLDS=DFN^LOC^ORNP^INPT^SEX^AGE^EVENT^SC%^^^Key Variables...
"RTN","ORWDXM1",11,0)
 ; ORIT=+ORIT: ptr to 101.41, $E(ORIT)=C: copy $E(ORIT)=X: change
"RTN","ORWDXM1",12,0)
 ; !! SHOULD CHECK for PRE-CPRS ORDERS (treat as text?)
"RTN","ORWDXM1",13,0)
 K ^TMP($J,"ORWDX LOADRSP","QO SAVE")
"RTN","ORWDXM1",14,0)
 K ^TMP("ORWDXMQ",$J)
"RTN","ORWDXM1",15,0)
 N ORWMODE ; 0:Dlg,Quick 1:copy 2:change
"RTN","ORWDXM1",16,0)
 N TEMPCAT ; pt cat from DPT
"RTN","ORWDXM1",17,0)
 N ISXFER ; Trnsfr order?
"RTN","ORWDXM1",18,0)
 N ORIMO ;If IMO(inpt med on opt)
"RTN","ORWDXM1",19,0)
 N TEMPORIT
"RTN","ORWDXM1",20,0)
 N ADMLOC,PATLOC,ORDLOC,LEVEL,DELAY,SCHLOC,SCHTYP
"RTN","ORWDXM1",21,0)
 S PATLOC=$P(FLDS,U,2)
"RTN","ORWDXM1",22,0)
 S ORDLOC=$S(ORIT["C":+$P($G(^OR(100,+$P(ORIT,"C",2),0)),U,10),1:0)
"RTN","ORWDXM1",23,0)
 S ORIMO=$G(ISIMO)
"RTN","ORWDXM1",24,0)
 S ORWMODE=0,ISXFER=""
"RTN","ORWDXM1",25,0)
 S:$E(ORIT)="C" ORWMODE=1 S:$E(ORIT)="T" ORWMODE=1,ISXFER=";T" ;treat xfer as copy
"RTN","ORWDXM1",26,0)
 S:$E(ORIT)="X" ORWMODE=2
"RTN","ORWDXM1",27,0)
 S TEMPORIT=ORIT
"RTN","ORWDXM1",28,0)
 I ORWMODE S ORIT=$E(ORIT,2,999)
"RTN","ORWDXM1",29,0)
 S LST(0)=""
"RTN","ORWDXM1",30,0)
 ;disable
"RTN","ORWDXM1",31,0)
 D CHKDSBL^ORWDXM3(.LST,ORIT,ORWMODE) Q:+LST(0)=8
"RTN","ORWDXM1",32,0)
 ;action
"RTN","ORWDXM1",33,0)
 D CHKVACT^ORWDXM3(.LST,ORIT,ORWMODE,$P(FLDS,U,3)) Q:+LST(0)=8
"RTN","ORWDXM1",34,0)
 ;no copy
"RTN","ORWDXM1",35,0)
 I ORWMODE=1 D CHKCOPY^ORWDXM3(.LST,ORIT,FLDS) Q:+LST(0)=8
"RTN","ORWDXM1",36,0)
 ;change
"RTN","ORWDXM1",37,0)
 I ORWMODE=2 D BLD4CHG^ORWDXM3(.LST,ORIT,FLDS) Q
"RTN","ORWDXM1",38,0)
 I 'ORWMODE,($P(^ORD(101.41,+ORIT,0),U,4)="D"),$P(^ORD(101.41,+ORIT,0),"^",7)=$O(^DIC(9.4,"C","SD",0)) S LST(0)="0^0^"_$$DLGINFO^ORWDXM3(ORIT,ORWMODE_ISXFER) Q
"RTN","ORWDXM1",39,0)
 I 'ORWMODE,($P(^ORD(101.41,+ORIT,0),U,4)="D"),'($O(^DIC(9.4,"C","OR",0))[$P(^ORD(101.41,+ORIT,0),U,7)) S LST(0)="0^0^"_$$DLGINFO^ORWDXM3(ORIT,ORWMODE_ISXFER) Q
"RTN","ORWDXM1",40,0)
 N ORIMTYPE,ORCOMP,ORTAS,LRFZX,LRFSAMP,LRFSPEC,LRFDATE,LRFURG,LRFSCH
"RTN","ORWDXM1",41,0)
 N ORTIME,ORCOLLCT,ORMAX,ORTEST,ORIMTIME,ORSMAX,ORSTMS,ORSCH
"RTN","ORWDXM1",42,0)
 N PSJNOPC,ORMORE,ORINPT,ORXNP,ORSCHED,ORQTY,ORNOUNS,ORXNP,OREFILLS
"RTN","ORWDXM1",43,0)
 N ORCOMPLX,ORQTY,ORCOPAY,ORDRUG,ORWPSPIK,ORWPSWRG,ORSD,ORDSUP,ORWP94
"RTN","ORWDXM1",44,0)
 N ORPARAM,ORNPO,ORTIME,ORMEAL,ORTRAY,ORDATE,GMRCNOPD,GMRCNOAT,GMRCREAF
"RTN","ORWDXM1",45,0)
 N ORTYPE,ORVP,ORL,ORNP,ORSEX,ORAGE,ORWARD,OREVENT,ORDIV,ORSC,KEYVAR
"RTN","ORWDXM1",46,0)
 N ORDG,ORDIALOG,ORCAT,FIRST,ORQUIT,X,ORTRAIL,ORLEAD,RSPREF,AUTOACK
"RTN","ORWDXM1",47,0)
 N OREVNTYP
"RTN","ORWDXM1",48,0)
 S ORWP94=$O(^ORD(101.41,"AB","PS MEDS",0))>0
"RTN","ORWDXM1",49,0)
 S ORVP=$P(FLDS,U,1)_";DPT(",ORNP=+$P(FLDS,U,3),ORSC=$P(FLDS,U,8)
"RTN","ORWDXM1",50,0)
 S ORL=$P(FLDS,U,2)_";SC(",ORL(2)=ORL
"RTN","ORWDXM1",51,0)
 S ORSEX=$P(FLDS,U,5),ORAGE=$P(FLDS,U,6),ORTYPE="Q",FIRST=1
"RTN","ORWDXM1",52,0)
 I $P(FLDS,U,4),$G(^SC(+ORL,42)) S ORWARD=+^SC(+ORL,42)
"RTN","ORWDXM1",53,0)
 I $L($P(FLDS,U,7)) D
"RTN","ORWDXM1",54,0)
 . S OREVENT=$P(FLDS,U,7)
"RTN","ORWDXM1",55,0)
 . S OREVNTYP=$P(OREVENT,";",2)
"RTN","ORWDXM1",56,0)
 . S OREVENT("TS")=$P(OREVENT,";",3)
"RTN","ORWDXM1",57,0)
 . S OREVENT("EFFECTIVE")=$P(OREVENT,";",4)
"RTN","ORWDXM1",58,0)
 . S OREVENT=+$P(OREVENT,";",1)
"RTN","ORWDXM1",59,0)
 I 'ORWMODE D
"RTN","ORWDXM1",60,0)
 . D SETKEYV^ORWDXM3($P(FLDS,U,11,20)) ; from menu path
"RTN","ORWDXM1",61,0)
 . S KEYVAR=$$KEYVAR^ORWDXM3(ORIT) ; from entry action
"RTN","ORWDXM1",62,0)
 . D SETKEYV^ORWDXM3(KEYVAR)
"RTN","ORWDXM1",63,0)
 K ^TMP("ORWORD",$J)
"RTN","ORWDXM1",64,0)
 ; init return record based on auto-accept
"RTN","ORWDXM1",65,0)
 I ORWMODE S LST(0)="2^"_ORIT ;verify on copy
"RTN","ORWDXM1",66,0)
 E  S LST(0)=+$P($G(^ORD(101.41,ORIT,5)),U,8)_U_ORIT
"RTN","ORWDXM1",67,0)
 S TEMPCAT=$S($L($P($G(^DPT(+ORVP,.1)),U)):"I",1:"O")
"RTN","ORWDXM1",68,0)
 I TEMPCAT="I",+$P(FLDS,U,4)=1,$E(TEMPORIT)="C",$P($G(^ORD(100.98,$P($G(^OR(100,+ORIT,0)),U,11),0)),U)="OUTPATIENT MEDICATIONS" S TEMPCAT="O"
"RTN","ORWDXM1",69,0)
 I $L($G(OREVNTYP)) D
"RTN","ORWDXM1",70,0)
 . S ORCAT=$S(OREVNTYP="A":"I",OREVNTYP="T":"I",OREVNTYP="O":TEMPCAT,OREVNTYP="M":TEMPCAT,OREVNTYP="C":TEMPCAT,1:"O") I $G(OREVENT) D
"RTN","ORWDXM1",71,0)
 .. N X S X=$$EVT^OREVNTX(OREVENT),X=$P($G(^ORD(100.5,+X,0)),U,7)
"RTN","ORWDXM1",72,0)
 .. I OREVNTYP="T",X,X<4 S ORCAT="O" ;To pass=outpt
"RTN","ORWDXM1",73,0)
 .. I OREVNTYP="D",X=41 S ORCAT="I" ;From ASIH=inpt
"RTN","ORWDXM1",74,0)
 E  S ORCAT=TEMPCAT
"RTN","ORWDXM1",75,0)
 D SETUP^ORWDXM4 Q:+LST(0)=8
"RTN","ORWDXM1",76,0)
 S X="OR GTX START DATE"_$S($G(ORWP94):"/TIME",1:"")
"RTN","ORWDXM1",77,0)
 I ORWMODE,(ORDG=+$O(^ORD(100.98,"B","O RX",0))) D  ;remove old values
"RTN","ORWDXM1",78,0)
 . K ORDIALOG($$PTR^ORCD(X),1)
"RTN","ORWDXM1",79,0)
 . I ORWMODE=2,$$DRAFT^ORWDX2(ORIT) Q  ;keep comments
"RTN","ORWDXM1",80,0)
 . K:ISXFER'["T" ORDIALOG($$PTR^ORCD("OR GTX WORD PROCESSING 1"),1)
"RTN","ORWDXM1",81,0)
 D SETUPS^ORWDXM4 ;moved to save space, expects X
"RTN","ORWDXM1",82,0)
 Q:+LST(0)=8
"RTN","ORWDXM1",83,0)
 I $G(ORQUIT) S LST(0)="0^0^"_$$DLGINFO^ORWDXM3(ORIT,ORWMODE_ISXFER)_"^"_$G(KEYVAR) Q
"RTN","ORWDXM1",84,0)
 N SEQ,DA,XCODE,MUSTASK,PROMPT,INST,KEY,IVFID,CLIVFID
"RTN","ORWDXM1",85,0)
 S IVFID=$O(^ORD(101.41,"B","PSJI OR PAT FLUID OE",0))
"RTN","ORWDXM1",86,0)
 S CLIVFID=$O(^ORD(101.41,"B","CLINIC OR PAT FLUID OE",0))
"RTN","ORWDXM1",87,0)
 S AUTOACK=$S($D(ORWPSWRG):0,1:1)
"RTN","ORWDXM1",88,0)
 ; If copying, clear bad dates. Later, SETITEM will fill dates with default values. ;DJE-VM *331
"RTN","ORWDXM1",89,0)
 I ORWMODE=1 D  ;
"RTN","ORWDXM1",90,0)
 . I $L($$VAL^ORCD("START DATE")) D  ;
"RTN","ORWDXM1",91,0)
 . . S X=$$VAL^ORCD("START DATE"),%DT="TX" D ^%DT
"RTN","ORWDXM1",92,0)
 . . I Y'<$$DT^XLFDT,(($L($$VAL^ORCD("STOP DATE"))=0)!('$$FTDCOMP^ORCD("START DATE","STOP DATE",">"))) Q  ;quit if valid dates: start not in the past or stop after start
"RTN","ORWDXM1",93,0)
 . . K ORDIALOG($$PTR("START DATE"),1),ORDIALOG($$PTR("START DATE/TIME"),1) ;erase bad start and stop dates.
"RTN","ORWDXM1",94,0)
 . . K ORDIALOG($$PTR("STOP DATE"),1),ORDIALOG($$PTR("STOP DATE/TIME"),1)
"RTN","ORWDXM1",95,0)
 . ; check start and stop dates found in diet orders
"RTN","ORWDXM1",96,0)
 . I $L($$VAL^ORCD("EFFECTIVE DATE/TIME")) D  ;
"RTN","ORWDXM1",97,0)
 . . S X=$$VAL^ORCD("EFFECTIVE DATE/TIME"),%DT="TX" D ^%DT
"RTN","ORWDXM1",98,0)
 . . I Y'<$$DT^XLFDT,(($L($$VAL^ORCD("EXPIRATION DATE/TIME"))=0)!('$$FTDCOMP^ORCD("EFFECTIVE DATE/TIME","EXPIRATION DATE/TIME",">"))) Q  ;quit if valid dates: start not in the past or stop after start
"RTN","ORWDXM1",99,0)
 . . K ORDIALOG($P(ORDIALOG("B","EFFECTIVE DATE/TIME"),U,2),1) ;erase bad start and stop dates.
"RTN","ORWDXM1",100,0)
 . . K ORDIALOG($P(ORDIALOG("B","EXPIRATION DATE/TIME"),U,2),1)
"RTN","ORWDXM1",101,0)
 . ; check date desired field found in imaging orders
"RTN","ORWDXM1",102,0)
 . I $L($$VAL^ORCD("DATE DESIRED")) D  ;
"RTN","ORWDXM1",103,0)
 . . S X=$$VAL^ORCD("DATE DESIRED"),%DT="TX" D ^%DT
"RTN","ORWDXM1",104,0)
 . . I Y'<$$DT^XLFDT Q  ;quit if not a past date
"RTN","ORWDXM1",105,0)
 . . K ORDIALOG($P(ORDIALOG("B","DATE DESIRED"),U,2),1) ;erase bad date
"RTN","ORWDXM1",106,0)
 . ; check collection date field found in lab orders
"RTN","ORWDXM1",107,0)
 . I $L($$VAL^ORCD("COLLECTION DATE/TIME")) D  ;
"RTN","ORWDXM1",108,0)
 . . S X=$$VAL^ORCD("COLLECTION DATE/TIME")
"RTN","ORWDXM1",109,0)
 . . I X="NEXT" Q  ;No need to check this.
"RTN","ORWDXM1",110,0)
 . . S %DT="TX" D ^%DT
"RTN","ORWDXM1",111,0)
 . . I $P(Y,".",2),Y'<$E($$NOW^XLFDT,1,12) Q  ;quit if not a past date and time (lab is more precise than other dates)
"RTN","ORWDXM1",112,0)
 . . I $P(Y,".",2)="",Y'<$$DT^XLFDT Q  ;
"RTN","ORWDXM1",113,0)
 . . K ORDIALOG($P(ORDIALOG("B","COLLECTION DATE/TIME"),U,2),1) ;erase bad date
"RTN","ORWDXM1",114,0)
 . ;if copying a "Return to Clinic" order, force user to enter a date
"RTN","ORWDXM1",115,0)
 . I $L($$VAL^ORCD("RETURN TO CLINIC DATE")) D
"RTN","ORWDXM1",116,0)
 . . K ORDIALOG($P(ORDIALOG("B","RETURN TO CLINIC DATE"),U,2),1)
"RTN","ORWDXM1",117,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ)) Q:'SEQ  D
"RTN","ORWDXM1",118,0)
 . S DA=0 F  S DA=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ,DA)) Q:'DA  D
"RTN","ORWDXM1",119,0)
 . . ; skip if child prmpt
"RTN","ORWDXM1",120,0)
 . . I $P(^ORD(101.41,+ORDIALOG,10,DA,0),U,11) Q
"RTN","ORWDXM1",121,0)
 . . ; set dflt for prmpt, chk if interactive
"RTN","ORWDXM1",122,0)
 . . S PROMPT=$P(^ORD(101.41,+ORDIALOG,10,DA,0),U,2)
"RTN","ORWDXM1",123,0)
 . . D SETITEM(DA,PROMPT,1,.MUSTASK)
"RTN","ORWDXM1",124,0)
 . . I MUSTASK S AUTOACK=0 Q
"RTN","ORWDXM1",125,0)
 . . ; iterate through child items if parent & edit only
"RTN","ORWDXM1",126,0)
 . . Q:'$D(^ORD(101.41,+ORDIALOG,10,"DAD",PROMPT))
"RTN","ORWDXM1",127,0)
 . . N CSEQ,CDA,CPROMPT,INST,ORQUIT
"RTN","ORWDXM1",128,0)
 . . S CSEQ=0 F  S CSEQ=$O(^ORD(101.41,+ORDIALOG,10,"DAD",PROMPT,CSEQ)) Q:'CSEQ  D  Q:$G(ORQUIT)
"RTN","ORWDXM1",129,0)
 . . . S CDA=$O(^ORD(101.41,+ORDIALOG,10,"DAD",PROMPT,CSEQ,0))
"RTN","ORWDXM1",130,0)
 . . . S CPROMPT=$P(^ORD(101.41,+ORDIALOG,10,CDA,0),U,2)
"RTN","ORWDXM1",131,0)
 . . . ; if req & no instances then need interaction
"RTN","ORWDXM1",132,0)
 . . . I $P(^ORD(101.41,+ORDIALOG,10,CDA,0),U,6) D
"RTN","ORWDXM1",133,0)
 . . . . I ORDIALOG=IVFID!(ORDIALOG=CLIVFID) Q
"RTN","ORWDXM1",134,0)
 . . . . I '$O(ORDIALOG(CPROMPT,0)) S AUTOACK=0
"RTN","ORWDXM1",135,0)
 . . . S INST=0 F  S INST=$O(ORDIALOG(CPROMPT,INST)) Q:'INST  D
"RTN","ORWDXM1",136,0)
 . . . . N ORASK D VBASK^ORWDXM4(INST) ; set ORASK for VBECS
"RTN","ORWDXM1",137,0)
 . . . . ; set dflt for each child prmpt
"RTN","ORWDXM1",138,0)
 . . . . D SETITEM(CDA,CPROMPT,INST,.MUSTASK)
"RTN","ORWDXM1",139,0)
 . . . . ; if no val & child prmpt req'd then need interaction
"RTN","ORWDXM1",140,0)
 . . . . I MUSTASK,$P(^ORD(101.41,+ORDIALOG,10,CDA,0),U,6) S AUTOACK=0
"RTN","ORWDXM1",141,0)
 N IVDLG,CLINFDLG,SPLYDLG
"RTN","ORWDXM1",142,0)
 S IVDLG=$O(^ORD(101.41,"AB","PSJI OR PAT FLUID OE",0))
"RTN","ORWDXM1",143,0)
 S CLINFDLG=$O(^ORD(101.41,"AB","CLINIC OR PAT FLUID OE",0))
"RTN","ORWDXM1",144,0)
 S SPLYDLG=$O(^ORD(101.41,"AB","PSO SUPPLY",0))
"RTN","ORWDXM1",145,0)
 I $$ISMED(ORIT),(ORDIALOG'=IVDLG),(ORDIALOG'=CLINFDLG),(ORDIALOG'=SPLYDLG),(ORCAT="I") D
"RTN","ORWDXM1",146,0)
 . N P
"RTN","ORWDXM1",147,0)
 . F P="PATIENT INSTRUCTIONS","DAYS SUPPLY","QUANTITY","REFILLS","ROUTING","SERVICE CONNECTED" K ORDIALOG($$PTR(P),1)
"RTN","ORWDXM1",148,0)
 . I '$$ISQO(ORIT) K ORDIALOG($$PTR("START DATE/TIME"),1) ; kill if not a non-VA med quick order. p388
"RTN","ORWDXM1",149,0)
 S KEY=$S(ORWMODE:"C",1:"")_ORIT_"-"_$P($H,",",2),SEQ=0
"RTN","ORWDXM1",150,0)
 I $$ISINPMED(ORIT) D
"RTN","ORWDXM1",151,0)
 .S LEVEL=$P(LST(0),U),DELAY=$S($P($G(OREVENT),";")>0:1,1:0)
"RTN","ORWDXM1",152,0)
 .I LEVEL=2!(ISIMO) D ADMTIME^ORWDXM2(ORDLOC,PATLOC,ENCLOC,DELAY,ISIMO)
"RTN","ORWDXM1",153,0)
 I ($$ISMED(ORIT)),'($$VALQO^ORWDXM3(ORIT)) S AUTOACK=0
"RTN","ORWDXM1",154,0)
 I 'ORWMODE,$P(^ORD(101.41,+ORIT,0),U,7)=$O(^DIC(9.4,"C","SD",0)),'($$SDRTCVER^ORWDXM3(.ORDIALOG)) S AUTOACK=0
"RTN","ORWDXM1",155,0)
 S PROMPT=0 F  S PROMPT=$O(ORDIALOG(PROMPT)) Q:'PROMPT  D
"RTN","ORWDXM1",156,0)
 . I '$D(^ORD(101.41,ORDIALOG,10,"D",PROMPT)) K ORDIALOG(PROMPT) Q
"RTN","ORWDXM1",157,0)
 . S INST=0 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:'INST  D
"RTN","ORWDXM1",158,0)
 . . S SEQ=SEQ+1,^TMP("ORWDXMQ",$J,KEY,SEQ,0)=U_PROMPT_U_INST
"RTN","ORWDXM1",159,0)
 . . ; save word proc val
"RTN","ORWDXM1",160,0)
 . . I $E(ORDIALOG(PROMPT,0))="W",$L(ORDIALOG(PROMPT,INST)) D
"RTN","ORWDXM1",161,0)
 . . . M ^TMP("ORWDXMQ",$J,KEY,SEQ,2)=@ORDIALOG(PROMPT,INST)
"RTN","ORWDXM1",162,0)
 . . ; save other val types
"RTN","ORWDXM1",163,0)
 . . E  S ^TMP("ORWDXMQ",$J,KEY,SEQ,1)=ORDIALOG(PROMPT,INST)
"RTN","ORWDXM1",164,0)
 I AUTOACK D
"RTN","ORWDXM1",165,0)
 . I ORWMODE S AUTOACK=2
"RTN","ORWDXM1",166,0)
 . I 'ORWMODE,($P(^ORD(101.41,ORIT,0),U,8)!'LST(0)) S AUTOACK=2
"RTN","ORWDXM1",167,0)
 ;I ($$ISMED(ORIT)),'($$VALQO^ORWDXM3(ORIT)) S AUTOACK=0
"RTN","ORWDXM1",168,0)
 I ORIMO,ORWMODE S AUTOACK=2
"RTN","ORWDXM1",169,0)
 ; accept Herbal/OTC/NonVA Med quick orders
"RTN","ORWDXM1",170,0)
 I $L($G(^ORD(101.41,+ORIT,0))),($P(^ORD(100.98,$P(^ORD(101.41,+ORIT,0),U,5),0),U,3)="NV RX"),($P($G(^ORD(101.41,+ORIT,5)),U,8)) S AUTOACK=1
"RTN","ORWDXM1",171,0)
 ;I AUTOACK=2,$$ISMED(ORIT),(ORDIALOG=IVDLG),$$VERORD^ORWDXM3=0 S AUTOACK=0
"RTN","ORWDXM1",172,0)
 I AUTOACK=2,$$ISMED(ORIT),$$VERORD^ORWDXM3(ORIT)=0 S AUTOACK=0
"RTN","ORWDXM1",173,0)
 I AUTOACK=2 D VERTXT^ORWDXM2
"RTN","ORWDXM1",174,0)
 S LST(0)=AUTOACK_U_KEY_U_$$DLGINFO^ORWDXM3(ORIT,ORWMODE_ISXFER)_"^"_$G(KEYVAR)
"RTN","ORWDXM1",175,0)
 I $P(LST(0),U,4)="D" S $P(LST(0),U,4)="Q"
"RTN","ORWDXM1",176,0)
 I ORWMODE=1 S $P(LST(0),U,4)="C"
"RTN","ORWDXM1",177,0)
 K ^TMP("ORWORD",$J)
"RTN","ORWDXM1",178,0)
 K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J)
"RTN","ORWDXM1",179,0)
 Q
"RTN","ORWDXM1",180,0)
SETITEM(DA,PROMPT,INST,MUSTASK) ; set dflt val & return if must prompt
"RTN","ORWDXM1",181,0)
 N EDITONLY,Y,VALIV,XCODE
"RTN","ORWDXM1",182,0)
 S MUSTASK=0,EDITONLY=0,VALIV=0
"RTN","ORWDXM1",183,0)
 I $D(^TMP("ORWDHTM",$J,ORDIALOG,PROMPT)) D
"RTN","ORWDXM1",184,0)
 . I $E(ORDIALOG(PROMPT,0))="W" D
"RTN","ORWDXM1",185,0)
 . . S ^TMP("ORWORD",$J,PROMPT,INST,1,0)=^TMP("ORWDHTM",$J,ORDIALOG,PROMPT)
"RTN","ORWDXM1",186,0)
 . . S ORDIALOG(PROMPT,INST)="^TMP(""ORWORD"","_$J_","_PROMPT_","_INST_")"
"RTN","ORWDXM1",187,0)
 . E  S ORDIALOG(PROMPT,INST)=^TMP("ORWDHTM",$J,ORDIALOG,PROMPT)
"RTN","ORWDXM1",188,0)
 I $D(^TMP("ORWDHTM",$J,ORIT,PROMPT)) D
"RTN","ORWDXM1",189,0)
 . S ORDIALOG(PROMPT,INST)=^TMP("ORWDHTM",$J,ORIT,PROMPT)
"RTN","ORWDXM1",190,0)
 . ; NEED TO CLEAN UP ^TMP("ORWDHTM") after process order set!!!
"RTN","ORWDXM1",191,0)
 ;
"RTN","ORWDXM1",192,0)
 ; skip if a value already exists for this prompt and not WP
"RTN","ORWDXM1",193,0)
 Q:$D(ORDIALOG(PROMPT,INST))&($E(ORDIALOG(PROMPT,0))'="W")
"RTN","ORWDXM1",194,0)
 ; execute default action if no value in QO, checking EDITONLY afterwards
"RTN","ORWDXM1",195,0)
 I '$D(ORDIALOG(PROMPT,INST)) D
"RTN","ORWDXM1",196,0)
 . ;
"RTN","ORWDXM1",197,0)
 . ;Intermittent IV orders do not require a solution or an infusion rate
"RTN","ORWDXM1",198,0)
 . I PROMPT=$$PTR("INFUSION RATE"),$$GETIVTYP^ORWDXM3="I" S VALIV=1 Q
"RTN","ORWDXM1",199,0)
 . I PROMPT=$$PTR("ORDERABLE ITEM"),$$GETIVTYP^ORWDXM3="I" S VALIV=1 Q
"RTN","ORWDXM1",200,0)
 . I $E(ORDIALOG(PROMPT,0))="W",$D(^ORD(101.41,+ORDIALOG,10,DA,8))>9 D
"RTN","ORWDXM1",201,0)
 . . M ^TMP("ORWORD",$J,PROMPT,INST)=^ORD(101.41,+ORDIALOG,10,DA,8)
"RTN","ORWDXM1",202,0)
 . . S ORDIALOG(PROMPT,INST)="^TMP(""ORWORD"","_$J_","_PROMPT_","_INST_")"
"RTN","ORWDXM1",203,0)
 . E  D
"RTN","ORWDXM1",204,0)
 . . S XCODE=$$SUBCODE($G(^ORD(101.41,+ORDIALOG,10,DA,7)))
"RTN","ORWDXM1",205,0)
 . . I $L(XCODE) X XCODE S:$D(Y) ORDIALOG(PROMPT,INST)=Y
"RTN","ORWDXM1",206,0)
 Q:VALIV=1
"RTN","ORWDXM1",207,0)
 Q:$G(EDITONLY)
"RTN","ORWDXM1",208,0)
 I 'ORWMODE,$P($G(^ORD(101.41,+ORDIALOG,10,DA,0)),U,8) Q
"RTN","ORWDXM1",209,0)
 I ORWMODE,($P($G(^ORD(101.41,+ORDIALOG,10,DA,0)),U,9)'["W"),'$P($G(^ORD(101.41,+ORDIALOG,10,DA,0)),U,6)!$D(ORDIALOG(PROMPT,INST)) Q
"RTN","ORWDXM1",210,0)
 I 'ORWMODE,LST(0),$D(ORDIALOG(PROMPT,INST)),($E(ORDIALOG(PROMPT,0))="W") Q
"RTN","ORWDXM1",211,0)
 I 'ORWMODE,LST(0),'$P($G(^ORD(101.41,+ORDIALOG,10,DA,0)),U,6) Q
"RTN","ORWDXM1",212,0)
 I 'ORWMODE,PROMPT=$$PTR("CLINICALLY INDICATED DATE"),$$ISPROS Q
"RTN","ORWDXM1",213,0)
 S XCODE=$$SUBCODE($G(^ORD(101.41,+ORDIALOG,10,DA,3)))
"RTN","ORWDXM1",214,0)
 I $L(XCODE) X XCODE Q:'$T
"RTN","ORWDXM1",215,0)
 S MUSTASK=1
"RTN","ORWDXM1",216,0)
 Q
"RTN","ORWDXM1",217,0)
SUBCODE(X) ; substitute code
"RTN","ORWDXM1",218,0)
 I X["$$REQDCOMM^ORCDLR" Q "I $$LRRQCM^ORWDXM2"
"RTN","ORWDXM1",219,0)
 I X["$$ASKSAMP^ORCDLR" Q "I $$LRASMP^ORWDXM2"
"RTN","ORWDXM1",220,0)
 I X["$$SCHEDULD^ORCDRA1" Q "I $$SCHEDULD^ORWDXM2"
"RTN","ORWDXM1",221,0)
 I X["(^PSX(550,""C"")" Q "S Y=$E($$DEFPICK^ORWDPS32) K:'$L(Y) Y"
"RTN","ORWDXM1",222,0)
 I X["I $$ASKURG^ORCDVBEC" Q "I 1"
"RTN","ORWDXM1",223,0)
 I X["K:$G(ORASK)" Q "I $G(ORASK)"
"RTN","ORWDXM1",224,0)
 Q X
"RTN","ORWDXM1",225,0)
PTR(NAME) ; -- Returns pointer to OR GTX NAME
"RTN","ORWDXM1",226,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORWDXM1",227,0)
 ;
"RTN","ORWDXM1",228,0)
ISINPMED(IFN) ;
"RTN","ORWDXM1",229,0)
 N PKG,RESULT,Y
"RTN","ORWDXM1",230,0)
 I 'ORWMODE S PKG=$P($G(^ORD(101.41,IFN,0)),U,7)
"RTN","ORWDXM1",231,0)
 E  S PKG=$P($G(^OR(100,+IFN,0)),U,14)
"RTN","ORWDXM1",232,0)
 S Y=$$GET1^DIQ(9.4,+PKG_",",1)
"RTN","ORWDXM1",233,0)
 S RESULT=$S($E(Y,1,3)="PSJ":1,1:0)
"RTN","ORWDXM1",234,0)
 Q RESULT
"RTN","ORWDXM1",235,0)
 ;
"RTN","ORWDXM1",236,0)
ISMED(IFN) ; return 1 if pharmacy order dlg used
"RTN","ORWDXM1",237,0)
 N PKG
"RTN","ORWDXM1",238,0)
 I 'ORWMODE S PKG=$P($G(^ORD(101.41,IFN,0)),U,7)
"RTN","ORWDXM1",239,0)
 E  S PKG=$P($G(^OR(100,+IFN,0)),U,14)
"RTN","ORWDXM1",240,0)
 Q $$NMSP^ORCD(PKG)="PS"
"RTN","ORWDXM1",241,0)
SITEVAL() ;return 1 if site does want the reason for study to carry through from past orders of this ordering session
"RTN","ORWDXM1",242,0)
 I $$GET^XPAR("ALL^SRV.`"_+^VA(200,DUZ,5),"OR RA RFS CARRY ON")=0 Q 0
"RTN","ORWDXM1",243,0)
 Q 1
"RTN","ORWDXM1",244,0)
SVRPC(RET,X) ;RPC FOR SITEVAL
"RTN","ORWDXM1",245,0)
 S RET=$$SITEVAL
"RTN","ORWDXM1",246,0)
 Q
"RTN","ORWDXM1",247,0)
ISQO(IFN) ;return 1 if a non-VA medication quick order type of order dialog. p388
"RTN","ORWDXM1",248,0)
 I $P($G(^ORD(101.41,IFN,0)),U,5)'=$O(^ORD(100.98,"B","NV RX",0)) Q 0
"RTN","ORWDXM1",249,0)
 I $P($G(^ORD(101.41,IFN,0)),U,4)="Q" Q 1
"RTN","ORWDXM1",250,0)
 Q 0
"RTN","ORWDXM1",251,0)
ISPROS() ;return 1 if OI is prosthetics service
"RTN","ORWDXM1",252,0)
 N ORDITM,ORCONSVC,ORG
"RTN","ORWDXM1",253,0)
 Q:'$D(ORDIALOG("B","CONSULT TO SERVICE/SPECIALTY")) 0
"RTN","ORWDXM1",254,0)
 S ORDITM=$P((ORDIALOG("B","CONSULT TO SERVICE/SPECIALTY")),U,2)
"RTN","ORWDXM1",255,0)
 S ORDITM=$G(ORDIALOG(ORDITM,1)) I $G(ORDITM)="" Q 0
"RTN","ORWDXM1",256,0)
 S ORCONSVC=$P(^ORD(101.43,ORDITM,0),U,2),ORCONSVC=$P(ORCONSVC,";",1) Q:$G(ORCONSVC)="" 0
"RTN","ORWDXM1",257,0)
 D ISPROSVC^ORQQCN2(.ORG,ORCONSVC)
"RTN","ORWDXM1",258,0)
 I +$G(ORG)>0 Q 1
"RTN","ORWDXM1",259,0)
 Q 0
"RTN","ORWDXM3")
0^12^B121166242^B120942767
"RTN","ORWDXM3",1,0)
ORWDXM3 ; SLC/KCM/JLI - Quick Orders ;Oct 03, 2018@13:54
"RTN","ORWDXM3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,131,132,141,185,187,190,195,215,243,303,296,280,350,434,441,397**;Dec 17, 1997;Build 22
"RTN","ORWDXM3",3,0)
 ;
"RTN","ORWDXM3",4,0)
 ;
"RTN","ORWDXM3",5,0)
 ;
"RTN","ORWDXM3",6,0)
VALCOUNT(NAME,ORDIALOG) ;
"RTN","ORWDXM3",7,0)
 N COUNT,IEN,NUM
"RTN","ORWDXM3",8,0)
 S NUM=0,COUNT=0
"RTN","ORWDXM3",9,0)
 S IEN=$P($G(ORDIALOG("B",NAME)),U,2) Q:IEN'>0
"RTN","ORWDXM3",10,0)
 F  S NUM=$O(ORDIALOG(IEN,NUM)) Q:+NUM'>0  S COUNT=COUNT+1
"RTN","ORWDXM3",11,0)
 Q COUNT
"RTN","ORWDXM3",12,0)
 ;
"RTN","ORWDXM3",13,0)
ISMISSFL(ORDIALOG,IVTYPE) ;
"RTN","ORWDXM3",14,0)
 N ADDCNT,RESULT,SOLCNT,STRCNT
"RTN","ORWDXM3",15,0)
 S RESULT=0
"RTN","ORWDXM3",16,0)
 S ADDCNT=$$VALCOUNT("ADDITIVE",.ORDIALOG)
"RTN","ORWDXM3",17,0)
 S STRCNT=$$VALCOUNT("STRENGTH",.ORDIALOG)
"RTN","ORWDXM3",18,0)
 S SOLCNT=$$VALCOUNT("SOLUTION",.ORDIALOG)
"RTN","ORWDXM3",19,0)
 I IVTYPE'="I",ADDCNT'=STRCNT S RESULT=1
"RTN","ORWDXM3",20,0)
 I IVTYPE="I" D
"RTN","ORWDXM3",21,0)
 .I ADDCNT=0,SOLCNT>0 Q
"RTN","ORWDXM3",22,0)
 .I ADDCNT=0 S RESULT=1 Q
"RTN","ORWDXM3",23,0)
 .I ADDCNT'=STRCNT S RESULT=1 Q
"RTN","ORWDXM3",24,0)
 Q RESULT
"RTN","ORWDXM3",25,0)
 ;
"RTN","ORWDXM3",26,0)
IVADFCHK(ORDIALOG) ;
"RTN","ORWDXM3",27,0)
 ; This line tag checks to see if there are the same number of values
"RTN","ORWDXM3",28,0)
 ;for ADDITIVE and Additive Frequency. This also checks to see if
"RTN","ORWDXM3",29,0)
 ;the value assigned to ADDFREQ is one of the three possible values
"RTN","ORWDXM3",30,0)
 ;All Bags, 1 bag/day, See Comments. If See Comments it also checks
"RTN","ORWDXM3",31,0)
 ;for text in the comment section.
"RTN","ORWDXM3",32,0)
 N ADDCNT,ADDFCNT,ADDFREQ,COMMENT,FREQ,INST,RESULT
"RTN","ORWDXM3",33,0)
 S ADDCNT=$$VALCOUNT("ADDITIVE",.ORDIALOG)
"RTN","ORWDXM3",34,0)
 S ADDFCNT=$$VALCOUNT("ADDITIVE FREQUENCY",.ORDIALOG)
"RTN","ORWDXM3",35,0)
 I ADDCNT'=ADDFCNT Q 0
"RTN","ORWDXM3",36,0)
 S ADDFREQ=$O(^ORD(101.41,"AB","OR GTX ADDITIVE FREQUENCY",""))
"RTN","ORWDXM3",37,0)
 S COMMENT=$O(^ORD(101.41,"AB","OR GTX WORD PROCESSING 1",""))
"RTN","ORWDXM3",38,0)
 I +$G(ADDFREQ)'>0 Q 0
"RTN","ORWDXM3",39,0)
 S INST=0,RESULT=1
"RTN","ORWDXM3",40,0)
 F  S INST=$O(ORDIALOG(ADDFREQ,INST)) Q:INST'>0!(RESULT=0)  D
"RTN","ORWDXM3",41,0)
 .S FREQ=$$ADDFRQCV^ORMBLDP1($G(ORDIALOG(ADDFREQ,INST)),"O")
"RTN","ORWDXM3",42,0)
 .I FREQ="A"!(FREQ=1) Q
"RTN","ORWDXM3",43,0)
 .I FREQ="" S RESULT=0 Q
"RTN","ORWDXM3",44,0)
 .I FREQ="S",'$L($G(ORDIALOG(COMMENT,1))) S RESULT=0 Q
"RTN","ORWDXM3",45,0)
 Q RESULT
"RTN","ORWDXM3",46,0)
 ;
"RTN","ORWDXM3",47,0)
KEYVAR(DLG)  ; Parse entry action for key variables & return in string
"RTN","ORWDXM3",48,0)
 ; RV=CollTp^Samp^Spec^CollDt^Urg^Sched^NoComm^NoDiag^NoProv^NoRsn
"RTN","ORWDXM3",49,0)
 N XCODE,RV,POS,Z
"RTN","ORWDXM3",50,0)
 S XCODE=$G(^ORD(101.41,DLG,3)),RV=""
"RTN","ORWDXM3",51,0)
 I '$L(XCODE) Q ""
"RTN","ORWDXM3",52,0)
 S POS=$F(XCODE,"LRFZX=")    I POS S $P(RV,U,1)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",53,0)
 S POS=$F(XCODE,"LRFSAMP=")  I POS S $P(RV,U,2)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",54,0)
 S POS=$F(XCODE,"LRFSPEC=")  I POS S $P(RV,U,3)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",55,0)
 S POS=$F(XCODE,"LRFDATE=")  I POS S $P(RV,U,4)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",56,0)
 S POS=$F(XCODE,"LRFURG=")   I POS S $P(RV,U,5)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",57,0)
 S POS=$F(XCODE,"LRFSCH=")   I POS S $P(RV,U,6)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",58,0)
 S POS=$F(XCODE,"PSJNOPC=")  I POS S $P(RV,U,7)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",59,0)
 S POS=$F(XCODE,"GMRCNOPD=") I POS S $P(RV,U,8)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",60,0)
 S POS=$F(XCODE,"GMRCNOAT=") I POS S $P(RV,U,9)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",61,0)
 S POS=$F(XCODE,"GMRCREAF=") I POS S $P(RV,U,10)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",62,0)
 S POS=$F(XCODE,"ORFORGET=") I POS D
"RTN","ORWDXM3",63,0)
 . ; need to change this so that it is executed in SETKEYV so
"RTN","ORWDXM3",64,0)
 . ; that it is executed each time menu is revisited
"RTN","ORWDXM3",65,0)
 . N ORFORGET S ORFORGET=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",66,0)
 . I ORFORGET K ^TMP("ORECALL",$J,+ORFORGET)
"RTN","ORWDXM3",67,0)
 . E  K ^TMP("ORECALL",$J)
"RTN","ORWDXM3",68,0)
 Q RV
"RTN","ORWDXM3",69,0)
VALUE(STR,BEG) ; Return value of "var=" (copied from ORCONVRT)
"RTN","ORWDXM3",70,0)
 N X,Y,I S X=$E(STR,BEG,999),Y=""
"RTN","ORWDXM3",71,0)
 S:$E(X)="""" X=$E(X,2,999) ; strip leading "
"RTN","ORWDXM3",72,0)
 F I=1:1:$L(X) S Z=$E(X,I) Q:(Z=",")!(Z=" ")!(Z="""")  S Y=Y_Z
"RTN","ORWDXM3",73,0)
 Q $TR(Y,U,"")
"RTN","ORWDXM3",74,0)
 ;
"RTN","ORWDXM3",75,0)
SETKEYV(X)      ; Set the key variables based on contents of X
"RTN","ORWDXM3",76,0)
 I $L($P(X,U,1))  S LRFZX=$P(X,U,1)
"RTN","ORWDXM3",77,0)
 I $L($P(X,U,2))  S LRFSAMP=$P(X,U,2)
"RTN","ORWDXM3",78,0)
 I $L($P(X,U,3))  S LRFSPEC=$P(X,U,3)
"RTN","ORWDXM3",79,0)
 I $L($P(X,U,4))  S LRFDATE=$P(X,U,4)
"RTN","ORWDXM3",80,0)
 I $L($P(X,U,5))  S LRFURG=$P(X,U,5)
"RTN","ORWDXM3",81,0)
 I $L($P(X,U,6))  S LRFSCH=$P(X,U,6)
"RTN","ORWDXM3",82,0)
 I $L($P(X,U,7))  S PSJNOPC=$P(X,U,7)
"RTN","ORWDXM3",83,0)
 I $L($P(X,U,8))  S GMRCNOPD=$P(X,U,8)
"RTN","ORWDXM3",84,0)
 I $L($P(X,U,9))  S GMRCNOAT=$P(X,U,9)
"RTN","ORWDXM3",85,0)
 I $L($P(X,U,10)) S GMRCREAF=$P(X,U,10)
"RTN","ORWDXM3",86,0)
 Q
"RTN","ORWDXM3",87,0)
DLGINFO(IEN,MODE)    ; return information about a dialog
"RTN","ORWDXM3",88,0)
 ; IEN=DlgIEN or ORIFN, MODE=0:Dlg,1:Copy,2:Change
"RTN","ORWDXM3",89,0)
 ; RESULT=DlgIEN^DlgType^FormID^DGrp
"RTN","ORWDXM3",90,0)
 ; If MODE="1;T",don't check "PS MEDS" for transfer order
"RTN","ORWDXM3",91,0)
 ; PSMDGP=1: Unit/Dose  Group
"RTN","ORWDXM3",92,0)
 ; PSMDGP=2: OutPatient Group
"RTN","ORWDXM3",93,0)
 N X0,DLGIEN,TYP,FID,DGRP,PSMDGP,ISXF
"RTN","ORWDXM3",94,0)
 S PSMDGP=0,ISXF=""
"RTN","ORWDXM3",95,0)
 S ISXF=$P(MODE,";",2)
"RTN","ORWDXM3",96,0)
 S MODE=+MODE
"RTN","ORWDXM3",97,0)
 S DLGIEN=IEN I MODE,(ISXF'="T") D
"RTN","ORWDXM3",98,0)
 . S DLGIEN=+$P($G(^OR(100,+IEN,0)),U,5)
"RTN","ORWDXM3",99,0)
 . I $P(^ORD(101.41,DLGIEN,0),U)="PS MEDS" D
"RTN","ORWDXM3",100,0)
 . . N PTCAT S PTCAT=$P($G(^OR(100,+IEN,0)),U,12)
"RTN","ORWDXM3",101,0)
 . . I PTCAT="I" S DLGIEN=$O(^ORD(101.41,"B","PSJ OR PAT OE",0)),PSMDGP=1
"RTN","ORWDXM3",102,0)
 . . I PTCAT="O" S DLGIEN=$O(^ORD(101.41,"B","PSO OERR",0)),PSMDGP=2
"RTN","ORWDXM3",103,0)
 I MODE,(ISXF="T") S DLGIEN=+$P($G(^OR(100,+IEN,0)),U,5)
"RTN","ORWDXM3",104,0)
 S X0=$G(^ORD(101.41,DLGIEN,0)),TYP=$P(X0,U,4),DGRP=$P(X0,U,5)
"RTN","ORWDXM3",105,0)
 I MODE S DGRP=+$P($G(^OR(100,+IEN,0)),U,11)
"RTN","ORWDXM3",106,0)
 ;JD NEW START 11/13/02
"RTN","ORWDXM3",107,0)
 I DLGIEN=$O(^ORD(101.41,"B","PSJ OR PAT OE",0)) S PSMDGP=1
"RTN","ORWDXM3",108,0)
 I DLGIEN=$O(^ORD(101.41,"B","PSO OERR",0)) S PSMDGP=2
"RTN","ORWDXM3",109,0)
 ;JD NEW END 11/13/02
"RTN","ORWDXM3",110,0)
 ; for copy or change, if the base dialog has changed, use it's info
"RTN","ORWDXM3",111,0)
 I MODE,$G(ORDIALOG),(+DLGIEN'=+ORDIALOG),(PSMDGP=0) D
"RTN","ORWDXM3",112,0)
 . S DLGIEN=+ORDIALOG,DGRP=$P(^ORD(101.41,+ORDIALOG,0),U,5)
"RTN","ORWDXM3",113,0)
 D FORMID^ORWDXM(.FID,DLGIEN)
"RTN","ORWDXM3",114,0)
 Q DLGIEN_U_TYP_U_FID_U_DGRP
"RTN","ORWDXM3",115,0)
 ;
"RTN","ORWDXM3",116,0)
CHKDSBL(LST,ID,MODE)  ; return message if dialog disabled
"RTN","ORWDXM3",117,0)
 ; ID=DlgIEN or ORIFN, MODE=0:Dialog,1:Copy,2:Change
"RTN","ORWDXM3",118,0)
 ; LST=QL_REJECT + disabled message or unchanged
"RTN","ORWDXM3",119,0)
 N PKG
"RTN","ORWDXM3",120,0)
 S DLGIEN=+ID I MODE S DLGIEN=+$P($G(^OR(100,+ID,0)),U,5)
"RTN","ORWDXM3",121,0)
 S X0=$G(^ORD(101.41,DLGIEN,0)),X=$P(X0,U,3)
"RTN","ORWDXM3",122,0)
 I '$L(X),($P(X0,U,4)="Q") D  ; check default dialog
"RTN","ORWDXM3",123,0)
 . S DLGIEN=+$$DEFDLG^ORWDXQ($P(X0,U,5))
"RTN","ORWDXM3",124,0)
 . S X=$P($G(^ORD(101.41,DLGIEN,0)),U,3)
"RTN","ORWDXM3",125,0)
 I $L(X) D
"RTN","ORWDXM3",126,0)
 . I MODE D GETTXT^ORWORR(.LST,ID) S LST(.6)="",LST(.7)="Cannot "_$S(MODE=1:"Copy",1:"Change")_" -"
"RTN","ORWDXM3",127,0)
 . S LST(0)="8^0",LST(.5)="Dialog Disabled:  "_X
"RTN","ORWDXM3",128,0)
 S PKG=$P(X0,"^",7) I PKG]"",$P($G(^DIC(9.4,PKG,0)),"^",2)="SD",'$$PATCH^XPDUTL("SD*5.3*671") S LST(0)="8^0",LST(.5)="Dialog Disabled: VSE patch SD*5.3*671 not installed"
"RTN","ORWDXM3",129,0)
 Q
"RTN","ORWDXM3",130,0)
CHKVACT(LST,ID,MODE,ORNP)  ; return message if action not valid
"RTN","ORWDXM3",131,0)
 ; ID=DlgIEN or ORIFN, MODE=0:Dialog,1:Copy,2:Change
"RTN","ORWDXM3",132,0)
 ; LST=QL_REJECT + invalid action message or unchanged
"RTN","ORWDXM3",133,0)
 Q:'MODE  ; not an action on an order
"RTN","ORWDXM3",134,0)
 N X,ACT S ACT=$S(MODE=1:"RW",MODE=2:"XX",1:"")
"RTN","ORWDXM3",135,0)
 D VALID^ORWDXA(.X,ID,ACT,ORNP)
"RTN","ORWDXM3",136,0)
 I $L(X) D GETTXT^ORWORR(.LST,ID) D
"RTN","ORWDXM3",137,0)
 . S LST(0)="8^0",LST(.5)=X,LST(.6)="",LST(.7)="Cannot "_$S(MODE=1:"Copy",1:"Change")_" -"
"RTN","ORWDXM3",138,0)
 Q
"RTN","ORWDXM3",139,0)
CHKCOPY(LST,ID,FLDS)  ; return message if can't copy this order
"RTN","ORWDXM3",140,0)
 ; ID=ORIFN;ACT FLDS=EventType in 7th piece
"RTN","ORWDXM3",141,0)
 ; LST=QL_REJECT + cannot copy message or unchanged
"RTN","ORWDXM3",142,0)
 I "^A^D^T^"'[(U_$E($P(FLDS,U,7))_U) Q             ; not event delayed
"RTN","ORWDXM3",143,0)
 N PKG S PKG=$P($G(^OR(100,+ID,0)),U,14)
"RTN","ORWDXM3",144,0)
 S PKG=$$NMSP^ORCD(PKG) I PKG="OR"!(PKG="PS") Q    ; xfer meds, generics
"RTN","ORWDXM3",145,0)
 N ORWCAT S ORWCAT=$P($G(^OR(100,+ID,0)),U,12)
"RTN","ORWDXM3",146,0)
 I ORWCAT="I",("^A^T^"[(U_$E($P(FLDS,U,7))_U)) Q   ; admit, xfer inpt
"RTN","ORWDXM3",147,0)
 I ORWCAT="O",$E($P(FLDS,U,7))="D" Q               ; discharge outpt
"RTN","ORWDXM3",148,0)
 D GETTXT^ORWORR(.LST,ID)
"RTN","ORWDXM3",149,0)
 I ORWCAT="I" S LST(.5)="inpatient order to outpatient -"
"RTN","ORWDXM3",150,0)
 I ORWCAT="O" S LST(.5)="outpatient order to inpatient -"
"RTN","ORWDXM3",151,0)
 S:$D(LST(.5)) LST(.5)="Cannot copy the following "_LST(.5)
"RTN","ORWDXM3",152,0)
 S LST(0)="8^0",LST(.7)=""
"RTN","ORWDXM3",153,0)
 Q
"RTN","ORWDXM3",154,0)
BLD4CHG(LST,ID,FLDS)  ; build responses for an edit
"RTN","ORWDXM3",155,0)
 ; ID=ORIFN;ACT FLDS=unused right now
"RTN","ORWDXM3",156,0)
 ; LST(0)=Qlvl^RespID(XOrderID)^DlgIEN^DlgType^FormID^DGrp
"RTN","ORWDXM3",157,0)
 N OIDX,OI,CNT
"RTN","ORWDXM3",158,0)
 S (OI,OIDX,CNT)=0
"RTN","ORWDXM3",159,0)
 S:$D(^OR(100,+ID,4.5,"ID","ORDERABLE")) OIDX=$O(^OR(100,+ID,4.5,"ID","ORDERABLE",0))
"RTN","ORWDXM3",160,0)
 I $D(^OR(100,+ID,4.5,OIDX)) D
"RTN","ORWDXM3",161,0)
 . F  S CNT=$O(^OR(100,+ID,4.5,OIDX,CNT)) Q:'CNT  D
"RTN","ORWDXM3",162,0)
 . . S OI=^(CNT) D VALDOI
"RTN","ORWDXM3",163,0)
 I +LST(0)=8 S LST(.5)="You can not change this order." Q
"RTN","ORWDXM3",164,0)
 S LST(0)="0^X"_ID_U_$$DLGINFO(+ID,2)
"RTN","ORWDXM3",165,0)
 S $P(LST(0),U,4)="X"
"RTN","ORWDXM3",166,0)
 Q
"RTN","ORWDXM3",167,0)
GETIVTYP() ;
"RTN","ORWDXM3",168,0)
 N RESULT,TYPEIEN
"RTN","ORWDXM3",169,0)
 S RESULT=""
"RTN","ORWDXM3",170,0)
 S TYPEIEN=$O(^ORD(101.41,"B","OR GTX IV TYPE","")) I TYPEIEN'>0 Q RESULT
"RTN","ORWDXM3",171,0)
 S RESULT=$G(ORDIALOG(TYPEIEN,1))
"RTN","ORWDXM3",172,0)
 Q RESULT
"RTN","ORWDXM3",173,0)
 ;
"RTN","ORWDXM3",174,0)
VALDOI ; Validate the Orderable Items
"RTN","ORWDXM3",175,0)
 N ORQUIT,ORPS
"RTN","ORWDXM3",176,0)
 I $G(^ORD(101.43,OI,.1)),^(.1)'>$$NOW^XLFDT D
"RTN","ORWDXM3",177,0)
 . S ORQUIT=1
"RTN","ORWDXM3",178,0)
 . S LST(0)="8^0"
"RTN","ORWDXM3",179,0)
 I $D(ORQUIT) Q:ORQUIT
"RTN","ORWDXM3",180,0)
 S ORPS=$G(^ORD(101.43,+OI,"PS"))
"RTN","ORWDXM3",181,0)
 I $P(ORPS,U,1,4)="0^0^0^0",($P(ORPS,U,7)=0) S LST(0)="8^0"
"RTN","ORWDXM3",182,0)
 Q
"RTN","ORWDXM3",183,0)
VERDUR(ORDIALOG) ;
"RTN","ORWDXM3",184,0)
 ;check for duration value if a THEN conjunation is used
"RTN","ORWDXM3",185,0)
 N CONJ,CONVALUE,DUR,I,SUCC
"RTN","ORWDXM3",186,0)
 S SUCC=1
"RTN","ORWDXM3",187,0)
 S CONJ=$$PTR^ORCDPS1("AND/THEN")
"RTN","ORWDXM3",188,0)
 S DUR=$$PTR^ORCDPS1("DURATION")
"RTN","ORWDXM3",189,0)
 S I=0 F  S I=$O(ORDIALOG(CONJ,I)) Q:I'>0!(SUCC=0)  D
"RTN","ORWDXM3",190,0)
 . I $$UP^XLFSTR($E($G(ORDIALOG(CONJ,I)),1))="T" D
"RTN","ORWDXM3",191,0)
 . . I '$L($G(ORDIALOG(DUR,I))) S SUCC=0
"RTN","ORWDXM3",192,0)
 Q SUCC
"RTN","ORWDXM3",193,0)
 ;
"RTN","ORWDXM3",194,0)
VERORD(OIEN) ;
"RTN","ORWDXM3",195,0)
 N IFN,INFUSE,INFUID,ODG,ODP,ASSIV,SUCC,TYPE
"RTN","ORWDXM3",196,0)
 S SUCC=0,IFN=ORDIALOG
"RTN","ORWDXM3",197,0)
 S ODP=+$P($G(^ORD(101.41,+IFN,0)),U,7),ODG=+$P($G(^(0)),U,5)
"RTN","ORWDXM3",198,0)
 S ODP=$$GET1^DIQ(9.4,+ODP_",",1),ODG=$P($G(^ORD(100.98,ODG,0)),U,3)
"RTN","ORWDXM3",199,0)
 I ODP'["PS" Q 1
"RTN","ORWDXM3",200,0)
 I ODP="PSH" Q 1
"RTN","ORWDXM3",201,0)
 ;check infusion rate for IV QO
"RTN","ORWDXM3",202,0)
 I ODG="IV RX"!(ODG="TPN") D  Q SUCC
"RTN","ORWDXM3",203,0)
 .S TYPE=$$GETIVTYP
"RTN","ORWDXM3",204,0)
 .I TYPE=""
"RTN","ORWDXM3",205,0)
 .S PASSIV=$$IVRTECHK
"RTN","ORWDXM3",206,0)
 .I PASSIV=0
"RTN","ORWDXM3",207,0)
 .S INFUID=$O(^ORD(101.41,"B","OR GTX INFUSION RATE",0))
"RTN","ORWDXM3",208,0)
 .S INFUSE=$G(ORDIALOG(INFUID,1))
"RTN","ORWDXM3",209,0)
 .S SUCC=$$VALINF(TYPE,INFUSE)
"RTN","ORWDXM3",210,0)
 .I SUCC=0 Q
"RTN","ORWDXM3",211,0)
 .I TYPE="C" S SUCC=$$IVADFCHK(.ORDIALOG)
"RTN","ORWDXM3",212,0)
 I (ODP="PSJ")!(ODP="PSO"),ODG'="IV RX",ODG'="TPN" S SUCC=$$VERDUR(.ORDIALOG)
"RTN","ORWDXM3",213,0)
 Q SUCC
"RTN","ORWDXM3",214,0)
 ;
"RTN","ORWDXM3",215,0)
VALINF(TYPE,INFUSE) ;
"RTN","ORWDXM3",216,0)
 N SUCC
"RTN","ORWDXM3",217,0)
 S SUCC=0
"RTN","ORWDXM3",218,0)
 I TYPE="I" D  Q SUCC
"RTN","ORWDXM3",219,0)
 .I INFUSE="" S SUCC=1 Q
"RTN","ORWDXM3",220,0)
 .I $TR(INFUSE,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")["INFUSE OVER" S SUCC=1 Q
"RTN","ORWDXM3",221,0)
 .I $L(INFUSE)>4 Q
"RTN","ORWDXM3",222,0)
 Q 1
"RTN","ORWDXM3",223,0)
 ;
"RTN","ORWDXM3",224,0)
VALQO(IFN) ;Check to see if it's a good QO med
"RTN","ORWDXM3",225,0)
 ;If it's an IV QO: check if infusion rate entered
"RTN","ORWDXM3",226,0)
 ;If it's an UD QO: check if dosage entered
"RTN","ORWDXM3",227,0)
 ;regular order treated as good QO
"RTN","ORWDXM3",228,0)
 ;
"RTN","ORWDXM3",229,0)
 I IFN[";",($$UPCTCHK^ORWDXA(+IFN)) Q 0
"RTN","ORWDXM3",230,0)
 I $P($G(^ORD(101.41,IFN,0)),U,4)'="Q" Q 1
"RTN","ORWDXM3",231,0)
 N ODP,ODG,INFUID,INFUSE,DSAGEID,SUCC,PASSIV,TYPE,PRIORID,DONEID,OK
"RTN","ORWDXM3",232,0)
 S SUCC=0
"RTN","ORWDXM3",233,0)
 S ODP=+$P($G(^ORD(101.41,IFN,0)),U,7),ODG=+$P($G(^(0)),U,5)
"RTN","ORWDXM3",234,0)
 S ODP=$$GET1^DIQ(9.4,+ODP_",",1),ODG=$P($G(^ORD(100.98,ODG,0)),U,3)
"RTN","ORWDXM3",235,0)
 I ODP'["PS" Q 1
"RTN","ORWDXM3",236,0)
 I ODP="PSH" Q 1
"RTN","ORWDXM3",237,0)
 ;check for DONE urgency/priority on Outpatient QO
"RTN","ORWDXM3",238,0)
 I ODG="O RX" D  Q:'OK 0
"RTN","ORWDXM3",239,0)
 . S OK=1,PRIORID=$O(^ORD(101.41,"B","OR GTX URGENCY",0)) Q:'PRIORID
"RTN","ORWDXM3",240,0)
 . S DONEID=$O(^ORD(101.42,"B","DONE",0)) Q:'DONEID
"RTN","ORWDXM3",241,0)
 . I $G(ORDIALOG(PRIORID,1))=DONEID S OK=0
"RTN","ORWDXM3",242,0)
 ;check infusion rate for IV QO
"RTN","ORWDXM3",243,0)
 I ODG="IV RX"!(ODG="TPN")!(ODG="CI RX") D
"RTN","ORWDXM3",244,0)
 . S INFUID=$O(^ORD(101.41,"B","OR GTX INFUSION RATE",0))
"RTN","ORWDXM3",245,0)
 . S TYPE=$$GETIVTYP
"RTN","ORWDXM3",246,0)
 . I TYPE="" Q
"RTN","ORWDXM3",247,0)
 . I $D(ORDIALOG(INFUID,1)) D
"RTN","ORWDXM3",248,0)
 . . I TYPE="I" D  Q
"RTN","ORWDXM3",249,0)
 . . . S INFUSE=$G(ORDIALOG(INFUID,1))
"RTN","ORWDXM3",250,0)
 . . . I INFUSE="" Q
"RTN","ORWDXM3",251,0)
 . . . I INFUSE["INFUSE OVER" S SUCC=1 Q
"RTN","ORWDXM3",252,0)
 . . . I $L(INFUSE)>4 Q
"RTN","ORWDXM3",253,0)
 . . . I +INFUSE>0 S INFUSE="INFUSE OVER "_INFUSE_" Minutes"
"RTN","ORWDXM3",254,0)
 . . . S ORDIALOG(INFUID,1)=INFUSE,SUCC=1
"RTN","ORWDXM3",255,0)
 . . S SUCC=1
"RTN","ORWDXM3",256,0)
 . ; additive frequency check/infusion rate checks for continuous orders
"RTN","ORWDXM3",257,0)
 . I TYPE="C" D  I SUCC=0 Q
"RTN","ORWDXM3",258,0)
 . . I $D(ORDIALOG(INFUID,1)) S SUCC=1 I SUCC=0 Q
"RTN","ORWDXM3",259,0)
 . . S SUCC=$$IVADFCHK(.ORDIALOG)
"RTN","ORWDXM3",260,0)
 . I SUCC=0 Q
"RTN","ORWDXM3",261,0)
 . I '$D(ORDIALOG(INFUID,1)),TYPE="I" S SUCC=1
"RTN","ORWDXM3",262,0)
 . S PASSIV=$$IVRTECHK
"RTN","ORWDXM3",263,0)
 . I SUCC=0 Q
"RTN","ORWDXM3",264,0)
 . I PASSIV=0 S SUCC=0
"RTN","ORWDXM3",265,0)
 . I SUCC=1,$$ISMISSFL(.ORDIALOG,TYPE)=1 S SUCC=0
"RTN","ORWDXM3",266,0)
 ;check dosage for UD QO
"RTN","ORWDXM3",267,0)
 I (ODP="PSJ")!(ODP="PSO"),ODG'="IV RX",ODG'="TPN" D
"RTN","ORWDXM3",268,0)
 . S DSAGEID=$O(^ORD(101.41,"B","OR GTX INSTRUCTIONS",0))
"RTN","ORWDXM3",269,0)
 . I $D(ORDIALOG(DSAGEID,1)) S SUCC=1
"RTN","ORWDXM3",270,0)
 . I SUCC=0 Q
"RTN","ORWDXM3",271,0)
 . ;
"RTN","ORWDXM3",272,0)
 . S SUCC=$$VERDUR(.ORDIALOG)
"RTN","ORWDXM3",273,0)
 ;
"RTN","ORWDXM3",274,0)
 I SUCC=1,$P($G(^ORD(101.41,IFN,5)),U,8) D
"RTN","ORWDXM3",275,0)
 .N COMMID,WPCNT
"RTN","ORWDXM3",276,0)
 .S COMMID=$O(^ORD(101.41,"B","OR GTX WORD PROCESSING 1",0))
"RTN","ORWDXM3",277,0)
 .S COMMID=$O(^ORD(101.41,IFN,6,"D",COMMID,0))
"RTN","ORWDXM3",278,0)
 .I COMMID S WPCNT=0 F  S WPCNT=$O(^ORD(101.41,IFN,6,COMMID,2,WPCNT)) Q:'WPCNT!('SUCC)  D
"RTN","ORWDXM3",279,0)
 ..I ^ORD(101.41,IFN,6,COMMID,2,WPCNT,0)["^" S SUCC=0
"RTN","ORWDXM3",280,0)
 Q SUCC
"RTN","ORWDXM3",281,0)
 ;
"RTN","ORWDXM3",282,0)
IVRTECHK() ;
"RTN","ORWDXM3",283,0)
 N RTIEN,RTVALUE,RESULT
"RTN","ORWDXM3",284,0)
 N CNT,NUM,ORDERIDS,OIIEN,OTYPE,ROUTE
"RTN","ORWDXM3",285,0)
 S CNT=0,RESULT=0
"RTN","ORWDXM3",286,0)
 S RTIEN=+$P($G(ORDIALOG("B","ROUTE")),U,2) I RTIEN'>0 Q RESULT
"RTN","ORWDXM3",287,0)
 S RTVALUE=+$G(ORDIALOG(RTIEN,1)) I RTVALUE'>0 Q RESULT
"RTN","ORWDXM3",288,0)
 F OTYPE="SOLUTION","ADDITIVE" D
"RTN","ORWDXM3",289,0)
 .S OIIEN=+$P($G(ORDIALOG("B",OTYPE)),U,2) I OIIEN>0 D
"RTN","ORWDXM3",290,0)
 ..S NUM=0 F  S NUM=$O(ORDIALOG(OIIEN,NUM)) Q:NUM'>0  I +$G(ORDIALOG(OIIEN,NUM))>0 D
"RTN","ORWDXM3",291,0)
 ...S CNT=CNT+1,ORDERIDS(CNT)=ORDIALOG(OIIEN,NUM)
"RTN","ORWDXM3",292,0)
 I $D(ORDERIDS)=0 Q
"RTN","ORWDXM3",293,0)
 S ROUTE=$$IVQOVAL^ORWDPS33(.ORDERIDS,RTVALUE)
"RTN","ORWDXM3",294,0)
 I ROUTE="" S ORDIALOG(RTIEN,1)=ROUTE
"RTN","ORWDXM3",295,0)
 I ROUTE'="" S RESULT=1
"RTN","ORWDXM3",296,0)
 ;K ^TMP($J,"ORWDXM3 IVRTECHK")
"RTN","ORWDXM3",297,0)
 ;D ALL^PSS51P2(RTVALUE,,,,"ORWDXM3 IVRTECHK")
"RTN","ORWDXM3",298,0)
 ;I +^TMP($J,"ORWDXM3 IVRTECHK",RTVALUE,6)'=1 S ORDIALOG(RTIEN,1)="",RESULT=0
"RTN","ORWDXM3",299,0)
 ;K ^TMP($J,"ORWDXM3 IVRTECHK")
"RTN","ORWDXM3",300,0)
 Q RESULT
"RTN","ORWDXM3",301,0)
 ;
"RTN","ORWDXM3",302,0)
ISUDQO(ORY,DLGID) ;True: is unit dose quick order
"RTN","ORWDXM3",303,0)
 S ORY=0
"RTN","ORWDXM3",304,0)
 Q:'$D(^ORD(101.41,DLGID,0))
"RTN","ORWDXM3",305,0)
 N CLODGRP,CLIVDGRP,UDGRP1,UDGRP2,DLGTYP,DLGGRP
"RTN","ORWDXM3",306,0)
 S UDGRP1=$O(^ORD(100.98,"B","UD RX",0))
"RTN","ORWDXM3",307,0)
 S UDGRP2=$O(^ORD(100.98,"B","I RX",0))
"RTN","ORWDXM3",308,0)
 S CLODGRP=$O(^ORD(100.98,"B","CLINIC MEDICATIONS",""))
"RTN","ORWDXM3",309,0)
 S CLIVDGRP=$O(^ORD(100.98,"B","CLINIC INFUSIONS",""))
"RTN","ORWDXM3",310,0)
 S DLGTYP=$P($G(^ORD(101.41,DLGID,0)),U,4)
"RTN","ORWDXM3",311,0)
 I DLGTYP="Q" D VERIFY^ORQOAUIC(.ORORN1,DLGID) I $G(ORORN1) D
"RTN","ORWDXM3",312,0)
 . S ^TMP("OR QUICK ORDER AUDIT",$J,"DLGID")=DLGID ;RTW
"RTN","ORWDXM3",313,0)
 S DLGGRP=$P($G(^ORD(101.41,DLGID,0)),U,5)
"RTN","ORWDXM3",314,0)
 I (DLGTYP="Q"),((DLGGRP=UDGRP1)!(DLGGRP=UDGRP2)!(DLGGRP=CLODGRP)!(DLGGRP=CLIVDGRP)) S ORY=1
"RTN","ORWDXM3",315,0)
 Q
"RTN","ORWDXM3",316,0)
 ;
"RTN","ORWDXM3",317,0)
SDRTCVER(ORDIALOG) ;
"RTN","ORWDXM3",318,0)
 ;Return to Clinic QO verifier
"RTN","ORWDXM3",319,0)
 I +$$VAL^ORCD("NUMBER OF APPOINTMENTS")>1,+$$VAL^ORCD("INTERVAL")<1 Q 0
"RTN","ORWDXM3",320,0)
 I +$$VAL^ORCD("NUMBER OF APPOINTMENTS")=1,+$$VAL^ORCD("INTERVAL")>0 Q 0
"RTN","ORWDXM3",321,0)
 Q 1
"RTN","ORWDXM3",322,0)
 ;
"RTN","ORWDXR")
0^21^B60290017^B60135290
"RTN","ORWDXR",1,0)
ORWDXR ;SLC/KCM/JDL - Utilites for Order Actions ;May 30, 2019@11:29
"RTN","ORWDXR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,125,131,134,141,149,187,190,213,243,331,306,349,374,409,397**;Dec 17, 1997;Build 22
"RTN","ORWDXR",3,0)
 ;
"RTN","ORWDXR",4,0)
ACTDCREA(DCIEN) ; Valid DC Reason
"RTN","ORWDXR",5,0)
 N X
"RTN","ORWDXR",6,0)
 S X=$G(^ORD(100.03,DCIEN,0))
"RTN","ORWDXR",7,0)
 I $P(X,U,4) Q 0
"RTN","ORWDXR",8,0)
 I $P(X,U,5)'=+$O(^DIC(9.4,"C","OR",0)) Q 0
"RTN","ORWDXR",9,0)
 I $P(X,U,7)=+$O(^ORD(100.02,"C","A",0)) Q 0
"RTN","ORWDXR",10,0)
 Q 1
"RTN","ORWDXR",11,0)
 ;
"RTN","ORWDXR",12,0)
ISREL(VAL,ORIFN) ; Return true if an order has been released
"RTN","ORWDXR",13,0)
 N STS S STS=$P(^OR(100,+ORIFN,3),U,3)
"RTN","ORWDXR",14,0)
 S VAL=$S(STS=10:0,STS=11:0,1:1)  ; false if delayed or unreleased order
"RTN","ORWDXR",15,0)
 Q
"RTN","ORWDXR",16,0)
RENEW(REC,ORIFN,ORVP,ORNP,ORL,FLDS,CPLX,ORAPPT) ; Renew an order
"RTN","ORWDXR",17,0)
 N ORDG
"RTN","ORWDXR",18,0)
 N ORDUZ,ORSTS,OREVENT,ORCAT,ORDA,ORTS,ORNEW,ORCHECK,ORLOG,ORPKG
"RTN","ORWDXR",19,0)
 N ORDIALOG,PRMT,X0
"RTN","ORWDXR",20,0)
 N FSTDOSE,FST
"RTN","ORWDXR",21,0)
 ;*349 Allow for ORDUZ to come in through FLDS. Allow renewer to be specified by the caller.
"RTN","ORWDXR",22,0)
 S ORDUZ=$G(FLDS("ORDUZ"))
"RTN","ORWDXR",23,0)
 S (FSTDOSE,FST)=0
"RTN","ORWDXR",24,0)
 I '$D(CPLX) S CPLX=0
"RTN","ORWDXR",25,0)
 I '$G(ORAPPT) S ORAPPT=""
"RTN","ORWDXR",26,0)
 S ORVP=ORVP_";DPT(",ORL(2)=ORL_";SC(",ORL=ORL(2)
"RTN","ORWDXR",27,0)
 S X0=^OR(100,+ORIFN,0)
"RTN","ORWDXR",28,0)
 S ORDG=$P(X0,U,11)
"RTN","ORWDXR",29,0)
 S ORTS=$P(X0,U,13) ; 409 - Transfer Treating Specialty
"RTN","ORWDXR",30,0)
 S ORPKG=$P(X0,U,14)
"RTN","ORWDXR",31,0)
 I $D(FLDS("ORCHECK")) M ORCHECK=FLDS("ORCHECK")
"RTN","ORWDXR",32,0)
 I $P(X0,U,5)["101.41," D                        ; version 3
"RTN","ORWDXR",33,0)
 . S ORDIALOG=+$P(X0,U,5),ORCAT=$P(^OR(100,+ORIFN,0),U,12)
"RTN","ORWDXR",34,0)
 . D GETDLG^ORCD(ORDIALOG),GETORDER^ORCD(+ORIFN)
"RTN","ORWDXR",35,0)
 . I CPLX S FSTDOSE=$P($G(ORDIALOG("B","FIRST DOSE")),U,2) S:'FSTDOSE FSTDOSE=$$PTR^ORCD("OR GTX NOW")
"RTN","ORWDXR",36,0)
 . I FSTDOSE,$G(ORDIALOG(FSTDOSE,1)) K ORDIALOG(FSTDOSE,1)
"RTN","ORWDXR",37,0)
 E  D                                            ; version 2.5 generic
"RTN","ORWDXR",38,0)
 . S ORDIALOG=$O(^ORD(101.41,"B","OR GXTEXT WORD PROCESSING ORDE",0))
"RTN","ORWDXR",39,0)
 . D GETDLG^ORCD(ORDIALOG)
"RTN","ORWDXR",40,0)
 . S PRMT=$O(^ORD(101.41,"B","OR GTX WORD PROCESSING 1",0))
"RTN","ORWDXR",41,0)
 . S ORDIALOG(PRMT,1)=$NA(^TMP("ORWORD",$J,PRMT,1))
"RTN","ORWDXR",42,0)
 . M ^TMP("ORWORD",$J,PRMT,1)=^OR(100,+ORIFN,1)
"RTN","ORWDXR",43,0)
 . S PRMT=$O(^ORD(101.41,"B","OR GTX START DATE/TIME",0))
"RTN","ORWDXR",44,0)
 . I $P(X0,U,9) S ORDIALOG(PRMT,1)=$P(X0,U,9)
"RTN","ORWDXR",45,0)
 I +FLDS(1)=999 D  ; generic order
"RTN","ORWDXR",46,0)
 . S ORDIALOG($$PTR^ORCD("OR GTX START DATE/TIME"),1)=$P(FLDS(1),U,2)
"RTN","ORWDXR",47,0)
 . S ORDIALOG($$PTR^ORCD("OR GTX STOP DATE/TIME"),1)=$P(FLDS(1),U,3)
"RTN","ORWDXR",48,0)
 I ($O(^ORD(101.41,"AB","PS MEDS",0))>0),(+FLDS(1)=130)!(+FLDS(1)=135)!(+FLDS(1)=140),'$L($G(ORDIALOG($$PTR^ORCD("OR GTX SIG"),1))) D
"RTN","ORWDXR",49,0)
 . N ORDOSE,ORDRUG,ORCAT,ORWPSOI,PROMPT,DRUG
"RTN","ORWDXR",50,0)
 . S ORCAT=$P($G(^OR(100,+ORIFN,0)),U,12)
"RTN","ORWDXR",51,0)
 . S PROMPT=$$PTR^ORCD("OR GTX INSTRUCTIONS")
"RTN","ORWDXR",52,0)
 . S ORDRUG=$G(ORDIALOG($$PTR^ORCD("OR GTX DISPENSE DRUG"),1))
"RTN","ORWDXR",53,0)
 . S ORWPSOI=+$G(ORDIALOG($$PTR^ORCD("OR GTX ORDERABLE ITEM"),1))
"RTN","ORWDXR",54,0)
 . I ORWPSOI S ORWPSOI=+$P($G(^ORD(101.43,+ORWPSOI,0)),U,2)
"RTN","ORWDXR",55,0)
 . D DOSE^PSSORUTL(.ORDOSE,ORWPSOI,$S(ORCAT="I":"U",1:"O"),ORVP)       ; dflt doses
"RTN","ORWDXR",56,0)
 . D D1^ORCDPS2  ; set up ORDOSE
"RTN","ORWDXR",57,0)
 . S DRUG=$G(ORDOSE("DD",+ORDRUG))
"RTN","ORWDXR",58,0)
 . I DRUG,ORCAT="O" D RESETID^ORCDPS
"RTN","ORWDXR",59,0)
 . D SIG^ORCDPS2
"RTN","ORWDXR",60,0)
 I +FLDS(1)=140 D  ; outpatient meds
"RTN","ORWDXR",61,0)
 . K ORDIALOG($$PTR^ORCD("OR GTX START DATE"),1) ; remove effective dt
"RTN","ORWDXR",62,0)
 . S ORDIALOG($$PTR^ORCD("OR GTX REFILLS"),1)=$P(FLDS(1),U,4)
"RTN","ORWDXR",63,0)
 . S ORDIALOG($$PTR^ORCD("OR GTX ROUTING"),1)=$P(FLDS(1),U,5)
"RTN","ORWDXR",64,0)
 . S PRMT=$$PTR^ORCD("OR GTX WORD PROCESSING 1")
"RTN","ORWDXR",65,0)
 . K ^TMP("ORWORD",$J,PRMT,1)
"RTN","ORWDXR",66,0)
 . S I=1 F  S I=$O(FLDS(I)) Q:'I  S ^TMP("ORWORD",$J,PRMT,1,I-1,0)=FLDS(I)
"RTN","ORWDXR",67,0)
 . S ^TMP("ORWORD",$J,PRMT,1,0)=U_U_(I-1)_U_(I-1)_U_DT_U
"RTN","ORWDXR",68,0)
 . S ORDIALOG(PRMT,1)=$NA(^TMP("ORWORD",$J,PRMT,1))
"RTN","ORWDXR",69,0)
 . N SIG,PI,X S SIG=$$PTR^ORCD("OR GTX SIG")
"RTN","ORWDXR",70,0)
 . S PI=$$PTR^ORCD("OR GTX PATIENT INSTRUCTIONS"),X=$$STR(PI)
"RTN","ORWDXR",71,0)
 . I $L(X),$$STR(SIG)[X S ORDIALOG(PI,"FORMAT")="@" ;PI in Sig
"RTN","ORWDXR",72,0)
 D RN^ORCSAVE
"RTN","ORWDXR",73,0)
 S REC="" S ORIFN=+ORIFN_";"_ORDA D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDXR",74,0)
 Q
"RTN","ORWDXR",75,0)
RNWFLDS(LST,ORIFN) ; Return fields for renew action
"RTN","ORWDXR",76,0)
 ; LST(0)=RenewType^Start^Stop^Refills^Pickup  LST(n)=Comments
"RTN","ORWDXR",77,0)
 N X0,DG,PKG,RNWTYPE,START,STOP,REFILLS,OROI
"RTN","ORWDXR",78,0)
 S ORIFN=+ORIFN,X0=^OR(100,ORIFN,0),DG=$P(X0,U,11),PKG=$P(X0,U,14)
"RTN","ORWDXR",79,0)
 S PKG=$E($P(^DIC(9.4,PKG,0),U,2),1,2),DG=$P(^ORD(100.98,DG,0),U,3)
"RTN","ORWDXR",80,0)
 S LST(0)=$S(PKG="OR":999,PKG="PS"&((DG="O RX")!(DG="SPLY")):140,PKG="PS"&(DG="UD RX"):130,PKG="PS"&(DG="NV RX"):145,1:0)
"RTN","ORWDXR",81,0)
 I +LST(0)=140 D
"RTN","ORWDXR",82,0)
 . N ORPICK,ORPREV
"RTN","ORWDXR",83,0)
 . S ORPICK=$$DEFPICK^ORWDPS1("")
"RTN","ORWDXR",84,0)
 . I ORPICK="" D
"RTN","ORWDXR",85,0)
 .. N D3
"RTN","ORWDXR",86,0)
 .. S D3=$G(^OR(100,ORIFN,3))
"RTN","ORWDXR",87,0)
 .. I $P(D3,"^",3)=11,$P(D3,"^",11)=2 S ORPREV=$P(D3,"^",5) I ORPREV]"" S ORPICK=$$VAL(ORPREV,"PICKUP")
"RTN","ORWDXR",88,0)
 .. I $P(D3,"^",3)'=11 S ORPICK=$$VAL(ORIFN,"PICKUP")
"RTN","ORWDXR",89,0)
 .. I ORPICK="" S ORPICK="M^by Mail"
"RTN","ORWDXR",90,0)
 . S LST(0)=LST(0)_U_U_U_+$$VAL(ORIFN,"REFILLS")_U_ORPICK
"RTN","ORWDXR",91,0)
 . ;D WPVAL(.LST,ORIFN,"COMMENT")
"RTN","ORWDXR",92,0)
 I +LST(0)=999 S LST(0)=LST(0)_U_$$VAL(ORIFN,"START")_U_$$VAL(ORIFN,"STOP")
"RTN","ORWDXR",93,0)
 ; make sure start/stop times are relative times, otherwise use NOW, no Stop
"RTN","ORWDXR",94,0)
 ;I +$P(LST(0),U,2) S $P(LST(0),U,2)="NOW" ;DJE-VM *331 - moved to $$VAL
"RTN","ORWDXR",95,0)
 ;I +$P(LST(0),U,3)!($P(LST(0),U,3)="0") S $P(LST(0),U,3)=""
"RTN","ORWDXR",96,0)
 ;NEW STUFF AFTER THIS LINE OR*3*243
"RTN","ORWDXR",97,0)
 S $P(LST(0),U,9)=0
"RTN","ORWDXR",98,0)
 S OROI=$O(^OR(100,+ORIFN,4.5,"ID","ORDERABLE",0))
"RTN","ORWDXR",99,0)
 Q:'OROI
"RTN","ORWDXR",100,0)
 S OROI=$G(^OR(100,+ORIFN,4.5,OROI,1))
"RTN","ORWDXR",101,0)
 Q:'OROI
"RTN","ORWDXR",102,0)
 S $P(LST(0),U,9)=$$ISCLOZ^ORALWORD(OROI)
"RTN","ORWDXR",103,0)
 ; add to LST node specifying if patient of ORIFN passes clozapine lab tests
"RTN","ORWDXR",104,0)
 I $P(LST(0),U,9) D
"RTN","ORWDXR",105,0)
 .N ORY,ORDFN,ORTMP
"RTN","ORWDXR",106,0)
 .S ORTMP=LST(0)
"RTN","ORWDXR",107,0)
 .K LST
"RTN","ORWDXR",108,0)
 .S LST(0)=ORTMP
"RTN","ORWDXR",109,0)
 .S ORDFN=$P(^OR(100,ORIFN,0),U,2)
"RTN","ORWDXR",110,0)
 .I $P(ORDFN,";",2)'="DPT(" Q
"RTN","ORWDXR",111,0)
 .S ORDFN=+ORDFN
"RTN","ORWDXR",112,0)
 .D ALLWORD^ORALWORD(.ORY,ORDFN,ORIFN,"E")
"RTN","ORWDXR",113,0)
 .M LST(1)=ORY
"RTN","ORWDXR",114,0)
 Q
"RTN","ORWDXR",115,0)
VAL(ORIFN,ID) ; Return value for order response
"RTN","ORWDXR",116,0)
 N DA,Y,ORDIALOG,ORDGDA,CAPS,XCODE
"RTN","ORWDXR",117,0)
 S DA=+$O(^OR(100,ORIFN,4.5,"ID",ID,0))
"RTN","ORWDXR",118,0)
 I (ID="START")!(ID="STOP") D  I 1 ;DJE-VM *331
"RTN","ORWDXR",119,0)
 . ; make sure start/stop times are relative times, otherwise use dialog default values
"RTN","ORWDXR",120,0)
 . S CAPS=$$UP^XLFSTR($G(^OR(100,ORIFN,4.5,DA,1)))
"RTN","ORWDXR",121,0)
 . I ('$L(CAPS))!($E(CAPS)="T")!($E(CAPS)="V")!($E(CAPS)="N"&($E(CAPS,1,3)'="NOV")) S Y=CAPS Q
"RTN","ORWDXR",122,0)
 . S ORDIALOG=$P(^OR(100,+ORIFN,0),U,5)
"RTN","ORWDXR",123,0)
 . S ORDGDA=+^OR(100,ORIFN,4.5,DA,0)
"RTN","ORWDXR",124,0)
 . S XCODE=$G(^ORD(101.41,+ORDIALOG,10,ORDGDA,7))
"RTN","ORWDXR",125,0)
 . I $L(XCODE) X XCODE
"RTN","ORWDXR",126,0)
 . I '$L($G(Y)),ID="START" S Y="NOW" ;if no default, set START to NOW
"RTN","ORWDXR",127,0)
 E  S Y=$G(^OR(100,ORIFN,4.5,DA,1))
"RTN","ORWDXR",128,0)
 Q $G(Y)
"RTN","ORWDXR",129,0)
WPVAL(TXT,ORIFN,ID) ; Return word processing value
"RTN","ORWDXR",130,0)
 N DA S DA=+$O(^OR(100,ORIFN,4.5,"ID",ID,0))
"RTN","ORWDXR",131,0)
 S I=0 F  S I=$O(^OR(100,ORIFN,4.5,DA,2,I)) Q:'I  S TXT(I)=^(I,0)
"RTN","ORWDXR",132,0)
 Q
"RTN","ORWDXR",133,0)
STR(PTR) ; -- Return word processing text as long string for comparison
"RTN","ORWDXR",134,0)
 N X,Y,I,ARRY
"RTN","ORWDXR",135,0)
 S ARRY=$G(ORDIALOG(+$G(PTR),1)) Q:'$L(ARRY) ""
"RTN","ORWDXR",136,0)
 S I=+$O(@ARRY@(0)),Y=$$UP^XLFSTR($G(@ARRY@(I,0)))
"RTN","ORWDXR",137,0)
 F  S I=+$O(@ARRY@(I)) Q:'I  S X=$G(@ARRY@(I,0)),Y=Y_$$UP^XLFSTR(X)
"RTN","ORWDXR",138,0)
 S Y=$TR(Y," ") ;remove all spaces, compare only text
"RTN","ORWDXR",139,0)
 Q Y
"RTN","ORWDXR",140,0)
CHKACT(ORDERID,ORWSIG,ORWREL,ORWNATR) ; Return error if can't sign/release order
"RTN","ORWDXR",141,0)
 N ORACT,ORWERR
"RTN","ORWDXR",142,0)
 ; begin case
"RTN","ORWDXR",143,0)
 S ORACT=""
"RTN","ORWDXR",144,0)
 I (ORWSIG=1),$D(^XUSEC("ORES",DUZ)) S ORACT="ES" G XC1
"RTN","ORWDXR",145,0)
 I (ORWSIG=7),$D(^XUSEC("ORES",DUZ)) S ORACT="DS" G XC1
"RTN","ORWDXR",146,0)
 I ORWREL,(ORWNATR="W") S ORACT="OC" G XC1
"RTN","ORWDXR",147,0)
 I ORWREL S ORACT="RS" S:$P($G(^OR(100,+ORDERID,0)),U,16)<2 ORACT="ES"
"RTN","ORWDXR",148,0)
XC1 ; end case
"RTN","ORWDXR",149,0)
 S ORWERR=""
"RTN","ORWDXR",150,0)
 I $L(ORACT),$$VALID^ORCACT0(ORDERID,ORACT,.ORWERR,ORWNATR) S ORWERR=""
"RTN","ORWDXR",151,0)
 Q ORWERR
"RTN","ORWDXR",152,0)
GTORITM(Y,ORIFN) ;-- Get back the orderable item IEN
"RTN","ORWDXR",153,0)
 S ORIFN=+ORIFN
"RTN","ORWDXR",154,0)
 S Y=$$VALUE^ORCSAVE2(ORIFN,"ORDERABLE")
"RTN","ORWDXR",155,0)
 Q
"RTN","ORWDXR",156,0)
GETPKG(Y,IFN) ;Get package for an order
"RTN","ORWDXR",157,0)
 N ORDERID,PKGID
"RTN","ORWDXR",158,0)
 Q:+IFN<1
"RTN","ORWDXR",159,0)
 S ORDERID=+IFN,Y=""
"RTN","ORWDXR",160,0)
 S PKGID=$P(^OR(100,ORDERID,0),U,14)
"RTN","ORWDXR",161,0)
 S:PKGID>0 Y=$P(^DIC(9.4,PKGID,0),U,2)
"RTN","ORWDXR",162,0)
 Q
"RTN","ORWDXR",163,0)
ISCPLX(ORY,ORID) ; 1: is complex order 0: is not
"RTN","ORWDXR",164,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXR",165,0)
 N PKG
"RTN","ORWDXR",166,0)
 S PKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDXR",167,0)
 S PKG=$$NMSP^ORCD(PKG)
"RTN","ORWDXR",168,0)
 I PKG'="PS" Q
"RTN","ORWDXR",169,0)
 N NUMCHDS,NOWID,NOWVAL
"RTN","ORWDXR",170,0)
 S (NOWVAL,NOWID)=0
"RTN","ORWDXR",171,0)
 S NUMCHDS=$P($G(^OR(100,+ORID,2,0)),U,4)
"RTN","ORWDXR",172,0)
 I NUMCHDS>2 S ORY=1 Q
"RTN","ORWDXR",173,0)
 I NUMCHDS=2 D
"RTN","ORWDXR",174,0)
 . S ORY=1
"RTN","ORWDXR",175,0)
 . S:$D(^OR(100,+ORID,4.5,"ID","NOW")) NOWID=$O(^("NOW",0))
"RTN","ORWDXR",176,0)
 . S:NOWID NOWVAL=$G(^OR(100,+ORID,4.5,NOWID,1))
"RTN","ORWDXR",177,0)
 I NOWVAL=1 S ORY=0 Q
"RTN","ORWDXR",178,0)
 Q
"RTN","ORWDXR",179,0)
ORCPLX(ORY,ORID,ORACT) ;Return children orders of the complex order
"RTN","ORWDXR",180,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXR",181,0)
 N PKG,LACT,OELACT,ISNOW
"RTN","ORWDXR",182,0)
 S PKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDXR",183,0)
 S PKG=$$NMSP^ORCD(PKG)
"RTN","ORWDXR",184,0)
 I PKG'="PS" Q
"RTN","ORWDXR",185,0)
 N CHLDCNT,IDX,X3
"RTN","ORWDXR",186,0)
 S (CHLDCNT,IDX)=0
"RTN","ORWDXR",187,0)
 S:$L($G(^OR(100,+ORID,2,0))) CHLDCNT=$P(^(0),U,4)
"RTN","ORWDXR",188,0)
 I 'CHLDCNT Q
"RTN","ORWDXR",189,0)
 F  S IDX=$O(^OR(100,+ORID,2,IDX)) Q:'IDX  D
"RTN","ORWDXR",190,0)
 . S (LACT,OELACT,ISNOW)=0
"RTN","ORWDXR",191,0)
 . D ISNOW(.ISNOW,IDX)
"RTN","ORWDXR",192,0)
 . Q:ISNOW
"RTN","ORWDXR",193,0)
 . S X3=$G(^OR(100,IDX,3))
"RTN","ORWDXR",194,0)
 . S LACT=$P(X3,U,7)
"RTN","ORWDXR",195,0)
 . F  S OELACT=$O(^OR(100,IDX,8,OELACT),-1) Q:OELACT
"RTN","ORWDXR",196,0)
 . S:OELACT>LACT LACT=OELACT
"RTN","ORWDXR",197,0)
 . S ORY(IDX)=IDX_";"_LACT
"RTN","ORWDXR",198,0)
 Q
"RTN","ORWDXR",199,0)
CANRN(ORY,ORID) ; Check conjunction for renew.
"RTN","ORWDXR",200,0)
 ; All conjunctioni = "And" return 1
"RTN","ORWDXR",201,0)
 ; Has a "Then" return 0
"RTN","ORWDXR",202,0)
 Q:'$G(^OR(100,+ORID,0))
"RTN","ORWDXR",203,0)
 N PKG
"RTN","ORWDXR",204,0)
 S PKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDXR",205,0)
 S PKG=$$NMSP^ORCD(PKG)
"RTN","ORWDXR",206,0)
 I PKG'="PS" Q
"RTN","ORWDXR",207,0)
 N INDX,INDY,CANRENEW
"RTN","ORWDXR",208,0)
 S INDX=0
"RTN","ORWDXR",209,0)
 S CANRENEW=1
"RTN","ORWDXR",210,0)
 N CHID
"RTN","ORWDXR",211,0)
 S CHID=0 F  S CHID=$O(^OR(100,+ORID,2,CHID)) Q:'CHID  D
"RTN","ORWDXR",212,0)
 . N ORSTS,ACTIVE S ORSTS=0
"RTN","ORWDXR",213,0)
 . S ORSTS=$P($G(^OR(100,CHID,3)),U,3)
"RTN","ORWDXR",214,0)
 . S ACTIVE=$O(^ORD(100.01,"B","ACTIVE",0))
"RTN","ORWDXR",215,0)
 . I ACTIVE'=ORSTS S CANRENEW=0
"RTN","ORWDXR",216,0)
 I 'CANRENEW S ORY=CANRENEW Q
"RTN","ORWDXR",217,0)
 F  S INDX=$O(^OR(100,+ORID,4.5,"ID","CONJ",INDX)) Q:'INDX  D
"RTN","ORWDXR",218,0)
 . S INDY=0 F  S INDY=$O(^OR(100,+ORID,4.5,INDX,INDY)) Q:'INDY  D
"RTN","ORWDXR",219,0)
 . . I $G(^(INDY))="T" S CANRENEW=0 Q
"RTN","ORWDXR",220,0)
 . I CANRENEW=0 Q
"RTN","ORWDXR",221,0)
 S ORY=CANRENEW
"RTN","ORWDXR",222,0)
 Q
"RTN","ORWDXR",223,0)
ISNOW(ORY,ORID) ; Is first time now order?
"RTN","ORWDXR",224,0)
 N SCH
"RTN","ORWDXR",225,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXR",226,0)
 S SCH=""
"RTN","ORWDXR",227,0)
 S SCH=$O(^OR(100,+ORID,4.5,"ID","SCHEDULE",0))
"RTN","ORWDXR",228,0)
 S:SCH SCH=$G(^OR(100,+ORID,4.5,SCH,1))
"RTN","ORWDXR",229,0)
 S:SCH="NOW" ORY=1
"RTN","ORWDXR",230,0)
 Q
"RTN","ORY397")
0^11^B90876^n/a
"RTN","ORY397",1,0)
ORY397 ;ISP/RFR - TEMP CODE FOR PATCH OR*3.0*397 ;Aug 29, 2019@12:18
"RTN","ORY397",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**397**;Dec 17, 1997;Build 22
"RTN","ORY397",3,0)
 Q
"RTN","ORY397",4,0)
SENDDLG(ANAME) ; Return true if the current order dialog should be sent
"RTN","ORY397",5,0)
 I ANAME="GMRCOR CONSULT" Q 1
"RTN","ORY397",6,0)
 I ANAME="GMRCOR REQUEST" Q 1
"RTN","ORY397",7,0)
 Q 0
"RTN","ORY397A")
0^^B9488198^n/a
"RTN","ORY397A",1,0)
ORY397A ;ISP/JLC - POST FOR PATCH OR*3.0*397 ;Aug 01, 2019@15:46
"RTN","ORY397A",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**397**;Dec 17, 1997;Build 22
"RTN","ORY397A",3,0)
 ;
"RTN","ORY397A",4,0)
 Q
"RTN","ORY397A",5,0)
EN ; Task off the rebuild of the 'D' cross-reference for file #100
"RTN","ORY397A",6,0)
 N ZTDTH,ZTIO,ZTSK,ZTRTN,ZTDESC
"RTN","ORY397A",7,0)
 D BMES^XPDUTL("Queueing Rebuild of the 'D' cross-reference for ORDERS file (#100)")
"RTN","ORY397A",8,0)
 S ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,0,0,0,10)
"RTN","ORY397A",9,0)
 S ZTRTN="TASK^ORY397A",ZTDESC="Rebuild of the 'D' xref for file #100"
"RTN","ORY397A",10,0)
 S ZTIO=""
"RTN","ORY397A",11,0)
 D ^%ZTLOAD
"RTN","ORY397A",12,0)
 I +$G(ZTSK)=0 D
"RTN","ORY397A",13,0)
 . D BMES^XPDUTL("Unable to queue the file #100 xref Rebuild, file a help desk ticket for assistance.")
"RTN","ORY397A",14,0)
 E  D
"RTN","ORY397A",15,0)
 . D BMES^XPDUTL("DONE - Task #"_ZTSK)
"RTN","ORY397A",16,0)
 Q
"RTN","ORY397A",17,0)
TASK ;
"RTN","ORY397A",18,0)
 N ORIFN,I,J,STOP,A,OR0,OR3,ORDIALOG,ORIT,STOP,ZTSTOP
"RTN","ORY397A",19,0)
 D MSG1("S")
"RTN","ORY397A",20,0)
 S STOP=0
"RTN","ORY397A",21,0)
 S ORIFN=$G(^OR(100,"D",0)) I ORIFN="" S ORIFN=" "
"RTN","ORY397A",22,0)
 F I=1:1 D  Q:'ORIFN  I STOP Q
"RTN","ORY397A",23,0)
 . S ORIFN=$O(^OR(100,ORIFN),-1) Q:'ORIFN
"RTN","ORY397A",24,0)
 . S OR0=$G(^OR(100,ORIFN,0)) Q:'OR0
"RTN","ORY397A",25,0)
 . S ORDIALOG=+$P(OR0,"^",5),A=ORDIALOG_";ORD(101.41," K ^OR(100,"D",A,ORIFN)
"RTN","ORY397A",26,0)
 . S OR3=$G(^OR(100,ORIFN,3)) Q:'OR3
"RTN","ORY397A",27,0)
 . S ORIT=$P(OR3,"^",4)
"RTN","ORY397A",28,0)
 . I $G(ORIT),ORIT?.E1";ORD(101.41," S ^OR(100,"D",ORIT,ORIFN)=""
"RTN","ORY397A",29,0)
 . S ^OR(100,"D",0)=ORIFN
"RTN","ORY397A",30,0)
 . I '(I#100000) D  I STOP Q
"RTN","ORY397A",31,0)
 .. F J=1:1:510 H 1 I '(J#120) S STOP=$$REQ2STOP() I STOP Q
"RTN","ORY397A",32,0)
 I 'STOP K ^OR(100,"D",0) D MSG
"RTN","ORY397A",33,0)
 I STOP D MSG1("RS")
"RTN","ORY397A",34,0)
 Q
"RTN","ORY397A",35,0)
MSG ;
"RTN","ORY397A",36,0)
 N XMSUB,XMY,XMTEXT,XMDUZ,ORTEXT,SITE,I,A
"RTN","ORY397A",37,0)
 S ORTEXT(1)="Rebuild of 'D' cross-reference completed for "_$$SITE^VASITE()
"RTN","ORY397A",38,0)
 S ORTEXT(2)=" "
"RTN","ORY397A",39,0)
 S XMDUZ=DUZ
"RTN","ORY397A",40,0)
 S XMSUB="Rebuild of 'D' cross-reference completed"
"RTN","ORY397A",41,0)
 S XMY("CRUMLEY.JAMIE@FORUM.DOMAIN.EXT")="",XMY("THOMPSON.WILLIAM_ANTHONY@FORUM.DOMAIN.EXT")=""
"RTN","ORY397A",42,0)
 S XMTEXT="ORTEXT("
"RTN","ORY397A",43,0)
 D ^XMD
"RTN","ORY397A",44,0)
 Q
"RTN","ORY397A",45,0)
MSG1(ORTYP) ;
"RTN","ORY397A",46,0)
 N XMSUB,XMY,XMTEXT,XMDUZ,ORTEXT,SITE,I,A,ORTXT,ORSUB
"RTN","ORY397A",47,0)
 I ORTYP="S" S ORTXT="Rebuild of 'D' cross-reference STARTED for "_$$SITE^VASITE(),ORSUB="Rebuild of 'D' cross-reference started"
"RTN","ORY397A",48,0)
 I ORTYP="RS" S ORTXT="Rebuild of 'D' cross-reference STOP REQUESTED for "_$$SITE^VASITE(),ORSUB="Rebuild of D' cross-reference stop requested"
"RTN","ORY397A",49,0)
 S ORTEXT(1)=ORTXT
"RTN","ORY397A",50,0)
 S ORTEXT(2)=" "
"RTN","ORY397A",51,0)
 S XMDUZ=DUZ
"RTN","ORY397A",52,0)
 S XMSUB=ORSUB
"RTN","ORY397A",53,0)
 S XMY("CRUMLEY.JAMIE@FORUM.DOMAIN.EXT")="",XMY("THOMPSON.WILLIAM_ANTHONY@FORUM.DOMAIN.EXT")=""
"RTN","ORY397A",54,0)
 S XMTEXT="ORTEXT("
"RTN","ORY397A",55,0)
 D ^XMD
"RTN","ORY397A",56,0)
 Q
"RTN","ORY397A",57,0)
REQ2STOP() ;
"RTN","ORY397A",58,0)
 ; Check for task stop request
"RTN","ORY397A",59,0)
 ; Returns 1 if stop request made.
"RTN","ORY397A",60,0)
 N STATUS,X
"RTN","ORY397A",61,0)
 S STATUS=0
"RTN","ORY397A",62,0)
 I '$D(ZTQUEUED) Q 0
"RTN","ORY397A",63,0)
 S X=$$S^%ZTLOAD()
"RTN","ORY397A",64,0)
 I X D  ;
"RTN","ORY397A",65,0)
 . S STATUS=1
"RTN","ORY397A",66,0)
 . S X=$$S^%ZTLOAD("Received shutdown request")
"RTN","ORY397A",67,0)
 . S ZTSTOP=1
"RTN","ORY397A",68,0)
 ;
"RTN","ORY397A",69,0)
 Q STATUS
"VER")
8.0^22.2
"^DD",101.41,101.41,0)
FIELD^NL^99^30
"^DD",101.41,101.41,0,"DDA")
N
"^DD",101.41,101.41,0,"DT")
3170119
"^DD",101.41,101.41,0,"IX","AB",101.41,.01)

"^DD",101.41,101.41,0,"IX","AD",101.412,2)

"^DD",101.41,101.41,0,"IX","AM",101.41,99)

"^DD",101.41,101.41,0,"IX","AM2",101.41,2)

"^DD",101.41,101.41,0,"IX","AM51",101.41,51)

"^DD",101.41,101.41,0,"IX","AM52",101.41,52)

"^DD",101.41,101.41,0,"IX","AMM",101.412,.01)

"^DD",101.41,101.41,0,"IX","AMM2",101.412,2)

"^DD",101.41,101.41,0,"IX","AMM3",101.412,3)

"^DD",101.41,101.41,0,"IX","AMM4",101.412,4)

"^DD",101.41,101.41,0,"IX","AMM5",101.412,5)

"^DD",101.41,101.41,0,"IX","APKG",101.41,7)

"^DD",101.41,101.41,0,"IX","C",101.41,2)

"^DD",101.41,101.41,0,"NM","ORDER DIALOG")

"^DD",101.41,101.41,0,"PT",100,2)

"^DD",101.41,101.41,0,"PT",100,7)

"^DD",101.41,101.41,0,"PT",100.045,.02)

"^DD",101.41,101.41,0,"PT",100.5,4)

"^DD",101.41,101.41,0,"PT",100.5,5)

"^DD",101.41,101.41,0,"PT",100.95,3)

"^DD",101.41,101.41,0,"PT",100.98,4)

"^DD",101.41,101.41,0,"PT",101.412,1)

"^DD",101.41,101.41,0,"PT",101.412,2)

"^DD",101.41,101.41,0,"PT",101.415,2)

"^DD",101.41,101.41,0,"PT",101.416,.02)

"^DD",101.41,101.41,0,"PT",101.441,.01)

"^DD",101.41,101.41,0,"PT",801.41,15)

"^DD",101.41,101.41,0,"PT",801.4118,.01)

"^DD",101.41,101.41,0,"PT",800001.05,.01)

"^DD",101.41,101.41,0,"VRPK")
OR
"^DD",101.41,101.41,.01,0)
NAME^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>63!($L(X)<3)!'(X'?1P.E) X
"^DD",101.41,101.41,.01,1,0)
^.1^^-1
"^DD",101.41,101.41,.01,1,2,0)
101.41^AB
"^DD",101.41,101.41,.01,1,2,1)
S ^ORD(101.41,"AB",$E(X,1,63),DA)=""
"^DD",101.41,101.41,.01,1,2,2)
K ^ORD(101.41,"AB",$E(X,1,63),DA)
"^DD",101.41,101.41,.01,1,2,"%D",0)
^^1^1^2971020^
"^DD",101.41,101.41,.01,1,2,"%D",1,0)
This is a regular index on the full 63 characters of the Name field.
"^DD",101.41,101.41,.01,1,2,"DT")
2971020
"^DD",101.41,101.41,.01,3)
Answer must be 3-63 characters in length.
"^DD",101.41,101.41,.01,21,0)
^^3^3^2971219^
"^DD",101.41,101.41,.01,21,1,0)
This is the name of the dialog; entries that were converted from the
"^DD",101.41,101.41,.01,21,2,0)
Protocol file will retain the same name.  Namespacing is not required,
"^DD",101.41,101.41,.01,21,3,0)
but still encouraged.
"^DD",101.41,101.41,.01,"DT")
2971020
"^DD",101.41,101.41,2,0)
DISPLAY TEXT^FX^^0;2^K:$L(X)>80!($L(X)<3)!($$CHKNAM^ORUTL(X)) X
"^DD",101.41,101.41,2,1,0)
^.1
"^DD",101.41,101.41,2,1,1,0)
101.41^C
"^DD",101.41,101.41,2,1,1,1)
S ^ORD(101.41,"C",$$UP^XLFSTR($E(X,1,63)),DA)=""
"^DD",101.41,101.41,2,1,1,2)
K ^ORD(101.41,"C",$$UP^XLFSTR($E(X,1,63)),DA)
"^DD",101.41,101.41,2,1,1,"DT")
2950112
"^DD",101.41,101.41,2,1,2,0)
101.41^AM2^MUMPS
"^DD",101.41,101.41,2,1,2,1)
D REDOM^ORDD41
"^DD",101.41,101.41,2,1,2,2)
D REDOM^ORDD41
"^DD",101.41,101.41,2,1,2,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.41,2,1,2,"%D",1,0)
Update TIMESTAMP whenever DISPLAY TEXT is changed.
"^DD",101.41,101.41,2,1,2,"DT")
2990210
"^DD",101.41,101.41,2,3)
Answer must be 3-80 characters and cannot contain an up-arrow (^) or semi-colon (;).
"^DD",101.41,101.41,2,21,0)
^.001^1^1^3010913^^^^
"^DD",101.41,101.41,2,21,1,0)
The text of this dialog's name as it appears on a menu or subheader.
"^DD",101.41,101.41,2,"DT")
3000823
"^DD",101.41,101.41,3,0)
DISABLE^F^^0;3^K:$L(X)>40!($L(X)<1) X
"^DD",101.41,101.41,3,3)
Enter a message here to disable this dialog, 1-40 characters in length.
"^DD",101.41,101.41,3,21,0)
^^3^3^2950112^
"^DD",101.41,101.41,3,21,1,0)
This field disables use of this dialog when it contains text.  The text
"^DD",101.41,101.41,3,21,2,0)
should be a short message explaining why use of this dialog has been
"^DD",101.41,101.41,3,21,3,0)
disabled, as it will be displayed if this dialog is selected.
"^DD",101.41,101.41,3,"DT")
2950112
"^DD",101.41,101.41,4,0)
TYPE^RS^P:prompt;D:dialog;Q:quick order;O:order set;M:menu;A:action;^0;4^Q
"^DD",101.41,101.41,4,3)
Specify a type for this dialog.
"^DD",101.41,101.41,4,21,0)
^^5^5^2950716^^^^
"^DD",101.41,101.41,4,21,1,0)
This field defines the type of order dialog to be processed.  Control
"^DD",101.41,101.41,4,21,2,0)
will be passed to the OE/RR Dialog Processor for dialog items; menu types
"^DD",101.41,101.41,4,21,3,0)
are used for displaying and selecting dialog items.  Action types will only
"^DD",101.41,101.41,4,21,4,0)
execute the entry and exit actions, ignoring any items that may exist; these
"^DD",101.41,101.41,4,21,5,0)
dialogs should not create entries in the Orders file.
"^DD",101.41,101.41,4,"DT")
2950716
"^DD",101.41,101.41,5,0)
DISPLAY GROUP^P100.98'^ORD(100.98,^0;5^Q
"^DD",101.41,101.41,5,3)
Enter the display group containing orderable items defined by this dialog.
"^DD",101.41,101.41,5,21,0)
^^3^3^2950112^
"^DD",101.41,101.41,5,21,1,0)
This field determines what display group this dialog has been defined for.
"^DD",101.41,101.41,5,21,2,0)
It will define which orderable items are selectable with this dialog,
"^DD",101.41,101.41,5,21,3,0)
as well as what service to send the order to when it is complete.
"^DD",101.41,101.41,5,"DT")
2950112
"^DD",101.41,101.41,6,0)
SIGNATURE REQUIRED^S^0:NONE;1:ORELSE;2:ORES;^0;6^Q
"^DD",101.41,101.41,6,3)
Enter the OR key required to sign orders created by this dialog
"^DD",101.41,101.41,6,21,0)
^^6^6^2970318^^
"^DD",101.41,101.41,6,21,1,0)
This field indicates what signature will be required for orders created by
"^DD",101.41,101.41,6,21,2,0)
this dialog, to be considered complete and ready to release to the service
"^DD",101.41,101.41,6,21,3,0)
for action.  If this flag is set to NO and the dialog contains a prompt
"^DD",101.41,101.41,6,21,4,0)
for item(s) from the Orderable Item file, the order created may still
"^DD",101.41,101.41,6,21,5,0)
require a signature if any of the items ordered are individually flagged
"^DD",101.41,101.41,6,21,6,0)
as requiring a signature.
"^DD",101.41,101.41,6,"DT")
2970318
"^DD",101.41,101.41,7,0)
PACKAGE^P9.4'^DIC(9.4,^0;7^Q
"^DD",101.41,101.41,7,1,0)
^.1
"^DD",101.41,101.41,7,1,1,0)
101.41^APKG
"^DD",101.41,101.41,7,1,1,1)
S ^ORD(101.41,"APKG",$E(X,1,30),DA)=""
"^DD",101.41,101.41,7,1,1,2)
K ^ORD(101.41,"APKG",$E(X,1,30),DA)
"^DD",101.41,101.41,7,1,1,"DT")
2970325
"^DD",101.41,101.41,7,3)
Enter the VISTA package that is to receive orders created by this dialog.
"^DD",101.41,101.41,7,21,0)
^^3^3^2950208^
"^DD",101.41,101.41,7,21,1,0)
This is the VISTA package that is intended to receive orders created by
"^DD",101.41,101.41,7,21,2,0)
this dialog; this is required for creating the HL7 messages to pass the
"^DD",101.41,101.41,7,21,3,0)
order.
"^DD",101.41,101.41,7,"DT")
2970325
"^DD",101.41,101.41,8,0)
VERIFY ORDER^S^1:YES;0:NO;^0;8^Q
"^DD",101.41,101.41,8,3)
Enter YES to have orders created by this dialog presented to the user before saving, with the opportunity to edit.
"^DD",101.41,101.41,8,21,0)
^^3^3^2950623^
"^DD",101.41,101.41,8,21,1,0)
This field is a flag, which determines if the order created by this dialog
"^DD",101.41,101.41,8,21,2,0)
will be presented to the user for verification before saving in the Orders
"^DD",101.41,101.41,8,21,3,0)
file; for most quick orders, this flag should be set to 0 (no).
"^DD",101.41,101.41,8,"DT")
2950623
"^DD",101.41,101.41,9,0)
ASK FOR ANOTHER ORDER^S^0:NO;1:YES;2:YES-DON'T ASK;^0;9^Q
"^DD",101.41,101.41,9,3)
Enter YES to have the user asked to enter another order from this dialog before exiting.
"^DD",101.41,101.41,9,21,0)
^^6^6^2970616^^^
"^DD",101.41,101.41,9,21,1,0)
This field allows the user to add another order from this dialog, when the
"^DD",101.41,101.41,9,21,2,0)
initial order is accepted and placed; if set to YES, the user will be
"^DD",101.41,101.41,9,21,3,0)
asked "Add another <dialog display text> order?" to allow for either
"^DD",101.41,101.41,9,21,4,0)
exiting the processor or adding an additional order of the same type.
"^DD",101.41,101.41,9,21,5,0)
This field can also be set to YES-DON'T ASK to force the processor to
"^DD",101.41,101.41,9,21,6,0)
automatically drop into prompting for another order without asking first.
"^DD",101.41,101.41,9,"DT")
2970616
"^DD",101.41,101.41,10,0)
ITEMS^101.412IA^^10;0
"^DD",101.41,101.41,10,21,0)
^^5^5^2990211^^^^
"^DD",101.41,101.41,10,21,1,0)
This field contains the components for dialogs:
"^DD",101.41,101.41,10,21,2,0)
     Dialogs      -> prompts
"^DD",101.41,101.41,10,21,3,0)
     Quick orders -> prompts (completed)
"^DD",101.41,101.41,10,21,4,0)
     Order sets   -> dialogs or quick orders
"^DD",101.41,101.41,10,21,5,0)
     Menus        -> dialogs, quick orders, or order sets
"^DD",101.41,101.41,11,0)
DATA TYPE^S^D:date/time;R:free text date/time;F:free text;N:numeric;S:set of codes;Y:yes/no;P:pointer;W:word processing;^1;1^Q
"^DD",101.41,101.41,11,3)
Enter the type of data to be collected at this prompt.
"^DD",101.41,101.41,11,21,0)
^^2^2^2950823^^
"^DD",101.41,101.41,11,21,1,0)
This is the type of data being prompted for; this field is used to define
"^DD",101.41,101.41,11,21,2,0)
a call to the reader (^DIR) in most cases.
"^DD",101.41,101.41,11,23,0)
^^1^1^2950823^^
"^DD",101.41,101.41,11,23,1,0)
Used with Prompt-type only.
"^DD",101.41,101.41,11,"DT")
2950407
"^DD",101.41,101.41,12,0)
DOMAIN^F^^1;2^K:$L(X)>235!($L(X)<1) X
"^DD",101.41,101.41,12,3)
Answer must be 1-235 characters in length.
"^DD",101.41,101.41,12,21,0)
^^3^3^2990225^^^^
"^DD",101.41,101.41,12,21,1,0)
This is a parameter that may be used to further specify the data type.
"^DD",101.41,101.41,12,21,2,0)
The string stored here should be appropriate for the second ^-piece of
"^DD",101.41,101.41,12,21,3,0)
DIR(0) when used with the data type field.
"^DD",101.41,101.41,12,23,0)
^^1^1^2990225^^^^
"^DD",101.41,101.41,12,23,1,0)
Used with Prompt-type only.
"^DD",101.41,101.41,12,"DT")
2990225
"^DD",101.41,101.41,13,0)
ID^F^^1;3^K:$L(X)>10!($L(X)<2) X
"^DD",101.41,101.41,13,3)
Answer must be 2-10 characters in length.
"^DD",101.41,101.41,13,21,0)
^.001^20^20^3010727^^
"^DD",101.41,101.41,13,21,1,0)
This field may contain a single word identifier which will be
"^DD",101.41,101.41,13,21,2,0)
stored with the user response in the Orders file #100, where it
"^DD",101.41,101.41,13,21,3,0)
will be indexed for quick reference to certain values in the
"^DD",101.41,101.41,13,21,4,0)
order dialog.  The following are some examples of values
"^DD",101.41,101.41,13,21,5,0)
currently in use:
"^DD",101.41,101.41,13,21,6,0)
 
"^DD",101.41,101.41,13,21,7,0)
   START      -> Start date/time
"^DD",101.41,101.41,13,21,8,0)
   STOP       -> Stop date/time
"^DD",101.41,101.41,13,21,9,0)
   SCHEDULE   -> Administration Schedule
"^DD",101.41,101.41,13,21,10,0)
   ORDERABLE  -> Orderable Item
"^DD",101.41,101.41,13,21,11,0)
   DRUG       -> Dispense Drug
"^DD",101.41,101.41,13,21,12,0)
   CANCEL     -> Cancel Future Orders flag
"^DD",101.41,101.41,13,21,13,0)
   COMMENT    -> Word processing comments
"^DD",101.41,101.41,13,21,14,0)
 
"^DD",101.41,101.41,13,21,15,0)
These values must be unique among entries within an order dialog
"^DD",101.41,101.41,13,21,16,0)
but do not need to be unique across the entire file.  Be sure to
"^DD",101.41,101.41,13,21,17,0)
check the IDs assigned to generic text entries to make sure that
"^DD",101.41,101.41,13,21,18,0)
all IDs are unique.  In order to avoid potential problems it's
"^DD",101.41,101.41,13,21,19,0)
recommended that you use unique IDs for any local entries that you
"^DD",101.41,101.41,13,21,20,0)
create.
"^DD",101.41,101.41,13,"DT")
2960215
"^DD",101.41,101.41,17,0)
VALIDATION^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,17,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,17,9)
@
"^DD",101.41,101.41,17,21,0)
^^3^3^2960912^
"^DD",101.41,101.41,17,21,1,0)
This is MUMPS code that will be executed at the time of releasing an
"^DD",101.41,101.41,17,21,2,0)
order created with this dialog; dialog responses may be checked again
"^DD",101.41,101.41,17,21,3,0)
here before releasing the order to the service.
"^DD",101.41,101.41,17,"DT")
2960912
"^DD",101.41,101.41,19,0)
ADDITIONAL TEXT^K^^9;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,19,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,19,9)
@
"^DD",101.41,101.41,19,21,0)
^^3^3^2960405^^
"^DD",101.41,101.41,19,21,1,0)
This is MUMPS code that will be executed when order ORIFN created by this
"^DD",101.41,101.41,19,21,2,0)
dialog is about to be displayed; any string that should be appended to the
"^DD",101.41,101.41,19,21,3,0)
order text should be returned in Y.
"^DD",101.41,101.41,19,"DT")
2960405
"^DD",101.41,101.41,20,0)
DESCRIPTION^101.411^^2;0
"^DD",101.41,101.41,20,21,0)
^^1^1^2971219^
"^DD",101.41,101.41,20,21,1,0)
This is a description of the dialog and its uses.
"^DD",101.41,101.41,21,0)
RESPONSES^101.416^^6;0
"^DD",101.41,101.41,21,21,0)
^^2^2^2971219^
"^DD",101.41,101.41,21,21,1,0)
This multiple contains any responses to prompts that have been pre-answered
"^DD",101.41,101.41,21,21,2,0)
to create a quick order.
"^DD",101.41,101.41,30,0)
ENTRY ACTION^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,30,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,30,9)
@
"^DD",101.41,101.41,30,21,0)
^^4^4^2950425^
"^DD",101.41,101.41,30,21,1,0)
This is MUMPS code that will be executed at the top of a dialog, prior to
"^DD",101.41,101.41,30,21,2,0)
the execution of any prompts; it may perform functions such as listing
"^DD",101.41,101.41,30,21,3,0)
the recent Radiology exams before ordering a new one, or alerting the
"^DD",101.41,101.41,30,21,4,0)
user to an existing diet order before making a change.
"^DD",101.41,101.41,30,"DT")
2950425
"^DD",101.41,101.41,31,0)
QUICK SETUP^K^^3.1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,31,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,31,9)
@
"^DD",101.41,101.41,31,21,0)
^^3^3^2970113^
"^DD",101.41,101.41,31,21,1,0)
This is MUMPS code that will be executed in the place of the Entry Action
"^DD",101.41,101.41,31,21,2,0)
when creating quick orders for this dialog; variables may be set here
"^DD",101.41,101.41,31,21,3,0)
instead to bypass the usual dependence on specific patient values.
"^DD",101.41,101.41,31,"DT")
2970113
"^DD",101.41,101.41,40,0)
EXIT ACTION^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,40,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,40,9)
@
"^DD",101.41,101.41,40,21,0)
^^2^2^2950622^
"^DD",101.41,101.41,40,21,1,0)
This is MUMPS code that will be executed upon completion of processing the
"^DD",101.41,101.41,40,21,2,0)
dialog; it is currently used only with dialog-type entries.
"^DD",101.41,101.41,40,"DT")
2950622
"^DD",101.41,101.41,50,0)
CONTROLS^101.415A^^50;0
"^DD",101.41,101.41,51,0)
COLUMN WIDTH^NJ3,0^^5;1^K:+X'=X!(X>240)!(X<20)!(X?.E1"."1N.N) X
"^DD",101.41,101.41,51,1,0)
^.1
"^DD",101.41,101.41,51,1,1,0)
101.41^AM51^MUMPS
"^DD",101.41,101.41,51,1,1,1)
D REDO^ORDD41
"^DD",101.41,101.41,51,1,1,2)
D REDO^ORDD41
"^DD",101.41,101.41,51,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.41,51,1,1,"%D",1,0)
Update TIMESTAMP whenever COLUMN WIDTH is changed.
"^DD",101.41,101.41,51,1,1,"DT")
2990210
"^DD",101.41,101.41,51,3)
Type a Number between 20 and 240, 0 Decimal Digits
"^DD",101.41,101.41,51,21,0)
^^2^2^2950623^
"^DD",101.41,101.41,51,21,1,0)
This is the width, in characters, for each column in a menu.  For example,
"^DD",101.41,101.41,51,21,2,0)
to have 3 columns on an 80 character device, enter a width of 26.
"^DD",101.41,101.41,51,"DT")
2990210
"^DD",101.41,101.41,52,0)
MNEMONIC WIDTH^NJ1,0^^5;2^K:+X'=X!(X>9)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.41,52,1,0)
^.1
"^DD",101.41,101.41,52,1,1,0)
101.41^AM52^MUMPS
"^DD",101.41,101.41,52,1,1,1)
D REDO^ORDD41
"^DD",101.41,101.41,52,1,1,2)
D REDO^ORDD41
"^DD",101.41,101.41,52,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.41,52,1,1,"%D",1,0)
Update TIMESTAMP whenever MNEMONIC WIDTH is changed.
"^DD",101.41,101.41,52,1,1,"DT")
2990210
"^DD",101.41,101.41,52,3)
Type a Number between 1 and 9, 0 Decimal Digits
"^DD",101.41,101.41,52,21,0)
^^2^2^2950623^
"^DD",101.41,101.41,52,21,1,0)
This field allows the width of item mnemonics to be varied; the default
"^DD",101.41,101.41,52,21,2,0)
value is 5.
"^DD",101.41,101.41,52,"DT")
2990210
"^DD",101.41,101.41,53,0)
PATH SWITCH^S^1:YES;0:NO;^5;3^Q
"^DD",101.41,101.41,53,3)
Enter YES if this menu should be redisplayed when traversing back up the menu tree.
"^DD",101.41,101.41,53,21,0)
^^5^5^2950623^
"^DD",101.41,101.41,53,21,1,0)
This switch allows the user, when traversing back UP the tree of menus and
"^DD",101.41,101.41,53,21,2,0)
items, to select a new path back down the tree.  In other words, the menu
"^DD",101.41,101.41,53,21,3,0)
is redisplayed when returning to that menu's level in the tree and
"^DD",101.41,101.41,53,21,4,0)
processing back down the tree is possible from that point.  If nothing is
"^DD",101.41,101.41,53,21,5,0)
selected from the menu, the path continues back up the tree.
"^DD",101.41,101.41,53,"DT")
2950623
"^DD",101.41,101.41,54,0)
LISTBOX TEXT^F^^5;4^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.41,54,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.41,54,"DT")
2960524
"^DD",101.41,101.41,55,0)
WINDOW FORM ID^NJ4,0^^5;5^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
"^DD",101.41,101.41,55,3)
Type a Number between 0 and 9999, 0 Decimal Digits
"^DD",101.41,101.41,55,21,0)
^.001^23^23^3010727^^
"^DD",101.41,101.41,55,21,1,0)
This field tells the GUI DELPHI code which form to use to process the
"^DD",101.41,101.41,55,21,2,0)
order dialog.  Each number represents a unique form.  Following are some
"^DD",101.41,101.41,55,21,3,0)
of the more common codes and their corresponding form in DELPHI.
"^DD",101.41,101.41,55,21,4,0)
 
"^DD",101.41,101.41,55,21,5,0)
    Form Name     Windows Form ID
"^DD",101.41,101.41,55,21,6,0)
    ---------     ---------------
"^DD",101.41,101.41,55,21,7,0)
  OD_ACTIVITY           100
"^DD",101.41,101.41,55,21,8,0)
  OD_ALLERGY            105
"^DD",101.41,101.41,55,21,9,0)
  OD_CONSULT            110
"^DD",101.41,101.41,55,21,10,0)
  OD_PROCEDURE          112
"^DD",101.41,101.41,55,21,11,0)
  OD_DIET_TXT           115
"^DD",101.41,101.41,55,21,12,0)
  OD_DIET               117
"^DD",101.41,101.41,55,21,13,0)
  OD_LAB                120
"^DD",101.41,101.41,55,21,14,0)
  OD_MEDINPT            130
"^DD",101.41,101.41,55,21,15,0)
  OD_MEDS               135
"^DD",101.41,101.41,55,21,16,0)
  OD_MEDOUTPT           140
"^DD",101.41,101.41,55,21,17,0)
  OD_NURSING            150
"^DD",101.41,101.41,55,21,18,0)
  OD_MISC               151
"^DD",101.41,101.41,55,21,19,0)
  OD_GENERIC            152
"^DD",101.41,101.41,55,21,20,0)
  OD_IMAGING            160
"^DD",101.41,101.41,55,21,21,0)
  OD_VITALS             171 
"^DD",101.41,101.41,55,21,22,0)
  OD_MEDIV              180
"^DD",101.41,101.41,55,21,23,0)
  OD_TEXTONLY           999
"^DD",101.41,101.41,55,"DT")
2960804
"^DD",101.41,101.41,56,0)
CREATE PARENT ORDER^S^1:YES;0:NO;^5;6^Q
"^DD",101.41,101.41,56,3)
Enter YES if a parent order should be created for this order set
"^DD",101.41,101.41,56,21,0)
^^6^6^2970227^
"^DD",101.41,101.41,56,21,1,0)
This flag indicates whether a parent order should be created to group
"^DD",101.41,101.41,56,21,2,0)
together all the orders created by this order set; this flag is only
"^DD",101.41,101.41,56,21,3,0)
valid with SET type order dialogs.  If this value is YES, a parent
"^DD",101.41,101.41,56,21,4,0)
order will be created, and only the parent will be presented on the
"^DD",101.41,101.41,56,21,5,0)
orders list for display and action; NO will prevent a parent from being
"^DD",101.41,101.41,56,21,6,0)
created and all orders will be created and displayed independently.
"^DD",101.41,101.41,56,"DT")
2970227
"^DD",101.41,101.41,57,0)
DISPLAY SUBHEADER^S^1:YES;0:NO;^5;7^Q
"^DD",101.41,101.41,57,3)
Enter YES if a subheader should be displayed as each order in this set is processed
"^DD",101.41,101.41,57,21,0)
^^3^3^2970227^
"^DD",101.41,101.41,57,21,1,0)
This flag indicates whether a subheader is to be displayed for each order
"^DD",101.41,101.41,57,21,2,0)
in this set as it is processed and placed; this flag is only valid with
"^DD",101.41,101.41,57,21,3,0)
SET type order dialogs.
"^DD",101.41,101.41,57,"DT")
2970227
"^DD",101.41,101.41,58,0)
AUTO-ACCEPT QUICK ORDER^S^1:YES;^5;8^Q
"^DD",101.41,101.41,58,3)
Enter 'Yes' if the order should be placed without displaying the dialog window.
"^DD",101.41,101.41,58,21,0)
^^2^2^2980902^
"^DD",101.41,101.41,58,21,1,0)
This can be set to yes for a quick order so that it can be placed simply
"^DD",101.41,101.41,58,21,2,0)
by clicking on it in the GUI (no ordering dialog is displayed).
"^DD",101.41,101.41,58,"DT")
2980902
"^DD",101.41,101.41,99,0)
TIMESTAMP^F^^99;1^K:$L(X)>15!($L(X)<1) X
"^DD",101.41,101.41,99,1,0)
^.1
"^DD",101.41,101.41,99,1,1,0)
101.41^AM^MUMPS
"^DD",101.41,101.41,99,1,1,1)
D SET^ORDD41(DA)
"^DD",101.41,101.41,99,1,1,2)
D KILL^ORDD41(DA)
"^DD",101.41,101.41,99,1,1,"%D",0)
^^2^2^2990210^
"^DD",101.41,101.41,99,1,1,"%D",1,0)
Recompiles order dialog menus in ^XUTL("XQORM",<dialog#>_";ORD(101.41,")
"^DD",101.41,101.41,99,1,1,"%D",2,0)
whenever fields necessary to displaying the menu are changed.
"^DD",101.41,101.41,99,1,1,"DT")
2990210
"^DD",101.41,101.41,99,3)
Answer must be 1-15 characters in length.
"^DD",101.41,101.41,99,21,0)
^^2^2^2980501^
"^DD",101.41,101.41,99,21,1,0)
For menus, this contains the $H time the menu was last compiled for use
"^DD",101.41,101.41,99,21,2,0)
with the Unwinder utility (^XQOR).
"^DD",101.41,101.41,99,"DT")
2990210
"^DD",101.41,101.411,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",101.41,101.411,0,"DT")
2950407
"^DD",101.41,101.411,0,"NM","DESCRIPTION")

"^DD",101.41,101.411,0,"UP")
101.41
"^DD",101.41,101.411,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",101.41,101.411,.01,3)
Enter a description of this dialog.
"^DD",101.41,101.411,.01,21,0)
^^1^1^2950425^^
"^DD",101.41,101.411,.01,21,1,0)
This field contains a description of the content and use of this dialog.
"^DD",101.41,101.411,.01,"DT")
2950407
"^DD",101.41,101.412,0)
FIELD^NL^117^37
"^DD",101.41,101.412,0,"DT")
3170119
"^DD",101.41,101.412,0,"ID","WRITE")
N OR0,ORNM S OR0=^(0) I $P(OR0,U,2) S ORNM=$P($G(^ORD(101.41,+$P(OR0,U,2),0)),U) D:$L(ORNM) EN^DDIOL(ORNM,,"?10")
"^DD",101.41,101.412,0,"IX","ATXT",101.412,21)

"^DD",101.41,101.412,0,"IX","B",101.412,.01)

"^DD",101.41,101.412,0,"IX","D",101.412,2)

"^DD",101.41,101.412,0,"IX","DAD",101.412,1)

"^DD",101.41,101.412,0,"IX","DAD1",101.412,.01)

"^DD",101.41,101.412,0,"NM","ITEMS")

"^DD",101.41,101.412,0,"UP")
101.41
"^DD",101.41,101.412,.01,0)
SEQUENCE^MNJ5,1^^0;1^K:+X'=X!(X>999.9)!(X<.1)!(X?.E1"."2N.N) X
"^DD",101.41,101.412,.01,1,0)
^.1
"^DD",101.41,101.412,.01,1,1,0)
101.412^B
"^DD",101.41,101.412,.01,1,1,1)
S ^ORD(101.41,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",101.41,101.412,.01,1,1,2)
K ^ORD(101.41,DA(1),10,"B",$E(X,1,30),DA)
"^DD",101.41,101.412,.01,1,2,0)
101.412^DAD1^MUMPS
"^DD",101.41,101.412,.01,1,2,1)
N ORP S ORP=$P(^ORD(101.41,DA(1),10,DA,0),U,11) S:ORP ^ORD(101.41,DA(1),10,"DAD",ORP,X,DA)=""
"^DD",101.41,101.412,.01,1,2,2)
N ORP S ORP=$P(^ORD(101.41,DA(1),10,DA,0),U,11) K:ORP ^ORD(101.41,DA(1),10,"DAD",ORP,X,DA)
"^DD",101.41,101.412,.01,1,2,"%D",0)
^^1^1^2950511^
"^DD",101.41,101.412,.01,1,2,"%D",1,0)
Allows retrieval of 'child' prompts in sequence by parent.
"^DD",101.41,101.412,.01,1,2,"DT")
2950511
"^DD",101.41,101.412,.01,1,3,0)
101.41^AMM^MUMPS
"^DD",101.41,101.412,.01,1,3,1)
D REDOX^ORDD41
"^DD",101.41,101.412,.01,1,3,2)
D REDOX^ORDD41
"^DD",101.41,101.412,.01,1,3,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,.01,1,3,"%D",1,0)
Update TIMESTAMP whenever SEQUENCE is changed.
"^DD",101.41,101.412,.01,1,3,"DT")
2990210
"^DD",101.41,101.412,.01,3)
Type a Number between .1 and 999.9, 1 Decimal Digit
"^DD",101.41,101.412,.01,21,0)
^^2^2^2971117^^^^
"^DD",101.41,101.412,.01,21,1,0)
This field specifies the order in which this item will be displayed or
"^DD",101.41,101.412,.01,21,2,0)
processed.
"^DD",101.41,101.412,.01,"DT")
2990210
"^DD",101.41,101.412,.1,0)
INPUT TRANSFORM^K^^.1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,.1,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,.1,9)
@
"^DD",101.41,101.412,.1,21,0)
^^2^2^2950816^
"^DD",101.41,101.412,.1,21,1,0)
This is code that will be used as the third piece of DIR(0) when asking
"^DD",101.41,101.412,.1,21,2,0)
this prompt.
"^DD",101.41,101.412,.1,"DT")
2950816
"^DD",101.41,101.412,1,0)
PARENT^P101.41'^ORD(101.41,^0;11^Q
"^DD",101.41,101.412,1,1,0)
^.1
"^DD",101.41,101.412,1,1,1,0)
101.412^DAD^MUMPS
"^DD",101.41,101.412,1,1,1,1)
S ^ORD(101.41,DA(1),10,"DAD",X,$P(^ORD(101.41,DA(1),10,DA,0),U),DA)=""
"^DD",101.41,101.412,1,1,1,2)
K ^ORD(101.41,DA(1),10,"DAD",X,$P(^ORD(101.41,DA(1),10,DA,0),U),DA)
"^DD",101.41,101.412,1,1,1,"%D",0)
^^1^1^2950511^^
"^DD",101.41,101.412,1,1,1,"%D",1,0)
Allows retrieval of 'child' prompts in sequence by parent.
"^DD",101.41,101.412,1,1,1,"DT")
2950511
"^DD",101.41,101.412,1,3)
If this prompt is subordinate to another in this dialog, enter the parent prompt here
"^DD",101.41,101.412,1,21,0)
^^4^4^2950511^
"^DD",101.41,101.412,1,21,1,0)
This field controls the behavior of this prompt.  If a parent is defined
"^DD",101.41,101.412,1,21,2,0)
here, this prompt will be asked from within the parent's dialog; when it
"^DD",101.41,101.412,1,21,3,0)
is invoked independently based on its position sequence number, the child
"^DD",101.41,101.412,1,21,4,0)
prompt will be ignored.
"^DD",101.41,101.412,1,"DT")
2950511
"^DD",101.41,101.412,2,0)
ITEM^P101.41'X^ORD(101.41,^0;2^D TREE^ORDD41
"^DD",101.41,101.412,2,1,0)
^.1
"^DD",101.41,101.412,2,1,1,0)
101.41^AD
"^DD",101.41,101.412,2,1,1,1)
S ^ORD(101.41,"AD",$E(X,1,30),DA(1),DA)=""
"^DD",101.41,101.412,2,1,1,2)
K ^ORD(101.41,"AD",$E(X,1,30),DA(1),DA)
"^DD",101.41,101.412,2,1,1,"DT")
2950123
"^DD",101.41,101.412,2,1,2,0)
101.412^D
"^DD",101.41,101.412,2,1,2,1)
S ^ORD(101.41,DA(1),10,"D",$E(X,1,30),DA)=""
"^DD",101.41,101.412,2,1,2,2)
K ^ORD(101.41,DA(1),10,"D",$E(X,1,30),DA)
"^DD",101.41,101.412,2,1,2,"DT")
2950411
"^DD",101.41,101.412,2,1,3,0)
101.41^AMM2^MUMPS
"^DD",101.41,101.412,2,1,3,1)
D REDOX^ORDD41
"^DD",101.41,101.412,2,1,3,2)
D REDOX^ORDD41
"^DD",101.41,101.412,2,1,3,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,2,1,3,"%D",1,0)
Update TIMESTAMP whenever ITEM is changed.
"^DD",101.41,101.412,2,1,3,"DT")
2990210
"^DD",101.41,101.412,2,3)
Enter an order dialog; a dialog that is an ancestor may not also be a sub-item.
"^DD",101.41,101.412,2,21,0)
^^3^3^2950123^
"^DD",101.41,101.412,2,21,1,0)
This field points to an order dialog which is subordinate to this dialog.
"^DD",101.41,101.412,2,21,2,0)
NOTE:  The parent dialog menu or one of its ancestors may not be entered
"^DD",101.41,101.412,2,21,3,0)
as an item.
"^DD",101.41,101.412,2,"DT")
2990217
"^DD",101.41,101.412,3,0)
MNEMONIC^FX^^0;3^K:$L(X)>4!($L(X)<1)!(+X=X&($L(X,".")>1))!($$CHKMNE^ORUTL(X)) X
"^DD",101.41,101.412,3,1,0)
^.1
"^DD",101.41,101.412,3,1,1,0)
101.41^AMM3^MUMPS
"^DD",101.41,101.412,3,1,1,1)
D REDOX^ORDD41
"^DD",101.41,101.412,3,1,1,2)
D REDOX^ORDD41
"^DD",101.41,101.412,3,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,3,1,1,"%D",1,0)
Update TIMESTAMP whenever MNEMONIC is changed.
"^DD",101.41,101.412,3,1,1,"DT")
2990210
"^DD",101.41,101.412,3,3)
Enter a mnemonic to be used when this dialog is displayed for selection, 1-4 characters in length with no decimal places if numeric. Standard list manager mnemonics may not be used.
"^DD",101.41,101.412,3,21,0)
^.001^2^2^3010727^^^^
"^DD",101.41,101.412,3,21,1,0)
This is a short abbreviation for this item dialog to be used when this
"^DD",101.41,101.412,3,21,2,0)
dialog is displayed for selection.
"^DD",101.41,101.412,3,"DT")
3000822
"^DD",101.41,101.412,4,0)
DISPLAY TEXT^FX^^0;4^K:$L(X)>80!($L(X)<1)!($$CHKNAM^ORUTL(X)) X
"^DD",101.41,101.412,4,1,0)
^.1
"^DD",101.41,101.412,4,1,1,0)
101.41^AMM4^MUMPS
"^DD",101.41,101.412,4,1,1,1)
D REDOX^ORDD41
"^DD",101.41,101.412,4,1,1,2)
D REDOX^ORDD41
"^DD",101.41,101.412,4,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,4,1,1,"%D",1,0)
Update TIMESTAMP whenever DISPLAY TEXT is changed.
"^DD",101.41,101.412,4,1,1,"DT")
2990210
"^DD",101.41,101.412,4,3)
Answer must be 1-80 characters in length and cannot contain an up-arrow (^) or semi-colon (;).
"^DD",101.41,101.412,4,21,0)
^.001^2^2^3010419^^^^
"^DD",101.41,101.412,4,21,1,0)
This field allows the text that normally appears for this item to be
"^DD",101.41,101.412,4,21,2,0)
replaced with alternate text for use in this dialog or menu.
"^DD",101.41,101.412,4,"DT")
3000823
"^DD",101.41,101.412,5,0)
DISPLAY ONLY?^S^0:NO;1:YES;2:YES-HEADER;^0;5^Q
"^DD",101.41,101.412,5,1,0)
^.1
"^DD",101.41,101.412,5,1,1,0)
101.41^AMM5^MUMPS
"^DD",101.41,101.412,5,1,1,1)
D REDOX^ORDD41
"^DD",101.41,101.412,5,1,1,2)
D REDOX^ORDD41
"^DD",101.41,101.412,5,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,5,1,1,"%D",1,0)
Update TIMESTAMP whenever DISPLAY ONLY? is changed.
"^DD",101.41,101.412,5,1,1,"DT")
2990210
"^DD",101.41,101.412,5,3)
Enter YES if this item is text for display only and not a selectable item.
"^DD",101.41,101.412,5,21,0)
^^3^3^2970409^^^^
"^DD",101.41,101.412,5,21,1,0)
This field identifies an item as being free text for display purposes
"^DD",101.41,101.412,5,21,2,0)
only.  The text in the Display Text field will be displayed, but it
"^DD",101.41,101.412,5,21,3,0)
is not selectable; if designated as a header, the text will be underlined.
"^DD",101.41,101.412,5,"DT")
2990210
"^DD",101.41,101.412,6,0)
REQUIRED^S^1:YES;0:NO;^0;6^Q
"^DD",101.41,101.412,6,3)
Enter YES if a response to this prompt is mandatory.
"^DD",101.41,101.412,6,21,0)
^^1^1^2950407^
"^DD",101.41,101.412,6,21,1,0)
This field indicates that the user must enter a response to this prompt.
"^DD",101.41,101.412,6,"DT")
2950407
"^DD",101.41,101.412,7,0)
MULTIPLE VALUED^S^1:YES;0:NO;^0;7^Q
"^DD",101.41,101.412,7,3)
Enter YES if this prompt is to be asked multiple times.
"^DD",101.41,101.412,7,21,0)
^^3^3^2950407^
"^DD",101.41,101.412,7,21,1,0)
This field determines if this prompt will be allowed to have multiple
"^DD",101.41,101.412,7,21,2,0)
values, or be prompted for only once; if this prompt is a sub-dialog,
"^DD",101.41,101.412,7,21,3,0)
the entire dialog will be asked once or many times, as a group.
"^DD",101.41,101.412,7,"DT")
2950407
"^DD",101.41,101.412,7.1,0)
MAX NUMBER OF MULTIPLES^NJ2,0^^0;12^K:+X'=X!(X>99)!(X<2)!(X?.E1"."1N.N) X
"^DD",101.41,101.412,7.1,3)
Type a Number between 2 and 99, 0 Decimal Digits
"^DD",101.41,101.412,7.1,21,0)
^^4^4^2950815^
"^DD",101.41,101.412,7.1,21,1,0)
This is the maximum number of values that may be entered for this prompt,
"^DD",101.41,101.412,7.1,21,2,0)
if it is flagged as being multiple-valued.  For example, a diet order may
"^DD",101.41,101.412,7.1,21,3,0)
have up to 5 diet modifications entered, where 5 is the maximum allowed
"^DD",101.41,101.412,7.1,21,4,0)
that would be entered here.
"^DD",101.41,101.412,7.1,"DT")
2950815
"^DD",101.41,101.412,7.2,0)
TITLE^F^^0;13^K:$L(X)>30!($L(X)<3) X
"^DD",101.41,101.412,7.2,3)
Answer must be 3-30 characters in length.
"^DD",101.41,101.412,7.2,21,0)
^^8^8^2970430^^
"^DD",101.41,101.412,7.2,21,1,0)
This is text that will be used in place of the prompt when the order is
"^DD",101.41,101.412,7.2,21,2,0)
displayed for place, edit, or cancel, or at the top of a multiple-valued
"^DD",101.41,101.412,7.2,21,3,0)
prompt.  The Display Text for the prompt will be used together with the
"^DD",101.41,101.412,7.2,21,4,0)
instance number to prompt for user input; for example if Title="Lab Tests:"
"^DD",101.41,101.412,7.2,21,5,0)
and Display Text="Test:" the user would see
"^DD",101.41,101.412,7.2,21,6,0)
  Lab Tests:
"^DD",101.41,101.412,7.2,21,7,0)
  1. Test:
"^DD",101.41,101.412,7.2,21,8,0)
  2. Test:
"^DD",101.41,101.412,7.2,"DT")
2950815
"^DD",101.41,101.412,7.3,0)
PROMPT^F^^0;14^K:$L(X)>10!($L(X)<1) X
"^DD",101.41,101.412,7.3,3)
Answer must be 1-10 characters in length.
"^DD",101.41,101.412,7.3,21,0)
^^3^3^2970618^
"^DD",101.41,101.412,7.3,21,1,0)
This field contains text that will be appended to the beginning of the
"^DD",101.41,101.412,7.3,21,2,0)
display text when prompting for additional values; if this field is
"^DD",101.41,101.412,7.3,21,3,0)
empty, then "Another " will be used.
"^DD",101.41,101.412,7.3,"DT")
2970618
"^DD",101.41,101.412,8,0)
ASK ON EDIT ONLY^S^1:YES;0:NO;^0;8^Q
"^DD",101.41,101.412,8,3)
Enter YES if this prompt should not be asked initially when creating this order, only if the user chooses to edit the order.
"^DD",101.41,101.412,8,21,0)
^^4^4^2960112^^^
"^DD",101.41,101.412,8,21,1,0)
This field determines the behaviour of the dialog driver for this prompt;
"^DD",101.41,101.412,8,21,2,0)
if no value or the defined default is usually correct for this prompt,
"^DD",101.41,101.412,8,21,3,0)
enter YES here to have this prompt skipped on the first pass through this
"^DD",101.41,101.412,8,21,4,0)
dialog when creating an order.
"^DD",101.41,101.412,8,"DT")
2950407
"^DD",101.41,101.412,9,0)
ASK ON ACTION^F^^0;9^K:$L(X)>3!($L(X)<1) X
"^DD",101.41,101.412,9,3)
Answer must be 1-3 characters in length.
"^DD",101.41,101.412,9,21,0)
^^6^6^2970708^^^
"^DD",101.41,101.412,9,21,1,0)
This field determines the behaviour of the dialog driver for this prompt
"^DD",101.41,101.412,9,21,2,0)
when taking a particular action on an order created by this dialog.  If
"^DD",101.41,101.412,9,21,3,0)
this string contains "R", this prompt will be asked when renewing an order;
"^DD",101.41,101.412,9,21,4,0)
if this string contains "C", this prompt will be asked when changing an
"^DD",101.41,101.412,9,21,5,0)
order; if this string contains "W", this prompt will be asked when
"^DD",101.41,101.412,9,21,6,0)
rewriting an order.
"^DD",101.41,101.412,9,"DT")
2970708
"^DD",101.41,101.412,10,0)
INDEX^F^^0;10^K:$L(X)>25!($L(X)<1) X
"^DD",101.41,101.412,10,3)
Answer must be 1-25 characters in length.
"^DD",101.41,101.412,10,21,0)
^^3^3^2950713^^^
"^DD",101.41,101.412,10,21,1,0)
For pointer-type prompts, this is the index to use when searching the file;
"^DD",101.41,101.412,10,21,2,0)
it must be in the form of a regular cross-reference.  To search on multiple
"^DD",101.41,101.412,10,21,3,0)
indices, enter a string of index names separated by semi-colons, i.e. "B;C".
"^DD",101.41,101.412,10,"DT")
2950713
"^DD",101.41,101.412,11,0)
HELP MESSAGE^F^^1;1^K:$L(X)>160!($L(X)<1) X
"^DD",101.41,101.412,11,3)
Answer must be 1-160 characters in length.
"^DD",101.41,101.412,11,21,0)
^^2^2^2970609^^
"^DD",101.41,101.412,11,21,1,0)
This field contains the help message to be presented when the user enters
"^DD",101.41,101.412,11,21,2,0)
a question mark at this prompt.
"^DD",101.41,101.412,11,"DT")
2970609
"^DD",101.41,101.412,12,0)
SPECIAL LOOKUP ROUTINE^F^^1;2^K:$L(X)>20!($L(X)<3) X
"^DD",101.41,101.412,12,3)
Enter the routine to use instead of DIC to do this lookup, as [TAG;]ROUTINE
"^DD",101.41,101.412,12,21,0)
^^3^3^2970609^
"^DD",101.41,101.412,12,21,1,0)
This field contains a routine to execute that will replace the standard
"^DD",101.41,101.412,12,21,2,0)
DIC lookup for this prompt; it must be entered here as LINETAG;ROUTINE
"^DD",101.41,101.412,12,21,3,0)
using a ; instead of ^ and where LINETAG is optional.
"^DD",101.41,101.412,12,"DT")
2970609
"^DD",101.41,101.412,13,0)
ASK ON CONDITION^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,13,3)
This is MUMPS code that sets $T to determine if this prompt should be asked, or given a default value and bypassed.
"^DD",101.41,101.412,13,9)
@
"^DD",101.41,101.412,13,21,0)
^^5^5^2950407^
"^DD",101.41,101.412,13,21,1,0)
This is MUMPS code that sets $T to determine if this prompt should be asked
"^DD",101.41,101.412,13,21,2,0)
or simply given a default value and presented to the user for acceptance
"^DD",101.41,101.412,13,21,3,0)
or editing.  For example, the prompt "Pregnant: " may have code here to
"^DD",101.41,101.412,13,21,4,0)
check the sex of the current patient, i.e. I ORSEX="F" will allow it to be
"^DD",101.41,101.412,13,21,5,0)
asked only for female patients.
"^DD",101.41,101.412,13,"DT")
2950407
"^DD",101.41,101.412,14,0)
SCREEN^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,14,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,14,9)
@
"^DD",101.41,101.412,14,21,0)
^^2^2^2950407^
"^DD",101.41,101.412,14,21,1,0)
For pointer-type prompts, this field may contain MUMPS code that will be
"^DD",101.41,101.412,14,21,2,0)
set into DIC("S") to screen the possible choices in the pointed-to file.
"^DD",101.41,101.412,14,"DT")
2950407
"^DD",101.41,101.412,15,0)
POST-SELECTION ACTION^K^^5;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,15,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,15,9)
@
"^DD",101.41,101.412,15,21,0)
^^3^3^2970923^^^^
"^DD",101.41,101.412,15,21,1,0)
This is code that will be executed after a response is entered to this
"^DD",101.41,101.412,15,21,2,0)
prompt; if this prompt should be re-asked, kill the variable DONE.
"^DD",101.41,101.412,15,21,3,0)
If execution of the ordering dialog should be stopped, set ORQUIT=1.
"^DD",101.41,101.412,15,"DT")
2970923
"^DD",101.41,101.412,16,0)
XECUTABLE HELP^K^^6;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,16,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,16,9)
@
"^DD",101.41,101.412,16,21,0)
^^2^2^2950407^
"^DD",101.41,101.412,16,21,1,0)
This is code that is to be executed when the user enters two or more
"^DD",101.41,101.412,16,21,2,0)
question marks at this prompt.
"^DD",101.41,101.412,16,"DT")
2950407
"^DD",101.41,101.412,17,0)
DEFAULT^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,17,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,17,9)
@
"^DD",101.41,101.412,17,21,0)
^^2^2^2971219^^^^
"^DD",101.41,101.412,17,21,1,0)
This is code that is to be executed to determine the appropriate default
"^DD",101.41,101.412,17,21,2,0)
value for this prompt, setting Y=internal form of this value.
"^DD",101.41,101.412,17,"DT")
2950519
"^DD",101.41,101.412,18,0)
DEFAULT WORD-PROCESSING TEXT^101.41218^^8;0
"^DD",101.41,101.412,18,21,0)
^^1^1^2971219^
"^DD",101.41,101.412,18,21,1,0)
This is default text to be stuffed into this word-processing prompt.
"^DD",101.41,101.412,19,0)
ENTRY ACTION^K^^9;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,19,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,19,9)
@
"^DD",101.41,101.412,19,21,0)
^^3^3^2970609^
"^DD",101.41,101.412,19,21,1,0)
This is code that will be executed at the beginning of the processing of
"^DD",101.41,101.412,19,21,2,0)
this prompt, before the Default and Ask on Condition fields are executed;
"^DD",101.41,101.412,19,21,3,0)
any special setup required for this field should be done here.
"^DD",101.41,101.412,19,"DT")
2970609
"^DD",101.41,101.412,20,0)
EXIT ACTION^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,20,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,20,9)
@
"^DD",101.41,101.412,20,21,0)
^^3^3^2970609^
"^DD",101.41,101.412,20,21,1,0)
This is code that will be executed at the very end of the processing of
"^DD",101.41,101.412,20,21,2,0)
this prompt, after prompting and the Validation field is executed;
"^DD",101.41,101.412,20,21,3,0)
any special cleanup should be done here.
"^DD",101.41,101.412,20,"DT")
2970609
"^DD",101.41,101.412,21,0)
ORDER TEXT SEQUENCE^NJ5,2^^2;1^K:+X'=X!(X>99.99)!(X<1)!(X?.E1"."3N.N) X
"^DD",101.41,101.412,21,1,0)
^.1
"^DD",101.41,101.412,21,1,1,0)
101.412^ATXT
"^DD",101.41,101.412,21,1,1,1)
S ^ORD(101.41,DA(1),10,"ATXT",$E(X,1,30),DA)=""
"^DD",101.41,101.412,21,1,1,2)
K ^ORD(101.41,DA(1),10,"ATXT",$E(X,1,30),DA)
"^DD",101.41,101.412,21,1,1,"%D",0)
^^1^1^2960226^
"^DD",101.41,101.412,21,1,1,"%D",1,0)
Used to build order text.
"^DD",101.41,101.412,21,1,1,"DT")
2960226
"^DD",101.41,101.412,21,3)
Enter the order in which this value should be added to the order text, as a number between 1 and 99.99; leave this field blank to prevent this value from being included
"^DD",101.41,101.412,21,21,0)
^^3^3^2970607^^^
"^DD",101.41,101.412,21,21,1,0)
This field indicates the order in which values will be concatenated
"^DD",101.41,101.412,21,21,2,0)
together to build the order text; this may differ from the prompting
"^DD",101.41,101.412,21,21,3,0)
order defined in the .01 Sequence field.
"^DD",101.41,101.412,21,"DT")
2960226
"^DD",101.41,101.412,22,0)
FORMAT^F^^2;2^K:$L(X)>10!($L(X)<1) X
"^DD",101.41,101.412,22,3)
Answer must be 1-10 characters in length.
"^DD",101.41,101.412,22,21,0)
^^15^15^2971207^^^^
"^DD",101.41,101.412,22,21,1,0)
This is a string of characters that will define any exceptions to how
"^DD",101.41,101.412,22,21,2,0)
the external form of this value is generated.  Possible values include:
"^DD",101.41,101.412,22,21,3,0)
  Pointer         -> <field #>~<piece in RPC list of field #>, default =.01
"^DD",101.41,101.412,22,21,4,0)
  Set of Codes    -> 1~<piece in RPC list of code> to use code for name
"^DD",101.41,101.412,22,21,5,0)
  Date/Time       -> Format string to pass $$FMTE^XLFDT (default = 2)
"^DD",101.41,101.412,22,21,6,0)
  
"^DD",101.41,101.412,22,21,7,0)
  Suppress value  -> @
"^DD",101.41,101.412,22,21,8,0)
  Replace value   -> @<ptr> where ptr is the Dialog IEN of the prompt
"^DD",101.41,101.412,22,21,9,0)
                      whose value, when present, supersedes this value
"^DD",101.41,101.412,22,21,10,0)
  Required value  -> *<ptr> where ptr is the Dialog IEN of the prompt
"^DD",101.41,101.412,22,21,11,0)
                      whose value is required to be present to include
"^DD",101.41,101.412,22,21,12,0)
                      this value
"^DD",101.41,101.412,22,21,13,0)
  Ignore if same  -> =<ptr> where ptr is the Dialog IEN of the prompt
"^DD",101.41,101.412,22,21,14,0)
                      whose value, if the external form is the same,
"^DD",101.41,101.412,22,21,15,0)
                      supersedes this value
"^DD",101.41,101.412,22,"DT")
2960226
"^DD",101.41,101.412,23,0)
OMIT TEXT^F^^2;3^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,23,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,23,21,0)
^^3^3^2970829^^^^
"^DD",101.41,101.412,23,21,1,0)
This is the external form of a value that is not to be included when building
"^DD",101.41,101.412,23,21,2,0)
the order text.  E.g. to include the urgency in the order text unless it
"^DD",101.41,101.412,23,21,3,0)
is routine, enter "ROUTINE" here.
"^DD",101.41,101.412,23,"DT")
2970829
"^DD",101.41,101.412,24,0)
LEADING TEXT^F^^2;4^K:$L(X)>80!($L(X)<1) X
"^DD",101.41,101.412,24,3)
Answer must be 1-80 characters in length.
"^DD",101.41,101.412,24,21,0)
^^3^3^2970724^^^^
"^DD",101.41,101.412,24,21,1,0)
This field contains text that will be appended to the order text
"^DD",101.41,101.412,24,21,2,0)
immediately in front of this value, e.g. "Instructions:".  If this text
"^DD",101.41,101.412,24,21,3,0)
is contained in a variable, enter @NAME where NAME is the variable name.
"^DD",101.41,101.412,24,"DT")
2970724
"^DD",101.41,101.412,25,0)
TRAILING TEXT^F^^2;5^K:$L(X)>80!($L(X)<1) X
"^DD",101.41,101.412,25,3)
Answer must be 1-80 characters in length.
"^DD",101.41,101.412,25,21,0)
^^3^3^2970724^^^^
"^DD",101.41,101.412,25,21,1,0)
This field contains text that will be appended to the order text
"^DD",101.41,101.412,25,21,2,0)
immediately following this value, e.g. "refills".  If this text is
"^DD",101.41,101.412,25,21,3,0)
contained in a variable, enter @NAME where NAME is the variable name.
"^DD",101.41,101.412,25,"DT")
2970724
"^DD",101.41,101.412,26,0)
START NEW LINE^S^1:YES;0:NO;^2;6^Q
"^DD",101.41,101.412,26,3)
Enter YES if this value should begin on a new line in the order text.
"^DD",101.41,101.412,26,21,0)
0^^2^2^2970911^
"^DD",101.41,101.412,26,21,1,0)
This field determines if this value is concatenated onto the current line
"^DD",101.41,101.412,26,21,2,0)
when building the order text, or if a new line is started with this value.
"^DD",101.41,101.412,26,"DT")
2970911
"^DD",101.41,101.412,27,0)
WORD-WRAP^S^1:DON'T WRAP;0:WRAP;^2;7^Q
"^DD",101.41,101.412,27,3)
Enter 'Don't Wrap' to have the text be added line-by-line as it is stored; the default formatting is 'Wrap'.
"^DD",101.41,101.412,27,21,0)
^^3^3^2970926^^^
"^DD",101.41,101.412,27,21,1,0)
This field determines if this text should be wrapped when added to the
"^DD",101.41,101.412,27,21,2,0)
order text, or appended line by line as stored in the file; this is only
"^DD",101.41,101.412,27,21,3,0)
used for word-processing type prompts.
"^DD",101.41,101.412,27,"DT")
2970926
"^DD",101.41,101.412,101,0)
WINDOWS CONTROL^F^^W;1^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,101,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,101,21,0)
^^2^2^2950715^
"^DD",101.41,101.412,101,21,1,0)
Stores the type of Windows control necessary to get the data for this
"^DD",101.41,101.412,101,21,2,0)
prompt.
"^DD",101.41,101.412,101,"DT")
2960517
"^DD",101.41,101.412,102,0)
API NAME^F^^W;2^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,102,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,102,21,0)
^^3^3^2950715^
"^DD",101.41,101.412,102,21,1,0)
This is the API that should be called when the control is used.  How the API
"^DD",101.41,101.412,102,21,2,0)
is used varys with the control.  Examples are: filling list boxes, getting
"^DD",101.41,101.412,102,21,3,0)
boilerplate text, etc.
"^DD",101.41,101.412,102,"DT")
2951002
"^DD",101.41,101.412,103,0)
API PARAMETER #1^F^^W;3^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,103,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,103,21,0)
^^1^1^2950715^
"^DD",101.41,101.412,103,21,1,0)
A parameter that is used by the API call may be stored here.
"^DD",101.41,101.412,103,"DT")
2950715
"^DD",101.41,101.412,113,0)
WINDOWS CONDITION^K^^W3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,113,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,113,9)
@
"^DD",101.41,101.412,113,21,0)
^^3^3^2950715^
"^DD",101.41,101.412,113,21,1,0)
This is silent code that is executed when building the dialog for windows.
"^DD",101.41,101.412,113,21,2,0)
It identifies which prompts should be included in the dialog.  The condition
"^DD",101.41,101.412,113,21,3,0)
should leave $T false if the prompt should not be asked.
"^DD",101.41,101.412,113,"DT")
2950715
"^DD",101.41,101.412,117,0)
WINDOWS DEFAULT^K^^W7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,117,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,117,9)
@
"^DD",101.41,101.412,117,21,0)
^^2^2^2950715^
"^DD",101.41,101.412,117,21,1,0)
This code should silently set the default value of a prompt when it is 
"^DD",101.41,101.412,117,21,2,0)
selected.
"^DD",101.41,101.412,117,"DT")
2950715
"^DD",101.41,101.41218,0)
DEFAULT WORD-PROCESSING TEXT SUB-FIELD^^.01^1
"^DD",101.41,101.41218,0,"DT")
2950407
"^DD",101.41,101.41218,0,"NM","DEFAULT WORD-PROCESSING TEXT")

"^DD",101.41,101.41218,0,"UP")
101.412
"^DD",101.41,101.41218,.01,0)
DEFAULT WORD-PROCESSING TEXT^W^^0;1^Q
"^DD",101.41,101.41218,.01,3)
Enter the default response for a word-processing type prompt.
"^DD",101.41,101.41218,.01,21,0)
^^2^2^2950407^
"^DD",101.41,101.41218,.01,21,1,0)
This field contains the text to be presented as the default for this prompt,
"^DD",101.41,101.41218,.01,21,2,0)
for word-processing type prompts.
"^DD",101.41,101.41218,.01,"DT")
2950407
"^DD",101.41,101.415,0)
CONTROLS SUB-FIELD^^14^14
"^DD",101.41,101.415,0,"DT")
2960202
"^DD",101.41,101.415,0,"IX","AC",101.415,3)

"^DD",101.41,101.415,0,"IX","B",101.415,.01)

"^DD",101.41,101.415,0,"NM","CONTROLS")

"^DD",101.41,101.415,0,"UP")
101.41
"^DD",101.41,101.415,.01,0)
LOGICAL NAME^MF^^0;1^K:$L(X)>8!($L(X)<1)!'(X?1.8U) X
"^DD",101.41,101.415,.01,1,0)
^.1
"^DD",101.41,101.415,.01,1,1,0)
101.415^B
"^DD",101.41,101.415,.01,1,1,1)
S ^ORD(101.41,DA(1),50,"B",$E(X,1,30),DA)=""
"^DD",101.41,101.415,.01,1,1,2)
K ^ORD(101.41,DA(1),50,"B",$E(X,1,30),DA)
"^DD",101.41,101.415,.01,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,.01,21,0)
^^1^1^2960202^
"^DD",101.41,101.415,.01,21,1,0)
This is the name by which controls can refer to each other.
"^DD",101.41,101.415,.01,"DT")
2960202
"^DD",101.41,101.415,2,0)
ITEM^P101.41'^ORD(101.41,^0;2^Q
"^DD",101.41,101.415,2,"DT")
2960202
"^DD",101.41,101.415,3,0)
CREATE SEQUENCE^NJ2,0^^0;3^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.415,3,1,0)
^.1
"^DD",101.41,101.415,3,1,1,0)
101.415^AC
"^DD",101.41,101.415,3,1,1,1)
S ^ORD(101.41,DA(1),50,"AC",$E(X,1,30),DA)=""
"^DD",101.41,101.415,3,1,1,2)
K ^ORD(101.41,DA(1),50,"AC",$E(X,1,30),DA)
"^DD",101.41,101.415,3,1,1,"%D",0)
^^2^2^2960202^
"^DD",101.41,101.415,3,1,1,"%D",1,0)
The 'AC' cross-reference puts in window controls in order by creation 
"^DD",101.41,101.415,3,1,1,"%D",2,0)
sequence.
"^DD",101.41,101.415,3,1,1,"DT")
2960202
"^DD",101.41,101.415,3,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",101.41,101.415,3,"DT")
2960202
"^DD",101.41,101.415,4,0)
CONTROL TYPE^S^0:Label;1:Button;2:Edit;3:Memo;4:ListBox;5:SimpleCombo;6:DropDownList;7:LongCombo;^0;4^Q
"^DD",101.41,101.415,4,"DT")
2960202
"^DD",101.41,101.415,5,0)
LABEL^F^^0;5^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.415,5,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.415,5,"DT")
2960202
"^DD",101.41,101.415,6,0)
BESIDE^F^^0;6^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,6,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,6,"DT")
2960202
"^DD",101.41,101.415,7,0)
BELOW^F^^0;7^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,7,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,7,"DT")
2960202
"^DD",101.41,101.415,8,0)
WIDTH^NJ6,4^^0;8^K:+X'=X!(X>1)!(X<0)!(X?.E1"."5N.N) X
"^DD",101.41,101.415,8,3)
Type a Number between 0 and 1, 4 Decimal Digits
"^DD",101.41,101.415,8,"DT")
2960202
"^DD",101.41,101.415,9,0)
LEFT CONTROL^F^^0;9^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,9,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,9,"DT")
2960202
"^DD",101.41,101.415,10,0)
RIGHT CONTROL^F^^0;10^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,10,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,10,"DT")
2960202
"^DD",101.41,101.415,11,0)
HEIGHT^NJ2,0^^0;11^K:+X'=X!(X>15)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.415,11,3)
Type a Number between 1 and 15, 0 Decimal Digits
"^DD",101.41,101.415,11,"DT")
2960202
"^DD",101.41,101.415,12,0)
UPPER CONTROL^F^^0;12^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,12,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,12,"DT")
2960202
"^DD",101.41,101.415,13,0)
LOWER CONTROL^F^^0;13^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,13,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,13,"DT")
2960202
"^DD",101.41,101.415,14,0)
TAB SEQUENCE^NJ2,0^^0;14^K:+X'=X!(X>89)!(X<0)!(X?.E1"."1N.N) X
"^DD",101.41,101.415,14,3)
Type a Number between 0 and 89, 0 Decimal Digits
"^DD",101.41,101.415,14,"DT")
2960202
"^DD",101.41,101.416,0)
RESPONSES SUB-FIELD^^2^5
"^DD",101.41,101.416,0,"DT")
2960717
"^DD",101.41,101.416,0,"IX","D",101.416,.02)

"^DD",101.41,101.416,0,"NM","RESPONSES")

"^DD",101.41,101.416,0,"UP")
101.41
"^DD",101.41,101.416,.01,0)
ITEM ENTRY^MNJ7,0^^0;1^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.416,.01,1,0)
^.1^^0
"^DD",101.41,101.416,.01,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",101.41,101.416,.01,21,0)
^^2^2^2971219^^^
"^DD",101.41,101.416,.01,21,1,0)
This is the internal entry number of the prompt in the Item multiple
"^DD",101.41,101.416,.01,21,2,0)
by which this response was obtained.
"^DD",101.41,101.416,.01,"DT")
2961118
"^DD",101.41,101.416,.02,0)
DIALOG^P101.41'^ORD(101.41,^0;2^Q
"^DD",101.41,101.416,.02,1,0)
^.1
"^DD",101.41,101.416,.02,1,1,0)
101.416^D
"^DD",101.41,101.416,.02,1,1,1)
S ^ORD(101.41,DA(1),6,"D",$E(X,1,30),DA)=""
"^DD",101.41,101.416,.02,1,1,2)
K ^ORD(101.41,DA(1),6,"D",$E(X,1,30),DA)
"^DD",101.41,101.416,.02,1,1,"DT")
2961118
"^DD",101.41,101.416,.02,3)
Select the dialog prompt from which this response was generated.
"^DD",101.41,101.416,.02,21,0)
^^2^2^2960717^
"^DD",101.41,101.416,.02,21,1,0)
This is a pointer to the dialog prompt, which is in the Order Dialog file
"^DD",101.41,101.416,.02,21,2,0)
as type prompt.
"^DD",101.41,101.416,.02,"DT")
2961118
"^DD",101.41,101.416,.03,0)
INSTANCE^NJ7,0^^0;3^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.416,.03,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",101.41,101.416,.03,21,0)
^^2^2^2960717^
"^DD",101.41,101.416,.03,21,1,0)
In the case of multiple answers for the same item, this identifies the
"^DD",101.41,101.416,.03,21,2,0)
individual instance.
"^DD",101.41,101.416,.03,"DT")
2960717
"^DD",101.41,101.416,1,0)
VALUE^FO^^1;1^K:$L(X)>245!($L(X)<1) X
"^DD",101.41,101.416,1,2)
S Y(0)=Y S Y=$$OUTPUT^ORCMEDT5(Y)
"^DD",101.41,101.416,1,2.1)
S Y=$$OUTPUT^ORCMEDT5(Y)
"^DD",101.41,101.416,1,3)
Answer must be 1-245 characters in length.
"^DD",101.41,101.416,1,21,0)
^^2^2^2971219^^
"^DD",101.41,101.416,1,21,1,0)
This contains the actual response, unless the value is a word processing
"^DD",101.41,101.416,1,21,2,0)
type.
"^DD",101.41,101.416,1,"DT")
2980717
"^DD",101.41,101.416,2,0)
TEXT^101.4162^^2;0
"^DD",101.41,101.416,2,21,0)
^^1^1^2971219^
"^DD",101.41,101.416,2,21,1,0)
This contains the actual response, for word-processing type prompts.
"^DD",101.41,101.416,2,"DT")
2960717
"^DD",101.41,101.4162,0)
TEXT SUB-FIELD^^.01^1
"^DD",101.41,101.4162,0,"DT")
2960717
"^DD",101.41,101.4162,0,"NM","TEXT")

"^DD",101.41,101.4162,0,"UP")
101.416
"^DD",101.41,101.4162,.01,0)
TEXT^WL^^0;1^Q
"^DD",101.41,101.4162,.01,21,0)
^^1^1^2960717^^
"^DD",101.41,101.4162,.01,21,1,0)
This contains responses to items that are a word processing type.
"^DD",101.41,101.4162,.01,"DT")
2960717
"^DIC",101.41,101.41,0)
ORDER DIALOG^101.41
"^DIC",101.41,101.41,0,"GL")
^ORD(101.41,
"^DIC",101.41,101.41,"%D",0)
^^2^2^2960819^^
"^DIC",101.41,101.41,"%D",1,0)
This file contains the information needed to define how to prompt for each
"^DIC",101.41,101.41,"%D",2,0)
order, what values are acceptable, etc.
"^DIC",101.41,"B","ORDER DIALOG",101.41)

"BLD",9661,6)
^431
**END**
**END**

