Released OR*3*394 SEQ #344
Extracted from mail message
**KIDS**:OR*3.0*394^

**INSTALL NAME**
OR*3.0*394
"BLD",9640,0)
OR*3.0*394^ORDER ENTRY/RESULTS REPORTING^0^3140501^y
"BLD",9640,4,0)
^9.64PA^^
"BLD",9640,6.3)
5
"BLD",9640,"ABPKG")
n
"BLD",9640,"KRN",0)
^9.67PA^779.2^20
"BLD",9640,"KRN",.4,0)
.4
"BLD",9640,"KRN",.401,0)
.401
"BLD",9640,"KRN",.402,0)
.402
"BLD",9640,"KRN",.403,0)
.403
"BLD",9640,"KRN",.5,0)
.5
"BLD",9640,"KRN",.84,0)
.84
"BLD",9640,"KRN",3.6,0)
3.6
"BLD",9640,"KRN",3.8,0)
3.8
"BLD",9640,"KRN",9.2,0)
9.2
"BLD",9640,"KRN",9.8,0)
9.8
"BLD",9640,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",9640,"KRN",9.8,"NM",1,0)
ORCSEND1^^0^B66241171
"BLD",9640,"KRN",9.8,"NM",2,0)
ORWDXM4^^0^B41799270
"BLD",9640,"KRN",9.8,"NM",3,0)
ORWU1^^0^B51918555
"BLD",9640,"KRN",9.8,"NM","B","ORCSEND1",1)

"BLD",9640,"KRN",9.8,"NM","B","ORWDXM4",2)

"BLD",9640,"KRN",9.8,"NM","B","ORWU1",3)

"BLD",9640,"KRN",19,0)
19
"BLD",9640,"KRN",19.1,0)
19.1
"BLD",9640,"KRN",101,0)
101
"BLD",9640,"KRN",409.61,0)
409.61
"BLD",9640,"KRN",771,0)
771
"BLD",9640,"KRN",779.2,0)
779.2
"BLD",9640,"KRN",870,0)
870
"BLD",9640,"KRN",8989.51,0)
8989.51
"BLD",9640,"KRN",8989.52,0)
8989.52
"BLD",9640,"KRN",8994,0)
8994
"BLD",9640,"KRN","B",.4,.4)

"BLD",9640,"KRN","B",.401,.401)

"BLD",9640,"KRN","B",.402,.402)

"BLD",9640,"KRN","B",.403,.403)

"BLD",9640,"KRN","B",.5,.5)

"BLD",9640,"KRN","B",.84,.84)

"BLD",9640,"KRN","B",3.6,3.6)

"BLD",9640,"KRN","B",3.8,3.8)

"BLD",9640,"KRN","B",9.2,9.2)

"BLD",9640,"KRN","B",9.8,9.8)

"BLD",9640,"KRN","B",19,19)

"BLD",9640,"KRN","B",19.1,19.1)

"BLD",9640,"KRN","B",101,101)

"BLD",9640,"KRN","B",409.61,409.61)

"BLD",9640,"KRN","B",771,771)

"BLD",9640,"KRN","B",779.2,779.2)

"BLD",9640,"KRN","B",870,870)

"BLD",9640,"KRN","B",8989.51,8989.51)

"BLD",9640,"KRN","B",8989.52,8989.52)

"BLD",9640,"KRN","B",8994,8994)

"BLD",9640,"QUES",0)
^9.62^^
"BLD",9640,"REQB",0)
^9.611^2^2
"BLD",9640,"REQB",1,0)
OR*3.0*280^1
"BLD",9640,"REQB",2,0)
OR*3.0*323^1
"BLD",9640,"REQB","B","OR*3.0*280",1)

"BLD",9640,"REQB","B","OR*3.0*323",2)

"MBREQ")
0
"PKG",174,-1)
1^1
"PKG",174,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",174,20,0)
^9.402P^^
"PKG",174,22,0)
^9.49I^1^1
"PKG",174,22,1,0)
3.0^2971217^2990325^66481
"PKG",174,22,1,"PAH",1,0)
394^3140501
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","ORCSEND1")
0^1^B66241171^B65475435
"RTN","ORCSEND1",1,0)
ORCSEND1 ;SLC/MKB-Release cont ; 12/8/10 10:17am
"RTN","ORCSEND1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**4,29,45,61,79,94,116,138,158,149,187,215,243,282,323,394**;Dec 17, 1997;Build 5
"RTN","ORCSEND1",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ORCSEND1",4,0)
 ;
"RTN","ORCSEND1",5,0)
 ;Reference to PSJEEU supported by IA #486
"RTN","ORCSEND1",6,0)
 ;Reference to PSJORPOE supported by IA #3167
"RTN","ORCSEND1",7,0)
 ;
"RTN","ORCSEND1",8,0)
PKGSTUFF(PKG) ; Package code
"RTN","ORCSEND1",9,0)
 S PKG=$$GET1^DIQ(9.4,+PKG_",",1) Q:'$L(PKG)
"RTN","ORCSEND1",10,0)
 D:$L($T(@PKG)) @PKG
"RTN","ORCSEND1",11,0)
 Q
"RTN","ORCSEND1",12,0)
LR ; Spawn child orders if continuous schedule
"RTN","ORCSEND1",13,0)
 N ORSTRT,ORPARENT,OR0,ORNP,ORDIALOG,ORL,ORX,ORTIME,ORPITEM,ORPSAMP,ORPSPEC,ORPURG,ORPCOMM,ORPTYPE,ORPCOLL,ORS1,ORS2,P,ORCHLD,ORDG,ORLAST,ORDUZ,ORLOG,ORCOLLCT,STS
"RTN","ORCSEND1",14,0)
 S ORPARENT=+ORIFN,OR0=$G(^OR(100,ORIFN,0)),ORL=$P(OR0,U,10)
"RTN","ORCSEND1",15,0)
 D SCHEDULE(ORIFN,"LR",.ORSTRT) I ORSTRT'>1 D  Q
"RTN","ORCSEND1",16,0)
 . N START S START=$O(ORSTRT(0)) Q:START=$P($G(^OR(100,+ORIFN,0)),U,8)
"RTN","ORCSEND1",17,0)
 . D DATES^ORCSAVE2(+ORIFN,START) ;update start date from schedule
"RTN","ORCSEND1",18,0)
 S ORNP=+$P(OR0,U,4),ORDIALOG=+$P(OR0,U,5),ORDUZ=+$P(OR0,U,6),ORLOG=$P(OR0,U,7),ORDG=+$P(OR0,U,11)
"RTN","ORCSEND1",19,0)
 D GETDLG1^ORCD(ORDIALOG),GETORDER(ORIFN),GETIMES^ORCDLR1
"RTN","ORCSEND1",20,0)
 K ORDIALOG($$PTR^ORCD("OR GTX ADMIN SCHEDULE"),1),ORDIALOG($$PTR^ORCD("OR GTX DURATION"),1)
"RTN","ORCSEND1",21,0)
 S ORPITEM=$$PTR^ORCD("OR GTX ORDERABLE ITEM")
"RTN","ORCSEND1",22,0)
 S ORPSAMP=$$PTR^ORCD("OR GTX COLLECTION SAMPLE")
"RTN","ORCSEND1",23,0)
 S ORPSPEC=$$PTR^ORCD("OR GTX SPECIMEN")
"RTN","ORCSEND1",24,0)
 S ORPURG=$$PTR^ORCD("OR GTX LAB URGENCY")
"RTN","ORCSEND1",25,0)
 S ORPCOMM=$$PTR^ORCD("OR GTX WORD PROCESSING 1")
"RTN","ORCSEND1",26,0)
 S ORPTYPE=$$PTR^ORCD("OR GTX COLLECTION TYPE")
"RTN","ORCSEND1",27,0)
 S ORPCOLL=$$PTR^ORCD("OR GTX START DATE/TIME")
"RTN","ORCSEND1",28,0)
LR1 N ORLASTC  S ORS1=0 F  S ORS1=$O(ORX(ORS1)) Q:ORS1'>0  D
"RTN","ORCSEND1",29,0)
 . N ORL S ORL=$P(OR0,U,10) ;protect ORL from calling routine ;DJE/VM *323
"RTN","ORCSEND1",30,0)
 . F P=ORPITEM,ORPSAMP,ORPSPEC,ORPURG,ORPCOMM,ORPTYPE S ORDIALOG(P,1)=$G(ORX(ORS1,P)) ;set values to next instance
"RTN","ORCSEND1",31,0)
 . S ORCOLLCT=$G(ORDIALOG(ORPTYPE,1))
"RTN","ORCSEND1",32,0)
 . S ORS2=0 F  S ORS2=$O(ORSTRT(ORS2)) Q:ORS2'>0  D
"RTN","ORCSEND1",33,0)
 .. S ORDIALOG(ORPCOLL,1)=ORS2 ;,ORDUZ=DUZ,ORLOG=+$E($$NOW^XLFDT,1,12)
"RTN","ORCSEND1",34,0)
 .. I ORCOLLCT="LC" S ORDIALOG(ORPTYPE,1)=$S($$LABCOLL^ORCDLR1(ORS2):"LC",1:"WC")
"RTN","ORCSEND1",35,0)
 .. I ORCOLLCT="I" S ORDIALOG(ORPTYPE,1)=$S($$IMMCOLL^ORCDLR1(ORS2):"I",1:"WC")
"RTN","ORCSEND1",36,0)
 .. D CHILD^ORCSEND3()
"RTN","ORCSEND1",37,0)
 .. S ORLASTC=$P(^OR(100,ORIFN,0),"^",8)
"RTN","ORCSEND1",38,0)
 . D DATES^ORCSAVE2(ORPARENT,,ORLASTC) S:$G(NATURE)'="V" $P(^OR(100,ORPARENT,3),"^",8)=1 ;p394 exclude parent verbal order from veiling
"RTN","ORCSEND1",39,0)
 S:$G(ORCHLD) ^OR(100,ORPARENT,2,0)="^100.002PA^"_ORLAST_U_ORCHLD
"RTN","ORCSEND1",40,0)
 S ORIFN=ORPARENT,ORQUIT=1,STS=$P(^OR(100,ORIFN,3),U,3)
"RTN","ORCSEND1",41,0)
 I (STS=1)!(STS=13)!(STS=11) S ORERR="1^Unable to release orders"
"RTN","ORCSEND1",42,0)
 D RELEASE^ORCSAVE2(ORPARENT,1,ORNOW,DUZ,$G(NATURE))
"RTN","ORCSEND1",43,0)
 Q
"RTN","ORCSEND1",44,0)
SCHEDULE(IFN,PKG,ORY,STRT) ; Returns list of start time(s) from schedule
"RTN","ORCSEND1",45,0)
 N I,X,PSJSD,PSJFD,PSJW,PSJNE,PSJPP,PSJX,PSJAT,PSJM,PSJTS,PSJY,PSJAX,PSJSCH,PSJOSD,PSJOFD,PSJC,ORDUR
"RTN","ORCSEND1",46,0)
 S PSJSD=$S(+$G(STRT):STRT,1:$P($G(^OR(100,+IFN,0)),U,8)) I 'PSJSD S ORY=-1 Q
"RTN","ORCSEND1",47,0)
 S ORY=1,ORY(PSJSD)="" ;1st occurrance
"RTN","ORCSEND1",48,0)
 S I=$O(^OR(100,+IFN,4.5,"ID","SCHEDULE",0)) Q:'I  Q:'$L($G(PKG))
"RTN","ORCSEND1",49,0)
 S X=$G(^OR(100,+IFN,4.5,I,1)),PSJX=$S(X:$$GET1^DIQ(51.1,+X_",",.01),1:X)
"RTN","ORCSEND1",50,0)
 S PSJW=+$G(ORL),PSJNE="",PSJPP=PKG D ENSV^PSJEEU Q:'$L($G(PSJX))
"RTN","ORCSEND1",51,0)
 I $G(PSJTS)'="C",$G(PSJTS)'="D" Q  ;not continuous or day-of-week
"RTN","ORCSEND1",52,0)
 S PSJSCH=PSJX,I=$O(^OR(100,+IFN,4.5,"ID","DAYS",0)) Q:'I
"RTN","ORCSEND1",53,0)
 S ORDUR=$G(^OR(100,+IFN,4.5,+I,1))
"RTN","ORCSEND1",54,0)
 S:ORDUR PSJFD=$$FMADD^XLFDT(PSJSD,+ORDUR,,-1)
"RTN","ORCSEND1",55,0)
 I 'ORDUR S X=+$E(ORDUR,2,9) D
"RTN","ORCSEND1",56,0)
 . I PSJM S PSJFD=$$FMADD^XLFDT(PSJSD,,,(PSJM*X)-1) ;X_#times
"RTN","ORCSEND1",57,0)
 . E  D  ;no freq in minutes --> day of week
"RTN","ORCSEND1",58,0)
 .. N DAYS,LOCMX,SCHMX
"RTN","ORCSEND1",59,0)
 .. S LOCMX=$$GET^XPAR("ALL^LOC.`"_+ORL,"LR MAX DAYS CONTINUOUS",1,"Q")
"RTN","ORCSEND1",60,0)
 .. K ^TMP($J,"ORCSEND1 SCHEDULE")
"RTN","ORCSEND1",61,0)
 .. D ZERO^PSS51P1(PSJY,,,,"ORCSEND1 SCHEDULE")
"RTN","ORCSEND1",62,0)
 .. S SCHMX=+$G(^TMP($J,"ORCSEND1 SCHEDULE",PSJY,2.5))
"RTN","ORCSEND1",63,0)
 .. K ^TMP($J,"ORCSEND1 SCHEDULE")
"RTN","ORCSEND1",64,0)
 .. ;S SCHMX=$P(^PS(51.1,PSJY,0),U,7)
"RTN","ORCSEND1",65,0)
 .. S DAYS=$S('SCHMX:LOCMX,LOCMX<SCHMX:LOCMX,1:SCHMX)
"RTN","ORCSEND1",66,0)
 .. S PSJFD=$$FMADD^XLFDT(PSJSD,DAYS,,-1)
"RTN","ORCSEND1",67,0)
 D ENSPU^PSJEEU K ORY
"RTN","ORCSEND1",68,0)
 I ORDUR M ORY=PSJC Q
"RTN","ORCSEND1",69,0)
 S ORY=$S(PSJC<$E(ORDUR,2,9):PSJC,1:$E(ORDUR,2,9))
"RTN","ORCSEND1",70,0)
 N NXT
"RTN","ORCSEND1",71,0)
 S NXT=0 F I=1:1:ORY S NXT=$O(PSJC(NXT)) Q:'NXT  S ORY(NXT)=PSJC(NXT)
"RTN","ORCSEND1",72,0)
 Q
"RTN","ORCSEND1",73,0)
GETORDER(IFN) ; Set ORX(Inst,Ptr)=Value
"RTN","ORCSEND1",74,0)
 N I,X,Y,PTR,INST,TYPE
"RTN","ORCSEND1",75,0)
 S I=0 F  S I=$O(^OR(100,IFN,4.5,I)) Q:I'>0  S X=$G(^(I,0)),Y=$G(^(1)) D
"RTN","ORCSEND1",76,0)
 . S PTR=+$P(X,U,2),INST=+$P(X,U,3),TYPE=$P($G(^ORD(101.41,PTR,1)),U)
"RTN","ORCSEND1",77,0)
 . I TYPE'="W" S ORX(INST,PTR)=Y Q
"RTN","ORCSEND1",78,0)
 . S ORX(INST,PTR)="^OR(100,"_IFN_",4.5,"_I_",2)"
"RTN","ORCSEND1",79,0)
 Q
"RTN","ORCSEND1",80,0)
PTR(X) ; Returns ptr of prompt X in Order Dialog file
"RTN","ORCSEND1",81,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_X,1,63),0))
"RTN","ORCSEND1",82,0)
PS ; spawn child orders if multiple doses
"RTN","ORCSEND1",83,0)
PSJ ; (Inpt only)
"RTN","ORCSEND1",84,0)
PSS ;
"RTN","ORCSEND1",85,0)
 N ORPARENT,OR0,ORNP,ORDIALOG,ORDUZ,ORLOG,ORL,ORDG,ORCAT,ORX,ORP,ORI,STS
"RTN","ORCSEND1",86,0)
 N ORDOSE,ORT,ORSCH,ORDUR,ORSTRT,ORFRST,ORCONJ,ORID,ORDD,ORSTR,ORDGNM
"RTN","ORCSEND1",87,0)
 N ORSTART,ORCHLD,ORLAST,ORSIG,OROI,ID,OR3,ORIG,CODE,ORPKG,ORENEW,I,ORADMIN
"RTN","ORCSEND1",88,0)
 S ORPARENT=+ORIFN,OR0=$G(^OR(100,ORPARENT,0)),OR3=$G(^(3))
"RTN","ORCSEND1",89,0)
 Q:$P(OR0,U,12)'="I"  S ORCAT="I",ORNP=+$P(OR0,U,4)
"RTN","ORCSEND1",90,0)
 S ORDIALOG=+$P(OR0,U,5),ORDUZ=+$P(OR0,U,6),ORLOG=$P(OR0,U,7)
"RTN","ORCSEND1",91,0)
 S ORL=$P(OR0,U,10),ORDG=+$P(OR0,U,11),ORPKG=+$P(OR0,U,14)
"RTN","ORCSEND1",92,0)
 D GETDLG1^ORCD(ORDIALOG),GETORDER(ORPARENT)
"RTN","ORCSEND1",93,0)
 S ORDOSE=$$PTR("INSTRUCTIONS"),ORT=$$PTR("ROUTE")
"RTN","ORCSEND1",94,0)
 S ORSCH=$$PTR("SCHEDULE"),ORDUR=$$PTR("DURATION")
"RTN","ORCSEND1",95,0)
 S ORCONJ=$$PTR("AND/THEN") D STRT S ORSTART=$G(ORSTRT("BEG"))
"RTN","ORCSEND1",96,0)
 S ORADMIN=$$PTR("ADMIN TIMES")
"RTN","ORCSEND1",97,0)
 D DATES^ORCSAVE2(ORPARENT,ORSTART) Q:$$DOSES(ORPARENT)'>1
"RTN","ORCSEND1",98,0)
 S ORFRST=$$PTR("NOW"),ORSIG=$$PTR("SIG")
"RTN","ORCSEND1",99,0)
 S ORID=$$PTR("DOSE"),ORDD=$$PTR("DISPENSE DRUG")
"RTN","ORCSEND1",100,0)
 S ORSTR=$$PTR("STRENGTH"),ORDGNM=$$PTR("DRUG NAME")
"RTN","ORCSEND1",101,0)
 I $P(OR3,U,11)=2,$O(^OR(100,+$P(OR3,U,5),2,0)) D
"RTN","ORCSEND1",102,0)
 . S ORENEW=+$P(OR3,U,5),I=0
"RTN","ORCSEND1",103,0)
 . I $$VALUE^ORX8(ORENEW,"NOW") S I=$O(^OR(100,ORENEW,2,0))
"RTN","ORCSEND1",104,0)
 . F  S I=$O(^OR(100,ORENEW,2,I)) Q:I<1  S ORENEW(I)=""
"RTN","ORCSEND1",105,0)
PS1 F ORP="ORDERABLE ITEM","URGENCY","WORD PROCESSING 1" D
"RTN","ORCSEND1",106,0)
 . N PTR S PTR=$$PTR(ORP) Q:PTR'>0  Q:'$D(ORX(1,PTR))
"RTN","ORCSEND1",107,0)
 . S ORDIALOG(PTR,1)=ORX(1,PTR) S:$E(ORP)="O" OROI=ORX(1,PTR)
"RTN","ORCSEND1",108,0)
 S ORI=$$FRSTDOSE I $G(ORX(1,ORFRST)) D
"RTN","ORCSEND1",109,0)
 . F ORP=ORDOSE,ORT,ORID S:$D(ORX(ORI,ORP)) ORDIALOG(ORP,1)=ORX(ORI,ORP)
"RTN","ORCSEND1",110,0)
 . S ID=$G(ORX(ORI,ORID)) S:$P(ID,"&",6) ORDIALOG(ORDD,1)=$P(ID,"&",6)
"RTN","ORCSEND1",111,0)
 . S ORDIALOG(ORSCH,1)="NOW",ORSTART=$$NOW^XLFDT
"RTN","ORCSEND1",112,0)
 . D SIG,CHILD^ORCSEND3(ORSTART)
"RTN","ORCSEND1",113,0)
 F  D  S ORI=$O(ORX(ORI)) Q:ORI'>0
"RTN","ORCSEND1",114,0)
 . F ORP=ORDOSE,ORT,ORSCH,ORDUR,ORID,ORADMIN S:$D(ORX(ORI,ORP)) ORDIALOG(ORP,1)=ORX(ORI,ORP) K:'$D(ORX(ORI,ORP)) ORDIALOG(ORP,1)
"RTN","ORCSEND1",115,0)
 . K ORDIALOG(ORDD,1) S ID=$G(ORX(ORI,ORID))
"RTN","ORCSEND1",116,0)
 . S:$P(ID,"&",6) ORDIALOG(ORDD,1)=$P(ID,"&",6)
"RTN","ORCSEND1",117,0)
 . S ORSTART=$G(ORSTRT(ORI))
"RTN","ORCSEND1",118,0)
 . D SIG,CHILD^ORCSEND3(ORSTART)
"RTN","ORCSEND1",119,0)
 S:$G(ORCHLD) ^OR(100,ORPARENT,2,0)="^100.002PA^"_ORLAST_U_ORCHLD
"RTN","ORCSEND1",120,0)
 S ORIFN=ORPARENT,ORQUIT=1,OR3=$G(^OR(100,ORIFN,3)),STS=$P(OR3,U,3)
"RTN","ORCSEND1",121,0)
 I (STS=1)!(STS=13)!(STS=11) S ORERR="1^Unable to release orders"
"RTN","ORCSEND1",122,0)
 D RELEASE^ORCSAVE2(ORIFN,1,ORNOW,DUZ,$G(NATURE)) K ^TMP("ORWORD",$J)
"RTN","ORCSEND1",123,0)
 S $P(^OR(100,ORIFN,3),U,8)=1 ;veil parent order - set stop date/time?
"RTN","ORCSEND1",124,0)
 Q:(STS=1)!(STS=13)!(STS=11)  ;unsuccessful
"RTN","ORCSEND1",125,0)
PS2 ; ck if parent is unsigned or edit
"RTN","ORCSEND1",126,0)
 I $P($G(^OR(100,ORIFN,8,1,0)),U,4)=2 S $P(^(0),U,4)="" K ^OR(100,"AS",ORVP,9999999-ORLOG,ORIFN,1) ;clear ES
"RTN","ORCSEND1",127,0)
 Q:$P(OR3,U,11)'=1  S ORIG=$P(OR3,U,5) Q:ORIG'>0
"RTN","ORCSEND1",128,0)
 S CODE=$S($P($G(^OR(100,ORIG,3)),U,3)=5:"CA",1:"DC")
"RTN","ORCSEND1",129,0)
 D MSG^ORMBLD(ORIG,CODE) I "^1^13^"[(U_$P($G(^OR(100,ORIG,3)),U,3)_U) D
"RTN","ORCSEND1",130,0)
 . N NATR S NATR=+$O(^ORD(100.02,"C","C",0))
"RTN","ORCSEND1",131,0)
 . S $P(^OR(100,ORIG,3),U,3)=12,$P(^(3),U,7)=0,^(6)=NATR_U_DUZ_U_ORNOW
"RTN","ORCSEND1",132,0)
 . D CANCEL^ORCSEND(ORIG) ;ck for unrel actions
"RTN","ORCSEND1",133,0)
 Q
"RTN","ORCSEND1",134,0)
DOSES(IFN) ; count number of doses in order
"RTN","ORCSEND1",135,0)
 N I,CNT S CNT=0
"RTN","ORCSEND1",136,0)
 S I=0 F  S I=$O(^OR(100,+$G(IFN),4.5,"ID","INSTR",I)) Q:I'>0  I $L($G(^OR(100,+$G(IFN),4.5,I,1))) S CNT=CNT+1
"RTN","ORCSEND1",137,0)
 S I=+$O(^OR(100,+$G(IFN),4.5,"ID","NOW",0)) I I,$G(^OR(100,+$G(IFN),4.5,I,1)) S CNT=CNT+1
"RTN","ORCSEND1",138,0)
 Q CNT
"RTN","ORCSEND1",139,0)
FRSTDOSE() ; Return instance of first dose
"RTN","ORCSEND1",140,0)
 N I,Y S I=0,Y=1
"RTN","ORCSEND1",141,0)
 F  S I=$O(ORX(I)) Q:I'>0  I $D(ORX(I,ORDOSE)) S Y=I Q
"RTN","ORCSEND1",142,0)
 Q Y
"RTN","ORCSEND1",143,0)
SIG ; Build text of instructions
"RTN","ORCSEND1",144,0)
 N ORDRUG,ID,DOSE,ORI,ORX K ^TMP("ORWORD",$J,ORSIG,1)
"RTN","ORCSEND1",145,0)
 S ORDRUG=$G(ORDIALOG(ORDD,1)),ID=$G(ORDIALOG(ORID,1))
"RTN","ORCSEND1",146,0)
 S DOSE=$G(ORDIALOG(ORDOSE,1)),ORI=1
"RTN","ORCSEND1",147,0)
 S ORX=$$DOSE^ORCDPS2_$$RTE^ORCDPS2_$$SCH^ORCDPS2_$$DUR^ORCDPS2
"RTN","ORCSEND1",148,0)
 S ^TMP("ORWORD",$J,ORSIG,1,0)="^^1^1^"_DT_U,^(1,0)=ORX
"RTN","ORCSEND1",149,0)
 S ORDIALOG(ORSIG,1)=$NA(^TMP("ORWORD",$J,ORSIG,1))
"RTN","ORCSEND1",150,0)
 S ORDIALOG(ORDOSE,"FORMAT")="@"
"RTN","ORCSEND1",151,0)
 K ORDIALOG(ORSTR,1),ORDIALOG(ORDGNM,1)
"RTN","ORCSEND1",152,0)
 I ORDRUG,'ID D  ;set strength or drug name
"RTN","ORCSEND1",153,0)
 . N STR,ITM S STR=$P(ID,"&",7)_$P(ID,"&",8)
"RTN","ORCSEND1",154,0)
 . I STR'>0 S ORDIALOG(ORDGNM,1)=$$GET1^DIQ(50,+ORDRUG_",",.01) Q
"RTN","ORCSEND1",155,0)
 . S ITM=$P($G(^ORD(101.43,+$G(OROI),0)),U)
"RTN","ORCSEND1",156,0)
 . S:ITM'[STR ORDIALOG(ORSTR,1)=STR
"RTN","ORCSEND1",157,0)
 Q
"RTN","ORCSEND1",158,0)
STRT ; Build ORSTRT(inst)=date.time array of start times by dose
"RTN","ORCSEND1",159,0)
 N OI,PSOI,XD,XH,XM,XS,ORWD,ORI,SCH,ORSD,X,ORD K ORSTRT
"RTN","ORCSEND1",160,0)
 S OI=$G(ORX(1,$$PTR^ORCD("OR GTX ORDERABLE ITEM")))
"RTN","ORCSEND1",161,0)
 S PSOI=+$P($G(^ORD(101.43,+OI,0)),U,2),(XD,XH,XM,XS)=0
"RTN","ORCSEND1",162,0)
 S ORWD=+$G(^SC(+$G(ORL),42)) ;ward
"RTN","ORCSEND1",163,0)
 S ORI=0 F  S ORI=$O(ORX(ORI)) Q:ORI<1  D
"RTN","ORCSEND1",164,0)
 . S SCH=$G(ORX(ORI,ORSCH)),ORSD="" S:'$L(SCH) X=$$NOW^XLFDT
"RTN","ORCSEND1",165,0)
 . S:$L(SCH) ORSD=$$STARTSTP^PSJORPOE(+ORVP,SCH,PSOI,ORWD),X=$P(ORSD,U,4)
"RTN","ORCSEND1",166,0)
 . S ORSTRT(ORI)=$$FMADD^XLFDT(X,XD,XH,XM,XS) ;START+OFFSET
"RTN","ORCSEND1",167,0)
 . ; update OFFSET for next THEN dose
"RTN","ORCSEND1",168,0)
 . D DUR(ORI) I $G(ORX(ORI,ORCONJ))="T" D
"RTN","ORCSEND1",169,0)
 .. I $G(ORD("XD"))<1,$G(ORD("XH"))<1,$G(ORD("XM"))<1,$G(ORD("XS"))<1 S ORD("XD")=+$P(ORSD,U,3) ;default duration
"RTN","ORCSEND1",170,0)
 .. N I,Y F I="XD","XH","XM","XS" S Y=@I,@I=Y+$G(ORD(I))
"RTN","ORCSEND1",171,0)
 .. K ORD
"RTN","ORCSEND1",172,0)
 ; find beginning date.time for parent
"RTN","ORCSEND1",173,0)
 S ORI=0,X=9999999 F  S ORI=$O(ORSTRT(ORI)) Q:ORI<1  I ORSTRT(ORI)<X S X=ORSTRT(ORI)
"RTN","ORCSEND1",174,0)
 S ORSTRT("BEG")=X
"RTN","ORCSEND1",175,0)
 Q
"RTN","ORCSEND1",176,0)
DUR(I) ; Accumulate duration in ORD("Xt") for offsetting next THEN dose
"RTN","ORCSEND1",177,0)
 N X,Y S X=$$FMDUR^ORCDPS3($G(ORX(I,ORDUR)))
"RTN","ORCSEND1",178,0)
 I X["S",+X>$G(ORD("XS")) S ORD("XS")=+X
"RTN","ORCSEND1",179,0)
 I X["'",+X>$G(ORD("XM")) S ORD("XM")=+X
"RTN","ORCSEND1",180,0)
 I X["H",+X>$G(ORD("XH")) S ORD("XH")=+X
"RTN","ORCSEND1",181,0)
 S Y=$S(X["D":+X,X["W":+X*7,X["M":+X*30,1:0)
"RTN","ORCSEND1",182,0)
 I Y,Y>$G(ORD("XD")) S ORD("XD")=Y
"RTN","ORCSEND1",183,0)
 Q
"RTN","ORCSEND1",184,0)
VBEC ; Spawn VBECS children
"RTN","ORCSEND1",185,0)
 D:$L($T(EN^ORCSEND2)) EN^ORCSEND2
"RTN","ORCSEND1",186,0)
 Q
"RTN","ORWDXM4")
0^2^B41799270^B37881489
"RTN","ORWDXM4",1,0)
ORWDXM4 ; SLC/KCM - Order Dialogs, Menus;10:42 AM  6 Sep 1998
"RTN","ORWDXM4",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,215,296,280,394**;Dec 17, 1997;Build 5
"RTN","ORWDXM4",3,0)
 ;
"RTN","ORWDXM4",4,0)
SETUP ; -- setup dialog (continued from ORWDXM1)
"RTN","ORWDXM4",5,0)
 ;    if xfer med order, setup ORDIALOG differently
"RTN","ORWDXM4",6,0)
 I ORWMODE,$$ISMED(ORIT),$$CHGSTS(ORCAT,ORIT) D MEDXFER Q
"RTN","ORWDXM4",7,0)
 ;    get base dialog (based on display group) & location of responses
"RTN","ORWDXM4",8,0)
 I ORWMODE D
"RTN","ORWDXM4",9,0)
 . S ORDG=$P(^OR(100,+ORIT,0),U,11),ORDIALOG=+$P(^(0),U,5)
"RTN","ORWDXM4",10,0)
 . S RSPREF="^OR(100,"_+ORIT_",4.5)"
"RTN","ORWDXM4",11,0)
 E  D
"RTN","ORWDXM4",12,0)
 . N X0 S X0=$G(^ORD(101.41,ORIT,0))
"RTN","ORWDXM4",13,0)
 . S ORDIALOG=$S($P(X0,U,4)="D":ORIT,1:0)
"RTN","ORWDXM4",14,0)
 . S ORDG=$P(X0,U,5) Q:'ORDG
"RTN","ORWDXM4",15,0)
 . I 'ORDIALOG S ORDIALOG=+$$DEFDLG^ORWDXQ(ORDG)
"RTN","ORWDXM4",16,0)
 . S RSPREF="^ORD(101.41,"_ORIT_",6)"
"RTN","ORWDXM4",17,0)
 ;    setup the ORDIALOG array
"RTN","ORWDXM4",18,0)
 D GETDLG^ORCD(ORDIALOG)
"RTN","ORWDXM4",19,0)
 D GETORDER^ORCD(RSPREF)
"RTN","ORWDXM4",20,0)
 Q
"RTN","ORWDXM4",21,0)
SETUPS ; -- setup for specific types of dialogs (continued from ORWDXM1)
"RTN","ORWDXM4",22,0)
 ; pharmacy uses ORCAT to know order package
"RTN","ORWDXM4",23,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSO OERR",0)) S ORCAT="O"
"RTN","ORWDXM4",24,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSJ OR PAT OE",0)) D
"RTN","ORWDXM4",25,0)
 . I ORCAT="O",'ORIMO S ORWPSWRG="" ; not auto-ack, pt not inpt
"RTN","ORWDXM4",26,0)
 . S ORCAT="I"
"RTN","ORWDXM4",27,0)
 I ORCAT="O",$D(OREVENT("EFFECTIVE")),(ORDG=+$O(^ORD(100.98,"B","O RX",0))) D
"RTN","ORWDXM4",28,0)
 . S ORDIALOG($O(^ORD(101.41,"B",X,0)),1)=OREVENT("EFFECTIVE")
"RTN","ORWDXM4",29,0)
 ;p394 force interactive dialog for imaging QO for female of child-bearing age. 
"RTN","ORWDXM4",30,0)
 N ORRAORD S ORRAORD=0 ;set is radiology flag to false (0)
"RTN","ORWDXM4",31,0)
 I ORDIALOG=$O(^ORD(101.41,"B","RA OERR EXAM",0)) D
"RTN","ORWDXM4",32,0)
 . N ORPRMPT1,ORPRMPT2,ORCODE S ORRAORD=1
"RTN","ORWDXM4",33,0)
 . Q:($G(ORTYPE)'="Q")!($G(ORSEX)'="F") 
"RTN","ORWDXM4",34,0)
 . S ORPRMPT1=$O(^ORD(101.41,"B","OR GTX PREGNANT",0)),ORPRMPT2=$P($G(ORDIALOG(ORPRMPT1)),"^")
"RTN","ORWDXM4",35,0)
 . S ORCODE=$G(^ORD(101.41,ORDIALOG,10,ORPRMPT2,7)) N Y S Y="Y" X ORCODE K ORCODE
"RTN","ORWDXM4",36,0)
 . S:Y="Y" ORWPSWRG="" ;
"RTN","ORWDXM4",37,0)
 I ORRAORD D RA^ORWDXM2 G XENV
"RTN","ORWDXM4",38,0)
 I ORDIALOG=$O(^ORD(101.41,"B","LR OTHER LAB TESTS",0))   D LR^ORWDXM2 G XENV
"RTN","ORWDXM4",39,0)
 I ORDIALOG=$O(^ORD(101.41,"B","FHW1",0))                 D DO^ORWDXM2 G XENV
"RTN","ORWDXM4",40,0)
 I ORDIALOG=$O(^ORD(101.41,"B","FHW2",0))                 D EL^ORWDXM2 G XENV
"RTN","ORWDXM4",41,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSJ OR PAT OE",0))        D UD^ORWDXM2 G XENV
"RTN","ORWDXM4",42,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSJI OR PAT FLUID OE",0)) D IV^ORWDXM2 G XENV
"RTN","ORWDXM4",43,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSO OERR",0))             D OP^ORWDXM2 G XENV
"RTN","ORWDXM4",44,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSO SUPPLY",0))           D OP^ORWDXM2 G XENV
"RTN","ORWDXM4",45,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PS MEDS",0))              D PS^ORWDPS3 G XENV
"RTN","ORWDXM4",46,0)
 I ORDIALOG=$O(^ORD(101.41,"B","VBEC BLOOD BANK",0))      D VB^ORWDXM4 G XENV
"RTN","ORWDXM4",47,0)
 I ORDIALOG=$O(^ORD(101.41,"B","GMRAOR ALLERGY ENTER/EDIT",0)) S ORQUIT=1
"RTN","ORWDXM4",48,0)
XENV ;    end case
"RTN","ORWDXM4",49,0)
 Q
"RTN","ORWDXM4",50,0)
MEDXFER ; -- setup ORDIALOG for a med that is transferred (from SETUP)
"RTN","ORWDXM4",51,0)
 ;
"RTN","ORWDXM4",52,0)
 ; use ORWDPS3 if OR*3*94 installed
"RTN","ORWDXM4",53,0)
 I ORWP94 G MEDXFER^ORWDPS3
"RTN","ORWDXM4",54,0)
 ;
"RTN","ORWDXM4",55,0)
 N UDLG,FDLG,ODLG,DLG,OI K ^TMP("PS",$J)
"RTN","ORWDXM4",56,0)
 S UDLG=$O(^ORD(101.41,"AB","PSJ OR PAT OE",0))
"RTN","ORWDXM4",57,0)
 S FDLG=$O(^ORD(101.41,"AB","PSJI OR PAT FLUID OE",0))
"RTN","ORWDXM4",58,0)
 S ODLG=$O(^ORD(101.41,"AB","PSO OERR",0))
"RTN","ORWDXM4",59,0)
 S DLG=$P($G(^OR(100,+ORIT,0)),U,5)
"RTN","ORWDXM4",60,0)
 S ORDIALOG=$S(+DLG=UDLG:ODLG,+DLG=ODLG:UDLG,+DLG=FDLG:FDLG,1:0)
"RTN","ORWDXM4",61,0)
 I 'ORDIALOG D SETERR(ORIT,"Incomplete Order Record") Q
"RTN","ORWDXM4",62,0)
 S ORDG=+$P(^ORD(101.41,ORDIALOG,0),U,5)
"RTN","ORWDXM4",63,0)
 D GETDLG^ORCD(ORDIALOG)
"RTN","ORWDXM4",64,0)
 D GETORDER^ORCD("^OR(100,"_+ORIT_",4.5)")
"RTN","ORWDXM4",65,0)
 S OI=$$VAL^ORCD("MEDICATION")
"RTN","ORWDXM4",66,0)
 I '$$MEDOK(OI,ORCAT) D SETERR(ORIT,"This may not be ordered as an "_$S(ORCAT="I":"in",1:"out")_"patient drug.") Q
"RTN","ORWDXM4",67,0)
 I $G(^ORD(101.43,OI,.1)),(^(.1)<$$NOW^XLFDT) D SETERR(ORIT,"This may no longer be ordered.") Q
"RTN","ORWDXM4",68,0)
 K ORDIALOG($$PTR("DISPENSE DRUG"),1)
"RTN","ORWDXM4",69,0)
 K ORDIALOG($$PTR("WORD PROCESSING 1"),1)
"RTN","ORWDXM4",70,0)
 I ORDIALOG=ODLG D IN2OUT  ; could call  IN^ORCMED except for writes
"RTN","ORWDXM4",71,0)
 I ORDIALOG=UDLG D OUT2IN  ; could call OUT^ORCMED except for writes
"RTN","ORWDXM4",72,0)
 Q
"RTN","ORWDXM4",73,0)
IN2OUT ; -- make inpatient responses into outpatient
"RTN","ORWDXM4",74,0)
 N I,DDRUG,PKGID,DOSE
"RTN","ORWDXM4",75,0)
 S DOSE=$G(ORDIALOG($$PTR("INSTRUCTIONS"),1))
"RTN","ORWDXM4",76,0)
 F I="INSTRUCTIONS","UNITS/DOSE","FREE TEXT","DISPENSE DRUG" K ORDIALOG($$PTR(I),1)
"RTN","ORWDXM4",77,0)
 S PKGID=$G(^OR(100,+ORIT,4))_";"_$P(^(0),U,12)
"RTN","ORWDXM4",78,0)
 D OEL^PSOORRL(+ORVP,PKGID) S DDRUG=$G(^TMP("PS",$J,"DD",1,0))
"RTN","ORWDXM4",79,0)
 I $P(DDRUG,U,3) S ORDIALOG($$PTR("DISPENSE DRUG"),1)=$P(DDRUG,U,3)
"RTN","ORWDXM4",80,0)
 ;    keep instructions if IV med, otherwise use units returned
"RTN","ORWDXM4",81,0)
 I $P($G(^ORD(101.43,OI,"PS")),U)=2 S ORDIALOG($$PTR("INSTRUCTIONS"),1)=DOSE
"RTN","ORWDXM4",82,0)
 E  S:$P(DDRUG,U,2) ORDIALOG($$PTR("INSTRUCTIONS"),1)=$P(DDRUG,U,2)
"RTN","ORWDXM4",83,0)
 ;    change orderable item if new orderable item returned
"RTN","ORWDXM4",84,0)
 I $P(DDRUG,U,4),$P(DDRUG,U,4)'=+$P($G(^ORD(101.43,OI,0)),U,2) D
"RTN","ORWDXM4",85,0)
 . S OI=+$O(^ORD(101.43,"ID",+$P(DDRUG,U,4)_";99PSP",0))
"RTN","ORWDXM4",86,0)
 . S:OI ORDIALOG($$PTR("ORDERABLE ITEM"),1)=OI
"RTN","ORWDXM4",87,0)
 Q
"RTN","ORWDXM4",88,0)
OUT2IN ; make outpatient responses into inpatient
"RTN","ORWDXM4",89,0)
 N ORP,ORI,PROMPT,PKGID,DDRUG,ONE
"RTN","ORWDXM4",90,0)
 D CHANGED^ORCDPS("XFR") ; Kill extra values not in inpt dialog
"RTN","ORWDXM4",91,0)
 S PKGID=$G(^OR(100,+ORIT,4))_";"_$P(^(0),U,12)
"RTN","ORWDXM4",92,0)
 D OEL^PSOORRL(+ORVP,PKGID) S DDRUG=$G(^TMP("PS",$J,"DD",1,0))
"RTN","ORWDXM4",93,0)
 S:$P(DDRUG,U,3) ORDIALOG($$PTR("DISPENSE DRUG"),1)=$P(DDRUG,U,3)
"RTN","ORWDXM4",94,0)
 I $P(DDRUG,U,4),$P(DDRUG,U,4)'=+$P($G(^ORD(101.43,+OI,0)),U,2) D
"RTN","ORWDXM4",95,0)
 . S OI=+$O(^ORD(101.43,"ID",+$P(DDRUG,U,4)_";99PSP",0))
"RTN","ORWDXM4",96,0)
 . S:OI ORDIALOG($$PTR("ORDERABLE ITEM"),1)=OI
"RTN","ORWDXM4",97,0)
 S ONE=$O(ORDIALOG($$PTR("INSTRUCTIONS"),0)) ; first inst
"RTN","ORWDXM4",98,0)
 F ORP="ROUTE","SCHEDULE" D
"RTN","ORWDXM4",99,0)
 . S ORI=0,PROMPT=$$PTR(ORP)
"RTN","ORWDXM4",100,0)
 . F  S ORI=$O(ORDIALOG(PROMPT,ORI)) Q:ORI'>0  I ORDIALOG(PROMPT,ORI)=""!(ORI>ONE) K ORDIALOG(PROMPT,ORI)
"RTN","ORWDXM4",101,0)
 Q
"RTN","ORWDXM4",102,0)
PTR(NAME) ; -- Returns pointer to OR GTX NAME (copied from ORCMED)
"RTN","ORWDXM4",103,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORWDXM4",104,0)
 ;
"RTN","ORWDXM4",105,0)
MEDOK(OI,CAT)   ; return 1 if med may be ordered for this patient category
"RTN","ORWDXM4",106,0)
 N P S P=$S(CAT="I":1,1:2)
"RTN","ORWDXM4",107,0)
 Q $P($G(^ORD(101.43,+OI,"PS")),U,P)
"RTN","ORWDXM4",108,0)
 ;
"RTN","ORWDXM4",109,0)
CHGSTS(ECAT,IFN)        ; return 1 if out to in or in to out
"RTN","ORWDXM4",110,0)
 N OCAT
"RTN","ORWDXM4",111,0)
 S OCAT=$P($G(^OR(100,+IFN,0)),U,12)
"RTN","ORWDXM4",112,0)
 Q OCAT'=ECAT
"RTN","ORWDXM4",113,0)
 ;
"RTN","ORWDXM4",114,0)
ISMED(IFN)      ; return 1 if this is a pharmacy order
"RTN","ORWDXM4",115,0)
 N PKG S PKG=$P($G(^OR(100,+IFN,0)),U,14)
"RTN","ORWDXM4",116,0)
 Q $$NMSP^ORCD(PKG)="PS"
"RTN","ORWDXM4",117,0)
SETERR(ID,X)       ; sets LST to rejection with error message
"RTN","ORWDXM4",118,0)
 D GETTXT^ORWORR(.LST,ID)
"RTN","ORWDXM4",119,0)
 S LST(0)="8^0",LST(.5)=X,LST(.6)=""
"RTN","ORWDXM4",120,0)
 Q
"RTN","ORWDXM4",121,0)
VB ; setup environment for VBECS
"RTN","ORWDXM4",122,0)
 ; -- setup ORTIME, ORIMTIME arrays
"RTN","ORWDXM4",123,0)
 D GETIMES^ORCDLR1
"RTN","ORWDXM4",124,0)
 ; -- setup ORCOMP, ORTEST, and ORTAS
"RTN","ORWDXM4",125,0)
 S (ORCOMP,ORTEST,ORTAS)=""
"RTN","ORWDXM4",126,0)
 N P,PROMPT,I,X,X0
"RTN","ORWDXM4",127,0)
 S P=+$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDXM4",128,0)
 S I=0 F  S I=$O(ORDIALOG(P,I)) Q:I<1  S X=+$G(ORDIALOG(P,I)) D
"RTN","ORWDXM4",129,0)
 . S X0=$G(^ORD(101.43,X,"VB")),X=+$P($G(^(0)),U,2)
"RTN","ORWDXM4",130,0)
 . I $P(X0,U) S ORCOMP=ORCOMP_$S($L(ORCOMP):U,1:"")_X Q
"RTN","ORWDXM4",131,0)
 . S ORTEST=ORTEST_$S($L(ORTEST):U,1:"")_X
"RTN","ORWDXM4",132,0)
 . I X=2 S ORTAS=1
"RTN","ORWDXM4",133,0)
 I '$D(ORTEST("Lab CollSamp")) D
"RTN","ORWDXM4",134,0)
 . N I,V,T,LC S LC=1
"RTN","ORWDXM4",135,0)
 . F I=1:1:$L(ORTEST,U) S V=+$P(ORTEST,U,I) D  Q:'LC  ;no LC samp
"RTN","ORWDXM4",136,0)
 .. S T=$$LAB60^ORCDVBEC(V) ;VBECS ID -> #60 ien
"RTN","ORWDXM4",137,0)
 .. I '$P($G(^LAB(60,T,0)),U,9) S LC=0 Q
"RTN","ORWDXM4",138,0)
 . S ORTEST("Lab CollSamp")=LC
"RTN","ORWDXM4",139,0)
 I '$D(ORTIME),'$D(ORIMTIME) D GETIMES^ORCDLR1
"RTN","ORWDXM4",140,0)
 S PROMPT=$O(^ORD(101.41,"B","OR GTX COLLECTION TYPE",0))
"RTN","ORWDXM4",141,0)
 I $D(ORDIALOG(PROMPT,1)) S ORCOLLCT=ORDIALOG(PROMPT,1) I 1
"RTN","ORWDXM4",142,0)
 E  S EDITONLY=0,ORCOLLCT=$$COLLTYPE^ORCDLR1
"RTN","ORWDXM4",143,0)
 I ORCOLLCT="I" D
"RTN","ORWDXM4",144,0)
 . S PROMPT=$O(^ORD(101.41,"B","OR GTX START DATE/TIME",0))
"RTN","ORWDXM4",145,0)
 . D LRICTMOK^ORWDXM2
"RTN","ORWDXM4",146,0)
 Q
"RTN","ORWDXM4",147,0)
VBASK(I) ; set the ORASK variable for child component prompts in VBECS order
"RTN","ORWDXM4",148,0)
 I ORDIALOG'=$O(^ORD(101.41,"B","VBEC BLOOD BANK",0)) Q
"RTN","ORWDXM4",149,0)
 N P S P=+$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDXM4",150,0)
 N OI S OI=+$G(ORDIALOG(P,I))
"RTN","ORWDXM4",151,0)
 I +$G(^ORD(101.43,+$G(OI),"VB")) S ORASK=1
"RTN","ORWDXM4",152,0)
 Q
"RTN","ORWDXM4",153,0)
VBQO(IFN) ;Check to see if it's a good VBECS QO
"RTN","ORWDXM4",154,0)
 ;regular order treated as good QO
"RTN","ORWDXM4",155,0)
 ;
"RTN","ORWDXM4",156,0)
 I $P($G(^ORD(101.41,IFN,0)),U,4)'="Q" Q 1
"RTN","ORWDXM4",157,0)
 N ODP,ODG,RESULT,P,TNS,I
"RTN","ORWDXM4",158,0)
 S RESULT=0
"RTN","ORWDXM4",159,0)
 S ODP=+$P($G(^ORD(101.41,IFN,0)),U,7),ODG=+$P($G(^(0)),U,5)
"RTN","ORWDXM4",160,0)
 S ODP=$$GET1^DIQ(9.4,+ODP_",",1),ODG=$P($G(^ORD(100.98,ODG,0)),U,3)
"RTN","ORWDXM4",161,0)
 I ODP'["VBEC" Q 1
"RTN","ORWDXM4",162,0)
 Q RESULT
"RTN","ORWU1")
0^3^B51918555^B51824398
"RTN","ORWU1",1,0)
ORWU1 ;SLC/GRE - General Utilities for Windows Calls [2/25/04 11:10am]
"RTN","ORWU1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**149,187,195,215,394**;Dec 17, 1997;Build 5
"RTN","ORWU1",3,0)
 ;
"RTN","ORWU1",4,0)
 Q
"RTN","ORWU1",5,0)
 ;
"RTN","ORWU1",6,0)
NP1 ; Return a set of names from the NEW PERSON file.
"RTN","ORWU1",7,0)
 ; (PKS/8/5/2003: Now called by NEWPERS^ORWU; internal mods made.)
"RTN","ORWU1",8,0)
 ; (Keep GETCOS^ORWTPN up to date with matching logic/code, too.)
"RTN","ORWU1",9,0)
 ;
"RTN","ORWU1",10,0)
 ; PARAMS from NEWPERS^ORWU call:
"RTN","ORWU1",11,0)
 ;  .ORY=returned list.
"RTN","ORWU1",12,0)
 ;  ORDATE=Checks for an active person class on this date (optional).
"RTN","ORWU1",13,0)
 ;  ORDIR=Direction to move through the x-ref with $O.  
"RTN","ORWU1",14,0)
 ;  ORFROM=Starting name for this set.
"RTN","ORWU1",15,0)
 ;  ORKEY=Screen users by security key (optional).
"RTN","ORWU1",16,0)
 ;  ORVIZ=If true, includes RDV users; otherwise not (optional).
"RTN","ORWU1",17,0)
 ;  
"RTN","ORWU1",18,0)
 N ORDD,ORDIV,ORDUP,ORGOOD,ORI,ORIEN1,ORIEN2,ORLAST,ORMAX,ORMRK,ORMULTI,ORPREV,ORSRV,ORTTL
"RTN","ORWU1",19,0)
 ;
"RTN","ORWU1",20,0)
 S ORI=0,ORMAX=44,(ORLAST,ORPREV)="",ORKEY=$G(ORKEY),ORDATE=$G(ORDATE)
"RTN","ORWU1",21,0)
 S ORMULTI=$$ALL^VASITE ; IA# 10112.  Do once at beginning of call.
"RTN","ORWU1",22,0)
 ;
"RTN","ORWU1",23,0)
 ; NP3 tag includes visitors, uses full "B" x-ref.
"RTN","ORWU1",24,0)
 I +$G(ORVIZ)=1 D NP3(0) Q  ; Use alt. version, skip rest.
"RTN","ORWU1",25,0)
 ; User requested ALL users, both active and inactive.  Same call, but skip $$PROVIDER^XUSER screen
"RTN","ORWU1",26,0)
 I +$G(ORALL)=1 D NP3(0) Q
"RTN","ORWU1",27,0)
 ;
"RTN","ORWU1",28,0)
 F  Q:ORI'<ORMAX  S ORFROM=$O(^VA(200,"AUSER",ORFROM),ORDIR) Q:ORFROM=""  D
"RTN","ORWU1",29,0)
 .S ORIEN1=""
"RTN","ORWU1",30,0)
 .F  S ORIEN1=$O(^VA(200,"AUSER",ORFROM,ORIEN1),ORDIR) Q:'ORIEN1  D
"RTN","ORWU1",31,0)
 ..;
"RTN","ORWU1",32,0)
 ..I $L(ORKEY),'$D(^XUSEC(ORKEY,+ORIEN1)) Q       ; Check for key?
"RTN","ORWU1",33,0)
 ..I ORDATE>0,$$GET^XUA4A72(ORIEN1,ORDATE)<1 Q    ; Check date?
"RTN","ORWU1",34,0)
 ..S ORI=ORI+1,ORY(ORI)=ORIEN1_"^"_$$NAMEFMT^XLFNAME(ORFROM,"F","DcMPC")
"RTN","ORWU1",35,0)
 ..S ORDUP=0                            ; Init flag, check dupe.
"RTN","ORWU1",36,0)
 ..I ($P(ORPREV_" "," ")=$P(ORFROM_" "," ")) S ORDUP=1
"RTN","ORWU1",37,0)
 ..;
"RTN","ORWU1",38,0)
 ..; Append Title if not duplicated:
"RTN","ORWU1",39,0)
 ..I 'ORDUP D
"RTN","ORWU1",40,0)
 ...S ORIEN2=ORIEN1
"RTN","ORWU1",41,0)
 ...D NP4(0)                            ; Get Title. 
"RTN","ORWU1",42,0)
 ...I ORTTL="" Q
"RTN","ORWU1",43,0)
 ...S ORY(ORI)=ORY(ORI)_U_"- "_ORTTL
"RTN","ORWU1",44,0)
 ..;
"RTN","ORWU1",45,0)
 ..; Get data in case of dupes:
"RTN","ORWU1",46,0)
 ..I ORDUP D
"RTN","ORWU1",47,0)
 ...S ORIEN2=ORLAST                     ; Prev IEN for NP2 call.
"RTN","ORWU1",48,0)
 ...;
"RTN","ORWU1",49,0)
 ...; Reset, use previous array element, call for extended data:
"RTN","ORWU1",50,0)
 ...S ORI=ORI-1,ORY(ORI)=$P(ORY(ORI),U)_U_$P(ORY(ORI),U,2)  D NP2
"RTN","ORWU1",51,0)
 ...;
"RTN","ORWU1",52,0)
 ...; Then return to current user for second extended data call:
"RTN","ORWU1",53,0)
 ...S ORIEN2=ORIEN1,ORI=ORI+1  D NP2
"RTN","ORWU1",54,0)
 ..S ORLAST=ORIEN1,ORPREV=ORFROM        ; Reassign vars for next pass.
"RTN","ORWU1",55,0)
 ;
"RTN","ORWU1",56,0)
 Q
"RTN","ORWU1",57,0)
 ;
"RTN","ORWU1",58,0)
NP2 ; Retrieve subset of data for dupes in NP1.
"RTN","ORWU1",59,0)
 ; (Assumes certain vars already set/new'd in calling code.)
"RTN","ORWU1",60,0)
 ;
"RTN","ORWU1",61,0)
 ; Variables used:
"RTN","ORWU1",62,0)
 ;   ORZ    = Memory array storage variable.
"RTN","ORWU1",63,0)
 ;   ORZERR = Error storage for LIST^DIC call.
"RTN","ORWU1",64,0)
 ;
"RTN","ORWU1",65,0)
 N ORZ,ORZERR                           ; Initialize variables.
"RTN","ORWU1",66,0)
 S ORDIV=""                             ; Reset each time.
"RTN","ORWU1",67,0)
 D NP4(1)                               ; Get Title, Service/Section.
"RTN","ORWU1",68,0)
 ;
"RTN","ORWU1",69,0)
 ; For multi-divisional site, get Division if determinable:
"RTN","ORWU1",70,0)
 I ORMULTI D
"RTN","ORWU1",71,0)
 .D LIST^DIC(200.02,","_ORIEN2_",","@;.01;1","QP","","","","","","","ORZ","ORZERR")
"RTN","ORWU1",72,0)
 .S (ORDD,ORGOOD)=0                     ; Initialize variables.
"RTN","ORWU1",73,0)
 .I $P(ORZ("DILIST",0),U)=0 Q           ; Division not listed.
"RTN","ORWU1",74,0)
 .I $P(ORZ("DILIST",0),U)=1 D  Q        ; Only one, so use it.
"RTN","ORWU1",75,0)
 ..S ORDD=$O(ORZ("DILIST",ORDD))        ; Get the node's entry.
"RTN","ORWU1",76,0)
 ..S ORDIV=$P(ORZ("DILIST",ORDD,0),U,2) ; Get actual name value. p394
"RTN","ORWU1",77,0)
 .;
"RTN","ORWU1",78,0)
 .; More than one Division entry, so:
"RTN","ORWU1",79,0)
 .F  S ORDD=$O(ORZ("DILIST",ORDD)) Q:+ORDD=0!'($L(ORDD))  D  Q:ORGOOD
"RTN","ORWU1",80,0)
 ..;
"RTN","ORWU1",81,0)
 ..; See if current entry being processed is "Default" (done if so):
"RTN","ORWU1",82,0)
 ..I $P(ORZ("DILIST",ORDD,0),U,3)["Y" S ORDIV=$P(ORZ("DILIST",ORDD,0),U,2),ORGOOD=1  Q                       ; Division text.
"RTN","ORWU1",83,0)
 ;
"RTN","ORWU1",84,0)
 ; Append new pieces to array string:
"RTN","ORWU1",85,0)
 S ORMRK=""
"RTN","ORWU1",86,0)
 I (ORTTL="")&(ORSRV="")&(ORDIV="")  Q  ; Nothing to append.
"RTN","ORWU1",87,0)
 S ORY(ORI)=ORY(ORI)_U_"- "             ; At least something exists.
"RTN","ORWU1",88,0)
 I (ORTTL'="") S ORY(ORI)=ORY(ORI)_ORTTL,ORMRK=", "       ; Title.
"RTN","ORWU1",89,0)
 I (ORSRV'="") S ORY(ORI)=ORY(ORI)_ORMRK_ORSRV,ORMRK=", " ; Service.
"RTN","ORWU1",90,0)
 I (ORDIV'="") S ORY(ORI)=ORY(ORI)_ORMRK_ORDIV            ; Division.
"RTN","ORWU1",91,0)
 ;
"RTN","ORWU1",92,0)
 Q
"RTN","ORWU1",93,0)
 ;
"RTN","ORWU1",94,0)
NP3(COSFLAG) ; Retrieve diff. data when all users are involved, using "B" x-ref.
"RTN","ORWU1",95,0)
 ;
"RTN","ORWU1",96,0)
 ; COSFLAG=If TRUE, called by ORWTPN.
"RTN","ORWU1",97,0)
 ; (Assumes certain vars already set/new'd in calling code.)
"RTN","ORWU1",98,0)
 ;
"RTN","ORWU1",99,0)
 N ORNODE,COSQUIT
"RTN","ORWU1",100,0)
 S COSQUIT=0 ; Flag used in section for COSFLAG.
"RTN","ORWU1",101,0)
 ;
"RTN","ORWU1",102,0)
 F  Q:ORI'<ORMAX  S ORFROM=$O(^VA(200,"B",ORFROM),ORDIR) Q:ORFROM=""  D
"RTN","ORWU1",103,0)
 .S ORIEN1=""
"RTN","ORWU1",104,0)
 .F  S ORIEN1=$O(^VA(200,"B",ORFROM,ORIEN1),ORDIR) Q:'ORIEN1  D
"RTN","ORWU1",105,0)
 ..;
"RTN","ORWU1",106,0)
 ..; Screen default cosigner if appropriate (ORUSER set in ORWTPN):
"RTN","ORWU1",107,0)
 ..I COSFLAG D
"RTN","ORWU1",108,0)
 ...S COSQUIT=0
"RTN","ORWU1",109,0)
 ...I '$$SCRDFCS^TIULA3(ORUSER,ORIEN1) S COSFLAG=1 Q
"RTN","ORWU1",110,0)
 ...S ORNODE=$P($G(^VA(200,ORIEN1,0)),U)
"RTN","ORWU1",111,0)
 ...I '$L(ORNODE) S COSFLAG=1 Q
"RTN","ORWU1",112,0)
 ..I COSQUIT Q
"RTN","ORWU1",113,0)
 ..;
"RTN","ORWU1",114,0)
 ..I +$G(ORALL)=0,'$$PROVIDER^XUSER(ORIEN1,1) Q   ; Terminated?   Skip if ALL requested
"RTN","ORWU1",115,0)
 ..I ORDATE>0,$$GET^XUA4A72(ORIEN1,ORDATE)<1 Q    ; Check date?
"RTN","ORWU1",116,0)
 ..I $L(ORKEY),'$D(^XUSEC(ORKEY,+ORIEN1)) Q       ; Check for key?
"RTN","ORWU1",117,0)
 ..S ORI=ORI+1,ORY(ORI)=ORIEN1_"^"_$$NAMEFMT^XLFNAME(ORFROM,"F","DcMPC")
"RTN","ORWU1",118,0)
 ..S ORDUP=0                           ; Init flag, check duplication.
"RTN","ORWU1",119,0)
 ..I ($P(ORPREV_" "," ")=$P(ORFROM_" "," ")) S ORDUP=1
"RTN","ORWU1",120,0)
 ..;
"RTN","ORWU1",121,0)
 ..; Append Title if not duplicated:
"RTN","ORWU1",122,0)
 ..I 'ORDUP D
"RTN","ORWU1",123,0)
 ...S ORIEN2=ORIEN1
"RTN","ORWU1",124,0)
 ...D NP4(0)                           ; Get Title. 
"RTN","ORWU1",125,0)
 ...I ORTTL="" Q
"RTN","ORWU1",126,0)
 ...S ORY(ORI)=ORY(ORI)_U_"- "_ORTTL
"RTN","ORWU1",127,0)
 ..;
"RTN","ORWU1",128,0)
 ..; Get data in case of dupes:
"RTN","ORWU1",129,0)
 ..I ORDUP D
"RTN","ORWU1",130,0)
 ...S ORIEN2=ORLAST                   ; Set to prev. IEN for NP2.
"RTN","ORWU1",131,0)
 ...;
"RTN","ORWU1",132,0)
 ...; Reset, use previous array element, call for extended data:
"RTN","ORWU1",133,0)
 ...S ORI=ORI-1,ORY(ORI)=$P(ORY(ORI),U)_U_$P(ORY(ORI),U,2)  D NP2
"RTN","ORWU1",134,0)
 ...;
"RTN","ORWU1",135,0)
 ...; Now return to current user for second extended data call:
"RTN","ORWU1",136,0)
 ...S ORIEN2=ORIEN1,ORI=ORI+1  D NP2
"RTN","ORWU1",137,0)
 ..S ORLAST=ORIEN1,ORPREV=ORFROM       ; Reassign vars for next pass.
"RTN","ORWU1",138,0)
 ;
"RTN","ORWU1",139,0)
 Q
"RTN","ORWU1",140,0)
 ;
"RTN","ORWU1",141,0)
NP4(ORSS) ; Retrieve Title or Title and Service/Section.
"RTN","ORWU1",142,0)
 ; (Assumes certain vars already set/new'd in calling code.)
"RTN","ORWU1",143,0)
 ;
"RTN","ORWU1",144,0)
 ; Passed variable ORSS: If true, get Service/Section also.
"RTN","ORWU1",145,0)
 ;
"RTN","ORWU1",146,0)
 S (ORTTL,ORSRV)=""                            ; Init each time.
"RTN","ORWU1",147,0)
 ; DBIA# 4329:
"RTN","ORWU1",148,0)
 S ORTTL=$P($G(^VA(200,ORIEN2,0)),U,9)         ; Get Title pointer.
"RTN","ORWU1",149,0)
 I ORTTL<1 S ORTTL=""                          ; Reset var if none.
"RTN","ORWU1",150,0)
 ; DBIA# 1234:
"RTN","ORWU1",151,0)
 I ORTTL>0 S ORTTL=$G(^DIC(3.1,ORTTL,0))       ; Actual Title value.
"RTN","ORWU1",152,0)
 S ORSS=$G(ORSS)
"RTN","ORWU1",153,0)
 I ORSS D                                      ; Get Service/Section?
"RTN","ORWU1",154,0)
 .; DBIA# 4329:
"RTN","ORWU1",155,0)
 .S ORSRV=$P($G(^VA(200,ORIEN2,5)),U,1)        ; Get S/S pointer.
"RTN","ORWU1",156,0)
 .I ORSRV<1 S ORSRV=""                         ; Reset var if none.
"RTN","ORWU1",157,0)
 .; DBIA# 4330:
"RTN","ORWU1",158,0)
 .I ORSRV>0 S ORSRV=$P($G(^DIC(49,ORSRV,0)),U) ; Actual S/S value.
"RTN","ORWU1",159,0)
 ;
"RTN","ORWU1",160,0)
 Q
"RTN","ORWU1",161,0)
 ;
"RTN","ORWU1",162,0)
NAMECVT(Y,IEN) ; Returns text name(mixed-case) derived from IEN xref.
"RTN","ORWU1",163,0)
 ; GRE/2002
"RTN","ORWU1",164,0)
 ; PKS-12/20/2002 Tag not presently used.
"RTN","ORWU1",165,0)
 ; Y=Returned value, IEN=Internal number
"RTN","ORWU1",166,0)
 N ORNAME
"RTN","ORWU1",167,0)
 S IEN=IEN_","
"RTN","ORWU1",168,0)
 S ORNAME=$$GET1^DIQ(200,IEN,20.2)
"RTN","ORWU1",169,0)
 S Y=$$NAMEFMT^XLFNAME(.ORNAME,"F","DcMPC")
"RTN","ORWU1",170,0)
 Q
"RTN","ORWU1",171,0)
 ;
"RTN","ORWU1",172,0)
DEFDIV(Y) ; Return user's default division, if specified.
"RTN","ORWU1",173,0)
 ;
"RTN","ORWU1",174,0)
 ; Variables used:
"RTN","ORWU1",175,0)
 ;   ORDD   = Default division.
"RTN","ORWU1",176,0)
 ;   ORDIV  = Division holder variable.
"RTN","ORWU1",177,0)
 ;   ORGOOD = Flag for successful default division found.
"RTN","ORWU1",178,0)
 ;   ORIEN  = IEN of user.
"RTN","ORWU1",179,0)
 ;   ORZ    = Memory array storage variable.
"RTN","ORWU1",180,0)
 ;   ORZERR = Error storage for LIST^DIC call.
"RTN","ORWU1",181,0)
 ;   Y      = Returned value.
"RTN","ORWU1",182,0)
 ;
"RTN","ORWU1",183,0)
 N ORDD,ORDIV,ORGOOD,ORIEN,ORZ,ORZERR
"RTN","ORWU1",184,0)
 ;
"RTN","ORWU1",185,0)
 S ORIEN=DUZ,ORDIV=""
"RTN","ORWU1",186,0)
 S Y=0,(ORDD,ORGOOD)=0             ; Initialize variables.
"RTN","ORWU1",187,0)
 ;
"RTN","ORWU1",188,0)
 ; Get list of divisions from NEW PERSON file multiple:
"RTN","ORWU1",189,0)
 D LIST^DIC(200.02,","_ORIEN_",","@;.01;1","QP","","","","","","","ORZ","ORZERR")
"RTN","ORWU1",190,0)
 I $P(ORZ("DILIST",0),U)=0 Q       ; No Divisions listed.
"RTN","ORWU1",191,0)
 ;
"RTN","ORWU1",192,0)
 ; Iterate through list:
"RTN","ORWU1",193,0)
 F  S ORDD=$O(ORZ("DILIST",ORDD)) Q:+ORDD=0!'($L(ORDD))  D  Q:ORGOOD
"RTN","ORWU1",194,0)
 .;
"RTN","ORWU1",195,0)
 .; See if current entry being processed is "Default" (done if so):
"RTN","ORWU1",196,0)
 .I $P(ORZ("DILIST",ORDD,0),U,3)["Y" S ORDIV=$P(ORZ("DILIST",ORDD,0),U,2),ORGOOD=1                      ; Division text.
"RTN","ORWU1",197,0)
 .;
"RTN","ORWU1",198,0)
 I (ORDIV="") Q                    ; Punt if no default division.
"RTN","ORWU1",199,0)
 I $$UP^XLFSTR(ORDIV)="SALT LAKE CITY OIFO" S Y=1
"RTN","ORWU1",200,0)
 ;
"RTN","ORWU1",201,0)
 Q
"RTN","ORWU1",202,0)
 ;
"RTN","ORWU1",203,0)
NEWLOC(Y,ORFROM,DIR) ; Return "CZ" locations from HOSPITAL LOCATION file.
"RTN","ORWU1",204,0)
 ; C=Clinics, Z=Other, screened by $$ACTLOC^ORWU.
"RTN","ORWU1",205,0)
 ; .Y=returned list, ORFROM=text to $O from, DIR=$O direction.
"RTN","ORWU1",206,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU1",207,0)
 F  Q:I'<CNT  S ORFROM=$O(^SC("B",ORFROM),DIR) Q:ORFROM=""  D  ; IA# 10040.
"RTN","ORWU1",208,0)
 . S IEN="" F  S IEN=$O(^SC("B",ORFROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU1",209,0)
 . . Q:("C"'[$P($G(^SC(IEN,0)),U,3)!('$$ACTLOC^ORWU(IEN)))
"RTN","ORWU1",210,0)
 . . S I=I+1,Y(I)=IEN_"^"_ORFROM
"RTN","ORWU1",211,0)
 Q
"RTN","ORWU1",212,0)
 ;
"VER")
8.0^22.0
"BLD",9640,6)
^344
**END**
**END**

