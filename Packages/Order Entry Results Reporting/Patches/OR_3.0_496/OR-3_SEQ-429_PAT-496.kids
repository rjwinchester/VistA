EMERGENCY Released OR*3*496 SEQ #429
Extracted from mail message
**KIDS**:OR*3.0*496^

**INSTALL NAME**
OR*3.0*496
"BLD",11393,0)
OR*3.0*496^ORDER ENTRY/RESULTS REPORTING^0^3190723^y
"BLD",11393,1,0)
^^2^2^3181119^
"BLD",11393,1,1,0)
This patch adds the VETERAN VIDEO CALL URL field to the Hospital Location 
"BLD",11393,1,2,0)
file, Appointment multiple.
"BLD",11393,4,0)
^9.64PA^^0
"BLD",11393,6.3)
2
"BLD",11393,"ABPKG")
n
"BLD",11393,"KRN",0)
^9.67PA^1.61^23
"BLD",11393,"KRN",.4,0)
.4
"BLD",11393,"KRN",.401,0)
.401
"BLD",11393,"KRN",.402,0)
.402
"BLD",11393,"KRN",.403,0)
.403
"BLD",11393,"KRN",.5,0)
.5
"BLD",11393,"KRN",.84,0)
.84
"BLD",11393,"KRN",1.6,0)
1.6
"BLD",11393,"KRN",1.61,0)
1.61
"BLD",11393,"KRN",1.62,0)
1.62
"BLD",11393,"KRN",3.6,0)
3.6
"BLD",11393,"KRN",3.8,0)
3.8
"BLD",11393,"KRN",9.2,0)
9.2
"BLD",11393,"KRN",9.8,0)
9.8
"BLD",11393,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",11393,"KRN",9.8,"NM",1,0)
ORWCV^^0^B90464307
"BLD",11393,"KRN",9.8,"NM","B","ORWCV",1)

"BLD",11393,"KRN",19,0)
19
"BLD",11393,"KRN",19.1,0)
19.1
"BLD",11393,"KRN",101,0)
101
"BLD",11393,"KRN",409.61,0)
409.61
"BLD",11393,"KRN",771,0)
771
"BLD",11393,"KRN",779.2,0)
779.2
"BLD",11393,"KRN",870,0)
870
"BLD",11393,"KRN",8989.51,0)
8989.51
"BLD",11393,"KRN",8989.52,0)
8989.52
"BLD",11393,"KRN",8994,0)
8994
"BLD",11393,"KRN","B",.4,.4)

"BLD",11393,"KRN","B",.401,.401)

"BLD",11393,"KRN","B",.402,.402)

"BLD",11393,"KRN","B",.403,.403)

"BLD",11393,"KRN","B",.5,.5)

"BLD",11393,"KRN","B",.84,.84)

"BLD",11393,"KRN","B",1.6,1.6)

"BLD",11393,"KRN","B",1.61,1.61)

"BLD",11393,"KRN","B",1.62,1.62)

"BLD",11393,"KRN","B",3.6,3.6)

"BLD",11393,"KRN","B",3.8,3.8)

"BLD",11393,"KRN","B",9.2,9.2)

"BLD",11393,"KRN","B",9.8,9.8)

"BLD",11393,"KRN","B",19,19)

"BLD",11393,"KRN","B",19.1,19.1)

"BLD",11393,"KRN","B",101,101)

"BLD",11393,"KRN","B",409.61,409.61)

"BLD",11393,"KRN","B",771,771)

"BLD",11393,"KRN","B",779.2,779.2)

"BLD",11393,"KRN","B",870,870)

"BLD",11393,"KRN","B",8989.51,8989.51)

"BLD",11393,"KRN","B",8989.52,8989.52)

"BLD",11393,"KRN","B",8994,8994)

"BLD",11393,"QUES",0)
^9.62^^
"BLD",11393,"REQB",0)
^9.611^1^1
"BLD",11393,"REQB",1,0)
OR*3.0*280^2
"BLD",11393,"REQB","B","OR*3.0*280",1)

"MBREQ")
0
"PKG",188,-1)
1^1
"PKG",188,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",188,22,0)
^9.49I^1^1
"PKG",188,22,1,0)
3.0^2971217^2981113^1
"PKG",188,22,1,"PAH",1,0)
496^3190723^520881755
"PKG",188,22,1,"PAH",1,1,0)
^^2^2^3190723
"PKG",188,22,1,"PAH",1,1,1,0)
This patch adds the VETERAN VIDEO CALL URL field to the Hospital Location 
"PKG",188,22,1,"PAH",1,1,2,0)
file, Appointment multiple.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","ORWCV")
0^1^B90464307^B80219268
"RTN","ORWCV",1,0)
ORWCV ; SLC/KCM,MS/PB - Background Cover Sheet Load; ; 06/10/09
"RTN","ORWCV",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,109,132,209,214,195,215,260,243,282,302,280,496**;Nov 19, 2018;Build 2
"RTN","ORWCV",3,0)
 ;
"RTN","ORWCV",4,0)
 ;
"RTN","ORWCV",5,0)
 ; DBIA 1096    Reference to ^DGPM("ATID1"
"RTN","ORWCV",6,0)
 ; DBIA 1894    Reference to GETENC^PXAPI
"RTN","ORWCV",7,0)
 ; DBIA 1895    Reference to APPT2VST^PXAPI
"RTN","ORWCV",8,0)
 ; DBIA 2096    Reference to ^SD(409.63
"RTN","ORWCV",9,0)
 ; DBIA 2437    Reference to ^DGPM(
"RTN","ORWCV",10,0)
 ; DBIA 2965    Reference to ^DIC(405.1
"RTN","ORWCV",11,0)
 ; DBIA 4011    Access ^XWB(8994)
"RTN","ORWCV",12,0)
 ; DBIA 4313    Direct R/W permission to capacity mgmt global ^KMPTMP("KMPDT")
"RTN","ORWCV",13,0)
 ; DBIA 4325    References to AWCMCPR1
"RTN","ORWCV",14,0)
 ; DBIA 10061   Reference to ^UTILITY
"RTN","ORWCV",15,0)
 ; CPRS has a SACC exemption for usage of the variable $ZE
"RTN","ORWCV",16,0)
 ; 
"RTN","ORWCV",17,0)
START(VAL,DFN,IP,HWND,LOC,NODO,NEWREM) ; start cover sheet build in background
"RTN","ORWCV",18,0)
 N ZTIO,ZTRTN,ZTDTH,ZTSAVE,ZTDESC,SECT,BACK,X,I,ORLIST,STR,FILE,NODE,ORHTIME,ORX
"RTN","ORWCV",19,0)
 ; Capacity planning timing code uses ORHTIME
"RTN","ORWCV",20,0)
 S ORHTIME=$H
"RTN","ORWCV",21,0)
 S LOC=$G(LOC),NODO=";"_$G(NODO),NEWREM=+$G(NEWREM)
"RTN","ORWCV",22,0)
 D GETLST^XPAR(.ORX,"SYS^PKG","ORWOR COVER RETRIEVAL NEW","Q")
"RTN","ORWCV",23,0)
 S I=0 F  S I=$O(ORX(I)) Q:'I  I $D(^ORD(101.24,+ORX(I),0)) S SECT(+$P(^(0),"^",2))=$P(ORX(I),"^",2)
"RTN","ORWCV",24,0)
 D GETLST^XPAR(.ORLIST,"ALL","ORWCV1 COVERSHEET LIST")
"RTN","ORWCV",25,0)
 S (VAL,BACK,STR,FILE)=""
"RTN","ORWCV",26,0)
 F  S I=$O(ORLIST(I)) Q:'I  I $D(^ORD(101.24,$P(ORLIST(I),"^",2),0))  S X0=^(0) D
"RTN","ORWCV",27,0)
 . Q:$P(X0,"^",8)'="C"
"RTN","ORWCV",28,0)
 . S X=$P(X0,"^",2)
"RTN","ORWCV",29,0)
 . I NODO[(";"_X_";") Q                                  ; if in NODO, dont do section
"RTN","ORWCV",30,0)
 . S STR=STR_X_";"
"RTN","ORWCV",31,0)
 . I '$G(SECT(X)) S VAL=VAL_X_";"                        ; load section in foreground
"RTN","ORWCV",32,0)
 . E  S BACK=BACK_X_";",FILE=FILE_$P(ORLIST(I),"^",2)_";"  ; load section in background
"RTN","ORWCV",33,0)
 Q:BACK=""
"RTN","ORWCV",34,0)
 S ZTIO="ORW THREAD RESOURCE",ZTRTN="BUILD^ORWCV",ZTDTH=$H
"RTN","ORWCV",35,0)
 S (ZTSAVE("DFN"),ZTSAVE("IP"),ZTSAVE("HWND"),ZTSAVE("NEWREM"),ZTSAVE("LOC"),ZTSAVE("BACK"),ZTSAVE("FILE"))=""
"RTN","ORWCV",36,0)
 S ZTDESC="CPRS GUI Background Data Retrieval"
"RTN","ORWCV",37,0)
 D ^%ZTLOAD I '$D(ZTSK) S VAL=STR Q
"RTN","ORWCV",38,0)
 S NODE="ORWCV "_IP_"-"_HWND_"-"_DFN
"RTN","ORWCV",39,0)
 K ^XTMP(NODE)
"RTN","ORWCV",40,0)
 S ^XTMP(NODE,0)=$$FMADD^XLFDT(DT,1)_U_DT_U_"Background CPRS "_ZTSK
"RTN","ORWCV",41,0)
 ; Start capacity planning timing clock - will be stopped in POLL code
"RTN","ORWCV",42,0)
 I +$G(^KMPTMP("KMPD-CPRS")) S ^KMPTMP("KMPDT","ORWCV",NODE)=$G(ORHTIME)_"^^"_$G(DUZ)_"^"_$G(IO("CLNM"))
"RTN","ORWCV",43,0)
 Q
"RTN","ORWCV",44,0)
BUILD ; called in background by task manager, expects DFN, JobID 
"RTN","ORWCV",45,0)
 N NODE,IFLE,ORFNUM,ID,ENT,RTN,INODE,PARAM1,PARAM2,DETAIL,X0,X2
"RTN","ORWCV",46,0)
 S NODE="ORWCV "_IP_"-"_HWND_"-"_DFN
"RTN","ORWCV",47,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ORWCV",48,0)
 I $G(^XTMP(NODE,"STOP")) K ^XTMP(NODE) Q  ; client no longer polling
"RTN","ORWCV",49,0)
 I '$D(^XTMP(NODE,0)) Q                    ; XTMP node has been purged
"RTN","ORWCV",50,0)
 L +^XTMP(NODE):$S($G(DILOCKTM)>0:DILOCKTM,1:5)
"RTN","ORWCV",51,0)
 S ^XTMP(NODE,"DFN")=DFN
"RTN","ORWCV",52,0)
 ;N $ETRAP,$ESTACK
"RTN","ORWCV",53,0)
 ;S $ETRAP="D ERR^ORWCV Q"
"RTN","ORWCV",54,0)
 I $L($G(FILE),";")>0 F IFLE=1:1:$L(FILE,";") S ORFNUM=$P(FILE,";",IFLE)  Q:'$D(^ORD(101.24,+ORFNUM,0))  S X0=^(0),X2=$G(^(2)) D
"RTN","ORWCV",55,0)
 . S ID=$P(X0,"^",2),ENT=$P(X0,"^",6),RTN=$P(X0,"^",5),PARAM1=$P(X2,"^"),PARAM2=$P(X2,"^",2),INODE=$P(X2,"^",5),DETAIL=""
"RTN","ORWCV",56,0)
 . I $P(X0,"^",18) S DETAIL=$P($G(^ORD(101.24,+$P(X0,"^",18),0)),"^",13),DETAIL=$P($G(^XWB(8994,+DETAIL,0)),"^")  ;DBIA 4011
"RTN","ORWCV",57,0)
 . I '$L(INODE) Q
"RTN","ORWCV",58,0)
 . I '$L(ENT) S LST(IFLE)="0^ERROR: Missing ENTRY POINT field in file 101.24 for "_$P(X0,"^")_", IFN="_+ORFNUM D LST2XTMP(INODE) Q
"RTN","ORWCV",59,0)
 . I '$L(RTN) S LST(IFLE)="0^ERROR: Missing ROUTINE field in file 101.24 for "_$P(X0,"^")_", IFN="_+ORFNUM D LST2XTMP(INODE) Q
"RTN","ORWCV",60,0)
 . I '$L($T(@(ENT_"^"_RTN))) S LST(IFLE)="0^ERROR: "_ENT_"~"_RTN_" does not exist. See file 101.24 entry: "_$P(X0,"^")_", IFN="_+ORFNUM D LST2XTMP(INODE) Q
"RTN","ORWCV",61,0)
 . I ID=50 D:$L($T(STRT3^AWCMCPR1)) STRT3^AWCMCPR1 D  D:$L($T(END^AWCMCPR1)) END^AWCMCPR1 Q  ;Special case for reminders
"RTN","ORWCV",62,0)
 .. I $G(NEWREM) D APPL^ORQQPXRM(.LST,DFN,LOC) I 1
"RTN","ORWCV",63,0)
 .. E  D @(ENT_"^"_RTN_"(.LST,DFN)")
"RTN","ORWCV",64,0)
 .. D LST2XTMP(INODE)
"RTN","ORWCV",65,0)
 . I $L(PARAM1),$L(PARAM2) D @(ENT_"^"_RTN_"(.LST,DFN,PARAM1,PARAM2)"),LST2XTMP(INODE) Q
"RTN","ORWCV",66,0)
 . I $L(PARAM1) D @(ENT_"^"_RTN_"(.LST,DFN,PARAM1)"),LST2XTMP(INODE) Q
"RTN","ORWCV",67,0)
 . D @(ENT_"^"_RTN_"(.LST,DFN)"),LST2XTMP(INODE)
"RTN","ORWCV",68,0)
 S ^XTMP(NODE,"DONE")=1
"RTN","ORWCV",69,0)
 I $G(^XTMP(NODE,"STOP")) K ^XTMP(NODE)
"RTN","ORWCV",70,0)
 L -^XTMP(NODE)
"RTN","ORWCV",71,0)
 Q
"RTN","ORWCV",72,0)
ERR ;Error trap
"RTN","ORWCV",73,0)
 S $ETRAP="D UNWIND^ORWCV Q"
"RTN","ORWCV",74,0)
 I $D(NODE) D
"RTN","ORWCV",75,0)
 . I $D(INODE) S LST(0)="",LST(1)="0^ERROR DURING COVER SHEET BUILD:"_$ZERROR D LST2XTMP(INODE)
"RTN","ORWCV",76,0)
 . S ^XTMP(NODE,"DONE")=1
"RTN","ORWCV",77,0)
 . L -^XTMP(NODE)
"RTN","ORWCV",78,0)
 D @^%ZOSF("ERRTN") ;file error
"RTN","ORWCV",79,0)
 S $ECODE=",UOR70 error during Cover Sheet build,"
"RTN","ORWCV",80,0)
 Q
"RTN","ORWCV",81,0)
UNWIND ;Unwind Error stack
"RTN","ORWCV",82,0)
 Q:$ESTACK>1  ;pop the stack
"RTN","ORWCV",83,0)
 ;add additional code here, if needed
"RTN","ORWCV",84,0)
 Q
"RTN","ORWCV",85,0)
LST2XTMP(ID) ; put the list in ^XTMP(NODE,ID)
"RTN","ORWCV",86,0)
 I $G(^XTMP(NODE,"STOP")) Q
"RTN","ORWCV",87,0)
 N I
"RTN","ORWCV",88,0)
 I $L($G(DETAIL)) S I=0 F  S I=$O(LST(I)) Q:'I  S $P(LST(I),"^",12)=DETAIL
"RTN","ORWCV",89,0)
 K ^XTMP(NODE,ID) M ^XTMP(NODE,ID)=LST S ^XTMP(NODE,ID)=1 K LST
"RTN","ORWCV",90,0)
 Q
"RTN","ORWCV",91,0)
POLL(LST,DFN,IP,HWND) ; poll for completed cover sheet parts
"RTN","ORWCV",92,0)
 N I,ILST,ID,NODE,DONE
"RTN","ORWCV",93,0)
 S NODE="ORWCV "_IP_"-"_HWND_"-"_DFN,ILST=0,DONE=0
"RTN","ORWCV",94,0)
 I '$D(^XTMP(NODE,"DFN")) Q
"RTN","ORWCV",95,0)
 I ^XTMP(NODE,"DFN")'=DFN S LST(1)="~DONE=1" Q
"RTN","ORWCV",96,0)
 I $G(^XTMP(NODE,"DONE")) S ILST=ILST+1,LST(ILST)="~DONE=1",DONE=1
"RTN","ORWCV",97,0)
 F ID="PROB","CWAD","MEDS","RMND","LABS","VITL","VSIT" D
"RTN","ORWCV",98,0)
 . I '$G(^XTMP(NODE,ID)) Q
"RTN","ORWCV",99,0)
 . S ILST=ILST+1,LST(ILST)="~"_ID
"RTN","ORWCV",100,0)
 . S I=0 F  S I=$O(^XTMP(NODE,ID,I)) Q:'I  S ILST=ILST+1,LST(ILST)="i"_^(I)
"RTN","ORWCV",101,0)
 . K ^XTMP(NODE,ID)
"RTN","ORWCV",102,0)
 ; Stop capacity planning timing clock - was started in START code
"RTN","ORWCV",103,0)
 I DONE K ^XTMP(NODE) I +$G(^KMPTMP("KMPD-CPRS")) S $P(^KMPTMP("KMPDT","ORWCV",NODE),"^",2)=$H
"RTN","ORWCV",104,0)
 Q
"RTN","ORWCV",105,0)
STOP(OK,DFN,IP,HWND) ; stop cover sheet data retrieval
"RTN","ORWCV",106,0)
 S NODE="ORWCV "_IP_"-"_HWND_"-"_DFN,ILST=0,DONE=0
"RTN","ORWCV",107,0)
 S ^XTMP(NODE,"STOP")=1,OK=1
"RTN","ORWCV",108,0)
 L +^XTMP(NODE):$S($G(DILOCKTM)>0:DILOCKTM,1:5)
"RTN","ORWCV",109,0)
 I $G(^XTMP(NODE,"DONE")) K ^XTMP(NODE)
"RTN","ORWCV",110,0)
 L -^XTMP(NODE)
"RTN","ORWCV",111,0)
 Q
"RTN","ORWCV",112,0)
CLEAN ; clean up ^XTMP nodes
"RTN","ORWCV",113,0)
 S X="ORWCV"
"RTN","ORWCV",114,0)
 F  S X=$O(^XTMP(X)) Q:$E(X,1,5)'="ORWCV"  W !,X K ^XTMP(X)
"RTN","ORWCV",115,0)
 Q
"RTN","ORWCV",116,0)
LAB(LST,DFN) ; return labs for patient
"RTN","ORWCV",117,0)
 D:$L($T(STRT2^AWCMCPR1)) STRT2^AWCMCPR1
"RTN","ORWCV",118,0)
 D LIST^ORQOR1(.LST,DFN,"LAB",4,"T-"_$$RNGLAB(DFN),"T","AW",1)
"RTN","ORWCV",119,0)
 D:$L($T(END^AWCMCPR1)) END^AWCMCPR1
"RTN","ORWCV",120,0)
 Q
"RTN","ORWCV",121,0)
 ;
"RTN","ORWCV",122,0)
VST1(ORVISIT,DFN,BEG,END,SKIP) ;
"RTN","ORWCV",123,0)
 N ERR,ERRMSG
"RTN","ORWCV",124,0)
 S ERR=0 ; kludge to return errors
"RTN","ORWCV",125,0)
 Q:'$G(DFN)
"RTN","ORWCV",126,0)
 D VST(.ORVISIT,DFN,.BEG,.END,$G(SKIP),.ERR,.ERRMSG)
"RTN","ORWCV",127,0)
 I ERR K ORVISIT S ORVISIT(1)=ERRMSG
"RTN","ORWCV",128,0)
 Q
"RTN","ORWCV",129,0)
 ;
"RTN","ORWCV",130,0)
TEST ;D VST(.ZZZ,76,2950101,3050401,777,1,1)
"RTN","ORWCV",131,0)
 Q
"RTN","ORWCV",132,0)
VST(ORVISIT,DFN,BEG,END,SKIP,ERR,ERRMSG) ; return appts/admissions for patient
"RTN","ORWCV",133,0)
 N CHECKERR,VAERR,VASD,BDT,COUNT,DTM,EDT,LOC,NOW,ORQUERY,ORLST,STI,STS,TODAY,I,J,K,XI,XE,X
"RTN","ORWCV",134,0)
 S CHECKERR=($G(ERR)=0) ; kludge to check for errors
"RTN","ORWCV",135,0)
 S NOW=$$NOW^XLFDT(),TODAY=$P(NOW,".",1)
"RTN","ORWCV",136,0)
 I '$G(BEG) S BEG=$$X2FM($$RNGVBEG)
"RTN","ORWCV",137,0)
 I '$G(END) S END=$$X2FM($$RNGVEND)+0.2359
"RTN","ORWCV",138,0)
 S COUNT=0
"RTN","ORWCV",139,0)
 K ^TMP("ORVSTLIST",$J)
"RTN","ORWCV",140,0)
 S VAERR=0
"RTN","ORWCV",141,0)
 I END>NOW D   Q:VAERR  ; get future encounters, past cancels/no-shows from VADPT
"RTN","ORWCV",142,0)
 . S VASD("F")=BEG
"RTN","ORWCV",143,0)
 . S VASD("T")=END
"RTN","ORWCV",144,0)
 . S VASD("W")="123456789"
"RTN","ORWCV",145,0)
 . D SDA^ORQRY01(.ERR,.ERRMSG)
"RTN","ORWCV",146,0)
 . I CHECKERR,ERR K ^UTILITY("VASD",$J) S ORVISIT(1)=ERRMSG Q  ;IA 10061
"RTN","ORWCV",147,0)
 . S I=0 F  S I=$O(^UTILITY("VASD",$J,I)) Q:'I  D
"RTN","ORWCV",148,0)
 . . S XI=^UTILITY("VASD",$J,I,"I"),XE=^("E")
"RTN","ORWCV",149,0)
 . . S DTM=$P(XI,U),IEN=$P(XI,U,2),STI=$P(XI,U,3)
"RTN","ORWCV",150,0)
 . . S LOC=$P(XE,U,2),STS=$P(XE,U,3)
"RTN","ORWCV",151,0)
 . . I DTM<TODAY,(STI=""!(STI["I")!(STI="NT")) Q  ; no prior kept appts
"RTN","ORWCV",152,0)
 . . S ^TMP("ORVSTLIST",$J,DTM,"A",1)="A;"_DTM_";"_IEN_U_DTM_U_LOC_U_STS
"RTN","ORWCV",153,0)
 . K ^UTILITY("VASD",$J)
"RTN","ORWCV",154,0)
 I BEG'>NOW D  ;past encounters from ACRP Toolkit - set in CALLBACK
"RTN","ORWCV",155,0)
 . S BDT=BEG
"RTN","ORWCV",156,0)
 . S EDT=$S(END<NOW:END,1:NOW)
"RTN","ORWCV",157,0)
 . D COVER^SDRROR
"RTN","ORWCV",158,0)
 . D OPEN^SDQ(.ORQUERY)
"RTN","ORWCV",159,0)
 . I '$$ERRCHK^SDQUT() D INDEX^SDQ(.ORQUERY,"PATIENT/DATE","SET")
"RTN","ORWCV",160,0)
 . I '$$ERRCHK^SDQUT() D PAT^SDQ(.ORQUERY,DFN,"SET")
"RTN","ORWCV",161,0)
 . I '$$ERRCHK^SDQUT() D DATE^SDQ(.ORQUERY,BDT,EDT,"SET")
"RTN","ORWCV",162,0)
 . I '$$ERRCHK^SDQUT() D
"RTN","ORWCV",163,0)
 . . S ORLST=$NA(^TMP("ORVSTLIST",$J))
"RTN","ORWCV",164,0)
 . . D SCANCB^SDQ(.ORQUERY,"D CALLBACK^ORWCV(Y,Y0,.ORLST,.ORSTOP)","SET")
"RTN","ORWCV",165,0)
 . I '$$ERRCHK^SDQUT() D ACTIVE^SDQ(.ORQUERY,"TRUE","SET")
"RTN","ORWCV",166,0)
 . I '$$ERRCHK^SDQUT() D SCAN^SDQ(.ORQUERY,"FORWARD")
"RTN","ORWCV",167,0)
 . D CLOSE^SDQ(.ORQUERY)
"RTN","ORWCV",168,0)
 ;
"RTN","ORWCV",169,0)
 I '$G(SKIP) D
"RTN","ORWCV",170,0)
 . N TIM,MOV,X0,Y,MTIM,XTYP,XLOC,HLOC,EARLY,DONE                ; admits
"RTN","ORWCV",171,0)
 . S EARLY=$$X2FM($$RNGVBEG),DONE=0
"RTN","ORWCV",172,0)
 . S TIM="" F  S TIM=$O(^DGPM("ATID1",DFN,TIM)) Q:TIM'>0  D  Q:DONE
"RTN","ORWCV",173,0)
 . . S MOV=0  F  S MOV=$O(^DGPM("ATID1",DFN,TIM,MOV)) Q:MOV'>0  D  Q:DONE
"RTN","ORWCV",174,0)
 . . . S X0=^DGPM(MOV,0),MTIM=$P(X0,U)
"RTN","ORWCV",175,0)
 . . . I MTIM<EARLY S DONE=1 Q
"RTN","ORWCV",176,0)
 . . . S XTYP=$P($G(^DG(405.1,+$P(X0,U,4),0)),U,1)
"RTN","ORWCV",177,0)
 . . . S XLOC=$P($G(^DIC(42,+$P(X0,U,6),0)),U,1),HLOC=+$G(^(44))
"RTN","ORWCV",178,0)
 . . . S ^TMP("ORVSTLIST",$J,MTIM,"I",1)="I;"_MTIM_";"_HLOC_U_MTIM_U_"Inpatient Stay"_U_XLOC_U_XTYP
"RTN","ORWCV",179,0)
 ;
"RTN","ORWCV",180,0)
 S COUNT=0
"RTN","ORWCV",181,0)
 S I=0 F  S I=$O(^TMP("ORVSTLIST",$J,I)) Q:'I  D
"RTN","ORWCV",182,0)
 . S J="" F  S J=$O(^TMP("ORVSTLIST",$J,I,J)) Q:J=""  D
"RTN","ORWCV",183,0)
 . . S K=0 F  S K=$O(^TMP("ORVSTLIST",$J,I,J,K)) Q:'K  D
"RTN","ORWCV",184,0)
 . . . S COUNT=COUNT+1
"RTN","ORWCV",185,0)
 . . . S ORVISIT(COUNT)=^TMP("ORVSTLIST",$J,I,J,K)
"RTN","ORWCV",186,0)
 K ^TMP("ORVSTLIST",$J)
"RTN","ORWCV",187,0)
 Q
"RTN","ORWCV",188,0)
CALLBACK(IEN,NODE0,ARRAY,STOP) ; called back from ACRP Toolkit for encounters
"RTN","ORWCV",189,0)
 ;
"RTN","ORWCV",190,0)
 ; IEN and NODE0 relate to Outpatient Encounter File
"RTN","ORWCV",191,0)
 ; set STOP to 1 if need to quit
"RTN","ORWCV",192,0)
 ;
"RTN","ORWCV",193,0)
 N COUNT,DTM,LOC,OOS,TYPE,XSTAT,XLOC
"RTN","ORWCV",194,0)
 S DTM=+NODE0,COUNT=1
"RTN","ORWCV",195,0)
 S LOC=$P(NODE0,"^",4)
"RTN","ORWCV",196,0)
 S XLOC=$P($G(^SC(+LOC,0)),U),OOS=$G(^("OOS"))
"RTN","ORWCV",197,0)
 I OOS Q              ; ignore OOS locations
"RTN","ORWCV",198,0)
 I $P(NODE0,"^",6) Q  ; not parent encounter
"RTN","ORWCV",199,0)
 S XSTAT=$P($G(^SD(409.63,+$P(NODE0,"^",12),0)),"^")
"RTN","ORWCV",200,0)
 S TYPE=$S($P(NODE0,"^",8)=1:"A",1:"V")
"RTN","ORWCV",201,0)
 I TYPE="V",$D(@ARRAY@(DTM,"V")) S COUNT=$O(@ARRAY@(DTM,"V","A"),-1)+1 ; same d/t
"RTN","ORWCV",202,0)
 S @ARRAY@(DTM,TYPE,COUNT)=TYPE_";"_DTM_";"_LOC_U_DTM_U_XLOC_U_XSTAT
"RTN","ORWCV",203,0)
 Q
"RTN","ORWCV",204,0)
DTLVST(RPT,DFN,IEN,APPTINFO) ; return progress notes / discharge summary
"RTN","ORWCV",205,0)
 N VISIT
"RTN","ORWCV",206,0)
 I $P(APPTINFO,";")="A" D  Q
"RTN","ORWCV",207,0)
 . S VISIT=$$APPT2VST^PXAPI(DFN,$P(APPTINFO,";",2),$P(APPTINFO,";",3))
"RTN","ORWCV",208,0)
 . I VISIT=0 S VISIT=+$$GETENC^PXAPI(DFN,$P(APPTINFO,";",2),$P(APPTINFO,";",3))
"RTN","ORWCV",209,0)
 . D DETNOTE^ORQQVS(.RPT,DFN,VISIT)
"RTN","ORWCV",210,0)
 . N X1,X2 S (X1,X2)=0 F  S X1=$O(RPT(X1)) Q:X1'>0  S X2=X1  ;get the last entry in the RPT list
"RTN","ORWCV",211,0)
 . I X2'>0 S X2=1
"RTN","ORWCV",212,0)
 . N XSD,XSDDT,SDURL
"RTN","ORWCV",213,0)
 . S XSD=$P(APPTINFO,";",3),XSDDT=$P(APPTINFO,";",2) ;look up the entry in the appointment multiple and get the url
"RTN","ORWCV",214,0)
 . Q:'$D(^SC($G(XSD),0))  ; No clinic
"RTN","ORWCV",215,0)
 . Q:'$D(^SC($G(XSD),"S",XSDDT))  ; No appointment at that time
"RTN","ORWCV",216,0)
 . K XX1 S XX1=0 F  S XX1=$O(^SC(XSD,"S",XSDDT,1,XX1)) Q:$G(XX1)'>0  D
"RTN","ORWCV",217,0)
 . . Q:$P(^SC(XSD,"S",XSDDT,1,XX1,0),"^",1)'=DFN
"RTN","ORWCV",218,0)
 . . Q:$G(SDURL)'=""
"RTN","ORWCV",219,0)
 . . S SDURL=$G(^SC(XSD,"S",XSDDT,1,XX1,"URL"))
"RTN","ORWCV",220,0)
 . S RPT(X2)=$G(SDURL)
"RTN","ORWCV",221,0)
 . K XSD,XSDDT,SDURL
"RTN","ORWCV",222,0)
 I $P(APPTINFO,";")="V" D  Q
"RTN","ORWCV",223,0)
 . S VISIT=+$$GETENC^PXAPI(DFN,$P(APPTINFO,";",2),$P(APPTINFO,";",3))
"RTN","ORWCV",224,0)
 . D DETNOTE^ORQQVS(.RPT,DFN,VISIT)
"RTN","ORWCV",225,0)
 I $P(APPTINFO,";")="I" D  Q
"RTN","ORWCV",226,0)
 . S VISIT=+$$GETENC^PXAPI(DFN,$P(APPTINFO,";",2),$P(APPTINFO,";",3))
"RTN","ORWCV",227,0)
 . D DETSUM^ORQQVS(.RPT,DFN,VISIT)
"RTN","ORWCV",228,0)
 . K ^TMP("PXKENC",$J)
"RTN","ORWCV",229,0)
 I $P(APPTINFO,";")="R" D RCDTL^SDRROR
"RTN","ORWCV",230,0)
 Q
"RTN","ORWCV",231,0)
X2FM(X) ; return FM date given relative date
"RTN","ORWCV",232,0)
 N %DT S %DT="TS" D ^%DT
"RTN","ORWCV",233,0)
 Q Y
"RTN","ORWCV",234,0)
RNGLAB(DFN) ; return days back for patient
"RTN","ORWCV",235,0)
 N INPT,PAR,LOC
"RTN","ORWCV",236,0)
 S INPT=0 I $L($G(^DPT(DFN,.1))) S INPT=1,LOC=^(.1)
"RTN","ORWCV",237,0)
 S PAR="ORQQLR DATE RANGE "_$S(INPT:"INPT",1:"OUTPT")
"RTN","ORWCV",238,0)
 Q $$GET^XPAR("ALL"_$S(INPT:"^LOC."_LOC,1:""),PAR,1,"I")
"RTN","ORWCV",239,0)
 ;
"RTN","ORWCV",240,0)
RNGVBEG() ; return start date for encounters
"RTN","ORWCV",241,0)
 Q $$GET^XPAR("ALL","ORQQCSDR CS RANGE START",1,"I")
"RTN","ORWCV",242,0)
 ;
"RTN","ORWCV",243,0)
RNGVEND() ; return stop date for encounters
"RTN","ORWCV",244,0)
 Q $$GET^XPAR("ALL","ORQQCSDR CS RANGE STOP",1,"I")
"RTN","ORWCV",245,0)
 ;
"RTN","ORWCV",246,0)
RANGES(REC,DFN) ; return ranges given a patient
"RTN","ORWCV",247,0)
 N REC
"RTN","ORWCV",248,0)
 S REC=$$RNGLAB(DFN)_U_$$RNGVBEG_U_$$RNGVEND
"RTN","ORWCV",249,0)
 Q
"VER")
8.0^22.2
"BLD",11393,6)
^429
**END**
**END**

