KIDS Distribution saved on Jun 13, 2014@12:54:26
OR*3.0*361
**KIDS**:OR*3.0*361^

**INSTALL NAME**
OR*3.0*361
"BLD",8828,0)
OR*3.0*361^ORDER ENTRY/RESULTS REPORTING^0^3140613^y
"BLD",8828,1,0)
^^2^2^3121220^
"BLD",8828,1,1,0)
The description of this patch may be found in the National Patch Module
"BLD",8828,1,2,0)
under OR*3*361.
"BLD",8828,4,0)
^9.64PA^^
"BLD",8828,6)
3^
"BLD",8828,6.3)
39
"BLD",8828,"ABPKG")
n
"BLD",8828,"INIT")
POST^ORY361
"BLD",8828,"KRN",0)
^9.67PA^779.2^20
"BLD",8828,"KRN",.4,0)
.4
"BLD",8828,"KRN",.401,0)
.401
"BLD",8828,"KRN",.402,0)
.402
"BLD",8828,"KRN",.403,0)
.403
"BLD",8828,"KRN",.5,0)
.5
"BLD",8828,"KRN",.84,0)
.84
"BLD",8828,"KRN",3.6,0)
3.6
"BLD",8828,"KRN",3.8,0)
3.8
"BLD",8828,"KRN",9.2,0)
9.2
"BLD",8828,"KRN",9.8,0)
9.8
"BLD",8828,"KRN",9.8,"NM",0)
^9.68A^30^28
"BLD",8828,"KRN",9.8,"NM",2,0)
ORWPCE^^0^B60062605
"BLD",8828,"KRN",9.8,"NM",3,0)
ORWPCE1^^0^B71259369
"BLD",8828,"KRN",9.8,"NM",4,0)
ORQQPL^^0^B30115835
"BLD",8828,"KRN",9.8,"NM",5,0)
ORQQPL2^^0^B37792053
"BLD",8828,"KRN",9.8,"NM",6,0)
ORQQPL3^^0^B68312739
"BLD",8828,"KRN",9.8,"NM",7,0)
ORQQPL1^^0^B97265691
"BLD",8828,"KRN",9.8,"NM",8,0)
ORAM1^^0^B166176086
"BLD",8828,"KRN",9.8,"NM",9,0)
ORQ2^^0^B60457146
"BLD",8828,"KRN",9.8,"NM",10,0)
ORAM2^^0^B144805795
"BLD",8828,"KRN",9.8,"NM",11,0)
ORAMSET^^0^B43363006
"BLD",8828,"KRN",9.8,"NM",12,0)
ORAMX^^0^B164083781
"BLD",8828,"KRN",9.8,"NM",13,0)
ORCDGMRC^^0^B41619023
"BLD",8828,"KRN",9.8,"NM",14,0)
ORCMGMCK^^0^B38936285
"BLD",8828,"KRN",9.8,"NM",15,0)
ORQ21^^0^B35230929
"BLD",8828,"KRN",9.8,"NM",16,0)
ORWDBA1^^0^B58940047
"BLD",8828,"KRN",9.8,"NM",17,0)
ORWDBA2^^0^B28669388
"BLD",8828,"KRN",9.8,"NM",18,0)
ORWDBA3^^0^B40814216
"BLD",8828,"KRN",9.8,"NM",19,0)
ORWDBA4^^0^B10287761
"BLD",8828,"KRN",9.8,"NM",20,0)
ORWDBA7^^0^B19319125
"BLD",8828,"KRN",9.8,"NM",21,0)
ORWGAPIA^^0^B38611591
"BLD",8828,"KRN",9.8,"NM",22,0)
ORWPCE2^^0^B51147724
"BLD",8828,"KRN",9.8,"NM",23,0)
ORWPCE3^^0^B58956270
"BLD",8828,"KRN",9.8,"NM",24,0)
ORWIB^^1^
"BLD",8828,"KRN",9.8,"NM",25,0)
ORQQPL4^^0^B12182023
"BLD",8828,"KRN",9.8,"NM",27,0)
ORDV04^^0^B78115705
"BLD",8828,"KRN",9.8,"NM",28,0)
ORWPCE4^^0^B18602559
"BLD",8828,"KRN",9.8,"NM",29,0)
ORY361^^0^B8049239
"BLD",8828,"KRN",9.8,"NM",30,0)
ORMBLDGM^^0^B5907339
"BLD",8828,"KRN",9.8,"NM","B","ORAM1",8)

"BLD",8828,"KRN",9.8,"NM","B","ORAM2",10)

"BLD",8828,"KRN",9.8,"NM","B","ORAMSET",11)

"BLD",8828,"KRN",9.8,"NM","B","ORAMX",12)

"BLD",8828,"KRN",9.8,"NM","B","ORCDGMRC",13)

"BLD",8828,"KRN",9.8,"NM","B","ORCMGMCK",14)

"BLD",8828,"KRN",9.8,"NM","B","ORDV04",27)

"BLD",8828,"KRN",9.8,"NM","B","ORMBLDGM",30)

"BLD",8828,"KRN",9.8,"NM","B","ORQ2",9)

"BLD",8828,"KRN",9.8,"NM","B","ORQ21",15)

"BLD",8828,"KRN",9.8,"NM","B","ORQQPL",4)

"BLD",8828,"KRN",9.8,"NM","B","ORQQPL1",7)

"BLD",8828,"KRN",9.8,"NM","B","ORQQPL2",5)

"BLD",8828,"KRN",9.8,"NM","B","ORQQPL3",6)

"BLD",8828,"KRN",9.8,"NM","B","ORQQPL4",25)

"BLD",8828,"KRN",9.8,"NM","B","ORWDBA1",16)

"BLD",8828,"KRN",9.8,"NM","B","ORWDBA2",17)

"BLD",8828,"KRN",9.8,"NM","B","ORWDBA3",18)

"BLD",8828,"KRN",9.8,"NM","B","ORWDBA4",19)

"BLD",8828,"KRN",9.8,"NM","B","ORWDBA7",20)

"BLD",8828,"KRN",9.8,"NM","B","ORWGAPIA",21)

"BLD",8828,"KRN",9.8,"NM","B","ORWIB",24)

"BLD",8828,"KRN",9.8,"NM","B","ORWPCE",2)

"BLD",8828,"KRN",9.8,"NM","B","ORWPCE1",3)

"BLD",8828,"KRN",9.8,"NM","B","ORWPCE2",22)

"BLD",8828,"KRN",9.8,"NM","B","ORWPCE3",23)

"BLD",8828,"KRN",9.8,"NM","B","ORWPCE4",28)

"BLD",8828,"KRN",9.8,"NM","B","ORY361",29)

"BLD",8828,"KRN",19,0)
19
"BLD",8828,"KRN",19.1,0)
19.1
"BLD",8828,"KRN",101,0)
101
"BLD",8828,"KRN",409.61,0)
409.61
"BLD",8828,"KRN",771,0)
771
"BLD",8828,"KRN",779.2,0)
779.2
"BLD",8828,"KRN",870,0)
870
"BLD",8828,"KRN",8989.51,0)
8989.51
"BLD",8828,"KRN",8989.52,0)
8989.52
"BLD",8828,"KRN",8994,0)
8994
"BLD",8828,"KRN","B",.4,.4)

"BLD",8828,"KRN","B",.401,.401)

"BLD",8828,"KRN","B",.402,.402)

"BLD",8828,"KRN","B",.403,.403)

"BLD",8828,"KRN","B",.5,.5)

"BLD",8828,"KRN","B",.84,.84)

"BLD",8828,"KRN","B",3.6,3.6)

"BLD",8828,"KRN","B",3.8,3.8)

"BLD",8828,"KRN","B",9.2,9.2)

"BLD",8828,"KRN","B",9.8,9.8)

"BLD",8828,"KRN","B",19,19)

"BLD",8828,"KRN","B",19.1,19.1)

"BLD",8828,"KRN","B",101,101)

"BLD",8828,"KRN","B",409.61,409.61)

"BLD",8828,"KRN","B",771,771)

"BLD",8828,"KRN","B",779.2,779.2)

"BLD",8828,"KRN","B",870,870)

"BLD",8828,"KRN","B",8989.51,8989.51)

"BLD",8828,"KRN","B",8989.52,8989.52)

"BLD",8828,"KRN","B",8994,8994)

"BLD",8828,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",8828,"QUES",0)
^9.62^^
"BLD",8828,"REQB",0)
^9.611^11^11
"BLD",8828,"REQB",1,0)
OR*3.0*306^2
"BLD",8828,"REQB",2,0)
GMPL*2.0*42^2
"BLD",8828,"REQB",3,0)
OR*3.0*346^2
"BLD",8828,"REQB",4,0)
OR*3.0*351^2
"BLD",8828,"REQB",5,0)
LEX*2.0*80^2
"BLD",8828,"REQB",6,0)
ICD*18.0*57^2
"BLD",8828,"REQB",7,0)
OR*3.0*354^2
"BLD",8828,"REQB",8,0)
OR*3.0*181^2
"BLD",8828,"REQB",9,0)
OR*3.0*371^2
"BLD",8828,"REQB",10,0)
IBD*3.0*63^2
"BLD",8828,"REQB",11,0)
OR*3.0*372^2
"BLD",8828,"REQB","B","GMPL*2.0*42",2)

"BLD",8828,"REQB","B","IBD*3.0*63",10)

"BLD",8828,"REQB","B","ICD*18.0*57",6)

"BLD",8828,"REQB","B","LEX*2.0*80",5)

"BLD",8828,"REQB","B","OR*3.0*181",8)

"BLD",8828,"REQB","B","OR*3.0*306",1)

"BLD",8828,"REQB","B","OR*3.0*346",3)

"BLD",8828,"REQB","B","OR*3.0*351",4)

"BLD",8828,"REQB","B","OR*3.0*354",7)

"BLD",8828,"REQB","B","OR*3.0*371",9)

"BLD",8828,"REQB","B","OR*3.0*372",11)

"INIT")
POST^ORY361
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"PKG",110,-1)
1^1
"PKG",110,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",110,20,0)
^9.402P^^
"PKG",110,22,0)
^9.49I^1^1
"PKG",110,22,1,0)
3.0^2971217
"PKG",110,22,1,"PAH",1,0)
361^3140613^123456789163
"PKG",110,22,1,"PAH",1,1,0)
^^2^2^3140613
"PKG",110,22,1,"PAH",1,1,1,0)
The description of this patch may be found in the National Patch Module
"PKG",110,22,1,"PAH",1,1,2,0)
under OR*3*361.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
28
"RTN","ORAM1")
0^8^B166176086
"RTN","ORAM1",1,0)
ORAM1 ;POR/RSF - ANTICOAGULATION MANAGEMENT RPCS (2 of 4) ;01/16/13  08:30
"RTN","ORAM1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**307,339,351,361**;Dec 17, 1997;Build 39
"RTN","ORAM1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","ORAM1",4,0)
 Q
"RTN","ORAM1",5,0)
 ;
"RTN","ORAM1",6,0)
 ;  External References:
"RTN","ORAM1",7,0)
 ;  $$EXTERNAL^DILFD     ICR #2055
"RTN","ORAM1",8,0)
 ;  $$FMTE/$$NOW^XLFDT   ICR #10103
"RTN","ORAM1",9,0)
 ;  $$GET^XPAR           ICR #2263
"RTN","ORAM1",10,0)
 ;
"RTN","ORAM1",11,0)
TERASE(RESULT,ORAMDFN,ORAMCOMP) ; Manage Team Lists
"RTN","ORAM1",12,0)
 N ORAMKEY,ORAMTMP,ORAMCEY,ORAMCLIN,ORAMCLNM,ORAMCOM,ORAMALL,ORAMCPLX,ORAMENT,QQ,DA,DIK,D0
"RTN","ORAM1",13,0)
 Q:'+$G(ORAMDFN)
"RTN","ORAM1",14,0)
 S ORAMCLIN=+$P($G(^ORAM(103,ORAMDFN,6)),U,2),ORAMENT=$S(+ORAMCLIN>0:ORAMCLIN_";SC(",1:"ALL")
"RTN","ORAM1",15,0)
 I +ORAMCLIN S ORAMCLNM=$$EXTERNAL^DILFD(103,101,"",ORAMCLIN)
"RTN","ORAM1",16,0)
 S ORAMALL=$$GET^XPAR(ORAMENT,"ORAM TEAM LIST (ALL)",1,"I"),ORAMCPLX=$$GET^XPAR(ORAMENT,"ORAM TEAM LIST (COMPLEX)",1,"I")
"RTN","ORAM1",17,0)
 I +$G(ORAMALL) D  I 1
"RTN","ORAM1",18,0)
 . S DA(1)=ORAMALL,DIK="^OR(100.21"_","_DA(1)_",10,"
"RTN","ORAM1",19,0)
 . S ORAMTMP=ORAMDFN_";DPT("
"RTN","ORAM1",20,0)
 . S ORAMKEY=$O(^OR(100.21,ORAMALL,10,"B",ORAMTMP,0)) Q:+ORAMKEY'>0  S DA=ORAMKEY
"RTN","ORAM1",21,0)
 . D ^DIK
"RTN","ORAM1",22,0)
 . K DA,DIK
"RTN","ORAM1",23,0)
 . K D0
"RTN","ORAM1",24,0)
 . S RESULT=1
"RTN","ORAM1",25,0)
 E  S RESULT="0^ORAM TEAM LIST (ALL) not defined for Clinic "_ORAMCLNM_"."
"RTN","ORAM1",26,0)
 I +$G(ORAMCPLX) D  I 1
"RTN","ORAM1",27,0)
 . S DA(1)=ORAMCPLX,DIK="^OR(100.21"_","_DA(1)_",10,"
"RTN","ORAM1",28,0)
 . S ORAMCEY=$O(^OR(100.21,ORAMCPLX,10,"B",ORAMTMP,0)) Q:+ORAMCEY'>0  S DA=ORAMCEY
"RTN","ORAM1",29,0)
 . D ^DIK
"RTN","ORAM1",30,0)
 . K DA,DIK
"RTN","ORAM1",31,0)
 . S:'$D(RESULT) RESULT=1
"RTN","ORAM1",32,0)
 E  S RESULT="0^ORAM TEAM LIST (COMPLEX) not defined for Clinic "_ORAMCLNM_"."
"RTN","ORAM1",33,0)
 Q
"RTN","ORAM1",34,0)
 ;
"RTN","ORAM1",35,0)
 ;ICDCODE(RESULT,ICODE); Map ICD Code //REMOVED BECAUSE OF DIRECT READ OF ^ICD9( FILE
"RTN","ORAM1",36,0)
 ;N ORAMICD
"RTN","ORAM1",37,0)
 ;S ORAMICD=ICODE_" "
"RTN","ORAM1",38,0)
 ;S RESULT=$O(^ICD9("AB",ORAMICD,0))
"RTN","ORAM1",39,0)
 ;Q
"RTN","ORAM1",40,0)
 ;
"RTN","ORAM1",41,0)
PTCHECK(RESULT,ORAMDFN) ; CHECKS TO SEE IF PT IS IN FILE
"RTN","ORAM1",42,0)
 N ORPTLOC
"RTN","ORAM1",43,0)
 Q:'+$G(ORAMDFN)
"RTN","ORAM1",44,0)
 S RESULT=0
"RTN","ORAM1",45,0)
 I $S('$D(^ORAM(103,ORAMDFN)):1,+$O(^ORAM(103,ORAMDFN,3,0))'>0:1,1:0) S RESULT=1 Q
"RTN","ORAM1",46,0)
 S ORPTLOC=$P($G(^ORAM(103,ORAMDFN,6)),U,2)
"RTN","ORAM1",47,0)
 I ORPTLOC']"" S RESULT=2 Q
"RTN","ORAM1",48,0)
 I +ORPTLOC,'$L($$GET^XPAR(ORPTLOC_";SC(^DIV.`"_DUZ(2),"ORAM CLINIC NAME",1,"I")) S RESULT=99
"RTN","ORAM1",49,0)
 Q
"RTN","ORAM1",50,0)
 ;
"RTN","ORAM1",51,0)
PTENTER(RESULT,DFN) ; ENTERS PATIENT INTO FILE WITH ALL DATES = TODAY
"RTN","ORAM1",52,0)
 N DO,DD,DIC,DINUM,X
"RTN","ORAM1",53,0)
 S DIC="^ORAM(103,"
"RTN","ORAM1",54,0)
 S DIC(0)="Z"
"RTN","ORAM1",55,0)
 S (DINUM,X)=DFN
"RTN","ORAM1",56,0)
 D FILE^DICN
"RTN","ORAM1",57,0)
 K DO,DD
"RTN","ORAM1",58,0)
 S RESULT=1
"RTN","ORAM1",59,0)
 Q
"RTN","ORAM1",60,0)
 ;
"RTN","ORAM1",61,0)
ACDATA(RESULT,DFN) ; HEADING DATA
"RTN","ORAM1",62,0)
 N ORAMSTOT,ORAMRTOT,ORAMRAT,ORAMMSGT,ORAMRAT,ORAMBRT,ORAMX,ORI,ORLINE
"RTN","ORAM1",63,0)
 N ORAMD0,ORAMD4,ORAMD5,ORAMD6,ORAMD9,ORAMD15,ORAMD17,ORAMD18
"RTN","ORAM1",64,0)
 N ORAMT4,ORAMT5,ORAMT6,ORAMT9,ORAMT15,ORAMT17,ORAMT18
"RTN","ORAM1",65,0)
 S ORAMX=0
"RTN","ORAM1",66,0)
 I '$D(^ORAM(103,DFN)) D  ;IF NOT IN FILE ALREADY...
"RTN","ORAM1",67,0)
 . N DD,DIC,DINUM,DO,X
"RTN","ORAM1",68,0)
 . S DIC="^ORAM(103,"
"RTN","ORAM1",69,0)
 . S DIC(0)="Z"
"RTN","ORAM1",70,0)
 . S (DINUM,X)=DFN
"RTN","ORAM1",71,0)
 . D FILE^DICN
"RTN","ORAM1",72,0)
 . K DO,DD
"RTN","ORAM1",73,0)
 . S ORAMX=1
"RTN","ORAM1",74,0)
 I ORAMX=1 S RESULT(0)=0 G ACDATAQ
"RTN","ORAM1",75,0)
 S ORAMD0=^ORAM(103,DFN,0)
"RTN","ORAM1",76,0)
 S ORI=0 F  S ORI=$O(^ORAM(103,DFN,1,ORI)) Q:+ORI'>0  S ORLINE=$G(^ORAM(103,DFN,1,ORI,0)) S:ORLINE="" ORLINE=" " S ORAMSTOT=$G(ORAMSTOT)_U_ORLINE
"RTN","ORAM1",77,0)
 S ORI=0 F  S ORI=$O(^ORAM(103,DFN,2,ORI)) Q:+ORI'>0  S ORLINE=$G(^ORAM(103,DFN,2,ORI,0)) S:ORLINE="" ORLINE=" " S ORAMRTOT=$G(ORAMRTOT)_U_ORLINE
"RTN","ORAM1",78,0)
 S ORI=0 F  S ORI=$O(^ORAM(103,DFN,4,ORI)) Q:+ORI'>0  S ORLINE=$G(^ORAM(103,DFN,4,ORI,0)) S:ORLINE="" ORLINE=" " S ORAMMSGT=$G(ORAMMSGT)_U_ORLINE
"RTN","ORAM1",79,0)
 S ORI=0 F  S ORI=$O(^ORAM(103,DFN,5,ORI)) Q:+ORI'>0  S ORLINE=$G(^ORAM(103,DFN,5,ORI,0)) S:ORLINE="" ORLINE=" " S ORAMRAT=$G(ORAMRAT)_U_ORLINE
"RTN","ORAM1",80,0)
 S ORI=0 F  S ORI=$O(^ORAM(103,DFN,7,ORI)) Q:+ORI'>0  S ORLINE=$G(^ORAM(103,DFN,7,ORI,0)) S:ORLINE="" ORLINE=" " S ORAMBRT=$G(ORAMBRT)_U_ORLINE
"RTN","ORAM1",81,0)
 S RESULT(0)=$G(ORAMSTOT)
"RTN","ORAM1",82,0)
 S RESULT(1)=$G(ORAMRTOT)
"RTN","ORAM1",83,0)
 S RESULT(2)=$G(ORAMMSGT)
"RTN","ORAM1",84,0)
 S RESULT(4)=$G(ORAMRAT)
"RTN","ORAM1",85,0)
 S RESULT(5)=$S($G(ORAMBRT)]"":$P($G(^ORAM(103,DFN,6)),"^",5)_"^"_$P($G(ORAMBRT),"^",2,99),1:"")
"RTN","ORAM1",86,0)
 S ORAMD4=$P(ORAMD0,"^",4),ORAMD5=$P(ORAMD0,"^",5),ORAMD6=$P(ORAMD0,"^",6),ORAMD9=$P(ORAMD0,"^",9),ORAMD15=$P(ORAMD0,"^",15),ORAMD17=$P(ORAMD0,"^",17),ORAMD18=$P(ORAMD0,"^",18)
"RTN","ORAM1",87,0)
 S ORAMT4=$$FMTE^XLFDT($E($G(ORAMD4),1,12),"2P"),ORAMT5=$$FMTE^XLFDT($E($G(ORAMD5),1,12),"2P"),ORAMT6=$$FMTE^XLFDT($E($G(ORAMD6),1,12),"2P"),ORAMT9=$$FMTE^XLFDT($E($G(ORAMD9),1,12),"2P")
"RTN","ORAM1",88,0)
 S ORAMT15=$$FMTE^XLFDT($E($G(ORAMD15),1,12),"2P"),ORAMT17=$$FMTE^XLFDT($E($G(ORAMD17),1,12),"2P"),ORAMT18=$$FMTE^XLFDT($E($G(ORAMD18),1,12),"2P")
"RTN","ORAM1",89,0)
 S:$L($P(ORAMT4,"/",1))=1 $P(ORAMT4,"/",1)="0"_$P(ORAMT4,"/",1)
"RTN","ORAM1",90,0)
 S:$L($P(ORAMT4,"/",2))=1 $P(ORAMT4,"/",2)="0"_$P(ORAMT4,"/",2)
"RTN","ORAM1",91,0)
 S:$L($P(ORAMT15,"/",1))=1 $P(ORAMT15,"/",1)="0"_$P(ORAMT15,"/",1)
"RTN","ORAM1",92,0)
 S:$L($P(ORAMT15,"/",2))=1 $P(ORAMT15,"/",2)="0"_$P(ORAMT15,"/",2)
"RTN","ORAM1",93,0)
 S:$L($P(ORAMT17,"/",1))=1 $P(ORAMT17,"/",1)="0"_$P(ORAMT17,"/",1)
"RTN","ORAM1",94,0)
 S:$L($P(ORAMT17,"/",2))=1 $P(ORAMT17,"/",2)="0"_$P(ORAMT17,"/",2)
"RTN","ORAM1",95,0)
 S:$L($P(ORAMT18,"/",1))=1 $P(ORAMT18,"/",1)="0"_$P(ORAMT18,"/",1)
"RTN","ORAM1",96,0)
 S:$L($P(ORAMT18,"/",2))=1 $P(ORAMT18,"/",2)="0"_$P(ORAMT18,"/",2)
"RTN","ORAM1",97,0)
 S $P(ORAMD0,"^",4)=$G(ORAMT4),$P(ORAMD0,"^",5)=$G(ORAMT5),$P(ORAMD0,"^",6)=$G(ORAMT6),$P(ORAMD0,"^",9)=$G(ORAMT9),$P(ORAMD0,"^",15)=$G(ORAMT15),$P(ORAMD0,"^",17)=$G(ORAMT17),$P(ORAMD0,"^",18)=$G(ORAMT18)
"RTN","ORAM1",98,0)
 S RESULT(3)=ORAMD0 S:$D(^ORAM(103,DFN,6)) RESULT(3)=RESULT(3)_"^"_$P(^ORAM(103,DFN,6),"^")
"RTN","ORAM1",99,0)
ACDATAQ Q
"RTN","ORAM1",100,0)
 ;
"RTN","ORAM1",101,0)
ADDTOP(RESULT,TOPARR) ; File ANTICOAG data
"RTN","ORAM1",102,0)
 N ORAM0,SI,RISK,PEEP,ORAMSIL,ORAMRL,ORAMPEPL,ORAMDAY,ORAMST,ORAMBACK,ORAMSTP,ORAMOR,ORAMFB,ORAMREM,ORAMRML,ORAMR,ORAMC
"RTN","ORAM1",103,0)
 N ORAMBRG,ORAMBRGC,ORAMBRGL,ORAMLOC,OLDRTN,DFN,R,X,FDA
"RTN","ORAM1",104,0)
 D NOW^%DTC S ORAMDAY=X
"RTN","ORAM1",105,0)
 S DFN=TOPARR(0),ORAM0=TOPARR(1),SI=TOPARR(2),RISK=TOPARR(3),PEEP=TOPARR(4),ORAMREM=TOPARR(5)
"RTN","ORAM1",106,0)
 S ORAMBRG=$G(TOPARR(6)),ORAMBRGC=$G(TOPARR(7)),ORAMLOC=$G(TOPARR(8))
"RTN","ORAM1",107,0)
 S OLDRTN=$P($G(^ORAM(103,DFN,0)),"^",4)
"RTN","ORAM1",108,0)
 I SI'="" K ^ORAM(103,DFN,1) S ORAMSIL=$L(SI,"^"),^ORAM(103,DFN,1,0)="^^"_ORAMSIL_"^"_ORAMSIL_"^"_ORAMDAY_"^" F R=1:1:ORAMSIL D
"RTN","ORAM1",109,0)
 . S ^ORAM(103,DFN,1,R,0)=$P(SI,"^",R)
"RTN","ORAM1",110,0)
 I RISK'="" K ^ORAM(103,DFN,2) S ORAMRL=$L(RISK,"^"),^ORAM(103,DFN,2,0)="^^"_ORAMRL_"^"_ORAMRL_"^"_ORAMDAY_"^" F R=1:1:ORAMRL D
"RTN","ORAM1",111,0)
 . S ^ORAM(103,DFN,2,R,0)=$P(RISK,"^",R)
"RTN","ORAM1",112,0)
 I PEEP'="" K ^ORAM(103,DFN,4) S ORAMPEPL=$L(PEEP,"^"),^ORAM(103,DFN,4,0)="^^"_ORAMPEPL_"^"_ORAMPEPL_"^"_ORAMDAY_"^" F R=1:1:ORAMPEPL D
"RTN","ORAM1",113,0)
 . S ^ORAM(103,DFN,4,R,0)=$P(PEEP,"^",R)
"RTN","ORAM1",114,0)
 K ^ORAM(103,DFN,5)
"RTN","ORAM1",115,0)
 I ORAMREM'="" D
"RTN","ORAM1",116,0)
 . S ORAMRML=$L(ORAMREM,"^"),^ORAM(103,DFN,5,0)="^^"_ORAMRML_"^"_ORAMRML_"^"_ORAMDAY_"^"
"RTN","ORAM1",117,0)
 . F R=1:1:ORAMRML S ^ORAM(103,DFN,5,R,0)=$P(ORAMREM,"^",R)
"RTN","ORAM1",118,0)
 ;*351 Use Fileman so x-ref updates.
"RTN","ORAM1",119,0)
 S:ORAMLOC>0 FDA(1,103,DFN_",",101)=ORAMLOC
"RTN","ORAM1",120,0)
 S FDA(1,103,DFN_",",111)=+ORAMBRG
"RTN","ORAM1",121,0)
 D UPDATE^DIE(,"FDA(1)")
"RTN","ORAM1",122,0)
 I +ORAMBRG,(ORAMBRGC]"") D
"RTN","ORAM1",123,0)
 . K ^ORAM(103,DFN,7)
"RTN","ORAM1",124,0)
 . S ORAMBRGL=$L(ORAMBRGC,"^"),^ORAM(103,DFN,7,0)="^^"_ORAMBRGL_"^"_ORAMBRGL_"^"_ORAMDAY_"^"
"RTN","ORAM1",125,0)
 . F R=1:1:ORAMBRGL S ^ORAM(103,DFN,7,R,0)=$P(ORAMBRGC,"^",R)
"RTN","ORAM1",126,0)
 I $P($G(ORAM0),"^",4)'="" S X="",ORAMBACK=$P(ORAM0,"^",4) D DT^DILF("TS",ORAMBACK,.X) S $P(ORAM0,"^",4)=X
"RTN","ORAM1",127,0)
 I $P($G(ORAM0),"^",15)'="" S X="",ORAMFB=$P(ORAM0,"^",15) D DT^DILF(,ORAMFB,.X) S $P(ORAM0,"^",15)=X
"RTN","ORAM1",128,0)
 I $P($G(ORAM0),"^",17)'="" S X="",ORAMC=$P(ORAM0,"^",17) D DT^DILF(,ORAMC,.X) S $P(ORAM0,"^",17)=X
"RTN","ORAM1",129,0)
 I $P($G(ORAM0),"^",18)'="" S X="",ORAMR=$P(ORAM0,"^",18) D DT^DILF(,ORAMR,.X) S $P(ORAM0,"^",18)=X
"RTN","ORAM1",130,0)
 I OLDRTN'="" K ^ORAM(103,"L",OLDRTN,DFN)
"RTN","ORAM1",131,0)
 S ^ORAM(103,DFN,0)=ORAM0 S:$P($G(ORAM0),"^",4)'="" ^ORAM(103,"L",$P(ORAM0,"^",4),DFN)=""
"RTN","ORAM1",132,0)
 I $P(^ORAM(103,DFN,0),"^",13)="" S $P(^ORAM(103,DFN,0),"^",13)="SAVE"
"RTN","ORAM1",133,0)
 Q
"RTN","ORAM1",134,0)
 ;
"RTN","ORAM1",135,0)
OUTINR(RESULT,ORAMINR) ; INR VALUES FROM OUTSIDE LAB
"RTN","ORAM1",136,0)
 N ORAMLEN,ORAMPI,ORAMRI,ORAMZANY,ORAMHDT,ORAMNDT
"RTN","ORAM1",137,0)
 S ORAMLEN=$L($G(ORAMINR),"^"),ORAMRI=0
"RTN","ORAM1",138,0)
 F ORAMPI=1:2:ORAMLEN D
"RTN","ORAM1",139,0)
 . N %H,ORAMDT,X
"RTN","ORAM1",140,0)
 . S ORAMDT=$P(ORAMINR,"^",ORAMPI+1) I $L(ORAMDT) D DT^DILF("E",ORAMDT,.ORAMZANY) S X=ORAMZANY D H^%DTC S ORAMHDT=%H,ORAMNDT=$$FMTE^XLFDT(X,"2P")
"RTN","ORAM1",141,0)
 . I $L(ORAMDT) S RESULT(ORAMRI)=$P(ORAMINR,"^",ORAMPI)_"^"_$G(ORAMHDT)_"^"_$G(ORAMNDT)
"RTN","ORAM1",142,0)
 . E  S RESULT(ORAMRI)="^^"
"RTN","ORAM1",143,0)
 . S ORAMRI=ORAMRI+1
"RTN","ORAM1",144,0)
 Q
"RTN","ORAM1",145,0)
 ;
"RTN","ORAM1",146,0)
PCGOAL(RESULT,DFN,CMPLX) ; % of time Pt in current goal
"RTN","ORAM1",147,0)
 N ORAMSNO,ORAMPC,R,ORAMGOOD,ORAMDATE
"RTN","ORAM1",148,0)
 S R=0,ORAMGOOD=0,ORAMDATE=0
"RTN","ORAM1",149,0)
 S ORAMSNO=0 F  S ORAMSNO=$O(^ORAM(103,DFN,3,ORAMSNO)) Q:'ORAMSNO  D
"RTN","ORAM1",150,0)
 . N ORAMD0,ORAMINR,ORAMGOAL,ORAMGLOW,ORAMHIGH,LCNT,ORAMND
"RTN","ORAM1",151,0)
 . S ORAMD0=$G(^ORAM(103,DFN,3,ORAMSNO,0)),LCNT=$P($G(^ORAM(103,DFN,3,ORAMSNO,1,0)),"^",3)-1
"RTN","ORAM1",152,0)
 . I $G(CMPLX)=1,$G(^ORAM(103,DFN,3,ORAMSNO,1,LCNT,0))["COMPLEX PATIENT" Q
"RTN","ORAM1",153,0)
 . S ORAMND=$P(ORAMD0,"^"),ORAMINR=$P(ORAMD0,"^",3),ORAMGOAL=$P(ORAMD0,"^",12),ORAMGLOW=$P(ORAMGOAL,"-"),ORAMHIGH=$P(ORAMGOAL,"-",2) S:ORAMHIGH[" " ORAMHIGH=$P(ORAMHIGH," ",2)
"RTN","ORAM1",154,0)
 . S ORAMGLOW=ORAMGLOW-(.1*ORAMGLOW),ORAMHIGH=ORAMHIGH+(.1*ORAMHIGH)
"RTN","ORAM1",155,0)
 . I (ORAMND'=ORAMDATE)&(ORAMINR) S R=R+1,ORAMDATE=ORAMND I ((ORAMINR'<ORAMGLOW)&(ORAMINR'>ORAMHIGH)) S ORAMGOOD=ORAMGOOD+1
"RTN","ORAM1",156,0)
 I R>0 S ORAMPC=(ORAMGOOD/R)*100,ORAMPC=$E(ORAMPC,1,4)
"RTN","ORAM1",157,0)
 S RESULT=$G(ORAMPC)_"^"_$G(R)
"RTN","ORAM1",158,0)
PCGOALQ Q
"RTN","ORAM1",159,0)
 ;
"RTN","ORAM1",160,0)
COMPTEST(RESULT,COMMARR) ; File Flow Sheet Data
"RTN","ORAM1",161,0)
 ; RPC: ORAM1 COMPTEST
"RTN","ORAM1",162,0)
 N ORAMDFN,ORAMZERO,ORAMCOMM,ORAMDT,ORAMX,ORAMCL,ORAMTEMP,ORAMSAVE,ORAMRD,ORAMCOMPL,ORAMCCNT,DA,DIK,R,X
"RTN","ORAM1",163,0)
 N ORAMICNT,ORAMIOFF
"RTN","ORAM1",164,0)
 S ORAMDFN=COMMARR(0),ORAMZERO=COMMARR(1),ORAMSAVE=COMMARR(2),ORAMRD=COMMARR(3),ORAMCOMPL=COMMARR(4),ORAMCCNT=COMMARR(5)
"RTN","ORAM1",165,0)
 S ORAMIOFF=+ORAMCCNT+6,ORAMICNT=COMMARR(ORAMIOFF)
"RTN","ORAM1",166,0)
 S ORAMTEMP=$P(ORAMZERO,"^",1) D DT^DILF(,ORAMTEMP,.X) S $P(ORAMZERO,"^",1)=$S($G(X)]"":$G(X),1:DT)
"RTN","ORAM1",167,0)
 S ORAMDT=$$NOW^XLFDT,$P(ORAMZERO,"^",9)=ORAMDT
"RTN","ORAM1",168,0)
 S ORAMX=$O(^ORAM(103,ORAMDFN,3," "),-1)
"RTN","ORAM1",169,0)
 I 'ORAMX S ORAMX=0
"RTN","ORAM1",170,0)
 I $P(^ORAM(103,ORAMDFN,0),"^",13)="TEMPSAVE" K DIK,DA S DIK="^ORAM(103,"_ORAMDFN_",3,",DA(1)=ORAMDFN,DA=ORAMX D ^DIK
"RTN","ORAM1",171,0)
 I $P(^ORAM(103,ORAMDFN,0),"^",13)="SAVE" S ORAMX=ORAMX+1
"RTN","ORAM1",172,0)
 ; Execute KILL Logic for cross-refs on update
"RTN","ORAM1",173,0)
 I $D(^ORAM(103,ORAMDFN)) D
"RTN","ORAM1",174,0)
 . S DIK="^ORAM(103,"
"RTN","ORAM1",175,0)
 . S DA=ORAMDFN
"RTN","ORAM1",176,0)
 . D IX2^DIK
"RTN","ORAM1",177,0)
 S ^ORAM(103,ORAMDFN,3,0)="^103.011DA^"_ORAMX_"^"_ORAMX
"RTN","ORAM1",178,0)
 S ^ORAM(103,ORAMDFN,3,ORAMX,0)=ORAMZERO
"RTN","ORAM1",179,0)
 I $P(ORAMRD,U,4)]"" S $P(^ORAM(103,ORAMDFN,6),U,1,4)=ORAMRD
"RTN","ORAM1",180,0)
 E  S $P(^ORAM(103,ORAMDFN,6),U,1,3)=$P(ORAMRD,U,1,3)
"RTN","ORAM1",181,0)
 ; If there are comments, file them
"RTN","ORAM1",182,0)
 I +ORAMCCNT>0 F R=1:1:(ORAMCCNT) D
"RTN","ORAM1",183,0)
 . S ^ORAM(103,ORAMDFN,3,ORAMX,1,R,0)=COMMARR(R+5)
"RTN","ORAM1",184,0)
 . S ^ORAM(103,ORAMDFN,3,ORAMX,1,0)="^^"_ORAMCCNT_"^"_ORAMCCNT_"^"_$P(ORAMZERO,"^",1)_"^"
"RTN","ORAM1",185,0)
 ; If there are complications, file them
"RTN","ORAM1",186,0)
 I $L(ORAMCOMPL)>0 D
"RTN","ORAM1",187,0)
 . N P1,P2,X
"RTN","ORAM1",188,0)
 . S P1=$P(ORAMCOMPL,"|"),P2=$P(ORAMCOMPL,"|",2)
"RTN","ORAM1",189,0)
 . I P1>99 S P1=2 ;CLOT in the 100 range...
"RTN","ORAM1",190,0)
 . E  I P1#10>0 S P1=1 ;MAJOR BLEED
"RTN","ORAM1",191,0)
 . E  I P1=10 S P1=3 ;MINOR BLEED
"RTN","ORAM1",192,0)
 . S:+$G(P1) $P(^ORAM(103,ORAMDFN,3,ORAMX,0),"^",2)=P1
"RTN","ORAM1",193,0)
 . F X=1:1:$L(P2,"^") D
"RTN","ORAM1",194,0)
 .. S ^ORAM(103,ORAMDFN,3,ORAMX,2,X,0)=$P(P2,"^",X)
"RTN","ORAM1",195,0)
 . S ^ORAM(103,ORAMDFN,3,ORAMX,2,0)="^^"_$L(P2,"^")-1_"^"_$L(P2,"^")-1_"^"_$P(ORAMZERO,"^",1)_"^"
"RTN","ORAM1",196,0)
 ; If there are Patient Instructions, file them
"RTN","ORAM1",197,0)
 I +ORAMICNT>0 F R=1:1:(ORAMICNT) D
"RTN","ORAM1",198,0)
 . N ORLINE S ORLINE=COMMARR(R+ORAMIOFF)
"RTN","ORAM1",199,0)
 . S ^ORAM(103,ORAMDFN,3,ORAMX,3,R,0)=$S(ORLINE="":" ",1:ORLINE)
"RTN","ORAM1",200,0)
 . S ^ORAM(103,ORAMDFN,3,ORAMX,3,0)="^^"_ORAMICNT_"^"_ORAMICNT_"^"_$P(ORAMZERO,"^",1)_"^"
"RTN","ORAM1",201,0)
 S ^ORAM(103,ORAMDFN,3,"B",$P(ORAMZERO,"^",1),ORAMX)=""
"RTN","ORAM1",202,0)
 S $P(^ORAM(103,ORAMDFN,0),"^",13)=ORAMSAVE
"RTN","ORAM1",203,0)
 ; Update all cross-refs for Flow Sheet entry
"RTN","ORAM1",204,0)
 S DIK="^ORAM(103,"
"RTN","ORAM1",205,0)
 S DA=ORAMDFN
"RTN","ORAM1",206,0)
 D IX^DIK
"RTN","ORAM1",207,0)
 S RESULT=1
"RTN","ORAM1",208,0)
 Q
"RTN","ORAM1",209,0)
 ;
"RTN","ORAM1",210,0)
FLOWTT(RESULT,DFN) ; GETS ANTICOAG FLOWSHEET DATA
"RTN","ORAM1",211,0)
 N FSARR,COMARR,ORAMI,ORI,ORX
"RTN","ORAM1",212,0)
 S (ORI,ORAMI,ORX)=0
"RTN","ORAM1",213,0)
 F  S ORI=$O(^ORAM(103,DFN,3,"B",ORI)) Q:+ORI'>0  D
"RTN","ORAM1",214,0)
 . N ORJ S ORJ=0
"RTN","ORAM1",215,0)
 . F  S ORJ=$O(^ORAM(103,DFN,3,"B",ORI,ORJ)) Q:+ORJ'>0  D
"RTN","ORAM1",216,0)
 .. N ORAMACFS,ORAMCOM,ORAMCOMP,ORAMCC,ORAMPROV,ORAMLCNT,ORAMTOT,ORAMT
"RTN","ORAM1",217,0)
 .. S ORAMACFS=^ORAM(103,DFN,3,ORJ,0),ORAMCC=$P(ORAMACFS,U,2)
"RTN","ORAM1",218,0)
 .. S ORAMCOM=$P(ORAMACFS,U),$P(ORAMACFS,U)=$$FMTE^XLFDT(ORAMCOM,"2P"),$P(ORAMACFS,U,2)=ORJ
"RTN","ORAM1",219,0)
 .. S ORAMPROV=$P(ORAMACFS,U,10) I +$G(ORAMPROV) S $P(ORAMACFS,U,10)=$P(^VA(200,+ORAMPROV,0),U)
"RTN","ORAM1",220,0)
 .. S ORAMLCNT=+$O(^ORAM(103,DFN,3,ORJ,1,""),-1)
"RTN","ORAM1",221,0)
 .. S ORAMCOMP=$O(^ORAM(103,DFN,3,ORJ,2,""),-1)
"RTN","ORAM1",222,0)
 .. S ORAMT=ORAMLCNT
"RTN","ORAM1",223,0)
 .. S:+$G(ORAMCC) ORAMT=$G(ORAMLCNT)_","_$G(ORAMCOMP)
"RTN","ORAM1",224,0)
 .. S ORAMTOT=$G(ORAMLCNT)+$G(ORAMCOMP)
"RTN","ORAM1",225,0)
 .. I +$G(ORAMTOT) D
"RTN","ORAM1",226,0)
 ... S RESULT(ORAMI)=$G(ORAMT)_"|"_$G(ORAMACFS)
"RTN","ORAM1",227,0)
 ... I +$G(ORAMLCNT) F ORX=(ORAMI+1):1:(ORAMLCNT+ORAMI) S RESULT(ORX)=$G(^ORAM(103,DFN,3,ORJ,1,(ORX-ORAMI),0))
"RTN","ORAM1",228,0)
 ... I +$G(ORAMCC),+$G(ORAMCOMP) D
"RTN","ORAM1",229,0)
 .... S ORAMI=ORX+2,RESULT(ORAMI)="Complications noted:"
"RTN","ORAM1",230,0)
 .... F ORX=(ORAMI+2):1:(ORAMCOMP+ORAMI) D
"RTN","ORAM1",231,0)
 ..... N ORAMCMPL
"RTN","ORAM1",232,0)
 ..... S ORAMCMPL=$G(^ORAM(103,DFN,3,ORJ,2,(ORX-ORAMI),0))
"RTN","ORAM1",233,0)
 ..... S RESULT(ORX)=$S((ORAMCMPL["MB:")!(ORAMCMPL["C:"):$P(ORAMCMPL,":",2),1:ORAMCMPL)
"RTN","ORAM1",234,0)
 .. E  S RESULT(ORAMI+1)="0|"_$G(ORAMACFS)
"RTN","ORAM1",235,0)
 .. S ORAMI=ORX+1
"RTN","ORAM1",236,0)
 Q
"RTN","ORAM1",237,0)
 ;
"RTN","ORAM1",238,0)
LOGIT(RESULT,FSARRAY,ORAMCOMP) ; RPC= ORAM1 LOG
"RTN","ORAM1",239,0)
 N ORAMDATE,ORAMINR,ORAMPTN,ORAMTWD,ORAMLOG,ORAMLOGN,TODAY,TTIME,COUNT,ORAMODFN,ORAMOD,ORAMND,ORAMNEWD,AROW
"RTN","ORAM1",240,0)
 N %,DA,DIK,ORAMDFN,ORAMRSF,R,X
"RTN","ORAM1",241,0)
 S RESULT=0
"RTN","ORAM1",242,0)
 D NOW^%DTC S TODAY=X,TTIME=%
"RTN","ORAM1",243,0)
 ;FIRST GET THE OLD FLOW SHEET DATA AND SAVE TO THE LOG FILE
"RTN","ORAM1",244,0)
 S ORAMDFN=$G(FSARRAY(0)),AROW=$G(FSARRAY(1))
"RTN","ORAM1",245,0)
 S ORAMDATE=$P($G(^ORAM(103,ORAMDFN,3,AROW,0)),"^"),ORAMINR=$P($G(^ORAM(103,ORAMDFN,3,AROW,0)),"^",3),ORAMPTN=$P($G(^ORAM(103,ORAMDFN,3,AROW,0)),"^",8),ORAMTWD=$P($G(^ORAM(103,ORAMDFN,3,AROW,0)),"^",6)
"RTN","ORAM1",246,0)
 S ORAMODFN=$P($G(^ORAM(103,ORAMDFN,3,AROW,0)),"^",10),ORAMOD=$P($G(^ORAM(103,ORAMDFN,3,AROW,0)),"^",9)
"RTN","ORAM1",247,0)
 S ORAMLOG="Original FS "_AROW_": DATE="_$G(ORAMDATE)_", INR="_$G(ORAMINR)_", PT NOTIFIED="_$G(ORAMPTN)_", TWD="_$G(ORAMTWD)_"; "_ORAMODFN_" ("_ORAMOD_"): EDITED: "_FSARRAY(6)_"("_TODAY_")"
"RTN","ORAM1",248,0)
 S ORAMLOGN=$P($G(^ORAM(103,ORAMDFN,3,AROW,"LOG",0)),"^",3)+1
"RTN","ORAM1",249,0)
 S ^ORAM(103,ORAMDFN,3,AROW,"LOG",ORAMLOGN,0)=ORAMLOG
"RTN","ORAM1",250,0)
 K ^ORAM(103,ORAMDFN,3,"B",$G(ORAMDATE),AROW)
"RTN","ORAM1",251,0)
 F ORAMRSF=1:1:$P($G(^ORAM(103,ORAMDFN,3,AROW,1,0)),"^",3) S COUNT=ORAMLOGN+ORAMRSF,^ORAM(103,ORAMDFN,3,AROW,"LOG",COUNT,0)=^ORAM(103,ORAMDFN,3,AROW,1,ORAMRSF,0)
"RTN","ORAM1",252,0)
 S ^ORAM(103,ORAMDFN,3,AROW,"LOG",0)="^^"_$G(COUNT)_"^"_$G(COUNT)_"^"_TODAY
"RTN","ORAM1",253,0)
 ;NOW SET NEW INFO FOR THE FLOW SHEET ENTRY
"RTN","ORAM1",254,0)
 ;Array order is: DFN;ARow;date;inr;ptnotified;twd;DUZ;#comment lines;comments
"RTN","ORAM1",255,0)
 S ORAMNEWD=$G(FSARRAY(2)) D DT^DILF(,ORAMNEWD,.X) S ORAMNEWD=X
"RTN","ORAM1",256,0)
 S $P(^ORAM(103,ORAMDFN,3,AROW,0),"^")=$G(ORAMNEWD),$P(^ORAM(103,ORAMDFN,3,AROW,0),"^",3)=$G(FSARRAY(3)),$P(^ORAM(103,ORAMDFN,3,AROW,0),"^",8)=$G(FSARRAY(4)),$P(^ORAM(103,ORAMDFN,3,AROW,0),"^",6)=$G(FSARRAY(5))
"RTN","ORAM1",257,0)
 S $P(^ORAM(103,ORAMDFN,3,AROW,0),"^",2)=$G(ORAMCOMP)
"RTN","ORAM1",258,0)
 S $P(^ORAM(103,ORAMDFN,3,AROW,0),"^",10)=$G(FSARRAY(6)),$P(^ORAM(103,ORAMDFN,3,AROW,0),"^",9)=TTIME
"RTN","ORAM1",259,0)
 I $G(FSARRAY(7))'="" K ^ORAM(103,ORAMDFN,3,AROW,1) F R=1:1:$G(FSARRAY(7)) D
"RTN","ORAM1",260,0)
 . S ^ORAM(103,ORAMDFN,3,AROW,1,R,0)=$G(FSARRAY(R+7))
"RTN","ORAM1",261,0)
 S ^ORAM(103,ORAMDFN,3,AROW,1,0)="^^"_$G(FSARRAY(7))_"^"_$G(FSARRAY(7))_"^"_TODAY_"^"  ;$E(ORAMDT,1,7)_"^"
"RTN","ORAM1",262,0)
 S ^ORAM(103,ORAMDFN,3,"B",$G(ORAMNEWD),AROW)=""
"RTN","ORAM1",263,0)
 S DIK="^ORAM(103,"
"RTN","ORAM1",264,0)
 S DA(1)=ORAMDFN,DA=AROW
"RTN","ORAM1",265,0)
 D IX^DIK
"RTN","ORAM1",266,0)
 S RESULT=1
"RTN","ORAM1",267,0)
 Q
"RTN","ORAM1",268,0)
 ;
"RTN","ORAM1",269,0)
LOCK(RESULT,DATA) ; Locks form   RPC=ORAM1 LOCK
"RTN","ORAM1",270,0)
 N X
"RTN","ORAM1",271,0)
 S RESULT=0
"RTN","ORAM1",272,0)
 Q:$P($G(DATA),"^")=""
"RTN","ORAM1",273,0)
 Q:$D(^ORAM(103,$P(DATA,"^")))=0
"RTN","ORAM1",274,0)
 D NOW^%DTC N ORAMTDAY S ORAMTDAY=X
"RTN","ORAM1",275,0)
 I $P(^ORAM(103,$P(DATA,"^"),0),"^",18,19)="" S $P(^ORAM(103,$P(DATA,"^"),0),"^",18)="^"
"RTN","ORAM1",276,0)
 S $P(^ORAM(103,$P(DATA,"^"),0),"^",19)=1_"|"_$P(^VA(200,$P(DATA,"^",2),0),"^")_"|"_ORAMTDAY,RESULT=1
"RTN","ORAM1",277,0)
 Q
"RTN","ORAM1",278,0)
 ;
"RTN","ORAM1",279,0)
UNLOCK(RESULT,DFN) ; Unlocks form  RPC=ORAM1 UNLOCK
"RTN","ORAM1",280,0)
 S RESULT=0
"RTN","ORAM1",281,0)
 Q:DFN<1
"RTN","ORAM1",282,0)
 Q:$D(^ORAM(103,DFN))=0
"RTN","ORAM1",283,0)
 S $P(^ORAM(103,DFN,0),"^",19)=0,RESULT=1
"RTN","ORAM1",284,0)
 Q
"RTN","ORAM1",285,0)
 ;
"RTN","ORAM1",286,0)
GETPT(RESULT) ; Get Pt list  RPC=ORAM1 PT LIST
"RTN","ORAM1",287,0)
 N ORAMPT
"RTN","ORAM1",288,0)
 S ORAMPT=0 F  S ORAMPT=$O(^ORAM(103,"B",ORAMPT)) Q:ORAMPT=""  D
"RTN","ORAM1",289,0)
 . S RESULT($G(ORAMPT))=$G(ORAMPT)_"^"_$P(^DPT(ORAMPT,0),"^")_"^"_$E($P(^DPT(ORAMPT,0),"^",9),6,9)
"RTN","ORAM1",290,0)
 Q
"RTN","ORAM1",291,0)
 ;
"RTN","ORAM1",292,0)
SETHCT(RESULT,ORAMORD) ; SET HCT LAB ITEM NUMBER
"RTN","ORAM1",293,0)
 Q:'+$G(ORAMORD)
"RTN","ORAM1",294,0)
 N ORAMX,ORAML60,ORAMCH S ORAMX=0 F  S ORAMX=$O(^ORD(101.43,$G(ORAMORD),10,ORAMX)) Q:'+$G(ORAMX)!+$G(ORAMCH)  D
"RTN","ORAM1",295,0)
 . I $P(^ORD(101.43,$G(ORAMORD),10,ORAMX,0),"^")["HCT" S ORAML60=+$P(^(0),"^",2)
"RTN","ORAM1",296,0)
 . I +$G(ORAML60) S ORAMCH=$P($P(^LAB(60,ORAML60,0),"^",5),";",2) S RESULT=ORAMCH
"RTN","ORAM1",297,0)
 Q
"RTN","ORAM1",298,0)
 ;
"RTN","ORAM2")
0^10^B144805795
"RTN","ORAM2",1,0)
ORAM2 ;POR/RSF - ANTICOAGULATION MANAGEMENT RPCS (3 of 4) ;02/11/13  08:15
"RTN","ORAM2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**307,339,354,361**;Dec 17, 1997;Build 39
"RTN","ORAM2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","ORAM2",4,0)
 Q
"RTN","ORAM2",5,0)
 ;
"RTN","ORAM2",6,0)
 ;  External References:
"RTN","ORAM2",7,0)
 ;  $$GET1^DIQ                             ICR #2056
"RTN","ORAM2",8,0)
 ;  $$SETSTR^VALM1                         ICR #10116
"RTN","ORAM2",9,0)
 ;  $$FMADD/$$FMDIFF/$$FMTE/$$NOW^XLFDT    ICR #10103
"RTN","ORAM2",10,0)
 ;  $$TITLE/$$UP^XLFSTR                    ICR #10104
"RTN","ORAM2",11,0)
 ;  $$GET^XPAR                             ICR #2263
"RTN","ORAM2",12,0)
 ;
"RTN","ORAM2",13,0)
ALLGOAL(RESULT,DAYS,CLINIC) ; last inr for all pts seen in last x days
"RTN","ORAM2",14,0)
 ;;RPC = ORAM2 ALLGOAL
"RTN","ORAM2",15,0)
 N ORAMDFN,ORAMNOW,ORAMCUT,ORAMCNT,ORAMPC,ORAMGOOD,ORAMBAD,ORAMBL
"RTN","ORAM2",16,0)
 S ORAMDFN=0,ORAMCNT=0,ORAMGOOD=0,ORAMBAD=0
"RTN","ORAM2",17,0)
 S ORAMNOW=$$NOW^XLFDT
"RTN","ORAM2",18,0)
 S ORAMCUT=$$FMADD^XLFDT(ORAMNOW,-DAYS)
"RTN","ORAM2",19,0)
 F  S ORAMDFN=$O(^ORAM(103,ORAMDFN)) Q:'ORAMDFN  D
"RTN","ORAM2",20,0)
 . N ORAMFS,ORAM3D0,ORAMDATE,ORAMCLIN
"RTN","ORAM2",21,0)
 . S ORAMFS=$O(^ORAM(103,ORAMDFN,3," "),-1) Q:$G(ORAMFS)=""
"RTN","ORAM2",22,0)
 . S ORAMCLIN=$P($G(^ORAM(103,ORAMDFN,6)),U,2)
"RTN","ORAM2",23,0)
 . I +$G(CLINIC),(ORAMCLIN'=CLINIC) Q
"RTN","ORAM2",24,0)
 . S ORAM3D0=$G(^ORAM(103,ORAMDFN,3,ORAMFS,0)),ORAMDATE=$P(ORAM3D0,"^")
"RTN","ORAM2",25,0)
 . I ($G(ORAMDATE)>$G(ORAMCUT)) D
"RTN","ORAM2",26,0)
 .. N ORAMINR,ORAMGOAL,ORAMGLO,ORAMGHI
"RTN","ORAM2",27,0)
 .. S ORAMINR=$P(ORAM3D0,"^",3),ORAMGOAL=$P(ORAM3D0,"^",12),ORAMGLO=$P(ORAMGOAL,"-"),ORAMGHI=$P(ORAMGOAL,"-",2) S:ORAMGHI[" " ORAMGHI=$P(ORAMGHI," ",2)
"RTN","ORAM2",28,0)
 .. S ORAMGLO=ORAMGLO-(.1*ORAMGLO),ORAMGHI=ORAMGHI+(.1*ORAMGHI)
"RTN","ORAM2",29,0)
 .. S ORAMCNT=ORAMCNT+1
"RTN","ORAM2",30,0)
 .. I (ORAMINR'<ORAMGLO)&(ORAMINR'>ORAMGHI) S ORAMGOOD=ORAMGOOD+1
"RTN","ORAM2",31,0)
 .. E  D
"RTN","ORAM2",32,0)
 ... N ORAMNAME,ORAMSSN,LINE
"RTN","ORAM2",33,0)
 ... S ORAMBAD=ORAMBAD+1,LINE=""
"RTN","ORAM2",34,0)
 ... S ORAMNAME=$P($P(^DPT(ORAMDFN,0),"^"),","),ORAMSSN=$E($P(^DPT(ORAMDFN,0),"^",9),6,9)
"RTN","ORAM2",35,0)
 ... S LINE=$$SETSTR^VALM1(ORAMNAME,LINE,1,15)
"RTN","ORAM2",36,0)
 ... S LINE=$$SETSTR^VALM1("("_ORAMSSN_")",LINE,17,6)
"RTN","ORAM2",37,0)
 ... S LINE=$$SETSTR^VALM1($S(+ORAMINR>0:ORAMINR,1:"N/A"),LINE,25,5)
"RTN","ORAM2",38,0)
 ... S LINE=$$SETSTR^VALM1("("_ORAMGOAL_")",LINE,32,9)
"RTN","ORAM2",39,0)
 ... S RESULT(ORAMBAD)=LINE
"RTN","ORAM2",40,0)
 I ORAMCNT>0 S ORAMPC=$J(((ORAMGOOD/ORAMCNT)*100),3,1)
"RTN","ORAM2",41,0)
 I ORAMBAD'="" S ORAMBL=$L(ORAMBAD,"^"),$P(ORAMBAD,"^",1)=ORAMBL
"RTN","ORAM2",42,0)
 S RESULT(0)=$G(ORAMPC)
"RTN","ORAM2",43,0)
 Q
"RTN","ORAM2",44,0)
 ;
"RTN","ORAM2",45,0)
PTAPPT(RESULT,CLINIC) ; Counts # of pts/day next 45 days
"RTN","ORAM2",46,0)
 ;RPC=ORAM2 PTAPPT
"RTN","ORAM2",47,0)
 N ORAMFDT,ORAMRDT,ORAMCNT
"RTN","ORAM2",48,0)
 S ORAMFDT=$$FMADD^XLFDT(DT,45)_".2359",ORAMRDT=DT
"RTN","ORAM2",49,0)
 F  S ORAMRDT=$O(^ORAM(103,"L",ORAMRDT)) Q:(+ORAMRDT'>0)!(ORAMRDT>ORAMFDT)  D
"RTN","ORAM2",50,0)
 . N ORAMDT,ORAMRD,ORAMDFN
"RTN","ORAM2",51,0)
 . S ORAMDT=$P(ORAMRDT,"."),ORAMRD=$$FMTE^XLFDT(ORAMDT,"2DF"),ORAMDFN=0
"RTN","ORAM2",52,0)
 . F  S ORAMDFN=$O(^ORAM(103,"L",ORAMRDT,ORAMDFN)) Q:'ORAMDFN  D
"RTN","ORAM2",53,0)
 .. N ORAMCLIN S ORAMCLIN=$P($G(^ORAM(103,ORAMDFN,6)),U,2)
"RTN","ORAM2",54,0)
 .. Q:ORAMCLIN'=$G(CLINIC)
"RTN","ORAM2",55,0)
 .. S ORAMCNT(ORAMDT)=+$G(ORAMCNT(ORAMDT))+1
"RTN","ORAM2",56,0)
 .. S RESULT(ORAMDT)=ORAMRD_" - "_$G(ORAMCNT(ORAMDT))
"RTN","ORAM2",57,0)
PTAPPTQ Q
"RTN","ORAM2",58,0)
 ;
"RTN","ORAM2",59,0)
NOACT(RESULT,DAYS,CLINIC) ; Finds pts w/o AC activity past X days
"RTN","ORAM2",60,0)
 ;RPC=ORAM2 NOACT
"RTN","ORAM2",61,0)
 N ORAMDT,ORAMFDT,ORAMVST,ORAMDFN,ORAMPT,ORAMSSN,ORAMSORT,ORAMC,ORAMI,ORAMMIS,ORAMLAST,ORAMFS,ORMISVST,ORAMCLIN,ORAMDONE,ORAMFSTA
"RTN","ORAM2",62,0)
 S ORAMDT=$$NOW^XLFDT,ORAMFDT=$$FMADD^XLFDT(ORAMDT,-DAYS),ORAMDFN=0
"RTN","ORAM2",63,0)
 F  S ORAMDFN=$O(^ORAM(103,ORAMDFN)) Q:+ORAMDFN'>0  D
"RTN","ORAM2",64,0)
 . S ORAMFS=" ",ORAMLAST=0,ORAMMIS=0,ORAMCLIN=$P($G(^ORAM(103,ORAMDFN,6)),U,2),ORAMDONE=0
"RTN","ORAM2",65,0)
 . Q:(ORAMCLIN'=$G(CLINIC))!(2=$$GET1^DIQ(103,ORAMDFN,15,"I"))
"RTN","ORAM2",66,0)
 . F  S ORAMFS=$O(^ORAM(103,ORAMDFN,3,ORAMFS),-1) Q:(ORAMFS']"")!ORAMDONE  D
"RTN","ORAM2",67,0)
 . . I '$G(ORAMMIS)&$$MISSED(ORAMDFN,ORAMFS) S ORAMMIS=ORAMFS Q
"RTN","ORAM2",68,0)
 . . I '$G(ORAMLAST)&'$$MISSED(ORAMDFN,ORAMFS) S ORAMLAST=ORAMFS,ORAMDONE=1
"RTN","ORAM2",69,0)
 . Q:($$GET1^DIQ(103.011,ORAMLAST_","_ORAMDFN,.01,"I")'<ORAMFDT)
"RTN","ORAM2",70,0)
 . F ORAMFS="ORAMMIS","ORAMLAST" D
"RTN","ORAM2",71,0)
 . . K ORMISVST,ORAMFSTA
"RTN","ORAM2",72,0)
 . . I (ORAMFS="ORAMMIS") S ORMISVST=$$GET1^DIQ(103.011,@ORAMFS_","_ORAMDFN,80,"I"),ORAMFSTA=1
"RTN","ORAM2",73,0)
 . . Q:(ORAMFS="ORAMMIS")&($G(ORMISVST)'>ORAMFDT)
"RTN","ORAM2",74,0)
 . . S ORAMFS=@ORAMFS
"RTN","ORAM2",75,0)
 . . Q:'ORAMFS
"RTN","ORAM2",76,0)
 . . N LINE S LINE=""
"RTN","ORAM2",77,0)
 . . S ORAMPT=$P(^DPT(ORAMDFN,0),"^"),ORAMPT=$P(ORAMPT,","),ORAMSSN=$E($P(^DPT(ORAMDFN,0),"^",9),6,9)
"RTN","ORAM2",78,0)
 . . S ORAMVST=$P(^ORAM(103,ORAMDFN,3,ORAMFS,0),"^")
"RTN","ORAM2",79,0)
 . . I $G(ORMISVST) S ORAMVST=ORMISVST
"RTN","ORAM2",80,0)
 . . S LINE=$$SETSTR^VALM1(ORAMPT,LINE,1,15)
"RTN","ORAM2",81,0)
 . . S LINE=$$SETSTR^VALM1("("_ORAMSSN_")",LINE,17,6)
"RTN","ORAM2",82,0)
 . . S LINE=$$SETSTR^VALM1($S($G(ORAMFSTA):"Missed Ap: ",1:"Last Seen: ")_$$FMTE^XLFDT($P(ORAMVST,"."),"2DF"),LINE,25,19)
"RTN","ORAM2",83,0)
 . . S ORAMSORT($P(ORAMVST,"."),ORAMPT_ORAMSSN)=LINE
"RTN","ORAM2",84,0)
 S (ORAMC,ORAMI)=0
"RTN","ORAM2",85,0)
 F  S ORAMI=$O(ORAMSORT(ORAMI)) Q:+ORAMI'>0  D
"RTN","ORAM2",86,0)
 . N ORAMJ S ORAMJ=""
"RTN","ORAM2",87,0)
 . F  S ORAMJ=$O(ORAMSORT(ORAMI,ORAMJ)) Q:ORAMJ']""  D
"RTN","ORAM2",88,0)
 . . S ORAMC=ORAMC+1,RESULT(ORAMC)=$G(ORAMSORT(ORAMI,ORAMJ))
"RTN","ORAM2",89,0)
 I ORAMC=0 S RESULT(0)="No patients lost to follow-up "_DAYS_" days or longer."
"RTN","ORAM2",90,0)
NOACTQ Q
"RTN","ORAM2",91,0)
 ;
"RTN","ORAM2",92,0)
MISSED(DFN,FS) ;*354 Added
"RTN","ORAM2",93,0)
 ;Input DFN -> Patient IEN
"RTN","ORAM2",94,0)
 ;      FS  -> FlowSheet IEN
"RTN","ORAM2",95,0)
 ;Output 1 if this flowsheet entry was a missed appt.
"RTN","ORAM2",96,0)
 ;       0 if this flowsheet entry was not a missed appt.
"RTN","ORAM2",97,0)
 ;
"RTN","ORAM2",98,0)
 N ORAMCM,IENS,I,RSLT
"RTN","ORAM2",99,0)
 Q:'$G(DFN)!'$G(FS) 0
"RTN","ORAM2",100,0)
 S IENS=FS_","_DFN_",",(I,RSLT)=0
"RTN","ORAM2",101,0)
 I $$GET1^DIQ(103.011,IENS,99,"","ORAMCM")="" Q RSLT
"RTN","ORAM2",102,0)
 F  S I=$O(ORAMCM(I)) Q:'I!RSLT  I ORAMCM(I)["Missed Appt; return:" S RSLT=1
"RTN","ORAM2",103,0)
 Q RSLT
"RTN","ORAM2",104,0)
 ;
"RTN","ORAM2",105,0)
SHOWRATE(RESULT,DFN) ; CALCULATES SHOWRATE
"RTN","ORAM2",106,0)
 ;;RPC=ORAM2 NOSHOW
"RTN","ORAM2",107,0)
 N ORAMFSDT,ORAMFS,ORAMR,ORAMARR,ORAMPC,ORAMPTT0,ORAMRDT,ORAMRDT0
"RTN","ORAM2",108,0)
 S ORAMR=0,ORAMPTT0=0,ORAMRDT0=""
"RTN","ORAM2",109,0)
 S ORAMFSDT=0 F  S ORAMFSDT=$O(^ORAM(103,DFN,3,"B",ORAMFSDT)) Q:'ORAMFSDT  D
"RTN","ORAM2",110,0)
 . S ORAMFS=0 F  S ORAMFS=$O(^ORAM(103,DFN,3,"B",ORAMFSDT,ORAMFS)) Q:'ORAMFS  D
"RTN","ORAM2",111,0)
 .. N ORAMD0,ORAMSD,ORAMSCR,ORAMPTT,ORAMLCNT,ORAMLLN,ORAMDIFF
"RTN","ORAM2",112,0)
 .. S ORAMD0=$G(^ORAM(103,DFN,3,ORAMFS,0)),ORAMSCR=$P(ORAMD0,"^",13),ORAMSD=$P($P(ORAMD0,"^"),"."),ORAMPTT=$P(ORAMD0,"^",3)
"RTN","ORAM2",113,0)
 .. S ORAMLCNT=$P($G(^ORAM(103,DFN,3,ORAMFS,1,0)),"^",3) Q:'ORAMLCNT
"RTN","ORAM2",114,0)
 .. S ORAMLLN=$G(^ORAM(103,DFN,3,ORAMFS,1,ORAMLCNT,0))
"RTN","ORAM2",115,0)
 .. S ORAMRDT=$S($G(ORAMLLN)["Next draw:":$P($G(ORAMLLN)," ",3),$G(ORAMLLN)["Callback:":"C",$G(ORAMLLN)["Missed Appt;":"M",$G(ORAMLLN)["Edited by:":"E",1:$P($G(ORAMLLN)," "))
"RTN","ORAM2",116,0)
 .. I ORAMRDT="E" S ORAMLCNT=ORAMLCNT-1,ORAMLLN=$G(^ORAM(103,DFN,3,ORAMFS,1,ORAMLCNT,0))
"RTN","ORAM2",117,0)
 .. I  S ORAMRDT=$S($G(ORAMLLN)["Next draw:":$P($G(ORAMLLN)," ",3),$G(ORAMLLN)["Callback:":$P($G(ORAMLLN)," ",2),$G(ORAMLLN)["Missed Appt;":"Q",1:$P($G(ORAMLLN)," "))
"RTN","ORAM2",118,0)
 .. I ORAMRDT="M" S ORAMRDT=$P($G(ORAMLLN)," ",4),ORAMR=ORAMR+1 D DT^DILF("T",ORAMRDT,.ORAMRDT) S ORAMRDT0=ORAMRDT Q  ;NOTE PT MISSED DRAW, ADD ONE TO DENOMINATOR
"RTN","ORAM2",119,0)
 .. I $L(ORAMRDT)>1 D DT^DILF("T",ORAMRDT,.ORAMRDT)
"RTN","ORAM2",120,0)
 .. I ORAMRDT="C" S ORAMRDT=$P($G(ORAMLLN)," ",2) D DT^DILF("T",ORAMRDT,.ORAMRDT) S ORAMRDT=$$FMADD^XLFDT(ORAMRDT,-1)
"RTN","ORAM2",121,0)
 .. I 'ORAMPTT!($G(ORAMPTT0)=$G(ORAMPTT)) S ORAMRDT0=ORAMRDT Q
"RTN","ORAM2",122,0)
 .. S ORAMPTT0=ORAMPTT
"RTN","ORAM2",123,0)
 .. I ORAMRDT0'="" S ORAMDIFF=$$FMDIFF^XLFDT(ORAMSD,ORAMRDT0,2) S ORAMR=ORAMR+1 I ORAMDIFF>-172801&(ORAMDIFF<172801) S ORAMARR(0)=$G(ORAMARR(0))+1
"RTN","ORAM2",124,0)
 .. S ORAMRDT0=ORAMRDT
"RTN","ORAM2",125,0)
 I ORAMR>0 S ORAMPC=($G(ORAMARR(0))/ORAMR)*100,ORAMPC=$E(ORAMPC,1,4)
"RTN","ORAM2",126,0)
 S RESULT=$G(ORAMPC)_"^"_$G(ORAMR)
"RTN","ORAM2",127,0)
 Q
"RTN","ORAM2",128,0)
 ;
"RTN","ORAM2",129,0)
RPTSTART(ROOT,DFN,ID,ALPHA,OMEGA,DTRANGE,REMOTE,MAX,ORFHIE) ;
"RTN","ORAM2",130,0)
 ;;
"RTN","ORAM2",131,0)
 D START^ORWRP(80,"RPT^ORAM2(.ROOT,.DFN,.ID,.ALPHA,.OMEGA,.DTRANGE,.REMOTE,.MAX,.ORFHIE)",999)
"RTN","ORAM2",132,0)
 Q
"RTN","ORAM2",133,0)
 ;
"RTN","ORAM2",134,0)
RPT(ROOT,DFN,ID,ALPHA,OMEGA,DTRANGE,REMOTE,MAX,ORFHIE) ;
"RTN","ORAM2",135,0)
 N ORAMCNT,ORAMJ,ORAMHCT,ORAMCLIN,ORAMPIND
"RTN","ORAM2",136,0)
 I '$D(^ORAM(103,"B",DFN)) Q
"RTN","ORAM2",137,0)
 W $P(^DPT(DFN,0),"^"),"  ",$E($P(^DPT(DFN,0),"^",9),1,3),"-",$E($P(^DPT(DFN,0),"^",9),4,5),"-",$E($P(^DPT(DFN,0),"^",9),6,9)
"RTN","ORAM2",138,0)
 I $P(^ORAM(103,DFN,0),"^",10)=1 W !,?10,"******* COMPLEX PATIENT *******"
"RTN","ORAM2",139,0)
 S ORAMCLIN=$P($G(^ORAM(103,DFN,6)),U,2),ORAMPIND=""
"RTN","ORAM2",140,0)
 I +ORAMCLIN D
"RTN","ORAM2",141,0)
 . N ICDC
"RTN","ORAM2",142,0)
 . S ICDC=$$GET^XPAR(ORAMCLIN_";SC(","ORAM AUTO PRIMARY INDICATION",1,"E")
"RTN","ORAM2",143,0)
 . I ICDC]"" D
"RTN","ORAM2",144,0)
 . . N ICDD,ICDDESC
"RTN","ORAM2",145,0)
 . . D ICDDESC^ICDXCODE("DIAGNOSIS",ICDC,DT,.ICDDESC)
"RTN","ORAM2",146,0)
 . . S ORAMPIND=ICDC_U_$$TITLE^XLFSTR($G(ICDDESC(1)))_" ("_ICDC_")"
"RTN","ORAM2",147,0)
 I ORAMPIND]"" D
"RTN","ORAM2",148,0)
 . W !!,"Primary Indication: ",$P(ORAMPIND,U,2)
"RTN","ORAM2",149,0)
 . W !,"  Add'l Indication: ",$P($P(^ORAM(103,DFN,0),"^",3),"=")," (",$P($P(^ORAM(103,DFN,0),"^",3),"=",2),")"
"RTN","ORAM2",150,0)
 . W !,"          Goal INR: ",$P(^ORAM(103,DFN,0),"^",2)
"RTN","ORAM2",151,0)
 E  D
"RTN","ORAM2",152,0)
 . W !!,"Primary Indication: ",$P($P(^ORAM(103,DFN,0),"^",3),"=")," (",$P($P(^ORAM(103,DFN,0),"^",3),"=",2),")",?38,"Goal INR: ",$P(^ORAM(103,DFN,0),"^",2)
"RTN","ORAM2",153,0)
 D HCT^ORAM(.ORAMHCT,DFN)
"RTN","ORAM2",154,0)
 I $L(ORAMHCT,U)>1 D  I 1
"RTN","ORAM2",155,0)
 . W !?10,"Last ",$S($$UP^XLFSTR($P(ORAMHCT,U,3))["HGB":"Hgb",$$UP^XLFSTR($P(ORAMHCT,U,3))["HEMOGLOBIN":"Hgb",1:"HCT"),": "
"RTN","ORAM2",156,0)
 . W $S($P(ORAMHCT,U)]"":$P(ORAMHCT,U),1:"No result")," on ",$S($P(ORAMHCT,U,2)]"":$P(ORAMHCT,U,2),1:"file")
"RTN","ORAM2",157,0)
 E  W !?10,ORAMHCT
"RTN","ORAM2",158,0)
 I +$P($G(^ORAM(103,DFN,6)),U,5)!+$O(^ORAM(103,DFN,7,0)) D
"RTN","ORAM2",159,0)
 . W !!,"Patient is Eligible for LMWH Bridging"
"RTN","ORAM2",160,0)
 . I +$O(^ORAM(103,DFN,7,0)) D
"RTN","ORAM2",161,0)
 .. N ORI S ORI=0
"RTN","ORAM2",162,0)
 .. W ":"
"RTN","ORAM2",163,0)
 .. F  S ORI=$O(^ORAM(103,DFN,7,ORI)) Q:+ORI'>0  W !?2,$G(^ORAM(103,DFN,7,ORI,0))
"RTN","ORAM2",164,0)
 . E  W "."
"RTN","ORAM2",165,0)
 I $P($G(^ORAM(103,DFN,1,0)),"^",3)>0 S ORAMCNT=$P(^ORAM(103,DFN,1,0),"^",3) D
"RTN","ORAM2",166,0)
 . W !!,"Special Instructions:"
"RTN","ORAM2",167,0)
 . F ORAMJ=1:1:ORAMCNT W !?2,^ORAM(103,DFN,1,ORAMJ,0)
"RTN","ORAM2",168,0)
 I $P(^ORAM(103,DFN,0),"^",11)=2 W !?2,"Pt has given permission to leave anticoag msg on msg machine."
"RTN","ORAM2",169,0)
 I $P($G(^ORAM(103,DFN,4,0)),"^",3)>0 S ORAMCNT=$P(^ORAM(103,DFN,4,0),"^",3) D
"RTN","ORAM2",170,0)
 . W !?2,"OK to leave anticoagulation message with:"
"RTN","ORAM2",171,0)
 . F ORAMJ=1:1:ORAMCNT W !?4,^ORAM(103,DFN,4,ORAMJ,0)
"RTN","ORAM2",172,0)
 I $P($G(^ORAM(103,DFN,2,0)),"^",3)>0 S ORAMCNT=$P(^ORAM(103,DFN,2,0),"^",3) D
"RTN","ORAM2",173,0)
 . W !!,"Secondary Indication(s)/Risk Factors:"
"RTN","ORAM2",174,0)
 . F ORAMJ=1:1:ORAMCNT W !?2,^ORAM(103,DFN,2,ORAMJ,0)
"RTN","ORAM2",175,0)
 W !
"RTN","ORAM2",176,0)
 I $P(^ORAM(103,DFN,0),"^",5)'="" W !,"Start Date: ",$P(^ORAM(103,DFN,0),"^",5)
"RTN","ORAM2",177,0)
 I $P(^ORAM(103,DFN,0),"^",7)'="" W ?35,"Duration: ",$P(^ORAM(103,DFN,0),"^",7)
"RTN","ORAM2",178,0)
 W !,"==========================================================================="
"RTN","ORAM2",179,0)
 W !,"DATE",?10,"INR",?18,"Notified",?30,"TWD",?36,"Comments:"
"RTN","ORAM2",180,0)
 W !,"---------------------------------------------------------------------------"
"RTN","ORAM2",181,0)
 I $D(^ORAM(103,DFN,3,"B")) D
"RTN","ORAM2",182,0)
 . N ORAMFSD S ORAMFSD=" ",ORAMCNT=0
"RTN","ORAM2",183,0)
 . F  S ORAMFSD=$O(^ORAM(103,DFN,3,ORAMFSD),-1) Q:$G(ORAMFSD)<1  D
"RTN","ORAM2",184,0)
 .. I $$DTCHK(DFN,ALPHA,OMEGA,ORAMFSD)=0 Q  ;need to change this to the new date
"RTN","ORAM2",185,0)
 .. N ORAMDD1,ORAMDOSE,ORAMPS,ORAMPNOT
"RTN","ORAM2",186,0)
 .. I '+$D(^ORAM(103,DFN,3,ORAMFSD,"LOG",0)) W !,$$FMTE^XLFDT($E($P(^ORAM(103,DFN,3,ORAMFSD,0),"^",9),1,7),2)  ;changed from $P(^ORAM(103,DFN,3,ORAMCNT,0),"^")
"RTN","ORAM2",187,0)
 .. I +$D(^ORAM(103,DFN,3,ORAMFSD,"LOG",0)) S ORAMDD1=$P($P(^ORAM(103,DFN,3,ORAMFSD,"LOG",1,0),"(",2),".") Q:'+$G(ORAMDD1)  W !,$$FMTE^XLFDT(ORAMDD1,2)
"RTN","ORAM2",188,0)
 .. S ORAMPNOT=$$WRAP^ORAMX($P(^ORAM(103,DFN,3,ORAMFSD,0),"^",8),11)
"RTN","ORAM2",189,0)
 .. W ?11,$P(^ORAM(103,DFN,3,ORAMFSD,0),"^",3) ;INR
"RTN","ORAM2",190,0)
 .. W ?18,$P(ORAMPNOT,"|") ;Pt Notified
"RTN","ORAM2",191,0)
 .. W ?30,$P(^ORAM(103,DFN,3,ORAMFSD,0),"^",6) ;TWD
"RTN","ORAM2",192,0)
 .. ; Comments
"RTN","ORAM2",193,0)
 .. I $P($G(^ORAM(103,DFN,3,ORAMFSD,1,0)),"^",3)>0 D  I 1
"RTN","ORAM2",194,0)
 ... N ORAMCC,ORAMCLN S (ORAMCC,ORAMCLN)=0
"RTN","ORAM2",195,0)
 ... F  S ORAMCLN=$O(^ORAM(103,DFN,3,ORAMFSD,1,ORAMCLN)) Q:+ORAMCLN'>0  D
"RTN","ORAM2",196,0)
 .... I $P(^ORAM(103,DFN,3,ORAMFSD,0),"^",3)'="",ORAMCLN=2 W ?10,$$FMTE^XLFDT($P(^ORAM(103,DFN,3,ORAMFSD,0),"^"),2)
"RTN","ORAM2",197,0)
 .... W:ORAMCLN>1 ?18,$P(ORAMPNOT,"|",ORAMCLN)
"RTN","ORAM2",198,0)
 .... W ?38,^ORAM(103,DFN,3,ORAMFSD,1,ORAMCLN,0),!
"RTN","ORAM2",199,0)
 .... S ORAMCC=ORAMCC+1
"RTN","ORAM2",200,0)
 ... I $L(ORAMPNOT,"|")>ORAMCC D
"RTN","ORAM2",201,0)
 .... N ORAMI S ORAMI=0 F ORAMI=ORAMCC+1:1:$L(ORAMPNOT,"|") W ?18,$P(ORAMPNOT,"|",ORAMI),!
"RTN","ORAM2",202,0)
 .. E  D  W !
"RTN","ORAM2",203,0)
 ... I $L(ORAMPNOT,"|")>1 D
"RTN","ORAM2",204,0)
 .... N ORAMI S ORAMI=0 F ORAMI=2:1:$L(ORAMPNOT,"|") W ?18,$P(ORAMPNOT,"|",ORAMI),!
"RTN","ORAM2",205,0)
 .. ; Patient Instructions
"RTN","ORAM2",206,0)
 .. I +$O(^ORAM(103,DFN,3,ORAMFSD,3,0)) D
"RTN","ORAM2",207,0)
 ... N ORI S ORI=0
"RTN","ORAM2",208,0)
 ... W !,"Patient Instructions (from Letter):"
"RTN","ORAM2",209,0)
 ... F  S ORI=$O(^ORAM(103,DFN,3,ORAMFSD,3,ORI)) Q:+ORI'>0  D
"RTN","ORAM2",210,0)
 .... N ORPILN,ORJ S ORPILN=$G(^ORAM(103,DFN,3,ORAMFSD,3,ORI,0))
"RTN","ORAM2",211,0)
 .... S:$L(ORPILN)>77 ORPILN=$$WRAP^ORAMX(ORPILN,77)
"RTN","ORAM2",212,0)
 .... F ORJ=1:1:$L(ORPILN,"|") W !?2,$P(ORPILN,"|",ORJ)
"RTN","ORAM2",213,0)
 ... W !
"RTN","ORAM2",214,0)
 .. ; Daily Dosing
"RTN","ORAM2",215,0)
 .. S ORAMDOSE=$P(^ORAM(103,DFN,3,ORAMFSD,0),"^",7)
"RTN","ORAM2",216,0)
 .. I $L(ORAMDOSE) D
"RTN","ORAM2",217,0)
 ... N ORAMTP,ORAMTM,ORI
"RTN","ORAM2",218,0)
 ... S ORAMPS=$P(^ORAM(103,DFN,3,ORAMFSD,0),"^",5),(ORAMTP,ORAMTM)=0
"RTN","ORAM2",219,0)
 ... W !,"Current Dosing (using ",ORAMPS," mg tab):",!
"RTN","ORAM2",220,0)
 ... W ?6,$J("Sun",6),?12,$J("Mon",6),?18,$J("Tue",6),?24,$J("Wed",6),?30,$J("Thu",6),?36,$J("Fri",6),?42,$J("Sat",6),?48,$J("Tot",6),!
"RTN","ORAM2",221,0)
 ... W "Tab" F ORI=1:1:$L(ORAMDOSE,"|") S ORAMTP=ORAMTP+($P(ORAMDOSE,"|",ORI)/ORAMPS) W ?(6*ORI),$J(($P(ORAMDOSE,"|",ORI)/ORAMPS),6)
"RTN","ORAM2",222,0)
 ... W ?48,$J(ORAMTP,6),!
"RTN","ORAM2",223,0)
 ... W "mgs" F ORI=1:1:$L(ORAMDOSE,"|") S ORAMTM=ORAMTM+$P(ORAMDOSE,"|",ORI) W ?(6*ORI),$J($P(ORAMDOSE,"|",ORI),6)
"RTN","ORAM2",224,0)
 ... W ?48,$J(ORAMTM,6),!
"RTN","ORAM2",225,0)
 .. ; Complications
"RTN","ORAM2",226,0)
 .. I +$P(^ORAM(103,DFN,3,ORAMFSD,0),"^",2) D
"RTN","ORAM2",227,0)
 ... N ORAMCTXT,ORAMCMPL
"RTN","ORAM2",228,0)
 ... S ORAMCTXT=$S($P(^ORAM(103,DFN,3,ORAMFSD,0),"^",2)=1:"Major Bleed ",$P(^(0),"^",2)=2:"Complication(s) ",$P(^(0),"^",2)=3:"Minor Bleed ",1:"")
"RTN","ORAM2",229,0)
 ... I $D(^ORAM(103,DFN,3,ORAMFSD,2)) N ORAMRSF S ORAMRSF=0 F  S ORAMRSF=$O(^ORAM(103,DFN,3,ORAMFSD,2,ORAMRSF)) Q:ORAMRSF<1  D
"RTN","ORAM2",230,0)
 .... N ORI
"RTN","ORAM2",231,0)
 .... I ORAMRSF=1 W ?38,ORAMCTXT,"noted: (",^ORAM(103,DFN,3,ORAMFSD,2,ORAMRSF,0),")",! Q
"RTN","ORAM2",232,0)
 .... S ORAMCMPL=^ORAM(103,DFN,3,ORAMFSD,2,ORAMRSF,0)
"RTN","ORAM2",233,0)
 .... I $S(ORAMCMPL["MB:":1,ORAMCMPL["C:":1,1:0) S ORAMCMPL=$P(ORAMCMPL,":",2)
"RTN","ORAM2",234,0)
 .... I $L(ORAMCMPL)>37 S ORAMCMPL=$$WRAP^ORAMX(ORAMCMPL,37)
"RTN","ORAM2",235,0)
 .... F ORI=1:1:$L(ORAMCMPL,"|") W ?$S(ORI=1:38,1:40),$P(ORAMCMPL,"|",ORI),!
"RTN","ORAM2",236,0)
 .. W ?38,"-------------------------------------",!
"RTN","ORAM2",237,0)
 Q
"RTN","ORAM2",238,0)
 ;
"RTN","ORAM2",239,0)
 ;
"RTN","ORAM2",240,0)
DTCHK(DFN,ALPHA,OMEGA,ORAMFSD) ; CHECKS DATE RANGE WITH ALPHA AND OMEGA FROM CPRS
"RTN","ORAM2",241,0)
 N ORAMFDT,ORAMVAL
"RTN","ORAM2",242,0)
 S ORAMVAL=0
"RTN","ORAM2",243,0)
 S ORAMFDT=$P(^ORAM(103,DFN,3,ORAMFSD,0),"^")
"RTN","ORAM2",244,0)
 S:ORAMFDT'<ALPHA ORAMVAL=1
"RTN","ORAM2",245,0)
 S:ORAMFDT>OMEGA ORAMVAL=0
"RTN","ORAM2",246,0)
 Q ORAMVAL
"RTN","ORAM2",247,0)
 ;
"RTN","ORAM2",248,0)
TEAMCHK(RESULT,ORAMTMS) ; SET-UP VERIFY NAMES
"RTN","ORAM2",249,0)
 ;RPC=ORAM2 TEAM CHECK
"RTN","ORAM2",250,0)
 N ORAMSKIP,ORAMI,ORAMERR
"RTN","ORAM2",251,0)
 Q:$G(ORAMTMS)=""
"RTN","ORAM2",252,0)
 F ORAMI=1:1:20 S ORAMSKIP=$G(ORAMSKIP)_" "
"RTN","ORAM2",253,0)
 S ORAMERR=0
"RTN","ORAM2",254,0)
 F ORAMI=1:1:$L(ORAMTMS,"^") D
"RTN","ORAM2",255,0)
 . N ORAMN
"RTN","ORAM2",256,0)
 . I $P(ORAMTMS,"^",ORAMI)'="" S ORAMN=$P(ORAMTMS,"^",ORAMI) D
"RTN","ORAM2",257,0)
 .. S RESULT(ORAMI)=ORAMN_$E(ORAMSKIP,1,(20-$L(ORAMN)))
"RTN","ORAM2",258,0)
 .. I $D(^OR(100.21,ORAMN)) S RESULT(ORAMI)=RESULT(ORAMI)_$P(^OR(100.21,ORAMN,0),"^")
"RTN","ORAM2",259,0)
 .. E  S RESULT(ORAMI)=RESULT(ORAMI)_"clinic not found.",ORAMERR=$G(ORAMERR)+1
"RTN","ORAM2",260,0)
 S RESULT(0)=$G(ORAMERR)
"RTN","ORAM2",261,0)
 Q
"RTN","ORAM2",262,0)
 ;
"RTN","ORAM2",263,0)
REMIND(RESULT,ORAMDFN,ORAMDT,ORAMREM) ; RPC=ORAM2 REMINDER
"RTN","ORAM2",264,0)
 N ORAMRML,ORAMDAY,ORAMR,D0,DA,DIK,X
"RTN","ORAM2",265,0)
 Q:'+$G(ORAMDFN)  Q:$G(ORAMDT)=""  Q:$G(ORAMREM)=""
"RTN","ORAM2",266,0)
 S RESULT=0
"RTN","ORAM2",267,0)
 D NOW^%DTC S ORAMDAY=X D DT^DILF(,ORAMDT,.X) S ORAMDT=X
"RTN","ORAM2",268,0)
 S $P(^ORAM(103,ORAMDFN,0),"^",18)=$G(ORAMDT)
"RTN","ORAM2",269,0)
 K ^ORAM(103,ORAMDFN,5)
"RTN","ORAM2",270,0)
 S ORAMRML=$L(ORAMREM,"^"),^ORAM(103,ORAMDFN,5,0)="^^"_ORAMRML_"^"_ORAMRML_"^"_ORAMDAY_"^"
"RTN","ORAM2",271,0)
 F ORAMR=1:1:ORAMRML D
"RTN","ORAM2",272,0)
 . S ^ORAM(103,ORAMDFN,5,ORAMR,0)=$P(ORAMREM,"^",ORAMR)
"RTN","ORAM2",273,0)
 S DIK="^ORAM(103,",DA=ORAMDFN
"RTN","ORAM2",274,0)
 D IX^DIK
"RTN","ORAM2",275,0)
 S RESULT=1
"RTN","ORAM2",276,0)
 Q
"RTN","ORAMSET")
0^11^B43363006
"RTN","ORAMSET",1,0)
ORAMSET ; ISL/JER - Anticoagulation Setup ;12/04/12  09:54
"RTN","ORAMSET",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**307,361**;Dec 17, 1997;Build 39
"RTN","ORAMSET",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","ORAMSET",4,0)
 Q
"RTN","ORAMSET",5,0)
 ;
"RTN","ORAMSET",6,0)
 ;  External References:
"RTN","ORAMSET",7,0)
 ;  $$GET1^DIQ             ICR #2056
"RTN","ORAMSET",8,0)
 ;  $$FMDIFF/$$NOW^XLFDT   ICR #10103
"RTN","ORAMSET",9,0)
 ;  $$TITLE^XLFSTR         ICR #10104
"RTN","ORAMSET",10,0)
 ;  $$GET^XPAR             ICR #2263
"RTN","ORAMSET",11,0)
 ;  $$KSP^XUPARAM          ICR #2541
"RTN","ORAMSET",12,0)
 ;
"RTN","ORAMSET",13,0)
SET ; Enter Parameters
"RTN","ORAMSET",14,0)
 N ORAMDIV,ORAMPARM,DIRUT,DUOUT,DTOUT,ORT0,ORAMTOUT K DIROUT
"RTN","ORAMSET",15,0)
 S ORAMDIV=$$GETDIV Q:+ORAMDIV'>0
"RTN","ORAMSET",16,0)
 S ORT0=$$NOW^XLFDT
"RTN","ORAMSET",17,0)
 D TED^XPAREDIT("ORAM PARAMETERS","B",ORAMDIV) Q:+$G(DIROUT)!+$$TIMEOUT(ORT0)
"RTN","ORAMSET",18,0)
 ; If Consult Link Enabled, ask Consult Request Service
"RTN","ORAMSET",19,0)
 I +$$GET^XPAR(ORAMDIV,"ORAM CONSULT LINK ENABLED") D  Q:+$D(DUOUT)!+$D(DTOUT)
"RTN","ORAMSET",20,0)
 . S ORAMPARM=+$$GETPARM("ORAM CONSULT REQUEST SERVICE")_U_"Consult Request Service" Q:+ORAMPARM'>0
"RTN","ORAMSET",21,0)
 . D EDIT^XPAREDIT(ORAMDIV,ORAMPARM)
"RTN","ORAMSET",22,0)
 ; Ask PCE Link Enabled
"RTN","ORAMSET",23,0)
 S ORAMPARM=+$$GETPARM("ORAM PCE LINK ENABLED")_U_"PCE Link Enabled" Q:+ORAMPARM'>0
"RTN","ORAMSET",24,0)
 D EDIT^XPAREDIT(ORAMDIV,ORAMPARM) Q:+$G(DIROUT)!+$G(DIRUT)!+$D(DTOUT)
"RTN","ORAMSET",25,0)
 ; Continue with PCE Parameter Template if TRUE
"RTN","ORAMSET",26,0)
 I +$$GET^XPAR(ORAMDIV,"ORAM PCE LINK ENABLED") D  Q:+$G(DIROUT)!+$G(ORAMTOUT)
"RTN","ORAMSET",27,0)
 . S ORT0=$$NOW^XLFDT
"RTN","ORAMSET",28,0)
 . D TED^XPAREDIT("ORAM PCE PARAMETERS","B",ORAMDIV)
"RTN","ORAMSET",29,0)
 . S ORAMTOUT=$$TIMEOUT(ORT0)
"RTN","ORAMSET",30,0)
 ; Continue with Letter Template
"RTN","ORAMSET",31,0)
 D TED^XPAREDIT("ORAM LETTER PARAMETERS","B",ORAMDIV)
"RTN","ORAMSET",32,0)
 Q
"RTN","ORAMSET",33,0)
 ;
"RTN","ORAMSET",34,0)
SETDIV ; Enter Site Parameters
"RTN","ORAMSET",35,0)
 N ORAMDIV,DIRUT,DUOUT,DTOUT K DIROUT
"RTN","ORAMSET",36,0)
 S ORAMDIV=$$GETDIV Q:+ORAMDIV'>0
"RTN","ORAMSET",37,0)
 D TED^XPAREDIT("ORAM SITE PARAMETERS","BA",ORAMDIV)
"RTN","ORAMSET",38,0)
 Q
"RTN","ORAMSET",39,0)
 ;
"RTN","ORAMSET",40,0)
SETCLIN ; Enter Clinic Parameters
"RTN","ORAMSET",41,0)
 N ORAMCLIN,DIRUT,DUOUT,DTOUT K DIROUT
"RTN","ORAMSET",42,0)
 S ORAMCLIN=$$SELLOC Q:+ORAMCLIN'>0
"RTN","ORAMSET",43,0)
 D TED^XPAREDIT("ORAM CLINIC PARAMETERS","BA",ORAMCLIN)
"RTN","ORAMSET",44,0)
 Q
"RTN","ORAMSET",45,0)
 ;
"RTN","ORAMSET",46,0)
TIMEOUT(T0) ; Evaluate whether TED^XPAREDIT timed-out (since it NEWs DTOUT and DIRUT)
"RTN","ORAMSET",47,0)
 Q $S($$FMDIFF^XLFDT($$NOW^XLFDT,T0,2)'<DTIME:1,1:0)
"RTN","ORAMSET",48,0)
 ;
"RTN","ORAMSET",49,0)
GETCLINS(RESULT) ; Get Clinics
"RTN","ORAMSET",50,0)
 N LIST,ERR,ORAME,ORAMI S ORAME="",ORAMI=0
"RTN","ORAMSET",51,0)
 D ENVAL^XPAR(.LIST,"ORAM CLINIC NAME",1,.ERR)
"RTN","ORAMSET",52,0)
 I 'LIST S RESULT(0)=0 Q
"RTN","ORAMSET",53,0)
 F  S ORAME=$O(LIST(ORAME)) Q:ORAME']""  D
"RTN","ORAMSET",54,0)
 . N ORAMV S ORAMV=$G(LIST(ORAME,1)) Q:ORAMV']""
"RTN","ORAMSET",55,0)
 . S ORAMI=ORAMI+1,RESULT(ORAMI)=ORAMV_U_ORAME
"RTN","ORAMSET",56,0)
 . S RESULT(0)=ORAMI
"RTN","ORAMSET",57,0)
 Q
"RTN","ORAMSET",58,0)
 ;
"RTN","ORAMSET",59,0)
CLIN4PT(RESULT,ORAMDFN) ; Get the Clinic which is following the patient
"RTN","ORAMSET",60,0)
 N ORAMCL
"RTN","ORAMSET",61,0)
 S ORAMCL=$P($G(^ORAM(103,ORAMDFN,6)),U,2)
"RTN","ORAMSET",62,0)
 S RESULT=$S(+ORAMCL>0:ORAMCL_";SC(",1:0)
"RTN","ORAMSET",63,0)
 Q
"RTN","ORAMSET",64,0)
 ;
"RTN","ORAMSET",65,0)
GET(RESULT,ORAMENT) ; Get Parameters
"RTN","ORAMSET",66,0)
 N ADD1,ADD2,ADD3,DNOTE,ENOTE,INOTE,ATEAM,CBCQO,CTEAM,CFAX,CPHONE,ORAMALL
"RTN","ORAMSET",67,0)
 N CENAB,CSVC,CPLXPH,IVST,LTR,ORIENT,SMPLPH,SVST,DSSID,DSSUNIT,HCT,HCTNM,NLABTM,TOLLFREE
"RTN","ORAMSET",68,0)
 N INRQO,MCNM,NCLOC,PCEON,PHCLIN,POCNM,RPATH,SIGNM,SIGTTL,SITENM,VLOC,PILLSTR,ICDC,DPIND
"RTN","ORAMSET",69,0)
 S ORAMENT=$S($G(ORAMENT)]"":$G(ORAMENT),1:"ALL"),DPIND=""
"RTN","ORAMSET",70,0)
 S ORAMALL=$S(ORAMENT["ALL":ORAMENT,1:"ALL^"_ORAMENT)
"RTN","ORAMSET",71,0)
 S ADD1=$$GET^XPAR(ORAMENT,"ORAM ADDRESS LINE 1",1,"I")
"RTN","ORAMSET",72,0)
 S ADD2=$$GET^XPAR(ORAMENT,"ORAM ADDRESS LINE 2",1,"I")
"RTN","ORAMSET",73,0)
 S ADD3=$$GET^XPAR(ORAMENT,"ORAM ADDRESS LINE 3",1,"I")
"RTN","ORAMSET",74,0)
 S DNOTE=$$GET^XPAR(ORAMALL,"ORAM DISCHARGE NOTE",1,"I")
"RTN","ORAMSET",75,0)
 S ENOTE=$$GET^XPAR(ORAMALL,"ORAM INTERIM NOTE",1,"I")
"RTN","ORAMSET",76,0)
 S INOTE=$$GET^XPAR(ORAMALL,"ORAM INITIAL NOTE",1,"I")
"RTN","ORAMSET",77,0)
 S ATEAM=$$GET^XPAR(ORAMENT,"ORAM TEAM LIST (ALL)",1,"I")
"RTN","ORAMSET",78,0)
 S CTEAM=$$GET^XPAR(ORAMENT,"ORAM TEAM LIST (COMPLEX)",1,"I")
"RTN","ORAMSET",79,0)
 S CBCQO=$$GET^XPAR(ORAMALL,"ORAM CBC QUICK ORDER",1,"I")
"RTN","ORAMSET",80,0)
 S CFAX=$$GET^XPAR(ORAMENT,"ORAM CLINIC FAX NUMBER",1,"I")
"RTN","ORAMSET",81,0)
 S CPHONE=$$GET^XPAR(ORAMENT,"ORAM CLINIC PHONE NUMBER",1,"I")
"RTN","ORAMSET",82,0)
 S TOLLFREE=$$GET^XPAR(ORAMENT,"ORAM TOLL FREE PHONE",1,"I")
"RTN","ORAMSET",83,0)
 S CENAB=$$GET^XPAR(ORAMENT,"ORAM CONSULT LINK ENABLED",1,"I")
"RTN","ORAMSET",84,0)
 S CSVC=$$GET^XPAR(ORAMENT,"ORAM CONSULT REQUEST SERVICE",1,"E")
"RTN","ORAMSET",85,0)
 S CPLXPH=$$GET^XPAR(ORAMALL,"ORAM CPT FOR COMPLEX PHONE",1,"I")
"RTN","ORAMSET",86,0)
 S IVST=$$GET^XPAR(ORAMALL,"ORAM CPT FOR INITIAL VISIT",1,"I")
"RTN","ORAMSET",87,0)
 S LTR=$$GET^XPAR(ORAMALL,"ORAM CPT FOR LETTER TO PT",1,"I")
"RTN","ORAMSET",88,0)
 S ORIENT=$$GET^XPAR(ORAMALL,"ORAM CPT FOR ORIENTATION",1,"I")
"RTN","ORAMSET",89,0)
 S SMPLPH=$$GET^XPAR(ORAMALL,"ORAM CPT FOR SIMPLE PHONE",1,"I")
"RTN","ORAMSET",90,0)
 S SVST=$$GET^XPAR(ORAMALL,"ORAM CPT FOR SUBSEQUENT VISIT",1,"I")
"RTN","ORAMSET",91,0)
 S DSSID=$$GET^XPAR(ORAMALL,"ORAM DSS ID",1,"I")
"RTN","ORAMSET",92,0)
 S DSSUNIT=$$GET^XPAR(ORAMALL,"ORAM DSS UNIT",1,"I")
"RTN","ORAMSET",93,0)
 S HCT=$$GET^XPAR(ORAMALL,"ORAM HCT/HGB REFERENCE",1,"B")
"RTN","ORAMSET",94,0)
 S HCTNM=$P(HCT,U,2)
"RTN","ORAMSET",95,0)
 S HCT=$P(HCT,U)
"RTN","ORAMSET",96,0)
 S INRQO=$$GET^XPAR(ORAMALL,"ORAM INR QUICK ORDER",1,"I")
"RTN","ORAMSET",97,0)
 S MCNM=$$GET^XPAR(ORAMALL,"ORAM MEDICAL CENTER NAME",1,"I")
"RTN","ORAMSET",98,0)
 S NCLOC=$$GET^XPAR(ORAMENT,"ORAM NON-COUNT LOCATION",1,"I")
"RTN","ORAMSET",99,0)
 S PCEON=$$GET^XPAR(ORAMENT,"ORAM PCE LINK ENABLED",1,"I")
"RTN","ORAMSET",100,0)
 S ICDC=$$GET^XPAR(ORAMENT,"ORAM AUTO PRIMARY INDICATION",1,"E")
"RTN","ORAMSET",101,0)
 I ICDC]"" D
"RTN","ORAMSET",102,0)
 . N ICDDESC
"RTN","ORAMSET",103,0)
 . D ICDDESC^ICDXCODE("DIAGNOSIS",ICDC,DT,.ICDDESC)
"RTN","ORAMSET",104,0)
 . S DPIND=ICDC_U_$$TITLE^XLFSTR($G(ICDDESC(1)))_" ("_ICDC_")"
"RTN","ORAMSET",105,0)
 S PHCLIN=$$GET^XPAR(ORAMENT,"ORAM PHONE CLINIC",1,"I")
"RTN","ORAMSET",106,0)
 S PILLSTR=$$GET^XPAR(ORAMENT,"ORAM DEFAULT PILL STRENGTH",1,"I")
"RTN","ORAMSET",107,0)
 S NLABTM=$$GET^XPAR(ORAMENT,"ORAM INCL TIME W/NEXT INR DATE",1,"I")
"RTN","ORAMSET",108,0)
 S POCNM=$$GET^XPAR(ORAMENT,"ORAM POINT OF CONTACT NAME",1,"I")
"RTN","ORAMSET",109,0)
 S RPATH=$$GET^XPAR(ORAMALL,"ORAM RAV FILE PATH",1,"I")
"RTN","ORAMSET",110,0)
 S SIGNM=$$GET^XPAR(ORAMENT,"ORAM SIGNATURE BLOCK NAME",1,"I")
"RTN","ORAMSET",111,0)
 S SIGTTL=$$GET^XPAR(ORAMENT,"ORAM SIGNATURE BLOCK TITLE",1,"I")
"RTN","ORAMSET",112,0)
 S SITENM=$$GET^XPAR(ORAMENT,"ORAM CLINIC NAME",1,"I")
"RTN","ORAMSET",113,0)
 S VLOC=$$GET^XPAR(ORAMENT,"ORAM VISIT LOCATION",1,"I")
"RTN","ORAMSET",114,0)
 S RESULT(0)=SITENM_U_ATEAM_U_CTEAM_U_INOTE_U_ENOTE_U_DNOTE_U_SMPLPH_U_SVST_U_CPLXPH_U_ORIENT_U_IVST_U_CENAB_U_PCEON_U_LTR_U_U_ADD1_U_ADD2_U_ADD3
"RTN","ORAMSET",115,0)
 S RESULT(1)=SIGNM_U_SIGTTL_U_POCNM_U_CPHONE_"|"_CFAX_U_MCNM_U_PILLSTR_U_NLABTM_U_TOLLFREE
"RTN","ORAMSET",116,0)
 S RESULT(2)=VLOC_"|"_PHCLIN_"|"_NCLOC_U_INRQO_"|"_CBCQO_U_DUZ(2)_U_DSSUNIT_U_DSSID_U_CSVC_U_HCT_"|"_HCTNM_U_RPATH_U_DPIND
"RTN","ORAMSET",117,0)
 Q
"RTN","ORAMSET",118,0)
 ;
"RTN","ORAMSET",119,0)
INDICS(RESULT) ; RPC To Get indications for care
"RTN","ORAMSET",120,0)
 D GETLST^XPAR(.RESULT,"SYS^PKG","ORAM INDICATIONS FOR CARE","E")
"RTN","ORAMSET",121,0)
 I +RESULT'>0 S RESULT(0)=0
"RTN","ORAMSET",122,0)
 Q
"RTN","ORAMSET",123,0)
 ;
"RTN","ORAMSET",124,0)
GETDIV() ; get division
"RTN","ORAMSET",125,0)
 N DIV,ORAMY
"RTN","ORAMSET",126,0)
 S DIV=$$KSP^XUPARAM("INST"),ORAMY=0
"RTN","ORAMSET",127,0)
 I $$GET1^DIQ(4,DIV_",",5,"I")'="Y" S ORAMY=DIV_";DIC(4," I 1
"RTN","ORAMSET",128,0)
 E  S ORAMY=$$SELDIV
"RTN","ORAMSET",129,0)
 Q ORAMY
"RTN","ORAMSET",130,0)
SELDIV() ; select division
"RTN","ORAMSET",131,0)
 N DIC,X,Y
"RTN","ORAMSET",132,0)
 W !!,"Enter Anticoagulation Management Parameters by Division:",!
"RTN","ORAMSET",133,0)
 S DIC=4,DIC(0)="AEMQ",DIC("S")="I +$O(^DG(40.8,""AD"",+Y,0))"
"RTN","ORAMSET",134,0)
 D ^DIC S:+Y>0 Y=+Y_";DIC(4,"
"RTN","ORAMSET",135,0)
 Q Y
"RTN","ORAMSET",136,0)
SELLOC() ; select hospital location
"RTN","ORAMSET",137,0)
 N DIC,X,Y,TIUAPDT S DIC=44,DIC(0)="AEMQ"
"RTN","ORAMSET",138,0)
 S DIC("A")="Select CLINIC: "
"RTN","ORAMSET",139,0)
 S DIC("S")="I $$GOODLOC^ORAMSET(Y)"
"RTN","ORAMSET",140,0)
 D ^DIC K DIC("S") S:+Y>0 Y=+Y_";SC("
"RTN","ORAMSET",141,0)
 Q Y
"RTN","ORAMSET",142,0)
GOODLOC(LOC) ; Returns 1 if ^SC hospital location IFN LOC is good, else 0
"RTN","ORAMSET",143,0)
 N GOODLOC,INACTIVE,OOS,CLINIC,NONCOUNT S (GOODLOC,INACTIVE,NONCOUNT)=0
"RTN","ORAMSET",144,0)
 I +$G(^SC(LOC,"I"))>0,(+$G(^("I"))'>DT) D
"RTN","ORAMSET",145,0)
 . S INACTIVE=1
"RTN","ORAMSET",146,0)
 . ; check if reactivated:
"RTN","ORAMSET",147,0)
 . I +$P($G(^("I")),U,2)>0,$P($G(^("I")),U,2)'>DT S INACTIVE=0
"RTN","ORAMSET",148,0)
 S OOS=+$D(^SC(LOC,"OOS")) ; Occasion of service
"RTN","ORAMSET",149,0)
 S CLINIC=+($P(^SC(LOC,0),U,3)="C")
"RTN","ORAMSET",150,0)
 S NONCOUNT=$S($P(^SC(LOC,0),U,17)="Y":1,1:0)
"RTN","ORAMSET",151,0)
 I 'INACTIVE,'OOS,'NONCOUNT,CLINIC S GOODLOC=1
"RTN","ORAMSET",152,0)
 Q GOODLOC
"RTN","ORAMSET",153,0)
GETPARM(X) ; Get parameter as IEN^NAME
"RTN","ORAMSET",154,0)
 N DIC,Y S DIC=8989.51,DIC(0)="MQ"
"RTN","ORAMSET",155,0)
 D ^DIC
"RTN","ORAMSET",156,0)
 Q Y
"RTN","ORAMX")
0^12^B164083781
"RTN","ORAMX",1,0)
ORAMX ;POR/RSF - ADDITIONAL ANTICOAGULATION CALLS ;06/12/14  15:57
"RTN","ORAMX",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**307,339,361**;Dec 17, 1997;Build 39
"RTN","ORAMX",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified
"RTN","ORAMX",4,0)
 Q
"RTN","ORAMX",5,0)
 ;
"RTN","ORAMX",6,0)
 ;  External References:
"RTN","ORAMX",7,0)
 ;  $$EXTERNAL^DILFD        ICR #2055
"RTN","ORAMX",8,0)
 ;  $$ICDDATA^ICDXCODE      ICR #5699
"RTN","ORAMX",9,0)
 ;  $$DATA2PCE^PXAPI        ICR #1889
"RTN","ORAMX",10,0)
 ;  $$FMTE/$$NOW^XLFDT      ICR #10103
"RTN","ORAMX",11,0)
 ;  $$LOW/$$UP^XLFSTR       ICR #10104
"RTN","ORAMX",12,0)
 ;
"RTN","ORAMX",13,0)
COMPRPT  ; Complications Report [ORAM COMPLICATIONS REPORT]
"RTN","ORAMX",14,0)
 N DIRUT,ORAMSDT,ORAMEDT,ORAMSD,ORAMED,ORAMM,ORAMDL,ORAMT,ORAFMT,ORAMDFN,ORAMCNT,ORAMARR,ORAMINCM,ORAMSORT
"RTN","ORAMX",15,0)
 S (ORAMED,ORAMSD)="",ORAMINCM=1
"RTN","ORAMX",16,0)
 W !!,"Anticoagulation Complications Report",!
"RTN","ORAMX",17,0)
 F  D  Q:+ORAMED>+ORAMSD!+$G(DIRUT)
"RTN","ORAMX",18,0)
 . S ORAMSD=+$$READ("DA^::E","    Please Enter START Date: ","T-90","Enter a start date for the report")
"RTN","ORAMX",19,0)
 . Q:'ORAMSD
"RTN","ORAMX",20,0)
 . S ORAMED=+$$READ("DA^::E","      Please Enter END Date: ","T","Enter an INCLUSIVE end date for the report")
"RTN","ORAMX",21,0)
 . Q:'ORAMED
"RTN","ORAMX",22,0)
 . I $L(ORAMED,".")=1 S ORAMED=ORAMED_".2359"
"RTN","ORAMX",23,0)
 . I ORAMSD>ORAMED W !,"END DATE must be more recent than the START DATE" S (ORAMSD,ORAMED)=""
"RTN","ORAMX",24,0)
 Q:$S(ORAMSD'>0:1,ORAMED'>0:1,1:0)
"RTN","ORAMX",25,0)
 S ORAMSDT=$$FMTE^XLFDT(ORAMSD,2),ORAMEDT=$$FMTE^XLFDT(ORAMED,2)
"RTN","ORAMX",26,0)
 W ! S ORAFMT=$$READ("SA^r:Report;e:Export to Spreadsheet","      Please Specify Format: ","Report")
"RTN","ORAMX",27,0)
 Q:+$G(DIRUT)
"RTN","ORAMX",28,0)
 S:"Ee"[$P(ORAFMT,U) ORAMDL=1 S:"Rr"[$P(ORAFMT,U) ORAMDL=0
"RTN","ORAMX",29,0)
 W ! S ORAMSORT=$$READ("SA^c:Clinic;d:Division","              Sort/Tally By: ","Clinic")
"RTN","ORAMX",30,0)
 Q:+$G(DIRUT)
"RTN","ORAMX",31,0)
 S ORAMSORT=$P(ORAMSORT,U)
"RTN","ORAMX",32,0)
 W ! S ORAMINCM=+$$READ("YA","Include Minor Complications? ","YES")
"RTN","ORAMX",33,0)
 Q:+$G(DIRUT)
"RTN","ORAMX",34,0)
 S (ORAMCNT,ORAMDFN)=0
"RTN","ORAMX",35,0)
 F  S ORAMDFN=$O(^ORAM(103,ORAMDFN)) Q:'$G(ORAMDFN)  D
"RTN","ORAMX",36,0)
 . N ORAMFS S ORAMFS=" "
"RTN","ORAMX",37,0)
 . F  S ORAMFS=$O(^ORAM(103,ORAMDFN,3,ORAMFS),-1) Q:'+$G(ORAMFS)  D
"RTN","ORAMX",38,0)
 .. N ORAMCP
"RTN","ORAMX",39,0)
 .. I $P(^ORAM(103,ORAMDFN,3,ORAMFS,0),U)<ORAMSD Q
"RTN","ORAMX",40,0)
 .. I $P(^ORAM(103,ORAMDFN,3,ORAMFS,0),U)>ORAMED Q
"RTN","ORAMX",41,0)
 .. S ORAMCP=$P(^ORAM(103,ORAMDFN,3,ORAMFS,0),U,2)
"RTN","ORAMX",42,0)
 .. I +$G(ORAMCP) D
"RTN","ORAMX",43,0)
 ... N ORAMLOC,ORAMM,ORAMCLNO,ORAMCLNM,ORAMDIVN,ORAMDIV
"RTN","ORAMX",44,0)
 ... I (+ORAMINCM'>0),(ORAMCP>2) Q
"RTN","ORAMX",45,0)
 ... S ORAMCLNO=+$P($G(^ORAM(103,ORAMDFN,6)),U,2)
"RTN","ORAMX",46,0)
 ... I ORAMCLNO>0 D
"RTN","ORAMX",47,0)
 .... S ORAMDIVN=+$P($G(^SC(ORAMCLNO,0)),U,15)
"RTN","ORAMX",48,0)
 .... S ORAMCLNM=$$EXTERNAL^DILFD(103,101,"",ORAMCLNO) S:$G(ORAMCLNM)="" ORAMCLNM="CLINIC UNKNOWN"
"RTN","ORAMX",49,0)
 .... S ORAMDIV=$$EXTERNAL^DILFD(44,3.5,"",ORAMDIVN) S:$G(ORAMDIV)="" ORAMDIV="DIVISION UNKNOWN"
"RTN","ORAMX",50,0)
 ... E  S ORAMCLNM="CLINIC UNKNOWN",ORAMDIV="DIVISION UNKNOWN"
"RTN","ORAMX",51,0)
 ... S ORAMLOC=$S(ORAMSORT="c":ORAMCLNM,1:ORAMDIV)
"RTN","ORAMX",52,0)
 ... S ORAMARR(ORAMLOC,0)=$G(ORAMARR(ORAMLOC,0))+1
"RTN","ORAMX",53,0)
 ... S ORAMM=$E($P(^DPT($G(ORAMDFN),0),U),1,10)_" ("_$E($P(^(0),U,9),6,9)_")"
"RTN","ORAMX",54,0)
 ... I ORAMCP=1!(+ORAMINCM&(ORAMCP=3)) D
"RTN","ORAMX",55,0)
 .... S ORAMARR(ORAMLOC,"B",0)=$G(ORAMARR(ORAMLOC,"B",0))+1
"RTN","ORAMX",56,0)
 .... S ORAMARR(ORAMLOC,"B",ORAMDFN,$P(^ORAM(103,ORAMDFN,3,ORAMFS,0),U)_ORAMFS,1)=ORAMM_": INR Draw date - "_$$FMTE^XLFDT($P(^ORAM(103,ORAMDFN,3,ORAMFS,0),U),"2P")
"RTN","ORAMX",57,0)
 .... N ORAMJ S ORAMJ=0
"RTN","ORAMX",58,0)
 .... F  S ORAMJ=$O(^ORAM(103,ORAMDFN,3,ORAMFS,2,ORAMJ)) Q:+ORAMJ'>0  D
"RTN","ORAMX",59,0)
 ..... N ORAMCMPL,ORAMFS0
"RTN","ORAMX",60,0)
 ..... S ORAMFS0=$G(^ORAM(103,ORAMDFN,3,ORAMFS,0))
"RTN","ORAMX",61,0)
 ..... S ORAMCMPL=$G(^ORAM(103,ORAMDFN,3,ORAMFS,2,ORAMJ,0))
"RTN","ORAMX",62,0)
 ..... S:$L(ORAMCMPL,":")>1 ORAMCMPL=$S($P(ORAMCMPL,":")="MB":"Major Bleed: ",$P(ORAMCMPL,":")="C":"  ",1:ORAMCMPL)_$P(ORAMCMPL,":",2)
"RTN","ORAMX",63,0)
 ..... S ORAMARR(ORAMLOC,"B",ORAMDFN,$P(ORAMFS0,U)_ORAMFS,1_"."_ORAMJ)=$S(ORAMJ=1:"Complication date: ",1:"")_ORAMCMPL
"RTN","ORAMX",64,0)
 ..... S ORAMARR(ORAMLOC,"BX",ORAMDFN,$P(ORAMFS0,U)_ORAMFS,99)=$TR(ORAMLOC,";",",")_";"_$S(ORAMCP=3:"Minor Bleed",1:"Hemorrhagic")_";"_ORAMM_";"_$$FMTE^XLFDT($P(ORAMFS0,U),"2P")_";"
"RTN","ORAMX",65,0)
 ..... S ORAMARR(ORAMLOC,"BX",ORAMDFN,$P(ORAMFS0,U)_ORAMFS,99)=ORAMARR(ORAMLOC,"BX",ORAMDFN,$P(ORAMFS0,U)_ORAMFS,99)_$G(^ORAM(103,ORAMDFN,3,ORAMFS,2,1,0))
"RTN","ORAMX",66,0)
 ... I ORAMCP=2 D
"RTN","ORAMX",67,0)
 .... S ORAMARR(ORAMLOC,"C",0)=$G(ORAMARR(ORAMLOC,"C",0))+1
"RTN","ORAMX",68,0)
 .... S ORAMARR(ORAMLOC,"C",ORAMDFN,$P(^ORAM(103,ORAMDFN,3,ORAMFS,0),U)_ORAMFS,1)=ORAMM_": INR Draw date - "_$$FMTE^XLFDT($P(^ORAM(103,ORAMDFN,3,ORAMFS,0),U),"2P")
"RTN","ORAMX",69,0)
 .... N ORAMJ S ORAMJ=0
"RTN","ORAMX",70,0)
 .... F  S ORAMJ=$O(^ORAM(103,ORAMDFN,3,ORAMFS,2,ORAMJ)) Q:'+$G(ORAMJ)  D
"RTN","ORAMX",71,0)
 ..... N ORAMCMPL,ORAMFS0
"RTN","ORAMX",72,0)
 ..... S ORAMFS0=$G(^ORAM(103,ORAMDFN,3,ORAMFS,0))
"RTN","ORAMX",73,0)
 ..... S ORAMCMPL=^ORAM(103,ORAMDFN,3,ORAMFS,2,ORAMJ,0)
"RTN","ORAMX",74,0)
 ..... S:$L(ORAMCMPL,":")>1 ORAMCMPL=$S($P(ORAMCMPL,":")="MB":"Major Bleed: ",$P(ORAMCMPL,":")="C":"  ",1:ORAMCMPL)_$P(ORAMCMPL,":",2)
"RTN","ORAMX",75,0)
 ..... S ORAMARR(ORAMLOC,"C",ORAMDFN,$P(ORAMFS0,U)_ORAMFS,1_"."_ORAMJ)=$S(ORAMJ=1:"Complication date: ",1:"")_ORAMCMPL
"RTN","ORAMX",76,0)
 ..... S ORAMARR(ORAMLOC,"CX",ORAMDFN,$P(ORAMFS0,U)_ORAMFS,99)=$TR(ORAMLOC,";",",")_";Thrombotic;"_ORAMM_";"_$$FMTE^XLFDT($P(ORAMFS0,U),"2P")_";"_$G(^ORAM(103,ORAMDFN,3,ORAMFS,2,1,0))
"RTN","ORAMX",77,0)
 I ORAMDL=0 D COMP0(.ORAMARR,ORAMSDT,ORAMEDT,ORAMINCM)
"RTN","ORAMX",78,0)
 I ORAMDL=1 D COMP1(.ORAMARR,ORAMSDT,ORAMEDT,ORAMINCM,ORAMSORT)
"RTN","ORAMX",79,0)
 Q
"RTN","ORAMX",80,0)
COMP0(ORAMARR,ORAMSDT,ORAMEDT,ORAMINCM) ; Print Report Format
"RTN","ORAMX",81,0)
 N OCLINIC
"RTN","ORAMX",82,0)
 W @IOF,"COMPLICATIONS REPORT - ANTICOAGULATION: ",ORAMSDT," - ",ORAMEDT,!,$S('ORAMINCM:"  (** EXCLUDING MINOR COMPLICATIONS **)"_$C(13)_$C(10),1:"")
"RTN","ORAMX",83,0)
 I '$D(ORAMARR) W !,?5,"No Complications Noted."  Q
"RTN","ORAMX",84,0)
 S OCLINIC=""
"RTN","ORAMX",85,0)
 F  S OCLINIC=$O(ORAMARR(OCLINIC)) Q:OCLINIC']""  D
"RTN","ORAMX",86,0)
 . W !!,?5,OCLINIC,": Total Complications - ",ORAMARR(OCLINIC,0)
"RTN","ORAMX",87,0)
 . I $G(ORAMARR(OCLINIC,"B",0))>0 D  ;BLEEDS FOR THIS CLINIC
"RTN","ORAMX",88,0)
 .. N ODFN
"RTN","ORAMX",89,0)
 .. W !!,?7," Bleeds (",ORAMARR(OCLINIC,"B",0),")",!
"RTN","ORAMX",90,0)
 .. W !,?7," Details:"
"RTN","ORAMX",91,0)
 .. S ODFN=0 F  S ODFN=$O(ORAMARR(OCLINIC,"B",ODFN)) Q:+ODFN'>0  D
"RTN","ORAMX",92,0)
 ... N OCDATE S OCDATE=0
"RTN","ORAMX",93,0)
 ... F  S OCDATE=$O(ORAMARR(OCLINIC,"B",ODFN,OCDATE)) Q:+OCDATE'>0  D
"RTN","ORAMX",94,0)
 .... N OCNT S OCNT=0 W !
"RTN","ORAMX",95,0)
 .... F  S OCNT=$O(ORAMARR(OCLINIC,"B",ODFN,OCDATE,OCNT)) Q:+OCNT'>0  D
"RTN","ORAMX",96,0)
 ..... W !,?8,ORAMARR(OCLINIC,"B",ODFN,OCDATE,OCNT)
"RTN","ORAMX",97,0)
 . I $G(ORAMARR(OCLINIC,"C",0))>0 D  ;CLOTS FOR THIS CLINIC
"RTN","ORAMX",98,0)
 .. N ODFN
"RTN","ORAMX",99,0)
 .. W !!,?7," Clots (",ORAMARR(OCLINIC,"C",0),")",!
"RTN","ORAMX",100,0)
 .. W !,?7," Details:"
"RTN","ORAMX",101,0)
 .. S ODFN=0 F  S ODFN=$O(ORAMARR(OCLINIC,"C",ODFN)) Q:+ODFN'>0  D
"RTN","ORAMX",102,0)
 ... N OCDATE S OCDATE=0
"RTN","ORAMX",103,0)
 ... F  S OCDATE=$O(ORAMARR(OCLINIC,"C",ODFN,OCDATE)) Q:+OCDATE'>0  D
"RTN","ORAMX",104,0)
 .... N OCNT S OCNT=0 W !
"RTN","ORAMX",105,0)
 .... F  S OCNT=$O(ORAMARR(OCLINIC,"C",ODFN,OCDATE,OCNT)) Q:+OCNT'>0  D
"RTN","ORAMX",106,0)
 ..... W !,?8,ORAMARR(OCLINIC,"C",ODFN,OCDATE,OCNT)
"RTN","ORAMX",107,0)
 Q
"RTN","ORAMX",108,0)
COMP1(ORAMARR,ORAMSDT,ORAMEDT,ORAMINCM,ORAMSORT) ; Print Export Format
"RTN","ORAMX",109,0)
 N OCLINIC
"RTN","ORAMX",110,0)
 W @IOF,"COMPLICATIONS REPORT - ANTICOAGULATION: ",ORAMSDT," - ",ORAMEDT,!,$S('ORAMINCM:"  (** EXCLUDING MINOR COMPLICATIONS **)"_$C(13)_$C(10),1:"")
"RTN","ORAMX",111,0)
 I '$D(ORAMARR) W !,?5,"No Complications Noted."  Q
"RTN","ORAMX",112,0)
 W !,$S(ORAMSORT="c":"Clinic",1:"Division"),";Event;Patient;INR Draw Date;Complication Date"
"RTN","ORAMX",113,0)
 S OCLINIC="" F  S OCLINIC=$O(ORAMARR(OCLINIC)) Q:OCLINIC']""  D
"RTN","ORAMX",114,0)
 . I $D(ORAMARR(OCLINIC,"BX")) D  ;BLEEDS FOR THIS CLINIC
"RTN","ORAMX",115,0)
 .. N ODFN S ODFN=0 F  S ODFN=$O(ORAMARR(OCLINIC,"BX",ODFN)) Q:'+$G(ODFN)  D
"RTN","ORAMX",116,0)
 ... N OCDATE S OCDATE=0 F  S OCDATE=$O(ORAMARR(OCLINIC,"BX",ODFN,OCDATE)) Q:'+$G(OCDATE)  D
"RTN","ORAMX",117,0)
 .... W !,ORAMARR(OCLINIC,"BX",ODFN,OCDATE,99)
"RTN","ORAMX",118,0)
 . I $D(ORAMARR(OCLINIC,"CX")) D  ;CLOTS FOR THIS CLINIC
"RTN","ORAMX",119,0)
 .. N ODFN S ODFN=0 F  S ODFN=$O(ORAMARR(OCLINIC,"CX",ODFN)) Q:'+$G(ODFN)  D
"RTN","ORAMX",120,0)
 ... N OCDATE S OCDATE=0 F  S OCDATE=$O(ORAMARR(OCLINIC,"CX",ODFN,OCDATE)) Q:'+$G(OCDATE)  D
"RTN","ORAMX",121,0)
 .... W !,ORAMARR(OCLINIC,"CX",ODFN,OCDATE,99)
"RTN","ORAMX",122,0)
 Q
"RTN","ORAMX",123,0)
 ;
"RTN","ORAMX",124,0)
CONSULT(RESULT,ORAMDFN,ORAMCNM) ; Called from RPC=ORAMX CONSULT
"RTN","ORAMX",125,0)
 I '+$G(ORAMDFN) S RESULT(0)=0 Q
"RTN","ORAMX",126,0)
 I $G(ORAMCNM)="" S RESULT(0)=0 Q
"RTN","ORAMX",127,0)
 N ORAMCLST S ORAMCLST(0)=0
"RTN","ORAMX",128,0)
 D RPCLIST^GMRCTIU(.ORAMCLST,ORAMDFN)
"RTN","ORAMX",129,0)
 Q:ORAMCLST(0)=0  ;SHOULD BE NUMBER IN THE ARRAY
"RTN","ORAMX",130,0)
 I ORAMCLST(0)>0 D
"RTN","ORAMX",131,0)
 . N ORAMC S ORAMC=0 F  S ORAMC=$O(ORAMCLST(ORAMC)) Q:'+$G(ORAMC)  D
"RTN","ORAMX",132,0)
 .. Q:ORAMCNM'=$P(ORAMCLST(ORAMC),U,3)
"RTN","ORAMX",133,0)
 .. N ORAMK,ORAMCSTS
"RTN","ORAMX",134,0)
 .. S ORAMK=0,ORAMCSTS=$P(ORAMCLST(ORAMC),U,5)
"RTN","ORAMX",135,0)
 .. I $S(ORAMCSTS="PENDING":1,ORAMCSTS="ACTIVE":1,ORAMCSTS="SCHEDULED":1,1:0) S ORAMK=1
"RTN","ORAMX",136,0)
 .. Q:'+ORAMK
"RTN","ORAMX",137,0)
 .. N ORAMD S ORAMD=$$FMTE^XLFDT($P(ORAMCLST(ORAMC),U,2),"2P")
"RTN","ORAMX",138,0)
 .. S RESULT(ORAMC)=ORAMD_":  "_$P(ORAMCLST(ORAMC),U,3)_"  ^"_$P(ORAMCLST(ORAMC),U,1)
"RTN","ORAMX",139,0)
 Q
"RTN","ORAMX",140,0)
PCESET(RESULT,ORAMDFN,ORAMD1,ORAMSC44,ORAMEDT,ORAMSVC,ORAMNARR,ORAMPDX) ; RPC to file PCE Data
"RTN","ORAMX",141,0)
 ; RPC = ORAMX PCESET
"RTN","ORAMX",142,0)
 ; ORAMDFN  = Pt. ID
"RTN","ORAMX",143,0)
 ; ORAMD1   = Data string e.g., 1143~27898|300|99363|427.31|^SC~0^IR~0^EC~1^MST~0^HNC~1^SHAD~0
"RTN","ORAMX",144,0)
 ; ORAMSC44 = Hospital Location IEN
"RTN","ORAMX",145,0)
 ; ORAMEDT  = Encounter Date/Time
"RTN","ORAMX",146,0)
 ; ORAMSVC  = Service Category (e.g., "A"mbulatory or "T"elecommunications)
"RTN","ORAMX",147,0)
 ; ORAMNARR = Provider Narrative for Dx
"RTN","ORAMX",148,0)
 ; ORAMPDX  = Automatic Primary Indication code for Clinic
"RTN","ORAMX",149,0)
 ;
"RTN","ORAMX",150,0)
 I '+$G(ORAMDFN) S RESULT=99 Q
"RTN","ORAMX",151,0)
 I '+$G(ORAMSC44) S RESULT=99 Q
"RTN","ORAMX",152,0)
 I $G(ORAMD1)']"" S RESULT=99 Q
"RTN","ORAMX",153,0)
 N ORAMNOW,ORAMDAY S ORAMNOW=$$NOW^XLFDT
"RTN","ORAMX",154,0)
 S RESULT=0,ORAMEDT=$G(ORAMEDT,ORAMNOW),ORAMDAY=$P(ORAMEDT,"."),ORAMSVC=$G(ORAMSVC,"A")
"RTN","ORAMX",155,0)
 I $G(ORAMD1)'="" D
"RTN","ORAMX",156,0)
 . N ORAMPPR,ORAMSPR,ORAMCPT,ORAMSC,ORAMDX,ORAMQ,ORAMVST,ERRARR,ERRPROB,ORAMPDXC,ORAMPDXT,ORAMPDXN,ORAMDXC
"RTN","ORAMX",157,0)
 . S ORAMPPR=$P($P(ORAMD1,"|"),"~"),ORAMSPR=$P($P(ORAMD1,"|"),"~",2),ORAMSC=$P(ORAMD1,"|",2),ORAMCPT=$P(ORAMD1,"|",3),ORAMQ=$P(ORAMD1,"|",5)
"RTN","ORAMX",158,0)
 . S ORAMDXC=$P(ORAMD1,"|",4)
"RTN","ORAMX",159,0)
 . I (ORAMDXC]""),(ORAMDXC'[".") S ORAMDXC=ORAMDXC_"."
"RTN","ORAMX",160,0)
 . S ORAMDX=+$$ICDDATA^ICDXCODE("DIAGNOSIS",ORAMDXC,ORAMEDT,"E")
"RTN","ORAMX",161,0)
 . I +ORAMDX'>0 S RESULT=99 Q
"RTN","ORAMX",162,0)
 . I $P($G(ORAMPDX),U)]"" D
"RTN","ORAMX",163,0)
 . . S ORAMPDXC=$P(ORAMPDX,U),ORAMPDXT=$P(ORAMPDX,U,2)
"RTN","ORAMX",164,0)
 . . I (ORAMDXC]""),(ORAMPDXC'[".") S ORAMPDXC=ORAMPDXC_"."
"RTN","ORAMX",165,0)
 . . S ORAMPDXN=+$$ICDDATA^ICDXCODE("DIAGNOSIS",ORAMPDXC,ORAMEDT,"E")
"RTN","ORAMX",166,0)
 . . Q:+ORAMPDXN'>0
"RTN","ORAMX",167,0)
 . . S ^TMP("ORAMPCE",$J,"DX/PL",1,"DIAGNOSIS")=$G(ORAMPDXN)
"RTN","ORAMX",168,0)
 . . S ^TMP("ORAMPCE",$J,"DX/PL",1,"PRIMARY")="P"
"RTN","ORAMX",169,0)
 . . S:ORAMPDXT]"" ^TMP("ORAMPCE",$J,"DX/PL",1,"NARRATIVE")=ORAMPDXT
"RTN","ORAMX",170,0)
 . . S ^TMP("ORAMPCE",$J,"DX/PL",2,"DIAGNOSIS")=$G(ORAMDX)
"RTN","ORAMX",171,0)
 . . S ^TMP("ORAMPCE",$J,"DX/PL",2,"PRIMARY")="S"
"RTN","ORAMX",172,0)
 . . S:$G(ORAMNARR)]"" ^TMP("ORAMPCE",$J,"DX/PL",2,"NARRATIVE")=ORAMNARR
"RTN","ORAMX",173,0)
 . E  D
"RTN","ORAMX",174,0)
 . . S ^TMP("ORAMPCE",$J,"DX/PL",1,"DIAGNOSIS")=$G(ORAMDX)
"RTN","ORAMX",175,0)
 . . S ^TMP("ORAMPCE",$J,"DX/PL",1,"PRIMARY")="P"
"RTN","ORAMX",176,0)
 . . S:$G(ORAMNARR)]"" ^TMP("ORAMPCE",$J,"DX/PL",1,"NARRATIVE")=ORAMNARR
"RTN","ORAMX",177,0)
 . S ^TMP("ORAMPCE",$J,"ENCOUNTER",1,"DSS ID")=$G(ORAMSC)  ;STOP CODE 40.7
"RTN","ORAMX",178,0)
 . S ^TMP("ORAMPCE",$J,"ENCOUNTER",1,"ENC D/T")=ORAMEDT
"RTN","ORAMX",179,0)
 . S ^TMP("ORAMPCE",$J,"ENCOUNTER",1,"HOS LOC")=ORAMSC44  ;9727 ;8005
"RTN","ORAMX",180,0)
 . S ^TMP("ORAMPCE",$J,"ENCOUNTER",1,"PATIENT")=ORAMDFN
"RTN","ORAMX",181,0)
 . S ^TMP("ORAMPCE",$J,"ENCOUNTER",1,"ENCOUNTER TYPE")="P"  ;PRIMARY OR ANCILLARY
"RTN","ORAMX",182,0)
 . S ^TMP("ORAMPCE",$J,"ENCOUNTER",1,"SERVICE CATEGORY")=ORAMSVC
"RTN","ORAMX",183,0)
 . S ^TMP("ORAMPCE",$J,"ENCOUNTER",1,"CHECKOUT D/T")=$$NOW^XLFDT
"RTN","ORAMX",184,0)
 . S ^TMP("ORAMPCE",$J,"PROCEDURE",1,"PROCEDURE")=$G(ORAMCPT)
"RTN","ORAMX",185,0)
 . S ^TMP("ORAMPCE",$J,"PROCEDURE",1,"DIAGNOSIS")=$S($G(ORAMPDXN)]"":ORAMPDXN,1:$G(ORAMDX))
"RTN","ORAMX",186,0)
 . S ^TMP("ORAMPCE",$J,"PROCEDURE",1,"EVENT D/T")=ORAMEDT
"RTN","ORAMX",187,0)
 . S ^TMP("ORAMPCE",$J,"PROCEDURE",1,"QTY")=1
"RTN","ORAMX",188,0)
 . S:ORAMPPR]"" ^TMP("ORAMPCE",$J,"PROCEDURE",1,"ENC PROVIDER")=ORAMPPR   ;FILE 200
"RTN","ORAMX",189,0)
 . S ^TMP("ORAMPCE",$J,"PROCEDURE",1,"DEPARTMENT")=$G(ORAMSC)  ;STOP CODE 40.7
"RTN","ORAMX",190,0)
 . S ^TMP("ORAMPCE",$J,"PROVIDER",1,"NAME")=ORAMPPR
"RTN","ORAMX",191,0)
 . S:ORAMPPR]"" ^TMP("ORAMPCE",$J,"PROVIDER",1,"PRIMARY")=1
"RTN","ORAMX",192,0)
 . ; If Secondary Provider is passed, include them
"RTN","ORAMX",193,0)
 . I ORAMSPR]"" D
"RTN","ORAMX",194,0)
 . . S ^TMP("ORAMPCE",$J,"PROVIDER",2,"NAME")=ORAMSPR
"RTN","ORAMX",195,0)
 . . S ^TMP("ORAMPCE",$J,"PROVIDER",2,"PRIMARY")=0
"RTN","ORAMX",196,0)
 . ;comes in like: ^SC~0^IR~0^EC~1^MST~0
"RTN","ORAMX",197,0)
 . S ^TMP("ORAMPCE",$J,"ENCOUNTER",1,"SC")=""
"RTN","ORAMX",198,0)
 . S ^TMP("ORAMPCE",$J,"ENCOUNTER",1,"AO")=""
"RTN","ORAMX",199,0)
 . S ^TMP("ORAMPCE",$J,"ENCOUNTER",1,"IR")=""
"RTN","ORAMX",200,0)
 . S ^TMP("ORAMPCE",$J,"ENCOUNTER",1,"EC")=""
"RTN","ORAMX",201,0)
 . S ^TMP("ORAMPCE",$J,"ENCOUNTER",1,"MST")=""
"RTN","ORAMX",202,0)
 . S ^TMP("ORAMPCE",$J,"ENCOUNTER",1,"HNC")=""
"RTN","ORAMX",203,0)
 . S ^TMP("ORAMPCE",$J,"ENCOUNTER",1,"CV")=""
"RTN","ORAMX",204,0)
 . S ^TMP("ORAMPCE",$J,"ENCOUNTER",1,"SHAD")=""
"RTN","ORAMX",205,0)
 . N ORAMCNT,I S ORAMCNT=$L(ORAMQ,U)
"RTN","ORAMX",206,0)
 . I +$G(ORAMCNT) F I=2:1:ORAMCNT D
"RTN","ORAMX",207,0)
 .. N T S T=$P(ORAMQ,U,I) Q:$G(T)=""
"RTN","ORAMX",208,0)
 .. I $P(T,"~",1)'="" S ^TMP("ORAMPCE",$J,"ENCOUNTER",1,$P(T,"~",1))=$P(T,"~",2)
"RTN","ORAMX",209,0)
 . S RESULT=$$DATA2PCE^PXAPI("^TMP(""ORAMPCE"",$J)","ORAM","ORAM ANTICOAGULATION MANAGEMENT PROGRAM",.ORAMVST,DUZ,,.ERRARR,,.ERRPROB)
"RTN","ORAMX",210,0)
 Q
"RTN","ORAMX",211,0)
WRAP(TEXT,LENGTH) ; Breaks text string into substrings of length LENGTH
"RTN","ORAMX",212,0)
 N ORAMI,ORAMJ,LINE,ORAMX,ORAMX1,ORAMX2,ORAMY
"RTN","ORAMX",213,0)
 I $G(TEXT)']"" Q ""
"RTN","ORAMX",214,0)
 F ORAMI=1:1 D  Q:ORAMI=$L(TEXT," ")
"RTN","ORAMX",215,0)
 . S ORAMX=$P(TEXT," ",ORAMI)
"RTN","ORAMX",216,0)
 . I $L(ORAMX)>LENGTH D
"RTN","ORAMX",217,0)
 . . S ORAMX1=$E(ORAMX,1,LENGTH),ORAMX2=$E(ORAMX,LENGTH+1,$L(ORAMX))
"RTN","ORAMX",218,0)
 . . S $P(TEXT," ",ORAMI)=ORAMX1_" "_ORAMX2
"RTN","ORAMX",219,0)
 S LINE=1,ORAMX(1)=$P(TEXT," ")
"RTN","ORAMX",220,0)
 F ORAMI=2:1 D  Q:ORAMI'<$L(TEXT," ")
"RTN","ORAMX",221,0)
 . S:$L($G(ORAMX(LINE))_" "_$P(TEXT," ",ORAMI))>LENGTH LINE=LINE+1,ORAMY=1
"RTN","ORAMX",222,0)
 . S ORAMX(LINE)=$G(ORAMX(LINE))_$S(+$G(ORAMY):"",1:" ")_$P(TEXT," ",ORAMI),ORAMY=0
"RTN","ORAMX",223,0)
 S ORAMJ=0,TEXT="" F ORAMI=1:1 S ORAMJ=$O(ORAMX(ORAMJ)) Q:+ORAMJ'>0  S TEXT=TEXT_$S(ORAMI=1:"",1:"|")_ORAMX(ORAMJ)
"RTN","ORAMX",224,0)
 Q TEXT
"RTN","ORAMX",225,0)
READ(TYPE,PROMPT,DEFAULT,HELP,SCREEN) ; Calls reader, returns response
"RTN","ORAMX",226,0)
 N DIR,X,Y
"RTN","ORAMX",227,0)
 S DIR(0)=TYPE
"RTN","ORAMX",228,0)
 I $D(SCREEN) S DIR("S")=SCREEN
"RTN","ORAMX",229,0)
 I $G(PROMPT)]"" S DIR("A")=PROMPT
"RTN","ORAMX",230,0)
 I $G(DEFAULT)]"" S DIR("B")=DEFAULT
"RTN","ORAMX",231,0)
 I $D(HELP) S DIR("?")=HELP
"RTN","ORAMX",232,0)
 D ^DIR
"RTN","ORAMX",233,0)
 I $G(X)="@" S Y="@" G READX
"RTN","ORAMX",234,0)
 I Y]"",($L($G(Y),U)'=2) S Y=Y_U_$G(Y(0),Y)
"RTN","ORAMX",235,0)
READX Q Y
"RTN","ORAMX",236,0)
NAME(X,FMT) ; Call with X="LAST,FIRST MI", FMT=Return Format ("LAST, FI")
"RTN","ORAMX",237,0)
 N ORLAST,ORLI,ORFIRST,ORFI,ORMI,ORI
"RTN","ORAMX",238,0)
 I X']"" S FMT="" G NAMEX
"RTN","ORAMX",239,0)
 I $S('$D(FMT):1,'$L(FMT):1,1:0) S FMT="LAST,FIRST"
"RTN","ORAMX",240,0)
 S FMT=$$LOW^XLFSTR(FMT)
"RTN","ORAMX",241,0)
 S ORLAST=$P(X,","),ORLI=$E(ORLAST),ORFIRST=$P(X,",",2)
"RTN","ORAMX",242,0)
 S ORFI=$E(ORFIRST)
"RTN","ORAMX",243,0)
 S ORMI=$S($P(ORFIRST," ",2)'="NMI":$E($P(ORFIRST," ",2)),1:"")
"RTN","ORAMX",244,0)
 S ORFIRST=$P(ORFIRST," ")
"RTN","ORAMX",245,0)
 F ORI="last","li","first","fi","mi" I FMT[ORI S FMT=$P(FMT,ORI)_@("OR"_$$UP^XLFSTR(ORI))_$P(FMT,ORI,2)
"RTN","ORAMX",246,0)
NAMEX Q FMT
"RTN","ORAMX",247,0)
PATIENT() ; Select a patient
"RTN","ORAMX",248,0)
 N X,DIC,Y
"RTN","ORAMX",249,0)
 S DIC=2,DIC(0)="AEMQ" D ^DIC
"RTN","ORAMX",250,0)
 Q Y
"RTN","ORAMX",251,0)
VALIDORD(ORDA) ; Screen Orderable for INR
"RTN","ORAMX",252,0)
 N ORDNM,ORY,ORDGDA,ORID S ORDNM="",ORY=0
"RTN","ORAMX",253,0)
 ; if orderable item inactive, exclude it
"RTN","ORAMX",254,0)
 I +$G(^ORD(101.43,+ORDA,.1))>0 G VOX
"RTN","ORAMX",255,0)
 ; if display group is not LABORATORY, exclude it
"RTN","ORAMX",256,0)
 S ORDGDA=$P($G(^ORD(101.43,+ORDA,0)),U,5)
"RTN","ORAMX",257,0)
 I $S(+ORDGDA'>0:1,$P($G(^ORD(100.98,+ORDGDA,0)),U)'="LABORATORY":1,1:0) G VOX
"RTN","ORAMX",258,0)
 ; if ID not valid, exclude it
"RTN","ORAMX",259,0)
 S ORID=+$P($G(^ORD(101.43,+ORDA,0)),U,2)
"RTN","ORAMX",260,0)
 I '$$VALIDLAB(ORID) G VOX
"RTN","ORAMX",261,0)
 ; otherwise, allow selection
"RTN","ORAMX",262,0)
 S ORY=1
"RTN","ORAMX",263,0)
VOX Q ORY
"RTN","ORAMX",264,0)
VALIDLAB(ORID) ; Is lab test valid?
"RTN","ORAMX",265,0)
 N ORY S ORY=0
"RTN","ORAMX",266,0)
 I $S(+ORID'>0:1,'$D(^LAB(60,+ORID,0)):1,1:0) G VLX
"RTN","ORAMX",267,0)
 ; if entry in LABORATORY TEST file (#60) doesn't have a LOCATION (DATA NAME), exclude it
"RTN","ORAMX",268,0)
 I '$L($P($G(^LAB(60,+ORID,0)),U,5)) G VLX
"RTN","ORAMX",269,0)
 ; otherwise, allow selection
"RTN","ORAMX",270,0)
 S ORY=1
"RTN","ORAMX",271,0)
VLX Q ORY
"RTN","ORAMX",272,0)
TEAMLIST(ORLIST) ; Team List Reports
"RTN","ORAMX",273,0)
 N DIC,DHD,FLDS,L,FR,BY,TO,ORCL,ORPAR,ORALIST,ORCLIST
"RTN","ORAMX",274,0)
 S DIC="^OR(100.21,",L=0,FLDS="[ORAM TEAM LIST]",BY="[ORAM TEAM LIST]"
"RTN","ORAMX",275,0)
 W !!,"List of ",$S(ORLIST="A":"ALL",1:"COMPLEX")," Anticoagulation Patients for a Clinic",!
"RTN","ORAMX",276,0)
 S ORCL=$$SELLOC^ORAMSET
"RTN","ORAMX",277,0)
 I +ORCL'>0 D  Q
"RTN","ORAMX",278,0)
 . W $C(7),!!,"You must select a Clinic to proceed...",!
"RTN","ORAMX",279,0)
 D GET^ORAMSET(.ORPAR,ORCL)
"RTN","ORAMX",280,0)
 S ORALIST=$P($G(ORPAR(0)),U,2),ORCLIST=$P($G(ORPAR(0)),U,3)
"RTN","ORAMX",281,0)
 S:+ORALIST ORALIST=$P($G(^OR(100.21,ORALIST,0)),U)
"RTN","ORAMX",282,0)
 S:+ORCLIST ORCLIST=$P($G(^OR(100.21,ORCLIST,0)),U)
"RTN","ORAMX",283,0)
 S (FR,TO,DHD)=$S(ORLIST="A":ORALIST,1:ORCLIST)
"RTN","ORAMX",284,0)
 I FR']"" D  Q
"RTN","ORAMX",285,0)
 . W !,"You must define a list for ",$S(ORLIST="A":"ALL",1:"COMPLEX")," Anticoagulation Patients."
"RTN","ORAMX",286,0)
 . W $$READ("EA","Press Return to Continue...")
"RTN","ORAMX",287,0)
 D EN1^DIP
"RTN","ORAMX",288,0)
 Q
"RTN","ORAMX",289,0)
NEXTLAB ; Next Lab Report
"RTN","ORAMX",290,0)
 N DIC,DHD,FLDS,L,FR,BY,TO,ORCL,OREDT,ORLDT
"RTN","ORAMX",291,0)
 S DIC="^ORAM(103,",L=0,FLDS="[ORAM TEAM LIST]",BY="@CLINIC,NEXT LAB,@PATIENT",(OREDT,ORLDT)=""
"RTN","ORAMX",292,0)
 W !!,"List Anticoagulation Patients with Pending Lab Draws",!
"RTN","ORAMX",293,0)
 S ORCL=$$SELLOC^ORAMSET
"RTN","ORAMX",294,0)
 I +ORCL'>0 D  Q
"RTN","ORAMX",295,0)
 . W $C(7),!!,"You must select a Clinic to proceed...",!
"RTN","ORAMX",296,0)
 S ORCL=$P($G(^SC(+ORCL,0)),U)
"RTN","ORAMX",297,0)
 F  D  Q:+ORLDT>+OREDT!$D(DIRUT)
"RTN","ORAMX",298,0)
 . S OREDT=+$$READ("DA^::E","Please Enter START Date: ","T","Enter a start date for the report")
"RTN","ORAMX",299,0)
 . Q:'OREDT
"RTN","ORAMX",300,0)
 . S ORLDT=+$$READ("DA^::E","  Please Enter END Date: ","T+14","Enter an INCLUSIVE end date for the report")
"RTN","ORAMX",301,0)
 . Q:'ORLDT
"RTN","ORAMX",302,0)
 . I $L(ORLDT,".")=1 S ORLDT=ORLDT_".2359"
"RTN","ORAMX",303,0)
 . I OREDT>ORLDT W !,"END DATE must be more recent than the START DATE" S (OREDT,ORLDT)=""
"RTN","ORAMX",304,0)
 Q:$S(OREDT'>0:1,ORLDT'>0:1,1:0)
"RTN","ORAMX",305,0)
 S OREDT=$$FMTE^XLFDT(OREDT,2),ORLDT=$$FMTE^XLFDT(ORLDT,2)
"RTN","ORAMX",306,0)
 S DHD=ORCL_" Next Lab Report"
"RTN","ORAMX",307,0)
 S FR=ORCL_","_OREDT,TO=ORCL_","_ORLDT
"RTN","ORAMX",308,0)
 D EN1^DIP
"RTN","ORAMX",309,0)
 Q
"RTN","ORCDGMRC")
0^13^B41619023
"RTN","ORCDGMRC",1,0)
ORCDGMRC ;SLC/MKB-Utility functions for GMRC dialogs ; 5/15/13 11:32am
"RTN","ORCDGMRC",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**4,26,68,100,181,361**;Dec 17, 1997;Build 39
"RTN","ORCDGMRC",3,0)
 ; External References
"RTN","ORCDGMRC",4,0)
 ;    DBIA 10006 Call to ^DIC
"RTN","ORCDGMRC",5,0)
 ;    DBIA 10026 Call to ^DIR
"RTN","ORCDGMRC",6,0)
 ;    DBIA  2426 Call to SERV1^GMRCASV
"RTN","ORCDGMRC",7,0)
 ;    DBIA  3119 Call to GETDEF^GMRCDRFR
"RTN","ORCDGMRC",8,0)
 ;    DBIA  2982 Call to GETSVC^GMRCPR0
"RTN","ORCDGMRC",9,0)
 ;    DBIA  3121 Call to APIs $$PROVDX and PREREQ in routine ^GMRCUTL1
"RTN","ORCDGMRC",10,0)
 ;    DBIA  1609 Call to CONFIG^LEXSET
"RTN","ORCDGMRC",11,0)
 ;    DBIA 10104 Call to APIs $$RJ and $$UP in routine ^XLFSTR
"RTN","ORCDGMRC",12,0)
 ;    DBIA 10102 Call to DISP^XQORM1
"RTN","ORCDGMRC",13,0)
 ;    DBIA  3991 Call to $$STATCHK^ICDAPIU
"RTN","ORCDGMRC",14,0)
URGENCY(TYPE) ; -- Returns index of allowable urgencies from file #101.42
"RTN","ORCDGMRC",15,0)
 N X S X=$S($$VAL^ORCD("CATEGORY")'="I":"O",TYPE="C":"T",1:"R")
"RTN","ORCDGMRC",16,0)
 S ORDIALOG(PROMPT,"D")="S.GMRC"_X
"RTN","ORCDGMRC",17,0)
 Q
"RTN","ORCDGMRC",18,0)
 ;
"RTN","ORCDGMRC",19,0)
PLACE ; -- Returns list of allowable places of consultation
"RTN","ORCDGMRC",20,0)
 Q:$D(ORDIALOG(PROMPT,"LIST"))  N CHOICES,I,J,INPT,X
"RTN","ORCDGMRC",21,0)
 S INPT=($$VAL^ORCD("CATEGORY")="I")
"RTN","ORCDGMRC",22,0)
 I INPT S CHOICES="B^Bedside;C^Consultant's Choice"
"RTN","ORCDGMRC",23,0)
 I 'INPT S CHOICES="E^Emergency Room;C^Consultant's Choice"
"RTN","ORCDGMRC",24,0)
 S I=0 F J=1:1:$L(CHOICES,";") S X=$P(CHOICES,";",J) D
"RTN","ORCDGMRC",25,0)
 . S I=I+1,ORDIALOG(PROMPT,"LIST",I)=X
"RTN","ORCDGMRC",26,0)
 . S ORDIALOG(PROMPT,"LIST","B",$$UP^XLFSTR($P(X,U,2)))=$P(X,U)
"RTN","ORCDGMRC",27,0)
 S ORDIALOG(PROMPT,"LIST")=I_"^1"
"RTN","ORCDGMRC",28,0)
 Q
"RTN","ORCDGMRC",29,0)
 ;
"RTN","ORCDGMRC",30,0)
CHANGED(PRMT) ; -- Kill lists for Request Service or Place of Consultation
"RTN","ORCDGMRC",31,0)
 N I,P
"RTN","ORCDGMRC",32,0)
 S I=$S(PRMT="OI":"REQUEST SERVICE",1:"PLACE OF CONSULTATION")
"RTN","ORCDGMRC",33,0)
 S P=$$PTR^ORCD("OR GTX "_I) Q:'P
"RTN","ORCDGMRC",34,0)
 K ORDIALOG(P,"LIST"),ORDIALOG(P,1)
"RTN","ORCDGMRC",35,0)
 Q
"RTN","ORCDGMRC",36,0)
 ;
"RTN","ORCDGMRC",37,0)
GETSERV ; -- Get list of orderable services
"RTN","ORCDGMRC",38,0)
 N GMRCTO,GMRCDG,I,X K ^TMP("GMRCS",$J),^TMP("GMRCSLIST",$J)
"RTN","ORCDGMRC",39,0)
 S (GMRCTO,GMRCDG)=1 D SERV1^GMRCASV ; get list of orderable services
"RTN","ORCDGMRC",40,0)
 F I=1:1 S X=+$G(^TMP("GMRCSLIST",$J,I)) Q:X'>0  S $P(^TMP("GMRCS",$J,X),U,2)=I
"RTN","ORCDGMRC",41,0)
 Q
"RTN","ORCDGMRC",42,0)
 ;
"RTN","ORCDGMRC",43,0)
LISTSERV(ORI) ; -- List Consult services from ORSERV
"RTN","ORCDGMRC",44,0)
 N ORSTK,ORCNT,ORX,ORQ
"RTN","ORCDGMRC",45,0)
 W !,"Choose from:" S:$G(ORI)'>0 ORI=1
"RTN","ORCDGMRC",46,0)
 S (ORSTK,ORQ)=0,ORCNT=1,ORSTK(0)=$P(^TMP("GMRCSLIST",$J,ORI),U,3)
"RTN","ORCDGMRC",47,0)
 F  S ORX=$G(^TMP("GMRCSLIST",$J,ORI)) Q:ORX=""  D  Q:ORQ  S ORI=ORI+1
"RTN","ORCDGMRC",48,0)
 . I $P(ORX,U,3)'=+$G(ORSTK(ORSTK)) D POP I ORSTK'>0 S ORQ=1 Q
"RTN","ORCDGMRC",49,0)
 . S ORCNT=ORCNT+1 I ORCNT>(IOSL-6) S:'$$CONT ORQ=1 Q:$G(ORQ)  S ORCNT=1
"RTN","ORCDGMRC",50,0)
 . W !,?((ORSTK*2)),$P(ORX,U,2)
"RTN","ORCDGMRC",51,0)
 . W:$P(ORX,U,5) "  ("_$S($P(ORX,U,5)=1:"Grouper",1:"Tracking")_" Only)"
"RTN","ORCDGMRC",52,0)
 . I $P(ORX,U,4)="+" S ORSTK=ORSTK+1,ORSTK(ORSTK)=+ORX
"RTN","ORCDGMRC",53,0)
 Q
"RTN","ORCDGMRC",54,0)
 ;
"RTN","ORCDGMRC",55,0)
POP ; -- pop stack
"RTN","ORCDGMRC",56,0)
 S ORSTK=ORSTK-1 Q:ORSTK'>0
"RTN","ORCDGMRC",57,0)
 I ORSTK(ORSTK)'=$P(ORX,U,3) G POP
"RTN","ORCDGMRC",58,0)
 Q
"RTN","ORCDGMRC",59,0)
 ;
"RTN","ORCDGMRC",60,0)
CONT() ; -- continue?
"RTN","ORCDGMRC",61,0)
 N X,Y,DIR S DIR(0)="E" D ^DIR
"RTN","ORCDGMRC",62,0)
 Q +Y
"RTN","ORCDGMRC",63,0)
 ;
"RTN","ORCDGMRC",64,0)
CKSERV ; -- Ck service usage in Post-Selection Action
"RTN","ORCDGMRC",65,0)
 N GMRCI,ORI
"RTN","ORCDGMRC",66,0)
 S GMRCI=+$P(^ORD(101.43,+Y,0),U,2)
"RTN","ORCDGMRC",67,0)
 S ORI=+$P($G(^TMP("GMRCS",$J,GMRCI)),U,2) S:ORI'>0 ORI=1
"RTN","ORCDGMRC",68,0)
 I $P($G(^TMP("GMRCSLIST",$J,ORI)),U,5)=1 D LISTSERV^ORCDGMRC(ORI) K DONE
"RTN","ORCDGMRC",69,0)
 Q
"RTN","ORCDGMRC",70,0)
 ;
"RTN","ORCDGMRC",71,0)
PROCSVC ; -- Get list of services for procedure
"RTN","ORCDGMRC",72,0)
 Q:$D(ORDIALOG(PROMPT,"LIST"))  Q:'$L($T(GETSVC^GMRCPR0))
"RTN","ORCDGMRC",73,0)
 N OI,PROTCL,ORY,ORI,X
"RTN","ORCDGMRC",74,0)
 S OI=+$$VAL^ORCD("PROCEDURE"),PROTCL=$P($G(^ORD(101.43,OI,0)),U,2) ;ID
"RTN","ORCDGMRC",75,0)
 D:PROTCL GETSVC^GMRCPR0(.ORY,PROTCL)
"RTN","ORCDGMRC",76,0)
 I $G(ORY)'>0 W $C(7),!,"There are no services defined for this procedure!" H 1 S ORQUIT=1 Q
"RTN","ORCDGMRC",77,0)
 M ORDIALOG(PROMPT,"LIST")=ORY S $P(ORDIALOG(PROMPT,"LIST"),U,2)=1
"RTN","ORCDGMRC",78,0)
 S ORI=0 F  S ORI=$O(ORY(ORI)) Q:ORI'>0  S X=$P(ORY(ORI),U,2),ORDIALOG(PROMPT,"LIST","B",X)=+ORY(ORI)
"RTN","ORCDGMRC",79,0)
 Q
"RTN","ORCDGMRC",80,0)
 ;
"RTN","ORCDGMRC",81,0)
CKPROCSV ; -- Make sure procedure has at least one service
"RTN","ORCDGMRC",82,0)
 N PROT,ORY S PROT=$P($G(^ORD(101.43,+Y,0)),U,2)
"RTN","ORCDGMRC",83,0)
 D GETSVC^GMRCPR0(.ORY,PROT) I $G(ORY)'>0 W $C(7),!,"There are no services defined for this procedure!",! K DONE
"RTN","ORCDGMRC",84,0)
 Q
"RTN","ORCDGMRC",85,0)
 ;
"RTN","ORCDGMRC",86,0)
NWHELP ; -- help code for NW action
"RTN","ORCDGMRC",87,0)
 N X
"RTN","ORCDGMRC",88,0)
 W !!,"Select the type of request you wish to enter, either a consult to a service",!,"or a procedure that may be ordered without a formal consult."
"RTN","ORCDGMRC",89,0)
 W !!,"Press <return> to continue ..." R X:DTIME
"RTN","ORCDGMRC",90,0)
 S X="?" D DISP^XQORM1 W !
"RTN","ORCDGMRC",91,0)
 Q
"RTN","ORCDGMRC",92,0)
 ;
"RTN","ORCDGMRC",93,0)
REASON ; -- Get default Reason for Request text for Service
"RTN","ORCDGMRC",94,0)
 N ORIT,ORSERV,OROOT
"RTN","ORCDGMRC",95,0)
 S ORIT=$G(ORDIALOG($$PTR^ORCD("OR GTX ORDERABLE ITEM"),1))
"RTN","ORCDGMRC",96,0)
 S ORSERV=$P($G(^ORD(101.43,+ORIT,0)),U,2) Q:'ORSERV!(ORSERV["99PRO")
"RTN","ORCDGMRC",97,0)
 S OROOT=$NA(^TMP("ORWORD",$J,PROMPT,INST)) D
"RTN","ORCDGMRC",98,0)
 . N PROMPT,INST,X,Y,DIR,ACTION,REQD,MULT,ITEM,COND ;protect var's
"RTN","ORCDGMRC",99,0)
 . D GETDEF^GMRCDRFR(OROOT,ORSERV,+$G(ORVP),$S($G(ORVP):1,1:0))
"RTN","ORCDGMRC",100,0)
 S:$D(^TMP("ORWORD",$J,PROMPT,INST)) Y=OROOT
"RTN","ORCDGMRC",101,0)
 Q
"RTN","ORCDGMRC",102,0)
 ;
"RTN","ORCDGMRC",103,0)
ENPDX ; -- setup Prov Dx field
"RTN","ORCDGMRC",104,0)
 N CODE
"RTN","ORCDGMRC",105,0)
 S ORPDX=$$PROVDX^GMRCUTL1($S($D(ORPROC):ORPROC,1:$G(ORSERV)))
"RTN","ORCDGMRC",106,0)
 S CODE=$$PTR^ORCD("OR GTX CODE")
"RTN","ORCDGMRC",107,0)
 I $P(ORPDX,U)="S" K ORDIALOG(PROMPT,INST),ORDIALOG(CODE,INST) S COND="I 0" Q
"RTN","ORCDGMRC",108,0)
 S:$G(ORTYPE)'="Z" REQD=$S($P(ORPDX,U)="R":1,1:0)
"RTN","ORCDGMRC",109,0)
 K:$P(ORPDX,U,2)'="L" ORDIALOG(CODE,INST)
"RTN","ORCDGMRC",110,0)
 I $P(ORPDX,U,2)="L" S ORDIALOG(PROMPT,"?")="Select a preliminary diagnosis from the Lexicon, as text or an ICD code." K:'$L($G(ORDIALOG(CODE,INST))) ORDIALOG(PROMPT,INST)
"RTN","ORCDGMRC",111,0)
 I $L($G(ORDIALOG(CODE,INST))),'$$STATCHK^ICDXCODE("DIAGNOSIS",ORDIALOG(CODE,INST),DT)  D  ;csv
"RTN","ORCDGMRC",112,0)
 . D EN^DDIOL("The existing diagnosis is associated with an inactive ICD-9 code.")
"RTN","ORCDGMRC",113,0)
 . I $G(REQD) D EN^DDIOL("Another code must be selected before proceeding.")
"RTN","ORCDGMRC",114,0)
 . I '$G(REQD) D EN^DDIOL("If another code is not selected, no code will be saved with the new order.")
"RTN","ORCDGMRC",115,0)
 . D EN^DDIOL(" ")
"RTN","ORCDGMRC",116,0)
 . K ORDIALOG(PROMPT,INST),ORDIALOG(CODE,INST)
"RTN","ORCDGMRC",117,0)
 . S ACTION=$G(ACTION)_"W"
"RTN","ORCDGMRC",118,0)
 Q
"RTN","ORCDGMRC",119,0)
 ;
"RTN","ORCDGMRC",120,0)
LEX ; -- search Lexicon for Prov Dx
"RTN","ORCDGMRC",121,0)
 I $L($G(ORESET)),ORESET=Y Q  ;no change
"RTN","ORCDGMRC",122,0)
 I Y?1." " K DONE W !!,$C(7),"Use of only spaces not allowed!",! Q
"RTN","ORCDGMRC",123,0)
 Q:$P(ORPDX,U,2)'="L"  ;free text only, no ICD code
"RTN","ORCDGMRC",124,0)
 N DIC,DUOUT,DTOUT,ORCS
"RTN","ORCDGMRC",125,0)
 S ORCS="ICD"
"RTN","ORCDGMRC",126,0)
 I DT>=$$IMPDATE^LEXU("10D") S ORCS="10D"
"RTN","ORCDGMRC",127,0)
 D CONFIG^LEXSET(ORCS,ORCS,DT)
"RTN","ORCDGMRC",128,0)
 S DIC="^LEX(757.01,",DIC(0)="EQM",DIC("A")="Provisional Diagnosis: "
"RTN","ORCDGMRC",129,0)
 S:$L($G(ORESET)) DIC("B")=ORESET
"RTN","ORCDGMRC",130,0)
 D ^DIC I Y'>0 D  Q
"RTN","ORCDGMRC",131,0)
 . I $L($G(ORESET)) S ORDIALOG(PROMPT,ORI)=ORESET
"RTN","ORCDGMRC",132,0)
 . E  K ORDIALOG(PROMPT,ORI)
"RTN","ORCDGMRC",133,0)
 . I $D(DTOUT)!$D(DUOUT) S ORQUIT=1 Q
"RTN","ORCDGMRC",134,0)
 . I REQD,'$D(ORDIALOG(PROMPT,ORI)) K DONE W !!,$C(7),$$REQUIRED^ORCDLG1,!
"RTN","ORCDGMRC",135,0)
 S ORDIALOG(PROMPT,ORI)=$P(Y,U,2)
"RTN","ORCDGMRC",136,0)
 I ORCS="ICD" S ORDIALOG($$PTR^ORCD("OR GTX CODE"),ORI)=$G(Y(1)) K Y(1)
"RTN","ORCDGMRC",137,0)
 I ORCS="10D" S ORDIALOG($$PTR^ORCD("OR GTX CODE"),ORI)=$G(Y(30)) K Y(30)
"RTN","ORCDGMRC",138,0)
 Q
"RTN","ORCDGMRC",139,0)
 ;
"RTN","ORCDGMRC",140,0)
SERVMSG ; -- Get, display text message for service ORSERV
"RTN","ORCDGMRC",141,0)
 Q:'$G(ORSERV)&('$G(ORPROC))  Q:'FIRST  ;show first time only
"RTN","ORCDGMRC",142,0)
 N ORTXT,I,CNT,HDR S HDR=$S($G(ORMENU):5,1:7)
"RTN","ORCDGMRC",143,0)
 D PREREQ^GMRCUTL1("ORTXT",$S($D(ORPROC):ORPROC,1:ORSERV),+ORVP)
"RTN","ORCDGMRC",144,0)
 Q:'$D(ORTXT)
"RTN","ORCDGMRC",145,0)
 I $D(ORPROC) W !!,$$RJ^XLFSTR("** Procedure Pre-requisite **",57)
"RTN","ORCDGMRC",146,0)
 E  W !!,$$RJ^XLFSTR("** Consult Service Pre-requisite **",57)
"RTN","ORCDGMRC",147,0)
 S (I,CNT)=0 F  S I=$O(ORTXT(I)) Q:I'>0  D  Q:$G(ORQUIT)
"RTN","ORCDGMRC",148,0)
 . S CNT=CNT+1 I CNT>(IOSL-HDR) S CNT=0 I '$$CONT S ORQUIT=1 Q
"RTN","ORCDGMRC",149,0)
 . W !,ORTXT(I,0)
"RTN","ORCDGMRC",150,0)
 Q:$G(ORQUIT)  S:'$$CONT ORQUIT=1 W !
"RTN","ORCDGMRC",151,0)
 Q
"RTN","ORCMGMCK")
0^14^B38936285
"RTN","ORCMGMCK",1,0)
ORCMGMCK ;SLC/JFR - FIND GMRC QO'S WITH INACTIVE CODES ;12/04/12  10:02
"RTN","ORCMGMCK",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**181,361**;Dec 17, 1997;Build 39
"RTN","ORCMGMCK",3,0)
 ;
"RTN","ORCMGMCK",4,0)
 ; This routine invokes IA # 3990
"RTN","ORCMGMCK",5,0)
 ; Other external references:
"RTN","ORCMGMCK",6,0)
 ; $$FIND1^DIC             ICR #2051
"RTN","ORCMGMCK",7,0)
 ; $$STATCHK^ICDXCODE      ICR #5699
"RTN","ORCMGMCK",8,0)
 ; $$FMTE^XLFDT            ICR #10103
"RTN","ORCMGMCK",9,0)
 ; $$REPEAT^XLFSTR         ICR #10104
"RTN","ORCMGMCK",10,0)
 ;
"RTN","ORCMGMCK",11,0)
 Q
"RTN","ORCMGMCK",12,0)
FINDQOS ; find cons/proc quick orders with a default Prov. DX code
"RTN","ORCMGMCK",13,0)
 N ORDLG,ORPDLG,ORDGC,ORDGP
"RTN","ORCMGMCK",14,0)
 K ^TMP("ORCMGMCK",$J)
"RTN","ORCMGMCK",15,0)
 S ORDGC=$$FIND1^DIC(100.98,,"QX","CONSULTS") ;find disp. group ien
"RTN","ORCMGMCK",16,0)
 S ORDGP=$$FIND1^DIC(100.98,,"QX","PROCEDURES") ;find disp. group ien
"RTN","ORCMGMCK",17,0)
 S ORPDLG=$$PTR^ORCD("OR GTX CODE")
"RTN","ORCMGMCK",18,0)
 S ORDLG=0
"RTN","ORCMGMCK",19,0)
 F  S ORDLG=$O(^ORD(101.41,ORDLG)) Q:'ORDLG  I $P(^(ORDLG,0),U,4)="Q" D
"RTN","ORCMGMCK",20,0)
 . N ORQDG,ORCODEF,ORPRMPT,ORAPIVAL,ACTDT
"RTN","ORCMGMCK",21,0)
 . S ORQDG=$P(^ORD(101.41,ORDLG,0),U,5)
"RTN","ORCMGMCK",22,0)
 . I ORQDG'=ORDGC&(ORQDG'=ORDGP) Q  ;not in CONS or PROC display group
"RTN","ORCMGMCK",23,0)
 . S ORPRMPT=$O(^ORD(101.41,ORDLG,6,"D",ORPDLG,0))
"RTN","ORCMGMCK",24,0)
 . I 'ORPRMPT Q  ;no PD prompt
"RTN","ORCMGMCK",25,0)
 . S ORCODEF=$G(^ORD(101.41,ORDLG,6,ORPRMPT,1))
"RTN","ORCMGMCK",26,0)
 . I '$L(ORPRMPT) Q  ; no default CODE stored.
"RTN","ORCMGMCK",27,0)
 . I '$$STATCHK^ICDXCODE("DIAGNOSIS",ORCODEF,DT) D  Q
"RTN","ORCMGMCK",28,0)
 .. S ^TMP("ORCMGMCK",$J,"I",ORDLG)=$P(^ORD(101.41,ORDLG,0),U)_U_ORCODEF
"RTN","ORCMGMCK",29,0)
 . D HIST^ICDXCODE("DIAGNOSIS",ORCODEF,.ORAPIVAL)
"RTN","ORCMGMCK",30,0)
 . S ACTDT=$O(ORAPIVAL(DT))
"RTN","ORCMGMCK",31,0)
 . I ACTDT,'$G(ORAPIVAL(ACTDT)) D  ; future inactivation
"RTN","ORCMGMCK",32,0)
 .. S ^TMP("ORCMGMCK",$J,"F",ORDLG)=$P(^ORD(101.41,ORDLG,0),U)_U_ORCODEF_U_$$FMTE^XLFDT(ACTDT)
"RTN","ORCMGMCK",33,0)
 Q
"RTN","ORCMGMCK",34,0)
 ;
"RTN","ORCMGMCK",35,0)
CSVPEP ; protocol event point called upon CSV install
"RTN","ORCMGMCK",36,0)
 ;  Called by Protocol -  ??
"RTN","ORCMGMCK",37,0)
 ;
"RTN","ORCMGMCK",38,0)
 N LN,XMSUB,XMTEXT,XMDUZ,XMY
"RTN","ORCMGMCK",39,0)
 D FINDQOS
"RTN","ORCMGMCK",40,0)
 K ^TMP("ORCMMSG",$J)
"RTN","ORCMGMCK",41,0)
 S LN=1
"RTN","ORCMGMCK",42,0)
 I $D(^TMP("ORCMGMCK",$J,"I")) D
"RTN","ORCMGMCK",43,0)
 . S ^TMP("ORCMMSG",$J,LN)="The following Consult or Procedure quick orders were found that currently",LN=LN+1
"RTN","ORCMGMCK",44,0)
 . S ^TMP("ORCMMSG",$J,LN)="have a provisional diagnosis code that is inactive. These should be edited",LN=LN+1
"RTN","ORCMGMCK",45,0)
 . S ^TMP("ORCMMSG",$J,LN)="as soon as possible to reduce interruption of ordering these quick orders.",LN=LN+1
"RTN","ORCMGMCK",46,0)
 . S ^TMP("ORCMMSG",$J,LN)=" ",LN=LN+1
"RTN","ORCMGMCK",47,0)
 . S IREC=0
"RTN","ORCMGMCK",48,0)
 . F  S IREC=$O(^TMP("ORCMGMCK",$J,"I",IREC)) Q:'IREC  D
"RTN","ORCMGMCK",49,0)
 .. S ^TMP("ORCMMSG",$J,LN)="Quick order name: "_$P(^TMP("ORCMGMCK",$J,"I",IREC),U)_"    IEN: "_IREC,LN=LN+1
"RTN","ORCMGMCK",50,0)
 .. S ^TMP("ORCMMSG",$J,LN)="Provisional Diagnosis code: "_$P(^TMP("ORCMGMCK",$J,"I",IREC),U,2),LN=LN+1
"RTN","ORCMGMCK",51,0)
 .. S ^TMP("ORCMMSG",$J,LN)=" ",LN=LN+1
"RTN","ORCMGMCK",52,0)
 . Q
"RTN","ORCMGMCK",53,0)
 ;
"RTN","ORCMGMCK",54,0)
 I $D(^TMP("ORCMGMCK",$J,"F")) D
"RTN","ORCMGMCK",55,0)
 . S ^TMP("ORCMMSG",$J,LN)="The following Consult or Procedure quick orders were found to have a",LN=LN+1
"RTN","ORCMGMCK",56,0)
 . S ^TMP("ORCMMSG",$J,LN)="provisional diagnosis code that will become inactive in the future.",LN=LN+1
"RTN","ORCMGMCK",57,0)
 . S ^TMP("ORCMMSG",$J,LN)="These should be edited as soon as possible after the inactivation date to",LN=LN+1
"RTN","ORCMGMCK",58,0)
 . S ^TMP("ORCMMSG",$J,LN)="reduce interruption in ordering these quick orders.",LN=LN+1
"RTN","ORCMGMCK",59,0)
 . S ^TMP("ORCMMSG",$J,LN)=" ",LN=LN+1
"RTN","ORCMGMCK",60,0)
 . S FREC=0
"RTN","ORCMGMCK",61,0)
 . F  S FREC=$O(^TMP("ORCMGMCK",$J,"F",FREC)) Q:'FREC  D
"RTN","ORCMGMCK",62,0)
 .. S ^TMP("ORCMMSG",$J,LN)="Quick order name: "_$P(^TMP("ORCMGMCK",$J,"F",FREC),U)_"    IEN: "_FREC,LN=LN+1
"RTN","ORCMGMCK",63,0)
 .. S ^TMP("ORCMMSG",$J,LN)="Provisional Diagnosis code: "_$P(^TMP("ORCMGMCK",$J,"F",FREC),U,2)_"  Inactivation Date: "_$$FMTE^XLFDT($P(^(FREC),U,3),2)
"RTN","ORCMGMCK",64,0)
 .. S LN=LN+1
"RTN","ORCMGMCK",65,0)
 . Q
"RTN","ORCMGMCK",66,0)
 I '$D(^TMP("ORCMMSG",$J)) D
"RTN","ORCMGMCK",67,0)
 . S ^TMP("ORCMMSG",$J,LN)="There were no problem quick orders found."
"RTN","ORCMGMCK",68,0)
 . S LN=LN+1
"RTN","ORCMGMCK",69,0)
 S XMY("G.ORCM CSV EVENT")=""
"RTN","ORCMGMCK",70,0)
 S XMSUB="DX Code check of Consult/Procedure QO's"
"RTN","ORCMGMCK",71,0)
 S XMDUZ="Code Set Version Install"
"RTN","ORCMGMCK",72,0)
 S XMTEXT="^TMP(""ORCMMSG"",$J,"
"RTN","ORCMGMCK",73,0)
 D ^XMD
"RTN","ORCMGMCK",74,0)
 K ^TMP("ORCMGMCK",$J),^TMP("ORCMMSG",$J)
"RTN","ORCMGMCK",75,0)
 Q
"RTN","ORCMGMCK",76,0)
 ;
"RTN","ORCMGMCK",77,0)
CSVOPT ; report of CSV affected quick orders from option ORCM ...
"RTN","ORCMGMCK",78,0)
 N %ZIS,POP
"RTN","ORCMGMCK",79,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","ORCMGMCK",80,0)
 I $D(IO("Q")) D  D ^%ZISC,HOME^%ZIS Q
"RTN","ORCMGMCK",81,0)
 . N ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTSK
"RTN","ORCMGMCK",82,0)
 . S ZTDESC="Review of OR Quick orders for CSV"
"RTN","ORCMGMCK",83,0)
 . S ZTRTN="QUEUE^ORCMGMCK",ZTIO=ION,ZTDTH=$H
"RTN","ORCMGMCK",84,0)
 . D ^%ZTLOAD
"RTN","ORCMGMCK",85,0)
 . I '$G(ZTSK) W !,"Unable to task report"
"RTN","ORCMGMCK",86,0)
 . Q
"RTN","ORCMGMCK",87,0)
 ;
"RTN","ORCMGMCK",88,0)
QUEUE ; entry point for tasked report
"RTN","ORCMGMCK",89,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ORCMGMCK",90,0)
 N PG
"RTN","ORCMGMCK",91,0)
 U IO
"RTN","ORCMGMCK",92,0)
 D FINDQOS  ;will return ^TMP("ORCMGMCK",$J) with list of quick orders
"RTN","ORCMGMCK",93,0)
 S PG=1 D PAGE(.PG)
"RTN","ORCMGMCK",94,0)
 I $D(^TMP("ORCMGMCK",$J,"I")) D
"RTN","ORCMGMCK",95,0)
 . N IREC
"RTN","ORCMGMCK",96,0)
 . W !,"The following Consult or Procedure quick orders were found that currently"
"RTN","ORCMGMCK",97,0)
 . W !,"have a provisional diagnosis code that is inactive. These should be edited"
"RTN","ORCMGMCK",98,0)
 . W !,"as soon as possible to reduce interruption of ordering these quick orders.",!
"RTN","ORCMGMCK",99,0)
 . S IREC=0
"RTN","ORCMGMCK",100,0)
 . F  S IREC=$O(^TMP("ORCMGMCK",$J,"I",IREC)) Q:'IREC!(PG<1)  D
"RTN","ORCMGMCK",101,0)
 .. I IOSL-$Y<4 D PAGE(.PG) Q:'PG
"RTN","ORCMGMCK",102,0)
 .. W !,"Quick order name: ",$P(^TMP("ORCMGMCK",$J,"I",IREC),U),"    IEN: ",IREC
"RTN","ORCMGMCK",103,0)
 .. W !,"Provisional Diagnosis code: ",$P(^TMP("ORCMGMCK",$J,"I",IREC),U,2)
"RTN","ORCMGMCK",104,0)
 .. W !," "
"RTN","ORCMGMCK",105,0)
 . Q
"RTN","ORCMGMCK",106,0)
 ;
"RTN","ORCMGMCK",107,0)
 I $D(^TMP("ORCMGMCK",$J,"F")) D
"RTN","ORCMGMCK",108,0)
 . I IOSL=$Y<8 D PAGE(.PG) Q:'PG
"RTN","ORCMGMCK",109,0)
 . W !,"The following Consult or Procedure quick orders were found to have a"
"RTN","ORCMGMCK",110,0)
 . W !,"provisional diagnosis code that will become inactive in the future."
"RTN","ORCMGMCK",111,0)
 . W !,"These should be edited as soon as possible after the inactivation date to"
"RTN","ORCMGMCK",112,0)
 . W !,"reduce interruption in ordering these quick orders."
"RTN","ORCMGMCK",113,0)
 . W !," "
"RTN","ORCMGMCK",114,0)
 . N FREC
"RTN","ORCMGMCK",115,0)
 . S FREC=0
"RTN","ORCMGMCK",116,0)
 . F  S FREC=$O(^TMP("ORCMGMCK",$J,"F",FREC)) Q:'FREC!(PG<1)  D
"RTN","ORCMGMCK",117,0)
 .. I IOSL-$Y<4 D PAGE(.PG) Q:'PG
"RTN","ORCMGMCK",118,0)
 .. W !,"Quick order name: ",$P(^TMP("ORCMGMCK",$J,"F",FREC),U),"    IEN: ",FREC
"RTN","ORCMGMCK",119,0)
 .. W !,"Provisional Diagnosis code: ",$P(^TMP("ORCMGMCK",$J,"F",FREC),U,2),"  Inactivation Date: ",$$FMTE^XLFDT($P(^(FREC),U,3),2)
"RTN","ORCMGMCK",120,0)
 . Q
"RTN","ORCMGMCK",121,0)
 I '$D(^TMP("ORCMGMCK",$J)) D
"RTN","ORCMGMCK",122,0)
 . W !,"There were no problem quick orders found.",!
"RTN","ORCMGMCK",123,0)
 . I $E(IOST,1,2)="C-" D
"RTN","ORCMGMCK",124,0)
 .. N DIR,DTOUT,DIRUT,DUOUT,X,Y
"RTN","ORCMGMCK",125,0)
 .. S DIR(0)="E" D ^DIR
"RTN","ORCMGMCK",126,0)
 . Q
"RTN","ORCMGMCK",127,0)
 D:$E(IOST,1,2)'="C-" ^%ZISC
"RTN","ORCMGMCK",128,0)
 D HOME^%ZIS
"RTN","ORCMGMCK",129,0)
 K ^TMP("ORCMGMCK",$J)
"RTN","ORCMGMCK",130,0)
 Q
"RTN","ORCMGMCK",131,0)
 ;
"RTN","ORCMGMCK",132,0)
PAGE(NUM) ;print header and raise page number
"RTN","ORCMGMCK",133,0)
 I NUM'=1,$E(IOST,1,2)="C-" D  Q:'NUM
"RTN","ORCMGMCK",134,0)
 . N DIR,DTOUT,DIRUT,DUOUT,X,Y
"RTN","ORCMGMCK",135,0)
 . S DIR(0)="E" D ^DIR
"RTN","ORCMGMCK",136,0)
 . I $D(DUOUT)!($D(DTOUT)) S NUM=0
"RTN","ORCMGMCK",137,0)
 W @IOF
"RTN","ORCMGMCK",138,0)
 W "Code Set Version review of Consult/Procedure Quick Orders"
"RTN","ORCMGMCK",139,0)
 W ?70,"Page: ",NUM
"RTN","ORCMGMCK",140,0)
 W !,$$REPEAT^XLFSTR("-",78)
"RTN","ORCMGMCK",141,0)
 S NUM=NUM+1
"RTN","ORCMGMCK",142,0)
 Q
"RTN","ORDV04")
0^27^B78115705
"RTN","ORDV04",1,0)
ORDV04 ; SLC/DAN - OE/RR Components ;10/05/12  08:40
"RTN","ORDV04",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**109,148,160,208,195,241,215,274,256,243,306,361**;Dec 17,1997;Build 39
"RTN","ORDV04",3,0)
 ;
"RTN","ORDV04",4,0)
 ; ^TMP("GMPLHS",$J) DBIA 1183
"RTN","ORDV04",5,0)
 ; ^UTILITY & ^TMP("GMRVD") DBIA 10061
"RTN","ORDV04",6,0)
 ;
"RTN","ORDV04",7,0)
ORC(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ; Current Orders
"RTN","ORDV04",8,0)
 N ORCNT,ORJ,ORSITE,SITE,ORX0,ORLIST,GO
"RTN","ORDV04",9,0)
 Q:'$L(OREXT)
"RTN","ORDV04",10,0)
 S GO=$P(OREXT,";")_"^"_$P(OREXT,";",2)
"RTN","ORDV04",11,0)
 Q:'$L($T(@GO))
"RTN","ORDV04",12,0)
 S ORSITE=$$SITE^VASITE,ORSITE=$P(ORSITE,"^",2)_";"_$P(ORSITE,"^",3)
"RTN","ORDV04",13,0)
 K ^TMP("ORR",$J),^TMP("ORDATA",$J)
"RTN","ORDV04",14,0)
 D @GO
"RTN","ORDV04",15,0)
 I '$D(^TMP("ORR",$J)) Q
"RTN","ORDV04",16,0)
 S ORCNT=0,ORJ=0
"RTN","ORDV04",17,0)
 F  S ORJ=$O(^TMP("ORR",$J,ORLIST,ORJ)) Q:'+ORJ!(ORCNT'<ORMAX)  S ORX0=^(ORJ) D
"RTN","ORDV04",18,0)
 . S ORCNT=ORCNT+1,SITE=$S($L($G(^TMP("ORR",$J,ORLIST,ORJ,"facility"))):^("facility"),1:ORSITE)
"RTN","ORDV04",19,0)
 . S ^TMP("ORDATA",$J,ORLIST,ORJ,"WP",1)="1^"_SITE ;Station ID
"RTN","ORDV04",20,0)
 . D SPMRG^ORDVU("^TMP(""ORR"","_$J_","""_ORLIST_""","_ORJ_",""TX"")","^TMP(""ORDATA"","_$J_","""_ORLIST_""","_ORJ_",""WP"",2)",2) ;order text
"RTN","ORDV04",21,0)
 . S ^TMP("ORDATA",$J,ORLIST,ORJ,"WP",3)="3^"_$P(ORX0,"^",6) ; status
"RTN","ORDV04",22,0)
 . S ^TMP("ORDATA",$J,ORLIST,ORJ,"WP",4)="4^"_$$DATE^ORDVU($P(ORX0,"^",4)) ;start date
"RTN","ORDV04",23,0)
 . S ^TMP("ORDATA",$J,ORLIST,ORJ,"WP",5)="5^"_$$DATE^ORDVU($P(ORX0,"^",5)) ;stop date
"RTN","ORDV04",24,0)
 . S ^TMP("ORDATA",$J,ORLIST,ORJ,"WP",7)="7^"_$P(^TMP("ORR",$J,ORLIST,ORJ),U) ;Order Number
"RTN","ORDV04",25,0)
 . I $O(^TMP("ORR",$J,ORLIST,ORJ,"TX",1)) S ^TMP("ORDATA",$J,ORLIST,ORJ,"WP",6)="6^[+]" ;flag for details
"RTN","ORDV04",26,0)
 K ^TMP("ORR",$J)
"RTN","ORDV04",27,0)
 S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV04",28,0)
 Q
"RTN","ORDV04",29,0)
ORCVA ; Current Orders
"RTN","ORDV04",30,0)
 N ORVP
"RTN","ORDV04",31,0)
 S ORVP=DFN_";DPT("
"RTN","ORDV04",32,0)
 I '$D(^OR(100,"AC",ORVP)) Q
"RTN","ORDV04",33,0)
 D EN^ORQ1(ORVP,,2,,ORDBEG,ORDEND,1) ; current orders. ORLIST is set in ORQ1
"RTN","ORDV04",34,0)
 Q
"RTN","ORDV04",35,0)
PLAILALL(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ; API - ALL problems
"RTN","ORDV04",36,0)
 N GO
"RTN","ORDV04",37,0)
 Q:'$L(OREXT)
"RTN","ORDV04",38,0)
 S GO=$P(OREXT,";")_"^"_$P(OREXT,";",2)
"RTN","ORDV04",39,0)
 Q:'$L($T(@GO))
"RTN","ORDV04",40,0)
 D PLAIL
"RTN","ORDV04",41,0)
 Q
"RTN","ORDV04",42,0)
PLALL ; All Problems
"RTN","ORDV04",43,0)
 D GETLIST^GMPLHS(DFN,"ALL")
"RTN","ORDV04",44,0)
 Q
"RTN","ORDV04",45,0)
PLAILI(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ; API - INACTIVE problems
"RTN","ORDV04",46,0)
 N GO
"RTN","ORDV04",47,0)
 Q:'$L(OREXT)
"RTN","ORDV04",48,0)
 S GO=$P(OREXT,";")_"^"_$P(OREXT,";",2)
"RTN","ORDV04",49,0)
 Q:'$L($T(@GO))
"RTN","ORDV04",50,0)
 D PLAIL
"RTN","ORDV04",51,0)
 Q
"RTN","ORDV04",52,0)
PLI ; Inactive Problems
"RTN","ORDV04",53,0)
 D GETLIST^GMPLHS(DFN,"I")
"RTN","ORDV04",54,0)
 Q
"RTN","ORDV04",55,0)
PLAILA(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ; API - ACTIVE problems
"RTN","ORDV04",56,0)
 N GO
"RTN","ORDV04",57,0)
 Q:'$L(OREXT)
"RTN","ORDV04",58,0)
 S GO=$P(OREXT,";")_"^"_$P(OREXT,";",2)
"RTN","ORDV04",59,0)
 Q:'$L($T(@GO))
"RTN","ORDV04",60,0)
 D PLAIL
"RTN","ORDV04",61,0)
 Q
"RTN","ORDV04",62,0)
PLA ; Active Problems
"RTN","ORDV04",63,0)
 D GETLIST^GMPLHS(DFN,"A")
"RTN","ORDV04",64,0)
 Q
"RTN","ORDV04",65,0)
PLAIL ; problems(active, inactive or all)
"RTN","ORDV04",66,0)
 ;Ext call: GMPLHS
"RTN","ORDV04",67,0)
 ; input:
"RTN","ORDV04",68,0)
 ;   STATUS = "A"   => active
"RTN","ORDV04",69,0)
 ;   STATUS = "I"   => inactive
"RTN","ORDV04",70,0)
 ;   STATUS = "ALL" => all
"RTN","ORDV04",71,0)
 ;
"RTN","ORDV04",72,0)
 I $L($T(GCPR^OMGCOAS1)) D  Q  ; Call if FHIE station 200
"RTN","ORDV04",73,0)
 . S ORDBEG=0,ORDEND=9999999,ORMAX=99999
"RTN","ORDV04",74,0)
 . D GCPR^OMGCOAS1(DFN,"PLL",ORDBEG,ORDEND,ORMAX)
"RTN","ORDV04",75,0)
 . S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV04",76,0)
 N ORPROBNO,ORLOC,I,ORSITE
"RTN","ORDV04",77,0)
 S ORSITE=$$SITE^VASITE,ORSITE=$P(ORSITE,"^",2)_";"_$P(ORSITE,"^",3)
"RTN","ORDV04",78,0)
 K ^TMP("ORDATA",$J),^TMP("GMPLHS",$J)  ;DBIA #1183
"RTN","ORDV04",79,0)
 D @GO
"RTN","ORDV04",80,0)
 I '$D(^TMP("GMPLHS",$J)) Q
"RTN","ORDV04",81,0)
 S ORPROBNO=0
"RTN","ORDV04",82,0)
 F I=1:1 S ORPROBNO=$O(^TMP("GMPLHS",$J,ORPROBNO)) Q:'ORPROBNO  D
"RTN","ORDV04",83,0)
 . N ORXREC0,SITE,ICD,SCTC,VHATC,PROVNARR,ORMORE,K,ORCSYS,ORICDLBL
"RTN","ORDV04",84,0)
 . S ORXREC0=$G(^TMP("GMPLHS",$J,ORPROBNO,0)),ORMORE=0
"RTN","ORDV04",85,0)
 . S SITE=$S($L($G(^TMP("GMPLHS",$J,ORPROBNO,"facility"))):^("facility"),1:ORSITE)
"RTN","ORDV04",86,0)
 . S ICD=$P(ORXREC0,U,17),SCTC=$P(ORXREC0,U,15),VHATC=$P(ORXREC0,U,19)
"RTN","ORDV04",87,0)
 . S ORCSYS=$P(ORXREC0,U,22),ORICDLBL=$S(ORCSYS="10D":"ICD-10-CM",1:"ICD-9-CM")
"RTN","ORDV04",88,0)
 . S PROVNARR=$P($G(^TMP("GMPLHS",$J,ORPROBNO,"N"))," (")
"RTN","ORDV04",89,0)
 . S PROVNARR=PROVNARR_$S($L($G(ICD))&('$L($G(SCTC))&'$L($G(VHATC))):" ("_$G(ORICDLBL)_" "_$G(ICD)_")",$L($G(SCTC))&($L($G(ICD))):" (SCT "_$G(SCTC)_")"_" ("_$G(ORICDLBL)_" "_$G(ICD)_")",$L($G(VHATC)):" (VHAT "_$G(VHATC)_")",1:"")
"RTN","ORDV04",90,0)
 . S ^TMP("ORDATA",$J,ORPROBNO,"WP",1)="1^"_SITE ;Station ID
"RTN","ORDV04",91,0)
 . S ^TMP("ORDATA",$J,ORPROBNO,"WP",2)="2^"_$P(ORXREC0,U,5) ;status
"RTN","ORDV04",92,0)
 . S ^TMP("ORDATA",$J,ORPROBNO,"WP",3)="3^"_PROVNARR ;provider narrative
"RTN","ORDV04",93,0)
 . I $S(PROVNARR["(SCT":1,PROVNARR["(VHAT":1,1:0)&($G(ICD)'="799.9"!($G(ICD)'="R69.")) D
"RTN","ORDV04",94,0)
 . . N PLAINARR,PREFTEXT
"RTN","ORDV04",95,0)
 . . I PROVNARR["(SCT" S PLAINARR=$P(PROVNARR," (S"),PREFTEXT=$P(ORXREC0,U,16)
"RTN","ORDV04",96,0)
 . . E  I PROVNARR["(VHAT" S PLAINARR=$P(PROVNARR," (V"),PREFTEXT=$P(ORXREC0,U,20)
"RTN","ORDV04",97,0)
 . . S ^TMP("ORDATA",$J,ORPROBNO,"WP",4)="4^"_$S((PREFTEXT]"")&(PLAINARR'=PREFTEXT):PREFTEXT,1:"") ; Preferred Text
"RTN","ORDV04",98,0)
 . . S ^TMP("ORDATA",$J,ORPROBNO,"WP",5)="5^"_$S($L($G(ICD))&($L($G(SCTC))!$L(VHATC)):$G(ORICDLBL)_" "_$G(ICD)_" ["_$P(ORXREC0,U,18)_"]",1:"") ; Primary ICD-9/10 Code & Description
"RTN","ORDV04",99,0)
 . . I $G(^TMP("GMPLHS",$J,ORPROBNO,0,"ICD9"))'="" N T,J S J=0 F T=1:1:$G(^TMP("GMPLHS",$J,ORPROBNO,0,"ICD9")) D  ;Check for the existence of multiple ICD-9/10 codes
"RTN","ORDV04",100,0)
 . . . ;N T,J S J=0 F T=1:1:$G(^TMP("GMPLHS",$J,ORPROBNO,0,"ICD9")) D
"RTN","ORDV04",101,0)
 . . . N ICD9MLT S J=J+1,ICD9MLT=$G(^TMP("GMPLHS",$J,ORPROBNO,T,"ICD9"))
"RTN","ORDV04",102,0)
 . . . S ^TMP("ORDATA",$J,ORPROBNO,"WP",6,J)="6^"_$G(ORICDLBL)_" "_$P($G(ICD9MLT),U)_" ["_$P($G(ICD9MLT),U,2)_"]" ;Secondary ICD-9/10 Code & Description
"RTN","ORDV04",103,0)
 . E  I PROVNARR["(ICD"&($G(ICD)'="799.9"!($G(ICD)'="R69.")) S ^TMP("ORDATA",$J,ORPROBNO,"WP",5)="5^"_$S($L($G(ICD)):$G(ORICDLBL)_" "_$G(ICD)_" ["_$P(ORXREC0,U,18)_"]",1:"")
"RTN","ORDV04",104,0)
 . S ^TMP("ORDATA",$J,ORPROBNO,"WP",7)="7^"_$$DATE^ORDVU($P(ORXREC0,U,6)) ;onset date
"RTN","ORDV04",105,0)
 . S ^TMP("ORDATA",$J,ORPROBNO,"WP",8)="8^"_$$DATE^ORDVU($P(ORXREC0,U,2)) ;last modified date
"RTN","ORDV04",106,0)
 . S ^TMP("ORDATA",$J,ORPROBNO,"WP",9)="9^"_$P(ORXREC0,U,7) ;provider
"RTN","ORDV04",107,0)
 . S ORLOC=0,K=0
"RTN","ORDV04",108,0)
 . F  S ORLOC=$O(^TMP("GMPLHS",$J,ORPROBNO,"C",ORLOC)) Q:'ORLOC  D
"RTN","ORDV04",109,0)
 .. N X S X=0
"RTN","ORDV04",110,0)
 .. F  S X=$O(^TMP("GMPLHS",$J,ORPROBNO,"C",ORLOC,X)) Q:'X  D
"RTN","ORDV04",111,0)
 ... S K=K+1,ORMORE=1
"RTN","ORDV04",112,0)
 ... S ^TMP("ORDATA",$J,ORPROBNO,"WP",10,K)="10^"_$P($G(^TMP("GMPLHS",$J,ORPROBNO,"C",ORLOC,X,0)),U) ;note narrative
"RTN","ORDV04",113,0)
 . S ^TMP("ORDATA",$J,ORPROBNO,"WP",11)="11^"_$P(ORXREC0,U,14) ;exposures
"RTN","ORDV04",114,0)
 . I ORMORE S ^TMP("ORDATA",$J,ORPROBNO,"WP",12)="12^[+]" ;flag for details
"RTN","ORDV04",115,0)
 K ^TMP("GMPLHS",$J)
"RTN","ORDV04",116,0)
 S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV04",117,0)
 Q
"RTN","ORDV04",118,0)
SR(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ;Surgery Report
"RTN","ORDV04",119,0)
 N ORCNT
"RTN","ORDV04",120,0)
 S ORCNT=0
"RTN","ORDV04",121,0)
 K ^TMP("ORDATA",$J)
"RTN","ORDV04",122,0)
 D ENSR^ORDV04A
"RTN","ORDV04",123,0)
 S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV04",124,0)
 Q
"RTN","ORDV04",125,0)
VS(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ; get vital Signs
"RTN","ORDV04",126,0)
 D VS^ORDV04A
"RTN","ORDV04",127,0)
 Q
"RTN","ORDV04",128,0)
TIUPRG(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ;  progress notes
"RTN","ORDV04",129,0)
 ;Ext calls: TIUSRVLO, TIUSRVR1, VASITE
"RTN","ORDV04",130,0)
 I $L($T(GCPR^OMGCOAS1)) D  Q  ; Call if FHIE station 200
"RTN","ORDV04",131,0)
 . D GCPR^OMGCOAS1(DFN,"PN",ORDBEG,ORDEND,ORMAX)
"RTN","ORDV04",132,0)
 . S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV04",133,0)
 N ORDT,DATE,ORCI,ORGLOB,ORGLOBA,ORTEMP,ORSITE,SITE,I,ORNODE,GO,ORIMAG
"RTN","ORDV04",134,0)
 Q:'$L(OREXT)
"RTN","ORDV04",135,0)
 S GO=$P(OREXT,";")_"^"_$P(OREXT,";",2)
"RTN","ORDV04",136,0)
 Q:'$L($T(@GO))
"RTN","ORDV04",137,0)
 S ORSITE=$$SITE^VASITE,ORSITE=$P(ORSITE,"^",2)_";"_$P(ORSITE,"^",3)
"RTN","ORDV04",138,0)
 D @GO
"RTN","ORDV04",139,0)
 I '$D(@ORGLOB) Q
"RTN","ORDV04",140,0)
 S ORNODE=0,ORCI=0
"RTN","ORDV04",141,0)
 K ^TMP("ORDATA",$J)
"RTN","ORDV04",142,0)
 F  S ORNODE=$O(@ORGLOB@(ORNODE)) Q:'ORNODE!(ORCI'<ORMAX)  D
"RTN","ORDV04",143,0)
 . S ORTEMP=@ORGLOB@(ORNODE)
"RTN","ORDV04",144,0)
 . S ORIMAG=$P($$RESOLVE^TIUSRVLO($P(ORTEMP,U)),U,10)
"RTN","ORDV04",145,0)
 . S DATE=$P(ORTEMP,U,3)       ;date
"RTN","ORDV04",146,0)
 . S SITE=$S($L($G(@ORGLOB@(ORNODE,"facility"))):^("facility"),1:ORSITE)
"RTN","ORDV04",147,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",1)="1^"_SITE ;Station ID
"RTN","ORDV04",148,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",2)="2^"_$P(ORTEMP,U) ;TIU ien
"RTN","ORDV04",149,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",3)="3^"_$$DATE^ORDVU(DATE) ;date
"RTN","ORDV04",150,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",4)="4^"_$P(ORTEMP,U,2) ;type
"RTN","ORDV04",151,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",5)="5^"_$P($P(ORTEMP,U,5),";",2) ;author
"RTN","ORDV04",152,0)
 . S ORCI=ORCI+1
"RTN","ORDV04",153,0)
 . D TGET^TIUSRVR1(.ORGLOBA,$P(ORTEMP,U)) ;Call back to get note text
"RTN","ORDV04",154,0)
 . D SPMRG^ORDVU($NA(@ORGLOBA),$NA(^TMP("ORDATA",$J,ORNODE,"WP",6)),6) ;Notes Text
"RTN","ORDV04",155,0)
 . I $O(@ORGLOBA@(0)) S ^TMP("ORDATA",$J,ORNODE,"WP",7)="7^[+]"
"RTN","ORDV04",156,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",8)="8^"_ORIMAG
"RTN","ORDV04",157,0)
 . K @ORGLOBA
"RTN","ORDV04",158,0)
 K @ORGLOB
"RTN","ORDV04",159,0)
 S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV04",160,0)
 Q
"RTN","ORDV04",161,0)
TPRG ; Progress Notes
"RTN","ORDV04",162,0)
 D CONTEXT^TIUSRVLO(.ORGLOB,3,5,DFN,ORDBEG,ORDEND,,ORMAX)
"RTN","ORDV04",163,0)
 Q
"RTN","ORDV04",164,0)
TIUDCS(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ;  Discharge Summaries
"RTN","ORDV04",165,0)
 ;Ext calls: VASITE, DIQ1, TIUSRVLO
"RTN","ORDV04",166,0)
 I $L($T(GCPR^OMGCOAS1)) D  Q  ; Call if FHIE station 200
"RTN","ORDV04",167,0)
 . D GCPR^OMGCOAS1(DFN,"DS",ORDBEG,ORDEND,ORMAX)
"RTN","ORDV04",168,0)
 . S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV04",169,0)
 N ORGLOB,ORGLOBA,ORI,ORNODE,ORICDIEN,ORARRAY,ORTEMP,ORSITE,SITE,DIC,DR,DIQ,DA,GO
"RTN","ORDV04",170,0)
 Q:'$L(OREXT)
"RTN","ORDV04",171,0)
 S GO=$P(OREXT,";")_"^"_$P(OREXT,";",2)
"RTN","ORDV04",172,0)
 Q:'$L($T(@GO))
"RTN","ORDV04",173,0)
 S ORSITE=$$SITE^VASITE,ORSITE=$P(ORSITE,"^",2)_";"_$P(ORSITE,"^",3)
"RTN","ORDV04",174,0)
 D @GO
"RTN","ORDV04",175,0)
 I '$D(@ORGLOB) Q
"RTN","ORDV04",176,0)
 K ^TMP("ORDATA",$J)
"RTN","ORDV04",177,0)
 S ORNODE=0,ORI=0
"RTN","ORDV04",178,0)
 F  S ORNODE=$O(@ORGLOB@(ORNODE)) Q:'ORNODE!(ORI'<ORMAX)  D
"RTN","ORDV04",179,0)
 . S ORTEMP=@ORGLOB@(ORNODE)
"RTN","ORDV04",180,0)
 . S SITE=$S($L($G(@ORGLOB@(ORNODE,"facility"))):^("facility"),1:ORSITE)
"RTN","ORDV04",181,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",1)="1^"_SITE ;Station ID
"RTN","ORDV04",182,0)
 . K ORARRAY S DIC=8925,DA=$P(ORTEMP,U),DR=".05;.07;.08;1202;1502",DIQ="ORARRAY"
"RTN","ORDV04",183,0)
 . D EN^DIQ1
"RTN","ORDV04",184,0)
 . S DIQ="ORARRAY(8925,"_DA_")"
"RTN","ORDV04",185,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",2)="2^"_$$DATEMMM^ORDVU($G(@DIQ@(.07))) ;episode begin date/time
"RTN","ORDV04",186,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",3)="3^"_$$DATEMMM^ORDVU($G(@DIQ@(.08))) ;episode end date/time
"RTN","ORDV04",187,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",4)="4^"_$G(@DIQ@(1202)) ;author/dicator
"RTN","ORDV04",188,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",5)="5^"_$G(@DIQ@(1502)) ;signed by
"RTN","ORDV04",189,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",6)="6^"_$G(@DIQ@(.05)) ;status
"RTN","ORDV04",190,0)
 . S ORI=ORI+1
"RTN","ORDV04",191,0)
 . D TGET^TIUSRVR1(.ORGLOBA,$P(ORTEMP,U)) ;Call to get summary text
"RTN","ORDV04",192,0)
 . D SPMRG^ORDVU($NA(@ORGLOBA),$NA(^TMP("ORDATA",$J,ORNODE,"WP",7)),7) ;summary Text
"RTN","ORDV04",193,0)
 . I $O(@ORGLOBA@(0)) S ^TMP("ORDATA",$J,ORNODE,"WP",8)="8^[+]" ;detail flag
"RTN","ORDV04",194,0)
 . K @ORGLOBA
"RTN","ORDV04",195,0)
 K @ORGLOB
"RTN","ORDV04",196,0)
 S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV04",197,0)
 Q
"RTN","ORDV04",198,0)
TDCS ; Discharge Summary
"RTN","ORDV04",199,0)
 D CONTEXT^TIUSRVLO(.ORGLOB,244,5,DFN,ORDBEG,ORDEND,,ORMAX)
"RTN","ORDV04",200,0)
 Q
"RTN","ORMBLDGM")
0^30^B5907339
"RTN","ORMBLDGM",1,0)
ORMBLDGM ;SLC/MKB-Build outgoing GMR* ORM msgs ;03/24/14  09:09
"RTN","ORMBLDGM",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**26,68,97,190,195,280,361**;Dec 17, 1997;Build 39
"RTN","ORMBLDGM",3,0)
 ;;ICR
"RTN","ORMBLDGM",4,0)
 ;;XLFDT-10103
"RTN","ORMBLDGM",5,0)
 ;;CODECS^ICDEX-5747
"RTN","ORMBLDGM",6,0)
HL7DATE(DATE) ; -- FM -> HL7 format
"RTN","ORMBLDGM",7,0)
 Q $$FMTHL7^XLFDT(DATE)  ;**97
"RTN","ORMBLDGM",8,0)
 ;
"RTN","ORMBLDGM",9,0)
PTR(NAME) ; -- Returns ptr value of prompt in Dialog file
"RTN","ORMBLDGM",10,0)
 Q $O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORMBLDGM",11,0)
 ;
"RTN","ORMBLDGM",12,0)
CSLT ; -- Segments for new Consult order
"RTN","ORMBLDGM",13,0)
 N OI,WP,URG,CATG,PLACE,ATTN,DIAG,CODE,QT,I,J,USID,CTYPE,RSERV,Z
"RTN","ORMBLDGM",14,0)
 N EARLY,X,Y,ORCODE
"RTN","ORMBLDGM",15,0)
 S OI=$G(ORDIALOG($$PTR("ORDERABLE ITEM"),1))
"RTN","ORMBLDGM",16,0)
 S CTYPE=$G(ORDIALOG($$PTR("FREE TEXT OI"),1))
"RTN","ORMBLDGM",17,0)
 S RSERV=$G(ORDIALOG($$PTR("REQUEST SERVICE"),1))
"RTN","ORMBLDGM",18,0)
 S WP=$$PTR("WORD PROCESSING 1"),URG=+$G(ORDIALOG($$PTR("URGENCY"),1))
"RTN","ORMBLDGM",19,0)
 S CATG=$G(ORDIALOG($$PTR("CATEGORY"),1))
"RTN","ORMBLDGM",20,0)
 S PLACE=$G(ORDIALOG($$PTR("PLACE OF CONSULTATION"),1))
"RTN","ORMBLDGM",21,0)
 S ATTN=$G(ORDIALOG($$PTR("PROVIDER"),1))
"RTN","ORMBLDGM",22,0)
 S DIAG=$G(ORDIALOG($$PTR("FREE TEXT"),1))
"RTN","ORMBLDGM",23,0)
 S CODE=$G(ORDIALOG($$PTR("CODE"),1))
"RTN","ORMBLDGM",24,0)
 S X=$G(ORDIALOG($$PTR("EARLIEST DATE"),1)),%DT="TX" D ^%DT S:Y>0 EARLY=$$HL7DATE(Y) ;WAT/280
"RTN","ORMBLDGM",25,0)
CS1 S QT="^^^"_$G(EARLY)_"^^"_$P($G(^ORD(101.42,+URG,0)),U,2),$P(ORMSG(4),"|",8)=QT ;WAT/280
"RTN","ORMBLDGM",26,0)
 S $P(ORMSG(3),"|",3)=CATG S:PLACE="C" PLACE="OC"
"RTN","ORMBLDGM",27,0)
 S USID=$$USID^ORMBLD(OI) ;S:$L(CTYPE) $P(USID,U,5)=CTYPE
"RTN","ORMBLDGM",28,0)
 S ORMSG(5)="OBR||||"_USID_"||||||||||||||"_PLACE_"|"_ATTN,Z=5
"RTN","ORMBLDGM",29,0)
 ; Create DG1 & ZCL segment(s) for Billing Awareness (BA) project
"RTN","ORMBLDGM",30,0)
 D DG1^ORWDBA3($G(IFN),"Z",5)
"RTN","ORMBLDGM",31,0)
 I RSERV'>0,$P(USID,U,6)="99CON" S RSERV=+$P(USID,U,4)
"RTN","ORMBLDGM",32,0)
 S:RSERV Z=Z+1,ORMSG(Z)="ZSV|^^^"_+RSERV_U_$$GET1^DIQ(123.5,+RSERV_",",.01)_"^99CON|"_CTYPE
"RTN","ORMBLDGM",33,0)
 S I=0,J=+$O(^TMP("ORWORD",$J,WP,1,0)),Z=Z+1 ; get first line
"RTN","ORMBLDGM",34,0)
 S ORMSG(Z)="OBX|1|TX|2000.02^REASON FOR REQUEST^AS4||"_$G(^TMP("ORWORD",$J,WP,1,J,0))
"RTN","ORMBLDGM",35,0)
 F  S J=$O(^TMP("ORWORD",$J,WP,1,J)) Q:J'>0  S I=I+1,ORMSG(Z,I)=^(+J,0)
"RTN","ORMBLDGM",36,0)
 I $L(DIAG) D
"RTN","ORMBLDGM",37,0)
 . N TYPE,VALUE S TYPE="TX",VALUE=DIAG
"RTN","ORMBLDGM",38,0)
 . I $L(CODE) D
"RTN","ORMBLDGM",39,0)
 .. S TYPE="CE",ORCODE=$$CODECS^ICDEX(CODE,"80")
"RTN","ORMBLDGM",40,0)
 .. S ORCODE=$S($P(ORCODE,U)=1:"I9C",1:"I10")
"RTN","ORMBLDGM",41,0)
 .. S VALUE=CODE_U_DIAG_U_ORCODE
"RTN","ORMBLDGM",42,0)
 . S Z=Z+1,ORMSG(Z)="OBX|2|"_TYPE_"|^PROVISIONAL DIAGNOSIS^||"_VALUE
"RTN","ORMBLDGM",43,0)
 Q
"RTN","ORQ2")
0^9^B60457146
"RTN","ORQ2",1,0)
ORQ2 ; SLC/MKB/GSS - Detailed Order Report ;10/21/13  07:06
"RTN","ORQ2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**12,56,75,94,141,213,195,243,282,293,280,346,361**;Dec 17, 1997;Build 39
"RTN","ORQ2",3,0)
 ;
"RTN","ORQ2",4,0)
 ;
"RTN","ORQ2",5,0)
 ;Reference to ^DIC(45.7 supported by IA #519
"RTN","ORQ2",6,0)
 ;Reference to OERR^VADPT supported by IA #4325
"RTN","ORQ2",7,0)
 ;Reference to CODECS^ICDEX supported by ICR #5747
"RTN","ORQ2",8,0)
 ;
"RTN","ORQ2",9,0)
DETAIL(ORY,ORIFN) ; -- Returns details of order ORIFN in ORY(#)
"RTN","ORQ2",10,0)
 N X,X2,I,CNT,ORDIALOG,OR0,OR3,OR6,SEQ,ITEM,PRMT,MULT,FIRST,TITLE,INST,DIWL,DIWR,DIWF,ACTION,VAIN,ORIGVIEW,ORNMSP,ORYT
"RTN","ORQ2",11,0)
 S CNT=0,ORIFN=+ORIFN,OR0=$G(^OR(100,ORIFN,0)),OR3=$G(^(3)),OR6=$G(^(6))
"RTN","ORQ2",12,0)
 S ORNMSP=$$NMSP^ORCD($P(OR0,U,14))
"RTN","ORQ2",13,0)
 K @ORY,ORYT S ORIGVIEW=1 D TEXT^ORQ12(.ORYT,+ORIFN_";"_+$P(OR3,U,7),80) ;CurrTx
"RTN","ORQ2",14,0)
 M @ORY=ORYT ;Move text to global
"RTN","ORQ2",15,0)
 S I=0 F CNT=1:1 S I=$O(ORYT(I)) Q:I'>0  D:$D(IORVON) SETVIDEO(I,1,$L(ORYT(I)),IORVON,IORVOFF)
"RTN","ORQ2",16,0)
 S CNT=CNT+1,@ORY@(CNT)="   " ;blank
"RTN","ORQ2",17,0)
D1 I $O(^OR(100,+ORIFN,2,0)) D
"RTN","ORQ2",18,0)
 . S CNT=CNT+1,@ORY@(CNT)="Sub Orders:"
"RTN","ORQ2",19,0)
 . D:$D(IOUON) SETVIDEO(CNT,1,11,IOUON,IOUOFF)
"RTN","ORQ2",20,0)
 . N IFN S IFN=0
"RTN","ORQ2",21,0)
 . F  S IFN=+$O(^OR(100,+ORIFN,2,IFN)) Q:IFN<1  I $D(^OR(100,IFN,0)) D SUB(IFN)
"RTN","ORQ2",22,0)
 . S CNT=CNT+1,@ORY@(CNT)="   " ;blank
"RTN","ORQ2",23,0)
 I $P(OR3,U,9),$D(^OR(100,+$P(OR3,U,9),0)) D
"RTN","ORQ2",24,0)
 . S CNT=CNT+1,@ORY@(CNT)="Parent Order:"
"RTN","ORQ2",25,0)
 . D:$D(IOUON) SETVIDEO(CNT,1,12,IOUON,IOUOFF)
"RTN","ORQ2",26,0)
 . D SUB(+$P(OR3,U,9))
"RTN","ORQ2",27,0)
 . S CNT=CNT+1,@ORY@(CNT)="   " ;blank
"RTN","ORQ2",28,0)
 I $P(OR3,U,11)=1,$P(OR3,U,5) D  ;Changed - show previous order
"RTN","ORQ2",29,0)
 . S CNT=CNT+1,@ORY@(CNT)="Previous Order:"
"RTN","ORQ2",30,0)
 . D:$D(IOUON) SETVIDEO(CNT,1,15,IOUON,IOUOFF) ;prev order original text
"RTN","ORQ2",31,0)
 . N ORZ,I,ORIGVIEW S ORIGVIEW=2 D TEXT^ORQ12(.ORZ,+$P(OR3,U,5),55)
"RTN","ORQ2",32,0)
 . S CNT=CNT+1,@ORY@(CNT)="     Order Text:        "_$G(ORZ(1))
"RTN","ORQ2",33,0)
 . S I=1 F  S I=$O(ORZ(I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)=$$REPEAT^XLFSTR(" ",24)_$G(ORZ(I))
"RTN","ORQ2",34,0)
D2 S CNT=CNT+1,@ORY@(CNT)="Activity:"
"RTN","ORQ2",35,0)
 D:$D(IOUON) SETVIDEO(CNT,1,9,IOUON,IOUOFF)
"RTN","ORQ2",36,0)
 S DIWL=1,DIWR=64,DIWF="C64",ORI=0 K ^UTILITY($J,"W")
"RTN","ORQ2",37,0)
 F  S ORI=$O(^OR(100,ORIFN,8,ORI)) Q:ORI'>0  S ACTION=$G(^(ORI,0)) D ACT^ORQ20
"RTN","ORQ2",38,0)
 I "^1^12^13^"[(U_$P(OR3,U,3)_U),$L(OR6),$P(ACTION,U,2)'="DC" D DC^ORQ20
"RTN","ORQ2",39,0)
 I $P(OR3,U,3)=2,$P(OR6,U,6) S CNT=CNT+1,@ORY@(CNT)=$$DATE^ORQ20($P(OR6,U,6))_"  Completed"_$S($P(OR6,U,7):" by "_$$USER^ORQ20($P(OR6,U,7)),1:"")
"RTN","ORQ2",40,0)
 S CNT=CNT+1,@ORY@(CNT)="   " ;blank
"RTN","ORQ2",41,0)
D3 S CNT=CNT+1,@ORY@(CNT)="Current Data:"
"RTN","ORQ2",42,0)
 D:$D(IOUON) SETVIDEO(CNT,1,13,IOUON,IOUOFF)
"RTN","ORQ2",43,0)
 D VA I $G(VAIN(2)) S CNT=CNT+1,@ORY@(CNT)="Current Primary Provider:     "_$P(VAIN(2),"^",2)
"RTN","ORQ2",44,0)
 I $G(VAIN(11)) S CNT=CNT+1,@ORY@(CNT)="Current Attending Physician:  "_$P(VAIN(11),"^",2)
"RTN","ORQ2",45,0)
 S CNT=CNT+1,@ORY@(CNT)="Treating Specialty:           "_$P($G(^DIC(45.7,+$P(OR0,U,13),0)),U)
"RTN","ORQ2",46,0)
 S CNT=CNT+1,@ORY@(CNT)="Ordering Location:            "_$P($G(^SC(+$P(OR0,U,10),0)),U)
"RTN","ORQ2",47,0)
 S CNT=CNT+1,@ORY@(CNT)="Start Date/Time:              "_$S($P(OR0,U,8):$$DATE^ORQ20($P(OR0,U,8)),1:"")
"RTN","ORQ2",48,0)
 I $P(OR3,U,5),$P(OR3,U,11)=2 S X=$$ORIG(ORIFN),@ORY@(CNT)=@ORY@(CNT)_" (originally "_$$DATE^ORQ20(X)_")"
"RTN","ORQ2",49,0)
 S CNT=CNT+1,@ORY@(CNT)="Stop Date/Time:               "_$S($P(OR0,U,9):$$DATE^ORQ20($P(OR0,U,9)),1:"")
"RTN","ORQ2",50,0)
 I $P(OR3,U,3)=1,$P(OR6,U,6) S @ORY@(CNT)=@ORY@(CNT)_"  (expired "_$$DATE^ORQ20($P(OR6,U,6))_")"
"RTN","ORQ2",51,0)
 S CNT=CNT+1,@ORY@(CNT)="Current Status:               "_$S($D(^ORD(100.01,+$P(OR3,U,3),0)):$P(^(0),"^"),1:"-")
"RTN","ORQ2",52,0)
 I $$GET^XPAR("ALL","ORPF SHOW STATUS DESCRIPTION",1,"I"),$P(OR3,U,3),$D(^ORD(100.01,$P(OR3,U,3),0)) N J S J=0 F  S J=$O(^ORD(100.01,$P(OR3,U,3),1,J)) Q:J<1  S CNT=CNT+1,@ORY@(CNT)="  "_^(J,0)
"RTN","ORQ2",53,0)
 S CNT=CNT+1,@ORY@(CNT)="Order #"_ORIFN
"RTN","ORQ2",54,0)
 S CNT=CNT+1,@ORY@(CNT)="   " ;blank
"RTN","ORQ2",55,0)
D4 S CNT=CNT+1,@ORY@(CNT)="Order:" D:$D(IOUON) SETVIDEO(CNT,1,6,IOUON,IOUOFF)
"RTN","ORQ2",56,0)
 I '$O(^OR(100,ORIFN,4.5,0)),ORNMSP="RA" D RAD^ORQ21("") Q
"RTN","ORQ2",57,0)
 S ORDIALOG=$P(OR0,U,5) Q:$P(ORDIALOG,";",2)="ORD(101,"  ; 2.5 order
"RTN","ORQ2",58,0)
 D GETDLG^ORCD(+ORDIALOG),GETORDER^ORCD(ORIFN)
"RTN","ORQ2",59,0)
 I ORNMSP="GMRC" D GMRCXTRA
"RTN","ORQ2",60,0)
 S DIWL=1,DIWR=50,DIWF="C50"
"RTN","ORQ2",61,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ)) Q:SEQ'>0  S DA=0 F  S DA=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ,DA)) Q:'DA  D
"RTN","ORQ2",62,0)
 . S ITEM=$G(^ORD(101.41,+ORDIALOG,10,DA,0)) Q:$P(ITEM,U,11)  ; child
"RTN","ORQ2",63,0)
 . S PRMT=$P(ITEM,U,2),MULT=$P(ITEM,U,7) Q:$P(ITEM,U,9)["*"  ;hide
"RTN","ORQ2",64,0)
 . S FIRST=$O(ORDIALOG(PRMT,0)) Q:'FIRST  ; no values
"RTN","ORQ2",65,0)
 . S TITLE=$S(MULT&$L($G(ORDIALOG(PRMT,"TTL"))):ORDIALOG(PRMT,"TTL"),1:ORDIALOG(PRMT,"A"))
"RTN","ORQ2",66,0)
 . S TITLE=TITLE_$$REPEAT^XLFSTR(" ",30-$L(TITLE))
"RTN","ORQ2",67,0)
 . S INST=0 F  S INST=$O(ORDIALOG(PRMT,INST)) Q:INST'>0  D
"RTN","ORQ2",68,0)
 . . I $E(ORDIALOG(PRMT,0))="W" D WP Q
"RTN","ORQ2",69,0)
 . . K ^UTILITY($J,"W") S X=$$EXT^ORCD(PRMT,INST) I TITLE["Infusion Rate"&(X'="")&(X'["ml/hr") S TITLE="Infuse Over Time:",TITLE=TITLE_$$REPEAT^XLFSTR(" ",30-$L(TITLE))
"RTN","ORQ2",70,0)
 . . D ^DIWP
"RTN","ORQ2",71,0)
 . . D:$D(^ORD(101.41,+ORDIALOG,10,"DAD",PRMT)) CHILDREN(PRMT)
"RTN","ORQ2",72,0)
 . . S I=0 F  S I=$O(^UTILITY($J,"W",DIWL,I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)=$S((INST=FIRST)&(I=1):TITLE,1:$$REPEAT^XLFSTR(" ",30))_^(I,0)
"RTN","ORQ2",73,0)
 I ORNMSP="GMRC",$G(^OR(100,ORIFN,4)) S CNT=CNT+1,@ORY@(CNT)="Consult No.:                  "_+^(4)
"RTN","ORQ2",74,0)
 S CNT=CNT+1,@ORY@(CNT)="   " ;blank
"RTN","ORQ2",75,0)
 D RAD^ORQ21(1):ORNMSP="RA",MED^ORQ21:ORNMSP="PS" ;add'l data
"RTN","ORQ2",76,0)
 D BA^ORQ21 ;call for CIDC data
"RTN","ORQ2",77,0)
D5 K ^TMP($J,"OCDATA") I $$OCAPI^ORCHECK(+ORIFN,"OCDATA") D
"RTN","ORQ2",78,0)
 . N CK,OK,X0,X,CDL,I S CNT=CNT+1,@ORY@(CNT)="Order Checks:"
"RTN","ORQ2",79,0)
 . D:$D(IOUON) SETVIDEO(CNT,1,13,IOUON,IOUOFF)
"RTN","ORQ2",80,0)
 . S CK=0 F  S CK=$O(^TMP($J,"OCDATA",CK)) Q:CK'>0  D
"RTN","ORQ2",81,0)
 .. S X0=^TMP($J,"OCDATA",CK,"OC NUMBER")_U_^TMP($J,"OCDATA",CK,"OC LEVEL")_U_U_^TMP($J,"OCDATA",CK,"OR REASON")_U_^TMP($J,"OCDATA",CK,"OR PROVIDER")_U_^TMP($J,"OCDATA",CK,"OR DT")
"RTN","ORQ2",82,0)
 .. S X=^TMP($J,"OCDATA",CK,"OC TEXT",1,0)
"RTN","ORQ2",83,0)
 .. S CDL=$$CDL($P(X0,U,2)) I $P(X0,U,6),'$D(OK) S OK=$P(X0,U,4,6)
"RTN","ORQ2",84,0)
 .. I $L(X)'>68 S CNT=CNT+1,@ORY@(CNT)=CDL_X D XTRA Q
"RTN","ORQ2",85,0)
 .. S DIWL=1,DIWR=68,DIWF="C68" K ^UTILITY($J,"W") D ^DIWP
"RTN","ORQ2",86,0)
 .. S I=0 F  S I=$O(^UTILITY($J,"W",DIWL,I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)=CDL_^(I,0),CDL="            "
"RTN","ORQ2",87,0)
 .. D XTRA
"RTN","ORQ2",88,0)
 . K ^TMP($J,"OCDATA")
"RTN","ORQ2",89,0)
 . Q:'$L($G(OK))  S CNT=CNT+1,@ORY@(CNT)="Override:   "_$S($P(OK,U,2):$$USER^ORQ20($P(OK,U,2))_" on ",1:"")_$$DATE^ORQ20($P(OK,U,3))
"RTN","ORQ2",90,0)
 . I $L($P(OK,U))'>68 S CNT=CNT+1,@ORY@(CNT)="            "_$P(OK,U) Q
"RTN","ORQ2",91,0)
 . S DIWL=1,DIWR=68,DIWF="C68",X=$P(OK,U) K ^UTILITY($J,"W") D ^DIWP
"RTN","ORQ2",92,0)
 . S I=0 F  S I=$O(^UTILITY($J,"W",DIWL,I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)="            "_^(I,0)
"RTN","ORQ2",93,0)
 K ^TMP("ORWORD",$J),^UTILITY($J,"W")
"RTN","ORQ2",94,0)
 Q
"RTN","ORQ2",95,0)
 ;
"RTN","ORQ2",96,0)
XTRA ;
"RTN","ORQ2",97,0)
 I $O(^TMP($J,"OCDATA",CK,"OC TEXT",1)) N ORXT S ORXT=1 F  S ORXT=$O(^TMP($J,"OCDATA",CK,"OC TEXT",ORXT)) Q:'ORXT  D
"RTN","ORQ2",98,0)
 . S X=^TMP($J,"OCDATA",CK,"OC TEXT",ORXT,0),CDL="              "
"RTN","ORQ2",99,0)
 . I $L(X)'>68 S CNT=CNT+1,@ORY@(CNT)=CDL_X Q
"RTN","ORQ2",100,0)
 . S DIWL=1,DIWR=68,DIWF="C68" K ^UTILITY($J,"W") D ^DIWP
"RTN","ORQ2",101,0)
 . S I=0 F  S I=$O(^UTILITY($J,"W",DIWL,I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)=CDL_^(I,0),CDL="              "
"RTN","ORQ2",102,0)
 I $O(^TMP($J,"OCDATA",CK,"OC TEXT",1)) S X="",CNT=CNT+1,@ORY@(CNT)="              "
"RTN","ORQ2",103,0)
 Q
"RTN","ORQ2",104,0)
 ;
"RTN","ORQ2",105,0)
SUB(IFN) ; -- add suborder or parent
"RTN","ORQ2",106,0)
 N ORCY,STS,STRT,IG,A,STOP,SCHED D TEXT^ORQ12(.ORCY,IFN,58)
"RTN","ORQ2",107,0)
 S STS=$G(^ORD(100.01,+$P($G(^OR(100,IFN,3)),U,3),.1))
"RTN","ORQ2",108,0)
 S A=^OR(100,IFN,0),STRT=$P(A,U,8),STOP=$P(A,U,9)
"RTN","ORQ2",109,0)
 S SCHED=$$VALUE^ORX8(IFN,"SCHEDULE",1,"E")
"RTN","ORQ2",110,0)
 S:STRT'="" STRT=$$DATE^ORQ20(STRT) I ORNMSP="LR" S:STOP]"" STOP=$$DATE^ORQ20(STOP)
"RTN","ORQ2",111,0)
 S IG=0 F  S IG=$O(ORCY(IG)) Q:IG<1  S CNT=CNT+1,@ORY@(CNT)=$J(STS,4)_" "_ORCY(IG)_" "_STRT,(STS,STRT)=" "
"RTN","ORQ2",112,0)
 I ORNMSP="LR",STOP]"" S CNT=CNT+1,@ORY@(CNT)=$J("How often: ",16)_SCHED_"   Stops:  "_STOP
"RTN","ORQ2",113,0)
 Q
"RTN","ORQ2",114,0)
 ;
"RTN","ORQ2",115,0)
WP ; -- add word-processing
"RTN","ORQ2",116,0)
 N WP,ORI,X M WP=@ORDIALOG(PRMT,INST)
"RTN","ORQ2",117,0)
 S CNT=CNT+1,@ORY@(CNT)=TITLE
"RTN","ORQ2",118,0)
 S ORI=0 F  S ORI=$O(WP(ORI)) Q:ORI'>0  S X=WP(ORI,0) S:X'="" CNT=CNT+1,@ORY@(CNT)="  "_X
"RTN","ORQ2",119,0)
 Q
"RTN","ORQ2",120,0)
 ;
"RTN","ORQ2",121,0)
CHILDREN(PARENT) ; -- add children
"RTN","ORQ2",122,0)
 N SEQ,DA,ITM,PRMT,TYPE,X
"RTN","ORQ2",123,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,+ORDIALOG,10,"DAD",PARENT,SEQ)) Q:SEQ'>0  S DA=$O(^(SEQ,0)) D
"RTN","ORQ2",124,0)
 . S ITM=$G(^ORD(101.41,+ORDIALOG,10,DA,0)),PRMT=$P(ITM,U,2)
"RTN","ORQ2",125,0)
 . Q:$G(ORDIALOG(PRMT,INST))=""  Q:$P(ITM,U,9)["*"  ;no value or hide
"RTN","ORQ2",126,0)
 . S TYPE=$E(ORDIALOG(PRMT,0)) D:TYPE="W" WP
"RTN","ORQ2",127,0)
 . I TYPE'="W" D
"RTN","ORQ2",128,0)
 . . S X=$$EXT^ORCD(PRMT,INST)
"RTN","ORQ2",129,0)
 . . I $L(X,"|")=2 S X=$$REPLACE^ORHLESC(X,"|","||")
"RTN","ORQ2",130,0)
 . . D ^DIWP
"RTN","ORQ2",131,0)
 Q
"RTN","ORQ2",132,0)
 ;
"RTN","ORQ2",133,0)
SETVIDEO(LINE,COL,WIDTH,ON,OFF) ; -- set video attributes
"RTN","ORQ2",134,0)
 S ORY("VIDEO",LINE,COL,WIDTH)=ON
"RTN","ORQ2",135,0)
 S ORY("VIDEO",LINE,COL+WIDTH,0)=OFF
"RTN","ORQ2",136,0)
 Q
"RTN","ORQ2",137,0)
 ;
"RTN","ORQ2",138,0)
VA ; -- Call VADPT
"RTN","ORQ2",139,0)
 N ORY,DFN,Y S DFN=+$P(OR0,"^",2) D OERR^VADPT
"RTN","ORQ2",140,0)
 Q
"RTN","ORQ2",141,0)
 ;
"RTN","ORQ2",142,0)
CDL(X) ; -- Returns Clinical Danger Level X
"RTN","ORQ2",143,0)
 N Y S Y=$S(X=1:"HIGH:",X=2:"MODERATE:",X=3:"LOW:",1:"NONE:")
"RTN","ORQ2",144,0)
 S Y=$E(Y_"        ",1,12)
"RTN","ORQ2",145,0)
 Q Y
"RTN","ORQ2",146,0)
 ;
"RTN","ORQ2",147,0)
ORIG(IFN) ; -- Return original start date of [renewal] order
"RTN","ORQ2",148,0)
 N I,Y,X3,DONE
"RTN","ORQ2",149,0)
 S I=IFN,Y=$P($G(^OR(100,IFN,0)),U,8),DONE=0
"RTN","ORQ2",150,0)
 F  S X3=$G(^OR(100,I,3)) D  Q:DONE
"RTN","ORQ2",151,0)
 . I $P(X3,U,11)=2,$P(X3,U,5) S I=$P(X3,U,5) Q  ;loop
"RTN","ORQ2",152,0)
 . S Y=$P($G(^OR(100,I,0)),U,8),DONE=1
"RTN","ORQ2",153,0)
 Q Y
"RTN","ORQ2",154,0)
GMRCXTRA ; expects ORDIALOG to be populated and ORIFN to be present
"RTN","ORQ2",155,0)
 N ORGMROUT,ORDGDA,ORGMRICD,ORCODE,ORISCODE,ORCODSYS
"RTN","ORQ2",156,0)
 I '$G(^OR(100,ORIFN,4)) D
"RTN","ORQ2",157,0)
 . S ORISCODE=ORDIALOG("B","CODE"),ORISCODE=$P(ORISCODE,U,2)
"RTN","ORQ2",158,0)
  . I +$G(ORISCODE)>0 D
"RTN","ORQ2",159,0)
  .. Q:'$D(ORDIALOG(ORISCODE,1))
"RTN","ORQ2",160,0)
  .. S ORCODE=ORDIALOG(ORISCODE,1)
"RTN","ORQ2",161,0)
  .. S ORCODSYS=$$CODECS^ICDEX(ORCODE,"80")
"RTN","ORQ2",162,0)
  .. S ORGMROUT=$P($G(ORCODSYS),U,2)
"RTN","ORQ2",163,0)
 I $G(^OR(100,ORIFN,4)) D
"RTN","ORQ2",164,0)
 . S ORGMROUT="ICD-9-CM"
"RTN","ORQ2",165,0)
 . Q:'$D(^GMR(123,+^OR(100,+ORIFN,4),30.1))
"RTN","ORQ2",166,0)
 . S ORGMRICD=^GMR(123,+^OR(100,+ORIFN,4),30.1)
"RTN","ORQ2",167,0)
 . I $P(ORGMRICD,U,3)="10D" S ORGMROUT="ICD-10-CM"
"RTN","ORQ2",168,0)
 S ORDGDA=$G(ORDIALOG("B","CODE"))
"RTN","ORQ2",169,0)
 Q:'$P(ORDGDA,U,2)
"RTN","ORQ2",170,0)
 S ORDGDA=$P(ORDGDA,U,2)
"RTN","ORQ2",171,0)
 Q:'$D(ORDIALOG(ORDGDA,1))
"RTN","ORQ2",172,0)
 S ORDIALOG(ORDGDA,1)="("_ORGMROUT_" "_ORDIALOG(ORDGDA,1)_")"
"RTN","ORQ2",173,0)
 Q
"RTN","ORQ21")
0^15^B35230929
"RTN","ORQ21",1,0)
ORQ21 ; SLC/MKB/GSS - Detailed Order Report cont ;05/23/12  10:30
"RTN","ORQ21",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**141,190,195,215,243,361**;Dec 17, 1997;Build 39
"RTN","ORQ21",3,0)
 ;
"RTN","ORQ21",4,0)
 ; DBIA 2400   OEL^PSOORRL   ^TMP("PS",$J)
"RTN","ORQ21",5,0)
 ; DBIA 2266   EN30^RAO7PC1  ^TMP($J,"RAE2")
"RTN","ORQ21",6,0)
 ;
"RTN","ORQ21",7,0)
RAD(TCOM) ; -- add RA data for 2.5 orders
"RTN","ORQ21",8,0)
 N RAIFN,CASE,PROC,ORD,ORI,X,ORTTL,ORB
"RTN","ORQ21",9,0)
 S RAIFN=$G(^OR(100,ORIFN,4)) Q:RAIFN'>0
"RTN","ORQ21",10,0)
 D EN30^RAO7PC1(RAIFN) Q:'$D(^TMP($J,"RAE2",+ORVP))  ;DBIA 2266
"RTN","ORQ21",11,0)
 S ORD=$G(^TMP($J,"RAE2",+ORVP,"ORD")),CASE=$O(^(0)) Q:'CASE  S PROC=$O(^(CASE,""))
"RTN","ORQ21",12,0)
 I '$G(TCOM) D  ;else add only Tech Comments
"RTN","ORQ21",13,0)
 . S CNT=CNT+1,@ORY@(CNT)=$$LJ^XLFSTR("Procedure:",30)_$S($L(ORD):ORD,1:PROC)
"RTN","ORQ21",14,0)
 . S ORI=0,ORTTL="Procedure Modifiers:          ",ORB=1
"RTN","ORQ21",15,0)
 . F  S ORI=$O(^TMP($J,"RAE2",+ORVP,CASE,PROC,"M",ORI)) Q:ORI'>0  S CNT=CNT+1,@ORY@(CNT)=ORTTL_^(ORI),ORTTL=$$REPEAT^XLFSTR(" ",30)
"RTN","ORQ21",16,0)
 . S CNT=CNT+1,@ORY@(CNT)="History and Reason for Exam:"
"RTN","ORQ21",17,0)
 . F  S ORI=$O(^TMP($J,"RAE2",+ORVP,CASE,PROC,"H",ORI)) Q:ORI'>0  S CNT=CNT+1,@ORY@(CNT)="  "_^(ORI)
"RTN","ORQ21",18,0)
RAD1 I $L($G(^TMP($J,"RAE2",+ORVP,CASE,PROC,"TCOM",1))) S X=^(1) D
"RTN","ORQ21",19,0)
 . N DIWL,DIWR,DIWF,I K ^UTILITY($J,"W")
"RTN","ORQ21",20,0)
 . S DIWL=1,DIWR=72,DIWF="C72" D ^DIWP
"RTN","ORQ21",21,0)
 . S CNT=CNT+1,@ORY@(CNT)="Technologist's Comment:",ORB=1
"RTN","ORQ21",22,0)
 . S I=0 F  S I=$O(^UTILITY($J,"W",DIWL,I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)="  "_^(I,0)
"RTN","ORQ21",23,0)
 I $D(^TMP($J,"RAE2",+ORVP,CASE,PROC,"CM")) D
"RTN","ORQ21",24,0)
 . S ORTTL="Contrast Media used:          ",ORI=0,ORB=1
"RTN","ORQ21",25,0)
 . F  S ORI=$O(^TMP($J,"RAE2",+ORVP,CASE,PROC,"CM",ORI)) Q:ORI<1  S CNT=CNT+1,@ORY@(CNT)=ORTTL_$P(^(ORI),U,2),ORTTL=$$REPEAT^XLFSTR(" ",30)
"RTN","ORQ21",26,0)
 K ^TMP($J,"RAE2",+ORVP),^UTILITY($J,"W")
"RTN","ORQ21",27,0)
 S:$G(ORB) CNT=CNT+1,@ORY@(CNT)="   " ;blank
"RTN","ORQ21",28,0)
 Q
"RTN","ORQ21",29,0)
 ;
"RTN","ORQ21",30,0)
MED ; -- Add Pharmacy order data
"RTN","ORQ21",31,0)
 Q:$G(^OR(100,ORIFN,4))["N"  ;non-VA med -- no refill history
"RTN","ORQ21",32,0)
 N TYPE,NODE,RXN,OR5,STAT S TYPE=$P(OR0,U,12)
"RTN","ORQ21",33,0)
 I '$D(^TMP("PS",$J,0)) D  ;get PS data / DBIA 2400
"RTN","ORQ21",34,0)
 . N PSIFN S PSIFN=$G(^OR(100,ORIFN,4))
"RTN","ORQ21",35,0)
 . S:TYPE="O" PSIFN=$TR(PSIFN,"S","P")_$S(PSIFN?1.N:"R",1:"")
"RTN","ORQ21",36,0)
 . D OEL^PSOORRL(+ORVP,PSIFN_";"_TYPE)  ;DBIA 2400
"RTN","ORQ21",37,0)
 S NODE=$G(^TMP("PS",$J,0)),RXN=$G(^("RXN",0)),STAT=$P(NODE,U,6)
"RTN","ORQ21",38,0)
 I '$L(NODE) K ^TMP("PS",$J) Q  ;error
"RTN","ORQ21",39,0)
 I $O(^TMP("PS",$J,"DD",0)) D  ;Disp Drugs
"RTN","ORQ21",40,0)
 . N I,X,Y S X="Dispense Drugs (units/dose):  ",I=0
"RTN","ORQ21",41,0)
 . F  S I=$O(^TMP("PS",$J,"DD",I)) Q:I'>0  S Y=$G(^(I,0)) S:Y CNT=CNT+1,@ORY@(CNT)=X_$$GET1^DIQ(50,+Y_",",.01)_" ("_$P(Y,U,2)_")"
"RTN","ORQ21",42,0)
 S:$P(NODE,U,9) CNT=CNT+1,@ORY@(CNT)="Total Dose:                   "_$P(NODE,U,9)
"RTN","ORQ21",43,0)
M1 I TYPE="I" D  ;admin data
"RTN","ORQ21",44,0)
 . N I,X,Y I $O(^TMP("PS",$J,"B",0)) D
"RTN","ORQ21",45,0)
 .. S X="IV Print Name:                ",I=0
"RTN","ORQ21",46,0)
 .. F  S I=$O(^TMP("PS",$J,"B",I)) Q:I<1  S Y=$G(^(I,0)) S:$L(Y) CNT=CNT+1,@ORY@(CNT)=X_$P(Y,U),X=$$REPEAT^XLFSTR(" ",30) I $L($P(Y,U,3)) S CNT=CNT+1,@ORY@(CNT)=X_" "_$P(Y,U,3)
"RTN","ORQ21",47,0)
 . S I=+$O(^TMP("PS",$J,"SCH",0)),X=$P($G(^(I,0)),U,2)
"RTN","ORQ21",48,0)
 . S:$L(X) CNT=CNT+1,@ORY@(CNT)="Schedule Type:                "_X
"RTN","ORQ21",49,0)
 . S X="Administration Times:         ",I=0
"RTN","ORQ21",50,0)
 . F  S I=$O(^TMP("PS",$J,"ADM",I)) Q:I'>0  S Y=$G(^(I,0)) S:$L(Y) CNT=CNT+1,@ORY@(CNT)=X_Y,X=$$REPEAT^XLFSTR(" ",30)
"RTN","ORQ21",51,0)
M2 I TYPE="O" D  ;fill history
"RTN","ORQ21",52,0)
 . N FILLD,RET,X,Y,I
"RTN","ORQ21",53,0)
 . S:$P(NODE,U,12) CNT=CNT+1,@ORY@(CNT)="Last Filled:                  "_$$FMTE^XLFDT($P(NODE,U,12),2)
"RTN","ORQ21",54,0)
 . S CNT=CNT+1,@ORY@(CNT)="Refills Remaining:            "_$P(NODE,U,4)
"RTN","ORQ21",55,0)
 . I $P(RXN,U,6)!$G(^TMP("PS",$J,"REF",0)) S X="Filled:                       " D
"RTN","ORQ21",56,0)
 .. I $P(RXN,U,6) S FILLD=$P(RXN,U,6)_"^^^"_$P(RXN,U,7)_U_$P(RXN,U,3,4) D FILLED("R")
"RTN","ORQ21",57,0)
 .. S RET=$G(^TMP("PS",$J,"RXN","RSTC")) I RET'="" D RETURNS(RET)
"RTN","ORQ21",58,0)
 .. S I=0 F  S I=$O(^TMP("PS",$J,"REF",I)) Q:I'>0  D
"RTN","ORQ21",59,0)
 ... S FILLD=$G(^(I,0)) D FILLED("R")
"RTN","ORQ21",60,0)
 ... S RET=$G(^TMP("PS",$J,"REF",I,"RSTC")) I RET'="" D RETURNS(RET)
"RTN","ORQ21",61,0)
 . I $G(^TMP("PS",$J,"PAR",0)) S I=0,X="Partial Fills:      " F  S I=$O(^TMP("PS",$J,"PAR",I)) Q:I'>0  S FILLD=$G(^(I,0)) D FILLED("P")
"RTN","ORQ21",62,0)
 . S:RXN CNT=CNT+1,@ORY@(CNT)="Prescription#:                "_$P(RXN,U)
"RTN","ORQ21",63,0)
M3 S:$P(RXN,U,5) CNT=CNT+1,@ORY@(CNT)="Pharmacist:                   "_$P($G(^VA(200,+$P(RXN,U,5),0)),U)
"RTN","ORQ21",64,0)
    I $G(STAT)="ACTIVE/SUSP" S CNT=CNT+1,@ORY@(CNT)="Prescription Status:          "_STAT_" - Order is active. Fill or Refill has been requested."
"RTN","ORQ21",65,0)
 S:$P(NODE,U,13) CNT=CNT+1,@ORY@(CNT)="NOT TO BE GIVEN" K ^TMP("PS",$J)
"RTN","ORQ21",66,0)
 S CNT=CNT+1,@ORY@(CNT)="   " ;blank
"RTN","ORQ21",67,0)
 S OR5=$G(^OR(100,ORIFN,5)) I $L(OR5) D  ;SC data
"RTN","ORQ21",68,0)
 . N X,Y,I
"RTN","ORQ21",69,0)
 . S CNT=CNT+1,@ORY@(CNT)="   " ;blank line
"RTN","ORQ21",70,0)
 . S CNT=CNT+1,@ORY@(CNT)="First Party Pay Exemptions"
"RTN","ORQ21",71,0)
 . S X="For conditions related to:    "
"RTN","ORQ21",72,0)
 . F I=1:1:8 S Y=$P(OR5,U,I) I Y S CNT=CNT+1,@ORY@(CNT)=X_$$SC(I),X=$$REPEAT^XLFSTR(" ",30)
"RTN","ORQ21",73,0)
 Q
"RTN","ORQ21",74,0)
 ;
"RTN","ORQ21",75,0)
BA ;Billing Aware data display
"RTN","ORQ21",76,0)
 N DXIEN,DXV,ICD9,ICDR,OCT,ORFMDAT
"RTN","ORQ21",77,0)
 S OCT=0,X=""
"RTN","ORQ21",78,0)
 ; Get the date of the order for CSV/CTD usage
"RTN","ORQ21",79,0)
 S ORFMDAT=$$ORFMDAT^ORWDBA3(ORIFN)
"RTN","ORQ21",80,0)
 ; $O through diagnoses for an order
"RTN","ORQ21",81,0)
 F  S OCT=$O(^OR(100,ORIFN,5.1,OCT)) Q:OCT'?1N.N  D
"RTN","ORQ21",82,0)
 . ; DXIEN=Dx IEN
"RTN","ORQ21",83,0)
 . S DXIEN=+^OR(100,ORIFN,5.1,OCT,0)
"RTN","ORQ21",84,0)
 . ; Get Dx record for date ORFMDAT
"RTN","ORQ21",85,0)
 . S ICDR=$$ICDDATA^ICDXCODE("DIAGNOSIS",DXIEN,ORFMDAT)
"RTN","ORQ21",86,0)
 . ; Get Dx verbiage and ICD code
"RTN","ORQ21",87,0)
 . S DXV=$P(ICDR,U,4),ICD9=$P(ICDR,U,2)
"RTN","ORQ21",88,0)
 . S X="               "
"RTN","ORQ21",89,0)
 . I OCT=1 D
"RTN","ORQ21",90,0)
 .. S CNT=CNT+1,@ORY@(CNT)="   " ;blank line
"RTN","ORQ21",91,0)
 .. S CNT=CNT+1,@ORY@(CNT)="Clinical Indicators"
"RTN","ORQ21",92,0)
 .. S X="Diagnosis of:  "
"RTN","ORQ21",93,0)
 . S X=X_ICD9_" - "_DXV,CNT=CNT+1,@ORY@(CNT)=X
"RTN","ORQ21",94,0)
 I OCT'="" D  ;if there are diagnoses show Treatment Factors
"RTN","ORQ21",95,0)
 . S X="For conditions related to:    "
"RTN","ORQ21",96,0)
 . F I=1:1:8 S Y=$P(^OR(100,ORIFN,5.2),U,I) I Y D
"RTN","ORQ21",97,0)
 .. S CNT=CNT+1,@ORY@(CNT)=X_$$SC(I),X=$$REPEAT^XLFSTR(" ",30)
"RTN","ORQ21",98,0)
 Q
"RTN","ORQ21",99,0)
 ;
"RTN","ORQ21",100,0)
FILLED(TYPE) ; -- add FILLD data
"RTN","ORQ21",101,0)
 N Y S Y=$$FMTE^XLFDT($P(FILLD,U),2)_" ("_$$ROUTING($P(FILLD,U,5))_")"
"RTN","ORQ21",102,0)
 S:TYPE="R"&$P(FILLD,U,4) Y=Y_" released "_$$FMTE^XLFDT($P(FILLD,U,4),2)
"RTN","ORQ21",103,0)
 S:TYPE="P"&$P(FILLD,U,3) Y=Y_" Qty: "_$P(FILLD,U,3)
"RTN","ORQ21",104,0)
 S CNT=CNT+1,@ORY@(CNT)=X_Y,X=$$REPEAT^XLFSTR(" ",30)
"RTN","ORQ21",105,0)
 S:$L($P(FILLD,U,6)) CNT=CNT+1,@ORY@(CNT)=X_$P(FILLD,U,6)
"RTN","ORQ21",106,0)
 Q
"RTN","ORQ21",107,0)
RETURNS(NODE) ; add Return to Stock Data
"RTN","ORQ21",108,0)
 N DATE,NAME,TEXT,X
"RTN","ORQ21",109,0)
 S DATE=$$FMTE^XLFDT($P(NODE,U))
"RTN","ORQ21",110,0)
 S NAME=$P(^VA(200,$P(NODE,U,2),0),U)
"RTN","ORQ21",111,0)
 S X=$$REPEAT^XLFSTR(" ",13)
"RTN","ORQ21",112,0)
 S TEXT="Return to Stock: "_X_DATE_" by "_NAME
"RTN","ORQ21",113,0)
 S CNT=CNT+1,@ORY@(CNT)=TEXT
"RTN","ORQ21",114,0)
 S X=$$REPEAT^XLFSTR(" ",30)
"RTN","ORQ21",115,0)
 S TEXT=X_"Comments: "_$P(NODE,U,3)
"RTN","ORQ21",116,0)
 S CNT=CNT+1,@ORY@(CNT)=TEXT
"RTN","ORQ21",117,0)
 Q
"RTN","ORQ21",118,0)
 ;
"RTN","ORQ21",119,0)
ROUTING(X) ; -- Returns external form
"RTN","ORQ21",120,0)
 N Y S Y=$S($G(X)="M":"Mail",$G(X)="W":"Window",1:$G(X))
"RTN","ORQ21",121,0)
 Q Y
"RTN","ORQ21",122,0)
 ;
"RTN","ORQ21",123,0)
SC(J) ; -- Returns name of SC field by piece number
"RTN","ORQ21",124,0)
 I '$G(J) Q ""
"RTN","ORQ21",125,0)
 I J=1 Q "SERVICE CONNECTED CONDITION"
"RTN","ORQ21",126,0)
 I J=2 Q "MILITARY SEXUAL TRAUMA"
"RTN","ORQ21",127,0)
 I J=3 Q "AGENT ORANGE EXPOSURE"
"RTN","ORQ21",128,0)
 I J=4 Q "IONIZING RADIATION EXPOSURE"
"RTN","ORQ21",129,0)
 I J=5 Q "ENVIRONMENTAL CONTAMINANTS"
"RTN","ORQ21",130,0)
 I J=6 Q "HEAD OR NECK CANCER"
"RTN","ORQ21",131,0)
 I J=7 Q "COMBAT VETERAN"
"RTN","ORQ21",132,0)
 I J=8 Q "SHIPBOARD HAZARD AND DEFENSE"
"RTN","ORQ21",133,0)
 Q ""
"RTN","ORQQPL")
0^4^B30115835
"RTN","ORQQPL",1,0)
ORQQPL ; ISL/CLA,REV,JER,TC - RPCs to return problem list data ;09/06/13  09:22
"RTN","ORQQPL",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**9,10,85,173,306,361**;Dec 17, 1997;Build 39
"RTN","ORQQPL",3,0)
 ;
"RTN","ORQQPL",4,0)
 ;  External References:
"RTN","ORQQPL",5,0)
 ;  $$CODECS^ICDEX          ICR #5747
"RTN","ORQQPL",6,0)
 ;  $$STATCHK^ICDXCODE      ICR #5699
"RTN","ORQQPL",7,0)
 ;  $$STATCHK^LEXSRC2       ICR #4083
"RTN","ORQQPL",8,0)
 ;
"RTN","ORQQPL",9,0)
LIST(ORPY,DFN,STATUS)  ;return pt's problem list in format: ien^description^
"RTN","ORQQPL",10,0)
 ; ICD^onset^last modified^SC^SpExp
"RTN","ORQQPL",11,0)
 ; STATUS = status of problems to return: (A)CTIVE, (I)NACTIVE, ("")ALL
"RTN","ORQQPL",12,0)
 Q:'DFN
"RTN","ORQQPL",13,0)
 N ORGMPL,I,DETAIL
"RTN","ORQQPL",14,0)
 I $L($T(LIST^GMPLUTL2))>0 D
"RTN","ORQQPL",15,0)
 .D LIST^GMPLUTL2(.ORGMPL,DFN,STATUS)
"RTN","ORQQPL",16,0)
 .Q:'$D(ORGMPL(0))
"RTN","ORQQPL",17,0)
 .S DETAIL=$$DETAIL^ORWCV1(10)
"RTN","ORQQPL",18,0)
 .F I=1:1:ORGMPL(0) D
"RTN","ORQQPL",19,0)
 ..N LEX,X
"RTN","ORQQPL",20,0)
 ..S X=ORGMPL(I)
"RTN","ORQQPL",21,0)
 ..S ORPY(I)=$P(X,U)_U_$P(X,U,3)_U_$P(X,U,2)_U_$P(X,U,4)_U_$P(X,U,5)_U_$P(X,U,6)_U_$P(X,U,7)_U_$P(X,U,8)_U_$P(X,U,10)_U_$P(X,U,9)_U_U_DETAIL_U_U_$P(X,U,11)_U_$P(X,U,12)_U_$P(X,U,13)
"RTN","ORQQPL",22,0)
 ..I '+$$STATCHK^ICDXCODE($P(ORPY(I),U,16),$P(ORPY(I),U,4),DT) D  I 1
"RTN","ORQQPL",23,0)
 ...S $P(ORPY(I),U,13)="#",$P(ORPY(I),U,9)="#"
"RTN","ORQQPL",24,0)
 ..E  I $L($P(ORPY(I),U,14)),(+$$STATCHK^LEXSRC2($P(ORPY(I),U,14),DT,.LEX)'=1) S $P(ORPY(I),U,13)="$",$P(ORPY(I),U,9)="#"
"RTN","ORQQPL",25,0)
 .S:+$G(ORPY(1))<1 ORPY(1)="^No problems found."
"RTN","ORQQPL",26,0)
 I $L($T(LIST^GMPLUTL2))<1 S ORPY(1)="^Problem list not available.^"
"RTN","ORQQPL",27,0)
 K X
"RTN","ORQQPL",28,0)
 Q
"RTN","ORQQPL",29,0)
DETAIL(Y,DFN,PROBIEN,ID)  ; RETURN DETAILED PROBLEM DATA
"RTN","ORQQPL",30,0)
 N ORGMPL,GMPDT,ORICDLBL
"RTN","ORQQPL",31,0)
 I $L($T(DETAIL^GMPLUTL2))>0 D
"RTN","ORQQPL",32,0)
 .N CR,I,J,T,LEX S CR=$CHAR(13),I=1
"RTN","ORQQPL",33,0)
 .D DETAIL^GMPLUTL2(PROBIEN,.ORGMPL)
"RTN","ORQQPL",34,0)
 .S ORICDLBL=$P($$CODECS^ICDEX(ORGMPL("DIAGNOSIS"),80,ORGMPL("DTINTEREST")),U,2)
"RTN","ORQQPL",35,0)
 .S Y(I)=ORGMPL("NARRATIVE"),I=I+1
"RTN","ORQQPL",36,0)
 .I '+$$STATCHK^ICDXCODE(ORGMPL("CSYS"),ORGMPL("DIAGNOSIS"),DT) D  I 1
"RTN","ORQQPL",37,0)
 ..S Y(I)="*** The "_ORICDLBL_" code "_ORGMPL("DIAGNOSIS")_" is currently inactive. ***",I=I+1
"RTN","ORQQPL",38,0)
 .I +$G(ORGMPL("SCTC")),(+$$STATCHK^LEXSRC2($G(ORGMPL("SCTC")),DT,.LEX)'=1) D
"RTN","ORQQPL",39,0)
 ..S Y(I)="*** The SNOMED-CT code "_ORGMPL("SCTC")_" is currently inactive. ***",I=I+1
"RTN","ORQQPL",40,0)
 .I $L($G(ORGMPL("SCTC")))!$L($G(ORGMPL("SCTD"))) D  I 1
"RTN","ORQQPL",41,0)
 ..I $P(ORGMPL("NARRATIVE")," (SCT")'=ORGMPL("SCTT") S Y(I)="         SNOMED-CT: "_ORGMPL("SCTT"),I=I+1
"RTN","ORQQPL",42,0)
 ..I $L($G(ORGMPL("DIAGNOSIS")))&$L($G(ORGMPL("ICDD"))) S Y(I)=$S(ORGMPL("CSYS")="10D":" Primary ",1:"  Primary ")_ORICDLBL_": "_$G(ORGMPL("DIAGNOSIS"))_$$PAD^ORUTL($G(ORGMPL("DIAGNOSIS")),6)_" ["_$G(ORGMPL("ICDD"))_"]",I=I+1
"RTN","ORQQPL",43,0)
 .E  I $L($G(ORGMPL("ICDD"))) D
"RTN","ORQQPL",44,0)
 ..N ICDD,J S ICDD=$$WRAP^ORU2($G(ORGMPL("ICDD")),65)
"RTN","ORQQPL",45,0)
 ..F J=1:1:$L(ICDD,"|") S Y(I)=$S(J=1:ORICDLBL_" TEXT: ",1:"              ")_$P(ICDD,"|",J),I=I+1
"RTN","ORQQPL",46,0)
 .I ORGMPL("ICD9MLTP")'="" F T=1:1:ORGMPL("ICD9MLTP") D
"RTN","ORQQPL",47,0)
 ..N ORMELBL S ORMELBL=$S($P($G(ORGMPL("ICD9MLTP",T)),U,3)="10D":"ICD-10-CM",1:"ICD-9-CM")
"RTN","ORQQPL",48,0)
 ..S Y(I)=$S(T=1:"Secondary "_ORMELBL_": ",T>1:"                  : ")_$P($G(ORGMPL("ICD9MLTP",T)),U)_$$PAD^ORUTL($P($G(ORGMPL("ICD9MLTP",T)),U),6)_" ["_$P($G(ORGMPL("ICD9MLTP",T)),U,2)_"]",I=I+1
"RTN","ORQQPL",49,0)
 .S Y(I)=" ",I=I+1
"RTN","ORQQPL",50,0)
 .S Y(I)="        Onset: "_ORGMPL("ONSET"),I=I+1
"RTN","ORQQPL",51,0)
 .S Y(I)="       Status: "_ORGMPL("STATUS")
"RTN","ORQQPL",52,0)
 .S Y(I)=Y(I)_$S(ORGMPL("PRIORITY")="ACUTE":"/ACUTE",ORGMPL("PRIORITY")="CHRONIC":"/CHRONIC",1:""),I=I+1
"RTN","ORQQPL",53,0)
 .S Y(I)="      SC Cond: "_ORGMPL("SC"),I=I+1
"RTN","ORQQPL",54,0)
 .S Y(I)="     Exposure: "_$S($G(ORGMPL("EXPOSURE"))>0:ORGMPL("EXPOSURE",1),1:"None"),I=I+1
"RTN","ORQQPL",55,0)
 .I $G(ORGMPL("EXPOSURE"))>1 F J=2:1:ORGMPL("EXPOSURE")  D
"RTN","ORQQPL",56,0)
 ..S Y(I)="               "_ORGMPL("EXPOSURE",J),I=I+1
"RTN","ORQQPL",57,0)
 .S Y(I)=" ",I=I+1
"RTN","ORQQPL",58,0)
 .S Y(I)="     Provider: "_ORGMPL("PROVIDER"),I=I+1
"RTN","ORQQPL",59,0)
 .S Y(I)="       Clinic: "_ORGMPL("CLINIC"),I=I+1
"RTN","ORQQPL",60,0)
 .S Y(I)=" ",I=I+1
"RTN","ORQQPL",61,0)
 .S Y(I)="     Recorded: "_$P(ORGMPL("RECORDED"),U)_", by "_$P(ORGMPL("RECORDED"),U,2),I=I+1
"RTN","ORQQPL",62,0)
 .S Y(I)="      Entered: "_$P(ORGMPL("ENTERED"),U)_", by "_$P(ORGMPL("ENTERED"),U,2),I=I+1
"RTN","ORQQPL",63,0)
 .S Y(I)="      Updated: "_ORGMPL("MODIFIED"),I=I+1
"RTN","ORQQPL",64,0)
 .S Y(I)=" ",I=I+1
"RTN","ORQQPL",65,0)
 .;S Y(I)=" Comment: "_$S($G(ORGMPL("COMMENT"))>0:ORGMPL("COMMENT"),1:"")
"RTN","ORQQPL",66,0)
 .I $G(ORGMPL("COMMENT"))>0 D
"RTN","ORQQPL",67,0)
 ..S Y(I)="----------- Comments -----------",I=I+1
"RTN","ORQQPL",68,0)
 ..;F J=ORGMPL("COMMENT"):-1:1  D
"RTN","ORQQPL",69,0)
 ..;.S Y(I)=ORGMPL("COMMENT",J)
"RTN","ORQQPL",70,0)
 ..;.S Y(I)=$P(Y(I),U)_" by "_$P(Y(I),U,2)_": "_$P(Y(I),U,3),I=I+1
"RTN","ORQQPL",71,0)
 ..F J=1:1:ORGMPL("COMMENT")  D
"RTN","ORQQPL",72,0)
 ...S Y(I)=ORGMPL("COMMENT",J)
"RTN","ORQQPL",73,0)
 ...S Y(I)=$P(Y(I),U)_" by "_$P(Y(I),U,2)_": "_$P(Y(I),U,3),I=I+1
"RTN","ORQQPL",74,0)
 .S Y(I)=" ",I=I+1
"RTN","ORQQPL",75,0)
 .D HIST^ORQQPL2(.GMPDT,PROBIEN)
"RTN","ORQQPL",76,0)
 .I $G(GMPDT(0))>0 D
"RTN","ORQQPL",77,0)
 ..S Y(I)="----------- Audit History -----------",I=I+1
"RTN","ORQQPL",78,0)
 ..F J=1:1:GMPDT(0)  S Y(I)=$P(GMPDT(J),U)_":  "_$P(GMPDT(J),U,2),I=I+1
"RTN","ORQQPL",79,0)
 I $L($T(DETAIL^GMPLUTL2))<1 S Y(1)="Problem list not available."
"RTN","ORQQPL",80,0)
 Q
"RTN","ORQQPL",81,0)
HASPROB(ORDFN,ORPROB) ;extrinsic function returns 1^problem text;ICD9 if
"RTN","ORQQPL",82,0)
 ;pt has an active problem which contains any piece of ORPROB
"RTN","ORQQPL",83,0)
 ;ORDFN   patient DFN
"RTN","ORQQPL",84,0)
 ;ORPROB  problems to check vs. active prob list in format: PROB1TEXT;PROB1ICD^PROB2TEXT;PROB2ICD^PROB3...
"RTN","ORQQPL",85,0)
 ;if ICD includes "." an exact match will be sought
"RTN","ORQQPL",86,0)
 ;if not, a match of general ICD category will be sought
"RTN","ORQQPL",87,0)
 ;Note: All ICD codes passed must be preceded with ";"
"RTN","ORQQPL",88,0)
 Q:+$G(ORDFN)<1 "0^Patient not identified."
"RTN","ORQQPL",89,0)
 Q:'$L($G(ORPROB)) "0^Problem not identified."
"RTN","ORQQPL",90,0)
 N ORQAPL,ORQY,ORI,ORJ,ORCNT,ORQPL,ORQICD,ORQRSLT
"RTN","ORQQPL",91,0)
 D LIST(.ORQY,ORDFN,"A")
"RTN","ORQQPL",92,0)
 Q:$P(ORQY(1),U)="" "0^No active problems found."
"RTN","ORQQPL",93,0)
 S ORQRSLT="0^No matching problems found."
"RTN","ORQQPL",94,0)
 S ORCNT=$L(ORPROB,U)
"RTN","ORQQPL",95,0)
 S ORI=0 F  S ORI=$O(ORQY(ORI)) Q:ORI<1  D
"RTN","ORQQPL",96,0)
 .S ORQAPL=ORQY(ORI)
"RTN","ORQQPL",97,0)
 .F ORJ=1:1:ORCNT D
"RTN","ORQQPL",98,0)
 ..S ORQPL=$P($P(ORPROB,U,ORJ),";"),ORQICD=$P($P(ORPROB,U,ORJ),";",2)
"RTN","ORQQPL",99,0)
 ..;if problem text and pt's problem contains problem text passed:
"RTN","ORQQPL",100,0)
 ..I $L(ORQPL),($P(ORQAPL,U,2)[ORQPL) D
"RTN","ORQQPL",101,0)
 ...S ORQRSLT="1^"_$P(ORQAPL,U,2)_";"_$P(ORQAPL,U,4)
"RTN","ORQQPL",102,0)
 ..;
"RTN","ORQQPL",103,0)
 ..;if specific ICD (contains ".") and pt's ICD equals ICD passed:
"RTN","ORQQPL",104,0)
 ..I $L(ORQICD),(ORQICD["."),($P(ORQAPL,U,4)=ORQICD) D
"RTN","ORQQPL",105,0)
 ...S ORQRSLT="1^"_$P(ORQAPL,U,2)_";"_$P(ORQAPL,U,4)
"RTN","ORQQPL",106,0)
 ..;
"RTN","ORQQPL",107,0)
 ..;if non-specific ICD and pt's ICD category equals ICD category passed:
"RTN","ORQQPL",108,0)
 ..I $L(ORQICD),(ORQICD'["."),($P($P(ORQAPL,U,4),".")=ORQICD) D
"RTN","ORQQPL",109,0)
 ...S ORQRSLT="1^"_$P(ORQAPL,U,2)_";"_$P(ORQAPL,U,4)
"RTN","ORQQPL",110,0)
 Q ORQRSLT
"RTN","ORQQPL1")
0^7^B97265691
"RTN","ORQQPL1",1,0)
ORQQPL1 ; ALB/PDR,REV,ISL/JER/TC - PROBLEM LIST FOR CPRS GUI ;07/16/13  14:21
"RTN","ORQQPL1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,148,173,203,206,249,243,280,306,361**;Dec 17, 1997;Build 39
"RTN","ORQQPL1",3,0)
 ;
"RTN","ORQQPL1",4,0)
 ;------------------------- GET PROBLEM FROM LEXICON -------------------
"RTN","ORQQPL1",5,0)
 ;
"RTN","ORQQPL1",6,0)
LEXSRCH(LIST,FROM,N,VIEW,ORDATE) ; Get candidate Problems from LEX file
"RTN","ORQQPL1",7,0)
 N LEX,VAL,VAL1,COD,CIEN,SYS,MAX,NAME,ORIMPDT,ICDCSYS,ICDCODE
"RTN","ORQQPL1",8,0)
 S ORIMPDT=$$IMPDATE^LEXU("10D")
"RTN","ORQQPL1",9,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORQQPL1",10,0)
 S:'$G(N) N=100
"RTN","ORQQPL1",11,0)
 S:'$L($G(VIEW)) VIEW="PL1"
"RTN","ORQQPL1",12,0)
 D CONFIG^LEXSET("GMPL",VIEW,ORDATE)
"RTN","ORQQPL1",13,0)
 D LOOK^LEXA(FROM,"GMPL",N,"",ORDATE)
"RTN","ORQQPL1",14,0)
 S S=0
"RTN","ORQQPL1",15,0)
 F  S S=$O(LEX("LIST",S)) Q:S<1  D
"RTN","ORQQPL1",16,0)
 . S VAL1=LEX("LIST",S)
"RTN","ORQQPL1",17,0)
 . S COD="",CIEN="",SYS="",NAME="",ICDCODE=""
"RTN","ORQQPL1",18,0)
 . S ICDCSYS=$S(ORDATE<ORIMPDT:"ICD",1:"10D")
"RTN","ORQQPL1",19,0)
 . I $L(VAL1,"CPT-4 ")>1 D
"RTN","ORQQPL1",20,0)
 .. S SYS=$S(ORDATE<ORIMPDT:"ICD-9-CM ",1:"ICD-10-CM ")
"RTN","ORQQPL1",21,0)
 .. S COD=$S(ORDATE<ORIMPDT:"799.9",1:"R69")
"RTN","ORQQPL1",22,0)
 .. S CIEN=""
"RTN","ORQQPL1",23,0)
 .. S NAME=$P(VAL1," (CPT-4")
"RTN","ORQQPL1",24,0)
 . I $L(VAL1,"DSM-IV ")>1 D
"RTN","ORQQPL1",25,0)
 .. S SYS="DSM-IV "
"RTN","ORQQPL1",26,0)
 .. S COD=$P($P(VAL1,SYS,2),")")
"RTN","ORQQPL1",27,0)
 .. S:COD["/" COD=$P(COD,"/",1)
"RTN","ORQQPL1",28,0)
 .. S ICDCODE=$$ONE^LEXU($P(VAL1,U,1),ORDATE,ICDCSYS)
"RTN","ORQQPL1",29,0)
 .. S ICDCODE=$S(ICDCODE["":COD,1:ICDCODE)
"RTN","ORQQPL1",30,0)
 .. S CIEN=+$$ICDDATA^ICDXCODE(ICDCSYS,$G(ICDCODE),ORDATE,"E")
"RTN","ORQQPL1",31,0)
 .. S NAME=$P(VAL1," (DSM-IV")
"RTN","ORQQPL1",32,0)
 .. ;
"RTN","ORQQPL1",33,0)
 . I $L(VAL1,"(TITLE 38 ")>1 D
"RTN","ORQQPL1",34,0)
 .. S SYS="TITLE 38 "
"RTN","ORQQPL1",35,0)
 .. S COD=$P($P(VAL1,SYS,2),")")
"RTN","ORQQPL1",36,0)
 .. S:COD["/" COD=$P(COD,"/",1)
"RTN","ORQQPL1",37,0)
 .. S ICDCODE=$$ONE^LEXU($P(VAL1,U,1),ORDATE,ICDCSYS)
"RTN","ORQQPL1",38,0)
 .. S ICDCODE=$S(ICDCODE["":COD,1:ICDCODE)
"RTN","ORQQPL1",39,0)
 .. S CIEN=+$$ICDDATA^ICDXCODE(ICDCSYS,$G(ICDCODE),ORDATE,"E")
"RTN","ORQQPL1",40,0)
 .. S NAME=$P(VAL1,"(TITLE 38 ")
"RTN","ORQQPL1",41,0)
 .. ;
"RTN","ORQQPL1",42,0)
 . I $L(VAL1,"ICD-9-CM ")>1 D
"RTN","ORQQPL1",43,0)
 .. S SYS="ICD-9-CM "
"RTN","ORQQPL1",44,0)
 .. S COD=$P($P(VAL1,SYS,2),")")
"RTN","ORQQPL1",45,0)
 .. S:COD["/" COD=$P(COD,"/",1)
"RTN","ORQQPL1",46,0)
 .. S CIEN=+$$ICDDATA^ICDXCODE("DIAG",$G(COD),ORDATE,"E")
"RTN","ORQQPL1",47,0)
 .. S NAME=$P(VAL1," (ICD-9-CM")
"RTN","ORQQPL1",48,0)
 .. ;
"RTN","ORQQPL1",49,0)
 . I $L(VAL1,"ICD-10-CM ")>1 D
"RTN","ORQQPL1",50,0)
 .. S SYS="ICD-10-CM "
"RTN","ORQQPL1",51,0)
 .. S COD=$P($P(VAL1,SYS,2),")")
"RTN","ORQQPL1",52,0)
 .. S:COD["/" COD=$P(COD,"/",1)
"RTN","ORQQPL1",53,0)
 .. S CIEN=+$$ICDDATA^ICDXCODE("DIAG",$G(COD),ORDATE,"E")
"RTN","ORQQPL1",54,0)
 .. S NAME=$P(VAL1," (ICD-10-CM")
"RTN","ORQQPL1",55,0)
 . I $L(NAME)=0 S NAME=$P($P(VAL1," (")," *")
"RTN","ORQQPL1",56,0)
 . ;
"RTN","ORQQPL1",57,0)
 . ; jeh Clean left over codes
"RTN","ORQQPL1",58,0)
 . S NAME=$P(NAME," (CPT-4")
"RTN","ORQQPL1",59,0)
 . S NAME=$P(NAME," (DSM-IV")
"RTN","ORQQPL1",60,0)
 . S NAME=$P(NAME,"(TITLE 38 ")
"RTN","ORQQPL1",61,0)
 . S NAME=$P(NAME," (ICD-9-CM")
"RTN","ORQQPL1",62,0)
 . S NAME=$P(NAME," (ICD-10-CM")
"RTN","ORQQPL1",63,0)
 . ;
"RTN","ORQQPL1",64,0)
 . S VAL=NAME_U_COD_U_CIEN_U_SYS ; ien^.01^icd^icdifn^system
"RTN","ORQQPL1",65,0)
 . S LIST(S)=VAL
"RTN","ORQQPL1",66,0)
 . S MAX=S
"RTN","ORQQPL1",67,0)
 I $G(MAX)'="" S LIST(MAX+1)=$G(LEX("MAT"))
"RTN","ORQQPL1",68,0)
 K ^TMP("LEXSCH",$J)
"RTN","ORQQPL1",69,0)
 Q
"RTN","ORQQPL1",70,0)
 ;
"RTN","ORQQPL1",71,0)
SORT(LEX) ; Sort terms alphabetically
"RTN","ORQQPL1",72,0)
 N ORI S ORI=0
"RTN","ORQQPL1",73,0)
 F  S ORI=$O(LEX("LIST",ORI)) Q:+ORI'>0  S LEX("ALPHA",$E($P(LEX("LIST",ORI),U,2),1,255),ORI)=""
"RTN","ORQQPL1",74,0)
 Q
"RTN","ORQQPL1",75,0)
 ;
"RTN","ORQQPL1",76,0)
ICDREC(COD) ;
"RTN","ORQQPL1",77,0)
 N CODIEN,ICDCSYS
"RTN","ORQQPL1",78,0)
 I COD="" Q ""
"RTN","ORQQPL1",79,0)
 S COD=$P($P(COD,U),"/")
"RTN","ORQQPL1",80,0)
 S ICDCSYS=$$SAB^ICDEX(+$$CODECS^ICDEX($G(COD),80,DT),DT) ;ICR #5747
"RTN","ORQQPL1",81,0)
 S CODIEN=+$$ICDDATA^ICDXCODE(ICDCSYS,$G(COD),DT,"E") ;ICR #5699
"RTN","ORQQPL1",82,0)
 Q CODIEN
"RTN","ORQQPL1",83,0)
 ;
"RTN","ORQQPL1",84,0)
CPTREC(COD) ;
"RTN","ORQQPL1",85,0)
 I COD="" Q ""
"RTN","ORQQPL1",86,0)
 Q $$CODEN^ICPTCOD(COD) ;ICR #1995
"RTN","ORQQPL1",87,0)
 ;
"RTN","ORQQPL1",88,0)
EDLOAD(RETURN,DA,GMPROV,GMPVAMC) ; LOAD  EDIT ARRAYS
"RTN","ORQQPL1",89,0)
 ; DA=problem IFN
"RTN","ORQQPL1",90,0)
 N I,GMPFLD,GMPORIG,GMPL
"RTN","ORQQPL1",91,0)
 D GETFLDS^GMPLEDT3(DA)
"RTN","ORQQPL1",92,0)
 S I=0
"RTN","ORQQPL1",93,0)
 D LOADFLDS(.RETURN,"GMPFLD","NEW",.I)
"RTN","ORQQPL1",94,0)
 D LOADFLDS(.RETURN,"GMPORIG","ORG",.I)
"RTN","ORQQPL1",95,0)
 K GMPFLD,GMPORIG,GMPL  ; should not have to do this
"RTN","ORQQPL1",96,0)
 Q
"RTN","ORQQPL1",97,0)
 ;
"RTN","ORQQPL1",98,0)
LOADFLDS(RETURN,NAM,TYP,I) ; LOAD FIELDS FOR TYPE OF ARRAY
"RTN","ORQQPL1",99,0)
 N S,V,CVP,PN,PID
"RTN","ORQQPL1",100,0)
 S S="",V=$C(254)
"RTN","ORQQPL1",101,0)
 F  S S=$O(@NAM@(S)) Q:S=10  D
"RTN","ORQQPL1",102,0)
 . S RETURN(I)=TYP_V_S_V_@NAM@(S)
"RTN","ORQQPL1",103,0)
 . S I=I+1
"RTN","ORQQPL1",104,0)
 S S=""
"RTN","ORQQPL1",105,0)
 F  S S=$O(@NAM@(10,S)) Q:S=""  D
"RTN","ORQQPL1",106,0)
 . S CVP=@NAM@(10,S)
"RTN","ORQQPL1",107,0)
 . S PN="" ; provider name
"RTN","ORQQPL1",108,0)
 . S PID=$P(CVP,U,6) ; provider id
"RTN","ORQQPL1",109,0)
 . I PID'=""  S PN=$$GET1^DIQ(200,PID,.01) ; get provider name
"RTN","ORQQPL1",110,0)
 . S RETURN(I)=TYP_V_"10,"_S_V_CVP_U_PN
"RTN","ORQQPL1",111,0)
 . S I=I+1
"RTN","ORQQPL1",112,0)
 S S=80000
"RTN","ORQQPL1",113,0)
 F  S S=$O(@NAM@(S)) Q:S=""  D
"RTN","ORQQPL1",114,0)
 . S RETURN(I)=TYP_V_S_V_@NAM@(S)
"RTN","ORQQPL1",115,0)
 . S I=I+1
"RTN","ORQQPL1",116,0)
 Q
"RTN","ORQQPL1",117,0)
 ;
"RTN","ORQQPL1",118,0)
EDSAVE(RETURN,GMPIFN,GMPROV,GMPVAMC,UT,EDARRAY,GMPSRCH) ; SAVE EDITED RES
"RTN","ORQQPL1",119,0)
 ; RETURN - boolean, 1 success, 0 failure
"RTN","ORQQPL1",120,0)
 ; EDARRAY - array used for indirect sets of GMPORIG() and GMPFLDS()
"RTN","ORQQPL1",121,0)
 ;
"RTN","ORQQPL1",122,0)
 N GMPFLD,GMPORIG,S,GMPLUSER
"RTN","ORQQPL1",123,0)
 S GMPSRCH=$G(GMPSRCH)
"RTN","ORQQPL1",124,0)
 S RETURN=1 ; initialize for success
"RTN","ORQQPL1",125,0)
 I UT S GMPLUSER=1
"RTN","ORQQPL1",126,0)
 ;
"RTN","ORQQPL1",127,0)
 S S=""
"RTN","ORQQPL1",128,0)
 F  S S=$O(EDARRAY(S)) Q:S=""  D
"RTN","ORQQPL1",129,0)
 . S @EDARRAY(S)
"RTN","ORQQPL1",130,0)
 I $D(GMPFLD(10,"NEW"))>9 D  I 'RETURN Q  ; Bail Out if no lock
"RTN","ORQQPL1",131,0)
 . L +^AUPNPROB(GMPIFN,11):10  ; given bogus nature of this lock, should be able to get
"RTN","ORQQPL1",132,0)
 . I '$T S RETURN=0
"RTN","ORQQPL1",133,0)
 ;
"RTN","ORQQPL1",134,0)
 D EN^GMPLSAVE  ; save the data
"RTN","ORQQPL1",135,0)
 K GMPFLD,GMPORIG
"RTN","ORQQPL1",136,0)
 ;
"RTN","ORQQPL1",137,0)
 L -^AUPNPROB(GMPIFN,11)  ; free this instance of lock (in case it was set)
"RTN","ORQQPL1",138,0)
 S RETURN=1
"RTN","ORQQPL1",139,0)
 Q
"RTN","ORQQPL1",140,0)
 ;
"RTN","ORQQPL1",141,0)
UPDATE(ORRETURN,UPDARRAY) ; UPDATE A PROBLEM RECORD
"RTN","ORQQPL1",142,0)
 ; Does essentially same job as EDSAVE above, however does not handle edits to comments
"RTN","ORQQPL1",143,0)
 ; or addition of multiple comments.
"RTN","ORQQPL1",144,0)
 ; Use initially just for status updates.
"RTN","ORQQPL1",145,0)
 ;
"RTN","ORQQPL1",146,0)
 N S,GMPL,GMPORIG,ORARRAY ; last 2 vars created in nested call
"RTN","ORQQPL1",147,0)
 S S=""
"RTN","ORQQPL1",148,0)
 F  S S=$O(UPDARRAY(S)) Q:S=""  D
"RTN","ORQQPL1",149,0)
 . S @UPDARRAY(S)
"RTN","ORQQPL1",150,0)
 D UPDATE^GMPLUTL(.ORARRAY,.ORRETURN)
"RTN","ORQQPL1",151,0)
 ; broker wont pick up root node RETURN
"RTN","ORQQPL1",152,0)
 S ORRETURN(1)=ORRETURN(0) ; error text
"RTN","ORQQPL1",153,0)
 S ORRETURN(0)=ORRETURN ; gmpdfn
"RTN","ORQQPL1",154,0)
 I ORRETURN(0)=""  S ORRETURN=1 ; insurance ? need
"RTN","ORQQPL1",155,0)
 Q
"RTN","ORQQPL1",156,0)
 ;
"RTN","ORQQPL1",157,0)
ADDSAVE(RETURN,GMPDFN,GMPROV,GMPVAMC,ADDARRAY,GMPSRCH) ; SAVE NEW RECORD
"RTN","ORQQPL1",158,0)
 ; RETURN - Problem IFN if success, 0 otherwise
"RTN","ORQQPL1",159,0)
 ; ADDARRAY - array used for indirect sets of  GMPFLDS()
"RTN","ORQQPL1",160,0)
 ;
"RTN","ORQQPL1",161,0)
 N DA,GMPFLD,GMPORIG,S
"RTN","ORQQPL1",162,0)
 S GMPSRCH=$G(GMPSRCH)
"RTN","ORQQPL1",163,0)
 S RETURN=0 ;
"RTN","ORQQPL1",164,0)
 L +^AUPNPROB(0):10
"RTN","ORQQPL1",165,0)
 Q:'$T  ; bail out if no lock
"RTN","ORQQPL1",166,0)
 ;
"RTN","ORQQPL1",167,0)
 S S=""
"RTN","ORQQPL1",168,0)
 F  S S=$O(ADDARRAY(S)) Q:S=""  D
"RTN","ORQQPL1",169,0)
 . S @ADDARRAY(S)
"RTN","ORQQPL1",170,0)
 ;
"RTN","ORQQPL1",171,0)
 D NEW^GMPLSAVE
"RTN","ORQQPL1",172,0)
 ;
"RTN","ORQQPL1",173,0)
 S RETURN=DA
"RTN","ORQQPL1",174,0)
 ;
"RTN","ORQQPL1",175,0)
 L -^AUPNPROB(0)
"RTN","ORQQPL1",176,0)
 S RETURN=1
"RTN","ORQQPL1",177,0)
 Q
"RTN","ORQQPL1",178,0)
 ;
"RTN","ORQQPL1",179,0)
INITUSER(RETURN,ORDUZ) ; INITIALIZE FOR NEW USER
"RTN","ORQQPL1",180,0)
 ; taken from INIT^GMPLMGR
"RTN","ORQQPL1",181,0)
 ; leave GMPLUSER on symbol table - is evaluated in EDITSAVE
"RTN","ORQQPL1",182,0)
 ;
"RTN","ORQQPL1",183,0)
 N X,PV,CTXT,GMPLPROV,ORENT
"RTN","ORQQPL1",184,0)
 S ORDUZ=$G(ORDUZ,DUZ)
"RTN","ORQQPL1",185,0)
 S GMPLUSER=$$CLINUSER(ORDUZ)
"RTN","ORQQPL1",186,0)
 S CTXT=$$GET^XPAR("ALL","ORCH CONTEXT PROBLEMS",1)
"RTN","ORQQPL1",187,0)
 S X=$G(^GMPL(125.99,1,0)) ; IN1+6^GMPLMGR
"RTN","ORQQPL1",188,0)
 S RETURN(0)=GMPLUSER ;  problem list user, or other user
"RTN","ORQQPL1",189,0)
 S RETURN(1)=$$VIEW^GMPLX1(ORDUZ) ; GMPLVIEW("VIEW") - users default view
"RTN","ORQQPL1",190,0)
 S RETURN(2)=+$P(X,U,2) ; verify transcribed problems
"RTN","ORQQPL1",191,0)
 S RETURN(3)=+$P(X,U,3) ; prompt for chart copy
"RTN","ORQQPL1",192,0)
 S RETURN(4)=+$P(X,U,4) ; use lexicon
"RTN","ORQQPL1",193,0)
 S RETURN(5)=$S($P(X,U,5)="R":1,1:0) ; chron or reverse chron listing
"RTN","ORQQPL1",194,0)
 S RETURN(6)=$S($P($G(CTXT),";",3)'="":$P($G(CTXT),";",3),1:"A")
"RTN","ORQQPL1",195,0)
 S GMPLPROV=$P($G(CTXT),";",5)
"RTN","ORQQPL1",196,0)
 I +GMPLPROV>0,$D(^VA(200,GMPLPROV)) D
"RTN","ORQQPL1",197,0)
 . S RETURN(7)=GMPLPROV_U_$P(^VA(200,GMPLPROV,0),U)
"RTN","ORQQPL1",198,0)
 E  S RETURN(7)="0^All"
"RTN","ORQQPL1",199,0)
 S RETURN(8)=$$SERVICE^GMPLX1(ORDUZ) ; user's service/section
"RTN","ORQQPL1",200,0)
 ; Guessing from what I see in the data that $$VIEW^GMPLX1 actually returns a composite
"RTN","ORQQPL1",201,0)
 ; of default view (in/out patient)/(c1/c2... if out patient i.e. GMPLVIEW("CLIN")) or
"RTN","ORQQPL1",202,0)
 ;                                                      /(s1/s2... if in patient i.e. GMPLVIEW("SERV"))
"RTN","ORQQPL1",203,0)
 ; Going with this assumption for now:
"RTN","ORQQPL1",204,0)
 I $L(RETURN(1),"/")>1 D
"RTN","ORQQPL1",205,0)
 . S PV=RETURN(1)
"RTN","ORQQPL1",206,0)
 . S RETURN(1)=$P(PV,"/")
"RTN","ORQQPL1",207,0)
 . I RETURN(1)="C" S GMPLVIEW("CLIN")=$P(PV,"/",2,99)
"RTN","ORQQPL1",208,0)
 . I RETURN(1)="S" S GMPLVIEW("SERV")=$P(PV,"/",2,99)
"RTN","ORQQPL1",209,0)
 S RETURN(9)=$G(GMPLVIEW("SERV")) ; ??? Where from - see tech doc
"RTN","ORQQPL1",210,0)
 S RETURN(10)=$G(GMPLVIEW("CLIN")) ; ??? Where from - see tech doc
"RTN","ORQQPL1",211,0)
 S RETURN(11)=""
"RTN","ORQQPL1",212,0)
 S RETURN(12)=+$P($G(CTXT),";",4)    ; should comments display?
"RTN","ORQQPL1",213,0)
 S ORENT="ALL^SRV.`"_+$$SERVICE^GMPLX1(ORDUZ,1)
"RTN","ORQQPL1",214,0)
 S RETURN(13)=+$$GET^XPAR(ORENT,"ORQQPL SUPPRESS CODES",1) ; suppress codes?
"RTN","ORQQPL1",215,0)
 K GMPLVIEW
"RTN","ORQQPL1",216,0)
 Q
"RTN","ORQQPL1",217,0)
 ;
"RTN","ORQQPL1",218,0)
CLINUSER(ORDUZ) ;is this a clinical user?
"RTN","ORQQPL1",219,0)
 N ORUSER
"RTN","ORQQPL1",220,0)
 S ORUSER=0
"RTN","ORQQPL1",221,0)
 I $D(^XUSEC("ORES",ORDUZ)) S ORUSER=1
"RTN","ORQQPL1",222,0)
 I $D(^XUSEC("ORELSE",ORDUZ)) S ORUSER=1
"RTN","ORQQPL1",223,0)
 I $D(^XUSEC("PROVIDER",ORDUZ)) S ORUSER=1
"RTN","ORQQPL1",224,0)
 Q ORUSER
"RTN","ORQQPL1",225,0)
 ;
"RTN","ORQQPL1",226,0)
INITPT(RETURN,DFN) ; GET PATIENT PARAMETERS
"RTN","ORQQPL1",227,0)
 Q:+$G(DFN)=0
"RTN","ORQQPL1",228,0)
 N GMPSC,GMPAGTOR,GMPION,GMPGULF,GMPHNC,GMPMST,GMPCV,GMPSHD
"RTN","ORQQPL1",229,0)
 ;
"RTN","ORQQPL1",230,0)
 S RETURN(0)=DUZ(2) ; facility #
"RTN","ORQQPL1",231,0)
 D DEM^VADPT ; get death indicator
"RTN","ORQQPL1",232,0)
 S RETURN(1)=$G(VADM(6)) ; death indicator
"RTN","ORQQPL1",233,0)
 D VADPT^GMPLX1(DFN) ; get eligibilities
"RTN","ORQQPL1",234,0)
 S RETURN(2)=$P(GMPSC,U) ; service connected
"RTN","ORQQPL1",235,0)
 S RETURN(3)=$G(GMPAGTOR) ; agent orange exposure
"RTN","ORQQPL1",236,0)
 S RETURN(4)=$G(GMPION) ; ionizing radiation exposure
"RTN","ORQQPL1",237,0)
 S RETURN(5)=$G(GMPGULF) ; gulf war exposure
"RTN","ORQQPL1",238,0)
 S RETURN(6)=VA("BID") ; need this to reconstitute GMPDFN on return
"RTN","ORQQPL1",239,0)
 S RETURN(7)=$G(GMPHNC) ; head/neck cancer
"RTN","ORQQPL1",240,0)
 S RETURN(8)=$G(GMPMST) ; MST
"RTN","ORQQPL1",241,0)
 S RETURN(9)=$G(GMPCV) ; CV
"RTN","ORQQPL1",242,0)
 S RETURN(10)=$G(GMPSHD) ; SHAD
"RTN","ORQQPL1",243,0)
 Q
"RTN","ORQQPL1",244,0)
 ;
"RTN","ORQQPL1",245,0)
PROVSRCH(LST,FLAG,N,FROM,PART) ; Get candidate Rroviders from person file
"RTN","ORQQPL1",246,0)
 N LV,NS,RV,IEN
"RTN","ORQQPL1",247,0)
 S RV=$NAME(LV("DILIST","ID"))
"RTN","ORQQPL1",248,0)
 IF +$G(N)=0 S N=50
"RTN","ORQQPL1",249,0)
 S FLAG=$G(FLAG),N=$G(N),FROM=$G(FROM),PART=$G(PART)
"RTN","ORQQPL1",250,0)
 D LIST^DIC(200,"",".01;1",FLAG,N,FROM,PART,"","","","LV")
"RTN","ORQQPL1",251,0)
 S NS=""
"RTN","ORQQPL1",252,0)
 F  S NS=$O(LV("DILIST",1,NS)) Q:NS=""  D
"RTN","ORQQPL1",253,0)
 . S IEN=""
"RTN","ORQQPL1",254,0)
 . S IEN=$O(^VA(200,"B",@RV@(NS,.01),IEN)) ; compliments of PROV^ORQPTQ
"RTN","ORQQPL1",255,0)
 . S LST(NS)=IEN_U_@RV@(NS,.01)  ; initials_U_@RV@(NS,1)
"RTN","ORQQPL1",256,0)
 Q
"RTN","ORQQPL1",257,0)
 ;
"RTN","ORQQPL1",258,0)
CLINSRCH(Y,X) ; Get LIST OF CLINICS
"RTN","ORQQPL1",259,0)
 ; Note: This comes from CLIN^ORQPTQ2, where it was commented out in place of
"RTN","ORQQPL1",260,0)
 ; a call to ^XPAR. I would have just used CLIN^ORQPTQ2, but it didn't work - at
"RTN","ORQQPL1",261,0)
 ; least on SLC OEX directory.
"RTN","ORQQPL1",262,0)
 ; X has no purpose other than to satisfy apparent rpc and tcallv requirement for args
"RTN","ORQQPL1",263,0)
 N I,NAME,IEN
"RTN","ORQQPL1",264,0)
 S I=1,IEN=0,NAME=""
"RTN","ORQQPL1",265,0)
 ;access to SC global granted under DBIA #518:
"RTN","ORQQPL1",266,0)
 F  S NAME=$O(^SC("B",NAME)) Q:NAME=""  S IEN=$O(^(NAME,0)) D
"RTN","ORQQPL1",267,0)
 . I $P(^SC(IEN,0),"^",3)="C" S Y(I)=IEN_"^"_NAME,I=I+1
"RTN","ORQQPL1",268,0)
 Q
"RTN","ORQQPL1",269,0)
 ;
"RTN","ORQQPL1",270,0)
SRVCSRCH(Y,FROM,DIR,ALL) ; GET LIST OF SERVICES
"RTN","ORQQPL1",271,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORQQPL1",272,0)
 F  Q:I=CNT  S FROM=$O(^DIC(49,"B",FROM),DIR) Q:FROM=""  D
"RTN","ORQQPL1",273,0)
 . S IEN=$O(^DIC(49,"B",FROM,0)) I '$G(ALL),$P(^DIC(49,IEN,0),U,9)'="C" Q
"RTN","ORQQPL1",274,0)
 . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORQQPL1",275,0)
 Q
"RTN","ORQQPL1",276,0)
 ;
"RTN","ORQQPL1",277,0)
DUP(Y,DFN,TERM,TEXT) ;Check for duplicate problem
"RTN","ORQQPL1",278,0)
 S Y=$$DUPL^GMPLX(DFN,TERM,TEXT) Q:+Y=0
"RTN","ORQQPL1",279,0)
 I $P(^AUPNPROB(Y,1),U,2)="H" S Y=0 Q
"RTN","ORQQPL1",280,0)
 S Y=Y_U_$P(^AUPNPROB(Y,0),U,12)
"RTN","ORQQPL1",281,0)
 Q
"RTN","ORQQPL1",282,0)
GETDX(CODE,SYS,ORIDT) ; Get ICD associated with SNOMED CT or VHAT Code
"RTN","ORQQPL1",283,0)
 N LEX,ORI,ORY,ORUH,IMPLDT,ORCSYSPR
"RTN","ORQQPL1",284,0)
 S ORIDT=$G(ORIDT,DT)
"RTN","ORQQPL1",285,0)
 S ORY=0,IMPLDT=$$IMPDATE^LEXU("10D")
"RTN","ORQQPL1",286,0)
 S ORUH=$S(ORIDT<IMPLDT:"799.9",1:"R69.")
"RTN","ORQQPL1",287,0)
 S ORCSYSPR=$S(ORIDT<IMPLDT:1,1:30)
"RTN","ORQQPL1",288,0)
 I SYS["VHAT" D  I 1
"RTN","ORQQPL1",289,0)
 . I ORIDT<IMPLDT S ORY=$$GETASSN^LEXTRAN1(CODE,"VHAT2ICD") I 1
"RTN","ORQQPL1",290,0)
 . E  S ORY=$$GETASSN^LEXTRAN1(CODE,"VHAT210D")
"RTN","ORQQPL1",291,0)
 E  D
"RTN","ORQQPL1",292,0)
 . I ORIDT<IMPLDT S ORY=$$GETASSN^LEXTRAN1(CODE,"SCT2ICD") I 1
"RTN","ORQQPL1",293,0)
 . ; E  S ORY=$$GETASSN^LEXTRAN1(CODE,"SCT2ICD")
"RTN","ORQQPL1",294,0)
 . ; *** SWITCH WHEN SCT-to-ICD-10 mapping available ***
"RTN","ORQQPL1",295,0)
 . E  S ORY=$$GETASSN^LEXTRAN1(CODE,"SCT210D")
"RTN","ORQQPL1",296,0)
 I $S(+ORY'>0:1,+$P(ORY,U,2)'>0:1,+LEX'>0:1,1:0) S ORY=ORUH G GETDXX
"RTN","ORQQPL1",297,0)
 S ORI=0,ORY=""
"RTN","ORQQPL1",298,0)
 F  S ORI=$O(LEX(ORI)) Q:+ORI'>0  D
"RTN","ORQQPL1",299,0)
 . N ICD
"RTN","ORQQPL1",300,0)
 . S ICD=$O(LEX(ORI,""))
"RTN","ORQQPL1",301,0)
 . S:'+$$STATCHK^ICDXCODE(ORCSYSPR,ICD,ORIDT) ICD=""
"RTN","ORQQPL1",302,0)
 . I ICD]"" S ORY=$S(ORY'="":ORY_"/",1:"")_ICD
"RTN","ORQQPL1",303,0)
 I (ORY]""),(ORY'[".") S ORY=ORY_"."
"RTN","ORQQPL1",304,0)
GETDXX Q ORY
"RTN","ORQQPL1",305,0)
TEST ; test invocation
"RTN","ORQQPL1",306,0)
 N LIST,I S I=""
"RTN","ORQQPL1",307,0)
 D LEXSRCH(.LIST,"diabetes with neuro",10,"GMPL",DT)
"RTN","ORQQPL1",308,0)
 F  S I=$O(LIST(I)) Q:+I'>0  W !,LIST(I)
"RTN","ORQQPL1",309,0)
 Q
"RTN","ORQQPL2")
0^5^B37792053
"RTN","ORQQPL2",1,0)
ORQQPL2 ; ALB/PDR/REV/TC - RPCs FOR CPRS GUI IMPLEMENTATION ;03/08/13  08:25
"RTN","ORQQPL2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,306,361**;Dec 17, 1997;Build 39
"RTN","ORQQPL2",3,0)
 ;
"RTN","ORQQPL2",4,0)
 ;  External References:
"RTN","ORQQPL2",5,0)
 ;  $$SITE^VASITE                   ICR #10112
"RTN","ORQQPL2",6,0)
 ;  $$FMTE/$$HTFM/$$NOW^XLFDT       ICR #10103
"RTN","ORQQPL2",7,0)
 ;  $$GET^XPAR                      ICR #2263
"RTN","ORQQPL2",8,0)
 ;  $$NAME^XUSER                    ICR #2343
"RTN","ORQQPL2",9,0)
 ;
"RTN","ORQQPL2",10,0)
 ; -------------- GET HISTORY FOR DETAIL DISPLAY ----------------------
"RTN","ORQQPL2",11,0)
 ;
"RTN","ORQQPL2",12,0)
HIST(RETURN,GMPIFN) ; GET AUDIT HISTORY
"RTN","ORQQPL2",13,0)
 ; taken from EN^GMPLDISP
"RTN","ORQQPL2",14,0)
 N IDT,AIFN,S,ORDT,TXT,I,L,GMPDT,LCNT
"RTN","ORQQPL2",15,0)
 S LCNT=0
"RTN","ORQQPL2",16,0)
 I +$O(^GMPL(125.8,"AD",GMPIFN,0))'>0 D  Q  ;BAIL OUT - NO CHANGES
"RTN","ORQQPL2",17,0)
 . S RETURN(0)="NONE"
"RTN","ORQQPL2",18,0)
 ;       get change history
"RTN","ORQQPL2",19,0)
 S IDT=""
"RTN","ORQQPL2",20,0)
 F  S IDT=$O(^GMPL(125.8,"AD",GMPIFN,IDT)) Q:IDT'>0  D
"RTN","ORQQPL2",21,0)
 . S AIFN=""
"RTN","ORQQPL2",22,0)
 . F  S AIFN=$O(^GMPL(125.8,"AD",GMPIFN,IDT,AIFN)) Q:AIFN'>0  D
"RTN","ORQQPL2",23,0)
 .. N FLD,GMPL0 S GMPL0=^GMPL(125.8,AIFN,0),FLD=$P(GMPL0,U,2)
"RTN","ORQQPL2",24,0)
 .. Q:(FLD=80201)!(FLD=80202)!(FLD=80002)
"RTN","ORQQPL2",25,0)
 .. D DT^GMPLHIST
"RTN","ORQQPL2",26,0)
 ;         Transfer data and clean up for return to GUI
"RTN","ORQQPL2",27,0)
 S S="",I=0,TXT=""
"RTN","ORQQPL2",28,0)
 F  S S=$O(GMPDT(S)) Q:S=""  D
"RTN","ORQQPL2",29,0)
 . S L=GMPDT(S,0)
"RTN","ORQQPL2",30,0)
 . I $L(L,": ")>1 D  Q  ; does line begin with date? (hope ": " can't be part of text)
"RTN","ORQQPL2",31,0)
 .. D FLUSH(.RETURN,.I,$G(ORDT),$G(TXT))
"RTN","ORQQPL2",32,0)
 .. S ORDT=$P(L,": ") ; get new date
"RTN","ORQQPL2",33,0)
 .. S TXT=$$STRIP($P(L,": ",2,999)) ; start new text string
"RTN","ORQQPL2",34,0)
 . S TXT=TXT_" "_$$STRIP(L)  ; line does not begin with date, so add to existing text line
"RTN","ORQQPL2",35,0)
 I '$D(RETURN(0)) S RETURN(0)=I
"RTN","ORQQPL2",36,0)
 D FLUSH(.RETURN,.I,$G(ORDT),$G(TXT))
"RTN","ORQQPL2",37,0)
 Q
"RTN","ORQQPL2",38,0)
 ;
"RTN","ORQQPL2",39,0)
FLUSH(RETURN,I,ORDT,TXT) ; FLUSH FORMATTED AUDIT STRING
"RTN","ORQQPL2",40,0)
  I I'=0 D  ; do we have a text string built?
"RTN","ORQQPL2",41,0)
 . S RETURN(I)=$$STRIP(ORDT)_U_TXT  ; return date and text
"RTN","ORQQPL2",42,0)
  S I=I+1
"RTN","ORQQPL2",43,0)
 Q
"RTN","ORQQPL2",44,0)
 ;
"RTN","ORQQPL2",45,0)
STRIP(VAL) ; STRIP LEADING SPACES FROM VALUES
"RTN","ORQQPL2",46,0)
 N J
"RTN","ORQQPL2",47,0)
 F J=1:1 Q:$E(VAL,J)'=" "
"RTN","ORQQPL2",48,0)
 Q $E(VAL,J,9999)
"RTN","ORQQPL2",49,0)
 ;
"RTN","ORQQPL2",50,0)
 ; ------------------- DELETE A PROBLEM FROM LIST ---------------------
"RTN","ORQQPL2",51,0)
 ;
"RTN","ORQQPL2",52,0)
DELETE(RESULT,GMPIFN,GMPROV,GMPVAMC,REASON) ; DELETE A PROBLEM
"RTN","ORQQPL2",53,0)
 ; From GMPL1 - silent version
"RTN","ORQQPL2",54,0)
 N CHNGE
"RTN","ORQQPL2",55,0)
 I REASON'="" D
"RTN","ORQQPL2",56,0)
 . S GMPFLD(10,"NEW",1)=REASON
"RTN","ORQQPL2",57,0)
 . D NEWNOTE^GMPLSAVE
"RTN","ORQQPL2",58,0)
 S CHNGE=GMPIFN_"^1.02^"_$$HTFM^XLFDT($H)
"RTN","ORQQPL2",59,0)
 S CHNGE=CHNGE_U_DUZ_"^P^H^Deleted^"_+$G(GMPROV)
"RTN","ORQQPL2",60,0)
 S $P(^AUPNPROB(GMPIFN,1),U,2)="H"
"RTN","ORQQPL2",61,0)
 S RESULT=1
"RTN","ORQQPL2",62,0)
 D AUDIT^GMPLX(CHNGE,"")
"RTN","ORQQPL2",63,0)
 D DTMOD^GMPLX(GMPIFN)
"RTN","ORQQPL2",64,0)
 K GMPFLD
"RTN","ORQQPL2",65,0)
 Q
"RTN","ORQQPL2",66,0)
 ; ------------------ REPLACE REMOVED PROBLEM ----------------------
"RTN","ORQQPL2",67,0)
 ;
"RTN","ORQQPL2",68,0)
REPLACE(RETURN,DA) ; -- replace problem on patient's list
"RTN","ORQQPL2",69,0)
 ; taken from REPLACE^GMPLRPTR
"RTN","ORQQPL2",70,0)
 N CHNGE,DIE,DR
"RTN","ORQQPL2",71,0)
 I $P($G(^AUPNPROB(DA,1)),U,2)'="H" D  Q  ; BAIL OUT - INVALID RECORD
"RTN","ORQQPL2",72,0)
 . S RETURN=0
"RTN","ORQQPL2",73,0)
 S DR="1.02////P"
"RTN","ORQQPL2",74,0)
 S DIE="^AUPNPROB("
"RTN","ORQQPL2",75,0)
 D ^DIE
"RTN","ORQQPL2",76,0)
 S CHNGE=DA_"^1.02^"_$$HTFM^XLFDT($H)_U_DUZ_"^H^P^Replaced^"_DUZ
"RTN","ORQQPL2",77,0)
 D AUDIT^GMPLX(CHNGE,"")
"RTN","ORQQPL2",78,0)
 D DTMOD^GMPLX(DA)
"RTN","ORQQPL2",79,0)
 S RETURN=1
"RTN","ORQQPL2",80,0)
 Q
"RTN","ORQQPL2",81,0)
 ;
"RTN","ORQQPL2",82,0)
 ; -------------------  VERIFY A PROBLEM ------------------------
"RTN","ORQQPL2",83,0)
 ;
"RTN","ORQQPL2",84,0)
VERIFY(RETURN,GMPIFN) ; -- verify a transcribed problem
"RTN","ORQQPL2",85,0)
 ; RETURN:  ;(consistent with UPDATE function)
"RTN","ORQQPL2",86,0)
 ;   SUCCESS:
"RTN","ORQQPL2",87,0)
 ;     RETURN>0, RETURN(0)=""
"RTN","ORQQPL2",88,0)
 ;   FAILURE:
"RTN","ORQQPL2",89,0)
 ;      RETURN<0, RETURN(0)=verbose error message
"RTN","ORQQPL2",90,0)
 N NOW,CHNGE
"RTN","ORQQPL2",91,0)
 S NOW=$$HTFM^XLFDT($H)
"RTN","ORQQPL2",92,0)
 I $P(^AUPNPROB(GMPIFN,1),U,2)'="T" D  Q  ; BAIL OUT - ALREADY VERIFIED
"RTN","ORQQPL2",93,0)
 . S RETURN=-1
"RTN","ORQQPL2",94,0)
 . S RETURN(0)="Problem Already Verified"
"RTN","ORQQPL2",95,0)
 L +^AUPNPROB(GMPIFN,0):10
"RTN","ORQQPL2",96,0)
 I '$T D  Q  ; BAIL OUT - NO LOCK
"RTN","ORQQPL2",97,0)
 . S RETURN=-1
"RTN","ORQQPL2",98,0)
 . S RETURN(0)="Record in use. Try again in a few moments"
"RTN","ORQQPL2",99,0)
 S $P(^AUPNPROB(GMPIFN,1),U,2)="P"
"RTN","ORQQPL2",100,0)
 S CHNGE=GMPIFN_"^1.02^"_NOW_U_DUZ_"^T^P^Verified^"_DUZ
"RTN","ORQQPL2",101,0)
 D AUDIT^GMPLX(CHNGE,"")
"RTN","ORQQPL2",102,0)
 D DTMOD^GMPLX(GMPIFN)
"RTN","ORQQPL2",103,0)
 L -^AUPNPROB(GMPIFN,0)
"RTN","ORQQPL2",104,0)
 S RETURN=1
"RTN","ORQQPL2",105,0)
 S RETURN(0)=""
"RTN","ORQQPL2",106,0)
 Q
"RTN","ORQQPL2",107,0)
INACT(RETURN,GMPIFN) ; -- inactivate a problem
"RTN","ORQQPL2",108,0)
 ; RETURN:  ;(consistent with UPDATE function)
"RTN","ORQQPL2",109,0)
 ;   SUCCESS:
"RTN","ORQQPL2",110,0)
 ;     RETURN>0, RETURN(0)=""
"RTN","ORQQPL2",111,0)
 ;   FAILURE:
"RTN","ORQQPL2",112,0)
 ;      RETURN<0, RETURN(0)=verbose error message
"RTN","ORQQPL2",113,0)
 N NOW,CHNGE
"RTN","ORQQPL2",114,0)
 S NOW=$$HTFM^XLFDT($H)
"RTN","ORQQPL2",115,0)
 I $P(^AUPNPROB(GMPIFN,0),U,12)'="A" D  Q  ; BAIL OUT - ALREADY INACTIVE
"RTN","ORQQPL2",116,0)
 . S RETURN=-1
"RTN","ORQQPL2",117,0)
 . S RETURN(0)="Problem Already Inactive"
"RTN","ORQQPL2",118,0)
 L +^AUPNPROB(GMPIFN,0):10
"RTN","ORQQPL2",119,0)
 I '$T D  Q  ; BAIL OUT - NO LOCK
"RTN","ORQQPL2",120,0)
 . S RETURN=-1
"RTN","ORQQPL2",121,0)
 . S RETURN(0)="Record in use. Try again in a few moments"
"RTN","ORQQPL2",122,0)
 S $P(^AUPNPROB(GMPIFN,0),U,12)="I"
"RTN","ORQQPL2",123,0)
 S CHNGE=GMPIFN_"^.12^"_NOW_U_DUZ_"^A^I^Inactivated^"_DUZ
"RTN","ORQQPL2",124,0)
 D AUDIT^GMPLX(CHNGE,"")
"RTN","ORQQPL2",125,0)
 D DTMOD^GMPLX(GMPIFN)
"RTN","ORQQPL2",126,0)
 L -^AUPNPROB(GMPIFN,0)
"RTN","ORQQPL2",127,0)
 S RETURN=1
"RTN","ORQQPL2",128,0)
 S RETURN(0)=""
"RTN","ORQQPL2",129,0)
 Q
"RTN","ORQQPL2",130,0)
OLDCOMM(ORY,PIFN) ; Return comments for a problem - SINGLE DIVISION!
"RTN","ORQQPL2",131,0)
 ;N FAC,NIFN,NOTE,NOTECNT
"RTN","ORQQPL2",132,0)
 ;S NOTECNT=0
"RTN","ORQQPL2",133,0)
 ;S FAC=$O(^AUPNPROB(PIFN,11,"B",+$G(DUZ(2)),0)) Q:'FAC
"RTN","ORQQPL2",134,0)
 ;F NIFN=0:0 S NIFN=$O(^AUPNPROB(PIFN,11,FAC,11,"B",NIFN)) Q:NIFN'>0  D
"RTN","ORQQPL2",135,0)
 ;. Q:$P($G(^AUPNPROB(PIFN,11,FAC,11,NIFN,0)),U,4)'="A"
"RTN","ORQQPL2",136,0)
 ;. S NOTE=$P($G(^AUPNPROB(PIFN,11,FAC,11,NIFN,0)),U,3)
"RTN","ORQQPL2",137,0)
 ;. S NOTECNT=NOTECNT+1,ORY(NOTECNT)=NOTE
"RTN","ORQQPL2",138,0)
 Q
"RTN","ORQQPL2",139,0)
GETCOMM(ORY,PIFN)       ; Return comments for a problem - MULTI-DIVISIONAL
"RTN","ORQQPL2",140,0)
 N FAC,NIFN,NOTE,NOTECNT
"RTN","ORQQPL2",141,0)
 S NOTECNT=0,FAC=0
"RTN","ORQQPL2",142,0)
 F  S FAC=$O(^AUPNPROB(PIFN,11,FAC)) Q:+FAC'>0  D
"RTN","ORQQPL2",143,0)
 . S NIFN=0
"RTN","ORQQPL2",144,0)
 . F  S NIFN=$O(^AUPNPROB(PIFN,11,FAC,11,NIFN)) Q:NIFN'>0  D
"RTN","ORQQPL2",145,0)
 . . Q:$P($G(^AUPNPROB(PIFN,11,FAC,11,NIFN,0)),U,4)'="A"
"RTN","ORQQPL2",146,0)
 . . S NOTE=$P($G(^AUPNPROB(PIFN,11,FAC,11,NIFN,0)),U,3)
"RTN","ORQQPL2",147,0)
 . . S NOTECNT=NOTECNT+1,ORY(NOTECNT)=NOTE
"RTN","ORQQPL2",148,0)
 Q
"RTN","ORQQPL2",149,0)
SAVEVIEW(Y,GMPLVIEW) ; -- save new view in File #200/Field #125
"RTN","ORQQPL2",150,0)
 N TMP
"RTN","ORQQPL2",151,0)
 Q:'$D(GMPLVIEW)
"RTN","ORQQPL2",152,0)
 S TMP=$P($G(^VA(200,DUZ,125)),U,2,999)
"RTN","ORQQPL2",153,0)
 S ^VA(200,DUZ,125)=$P(GMPLVIEW,U,1)_U_TMP
"RTN","ORQQPL2",154,0)
 S TMP=$$GET^XPAR(DUZ_";VA(200,","ORCH CONTEXT PROBLEMS",1)
"RTN","ORQQPL2",155,0)
 I TMP'="" D  Q
"RTN","ORQQPL2",156,0)
 . D CHG^XPAR(DUZ_";VA(200,","ORCH CONTEXT PROBLEMS",1,$P(GMPLVIEW,U,2))
"RTN","ORQQPL2",157,0)
 D ADD^XPAR(DUZ_";VA(200,","ORCH CONTEXT PROBLEMS",1,$P(GMPLVIEW,U,2))
"RTN","ORQQPL2",158,0)
 Q
"RTN","ORQQPL2",159,0)
NTRTBULL(ORY,ORTERM,ORNP,ORPT,ORCOMM) ; Send NTRT Request bulletin to CAC mailgroup
"RTN","ORQQPL2",160,0)
 N ORSITE,ORSVC,ORUSER,OREQSTR,OREQSVC,ORDGRP,XMB,XMDUZ,XMY
"RTN","ORQQPL2",161,0)
 D USERINFO^XUSRB2(.ORUSER) S ORSITE=$G(ORUSER(3)),ORSVC=$G(ORUSER(5))
"RTN","ORQQPL2",162,0)
 S OREQSTR=$S(DUZ'=ORNP:ORUSER(2)_" for "_$$NAME^XUSER(ORNP),1:ORUSER(2))
"RTN","ORQQPL2",163,0)
 S OREQSVC=$P($$SERVICE^GMPLX1(ORNP,1),U,2)
"RTN","ORQQPL2",164,0)
 S ORSVC=$S(ORSVC=OREQSVC:ORSVC,1:ORSVC_"/"_OREQSVC)
"RTN","ORQQPL2",165,0)
 S:ORSITE']"" ORSITE=$$SITE^VASITE
"RTN","ORQQPL2",166,0)
 I '$L(ORTERM) S ORY="0^Empty String - a valid term must be sent." Q
"RTN","ORQQPL2",167,0)
 I '+$G(DUZ)!'$D(^VA(200,+$G(DUZ))) S ORY="0^A valid user must be identified." Q
"RTN","ORQQPL2",168,0)
 S XMB="OR PROBLEM NTRT BULLETIN"
"RTN","ORQQPL2",169,0)
 S XMDUZ="OR PROBLEM NTRT BULLETIN"
"RTN","ORQQPL2",170,0)
 ; Recipients = g.OR CACS [defined in BULLETIN File entry] &
"RTN","ORQQPL2",171,0)
 ;              [Divisional mail group defined in OR PROBLEM NTRT BY DIVISION param]
"RTN","ORQQPL2",172,0)
 S ORDGRP=$$GET^XPAR("DIV.`"_DUZ(2),"OR PROBLEM NTRT BY DIVISION",1,"E")
"RTN","ORQQPL2",173,0)
 S:ORDGRP]"" XMY("G."_ORDGRP)=""
"RTN","ORQQPL2",174,0)
 S XMB(1)=ORTERM
"RTN","ORQQPL2",175,0)
 S XMB(2)=$$FMTE^XLFDT($E(($$NOW^XLFDT),1,12),2)
"RTN","ORQQPL2",176,0)
 S XMB(3)=OREQSTR
"RTN","ORQQPL2",177,0)
 S XMB(4)=ORSVC
"RTN","ORQQPL2",178,0)
 S XMB(5)=$P(ORSITE,U,2)_"("_$P(ORSITE,U,3)_")"
"RTN","ORQQPL2",179,0)
 S XMB(6)=$G(ORPT,"")
"RTN","ORQQPL2",180,0)
 S XMB(7)=$G(ORCOMM,"None")
"RTN","ORQQPL2",181,0)
 D ^XMB,KILL^XM S ORY=1
"RTN","ORQQPL2",182,0)
 Q
"RTN","ORQQPL2",183,0)
TESTBULL ; Test setting up and sending PL NTRT bulletin
"RTN","ORQQPL2",184,0)
 N ORY
"RTN","ORQQPL2",185,0)
 D NTRTBULL(.ORY,"PL NTRT Test!")
"RTN","ORQQPL2",186,0)
 W !,"Call Result: ",$S(+ORY:"Success!",1:$P(ORY,U,2))
"RTN","ORQQPL2",187,0)
 Q
"RTN","ORQQPL3")
0^6^B68312739
"RTN","ORQQPL3",1,0)
ORQQPL3 ; ALB/PDR,REV,ISL/JER/TC - Problem List RPCs ;12/04/12  10:06
"RTN","ORQQPL3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,148,173,243,280,306,361**;Dec 17, 1997;Build 39
"RTN","ORQQPL3",3,0)
 ;
"RTN","ORQQPL3",4,0)
 ;  External References:
"RTN","ORQQPL3",5,0)
 ;  $$ICDDESC^GMPLUTL2                 ICR #2741
"RTN","ORQQPL3",6,0)
 ;  $$PROBTEXT^GMPLX                   ICR #2742
"RTN","ORQQPL3",7,0)
 ;  $$CODECS/$$CSI/$$SAB^ICDEX         ICR #5747
"RTN","ORQQPL3",8,0)
 ;  $$ICDDATA/$$STATCHK^ICDXCODE       ICR #5699
"RTN","ORQQPL3",9,0)
 ;  $$STATCHK^LEXSRC2                  ICR #4083
"RTN","ORQQPL3",10,0)
 ;
"RTN","ORQQPL3",11,0)
 ;---------------- LIST PATIENT PROBLEMS ------------------------
"RTN","ORQQPL3",12,0)
 ;
"RTN","ORQQPL3",13,0)
PROBL(ROOT,DFN,CONTEXT) ;  GET LIST OF PATIENT PROBLEMS
"RTN","ORQQPL3",14,0)
 N DIWL,DIWR,DIWF
"RTN","ORQQPL3",15,0)
 N ST,ORI,ORX
"RTN","ORQQPL3",16,0)
 S (LCNT,NUM)=0
"RTN","ORQQPL3",17,0)
 S DIWL=1,DIWR=48,DIWF="C48"
"RTN","ORQQPL3",18,0)
 S CONTEXT=";;"_$G(CONTEXT)
"RTN","ORQQPL3",19,0)
 I CONTEXT=";;" S CONTEXT=";;A"
"RTN","ORQQPL3",20,0)
 S ST=$P(CONTEXT,";",3)
"RTN","ORQQPL3",21,0)
 ;
"RTN","ORQQPL3",22,0)
 I ST="R" D DELLIST(.ROOT,+DFN) ; show deleted only
"RTN","ORQQPL3",23,0)
 I ST'="R"  D LIST(.ROOT,+DFN,ST) ; show others - don't trust ELSE here
"RTN","ORQQPL3",24,0)
 ;
"RTN","ORQQPL3",25,0)
 I ROOT(0)<1 D
"RTN","ORQQPL3",26,0)
 . S LCNT=1
"RTN","ORQQPL3",27,0)
 . S ROOT(1)="     "_$$PAD^ORCHTAB("No data available.",49)_"|"
"RTN","ORQQPL3",28,0)
 Q
"RTN","ORQQPL3",29,0)
 ;
"RTN","ORQQPL3",30,0)
 ;
"RTN","ORQQPL3",31,0)
LIST(GMPL,GMPDFN,GMPSTAT) ; -- Returns list of problems for patient GMPDFN
"RTN","ORQQPL3",32,0)
 ;    in GMPL(#)=ifn^status^description^ICD^onset^last modified^SC^SpExp^Condition^Loc^
"RTN","ORQQPL3",33,0)
 ;                          loc.type^prov^service^priority^has comment^date recorded^SC condition(s)^
"RTN","ORQQPL3",34,0)
 ;               inactive flag^ICD long description^ICD coding system
"RTN","ORQQPL3",35,0)
 ;     & GMPL(0)=number of problems returned
"RTN","ORQQPL3",36,0)
 ; This is virtually same as LIST^GMPLUTL2 except that it appends the
"RTN","ORQQPL3",37,0)
 ; condition - T)ranscribed or P)ermanent,location,loc type,provider, service.
"RTN","ORQQPL3",38,0)
 ;
"RTN","ORQQPL3",39,0)
 N CNT,SP,NUM,ORLIST,ORVIEW,GMPARAM
"RTN","ORQQPL3",40,0)
 Q:$G(GMPDFN)'>0
"RTN","ORQQPL3",41,0)
 S CNT=0,SP=""
"RTN","ORQQPL3",42,0)
 S GMPARAM("QUIET")=1
"RTN","ORQQPL3",43,0)
 S GMPARAM("REV")=$P($G(^GMPL(125.99,1,0)),U,5)="R"
"RTN","ORQQPL3",44,0)
 S ORVIEW("ACT")=GMPSTAT
"RTN","ORQQPL3",45,0)
 S ORVIEW("PROV")=0
"RTN","ORQQPL3",46,0)
 S ORVIEW("VIEW")=""
"RTN","ORQQPL3",47,0)
 ;
"RTN","ORQQPL3",48,0)
 D GETPLIST^GMPLMGR1(.ORLIST,.ORTOTAL,.ORVIEW)
"RTN","ORQQPL3",49,0)
 ;
"RTN","ORQQPL3",50,0)
 F NUM=0:0 S NUM=$O(ORLIST(NUM)) Q:NUM'>0  D
"RTN","ORQQPL3",51,0)
 . N GMPL0,GMPL1,GMPL800,GMPL802,I,IFN,SCT,ST,ONSET,ICD,LASTMOD,PRIO,DTREC,ICDD,ORDTINT,ORPLCSYS
"RTN","ORQQPL3",52,0)
 . N SC,ORTOTAL,LIN,LOC,LT,PROV,SERV,HASCMT,SCCOND,AO,IR,ENV,HNC,MST,CV,SHD,INACT
"RTN","ORQQPL3",53,0)
 . S IFN=+ORLIST(NUM) Q:IFN'>0
"RTN","ORQQPL3",54,0)
 . S (ICDD,INACT)=""
"RTN","ORQQPL3",55,0)
 . S GMPL0=$G(^AUPNPROB(IFN,0))
"RTN","ORQQPL3",56,0)
 . S GMPL1=$G(^AUPNPROB(IFN,1))
"RTN","ORQQPL3",57,0)
 . S GMPL800=$G(^AUPNPROB(IFN,800)),SCT=$P(GMPL800,U)
"RTN","ORQQPL3",58,0)
 . S GMPL802=$G(^AUPNPROB(IFN,802))
"RTN","ORQQPL3",59,0)
 . S HASCMT=($D(^AUPNPROB(IFN,11,0))>0)
"RTN","ORQQPL3",60,0)
 . S CNT=CNT+1
"RTN","ORQQPL3",61,0)
 . N LEX
"RTN","ORQQPL3",62,0)
 . S ORDTINT=$S(+$P(GMPL802,U,1):$P(GMPL802,U,1),1:$P(GMPL0,U,8))
"RTN","ORQQPL3",63,0)
 . S ORPLCSYS=$S($P(GMPL802,U,2)]"":$P(GMPL802,U,2),1:$$SAB^ICDEX($$CSI^ICDEX(80,+GMPL0),ORDTINT))
"RTN","ORQQPL3",64,0)
 . S ICD=$P($$ICDDATA^ICDXCODE(ORPLCSYS,+GMPL0,ORDTINT,"I"),U,2)
"RTN","ORQQPL3",65,0)
 . I '+$$STATCHK^ICDXCODE($$CSI^ICDEX(80,+GMPL0),ICD,DT) S INACT="#" I 1
"RTN","ORQQPL3",66,0)
 . I +$G(SCT),(+$$STATCHK^LEXSRC2(SCT,DT,.LEX)'=1) S INACT="$"
"RTN","ORQQPL3",67,0)
 . I $D(^AUPNPROB(IFN,803)) D
"RTN","ORQQPL3",68,0)
 . . N I S I=0
"RTN","ORQQPL3",69,0)
 . . F  S I=$O(^AUPNPROB(IFN,803,I)) Q:+I'>0  S $P(ICD,"/",(I+1))=$P($G(^AUPNPROB(IFN,803,I,0)),U)
"RTN","ORQQPL3",70,0)
 . I +SCT'>0,(+ICD>0) S ICDD=$$ICDDESC^GMPLUTL2(ICD,DT,ORPLCSYS)
"RTN","ORQQPL3",71,0)
 . S LASTMOD=$P(GMPL0,U,3)
"RTN","ORQQPL3",72,0)
 . S ST=$P(GMPL0,U,12)
"RTN","ORQQPL3",73,0)
 . S ONSET=$P(GMPL0,U,13)
"RTN","ORQQPL3",74,0)
 . S SC=$S(+$P(GMPL1,U,10):"SC",$P(GMPL1,U,10)=0:"NSC",1:"")
"RTN","ORQQPL3",75,0)
 . S AO=$S(+$P(GMPL1,U,11):"/AO",1:"")
"RTN","ORQQPL3",76,0)
 . S IR=$S(+$P(GMPL1,U,12):"/IR",1:"")
"RTN","ORQQPL3",77,0)
 . S ENV=$S(+$P(GMPL1,U,13):"/EC",1:"")
"RTN","ORQQPL3",78,0)
 . S HNC=$S(+$P(GMPL1,U,15):"/HNC",1:"")
"RTN","ORQQPL3",79,0)
 . S MST=$S(+$P(GMPL1,U,16):"/MST",1:"")
"RTN","ORQQPL3",80,0)
 . S CV=$S(+$P(GMPL1,U,17):"/CV",1:"")
"RTN","ORQQPL3",81,0)
 . S SHD=$S(+$P(GMPL1,U,18):"/SHD",1:"")
"RTN","ORQQPL3",82,0)
 . S SCCOND=SC_AO_IR_ENV_HNC_MST_CV_SHD
"RTN","ORQQPL3",83,0)
 . S LOC=$P(GMPL1,U,8)
"RTN","ORQQPL3",84,0)
 . S DTREC=$P(GMPL1,U,9)
"RTN","ORQQPL3",85,0)
 . S LT=""
"RTN","ORQQPL3",86,0)
 . I LOC'="" S LT=$P($G(^SC(LOC,0)),"^",3),LOC=LOC_";"_$P($G(^SC(LOC,0)),U,1)
"RTN","ORQQPL3",87,0)
 . S PROV=$P(GMPL1,U,5) ; responsible provider
"RTN","ORQQPL3",88,0)
 . I PROV'="" S PROV=PROV_";"_$P($G(^VA(200,PROV,0)),U,1)
"RTN","ORQQPL3",89,0)
 . S SERV=$P(GMPL1,U,6)
"RTN","ORQQPL3",90,0)
 . I SERV=0 S SERV="" ; not sure how it gets set to 0, but need consistency in GUI
"RTN","ORQQPL3",91,0)
 . I SERV'="" S SERV=SERV_";"_$P($G(^DIC(49,SERV,0)),U,1)
"RTN","ORQQPL3",92,0)
 . S SP=""
"RTN","ORQQPL3",93,0)
 . F I=11,12,13 S:$P(GMPL1,U,I) SP=SP_$S(I=11:"A",I=12:"I",1:"P")
"RTN","ORQQPL3",94,0)
 . S PRIO=$P(GMPL1,U,14)
"RTN","ORQQPL3",95,0)
 . S LIN=IFN_U_ST_U_$$PROBTEXT^GMPLX(IFN)_U_ICD_U_ONSET
"RTN","ORQQPL3",96,0)
 . S LIN=LIN_U_LASTMOD_U_SC_U_SP_U_$P(GMPL1,U,2)
"RTN","ORQQPL3",97,0)
 . S LIN=LIN_U_LOC_U_LT_U_PROV_U_SERV_U_PRIO_U_HASCMT_U_DTREC_U_SCCOND_U_INACT_U_ICDD_U_ORPLCSYS
"RTN","ORQQPL3",98,0)
 . S GMPL(CNT)=LIN
"RTN","ORQQPL3",99,0)
 S GMPL(0)=CNT
"RTN","ORQQPL3",100,0)
 Q
"RTN","ORQQPL3",101,0)
 ;
"RTN","ORQQPL3",102,0)
 ;
"RTN","ORQQPL3",103,0)
 ;------------------------ GET LIST OF DELETED PROBLEMS -----------------------------
"RTN","ORQQPL3",104,0)
 ;
"RTN","ORQQPL3",105,0)
DELLIST(RETURN,GMPDFN) ; GET LIST OF DELETED PROBLEMS
"RTN","ORQQPL3",106,0)
 ; see GETPLIST^GMPLMGR1 and LIST^GMPUTL2
"RTN","ORQQPL3",107,0)
 N S,I
"RTN","ORQQPL3",108,0)
 S I=0,S=""
"RTN","ORQQPL3",109,0)
 F  S S=$O(^AUPNPROB("ACTIVE",GMPDFN,S)) Q:S=""  D
"RTN","ORQQPL3",110,0)
 . N IFN,L0,L1,L800,L802,SCT,ST,TXT,ICD,ONSET,MOD,SC,SP,LOC,LT,PROV,SERV,PRIO,HASCMT,DTREC
"RTN","ORQQPL3",111,0)
 . N SCCOND,AO,IR,ENV,HNC,MST,CV,SHD,INACT,ORPLCSYS,ICDD,ORDTINT
"RTN","ORQQPL3",112,0)
 . S IFN=""
"RTN","ORQQPL3",113,0)
 . F  S IFN=$O(^AUPNPROB("ACTIVE",+GMPDFN,S,IFN)) Q:IFN=""  D
"RTN","ORQQPL3",114,0)
 .. I $P($G(^AUPNPROB(IFN,1)),U,2)="H" D
"RTN","ORQQPL3",115,0)
 ... S L0=$G(^AUPNPROB(IFN,0))
"RTN","ORQQPL3",116,0)
 ... S L800=$G(^AUPNPROB(IFN,800)),SCT=$P(L800,U)
"RTN","ORQQPL3",117,0)
 ... S L802=$G(^AUPNPROB(IFN,802))
"RTN","ORQQPL3",118,0)
 ... Q:L0=""
"RTN","ORQQPL3",119,0)
 ... S (ICDD,INACT)=""
"RTN","ORQQPL3",120,0)
 ... S L1=$G(^AUPNPROB(IFN,1))
"RTN","ORQQPL3",121,0)
 ... S ST=$P(L0,U,12)
"RTN","ORQQPL3",122,0)
 ... S TXT=$$PROBTEXT^GMPLX(IFN)
"RTN","ORQQPL3",123,0)
 ... S ORDTINT=$S(+$P(L802,U,1):$P(L802,U,1),1:$P(L0,U,8))
"RTN","ORQQPL3",124,0)
 ... S ORPLCSYS=$S($P(L802,U,2)]"":$P(L802,U,2),1:$$SAB^ICDEX($$CSI^ICDEX(80,+L0),ORDTINT))
"RTN","ORQQPL3",125,0)
 ... S ICD=$P($$ICDDATA^ICDXCODE(ORPLCSYS,+L0,ORDTINT,"I"),U,2)
"RTN","ORQQPL3",126,0)
 ... I '+$$STATCHK^ICDXCODE($$CSI^ICDEX(80,+L0),ICD,DT) S INACT="#"
"RTN","ORQQPL3",127,0)
 ... I +SCT'>0,(+ICD>0) S ICDD=$$ICDDESC^GMPLUTL2(ICD,DT,ORPLCSYS)
"RTN","ORQQPL3",128,0)
 ... S ONSET=$P(L0,U,13)
"RTN","ORQQPL3",129,0)
 ... S MOD=$P(L0,U,3)
"RTN","ORQQPL3",130,0)
 ... S SC=$S(+$P(L1,U,10):"SC",$P(L1,U,10)=0:"NSC",1:"")
"RTN","ORQQPL3",131,0)
 ... S AO=$S(+$P(L1,U,11):"/AO",1:"")
"RTN","ORQQPL3",132,0)
 ... S IR=$S(+$P(L1,U,12):"/IR",1:"")
"RTN","ORQQPL3",133,0)
 ... S ENV=$S(+$P(L1,U,13):"/EC",1:"")
"RTN","ORQQPL3",134,0)
 ... S HNC=$S(+$P(L1,U,15):"/HNC",1:"")
"RTN","ORQQPL3",135,0)
 ... S MST=$S(+$P(L1,U,16):"/MST",1:"")
"RTN","ORQQPL3",136,0)
 ... S CV=$S(+$P(L1,U,17):"/CV",1:"")
"RTN","ORQQPL3",137,0)
 ... S SHD=$S(+$P(L1,U,18):"/SHD",1:"")
"RTN","ORQQPL3",138,0)
 ... S SCCOND=SC_AO_IR_ENV_HNC_MST_CV_SHD
"RTN","ORQQPL3",139,0)
 ... S SP=$$GETSP
"RTN","ORQQPL3",140,0)
 ... S LOC=$P(L1,U,8)
"RTN","ORQQPL3",141,0)
 ... S LT=""
"RTN","ORQQPL3",142,0)
 ... I LOC'="" S LT=$P($G(^SC(LOC,0)),"^",3)
"RTN","ORQQPL3",143,0)
 ... S PROV=$P(L1,U,5) ; responsible provider
"RTN","ORQQPL3",144,0)
 ... S SERV=$P(L1,U,6)
"RTN","ORQQPL3",145,0)
 ... S PRIO=$P(L1,U,14)
"RTN","ORQQPL3",146,0)
 ... S HASCMT=($D(^AUPNPROB(IFN,11,0))>0)
"RTN","ORQQPL3",147,0)
 ... S DTREC=$P(L1,U,9)
"RTN","ORQQPL3",148,0)
 ... S I=I+1
"RTN","ORQQPL3",149,0)
 ... S RETURN(I)=IFN_U_ST_U_TXT_U_ICD_U_ONSET
"RTN","ORQQPL3",150,0)
 ... S RETURN(I)=RETURN(I)_U_MOD_U_SC_U_SP_U_$P(L1,U,2)
"RTN","ORQQPL3",151,0)
 ... S RETURN(I)=RETURN(I)_U_LOC_U_LT_U_PROV_U_SERV
"RTN","ORQQPL3",152,0)
 ... S RETURN(I)=RETURN(I)_U_PRIO_U_HASCMT_U_DTREC_U_SCCOND_U_INACT_U_ICDD_U_ORPLCSYS
"RTN","ORQQPL3",153,0)
 S RETURN(0)=I
"RTN","ORQQPL3",154,0)
 Q
"RTN","ORQQPL3",155,0)
 ;
"RTN","ORQQPL3",156,0)
GETSP() ; GET EXPOSURES
"RTN","ORQQPL3",157,0)
 N I
"RTN","ORQQPL3",158,0)
 S SP=""
"RTN","ORQQPL3",159,0)
 F I=11,12,13 S:$P(L1,U,I) SP=SP_$S(I=11:"A",I=12:"I",1:"P")
"RTN","ORQQPL3",160,0)
 Q SP
"RTN","ORQQPL3",161,0)
 ;
"RTN","ORQQPL3",162,0)
 ; adapted from ^GMPLBLD3 ;9/96
"RTN","ORQQPL3",163,0)
 ;
"RTN","ORQQPL3",164,0)
 ; ----------------------- GET USER PROBLEM CATEGORIES --------------
"RTN","ORQQPL3",165,0)
 ;
"RTN","ORQQPL3",166,0)
CAT(TMP,ORDUZ,CLIN) ; Get user category list
"RTN","ORQQPL3",167,0)
 N GSEQ,GCNT,GROUP,HDR,IFN,LCNT,ITEM,TG,GMPLSLST
"RTN","ORQQPL3",168,0)
 ; S TG=$NAME(^TMP("GMPLMENU",$J)) ; put list in global for testing
"RTN","ORQQPL3",169,0)
 S TG=$NAME(TMP) ; put list in local
"RTN","ORQQPL3",170,0)
 K @TG
"RTN","ORQQPL3",171,0)
 S (GSEQ,GCNT,LCNT)=0
"RTN","ORQQPL3",172,0)
 ;
"RTN","ORQQPL3",173,0)
 S GMPLSLST=$$GETUSLST(DUZ,CLIN) ; get approp list for user
"RTN","ORQQPL3",174,0)
 ; Build multiple of category\problems
"RTN","ORQQPL3",175,0)
 ; Iterate categories
"RTN","ORQQPL3",176,0)
 F  S GSEQ=$O(^GMPL(125.1,"C",+GMPLSLST,GSEQ)) Q:GSEQ'>0  D
"RTN","ORQQPL3",177,0)
 . S IFN=$O(^GMPL(125.1,"C",+GMPLSLST,GSEQ,0)) Q:IFN'>0
"RTN","ORQQPL3",178,0)
 . S ITEM=$G(^GMPL(125.1,IFN,0))
"RTN","ORQQPL3",179,0)
 . S GROUP=+$P(ITEM,U,3)
"RTN","ORQQPL3",180,0)
 . S HDR=GROUP_U_$P(ITEM,U,4,5)
"RTN","ORQQPL3",181,0)
 . S GCNT=GCNT+1
"RTN","ORQQPL3",182,0)
 . S @TG@(GCNT)=HDR ; put category into temp global
"RTN","ORQQPL3",183,0)
 Q
"RTN","ORQQPL3",184,0)
 ;
"RTN","ORQQPL3",185,0)
GETUSLST(ORDUZ,CLIN) ; GET AN APPROPRIATE CATEGORY LIST FOR THE USER
"RTN","ORQQPL3",186,0)
 N GMPLSLST
"RTN","ORQQPL3",187,0)
 S GMPLSLST=$P($G(^VA(200,DUZ,125)),U,2)
"RTN","ORQQPL3",188,0)
 ;I 'GMPLSLST D
"RTN","ORQQPL3",189,0)
 I 'GMPLSLST,CLIN,$D(^GMPL(125,"C",+CLIN)) S GMPLSLST=$O(^(+CLIN,0))
"RTN","ORQQPL3",190,0)
 ;. S GMPLSLST=$O(^VA(200,DUZ,+CLIN,0))  ;$O(^(+CLIN,0))
"RTN","ORQQPL3",191,0)
 Q GMPLSLST
"RTN","ORQQPL3",192,0)
 ;
"RTN","ORQQPL3",193,0)
 ;----------------------- USER PROBLEM LIST --------------------------
"RTN","ORQQPL3",194,0)
 ;
"RTN","ORQQPL3",195,0)
PROB(TMP,GROUP) ; Get user problem list for given group
"RTN","ORQQPL3",196,0)
 N PSEQ,PCNT,IFN,ITEM,TG,CODE,TEXT,ORPLCSYS,ORPLCPTR
"RTN","ORQQPL3",197,0)
 ; S TG=$NAME(^TMP("GMPLMENU",$J)) ; put list in global for testing
"RTN","ORQQPL3",198,0)
 S TG=$NAME(TMP) ; put list in local
"RTN","ORQQPL3",199,0)
 K @TG
"RTN","ORQQPL3",200,0)
 S LCNT=0
"RTN","ORQQPL3",201,0)
 ;
"RTN","ORQQPL3",202,0)
 ; iterate through problems in category
"RTN","ORQQPL3",203,0)
 S (PSEQ,PCNT)=0
"RTN","ORQQPL3",204,0)
 F  S PSEQ=$O(^GMPL(125.12,"C",GROUP,PSEQ)) Q:PSEQ'>0  D
"RTN","ORQQPL3",205,0)
 . N ORI,ORQUIT S ORQUIT=0
"RTN","ORQQPL3",206,0)
 . S IFN=$O(^GMPL(125.12,"C",GROUP,PSEQ,0)) Q:IFN'>0
"RTN","ORQQPL3",207,0)
 . S ITEM=$G(^GMPL(125.12,IFN,0))
"RTN","ORQQPL3",208,0)
 . S TEXT=$P(ITEM,U,4)
"RTN","ORQQPL3",209,0)
 . ; SEE DD for GMPL(125.12,4 :
"RTN","ORQQPL3",210,0)
 . ; "...code which is to be displayed... generally assumed to be ICD"
"RTN","ORQQPL3",211,0)
 . S CODE=$P(ITEM,U,5)
"RTN","ORQQPL3",212,0)
 . ; if any codes inactive, exclude from list
"RTN","ORQQPL3",213,0)
 . S ORPLCPTR=$S($L(CODE):+$$CODECS^ICDEX($P(CODE,U),80,DT),1:""),ORPLCSYS=$S($L(CODE):$$SAB^ICDEX(ORPLCPTR,DT),1:"ICD")
"RTN","ORQQPL3",214,0)
 . F ORI=1:1:$L(CODE,"/") I '+$$STATCHK^ICDXCODE(ORPLCPTR,$P(CODE,"/",ORI),DT) S ORQUIT=1 Q
"RTN","ORQQPL3",215,0)
 . I +ORQUIT Q
"RTN","ORQQPL3",216,0)
 . S PCNT=PCNT+1
"RTN","ORQQPL3",217,0)
 . ; RETURN:
"RTN","ORQQPL3",218,0)
 . ; PROBLEM^DISPLAY TEXT^CODE^CODE IFN
"RTN","ORQQPL3",219,0)
 . S @TG@(PCNT)=$P(ITEM,U,3,4)_U_"("_$P($$CODECS^ICDEX(CODE,80,DT),U,2)_" "_$G(CODE)_")"_U_+$$ICDDATA^ICDXCODE(ORPLCSYS,$P(CODE,"/"),DT,"E")_U_$P(ITEM,U,6,7)
"RTN","ORQQPL3",220,0)
 Q
"RTN","ORQQPL3",221,0)
 ;
"RTN","ORQQPL3",222,0)
 ;------------------ Filter Providers ---------------------
"RTN","ORQQPL3",223,0)
 ;
"RTN","ORQQPL3",224,0)
GETRPRV(RETURN,INP) ; GET LIST OF RESPONSIBLE PROVIDERS FROM PRBLM LIST
"RTN","ORQQPL3",225,0)
 ; RETURN - aa list of responsible providers from which to select for filtering
"RTN","ORQQPL3",226,0)
 ; INP - array of problem list providers to select from
"RTN","ORQQPL3",227,0)
 ;
"RTN","ORQQPL3",228,0)
 N S
"RTN","ORQQPL3",229,0)
 S S=""
"RTN","ORQQPL3",230,0)
 F I=1:1 S S=$O(INP(S)) Q:S=""  D
"RTN","ORQQPL3",231,0)
 . I INP(S)'="",$G(^VA(200,INP(S),0))'="" D  Q  ; get next
"RTN","ORQQPL3",232,0)
 .. S RETURN(I)=INP(S)_U_$P(^VA(200,INP(S),0),U)
"RTN","ORQQPL3",233,0)
 S RETURN(0)="-1"_U_"<None recorded>" ; return empty provider
"RTN","ORQQPL3",234,0)
 Q
"RTN","ORQQPL3",235,0)
 ;
"RTN","ORQQPL3",236,0)
 ;------------------- GET FILTERED CLINIC LIST ------------------------
"RTN","ORQQPL3",237,0)
 ;
"RTN","ORQQPL3",238,0)
GETCLIN(RETURN,INP) ; Get FILTERED LIST OF CLINICS
"RTN","ORQQPL3",239,0)
 ; RETURN NAMES FOR LIST OF CLINICS PASSED IN
"RTN","ORQQPL3",240,0)
 N I,S
"RTN","ORQQPL3",241,0)
 S S=""
"RTN","ORQQPL3",242,0)
 F I=1:1 S S=$O(INP(S)) Q:S=""  D
"RTN","ORQQPL3",243,0)
 . I INP(S)'="",$G(^SC(INP(S),0))'="" D  Q  ; get next
"RTN","ORQQPL3",244,0)
 .. S RETURN(I)=INP(S)_U_$P(^SC(INP(S),0),U,1)
"RTN","ORQQPL3",245,0)
 ;. S RETURN(I)="-1"_U_"None" ; return empty location
"RTN","ORQQPL3",246,0)
 Q
"RTN","ORQQPL3",247,0)
 ;
"RTN","ORQQPL3",248,0)
GETSRVC(RETURN,INP) ; GET FILTERED LIST OF INPATIENT SERVICES
"RTN","ORQQPL3",249,0)
 ; RETURN NAMES FOR LIST OF IEN PASSED IN
"RTN","ORQQPL3",250,0)
 N I,S
"RTN","ORQQPL3",251,0)
 S S=""
"RTN","ORQQPL3",252,0)
 F I=1:1 S S=$O(INP(S)) Q:S=""  D
"RTN","ORQQPL3",253,0)
 . I INP(S)'="",$G(^DIC(49,INP(S),0))'="" D  Q  ; get next
"RTN","ORQQPL3",254,0)
 .. S RETURN(I)=INP(S)_U_$P(^DIC(49,INP(S),0),U,1)
"RTN","ORQQPL3",255,0)
 ;. S RETURN(I)="-1"_U_"None" ; return empty service
"RTN","ORQQPL3",256,0)
 Q
"RTN","ORQQPL4")
0^25^B12182023
"RTN","ORQQPL4",1,0)
ORQQPL4 ; ISL/JER/TC - Lexicon Look-up w/Synonyms ;03/21/14  12:40
"RTN","ORQQPL4",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**306,361**;Dec 17, 1997;Build 39
"RTN","ORQQPL4",3,0)
 ;
"RTN","ORQQPL4",4,0)
 ; DBIA 2950   LOOK^LEXA          ^TMP("LEXFND",$J)
"RTN","ORQQPL4",5,0)
 ; DBIA 1609   CONFIG^LEXSET      ^TMP("LEXSCH",$J)
"RTN","ORQQPL4",6,0)
 ;  ICR 5699   $$ICDDATA^ICDXCODE
"RTN","ORQQPL4",7,0)
 ;
"RTN","ORQQPL4",8,0)
 Q
"RTN","ORQQPL4",9,0)
LEX(LST,X,VIEW,ORDATE,ORINCSYN) ; return list after lexicon lookup
"RTN","ORQQPL4",10,0)
 ; Call with: X           (Required) The search text entered by the user
"RTN","ORQQPL4",11,0)
 ;            [VIEW]      (Optional) The Lexicon VIEW parameter (Defaults to
"RTN","ORQQPL4",12,0)
 ;                                   Problem List Subset (i.e., "PLS")
"RTN","ORQQPL4",13,0)
 ;            [ORDATE]    (Optional) the date of interest (Defaults to TODAY)
"RTN","ORQQPL4",14,0)
 ;            [ORINCSYN]  (Optional) Boolean flag specifying whether or not to
"RTN","ORQQPL4",15,0)
 ;                                   include synonyms for SNOMED CT Concepts
"RTN","ORQQPL4",16,0)
 ;                                   (Defaults to 0 (FALSE))
"RTN","ORQQPL4",17,0)
 ;
"RTN","ORQQPL4",18,0)
 ;   Returns: LST=gvn of ^TMP("ORLEX",$J), which contains search result set as:
"RTN","ORQQPL4",19,0)
 ;            ^TMP("ORLEX",$J,1..n)=LEXIEN^PREFTEXT^ICDCODE(S)^ICDIEN^CODESYS^CONCEPTID^DESIGID^ICDVER^PARENTSUBSCRIPT
"RTN","ORQQPL4",20,0)
 ;            ^TMP("ORLEX",$J,n+1)="<n> matches found"
"RTN","ORQQPL4",21,0)
 ;
"RTN","ORQQPL4",22,0)
 N LEX,ILST,I,IEN,APP
"RTN","ORQQPL4",23,0)
 S APP="GMPX",LST=$NA(^TMP("ORLEX",$J)) K @LST
"RTN","ORQQPL4",24,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORQQPL4",25,0)
 S:'$L($G(VIEW)) VIEW="PLS"
"RTN","ORQQPL4",26,0)
 S ORINCSYN=+$G(ORINCSYN)
"RTN","ORQQPL4",27,0)
 I $S(X?.1A2.3N.1".".2N:1,X?.1A2.3N1"+":1,1:0) D  Q
"RTN","ORQQPL4",28,0)
 . S @LST@(1)="icd^Searching by code on the Problems Tab supports SNOMED CT, but not ICD."
"RTN","ORQQPL4",29,0)
 . S @LST@(2)="Please try a different search"
"RTN","ORQQPL4",30,0)
 D CONFIG^LEXSET(APP,VIEW,ORDATE)
"RTN","ORQQPL4",31,0)
 ; call LOOK^LEXA to execute the search as defined by the call to CONFIG^LEXSET
"RTN","ORQQPL4",32,0)
 D LOOK^LEXA(X,,1,,ORDATE)
"RTN","ORQQPL4",33,0)
 I '$D(LEX("LIST",1)) D  G LEXX
"RTN","ORQQPL4",34,0)
 . S:X?.N @LST@(1)="Code search failed"
"RTN","ORQQPL4",35,0)
 S ILST=0
"RTN","ORQQPL4",36,0)
 S @LST@(1)=$$LEXXFRM(LEX("LIST",1),ORDATE,APP),ILST=1
"RTN","ORQQPL4",37,0)
 D:ORINCSYN SYNONYMS(.LST,.ILST,"SCT",$P(@LST@(1),U,6),ORDATE)
"RTN","ORQQPL4",38,0)
 S (I,IEN)=""
"RTN","ORQQPL4",39,0)
 F  S I=$O(^TMP("LEXFND",$J,I)) Q:I=""  D  ;DBIA 2950
"RTN","ORQQPL4",40,0)
 .F  S IEN=$O(^TMP("LEXFND",$J,I,IEN)) Q:IEN=""  D
"RTN","ORQQPL4",41,0)
 ..N TXT,ELEMENT S TXT=^TMP("LEXFND",$J,I,IEN)
"RTN","ORQQPL4",42,0)
 ..S ELEMENT=IEN_U_TXT
"RTN","ORQQPL4",43,0)
 ..S ELEMENT=$$LEXXFRM(ELEMENT,ORDATE,APP)
"RTN","ORQQPL4",44,0)
 ..S ILST=ILST+1,@LST@(ILST)=ELEMENT
"RTN","ORQQPL4",45,0)
 ..D:ORINCSYN SYNONYMS(.LST,.ILST,"SCT",$P(ELEMENT,U,6),ORDATE)
"RTN","ORQQPL4",46,0)
 I '$D(@LST@(1)) S @LST@(1)="No matches found"
"RTN","ORQQPL4",47,0)
 E  S @LST@(ILST+1)=ILST_$S(ILST=1:" match",1:" matches")_" found"
"RTN","ORQQPL4",48,0)
LEXX K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J),^TMP("LEXSCH",$J),^TMP("LEXLE",$J)
"RTN","ORQQPL4",49,0)
 Q
"RTN","ORQQPL4",50,0)
LEXXFRM(ORX,ORDATE,ORAPP) ; Transform text for SCT look-up
"RTN","ORQQPL4",51,0)
 N ORLEX,ORY,ORICD,ORSCT,ORTXT,ORCODSYS,ORCCODE,ORDCODE
"RTN","ORQQPL4",52,0)
 S ORLEX=$P(ORX,U),ORTXT=$P(ORX,U,2),(ORCCODE,ORCODSYS)=""
"RTN","ORQQPL4",53,0)
 I (ORTXT["("),(ORTXT[")") D
"RTN","ORQQPL4",54,0)
 . S ORCODSYS=$RE($P($P($RE(ORTXT),"("),")",2))
"RTN","ORQQPL4",55,0)
 . S ORCCODE=$RE($P($RE(ORCODSYS)," ")),ORCODSYS=$RE($P($RE(ORCODSYS)," ",2,99))
"RTN","ORQQPL4",56,0)
 . S ORTXT=$$TRIM^XLFSTR($RE($P($RE(ORTXT),"(",2,99)))
"RTN","ORQQPL4",57,0)
 S ORY=$$SETELEM(ORLEX,ORTXT,ORCODSYS,ORCCODE,ORDATE)
"RTN","ORQQPL4",58,0)
 Q ORY
"RTN","ORQQPL4",59,0)
SYNONYMS(LST,ILST,ORCSYS,ORCCODE,ORDT) ; Get synonyms for expression
"RTN","ORQQPL4",60,0)
 N ORSYN,ORI,ORDAD S ORDT=$G(ORDT,DT),ORDAD=ILST
"RTN","ORQQPL4",61,0)
 D GETSYN^LEXTRAN1(ORCSYS,ORCCODE,ORDT,"ORSYN",1)
"RTN","ORQQPL4",62,0)
 S ORI=0 F  S ORI=$O(ORSYN("S",ORI)) Q:+ORI'>0  D
"RTN","ORQQPL4",63,0)
 . N ELEMENT,TXT,IEN,ORDCODE
"RTN","ORQQPL4",64,0)
 . S IEN=$P(ORSYN("S",ORI),U,2),TXT=$P(ORSYN("S",ORI),U)
"RTN","ORQQPL4",65,0)
 . S ELEMENT=$$SETELEM(IEN,TXT,"SNOMED CT",ORCCODE,ORDT)_U_ORDAD
"RTN","ORQQPL4",66,0)
 . S ILST=ILST+1,@LST@(ILST)=ELEMENT
"RTN","ORQQPL4",67,0)
 Q
"RTN","ORQQPL4",68,0)
SETELEM(ORLEX,ORTXT,ORCODSYS,ORCCODE,ORDATE) ; Set List Element
"RTN","ORQQPL4",69,0)
 N ORY,ORDCODE,ORIMPDT,ORICD,ORICDID
"RTN","ORQQPL4",70,0)
 S ORIMPDT=$$IMPDATE^LEXU("10D")
"RTN","ORQQPL4",71,0)
 S ORDCODE=$$GETDES^LEXTRAN1("SCT",ORTXT,ORDATE)
"RTN","ORQQPL4",72,0)
 S ORDCODE=$S(+ORDCODE=1:$P(ORDCODE,U,2),1:"")
"RTN","ORQQPL4",73,0)
 S ORICD=$$GETDX^ORQQPL1(ORCCODE,ORCODSYS,ORDATE)
"RTN","ORQQPL4",74,0)
 S ORICDID=+$$ICDDATA^ICDXCODE("DIAG",$P(ORICD,"/"),ORDATE,"E")
"RTN","ORQQPL4",75,0)
 S ORY=ORLEX_U_ORTXT_U_ORICD_U_ORICDID_U_ORCODSYS_U_ORCCODE_U_ORDCODE
"RTN","ORQQPL4",76,0)
 I (ORCODSYS["SNOMED")!(ORCODSYS["VHAT") D
"RTN","ORQQPL4",77,0)
 .S ORY=ORY_U_$S(ORDATE<ORIMPDT:"ICD-9-CM",1:"ICD-10-CM")
"RTN","ORQQPL4",78,0)
 Q ORY
"RTN","ORWDBA1")
0^16^B58940047
"RTN","ORWDBA1",1,0)
ORWDBA1 ; SLC OIFO/DKK/GSS - Order Dialogs Billing Awareness ;12/04/12  09:39
"RTN","ORWDBA1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**190,195,229,215,243,361**;Dec 17, 1997;Build 39
"RTN","ORWDBA1",3,0)
 ;
"RTN","ORWDBA1",4,0)
 ; External References
"RTN","ORWDBA1",5,0)
 ;   DBIA    406  CL^SDCO21 - call to determine Treatment Factors
"RTN","ORWDBA1",6,0)
 ;
"RTN","ORWDBA1",7,0)
 ;Ref to ^DIC(9.4 - DBIA ___
"RTN","ORWDBA1",8,0)
 ;BA refers to Billing Awareness Project
"RTN","ORWDBA1",9,0)
 ;CIDC refers to Clinical Indicator Data Capture (same project 3/10/2004)
"RTN","ORWDBA1",10,0)
 ;Treatment Factors (TxF) refer to SC,AO,IR,EC,MST,HNC,CV,SHD
"RTN","ORWDBA1",11,0)
 ;
"RTN","ORWDBA1",12,0)
GETORDX(Y,ORIEN) ; Retrieve Diagnoses for an order - RPC
"RTN","ORWDBA1",13,0)
 ; Input:
"RTN","ORWDBA1",14,0)
 ;   ORIEN    Order Internal ID#
"RTN","ORWDBA1",15,0)
 ; Output:
"RTN","ORWDBA1",16,0)
 ;   Y        Array of Diagnoses (Dx) - Y(#)=#^DxInt#^ICD9^DxDesc^TxF
"RTN","ORWDBA1",17,0)
 ; Variables used:
"RTN","ORWDBA1",18,0)
 ;   CT       Counter for # of Dx related to order
"RTN","ORWDBA1",19,0)
 ;   DXIEN    Dx internal ID
"RTN","ORWDBA1",20,0)
 ;   DXN      Internal (to ^OR(100)) sequence # for Dx storage
"RTN","ORWDBA1",21,0)
 ;   DXREC    Dx record from Order file
"RTN","ORWDBA1",22,0)
 ;   DXV      Dx description
"RTN","ORWDBA1",23,0)
 ;   ICD9     External ICD9 #
"RTN","ORWDBA1",24,0)
 ;   TXFACTRS Treatment Factors (TxF)
"RTN","ORWDBA1",25,0)
 ;
"RTN","ORWDBA1",26,0)
 N CT,DXIEN,DXN,DXREC,DXV,ICD9,ICDR,ORFMDAT,TXFACTRS
"RTN","ORWDBA1",27,0)
 S (CT,DXN)=0
"RTN","ORWDBA1",28,0)
 I '$G(^OR(100,ORIEN,0)) S Y=-1
"RTN","ORWDBA1",29,0)
 I '$D(^OR(100,ORIEN,5.1,1,0)) S Y=0
"RTN","ORWDBA1",30,0)
 E  D  S Y=CT
"RTN","ORWDBA1",31,0)
 . ; Get order date for CSV/CTD/HIPAA usage
"RTN","ORWDBA1",32,0)
 . S ORFMDAT=$$ORFMDAT^ORWDBA3(ORIEN)
"RTN","ORWDBA1",33,0)
 . ; Go through all Dx's for an order
"RTN","ORWDBA1",34,0)
 . F  S DXN=$O(^OR(100,ORIEN,5.1,DXN)) Q:DXN'?1N.N  D
"RTN","ORWDBA1",35,0)
 .. ; Get diagnosis record and IEN
"RTN","ORWDBA1",36,0)
 .. S DXREC=$G(^OR(100,ORIEN,5.1,DXN,0)),DXIEN=$P(DXREC,U)
"RTN","ORWDBA1",37,0)
 .. S ICDR=$$ICDDATA^ICDXCODE("DIAGNOSIS",$G(DXIEN),ORFMDAT)
"RTN","ORWDBA1",38,0)
 .. S DXV=$P(ICDR,U,4),ICD9=$P(ICDR,U,2)
"RTN","ORWDBA1",39,0)
 .. ; Convert internal to external Treatment Factors
"RTN","ORWDBA1",40,0)
 .. S TXFACTRS=$$TFGBLGUI(^OR(100,ORIEN,5.2))
"RTN","ORWDBA1",41,0)
 .. S CT=CT+1,Y(CT)=DXN_U_$G(DXIEN)_U_ICD9_U_DXV_U_TXFACTRS
"RTN","ORWDBA1",42,0)
 Q
"RTN","ORWDBA1",43,0)
 ;
"RTN","ORWDBA1",44,0)
SCLST(Y,DFN,ORLST) ; RPC for compiling appropriate TxF's
"RTN","ORWDBA1",45,0)
 ; RPC titled ORWDBA1 SCLST
"RTN","ORWDBA1",46,0)
 ;
"RTN","ORWDBA1",47,0)
 ;  Y       =    Returned value
"RTN","ORWDBA1",48,0)
 ;  DFN     =    Patient IEN
"RTN","ORWDBA1",49,0)
 ;  ORLST   =    List of orders
"RTN","ORWDBA1",50,0)
 ;
"RTN","ORWDBA1",51,0)
 ; call for BA/TF
"RTN","ORWDBA1",52,0)
 N GMRCPROS,ORD,ORI,ORPKG
"RTN","ORWDBA1",53,0)
 D CPLSTBA(.Y,DFN,.ORLST)
"RTN","ORWDBA1",54,0)
 Q
"RTN","ORWDBA1",55,0)
 ;
"RTN","ORWDBA1",56,0)
CPLSTBA(TEST,PTIFN,ORIFNS) ; set-up SC/TFs for BA
"RTN","ORWDBA1",57,0)
 ;
"RTN","ORWDBA1",58,0)
 ;  TEST    =  Returned value
"RTN","ORWDBA1",59,0)
 ;  PTIFN   =  Patient IEN
"RTN","ORWDBA1",60,0)
 ;  ORIFNS  =  List of orders
"RTN","ORWDBA1",61,0)
 ;
"RTN","ORWDBA1",62,0)
 S ORI=""
"RTN","ORWDBA1",63,0)
 ;
"RTN","ORWDBA1",64,0)
 ; define array of packages for which BA data collected (SC/CIs)
"RTN","ORWDBA1",65,0)
 ;  GMRC    =  Consult/Request Tracking (#128) - Prosthetics
"RTN","ORWDBA1",66,0)
 ;  LR      =  Lab Services (#26) - Lab
"RTN","ORWDBA1",67,0)
 ;  PSO     =  Outpt Pharmacy (#112) - Outpt Pharmacy (orig. Co-Pay)
"RTN","ORWDBA1",68,0)
 ;  RA      =  Radiology/Nuclear Medicine (#31) - Radiology
"RTN","ORWDBA1",69,0)
 ;
"RTN","ORWDBA1",70,0)
 S ORPKG(+$O(^DIC(9.4,"C","PSO",0)))=1
"RTN","ORWDBA1",71,0)
 ; See ISWITCH^ORWDBA7 for insurance/Ed switch, i.e., $$CIDC^IBBAPI
"RTN","ORWDBA1",72,0)
 ; Also check provider switch via 'OR BILLING AWARENESS BY USER'
"RTN","ORWDBA1",73,0)
 I $$BASTAT&$$CIDC^IBBAPI(DFN)&$$GET^XPAR(DUZ_";VA(200,","OR BILLING AWARENESS BY USER",1,"Q") F I=1:1 S ORPKG=$P("GMRC;LR;RA",";",I) Q:ORPKG=""  D
"RTN","ORWDBA1",74,0)
 . S ORPKG(+$O(^DIC(9.4,"C",ORPKG,0)))=1  ; ^DIC(9.4) is package file
"RTN","ORWDBA1",75,0)
 ;
"RTN","ORWDBA1",76,0)
 ; get Treatment Factors (TxF) for patient
"RTN","ORWDBA1",77,0)
 D SCPRE(.DR,DFN)
"RTN","ORWDBA1",78,0)
 ;
"RTN","ORWDBA1",79,0)
 ; set TxF's if order is for a package for which BA data is collected
"RTN","ORWDBA1",80,0)
 F  S ORI=$O(ORLST(ORI)) Q:'ORI  S ORD=+ORLST(ORI) D
"RTN","ORWDBA1",81,0)
 . I $G(^OR(100,ORD,0))="" Q
"RTN","ORWDBA1",82,0)
 . I $P($G(^OR(100,ORD,0)),U,14)="" Q
"RTN","ORWDBA1",83,0)
 . I $D(TEST(ORD))!'$D(ORPKG($P($G(^OR(100,ORD,0)),U,14))) Q
"RTN","ORWDBA1",84,0)
 . I $E($P(ORIFNS(ORI),";",2))>1 Q  ;canceled order (2) & ? (3)
"RTN","ORWDBA1",85,0)
 . S TEST(ORD)=ORLST(ORI)_DR
"RTN","ORWDBA1",86,0)
 Q
"RTN","ORWDBA1",87,0)
 ;
"RTN","ORWDBA1",88,0)
SCPRE(DR,DFN) ; Dialog validation, to ask BA questions
"RTN","ORWDBA1",89,0)
 ;
"RTN","ORWDBA1",90,0)
 ;  DR    =  return value
"RTN","ORWDBA1",91,0)
 ;  DFN   =  input patient IEN
"RTN","ORWDBA1",92,0)
 ;
"RTN","ORWDBA1",93,0)
 Q:$G(DFN)=""
"RTN","ORWDBA1",94,0)
 N CPNODE,CT,I,ORX,ORSDCARY,TF,X
"RTN","ORWDBA1",95,0)
 K ORSDCARY
"RTN","ORWDBA1",96,0)
 S (CPNODE,DR,ORX,TF)="",CT=0,X="T"
"RTN","ORWDBA1",97,0)
 ; Call API to acquire Treatment Factors in force
"RTN","ORWDBA1",98,0)
 D NOW^%DTC,CL^SDCO21(DFN,%,"",.ORSDCARY)  ;DBIA 406
"RTN","ORWDBA1",99,0)
 ; Retrved array order: AO,IR,SC,EC,MST,HNC,CV,SHD e.g., ORSDCARY(3) for SC
"RTN","ORWDBA1",100,0)
 ; Convert to ^OR/CPRS GUI order: SC,MST,AO,IR,EC,HNC,CV,SHD
"RTN","ORWDBA1",101,0)
 F I=3,5,1,2,4,6,7,8 S TF=0,CT=CT+1 S:$D(ORSDCARY(I)) TF=1 S $P(CPNODE,U,CT)=TF
"RTN","ORWDBA1",102,0)
 ;
"RTN","ORWDBA1",103,0)
 S X=$S($P(CPNODE,U)=1:"SC",1:""),DR=$S($L(X):DR_U_X,1:DR)
"RTN","ORWDBA1",104,0)
 S X=$S($P(CPNODE,U,2)=1:"MST",1:""),DR=$S($L(X):DR_U_X,1:DR)
"RTN","ORWDBA1",105,0)
 S X=$S($P(CPNODE,U,3)=1:"AO",1:""),DR=$S($L(X):DR_U_X,1:DR)
"RTN","ORWDBA1",106,0)
 S X=$S($P(CPNODE,U,4)=1:"IR",1:""),DR=$S($L(X):DR_U_X,1:DR)
"RTN","ORWDBA1",107,0)
 S X=$S($P(CPNODE,U,5)=1:"EC",1:""),DR=$S($L(X):DR_U_X,1:DR)
"RTN","ORWDBA1",108,0)
 S X=$S($P(CPNODE,U,6)=1:"HNC",1:""),DR=$S($L(X):DR_U_X,1:DR)
"RTN","ORWDBA1",109,0)
 S X=$S($P(CPNODE,U,7)=1:"CV",1:""),DR=$S($L(X):DR_U_X,1:DR)
"RTN","ORWDBA1",110,0)
 S X=$S($P(CPNODE,U,8)=1:"SHD",1:""),DR=$S($L(X):DR_U_X,1:DR)
"RTN","ORWDBA1",111,0)
 ;
"RTN","ORWDBA1",112,0)
 ; TxF's for patient (TxF's include SC,AO,IR,EC,MST,HNC,CV,SHD) where
"RTN","ORWDBA1",113,0)
 ;  SC      =  Service Connected
"RTN","ORWDBA1",114,0)
 ;  AO      =  Agent Orange
"RTN","ORWDBA1",115,0)
 ;  IR      =  Ionizing Radiation
"RTN","ORWDBA1",116,0)
 ;  EC      =  Environmental Contaminants
"RTN","ORWDBA1",117,0)
 ;  MST     =  Military Sexual Trauma
"RTN","ORWDBA1",118,0)
 ;  HNC     =  Head and Neck Cancer
"RTN","ORWDBA1",119,0)
 ;  CV      =  Combat Veteran
"RTN","ORWDBA1",120,0)
 ;  SHD     =  Shipboard Disability
"RTN","ORWDBA1",121,0)
 F I="SC","AO","IR","EC","MST","HNC","CV","SHD" D
"RTN","ORWDBA1",122,0)
 . I $D(ORX(I)) S DR=DR_U_I_$S($L(ORX(I)):";"_ORX(I),1:"")
"RTN","ORWDBA1",123,0)
 Q
"RTN","ORWDBA1",124,0)
 ;
"RTN","ORWDBA1",125,0)
ORPKGTYP(Y,ORLST) ; Build BA supported packages array
"RTN","ORWDBA1",126,0)
 ; GMRC=Prosthetics, LR=Lab, PSO=Pharmacy, RA=Radiology
"RTN","ORWDBA1",127,0)
 N OIREC,OIV,OIVN
"RTN","ORWDBA1",128,0)
 ;
"RTN","ORWDBA1",129,0)
 F I=1:1 S ORPKG=$P("GMRC;LR;PSO;RA",";",I) Q:ORPKG=""  D
"RTN","ORWDBA1",130,0)
 . S ORPKG(+$O(^DIC(9.4,"C",ORPKG,0)))=ORPKG  ; ^DIC(9.4) is package file
"RTN","ORWDBA1",131,0)
 ;
"RTN","ORWDBA1",132,0)
 S GMRCPROS=+$O(^DIC(9.4,"C","GMRC",0))
"RTN","ORWDBA1",133,0)
 ; see if order is for a package which BA supports
"RTN","ORWDBA1",134,0)
 D ORPKG1(.Y,.ORLST)
"RTN","ORWDBA1",135,0)
 Q
"RTN","ORWDBA1",136,0)
 ;
"RTN","ORWDBA1",137,0)
ORPKG1(TEST,ORIFNS) ; Order for package BA supports?  TEST(ORI)=1 is YES
"RTN","ORWDBA1",138,0)
 S U="^",ORI=""
"RTN","ORWDBA1",139,0)
 F I=1:1:5 S OIV(I)=$P("PROSTHETICS REQUEST^EYEGLASS REQUEST^CONTACT LENS REQUEST^HOME OXYGEN REQUEST^AMPUTEE/PROSTHETICS CLINIC",U,I)
"RTN","ORWDBA1",140,0)
 F  S ORI=$O(ORIFNS(ORI)) Q:'ORI  S ORD=+ORIFNS(ORI),TEST(ORI)=0 D
"RTN","ORWDBA1",141,0)
 . I ORD=0 Q  ;document/note not an order
"RTN","ORWDBA1",142,0)
 . ;I ORD="CONSULT_DX" S TEST(ORI)=1 Q  ;consult dx prev entered
"RTN","ORWDBA1",143,0)
 . I '$D(^OR(100,ORD,0)) Q  ;invalid order #
"RTN","ORWDBA1",144,0)
 . I $P(^OR(100,ORD,0),U,14)'?1N.N Q  ;invalid order # or entry
"RTN","ORWDBA1",145,0)
 . I $E($P(ORIFNS(ORI),";",2))>1 Q  ;canceled order (2) & ? (3)
"RTN","ORWDBA1",146,0)
 . I $D(^OR(100,ORD,5.1,1,0)) S TEST(ORI)=1 Q  ;
"RTN","ORWDBA1",147,0)
 . I '$D(ORPKG($P(^OR(100,ORD,0),U,14))) Q  ;pkg not supported
"RTN","ORWDBA1",148,0)
 . ;      IPt OPt (ask BA questions?)
"RTN","ORWDBA1",149,0)
 . ; Pros  Y   Y   GMRC
"RTN","ORWDBA1",150,0)
 . ; Rad   Y   Y   RA
"RTN","ORWDBA1",151,0)
 . ; Lab   N   Y   LR
"RTN","ORWDBA1",152,0)
 . ; Phrm  Y   Y   PSO
"RTN","ORWDBA1",153,0)
 . ; Pt Class = 'I' or 'O' in ^OR
"RTN","ORWDBA1",154,0)
 . I $P(^OR(100,ORD,0),U,12)="I"&(ORPKG($P(^OR(100,ORD,0),U,14))="LR") Q
"RTN","ORWDBA1",155,0)
 . I $P(^OR(100,ORD,0),U,14)=GMRCPROS D  Q  ;check for Pros consult order
"RTN","ORWDBA1",156,0)
 .. S OIREC=$G(^ORD(101.43,$G(^OR(100,ORD,4.5,1,1)),0)),OIVN=""
"RTN","ORWDBA1",157,0)
 .. F  S OIVN=$O(OIV(OIVN)) Q:OIVN=""  I OIV(OIVN)=$E($P(OIREC,U),1,$L(OIV(OIVN))) S TEST(ORI)=1 Q
"RTN","ORWDBA1",158,0)
 . S TEST(ORI)=1  ;order is for a supported pkg (also note Pros ck above)
"RTN","ORWDBA1",159,0)
 Q
"RTN","ORWDBA1",160,0)
 ;
"RTN","ORWDBA1",161,0)
BASTATUS(Y) ;RPC to retrieve the status of the Billing Awareness software
"RTN","ORWDBA1",162,0)
 ;   Y  =  Returned Value (1=BA usable, 0=BA not-usable)
"RTN","ORWDBA1",163,0)
 ; Check for installation of CIDC ancillary build
"RTN","ORWDBA1",164,0)
 S Y=$D(^XPD(9.7,"B","PX CLINICAL INDICATOR DATA CAPTURE 1.0"))
"RTN","ORWDBA1",165,0)
 Q:'Y
"RTN","ORWDBA1",166,0)
 ; Check if system parameter switch set
"RTN","ORWDBA1",167,0)
 S Y=$$CHKPS1^ORWDBA5
"RTN","ORWDBA1",168,0)
 Q
"RTN","ORWDBA1",169,0)
 ;
"RTN","ORWDBA1",170,0)
BASTAT() ; Internal version of BASTATUS
"RTN","ORWDBA1",171,0)
 ; Returns 0 if disabled or 1 if enabled
"RTN","ORWDBA1",172,0)
 Q $$CHKPS1^ORWDBA5
"RTN","ORWDBA1",173,0)
 ;
"RTN","ORWDBA1",174,0)
RCVORCI(Y,DIAG) ;Receive order related Clinical Indicators & Diagnoses from GUI
"RTN","ORWDBA1",175,0)
 ; Store data in ^OR(100,ODN,5.1) & ^OR(100,0DN,5.2)
"RTN","ORWDBA1",176,0)
 ;
"RTN","ORWDBA1",177,0)
 N DXIEN,ODN,ORIEN,SCI,OCDXCT,OCT
"RTN","ORWDBA1",178,0)
 S ODN="",OCDXCT=0,Y=""
"RTN","ORWDBA1",179,0)
 F  S ODN=$O(DIAG(ODN)) Q:ODN=""  D
"RTN","ORWDBA1",180,0)
 . S ORIEN=$P(DIAG(ODN),";",1)  ;Order IEN
"RTN","ORWDBA1",181,0)
 . I ORIEN'?1N.N S Y=0 Q
"RTN","ORWDBA1",182,0)
 . K ^OR(100,ORIEN,5.1) ;Clear currently stored diagnosis for rewrite
"RTN","ORWDBA1",183,0)
 . ; Data from Delphi format: ORIEN;11CNNNCNN^exDx1^exDx2^exDx3^exDx4
"RTN","ORWDBA1",184,0)
 . ; Convert 8 Tx Factors
"RTN","ORWDBA1",185,0)
 . S SCI=$$TFGUIGBL($RE($E($RE($P(DIAG(ODN),U)),1,8)))
"RTN","ORWDBA1",186,0)
 . S ^OR(100,ORIEN,5.2)=SCI  ;Store TFs (SC,MST,AO,IR,EC,HNC,CV,SHD)
"RTN","ORWDBA1",187,0)
 . ; Get order date for CSV/CTD/HIPAA
"RTN","ORWDBA1",188,0)
 . S ORFMDAT=$$ORFMDAT^ORWDBA3(ORIEN)
"RTN","ORWDBA1",189,0)
 . ; Go through the diagnoses entered
"RTN","ORWDBA1",190,0)
 . F OCT=2:1 Q:$P(DIAG(ODN),U,OCT)=""  D
"RTN","ORWDBA1",191,0)
 .. S DXIEN=$P($$ICDDATA^ICDXCODE("DIAGNOSIS",$P(DIAG(ODN),U,OCT),ORFMDAT),U,1)  ;Dx IEN
"RTN","ORWDBA1",192,0)
 .. I DXIEN=-1!(DXIEN="") Q  ;No or invalid code passed in
"RTN","ORWDBA1",193,0)
 .. S OCDXCT=OCDXCT+1
"RTN","ORWDBA1",194,0)
 .. S ^OR(100,ORIEN,5.1,0)="^100.051PA^"_OCDXCT_U_OCDXCT ;Set 5.1 zero node
"RTN","ORWDBA1",195,0)
 .. S ^OR(100,ORIEN,5.1,OCDXCT,0)=DXIEN  ;Store a diagnosis for order
"RTN","ORWDBA1",196,0)
 .. S ^OR(100,ORIEN,5.1,"B",DXIEN,OCDXCT)="" ;Index diagnosis for order
"RTN","ORWDBA1",197,0)
 S:Y="" Y=1
"RTN","ORWDBA1",198,0)
 Q
"RTN","ORWDBA1",199,0)
 ;
"RTN","ORWDBA1",200,0)
TFSTGS ; Set Treatment Factor strings sequence order
"RTN","ORWDBA1",201,0)
 ; TFGBL is order of TxFs in ^OR(100,ORIEN,5) & ^OR(100,ORIEN,5.2)
"RTN","ORWDBA1",202,0)
 ; TFGUI is order of TxFs to/from GUI
"RTN","ORWDBA1",203,0)
 ; TFTBL is order of TxFs for table SD008 (used in ZCL segment)
"RTN","ORWDBA1",204,0)
 ; NOTE: change examples in TFGUIGBL and TFGBLGUI if order changed
"RTN","ORWDBA1",205,0)
 S TFGBL="SC^MST^AO^IR^EC^HNC^CV^SHD"
"RTN","ORWDBA1",206,0)
 S TFGUI="SC^AO^IR^EC^MST^HNC^CV^SHD"
"RTN","ORWDBA1",207,0)
 S TFTBL="AO^IR^SC^EC^MST^HNC^CV^SHD"
"RTN","ORWDBA1",208,0)
 Q
"RTN","ORWDBA1",209,0)
 ;
"RTN","ORWDBA1",210,0)
TFGUIGBL(GUI) ;Convert Treatment Factors from GUI to Global order & format
"RTN","ORWDBA1",211,0)
 ;
"RTN","ORWDBA1",212,0)
 ; Input:  GUI in CNU?NCU: C=checked, N=not checked, U=unchecked
"RTN","ORWDBA1",213,0)
 ; Output: GBL in 1^^^0^?^1^0^ (global) format (reordered for storage)
"RTN","ORWDBA1",214,0)
 ;
"RTN","ORWDBA1",215,0)
 N GBL,J,NTF,TF,TFGBL,TFGUI,TFTBL
"RTN","ORWDBA1",216,0)
 S GBL="",NTF=8  ;NTF=# of Treatment Factors (TxF)
"RTN","ORWDBA1",217,0)
 ;I $L(GUI)'=NTF Q -1  ;invalid # of TxF
"RTN","ORWDBA1",218,0)
 ; Get Treatment Factor sequence order strings
"RTN","ORWDBA1",219,0)
 D TFSTGS
"RTN","ORWDBA1",220,0)
 ; Convert from GBL to GUI format and sequence
"RTN","ORWDBA1",221,0)
 F J=1:1:NTF S TF=$E(GUI,J) D
"RTN","ORWDBA1",222,0)
 . S TF($P(TFGUI,U,J))=$S(TF="C":1,TF="U":0,TF="?":"?",1:"")
"RTN","ORWDBA1",223,0)
 F J=1:1:NTF S GBL=GBL_U_TF($P(TFGBL,U,J))
"RTN","ORWDBA1",224,0)
 Q $P(GBL,U,2,NTF+1)
"RTN","ORWDBA1",225,0)
 ;
"RTN","ORWDBA1",226,0)
TFGBLGUI(GBL) ;Convert Treatment Factors from Global to GUI order & format
"RTN","ORWDBA1",227,0)
 ;
"RTN","ORWDBA1",228,0)
 ; Input:  GBL in 1^0^1^1^^0^?^ (global) format
"RTN","ORWDBA1",229,0)
 ; Output: GUI in CCCNUU? (GUI) format (also reordered)
"RTN","ORWDBA1",230,0)
 ;
"RTN","ORWDBA1",231,0)
 N GUI,J,NTF,TF,TFGBL,TFGUI,TFTBL
"RTN","ORWDBA1",232,0)
 S GUI="",NTF=8  ;NCI=# of TxF
"RTN","ORWDBA1",233,0)
 ; Get Treatment Factor sequence order strings
"RTN","ORWDBA1",234,0)
 D TFSTGS
"RTN","ORWDBA1",235,0)
 ; Convert from GUI to GBL format and sequence
"RTN","ORWDBA1",236,0)
 F J=1:1:NTF S TF=$P(GBL,U,J) D
"RTN","ORWDBA1",237,0)
 . S TF($P(TFGBL,U,J))=$S(TF=1:"C",TF=0:"U",TF="?":"?",1:"N")
"RTN","ORWDBA1",238,0)
 F J=1:1:NTF S GUI=GUI_TF($P(TFGUI,U,J))
"RTN","ORWDBA1",239,0)
 Q GUI
"RTN","ORWDBA1",240,0)
 ;
"RTN","ORWDBA1",241,0)
PRVKEY(X) ;Check for active & provider key - to be deleted in CPRS v26
"RTN","ORWDBA1",242,0)
 N PTD
"RTN","ORWDBA1",243,0)
 Q:'+$G(X) 0
"RTN","ORWDBA1",244,0)
 Q:$G(^VA(200,X,0))="" 0
"RTN","ORWDBA1",245,0)
 S PTD=+$P(^VA(200,X,0),"^",11)
"RTN","ORWDBA1",246,0)
 I $$DT^XLFDT'<PTD,PTD>0 Q 0
"RTN","ORWDBA1",247,0)
 Q:$D(^XUSEC("PROVIDER",X)) 1
"RTN","ORWDBA1",248,0)
 Q 0
"RTN","ORWDBA1",249,0)
 ;
"RTN","ORWDBA1",250,0)
ORESKEY(X) ;Does 'X' hold ORES key, returns: 1=true, 0=false
"RTN","ORWDBA1",251,0)
 Q:'+$G(X) 0
"RTN","ORWDBA1",252,0)
 Q:$D(^XUSEC("ORES",X)) 1
"RTN","ORWDBA1",253,0)
 Q 0
"RTN","ORWDBA2")
0^17^B28669388
"RTN","ORWDBA2",1,0)
ORWDBA2 ; SLC/GDU - Billing Awareness - Phase I [11/26/04 15:43] ;05/23/12  10:35
"RTN","ORWDBA2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**195,361**;Dec 17, 1997;Build 39
"RTN","ORWDBA2",3,0)
 ;
"RTN","ORWDBA2",4,0)
 ;Clinician's Personal Diagnoses List
"RTN","ORWDBA2",5,0)
 ;The personal diagnoses list is stored in the NEW PERSON file # 200.
"RTN","ORWDBA2",6,0)
 ;In file # 200 it is stored in the multi-valued field PERSONAL DIAGNOSIS
"RTN","ORWDBA2",7,0)
 ;LIST, field # 351, sub-file 200.0351. This is unique to the individual
"RTN","ORWDBA2",8,0)
 ;clinician. It is designed to aid the clinician with the CIDC process
"RTN","ORWDBA2",9,0)
 ;by providing a list of diagnoses codes most frequently used by that
"RTN","ORWDBA2",10,0)
 ;clinician.
"RTN","ORWDBA2",11,0)
 ;
"RTN","ORWDBA2",12,0)
 ;External References:
"RTN","ORWDBA2",13,0)
 ;  NOW^%DTC             DBIA 10000
"RTN","ORWDBA2",14,0)
 ;  FILE^DIE             DBIA 2053
"RTN","ORWDBA2",15,0)
 ;  UPDATE^DIE           DBIA 2053
"RTN","ORWDBA2",16,0)
 ;  DT^DILF              DBIA 2054
"RTN","ORWDBA2",17,0)
 ;  FDA^FILF             DBIA 2054
"RTN","ORWDBA2",18,0)
 ;  $$GET1^DIQ           DBIA 2056
"RTN","ORWDBA2",19,0)
 ;  GETS^DIQ             DBIA 2056
"RTN","ORWDBA2",20,0)
 ;  $$STATCHK^ICDAPIU    DBIA 3991
"RTN","ORWDBA2",21,0)
 ;  $$ICDDX^ICDCODE      DBIA 3990
"RTN","ORWDBA2",22,0)
 ;  $$NOW^XLFDT          DBIA 10103
"RTN","ORWDBA2",23,0)
 ;
"RTN","ORWDBA2",24,0)
ADDPDL(Y,ORCIEN,ORDXA) ;Add to Personal Diagnosis List
"RTN","ORWDBA2",25,0)
 ;Add a new personal diagnosis list or new ICD9 code to an existing
"RTN","ORWDBA2",26,0)
 ;personal diagnosis list for a clinician. It will filter out duplicate
"RTN","ORWDBA2",27,0)
 ;entries before updating an existing PDL.
"RTN","ORWDBA2",28,0)
 ;Input Variables:
"RTN","ORWDBA2",29,0)
 ;  ORCIEN       Clinician Internal Entry Number
"RTN","ORWDBA2",30,0)
 ;  ORDXA        Array of dx codes to be added to personal dx list
"RTN","ORWDBA2",31,0)
 ;               format: ORDXA(#)=ICD9_Code^Lexicon_Expression_IEN
"RTN","ORWDBA2",32,0)
 ;Output Variable:
"RTN","ORWDBA2",33,0)
 ;  Y            Return value, 1 successful, 0 unsuccessful
"RTN","ORWDBA2",34,0)
 ;Local Variables:
"RTN","ORWDBA2",35,0)
 ;  DXI          Diagnosis Array Index
"RTN","ORWDBA2",36,0)
 ;  DXIEN        Diagnosis Code Internal Entry Number
"RTN","ORWDBA2",37,0)
 ;  EM           Error Message
"RTN","ORWDBA2",38,0)
 ;  FDXR         Found Diagnoses Records Array
"RTN","ORWDBA2",39,0)
 ;  FDXRI        Found Diagnoses Records Array Index
"RTN","ORWDBA2",40,0)
 ;  IEN          Internal Entry Number
"RTN","ORWDBA2",41,0)
 ;  PDL          Personal Diagnoses List Array
"RTN","ORWDBA2",42,0)
 ;  PDLI         Personal Diagnoses List Array Index
"RTN","ORWDBA2",43,0)
 N DXI,DXIEN,EM,FDXR,FDXRI,IEN,PDL,PDLI
"RTN","ORWDBA2",44,0)
 ;Gets clinician's Personal Diagnosis List and removes duplicates from
"RTN","ORWDBA2",45,0)
 ;dx input array. Quits if all are duplicates.
"RTN","ORWDBA2",46,0)
 D GETS^DIQ(200,ORCIEN,"351*,","","PDL","EM")
"RTN","ORWDBA2",47,0)
 I $D(PDL) D
"RTN","ORWDBA2",48,0)
 . S DXI="" F  S DXI=$O(ORDXA(DXI)) Q:DXI=""  D
"RTN","ORWDBA2",49,0)
 .. S PDLI="" F  S PDLI=$O(PDL(200.0351,PDLI)) Q:PDLI=""  D
"RTN","ORWDBA2",50,0)
 ... I PDL(200.0351,PDLI,.01)=$P($G(ORDXA(DXI)),U) K ORDXA(DXI)
"RTN","ORWDBA2",51,0)
 I $D(ORDXA)=0 S Y=0 Q
"RTN","ORWDBA2",52,0)
 ;Process dx input array
"RTN","ORWDBA2",53,0)
 S DXI="" F  S DXI=$O(ORDXA(DXI)) Q:DXI=""!($D(EM))  D
"RTN","ORWDBA2",54,0)
 . K FDXR,EM
"RTN","ORWDBA2",55,0)
 . ;Get the IEN for the current diagnosis code
"RTN","ORWDBA2",56,0)
 . D FIND^DIC(80,"","","CM",$P(ORDXA(DXI),U),"*","","","","FDXR","EM")
"RTN","ORWDBA2",57,0)
 . I $P(FDXR("DILIST",0),U)=0 Q
"RTN","ORWDBA2",58,0)
 . I $P(FDXR("DILIST",0),U)=1 S DXIEN=FDXR("DILIST",2,1)
"RTN","ORWDBA2",59,0)
 . I $P(FDXR("DILIST",0),U)>1 D
"RTN","ORWDBA2",60,0)
 .. F FDXRI=1:1:FDXR("DILIST",0) D
"RTN","ORWDBA2",61,0)
 ... I FDXR("DILIST",1,FDXRI)=$P($G(ORDXA(DXI)),U) S DXIEN=FDXR("DILIST",2,FDXRI)
"RTN","ORWDBA2",62,0)
 . ;Add IDC9 code to personal diagnoses list
"RTN","ORWDBA2",63,0)
 . K IEN
"RTN","ORWDBA2",64,0)
 . S IEN="1,"_ORCIEN_",",IEN="+"_IEN
"RTN","ORWDBA2",65,0)
 . D FDA^DILF(200.0351,IEN,.01,"",DXIEN,"FDA","EM")
"RTN","ORWDBA2",66,0)
 . D UPDATE^DIE("","FDA","IEN","EM")
"RTN","ORWDBA2",67,0)
 . ;Add Lexicon Expression list
"RTN","ORWDBA2",68,0)
 . I $P(ORDXA(DXI),U,2)'="" D
"RTN","ORWDBA2",69,0)
 .. S IEN=IEN(1)_","_ORCIEN_","
"RTN","ORWDBA2",70,0)
 .. D FDA^DILF(200.0351,IEN,1,"",$P(ORDXA(DXI),U,2),"FDA","EM")
"RTN","ORWDBA2",71,0)
 .. D FILE^DIE("","FDA","EM")
"RTN","ORWDBA2",72,0)
 I $D(EM) S Y=0 Q
"RTN","ORWDBA2",73,0)
 S Y=1
"RTN","ORWDBA2",74,0)
 Q
"RTN","ORWDBA2",75,0)
 ;
"RTN","ORWDBA2",76,0)
DELPDL(Y,ORCIEN,ORDXA) ;Delete from Personal Diagnosis List
"RTN","ORWDBA2",77,0)
 ;Delete a selected diagnosis code or group of diagnoses codes from a
"RTN","ORWDBA2",78,0)
 ;Clinician's Personal DX List.
"RTN","ORWDBA2",79,0)
 ;Input Variables:
"RTN","ORWDBA2",80,0)
 ;  ORCIEN    Clinician Internal ID number
"RTN","ORWDBA2",81,0)
 ;  ORDXA     Array of dx codes to be deleted from personal dx list
"RTN","ORWDBA2",82,0)
 ;Output Variable:
"RTN","ORWDBA2",83,0)
 ;  Y         Return value, 1 successful, 0 unsuccessful
"RTN","ORWDBA2",84,0)
 ;Local Variables:
"RTN","ORWDBA2",85,0)
 ;  DXI       Diagnosis code array index
"RTN","ORWDBA2",86,0)
 ;  EM        Error Message
"RTN","ORWDBA2",87,0)
 ;  FDA       FileMan Data Array
"RTN","ORWDBA2",88,0)
 ;  IEN       Interanl Entry Number
"RTN","ORWDBA2",89,0)
 ;  RF        Record Found
"RTN","ORWDBA2",90,0)
 N DXI,EM,FDA,IEN,RF
"RTN","ORWDBA2",91,0)
 D GETS^DIQ(200,ORCIEN,"351*,","","RF","EM")
"RTN","ORWDBA2",92,0)
 I $D(RF)=0 S Y=0 Q
"RTN","ORWDBA2",93,0)
 S IEN="" F  S IEN=$O(RF(200.0351,IEN)) Q:IEN=""  D
"RTN","ORWDBA2",94,0)
 .S DXI="" F  S DXI=$O(ORDXA(DXI)) Q:DXI=""  D
"RTN","ORWDBA2",95,0)
 .. I RF(200.0351,IEN,.01)=ORDXA(DXI) D
"RTN","ORWDBA2",96,0)
 ... D FDA^DILF(200.0351,IEN,.01,"","@","FDA","EM")
"RTN","ORWDBA2",97,0)
 ... D FILE^DIE("","FDA","EM")
"RTN","ORWDBA2",98,0)
 S Y=1
"RTN","ORWDBA2",99,0)
 Q
"RTN","ORWDBA2",100,0)
 ;
"RTN","ORWDBA2",101,0)
GETPDL(Y,ORCIEN) ;Get Personal Diagnosis List
"RTN","ORWDBA2",102,0)
 ;This gets the clinician's personal diagnosis list. Using the personal
"RTN","ORWDBA2",103,0)
 ;diagnosis list, builds and returns an array variable with the ICD9
"RTN","ORWDBA2",104,0)
 ;codes and descriptions stored in the ICD DIAGNOSIS file, # 80.
"RTN","ORWDBA2",105,0)
 ;Flagging any inactive ICD9 code with a "#".
"RTN","ORWDBA2",106,0)
 ;Input Variable:
"RTN","ORWDBA2",107,0)
 ;  ORCIEN    Clinician Internal ID number
"RTN","ORWDBA2",108,0)
 ;Output Variable:
"RTN","ORWDBA2",109,0)
 ;  Y         Array of ICD9 codes and descriptions
"RTN","ORWDBA2",110,0)
 ;            Y(#)=ICD9_code^DX_description^DX_Inactive
"RTN","ORWDBA2",111,0)
 ;                 If inactive # in third piece
"RTN","ORWDBA2",112,0)
 ;                 If active null in third piece
"RTN","ORWDBA2",113,0)
 ;Local Variables:
"RTN","ORWDBA2",114,0)
 ;  DXC       Diagnosis Code (for sorting)
"RTN","ORWDBA2",115,0)
 ;  DXD       Diagnosis Description
"RTN","ORWDBA2",116,0)
 ;  DXDT      Diagnosis Date
"RTN","ORWDBA2",117,0)
 ;  DXI       Diagnosis Inactive Flag
"RTN","ORWDBA2",118,0)
 ;  EM        Error Message
"RTN","ORWDBA2",119,0)
 ;  ICD9      ICD9 code (for GUI)
"RTN","ORWDBA2",120,0)
 ;  IEN       Internal Entry Number
"RTN","ORWDBA2",121,0)
 ;  RF        Record Found
"RTN","ORWDBA2",122,0)
 N DXC,DXD,DXDT,DXI,EM,ICD9,IEN,RF
"RTN","ORWDBA2",123,0)
 S DXDT=$$NOW^XLFDT
"RTN","ORWDBA2",124,0)
 D GETS^DIQ(200,ORCIEN,"351*,","EI","RF","EM")
"RTN","ORWDBA2",125,0)
 I $D(RF) D
"RTN","ORWDBA2",126,0)
 . S (DXC,DXD,DXI,ICD9,IEN)=""
"RTN","ORWDBA2",127,0)
 . F  S IEN=$O(RF(200.0351,IEN)) Q:IEN=""  D
"RTN","ORWDBA2",128,0)
 .. S ICD9=RF(200.0351,IEN,.01,"E")
"RTN","ORWDBA2",129,0)
 .. S DXC=$$SETDXC(ICD9)
"RTN","ORWDBA2",130,0)
 .. I $G(RF(200.0351,IEN,1,"I"))="" S DXD=$$SETDXD($P($$ICDDATA^ICDXCODE("DIAGNOSIS",ICD9,DXDT),U,4))
"RTN","ORWDBA2",131,0)
 .. I $G(RF(200.0351,IEN,1,"I"))=1 S DXD=$$SETDXD($P($$ICDDATA^ICDXCODE("DIAGNOSIS",ICD9,DXDT),U,4))
"RTN","ORWDBA2",132,0)
 .. I $G(RF(200.0351,IEN,1,"I"))>1 S DXD=RF(200.0351,IEN,1,"E")
"RTN","ORWDBA2",133,0)
 .. S DXI=$$SETDXI($$STATCHK^ICDXCODE("DIAGNOSIS",ICD9,DXDT))
"RTN","ORWDBA2",134,0)
 .. S Y(DXC)=ICD9_U_DXD_U_DXI
"RTN","ORWDBA2",135,0)
 E  S Y=0
"RTN","ORWDBA2",136,0)
 Q
"RTN","ORWDBA2",137,0)
 ;
"RTN","ORWDBA2",138,0)
GETDUDC(Y,ORCIEN,ORPTIEN) ;Get Day's Unique Diagnoses Codes
"RTN","ORWDBA2",139,0)
 ;Gets all the unique ICD9 codes for the orders placed today by the
"RTN","ORWDBA2",140,0)
 ;clinician for this patient. Using the ICD9 codes it builds an array
"RTN","ORWDBA2",141,0)
 ;variable with the ICD9 code, its description from the ICD DIAGNOSIS
"RTN","ORWDBA2",142,0)
 ;file, #80. Flagging any inactive ICD9 codes with a "#".
"RTN","ORWDBA2",143,0)
 ;Input Variables:
"RTN","ORWDBA2",144,0)
 ;  ORCIEN    Clinician's internal ID number
"RTN","ORWDBA2",145,0)
 ;  ORPTIEN   Patient's internal ID number
"RTN","ORWDBA2",146,0)
 ;Output Variable:
"RTN","ORWDBA2",147,0)
 ;  Y         Array of ICD9 codes and descriptions
"RTN","ORWDBA2",148,0)
 ;            Y(#)=ICD9_code^DX_Description^DX_Inactive
"RTN","ORWDBA2",149,0)
 ;                 If inactive # in third piece
"RTN","ORWDBA2",150,0)
 ;                 If active null in third piece
"RTN","ORWDBA2",151,0)
 ;Local Variables:
"RTN","ORWDBA2",152,0)
 ;  CKDATE    Check Date (stops loop)
"RTN","ORWDBA2",153,0)
 ;  DXC       Diagnosis Code (for sorting)
"RTN","ORWDBA2",154,0)
 ;  DXD       Diagnosis Description
"RTN","ORWDBA2",155,0)
 ;  DXI       Diagnosis Inactive Flag
"RTN","ORWDBA2",156,0)
 ;  DXIEN     Diagnosis Internal Entry Number
"RTN","ORWDBA2",157,0)
 ;  ICD9      ICD9 code (for GUI display)
"RTN","ORWDBA2",158,0)
 ;  IEN       Internal Entry Number
"RTN","ORWDBA2",159,0)
 ;  OBJORD    Object of Order
"RTN","ORWDBA2",160,0)
 ;  ORDATE    Order Date
"RTN","ORWDBA2",161,0)
 ;  ORDG      Order Group (ACT index variable)
"RTN","ORWDBA2",162,0)
 ;  OREM      Order Error Message
"RTN","ORWDBA2",163,0)
 ;  ORIEN     Order Internal Entry Number
"RTN","ORWDBA2",164,0)
 ;  ORRF      Order Record Found
"RTN","ORWDBA2",165,0)
 ;  RCODI     Reverse Cronological Order Date Index
"RTN","ORWDBA2",166,0)
 ;  SUBFILE   Subfile Number
"RTN","ORWDBA2",167,0)
 N CKDATE,DXC,DXD,DXEM,DXI,DXIEN,DXRF,ICD9,IEN,OBJORD,ORDATE,ORDG,OREM
"RTN","ORWDBA2",168,0)
 N ORIEN,ORRF,RCODI,SUBFILE
"RTN","ORWDBA2",169,0)
 S OBJORD=ORPTIEN_";DPT("
"RTN","ORWDBA2",170,0)
 S (DXIEN,ORDATE,ORDG,ORIEN,RCODI)="",CKDATE=$$F24HA
"RTN","ORWDBA2",171,0)
 F  S RCODI=$O(^OR(100,"ACT",OBJORD,RCODI)) S ORDATE=9999999-RCODI Q:ORDATE<CKDATE!(RCODI="")  D
"RTN","ORWDBA2",172,0)
 . F  S ORDG=$O(^OR(100,"ACT",OBJORD,RCODI,ORDG)) Q:ORDG=""  D
"RTN","ORWDBA2",173,0)
 .. S ORIEN=$QS($Q(^OR(100,"ACT",OBJORD,RCODI,ORDG)),6)
"RTN","ORWDBA2",174,0)
 .. K ORRF,OREM
"RTN","ORWDBA2",175,0)
 .. D GETS^DIQ(100,ORIEN,"1;5.1*","I","ORRF","OREM")
"RTN","ORWDBA2",176,0)
 .. S IEN=$QS($Q(ORRF(100)),2)
"RTN","ORWDBA2",177,0)
 .. Q:ORRF(100,IEN,1,"I")'=ORCIEN
"RTN","ORWDBA2",178,0)
 .. Q:$D(ORRF(100.051))=0
"RTN","ORWDBA2",179,0)
 .. S (DXC,DXD,DXI,DXIEN,ICD9,IEN)=""
"RTN","ORWDBA2",180,0)
 .. F  S IEN=$O(ORRF(100.051,IEN)) Q:IEN=""  D
"RTN","ORWDBA2",181,0)
 ... Q:ORRF(100.051,IEN,.01,"I")=""
"RTN","ORWDBA2",182,0)
 ... S DXIEN=ORRF(100.051,IEN,.01,"I")
"RTN","ORWDBA2",183,0)
 ... S ICD9=$$GET1^DIQ(80,DXIEN,.01,"")
"RTN","ORWDBA2",184,0)
 ... S DXC=$$SETDXC(ICD9)
"RTN","ORWDBA2",185,0)
 ... S DXD=$$SETDXD($P($$ICDDATA^ICDXCODE("DIAGNOSIS",ICD9,ORDATE),U,4))
"RTN","ORWDBA2",186,0)
 ... S DXI=$$SETDXI($$STATCHK^ICDXCODE("DIAGNOSIS",ICD9,ORDATE))
"RTN","ORWDBA2",187,0)
 ... S Y(DXC)=ICD9_U_DXD_U_DXI
"RTN","ORWDBA2",188,0)
 Q
"RTN","ORWDBA2",189,0)
 ;
"RTN","ORWDBA2",190,0)
SETDXC(X) ;Set diagnosis code variable for sorting
"RTN","ORWDBA2",191,0)
 S X=$S($E(X)?1A:X,1:+X) Q X
"RTN","ORWDBA2",192,0)
 ;
"RTN","ORWDBA2",193,0)
SETDXD(X) ;Set upper case diagnosis discription to mixed case
"RTN","ORWDBA2",194,0)
 N X1,X2
"RTN","ORWDBA2",195,0)
 F X1=2:1:$L(X) D
"RTN","ORWDBA2",196,0)
 . I $E(X,X1)?1U,$E(X,X1-1)?1A D
"RTN","ORWDBA2",197,0)
 .. S X2=$E(X,X1)
"RTN","ORWDBA2",198,0)
 .. S X2=$C($A(X2)+32)
"RTN","ORWDBA2",199,0)
 .. S $E(X,X1)=X2
"RTN","ORWDBA2",200,0)
 Q X
"RTN","ORWDBA2",201,0)
 ;
"RTN","ORWDBA2",202,0)
SETDXI(X) ;Set the diagnosis inactive indicator
"RTN","ORWDBA2",203,0)
 S X=$S($P(X,U)=0:"#",1:"") Q X
"RTN","ORWDBA2",204,0)
 ;
"RTN","ORWDBA2",205,0)
CI(CNT) ;Counter Incrementer
"RTN","ORWDBA2",206,0)
 ; CNT - Counter
"RTN","ORWDBA2",207,0)
 S CNT=CNT+1 Q CNT
"RTN","ORWDBA2",208,0)
 ;
"RTN","ORWDBA2",209,0)
F24HA() ;Returns date and time from exactly 24 hours ago
"RTN","ORWDBA2",210,0)
 N %,%H,%I,X
"RTN","ORWDBA2",211,0)
 D NOW^%DTC
"RTN","ORWDBA2",212,0)
 Q %-1
"RTN","ORWDBA2",213,0)
 ;
"RTN","ORWDBA2",214,0)
ERRMSG(MT) ;Display Error Message
"RTN","ORWDBA2",215,0)
 ; to be determined
"RTN","ORWDBA2",216,0)
 Q
"RTN","ORWDBA3")
0^18^B40814216
"RTN","ORWDBA3",1,0)
ORWDBA3 ; SLC/GSS Billing Awareness (CIDC) [8/20/03 9:19am] ;05/23/12  10:36
"RTN","ORWDBA3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**190,195,243,361**;Dec 17, 1997;Build 39
"RTN","ORWDBA3",3,0)
 ;
"RTN","ORWDBA3",4,0)
ORFMDAT(ORDFN) ; Return date in FM format regarding order for CSV/CTD/HIPAA
"RTN","ORWDBA3",5,0)
 ; Pass in Order IEN
"RTN","ORWDBA3",6,0)
 Q ($P($G(^OR(100,ORDFN,8,1,0)),"^",16)\1)
"RTN","ORWDBA3",7,0)
 ;
"RTN","ORWDBA3",8,0)
DISPLAY ; Display of BA data from original copied order (ORIT = ORIEN)
"RTN","ORWDBA3",9,0)
 ; Displayed in window with all order info and user can accept/edit
"RTN","ORWDBA3",10,0)
 ; Note: TxF = Treatment Factor
"RTN","ORWDBA3",11,0)
 ; BA data (Dx,TxF's) not editable but in signature window, not in above
"RTN","ORWDBA3",12,0)
 ; ORIT defined in ORWDXM1, DISPLAY called from ORWDXM2
"RTN","ORWDBA3",13,0)
 ;
"RTN","ORWDBA3",14,0)
 ; Input:
"RTN","ORWDBA3",15,0)
 ;  ORIT, ILST, and LST() from ORWDXM* routines
"RTN","ORWDBA3",16,0)
 ; Output:
"RTN","ORWDBA3",17,0)
 ;  ILST and LST() appropriately incremented/populated for order display
"RTN","ORWDBA3",18,0)
 ; Variables:
"RTN","ORWDBA3",19,0)
 ;  CUN     = TxF's in C, U, or N format
"RTN","ORWDBA3",20,0)
 ;  I       = counter
"RTN","ORWDBA3",21,0)
 ;  ILST    = line counter, initially from ORWDXM* routines
"RTN","ORWDBA3",22,0)
 ;  LST()   = array of lines to output, initially from ORWDXM* routines
"RTN","ORWDBA3",23,0)
 ;  NTF     = # of Treatment Factors
"RTN","ORWDBA3",24,0)
 ;  ORITARY = ORIT array of 1 needed to access GETTFCI^ORWDBA4
"RTN","ORWDBA3",25,0)
 ;  SPCS    = # of characters to space to left of ':'
"RTN","ORWDBA3",26,0)
 ;  TF1     = first TxF output? (0/1)
"RTN","ORWDBA3",27,0)
 ;  TFGBL   = TxF's in Global stored order
"RTN","ORWDBA3",28,0)
 ;  TFGUI   = TxF's in GUI returned order
"RTN","ORWDBA3",29,0)
 ;  TFV     = TxF verbiage
"RTN","ORWDBA3",30,0)
 ;
"RTN","ORWDBA3",31,0)
 N CUN,I,NTF,ORITARY,SPCS,TF1,TFGBL,TFGUI,TFV,Y
"RTN","ORWDBA3",32,0)
 S NTF=8,SPCS=28,ORITARY(1)=+ORIT
"RTN","ORWDBA3",33,0)
 ; Get Y(+ORIT) string in ORIEN^CUUUCCN^Dx1^Desc1^Dx2^Desc2^... format
"RTN","ORWDBA3",34,0)
 D GETTFCI^ORWDBA4(.Y,.ORITARY)
"RTN","ORWDBA3",35,0)
 S CUN=$P($G(Y(1)),U,2)  ;CUN = Treatment Factors in CUN syntax
"RTN","ORWDBA3",36,0)
 ; First output Diagnosis information - if any
"RTN","ORWDBA3",37,0)
 F I=3:2:9 I $P($G(Y(1)),U,I)'="" D
"RTN","ORWDBA3",38,0)
 . S ILST=ILST+1,LST(ILST)=$S(I=3:"Diagnoses",1:"")
"RTN","ORWDBA3",39,0)
 . S LST(ILST)=LST(ILST)_":"_$P(Y(1),U,I)_" - "_$P(Y(1),U,I+1)
"RTN","ORWDBA3",40,0)
 . D FRMTLST
"RTN","ORWDBA3",41,0)
 ; Get GUI and GBL Treatment Factor sequence strings
"RTN","ORWDBA3",42,0)
 D TFSTGS^ORWDBA1
"RTN","ORWDBA3",43,0)
 ; Assumes SC will always be first in sequence! - not likely to change
"RTN","ORWDBA3",44,0)
 S ILST=ILST+1
"RTN","ORWDBA3",45,0)
 S LST(ILST)="Service Connected:"_$S($E(CUN)="C":"YES",1:"NO")
"RTN","ORWDBA3",46,0)
 D FRMTLST
"RTN","ORWDBA3",47,0)
 S ILST=ILST+1,LST(ILST)="Treatment Factors:"
"RTN","ORWDBA3",48,0)
 ; If no TxF's (no 'C'hecked) {SC output above} then output '<none>'
"RTN","ORWDBA3",49,0)
 I '$F($E(CUN,2,NTF),"C") S LST(ILST)=LST(ILST)_"<none>" D FRMTLST Q
"RTN","ORWDBA3",50,0)
 S TF1=0  ;No TxF yet output
"RTN","ORWDBA3",51,0)
 ; Verbiage for TxF's
"RTN","ORWDBA3",52,0)
 S TFV("MST")="MILITARY SEXUAL TRAUMA",TFV("AO")="AGENT ORANGE"
"RTN","ORWDBA3",53,0)
 S TFV("IR")="IONIZING RADIATION",TFV("EC")="ENVIRONMENTAL CONTAMINANTS"
"RTN","ORWDBA3",54,0)
 S TFV("HNC")="HEAD AND NECK CANCER",TFV("CV")="COMBAT VETERAN"
"RTN","ORWDBA3",55,0)
 S TFV("SHD")="SHIPBOARD HAZARD"
"RTN","ORWDBA3",56,0)
 ; Output Checked TxF's
"RTN","ORWDBA3",57,0)
 F I=2:1:NTF I $E(CUN,I)="C" D
"RTN","ORWDBA3",58,0)
 . I 'TF1 S LST(ILST)=LST(ILST)_TFV($P(TFGUI,U,I)),TF1=1 D FRMTLST Q
"RTN","ORWDBA3",59,0)
 . S ILST=ILST+1,LST(ILST)=":"_TFV($P(TFGUI,U,I)) D FRMTLST
"RTN","ORWDBA3",60,0)
 Q
"RTN","ORWDBA3",61,0)
 ;
"RTN","ORWDBA3",62,0)
FRMTLST ; Format the variable LST(ILST) for DISPLAY tag
"RTN","ORWDBA3",63,0)
 S LST(ILST)=$J($P(LST(ILST),":"),SPCS)_": "_$P(LST(ILST),":",2)
"RTN","ORWDBA3",64,0)
 Q
"RTN","ORWDBA3",65,0)
 ;
"RTN","ORWDBA3",66,0)
HINTS(Y) ; Return HINTS for ORBA Treatment Factors - used by Delphi
"RTN","ORWDBA3",67,0)
 ; The hints returned in the Y array will be used in the CPRS GUI and
"RTN","ORWDBA3",68,0)
 ; displayed on fly-over of the cursor over the TxF text in the window
"RTN","ORWDBA3",69,0)
 ;
"RTN","ORWDBA3",70,0)
 ; Input
"RTN","ORWDBA3",71,0)
 ;  <none>
"RTN","ORWDBA3",72,0)
 ; Output
"RTN","ORWDBA3",73,0)
 ;  Y array of the hints for TxF's> Y(#)=TxFA ^ TxF line # ^ hint text
"RTN","ORWDBA3",74,0)
 ;    where TxFA is Treatment Factor acronym, e.g., CV=Combat Veteran
"RTN","ORWDBA3",75,0)
 ; Variables
"RTN","ORWDBA3",76,0)
 ;  CT      = line number count, used in Y(#) where #=CT
"RTN","ORWDBA3",77,0)
 ;  I       = incrementor index #
"RTN","ORWDBA3",78,0)
 ;  ORTFIEN = the IEN for the TxF in the Help Frame (^DIC(9.2)) file
"RTN","ORWDBA3",79,0)
 ;  TF      = TxF acronym
"RTN","ORWDBA3",80,0)
 ;  TFLN    = TxF text line number, e.g., ^DIC(9.2,ORTFIEN,1,TFLN,0)
"RTN","ORWDBA3",81,0)
 ;  TFS     = string of TxF acronyms
"RTN","ORWDBA3",82,0)
 ;  TFV     = TxF description/text
"RTN","ORWDBA3",83,0)
 ;
"RTN","ORWDBA3",84,0)
 N CT,I,ORTFIEN,TF,TFLN,TFS,TFV
"RTN","ORWDBA3",85,0)
 ;
"RTN","ORWDBA3",86,0)
 S TFS="SC^MST^AO^IR^EC^HNC^CV^SHD",CT=0
"RTN","ORWDBA3",87,0)
 ; Get next TxF from TFS
"RTN","ORWDBA3",88,0)
 F I=1:1 S TF=$P(TFS,U,I) Q:TF=""  D
"RTN","ORWDBA3",89,0)
 . S ORTFIEN=$O(^DIC(9.2,"B","ORBA-"_TF,"")),TFV="",TFLN=0
"RTN","ORWDBA3",90,0)
 . ; Get next line of hint text
"RTN","ORWDBA3",91,0)
 . F  S TFLN=$O(^DIC(9.2,ORTFIEN,1,TFLN)) Q:'TFLN  D
"RTN","ORWDBA3",92,0)
 .. S CT=CT+1,Y(CT)=TF_U_TFLN_U_^DIC(9.2,ORTFIEN,1,TFLN,0)
"RTN","ORWDBA3",93,0)
 Q
"RTN","ORWDBA3",94,0)
 ;
"RTN","ORWDBA3",95,0)
DG1(ORDFN,COUNTER,CTVALUE) ; Create DG1 segment(s) & make call for ZCL seg.
"RTN","ORWDBA3",96,0)
 ;
"RTN","ORWDBA3",97,0)
 ;  Input
"RTN","ORWDBA3",98,0)
 ;    ORDFN      Internal Order ID#
"RTN","ORWDBA3",99,0)
 ;    COUNTER    Variable used as counter from calling routine
"RTN","ORWDBA3",100,0)
 ;    CTVALUE    Value of COUNTER when DG1 called
"RTN","ORWDBA3",101,0)
 ;  Output
"RTN","ORWDBA3",102,0)
 ;    DG1 & ZCL HL7 segments
"RTN","ORWDBA3",103,0)
 ;
"RTN","ORWDBA3",104,0)
 I $$BASTAT^ORWDBA1=0 Q  ;BA not used
"RTN","ORWDBA3",105,0)
 N DG13,DXIEN,DXR,DXV,FROMFILE,ICD9,OCT,OREC,ORFMDAT
"RTN","ORWDBA3",106,0)
 ; zero order count variable
"RTN","ORWDBA3",107,0)
 S OCT=0
"RTN","ORWDBA3",108,0)
 ; Get the date of order (for CSV/CTD usage)
"RTN","ORWDBA3",109,0)
 S ORFMDAT=$$ORFMDAT(ORDFN)
"RTN","ORWDBA3",110,0)
 ; Get the diagnoses for an order
"RTN","ORWDBA3",111,0)
 F  S OCT=$O(^OR(100,ORDFN,5.1,OCT)) Q:OCT'?1N.N  D
"RTN","ORWDBA3",112,0)
 . S OREC=^OR(100,ORDFN,5.1,OCT,0)
"RTN","ORWDBA3",113,0)
 . S DXIEN=$P(OREC,U)  ; DXIEN=pointer to diagnosis (ICD9) file #80
"RTN","ORWDBA3",114,0)
 . ; the DXIEN pointer should point to a valid diagnosis (after all is
"RTN","ORWDBA3",115,0)
 . ;   was previously entered .. but just in case ...)
"RTN","ORWDBA3",116,0)
 . S (DXV,ICD9)=""
"RTN","ORWDBA3",117,0)
 . I DXIEN'="" D
"RTN","ORWDBA3",118,0)
 .. S DXR=$$ICDDATA^ICDXCODE("DIAGNOSIS",DXIEN,ORFMDAT) Q:+DXR=-1
"RTN","ORWDBA3",119,0)
 .. ; Get diagnosis verbiage and ICD code
"RTN","ORWDBA3",120,0)
 .. S DXV=$P(DXR,U,4),ICD9=$P(DXR,U,2)
"RTN","ORWDBA3",121,0)
 . S FROMFILE=80
"RTN","ORWDBA3",122,0)
 . S DG13=DXIEN_U_DXV_U_FROMFILE_U_ICD9_U_DXV_U_"ICD9"
"RTN","ORWDBA3",123,0)
 . S CTVALUE=CTVALUE+1
"RTN","ORWDBA3",124,0)
 . S ORMSG(CTVALUE)="DG1"_"|"_OCT_"||"_DG13_"|||||||||||||"
"RTN","ORWDBA3",125,0)
 . D ZCL
"RTN","ORWDBA3",126,0)
 S @COUNTER=CTVALUE
"RTN","ORWDBA3",127,0)
 Q
"RTN","ORWDBA3",128,0)
 ;
"RTN","ORWDBA3",129,0)
ZCL ;create all the ZCL segments (currently 8 TxF's) for order number OCT
"RTN","ORWDBA3",130,0)
 ;
"RTN","ORWDBA3",131,0)
 N I,J,TABLE,TF,TFGBL,TFGUI,TFTBL,TFIN,TFS,VALUE
"RTN","ORWDBA3",132,0)
 D TFSTGS^ORWDBA1  ;set string sequence of treatment factors
"RTN","ORWDBA3",133,0)
 ; TFS is TxF data in ^OR(100,ORIEN,5.2) order
"RTN","ORWDBA3",134,0)
 S TFS=$G(^OR(100,ORDFN,5.2)),TABLE=""
"RTN","ORWDBA3",135,0)
 ; conversion order from ^OR stored data and Table SD008 for HL7 msg
"RTN","ORWDBA3",136,0)
 ; convert so that the ZCL segments will be in Table SD008 order (1-8)
"RTN","ORWDBA3",137,0)
 F I=1:1:8 S TF=$P(TFTBL,U,I) F J=1:1:8 I $P(TFGBL,U,J)=TF S TABLE=TABLE_J Q
"RTN","ORWDBA3",138,0)
 F TFIN=1:1:8 D
"RTN","ORWDBA3",139,0)
 . ; ORMSG counter incremented
"RTN","ORWDBA3",140,0)
 . S CTVALUE=CTVALUE+1
"RTN","ORWDBA3",141,0)
 . ; TF VALUE=0 for no or 1 for yes (only if not req. is it null)
"RTN","ORWDBA3",142,0)
 . S VALUE=$P(TFS,U,$E(TABLE,TFIN))
"RTN","ORWDBA3",143,0)
 . I VALUE="?" S VALUE=0  ;temp fix if sending '?' to ancillary???
"RTN","ORWDBA3",144,0)
 . ; for Table SD008: OCT=Set ID, SCIN=O/P Classif. Type, VALUE=Value
"RTN","ORWDBA3",145,0)
 . S ORMSG(CTVALUE)="ZCL|"_OCT_"|"_TFIN_"|"_VALUE
"RTN","ORWDBA3",146,0)
 Q
"RTN","ORWDBA3",147,0)
 ;
"RTN","ORWDBA3",148,0)
BDOSTR ;Store backdoor order DG1 and ZCL messages from HL7
"RTN","ORWDBA3",149,0)
 ;Processes one order per entry into BDOSTR, e.g., ROUT(1)
"RTN","ORWDBA3",150,0)
 ;Depends upon ORM* routines to set-up a number of variables including
"RTN","ORWDBA3",151,0)
 ;  ORMSG array and ORIFN.
"RTN","ORWDBA3",152,0)
 ;ORM* routines calling BDOSTR: ORMGMRC, ORMLR, ORMPS, & ORMRA
"RTN","ORWDBA3",153,0)
 ;
"RTN","ORWDBA3",154,0)
 ; Input:   HL7 messages and related data
"RTN","ORWDBA3",155,0)
 ; Output:  ROUT array in Delphi GUI format, i.e.
"RTN","ORWDBA3",156,0)
 ;          OrderIEN;11CNNNCNN^exDx1^exDx2^exDx3^exDx4
"RTN","ORWDBA3",157,0)
 ;
"RTN","ORWDBA3",158,0)
 ; Variables Used
"RTN","ORWDBA3",159,0)
 ;  DG1      = sequential numbered array with a value of DXIEN
"RTN","ORWDBA3",160,0)
 ;  I,J      = counters
"RTN","ORWDBA3",161,0)
 ;  GUITF    = GUI order treatment factors (TxF)
"RTN","ORWDBA3",162,0)
 ;  NDX      = number of diagnoses being passed
"RTN","ORWDBA3",163,0)
 ;  NTF      = number of TxF
"RTN","ORWDBA3",164,0)
 ;  OBX      = @ORMSG Dx array element # (max of 4 diagnoses stored)
"RTN","ORWDBA3",165,0)
 ;  REC      = set to sequential HL7 messages, contains HL7 message data
"RTN","ORWDBA3",166,0)
 ;  ROUT     = record sent for storage processing to RCVORCI
"RTN","ORWDBA3",167,0)
 ;  TF       = individual TxF values
"RTN","ORWDBA3",168,0)
 ;  TFGBL    = TxF acronyms in ^ delimited string in ^OR sequence
"RTN","ORWDBA3",169,0)
 ;  TFGUI    = TxF acronyms in ^ delimited string in from GUI sequence
"RTN","ORWDBA3",170,0)
 ;  TFTBL    = TxF acronyms in ^ delimited string in Table SD008 sequence
"RTN","ORWDBA3",171,0)
 ;  VAL      = individual TxF values
"RTN","ORWDBA3",172,0)
 ;  ZCL      = TxF in Table SD008 format and sequence
"RTN","ORWDBA3",173,0)
 ;
"RTN","ORWDBA3",174,0)
 ; See if CIDC master switch set, if not then no DG1/ZCL seg, to store
"RTN","ORWDBA3",175,0)
 I $$BASTAT^ORWDBA1=0 Q  ;CIDC (nee BA) not used
"RTN","ORWDBA3",176,0)
 ;
"RTN","ORWDBA3",177,0)
 N CPNODE,CT,DG1,I,J,GUITF,NDX,NTF,OBX,REC,ROUT,ORSDCARY,SDCARYA
"RTN","ORWDBA3",178,0)
 N TF,TFGBL,TFGUI,TFTBL,VAL,X,ZCL
"RTN","ORWDBA3",179,0)
 ;
"RTN","ORWDBA3",180,0)
 K ORSDCARY,SDCARYA
"RTN","ORWDBA3",181,0)
 D TFSTGS^ORWDBA1  ;set string sequence of treatment factors
"RTN","ORWDBA3",182,0)
 S (CT,NDX,OBX)=0,NTF=8,(CPNODE,GUITF,TF,Y,ZCL)="",X="T"
"RTN","ORWDBA3",183,0)
 ; Call API to acquire Treatment Factors in force
"RTN","ORWDBA3",184,0)
 D NOW^%DTC,CL^SDCO21(DFN,%,"",.ORSDCARY)  ;DBIA 406
"RTN","ORWDBA3",185,0)
 ; Retrved array order: AO,IR,SC,EC,MST,HNC,CV,SHD, e.g., ORSDCARY(3) for SC
"RTN","ORWDBA3",186,0)
 ; Convert to character array, e.g., SDCARYA("SC")=""
"RTN","ORWDBA3",187,0)
 F I=1:1:NTF S:$D(ORSDCARY(I)) SDCARYA($P("AO^IR^SC^EC^MST^HNC^CV^SHD",U,I))=""
"RTN","ORWDBA3",188,0)
 ; Process only four DG1 segments and first set of ZCL segments
"RTN","ORWDBA3",189,0)
 F  S OBX=$O(@ORMSG@(OBX)) Q:OBX'>0  S J=$E(@ORMSG@(OBX),1,3) I J="DG1"!(J="ZCL"&($P(@ORMSG@(OBX),"|",2)=1)) D
"RTN","ORWDBA3",190,0)
 . S REC=@ORMSG@(OBX)
"RTN","ORWDBA3",191,0)
 . ; Setting DG1(#)=DXIEN where # is Dx sequence # (1=primary)
"RTN","ORWDBA3",192,0)
 . I J="DG1"&(NDX<4) S DG1($P(REC,"|",2))=$P(REC,U,4),NDX=NDX+1 Q
"RTN","ORWDBA3",193,0)
 . ; Create ZCL string of TxFs, e.g., 1101011
"RTN","ORWDBA3",194,0)
 . I J="ZCL" D
"RTN","ORWDBA3",195,0)
 .. S:$P(REC,"|",4)="" $P(REC,"|",4)=" "
"RTN","ORWDBA3",196,0)
 .. S $E(ZCL,$P(REC,"|",3))=$P(REC,"|",4)
"RTN","ORWDBA3",197,0)
 ; convert order and format from Table SD008 to GUI
"RTN","ORWDBA3",198,0)
 F I=1:1:NTF S TF=$P(TFGUI,U,I) F J=1:1:NTF I $P(TFTBL,U,J)=TF D
"RTN","ORWDBA3",199,0)
 . ; If patient does not have that Tx Factor (TF) then ghost in GUI ("N")
"RTN","ORWDBA3",200,0)
 . I '$D(SDCARYA(TF)) S GUITF=GUITF_"N" Q
"RTN","ORWDBA3",201,0)
 . ; If patient has TF then format for GUI (C=ck'd, U=unck'd, ?=not ans)
"RTN","ORWDBA3",202,0)
 . S VAL=$E(ZCL,J),GUITF=GUITF_$S(VAL=1:"C",VAL=0:"U",1:"?")
"RTN","ORWDBA3",203,0)
 ; Create output string in a format that can be stored by RCVORCI^ORWDBA1
"RTN","ORWDBA3",204,0)
 S ROUT(1)=ORIFN_";11"_GUITF_U_$G(DG1(1))_U_$G(DG1(2))_U_$G(DG1(3))_U_$G(DG1(4))
"RTN","ORWDBA3",205,0)
 ; Store diagnoses and treatment factors
"RTN","ORWDBA3",206,0)
 D RCVORCI^ORWDBA1(Y,.ROUT)
"RTN","ORWDBA3",207,0)
 Q
"RTN","ORWDBA3",208,0)
 ;
"RTN","ORWDBA3",209,0)
ERRMSG(VISIT) ; Error handling and message
"RTN","ORWDBA3",210,0)
 ; to be determined
"RTN","ORWDBA3",211,0)
 Q
"RTN","ORWDBA4")
0^19^B10287761
"RTN","ORWDBA4",1,0)
ORWDBA4 ; SLC/GU Billing Awareness - Phase II [11/26/04 15:44] ;05/23/12  10:37
"RTN","ORWDBA4",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**195,243,361**;Dec 17, 1997;Build 39
"RTN","ORWDBA4",3,0)
 ;
"RTN","ORWDBA4",4,0)
 ;Miscellaneous CIDC functions utility.
"RTN","ORWDBA4",5,0)
 ;
"RTN","ORWDBA4",6,0)
 ;External References used by this routine
"RTN","ORWDBA4",7,0)
 ;  $$GETS^DIQ            DBIA 2056
"RTN","ORWDBA4",8,0)
 ;  GETS^DIQ              DBIA 2056
"RTN","ORWDBA4",9,0)
 ;  $$ICDDX^ICDCODE       DBIA 3990
"RTN","ORWDBA4",10,0)
 ;  $$TFGBLGUI^ORWDBA1    DBIA none listed
"RTN","ORWDBA4",11,0)
 ;  $$SETDXD^ORWDBA2      DBIA none listed
"RTN","ORWDBA4",12,0)
 ;  $$NOW^XLFDT           DBIA 10103
"RTN","ORWDBA4",13,0)
 ;  $$GET^XPAR            DBIA 2263
"RTN","ORWDBA4",14,0)
 ;
"RTN","ORWDBA4",15,0)
GETTFCI(Y,ORIEN) ;Get Treatment Factors Clinical Indicators
"RTN","ORWDBA4",16,0)
 ;Input Variable:
"RTN","ORWDBA4",17,0)
 ;  ORIEN    Order Internal Entry Number (array variable)
"RTN","ORWDBA4",18,0)
 ;Ouput Variable:
"RTN","ORWDBA4",19,0)
 ;  Y        Y(AI)=Order_IEN^Treatment_Factors^ICD9^ICD9_Description
"RTN","ORWDBA4",20,0)
 ;           There can be up to 4 ICD9 codes and thier descriptions
"RTN","ORWDBA4",21,0)
 ;           ICD901^DESC01^ICD902^DESC02^ICD903^DESC03^ICD904^DESC04
"RTN","ORWDBA4",22,0)
 ;Local Variables:
"RTN","ORWDBA4",23,0)
 ;  AI       Array Index
"RTN","ORWDBA4",24,0)
 ;  CI       Clinical Index
"RTN","ORWDBA4",25,0)
 ;  TF       Treatment Factors
"RTN","ORWDBA4",26,0)
 ;  TFCI     Treatment Factors Clinical Indicators
"RTN","ORWDBA4",27,0)
 N AI,CI,CNT,DXS,TF,TFCI
"RTN","ORWDBA4",28,0)
 S U="^",(CNT,TF)=""
"RTN","ORWDBA4",29,0)
 F  S CNT=$O(ORIEN(CNT)) Q:CNT=""  D
"RTN","ORWDBA4",30,0)
 . S TF=$$GTF(ORIEN(CNT))
"RTN","ORWDBA4",31,0)
 . S DXS=$$GDCD(ORIEN(CNT))
"RTN","ORWDBA4",32,0)
 . I TF="NNNNNNNN"&(DXS="") Q
"RTN","ORWDBA4",33,0)
 . S TFCI(CNT)=ORIEN(CNT)_U_TF_$S(DXS="":"",1:U_DXS)
"RTN","ORWDBA4",34,0)
 M Y=TFCI
"RTN","ORWDBA4",35,0)
 Q
"RTN","ORWDBA4",36,0)
 ;
"RTN","ORWDBA4",37,0)
GTF(IEN) ;Get Treatment Factors
"RTN","ORWDBA4",38,0)
 ;Gets the Treatment Factors for the current order converted to the
"RTN","ORWDBA4",39,0)
 ;format used by the CPRS GUI display.
"RTN","ORWDBA4",40,0)
 ;
"RTN","ORWDBA4",41,0)
 ;Input Variable:
"RTN","ORWDBA4",42,0)
 ;  IEN     Internal Entry Number
"RTN","ORWDBA4",43,0)
 ;Local Variables:
"RTN","ORWDBA4",44,0)
 ;  ORTF    Order Record Treatment Factors
"RTN","ORWDBA4",45,0)
 ;  OREM    Order Record Error Message
"RTN","ORWDBA4",46,0)
 ;  OTF     Order Treatment Factors
"RTN","ORWDBA4",47,0)
 ;          (Converted to GUI values and returned)
"RTN","ORWDBA4",48,0)
 N ORTF,OREM,OTF
"RTN","ORWDBA4",49,0)
 S OTF=""
"RTN","ORWDBA4",50,0)
 D GETS^DIQ(100,IEN,"90;91;92;93;94;95;96;98","I","ORTF","OREM")
"RTN","ORWDBA4",51,0)
 S OTF=$G(ORTF(100,IEN_",",90,"I"))
"RTN","ORWDBA4",52,0)
 S OTF=OTF_U_$G(ORTF(100,IEN_",",91,"I"))
"RTN","ORWDBA4",53,0)
 S OTF=OTF_U_$G(ORTF(100,IEN_",",92,"I"))
"RTN","ORWDBA4",54,0)
 S OTF=OTF_U_$G(ORTF(100,IEN_",",93,"I"))
"RTN","ORWDBA4",55,0)
 S OTF=OTF_U_$G(ORTF(100,IEN_",",94,"I"))
"RTN","ORWDBA4",56,0)
 S OTF=OTF_U_$G(ORTF(100,IEN_",",95,"I"))
"RTN","ORWDBA4",57,0)
 S OTF=OTF_U_$G(ORTF(100,IEN_",",96,"I"))
"RTN","ORWDBA4",58,0)
 S OTF=OTF_U_$G(ORTF(100,IEN_",",98,"I"))
"RTN","ORWDBA4",59,0)
 S OTF=$$TFGBLGUI^ORWDBA1(OTF)
"RTN","ORWDBA4",60,0)
 I OTF'="NNNNNNNN" Q OTF
"RTN","ORWDBA4",61,0)
 S OTF=""
"RTN","ORWDBA4",62,0)
 K ORTF,OREM
"RTN","ORWDBA4",63,0)
 D GETS^DIQ(100,IEN,"51;52;53;54;55;56;57;58","I","ORTF","OREM")
"RTN","ORWDBA4",64,0)
 S OTF=$G(ORTF(100,IEN_",",51,"I"))
"RTN","ORWDBA4",65,0)
 S OTF=OTF_U_$G(ORTF(100,IEN_",",52,"I"))
"RTN","ORWDBA4",66,0)
 S OTF=OTF_U_$G(ORTF(100,IEN_",",53,"I"))
"RTN","ORWDBA4",67,0)
 S OTF=OTF_U_$G(ORTF(100,IEN_",",54,"I"))
"RTN","ORWDBA4",68,0)
 S OTF=OTF_U_$G(ORTF(100,IEN_",",55,"I"))
"RTN","ORWDBA4",69,0)
 S OTF=OTF_U_$G(ORTF(100,IEN_",",56,"I"))
"RTN","ORWDBA4",70,0)
 S OTF=OTF_U_$G(ORTF(100,IEN_",",57,"I"))
"RTN","ORWDBA4",71,0)
 S OTF=OTF_U_$G(ORTF(100,IEN_",",58,"I"))
"RTN","ORWDBA4",72,0)
 S OTF=$$TFGBLGUI^ORWDBA1(OTF)
"RTN","ORWDBA4",73,0)
 Q OTF
"RTN","ORWDBA4",74,0)
 ;
"RTN","ORWDBA4",75,0)
GDCD(IEN) ;Get Diagnoses Codes / Description
"RTN","ORWDBA4",76,0)
 ;Builds and returns a text string delimited by the "^". The text string
"RTN","ORWDBA4",77,0)
 ;made from the ICD9 codes associated with the current order and thier
"RTN","ORWDBA4",78,0)
 ;descriptions pulled from the ICD DIAGNOSIS file #80. The string can
"RTN","ORWDBA4",79,0)
 ;contain up to four diagnoses codes and thier descriptions. The string
"RTN","ORWDBA4",80,0)
 ;with all four possiable diagnoses codes is formatted:
"RTN","ORWDBA4",81,0)
 ;ICD901^DESC01^ICD902^DESC02^ICD903^DESC03^ICD904^DESC04
"RTN","ORWDBA4",82,0)
 ;
"RTN","ORWDBA4",83,0)
 ;Input Variable:
"RTN","ORWDBA4",84,0)
 ;  IEN
"RTN","ORWDBA4",85,0)
 ;Local Variables:
"RTN","ORWDBA4",86,0)
 ;  DCD      Diagnosis Code Description (retrun variable)
"RTN","ORWDBA4",87,0)
 ;  DXDT     Diagnosis Date (either Order date or system date)
"RTN","ORWDBA4",88,0)
 ;  DXD      Diagnosis Description
"RTN","ORWDBA4",89,0)
 ;  DXIEN    Diagnosis Internal Entry Number
"RTN","ORWDBA4",90,0)
 ;  ICD9     ICD9 code (for GUI display)
"RTN","ORWDBA4",91,0)
 ;  IENS     Internale Entry Number Sequence
"RTN","ORWDBA4",92,0)
 ;           (Array index variable for data returned from lookup)
"RTN","ORWDBA4",93,0)
 ;  ORRF     Order Record Found (returned data from lookup)
"RTN","ORWDBA4",94,0)
 ;  OREM     Order Record Error Message
"RTN","ORWDBA4",95,0)
 N DCD,DXDT,DXD,DXIEN,ICD9,IENS,ORRF,OREM
"RTN","ORWDBA4",96,0)
 S DCD=""
"RTN","ORWDBA4",97,0)
 D GETS^DIQ(100,IEN,".8*;5.1*","I","ORRF","OREM")
"RTN","ORWDBA4",98,0)
 I $D(ORRF) D
"RTN","ORWDBA4",99,0)
 . S DXDT=""
"RTN","ORWDBA4",100,0)
 . I $D(ORRF(100.008)) S DXDT=$G(ORRF(100.008,"1,"_IEN_",",.01,"I"))
"RTN","ORWDBA4",101,0)
 . I DXDT="" S DXDT=$$NOW^XLFDT
"RTN","ORWDBA4",102,0)
 . I $D(ORRF(100.051)) D
"RTN","ORWDBA4",103,0)
 .. S IENS="" F  S IENS=$O(ORRF(100.051,IENS)) Q:IENS=""  D
"RTN","ORWDBA4",104,0)
 ... I ORRF(100.051,IENS,.01,"I")="" S DCD=DCD_U Q
"RTN","ORWDBA4",105,0)
 ... S DXIEN=ORRF(100.051,IENS,.01,"I")
"RTN","ORWDBA4",106,0)
 ... S ICD9=$$GET1^DIQ(80,DXIEN,.01,"")
"RTN","ORWDBA4",107,0)
 ... S DXD=$$SETDXD^ORWDBA2($P($$ICDDATA^ICDXCODE("DIAGNOSIS",ICD9,DT),U,4))
"RTN","ORWDBA4",108,0)
 ... S DCD=$S(DCD="":ICD9_U_DXD,1:DCD_U_ICD9_U_DXD)
"RTN","ORWDBA4",109,0)
 Q DCD
"RTN","ORWDBA4",110,0)
 ;
"RTN","ORWDBA4",111,0)
GETBAUSR(Y,ORCIEN) ;GUI RPC CALL
"RTN","ORWDBA4",112,0)
 ;Get Billing Awareness By User parameter value
"RTN","ORWDBA4",113,0)
 ;Gets and returns the value of the Enabled Billing Awareness By User
"RTN","ORWDBA4",114,0)
 ;parameter assigned to a provider.
"RTN","ORWDBA4",115,0)
 ;Input Variable:
"RTN","ORWDBA4",116,0)
 ;  ORCIEN    Ordering Clinician's Internal Entry Number
"RTN","ORWDBA4",117,0)
 ;Output Variable:
"RTN","ORWDBA4",118,0)
 ;  Y         Parameter value, 1 if enabled, 0 if disabled
"RTN","ORWDBA4",119,0)
 S Y=$$GET^XPAR(ORCIEN_";VA(200,","OR BILLING AWARENESS BY USER",1,"Q")
"RTN","ORWDBA4",120,0)
 Q
"RTN","ORWDBA7")
0^20^B19319125
"RTN","ORWDBA7",1,0)
ORWDBA7 ;SLC/GSS Billing Awareness (CIDC-Clinical Indicators Data Capture) ;12/04/12  11:13
"RTN","ORWDBA7",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**195,215,243,361**;Dec 17, 1997;Build 39
"RTN","ORWDBA7",3,0)
 ;
"RTN","ORWDBA7",4,0)
 ;  External References:
"RTN","ORWDBA7",5,0)
 ;  $$CIDC^IBBAPI           ICR #4419
"RTN","ORWDBA7",6,0)
 ;  $$ICDDATA^ICDXCODE      ICR #5699
"RTN","ORWDBA7",7,0)
 ;  $$UPDOR^LRBEBA4         ICR #4775
"RTN","ORWDBA7",8,0)
 ;  $$EN^PSOHLNE3           ICR #4666
"RTN","ORWDBA7",9,0)
 ;  $$CPRSUPD^RABWORD1      ICR #4771
"RTN","ORWDBA7",10,0)
 ;  $$REPEAT^XLFSTR         ICR #10104
"RTN","ORWDBA7",11,0)
 ;
"RTN","ORWDBA7",12,0)
BDOEDIT ; Backdoor entered orders edit in CPRS - entry point
"RTN","ORWDBA7",13,0)
 ; Data Flow> Ancillary creates a back door order which is incomplete
"RTN","ORWDBA7",14,0)
 ;            and thus edited in CPRS GUI. The ancillary needs to know
"RTN","ORWDBA7",15,0)
 ;            what Dx and TF's are edited thus this tag calls three
"RTN","ORWDBA7",16,0)
 ;            ancillary APIs, passing the Dx and TF data to them.
"RTN","ORWDBA7",17,0)
 ;
"RTN","ORWDBA7",18,0)
 ; Variable  Description
"RTN","ORWDBA7",19,0)
 ; ANCILARY  Acronym of ancillary/package relative to order
"RTN","ORWDBA7",20,0)
 ; DXN       Diagnosis sequence number in ^OR file
"RTN","ORWDBA7",21,0)
 ; MSG       Error message
"RTN","ORWDBA7",22,0)
 ; ORDX      Array of diagnoses (1-n) with value from ICD file (#80)
"RTN","ORWDBA7",23,0)
 ; ORIFN     Order internal reference number (defined in ORCSEND)
"RTN","ORWDBA7",24,0)
 ; ORITEM    Package reference or ^OR(100,ORIFN,4)
"RTN","ORWDBA7",25,0)
 ; ORSCEI    String of Treatment Factors in table SD008 order/format
"RTN","ORWDBA7",26,0)
 ; PTIEN     Patient IEN
"RTN","ORWDBA7",27,0)
 ; TAGROU    Tag^Routine of ancillary routine to store edited data
"RTN","ORWDBA7",28,0)
 ; TFO       Treatment Factors in ^OR (GBL) order
"RTN","ORWDBA7",29,0)
 ;
"RTN","ORWDBA7",30,0)
 ; If CIDC master switch set, then no back door orders to store
"RTN","ORWDBA7",31,0)
 I $$BASTAT^ORWDBA1=0 Q  ;CIDC (nee BA) not used
"RTN","ORWDBA7",32,0)
 ; If ORIFN not defined (God only knows why) then log error and quit
"RTN","ORWDBA7",33,0)
 I '$D(ORIFN) S MSG="ORIFN not defined" D VAR,EN^ORERR(MSG,"",.VAR) Q
"RTN","ORWDBA7",34,0)
 ;
"RTN","ORWDBA7",35,0)
 N ANCILARY,DXN,MSG,ORDX,ORITEM,ORSCEI,PTIEN,RT,SUCCESS,TAGROU,TFO,VAR
"RTN","ORWDBA7",36,0)
 ;
"RTN","ORWDBA7",37,0)
 S DXN=0,(RT,SUCCESS)="",PTIEN=+$P($G(^OR(100,ORIFN,0)),U,2)
"RTN","ORWDBA7",38,0)
 ; Package (ancillary) reference data
"RTN","ORWDBA7",39,0)
 S ORITEM=$G(^OR(100,ORIFN,4))
"RTN","ORWDBA7",40,0)
 ; Create an array (ORDX) of diagnoses
"RTN","ORWDBA7",41,0)
 F  S DXN=$O(^OR(100,ORIFN,5.1,DXN)) Q:'DXN  D
"RTN","ORWDBA7",42,0)
 . S ORDX(DXN)=$G(^OR(100,ORIFN,5.1,DXN,0))
"RTN","ORWDBA7",43,0)
 ; Treatment Factors - converted and reformatted
"RTN","ORWDBA7",44,0)
 S ORSCEI=$$TFGBLTBL($G(^OR(100,ORIFN,5.2)))
"RTN","ORWDBA7",45,0)
 ; Get the acronym of the package generating this order
"RTN","ORWDBA7",46,0)
 S ANCILARY=$P($G(^DIC(9.4,$P($G(^OR(100,ORIFN,0)),U,14),0)),U,2)
"RTN","ORWDBA7",47,0)
 ; Send data to the appropriate ancillary API based on package
"RTN","ORWDBA7",48,0)
 D OUTPUT
"RTN","ORWDBA7",49,0)
 ; If ancillary routine or tag w/in the routine doesn't exist check
"RTN","ORWDBA7",50,0)
 I 'RT D
"RTN","ORWDBA7",51,0)
 . S MSG="NON-EXISTANT ROUTINE/TAG FOR "_ANCILARY
"RTN","ORWDBA7",52,0)
 . D VAR,EN^ORERR(MSG,"",.VAR)
"RTN","ORWDBA7",53,0)
 ; If we don't get back a thumbs-up from the ancillary re: the order data
"RTN","ORWDBA7",54,0)
 I 'SUCCESS,RT D
"RTN","ORWDBA7",55,0)
 . S MSG="ANCILLARY API RETURNED ERROR FOR CPRS EDITED BACK DOOR DATA"
"RTN","ORWDBA7",56,0)
 . D VAR,EN^ORERR(MSG,"",.VAR)
"RTN","ORWDBA7",57,0)
 Q
"RTN","ORWDBA7",58,0)
 ;
"RTN","ORWDBA7",59,0)
OUTPUT ; Call ancillary's API to store data after checking for it's existence
"RTN","ORWDBA7",60,0)
 ;
"RTN","ORWDBA7",61,0)
 ; Laboratory
"RTN","ORWDBA7",62,0)
 I ANCILARY?1"LR".U D  Q
"RTN","ORWDBA7",63,0)
 . S RT=$$CKROUTAG("UPDOR^LRBEBA4") Q:'RT
"RTN","ORWDBA7",64,0)
 . S SUCCESS=$$UPDOR^LRBEBA4(PTIEN,ORITEM,ORIFN,.ORDX,ORSCEI)  ;IA 4775
"RTN","ORWDBA7",65,0)
 ;
"RTN","ORWDBA7",66,0)
 ; Pharmacy
"RTN","ORWDBA7",67,0)
 I ANCILARY?1"PS".U D  Q
"RTN","ORWDBA7",68,0)
 . S RT=$$CKROUTAG("EN^PSOHLNE3") Q:'RT
"RTN","ORWDBA7",69,0)
 . S SUCCESS=$$EN^PSOHLNE3(PTIEN,ORITEM,ORIFN,.ORDX,ORSCEI)  ;IA 4666
"RTN","ORWDBA7",70,0)
 ;
"RTN","ORWDBA7",71,0)
 ; Radiolgy
"RTN","ORWDBA7",72,0)
 I ANCILARY?1"RA".U D  Q
"RTN","ORWDBA7",73,0)
 . S RT=$$CKROUTAG("CPRSUPD^RABWORD1") Q:'RT
"RTN","ORWDBA7",74,0)
 . S SUCCESS=$$CPRSUPD^RABWORD1(PTIEN,ORITEM,ORIFN,.ORDX,ORSCEI) ;IA 4771
"RTN","ORWDBA7",75,0)
 Q
"RTN","ORWDBA7",76,0)
 ;
"RTN","ORWDBA7",77,0)
CKROUTAG(TAGROU) ;Check if valid tag and routine
"RTN","ORWDBA7",78,0)
 ; Temporary check until all the ancillaries have their API's built
"RTN","ORWDBA7",79,0)
 Q $L($T(@TAGROU))
"RTN","ORWDBA7",80,0)
 ;
"RTN","ORWDBA7",81,0)
TFGBLTBL(GBL) ;Convert Tx Factors from Global to TBL (HL7) order & format
"RTN","ORWDBA7",82,0)
 ; Note: this does not set Tx Factors in ZCL segment format but rather
"RTN","ORWDBA7",83,0)
 ;       AO^IR^SC^EC^MST^HNC^CV^SHD ('^' delimited string) format
"RTN","ORWDBA7",84,0)
 ;
"RTN","ORWDBA7",85,0)
 ; Input:  GBL in 1^1^0^0^^^0^ (global) format
"RTN","ORWDBA7",86,0)
 ; Output: TBL in 0^0^1^^1^^0^ (TBL) format (also reordered)
"RTN","ORWDBA7",87,0)
 ;
"RTN","ORWDBA7",88,0)
 N J,NTF,TBL,TF,TFGBL,TFGUI,TFTBL
"RTN","ORWDBA7",89,0)
 S TBL="",NTF=8  ;NCI=# of TxF
"RTN","ORWDBA7",90,0)
 ; Get Treatment Factor sequence order strings
"RTN","ORWDBA7",91,0)
 D TFSTGS^ORWDBA1
"RTN","ORWDBA7",92,0)
 ; Convert from GBL to TBL format and sequence
"RTN","ORWDBA7",93,0)
 F J=1:1:NTF S TF=$P(GBL,U,J) D
"RTN","ORWDBA7",94,0)
 . ;OK..just in case there is a '?' we'll return a null for a '?'
"RTN","ORWDBA7",95,0)
 . S TF($P(TFGBL,U,J))=$S(TF=1:1,TF=0:0,TF="?":"",1:"")
"RTN","ORWDBA7",96,0)
 F J=1:1:NTF S TBL=TBL_U_TF($P(TFTBL,U,J))
"RTN","ORWDBA7",97,0)
 ; Remove the first '^' and pass TBL formatted TF's
"RTN","ORWDBA7",98,0)
 Q $E(TBL,2,99)
"RTN","ORWDBA7",99,0)
 ;
"RTN","ORWDBA7",100,0)
VAR ;Create VAR array for tracking error in ^ORYX("ORERR",err#)
"RTN","ORWDBA7",101,0)
 S VAR("DFN")=PTIEN
"RTN","ORWDBA7",102,0)
 S VAR("ORITEM")=ORITEM
"RTN","ORWDBA7",103,0)
 S VAR("ORIFN")=ORIFN
"RTN","ORWDBA7",104,0)
 M VAR("ORDX")=ORDX
"RTN","ORWDBA7",105,0)
 S VAR("ORSCEI")=ORSCEI
"RTN","ORWDBA7",106,0)
 Q
"RTN","ORWDBA7",107,0)
 ;
"RTN","ORWDBA7",108,0)
ISWITCH(Y,DFN) ;Return 0 if don't ask (no ins) or 1 to ask CIDC quest (yes ins)
"RTN","ORWDBA7",109,0)
 S Y=$$CIDC^IBBAPI(DFN)
"RTN","ORWDBA7",110,0)
 Q
"RTN","ORWDBA7",111,0)
 ;
"RTN","ORWDBA7",112,0)
GETIEN9(Y,ICD9) ;Return IEN for an ICD9 code (RPC: ORWDBA7 GETIEN9)
"RTN","ORWDBA7",113,0)
 S Y=+$$ICDDATA^ICDXCODE("DIAGNOSIS",ICD9,DT)
"RTN","ORWDBA7",114,0)
 Q
"RTN","ORWDBA7",115,0)
 ;
"RTN","ORWDBA7",116,0)
CONDTLD ;Consult Detailed Display Compile for CIDC/BA (called by GMRCSLM2)
"RTN","ORWDBA7",117,0)
 ; Input:  ORIFN and GMRCCT defined in GMRCSLM2
"RTN","ORWDBA7",118,0)
 ; Output: CIDCARY = array of CIDC display lines for GMRCSLM2 display
"RTN","ORWDBA7",119,0)
 N BGNRCCT,DXIEN,DXOF,DXV,EYE,ICD9,ICDR,LINE,OCT,ORFMDAT,TF,CIDCARY
"RTN","ORWDBA7",120,0)
 S BGNRCCT=GMRCCT,OCT=0
"RTN","ORWDBA7",121,0)
 ; Get the date of the order for CSV/CTD usage
"RTN","ORWDBA7",122,0)
 S ORFMDAT=$$ORFMDAT^ORWDBA3(ORIFN)
"RTN","ORWDBA7",123,0)
 ; $O through diagnoses for an order
"RTN","ORWDBA7",124,0)
 F  S OCT=$O(^OR(100,ORIFN,5.1,OCT)) Q:OCT'?1N.N  D
"RTN","ORWDBA7",125,0)
 . S DXOF="               "
"RTN","ORWDBA7",126,0)
 . ; DXIEN=Dx IEN
"RTN","ORWDBA7",127,0)
 . S DXIEN=+^OR(100,ORIFN,5.1,OCT,0)
"RTN","ORWDBA7",128,0)
 . ; Get Dx record for date ORFMDAT
"RTN","ORWDBA7",129,0)
 . S ICDR=$$ICDDATA^ICDXCODE("DIAGNOSIS",DXIEN,ORFMDAT)
"RTN","ORWDBA7",130,0)
 . ; Get Dx verbiage and ICD code
"RTN","ORWDBA7",131,0)
 . S DXV=$P(ICDR,U,4),ICD9=$P(ICDR,U,2)
"RTN","ORWDBA7",132,0)
 . I OCT=1 D
"RTN","ORWDBA7",133,0)
 .. S CIDCARY(GMRCCT,0)=" ",GMRCCT=GMRCCT+1 ;blank line
"RTN","ORWDBA7",134,0)
 .. S CIDCARY(GMRCCT,0)="Clinical Indicators",GMRCCT=GMRCCT+1
"RTN","ORWDBA7",135,0)
 .. S DXOF="Diagnosis of:  "
"RTN","ORWDBA7",136,0)
 . S LINE=DXOF_ICD9_" - "_DXV
"RTN","ORWDBA7",137,0)
 . S CIDCARY(GMRCCT,0)=LINE,GMRCCT=GMRCCT+1
"RTN","ORWDBA7",138,0)
 I OCT'="" D  ;if there are diagnoses then show Treatment Factors
"RTN","ORWDBA7",139,0)
 . S LINE="For conditions related to:    "
"RTN","ORWDBA7",140,0)
 . F EYE=1:1:8 S TF=$P(^OR(100,ORIFN,5.2),U,EYE) I TF D
"RTN","ORWDBA7",141,0)
 .. S CIDCARY(GMRCCT,0)=LINE_$$SC^ORQ21(EYE)
"RTN","ORWDBA7",142,0)
 .. S X=$$REPEAT^XLFSTR(" ",30),GMRCCT=GMRCCT+1
"RTN","ORWDBA7",143,0)
 Q
"RTN","ORWGAPIA")
0^21^B38611591
"RTN","ORWGAPIA",1,0)
ORWGAPIA ; SLC/STAFF - Graph Application Calls ;07/16/13  13:20
"RTN","ORWGAPIA",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**215,251,260,243,372,361**;Dec 17, 1997;Build 39
"RTN","ORWGAPIA",3,0)
 ;
"RTN","ORWGAPIA",4,0)
 ;  External References:
"RTN","ORWGAPIA",5,0)
 ;  $$ICDDATA^ICDXCODE      ICR #5699
"RTN","ORWGAPIA",6,0)
 ;  $$CPT^ICPTCOD           ICR #1995
"RTN","ORWGAPIA",7,0)
 ;  $$DOCCLASS^TIULC1       ICR #3548
"RTN","ORWGAPIA",8,0)
 ;  $$HASDOCMT^TIULX        ICR #4315
"RTN","ORWGAPIA",9,0)
 ;  $$ISA^USRLM             ICR #1544
"RTN","ORWGAPIA",10,0)
 ;
"RTN","ORWGAPIA",11,0)
ADMITX(DFN) ; $$(dfn) -> 1 if patient has data else 0
"RTN","ORWGAPIA",12,0)
 Q $O(^DGPM("C",+$G(DFN),0))>0
"RTN","ORWGAPIA",13,0)
 ;
"RTN","ORWGAPIA",14,0)
ALLERGYX(DFN) ; $$(dfn) -> 1 if patient has data else 0
"RTN","ORWGAPIA",15,0)
 Q $O(^GMR(120.8,"B",+$G(DFN),0))>0
"RTN","ORWGAPIA",16,0)
 ;
"RTN","ORWGAPIA",17,0)
ALLG(IEN) ; $$(ien) -> external display of allergies
"RTN","ORWGAPIA",18,0)
 I IEN Q $P($G(^GMRD(120.83,IEN,0)),U) ; this is for rxn, allergy is free text
"RTN","ORWGAPIA",19,0)
 Q IEN
"RTN","ORWGAPIA",20,0)
 ;
"RTN","ORWGAPIA",21,0)
CPT(NODE,ORVALUE,VALUES) ; from ORWGAPI4
"RTN","ORWGAPIA",22,0)
 D VCPT^PXPXRM(NODE,.ORVALUE)
"RTN","ORWGAPIA",23,0)
 S VALUES=$$DATA^ORWGAPIW(.ORVALUE) ;*****************************
"RTN","ORWGAPIA",24,0)
 Q
"RTN","ORWGAPIA",25,0)
 ;
"RTN","ORWGAPIA",26,0)
DISCH(IEN) ; $$(pt movement ien) -> discharge date
"RTN","ORWGAPIA",27,0)
 Q $P($G(^DGPM(+$P($G(^DGPM(+$G(IEN),0)),U,17),0)),U)
"RTN","ORWGAPIA",28,0)
 ;
"RTN","ORWGAPIA",29,0)
DOCCLASS(DOCTYPE) ; $$(doc type) -> ien of tiu doc class
"RTN","ORWGAPIA",30,0)
 N CONSULTS
"RTN","ORWGAPIA",31,0)
 S DOCTYPE=$E(DOCTYPE,1)
"RTN","ORWGAPIA",32,0)
 I DOCTYPE="P" Q 3
"RTN","ORWGAPIA",33,0)
 I DOCTYPE="D" Q 244
"RTN","ORWGAPIA",34,0)
 I DOCTYPE="C" D CNSLCLAS^TIUSRVD(.CONSULTS) Q CONSULTS
"RTN","ORWGAPIA",35,0)
 Q 0
"RTN","ORWGAPIA",36,0)
 ;
"RTN","ORWGAPIA",37,0)
EDU(NODE,ORVALUE,VALUES) ; from ORWGAPI4
"RTN","ORWGAPIA",38,0)
 D VPEDU^PXPXRM(NODE,.ORVALUE)
"RTN","ORWGAPIA",39,0)
 S VALUES=$$DATA^ORWGAPIW(.ORVALUE) ;*****************************
"RTN","ORWGAPIA",40,0)
 Q
"RTN","ORWGAPIA",41,0)
 ;
"RTN","ORWGAPIA",42,0)
EXAM(NODE,ORVALUE,VALUES) ; from ORWGAPI4
"RTN","ORWGAPIA",43,0)
 D VXAM^PXPXRM(NODE,.ORVALUE)
"RTN","ORWGAPIA",44,0)
 S VALUES=$$DATA^ORWGAPIW(.ORVALUE) ;*****************************
"RTN","ORWGAPIA",45,0)
 Q
"RTN","ORWGAPIA",46,0)
 ;
"RTN","ORWGAPIA",47,0)
GETTIU(ORDATA,IEN) ; from ORWGAPID
"RTN","ORWGAPIA",48,0)
 D TGET^TIUSRVR1(.ORDATA,IEN)
"RTN","ORWGAPIA",49,0)
 Q
"RTN","ORWGAPIA",50,0)
 ;
"RTN","ORWGAPIA",51,0)
HF(NODE,ORVALUE,VALUES) ; from ORWGAPI4
"RTN","ORWGAPIA",52,0)
 D VHF^PXPXRM(NODE,.ORVALUE)
"RTN","ORWGAPIA",53,0)
 S VALUES=$$DATA^ORWGAPIW(.ORVALUE) ;*****************************
"RTN","ORWGAPIA",54,0)
 Q
"RTN","ORWGAPIA",55,0)
 ;
"RTN","ORWGAPIA",56,0)
ICD0(IEN) ; $$(ien) -> external display of IDC0
"RTN","ORWGAPIA",57,0)
 N INFO
"RTN","ORWGAPIA",58,0)
 S INFO=$$ICDDATA^ICDXCODE("PROCEDURE",IEN,DT)
"RTN","ORWGAPIA",59,0)
 I INFO<0 Q ""
"RTN","ORWGAPIA",60,0)
 Q $P(INFO,U,2)_" "_$P(INFO,U,5)
"RTN","ORWGAPIA",61,0)
 ;
"RTN","ORWGAPIA",62,0)
ICD9(IEN) ; $$(ien) -> external display of IDC9
"RTN","ORWGAPIA",63,0)
 N INFO
"RTN","ORWGAPIA",64,0)
 S INFO=$$ICDDATA^ICDXCODE("DIAGNOSIS",IEN,DT)
"RTN","ORWGAPIA",65,0)
 I INFO<0 Q ""
"RTN","ORWGAPIA",66,0)
 Q $P(INFO,U,2)_" "_$P(INFO,U,4)
"RTN","ORWGAPIA",67,0)
 ;
"RTN","ORWGAPIA",68,0)
ICPT(IEN,CSD) ; $$(ien) -> external display of CPT
"RTN","ORWGAPIA",69,0)
 N X S X=$$CPT^ICPTCOD($G(IEN),$G(CSD))
"RTN","ORWGAPIA",70,0)
 Q $P(X,U,2)_" "_$E($P(X,U,3),1,30)
"RTN","ORWGAPIA",71,0)
 ;
"RTN","ORWGAPIA",72,0)
IMM(NODE,ORVALUE,VALUES) ; from ORWGAPI4
"RTN","ORWGAPIA",73,0)
 D VIMM^PXPXRM(NODE,.ORVALUE)
"RTN","ORWGAPIA",74,0)
 S VALUES=$$DATA^ORWGAPIW(.ORVALUE) ;*****************************
"RTN","ORWGAPIA",75,0)
 Q
"RTN","ORWGAPIA",76,0)
 ;
"RTN","ORWGAPIA",77,0)
ISA(USER,CLASS,ORERR) ; $$(user,user class,err) -> 1 if user in class, else 0
"RTN","ORWGAPIA",78,0)
 Q $$ISA^USRLM(USER,CLASS,.ORERR)
"RTN","ORWGAPIA",79,0)
 ;
"RTN","ORWGAPIA",80,0)
LOS(DGPMIFN) ; $$(pt movement ien) -> length of stay
"RTN","ORWGAPIA",81,0)
 N X D ^DGPMLOS
"RTN","ORWGAPIA",82,0)
 Q +$P($G(X),U,5)
"RTN","ORWGAPIA",83,0)
 ;
"RTN","ORWGAPIA",84,0)
MEDICINE(ARRAY,DFN) ;
"RTN","ORWGAPIA",85,0)
 N DATE,FILE,IEN,NAME,NUM,REF,VALUES,XREF
"RTN","ORWGAPIA",86,0)
 K ARRAY,^TMP("MCAR",$J),^TMP("OR",$J,"MCAR")
"RTN","ORWGAPIA",87,0)
 D FILE^ORWGAPIU(690,.REF,.XREF)
"RTN","ORWGAPIA",88,0)
 I '$L(REF) Q
"RTN","ORWGAPIA",89,0)
 I $E(REF,$L(REF))="," S REF=$E(REF,1,$L(REF)-1)_")"
"RTN","ORWGAPIA",90,0)
 I $E(REF,$L(REF))="(" S REF=$P(REF,"(")
"RTN","ORWGAPIA",91,0)
 D EN^MCARPS2(DFN)
"RTN","ORWGAPIA",92,0)
 S NUM=0
"RTN","ORWGAPIA",93,0)
 F  S NUM=$O(^TMP("OR",$J,"MCAR","OT",NUM)) Q:NUM<1  D
"RTN","ORWGAPIA",94,0)
 . S VALUES=^TMP("OR",$J,"MCAR","OT",NUM)
"RTN","ORWGAPIA",95,0)
 . S DATE=$$DATETFM^ORWGAPIW($P(VALUES,U,6))
"RTN","ORWGAPIA",96,0)
 . S NAME=$P(VALUES,U) I '$L(NAME) Q
"RTN","ORWGAPIA",97,0)
 . S IEN=+$O(@REF@(XREF,NAME,""))
"RTN","ORWGAPIA",98,0)
 . I DATE,IEN S ARRAY(IEN,DATE)=NAME
"RTN","ORWGAPIA",99,0)
 K ^TMP("MCAR",$J),^TMP("OR",$J,"MCAR")
"RTN","ORWGAPIA",100,0)
 Q
"RTN","ORWGAPIA",101,0)
 ;
"RTN","ORWGAPIA",102,0)
MEDVAL(VAL) ;
"RTN","ORWGAPIA",103,0)
 N IEN,NAME,NAMES,REF,SEQ,XREF K NAMES,VAL
"RTN","ORWGAPIA",104,0)
 D FILE^ORWGAPIU(690,.REF,.XREF)
"RTN","ORWGAPIA",105,0)
 I '$L(REF) Q
"RTN","ORWGAPIA",106,0)
 I $E(REF,$L(REF))="," S REF=$E(REF,1,$L(REF)-1)_")"
"RTN","ORWGAPIA",107,0)
 I $E(REF,$L(REF))="(" S REF=$P(REF,"(")
"RTN","ORWGAPIA",108,0)
 S NAME=""
"RTN","ORWGAPIA",109,0)
 F  S NAME=$O(@REF@(XREF,NAME)) Q:NAME=""  D
"RTN","ORWGAPIA",110,0)
 . S IEN=0
"RTN","ORWGAPIA",111,0)
 . F  S IEN=$O(@REF@(XREF,NAME,IEN)) Q:IEN<1  D
"RTN","ORWGAPIA",112,0)
 .. S NAMES(IEN)=NAME
"RTN","ORWGAPIA",113,0)
 S SEQ=0
"RTN","ORWGAPIA",114,0)
 S IEN=0
"RTN","ORWGAPIA",115,0)
 F  S IEN=$O(NAMES(IEN)) Q:IEN<1  D
"RTN","ORWGAPIA",116,0)
 . S SEQ=SEQ+1
"RTN","ORWGAPIA",117,0)
 . S VAL(SEQ)=690_U_IEN_U_NAMES(IEN)
"RTN","ORWGAPIA",118,0)
 Q
"RTN","ORWGAPIA",119,0)
 ;
"RTN","ORWGAPIA",120,0)
MH(ORVALUE,NODE,VALUES) ; from ORWGAPI4
"RTN","ORWGAPIA",121,0)
 D ENDAS^YTAPI10(.ORVALUE,NODE)
"RTN","ORWGAPIA",122,0)
 S VALUES=$$DATA^ORWGAPIW(.ORVALUE) ;*****************************
"RTN","ORWGAPIA",123,0)
 Q
"RTN","ORWGAPIA",124,0)
 ;
"RTN","ORWGAPIA",125,0)
NOTEX(DFN) ; $$(dfn) -> 1 if patient has data else 0
"RTN","ORWGAPIA",126,0)
 Q $$HASDOCMT^TIULX($G(DFN))
"RTN","ORWGAPIA",127,0)
 ;
"RTN","ORWGAPIA",128,0)
OITEM(DATA) ; API - get order display groups   -  from ORWGAPI
"RTN","ORWGAPIA",129,0)
 N CNT,IEN,RESULT,TMP,ZERO
"RTN","ORWGAPIA",130,0)
 D RETURN^ORWGAPIW(.TMP,.DATA)
"RTN","ORWGAPIA",131,0)
 S CNT=0
"RTN","ORWGAPIA",132,0)
 S IEN=0
"RTN","ORWGAPIA",133,0)
 F  S IEN=$O(^ORD(100.98,IEN)) Q:IEN<1  D
"RTN","ORWGAPIA",134,0)
 . S ZERO=$G(^ORD(100.98,IEN,0)) I '$L(ZERO) Q
"RTN","ORWGAPIA",135,0)
 . S RESULT="100.98^"_IEN_U_$P(ZERO,U)_U_$P(ZERO,U,3)
"RTN","ORWGAPIA",136,0)
 . D SETUP^ORWGAPIW(.DATA,RESULT,TMP,.CNT)
"RTN","ORWGAPIA",137,0)
 Q
"RTN","ORWGAPIA",138,0)
 ;
"RTN","ORWGAPIA",139,0)
POV(NODE,ORVALUE,VALUES) ; from ORWGAPI4
"RTN","ORWGAPIA",140,0)
 D VPOV^PXPXRM(NODE,.ORVALUE)
"RTN","ORWGAPIA",141,0)
 S VALUES=$$DATA^ORWGAPIW(.ORVALUE) ;*****************************
"RTN","ORWGAPIA",142,0)
 Q
"RTN","ORWGAPIA",143,0)
 ;
"RTN","ORWGAPIA",144,0)
PROB(GMPLLEX,GMPLSTAT,GMPLICD,GMPLODAT,GMPLXDAT,NODE) ; from ORWGAPI4
"RTN","ORWGAPIA",145,0)
 N GMPLPNAM,GMPLDLM,GMPLTXT,GMPLCOND,GMPLPRV,GMPLPRIO
"RTN","ORWGAPIA",146,0)
 D CALL2^GMPLUTL3(NODE)
"RTN","ORWGAPIA",147,0)
 Q
"RTN","ORWGAPIA",148,0)
 ;
"RTN","ORWGAPIA",149,0)
PTF(NODE,ORVALUE,VALUES) ; from ORWGAPI3, ORWGAPI4
"RTN","ORWGAPIA",150,0)
 D PTF^DGPTPXRM(NODE,.ORVALUE)
"RTN","ORWGAPIA",151,0)
 S VALUES=$$DATA^ORWGAPIW(.ORVALUE) ;*****************************
"RTN","ORWGAPIA",152,0)
 Q
"RTN","ORWGAPIA",153,0)
 ;
"RTN","ORWGAPIA",154,0)
RAD(NODE,ORVALUE,VALUES) ; from ORWGAPI3
"RTN","ORWGAPIA",155,0)
 D EN1^RAPXRM(NODE,.ORVALUE)
"RTN","ORWGAPIA",156,0)
 S VALUES=$$DATA^ORWGAPIW(.ORVALUE) ;*****************************
"RTN","ORWGAPIA",157,0)
 Q
"RTN","ORWGAPIA",158,0)
 ;
"RTN","ORWGAPIA",159,0)
SKIN(NODE,ORVALUE,VALUES) ; from ORWGAPI4
"RTN","ORWGAPIA",160,0)
 D VSKIN^PXPXRM(NODE,.ORVALUE)
"RTN","ORWGAPIA",161,0)
 S VALUES=$$DATA^ORWGAPIW(.ORVALUE) ;*****************************
"RTN","ORWGAPIA",162,0)
 Q
"RTN","ORWGAPIA",163,0)
 ;
"RTN","ORWGAPIA",164,0)
SURG(ORSURG,DFN,VALUES) ; from ORWGAPI2, ORWGAPI4
"RTN","ORWGAPIA",165,0)
 D GET^SROGTSR(.ORSURG,DFN)
"RTN","ORWGAPIA",166,0)
 S VALUES=$$DATA^ORWGAPIW(.ORSURG) ;*****************************
"RTN","ORWGAPIA",167,0)
 Q
"RTN","ORWGAPIA",168,0)
 ;
"RTN","ORWGAPIA",169,0)
SURGX(DFN) ; $$(dfn) -> 1 if patient has data else 0
"RTN","ORWGAPIA",170,0)
 Q $O(^SRF("B",+$G(DFN),0))>0
"RTN","ORWGAPIA",171,0)
 ;
"RTN","ORWGAPIA",172,0)
TAX(IEN) ; $$(ien) -> external display of reminder taxonomy
"RTN","ORWGAPIA",173,0)
 Q $P($G(^PXD(811.2,+$G(IEN),0)),U)
"RTN","ORWGAPIA",174,0)
 ;
"RTN","ORWGAPIA",175,0)
TITLE(DOCTYPE) ; $$(document type) -> parent ien^parent^parent abbrev
"RTN","ORWGAPIA",176,0)
 N IEN,RESULTS K RESULTS
"RTN","ORWGAPIA",177,0)
 S DOCTYPE=+$G(^TIU(8925,+$G(DOCTYPE),0))
"RTN","ORWGAPIA",178,0)
 S IEN=+$$DOCCLASS^TIULC1(DOCTYPE) I 'IEN Q ""
"RTN","ORWGAPIA",179,0)
 D GETDATA^ORWGAPIX(.RESULTS,8925.1,".01;.02",IEN)
"RTN","ORWGAPIA",180,0)
 I '$L($G(RESULTS(.01))) Q ""
"RTN","ORWGAPIA",181,0)
 Q IEN_U_"note - "_RESULTS(.01)_U_$G(RESULTS(.02))
"RTN","ORWGAPIA",182,0)
 ;
"RTN","ORWGAPIA",183,0)
TIU(ORVALUE,DOCIEN,ONE,DFN,OLDEST,NEWEST) ; from ORWGAPI1, ORWGAPI3
"RTN","ORWGAPIA",184,0)
 D CONTEXT^TIUSRVLO(.ORVALUE,DOCIEN,ONE,DFN,$G(OLDEST),$G(NEWEST))
"RTN","ORWGAPIA",185,0)
 Q
"RTN","ORWGAPIA",186,0)
 ;
"RTN","ORWGAPIA",187,0)
TIUTITLE(DATA) ; API - get tiu document titles   - from ORWGAPI
"RTN","ORWGAPIA",188,0)
 N CNT,IEN,RESULT,RESULTS,TMP K ^TMP("TIUTLS",$J)
"RTN","ORWGAPIA",189,0)
 D RETURN^ORWGAPIW(.TMP,.DATA)
"RTN","ORWGAPIA",190,0)
 S CNT=0
"RTN","ORWGAPIA",191,0)
 D TITLIENS^TIULX
"RTN","ORWGAPIA",192,0)
 S IEN=0
"RTN","ORWGAPIA",193,0)
 F  S IEN=$O(^TMP("TIUTLS",$J,IEN)) Q:IEN<1  D
"RTN","ORWGAPIA",194,0)
 . K RESULTS
"RTN","ORWGAPIA",195,0)
 . D GETDATA^ORWGAPIX(.RESULTS,8925.1,".01;.02",IEN)
"RTN","ORWGAPIA",196,0)
 . I '$L($G(RESULTS(.01))) Q
"RTN","ORWGAPIA",197,0)
 . S RESULT="8925.1^"_IEN_U_RESULTS(.01)_U_$G(RESULTS(.02))
"RTN","ORWGAPIA",198,0)
 . D SETUP^ORWGAPIW(.DATA,RESULT,TMP,.CNT)
"RTN","ORWGAPIA",199,0)
 K ^TMP("TIUTLS",$J)
"RTN","ORWGAPIA",200,0)
 Q
"RTN","ORWGAPIA",201,0)
 ;
"RTN","ORWGAPIA",202,0)
VISITX(DFN) ; $$(dfn) -> 1 if patient has data else 0
"RTN","ORWGAPIA",203,0)
 Q $O(^AUPNVSIT("AET",+$G(DFN),0))>0
"RTN","ORWGAPIA",204,0)
 ;
"RTN","ORWGAPIA",205,0)
VITAL(ORVALUE,NODE,VALUES) ; from ORWGAPI4
"RTN","ORWGAPIA",206,0)
 D EN^GMVPXRM(.ORVALUE,NODE)
"RTN","ORWGAPIA",207,0)
 S VALUES=$$DATA^ORWGAPIW(.ORVALUE) ;*****************************
"RTN","ORWGAPIA",208,0)
 Q
"RTN","ORWGAPIA",209,0)
 ;
"RTN","ORWIB")
1^24
"RTN","ORWPCE")
0^2^B60062605
"RTN","ORWPCE",1,0)
ORWPCE ; SLC/JM/REV - wrap calls to PCE and AICS ;11/05/13  10:00
"RTN","ORWPCE",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,173,190,195,215,243,295,280,306,361**;Dec 17, 1997;Build 39
"RTN","ORWPCE",3,0)
 ;
"RTN","ORWPCE",4,0)
 ; DBIA 2950   LOOK^LEXA          ^TMP("LEXFND",$J)
"RTN","ORWPCE",5,0)
 ; DBIA 1609   CONFIG^LEXSET      ^TMP("LEXSCH",$J)
"RTN","ORWPCE",6,0)
 ; DBIA 1365   DSELECT^GMPLENFM   ^TMP("IB",$J)
"RTN","ORWPCE",7,0)
 ; DBIA 1296   GETLST^IBDF18A
"RTN","ORWPCE",8,0)
 ; DBIA 5699   $$ICDDESC^ICDXCODE
"RTN","ORWPCE",9,0)
 ;
"RTN","ORWPCE",10,0)
 Q
"RTN","ORWPCE",11,0)
VISIT(LST,CLINIC,ORDATE) ; get list of visit types for clinic
"RTN","ORWPCE",12,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",13,0)
 D GETLST^IBDF18A(CLINIC,"DG SELECT VISIT TYPE CPT PROCEDURES","LST",,,,ORDATE)
"RTN","ORWPCE",14,0)
 Q
"RTN","ORWPCE",15,0)
PROC(LST,CLINIC,ORDATE) ; get list of procedures for clinic P12 for CPTMods
"RTN","ORWPCE",16,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",17,0)
 D GETLST^IBDF18A(CLINIC,"DG SELECT CPT PROCEDURE CODES","LST",,,1,ORDATE)
"RTN","ORWPCE",18,0)
 N IDX,MOD,CODES,FIRST S IDX=0
"RTN","ORWPCE",19,0)
 F  S IDX=$O(LST(IDX)) Q:'+IDX  D
"RTN","ORWPCE",20,0)
 . I LST(IDX)="" K LST(IDX) Q
"RTN","ORWPCE",21,0)
 . S MOD=0,CODES="",FIRST=1
"RTN","ORWPCE",22,0)
 . F  S MOD=$O(LST(IDX,"MODIFIER",MOD)) Q:(MOD="")  D
"RTN","ORWPCE",23,0)
 . . I FIRST S FIRST=0
"RTN","ORWPCE",24,0)
 . . E  S CODES=CODES_";"
"RTN","ORWPCE",25,0)
 . . S CODES=CODES_LST(IDX,"MODIFIER",MOD)
"RTN","ORWPCE",26,0)
 . K LST(IDX,"MODIFIER")
"RTN","ORWPCE",27,0)
 . I 'FIRST S $P(LST(IDX),U,12)=CODES
"RTN","ORWPCE",28,0)
 Q
"RTN","ORWPCE",29,0)
CPTMODS(LST,ORCPTCOD,ORDATE) ;Return CPT Modifiers for a CPT Code
"RTN","ORWPCE",30,0)
 N ORM,ORIDX,ORI,MODNAME
"RTN","ORWPCE",31,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",32,0)
 I +($$CODM^ICPTCOD(ORCPTCOD,$NA(ORM),0,ORDATE)),+$D(ORM) D
"RTN","ORWPCE",33,0)
 . S ORIDX="",ORI=0
"RTN","ORWPCE",34,0)
 . F  S ORIDX=$O(ORM(ORIDX)) Q:(ORIDX="")  D
"RTN","ORWPCE",35,0)
 . . S ORI=ORI+1,MODNAME=$P(ORM(ORIDX),U,1)
"RTN","ORWPCE",36,0)
 . . S LST(MODNAME_ORI)=$P(ORM(ORIDX),U,2)_U_MODNAME_U_ORIDX
"RTN","ORWPCE",37,0)
 Q
"RTN","ORWPCE",38,0)
GETMOD(MODINFO,ORMODIEN,ORDATE) ;Returns info for a specific CPT Modifier
"RTN","ORWPCE",39,0)
 N ORDATA
"RTN","ORWPCE",40,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",41,0)
 S ORDATA=$$MOD^ICPTMOD(ORMODIEN,"I",ORDATE,1)
"RTN","ORWPCE",42,0)
 I +ORDATA>0 S MODINFO=ORMODIEN_U_$P(ORDATA,U,3)_U_$P(ORDATA,U,2)
"RTN","ORWPCE",43,0)
 Q
"RTN","ORWPCE",44,0)
DIAG(LST,CLINIC,ORDATE) ; get list of diagnoses for clinic
"RTN","ORWPCE",45,0)
 N ORI S ORI=0
"RTN","ORWPCE",46,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",47,0)
 D GETLST^IBDF18A(CLINIC,"DG SELECT ICD DIAGNOSIS CODES","LST",,,,ORDATE)
"RTN","ORWPCE",48,0)
 F  S ORI=$O(LST(ORI)) Q:+ORI'>0  D
"RTN","ORWPCE",49,0)
 . N ICDD
"RTN","ORWPCE",50,0)
 . I $P(LST(ORI),U)]"",$$ICDDESC^ICDXCODE(,$P(LST(ORI),U),DT,.ICDD) S $P(LST(ORI),U,10)=$G(ICDD(1))
"RTN","ORWPCE",51,0)
 Q
"RTN","ORWPCE",52,0)
IMM(LST,CLINIC) ;get list of immunizations for clinic
"RTN","ORWPCE",53,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT IMMUNIZATIONS","LST")
"RTN","ORWPCE",54,0)
 Q
"RTN","ORWPCE",55,0)
SK(LST,CLINIC) ;get list of skin test for clinic
"RTN","ORWPCE",56,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT SKIN TESTS","LST")
"RTN","ORWPCE",57,0)
 Q
"RTN","ORWPCE",58,0)
HF(LST,CLINIC) ;get list of health factors for clinic
"RTN","ORWPCE",59,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT HEALTH FACTORS","LST")
"RTN","ORWPCE",60,0)
 Q
"RTN","ORWPCE",61,0)
PED(LST,CLINIC) ;get list of education topices for clinic
"RTN","ORWPCE",62,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT EDUCATION TOPICS","LST")
"RTN","ORWPCE",63,0)
 Q
"RTN","ORWPCE",64,0)
TRT(LST,CLINIC) ;get list of treatments for clinic
"RTN","ORWPCE",65,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT TREATMENTS","LST")
"RTN","ORWPCE",66,0)
 Q
"RTN","ORWPCE",67,0)
XAM(LST,CLINIC) ;get list of exams for clinic
"RTN","ORWPCE",68,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT EXAMS","LST")
"RTN","ORWPCE",69,0)
 Q
"RTN","ORWPCE",70,0)
ACTPROB(GLST,DFN,ORDATE) ;get list of patient's active problems
"RTN","ORWPCE",71,0)
 N ORPROB,ORPROBIX,ORPRCNT,ORTXT,ORTXT1,ORCODSYS,ORCOD,ORDT,ORTRY,QTLTXT,SCD,ORDATA,GMPINDT,DIAGINC
"RTN","ORWPCE",72,0)
 K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS")
"RTN","ORWPCE",73,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",74,0)
 S GMPINDT=ORDATE
"RTN","ORWPCE",75,0)
 D DSELECT^GMPLENFM  ;DBIA 1365
"RTN","ORWPCE",76,0)
 S ORPRCNT=0
"RTN","ORWPCE",77,0)
 S ORPROBIX=0
"RTN","ORWPCE",78,0)
 F  S ORPROBIX=$O(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX)) Q:'ORPROBIX  D  ;DBIA 1365
"RTN","ORWPCE",79,0)
 . S ORPROB=$P(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX),"^",2,3)
"RTN","ORWPCE",80,0)
 . I $L(ORPROB)>255 S $P(ORPROB,U)=$E($P(ORPROB,U),1,245)
"RTN","ORWPCE",81,0)
 . I $E(ORPROB,1)="$" S ORPROB=$E(ORPROB,2,255)
"RTN","ORWPCE",82,0)
 . I '$D(ORPROB(ORPROB)) D
"RTN","ORWPCE",83,0)
 .. S ORPROB(ORPROB)=""
"RTN","ORWPCE",84,0)
 .. S ORPRCNT=ORPRCNT+1
"RTN","ORWPCE",85,0)
 .. S $P(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX),"^",2,3)=ORPROB
"RTN","ORWPCE",86,0)
 . E  K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX)
"RTN","ORWPCE",87,0)
 S ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",0)=ORPRCNT
"RTN","ORWPCE",88,0)
 S GLST=$NA(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS"))
"RTN","ORWPCE",89,0)
 Q
"RTN","ORWPCE",90,0)
SCSEL(VAL,DFN,ATM,LOC,VST) ; return SC conditions that may be selected
"RTN","ORWPCE",91,0)
 ; VAL=SCallow^SCdflt;AOallow^AOdflt;IRallow^IRdflt;ECallow^ECdflt;
"RTN","ORWPCE",92,0)
 ;     MSTallow^MSTdflt;HNCallow^HNCdflt;CVAllow^CVDflt;SHADAllow^SHADDflt
"RTN","ORWPCE",93,0)
 N ORX,S S S=";"
"RTN","ORWPCE",94,0)
 D SCCOND^PXUTLSCC(DFN,ATM,LOC,$G(VST),.ORX)
"RTN","ORWPCE",95,0)
 S VAL=$G(ORX("SC"))_S_$G(ORX("AO"))_S_$G(ORX("IR"))_S_$G(ORX("EC"))_S_$G(ORX("MST"))_S_$G(ORX("HNC"))_S_$G(ORX("CV"))_S_$G(ORX("SHAD"))
"RTN","ORWPCE",96,0)
 Q
"RTN","ORWPCE",97,0)
SCDIS(LST,DFN) ; Return service connected % and rated disabilities
"RTN","ORWPCE",98,0)
 N VAEL,VAERR,I,ILST,DIS,SC,X
"RTN","ORWPCE",99,0)
 D ELIG^VADPT
"RTN","ORWPCE",100,0)
 S LST(1)="Service Connected: "_$S(+VAEL(3):$P(VAEL(3),U,2)_"%",1:"NO")
"RTN","ORWPCE",101,0)
 I 'VAEL(4),'$P($G(^DG(391,+VAEL(6),0)),U,2) S LST(2)="NOT A VETERAN." Q
"RTN","ORWPCE",102,0)
 S I=0,ILST=1 F  S I=$O(^DPT(DFN,.372,I)) Q:'I  S X=^(I,0) D
"RTN","ORWPCE",103,0)
 . S DIS=$P($G(^DIC(31,+X,0)),U) Q:DIS=""
"RTN","ORWPCE",104,0)
 . S SC=$S($P(X,U,3):"SC",$P(X,U,3)']"":"not specified",1:"NSC")
"RTN","ORWPCE",105,0)
 . S ILST=ILST+1,LST(ILST)=DIS_" ("_$P(X,U,2)_"% "_SC_")"
"RTN","ORWPCE",106,0)
 I ILST=1 S LST(2)="Rated Disabilities: NONE STATED"
"RTN","ORWPCE",107,0)
 Q
"RTN","ORWPCE",108,0)
CPTREQD(VAL,IEN) ; return 1 in VAL if note still needs a CPT code
"RTN","ORWPCE",109,0)
 S VAL=+$P(^TIU(8925,IEN,0),U,11)
"RTN","ORWPCE",110,0)
 Q
"RTN","ORWPCE",111,0)
NOTEVSTR(VAL,IEN) ; return the VSTR^AUTHOR for a note
"RTN","ORWPCE",112,0)
 N X0,X12,VISIT
"RTN","ORWPCE",113,0)
 S X0=$G(^TIU(8925,+IEN,0)),X12=$G(^(12)),VISIT=$P(X12,U,7)
"RTN","ORWPCE",114,0)
 I +VISIT S VAL=$$VSTRBLD^TIUSRVP(VISIT) I 1
"RTN","ORWPCE",115,0)
 E  S VAL=$P(X12,U,11)_";"_$P(X0,U,7)_";"_$P(X0,U,13)
"RTN","ORWPCE",116,0)
 Q
"RTN","ORWPCE",117,0)
HASVISIT(ORY,IEN,DFN,ORLOC,ORDTE) ;Has visit or is stand alone
"RTN","ORWPCE",118,0)
 N ORVISIT
"RTN","ORWPCE",119,0)
 S ORY=-1
"RTN","ORWPCE",120,0)
 I +$G(IEN)>0 S ORVISIT=+$P($G(^TIU(8925,+IEN,0)),U,3)
"RTN","ORWPCE",121,0)
 I +$G(ORVISIT)'>0 S ORVISIT=$$GETENC^PXAPI(DFN,ORDTE,ORLOC)
"RTN","ORWPCE",122,0)
 I +$G(ORVISIT)>0 S ORY=$$VST2APPT^PXAPI(ORVISIT)
"RTN","ORWPCE",123,0)
 Q
"RTN","ORWPCE",124,0)
DELETE(VAL,VSTR,DFN) ; delete PCE info when deleting a note
"RTN","ORWPCE",125,0)
 N VISIT,ORCOUNT,ORDTE,ORLOC
"RTN","ORWPCE",126,0)
 N ZTIO,ZTRTN,ZTDTH,ZTSAVE,ZTDESC,ZTSYNC,ZTSK
"RTN","ORWPCE",127,0)
 S ORLOC=$P(VSTR,";"),ORDTE=$P(VSTR,";",2)
"RTN","ORWPCE",128,0)
 I '$D(^TMP("ORWPCE",$J,VSTR))&('$$GETENC^PXAPI(DFN,ORDTE,ORLOC)) S VAL=0 Q  ; no PCE data saved yet
"RTN","ORWPCE",129,0)
 I $P(VSTR,";",3)="H" S VAL=0 Q           ; leave inpatient alone
"RTN","ORWPCE",130,0)
 I $L($T(DOCCNT^TIUSRVLV))=0 S VAL=0 Q    ; leave if no tiu entry point
"RTN","ORWPCE",131,0)
 D DOCCNT^TIUSRVLV(.ORCOUNT,DFN,VSTR)     ; Do not delete if another
"RTN","ORWPCE",132,0)
 I ORCOUNT>0 S VAL=0 Q                    ; title points to visit
"RTN","ORWPCE",133,0)
 S ZTIO="ORW/PXAPI RESOURCE",ZTRTN="DQDEL^ORWPCE1",ZTDTH=$H
"RTN","ORWPCE",134,0)
 S (ZTSAVE("VSTR"),ZTSAVE("DFN"))="",ZTDESC="CPRS Delete Note/PCE"
"RTN","ORWPCE",135,0)
 S ZTSYNC="ORW"_VSTR
"RTN","ORWPCE",136,0)
 D ^%ZTLOAD I '$D(ZTSK) D DQDEL^ORWPCE1
"RTN","ORWPCE",137,0)
 Q
"RTN","ORWPCE",138,0)
SAVE(OK,PCELIST,NOTEIEN,ORLOC) ; save PCE information
"RTN","ORWPCE",139,0)
 N VSTR,GMPLUSER
"RTN","ORWPCE",140,0)
 N ZTIO,ZTRTN,ZTDTH,ZTSAVE,ZTDESC,ZTSYNC,ZTSK
"RTN","ORWPCE",141,0)
 S VSTR=$P(PCELIST(1),U,4) K ^TMP("ORWPCE",$J,VSTR)
"RTN","ORWPCE",142,0)
 M ^TMP("ORWPCE",$J,VSTR)=PCELIST
"RTN","ORWPCE",143,0)
 S GMPLUSER=$$CLINUSER^ORQQPL1(DUZ),NOTEIEN=+$G(NOTEIEN)
"RTN","ORWPCE",144,0)
 S ZTIO="ORW/PXAPI RESOURCE",ZTRTN="DQSAVE^ORWPCE1",ZTDTH=$H
"RTN","ORWPCE",145,0)
 S ZTSAVE("PCELIST(")="",ZTDESC="Data from CPRS to PCE"
"RTN","ORWPCE",146,0)
 S ZTSAVE("GMPLUSER")="",ZTSAVE("NOTEIEN")="",ZTSAVE("DUZ")=""
"RTN","ORWPCE",147,0)
 I VSTR'["E" S ZTSYNC="ORW"_VSTR
"RTN","ORWPCE",148,0)
 S ZTSAVE("ORLOC")=""
"RTN","ORWPCE",149,0)
 D ^%ZTLOAD I '$D(ZTSK) D DQSAVE^ORWPCE1
"RTN","ORWPCE",150,0)
 Q
"RTN","ORWPCE",151,0)
LEX(LST,X,APP,ORDATE) ; return list after lexicon lookup
"RTN","ORWPCE",152,0)
 N LEX,ILST,I,IEN,ORIMPDT
"RTN","ORWPCE",153,0)
 S ORIMPDT=$$IMPDATE^LEXU("10D")
"RTN","ORWPCE",154,0)
 S:APP="CPT" APP="CHP" ; LEX PATCH 10
"RTN","ORWPCE",155,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",156,0)
 I APP="ICD",(ORDATE'<ORIMPDT) S APP="10D"
"RTN","ORWPCE",157,0)
 D CONFIG^LEXSET(APP,APP,ORDATE)  ;DBIA 1609
"RTN","ORWPCE",158,0)
 I APP="CHP" D
"RTN","ORWPCE",159,0)
 . ; Set the filter for CPT only using CS APIs - format is the same as for DIC("S")
"RTN","ORWPCE",160,0)
 . S ^TMP("LEXSCH",$J,"FIL",0)="I $L($$CPTONE^LEXU(+Y,$G(ORDATE)))!($L($$CPCONE^LEXU(+Y,$G(ORDATE))))"  ;DBIA 1609
"RTN","ORWPCE",161,0)
 . ; Set Applications Default Flag (Lexicon can not overwrite filter)
"RTN","ORWPCE",162,0)
 . S ^TMP("LEXSCH",$J,"ADF",0)=1
"RTN","ORWPCE",163,0)
 D LOOK^LEXA(X,APP,1,"",ORDATE)
"RTN","ORWPCE",164,0)
 I '$D(LEX("LIST",1)) D  G LEXX
"RTN","ORWPCE",165,0)
 . S LST(1)="-1^No matches found.^"_APP
"RTN","ORWPCE",166,0)
 S LST(1)=LEX("LIST",1),ILST=1
"RTN","ORWPCE",167,0)
 S (I,IEN)=""
"RTN","ORWPCE",168,0)
 F  S I=$O(^TMP("LEXFND",$J,I)) Q:I=""  D  ;DBIA 2950
"RTN","ORWPCE",169,0)
 .F  S IEN=$O(^TMP("LEXFND",$J,I,IEN)) Q:IEN=""  D
"RTN","ORWPCE",170,0)
 ..S ILST=ILST+1,LST(ILST)=IEN_U_^TMP("LEXFND",$J,I,IEN)
"RTN","ORWPCE",171,0)
LEXX K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J),^TMP("LEXSCH",$J),^TMP("LEXLE",$J)
"RTN","ORWPCE",172,0)
 Q
"RTN","ORWPCE",173,0)
LEXCODE(VAL,IEN,APP,ORDATE)     ; return code for a lexicon entry
"RTN","ORWPCE",174,0)
 S VAL=""
"RTN","ORWPCE",175,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",176,0)
 I APP="ICD"!(APP="10D") S VAL=$$ONE^LEXU(IEN,ORDATE,APP)_U_$S(APP="ICD":"ICD-9-CM",1:"ICD-10-CM")
"RTN","ORWPCE",177,0)
 I APP="CPT"!(APP="CHP") S VAL=$$CPTONE^LEXU(IEN,ORDATE)_U_"CPT-4"
"RTN","ORWPCE",178,0)
 I $P(VAL,U)="",(APP="CHP") S VAL=$$CPCONE^LEXU(IEN,ORDATE)_U_"HCPCS"
"RTN","ORWPCE",179,0)
 Q
"RTN","ORWPCE",180,0)
ADDRES ; Add the ORW/PXAPI RESOURCE device
"RTN","ORWPCE",181,0)
 N X
"RTN","ORWPCE",182,0)
 S X=$$RES^XUDHSET("ORW/PXAPI RESOURCE",,5,"CPRS to PCE transactions")
"RTN","ORWPCE",183,0)
 Q
"RTN","ORWPCE",184,0)
GETSVC(NEWSVC,SVC,LOC,INP) ; Returns the correct Service Connected Category
"RTN","ORWPCE",185,0)
 N DSS,ORWSVC
"RTN","ORWPCE",186,0)
 S DSS=$P($G(^SC(+LOC,0)),U,7)
"RTN","ORWPCE",187,0)
 Q:'+DSS
"RTN","ORWPCE",188,0)
 M ORWSVC=SVC
"RTN","ORWPCE",189,0)
 S NEWSVC=$$SVC^PXKCO(.ORWSVC,DSS,INP,LOC) ; DBIA #3225
"RTN","ORWPCE",190,0)
 Q
"RTN","ORWPCE",191,0)
ICDVER(RESULT,ORDT) ; Get ICD codeset version (i.e., ICD-9-CM or ICD-10-CM)
"RTN","ORWPCE",192,0)
 S ORDT=+$G(ORDT) S:'ORDT ORDT=DT
"RTN","ORWPCE",193,0)
 S RESULT="ICD^ICD-9-CM"
"RTN","ORWPCE",194,0)
 G:'$L($T(IMPDATE^LEXU)) ICDVERX
"RTN","ORWPCE",195,0)
 I +$$IMPDATE^LEXU("10D")'>ORDT S RESULT="10D^ICD-10-CM"
"RTN","ORWPCE",196,0)
ICDVERX Q
"RTN","ORWPCE1")
0^3^B71259369
"RTN","ORWPCE1",1,0)
ORWPCE1 ;ISL/KCM,JER - PCE Calls from CPRS GUI ;06/12/14  16:13
"RTN","ORWPCE1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,132,148,187,190,215,243,280,306,361**;Dec 17, 1997;Build 39
"RTN","ORWPCE1",3,0)
 ;
"RTN","ORWPCE1",4,0)
 ; DBIA 1365   DSELECT^GMPLENFM   ^TMP("IB",$J)
"RTN","ORWPCE1",5,0)
 ;
"RTN","ORWPCE1",6,0)
GETVSIT(VSTR,DFN) ; lookup a visit
"RTN","ORWPCE1",7,0)
 N PKG,SRC,ORPXAPI,OK,ORVISIT
"RTN","ORWPCE1",8,0)
 S PKG=$O(^DIC(9.4,"B","ORDER ENTRY/RESULTS REPORTING",0))
"RTN","ORWPCE1",9,0)
 S SRC="TEXT INTEGRATION UTILITIES"
"RTN","ORWPCE1",10,0)
 S ORPXAPI("ENCOUNTER",1,"ENC D/T")=$P(VSTR,";",2)
"RTN","ORWPCE1",11,0)
 S ORPXAPI("ENCOUNTER",1,"PATIENT")=DFN
"RTN","ORWPCE1",12,0)
 S ORPXAPI("ENCOUNTER",1,"HOS LOC")=+VSTR
"RTN","ORWPCE1",13,0)
 S ORPXAPI("ENCOUNTER",1,"SERVICE CATEGORY")=$P(VSTR,";",3)
"RTN","ORWPCE1",14,0)
 S ORPXAPI("ENCOUNTER",1,"ENCOUNTER TYPE")="P"
"RTN","ORWPCE1",15,0)
 S OK=$$DATA2PCE^PXAPI("ORPXAPI",PKG,SRC,.ORVISIT)
"RTN","ORWPCE1",16,0)
 Q ORVISIT
"RTN","ORWPCE1",17,0)
DQDEL ; background call to DATA2PCE and DELVFILE
"RTN","ORWPCE1",18,0)
 N VISIT,VAL
"RTN","ORWPCE1",19,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ORWPCE1",20,0)
 S VISIT=$$GETVSIT(VSTR,DFN)
"RTN","ORWPCE1",21,0)
 S VAL=$$DELVFILE^PXAPI("ALL",VISIT,"","TEXT INTEGRATION UTILITIES")
"RTN","ORWPCE1",22,0)
 S ZTSTAT=0  ; clear sync flag
"RTN","ORWPCE1",23,0)
 Q
"RTN","ORWPCE1",24,0)
DQSAVE ; Background Call to DATA2PCE
"RTN","ORWPCE1",25,0)
 N PKG,SRC,TYP,CODE,IEN,OK,I,X,ORPXAPI,ORPXDEL
"RTN","ORWPCE1",26,0)
 N CAT,NARR,ROOT,ROOT2,ORAVST,ORENCDT,IMPLDT
"RTN","ORWPCE1",27,0)
 N PRV,CPT,ICD,IMM,SK,PED,HF,XAM,TRT,MOD,MODCNT,MODIDX,MODS
"RTN","ORWPCE1",28,0)
 N COM,COMMENT,COMMENTS,SVCAT
"RTN","ORWPCE1",29,0)
 N DFN,PROBLEMS,PXAPREDT,ORCPTDEL
"RTN","ORWPCE1",30,0)
 S IMPLDT=$$IMPDATE^LEXU("10D")
"RTN","ORWPCE1",31,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ORWPCE1",32,0)
 S PKG=$O(^DIC(9.4,"B","ORDER ENTRY/RESULTS REPORTING",0))
"RTN","ORWPCE1",33,0)
 S SRC="TEXT INTEGRATION UTILITIES"
"RTN","ORWPCE1",34,0)
 S (PRV,CPT,ICD,IMM,SK,PED,HF,XAM,TRT)=0
"RTN","ORWPCE1",35,0)
 S I="" F  S I=$O(PCELIST(I)) Q:'I  S X=PCELIST(I) D
"RTN","ORWPCE1",36,0)
 . S X=PCELIST(I),TYP=$P(X,U),CODE=$P(X,U,2),CAT=$P(X,U,3),NARR=$P(X,U,4)
"RTN","ORWPCE1",37,0)
 . I $E(TYP,1,3)="PRV" D  Q
"RTN","ORWPCE1",38,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",39,0)
 . . S PRV=PRV+1
"RTN","ORWPCE1",40,0)
 . . S ROOT="ORPXAPI(""PROVIDER"","_PRV_")"
"RTN","ORWPCE1",41,0)
 . . S ROOT2="ORPXDEL(""PROVIDER"","_PRV_")"
"RTN","ORWPCE1",42,0)
 . . I $E(TYP,4)'="-" D
"RTN","ORWPCE1",43,0)
 . . . S @ROOT@("NAME")=CODE
"RTN","ORWPCE1",44,0)
 . . . S @ROOT@("PRIMARY")=$P(X,U,6)
"RTN","ORWPCE1",45,0)
 . . S @ROOT2@("NAME")=CODE
"RTN","ORWPCE1",46,0)
 . . S @ROOT2@("DELETE")=1
"RTN","ORWPCE1",47,0)
 . . S PXAPREDT=1 ;Allow edit of primary flag
"RTN","ORWPCE1",48,0)
 . I TYP="VST" D  Q
"RTN","ORWPCE1",49,0)
 . . S ROOT="ORPXAPI(""ENCOUNTER"",1)"
"RTN","ORWPCE1",50,0)
 . . I CODE="DT" S (ORENCDT,@ROOT@("ENC D/T"))=$P(X,U,3) Q
"RTN","ORWPCE1",51,0)
 . . I CODE="PT" S @ROOT@("PATIENT")=$P(X,U,3),DFN=$P(X,U,3) Q
"RTN","ORWPCE1",52,0)
 . . I CODE="HL" S @ROOT@("HOS LOC")=$P(X,U,3) Q
"RTN","ORWPCE1",53,0)
 . . I CODE="PR" S @ROOT@("PARENT")=$P(X,U,3) Q
"RTN","ORWPCE1",54,0)
 . . ;prevents checkout!
"RTN","ORWPCE1",55,0)
 . . I CODE="VC" S (SVCAT,@ROOT@("SERVICE CATEGORY"))=$P(X,U,3) Q
"RTN","ORWPCE1",56,0)
 . . I CODE="SC" S @ROOT@("SC")=$P(X,U,3) Q
"RTN","ORWPCE1",57,0)
 . . I CODE="AO" S @ROOT@("AO")=$P(X,U,3) Q
"RTN","ORWPCE1",58,0)
 . . I CODE="IR" S @ROOT@("IR")=$P(X,U,3) Q
"RTN","ORWPCE1",59,0)
 . . I CODE="EC" S @ROOT@("EC")=$P(X,U,3) Q
"RTN","ORWPCE1",60,0)
 . . I CODE="MST" S @ROOT@("MST")=$P(X,U,3) Q
"RTN","ORWPCE1",61,0)
 . . I CODE="HNC" S @ROOT@("HNC")=$P(X,U,3) Q
"RTN","ORWPCE1",62,0)
 . . I CODE="CV" S @ROOT@("CV")=$P(X,U,3) Q
"RTN","ORWPCE1",63,0)
 . . I CODE="SHD" S @ROOT@("SHAD")=$P(X,U,3) Q
"RTN","ORWPCE1",64,0)
 . . I CODE="OL" D  Q
"RTN","ORWPCE1",65,0)
 . . . I +$P(X,U,3) S @ROOT@("INSTITUTION")=$P(X,U,3)
"RTN","ORWPCE1",66,0)
 . . . E  I $P(X,U,4)'="",$P(X,U,4)'="0" D
"RTN","ORWPCE1",67,0)
 . . . . I $$PATCH^XPDUTL("PX*1.0*96") S @ROOT@("OUTSIDE LOCATION")=$P(X,U,4)
"RTN","ORWPCE1",68,0)
 . . . . E  S @ROOT@("COMMENT")="OUTSIDE LOCATION:  "_$P(X,U,4)
"RTN","ORWPCE1",69,0)
 . I $E(TYP,1,3)="CPT" D  Q
"RTN","ORWPCE1",70,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",71,0)
 . . S CPT=CPT+1,ROOT="ORPXAPI(""PROCEDURE"","_CPT_")"
"RTN","ORWPCE1",72,0)
 . . S IEN=$$CODEN^ICPTCOD(CODE) ;ICR #1995
"RTN","ORWPCE1",73,0)
 . . S @ROOT@("PROCEDURE")=IEN
"RTN","ORWPCE1",74,0)
 . . I +$P(X,U,9) D
"RTN","ORWPCE1",75,0)
 . . . S MODS=$P(X,U,9),MODCNT=+MODS
"RTN","ORWPCE1",76,0)
 . . . F MODIDX=1:1:MODCNT D
"RTN","ORWPCE1",77,0)
 . . . . S MOD=$P($P(MODS,";",MODIDX+1),"/")
"RTN","ORWPCE1",78,0)
 . . . . S @ROOT@("MODIFIERS",MOD)=""
"RTN","ORWPCE1",79,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","ORWPCE1",80,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","ORWPCE1",81,0)
 . . S:$L($P(X,U,5)) @ROOT@("QTY")=$P(X,U,5)
"RTN","ORWPCE1",82,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",83,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="PROCEDURE^"_CPT
"RTN","ORWPCE1",84,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1,@ROOT@("QTY")=0,ORCPTDEL=CPT
"RTN","ORWPCE1",85,0)
 . I $E(TYP,1,3)="POV" D  Q
"RTN","ORWPCE1",86,0)
 . . N ORDXI,ORDX
"RTN","ORWPCE1",87,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",88,0)
 . . F ORDXI=1:1:$L(CODE,"/") D
"RTN","ORWPCE1",89,0)
 . . . N CSYS,CDT,IEN,LEXIEN
"RTN","ORWPCE1",90,0)
 . . . S ORDX=$P(CODE,"/",ORDXI)
"RTN","ORWPCE1",91,0)
 . . . S ICD=ICD+1,ROOT="ORPXAPI(""DX/PL"","_ICD_")"
"RTN","ORWPCE1",92,0)
 . . . S CDT=$S($G(SVCAT)="E":DT,1:ORENCDT)
"RTN","ORWPCE1",93,0)
 . . . S CSYS=$S(CDT'<IMPLDT:"10D",1:"ICD")
"RTN","ORWPCE1",94,0)
 . . . I (ORDX]""),(ORDX'[".") S ORDX=ORDX_"."
"RTN","ORWPCE1",95,0)
 . . . S IEN=+$$ICDDATA^ICDXCODE(CSYS,ORDX,CDT,"E")
"RTN","ORWPCE1",96,0)
 . . . I IEN'>0 Q
"RTN","ORWPCE1",97,0)
 . . . S @ROOT@("DIAGNOSIS")=IEN
"RTN","ORWPCE1",98,0)
 . . . S @ROOT@("PRIMARY")=$S(ORDXI=1:$P(X,U,5),1:0)
"RTN","ORWPCE1",99,0)
 . . . S LEXIEN=$P($$EXP^LEXCODE(ORDX,CSYS,CDT),U),@ROOT@("LEXICON TERM")=$S(LEXIEN>0:LEXIEN,1:"")
"RTN","ORWPCE1",100,0)
 . . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","ORWPCE1",101,0)
 . . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","ORWPCE1",102,0)
 . . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",103,0)
 . . . I $L($P(X,U,7)),($P(X,U,7)=1),(ORDXI=1) S @ROOT@("PL ADD")=$P(X,U,7),PROBLEMS(ICD)=NARR_U_CODE
"RTN","ORWPCE1",104,0)
 . . . S:$L($P(X,U,10))>0&(ORDXI=1) COMMENT($P(X,U,10))="DX/PL^"_ICD
"RTN","ORWPCE1",105,0)
 . . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",106,0)
 . I $E(TYP,1,3)="IMM" D  Q
"RTN","ORWPCE1",107,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",108,0)
 . . S IMM=IMM+1,ROOT="ORPXAPI(""IMMUNIZATION"","_IMM_")"
"RTN","ORWPCE1",109,0)
 . . S @ROOT@("IMMUN")=CODE
"RTN","ORWPCE1",110,0)
 . . S:$L($P(X,U,5)) @ROOT@("SERIES")=$P(X,U,5)
"RTN","ORWPCE1",111,0)
 . . S:$L($P(X,U,5)) @ROOT@("REACTION")=$P(X,U,7)
"RTN","ORWPCE1",112,0)
 . . S:$L($P(X,U,8)) @ROOT@("CONTRAINDICATED")=$P(X,U,8)
"RTN","ORWPCE1",113,0)
 . . S:$L($P(X,U,9)) @ROOT@("REFUSED")=$P(X,U,9)
"RTN","ORWPCE1",114,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",115,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="IMMUNIZATION^"_IMM
"RTN","ORWPCE1",116,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",117,0)
 . I $E(TYP,1,2)="SK" D  Q
"RTN","ORWPCE1",118,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",119,0)
 . . S SK=SK+1,ROOT="ORPXAPI(""SKIN TEST"","_SK_")"
"RTN","ORWPCE1",120,0)
 . . S @ROOT@("TEST")=CODE
"RTN","ORWPCE1",121,0)
 . . S:$L($P(X,U,5)) @ROOT@("RESULT")=$P(X,U,5)
"RTN","ORWPCE1",122,0)
 . . S:$L($P(X,U,7)) @ROOT@("READING")=$P(X,U,7)
"RTN","ORWPCE1",123,0)
 . . S:$L($P(X,U,8)) @ROOT@("D/T READ")=$P(X,U,8)
"RTN","ORWPCE1",124,0)
 . . S:$L($P(X,U,9)) @ROOT@("EVENT D/T")=$P(X,U,9)
"RTN","ORWPCE1",125,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",126,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="SKIN TEST^"_SK
"RTN","ORWPCE1",127,0)
 . . I $E(TYP,3)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",128,0)
 . I $E(TYP,1,3)="PED" D  Q
"RTN","ORWPCE1",129,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",130,0)
 . . S PED=PED+1,ROOT="ORPXAPI(""PATIENT ED"","_PED_")"
"RTN","ORWPCE1",131,0)
 . . S @ROOT@("TOPIC")=CODE
"RTN","ORWPCE1",132,0)
 . . S:$L($P(X,U,5)) @ROOT@("UNDERSTANDING")=$P(X,U,5)
"RTN","ORWPCE1",133,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",134,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="PATIENT ED^"_PED
"RTN","ORWPCE1",135,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",136,0)
 . I $E(TYP,1,2)="HF" D  Q
"RTN","ORWPCE1",137,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",138,0)
 . . S HF=HF+1,ROOT="ORPXAPI(""HEALTH FACTOR"","_HF_")"
"RTN","ORWPCE1",139,0)
 . . S @ROOT@("HEALTH FACTOR")=CODE
"RTN","ORWPCE1",140,0)
 . . S:$L($P(X,U,5)) @ROOT@("LEVEL/SEVERITY")=$P(X,U,5)
"RTN","ORWPCE1",141,0)
 . . S:$P(X,U,6)'>0 $P(X,U,6)=$G(ORPXAPI("PROVIDER",1,"NAME"))
"RTN","ORWPCE1",142,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",143,0)
 . . S:$L($P(X,U,11)) @ROOT@("EVENT D/T")=$P($P(X,U,11),";",1)
"RTN","ORWPCE1",144,0)
 . . S:$L($P(X,U,11)) SRC=$P($P(X,U,11),";",2)
"RTN","ORWPCE1",145,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="HEALTH FACTOR^"_HF
"RTN","ORWPCE1",146,0)
 . . I $E(TYP,3)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",147,0)
 . I $E(TYP,1,3)="XAM" D  Q
"RTN","ORWPCE1",148,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",149,0)
 . . S XAM=XAM+1,ROOT="ORPXAPI(""EXAM"","_XAM_")"
"RTN","ORWPCE1",150,0)
 . . S @ROOT@("EXAM")=CODE
"RTN","ORWPCE1",151,0)
 . . S:$L($P(X,U,5)) @ROOT@("RESULT")=$P(X,U,5)
"RTN","ORWPCE1",152,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",153,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="EXAM^"_XAM
"RTN","ORWPCE1",154,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",155,0)
 . I $E(TYP,1,3)="TRT" D  Q
"RTN","ORWPCE1",156,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",157,0)
 . . S TRT=TRT+1,ROOT="ORPXAPI(""TREATMENT"","_TRT_")"
"RTN","ORWPCE1",158,0)
 . . S @ROOT@("IMMUN")=CODE
"RTN","ORWPCE1",159,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","ORWPCE1",160,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","ORWPCE1",161,0)
 . . S:$L($P(X,U,5)) @ROOT@("QTY")=$P(X,U,5)
"RTN","ORWPCE1",162,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",163,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="TREATMENT^"_TRT
"RTN","ORWPCE1",164,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1,@ROOT@("QTY")=0
"RTN","ORWPCE1",165,0)
 . I $E(TYP,1,3)="COM" D  Q
"RTN","ORWPCE1",166,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",167,0)
 . . Q:'$L(CAT)
"RTN","ORWPCE1",168,0)
 . . S COMMENTS(CODE)=$P(X,U,3,999)
"RTN","ORWPCE1",169,0)
 ;Store the comments
"RTN","ORWPCE1",170,0)
 S COM=""
"RTN","ORWPCE1",171,0)
 F  S COM=$O(COMMENT(COM)) Q:COM=""  S:$D(COMMENTS(COM)) ORPXAPI($P(COMMENT(COM),"^",1),$P(COMMENT(COM),"^",2),"COMMENT")=COMMENTS(COM)
"RTN","ORWPCE1",172,0)
 ;
"RTN","ORWPCE1",173,0)
 ;Remove any problems to add that the patient already has as active problems
"RTN","ORWPCE1",174,0)
 I $D(PROBLEMS),$D(DFN) D
"RTN","ORWPCE1",175,0)
 . N ORWPROB,ORPROBIX
"RTN","ORWPCE1",176,0)
 . K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS")
"RTN","ORWPCE1",177,0)
 . D DSELECT^GMPLENFM  ;DBIA 1365
"RTN","ORWPCE1",178,0)
 . S ORPROBIX=0
"RTN","ORWPCE1",179,0)
 . F  S ORPROBIX=$O(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX)) Q:'ORPROBIX  D  ;DBIA 1365
"RTN","ORWPCE1",180,0)
 .. S ORWPROB=$P(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX),"^",2,3)
"RTN","ORWPCE1",181,0)
 .. S ORWPROB($S($E(ORWPROB,1)="$":$E(ORWPROB,2,255),1:ORWPROB))=""
"RTN","ORWPCE1",182,0)
 . K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS")
"RTN","ORWPCE1",183,0)
 . Q:'$D(ORWPROB)
"RTN","ORWPCE1",184,0)
 . S ORPROBIX=""
"RTN","ORWPCE1",185,0)
 . F  S ORPROBIX=$O(PROBLEMS(ORPROBIX)) Q:'ORPROBIX  D
"RTN","ORWPCE1",186,0)
 .. S:$D(ORWPROB(PROBLEMS(ORPROBIX))) ORPXAPI("DX/PL",ORPROBIX,"PL ADD")=0
"RTN","ORWPCE1",187,0)
 ;
"RTN","ORWPCE1",188,0)
 I $$MDS(.ORPXAPI,$G(ORLOC)) D
"RTN","ORWPCE1",189,0)
 .N ORTIME
"RTN","ORWPCE1",190,0)
 .S ORTIME=$$NOW^XLFDT
"RTN","ORWPCE1",191,0)
 .S ORTIME=+($P(ORTIME,".")_"."_$E($P(ORTIME,".",2),1,4))
"RTN","ORWPCE1",192,0)
 .S ORPXAPI("ENCOUNTER",1,"CHECKOUT D/T")=ORTIME
"RTN","ORWPCE1",193,0)
 S ORPXAPI("ENCOUNTER",1,"ENCOUNTER TYPE")="P"
"RTN","ORWPCE1",194,0)
DATA2PCE ;
"RTN","ORWPCE1",195,0)
 I $G(PXAPREDT)!($G(ORCPTDEL)) D
"RTN","ORWPCE1",196,0)
 . M ORPXDEL("ENCOUNTER")=ORPXAPI("ENCOUNTER")
"RTN","ORWPCE1",197,0)
 . I $G(ORCPTDEL) M ORPXDEL("PROCEDURE",ORCPTDEL)=ORPXAPI("PROCEDURE",ORCPTDEL)
"RTN","ORWPCE1",198,0)
 . S OK=$$DATA2PCE^PXAPI("ORPXDEL",PKG,SRC,.ORAVST)
"RTN","ORWPCE1",199,0)
 S OK=$$DATA2PCE^PXAPI("ORPXAPI",PKG,SRC,.ORAVST)
"RTN","ORWPCE1",200,0)
 I OK>0,+NOTEIEN,+ORAVST D  ; NOTEIEN only set on inpatient encounters
"RTN","ORWPCE1",201,0)
 .N OROK,ORX
"RTN","ORWPCE1",202,0)
 .S ORX(1207)=ORAVST
"RTN","ORWPCE1",203,0)
 .D FILE^TIUSRVP(.OROK,NOTEIEN,.ORX,1)
"RTN","ORWPCE1",204,0)
 S ZTSTAT=0  ; clear sync flag
"RTN","ORWPCE1",205,0)
 Q
"RTN","ORWPCE1",206,0)
 ;
"RTN","ORWPCE1",207,0)
MDS(X,ORLOC) ; return TRUE if checkout is needed
"RTN","ORWPCE1",208,0)
 I $$CHKOUT^ORWPCE2(ORLOC) Q 1
"RTN","ORWPCE1",209,0)
 N I,ORAUTO,OROK
"RTN","ORWPCE1",210,0)
 S (OROK,I)=0
"RTN","ORWPCE1",211,0)
 F  S I=$O(X("DX/PL",I)) Q:'I  D  Q:OROK
"RTN","ORWPCE1",212,0)
 . I $G(X("DX/PL",I,"DIAGNOSIS")) S OROK=1
"RTN","ORWPCE1",213,0)
 I 'OROK D
"RTN","ORWPCE1",214,0)
 .S I=0 F  S I=$O(X("PROCEDURE",I)) Q:'I  D  Q:OROK
"RTN","ORWPCE1",215,0)
 .. I $G(X("PROCEDURE",I,"PROCEDURE")) S OROK=1
"RTN","ORWPCE1",216,0)
 I $D(X("PROVIDER",1,"NAME")) S OROK=1
"RTN","ORWPCE1",217,0)
 Q OROK
"RTN","ORWPCE1",218,0)
NONCOUNT(ORY,ORLOC) ;  Is the location a non-count clinic? (DBIA #964)
"RTN","ORWPCE1",219,0)
 Q:'ORLOC
"RTN","ORWPCE1",220,0)
 S ORY=$S($P($G(^SC(ORLOC,0)),U,17)="Y":1,1:0)
"RTN","ORWPCE1",221,0)
 Q
"RTN","ORWPCE2")
0^22^B51147724
"RTN","ORWPCE2",1,0)
ORWPCE2 ; ISL/JM,RV,JER - wrap calls to PCE ;08/23/12  07:58
"RTN","ORWPCE2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,109,116,173,195,243,306,361**;Dec 17, 1997;Build 39
"RTN","ORWPCE2",3,0)
GETSET(ORWLST,ORWFILE,ORWFIELD,ORWNULL) ;gets set of codes
"RTN","ORWPCE2",4,0)
 ; ORWLST(n)=code^text for code
"RTN","ORWPCE2",5,0)
 N ORWPCE,ORWPCEL,ORWPCEC,ORWPCELO,ORWPCEHI,ORWPCECD,ORWPCET
"RTN","ORWPCE2",6,0)
 S ORWPCELO="abcdefghijklmnopqrstuvwxyz"
"RTN","ORWPCE2",7,0)
 S ORWPCEHI="ABCDEFGHIJKLMNOPQRSTUVWXYZ"
"RTN","ORWPCE2",8,0)
 D FIELD^DID(ORWFILE,ORWFIELD,"","POINTER","ORWPCE","ORWPCE")
"RTN","ORWPCE2",9,0)
 S ORWPCEL=$L(ORWPCE("POINTER"),";")-1
"RTN","ORWPCE2",10,0)
 F ORWPCEC=1:1:ORWPCEL D
"RTN","ORWPCE2",11,0)
 . S ORWPCECD=$P($P(ORWPCE("POINTER"),";",ORWPCEC),":",1)
"RTN","ORWPCE2",12,0)
 . S ORWPCET=$P($P(ORWPCE("POINTER"),";",ORWPCEC),":",2)
"RTN","ORWPCE2",13,0)
 . S ORWLST(ORWPCEC)=ORWPCECD_"^"_$E(ORWPCET)_$TR($E(ORWPCET,2,99),ORWPCEHI,ORWPCELO)
"RTN","ORWPCE2",14,0)
 S:$G(ORWNULL) ORWLST(0)="@^(None selected)"
"RTN","ORWPCE2",15,0)
 Q
"RTN","ORWPCE2",16,0)
 ;
"RTN","ORWPCE2",17,0)
IMMTYPE(ORWLST,ORDT) ;get the list of active immunizations
"RTN","ORWPCE2",18,0)
 N IEN,CNT,BINDEX S (IEN,CNT,BINDEX)=0
"RTN","ORWPCE2",19,0)
 S:'$G(ORDT) ORDT=DT
"RTN","ORWPCE2",20,0)
 F  S BINDEX=$O(^AUTTIMM("B",BINDEX)) Q:BINDEX']""  F  S IEN=$O(^(BINDEX,IEN)) Q:'+IEN  D
"RTN","ORWPCE2",21,0)
 . I $D(^AUTTIMM(IEN,0))#2,+$P(^(0),"^",7)=0 S CNT=CNT+1,ORWLST(CNT)=IEN_"^"_$P(^(0),"^")
"RTN","ORWPCE2",22,0)
 . ;I $D(^AUTTIMM(IEN,0))#2,+$$SCREEN^XTID(9999999.14,,IEN,ORDT)=0 S CNT=CNT+1,ORWLST(CNT)=IEN_"^"_$P(^(0),"^")
"RTN","ORWPCE2",23,0)
 Q
"RTN","ORWPCE2",24,0)
 ;
"RTN","ORWPCE2",25,0)
SKTYPE(ORWLST,ORDT) ;get the list of active skin test
"RTN","ORWPCE2",26,0)
 N IEN,CNT,BINDEX S (IEN,CNT,BINDEX)=0
"RTN","ORWPCE2",27,0)
 S:'$G(ORDT) ORDT=DT
"RTN","ORWPCE2",28,0)
 F  S BINDEX=$O(^AUTTSK("B",BINDEX)) Q:BINDEX']""  F  S IEN=$O(^(BINDEX,IEN)) Q:'+IEN  D
"RTN","ORWPCE2",29,0)
 . I $D(^AUTTSK(IEN,0))#2,+$P(^(0),"^",3)=0 S CNT=CNT+1,ORWLST(CNT)=IEN_"^"_$P(^(0),"^")
"RTN","ORWPCE2",30,0)
 . ;I $D(^AUTTSK(IEN,0))#2,+$$SCREEN^XTID(9999999.28,,IEN,ORDT)=0 S CNT=CNT+1,ORWLST(CNT)=IEN_"^"_$P(^(0),"^")
"RTN","ORWPCE2",31,0)
 Q
"RTN","ORWPCE2",32,0)
 ;
"RTN","ORWPCE2",33,0)
EDTTYPE(ORWLST) ;get the list of active education topics
"RTN","ORWPCE2",34,0)
 N IEN,CNT,BINDEX S (IEN,CNT,BINDEX)=0
"RTN","ORWPCE2",35,0)
 F  S BINDEX=$O(^AUTTEDT("B",BINDEX)) Q:BINDEX']""  F  S IEN=$O(^(BINDEX,IEN)) Q:'+IEN  I $D(^AUTTEDT(IEN,0))#2,+$P(^(0),"^",3)=0 S CNT=CNT+1,ORWLST(CNT)=IEN_"^"_$P(^(0),"^")
"RTN","ORWPCE2",36,0)
 Q
"RTN","ORWPCE2",37,0)
 ;
"RTN","ORWPCE2",38,0)
HFTYPE(ORWLST,ADDCATS) ;get the list of active  health factors
"RTN","ORWPCE2",39,0)
 N IEN,CNT,BINDEX,REC
"RTN","ORWPCE2",40,0)
 S (IEN,CNT,BINDEX)=0,ADDCATS=+$G(ADDCATS)
"RTN","ORWPCE2",41,0)
 F  S BINDEX=$O(^AUTTHF("B",BINDEX)) Q:BINDEX']""  D
"RTN","ORWPCE2",42,0)
 .F  S IEN=$O(^AUTTHF("B",BINDEX,IEN)) Q:'+IEN  D
"RTN","ORWPCE2",43,0)
 ..S REC=$G(^AUTTHF(IEN,0))
"RTN","ORWPCE2",44,0)
 ..I +$P(REC,U,11) S REC=""
"RTN","ORWPCE2",45,0)
 ..I 'ADDCATS,$P(REC,U,10)="C" S REC=""
"RTN","ORWPCE2",46,0)
 ..I REC'="" D
"RTN","ORWPCE2",47,0)
 ...S CNT=CNT+1,ORWLST(CNT)=IEN_U_$P(REC,U)
"RTN","ORWPCE2",48,0)
 ...I ADDCATS S ORWLST(CNT)=ORWLST(CNT)_U_$P(REC,U,10)_U_$P(REC,U,3)
"RTN","ORWPCE2",49,0)
 Q
"RTN","ORWPCE2",50,0)
 ;
"RTN","ORWPCE2",51,0)
EXAMTYPE(ORWLST) ;get the list of active exams
"RTN","ORWPCE2",52,0)
 N IEN,CNT,BINDEX S (IEN,CNT,BINDEX)=0
"RTN","ORWPCE2",53,0)
 F  S BINDEX=$O(^AUTTEXAM("B",BINDEX)) Q:BINDEX']""  F  S IEN=$O(^(BINDEX,IEN)) Q:'+IEN  I $D(^AUTTEXAM(IEN,0))#2,+$P(^(0),"^",4)=0 S CNT=CNT+1,ORWLST(CNT)=IEN_"^"_$P(^(0),"^")
"RTN","ORWPCE2",54,0)
 Q
"RTN","ORWPCE2",55,0)
 ;
"RTN","ORWPCE2",56,0)
TRTTYPE(ORWLST) ;get the list of active treatments
"RTN","ORWPCE2",57,0)
 N IEN,CNT,BINDEX S (IEN,CNT,BINDEX)=0
"RTN","ORWPCE2",58,0)
 F  S BINDEX=$O(^AUTTTRT("B",BINDEX)) Q:BINDEX']""  F  S IEN=$O(^(BINDEX,IEN)) Q:'+IEN  I $D(^AUTTTRT(IEN,0))#2,+$P(^(0),"^",4)=0 S CNT=CNT+1,ORWLST(CNT)=IEN_"^"_$P(^(0),"^")
"RTN","ORWPCE2",59,0)
 Q
"RTN","ORWPCE2",60,0)
 ;
"RTN","ORWPCE2",61,0)
ACTIVPRV(ORRETURN,ORWPROV,ORWDT) ;get if provider is active or not
"RTN","ORWPCE2",62,0)
 S ORRETURN=$$ACTIVPRV^PXAPI(ORWPROV,ORWDT)
"RTN","ORWPCE2",63,0)
 Q
"RTN","ORWPCE2",64,0)
GETVISIT(VISIT,IEN,DFN,VSITSTR) ;Get the visit IEN
"RTN","ORWPCE2",65,0)
 I +$G(IEN)<1 D  I 1
"RTN","ORWPCE2",66,0)
 .S VISIT=$$GETENC^PXAPI(DFN,$P(VSITSTR,";",2),$P(VSITSTR,";"))
"RTN","ORWPCE2",67,0)
 E  S VISIT=$P(^TIU(8925,IEN,0),U,3)
"RTN","ORWPCE2",68,0)
 Q
"RTN","ORWPCE2",69,0)
GAFOK(ORY) ; Returns true if all supporting MH GAF Code exists
"RTN","ORWPCE2",70,0)
 S ORY=0
"RTN","ORWPCE2",71,0)
 I $T(GAFHX^YSGAFAPI)'="",$T(ENT^YSGAFAP1)'="" S ORY=1
"RTN","ORWPCE2",72,0)
 Q
"RTN","ORWPCE2",73,0)
MHCLINIC(ORY,ORIEN)     ; See if this is a mental health clinic
"RTN","ORWPCE2",74,0)
 I $T(MHCLIN^SDUTL2)="" S ORY=1
"RTN","ORWPCE2",75,0)
 E  S ORY=$$MHCLIN^SDUTL2(ORIEN)
"RTN","ORWPCE2",76,0)
 Q
"RTN","ORWPCE2",77,0)
LOADGAF(ORY,ORINPUT) ; Retrieve GAF scores
"RTN","ORWPCE2",78,0)
 D GAFHX^YSGAFAPI(.ORY,.ORINPUT)
"RTN","ORWPCE2",79,0)
 Q
"RTN","ORWPCE2",80,0)
SAVEGAF(ORY,ORINPUT) ; Save new GAF score
"RTN","ORWPCE2",81,0)
 N ORDATA
"RTN","ORWPCE2",82,0)
 D ENT^YSGAFAP1(.ORDATA,.ORINPUT)
"RTN","ORWPCE2",83,0)
 S ORY=($G(ORDATA(1))="[DATA]")
"RTN","ORWPCE2",84,0)
 Q
"RTN","ORWPCE2",85,0)
FORCE(ORY,USER,LOC) ; Retrieve FORCE GUI PCE Entry for a given User/Location
"RTN","ORWPCE2",86,0)
 N SRV,ORTMP,ORERR
"RTN","ORWPCE2",87,0)
 S USER=$G(USER,DUZ)
"RTN","ORWPCE2",88,0)
 S SRV=$P($G(^VA(200,USER,5)),U)
"RTN","ORWPCE2",89,0)
 D GETLST^XPAR(.ORTMP,"USR^LOC.`"_$G(LOC)_"^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG","ORWPCE FORCE PCE ENTRY","Q",.ORERR)
"RTN","ORWPCE2",90,0)
 S ORY=+$P($G(ORTMP(1)),U,2)
"RTN","ORWPCE2",91,0)
 Q
"RTN","ORWPCE2",92,0)
HASCPT(ORY,ORLIST)        ; Returns true if there are any mapped CPT Codes
"RTN","ORWPCE2",93,0)
 N IEN,IDX,FOUND
"RTN","ORWPCE2",94,0)
 S IDX=0
"RTN","ORWPCE2",95,0)
 F  S IDX=$O(ORLIST(IDX)) Q:'+IDX  D
"RTN","ORWPCE2",96,0)
 . S FOUND=0
"RTN","ORWPCE2",97,0)
 . S IEN=$$FIND1^DIC(811.1,"","QX",ORLIST(IDX))
"RTN","ORWPCE2",98,0)
 . I +IEN S FOUND=+$$GET1^DIQ(811.1,IEN,.05,"I")
"RTN","ORWPCE2",99,0)
 . S ORY(IDX)=ORLIST(IDX)_"="_FOUND
"RTN","ORWPCE2",100,0)
 Q
"RTN","ORWPCE2",101,0)
ASKPCE(ORY,USER,LOC) ; Returns ORWPCE ASK ENCOUNTER UPDATE parameter value
"RTN","ORWPCE2",102,0)
 N SRV,ORTMP,ORERR
"RTN","ORWPCE2",103,0)
 S USER=$G(USER,DUZ)
"RTN","ORWPCE2",104,0)
 S SRV=$P($G(^VA(200,USER,5)),U)
"RTN","ORWPCE2",105,0)
 D GETLST^XPAR(.ORTMP,"USR^LOC.`"_$G(LOC)_"^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG","ORWPCE ASK ENCOUNTER UPDATE","Q",.ORERR)
"RTN","ORWPCE2",106,0)
 S ORY=+$P($G(ORTMP(1)),U,2)
"RTN","ORWPCE2",107,0)
 Q
"RTN","ORWPCE2",108,0)
GAFURL(URL) ;Returns the MH GAF Web Page URL
"RTN","ORWPCE2",109,0)
 S URL=""
"RTN","ORWPCE2",110,0)
 I $T(GAFURL^YTAPI5)'="" D
"RTN","ORWPCE2",111,0)
 .N ORY
"RTN","ORWPCE2",112,0)
 .D GAFURL^YTAPI5(.ORY)
"RTN","ORWPCE2",113,0)
 .I $G(ORY(1))="[DATA]" S URL=$G(ORY(2))
"RTN","ORWPCE2",114,0)
 Q
"RTN","ORWPCE2",115,0)
MHTESTOK(ORY) ; Returns True if all supporting MH Test APIs exist
"RTN","ORWPCE2",116,0)
 D GAFOK(.ORY)
"RTN","ORWPCE2",117,0)
 I +ORY,+$G(DUZ),$T(SAVEIT^YTAPI1)'="",$T(PREVIEW^YTAPI4)'="",$T(SHOWALL^YTAPI3)'="",$T(LISTONE^YTAPI)'="",$T(MHS^PXRMRPCC)'="",$T(MHR^PXRMRPCC)'="",$T(MH^PXRMRPCC)'="" D
"RTN","ORWPCE2",118,0)
 . N SRV
"RTN","ORWPCE2",119,0)
 . S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORWPCE2",120,0)
 . S ORY=$$GET^XPAR(DUZ_";VA(200,^SRV.`"_+$G(SRV)_"^DIV^SYS","PXRM MENTAL HEALTH ACTIVE",1,"Q")
"RTN","ORWPCE2",121,0)
 . I +ORY S ORY=1
"RTN","ORWPCE2",122,0)
 Q
"RTN","ORWPCE2",123,0)
MHATHRZD(ORY,TEST,USER) ;Indicates that user can score test
"RTN","ORWPCE2",124,0)
 N ORYS,ORANS
"RTN","ORWPCE2",125,0)
 I $T(PRIVL^YTAPI5)="" S ORY=1 Q
"RTN","ORWPCE2",126,0)
 S ORY=0
"RTN","ORWPCE2",127,0)
 S ORYS("CODE")=TEST
"RTN","ORWPCE2",128,0)
 S ORYS("STAFF")=USER
"RTN","ORWPCE2",129,0)
 D PRIVL^YTAPI5(.ORANS,.ORYS)
"RTN","ORWPCE2",130,0)
 I $G(ORANS(1))="[DATA]" S ORY=+$P($G(ORANS(2)),U,1)
"RTN","ORWPCE2",131,0)
 Q
"RTN","ORWPCE2",132,0)
ANYTIME(ORY) ;Returns status of the ORWPCE ANYTIME ENCOUNTERS parameter
"RTN","ORWPCE2",133,0)
 N SRV
"RTN","ORWPCE2",134,0)
 S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORWPCE2",135,0)
 S ORY=$$GET^XPAR(DUZ_";VA(200,^SRV.`"_+$G(SRV)_"^DIV^SYS","ORWPCE ANYTIME ENCOUNTERS",1,"Q")
"RTN","ORWPCE2",136,0)
 I +ORY S ORY=1
"RTN","ORWPCE2",137,0)
 Q
"RTN","ORWPCE2",138,0)
AUTOVSIT(ORY,LOC) ; Returns TRUE if automatic selection of Visit Type
"RTN","ORWPCE2",139,0)
 N SRV
"RTN","ORWPCE2",140,0)
 S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORWPCE2",141,0)
 S ORY=$$GET^XPAR(DUZ_";VA(200,^LOC.`"_$G(LOC)_"^SRV.`"_+$G(SRV)_"^DIV^SYS","ORWPCE DISABLE AUTO VISIT TYPE",1,"Q")
"RTN","ORWPCE2",142,0)
 I +ORY S ORY=1
"RTN","ORWPCE2",143,0)
 S ORY='ORY
"RTN","ORWPCE2",144,0)
 Q
"RTN","ORWPCE2",145,0)
DOCHKOUT(ORY,LOC) ; Returns TRUE if automatic selection of Visit Type
"RTN","ORWPCE2",146,0)
 N SRV
"RTN","ORWPCE2",147,0)
 S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORWPCE2",148,0)
 S ORY=$$GET^XPAR(DUZ_";VA(200,^LOC.`"_$G(LOC)_"^SRV.`"_+$G(SRV)_"^DIV^SYS","ORWPCE DISABLE AUTO CHECKOUT",1,"Q")
"RTN","ORWPCE2",149,0)
 I +ORY S ORY=1
"RTN","ORWPCE2",150,0)
 S ORY='ORY
"RTN","ORWPCE2",151,0)
 Q
"RTN","ORWPCE2",152,0)
CHKOUT(LOC) ; Returns TRUE if automatic selection of Visit Type
"RTN","ORWPCE2",153,0)
 N ORY
"RTN","ORWPCE2",154,0)
 D DOCHKOUT(.ORY,LOC)
"RTN","ORWPCE2",155,0)
 Q ORY
"RTN","ORWPCE2",156,0)
EXCLUDED(ORY,LOC,TYPE) ; Returns list of excluded PCE data elements
"RTN","ORWPCE2",157,0)
 N SRV,PARAM
"RTN","ORWPCE2",158,0)
 S PARAM=$S(TYPE=1:"IMMUNIZATIONS",TYPE=2:"SKIN TESTS",TYPE=3:"PATIENT ED",TYPE=4:"HEALTH FACTORS",TYPE=5:"EXAMS",1:"")
"RTN","ORWPCE2",159,0)
 Q:PARAM=""
"RTN","ORWPCE2",160,0)
 S SRV=$P($G(^VA(200,DUZ,5)),U)
"RTN","ORWPCE2",161,0)
 S PARAM="ORWPCE EXCLUDE "_PARAM
"RTN","ORWPCE2",162,0)
 D GETLST^XPAR(.ORY,"USR^LOC.`"_$G(LOC)_"^SRV.`"_+$G(SRV)_"^DIV^SYS^PKG",PARAM,"Q",.ORERR)
"RTN","ORWPCE2",163,0)
 Q
"RTN","ORWPCE2",164,0)
ISCLINIC(ORY,ORLOC) ; Returns TRUE if location is a clinic
"RTN","ORWPCE2",165,0)
 N ORTYP
"RTN","ORWPCE2",166,0)
 S ORY=0
"RTN","ORWPCE2",167,0)
 S ORTYP=$$GET1^DIQ(44,+ORLOC,2,"I")
"RTN","ORWPCE2",168,0)
 I (ORTYP="C")!(ORTYP="M") S ORY=1
"RTN","ORWPCE2",169,0)
 Q
"RTN","ORWPCE2",170,0)
HNCOK(ORY) ; Returns true if Head and/or Neck Cancer is enabled
"RTN","ORWPCE2",171,0)
 S ORY=0
"RTN","ORWPCE2",172,0)
 I $$PATCH^XPDUTL("DG*5.3*397"),$$PATCH^XPDUTL("SD*5.3*244"),$$PATCH^XPDUTL("PX*1.0*111"),$$PATCH^XPDUTL("IVM*2.0*46") S ORY=1
"RTN","ORWPCE2",173,0)
 Q
"RTN","ORWPCE2",174,0)
 ;
"RTN","ORWPCE2",175,0)
CODACTIV(ORY,ORCODE,ORAPP,ORDATE)       ; Is code active on the given date?
"RTN","ORWPCE2",176,0)
 ; Remote procedure:  ORWPCE ACTIVE CODE
"RTN","ORWPCE2",177,0)
 ; ORCODE = ICD or CPT code to be checked
"RTN","ORWPCE2",178,0)
 ; ORAPP  = "ICD", "GMPX" or "CHP"
"RTN","ORWPCE2",179,0)
 ; ORDATE = Date to be checked (defaults to current date)
"RTN","ORWPCE2",180,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE2",181,0)
 S ORY=1
"RTN","ORWPCE2",182,0)
 I ORAPP="ICD" D  I 1
"RTN","ORWPCE2",183,0)
 . N ORI F ORI=1:1:$L(ORCODE,"/") S ORY=+$$STATCHK^ICDXCODE("DIAGNOSIS",$P(ORCODE,"/",ORI),ORDATE) Q:'ORY
"RTN","ORWPCE2",184,0)
 I ORAPP="GMPX" D  I 1
"RTN","ORWPCE2",185,0)
 . N LEX
"RTN","ORWPCE2",186,0)
 . S ORY=+$$STATCHK^LEXSRC2(ORCODE,ORDATE,.LEX)
"RTN","ORWPCE2",187,0)
 E  I ORAPP="CHP" D
"RTN","ORWPCE2",188,0)
 . S ORY=+$$STATCHK^ICPTAPIU(ORCODE,ORDATE)
"RTN","ORWPCE2",189,0)
 Q
"RTN","ORWPCE2",190,0)
ICDACTIV(ORCODE,ORDATE) ; Check for active ICD code
"RTN","ORWPCE2",191,0)
 D CODACTIV(.ORY,ORCODE,"ICD",$G(ORDATE))
"RTN","ORWPCE2",192,0)
 Q +ORY
"RTN","ORWPCE2",193,0)
CPTACTIV(ORCODE,ORDATE) ; Check for active CPT code
"RTN","ORWPCE2",194,0)
 D CODACTIV(.ORY,ORCODE,"CHP",$G(ORDATE))
"RTN","ORWPCE2",195,0)
 Q +ORY
"RTN","ORWPCE2",196,0)
CXNOSHOW(ORY,ORDOCIEN) ; Should workload requirement be skipped for this note's visit?
"RTN","ORWPCE2",197,0)
 ; RETURN VALUE:  0=SKIP ALL GUI WORKLOAD REQUIREMENTS
"RTN","ORWPCE2",198,0)
 ;                1=CONTINUE WITH OTHER GUI WORKLOAD LOGIC
"RTN","ORWPCE2",199,0)
 N ORTIU
"RTN","ORWPCE2",200,0)
 D DOCPARM^TIUSRVP1(.ORTIU,ORDOCIEN)          ; DBIA #4331
"RTN","ORWPCE2",201,0)
 S ORY=+$$CHKWKL^TIUPXAP2(ORDOCIEN,ORTIU(0))  ; DBIA #4332
"RTN","ORWPCE2",202,0)
 Q
"RTN","ORWPCE3")
0^23^B58956270
"RTN","ORWPCE3",1,0)
ORWPCE3 ; SLC/KCM/REV/JM/TC - Get a PCE encounter for a TIU document ;11/05/13  10:03
"RTN","ORWPCE3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,190,280,306,371,361**;Dec 17, 1997;Build 39
"RTN","ORWPCE3",3,0)
 ;
"RTN","ORWPCE3",4,0)
PCE4NOTE(LST,IEN,DFN,VSITSTR) ; Return encounter for an associated note
"RTN","ORWPCE3",5,0)
 ; LST(1)=HDR^AllowEdit^CPTRequired^VStr^Author^hasCPT
"RTN","ORWPCE3",6,0)
 ; LST(n)=TYP+^CODE^CAT^NARR^QUAL1^QUAL2 (QUAL1=Primary!Qty, QUAL2=Prv)
"RTN","ORWPCE3",7,0)
 N VISIT,VSTR,ILST,LOC,CODE,PRIM,QTY,CAT,NARR,PRV,X0,X12,X802,X811,VTYP
"RTN","ORWPCE3",8,0)
 N IPOV,ICPT,IPRV,IIMM,ISK,IPED,IHF,IXAM,ITRT,ICOM,MIDX,MIEN,MCNT,MODS
"RTN","ORWPCE3",9,0)
 I +$G(IEN)<1 D  I 1 ; Get PCE Data on a new note not yet saved
"RTN","ORWPCE3",10,0)
 . S (X0,X12)=""
"RTN","ORWPCE3",11,0)
 . S VISIT=$$GETENC^PXAPI(DFN,$P(VSITSTR,";",2),$P(VSITSTR,";"))
"RTN","ORWPCE3",12,0)
 . S VSTR=VSITSTR
"RTN","ORWPCE3",13,0)
 E  D
"RTN","ORWPCE3",14,0)
 . S X0=^TIU(8925,IEN,0),X12=$G(^(12))
"RTN","ORWPCE3",15,0)
 . S VISIT=$P(X12,U,7)
"RTN","ORWPCE3",16,0)
 . I 'VISIT S VISIT=$P(X0,U,3)
"RTN","ORWPCE3",17,0)
 . D NOTEVSTR^ORWPCE(.VSTR,IEN)
"RTN","ORWPCE3",18,0)
 S VTYP=$P(VSTR,";",3)
"RTN","ORWPCE3",19,0)
 S ILST=1
"RTN","ORWPCE3",20,0)
 S ICOM=0
"RTN","ORWPCE3",21,0)
 S LST(1)="HDR"_U_("HID"[VTYP)_U_$P(X0,U,11)_U_VSTR_U_$P(X12,U,2)
"RTN","ORWPCE3",22,0)
 ;add hasCPT node
"RTN","ORWPCE3",23,0)
 S LST(1)=LST(1)_U_0
"RTN","ORWPCE3",24,0)
 I VISIT'>0 D  Q
"RTN","ORWPCE3",25,0)
 . I $G(VSTR)'="" M LST=^TMP("ORWPCE",$J,VSTR)  ; get cached visit data
"RTN","ORWPCE3",26,0)
 I $P(LST(1),U,2),VTYP="H" Q                    ; quit if admission
"RTN","ORWPCE3",27,0)
 K ^TMP("PXKENC",$J)
"RTN","ORWPCE3",28,0)
 D ENCEVENT^PXAPI(VISIT)
"RTN","ORWPCE3",29,0)
 I '$D(^TMP("PXKENC",$J,VISIT,"VST",VISIT,0)) Q
"RTN","ORWPCE3",30,0)
 S $P(LST(1),U,6)=$D(^TMP("PXKENC",$J,VISIT,"CPT"))\10
"RTN","ORWPCE3",31,0)
 S X0=^TMP("PXKENC",$J,VISIT,"VST",VISIT,0),LOC=+$P(X0,U,22)
"RTN","ORWPCE3",32,0)
 S ILST=ILST+1,LST(ILST)="VST^DT^"_$P(X0,U)
"RTN","ORWPCE3",33,0)
 S ILST=ILST+1,LST(ILST)="VST^PT^"_$P(X0,U,5)
"RTN","ORWPCE3",34,0)
 S ILST=ILST+1,LST(ILST)="VST^HL^"_LOC_"^^"_$P($G(^SC(LOC,0)),U)
"RTN","ORWPCE3",35,0)
 S ILST=ILST+1,LST(ILST)="VST^PS^0"  ;outpt
"RTN","ORWPCE3",36,0)
 ;S X0=$G(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800))
"RTN","ORWPCE3",37,0)
 N VAL
"RTN","ORWPCE3",38,0)
 D SCSEL^ORWPCE(.VAL,$P(X0,U,5),$P(X0,U),LOC,VISIT)
"RTN","ORWPCE3",39,0)
 S ILST=ILST+1,LST(ILST)="VST^SC^"_$P($P(VAL,";",1),U,2)
"RTN","ORWPCE3",40,0)
 S ILST=ILST+1,LST(ILST)="VST^AO^"_$P($P(VAL,";",2),U,2)
"RTN","ORWPCE3",41,0)
 S ILST=ILST+1,LST(ILST)="VST^IR^"_$P($P(VAL,";",3),U,2)
"RTN","ORWPCE3",42,0)
 S ILST=ILST+1,LST(ILST)="VST^EC^"_$P($P(VAL,";",4),U,2)
"RTN","ORWPCE3",43,0)
 S ILST=ILST+1,LST(ILST)="VST^MST^"_$P($P(VAL,";",5),U,2)
"RTN","ORWPCE3",44,0)
 I $P(VAL,";",6)'="" D
"RTN","ORWPCE3",45,0)
 .S ILST=ILST+1,LST(ILST)="VST^HNC^"_$P($P(VAL,";",6),U,2)
"RTN","ORWPCE3",46,0)
 I $P(VAL,";",7)'="" D
"RTN","ORWPCE3",47,0)
 .S ILST=ILST+1,LST(ILST)="VST^CV^"_$P($P(VAL,";",7),U,2)
"RTN","ORWPCE3",48,0)
 ;for provider
"RTN","ORWPCE3",49,0)
 ; LST(n)="PRV"^ien^^^name^primary/secondary flag
"RTN","ORWPCE3",50,0)
 S IPRV=0 F  S IPRV=$O(^TMP("PXKENC",$J,VISIT,"PRV",IPRV)) Q:'IPRV  D
"RTN","ORWPCE3",51,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"PRV",IPRV,0)
"RTN","ORWPCE3",52,0)
 . ;Q:$P(X0,U,4)'="P"
"RTN","ORWPCE3",53,0)
 . S CODE=$P(X0,U),NARR=$P($G(^VA(200,CODE,0)),U)
"RTN","ORWPCE3",54,0)
 . S PRIM=($P(X0,U,4)="P")
"RTN","ORWPCE3",55,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",56,0)
 . S LST(ILST)="PRV"_U_CODE_"^^^"_NARR_"^"_PRIM
"RTN","ORWPCE3",57,0)
 S IPOV=0 F  S IPOV=$O(^TMP("PXKENC",$J,VISIT,"POV",IPOV)) Q:'IPOV  D
"RTN","ORWPCE3",58,0)
 . N ICDCSYS
"RTN","ORWPCE3",59,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"POV",IPOV,0),X802=$G(^(802)),X811=$G(^(811))
"RTN","ORWPCE3",60,0)
 . S CODE=$P(X0,U),NARR=$P(X0,U,4),ICDCSYS=$$SAB^ICDEX($$CSI^ICDEX(80,CODE),DT)
"RTN","ORWPCE3",61,0)
 . I CODE D
"RTN","ORWPCE3",62,0)
 . . S CODE=$P($$ICDDATA^ICDXCODE(ICDCSYS,CODE,DT),U,2)
"RTN","ORWPCE3",63,0)
 . . S NARR=$$SETNARR(NARR,CODE)
"RTN","ORWPCE3",64,0)
 . S CAT=$P(X802,U)
"RTN","ORWPCE3",65,0)
 . S:CAT CAT=$P(^AUTNPOV(CAT,0),U)
"RTN","ORWPCE3",66,0)
 . S PRIM=($P(X0,U,12)="P")
"RTN","ORWPCE3",67,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",68,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",69,0)
 . S LST(ILST)="POV"_U_CODE_U_CAT_U_NARR_U_PRIM_U_PRV
"RTN","ORWPCE3",70,0)
 . I X811]"" D
"RTN","ORWPCE3",71,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",72,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",73,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",74,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",75,0)
 S ICPT=0 F  S ICPT=$O(^TMP("PXKENC",$J,VISIT,"CPT",ICPT)) Q:'ICPT  D
"RTN","ORWPCE3",76,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"CPT",ICPT,0),X802=$G(^(802)),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",77,0)
 . S CODE=$$CODEC^ICPTCOD($P(X0,U)) ;ICR #1995
"RTN","ORWPCE3",78,0)
 . S:CODE=-1 CODE=""
"RTN","ORWPCE3",79,0)
 . S CAT=$P(X802,U)
"RTN","ORWPCE3",80,0)
 . S:CAT CAT=$P(^AUTNPOV(CAT,0),U)
"RTN","ORWPCE3",81,0)
 . S NARR=$P(X0,U,4)
"RTN","ORWPCE3",82,0)
 . S:NARR NARR=$P(^AUTNPOV(NARR,0),U)
"RTN","ORWPCE3",83,0)
 . S QTY=$P(X0,U,16)
"RTN","ORWPCE3",84,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",85,0)
 . S MCNT=0,MIDX=0,MODS=""
"RTN","ORWPCE3",86,0)
 . F  S MIDX=$O(^TMP("PXKENC",$J,VISIT,"CPT",ICPT,1,MIDX)) Q:'MIDX  D
"RTN","ORWPCE3",87,0)
 . . S MIEN=$G(^TMP("PXKENC",$J,VISIT,"CPT",ICPT,1,MIDX,0))
"RTN","ORWPCE3",88,0)
 . . I +MIEN S MCNT=MCNT+1,MODS=MODS_";/"_MIEN
"RTN","ORWPCE3",89,0)
 . I +MCNT S MODS=MCNT_MODS
"RTN","ORWPCE3",90,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",91,0)
 . S LST(ILST)="CPT"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV_U_U_U_MODS
"RTN","ORWPCE3",92,0)
 . I X811]"" D
"RTN","ORWPCE3",93,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",94,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",95,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",96,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",97,0)
 ;for immunization:
"RTN","ORWPCE3",98,0)
 ; LST(n)="IMM"^Code^^^Series^prv^Reaction^Contraindicated^Refused
"RTN","ORWPCE3",99,0)
 S IIMM=0 F  S IIMM=$O(^TMP("PXKENC",$J,VISIT,"IMM",IIMM)) Q:'IIMM  D
"RTN","ORWPCE3",100,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"IMM",IIMM,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",101,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",102,0)
 . S:CODE NARR=$P(^AUTTIMM(CODE,0),U)
"RTN","ORWPCE3",103,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",104,0)
 . S CAT=""
"RTN","ORWPCE3",105,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",106,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",107,0)
 . S LST(ILST)="IMM"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV_U_$P(X0,U,6,7)
"RTN","ORWPCE3",108,0)
 . I X811]"" D
"RTN","ORWPCE3",109,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",110,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",111,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",112,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",113,0)
 ;for skin test:
"RTN","ORWPCE3",114,0)
 ; LST(n)="SK"^Code^^^result^prv^reading^d/t read^d/t given
"RTN","ORWPCE3",115,0)
 S ISK=0 F  S ISK=$O(^TMP("PXKENC",$J,VISIT,"SK",ISK)) Q:'ISK  D
"RTN","ORWPCE3",116,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"SK",ISK,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",117,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",118,0)
 . S:CODE NARR=$P(^AUTTSK(CODE,0),U)
"RTN","ORWPCE3",119,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",120,0)
 . S CAT=""
"RTN","ORWPCE3",121,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",122,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",123,0)
 . S LST(ILST)="SK"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV_U_$P(X0,U,5,6)_U_$P(X12,U)
"RTN","ORWPCE3",124,0)
 . I X811]"" D
"RTN","ORWPCE3",125,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",126,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",127,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",128,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",129,0)
 ;for patient education:
"RTN","ORWPCE3",130,0)
 ; LST(n)="PED"^Code^^^level of understanding^prv
"RTN","ORWPCE3",131,0)
 S IPED=0 F  S IPED=$O(^TMP("PXKENC",$J,VISIT,"PED",IPED)) Q:'IPED  D
"RTN","ORWPCE3",132,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"PED",IPED,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",133,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",134,0)
 . S:CODE NARR=$P(^AUTTEDT(CODE,0),U)
"RTN","ORWPCE3",135,0)
 . S QTY=$P(X0,U,6)
"RTN","ORWPCE3",136,0)
 . S CAT=""
"RTN","ORWPCE3",137,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",138,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",139,0)
 . S LST(ILST)="PED"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV
"RTN","ORWPCE3",140,0)
 . I X811]"" D
"RTN","ORWPCE3",141,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",142,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",143,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",144,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",145,0)
 ;for health factors:
"RTN","ORWPCE3",146,0)
 ; LST(n)="HF"^Code^^^level/severity^prv
"RTN","ORWPCE3",147,0)
 S IHF=0 F  S IHF=$O(^TMP("PXKENC",$J,VISIT,"HF",IHF)) Q:'IHF  D
"RTN","ORWPCE3",148,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"HF",IHF,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",149,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",150,0)
 . S:CODE NARR=$P(^AUTTHF(CODE,0),U)
"RTN","ORWPCE3",151,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",152,0)
 . S CAT=""
"RTN","ORWPCE3",153,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",154,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",155,0)
 . S LST(ILST)="HF"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV
"RTN","ORWPCE3",156,0)
 . I X811]"" D
"RTN","ORWPCE3",157,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",158,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",159,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",160,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",161,0)
 ;for exam:
"RTN","ORWPCE3",162,0)
 ; LST(n)="XAM"^Code^^^result^prv
"RTN","ORWPCE3",163,0)
 S IXAM=0 F  S IXAM=$O(^TMP("PXKENC",$J,VISIT,"XAM",IXAM)) Q:'IXAM  D
"RTN","ORWPCE3",164,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"XAM",IXAM,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",165,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",166,0)
 . S:CODE NARR=$P(^AUTTEXAM(CODE,0),U)
"RTN","ORWPCE3",167,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",168,0)
 . S CAT=""
"RTN","ORWPCE3",169,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",170,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",171,0)
 . S LST(ILST)="XAM"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV_U_$P(X0,U,6,7)
"RTN","ORWPCE3",172,0)
 . I X811]"" D
"RTN","ORWPCE3",173,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",174,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",175,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",176,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",177,0)
 ;for treatment:
"RTN","ORWPCE3",178,0)
 ; LST(n)="TRT"^Code^CAT^NARR^QTY^prv
"RTN","ORWPCE3",179,0)
 S ITRT=0 F  S ITRT=$O(^TMP("PXKENC",$J,VISIT,"TRT",ITRT)) Q:'ITRT  D
"RTN","ORWPCE3",180,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"TRT",ITRT,0),X802=$G(^(802)),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",181,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",182,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",183,0)
 . S CAT=$P(X802,U)
"RTN","ORWPCE3",184,0)
 . S NARR=$P(X0,U,6)
"RTN","ORWPCE3",185,0)
 . S:CAT CAT=$P(^AUTNPOV(CAT,0),U)
"RTN","ORWPCE3",186,0)
 . S:NARR NARR=$P(^AUTNPOV(NARR,0),U)
"RTN","ORWPCE3",187,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",188,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",189,0)
 . S LST(ILST)="TRT"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV
"RTN","ORWPCE3",190,0)
 . I X811]"" D
"RTN","ORWPCE3",191,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",192,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",193,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",194,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",195,0)
 Q
"RTN","ORWPCE3",196,0)
GETDXTXT(ORY,NARR,CODE) ; RPC to resolve Dx Text for PCE view
"RTN","ORWPCE3",197,0)
 S ORY=$$SETNARR(NARR,CODE)
"RTN","ORWPCE3",198,0)
 Q
"RTN","ORWPCE3",199,0)
SETNARR(NARR,CODE) ; Set narrative string
"RTN","ORWPCE3",200,0)
 N I,PRIMCODE,ICDLBL
"RTN","ORWPCE3",201,0)
 I (NARR?1.N),($P($G(^AUTNPOV(+NARR,0)),U)]"") S NARR=$P($G(^AUTNPOV(+NARR,0)),U)
"RTN","ORWPCE3",202,0)
 ;S:(ICDD]"")&($$UP^XLFSTR(NARR)'[$$UP^XLFSTR(ICDD)) NARR=$P(NARR," (")_" - "_ICDD_" - "_$S(NARR[" (":" (",1:"")_$P(NARR," (",2)
"RTN","ORWPCE3",203,0)
 ;S:NARR'[CODE NARR=$S(NARR["(SCT":$P(NARR,")")_", ",1:NARR_" (")_"ICD-9-CM "_CODE_")"
"RTN","ORWPCE3",204,0)
 I NARR["(SNOMED CT" S NARR=$P(NARR,"(")_"(SCT"_$P($P(NARR,")"),"(SNOMED CT",2)_")"
"RTN","ORWPCE3",205,0)
 E  I NARR["SNOMED CT" S NARR=$P(NARR,"SNOMED CT")_"(SCT"_$P($P(NARR,":"),"SNOMED CT",2)_")"
"RTN","ORWPCE3",206,0)
 S PRIMCODE=$S(CODE["/":$P(CODE,"/"),1:CODE),ICDLBL=$P($$CODECS^ICDEX(PRIMCODE,80,DT),U,2)
"RTN","ORWPCE3",207,0)
 I CODE["/" F I=1:1:$L(CODE,"/") D
"RTN","ORWPCE3",208,0)
 . N ICDC,ICDD S ICDC=$P(CODE,"/",I),ICDD=$$ICDDESC(ICDC)
"RTN","ORWPCE3",209,0)
 . S:(NARR'[ICDC)!((ICDD]"")&($$UP^XLFSTR(NARR)'[$$UP^XLFSTR(ICDD))) NARR=NARR_" - "_ICDD_" ("_$G(ICDLBL)_" "_ICDC_")"
"RTN","ORWPCE3",210,0)
 E  D
"RTN","ORWPCE3",211,0)
 . N ICDD S ICDD=$$ICDDESC(CODE)
"RTN","ORWPCE3",212,0)
 . S:(NARR'[CODE)!((ICDD]"")&($$UP^XLFSTR(NARR)'[$$UP^XLFSTR(ICDD))) NARR=NARR_" - "_ICDD_" ("_$G(ICDLBL)_" "_CODE_")"
"RTN","ORWPCE3",213,0)
 Q NARR
"RTN","ORWPCE3",214,0)
ICDDESC(ORCODE,ORDT) ; Get description for ICD9 Code
"RTN","ORWPCE3",215,0)
 N ICDD,ORY S ORY="",ORDT=$G(ORDT,DT)
"RTN","ORWPCE3",216,0)
 D ICDDESC^ICDXCODE("DIAGNOSIS",ORCODE,ORDT,.ICDD)
"RTN","ORWPCE3",217,0)
 I '$D(ICDD) G ICDDESQ
"RTN","ORWPCE3",218,0)
 S ORY=$$SENTENCE^XLFSTR($G(ICDD(1)))
"RTN","ORWPCE3",219,0)
ICDDESQ Q ORY
"RTN","ORWPCE4")
0^28^B18602559
"RTN","ORWPCE4",1,0)
ORWPCE4 ; SLC/JM/REV - wrap calls to PCE and AICS ;11/05/13  14:14
"RTN","ORWPCE4",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,173,190,195,215,243,295,280,306,361**;Dec 17, 1997;Build 39
"RTN","ORWPCE4",3,0)
 ;
"RTN","ORWPCE4",4,0)
 ; DBIA 2950   LOOK^LEXA          ^TMP("LEXFND",$J)
"RTN","ORWPCE4",5,0)
 ; DBIA 1609   CONFIG^LEXSET      ^TMP("LEXSCH",$J)
"RTN","ORWPCE4",6,0)
 ; DBIA 1365   DSELECT^GMPLENFM   ^TMP("IB",$J)
"RTN","ORWPCE4",7,0)
 ; DBIA 3991   $$STATCHK^ICDAPIU
"RTN","ORWPCE4",8,0)
 ;
"RTN","ORWPCE4",9,0)
 Q
"RTN","ORWPCE4",10,0)
LEX(LST,X,APP,ORDATE,ORXTND,ORINCSYN) ; return list after lexicon lookup
"RTN","ORWPCE4",11,0)
 ; Call with: X           (Required) The search text entered by the user
"RTN","ORWPCE4",12,0)
 ;            APP         (Required) The Lexicon APP parameter (e.g., "GMPX"
"RTN","ORWPCE4",13,0)
 ;                                   for Problem List Subset, "10D" for ICD-10-CM, etc.
"RTN","ORWPCE4",14,0)
 ;            [ORDATE]    (Optional) the date of interest (Defaults to TODAY - should
"RTN","ORWPCE4",15,0)
 ;                                   be passed as DATE OF SERVICE if not TODAY)
"RTN","ORWPCE4",16,0)
 ;            [ORXTND]    (Optional) Boolean flag specifying whether or not to
"RTN","ORWPCE4",17,0)
 ;                                   use an extended search (Initial search is PL Subset
"RTN","ORWPCE4",18,0)
 ;                                   of SCT, extended search is ICD (or 10D after impl.)
"RTN","ORWPCE4",19,0)
 ;                                   (Defaults to 0 (FALSE))
"RTN","ORWPCE4",20,0)
 ;            [ORINCSYN]  (Optional) Boolean flag specifying whether or not to
"RTN","ORWPCE4",21,0)
 ;                                   include synonyms for SNOMED CT Concepts
"RTN","ORWPCE4",22,0)
 ;                                   (Defaults to 0 (FALSE))
"RTN","ORWPCE4",23,0)
 ;
"RTN","ORWPCE4",24,0)
 ;   Returns: LST=local array name passed by ref, which contains search result set as:
"RTN","ORWPCE4",25,0)
 ;            <lvn>(1..n)=LEXIEN^PREFTEXT^CODESYS^CONCEPTID^ICDVER^DESIGID^PARENTSUBSCRIPT
"RTN","ORWPCE4",26,0)
 ;
"RTN","ORWPCE4",27,0)
 N LEX,ILST,I,IEN,IMPLDT,SUBSET,FILTER
"RTN","ORWPCE4",28,0)
 S FILTER=""
"RTN","ORWPCE4",29,0)
 S IMPLDT=$$IMPDATE^LEXU("10D")
"RTN","ORWPCE4",30,0)
 S:APP="CPT" APP="CHP" ; LEX PATCH 10
"RTN","ORWPCE4",31,0)
 I APP="ICD",'+$G(ORXTND) S APP=$S($E(X,1,3)?.1A2.3N:"ICD",1:"GMPX")
"RTN","ORWPCE4",32,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE4",33,0)
 S ORINCSYN=+$G(ORINCSYN)
"RTN","ORWPCE4",34,0)
 I APP="ICD",(ORDATE'<IMPLDT) S APP="10D"
"RTN","ORWPCE4",35,0)
 S SUBSET=$S(APP="GMPX":$S(ORDATE<IMPLDT:"PLS",1:"CLF"),1:APP)
"RTN","ORWPCE4",36,0)
 ; call CONFIG^LEXSET to set-up the constraints of the Lexicon search
"RTN","ORWPCE4",37,0)
 D CONFIG^LEXSET(APP,SUBSET,ORDATE)  ;DBIA 1609
"RTN","ORWPCE4",38,0)
 I APP="CHP" D
"RTN","ORWPCE4",39,0)
 . ; Set the filter for CPT only using CS APIs - format is the same as for DIC("S")
"RTN","ORWPCE4",40,0)
 . S ^TMP("LEXSCH",$J,"FIL",0)="I $L($$CPTONE^LEXU(+Y,$G(ORDATE)))!($L($$CPCONE^LEXU(+Y,$G(ORDATE))))"  ;DBIA 1609
"RTN","ORWPCE4",41,0)
 . ; Set Applications Default Flag (Lexicon can not overwrite filter)
"RTN","ORWPCE4",42,0)
 . S ^TMP("LEXSCH",$J,"ADF",0)=1
"RTN","ORWPCE4",43,0)
 ; setup and/or search
"RTN","ORWPCE4",44,0)
 S X=$$UP^XLFSTR(X)
"RTN","ORWPCE4",45,0)
 ; execute the search
"RTN","ORWPCE4",46,0)
 D SRCH(.LST,X,APP,SUBSET,ORDATE,ORINCSYN)
"RTN","ORWPCE4",47,0)
LEXX K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J),^TMP("LEXSCH",$J),^TMP("LEXLE",$J)
"RTN","ORWPCE4",48,0)
 Q
"RTN","ORWPCE4",49,0)
SRCH(LST,X,APP,SUBSET,ORDATE,ORINCSYN) ; call LOOK^LEXA to execute the search
"RTN","ORWPCE4",50,0)
 N LEX,I,IEN,ILST
"RTN","ORWPCE4",51,0)
 D LOOK^LEXA(X,APP,1,SUBSET,ORDATE)
"RTN","ORWPCE4",52,0)
 I '$D(LEX("LIST",1)) D  G LEXX
"RTN","ORWPCE4",53,0)
 . S LST(1)="-1^No matches found.^"_APP
"RTN","ORWPCE4",54,0)
 S ILST=0
"RTN","ORWPCE4",55,0)
 S LEX("LIST",1)=$$LEXXFRM(LEX("LIST",1),ORDATE,APP)
"RTN","ORWPCE4",56,0)
 I $S(APP="GMPX":1,APP="ICD":1,1:0),($P(LEX("LIST",1),U,6)'="799.9") D  I 1
"RTN","ORWPCE4",57,0)
 . I APP="ICD",($E($P(LEX("LIST",1),U,3),1,3)'="ICD") Q
"RTN","ORWPCE4",58,0)
 . S LST(1)=LEX("LIST",1),ILST=1
"RTN","ORWPCE4",59,0)
 E  S LST(1)=LEX("LIST",1),ILST=1
"RTN","ORWPCE4",60,0)
 I APP="GMPX",+$G(ORINCSYN) D SYNONYMS(.LST,.ILST,"SCT",$P(LST(1),U,4),ORDATE)
"RTN","ORWPCE4",61,0)
 S (I,IEN)=""
"RTN","ORWPCE4",62,0)
 F  S I=$O(^TMP("LEXFND",$J,I)) Q:I=""  D  ;DBIA 2950
"RTN","ORWPCE4",63,0)
 .F  S IEN=$O(^TMP("LEXFND",$J,I,IEN)) Q:IEN=""  D
"RTN","ORWPCE4",64,0)
 ..N TXT,ELEMENT S TXT=^TMP("LEXFND",$J,I,IEN)
"RTN","ORWPCE4",65,0)
 ..S ELEMENT=IEN_U_TXT
"RTN","ORWPCE4",66,0)
 ..S ELEMENT=$$LEXXFRM(ELEMENT,ORDATE,APP) Q:$S(APP="GMPX":1,APP="ICD":1,1:0)&($P(ELEMENT,U,6)="799.9")
"RTN","ORWPCE4",67,0)
 ..I APP="ICD",($E($P(ELEMENT,U,3),1,3)'="ICD") Q
"RTN","ORWPCE4",68,0)
 ..S ILST=ILST+1,LST(ILST)=ELEMENT
"RTN","ORWPCE4",69,0)
 ..I APP="GMPX",+$G(ORINCSYN) D SYNONYMS(.LST,.ILST,"SCT",$P(LST(ILST),U,4),ORDATE)
"RTN","ORWPCE4",70,0)
 I '$D(LST(1)) S LST(1)="-1^No matches found.^"_APP
"RTN","ORWPCE4",71,0)
 Q
"RTN","ORWPCE4",72,0)
LEXXFRM(ORX,ORDATE,ORAPP) ; Transform text for SCT look-up
"RTN","ORWPCE4",73,0)
 N ORLEX,ORY,ORICD,ORSCT,ORTXT,ORCODSYS,ORCCODE,ORDCODE
"RTN","ORWPCE4",74,0)
 S ORLEX=$P(ORX,U),ORTXT=$P(ORX,U,2),(ORCCODE,ORCODSYS)=""
"RTN","ORWPCE4",75,0)
 I (ORTXT["("),(ORTXT[")") D
"RTN","ORWPCE4",76,0)
 . S ORCODSYS=$RE($P($P($RE(ORTXT),"("),")",2))
"RTN","ORWPCE4",77,0)
 . S ORCCODE=$RE($P($RE(ORCODSYS)," ")),ORCODSYS=$RE($P($RE(ORCODSYS)," ",2,99))
"RTN","ORWPCE4",78,0)
 . S ORTXT=$$TRIM^XLFSTR($RE($P($RE(ORTXT),"(",2,99)))
"RTN","ORWPCE4",79,0)
 S ORY=$$SETELEM(ORLEX,ORTXT,ORCODSYS,ORCCODE,ORDATE)
"RTN","ORWPCE4",80,0)
 Q ORY
"RTN","ORWPCE4",81,0)
SYNONYMS(LST,ILST,ORCSYS,ORCCODE,ORDT) ; Get synonyms for expression
"RTN","ORWPCE4",82,0)
 N ORSYN,ORI,ORDAD S ORDT=$G(ORDT,DT),ORDAD=ILST
"RTN","ORWPCE4",83,0)
 D GETSYN^LEXTRAN1(ORCSYS,ORCCODE,ORDT,"ORSYN",1)
"RTN","ORWPCE4",84,0)
 S ORI=0 F  S ORI=$O(ORSYN("S",ORI)) Q:+ORI'>0  D
"RTN","ORWPCE4",85,0)
 . N ELEMENT,TXT,IEN,ORDCODE
"RTN","ORWPCE4",86,0)
 . S IEN=$P(ORSYN("S",ORI),U,2),TXT=$P(ORSYN("S",ORI),U)
"RTN","ORWPCE4",87,0)
 . S ELEMENT=$$SETELEM(IEN,TXT,"SNOMED CT",ORCCODE,ORDT)_U_ORDAD
"RTN","ORWPCE4",88,0)
 . S ILST=ILST+1,LST(ILST)=ELEMENT
"RTN","ORWPCE4",89,0)
 Q
"RTN","ORWPCE4",90,0)
SETELEM(ORLEX,ORTXT,ORCODSYS,ORCCODE,ORDATE) ; Set List Element
"RTN","ORWPCE4",91,0)
 ;LEXIEN^PREFTEXT^CODESYS^CONCEPTID^ICDVER^ICDCODE^DESIGID^PARENTSUBSCRIPT
"RTN","ORWPCE4",92,0)
 N ORY,ORDCODE,ORIMPDT,ORICD
"RTN","ORWPCE4",93,0)
 S ORIMPDT=$$IMPDATE^LEXU("10D")
"RTN","ORWPCE4",94,0)
 S ORY=ORLEX_U_ORTXT_U_ORCODSYS_U_ORCCODE
"RTN","ORWPCE4",95,0)
 I $S(ORCODSYS["SNOMED":1,ORCODSYS["VHAT":1,1:0) D
"RTN","ORWPCE4",96,0)
 .S ORY=ORY_U_$S(ORDATE<ORIMPDT:"ICD-9-CM",1:""),ORICD=""
"RTN","ORWPCE4",97,0)
 .S:ORDATE<ORIMPDT ORICD=$$GETDX^ORQQPL1(ORCCODE,ORCODSYS,ORDATE)
"RTN","ORWPCE4",98,0)
 .S ORDCODE=$$GETDES^LEXTRAN1("SCT",ORTXT,ORDATE)
"RTN","ORWPCE4",99,0)
 .S ORDCODE=$S(+ORDCODE=1:$P(ORDCODE,U,2),1:"")
"RTN","ORWPCE4",100,0)
 .S ORY=ORY_U_ORICD_U_ORDCODE
"RTN","ORWPCE4",101,0)
 E  S ORY=ORY_U_U
"RTN","ORWPCE4",102,0)
 Q ORY
"RTN","ORY361")
0^29^B8049239
"RTN","ORY361",1,0)
ORY361 ;ISL/TC - Post-install for patch OR*3*361 ;03/24/14  12:29
"RTN","ORY361",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**361**;Dec 17, 1997;Build 39
"RTN","ORY361",3,0)
 ;
"RTN","ORY361",4,0)
 ;  External References:
"RTN","ORY361",5,0)
 ;  ^DIC    ICR #10006
"RTN","ORY361",6,0)
 ;  ^DIE    ICR #10018
"RTN","ORY361",7,0)
 ;
"RTN","ORY361",8,0)
POST ; Initiate post-init processes
"RTN","ORY361",9,0)
 N ORERR
"RTN","ORY361",10,0)
 D BMES^XPDUTL("Setting default value of parameter ORQQPL SUPPRESS CODES to NO")
"RTN","ORY361",11,0)
 D EN^XPAR("PKG","ORQQPL SUPPRESS CODES",1,"NO",.ORERR)
"RTN","ORY361",12,0)
 I $D(ORERR) D BMES^XPDUTL("Error setting parameter: "_$P(ORERR,"^",2))
"RTN","ORY361",13,0)
 D UPDTRPT
"RTN","ORY361",14,0)
 Q
"RTN","ORY361",15,0)
 ;
"RTN","ORY361",16,0)
UPDTRPT ; Modify ICD Column Headers display text in PL Clinical Reports in OE/RR REPORTS file (101.24)
"RTN","ORY361",17,0)
 N I
"RTN","ORY361",18,0)
 F I=1:1:4  D
"RTN","ORY361",19,0)
 .N DIC,DA,X,J,ORIFN
"RTN","ORY361",20,0)
 .S DIC="^ORD(101.24,",DIC(0)="BIXZ"
"RTN","ORY361",21,0)
 .S X=$S(I=1:"ORRPW PROBLEM ACTIVE",I=2:"ORRPW PROBLEM ALL",I=3:"ORRPW DOD PROBLEM LIST ALL",1:"ORRPW PROBLEM INACTIVE")
"RTN","ORY361",22,0)
 .D ^DIC I Y=-1 K DIC Q  ; perform top file level search for record X, if unsuccessful quit
"RTN","ORY361",23,0)
 .S DA(1)=+Y,DIC=DIC_DA(1)_",3,",DIC(0)="IXZ",ORIFN=DA(1)
"RTN","ORY361",24,0)
 .I ORIFN>1000 D  ; if report is a national standard, then proceed to modify the below X fields in the subfile #101.243
"RTN","ORY361",25,0)
 ..N ORDUPCOL,K,CNT,ORSUB
"RTN","ORY361",26,0)
 ..D BMES^XPDUTL("Modifying the following column names of the "_X_" report:")
"RTN","ORY361",27,0)
 ..F K=6:1:7  D  ; check for duplicate ICD column headers and delete them
"RTN","ORY361",28,0)
 ...S CNT=0,ORSUB="" F  S ORSUB=$O(^ORD(101.24,ORIFN,3,"C",K,ORSUB)) Q:'ORSUB  D
"RTN","ORY361",29,0)
 ....S CNT=CNT+1,ORDUPCOL(CNT)=ORSUB
"RTN","ORY361",30,0)
 ...I CNT>1 D
"RTN","ORY361",31,0)
 ....N L F L=2:1:CNT D
"RTN","ORY361",32,0)
 .....N DIK,DA S DIK=DIC,DA(1)=ORIFN,DA=ORDUPCOL(L)
"RTN","ORY361",33,0)
 .....D ^DIK K DIK
"RTN","ORY361",34,0)
 ..F J=1:1:2  D
"RTN","ORY361",35,0)
 ...N X
"RTN","ORY361",36,0)
 ...S X=$S(J=1:"Primary ICD-9-CM Code & Description",J=2:"Secondary ICD-9-CM Code & Description")
"RTN","ORY361",37,0)
 ...D ^DIC I Y=-1 K DIC Q  ;perform subfile entry level search for record X, if unsuccessful quit
"RTN","ORY361",38,0)
 ...N DIE,DA,DR S DIE=DIC S DA=+Y,DA(1)=ORIFN
"RTN","ORY361",39,0)
 ...S DR=".01///"_$S(J=1:"Primary ICD Code & Description",J=2:"Secondary ICD Code & Description")
"RTN","ORY361",40,0)
 ...D BMES^XPDUTL("   From "_X_" to "_$P(DR,"///",2)_".")
"RTN","ORY361",41,0)
 ...D ^DIE K DIE,DR,DA,Y Q  ;edit the COLUMN HEADERS text of the X COLUMN HEADER multiple accordingly
"RTN","ORY361",42,0)
 ..K DIC Q
"RTN","ORY361",43,0)
 .Q
"RTN","ORY361",44,0)
 Q
"RTN","ORY361",45,0)
 ;
"VER")
8.0^22.0
**END**
**END**
