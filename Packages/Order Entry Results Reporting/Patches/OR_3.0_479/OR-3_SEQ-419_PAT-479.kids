Released OR*3*479 SEQ #419
Extracted from mail message
**KIDS**:OR*3.0*479^

**INSTALL NAME**
OR*3.0*479
"BLD",11068,0)
OR*3.0*479^ORDER ENTRY/RESULTS REPORTING^0^3180718^y
"BLD",11068,1,0)
^^1^1^3180504^^
"BLD",11068,1,1,0)
VSR RPC BACKDOOR UPDATES
"BLD",11068,4,0)
^9.64PA^^
"BLD",11068,6.3)
5
"BLD",11068,"ABPKG")
n
"BLD",11068,"KRN",0)
^9.67PA^779.2^20
"BLD",11068,"KRN",.4,0)
.4
"BLD",11068,"KRN",.401,0)
.401
"BLD",11068,"KRN",.402,0)
.402
"BLD",11068,"KRN",.403,0)
.403
"BLD",11068,"KRN",.5,0)
.5
"BLD",11068,"KRN",.84,0)
.84
"BLD",11068,"KRN",3.6,0)
3.6
"BLD",11068,"KRN",3.8,0)
3.8
"BLD",11068,"KRN",9.2,0)
9.2
"BLD",11068,"KRN",9.8,0)
9.8
"BLD",11068,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",11068,"KRN",9.8,"NM",1,0)
ORQQPL1^^0^B134129327
"BLD",11068,"KRN",9.8,"NM","B","ORQQPL1",1)

"BLD",11068,"KRN",19,0)
19
"BLD",11068,"KRN",19,"NM",0)
^9.68A^^
"BLD",11068,"KRN",19.1,0)
19.1
"BLD",11068,"KRN",101,0)
101
"BLD",11068,"KRN",409.61,0)
409.61
"BLD",11068,"KRN",771,0)
771
"BLD",11068,"KRN",779.2,0)
779.2
"BLD",11068,"KRN",870,0)
870
"BLD",11068,"KRN",8989.51,0)
8989.51
"BLD",11068,"KRN",8989.52,0)
8989.52
"BLD",11068,"KRN",8994,0)
8994
"BLD",11068,"KRN","B",.4,.4)

"BLD",11068,"KRN","B",.401,.401)

"BLD",11068,"KRN","B",.402,.402)

"BLD",11068,"KRN","B",.403,.403)

"BLD",11068,"KRN","B",.5,.5)

"BLD",11068,"KRN","B",.84,.84)

"BLD",11068,"KRN","B",3.6,3.6)

"BLD",11068,"KRN","B",3.8,3.8)

"BLD",11068,"KRN","B",9.2,9.2)

"BLD",11068,"KRN","B",9.8,9.8)

"BLD",11068,"KRN","B",19,19)

"BLD",11068,"KRN","B",19.1,19.1)

"BLD",11068,"KRN","B",101,101)

"BLD",11068,"KRN","B",409.61,409.61)

"BLD",11068,"KRN","B",771,771)

"BLD",11068,"KRN","B",779.2,779.2)

"BLD",11068,"KRN","B",870,870)

"BLD",11068,"KRN","B",8989.51,8989.51)

"BLD",11068,"KRN","B",8989.52,8989.52)

"BLD",11068,"KRN","B",8994,8994)

"BLD",11068,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",11068,"QUES",0)
^9.62^^
"BLD",11068,"REQB",0)
^9.611^1^1
"BLD",11068,"REQB",1,0)
OR*3.0*350^1
"BLD",11068,"REQB","B","OR*3.0*350",1)

"MBREQ")
0
"PKG",174,-1)
1^1
"PKG",174,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",174,20,0)
^9.402P^^
"PKG",174,22,0)
^9.49I^1^1
"PKG",174,22,1,0)
3.0^2971217^2990325^66481
"PKG",174,22,1,"PAH",1,0)
479^3180718
"PKG",174,22,1,"PAH",1,1,0)
^^1^1^3180718
"PKG",174,22,1,"PAH",1,1,1,0)
VSR RPC BACKDOOR UPDATES
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","ORQQPL1")
0^1^B134129327^B93414156
"RTN","ORQQPL1",1,0)
ORQQPL1 ; ALB/PDR,REV,ISL/JER,TC,LAB - PROBLEM LIST FOR CPRS GUI ;03 April 2018 10:25 AM
"RTN","ORQQPL1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,148,173,203,206,249,243,280,306,361,385,350,479**;Dec 17, 1997;Build 5
"RTN","ORQQPL1",3,0)
 ;
"RTN","ORQQPL1",4,0)
 ;------------------------- GET PROBLEM FROM LEXICON -------------------
"RTN","ORQQPL1",5,0)
 ;
"RTN","ORQQPL1",6,0)
LEXSRCH(LIST,FROM,N,VIEW,ORDATE) ; Get candidate Problems from LEX file
"RTN","ORQQPL1",7,0)
 N LEX,VAL,VAL1,COD,CIEN,SYS,MAX,NAME,ORIMPDT,ICDCSYS,ICDCODE
"RTN","ORQQPL1",8,0)
 S ORIMPDT=$$IMPDATE^LEXU("10D")
"RTN","ORQQPL1",9,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORQQPL1",10,0)
 S:'$G(N) N=100
"RTN","ORQQPL1",11,0)
 S:'$L($G(VIEW)) VIEW="PL1"
"RTN","ORQQPL1",12,0)
 D CONFIG^LEXSET("GMPL",VIEW,ORDATE)
"RTN","ORQQPL1",13,0)
 D LOOK^LEXA(FROM,"GMPL",N,"",ORDATE)
"RTN","ORQQPL1",14,0)
 S S=0
"RTN","ORQQPL1",15,0)
 F  S S=$O(LEX("LIST",S)) Q:S<1  D
"RTN","ORQQPL1",16,0)
 . S VAL1=LEX("LIST",S)
"RTN","ORQQPL1",17,0)
 . S COD="",CIEN="",SYS="",NAME="",ICDCODE=""
"RTN","ORQQPL1",18,0)
 . S ICDCSYS=$S(ORDATE<ORIMPDT:"ICD",1:"10D")
"RTN","ORQQPL1",19,0)
 . I $L(VAL1,"CPT-4 ")>1 D
"RTN","ORQQPL1",20,0)
 .. S SYS=$S(ORDATE<ORIMPDT:"ICD-9-CM ",1:"ICD-10-CM ")
"RTN","ORQQPL1",21,0)
 .. S COD=$S(ORDATE<ORIMPDT:"799.9",1:"R69")
"RTN","ORQQPL1",22,0)
 .. S CIEN=""
"RTN","ORQQPL1",23,0)
 .. S NAME=$P(VAL1," (CPT-4")
"RTN","ORQQPL1",24,0)
 . I $L(VAL1,"DSM-IV ")>1 D
"RTN","ORQQPL1",25,0)
 .. S SYS="DSM-IV "
"RTN","ORQQPL1",26,0)
 .. S COD=$P($P(VAL1,SYS,2),")")
"RTN","ORQQPL1",27,0)
 .. S:COD["/" COD=$P(COD,"/",1)
"RTN","ORQQPL1",28,0)
 .. S ICDCODE=$$ONE^LEXU($P(VAL1,U,1),ORDATE,ICDCSYS)
"RTN","ORQQPL1",29,0)
 .. S ICDCODE=$S(ICDCODE["":COD,1:ICDCODE)
"RTN","ORQQPL1",30,0)
 .. S CIEN=+$$ICDDATA^ICDXCODE(ICDCSYS,$G(ICDCODE),ORDATE,"E")
"RTN","ORQQPL1",31,0)
 .. S NAME=$P(VAL1," (DSM-IV")
"RTN","ORQQPL1",32,0)
 .. ;
"RTN","ORQQPL1",33,0)
 . I $L(VAL1,"(TITLE 38 ")>1 D
"RTN","ORQQPL1",34,0)
 .. S SYS="TITLE 38 "
"RTN","ORQQPL1",35,0)
 .. S COD=$P($P(VAL1,SYS,2),")")
"RTN","ORQQPL1",36,0)
 .. S:COD["/" COD=$P(COD,"/",1)
"RTN","ORQQPL1",37,0)
 .. S ICDCODE=$$ONE^LEXU($P(VAL1,U,1),ORDATE,ICDCSYS)
"RTN","ORQQPL1",38,0)
 .. S ICDCODE=$S(ICDCODE["":COD,1:ICDCODE)
"RTN","ORQQPL1",39,0)
 .. S CIEN=+$$ICDDATA^ICDXCODE(ICDCSYS,$G(ICDCODE),ORDATE,"E")
"RTN","ORQQPL1",40,0)
 .. S NAME=$P(VAL1,"(TITLE 38 ")
"RTN","ORQQPL1",41,0)
 .. ;
"RTN","ORQQPL1",42,0)
 . I $L(VAL1,"ICD-9-CM ")>1 D
"RTN","ORQQPL1",43,0)
 .. S SYS="ICD-9-CM "
"RTN","ORQQPL1",44,0)
 .. S COD=$P($P(VAL1,SYS,2),")")
"RTN","ORQQPL1",45,0)
 .. S:COD["/" COD=$P(COD,"/",1)
"RTN","ORQQPL1",46,0)
 .. S CIEN=+$$ICDDATA^ICDXCODE("DIAG",$G(COD),ORDATE,"E")
"RTN","ORQQPL1",47,0)
 .. S NAME=$P(VAL1," (ICD-9-CM")
"RTN","ORQQPL1",48,0)
 .. ;
"RTN","ORQQPL1",49,0)
 . I $L(VAL1,"ICD-10-CM ")>1 D
"RTN","ORQQPL1",50,0)
 .. S SYS="ICD-10-CM "
"RTN","ORQQPL1",51,0)
 .. S COD=$P($P(VAL1,SYS,2),")")
"RTN","ORQQPL1",52,0)
 .. S:COD["/" COD=$P(COD,"/",1)
"RTN","ORQQPL1",53,0)
 .. S CIEN=+$$ICDDATA^ICDXCODE("DIAG",$G(COD),ORDATE,"E")
"RTN","ORQQPL1",54,0)
 .. S NAME=$P(VAL1," (ICD-10-CM")
"RTN","ORQQPL1",55,0)
 . I $L(NAME)=0 S NAME=$P($P(VAL1," (")," *")
"RTN","ORQQPL1",56,0)
 . ;
"RTN","ORQQPL1",57,0)
 . ; jeh Clean left over codes
"RTN","ORQQPL1",58,0)
 . S NAME=$P(NAME," (CPT-4")
"RTN","ORQQPL1",59,0)
 . S NAME=$P(NAME," (DSM-IV")
"RTN","ORQQPL1",60,0)
 . S NAME=$P(NAME,"(TITLE 38 ")
"RTN","ORQQPL1",61,0)
 . S NAME=$P(NAME," (ICD-9-CM")
"RTN","ORQQPL1",62,0)
 . S NAME=$P(NAME," (ICD-10-CM")
"RTN","ORQQPL1",63,0)
 . ;
"RTN","ORQQPL1",64,0)
 . S VAL=NAME_U_COD_U_CIEN_U_SYS ; ien^.01^icd^icdifn^system
"RTN","ORQQPL1",65,0)
 . S LIST(S)=VAL
"RTN","ORQQPL1",66,0)
 . S MAX=S
"RTN","ORQQPL1",67,0)
 I $G(MAX)'="" S LIST(MAX+1)=$G(LEX("MAT"))
"RTN","ORQQPL1",68,0)
 K ^TMP("LEXSCH",$J)
"RTN","ORQQPL1",69,0)
 Q
"RTN","ORQQPL1",70,0)
 ;
"RTN","ORQQPL1",71,0)
SORT(LEX) ; Sort terms alphabetically
"RTN","ORQQPL1",72,0)
 N ORI S ORI=0
"RTN","ORQQPL1",73,0)
 F  S ORI=$O(LEX("LIST",ORI)) Q:+ORI'>0  S LEX("ALPHA",$E($P(LEX("LIST",ORI),U,2),1,255),ORI)=""
"RTN","ORQQPL1",74,0)
 Q
"RTN","ORQQPL1",75,0)
 ;
"RTN","ORQQPL1",76,0)
ICDREC(COD) ;
"RTN","ORQQPL1",77,0)
 N CODIEN,ICDCSYS
"RTN","ORQQPL1",78,0)
 I COD="" Q ""
"RTN","ORQQPL1",79,0)
 S COD=$P($P(COD,U),"/")
"RTN","ORQQPL1",80,0)
 S ICDCSYS=$$SAB^ICDEX(+$$CODECS^ICDEX($G(COD),80,DT),DT) ;ICR #5747
"RTN","ORQQPL1",81,0)
 S CODIEN=+$$ICDDATA^ICDXCODE(ICDCSYS,$G(COD),DT,"E") ;ICR #5699
"RTN","ORQQPL1",82,0)
 Q CODIEN
"RTN","ORQQPL1",83,0)
 ;
"RTN","ORQQPL1",84,0)
CPTREC(COD) ;
"RTN","ORQQPL1",85,0)
 I COD="" Q ""
"RTN","ORQQPL1",86,0)
 Q $$CODEN^ICPTCOD(COD) ;ICR #1995
"RTN","ORQQPL1",87,0)
 ;
"RTN","ORQQPL1",88,0)
EDLOAD(RETURN,DA) ; LOAD EDIT ARRAYS
"RTN","ORQQPL1",89,0)
 ; DA=problem IFN
"RTN","ORQQPL1",90,0)
 N I,GMPFLD,GMPORIG,GMPL
"RTN","ORQQPL1",91,0)
 D GETFLDS^GMPLEDT3(DA)
"RTN","ORQQPL1",92,0)
 S I=0
"RTN","ORQQPL1",93,0)
 D LOADFLDS(.RETURN,"GMPFLD","NEW",.I)
"RTN","ORQQPL1",94,0)
 D LOADFLDS(.RETURN,"GMPORIG","ORG",.I)
"RTN","ORQQPL1",95,0)
 K GMPFLD,GMPORIG,GMPL  ; should not have to do this
"RTN","ORQQPL1",96,0)
 Q
"RTN","ORQQPL1",97,0)
 ;
"RTN","ORQQPL1",98,0)
LOADFLDS(RETURN,NAM,TYP,I) ; LOAD FIELDS FOR TYPE OF ARRAY
"RTN","ORQQPL1",99,0)
 N S,V,CVP,PN,PID
"RTN","ORQQPL1",100,0)
 S S="",V=$C(254)
"RTN","ORQQPL1",101,0)
 F  S S=$O(@NAM@(S)) Q:S=10  D
"RTN","ORQQPL1",102,0)
 . S RETURN(I)=TYP_V_S_V_@NAM@(S)
"RTN","ORQQPL1",103,0)
 . S I=I+1
"RTN","ORQQPL1",104,0)
 S S=""
"RTN","ORQQPL1",105,0)
 F  S S=$O(@NAM@(10,S)) Q:S=""  D
"RTN","ORQQPL1",106,0)
 . S CVP=@NAM@(10,S)
"RTN","ORQQPL1",107,0)
 . S PN="" ; provider name
"RTN","ORQQPL1",108,0)
 . S PID=$P(CVP,U,6) ; provider id
"RTN","ORQQPL1",109,0)
 . I PID'=""  S PN=$$GET1^DIQ(200,PID,.01) ; get provider name
"RTN","ORQQPL1",110,0)
 . S RETURN(I)=TYP_V_"10,"_S_V_CVP_U_PN
"RTN","ORQQPL1",111,0)
 . S I=I+1
"RTN","ORQQPL1",112,0)
 S S=80000
"RTN","ORQQPL1",113,0)
 F  S S=$O(@NAM@(S)) Q:S=""  D
"RTN","ORQQPL1",114,0)
 . S RETURN(I)=TYP_V_S_V_@NAM@(S)
"RTN","ORQQPL1",115,0)
 . S I=I+1
"RTN","ORQQPL1",116,0)
 Q
"RTN","ORQQPL1",117,0)
 ;
"RTN","ORQQPL1",118,0)
EDSAVE(RETURN,GMPIFN,GMPROV,GMPVAMC,UT,EDARRAY,GMPSRCH) ; SAVE EDITED RES
"RTN","ORQQPL1",119,0)
 ; RETURN - boolean, 1 success, 0 failure
"RTN","ORQQPL1",120,0)
 ; EDARRAY - array used for indirect sets of GMPORIG() and GMPFLDS()
"RTN","ORQQPL1",121,0)
 ;
"RTN","ORQQPL1",122,0)
 N GMPFLD,GMPORIG,S,GMPLUSER
"RTN","ORQQPL1",123,0)
 N VSRQFLG ; lab OR*3.0*479 added new variable
"RTN","ORQQPL1",124,0)
 S VSRQFLG=0
"RTN","ORQQPL1",125,0)
 S GMPSRCH=$G(GMPSRCH)
"RTN","ORQQPL1",126,0)
 S RETURN=1 ; initialize for success
"RTN","ORQQPL1",127,0)
 I UT S GMPLUSER=1
"RTN","ORQQPL1",128,0)
 ;
"RTN","ORQQPL1",129,0)
 S S=""
"RTN","ORQQPL1",130,0)
 F  S S=$O(EDARRAY(S)) Q:S=""  D
"RTN","ORQQPL1",131,0)
 . ;S @EDARRAY(S) D lab OR*3.0*479 commented out EDDARRAY and added new logic below
"RTN","ORQQPL1",132,0)
 . ; lab OR*3.0*479 Adding data checks to prevent backdoor access into VistA
"RTN","ORQQPL1",133,0)
 . ; lab - start new logic OR*3.0*479
"RTN","ORQQPL1",134,0)
 . I ($E(EDARRAY(S),1,6)="GMPFLD")!($E(EDARRAY(S),1,7)="GMPORIG") D
"RTN","ORQQPL1",135,0)
 . . I $E(EDARRAY(S),$F(EDARRAY(S),"="))="""" D
"RTN","ORQQPL1",136,0)
 . . . S @EDARRAY(S)
"RTN","ORQQPL1",137,0)
 . . ELSE  D
"RTN","ORQQPL1",138,0)
 . . . S RETURN=0
"RTN","ORQQPL1",139,0)
 . . . S VSRQFLG=1
"RTN","ORQQPL1",140,0)
 . ELSE  D
"RTN","ORQQPL1",141,0)
 . . S RETURN=0
"RTN","ORQQPL1",142,0)
 . . S VSRQFLG=1
"RTN","ORQQPL1",143,0)
 ;
"RTN","ORQQPL1",144,0)
 Q:(VSRQFLG)  ;quit if flag has been set meaning an unexpected value was sent in the parameter.
"RTN","ORQQPL1",145,0)
 ; lab - end new logic OR*3.0*479
"RTN","ORQQPL1",146,0)
 I $D(GMPFLD(10,"NEW"))>9 D  I 'RETURN Q  ; Bail Out if no lock
"RTN","ORQQPL1",147,0)
 . L +^AUPNPROB(GMPIFN,11):10 ; given bogus nature of this lock, should be able to get
"RTN","ORQQPL1",148,0)
 . I '$T S RETURN=0
"RTN","ORQQPL1",149,0)
 ;
"RTN","ORQQPL1",150,0)
 D EN^GMPLSAVE ; save the data
"RTN","ORQQPL1",151,0)
 K GMPFLD,GMPORIG
"RTN","ORQQPL1",152,0)
 ;
"RTN","ORQQPL1",153,0)
 L -^AUPNPROB(GMPIFN,11) ; free this instance of lock (in case it was set)
"RTN","ORQQPL1",154,0)
 S RETURN=1
"RTN","ORQQPL1",155,0)
 Q
"RTN","ORQQPL1",156,0)
 ;
"RTN","ORQQPL1",157,0)
UPDATE(ORRETURN,UPDARRAY) ; UPDATE A PROBLEM RECORD
"RTN","ORQQPL1",158,0)
 ; Does essentially same job as EDSAVE above, however does not handle edits to comments
"RTN","ORQQPL1",159,0)
 ; or addition of multiple comments.
"RTN","ORQQPL1",160,0)
 ; Use initially just for status updates.
"RTN","ORQQPL1",161,0)
 ;
"RTN","ORQQPL1",162,0)
 N S,GMPL,GMPORIG,ORARRAY ; last 2 vars created in nested call
"RTN","ORQQPL1",163,0)
 N VSRQFLG ; lab OR*3.0*479 added new variable
"RTN","ORQQPL1",164,0)
 S VSRQFLG=0
"RTN","ORQQPL1",165,0)
 S S=""
"RTN","ORQQPL1",166,0)
 F  S S=$O(UPDARRAY(S)) Q:S=""  D
"RTN","ORQQPL1",167,0)
 . ;S @UPDARRAY(S) lab OR*3.0*479 commented out UPDARRAY and added new logic below
"RTN","ORQQPL1",168,0)
 . ; lab OR*3.0*479 Adding data checks to prevent backdoor access into VistA
"RTN","ORQQPL1",169,0)
 . ; lab - start new logic OR*3.0*479
"RTN","ORQQPL1",170,0)
 . I ($E(UPDARRAY(S),1,7)="ORARRAY") D
"RTN","ORQQPL1",171,0)
 . . I $E(UPDARRAY(S),$F(UPDARRAY(S),"="))="""" D
"RTN","ORQQPL1",172,0)
 . . . S @UPDARRAY(S)
"RTN","ORQQPL1",173,0)
 . . ELSE  D
"RTN","ORQQPL1",174,0)
 . . . S ORRETURN(0)=0
"RTN","ORQQPL1",175,0)
 . . . S ORRETURN(1)="Unexpected array value."
"RTN","ORQQPL1",176,0)
 . . . S VSRQFLG=1
"RTN","ORQQPL1",177,0)
 . ELSE  D
"RTN","ORQQPL1",178,0)
 . . S ORRETURN(0)=0
"RTN","ORQQPL1",179,0)
 . . S ORRETURN(1)="Unexpected array value."
"RTN","ORQQPL1",180,0)
 . . S VSRQFLG=1
"RTN","ORQQPL1",181,0)
 ;
"RTN","ORQQPL1",182,0)
 Q:(VSRQFLG)  ;quit if flag has been set meaning an unexpected value was sent in the parameter.
"RTN","ORQQPL1",183,0)
 ; lab - end new logic OR*3.0*479
"RTN","ORQQPL1",184,0)
 D UPDATE^GMPLUTL(.ORARRAY,.ORRETURN)
"RTN","ORQQPL1",185,0)
 ; broker wont pick up root node RETURN
"RTN","ORQQPL1",186,0)
 S ORRETURN(1)=ORRETURN(0) ; error text
"RTN","ORQQPL1",187,0)
 S ORRETURN(0)=ORRETURN ; gmpdfn
"RTN","ORQQPL1",188,0)
 I ORRETURN(0)=""  S ORRETURN=1 ; insurance ? need
"RTN","ORQQPL1",189,0)
 Q
"RTN","ORQQPL1",190,0)
 ;
"RTN","ORQQPL1",191,0)
ADDSAVE(RETURN,GMPDFN,GMPROV,GMPVAMC,ADDARRAY,GMPSRCH) ; SAVE NEW RECORD
"RTN","ORQQPL1",192,0)
 ; RETURN - Problem IFN if success, 0 otherwise
"RTN","ORQQPL1",193,0)
 ; ADDARRAY - array used for indirect sets of GMPFLDS()
"RTN","ORQQPL1",194,0)
 ;
"RTN","ORQQPL1",195,0)
 N DA,GMPFLD,GMPORIG,S
"RTN","ORQQPL1",196,0)
 N VSRQFLG ; lab OR*3.0*479 added new variable
"RTN","ORQQPL1",197,0)
 S VSRQFLG=0
"RTN","ORQQPL1",198,0)
 S GMPSRCH=$G(GMPSRCH)
"RTN","ORQQPL1",199,0)
 S RETURN=0 ;
"RTN","ORQQPL1",200,0)
 L +^AUPNPROB(0):10
"RTN","ORQQPL1",201,0)
 Q:'$T  ; bail out if no lock
"RTN","ORQQPL1",202,0)
 ;
"RTN","ORQQPL1",203,0)
 S S=""
"RTN","ORQQPL1",204,0)
 F  S S=$O(ADDARRAY(S)) Q:S=""  D
"RTN","ORQQPL1",205,0)
 . ; lab - S @ADDARRAY(S) OR*3.0*479 commented out ADDARRAY and added new logic below
"RTN","ORQQPL1",206,0)
 . ; lab - for VSR project, adding data checks to prevent backdoor access into VistA
"RTN","ORQQPL1",207,0)
 . ; lab - start new logic
"RTN","ORQQPL1",208,0)
 . I $E(ADDARRAY(S),1,6)="GMPFLD" D
"RTN","ORQQPL1",209,0)
 . . I $E(ADDARRAY(S),$F(ADDARRAY(S),"="))="""" D
"RTN","ORQQPL1",210,0)
 . . . S @ADDARRAY(S)
"RTN","ORQQPL1",211,0)
 . . ELSE  D 
"RTN","ORQQPL1",212,0)
 . . . S RETURN=0
"RTN","ORQQPL1",213,0)
 . . . L -^AUPNPROB(0)
"RTN","ORQQPL1",214,0)
 . . . S VSRQFLG=1
"RTN","ORQQPL1",215,0)
 . ELSE  D 
"RTN","ORQQPL1",216,0)
 . . S RETURN=0
"RTN","ORQQPL1",217,0)
 . . L -^AUPNPROB(0)
"RTN","ORQQPL1",218,0)
 . . S VSRQFLG=1
"RTN","ORQQPL1",219,0)
 ;
"RTN","ORQQPL1",220,0)
 Q:(VSRQFLG)  ;quit if flag has been set meaning an unexpected value was sent in the parameter.
"RTN","ORQQPL1",221,0)
 ; lab - end new logic OR*3.0*479
"RTN","ORQQPL1",222,0)
 ;
"RTN","ORQQPL1",223,0)
 D NEW^GMPLSAVE
"RTN","ORQQPL1",224,0)
 ;
"RTN","ORQQPL1",225,0)
 S RETURN=DA
"RTN","ORQQPL1",226,0)
 ;
"RTN","ORQQPL1",227,0)
 L -^AUPNPROB(0)
"RTN","ORQQPL1",228,0)
 S RETURN=1
"RTN","ORQQPL1",229,0)
 Q
"RTN","ORQQPL1",230,0)
 ;
"RTN","ORQQPL1",231,0)
INITUSER(RETURN,ORDUZ) ; INITIALIZE FOR NEW USER
"RTN","ORQQPL1",232,0)
 ; taken from INIT^GMPLMGR
"RTN","ORQQPL1",233,0)
 ; leave GMPLUSER on symbol table - is evaluated in EDITSAVE
"RTN","ORQQPL1",234,0)
 ;
"RTN","ORQQPL1",235,0)
 N X,PV,CTXT,GMPLPROV,ORENT
"RTN","ORQQPL1",236,0)
 S ORDUZ=$G(ORDUZ,DUZ)
"RTN","ORQQPL1",237,0)
 S GMPLUSER=$$CLINUSER(ORDUZ)
"RTN","ORQQPL1",238,0)
 S CTXT=$$GET^XPAR("ALL","ORCH CONTEXT PROBLEMS",1)
"RTN","ORQQPL1",239,0)
 S X=$G(^GMPL(125.99,1,0)) ; IN1+6^GMPLMGR
"RTN","ORQQPL1",240,0)
 S RETURN(0)=GMPLUSER ; problem list user, or other user
"RTN","ORQQPL1",241,0)
 S RETURN(1)=$$VIEW^GMPLX1(ORDUZ) ; GMPLVIEW("VIEW") - users default view
"RTN","ORQQPL1",242,0)
 S RETURN(2)=+$P(X,U,2) ; verify transcribed problems
"RTN","ORQQPL1",243,0)
 S RETURN(3)=+$P(X,U,3) ; prompt for chart copy
"RTN","ORQQPL1",244,0)
 S RETURN(4)=+$P(X,U,4) ; use lexicon
"RTN","ORQQPL1",245,0)
 S RETURN(5)=$S($P(X,U,5)="R":1,1:0) ; chron or reverse chron listing
"RTN","ORQQPL1",246,0)
 S RETURN(6)=$S($P($G(CTXT),";",3)'="":$P($G(CTXT),";",3),1:"A")
"RTN","ORQQPL1",247,0)
 S GMPLPROV=$P($G(CTXT),";",5)
"RTN","ORQQPL1",248,0)
 I +GMPLPROV>0,$D(^VA(200,GMPLPROV)) D
"RTN","ORQQPL1",249,0)
 . S RETURN(7)=GMPLPROV_U_$P(^VA(200,GMPLPROV,0),U)
"RTN","ORQQPL1",250,0)
 E  S RETURN(7)="0^All"
"RTN","ORQQPL1",251,0)
 S RETURN(8)=$$SERVICE^GMPLX1(ORDUZ) ; user's service/section
"RTN","ORQQPL1",252,0)
 ; Guessing from what I see in the data that $$VIEW^GMPLX1 actually returns a composite
"RTN","ORQQPL1",253,0)
 ; of default view (in/out patient)/(c1/c2... if out patient i.e. GMPLVIEW("CLIN")) or
"RTN","ORQQPL1",254,0)
 ; /(s1/s2... if in patient i.e. GMPLVIEW("SERV"))
"RTN","ORQQPL1",255,0)
 ; Going with this assumption for now:
"RTN","ORQQPL1",256,0)
 I $L(RETURN(1),"/")>1 D
"RTN","ORQQPL1",257,0)
 . S PV=RETURN(1)
"RTN","ORQQPL1",258,0)
 . S RETURN(1)=$P(PV,"/")
"RTN","ORQQPL1",259,0)
 . I RETURN(1)="C" S GMPLVIEW("CLIN")=$P(PV,"/",2,99)
"RTN","ORQQPL1",260,0)
 . I RETURN(1)="S" S GMPLVIEW("SERV")=$P(PV,"/",2,99)
"RTN","ORQQPL1",261,0)
 S RETURN(9)=$G(GMPLVIEW("SERV")) ; ??? Where from - see tech doc
"RTN","ORQQPL1",262,0)
 S RETURN(10)=$G(GMPLVIEW("CLIN")) ; ??? Where from - see tech doc
"RTN","ORQQPL1",263,0)
 S RETURN(11)=""
"RTN","ORQQPL1",264,0)
 S RETURN(12)=+$P($G(CTXT),";",4) ; should comments display?
"RTN","ORQQPL1",265,0)
 S ORENT="ALL^SRV.`"_+$$SERVICE^GMPLX1(ORDUZ,1)
"RTN","ORQQPL1",266,0)
 S RETURN(13)=+$$GET^XPAR(ORENT,"ORQQPL SUPPRESS CODES",1) ; suppress codes?
"RTN","ORQQPL1",267,0)
 K GMPLVIEW
"RTN","ORQQPL1",268,0)
 Q
"RTN","ORQQPL1",269,0)
 ;
"RTN","ORQQPL1",270,0)
CLINUSER(ORDUZ) ;is this a clinical user?
"RTN","ORQQPL1",271,0)
 N ORUSER
"RTN","ORQQPL1",272,0)
 S ORUSER=0
"RTN","ORQQPL1",273,0)
 I $D(^XUSEC("ORES",ORDUZ)) S ORUSER=1
"RTN","ORQQPL1",274,0)
 I $D(^XUSEC("ORELSE",ORDUZ)) S ORUSER=1
"RTN","ORQQPL1",275,0)
 I $D(^XUSEC("PROVIDER",ORDUZ)) S ORUSER=1
"RTN","ORQQPL1",276,0)
 Q ORUSER
"RTN","ORQQPL1",277,0)
 ;
"RTN","ORQQPL1",278,0)
INITPT(RETURN,DFN) ; GET PATIENT PARAMETERS
"RTN","ORQQPL1",279,0)
 Q:+$G(DFN)=0
"RTN","ORQQPL1",280,0)
 N GMPSC,GMPAGTOR,GMPION,GMPGULF,GMPHNC,GMPMST,GMPCV,GMPSHD
"RTN","ORQQPL1",281,0)
 ;
"RTN","ORQQPL1",282,0)
 S RETURN(0)=DUZ(2) ; facility #
"RTN","ORQQPL1",283,0)
 D DEM^VADPT ; get death indicator
"RTN","ORQQPL1",284,0)
 S RETURN(1)=$G(VADM(6)) ; death indicator
"RTN","ORQQPL1",285,0)
 D VADPT^GMPLX1(DFN) ; get eligibilities
"RTN","ORQQPL1",286,0)
 S RETURN(2)=$P(GMPSC,U) ; service connected
"RTN","ORQQPL1",287,0)
 S RETURN(3)=$G(GMPAGTOR) ; agent orange exposure
"RTN","ORQQPL1",288,0)
 S RETURN(4)=$G(GMPION) ; ionizing radiation exposure
"RTN","ORQQPL1",289,0)
 S RETURN(5)=$G(GMPGULF) ; gulf war exposure
"RTN","ORQQPL1",290,0)
 S RETURN(6)=VA("BID") ; need this to reconstitute GMPDFN on return
"RTN","ORQQPL1",291,0)
 S RETURN(7)=$G(GMPHNC) ; head/neck cancer
"RTN","ORQQPL1",292,0)
 S RETURN(8)=$G(GMPMST) ; MST
"RTN","ORQQPL1",293,0)
 S RETURN(9)=$G(GMPCV) ; CV
"RTN","ORQQPL1",294,0)
 S RETURN(10)=$G(GMPSHD) ; SHAD
"RTN","ORQQPL1",295,0)
 Q
"RTN","ORQQPL1",296,0)
 ;
"RTN","ORQQPL1",297,0)
PROVSRCH(LST,FLAG,N,FROM,PART) ; Get candidate Rroviders from person file
"RTN","ORQQPL1",298,0)
 N LV,NS,RV,IEN
"RTN","ORQQPL1",299,0)
 S RV=$NAME(LV("DILIST","ID"))
"RTN","ORQQPL1",300,0)
 IF +$G(N)=0 S N=50
"RTN","ORQQPL1",301,0)
 S FLAG=$G(FLAG),N=$G(N),FROM=$G(FROM),PART=$G(PART)
"RTN","ORQQPL1",302,0)
 D LIST^DIC(200,"",".01;1",FLAG,N,FROM,PART,"","","","LV")
"RTN","ORQQPL1",303,0)
 S NS=""
"RTN","ORQQPL1",304,0)
 F  S NS=$O(LV("DILIST",1,NS)) Q:NS=""  D
"RTN","ORQQPL1",305,0)
 . S IEN=""
"RTN","ORQQPL1",306,0)
 . S IEN=$O(^VA(200,"B",@RV@(NS,.01),IEN)) ; compliments of PROV^ORQPTQ
"RTN","ORQQPL1",307,0)
 . S LST(NS)=IEN_U_@RV@(NS,.01) ; initials_U_@RV@(NS,1)
"RTN","ORQQPL1",308,0)
 Q
"RTN","ORQQPL1",309,0)
 ;
"RTN","ORQQPL1",310,0)
CLINSRCH(Y,X) ; Get LIST OF CLINICS
"RTN","ORQQPL1",311,0)
 ; Note: This comes from CLIN^ORQPTQ2, where it was commented out in place of
"RTN","ORQQPL1",312,0)
 ; a call to ^XPAR. I would have just used CLIN^ORQPTQ2, but it didn't work - at
"RTN","ORQQPL1",313,0)
 ; least on SLC OEX directory.
"RTN","ORQQPL1",314,0)
 ; X has no purpose other than to satisfy apparent rpc and tcallv requirement for args
"RTN","ORQQPL1",315,0)
 N I,NAME,IEN
"RTN","ORQQPL1",316,0)
 S I=1,IEN=0,NAME=""
"RTN","ORQQPL1",317,0)
 ;access to SC global granted under DBIA #518:
"RTN","ORQQPL1",318,0)
 F  S NAME=$O(^SC("B",NAME)) Q:NAME=""  S IEN=$O(^(NAME,0)) D
"RTN","ORQQPL1",319,0)
 . I $P(^SC(IEN,0),"^",3)="C" S Y(I)=IEN_"^"_NAME,I=I+1
"RTN","ORQQPL1",320,0)
 Q
"RTN","ORQQPL1",321,0)
 ;
"RTN","ORQQPL1",322,0)
SRVCSRCH(Y,FROM,DIR,ALL) ; GET LIST OF SERVICES
"RTN","ORQQPL1",323,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORQQPL1",324,0)
 F  Q:I=CNT  S FROM=$O(^DIC(49,"B",FROM),DIR) Q:FROM=""  D
"RTN","ORQQPL1",325,0)
 . S IEN=$O(^DIC(49,"B",FROM,0)) I '$G(ALL),$P(^DIC(49,IEN,0),U,9)'="C" Q
"RTN","ORQQPL1",326,0)
 . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORQQPL1",327,0)
 Q
"RTN","ORQQPL1",328,0)
 ;
"RTN","ORQQPL1",329,0)
DUP(Y,DFN,TERM,TEXT) ;Check for duplicate problem
"RTN","ORQQPL1",330,0)
 S Y=$$DUPL^GMPLX(DFN,TERM,TEXT) Q:+Y=0
"RTN","ORQQPL1",331,0)
 I $P(^AUPNPROB(Y,1),U,2)="H" S Y=0 Q
"RTN","ORQQPL1",332,0)
 S Y=Y_U_$P(^AUPNPROB(Y,0),U,12)
"RTN","ORQQPL1",333,0)
 Q
"RTN","ORQQPL1",334,0)
GETDX(CODE,SYS,ORIDT) ; Get ICD associated with SNOMED CT or VHAT Code
"RTN","ORQQPL1",335,0)
 N LEX,ORI,ORY,ORUH,IMPLDT,ORCSYSPR
"RTN","ORQQPL1",336,0)
 S ORIDT=$G(ORIDT,DT)
"RTN","ORQQPL1",337,0)
 S ORY=0,IMPLDT=$$IMPDATE^LEXU("10D")
"RTN","ORQQPL1",338,0)
 S ORUH=$S(ORIDT<IMPLDT:"799.9",1:"R69.")
"RTN","ORQQPL1",339,0)
 S ORCSYSPR=$S(ORIDT<IMPLDT:1,1:30)
"RTN","ORQQPL1",340,0)
 I SYS["VHAT" D  I 1
"RTN","ORQQPL1",341,0)
 . I ORIDT<IMPLDT S ORY=$$GETASSN^LEXTRAN1(CODE,"VHAT2ICD") I 1
"RTN","ORQQPL1",342,0)
 . E  S ORY=0
"RTN","ORQQPL1",343,0)
 E  D
"RTN","ORQQPL1",344,0)
 . I ORIDT<IMPLDT S ORY=$$GETASSN^LEXTRAN1(CODE,"SCT2ICD") I 1
"RTN","ORQQPL1",345,0)
 . E  S ORY=0
"RTN","ORQQPL1",346,0)
 I $S(+ORY'>0:1,+$P(ORY,U,2)'>0:1,+LEX'>0:1,1:0) S ORY=ORUH G GETDXX
"RTN","ORQQPL1",347,0)
 S ORI=0,ORY=""
"RTN","ORQQPL1",348,0)
 F  S ORI=$O(LEX(ORI)) Q:+ORI'>0  D
"RTN","ORQQPL1",349,0)
 . N ICD
"RTN","ORQQPL1",350,0)
 . S ICD=$O(LEX(ORI,""))
"RTN","ORQQPL1",351,0)
 . S:'+$$STATCHK^ICDXCODE(ORCSYSPR,ICD,ORIDT) ICD=""
"RTN","ORQQPL1",352,0)
 . I ICD]"" S ORY=$S(ORY'="":ORY_"/",1:"")_ICD
"RTN","ORQQPL1",353,0)
 I (ORY]""),(ORY'[".") S ORY=ORY_"."
"RTN","ORQQPL1",354,0)
GETDXX Q ORY
"RTN","ORQQPL1",355,0)
TEST ; test invocation
"RTN","ORQQPL1",356,0)
 N LIST,I S I=""
"RTN","ORQQPL1",357,0)
 D LEXSRCH(.LIST,"diabetes with neuro",10,"GMPL",DT)
"RTN","ORQQPL1",358,0)
 F  S I=$O(LIST(I)) Q:+I'>0  W !,LIST(I)
"RTN","ORQQPL1",359,0)
 Q
"VER")
8.0^22.2
"BLD",11068,6)
^419
**END**
**END**

