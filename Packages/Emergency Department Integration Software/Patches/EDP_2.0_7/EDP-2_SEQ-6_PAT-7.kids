Released EDP*2*7 SEQ #6
Extracted from mail message
**KIDS**:EDP*2.0*7^

**INSTALL NAME**
EDP*2.0*7
"BLD",10628,0)
EDP*2.0*7^EMERGENCY DEPARTMENT^0^3180309^y
"BLD",10628,1,0)
^^6^6^3180309^
"BLD",10628,1,1,0)
This patch corrects 2 issues within the EMERGENCY DEPARTMENT package:
"BLD",10628,1,2,0)
 
"BLD",10628,1,3,0)
1. I10849240FY16 - Users who have never been assigned an EDIS staff role 
"BLD",10628,1,4,0)
   see Assess and Visit buttons in triplicate.
"BLD",10628,1,5,0)
 
"BLD",10628,1,6,0)
2. I10842158FY16 - The Shift Report is generating incorrect data.
"BLD",10628,4,0)
^9.64PA^^
"BLD",10628,6)
1^
"BLD",10628,6.3)
18
"BLD",10628,"ABPKG")
n
"BLD",10628,"KRN",0)
^9.67PA^779.2^20
"BLD",10628,"KRN",.4,0)
.4
"BLD",10628,"KRN",.401,0)
.401
"BLD",10628,"KRN",.402,0)
.402
"BLD",10628,"KRN",.403,0)
.403
"BLD",10628,"KRN",.5,0)
.5
"BLD",10628,"KRN",.84,0)
.84
"BLD",10628,"KRN",3.6,0)
3.6
"BLD",10628,"KRN",3.8,0)
3.8
"BLD",10628,"KRN",9.2,0)
9.2
"BLD",10628,"KRN",9.8,0)
9.8
"BLD",10628,"KRN",9.8,"NM",0)
^9.68A^7^2
"BLD",10628,"KRN",9.8,"NM",1,0)
EDPBWS^^0^B235189948
"BLD",10628,"KRN",9.8,"NM",7,0)
EDPRPT5^^0^B54053972
"BLD",10628,"KRN",9.8,"NM","B","EDPBWS",1)
 
"BLD",10628,"KRN",9.8,"NM","B","EDPRPT5",7)
 
"BLD",10628,"KRN",19,0)
19
"BLD",10628,"KRN",19.1,0)
19.1
"BLD",10628,"KRN",101,0)
101
"BLD",10628,"KRN",409.61,0)
409.61
"BLD",10628,"KRN",771,0)
771
"BLD",10628,"KRN",779.2,0)
779.2
"BLD",10628,"KRN",870,0)
870
"BLD",10628,"KRN",8989.51,0)
8989.51
"BLD",10628,"KRN",8989.52,0)
8989.52
"BLD",10628,"KRN",8994,0)
8994
"BLD",10628,"KRN","B",.4,.4)
 
"BLD",10628,"KRN","B",.401,.401)
 
"BLD",10628,"KRN","B",.402,.402)
 
"BLD",10628,"KRN","B",.403,.403)
 
"BLD",10628,"KRN","B",.5,.5)
 
"BLD",10628,"KRN","B",.84,.84)
 
"BLD",10628,"KRN","B",3.6,3.6)
 
"BLD",10628,"KRN","B",3.8,3.8)
 
"BLD",10628,"KRN","B",9.2,9.2)
 
"BLD",10628,"KRN","B",9.8,9.8)
 
"BLD",10628,"KRN","B",19,19)
 
"BLD",10628,"KRN","B",19.1,19.1)
 
"BLD",10628,"KRN","B",101,101)
 
"BLD",10628,"KRN","B",409.61,409.61)
 
"BLD",10628,"KRN","B",771,771)
 
"BLD",10628,"KRN","B",779.2,779.2)
 
"BLD",10628,"KRN","B",870,870)
 
"BLD",10628,"KRN","B",8989.51,8989.51)
 
"BLD",10628,"KRN","B",8989.52,8989.52)
 
"BLD",10628,"KRN","B",8994,8994)
 
"BLD",10628,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",10628,"QUES",0)
^9.62^^
"BLD",10628,"REQB",0)
^9.611^1^1
"BLD",10628,"REQB",1,0)
EDP*2.0*6^2
"BLD",10628,"REQB","B","EDP*2.0*6",1)
 
"MBREQ")
0
"PKG",650,-1)
1^1
"PKG",650,0)
EMERGENCY DEPARTMENT^EDP^Emergency Department Information System
"PKG",650,20,0)
^9.402P^^
"PKG",650,22,0)
^9.49I^1^1
"PKG",650,22,1,0)
2.0^3130118^3160401^520736435
"PKG",650,22,1,"PAH",1,0)
7^3180309^520824667
"PKG",650,22,1,"PAH",1,1,0)
^^6^6^3180309
"PKG",650,22,1,"PAH",1,1,1,0)
This patch corrects 2 issues within the EMERGENCY DEPARTMENT package:
"PKG",650,22,1,"PAH",1,1,2,0)
 
"PKG",650,22,1,"PAH",1,1,3,0)
1. I10849240FY16 - Users who have never been assigned an EDIS staff role 
"PKG",650,22,1,"PAH",1,1,4,0)
   see Assess and Visit buttons in triplicate.
"PKG",650,22,1,"PAH",1,1,5,0)
 
"PKG",650,22,1,"PAH",1,1,6,0)
2. I10842158FY16 - The Shift Report is generating incorrect data.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","EDPBWS")
0^1^B235189948^B229022529
"RTN","EDPBWS",1,0)
EDPBWS ;SLC/KCM - Worksheet Configuration Calls ;7/27/12 4:22pm
"RTN","EDPBWS",2,0)
 ;;2.0;EMERGENCY DEPARTMENT;**6,7**;Feb 24, 2012;Build 18
"RTN","EDPBWS",3,0)
 ;
"RTN","EDPBWS",4,0)
 ;DBIA SECTION
"RTN","EDPBWS",5,0)
 ;2053 - FILE^DIE,UPDATE^DIE
"RTN","EDPBWS",6,0)
 ;2056 - $$GET1^DIQ
"RTN","EDPBWS",7,0)
 ;
"RTN","EDPBWS",8,0)
LOADALL(EDPSITE,AREA,EDPROLE) ; load all worksheet configurations for an area
"RTN","EDPBWS",9,0)
 N ROLES,SECTIONS,WORKSHTS,COMPNTS,RESULTS
"RTN","EDPBWS",10,0)
 ;D LSTROLES(AREA,.ROLES) M RESULTS("roles",1)=ROLES
"RTN","EDPBWS",11,0)
 ;D LSTROLES(.ROLES) M RESULTS("roles",1)=ROLES
"RTN","EDPBWS",12,0)
 ;D LSTCMPTS(AREA,.COMPNTS) M RESULTS("components")=COMPNTS
"RTN","EDPBWS",13,0)
 ;D LSTSECTS(AREA,.SECTIONS) M RESULTS("sections",1)=SECTIONS
"RTN","EDPBWS",14,0)
 D LSTWKS(EDPSITE,AREA,.WORKSHTS) M RESULTS("worksheets")=WORKSHTS
"RTN","EDPBWS",15,0)
 D TOXML^EDPXML(.RESULTS,.EDPXML)
"RTN","EDPBWS",16,0)
 Q
"RTN","EDPBWS",17,0)
GETROLES(EDPSITE,AREA) ; get list of roles
"RTN","EDPBWS",18,0)
 N ROLES
"RTN","EDPBWS",19,0)
 D XML^EDPX("<roles>")
"RTN","EDPBWS",20,0)
 D LSTROLES(AREA,.ROLES)
"RTN","EDPBWS",21,0)
 D XML^EDPX("</roles>")
"RTN","EDPBWS",22,0)
 Q
"RTN","EDPBWS",23,0)
GETSECTS(AREA,EDPXML,ROLE) ; get list of sections
"RTN","EDPBWS",24,0)
 N RESULTS,SECTIONS
"RTN","EDPBWS",25,0)
 D LSTSECTS(AREA,.SECTIONS,ROLE) M RESULTS("sections",1)=SECTIONS
"RTN","EDPBWS",26,0)
 D TOXML^EDPXML(.RESULTS,.EDPXML)
"RTN","EDPBWS",27,0)
 Q
"RTN","EDPBWS",28,0)
GETCMPTS(AREA,EDPXML,IEN,ROLE) ; get list of components
"RTN","EDPBWS",29,0)
 N RESULTS,COMPNTS
"RTN","EDPBWS",30,0)
 S IEN=$G(IEN,"")
"RTN","EDPBWS",31,0)
 D LSTCMPTS(AREA,.COMPNTS,IEN,ROLE) M RESULTS("components",1)=COMPNTS
"RTN","EDPBWS",32,0)
 D TOXML^EDPXML(.RESULTS,.EDPXML)
"RTN","EDPBWS",33,0)
 Q
"RTN","EDPBWS",34,0)
GETWORKS(EDPSITE,IEN,REQ,EDPXML) ; get worksheet given IEN
"RTN","EDPBWS",35,0)
 N WKSSPEC,RESULTS
"RTN","EDPBWS",36,0)
 D GETWKS(EDPSITE,IEN,.REQ,.WKSSPEC) M RESULTS("worksheet",IEN)=WKSSPEC
"RTN","EDPBWS",37,0)
 D TOXML^EDPXML(.RESULTS,.EDPXML)
"RTN","EDPBWS",38,0)
 Q
"RTN","EDPBWS",39,0)
LDWSLIST(EDPSITE,AREA,ROLE) ; load brief worksheet list
"RTN","EDPBWS",40,0)
 ; ROLE (optional) - If no role is passed, all worksheets for an AREA/SITE will be returned.
"RTN","EDPBWS",41,0)
 N WSIEN,X0,X,WSNAME,RIEN,TYPE,WSLIST
"RTN","EDPBWS",42,0)
 D XML^EDPX("<worksheets>")
"RTN","EDPBWS",43,0)
 S RIEN=0 F  S RIEN=$O(^EDPB(232.6,"D",RIEN)) Q:'RIEN  D
"RTN","EDPBWS",44,0)
 .; quit if this is not the role we are looking for
"RTN","EDPBWS",45,0)
 .I $G(ROLE) Q:RIEN'=ROLE
"RTN","EDPBWS",46,0)
 .D XML^EDPX("<role id="_""""_RIEN_""""_" >")
"RTN","EDPBWS",47,0)
 .S WSIEN=0 F  S WSIEN=$O(^EDPB(232.6,"D",RIEN,WSIEN)) Q:'WSIEN  D
"RTN","EDPBWS",48,0)
 ..Q:$G(WSLIST(WSIEN))
"RTN","EDPBWS",49,0)
 ..S WSLIST(WSIEN)=1  ;Don't send the same list twice
"RTN","EDPBWS",50,0)
 ..S X0=$G(^EDPB(232.6,WSIEN,0))
"RTN","EDPBWS",51,0)
 ..S WSNAME=$P(X0,U),TYPE=$P(X0,U,4)
"RTN","EDPBWS",52,0)
 ..S X("id")=WSIEN,X("worksheetName")=WSNAME,X("type")=TYPE
"RTN","EDPBWS",53,0)
 ..S X("name")=$P(X0,U),X("id")=WSIEN
"RTN","EDPBWS",54,0)
 ..S X("institution")=$P(X0,U,2)
"RTN","EDPBWS",55,0)
 ..S X("area")=$P(X0,U,3)
"RTN","EDPBWS",56,0)
 ..S X("disabled")=$S($P(X0,U,6):"true",1:"false")
"RTN","EDPBWS",57,0)
 ..S X("editable")=$S($P(X0,U,7):"true",1:"false")
"RTN","EDPBWS",58,0)
 ..I $$GET1^DIQ(232.5,RIEN,.06,"I")=WSIEN S X("default")="true"
"RTN","EDPBWS",59,0)
 ..D XML^EDPX($$XMLA^EDPX("worksheet",.X)) K X
"RTN","EDPBWS",60,0)
 .D XML^EDPX("</role>")
"RTN","EDPBWS",61,0)
 D XML^EDPX("</worksheets>")
"RTN","EDPBWS",62,0)
 Q
"RTN","EDPBWS",63,0)
LSTROLES(AREA,ARRAY) ; list roles for an area
"RTN","EDPBWS",64,0)
 N RIEN,X0,ROLEIEN,ROLENM,WKS,CNT,EDAC,RABBR
"RTN","EDPBWS",65,0)
 S CNT=0
"RTN","EDPBWS",66,0)
 S RABBR="" F  S RABBR=$O(^EDPB(232.5,"C",RABBR)) Q:RABBR=""  D
"RTN","EDPBWS",67,0)
 .S RIEN="" F  S RIEN=$O(^EDPB(232.5,"C",RABBR,RIEN)) Q:'RIEN  D
"RTN","EDPBWS",68,0)
 ..S CNT=CNT+1
"RTN","EDPBWS",69,0)
 ..S X0=$G(^EDPB(232.5,RIEN,0)),ROLENM=$P(X0,U),WKS=$P(X0,U,4),EDAC=$P(X0,U,6)
"RTN","EDPBWS",70,0)
 ..S X("id")=RIEN
"RTN","EDPBWS",71,0)
 ..S X("abbr")=RABBR
"RTN","EDPBWS",72,0)
 ..S X("displayName")=ROLENM
"RTN","EDPBWS",73,0)
 ..S X("defaultWorksheet")=WKS
"RTN","EDPBWS",74,0)
 ..S X("editAcuity")=$S(+EDAC:"true",1:"false")
"RTN","EDPBWS",75,0)
 ..D XML^EDPX($$XMLA^EDPX("role",.X))
"RTN","EDPBWS",76,0)
 Q
"RTN","EDPBWS",77,0)
LSTCMPTS(AREA,ARRAY,IEN,ROLE) ; list components for an area
"RTN","EDPBWS",78,0)
 N CNT
"RTN","EDPBWS",79,0)
 I $G(IEN) D BLDCMPTS(IEN,1,1,.ARRAY) Q
"RTN","EDPBWS",80,0)
 S IEN=0 F  S IEN=$O(^EDPB(232.72,IEN)) Q:'IEN  D
"RTN","EDPBWS",81,0)
 .I $G(ROLE) Q:'$D(^EDPB(232.72,IEN,8,"B",ROLE))
"RTN","EDPBWS",82,0)
 .S CNT=$G(CNT)+1
"RTN","EDPBWS",83,0)
 .D BLDCMPTS(IEN,CNT,,.ARRAY)
"RTN","EDPBWS",84,0)
 Q
"RTN","EDPBWS",85,0)
BLDCMPTS(IEN,CNT,MOREDAT,ARRAY) ;
"RTN","EDPBWS",86,0)
 ; IEN     - component IEN
"RTN","EDPBWS",87,0)
 ; CNT     - simple counter
"RTN","EDPBWS",88,0)
 ; MOREDAT - If MOREDAT is passed, return more information
"RTN","EDPBWS",89,0)
 ;           This is used to differentiate between a 'list'
"RTN","EDPBWS",90,0)
 ;           style of call, versus a full 'get' on a specific entry
"RTN","EDPBWS",91,0)
 ;
"RTN","EDPBWS",92,0)
 N NAME,X0,X1,X2,X3,X6,PIEN,P0,RCNT,RIEN,ROLE,V0,X10,DEP,DEPCNT
"RTN","EDPBWS",93,0)
 S X0=$G(^EDPB(232.72,IEN,0)),NAME=$P(X0,U)
"RTN","EDPBWS",94,0)
 S MOREDAT=$G(MOREDAT,0)
"RTN","EDPBWS",95,0)
 S ARRAY("component",CNT,"id")=IEN
"RTN","EDPBWS",96,0)
 S ARRAY("component",CNT,"name")=NAME
"RTN","EDPBWS",97,0)
 S ARRAY("component",CNT,"label")=$P(X0,U,2)
"RTN","EDPBWS",98,0)
 S X1=$G(^EDPB(232.72,IEN,1)),X2=$G(^EDPB(232.72,IEN,2)),X3=$G(^EDPB(232.72,IEN,3))
"RTN","EDPBWS",99,0)
 S X6=$G(^EDPB(232.72,IEN,6)),X10=$G(^EDPB(232.72,IEN,10))
"RTN","EDPBWS",100,0)
 S ARRAY("component",CNT,"dataProvider")=$P(X0,U,3)
"RTN","EDPBWS",101,0)
 S ARRAY("component",CNT,"moniker")=$P(X0,U,5)
"RTN","EDPBWS",102,0)
 S ARRAY("component",CNT,"type")=$$GET1^DIQ(232.73,$P(X0,U,6),.01,"E")
"RTN","EDPBWS",103,0)
 S ARRAY("component",CNT,"defaultValue")=$P(X6,U)
"RTN","EDPBWS",104,0)
 S ARRAY("component",CNT,"value")=$P(X10,U)
"RTN","EDPBWS",105,0)
 S ARRAY("component",CNT,"summaryLabel")=$P(X10,U,2)
"RTN","EDPBWS",106,0)
 S ARRAY("component",CNT,"summaryOrder")=$P(X10,U,3)
"RTN","EDPBWS",107,0)
 S ARRAY("component",CNT,"available")=$P(X10,U,3)
"RTN","EDPBWS",108,0)
 S ARRAY("component",CNT,"loadEvent",1,"name")=$P(X1,U,3)
"RTN","EDPBWS",109,0)
 ; for now there can be only 1 dependency
"RTN","EDPBWS",110,0)
 S (DEP,DEPCNT)=0 F  S DEP=$O(^EDPB(232.72,IEN,7,DEP)) Q:'DEP!(DEPCNT>1)  D
"RTN","EDPBWS",111,0)
 .S DEPCNT=DEPCNT+1 Q:DEPCNT>1
"RTN","EDPBWS",112,0)
 .S ARRAY("component",CNT,"dependentOn")=$$GET1^DIQ(232.727,DEP_","_IEN_",",.01,"E")
"RTN","EDPBWS",113,0)
 ; get the list of parameters
"RTN","EDPBWS",114,0)
 S PIEN=0 F  S PIEN=$O(^EDPB(232.72,IEN,5,PIEN)) Q:'PIEN  D
"RTN","EDPBWS",115,0)
 .S P0=$G(^EDPB(232.72,IEN,5,PIEN,0))
"RTN","EDPBWS",116,0)
 .S ARRAY("component",CNT,"param",PIEN,"name")=$P(P0,U)
"RTN","EDPBWS",117,0)
 .S ARRAY("component",CNT,"param",PIEN,"type")=$P(P0,U,2)
"RTN","EDPBWS",118,0)
 .S ARRAY("component",CNT,"param",PIEN,"function")=$P(P0,U,3)
"RTN","EDPBWS",119,0)
 Q
"RTN","EDPBWS",120,0)
LSTSECTS(AREA,ARRAY,ROLE) ; list sections for an area
"RTN","EDPBWS",121,0)
 N IEN,IEN1,X0,X1,CNT,CMPCNT,CMPNT,RIEN
"RTN","EDPBWS",122,0)
 S IEN=0,CNT=0
"RTN","EDPBWS",123,0)
 F  S IEN=$O(^EDPB(232.71,IEN)) Q:'IEN  D
"RTN","EDPBWS",124,0)
 .; if role is passed in, and this 'section' doesn't contain the role, quit
"RTN","EDPBWS",125,0)
 .I $G(ROLE) Q:'$D(^EDPB(232.71,IEN,2,"B",ROLE))
"RTN","EDPBWS",126,0)
 .S X0=^EDPB(232.71,IEN,0),CNT=CNT+1
"RTN","EDPBWS",127,0)
 .S ARRAY("section",CNT,"id")=IEN
"RTN","EDPBWS",128,0)
 .S ARRAY("section",CNT,"name")=$P(X0,U)
"RTN","EDPBWS",129,0)
 .S ARRAY("section",CNT,"displayName")=$P(X0,U,4)
"RTN","EDPBWS",130,0)
 .S IEN1=0,CMPCNT=0
"RTN","EDPBWS",131,0)
 .F  S IEN1=$O(^EDPB(232.71,IEN,1,IEN1)) Q:'IEN1  D
"RTN","EDPBWS",132,0)
 ..S CMPNT=$P(^EDPB(232.71,IEN,1,IEN1,0),U)
"RTN","EDPBWS",133,0)
 ..S X1=^EDPB(232.72,CMPNT,0)
"RTN","EDPBWS",134,0)
 ..S CMPCNT=CMPCNT+1
"RTN","EDPBWS",135,0)
 ..S ARRAY("section",CNT,"component",CMPCNT,"name")=$P(X1,U)
"RTN","EDPBWS",136,0)
 ..S ARRAY("section",CNT,"component",CMPCNT,"id")=CMPNT
"RTN","EDPBWS",137,0)
 .; now build the roles into the array
"RTN","EDPBWS",138,0)
 ;.S RIEN=0 F  S RIEN=$O(^EDPB(232.71,IEN,2,RIEN)) Q:'RIEN  D
"RTN","EDPBWS",139,0)
 ;..S ARRAY("section",CNT,"role",RIEN,"id")=$P(^EDPB(232.71,IEN,2,RIEN,0),U)
"RTN","EDPBWS",140,0)
 ;
"RTN","EDPBWS",141,0)
 ; consider moving these calls to prevent jumping 2 subroutines during the calls
"RTN","EDPBWS",142,0)
 ; this will require results to be newed in this function and ARRAY to be used
"RTN","EDPBWS",143,0)
 ; instead of SECTIONS on the merge. EDPXML will then have to be configured differently.
"RTN","EDPBWS",144,0)
 ; It is currently being cofigured in the calling routine.
"RTN","EDPBWS",145,0)
 Q
"RTN","EDPBWS",146,0)
LSTWKS(EDPSITE,AREA,ARRAY) ; list worksheet configurations for an area
"RTN","EDPBWS",147,0)
 N IEN,CNT,WKSSPEC
"RTN","EDPBWS",148,0)
 S IEN=0,CNT=0
"RTN","EDPBWS",149,0)
 S IEN=0 F  S IEN=$O(^EDPB(232.6,"C",EDPSITE,AREA,IEN)) Q:'IEN  D
"RTN","EDPBWS",150,0)
 . S CNT=CNT+1
"RTN","EDPBWS",151,0)
 . D GETWKS(EDPSITE,IEN,,.WKSSPEC)
"RTN","EDPBWS",152,0)
 . M ARRAY(CNT)=WKSSPEC
"RTN","EDPBWS",153,0)
 . K WKSSPEC
"RTN","EDPBWS",154,0)
 Q
"RTN","EDPBWS",155,0)
GETWKS(EDPSITE,WKS,REQ,ARRAY) ;
"RTN","EDPBWS",156,0)
 ; if REQ("data") is passed, build component data along with definition
"RTN","EDPBWS",157,0)
 ;
"RTN","EDPBWS",158,0)
 N X0,XS,XM,SEQ,SEC,MIEN,I,ROLE,RCNT,CSEQ,COMP,C0,CIEN,CVAL,PNAME,PARVAL,VIEN,V0,PIEN
"RTN","EDPBWS",159,0)
 S X0=$G(^EDPB(232.6,WKS,0)),DATA=$G(DATA,0)
"RTN","EDPBWS",160,0)
 S ARRAY("name")=$P(X0,U),ARRAY("id")=WKS
"RTN","EDPBWS",161,0)
 S ARRAY("institution")=$P(X0,U,2)
"RTN","EDPBWS",162,0)
 S ARRAY("area")=$P(X0,U,3)
"RTN","EDPBWS",163,0)
 S ARRAY("disabled")=$S($P(X0,U,6):"true",1:"false")
"RTN","EDPBWS",164,0)
 S ARRAY("editable")=$S($P(X0,U,7):"true",1:"false")
"RTN","EDPBWS",165,0)
 ; build roles associated with this worksheet
"RTN","EDPBWS",166,0)
 S (ROLE,RCNT)=0 F  S ROLE=$O(^EDPB(232.6,WKS,3,"B",ROLE)) Q:'ROLE  D
"RTN","EDPBWS",167,0)
 .S RCNT=RCNT+1,ARRAY("role",RCNT,"id")=ROLE
"RTN","EDPBWS",168,0)
 ; build section information
"RTN","EDPBWS",169,0)
 S SEQ=0 F  S SEQ=$O(^EDPB(232.6,WKS,2,"B",SEQ)) Q:'SEQ  D
"RTN","EDPBWS",170,0)
 .S SEC=0 F  S SEC=$O(^EDPB(232.6,WKS,2,"B",SEQ,SEC)) Q:'SEC  D
"RTN","EDPBWS",171,0)
 ..S X0=^EDPB(232.6,WKS,2,SEC,0),XS=^EDPB(232.71,$P(X0,U,2),0)
"RTN","EDPBWS",172,0)
 ..S ARRAY("section",SEQ,"id")=$P(X0,U,2)
"RTN","EDPBWS",173,0)
 ..S ARRAY("section",SEQ,"name")=$P(XS,U)
"RTN","EDPBWS",174,0)
 ..S ARRAY("section",SEQ,"displayName")=$P(XS,U,4)
"RTN","EDPBWS",175,0)
 ..S ARRAY("section",SEQ,"initialOpen")=$S($P(X0,U,3):"true",1:"false")
"RTN","EDPBWS",176,0)
 ..S ARRAY("section",SEQ,"sequence")=$P(X0,U)
"RTN","EDPBWS",177,0)
 ..; build component information
"RTN","EDPBWS",178,0)
 ..S CSEQ=0 F  S CSEQ=$O(^EDPB(232.6,WKS,2,SEC,2,"B",CSEQ)) Q:'CSEQ  D
"RTN","EDPBWS",179,0)
 ...S COMP=0 F  S COMP=$O(^EDPB(232.6,WKS,2,SEC,2,"B",CSEQ,COMP)) Q:'COMP  D
"RTN","EDPBWS",180,0)
 ....S C0=$G(^EDPB(232.6,WKS,2,SEC,2,COMP,0)),CIEN=$P(C0,U,2)
"RTN","EDPBWS",181,0)
 ....S ARRAY("section",SEQ,"component",CSEQ,"id")=CIEN
"RTN","EDPBWS",182,0)
 ....S ARRAY("section",SEQ,"component",CSEQ,"name")=$$GET1^DIQ(232.72,CIEN,.01,"E")
"RTN","EDPBWS",183,0)
 ....S ARRAY("section",SEQ,"component",CSEQ,"label")=$$GET1^DIQ(232.72,CIEN,.02,"E")
"RTN","EDPBWS",184,0)
 ....S ARRAY("section",SEQ,"component",CSEQ,"sequence")=CSEQ
"RTN","EDPBWS",185,0)
 ....S ARRAY("section",SEQ,"component",CSEQ,"editable")=$S($P(C0,U,3):"true",1:"false")
"RTN","EDPBWS",186,0)
 ....S ARRAY("section",SEQ,"component",CSEQ,"visibilityTrigger")=$$GET1^DIQ(232.72,CIEN,.12,"E")
"RTN","EDPBWS",187,0)
 ....S ARRAY("section",SEQ,"component",CSEQ,"includeInSummary")=$S($P(C0,U,5):"true",1:"false")
"RTN","EDPBWS",188,0)
 ....S ARRAY("section",SEQ,"component",CSEQ,"dataProvider")=$$GET1^DIQ(232.72,CIEN,.03,"E")
"RTN","EDPBWS",189,0)
 ....S ARRAY("section",SEQ,"component",CSEQ,"summaryLabel")=$$GET1^DIQ(232.72,CIEN,.09,"E")
"RTN","EDPBWS",190,0)
 ....S ARRAY("section",SEQ,"component",CSEQ,"summaryOrder")=$$GET1^DIQ(232.72,CIEN,.1,"E")
"RTN","EDPBWS",191,0)
 ....S ARRAY("section",SEQ,"component",CSEQ,"value")=$$GET1^DIQ(232.72,CIEN,.08,"E")
"RTN","EDPBWS",192,0)
 ....S ARRAY("section",SEQ,"component",CSEQ,"type")=$$GET1^DIQ(232.72,CIEN,.06,"E")
"RTN","EDPBWS",193,0)
 ....S ARRAY("section",SEQ,"component",CSEQ,"available")=$$GET1^DIQ(232.72,CIEN,.11,"E")
"RTN","EDPBWS",194,0)
 ....S ARRAY("section",SEQ,"component",CSEQ,"loadAPI")=$$GET1^DIQ(232.72,CIEN,2.1,"E")
"RTN","EDPBWS",195,0)
 ....S ARRAY("section",SEQ,"component",CSEQ,"saveAPI")=$$GET1^DIQ(232.72,CIEN,2.2,"E")
"RTN","EDPBWS",196,0)
 ....S ARRAY("section",SEQ,"component",CSEQ,"loadEvent",1,"name")=$$GET1^DIQ(232.72,CIEN,1.3,"E")
"RTN","EDPBWS",197,0)
 ....S PIEN=0 F  S PIEN=$O(^EDPB(232.72,CIEN,5,PIEN)) Q:'PIEN  D
"RTN","EDPBWS",198,0)
 .....; below will be needed for future enhancements
"RTN","EDPBWS",199,0)
 .....;S ARRAY("section",SEQ,"component",CSEQ,"loadEvent",1,"name")=$$GET1^DIQ(232.72,CIEN,1.3,"E")
"RTN","EDPBWS",200,0)
 .....;S ARRAY("section",SEQ,"component",CSEQ,"loadEvent",PIEN,"paramName")=$$GET1^DIQ(232.725,PIEN,.01,"E")
"RTN","EDPBWS",201,0)
 .....;S ARRAY("section",SEQ,"component",CSEQ,"loadEvent",PIEN,"dataType")=$$GET1^DIQ(232.725,PIEN,1,"E")
"RTN","EDPBWS",202,0)
 .....;S ARRAY("section",SEQ,"component",CSEQ,"loadEvent",PIEN,"saveloadType")=$$GET1^DIQ(232.725,PIEN,2,"E")
"RTN","EDPBWS",203,0)
 ....S VIEN=0 F  S VIEN=$O(^EDPB(232.72,CIEN,9,VIEN)) Q:'VIEN  D
"RTN","EDPBWS",204,0)
 .....S V0=$G(^EDPB(232.72,CIEN,9,VIEN,0))
"RTN","EDPBWS",205,0)
 .....S ARRAY("section",SEQ,"component",CSEQ,"validator",VIEN,"type")=$$GET1^DIQ(232.74,$P(V0,U),.01,"E")
"RTN","EDPBWS",206,0)
 .....S ARRAY("section",SEQ,"component",CSEQ,"validator",VIEN,"property")=$P(V0,U,2)
"RTN","EDPBWS",207,0)
 .....S ARRAY("section",SEQ,"component",CSEQ,"validator",VIEN,"maxLength")=$P(V0,U,3)
"RTN","EDPBWS",208,0)
 .....S ARRAY("section",SEQ,"component",CSEQ,"validator",VIEN,"required")=$S($P(V0,U,4)=1:"true",1:"false")
"RTN","EDPBWS",209,0)
 .....S ARRAY("section",SEQ,"component",CSEQ,"validator",VIEN,"minValue")=$P(V0,U,5)
"RTN","EDPBWS",210,0)
 .....S ARRAY("section",SEQ,"component",CSEQ,"validator",VIEN,"lowerThanMinError")=$G(^EDPB(232.72,CIEN,9,VIEN,1))
"RTN","EDPBWS",211,0)
 ....; if 'data' is passed in, get the data for the component. Parameters for component must be passed in as well
"RTN","EDPBWS",212,0)
 ....; for data to be retrieved.
"RTN","EDPBWS",213,0)
 ....I '$$VAL(.REQ,"data") Q
"RTN","EDPBWS",214,0)
 ....; below will be needed for future enhancement
"RTN","EDPBWS",215,0)
 ....;S COMDATA=$$BLDCDATA(CIEN,.REQ,.ARRAY)
"RTN","EDPBWS",216,0)
 ....;S CVAL=$P(COMDATA,U),PNAME=$P(COMDATA,U,2),PARVAL=$P(COMDATA,U,3)
"RTN","EDPBWS",217,0)
 ....;S ARRAY("section",SEQ,"component",CSEQ,"dataValue")=CVAL
"RTN","EDPBWS",218,0)
 ....;
"RTN","EDPBWS",219,0)
 ....;S ARRAY("section",SEQ,"component",CSEQ,"parameterName")=PNAME
"RTN","EDPBWS",220,0)
 ....;S ARRAY("section",SEQ,"component",CSEQ,"parameterValue")=PARVAL
"RTN","EDPBWS",221,0)
 ....;D BLDCDATA(CIEN,SEQ,CSEQ,.REQ,.ARRAY)
"RTN","EDPBWS",222,0)
 Q
"RTN","EDPBWS",223,0)
BLDCDATA(IEN,REQ,ARRAY) ;
"RTN","EDPBWS",224,0)
 ; IEN    - IEN of the component, from file 232.72
"RTN","EDPBWS",225,0)
 ; REQ    - Parameter list from call in EDPCTRL
"RTN","EDPBWS",226,0)
 ; ARRAY  - XML ARRAY to continue building XML
"RTN","EDPBWS",227,0)
 N PNAME,PIEN,P0,PDTYPE,LSTYPE,LOADERR,PARVAL,CVAL,PARRAY,RET,C0,C1,CFILE,CFIELD,LALT,LAPI
"RTN","EDPBWS",228,0)
 S RET=""
"RTN","EDPBWS",229,0)
 S C0=$G(^EDPB(232.72,IEN,0))
"RTN","EDPBWS",230,0)
 S C1=$G(^EDPB(232.72,IEN,1))
"RTN","EDPBWS",231,0)
 ; get associated file/field
"RTN","EDPBWS",232,0)
 S CFILE=$P(C1,U),CFIELD=$P(C1,U,2)
"RTN","EDPBWS",233,0)
 ; build parameter list from component
"RTN","EDPBWS",234,0)
 S LOADERR=0
"RTN","EDPBWS",235,0)
 S PIEN=0 F  S PIEN=$O(^EDPB(232.72,IEN,5,PIEN)) Q:'PIEN!(LOADERR)  D
"RTN","EDPBWS",236,0)
 .S P0=$G(^EDPB(232.72,IEN,5,PIEN,0))
"RTN","EDPBWS",237,0)
 .; gather name, data type, and load/save type
"RTN","EDPBWS",238,0)
 .S PNAME=$P(P0,U),PDTYPE=$P(P0,U,2),LSTYPE=$P(P0,U,3)
"RTN","EDPBWS",239,0)
 .I PDTYPE="L",'$D(REQ(PNAME)) D LOADERR(.REQ,SEQ,CSEQ,.ARRAY) S LOADERR=1 Q
"RTN","EDPBWS",240,0)
 .S PARVAL=$$VAL(.REQ,PNAME)
"RTN","EDPBWS",241,0)
 .I PARVAL="" D LOADERR(.REQ,SEQ,CSEQ,.ARRAY) S LOADERR=1 Q
"RTN","EDPBWS",242,0)
 .S PARRAY(PNAME)=PARVAL
"RTN","EDPBWS",243,0)
 I $G(LOADERR) S RET="LOAD ERROR" Q RET
"RTN","EDPBWS",244,0)
 S CVAL="" ; initialize to prevent undefined
"RTN","EDPBWS",245,0)
 ; if file/field exists, get the 'TYPE' from FIELD^DID and utilize that for the call???
"RTN","EDPBWS",246,0)
 I CFILE,CFIELD D
"RTN","EDPBWS",247,0)
 .S CVAL=$$GET1^DIQ(CFILE,PARVAL,CFIELD,"E")
"RTN","EDPBWS",248,0)
 ; if loadapi exists??
"RTN","EDPBWS",249,0)
 ;S LAPI=$$GET1^DIQ(CFILE,PARVAL,2.1,"E") I $L(LAPI) D
"RTN","EDPBWS",250,0)
 ;.D @LAPI
"RTN","EDPBWS",251,0)
 ; if alternate load logic exists??
"RTN","EDPBWS",252,0)
 ;S LALT=$$GET1^DIQ(CFILE,PARVAL,2.2,"E") I $L(LALT) D
"RTN","EDPBWS",253,0)
 ;.D @LALT
"RTN","EDPBWS",254,0)
 S RET=CVAL_U_PNAME_U_PARVAL
"RTN","EDPBWS",255,0)
 ;S ARRAY("section",SEQ,"component",CSEQ,"value")=CVAL
"RTN","EDPBWS",256,0)
 ;S ARRAY("section",SEQ,"component",CSEQ,"parameterName")=PNAME
"RTN","EDPBWS",257,0)
 ;S ARRAY("section",SEQ,"component",CSEQ,"parameterValue")=PARVAL
"RTN","EDPBWS",258,0)
 Q RET
"RTN","EDPBWS",259,0)
LOADERR(PARAM,SEQ,CSEQ,ARRAY) ;
"RTN","EDPBWS",260,0)
 S ARRAY("section",SEQ,"component",CSEQ,"error")="Parameter invalid or missing for this component."
"RTN","EDPBWS",261,0)
 Q
"RTN","EDPBWS",262,0)
 ; REQ1("param",1)=value
"RTN","EDPBWS",263,0)
 ; REQ2("worksheet",counter)=sectionID^Sequence (for section)^InitiallyOpen^componentID^Sequence (for component)^Editable^IncludeInSummary
"RTN","EDPBWS",264,0)
SAVEWORK(REQ1,REQ2,EDPSITE,AREA) ; save worksheet configuration
"RTN","EDPBWS",265,0)
 N WSID,WSNAME,WSINST,WSAREA,WSTYPE,WSROLES,ROLESTR,I,DONE,FIL,WSIENS,NWSIEN,ROLE,SECIEN,SECID,SECIENS,WSINACT
"RTN","EDPBWS",266,0)
 N ROLE,WSERR,DEL,SECIEN,SECIENS,EDITABLE
"RTN","EDPBWS",267,0)
 S WSID=$$VAL(.REQ1,"id"),WSIENS=$S(WSID>0:WSID_",",1:"+1,")
"RTN","EDPBWS",268,0)
 S DEL=$$VAL(.REQ1,"remove"),DEL=$S(DEL="true":1,1:0)
"RTN","EDPBWS",269,0)
 ; if we are deleting the worksheet, do it, then quit
"RTN","EDPBWS",270,0)
 I 'WSID,DEL D WSERR("Missing worksheet ID.") Q
"RTN","EDPBWS",271,0)
 I WSID,'$$GET1^DIQ(232.6,WSID,.07,"I") D WSERR("This is a standard worksheet and is not editable.") Q
"RTN","EDPBWS",272,0)
 I WSID,DEL S FDA(232.6,WSIENS,.01)="@" D FILE^DIE(,"FDA") K FDA Q
"RTN","EDPBWS",273,0)
 S WSNAME=$$VAL(.REQ1,"name") I '$L(WSNAME)!$L(WSNAME)>30 D WSERR("Worksheet name missing or invalid.") Q
"RTN","EDPBWS",274,0)
 I 'WSID,$D(^EDPB(232.6,"B",WSNAME)) D WSERR("Worksheet with this name already exists. Please choose another name and save again.") Q
"RTN","EDPBWS",275,0)
 I 'WSID,WSNAME="" D WSERR("No worksheet ID or NAME was passed to VistA. Can not perform actions on this worksheet") Q
"RTN","EDPBWS",276,0)
 S WSINST=EDPSITE,WSAREA=AREA
"RTN","EDPBWS",277,0)
 S WSTYPE=$$VAL(.REQ1,"type")
"RTN","EDPBWS",278,0)
 S ROLESTR=$$VAL(.REQ1,"role")
"RTN","EDPBWS",279,0)
 S WSINACT=$$VAL(.REQ1,"disabled"),WSINACT=$S(WSINACT="true":1,1:0)
"RTN","EDPBWS",280,0)
 ; get the list of roles appropriate for this worksheet
"RTN","EDPBWS",281,0)
 S DONE=0
"RTN","EDPBWS",282,0)
 F I=1:1 D  Q:DONE
"RTN","EDPBWS",283,0)
 .S ROLE=$P(ROLESTR,U,I) I 'ROLE S DONE=1 Q
"RTN","EDPBWS",284,0)
 .S WSROLES(ROLE)=""
"RTN","EDPBWS",285,0)
 ; setup main worksheet fields
"RTN","EDPBWS",286,0)
 S FIL=232.6 K FDA
"RTN","EDPBWS",287,0)
 D SETFDA(FIL,WSIENS,.01,WSNAME)
"RTN","EDPBWS",288,0)
 D SETFDA(FIL,WSIENS,.02,WSINST)
"RTN","EDPBWS",289,0)
 D SETFDA(FIL,WSIENS,.03,WSAREA)
"RTN","EDPBWS",290,0)
 D SETFDA(FIL,WSIENS,.04,WSTYPE)
"RTN","EDPBWS",291,0)
 D SETFDA(FIL,WSIENS,.06,WSINACT)
"RTN","EDPBWS",292,0)
 ; force all worksheets created by a facility to be editable
"RTN","EDPBWS",293,0)
 D SETFDA(FIL,WSIENS,.07,1)
"RTN","EDPBWS",294,0)
 ; no id means we are creating a NEW worksheet
"RTN","EDPBWS",295,0)
 I '$G(WSID) D  Q
"RTN","EDPBWS",296,0)
 .; add the worksheet to the database
"RTN","EDPBWS",297,0)
 .D UPDATE^DIE(,"FDA","NWSIEN","WSERR") K FDA
"RTN","EDPBWS",298,0)
 .I $D(WSERR) D WSERR("Filing Error") Q
"RTN","EDPBWS",299,0)
 .S WSID=$O(NWSIEN(0)),WSID=$G(NWSIEN(WSID))
"RTN","EDPBWS",300,0)
 .; now add roles to the entry
"RTN","EDPBWS",301,0)
 .S ROLE=0 F  S ROLE=$O(WSROLES(ROLE)) Q:'ROLE  D
"RTN","EDPBWS",302,0)
 ..K FDA
"RTN","EDPBWS",303,0)
 ..D SETFDA(232.63,"+1,"_WSID_",",.01,ROLE)
"RTN","EDPBWS",304,0)
 ..D UPDATE^DIE(,"FDA",,"WSERR") K FDA
"RTN","EDPBWS",305,0)
 .; now add sections and components
"RTN","EDPBWS",306,0)
 .D SECCOMP(WSID,.REQ2)
"RTN","EDPBWS",307,0)
 ; updating a worksheet.
"RTN","EDPBWS",308,0)
 D FILE^DIE(,"FDA") K FDA
"RTN","EDPBWS",309,0)
 ; first clear out the sections and components, so we completely rebuild them
"RTN","EDPBWS",310,0)
 S SECIEN=0 F  S SECID=$O(^EDPB(232.6,WSID,2,SECIEN)) Q:'SECIEN  D
"RTN","EDPBWS",311,0)
 .S SECIENS=SECIEN_","_WSID_","
"RTN","EDPBWS",312,0)
 .S FDA(232.62,SECIENS,.01)="@"
"RTN","EDPBWS",313,0)
 ; now we can place the sections and components back in
"RTN","EDPBWS",314,0)
 D SECCOMP(WSID,.REQ2)
"RTN","EDPBWS",315,0)
 Q
"RTN","EDPBWS",316,0)
SECCOMP(WSID,DATA) ; adds/updates sections and components in a given worksheet
"RTN","EDPBWS",317,0)
 ; REQ2("worksheet",counter)=sectionID^Sequence (for section)^InitiallyOpen^componentID^Sequence (for component)^Editable^IncludeInSummary^VisibilityTrigger
"RTN","EDPBWS",318,0)
 N CNT,ARY,SECDATA,SID,CID,COMP,SECT,I,SFIL,CFIL,SUPDERR,SADDERR,PFLD,CID,INITOPEN
"RTN","EDPBWS",319,0)
 N SSEQ,CSEC,SECIEN,SIENS,CIENS,SECTION,SOK,COK,COMPIEN,COMDATA,EDITABLE
"RTN","EDPBWS",320,0)
 N VISIBLE,CVIS,SUMMARY,CSUM
"RTN","EDPBWS",321,0)
 S ARY=$NA(DATA("worksheet"))
"RTN","EDPBWS",322,0)
 S CNT=0 F  S CNT=$O(@ARY@(CNT)) Q:'CNT  D
"RTN","EDPBWS",323,0)
 .S SECDATA=$G(@ARY@(CNT)) Q:'$L(SECDATA)
"RTN","EDPBWS",324,0)
 .S SID=$P(SECDATA,U),SSEQ=$P(SECDATA,U,2),INITOPEN=$P(SECDATA,U,3),INITOPEN=$S(INITOPEN="true":1,INITOPEN="false":0,1:"")
"RTN","EDPBWS",325,0)
 .S CID=$P(SECDATA,U,4),CSEQ=$P(SECDATA,U,5),EDITABLE=$P(SECDATA,U,6),SUMMARY=$P(SECDATA,U,7),VISIBLE=$P(SECDATA,U,8)
"RTN","EDPBWS",326,0)
 .S EDITABLE=$S(EDITABLE="true":1,EDITABLE="false":0,1:"")
"RTN","EDPBWS",327,0)
 .S SUMMARY=$S(SUMMARY="true":1,SUMMARY="false":0,1:"")
"RTN","EDPBWS",328,0)
 .I CSEQ S COMP(SSEQ,CSEQ)=CID_U_EDITABLE_U_SUMMARY_U_VISIBLE
"RTN","EDPBWS",329,0)
 .I SSEQ,'CSEQ S SECT(SSEQ)=SID_U_INITOPEN
"RTN","EDPBWS",330,0)
 ;
"RTN","EDPBWS",331,0)
 ; first file the sections
"RTN","EDPBWS",332,0)
 K SECDATA
"RTN","EDPBWS",333,0)
 S SFIL=232.62
"RTN","EDPBWS",334,0)
 S SSEQ=0 F  S SSEQ=$O(SECT(SSEQ)) Q:'SSEQ  D
"RTN","EDPBWS",335,0)
 .; first check to see if the section already exists in this worksheet
"RTN","EDPBWS",336,0)
 .S SOK=0
"RTN","EDPBWS",337,0)
 .S SECDATA=$G(SECT(SSEQ)),SID=$P(SECDATA,U),INITOPEN=$P(SECDATA,U,2)
"RTN","EDPBWS",338,0)
 .I $D(^EDPB(232.6,WSID,2,"B",SSEQ)) D  Q
"RTN","EDPBWS",339,0)
 ..S SECIEN=$O(^EDPB(232.6,WSID,2,"B",SSEQ,0)) Q:'SECIEN
"RTN","EDPBWS",340,0)
 ..S SIENS=SECIEN_","_WSID_","
"RTN","EDPBWS",341,0)
 ..S SOK=$$FILEDAT(SFIL,SIENS,SSEQ,SID,INITOPEN,0)
"RTN","EDPBWS",342,0)
 ..I SOK Q
"RTN","EDPBWS",343,0)
 ..; process error (OK was returned as -1 (indicating error))
"RTN","EDPBWS",344,0)
 .; build FDA to add a new section
"RTN","EDPBWS",345,0)
 .S SIENS="+1,"_WSID_","
"RTN","EDPBWS",346,0)
 .S SOK=$$FILEDAT(SFIL,SIENS,SSEQ,SID,INITOPEN,1)
"RTN","EDPBWS",347,0)
 ;
"RTN","EDPBWS",348,0)
 ; now file the components
"RTN","EDPBWS",349,0)
 S CFIL=232.622
"RTN","EDPBWS",350,0)
 S SSEQ=0 F  S SSEQ=$O(COMP(SSEQ)) Q:'SSEQ  D
"RTN","EDPBWS",351,0)
 .; for some reason this section does not exist (possible filing error)
"RTN","EDPBWS",352,0)
 .I '$D(^EDPB(232.6,WSID,2,"B",SSEQ)) Q
"RTN","EDPBWS",353,0)
 .S SECIEN=$O(^EDPB(232.6,WSID,2,"B",SSEQ,0)) Q:'SECIEN
"RTN","EDPBWS",354,0)
 .S CSEQ=0 F  S CSEQ=$O(COMP(SSEQ,CSEQ)) Q:'CSEQ  D
"RTN","EDPBWS",355,0)
 ..S COK=0
"RTN","EDPBWS",356,0)
 ..S COMDATA=$G(COMP(SSEQ,CSEQ)),CID=$P(COMDATA,U),EDITABLE=$P(COMDATA,U,2),CSUM=$P(COMDATA,U,3),CVIS=$P(COMDATA,U,4)
"RTN","EDPBWS",357,0)
 ..I $D(^EDPB(232.6,WSID,2,SECIEN,2,"B",CSEQ)) D  Q
"RTN","EDPBWS",358,0)
 ...S COMPIEN=$O(^EDPB(232.6,WSID,2,SECIEN,2,"B",CSEQ,0)) Q:'COMPIEN
"RTN","EDPBWS",359,0)
 ...S CIENS=COMPIEN_","_SECIEN_","_WSID_","
"RTN","EDPBWS",360,0)
 ...S COK=$$FILEDAT(CFIL,CIENS,CSEQ,CID,EDITABLE,0,CSUM,CVIS)
"RTN","EDPBWS",361,0)
 ..;
"RTN","EDPBWS",362,0)
 ..; build FDA for adding a 'new' component to a section
"RTN","EDPBWS",363,0)
 ..S CIENS="+1,"_SECIEN_","_WSID_","
"RTN","EDPBWS",364,0)
 ..S COK=$$FILEDAT(CFIL,CIENS,CSEQ,CID,EDITABLE,1,CSUM,CVIS)
"RTN","EDPBWS",365,0)
 Q
"RTN","EDPBWS",366,0)
FILEDAT(FIL,IENS,SEQ,ID,P03,NEW,CSUM,CVIS) ; filer for section and component data
"RTN","EDPBWS",367,0)
 ; this can be used for both section and component due to the similarities in the file structures
"RTN","EDPBWS",368,0)
 N ERR,RET
"RTN","EDPBWS",369,0)
 S RET=1
"RTN","EDPBWS",370,0)
 ; if deleting a section or component
"RTN","EDPBWS",371,0)
 I ID="@" D  Q RET
"RTN","EDPBWS",372,0)
 .D SETFDA(FIL,IENS,.01,"@")
"RTN","EDPBWS",373,0)
 .; lock record
"RTN","EDPBWS",374,0)
 .L +^EDPB(232.6,WSID):3 Q:'$T
"RTN","EDPBWS",375,0)
 .D FILE^DIE(,"FDA") S RET=1
"RTN","EDPBWS",376,0)
 .L -^EDPB(232.6,WSID)
"RTN","EDPBWS",377,0)
 .; unlock record
"RTN","EDPBWS",378,0)
 D SETFDA(FIL,IENS,.01,SEQ)
"RTN","EDPBWS",379,0)
 D SETFDA(FIL,IENS,.02,ID)
"RTN","EDPBWS",380,0)
 D SETFDA(FIL,IENS,.03,P03)
"RTN","EDPBWS",381,0)
 ; two additional fields need to be handled for components
"RTN","EDPBWS",382,0)
 I FIL=232.622 D
"RTN","EDPBWS",383,0)
 .D SETFDA(FIL,IENS,.04,CVIS)
"RTN","EDPBWS",384,0)
 .D SETFDA(FIL,IENS,.05,CSUM)
"RTN","EDPBWS",385,0)
 ; if this is a new entry, file it, then quit
"RTN","EDPBWS",386,0)
 I $G(NEW) K ERR D UPDATE^DIE(,"FDA",,"ERR") K FDA S RET=$S($D(ERR):-1,1:1) Q RET
"RTN","EDPBWS",387,0)
 ; if this is meant to update an entry, lock, update, unlock
"RTN","EDPBWS",388,0)
 ; lock
"RTN","EDPBWS",389,0)
 L +^EDPB(232.6,WSID):3 Q:'$T 0
"RTN","EDPBWS",390,0)
 D FILE^DIE(,"FDA","ERR")
"RTN","EDPBWS",391,0)
 L -^EDPB(232.6,WSID)
"RTN","EDPBWS",392,0)
 ; unlock
"RTN","EDPBWS",393,0)
 I $D(ERR) S RET=-1
"RTN","EDPBWS",394,0)
 Q RET
"RTN","EDPBWS",395,0)
SETFDA(F,IENS,FD,VAL) ;
"RTN","EDPBWS",396,0)
 S FDA(F,IENS,FD)=VAL
"RTN","EDPBWS",397,0)
 Q
"RTN","EDPBWS",398,0)
WSERR(ERRTXT) ;
"RTN","EDPBWS",399,0)
 D XML^EDPX("<error>")
"RTN","EDPBWS",400,0)
 D XML^EDPX($G(ERRTXT))
"RTN","EDPBWS",401,0)
 D XML^EDPX("</error>")
"RTN","EDPBWS",402,0)
 Q
"RTN","EDPBWS",403,0)
VAL(ARRY,ITEM) ;return value from array, given ARRY (array name), and ITEM (subscript)
"RTN","EDPBWS",404,0)
 I $D(ARRY(ITEM)),$G(ARRY(ITEM))'="" Q $G(ARRY(ITEM))
"RTN","EDPBWS",405,0)
 Q $G(ARRY(ITEM,1))
"RTN","EDPRPT5")
0^7^B54053972^B52072453
"RTN","EDPRPT5",1,0)
EDPRPT5 ;SLC/MKB - Shift Report ;2/28/12 08:33am
"RTN","EDPRPT5",2,0)
 ;;2.0;EMERGENCY DEPARTMENT;**7**;May 2, 2012;Build 18
"RTN","EDPRPT5",3,0)
 ;
"RTN","EDPRPT5",4,0)
 ;DBIA SECTION
"RTN","EDPRPT5",5,0)
 ;10103 - $$NOW^XLFDT$$FMADD^XLFDT,$$FMDIFF^XLFDT,$$FMTH^XLFDT
"RTN","EDPRPT5",6,0)
 ;10104 - $$UP^XLFSTR
"RTN","EDPRPT5",7,0)
 ;
"RTN","EDPRPT5",8,0)
SFT(DAY,CSV) ; Get Shift Report for EDPSITE on DAY
"RTN","EDPRPT5",9,0)
 N BEG,END,IN,OUT,LOG,X,X0,X1,X3,X4,S,SOUT,SHIFT
"RTN","EDPRPT5",10,0)
 N CNT,VA,DX,OTH,HR6,TRG,OCB,MO,DIE,UNK,PREV,NEXT,SUB
"RTN","EDPRPT5",11,0)
 N ELAPSE,ADMDEC,STS,DISP,COL
"RTN","EDPRPT5",12,0)
 D INIT ;set counters to 0, SHIFT(#) = start time in seconds
"RTN","EDPRPT5",13,0)
 I 'SHIFT D ERR^EDPRPT(2300013) Q
"RTN","EDPRPT5",14,0)
 S BEG=$S(SHIFT(1)>0:$$FMADD^XLFDT(DAY,,,,SHIFT(1)),1:DAY)
"RTN","EDPRPT5",15,0)
 S END=$S(SHIFT(1)>0:$$FMADD^XLFDT(DAY,+1,,,SHIFT(1)),1:DAY_".2359")
"RTN","EDPRPT5",16,0)
 ;S BEG=$S(SHIFT(1)>0:$$FMADD^XLFDT(DAY,-1,,,SHIFT(SHIFT)),1:DAY)
"RTN","EDPRPT5",17,0)
 ;S END=$S(SHIFT(1)>0:$$FMADD^XLFDT(DAY,,,,SHIFT(SHIFT)),1:DAY_".2359")
"RTN","EDPRPT5",18,0)
 S IN=BEG-.000001 F  S IN=$O(^EDP(230,"ATI",EDPSITE,IN)) Q:'IN  Q:IN>END  D
"RTN","EDPRPT5",19,0)
 . S LOG=0 F  S LOG=+$O(^EDP(230,"ATI",EDPSITE,IN,LOG)) Q:LOG<1  D
"RTN","EDPRPT5",20,0)
 .. S X0=^EDP(230,LOG,0),X1=$G(^(1)),X3=$G(^(3)),X4=$G(^(4,1,0))
"RTN","EDPRPT5",21,0)
 .. S STS=$$ECODE^EDPRPT($P(X3,U,2))
"RTN","EDPRPT5",22,0)
 .. ;TDP - Patch 2 mod to catch all dispositions
"RTN","EDPRPT5",23,0)
 .. S DISP=$$ECODE^EDPRPT($P(X1,U,2))
"RTN","EDPRPT5",24,0)
 .. I DISP="" S DISP=$$DISP^EDPRPT($P(X1,U,2))
"RTN","EDPRPT5",25,0)
 .. S DISP=$$UP^XLFSTR(DISP)
"RTN","EDPRPT5",26,0)
 .. S OUT=$P(X0,U,9) ;S:OUT="" OUT=NOW
"RTN","EDPRPT5",27,0)
 .. S ELAPSE=$S(OUT:($$FMDIFF^XLFDT(OUT,IN,2)\60),1:0) ;#min
"RTN","EDPRPT5",28,0)
 .. S ADMDEC=$$ADMIT^EDPRPT(LOG)
"RTN","EDPRPT5",29,0)
D1 .. ; all visits
"RTN","EDPRPT5",30,0)
 .. S S=$$SHIFT(IN,1),SOUT=$$SHIFT(OUT,1) Q:S']""   ; EPD*2*7 - correct "new adm" count
"RTN","EDPRPT5",31,0)
 .. S CNT(S)=CNT(S)+1
"RTN","EDPRPT5",32,0)
 .. S:'$P(X3,U,3) TRG(S)=TRG(S)+1
"RTN","EDPRPT5",33,0)
 .. S:ELAPSE>359 HR6(S)=HR6(S)+1
"RTN","EDPRPT5",34,0)
 .. S:DISP="O"!(DISP="NVA") OTH(S)=OTH(S)+1
"RTN","EDPRPT5",35,0)
 .. S:DISP="D" DIE(S)=DIE(S)+1
"RTN","EDPRPT5",36,0)
 .. ;TDP - Patch 2, additional checks for Missed Opportunities added
"RTN","EDPRPT5",37,0)
 .. ;S:$$MISSEDOP^EDPRPT3(DISP) MO(S)=MO(S)+1
"RTN","EDPRPT5",38,0)
 .. I (($$MISSEDOP^EDPRPT3(DISP))!($$MISSOP1^EDPRPT3($P(X1,U,2)))) S MO(S)=MO(S)+1
"RTN","EDPRPT5",39,0)
 .. S:DISP="" UNK(S)=UNK(S)+1
"RTN","EDPRPT5",40,0)
 .. I $L(STS),$$UP^XLFSTR(STS)'="GONE",S'=SOUT S OCB(S)=OCB(S)+1
"RTN","EDPRPT5",41,0)
D2 S OUT=BEG-.000001 F  S OUT=$O(^EDP(230,"ATO",EDPSITE,OUT)) Q:'OUT  Q:OUT>END  D
"RTN","EDPRPT5",42,0)
 . S LOG=0 F  S LOG=+$O(^EDP(230,"ATO",EDPSITE,OUT,LOG)) Q:LOG<1  D
"RTN","EDPRPT5",43,0)
 .. S X0=^EDP(230,LOG,0),X1=$G(^(1))
"RTN","EDPRPT5",44,0)
 .. S SOUT=$$SHIFT(OUT,1),DX(SOUT)=DX(SOUT)+1
"RTN","EDPRPT5",45,0)
 .. S IN=$P(X0,U,8) S:IN<BEG PREV=PREV+1
"RTN","EDPRPT5",46,0)
 .. S DISP=$$ECODE^EDPRPT($P(X1,U,2))
"RTN","EDPRPT5",47,0)
 .. S ADMDEC=$$ADMIT^EDPRPT(LOG)
"RTN","EDPRPT5",48,0)
 .. ;TDP - Patch 2, addition checks for VA Admissions added
"RTN","EDPRPT5",49,0)
 .. I ADMDEC,ADMDEC>BEG,(($$VADMIT^EDPRPT2(DISP))!($$VADMIT1^EDPRPT2($P(X1,U,2)))) S S=$$SHIFT(ADMDEC,1),VA(S)=VA(S)+1
"RTN","EDPRPT5",50,0)
D3 ; calculate #carried over
"RTN","EDPRPT5",51,0)
 S PREV("one")=PREV
"RTN","EDPRPT5",52,0)
 F I=1:1:SHIFT D
"RTN","EDPRPT5",53,0)
 . S S=SUB(I)
"RTN","EDPRPT5",54,0)
 . S NEXT(S)=PREV(S)+CNT(S)-DX(S)
"RTN","EDPRPT5",55,0)
 . I I<SHIFT S PREV(SUB(I+1))=NEXT(S)
"RTN","EDPRPT5",56,0)
 ;S S=SUB(SHIFT),NEXT(S)=PREV+CNT(S)-DX(S)
"RTN","EDPRPT5",57,0)
 ;S PREV("one")=NEXT(S),PREV(S)=PREV
"RTN","EDPRPT5",58,0)
 ;F I=1:1:(SHIFT-1) S S=SUB(I),X=SUB($S(I>1:I-1,1:SHIFT)),NEXT(S)=NEXT(X)+CNT(S)-DX(S)
"RTN","EDPRPT5",59,0)
 ;F I=2:1:(SHIFT-1) S PREV(SUB(I))=NEXT(SUB(I-1))
"RTN","EDPRPT5",60,0)
 ;S NEXT("three")=PREV+CNT("three")-DX("three")
"RTN","EDPRPT5",61,0)
 ;S NEXT("one")=NEXT("three")+CNT("one")-DX("one")
"RTN","EDPRPT5",62,0)
 ;S NEXT("two")=NEXT("one")+CNT("two")-DX("two")
"RTN","EDPRPT5",63,0)
 ;S PREV("one")=NEXT("three"),PREV("two")=NEXT("one"),PREV("three")=PREV
"RTN","EDPRPT5",64,0)
D4 ; return column info
"RTN","EDPRPT5",65,0)
 F I=1:1:SHIFT D  ;convert #seconds to HH[:MM]
"RTN","EDPRPT5",66,0)
 . N X,Y S X=SHIFT(I),Y=X\60
"RTN","EDPRPT5",67,0)
 . ;S Y=X\3600 S:Y=0 Y=12 S:Y>12 Y=Y-12
"RTN","EDPRPT5",68,0)
 . S SHIFT(I)=$$ETIME^EDPRPT(Y) ;Y_$S(X#3600:":"_(X#3600)\60,1:"")
"RTN","EDPRPT5",69,0)
 F I=1:1:SHIFT D  ;build column captions
"RTN","EDPRPT5",70,0)
 . S COL(I,"name")=SHIFT(I)_" to "_SHIFT($S(I+1>SHIFT:1,1:I+1))
"RTN","EDPRPT5",71,0)
 . S COL(I,"shiftId")=SUB(I)
"RTN","EDPRPT5",72,0)
 ;S COL(1,"name")="7 to 3",COL(1,"shiftId")="one"
"RTN","EDPRPT5",73,0)
 ;S COL(2,"name")="3 to 11",COL(2,"shiftId")="two"
"RTN","EDPRPT5",74,0)
 ;S COL(3,"name")="11 to 7",COL(3,"shiftId")="three"
"RTN","EDPRPT5",75,0)
 I $G(CSV) D CSV Q
"RTN","EDPRPT5",76,0)
 D XML^EDPX("<columns>")
"RTN","EDPRPT5",77,0)
 F S=1:1:SHIFT K X M X=COL(S) S X=$$XMLA^EDPX("column",.X) D XML^EDPX(X)
"RTN","EDPRPT5",78,0)
 D XML^EDPX("</columns>")
"RTN","EDPRPT5",79,0)
D5 ; return counts and averages as XML
"RTN","EDPRPT5",80,0)
 D XML^EDPX("<categories>")
"RTN","EDPRPT5",81,0)
 S X=$$XMLA^EDPX("category",.PREV) D XML^EDPX(X)
"RTN","EDPRPT5",82,0)
 S X=$$XMLA^EDPX("category",.CNT) D XML^EDPX(X)
"RTN","EDPRPT5",83,0)
 S X=$$XMLA^EDPX("category",.DX) D XML^EDPX(X)
"RTN","EDPRPT5",84,0)
 S X=$$XMLA^EDPX("category",.VA) D XML^EDPX(X)
"RTN","EDPRPT5",85,0)
 S X=$$XMLA^EDPX("category",.OTH) D XML^EDPX(X)
"RTN","EDPRPT5",86,0)
 S X=$$XMLA^EDPX("category",.HR6) D XML^EDPX(X)
"RTN","EDPRPT5",87,0)
 S X=$$XMLA^EDPX("category",.TRG) D XML^EDPX(X)
"RTN","EDPRPT5",88,0)
 S X=$$XMLA^EDPX("category",.OCB) D XML^EDPX(X)
"RTN","EDPRPT5",89,0)
 S X=$$XMLA^EDPX("category",.MO) D XML^EDPX(X)
"RTN","EDPRPT5",90,0)
 S X=$$XMLA^EDPX("category",.DIE) D XML^EDPX(X)
"RTN","EDPRPT5",91,0)
 S X=$$XMLA^EDPX("category",.UNK) D XML^EDPX(X)
"RTN","EDPRPT5",92,0)
 S X=$$XMLA^EDPX("category",.NEXT) D XML^EDPX(X)
"RTN","EDPRPT5",93,0)
 D XML^EDPX("</categories>")
"RTN","EDPRPT5",94,0)
 Q
"RTN","EDPRPT5",95,0)
 ;
"RTN","EDPRPT5",96,0)
CSV ; Return headers, counts and averages as CSV
"RTN","EDPRPT5",97,0)
 N X,TAB S TAB=$C(9)
"RTN","EDPRPT5",98,0)
 S X="Category"
"RTN","EDPRPT5",99,0)
 F I=1:1:(SHIFT) S X=X_TAB_COL(I,"name")
"RTN","EDPRPT5",100,0)
 D ADD^EDPCSV(X) ;headers
"RTN","EDPRPT5",101,0)
 D ROW("Carried over at Report Start",.PREV)
"RTN","EDPRPT5",102,0)
 D ROW("Number of New Patients",.CNT)
"RTN","EDPRPT5",103,0)
 D ROW("Number of Patients Discharged",.DX)
"RTN","EDPRPT5",104,0)
 D ROW("Number Dec to Admit to VA",.VA)
"RTN","EDPRPT5",105,0)
 D ROW("Number Dec to Admit to Other",.OTH)
"RTN","EDPRPT5",106,0)
 D ROW("Number over Six Hours",.HR6)
"RTN","EDPRPT5",107,0)
 D ROW("Number Waiting for Triage",.TRG)
"RTN","EDPRPT5",108,0)
 D ROW("Number of Occupied Beds",.OCB)
"RTN","EDPRPT5",109,0)
 D ROW("Number of Missed Opportunities",.MO)
"RTN","EDPRPT5",110,0)
 D ROW("Number Deceased",.DIE)
"RTN","EDPRPT5",111,0)
 D ROW("Number With No Disposition",.UNK)
"RTN","EDPRPT5",112,0)
 D ROW("Carry over to Next Shift",.NEXT)
"RTN","EDPRPT5",113,0)
 Q
"RTN","EDPRPT5",114,0)
 ;
"RTN","EDPRPT5",115,0)
ROW(NAME,LIST) ; add row
"RTN","EDPRPT5",116,0)
 N S,I
"RTN","EDPRPT5",117,0)
 S X=NAME
"RTN","EDPRPT5",118,0)
 F I=1:1:(SHIFT) S S=SUB(I),X=X_TAB_LIST(S)
"RTN","EDPRPT5",119,0)
 D ADD^EDPCSV(X)
"RTN","EDPRPT5",120,0)
 Q
"RTN","EDPRPT5",121,0)
 ;
"RTN","EDPRPT5",122,0)
INIT ; Initialize counters and sums
"RTN","EDPRPT5",123,0)
 N I,S
"RTN","EDPRPT5",124,0)
 S PREV=0,DAY=$P(DAY,".")
"RTN","EDPRPT5",125,0)
 D SETUP F I=1:1:SHIFT D
"RTN","EDPRPT5",126,0)
 . S S=$$WORD(I),SUB(I)=S
"RTN","EDPRPT5",127,0)
 . S CNT(S)=0,CNT("category")="Number of New Patients"
"RTN","EDPRPT5",128,0)
 . S DX(S)=0,DX("category")="Number of Patients Discharged"
"RTN","EDPRPT5",129,0)
 . S VA(S)=0,VA("category")="Number Dec to Admit to VA"
"RTN","EDPRPT5",130,0)
 . S OTH(S)=0,OTH("category")="Number Dec to Admit to Other"
"RTN","EDPRPT5",131,0)
 . S HR6(S)=0,HR6("category")="Number over Six Hours"
"RTN","EDPRPT5",132,0)
 . S TRG(S)=0,TRG("category")="Number Waiting for Triage" ;no acuity
"RTN","EDPRPT5",133,0)
 . S OCB(S)=0,OCB("category")="Number of Occupied Beds"
"RTN","EDPRPT5",134,0)
 . S MO(S)=0,MO("category")="Number of Missed Opportunities"
"RTN","EDPRPT5",135,0)
 . S DIE(S)=0,DIE("category")="Number Deceased"
"RTN","EDPRPT5",136,0)
 . S UNK(S)=0,UNK("category")="Number With No Disposition"
"RTN","EDPRPT5",137,0)
 . S PREV(S)=0,PREV("category")="Carried over at Report Start"
"RTN","EDPRPT5",138,0)
 . S NEXT(S)=0,NEXT("category")="Carry over to Next Shift"
"RTN","EDPRPT5",139,0)
 Q
"RTN","EDPRPT5",140,0)
 ;
"RTN","EDPRPT5",141,0)
WORD(X) ; Return name of number X
"RTN","EDPRPT5",142,0)
 N Y
"RTN","EDPRPT5",143,0)
 S Y=$S(X=1:"one",X=2:"two",X=3:"three",X=4:"four",X=5:"five",X=6:"six",X=7:"seven",X=8:"eight",X=9:"nine",X=10:"ten",X=11:"eleven",X=12:"twelve",1:"none")
"RTN","EDPRPT5",144,0)
 I Y="none" S Y=$S(X=13:"thirteen",X=14:"fourteen",X=15:"fifteen",X=16:"sixteen",X=17:"seventeen",X=18:"eighteen",X=19:"nineteen",X=20:"twenty",X=21:"twenty_one",X=22:"twenty_two",X=23:"twenty_three",X=24:"twenty_four",1:"none")
"RTN","EDPRPT5",145,0)
 Q Y
"RTN","EDPRPT5",146,0)
 ;
"RTN","EDPRPT5",147,0)
SETUP ; Create SHIFT(#) list of shift times
"RTN","EDPRPT5",148,0)
 N DUR,OVR,STOP,STRT,TA,X1,X
"RTN","EDPRPT5",149,0)
 S (STOP,OVR)=0
"RTN","EDPRPT5",150,0)
 S TA=+$O(^EDPB(231.9,"C",EDPSITE,0)),X1=$G(^EDPB(231.9,TA,1))
"RTN","EDPRPT5",151,0)
 S (STRT,X)=$P(X1,U,6),DUR=$P(X1,U,7)*60 I DUR'>0 S SHIFT=0 Q
"RTN","EDPRPT5",152,0)
 S SHIFT=1,(STRT,SHIFT(1))=X*60 ;seconds
"RTN","EDPRPT5",153,0)
 F  S X=SHIFT(SHIFT)+DUR D  Q:+STOP
"RTN","EDPRPT5",154,0)
 . I +STRT=0,X>86340 S STOP=1 Q
"RTN","EDPRPT5",155,0)
 . ;I +STRT>0,X>86400 S SHIFT=SHIFT+1,SHIFT(SHIFT)=X-(DUR+1) S STOP=1 Q
"RTN","EDPRPT5",156,0)
 . I +STRT>0,X>86400 S STOP=1 D
"RTN","EDPRPT5",157,0)
 .. S X=X-86400,OVR=1
"RTN","EDPRPT5",158,0)
 . I +OVR,+X'<+STRT S STOP=1 Q
"RTN","EDPRPT5",159,0)
 . S SHIFT=SHIFT+1,SHIFT(SHIFT)=X
"RTN","EDPRPT5",160,0)
 Q
"RTN","EDPRPT5",161,0)
SHIFT(X,TXT) ; Return shift # for time X using SHIFT(#)
"RTN","EDPRPT5",162,0)
 I $G(X)="" Q 0
"RTN","EDPRPT5",163,0)
 N TM,Y
"RTN","EDPRPT5",164,0)
 S Y=0
"RTN","EDPRPT5",165,0)
 S TM=$P($$FMTH^XLFDT(X),",",2) ;#seconds since midnight
"RTN","EDPRPT5",166,0)
 ; bwf 2/15/2012: if there is only 1 shift, then this must be the shift given date range
"RTN","EDPRPT5",167,0)
 I +SHIFT=1,TM>SHIFT(1) S Y=1 S:$G(TXT) Y=$$WORD(Y) Q Y
"RTN","EDPRPT5",168,0)
 ; bwf - end changes
"RTN","EDPRPT5",169,0)
 I +SHIFT(1)=0 D
"RTN","EDPRPT5",170,0)
 . I TM<SHIFT(1)!(TM'<SHIFT(SHIFT)) S Y=SHIFT
"RTN","EDPRPT5",171,0)
 I +SHIFT(1)>0 D
"RTN","EDPRPT5",172,0)
 . I +SHIFT(SHIFT)<+SHIFT(1),TM<SHIFT(1),TM>SHIFT(SHIFT) S Y=SHIFT
"RTN","EDPRPT5",173,0)
 . I +SHIFT(SHIFT)>+SHIFT(1),((TM<SHIFT(1))!(TM>SHIFT(SHIFT))) S Y=SHIFT
"RTN","EDPRPT5",174,0)
 I +Y=0 F I=2:1:SHIFT D  Q:+Y>0
"RTN","EDPRPT5",175,0)
 . I SHIFT(1)=0,TM<SHIFT(I) S Y=I-1 Q
"RTN","EDPRPT5",176,0)
 . I SHIFT(1)>0 D
"RTN","EDPRPT5",177,0)
 .. I SHIFT=I S Y=I-1 Q
"RTN","EDPRPT5",178,0)
 .. I SHIFT(I)<SHIFT(I-1),TM>SHIFT(I-1) S Y=I-1 Q
"RTN","EDPRPT5",179,0)
 .. I SHIFT(I)>SHIFT(I-1),TM<SHIFT(I),TM>SHIFT(I-1) S Y=I-1 Q
"RTN","EDPRPT5",180,0)
 S:$G(TXT) Y=$$WORD(Y)
"RTN","EDPRPT5",181,0)
 ;S Y=$S(TM<25200:"three",TM<54000:"one",TM<82800:"two",1:"three")
"RTN","EDPRPT5",182,0)
 Q Y
"RTN","EDPRPT5",183,0)
 ;
"RTN","EDPRPT5",184,0)
ECODE(IEN) ; Return external value for an Acuity code
"RTN","EDPRPT5",185,0)
 N X,Y S X=$P($G(^EDPB(233.1,IEN,0)),U,3) ;code
"RTN","EDPRPT5",186,0)
 S Y=$S(X="":"none",'X:X,X=1:"one",X=2:"two",X=3:"three",X=4:"four",X=5:"five",1:"X")
"RTN","EDPRPT5",187,0)
 Q Y
"VER")
8.0^22.2
"BLD",10628,6)
^6
**END**
**END**

