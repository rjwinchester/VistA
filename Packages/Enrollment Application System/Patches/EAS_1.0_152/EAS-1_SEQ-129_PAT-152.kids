Released EAS*1*152 SEQ #129
Extracted from mail message
**KIDS**:EAS*1.0*152^

**INSTALL NAME**
EAS*1.0*152
"BLD",10706,0)
EAS*1.0*152^ENROLLMENT APPLICATION SYSTEM^0^3171025^y
"BLD",10706,1,0)
^^4^4^3171025^
"BLD",10706,1,1,0)
This patch will enable the ORU~Z10 HL7 message to process when the 
"BLD",10706,1,2,0)
previous means test on file was a converted means test and the means test 
"BLD",10706,1,3,0)
on the ORU~Z10 message is for an income year after the converted means 
"BLD",10706,1,4,0)
test.
"BLD",10706,4,0)
^9.64PA^^
"BLD",10706,6.3)
5
"BLD",10706,"ABPKG")
n
"BLD",10706,"KRN",0)
^9.67PA^779.2^20
"BLD",10706,"KRN",.4,0)
.4
"BLD",10706,"KRN",.401,0)
.401
"BLD",10706,"KRN",.402,0)
.402
"BLD",10706,"KRN",.403,0)
.403
"BLD",10706,"KRN",.5,0)
.5
"BLD",10706,"KRN",.84,0)
.84
"BLD",10706,"KRN",3.6,0)
3.6
"BLD",10706,"KRN",3.8,0)
3.8
"BLD",10706,"KRN",9.2,0)
9.2
"BLD",10706,"KRN",9.8,0)
9.8
"BLD",10706,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",10706,"KRN",9.8,"NM",1,0)
EASCM^^0^B82492158
"BLD",10706,"KRN",9.8,"NM","B","EASCM",1)
 
"BLD",10706,"KRN",19,0)
19
"BLD",10706,"KRN",19.1,0)
19.1
"BLD",10706,"KRN",101,0)
101
"BLD",10706,"KRN",409.61,0)
409.61
"BLD",10706,"KRN",771,0)
771
"BLD",10706,"KRN",779.2,0)
779.2
"BLD",10706,"KRN",870,0)
870
"BLD",10706,"KRN",8989.51,0)
8989.51
"BLD",10706,"KRN",8989.52,0)
8989.52
"BLD",10706,"KRN",8994,0)
8994
"BLD",10706,"KRN","B",.4,.4)
 
"BLD",10706,"KRN","B",.401,.401)
 
"BLD",10706,"KRN","B",.402,.402)
 
"BLD",10706,"KRN","B",.403,.403)
 
"BLD",10706,"KRN","B",.5,.5)
 
"BLD",10706,"KRN","B",.84,.84)
 
"BLD",10706,"KRN","B",3.6,3.6)
 
"BLD",10706,"KRN","B",3.8,3.8)
 
"BLD",10706,"KRN","B",9.2,9.2)
 
"BLD",10706,"KRN","B",9.8,9.8)
 
"BLD",10706,"KRN","B",19,19)
 
"BLD",10706,"KRN","B",19.1,19.1)
 
"BLD",10706,"KRN","B",101,101)
 
"BLD",10706,"KRN","B",409.61,409.61)
 
"BLD",10706,"KRN","B",771,771)
 
"BLD",10706,"KRN","B",779.2,779.2)
 
"BLD",10706,"KRN","B",870,870)
 
"BLD",10706,"KRN","B",8989.51,8989.51)
 
"BLD",10706,"KRN","B",8989.52,8989.52)
 
"BLD",10706,"KRN","B",8994,8994)
 
"BLD",10706,"QUES",0)
^9.62^^
"BLD",10706,"REQB",0)
^9.611^1^1
"BLD",10706,"REQB",1,0)
EAS*1.0*96^2
"BLD",10706,"REQB","B","EAS*1.0*96",1)
 
"MBREQ")
0
"PKG",552,-1)
1^1
"PKG",552,0)
ENROLLMENT APPLICATION SYSTEM^EAS^ENROLLMENT
"PKG",552,20,0)
^9.402P^1^1
"PKG",552,20,1,0)
2^^EASXDR
"PKG",552,20,1,1)
 
"PKG",552,20,"B",2,1)
 
"PKG",552,22,0)
^9.49I^1^1
"PKG",552,22,1,0)
1.0^3010315^3010419^66481
"PKG",552,22,1,"PAH",1,0)
152^3171025
"PKG",552,22,1,"PAH",1,1,0)
^^4^4^3171025
"PKG",552,22,1,"PAH",1,1,1,0)
This patch will enable the ORU~Z10 HL7 message to process when the 
"PKG",552,22,1,"PAH",1,1,2,0)
previous means test on file was a converted means test and the means test 
"PKG",552,22,1,"PAH",1,1,3,0)
on the ORU~Z10 message is for an income year after the converted means 
"PKG",552,22,1,"PAH",1,1,4,0)
test.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")
 
"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","EASCM")
0^1^B82492158^B80540897
"RTN","EASCM",1,0)
EASCM ;ALB/PJH - PROCESS INCOME TEST (Z10) TRANSMISSIONS ; 7/1/09 3:36pm
"RTN","EASCM",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**71,96,152**; 15-MAR-01;Build 5
"RTN","EASCM",3,0)
 ;
"RTN","EASCM",4,0)
 ;CLONED FROM IVMCM (ESR EVENT DRIVER)
"RTN","EASCM",5,0)
 ;
"RTN","EASCM",6,0)
ORF ; Handler for ORF type HL7 messages received from HEC
"RTN","EASCM",7,0)
 ;
"RTN","EASCM",8,0)
 ; Make sure POSTMASTER DUZ instead of DUZ of Person who
"RTN","EASCM",9,0)
 ; started Incoming Logical Link.
"RTN","EASCM",10,0)
 S DUZ=.5
"RTN","EASCM",11,0)
 N CNT,IVMRTN,SEGCNT
"RTN","EASCM",12,0)
 S IVMRTN="IVMCMX"  ;USE "IVMCMX" BECAUSE "IVMCM" ALREADY USED
"RTN","EASCM",13,0)
 K ^TMP($J,IVMRTN),DIC
"RTN","EASCM",14,0)
 S (DGMSGF,DGMTMSG)=1  ; HL7 rtn. Don't need DG interative messages.
"RTN","EASCM",15,0)
 S HLECH=HL("ECH"),HLQ=HL("Q"),HLMID=HL("MID")
"RTN","EASCM",16,0)
 K %,%H,%I D NOW^%DTC S HLDT=%
"RTN","EASCM",17,0)
 F SEGCNT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","EASCM",18,0)
 . S CNT=0
"RTN","EASCM",19,0)
 . S ^TMP($J,IVMRTN,SEGCNT,CNT)=HLNODE
"RTN","EASCM",20,0)
 . F  S CNT=$O(HLNODE(CNT)) Q:'CNT  D
"RTN","EASCM",21,0)
 . . S ^TMP($J,IVMRTN,SEGCNT,CNT)=HLNODE(CNT)
"RTN","EASCM",22,0)
 S HLDA=HLMTIEN
"RTN","EASCM",23,0)
 ;
"RTN","EASCM",24,0)
 N SEG,EVENT,MSGID
"RTN","EASCM",25,0)
 S:'$D(HLEVN) HLEVN=0
"RTN","EASCM",26,0)
 D NXTSEG^DGENUPL(HLDA,0,.SEG)
"RTN","EASCM",27,0)
 Q:(SEG("TYPE")'="MSH")  ;would not have reached here if this happened!
"RTN","EASCM",28,0)
 S EVENT=$P(SEG(9),$E(HLECH),2)
"RTN","EASCM",29,0)
 ;
"RTN","EASCM",30,0)
 ; INITIALIZE HL7 VARIABLES
"RTN","EASCM",31,0)
 S HLEID="EAS ESR "_$P($$SITE^VASITE,"^",3)_" ORF-"_EVENT_" SERVER"
"RTN","EASCM",32,0)
 S HLEID=$O(^ORD(101,"B",HLEID,0))
"RTN","EASCM",33,0)
 D INIT^HLFNC2(HLEID,.HL)
"RTN","EASCM",34,0)
 S HLEIDS=$O(^ORD(101,HLEID,775,"B",0))
"RTN","EASCM",35,0)
 ;
"RTN","EASCM",36,0)
 ; Handle means test signature ORF (Z06) event
"RTN","EASCM",37,0)
 I EVENT="Z06" D ORF^IVMPREC7
"RTN","EASCM",38,0)
 ;
"RTN","EASCM",39,0)
 ; Handle income test ORF (Z10) event
"RTN","EASCM",40,0)
 I EVENT="Z10" D Z10^IVMCM
"RTN","EASCM",41,0)
 ;
"RTN","EASCM",42,0)
 ; Handle enrollment/elig. ORF (Z11) event
"RTN","EASCM",43,0)
 I EVENT="Z11" D
"RTN","EASCM",44,0)
 .S MSGID=SEG(10)
"RTN","EASCM",45,0)
 .D ORFZ11^DGENUPL(HLDA,MSGID)
"RTN","EASCM",46,0)
 ;
"RTN","EASCM",47,0)
 K ^TMP($J,IVMRTN)
"RTN","EASCM",48,0)
 Q
"RTN","EASCM",49,0)
 ; Code below this line is not used - left in place for reference only
"RTN","EASCM",50,0)
 ; all Z10 processing performed within IVMCM
"RTN","EASCM",51,0)
Z10 ; Entry point for receipt of ORF~Z10 transmission
"RTN","EASCM",52,0)
 ; The Income Test (Z10) transmission has the following format:
"RTN","EASCM",53,0)
 ;
"RTN","EASCM",54,0)
 ;       BHS           ORF msgs do not include batch header or trailer.
"RTN","EASCM",55,0)
 ;       {MSH
"RTN","EASCM",56,0)
 ;        PID          They will include the sequence:  MSA 
"RTN","EASCM",57,0)
 ;        ZIC                                           QRD
"RTN","EASCM",58,0)
 ;        ZIR                                           QRF
"RTN","EASCM",59,0)
 ;        {ZDP         These segments will follow the MSH segment.
"RTN","EASCM",60,0)
 ;         ZIC
"RTN","EASCM",61,0)
 ;         ZIR
"RTN","EASCM",62,0)
 ;        }
"RTN","EASCM",63,0)
 ;        {ZDP}        Inactive Dependent Spouse Entries
"RTN","EASCM",64,0)
 ;        {ZDP}        Inactive Dependent Child Entries
"RTN","EASCM",65,0)
 ;        {ZMT
"RTN","EASCM",66,0)
 ;        }
"RTN","EASCM",67,0)
 ;        ZBT
"RTN","EASCM",68,0)
 ;       }
"RTN","EASCM",69,0)
 ;       BTS
"RTN","EASCM",70,0)
 ;
"RTN","EASCM",71,0)
 S IVMORF=1 ; set ORF msg flag
"RTN","EASCM",72,0)
 S (HLEVN,IVMCT,IVMERROR,IVMCNTR)=0 ; init vars
"RTN","EASCM",73,0)
 ;
"RTN","EASCM",74,0)
ORU ; Entry point for receipt of ORU~Z10 trans (called by IVMPREC2)
"RTN","EASCM",75,0)
 S IVMTYPE=5,IVMZ10F=1
"RTN","EASCM",76,0)
 ;
"RTN","EASCM",77,0)
 ; - loop through the msg in (#772 file), and process (PROC) msgs
"RTN","EASCM",78,0)
 S IVMDA=0 F  S IVMDA=$O(^TMP($J,IVMRTN,IVMDA)) Q:'IVMDA  S IVMSEG=$G(^(IVMDA,0)) I $E(IVMSEG,1,3)="MSH" D PROC Q:'IVMDA
"RTN","EASCM",79,0)
 ;
"RTN","EASCM",80,0)
 ; - if ORF msg flag, update the Query Tran Log and send ACK
"RTN","EASCM",81,0)
 I $G(IVMORF) D
"RTN","EASCM",82,0)
 .I $G(DFN),$D(IVMMCI) D
"RTN","EASCM",83,0)
 ..N IVMCR
"RTN","EASCM",84,0)
 ..S IVMCR=$P("1^2^3^7^5^6^4","^",IVMTYPE)  ;map reason to test type
"RTN","EASCM",85,0)
 ..D FIND^IVMCQ2(DFN,IVMMCI,HLDT,$S($D(HLERR):5,1:IVMCR),1)
"RTN","EASCM",86,0)
 .;D ACK^IVMPREC:'$D(HLERR)
"RTN","EASCM",87,0)
 .;N HLRESLTA,HLP
"RTN","EASCM",88,0)
 .;D GENACK^HLMA1(HLEID,HLMTIEN,HLEIDS,"LM",1,.HLRESLTA,"",.HLP)
"RTN","EASCM",89,0)
 ;
"RTN","EASCM",90,0)
 ; - if tests are uploaded, generate notification msg
"RTN","EASCM",91,0)
 I $D(^TMP($J,"IVMBULL")) D ^IVMCMB
"RTN","EASCM",92,0)
 ;
"RTN","EASCM",93,0)
ENQ ;
"RTN","EASCM",94,0)
 K IVMDA,IVMORF,IVMSEG,IVMFLGC,IVMTYPE,IVMMTIEN,IVMMTDT,IVMDGBT,IVMMCI
"RTN","EASCM",95,0)
 K ^TMP($J,"IVMCM"),^("IVMBULL"),DGMSGF,DGADDF,IVMCPAY,IVMBULL,DFN
"RTN","EASCM",96,0)
 K DGMTMSG,IVMZ10F
"RTN","EASCM",97,0)
 Q
"RTN","EASCM",98,0)
 ;
"RTN","EASCM",99,0)
PROC ; Process each HL7 message from (#772) file
"RTN","EASCM",100,0)
 ;
"RTN","EASCM",101,0)
 N IVMFUTR,TMSTAMP,SOURCE,NODE,HSDATE,IVMZ10,DGMTP,DGMTACT,DGMTI,DGMTA
"RTN","EASCM",102,0)
 S DGMTACT="ADD"
"RTN","EASCM",103,0)
 D PRIOR^DGMTEVT
"RTN","EASCM",104,0)
 S IVMZ10="UPLOAD IN PROGRESS"
"RTN","EASCM",105,0)
 S IVMFUTR=0 ;this flag will indicate whether or not a test with a future date is being uploaded
"RTN","EASCM",106,0)
 S IVMMTIEN=0
"RTN","EASCM",107,0)
 ;
"RTN","EASCM",108,0)
 S MSGID=$P(IVMSEG,HLFS,10) ; msg control id for ACK's
"RTN","EASCM",109,0)
 ; - check if DCD messaging is enabled
"RTN","EASCM",110,0)
 I '$$DCDON^IVMUPAR1() D PROB^IVMCMC("Facility has DCD messaging disabled") Q
"RTN","EASCM",111,0)
 ;
"RTN","EASCM",112,0)
 ; - check HL7 msg structure for errors
"RTN","EASCM",113,0)
 K HLERR,^TMP($J,"IVMCM")
"RTN","EASCM",114,0)
 D ^IVMCMC I $D(HLERR) K:HLERR="" HLERR Q
"RTN","EASCM",115,0)
 ;
"RTN","EASCM",116,0)
 ; Determine type of test/transmission
"RTN","EASCM",117,0)
 S IVMTYPE=0
"RTN","EASCM",118,0)
 ;
"RTN","EASCM",119,0)
 ; - was a means test sent?
"RTN","EASCM",120,0)
 I $P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,2) S IVMTYPE=1 ; MT trans
"RTN","EASCM",121,0)
 ;
"RTN","EASCM",122,0)
 ; - if MT and CT transmitted, error - pt can't have both unless
"RTN","EASCM",123,0)
 ;   one is a deletion, but HEC not currently handling that situation
"RTN","EASCM",124,0)
 I IVMTYPE,$P($G(^TMP($J,"IVMCM","ZMT2")),HLFS,2) D PROB^IVMCMC("Patient  can not have both a Means Test and Copay Test") Q
"RTN","EASCM",125,0)
 I $P($G(^TMP($J,"IVMCM","ZMT2")),HLFS,2) S IVMTYPE=2 ; CT trans
"RTN","EASCM",126,0)
 ;
"RTN","EASCM",127,0)
 ; - if no MT or CT or LTC then Income Screening
"RTN","EASCM",128,0)
 I 'IVMTYPE,'$P($G(^TMP($J,"IVMCM","ZMT4")),HLFS,2) S IVMTYPE=3 ; IS trans
"RTN","EASCM",129,0)
 ;
"RTN","EASCM",130,0)
 ;send an eligibility query if no eligibility code
"RTN","EASCM",131,0)
 I '$$ELIG^IVMCUF1(DFN),'$$PENDING^DGENQRY(DFN) I $$SEND^DGENQRY1(DFN)
"RTN","EASCM",132,0)
 ;
"RTN","EASCM",133,0)
 ; obtain locks used to sychronize upload with local income test options
"RTN","EASCM",134,0)
 D GETLOCKS^IVMCUPL(DFN)
"RTN","EASCM",135,0)
 ;
"RTN","EASCM",136,0)
 ;
"RTN","EASCM",137,0)
MT ; If transmission is a Means Test
"RTN","EASCM",138,0)
 N NODE0,RET,CODE,DATA,MTSIG,MTSIGDT
"RTN","EASCM",139,0)
 S HLQ=$G(HL("Q"))
"RTN","EASCM",140,0)
 S:HLQ="" HLQ=""""""
"RTN","EASCM",141,0)
 I IVMTYPE=1 D  I $D(HLERR) G PROCQ
"RTN","EASCM",142,0)
 .S IVMMTDT=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,2))
"RTN","EASCM",143,0)
 .S TMSTAMP=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,25))
"RTN","EASCM",144,0)
 .S HSDATE=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,24))
"RTN","EASCM",145,0)
 .S SOURCE=$P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,22)
"RTN","EASCM",146,0)
 .S MTSIG=$P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,27)
"RTN","EASCM",147,0)
 .S MTSIGDT=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,15))
"RTN","EASCM",148,0)
 .S IVMLAST=$$LST^DGMTU(DFN,$E(IVMMTDT,1,3)_1231,1)
"RTN","EASCM",149,0)
 .; Check that test is for same year *152
"RTN","EASCM",150,0)
 .I $P(IVMLAST,U,2),$E($P(IVMLAST,U,2),1,3)'=$E(IVMMTDT,1,3) S IVMLAST="" ;*152
"RTN","EASCM",151,0)
 .Q:$$UPDMTSIG^IVMCMF(+IVMLAST,TMSTAMP,MTSIG,MTSIGDT)
"RTN","EASCM",152,0)
 .I $$Z06MT^EASPTRN1(+IVMLAST) Q
"RTN","EASCM",153,0)
 .I '$$ELIG^IVMUFNC5(DFN) S ERRMSG="Means Test upload not appropriate for current patient"
"RTN","EASCM",154,0)
 .I $$AGE^IVMUFNC5(DT)>$$INCY^IVMUFNC5(IVMMTDT) D
"RTN","EASCM",155,0)
 ..N CATCZMT S CATCZMT=$G(^TMP($J,"IVMCM","ZMT1"))
"RTN","EASCM",156,0)
 ..S CATC=$$CATC^IVMUFNC5(CATCZMT)
"RTN","EASCM",157,0)
 ..I '+$G(CATC) S ERRMSG="Only Means Tests in current/previous income years are valid (not effective)"
"RTN","EASCM",158,0)
 .I $G(ERRMSG)'="" D PROB^IVMCMC(ERRMSG) K ERRMSG,CATC Q
"RTN","EASCM",159,0)
 .;
"RTN","EASCM",160,0)
 .; - perform edit checks and file MT
"RTN","EASCM",161,0)
 .D CHKDT
"RTN","EASCM",162,0)
 .;deletion indicator sent?
"RTN","EASCM",163,0)
 .I $P($G(^TMP($J,"IVMCM","ZMT1")),HLFS,3)=HLQ D  Q
"RTN","EASCM",164,0)
 ..D
"RTN","EASCM",165,0)
 ...;if there is a future test for that income year, delete that
"RTN","EASCM",166,0)
 ...N IEN,DATA,IVMPAT
"RTN","EASCM",167,0)
 ...S IEN=$$FUTURE(DFN,($E(IVMMTDT,1,3)-1),1,.IVMPAT)
"RTN","EASCM",168,0)
 ...I IEN S DATA(.06)="" I $$UPD^DGENDBS(301.5,IVMPAT,.DATA)
"RTN","EASCM",169,0)
 ...I IEN,$D(^DGMT(408.31,IEN,0)) D
"RTN","EASCM",170,0)
 ....S IVMMTIEN=IEN
"RTN","EASCM",171,0)
 ....S IVMFUTR=1
"RTN","EASCM",172,0)
 ...E  D
"RTN","EASCM",173,0)
 ....S IVMFUTR=0
"RTN","EASCM",174,0)
 ..Q:('IVMMTIEN)
"RTN","EASCM",175,0)
 ..S NODE0=$G(^DGMT(408.31,IVMMTIEN,0))
"RTN","EASCM",176,0)
 ..I $$EN^IVMCMD(IVMMTIEN) D
"RTN","EASCM",177,0)
 ...S RET=$$LST^DGMTU(DFN,DT,IVMTYPE)
"RTN","EASCM",178,0)
 ...S CODE=$S(($E($P(RET,"^",2),1,3)=$E(DT,1,3)):$P(RET,"^",4),1:"")
"RTN","EASCM",179,0)
 ...D ADD^IVMCMB(DFN,IVMTYPE,$S(IVMFUTR:"DELETE FUTR TEST",1:"DELETE PRMRY TEST"),+$G(NODE0),$$GETCODE^DGMTH($P(NODE0,"^",3)),CODE)
"RTN","EASCM",180,0)
 .;
"RTN","EASCM",181,0)
 .;check timestamp - if matches current primary test and hardship matches, then this is a duplicate and does not need to be uploaded
"RTN","EASCM",182,0)
 .I TMSTAMP D
"RTN","EASCM",183,0)
 ..S NODE=""
"RTN","EASCM",184,0)
 ..I IVMFUTR N IVMMTIEN S IVMMTIEN=$$FUTURE(DFN,($E(IVMMTDT,1,3)-1),1)
"RTN","EASCM",185,0)
 ..Q:'IVMMTIEN
"RTN","EASCM",186,0)
 ..S NODE=$G(^DGMT(408.31,IVMMTIEN,2))
"RTN","EASCM",187,0)
 .S NODE0=$G(^DGMT(408.31,IVMMTIEN,0))
"RTN","EASCM",188,0)
 .I TMSTAMP,TMSTAMP=$P(NODE,"^",2),IVMMTDT=$P(NODE0,"^"),SOURCE=$P(NODE,"^",5),(HSDATE=$P(NODE,"^")) Q
"RTN","EASCM",189,0)
 .;
"RTN","EASCM",190,0)
 .D DELTYPE^IVMCMD(DFN,IVMMTDT,2)
"RTN","EASCM",191,0)
 .D EN^IVMCM1
"RTN","EASCM",192,0)
 ;
"RTN","EASCM",193,0)
 ;
"RTN","EASCM",194,0)
CT ; If transmission is a Copay Test
"RTN","EASCM",195,0)
 N NODE0,RET,CODE,DATA
"RTN","EASCM",196,0)
 I IVMTYPE=2 D  I $D(HLERR) G PROCQ
"RTN","EASCM",197,0)
 .S IVMMTDT=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT2")),HLFS,2))
"RTN","EASCM",198,0)
 .S TMSTAMP=$$FMDATE^HLFNC($P($G(^TMP($J,"IVMCM","ZMT2")),HLFS,25))
"RTN","EASCM",199,0)
 .S SOURCE=$P($G(^TMP($J,"IVMCM","ZMT2")),HLFS,22)
"RTN","EASCM",200,0)
 .S IVMLAST=$$LST^DGMTU(DFN,$E(IVMMTDT,1,3)_1231,2)
"RTN","EASCM",201,0)
 .S IVMCPAY=$$RXST^IBARXEU(DFN)
"RTN","EASCM",202,0)
 .I $$AGE^IVMUFNC5(DT)>$$INCY^IVMUFNC5(IVMMTDT) D PROB^IVMCMC("Only Copay Tests in the current/previous income years are valid. (Not effective)") Q
"RTN","EASCM",203,0)
 .; - perform edit checks and file CT
"RTN","EASCM",204,0)
 .D CHKDT
"RTN","EASCM",205,0)
 .;deletion indicator sent?
"RTN","EASCM",206,0)
 .I $P($G(^TMP($J,"IVMCM","ZMT2")),HLFS,3)=HLQ D  Q
"RTN","EASCM",207,0)
 ..D
"RTN","EASCM",208,0)
 ...;if there is a future test for that income year, delete that
"RTN","EASCM",209,0)
 ...N IEN,DATA,IVMPAT
"RTN","EASCM",210,0)
 ...S IEN=$$FUTURE(DFN,($E(IVMMTDT,1,3)-1),2,.IVMPAT)
"RTN","EASCM",211,0)
 ...I IEN S DATA(.07)="" I $$UPD^DGENDBS(301.5,IVMPAT,.DATA)
"RTN","EASCM",212,0)
 ...I IEN,$D(^DGMT(408.31,IEN,0)) D
"RTN","EASCM",213,0)
 ....S IVMMTIEN=IEN
"RTN","EASCM",214,0)
 ....S IVMFUTR=1
"RTN","EASCM",215,0)
 ...E  D
"RTN","EASCM",216,0)
 ....S IVMFUTR=0
"RTN","EASCM",217,0)
 ..Q:('IVMMTIEN)
"RTN","EASCM",218,0)
 ..S NODE0=$G(^DGMT(408.31,IVMMTIEN,0))
"RTN","EASCM",219,0)
 ..I $$EN^IVMCMD(IVMMTIEN) D
"RTN","EASCM",220,0)
 ...S RET=$$LST^DGMTU(DFN,DT,IVMTYPE)
"RTN","EASCM",221,0)
 ...S CODE=$S(($E($P(RET,"^",2),1,3)=$E(DT,1,3)):$P(RET,"^",4),1:"")
"RTN","EASCM",222,0)
 ...D ADD^IVMCMB(DFN,IVMTYPE,$S(IVMFUTR:"DELETE FUTR TEST",1:"DELETE PRMRY TEST"),+$G(NODE0),$$GETCODE^DGMTH($P(NODE0,"^",3)),CODE)
"RTN","EASCM",223,0)
 .;
"RTN","EASCM",224,0)
 .;check timestamp - if matches current primary test, then this is a duplicate and does not need to be uploaded
"RTN","EASCM",225,0)
 .I TMSTAMP D
"RTN","EASCM",226,0)
 ..S NODE=""
"RTN","EASCM",227,0)
 ..I IVMFUTR N IVMMTIEN S IVMMTIEN=$$FUTURE(DFN,($E(IVMMTDT,1,3)-1),2)
"RTN","EASCM",228,0)
 ..Q:'IVMMTIEN
"RTN","EASCM",229,0)
 ..S NODE=$G(^DGMT(408.31,IVMMTIEN,2))
"RTN","EASCM",230,0)
 .S NODE0=$G(^DGMT(408.31,IVMMTIEN,0))
"RTN","EASCM",231,0)
 .I TMSTAMP,TMSTAMP=$P(NODE,"^",2),IVMMTDT=$P(NODE0,"^"),SOURCE=$P(NODE,"^",5) Q
"RTN","EASCM",232,0)
 .;
"RTN","EASCM",233,0)
 .D DELTYPE^IVMCMD(DFN,IVMMTDT,1)
"RTN","EASCM",234,0)
 .D EN^IVMCM1
"RTN","EASCM",235,0)
 ;
"RTN","EASCM",236,0)
IS ; - If transmission is income screening info only then do not process
"RTN","EASCM",237,0)
 ; - outside of the scope of MTS
"RTN","EASCM",238,0)
 I IVMTYPE=3 S IVMMTDT=0
"RTN","EASCM",239,0)
 ;
"RTN","EASCM",240,0)
LTC ; If transmission contains a Long Term Care Test (TYPE 4 TEST)
"RTN","EASCM",241,0)
 I $P($G(^TMP($J,"IVMCM","ZMT4")),HLFS,2) D LTC^IVMCM1
"RTN","EASCM",242,0)
 ;
"RTN","EASCM",243,0)
PROCQ ;
"RTN","EASCM",244,0)
 ; release locks used to sychronize upload with local income test options
"RTN","EASCM",245,0)
 D RELLOCKS^IVMCUPL(DFN)
"RTN","EASCM",246,0)
 Q
"RTN","EASCM",247,0)
 ;
"RTN","EASCM",248,0)
CHKDT ; check date of income test being uploaded
"RTN","EASCM",249,0)
 ; Is it a future date?  If so, set IVMFUTR=1
"RTN","EASCM",250,0)
 ;
"RTN","EASCM",251,0)
 ; IVMMTIEN is the IEN of current primary test for the year
"RTN","EASCM",252,0)
 ;
"RTN","EASCM",253,0)
 I $E($P(IVMLAST,"^",2),1,3)=$E(IVMMTDT,1,3) S IVMMTIEN=+IVMLAST
"RTN","EASCM",254,0)
 I IVMMTDT>DT S IVMFUTR=1
"RTN","EASCM",255,0)
 Q
"RTN","EASCM",256,0)
FUTURE(DFN,YEAR,TYPE,IVMPAT) ;
"RTN","EASCM",257,0)
 ;Returns the ien of the future test, if there is one
"RTN","EASCM",258,0)
 ;Inputs:  DFN
"RTN","EASCM",259,0)
 ;         YEAR  - income year
"RTN","EASCM",260,0)
 ;         TYPE - type of test
"RTN","EASCM",261,0)
 ;Output:
"RTN","EASCM",262,0)
 ;  function value - ien of future means test, if there is one, "" otherwise
"RTN","EASCM",263,0)
 ;  IVMPAT - Pointer to the IVM Patient file for the income year if there is an entry (pass by reference)
"RTN","EASCM",264,0)
 ;
"RTN","EASCM",265,0)
 N RET
"RTN","EASCM",266,0)
 S RET=""
"RTN","EASCM",267,0)
 S IVMPAT=$$FIND^IVMPLOG(DFN,YEAR)
"RTN","EASCM",268,0)
 I IVMPAT S RET=$P($G(^IVM(301.5,IVMPAT,0)),"^",$S(TYPE=1:6,1:7))
"RTN","EASCM",269,0)
 Q RET
"VER")
8.0^22.2
"BLD",10706,6)
^129
**END**
**END**

