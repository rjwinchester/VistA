Released PRC*5.1*205 SEQ #180
Extracted from mail message
**KIDS**:PRC*5.1*205^

**INSTALL NAME**
PRC*5.1*205
"BLD",10944,0)
PRC*5.1*205^IFCAP^0^3180227^y
"BLD",10944,1,0)
^^3^3^3180222^
"BLD",10944,1,1,0)
This patch addresses an issue with the Distribution Order Processing
"BLD",10944,1,2,0)
[PRCP DIST ORDER PROCESSING] option when an item quantity is null or 0 
"BLD",10944,1,3,0)
which leads to an undefined error.
"BLD",10944,4,0)
^9.64PA^^
"BLD",10944,6.3)
4
"BLD",10944,"KRN",0)
^9.67PA^779.2^20
"BLD",10944,"KRN",.4,0)
.4
"BLD",10944,"KRN",.401,0)
.401
"BLD",10944,"KRN",.402,0)
.402
"BLD",10944,"KRN",.403,0)
.403
"BLD",10944,"KRN",.5,0)
.5
"BLD",10944,"KRN",.84,0)
.84
"BLD",10944,"KRN",3.6,0)
3.6
"BLD",10944,"KRN",3.8,0)
3.8
"BLD",10944,"KRN",9.2,0)
9.2
"BLD",10944,"KRN",9.8,0)
9.8
"BLD",10944,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",10944,"KRN",9.8,"NM",1,0)
PRCPOPER^^0^B12692800
"BLD",10944,"KRN",9.8,"NM","B","PRCPOPER",1)

"BLD",10944,"KRN",19,0)
19
"BLD",10944,"KRN",19.1,0)
19.1
"BLD",10944,"KRN",101,0)
101
"BLD",10944,"KRN",409.61,0)
409.61
"BLD",10944,"KRN",771,0)
771
"BLD",10944,"KRN",779.2,0)
779.2
"BLD",10944,"KRN",870,0)
870
"BLD",10944,"KRN",8989.51,0)
8989.51
"BLD",10944,"KRN",8989.52,0)
8989.52
"BLD",10944,"KRN",8994,0)
8994
"BLD",10944,"KRN","B",.4,.4)

"BLD",10944,"KRN","B",.401,.401)

"BLD",10944,"KRN","B",.402,.402)

"BLD",10944,"KRN","B",.403,.403)

"BLD",10944,"KRN","B",.5,.5)

"BLD",10944,"KRN","B",.84,.84)

"BLD",10944,"KRN","B",3.6,3.6)

"BLD",10944,"KRN","B",3.8,3.8)

"BLD",10944,"KRN","B",9.2,9.2)

"BLD",10944,"KRN","B",9.8,9.8)

"BLD",10944,"KRN","B",19,19)

"BLD",10944,"KRN","B",19.1,19.1)

"BLD",10944,"KRN","B",101,101)

"BLD",10944,"KRN","B",409.61,409.61)

"BLD",10944,"KRN","B",771,771)

"BLD",10944,"KRN","B",779.2,779.2)

"BLD",10944,"KRN","B",870,870)

"BLD",10944,"KRN","B",8989.51,8989.51)

"BLD",10944,"KRN","B",8989.52,8989.52)

"BLD",10944,"KRN","B",8994,8994)

"BLD",10944,"QDEF")
^^^^^^^^^^YES
"BLD",10944,"QUES",0)
^9.62^^
"BLD",10944,"REQB",0)
^9.611^^
"MBREQ")
0
"PKG",455,-1)
1^1
"PKG",455,0)
IFCAP^PRC^IFCAP System Files
"PKG",455,20,0)
^9.402P^^
"PKG",455,22,0)
^9.49I^1^1
"PKG",455,22,1,0)
5.1
"PKG",455,22,1,"PAH",1,0)
205^3180227
"PKG",455,22,1,"PAH",1,1,0)
^^3^3^3180227
"PKG",455,22,1,"PAH",1,1,1,0)
This patch addresses an issue with the Distribution Order Processing
"PKG",455,22,1,"PAH",1,1,2,0)
[PRCP DIST ORDER PROCESSING] option when an item quantity is null or 0 
"PKG",455,22,1,"PAH",1,1,3,0)
which leads to an undefined error.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","PRCPOPER")
0^1^B12692800^B12002742
"RTN","PRCPOPER",1,0)
PRCPOPER ;WISC/RFJ/DGL - distribution order error report;3/17/00 3:23pm
"RTN","PRCPOPER",2,0)
V ;;5.1;IFCAP;**205**;Oct 20, 2000;Build 4
"RTN","PRCPOPER",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","PRCPOPER",4,0)
 Q
"RTN","PRCPOPER",5,0)
 ;
"RTN","PRCPOPER",6,0)
 ;
"RTN","PRCPOPER",7,0)
CHECKORD ;  check order for errors (called from prcpopl protocol)
"RTN","PRCPOPER",8,0)
 D VARIABLE^PRCPOPU
"RTN","PRCPOPER",9,0)
 D EN^VALM("PRCP DIST ORDER CHECK ITEMS")
"RTN","PRCPOPER",10,0)
 D INIT^PRCPOPL
"RTN","PRCPOPER",11,0)
 S VALMBCK="R"
"RTN","PRCPOPER",12,0)
 Q
"RTN","PRCPOPER",13,0)
 ;
"RTN","PRCPOPER",14,0)
 ;
"RTN","PRCPOPER",15,0)
INIT       ;  check order for errors and build array
"RTN","PRCPOPER",16,0)
 N DATA,ERROR,ITEMDA,QTYORDER,STATUS,QTYOH
"RTN","PRCPOPER",17,0)
 K ^TMP($J,"PRCPOPER")
"RTN","PRCPOPER",18,0)
 S VALMCNT=0
"RTN","PRCPOPER",19,0)
 I 'PRCPPRIM D SET^PRCPOPL("PRIMARY INVENTORY SOURCE MISSING.  PLEASE RE-EDIT THE ORDER FIRST.") Q
"RTN","PRCPOPER",20,0)
 I 'PRCPSECO D SET^PRCPOPL("SECONDARY INVENTORY POINT IS MISSING, PLEASE RE-EDIT THE ORDER FIRST.") Q
"RTN","PRCPOPER",21,0)
 ;
"RTN","PRCPOPER",22,0)
 S STATUS=$P(^PRCP(445.3,ORDERDA,0),"^",6)
"RTN","PRCPOPER",23,0)
 ;  check items on order
"RTN","PRCPOPER",24,0)
 S ITEMDA=0 F  S ITEMDA=$O(^PRCP(445.3,ORDERDA,1,ITEMDA)) Q:'ITEMDA  S DATA=^(ITEMDA,0) D
"RTN","PRCPOPER",25,0)
 .   S QTYORDER=$P(DATA,"^",2)
"RTN","PRCPOPER",26,0)
 .   I 'QTYORDER D BLDARRAY^PRCPOPL(PRCPPRIM,PRCPSECO,ITEMDA,QTYORDER,STATUS),SET^PRCPOPL("     ** THERE IS NO QUANTITY ORDERED, ITEM SHOULD BE DELETED FROM ORDER **") Q
"RTN","PRCPOPER",27,0)
 .   S ERROR=$$ITEMCHK(PRCPPRIM,PRCPSECO,ITEMDA)
"RTN","PRCPOPER",28,0)
 .   S X=$G(^PRCP(445,PRCPPRIM,1,ITEMDA,0))
"RTN","PRCPOPER",29,0)
 .   I X]"" D
"RTN","PRCPOPER",30,0)
 .   .   S QTYOH=+$P(X,"^",7)
"RTN","PRCPOPER",31,0)
 .   .   I PRCP("DPTYPE")'="S",QTYOH<QTYORDER S ERROR=ERROR_$S(ERROR="":"",1:"^")_"     ** QTY ORDERED ("_QTYORDER_") IS MORE THAN PRIMARY QTY ON HAND ("_QTYOH_") **"
"RTN","PRCPOPER",32,0)
 .   .   Q
"RTN","PRCPOPER",33,0)
 .   I ERROR="" Q
"RTN","PRCPOPER",34,0)
 .   D BLDARRAY^PRCPOPL(PRCPPRIM,PRCPSECO,ITEMDA,QTYORDER,STATUS)
"RTN","PRCPOPER",35,0)
 .   F %=1:1 Q:$P(ERROR,"^",%,99)=""  I $P(ERROR,"^",%)'="" D SET^PRCPOPL($P(ERROR,"^",%))
"RTN","PRCPOPER",36,0)
 ;
"RTN","PRCPOPER",37,0)
 I VALMCNT=0 S VALMQUIT=1,VALMSG="* * * NO ERRORS FOUND * * *"
"RTN","PRCPOPER",38,0)
 Q
"RTN","PRCPOPER",39,0)
 ;
"RTN","PRCPOPER",40,0)
 ;
"RTN","PRCPOPER",41,0)
EXIT ;  exit and clean up
"RTN","PRCPOPER",42,0)
 K ^TMP($J,"PRCPOPER")
"RTN","PRCPOPER",43,0)
 Q
"RTN","PRCPOPER",44,0)
 ;
"RTN","PRCPOPER",45,0)
 ;
"RTN","PRCPOPER",46,0)
EEITEMS ;  called from protocol file to enter/edit invpt items
"RTN","PRCPOPER",47,0)
 D
"RTN","PRCPOPER",48,0)
 .   N PRC,PRCP
"RTN","PRCPOPER",49,0)
 .   S PRCP("DPTYPE")="PS"
"RTN","PRCPOPER",50,0)
 .   D ^PRCPEILM
"RTN","PRCPOPER",51,0)
 D INIT
"RTN","PRCPOPER",52,0)
 S VALMBCK="R"
"RTN","PRCPOPER",53,0)
 I $G(VALMQUIT) K VALMBCK
"RTN","PRCPOPER",54,0)
 Q
"RTN","PRCPOPER",55,0)
 ;
"RTN","PRCPOPER",56,0)
 ;
"RTN","PRCPOPER",57,0)
ITEMCHK(PRCPPRIM,PRCPSECO,ITEMDA) ;  check items
"RTN","PRCPOPER",58,0)
 ;  returns errors delimited by ^ or ""
"RTN","PRCPOPER",59,0)
 N ITEMDATA,ERROR,VDATA
"RTN","PRCPOPER",60,0)
 S ERROR=""
"RTN","PRCPOPER",61,0)
 S ITEMDATA=$G(^PRCP(445,PRCPPRIM,1,ITEMDA,0))
"RTN","PRCPOPER",62,0)
 I ITEMDATA="" S ERROR="    ** ITEM NOT STORED IN PRIMARY INVENTORY POINT ** ^     Either add item to primary or delete item from order."
"RTN","PRCPOPER",63,0)
 I '$D(^PRCP(445,PRCPSECO,1,ITEMDA,0)) S ERROR=ERROR_$S(ERROR="":"",1:"^")_"    ** ITEM NOT STORED IN SECONDARY INVENTORY POINT **"
"RTN","PRCPOPER",64,0)
 ;
"RTN","PRCPOPER",65,0)
 S VDATA=$$GETVEN^PRCPUVEN(PRCPSECO,ITEMDA,PRCPPRIM_";PRCP(445,",1)
"RTN","PRCPOPER",66,0)
 I 'VDATA S ERROR=ERROR_$S(ERROR="":"",1:"^")_"    ** PRIMARY INVENTORY POINT IS NOT LISTED AS A SOURCE **"
"RTN","PRCPOPER",67,0)
 I $P(VDATA,"^",2,3)'=($P(ITEMDATA,"^",5)_"^"_$P(ITEMDATA,"^",14)) S ERROR=ERROR_$S(ERROR="":"",1:"^")_"    ** SECONDARY UNIT PER RECEIPT DOES NOT EQUAL PRIMARY UNIT PER ISSUE **"
"RTN","PRCPOPER",68,0)
 Q ERROR
"VER")
8.0^22.2
"BLD",10944,6)
^180
**END**
**END**

