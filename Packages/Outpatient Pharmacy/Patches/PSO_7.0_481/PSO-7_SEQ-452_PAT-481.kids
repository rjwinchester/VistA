Released PSO*7*481 SEQ #452
Extracted from mail message
**KIDS**:PSO*7.0*481^

**INSTALL NAME**
PSO*7.0*481
"BLD",11084,0)
PSO*7.0*481^OUTPATIENT PHARMACY^0^3190124^y
"BLD",11084,1,0)
^^26^26^3180515^
"BLD",11084,1,1,0)
This patch will upload "new" providers for a site into the New Person 
"BLD",11084,1,2,0)
(#200) file.  A "new" provider is defined as a provider whose National 
"BLD",11084,1,3,0)
Provider Identifier (NPI) is not on file yet at a site.
"BLD",11084,1,4,0)
 
"BLD",11084,1,5,0)
On August 7, 2014, the President signed into law PL 113-146, the Veterans 
"BLD",11084,1,6,0)
Access, Choice, and Accountability Act of 2014 (VACAA). The law offers an 
"BLD",11084,1,7,0)
additional authority for VHA to expand current capacity and ensure that 
"BLD",11084,1,8,0)
Veterans have timely access to high-quality care. 
"BLD",11084,1,9,0)
 
"BLD",11084,1,10,0)
The law creates a new paradigm for providing health care, set forth in the
"BLD",11084,1,11,0)
Veterans Choice program provisions within Title I Section 101 of VACAA. VA
"BLD",11084,1,12,0)
is utilizing a Contractor to provide health care and third party
"BLD",11084,1,13,0)
administrative (TPA) services set forth through VACAA Section 101. 
"BLD",11084,1,14,0)
 
"BLD",11084,1,15,0)
As a result of this law, VA must upload a list of non-VA medical care
"BLD",11084,1,16,0)
providers into the VistA system in order to maintain an accurate and
"BLD",11084,1,17,0)
updated list of non-VA providers in the Choice program.  Refer to the
"BLD",11084,1,18,0)
Non-VA Care Provider SharePoint site for further information:
"BLD",11084,1,19,0)
https://vaww.dwh.cdw.portal.domain.ext/sites/Non-VA%20Care%20PC3%20and%20Choic
"BLD",11084,1,20,0)
e/SitePages/Home.aspx.
"BLD",11084,1,21,0)
 
"BLD",11084,1,22,0)
CA-SDM Ticket: I12935021FY17
"BLD",11084,1,23,0)
 
"BLD",11084,1,24,0)
NOTE: The providers loaded by this patch are not eligible to be selected 
"BLD",11084,1,25,0)
as ordering providers in CPRS. Use is restricted to the option "PSO LM 
"BLD",11084,1,26,0)
BACKDOOR ORDERS" ("Patient Prescription Processing").
"BLD",11084,4,0)
^9.64PA^^
"BLD",11084,6.3)
31
"BLD",11084,"ABPKG")
n
"BLD",11084,"KRN",0)
^9.67PA^779.2^20
"BLD",11084,"KRN",.4,0)
.4
"BLD",11084,"KRN",.401,0)
.401
"BLD",11084,"KRN",.402,0)
.402
"BLD",11084,"KRN",.403,0)
.403
"BLD",11084,"KRN",.5,0)
.5
"BLD",11084,"KRN",.84,0)
.84
"BLD",11084,"KRN",3.6,0)
3.6
"BLD",11084,"KRN",3.8,0)
3.8
"BLD",11084,"KRN",9.2,0)
9.2
"BLD",11084,"KRN",9.8,0)
9.8
"BLD",11084,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",11084,"KRN",9.8,"NM",1,0)
PSONVAP2^^0^B189632199
"BLD",11084,"KRN",9.8,"NM",2,0)
PSONVAP3^^0^B46908515
"BLD",11084,"KRN",9.8,"NM",3,0)
PSONVAP4^^0^B14650870
"BLD",11084,"KRN",9.8,"NM","B","PSONVAP2",1)

"BLD",11084,"KRN",9.8,"NM","B","PSONVAP3",2)

"BLD",11084,"KRN",9.8,"NM","B","PSONVAP4",3)

"BLD",11084,"KRN",19,0)
19
"BLD",11084,"KRN",19,"NM",0)
^9.68A^6^3
"BLD",11084,"KRN",19,"NM",4,0)
PSO MAINTENANCE^^2
"BLD",11084,"KRN",19,"NM",5,0)
PSO NON-VA PROVIDER IMPORT^^0
"BLD",11084,"KRN",19,"NM",6,0)
PSO NON-VA PROVIDER INACTIVATE^^0
"BLD",11084,"KRN",19,"NM","B","PSO MAINTENANCE",4)

"BLD",11084,"KRN",19,"NM","B","PSO NON-VA PROVIDER IMPORT",5)

"BLD",11084,"KRN",19,"NM","B","PSO NON-VA PROVIDER INACTIVATE",6)

"BLD",11084,"KRN",19.1,0)
19.1
"BLD",11084,"KRN",101,0)
101
"BLD",11084,"KRN",409.61,0)
409.61
"BLD",11084,"KRN",771,0)
771
"BLD",11084,"KRN",779.2,0)
779.2
"BLD",11084,"KRN",870,0)
870
"BLD",11084,"KRN",8989.51,0)
8989.51
"BLD",11084,"KRN",8989.52,0)
8989.52
"BLD",11084,"KRN",8994,0)
8994
"BLD",11084,"KRN","B",.4,.4)

"BLD",11084,"KRN","B",.401,.401)

"BLD",11084,"KRN","B",.402,.402)

"BLD",11084,"KRN","B",.403,.403)

"BLD",11084,"KRN","B",.5,.5)

"BLD",11084,"KRN","B",.84,.84)

"BLD",11084,"KRN","B",3.6,3.6)

"BLD",11084,"KRN","B",3.8,3.8)

"BLD",11084,"KRN","B",9.2,9.2)

"BLD",11084,"KRN","B",9.8,9.8)

"BLD",11084,"KRN","B",19,19)

"BLD",11084,"KRN","B",19.1,19.1)

"BLD",11084,"KRN","B",101,101)

"BLD",11084,"KRN","B",409.61,409.61)

"BLD",11084,"KRN","B",771,771)

"BLD",11084,"KRN","B",779.2,779.2)

"BLD",11084,"KRN","B",870,870)

"BLD",11084,"KRN","B",8989.51,8989.51)

"BLD",11084,"KRN","B",8989.52,8989.52)

"BLD",11084,"KRN","B",8994,8994)

"BLD",11084,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",11084,"QUES",0)
^9.62^^0
"BLD",11084,"REQB",0)
^9.611^1^1
"BLD",11084,"REQB",1,0)
XU*8.0*630^2
"BLD",11084,"REQB","B","XU*8.0*630",1)

"KRN",19,6897,-1)
2^4
"KRN",19,6897,0)
PSO MAINTENANCE^Maintenance (Outpatient Pharmacy)^^M^66481^^^^^^^206^^1^1
"KRN",19,6897,10,0)
^19.01IP^31^22
"KRN",19,6897,10,31,0)
14334
"KRN",19,6897,10,31,"^")
PSO NON-VA PROVIDER IMPORT
"KRN",19,6897,"U")
MAINTENANCE (OUTPATIENT PHARMA
"KRN",19,14334,-1)
0^5
"KRN",19,14334,0)
PSO NON-VA PROVIDER IMPORT^Non-VA Provider Import^^R^^^^^^^y^OUTPATIENT PHARMACY
"KRN",19,14334,1,0)
^^18^18^3180515^
"KRN",19,14334,1,1,0)
This option is used to import Non-VA provider information from Excel 
"KRN",19,14334,1,2,0)
spreadsheets and file the information into the NEW PERSON (#200) file.
"KRN",19,14334,1,3,0)
 
"KRN",19,14334,1,4,0)
The following information must be known prior to invoking this option:
"KRN",19,14334,1,5,0)
1. Directory name which contains the file(s)
"KRN",19,14334,1,6,0)
2. Exact filename(s)
"KRN",19,14334,1,7,0)
 
"KRN",19,14334,1,8,0)
This option may be invoked multiple times if multiple files should be 
"KRN",19,14334,1,9,0)
imported for your site.  The files are separated out by VISN and state.  
"KRN",19,14334,1,10,0)
Your site might need to import information from more than one site for 
"KRN",19,14334,1,11,0)
your VISN.
"KRN",19,14334,1,12,0)
 
"KRN",19,14334,1,13,0)
NOTE: It is highly recommended to pre-define the titles of "HN NON-VA 
"KRN",19,14334,1,14,0)
PROVIDER" and "TW NON-VA PROVIDER" in the TITLE (#3.1) file.  Otherwise, 
"KRN",19,14334,1,15,0)
the providers loaded by this patch will have no titles viewable in CPRS.
"KRN",19,14334,1,16,0)
 
"KRN",19,14334,1,17,0)
(The providers loaded by this patch may be selected as encounter 
"KRN",19,14334,1,18,0)
providers in CPRS, but not as ordering providers.)
"KRN",19,14334,10.1)
Non-VA Provider Import
"KRN",19,14334,25)
EN^PSONVAP2
"KRN",19,14334,"U")
NON-VA PROVIDER IMPORT
"KRN",19,14335,-1)
0^6
"KRN",19,14335,0)
PSO NON-VA PROVIDER INACTIVATE^Non-VA Provider Inactivate^^R^^XUPROG^^^^^^OUTPATIENT PHARMACY
"KRN",19,14335,1,0)
^^3^3^3180628^
"KRN",19,14335,1,1,0)
This option is to be used only when Non-VA providers which were imported 
"KRN",19,14335,1,2,0)
by option "PSO NON-VA PROVIDER IMPORT" need to be inactivated due to
"KRN",19,14335,1,3,0)
corrupt files or other issues.
"KRN",19,14335,25)
EN^PSONVAP4
"KRN",19,14335,"U")
NON-VA PROVIDER INACTIVATE
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",206,-1)
1^1
"PKG",206,0)
OUTPATIENT PHARMACY^PSO^OUTPATIENT LABELS, PROFILE, INVENTORY, PRESCRIPTIONS
"PKG",206,22,0)
^9.49I^1^1
"PKG",206,22,1,0)
7.0^3021122^3021202^66481
"PKG",206,22,1,"PAH",1,0)
481^3190124
"PKG",206,22,1,"PAH",1,1,0)
^^26^26^3190124
"PKG",206,22,1,"PAH",1,1,1,0)
This patch will upload "new" providers for a site into the New Person 
"PKG",206,22,1,"PAH",1,1,2,0)
(#200) file.  A "new" provider is defined as a provider whose National 
"PKG",206,22,1,"PAH",1,1,3,0)
Provider Identifier (NPI) is not on file yet at a site.
"PKG",206,22,1,"PAH",1,1,4,0)
 
"PKG",206,22,1,"PAH",1,1,5,0)
On August 7, 2014, the President signed into law PL 113-146, the Veterans 
"PKG",206,22,1,"PAH",1,1,6,0)
Access, Choice, and Accountability Act of 2014 (VACAA). The law offers an 
"PKG",206,22,1,"PAH",1,1,7,0)
additional authority for VHA to expand current capacity and ensure that 
"PKG",206,22,1,"PAH",1,1,8,0)
Veterans have timely access to high-quality care. 
"PKG",206,22,1,"PAH",1,1,9,0)
 
"PKG",206,22,1,"PAH",1,1,10,0)
The law creates a new paradigm for providing health care, set forth in the
"PKG",206,22,1,"PAH",1,1,11,0)
Veterans Choice program provisions within Title I Section 101 of VACAA. VA
"PKG",206,22,1,"PAH",1,1,12,0)
is utilizing a Contractor to provide health care and third party
"PKG",206,22,1,"PAH",1,1,13,0)
administrative (TPA) services set forth through VACAA Section 101. 
"PKG",206,22,1,"PAH",1,1,14,0)
 
"PKG",206,22,1,"PAH",1,1,15,0)
As a result of this law, VA must upload a list of non-VA medical care
"PKG",206,22,1,"PAH",1,1,16,0)
providers into the VistA system in order to maintain an accurate and
"PKG",206,22,1,"PAH",1,1,17,0)
updated list of non-VA providers in the Choice program.  Refer to the
"PKG",206,22,1,"PAH",1,1,18,0)
Non-VA Care Provider SharePoint site for further information:
"PKG",206,22,1,"PAH",1,1,19,0)
https://vaww.dwh.cdw.portal.domain.ext/sites/Non-VA%20Care%20PC3%20and%20Choic
"PKG",206,22,1,"PAH",1,1,20,0)
e/SitePages/Home.aspx.
"PKG",206,22,1,"PAH",1,1,21,0)
 
"PKG",206,22,1,"PAH",1,1,22,0)
CA-SDM Ticket: I12935021FY17
"PKG",206,22,1,"PAH",1,1,23,0)
 
"PKG",206,22,1,"PAH",1,1,24,0)
NOTE: The providers loaded by this patch are not eligible to be selected 
"PKG",206,22,1,"PAH",1,1,25,0)
as ordering providers in CPRS. Use is restricted to the option "PSO LM 
"PKG",206,22,1,"PAH",1,1,26,0)
BACKDOOR ORDERS" ("Patient Prescription Processing").
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","PSONVAP2")
0^1^B189632199^n/a
"RTN","PSONVAP2",1,0)
PSONVAP2 ;HPS/DSK - Non-VA Provider Updates ;May 16, 2018@16:00
"RTN","PSONVAP2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**481**;DEC 1997;Build 31
"RTN","PSONVAP2",3,0)
 ;
"RTN","PSONVAP2",4,0)
 ;Note to KERNEL developers:
"RTN","PSONVAP2",5,0)
 ; This routine was written with patch XU*8*659, but not distributed as part of the patch.
"RTN","PSONVAP2",6,0)
 ; It is being given to VistA Maintenance contractors to be renamed as a PSO routine
"RTN","PSONVAP2",7,0)
 ; to run with monthly updates for VACAA data maintenance.
"RTN","PSONVAP2",8,0)
 ;
"RTN","PSONVAP2",9,0)
 ;  Post Installation Routine for Outpatient Pharmacy VACAA non-VA provider updates
"RTN","PSONVAP2",10,0)
 ;  EXTERNAL REFERENCES
"RTN","PSONVAP2",11,0)
 ;    $$PROD^XUPROD                         - IA #4440  (Supported)
"RTN","PSONVAP2",12,0)
 ;    $$AESDECR^XUSHSH                      - IA #6189  (Supported)
"RTN","PSONVAP2",13,0)
 ;    $$B64DECD^XUSHSH                      - IA #6189  (Supported)
"RTN","PSONVAP2",14,0)
 ;    $$VACAA^XUESSO4                       - IA #6230  (Private)
"RTN","PSONVAP2",15,0)
 ;    PARENT^XUAF4                          - IA #2171  (Supported)
"RTN","PSONVAP2",16,0)
 ;    FTG^%ZISH                             - IA #2320  (Supported)
"RTN","PSONVAP2",17,0)
 ;    $$ADDNPI^XUSNPI                       - IA #6937  (Private)
"RTN","PSONVAP2",18,0)
 ;    $$QI^XUSNPI                           - IA #4532  (Controlled Subscription)
"RTN","PSONVAP2",19,0)
 ;    NEW PERSON FILE                       - IA #10060 (Supported)
"RTN","PSONVAP2",20,0)
 ;    NEW PERSON PHARMACY FIELDS            - IA #6889  (Private)
"RTN","PSONVAP2",21,0)
 ;    SERVICE/SECTION FILE                  - IA #2250  (Private)
"RTN","PSONVAP2",22,0)
 ;    %DT                                   - IA #10003 (Supported)
"RTN","PSONVAP2",23,0)
 ;
"RTN","PSONVAP2",24,0)
 Q
"RTN","PSONVAP2",25,0)
 ;
"RTN","PSONVAP2",26,0)
EN ;load non-VA providers into file 200
"RTN","PSONVAP2",27,0)
 N AUTHCODE,PSOVISN,PSOIMPORT,PSOPROD,PSOFILE
"RTN","PSONVAP2",28,0)
 N PSODT,PSOTIM,PSOQUIT,PSOJOB,PSOSERV
"RTN","PSONVAP2",29,0)
 S PSOPROD=$$PROD^XUPROD
"RTN","PSONVAP2",30,0)
 I 'PSOPROD D  Q
"RTN","PSONVAP2",31,0)
 . W !!,"This option may only be invoked in a production environment."
"RTN","PSONVAP2",32,0)
 . W !,"This is a test environment."
"RTN","PSONVAP2",33,0)
 . W !!,"If you are testing, the variable PSOPROD must be manipulated in debug mode."
"RTN","PSONVAP2",34,0)
 ; 
"RTN","PSONVAP2",35,0)
 I PSOPROD,$$PROD^XUPROD=0 D
"RTN","PSONVAP2",36,0)
 . W !!,"*** This is a test environment but the Prod/Test environment indicator "
"RTN","PSONVAP2",37,0)
 . W !,"*** indicates this is a production environment for testing purposes."
"RTN","PSONVAP2",38,0)
 . W !!,"*** Make sure you have the routine ZKESSO4 which is applicable for your site"
"RTN","PSONVAP2",39,0)
 . W !,"*** or test environment.",!!
"RTN","PSONVAP2",40,0)
 . S DIR(0)="E",DIR("A")="Press Return to continue" D ^DIR
"RTN","PSONVAP2",41,0)
 ;
"RTN","PSONVAP2",42,0)
 S PSOQUIT=0
"RTN","PSONVAP2",43,0)
 D CONSIDER
"RTN","PSONVAP2",44,0)
 Q:PSOQUIT
"RTN","PSONVAP2",45,0)
 D INIT
"RTN","PSONVAP2",46,0)
 ;notifying user to only attempt file load for the site's VISN
"RTN","PSONVAP2",47,0)
 W !!,"Your site VISN is: ",PSOVISN,"."
"RTN","PSONVAP2",48,0)
 W !,"Only providers for your VISN may be imported."
"RTN","PSONVAP2",49,0)
 S PSOQUIT=0
"RTN","PSONVAP2",50,0)
 ;
"RTN","PSONVAP2",51,0)
 D IMPORT
"RTN","PSONVAP2",52,0)
 Q:PSOQUIT
"RTN","PSONVAP2",53,0)
 D SERV
"RTN","PSONVAP2",54,0)
 Q:PSOQUIT
"RTN","PSONVAP2",55,0)
 D TASK
"RTN","PSONVAP2",56,0)
 Q
"RTN","PSONVAP2",57,0)
 ;
"RTN","PSONVAP2",58,0)
CONSIDER ;
"RTN","PSONVAP2",59,0)
 N DIR,DUOUT,DTOUT,Y
"RTN","PSONVAP2",60,0)
 W !!,"Considerations before invoking this option:"
"RTN","PSONVAP2",61,0)
 W !!,"TITLE (#3.1) file:"
"RTN","PSONVAP2",62,0)
 W !,?5,"Have the titles ""HN NON-VA PROVIDER"" and ""TW NON-VA PROVIDER"""
"RTN","PSONVAP2",63,0)
 W !,?5,"been defined in the TITLE (#3.1) file in this system?"
"RTN","PSONVAP2",64,0)
 W !,?5,"It is optional to have the titles defined."
"RTN","PSONVAP2",65,0)
 W !,?5,"However, the providers loaded by this patch will have no titles"
"RTN","PSONVAP2",66,0)
 W !,?5,"listed in CPRS if these titles are not pre-defined prior to importing"
"RTN","PSONVAP2",67,0)
 W !,?5,"the non-VA provider information included in this update."
"RTN","PSONVAP2",68,0)
 W !!,"SERVICE/SECTION (#49) file:"
"RTN","PSONVAP2",69,0)
 W !,?5,"Determine whether an entry for the SERVICE/SECTION (#29) field"
"RTN","PSONVAP2",70,0)
 W !,?5,"should be populated during the import."
"RTN","PSONVAP2",71,0)
 W !,?5,"It is optional to populate the SERVICE/SECTION (#29) field."
"RTN","PSONVAP2",72,0)
 W !,?5,"Your site may wish to define a new SERVICE/SECTION (#49) file entry"
"RTN","PSONVAP2",73,0)
 W !,?5,"such as ""NON-VA COMMUNITY CARE"".",!
"RTN","PSONVAP2",74,0)
 K DIR S DIR(0)="Y",DIR("B")="NO"
"RTN","PSONVAP2",75,0)
 S DIR("?")="Enter ""Y"" if you wish to proceed with non-VA provider filing."
"RTN","PSONVAP2",76,0)
 S DIR("A")="Do you wish to proceed"
"RTN","PSONVAP2",77,0)
 D ^DIR K DIR
"RTN","PSONVAP2",78,0)
 I 'Y!($D(DUOUT))!($D(DTOUT)) S PSOQUIT=1
"RTN","PSONVAP2",79,0)
 Q
"RTN","PSONVAP2",80,0)
 ;
"RTN","PSONVAP2",81,0)
INIT ;initialize
"RTN","PSONVAP2",82,0)
 N PSOUVISN,VIEN,PSOSUB,VIEN,PSOJOBN,PSOA
"RTN","PSONVAP2",83,0)
 ;
"RTN","PSONVAP2",84,0)
 ;This exact setting of AUTHCODE is checked for by VistA routine XUESSO4
"RTN","PSONVAP2",85,0)
 ;The value was determined by a Kernel developer.
"RTN","PSONVAP2",86,0)
 S AUTHCODE="This entry point is for VACAA only. No morons."
"RTN","PSONVAP2",87,0)
 ;
"RTN","PSONVAP2",88,0)
 ;PSODT and PSOTM are used as unique subscripts in ^XTMP.
"RTN","PSONVAP2",89,0)
 ;Not using PSOTM since ^XTMP needs to remain for possible troubleshooting
"RTN","PSONVAP2",90,0)
 ;and a user might invoke this option multiple times under the same job number
"RTN","PSONVAP2",91,0)
 ;when processing files for multiple states within the VISN.
"RTN","PSONVAP2",92,0)
 ;
"RTN","PSONVAP2",93,0)
 S PSOJOB="PSONONVA "_$J
"RTN","PSONVAP2",94,0)
 I $D(^XTMP(PSOJOB)) D
"RTN","PSONVAP2",95,0)
 . S PSOJOBN=$J
"RTN","PSONVAP2",96,0)
 . F PSOA=1:1:500 Q:'$D(^XTMP(PSOJOB))  D
"RTN","PSONVAP2",97,0)
 . . S PSOJOBN=PSOJOBN+1
"RTN","PSONVAP2",98,0)
 . . S PSOJOB="PSONONVA "_PSOJOBN
"RTN","PSONVAP2",99,0)
 ;
"RTN","PSONVAP2",100,0)
 ;not checking to see if the 500th attempt is unused
"RTN","PSONVAP2",101,0)
 ;surely this routine won't be run 500 times using the
"RTN","PSONVAP2",102,0)
 ;same job number within 60 days
"RTN","PSONVAP2",103,0)
 ;
"RTN","PSONVAP2",104,0)
 S PSODT=$$FMTHL7^XLFDT(DT)
"RTN","PSONVAP2",105,0)
 S PSOTM=$P($$NOW^XLFDT,".",2)
"RTN","PSONVAP2",106,0)
 ;PSOTM should never be null, but just making sure
"RTN","PSONVAP2",107,0)
 I PSOTM="" S PSOTM=1
"RTN","PSONVAP2",108,0)
 ;
"RTN","PSONVAP2",109,0)
 ;Initialize trace globals which can be used for future research/troubleshooting if need be.
"RTN","PSONVAP2",110,0)
 ;The trace globals will purge automatically in 60 days by the VistA ^XTMP purging task.
"RTN","PSONVAP2",111,0)
 ;
"RTN","PSONVAP2",112,0)
 ;Purging just in case the ^XTMP entries exist.
"RTN","PSONVAP2",113,0)
 F PSOSUB="RAW DATA","DUPNPI","PRENPI","DUPNAME","PROBLEM","SUCCESS","ZNPI" D
"RTN","PSONVAP2",114,0)
 . K ^XTMP(PSOJOB,PSODT,PSOSUB,PSOTM)
"RTN","PSONVAP2",115,0)
 S ^XTMP(PSOJOB,0)=$$FMADD^XLFDT(DT,60)_"^"_DT_"^Non-VA Provider Updates"
"RTN","PSONVAP2",116,0)
 ;
"RTN","PSONVAP2",117,0)
 ;Initialize indexes
"RTN","PSONVAP2",118,0)
 ;
"RTN","PSONVAP2",119,0)
 S ^XTMP(PSOJOB,PSODT,"RAW DATA",PSOTM,1)="Name^Degree^Sex^ST 1^Street 1^Street 2^City^State^ZIP^"
"RTN","PSONVAP2",120,0)
 S ^XTMP(PSOJOB,PSODT,"RAW DATA",PSOTM,1)=^XTMP(PSOJOB,PSODT,"RAW DATA",PSOTM,1)_"NPI^Tax ID^TW/HN^DEA#^DEA Exp. Date^DETOX/Maint ID^"
"RTN","PSONVAP2",121,0)
 S ^XTMP(PSOJOB,PSODT,"RAW DATA",PSOTM,1)=^XTMP(PSOJOB,PSODT,"RAW DATA",PSOTM,1)_"Sched II Narc^Sched II Non-Narc^Sched III Narc^Sched III Non-Narc^Sched IV^Sched V"
"RTN","PSONVAP2",122,0)
 ;
"RTN","PSONVAP2",123,0)
 ;what is site's VISN
"RTN","PSONVAP2",124,0)
 D PARENT^XUAF4("PSOUVISN","`"_DUZ(2),"VISN")
"RTN","PSONVAP2",125,0)
 ;
"RTN","PSONVAP2",126,0)
 ;The check below is needed when testing in MNTVBB.
"RTN","PSONVAP2",127,0)
 ;It will not affect sites and other test environments.
"RTN","PSONVAP2",128,0)
 I DUZ(2)'=16066 S VIEN=$O(PSOUVISN("P",0)) S PSOVISN=$TR($P($G(PSOUVISN("P",VIEN)),U),"VISN ")
"RTN","PSONVAP2",129,0)
 ;
"RTN","PSONVAP2",130,0)
 ;line below is for testing in MNTVBB test environment
"RTN","PSONVAP2",131,0)
 ;keep the line for possible future changes so that the next developer does
"RTN","PSONVAP2",132,0)
 ;not have to research the custom VISN value in MNTVBB
"RTN","PSONVAP2",133,0)
 I DUZ(2)=16066 S PSOVISN=19
"RTN","PSONVAP2",134,0)
 Q
"RTN","PSONVAP2",135,0)
 ;
"RTN","PSONVAP2",136,0)
SERV ;
"RTN","PSONVAP2",137,0)
 N DIC,DTOUT,DUOUT,Y
"RTN","PSONVAP2",138,0)
 W !!,"Press ENTER if the SERVICE/SECTION (#29) field should not be populated.",!
"RTN","PSONVAP2",139,0)
 S DIC("A")="Which SERVICE/SECTION (#29) field entry should be used? "
"RTN","PSONVAP2",140,0)
 S DIC(0)="AEQM"
"RTN","PSONVAP2",141,0)
 S DIC="^DIC(49,"
"RTN","PSONVAP2",142,0)
 D ^DIC
"RTN","PSONVAP2",143,0)
 S PSOSERV=$S(+Y>0:+Y,1:"")
"RTN","PSONVAP2",144,0)
 I $D(DTOUT)!$D(DUOUT) S PSOQUIT=1
"RTN","PSONVAP2",145,0)
 Q
"RTN","PSONVAP2",146,0)
 ;
"RTN","PSONVAP2",147,0)
IMPORT ;
"RTN","PSONVAP2",148,0)
 N PSOTMP1,PSOTMP2,DIR,DUOUT,DTOUT,Y
"RTN","PSONVAP2",149,0)
 S DIR(0)="FA",DIR("A")="Directory name "
"RTN","PSONVAP2",150,0)
 S DIR("B")=""
"RTN","PSONVAP2",151,0)
 D ^DIR
"RTN","PSONVAP2",152,0)
 I $D(DTOUT)!$D(DUOUT) S PSOQUIT=1 Q
"RTN","PSONVAP2",153,0)
 ;
"RTN","PSONVAP2",154,0)
 S PSODIR=Y
"RTN","PSONVAP2",155,0)
 S DIR(0)="FA",DIR("A")="File Name "
"RTN","PSONVAP2",156,0)
 S DIR("B")=""
"RTN","PSONVAP2",157,0)
 D ^DIR
"RTN","PSONVAP2",158,0)
 I $D(DTOUT)!$D(DUOUT) S PSOQUIT=1 Q
"RTN","PSONVAP2",159,0)
 S PSOFILE=Y
"RTN","PSONVAP2",160,0)
 ;
"RTN","PSONVAP2",161,0)
 ;Validate filename to make sure VISN is correct
"RTN","PSONVAP2",162,0)
 I $P(PSOFILE,"_",3)'=PSOVISN D  Q
"RTN","PSONVAP2",163,0)
 . W !!,"This file pertains to VISN ",$P(PSOFILE,"_",3)
"RTN","PSONVAP2",164,0)
 . W !,"Only files for your VISN of ",PSOVISN
"RTN","PSONVAP2",165,0)
 . W !,"may be imported.",!
"RTN","PSONVAP2",166,0)
 . S PSOQUIT=1
"RTN","PSONVAP2",167,0)
 ;
"RTN","PSONVAP2",168,0)
 ;convert CSV into lower case if user specified upper case
"RTN","PSONVAP2",169,0)
 S $P(PSOFILE,".",2)=$TR($P(PSOFILE,".",2),"CSV","csv")
"RTN","PSONVAP2",170,0)
 ;
"RTN","PSONVAP2",171,0)
 S PSOIMPORT=$$FTG^%ZISH(PSODIR,PSOFILE,$NA(^XTMP($TR(PSOFILE,"_",""),PSOTM,1,0)),3)
"RTN","PSONVAP2",172,0)
 I +PSOIMPORT<1 D  Q
"RTN","PSONVAP2",173,0)
 . W !!,"   **** FILE: ",PSOFILE," not found in directory     ****"
"RTN","PSONVAP2",174,0)
 . W !!,"   **** ",PSODIR,".   ****",!
"RTN","PSONVAP2",175,0)
 . S PSOQUIT=1
"RTN","PSONVAP2",176,0)
 ;
"RTN","PSONVAP2",177,0)
 ;Check to make sure the first row is a header row and 
"RTN","PSONVAP2",178,0)
 ;that the headers are correct.
"RTN","PSONVAP2",179,0)
 ;This is another step to make sure the spreadsheets were properly
"RTN","PSONVAP2",180,0)
 ;prepared and that field values will file into the correct fields.
"RTN","PSONVAP2",181,0)
 S PSOTMP1=$P($G(^XTMP($TR(PSOFILE,"_",""),PSOTM,1,0)),",",1,8)
"RTN","PSONVAP2",182,0)
 S PSOTMP2=$P($G(^XTMP($TR(PSOFILE,"_",""),PSOTM,1,0)),",",9,23)
"RTN","PSONVAP2",183,0)
 D CHKHDR
"RTN","PSONVAP2",184,0)
 S ^XTMP(PSOFILE,0)=$$FMADD^XLFDT(DT,60)_"^"_DT_"^Non-VA Provider Updates"
"RTN","PSONVAP2",185,0)
 Q
"RTN","PSONVAP2",186,0)
 ;
"RTN","PSONVAP2",187,0)
TASK ;task processing
"RTN","PSONVAP2",188,0)
 ;
"RTN","PSONVAP2",189,0)
 N ZTSAVE,%ZIS,ZTSK,ZTDTH,ZTRTN,ZTDESC,ZTIO,POP
"RTN","PSONVAP2",190,0)
 S ZTSAVE("PSOJOB")=""
"RTN","PSONVAP2",191,0)
 S ZTSAVE("PSOPROD")=""
"RTN","PSONVAP2",192,0)
 S ZTSAVE("PSODT")=""
"RTN","PSONVAP2",193,0)
 S ZTSAVE("PSOTM")=""
"RTN","PSONVAP2",194,0)
 S ZTSAVE("PSOSERV")=""
"RTN","PSONVAP2",195,0)
 S PSOFILE=$TR(PSOFILE,"_","")
"RTN","PSONVAP2",196,0)
 S ZTSAVE("PSOFILE")=""
"RTN","PSONVAP2",197,0)
 S ZTSAVE("PSOVISN")=""
"RTN","PSONVAP2",198,0)
 S ZTSAVE("AUTHCODE")=""
"RTN","PSONVAP2",199,0)
 S PSOSAVDUZ=$S($O(^VA(200,"B","TASKMAN,PROXY USER",0))]"":$O(^VA(200,"B","TASKMAN,PROXY USER",0)),1:DUZ)
"RTN","PSONVAP2",200,0)
 S ZTSAVE("PSOSAVDUZ")=""
"RTN","PSONVAP2",201,0)
 S ZTRTN="PROC^PSONVAP2"
"RTN","PSONVAP2",202,0)
 S ZTDESC="PSO NON-VA PROVIDER IMPORT"
"RTN","PSONVAP2",203,0)
 S ZTIO=""
"RTN","PSONVAP2",204,0)
 D ^%ZTLOAD
"RTN","PSONVAP2",205,0)
 W:$D(ZTSK) !!,?5,"PSO NON-VA PROVIDER IMPORT TASKED: ",$G(ZTSK)
"RTN","PSONVAP2",206,0)
 Q
"RTN","PSONVAP2",207,0)
 ;
"RTN","PSONVAP2",208,0)
PROC ;
"RTN","PSONVAP2",209,0)
 N PSOTMP1,PSOTMP2,PSOXA,PSOXB,PSOXC,PSOXD,PSOXE,PSOXF
"RTN","PSONVAP2",210,0)
 N PSOSEQ,PSOQUIT
"RTN","PSONVAP2",211,0)
 S DUZ=PSOSAVDUZ
"RTN","PSONVAP2",212,0)
 S PSOXA=1,(PSOXB,PSOXC,PSOXD,PSOXE,PSOXF)=0
"RTN","PSONVAP2",213,0)
 S PSOQUIT=0,PSOSEQ=1
"RTN","PSONVAP2",214,0)
 ;don't check the first row since it is a header row
"RTN","PSONVAP2",215,0)
 F  S PSOSEQ=$O(^XTMP(PSOFILE,PSOTM,PSOSEQ)) Q:PSOSEQ=""  Q:PSOQUIT  D
"RTN","PSONVAP2",216,0)
 . ;
"RTN","PSONVAP2",217,0)
 . ;Throttle the import process in case to avoid possible
"RTN","PSONVAP2",218,0)
 . ;system (journaling, etc.) issues due to thousands of new entries
"RTN","PSONVAP2",219,0)
 . ;being filed
"RTN","PSONVAP2",220,0)
 . I PSOSEQ#1000=0 H 15
"RTN","PSONVAP2",221,0)
 . ;
"RTN","PSONVAP2",222,0)
 . ;Need to break line up into two variables due to possible
"RTN","PSONVAP2",223,0)
 . ;lengthy address lines
"RTN","PSONVAP2",224,0)
 . ;
"RTN","PSONVAP2",225,0)
 . S PSOTMP1=$P($G(^XTMP(PSOFILE,PSOTM,PSOSEQ,0)),",",1,8)
"RTN","PSONVAP2",226,0)
 . S PSOTMP2=$P($G(^XTMP(PSOFILE,PSOTM,PSOSEQ,0)),",",9,23)
"RTN","PSONVAP2",227,0)
 . ;
"RTN","PSONVAP2",228,0)
 . ;San Diego field test site had apparent end of file issues
"RTN","PSONVAP2",229,0)
 . ;in which the last line of ^XTMP was in the format "\000\000\000..."
"RTN","PSONVAP2",230,0)
 . ;In all instances, PSOTMP2 was null.  Inserting the check below
"RTN","PSONVAP2",231,0)
 . ;in case other sites have the same issue.
"RTN","PSONVAP2",232,0)
 . ;
"RTN","PSONVAP2",233,0)
 . I PSOTMP2']"" Q
"RTN","PSONVAP2",234,0)
 . ;
"RTN","PSONVAP2",235,0)
 . D CHECK
"RTN","PSONVAP2",236,0)
 D MAIL^PSONVAP3
"RTN","PSONVAP2",237,0)
 D END
"RTN","PSONVAP2",238,0)
 Q
"RTN","PSONVAP2",239,0)
 ;
"RTN","PSONVAP2",240,0)
CHKHDR ;
"RTN","PSONVAP2",241,0)
 ;
"RTN","PSONVAP2",242,0)
 ;Make sure required column headers are correct so data will be filed into correct
"RTN","PSONVAP2",243,0)
 ;New Person (#200) file fields.  
"RTN","PSONVAP2",244,0)
 ;  A - Provider_Sur_Name
"RTN","PSONVAP2",245,0)
 ;  B - Provider_First_Name
"RTN","PSONVAP2",246,0)
 ;  C - Provider_Suffix
"RTN","PSONVAP2",247,0)
 ;  D - Degree
"RTN","PSONVAP2",248,0)
 ;  E - Sex
"RTN","PSONVAP2",249,0)
 ;  F - Address Line
"RTN","PSONVAP2",250,0)
 ;  G - Address Line 2
"RTN","PSONVAP2",251,0)
 ;  H - City
"RTN","PSONVAP2",252,0)
 ;  I - State
"RTN","PSONVAP2",253,0)
 ;  J - Zip
"RTN","PSONVAP2",254,0)
 ;  K - VISN
"RTN","PSONVAP2",255,0)
 ;  L - Pvdr_NPI
"RTN","PSONVAP2",256,0)
 ;  M - Tax_Id__TIN_
"RTN","PSONVAP2",257,0)
 ;  N - TW_or_HN
"RTN","PSONVAP2",258,0)
 ;  O - DEA_Number
"RTN","PSONVAP2",259,0)
 ;  P - DEA_Expiration_Date
"RTN","PSONVAP2",260,0)
 ;  Q - Detox_Number
"RTN","PSONVAP2",261,0)
 ;  R - Schedule2
"RTN","PSONVAP2",262,0)
 ;  S - Schedule2N
"RTN","PSONVAP2",263,0)
 ;  T - Schedule3
"RTN","PSONVAP2",264,0)
 ;  U - Schedule3N
"RTN","PSONVAP2",265,0)
 ;  V - Schedule4
"RTN","PSONVAP2",266,0)
 ;  W - Schedule5
"RTN","PSONVAP2",267,0)
 ;
"RTN","PSONVAP2",268,0)
 N PSOI,PSOTITLE
"RTN","PSONVAP2",269,0)
 F PSOI=1:1:8 S PSOTITLE=$P(PSOTMP1,",",PSOI) D  Q:PSOQUIT
"RTN","PSONVAP2",270,0)
 . I PSOTITLE'[$P($T(HEADER+PSOI),";",4) D HDRERR
"RTN","PSONVAP2",271,0)
 Q:PSOQUIT
"RTN","PSONVAP2",272,0)
 F PSOI=1:1:15 S PSOTITLE=$P(PSOTMP2,",",PSOI) D  Q:PSOQUIT
"RTN","PSONVAP2",273,0)
 . I PSOTITLE'[$P($T(HEADER+PSOI+8),";",4) D HDRERR
"RTN","PSONVAP2",274,0)
 Q
"RTN","PSONVAP2",275,0)
 ;
"RTN","PSONVAP2",276,0)
HDRERR ;Header row is incorrect
"RTN","PSONVAP2",277,0)
 N DIR
"RTN","PSONVAP2",278,0)
 W !!,"**** Header row is missing or incorrect in file ",PSOFILE,". ****"
"RTN","PSONVAP2",279,0)
 W !!,"     Submit a ticket to Tier 2 to report this issue.",!
"RTN","PSONVAP2",280,0)
 K DIR S DIR(0)="E",DIR("A")="Press Return to continue" D ^DIR K DIR
"RTN","PSONVAP2",281,0)
 S PSOQUIT=1
"RTN","PSONVAP2",282,0)
 Q
"RTN","PSONVAP2",283,0)
 ;
"RTN","PSONVAP2",284,0)
HEADER ;
"RTN","PSONVAP2",285,0)
 ;;1;Provider_Sur_Name
"RTN","PSONVAP2",286,0)
 ;;2;Provider_First_Name
"RTN","PSONVAP2",287,0)
 ;;3;Provider_Suffix
"RTN","PSONVAP2",288,0)
 ;;4;Degree
"RTN","PSONVAP2",289,0)
 ;;5;Sex
"RTN","PSONVAP2",290,0)
 ;;6;Address_Line
"RTN","PSONVAP2",291,0)
 ;;7;Address_Line_2
"RTN","PSONVAP2",292,0)
 ;;8;City
"RTN","PSONVAP2",293,0)
 ;;9;State
"RTN","PSONVAP2",294,0)
 ;;10;Zip
"RTN","PSONVAP2",295,0)
 ;;11;VISN
"RTN","PSONVAP2",296,0)
 ;;12;Pvdr_NPI
"RTN","PSONVAP2",297,0)
 ;;13;Tax_ID__TIN_
"RTN","PSONVAP2",298,0)
 ;;14;TW_or_HN
"RTN","PSONVAP2",299,0)
 ;;15;DEA_Number
"RTN","PSONVAP2",300,0)
 ;;16;DEA_Expiration_Date
"RTN","PSONVAP2",301,0)
 ;;17;Detox_Number
"RTN","PSONVAP2",302,0)
 ;;18;Schedule2
"RTN","PSONVAP2",303,0)
 ;;19;Schedule2N
"RTN","PSONVAP2",304,0)
 ;;20;Schedule3
"RTN","PSONVAP2",305,0)
 ;;21;Schedule3N
"RTN","PSONVAP2",306,0)
 ;;22;Schedule4
"RTN","PSONVAP2",307,0)
 ;;23;Schedule5
"RTN","PSONVAP2",308,0)
 Q
"RTN","PSONVAP2",309,0)
 ;
"RTN","PSONVAP2",310,0)
CHECK ;analyze data and determine whether to file
"RTN","PSONVAP2",311,0)
 ;
"RTN","PSONVAP2",312,0)
 N PSOI,X,PSONPI,PSODUZ
"RTN","PSONVAP2",313,0)
 ;decrypt NPI, Tax ID, and DEA#
"RTN","PSONVAP2",314,0)
 F PSOI=4,5,7 I $P(PSOTMP2,",",PSOI)]"" D
"RTN","PSONVAP2",315,0)
 . S $P(PSOTMP2,",",PSOI)=$$AESDECR^XUSHSH($$B64DECD^XUSHSH($P(PSOTMP2,",",PSOI)),"BaDcefXXijklmnop")
"RTN","PSONVAP2",316,0)
 ;File raw data if future troubleshooting needed
"RTN","PSONVAP2",317,0)
 ;^XTMP is indexed by date in case the site needs to perform research after the
"RTN","PSONVAP2",318,0)
 ;MailMan messages have been deleted
"RTN","PSONVAP2",319,0)
 ;
"RTN","PSONVAP2",320,0)
 S PSOXA=PSOXA+1
"RTN","PSONVAP2",321,0)
 S ^XTMP(PSOJOB,PSODT,"RAW DATA",PSOTM,PSOXA)=PSOTMP1_","_PSOTMP2
"RTN","PSONVAP2",322,0)
 ;
"RTN","PSONVAP2",323,0)
 ;check to see if the provider NPI is already on file
"RTN","PSONVAP2",324,0)
 S PSONPI=$P(PSOTMP2,",",4)
"RTN","PSONVAP2",325,0)
 S PSODUZ=$$FNDUSR(PSONPI)
"RTN","PSONVAP2",326,0)
 ;
"RTN","PSONVAP2",327,0)
 ;was NPI already on file at site before this patch was received?  If so, quit
"RTN","PSONVAP2",328,0)
 I +PSODUZ>0,'$D(^XTMP(PSOJOB,PSOTM,"NPI",PSONPI)) D  Q
"RTN","PSONVAP2",329,0)
 . I $D(^XTMP(PSOJOB,PSODT,"ZNPI",PSONPI)) Q
"RTN","PSONVAP2",330,0)
 . S PSOXB=PSOXB+1
"RTN","PSONVAP2",331,0)
 . S ^XTMP(PSOJOB,PSODT,"PRENPI",PSOTM,PSOXB)=PSOTMP1_","_PSOTMP2
"RTN","PSONVAP2",332,0)
 . S ^XTMP(PSOJOB,PSODT,"ZNPI",PSONPI)=""
"RTN","PSONVAP2",333,0)
 ;
"RTN","PSONVAP2",334,0)
 ;Has NPI been received multiple times in this provider load?
"RTN","PSONVAP2",335,0)
 ;If so, store duplicates in trace global and send in MailMan message
"RTN","PSONVAP2",336,0)
 I +PSODUZ>0,$D(^XTMP(PSOJOB,PSOTM,"NPI",PSONPI)) D  Q
"RTN","PSONVAP2",337,0)
 . S PSOXC=PSOXC+1
"RTN","PSONVAP2",338,0)
 . S ^XTMP(PSOJOB,PSODT,"DUPNPI",PSOTM,PSOXC)=PSOTMP1_","_PSOTMP2
"RTN","PSONVAP2",339,0)
 . S ^XTMP(PSOJOB,PSODT,"ZNPI",PSONPI)=""
"RTN","PSONVAP2",340,0)
 ;
"RTN","PSONVAP2",341,0)
 Q:+PSODUZ>0
"RTN","PSONVAP2",342,0)
 ;
"RTN","PSONVAP2",343,0)
 ;is Provider Name already on file
"RTN","PSONVAP2",344,0)
 I $$CHKNAME() D  Q
"RTN","PSONVAP2",345,0)
 . I $D(^XTMP(PSOJOB,PSODT,"ZNPI",PSONPI)) Q
"RTN","PSONVAP2",346,0)
 . S PSOXD=PSOXD+1
"RTN","PSONVAP2",347,0)
 . S ^XTMP(PSOJOB,PSODT,"DUPNAME",PSOTM,PSOXD)=PSOTMP1_","_PSOTMP2
"RTN","PSONVAP2",348,0)
 . S ^XTMP(PSOJOB,PSODT,"ZNPI",PSONPI)=""
"RTN","PSONVAP2",349,0)
 ;
"RTN","PSONVAP2",350,0)
 D FILE200
"RTN","PSONVAP2",351,0)
 Q
"RTN","PSONVAP2",352,0)
 ;
"RTN","PSONVAP2",353,0)
FILE200 ;
"RTN","PSONVAP2",354,0)
 ;Call Kernel interface to NEW PERSON file (#200) add/edit
"RTN","PSONVAP2",355,0)
 N PSOI,INARRAY,PSONEW,PSOFLG,PSONPI2,PSODUZ2
"RTN","PSONVAP2",356,0)
 S PSOFLG=0
"RTN","PSONVAP2",357,0)
 S INARRAY(0)=PSOVISN
"RTN","PSONVAP2",358,0)
 ;name
"RTN","PSONVAP2",359,0)
 S INARRAY(1)=$P(PSOTMP1,",")_","_$P(PSOTMP1,",",2)_$S($P(PSOTMP1,",",3)]"":" ",1:"")_$P(PSOTMP1,",",3)
"RTN","PSONVAP2",360,0)
 ;degree
"RTN","PSONVAP2",361,0)
 S INARRAY(2)=$P(PSOTMP1,",",4)
"RTN","PSONVAP2",362,0)
 ;sex
"RTN","PSONVAP2",363,0)
 S INARRAY(3)=$P(PSOTMP1,",",5)
"RTN","PSONVAP2",364,0)
 ;address line one
"RTN","PSONVAP2",365,0)
 S INARRAY(4)=$P(PSOTMP1,",",6)
"RTN","PSONVAP2",366,0)
 ;address line two
"RTN","PSONVAP2",367,0)
 S INARRAY(5)=$P(PSOTMP1,",",7)
"RTN","PSONVAP2",368,0)
 ;city
"RTN","PSONVAP2",369,0)
 S INARRAY(7)=$P(PSOTMP1,",",8)
"RTN","PSONVAP2",370,0)
 ;state
"RTN","PSONVAP2",371,0)
 S INARRAY(8)=$P(PSOTMP2,",")
"RTN","PSONVAP2",372,0)
 ;zip
"RTN","PSONVAP2",373,0)
 ;file import / export strips leading 0 off Zip codes
"RTN","PSONVAP2",374,0)
 S INARRAY(9)=$S($L($P(PSOTMP2,",",2))<5:$E("00000",1,5-$L($P(PSOTMP2,",",2)))_$P(PSOTMP2,",",2),1:$P(PSOTMP2,",",2))
"RTN","PSONVAP2",375,0)
 ;skipping $P(PSOTMP2,",",3) because the VISN number is not filed
"RTN","PSONVAP2",376,0)
 ;
"RTN","PSONVAP2",377,0)
 ;NPI
"RTN","PSONVAP2",378,0)
 S INARRAY(10)=$P(PSOTMP2,",",4)
"RTN","PSONVAP2",379,0)
 ;Tax ID
"RTN","PSONVAP2",380,0)
 ;file import/export strips leading 0's off Tax ID
"RTN","PSONVAP2",381,0)
 S INARRAY(11)=$S($L($P(PSOTMP2,",",5))<9:$E("000000000",1,9-$L($P(PSOTMP2,",",5)))_$P(PSOTMP2,",",5),1:$P(PSOTMP2,",",5))
"RTN","PSONVAP2",382,0)
 ;DEA#
"RTN","PSONVAP2",383,0)
 S INARRAY(12)=$P(PSOTMP2,",",7)
"RTN","PSONVAP2",384,0)
 ;Subject Organization text and ID
"RTN","PSONVAP2",385,0)
 S INARRAY(13)="Veteran Care in the Community"
"RTN","PSONVAP2",386,0)
 ;The space is needed after N/A to pass four character requirement
"RTN","PSONVAP2",387,0)
 ;in XUESSO2.
"RTN","PSONVAP2",388,0)
 S INARRAY(14)="N/A "
"RTN","PSONVAP2",389,0)
 ;
"RTN","PSONVAP2",390,0)
 ;The additional check for production ensures that duplicate errors won't
"RTN","PSONVAP2",391,0)
 ;be generated during testing.
"RTN","PSONVAP2",392,0)
 I PSOPROD,$$PROD^XUPROD=1 S PSONEW=$$VACAA^XUESSO4(.INARRAY,AUTHCODE)
"RTN","PSONVAP2",393,0)
 ;
"RTN","PSONVAP2",394,0)
 ;If PSONEW is less than 1, XUESSO4 refused to file, so there is no need
"RTN","PSONVAP2",395,0)
 ;to continue attempting to file additional data for this provider.
"RTN","PSONVAP2",396,0)
 I +PSONEW<1 D PROB Q
"RTN","PSONVAP2",397,0)
 D NPI(+PSONEW,INARRAY(10)),MORE,DEL
"RTN","PSONVAP2",398,0)
 Q
"RTN","PSONVAP2",399,0)
 ;
"RTN","PSONVAP2",400,0)
PROB ;problem detected after FileMan call
"RTN","PSONVAP2",401,0)
 N PSOXERR,PSOTXT,PSOPAD
"RTN","PSONVAP2",402,0)
 S PSOXE=PSOXE+1
"RTN","PSONVAP2",403,0)
 S PSOTXT=$S($P(PSONEW,U,2)]"":$P(PSONEW,U,2),1:"No reason text available.")
"RTN","PSONVAP2",404,0)
 I PSOFLG=1 S PSOTXT="Check ^XTMP(""PSONONVA ""_[job number],[date],""PROBLEM"""
"RTN","PSONVAP2",405,0)
 S PSOPAD=$E("                                                  ",1,55-$L(PSOTXT))
"RTN","PSONVAP2",406,0)
 S ^XTMP(PSOJOB,PSODT,"PROBLEM",PSOTM,PSOXE)=$E(PSOTXT,1,55)_PSOPAD_$E(INARRAY(1),1,20)
"RTN","PSONVAP2",407,0)
 M ^XTMP(PSOJOB,PSODT,"PROBLEM",PSOTM,PSOXE)=INARRAY
"RTN","PSONVAP2",408,0)
 I PSOFLG=1 D
"RTN","PSONVAP2",409,0)
 . M ^XTMP(PSOJOB,PSODT,"PROBLEM",PSOTM,PSOXE)=PSOERR
"RTN","PSONVAP2",410,0)
 Q
"RTN","PSONVAP2",411,0)
 ;
"RTN","PSONVAP2",412,0)
NPI(PSODUZ2,PSONPI2) ;This call needed to file EFFECTIVE DATE/TIME and sub-fields
"RTN","PSONVAP2",413,0)
 N PSOCHK
"RTN","PSONVAP2",414,0)
 S PSOCHK=$$ADDNPI^XUSNPI("Individual_ID",+PSODUZ2,PSONPI2,$$NOW^XLFDT(),1)
"RTN","PSONVAP2",415,0)
 Q
"RTN","PSONVAP2",416,0)
 ;
"RTN","PSONVAP2",417,0)
MORE ;File additional fields 
"RTN","PSONVAP2",418,0)
 ;approved by IA #6889
"RTN","PSONVAP2",419,0)
 N PSOFDR,PSOERR,X,Y
"RTN","PSONVAP2",420,0)
 ;
"RTN","PSONVAP2",421,0)
 ;PSOFLG is used in PROB if there are FileMan errors
"RTN","PSONVAP2",422,0)
 S PSOFLG=1
"RTN","PSONVAP2",423,0)
 ;
"RTN","PSONVAP2",424,0)
 ;Service/Section
"RTN","PSONVAP2",425,0)
 S PSOFDR(200,+PSONEW_",",29)=PSOSERV
"RTN","PSONVAP2",426,0)
 ;
"RTN","PSONVAP2",427,0)
 ;Remarks
"RTN","PSONVAP2",428,0)
 S PSOFDR(200,+PSONEW_",",53.9)=$P(PSOTMP2,",",6)_" NON-VA PROVIDER"
"RTN","PSONVAP2",429,0)
 ;DEA Expiration Date (convert to VistA date format if not null)
"RTN","PSONVAP2",430,0)
 S X=$P(PSOTMP2,",",8)
"RTN","PSONVAP2",431,0)
 I X]"" D
"RTN","PSONVAP2",432,0)
 . D ^%DT
"RTN","PSONVAP2",433,0)
 . S PSOFDR(200,+PSONEW_",",747.44)=Y
"RTN","PSONVAP2",434,0)
 ;Detox/Maintenance ID Number
"RTN","PSONVAP2",435,0)
 S PSOFDR(200,+PSONEW_",",53.11)=$P(PSOTMP2,",",9)
"RTN","PSONVAP2",436,0)
 ;
"RTN","PSONVAP2",437,0)
 ;Convert "Y" or "N" for Schedule fields to "1" or "0"
"RTN","PSONVAP2",438,0)
 ;Schedule II Narcotic
"RTN","PSONVAP2",439,0)
 S PSOFDR(200,+PSONEW_",",55.1)=$S($P(PSOTMP2,",",10)="Y":1,1:0)
"RTN","PSONVAP2",440,0)
 ;Schedule II Non-Narcotic
"RTN","PSONVAP2",441,0)
 S PSOFDR(200,+PSONEW_",",55.2)=$S($P(PSOTMP2,",",11)="Y":1,1:0)
"RTN","PSONVAP2",442,0)
 ;Schedule III Narcotic
"RTN","PSONVAP2",443,0)
 S PSOFDR(200,+PSONEW_",",55.3)=$S($P(PSOTMP2,",",12)="Y":1,1:0)
"RTN","PSONVAP2",444,0)
 ;Schedule III Non-Narcotic
"RTN","PSONVAP2",445,0)
 S PSOFDR(200,+PSONEW_",",55.4)=$S($P(PSOTMP2,",",13)="Y":1,1:0)
"RTN","PSONVAP2",446,0)
 ;Schedule IV
"RTN","PSONVAP2",447,0)
 S PSOFDR(200,+PSONEW_",",55.5)=$S($P(PSOTMP2,",",14)="Y":1,1:0)
"RTN","PSONVAP2",448,0)
 ;Schedule V
"RTN","PSONVAP2",449,0)
 S PSOFDR(200,+PSONEW_",",55.6)=$S($P(PSOTMP2,",",15)="Y":1,1:0)
"RTN","PSONVAP2",450,0)
 D UPDATE^DIE("","PSOFDR","IEN","PSOERR")
"RTN","PSONVAP2",451,0)
 I $D(PSOERR("DIERR")) D PROB
"RTN","PSONVAP2",452,0)
 ;
"RTN","PSONVAP2",453,0)
 ;continue filing additional fields even if there was a problem 
"RTN","PSONVAP2",454,0)
 ;with previous call since the provider has information filed by this time.
"RTN","PSONVAP2",455,0)
 ;
"RTN","PSONVAP2",456,0)
 K PSOFDR,PSOERR
"RTN","PSONVAP2",457,0)
 S PSOFDR(200,+PSONEW_",",8)=$P(PSOTMP2,",",6)_" NON-VA PROVIDER"
"RTN","PSONVAP2",458,0)
 D UPDATE^DIE("E","PSOFDR","IEN","PSOERR")
"RTN","PSONVAP2",459,0)
 I $D(PSOERR("DIERR")) D PROB
"RTN","PSONVAP2",460,0)
 ;
"RTN","PSONVAP2",461,0)
 ;if Title is not defined in the TITLE (#3.1) file, file as text
"RTN","PSONVAP2",462,0)
 K PSOERR
"RTN","PSONVAP2",463,0)
 I $P($G(^VA(200,+PSONEW,0)),"^",9)="" D
"RTN","PSONVAP2",464,0)
 . D UPDATE^DIE("U","PSOFDR","IEN","PSOERR")
"RTN","PSONVAP2",465,0)
 . I $D(PSOERR("DIERR")) D PROB
"RTN","PSONVAP2",466,0)
 S PSOXF=PSOXF+1
"RTN","PSONVAP2",467,0)
 S ^XTMP(PSOJOB,PSOTM,"NPI",INARRAY(10))=""
"RTN","PSONVAP2",468,0)
 S ^XTMP(PSOJOB,PSODT,"SUCCESS",PSOTM,PSOXF)=+PSONEW_$E("               ",1,15-$L(+PSONEW))_$E(INARRAY(1),1,35)
"RTN","PSONVAP2",469,0)
 K INARRAY
"RTN","PSONVAP2",470,0)
 ;
"RTN","PSONVAP2",471,0)
 Q
"RTN","PSONVAP2",472,0)
 ;
"RTN","PSONVAP2",473,0)
DEL ;Delete key XUORES which was filed by XUESSO4
"RTN","PSONVAP2",474,0)
 ;UNCOMMENT if it is decided later to remove the key
"RTN","PSONVAP2",475,0)
 ;N DIC,X,DIK,DA
"RTN","PSONVAP2",476,0)
 ;S DIK="^VA(200,"_+PSONEW_",51,"
"RTN","PSONVAP2",477,0)
 ;S DA(1)=+PSONEW
"RTN","PSONVAP2",478,0)
 ;S DIC="^DIC(19.1,",DIC(0)="MZ",X="XUORES" D ^DIC
"RTN","PSONVAP2",479,0)
 ;S DA=+Y
"RTN","PSONVAP2",480,0)
 ;D ^DIK
"RTN","PSONVAP2",481,0)
 Q
"RTN","PSONVAP2",482,0)
 ;
"RTN","PSONVAP2",483,0)
FNDUSR(PSONPI) ;see if provider already on file
"RTN","PSONVAP2",484,0)
 ;A previous version of this routine checked to see if the
"RTN","PSONVAP2",485,0)
 ;provider is active.  However, if the NPI is already on file,
"RTN","PSONVAP2",486,0)
 ;Kernel routine XUESSO4 will file data into the New Person IEN
"RTN","PSONVAP2",487,0)
 ;on file.  This can create issues because old and new information
"RTN","PSONVAP2",488,0)
 ;is on file within the same IEN.
"RTN","PSONVAP2",489,0)
 N PSOATTRIB
"RTN","PSONVAP2",490,0)
 S PSOATTRIB(8)=PSONPI ; NPI
"RTN","PSONVAP2",491,0)
 S PSODUZ=$$QI^XUSNPI(PSOATTRIB(8))
"RTN","PSONVAP2",492,0)
 Q $S(PSODUZ'=0:1,1:0)
"RTN","PSONVAP2",493,0)
 ;
"RTN","PSONVAP2",494,0)
CHKNAME() ;is provider name already in New Person file
"RTN","PSONVAP2",495,0)
 ;if so, store data in trace global and send MailMan message
"RTN","PSONVAP2",496,0)
 N PSONAME
"RTN","PSONVAP2",497,0)
 ;do not validate suffix to be on safe side
"RTN","PSONVAP2",498,0)
 S PSONAME=$P(PSOTMP1,",",1,2)
"RTN","PSONVAP2",499,0)
 I $D(^VA(200,"B",PSONAME)) Q 1
"RTN","PSONVAP2",500,0)
 Q 0
"RTN","PSONVAP2",501,0)
 ;
"RTN","PSONVAP2",502,0)
END ;clean up
"RTN","PSONVAP2",503,0)
 ;
"RTN","PSONVAP2",504,0)
 K ^XTMP(PSOJOB,PSOTM)
"RTN","PSONVAP2",505,0)
 K ^XTMP(PSOJOB,PSODT,"ZNPI")
"RTN","PSONVAP2",506,0)
 K ^XTMP(PSOFILE,PSOTM)
"RTN","PSONVAP2",507,0)
 K PSODIR,PSOFILE,PSOSAVDUZ,PSOTM
"RTN","PSONVAP2",508,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","PSONVAP2",509,0)
 Q
"RTN","PSONVAP2",510,0)
 ;
"RTN","PSONVAP3")
0^2^B46908515^n/a
"RTN","PSONVAP3",1,0)
PSONVAP3 ;HPS/DSK - Non-VA Provider Updates ;June 26, 2018 11:20
"RTN","PSONVAP3",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**481**;DEC 1997;Build 31
"RTN","PSONVAP3",3,0)
 ;
"RTN","PSONVAP3",4,0)
 ;continuation of routine PSONVAP2
"RTN","PSONVAP3",5,0)
 ;
"RTN","PSONVAP3",6,0)
 ;EXTERNAL REFERENCES
"RTN","PSONVAP3",7,0)
 ;    ^XUSEC                                - IA #10076 (Supported)
"RTN","PSONVAP3",8,0)
 ;    $$SENDMSG^XMXAPI                      - IA #2729  (Supported)
"RTN","PSONVAP3",9,0)
 ;    $$SETUP1^XQALERT                      - IA #10081 (Supported)
"RTN","PSONVAP3",10,0)
 ;
"RTN","PSONVAP3",11,0)
 Q
"RTN","PSONVAP3",12,0)
 ;
"RTN","PSONVAP3",13,0)
MAIL ;Send mail messages to holders of PSDMGR key
"RTN","PSONVAP3",14,0)
 ;variable for alerts must be XQA
"RTN","PSONVAP3",15,0)
 N TYPE,PSOMESNUM,PSOUSER,PSOMY,PSOALMSG,XQA
"RTN","PSONVAP3",16,0)
 S PSOUSER=0
"RTN","PSONVAP3",17,0)
 F  S PSOUSER=$O(^XUSEC("PSDMGR",PSOUSER)) Q:PSOUSER=""  S PSOMY(PSOUSER)=""
"RTN","PSONVAP3",18,0)
 ;
"RTN","PSONVAP3",19,0)
 S PSOMESNUM=$$MSEND("SUCCESS")
"RTN","PSONVAP3",20,0)
 I PSOMESNUM D
"RTN","PSONVAP3",21,0)
 . S PSOALMSG="MailMan message #"_PSOMESNUM_" lists providers successfully loaded"
"RTN","PSONVAP3",22,0)
 . D ALERT(PSOALMSG)
"RTN","PSONVAP3",23,0)
 S PSOMESNUM=$$MSEND("PROBLEM")
"RTN","PSONVAP3",24,0)
 I PSOMESNUM D
"RTN","PSONVAP3",25,0)
 . S PSOALMSG="MailMan message #"_PSOMESNUM_" lists providers with filing issues"
"RTN","PSONVAP3",26,0)
 . D ALERT(PSOALMSG)
"RTN","PSONVAP3",27,0)
 S PSOMESNUM=$$MSEND("PRENPI")
"RTN","PSONVAP3",28,0)
 I PSOMESNUM D
"RTN","PSONVAP3",29,0)
 . S PSOALMSG="MailMan message #"_PSOMESNUM_" lists provider NPI's already on file"
"RTN","PSONVAP3",30,0)
 . D ALERT(PSOALMSG)
"RTN","PSONVAP3",31,0)
 S PSOMESNUM=$$MSEND("DUPNPI")
"RTN","PSONVAP3",32,0)
 I PSOMESNUM D
"RTN","PSONVAP3",33,0)
 . S PSOALMSG="MailMan message #"_PSOMESNUM_" lists provider NPI's in spreadsheet multiple times"
"RTN","PSONVAP3",34,0)
 . D ALERT(PSOALMSG)
"RTN","PSONVAP3",35,0)
 S PSOMESNUM=$$MSEND("DUPNAME")
"RTN","PSONVAP3",36,0)
 I PSOMESNUM D
"RTN","PSONVAP3",37,0)
 . S PSOALMSG="MailMan message #"_PSOMESNUM_" lists providers for which name is already on file"
"RTN","PSONVAP3",38,0)
 . D ALERT(PSOALMSG)
"RTN","PSONVAP3",39,0)
 Q
"RTN","PSONVAP3",40,0)
 ;
"RTN","PSONVAP3",41,0)
MSEND(TYPE) ;Send local e-mail
"RTN","PSONVAP3",42,0)
 ;
"RTN","PSONVAP3",43,0)
 N DIFROM,PSOA,PSOB,PSOTEXT,PSODUZ,PSOSUB,PSOTEXT,PSOMZ,PSOMIN,PSOSTR,PSOHIT,PSOSTR2
"RTN","PSONVAP3",44,0)
 N PSOPAD,PSOMAIL
"RTN","PSONVAP3",45,0)
 S PSOPAD="                    "
"RTN","PSONVAP3",46,0)
 S PSOMAIL="PSO_MAIL "_TYPE_" "_PSOJOB
"RTN","PSONVAP3",47,0)
 ;
"RTN","PSONVAP3",48,0)
 ;Keeping MailMessages in ^XTMP for 60 days in case needed later
"RTN","PSONVAP3",49,0)
 S ^XTMP(PSOMAIL,0)=$$FMADD^XLFDT(DT,60)_"^"_DT_"^Non-VA Provider Update Mail Message - "_TYPE
"RTN","PSONVAP3",50,0)
 ;
"RTN","PSONVAP3",51,0)
 S PSOHIT=0
"RTN","PSONVAP3",52,0)
 ; Returns: Message number
"RTN","PSONVAP3",53,0)
 I TYPE="SUCCESS" D
"RTN","PSONVAP3",54,0)
 . S PSOSUB="VACAA: Filing Success"
"RTN","PSONVAP3",55,0)
 . S PSOHIT=1
"RTN","PSONVAP3",56,0)
 . S ^XTMP(PSOMAIL,1)="This message lists new Non-VA Providers successfully uploaded into the VistA"
"RTN","PSONVAP3",57,0)
 . S ^XTMP(PSOMAIL,2)="NEW PERSON file (#200) for VACAA."
"RTN","PSONVAP3",58,0)
 . S ^XTMP(PSOMAIL,3)=" "
"RTN","PSONVAP3",59,0)
 . I $O(^XTMP(PSOJOB,PSODT,"SUCCESS",PSOTM,0))="" D  Q
"RTN","PSONVAP3",60,0)
 . . S ^XTMP(PSOMAIL,4)=" "
"RTN","PSONVAP3",61,0)
 . . S ^XTMP(PSOMAIL,5)="**** NO NEW PROVIDERS SUCCESSFULLY UPLOADED ****"
"RTN","PSONVAP3",62,0)
 . . S ^XTMP(PSOMAIL,6)="**** SEE SEPARATE MESSAGES CONCERNING FILING PROBLEMS ****"
"RTN","PSONVAP3",63,0)
 . . S ^XTMP(PSOMAIL,7)="**** AND INFORMATION ON PROVIDERS WHICH ARE ALREADY ON FILE ****"
"RTN","PSONVAP3",64,0)
 . . S ^XTMP(PSOMAIL,8)=" "
"RTN","PSONVAP3",65,0)
 . S ^XTMP(PSOMAIL,4)="IEN            Provider"
"RTN","PSONVAP3",66,0)
 . S ^XTMP(PSOMAIL,5)="------------   -----------------------------------"
"RTN","PSONVAP3",67,0)
 . S PSOB=6
"RTN","PSONVAP3",68,0)
 . S PSOA=0 F  S PSOA=$O(^XTMP(PSOJOB,PSODT,"SUCCESS",PSOTM,PSOA)) Q:PSOA=""  D
"RTN","PSONVAP3",69,0)
 . . S ^XTMP(PSOMAIL,PSOB)=$G(^XTMP(PSOJOB,PSODT,"SUCCESS",PSOTM,PSOA))
"RTN","PSONVAP3",70,0)
 . . S PSOB=PSOB+1
"RTN","PSONVAP3",71,0)
 I TYPE="PROBLEM",$O(^XTMP(PSOJOB,PSODT,"PROBLEM",PSOTM,0)) D
"RTN","PSONVAP3",72,0)
 . S PSOHIT=1
"RTN","PSONVAP3",73,0)
 . S PSOSUB="VACAA: Filing Problem(s)"
"RTN","PSONVAP3",74,0)
 . S ^XTMP(PSOMAIL,1)="This message lists Non-VA Provider(s) that failed to load into the VistA"
"RTN","PSONVAP3",75,0)
 . S ^XTMP(PSOMAIL,2)="NEW PERSON file (#200) for VACAA (described below)."
"RTN","PSONVAP3",76,0)
 . S ^XTMP(PSOMAIL,3)=" "
"RTN","PSONVAP3",77,0)
 . S ^XTMP(PSOMAIL,4)="A provider might be listed in both the SUCCESS and PROBLEM messages"
"RTN","PSONVAP3",78,0)
 . S ^XTMP(PSOMAIL,5)="if not all fields in the NEW PERSON (#200) file were able to be populated."
"RTN","PSONVAP3",79,0)
 . S ^XTMP(PSOMAIL,6)=" "
"RTN","PSONVAP3",80,0)
 . S ^XTMP(PSOMAIL,7)="Error Message                                          Provider"
"RTN","PSONVAP3",81,0)
 . S ^XTMP(PSOMAIL,8)="-------------                                          ---------------------"
"RTN","PSONVAP3",82,0)
 . S PSOB=9
"RTN","PSONVAP3",83,0)
 . S PSOA=0 F  S PSOA=$O(^XTMP(PSOJOB,PSODT,"PROBLEM",PSOTM,PSOA)) Q:PSOA=""  D
"RTN","PSONVAP3",84,0)
 . . S ^XTMP(PSOMAIL,PSOB)=$G(^XTMP(PSOJOB,PSODT,"PROBLEM",PSOTM,PSOA))
"RTN","PSONVAP3",85,0)
 . . S PSOB=PSOB+1
"RTN","PSONVAP3",86,0)
 I TYPE="PRENPI",$O(^XTMP(PSOJOB,PSODT,"PRENPI",PSOTM,0)) D
"RTN","PSONVAP3",87,0)
 . S PSOHIT=1
"RTN","PSONVAP3",88,0)
 . S PSOSUB="VACAA: NPI(s) Already On File"
"RTN","PSONVAP3",89,0)
 . S ^XTMP(PSOMAIL,1)="This message lists Non-VA Provider(s) that failed to load into the VistA"
"RTN","PSONVAP3",90,0)
 . S ^XTMP(PSOMAIL,2)="NEW PERSON file (#200) because the NPI was already on file."
"RTN","PSONVAP3",91,0)
 . S ^XTMP(PSOMAIL,3)=" "
"RTN","PSONVAP3",92,0)
 . S ^XTMP(PSOMAIL,4)="NPI                 Provider"
"RTN","PSONVAP3",93,0)
 . S ^XTMP(PSOMAIL,5)="----------          --------------------"
"RTN","PSONVAP3",94,0)
 . S PSOB=6
"RTN","PSONVAP3",95,0)
 . S PSOA=0 F  S PSOA=$O(^XTMP(PSOJOB,PSODT,"PRENPI",PSOTM,PSOA)) Q:PSOA=""  D
"RTN","PSONVAP3",96,0)
 . . S PSOSTR=$G(^XTMP(PSOJOB,PSODT,"PRENPI",PSOTM,PSOA))
"RTN","PSONVAP3",97,0)
 . . S ^XTMP(PSOMAIL,PSOB)=$P(PSOSTR,",",12)_"          "_$P(PSOSTR,",",1,2)
"RTN","PSONVAP3",98,0)
 . . S PSOB=PSOB+1
"RTN","PSONVAP3",99,0)
 I TYPE="DUPNPI",$O(^XTMP(PSOJOB,PSODT,"DUPNPI",PSOTM,0)) D
"RTN","PSONVAP3",100,0)
 . S PSOHIT=1
"RTN","PSONVAP3",101,0)
 . S PSOSUB="VACAA: NPI(s) Listed Multiple Times in Spreadsheet"
"RTN","PSONVAP3",102,0)
 . S ^XTMP(PSOMAIL,1)="This message lists Non-VA Provider data that failed to load into the VistA"
"RTN","PSONVAP3",103,0)
 . S ^XTMP(PSOMAIL,2)="NEW PERSON file (#200) because the NPI was listed in the spreadsheet multiple"
"RTN","PSONVAP3",104,0)
 . S ^XTMP(PSOMAIL,3)="times - possibly under multiple addresses."
"RTN","PSONVAP3",105,0)
 . S ^XTMP(PSOMAIL,4)=" "
"RTN","PSONVAP3",106,0)
 . S ^XTMP(PSOMAIL,5)="NPI            Provider               Street Address"
"RTN","PSONVAP3",107,0)
 . S ^XTMP(PSOMAIL,6)="----------     --------------------   -------------------"
"RTN","PSONVAP3",108,0)
 . S PSOB=7
"RTN","PSONVAP3",109,0)
 . S PSOA=0 F  S PSOA=$O(^XTMP(PSOJOB,PSODT,"DUPNPI",PSOTM,PSOA)) Q:PSOA=""  D
"RTN","PSONVAP3",110,0)
 . . S PSOSTR=$G(^XTMP(PSOJOB,PSODT,"DUPNPI",PSOTM,PSOA)),PSOSTR2=$E($P(PSOSTR,",",1,2),1,20)
"RTN","PSONVAP3",111,0)
 . . S ^XTMP(PSOMAIL,PSOB)=$P(PSOSTR,",",12)_"     "_PSOSTR2
"RTN","PSONVAP3",112,0)
 . . S ^XTMP(PSOMAIL,PSOB)=^XTMP(PSOMAIL,PSOB)_$S($L(PSOSTR2)<20:$E(PSOPAD,1,20-$L(PSOSTR2)),1:"")_"   "_$P(PSOSTR,",",6)
"RTN","PSONVAP3",113,0)
 . . S PSOB=PSOB+1
"RTN","PSONVAP3",114,0)
 I TYPE="DUPNAME",$O(^XTMP(PSOJOB,PSODT,"DUPNAME",PSOTM,0)) D
"RTN","PSONVAP3",115,0)
 . S PSOHIT=1
"RTN","PSONVAP3",116,0)
 . S PSOSUB="VACAA: Name(s) already on file in the New Person (#200) file"
"RTN","PSONVAP3",117,0)
 . S ^XTMP(PSOMAIL,1)="This message lists Non-VA Provider data that failed to load into the VistA"
"RTN","PSONVAP3",118,0)
 . S ^XTMP(PSOMAIL,2)="NEW PERSON file (#200) because the name is already on file"
"RTN","PSONVAP3",119,0)
 . S ^XTMP(PSOMAIL,3)=" "
"RTN","PSONVAP3",120,0)
 . S ^XTMP(PSOMAIL,4)="NPI            Provider               Street Address"
"RTN","PSONVAP3",121,0)
 . S ^XTMP(PSOMAIL,5)="----------     --------------------   -------------------"
"RTN","PSONVAP3",122,0)
 . S PSOB=6
"RTN","PSONVAP3",123,0)
 . S PSOA=0 F  S PSOA=$O(^XTMP(PSOJOB,PSODT,"DUPNAME",PSOTM,PSOA)) Q:PSOA=""  D
"RTN","PSONVAP3",124,0)
 . . S PSOSTR=$G(^XTMP(PSOJOB,PSODT,"DUPNAME",PSOTM,PSOA)),PSOSTR2=$E($P(PSOSTR,",",1,2),1,20)
"RTN","PSONVAP3",125,0)
 . . S ^XTMP(PSOMAIL,PSOB)=$P(PSOSTR,",",12)_"     "_PSOSTR2
"RTN","PSONVAP3",126,0)
 . . S ^XTMP(PSOMAIL,PSOB)=^XTMP(PSOMAIL,PSOB)_$S($L(PSOSTR2)<20:$E(PSOPAD,1,20-$L(PSOSTR2)),1:"")_"   "_$P(PSOSTR,",",6)
"RTN","PSONVAP3",127,0)
 . . S PSOB=PSOB+1
"RTN","PSONVAP3",128,0)
 I 'PSOHIT Q 0
"RTN","PSONVAP3",129,0)
 S PSODUZ=PSOSAVDUZ
"RTN","PSONVAP3",130,0)
 S PSOTEXT="^XTMP(""PSO_MAIL ""_TYPE_"" ""_PSOJOB)"
"RTN","PSONVAP3",131,0)
 S PSOMIN("FROM")="Non-VA Provider Updates"
"RTN","PSONVAP3",132,0)
 D SENDMSG^XMXAPI(PSODUZ,PSOSUB,PSOTEXT,.PSOMY,.PSOMIN,.PSOMZ,"")
"RTN","PSONVAP3",133,0)
 Q $G(PSOMZ)
"RTN","PSONVAP3",134,0)
 ;
"RTN","PSONVAP3",135,0)
ALERT(XQAMSG) ;send alerts
"RTN","PSONVAP3",136,0)
 ;variables must be prefixed with "X"
"RTN","PSONVAP3",137,0)
 N XQAID,XALERT
"RTN","PSONVAP3",138,0)
 S XQAID="Non-VA Provider Updates"
"RTN","PSONVAP3",139,0)
 M XQA=PSOMY
"RTN","PSONVAP3",140,0)
 S XALERT=$$SETUP1^XQALERT
"RTN","PSONVAP3",141,0)
 Q
"RTN","PSONVAP3",142,0)
 ;
"RTN","PSONVAP4")
0^3^B14650870^n/a
"RTN","PSONVAP4",1,0)
PSONVAP4 ;HPS/DSK - NON-VA PROVIDER BACKOUT ;May 16, 2018@16:00
"RTN","PSONVAP4",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**481**;DEC 1997;Build 31
"RTN","PSONVAP4",3,0)
 ;
"RTN","PSONVAP4",4,0)
 ;EXTERNAL REFERENCES
"RTN","PSONVAP4",5,0)
 ;    NEW PERSON FILE                       - IA #10060 (Supported)
"RTN","PSONVAP4",6,0)
 ;    NEW PERSON PHARMACY FIELDS            - IA #6889  (Private)
"RTN","PSONVAP4",7,0)
 ;    %DT                                   - IA #10003 (Supported)
"RTN","PSONVAP4",8,0)
 ;    BMES^XPDUTL                           - IA #10141 (Supported)
"RTN","PSONVAP4",9,0)
 ;
"RTN","PSONVAP4",10,0)
 Q
"RTN","PSONVAP4",11,0)
 ;
"RTN","PSONVAP4",12,0)
EN ;
"RTN","PSONVAP4",13,0)
 N DIR,DTOUT,DUOUT,Y,PSOQUIT,PSODT
"RTN","PSONVAP4",14,0)
 S PSOQUIT=0
"RTN","PSONVAP4",15,0)
 W !!,"This option is to be used ONLY to inactivate non-VA providers"
"RTN","PSONVAP4",16,0)
 W !,"which were loaded by the Non-VA Provider Import option."
"RTN","PSONVAP4",17,0)
 W !!,"If you proceed, NEW PERSON (#200) file entries which meet"
"RTN","PSONVAP4",18,0)
 W !,"the following criteria:",!
"RTN","PSONVAP4",19,0)
 W !,?2,"NON-VA PRESCRIBER (#53.91) field = YES"
"RTN","PSONVAP4",20,0)
 W !,?2,"REMARKS (#53.9) field contains ""NON-VA PROVIDER"""
"RTN","PSONVAP4",21,0)
 W !,?2,"DATE ENTERED (#30) field = the date specified in the ""DATE ENTERED"" prompt"
"RTN","PSONVAP4",22,0)
 W !!,"will have:"
"RTN","PSONVAP4",23,0)
 W !!,?2,"DISUSER (#7) field set to ""YES"""
"RTN","PSONVAP4",24,0)
 W !!,?2,"TERMINATION DATE (#9.2) and INACTIVE DATE (#53.4)"
"RTN","PSONVAP4",25,0)
 W !,?2,"fields populated with yesterday's date."
"RTN","PSONVAP4",26,0)
 W !,?2,"(Yesterday's date must be used in order to immediately"
"RTN","PSONVAP4",27,0)
 W !,?2,"inactivate the providers.)"
"RTN","PSONVAP4",28,0)
 W !!,?2,"REMARKS (#53.9) field will have a comment added:"
"RTN","PSONVAP4",29,0)
 W !,?2,"""INACTIVATED BY NON-VA INACTIVATE OPTION"".",!
"RTN","PSONVAP4",30,0)
 K DIR S DIR(0)="Y",DIR("B")="NO"
"RTN","PSONVAP4",31,0)
 S DIR("?")="Enter ""Y"" if you wish to proceed."
"RTN","PSONVAP4",32,0)
 S DIR("A")="Do you wish to proceed"
"RTN","PSONVAP4",33,0)
 D ^DIR K DIR
"RTN","PSONVAP4",34,0)
 I 'Y!($D(DUOUT))!($D(DTOUT)) S PSOQUIT=1 Q
"RTN","PSONVAP4",35,0)
 D ASK
"RTN","PSONVAP4",36,0)
 Q:PSOQUIT
"RTN","PSONVAP4",37,0)
 D INACT
"RTN","PSONVAP4",38,0)
 Q
"RTN","PSONVAP4",39,0)
 ;
"RTN","PSONVAP4",40,0)
ASK ;
"RTN","PSONVAP4",41,0)
 N DIR,%DT,DTOUT,DUOUT,Y
"RTN","PSONVAP4",42,0)
 S %DT="AEPX",%DT("A")="What DATE ENTERED (#30) field value for the entries which should be inactivated? "
"RTN","PSONVAP4",43,0)
 D ^%DT
"RTN","PSONVAP4",44,0)
 I +Y<1!($G(DTOUT))!($G(DUOUT)) S PSOQUIT=1 Q
"RTN","PSONVAP4",45,0)
 S PSODT=Y
"RTN","PSONVAP4",46,0)
 D DD^%DT
"RTN","PSONVAP4",47,0)
 W !!,"NEW PERSON (#200) file entries for non-VA providers which were entered on"
"RTN","PSONVAP4",48,0)
 W !,Y," will be inactivated."
"RTN","PSONVAP4",49,0)
 K DIR S DIR(0)="Y",DIR("B")="NO"
"RTN","PSONVAP4",50,0)
 S DIR("?")="Enter ""Y"" if you wish to proceed."
"RTN","PSONVAP4",51,0)
 S DIR("A")="Do you wish to proceed"
"RTN","PSONVAP4",52,0)
 D ^DIR K DIR
"RTN","PSONVAP4",53,0)
 I 'Y!($D(DUOUT))!($D(DTOUT)) S PSOQUIT=1
"RTN","PSONVAP4",54,0)
 Q
"RTN","PSONVAP4",55,0)
 ;
"RTN","PSONVAP4",56,0)
INACT ;
"RTN","PSONVAP4",57,0)
 N PSOIEN,PSOFDA,PSOWAIT,DIR,PSOJOB,PSOJOBN,PSOA
"RTN","PSONVAP4",58,0)
 S PSOJOB="PSONONVA_INACTIVATE "_$J
"RTN","PSONVAP4",59,0)
 I $D(^XTMP(PSOJOB)) D
"RTN","PSONVAP4",60,0)
 . S PSOJOBN=$J
"RTN","PSONVAP4",61,0)
 . F PSOA=1:1:500 Q:'$D(^XTMP(PSOJOB))  D
"RTN","PSONVAP4",62,0)
 . . S PSOJOBN=PSOJOBN+1
"RTN","PSONVAP4",63,0)
 . . S PSOJOB="PSONONVA INACTIVATE "_PSOJOBN
"RTN","PSONVAP4",64,0)
 ;
"RTN","PSONVAP4",65,0)
 ;not checking to see if the 500th attempt is unused
"RTN","PSONVAP4",66,0)
 ;surely this routine won't be run 500 times using the
"RTN","PSONVAP4",67,0)
 ;same job number within 60 days
"RTN","PSONVAP4",68,0)
 ;
"RTN","PSONVAP4",69,0)
 S ^XTMP(PSOJOB,0)=$$FMADD^XLFDT(DT,60)_"^"_DT_"^Non-VA Provider Update"
"RTN","PSONVAP4",70,0)
 W !!,"Starting -- Please wait ."
"RTN","PSONVAP4",71,0)
 S (PSOIEN,PSOWAIT)=0
"RTN","PSONVAP4",72,0)
 F  S PSOIEN=$O(^VA(200,PSOIEN)) Q:'PSOIEN  D
"RTN","PSONVAP4",73,0)
 . S PSOWAIT=PSOWAIT+1
"RTN","PSONVAP4",74,0)
 . I PSOWAIT#100=0 W "."
"RTN","PSONVAP4",75,0)
 . I $P($G(^VA(200,PSOIEN,1)),"^",7)=PSODT,$P($G(^VA(200,PSOIEN,"TPB")),"^")=1,$P($G(^VA(200,PSOIEN,"PS")),"^",9)["NON-VA PROVIDER" D
"RTN","PSONVAP4",76,0)
 . . N PSOERR
"RTN","PSONVAP4",77,0)
 . . S ^XTMP(PSOJOB,PSODT,PSOIEN)=""
"RTN","PSONVAP4",78,0)
 . . S PSOFDA(200,PSOIEN_",",53.4)=DT-1
"RTN","PSONVAP4",79,0)
 . . S PSOFDA(200,PSOIEN_",",9.2)=DT-1
"RTN","PSONVAP4",80,0)
 . . S PSOFDA(200,PSOIEN_",",7)=1
"RTN","PSONVAP4",81,0)
 . . S PSOFDA(200,PSOIEN_",",53.9)=$E($P($G(^VA(200,PSOIEN,"PS")),"^",9),1,18)_"; INACTIVATED BY NON-VA INACTIVATE OPTION"
"RTN","PSONVAP4",82,0)
 . . D UPDATE^DIE("","PSOFDA","IEN","PSOERR")
"RTN","PSONVAP4",83,0)
 . . I $D(PSOERR("DIERR")) D BMES^XPDUTL(PSOERR("DIERR",1,"TEXT",1))
"RTN","PSONVAP4",84,0)
 W !,"Finished."
"RTN","PSONVAP4",85,0)
 W !!,"Check ^XTMP(""",PSOJOB,""""," for IEN's which have been inactivated."
"RTN","PSONVAP4",86,0)
 W !
"RTN","PSONVAP4",87,0)
 S DIR(0)="E",DIR("A")="Press Return to continue" D ^DIR
"RTN","PSONVAP4",88,0)
 Q
"VER")
8.0^22.2
"BLD",11084,6)
^452
**END**
**END**

