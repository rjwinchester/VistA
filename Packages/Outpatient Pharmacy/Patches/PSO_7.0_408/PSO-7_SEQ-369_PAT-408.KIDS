Released PSO*7*408 SEQ #369
Extracted from mail message
**KIDS**:PSO*7.0*408^

**INSTALL NAME**
PSO*7.0*408
"BLD",8925,0)
PSO*7.0*408^OUTPATIENT PHARMACY^0^3140715^y
"BLD",8925,1,0)
^^104^104^3140714^
"BLD",8925,1,1,0)
The Safety Updates for the Medication Prescription Management (SUMPM)
"BLD",8925,1,2,0)
project adds a new module to the Outpatient Pharmacy V. 7.0 application,
"BLD",8925,1,3,0)
which will be used for enabling the Veterans Health Administration (VHA)
"BLD",8925,1,4,0)
pharmacies to comply with Mandatory Reporting to State Controlled
"BLD",8925,1,5,0)
Substance Rx Databases required by Consolidated Appropriations Act, 2012,
"BLD",8925,1,6,0)
PL 112-74. Also known as State Prescription Monitoring Program (SPMP), the
"BLD",8925,1,7,0)
program is a state electronic database which collects designated data on
"BLD",8925,1,8,0)
controlled substances dispensed. The states then distribute data from the
"BLD",8925,1,9,0)
database to individuals who are authorized under state law to receive the
"BLD",8925,1,10,0)
information for purposes of their profession. The information must be
"BLD",8925,1,11,0)
reported using the American Society for Automation in Pharmacy (ASAP) data
"BLD",8925,1,12,0)
format, which was developed by the Alliance of States with Prescription
"BLD",8925,1,13,0)
Monitoring Programs and the National Association of State Controlled
"BLD",8925,1,14,0)
Substances Authorities.
"BLD",8925,1,15,0)
  
"BLD",8925,1,16,0)
The new menu called State Prescription Monitoring Program Menu [PSO SPMP
"BLD",8925,1,17,0)
MENU] can be found under the Supervisor Functions [PSO SUPERVISOR]
"BLD",8925,1,18,0)
menu option. The following options will be available under this new menu:
"BLD",8925,1,19,0)
 
"BLD",8925,1,20,0)
1. View/Edit SPMP State Parameters [PSO SPMP STATE PARAMETERS]  
"BLD",8925,1,21,0)
   -----------------------------------------------------------
"BLD",8925,1,22,0)
   This option is used for viewing or editing the SPMP parameters for a 
"BLD",8925,1,23,0)
   specific state. The following fields can be updated via this option:
"BLD",8925,1,24,0)
 
"BLD",8925,1,25,0)
      ASAP VERSION
"BLD",8925,1,26,0)
      TRANSMIT RETURN TO STOCK*
"BLD",8925,1,27,0)
      INCLUDE NON-VETERAN PATIENTS
"BLD",8925,1,28,0)
      REPORTING FREQUENCY IN DAYS
"BLD",8925,1,29,0)
      VMS LOCAL DIRECTORY
"BLD",8925,1,30,0)
      UNIX/LINUX LOCAL DIRECTORY
"BLD",8925,1,31,0)
      WINDOWS/NT LOCAL DIRECTORY
"BLD",8925,1,32,0)
      FILE NAME PREFIX
"BLD",8925,1,33,0)
      FILE EXTENSION
"BLD",8925,1,34,0)
      STATE FTP SERVER IP ADDRESS
"BLD",8925,1,35,0)
      STATE FTP SERVER USERNAME
"BLD",8925,1,36,0)
      STATE FTP SERVER PORT #
"BLD",8925,1,37,0)
      STATE FTP SERVER PASSWORD
"BLD",8925,1,38,0)
      STATE FTP SERVER DIRECTORY
"BLD",8925,1,39,0)
      SFTP TRANSMISSION MODE
"BLD",8925,1,40,0)
      SFTP PRIVATE KEY TEXT**
"BLD",8925,1,41,0)
      SFTP PUBLIC KEY TEXT**
"BLD",8925,1,42,0)
 
"BLD",8925,1,43,0)
   *  Visible only if ASAP VERSION is 1995
"BLD",8925,1,44,0)
   ** Visible only if SFTP TRANSMISSION MODE is set to A - AUTOMATIC 
"BLD",8925,1,45,0)
  
"BLD",8925,1,46,0)
2. View ASAP Definitions [PSO SPMP VIEW ASAP DEFINITIONS]
"BLD",8925,1,47,0)
   ------------------------------------------------------
"BLD",8925,1,48,0)
   This option allows the user to visualize the ASAP data format and the
"BLD",8925,1,49,0)
   data elements reported to the states. It provides detailed information
"BLD",8925,1,50,0)
   about each segment and field for the ASAP format versions 4.0, 4.1 and
"BLD",8925,1,51,0)
   4.2.
"BLD",8925,1,52,0)
    
"BLD",8925,1,53,0)
3. View/Export Single Prescription [PSO SPMP SINGLE RX VIEW/EXPORT]
"BLD",8925,1,54,0)
   ----------------------------------------------------------------
"BLD",8925,1,55,0)
   This option is used for visualizing a specific prescription and the
"BLD",8925,1,56,0)
   data related to a specific fill that is transmitted to the state in the
"BLD",8925,1,57,0)
   ASAP format.
"BLD",8925,1,58,0)
  
"BLD",8925,1,59,0)
4. View Export Batch [PSO SPMP BATCH VIEW/EXPORT]
"BLD",8925,1,60,0)
   ----------------------------------------------
"BLD",8925,1,61,0)
   The information reported to the states are first compiled into a batch,
"BLD",8925,1,62,0)
   which can be for a single prescription or a collection of prescriptions
"BLD",8925,1,63,0)
   for a determined date range. This option allows the user to visualize 
"BLD",8925,1,64,0)
   information contained in one batch as well as the list of prescriptions
"BLD",8925,1,65,0)
   in the batch. This option also allows the user to manually export the
"BLD",8925,1,66,0)
   batch to the state.
"BLD",8925,1,67,0)
 
"BLD",8925,1,68,0)
5. Export Batch Processing [PSO SPMP BATCH PROCESSING]
"BLD",8925,1,69,0)
   ---------------------------------------------------
"BLD",8925,1,70,0)
   This option is used to monitor all the batches used to transmit data to
"BLD",8925,1,71,0)
   the states. The user selects a date range and a list of batches is
"BLD",8925,1,72,0)
   presented where the user can select to perform different actions on a
"BLD",8925,1,73,0)
   specific batch.
"BLD",8925,1,74,0)
   
"BLD",8925,1,75,0)
6. Scheduled Batch Export [PSO SPMP SCHEDULED EXPORT]
"BLD",8925,1,76,0)
   --------------------------------------------------
"BLD",8925,1,77,0)
   This option is used for running the automatic transmission to the
"BLD",8925,1,78,0)
   states and should not be executed by the end-user directly. It will be
"BLD",8925,1,79,0)
   automatically scheduled to run nightly and it will decide when to
"BLD",8925,1,80,0)
   transmit the data to the state based on the REPORTING FREQUENCY IN DAYS
"BLD",8925,1,81,0)
   field (#3) of the SPMP STATE PARAMETERS file (#58.41) value for the
"BLD",8925,1,82,0)
   state, which can be updated via the View/Edit SPMP State Parameters
"BLD",8925,1,83,0)
   [PSO SPMP STATE PARAMETERS] option.
"BLD",8925,1,84,0)
 
"BLD",8925,1,85,0)
7. Accounting Of Disclosures Report [PSO SPMP DISCLOSURE REPORT]
"BLD",8925,1,86,0)
   -------------------------------------------------------------
"BLD",8925,1,87,0)
   This option is used for generating a list of prescriptions transmitted
"BLD",8925,1,88,0)
   to states. This option allows for a date range selection as well as
"BLD",8925,1,89,0)
   one, multiple or all states and one, multiple or all patients. The list
"BLD",8925,1,90,0)
   is sorted by state and then by patient. 
"BLD",8925,1,91,0)
 
"BLD",8925,1,92,0)
8. Unmark Rx Fill as Administered In Clinic [PSO SPMP UNMARK ADMIN CLINIC]
"BLD",8925,1,93,0)
   -----------------------------------------------------------------------
"BLD",8925,1,94,0)
   This option is used to unmark prescriptions as 'Administered In
"BLD",8925,1,95,0)
   Clinic'. Administered in clinic prescription fills are not transmitted
"BLD",8925,1,96,0)
   to the states. This option enables the user to unmark fills that have
"BLD",8925,1,97,0)
   been mistakenly marked as 'Administered In Clinic' and subsequently
"BLD",8925,1,98,0)
   transmit them to the state.
"BLD",8925,1,99,0)
 
"BLD",8925,1,100,0)
9. Queue Background Jobs [PSO AUTOQUEUE JOBS]
"BLD",8925,1,101,0)
   ------------------------------------------
"BLD",8925,1,102,0)
   The Scheduled Batch Export [PSO SPMP SCHEDUED EXPORT] option mentioned
"BLD",8925,1,103,0)
   above will be added to the list of options that can be edited via this
"BLD",8925,1,104,0)
   option.
"BLD",8925,4,0)
^9.64PA^52^4
"BLD",8925,4,52,0)
52
"BLD",8925,4,52,2,0)
^9.641^52.1^3
"BLD",8925,4,52,2,52,0)
PRESCRIPTION  (File-top level)
"BLD",8925,4,52,2,52,1,0)
^9.6411^14^1
"BLD",8925,4,52,2,52,1,14,0)
ADMINISTERED IN CLINIC
"BLD",8925,4,52,2,52.07,0)
RETURN TO STOCK LOG  (sub-file)
"BLD",8925,4,52,2,52.07,1,0)
^9.6411^^
"BLD",8925,4,52,2,52.1,0)
REFILL  (sub-file)
"BLD",8925,4,52,2,52.1,1,0)
^9.6411^23^1
"BLD",8925,4,52,2,52.1,1,23,0)
ADMINISTERED IN CLINIC
"BLD",8925,4,52,222)
y^y^p^^^^n^^n
"BLD",8925,4,52,224)

"BLD",8925,4,58.4,0)
58.4
"BLD",8925,4,58.4,222)
y^y^f^^n^^y^o^n
"BLD",8925,4,58.41,0)
58.41
"BLD",8925,4,58.41,222)
y^y^f^^^^n
"BLD",8925,4,58.42,0)
58.42
"BLD",8925,4,58.42,222)
y^y^f^^^^n
"BLD",8925,4,"APDD",52,52)

"BLD",8925,4,"APDD",52,52,14)

"BLD",8925,4,"APDD",52,52.07)

"BLD",8925,4,"APDD",52,52.1)

"BLD",8925,4,"APDD",52,52.1,23)

"BLD",8925,4,"B",52,52)

"BLD",8925,4,"B",58.4,58.4)

"BLD",8925,4,"B",58.41,58.41)

"BLD",8925,4,"B",58.42,58.42)

"BLD",8925,6)
14^
"BLD",8925,6.3)
100
"BLD",8925,"INI")

"BLD",8925,"INID")
^n^
"BLD",8925,"INIT")
EN^PSO408PI
"BLD",8925,"KRN",0)
^9.67PA^779.2^20
"BLD",8925,"KRN",.4,0)
.4
"BLD",8925,"KRN",.401,0)
.401
"BLD",8925,"KRN",.402,0)
.402
"BLD",8925,"KRN",.403,0)
.403
"BLD",8925,"KRN",.5,0)
.5
"BLD",8925,"KRN",.84,0)
.84
"BLD",8925,"KRN",3.6,0)
3.6
"BLD",8925,"KRN",3.8,0)
3.8
"BLD",8925,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",8925,"KRN",3.8,"NM",1,0)
PSO SPMP NOTIFICATIONS^^0
"BLD",8925,"KRN",3.8,"NM","B","PSO SPMP NOTIFICATIONS",1)

"BLD",8925,"KRN",9.2,0)
9.2
"BLD",8925,"KRN",9.8,0)
9.8
"BLD",8925,"KRN",9.8,"NM",0)
^9.68A^29^26
"BLD",8925,"KRN",9.8,"NM",1,0)
PSOBPSUT^^0^B90264639
"BLD",8925,"KRN",9.8,"NM",2,0)
PSOASAP0^^0^B194204356
"BLD",8925,"KRN",9.8,"NM",6,0)
PSOSPML3^^0^B10148038
"BLD",8925,"KRN",9.8,"NM",7,0)
PSOSPML4^^0^B79601311
"BLD",8925,"KRN",9.8,"NM",8,0)
PSOSPML2^^0^B29821538
"BLD",8925,"KRN",9.8,"NM",9,0)
PSOSPMSP^^0^B143138804
"BLD",8925,"KRN",9.8,"NM",10,0)
PSOSPMU1^^0^B104921271
"BLD",8925,"KRN",9.8,"NM",11,0)
PSOSPMUT^^0^B178191137
"BLD",8925,"KRN",9.8,"NM",12,0)
PSOSPML1^^0^B45648973
"BLD",8925,"KRN",9.8,"NM",13,0)
PSOSPML0^^0^B30087960
"BLD",8925,"KRN",9.8,"NM",14,0)
PSORTSUT^^0^B14963446
"BLD",8925,"KRN",9.8,"NM",15,0)
PSORXDL^^0^B66390421
"BLD",8925,"KRN",9.8,"NM",16,0)
PSORESK^^0^B75970368
"BLD",8925,"KRN",9.8,"NM",17,0)
PSOORAL1^^0^B71524461
"BLD",8925,"KRN",9.8,"NM",18,0)
PSORXVW1^^0^B71719312
"BLD",8925,"KRN",9.8,"NM",19,0)
PSO408PI^^0^B501013
"BLD",8925,"KRN",9.8,"NM",20,0)
PSON52^^0^B91872301
"BLD",8925,"KRN",9.8,"NM",21,0)
PSOORFI1^^0^B84234137
"BLD",8925,"KRN",9.8,"NM",22,0)
PSOORNEW^^0^B94116441
"BLD",8925,"KRN",9.8,"NM",23,0)
PSOORFI2^^0^B95796288
"BLD",8925,"KRN",9.8,"NM",24,0)
PSOR52^^0^B35342982
"BLD",8925,"KRN",9.8,"NM",25,0)
PSOORRNW^^0^B21253948
"BLD",8925,"KRN",9.8,"NM",26,0)
PSORN52A^^0^B19159856
"BLD",8925,"KRN",9.8,"NM",27,0)
PSOHELP1^^0^B53295057
"BLD",8925,"KRN",9.8,"NM",28,0)
PSOSPML5^^0^B25195522
"BLD",8925,"KRN",9.8,"NM",29,0)
PSOSPML6^^0^B4614418
"BLD",8925,"KRN",9.8,"NM","B","PSO408PI",19)

"BLD",8925,"KRN",9.8,"NM","B","PSOASAP0",2)

"BLD",8925,"KRN",9.8,"NM","B","PSOBPSUT",1)

"BLD",8925,"KRN",9.8,"NM","B","PSOHELP1",27)

"BLD",8925,"KRN",9.8,"NM","B","PSON52",20)

"BLD",8925,"KRN",9.8,"NM","B","PSOORAL1",17)

"BLD",8925,"KRN",9.8,"NM","B","PSOORFI1",21)

"BLD",8925,"KRN",9.8,"NM","B","PSOORFI2",23)

"BLD",8925,"KRN",9.8,"NM","B","PSOORNEW",22)

"BLD",8925,"KRN",9.8,"NM","B","PSOORRNW",25)

"BLD",8925,"KRN",9.8,"NM","B","PSOR52",24)

"BLD",8925,"KRN",9.8,"NM","B","PSORESK",16)

"BLD",8925,"KRN",9.8,"NM","B","PSORN52A",26)

"BLD",8925,"KRN",9.8,"NM","B","PSORTSUT",14)

"BLD",8925,"KRN",9.8,"NM","B","PSORXDL",15)

"BLD",8925,"KRN",9.8,"NM","B","PSORXVW1",18)

"BLD",8925,"KRN",9.8,"NM","B","PSOSPML0",13)

"BLD",8925,"KRN",9.8,"NM","B","PSOSPML1",12)

"BLD",8925,"KRN",9.8,"NM","B","PSOSPML2",8)

"BLD",8925,"KRN",9.8,"NM","B","PSOSPML3",6)

"BLD",8925,"KRN",9.8,"NM","B","PSOSPML4",7)

"BLD",8925,"KRN",9.8,"NM","B","PSOSPML5",28)

"BLD",8925,"KRN",9.8,"NM","B","PSOSPML6",29)

"BLD",8925,"KRN",9.8,"NM","B","PSOSPMSP",9)

"BLD",8925,"KRN",9.8,"NM","B","PSOSPMU1",10)

"BLD",8925,"KRN",9.8,"NM","B","PSOSPMUT",11)

"BLD",8925,"KRN",19,0)
19
"BLD",8925,"KRN",19,"NM",0)
^9.68A^12^10
"BLD",8925,"KRN",19,"NM",1,0)
PSO SPMP MENU^^0
"BLD",8925,"KRN",19,"NM",2,0)
PSO SPMP SINGLE RX VIEW/EXPORT^^0
"BLD",8925,"KRN",19,"NM",4,0)
PSO SPMP VIEW ASAP DEFINITIONS^^0
"BLD",8925,"KRN",19,"NM",5,0)
PSO SPMP STATE PARAMETERS^^0
"BLD",8925,"KRN",19,"NM",6,0)
PSO SPMP BATCH VIEW/EXPORT^^0
"BLD",8925,"KRN",19,"NM",7,0)
PSO SUPERVISOR^^2
"BLD",8925,"KRN",19,"NM",8,0)
PSO SPMP BATCH PROCESSING^^0
"BLD",8925,"KRN",19,"NM",10,0)
PSO SPMP SCHEDULED EXPORT^^0
"BLD",8925,"KRN",19,"NM",11,0)
PSO SPMP DISCLOSURE REPORT^^0
"BLD",8925,"KRN",19,"NM",12,0)
PSO SPMP UNMARK ADMIN CLINIC^^0
"BLD",8925,"KRN",19,"NM","B","PSO SPMP BATCH PROCESSING",8)

"BLD",8925,"KRN",19,"NM","B","PSO SPMP BATCH VIEW/EXPORT",6)

"BLD",8925,"KRN",19,"NM","B","PSO SPMP DISCLOSURE REPORT",11)

"BLD",8925,"KRN",19,"NM","B","PSO SPMP MENU",1)

"BLD",8925,"KRN",19,"NM","B","PSO SPMP SCHEDULED EXPORT",10)

"BLD",8925,"KRN",19,"NM","B","PSO SPMP SINGLE RX VIEW/EXPORT",2)

"BLD",8925,"KRN",19,"NM","B","PSO SPMP STATE PARAMETERS",5)

"BLD",8925,"KRN",19,"NM","B","PSO SPMP UNMARK ADMIN CLINIC",12)

"BLD",8925,"KRN",19,"NM","B","PSO SPMP VIEW ASAP DEFINITIONS",4)

"BLD",8925,"KRN",19,"NM","B","PSO SUPERVISOR",7)

"BLD",8925,"KRN",19.1,0)
19.1
"BLD",8925,"KRN",101,0)
101
"BLD",8925,"KRN",101,"NM",0)
^9.68A^33^33
"BLD",8925,"KRN",101,"NM",1,0)
PSO SPMP3 MENU^^0
"BLD",8925,"KRN",101,"NM",2,0)
PSO SPMP3 SHOW DETAILS^^0
"BLD",8925,"KRN",101,"NM",3,0)
PSO SPMP4 VIEW ASAP DEFINITION^^0
"BLD",8925,"KRN",101,"NM",4,0)
PSO SPMP4 MENU^^0
"BLD",8925,"KRN",101,"NM",5,0)
PSO SPMP2 BATCH EXPORT^^0
"BLD",8925,"KRN",101,"NM",6,0)
PSO SPMP2 MENU^^0
"BLD",8925,"KRN",101,"NM",7,0)
PSO SPMP2 SELECT^^0
"BLD",8925,"KRN",101,"NM",8,0)
PSO SPMP2 VIEW RAW DATA^^0
"BLD",8925,"KRN",101,"NM",9,0)
PSO SPMP4 EXPORT RX^^0
"BLD",8925,"KRN",101,"NM",10,0)
PSO SPMP4 MEDICATION PROFILE^^0
"BLD",8925,"KRN",101,"NM",11,0)
PSO SPMP4 VIEW RX^^0
"BLD",8925,"KRN",101,"NM",12,0)
PSO SPMP1 MENU^^0
"BLD",8925,"KRN",101,"NM",13,0)
PSO SPMP1 SELECT^^0
"BLD",8925,"KRN",101,"NM",14,0)
PSO SPMP1 STATE PARAMETERS^^0
"BLD",8925,"KRN",101,"NM",15,0)
PSO SPMP1 MANUAL BATCH EXPORT^^0
"BLD",8925,"KRN",101,"NM",16,0)
PSO HIDDEN ACTIONS #5^^0
"BLD",8925,"KRN",101,"NM",17,0)
VALM NEXT SCREEN^^4^
"BLD",8925,"KRN",101,"NM",18,0)
VALM PREVIOUS SCREEN^^4^
"BLD",8925,"KRN",101,"NM",19,0)
VALM UP ONE LINE^^4^
"BLD",8925,"KRN",101,"NM",20,0)
VALM DOWN A LINE^^4^
"BLD",8925,"KRN",101,"NM",21,0)
VALM REFRESH^^4^
"BLD",8925,"KRN",101,"NM",22,0)
VALM PRINT SCREEN^^4^
"BLD",8925,"KRN",101,"NM",23,0)
VALM PRINT LIST^^4^
"BLD",8925,"KRN",101,"NM",24,0)
VALM RIGHT^^4^
"BLD",8925,"KRN",101,"NM",25,0)
VALM LEFT^^4^
"BLD",8925,"KRN",101,"NM",26,0)
VALM TURN ON/OFF MENUS^^4^
"BLD",8925,"KRN",101,"NM",27,0)
VALM SEARCH LIST^^4^
"BLD",8925,"KRN",101,"NM",28,0)
VALM QUIT^^4^
"BLD",8925,"KRN",101,"NM",29,0)
VALM LAST SCREEN^^4^
"BLD",8925,"KRN",101,"NM",30,0)
VALM FIRST SCREEN^^4^
"BLD",8925,"KRN",101,"NM",31,0)
VALM GOTO PAGE^^4^
"BLD",8925,"KRN",101,"NM",32,0)
PSO SPMP5 MENU^^0
"BLD",8925,"KRN",101,"NM",33,0)
PSO SPMP5 SELECT^^0
"BLD",8925,"KRN",101,"NM","B","PSO HIDDEN ACTIONS #5",16)

"BLD",8925,"KRN",101,"NM","B","PSO SPMP1 MANUAL BATCH EXPORT",15)

"BLD",8925,"KRN",101,"NM","B","PSO SPMP1 MENU",12)

"BLD",8925,"KRN",101,"NM","B","PSO SPMP1 SELECT",13)

"BLD",8925,"KRN",101,"NM","B","PSO SPMP1 STATE PARAMETERS",14)

"BLD",8925,"KRN",101,"NM","B","PSO SPMP2 BATCH EXPORT",5)

"BLD",8925,"KRN",101,"NM","B","PSO SPMP2 MENU",6)

"BLD",8925,"KRN",101,"NM","B","PSO SPMP2 SELECT",7)

"BLD",8925,"KRN",101,"NM","B","PSO SPMP2 VIEW RAW DATA",8)

"BLD",8925,"KRN",101,"NM","B","PSO SPMP3 MENU",1)

"BLD",8925,"KRN",101,"NM","B","PSO SPMP3 SHOW DETAILS",2)

"BLD",8925,"KRN",101,"NM","B","PSO SPMP4 EXPORT RX",9)

"BLD",8925,"KRN",101,"NM","B","PSO SPMP4 MEDICATION PROFILE",10)

"BLD",8925,"KRN",101,"NM","B","PSO SPMP4 MENU",4)

"BLD",8925,"KRN",101,"NM","B","PSO SPMP4 VIEW ASAP DEFINITION",3)

"BLD",8925,"KRN",101,"NM","B","PSO SPMP4 VIEW RX",11)

"BLD",8925,"KRN",101,"NM","B","PSO SPMP5 MENU",32)

"BLD",8925,"KRN",101,"NM","B","PSO SPMP5 SELECT",33)

"BLD",8925,"KRN",101,"NM","B","VALM DOWN A LINE",20)

"BLD",8925,"KRN",101,"NM","B","VALM FIRST SCREEN",30)

"BLD",8925,"KRN",101,"NM","B","VALM GOTO PAGE",31)

"BLD",8925,"KRN",101,"NM","B","VALM LAST SCREEN",29)

"BLD",8925,"KRN",101,"NM","B","VALM LEFT",25)

"BLD",8925,"KRN",101,"NM","B","VALM NEXT SCREEN",17)

"BLD",8925,"KRN",101,"NM","B","VALM PREVIOUS SCREEN",18)

"BLD",8925,"KRN",101,"NM","B","VALM PRINT LIST",23)

"BLD",8925,"KRN",101,"NM","B","VALM PRINT SCREEN",22)

"BLD",8925,"KRN",101,"NM","B","VALM QUIT",28)

"BLD",8925,"KRN",101,"NM","B","VALM REFRESH",21)

"BLD",8925,"KRN",101,"NM","B","VALM RIGHT",24)

"BLD",8925,"KRN",101,"NM","B","VALM SEARCH LIST",27)

"BLD",8925,"KRN",101,"NM","B","VALM TURN ON/OFF MENUS",26)

"BLD",8925,"KRN",101,"NM","B","VALM UP ONE LINE",19)

"BLD",8925,"KRN",409.61,0)
409.61
"BLD",8925,"KRN",409.61,"NM",0)
^9.68A^7^5
"BLD",8925,"KRN",409.61,"NM",1,0)
PSO SPMP VIEW ASAP DEFINITION^^0
"BLD",8925,"KRN",409.61,"NM",4,0)
PSO SPMP BATCH PROCESSING^^0
"BLD",8925,"KRN",409.61,"NM",5,0)
PSO SPMP VIEW/EXPORT BATCH^^0
"BLD",8925,"KRN",409.61,"NM",6,0)
PSO SPMP VIEW/EXPORT RX^^0
"BLD",8925,"KRN",409.61,"NM",7,0)
PSO SPMP DISCLOSURE REPORT^^0
"BLD",8925,"KRN",409.61,"NM","B","PSO SPMP BATCH PROCESSING",4)

"BLD",8925,"KRN",409.61,"NM","B","PSO SPMP DISCLOSURE REPORT",7)

"BLD",8925,"KRN",409.61,"NM","B","PSO SPMP VIEW ASAP DEFINITION",1)

"BLD",8925,"KRN",409.61,"NM","B","PSO SPMP VIEW/EXPORT BATCH",5)

"BLD",8925,"KRN",409.61,"NM","B","PSO SPMP VIEW/EXPORT RX",6)

"BLD",8925,"KRN",771,0)
771
"BLD",8925,"KRN",771,"NM",0)
^9.68A^^
"BLD",8925,"KRN",779.2,0)
779.2
"BLD",8925,"KRN",870,0)
870
"BLD",8925,"KRN",8989.51,0)
8989.51
"BLD",8925,"KRN",8989.52,0)
8989.52
"BLD",8925,"KRN",8994,0)
8994
"BLD",8925,"KRN","B",.4,.4)

"BLD",8925,"KRN","B",.401,.401)

"BLD",8925,"KRN","B",.402,.402)

"BLD",8925,"KRN","B",.403,.403)

"BLD",8925,"KRN","B",.5,.5)

"BLD",8925,"KRN","B",.84,.84)

"BLD",8925,"KRN","B",3.6,3.6)

"BLD",8925,"KRN","B",3.8,3.8)

"BLD",8925,"KRN","B",9.2,9.2)

"BLD",8925,"KRN","B",9.8,9.8)

"BLD",8925,"KRN","B",19,19)

"BLD",8925,"KRN","B",19.1,19.1)

"BLD",8925,"KRN","B",101,101)

"BLD",8925,"KRN","B",409.61,409.61)

"BLD",8925,"KRN","B",771,771)

"BLD",8925,"KRN","B",779.2,779.2)

"BLD",8925,"KRN","B",870,870)

"BLD",8925,"KRN","B",8989.51,8989.51)

"BLD",8925,"KRN","B",8989.52,8989.52)

"BLD",8925,"KRN","B",8994,8994)

"BLD",8925,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",8925,"QUES",0)
^9.62^^
"BLD",8925,"REQB",0)
^9.611^6^4
"BLD",8925,"REQB",1,0)
PSO*7.0*403^2
"BLD",8925,"REQB",3,0)
OR*3.0*111^2
"BLD",8925,"REQB",5,0)
PSO*7.0*374^2
"BLD",8925,"REQB",6,0)
PSO*7.0*313^2
"BLD",8925,"REQB","B","OR*3.0*111",3)

"BLD",8925,"REQB","B","PSO*7.0*313",6)

"BLD",8925,"REQB","B","PSO*7.0*374",5)

"BLD",8925,"REQB","B","PSO*7.0*403",1)

"DATA",58.4,1,0)
ASAP RECORD DEFINITION
"DATA",58.4,1,"VER",0)
^58.4001^6^5
"DATA",58.4,1,"VER",1,0)
ALL
"DATA",58.4,1,"VER",1,"SEG",0)
^58.40011I^10^10
"DATA",58.4,1,"VER",1,"SEG",1,0)
TH^Transaction Header^^R^1
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",0)
^58.400111I^9^9
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",1,0)
TH01^Version / Release Number^AN^4^1^R
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",1,"DES",0)
^^1^1^3120813^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",1,"DES",1,0)
Code uniquely identifying the transaction. Format = xx.x
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",2,0)
TH02^Transaction Control Number^AN^40^2^R
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",2,"DES",0)
^^2^2^3121011^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",2,"DES",1,0)
Sender assigned code uniquely identifying a transaction. The same value 
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",2,"DES",2,0)
must also be reported in TT01.
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",3,0)
TH03^Transaction Type^N^2^3^O
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",3,"DES",0)
^58.4001111^5^5^3121011^^^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",3,"DES",1,0)
Identifies the purpose of initiating the transaction.
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",3,"DES",2,0)
  01 Send/Request Transaction
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",3,"DES",3,0)
  02 Acknowledgment (Used in Response only.)
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",3,"DES",4,0)
  03 Error Receiving (Used in Response only.)
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",3,"DES",5,0)
  04 Void (Used to void an Rx in real-time transmission or a batch)
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",4,0)
TH04^Response ID^AN^40^4^N
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",4,"DES",0)
^58.4001111^2^2^3130513^^^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",4,"DES",1,0)
Contains the Transaction Control Number of a transaction that initiated 
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",4,"DES",2,0)
the transaction. Required in response transaction only.
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",5,0)
TH05^Creation Date^DT^8^5^R
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",5,"DES",0)
^^1^1^3120813^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",5,"DES",1,0)
Date the transaction was created. Format: CCYYMMDD.
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",6,0)
TH06^Creation Time^TM^6^6^R
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",6,"DES",0)
^^1^1^3120813^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",6,"DES",1,0)
Time the transaction was created. Format: HHMMSS or HHMM.
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",7,0)
TH07^File Type^AN^1^7^R
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",7,"DES",0)
^^3^3^3120813^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",7,"DES",1,0)
Code specifying the type of transaction.
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",7,"DES",2,0)
  P Production
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",7,"DES",3,0)
  T Test
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",8,0)
TH08^Routing Number^N^6^8^N
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",8,"DES",0)
^58.4001111^3^3^3130513^^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",8,"DES",1,0)
This field is reserved for real-time transactions that go through a 
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",8,"DES",2,0)
network switch to indicate, if necessary, the specific state PMP that the 
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",8,"DES",3,0)
transactions should be routed to.
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",9,0)
TH09^Data Segment Terminator Character^AN^1^9^R
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",9,"DES",0)
^^2^2^3120823^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",9,"DES",1,0)
This terminates the TH segment and sets the actual value of the data 
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",9,"DES",2,0)
segment terminator for the entire transaction.
"DATA",58.4,1,"VER",1,"SEG",2,0)
IS^Information Source^TH^R^2
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",0)
^58.400111I^3^3
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",1,0)
IS01^Unique Information Source ID^AN^10^1^R
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",1,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",1,"DES",1,0)
Reference number or identification number as defined by the business 
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",1,"DES",2,0)
partners. (Example: Phone number).
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",2,0)
IS02^Information Source Entity Name^AN^60^2^R
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",2,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",2,"DES",1,0)
Entity name of the Information Source.
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",3,0)
IS03^Message^AN^60^3^N
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",3,"DES",0)
^58.4001111^2^2^3130510^^^
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",3,"DES",1,0)
Free-form text message. Used for more detailed information if required by 
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",3,"DES",2,0)
the PMP.
"DATA",58.4,1,"VER",1,"SEG",3,0)
PHA^Pharmacy Header^IS^R^1
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",0)
^58.400111I^12^12
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",1,0)
PHA01^National Provider Identifier (NPI)^AN^10^1^O
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",1,"DES",0)
^58.4001111^1^1^3120814^^^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",1,"DES",1,0)
Identifier assigned to the pharmacy by CMS. Used if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",2,0)
PHA02^NCPDP/NABP Provider ID^AN^10^2^O
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",2,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",2,"DES",1,0)
Identifier assigned to pharmacy by the National Council for Prescription 
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",2,"DES",2,0)
Drug Programs. Used if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",3,0)
PHA03^DEA Number^AN^10^3^O
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",3,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",3,"DES",1,0)
Identifier assigned to the pharmacy by the Drug Enforcement 
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",3,"DES",2,0)
Administration. Used if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",4,0)
PHA04^Pharmacy Name^AN^60^4^O
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",4,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",4,"DES",1,0)
Free-form name of the pharmacy.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",5,0)
PHA05^Address Information - 1^AN^30^5^O
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",5,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",5,"DES",1,0)
Free-form text for address information.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",6,0)
PHA06^Address Information - 2^AN^30^6^O
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",6,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",6,"DES",1,0)
Free-form text for additional address information.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",7,0)
PHA07^City Address^AN^25^7^O
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",7,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",7,"DES",1,0)
Free-form text for the city name.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",8,0)
PHA08^State Address^AN^2^8^O
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",8,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",8,"DES",1,0)
U.S. Postal Service state code.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",9,0)
PHA09^ZIP Code Address^AN^9^9^O
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",9,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",9,"DES",1,0)
U.S. Postal Service ZIP Code. Use if available.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",10,0)
PHA10^Phone Number^AN^10^10^O
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",10,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",10,"DES",1,0)
Complete phone number including area code.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",11,0)
PHA11^Contact Name^AN^30^11^N
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",11,"DES",0)
^58.4001111^1^1^3130510^^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",11,"DES",1,0)
Free-form contact name.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",12,0)
PHA12^Chain Site ID^AN^10^12^N
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",12,"DES",0)
^58.4001111^3^3^3130510^^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",12,"DES",1,0)
Store number assigned by the chain to the pharmacy location. Used when 
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",12,"DES",2,0)
PMP needs to identify the specific pharmacy from which information is 
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",12,"DES",3,0)
required.
"DATA",58.4,1,"VER",1,"SEG",4,0)
PAT^Patient Information^PHA^R^1
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",0)
^58.400111I^24^24
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",1,0)
PAT01^ID Qualifier of Issuing Jurisdiction^AN^3^1^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",1,"DES",0)
^58.4001111^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",1,"DES",1,0)
Code identifying the jurisdiction that issues the ID in PAT03. Used if 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",1,"DES",2,0)
the PMP requires such identification and PAT02 is equal to 02 or 06.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,0)
PAT02^ID Qualifier^N^2^2^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",0)
^58.4001111^11^11^3120829^^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",1,0)
Code to identify the type of ID in PAT03. If PAT02 is used, PAT03 is 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",2,0)
required.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",3,0)
  01 Military ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",4,0)
  02 State Issued ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",5,0)
  03 Unique System ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",6,0)
  04 Permanent Resident Card (Green Card)
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",7,0)
  05 Passport ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",8,0)
  06 Driver's License ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",9,0)
  07 Social Security Number
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",10,0)
  08 Tribal ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",11,0)
  99 Other (Trading partner agreed upon ID, such as cardholder ID.)
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",3,0)
PAT03^ID of Patient^AN^20^3^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",3,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",3,"DES",1,0)
Identification number for the patient as indicated in PAT02. An example 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",3,"DES",2,0)
would be the driver's license number.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",4,0)
PAT04^Additional ID Qualifier of Issuing Jurisdiction^AN^3^4^N
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",4,"DES",0)
^58.4001111^2^2^3130510^^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",4,"DES",1,0)
Code identifying the jurisdiction that issues the ID in PAT06. Used if 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",4,"DES",2,0)
the PMP requires such identification and PAT05 is equal to 02 or 06. 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,0)
PAT05^Additional Patient ID Qualifier^AN^2^5^N
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",0)
^58.4001111^11^11^3130510^^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",1,0)
Code to identify the type of ID in PAT06 if the PMP requires a second 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",2,0)
identifier. If PAT05 is used, PAT06 is required.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",3,0)
  01 Military ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",4,0)
  02 State Issued ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",5,0)
  03 Unique System ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",6,0)
  04 Permanent Resident Card (Green Card)
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",7,0)
  05 Passport ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",8,0)
  06 Driver's License ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",9,0)
  07 Social Security Number
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",10,0)
  08 Tribal ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",11,0)
  99 Other (Trading partner agreed upon ID, such as cardholder ID.)
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",6,0)
PAT06^Additional ID^AN^20^6^N
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",6,"DES",0)
^58.4001111^4^4^3130510^^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",6,"DES",1,0)
Identification that might be required by the PMP for 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",6,"DES",2,0)
Prescription-Monitoring Programs to further identify the individual. An 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",6,"DES",3,0)
example might be in that PAT03 driver's license is required and in PAT06 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",6,"DES",4,0)
Social Security number is also required.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",7,0)
PAT07^Last Name^AN^50^7^R
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",7,"DES",0)
^58.4001111^1^1^3120814^^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",7,"DES",1,0)
Patient's last name.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",8,0)
PAT08^First Name^AN^50^8^R
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",8,"DES",0)
^58.4001111^1^1^3120814^^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",8,"DES",1,0)
Patient's first name.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",9,0)
PAT09^Middle Name^AN^30^9^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",9,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",9,"DES",1,0)
Patient's middle name or initial if available. Used if available in 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",9,"DES",2,0)
pharmacy system and required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",10,0)
PAT10^Name Prefix^AN^10^10^N
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",10,"DES",0)
^58.4001111^2^2^3130513^^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",10,"DES",1,0)
Patient's name prefix such as Mr. or Dr. Used if available in pharmacy 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",10,"DES",2,0)
system and required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",11,0)
PAT11^Name Suffix^AN^10^11^N
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",11,"DES",0)
^58.4001111^2^2^3130513^^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",11,"DES",1,0)
Patient's name suffix such as Jr. or the III. Used if available in 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",11,"DES",2,0)
pharmacy system and if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",12,0)
PAT12^Address Information - 1^AN^30^12^R
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",12,"DES",0)
^58.4001111^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",12,"DES",1,0)
Free-form text for street address information.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",13,0)
PAT13^Address Information - 2^AN^30^13^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",13,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",13,"DES",1,0)
Free-form text for additional address information, if required by the PMP 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",13,"DES",2,0)
and is available in pharmacy system.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",14,0)
PAT14^City Address^AN^20^14^R
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",14,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",14,"DES",1,0)
Free-form text for city name.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",15,0)
PAT15^State Address^AN^10^15^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",15,"DES",0)
^^3^3^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",15,"DES",1,0)
U.S. Postal Service state code if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",15,"DES",2,0)
Note: Field has been sized to handle international patients not residing 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",15,"DES",3,0)
in the U.S.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",16,0)
PAT16^ZIP Code Address^AN^9^16^R
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",16,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",16,"DES",1,0)
U.S. Postal Service ZIP code. Populate with zeros if patient address is 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",16,"DES",2,0)
outside the U.S.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",17,0)
PAT17^Phone Number^AN^10^17^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",17,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",17,"DES",1,0)
Complete phone number including area code when a state PMP requires and 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",17,"DES",2,0)
is available in the pharmacy system.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",18,0)
PAT18^Date of Birth^DT^8^18^R
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",18,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",18,"DES",1,0)
Date patient was born. Format: CCYYMMDD.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",19,0)
PAT19^Gender Code^AN^1^19^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",19,"DES",0)
^^4^4^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",19,"DES",1,0)
Code indicating the sex of the patient if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",19,"DES",2,0)
  F Female 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",19,"DES",3,0)
  M Male
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",19,"DES",4,0)
  U Unknown
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",20,0)
PAT20^Species Code^N^2^20^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",20,"DES",0)
^^4^4^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",20,"DES",1,0)
Used if required by the PMP to differentiate a prescription for an 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",20,"DES",2,0)
individual from one prescribed for an animal.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",20,"DES",3,0)
  01 Human
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",20,"DES",4,0)
  02 Veterinary Patient
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",21,0)
PAT21^Patient Location Code^N^2^21^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",21,"DES",0)
^^15^15^3120815^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",21,"DES",1,0)
Code indicating where patient is located when receiving pharmacy services 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",21,"DES",2,0)
if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",21,"DES",3,0)
  01 Home
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",21,"DES",4,0)
  02 Intermediary Care
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",21,"DES",5,0)
  03 Nursing Home
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",21,"DES",6,0)
  04 Long-Term/Extended Care
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",21,"DES",7,0)
  05 Rest Home
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",21,"DES",8,0)
  06 Boarding Home
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",21,"DES",9,0)
  07 Skilled-Care Facility
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",21,"DES",10,0)
  08 Sub-Acute Care Facility
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",21,"DES",11,0)
  09 Acute-Care Facility
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",21,"DES",12,0)
  10 Outpatient
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",21,"DES",13,0)
  11 Hospice
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",21,"DES",14,0)
  98 Unknown
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",21,"DES",15,0)
  99 Other
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",22,0)
PAT22^Country of Non-U.S. Resident^AN^20^22^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",22,"DES",0)
^^2^2^3120815^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",22,"DES",1,0)
Used when the patient's address is a foreign country and PAT12 through 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",22,"DES",2,0)
PAT16 are left blank. This is a freeform text field.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",23,0)
PAT10^Name Prefix^AN^10^10^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",23,"DES",0)
^58.4001111^2^2^3131001^^^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",23,"DES",1,0)
Patient's name prefix such as Mr. or Dr. Used if available in pharmacy 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",23,"DES",2,0)
system and required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",24,0)
PAT11^Name Suffix^AN^10^11^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",24,"DES",0)
^58.4001111^2^2^3131001^^^^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",24,"DES",1,0)
Patient's name suffix such as Jr. or the III. Used if available in 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",24,"DES",2,0)
pharmacy system and if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",5,0)
DSP^Dispensing Record^PAT^R^2
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",0)
^58.400111I^21^21
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,0)
DSP01^Reporting Status^N^2^1^R
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"DES",0)
^^10^10^3121011^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"DES",1,0)
Required when reporting a change or cancellation of a previously 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"DES",2,0)
transmitted prescription record. 00 indicates a new prescription 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"DES",3,0)
dispensing transaction. 01 would be used when information on the
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"DES",4,0)
original prescription, including patient information, has been changed. 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"DES",5,0)
02 would be used when the prescription was not picked up and returned to 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"DES",6,0)
stock.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"DES",7,0)
  00 New Record (Not available for ASAP 4.0)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"DES",8,0)
  01 Change/Revise
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"DES",9,0)
  02 Cancel/Void (Rx not picked up and returned to stock)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"DES",10,0)
  03 Purged (Rx reported in error) (Available in 4.0 only)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",2,0)
DSP02^Prescription Number^AN^25^2^R
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",2,"DES",0)
^58.4001111^1^1^3120814^^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",2,"DES",1,0)
Serial number assigned to the prescription by the pharmacy.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",3,0)
DSP03^Date Written^DT^8^3^R
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",3,"DES",0)
^58.4001111^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",3,"DES",1,0)
Date the prescription was written (authorized). Format: CCYYMMDD.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",4,0)
DSP04^Refills Authorized^N^2^4^R
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",4,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",4,"DES",1,0)
The number of refills authorized by the prescriber.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",5,0)
DSP05^Date Filled^DT^8^5^R
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",5,"DES",0)
^58.4001111^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",5,"DES",1,0)
Date prescription was filled. Format: CCYYMMDD.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",6,0)
DSP06^Refill Number^N^2^6^R
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",6,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",6,"DES",1,0)
Number of the fill of the prescription. 0 indicates New Rx, 01-99 is the 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",6,"DES",2,0)
refill number.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",7,0)
DSP07^Product ID Qualifier^N^2^7^R
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",7,"DES",0)
^^7^7^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",7,"DES",1,0)
Used to identify the type of product ID contained in DSP08.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",7,"DES",2,0)
  01 NDC
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",7,"DES",3,0)
  02 UPC
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",7,"DES",4,0)
  03 HRI
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",7,"DES",5,0)
  04 UPN
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",7,"DES",6,0)
  05 DIN
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",7,"DES",7,0)
  06 CPD (used for a compound)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",8,0)
DSP08^Product ID^AN^15^8^R
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",8,"DES",0)
^^4^4^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",8,"DES",1,0)
Full product identification as indicated in DSP07, including leading 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",8,"DES",2,0)
zeros without punctuation. If the product is a compound, use 99999 as the 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",8,"DES",3,0)
first five characters of the product code. The remaining characters are 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",8,"DES",4,0)
assigned by the pharmacy. The CDI then becomes a required segment.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",9,0)
DSP09^Quantity Dispensed^D^11^9^R
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",9,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",9,"DES",1,0)
Number of metric units dispensed in metric decimal format.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",9,"DES",2,0)
Example: 2.5. Note: For compounds show the first quantity in CDI04.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",10,0)
DSP10^Days Supply^N^3^10^R
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",10,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",10,"DES",1,0)
Estimated number of days the medication will last.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",11,0)
DSP11^Drug Dosage Units Code^N^2^11^O
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",11,"DES",0)
^58.4001111^6^6^3120814^^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",11,"DES",1,0)
Identifies the unit of measure for the quantity dispensed in DSP09.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",11,"DES",2,0)
  01 Each (used to report as package)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",11,"DES",3,0)
  02 Milliliters (ml) (for liters adjust to the decimal
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",11,"DES",4,0)
     milliliter equivalent)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",11,"DES",5,0)
  03 Grams (gm) (for milligrams adjust to the decimal gram
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",11,"DES",6,0)
     equivalent)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",12,0)
DSP12^Transmission Form of Rx Origin Code^N^2^12^O
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",12,"DES",0)
^^8^8^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",12,"DES",1,0)
Code indicating how the pharmacy received the prescription, if required 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",12,"DES",2,0)
by the PMP.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",12,"DES",3,0)
  01 Written Prescription
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",12,"DES",4,0)
  02 Telephone Prescription
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",12,"DES",5,0)
  03 Telephone Emergency Prescription
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",12,"DES",6,0)
  04 Fax Prescription
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",12,"DES",7,0)
  05 Electronic Prescription
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",12,"DES",8,0)
  99 Other
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,0)
DSP13^Partial Fill Indicator^N^2^13^O
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",0)
^^13^13^3121023^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",1,0)
To indicate whether it is a partial fill, if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",2,0)
 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",3,0)
For ASAP 4.0 and 4.1:
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",4,0)
 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",5,0)
  01 Yes (a partial fill)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",6,0)
  02 No (not a partial fill)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",7,0)
 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",8,0)
For ASAP 4.2:
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",9,0)
 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",10,0)
  00 Not a Partial Fill
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",11,0)
  01 First Partial Fill
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",12,0)
  02 Second Partial Fill
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",13,0)
  .. ...
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",14,0)
DSP14^Pharmacist National Provider Identifier (NPI)^AN^10^14^O
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",14,"DES",0)
^^3^3^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",14,"DES",1,0)
Identifier assigned to the pharmacist by CMS if the pharmacist applies 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",14,"DES",2,0)
for a number. This number can be used to identify the pharmacist 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",14,"DES",3,0)
dispensing the medication.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",15,0)
DSP15^Pharmacist State License Number^AN^10^15^O
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",15,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",15,"DES",1,0)
This data element can be used to identify the pharmacist dispensing the 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",15,"DES",2,0)
medication. Assigned to the pharmacist by the State Licensing Board.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,0)
DSP16^Classification Code for Payment Type^N^2^16^O
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"DES",0)
^^10^10^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"DES",1,0)
Code identifying the type of payment, i.e. how it was paid for, if 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"DES",2,0)
required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"DES",3,0)
  01 Private Pay (Cash, Charge, Credit Card)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"DES",4,0)
  02 Medicaid
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"DES",5,0)
  03 Medicare
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"DES",6,0)
  04 Commercial Insurance
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"DES",7,0)
  05 Military Installations and VA
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"DES",8,0)
  06 Workers' Compensation
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"DES",9,0)
  07 Indian Nations
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"DES",10,0)
  99 Other
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",17,0)
DSP17^Date Sold^DT^8^17^N
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",17,"DES",0)
^58.4001111^5^5^3130513^^^^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",17,"DES",1,0)
Usage of this field depends on the pharmacy having a point-of-sale system 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",17,"DES",2,0)
that is integrated with the pharmacy management system to allow a 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",17,"DES",3,0)
bidirectional flow of information, and the PMP wants to capture the date 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",17,"DES",4,0)
received by the patient or the patient's agent. This date may be 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",17,"DES",5,0)
different from DSP05.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",18,0)
DSP19^RxNorm Code^AN^15^19^N
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",18,"DES",0)
^58.4001111^2^2^3130513^^^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",18,"DES",1,0)
Used for electronic prescriptions to capture the prescribed drug product 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",18,"DES",2,0)
identification, if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",19,0)
DSP20^Electronic Prescription Reference Number^N^30^20^N
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",19,"DES",0)
^58.4001111^2^2^3130513^^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",19,"DES",1,0)
Used to provide an audit trail for electronic prescriptions, if required 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",19,"DES",2,0)
by the PMP. DSP20 and DSP21 should be reported as a pair.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",20,0)
DSP21^Electronic Prescription Order Number^N^30^21^N
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",20,"DES",0)
^58.4001111^2^2^3130513^^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",20,"DES",1,0)
Used to provide an audit trail for electronic prescriptions, if required 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",20,"DES",2,0)
by the PMP. DSP20 and DSP21 should be reported as a pair.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",21,0)
DSP18^RxNorm Product Qualifier^N^2^18^N
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",21,"DES",0)
^58.4001111^5^5^3130514^^^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",21,"DES",1,0)
RxNorm Product Qualifier:
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",21,"DES",2,0)
  01 Semantic Clinical Drug (SCD)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",21,"DES",3,0)
  02 Semantic Branded Drug (SBD)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",21,"DES",4,0)
  03 Generic Package (GPCK)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",21,"DES",5,0)
  04 Branded Package (BPCK)
"DATA",58.4,1,"VER",1,"SEG",6,0)
PRE^Prescriber Information^DSP^R^1
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",0)
^58.400111I^8^8
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",1,0)
PRE01^National Provider Identifier (NPI)^AN^10^1^O
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",1,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",1,"DES",1,0)
Identifier assigned to the prescriber by CMS.
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",2,0)
PRE02^DEA Number^AN^10^2^R
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",2,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",2,"DES",1,0)
Identifying number assigned to a prescriber or an institution by the Drug 
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",2,"DES",2,0)
Enforcement Administration (DEA).
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",3,0)
PRE03^DEA Number Suffix^AN^7^3^O
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",3,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",3,"DES",1,0)
Identifying number assigned to a prescriber by an institution when the 
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",3,"DES",2,0)
institution's number is used as the DEA number.
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",4,0)
PRE04^Prescriber State License Number^AN^10^4^O
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",4,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",4,"DES",1,0)
Identification assigned to the Prescriber by the State Licensing Board. 
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",4,"DES",2,0)
Used if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",5,0)
PRE05^Last Name^AN^50^5^O
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",5,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",5,"DES",1,0)
Prescriber's last name. Used if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",6,0)
PRE06^First Name^AN^50^6^O
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",6,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",6,"DES",1,0)
Prescriber's first name. Used if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",7,0)
PRE07^Middle Name^AN^30^7^O
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",7,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",7,"DES",1,0)
Prescriber's middle name or initial. Used if required and is available in 
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",7,"DES",2,0)
the pharmacy system.
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",8,0)
PRE08^Phone Number^AN^10^8^O
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",8,"DES",0)
^58.4001111^1^1^3120815^
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",8,"DES",1,0)
Complete phone number including area code.
"DATA",58.4,1,"VER",1,"SEG",7,0)
CDI^Compound Drug Ingredient Detail^DSP^N^2
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",0)
^58.400111I^5^5
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",1,0)
CDI01^Compound Drug Ingredient Sequence Number^N^2^1^R
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",1,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",1,"DES",1,0)
Increment by 1 for each compounding ingredient being reported.
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",2,0)
CDI02^Product ID Qualifier^N^2^2^R
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",2,"DES",0)
^^7^7^3120814^
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",2,"DES",1,0)
Code to identify the type of product ID contained in CDI03.
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",2,"DES",2,0)
  01 NDC
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",2,"DES",3,0)
  02 UPC
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",2,"DES",4,0)
  03 HRI
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",2,"DES",5,0)
  04 UPN
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",2,"DES",6,0)
  05 DIN
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",2,"DES",7,0)
  06 CPD (This code is not used in this segment.)
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",3,0)
CDI03^Product ID^AN^15^3^R
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",3,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",3,"DES",1,0)
Full product identification as indicated in CDI02, including leading 
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",3,"DES",2,0)
zeros without punctuation.
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",4,0)
CDI04^Component Ingredient Quantity^D^11^4^R
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",4,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",4,"DES",1,0)
Metric decimal quantity of the ingredient identified in CDI03.
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",4,"DES",2,0)
Example: 2.5.
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",5,0)
CDI05^Compound Drug Dosage Units Code^N^2^5^O
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",5,"DES",0)
^58.4001111^7^7^3120815^^
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",5,"DES",1,0)
Identifies the unit of measure for the quantity dispensed in CDI04, if 
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",5,"DES",2,0)
required by the prescription-monitoring program.
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",5,"DES",3,0)
  01 Each (used to report as package)
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",5,"DES",4,0)
  02 Milliliters (ml) (for liters adjust to the
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",5,"DES",5,0)
     decimal milliliter equivalent)
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",5,"DES",6,0)
  03 Grams (gm) (for milligrams adjust to the
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",5,"DES",7,0)
     decimal gram equivalent)
"DATA",58.4,1,"VER",1,"SEG",8,0)
AIR^Additional Information Reporting^DSP^N^3
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",0)
^58.400111I^11^11
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",1,0)
AIR01^State Issuing Rx Serial Number^AN^2^1^O
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",1,"DES",0)
^^2^2^3120822^
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",1,"DES",1,0)
USPS state code of state that issued serialized prescription blank. This 
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",1,"DES",2,0)
is required if AIR02 is used.
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",2,0)
AIR02^State Issued Rx Serial Number^AN^20^2^O
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",2,"DES",0)
^58.4001111^2^2^3120823^^
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",2,"DES",1,0)
Number assigned to state issued serialized prescription blank. Required 
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",2,"DES",2,0)
if state issues serialized prescription pads for prescribers to use.
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",3,0)
AIR03^Issuing Jurisdiction^AN^3^3^O
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",3,"DES",0)
^^2^2^3120815^
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",3,"DES",1,0)
Code identifying the jurisdiction that issues the ID in AIR04. Used if 
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",3,"DES",2,0)
required by the PMP and AIR04 is equal to 02 or 06.
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",4,0)
AIR04^ID Qualifier of Person Dropping Off or Picking Up Rx^N^2^4^O
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",4,"DES",0)
^^11^11^3120815^
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",4,"DES",1,0)
Used to identify the type of ID contained in AIR05 for person dropping 
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",4,"DES",2,0)
off or picking up the prescription, if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",4,"DES",3,0)
  01 Military ID
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",4,"DES",4,0)
  02 State Issued ID
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",4,"DES",5,0)
  03 Unique System ID
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",4,"DES",6,0)
  04 Permanent Resident Card (Green Card)
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",4,"DES",7,0)
  05 Passport ID
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",4,"DES",8,0)
  06 Driver's License ID
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",4,"DES",9,0)
  07 Social Security Number
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",4,"DES",10,0)
  08 Tribal ID
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",4,"DES",11,0)
  99 Other (Trading partner agreed upon ID)
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",5,0)
AIR05^ID of Person Dropping Off or Picking Up Rx^AN^20^5^O
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",5,"DES",0)
^^2^2^3120815^
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",5,"DES",1,0)
ID number of patient or person picking up or dropping off the 
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",5,"DES",2,0)
prescription, if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",6,0)
AIR06^Relationship of Person Dropping Off or Picking Up Rx^N^2^6^O
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",6,"DES",0)
^^6^6^3120815^
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",6,"DES",1,0)
Code indicating the relationship of the person, if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",6,"DES",2,0)
  01 Patient
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",6,"DES",3,0)
  02 Parent/Legal Guardian
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",6,"DES",4,0)
  03 Spouse
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",6,"DES",5,0)
  04 Caregiver
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",6,"DES",6,0)
  99 Other
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",7,0)
AIR07^Last Name of Person Dropping Off or Picking Up Rx^AN^50^7^O
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",7,"DES",0)
^^1^1^3120815^
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",7,"DES",1,0)
Last name of person picking up the prescription, if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",8,0)
AIR08^First Name of Person Dropping Off or Picking Up Rx^AN^50^8^O
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",8,"DES",0)
^^1^1^3120815^
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",8,"DES",1,0)
First name of person picking up the prescription, if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",9,0)
AIR09^Last Name or Initials of Pharmacist^AN^50^9^O
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",9,"DES",0)
^^2^2^3120815^
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",9,"DES",1,0)
Last name or initials of pharmacist dispensing the medication, if 
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",9,"DES",2,0)
required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",10,0)
AIR10^First Name of Pharmacist^AN^50^10^O
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",10,"DES",0)
^^2^2^3121106^
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",10,"DES",1,0)
First name of pharmacist dispensing the medication, if required by the 
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",10,"DES",2,0)
PMP.
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",11,0)
AIR11^Dropping Off/Picking Up Identifier Qualifier^N^2^11^O
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",11,"DES",0)
^58.4001111^4^4^3120815^
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",11,"DES",1,0)
Additional qualifier for the ID contained in AIR05
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",11,"DES",2,0)
  01 Person Dropping Off
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",11,"DES",3,0)
  02 Person Picking Up
"DATA",58.4,1,"VER",1,"SEG",8,"DAT",11,"DES",4,0)
  98 Unknown/Not Applicable
"DATA",58.4,1,"VER",1,"SEG",9,0)
TP^Pharmacy Trailer^IS^R^2
"DATA",58.4,1,"VER",1,"SEG",9,"DAT",0)
^58.400111I^1^1
"DATA",58.4,1,"VER",1,"SEG",9,"DAT",1,0)
TP01^Detail Segment Count^N^10^1^R
"DATA",58.4,1,"VER",1,"SEG",9,"DAT",1,"DES",0)
^58.4001111^2^2^3120815^^
"DATA",58.4,1,"VER",1,"SEG",9,"DAT",1,"DES",1,0)
Number of detail segments included for the pharmacy including the 
"DATA",58.4,1,"VER",1,"SEG",9,"DAT",1,"DES",2,0)
pharmacy header (PHA) and the pharmacy trailer (TP) segments.
"DATA",58.4,1,"VER",1,"SEG",10,0)
TT^Transaction Trailer^^R^2
"DATA",58.4,1,"VER",1,"SEG",10,"DAT",0)
^58.400111I^2^2
"DATA",58.4,1,"VER",1,"SEG",10,"DAT",1,0)
TT01^Transaction Control Number^AN^40^1^R
"DATA",58.4,1,"VER",1,"SEG",10,"DAT",1,"DES",0)
^58.4001111^2^2^3120815^
"DATA",58.4,1,"VER",1,"SEG",10,"DAT",1,"DES",1,0)
Identifying control number that must be unique. Assigned by the 
"DATA",58.4,1,"VER",1,"SEG",10,"DAT",1,"DES",2,0)
originator of the transaction. Must match the number in TH02.
"DATA",58.4,1,"VER",1,"SEG",10,"DAT",2,0)
TT02^Segment Count^N^10^2^R
"DATA",58.4,1,"VER",1,"SEG",10,"DAT",2,"DES",0)
^58.4001111^2^2^3130514^^
"DATA",58.4,1,"VER",1,"SEG",10,"DAT",2,"DES",1,0)
Total number of segments included in the transaction including the header 
"DATA",58.4,1,"VER",1,"SEG",10,"DAT",2,"DES",2,0)
and trailer segments.
"DATA",58.4,1,"VER",2,0)
4.1
"DATA",58.4,1,"VER",2,"SEG",0)
^58.40011I^4^3
"DATA",58.4,1,"VER",2,"SEG",2,0)
DSP^Dispensing Record^PAT^R^2
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",0)
^58.400111I^5^4
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",2,0)
DSP18^RxNormCode^AN^15^18^N
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",2,"DES",0)
^58.4001111^2^2^3130513^^^
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",2,"DES",1,0)
Used for electronic prescriptions to capture the prescribed drug product 
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",2,"DES",2,0)
identification, if required by the PMP.
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",3,0)
DSP19^Electronic Prescription Reference Number^N^30^19^N
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",3,"DES",0)
^58.4001111^2^2^3130513^^^
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",3,"DES",1,0)
Used to provide an audit trail for electronic prescriptions, if required 
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",3,"DES",2,0)
by the PMP.
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",4,0)
DSP20^Electronic Prescription Reference Number^^^20^N
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",5,0)
DSP21^Electronic Prescription Order Number^^^21^N
"DATA",58.4,1,"VER",2,"SEG",3,0)
PRE^Prescriber Information^DSP^R^1
"DATA",58.4,1,"VER",2,"SEG",3,"DAT",0)
^58.400111I^1^1
"DATA",58.4,1,"VER",2,"SEG",3,"DAT",1,0)
PRE08^Phone Number^^^8^N
"DATA",58.4,1,"VER",2,"SEG",4,0)
AIR^Additional Information Reporting^DSP^N^3
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",0)
^58.400111I^1^1
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",1,0)
AIR11^Dropping Off/Picking Up Identifier Qualifier^^^11^N
"DATA",58.4,1,"VER",3,0)
4.0
"DATA",58.4,1,"VER",3,"SEG",0)
^58.40011I^4^4
"DATA",58.4,1,"VER",3,"SEG",1,0)
DSP^Dispensing Record^PAT^R^2
"DATA",58.4,1,"VER",3,"SEG",1,"DAT",0)
^58.400111I^5^5
"DATA",58.4,1,"VER",3,"SEG",1,"DAT",1,0)
DSP17^Date Sold^^^17^N
"DATA",58.4,1,"VER",3,"SEG",1,"DAT",2,0)
DSP18^RxNorm Product Qualifier^^^18^N
"DATA",58.4,1,"VER",3,"SEG",1,"DAT",3,0)
DSP19^RxNorm Code^^^19^N
"DATA",58.4,1,"VER",3,"SEG",1,"DAT",4,0)
DSP20^Electronic Prescription Reference Number^^^20^N
"DATA",58.4,1,"VER",3,"SEG",1,"DAT",5,0)
DSP21^Electronic Prescription Order Number^^^21^N
"DATA",58.4,1,"VER",3,"SEG",2,0)
PAT^Patient Information^PHA^R^1
"DATA",58.4,1,"VER",3,"SEG",2,"DAT",0)
^58.400111I^2^2
"DATA",58.4,1,"VER",3,"SEG",2,"DAT",1,0)
PAT22^Country of Non-U.S. Resident^^^22^N
"DATA",58.4,1,"VER",3,"SEG",2,"DAT",2,0)
PAT23^Name of Animal^^^23^N
"DATA",58.4,1,"VER",3,"SEG",3,0)
PRE^Prescriber Information^DSP^R^1
"DATA",58.4,1,"VER",3,"SEG",3,"DAT",0)
^58.400111I^1^1
"DATA",58.4,1,"VER",3,"SEG",3,"DAT",1,0)
PRE08^Phone Number^^^8^N
"DATA",58.4,1,"VER",3,"SEG",4,0)
TH^Transaction Set Header^^R^1
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",0)
^58.400111I^2^2
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",1,0)
TH08^Composite Element Separator^AN^1^8^R
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",1,"DES",0)
^^1^1^3130916^
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",1,"DES",1,0)
The delimiter used to separate component data elements within a composite data structure.
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",2,0)
TH09^Data Segment Terminator Character^AN^1^9^N
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",2,"DES",0)
^^1^1^3130916^
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",2,"DES",1,0)
This terminates the TH segment and sets the actual value of the data segment terminator for the entire transaction.
"DATA",58.4,1,"VER",5,0)
1995
"DATA",58.4,1,"VER",6,0)
3.0
"DATA",58.4,1,"VER",6,"SEG",0)
^58.40011I^8^8
"DATA",58.4,1,"VER",6,"SEG",1,0)
IR^Information Receiver^TH^R^1
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",0)
^58.400111I^2^2
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",1,0)
IR01^Unique Information Receiver ID^AN^10^1^R
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",1,"DES",0)
^^1^1^3130509^
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",1,"DES",1,0)
Reference number or identification number as defined by the business partners.
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",2,0)
IR02^Information Receiver Entity Name^AN^60^2^R
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",2,"DES",0)
^58.4001111^1^1^3130509^
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",2,"DES",1,0)
Entity name of the Information Receiver (e.g., OKLAHOMA PMP PROGRAM).
"DATA",58.4,1,"VER",6,"SEG",2,0)
TH^Transaction Set Header^^R^1
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",0)
^58.400111I^12^12
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",1,0)
TH02^Business Partner Implemetation Version^^^2^N
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",2,0)
TH04^Transaction Type^^^4^N
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",3,0)
TH05^Message Type^^^5^N
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",4,0)
TH06^Response ID^^^6^N
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",5,0)
TH07^Project ID^^^7^N
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",6,0)
TH08^Creation Date^DT^8^8^R
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",6,"DES",0)
^^1^1^3130509^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",6,"DES",1,0)
Date the transaction set was created.
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",7,0)
TH09^Creation Time^TM^6^9^R
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",7,"DES",0)
^^1^1^3130509^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",7,"DES",1,0)
Time the transaction set was created.
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",8,0)
TH10^File Type^AN^1^10^R
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",8,"DES",0)
^^3^3^3130509^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",8,"DES",1,0)
Code specifying the type of transaction:
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",8,"DES",2,0)
     P - Production
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",8,"DES",3,0)
     T - Test
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",9,0)
TH11^Message^^^11^N
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",10,0)
TH12^Composite Element Separator^AN^1^12^R
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",10,"DES",0)
^58.4001111^2^2^3130509^^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",10,"DES",1,0)
The delimiter used to separate component data elements within a composite
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",10,"DES",2,0)
data structure.
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",11,0)
TH13^Data Segment Terminator Character^AN^1^13^N
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",11,"DES",0)
^58.4001111^2^2^3130916^^^^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",11,"DES",1,0)
This terminates the TH segment and sets the actual value of the data segment
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",11,"DES",2,0)
terminator for the entire transaction set.
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",12,0)
TH03^Transaction Control Number^AN^10^3^R
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",12,"DES",0)
^^1^1^3130509^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",12,"DES",1,0)
Sender assigned code uniquely identifying a transaction set.
"DATA",58.4,1,"VER",6,"SEG",3,0)
PAT^Patient Information^PHA^R^1
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",0)
^58.400111I^8^8
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",1,0)
PAT01^Reporting Status^N^2^1^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",1,"DES",0)
^^4^4^3130719^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",1,"DES",1,0)
Code to identify the status of the patient information to the receiving system.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",1,"DES",2,0)
  01  Add
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",1,"DES",3,0)
  02  Change
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",1,"DES",4,0)
  03  Delete
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",2,0)
PAT02^Program Participation Status^^^2^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",3,0)
PAT03^Unique System ID^^^3^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",4,0)
PAT04^Social Security Number^N^10^4^O
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",4,"DES",0)
^^1^1^3130510^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",4,"DES",1,0)
Number assigned to the patient by the Social Security Administration.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",5,0)
PAT18^Email Address^^^18^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",6,0)
PAT19^Date Of Birth^DT^8^19^R
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",6,"DES",0)
^^1^1^3130510^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",6,"DES",1,0)
Patient's date of birth.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",7,0)
PAT20^Gender Code^AN^1^20^R
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",7,"DES",0)
^^3^3^3130510^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",7,"DES",1,0)
Code indicating the patient's gender:
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",7,"DES",2,0)
     F - Female
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",7,"DES",3,0)
     M - Male
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",8,0)
PAT22^Primary Prescription Coverage Type^^^22^N
"DATA",58.4,1,"VER",6,"SEG",4,0)
RX^Prescription Order^PAT^R^1
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",0)
^58.400111I^8^8
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",1,0)
RX01^Reporting Status^N^2^1^R
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",1,"DES",0)
^^4^4^3130513^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",1,"DES",1,0)
Reporting Status:
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",1,"DES",2,0)
  01  Add
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",1,"DES",3,0)
  02  Change
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",1,"DES",4,0)
  03  Delete
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",2,0)
RX03^Prescription Number^AN^25^3^R
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",2,"DES",0)
^^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",2,"DES",1,0)
Serial number assigned to the prescription by the pharmacy system.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",3,0)
RX08^Date Rx Written^DT^8^8^R
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",3,"DES",0)
^^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",3,"DES",1,0)
Date the prescription was written, or ordered, if oral.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",4,0)
RX13^Product ID Qualifier^AN^2^13^R
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",4,"DES",0)
^^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",4,"DES",1,0)
Used to identify the type of Product ID contained in RX14.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",5,0)
RX14^Product ID^AN^15^15^R
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",5,"DES",0)
^^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",5,"DES",1,0)
Full product identification including leading zeros, without punctuation.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",6,0)
RX17^Quantity Prescribed^D^11^17^R
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",6,"DES",0)
^^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",6,"DES",1,0)
Number of metric units prescribed in metric decimal format.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",7,0)
RX18^Days Supply^N^3^18^R
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",7,"DES",0)
^^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",7,"DES",1,0)
Estimated number of days the medication will last.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",8,0)
RX20^Refills Authorized^AN^2^20^R
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",8,"DES",0)
^^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",8,"DES",1,0)
The number of refills authorized by the prescriber.
"DATA",58.4,1,"VER",6,"SEG",5,0)
DSP^Dispensing^PAT^R^2
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",0)
^58.400111I^25^17
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",1,0)
DSP01^Reporting Status^N^2^1^R
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",1,"DES",0)
^58.4001111^8^8^3130719^^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",1,"DES",1,0)
Reporting Status
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",1,"DES",2,0)
  01  Add
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",1,"DES",3,0)
  02  Change
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",1,"DES",4,0)
  03  Delete
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",1,"DES",5,0)
  04  Fill
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",1,"DES",6,0)
  05  Order
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",1,"DES",7,0)
  06  Cancel
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",1,"DES",8,0)
  07  Hold
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",2,0)
DSP02^Program Participation Status^^^2^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",3,0)
DSP03^Prescription Number^AN^25^3^R
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",3,"DES",0)
^^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",3,"DES",1,0)
Serial number assigned to the prescription by the pharmacy.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",4,0)
DSP04^Fill Number^N^2^4^R
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",4,"DES",0)
^^2^2^3130513^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",4,"DES",1,0)
Number of the fill of the prescription.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",4,"DES",2,0)
0 indicates New Rx, 01-99 is the refill number.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",5,0)
DSP05^Unique System ID - RPh^^^5^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",6,0)
DSP06^Unique System ID - Patient^^^6^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",7,0)
DSP07^Unique System ID - Prescriber^^^7^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",8,0)
DSP08^Unique System ID - Drug^^^8^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",9,0)
DSP09^Date Filled^DT^8^9^R
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",9,"DES",0)
^58.4001111^1^1^3130614^^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",9,"DES",1,0)
Date the prescription (or refill) was dispensed.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",10,0)
DSP10^Time Filled^^^10^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",11,0)
DSP11^Product ID Qualifier^AN^2^11^R
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",11,"DES",0)
^^6^6^3130513^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",11,"DES",1,0)
Used to identify the type of product ID contained in DSP12.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",11,"DES",2,0)
  01  NDC
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",11,"DES",3,0)
  02  UPC
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",11,"DES",4,0)
  03  HRI
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",11,"DES",5,0)
  04  UPN
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",11,"DES",6,0)
  05  DIN
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",12,0)
DSP12^Product ID^AN^15^12^R
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",12,"DES",0)
^^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",12,"DES",1,0)
Description of the product being dispensed as printed on the bottle label.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",13,0)
DSP13^Product Description^^^13^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",14,0)
DSP14^Quantity Dispensed^D^11^14^R
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",14,"DES",0)
^^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",14,"DES",1,0)
Number of metric units dispensed in metric decimal format (e.g. 7.3).
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",15,0)
DSP15^Days Supply^N^3^15^R
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",15,"DES",0)
^^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",15,"DES",1,0)
Estimated number of days the medication will last.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",16,0)
DSP16^Basis of Days Supply Determination^AN^1^16^O
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",16,"DES",0)
^58.4001111^4^4^3130614^^^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",16,"DES",1,0)
Code indicating method by which days supply was determined.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",16,"DES",2,0)
  1  Explicit Directions
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",16,"DES",3,0)
  2  PRN Direction (Take as Needed Pharmacist Estimate)
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",16,"DES",4,0)
  3  As Directed by Physician
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",25,0)
DSP04^Refill Number^N^2^4^R
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",25,"DES",0)
^58.4001111^2^2^3130614^^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",25,"DES",1,0)
Number of the fill of the prescription.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",25,"DES",2,0)
0 indicates New Rx, 01-99 is the refill number.
"DATA",58.4,1,"VER",6,"SEG",6,0)
PRE^Prescriber^DSP^R^1
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",0)
^58.400111I^10^10
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",1,0)
PRE01^Reporting Status^N^2^1^N
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",1,"DES",0)
^58.4001111^4^4^3130513^^^^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",1,"DES",1,0)
Reporting Status
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",1,"DES",2,0)
  01  Add
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",1,"DES",3,0)
  02  Change
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",1,"DES",4,0)
  03  Delete
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",2,0)
PRE02^Unique System ID - Prescriber ^^^2^N
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",3,0)
PRE03^National Provider Identifier (NPI)^AN^10^3^O
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",3,"DES",0)
^^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",3,"DES",1,0)
Identifying number assigned to a prescriber or an institution.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",4,0)
PRE04^DEA Number^AN^10^4^R
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",4,"DES",0)
^^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",4,"DES",1,0)
Identifying number assigned to a prescriber or an institution.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",5,0)
PRE05^DEA Number Suffix^AN^7^5^O
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",5,"DES",0)
^^2^2^3130513^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",5,"DES",1,0)
Identifying number assigned to a prescriber by an institution when the
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",5,"DES",2,0)
institution's number is used as the DEA number.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",6,0)
PRE06^Prescriber State License Number^^^6^N
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",7,0)
PRE07^Prescriber Alternate ID^^^7^N
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",8,0)
PRE08^Last Name^AN^15^8^O
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",8,"DES",0)
^58.4001111^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",8,"DES",1,0)
Prescriber's last name.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",9,0)
PRE09^First Name^AN^12^9^O
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",9,"DES",0)
^58.4001111^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",9,"DES",1,0)
Prescriber's First Name.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",10,0)
PRE10^Middle Name^AN^12^10^O
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",10,"DES",0)
^58.4001111^1^1^3130523^^^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",10,"DES",1,0)
Prescriber's Middle Name, if any.
"DATA",58.4,1,"VER",6,"SEG",7,0)
RPH^Pharmacist^DSP^R^2
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",0)
^58.400111I^5^5
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",1,0)
RPH01^Reporting Status^AN^2^1^N
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",2,0)
RPH03^National Provider Identifier (NPI)^AN^10^3^O
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",2,"DES",0)
^^3^3^3130513^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",2,"DES",1,0)
Identifier assigned to the pharmacist by CMS if the pharmacist applies
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",2,"DES",2,0)
for a number. This number is used to identify the pharmacist who 
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",2,"DES",3,0)
dispensed the medication.
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",3,0)
RPH06^Last Name^AN^15^6^O
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",3,"DES",0)
^58.4001111^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",3,"DES",1,0)
Pharmacist's last name.
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",4,0)
RPH07^First Name^AN^12^7^O
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",4,"DES",0)
^58.4001111^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",4,"DES",1,0)
Pharmacist's first name.
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",5,0)
RPH08^Middle Name^AN^12^8^O
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",5,"DES",0)
^58.4001111^1^1^3130916^^^^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",5,"DES",1,0)
Pharmacist's middle name or initial, if available.
"DATA",58.4,1,"VER",6,"SEG",8,0)
PLN^Third-Party Plan^DSP^R^3
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",0)
^58.400111I^1^1
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",1,0)
PLN01^Reporting Status^N^2^1^O
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",1,"DES",0)
^^4^4^3130916^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",1,"DES",1,0)
Not Required; use depends on business application.
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",1,"DES",2,0)
  01 Add
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",1,"DES",3,0)
  02 Change
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",1,"DES",4,0)
  03 Delete
"FIA",52)
PRESCRIPTION
"FIA",52,0)
^PSRX(
"FIA",52,0,0)
52Is
"FIA",52,0,1)
y^y^p^^^^n^^n
"FIA",52,0,10)

"FIA",52,0,11)

"FIA",52,0,"RLRO")

"FIA",52,0,"VR")
7.0^PSO
"FIA",52,52)
1
"FIA",52,52,14)

"FIA",52,52,70)

"FIA",52,52.07)
0
"FIA",52,52.1)
1
"FIA",52,52.1,23)

"FIA",58.4)
SPMP ASAP RECORD DEFINITION
"FIA",58.4,0)
^PS(58.4,
"FIA",58.4,0,0)
58.4
"FIA",58.4,0,1)
y^y^f^^n^^y^o^n
"FIA",58.4,0,10)

"FIA",58.4,0,11)

"FIA",58.4,0,"RLRO")

"FIA",58.4,0,"VR")
7.0^PSO
"FIA",58.4,58.4)
0
"FIA",58.4,58.4001)
0
"FIA",58.4,58.40011)
0
"FIA",58.4,58.400111)
0
"FIA",58.4,58.4001111)
0
"FIA",58.41)
SPMP STATE PARAMETERS
"FIA",58.41,0)
^PS(58.41,
"FIA",58.41,0,0)
58.41P
"FIA",58.41,0,1)
y^y^f^^^^n
"FIA",58.41,0,10)

"FIA",58.41,0,11)

"FIA",58.41,0,"RLRO")

"FIA",58.41,0,"VR")
7.0^PSO
"FIA",58.41,58.41)
0
"FIA",58.41,58.411)
0
"FIA",58.41,58.412)
0
"FIA",58.42)
SPMP EXPORT BATCH
"FIA",58.42,0)
^PS(58.42,
"FIA",58.42,0,0)
58.42I
"FIA",58.42,0,1)
y^y^f^^^^n
"FIA",58.42,0,10)

"FIA",58.42,0,11)

"FIA",58.42,0,"RLRO")

"FIA",58.42,0,"VR")
7.0^PSO
"FIA",58.42,58.42)
0
"FIA",58.42,58.42001)
0
"FIA",58.42,58.42002)
0
"INIT")
EN^PSO408PI
"IX",52,52,"ARTS",0)
52^ARTS^Return to stock date/time cross-reference.^R^^F^IR^W^52.07^^^^^S
"IX",52,52,"ARTS",1)
S ^PSRX("ARTS",X,DA(1),DA)=""
"IX",52,52,"ARTS",2)
K ^PSRX("ARTS",X,DA(1),DA)
"IX",52,52,"ARTS",2.5)
K ^PSRX("ARTS")
"IX",52,52,"ARTS",11.1,0)
^.114IA^1^1
"IX",52,52,"ARTS",11.1,1,0)
1^F^52.07^.01^^1^F
"IX",52,52,"ARTS",11.1,1,3)

"IX",58.42,58.42,"ARX",0)
58.42^ARX^Prescription cross-reference^R^^R^IR^W^58.42001^^^^^S
"IX",58.42,58.42,"ARX",.1,0)
^^1^1^3130208^^
"IX",58.42,58.42,"ARX",.1,1,0)
This is a cross-reference on the prescription pointer and fill number.
"IX",58.42,58.42,"ARX",1)
S ^PS(58.42,"ARX",X(1),X(2),DA(1),DA)=""
"IX",58.42,58.42,"ARX",2)
K ^PS(58.42,"ARX",X(1),X(2),DA(1),DA)
"IX",58.42,58.42,"ARX",2.5)
K ^PS(58.42,"ARX")
"IX",58.42,58.42,"ARX",11.1,0)
^.114IA^2^2
"IX",58.42,58.42,"ARX",11.1,1,0)
1^F^58.42001^.01^^1^F
"IX",58.42,58.42,"ARX",11.1,2,0)
2^F^58.42001^1^^2^F
"KRN",3.8,416,-1)
0^1
"KRN",3.8,416,0)
PSO SPMP NOTIFICATIONS^PR^y^^^^
"KRN",3.8,416,2,0)
^^1^1^3121220^
"KRN",3.8,416,2,1,0)
This mail group will receive error notifications when the background job responsible for transmitting controlled substance prescriptions to the state fails.
"KRN",3.8,416,3)

"KRN",19,278,-1)
2^7
"KRN",19,278,0)
PSO SUPERVISOR^Supervisor Functions^^M^11712^^^^^^^141
"KRN",19,278,10,0)
^19.01PI^24^24
"KRN",19,278,10,24,0)
14195
"KRN",19,278,10,24,"^")
PSO SPMP MENU
"KRN",19,278,10,"A6359",1)
Pharmacist Enter/Edit^484^^
"KRN",19,278,10,"A6359",2)
Provider Enter/Edit^485^^
"KRN",19,278,10,"A6359",3)
Inventory menu^507^^
"KRN",19,278,10,"A6359",4)
Inter-Divisional Processing^504^^
"KRN",19,278,10,"A6359",5)
Monthly Cost Compilation^503^^
"KRN",19,278,10,"A6359",6)
Daily Cost Compilation^502^^
"KRN",19,278,10,"A6359",7)
View Provider^508^^
"KRN",19,278,10,"A6359",8)
Initialize Cost Statistics^501^^
"KRN",19,278,10,"A6359",9)
Delete a Prescription^460^^
"KRN",19,278,10,"A6359",10)
Drug enter/edit^471^^
"KRN",19,278,10,"A6359",11)
Site parameter enter/edit^1145^^
"KRN",19,278,"U")
SUPERVISOR FUNCTIONS
"KRN",19,14193,-1)
0^2
"KRN",19,14193,0)
PSO SPMP SINGLE RX VIEW/EXPORT^View/Export Single Prescription^^A^^^^^^^^^^1
"KRN",19,14193,1,0)
^19.06^1^1^3130417^^
"KRN",19,14193,1,1,0)
This option is used for visualizing a specific prescription and the data related to a specific fill that is transmitted to the state in the American Society for Automation in Pharmacy (ASAP) format.
"KRN",19,14193,20)
D ^PSOSPML4
"KRN",19,14193,"U")
VIEW/EXPORT SINGLE PRESCRIPTIO
"KRN",19,14194,-1)
0^4
"KRN",19,14194,0)
PSO SPMP VIEW ASAP DEFINITIONS^View ASAP Definitions^^A^^^^^^^^^^1
"KRN",19,14194,1,0)
^^2^2^3130110^
"KRN",19,14194,1,1,0)
This option allows the user to visualize the American Society for Automation in Pharmacy (ASAP) data format and the data elements reported to the states. It provides detailed information about each segment and field for the ASAP format versions 
"KRN",19,14194,1,2,0)
4.0, 4.1 and 4.2.
"KRN",19,14194,20)
D ^PSOSPML3
"KRN",19,14194,"U")
VIEW ASAP DEFINITIONS
"KRN",19,14195,-1)
0^1
"KRN",19,14195,0)
PSO SPMP MENU^State Prescription Monitoring Program (SPMP) Menu^^M^^^^^^^^
"KRN",19,14195,1,0)
^19.06^1^1^3131010^^^
"KRN",19,14195,1,1,0)
This menu option contains options used for managing the transmission of Controlled Substance prescriptions to the State Prescription Monitoring Program (SPMP).
"KRN",19,14195,10,0)
^19.01IP^7^7
"KRN",19,14195,10,1,0)
14193^RX^30
"KRN",19,14195,10,1,"^")
PSO SPMP SINGLE RX VIEW/EXPORT
"KRN",19,14195,10,2,0)
14194^ASAP^10
"KRN",19,14195,10,2,"^")
PSO SPMP VIEW ASAP DEFINITIONS
"KRN",19,14195,10,3,0)
14196^SP^20
"KRN",19,14195,10,3,"^")
PSO SPMP STATE PARAMETERS
"KRN",19,14195,10,4,0)
14197^BAT^40
"KRN",19,14195,10,4,"^")
PSO SPMP BATCH VIEW/EXPORT
"KRN",19,14195,10,5,0)
14198^BP^50
"KRN",19,14195,10,5,"^")
PSO SPMP BATCH PROCESSING
"KRN",19,14195,10,6,0)
14200^RP
"KRN",19,14195,10,6,"^")
PSO SPMP DISCLOSURE REPORT
"KRN",19,14195,10,7,0)
14201^UN
"KRN",19,14195,10,7,"^")
PSO SPMP UNMARK ADMIN CLINIC
"KRN",19,14195,99)
63217,35544
"KRN",19,14195,"U")
STATE PRESCRIPTION MONITORING 
"KRN",19,14196,-1)
0^5
"KRN",19,14196,0)
PSO SPMP STATE PARAMETERS^View/Edit SPMP State Parameters^^A^^^^^^^^^^1
"KRN",19,14196,1,0)
^^1^1^3130110^
"KRN",19,14196,1,1,0)
This option is used for viewing or editing the State Prescription Monitoring Program (SPMP) parameters for a specific state.
"KRN",19,14196,20)
D ^PSOSPMSP
"KRN",19,14196,"U")
VIEW/EDIT SPMP STATE PARAMETER
"KRN",19,14197,-1)
0^6
"KRN",19,14197,0)
PSO SPMP BATCH VIEW/EXPORT^View/Export Batch^^A^^^^^^^^^^1
"KRN",19,14197,1,0)
^19.06^1^1^3130110^^
"KRN",19,14197,1,1,0)
This option allows the user to visualize the State Prescription Monitoring Program (SPMP) data contained in one batch as well as the list of prescriptions in the batch. This option also allows the user to manually export the batch to the state.
"KRN",19,14197,20)
D ^PSOSPML2
"KRN",19,14197,"U")
VIEW/EXPORT BATCH
"KRN",19,14198,-1)
0^8
"KRN",19,14198,0)
PSO SPMP BATCH PROCESSING^Export Batch Processing^^A^^^^^^^^^^1
"KRN",19,14198,1,0)
^19.06^2^2^3130110^^
"KRN",19,14198,1,1,0)
This option is used to monitor all the batches used to transmit State Prescription Monitoring Program (SPMP) data to the states. The user selects a data range and a list of batches is presented where the user can select perform different actions
"KRN",19,14198,1,2,0)
on a specific batch.
"KRN",19,14198,20)
D ^PSOSPML1
"KRN",19,14198,"U")
EXPORT BATCH PROCESSING
"KRN",19,14199,-1)
0^10
"KRN",19,14199,0)
PSO SPMP SCHEDULED EXPORT^Scheduled SPMP Data Export^^A^^^^^^^^^^1
"KRN",19,14199,1,0)
^19.06^5^5^3130129^^^
"KRN",19,14199,1,1,0)
This option is used for running the automatic transmissions to the states. It
"KRN",19,14199,1,2,0)
should be scheduled to run nightly and it will decide when to transmit the data
"KRN",19,14199,1,3,0)
to the state based on the REPORTING FREQUENCY IN DAYS field  value for the state,
"KRN",19,14199,1,4,0)
which can be updated via the View/Edit SPMP State Parameters option [PSO SPMP
"KRN",19,14199,1,5,0)
STATE PARAMETERS].  
"KRN",19,14199,20)
D EXPORT^PSOSPML0
"KRN",19,14199,200.9)
y
"KRN",19,14199,"U")
SCHEDULED SPMP DATA EXPORT
"KRN",19,14200,-1)
0^11
"KRN",19,14200,0)
PSO SPMP DISCLOSURE REPORT^Accounting Of Disclosures Report^^A^^^^^^^^^^1
"KRN",19,14200,1,0)
^^2^2^3130417^
"KRN",19,14200,1,1,0)
This option is used for generating a list of all prescriptions transmitted to states. This option allows for a date range selection as well as one, multiple or all states and one, multiple or all patients. The list is sorted by state and then by
"KRN",19,14200,1,2,0)
patient.
"KRN",19,14200,20)
D ^PSOSPML5
"KRN",19,14200,"U")
ACCOUNTING OF DISCLOSURES REPO
"KRN",19,14201,-1)
0^12
"KRN",19,14201,0)
PSO SPMP UNMARK ADMIN CLINIC^Unmark Rx Fill as Administered In Clinic^^A^^^^^^^^^^1
"KRN",19,14201,1,0)
^^4^4^3131010^
"KRN",19,14201,1,1,0)
This option is used for resetting the flag that indicates a prescription
"KRN",19,14201,1,2,0)
fill was 'Administered In Clinic'. The flag can only be set to 'No'. In
"KRN",19,14201,1,3,0)
other words, you cannot use this option to flag a window or mail
"KRN",19,14201,1,4,0)
prescription fill as 'Administered In Clinic'.
"KRN",19,14201,20)
D ^PSOSPML6
"KRN",19,14201,"U")
UNMARK RX FILL AS ADMINISTERED
"KRN",101,1803,-1)
4^17
"KRN",101,1803,0)
VALM NEXT SCREEN
"KRN",101,1804,-1)
4^18
"KRN",101,1804,0)
VALM PREVIOUS SCREEN
"KRN",101,1805,-1)
4^21
"KRN",101,1805,0)
VALM REFRESH
"KRN",101,1806,-1)
4^29
"KRN",101,1806,0)
VALM LAST SCREEN
"KRN",101,1807,-1)
4^30
"KRN",101,1807,0)
VALM FIRST SCREEN
"KRN",101,1808,-1)
4^19
"KRN",101,1808,0)
VALM UP ONE LINE
"KRN",101,1809,-1)
4^20
"KRN",101,1809,0)
VALM DOWN A LINE
"KRN",101,1811,-1)
4^28
"KRN",101,1811,0)
VALM QUIT
"KRN",101,1812,-1)
4^22
"KRN",101,1812,0)
VALM PRINT SCREEN
"KRN",101,1813,-1)
4^23
"KRN",101,1813,0)
VALM PRINT LIST
"KRN",101,1815,-1)
4^26
"KRN",101,1815,0)
VALM TURN ON/OFF MENUS
"KRN",101,1817,-1)
4^27
"KRN",101,1817,0)
VALM SEARCH LIST
"KRN",101,1824,-1)
4^24
"KRN",101,1824,0)
VALM RIGHT
"KRN",101,1825,-1)
4^25
"KRN",101,1825,0)
VALM LEFT
"KRN",101,1827,-1)
4^31
"KRN",101,1827,0)
VALM GOTO PAGE
"KRN",101,6044,-1)
0^1
"KRN",101,6044,0)
PSO SPMP3 MENU^^^M^^^^^^^^
"KRN",101,6044,4)
36^4
"KRN",101,6044,10,0)
^101.01PA^1^1
"KRN",101,6044,10,1,0)
6045^DET^1^
"KRN",101,6044,10,1,"^")
PSO SPMP3 SHOW DETAILS
"KRN",101,6044,26)
D SHOW^VALM,HDR^PSOSPML3 S XQORM("??")="D HELP^VALM2,HDR^PSOSPML3"
"KRN",101,6044,99)
63217,35544
"KRN",101,6045,-1)
0^2
"KRN",101,6045,0)
PSO SPMP3 SHOW DETAILS^Show/Hide Details^^A^^^^^^^^
"KRN",101,6045,4)
^^^DET
"KRN",101,6045,20)
D SHOWHID^PSOSPML3
"KRN",101,6045,99)
63217,35544
"KRN",101,6046,-1)
0^4
"KRN",101,6046,0)
PSO SPMP4 MENU^^^M^^^^^^^^
"KRN",101,6046,4)
36^4
"KRN",101,6046,10,0)
^101.01PA^4^4
"KRN",101,6046,10,1,0)
6047^AS^3^
"KRN",101,6046,10,1,"^")
PSO SPMP4 VIEW ASAP DEFINITION
"KRN",101,6046,10,2,0)
6048^VW^1^
"KRN",101,6046,10,2,"^")
PSO SPMP4 VIEW RX
"KRN",101,6046,10,3,0)
6052^MP^2^
"KRN",101,6046,10,3,"^")
PSO SPMP4 MEDICATION PROFILE
"KRN",101,6046,10,4,0)
6054^EXP^^
"KRN",101,6046,10,4,"^")
PSO SPMP4 EXPORT RX
"KRN",101,6046,26)
D SHOW^VALM,HDR^PSOSPML4 S XQORM("??")="D HELP^VALM2,HDR^PSOSPML4"
"KRN",101,6046,99)
63217,35544
"KRN",101,6047,-1)
0^3
"KRN",101,6047,0)
PSO SPMP4 VIEW ASAP DEFINITION^View ASAP Definition^^A^^^^^^^^
"KRN",101,6047,4)
^^^AS
"KRN",101,6047,10,0)
^101.01PA
"KRN",101,6047,20)
D ASAPDEF^PSOSPML4
"KRN",101,6047,99)
63217,35544
"KRN",101,6048,-1)
0^11
"KRN",101,6048,0)
PSO SPMP4 VIEW RX^View Rx^^A^^^^^^^^
"KRN",101,6048,4)
^^^VW
"KRN",101,6048,20)
D VIEW^PSOSPML4
"KRN",101,6048,99)
63217,35544
"KRN",101,6049,-1)
0^6
"KRN",101,6049,0)
PSO SPMP2 MENU^^^M^^^^^^^^
"KRN",101,6049,4)
36^4
"KRN",101,6049,10,0)
^101.01PA^2^2
"KRN",101,6049,10,1,0)
6050^EXP^^
"KRN",101,6049,10,1,"^")
PSO SPMP2 BATCH EXPORT
"KRN",101,6049,10,2,0)
6053^RAW^2^
"KRN",101,6049,10,2,"^")
PSO SPMP2 VIEW RAW DATA
"KRN",101,6049,26)
D SHOW^VALM,HDR^PSOSPML2 S XQORM("#")=$O(^ORD(101,"B","PSO SPMP2 SELECT",""))_"^1:"_VALMCNT,XQORM("??")="D HELP^VALM2,HDR^PSOSPML2"
"KRN",101,6049,99)
63217,35544
"KRN",101,6050,-1)
0^5
"KRN",101,6050,0)
PSO SPMP2 BATCH EXPORT^Export Batch^^A^^^^^^^^
"KRN",101,6050,4)
^^^EX
"KRN",101,6050,20)
D EXP^PSOSPML2("EXPORT")
"KRN",101,6050,99)
63217,35544
"KRN",101,6051,-1)
0^7
"KRN",101,6051,0)
PSO SPMP2 SELECT^Select a Prescription^^A^^^^^^^^
"KRN",101,6051,4)
^^^SP
"KRN",101,6051,20)
D SEL^PSOSPML2
"KRN",101,6051,99)
63217,35544
"KRN",101,6052,-1)
0^10
"KRN",101,6052,0)
PSO SPMP4 MEDICATION PROFILE^Medication Profile^^A^^^^^^^^
"KRN",101,6052,4)
^^^MP
"KRN",101,6052,20)
D MP^PSOSPML4
"KRN",101,6052,99)
63217,35544
"KRN",101,6053,-1)
0^8
"KRN",101,6053,0)
PSO SPMP2 VIEW RAW DATA^View Raw Data^^A^^^^^^^^
"KRN",101,6053,4)
^^^RAW
"KRN",101,6053,20)
D EXP^PSOSPML2("VIEW")
"KRN",101,6053,99)
63217,35544
"KRN",101,6054,-1)
0^9
"KRN",101,6054,0)
PSO SPMP4 EXPORT RX^Export Rx Fill^^A^^^^^^^^
"KRN",101,6054,4)
^^^EXP
"KRN",101,6054,20)
D EXPORT^PSOSPML4
"KRN",101,6054,99)
63217,35544
"KRN",101,6055,-1)
0^12
"KRN",101,6055,0)
PSO SPMP1 MENU^^^M^^^^^^^^
"KRN",101,6055,4)
26^4
"KRN",101,6055,10,0)
^101.01PA^2^2
"KRN",101,6055,10,1,0)
6057^SP^1^
"KRN",101,6055,10,1,"^")
PSO SPMP1 STATE PARAMETERS
"KRN",101,6055,10,2,0)
6058^MA^^
"KRN",101,6055,10,2,"^")
PSO SPMP1 MANUAL BATCH EXPORT
"KRN",101,6055,26)
D SHOW^VALM,HDR^PSOSPML1 S XQORM("#")=$O(^ORD(101,"B","PSO SPMP1 SELECT",""))_"^1:"_VALMCNT,XQORM("??")="D HELP^VALM2,HDR^PSOSPML1"
"KRN",101,6055,99)
63217,35544
"KRN",101,6056,-1)
0^13
"KRN",101,6056,0)
PSO SPMP1 SELECT^Select a Batch^^A^^^^^^^^
"KRN",101,6056,4)
^^^SB
"KRN",101,6056,20)
D SEL^PSOSPML1
"KRN",101,6056,99)
63217,35544
"KRN",101,6057,-1)
0^14
"KRN",101,6057,0)
PSO SPMP1 STATE PARAMETERS^State Parameters^^A^^^^^^^^
"KRN",101,6057,4)
^^^SP
"KRN",101,6057,20)
D EN^PSOSPMSP
"KRN",101,6057,99)
63217,35544
"KRN",101,6058,-1)
0^15
"KRN",101,6058,0)
PSO SPMP1 MANUAL BATCH EXPORT^Manual Export^^A^^^^^^^^
"KRN",101,6058,4)
^^^MA
"KRN",101,6058,20)
D MAN^PSOSPML1
"KRN",101,6058,99)
63217,35544
"KRN",101,6059,-1)
0^16
"KRN",101,6059,0)
PSO HIDDEN ACTIONS #5^Outpatient Pharmacy Hidden Actions #5^^M^^^^^^^^OUTPATIENT PHARMACY
"KRN",101,6059,1,0)
^101.06^3^3^3121107^^^
"KRN",101,6059,1,1,0)
This hidden action menu protocol contains the minimum standard hidden 
"KRN",101,6059,1,2,0)
actions for an Outpatient Pharmacy Listman option. No customized actions 
"KRN",101,6059,1,3,0)
should be attached to this protocol.
"KRN",101,6059,4)
26^
"KRN",101,6059,10,0)
^101.01PA^30^30
"KRN",101,6059,10,16,0)
1803^+^^
"KRN",101,6059,10,16,"^")
VALM NEXT SCREEN
"KRN",101,6059,10,17,0)
1804^-^^
"KRN",101,6059,10,17,"^")
VALM PREVIOUS SCREEN
"KRN",101,6059,10,18,0)
1808^UP^^
"KRN",101,6059,10,18,"^")
VALM UP ONE LINE
"KRN",101,6059,10,19,0)
1809^DN^^
"KRN",101,6059,10,19,"^")
VALM DOWN A LINE
"KRN",101,6059,10,20,0)
1805^RD^^
"KRN",101,6059,10,20,"^")
VALM REFRESH
"KRN",101,6059,10,21,0)
1812^PS^^
"KRN",101,6059,10,21,"^")
VALM PRINT SCREEN
"KRN",101,6059,10,22,0)
1813^PT^^
"KRN",101,6059,10,22,"^")
VALM PRINT LIST
"KRN",101,6059,10,23,0)
1824^>^^
"KRN",101,6059,10,23,"^")
VALM RIGHT
"KRN",101,6059,10,24,0)
1825^<^^
"KRN",101,6059,10,24,"^")
VALM LEFT
"KRN",101,6059,10,25,0)
1815^ADPL^^
"KRN",101,6059,10,25,"^")
VALM TURN ON/OFF MENUS
"KRN",101,6059,10,26,0)
1811^QU^^
"KRN",101,6059,10,26,"^")
VALM QUIT
"KRN",101,6059,10,27,0)
1806^LS^^
"KRN",101,6059,10,27,"^")
VALM LAST SCREEN
"KRN",101,6059,10,28,0)
1807^FS^^
"KRN",101,6059,10,28,"^")
VALM FIRST SCREEN
"KRN",101,6059,10,29,0)
1827^GO^^
"KRN",101,6059,10,29,"^")
VALM GOTO PAGE
"KRN",101,6059,10,30,0)
1817^SL^^
"KRN",101,6059,10,30,"^")
VALM SEARCH LIST
"KRN",101,6059,99)
63217,35544
"KRN",101,6060,-1)
0^33
"KRN",101,6060,0)
PSO SPMP5 SELECT^Select a Prescription^^A^^^^^^^^
"KRN",101,6060,4)
^^^SP
"KRN",101,6060,20)
D SEL^PSOSPML5
"KRN",101,6060,99)
63217,35544
"KRN",101,6061,-1)
0^32
"KRN",101,6061,0)
PSO SPMP5 MENU^^^M^^^^^^^^
"KRN",101,6061,4)
36^4
"KRN",101,6061,10,0)
^101.01PA^1^1
"KRN",101,6061,10,1,0)
1813^PR^1^^^Print Report
"KRN",101,6061,10,1,"^")
VALM PRINT LIST
"KRN",101,6061,26)
D SHOW^VALM S XQORM("#")=$O(^ORD(101,"B","PSO SPMP5 SELECT",""))_"^1:"_VALMCNT,XQORM("??")="D HELP^VALM2"
"KRN",101,6061,99)
63217,35544
"KRN",409.61,801,-1)
0^1
"KRN",409.61,801,0)
PSO SPMP VIEW ASAP DEFINITION^1^^80^2^21^0^1^^PSO SPMP3 MENU^ASAP Definitions^1^^1
"KRN",409.61,801,1)
^PSO HIDDEN ACTIONS #5
"KRN",409.61,801,"ARRAY")
 ^TMP("PSOSPML3",$J)
"KRN",409.61,801,"FNL")
D EXIT^PSOSPML3
"KRN",409.61,801,"HDR")
D HDR^PSOSPML3
"KRN",409.61,801,"HLP")
D HELP^PSOSPML3
"KRN",409.61,801,"INIT")
D INIT^PSOSPML3
"KRN",409.61,802,-1)
0^6
"KRN",409.61,802,0)
PSO SPMP VIEW/EXPORT RX^1^^80^5^20^0^1^^PSO SPMP4 MENU^View/Export Prescription^1^^1
"KRN",409.61,802,1)
^PSO HIDDEN ACTIONS #5
"KRN",409.61,802,"ARRAY")
 ^TMP("PSOSPML4",$J)
"KRN",409.61,802,"FNL")
D EXIT^PSOSPML4
"KRN",409.61,802,"HDR")
D HDR^PSOSPML4
"KRN",409.61,802,"HLP")
D HELP^PSOSPML4
"KRN",409.61,802,"INIT")
D INIT^PSOSPML4
"KRN",409.61,803,-1)
0^5
"KRN",409.61,803,0)
PSO SPMP VIEW/EXPORT BATCH^1^^80^6^21^0^1^^PSO SPMP2 MENU^View/Export Batch^1^^1
"KRN",409.61,803,1)
^PSO HIDDEN ACTIONS #5
"KRN",409.61,803,"ARRAY")
 ^TMP("PSOSPML2",$J)
"KRN",409.61,803,"FNL")
D EXIT^PSOSPML2
"KRN",409.61,803,"HDR")
D HDR^PSOSPML2
"KRN",409.61,803,"HLP")
D HELP^PSOSPML2
"KRN",409.61,803,"INIT")
D INIT^PSOSPML2
"KRN",409.61,804,-1)
0^4
"KRN",409.61,804,0)
PSO SPMP BATCH PROCESSING^1^^80^4^21^0^1^^PSO SPMP1 MENU^Export Batch Processing^1^^1
"KRN",409.61,804,1)
^PSO HIDDEN ACTIONS #5
"KRN",409.61,804,"ARRAY")
 ^TMP("PSOSPML1",$J)
"KRN",409.61,804,"FNL")
D EXIT^PSOSPML1
"KRN",409.61,804,"HDR")
D HDR^PSOSPML1
"KRN",409.61,804,"HLP")
D HELP^PSOSPML1
"KRN",409.61,804,"INIT")
D INIT^PSOSPML1
"KRN",409.61,805,-1)
0^7
"KRN",409.61,805,0)
PSO SPMP DISCLOSURE REPORT^1^^80^7^21^0^1^^PSO SPMP5 MENU^Accounting Of Disclosures Rpt^1^^1
"KRN",409.61,805,1)
^PSO HIDDEN ACTIONS #5
"KRN",409.61,805,"ARRAY")
 ^TMP("PSOSPML5",$J)
"KRN",409.61,805,"FNL")
D EXIT^PSOSPML5
"KRN",409.61,805,"HDR")
D HDR^PSOSPML5
"KRN",409.61,805,"HLP")
D HELP^PSOSPML5
"KRN",409.61,805,"INIT")
D INIT^PSOSPML5
"MBREQ")
0
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",141,-1)
1^1
"PKG",141,0)
OUTPATIENT PHARMACY^PSO^OUTPATIENT LABELS, PROFILE, INVENTORY, PRESCRIPTIONS
"PKG",141,20,0)
^9.402P^^
"PKG",141,22,0)
^9.49I^1^1
"PKG",141,22,1,0)
7.0^2971216^2980917^11712
"PKG",141,22,1,"PAH",1,0)
408^3140715^10000000021
"PKG",141,22,1,"PAH",1,1,0)
^^104^104^3140715
"PKG",141,22,1,"PAH",1,1,1,0)
The Safety Updates for the Medication Prescription Management (SUMPM)
"PKG",141,22,1,"PAH",1,1,2,0)
project adds a new module to the Outpatient Pharmacy V. 7.0 application,
"PKG",141,22,1,"PAH",1,1,3,0)
which will be used for enabling the Veterans Health Administration (VHA)
"PKG",141,22,1,"PAH",1,1,4,0)
pharmacies to comply with Mandatory Reporting to State Controlled
"PKG",141,22,1,"PAH",1,1,5,0)
Substance Rx Databases required by Consolidated Appropriations Act, 2012,
"PKG",141,22,1,"PAH",1,1,6,0)
PL 112-74. Also known as State Prescription Monitoring Program (SPMP), the
"PKG",141,22,1,"PAH",1,1,7,0)
program is a state electronic database which collects designated data on
"PKG",141,22,1,"PAH",1,1,8,0)
controlled substances dispensed. The states then distribute data from the
"PKG",141,22,1,"PAH",1,1,9,0)
database to individuals who are authorized under state law to receive the
"PKG",141,22,1,"PAH",1,1,10,0)
information for purposes of their profession. The information must be
"PKG",141,22,1,"PAH",1,1,11,0)
reported using the American Society for Automation in Pharmacy (ASAP) data
"PKG",141,22,1,"PAH",1,1,12,0)
format, which was developed by the Alliance of States with Prescription
"PKG",141,22,1,"PAH",1,1,13,0)
Monitoring Programs and the National Association of State Controlled
"PKG",141,22,1,"PAH",1,1,14,0)
Substances Authorities.
"PKG",141,22,1,"PAH",1,1,15,0)
  
"PKG",141,22,1,"PAH",1,1,16,0)
The new menu called State Prescription Monitoring Program Menu [PSO SPMP
"PKG",141,22,1,"PAH",1,1,17,0)
MENU] can be found under the Supervisor Functions [PSO SUPERVISOR]
"PKG",141,22,1,"PAH",1,1,18,0)
menu option. The following options will be available under this new menu:
"PKG",141,22,1,"PAH",1,1,19,0)
 
"PKG",141,22,1,"PAH",1,1,20,0)
1. View/Edit SPMP State Parameters [PSO SPMP STATE PARAMETERS]  
"PKG",141,22,1,"PAH",1,1,21,0)
   -----------------------------------------------------------
"PKG",141,22,1,"PAH",1,1,22,0)
   This option is used for viewing or editing the SPMP parameters for a 
"PKG",141,22,1,"PAH",1,1,23,0)
   specific state. The following fields can be updated via this option:
"PKG",141,22,1,"PAH",1,1,24,0)
 
"PKG",141,22,1,"PAH",1,1,25,0)
      ASAP VERSION
"PKG",141,22,1,"PAH",1,1,26,0)
      TRANSMIT RETURN TO STOCK*
"PKG",141,22,1,"PAH",1,1,27,0)
      INCLUDE NON-VETERAN PATIENTS
"PKG",141,22,1,"PAH",1,1,28,0)
      REPORTING FREQUENCY IN DAYS
"PKG",141,22,1,"PAH",1,1,29,0)
      VMS LOCAL DIRECTORY
"PKG",141,22,1,"PAH",1,1,30,0)
      UNIX/LINUX LOCAL DIRECTORY
"PKG",141,22,1,"PAH",1,1,31,0)
      WINDOWS/NT LOCAL DIRECTORY
"PKG",141,22,1,"PAH",1,1,32,0)
      FILE NAME PREFIX
"PKG",141,22,1,"PAH",1,1,33,0)
      FILE EXTENSION
"PKG",141,22,1,"PAH",1,1,34,0)
      STATE FTP SERVER IP ADDRESS
"PKG",141,22,1,"PAH",1,1,35,0)
      STATE FTP SERVER USERNAME
"PKG",141,22,1,"PAH",1,1,36,0)
      STATE FTP SERVER PORT #
"PKG",141,22,1,"PAH",1,1,37,0)
      STATE FTP SERVER PASSWORD
"PKG",141,22,1,"PAH",1,1,38,0)
      STATE FTP SERVER DIRECTORY
"PKG",141,22,1,"PAH",1,1,39,0)
      SFTP TRANSMISSION MODE
"PKG",141,22,1,"PAH",1,1,40,0)
      SFTP PRIVATE KEY TEXT**
"PKG",141,22,1,"PAH",1,1,41,0)
      SFTP PUBLIC KEY TEXT**
"PKG",141,22,1,"PAH",1,1,42,0)
 
"PKG",141,22,1,"PAH",1,1,43,0)
   *  Visible only if ASAP VERSION is 1995
"PKG",141,22,1,"PAH",1,1,44,0)
   ** Visible only if SFTP TRANSMISSION MODE is set to A - AUTOMATIC 
"PKG",141,22,1,"PAH",1,1,45,0)
  
"PKG",141,22,1,"PAH",1,1,46,0)
2. View ASAP Definitions [PSO SPMP VIEW ASAP DEFINITIONS]
"PKG",141,22,1,"PAH",1,1,47,0)
   ------------------------------------------------------
"PKG",141,22,1,"PAH",1,1,48,0)
   This option allows the user to visualize the ASAP data format and the
"PKG",141,22,1,"PAH",1,1,49,0)
   data elements reported to the states. It provides detailed information
"PKG",141,22,1,"PAH",1,1,50,0)
   about each segment and field for the ASAP format versions 4.0, 4.1 and
"PKG",141,22,1,"PAH",1,1,51,0)
   4.2.
"PKG",141,22,1,"PAH",1,1,52,0)
    
"PKG",141,22,1,"PAH",1,1,53,0)
3. View/Export Single Prescription [PSO SPMP SINGLE RX VIEW/EXPORT]
"PKG",141,22,1,"PAH",1,1,54,0)
   ----------------------------------------------------------------
"PKG",141,22,1,"PAH",1,1,55,0)
   This option is used for visualizing a specific prescription and the
"PKG",141,22,1,"PAH",1,1,56,0)
   data related to a specific fill that is transmitted to the state in the
"PKG",141,22,1,"PAH",1,1,57,0)
   ASAP format.
"PKG",141,22,1,"PAH",1,1,58,0)
  
"PKG",141,22,1,"PAH",1,1,59,0)
4. View Export Batch [PSO SPMP BATCH VIEW/EXPORT]
"PKG",141,22,1,"PAH",1,1,60,0)
   ----------------------------------------------
"PKG",141,22,1,"PAH",1,1,61,0)
   The information reported to the states are first compiled into a batch,
"PKG",141,22,1,"PAH",1,1,62,0)
   which can be for a single prescription or a collection of prescriptions
"PKG",141,22,1,"PAH",1,1,63,0)
   for a determined date range. This option allows the user to visualize 
"PKG",141,22,1,"PAH",1,1,64,0)
   information contained in one batch as well as the list of prescriptions
"PKG",141,22,1,"PAH",1,1,65,0)
   in the batch. This option also allows the user to manually export the
"PKG",141,22,1,"PAH",1,1,66,0)
   batch to the state.
"PKG",141,22,1,"PAH",1,1,67,0)
 
"PKG",141,22,1,"PAH",1,1,68,0)
5. Export Batch Processing [PSO SPMP BATCH PROCESSING]
"PKG",141,22,1,"PAH",1,1,69,0)
   ---------------------------------------------------
"PKG",141,22,1,"PAH",1,1,70,0)
   This option is used to monitor all the batches used to transmit data to
"PKG",141,22,1,"PAH",1,1,71,0)
   the states. The user selects a date range and a list of batches is
"PKG",141,22,1,"PAH",1,1,72,0)
   presented where the user can select to perform different actions on a
"PKG",141,22,1,"PAH",1,1,73,0)
   specific batch.
"PKG",141,22,1,"PAH",1,1,74,0)
   
"PKG",141,22,1,"PAH",1,1,75,0)
6. Scheduled Batch Export [PSO SPMP SCHEDULED EXPORT]
"PKG",141,22,1,"PAH",1,1,76,0)
   --------------------------------------------------
"PKG",141,22,1,"PAH",1,1,77,0)
   This option is used for running the automatic transmission to the
"PKG",141,22,1,"PAH",1,1,78,0)
   states and should not be executed by the end-user directly. It will be
"PKG",141,22,1,"PAH",1,1,79,0)
   automatically scheduled to run nightly and it will decide when to
"PKG",141,22,1,"PAH",1,1,80,0)
   transmit the data to the state based on the REPORTING FREQUENCY IN DAYS
"PKG",141,22,1,"PAH",1,1,81,0)
   field (#3) of the SPMP STATE PARAMETERS file (#58.41) value for the
"PKG",141,22,1,"PAH",1,1,82,0)
   state, which can be updated via the View/Edit SPMP State Parameters
"PKG",141,22,1,"PAH",1,1,83,0)
   [PSO SPMP STATE PARAMETERS] option.
"PKG",141,22,1,"PAH",1,1,84,0)
 
"PKG",141,22,1,"PAH",1,1,85,0)
7. Accounting Of Disclosures Report [PSO SPMP DISCLOSURE REPORT]
"PKG",141,22,1,"PAH",1,1,86,0)
   -------------------------------------------------------------
"PKG",141,22,1,"PAH",1,1,87,0)
   This option is used for generating a list of prescriptions transmitted
"PKG",141,22,1,"PAH",1,1,88,0)
   to states. This option allows for a date range selection as well as
"PKG",141,22,1,"PAH",1,1,89,0)
   one, multiple or all states and one, multiple or all patients. The list
"PKG",141,22,1,"PAH",1,1,90,0)
   is sorted by state and then by patient. 
"PKG",141,22,1,"PAH",1,1,91,0)
 
"PKG",141,22,1,"PAH",1,1,92,0)
8. Unmark Rx Fill as Administered In Clinic [PSO SPMP UNMARK ADMIN CLINIC]
"PKG",141,22,1,"PAH",1,1,93,0)
   -----------------------------------------------------------------------
"PKG",141,22,1,"PAH",1,1,94,0)
   This option is used to unmark prescriptions as 'Administered In
"PKG",141,22,1,"PAH",1,1,95,0)
   Clinic'. Administered in clinic prescription fills are not transmitted
"PKG",141,22,1,"PAH",1,1,96,0)
   to the states. This option enables the user to unmark fills that have
"PKG",141,22,1,"PAH",1,1,97,0)
   been mistakenly marked as 'Administered In Clinic' and subsequently
"PKG",141,22,1,"PAH",1,1,98,0)
   transmit them to the state.
"PKG",141,22,1,"PAH",1,1,99,0)
 
"PKG",141,22,1,"PAH",1,1,100,0)
9. Queue Background Jobs [PSO AUTOQUEUE JOBS]
"PKG",141,22,1,"PAH",1,1,101,0)
   ------------------------------------------
"PKG",141,22,1,"PAH",1,1,102,0)
   The Scheduled Batch Export [PSO SPMP SCHEDUED EXPORT] option mentioned
"PKG",141,22,1,"PAH",1,1,103,0)
   above will be added to the list of options that can be edited via this
"PKG",141,22,1,"PAH",1,1,104,0)
   option.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
26
"RTN","PSO408PI")
0^19^B501013^n/a
"RTN","PSO408PI",1,0)
PSO408PI ;BIRM/MFR - PSO*7*408 Post-install routine ;11/26/12
"RTN","PSO408PI",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408**;DEC 1997;Build 100
"RTN","PSO408PI",3,0)
 ;
"RTN","PSO408PI",4,0)
EN ; - Entry Point
"RTN","PSO408PI",5,0)
 N PSOROOT
"RTN","PSO408PI",6,0)
 D OPTSTAT^XUTMOPT("PSO SPMP SCHEDULED EXPORT",.PSOROOT)
"RTN","PSO408PI",7,0)
 I '+$G(PSOROOT(1)) D RESCH^XUTMOPT("PSO SPMP SCHEDULED EXPORT",$$FMADD^XLFDT(DT,1)+.01,"","24H","L")
"RTN","PSO408PI",8,0)
 Q
"RTN","PSO408PI",9,0)
 ;
"RTN","PSOASAP0")
0^2^B194204356^n/a
"RTN","PSOASAP0",1,0)
PSOASAP0 ;BIRM/MFR - American Society for Automation in Pharmacy (ASAP) Segments & Fields ;06/07/05
"RTN","PSOASAP0",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408**;DEC 1997;Build 100
"RTN","PSOASAP0",3,0)
 ;External reference to $$NATURE^ORUTL3 supported by DBIA 5890
"RTN","PSOASAP0",4,0)
 ;External reference to ^ORDEA is supported by DBIA 5709
"RTN","PSOASAP0",5,0)
 ;External reference to PATIENT file (#2) supported by DBIA 5597
"RTN","PSOASAP0",6,0)
 ;External reference to $$NPI^XUSNPI supported by DBIA 4532
"RTN","PSOASAP0",7,0)
 ;
"RTN","PSOASAP0",8,0)
 ; ******************** ASAP 1995 Version ********************
"RTN","PSOASAP0",9,0)
ASAP95(RXIEN,FILL) ; Returns the entire ASAP 1995 record for the Rx/Fill
"RTN","PSOASAP0",10,0)
 ; Input:  (r) RXIEN  - Rx IEN (#52) 
"RTN","PSOASAP0",11,0)
 ;         (r) FILL   - Fill #
"RTN","PSOASAP0",12,0)
 N ASAP95,RXNUM
"RTN","PSOASAP0",13,0)
 S RXNUM=$E(RXIEN+10000000,$L(RXIEN+10000000)-6,$L(RXIEN+10000000))
"RTN","PSOASAP0",14,0)
 S $E(ASAP95,1,3)="ASB"                              ; Transmission Type Identifier
"RTN","PSOASAP0",15,0)
 S $E(ASAP95,4,9)="VA"_$E(10000+$$SITE^VASITE(),2,5) ; Bank Identification Number
"RTN","PSOASAP0",16,0)
 S $E(ASAP95,10,11)="A2"                             ; ASAP Version (A2 = 1995)
"RTN","PSOASAP0",17,0)
 S $E(ASAP95,12,13)="01"                             ; Transaction Code ("01" - Controlled Substance)
"RTN","PSOASAP0",18,0)
 S $E(ASAP95,14,25)=$E($$PHA03,1,12)                 ; Pharmacy DEA# Number
"RTN","PSOASAP0",19,0)
 S $E(ASAP95,26,45)=$$PAT03                          ; Patient ID (SSN)
"RTN","PSOASAP0",20,0)
 S $E(ASAP95,46,48)=$E($$PAT16,1,3)                  ; Patient's Zip Code (first 3 digits)
"RTN","PSOASAP0",21,0)
 S $E(ASAP95,49,56)=$$PAT18                          ; Patient's DOB  (Format: YYYYMMDD)
"RTN","PSOASAP0",22,0)
 S $E(ASAP95,57,57)=$S($$PAT19="M":1,1:"2")          ; Patient's Gender
"RTN","PSOASAP0",23,0)
 S $E(ASAP95,58,65)=$$DSP05                          ; Date Filled (Release/RTS Date) (Format: YYYYMMDD)
"RTN","PSOASAP0",24,0)
 S $E(ASAP95,66,72)=RXNUM                            ; Prescription Number (IEN - Because it must be 7-digit numeric )
"RTN","PSOASAP0",25,0)
 S $E(ASAP95,73,74)=$E(FILL+100,2,3)                 ; Fill Number
"RTN","PSOASAP0",26,0)
 S $E(ASAP95,75,79)=$E(100000+$$DSP09,2,6)           ; Quantity
"RTN","PSOASAP0",27,0)
 S $E(ASAP95,80,82)=$E(1000+$$DSP10,2,4)             ; Days Supply
"RTN","PSOASAP0",28,0)
 S $E(ASAP95,83,83)="1"                              ; Compound Flag (1=Not compound)
"RTN","PSOASAP0",29,0)
 S $E(ASAP95,84,94)=$E($$DSP08,1,11)                 ; NDC (Fomart: 99999999999)
"RTN","PSOASAP0",30,0)
 S $E(ASAP95,95,104)=$E($$PRE02,1,10)                ; Prescriber's DEA #
"RTN","PSOASAP0",31,0)
 S $E(ASAP95,105,108)=""                             ; DEA Suffix
"RTN","PSOASAP0",32,0)
 S $E(ASAP95,109,116)=$$DSP03                        ; Date Written (Format: YYYYMMDD)
"RTN","PSOASAP0",33,0)
 S $E(ASAP95,117,118)=$E(100+$$DSP04,2,3)            ; Refills Authorized
"RTN","PSOASAP0",34,0)
 S $E(ASAP95,119,119)=$S(+$$DSP12>2:0,1:+$$DSP12)    ; Rx Origin Code (0:Not Specified/1:Written/2:Telephone)
"RTN","PSOASAP0",35,0)
 S $E(ASAP95,120,121)="03"                           ; Customer Location (Always: "03" - Outpatient)
"RTN","PSOASAP0",36,0)
 S $E(ASAP95,122,128)=""                             ; DEA Suffix
"RTN","PSOASAP0",37,0)
 S $E(ASAP95,129,138)=$E($$PRE03,1,10)               ; Alternate Prescriber # (VA #)
"RTN","PSOASAP0",38,0)
 S $E(ASAP95,139,153)=$E($$PAT07,1,15)               ; Patient's Last Name
"RTN","PSOASAP0",39,0)
 S $E(ASAP95,154,168)=$E($$PAT08,1,15)               ; Patient's First Name
"RTN","PSOASAP0",40,0)
 S $E(ASAP95,169,198)=$E($$PAT12,1,30)               ; Patient's Address
"RTN","PSOASAP0",41,0)
 S $E(ASAP95,199,200)=$E($$PAT15,1,2)                ; Patient's State
"RTN","PSOASAP0",42,0)
 S $E(ASAP95,201,209)=$E($$PAT16,1,9)                ; Patient's Zip Code
"RTN","PSOASAP0",43,0)
 S $E(ASAP95,210,222)=""                             ; Filler
"RTN","PSOASAP0",44,0)
 Q ASAP95
"RTN","PSOASAP0",45,0)
 ;
"RTN","PSOASAP0",46,0)
 ; ******************** ASAP 3.0 and above versions ********************
"RTN","PSOASAP0",47,0)
 ; *** TH Segment ***
"RTN","PSOASAP0",48,0)
TH01() ; ASAP Version (3.0, 4.0, 4.1, 4.2)
"RTN","PSOASAP0",49,0)
 S PSOTTCNT=$G(PSOTTCNT)+1
"RTN","PSOASAP0",50,0)
 Q PSOASVER
"RTN","PSOASAP0",51,0)
 ;
"RTN","PSOASAP0",52,0)
TH02() ; Transaction Control Number
"RTN","PSOASAP0",53,0)
 Q +$$SITE^VASITE()_"-"_+$G(BATCHIEN)
"RTN","PSOASAP0",54,0)
 ;
"RTN","PSOASAP0",55,0)
TH03() ; ASAP 3.0 : Transaction Control Number
"RTN","PSOASAP0",56,0)
 ;       ASAP 4.0+: Transaction Type (Always "01" - Send/Request Transaction)
"RTN","PSOASAP0",57,0)
 I PSOASVER="3.0" Q +$$SITE^VASITE()_"-"_+$G(BATCHIEN)
"RTN","PSOASAP0",58,0)
 Q "01"
"RTN","PSOASAP0",59,0)
 ;
"RTN","PSOASAP0",60,0)
TH04() ; Response ID - Used in Response Transactions only (Not Used)
"RTN","PSOASAP0",61,0)
 Q ""
"RTN","PSOASAP0",62,0)
 ;
"RTN","PSOASAP0",63,0)
TH05() ; Creation Date (Format: YYYYMMDD)
"RTN","PSOASAP0",64,0)
 Q $$FMTHL7^XLFDT($$HTFM^XLFDT($H)\1)
"RTN","PSOASAP0",65,0)
 ;
"RTN","PSOASAP0",66,0)
TH06() ; Creation Time. Format: HHMMSS or HHMM
"RTN","PSOASAP0",67,0)
 Q $E($P($$HTFM^XLFDT($H),".",2)_"000000",1,6)
"RTN","PSOASAP0",68,0)
 ;
"RTN","PSOASAP0",69,0)
TH07() ; File Type (Required). Returns: "T" - Test or "P" - Production
"RTN","PSOASAP0",70,0)
 Q $S($$PROD^XUPROD(1):"P",1:"T")
"RTN","PSOASAP0",71,0)
 ;
"RTN","PSOASAP0",72,0)
TH08() ; ASAP 3.0 : Creation Date (Format: YYYYMMDD)
"RTN","PSOASAP0",73,0)
 I PSOASVER="4.0" Q ":"
"RTN","PSOASAP0",74,0)
 I PSOASVER'="3.0" Q ""
"RTN","PSOASAP0",75,0)
 Q $$FMTHL7^XLFDT($$HTFM^XLFDT($H)\1)
"RTN","PSOASAP0",76,0)
 ;
"RTN","PSOASAP0",77,0)
TH09() ; ASAP 3.0 : Creation Time. Format: HHMMSS or HHMM
"RTN","PSOASAP0",78,0)
 ;       ASAP 4.0+: Segment Terminator Character
"RTN","PSOASAP0",79,0)
 I PSOASVER="3.0" Q $E($P($$HTFM^XLFDT($H),".",2)_"000000",1,6)
"RTN","PSOASAP0",80,0)
 Q $S(PSOASVER="4.0":"\",1:"~")
"RTN","PSOASAP0",81,0)
 ;
"RTN","PSOASAP0",82,0)
TH10() ; File Type (ASAP 3.0 only)
"RTN","PSOASAP0",83,0)
 I PSOASVER="3.0" Q $S($$PROD^XUPROD(1):"P",1:"T")
"RTN","PSOASAP0",84,0)
 Q ""
"RTN","PSOASAP0",85,0)
 ;
"RTN","PSOASAP0",86,0)
TH12() ; Composite Element Separator (ASAP 3.0 only)
"RTN","PSOASAP0",87,0)
 I PSOASVER="3.0" Q ":"
"RTN","PSOASAP0",88,0)
 Q ""
"RTN","PSOASAP0",89,0)
 ;
"RTN","PSOASAP0",90,0)
TH13() ; Data Segment Terminator Character (ASAP 3.0 only)
"RTN","PSOASAP0",91,0)
 I PSOASVER="3.0" Q "\"
"RTN","PSOASAP0",92,0)
 Q ""
"RTN","PSOASAP0",93,0)
 ;
"RTN","PSOASAP0",94,0)
 ; *** IS Segment ***
"RTN","PSOASAP0",95,0)
IS01() ; Unique Information Source ID
"RTN","PSOASAP0",96,0)
 S PSOTTCNT=$G(PSOTTCNT)+1
"RTN","PSOASAP0",97,0)
 Q ("VA"_+$$SITE^VASITE())
"RTN","PSOASAP0",98,0)
 ;
"RTN","PSOASAP0",99,0)
IS02() ; Information Source Entity Name
"RTN","PSOASAP0",100,0)
 Q $$ESC($$GET1^DIQ(4,+$$SITE^VASITE,100))
"RTN","PSOASAP0",101,0)
 ;
"RTN","PSOASAP0",102,0)
IS03() ; Message (Not Used)
"RTN","PSOASAP0",103,0)
 Q ""
"RTN","PSOASAP0",104,0)
 ;
"RTN","PSOASAP0",105,0)
 ; *** IR Segment (ASAP 3.0 only) ***
"RTN","PSOASAP0",106,0)
IR01() ; Unique Information Receiver ID
"RTN","PSOASAP0",107,0)
 S PSOTTCNT=$G(PSOTTCNT)+1
"RTN","PSOASAP0",108,0)
 Q ("VA"_+$$SITE^VASITE())
"RTN","PSOASAP0",109,0)
 ;
"RTN","PSOASAP0",110,0)
IR02() ; Information Receiver Entity Name
"RTN","PSOASAP0",111,0)
 Q $$GET1^DIQ(5,+$G(PSOSTATE),.01)_" PMP PROGRAM"
"RTN","PSOASAP0",112,0)
 ;
"RTN","PSOASAP0",113,0)
 ; *** PHA Segment ***
"RTN","PSOASAP0",114,0)
PHA01() ; National Provider Identifier
"RTN","PSOASAP0",115,0)
 S PSOTTCNT=$G(PSOTTCNT)+1
"RTN","PSOASAP0",116,0)
 S PSOTPCNT=$G(PSOTPCNT)+1
"RTN","PSOASAP0",117,0)
 N NPINST,NPINUM
"RTN","PSOASAP0",118,0)
 S NPINST=$$GET1^DIQ(59,RXSITE,101,"I") I 'NPINST Q ""
"RTN","PSOASAP0",119,0)
 S NPINUM=+$$NPI^XUSNPI("Organization_ID",NPINST,DT)
"RTN","PSOASAP0",120,0)
 Q $S(NPINUM>0:NPINUM,1:"")
"RTN","PSOASAP0",121,0)
 ;
"RTN","PSOASAP0",122,0)
PHA02() ; NCPDP/NABP Provider ID
"RTN","PSOASAP0",123,0)
 Q $$GET1^DIQ(59,RXSITE,1008)
"RTN","PSOASAP0",124,0)
 ;
"RTN","PSOASAP0",125,0)
PHA03() ; Pharmacy DEA Number
"RTN","PSOASAP0",126,0)
 N RELINST
"RTN","PSOASAP0",127,0)
 S RELINST=$$GET1^DIQ(59,RXSITE,100,"I") I 'RELINST Q ""
"RTN","PSOASAP0",128,0)
 Q $$WHAT^XUAF4(RELINST,52)
"RTN","PSOASAP0",129,0)
 ;
"RTN","PSOASAP0",130,0)
PHA04() ; Pharmacy Name
"RTN","PSOASAP0",131,0)
 Q $$ESC($$GET1^DIQ(59,RXSITE,.01))
"RTN","PSOASAP0",132,0)
 ;
"RTN","PSOASAP0",133,0)
PHA05() ; Pharmacy Address Information - Line 1
"RTN","PSOASAP0",134,0)
 Q $$ESC($$TRIM^XLFSTR($$GET1^DIQ(59,RXSITE,.02)))
"RTN","PSOASAP0",135,0)
 ;
"RTN","PSOASAP0",136,0)
PHA06() ; Pharmacy Address Information - Line 2 (Not Used)
"RTN","PSOASAP0",137,0)
 Q ""
"RTN","PSOASAP0",138,0)
 ;
"RTN","PSOASAP0",139,0)
PHA07() ; Pharmacy City Address
"RTN","PSOASAP0",140,0)
 Q $$ESC($$GET1^DIQ(59,RXSITE,.07))
"RTN","PSOASAP0",141,0)
 ;
"RTN","PSOASAP0",142,0)
PHA08() ; Pharmacy State Address
"RTN","PSOASAP0",143,0)
 N STAIEN
"RTN","PSOASAP0",144,0)
 S STAIEN=$$GET1^DIQ(59,RXSITE,.08,"I") Q:'STAIEN ""
"RTN","PSOASAP0",145,0)
 Q $$GET1^DIQ(5,STAIEN,1)
"RTN","PSOASAP0",146,0)
 ;
"RTN","PSOASAP0",147,0)
PHA09() ; Pharmacy ZIP Code
"RTN","PSOASAP0",148,0)
 Q $$NUMERIC($$GET1^DIQ(59,RXSITE,.05))
"RTN","PSOASAP0",149,0)
 ;
"RTN","PSOASAP0",150,0)
PHA10() ; Phone Number
"RTN","PSOASAP0",151,0)
 Q $$PHONE($$GET1^DIQ(59,RXSITE,.03)_$$GET1^DIQ(59,RXSITE,.04))
"RTN","PSOASAP0",152,0)
 ;
"RTN","PSOASAP0",153,0)
PHA11() ; Pharmacy Contact name (Not Used)
"RTN","PSOASAP0",154,0)
 Q ""
"RTN","PSOASAP0",155,0)
 ;
"RTN","PSOASAP0",156,0)
PHA12() ; Pharmacy Chain Site ID (Not Used)
"RTN","PSOASAP0",157,0)
 Q ""
"RTN","PSOASAP0",158,0)
 ;
"RTN","PSOASAP0",159,0)
 ; *** PAT Segment ***
"RTN","PSOASAP0",160,0)
PAT01() ;  ASAP 3.0 : Not Used
"RTN","PSOASAP0",161,0)
 ;         ASAP 4.0+: ID Qualifier of Patient Identifier (Always "US" - United States)
"RTN","PSOASAP0",162,0)
 S PSOTTCNT=$G(PSOTTCNT)+1
"RTN","PSOASAP0",163,0)
 S PSOTPCNT=$G(PSOTPCNT)+1
"RTN","PSOASAP0",164,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP0",165,0)
 Q "US"
"RTN","PSOASAP0",166,0)
 ;
"RTN","PSOASAP0",167,0)
PAT02() ; ID Qualifier (Always "07" - Social Security Number)
"RTN","PSOASAP0",168,0)
 Q "07"
"RTN","PSOASAP0",169,0)
 ;
"RTN","PSOASAP0",170,0)
PAT03() ; ID of Patient
"RTN","PSOASAP0",171,0)
 Q $P($G(VADM(2)),"^",1)
"RTN","PSOASAP0",172,0)
 ;
"RTN","PSOASAP0",173,0)
PAT04() ; ASAP 3.0 : SSN
"RTN","PSOASAP0",174,0)
 ;        ASAP 4.0+: ID Qualifier of Additional Patient Identifier (Not Used)
"RTN","PSOASAP0",175,0)
 I PSOASVER="3.0" Q $$PAT03()
"RTN","PSOASAP0",176,0)
 Q ""
"RTN","PSOASAP0",177,0)
 ;
"RTN","PSOASAP0",178,0)
PAT05() ; Additional Patient ID Qualifier (Not Used)
"RTN","PSOASAP0",179,0)
 Q ""
"RTN","PSOASAP0",180,0)
 ;
"RTN","PSOASAP0",181,0)
PAT06() ; Additional ID (Not Used)
"RTN","PSOASAP0",182,0)
 Q ""
"RTN","PSOASAP0",183,0)
 ;
"RTN","PSOASAP0",184,0)
PAT07() ; Patient Last Name
"RTN","PSOASAP0",185,0)
 Q $$ESC(PSONAME("LAST"))
"RTN","PSOASAP0",186,0)
 ;
"RTN","PSOASAP0",187,0)
PAT08() ; Patient First Name
"RTN","PSOASAP0",188,0)
 Q $$ESC(PSONAME("FIRST"))
"RTN","PSOASAP0",189,0)
 ;
"RTN","PSOASAP0",190,0)
PAT09() ; Patient Middle Name or Initial
"RTN","PSOASAP0",191,0)
 Q $$ESC(PSONAME("MIDDLE"))
"RTN","PSOASAP0",192,0)
 ;
"RTN","PSOASAP0",193,0)
PAT10() ; Name Prefix
"RTN","PSOASAP0",194,0)
 Q $$ESC(PSONAME("PREFIX"))
"RTN","PSOASAP0",195,0)
 ;
"RTN","PSOASAP0",196,0)
PAT11() ; Name Suffix
"RTN","PSOASAP0",197,0)
 Q $$ESC(PSONAME("SUFFIX"))
"RTN","PSOASAP0",198,0)
 ;
"RTN","PSOASAP0",199,0)
PAT12() ; Patient Address Information - Line 1
"RTN","PSOASAP0",200,0)
 N ADDRESS
"RTN","PSOASAP0",201,0)
 S ADDRESS=$$TRIM^XLFSTR($G(VAPA(1)))_$S($$TRIM^XLFSTR($G(VAPA(2)))'="":" "_VAPA(2),1:"")_$S($$TRIM^XLFSTR($G(VAPA(3)))'="":" "_VAPA(3),1:"")
"RTN","PSOASAP0",202,0)
 I $E(ADDRESS,1,30)'[" " Q $$ESC($E(ADDRESS,1,30))
"RTN","PSOASAP0",203,0)
 Q $$ADDRESS(ADDRESS,1)
"RTN","PSOASAP0",204,0)
 ;
"RTN","PSOASAP0",205,0)
PAT13() ; Patient Address Information - Line 2
"RTN","PSOASAP0",206,0)
 N ADDRESS
"RTN","PSOASAP0",207,0)
 S ADDRESS=$$TRIM^XLFSTR($G(VAPA(1)))_$S($$TRIM^XLFSTR($G(VAPA(2)))'="":" "_VAPA(2),1:"")_$S($$TRIM^XLFSTR($G(VAPA(3)))'="":" "_VAPA(3),1:"")
"RTN","PSOASAP0",208,0)
 I $E(ADDRESS,1,30)'[" " Q $$ESC($E(ADDRESS,31,60))
"RTN","PSOASAP0",209,0)
 Q $$ADDRESS(ADDRESS,2)
"RTN","PSOASAP0",210,0)
 ;
"RTN","PSOASAP0",211,0)
PAT14() ; Patient City Address
"RTN","PSOASAP0",212,0)
 Q $$ESC($P($G(VAPA(4)),"^",1))
"RTN","PSOASAP0",213,0)
 ;
"RTN","PSOASAP0",214,0)
PAT15() ; Patient State Address
"RTN","PSOASAP0",215,0)
 N STAIEN S STAIEN=+$G(VAPA(5)) Q:'STAIEN ""
"RTN","PSOASAP0",216,0)
 Q $$GET1^DIQ(5,STAIEN,1)
"RTN","PSOASAP0",217,0)
 ;
"RTN","PSOASAP0",218,0)
PAT16() ; Patient ZIP Code
"RTN","PSOASAP0",219,0)
 Q $TR($P($G(VAPA(11)),"^",1),"-")
"RTN","PSOASAP0",220,0)
 ;
"RTN","PSOASAP0",221,0)
PAT17() ; Patient Phone Number
"RTN","PSOASAP0",222,0)
 N PATPHONE
"RTN","PSOASAP0",223,0)
 S PATPHONE=$P($G(VAPA(8)),"^",1)
"RTN","PSOASAP0",224,0)
 I '$$NUMERIC(PATPHONE) S PATPHONE=$$GET1^DIQ(2,DFN,.134)
"RTN","PSOASAP0",225,0)
 I '$$NUMERIC(PATPHONE) S PATPHONE=$$GET1^DIQ(2,DFN,.132)
"RTN","PSOASAP0",226,0)
 I '$$NUMERIC(PATPHONE) S PATPHONE=$$GET1^DIQ(2,DFN,.21011)
"RTN","PSOASAP0",227,0)
 I '$$NUMERIC(PATPHONE) S PATPHONE=$$GET1^DIQ(2,DFN,.211011)
"RTN","PSOASAP0",228,0)
 I '$$NUMERIC(PATPHONE) S PATPHONE=$$GET1^DIQ(2,DFN,.33011)
"RTN","PSOASAP0",229,0)
 I '$$NUMERIC(PATPHONE) S PATPHONE=$$GET1^DIQ(2,DFN,.331011)
"RTN","PSOASAP0",230,0)
 I '$$NUMERIC(PATPHONE) Q $$PHA10()
"RTN","PSOASAP0",231,0)
 Q $$PHONE(PATPHONE)
"RTN","PSOASAP0",232,0)
 ;
"RTN","PSOASAP0",233,0)
PAT18() ; Patient DOB
"RTN","PSOASAP0",234,0)
 Q $$FMTHL7^XLFDT($P($G(VADM(3)),"^",1))
"RTN","PSOASAP0",235,0)
 ;
"RTN","PSOASAP0",236,0)
PAT19() ; ASAP 3.0 : Patient DOB
"RTN","PSOASAP0",237,0)
 ;        ASAP 4.0+: Patient Gender Code
"RTN","PSOASAP0",238,0)
 I PSOASVER="3.0" Q $$FMTHL7^XLFDT($P($G(VADM(3)),"^",1))
"RTN","PSOASAP0",239,0)
 Q $S($P($G(VADM(5)),"^",1)'="":$P($G(VADM(5)),"^",1),1:"U")
"RTN","PSOASAP0",240,0)
 ;
"RTN","PSOASAP0",241,0)
PAT20() ; ASAP 3.0 : Patient Gender Code
"RTN","PSOASAP0",242,0)
 ;        ASAP 4.0+: Species Code (Always return "01" for 'Human')
"RTN","PSOASAP0",243,0)
 I PSOASVER="3.0" Q $S($P($G(VADM(5)),"^",1)'="":$P($G(VADM(5)),"^",1),1:"U")
"RTN","PSOASAP0",244,0)
 Q "01"
"RTN","PSOASAP0",245,0)
 ;
"RTN","PSOASAP0",246,0)
PAT21() ; Patient Location Code (Always return "10" for 'Outpatient')
"RTN","PSOASAP0",247,0)
 Q "10"
"RTN","PSOASAP0",248,0)
 ;
"RTN","PSOASAP0",249,0)
PAT22() ; Country of Non-U.S. Resident
"RTN","PSOASAP0",250,0)
 N CNTRYIEN,FIPSCODE
"RTN","PSOASAP0",251,0)
 S CNTRYIEN=+$G(VAPA(25)) I 'CNTRYIEN Q ""
"RTN","PSOASAP0",252,0)
 S FIPSCODE=$$GET1^DIQ(779.004,CNTRYIEN,1.2)
"RTN","PSOASAP0",253,0)
 Q $S(FIPSCODE="US":"",1:FIPSCODE)
"RTN","PSOASAP0",254,0)
 ;
"RTN","PSOASAP0",255,0)
 ; *** RX Segment (ASAP 3.0 only) ***
"RTN","PSOASAP0",256,0)
RX01() ; Reporting Status ("01" - Add / "02" - Change / "03" - Delete)
"RTN","PSOASAP0",257,0)
 S PSOTTCNT=$G(PSOTTCNT)+1
"RTN","PSOASAP0",258,0)
 S PSOTPCNT=$G(PSOTPCNT)+1
"RTN","PSOASAP0",259,0)
 Q $S($G(RECTYPE)="N":"01",$G(RECTYPE)="R":"02",$G(RECTYPE)="V":"03",1:"")
"RTN","PSOASAP0",260,0)
 ;
"RTN","PSOASAP0",261,0)
RX03() ; Prescription Number
"RTN","PSOASAP0",262,0)
 Q $$GET1^DIQ(52,+$G(RXIEN),.01)
"RTN","PSOASAP0",263,0)
 ;
"RTN","PSOASAP0",264,0)
RX08() ; Date Rx Written (Format: YYYYMMDD)
"RTN","PSOASAP0",265,0)
 N RX08
"RTN","PSOASAP0",266,0)
 S RX08=$$GET1^DIQ(52,+$G(RXIEN),1,"I") I RX08>DT S RX08=$$GET1^DIQ(52,+$G(RXIEN),21,"I")\1
"RTN","PSOASAP0",267,0)
 Q $$FMTHL7^XLFDT(RX08)
"RTN","PSOASAP0",268,0)
 ;
"RTN","PSOASAP0",269,0)
RX13() ;  Product ID Qualifier (Always return "01" for 'NDC') 
"RTN","PSOASAP0",270,0)
 Q "01"
"RTN","PSOASAP0",271,0)
 ;
"RTN","PSOASAP0",272,0)
RX14() ; Product ID (NDC - National Drug Code) - (Partial: Get from Original)
"RTN","PSOASAP0",273,0)
 Q $$DSP08()
"RTN","PSOASAP0",274,0)
 ;
"RTN","PSOASAP0",275,0)
RX17() ; Quantity Dispensed
"RTN","PSOASAP0",276,0)
 Q $S(RECTYPE="V":$G(RTSDATA("QTY")),1:$$RXQTY^PSOBPSUT(RXIEN,RXFILL))
"RTN","PSOASAP0",277,0)
 ;
"RTN","PSOASAP0",278,0)
RX18() ; Days Supply
"RTN","PSOASAP0",279,0)
 Q $S(RECTYPE="V":$G(RTSDATA("DAYSUP")),1:$$RXDAYSUP^PSOBPSUT(RXIEN,RXFILL))
"RTN","PSOASAP0",280,0)
 ;
"RTN","PSOASAP0",281,0)
RX20() ; Refills Authorized
"RTN","PSOASAP0",282,0)
 Q +$$GET1^DIQ(52,+$G(RXIEN),9)
"RTN","PSOASAP0",283,0)
 ;
"RTN","PSOASAP0",284,0)
 ; *** DSP Segment ***
"RTN","PSOASAP0",285,0)
DSP01() ; ASAP 3.0 : Reporting Status ("01" - Add / "02" - Change / "03" - Delete)
"RTN","PSOASAP0",286,0)
 ;        ASAP 4.0 : Reporting Status ("" - New / "01" - Revise / "02" - Void)
"RTN","PSOASAP0",287,0)
 ;        ASAP 4.0+: Reporting Status ("00" - New / "01" - Revise / "02" - Void)
"RTN","PSOASAP0",288,0)
 S PSOTTCNT=$G(PSOTTCNT)+1
"RTN","PSOASAP0",289,0)
 S PSOTPCNT=$G(PSOTPCNT)+1
"RTN","PSOASAP0",290,0)
 I PSOASVER="3.0" Q $S($G(RECTYPE)="N":"01",$G(RECTYPE)="R":"02",$G(RECTYPE)="V":"03",1:"")
"RTN","PSOASAP0",291,0)
 I PSOASVER="4.0",RECTYPE="N" Q ""
"RTN","PSOASAP0",292,0)
 Q $S($G(RECTYPE)="N":"00",$G(RECTYPE)="R":"01",$G(RECTYPE)="V":"02",1:"")
"RTN","PSOASAP0",293,0)
 ;
"RTN","PSOASAP0",294,0)
DSP02() ; Prescription Number (Not used by ASAP 3.0)
"RTN","PSOASAP0",295,0)
 Q $$GET1^DIQ(52,+$G(RXIEN),.01)
"RTN","PSOASAP0",296,0)
 ;
"RTN","PSOASAP0",297,0)
DSP03() ; ASAP 3.0 : Prescription Number
"RTN","PSOASAP0",298,0)
 ;        ASAP 1995/4.0+: Date Rx Written (Format: YYYYMMDD)
"RTN","PSOASAP0",299,0)
 I PSOASVER="3.0" Q $$GET1^DIQ(52,+$G(RXIEN),.01)
"RTN","PSOASAP0",300,0)
 N DSP03
"RTN","PSOASAP0",301,0)
 S DSP03=$$GET1^DIQ(52,+$G(RXIEN),1,"I") I DSP03>DT S DSP03=$$GET1^DIQ(52,+$G(RXIEN),21,"I")\1
"RTN","PSOASAP0",302,0)
 Q $$FMTHL7^XLFDT(DSP03)
"RTN","PSOASAP0",303,0)
 ;
"RTN","PSOASAP0",304,0)
DSP04() ; ASAP 3.0 : Refill Number
"RTN","PSOASAP0",305,0)
 ;        ASAP 1995/4.0+: Refills Authorized
"RTN","PSOASAP0",306,0)
 I PSOASVER="3.0" Q +$G(RXFILL)
"RTN","PSOASAP0",307,0)
 Q +$$GET1^DIQ(52,+$G(RXIEN),9)
"RTN","PSOASAP0",308,0)
 ;
"RTN","PSOASAP0",309,0)
DSP05() ; Date Filled (Release Date) (Format: YYYYMMDD) (ASAP 3.0: Not Used)
"RTN","PSOASAP0",310,0)
 N DSP05
"RTN","PSOASAP0",311,0)
 S DSP05=$S(RECTYPE="V":$G(RTSDATA("RELDTTM")),$$RXRLDT^PSOBPSUT(RXIEN,RXFILL):$$RXRLDT^PSOBPSUT(RXIEN,RXFILL),1:DT)\1
"RTN","PSOASAP0",312,0)
 Q $S(DSP05:$$FMTHL7^XLFDT(DSP05),1:"")
"RTN","PSOASAP0",313,0)
 ;
"RTN","PSOASAP0",314,0)
DSP06() ; Refill Number (Partials are always "0") (ASAP 3.0: Not Used)
"RTN","PSOASAP0",315,0)
 I RXFILL["P" Q 0
"RTN","PSOASAP0",316,0)
 Q +RXFILL
"RTN","PSOASAP0",317,0)
 ;
"RTN","PSOASAP0",318,0)
DSP07() ; Product ID Qualifier (Always return "01" for 'NDC') (ASAP 3.0: Not Used)
"RTN","PSOASAP0",319,0)
 Q "01"
"RTN","PSOASAP0",320,0)
 ;
"RTN","PSOASAP0",321,0)
DSP08() ; Product ID (NDC - National Drug Code) (ASAP 3.0: Not Used)
"RTN","PSOASAP0",322,0)
 N DRGIEN S DRGIEN=$$GET1^DIQ(52,RXIEN,6,"I")
"RTN","PSOASAP0",323,0)
 I $L($$NUMERIC($$GET1^DIQ(50,DRGIEN,31)))=11 Q $$NUMERIC($$GET1^DIQ(50,DRGIEN,31))
"RTN","PSOASAP0",324,0)
 Q $$NUMERIC($S(RECTYPE="V":$G(RTSDATA("NDC")),1:$$GETNDC^PSONDCUT(RXIEN,+RXFILL)))
"RTN","PSOASAP0",325,0)
 ;
"RTN","PSOASAP0",326,0)
DSP09() ; ASAP 3.0: Date Filled
"RTN","PSOASAP0",327,0)
 ;        ASAP 1995/4.0+: Quantity Dispensed
"RTN","PSOASAP0",328,0)
 N DSP09
"RTN","PSOASAP0",329,0)
 I PSOASVER="3.0" D  Q DSP09
"RTN","PSOASAP0",330,0)
 . S DSP09=$S(RECTYPE="V":$G(RTSDATA("RELDTTM")),$$RXRLDT^PSOBPSUT(RXIEN,RXFILL):$$RXRLDT^PSOBPSUT(RXIEN,RXFILL),1:DT)\1
"RTN","PSOASAP0",331,0)
 . S DSP09=$S(DSP09'="":$$FMTHL7^XLFDT(DSP09),1:"")
"RTN","PSOASAP0",332,0)
 Q $S(RECTYPE="V":$G(RTSDATA("QTY")),1:$$RXQTY^PSOBPSUT(RXIEN,RXFILL))
"RTN","PSOASAP0",333,0)
 ;
"RTN","PSOASAP0",334,0)
DSP10() ; Days Supply
"RTN","PSOASAP0",335,0)
 Q $S(RECTYPE="V":$G(RTSDATA("DAYSUP")),1:$$RXDAYSUP^PSOBPSUT(RXIEN,RXFILL))
"RTN","PSOASAP0",336,0)
 ;
"RTN","PSOASAP0",337,0)
DSP11() ; ASAP 3.0 : Product ID Qualifier (01:NDC)
"RTN","PSOASAP0",338,0)
 ;        ASAP 4.0+: Drug Dosage Units Code
"RTN","PSOASAP0",339,0)
 I PSOASVER="3.0" Q "01"
"RTN","PSOASAP0",340,0)
 N DRGIEN,UNIT
"RTN","PSOASAP0",341,0)
 S DRGIEN=$$GET1^DIQ(52,RXIEN,6,"I")
"RTN","PSOASAP0",342,0)
 S UNIT=$$GET1^DIQ(50,DRGIEN,82,"I")
"RTN","PSOASAP0",343,0)
 Q $S(UNIT="EA":"01",UNIT="ML":"02",UNIT="GM":"03",1:"")
"RTN","PSOASAP0",344,0)
 ;
"RTN","PSOASAP0",345,0)
DSP12() ; ASAP 3.0: Product ID (NDC)
"RTN","PSOASAP0",346,0)
 ;        ASAP 1995/4.0+: Transmission Form of Rx Origin Code (Nature of Order)
"RTN","PSOASAP0",347,0)
 I PSOASVER="3.0" Q $$NUMERIC($S(RECTYPE="V":$G(RTSDATA("NDC")),1:$$GETNDC^PSONDCUT(RXIEN,+RXFILL)))
"RTN","PSOASAP0",348,0)
 N NOO,ORDNUM S NOO="W"
"RTN","PSOASAP0",349,0)
 S ORDNUM=$$GET1^DIQ(52,RXIEN,39.3,"I")
"RTN","PSOASAP0",350,0)
 I $G(ORDNUM) D
"RTN","PSOASAP0",351,0)
 . S NOO=$P($$NATURE^ORUTL3(ORDNUM),"^",2)
"RTN","PSOASAP0",352,0)
 Q $S(NOO="W":"01",(NOO="V")!(NOO="P"):"02",NOO="E":"05",1:"99")
"RTN","PSOASAP0",353,0)
 ;
"RTN","PSOASAP0",354,0)
DSP13() ; ASAP 3.0 : Not Used
"RTN","PSOASAP0",355,0)
 ;        ASAP 4.0+: Partial Fill Indicator
"RTN","PSOASAP0",356,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP0",357,0)
 I PSOASVER="4.0"!(PSOASVER="4.1") Q $S(RXFILL["P":"01",1:"02")
"RTN","PSOASAP0",358,0)
 Q $S(RXFILL["P":$E(100+$E(RXFILL,2,3),2,3),1:"00")
"RTN","PSOASAP0",359,0)
 ;
"RTN","PSOASAP0",360,0)
DSP14() ; ASAP 3.0 : Quantity Dispensed
"RTN","PSOASAP0",361,0)
 ;        ASAP 4.0+: Pharmacist National Provider Identifier (NPI)
"RTN","PSOASAP0",362,0)
 I PSOASVER="3.0" Q $S(RECTYPE="V":$G(RTSDATA("QTY")),1:$$RXQTY^PSOBPSUT(RXIEN,RXFILL))
"RTN","PSOASAP0",363,0)
 N NPI
"RTN","PSOASAP0",364,0)
 S NPI=+$$NPI^XUSNPI("Individual_ID",$$RPHIEN(),DT)
"RTN","PSOASAP0",365,0)
 Q $S(NPI>0:NPI,1:"")
"RTN","PSOASAP0",366,0)
 ;
"RTN","PSOASAP0",367,0)
DSP15() ; ASAP 3.0 : Days Supply
"RTN","PSOASAP0",368,0)
 ;        ASAP 4.0+: Pharmacist State License Number (Not Used)
"RTN","PSOASAP0",369,0)
 I PSOASVER="3.0" Q $S(RECTYPE="V":$G(RTSDATA("DAYSUP")),1:$$RXDAYSUP^PSOBPSUT(RXIEN,RXFILL))
"RTN","PSOASAP0",370,0)
 Q ""
"RTN","PSOASAP0",371,0)
 ;
"RTN","PSOASAP0",372,0)
DSP16() ; ASAP 3.0 : Basis of Days Supply Determiniation (Always "3" for 'As directed by doctor')
"RTN","PSOASAP0",373,0)
 ;        ASAP 4.0+: Classification Code for Payment Type (Always return "05" for 'Military Installations and VA')
"RTN","PSOASAP0",374,0)
 I PSOASVER="3.0" Q "3"
"RTN","PSOASAP0",375,0)
 Q "05"
"RTN","PSOASAP0",376,0)
 ;
"RTN","PSOASAP0",377,0)
 ; *** PRE Segment ***
"RTN","PSOASAP0",378,0)
PRE01() ; ASAP 3.0 : Not Used
"RTN","PSOASAP0",379,0)
 ;        ASAP 4.0+: Prescriber National Provider Identifier (NPI)
"RTN","PSOASAP0",380,0)
 S PSOTTCNT=$G(PSOTTCNT)+1
"RTN","PSOASAP0",381,0)
 S PSOTPCNT=$G(PSOTPCNT)+1
"RTN","PSOASAP0",382,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP0",383,0)
 N PRE01
"RTN","PSOASAP0",384,0)
 S PRE01=+$$NPI^XUSNPI("Individual_ID",$$PRVIEN())
"RTN","PSOASAP0",385,0)
 Q $S(PRE01>0:PRE01,1:"")
"RTN","PSOASAP0",386,0)
 ;
"RTN","PSOASAP0",387,0)
PRE02() ; Prescriber DEA Number
"RTN","PSOASAP0",388,0)
 N PRE02
"RTN","PSOASAP0",389,0)
 S PRE02=$$PRVDEA() I PRE02'="" Q $P(PRE02,"-",1)
"RTN","PSOASAP0",390,0)
 S PRE02=$P($$DEA^XUSER(0,$$PRVIEN()),"-",1)
"RTN","PSOASAP0",391,0)
 I (PRE02="")!($P($$DEA^XUSER(0,$$PRVIEN()),"-",2)'="") S PRE02=$$PHA03()
"RTN","PSOASAP0",392,0)
 Q PRE02
"RTN","PSOASAP0",393,0)
 ;
"RTN","PSOASAP0",394,0)
PRE03() ; ASAP 3.0 : Prescriber NPI
"RTN","PSOASAP0",395,0)
 ;        ASAP 4.0+: Prescriber DEA Number Suffix
"RTN","PSOASAP0",396,0)
 N PRE03
"RTN","PSOASAP0",397,0)
 I PSOASVER="3.0" D  Q PRE03
"RTN","PSOASAP0",398,0)
 . S PRE03=+$$NPI^XUSNPI("Individual_ID",$$PRVIEN())
"RTN","PSOASAP0",399,0)
 . S PRE03=$S(PRE03>0:PRE03,1:"")
"RTN","PSOASAP0",400,0)
 ;
"RTN","PSOASAP0",401,0)
 S PRE03=$$PRVDEA() I PRE03'="" Q $E($P(PRE03,"-",2),1,7)
"RTN","PSOASAP0",402,0)
 S PRE03=$P($$DEA^XUSER(0,$$PRVIEN()),"-",2)
"RTN","PSOASAP0",403,0)
 I $$PRE02()=$$PHA03() S PRE03=$P($$DEA^XUSER(1,$$PRVIEN()),"-",1)
"RTN","PSOASAP0",404,0)
 Q $E(PRE03,1,7)
"RTN","PSOASAP0",405,0)
 ;
"RTN","PSOASAP0",406,0)
PRE04() ; ASAP 3.0 : Prescriber DEA Number
"RTN","PSOASAP0",407,0)
 ;        ASAP 4.0+: Prescriber State License Number (Not Used)
"RTN","PSOASAP0",408,0)
 I PSOASVER'="3.0" Q ""
"RTN","PSOASAP0",409,0)
 ;
"RTN","PSOASAP0",410,0)
 N PRE04
"RTN","PSOASAP0",411,0)
 S PRE04=$$PRVDEA() I PRE04'="" Q $P(PRE04,"-",1)
"RTN","PSOASAP0",412,0)
 S PRE04=$P($$DEA^XUSER(0,$$PRVIEN()),"-",1)
"RTN","PSOASAP0",413,0)
 I (PRE04="")!($P($$DEA^XUSER(0,$$PRVIEN()),"-",2)'="") S PRE04=$$PHA03()
"RTN","PSOASAP0",414,0)
 Q PRE04
"RTN","PSOASAP0",415,0)
 ;
"RTN","PSOASAP0",416,0)
PRE05() ; ASAP 3.0 : Prescriber DEA Number Suffix
"RTN","PSOASAP0",417,0)
 ;        ASAP 4.0+: Prescriber Last Name
"RTN","PSOASAP0",418,0)
 N PRE05
"RTN","PSOASAP0",419,0)
 I PSOASVER="3.0" D  Q PRE05
"RTN","PSOASAP0",420,0)
 . S PRE05=$$PRVDEA() I PRE05'="" S PRE05=$P(PRE05,"-",2) Q
"RTN","PSOASAP0",421,0)
 . S PRE05=$P($$DEA^XUSER(0,$$PRVIEN()),"-",2)
"RTN","PSOASAP0",422,0)
 . I $$PRE04()=$$PHA03() S PRE05=$P($$DEA^XUSER(1,$$PRVIEN()),"-",1)
"RTN","PSOASAP0",423,0)
 ;
"RTN","PSOASAP0",424,0)
 Q $$ESC($P($$GET1^DIQ(200,$$PRVIEN(),.01),",",1))
"RTN","PSOASAP0",425,0)
 ;
"RTN","PSOASAP0",426,0)
PRE06() ; ASAP 4.0+: Prescriber First Name
"RTN","PSOASAP0",427,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP0",428,0)
 Q $$ESC($P($P($$GET1^DIQ(200,$$PRVIEN(),.01),",",2)," ",1))
"RTN","PSOASAP0",429,0)
 ;
"RTN","PSOASAP0",430,0)
PRE07() ; ASAP 4.0+: Prescriber Middle Name
"RTN","PSOASAP0",431,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP0",432,0)
 Q $$ESC($P($P($$GET1^DIQ(200,$$PRVIEN(),.01),",",2)," ",2))
"RTN","PSOASAP0",433,0)
 ;
"RTN","PSOASAP0",434,0)
PRE08() ;  ASAP 3.0 : Prescriber' Last Name
"RTN","PSOASAP0",435,0)
 ;         ASAP 4.0+: Prescriber Phone Number
"RTN","PSOASAP0",436,0)
 I PSOASVER="3.0" Q $E($$ESC($P($$GET1^DIQ(200,$$PRVIEN(),.01),",",1)),1,15)
"RTN","PSOASAP0",437,0)
 Q $$PHONE($$GET1^DIQ(200,$$PRVIEN(),.132))
"RTN","PSOASAP0",438,0)
 ;
"RTN","PSOASAP0",439,0)
PRE09() ; ASAP 3.0 : Prescriber' First Name
"RTN","PSOASAP0",440,0)
 I PSOASVER'="3.0" Q ""
"RTN","PSOASAP0",441,0)
 Q $E($$ESC($P($P($$GET1^DIQ(200,$$PRVIEN(),.01),",",2)," ",1)),1,12)
"RTN","PSOASAP0",442,0)
 ;
"RTN","PSOASAP0",443,0)
PRE10() ; ASAP 3.0 : Prescriber' Middle Name
"RTN","PSOASAP0",444,0)
 I PSOASVER'="3.0" Q ""
"RTN","PSOASAP0",445,0)
 Q $E($$ESC($P($P($$GET1^DIQ(200,$$PRVIEN(),.01),",",2)," ",2)),1,12)
"RTN","PSOASAP0",446,0)
 ;
"RTN","PSOASAP0",447,0)
 ; *** RPH Pharmacist Information (ASAP 3.0 Only) **
"RTN","PSOASAP0",448,0)
RPH01() ; Reporting Status (Not Used)
"RTN","PSOASAP0",449,0)
 S PSOTTCNT=$G(PSOTTCNT)+1
"RTN","PSOASAP0",450,0)
 S PSOTPCNT=$G(PSOTPCNT)+1
"RTN","PSOASAP0",451,0)
 Q ""
"RTN","PSOASAP0",452,0)
 ;
"RTN","PSOASAP0",453,0)
RPH03() ; National Provider Identification (NPI)
"RTN","PSOASAP0",454,0)
 N RPH03
"RTN","PSOASAP0",455,0)
 S RPH03=+$$NPI^XUSNPI("Individual_ID",$$RPHIEN(),DT)
"RTN","PSOASAP0",456,0)
 Q $S(RPH03>0:RPH03,1:"")
"RTN","PSOASAP0",457,0)
 ;
"RTN","PSOASAP0",458,0)
RPH06() ; Pharmacist Last Name
"RTN","PSOASAP0",459,0)
 Q $$ESC($P($$GET1^DIQ(200,$$RPHIEN(),.01),",",1))
"RTN","PSOASAP0",460,0)
 ;
"RTN","PSOASAP0",461,0)
RPH07() ; Pharmacist First Name
"RTN","PSOASAP0",462,0)
 Q $$ESC($P($P($$GET1^DIQ(200,$$RPHIEN(),.01),",",2)," ",1))
"RTN","PSOASAP0",463,0)
 ;
"RTN","PSOASAP0",464,0)
RPH08() ; Pharmacist Middle Name
"RTN","PSOASAP0",465,0)
 Q $$ESC($P($P($$GET1^DIQ(200,$$RPHIEN(),.01),",",2)," ",2))
"RTN","PSOASAP0",466,0)
 ;
"RTN","PSOASAP0",467,0)
 ; *** PLN Third-Party Plan (ASAP 3.0 Only) **
"RTN","PSOASAP0",468,0)
PLN01() ; Reporting Status (Not Used)
"RTN","PSOASAP0",469,0)
 S PSOTTCNT=$G(PSOTTCNT)+1
"RTN","PSOASAP0",470,0)
 S PSOTPCNT=$G(PSOTPCNT)+1
"RTN","PSOASAP0",471,0)
 Q ""
"RTN","PSOASAP0",472,0)
 ;
"RTN","PSOASAP0",473,0)
 ; *** TP Segment ***
"RTN","PSOASAP0",474,0)
TP01() ; Detail Segment Count
"RTN","PSOASAP0",475,0)
 S PSOTTCNT=$G(PSOTTCNT)+1
"RTN","PSOASAP0",476,0)
 S PSOTPCNT=$G(PSOTPCNT)+1
"RTN","PSOASAP0",477,0)
 Q PSOTPCNT
"RTN","PSOASAP0",478,0)
 ;
"RTN","PSOASAP0",479,0)
 ; *** TT Segment ***
"RTN","PSOASAP0",480,0)
TT01() ; Transaction Control Number (Same as TH02)
"RTN","PSOASAP0",481,0)
 S PSOTTCNT=$G(PSOTTCNT)+1
"RTN","PSOASAP0",482,0)
 Q $$TH02()
"RTN","PSOASAP0",483,0)
 ;
"RTN","PSOASAP0",484,0)
TT02() ; Segment Count
"RTN","PSOASAP0",485,0)
 Q $G(PSOTTCNT)
"RTN","PSOASAP0",486,0)
 ;
"RTN","PSOASAP0",487,0)
PHONE(NUMBER) ; Returns the Phone number (numeric only - max 10 digits)
"RTN","PSOASAP0",488,0)
 N PHONE
"RTN","PSOASAP0",489,0)
 S PHONE=$$NUMERIC(NUMBER)
"RTN","PSOASAP0",490,0)
 I $E(PHONE,1)="1" S $E(PHONE,1)=""
"RTN","PSOASAP0",491,0)
 Q $E(PHONE,1,10)
"RTN","PSOASAP0",492,0)
 ;
"RTN","PSOASAP0",493,0)
ADDRESS(VALUE,LINE) ; Returns Address Line1 and Lin2 (max 30 characters)
"RTN","PSOASAP0",494,0)
 N ADDRESS,I,DIWL,DIWR,X
"RTN","PSOASAP0",495,0)
 K ^UTILITY($J,"W") S X=$$TRIM^XLFSTR(VALUE),DIWL=1,DIWR=30 D ^DIWP
"RTN","PSOASAP0",496,0)
 S ADDRESS=$$TRIM^XLFSTR($G(^UTILITY($J,"W",1,LINE,0)))
"RTN","PSOASAP0",497,0)
 K ^UTILITY($J,"W")
"RTN","PSOASAP0",498,0)
 Q $E($$ESC(ADDRESS),1,30)
"RTN","PSOASAP0",499,0)
 ;
"RTN","PSOASAP0",500,0)
PRVIEN() ; Returns the Provider IEN
"RTN","PSOASAP0",501,0)
 Q +$S(RECTYPE="V"&($G(RTSDATA("PRVIEN"))):RTSDATA("PRVIEN"),1:$$RXPRV^PSOBPSUT(RXIEN,RXFILL))
"RTN","PSOASAP0",502,0)
 ;
"RTN","PSOASAP0",503,0)
PRVDEA() ; Returns the Provider DEA #
"RTN","PSOASAP0",504,0)
 N PRVDEA,ORDIEN
"RTN","PSOASAP0",505,0)
 S ORDIEN=+$$GET1^DIQ(52,RXIEN,39.3,"I")
"RTN","PSOASAP0",506,0)
 K ^TMP($J,"ORDEA") D ARCHIVE^ORDEA(ORDIEN) S PRVDEA=$P($G(^TMP($J,"ORDEA",ORDIEN,2)),"^")
"RTN","PSOASAP0",507,0)
 Q PRVDEA
"RTN","PSOASAP0",508,0)
 ;
"RTN","PSOASAP0",509,0)
RPHIEN() ; Returns the Pharmacist IEN
"RTN","PSOASAP0",510,0)
 Q +$S(RECTYPE="V"&($G(RTSDATA("RPHIEN"))):RTSDATA("RPHIEN"),1:$$RXRPH^PSOBPSUT(RXIEN,RXFILL))
"RTN","PSOASAP0",511,0)
 ;
"RTN","PSOASAP0",512,0)
NUMERIC(VALUE) ; Returns the Numeric Value
"RTN","PSOASAP0",513,0)
 N NUMERIC,I
"RTN","PSOASAP0",514,0)
 S NUMERIC=""
"RTN","PSOASAP0",515,0)
 F I=1:1:$L(VALUE) I $E(VALUE,I)?1N S NUMERIC=NUMERIC_$E(VALUE,I)
"RTN","PSOASAP0",516,0)
 Q NUMERIC
"RTN","PSOASAP0",517,0)
 ;
"RTN","PSOASAP0",518,0)
ESC(VALUE) ; Escaping ASAP delimiter characters: * ~ \
"RTN","PSOASAP0",519,0)
 Q $TR(VALUE,"*~\","+-|")
"RTN","PSOBPSUT")
0^1^B90264639^B55980584
"RTN","PSOBPSUT",1,0)
PSOBPSUT ;BIRM/MFR - BPS (ECME) Utilities ;07 Jun 2005  8:39 PM
"RTN","PSOBPSUT",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247,260,281,287,289,358,385,403,408**;DEC 1997;Build 100
"RTN","PSOBPSUT",3,0)
 ;Reference to $$ECMEON^BPSUTIL supported by IA 4410
"RTN","PSOBPSUT",4,0)
 ;Reference to IBSEND^BPSECMP2 supported by IA 4411
"RTN","PSOBPSUT",5,0)
 ;Reference to $$STATUS^BPSOSRX supported by IA 4412
"RTN","PSOBPSUT",6,0)
 ;Reference to $$NDCFMT^PSSNDCUT supported by IA 4707
"RTN","PSOBPSUT",7,0)
 ;Reference to $$CLAIM^BPSBUTL supported by IA 4719
"RTN","PSOBPSUT",8,0)
 ;Reference to ^PS(55 supported by IA 2228
"RTN","PSOBPSUT",9,0)
 ;Reference to ^PSDRUG( supported by IA 221
"RTN","PSOBPSUT",10,0)
 ;Reference to ^PSDRUG("AQ" supported by IA 3165
"RTN","PSOBPSUT",11,0)
 ;
"RTN","PSOBPSUT",12,0)
ECME(RX) ; Returns "e" if Rx/Refill is Electronically Billable (3rd party)
"RTN","PSOBPSUT",13,0)
 Q $S($$STATUS^BPSOSRX(RX,$$LSTRFL^PSOBPSU1(RX))'="":"e",1:"")
"RTN","PSOBPSUT",14,0)
 ;
"RTN","PSOBPSUT",15,0)
STATUS(RX,RFL) ; Returns the Rx's ECME Status (calls STATUS^BPSOSRX)
"RTN","PSOBPSUT",16,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",17,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",18,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",19,0)
 Q $P($$STATUS^BPSOSRX(RX,RFL),"^")
"RTN","PSOBPSUT",20,0)
 ;
"RTN","PSOBPSUT",21,0)
SUBMIT(RX,RFL,IGRL,IGCMP) ; Returns whether the Rx should be submitted to ECME at the moment or not
"RTN","PSOBPSUT",22,0)
 ; Input:  (r) RX   - Rx IEN (#52)
"RTN","PSOBPSUT",23,0)
 ;         (o) RFL  - Refill # (Def.: most recent)
"RTN","PSOBPSUT",24,0)
 ;         (o) IGRL - Ignore Release Date? (1-YES/0-NO) (Def.: 0 - NO)
"RTN","PSOBPSUT",25,0)
 ;         (o) IGCMP- Ignore CMOP/Suspense check? (1-YES/0-NO) (Def.: 0 - NO)
"RTN","PSOBPSUT",26,0)
 ;
"RTN","PSOBPSUT",27,0)
 ; - Get the REFILL # (multiple IEN)
"RTN","PSOBPSUT",28,0)
 N STATUS
"RTN","PSOBPSUT",29,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",30,0)
 ; - Not the latest fill for the prescription
"RTN","PSOBPSUT",31,0)
 I RFL'=$$LSTRFL^PSOBPSU1(RX) Q 0
"RTN","PSOBPSUT",32,0)
 ; - Status not ACTIVE, DISCONTINUED, or EXPIRED
"RTN","PSOBPSUT",33,0)
 S STATUS=$$GET1^DIQ(52,RX,100,"I")
"RTN","PSOBPSUT",34,0)
 I ",0,11,12,14,15,"'[(","_STATUS_",") Q 0
"RTN","PSOBPSUT",35,0)
 ; Will suspend for CMOP
"RTN","PSOBPSUT",36,0)
 I '$G(IGCMP),$$CMOP(RX,RFL) Q 0
"RTN","PSOBPSUT",37,0)
 ; - ECME turned OFF for Rx's site
"RTN","PSOBPSUT",38,0)
 I '$$ECMEON^BPSUTIL($$RXSITE(RX,RFL)) Q 0
"RTN","PSOBPSUT",39,0)
 ; - Rx is RELEASED - Do not submit
"RTN","PSOBPSUT",40,0)
 I '$G(IGRL),$$RXRLDT(RX,RFL) Q 0
"RTN","PSOBPSUT",41,0)
 ; - Future Fill/AUTO SUSPENSE ON - will suspend
"RTN","PSOBPSUT",42,0)
 I '$G(IGCMP),$$RXFLDT(RX,RFL)>DT,$$GET1^DIQ(59,$$RXSITE(RX,RFL),.16,"I") Q 0
"RTN","PSOBPSUT",43,0)
 Q 1
"RTN","PSOBPSUT",44,0)
 ;
"RTN","PSOBPSUT",45,0)
CMOP(RX,RFL) ; Returns if the Rx will be a CMOP Rx or not
"RTN","PSOBPSUT",46,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",47,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",48,0)
 ; Output: 1 - CMOP / 0 - NON-CMOP
"RTN","PSOBPSUT",49,0)
 ;
"RTN","PSOBPSUT",50,0)
 N DFN,CMOP,MAIL,MAILEXP,DRUG,WARNS,STATUS,MW,A
"RTN","PSOBPSUT",51,0)
 ; Get the REFILL # (multiple IEN)
"RTN","PSOBPSUT",52,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",53,0)
 ; MAIL=MAIL Code, MAILEXP=Mail Code Expiration Date
"RTN","PSOBPSUT",54,0)
 S CMOP=0
"RTN","PSOBPSUT",55,0)
 S DFN=$$GET1^DIQ(52,RX,2,"I"),MAIL=$$GET1^DIQ(55,DFN,.03,"I"),MAILEXP=$$GET1^DIQ(55,DFN,.05,"I")
"RTN","PSOBPSUT",56,0)
 I MAIL>1,MAILEXP=""!(MAILEXP>DT) G QCMOP
"RTN","PSOBPSUT",57,0)
 ; Get drug IEN and check DRUG if CMOP  ,$S($G(MAILEXP)=""!($G(MAILEXP)>DT):1,1:0)
"RTN","PSOBPSUT",58,0)
 S DRUG=$$GET1^DIQ(52,RX,6,"I") G QCMOP:'DRUG,QCMOP:'$D(^PSDRUG("AQ",DRUG))
"RTN","PSOBPSUT",59,0)
 ; Not marked for O.P.
"RTN","PSOBPSUT",60,0)
 I $$GET1^DIQ(50,DRUG,63)'["O" G QCMOP
"RTN","PSOBPSUT",61,0)
 ; Drug Warning >11
"RTN","PSOBPSUT",62,0)
 S WARNS=$$GET1^DIQ(50,DRUG,8) I $L(WARNS)>11 G QCMOP
"RTN","PSOBPSUT",63,0)
 ; If tradename
"RTN","PSOBPSUT",64,0)
 I $$GET1^DIQ(52,RX,6.5)'="" G QCMOP
"RTN","PSOBPSUT",65,0)
 ; If Cancelled, Expired, Deleted, Hold
"RTN","PSOBPSUT",66,0)
 S STATUS=$$GET1^DIQ(52,RX,100,"I") I (STATUS>9&(",14,15,"'[(","_STATUS_",")))!(STATUS=4)!(STATUS=3) G QCMOP
"RTN","PSOBPSUT",67,0)
 ; Rx RELEASED
"RTN","PSOBPSUT",68,0)
 I $$RXRLDT^PSOBPSUT(RX,RFL) G QCMOP
"RTN","PSOBPSUT",69,0)
 ; MAIL/WINDOW
"RTN","PSOBPSUT",70,0)
 S MW=$S('RFL:$$GET1^DIQ(52,RX,11,"I"),1:$$GET1^DIQ(52.1,RFL_","_RX,2,"I"))
"RTN","PSOBPSUT",71,0)
 ; IF WINDOW/ORIGINAL/FUTURE FILL SETS MW = MAIL
"RTN","PSOBPSUT",72,0)
 I MW="W",$$RXFLDT^PSOBPSUT(RX,RFL)>DT S MW="M"
"RTN","PSOBPSUT",73,0)
 ; If not MAIL
"RTN","PSOBPSUT",74,0)
 I MW'="M" G QCMOP
"RTN","PSOBPSUT",75,0)
 S CMOP=1
"RTN","PSOBPSUT",76,0)
 ;
"RTN","PSOBPSUT",77,0)
QCMOP Q CMOP
"RTN","PSOBPSUT",78,0)
 ;
"RTN","PSOBPSUT",79,0)
RXRLDT(RX,RFL) ; Returns the Rx Release Date
"RTN","PSOBPSUT",80,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",81,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",82,0)
 ;        
"RTN","PSOBPSUT",83,0)
 ; Output:  RXRLDT - Rx Release Date
"RTN","PSOBPSUT",84,0)
 N RXRLDT
"RTN","PSOBPSUT",85,0)
 I '$G(RX) Q ""
"RTN","PSOBPSUT",86,0)
 S RXRLDT=$$GET1^DIQ(52,RX,31,"I")
"RTN","PSOBPSUT",87,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",88,0)
 I RFL S RXRLDT=$$GET1^DIQ(52.1,RFL_","_RX,17,"I")
"RTN","PSOBPSUT",89,0)
 I RFL["P" S RXRLDT=$$GET1^DIQ(52.2,+$E(RFL,2,9)_","_RX,8,"I")
"RTN","PSOBPSUT",90,0)
 Q RXRLDT
"RTN","PSOBPSUT",91,0)
 ;
"RTN","PSOBPSUT",92,0)
RXFLDT(RX,RFL) ; Returns the Rx Fill Date
"RTN","PSOBPSUT",93,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",94,0)
 ;         (o) RFL - Refill # (Default: most recent)      
"RTN","PSOBPSUT",95,0)
 ; Output:  RXFLDT - Rx Fill Date (FM format)
"RTN","PSOBPSUT",96,0)
 N RXFLDT
"RTN","PSOBPSUT",97,0)
 I '$G(RX) Q ""
"RTN","PSOBPSUT",98,0)
 S RXFLDT=$$GET1^DIQ(52,RX,22,"I")
"RTN","PSOBPSUT",99,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",100,0)
 I RFL S RXFLDT=$$GET1^DIQ(52.1,RFL_","_RX,.01,"I")
"RTN","PSOBPSUT",101,0)
 I RFL["P" S RXFLDT=$$GET1^DIQ(52.2,+$E(RFL,2,9)_","_RX,.01,"I")
"RTN","PSOBPSUT",102,0)
 Q RXFLDT
"RTN","PSOBPSUT",103,0)
 ;
"RTN","PSOBPSUT",104,0)
RXSUDT(RX,RFL) ; Returns the prescription/fill Suspense Date for the RX/Reject passed in
"RTN","PSOBPSUT",105,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSUT",106,0)
 ;       (o) RFL  - Refill IEN (#52.1)
"RTN","PSOBPSUT",107,0)
 ;Output: SUSPENSE DATE (External format) or <NULL>, if not suspended
"RTN","PSOBPSUT",108,0)
 ;
"RTN","PSOBPSUT",109,0)
 I $G(^PSRX(RX,"STA"))'=5 Q ""
"RTN","PSOBPSUT",110,0)
 N SURX,SURFL
"RTN","PSOBPSUT",111,0)
 S SURX=$O(^PS(52.5,"B",RX,0)) I 'SURX Q ""
"RTN","PSOBPSUT",112,0)
 I $$GET1^DIQ(52.5,SURX,.05,"I") Q ""
"RTN","PSOBPSUT",113,0)
 S SURFL=+$$GET1^DIQ(52.5,SURX,9) I RFL'=SURFL Q ""
"RTN","PSOBPSUT",114,0)
 Q $$GET1^DIQ(52.5,SURX,.02,"I")
"RTN","PSOBPSUT",115,0)
 ;
"RTN","PSOBPSUT",116,0)
RXSITE(RX,RFL) ; Returns the Rx DIVISION
"RTN","PSOBPSUT",117,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",118,0)
 ;         (o) RFL - Refill #
"RTN","PSOBPSUT",119,0)
 ; Output:  SITE - Rx Fill Date
"RTN","PSOBPSUT",120,0)
 ;        
"RTN","PSOBPSUT",121,0)
 N SITE
"RTN","PSOBPSUT",122,0)
 I '$G(RX) Q ""
"RTN","PSOBPSUT",123,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",124,0)
 I RFL S SITE=$$GET1^DIQ(52.1,RFL_","_RX,8,"I")
"RTN","PSOBPSUT",125,0)
 I RFL["P" S SITE=$$GET1^DIQ(52.2,+$E(RFL,2,9)_","_RX,.09,"I")
"RTN","PSOBPSUT",126,0)
 I (RFL=0)!'$G(SITE) S SITE=$$GET1^DIQ(52,RX,20,"I")
"RTN","PSOBPSUT",127,0)
 Q SITE
"RTN","PSOBPSUT",128,0)
 ;
"RTN","PSOBPSUT",129,0)
RXSTATE(RX,RFL) ; Returns the Rx Division STATE
"RTN","PSOBPSUT",130,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",131,0)
 ;         (o) RFL - Refill #
"RTN","PSOBPSUT",132,0)
 ; Output:  SITE - Rx Fill Date
"RTN","PSOBPSUT",133,0)
 N SITE
"RTN","PSOBPSUT",134,0)
 S SITE=$$RXSITE(RX,RFL) I 'SITE Q ""
"RTN","PSOBPSUT",135,0)
 Q +$$GET1^DIQ(59,SITE,.08,"I")
"RTN","PSOBPSUT",136,0)
 ;
"RTN","PSOBPSUT",137,0)
RXQTY(RXIEN,FILL) ; Returns the Quantity Dispense for the Fill
"RTN","PSOBPSUT",138,0)
 ; Input:  (r) RXIEN - Rx IEN (#52) 
"RTN","PSOBPSUT",139,0)
 ;         (o) FILL  - Refill # (Default: most recent)
"RTN","PSOBPSUT",140,0)
 ; Output:  RXQTY - Quantity Dispensed
"RTN","PSOBPSUT",141,0)
 N RXQTY
"RTN","PSOBPSUT",142,0)
 I '$G(RXIEN) Q ""
"RTN","PSOBPSUT",143,0)
 S RXQTY=$$GET1^DIQ(52,RXIEN,7,"I")
"RTN","PSOBPSUT",144,0)
 I '$D(FILL) S FILL=$$LSTRFL^PSOBPSU1(RXIEN)
"RTN","PSOBPSUT",145,0)
 I FILL S RXQTY=$$GET1^DIQ(52.1,FILL_","_RXIEN,1,"I")
"RTN","PSOBPSUT",146,0)
 I FILL["P" S RXQTY=$$GET1^DIQ(52.2,+$E(FILL,2,9)_","_RXIEN,.04,"I")
"RTN","PSOBPSUT",147,0)
 Q RXQTY
"RTN","PSOBPSUT",148,0)
 ;
"RTN","PSOBPSUT",149,0)
RXDAYSUP(RXIEN,FILL) ; Returns the Days Supply for the Fill
"RTN","PSOBPSUT",150,0)
 ; Input:  (r) RXIEN - Rx IEN (#52) 
"RTN","PSOBPSUT",151,0)
 ;         (o) FILL  - Refill # (Default: most recent)
"RTN","PSOBPSUT",152,0)
 ; Output:  RXDAYSUP - Days Supply
"RTN","PSOBPSUT",153,0)
 N RXDAYSUP
"RTN","PSOBPSUT",154,0)
 I '$G(RXIEN) Q ""
"RTN","PSOBPSUT",155,0)
 S RXDAYSUP=$$GET1^DIQ(52,RXIEN,8,"I")
"RTN","PSOBPSUT",156,0)
 I '$D(FILL) S FILL=$$LSTRFL^PSOBPSU1(RXIEN)
"RTN","PSOBPSUT",157,0)
 I FILL S RXDAYSUP=$$GET1^DIQ(52.1,FILL_","_RXIEN,1.1,"I")
"RTN","PSOBPSUT",158,0)
 I FILL["P" S RXDAYSUP=$$GET1^DIQ(52.2,+$E(FILL,2,9)_","_RXIEN,.041,"I")
"RTN","PSOBPSUT",159,0)
 Q RXDAYSUP
"RTN","PSOBPSUT",160,0)
 ;
"RTN","PSOBPSUT",161,0)
RXPRV(RXIEN,FILL) ; Returns the Rx Fill Provider IEN
"RTN","PSOBPSUT",162,0)
 ; Input:  (r) RXIEN  - Rx IEN (#52) 
"RTN","PSOBPSUT",163,0)
 ;         (o) FILL - Refill # (Default: most recent - except Partial)
"RTN","PSOBPSUT",164,0)
 ;                    Note: "P1", "P2"... represent partial fills
"RTN","PSOBPSUT",165,0)
 ; Output:  RXPRV - Rx Fill Provider IEN
"RTN","PSOBPSUT",166,0)
 N RXPRV
"RTN","PSOBPSUT",167,0)
 I '$G(RXIEN) Q ""
"RTN","PSOBPSUT",168,0)
 I '$D(FILL) S RFL=$$LSTRFL^PSOBPSU1(RXIEN)
"RTN","PSOBPSUT",169,0)
 I FILL S RXPRV=$$GET1^DIQ(52.1,FILL_","_RXIEN,15,"I")
"RTN","PSOBPSUT",170,0)
 I FILL["P" S RXPRV=$$GET1^DIQ(52.2,+$E(FILL,2,9)_","_RXIEN,6,"I")
"RTN","PSOBPSUT",171,0)
 I '$G(RXPRV) S RXPRV=$$GET1^DIQ(52,RXIEN,4,"I")
"RTN","PSOBPSUT",172,0)
 Q RXPRV
"RTN","PSOBPSUT",173,0)
 ;
"RTN","PSOBPSUT",174,0)
RXRPH(RXIEN,FILL) ; Returns the Pharmacist IEN for the Fill
"RTN","PSOBPSUT",175,0)
 ; Input:  (r) RXIEN - Rx IEN (#52) 
"RTN","PSOBPSUT",176,0)
 ;         (o) FILL  - Refill # (Default: most recent)
"RTN","PSOBPSUT",177,0)
 ; Output:  RXRPH - Pharmacist IEN (Pointer to File #200)
"RTN","PSOBPSUT",178,0)
 N RXRPH
"RTN","PSOBPSUT",179,0)
 I '$G(RXIEN) Q ""
"RTN","PSOBPSUT",180,0)
 I '$D(FILL) S FILL=$$LSTRFL^PSOBPSU1(RXIEN)
"RTN","PSOBPSUT",181,0)
 I FILL S RXRPH=$$GET1^DIQ(52.1,FILL_","_RXIEN,4,"I")
"RTN","PSOBPSUT",182,0)
 I FILL["P" S RXRPH=$$GET1^DIQ(52.2,+$E(FILL,2,9)_","_RXIEN,.05,"I")
"RTN","PSOBPSUT",183,0)
 I '$G(RXRPH) S RXRPH=$$GET1^DIQ(52,RXIEN,23,"I")
"RTN","PSOBPSUT",184,0)
 Q RXRPH
"RTN","PSOBPSUT",185,0)
 ;
"RTN","PSOBPSUT",186,0)
VALUE(RX,FILL,ORFLD,RFFLD,PRFLD,OROK) ; Retrieve corresponding Internal value for the specific prescription fill
"RTN","PSOBPSUT",187,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",188,0)
 ;         (r) FILL - Refill #
"RTN","PSOBPSUT",189,0)
 ;         (r) ORFLD - Original Fill Field #
"RTN","PSOBPSUT",190,0)
 ;         (r) RFFLD - Refill Field #
"RTN","PSOBPSUT",191,0)
 ;         (r) PRFLD - Partial Field #
"RTN","PSOBPSUT",192,0)
 ;         (o) OROK  - OK to retrieve from Original Fill (1: YES/0:NO)
"RTN","PSOBPSUT",193,0)
 ; Output:  VALUE - Fill Field Value
"RTN","PSOBPSUT",194,0)
 ;
"RTN","PSOBPSUT",195,0)
 N VALUE
"RTN","PSOBPSUT",196,0)
 I '$G(RX)!($G(FILL)="") Q ""
"RTN","PSOBPSUT",197,0)
 I RFFLD,FILL S VALUE=$$GET1^DIQ(52.1,FILL_","_RX,RFFLD,"I")
"RTN","PSOBPSUT",198,0)
 I PRFLD,FILL["P" S VALUE=$$GET1^DIQ(52.2,+$E(FILL,2,9)_","_RX,PRFLD,"I")
"RTN","PSOBPSUT",199,0)
 I ORFLD,(FILL=0!(($G(VALUE)="")&$G(OROK))) S VALUE=$$GET1^DIQ(52,RX,ORFLD,"I")
"RTN","PSOBPSUT",200,0)
 Q $G(VALUE)
"RTN","PSOBPSUT",201,0)
 ;
"RTN","PSOBPSUT",202,0)
MANREL(RX,RFL,PID) ; ePharmacy Manual Rx Release
"RTN","PSOBPSUT",203,0)
 ;Input: (r) RX  - Rx IEN (#52)
"RTN","PSOBPSUT",204,0)
 ;       (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",205,0)
 ;       (o) PID - Displays PID/Drug/Rx in the NDC prompts
"RTN","PSOBPSUT",206,0)
 ;Output: "" (null - OK to Release) OR "^" (User entered "^", or no valid NDC on file for ePharmacy Rx)
"RTN","PSOBPSUT",207,0)
 ;       
"RTN","PSOBPSUT",208,0)
 N ACTION
"RTN","PSOBPSUT",209,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",210,0)
 ; Check for unresolved TRICARE/CHAMPVA non-billable reject code, PSO*7*358
"RTN","PSOBPSUT",211,0)
 I $$PSOET^PSOREJP3(RX,RFL) W ! Q "^"
"RTN","PSOBPSUT",212,0)
 ; Checking for REJECTS before proceeding to Rx Release
"RTN","PSOBPSUT",213,0)
 I $$FIND^PSOREJUT(RX,RFL) D  I ACTION="Q"!(ACTION="^") W ! Q "^"
"RTN","PSOBPSUT",214,0)
 . S ACTION=$$HDLG^PSOREJU1(RX,RFL,"79,88","ED","OIQ","Q")
"RTN","PSOBPSUT",215,0)
 ; - ePharmacy switch is OFF
"RTN","PSOBPSUT",216,0)
 I '$$ECMEON^BPSUTIL($$RXSITE^PSOBPSUT(RX,RFL)) Q ""
"RTN","PSOBPSUT",217,0)
 ; - Not an ePharmacy Rx
"RTN","PSOBPSUT",218,0)
 I $$STATUS^PSOBPSUT(RX,RFL)="" Q ""
"RTN","PSOBPSUT",219,0)
 I '$D(PSOTRIC) N PSOTRIC S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,PSOTRIC)
"RTN","PSOBPSUT",220,0)
 ; - NDC editing before Rx release
"RTN","PSOBPSUT",221,0)
 S ACTION=$$CHGNDC^PSONDCUT(RX,RFL,$G(PID))
"RTN","PSOBPSUT",222,0)
 I ACTION="^"!(ACTION=2) D  Q "^"
"RTN","PSOBPSUT",223,0)
 . W:ACTION="^" !!,$C(7),"A valid NDC must be entered before the Release function can be completed.",! H 1
"RTN","PSOBPSUT",224,0)
 . I $G(PSOTRIC) D:ACTION=2 TRIC
"RTN","PSOBPSUT",225,0)
 ; - Checking for OPEN/UNRESOLVED 3rd. Party Payer Rejects (After possible NDC edit)
"RTN","PSOBPSUT",226,0)
 I $$FIND^PSOREJUT(RX,RFL) D  I ACTION="Q"!(ACTION="^") W ! Q "^"
"RTN","PSOBPSUT",227,0)
 . S ACTION=$$HDLG^PSOREJU1(RX,RFL,"79,88","ED","OIQ","Q")
"RTN","PSOBPSUT",228,0)
 I $G(PSOTRIC),$$STATUS^PSOBPSUT(RX,RFL)["IN PROGRESS" D TRIC Q "^"
"RTN","PSOBPSUT",229,0)
 Q ""
"RTN","PSOBPSUT",230,0)
 ;
"RTN","PSOBPSUT",231,0)
TRIC ;
"RTN","PSOBPSUT",232,0)
 W !!,$C(7),$S(PSOTRIC=1:"TRICARE",1:"CHAMPVA")_" Rx remains in 'IN PROGRESS' status for ECME, and cannot be released.",! H 1
"RTN","PSOBPSUT",233,0)
 Q
"RTN","PSOBPSUT",234,0)
 ;
"RTN","PSOBPSUT",235,0)
AUTOREL(RX,RFL,RLDT,NDC,SRC,STS,HNG) ; Sends Rx Release information to ECME/IB and updates NDC
"RTN","PSOBPSUT",236,0)
 ;                                     in the DRUG/PRESCRIPTION files
"RTN","PSOBPSUT",237,0)
 ;Input: (r) RX  - Rx IEN (#52)
"RTN","PSOBPSUT",238,0)
 ;       (o) RFL - Refill #  (Default: most recent)
"RTN","PSOBPSUT",239,0)
 ;       (r) RLDT- Release Date
"RTN","PSOBPSUT",240,0)
 ;       (r) NDC - NDC Number (Must be 11 digits)
"RTN","PSOBPSUT",241,0)
 ;       (o) SRC - SOURCE: "C" - CMOP / "A" - OPAI
"RTN","PSOBPSUT",242,0)
 ;       (o) STS - Status: (S)uccessful/(U)nsuccessful Release (Default: "S" - Successful)
"RTN","PSOBPSUT",243,0)
 ;       (o) HNG - HANG time after resubmission and before checking the status of the claim (Default: 0)
"RTN","PSOBPSUT",244,0)
 ;       
"RTN","PSOBPSUT",245,0)
 N RXNDC,SITE
"RTN","PSOBPSUT",246,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",247,0)
 S:'$D(STS) STS="S" S:'$D(SRC) SRC="" S HNG=+$G(HNG)
"RTN","PSOBPSUT",248,0)
 S RXNDC=$$GETNDC^PSONDCUT(RX,RFL)
"RTN","PSOBPSUT",249,0)
 ; - Saves the NDC from CMOP/Automated Dispensing Machine in the Prescription file
"RTN","PSOBPSUT",250,0)
 I $$NDCFMT^PSSNDCUT(NDC)'="" D SAVNDC^PSONDCUT(RX,RFL,$$NDCFMT^PSSNDCUT(NDC),$S(SRC="C":1,1:0))
"RTN","PSOBPSUT",251,0)
 ; - Not an ePharmacy Rx
"RTN","PSOBPSUT",252,0)
 I $$STATUS^PSOBPSUT(RX,RFL)="" Q ""
"RTN","PSOBPSUT",253,0)
 ; - Unsuccessful Release 
"RTN","PSOBPSUT",254,0)
 I STS="U" D  Q
"RTN","PSOBPSUT",255,0)
 . D REVERSE^PSOBPSU1(RX,RFL,"CRLX",,"UNSUCCESSFUL "_$S(SRC="C":"CMOP",1:"EXT INTERFACE")_" RELEASE",1)
"RTN","PSOBPSUT",256,0)
 ; - Notifying IB of a Rx RELEASE event 
"RTN","PSOBPSUT",257,0)
 D RELEASE^PSOBPSU1(RX,RFL)
"RTN","PSOBPSUT",258,0)
 ; - Invalid NDC from Automated Dispensing Machine
"RTN","PSOBPSUT",259,0)
 I SRC="A",$$NDCFMT^PSSNDCUT(NDC)="" D  Q
"RTN","PSOBPSUT",260,0)
 . D REVERSE^PSOBPSU1(RX,RFL,"CRLR",,"INVALID EXT INTERFACE NDC",1,NDC)
"RTN","PSOBPSUT",261,0)
 ; - Invalid NDC number for CMOP
"RTN","PSOBPSUT",262,0)
 I SRC="C",$$NDCFMT^PSSNDCUT(NDC)="" D  Q
"RTN","PSOBPSUT",263,0)
 . D REVERSE^PSOBPSU1(RX,RFL,"CRLR",,"INVALID CMOP NDC",1,NDC)
"RTN","PSOBPSUT",264,0)
 ; - If NDC not equal RXNDC, issue reversal and submit new claim
"RTN","PSOBPSUT",265,0)
 I SRC="A",$$NDCFMT^PSSNDCUT(NDC)'=RXNDC D  Q
"RTN","PSOBPSUT",266,0)
 . D ECMESND^PSOBPSU1(RX,RFL,RLDT,"CRLB",$$NDCFMT^PSSNDCUT(NDC),,"AUTO RELEASE",,1,,1),UPDFL^PSOBPSU2(RX,RFL,RLDT)
"RTN","PSOBPSUT",267,0)
 . H HNG
"RTN","PSOBPSUT",268,0)
 . ; - If new claim returned PAYABLE, save new NDC in the DRUG/PRESCRIPTION files
"RTN","PSOBPSUT",269,0)
 . I $$STATUS^PSOBPSUT(RX,RFL)="E PAYABLE" D SAVNDC^PSONDCUT(RX,RFL,$$NDCFMT^PSSNDCUT(NDC),0,1)
"RTN","PSOBPSUT",270,0)
 ; - If NDC not equal RXNDC, issue reversal and submit new claim
"RTN","PSOBPSUT",271,0)
 I SRC="C",$$NDCFMT^PSSNDCUT(NDC)'=RXNDC D  Q
"RTN","PSOBPSUT",272,0)
 . ; - Reverse/Resubmit with correct NDC
"RTN","PSOBPSUT",273,0)
 . D ECMESND^PSOBPSU1(RX,RFL,RLDT,"CRLB",$$NDCFMT^PSSNDCUT(NDC),1,"CMOP RELEASE",,1,,1),UPDFL^PSOBPSU2(RX,RFL,RLDT)
"RTN","PSOBPSUT",274,0)
 . ; - Wait for a response from the Payer for the submission above
"RTN","PSOBPSUT",275,0)
 . H HNG
"RTN","PSOBPSUT",276,0)
 . ; - If new claim returned PAYABLE, save new NDC in the DRUG/PRESCRIPTION files
"RTN","PSOBPSUT",277,0)
 . I $$STATUS^PSOBPSUT(RX,RFL)="E PAYABLE" D SAVNDC^PSONDCUT(RX,RFL,$$NDCFMT^PSSNDCUT(NDC),1,1)
"RTN","PSOBPSUT",278,0)
 ; - Calls ECME api responsible for notifying IB to create a BILL
"RTN","PSOBPSUT",279,0)
 D IBSEND(RX,RFL,1)
"RTN","PSOBPSUT",280,0)
 Q
"RTN","PSOBPSUT",281,0)
 ;
"RTN","PSOBPSUT",282,0)
IBSEND(RX,RFL,AUTO) ; Rx Release
"RTN","PSOBPSUT",283,0)
 ; Create Release Event
"RTN","PSOBPSUT",284,0)
 ; Calls ECME, if needed
"RTN","PSOBPSUT",285,0)
 ; If Payable or Duplicate, calls IB to create a bill
"RTN","PSOBPSUT",286,0)
 ;
"RTN","PSOBPSUT",287,0)
 ;Input: (r) RX  - Rx IEN (#52)
"RTN","PSOBPSUT",288,0)
 ;       (o) RFL - Refill #  (Default: most recent)
"RTN","PSOBPSUT",289,0)
 ;       (o) AUTO - Called by Auto Release Process
"RTN","PSOBPSUT",290,0)
 ;
"RTN","PSOBPSUT",291,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",292,0)
 ; - ECME turned OFF for Rx's site
"RTN","PSOBPSUT",293,0)
 I '$$ECMEON^BPSUTIL($$RXSITE^PSOBPSUT(RX,RFL)) Q
"RTN","PSOBPSUT",294,0)
 N STATUS
"RTN","PSOBPSUT",295,0)
 S STATUS=$$STATUS(RX,RFL)
"RTN","PSOBPSUT",296,0)
 ; - Not an ePharmacy Rx
"RTN","PSOBPSUT",297,0)
 I STATUS="" Q ""
"RTN","PSOBPSUT",298,0)
 ; - Notifying IB of a Rx RELEASE event 
"RTN","PSOBPSUT",299,0)
 ; - Do not call for auto release process as it has already been done
"RTN","PSOBPSUT",300,0)
 S AUTO=+$G(AUTO)
"RTN","PSOBPSUT",301,0)
 I 'AUTO D RELEASE^PSOBPSU1(RX,RFL,DUZ)
"RTN","PSOBPSUT",302,0)
 ; - If the previous ECME claim was reversed or incomplete, re-submit the claim to the payer
"RTN","PSOBPSUT",303,0)
 I (STATUS="E REVERSAL ACCEPTED")!(STATUS="IN PROGRESS") D  Q
"RTN","PSOBPSUT",304,0)
 . D ECMESND^PSOBPSU1(RX,RFL,$$RXRLDT^PSOBPSUT(RX,RFL),$S(AUTO:"C",1:"")_"RRL")
"RTN","PSOBPSUT",305,0)
 ; - Notifying ECME of a BILLING event 
"RTN","PSOBPSUT",306,0)
 I STATUS="E PAYABLE"!(STATUS="E DUPLICATE") D  Q
"RTN","PSOBPSUT",307,0)
 . N PSOCLAIM S PSOCLAIM=$$CLAIM^BPSBUTL(RX,RFL)
"RTN","PSOBPSUT",308,0)
 . D IBSEND^BPSECMP2($P(PSOCLAIM,"^",2),$P(PSOCLAIM,"^",3),"BILL",DUZ)
"RTN","PSOBPSUT",309,0)
 Q
"RTN","PSOBPSUT",310,0)
 ;
"RTN","PSOBPSUT",311,0)
RETRX(RX,RFL) ; - Re-transmit a claim for the prescription/fill?
"RTN","PSOBPSUT",312,0)
 ;Input: (r) RX  - Rx IEN (#52)
"RTN","PSOBPSUT",313,0)
 ;       (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",314,0)
 ;Output: 1 - Re-transmit  /  0 - Don't re-transmit
"RTN","PSOBPSUT",315,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",316,0)
 I RFL Q +$$GET1^DIQ(52.1,RFL_","_RX,82,"I")
"RTN","PSOBPSUT",317,0)
 Q +$$GET1^DIQ(52,RX,82,"I")
"RTN","PSOHELP1")
0^27^B53295057^B52554989
"RTN","PSOHELP1",1,0)
PSOHELP1 ;BIR/SAB-OUTPATIENT HELP TEXT/UTILITY ROUTINE 2 ;11/09/92
"RTN","PSOHELP1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**23,36,88,146,227,222,408**;DEC 1997;Build 100
"RTN","PSOHELP1",3,0)
 ;External reference ^DIC(19.2 supported by DBIA 1472
"RTN","PSOHELP1",4,0)
 ;External reference ^PSDRUG( supported by DBIA 221
"RTN","PSOHELP1",5,0)
 ;External reference ^PS(55 supported by DBIA 2228
"RTN","PSOHELP1",6,0)
2001 N PSOHLP S PSOHLP(1,"F")="!!"
"RTN","PSOHELP1",7,0)
 S PSOHLP(1)="Enter the lowest prescription number for this site."
"RTN","PSOHELP1",8,0)
 S PSOHLP(2,"F")="!"
"RTN","PSOHELP1",9,0)
 S PSOHLP(2)="If this is the first time you are entering this field,"
"RTN","PSOHELP1",10,0)
 S PSOHLP(3,"F")="!"
"RTN","PSOHELP1",11,0)
 S PSOHLP(3)="you should pick a number LARGER than the last prescription number used."
"RTN","PSOHELP1",12,0)
 S PSOHLP(4,"F")="!!"
"RTN","PSOHELP1",13,0)
 D WRITE
"RTN","PSOHELP1",14,0)
 Q
"RTN","PSOHELP1",15,0)
 ;
"RTN","PSOHELP1",16,0)
2002 N PSOHLP S PSOHLP(1,"F")="!!"
"RTN","PSOHELP1",17,0)
 S PSOHLP(1)="Enter the largest acceptable prescription number for this site."
"RTN","PSOHELP1",18,0)
 S PSOHLP(2,"F")="!"
"RTN","PSOHELP1",19,0)
 S PSOHLP(2)="The difference between this number and the lowest prescription"
"RTN","PSOHELP1",20,0)
 S PSOHLP(3,"F")="!"
"RTN","PSOHELP1",21,0)
 S PSOHLP(3)="number should be substantial. The system will not allow numbers"
"RTN","PSOHELP1",22,0)
 S PSOHLP(4,"F")="!"
"RTN","PSOHELP1",23,0)
 S PSOHLP(4)="larger than the one you choose. It will give a warning message"
"RTN","PSOHELP1",24,0)
 S PSOHLP(5,"F")="!"
"RTN","PSOHELP1",25,0)
 S PSOHLP(5)="and not allow entry of any more prescriptions."
"RTN","PSOHELP1",26,0)
 S PSOHLP(6,"F")="!!"
"RTN","PSOHELP1",27,0)
 D WRITE
"RTN","PSOHELP1",28,0)
 Q
"RTN","PSOHELP1",29,0)
 ;
"RTN","PSOHELP1",30,0)
2003 N PSOHLP S PSOHLP(1,"F")="!!"
"RTN","PSOHELP1",31,0)
 S PSOHLP(1)="Enter the last prescription number used."
"RTN","PSOHELP1",32,0)
 S PSOHLP(2,"F")="!"
"RTN","PSOHELP1",33,0)
 S PSOHLP(2)="If you are entering this for the first time, this number"
"RTN","PSOHELP1",34,0)
 S PSOHLP(3,"F")="!"
"RTN","PSOHELP1",35,0)
 S PSOHLP(3)="should be the same as the number you entered for LOW RX#."
"RTN","PSOHELP1",36,0)
 S PSOHLP(4,"F")="!"
"RTN","PSOHELP1",37,0)
 S PSOHLP(4)="The system will take this number, increment it by one"
"RTN","PSOHELP1",38,0)
 S PSOHLP(5,"F")="!"
"RTN","PSOHELP1",39,0)
 S PSOHLP(5)="until it finds a number that has not been used, and then"
"RTN","PSOHELP1",40,0)
 S PSOHLP(6,"F")="!"
"RTN","PSOHELP1",41,0)
 S PSOHLP(6)="use that number for the next prescription."
"RTN","PSOHELP1",42,0)
 S PSOHLP(7,"F")="!!"
"RTN","PSOHELP1",43,0)
 D WRITE
"RTN","PSOHELP1",44,0)
 Q
"RTN","PSOHELP1",45,0)
WRITE ;EN^DDIOL call
"RTN","PSOHELP1",46,0)
 D EN^DDIOL(.PSOHLP) K PSOHLP
"RTN","PSOHELP1",47,0)
 Q
"RTN","PSOHELP1",48,0)
AUTOQ ;entry point to queue all background jobs
"RTN","PSOHELP1",49,0)
 D:0 RESET1^PSOTPHL1  ;placed out of order by PSO*7*227
"RTN","PSOHELP1",50,0)
 D AUTO^PSOAUTOC ;ques auto cancel job
"RTN","PSOHELP1",51,0)
 D SETUP^PSOAUTOC ;ques nightly cost compile
"RTN","PSOHELP1",52,0)
 D SETUP1^PSOAUTOC ;ques nightly mgmt compile
"RTN","PSOHELP1",53,0)
 D QUP,CLO ;ques amis compile
"RTN","PSOHELP1",54,0)
 D SETUP^PSOHLEXP ;ques exipration status update
"RTN","PSOHELP1",55,0)
 D AUTO^PSOSUDEL ;ques job to deleted rxs printed from 52.5
"RTN","PSOHELP1",56,0)
 D AUTO^PSOSPML0 ;ques job to transmit CS Rx's to the states
"RTN","PSOHELP1",57,0)
CLO K Y,C,D,D0,DI,DQ,DA,DIE,DR,DIC,Y,X,PSOTM,PSOOPTN,%DT,PSOPTN
"RTN","PSOHELP1",58,0)
 Q
"RTN","PSOHELP1",59,0)
QUP K %DT,DIC,DTOUT S DIC(0)="XZM",DIC="^DIC(19.2,",X="PSO AMIS COMPILE" D ^DIC
"RTN","PSOHELP1",60,0)
 I +Y>0 D EDIT^XUTMOPT("PSO AMIS COMPILE") G CLO
"RTN","PSOHELP1",61,0)
 D RESCH^XUTMOPT("PSO AMIS COMPILE","","","24H","L"),EDIT^XUTMOPT("PSO AMIS COMPILE")
"RTN","PSOHELP1",62,0)
 Q
"RTN","PSOHELP1",63,0)
EXP ;reset "P","A" xref in 55 from cancel option
"RTN","PSOHELP1",64,0)
 Q:$G(REA)="C"
"RTN","PSOHELP1",65,0)
 S PCD=+$P($G(^PSRX(DA,3)),"^",5) I 'PCD D  K EXP,PCD,IFN Q
"RTN","PSOHELP1",66,0)
 .S (IFN,EXP)=0
"RTN","PSOHELP1",67,0)
 .F  S EXP=$O(^PS(55,PSODFN,"P","A",EXP)) Q:'EXP  F  S IFN=$O(^PS(55,PSODFN,"P","A",EXP,IFN)) Q:'IFN  I IFN=DA K ^PS(55,PSODFN,"P","A",EXP,DA) S ^PS(55,PSODFN,"P","A",$P(^PSRX(DA,2),"^",6),DA)=""
"RTN","PSOHELP1",68,0)
 K ^PS(55,PSODFN,"P","A",PCD,DA) S ^PS(55,PSODFN,"P","A",$P(^PSRX(DA,2),"^",6),DA)="",$P(^PSRX(DA,3),"^",5)=""
"RTN","PSOHELP1",69,0)
 K PCD Q
"RTN","PSOHELP1",70,0)
SREF ;set "P","A" xref in 55 from fileman
"RTN","PSOHELP1",71,0)
 I $P($G(^PSRX(X,"STA")),"^")=12,'$P($G(^PSRX(X,3)),"^",5) D  Q
"RTN","PSOHELP1",72,0)
 .F PX=0:0 S PA=$O(^PSRX(X,"A",PX)) Q:'PX  S:$P(^PSRX(X,"A",PX,0),"^",2)="C" PCD=$P($P(^PSRX(X,"A",PX,0),"^"),".")
"RTN","PSOHELP1",73,0)
 .I $G(PCD) S ^PS(55,DA(1),"P","A",PCD,X)="",$P(^PSRX(X,3),"^",5)=PCD
"RTN","PSOHELP1",74,0)
 .E  S:$P($G(^PSRX(X,2)),"^",6) ^PS(55,DA(1),"P","A",$P(^PSRX(X,2),"^",6),X)=""
"RTN","PSOHELP1",75,0)
 .K PCD,PX
"RTN","PSOHELP1",76,0)
 I $P($G(^PSRX(X,"STA")),"^")=12,$P($G(^PSRX(X,3)),"^",5) S ^PS(55,DA(1),"P","A",$P(^PSRX(X,3),"^",5),X)="" Q
"RTN","PSOHELP1",77,0)
 S:$P($G(^PSRX(X,2)),"^",6) ^PS(55,DA(1),"P","A",$P(^PSRX(X,2),"^",6),X)=""
"RTN","PSOHELP1",78,0)
 Q
"RTN","PSOHELP1",79,0)
KREF ;kill "P","A" xref in 55 from fileman
"RTN","PSOHELP1",80,0)
 K:+$P($G(^PSRX(X,2)),"^",6) ^PS(55,DA(1),"P","A",+$P(^PSRX(X,2),"^",6),X)
"RTN","PSOHELP1",81,0)
 I $P($G(^PSRX(X,"STA")),"^")=12,'$P($G(^PSRX(X,3)),"^",5) D  K PCD,PX Q
"RTN","PSOHELP1",82,0)
 .F PX=0:0 S A=$O(^PSRX(X,"A",PX)) Q:'PX  S:$P(^PSRX(X,"A",PX,0),"^",2)="C" PCD=$P($P(^PSRX(X,"A",PX,0),"^"),".")
"RTN","PSOHELP1",83,0)
 .I $G(PCD) K ^PS(55,DA(1),"P","A",PCD,X)
"RTN","PSOHELP1",84,0)
 I $P($G(^PSRX(X,"STA")),"^")=12,$P($G(^PSRX(X,3)),"^",5) K ^PS(55,DA(1),"P","A",$P(^PSRX(X,3),"^",5),X)
"RTN","PSOHELP1",85,0)
 Q
"RTN","PSOHELP1",86,0)
DAYS K PSMAX I $P($G(^PSDRUG(+$P(^PSRX(DA,0),"^",6),0)),"^",4),$P(^PSRX(DA,0),"^",7)/X>$P($G(^PSDRUG(+$P(^PSRX(DA,0),"^",6),0)),"^",4) D EN^DDIOL("Max Daily Dose of "_$P($G(^(0)),"^",4)_" Exceeded","","$C(7),!?5") D EN^DDIOL(" ","","!")
"RTN","PSOHELP1",87,0)
 S PSDAYS=$P(^PSRX(DA,0),"^",8),PSRF=+$P(^(0),"^",9),PTST=$G(^PS(53,$P(^(0),"^",3),0)),PTDY=$P(PTST,"^",3),PTRF=$P(PTST,"^",4),PSODEA=$P(^PSDRUG($P(^PSRX(DA,0),"^",6),0),"^",3),CS=0
"RTN","PSOHELP1",88,0)
 D NARC I $G(CLOZPAT)=1,'PSRF,X>14 K X D EN^DDIOL("     14 Day Supply Max for Clozapine Prescriptions.","","$C(7),!!") Q
"RTN","PSOHELP1",89,0)
 I $G(CLOZPAT)=0,'PSRF,X>7 K X D EN^DDIOL("     7 Day Supply Max for Clozapine Prescriptions.","","$C(7),!!") Q
"RTN","PSOHELP1",90,0)
 I $G(CLOZPAT)=1,X'=7,PSRF K X D EN^DDIOL("     Day Supply Must Equal 7 with 1 refill for Clozapine Prescriptions.","","$C(7),!!") Q
"RTN","PSOHELP1",91,0)
 I $G(CLOZPAT)=1,'PSRF,X>14 K X D EN^DDIOL("     14 Day Supply Max for Clozapine Prescriptions.","","$C(7),!!") Q
"RTN","PSOHELP1",92,0)
 I $G(CLOZPAT)=2,'PSRF,X>28 K X D EN^DDIOL("     28 Day Supply Max for Clozapine Prescriptions.","","$C(7),!!") Q
"RTN","PSOHELP1",93,0)
 I $G(CLOZPAT)=2,PSRF=1,X>14 K X D EN^DDIOL("     Day Supply Must Equal 14 with 1 refill for Clozapine Prescriptions.","","$C(7),!!") Q
"RTN","PSOHELP1",94,0)
 I $G(CLOZPAT)=2,PSRF=3,X>7 K X D EN^DDIOL("     Day Supply Must Equal 7 with 3 refill for Clozapine Prescriptions.","","$C(7),!!") Q
"RTN","PSOHELP1",95,0)
 I PSRF>MAX S DS=X D
"RTN","PSOHELP1",96,0)
 .D FULL^VALM1,EN^DDIOL(PSRF_" refills are not correct for a "_DS_" day supply.","","$C(7),!!") D EN^DDIOL("Please enter correct # of refills for a "_DS_" day supply. Max refills allowed is "_MAX_".","","!") D EN^DDIOL(" ","","!")
"RTN","PSOHELP1",97,0)
 .K DIR S DIR(0)="E",DIR("A")="Press Return to Continue" D ^DIR K DIR,X,Y,DIRUT S VALMBCK="R"
"RTN","PSOHELP1",98,0)
 K PSTMAX,DS D EDSTAT^PSOUTLA
"RTN","PSOHELP1",99,0)
 K MAX,DAYS,PSDAYS,PSODEA,PSOX,PSOX1,PSDY,PSDY1,DEA,CS,PTST,PSRF,PTRF,PTDY
"RTN","PSOHELP1",100,0)
 Q
"RTN","PSOHELP1",101,0)
DAYS1 K PSRMAX S PSRF=$P(^PSRX(DA(1),0),"^",9),PTST=$G(^PS(53,$P(^(0),"^",3),0)),PTDY=$P(PTST,"^",3),PTRF=$P(PTST,"^",4)
"RTN","PSOHELP1",102,0)
 S PSDAYS=$P(^PSRX(DA(1),1,DA,0),"^",10),PSODEA=$P(^PSDRUG($P(^PSRX(DA(1),0),"^",6),0),"^",3),CS=0
"RTN","PSOHELP1",103,0)
 D NARC I PSRF>MAX S DS=X D
"RTN","PSOHELP1",104,0)
 .D EN^DDIOL(PSRF_" refills are not correct for a "_DS_" day supply.","","$C(7),!!") D EN^DDIOL("Please enter correct # of refills for a "_DS_" day supply. Max refills allowed is "_MAX_".","","!") D EN^DDIOL(" ","","!")
"RTN","PSOHELP1",105,0)
 .K DIR S DIR(0)="E",DIR("A")="Press Return to Continue" D ^DIR K DIR,X,Y,DIRUT S VALMBCK="R"
"RTN","PSOHELP1",106,0)
 K PSTMAX,DS ;D EDSTAT^PSOUTLA
"RTN","PSOHELP1",107,0)
 K MAX,DAYS,PSDAYS,PSODEA,PSOX,PSOX1,PSDY,PSDY1,DEA,CS,PTST,PSRF,PTDY,PTRF
"RTN","PSOHELP1",108,0)
 Q
"RTN","PSOHELP1",109,0)
NARC F DEA=1:1 Q:$E(PSODEA,DEA)=""  I $E(+PSODEA,DEA)>1,$E(+PSODEA,DEA)<6 S CS=1
"RTN","PSOHELP1",110,0)
 I $D(CLOZPAT) S MAX=$S(CLOZPAT=2&($P(^PSRX(DA,0),"^",8)=14):1,CLOZPAT=2&($P(^PSRX(DA,0),"^",8)=7):3,CLOZPAT=1&($P(^PSRX(DA,0),"^",8)=7):1,1:0),MIN=0 Q
"RTN","PSOHELP1",111,0)
 I CS D
"RTN","PSOHELP1",112,0)
 .S PSOX1=$S(PTRF>5:5,1:PTRF),PSOX=$S(PSOX1=5:5,1:PSOX1)
"RTN","PSOHELP1",113,0)
 .S PSOX=$S('PSOX:0,X=90:1,1:PSOX),PSDY1=$S(X<60:5,X'<60&(X'>89):2,X=90:1,1:0) S MAX=$S(PSOX'>PSDY1:PSOX,1:PSDY1)
"RTN","PSOHELP1",114,0)
 E  D
"RTN","PSOHELP1",115,0)
 .S PSOX1=PTRF,PSOX=$S(PSOX1=11:11,1:PSOX1),PSOX=$S('PSOX:0,X=90:3,1:PSOX)
"RTN","PSOHELP1",116,0)
 .S PSDY1=$S(X<60:11,X'<60&(X'>89):5,X=90:3,1:0) S MAX=$S(PSOX'>PSDY1:PSOX,1:PSDY1)
"RTN","PSOHELP1",117,0)
 Q
"RTN","PSON52")
0^20^B91872301^B91470672
"RTN","PSON52",1,0)
PSON52 ;BIR/DSD - files new entries in prescription file ;08/09/93
"RTN","PSON52",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**1,16,23,27,32,46,71,111,124,117,131,139,157,143,219,148,239,201,268,260,225,303,358,251,387,379,390,391,313,408**;DEC 1997;Build 100
"RTN","PSON52",3,0)
 ;External reference ^PS(55 supported by DBIA 2228
"RTN","PSON52",4,0)
 ;External reference to PSOUL^PSSLOCK supported by DBIA 2789
"RTN","PSON52",5,0)
 ;External reference to ^XUSEC supported by DBIA 10076
"RTN","PSON52",6,0)
 ;External reference SWSTAT^IBBAPI supported by DBIA 4663
"RTN","PSON52",7,0)
 ;External reference SAVNDC^PSSNDCUT supported by DBIA 4707
"RTN","PSON52",8,0)
 ;External reference to $$DS^PSSDSAPI supported by DBIA 5425
"RTN","PSON52",9,0)
EN(PSOX) ;Entry Point
"RTN","PSON52",10,0)
START ;
"RTN","PSON52",11,0)
 D:$D(XRTL) T0^%ZOSV ; Start RT Monitor
"RTN","PSON52",12,0)
 D INIT G:PSON52("QFLG") END D NFILE Q:$G(PSONEW("DFLG"))
"RTN","PSON52",13,0)
 D PS55,DIK
"RTN","PSON52",14,0)
 S:$D(XRT0) XRTN=$T(+0) D:$D(XRT0) T1^%ZOSV ; Stop RT Monitor
"RTN","PSON52",15,0)
 D FINISH
"RTN","PSON52",16,0)
 I $P(^PSRX(PSOX("IRXN"),0),"^",11)="W",$G(^("IB")) S ^PSRX("ACP",$P(^PSRX(PSOX("IRXN"),0),"^",2),$P(^(2),"^",2),0,PSOX("IRXN"))=""
"RTN","PSON52",17,0)
END D EOJ
"RTN","PSON52",18,0)
 Q
"RTN","PSON52",19,0)
INIT ;
"RTN","PSON52",20,0)
 K X,%DT S:$G(PSOID) PSOX("ISSUE DATE")=PSOID
"RTN","PSON52",21,0)
 S PSOX("CS")=0 K PSOX("NOPSDRPH")
"RTN","PSON52",22,0)
 F DEA=1:1 Q:$E(PSODRUG("DEA"),DEA)=""  I $E(+PSODRUG("DEA"),DEA)>1,$E(+PSODRUG("DEA"),DEA)<6 S $P(PSOX("CS"),"^")=1 S:$E(+PSODRUG("DEA"),DEA)=2 $P(PSOX("CS"),"^",2)=1
"RTN","PSON52",23,0)
 I $P($G(PSOX("CS")),"^"),'$D(^XUSEC("PSDRPH",DUZ)) S PSOX("NOPSDRPH")=1
"RTN","PSON52",24,0)
 S PSON52("QFLG")=0,X1=PSOX("ISSUE DATE"),X2=PSOX("DAYS SUPPLY")*(PSOX("# OF REFILLS")+1)\1
"RTN","PSON52",25,0)
 I $D(CLOZPAT) S X2=$S(X2=14:14,X2=7:7,1:X2) G DT
"RTN","PSON52",26,0)
 S X2=$S(PSOX("DAYS SUPPLY")=X2:X2,+$G(PSOX("CS")):184,+$G(DEA("CS")):184,1:366)
"RTN","PSON52",27,0)
 I X2<30 D
"RTN","PSON52",28,0)
 . N % S %=$P($G(PSORX("PATIENT STATUS")),"^"),X2=30
"RTN","PSON52",29,0)
 . S:%?.N %=$P($G(^PS(53,+%,0)),"^") I %["AUTH ABS" S X2=5
"RTN","PSON52",30,0)
DT D C^%DTC S PSOX("STOP DATE")=$P(X,".") K X
"RTN","PSON52",31,0)
 I PSOX("# OF REFILLS")>0 S X1=PSOX("FILL DATE"),X2=$S((PSOX("DAYS SUPPLY")-10\1)<1:1,1:PSOX("DAYS SUPPLY")-10\1) D C^%DTC S PSOX("NEXT POSSIBLE REFILL")=$P(X,".") K X
"RTN","PSON52",32,0)
 S PSOX("TYPE OF RX")=0,PSOX("DISPENSED DATE")=PSOX("FILL DATE") D NOW^%DTC S PSOX("LOGIN DATE")=$S($P($G(OR0),"^",12):$P($G(OR0),"^",12),1:%) K %,X
"RTN","PSON52",33,0)
 S PSOX("STATUS")=$S($G(PSOX("STATUS"))]"":PSOX("STATUS"),$D(PSORX("VERIFY")):1,$D(PSOX("NOPSDRPH")):1,1:0)
"RTN","PSON52",34,0)
 S PSOX("COPIES")=$S($G(PSOX("COPIES"))]"":PSOX("COPIES"),1:1)
"RTN","PSON52",35,0)
 I $G(PSORX("PHARM"))]"" S PSOX("PHARMACIST")=PSORX("PHARM") K PSORX("PHARM")
"RTN","PSON52",36,0)
INITX Q
"RTN","PSON52",37,0)
 ;
"RTN","PSON52",38,0)
NFILE I $G(OR0) D  Q:$G(PSONEW("DFLG"))
"RTN","PSON52",39,0)
 .D NOOR^PSONEW Q:$G(PSONEW("DFLG"))
"RTN","PSON52",40,0)
 .I $G(PSOSIGFL)!($G(PSODRUG("OI"))'=$P(OR0,"^",8)) S PSONEW("CLERK CODE")=DUZ,PSONEW("REMARKS")=$G(PSONEW("REMARKS"))_" CPRS Order #"_$P(OR0,"^")_" Edited."
"RTN","PSON52",41,0)
 S DIC="^PSRX(",DLAYGO=52,DIC(0)="L",X=PSOX("RX #") K DD,DO D FILE^DICN S PSOX("IRXN")=+Y K DLAYGO,X,Y,DIC,DD,DO
"RTN","PSON52",42,0)
 I '$D(^XUSEC("PSORPH",DUZ))!($D(PSOX("NOPSDRPH"))),$$DS^PSSDSAPI&(+$G(^TMP("PSODOSF",$J,0))) S PSON52(PSOX("IRXN"),"STA")=1,PSOX("STATUS")=1
"RTN","PSON52",43,0)
 F PSOX1=0:1 S PSON52=$P($T(DD+PSOX1),";;",2,4) Q:PSON52=""  K PSOY S PSOY=$P(PSON52,";;") I $G(@PSOY)]"" S $P(PSON52(PSOX("IRXN"),$P(PSON52,";;",2)),"^",$P(PSON52,";;",3))=@PSOY
"RTN","PSON52",44,0)
 F I=1:1:PSOX("ENT") S ^PSRX(PSOX("IRXN"),6,I,0)=PSOX("DOSE",I)_"^"_$G(PSOX("DOSE ORDERED",I))_"^"_$G(PSOX("UNITS",I))_"^"_$G(PSOX("NOUN",I))_"^" D
"RTN","PSON52",45,0)
 .S ^PSRX(PSOX("IRXN"),6,I,0)=^PSRX(PSOX("IRXN"),6,I,0)_$G(PSOX("DURATION",I))_"^"_$G(PSOX("CONJUNCTION",I))_"^"_$G(PSOX("ROUTE",I))_"^"_$G(PSOX("SCHEDULE",I))_"^"_$G(PSOX("VERB",I))
"RTN","PSON52",46,0)
 .I $G(PSOX("ODOSE",I))]"" S ^PSRX(PSOX("IRXN"),6,I,1)=PSOX("ODOSE",I)
"RTN","PSON52",47,0)
 S ^PSRX(PSOX("IRXN"),6,0)="^52.0113^"_PSOX("ENT")_"^"_PSOX("ENT")
"RTN","PSON52",48,0)
 K PSOX1,PSOY
"RTN","PSON52",49,0)
 S PSOX1="" F  S PSOX1=$O(PSON52(PSOX("IRXN"),PSOX1)) Q:PSOX1=""  S ^PSRX(PSOX("IRXN"),PSOX1)=$G(PSON52(PSOX("IRXN"),PSOX1))
"RTN","PSON52",50,0)
 I $O(PSOX("SIG",0)) D
"RTN","PSON52",51,0)
 .S D=0 F  S D=$O(PSOX("SIG",D)) Q:'D  S ^PSRX(PSOX("IRXN"),"INS1",D,0)=PSOX("SIG",D),TP=$G(TP)+1
"RTN","PSON52",52,0)
 .S ^PSRX(PSOX("IRXN"),"INS1",0)="^52.0115^"_TP_"^"_TP_"^"_DT_"^^" K TP,D
"RTN","PSON52",53,0)
 I $G(PSOX("SINS"))]"" S ^PSRX(PSOX("IRXN"),"INSS")=PSOX("SINS")
"RTN","PSON52",54,0)
 I $G(SIGOK) D
"RTN","PSON52",55,0)
 .S $P(^PSRX(PSOX("IRXN"),"SIG"),"^",2)=1,^PSRX(PSOX("IRXN"),"SIG1",0)="^52.04A^^"
"RTN","PSON52",56,0)
 .S D=0 F  S D=$O(SIG(D)) Q:'D  S ^PSRX(PSOX("IRXN"),"SIG1",D,0)=SIG(D),$P(^PSRX(PSOX("IRXN"),"SIG1",0),"^",3)=+$P(^PSRX(PSOX("IRXN"),"SIG1",0),"^",3)+1,$P(^(0),"^",4)=+$P(^(0),"^",4)+1 Q:'$O(SIG(D))
"RTN","PSON52",57,0)
 .K SIG
"RTN","PSON52",58,0)
 I $D(PSOINSFL) S ^PSRX(PSOX("IRXN"),"A",0)="^52.3DA^1^1",^PSRX(PSOX("IRXN"),"A",1,0)=DT_"^G^^0^Patient Instructions "_$S(PSOINSFL=1:"",1:"Not ")_"Sent By Provider."
"RTN","PSON52",59,0)
 I $G(OR0),$P(OR0,"^",24) S ^PSRX(PSOX("IRXN"),"PKI")=$S($G(PSOSIGFL):"^1",1:1) D ACLOG
"RTN","PSON52",60,0)
 I $P($G(PSOX("CS")),"^"),'+$P($G(^PSRX(PSOX("IRXN"),"PKI")),"^") S $P(^PSRX(PSOX("IRXN"),"PKI"),"^",2)=1
"RTN","PSON52",61,0)
 K PSOX1,PSOFINFL,HLDSIG,D,PSOINSFL,D
"RTN","PSON52",62,0)
 D:$G(^TMP("PSODAI",$J,0))
"RTN","PSON52",63,0)
 .S $P(^PSRX(PSOX("IRXN"),3),"^",6)=1
"RTN","PSON52",64,0)
 .I $O(^TMP("PSODAI",$J,0)) S DAI=0 F  S DAI=$O(^TMP("PSODAI",$J,DAI)) Q:'DAI  D
"RTN","PSON52",65,0)
 ..S:'$D(^PSRX(PSOX("IRXN"),"DAI",0)) ^PSRX(PSOX("IRXN"),"DAI",0)="^52.03^^" S ^PSRX(PSOX("IRXN"),"DAI",DAI,0)=^TMP("PSODAI",$J,DAI,0)
"RTN","PSON52",66,0)
 ..S $P(^PSRX(PSOX("IRXN"),"DAI",0),"^",3)=+$P(^PSRX(PSOX("IRXN"),"DAI",0),"^",3)+1,$P(^(0),"^",4)=+$P(^(0),"^",4)+1
"RTN","PSON52",67,0)
 .K ^TMP("PSODAI",$J),DAI
"RTN","PSON52",68,0)
 I $G(PSOX("CHCS NUMBER"))'="" S $P(^PSRX(PSOX("IRXN"),"EXT"),"^")=$G(PSOX("CHCS NUMBER"))
"RTN","PSON52",69,0)
 I $G(PSOX("EXTERNAL SYSTEM"))'="" S $P(^PSRX(PSOX("IRXN"),"EXT"),"^",2)=$G(PSOX("EXTERNAL SYSTEM"))
"RTN","PSON52",70,0)
 I $G(PSOX("NEWCOPAY")) S ^PSRX(PSOX("IRXN"),"IB")=$G(PSOX("NEWCOPAY"))
"RTN","PSON52",71,0)
 ;Next line, set SC question based on Copay status?
"RTN","PSON52",72,0)
IBQ ;I $G(PSOBILL)=2 S ^PSRX(PSOX("IRXN"),"IBQ")=$S($G(PSOX("NEWCOPAY")):0,1:1)
"RTN","PSON52",73,0)
 N PSOSCFLD S PSOSCFLD=$S(PSOSCP'="":$G(PSOANSQ("SC")),1:"")_"^"_$G(PSOANSQ("MST"))_"^"_$G(PSOANSQ("VEH"))_"^"_$G(PSOANSQ("RAD"))_"^"_$G(PSOANSQ("PGW"))_"^"_$G(PSOANSQ("HNC"))_"^"_$G(PSOANSQ("CV"))_"^"_$G(PSOANSQ("SHAD"))
"RTN","PSON52",74,0)
 I PSOSCP<50&($TR(PSOSCFLD,"^")'="")&($P($G(^PS(53,+$G(PSONEW("PATIENT STATUS")),0)),"^",7)'=1) D
"RTN","PSON52",75,0)
 . S ^PSRX(PSOX("IRXN"),"IBQ")=PSOSCFLD K PSOSCFLD  ;don't set if SC % is null or 0, just set it in ICD node
"RTN","PSON52",76,0)
 D ICD^PSODIAG
"RTN","PSON52",77,0)
 D:$$SWSTAT^IBBAPI() GACT^PSOPFSU0(PSOX("IRXN"),0)
"RTN","PSON52",78,0)
 D:$G(PSOTITRX) SAVETIT(PSOTITRX,PSOX("IRXN"))
"RTN","PSON52",79,0)
 K PSOTITRX,PSOANSQ,PSOANSQD,PSOX("NEWCOPAY")
"RTN","PSON52",80,0)
 L -^PSRX("B",PSOX("IRXN"))
"RTN","PSON52",81,0)
 Q
"RTN","PSON52",82,0)
 ;
"RTN","PSON52",83,0)
ACLOG ;activity log (digitally signed CS orders)
"RTN","PSON52",84,0)
 N DTTM,CNT,OCNT,XX
"RTN","PSON52",85,0)
 D NOW^%DTC S DTTM=%
"RTN","PSON52",86,0)
 S CNT=0 F XX=0:0 S XX=$O(^PSRX(PSOX("IRXN"),"A",XX)) Q:'XX  S CNT=XX
"RTN","PSON52",87,0)
 S OCNT=CNT
"RTN","PSON52",88,0)
 I $G(PSOCSP("NAME"))'=PSODRUG("NAME") S CNT=CNT+1,^PSRX(PSOX("IRXN"),"A",CNT,0)=DTTM_"^K^"_DUZ_"^0^NAME: "_PSOCSP("NAME")
"RTN","PSON52",89,0)
 S XX=0 F  S XX=$O(PSOCSP("DOSE",XX)) Q:'XX  I PSOCSP("DOSE",XX)'=$G(PSONEW("DOSE",XX)) D
"RTN","PSON52",90,0)
 .S CNT=CNT+1,^PSRX(PSOX("IRXN"),"A",CNT,0)=DTTM_"^K^"_DUZ_"^0^DOSAGE: "_PSOCSP("DOSE",XX)
"RTN","PSON52",91,0)
 S XX=0 F  S XX=$O(PSOCSP("DOSE ORDERED",XX)) Q:'XX  I PSOCSP("DOSE ORDERED",XX)'=$G(PSONEW("DOSE ORDERED",XX)) D
"RTN","PSON52",92,0)
 .S CNT=CNT+1,^PSRX(PSOX("IRXN"),"A",CNT,0)=DTTM_"^K^"_DUZ_"^0^DISPENSE UNITS: "_PSOCSP("DOSE ORDERED",XX)
"RTN","PSON52",93,0)
 I PSOCSP("ISSUE DATE")'=PSONEW("ISSUE DATE") S CNT=CNT+1,^PSRX(PSOX("IRXN"),"A",CNT,0)=DTTM_"^K^"_DUZ_"^0^ISSUE DATE: "_$$FMTE^XLFDT(PSOCSP("ISSUE DATE"))
"RTN","PSON52",94,0)
 I PSOCSP("DAYS SUPPLY")'=PSONEW("DAYS SUPPLY") S CNT=CNT+1,^PSRX(PSOX("IRXN"),"A",CNT,0)=DTTM_"^K^"_DUZ_"^0^DAYS SUPPLY: "_PSOCSP("DAYS SUPPLY")
"RTN","PSON52",95,0)
 I PSOCSP("QTY")'=PSONEW("QTY") S CNT=CNT+1,^PSRX(PSOX("IRXN"),"A",CNT,0)=DTTM_"^K^"_DUZ_"^0^QTY: "_PSOCSP("QTY")
"RTN","PSON52",96,0)
 I PSOCSP("# OF REFILLS")'=PSONEW("# OF REFILLS") S CNT=CNT+1,^PSRX(PSOX("IRXN"),"A",CNT,0)=DTTM_"^K^"_DUZ_"^0^# OF REFILLS: "_PSOCSP("# OF REFILLS")
"RTN","PSON52",97,0)
 I '$$SUBSCRIB^ORDEA($P(OR0,"^"),PSOX("IRXN")) S CNT=CNT+1,^PSRX(PSOX("IRXN"),"A",CNT,0)=DTTM_"^K^"_DUZ_"^0^ORDER DEA ARCHIVE INFO file entry failure"
"RTN","PSON52",98,0)
 I OCNT'=CNT S ^PSRX(PSOX("IRXN"),"A",0)="^52.3DA^"_CNT_"^"_CNT
"RTN","PSON52",99,0)
 Q
"RTN","PSON52",100,0)
 ;
"RTN","PSON52",101,0)
PS55 ;
"RTN","PSON52",102,0)
 L +^PS(55,PSODFN,"P"):$S(+$G(^DD("DILOCKTM"))>0:+^DD("DILOCKTM"),1:3)
"RTN","PSON52",103,0)
 S:'$D(^PS(55,PSODFN,"P",0)) ^(0)="^55.03PA^^"
"RTN","PSON52",104,0)
 F PSOX1=$P(^PS(55,PSODFN,"P",0),"^",3):1 Q:'$D(^PS(55,PSODFN,"P",PSOX1))
"RTN","PSON52",105,0)
 S PSOX("55 IEN")=PSOX1
"RTN","PSON52",106,0)
 S ^PS(55,PSODFN,"P",PSOX1,0)=PSOX("IRXN"),$P(^PS(55,PSODFN,"P",0),"^",3,4)=PSOX1_"^"_($P(^PS(55,PSODFN,"P",0),"^",4)+1)
"RTN","PSON52",107,0)
 S ^PS(55,PSODFN,"P","A",PSONEW("STOP DATE"),PSOX("IRXN"))=""
"RTN","PSON52",108,0)
PS55X L -^PS(55,PSODFN,"P")
"RTN","PSON52",109,0)
 K PSOX1
"RTN","PSON52",110,0)
 Q
"RTN","PSON52",111,0)
DIK ;
"RTN","PSON52",112,0)
 I $D(^XUSEC("PSORPH",DUZ)) S DA=PSOX("IRXN"),DIE=52,DR="41////"_PSOCOU_";S:'X Y=""@1"";42////"_PSOCOUU_";@1" D ^DIE K DIE,DR
"RTN","PSON52",113,0)
 K DIK,DA S DIK="^PSRX(",DA=PSOX("IRXN") D IX1^DIK K DIK
"RTN","PSON52",114,0)
 S DA=PSOX("IRXN") D ORC^PSORN52C
"RTN","PSON52",115,0)
 Q
"RTN","PSON52",116,0)
FINISH ;
"RTN","PSON52",117,0)
ANQ I $G(ANQDATA)]"" D NOW^%DTC G:$D(^PS(52.52,"B",%)) ANQ D
"RTN","PSON52",118,0)
 .K DD,DO S DIC="^PS(52.52,",DIC(0)="L",DLAYGO=52.52,X=% D FILE^DICN K DIC,DLAYGO,DD,DO
"RTN","PSON52",119,0)
 .S ^PS(52.52,+Y,0)=$P(Y,"^",2)_"^"_PSOX("IRXN")_"^"_ANQDATA,^PS(52.52,"A",PSOX("IRXN"),+Y)="" K ANQDATA,X,Y,%,ANQREM
"RTN","PSON52",120,0)
 ;
"RTN","PSON52",121,0)
 N PSOTFIN
"RTN","PSON52",122,0)
 I $D(PSOX("NOPSDRPH"))!('$D(^XUSEC("PSORPH",DUZ))) S PSOTFIN="",PSOTFIN=$$TECH2^PSODGDGP(PSOX("IRXN"),PSODFN,DUZ,.PSOX)
"RTN","PSON52",123,0)
 I $D(PSOX("NOPSDRPH"))!('$D(^XUSEC("PSORPH",DUZ))) G FINISHP:$G(PSOTFIN)=1 G FINISHX:$G(PSOTFIN)=2
"RTN","PSON52",124,0)
 ;
"RTN","PSON52",125,0)
 I PSOX("FILL DATE")>DT,$P(PSOPAR,"^",6) S DA=PSOX("IRXN"),RXFL(PSOX("IRXN"))=0 D SUS^PSORXL K DA G FINISHX
"RTN","PSON52",126,0)
 ;
"RTN","PSON52",127,0)
 ; - Calling ECME for claims generation and transmission / REJECT handling
"RTN","PSON52",128,0)
 N ACTION,PSOERX
"RTN","PSON52",129,0)
 S PSOERX=PSOX("IRXN")
"RTN","PSON52",130,0)
 I $$SUBMIT^PSOBPSUT(PSOERX,0) D  I ACTION="Q"!(ACTION="^") Q
"RTN","PSON52",131,0)
 . S ACTION="" D ECMESND^PSOBPSU1(PSOERX,0,"","OF")
"RTN","PSON52",132,0)
 . ; Quit if there is an unresolved Tricare/CHAMPVA non-billable reject code, PSO*7*358
"RTN","PSON52",133,0)
 . I $$PSOET^PSOREJP3(PSOERX,0) S ACTION="Q" Q
"RTN","PSON52",134,0)
 . I $$FIND^PSOREJUT(PSOERX,0) D
"RTN","PSON52",135,0)
 . . S ACTION=$$HDLG^PSOREJU1(PSOERX,0,"79,88","OF","IOQ","Q")
"RTN","PSON52",136,0)
 . I $$STATUS^PSOBPSUT(PSOERX,0)="E PAYABLE" D
"RTN","PSON52",137,0)
 . . D SAVNDC^PSSNDCUT(+$$GET1^DIQ(52,PSOERX,6,"I"),$G(PSOSITE),$$GETNDC^PSONDCUT(PSOERX,0))
"RTN","PSON52",138,0)
 ;
"RTN","PSON52",139,0)
FINISHP ;
"RTN","PSON52",140,0)
 I $G(PSORX("PSOL",1))']"" S PSORX("PSOL",1)=PSOX("IRXN")_",",RXFL(PSOX("IRXN"))=0 G FINISHX
"RTN","PSON52",141,0)
 F PSOX1=0:0 S PSOX1=$O(PSORX("PSOL",PSOX1)) Q:'PSOX1  S PSOX2=PSOX1
"RTN","PSON52",142,0)
 I $L(PSORX("PSOL",PSOX2))+$L(PSOX("IRXN"))<220 S PSORX("PSOL",PSOX2)=PSORX("PSOL",PSOX2)_PSOX("IRXN")_","
"RTN","PSON52",143,0)
 E  S PSORX("PSOL",PSOX2+1)=PSOX("IRXN")_","
"RTN","PSON52",144,0)
 S RXFL(PSOX("IRXN"))=0
"RTN","PSON52",145,0)
FINISHX ;call to build Rx array for bingo board
"RTN","PSON52",146,0)
 I $G(PSORX("MAIL/WINDOW"))["W" S BINGCRT=1,BINGRTE="W",BBFLG=1 D BBRX^PSORN52C
"RTN","PSON52",147,0)
 K PSOX1,PSOX2
"RTN","PSON52",148,0)
 K ^TMP("PSODGI",$J),^TMP("PSOSER",$J),^TMP("PSOSERS",$J),^TMP("PSODGS",$J),^TMP("PSOTDD",$J),^TMP("PSODOSF",$J)
"RTN","PSON52",149,0)
 Q
"RTN","PSON52",150,0)
 ;
"RTN","PSON52",151,0)
SAVETIT(TITRX,MNTRX) ; Save Titration/Maintenance dose Rx information
"RTN","PSON52",152,0)
 I '$D(^PSRX(+$G(TITRX),0))!'$D(^PSRX(+$G(MNTRX),0)) Q
"RTN","PSON52",153,0)
 S $P(^PSRX(TITRX,"TIT"),"^",2,3)=MNTRX_"^1"
"RTN","PSON52",154,0)
 D RXACT^PSOBPSU2(TITRX,0,"Maintenance Rx#: "_$$GET1^DIQ(52,MNTRX,.01),"E")
"RTN","PSON52",155,0)
 S $P(^PSRX(MNTRX,"TIT"),"^",1)=TITRX
"RTN","PSON52",156,0)
 D RXACT^PSOBPSU2(MNTRX,0,"Titration Rx#: "_$$GET1^DIQ(52,TITRX,.01),"E")
"RTN","PSON52",157,0)
 Q
"RTN","PSON52",158,0)
 ;
"RTN","PSON52",159,0)
EOJ ;
"RTN","PSON52",160,0)
 ;B xref locked in routine PSONRXN
"RTN","PSON52",161,0)
 L -^PSRX("B",PSOX("IRXN")) K OTHDOS,DA,PSON52,PSOPRC,RTE,SCH,PSOX("INS"),PSONEW("INS"),PSORXED("INS"),PSONEW("ENT"),PSORXED("ENT"),OLENT
"RTN","PSON52",162,0)
 D PSOUL^PSSLOCK(PSOX("IRXN"))
"RTN","PSON52",163,0)
 Q
"RTN","PSON52",164,0)
 ;
"RTN","PSON52",165,0)
 ;;PSOX("SIG");;SIG;;1
"RTN","PSON52",166,0)
DD ;;PSOX("RX #");;0;;1
"RTN","PSON52",167,0)
 ;;PSOX("ISSUE DATE");;0;;13
"RTN","PSON52",168,0)
 ;;PSODFN;;0;;2
"RTN","PSON52",169,0)
 ;;PSOX("PATIENT STATUS");;0;;3
"RTN","PSON52",170,0)
 ;;PSOX("PROVIDER");;0;;4
"RTN","PSON52",171,0)
 ;;PSOX("CLINIC");;0;;5
"RTN","PSON52",172,0)
 ;;PSODRUG("IEN");;0;;6
"RTN","PSON52",173,0)
 ;;PSODRUG("TRADE NAME");;TN;;1
"RTN","PSON52",174,0)
 ;;PSOX("QTY");;0;;7
"RTN","PSON52",175,0)
 ;;PSOX("DAYS SUPPLY");;0;;8
"RTN","PSON52",176,0)
 ;;PSOX("# OF REFILLS");;0;;9
"RTN","PSON52",177,0)
 ;;PSOX("COPIES");;0;;18
"RTN","PSON52",178,0)
 ;;PSOX("MAIL/WINDOW");;0;;11
"RTN","PSON52",179,0)
 ;;PSOX("REMARKS");;3;;7
"RTN","PSON52",180,0)
 ;;PSOX("ADMINCLINIC");;0;;15 
"RTN","PSON52",181,0)
 ;;PSOX("CLERK CODE");;0;;16
"RTN","PSON52",182,0)
 ;;PSODRUG("COST");;0;;17
"RTN","PSON52",183,0)
 ;;PSOSITE;;2;;9
"RTN","PSON52",184,0)
 ;;PSOX("LOGIN DATE");;2;;1
"RTN","PSON52",185,0)
 ;;PSOX("FILL DATE");;2;;2
"RTN","PSON52",186,0)
 ;;PSOX("PHARMACIST");;2;;3
"RTN","PSON52",187,0)
 ;;PSOX("LOT #");;2;;4
"RTN","PSON52",188,0)
 ;;PSOX("DISPENSED DATE");;2;;5
"RTN","PSON52",189,0)
 ;;PSOX("STOP DATE");;2;;6
"RTN","PSON52",190,0)
 ;;PSODRUG("NDC");;2;;7
"RTN","PSON52",191,0)
 ;;PSODRUG("DAW");;EPH;;1
"RTN","PSON52",192,0)
 ;;PSODRUG("MANUFACTURER");;2;;8
"RTN","PSON52",193,0)
 ;;PSOX("EXPIRATION DATE");;2;;11
"RTN","PSON52",194,0)
 ;;PSOX("GENERIC PROVIDER");;2;;12
"RTN","PSON52",195,0)
 ;;PSOX("RELEASED DATE/TIME");;2;;13
"RTN","PSON52",196,0)
 ;;PSOX("METHOD OF PICK-UP");;MP;;1
"RTN","PSON52",197,0)
 ;;PSOX("STATUS");;STA;;1
"RTN","PSON52",198,0)
 ;;PSOX("LAST DISPENSED DATE");;3;;1
"RTN","PSON52",199,0)
 ;;PSOX("NEXT POSSIBLE REFILL");;3;;2
"RTN","PSON52",200,0)
 ;;PSOX("COSIGNING PROVIDER");;3;;3
"RTN","PSON52",201,0)
 ;;PSOX("TYPE OF RX");;TYPE;;1
"RTN","PSON52",202,0)
 ;;PSOX("SAND");;SAND;;1
"RTN","PSON52",203,0)
 ;;PSOX("POE");;POE;;1
"RTN","PSON52",204,0)
 ;;PSOX("INS");;INS;;1
"RTN","PSOORAL1")
0^17^B71524461^B61027800
"RTN","PSOORAL1",1,0)
PSOORAL1 ;BHAM ISC/SAB - Build Listman activity logs ; 12/4/07 12:25pm
"RTN","PSOORAL1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**71,156,148,247,240,287,354,367,408**;DEC 1997;Build 100
"RTN","PSOORAL1",3,0)
 N RX0,VALMCNT K DIR,DTOUT,DUOUT,DIRUT,^TMP("PSOAL",$J) S DA=$P(PSOLST(ORN),"^",2),RX0=^PSRX(DA,0),J=DA,RX2=$G(^(2)),R3=$G(^(3)),CMOP=$O(^PSRX(DA,4,0))
"RTN","PSOORAL1",4,0)
 S IEN=0,DIR(0)="LO^1:"_$S(CMOP:9,1:8),DIR("A",1)=" ",DIR("A",2)="Select Activity Log by  number",DIR("A",3)="1.  Refill      2.  Partial      3.  Activity     4.  Labels     5.  Copay"
"RTN","PSOORAL1",5,0)
 S DIR("A")=$S(CMOP:"6.  ECME        7.  SPMP        8.  CMOP Events  9.  All Logs",1:"6.  ECME        7.  SPMP         8.  All Logs")
"RTN","PSOORAL1",6,0)
 S DIR("B")=$S(CMOP:9,1:8) D ^DIR S PSOELSE=+Y I +Y S Y=$S(CMOP&(Y[9):"1,2,3,4,5,6,7,8",'CMOP&(Y[8):"1,2,3,4,5,6,7",1:Y) S ACT=Y D FULL^VALM1 D
"RTN","PSOORAL1",7,0)
 .S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Rx #: "_$P(RX0,"^")_"   Original Fill Released: " I $P(RX2,"^",13) S DTT=$P(RX2,"^",13) D DAT S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_DAT K DAT,DTT
"RTN","PSOORAL1",8,0)
 .I $P(RX2,"^",15) S DTT=$P(RX2,"^",15) D DAT S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_"(Returned to Stock "_DAT_")" K DAT,DTT
"RTN","PSOORAL1",9,0)
 .S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Routing: "_$S($P(RX0,"^",11)="W":"Window",1:"Mail")_$S($P($G(^PSRX(DA,"OR1")),"^",5):"      Finished by: "_$P(^VA(200,$P(^PSRX(DA,"OR1"),"^",5),0),"^"),1:"")
"RTN","PSOORAL1",10,0)
 .D:$G(^PSRX(DA,"H"))]""&($P(PSOLST(ORN),"^",3)="HOLD") HLD^PSOORAL2
"RTN","PSOORAL1",11,0)
 .F LOG=1:1:$L(ACT,",") Q:$P(ACT,",",LOG)']""  S LBL=$P(ACT,",",LOG) D @$S(LBL=1:"RF^PSOORAL2",LBL=2:"PAR^PSOORAL2",LBL=3:"ACT",LBL=5:"COPAY",LBL=6:"ECME",LBL=7:"SPMP",LBL=8:"^PSORXVW2",1:"LBL")
"RTN","PSOORAL1",12,0)
 I 'PSOELSE S VALMBCK="" K PSOELSE Q 
"RTN","PSOORAL1",13,0)
 K ST0,RFL,RFLL,RFL1,II,J,N,PHYS,L1,DIRUT,PSDIV,PSEXDT,MED,M1,FFX,DTT,DAT,R3,RTN,SIG,STA,P1,PL,P0,Z0,Z1,EXDT,IFN,DIR,DUOUT,DTOUT,PSOELSE
"RTN","PSOORAL1",14,0)
 K LBL,I,RFDATE,%H,%I,RN,RFT
"RTN","PSOORAL1",15,0)
 S PSOAL=IEN K IEN,ACT,LBL,LOG D EN^PSOORAL S VALMBCK="R"
"RTN","PSOORAL1",16,0)
 Q
"RTN","PSOORAL1",17,0)
ACT ;activity log
"RTN","PSOORAL1",18,0)
 N CNT
"RTN","PSOORAL1",19,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=" ",IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Activity Log:"
"RTN","PSOORAL1",20,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="#   Date        Reason         Rx Ref         Initiator Of Activity",IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0),"=",79)="="
"RTN","PSOORAL1",21,0)
 I '$O(^PSRX(DA,"A",0)) S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="There's NO Activity to report" Q
"RTN","PSOORAL1",22,0)
 S CNT=0
"RTN","PSOORAL1",23,0)
 F N=0:0 S N=$O(^PSRX(DA,"A",N)) Q:'N  S P1=^(N,0),DTT=P1\1 D DAT D
"RTN","PSOORAL1",24,0)
 .I $P(P1,"^",2)="M" Q
"RTN","PSOORAL1",25,0)
 .S IEN=IEN+1,CNT=CNT+1,^TMP("PSOAL",$J,IEN,0)=CNT_"   "_DAT_"    ",$P(RN," ",15)=" ",REA=$P(P1,"^",2),REA=$F("HUCELPRWSIVDABXGKN",REA)-1
"RTN","PSOORAL1",26,0)
 .I REA D
"RTN","PSOORAL1",27,0)
 ..S STA=$P("HOLD^UNHOLD^DISCONTINUED^EDIT^RENEWED^PARTIAL^REINSTATE^REPRINT^SUSPENSE^RETURNED^INTERVENTION^DELETED^DRUG INTERACTION^PROCESSED^X-INTERFACE^PATIENT INSTR.^PKI/DEA^DISP COMPLETED^","^",REA)
"RTN","PSOORAL1",28,0)
 ..S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_STA_$E(RN,$L(STA)+1,15)
"RTN","PSOORAL1",29,0)
 .E  S $P(STA," ",15)=" ",^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_STA
"RTN","PSOORAL1",30,0)
 .K STA,RN S $P(RN," ",15)=" ",RF=+$P(P1,"^",4)
"RTN","PSOORAL1",31,0)
 .S RFT=$S(RF>0&(RF<6):"REFILL "_RF,RF=6:"PARTIAL",RF>6:"REFILL "_(RF-1),1:"ORIGINAL")
"RTN","PSOORAL1",32,0)
 .S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_RFT_$E(RN,$L(RFT)+1,15)_$S($D(^VA(200,+$P(P1,"^",3),0)):$P(^(0),"^"),1:$P(P1,"^",3))
"RTN","PSOORAL1",33,0)
 .;S:$P(P1,"^",5)]"" IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Comments: "_$P(P1,"^",5)
"RTN","PSOORAL1",34,0)
 .I $P(P1,"^",5)]"" N PSOACBRK,PSOACBRV D
"RTN","PSOORAL1",35,0)
 ..S PSOACBRV=$P(P1,"^",5)
"RTN","PSOORAL1",36,0)
 ..;PSO*7*240 Use fileman for parsing
"RTN","PSOORAL1",37,0)
 ..K ^UTILITY($J,"W") S X="Comments: "_PSOACBRV,(DIWR,DIWL)=1,DIWF="C80" D ^DIWP F I=1:1:^UTILITY($J,"W",1) S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=$G(^UTILITY($J,"W",1,I,0))
"RTN","PSOORAL1",38,0)
 .I $P($G(^PSRX(DA,"A",N,1)),"^")]"" S IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0)," ",5)=$P($G(^PSRX(DA,"A",N,1)),"^") I $P($G(^PSRX(DA,"A",N,1)),"^",2)]"" S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_":"_$P($G(^PSRX(DA,"A",N,1)),"^",2)
"RTN","PSOORAL1",39,0)
 .I $O(^PSRX(DA,"A",N,2,0)) F I=0:0 S I=$O(^PSRX(DA,"A",N,2,I)) Q:'I  S MIG=^PSRX(DA,"A",N,2,I,0) D
"RTN","PSOORAL1",40,0)
 ..S:MIG["Mail Tracking Info.: " IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0)," ",9)=" "
"RTN","PSOORAL1",41,0)
 ..F SG=1:1:$L(MIG) S:$L(^TMP("PSOAL",$J,IEN,0)_" "_$P(MIG," ",SG))>80 IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0)," ",9)=" " S:$P(MIG," ",SG)'="" ^TMP("PSOAL",$J,IEN,0)=$G(^TMP("PSOAL",$J,IEN,0))_" "_$P(MIG," ",SG)
"RTN","PSOORAL1",42,0)
 K MIG,SG,I,^UTILITY($J,"W"),DIWF,DIWL,DIWR
"RTN","PSOORAL1",43,0)
 Q
"RTN","PSOORAL1",44,0)
LBL ;label log
"RTN","PSOORAL1",45,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=" ",IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Label Log:"
"RTN","PSOORAL1",46,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="#   Date        Rx Ref                    Printed By",IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0),"=",79)="="
"RTN","PSOORAL1",47,0)
 I '$O(^PSRX(DA,"L",0)) S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="There are NO Labels printed." Q
"RTN","PSOORAL1",48,0)
 F L1=0:0 S L1=$O(^PSRX(DA,"L",L1)) Q:'L1  S LBL=^PSRX(DA,"L",L1,0),DTT=$P(^(0),"^") D DAT D
"RTN","PSOORAL1",49,0)
 . S $P(RN," ",26)=" ",IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=L1_"   "_DAT_"    ",RFT=$S($P(LBL,"^",2):"REFILL "_$P(LBL,"^",2),1:"ORIGINAL"),RFT=RFT_$E(RN,$L(RFT)+1,26)
"RTN","PSOORAL1",50,0)
 . S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_RFT_$P($G(^VA(200,$P(LBL,"^",4),0)),"^"),IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Comments: "_$P(LBL,"^",3)
"RTN","PSOORAL1",51,0)
 . N FDAMGDOC S FDAMGDOC=$G(^PSRX(DA,"L",L1,"FDA"))
"RTN","PSOORAL1",52,0)
 . I FDAMGDOC'="" D
"RTN","PSOORAL1",53,0)
 . . S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="FDA Med Guide: "_$E(FDAMGDOC,1,61)
"RTN","PSOORAL1",54,0)
 . . I $L(FDAMGDOC)>61 D
"RTN","PSOORAL1",55,0)
 . . . F  Q:$E(FDAMGDOC,62,999)=""  D
"RTN","PSOORAL1",56,0)
 . . . . S FDAMGDOC=$E(FDAMGDOC,62,999),IEN=IEN+1
"RTN","PSOORAL1",57,0)
 . . . . S ^TMP("PSOAL",$J,IEN,0)=$E(FDAMGDOC,1,61)
"RTN","PSOORAL1",58,0)
 Q
"RTN","PSOORAL1",59,0)
 ;
"RTN","PSOORAL1",60,0)
COPAY ;Copay activity log
"RTN","PSOORAL1",61,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=" ",IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Copay Activity Log:"
"RTN","PSOORAL1",62,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="#   Date        Reason               Rx Ref         Initiator Of Activity",IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0),"=",79)="="
"RTN","PSOORAL1",63,0)
 I '$O(^PSRX(DA,"COPAY",0)) S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="There's NO Copay activity to report" Q
"RTN","PSOORAL1",64,0)
 F N=0:0 S N=$O(^PSRX(DA,"COPAY",N)) Q:'N  S P1=^(N,0),DTT=P1\1 D DAT D
"RTN","PSOORAL1",65,0)
 .S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=N_"   "_DAT_"    ",$P(RN," ",21)=" ",REA=$P(P1,"^",2),REA=$F("ARICE",REA)-1
"RTN","PSOORAL1",66,0)
 .I REA D
"RTN","PSOORAL1",67,0)
 ..S STA=$P("ANNUAL CAP REACHED^COPAY RESET^IB-INITIATED COPAY^REMOVE COPAY CHARGE^RX EDITED^","^",REA)
"RTN","PSOORAL1",68,0)
 ..S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_STA_$E(RN,$L(STA)+1,21)
"RTN","PSOORAL1",69,0)
 .E  S $P(STA," ",21)=" ",^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_STA
"RTN","PSOORAL1",70,0)
 .K STA,RN S $P(RN," ",15)=" ",RF=+$P(P1,"^",4)
"RTN","PSOORAL1",71,0)
 .S RFT=$S(RF>0:"REFILL "_RF,1:"ORIGINAL")
"RTN","PSOORAL1",72,0)
 .S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_RFT_$E(RN,$L(RFT)+1,15)_$S($D(^VA(200,+$P(P1,"^",3),0)):$P(^(0),"^"),1:$P(P1,"^",3))
"RTN","PSOORAL1",73,0)
 .S:$P(P1,"^",5)]""!($P(P1,"^",6)]"")!($P(P1,"^",7)]"") IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Comment: "_$P(P1,"^",5)
"RTN","PSOORAL1",74,0)
 .I $P(P1,"^",6)]"" S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_"  Old value="_$P(P1,"^",6)_"   New value="_$P(P1,"^",7)
"RTN","PSOORAL1",75,0)
 Q
"RTN","PSOORAL1",76,0)
 ;
"RTN","PSOORAL1",77,0)
ECME ; ECME activity log
"RTN","PSOORAL1",78,0)
 N N,P1,RFT,PSOACBRK,PSOACBRV,MIG,SG,I,NOTFND,CNT,LINE
"RTN","PSOORAL1",79,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=" ",IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="ECME Log:"
"RTN","PSOORAL1",80,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="#   Date/Time           Rx Ref          Initiator Of Activity"
"RTN","PSOORAL1",81,0)
 S IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0),"=",79)="="
"RTN","PSOORAL1",82,0)
 S NOTFND=1,I=0 F  S I=$O(^PSRX(DA,"A",I)) Q:'I  S Z=$G(^PSRX(DA,"A",I,0)) I $P(Z,"^",2)="M" S NOTFND=0 Q
"RTN","PSOORAL1",83,0)
 I NOTFND S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="There's NO ECME Activity to report" Q
"RTN","PSOORAL1",84,0)
 S CNT=0
"RTN","PSOORAL1",85,0)
 F N=0:0 S N=$O(^PSRX(DA,"A",N)) Q:'N  S P1=^(N,0) D
"RTN","PSOORAL1",86,0)
 .I $P(P1,"^",2)'="M" Q
"RTN","PSOORAL1",87,0)
 .S IEN=IEN+1,CNT=CNT+1
"RTN","PSOORAL1",88,0)
 .K STA,RN S $P(RN," ",15)=" ",RF=+$P(P1,"^",4)
"RTN","PSOORAL1",89,0)
 .S LINE=CNT,$E(LINE,5)=$$FMTE^XLFDT($P(P1,"^"),2),$E(LINE,25)=$S(RF:"REFILL "_RF,1:"ORIGINAL")
"RTN","PSOORAL1",90,0)
 .S $E(LINE,41)=$$GET1^DIQ(200,+$P(P1,"^",3),.01)
"RTN","PSOORAL1",91,0)
 .S ^TMP("PSOAL",$J,IEN,0)=LINE
"RTN","PSOORAL1",92,0)
 .I $P(P1,"^",5)]"" D
"RTN","PSOORAL1",93,0)
 ..S PSOACBRV=$P(P1,"^",5)
"RTN","PSOORAL1",94,0)
 ..;PSO*7*240 Use fileman for parsing
"RTN","PSOORAL1",95,0)
 ..K ^UTILITY($J,"W") S X="Comments: "_PSOACBRV,(DIWR,DIWL)=1,DIWF="C80" D ^DIWP F I=1:1:^UTILITY($J,"W",1) S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=$G(^UTILITY($J,"W",1,I,0))
"RTN","PSOORAL1",96,0)
 .I $O(^PSRX(DA,"A",N,2,0)) F I=0:0 S I=$O(^PSRX(DA,"A",N,2,I)) Q:'I  S MIG=^PSRX(DA,"A",N,2,I,0) D
"RTN","PSOORAL1",97,0)
 ..F SG=1:1:$L(MIG) D
"RTN","PSOORAL1",98,0)
 ...S:$L(^TMP("PSOAL",$J,IEN,0)_" "_$P(MIG," ",SG))>80 IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0)," ",9)=" "
"RTN","PSOORAL1",99,0)
 ...S:$P(MIG," ",SG)'="" ^TMP("PSOAL",$J,IEN,0)=$G(^TMP("PSOAL",$J,IEN,0))_" "_$P(MIG," ",SG)
"RTN","PSOORAL1",100,0)
 D DISPREJ
"RTN","PSOORAL1",101,0)
 K ^UTILITY($J,"W"),DIWR,DIWF,DIWL
"RTN","PSOORAL1",102,0)
 Q
"RTN","PSOORAL1",103,0)
 ;
"RTN","PSOORAL1",104,0)
SPMP ; SPMP (State Prescription Monitoring Program) Log
"RTN","PSOORAL1",105,0)
 N FILL,BAT,LOG,BAT0,LOG0
"RTN","PSOORAL1",106,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=" ",IEN=IEN+1
"RTN","PSOORAL1",107,0)
 S ^TMP("PSOAL",$J,IEN,0)="SPMP (State Prescription Monitoring Program) Log:"
"RTN","PSOORAL1",108,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Date/Time       Fill Type   Exp. Type Bat#  Filename"
"RTN","PSOORAL1",109,0)
 S IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0),"=",80)="="
"RTN","PSOORAL1",110,0)
 I '$D(^PS(58.42,"ARX",DA)) D  Q
"RTN","PSOORAL1",111,0)
 . S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="There's NO Export Log for this prescription."
"RTN","PSOORAL1",112,0)
 S FILL=""
"RTN","PSOORAL1",113,0)
 F  S FILL=$O(^PS(58.42,"ARX",DA,FILL)) Q:FILL=""  D
"RTN","PSOORAL1",114,0)
 . S BAT=0 F  S BAT=$O(^PS(58.42,"ARX",DA,FILL,BAT)) Q:'BAT  D
"RTN","PSOORAL1",115,0)
 . . S LOG=0 F  S LOG=$O(^PS(58.42,"ARX",DA,FILL,BAT,LOG)) Q:'LOG  D
"RTN","PSOORAL1",116,0)
 . . . S BAT0=$G(^PS(58.42,BAT,0)),LOG0=$G(^PS(58.42,BAT,"RX",LOG,0))
"RTN","PSOORAL1",117,0)
 . . . I '$P(BAT0,"^",10) Q
"RTN","PSOORAL1",118,0)
 . . . S IEN=IEN+1,LINE=$$FMTE^XLFDT($P(BAT0,"^",10),2),$E(LINE,17)=$J($P(LOG0,"^",2),4)
"RTN","PSOORAL1",119,0)
 . . . S $E(LINE,22)=$$GET1^DIQ(58.42001,LOG_","_BAT,2),$E(LINE,29)=$$GET1^DIQ(58.42,BAT,2)
"RTN","PSOORAL1",120,0)
 . . . S $E(LINE,39)=BAT,$E(LINE,45)=$E($$GET1^DIQ(58.42,BAT,6),1,35)
"RTN","PSOORAL1",121,0)
 . . . S ^TMP("PSOAL",$J,IEN,0)=LINE
"RTN","PSOORAL1",122,0)
 Q
"RTN","PSOORAL1",123,0)
 ;
"RTN","PSOORAL1",124,0)
DISPREJ  ;
"RTN","PSOORAL1",125,0)
 N LN,SEQ,REJ,PRI,VAR,X,X1,X2,I,RFT
"RTN","PSOORAL1",126,0)
 I '$D(^PSRX(DA,"REJ")) Q
"RTN","PSOORAL1",127,0)
 S PRI="PSOAL",$P(LN,"=",80)="",SEQ=0
"RTN","PSOORAL1",128,0)
 S IEN=$G(IEN)+1,^TMP(PRI,$J,IEN,0)=" "
"RTN","PSOORAL1",129,0)
 S IEN=IEN+1,^TMP(PRI,$J,IEN,0)="ECME REJECT Log:"
"RTN","PSOORAL1",130,0)
 S IEN=IEN+1,^TMP(PRI,$J,IEN,0)="#  Date/Time Rcvd    Rx Ref    Reject Type     STATUS     Date/Time Resolved"
"RTN","PSOORAL1",131,0)
 S IEN=IEN+1,^TMP(PRI,$J,IEN,0)=LN
"RTN","PSOORAL1",132,0)
 F REJ=0:0 S REJ=$O(^PSRX(DA,"REJ",REJ)) Q:'REJ  D
"RTN","PSOORAL1",133,0)
 . S VAR=$G(^PSRX(DA,"REJ",REJ,0))
"RTN","PSOORAL1",134,0)
 . S RFT=+$P(VAR,"^",4)
"RTN","PSOORAL1",135,0)
 . S SEQ=SEQ+1,X=SEQ,$E(X,4)=$$FMTE^XLFDT($P(VAR,"^",2),2),$E(X,22)=$S(RFT:"REFILL "_RFT,1:"ORIGINAL")
"RTN","PSOORAL1",136,0)
 . S $E(X,32)=$S(+VAR=79:"REFILL TOO SOON",+VAR=88:"DUR",1:$E($$EXP^PSOREJP1($P(VAR,"^",1)),1,15))  ;can't + default because values can be 07, 08, etc.
"RTN","PSOORAL1",137,0)
 . S $E(X,48)=$S($P(VAR,"^",5):"RESOLVED",1:"UNRESOLVED")
"RTN","PSOORAL1",138,0)
 . S:$P(VAR,"^",6) $E(X,59)=$$FMTE^XLFDT($P(VAR,"^",6),2)
"RTN","PSOORAL1",139,0)
 . S IEN=IEN+1,^TMP(PRI,$J,IEN,0)=X
"RTN","PSOORAL1",140,0)
 . I $P(VAR,"^",5) D
"RTN","PSOORAL1",141,0)
 . . S IEN=IEN+1,X=$$GET1^DIQ(52.25,REJ_","_DA,12)
"RTN","PSOORAL1",142,0)
 . . S X1=$$GET1^DIQ(52.25,REJ_","_DA,13) S:X1'="" X=X1_" ("_X_")"
"RTN","PSOORAL1",143,0)
 . . F I=1:1 Q:X=""  D
"RTN","PSOORAL1",144,0)
 . . . S ^TMP(PRI,$J,IEN,0)=$S(I=1:"Comments: ",1:"          ")_$E(X,1,69)
"RTN","PSOORAL1",145,0)
 . . . S X=$E(X,70,999) S:X'="" IEN=IEN+1
"RTN","PSOORAL1",146,0)
 Q
"RTN","PSOORAL1",147,0)
 ;
"RTN","PSOORAL1",148,0)
DAT S DAT="",DTT=DTT\1 Q:DTT'?7N  S DAT=$E(DTT,4,5)_"/"_$E(DTT,6,7)_"/"_$E(DTT,2,3)
"RTN","PSOORAL1",149,0)
 Q
"RTN","PSOORFI1")
0^21^B84234137^B83482862
"RTN","PSOORFI1",1,0)
PSOORFI1 ;BIR/SAB - finish OP orders from OE/RR continued ;5/23/05 2:11pm
"RTN","PSOORFI1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**7,15,23,27,32,44,51,46,71,90,108,131,152,186,210,222,258,260,225,391,408**;DEC 1997;Build 100
"RTN","PSOORFI1",3,0)
 ;Ref. ^PS(50.7 supp. DBIA 2223
"RTN","PSOORFI1",4,0)
 ;Ref. ^PSDRUG( supp. DBIA 221
"RTN","PSOORFI1",5,0)
 ;Ref. L^PSSLOCK supp. DBIA 2789
"RTN","PSOORFI1",6,0)
 ;Ref. ^PS(50.606 supp. DBIA 2174
"RTN","PSOORFI1",7,0)
 ;Ref. ^PS(55 supp. DBIA 2228
"RTN","PSOORFI1",8,0)
 ;Ref. ULK^ORX2 supp. DBIA 867
"RTN","PSOORFI1",9,0)
 ;
"RTN","PSOORFI1",10,0)
 ;PSO*186 add call to function $$DEACHK
"RTN","PSOORFI1",11,0)
 ;PSO*210 add call to WORDWRAP api
"RTN","PSOORFI1",12,0)
 ;
"RTN","PSOORFI1",13,0)
 S SIGOK=1
"RTN","PSOORFI1",14,0)
DSPL K ^TMP("PSOPO",$J),CLOZPAT,PSOPRC,PSODSPL
"RTN","PSOORFI1",15,0)
 S (OI,PSODRUG("OI"))=$P(OR0,"^",8),PSODRUG("OIN")=$P(^PS(50.7,$P(OR0,"^",8),0),"^"),OID=$P(OR0,"^",9)
"RTN","PSOORFI1",16,0)
 I $P($G(OR0),"^",9) S POERR=1,DREN=$P(OR0,"^",9) D DRG^PSOORDRG K POERR G DRG
"RTN","PSOORFI1",17,0)
 I '$P(OR0,"^",9) D DREN^PSOORNW2
"RTN","PSOORFI1",18,0)
DRG I $P($G(^PSDRUG(+$G(PSODRUG("IEN")),"CLOZ1")),"^")="PSOCLO1" D CLOZ^PSOORFI2
"RTN","PSOORFI1",19,0)
 ;PSO*186 modify If/Else below to use DEACHK
"RTN","PSOORFI1",20,0)
 I $G(PSODRUG("DEA"))]"" D
"RTN","PSOORFI1",21,0)
 .S PSOCS=0 K DIR,DIC,PSOX
"RTN","PSOORFI1",22,0)
 .N PSDEA,PSDAYS S PSDEA=PSODRUG("DEA"),PSDAYS=+$P(OR0,"^",22)
"RTN","PSOORFI1",23,0)
 .I $$DEACHK^PSOUTLA1("*",PSDEA,PSDAYS,$G(CLOZPAT),.PSOCS,.PSOMAX)
"RTN","PSOORFI1",24,0)
 E  D
"RTN","PSOORFI1",25,0)
 .S PSOMAX=$S($G(CLOZPAT)=2:3,$G(CLOZPAT)=1:1,1:$P(OR0,"^",11))
"RTN","PSOORFI1",26,0)
ISSDT S (PSOID,Y,PSONEW("ISSUE DATE"))=$S($G(PSONEW("ISSUE DATE")):PSONEW("ISSUE DATE"),$P($G(OR0),"^",6):$E($P(OR0,"^",6),1,7),1:DT)
"RTN","PSOORFI1",27,0)
 X ^DD("DD") S PSONEW("ISSUE DATE")=Y
"RTN","PSOORFI1",28,0)
 D USER^PSOORFI2($P(OR0,"^",4)) S PSONEW("CLERK CODE")=$P(OR0,"^",4),PSORX("CLERK CODE")=USER1
"RTN","PSOORFI1",29,0)
 S (PSONEW("DFLG"),PSONEW("QFLG"))=0,PSODFN=$P(OR0,"^",2),PSONEW("QTY")=$P(OR0,"^",10),PSONEW("MAIL/WINDOW")=$S($P(OR0,"^",17)="M":"M",1:"W")
"RTN","PSOORFI1",30,0)
 S:$G(PSONEW("CLINIC"))']"" PSONEW("CLINIC")=+$P(OR0,"^",13),PSORX("CLINIC")=$S($D(^SC(PSONEW("CLINIC"),0)):$P(^SC(PSONEW("CLINIC"),0),"^"),1:"")
"RTN","PSOORFI1",31,0)
 S:$G(PSORX("CLINIC"))']"" PSORX("CLINIC")=$S($D(^SC(+$P(OR0,"^",13),0)):$P(^SC($P(OR0,"^",13),0),"^"),1:"")
"RTN","PSOORFI1",32,0)
 D USER^PSOORFI2($P(OR0,"^",5))
"RTN","PSOORFI1",33,0)
 S PSONEW("CLERK CODE")=$P(OR0,"^",4),PSONEW("PROVIDER")=$P(OR0,"^",5),PSONEW("PROVIDER NAME")=USER1
"RTN","PSOORFI1",34,0)
 S PSONEW("PATIENT STATUS")=$S(+$G(^PS(55,PSODFN,"PS")):+$G(^PS(55,PSODFN,"PS")),1:"")
"RTN","PSOORFI1",35,0)
 S PSONEW("CHCS NUMBER")=$S($P($G(^PS(52.41,+$G(ORD),"EXT")),"^")'="":$P($G(^("EXT")),"^"),1:"")
"RTN","PSOORFI1",36,0)
 S PSONEW("EXTERNAL SYSTEM")=$S($P($G(^PS(52.41,+$G(ORD),"EXT")),"^",3)'="":$P($G(^("EXT")),"^",3),1:"")
"RTN","PSOORFI1",37,0)
 I $P(OR0,"^",22)>0 S PSONEW("DAYS SUPPLY")=$P(OR0,"^",22) G DS
"RTN","PSOORFI1",38,0)
 S PSONEW("DAYS SUPPLY")=$S(+$G(^PS(55,PSODFN,"PS"))&($P($G(^PS(53,+$G(^PS(55,PSODFN,"PS")),0)),"^",3)):$P(^PS(53,+$G(^PS(55,PSODFN,"PS")),0),"^",3),1:30)
"RTN","PSOORFI1",39,0)
DS S:$D(CLOZPAT) PSONEW("DAYS SUPPLY")=$S(CLOZPAT=2&(PSONEW("DAYS SUPPLY")>28):28,CLOZPAT=1&(PSONEW("DAYS SUPPLY")>14):14,'CLOZPAT&(PSONEW("DAYS SUPPLY")>7):7,1:PSONEW("DAYS SUPPLY"))
"RTN","PSOORFI1",40,0)
 S IEN=0 D OBX                ; Display Order Checks Information
"RTN","PSOORFI1",41,0)
 D LMDISP^PSOORFI5(+$G(ORD))  ; Display Flag/Unflag Information
"RTN","PSOORFI1",42,0)
 D DIN^PSONFI(PSODRUG("OI"),$S($D(PSODRUG("IEN")):PSODRUG("IEN"),1:"")) ;Setup for N/F & DIN indicator
"RTN","PSOORFI1",43,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="*(1) Orderable Item: "_$P(^PS(50.7,PSODRUG("OI"),0),"^")_" "_$P(^PS(50.606,$P(^(0),"^",2),0),"^")_NFIO
"RTN","PSOORFI1",44,0)
 S:NFIO["<DIN>" NFIO=IEN_","_($L(^TMP("PSOPO",$J,IEN,0))-4)
"RTN","PSOORFI1",45,0)
 D FULL^VALM1 K LST I $G(PSODRUG("NAME"))]"" D  G PST
"RTN","PSOORFI1",46,0)
 .S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)=" (2)"_$S($D(^PSDRUG("AQ",PSODRUG("IEN"))):"      CMOP ",1:"           ")_"Drug: "_PSODRUG("NAME")_NFID
"RTN","PSOORFI1",47,0)
 .S:NFID["<DIN>" NFID=IEN_","_($L(^TMP("PSOPO",$J,IEN,0))-4)
"RTN","PSOORFI1",48,0)
 .I $P(^PSDRUG(PSODRUG("IEN"),0),"^",10)]"" S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="       Drug Message:" D DRGMSG^PSOORNEW
"RTN","PSOORFI1",49,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)=" (2)           Drug: No Dispense Drug Selected"
"RTN","PSOORFI1",50,0)
PST D DOSE^PSOORFI4 K PSOINSFL
"RTN","PSOORFI1",51,0)
 S PSOINSFL=$P($G(^PS(52.41,ORD,"INS")),"^",2)
"RTN","PSOORFI1",52,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)=" (4)   Pat Instruct:" D INST^PSOORFI4
"RTN","PSOORFI1",53,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="  Provider Comments:" S TY=3 D INST
"RTN","PSOORFI1",54,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="       Instructions:" S TY=2 D INST
"RTN","PSOORFI1",55,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="                SIG:" D SIG
"RTN","PSOORFI1",56,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)=" (5) Patient Status: "_$P($G(^PS(53,+PSONEW("PATIENT STATUS"),0)),"^")
"RTN","PSOORFI1",57,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)=" (6)     Issue Date: "_PSONEW("ISSUE DATE")
"RTN","PSOORFI1",58,0)
 S (Y,PSONEW("FILL DATE"))=$S($E($P(OR0,"^",6),1,7)<DT:DT,1:$E($P(OR0,"^",6),1,7)) X ^DD("DD") S PSORX("FILL DATE")=Y,^TMP("PSOPO",$J,IEN,0)=^TMP("PSOPO",$J,IEN,0)_"        (7) Fill Date: "_Y
"RTN","PSOORFI1",59,0)
 I $P(OR0,"^",18) D
"RTN","PSOORFI1",60,0)
 .S IEN=IEN+1,Y=$P(OR0,"^",18) X ^DD("DD") S $P(^TMP("PSOPO",$J,IEN,0)," ",39)="Effective Date: "_Y
"RTN","PSOORFI1",61,0)
 D:$D(CLOZPAT) ELIG^PSOORFI2,CLQTY^PSOORFI4
"RTN","PSOORFI1",62,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)=" (8)    Days Supply: "_$S($G(PSONEW("DAYS SUPPLY")):PSONEW("DAYS SUPPLY"),+$G(^PS(55,PSODFN,"PS"))&($P(^PS(53,+$G(^PS(55,PSODFN,"PS")),0),"^",3)):$P(^PS(53,+$G(^PS(55,PSODFN,"PS")),0),"^",3),1:"")
"RTN","PSOORFI1",63,0)
 I +$G(^PS(55,PSODFN,"PS")) S RXPT=+^("PS") I $G(^PS(53,RXPT,0))]"" D
"RTN","PSOORFI1",64,0)
 .S PSONEW("# OF REFILLS")=$S(+$P(OR0,"^",11)>+$P(^PS(53,RXPT,0),"^",4):+$P(^PS(53,RXPT,0),"^",4),1:+$P(OR0,"^",11)),PSOX=+$P(^PS(53,RXPT,0),"^",4)
"RTN","PSOORFI1",65,0)
 .S PSONEW("# OF REFILLS")=$S(PSONEW("# OF REFILLS")>PSOMAX:PSOMAX,1:PSONEW("# OF REFILLS"))
"RTN","PSOORFI1",66,0)
 .S PSOMAX=$S(PSOMAX>+$P(^PS(53,RXPT,0),"^",4):+$P(^PS(53,RXPT,0),"^",4),1:PSOMAX) K RXPT
"RTN","PSOORFI1",67,0)
 .S MPSDY=PSONEW("DAYS SUPPLY")
"RTN","PSOORFI1",68,0)
 .S MAXRF=$S(MPSDY<60:11,MPSDY'<60&(MPSDY'>89):5,MPSDY=90:3,1:0)
"RTN","PSOORFI1",69,0)
 .I PSONEW("# OF REFILLS")>MAXRF S PSONEW("# OF REFILLS")=MAXRF K MAXRF,MPSDY
"RTN","PSOORFI1",70,0)
 E  D
"RTN","PSOORFI1",71,0)
 . I $G(PSOMAX) S PSONEW("# OF REFILLS")=$S(+$P(OR0,"^",11)>PSOMAX:PSOMAX,1:+$P(OR0,"^",11)) Q
"RTN","PSOORFI1",72,0)
 .S PSONEW("# OF REFILLS")=+$P(OR0,"^",11)
"RTN","PSOORFI1",73,0)
 S ^TMP("PSOPO",$J,IEN,0)=^TMP("PSOPO",$J,IEN,0)_"                (9)   QTY"_$S($P($G(^PSDRUG(+$G(PSODRUG("IEN")),660)),"^",8)]"":" ("_$P($G(^PSDRUG(+$G(PSODRUG("IEN")),660)),"^",8)_")",1:" (  )")_": "
"RTN","PSOORFI1",74,0)
 S ^TMP("PSOPO",$J,IEN,0)=^TMP("PSOPO",$J,IEN,0)_$S($D(CLOZPAT):+$G(PSONEW("QTY")),1:$P(OR0,"^",10))
"RTN","PSOORFI1",75,0)
 I $P($G(^PSDRUG(+$G(PSODRUG("IEN")),5)),"^")]"" D
"RTN","PSOORFI1",76,0)
 .S $P(RN," ",79)=" ",IEN=IEN+1
"RTN","PSOORFI1",77,0)
 .S ^TMP("PSOPO",$J,IEN,0)=$E(RN,$L("QTY DSP MSG: "_$P(^PSDRUG(PSODRUG("IEN"),5),"^"))+1,79)_"QTY DSP MSG: "_$P(^PSDRUG(PSODRUG("IEN"),5),"^") K RN
"RTN","PSOORFI1",78,0)
 S IEN=IEN+1
"RTN","PSOORFI1",79,0)
 I $P(OR0,"^",24) S ^TMP("PSOPO",$J,IEN,0)="   Provider ordered: days supply "_+$P(OR0,"^",22)_", quantity "_+$P(OR0,"^",10)_" & refills "_+$P(OR0,"^",11)
"RTN","PSOORFI1",80,0)
 E  S ^TMP("PSOPO",$J,IEN,0)="       Provider ordered "_+$P(OR0,"^",11)_" refills"
"RTN","PSOORFI1",81,0)
 D:$D(CLOZPAT) PQTY^PSOORFI4
"RTN","PSOORFI1",82,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="(10)   # of Refills: "_PSONEW("# OF REFILLS")_$E("  ",$L(PSONEW("# OF REFILLS"))+1,2)_"               (11)   Routing: "_$S($G(PSONEW("MAIL/WINDOW"))="M":"MAIL",1:"WINDOW")
"RTN","PSOORFI1",83,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="(12)         Clinic: "_PSORX("CLINIC")
"RTN","PSOORFI1",84,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="(13)       Provider: "_PSONEW("PROVIDER NAME")
"RTN","PSOORFI1",85,0)
 I $G(PKI),+$G(PSODRUG("DEA"))>1,+$G(PSODRUG("DEA"))<6 D PRV^PSOORFI5($P(OR0,"^",5),$P(OR0,"^",9),$P(OR0,"^"))
"RTN","PSOORFI1",86,0)
 I $P($G(^VA(200,$S($G(PSONEW("PROVIDER")):PSONEW("PROVIDER"),1:$P(OR0,"^",5)),"PS")),"^",7)&($P($G(^("PS")),"^",8)) S PSONEW("COSIGNING PROVIDER")=$P(^("PS"),"^",8) D
"RTN","PSOORFI1",87,0)
 .D USER^PSOORFI2(PSONEW("COSIGNING PROVIDER"))
"RTN","PSOORFI1",88,0)
 .S IEN=IEN+1 S ^TMP("PSOPO",$J,IEN,0)="        Cos-Provider: "_USER1
"RTN","PSOORFI1",89,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="(14)         Copies: 1"
"RTN","PSOORFI1",90,0)
 S PSONEW("REMARKS")=$S($P(OR0,"^",17)="C":"Administered in Clinic.",1:"")
"RTN","PSOORFI1",91,0)
 K PSONEW("ADMINCLINIC") S:$P(OR0,"^",17)="C" PSONEW("ADMINCLINIC")=1
"RTN","PSOORFI1",92,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="(15)        Remarks: "_$S($G(PSONEW("REMARKS"))]"":PSONEW("REMARKS"),1:"")
"RTN","PSOORFI1",93,0)
 D USER^PSOORFI2($P(OR0,"^",4))
"RTN","PSOORFI1",94,0)
 S $P(RN," ",35)=" ",IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="   Entry By: "_USER1_$E(RN,$L(USER1)+1,35)
"RTN","PSOORFI1",95,0)
 S Y=$P(OR0,"^",12) X ^DD("DD") S ^TMP("PSOPO",$J,IEN,0)=^TMP("PSOPO",$J,IEN,0)_"Entry Date: "_$E($P(OR0,"^",12),4,5)_"/"_$E($P(OR0,"^",12),6,7)_"/"_$E($P(OR0,"^",12),2,3)_" "_$P(Y,"@",2) K RN
"RTN","PSOORFI1",96,0)
 I $P(OR0,"^",24) S PSOACT=$S($D(^XUSEC("PSDRPH",DUZ)):"DEFX",$D(^XUSEC("PSORPH",DUZ)):"F",$P($G(PSOPAR),"^",2):"F",1:"") D
"RTN","PSOORFI1",97,0)
 .K PSOCSP S PSOCSP("NAME")=$G(PSODRUG("NAME")) M PSOCSP("DOSE")=PSONEW("DOSE"),PSOCSP("DOSE ORDERED")=PSONEW("DOSE ORDERED")
"RTN","PSOORFI1",98,0)
 .S PSOCSP("# OF REFILLS")=PSONEW("# OF REFILLS") ;track original data for dig. orders
"RTN","PSOORFI1",99,0)
 .S PSOCSP("ISSUE DATE")=$E($P(OR0,"^",6),1,7),PSOCSP("QTY")=PSONEW("QTY"),PSOCSP("DAYS SUPPLY")=PSONEW("DAYS SUPPLY")
"RTN","PSOORFI1",100,0)
 E  S PSOACT=$S($D(^XUSEC("PSORPH",DUZ)):"DEFX",'$D(^XUSEC("PSORPH",DUZ))&($P($G(PSOPAR),"^",2)):"F",1:"")
"RTN","PSOORFI1",101,0)
 ; - PSOACTOV is used to force the Pending Order to be Read-Only (no updates) even if invoked by a Pharmacist
"RTN","PSOORFI1",102,0)
 I $G(PSOACTOV) S PSOACT=""
"RTN","PSOORFI1",103,0)
 D:'$G(ACP) EN^PSOLMPO S:$G(ACP) VALMBCK="Q" D:$G(PKI1)=2 DCP^PSOPKIV1
"RTN","PSOORFI1",104,0)
 Q
"RTN","PSOORFI1",105,0)
POST ;post patient selection
"RTN","PSOORFI1",106,0)
 D POST^PSOORFI2 Q
"RTN","PSOORFI1",107,0)
SIG ;displays possible sig
"RTN","PSOORFI1",108,0)
 D SIG^PSOORFI2 Q
"RTN","PSOORFI1",109,0)
INST ;displays provider comments and pharmacy instructions
"RTN","PSOORFI1",110,0)
 S INST=0 F  S INST=$O(^PS(52.41,ORD,TY,INST)) Q:'INST  D     ;PSO*210
"RTN","PSOORFI1",111,0)
 . S (MIG,INST(INST))=^PS(52.41,ORD,TY,INST,0)
"RTN","PSOORFI1",112,0)
 . D WORDWRAP^PSOUTLA2(MIG,.IEN,$NA(^TMP("PSOPO",$J)),20)
"RTN","PSOORFI1",113,0)
 K INST,TY,MIG,SG
"RTN","PSOORFI1",114,0)
 Q
"RTN","PSOORFI1",115,0)
OBX ;formats obx section
"RTN","PSOORFI1",116,0)
 D OBX^PSOORFI4
"RTN","PSOORFI1",117,0)
 Q
"RTN","PSOORFI1",118,0)
ST ;sort by route or patient
"RTN","PSOORFI1",119,0)
 W !!,"Enter 'PA' to process orders by patients",!,"      'RT' to process orders by route (mail/window)",!,"      'PR' to process orders by priority",!,"      'CL' to process orders by clinic"
"RTN","PSOORFI1",120,0)
 W !,"      'FL' to process flagged orders",!,"      'CS' to process digitally signed CS orders",!,"   or 'E' or '^' to exit" W ! Q
"RTN","PSOORFI1",121,0)
RT ;which route to sort by
"RTN","PSOORFI1",122,0)
 W !!,"Enter 'W' to process window orders first",!,"      'M' to process mail orders first",!,"      'C' to process orders administered in clinic first",!,"   or 'E' or '^' to exit" Q
"RTN","PSOORFI1",123,0)
PT ;process for all or one patient
"RTN","PSOORFI1",124,0)
 W !!,"Enter 'A' to process all patient orders",!,"      'S' to process orders for a patient",!,"      or 'E' or '^' to exit" Q
"RTN","PSOORFI1",125,0)
EP ;continue processing or not
"RTN","PSOORFI1",126,0)
 W !,"If you want to continue processing orders Press RETURN or enter '^' to exit" Q
"RTN","PSOORFI1",127,0)
LOCK S PSOPLCK=$$L^PSSLOCK(PAT,0) I '$G(PSOPLCK) D LOCK^PSOORCPY S POERR("QFLG")=1
"RTN","PSOORFI1",128,0)
 K PSOPLCK
"RTN","PSOORFI1",129,0)
 Q
"RTN","PSOORFI1",130,0)
ULK S X=PAT_";DPT(" D ULK^ORX2 S:$G(PSOQUIT) POERR("QFLG")=1 ; not called anymore
"RTN","PSOORFI1",131,0)
 Q
"RTN","PSOORFI1",132,0)
LOCK1 ;
"RTN","PSOORFI1",133,0)
 I $P($G(^PS(52.41,ORD,0)),"^",24) S PSOACT=$S($D(^XUSEC("PSDRPH",DUZ)):"DEFX",$D(^XUSEC("PSORPH",DUZ)):"F",'$D(^XUSEC("PSORPH",DUZ))&($P($G(PSOPAR),"^",2)):"F",1:"")
"RTN","PSOORFI1",134,0)
 E  S PSOACT=$S($D(^XUSEC("PSORPH",DUZ)):"DEFX",'$D(^XUSEC("PSORPH",DUZ))&($P($G(PSOPAR),"^",2)):"F",1:"")
"RTN","PSOORFI1",135,0)
 Q
"RTN","PSOORFI1",136,0)
EX K DRET,SIG,PSODRUG,PRC,PHI
"RTN","PSOORFI1",137,0)
 K DIR,DIRUT,DUOUT,DIRUT,X,Y,DIC,POERR,PSONEW,PSOSD,MAIL,CLI,WIN,OR0,OR1,OR2,ORD,SRT,PSRT,PSODFN,PSOFROM,T,OR3,PAT,%,%T,%Y,DI,DQ,DR,DRG,STA,I,T1,PSOSORT,PSOCSP
"RTN","PSOORFI1",138,0)
 K TO,TC,TZ,PSOCPAY,PSOBILL,PSOIBQS,GROUPCNT,AGROUP,AGROUP1,OBX,%,%I,%H,D0,DFN,PSORX,PSOPTPST,PSOQFLG,PT,RTN,TM,TM1,DIPGM,PSOID,PSOCNT,PSOLK,PSZFIN,PSZFZZ D KVA^VADPT
"RTN","PSOORFI1",139,0)
 K PSOFDR,PSOQUIT,PSOFIN,^TMP("PSOAO",$J),^TMP("PSODA",$J),^TMP("PSOPO",$J),^TMP("PSOPF",$J),^TMP("PSOPI",$J),^TMP("PSOHDR",$J),MEDA,MEDP
"RTN","PSOORFI1",140,0)
 K C,CC,CNT,CRIT,D,DGI,DGS,DREN,IT,JJ,LG,MM,NIEN,PSOD,PATA,PSDAYS,PSOACT,PSOBM,PSOCOU,PSOCOUU,PSOFLAG,PSON,PSONOOR,PSOOPT,PSOPF,PSOPI,PSRF,RXFL,SDA,SEG1,SER,SERS,SLPPL,STAT,Z,Z4,ZDA
"RTN","PSOORFI1",141,0)
 D FULL^VALM1
"RTN","PSOORFI1",142,0)
 Q
"RTN","PSOORFI2")
0^23^B95796288^B94812114
"RTN","PSOORFI2",1,0)
PSOORFI2 ;BIR/BHW-finish cprs orders cont. ;07/29/96
"RTN","PSOORFI2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**7,15,23,27,46,130,146,177,222,225,338,313,408**;DEC 1997;Build 100
"RTN","PSOORFI2",3,0)
 ;External reference ^YSCL(603.01 supported by DBIA 2697
"RTN","PSOORFI2",4,0)
 ;External references PSOL and PSOUL^PSSLOCK supported by DBIA 2789
"RTN","PSOORFI2",5,0)
HLP W !,"Enter 'S' to process orders with a priority of STAT",!,"      'E' to process orders with an Emergency priority,",!,"      'R' to process Routine orders.",! Q
"RTN","PSOORFI2",6,0)
HELP ;
"RTN","PSOORFI2",7,0)
 W !,"Please enter a minimum of two (2) characters.",!,"Enter Patient's name whose med orders are to be completed.",!
"RTN","PSOORFI2",8,0)
 S (PATN,DPT)=0 F  S DPT=$O(^PS(52.41,"AOR",DPT)) Q:'DPT  I $D(^PS(52.41,"AOR",DPT,PSOPINST)) W !,$P(^DPT(DPT,0),"^") S PATN=PATN+1 I PATN=20 D  I $D(DUOUT)!($D(DTOUT)) G HELPX
"RTN","PSOORFI2",9,0)
 .K DIR,DUOUT,DTOUT,DIRUT S DIR(0)="E" D ^DIR S PATN=0 K DIR
"RTN","PSOORFI2",10,0)
HELPX K DTOUT,DUOUT,DIRUT,PAINST S DIR(0)="FO^2:30",DIR("A")="Select Patient",DIR("?")="^D HELP^PSOORFIN"
"RTN","PSOORFI2",11,0)
 K PATN,DPT Q
"RTN","PSOORFI2",12,0)
RTE ;
"RTN","PSOORFI2",13,0)
 S PSZFIN=1
"RTN","PSOORFI2",14,0)
 F PSZFZZ=0:0 S PSZFZZ=$O(^PS(52.41,"AC",PAT,$E(PSRT),PSZFZZ)) Q:'PSZFZZ!('PSZFIN)  D
"RTN","PSOORFI2",15,0)
 .I $P($G(^PS(52.41,PSZFZZ,0)),"^",3)="NW"!($P($G(^(0)),"^",3)="RNW")!($P($G(^(0)),"^",3)="RF") I $P($G(^PS(52.41,PSZFZZ,"INI")),"^")=$G(PSOPINST) S PSZFIN=0
"RTN","PSOORFI2",16,0)
 Q
"RTN","PSOORFI2",17,0)
PRI ;
"RTN","PSOORFI2",18,0)
 S PSZFIN=1
"RTN","PSOORFI2",19,0)
 F PSZFZZ=0:0 S PSZFZZ=$O(^PS(52.41,"AP",PAT,$E(PSRT),PSZFZZ)) Q:'PSZFZZ!('PSZFIN)  D
"RTN","PSOORFI2",20,0)
 .I $P($G(^PS(52.41,PSZFZZ,0)),"^",3)="NW"!($P($G(^(0)),"^",3)="RNW")!($P($G(^(0)),"^",3)="RF") I $P($G(^PS(52.41,PSZFZZ,"INI")),"^")=$G(PSOPINST) S PSZFIN=0
"RTN","PSOORFI2",21,0)
 Q
"RTN","PSOORFI2",22,0)
PROFILE ;display med profile
"RTN","PSOORFI2",23,0)
 S MEDA=3 ;3=question asked already
"RTN","PSOORFI2",24,0)
 W !!! K MEDP,DIR,DUOUT,DIRUT,DTOUT S DIR(0)="Y",DIR("B")="Yes",DIR("A")="Do you want to see Medication Profile" D ^DIR K DIR Q:$D(DIRUT)!('Y)
"RTN","PSOORFI2",25,0)
 I Y S MEDP=1
"RTN","PSOORFI2",26,0)
 K DIR,DUOUT,DIRUT,DTOUT
"RTN","PSOORFI2",27,0)
 Q
"RTN","PSOORFI2",28,0)
DC I '$G(PSOORRNW),$G(PSOOPT)=3 S PSORENW("DFLG")=1 S:'$D(PSOBBC1("FROM")) VALMBCK="Q",VALMSG="Renew Rx Request Canceled.",Y=-1 Q
"RTN","PSOORFI2",29,0)
 G DC^PSOORFI6
"RTN","PSOORFI2",30,0)
 Q
"RTN","PSOORFI2",31,0)
DE Q:'$D(^PS(52.41,ORD,0))
"RTN","PSOORFI2",32,0)
 K ^PS(52.41,"AOR",$P(^PS(52.41,ORD,0),"^",2),+$P($G(^PS(52.41,ORD,"INI")),"^"),ORD),^PS(52.41,"AD",$P(^PS(52.41,ORD,0),"^",12),+$P($G(^PS(52.41,ORD,"INI")),"^"),ORD)
"RTN","PSOORFI2",33,0)
 S $P(^PS(52.41,ORD,0),"^",3)="DC",POERR("PLACER")=$P(^(0),"^"),POERR("STAT")="OC"
"RTN","PSOORFI2",34,0)
 S POERR("COMM")=$S($G(POERR("DEAD")):"Patient died on "_$G(PSOPTPST(2,PSODFN,.351))_".",1:ACOM),$P(^PS(52.41,ORD,4),"^")=POERR("COMM")
"RTN","PSOORFI2",35,0)
 D EN^PSOHLSN(POERR("PLACER"),POERR("STAT"),POERR("COMM"),PSONOOR)
"RTN","PSOORFI2",36,0)
 I '$G(POERR("DEAD")) S DIR("A")="Press Return to Continue" D PAUSE^VALM1
"RTN","PSOORFI2",37,0)
 K PSONOOR,PDORUG,ACOM,CMOP,DEA,DEF,DREN,FDR,HDR,PHI,PRC,SIGOK,DIR,DTOUT,DUOUT,DIRUT
"RTN","PSOORFI2",38,0)
 S Y=-1 Q
"RTN","PSOORFI2",39,0)
 ;
"RTN","PSOORFI2",40,0)
RF ;process refill request from CPRS
"RTN","PSOORFI2",41,0)
 S PSOREF("IRXN")=$P(OR0,"^",19) D PSOL^PSSLOCK($P(OR0,"^",19)) I '$G(PSOMSG) D  D PAUSE^VALM1 K PSOREF,PSOMSG Q
"RTN","PSOORFI2",42,0)
 .I $P($G(PSOMSG),"^",2)'="" W $C(7),!!,$P(PSOMSG,"^",2),! Q
"RTN","PSOORFI2",43,0)
 .W $C(7),!!,"Another person is editing Rx "_$P(^PSRX($P(OR0,"^",19),0),"^"),!
"RTN","PSOORFI2",44,0)
 ;
"RTN","PSOORFI2",45,0)
 D FULL^VALM1
"RTN","PSOORFI2",46,0)
 I '$P($G(^PS(52.41,ORD,0)),"^",23),+$G(^PS(52.41,ORD,"FLG")) D  I $D(DIRUT)!'Y S VALMBCK="B" Q
"RTN","PSOORFI2",47,0)
 . K DIRUT,DUOUT,DTOUT,DIR
"RTN","PSOORFI2",48,0)
 . S DIR("A",1)="Flagged by "_$$GET1^DIQ(52.41,ORD,34)_" on "_$$GET1^DIQ(52.41,ORD,33)_": "_$$GET1^DIQ(52.41,ORD,35)
"RTN","PSOORFI2",49,0)
 . S DIR("A",2)=""
"RTN","PSOORFI2",50,0)
 . S DIR("A",3)="Unflagged by "_$$GET1^DIQ(52.41,ORD,37)_" on "_$$GET1^DIQ(52.41,ORD,36)_": "_$$GET1^DIQ(52.41,ORD,38)
"RTN","PSOORFI2",51,0)
 . S DIR("A",4)=""
"RTN","PSOORFI2",52,0)
 . S DIR(0)="Y",DIR("B")="YES",DIR("A")="Continue"
"RTN","PSOORFI2",53,0)
 . W ! D ^DIR
"RTN","PSOORFI2",54,0)
 ;
"RTN","PSOORFI2",55,0)
 I $G(ORD),+$P($G(^PS(52.41,+ORD,0)),"^",23)=1 D  Q:$D(DIRUT)!'Y  D EN1^ORCFLAG(+$P($G(^PS(52.41,ORD,0)),"^")) H 1
"RTN","PSOORFI2",56,0)
 . K DIRUT,DUOUT,DTOUT,DIR
"RTN","PSOORFI2",57,0)
 . S DIR("A",1)="This Refill Request is flagged. In order to process it"
"RTN","PSOORFI2",58,0)
 . S DIR("A",2)="you must unflag it first."
"RTN","PSOORFI2",59,0)
 . S DIR("A",3)=""
"RTN","PSOORFI2",60,0)
 . S DIR(0)="Y",DIR("A")="Unflag Refill Request",DIR("B")="NO"
"RTN","PSOORFI2",61,0)
 . W ! D ^DIR I $D(DIRUT)!'Y S VALMBCK="B"
"RTN","PSOORFI2",62,0)
 I $G(ORD),+$P($G(^PS(52.41,+ORD,0)),"^",23)=1 Q
"RTN","PSOORFI2",63,0)
 ;
"RTN","PSOORFI2",64,0)
 I $$TITRX^PSOUTL(PSOREF("IRXN"))="t" D  D PAUSE^VALM1 K PSOREF Q
"RTN","PSOORFI2",65,0)
 . W !!,$C(7),"Rx# "_$P(^PSRX($P(OR0,"^",19),0),"^")_" is marked as 'Titration Rx' and cannot be refilled."
"RTN","PSOORFI2",66,0)
 ;
"RTN","PSOORFI2",67,0)
 K PSOMSG S (PSOREF("DFLG"),PSOREF("FIELD"),PSOREF1)=0,X="T-6M",%DT="X" D ^%DT
"RTN","PSOORFI2",68,0)
 S (PSOID,PSOREF("ISSUE DATE"))=$S($P(^PSRX(PSOREF("IRXN"),0),"^",13)<Y:Y,1:$P(^PSRX(PSOREF("IRXN"),0),"^",13))
"RTN","PSOORFI2",69,0)
 S:$G(PSORX("BAR CODE"))&($G(PSOBBC1("FROM"))="NEW") PSOREF("ISSUE DATE")=DT K X,X1,X2
"RTN","PSOORFI2",70,0)
 ;
"RTN","PSOORFI2",71,0)
 S PSONEW("DAYS SUPPLY")=$P(^PSRX(PSOREF("IRXN"),0),"^",8),PSONEW("# OF REFILLS")=$P(^(0),"^",9)
"RTN","PSOORFI2",72,0)
 W !!,"Processing Refill Request for Rx "_$P(^PSRX(PSOREF("IRXN"),0),"^")
"RTN","PSOORFI2",73,0)
 D FILLDT^PSODIR2(.PSOREF) I PSOREF("DFLG") S VALMBCK="R" G END
"RTN","PSOORFI2",74,0)
 ;
"RTN","PSOORFI2",75,0)
 S PSORX("MAIL/WINDOW")=$S($P(OR0,"^",17)="M":"MAIL",1:"WINDOW")
"RTN","PSOORFI2",76,0)
 D MW^PSODIR2(.PSOREF) I PSOREF("DFLG") S VALMBCK="R" G END
"RTN","PSOORFI2",77,0)
 K PSORX("ADMINCLINIC") S:$P(OR0,"^",17)="C" PSORX("ADMINCLINIC")=1
"RTN","PSOORFI2",78,0)
 S:'$G(PSOFROM)'="NEW" PSOFROM="REFILL" S PSOREF("DFLG")=0
"RTN","PSOORFI2",79,0)
 D ^PSOREF0
"RTN","PSOORFI2",80,0)
END D PSOUL^PSSLOCK(PSOREF("IRXN")) K PSOREF,NODE,PSOREF1,PSL,PSOERR,PSORX("QFLG")
"RTN","PSOORFI2",81,0)
 Q
"RTN","PSOORFI2",82,0)
S D KPRI,KPRIZ F  S ORD=$O(^PS(52.41,"AP",PAT,"S",ORD)) Q:'ORD!($G(POERR("QFLG")))  I $P(^PS(52.41,ORD,0),"^",3)'="DC",$P(^(0),"^",3)'="DE" D LOCK1^PSOORFI1,ORD^PSOORFIN S PSOSTATZ=1
"RTN","PSOORFI2",83,0)
 D:$G(POERR("QFLG")) KPRI Q:$G(POERR("QFLG"))  I $G(PSOSTATZ) S ORD=0 D
"RTN","PSOORFI2",84,0)
 .D KPRIZ F  S ORD=$O(^PS(52.41,"AP",PAT,"E",ORD)) Q:'ORD!($G(POERR("QFLG")))  I $P(^PS(52.41,ORD,0),"^",3)'="DC",$P(^(0),"^",3)'="DE" D LOCK1^PSOORFI1,ORD^PSOORFIN
"RTN","PSOORFI2",85,0)
 .Q:$G(POERR("QFLG"))
"RTN","PSOORFI2",86,0)
 .D KPRIZ S ORD=0 F  S ORD=$O(^PS(52.41,"AP",PAT,"R",ORD)) Q:'ORD!($G(POERR("QFLG")))  I $P(^PS(52.41,ORD,0),"^",3)'="DC",$P(^(0),"^",3)'="DE" D LOCK1^PSOORFI1,ORD^PSOORFIN
"RTN","PSOORFI2",87,0)
 D KPRI
"RTN","PSOORFI2",88,0)
 Q
"RTN","PSOORFI2",89,0)
E D KPRI,KPRIZ F  S ORD=$O(^PS(52.41,"AP",PAT,"E",ORD)) Q:'ORD!($G(POERR("QFLG")))  I $P(^PS(52.41,ORD,0),"^",3)'="DC",$P(^(0),"^",3)'="DE" D LOCK1^PSOORFI1,ORD^PSOORFIN S PSOEMERZ=1
"RTN","PSOORFI2",90,0)
 D:$G(POERR("QFLG")) KPRI Q:$G(POERR("QFLG"))  I $G(PSOEMERZ) S ORD=0 D
"RTN","PSOORFI2",91,0)
 .D KPRIZ F  S ORD=$O(^PS(52.41,"AP",PAT,"S",ORD)) Q:'ORD!($G(POERR("QFLG")))  I $P(^PS(52.41,ORD,0),"^",3)'="DC",$P(^(0),"^",3)'="DE" D LOCK1^PSOORFI1,ORD^PSOORFIN
"RTN","PSOORFI2",92,0)
 .Q:$G(POERR("QFLG"))
"RTN","PSOORFI2",93,0)
 .D KPRIZ S ORD=0 F  S ORD=$O(^PS(52.41,"AP",PAT,"R",ORD)) Q:'ORD!($G(POERR("QFLG")))  I $P(^PS(52.41,ORD,0),"^",3)'="DC",$P(^(0),"^",3)'="DE" D LOCK1^PSOORFI1,ORD^PSOORFIN
"RTN","PSOORFI2",94,0)
 D KPRI
"RTN","PSOORFI2",95,0)
 Q
"RTN","PSOORFI2",96,0)
R D KPRI,KPRIZ F  S ORD=$O(^PS(52.41,"AP",PAT,"R",ORD)) Q:'ORD!($G(POERR("QFLG")))  I $P(^PS(52.41,ORD,0),"^",3)'="DC",$P(^(0),"^",3)'="DE" D LOCK1^PSOORFI1,ORD^PSOORFIN S PSOROUTZ=1
"RTN","PSOORFI2",97,0)
 D:$G(POERR("QFLG")) KPRI Q:$G(POERR("QFLG"))  I $G(PSOROUTZ) S ORD=0 D
"RTN","PSOORFI2",98,0)
 .D KPRIZ F  S ORD=$O(^PS(52.41,"AP",PAT,"E",ORD)) Q:'ORD!($G(POERR("QFLG")))  I $P(^PS(52.41,ORD,0),"^",3)'="DC",$P(^(0),"^",3)'="DE" D LOCK1^PSOORFI1,ORD^PSOORFIN
"RTN","PSOORFI2",99,0)
 .Q:$G(POERR("QFLG"))
"RTN","PSOORFI2",100,0)
 .D KPRIZ S ORD=0 F  S ORD=$O(^PS(52.41,"AP",PAT,"S",ORD)) Q:'ORD!($G(POERR("QFLG")))  I $P(^PS(52.41,ORD,0),"^",3)'="DC",$P(^(0),"^",3)'="DE" D LOCK1^PSOORFI1,ORD^PSOORFIN
"RTN","PSOORFI2",101,0)
 D KPRI
"RTN","PSOORFI2",102,0)
 Q
"RTN","PSOORFI2",103,0)
KPRI K PSOSTATZ,PSOROUTZ,PSOEMERZ
"RTN","PSOORFI2",104,0)
 Q
"RTN","PSOORFI2",105,0)
KPRIZ K PSOQUIT,POERR("QFLG")
"RTN","PSOORFI2",106,0)
 Q
"RTN","PSOORFI2",107,0)
INST ;Select Institution
"RTN","PSOORFI2",108,0)
 N PSOCNT
"RTN","PSOORFI2",109,0)
 I '$G(PSOSITE) D ^PSOLSET I '$G(PSOSITE) S PSOIQUIT=1 Q
"RTN","PSOORFI2",110,0)
 N PSIR,PSCT,PSINST K PSOPINST
"RTN","PSOORFI2",111,0)
 S PSCT=0 F PSIR=0:0 S PSIR=$O(^PS(59,PSOSITE,"INI1",PSIR)) Q:'PSIR  I $P($G(^PS(59,PSOSITE,"INI1",PSIR,0)),"^") S PSCT=PSCT+1 I PSCT=1 S PSOPINST=$P($G(^(0)),"^")
"RTN","PSOORFI2",112,0)
 I PSCT=0 W !!,"There are no CPRS Ordering Institutions associated with this Outpatient site!",!,"Use the Site Parameter enter/edit option to enter CPRS Ordering Institutions!",! S PSOIQUIT=1 Q
"RTN","PSOORFI2",113,0)
 I PSCT=1 D INSTNM G INSTA
"RTN","PSOORFI2",114,0)
 W !!!,"There are multiple Institutions associated with this Outpatient Site for",!,"finishing orders entered through CPRS. Select the Institution for which to",!,"finish orders from.  Enter '?' to see all choices.",!
"RTN","PSOORFI2",115,0)
 K PSOPNAME D:$G(PSOPINST)  K DIC S DIC(0)="AEQMZ",DIC="^PS(59,"_PSOSITE_",""INI1""," S:$G(PSOPNAME)'="" DIC("B")=$G(PSOPNAME) D ^DIC K DIC,PSOPNAME I Y<1 W !!,"No Institution selected",! S PSOIQUIT=1 Q
"RTN","PSOORFI2",116,0)
 .K ^UTILITY("DIQ1",$J),DIQ S DA=$G(PSOPINST),DIC=4,DIQ(0)="E",DR=".01" D EN^DIQ1 S PSOPNAME=$G(^UTILITY("DIQ1",$J,4,DA,.01,"E")) K ^UTILITY("DIQ1",$J),DA,DR,DIC,DIQ
"RTN","PSOORFI2",117,0)
 W ! S PSOPINST=$P(Y,"^",2) K Y
"RTN","PSOORFI2",118,0)
 D INSTNM W !,"You have selected "_$G(PSODINST)_"."
"RTN","PSOORFI2",119,0)
 W !,"After completing these orders, you may re-enter this option and select again."
"RTN","PSOORFI2",120,0)
INSTA ;
"RTN","PSOORFI2",121,0)
 S PSOCNT=$$CNT(PSOPINST)
"RTN","PSOORFI2",122,0)
 I '$D(IOINORM)!('$D(IOINHI)) S X="IORVOFF;IORVON;IOINHI;IOINORM" D ENDR^%ZISS
"RTN","PSOORFI2",123,0)
 W !!?7,IORVON_IOINHI,"<There ",$S(PSOCNT=1:"is ",1:"are "),$S(PSOCNT>0:PSOCNT,1:"no")," flagged order",$S(PSOCNT=1:"",1:"s")," for ",PSODINST,">",IOINORM_IORVOFF,!
"RTN","PSOORFI2",124,0)
 K PSODINST
"RTN","PSOORFI2",125,0)
 Q
"RTN","PSOORFI2",126,0)
 ;
"RTN","PSOORFI2",127,0)
CNT(SITE)  ; - Counter for flagged pending orders by Site
"RTN","PSOORFI2",128,0)
 N CNT,ORD
"RTN","PSOORFI2",129,0)
 K ^TMP($J,"PSOFLPO")
"RTN","PSOORFI2",130,0)
 S (CNT,LOGIN,ORD)=0
"RTN","PSOORFI2",131,0)
 F  S LOGIN=$O(^PS(52.41,"AD",LOGIN)) Q:'LOGIN  D
"RTN","PSOORFI2",132,0)
 . F  S ORD=$O(^PS(52.41,"AD",LOGIN,SITE,ORD)) Q:'ORD  D
"RTN","PSOORFI2",133,0)
 . . I $P(^PS(52.41,ORD,0),"^",3)="DC"!($P(^PS(52.41,ORD,0),"^",3)="DE") Q
"RTN","PSOORFI2",134,0)
 . . I $P($G(^PS(52.41,ORD,0)),"^",23) S CNT=CNT+1 S:$P(^(0),"^",2) ^TMP($J,"PSOFLPO",$P(^(0),"^",2))=""
"RTN","PSOORFI2",135,0)
 Q CNT
"RTN","PSOORFI2",136,0)
 ;
"RTN","PSOORFI2",137,0)
INST1 ;
"RTN","PSOORFI2",138,0)
 K PSOPINST N PSIR
"RTN","PSOORFI2",139,0)
 F PSIR=0:0 S PSIR=$O(^PS(59,PSOSITE,"INI1",PSIR)) Q:'PSIR!($G(PSOPINST))  I $P($G(^PS(59,PSOSITE,"INI1",PSIR,0)),"^") S PSOPINST=$P($G(^(0)),"^")
"RTN","PSOORFI2",140,0)
 Q
"RTN","PSOORFI2",141,0)
CLOZ ;checks clozapine status of patient 
"RTN","PSOORFI2",142,0)
 S CLOZPAT=$O(^YSCL(603.01,"C",PSODFN,0))
"RTN","PSOORFI2",143,0)
 S CLOZPAT=$P($G(^YSCL(603.01,+CLOZPAT,0)),"^",3)
"RTN","PSOORFI2",144,0)
 S CLOZPAT=$S(CLOZPAT="M":2,CLOZPAT="B":1,1:0)
"RTN","PSOORFI2",145,0)
 S:'$D(PSONEW("# OF REFILLS")) (PSONEW("# OF REFILLS"),PSONEW("N# REF"))=0
"RTN","PSOORFI2",146,0)
 Q
"RTN","PSOORFI2",147,0)
ELIG I $G(CLOZPAT)=1 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="   Patient Eligible for 14 Day Supply or 7 Day Supply with 1 refill"
"RTN","PSOORFI2",148,0)
 I $G(CLOZPAT)=2 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="   Patient Eligible for 28 Day Supply or 14 Day Supply with 1 refill or 7 Day Supply with 3 refill"
"RTN","PSOORFI2",149,0)
 Q
"RTN","PSOORFI2",150,0)
USER(USER) ;returns .01 of 200
"RTN","PSOORFI2",151,0)
 K DIC,X,Y S DIC="^VA(200,",DIC(0)="M",X="`"_USER D ^DIC S USER1=$S(+Y:$P(Y,"^",2),1:"Unknown") K DIC,X,Y
"RTN","PSOORFI2",152,0)
 Q
"RTN","PSOORFI2",153,0)
INSTNM ;
"RTN","PSOORFI2",154,0)
 K PSOFINDA,PSODINST I $G(DA) S PSOFINDA=$G(DA)
"RTN","PSOORFI2",155,0)
 K PSODNM S DA=$G(PSOPINST) I DA S DIC=4,DIQ(0)="E",DR=".01",DIQ="PSODNM" D EN^DIQ1 S PSODINST=$G(PSODNM(4,DA,.01,"E")) K PSODNM,DIC,DR,DA
"RTN","PSOORFI2",156,0)
 I $G(PSOFINDA) S DA=$G(PSOFINDA) K PSOFINDA
"RTN","PSOORFI2",157,0)
 Q
"RTN","PSOORFI2",158,0)
POST S PSOFINY=$G(Y) D ^PSOBUILD S Y=$G(PSOFINY) K PSOFINY D OERR^PSORX1 I $G(PSOQUIT) Q
"RTN","PSOORFI2",159,0)
 K PSOQFLG F PT="GET","DEAD","INP","CNH","TPB","ADDRESS","COPAY" S RTN=PT_"^PSOPTPST" D @RTN K PSOXFLG Q:$G(POERR("DEAD"))!($G(PSOQFLG))
"RTN","PSOORFI2",160,0)
 I $G(POERR("DEAD")) S POERR("QFLG")=1 Q
"RTN","PSOORFI2",161,0)
 K PSOERR("DEAD") I $G(PSOQFLG) Q
"RTN","PSOORFI2",162,0)
 D ^PSOORUT2,BLD^PSOORUT1,EN^PSOLMUTL
"RTN","PSOORFI2",163,0)
 Q
"RTN","PSOORFI2",164,0)
SIG ;
"RTN","PSOORFI2",165,0)
 S SIG=0,PSOFINFL=1 F  S SIG=$O(^PS(52.41,ORD,"SIG",SIG)) Q:'SIG  D
"RTN","PSOORFI2",166,0)
 .S (MIG,SIG(SIG))=^PS(52.41,ORD,"SIG",SIG,0)
"RTN","PSOORFI2",167,0)
 .F SG=1:1:$L(MIG," ") S:$L(^TMP("PSOPO",$J,IEN,0)_" "_$P(MIG," ",SG))>80 IEN=IEN+1,$P(^TMP("PSOPO",$J,IEN,0)," ",20)=" " S ^TMP("PSOPO",$J,IEN,0)=$G(^TMP("PSOPO",$J,IEN,0))_" "_$P(MIG," ",SG) D
"RTN","PSOORFI2",168,0)
 ..I $E(^TMP("PSOPO",$J,IEN,0),$L(^TMP("PSOPO",$J,IEN,0)))=" " S ^TMP("PSOPO",$J,IEN,0)=$E(^TMP("PSOPO",$J,IEN,0),1,($L(^TMP("PSOPO",$J,IEN,0))-1))
"RTN","PSOORFI2",169,0)
 S:$O(SIG(0)) SIGOK=1 K MIG
"RTN","PSOORFI2",170,0)
 F D=0:0 S D=$O(^PS(52.41,ORD,"INS1",D)) Q:'D  S PSONEW("INS",D)=^PS(52.41,ORD,"INS1",D,0)
"RTN","PSOORFI2",171,0)
 Q
"RTN","PSOORNEW")
0^22^B94116441^B93328649
"RTN","PSOORNEW",1,0)
PSOORNEW ;BIR/SAB - display orders from oerr ;6/19/06 3:53pm
"RTN","PSOORNEW",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**11,23,27,32,55,46,71,90,94,106,131,133,143,237,222,258,206,225,251,386,390,391,372,416,431,313,408**;DEC 1997;Build 100
"RTN","PSOORNEW",3,0)
 ;^PS(50.7 -2223
"RTN","PSOORNEW",4,0)
 ;^PSDRUG -221
"RTN","PSOORNEW",5,0)
 ;^PS(50.606 -2174
"RTN","PSOORNEW",6,0)
 ;^PS(55 -2228
"RTN","PSOORNEW",7,0)
 ;EN1^ORCFLAG -3620
"RTN","PSOORNEW",8,0)
 ;
"RTN","PSOORNEW",9,0)
 ;PSO*237 quit Finish if Today > Issue date + 365
"RTN","PSOORNEW",10,0)
 ;
"RTN","PSOORNEW",11,0)
DSPL I $G(PSODSPL) S VALMBCK="Q" K PSODSPL,PSOANSQD Q
"RTN","PSOORNEW",12,0)
 Q:'$D(PSOLMC)  K ^TMP("PSOPO",$J) S PSOLMC=PSOLMC+1
"RTN","PSOORNEW",13,0)
 I $D(CLOZPAT) S PSONEW("DAYS SUPPLY")=$S($G(PSONEW("DAYS SUPPLY")):PSONEW("DAYS SUPPLY"),1:7) G OI
"RTN","PSOORNEW",14,0)
 S PSONEW("DAYS SUPPLY")=$S($G(PSONEW("DAYS SUPPLY")):PSONEW("DAYS SUPPLY"),+$G(^PS(55,PSODFN,"PS"))&($P(^PS(53,+$G(^PS(55,PSODFN,"PS")),0),"^",3))&('$G(PSONEW("DAYS SUPPLY"))):$P(^PS(53,+$G(^PS(55,PSODFN,"PS")),0),"^",3),1:30)
"RTN","PSOORNEW",15,0)
OI I '$G(PSODRUG("OI")) D
"RTN","PSOORNEW",16,0)
 .S (OI,PSODRUG("OI"))=$P(OR0,"^",8),PSODRUG("OIN")=$P(^PS(50.7,$P(OR0,"^",8),0),"^"),OID=$P(OR0,"^",9)
"RTN","PSOORNEW",17,0)
 .I $P($G(OR0),"^",9) S POERR=1,DREN=$P(OR0,"^",9) D DRG^PSOORDRG K POERR
"RTN","PSOORNEW",18,0)
 I '$D(CLOZPAT) I $G(PSODRUG("DEA"))["A",$G(PSODRUG("DEA"))'["B"!($G(PSODRUG("DEA"))["F") S PSONEW("# OF REFILLS")=0
"RTN","PSOORNEW",19,0)
 I $D(CLOZPAT) S PSONEW("# OF REFILLS")=$S($D(PSONEW("# OF REFILLS")):PSONEW("# OF REFILLS"),$G(CLOZPAT)=2&($P(OR0,"^",11)>2):3,$G(CLOZPAT)&($P(OR0,"^",11)>1):1,1:0)
"RTN","PSOORNEW",20,0)
 S IEN=0 D OBX^PSOORFI1,DIN^PSONFI(PSODRUG("OI"),$S($G(PSODRUG("IEN")):PSODRUG("IEN"),1:""))
"RTN","PSOORNEW",21,0)
 D LMDISP^PSOORFI5(+$G(ORD)) ; Display Flag/Unflag Information
"RTN","PSOORNEW",22,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="*(1) Orderable Item: "_$P(^PS(50.7,PSODRUG("OI"),0),"^")_" "_$P(^PS(50.606,$P(^(0),"^",2),0),"^")_NFIO
"RTN","PSOORNEW",23,0)
 S:NFIO["<DIN>" NFIO=IEN_","_($L(^TMP("PSOPO",$J,IEN,0))-4)
"RTN","PSOORNEW",24,0)
 K LST I $G(PSODRUG("NAME"))]"" D  G PT
"RTN","PSOORNEW",25,0)
 .S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)=" (2)"_$S($D(^PSDRUG("AQ",PSODRUG("IEN"))):"      CMOP ",1:"           ")_"Drug: "_PSODRUG("NAME")_NFID
"RTN","PSOORNEW",26,0)
 .S:NFID["<DIN>" NFID=IEN_","_($L(^TMP("PSOPO",$J,IEN,0))-4)
"RTN","PSOORNEW",27,0)
 .I $P($G(^PSDRUG(PSODRUG("IEN"),0)),"^",10)]"" S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="       Drug Message:" D DRGMSG
"RTN","PSOORNEW",28,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)=" (2)           Drug: No Dispense Drug Selected"
"RTN","PSOORNEW",29,0)
PT D DOSE2^PSOORFI4
"RTN","PSOORNEW",30,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)=" (4)   Pat Instruct:" D:$O(PSONEW("SIG",0)) INST^PSOORFI4
"RTN","PSOORNEW",31,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="  Provider Comments:" S TY=3 D INST^PSOORFI1
"RTN","PSOORNEW",32,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="       Instructions:" S TY=2 D INST^PSOORFI1
"RTN","PSOORNEW",33,0)
 K PSOELSE S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="                SIG:"
"RTN","PSOORNEW",34,0)
 F I=0:0 S I=$O(SIG(I)) Q:'I  S SIG=SIG(I) D
"RTN","PSOORNEW",35,0)
 .F SG=1:1:$L(SIG) S:$L(^TMP("PSOPO",$J,IEN,0)_" "_$P(SIG," ",SG))>80 IEN=IEN+1,$P(^TMP("PSOPO",$J,IEN,0)," ",20)=" " S:$P(SIG," ",SG)'="" ^TMP("PSOPO",$J,IEN,0)=$G(^TMP("PSOPO",$J,IEN,0))_" "_$P(SIG," ",SG)
"RTN","PSOORNEW",36,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)=" (5) Patient Status: "_$P($G(^PS(53,+PSONEW("PATIENT STATUS"),0)),"^")
"RTN","PSOORNEW",37,0)
 K PSOELSE I $G(PSONEW("ISSUE DATE"))']"" S PSOELSE=1 S IEN=IEN+1,(PSOID,Y)=$E($P(OR0,"^",6),1,7) X ^DD("DD") S PSONEW("ISSUE DATE")=Y,^TMP("PSOPO",$J,IEN,0)=" (4)     Issue Date: "_Y
"RTN","PSOORNEW",38,0)
 I '$G(PSOELSE) S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)=" (6)     Issue Date: "_PSONEW("ISSUE DATE")
"RTN","PSOORNEW",39,0)
 K PSOELSE I $G(PSORX("FILL DATE"))']"" S PSOELSE=1 D
"RTN","PSOORNEW",40,0)
 .S (Y,PSORX("FILL DATE"))=$S($E($P(OR0,"^",6),1,7)<DT:DT,1:$E($P(OR0,"^",6),1,7)) X ^DD("DD") S PSONEW("FILL DATE")=Y,^TMP("PSOPO",$J,IEN,0)=^TMP("PSOPO",$J,IEN,0)_"                  (5) Fill Date: "_Y
"RTN","PSOORNEW",41,0)
 I '$G(PSOELSE) S Y=PSORX("FILL DATE") X ^DD("DD") S PSORX("FILL DATE")=Y,^TMP("PSOPO",$J,IEN,0)=^TMP("PSOPO",$J,IEN,0)_"       (7) Fill Date: "_PSORX("FILL DATE")
"RTN","PSOORNEW",42,0)
 I $P(OR0,"^",18) S IEN=IEN+1,Y=$P(OR0,"^",18) X ^DD("DD") S $P(^TMP("PSOPO",$J,IEN,0)," ",39)="Effective Date: "_Y
"RTN","PSOORNEW",43,0)
 I $D(CLOZPAT) D ELIG^PSOORFI2 S:'$D(PSONEW("QTY")) PSONEW("QTY")=0
"RTN","PSOORNEW",44,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)=" (8)    Days Supply: "_PSONEW("DAYS SUPPLY")
"RTN","PSOORNEW",45,0)
 S ^TMP("PSOPO",$J,IEN,0)=^TMP("PSOPO",$J,IEN,0)_"               (9)   QTY"_$S($P($G(^PSDRUG(+$G(PSODRUG("IEN")),660)),"^",8)]"":" ("_$P($G(^PSDRUG(+PSODRUG("IEN"),660)),"^",8)_")",1:" (  )")
"RTN","PSOORNEW",46,0)
 S ^TMP("PSOPO",$J,IEN,0)=^TMP("PSOPO",$J,IEN,0)_": "_$S($G(PSONEW("QTY"))]"":PSONEW("QTY"),1:$P(OR0,"^",10))
"RTN","PSOORNEW",47,0)
 I $P($G(^PSDRUG(+$G(PSODRUG("IEN")),5)),"^")]"" D
"RTN","PSOORNEW",48,0)
 .S $P(RN," ",79)=" ",IEN=IEN+1
"RTN","PSOORNEW",49,0)
 .S ^TMP("PSOPO",$J,IEN,0)=$E(RN,$L("QTY DSP MSG: "_$P(^PSDRUG(PSODRUG("IEN"),5),"^"))+1,79)_"QTY DSP MSG: "_$P(^PSDRUG(PSODRUG("IEN"),5),"^") K RN
"RTN","PSOORNEW",50,0)
 S IEN=IEN+1
"RTN","PSOORNEW",51,0)
 I $P(OR0,"^",24) S ^TMP("PSOPO",$J,IEN,0)="   Provider ordered: days supply "_+$P(OR0,"^",22)_", quantity "_+$P(OR0,"^",10)_" & refills "_+$P(OR0,"^",11)
"RTN","PSOORNEW",52,0)
 E  S ^TMP("PSOPO",$J,IEN,0)="       Provider ordered "_+$P(OR0,"^",11)_" refills"
"RTN","PSOORNEW",53,0)
 D:$D(CLOZPAT) PQTY^PSOORFI4
"RTN","PSOORNEW",54,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="(10)   # of Refills: "_$S($G(PSONEW("# OF REFILLS"))]"":PSONEW("# OF REFILLS"),1:$P(OR0,"^",11))_"               (11)   Routing: "_$S($G(PSONEW("MAIL/WINDOW"))="M":"MAIL",1:"WINDOW")
"RTN","PSOORNEW",55,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="(12)         Clinic: "_PSORX("CLINIC")
"RTN","PSOORNEW",56,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="(13)       Provider: "_PSONEW("PROVIDER NAME")
"RTN","PSOORNEW",57,0)
 D:$P(OR0,"^",24)!((+$G(PSODRUG("DEA"))>1)&(+$G(PSODRUG("DEA"))<6)) PRV^PSOORFI5($G(PSONEW("PROVIDER")),$G(PSODRUG("IEN")),$P(OR0,"^"))
"RTN","PSOORNEW",58,0)
 I $P($G(^VA(200,$S($G(PSONEW("PROVIDER")):PSONEW("PROVIDER"),1:$P(OR0,"^",5)),"PS")),"^",7)&($P($G(^("PS")),"^",8)) D
"RTN","PSOORNEW",59,0)
 .S IEN=IEN+1,PSONEW("COSIGNING PROVIDER")=$S($G(PSONEW("COSIGNING PROVIDER")):PSONEW("COSIGNING PROVIDER"),1:$P(^("PS"),"^",8))
"RTN","PSOORNEW",60,0)
 .S ^TMP("PSOPO",$J,IEN,0)="       Cos-Provider: "_$P(^VA(200,PSONEW("COSIGNING PROVIDER"),0),"^")
"RTN","PSOORNEW",61,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="(14)         Copies: "_$S($G(PSONEW("COPIES")):PSONEW("COPIES"),1:1)
"RTN","PSOORNEW",62,0)
 S PSONEW("REMARKS")=$S($G(PSONEW("REMARKS"))]"":PSONEW("REMARKS"),$P(OR0,"^",17)="C":"Administered in Clinic.",1:"")
"RTN","PSOORNEW",63,0)
 K PSONEW("ADMINCLINIC") S:$P(OR0,"^",17)="C" PSONEW("ADMINCLINIC")=1
"RTN","PSOORNEW",64,0)
 S IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="(15)        Remarks:"
"RTN","PSOORNEW",65,0)
 I $G(PSONEW("REMARKS"))]"" D
"RTN","PSOORNEW",66,0)
 .F SG=1:1:$L(PSONEW("REMARKS")) S:$L(^TMP("PSOPO",$J,IEN,0)_" "_$P(PSONEW("REMARKS")," ",SG))>80 IEN=IEN+1,$P(^TMP("PSOPO",$J,IEN,0)," ",20)=" " D
"RTN","PSOORNEW",67,0)
 ..S:$P(PSONEW("REMARKS")," ",SG)'="" ^TMP("PSOPO",$J,IEN,0)=$G(^TMP("PSOPO",$J,IEN,0))_" "_$P(PSONEW("REMARKS")," ",SG)
"RTN","PSOORNEW",68,0)
 I $G(PSOSIGFL)!(PSODRUG("OI")'=$P(OR0,"^",8)) S PSONEW("CLERK CODE")=DUZ,PSORX("CLERK CODE")=$P(^VA(200,DUZ,0),"^"),VALMSG="This change will create a new prescription!"
"RTN","PSOORNEW",69,0)
 S $P(RN," ",35)=" ",IEN=IEN+1,^TMP("PSOPO",$J,IEN,0)="   Entry By: "_$P(^VA(200,PSONEW("CLERK CODE"),0),"^")_$E(RN,$L($P(^VA(200,PSONEW("CLERK CODE"),0),"^"))+1,35)
"RTN","PSOORNEW",70,0)
 S Y=$P(OR0,"^",12) X ^DD("DD") S ^TMP("PSOPO",$J,IEN,0)=^TMP("PSOPO",$J,IEN,0)_"Entry Date: "_$E($P(OR0,"^",12),4,5)_"/"_$E($P(OR0,"^",12),6,7)_"/"_$E($P(OR0,"^",12),2,3)_" "_$P(Y,"@",2) K RN
"RTN","PSOORNEW",71,0)
 I PSOLMC<2 D ^PSOLMPO1 S VALMBCK="Q",PSOLMC=0
"RTN","PSOORNEW",72,0)
 S:PSOLMC>1 VALMBCK="R"
"RTN","PSOORNEW",73,0)
 Q
"RTN","PSOORNEW",74,0)
ORCHK D PROVCOM^PSOORFI4,ORCHK^PSOORFI4
"RTN","PSOORNEW",75,0)
 Q
"RTN","PSOORNEW",76,0)
EDT D KV S DIR("A",1)="* Indicates which fields will create an new Order",DIR("A")="Select Field to Edit by number",DIR(0)="LO^1:15" D ^DIR Q:$D(DTOUT)!($D(DUOUT))
"RTN","PSOORNEW",77,0)
EDTSEL N LST,FLD,OUT D KV S OUT=0
"RTN","PSOORNEW",78,0)
 I +Y S LST=Y D FULL^VALM1 N PSODOSE M PSODOSE=PSONEW D  G DSPL
"RTN","PSOORNEW",79,0)
 .F FLD=1:1:$L(LST,",") Q:$P(LST,",",FLD)']""!(OUT)  D @(+$P(LST,",",FLD)) D:$P(LST,",",FLD)=8 REF D KV
"RTN","PSOORNEW",80,0)
 E  S VALMBCK="" Q
"RTN","PSOORNEW",81,0)
 Q
"RTN","PSOORNEW",82,0)
ACP ;
"RTN","PSOORNEW",83,0)
 N PSOORNEW,DIR,Y S Y=0,PSOORNEW=1
"RTN","PSOORNEW",84,0)
 I $G(ORD),+$P($G(^PS(52.41,+ORD,0)),"^",23)=1 D  Q:$D(DIRUT)!'Y  D EN1^ORCFLAG(+$P($G(^PS(52.41,ORD,0)),"^")) H 1
"RTN","PSOORNEW",85,0)
 . D FULL^VALM1
"RTN","PSOORNEW",86,0)
 . I '$D(^XUSEC("PSORPH",DUZ)) D  S Y=0 Q
"RTN","PSOORNEW",87,0)
 . . S DIR("A",1)="Order must be unflagged by a pharmacist before it can be finished."
"RTN","PSOORNEW",88,0)
 . . S DIR("A",2)=""
"RTN","PSOORNEW",89,0)
 . . S DIR(0)="E",DIR("A")="Enter RETURN to continue" W !,$C(7) D ^DIR
"RTN","PSOORNEW",90,0)
 . . S VALMBCK="R"
"RTN","PSOORNEW",91,0)
 . D KV
"RTN","PSOORNEW",92,0)
 . S DIR("A",1)="This Order is flagged. In order to finish it"
"RTN","PSOORNEW",93,0)
 . S DIR("A",2)="you must unflag it first."
"RTN","PSOORNEW",94,0)
 . S DIR("A",3)=""
"RTN","PSOORNEW",95,0)
 . S DIR(0)="Y",DIR("A")="Unflag Order",DIR("B")="NO"
"RTN","PSOORNEW",96,0)
 . W ! D ^DIR I $D(DIRUT)!'Y S VALMBCK="Q"
"RTN","PSOORNEW",97,0)
 I $G(ORD),+$P($G(^PS(52.41,+ORD,0)),"^",23)=1 Q
"RTN","PSOORNEW",98,0)
 ;
"RTN","PSOORNEW",99,0)
 I $D(CLOZPAT),+$G(PSONEW("QTY"))=0 S VALMSG="Unable to calculate the quantity, enter a quantity" G DSPL
"RTN","PSOORNEW",100,0)
 S (PSODIR("DFLG"),PSORX("DFLG"),PSODIR("QFLD"))=0,ACP=1 D ORCHK
"RTN","PSOORNEW",101,0)
 G:$G(PSONEW("QFLG")) DSPL
"RTN","PSOORNEW",102,0)
 I $G(PSODIR("DFLG"))!$G(PSORX("DFLG")) Q
"RTN","PSOORNEW",103,0)
 I $G(PSONEW("FLD"))!($G(PSODRUG("NAME"))']"")!('$O(SIG(0))) G DSPL
"RTN","PSOORNEW",104,0)
 I $G(PSODRUG("NAME"))]"",'$G(ORCHK)!($G(ORDRG)'=PSODRUG("NAME")) D  I $G(PSORX("DFLG")) D CLEAN^PSOVER1 G DSPL
"RTN","PSOORNEW",105,0)
 . D POST^PSODRG S:'$G(PSORX("DFLG")) ORCHK=1,ORDRG=PSODRUG("NAME")
"RTN","PSOORNEW",106,0)
 D:'$G(PSORX("DFLG")) DOSCK^PSODOSUT("N") I $G(PSORX("DFLG")) D CLEAN^PSOVER1 G DSPL
"RTN","PSOORNEW",107,0)
 I '$D(PSONEW("RX #")) S PSOFROM="NEW",RTN=$S($P($G(PSOPAR),"^",7):"AUTO^PSONRXN",1:"MANUAL^PSONRXN") D @RTN Q:PSONEW("QFLG")  I '$P($G(PSOPAR),"^",7) S PSOX=PSONEW("RX #") D CHECK^PSONRXN
"RTN","PSOORNEW",108,0)
 D RXNCHK^PSOORNE1 I $G(PSONEW("QFLG")) S PSONEW("DFLG")=1 Q
"RTN","PSOORNEW",109,0)
 I DT>$$FMADD^XLFDT($P(OR0,"^",6),365) D EXPR^PSONEW2 G DSPL
"RTN","PSOORNEW",110,0)
 D STOP^PSONEW2,DISPLAY^PSONEW2,^PSONEWF
"RTN","PSOORNEW",111,0)
 I $G(PSOCPZ("DFLG")) W !!,"No action taken!",! K DIR S DIR(0)="E",DIR("?")="Press Return to continue",DIR("A")="Press Return to continue" D ^DIR,KV K PSOCPZ("DFLG"),DRET,PSOANSQD S VALMBCK="Q" Q
"RTN","PSOORNEW",112,0)
 ;
"RTN","PSOORNEW",113,0)
 K PSOCPZ("DFLG") D KV S DIR(0)="Y",DIR("A")="Are you sure you want to Accept this Order",DIR("B")="NO" D ^DIR I $D(DIRUT) D KV K DRET,PSOANSQ,PSOANSQD S VALMBCK="Q" Q
"RTN","PSOORNEW",114,0)
 D KV I 'Y K PSOANSQ G DSPL
"RTN","PSOORNEW",115,0)
 I $G(PSONEW("MAIL/WINDOW"))["W" D:$P($G(PSOPAR),"^",12)  S BINGCRT="Y",BINGRTE="W",PSORX("MAIL/WINDOW")="WINDOW" K RTN
"RTN","PSOORNEW",116,0)
 .W ! K DIR,DIRUT S DIR(0)="52,35O"
"RTN","PSOORNEW",117,0)
 .S:$G(PSORX("METHOD OF PICK-UP"))]"" DIR("B")=PSORX("METHOD OF PICK-UP") D ^DIR I $D(DIRUT) K DIR,DIRUT Q
"RTN","PSOORNEW",118,0)
 .S (PSONEW("METHOD OF PICK-UP"),PSORX("METHOD OF PICK-UP"))=Y K X,Y
"RTN","PSOORNEW",119,0)
 S PSONEW("POE")=1 D EN^PSON52(.PSONEW) G:$G(PSONEW("DFLG")) ABORT D DCORD^PSONEW2 D:$G(PKI)=89802020 ALERT^PSOPKIV1
"RTN","PSOORNEW",120,0)
 ; - Possible Titration Rx?
"RTN","PSOORNEW",121,0)
 I $G(PSONEW("IRXN")) D MARK^PSOOTMRX(PSONEW("IRXN"),0)
"RTN","PSOORNEW",122,0)
 ;saves drug allergy order chks pso*7*390
"RTN","PSOORNEW",123,0)
 I +$G(^TMP("PSODAOC",$J,1,0)) D
"RTN","PSOORNEW",124,0)
 .I $G(PSORX("DFLG")) K ^TMP("PSODAOC",$J) Q
"RTN","PSOORNEW",125,0)
 .S RXN=PSONEW("IRXN"),PSODAOC="Finished CPRS Rx "_$S($P(^PSRX(RXN,"STA"),"^")=4:"NON-VERIFIED ",1:"")_"Order Acceptance_OP"
"RTN","PSOORNEW",126,0)
 .D DAOC^PSONEW
"RTN","PSOORNEW",127,0)
 D NPSOSD^PSOUTIL(.PSONEW),FULL^VALM1 K PSORX("MAIL/WINDOW")
"RTN","PSOORNEW",128,0)
 D EOJ^PSONEW
"RTN","PSOORNEW",129,0)
ABORT S VALMBCK="Q",DIR(0)="E",DIR("?")="Press Return to continue",DIR("A")="Press Return to Continue" D ^DIR,CLEAN^PSOVER1,KV
"RTN","PSOORNEW",130,0)
 Q
"RTN","PSOORNEW",131,0)
KV K DIRUT,DUOUT,DTOUT,DIR,PSOEDDOS
"RTN","PSOORNEW",132,0)
 Q
"RTN","PSOORNEW",133,0)
REF D REF^PSOORFI4
"RTN","PSOORNEW",134,0)
 Q
"RTN","PSOORNEW",135,0)
1 I $P($G(OR0),"^",24) D  Q
"RTN","PSOORNEW",136,0)
 . W !!,"Digitally Signed Order - Orderable Item cannot be changed",! D PZ
"RTN","PSOORNEW",137,0)
 N PSOBDR,PSOBDRG S PSOBDRG=1 D 1^PSOORNW2 Q  ;oi
"RTN","PSOORNEW",138,0)
 ;
"RTN","PSOORNEW",139,0)
4 D INS^PSOORNW2 Q
"RTN","PSOORNEW",140,0)
 ;
"RTN","PSOORNEW",141,0)
3 I $G(LST)["3,",$P(OR0,"^",24) D  Q 
"RTN","PSOORNEW",142,0)
 . W !!,"Digitally Signed Order - Dose cannot be changed",! D PZ
"RTN","PSOORNEW",143,0)
 N PSOEDDOS S PSOEDDOS=1 D DOSE^PSOORED4(.PSONEW) Q
"RTN","PSOORNEW",144,0)
 ;
"RTN","PSOORNEW",145,0)
6 D 4^PSOORNW2 Q  ;idt
"RTN","PSOORNEW",146,0)
 ;
"RTN","PSOORNEW",147,0)
7 D 5^PSOORNW2 Q  ;fdt
"RTN","PSOORNEW",148,0)
 ;
"RTN","PSOORNEW",149,0)
5 D 3^PSOORNW2 Q  ;pstat
"RTN","PSOORNEW",150,0)
 ;
"RTN","PSOORNEW",151,0)
13 I $P($G(OR0),"^",24) D  Q
"RTN","PSOORNEW",152,0)
 . W !!,"Digitally Signed Order - Provider cannot be changed",! D PZ
"RTN","PSOORNEW",153,0)
 D 12^PSOORNW2 Q  ;doc
"RTN","PSOORNEW",154,0)
 ;
"RTN","PSOORNEW",155,0)
12 D 11^PSOORNW2 Q  ;cli
"RTN","PSOORNEW",156,0)
 ;
"RTN","PSOORNEW",157,0)
2 N PSOCSIG I '$G(PSOBDRG) N PSOBDR,PSOBDRG S PSOBDRG=1,PSOQFLG=0
"RTN","PSOORNEW",158,0)
 N CPRN S CPRN=+$P($G(OR0),"^",24) D 2^PSOORNW1 Q:$G(PSOQFLG)  D EN^PSODIAG  ;drg/ICD
"RTN","PSOORNEW",159,0)
 I $G(PSOCSIG) K PSOCSIG G 3
"RTN","PSOORNEW",160,0)
 Q
"RTN","PSOORNEW",161,0)
 ;
"RTN","PSOORNEW",162,0)
9 D 8^PSOORNW2 Q  ;qty
"RTN","PSOORNEW",163,0)
 ;
"RTN","PSOORNEW",164,0)
8 N CPRN S CPRN=+$P($G(OR0),"^",24) D 7^PSOORNW2 Q  ;ds
"RTN","PSOORNEW",165,0)
 ;
"RTN","PSOORNEW",166,0)
10 I $P($G(OR0),"^",24) D  Q
"RTN","PSOORNEW",167,0)
 . W !!,"Digitally Signed Order - Refills cannot be changed",! D PZ
"RTN","PSOORNEW",168,0)
 D 9^PSOORNW2 Q  ;#rfs
"RTN","PSOORNEW",169,0)
 ;
"RTN","PSOORNEW",170,0)
14 D 13^PSOORNW2 Q  ;cop
"RTN","PSOORNEW",171,0)
 ;
"RTN","PSOORNEW",172,0)
11 D 10^PSOORNW2 Q  ;m/w
"RTN","PSOORNEW",173,0)
 ;
"RTN","PSOORNEW",174,0)
15 D 14^PSOORNW2 Q  ;rem
"RTN","PSOORNEW",175,0)
 ;
"RTN","PSOORNEW",176,0)
DRGMSG ;
"RTN","PSOORNEW",177,0)
 F SG=1:1:$L($P(^PSDRUG(PSODRUG("IEN"),0),"^",10)) S:$L(^TMP("PSOPO",$J,IEN,0)_" "_$P($P(^PSDRUG(PSODRUG("IEN"),0),"^",10)," ",SG))>80 IEN=IEN+1,$P(^TMP("PSOPO",$J,IEN,0)," ",20)=" " D
"RTN","PSOORNEW",178,0)
 .S:$P($P(^PSDRUG(PSODRUG("IEN"),0),"^",10)," ",SG)'="" ^TMP("PSOPO",$J,IEN,0)=$G(^TMP("PSOPO",$J,IEN,0))_" "_$P($P(^PSDRUG(PSODRUG("IEN"),0),"^",10)," ",SG)
"RTN","PSOORNEW",179,0)
 K SG
"RTN","PSOORNEW",180,0)
 Q
"RTN","PSOORNEW",181,0)
 ;
"RTN","PSOORNEW",182,0)
PZ ;
"RTN","PSOORNEW",183,0)
 N DIR S DIR(0)="E",DIR("A")="Press Return to Continue" D ^DIR W !
"RTN","PSOORNEW",184,0)
 Q
"RTN","PSOORRNW")
0^25^B21253948^B20831236
"RTN","PSOORRNW",1,0)
PSOORRNW ;BIR/SAB-finish OP renew orders from OE/RR ; 4/26/11 2:20pm
"RTN","PSOORRNW",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**11,27,51,46,71,94,130,131,146,206,225,384,386,408**;DEC 1997;Build 100
"RTN","PSOORRNW",3,0)
 ;External reference to ^PSDRUG supported by DBIA 221
"RTN","PSOORRNW",4,0)
 ;External reference to ^PS(50.607 supported by DBIA 2221
"RTN","PSOORRNW",5,0)
 ;External reference to ^PS(51.2 supported by DBIA 2226
"RTN","PSOORRNW",6,0)
 ;External references PSOL and PSOUL^PSSLOCK supported by DBIA 2789
"RTN","PSOORRNW",7,0)
 S PSORENXX=$P($G(OR0),"^",21),PSOFROM="NEW" K PRC,PHI
"RTN","PSOORRNW",8,0)
 I $G(PSORENXX) D PSOL^PSSLOCK(PSORENXX) I '$G(PSOMSG) D  K DIR,PSOMSG W ! S DIR("A")="Press Return to continue",DIR(0)="E" D ^DIR K DIR W ! Q
"RTN","PSOORRNW",9,0)
 .I $P($G(PSOMSG),"^",2)'="" W $C(7),!!,$P(PSOMSG,"^",2) Q
"RTN","PSOORRNW",10,0)
 .W $C(7),!!,"Another person is editing Rx "_$P($G(^PSRX(PSORENXX,0)),"^")
"RTN","PSOORRNW",11,0)
 K PSOMSG N OI,VALMCNT K POERR("DFLG") D FULL^VALM1 S (PSORX("DFLG"),PSORENW("DFLG"))=0,(PSORNW("FILL DATE"),PSORENW("FILL DATE"))=DT
"RTN","PSOORRNW",12,0)
 S Y=DT X ^DD("DD") S PSORX("FILL DATE")=Y K Y
"RTN","PSOORRNW",13,0)
 ;
"RTN","PSOORRNW",14,0)
 W !!,"Now Renewing Rx # "_$P(^PSRX($P(OR0,"^",21),0),"^")_"   Drug: "_$P($G(^PSDRUG($P(^PSRX($P(OR0,"^",21),0),"^",6),0)),"^"),! H 2
"RTN","PSOORRNW",15,0)
 I $P($G(^PSRX($P(OR0,"^",21),"OR1")),"^",4) D  D PROCESSX^PSORENW0 D UL Q
"RTN","PSOORRNW",16,0)
 .W !!,"Cannot Renew Rx # "_$P(^PSRX($P(OR0,"^",21),0),"^"),!," Drug: "_$P($G(^PSDRUG($P(^PSRX($P(OR0,"^",21),0),"^",6),0)),"^")_"."
"RTN","PSOORRNW",17,0)
 .W !,"This Rx has already been RENEWED ("_$P(^PSRX($P(^PSRX($P(OR0,"^",21),"OR1"),"^",4),0),"^")_").",!
"RTN","PSOORRNW",18,0)
 .S ACOM="Duplicate Renewal Request. Order rejected by Pharmacy.",PSONOOR="D" D DE^PSOORFI2 K ACOM,POERR("COMM"),POERR("PLACER"),POERR("STAT")
"RTN","PSOORRNW",19,0)
 I '$G(PSOTPBFG) D DSPL^PSOTPCAN(ORD)
"RTN","PSOORRNW",20,0)
 S (PSORX("PROVIDER NAME"),PSORENW("PROVIDER NAME"))=$P(^VA(200,$P(OR0,"^",5),0),"^"),PSORENW("NOO")=$P(OR0,"^",7)
"RTN","PSOORRNW",21,0)
 S PSORENW("PROVIDER")=$P(OR0,"^",5),PSORENW("MAIL/WINDOW")=$S($P(OR0,"^",17)="M":"M",1:"W")
"RTN","PSOORRNW",22,0)
 K PSORENW("ADMINCLINIC") S:$P(OR0,"^",17)="C" PSORENW("ADMINCLINIC")=1
"RTN","PSOORRNW",23,0)
 ;I $O(^PSRX($P(OR0,"^",21),"PRC",0)) F I=0:0 S I=$O(^PSRX($P(OR0,"^",21),"PRC",I)) Q:'I  S PRC(I)=^PSRX($P(OR0,"^",21),"PRC",I,0)
"RTN","PSOORRNW",24,0)
 K II F I=0:0 S I=$O(^PS(52.41,ORD,1,I)) Q:'I  S DOSE=$G(^PS(52.41,ORD,1,I,1)),DOSE1=$G(^(2)) D 
"RTN","PSOORRNW",25,0)
 .S II=$G(II)+1
"RTN","PSOORRNW",26,0)
 .S PSORENW("DOSE",II)=$P(DOSE1,"^"),PSORENW("DOSE ORDERED",II)=$P(DOSE1,"^",2),PSORENW("UNITS",II)=$P(DOSE,"^",9),PSORENW("NOUN",II)=$P(DOSE,"^",5)
"RTN","PSOORRNW",27,0)
 .S:$P(DOSE,"^",9) UNITS=$P(^PS(50.607,$P(DOSE,"^",9),0),"^")
"RTN","PSOORRNW",28,0)
 .S PSORENW("VERB",II)=$P(DOSE,"^",10),PSORENW("ROUTE",II)=$P(DOSE,"^",8)
"RTN","PSOORRNW",29,0)
 .S ROUTE=$S($P(DOSE,"^",8):$$GET1^DIQ(^PS(51.2,$P(DOSE,"^",8),0),"^"),1:"") ;PSO*7*384
"RTN","PSOORRNW",30,0)
 .S PSORENW("SCHEDULE",II)=$P(DOSE,"^"),PSORENW("DURATION",II)=$P(DOSE,"^",2)
"RTN","PSOORRNW",31,0)
 .I $P(DOSE,"^",6)]"" S PSORENW("CONJUNCTION",II)=$S($P(DOSE,"^",6)="S":"T",$P(DOSE,"^",6)="X":"X",1:"A")
"RTN","PSOORRNW",32,0)
 S PSORENW("ENT")=+$G(II) K II,I
"RTN","PSOORRNW",33,0)
 F DR=1:1:PSORENW("ENT") I $G(PSORENW("DURATION",DR))]"" D
"RTN","PSOORRNW",34,0)
 .S DUR1=PSORENW("DURATION",DR)
"RTN","PSOORRNW",35,0)
 .S PSORENW("DURATION",DR)=$S($E(DUR1,1)'?.N:$E(DUR1,2,99)_$E(DUR1,1),1:DUR1)
"RTN","PSOORRNW",36,0)
 D ^PSORENW1,CHECK^PSORENW0 I PSORENW("DFLG") D KLIB^PSORENW1 D PROCESSX^PSORENW0 D UL Q
"RTN","PSOORRNW",37,0)
 D FILDATE^PSORENW0,DRUG^PSORENW0 I PSORENW("DFLG")!$G(PSORX("DFLG")) D KLIB^PSORENW1 D PROCESSX^PSORENW0 D UL Q
"RTN","PSOORRNW",38,0)
 D RXN^PSORENW0 I PSORENW("DFLG") D KLIB^PSORENW1 D PROCESSX^PSORENW0 D UL Q
"RTN","PSOORRNW",39,0)
 D STOP^PSORENW1,INIT^PSORENW3
"RTN","PSOORRNW",40,0)
 I $G(PSOORRNW) D
"RTN","PSOORRNW",41,0)
 .S PSORENW("ISSUE DATE")=$S(PSORENW("FILL DATE")>DT:DT,PSORENW("FILL DATE")<$E($P(OR0,"^",6),1,7):PSORENW("FILL DATE"),1:$E($P(OR0,"^",6),1,7))
"RTN","PSOORRNW",42,0)
 .S PSORENW("# OF REFILLS")=+$P(OR0,"^",11),PSOFDR=1
"RTN","PSOORRNW",43,0)
 .S PSORENW("CLERK CODE")=$P(OR0,"^",4),PSORX("CLERK CODE")=$P(^VA(200,$P(OR0,"^",4),0),"^")
"RTN","PSOORRNW",44,0)
 ;D CHK
"RTN","PSOORRNW",45,0)
 S PSOFXRN=0,PSOFXRNX=1
"RTN","PSOORRNW",46,0)
 S PSORENW("POE")=$S($G(^PS(52.41,ORD,"POE"))=1:1,'$O(^PSRX($P(OR0,"^",21),6,0)):1,1:"")
"RTN","PSOORRNW",47,0)
 S PSORENW("PENDING ORDER")=ORD
"RTN","PSOORRNW",48,0)
 D EN^PSOORNE4(.PSORENW) K PSORENW,PSORX("FILL DATE")
"RTN","PSOORRNW",49,0)
 I '$G(PSOFXRN) D UL
"RTN","PSOORRNW",50,0)
 D KLIB^PSORENW1
"RTN","PSOORRNW",51,0)
 K PSOFXRN,PSOFXRNX
"RTN","PSOORRNW",52,0)
 Q
"RTN","PSOORRNW",53,0)
CHK ;check for valid # of refills
"RTN","PSOORRNW",54,0)
 I $G(PSODRUG("DEA"))]"" D
"RTN","PSOORRNW",55,0)
 .S PSOCS=0 K DIR,DIC,PSOX
"RTN","PSOORRNW",56,0)
 .F DEA=1:1 Q:$E(PSODRUG("DEA"),DEA)=""  I $E(+PSODRUG("DEA"),DEA)>1,$E(+PSODRUG("DEA"),DEA)<6 S $P(PSOCS,"^")=1 S:$E(+PSODRUG("DEA"),DEA)=2 $P(PSOCS,"^",2)=1
"RTN","PSOORRNW",57,0)
 .;PSO*7*206
"RTN","PSOORRNW",58,0)
 .S PSOMAX=$S(PSOCS:5,1:11) I PSODRUG("DEA")["A"&(PSODRUG("DEA")'["B")!(PSODRUG("DEA")["F")!(PSODRUG("DEA")[1)!(PSODRUG("DEA")[2) S PSOMAX=0
"RTN","PSOORRNW",59,0)
 E  S PSOMAX=$P(OR0,"^",11)
"RTN","PSOORRNW",60,0)
 S RXPT=+$P(PSORENW("RX0"),"^",3) I $G(^PS(53,RXPT,0))]"" D
"RTN","PSOORRNW",61,0)
 .S PSORENW("# OF REFILLS")=$S(+$P(OR0,"^",11)>+$P(^PS(53,RXPT,0),"^",4):+$P(^PS(53,RXPT,0),"^",4),1:+$P(OR0,"^",11)),PSOX=+$P(^PS(53,RXPT,0),"^",4)
"RTN","PSOORRNW",62,0)
 .S PSORENW("# OF REFILLS")=$S(PSORENW("# OF REFILLS")>PSOMAX:PSOMAX,1:PSORENW("# OF REFILLS"))
"RTN","PSOORRNW",63,0)
 .S PSOMAX=$S(PSOMAX>+$P(^PS(53,RXPT,0),"^",4):+$P(^PS(53,RXPT,0),"^",4),1:PSOMAX) K RXPT
"RTN","PSOORRNW",64,0)
 E  D
"RTN","PSOORRNW",65,0)
 . I $G(PSOMAX) S PSORENW("# OF REFILLS")=$S(+$P(OR0,"^",11)>PSOMAX:PSOMAX,1:+$P(OR0,"^",11))
"RTN","PSOORRNW",66,0)
 Q
"RTN","PSOORRNW",67,0)
 ;
"RTN","PSOORRNW",68,0)
EDTPEN ;edit front door renews
"RTN","PSOORRNW",69,0)
 N VALMCNT S Y=$P(XQORNOD(0),"=",2) D EDTSEL^PSOORNE4
"RTN","PSOORRNW",70,0)
 Q
"RTN","PSOORRNW",71,0)
UL I $G(PSORENXX) D PSOUL^PSSLOCK(PSORENXX)
"RTN","PSOORRNW",72,0)
 K PSORENXX
"RTN","PSOORRNW",73,0)
 Q
"RTN","PSOR52")
0^24^B35342982^B34622214
"RTN","PSOR52",1,0)
PSOR52 ;IHS/DSD/JCM - Files refill entries in prescription file ;03/10/93
"RTN","PSOR52",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**10,22,27,181,148,201,260,281,358,385,408**;DEC 1997;Build 100
"RTN","PSOR52",3,0)
 ;Reference to ^PSDRUG supported by DBIA 221
"RTN","PSOR52",4,0)
 ;Reference to PSOUL^PSSLOCK supported by DBIA 2789
"RTN","PSOR52",5,0)
 ;Reference SWSTAT^IBBAPI supported by DBIA 4663
"RTN","PSOR52",6,0)
 ;Reference SAVNDC^PSSNDCUT supported by DBIA 4707
"RTN","PSOR52",7,0)
 ; This routine is responsible for the actual
"RTN","PSOR52",8,0)
 ; filling of the refill prescription.
"RTN","PSOR52",9,0)
 ;---------------------------------------------------------   
"RTN","PSOR52",10,0)
EN(PSOX) ;Entry Point
"RTN","PSOR52",11,0)
START ;
"RTN","PSOR52",12,0)
 D:$D(XRTL) T0^%ZOSV ; Start RT monitor
"RTN","PSOR52",13,0)
 D INIT G:PSOR52("QFLG") END
"RTN","PSOR52",14,0)
 D FILE
"RTN","PSOR52",15,0)
 D DIK
"RTN","PSOR52",16,0)
 S:$D(XRT0) XRTN=$T(+0) D:$D(XRT0) T1^%ZOSV ; Stop RT Monitor
"RTN","PSOR52",17,0)
 D FINISH
"RTN","PSOR52",18,0)
END D EOJ
"RTN","PSOR52",19,0)
 Q
"RTN","PSOR52",20,0)
 ;---------------------------------------------------------
"RTN","PSOR52",21,0)
 ;
"RTN","PSOR52",22,0)
INIT ;
"RTN","PSOR52",23,0)
 S PSOR52("QFLG")=0
"RTN","PSOR52",24,0)
 S PSOX("QTY")=$P(PSOX("RX0"),"^",7),PSOX("DAYS SUPPLY")=$P(PSOX("RX0"),"^",8)
"RTN","PSOR52",25,0)
 S PSOX("ADMINCLINIC")=$G(PSORX("ADMINCLINIC"))
"RTN","PSOR52",26,0)
 S:$G(^PSDRUG($P(PSOX("RX0"),"^",6),660))]"" PSOX("COST")=$P(^PSDRUG($P(PSOX("RX0"),"^",6),660),"^",6)
"RTN","PSOR52",27,0)
 D NOW^%DTC S PSOX("LOGIN DATE")=$E(%,1,7)
"RTN","PSOR52",28,0)
 S X1=PSOX("FILL DATE"),X2=PSOX("DAYS SUPPLY")-10\1 D C^%DTC S PSOX1=X
"RTN","PSOR52",29,0)
 S X1=$P(PSOX("RX2"),"^",2)
"RTN","PSOR52",30,0)
 S X2=PSOX("DAYS SUPPLY")*(PSOX("NUMBER")+1)-10\1
"RTN","PSOR52",31,0)
 D C^%DTC S PSOX2=X
"RTN","PSOR52",32,0)
 S PSOX("NEXT POSSIBLE REFILL")=$S(PSOX1>PSOX2:PSOX1,1:PSOX2)
"RTN","PSOR52",33,0)
 K X,PSOX1,PSOX2
"RTN","PSOR52",34,0)
 S (PSOX("LAST DISPENSED DATE"),PSOX("DISPENSED DATE"))=PSOX("FILL DATE")
"RTN","PSOR52",35,0)
 I PSOX("FILL DATE")>$S($G(PSOX("LOGIN DATE")):$E(PSOX("LOGIN DATE"),1,7),1:DT),$P(PSOPAR,"^",6) D
"RTN","PSOR52",36,0)
 .S PSOX("OLD MAIL/WINDOW")=$S($G(PSOX("MAIL/WINDOW"))]"":PSOX("MAIL/WINDOW"),1:"MAIL"),PSOX("MAIL/WINDOW")="M"
"RTN","PSOR52",37,0)
 I $P(PSOX("RX2"),"^",12)]"" S PSOX("GENERIC PROVIDER")=$P(PSOX("RX2"),"^",12)
"RTN","PSOR52",38,0)
 S PSOX("PROVIDER")=$P(PSOX("RX0"),"^",4)
"RTN","PSOR52",39,0)
 S:'$D(PSOX("CLERK CODE")) PSOX("CLERK CODE")=DUZ
"RTN","PSOR52",40,0)
 S PSOX("DAW")=$$GETDAW^PSODAWUT(+PSOX("IRXN")),PSOX("NDC")=$$GETNDC^PSSNDCUT($P(PSOX("RX0"),"^",6))
"RTN","PSOR52",41,0)
INITX Q
"RTN","PSOR52",42,0)
 ;
"RTN","PSOR52",43,0)
FILE ;     
"RTN","PSOR52",44,0)
 ;L +^PSRX(PSOX("IRXN")):0
"RTN","PSOR52",45,0)
 I '$D(^PSRX(PSOX("IRXN"),1,0)) S ^(0)="^52.1DA^1^1"
"RTN","PSOR52",46,0)
 E  S ^PSRX(PSOX("IRXN"),1,0)=$P(^PSRX(PSOX("IRXN"),1,0),"^",1,2)_"^"_PSOX("NUMBER")_"^"_($P(^(0),"^",4)+1)
"RTN","PSOR52",47,0)
 F PSOX1=1:1 S PSOR52=$P($T(DD+PSOX1),";;",2,4) Q:PSOR52=""  K PSOY S PSOY=$P(PSOR52,";;") I $D(@PSOY) S $P(PSOR52(PSOX("IRXN"),1,PSOX("NUMBER"),$P(PSOR52,";;",2)),"^",$P(PSOR52,";;",3))=@PSOY
"RTN","PSOR52",48,0)
 K PSOX1,PSOY
"RTN","PSOR52",49,0)
 S PSOX1="" F  S PSOX1=$O(PSOR52(PSOX("IRXN"),1,PSOX("NUMBER"),PSOX1)) Q:PSOX1=""  S ^PSRX(PSOX("IRXN"),1,PSOX("NUMBER"),PSOX1)=$G(PSOR52(PSOX("IRXN"),1,PSOX("NUMBER"),PSOX1))
"RTN","PSOR52",50,0)
 K PSOX1
"RTN","PSOR52",51,0)
 S:PSOX("STA")=6 $P(^PSRX(PSOX("IRXN"),"STA"),"^")=0
"RTN","PSOR52",52,0)
 S $P(^PSRX(PSOX("IRXN"),3),"^",1,2)=PSOX("LAST DISPENSED DATE")_"^"_PSOX("NEXT POSSIBLE REFILL")
"RTN","PSOR52",53,0)
 S $P(^PSRX(PSOX("IRXN"),3),"^",4)=PSOX("LAST REFILL DATE")
"RTN","PSOR52",54,0)
 I $D(PSOX("METHOD OF PICK-UP")),PSOX("FILL DATE")'>DT S $P(^PSRX(PSOX("IRXN"),"MP"),"^")=PSOX("METHOD OF PICK-UP")
"RTN","PSOR52",55,0)
 D:$$SWSTAT^IBBAPI() GACT^PSOPFSU0(PSOX("IRXN"),PSOX("NUMBER"))
"RTN","PSOR52",56,0)
 ;L -^PSRX(PSOX("IRXN"))
"RTN","PSOR52",57,0)
 Q
"RTN","PSOR52",58,0)
 ;
"RTN","PSOR52",59,0)
DIK ;
"RTN","PSOR52",60,0)
 K DIK,DA
"RTN","PSOR52",61,0)
 S DIK="^PSRX(",DA=PSOX("IRXN") D IX1^DIK K DIK
"RTN","PSOR52",62,0)
 I +$G(^PSRX(DA,"IB")),$P(^PSRX(DA,1,PSOX("NUMBER"),0),"^",2)="W" S ^PSRX("ACP",$P(^PSRX(DA,0),"^",2),$P(^PSRX(DA,1,PSOX("NUMBER"),0),"^"),PSOX("NUMBER"),DA)="" K DA
"RTN","PSOR52",63,0)
 D:$T(EN^PSOHDR)]"" EN^PSOHDR("PREF",PSOX("IRXN"))
"RTN","PSOR52",64,0)
 Q
"RTN","PSOR52",65,0)
 ;
"RTN","PSOR52",66,0)
FINISH ;
"RTN","PSOR52",67,0)
 I $G(PSOX("QS"))="S" D  G FINISHX
"RTN","PSOR52",68,0)
 . S DA=PSOX("IRXN"),RXFL(PSOX("IRXN"))=PSOX("NUMBER")
"RTN","PSOR52",69,0)
 . D SUS^PSORXL K DA
"RTN","PSOR52",70,0)
 ;
"RTN","PSOR52",71,0)
 ; - Previous ePharmacy Refill was Deleted and a new one is being entered
"RTN","PSOR52",72,0)
 I '$$SUBMIT^PSOBPSUT(PSOX("IRXN"),PSOX("NUMBER")),$$STATUS^PSOBPSUT(PSOX("IRXN"),PSOX("NUMBER"))'="" D
"RTN","PSOR52",73,0)
 . D RETRXF^PSOREJU2(PSOX("IRXN"),PSOX("NUMBER"),1)
"RTN","PSOR52",74,0)
 ;
"RTN","PSOR52",75,0)
 I PSOX("FILL DATE")>$S($G(PSOX("LOGIN DATE")):$E(PSOX("LOGIN DATE"),1,7),1:DT),$P(PSOPAR,"^",6) D  G FINISHX
"RTN","PSOR52",76,0)
 .K PSOXRXFL I $D(RXFL(PSOX("IRXN"))) S PSOXRXFL=$G(RXFL(PSOX("IRXN")))
"RTN","PSOR52",77,0)
 .S DA=PSOX("IRXN"),RXFL(PSOX("IRXN"))=PSOX("NUMBER")
"RTN","PSOR52",78,0)
 .D SUS^PSORXL K DA
"RTN","PSOR52",79,0)
 .I $G(PSOXRXFL)'="" S RXFL(PSOX("IRXN"))=$G(PSOXRXFL) K PSOXRXFL
"RTN","PSOR52",80,0)
 ;
"RTN","PSOR52",81,0)
 ; - Calling ECME for claims generation and transmission / REJECT handling
"RTN","PSOR52",82,0)
 N ACTION,PSOERX,PSOERF
"RTN","PSOR52",83,0)
 S PSOERX=PSOX("IRXN"),PSOERF=PSOX("NUMBER")
"RTN","PSOR52",84,0)
 I $$SUBMIT^PSOBPSUT(PSOERX,PSOERF) D  I ACTION="Q"!(ACTION="^") Q
"RTN","PSOR52",85,0)
 . S ACTION="" D ECMESND^PSOBPSU1(PSOERX,PSOERF,"","RF")
"RTN","PSOR52",86,0)
 . ; Quit if there is an unresolved TRICARE/CHAMPVA non-billable reject code, PSO*7*358
"RTN","PSOR52",87,0)
 . I $$PSOET^PSOREJP3(PSOERX,PSOERF) S ACTION="Q" Q
"RTN","PSOR52",88,0)
 . I $$FIND^PSOREJUT(PSOERX,PSOERF) D
"RTN","PSOR52",89,0)
 . . S ACTION=$$HDLG^PSOREJU1(PSOERX,PSOERF,"79,88","OF","IOQ","Q")
"RTN","PSOR52",90,0)
 . I $$STATUS^PSOBPSUT(PSOERX,PSOERF)="E PAYABLE" D
"RTN","PSOR52",91,0)
 . . D SAVNDC^PSSNDCUT(+$$GET1^DIQ(52,PSOERX,6,"I"),$G(PSOSITE),$$GETNDC^PSONDCUT(PSOERX,PSOERF))
"RTN","PSOR52",92,0)
 ;
"RTN","PSOR52",93,0)
 I $G(PSOX("QS"))="Q" D  G FINISHX
"RTN","PSOR52",94,0)
 . I $G(PPL),$L(PPL_PSOX("IRXN")_",")>240 D TRI^PSOBBC D Q^PSORXL K PPL,RXFL
"RTN","PSOR52",95,0)
 . S RXFL(PSOX("IRXN"))=PSOX("NUMBER")
"RTN","PSOR52",96,0)
 . I $G(PPL) S PPL=PPL_PSOX("IRXN")_","
"RTN","PSOR52",97,0)
 . E  S PPL=PSOX("IRXN")_","
"RTN","PSOR52",98,0)
 ;
"RTN","PSOR52",99,0)
 I $G(PSORX("PSOL",1))']"" S PSORX("PSOL",1)=PSOX("IRXN")_",",RXFL(PSOX("IRXN"))=PSOX("NUMBER") G FINISHX
"RTN","PSOR52",100,0)
 F PSOX1=0:0 S PSOX1=$O(PSORX("PSOL",PSOX1)) Q:'PSOX1  S PSOX2=PSOX1
"RTN","PSOR52",101,0)
 I $L(PSORX("PSOL",PSOX2))+$L(PSOX("IRXN"))<220 S PSORX("PSOL",PSOX2)=PSORX("PSOL",PSOX2)_PSOX("IRXN")_","
"RTN","PSOR52",102,0)
 E  S PSORX("PSOL",PSOX2+1)=PSOX("IRXN")_","
"RTN","PSOR52",103,0)
 S RXFL(PSOX("IRXN"))=PSOX("NUMBER")
"RTN","PSOR52",104,0)
 ;
"RTN","PSOR52",105,0)
FINISHX ; 
"RTN","PSOR52",106,0)
 I $G(PSORX("MAIL/WINDOW"))["W" S BINGCRT=1,BINGRTE="W",BBFLG=1 D BBRX^PSORN52C
"RTN","PSOR52",107,0)
 K PSOX1,PSOX2
"RTN","PSOR52",108,0)
 Q
"RTN","PSOR52",109,0)
EOJ ;
"RTN","PSOR52",110,0)
 I $D(PSOX("OLD MAIL/WINDOW")) S PSOX("MAIL/WINDOW")=PSOX("OLD MAIL/WINDOW") K PSOX("OLD MAIL/WINDOW")
"RTN","PSOR52",111,0)
 S DA=$O(^PS(52.41,"ARF",PSOX("IRXN"),0)) I DA D  S DIK="^PS(52.41," D ^DIK
"RTN","PSOR52",112,0)
 .S PSORFKL=DA D PSOUL^PSSLOCK(PSORFKL_"S") K PSORFKL
"RTN","PSOR52",113,0)
 K PSOR52,DA,DIK
"RTN","PSOR52",114,0)
 Q
"RTN","PSOR52",115,0)
 ;
"RTN","PSOR52",116,0)
DD ;rx data nodes
"RTN","PSOR52",117,0)
 ;;PSOX("PROVIDER");;0;;17
"RTN","PSOR52",118,0)
 ;;PSOX("QTY");;0;;4
"RTN","PSOR52",119,0)
 ;;PSOX("DAYS SUPPLY");;0;;10
"RTN","PSOR52",120,0)
 ;;PSOX("MAIL/WINDOW");;0;;2
"RTN","PSOR52",121,0)
 ;;PSOX("REMARKS");;0;;3
"RTN","PSOR52",122,0)
 ;;PSOX("CLERK CODE");;0;;7
"RTN","PSOR52",123,0)
 ;;PSOX("COST");;0;;11
"RTN","PSOR52",124,0)
 ;;PSOSITE;;0;;9
"RTN","PSOR52",125,0)
 ;;PSOX("LOGIN DATE");;0;;8
"RTN","PSOR52",126,0)
 ;;PSOX("FILL DATE");;0;;1
"RTN","PSOR52",127,0)
 ;;PSOX("PHARMACIST");;0;;5
"RTN","PSOR52",128,0)
 ;;PSOX("LOT #");;0;;6
"RTN","PSOR52",129,0)
 ;;PSOX("DISPENSED DATE");;0;;19
"RTN","PSOR52",130,0)
 ;;PSOX("ADMINCLINIC");;0;;20
"RTN","PSOR52",131,0)
 ;;PSOX("NDC");;1;;3
"RTN","PSOR52",132,0)
 ;;PSOX("DAW");;EPH;;1
"RTN","PSOR52",133,0)
 ;;PSOX("MANUFACTURER");;0;;14
"RTN","PSOR52",134,0)
 ;;PSOX("EXPIRATION DATE");;0;;15
"RTN","PSOR52",135,0)
 ;;PSOX("GENERIC PROVIDER");;1;;1
"RTN","PSOR52",136,0)
 ;;PSOX("RELEASED DATE/TIME");;0;;18
"RTN","PSORESK")
0^16^B75970368^B73437781
"RTN","PSORESK",1,0)
PSORESK ;BIR/SAB-return to stock ; 8/12/11 12:34pm
"RTN","PSORESK",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**15,9,27,40,47,55,85,130,185,184,196,148,201,259,261,368,332,374,408**;DEC 1997;Build 100
"RTN","PSORESK",3,0)
 ;
"RTN","PSORESK",4,0)
 ;REF/IA
"RTN","PSORESK",5,0)
 ;^PSDRUG/221
"RTN","PSORESK",6,0)
 ;^PS(59.7/694
"RTN","PSORESK",7,0)
 ;L, UL, PSOL, and PSOUL^PSSLOCK/2789
"RTN","PSORESK",8,0)
 ;^PS(55/2228
"RTN","PSORESK",9,0)
 ;PSDRTS^PSDOPT0/3064
"RTN","PSORESK",10,0)
 ;
"RTN","PSORESK",11,0)
 ;External reference ^XTMP("PSA" supported by DBIA 1036
"RTN","PSORESK",12,0)
 ;
"RTN","PSORESK",13,0)
 ;*259 - if refill was Not deleted, then stop RTS from continuing
"RTN","PSORESK",14,0)
 ;
"RTN","PSORESK",15,0)
AC I '$D(PSOPAR) D ^PSOLSET I '$D(PSOPAR) W !!,"Outpatient Pharmacy Site Parameters are required!" Q
"RTN","PSORESK",16,0)
 S RESK=1 K PSODEF,^UTILITY($J,"PSOPCE") S PSOPCECT=1
"RTN","PSORESK",17,0)
BC K PSOWHERE,PSODEFLG,PSOINVTX,XTYPE W !! S DIR("A")="Enter/Wand PRESCRIPTION number",DIR("?")="^D HP^PSORESK1",DIR(0)="FO" D ^DIR K DIR I $D(DIRUT) K PSODEF G EX
"RTN","PSORESK",18,0)
 I X'["-" D BCI W:'$G(RXP) !,"INVALID Rx" G:'$G(RXP) BC G BC1
"RTN","PSORESK",19,0)
 I X["-" D  I $P(X,"-")'=$G(PSORESST) W !,$C(7),$C(7),"   INVALID STATION NUMBER !!",$C(7),$C(7),! K PSORESST G BC
"RTN","PSORESK",20,0)
 .K PSORESST S PSORESSX=$G(X) K PSORESAR S DA=$P($$SITE^VASITE(),"^") I $G(DA) S DIC=4,DIQ(0)="I",DIQ="PSORESAR",DR="99" D EN^DIQ1 S PSORESST=$G(PSORESAR(4,DA,99,"I")) K PSORESAR,DIQ,DA,DR S X=$G(PSORESSX) K PSORESSX
"RTN","PSORESK",21,0)
 I X["-" S RXP=$P(X,"-",2) I '$D(^PSRX(+$G(RXP),0))!($G(RXP)']"") W !,$C(7),$C(7),$C(7),"   NON-EXISTENT Rx" G BC
"RTN","PSORESK",22,0)
 G:$D(^PSRX(RXP,0)) BC1 W !,$C(7),$C(7),$C(7),"   IMPROPER BARCODE FORMAT" G BC
"RTN","PSORESK",23,0)
BC1 ;
"RTN","PSORESK",24,0)
 S PSORRDFN=+$P($G(^PSRX(RXP,0)),"^",2)
"RTN","PSORESK",25,0)
 D ICN^PSODPT(PSORRDFN)
"RTN","PSORESK",26,0)
 S PSOPLCK=$$L^PSSLOCK(PSORRDFN,0) I '$G(PSOPLCK) D LOCK^PSOORCPY K PSOPLCK G BC
"RTN","PSORESK",27,0)
 K PSOPLCK D PSOL^PSSLOCK(RXP) I '$G(PSOMSG) W !!,$S($P($G(PSOMSG),"^",2)'="":$P($G(PSOMSG),"^",2),1:"Another person is editing this order."),! K PSOMSG D UL^PSSLOCK(+$G(PSORRDFN)) G BC
"RTN","PSORESK",28,0)
 S PSOLOUD=1 D:$P($G(^PS(55,+$P(^PSRX(RXP,0),"^",2),0)),"^",6)'=2 EN^PSOHLUP($P(^PSRX(RXP,0),"^",2)) K PSOLOUD
"RTN","PSORESK",29,0)
 I $S('+$P($G(^PSRX(+RXP,"STA")),"^"):0,$P(^("STA"),"^")=11:0,$P(^("STA"),"^")=12:0,$P(^("STA"),"^")=14:0,$P(^("STA"),"^")=15:0,1:1) D STAT^PSORESK1 D UL G BC
"RTN","PSORESK",30,0)
 S COPAYFLG=1,QDRUG=$P($G(^PSRX(RXP,0)),"^",6),QTY=$P($G(^(0)),"^",7) I $O(^PSRX(RXP,1,0)) G REF
"RTN","PSORESK",31,0)
 S Y="O" I $O(^PSRX(RXP,"P",0)) D  I $D(DUOUT)!($D(DTOUT)) D UL G BC
"RTN","PSORESK",32,0)
 .S DIR(0)="SA^O:ORIGINAL;P:PARTIAL",DIR("B")="ORIGINAL",DIR("A",1)="",DIR("A",2)="There are Partials for this Rx.",DIR("A")="Which are you Returning To Stock? "
"RTN","PSORESK",33,0)
 .S DIR("?")=" Press return for Original. Enter 'P' for Partial" D ^DIR K DIR
"RTN","PSORESK",34,0)
 S XTYPE=$S(Y="O":"O",1:"P") G:Y="P" PAR
"RTN","PSORESK",35,0)
 I $P($G(^PSRX(RXP,2)),"^",15) D  G BC
"RTN","PSORESK",36,0)
 .W !,$C(7),$C(7),"Original fill for Rx # "_$P(^PSRX(RXP,0),"^")_" was Returned to Stock." D UL
"RTN","PSORESK",37,0)
 I '$P($G(^PSRX(RXP,2)),"^",13) W !,$C(7),$C(7),"Rx # "_$P(^PSRX(RXP,0),"^")_" was NOT released !" D UL G BC
"RTN","PSORESK",38,0)
 S PSOLOCRL=$P($G(^PSRX(RXP,2)),"^",13),PSOWHERE=$S($D(^PSRX("AR",+$G(PSOLOCRL),RXP,0)):1,1:0)
"RTN","PSORESK",39,0)
 W ! S DIR("B")="YES",DIR("A",1)="Are you sure you want to RETURN TO STOCK Rx # "_$P(^PSRX(RXP,0),"^")
"RTN","PSORESK",40,0)
 S DIR("A",2)="for "_$P(^DPT($P(^PSRX(RXP,0),"^",2),0),"^")_" ("_$E($P(^(0),"^",9),6,9)_")",DIR("A")="Drug: "_$P(^PSDRUG($P(^PSRX(RXP,0),"^",6),0),"^")
"RTN","PSORESK",41,0)
 I $G(PSOWHERE) S DIR("A",3)=" ",DIR("A",4)="   *** This prescription was filled at the CMOP *** ",DIR("A",5)=" "
"RTN","PSORESK",42,0)
 S DIR(0)="YO" D ^DIR K DIR I Y=0!($D(DIRUT)) D UL G BC
"RTN","PSORESK",43,0)
 ;ORI
"RTN","PSORESK",44,0)
 D  D UL,EX S (RESK,PSOPCECT)=1 G BC
"RTN","PSORESK",45,0)
 .;PSO*7*374 - Prompt user about copay before updating the vault
"RTN","PSORESK",46,0)
 .I +$G(^PSRX(RXP,"IB"))!($P($G(^PSRX(RXP,"PFS")),"^",2)) N PSOPFS S:$P($G(^PSRX(RXP,"PFS")),"^",2) PSOPFS="1^"_$P(^PSRX(RXP,"PFS"),"^",1,2) D CP^PSORESK1 Q:'$G(COPAYFLG)
"RTN","PSORESK",47,0)
 .K PSOINVTX,PSODEFLG I $G(PSOWHERE),$G(^PSDRUG(QDRUG,660.1)) D INVT^PSORXDL I $G(PSODEFLG) W !!?5,"Prescription Not Returned to Stock!",! Q
"RTN","PSORESK",48,0)
 .;VMP OIFO BAY PINES;PSO*7.0*196;KILL PSDS
"RTN","PSORESK",49,0)
 .I $T(PSDRTS^PSDOPT0)]"" D PSDRTS^PSDOPT0(RXP,"O^"_0,$P(^PSRX(RXP,2),"^",9),$P(^PSRX(RXP,0),"^",7)) D MSG K PSDS
"RTN","PSORESK",50,0)
 .Q:$G(RETSK)
"RTN","PSORESK",51,0)
 .;
"RTN","PSORESK",52,0)
 .;Ask comments until answered, do not allow exiting.
"RTN","PSORESK",53,0)
 .F  D  I '$D(DIRUT) Q
"RTN","PSORESK",54,0)
 ..K DIR,DUOUT,DTOUT,DIRUT,X,Y
"RTN","PSORESK",55,0)
 ..S DIR(0)="F0^10:75",DIR("A")="Comments",DIR("?")="Comments are required, 10-75 characters."
"RTN","PSORESK",56,0)
 ..S DIR("B")=$S($D(PSODEF):PSODEF,1:"Per Pharmacy Request")
"RTN","PSORESK",57,0)
 ..D ^DIR I $D(DIRUT) W !?5,"Comments are required, 10-75 characters.",! Q
"RTN","PSORESK",58,0)
 ..S (PSODEF,COM)=$G(Y) K DIR,X,Y
"RTN","PSORESK",59,0)
 ..Q
"RTN","PSORESK",60,0)
 .I $G(^PSDRUG(QDRUG,660.1)) D
"RTN","PSORESK",61,0)
 ..I $G(PSOWHERE),'$G(PSOINVTX) Q
"RTN","PSORESK",62,0)
 ..S ^PSDRUG(QDRUG,660.1)=^PSDRUG(QDRUG,660.1)+QTY
"RTN","PSORESK",63,0)
 .I $G(PSOWHERE) K ^PSRX("AR",+$G(PSOLOCRL),RXP,0)
"RTN","PSORESK",64,0)
 .; - Preserving Original Fill data on the Return To Stock Log multiple 
"RTN","PSORESK",65,0)
 .D LOGRTS^PSORTSUT(RXP,0)
"RTN","PSORESK",66,0)
 .;
"RTN","PSORESK",67,0)
 .D NOW^%DTC S DA=RXP,DIE="^PSRX(",DR="31///@;32.1///"_% D ^DIE K DIE,DR,DA Q:$D(Y)
"RTN","PSORESK",68,0)
 .D ACT^PSORESK1 S DA=$O(^PS(52.5,"B",RXP,0)) I DA S DIK="^PS(52.5," D ^DIK
"RTN","PSORESK",69,0)
 .D REVERSE^PSOBPSU1(RXP,0,"RS",4,,1)
"RTN","PSORESK",70,0)
 .D EN^PSOHDR("PRES",RXP)  ;*332
"RTN","PSORESK",71,0)
 .D EN^PSOHLSN1(RXP,"ZD")
"RTN","PSORESK",72,0)
 .S:'$P($G(^XTMP("PSA",0)),U,2) $P(^(0),U,2)=DT  ;PSO*7*368
"RTN","PSORESK",73,0)
 .S ^XTMP("PSA",PSOSITE,+QDRUG,+DT)=$G(^XTMP("PSA",PSOSITE,+QDRUG,+DT))-QTY  ;PSO*7*368
"RTN","PSORESK",74,0)
 .W !,"Rx # "_$P(^PSRX(RXP,0),"^")_" Returned to Stock.",!
"RTN","PSORESK",75,0)
 .Q
"RTN","PSORESK",76,0)
 ;
"RTN","PSORESK",77,0)
REF I $O(^PSRX(RXP,1,0)),$O(^PSRX(RXP,"P",0)) D  I $D(DTOUT)!($D(DUOUT)) D UL G BC
"RTN","PSORESK",78,0)
 .S DIR(0)="SA^R:REFILL;P:PARTIAL",DIR("B")="REFILL",DIR("A",1)="",DIR("A",2)="There are Refills and Partials for this Rx.",DIR("A")="Which are you Returning To Stock? "
"RTN","PSORESK",79,0)
 .S DIR("?")=" Press return for Refill. Enter 'P' for Partial" D ^DIR K DIR
"RTN","PSORESK",80,0)
 I $O(^PSRX(RXP,1,0)),$O(^PSRX(RXP,"P",0)) S XTYPE=$S(Y="R":1,1:"P")
"RTN","PSORESK",81,0)
PAR S:$G(XTYPE)']"" XTYPE=1 S TYPE=0 F YY=0:0 S YY=$O(^PSRX(RXP,XTYPE,YY)) Q:'YY  S TYPE=YY
"RTN","PSORESK",82,0)
 I 'TYPE D UL,EX S (RESK,PSOPCECT)=1 G BC
"RTN","PSORESK",83,0)
 I $P($G(^PSRX(RXP,XTYPE,TYPE,0)),"^",16) W $C(7),!!,"Last Fill Already Returned to Stock !",! D UL,EX S (RESK,PSOPCECT)=1 G BC
"RTN","PSORESK",84,0)
 I '$P(^PSRX(RXP,XTYPE,TYPE,0),"^",$S(XTYPE:18,1:19)) W !!,$C(7),$C(7),$S(XTYPE:"Refill",1:"PARTIAL")_" #"_TYPE_" was NOT released !",! D UL G BC
"RTN","PSORESK",85,0)
 W ! K DIR,DUOUT,DTOUT
"RTN","PSORESK",86,0)
 K PSOLOCRL,PSOWHERE I $G(XTYPE) S PSOLOCRL=$P($G(^PSRX(RXP,XTYPE,+$G(TYPE),0)),"^",18),PSOWHERE=$S($D(^PSRX("AR",+$G(PSOLOCRL),RXP,+$G(TYPE))):1,1:0)
"RTN","PSORESK",87,0)
 W ! S DIR("B")="YES",DIR("A",1)="Are you sure you want to RETURN TO STOCK Rx # "_$P(^PSRX(RXP,0),"^")_$S(XTYPE:" Refill ",1:" Partial ")_"# "_TYPE,DIR(0)="Y"
"RTN","PSORESK",88,0)
 S DIR("A",2)="for "_$P(^DPT($P(^PSRX(RXP,0),"^",2),0),"^")_" ("_$E($P(^(0),"^",9),6,9)_")",DIR("A")="Drug: "_$P(^PSDRUG($P(^PSRX(RXP,0),"^",6),0),"^")
"RTN","PSORESK",89,0)
 I $G(PSOWHERE) S DIR("A",3)=" ",DIR("A",4)="   *** This prescription was filled at the CMOP *** ",DIR("A",5)=" "
"RTN","PSORESK",90,0)
 D ^DIR K DIR I 'Y!($D(DUOUT))!($D(DTOUT)) D UL G BC
"RTN","PSORESK",91,0)
 ;
"RTN","PSORESK",92,0)
 ;PSO*7*374 - Prompt user about copay before updating the vault
"RTN","PSORESK",93,0)
 I XTYPE I +$G(^PSRX(RXP,"IB"))!($P($G(^PSRX(RXP,1,TYPE,"PFS")),"^",2)) N PSOPFS S:$P($G(^PSRX(RXP,1,TYPE,"PFS")),"^",2) PSOPFS="1^"_$P(^PSRX(RXP,1,TYPE,"PFS"),"^",1,2) D CP^PSORESK1 I '$G(COPAYFLG) D UL G BC
"RTN","PSORESK",94,0)
 K PSOINVTX,PSODEFLG I $G(PSOWHERE),$G(^PSDRUG(QDRUG,660.1)) D INVT^PSORXDL I $G(PSODEFLG) W !!?5,"Prescription Not Returned to Stock!",! D UL G BC
"RTN","PSORESK",95,0)
 I $T(PSDRTS^PSDOPT0)]"" D
"RTN","PSORESK",96,0)
 .;VMP OIFO BAY PINES;PSO*7.0*196;KILL PSDS
"RTN","PSORESK",97,0)
 .I XTYPE D PSDRTS^PSDOPT0(RXP,"R^"_TYPE,$P(^PSRX(RXP,1,TYPE,0),"^",9),$P(^(0),"^",4)) D MSG K PSDS Q
"RTN","PSORESK",98,0)
 .D PSDRTS^PSDOPT0(RXP,"P^"_TYPE,$P(^PSRX(RXP,"P",TYPE,0),"^",9),$P(^(0),"^",4)) D MSG K PSDS
"RTN","PSORESK",99,0)
 I $G(RETSK) D UL,EX G BC
"RTN","PSORESK",100,0)
 ;Ask comments until answered, do not allow exiting.
"RTN","PSORESK",101,0)
 F  D  I '$D(DIRUT) Q
"RTN","PSORESK",102,0)
 .K DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","PSORESK",103,0)
 .S DIR(0)="F0^10:75",DIR("A")="Comments",DIR("?")="Comments are required, 10-75 characters."
"RTN","PSORESK",104,0)
 .S DIR("B")=$S($D(PSODEF):PSODEF,1:"Per Pharmacy Request")
"RTN","PSORESK",105,0)
 .D ^DIR K DIR I $D(DIRUT) W !?5,"Comments are required, 10-75 characters.",! Q
"RTN","PSORESK",106,0)
 .Q
"RTN","PSORESK",107,0)
 S (PSODEF,COM)=$G(Y) K X,Y
"RTN","PSORESK",108,0)
 D NOW^%DTC S QTY=$P(^PSRX(RXP,XTYPE,TYPE,0),"^",4) I $G(^PSDRUG(QDRUG,660.1)) D
"RTN","PSORESK",109,0)
 .I $G(PSOWHERE),'$G(PSOINVTX) Q
"RTN","PSORESK",110,0)
 .S ^PSDRUG(QDRUG,660.1)=^PSDRUG(QDRUG,660.1)+$G(QTY)
"RTN","PSORESK",111,0)
 I $G(PSOWHERE) K ^PSRX("AR",+$G(PSOLOCRL),RXP,$G(TYPE))
"RTN","PSORESK",112,0)
 I XTYPE D REVERSE^PSOBPSU1(RXP,TYPE,"RS",4,,1)
"RTN","PSORESK",113,0)
 ;
"RTN","PSORESK",114,0)
 ; - Preserving Refill/Partial data on the Return To Stock Log multiple 
"RTN","PSORESK",115,0)
 D LOGRTS^PSORTSUT(RXP,$S(XTYPE:TYPE,1:"P"_TYPE))
"RTN","PSORESK",116,0)
 ;
"RTN","PSORESK",117,0)
 ;save release dates in case can't perform the delete of .01     *259
"RTN","PSORESK",118,0)
 S:XTYPE SVRELDT=$P(^PSRX(RXP,XTYPE,TYPE,0),"^",18)
"RTN","PSORESK",119,0)
 S:'XTYPE SVRELDT=$P(^PSRX(RXP,XTYPE,TYPE,0),"^",19)
"RTN","PSORESK",120,0)
 ;
"RTN","PSORESK",121,0)
 ;del rel date 1st and then attempt to del .01 field
"RTN","PSORESK",122,0)
 S DA(1)=RXP,DA=TYPE,DIE="^PSRX("_DA(1)_","_$S(XTYPE:1,1:"""P""")_",",DR=$S(XTYPE:"17////@",1:"8////@")_";.01///@"
"RTN","PSORESK",123,0)
 W ! D ^DIE
"RTN","PSORESK",124,0)
 ;
"RTN","PSORESK",125,0)
 ;if node still exists then fileman could not delete .01         *259
"RTN","PSORESK",126,0)
 I $D(^PSRX(RXP,XTYPE,TYPE,0)) D  G BC
"RTN","PSORESK",127,0)
 . W " - Not Returned!"
"RTN","PSORESK",128,0)
 . S DA(1)=RXP,DA=TYPE,DIE="^PSRX("_DA(1)_","_$S(XTYPE:1,1:"""P""")_","
"RTN","PSORESK",129,0)
 . S DR=$S(XTYPE:"17////",1:"8////")_SVRELDT   ;put back saved rel dte
"RTN","PSORESK",130,0)
 . D ^DIE,UL
"RTN","PSORESK",131,0)
 ;
"RTN","PSORESK",132,0)
 ;fall thru and perform RTS for refills/partials
"RTN","PSORESK",133,0)
 D:XTYPE'="P" NPF D ACT^PSORESK1
"RTN","PSORESK",134,0)
 S:'$P($G(^XTMP("PSA",0)),U,2) $P(^(0),U,2)=DT  ;PSO*7*368
"RTN","PSORESK",135,0)
 S ^XTMP("PSA",PSOSITE,+QDRUG,+DT)=$G(^XTMP("PSA",PSOSITE,+QDRUG,+DT))-QTY  ;PSO*7*368
"RTN","PSORESK",136,0)
 W !!,"Rx # "_$P(^PSRX(RXP,0),"^")_$S(XTYPE:" REFILL",1:" PARTIAL")_" #"_TYPE_" Returned to Stock" S DA=$O(^PS(52.5,"B",RXP,0)) I DA S DIK="^PS(52.5," D ^DIK
"RTN","PSORESK",137,0)
 K PSODISPP S:'XTYPE PSODISPP=1 D EN^PSOHDR("PRES",RXP) D EN^PSOHLSN1(RXP,"ZD") K PSODISPP  ;*332
"RTN","PSORESK",138,0)
 D UL G BC
"RTN","PSORESK",139,0)
EX ;
"RTN","PSORESK",140,0)
 K DA,DR,DIE,X,X1,X2,Y,RXP,REC,DIR,XDT,REC,RDUZ,DIRUT,PSOCPN,PSOCPRX,YY,QDRUG,QTY,TYPE,XTYPE,I,%,DIRUT,COPAYFLG,PSOINVTX,RESK,PSOPCECT,COM,PSOWHERE,PSOLOCRL,PSODEFLG,PSORRDFN,PSOMSG,PSOPLCK,PSDCS,PSDRS,RETSK
"RTN","PSORESK",141,0)
 K DIC,DIK,PSOPFS
"RTN","PSORESK",142,0)
 Q
"RTN","PSORESK",143,0)
MSG I $G(PSDCS),'$G(PSDRS) W !!,"The PSDMGR key is required to return a CONTROLLED SUBSTANCE Rx to stock and",!,"update corresponding vault balances." S RETSK=1
"RTN","PSORESK",144,0)
 Q
"RTN","PSORESK",145,0)
BCI S RXP=0
"RTN","PSORESK",146,0)
RXP S RXP=$O(^PSRX("B",X,RXP)) I $P($G(^PSRX(+RXP,"STA")),"^")=13 G RXP
"RTN","PSORESK",147,0)
 Q
"RTN","PSORESK",148,0)
UL ;
"RTN","PSORESK",149,0)
 I $G(RXP) D PSOUL^PSSLOCK(RXP)
"RTN","PSORESK",150,0)
 D UL^PSSLOCK(+$G(PSORRDFN))
"RTN","PSORESK",151,0)
 Q
"RTN","PSORESK",152,0)
NPF N PSOY I $G(TYPE)-1>0,+$P(^PSRX(RXP,1,TYPE-1,0),"^") D
"RTN","PSORESK",153,0)
 .S X1=+$P(^PSRX(RXP,1,$G(TYPE)-1,0),"^"),X2=$P(^PSRX(RXP,0),"^",8)-10\1
"RTN","PSORESK",154,0)
 .D C^%DTC S PSOY=X,X1=$P(^PSRX(RXP,2),"^",2),X2=TYPE*$P(^PSRX(RXP,0),"^",8)-10\1
"RTN","PSORESK",155,0)
 .D C^%DTC S X=$S(PSOY<X:X,1:PSOY)
"RTN","PSORESK",156,0)
 I $G(TYPE)-1<1 D
"RTN","PSORESK",157,0)
 .S X1=$P(^PSRX(RXP,2),"^",2),X2=$P(^PSRX(RXP,0),"^",8)-10\1
"RTN","PSORESK",158,0)
 .D C^%DTC S:$P(^PSRX(RXP,3),"^",8) X=""
"RTN","PSORESK",159,0)
 I $G(X) S DA=RXP,DIE=52,DR="102///"_X D ^DIE K DIE
"RTN","PSORESK",160,0)
 Q
"RTN","PSORN52A")
0^26^B19159856^B18853729
"RTN","PSORN52A",1,0)
PSORN52A ;IHS/DSD/JCM/SAB/FLS-Break up of PSORN52 ;08/09/93
"RTN","PSORN52A",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**157,148,268,225,306,408**;DEC 1997;Build 100
"RTN","PSORN52A",3,0)
 Q  ; Call from tag
"RTN","PSORN52A",4,0)
 ;
"RTN","PSORN52A",5,0)
IBHLD ;
"RTN","PSORN52A",6,0)
 I $P(PSOIBHLD,"^",2)="" S $P(PSOIBHLD,"^",2)=$S($P(PSOLDIBQ,"^",2)=1:1,$P(PSOLDIBQ,"^",2)=0:0,1:"")
"RTN","PSORN52A",7,0)
 I $P(PSOIBHLD,"^",3)="" S $P(PSOIBHLD,"^",3)=$S($P(PSOLDIBQ,"^",3)=1:1,$P(PSOLDIBQ,"^",3)=0:0,1:"")
"RTN","PSORN52A",8,0)
 I $P(PSOIBHLD,"^",4)="" S $P(PSOIBHLD,"^",4)=$S($P(PSOLDIBQ,"^",4)=1:1,$P(PSOLDIBQ,"^",4)=0:0,1:"")
"RTN","PSORN52A",9,0)
 I $P(PSOIBHLD,"^",5)="" S $P(PSOIBHLD,"^",5)=$S($P(PSOLDIBQ,"^",5)=1:1,$P(PSOLDIBQ,"^",5)=0:0,1:"")
"RTN","PSORN52A",10,0)
 I $P(PSOIBHLD,"^",6)="" S $P(PSOIBHLD,"^",6)=$S($P(PSOLDIBQ,"^",6)=1:1,$P(PSOLDIBQ,"^",6)=0:0,1:"")
"RTN","PSORN52A",11,0)
 I $P(PSOIBHLD,"^",7)="" S $P(PSOIBHLD,"^",7)=$S($P(PSOLDIBQ,"^",7)=1:1,$P(PSOLDIBQ,"^",7)=0:0,1:"")
"RTN","PSORN52A",12,0)
 I $P(PSOIBHLD,"^",8)="" S $P(PSOIBHLD,"^",8)=$S($P(PSOLDIBQ,"^",8)=1:1,$P(PSOLDIBQ,"^",8)=0:0,1:"")
"RTN","PSORN52A",13,0)
 Q
"RTN","PSORN52A",14,0)
 ;
"RTN","PSORN52A",15,0)
FILE ; - Filling ^PSRX and ^PS(55 entries
"RTN","PSORN52A",16,0)
 S PSOX("NRX0")=PSORENW("RX0"),PSOX("NRX2")=PSORENW("RX2"),PSOX("NRX3")=PSORENW("RX3"),$P(PSOX("NRX3"),"^",5)=""
"RTN","PSORN52A",17,0)
 S $P(PSOX("NRX0"),"^")=PSOX("NRX #") S:$G(PSOX("PROVIDER"))]"" $P(PSOX("NRX0"),"^",4)=PSOX("PROVIDER")
"RTN","PSORN52A",18,0)
 I $G(PSORNSPD),$G(PSOX("PATIENT STATUS")),$G(PSOX("PATIENT STATUS"))?.N S $P(PSOX("NRX0"),"^",3)=PSOX("PATIENT STATUS")
"RTN","PSORN52A",19,0)
 S:$G(PSOX("COSIGNING PROVIDER"))]"" $P(PSOX("NRX3"),"^",3)=PSOX("COSIGNING PROVIDER")
"RTN","PSORN52A",20,0)
 S $P(PSOX("NRX0"),"^",5)=PSOX("CLINIC"),$P(PSOX("NRX0"),"^",9)=PSOX("# OF REFILLS")
"RTN","PSORN52A",21,0)
 I $G(PSOX("DAYS SUPPLY")) S $P(PSOX("NRX0"),"^",8)=PSOX("DAYS SUPPLY")
"RTN","PSORN52A",22,0)
 I $G(PSOX("QTY")) S $P(PSOX("NRX0"),"^",7)=PSOX("QTY")
"RTN","PSORN52A",23,0)
 S $P(PSOX("NRX0"),"^",11)=$S(PSOX("FILL DATE")>DT&($P(PSOPAR,"^",6)):"M",$D(PSOX("MAIL/WINDOW")):PSOX("MAIL/WINDOW"),1:$P(PSOX("NRX0"),"^",11))
"RTN","PSORN52A",24,0)
 S $P(PSOX("NRX0"),"^",13)=PSOX("ISSUE DATE"),$P(PSOX("STA"),"^")=PSOX("STATUS"),$P(PSOX("NRX0"),"^",16)=$S($G(PSOX("CLERK CODE"))]"":PSOX("CLERK CODE"),1:DUZ)
"RTN","PSORN52A",25,0)
 S $P(PSOX("NRX0"),"^",15)=$G(PSORENW("ADMINCLINIC"))
"RTN","PSORN52A",26,0)
 S $P(PSOX("NRX0"),"^",17)=$G(PSODRUG("COST"))
"RTN","PSORN52A",27,0)
 S $P(PSOX("NRX2"),"^")=PSOX("LOGIN DATE"),$P(PSOX("NRX2"),"^",2)=PSOX("FILL DATE"),$P(PSOX("NRX2"),"^",3)="",$P(PSOX("NRX2"),"^",4)="",$P(PSOX("NRX2"),"^",5)=PSOX("DISPENSED DATE")
"RTN","PSORN52A",28,0)
 S $P(PSOX("NRX2"),"^",6)=PSOX("STOP DATE"),$P(PSOX("NRX2"),"^",7)=$S($G(PSOX("NDC"))]"":PSOX("NDC"),1:$G(PSODRUG("NDC")))
"RTN","PSORN52A",29,0)
 S $P(PSOX("NRX2"),"^",8)=$S($G(PSOX("MANUFACTURER"))]"":PSOX("MANUFACTURER"),1:$G(PSODRUG("MANUFACTURER")))
"RTN","PSORN52A",30,0)
 S $P(PSOX("NRX2"),"^",9)=+PSOSITE,$P(PSOX("NRX2"),"^",10)=""
"RTN","PSORN52A",31,0)
 S $P(PSOX("NRX2"),"^",11)=$S($G(PSOX("EXPIRATION DATE"))]"":PSOX("EXPIRATION DATE"),1:$G(PSODRUG("EXPIRATION DATE")))
"RTN","PSORN52A",32,0)
 S:$G(PSOX("GENERIC PROVIDER"))]"" $P(PSOX("NRX2"),"^",12)=PSOX("GENERIC PROVIDER")
"RTN","PSORN52A",33,0)
 S $P(PSOX("NRX2"),"^",13)="",$P(PSOX("NRX2"),"^",15)="",$P(PSOX("NRX3"),"^",4)=$P(PSOX("NRX3"),"^")
"RTN","PSORN52A",34,0)
 S $P(PSOX("EPH"),"^")=$S($G(PSOX("DAW"))]"":PSOX("DAW"),1:$G(PSODRUG("DAW")))
"RTN","PSORN52A",35,0)
 ;S PSOX("LAST DISPENSED DATE")=$P(PSOX("NRX3"),"^")
"RTN","PSORN52A",36,0)
 S PSOX("LAST DISPENSED DATE")=PSOX("DISPENSED DATE")
"RTN","PSORN52A",37,0)
 S $P(PSOX("NRX3"),"^")=PSOX("LAST DISPENSED DATE")
"RTN","PSORN52A",38,0)
 S:$G(PSOX("NEXT POSSIBLE REFILL"))]"" $P(PSOX("NRX3"),"^",2)=PSOX("NEXT POSSIBLE REFILL")
"RTN","PSORN52A",39,0)
 S:'$P(^VA(200,$P(PSOX("NRX0"),"^",4),"PS"),"^",7) $P(PSOX("NRX3"),"^",3)=""
"RTN","PSORN52A",40,0)
 S:$G(PSOX("REMARKS"))']"" PSOX("REMARKS")="RENEWED FROM RX # "_$P(PSOX("RX0"),"^")
"RTN","PSORN52A",41,0)
 S $P(PSOX("NRX3"),"^",7)=PSOX("REMARKS"),$P(PSOX("NRX3"),"^",8)=""
"RTN","PSORN52A",42,0)
 ;
"RTN","PSORN52A",43,0)
 ; - File OTHER PATIENT INSTRUCTIONS into ^PSRX
"RTN","PSORN52A",44,0)
 I $G(PSOFXRNX) S PSOFXRN=1
"RTN","PSORN52A",45,0)
 D ^PSORN52C,FILE^PSORN52D
"RTN","PSORN52A",46,0)
 I $G(^PSRX(PSOX("OIRXN"),"INSS"))]"" S ^PSRX(PSOX("IRXN"),"INSS")=^PSRX(PSOX("OIRXN"),"INSS") K PSOX1 G F55
"RTN","PSORN52A",47,0)
 I $G(PSOX("SINS"))]"" S ^PSRX(PSOX("IRXN"),"INSS")=PSOX("SINS")
"RTN","PSORN52A",48,0)
 K PSOX1
"RTN","PSORN52A",49,0)
 ;
"RTN","PSORN52A",50,0)
 ; - File data into ^PS(55)
"RTN","PSORN52A",51,0)
F55 L +^PS(55,PSODFN,"P"):$S(+$G(^DD("DILOCKTM"))>0:+^DD("DILOCKTM"),1:3) S:'$D(^PS(55,PSODFN,"P",0)) ^(0)="^55.03PA^^"
"RTN","PSORN52A",52,0)
 F PSOX1=$P(^PS(55,PSODFN,"P",0),"^",3):1 Q:'$D(^PS(55,PSODFN,"P",PSOX1))
"RTN","PSORN52A",53,0)
 S PSOX("55 IEN")=PSOX1
"RTN","PSORN52A",54,0)
 S ^PS(55,PSODFN,"P",PSOX1,0)=PSOX("IRXN"),$P(^PS(55,PSODFN,"P",0),"^",3,4)=PSOX1_"^"_($P(^PS(55,PSODFN,"P",0),"^",4)+1)
"RTN","PSORN52A",55,0)
 S ^PS(55,PSODFN,"P","A",PSOX("STOP DATE"),PSOX("IRXN"))=""
"RTN","PSORN52A",56,0)
 L -^PS(55,PSODFN,"P")
"RTN","PSORN52A",57,0)
 K PSOX1
"RTN","PSORN52A",58,0)
 ;
"RTN","PSORN52A",59,0)
 ; - Patient Counseling questions
"RTN","PSORN52A",60,0)
 I $G(OR0) D FULL^VALM1,COUN^PSONEW S PSONOOR=""
"RTN","PSORN52A",61,0)
 I $D(^XUSEC("PSORPH",DUZ)) S DA=PSOX("IRXN"),DIE=52,DR="41////"_PSOCOU_";S:'X Y=""@1"";42////"_PSOCOUU_";@1" D ^DIE K DIE,DR
"RTN","PSORN52A",62,0)
 ;
"RTN","PSORN52A",63,0)
 ; - Re-indexing file 52 entry
"RTN","PSORN52A",64,0)
 K DIK,DA S DIK="^PSRX(",DA=PSOX("IRXN") D IX1^DIK K DIK
"RTN","PSORN52A",65,0)
 S DA=PSOX("IRXN") D ORC^PSORN52C
"RTN","PSORN52A",66,0)
 Q
"RTN","PSORTSUT")
0^14^B14963446^n/a
"RTN","PSORTSUT",1,0)
PSORTSUT ;BIRM/MFR - Return To Stock Utilities ;06/07/05
"RTN","PSORTSUT",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408**;DEC 1997;Build 100
"RTN","PSORTSUT",3,0)
 ; 
"RTN","PSORTSUT",4,0)
LOGRTS(RXIEN,RXFILL) ; Log Return to Sock Transaction
"RTN","PSORTSUT",5,0)
 ; Input: RXIEN - PRESCRIPTION file (#52) IEN
"RTN","PSORTSUT",6,0)
 ;        RXFILL - Fill Number ("0":Original,"1"..:Refill #1...,"P1"...: Partial #1...)
"RTN","PSORTSUT",7,0)
 N RTSINFO,PSOMW
"RTN","PSORTSUT",8,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",.01)=$$NOW^XLFDT                     ;.01 RETURN TO STOCK DATE/TIME
"RTN","PSORTSUT",9,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",1)=RXFILL                            ; 1 FILL NUMBER
"RTN","PSORTSUT",10,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",2)=$$RXFLDT^PSOBPSUT(RXIEN,RXFILL)   ; 2 FILL DATE
"RTN","PSORTSUT",11,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",3)=$$RXQTY^PSOBPSUT(RXIEN,RXFILL)    ; 3 QUANTITY
"RTN","PSORTSUT",12,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",4)=$$RXDAYSUP^PSOBPSUT(RXIEN,RXFILL) ; 4 DAYS SUPPLY
"RTN","PSORTSUT",13,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",5)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,17,1.2,.042,0) ; 5 UNIT PRICE OF DRUG
"RTN","PSORTSUT",14,0)
 S PSOMW="W" I RXFILL'["P" S:$$MWC^PSOBPSU2(RXIEN,RXFILL)'="W" PSOMW="M"
"RTN","PSORTSUT",15,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",6)=PSOMW                             ; 6 MAIL/WINDOW
"RTN","PSORTSUT",16,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",7)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,12,3,.03,0) ; 7 REMARKS
"RTN","PSORTSUT",17,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",8)=$$RXRPH^PSOBPSUT(RXIEN,RXFILL)    ; 8 PHARMACIST
"RTN","PSORTSUT",18,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",9)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,24,5,.06,0) ; 9 LOT #
"RTN","PSORTSUT",19,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",10)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,0,6,10,0) ; 10 CLERK CODE
"RTN","PSORTSUT",20,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",11)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,21,7,.08,0) ; 11 LOGIN DATE
"RTN","PSORTSUT",21,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",12)=$$RXSITE^PSOBPSUT(RXIEN,RXFILL)  ; 12 DIVISION
"RTN","PSORTSUT",22,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",13)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,106,9,13,0) ; 13 IB NUMBER
"RTN","PSORTSUT",23,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",14)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,106.6,9.1,0,0) ; 14 COPAY EXCEEDING CAP
"RTN","PSORTSUT",24,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",15)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,25,10.1,7.5,0) ; 15 DISPENSED DATE
"RTN","PSORTSUT",25,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",16)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,27,11,1,1) ; 16 NDC
"RTN","PSORTSUT",26,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",17)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,28,12,2,1) ; 17 MANUFACTURER
"RTN","PSORTSUT",27,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",18)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,29,13,12,1) ; 18 DRUG EXPIRATION DATE
"RTN","PSORTSUT",28,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",19)=$$RXPRV^PSOBPSUT(RXIEN,RXFILL)   ; 19 PROVIDER
"RTN","PSORTSUT",29,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",20)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,14,23,0,0)   ; 20 ADMINISTERED IN CLINC
"RTN","PSORTSUT",30,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",21)=$$RXRLDT^PSOBPSUT(RXIEN,RXFILL)  ; 21 RELEASE DATE/TIME
"RTN","PSORTSUT",31,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",22)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,30,16,7,0) ; 22 GENERIC PROVIDER
"RTN","PSORTSUT",32,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",23)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,32.3,18,9,0) ; 23 BINGO BOARD WAIT TIME
"RTN","PSORTSUT",33,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",24)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,38.1,19,10,0) ; 24 FILLING PERSON
"RTN","PSORTSUT",34,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",25)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,38.2,20,11,0) ; 25 CHECKING PHARMACIST
"RTN","PSORTSUT",35,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",26)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,125,21,0,0) ; 26 PFSS ACCOUNT REFERENCE
"RTN","PSORTSUT",36,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",27)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,126,22,0,0) ; 27 PFSS CHARGE ID
"RTN","PSORTSUT",37,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",28)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,81,81,0,0) ; 28 DAW CODE
"RTN","PSORTSUT",38,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",29)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,83,83,0,0) ; 29 DATE/TIME NDC VALIDATED
"RTN","PSORTSUT",39,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",30)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,84,84,0,0) ; 30 NDC VALIDATED BY
"RTN","PSORTSUT",40,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",31)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,85,85,0,0) ; 31 BILLING ELIGIBILITY INDICATOR
"RTN","PSORTSUT",41,0)
 S RTSINFO(52.07,"+1,"_RXIEN_",",32)=$$VALUE^PSOBPSUT(RXIEN,RXFILL,85,85,0,0) ; 32 EPHARMACY SUSPENSE HOLD DATE
"RTN","PSORTSUT",42,0)
 D UPDATE^DIE("","RTSINFO")
"RTN","PSORTSUT",43,0)
 Q
"RTN","PSORXDL")
0^15^B66390421^B65087564
"RTN","PSORXDL",1,0)
PSORXDL ;BIR/SAB - Deletes one prescription ; 11/15/10 4:24pm
"RTN","PSORXDL",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**4,17,9,27,117,131,148,201,291,368,408**;DEC 1997;Build 100
"RTN","PSORXDL",3,0)
 ;External reference to ^PS(55 supported by DBIA 2228
"RTN","PSORXDL",4,0)
 ;External references L, UL, PSOL, and PSOUL^PSSLOCK supported by DBIA 2789
"RTN","PSORXDL",5,0)
 ;External reference to ^PS(59.7 supported by DBIA 694
"RTN","PSORXDL",6,0)
 ;External reference to ^PSDRUG( supported by DBIA 221
"RTN","PSORXDL",7,0)
 I '$D(^XUSEC("PSORPH",DUZ)) W !,$C(7),"Requires Pharmacy Key (PSORPH) !" Q
"RTN","PSORXDL",8,0)
 I '$D(PSOPAR) D ^PSOLSET I '$D(PSOPAR) W $C(7),!!,"SITE PARAMETERS MUST BE DEFINED!",! Q
"RTN","PSORXDL",9,0)
 K DA,PSODEFLG,PSOHLRE,PSOHLDAH,QTY,PSOABCDA,PSOREF
"RTN","PSORXDL",10,0)
 S (PSDEL,PSOXXDEL)=1,PS="DELETE",DIC("S")="I $P($G(^(0)),""^"",2),$P($G(^(""STA"")),""^"")'=13,$G(^(2))"
"RTN","PSORXDL",11,0)
 D A1^PSORXVW K DIC("S") I $G(DA)<1 G KILL
"RTN","PSORXDL",12,0)
 D FULL^VALM1
"RTN","PSORXDL",13,0)
 S RXN=+$G(DA)
"RTN","PSORXDL",14,0)
 S PSORXDFN=+$P($G(^PSRX(RXN,0)),"^",2)
"RTN","PSORXDL",15,0)
 S PSOPLCK=$$L^PSSLOCK(PSORXDFN,0) I '$G(PSOPLCK) D LOCK^PSOORCPY K PSOPLCK G PSORXDL
"RTN","PSORXDL",16,0)
 K PSOPLCK D PSOL^PSSLOCK(RXN) I '$G(PSOMSG) W !,$S($P($G(PSOMSG),"^",2)'="":$P($G(PSOMSG),"^",2),1:"Another person is editing this order."),! K PSOMSG D ULP G PSORXDL
"RTN","PSORXDL",17,0)
 S (REL,PSOGGFL)=0 F PSOGG=0:0 S PSOGG=$O(^PSRX(DA,1,PSOGG)) Q:'PSOGG  S:$D(^PSRX(DA,1,PSOGG,0)) PSOGGFL=PSOGG
"RTN","PSORXDL",18,0)
 S REL=$S($G(PSOGGFL)&($P($G(^PSRX(DA,1,+$G(PSOGGFL),0)),"^",18))&('$P($G(^(0)),"^",16)):1,'$G(PSOGGFL)&($P($G(^PSRX(DA,2)),"^",13))&('$P($G(^(2)),"^",15)):1,1:0)
"RTN","PSORXDL",19,0)
 I REL W !!,$S($G(PSOGGFL):"Refill number "_$G(PSOGGFL),1:"The Original Fill")," has already been released for Rx # "_$P($G(^PSRX(DA,0)),"^")
"RTN","PSORXDL",20,0)
 I REL W !,"Drug: ",$P($G(^PSDRUG(+$P($G(^PSRX(DA,0)),"^",6),0)),"^"),?49,$P($G(^DPT(+$P($G(^PSRX(DA,0)),"^",2),0)),"^")
"RTN","PSORXDL",21,0)
 I REL W ! K DIR S DIR(0)="Y",DIR("A")="Return this fill to stock and delete the prescription",DIR("B")="N" D  D ^DIR K DIR G:$G(Y)=1 PASS W !!?5,"No Action Taken.",!  D ULK,ULP,KILL G PSORXDL
"RTN","PSORXDL",22,0)
 .S DIR("?")=" ",DIR("?",1)="Enter 'Y' to return this last fill to stock and continue with the deleting of",DIR("?",2)="this prescription, enter 'N' to exit."
"RTN","PSORXDL",23,0)
 K DIR S DIR(0)="Y",DIR("A",1)="Are you sure you want to DELETE Rx # "_$P(^PSRX(DA,0),"^"),DIR("A",2)="Drug: "_$P(^PSDRUG($P(^PSRX(DA,0),"^",6),0),"^")
"RTN","PSORXDL",24,0)
 S DIR("A")="for "_$P(^DPT($P(^PSRX(DA,0),"^",2),0),"^")
"RTN","PSORXDL",25,0)
 S DIR("B")="NO" D ^DIR D:$D(DTOUT) ULK,ULP G:$D(DTOUT) KILL I $D(DIRUT)!'Y D ULK,ULP,KILL G PSORXDL
"RTN","PSORXDL",26,0)
PASS N PSORXDAC K PSOXYZF S PSORXDAC=$O(^PS(52.5,"B",DA,0)) I PSORXDAC,$P($G(^PS(52.5,PSORXDAC,0)),"^",7)="L" N PSOXYZ S PSOXYZF=0 W !!,"Please wait, Rx is Loading for CMOP Transmission.." D
"RTN","PSORXDL",27,0)
 .F PSOXYZ=1:1:5 W "." H 1 I $P($G(^PS(52.5,PSORXDAC,0)),"^",7)'="L" S PSOXYZF=1
"RTN","PSORXDL",28,0)
 I $G(PSOXYZF)=0 W !!,"Sorry, still loading for CMOP transmission, try again later.",! D ULK,ULP,KILL K PSOXYZF G PSORXDL
"RTN","PSORXDL",29,0)
 K PSOXYZF
"RTN","PSORXDL",30,0)
 I $G(REL) S PSOHLRE=REL,PSOHLDAH=$G(DA)
"RTN","PSORXDL",31,0)
 I $G(REL) S RXP=DA S PSODEFLG=0 D RESK I $G(PSODEFLG) D ULK,ULP,KILL G PSORXDL
"RTN","PSORXDL",32,0)
 I $G(PSOHLRE) W !!?5,"Deleting prescription..",! S DA=$G(PSOHLDAH),REL=$G(PSOHLRE)
"RTN","PSORXDL",33,0)
 S PSOABCDA=$G(DA) D NOOR^PSOCAN4 I $D(DIRUT) W " NO ACTION TAKEN!",! D ULK,ULP,KILL G PSORXDL
"RTN","PSORXDL",34,0)
 S DA=$G(PSOABCDA) K DIR,PSOABCDA S DIR("A")="Comments",DIR("B")="Per Pharmacy Request",DIR(0)="F^5:100" D ^DIR K DIR I $D(DIRUT) W !!?5,"NO ACTION TAKEN!",! D ULK,ULP G KILL
"RTN","PSORXDL",35,0)
 I $G(PKI1) N INCOM S INCOM=Y D DCV^PSOPKIV1,ULK,ULP G PSORXDL
"RTN","PSORXDL",36,0)
ENQ S PSOIB=$S($D(^PSRX(DA,"IB")):^PSRX(DA,"IB"),1:0) ;Check if copay
"RTN","PSORXDL",37,0)
 S RX=^PSRX(DA,0),RXN=DA
"RTN","PSORXDL",38,0)
 S $P(^PSRX(RXN,"STA"),"^")=13,$P(^PSRX(RXN,"D"),"^")=$G(Y)
"RTN","PSORXDL",39,0)
 S DA=RXN K ^PSRX("ACP",$P(^PSRX(DA,0),"^",2),+$P(^(2),"^",2),0,DA) D ACT
"RTN","PSORXDL",40,0)
 S DA=RXN I $G(^PSRX(DA,"H"))]"" K ^PSRX("AH",+$P(^PSRX(DA,"H"),"^"),DA) S ^PSRX(DA,"H")=""
"RTN","PSORXDL",41,0)
 D EN^PSOHLSN1(DA,"OC","",$P(^PSRX(DA,"D"),"^"),PSONOOR)
"RTN","PSORXDL",42,0)
 S DA=$O(^PS(52.5,"B",RXN,0)) I DA S DIK="^PS(52.5," D ^DIK
"RTN","PSORXDL",43,0)
 S DA=RXN I $D(^PS(52.4,RXN)) S DIK="^PS(52.4," D ^DIK
"RTN","PSORXDL",44,0)
 K PSOABCDA I $G(DA) S PSOABCDA=$G(DA)
"RTN","PSORXDL",45,0)
 I $O(^PS(52.41,"ARF",RXN,0)) S DA=$O(^PS(52.41,"ARF",RXN,0)),DIK="^PS(52.41," D ^DIK K DA,DIK
"RTN","PSORXDL",46,0)
 I $G(PSOABCDA) S DA=$G(PSOABCDA)
"RTN","PSORXDL",47,0)
 I $G(PSOABCDA) S DA=$G(PSOABCDA) K PSOABCDA
"RTN","PSORXDL",48,0)
 Q:+$G(PSORX("INTERVENE"))!($G(PSVFLAG))  I $D(DA),'$G(PSOZVER) D ULK,ULP G PSORXDL
"RTN","PSORXDL",49,0)
 S ^PSDRUG(+$P(RX,"^",6),660.1)=$S($D(^PSDRUG(+$P(RX,"^",6),660.1)):^(660.1),1:0)+$P(RX,"^",7)
"RTN","PSORXDL",50,0)
 S DFN=+$P(RX,"^",2) F I=0:0 S I=$O(^PS(55,DFN,"P",I)) Q:'I  I +^(I,0)=RXN K ^(0) S ^(0)=$P(^PS(55,DFN,"P",0),"^",1,3)_"^"_($P(^(0),"^",4)-1)
"RTN","PSORXDL",51,0)
 F I=0:0 S I=$O(^PS(55,DFN,"P","A",I)) Q:'I  I $D(^(I,RXN)) K ^(RXN)
"RTN","PSORXDL",52,0)
 K STAT,COM,RX,RXN Q:+$G(PSORX("INTERVENE"))!($G(PSVFLAG))  I $G(PSDEL) D ULK,ULP G PSORXDL
"RTN","PSORXDL",53,0)
 ;
"RTN","PSORXDL",54,0)
KILL K PSORXDFN,PSOMSG,PSOPLCK,RXO,RX0,RX2,RESK,PSIN,PSODEF,PSOPCECT,PSDEL,I,II,J,N,PHYS,PS,RFDATE,RFL,RFL1,ST,ST0,%,%Y,D0,DA,DI,DIC,DIE,DIH,DIU,DIV,DR,Z,DIG,X,Y,PSOIB,RX,RXN,PSODEFLG,PSOREF,PSOHLRE,PSOHLDAH,PSOGG,PSODLCOM,COPAYFLG
"RTN","PSORXDL",55,0)
 K DIR,RXP,DIRUT,DUOUT,DTOUT,SIGOK,REL,PSONODF,PSONOOR,PSOGGFL,PSOXYZF,TYPE,XTYPE,QDRUG,QTY,PSOWHERE,PSOLOCRL,PSOCPRX,PSODT,PSODA,PSOINVTX,IFN,PSROF,PSOABCDA,PSOXXDEL,PSOPFS
"RTN","PSORXDL",56,0)
 Q
"RTN","PSORXDL",57,0)
ACT ;adds activity info for deleted rx
"RTN","PSORXDL",58,0)
 S (RXF,PSOREF)=0 F I=0:0 S I=$O(^PSRX(RXN,1,I)) Q:'I  S (RXF,PSOREF)=I S:I>5 RXF=I+1 K ^PSRX("ACP",$P(^PSRX(RXN,0),"^",2),$P(^PSRX(RXN,1,I,0),"^"),I,RXN)
"RTN","PSORXDL",59,0)
 S DA=0 F FDA=0:0 S FDA=$O(^PSRX(RXN,"A",FDA)) Q:'FDA  S DA=FDA
"RTN","PSORXDL",60,0)
 D NOW^%DTC S DA=DA+1,^PSRX(RXN,"A",0)="^52.3DA^"_DA_"^"_DA,^PSRX(RXN,"A",DA,0)=%_"^"_"D"_"^"_DUZ_"^"_RXF_"^"_"RX DELETED on "_$E(DT,4,5)_"-"_$E(DT,6,7)_"-"_$E(DT,2,3)
"RTN","PSORXDL",61,0)
EX W !,"...PRESCRIPTION #"_$P(RX,"^")_" MARKED DELETED!!"
"RTN","PSORXDL",62,0)
 K RXF,I,FDA,DIC,DIE,%,%I,%H S DA=RXN
"RTN","PSORXDL",63,0)
 ; - Sending Refill to ECME for claim REVERSAL (Rx Delete)
"RTN","PSORXDL",64,0)
 D REVERSE^PSOBPSU1(RXN,PSOREF,"DE",5,,1)
"RTN","PSORXDL",65,0)
 Q
"RTN","PSORXDL",66,0)
RESK ;
"RTN","PSORXDL",67,0)
 S RESK=1,PSIN=+$P(^PS(59.7,1,49.99),"^",2) K PSODEF S PSOPCECT=1
"RTN","PSORXDL",68,0)
 S PSOLOUD=1 D:$P($G(^PS(55,+$P(^PSRX(RXP,0),"^",2),0)),"^",6)'=2 EN^PSOHLUP($P(^PSRX(RXP,0),"^",2)) K PSOLOUD
"RTN","PSORXDL",69,0)
 I $S('+$P($G(^PSRX(+RXP,"STA")),"^"):0,$P(^("STA"),"^")=11:0,$P(^("STA"),"^")=12:0,$P(^("STA"),"^")=14:0,$P(^("STA"),"^")=15:0,1:1) D STAT^PSORESK1 S PSODEFLG=1 Q
"RTN","PSORXDL",70,0)
 W !!?5,"Returning Medication to Stock..",!
"RTN","PSORXDL",71,0)
 K DIR,PSODLCOM,COM S DIR(0)="F^10:75",DIR("A")="Comments",DIR("?")="Comments are required, 10-75 characters." W ! D ^DIR K DIR S (COM,PSODLCOM)=Y I Y["^"!($D(DIRUT)) W !!,"No Action Taken!",! S PSODEFLG=1 Q
"RTN","PSORXDL",72,0)
 S QDRUG=+$P($G(^PSRX(RXP,0)),"^",6),QTY=$P($G(^(0)),"^",7) I $O(^PSRX(RXP,1,0)) G REF
"RTN","PSORXDL",73,0)
 S XTYPE="O" I $P($G(^PSRX(RXP,2)),"^",15) Q
"RTN","PSORXDL",74,0)
 I $P($G(^PSRX(RXP,2)),"^",2)<$G(PSIN) Q
"RTN","PSORXDL",75,0)
 K PSOLOCRL,PSOWHERE S PSOLOCRL=$P($G(^PSRX(RXP,2)),"^",13)
"RTN","PSORXDL",76,0)
 Q:'$G(PSOLOCRL)
"RTN","PSORXDL",77,0)
 S PSOWHERE=$S($D(^PSRX("AR",$G(PSOLOCRL),RXP,0)):1,1:0)
"RTN","PSORXDL",78,0)
 I +$G(^PSRX(RXP,"IB"))!($P($G(^PSRX(RXP,"PFS")),"^",2)) S COPAYFLG=1 N PSOPFS S:$P($G(^PSRX(RXP,"PFS")),"^",2) PSOPFS="1^"_$P(^PSRX(RXP,"PFS"),"^",1,2) D CP^PSORESK1 I '$G(COPAYFLG) S PSODEFLG=1 Q
"RTN","PSORXDL",79,0)
 I $G(^PSDRUG(QDRUG,660.1)),$G(PSOWHERE) D INVT W:$G(PSODEFLG) !!?5,"No Action Taken!",! Q:$G(PSODEFLG)  I $G(PSOINVTX) D INVINC
"RTN","PSORXDL",80,0)
 I $G(^PSDRUG(QDRUG,660.1)),'$G(PSOWHERE) D INVINC
"RTN","PSORXDL",81,0)
 I $G(PSOWHERE) K ^PSRX("AR",$G(PSOLOCRL),RXP,0)
"RTN","PSORXDL",82,0)
 ;
"RTN","PSORXDL",83,0)
 ; - Preserving Original Fill data on the Return To Stock Log multiple 
"RTN","PSORXDL",84,0)
 D LOGRTS^PSORTSUT(RXP,0)
"RTN","PSORXDL",85,0)
 ;
"RTN","PSORXDL",86,0)
 D NOW^%DTC K DIE S DA=RXP,DIE="^PSRX(",DR="31///@;32.1///"_% D ^DIE K DIE
"RTN","PSORXDL",87,0)
 ;D EN^PSOHLSN1(RXP,"ZD")
"RTN","PSORXDL",88,0)
 D ACT^PSORESK1
"RTN","PSORXDL",89,0)
 S DA=$O(^PS(52.5,"B",RXP,0)) I DA K DIK S DIK="^PS(52.5," D ^DIK K DIK
"RTN","PSORXDL",90,0)
 D EN^PSOHLSN1(RXP,"ZD")
"RTN","PSORXDL",91,0)
 S:'$P($G(^XTMP("PSA",0)),U,2) $P(^(0),U,2)=DT  ;PSO*7*368
"RTN","PSORXDL",92,0)
 S ^XTMP("PSA",PSOSITE,+QDRUG,+DT)=$G(^XTMP("PSA",PSOSITE,+QDRUG,+DT))-QTY  ;PSO*7*368
"RTN","PSORXDL",93,0)
 W !,"Rx # "_$P($G(^PSRX(RXP,0)),"^")_" Returned to Stock.",!
"RTN","PSORXDL",94,0)
 ; - Sending Rx to ECME for claim REVERSAL (Return to Stock)
"RTN","PSORXDL",95,0)
 D REVERSE^PSOBPSU1(RXP,0,"RS",4,,1)
"RTN","PSORXDL",96,0)
 Q
"RTN","PSORXDL",97,0)
REF ;
"RTN","PSORXDL",98,0)
 K TYPE F PSROF=0:0 S PSROF=$O(^PSRX(RXP,1,PSROF)) Q:'PSROF  S:$P($G(^PSRX(RXP,1,PSROF,0)),"^") TYPE=PSROF
"RTN","PSORXDL",99,0)
 I '$G(TYPE) Q
"RTN","PSORXDL",100,0)
 S XTYPE=1
"RTN","PSORXDL",101,0)
 I $P($G(^PSRX(RXP,1,TYPE,0)),"^",16) Q
"RTN","PSORXDL",102,0)
 I '$P($G(^PSRX(RXP,1,TYPE,0)),"^",18) Q
"RTN","PSORXDL",103,0)
 I '$P($G(^PSRX(RXP,1,TYPE,0)),"^",18),$P($G(^(0)),"^")'<PSIN Q
"RTN","PSORXDL",104,0)
 S PSOLOCRL=$P($G(^PSRX(RXP,1,TYPE,0)),"^",18)
"RTN","PSORXDL",105,0)
 Q:'$G(PSOLOCRL)
"RTN","PSORXDL",106,0)
 S PSOWHERE=$S($D(^PSRX("AR",$G(PSOLOCRL),RXP,TYPE)):1,1:0)
"RTN","PSORXDL",107,0)
 S QTY=$P($G(^PSRX(RXP,1,TYPE,0)),"^",4)
"RTN","PSORXDL",108,0)
 I +$G(^PSRX(RXP,"IB"))!($P($G(^PSRX(RXP,1,TYPE,"PFS")),"^",2)) S COPAYFLG=1 N PSOPFS S:$P($G(^PSRX(RXP,1,TYPE,"PFS")),"^",2) PSOPFS="1^"_$P(^PSRX(RXP,1,TYPE,"PFS"),"^",1,2) D CP^PSORESK1 I '$G(COPAYFLG) S PSODEFLG=1 Q
"RTN","PSORXDL",109,0)
 I $G(^PSDRUG(QDRUG,660.1)),$G(PSOWHERE) D INVT W:$G(PSODEFLG) !!?5,"No Action Taken!",! Q:$G(PSODEFLG)  I $G(PSOINVTX) D INVINC
"RTN","PSORXDL",110,0)
 I $G(^PSDRUG(QDRUG,660.1)),'$G(PSOWHERE) D INVINC
"RTN","PSORXDL",111,0)
 I $G(PSOWHERE) K ^PSRX("AR",$G(PSOLOCRL),RXP,TYPE)
"RTN","PSORXDL",112,0)
 ;
"RTN","PSORXDL",113,0)
 ; - Preserving Refill data on the Return To Stock Log multiple (before it gets deleted)
"RTN","PSORXDL",114,0)
 D LOGRTS^PSORTSUT(RXP,TYPE)
"RTN","PSORXDL",115,0)
 ;
"RTN","PSORXDL",116,0)
 D NOW^%DTC K DIE S DA(1)=RXP,DA=TYPE,DIE="^PSRX("_DA(1)_",1,",DR="17////@;.01///@" W ! D ^DIE K DIE
"RTN","PSORXDL",117,0)
 ;D EN^PSOHLSN1(RXP,"ZD")
"RTN","PSORXDL",118,0)
 D ACT^PSORESK1
"RTN","PSORXDL",119,0)
 S DA=$O(^PS(52.5,"B",RXP,0)) I DA K DIK S DIK="^PS(52.5," D ^DIK K DIK
"RTN","PSORXDL",120,0)
 S:'$P($G(^XTMP("PSA",0)),U,2) $P(^(0),U,2)=DT  ;PSO*7*368
"RTN","PSORXDL",121,0)
 S ^XTMP("PSA",PSOSITE,+QDRUG,+DT)=$G(^XTMP("PSA",PSOSITE,+QDRUG,+DT))-QTY  ;PSO*7*368
"RTN","PSORXDL",122,0)
 D EN^PSOHLSN1(RXP,"ZD") W !,"Rx # "_$P($G(^PSRX(RXP,0)),"^")_" Refill Returned to Stock.",!
"RTN","PSORXDL",123,0)
 ; - Sending Rx refill to ECME for claim REVERSAL (Return to Stock)
"RTN","PSORXDL",124,0)
 D REVERSE^PSOBPSU1(RXP,TYPE,"RS",4,,1)
"RTN","PSORXDL",125,0)
 Q
"RTN","PSORXDL",126,0)
INVT ;
"RTN","PSORXDL",127,0)
 S PSOINVTX=0
"RTN","PSORXDL",128,0)
 K DIR,DIRUT S DIR(0)="Y",DIR("B")="N",DIR("A")="This is a CMOP Rx, do you want to increment the local inventory" D  W ! D ^DIR K DIR S:$D(DIRUT) PSODEFLG=1 Q:$G(PSODEFLG)  I $G(Y)=1 S PSOINVTX=1
"RTN","PSORXDL",129,0)
 .S DIR("?")=" ",DIR("?",1)="Enter 'Y' if you want to increment the local inventory with the Quantity that",DIR("?",2)="has been released at the CMOP"
"RTN","PSORXDL",130,0)
 Q
"RTN","PSORXDL",131,0)
INVINC ;
"RTN","PSORXDL",132,0)
 S ^PSDRUG(QDRUG,660.1)=$S($P($G(^PSDRUG(QDRUG,660.1)),"^"):$P($G(^PSDRUG(QDRUG,660.1)),"^"),1:0)+$G(QTY)
"RTN","PSORXDL",133,0)
 Q
"RTN","PSORXDL",134,0)
 ;
"RTN","PSORXDL",135,0)
ULK ;
"RTN","PSORXDL",136,0)
 I $G(RXN) D PSOUL^PSSLOCK(RXN)
"RTN","PSORXDL",137,0)
 Q
"RTN","PSORXDL",138,0)
ULP ;
"RTN","PSORXDL",139,0)
 D UL^PSSLOCK(+$G(PSORXDFN))
"RTN","PSORXDL",140,0)
 Q
"RTN","PSORXVW1")
0^18^B71719312^B71614057
"RTN","PSORXVW1",1,0)
PSORXVW1 ;BIR/SAB-view prescription con't ; 12/4/07 12:28pm
"RTN","PSORXVW1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**35,47,46,71,99,117,156,193,210,148,258,260,240,281,359,354,367,386,408**;DEC 1997;Build 100
"RTN","PSORXVW1",3,0)
 ;External reference to ^DD(52 supported by DBIA 999
"RTN","PSORXVW1",4,0)
 ;External reference to ^VA(200 supported by DBIA 10060
"RTN","PSORXVW1",5,0)
 ;PSO*210 add call to WORDWRAP api
"RTN","PSORXVW1",6,0)
 ;
"RTN","PSORXVW1",7,0)
 I $P($G(^PSRX(RXN,"OR1")),"^",6) D
"RTN","PSORXVW1",8,0)
 .K DIC,X,Y S DIC="^VA(200,",DIC(0)="N,Z",X=$P(^PSRX(RXN,"OR1"),"^",6) D ^DIC
"RTN","PSORXVW1",9,0)
 .S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="           Filled By: "_$P(Y,"^",2) K DIC,X,Y
"RTN","PSORXVW1",10,0)
 I $P($G(^PSRX(RXN,"OR1")),"^",7) D
"RTN","PSORXVW1",11,0)
 .K DIC,X,Y S DIC="^VA(200,",DIC(0)="N,Z",X=$P(^PSRX(RXN,"OR1"),"^",7) D ^DIC
"RTN","PSORXVW1",12,0)
 .S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="          Checked By: "_$P(Y,"^",2) K DIC,X,Y
"RTN","PSORXVW1",13,0)
 K DIC,X,Y S DIC="^VA(200,",DIC(0)="N,Z",X=$P(RX0,"^",16) D ^DIC
"RTN","PSORXVW1",14,0)
 S $P(RN," ",35)=" ",IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="   Entry By: "_$P(Y,"^",2)_$E(RN,$L($P(Y,"^",2))+1,35)
"RTN","PSORXVW1",15,0)
 S Y=$P(RX2,"^") X ^DD("DD")
"RTN","PSORXVW1",16,0)
 S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_"Entry Date: "_$E($P(RX2,"^"),4,5)_"/"_$E($P(RX2,"^"),6,7)_"/"_$E($P(RX2,"^"),2,3)_" "_$P(Y,"@",2) K RN
"RTN","PSORXVW1",17,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=" " ;,IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0),"=",79)="="
"RTN","PSORXVW1",18,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Original Fill Released: " I $P(RX2,"^",13) S DTT=$P(RX2,"^",13) D DAT S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_DAT K DAT,DTT
"RTN","PSORXVW1",19,0)
 I $P(RX2,"^",15) S DTT=$P(RX2,"^",15) D DAT S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_"(Returned to Stock "_DAT_")" K DAT,DTT
"RTN","PSORXVW1",20,0)
 S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_"      Routing: "_$S($P(RX0,"^",11)="W":"Window",1:"Mail")
"RTN","PSORXVW1",21,0)
 I $G(^PSRX(DA,"H"))]"",$P(^("STA"),"^")=3 D HLD
"RTN","PSORXVW1",22,0)
 D RF,PAR,ACT,COPAY^PSORXVW2,LBL,ECME^PSOORAL1,SPMP^PSOORAL1,^PSORXVW2:$O(^PSRX(DA,4,0))
"RTN","PSORXVW1",23,0)
 Q
"RTN","PSORXVW1",24,0)
ACT ;activity log
"RTN","PSORXVW1",25,0)
 N CNT
"RTN","PSORXVW1",26,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=" ",IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Activity Log:"
"RTN","PSORXVW1",27,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="#   Date        Reason         Rx Ref         Initiator Of Activity",IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0),"=",79)="="
"RTN","PSORXVW1",28,0)
 I '$O(^PSRX(DA,"A",0)) S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="There's NO Activity to report" Q
"RTN","PSORXVW1",29,0)
 S CNT=0
"RTN","PSORXVW1",30,0)
 F N=0:0 S N=$O(^PSRX(DA,"A",N)) Q:'N  S P1=^(N,0),DTT=P1\1 D DAT D
"RTN","PSORXVW1",31,0)
 .I $P(P1,"^",2)="M" Q
"RTN","PSORXVW1",32,0)
 .S IEN=IEN+1,CNT=CNT+1,^TMP("PSOAL",$J,IEN,0)=CNT_"   "_DAT_"    ",$P(RN," ",15)=" ",REA=$P(P1,"^",2)
"RTN","PSORXVW1",33,0)
 .S REA=$F("HUCELPRWSIVDABXGKNM",REA)-1
"RTN","PSORXVW1",34,0)
 .I REA D
"RTN","PSORXVW1",35,0)
 ..S STA=$P("HOLD^UNHOLD^DISCONTINUED^EDIT^RENEWED^PARTIAL^REINSTATE^REPRINT^SUSPENSE^RETURNED^INTERVENTION^DELETED^DRUG INTERACTION^PROCESSED^X-INTERFACE^PATIENT INSTR.^PKI/DEA^DISP COMPLETED^ECME^","^",REA)
"RTN","PSORXVW1",36,0)
 ..S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_STA_$E(RN,$L(STA)+1,15)
"RTN","PSORXVW1",37,0)
 .E  S $P(STA," ",15)=" ",^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_STA
"RTN","PSORXVW1",38,0)
 .K STA,RN S $P(RN," ",15)=" ",RF=+$P(P1,"^",4)
"RTN","PSORXVW1",39,0)
 .S RFT=$S(RF>0&(RF<6):"REFILL "_RF,RF=6:"PARTIAL",RF>6:"REFILL "_(RF-1),1:"ORIGINAL")
"RTN","PSORXVW1",40,0)
 .K DIC,X,Y S DIC="^VA(200,",DIC(0)="N,Z",X=$P(P1,"^",3) D ^DIC
"RTN","PSORXVW1",41,0)
 .S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_RFT_$E(RN,$L(RFT)+1,15)_$S(+Y:$P(Y,"^",2),1:$P(P1,"^",3))
"RTN","PSORXVW1",42,0)
 .;S:$P(P1,"^",5)]"" IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Comments: "_$P(P1,"^",5)
"RTN","PSORXVW1",43,0)
 .I $P(P1,"^",5)]"" N PSOACBRK,PSOACBRV D
"RTN","PSORXVW1",44,0)
 ..S PSOACBRV=$P(P1,"^",5)
"RTN","PSORXVW1",45,0)
 ..;PSO*7*240 Use fileman to format
"RTN","PSORXVW1",46,0)
 ..K ^UTILITY($J,"W") S X="Comments: "_PSOACBRV,(DIWR,DIWL)=1,DIWF="C80" D ^DIWP F I=1:1:^UTILITY($J,"W",1) S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=$G(^UTILITY($J,"W",1,I,0))
"RTN","PSORXVW1",47,0)
 .I $G(^PSRX(DA,"A",N,1))]"" S IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0)," ",5)=$P(^PSRX(DA,"A",N,1),"^") I $P(^PSRX(DA,"A",N,1),"^",2)]"" S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_":"_$P(^PSRX(DA,"A",N,1),"^",2)
"RTN","PSORXVW1",48,0)
 .I $O(^PSRX(DA,"A",N,2,0)) F I=0:0 S I=$O(^PSRX(RXN,"A",N,2,I)) Q:'I  S MIG=^PSRX(RXN,"A",N,2,I,0) D
"RTN","PSORXVW1",49,0)
 ..S:MIG["Mail Tracking Info.: " IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0)," ",9)=" "
"RTN","PSORXVW1",50,0)
 ..F SG=1:1:$L(MIG) S:$L(^TMP("PSOAL",$J,IEN,0)_" "_$P(MIG," ",SG))>80 IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0)," ",9)=" " S:$P(MIG," ",SG)'="" ^TMP("PSOAL",$J,IEN,0)=$G(^TMP("PSOAL",$J,IEN,0))_" "_$P(MIG," ",SG)
"RTN","PSORXVW1",51,0)
 K MIG,SG,I,^UTILITY($J,"W"),DIWF,DIWL,DIWR
"RTN","PSORXVW1",52,0)
 Q
"RTN","PSORXVW1",53,0)
LBL ;label log
"RTN","PSORXVW1",54,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=" ",IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Label Log:"
"RTN","PSORXVW1",55,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="#   Date        Rx Ref                    Printed By",IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0),"=",79)="="
"RTN","PSORXVW1",56,0)
 I '$O(^PSRX(DA,"L",0)) S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="There are NO Labels printed." Q
"RTN","PSORXVW1",57,0)
 F L1=0:0 S L1=$O(^PSRX(DA,"L",L1)) Q:'L1  S LBL=^PSRX(DA,"L",L1,0),DTT=$P(^(0),"^") D DAT D
"RTN","PSORXVW1",58,0)
 . S $P(RN," ",26)=" ",IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=L1_"   "_DAT_"    ",RFT=$S($P(LBL,"^",2):"REFILL "_$P(LBL,"^",2),1:"ORIGINAL"),RFT=RFT_$E(RN,$L(RFT)+1,26)
"RTN","PSORXVW1",59,0)
 . K DIC,X,Y S DIC="^VA(200,",DIC(0)="N,Z",X=$P(LBL,"^",4) D ^DIC
"RTN","PSORXVW1",60,0)
 . S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_RFT_$P(Y,"^",2),IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Comments: "_$P(LBL,"^",3)
"RTN","PSORXVW1",61,0)
 . N FDAMGDOC S FDAMGDOC=$P($G(^PSRX(DA,"L",L1,"FDA")),"^")
"RTN","PSORXVW1",62,0)
 . I FDAMGDOC'="" D
"RTN","PSORXVW1",63,0)
 . . S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="FDA Med Guide: "_$E(FDAMGDOC,1,61)
"RTN","PSORXVW1",64,0)
 . . I $L(FDAMGDOC)>61 D
"RTN","PSORXVW1",65,0)
 . . . F  Q:$E(FDAMGDOC,62,999)=""  D
"RTN","PSORXVW1",66,0)
 . . . . S FDAMGDOC=$E(FDAMGDOC,62,999),IEN=IEN+1
"RTN","PSORXVW1",67,0)
 . . . . S ^TMP("PSOAL",$J,IEN,0)=$E(FDAMGDOC,1,61)
"RTN","PSORXVW1",68,0)
 K DIC,X,Y Q
"RTN","PSORXVW1",69,0)
 ;
"RTN","PSORXVW1",70,0)
RF ;refill log
"RTN","PSORXVW1",71,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=" ",IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Refill Log:"
"RTN","PSORXVW1",72,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="#  Log Date   Refill Date  Qty               Routing  Lot #       Pharmacist",IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0),"=",79)="="
"RTN","PSORXVW1",73,0)
 S (RF,PL)=0 F RF=0:0 S RF=$O(^PSRX(DA,1,RF)) Q:'RF  S PL=PL+1
"RTN","PSORXVW1",74,0)
 I 'PL S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="There are NO Refills For this  Prescription" Q
"RTN","PSORXVW1",75,0)
 F N=0:0 S N=$O(^PSRX(DA,1,N)) Q:'N  S P1=^(N,0) D
"RTN","PSORXVW1",76,0)
 .S DTT=$P(P1,"^",8)\1 D DAT S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=N_"   "_DAT_"   "
"RTN","PSORXVW1",77,0)
 .S DTT=$P(P1,"^"),$P(RN," ",10)=" " D DAT
"RTN","PSORXVW1",78,0)
 .S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_DAT_"     "_$P(P1,"^",4)_$E("               ",$L($P(P1,"^",4))+1,15)_"  "_$S($P(P1,"^",2)="M":"Mail",1:"Window")_" "_$P(P1,"^",6)_$E(RN,$L($P(P1,"^",6))+1,12)
"RTN","PSORXVW1",79,0)
 .K DIC,X,Y S DIC="^VA(200,",DIC(0)="N,Z",X=+$P(P1,"^",5) D ^DIC
"RTN","PSORXVW1",80,0)
 .S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_$E($S(+Y:$P(Y,"^",2),1:""),1,16) K DIC,X,Y
"RTN","PSORXVW1",81,0)
 .S PSDIV=$S($D(^PS(59,+$P(P1,"^",9),0)):$P(^(0),"^",6),1:"Unknown"),IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Division: "_PSDIV_$E("        ",$L(PSDIV)+1,8)_"  "
"RTN","PSORXVW1",82,0)
 .S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_"Dispensed: "_$S($P(P1,"^",19):$E($P(P1,"^",19),4,5)_"/"_$E($P(P1,"^",19),6,7)_"/"_$E($P(P1,"^",19),2,3),1:"")_"  "
"RTN","PSORXVW1",83,0)
 .S RTS=$S($P(P1,"^",16):" Returned to Stock: "_$E($P(P1,"^",16),4,5)_"/"_$E($P(P1,"^",16),6,7)_"/"_$E($P(P1,"^",16),2,3),1:" Released: "_$S($$RXRLDT^PSOBPSUT(DA,N):$$FMTE^XLFDT($$RXRLDT^PSOBPSUT(DA,N)\1,2),1:""))
"RTN","PSORXVW1",84,0)
 .I $$STATUS^PSOBPSUT(DA,N)'="",$$RXRLDT^PSOBPSUT(DA,N) S RTS=RTS_"  NDC: "_$$GETNDC^PSONDCUT(DA,N)
"RTN","PSORXVW1",85,0)
 .S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_RTS
"RTN","PSORXVW1",86,0)
 .S:$P(P1,"^",3)]"" IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="   Remarks: "_$P(P1,"^",3)
"RTN","PSORXVW1",87,0)
 K RTS Q
"RTN","PSORXVW1",88,0)
PAR ;partial log
"RTN","PSORXVW1",89,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=" ",IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Partial Fills:"
"RTN","PSORXVW1",90,0)
 S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="#   Log Date   Date     Qty              Routing    Lot #        Pharmacist",IEN=IEN+1,$P(^TMP("PSOAL",$J,IEN,0),"=",79)="="
"RTN","PSORXVW1",91,0)
 I '$O(^PSRX(DA,"P",0)) S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="There are NO Partials for this Prescription" Q
"RTN","PSORXVW1",92,0)
 S N=0 F  S N=$O(^PSRX(DA,"P",N)) Q:'N  S P1=^(N,0),DTT=$P(P1,"^",8)\1 D DAT D
"RTN","PSORXVW1",93,0)
 .S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)=N_"   "_DAT_"  ",QTY=$P(P1,"^",4)_$E("               ",$L($P(P1,"^",4))+1,15)
"RTN","PSORXVW1",94,0)
 .S DTT=$P(P1,"^") D DAT S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_DAT_"  "_QTY_"  "
"RTN","PSORXVW1",95,0)
 .S PSDIV=$S($D(^PS(59,+$P(P1,"^",9),0)):$P(^(0),"^",6),1:"UNKNOWN"),PSDIV=PSDIV_$E("        ",$L(PSDIV)+1,8)
"RTN","PSORXVW1",96,0)
 .S MW=$S($P(P1,"^",2)="M":"Mail",1:"Window"),MW=MW_$E("          ",$L(MW)+1,10)
"RTN","PSORXVW1",97,0)
 .K DIC,X,Y S DIC="^VA(200,",DIC(0)="N,Z",X=+$P(P1,"^",16) D ^DIC
"RTN","PSORXVW1",98,0)
 .S ^TMP("PSOAL",$J,IEN,0)=^TMP("PSOAL",$J,IEN,0)_MW_"  "_$P(P1,"^",6)_$E("            ",$L($P(P1,"^",6))+1,10)_$E($S(+Y:$P(Y,"^",2),1:""),1,16)
"RTN","PSORXVW1",99,0)
 .S RTS=$S($P(P1,"^",16):" RETURNED TO STOCK: "_$E($P(P1,"^",16),4,5)_"/"_$E($P(P1,"^",16),6,7)_"/"_$E($P(P1,"^",16),2,3),1:" RELEASED: "_$S($P(P1,"^",19):$E($P(P1,"^",19),4,5)_"/"_$E($P(P1,"^",19),6,7)_"/"_$E($P(P1,"^",19),2,3),1:""))
"RTN","PSORXVW1",100,0)
 .K DIC,X,Y S DIC="^VA(200,",DIC(0)="N,Z",X=$P(P1,"^",7) D ^DIC
"RTN","PSORXVW1",101,0)
 .S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Division: "_PSDIV_" "_RTS ;_"      Entry By: "_$P(Y,"^",2) K DIC,X,Y
"RTN","PSORXVW1",102,0)
 .S:$P(P1,"^",3)]"" IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="  REMARKS: "_$P(P1,"^",3) K RTS
"RTN","PSORXVW1",103,0)
 Q
"RTN","PSORXVW1",104,0)
HLD ;hold info
"RTN","PSORXVW1",105,0)
 S DTT=$P(^PSRX(DA,"H"),"^",3) D DAT S HLDR=$$GET1^DIQ(52,DA,99)
"RTN","PSORXVW1",106,0)
 S $P(RN," ",60)=" ",IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Hold Reason: "_HLDR_$E(RN,$L("Hold Reason: "_HLDR)+1,60)_"Hold Date: "_DAT
"RTN","PSORXVW1",107,0)
 I $P($G(^PSRX(DA,"H")),"^",2)]"" D
"RTN","PSORXVW1",108,0)
 . N HLDCOMM S HLDCOMM=$P(^PSRX(DA,"H"),"^",2)
"RTN","PSORXVW1",109,0)
 . S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="Hold Comments: "_$E(HLDCOMM,1,65),HLDCOMM=$E(HLDCOMM,66,999)
"RTN","PSORXVW1",110,0)
 . F  Q:HLDCOMM=""  D
"RTN","PSORXVW1",111,0)
 . . S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="               "_$E(HLDCOMM,1,65),HLDCOMM=$E(HLDCOMM,66,999)
"RTN","PSORXVW1",112,0)
 K RN,DAT,DTT,HLDR
"RTN","PSORXVW1",113,0)
 Q
"RTN","PSORXVW1",114,0)
DAT S DAT="",DTT=DTT\1 Q:DTT'?7N  S DAT=$E(DTT,4,5)_"/"_$E(DTT,6,7)_"/"_$E(DTT,2,3)
"RTN","PSORXVW1",115,0)
 Q
"RTN","PSORXVW1",116,0)
INST ;formats instruction from front door
"RTN","PSORXVW1",117,0)
 I $O(^PSRX(DA,"PI",0)) D
"RTN","PSORXVW1",118,0)
 .S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="        Instructions:"
"RTN","PSORXVW1",119,0)
 .S T=0 F  S T=$O(^PSRX(RXN,"PI",T)) Q:'T  D                  ;PSO*210
"RTN","PSORXVW1",120,0)
 ..S MIG=^PSRX(RXN,"PI",T,0)
"RTN","PSORXVW1",121,0)
 ..D WORDWRAP^PSOUTLA2(MIG,.IEN,$NA(^TMP("PSOAL",$J)),21)
"RTN","PSORXVW1",122,0)
 K T,TY,MIG,SG
"RTN","PSORXVW1",123,0)
 Q
"RTN","PSORXVW1",124,0)
PC ;displays provider comments
"RTN","PSORXVW1",125,0)
 I $O(^PSRX(DA,"PRC",0)) D
"RTN","PSORXVW1",126,0)
 .S IEN=IEN+1,^TMP("PSOAL",$J,IEN,0)="   Provider Comments:"
"RTN","PSORXVW1",127,0)
 .S T=0 F  S T=$O(^PSRX(RXN,"PRC",T)) Q:'T  D                 ;PSO*210
"RTN","PSORXVW1",128,0)
 ..S MIG=^PSRX(RXN,"PRC",T,0)
"RTN","PSORXVW1",129,0)
 ..D WORDWRAP^PSOUTLA2(MIG,.IEN,$NA(^TMP("PSOAL",$J)),21)
"RTN","PSORXVW1",130,0)
 K T,TY,MIG,SG
"RTN","PSORXVW1",131,0)
 Q
"RTN","PSORXVW1",132,0)
DOSE ;displays dosing instruction for both simple and complex Rxs.
"RTN","PSORXVW1",133,0)
 D DOSE^PSORXVW2
"RTN","PSORXVW1",134,0)
 Q
"RTN","PSORXVW1",135,0)
 ;
"RTN","PSORXVW1",136,0)
HLP ; Help Text for the VIEW PRESCRIPTION prompt
"RTN","PSORXVW1",137,0)
 W !," A prescription number or ECME number may be entered.  To look-up a"
"RTN","PSORXVW1",138,0)
 W !," prescription by the ECME number, please enter ""E."" followed by the ECME"
"RTN","PSORXVW1",139,0)
 W !," number with or without any leading zeros."
"RTN","PSORXVW1",140,0)
 W !!,"  Or just",!
"RTN","PSORXVW1",141,0)
 D LKP("?")
"RTN","PSORXVW1",142,0)
 Q 
"RTN","PSORXVW1",143,0)
 ;
"RTN","PSORXVW1",144,0)
LKP(INPUT) ; - Peforms Lookup on the PRESCRIPTION file
"RTN","PSORXVW1",145,0)
 N DIC,X,Y
"RTN","PSORXVW1",146,0)
 S DIC="^PSRX(",DIC(0)="QE",D="B",X=INPUT
"RTN","PSORXVW1",147,0)
 S DIC("S")="I $P($G(^(0)),""^"",2),$D(^(""STA"")),$P($G(^(""STA"")),""^"")'=13"
"RTN","PSORXVW1",148,0)
 D IX^DIC
"RTN","PSORXVW1",149,0)
 Q Y
"RTN","PSOSPML0")
0^13^B30087960^n/a
"RTN","PSOSPML0",1,0)
PSOSPML0 ;BIRM/MFR - Scheduled Batch Export ;10/10/12
"RTN","PSOSPML0",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408**;DEC 1997;Build 100
"RTN","PSOSPML0",3,0)
 ;
"RTN","PSOSPML0",4,0)
AUTO ; SPMP Scheduled Background Job Edit
"RTN","PSOSPML0",5,0)
 N DIC,Y S DIC(0)="XZM",DIC="^DIC(19.2,",X="PSO SPMP SCHEDULED EXPORT" D ^DIC
"RTN","PSOSPML0",6,0)
 I +Y>0 S DA=Y D EDIT^XUTMOPT("PSO SPMP SCHEDULED EXPORT") Q
"RTN","PSOSPML0",7,0)
 D RESCH^XUTMOPT("PSO SPMP SCHEDULED EXPORT",$$FMADD^XLFDT(DT,1)+.0001,"","24H","L")
"RTN","PSOSPML0",8,0)
 D EDIT^XUTMOPT("PSO SPMP SCHEDULED EXPORT")
"RTN","PSOSPML0",9,0)
 Q
"RTN","PSOSPML0",10,0)
 ;
"RTN","PSOSPML0",11,0)
EXPORT ; SPMP Nightly Scheduled Export
"RTN","PSOSPML0",12,0)
 N STATE,NODE0,EXPNODE,BEGEXPDT,YESTERDY,BATIEN,RXCNT,RTSBGDT,RTSENDT
"RTN","PSOSPML0",13,0)
 ;
"RTN","PSOSPML0",14,0)
 S STATE=0
"RTN","PSOSPML0",15,0)
 F  S STATE=$O(^PS(58.41,STATE)) Q:'STATE  D
"RTN","PSOSPML0",16,0)
 . K ^TMP("PSOSPMRX",$J)
"RTN","PSOSPML0",17,0)
 . I $P($$SPOK^PSOSPMUT(STATE),"^")=-1 D  Q
"RTN","PSOSPML0",18,0)
 . . D LOGERROR^PSOSPMUT(0,STATE,$P($$SPOK^PSOSPMUT(STATE),"^",2),1)
"RTN","PSOSPML0",19,0)
 . S NODE0=$G(^PS(58.41,STATE,0)),EXPNODE=$G(^PS(58.41,STATE,"EXPORT"))
"RTN","PSOSPML0",20,0)
 . S YESTERDY=$$FMADD^XLFDT(DT,-1)
"RTN","PSOSPML0",21,0)
 . S BEGEXPDT=$$FMADD^XLFDT(DT,-$P(NODE0,"^",4))
"RTN","PSOSPML0",22,0)
 . I $P(EXPNODE,"^") S BEGEXPDT=$$FMADD^XLFDT($P(EXPNODE,"^"),+1)
"RTN","PSOSPML0",23,0)
 . ; Cannot run for current day because it will skip Release date/time w/out time
"RTN","PSOSPML0",24,0)
 . I BEGEXPDT>YESTERDY Q
"RTN","PSOSPML0",25,0)
 . ; The legislation allowing VA to report was published on 02/11/2013
"RTN","PSOSPML0",26,0)
 . I BEGEXPDT<3130211 S BEGEXPDT=3130211
"RTN","PSOSPML0",27,0)
 . ; Gathering the prescriptions to be transmitted in the ^TMP("PSOSPMRX",$J) global
"RTN","PSOSPML0",28,0)
 . S RXCNT=$$GATHER^PSOSPMU1(STATE,BEGEXPDT-.1,YESTERDY+.24,"N")
"RTN","PSOSPML0",29,0)
 . ; The ^TMP("PSOSPMRX",$J) returned will be used to build the batch 
"RTN","PSOSPML0",30,0)
 . I RXCNT>0 D
"RTN","PSOSPML0",31,0)
 . . S BATIEN=$$BLDBAT^PSOSPMU1("SC",BEGEXPDT,YESTERDY)
"RTN","PSOSPML0",32,0)
 . . I $P(BATIEN,"^")=-1 D LOGERROR^PSOSPMUT(0,STATE,$P(BATIEN,"^",2),1) Q
"RTN","PSOSPML0",33,0)
 . . ; Automatic sFTP Transmission to the state
"RTN","PSOSPML0",34,0)
 . . I $$GET1^DIQ(58.41,STATE,13,"I")="A" D
"RTN","PSOSPML0",35,0)
 . . . D EXPORT^PSOSPMUT(BATIEN,"EXPORT",1)
"RTN","PSOSPML0",36,0)
 . . ; Manual sFTP Transmission to the state
"RTN","PSOSPML0",37,0)
 . . I $$GET1^DIQ(58.41,STATE,13,"I")="M" D
"RTN","PSOSPML0",38,0)
 . . . D SENDMAIL(BATIEN,"S")
"RTN","PSOSPML0",39,0)
 . K DIE,DR,DA S DR="11///"_YESTERDY S DIE="^PS(58.41,",DA=STATE D ^DIE
"RTN","PSOSPML0",40,0)
 ;
"RTN","PSOSPML0",41,0)
 ; Return To Stock Batch for ASAP 1995 states only (Weekly) - Separate file
"RTN","PSOSPML0",42,0)
 I $$UP^XLFSTR($$DOW^XLFDT(DT))'="SUNDAY" Q
"RTN","PSOSPML0",43,0)
 S STATE=0 F  S STATE=$O(^PS(58.41,STATE)) Q:'STATE  D
"RTN","PSOSPML0",44,0)
 . ; State not using ASAP 1995
"RTN","PSOSPML0",45,0)
 . I $$GET1^DIQ(58.41,STATE,1,"I")'="1995" Q
"RTN","PSOSPML0",46,0)
 . ; State accepts Return to Stock transmissions
"RTN","PSOSPML0",47,0)
 . S RTSBGDT=$$FMADD^XLFDT(DT,-7),RTSENDT=$$FMADD^XLFDT(DT,-1)
"RTN","PSOSPML0",48,0)
 . S RXCNT=$$GATHER^PSOSPMU1(STATE,RTSBGDT-.1,RTSENDT+.24,"N",1) I RXCNT'>0 Q
"RTN","PSOSPML0",49,0)
 . S BATIEN=$$BLDBAT^PSOSPMU1("VD",RTSBGDT,RTSENDT)
"RTN","PSOSPML0",50,0)
 . I $$GET1^DIQ(58.41,STATE,12,"I") D
"RTN","PSOSPML0",51,0)
 . . D EXPORT^PSOSPMUT(BATIEN,"EXPORT",1) Q
"RTN","PSOSPML0",52,0)
 . E  D SENDMAIL(BATIEN,"R")
"RTN","PSOSPML0",53,0)
 Q
"RTN","PSOSPML0",54,0)
 ;
"RTN","PSOSPML0",55,0)
SENDMAIL(BATCHIEN,BATTYPE) ; ASAP 1995 Only - Mailman message about Return To Stock Records
"RTN","PSOSPML0",56,0)
 ;Input: BATCHIEN - Pointer to BATCH file (#58.42)
"RTN","PSOSPML0",57,0)
 ;       BATTYPE  - Batch Type: S: Scheduled / R: Return to Stock (ASAP 1995 only) 
"RTN","PSOSPML0",58,0)
 N XMDUZ,XMMG,XMSUB,XMTEXT,XMY,XMZ,PSOMSG,USR,STANAME
"RTN","PSOSPML0",59,0)
 ;
"RTN","PSOSPML0",60,0)
 S STANAME=$$GET1^DIQ(58.42,BATCHIEN,1)
"RTN","PSOSPML0",61,0)
 ; - Scheduled Batch Notification
"RTN","PSOSPML0",62,0)
 I (BATTYPE="S") D
"RTN","PSOSPML0",63,0)
 . S XMSUB=STANAME_" CS PMP Batch Ready"
"RTN","PSOSPML0",64,0)
 . S XMSUB=XMSUB_" ("_$$FMTE^XLFDT($$GET1^DIQ(58.42,BATCHIEN,4,"I")\1,"2Z")
"RTN","PSOSPML0",65,0)
 . S XMSUB=XMSUB_"-"_$$FMTE^XLFDT($$GET1^DIQ(58.42,BATCHIEN,5,"I")\1,"2Z")_")"
"RTN","PSOSPML0",66,0)
 . S PSOMSG(1)="Batch #: "_BATCHIEN_"      Period : "_$$FMTE^XLFDT($$GET1^DIQ(58.42,BATCHIEN,4,"I")\1,"2Z")_" thru "_$$FMTE^XLFDT($$GET1^DIQ(58.42,BATCHIEN,5,"I")\1,"2Z")
"RTN","PSOSPML0",67,0)
 . S PSOMSG(2)=""
"RTN","PSOSPML0",68,0)
 . S PSOMSG(3)="The scheduled batch #"_BATCHIEN_" containing Controlled Substance Prescription data"
"RTN","PSOSPML0",69,0)
 . S PSOMSG(4)="to be submitted to the Prescription Monitoring Program (PMP) for the state of "
"RTN","PSOSPML0",70,0)
 . S PSOMSG(5)=STANAME_" is ready."
"RTN","PSOSPML0",71,0)
 . S PSOMSG(6)=""
"RTN","PSOSPML0",72,0)
 . S PSOMSG(7)="Please use the option ""View/Export Batch"" [PSO SPMP BATCH VIEW/EXPORT], then"
"RTN","PSOSPML0",73,0)
 . S PSOMSG(8)="enter the batch #"_BATCHIEN_", choose the action 'EXP' and follow the instructions"
"RTN","PSOSPML0",74,0)
 . S PSOMSG(9)="to send the file to the state."
"RTN","PSOSPML0",75,0)
 ;
"RTN","PSOSPML0",76,0)
 ; - Return To Stock Batch Notification (ASAP 1995 only)
"RTN","PSOSPML0",77,0)
 I (BATTYPE="R") D
"RTN","PSOSPML0",78,0)
 . S XMSUB=STANAME_" - CS Rx Fills Returned To Stock"
"RTN","PSOSPML0",79,0)
 . S XMDUZ="SPMP Scheduled Transmission"
"RTN","PSOSPML0",80,0)
 . S PSOMSG(1)="There were Controlled Substance Rx fills that had been reported to the State"
"RTN","PSOSPML0",81,0)
 . S PSOMSG(2)="Prescription Monitoring Program (SPMP) and were later returned to stock:"
"RTN","PSOSPML0",82,0)
 . S PSOMSG(3)=""
"RTN","PSOSPML0",83,0)
 . S PSOMSG(4)="Batch #: "_BATCHIEN_"      Period : "_$$FMTE^XLFDT($$GET1^DIQ(58.42,BATCHIEN,4,"I")\1,"2Z")_" thru "_$$FMTE^XLFDT($$GET1^DIQ(58.42,BATCHIEN,5,"I")\1,"2Z")
"RTN","PSOSPML0",84,0)
 . S PSOMSG(6)=""
"RTN","PSOSPML0",85,0)
 . S PSOMSG(7)="Please, retrieve the batch above via the View/Export Batch [PSO SPMP BATCH"
"RTN","PSOSPML0",86,0)
 . S PSOMSG(8)="VIEW/EXPORT] option and manually capture/upload the data to the State"
"RTN","PSOSPML0",87,0)
 . S PSOMSG(9)="Prescription Monitoring Program (SPMP) website for "_STANAME_"."
"RTN","PSOSPML0",88,0)
 . S PSOMSG(10)=""
"RTN","PSOSPML0",89,0)
 . S PSOMSG(11)="***************************** IMPORTANT **********************************"
"RTN","PSOSPML0",90,0)
 . S PSOMSG(12)="When you upload this file to the state website, make sure to select the"
"RTN","PSOSPML0",91,0)
 . S PSOMSG(13)="correct import option, usually called ""Back Records Out of the System"", to"
"RTN","PSOSPML0",92,0)
 . S PSOMSG(14)="avoid reporting duplicate records for the patients."
"RTN","PSOSPML0",93,0)
 . S PSOMSG(15)="**************************************************************************"
"RTN","PSOSPML0",94,0)
 ;
"RTN","PSOSPML0",95,0)
 S XMTEXT="PSOMSG("
"RTN","PSOSPML0",96,0)
 ; If there are no active members in the mailgroup sends message to PSDMGR key holders
"RTN","PSOSPML0",97,0)
 I $$GOTLOCAL^XMXAPIG("PSO SPMP NOTIFICATIONS") D
"RTN","PSOSPML0",98,0)
 . S XMY("G.PSO SPMP NOTIFICATIONS")=""
"RTN","PSOSPML0",99,0)
 E  D
"RTN","PSOSPML0",100,0)
 . S USR=0 F  S USR=$O(^XUSEC("PSDMGR",USR)) Q:'USR  S XMY(USR)=""
"RTN","PSOSPML0",101,0)
 ;
"RTN","PSOSPML0",102,0)
 D ^XMD
"RTN","PSOSPML0",103,0)
 Q
"RTN","PSOSPML1")
0^12^B45648973^n/a
"RTN","PSOSPML1",1,0)
PSOSPML1 ;BIRM/MFR - Export Batch Processing Listman Driver ;10/10/12
"RTN","PSOSPML1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408**;DEC 1997;Build 100
"RTN","PSOSPML1",3,0)
 ;
"RTN","PSOSPML1",4,0)
 N %DT,BATIEN,DIR,DIRUT,X,DIC,DTOUT,DUOUT,PSOSTATE,PSOFROM,PSOTO
"RTN","PSOSPML1",5,0)
 ;
"RTN","PSOSPML1",6,0)
STA ; STATE prompt
"RTN","PSOSPML1",7,0)
 K DIC W ! S DIC("A")="STATE: ",DIC="^DIC(5,"
"RTN","PSOSPML1",8,0)
 S PSOSTATE=$O(^PS(58.41,0)) S:PSOSTATE DIC("B")=PSOSTATE
"RTN","PSOSPML1",9,0)
 S DIC(0)="AEQMZ" D ^DIC I X="^"!(Y<0) G EXIT
"RTN","PSOSPML1",10,0)
 I +$$SPOK^PSOSPMUT(+Y)=-1 W !!,$P($$SPOK^PSOSPMUT(+Y),"^",2),$C(7) G STA
"RTN","PSOSPML1",11,0)
 S PSOSTATE=+Y
"RTN","PSOSPML1",12,0)
 ;
"RTN","PSOSPML1",13,0)
 ; - Ask for FROM DATE
"RTN","PSOSPML1",14,0)
 S %DT(0)=-DT,%DT="AEP",%DT("A")="BATCH CREATED BEGIN DATE: "
"RTN","PSOSPML1",15,0)
 W ! D ^%DT I Y<0!($D(DTOUT)) G EXIT
"RTN","PSOSPML1",16,0)
 S PSOFROM=Y\1-.00001
"RTN","PSOSPML1",17,0)
 ;
"RTN","PSOSPML1",18,0)
 ; - Ask for TO DATE
"RTN","PSOSPML1",19,0)
 K %DT S %DT(0)=PSOFROM+1\1,%DT="AEP",%DT("B")="TODAY",%DT("A")="BATCH CREATED END DATE: "
"RTN","PSOSPML1",20,0)
 W ! D ^%DT I Y<0!($D(DTOUT)) G EXIT
"RTN","PSOSPML1",21,0)
 S PSOTO=Y\1+.99999
"RTN","PSOSPML1",22,0)
 ;
"RTN","PSOSPML1",23,0)
 D EN(PSOSTATE,PSOFROM,PSOTO)
"RTN","PSOSPML1",24,0)
 ;
"RTN","PSOSPML1",25,0)
 G EXIT
"RTN","PSOSPML1",26,0)
 ;
"RTN","PSOSPML1",27,0)
EN(PSOSTATE,PSOFROM,PSOTO) ; Entry point
"RTN","PSOSPML1",28,0)
 D EN^VALM("PSO SPMP BATCH PROCESSING")
"RTN","PSOSPML1",29,0)
 D FULL^VALM1
"RTN","PSOSPML1",30,0)
 Q
"RTN","PSOSPML1",31,0)
 ;
"RTN","PSOSPML1",32,0)
HDR ; - Builds the Header section
"RTN","PSOSPML1",33,0)
 S VALMHDR(1)="State: "_$$GET1^DIQ(5,PSOSTATE,.01)
"RTN","PSOSPML1",34,0)
 S $E(VALMHDR(1),40)="Date Range: "_$$FMTE^XLFDT(PSOFROM+1\1,2)_" - "_$$FMTE^XLFDT(PSOTO\1,2)
"RTN","PSOSPML1",35,0)
 D SETHDR()
"RTN","PSOSPML1",36,0)
 Q
"RTN","PSOSPML1",37,0)
 ;
"RTN","PSOSPML1",38,0)
SETHDR() ; - Displays the Header Line
"RTN","PSOSPML1",39,0)
 N HDR,ORD,POS
"RTN","PSOSPML1",40,0)
 ;
"RTN","PSOSPML1",41,0)
 S HDR="   #",$E(HDR,7)="BATCH#",$E(HDR,15)="DATE/TIME CREATED",$E(HDR,34)="REL. DATE RANGE"
"RTN","PSOSPML1",42,0)
 S $E(HDR,54)="TYPE",$E(HDR,66)="Rx's",$E(HDR,72)="EXPORTED?"
"RTN","PSOSPML1",43,0)
 S $E(HDR,81)="" D INSTR^VALM1(IORVON_HDR_IOINORM,1,3)
"RTN","PSOSPML1",44,0)
 Q
"RTN","PSOSPML1",45,0)
 ;
"RTN","PSOSPML1",46,0)
INIT ; Builds the Body section
"RTN","PSOSPML1",47,0)
 N RXCNT,BATDT,I,LINE,TYPE,NODE0,RX,COUNT,DRUGIEN,DRUGNAM,DRUGDEA,DSPLINE,FILL
"RTN","PSOSPML1",48,0)
 ;
"RTN","PSOSPML1",49,0)
 K ^TMP("PSOSPML1",$J) S (VALMCNT,LINE,RXCNT,COUNT)=0
"RTN","PSOSPML1",50,0)
 S BATDT=PSOFROM,BATIEN=0
"RTN","PSOSPML1",51,0)
 F  S BATDT=$O(^PS(58.42,"AD",BATDT)) Q:'BATDT!(BATDT>PSOTO)  D
"RTN","PSOSPML1",52,0)
 . F  S BATIEN=$O(^PS(58.42,"AD",BATDT,BATIEN)) Q:'BATIEN  D
"RTN","PSOSPML1",53,0)
 . . S NODE0=$G(^PS(58.42,BATIEN,0))
"RTN","PSOSPML1",54,0)
 . . I $P(NODE0,"^",2)'=PSOSTATE Q
"RTN","PSOSPML1",55,0)
 . . S COUNT=COUNT+1,RXCNT=$O(^PS(58.42,BATIEN,"RX",999999),-1)
"RTN","PSOSPML1",56,0)
 . . S DSPLINE=$J(COUNT,4)_" "_$J(BATIEN,7),$E(DSPLINE,15)=$$FMTE^XLFDT(BATDT,"2Z")
"RTN","PSOSPML1",57,0)
 . . S $E(DSPLINE,34)=$$FMTE^XLFDT($P(NODE0,"^",5)\1,"2Z")_"-"_$$FMTE^XLFDT($P(NODE0,"^",6)\1,"2Z")
"RTN","PSOSPML1",58,0)
 . . I $P(NODE0,"^",3)="RX" S $E(DSPLINE,34,51)="SINGLE RX         "
"RTN","PSOSPML1",59,0)
 . . I $P(NODE0,"^",3)="VD",'$P(NODE0,"^",5) S $E(DSPLINE,34,51)="SINGLE RX         "
"RTN","PSOSPML1",60,0)
 . . S $E(DSPLINE,54)=$$GET1^DIQ(58.42,BATIEN,2)
"RTN","PSOSPML1",61,0)
 . . S $E(DSPLINE,66)=$J(RXCNT,4),$E(DSPLINE,72)=$S($$GET1^DIQ(58.42,BATIEN,9,"I"):"YES",1:"NO")
"RTN","PSOSPML1",62,0)
 . . D SETLN^PSOSPMU1("PSOSPML1",DSPLINE,0,0,0)
"RTN","PSOSPML1",63,0)
 . . S ^TMP("PSOSPML1",$J,LINE,"BAT")=BATIEN
"RTN","PSOSPML1",64,0)
 I '$D(^TMP("PSOSPML1",$J)) D
"RTN","PSOSPML1",65,0)
 . D SETLN^PSOSPMU1("PSOSPML1","There are no export batches created within the date range selected.",0,0,0)
"RTN","PSOSPML1",66,0)
 S VALMCNT=LINE
"RTN","PSOSPML1",67,0)
 Q
"RTN","PSOSPML1",68,0)
 ;
"RTN","PSOSPML1",69,0)
SEL ;Process selection of one entry
"RTN","PSOSPML1",70,0)
 N PSOSEL,XQORM,ORD,PSOTITLE,PSOLIS,XX,BAT
"RTN","PSOSPML1",71,0)
 S PSOSEL=+$P(XQORNOD(0),"=",2) I 'PSOSEL S VALMSG="Invalid selection!",VALMBCK="R" Q
"RTN","PSOSPML1",72,0)
 S BAT=+$G(^TMP("PSOSPML1",$J,PSOSEL,"BAT"))
"RTN","PSOSPML1",73,0)
 I 'BAT S VALMSG="Invalid selection!",VALMBCK="R" Q
"RTN","PSOSPML1",74,0)
 S PSOTITLE=VALM("TITLE")
"RTN","PSOSPML1",75,0)
 W ?50,"Please wait..."
"RTN","PSOSPML1",76,0)
 D  ; Do used to preserve variables PSOTITLE and LINE
"RTN","PSOSPML1",77,0)
 . N LINE,PSOTITLE D EN^PSOSPML2(BAT)
"RTN","PSOSPML1",78,0)
 S VALMBCK="R",VALM("TITLE")=$G(PSOTITLE)
"RTN","PSOSPML1",79,0)
 D INIT
"RTN","PSOSPML1",80,0)
 Q
"RTN","PSOSPML1",81,0)
 ;
"RTN","PSOSPML1",82,0)
MAN ; Manual Batch Export
"RTN","PSOSPML1",83,0)
 D FULL^VALM1 S VALMBCK="R"
"RTN","PSOSPML1",84,0)
 N %DT,DIR,DIRUT,X,DIC,DTOUT,DUOUT,BEGINDT,PSOBGDT,ENDDT,PSOENDDT,PSOERROR,SPOK
"RTN","PSOSPML1",85,0)
 N RECTYPE,STATE,PSOQUIT,FILLTYPE
"RTN","PSOSPML1",86,0)
 ;
"RTN","PSOSPML1",87,0)
 K DIC W ! S DIC("A")="STATE: ",DIC("S")="I $D(^PS(58.41,+Y,0))",DIC="^DIC(5,"
"RTN","PSOSPML1",88,0)
 S:$G(PSOSTATE) DIC("B")=PSOSTATE
"RTN","PSOSPML1",89,0)
 S DIC(0)="AEQMZ" D ^DIC I X="^"!(Y<0) G EXIT
"RTN","PSOSPML1",90,0)
 S STATE=+Y
"RTN","PSOSPML1",91,0)
 ;
"RTN","PSOSPML1",92,0)
 ; - Ask for FROM DATE
"RTN","PSOSPML1",93,0)
 ;   Note: The legislation allowing VA to report was published on 02/11/2013
"RTN","PSOSPML1",94,0)
 S %DT(0)=3130211,%DT="AEP",%DT("A")="EXPORT BEGIN DATE: "
"RTN","PSOSPML1",95,0)
 W ! D ^%DT I Y<0!($D(DTOUT)) Q
"RTN","PSOSPML1",96,0)
 S BEGINDT=Y
"RTN","PSOSPML1",97,0)
 ;
"RTN","PSOSPML1",98,0)
 ; - Ask for TO DATE
"RTN","PSOSPML1",99,0)
 K %DT S %DT(0)=BEGINDT\1,%DT="AEP",%DT("B")="TODAY",%DT("A")="EXPORT END DATE: "
"RTN","PSOSPML1",100,0)
 W ! D ^%DT I Y<0!($D(DTOUT)) Q
"RTN","PSOSPML1",101,0)
 S ENDDT=Y
"RTN","PSOSPML1",102,0)
 ;
"RTN","PSOSPML1",103,0)
 S PSOQUIT=0,FILLTYPE=""
"RTN","PSOSPML1",104,0)
 I $$GET1^DIQ(58.41,STATE,1,"I")="1995" D  I PSOQUIT Q
"RTN","PSOSPML1",105,0)
 . K DIR S DIR("A")="Rx Fill Type"
"RTN","PSOSPML1",106,0)
 . S DIR("L",1)="Enter the Prescription Fill Type:"
"RTN","PSOSPML1",107,0)
 . S DIR("L",2)=" "
"RTN","PSOSPML1",108,0)
 . S DIR(0)="S^RL:RELEASED;RS:RETURNED TO STOCK"
"RTN","PSOSPML1",109,0)
 . S DIR("L",3)="  RL     RELEASED"
"RTN","PSOSPML1",110,0)
 . S DIR("L")="  RS     RETURNED TO STOCK"
"RTN","PSOSPML1",111,0)
 . S DIR("B")="RL" D ^DIR I $D(DUOUT)!($D(DIRUT)) K DIRUT,DUOUT,DIR S PSOQUIT=1 Q
"RTN","PSOSPML1",112,0)
 . S FILLTYPE=Y
"RTN","PSOSPML1",113,0)
 ; 
"RTN","PSOSPML1",114,0)
 S PSOQUIT=0,RECTYPE="N"
"RTN","PSOSPML1",115,0)
 I FILLTYPE'="RS" D  I PSOQUIT Q
"RTN","PSOSPML1",116,0)
 . K DIR S DIR("A")="Record Type"
"RTN","PSOSPML1",117,0)
 . S DIR("L",1)="Enter the type of record to be sent for released prescription fills:"
"RTN","PSOSPML1",118,0)
 . S DIR("L",2)=" "
"RTN","PSOSPML1",119,0)
 . S DIR(0)="S^N:NEW;R:REVISE"
"RTN","PSOSPML1",120,0)
 . S DIR("L",3)="  N     NEW"
"RTN","PSOSPML1",121,0)
 . S DIR("L")="  R     REVISE"
"RTN","PSOSPML1",122,0)
 . S DIR("B")="N" D ^DIR I $D(DUOUT)!($D(DIRUT)) K DIRUT,DUOUT,DIR S PSOQUIT=1 Q
"RTN","PSOSPML1",123,0)
 . S RECTYPE=Y
"RTN","PSOSPML1",124,0)
 ;
"RTN","PSOSPML1",125,0)
 D EXPORT(STATE,BEGINDT,ENDDT,FILLTYPE,RECTYPE)
"RTN","PSOSPML1",126,0)
 Q
"RTN","PSOSPML1",127,0)
 ;
"RTN","PSOSPML1",128,0)
EXPORT(STATE,FROMDATE,TODATE,FILLTYPE,RECTYPE) ; Export Release CS Rx's to the sate for date range
"RTN","PSOSPML1",129,0)
 ;Input: STATE - Pointer to the STATE file (#5)
"RTN","PSOSPML1",130,0)
 ;       FROMDATE - Being Rx Release for Date Range
"RTN","PSOSPML1",131,0)
 ;       TODATE - End Rx Release for Date Range
"RTN","PSOSPML1",132,0)
 ;       FILLTYPE - Rx Fill Type (RL - Released / RS - Returned to Stock) - ASAP 1995 only 
"RTN","PSOSPML1",133,0)
 ;       RECTYPE - Record Type (N - New / R - Revise)
"RTN","PSOSPML1",134,0)
 N RXRLDT,ENDRLDT,XREF,RXCNT,RXIEN,RXFILL,FILL,SPOK,DIR,Y,X,DTOUT,DUOUT,BATCHIEN
"RTN","PSOSPML1",135,0)
 N RTSDT,ENDRTSDT,RTSONLY,PSOMODE
"RTN","PSOSPML1",136,0)
 ;
"RTN","PSOSPML1",137,0)
 S SPOK=$$SPOK^PSOSPMUT(STATE)
"RTN","PSOSPML1",138,0)
 I $P(SPOK,"^")=-1 D  Q
"RTN","PSOSPML1",139,0)
 . W !!,$P(SPOK,"^",2),$C(7) D PAUSE^PSOSPMU1 Q
"RTN","PSOSPML1",140,0)
 ;
"RTN","PSOSPML1",141,0)
 ; The legislation allowing VA to report was published on 02/11/2013
"RTN","PSOSPML1",142,0)
 I FROMDATE<3130211 S FROMDATE=3130211
"RTN","PSOSPML1",143,0)
 ;
"RTN","PSOSPML1",144,0)
 ; ASAP 1995 ONLY 
"RTN","PSOSPML1",145,0)
 S RTSONLY=0 I $$GET1^DIQ(58.41,STATE,1,"I")="1995",FILLTYPE="RS" S RTSONLY=1
"RTN","PSOSPML1",146,0)
 ; 
"RTN","PSOSPML1",147,0)
 ; Gathering the prescriptions to be transmitted in the ^TMP("PSOSPMRX",$J) global
"RTN","PSOSPML1",148,0)
 W !!,"Gathering CS prescription fills...(this may take a few minutes)"
"RTN","PSOSPML1",149,0)
 K ^TMP("PSOSPMRX",$J) S RXCNT=$$GATHER^PSOSPMU1(STATE,FROMDATE-.1,TODATE+.24,RECTYPE,RTSONLY)
"RTN","PSOSPML1",150,0)
 ;
"RTN","PSOSPML1",151,0)
 I RXCNT'>0 D  Q
"RTN","PSOSPML1",152,0)
 . W !!,"There are no eligible prescriptions for the date range.",$C(7)
"RTN","PSOSPML1",153,0)
 . D PAUSE^PSOSPMU1
"RTN","PSOSPML1",154,0)
 E  W !!,RXCNT," prescription fill(s) found for the date range."
"RTN","PSOSPML1",155,0)
 I '$D(^TMP("PSOSPMRX",$J)) Q
"RTN","PSOSPML1",156,0)
 ; 
"RTN","PSOSPML1",157,0)
 S PSOQUIT=0
"RTN","PSOSPML1",158,0)
 I 'RTSONLY!$$GET1^DIQ(58.41,STATE,12,"I") D  I PSOQUIT Q
"RTN","PSOSPML1",159,0)
 . K DIR W ! S DIR("A",1)="These prescription fills will be transmitted to the state of "_$$GET1^DIQ(5,STATE,.01)_"."
"RTN","PSOSPML1",160,0)
 . S DIR("A",2)="",DIR("A")="Confirm",DIR(0)="Y",DIR("B")="N"
"RTN","PSOSPML1",161,0)
 . D ^DIR I $G(DTOUT)!$G(DUOUT)!'Y S PSOQUIT=1 Q
"RTN","PSOSPML1",162,0)
 I RTSONLY,'$$GET1^DIQ(58.41,STATE,12,"I") D  D ^%ZIS K %ZIS Q:POP  U IO
"RTN","PSOSPML1",163,0)
 . D EXMSG^PSOSPML2(1) W ! K %ZIS,IOP,POP,ZTSK S %ZIS="QM"
"RTN","PSOSPML1",164,0)
 ;
"RTN","PSOSPML1",165,0)
 ; The ^TMP("PSOSPMRX",$J) returned above will be used to build the batch 
"RTN","PSOSPML1",166,0)
 S BATCHIEN=$$BLDBAT^PSOSPMU1($S('RTSONLY:"MA",1:"VD"),FROMDATE,TODATE)
"RTN","PSOSPML1",167,0)
 I $P(BATCHIEN,"^")=-1 D  Q
"RTN","PSOSPML1",168,0)
 . W !!,$P(BATCHIEN,"^",2),$C(7) D PAUSE^PSOSPMU1
"RTN","PSOSPML1",169,0)
 ;
"RTN","PSOSPML1",170,0)
 S PSOMODE="EXPORT" I RTSONLY,'$$GET1^DIQ(58.41,STATE,12,"I") S PSOMODE="VIEW"
"RTN","PSOSPML1",171,0)
 D EXPORT^PSOSPMUT(BATCHIEN,PSOMODE)
"RTN","PSOSPML1",172,0)
 ;
"RTN","PSOSPML1",173,0)
 I RTSONLY,'$$GET1^DIQ(58.41,STATE,12,"I") D
"RTN","PSOSPML1",174,0)
 . D ^%ZISC N DIE,DA,DR S DIE="^PS(58.42,",DA=BATCHIEN
"RTN","PSOSPML1",175,0)
 . S DR="6///<Manual Web Upload>;7////"_DUZ_";9///"_$$NOW^XLFDT()
"RTN","PSOSPML1",176,0)
 . D ^DIE
"RTN","PSOSPML1",177,0)
 ;
"RTN","PSOSPML1",178,0)
 D PAUSE^PSOSPMU1
"RTN","PSOSPML1",179,0)
 D INIT,HDR
"RTN","PSOSPML1",180,0)
 Q
"RTN","PSOSPML1",181,0)
 ;
"RTN","PSOSPML1",182,0)
EXIT ;
"RTN","PSOSPML1",183,0)
 K ^TMP("PSOSPML1",$J)
"RTN","PSOSPML1",184,0)
 Q
"RTN","PSOSPML1",185,0)
 ;
"RTN","PSOSPML1",186,0)
HELP ; Listman HELP entry-point
"RTN","PSOSPML1",187,0)
 Q
"RTN","PSOSPML2")
0^8^B29821538^n/a
"RTN","PSOSPML2",1,0)
PSOSPML2 ;BIRM/MFR - View/Process Export Batch Listman Driver ;09/10/12
"RTN","PSOSPML2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408**;DEC 1997;Build 100
"RTN","PSOSPML2",3,0)
 ;
"RTN","PSOSPML2",4,0)
 N BATCHIEN,DIR,DIRUT,DTOUT,DUOUT,X,DIC
"RTN","PSOSPML2",5,0)
 ;
"RTN","PSOSPML2",6,0)
BAT ; Single Batch Selection
"RTN","PSOSPML2",7,0)
 W ! K DIC S DIC("A")="Export Batch #: ",DIC="^PS(58.42,",DIC(0)="QEAM"
"RTN","PSOSPML2",8,0)
 K BATCHIEN D ^DIC I X="^"!$D(DUOUT)!$D(DTOUT)!(Y<0) G EXIT
"RTN","PSOSPML2",9,0)
 S BATCHIEN=+Y
"RTN","PSOSPML2",10,0)
 ;
"RTN","PSOSPML2",11,0)
 D EN(BATCHIEN)
"RTN","PSOSPML2",12,0)
 ;
"RTN","PSOSPML2",13,0)
 G BAT
"RTN","PSOSPML2",14,0)
 ;
"RTN","PSOSPML2",15,0)
EN(BATCHIEN) ; Entry point
"RTN","PSOSPML2",16,0)
 D EN^VALM("PSO SPMP VIEW/EXPORT BATCH")
"RTN","PSOSPML2",17,0)
 D FULL^VALM1
"RTN","PSOSPML2",18,0)
 Q
"RTN","PSOSPML2",19,0)
 ;
"RTN","PSOSPML2",20,0)
HDR ; - Builds the Header section
"RTN","PSOSPML2",21,0)
 S VALMHDR(1)="Batch #: "_$$GET1^DIQ(58.42,BATCHIEN,.01),$E(VALMHDR(1),17)="State: "_$$GET1^DIQ(58.42,BATCHIEN,1)
"RTN","PSOSPML2",22,0)
 S $E(VALMHDR(1),47)="Type: "_$$GET1^DIQ(58.42,BATCHIEN,2)
"RTN","PSOSPML2",23,0)
 S $E(VALMHDR(1),68)="Exported? "_$S($$GET1^DIQ(58.42,BATCHIEN,9,"I"):"YES",1:"NO")
"RTN","PSOSPML2",24,0)
 S VALMHDR(2)="Created on: "_$$GET1^DIQ(58.42,BATCHIEN,8)
"RTN","PSOSPML2",25,0)
 S $E(VALMHDR(2),47)="Exported on: "_$$GET1^DIQ(58.42,BATCHIEN,9)
"RTN","PSOSPML2",26,0)
 S VALMHDR(3)="File: "_$$GET1^DIQ(58.42,BATCHIEN,6)
"RTN","PSOSPML2",27,0)
 D SETHDR()
"RTN","PSOSPML2",28,0)
 Q
"RTN","PSOSPML2",29,0)
 ;
"RTN","PSOSPML2",30,0)
SETHDR() ; - Displays the Header Line
"RTN","PSOSPML2",31,0)
 N HDR,ORD,POS
"RTN","PSOSPML2",32,0)
 ;
"RTN","PSOSPML2",33,0)
 S HDR="   #",$E(HDR,6)="Rx#",$E(HDR,21)="FILL",$E(HDR,27)="DRUG",$E(HDR,70)="SCH",$E(HDR,74)="TYPE"
"RTN","PSOSPML2",34,0)
 S $E(HDR,81)="" D INSTR^VALM1(IORVON_HDR_IOINORM,1,5)
"RTN","PSOSPML2",35,0)
 Q
"RTN","PSOSPML2",36,0)
 ;
"RTN","PSOSPML2",37,0)
INIT ; Builds the Body section
"RTN","PSOSPML2",38,0)
 N RXIEN,RXNUM,I,LINE,TYPE,NODE0,RX,COUNT,DRUGIEN,DRUGNAM,DRUGDEA,DSPLINE,FILL,RXNFLL,BATRXIEN
"RTN","PSOSPML2",39,0)
 ;
"RTN","PSOSPML2",40,0)
 K ^TMP("PSOSPSRT",$J)
"RTN","PSOSPML2",41,0)
 S BATRXIEN=0
"RTN","PSOSPML2",42,0)
 F  S BATRXIEN=$O(^PS(58.42,BATCHIEN,"RX",BATRXIEN)) Q:'BATRXIEN  D
"RTN","PSOSPML2",43,0)
 . S NODE0=$G(^PS(58.42,BATCHIEN,"RX",BATRXIEN,0))
"RTN","PSOSPML2",44,0)
 . S RXIEN=+NODE0,FILL=$P(NODE0,"^",2)
"RTN","PSOSPML2",45,0)
 . S ^TMP("PSOSPSRT",$J,$$GET1^DIQ(52,RXIEN,.01)_"^"_FILL)=BATRXIEN
"RTN","PSOSPML2",46,0)
 ;
"RTN","PSOSPML2",47,0)
 K ^TMP("PSOSPML2",$J) S VALMCNT=0,LINE=0
"RTN","PSOSPML2",48,0)
 S RXNFLL="",COUNT=0
"RTN","PSOSPML2",49,0)
 F  S RXNFLL=$O(^TMP("PSOSPSRT",$J,RXNFLL)) Q:RXNFLL=""  D
"RTN","PSOSPML2",50,0)
 . S BATRXIEN=+$G(^TMP("PSOSPSRT",$J,RXNFLL))
"RTN","PSOSPML2",51,0)
 . S NODE0=$G(^PS(58.42,BATCHIEN,"RX",BATRXIEN,0))
"RTN","PSOSPML2",52,0)
 . S RXIEN=+NODE0,FILL=$P(NODE0,"^",2),TYPE=$P(NODE0,"^",3)
"RTN","PSOSPML2",53,0)
 . S RXNUM=$$GET1^DIQ(52,RXIEN,.01)
"RTN","PSOSPML2",54,0)
 . S DRUGIEN=$$GET1^DIQ(52,RXIEN,6,"I")
"RTN","PSOSPML2",55,0)
 . S DRUGNAM=$E($$GET1^DIQ(50,DRUGIEN,.01),1,45)
"RTN","PSOSPML2",56,0)
 . S DRUGDEA=+$$GET1^DIQ(50,DRUGIEN,3)
"RTN","PSOSPML2",57,0)
 . S COUNT=COUNT+1
"RTN","PSOSPML2",58,0)
 . S DSPLINE=$J(COUNT,4)_" "_RXNUM,$E(DSPLINE,22)=$J(FILL,3)_"  "_DRUGNAM
"RTN","PSOSPML2",59,0)
 . S $E(DSPLINE,70)=$J(DRUGDEA,3)
"RTN","PSOSPML2",60,0)
 . S $E(DSPLINE,74)=$S(TYPE="N":"NEW",TYPE="R":"REVISE",TYPE="V":"VOID",1:"")
"RTN","PSOSPML2",61,0)
 . D SETLN^PSOSPMU1("PSOSPML2",DSPLINE,0,0,0)
"RTN","PSOSPML2",62,0)
 . S ^TMP("PSOSPML2",$J,LINE,"RX")=RXIEN_"^"_FILL_"^"_TYPE
"RTN","PSOSPML2",63,0)
 S VALMCNT=LINE
"RTN","PSOSPML2",64,0)
 Q
"RTN","PSOSPML2",65,0)
 ;
"RTN","PSOSPML2",66,0)
SEL ;Process selection of one entry
"RTN","PSOSPML2",67,0)
 N PSOSEL,XQORM,ORD,PSOTITLE,RXINFO,LINE
"RTN","PSOSPML2",68,0)
 S PSOSEL=+$P(XQORNOD(0),"=",2) I 'PSOSEL S VALMSG="Invalid selection!",VALMBCK="R" Q
"RTN","PSOSPML2",69,0)
 S RXINFO=$G(^TMP("PSOSPML2",$J,PSOSEL,"RX"))
"RTN","PSOSPML2",70,0)
 I 'RXINFO S VALMSG="Invalid selection!",VALMBCK="R" Q
"RTN","PSOSPML2",71,0)
 S PSOTITLE=VALM("TITLE")
"RTN","PSOSPML2",72,0)
 D  ; Do used to preserve variables PSOTITLE and LINE
"RTN","PSOSPML2",73,0)
 . N PSOTITLE,LINE D EN^PSOSPML4(+RXINFO,$P(RXINFO,"^",2),$P(RXINFO,"^",3))
"RTN","PSOSPML2",74,0)
 S VALMBCK="R",VALM("TITLE")=$G(PSOTITLE)
"RTN","PSOSPML2",75,0)
 D INIT,HDR
"RTN","PSOSPML2",76,0)
 Q
"RTN","PSOSPML2",77,0)
 ;
"RTN","PSOSPML2",78,0)
EXP(MODE) ; Export Batch
"RTN","PSOSPML2",79,0)
 N DIR,Y,DUOUT,PSOSTATE,PSOASVER,PSOTXRTS
"RTN","PSOSPML2",80,0)
 D FULL^VALM1 S VALMBCK="R"
"RTN","PSOSPML2",81,0)
 ;
"RTN","PSOSPML2",82,0)
 S PSOSTATE=$$GET1^DIQ(58.42,BATCHIEN,1,"I")
"RTN","PSOSPML2",83,0)
 S PSOASVER=$$GET1^DIQ(58.41,PSOSTATE,1,"I")
"RTN","PSOSPML2",84,0)
 S PSOTXRTS=+$$GET1^DIQ(58.41,PSOSTATE,12,"I")
"RTN","PSOSPML2",85,0)
 ;
"RTN","PSOSPML2",86,0)
 I MODE="EXPORT",($$GET1^DIQ(58.42,BATCHIEN,2,"I")'="VD"!PSOTXRTS) D  D ^DIR I $G(DTOUT)!$G(DUOUT)!'Y Q
"RTN","PSOSPML2",87,0)
 . W ! S DIR("A",1)="The Batch will be transmitted to the state of "_$$GET1^DIQ(58.42,BATCHIEN,1)_"."
"RTN","PSOSPML2",88,0)
 . S DIR("A",2)="",DIR("A")="Confirm",DIR(0)="Y",DIR("B")="N"
"RTN","PSOSPML2",89,0)
 I (MODE="VIEW")!(($$GET1^DIQ(58.42,BATCHIEN,2,"I")="VD")&'PSOTXRTS) D  D ^%ZIS K %ZIS Q:POP  U IO
"RTN","PSOSPML2",90,0)
 . D EXMSG($S(MODE="VIEW":0,1:1)) W ! K %ZIS,IOP,POP,ZTSK S %ZIS="QM"
"RTN","PSOSPML2",91,0)
 ;
"RTN","PSOSPML2",92,0)
 ; If export batch type is VOID ONLY, and TRANSMIT RTS is OFF, just display for capture
"RTN","PSOSPML2",93,0)
 I (MODE="VIEW")!(($$GET1^DIQ(58.42,BATCHIEN,2,"I")="VD")&'PSOTXRTS) D
"RTN","PSOSPML2",94,0)
 . W ! D EXPORT^PSOSPMUT(BATCHIEN,"VIEW")
"RTN","PSOSPML2",95,0)
 . D ^%ZISC
"RTN","PSOSPML2",96,0)
 E  D
"RTN","PSOSPML2",97,0)
 . D EXPORT^PSOSPMUT(BATCHIEN,"EXPORT")
"RTN","PSOSPML2",98,0)
 ;
"RTN","PSOSPML2",99,0)
 ; If exporting manually (web upload), update export fields (assumes user will upload file)
"RTN","PSOSPML2",100,0)
 I MODE="EXPORT",$$GET1^DIQ(58.42,BATCHIEN,2,"I")="VD",'PSOTXRTS D
"RTN","PSOSPML2",101,0)
 . D ^%ZISC N DIE,DA,DR S DIE="^PS(58.42,",DA=BATCHIEN
"RTN","PSOSPML2",102,0)
 . S DR="6///<Manual Web Upload>;7////"_DUZ_";9///"_$$NOW^XLFDT()
"RTN","PSOSPML2",103,0)
 . D ^DIE
"RTN","PSOSPML2",104,0)
 ;
"RTN","PSOSPML2",105,0)
 K DIR S DIR("A")="Press Return to continue",DIR(0)="E" D ^DIR
"RTN","PSOSPML2",106,0)
 D HDR
"RTN","PSOSPML2",107,0)
 Q
"RTN","PSOSPML2",108,0)
 ;
"RTN","PSOSPML2",109,0)
EXIT ;
"RTN","PSOSPML2",110,0)
 K ^TMP("PSOSPML2",$J)
"RTN","PSOSPML2",111,0)
 Q
"RTN","PSOSPML2",112,0)
 ;
"RTN","PSOSPML2",113,0)
HELP ; Listman HELP entry-point
"RTN","PSOSPML2",114,0)
 Q
"RTN","PSOSPML2",115,0)
 ;
"RTN","PSOSPML2",116,0)
EXMSG(RTSONLY) ;
"RTN","PSOSPML2",117,0)
 W !!?5,"Before continuing, set up your terminal to capture the ASAP"
"RTN","PSOSPML2",118,0)
 W !?5,"formatted data. On some terminals, this can be done by clicking"
"RTN","PSOSPML2",119,0)
 W !?5,"on the 'File' menu above, then click on 'Logging...' and check"
"RTN","PSOSPML2",120,0)
 W !?5,"'Logging on' and 'Disk'."
"RTN","PSOSPML2",121,0)
 W !!?5,"Note: To avoid undesired wrapping of the data saved to the"
"RTN","PSOSPML2",122,0)
 W !?5,"      file, please enter '0;256;9999' at the 'DEVICE:' prompt."
"RTN","PSOSPML2",123,0)
 I '$G(RTSONLY) Q
"RTN","PSOSPML2",124,0)
 W !!?5,"*********************** IMPORTANT ******************************"
"RTN","PSOSPML2",125,0)
 W !?5,"When you upload this file to the state website, make sure to"
"RTN","PSOSPML2",126,0)
 W !?5,"select the correct import option, usually called ""Back Records"
"RTN","PSOSPML2",127,0)
 W !?5,"Out of the System"", to avoid reporting duplicate records for the"
"RTN","PSOSPML2",128,0)
 W !?5,"patients."
"RTN","PSOSPML2",129,0)
 W !?5,"*****************************************************************"
"RTN","PSOSPML2",130,0)
 Q
"RTN","PSOSPML3")
0^6^B10148038^n/a
"RTN","PSOSPML3",1,0)
PSOSPML3 ;BIRM/MFR - ASAP Definitions Listman Driver ;09/01/12
"RTN","PSOSPML3",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408**;DEC 1997;Build 100
"RTN","PSOSPML3",3,0)
 ;
"RTN","PSOSPML3",4,0)
 N ASAPVER,DIR,DIRUT,DTOUT,X,Y,DIC
"RTN","PSOSPML3",5,0)
 ;
"RTN","PSOSPML3",6,0)
VER ; ASAP Version Prompt
"RTN","PSOSPML3",7,0)
 S ASAPVER=0
"RTN","PSOSPML3",8,0)
 K DIR S DIR("A")="ASAP Version",DIR(0)="SO^1995:Version 1995;3.0:Version 3.0;4.0:Version 4.0;4.1:Version 4.1;4.2:Version 4.2"
"RTN","PSOSPML3",9,0)
 S DIR("?")="American Society for Automation in Pharmacy (ASAP) Version"
"RTN","PSOSPML3",10,0)
 D ^DIR I (X="")!$D(DIRUT)!$D(DTOUT) G EXIT
"RTN","PSOSPML3",11,0)
 S ASAPVER=Y
"RTN","PSOSPML3",12,0)
 ;
"RTN","PSOSPML3",13,0)
 D EN(ASAPVER,0)
"RTN","PSOSPML3",14,0)
 ;
"RTN","PSOSPML3",15,0)
 G VER
"RTN","PSOSPML3",16,0)
 ;
"RTN","PSOSPML3",17,0)
EN(PSOASVER,PSOSHOW) ; Entry point
"RTN","PSOSPML3",18,0)
 N ASAP
"RTN","PSOSPML3",19,0)
 S PSOSHOW=+$G(PSOSHOW)
"RTN","PSOSPML3",20,0)
 D EN^VALM("PSO SPMP VIEW ASAP DEFINITION")
"RTN","PSOSPML3",21,0)
 D FULL^VALM1
"RTN","PSOSPML3",22,0)
 Q
"RTN","PSOSPML3",23,0)
 ;
"RTN","PSOSPML3",24,0)
HDR ; - Builds the Header section
"RTN","PSOSPML3",25,0)
 S VALM("TITLE")=" ASAP Standard Version "_PSOASVER
"RTN","PSOSPML3",26,0)
 Q
"RTN","PSOSPML3",27,0)
 ;
"RTN","PSOSPML3",28,0)
INIT ; Builds the Body section
"RTN","PSOSPML3",29,0)
 N ASAP,LINE,I
"RTN","PSOSPML3",30,0)
 ;
"RTN","PSOSPML3",31,0)
 K ^TMP("PSOSPML3",$J) S VALMCNT=0,LINE=0
"RTN","PSOSPML3",32,0)
 F I=1:1:1000 D RESTORE^VALM10(I)
"RTN","PSOSPML3",33,0)
 I PSOASVER="1995" D
"RTN","PSOSPML3",34,0)
 . D SETSEG95^PSOSPML4("PSOSPML3","") S VALMCNT=LINE
"RTN","PSOSPML3",35,0)
 I PSOASVER'="1995" D
"RTN","PSOSPML3",36,0)
 . D LOADASAP^PSOSPMUT(PSOASVER,.ASAP)
"RTN","PSOSPML3",37,0)
 . D SETSEG("ASAP") S VALMCNT=LINE
"RTN","PSOSPML3",38,0)
 Q
"RTN","PSOSPML3",39,0)
 ;
"RTN","PSOSPML3",40,0)
 ; Note: Recursivity used because of the 'Tree' nature of the ASAP definition
"RTN","PSOSPML3",41,0)
SETSEG(ARRNAM) ; 
"RTN","PSOSPML3",42,0)
 N ARRAY,COLUMN,TYPE,DETLN,SEGID,JUST,I,J,LSTELM
"RTN","PSOSPML3",43,0)
 ;
"RTN","PSOSPML3",44,0)
 S ARRAY=$Q(@ARRNAM) I '+$P(ARRAY,"(",2) Q
"RTN","PSOSPML3",45,0)
 S SEGID=@ARRAY,COLUMN=(($L(ARRAY,",")-1)*4)
"RTN","PSOSPML3",46,0)
 S JUST="" S:'$G(PSOSHOW) JUST=$J("",COLUMN)
"RTN","PSOSPML3",47,0)
 D SETLN^PSOSPMU1("PSOSPML3",JUST_$P(ASAP(SEGID),"^")_" "_$P(ASAP(SEGID),"^",2),0,1,0)
"RTN","PSOSPML3",48,0)
 S LSTELM=+$O(ASAP(SEGID,""),-1)
"RTN","PSOSPML3",49,0)
 F I=1:1:LSTELM D
"RTN","PSOSPML3",50,0)
 . S:'$G(PSOSHOW) JUST=$J("",COLUMN+$L(SEGID)+1)
"RTN","PSOSPML3",51,0)
 . I '$D(ASAP(SEGID,I)) D SETLN^PSOSPMU1("PSOSPML3",JUST_SEGID_$E(100+I,2,3)_" - NOT USED") Q
"RTN","PSOSPML3",52,0)
 . D SETLN^PSOSPMU1("PSOSPML3",JUST_$P(ASAP(SEGID,I),"^")_" - "_$P(ASAP(SEGID,I),"^",2),0,0,1)
"RTN","PSOSPML3",53,0)
 . I '$G(PSOSHOW) Q
"RTN","PSOSPML3",54,0)
 . S DETLN=JUST_"Required: "_$S($P(ASAP(SEGID,I),"^",6)="R":"YES",1:"NO")
"RTN","PSOSPML3",55,0)
 . S TYPE=$P(ASAP(SEGID,I),"^",3)
"RTN","PSOSPML3",56,0)
 . S $E(DETLN,18)="Format: "_$S(TYPE="AN":"Alphanumeric",TYPE="N":"Numeric",TYPE="D":"Decimal",TYPE="DT":"Date (CCYYMMDD)",TYPE="TM":"Time (HHMMSS or HHMM)",1:"")
"RTN","PSOSPML3",57,0)
 . S $E(DETLN,50)="Length: "_$P(ASAP(SEGID,I),"^",4)
"RTN","PSOSPML3",58,0)
 . D SETLN^PSOSPMU1("PSOSPML3",DETLN)
"RTN","PSOSPML3",59,0)
 . F J=1:1 Q:'$D(ASAP(SEGID,I,"DES",J))  D
"RTN","PSOSPML3",60,0)
 . . D SETLN^PSOSPMU1("PSOSPML3",JUST_ASAP(SEGID,I,"DES",J))
"RTN","PSOSPML3",61,0)
 . D SETLN^PSOSPMU1("PSOSPML3"," ")
"RTN","PSOSPML3",62,0)
 D SETSEG(ARRAY)
"RTN","PSOSPML3",63,0)
 Q
"RTN","PSOSPML3",64,0)
 ;
"RTN","PSOSPML3",65,0)
SHOWHID ; Show/Hide Details
"RTN","PSOSPML3",66,0)
 I PSOASVER="1995" D  Q
"RTN","PSOSPML3",67,0)
 . S VALMSG="Details not available for ASAP 1995 version.",VALMBCK="R" W $C(7)
"RTN","PSOSPML3",68,0)
 W ?52,"Please wait..." S PSOSHOW=$S($G(PSOSHOW):0,1:1)
"RTN","PSOSPML3",69,0)
 D INIT,HDR S VALMBCK="R",VALMBG=1
"RTN","PSOSPML3",70,0)
 Q
"RTN","PSOSPML3",71,0)
 ;
"RTN","PSOSPML3",72,0)
EXIT ;
"RTN","PSOSPML3",73,0)
 K ^TMP("PSOSPML3",$J)
"RTN","PSOSPML3",74,0)
 Q
"RTN","PSOSPML3",75,0)
 ;
"RTN","PSOSPML3",76,0)
HELP ; Listman HELP entry-point
"RTN","PSOSPML3",77,0)
 Q
"RTN","PSOSPML4")
0^7^B79601311^n/a
"RTN","PSOSPML4",1,0)
PSOSPML4 ;BIRM/MFR - Prescritpion ASAP Data Listman Driver ;09/01/12
"RTN","PSOSPML4",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408**;DEC 1997;Build 100
"RTN","PSOSPML4",3,0)
 ;
"RTN","PSOSPML4",4,0)
 N DIR,DIRUT,X,PSOQUIT,RXIEN,SCREEN
"RTN","PSOSPML4",5,0)
RX ; - Prescription prompt
"RTN","PSOSPML4",6,0)
 K DIR S DIR(0)="FAO^1:30",DIR("A")=" PRESCRIPTION: ",(DIR("?"),DIR("??"))="^D HLP^PSORXVW1"
"RTN","PSOSPML4",7,0)
 W ! D ^DIR I X=""!$D(DIRUT) G EXIT
"RTN","PSOSPML4",8,0)
 S X=$$UP^XLFSTR(X),PSOQUIT=0
"RTN","PSOSPML4",9,0)
 I $E(X,1,2)'="E." S RXIEN=+$$RXLKP(X) I RXIEN<0 G RX
"RTN","PSOSPML4",10,0)
 I $E(X,1,2)="E." D  I PSOQUIT G RX
"RTN","PSOSPML4",11,0)
 . I $L(X)'=9 W !?5,"The ECME# must be 7 digits long!",$C(7) S PSOQUIT=1 Q
"RTN","PSOSPML4",12,0)
 . S RXIEN=+$$RXNUM^PSOBPSU2($E(X,3,9)) I RXIEN<0 W " ??" S PSOQUIT=1
"RTN","PSOSPML4",13,0)
 ;
"RTN","PSOSPML4",14,0)
 S RXFILL=$$RXFILL^PSOSPMU1(RXIEN) I RXFILL="^" G EXIT
"RTN","PSOSPML4",15,0)
 ;
"RTN","PSOSPML4",16,0)
 S SCREEN=$$SCREEN^PSOSPMUT(RXIEN,RXFILL)
"RTN","PSOSPML4",17,0)
 I +SCREEN D  G RX:$P(SCREEN,"^",3)="E"
"RTN","PSOSPML4",18,0)
 . W !!?1,$S($P(SCREEN,"^",3)="E":"ERROR",1:"WARNING"),": ",$P(SCREEN,"^",2),$C(7) D PAUSE^PSOSPMU1
"RTN","PSOSPML4",19,0)
 ;
"RTN","PSOSPML4",20,0)
 ; The legislation allowing VA to report was published on 02/11/2013
"RTN","PSOSPML4",21,0)
 I $$RXRLDT^PSOBPSUT(RXIEN,RXFILL),$$RXRLDT^PSOBPSUT(RXIEN,RXFILL)<3130211 D  G RX
"RTN","PSOSPML4",22,0)
 . W !!?1,"Only prescription fills dispensed on or after Feb 11, 2013 can be exported.",$C(7)
"RTN","PSOSPML4",23,0)
 ;
"RTN","PSOSPML4",24,0)
 D EN(RXIEN,RXFILL,"N")
"RTN","PSOSPML4",25,0)
 ;
"RTN","PSOSPML4",26,0)
 G RX
"RTN","PSOSPML4",27,0)
 ;
"RTN","PSOSPML4",28,0)
EN(RXIEN,RXFILL,RECTYPE) ; Entry point
"RTN","PSOSPML4",29,0)
 ;
"RTN","PSOSPML4",30,0)
 N ASAP,PSOTTCNT,PSOTPCNT,DFN,RTSDATA,PSONAME,RXSITE,SCHR,TRXTYPE
"RTN","PSOSPML4",31,0)
 ;
"RTN","PSOSPML4",32,0)
 S SCHR="*"
"RTN","PSOSPML4",33,0)
 S DFN=+$$GET1^DIQ(52,RXIEN,2,"I")
"RTN","PSOSPML4",34,0)
 D DEM^VADPT,ADD^VADPT,SETNAME^PSOSPMUT(DFN)
"RTN","PSOSPML4",35,0)
 S RXSITE=$$RXSITE^PSOBPSUT(RXIEN,0)
"RTN","PSOSPML4",36,0)
 S PSOSTATE=$$RXSTATE^PSOBPSUT(RXIEN,0)
"RTN","PSOSPML4",37,0)
 S PSOASVER=$$GET1^DIQ(58.41,PSOSTATE,1,"I") S:PSOASVER="" PSOASVER="4.2"
"RTN","PSOSPML4",38,0)
 S (PSOTTCNT,PSOTPCNT)=0
"RTN","PSOSPML4",39,0)
 S TRXTYPE="S"
"RTN","PSOSPML4",40,0)
 K RTSDATA I RECTYPE="V" D LOADRTS^PSOSPMU1(RXIEN,RXFILL,.RTSDATA)
"RTN","PSOSPML4",41,0)
 D EN^VALM("PSO SPMP VIEW/EXPORT RX")
"RTN","PSOSPML4",42,0)
 D FULL^VALM1
"RTN","PSOSPML4",43,0)
 Q
"RTN","PSOSPML4",44,0)
 ;
"RTN","PSOSPML4",45,0)
HDR ; - Builds the Header section
"RTN","PSOSPML4",46,0)
 N LINE1,LINE2,X
"RTN","PSOSPML4",47,0)
 S VALMHDR(1)="Rx: "_$$GET1^DIQ(52,RXIEN,.01)_" - "_$$GET1^DIQ(52,RXIEN,6)
"RTN","PSOSPML4",48,0)
 S VALMHDR(1)=VALMHDR(1)_"   (Fill: "_$S(RXFILL["P":"Partial "_$E(RXFILL,2,9),'RXFILL:"Original",1:"Refill "_RXFILL)_")"
"RTN","PSOSPML4",49,0)
 S VALMHDR(2)="Patient: "_$$GET1^DIQ(52,RXIEN,2)_"            ASAP Version: "_PSOASVER
"RTN","PSOSPML4",50,0)
 Q
"RTN","PSOSPML4",51,0)
 ;
"RTN","PSOSPML4",52,0)
INIT ; Builds the Body section
"RTN","PSOSPML4",53,0)
 N ASAP,LINE
"RTN","PSOSPML4",54,0)
 ;
"RTN","PSOSPML4",55,0)
 K ^TMP("PSOSPML4",$J) S VALMCNT=0,LINE=0
"RTN","PSOSPML4",56,0)
 I PSOASVER="1995" D
"RTN","PSOSPML4",57,0)
 . D SETSEG95("PSOSPML4",$$ASAP95^PSOASAP0(RXIEN,+RXFILL)) S VALMCNT=LINE
"RTN","PSOSPML4",58,0)
 I PSOASVER'="1995" D
"RTN","PSOSPML4",59,0)
 . D LOADASAP^PSOSPMUT(PSOASVER,.ASAP)
"RTN","PSOSPML4",60,0)
 . D SETSEG("ASAP") S VALMCNT=LINE
"RTN","PSOSPML4",61,0)
 Q
"RTN","PSOSPML4",62,0)
 ;
"RTN","PSOSPML4",63,0)
SETSEG(ARRNAM) ; Sets list body with ASAP (non-1995) info (***USES RECURSIVITY***)
"RTN","PSOSPML4",64,0)
 N ARRAY,SEGID,DETLN,VALUE,RXLN,COLUMN,I,TMPARR,SEGTXT,LSTELM
"RTN","PSOSPML4",65,0)
 S ARRAY=$Q(@ARRNAM) I '+$P(ARRAY,"(",2) Q
"RTN","PSOSPML4",66,0)
 S SEGID=@ARRAY,COLUMN=(($L(ARRAY,",")-1)*4)
"RTN","PSOSPML4",67,0)
 D SETLN^PSOSPMU1("PSOSPML4",$P(ASAP(SEGID),"^")_" "_$P(ASAP(SEGID),"^",2),0,1,0)
"RTN","PSOSPML4",68,0)
 K TMPARR S SEGTXT=SEGID
"RTN","PSOSPML4",69,0)
 S LSTELM=+$O(ASAP(SEGID,""),-1)
"RTN","PSOSPML4",70,0)
 F I=1:1:LSTELM D
"RTN","PSOSPML4",71,0)
 . S VALUE="" I $D(ASAP(SEGID,I)) X "S VALUE=$$"_$P(ASAP(SEGID,I),"^")_"^PSOASAP0()"
"RTN","PSOSPML4",72,0)
 . S SEGTXT=SEGTXT_SCHR_VALUE
"RTN","PSOSPML4",73,0)
 . S RXLN=$S($G(VALUE)'="":VALUE,1:$G(SCHR))
"RTN","PSOSPML4",74,0)
 . S $E(RXLN,40)=$S($D(ASAP(SEGID,I)):$P(ASAP(SEGID,I),"^")_" "_$P(ASAP(SEGID,I),"^",2),1:SEGID_$E(100+I,2,3)_" NOT USED")
"RTN","PSOSPML4",75,0)
 . S TMPARR(I)=RXLN
"RTN","PSOSPML4",76,0)
 S SEGTXT=SEGTXT_$S(PSOASVER="3.0":$$TH13^PSOASAP0(),1:$$TH09^PSOASAP0())
"RTN","PSOSPML4",77,0)
 ;
"RTN","PSOSPML4",78,0)
 F I=1:1 Q:SEGTXT=""  D SETLN^PSOSPMU1("PSOSPML4",$E(SEGTXT,1,80)) S SEGTXT=$E(SEGTXT,81,999)
"RTN","PSOSPML4",79,0)
 F I=1:1 Q:'$D(TMPARR(I))  D SETLN^PSOSPMU1("PSOSPML4",TMPARR(I))
"RTN","PSOSPML4",80,0)
 ;
"RTN","PSOSPML4",81,0)
 D SETSEG(ARRAY)
"RTN","PSOSPML4",82,0)
 Q
"RTN","PSOSPML4",83,0)
SETSEG95(LSTSUB,RECORD) ; Sets list body with ASAP 1995 info
"RTN","PSOSPML4",84,0)
 N DSPL,PSOCOL
"RTN","PSOSPML4",85,0)
 S PSOCOL=$S(LSTSUB="PSOSPML3":1,1:31)
"RTN","PSOSPML4",86,0)
 S:LSTSUB="PSOSPML4" DSPL="VALUE" S $E(DSPL,PSOCOL)="POSITION  DESCRIPTION" D SETLN^PSOSPMU1(LSTSUB,DSPL,0,1,0)
"RTN","PSOSPML4",87,0)
 S DSPL=$E(RECORD,1,3),$E(DSPL,PSOCOL)="(001-003) Transmission Type Identifier" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",88,0)
 S DSPL=$E(RECORD,4,9),$E(DSPL,PSOCOL)="(004-009) Bank Identification Number ('VA'_Site#)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",89,0)
 S DSPL=$E(RECORD,10,11),$E(DSPL,PSOCOL)="(010-011) ASAP Version ('A2': 1995)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",90,0)
 S DSPL=$E(RECORD,12,13),$E(DSPL,PSOCOL)="(012-013) Transaction Code ('01': Controlled Sub)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",91,0)
 S DSPL=$E(RECORD,14,25),$E(DSPL,PSOCOL)="(014-025) Pharmacy DEA Number" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",92,0)
 S DSPL=$E(RECORD,26,45),$E(DSPL,PSOCOL)="(026-045) Patient ID (SSN)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",93,0)
 S DSPL=$E(RECORD,46,48),$E(DSPL,PSOCOL)="(046-048) Patient's Zip Code (first 3 digits)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",94,0)
 S DSPL=$E(RECORD,49,56),$E(DSPL,PSOCOL)="(049-056) Patient's DOB  (Format: YYYYMMDD)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",95,0)
 S DSPL=$E(RECORD,57,57),$E(DSPL,PSOCOL)="(057-057) Patient's Gender ('1':Male/'2':Female)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",96,0)
 S DSPL=$E(RECORD,58,65),$E(DSPL,PSOCOL)="(058-065) Date Filled (Release Date) (YYYYMMDD)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",97,0)
 S DSPL=$E(RECORD,66,72),$E(DSPL,PSOCOL)="(066-072) Prescription Number (last 7 of Rx IEN)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",98,0)
 S DSPL=$E(RECORD,73,74),$E(DSPL,PSOCOL)="(073-074) Rx Fill Number" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",99,0)
 S DSPL=$E(RECORD,75,79),$E(DSPL,PSOCOL)="(075-079) Rx Quantity" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",100,0)
 S DSPL=$E(RECORD,80,82),$E(DSPL,PSOCOL)="(080-082) Rx Days Supply" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",101,0)
 S DSPL=$E(RECORD,83,83),$E(DSPL,PSOCOL)="(083-083) Compound Flag (Always '1':Not Compound)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",102,0)
 S DSPL=$E(RECORD,84,94),$E(DSPL,PSOCOL)="(084-094) NDC (Format: 99999999999)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",103,0)
 S DSPL=$E(RECORD,95,104),$E(DSPL,PSOCOL)="(095-104) Prescriber's DEA #" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",104,0)
 S DSPL=$E(RECORD,105,108),$E(DSPL,PSOCOL)="(105-108) Prescriber's DEA Suffix (Not Used)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",105,0)
 S DSPL=$E(RECORD,109,116),$E(DSPL,PSOCOL)="(109-116) Date Written (Format: YYYYMMDD)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",106,0)
 S DSPL=$E(RECORD,117,118),$E(DSPL,PSOCOL)="(117-118) Refills Authorized" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",107,0)
 S DSPL=$E(RECORD,119,119),$E(DSPL,PSOCOL)="(119-119) Origin Code(0:Unknown,1:Written,2:Phone)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",108,0)
 S DSPL=$E(RECORD,120,121),$E(DSPL,PSOCOL)="(120-121) Customer Location ('03':Outpatient)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",109,0)
 S DSPL=$E(RECORD,122,128),$E(DSPL,PSOCOL)="(122-128) Diagnosis Code (Not Used)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",110,0)
 S DSPL=$E(RECORD,129,138),$E(DSPL,PSOCOL)="(129-138) Alternate Prescriber's # (VA #)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",111,0)
 S DSPL=$E(RECORD,139,153),$E(DSPL,PSOCOL)="(139-153) Patient's Last Name" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",112,0)
 S DSPL=$E(RECORD,154,168),$E(DSPL,PSOCOL)="(154-168) Patient's First Name" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",113,0)
 S DSPL=$E(RECORD,169,198),$E(DSPL,PSOCOL)="(169-198) Patient's Address" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",114,0)
 S DSPL=$E(RECORD,199,200),$E(DSPL,PSOCOL)="(199-200) Patient's State" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",115,0)
 S DSPL=$E(RECORD,201,209),$E(DSPL,PSOCOL)="(201-209) Patient's Zip Code" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",116,0)
 Q
"RTN","PSOSPML4",117,0)
 ;
"RTN","PSOSPML4",118,0)
ASAPDEF ; - Invokes Listman for ASAP Definitions
"RTN","PSOSPML4",119,0)
 N STATE
"RTN","PSOSPML4",120,0)
 S STATE=$$RXSTATE^PSOBPSUT(RXIEN,0)
"RTN","PSOSPML4",121,0)
 S PSOASVER=$$GET1^DIQ(58.41,STATE,1,"I") S:PSOASVER="" PSOASVER="4.2"
"RTN","PSOSPML4",122,0)
 D FULL^VALM1 W !
"RTN","PSOSPML4",123,0)
 D EN^PSOSPML3(PSOASVER,1) S VALMBCK="R"
"RTN","PSOSPML4",124,0)
 Q
"RTN","PSOSPML4",125,0)
 ;
"RTN","PSOSPML4",126,0)
EXPORT ; - Export Rx
"RTN","PSOSPML4",127,0)
 N PSOSTATE,PSOASVER,PSOTXRTS,BATIEN,DIR,X,Y,DIRUT,DUOUT,RECTYPE,SCREEN
"RTN","PSOSPML4",128,0)
 S VALMBCK="R"
"RTN","PSOSPML4",129,0)
 S PSOSTATE=$$RXSTATE^PSOBPSUT(RXIEN,0)
"RTN","PSOSPML4",130,0)
 S PSOASVER=$$GET1^DIQ(58.41,PSOSTATE,1,"I")
"RTN","PSOSPML4",131,0)
 S PSOTXRTS=+$$GET1^DIQ(58.41,PSOSTATE,12,"I")
"RTN","PSOSPML4",132,0)
 ;
"RTN","PSOSPML4",133,0)
 I 'PSOSTATE D  Q
"RTN","PSOSPML4",134,0)
 . S VALMSG="No State on file for Division "_$$GET1^DIQ(59,$$RXSITE^PSOBPSUT(RXIEN,0),.01) W $C(7)
"RTN","PSOSPML4",135,0)
 I '$$SPOK^PSOSPMUT(PSOSTATE) D  Q
"RTN","PSOSPML4",136,0)
 . S VALMSG=$P($$SPOK^PSOSPMUT(PSOSTATE),"^",2) W $C(7)
"RTN","PSOSPML4",137,0)
 D FULL^VALM1
"RTN","PSOSPML4",138,0)
 ;
"RTN","PSOSPML4",139,0)
 S SCREEN=$$SCREEN^PSOSPMUT(RXIEN,RXFILL)
"RTN","PSOSPML4",140,0)
 I +SCREEN D  Q:$P(SCREEN,"^",3)="E"
"RTN","PSOSPML4",141,0)
 . W $C(7) I $P(SCREEN,"^",3)="E" S VALMSG=$P(SCREEN,"^",2) Q
"RTN","PSOSPML4",142,0)
 . W !!,"WARNING: ",$P(SCREEN,"^",2)
"RTN","PSOSPML4",143,0)
 ;
"RTN","PSOSPML4",144,0)
 K DIR S DIR("A")="Record Type"
"RTN","PSOSPML4",145,0)
 S DIR("L",1)="Enter the type of record to be sent for this prescription fill:"
"RTN","PSOSPML4",146,0)
 S DIR("L",2)=" "
"RTN","PSOSPML4",147,0)
 I $$RXRLDT^PSOBPSUT(RXIEN,RXFILL) D
"RTN","PSOSPML4",148,0)
 . S DIR(0)="S^N:NEW;R:REVISE"
"RTN","PSOSPML4",149,0)
 . S DIR("L",3)="  N     NEW"
"RTN","PSOSPML4",150,0)
 . S DIR("L")="  R     REVISE"
"RTN","PSOSPML4",151,0)
 . S DIR("B")="N"
"RTN","PSOSPML4",152,0)
 E  D
"RTN","PSOSPML4",153,0)
 . S DIR(0)="S^V:VOID"
"RTN","PSOSPML4",154,0)
 . S DIR("L")="  V     VOID RECORD"
"RTN","PSOSPML4",155,0)
 . S DIR("B")="V"
"RTN","PSOSPML4",156,0)
 D ^DIR I $D(DUOUT)!($D(DIRUT)) K DIRUT,DUOUT,DIR Q
"RTN","PSOSPML4",157,0)
 S RECTYPE=Y
"RTN","PSOSPML4",158,0)
 ;
"RTN","PSOSPML4",159,0)
 W ! K DIR,DTOUT,DUOUT
"RTN","PSOSPML4",160,0)
 I (RECTYPE'="V")!(PSOASVER'="1995")!PSOTXRTS D
"RTN","PSOSPML4",161,0)
 . S DIR("A",1)="The Prescription Fill will be transmitted to the State",DIR("A",2)=""
"RTN","PSOSPML4",162,0)
 S DIR("A")="Confirm",DIR(0)="Y",DIR("B")="N"
"RTN","PSOSPML4",163,0)
 D ^DIR I $G(DTOUT)!$G(DUOUT)!'Y Q
"RTN","PSOSPML4",164,0)
 ;
"RTN","PSOSPML4",165,0)
 K ^TMP("PSOSPMRX",$J) S ^TMP("PSOSPMRX",$J,PSOSTATE,RXIEN,RXFILL)=RECTYPE
"RTN","PSOSPML4",166,0)
 S BATIEN=$$BLDBAT^PSOSPMU1($S(RECTYPE="V"&(PSOASVER="1995"):"VD",1:"RX"))
"RTN","PSOSPML4",167,0)
 ;
"RTN","PSOSPML4",168,0)
 I (($$GET1^DIQ(58.42,BATIEN,2,"I")="VD")&'PSOTXRTS) D
"RTN","PSOSPML4",169,0)
 . D EXMSG^PSOSPML2(1) W ! K %ZIS,IOP,POP,ZTSK S %ZIS="QM" D ^%ZIS K %ZIS Q:POP  U IO
"RTN","PSOSPML4",170,0)
 . W ! D EXPORT^PSOSPMUT(BATIEN,"VIEW")
"RTN","PSOSPML4",171,0)
 . D ^%ZISC N DIE,DA,DR S DIE="^PS(58.42,",DA=BATIEN
"RTN","PSOSPML4",172,0)
 . S DR="6///<Manual Web Upload>;7////"_DUZ_";9///"_$$NOW^XLFDT()
"RTN","PSOSPML4",173,0)
 . D ^DIE
"RTN","PSOSPML4",174,0)
 E  D EXPORT^PSOSPMUT(BATIEN,"EXPORT")
"RTN","PSOSPML4",175,0)
 ;
"RTN","PSOSPML4",176,0)
 K DIR S DIR("A")="Press Return to continue",DIR(0)="E" D ^DIR
"RTN","PSOSPML4",177,0)
 Q
"RTN","PSOSPML4",178,0)
 ;
"RTN","PSOSPML4",179,0)
VIEW ; - Rx View Action
"RTN","PSOSPML4",180,0)
 N VALMCNT,PSOTITLE
"RTN","PSOSPML4",181,0)
 S PSOTITLE=VALM("TITLE")
"RTN","PSOSPML4",182,0)
 ;
"RTN","PSOSPML4",183,0)
 ; - DO structure used to avoid losing variables RXIEN,RXFILL,LINE,PSOTITLE
"RTN","PSOSPML4",184,0)
 DO
"RTN","PSOSPML4",185,0)
 . N PSOVDA,DA,PS
"RTN","PSOSPML4",186,0)
 . S (PSOVDA,DA)=RXIEN
"RTN","PSOSPML4",187,0)
 . N RXIEN,RXFILL,LINE,PSOTITLE D DP^PSORXVW
"RTN","PSOSPML4",188,0)
 ;
"RTN","PSOSPML4",189,0)
 S VALMBCK="R",VALM("TITLE")=PSOTITLE
"RTN","PSOSPML4",190,0)
 Q
"RTN","PSOSPML4",191,0)
 ;
"RTN","PSOSPML4",192,0)
MP ; - Patient Medication Profile
"RTN","PSOSPML4",193,0)
 N SITE,PATIENT
"RTN","PSOSPML4",194,0)
 D FULL^VALM1 W !
"RTN","PSOSPML4",195,0)
 S SITE=+$$RXSITE^PSOBPSUT(RXIEN,0) S:$G(PSOSITE) SITE=PSOSITE
"RTN","PSOSPML4",196,0)
 S PATIENT=+$$GET1^DIQ(52,RXIEN,2,"I")
"RTN","PSOSPML4",197,0)
 D LST^PSOPMP0(SITE,PATIENT) S VALMBCK="R"
"RTN","PSOSPML4",198,0)
 Q
"RTN","PSOSPML4",199,0)
 ;
"RTN","PSOSPML4",200,0)
EXIT ; Listman Exit
"RTN","PSOSPML4",201,0)
 K ^TMP("PSOSPML4",$J)
"RTN","PSOSPML4",202,0)
 Q
"RTN","PSOSPML4",203,0)
HELP ; Listman Help
"RTN","PSOSPML4",204,0)
 Q
"RTN","PSOSPML4",205,0)
 ;
"RTN","PSOSPML4",206,0)
RXLKP(RXNUM) ; - Peforms Lookup on the PRESCRIPTION file
"RTN","PSOSPML4",207,0)
 N DIC,X,Y,D
"RTN","PSOSPML4",208,0)
 S DIC="^PSRX(",DIC(0)="QE",D="B",X=RXNUM
"RTN","PSOSPML4",209,0)
 D IX^DIC
"RTN","PSOSPML4",210,0)
 Q Y
"RTN","PSOSPML5")
0^28^B25195522^n/a
"RTN","PSOSPML5",1,0)
PSOSPML5 ;BIRM/MFR - SPMP Information Disclosure Report ;04/10/13
"RTN","PSOSPML5",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408**;DEC 1997;Build 100
"RTN","PSOSPML5",3,0)
 ;
"RTN","PSOSPML5",4,0)
 N %DT,BATIEN,DIR,DIRUT,X,Y,DIC,DTOUT,DUOUT,PSOFROM,PSOTO,PSOST,PSOPT
"RTN","PSOSPML5",5,0)
 ;
"RTN","PSOSPML5",6,0)
 ; - Ask for FROM DATE
"RTN","PSOSPML5",7,0)
 S %DT(0)=-DT,%DT="AEP",%DT("A")="     BEGIN DATE: "
"RTN","PSOSPML5",8,0)
 W ! D ^%DT I Y<0!($D(DTOUT)) G EXIT
"RTN","PSOSPML5",9,0)
 S PSOFROM=Y\1-.00001
"RTN","PSOSPML5",10,0)
 ;
"RTN","PSOSPML5",11,0)
 ; - Ask for TO DATE
"RTN","PSOSPML5",12,0)
 K %DT S %DT(0)=PSOFROM+1\1,%DT="AEP",%DT("B")="TODAY",%DT("A")="     END DATE: "
"RTN","PSOSPML5",13,0)
 W ! D ^%DT I Y<0!($D(DTOUT)) G EXIT
"RTN","PSOSPML5",14,0)
 S PSOTO=Y\1+.99999
"RTN","PSOSPML5",15,0)
 ;
"RTN","PSOSPML5",16,0)
 ; - Selection of STATE to print on the Report
"RTN","PSOSPML5",17,0)
 N DIC,X,I,Y K PSOST S PSOST=""
"RTN","PSOSPML5",18,0)
 W !!,?5,"You may select a single or multiple STATES,"
"RTN","PSOSPML5",19,0)
 W !,?5,"or enter ^ALL to select all STATES.",!
"RTN","PSOSPML5",20,0)
 S DIC("B")=$$GET1^DIQ(5,+$O(^PS(58.41,0)),.01)
"RTN","PSOSPML5",21,0)
 S DIC=5,DIC(0)="QEAM",DIC("A")="     Select STATE: "
"RTN","PSOSPML5",22,0)
 F  D ^DIC Q:Y<0  S PSOST(+Y)="" K DIC("B") S DIC("A")="     Another STATE: "
"RTN","PSOSPML5",23,0)
 I X="^ALL" S PSOST="ALL"
"RTN","PSOSPML5",24,0)
 I $G(PSOST)'="ALL",$D(DUOUT)!($D(DTOUT)) Q
"RTN","PSOSPML5",25,0)
 I $G(PSOST)'="ALL",'$O(PSOST(0)) Q
"RTN","PSOSPML5",26,0)
 ;
"RTN","PSOSPML5",27,0)
 ; - Selection of PATIENTS to print on the Report
"RTN","PSOSPML5",28,0)
 N DIC,X,I,Y K PSOPT S PSOPT=""
"RTN","PSOSPML5",29,0)
 W !!,?5,"You may select a single or multiple PATIENTS,"
"RTN","PSOSPML5",30,0)
 W !,?5,"or enter ^ALL to select all PATIENTS.",!
"RTN","PSOSPML5",31,0)
 S DIC(0)="QEAM",DIC("A")="     Select PATIENT: ",DIC("B")="^ALL"
"RTN","PSOSPML5",32,0)
 F  D EN^PSOPATLK S Y=PSOPTLK Q:+Y<1  S PSOPT(+Y)="" K PSOPTLK S DIC("A")="     Another PATIENT: "
"RTN","PSOSPML5",33,0)
 I Y="^ALL" K PSOPT S PSOPT="ALL"
"RTN","PSOSPML5",34,0)
 I $G(PSOPT)'="ALL",$G(PSOPTLK)="^" Q
"RTN","PSOSPML5",35,0)
 I $G(PSOPT)'="ALL",'$O(PSOPT(0)) Q
"RTN","PSOSPML5",36,0)
 ;
"RTN","PSOSPML5",37,0)
 W !!,"Please wait..."
"RTN","PSOSPML5",38,0)
 ;
"RTN","PSOSPML5",39,0)
 D EN(PSOFROM,PSOTO,.PSOST,.PSOPT)
"RTN","PSOSPML5",40,0)
 ;
"RTN","PSOSPML5",41,0)
 G EXIT
"RTN","PSOSPML5",42,0)
 ;
"RTN","PSOSPML5",43,0)
EN(PSOFROM,PSOTO,PSOST,PSOPT) ; Entry point
"RTN","PSOSPML5",44,0)
 D EN^VALM("PSO SPMP DISCLOSURE REPORT")
"RTN","PSOSPML5",45,0)
 D FULL^VALM1
"RTN","PSOSPML5",46,0)
 Q
"RTN","PSOSPML5",47,0)
 ;
"RTN","PSOSPML5",48,0)
HDR ; - Builds the Header section
"RTN","PSOSPML5",49,0)
 S VALMHDR(1)="Date Range: "_$$FMTE^XLFDT(PSOFROM+1\1,2)_" - "_$$FMTE^XLFDT(PSOTO\1,2)
"RTN","PSOSPML5",50,0)
 S VALMHDR(2)="State(s): "_$S($G(PSOST)="ALL":"ALL",$O(PSOST($O(PSOST(0)))):"Multiple",1:$$GET1^DIQ(5,+$O(PSOST(0)),.01))
"RTN","PSOSPML5",51,0)
 S $E(VALMHDR(2),40)="Patient(s): "_$S($G(PSOPT)="ALL":"ALL",$O(PSOPT($O(PSOPT(0)))):"Multiple",1:$$GET1^DIQ(2,+$O(PSOPT(0)),.01))
"RTN","PSOSPML5",52,0)
 S VALMHDR(3)=""
"RTN","PSOSPML5",53,0)
 S VALMHDR(4)="   # DT DISC PATIENT                    Rx#            DRUG"
"RTN","PSOSPML5",54,0)
 Q
"RTN","PSOSPML5",55,0)
 ;
"RTN","PSOSPML5",56,0)
INIT ; Builds the Body section
"RTN","PSOSPML5",57,0)
 N RXCNT,BATDT,I,LINE,TYPE,NODE0,RX,COUNT,DRUGIEN,DRUGNAM,DRUGDEA,DSPLINE,FILL,RECTYPE,DFN,L4SSN
"RTN","PSOSPML5",58,0)
 N BATRXIEN,DISCDT,PATNAM,PATIEN,RXIEN,RXNFLL,RXNUM,STATE
"RTN","PSOSPML5",59,0)
 ;
"RTN","PSOSPML5",60,0)
 K ^TMP("PSOSPSRT",$J)
"RTN","PSOSPML5",61,0)
 S BATDT=PSOFROM
"RTN","PSOSPML5",62,0)
 F  S BATDT=$O(^PS(58.42,"AD",BATDT)) Q:'BATDT!(BATDT>PSOTO)  D
"RTN","PSOSPML5",63,0)
 . S BATIEN=0 F  S BATIEN=$O(^PS(58.42,"AD",BATDT,BATIEN)) Q:'BATIEN  D
"RTN","PSOSPML5",64,0)
 . . S STATE=$$GET1^DIQ(58.42,BATIEN,1,"I")
"RTN","PSOSPML5",65,0)
 . . S DISCDT=$P(^PS(58.42,BATIEN,0),"^",10) I 'DISCDT Q
"RTN","PSOSPML5",66,0)
 . . I $G(PSOST)'="ALL",'$D(PSOST(STATE)) Q
"RTN","PSOSPML5",67,0)
 . . S BATRXIEN=0 F  S BATRXIEN=$O(^PS(58.42,BATIEN,"RX",BATRXIEN)) Q:'BATRXIEN  D
"RTN","PSOSPML5",68,0)
 . . . S NODE0=$G(^PS(58.42,BATIEN,"RX",BATRXIEN,0))
"RTN","PSOSPML5",69,0)
 . . . S RXIEN=+NODE0,FILL=$P(NODE0,"^",2),RECTYPE=$P(NODE0,"^",3),PATIEN=$$GET1^DIQ(52,RXIEN,2,"I")
"RTN","PSOSPML5",70,0)
 . . . I $G(PSOPT)'="ALL",'$D(PSOPT(PATIEN)) Q
"RTN","PSOSPML5",71,0)
 . . . S ^TMP("PSOSPSRT",$J,$$GET1^DIQ(5,STATE,.01),$$GET1^DIQ(52,RXIEN,2)_"^"_PATIEN,RXIEN_"^"_FILL_"^"_BATIEN)=DISCDT\1
"RTN","PSOSPML5",72,0)
 ;
"RTN","PSOSPML5",73,0)
 K ^TMP("PSOSPML5",$J) S (VALMCNT,LINE,RXCNT,COUNT)=0
"RTN","PSOSPML5",74,0)
 S (STATE,PATNAM,RXNFLL)="",COUNT=0
"RTN","PSOSPML5",75,0)
 F  S STATE=$O(^TMP("PSOSPSRT",$J,STATE)) Q:STATE=""  D
"RTN","PSOSPML5",76,0)
 . D SETLN^PSOSPMU1("PSOSPML5","Disclosed to:"_STATE,0,0,0)
"RTN","PSOSPML5",77,0)
 . D SETLN^PSOSPMU1("PSOSPML5","Info Disclosed: Name, DOB, SSN, Prescription Data, Home Address, Phone Number",0,0,0)
"RTN","PSOSPML5",78,0)
 . F  S PATNAM=$O(^TMP("PSOSPSRT",$J,STATE,PATNAM)) Q:PATNAM=""  D
"RTN","PSOSPML5",79,0)
 . . S DFN=$P(PATNAM,"^",2) D DEM^VADPT S L4SSN=$P($P(VADM(2),"^",2),"-",3)
"RTN","PSOSPML5",80,0)
 . . F  S RXNFLL=$O(^TMP("PSOSPSRT",$J,STATE,PATNAM,RXNFLL)) Q:RXNFLL=""  D
"RTN","PSOSPML5",81,0)
 . . . S DISCDT=^TMP("PSOSPSRT",$J,STATE,PATNAM,RXNFLL)
"RTN","PSOSPML5",82,0)
 . . . S RXIEN=+RXNFLL,FILL=$P(RXNFLL,"^",2),RECTYPE=$P(RXNFLL,"^",3)
"RTN","PSOSPML5",83,0)
 . . . S RXNUM=$$GET1^DIQ(52,RXIEN,.01)
"RTN","PSOSPML5",84,0)
 . . . S DRUGNAM=$$GET1^DIQ(52,RXIEN,6)
"RTN","PSOSPML5",85,0)
 . . . S COUNT=COUNT+1
"RTN","PSOSPML5",86,0)
 . . . S DSPLINE=$J(COUNT,4)_" "_$$FMTE^XLFDT(DISCDT,"2Y"),$E(DSPLINE,14)=$E($P(PATNAM,"^"),1,20)_"("_L4SSN_")"
"RTN","PSOSPML5",87,0)
 . . . S $E(DSPLINE,41)=RXNUM,$E(DSPLINE,56)=$E(DRUGNAM,1,25)
"RTN","PSOSPML5",88,0)
 . . . D SETLN^PSOSPMU1("PSOSPML5",DSPLINE,0,0,0)
"RTN","PSOSPML5",89,0)
 . . . S ^TMP("PSOSPML5",$J,COUNT,"RX")=RXIEN_"^"_FILL_"^"_RECTYPE
"RTN","PSOSPML5",90,0)
 . D SETLN^PSOSPMU1("PSOSPML5"," ",0,0,0)
"RTN","PSOSPML5",91,0)
 I '$D(^TMP("PSOSPML5",$J)) D
"RTN","PSOSPML5",92,0)
 . D SETLN^PSOSPMU1("PSOSPML5","No data found for the date range selected.",0,0,0)
"RTN","PSOSPML5",93,0)
 S VALMCNT=LINE
"RTN","PSOSPML5",94,0)
 Q
"RTN","PSOSPML5",95,0)
 ;
"RTN","PSOSPML5",96,0)
SEL ;Process selection of one entry
"RTN","PSOSPML5",97,0)
 N PSOSEL,XQORM,ORD,TITLE,RXINFO,LINE
"RTN","PSOSPML5",98,0)
 S PSOSEL=+$P(XQORNOD(0),"=",2) I 'PSOSEL S VALMSG="Invalid selection!",VALMBCK="R" Q
"RTN","PSOSPML5",99,0)
 S RXINFO=$G(^TMP("PSOSPML5",$J,PSOSEL,"RX"))
"RTN","PSOSPML5",100,0)
 I 'RXINFO S VALMSG="Invalid selection!",VALMBCK="R" Q
"RTN","PSOSPML5",101,0)
 S TITLE=VALM("TITLE")
"RTN","PSOSPML5",102,0)
 D EN^PSOSPML4(+RXINFO,$P(RXINFO,"^",2),$P(RXINFO,"^",3))
"RTN","PSOSPML5",103,0)
 S VALMBCK="R",VALM("TITLE")=TITLE
"RTN","PSOSPML5",104,0)
 D INIT,HDR
"RTN","PSOSPML5",105,0)
 Q
"RTN","PSOSPML5",106,0)
 ;
"RTN","PSOSPML5",107,0)
EXIT ;
"RTN","PSOSPML5",108,0)
 K ^TMP("PSOSPML5",$J)
"RTN","PSOSPML5",109,0)
 Q
"RTN","PSOSPML5",110,0)
 ;
"RTN","PSOSPML5",111,0)
HELP ; Listman HELP entry-point
"RTN","PSOSPML5",112,0)
 Q
"RTN","PSOSPML6")
0^29^B4614418^n/a
"RTN","PSOSPML6",1,0)
PSOSPML6 ;BIRM/MFR - Unmark Rx Fill as 'Administered in Clinic' ;09/30/13
"RTN","PSOSPML6",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408**;DEC 1997;Build 100
"RTN","PSOSPML6",3,0)
 ;
"RTN","PSOSPML6",4,0)
 N DIR,DIRUT,X,PSOQUIT,RXIEN,RXFILL,BATIEN,PSOSTATE
"RTN","PSOSPML6",5,0)
RX ; - Prescription prompt
"RTN","PSOSPML6",6,0)
 K DIR S DIR(0)="FAO^1:30",DIR("A")=" PRESCRIPTION: ",(DIR("?"),DIR("??"))="^D HLP^PSORXVW1"
"RTN","PSOSPML6",7,0)
 W ! D ^DIR I X=""!$D(DIRUT) G EXIT
"RTN","PSOSPML6",8,0)
 S X=$$UP^XLFSTR(X),PSOQUIT=0
"RTN","PSOSPML6",9,0)
 I $E(X,1,2)'="E." S RXIEN=+$$RXLKP(X) I RXIEN<0 G RX
"RTN","PSOSPML6",10,0)
 I $E(X,1,2)="E." D  I PSOQUIT G RX
"RTN","PSOSPML6",11,0)
 . I $L(X)'=9 W !?5,"The ECME# must be 7 digits long!",$C(7) S PSOQUIT=1 Q
"RTN","PSOSPML6",12,0)
 . S RXIEN=+$$RXNUM^PSOBPSU2($E(X,3,9)) I RXIEN<0 W " ??" S PSOQUIT=1
"RTN","PSOSPML6",13,0)
 ;
"RTN","PSOSPML6",14,0)
 S RXFILL=$$RXFILL^PSOSPMU1(RXIEN) I RXFILL="^" G EXIT
"RTN","PSOSPML6",15,0)
 ;
"RTN","PSOSPML6",16,0)
 I '$$ADMCLN^PSOSPMUT(RXIEN,RXFILL) D  G RX
"RTN","PSOSPML6",17,0)
 . W !!," Prescription Fill not marked as 'Administered in Clinic'.",$C(7)
"RTN","PSOSPML6",18,0)
 ;
"RTN","PSOSPML6",19,0)
 W ! K DIR,DTOUT,DUOUT
"RTN","PSOSPML6",20,0)
 S DIR("A")="Unmark prescription fill as 'Administered in Clinic'",DIR("A",2)=""
"RTN","PSOSPML6",21,0)
 S DIR(0)="Y",DIR("B")="N" D ^DIR I $G(DTOUT)!$G(DUOUT)!'Y Q
"RTN","PSOSPML6",22,0)
 ;
"RTN","PSOSPML6",23,0)
 N DIE,DR,DA W !!,"Updating Rx..."
"RTN","PSOSPML6",24,0)
 I 'RXFILL D
"RTN","PSOSPML6",25,0)
 . S DIE="^PSRX(",DA=RXIEN,DR="14///@"
"RTN","PSOSPML6",26,0)
 E  D
"RTN","PSOSPML6",27,0)
 . S DIE="^PSRX("_RXIEN_",1,",DA(1)=RXIEN,DA=RXFILL,DR="23///@"
"RTN","PSOSPML6",28,0)
 D ^DIE H 2 W "done.",$C(7)
"RTN","PSOSPML6",29,0)
 ;
"RTN","PSOSPML6",30,0)
 I '$$RXRLDT^PSOBPSUT(RXIEN,RXFILL) G RX
"RTN","PSOSPML6",31,0)
 ;
"RTN","PSOSPML6",32,0)
 W ! K DIR
"RTN","PSOSPML6",33,0)
 S DIR("A")="Transmit Prescription Fill to the State",DIR(0)="Y",DIR("B")="N"
"RTN","PSOSPML6",34,0)
 D ^DIR I $G(DTOUT)!$G(DUOUT)!'Y G RX
"RTN","PSOSPML6",35,0)
 ;
"RTN","PSOSPML6",36,0)
 S PSOSTATE=$$RXSTATE^PSOBPSUT(RXIEN,0)
"RTN","PSOSPML6",37,0)
 K ^TMP("PSOSPMRX",$J) S ^TMP("PSOSPMRX",$J,PSOSTATE,RXIEN,RXFILL)="N"
"RTN","PSOSPML6",38,0)
 S BATIEN=$$BLDBAT^PSOSPMU1("RX")
"RTN","PSOSPML6",39,0)
 D EXPORT^PSOSPMUT(BATIEN,"EXPORT")
"RTN","PSOSPML6",40,0)
 ;
"RTN","PSOSPML6",41,0)
 G RX
"RTN","PSOSPML6",42,0)
 ;
"RTN","PSOSPML6",43,0)
EXIT Q
"RTN","PSOSPML6",44,0)
 ;
"RTN","PSOSPML6",45,0)
RXLKP(RXNUM) ; - Peforms Lookup on the PRESCRIPTION file
"RTN","PSOSPML6",46,0)
 N DIC,X,Y,D
"RTN","PSOSPML6",47,0)
 S DIC="^PSRX(",DIC(0)="QE",D="B",X=RXNUM
"RTN","PSOSPML6",48,0)
 D IX^DIC
"RTN","PSOSPML6",49,0)
 Q Y
"RTN","PSOSPMSP")
0^9^B143138804^n/a
"RTN","PSOSPMSP",1,0)
PSOSPMSP ;BIRM/MFR - State Prescription Monitoring Program - State Parameters ;09/04/12
"RTN","PSOSPMSP",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408**;DEC 1997;Build 100
"RTN","PSOSPMSP",3,0)
 ;
"RTN","PSOSPMSP",4,0)
EN ; - Menu option entry point
"RTN","PSOSPMSP",5,0)
 N PSOASVER,PSOINCNV,PSOREPFQ,PSOVMSLD,PSOUNXLD,PSOWINLD,PSOPFIX,PSOEXT,PSOFTPIP
"RTN","PSOSPMSP",6,0)
 N PSOFTPUS,PSOFTPPN,PSOFTPDR,PSOTXMOD,PSOQUIT,DIC,DIR,DIRUT,DTOUT,DUOUT,DWPK,LST
"RTN","PSOSPMSP",7,0)
 ;
"RTN","PSOSPMSP",8,0)
 D FULL^VALM1 W !
"RTN","PSOSPMSP",9,0)
 ;
"RTN","PSOSPMSP",10,0)
 W ! K DIC S DIC("A")="Select STATE: ",DIC="^DIC(5,",DIC(0)="QOEAM"
"RTN","PSOSPMSP",11,0)
 I $O(^PS(58.41,0)) S DIC("B")=$O(^PS(58.41,0))
"RTN","PSOSPMSP",12,0)
 K STATEIEN D ^DIC I X=""!(X="^")!$D(DUOUT)!$D(DTOUT) G END
"RTN","PSOSPMSP",13,0)
 K DIC("A") G:Y<0 EN S STATEIEN=+Y
"RTN","PSOSPMSP",14,0)
 ;
"RTN","PSOSPMSP",15,0)
 D DISPLAY(STATEIEN),LOAD(STATEIEN)
"RTN","PSOSPMSP",16,0)
 ;
"RTN","PSOSPMSP",17,0)
 S PSOQUIT=0
"RTN","PSOSPMSP",18,0)
 ;
"RTN","PSOSPMSP",19,0)
ASAPVER ; - ASAP Version
"RTN","PSOSPMSP",20,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",21,0)
 S DIR(0)="58.41,1" S:$G(PSOASVER)'="" DIR("B")=PSOASVER
"RTN","PSOSPMSP",22,0)
 D ^DIR I $D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"ASAPVER")
"RTN","PSOSPMSP",23,0)
 S PSOASVER=Y D CHANGED(STATEIEN,"ASAPVER",PSOASVER)
"RTN","PSOSPMSP",24,0)
 ;
"RTN","PSOSPMSP",25,0)
TRXRTS ; - Auto Transmit Returns (ASAP 1995 only)
"RTN","PSOSPMSP",26,0)
 I PSOASVER'="1995" S PSOTXRTS="" G INCNVET
"RTN","PSOSPMSP",27,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",28,0)
 S DIR(0)="58.41,12" S:$G(PSOTXRTS)'="" DIR("B")=$S(PSOTXRTS:"YES",1:"NO")
"RTN","PSOSPMSP",29,0)
 D ^DIR I X'="",$D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"TRXRTS")
"RTN","PSOSPMSP",30,0)
 S PSOTXRTS=Y D CHANGED(STATEIEN,"TRXRTS",PSOTXRTS)
"RTN","PSOSPMSP",31,0)
 ;
"RTN","PSOSPMSP",32,0)
INCNVET ; Include Non-Veteran Patients
"RTN","PSOSPMSP",33,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",34,0)
 S DIR(0)="58.41,2" S DIR("B")=$S(+$G(PSOINCNV):"YES",1:"NO")
"RTN","PSOSPMSP",35,0)
 D ^DIR I $D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"INCNVET")
"RTN","PSOSPMSP",36,0)
 S PSOINCNV=Y D CHANGED(STATEIEN,"INCNVET",PSOINCNV)
"RTN","PSOSPMSP",37,0)
 ;
"RTN","PSOSPMSP",38,0)
REPFRQ ; Reporting Frequency
"RTN","PSOSPMSP",39,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",40,0)
 S DIR(0)="58.41,3" S:$G(PSOREPFQ) DIR("B")=PSOREPFQ
"RTN","PSOSPMSP",41,0)
 D ^DIR I $D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"REPFRQ")
"RTN","PSOSPMSP",42,0)
 I Y'?1.2N W !,"Invalid Frequency"
"RTN","PSOSPMSP",43,0)
 S PSOREPFQ=Y D CHANGED(STATEIEN,"REPFRQ",PSOREPFQ)
"RTN","PSOSPMSP",44,0)
 ;
"RTN","PSOSPMSP",45,0)
VMSLDIR ; - Open VMS Local Directory
"RTN","PSOSPMSP",46,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",47,0)
 S DIR(0)="58.41,4" S:$G(PSOVMSLD)'="" DIR("B")=PSOVMSLD
"RTN","PSOSPMSP",48,0)
 D ^DIR I X'="",$D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"VMSLDIR")
"RTN","PSOSPMSP",49,0)
 S PSOVMSLD=Y D CHANGED(STATEIEN,"VMSLDIR",PSOVMSLD)
"RTN","PSOSPMSP",50,0)
 ;
"RTN","PSOSPMSP",51,0)
UNXLDIR ; - Unix/Linux Local Directory
"RTN","PSOSPMSP",52,0)
 K DIR,DIRUT,DTOUT,NEWDIR
"RTN","PSOSPMSP",53,0)
 I $G(PSOUNXLD)="" S PSOUNXLD=$$LINUXDIR^PSOSPMU1()
"RTN","PSOSPMSP",54,0)
 S DIR(0)="58.41,15" S:$G(PSOUNXLD)'="" DIR("B")=PSOUNXLD
"RTN","PSOSPMSP",55,0)
 D ^DIR I X'="",$D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"UNXLDIR")
"RTN","PSOSPMSP",56,0)
 I $G(Y)'="",$E(Y,$L(X))'="/" S Y=Y_"/"
"RTN","PSOSPMSP",57,0)
 S PSOUNXLD=Y D CHANGED(STATEIEN,"UNXLDIR",PSOUNXLD)
"RTN","PSOSPMSP",58,0)
 ; 
"RTN","PSOSPMSP",59,0)
 I $$OS^%ZOSV()="UNIX",$$UP^XLFSTR($$VERSION^%ZOSV(1))["CACHE" D
"RTN","PSOSPMSP",60,0)
 . I '$$DIREXIST^PSOSPMU1(PSOUNXLD) D
"RTN","PSOSPMSP",61,0)
 . . W ! S DIR("A",1)="The directory above could not be found."
"RTN","PSOSPMSP",62,0)
 . . S DIR("A",2)=""
"RTN","PSOSPMSP",63,0)
 . . S DIR("A")="Would you like to create it now",DIR(0)="Y",DIR("B")="N"
"RTN","PSOSPMSP",64,0)
 . . D ^DIR I $G(DTOUT)!$G(DUOUT)!'Y W ! Q
"RTN","PSOSPMSP",65,0)
 . . D MAKEDIR^PSOSPMU1(PSOUNXLD) S NEWDIR=1 W !
"RTN","PSOSPMSP",66,0)
 . I '$$DIREXIST^PSOSPMU1(PSOUNXLD) D
"RTN","PSOSPMSP",67,0)
 . . W !!,"Warning: "_$S($G(NEWDIR):"The directory could not be created.",1:"The directory could not be found."),!,$C(7)
"RTN","PSOSPMSP",68,0)
 ;
"RTN","PSOSPMSP",69,0)
WINLDIR ; - Windows/NT Local Directory
"RTN","PSOSPMSP",70,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",71,0)
 S DIR(0)="58.41,16" S:$G(PSOWINLD)'="" DIR("B")=PSOWINLD
"RTN","PSOSPMSP",72,0)
 D ^DIR I X'="",$D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"WINLDIR")
"RTN","PSOSPMSP",73,0)
 S PSOWINLD=Y D CHANGED(STATEIEN,"WINLDIR",PSOWINLD)
"RTN","PSOSPMSP",74,0)
 ;
"RTN","PSOSPMSP",75,0)
FILEPFIX ; - File name Prefix
"RTN","PSOSPMSP",76,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",77,0)
 S DIR(0)="58.41,5" K DIR("B") S:$G(PSOPFIX)'="" DIR("B")=PSOPFIX
"RTN","PSOSPMSP",78,0)
 D ^DIR I X'="",$D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"FILEPFIX")
"RTN","PSOSPMSP",79,0)
 I Y[" " W ?40,"No spaces allowed.",$C(7) G FILEPFIX
"RTN","PSOSPMSP",80,0)
 S PSOPFIX=Y D CHANGED(STATEIEN,"FILEPFIX",PSOPFIX)
"RTN","PSOSPMSP",81,0)
 ;
"RTN","PSOSPMSP",82,0)
FILEEXT ; File Extension
"RTN","PSOSPMSP",83,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",84,0)
 S DIR(0)="58.41,6" S:$G(PSOEXT)'="" DIR("B")=PSOEXT
"RTN","PSOSPMSP",85,0)
 D ^DIR I $D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"FILEEXT")
"RTN","PSOSPMSP",86,0)
 S PSOEXT=Y D CHANGED(STATEIEN,"FILEEXT",PSOEXT)
"RTN","PSOSPMSP",87,0)
 ;
"RTN","PSOSPMSP",88,0)
FTPIP ; - State Server FTP IP Address
"RTN","PSOSPMSP",89,0)
 K DIR,DIRUT,DTOUT,PV
"RTN","PSOSPMSP",90,0)
 S DIR(0)="58.41,7" S:$G(PSOFTPIP)'="" DIR("B")=PSOFTPIP
"RTN","PSOSPMSP",91,0)
 D ^DIR I X'="",$D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"FTPIP")
"RTN","PSOSPMSP",92,0)
 S PSOFTPIP=Y D CHANGED(STATEIEN,"FTPIP",PSOFTPIP)
"RTN","PSOSPMSP",93,0)
 ;
"RTN","PSOSPMSP",94,0)
FTPUSER ; - State Server FTP Username
"RTN","PSOSPMSP",95,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",96,0)
 S DIR(0)="58.41,8" S:$G(PSOFTPUS)'="" DIR("B")=PSOFTPUS
"RTN","PSOSPMSP",97,0)
 D ^DIR I X'="",$D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"FTPUSER")
"RTN","PSOSPMSP",98,0)
 S PSOFTPUS=Y D CHANGED(STATEIEN,"FTPUSER",PSOFTPUS)
"RTN","PSOSPMSP",99,0)
 ;
"RTN","PSOSPMSP",100,0)
FTPPORT ; - State Server FTP Password
"RTN","PSOSPMSP",101,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",102,0)
 S DIR(0)="58.41,9" S:$G(PSOFTPPN)'="" DIR("B")=PSOFTPPN
"RTN","PSOSPMSP",103,0)
 D ^DIR I X'="",$D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"FTPPORT")
"RTN","PSOSPMSP",104,0)
 S PSOFTPPN=Y D CHANGED(STATEIEN,"FTPPORT",PSOFTPPN)
"RTN","PSOSPMSP",105,0)
 ;
"RTN","PSOSPMSP",106,0)
FTPDIR ; - State Server FTP Remote Directory
"RTN","PSOSPMSP",107,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",108,0)
 S DIR(0)="58.41,10" S:$G(PSOFTPDR)'="" DIR("B")=PSOFTPDR
"RTN","PSOSPMSP",109,0)
 D ^DIR I X'="",$D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"FTPDIR")
"RTN","PSOSPMSP",110,0)
 S PSOFTPDR=Y D CHANGED(STATEIEN,"FTPDIR",PSOFTPDR)
"RTN","PSOSPMSP",111,0)
 ;
"RTN","PSOSPMSP",112,0)
TRXMODE ; - Transmission Mode (A - Automatic / M - Manual)
"RTN","PSOSPMSP",113,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",114,0)
 S DIR(0)="58.41,13",DIR("B")=PSOTXMOD
"RTN","PSOSPMSP",115,0)
 D ^DIR I X'="",$D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"TRXMODE")
"RTN","PSOSPMSP",116,0)
 S PSOTXMOD=Y D CHANGED(STATEIEN,"TRXMODE",PSOTXMOD)
"RTN","PSOSPMSP",117,0)
 I PSOTXMOD="M" G EXIT
"RTN","PSOSPMSP",118,0)
 ;
"RTN","PSOSPMSP",119,0)
PRVKEY ; - Secure FTP Private Key
"RTN","PSOSPMSP",120,0)
 I PSOTXMOD="M" G TRXMODE
"RTN","PSOSPMSP",121,0)
 W !,"SFTP PRIVATE KEY TEXT: ",$S($O(^TMP("PSOPRVKEY",$J,0)):"<hidden>",1:"<empty>")
"RTN","PSOSPMSP",122,0)
 K DIR S DIR(0)="Y",DIR("A")="Edit"
"RTN","PSOSPMSP",123,0)
 S DIR("B")=$S($O(^TMP("PSOPRVKEY",$J,0)):"NO",1:"YES")
"RTN","PSOSPMSP",124,0)
 D ^DIR I $D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"PRVKEY")
"RTN","PSOSPMSP",125,0)
 I $G(Y) D
"RTN","PSOSPMSP",126,0)
 . K DIC S DWPK=1,DIC="^TMP(""PSOPRVKEY"","_$J_"," D EN^DIWE
"RTN","PSOSPMSP",127,0)
 . I X="^" G EXIT
"RTN","PSOSPMSP",128,0)
 . D CHANGED(STATEIEN,"PRVKEY")
"RTN","PSOSPMSP",129,0)
 ;
"RTN","PSOSPMSP",130,0)
PUBKEY ; - Secure FTP Public Key
"RTN","PSOSPMSP",131,0)
 I PSOTXMOD="M" G TRXMODE
"RTN","PSOSPMSP",132,0)
 W !,"SFTP PUBLIC KEY TEXT: ",$S($O(^TMP("PSOPUBKEY",$J,0)):"<hidden>",1:"<empty>")
"RTN","PSOSPMSP",133,0)
 K DIR S DIR(0)="Y",DIR("A")="Edit"
"RTN","PSOSPMSP",134,0)
 S DIR("B")=$S($O(^TMP("PSOPUBKEY",$J,0)):"NO",1:"YES")
"RTN","PSOSPMSP",135,0)
 D ^DIR I $D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"PUBKEY")
"RTN","PSOSPMSP",136,0)
 I $G(Y) D
"RTN","PSOSPMSP",137,0)
 . K DIC S DWPK=1,DIC="^TMP(""PSOPUBKEY"","_$J_"," D EN^DIWE
"RTN","PSOSPMSP",138,0)
 . I X="^" G EXIT
"RTN","PSOSPMSP",139,0)
 . D CHANGED(STATEIEN,"PUBKEY")
"RTN","PSOSPMSP",140,0)
 ;
"RTN","PSOSPMSP",141,0)
EXIT ; Exit
"RTN","PSOSPMSP",142,0)
 ;
"RTN","PSOSPMSP",143,0)
END S VALMBCK="R" Q
"RTN","PSOSPMSP",144,0)
 ;
"RTN","PSOSPMSP",145,0)
DISPLAY(STATE) ; - Displays the current Parameters
"RTN","PSOSPMSP",146,0)
 N ZNODE,FNODE,F1NODE,X
"RTN","PSOSPMSP",147,0)
 S ZNODE=$G(^PS(58.41,STATE,0)),FNODE=$G(^PS(58.41,STATE,"FILE")),F1NODE=$G(^PS(58.41,STATE,"FILE1"))
"RTN","PSOSPMSP",148,0)
 W ! I ZNODE="" Q
"RTN","PSOSPMSP",149,0)
 W !?5,"ASAP VERSION                : ",$P(ZNODE,"^",2)
"RTN","PSOSPMSP",150,0)
 I $P(ZNODE,"^",2)="1995" D
"RTN","PSOSPMSP",151,0)
 . W !?5,"TRANSMIT RETURN TO STOCK    : ",$S($P(ZNODE,"^",5):"YES",1:"NO")
"RTN","PSOSPMSP",152,0)
 W !?5,"INCLUDE NON-VETERAN PATIENTS: ",$S($P(ZNODE,"^",3):"YES",1:"NO")
"RTN","PSOSPMSP",153,0)
 W !?5,"REPORTING FREQUENCY IN DAYS : ",$P(ZNODE,"^",4)
"RTN","PSOSPMSP",154,0)
 W !?5,"OPEN VMS LOCAL DIRECTORY    : ",$P(FNODE,"^",1)
"RTN","PSOSPMSP",155,0)
 W !?5,"UNIX/LINUX LOCAL DIRECTORY  : ",$P(F1NODE,"^",1)
"RTN","PSOSPMSP",156,0)
 W !?5,"WINDOWS/NT LOCAL DIRECTORY  : ",$P(F1NODE,"^",2)
"RTN","PSOSPMSP",157,0)
 W !?5,"FILE NAME PREFIX            : ",$P(FNODE,"^",2)
"RTN","PSOSPMSP",158,0)
 W !?5,"FILE EXTENSION              : ",$P(FNODE,"^",3)
"RTN","PSOSPMSP",159,0)
 W !?5,"STATE SFTP SERVER IP ADDRESS: ",$P(FNODE,"^",4)
"RTN","PSOSPMSP",160,0)
 W !?5,"STATE SFTP SERVER USERNAME  : ",$P(FNODE,"^",5)
"RTN","PSOSPMSP",161,0)
 W !?5,"STATE SFTP SERVER PORT #    : ",$P(FNODE,"^",6)
"RTN","PSOSPMSP",162,0)
 W !?5,"STATE SFTP SERVER DIRECTORY : ",$P(FNODE,"^",7)
"RTN","PSOSPMSP",163,0)
 W !?5,"SFTP TRANSMISSION MODE      : ",$$GET1^DIQ(58.41,STATE,13)
"RTN","PSOSPMSP",164,0)
 I $P(ZNODE,"^",6)="A" D
"RTN","PSOSPMSP",165,0)
 . W !?5,"SFTP PRIVATE KEY TEXT       : ",$S($D(^PS(58.41,STATE,"PRVKEY",1)):"<hidden>",1:"<empty>")
"RTN","PSOSPMSP",166,0)
 . W !?5,"SFTP PUBLIC KEY TEXT        : ",$S($D(^PS(58.41,STATE,"PUBKEY",1)):"<hidden>",1:"<empty>")
"RTN","PSOSPMSP",167,0)
 W !
"RTN","PSOSPMSP",168,0)
 Q 
"RTN","PSOSPMSP",169,0)
 ;
"RTN","PSOSPMSP",170,0)
GOTO(INPUT,HOME) ; - Directed up-arrow
"RTN","PSOSPMSP",171,0)
 N GOTO,I,TAG,TRGT,OK2DEL
"RTN","PSOSPMSP",172,0)
 I INPUT="@",HOME="ASAPVER",$D(^PS(58.41,STATEIEN)) D  Q GOTO
"RTN","PSOSPMSP",173,0)
 . W ! S DIR(0)="Y",DIR("B")="NO",DIR("A")="DELETE SPMP STATE PARAMETERS FOR "_$$GET1^DIQ(5,STATEIEN,.01)
"RTN","PSOSPMSP",174,0)
 . D ^DIR I $D(DIRUT)!$D(DTOUT)!(Y=0) S GOTO=HOME W ! Q
"RTN","PSOSPMSP",175,0)
 . N DIK,DA S DIK="^PS(58.41,",DA=STATEIEN D ^DIK S GOTO="EN"
"RTN","PSOSPMSP",176,0)
 ;
"RTN","PSOSPMSP",177,0)
 S OK2DEL="TRXRTS^FTPDIR^FILEPFIX^VMSLDIR^UNXLDIR^WINLDIR^FTPPORT"
"RTN","PSOSPMSP",178,0)
 I INPUT="@",OK2DEL'[HOME D  Q HOME
"RTN","PSOSPMSP",179,0)
 . W " Cannot delete field",$C(7)
"RTN","PSOSPMSP",180,0)
 I INPUT="@" D  Q HOME
"RTN","PSOSPMSP",181,0)
 . S:HOME="FTPDIR" PSOFTPDR="" S:HOME="FILEPFIX" PSOPFIX=""
"RTN","PSOSPMSP",182,0)
 . S:HOME="VMSLDIR" PSOVMSLD="" S:HOME="UNXLDIR" PSOUNXLD="" S:HOME="WINLDIR" PSOWINLD=""
"RTN","PSOSPMSP",183,0)
 . S:HOME="FTPPORT" PSOFTPPN=""
"RTN","PSOSPMSP",184,0)
 . D SAVE(STATEIEN,HOME,"")
"RTN","PSOSPMSP",185,0)
 ;
"RTN","PSOSPMSP",186,0)
 I $P(INPUT,"^",2)="" S PSOQUIT=1 Q "EXIT"
"RTN","PSOSPMSP",187,0)
 ;
"RTN","PSOSPMSP",188,0)
 S TRGT=$$UP^XLFSTR($P(INPUT,"^",2))
"RTN","PSOSPMSP",189,0)
 S TAG(1)="ASAP VERSION^ASAPVER"
"RTN","PSOSPMSP",190,0)
 S:PSOASVER="1995" TAG(2)="TRANSMIT RETURN TO STOCK^TRXRTS"
"RTN","PSOSPMSP",191,0)
 S TAG(3)="INCLUDE NON-VETERAN PATIENTS^INCNVET"
"RTN","PSOSPMSP",192,0)
 S TAG(4)="REPORTING FREQUENCY IN DAYS^REPFRQ"
"RTN","PSOSPMSP",193,0)
 S TAG(5)="OPEN VMS LOCAL DIRECTORY^VMSLDIR"
"RTN","PSOSPMSP",194,0)
 S TAG(6)="UNIX/LINUX LOCAL DIRECTORY^UNXLDIR"
"RTN","PSOSPMSP",195,0)
 S TAG(7)="WINDOWS/NT LOCAL DIRECTORY^WINLDIR"
"RTN","PSOSPMSP",196,0)
 S TAG(8)="FILE NAME PREFIX^FILEPFIX"
"RTN","PSOSPMSP",197,0)
 S TAG(9)="FILE EXTENSION^FILEEXT"
"RTN","PSOSPMSP",198,0)
 S TAG(10)="STATE SFTP SERVER IP ADDRESS^FTPIP"
"RTN","PSOSPMSP",199,0)
 S TAG(11)="STATE SFTP SERVER USERNAME^FTPUSER"
"RTN","PSOSPMSP",200,0)
 S TAG(12)="STATE SFTP SERVER PORT #^FTPPORT"
"RTN","PSOSPMSP",201,0)
 S TAG(13)="STATE SFTP SERVER DIRECTORY^FTPDIR"
"RTN","PSOSPMSP",202,0)
 S TAG(14)="SFTP TRANSMISSION MODE^TRXMODE"
"RTN","PSOSPMSP",203,0)
 S:PSOTXMOD="A" TAG(15)="SFTP PRIVATE KEY TEXT^PRVKEY"
"RTN","PSOSPMSP",204,0)
 S:PSOTXMOD="A" TAG(16)="SFTP PUBLIC KEY TEXT^PUBKEY"
"RTN","PSOSPMSP",205,0)
 ;
"RTN","PSOSPMSP",206,0)
 S GOTO=HOME,I=""
"RTN","PSOSPMSP",207,0)
 F  S I=$O(TAG(I)) Q:'I  S TAG=TAG(I) I $E($P(TAG,"^"),1,$L(TRGT))=TRGT S GOTO=$P(TAG,"^",2) Q
"RTN","PSOSPMSP",208,0)
 ;
"RTN","PSOSPMSP",209,0)
 Q GOTO
"RTN","PSOSPMSP",210,0)
 ;
"RTN","PSOSPMSP",211,0)
LOAD(STATE) ; Loading Factory/Division/User preferences
"RTN","PSOSPMSP",212,0)
 ;Input : STATE    - Pointer to STATE file (#5)
"RTN","PSOSPMSP",213,0)
 ;Output: PSOASVER - ASAP Version
"RTN","PSOSPMSP",214,0)
 ;        PSOTXRTS  - Transmit Return To Stock fills
"RTN","PSOSPMSP",215,0)
 ;        PSOINCNV - Exclude Non-Veteran Patients
"RTN","PSOSPMSP",216,0)
 ;        PSOREPFQ - Reporting Frequency
"RTN","PSOSPMSP",217,0)
 ;        PSOVMSLD - Open VMS Local Directory
"RTN","PSOSPMSP",218,0)
 ;        PSOUNXLD - Unix/Linux Local Directory
"RTN","PSOSPMSP",219,0)
 ;        PSOWINLD - Windows/NT Local Directory
"RTN","PSOSPMSP",220,0)
 ;        PSOPFIX  - File Name Prefix
"RTN","PSOSPMSP",221,0)
 ;        PSOEXT   - File Extension (.TXT or .DAT)
"RTN","PSOSPMSP",222,0)
 ;        PSOFTPIP - State Server FTP IP Address
"RTN","PSOSPMSP",223,0)
 ;        PSOFTPUS - State Server FTP Username
"RTN","PSOSPMSP",224,0)
 ;        PSOFTPPN - State Server FTP Password
"RTN","PSOSPMSP",225,0)
 ;        PSOFTPDR - State Server FTP Directory
"RTN","PSOSPMSP",226,0)
 ;        PSOTXMOD - Transmission Mode ('A' or 'M')
"RTN","PSOSPMSP",227,0)
 ;        ^TMP("PSOPRVKEY",$J) - SFTP Private Key Text
"RTN","PSOSPMSP",228,0)
 ;        ^TMP("PSOPUBKEY",$J) - SFTP Public Key Text
"RTN","PSOSPMSP",229,0)
 ;
"RTN","PSOSPMSP",230,0)
 K PSOASVER,PSOINCNV,PSOREPFQ,PSOVMSLD,PSOUNXLD,PSOWINLD,PSOPFIX,PSOEXT,PSOFTPIP,PSOFTPUS
"RTN","PSOSPMSP",231,0)
 K PSOFTPPN,PSOFTPDR
"RTN","PSOSPMSP",232,0)
 ;
"RTN","PSOSPMSP",233,0)
 N X,ZNODE,FNODE,F1NODE,KEY,LINE
"RTN","PSOSPMSP",234,0)
 ;
"RTN","PSOSPMSP",235,0)
 ; - Defaults
"RTN","PSOSPMSP",236,0)
 S PSOASVER="4.2"
"RTN","PSOSPMSP",237,0)
 S PSOTXRTS="0"
"RTN","PSOSPMSP",238,0)
 S PSOINCNV=0
"RTN","PSOSPMSP",239,0)
 S PSOREPFQ="1"
"RTN","PSOSPMSP",240,0)
 S PSOVMSLD=""
"RTN","PSOSPMSP",241,0)
 S PSOUNXLD=""
"RTN","PSOSPMSP",242,0)
 S PSOWINLD=""
"RTN","PSOSPMSP",243,0)
 S PSOPFIX=""
"RTN","PSOSPMSP",244,0)
 S PSOEXT=".DAT"
"RTN","PSOSPMSP",245,0)
 S PSOFTPIP=""
"RTN","PSOSPMSP",246,0)
 S PSOFTPUS=""
"RTN","PSOSPMSP",247,0)
 S PSOFTPPN=""
"RTN","PSOSPMSP",248,0)
 S PSOFTPDR=""
"RTN","PSOSPMSP",249,0)
 S PSOTXMOD="A"
"RTN","PSOSPMSP",250,0)
 K ^TMP("PSOPRVKEY",$J)
"RTN","PSOSPMSP",251,0)
 K ^TMP("PSOPUBKEY",$J)
"RTN","PSOSPMSP",252,0)
 ;
"RTN","PSOSPMSP",253,0)
 ; - State's parameters
"RTN","PSOSPMSP",254,0)
 I $D(^PS(58.41,STATE,0)) D
"RTN","PSOSPMSP",255,0)
 . S ZNODE=$G(^PS(58.41,STATE,0)) I $P(ZNODE,"^",1)'=STATE Q
"RTN","PSOSPMSP",256,0)
 . S FNODE=$G(^PS(58.41,STATE,"FILE")),F1NODE=$G(^PS(58.41,STATE,"FILE1"))
"RTN","PSOSPMSP",257,0)
 . S:$P(ZNODE,"^",2)'="" PSOASVER=$P(ZNODE,"^",2)
"RTN","PSOSPMSP",258,0)
 . S:$P(ZNODE,"^",3)'="" PSOINCNV=$P(ZNODE,"^",3)
"RTN","PSOSPMSP",259,0)
 . S:$P(ZNODE,"^",4)'="" PSOREPFQ=$P(ZNODE,"^",4)
"RTN","PSOSPMSP",260,0)
 . S:$P(ZNODE,"^",5)'="" PSOTXRTS=$P(ZNODE,"^",5)
"RTN","PSOSPMSP",261,0)
 . S:$P(ZNODE,"^",6)'="" PSOTXMOD=$P(ZNODE,"^",6)
"RTN","PSOSPMSP",262,0)
 . S:$P(FNODE,"^",1)'="" PSOVMSLD=$P(FNODE,"^",1)
"RTN","PSOSPMSP",263,0)
 . S:$P(F1NODE,"^",1)'="" PSOUNXLD=$P(F1NODE,"^",1)
"RTN","PSOSPMSP",264,0)
 . S:$P(F1NODE,"^",2)'="" PSOWINLD=$P(F1NODE,"^",2)
"RTN","PSOSPMSP",265,0)
 . S:$P(FNODE,"^",2)'="" PSOPFIX=$P(FNODE,"^",2)
"RTN","PSOSPMSP",266,0)
 . S:$P(FNODE,"^",3)'="" PSOEXT=$P(FNODE,"^",3)
"RTN","PSOSPMSP",267,0)
 . S:$P(FNODE,"^",4)'="" PSOFTPIP=$P(FNODE,"^",4)
"RTN","PSOSPMSP",268,0)
 . S:$P(FNODE,"^",5)'="" PSOFTPUS=$P(FNODE,"^",5)
"RTN","PSOSPMSP",269,0)
 . S:$P(FNODE,"^",6)'="" PSOFTPPN=$P(FNODE,"^",6)
"RTN","PSOSPMSP",270,0)
 . S:$P(FNODE,"^",7)'="" PSOFTPDR=$P(FNODE,"^",7)
"RTN","PSOSPMSP",271,0)
 . F KEY="PRVKEY","PUBKEY" D
"RTN","PSOSPMSP",272,0)
 . . S ^TMP("PSO"_KEY,$J,0)=$G(^PS(58.41,STATE,KEY,0))
"RTN","PSOSPMSP",273,0)
 . . F LINE=1:1 Q:'$D(^PS(58.41,STATE,KEY,LINE))  D
"RTN","PSOSPMSP",274,0)
 . . . S ^TMP("PSO"_KEY,$J,LINE,0)=$$DECRYP^XUSRB1(^PS(58.41,STATE,KEY,LINE,0))
"RTN","PSOSPMSP",275,0)
 Q
"RTN","PSOSPMSP",276,0)
 ;
"RTN","PSOSPMSP",277,0)
CHANGED(STATE,FIELD,VALUE) ; - If field was change Automatically Invokes SAVE
"RTN","PSOSPMSP",278,0)
 ;Input : STATE - Pointer to STATE file (#5)
"RTN","PSOSPMSP",279,0)
 ;        FIELD - Field ID
"RTN","PSOSPMSP",280,0)
 ;        VALUE - Field Value
"RTN","PSOSPMSP",281,0)
 ;
"RTN","PSOSPMSP",282,0)
 N CHANGED,ZNODE,FNODE,F1NODE,LINE
"RTN","PSOSPMSP",283,0)
 ;
"RTN","PSOSPMSP",284,0)
 S CHANGED=0
"RTN","PSOSPMSP",285,0)
 ; - Saved Division's parameters
"RTN","PSOSPMSP",286,0)
 S ZNODE=$G(^PS(58.41,STATE,0)),FNODE=$G(^PS(58.41,STATE,"FILE")),F1NODE=$G(^PS(58.41,STATE,"FILE1"))
"RTN","PSOSPMSP",287,0)
 ;
"RTN","PSOSPMSP",288,0)
 I FIELD="ASAPVER",VALUE'=$P(ZNODE,"^",2) S CHANGED=1
"RTN","PSOSPMSP",289,0)
 I FIELD="TRXRTS",VALUE'=$P(ZNODE,"^",5) S CHANGED=1
"RTN","PSOSPMSP",290,0)
 I FIELD="INCNVET",VALUE'=$P(ZNODE,"^",3) S CHANGED=1
"RTN","PSOSPMSP",291,0)
 I FIELD="VMSLDIR",VALUE'=$P(FNODE,"^",1) S CHANGED=1
"RTN","PSOSPMSP",292,0)
 I FIELD="UNXLDIR",VALUE'=$P(F1NODE,"^",1) S CHANGED=1
"RTN","PSOSPMSP",293,0)
 I FIELD="WINLDIR",VALUE'=$P(F1NODE,"^",2) S CHANGED=1
"RTN","PSOSPMSP",294,0)
 I FIELD="REPFRQ",VALUE'=$P(ZNODE,"^",4) S CHANGED=1
"RTN","PSOSPMSP",295,0)
 I FIELD="FILEPFIX",VALUE'=$P(FNODE,"^",2) S CHANGED=1
"RTN","PSOSPMSP",296,0)
 I FIELD="FILEEXT",VALUE'=$P(FNODE,"^",3) S CHANGED=1
"RTN","PSOSPMSP",297,0)
 I FIELD="FTPIP",VALUE'=$P(FNODE,"^",4) S CHANGED=1
"RTN","PSOSPMSP",298,0)
 I FIELD="FTPUSER",VALUE'=$P(FNODE,"^",5) S CHANGED=1
"RTN","PSOSPMSP",299,0)
 I FIELD="FTPPORT",VALUE'=$P(FNODE,"^",6) S CHANGED=1
"RTN","PSOSPMSP",300,0)
 I FIELD="FTPDIR",VALUE'=$P(FNODE,"^",7) S CHANGED=1
"RTN","PSOSPMSP",301,0)
 I FIELD="TRXMODE",VALUE'=$P(ZNODE,"^",6) S CHANGED=1
"RTN","PSOSPMSP",302,0)
 I FIELD="PRVKEY"!(FIELD="PUBKEY") D
"RTN","PSOSPMSP",303,0)
 . I $P($G(^PS(58.41,STATE,FIELD,0)),"^",1,5)'=$P($G(^TMP("PSO"_FIELD,$J,0)),"^",1,5) S CHANGED=1 Q
"RTN","PSOSPMSP",304,0)
 . F LINE=1:1 Q:'$D(^PS(58.41,STATE,FIELD,LINE))  D  I $G(CHANGED) Q
"RTN","PSOSPMSP",305,0)
 . . I $$DECRYP^XUSRB1(^PS(58.41,STATE,FIELD,LINE,0))'=$G(^TMP("PSO"_FIELD,$J,LINE,0)) S CHANGED=1
"RTN","PSOSPMSP",306,0)
 ;
"RTN","PSOSPMSP",307,0)
 I CHANGED D SAVE(STATE,FIELD,$G(VALUE))
"RTN","PSOSPMSP",308,0)
 Q
"RTN","PSOSPMSP",309,0)
 ;
"RTN","PSOSPMSP",310,0)
SAVE(STATE,FIELD,VALUE) ; - Saves preferences by Sate
"RTN","PSOSPMSP",311,0)
 ;Input : STATE - Pointer to STATE file (#5)
"RTN","PSOSPMSP",312,0)
 ;        FIELD - Field ID
"RTN","PSOSPMSP",313,0)
 ;        VALUE - Field Value
"RTN","PSOSPMSP",314,0)
 ;
"RTN","PSOSPMSP",315,0)
 N DIE,DR,DA,KEY,LINE
"RTN","PSOSPMSP",316,0)
 ;
"RTN","PSOSPMSP",317,0)
 I '$D(^PS(58.41,STATE)) D
"RTN","PSOSPMSP",318,0)
 . N %,DIC,DR,DA,X,DINUM,DLAYGO,DD,DO
"RTN","PSOSPMSP",319,0)
 . S DIC="^PS(58.41,",(DINUM,X)=STATE,DIC(0)=""
"RTN","PSOSPMSP",320,0)
 . K DD,DO D FILE^DICN K DD,DO
"RTN","PSOSPMSP",321,0)
 ;
"RTN","PSOSPMSP",322,0)
 I FIELD="ASAPVER" S DR="1///"_PSOASVER
"RTN","PSOSPMSP",323,0)
 I FIELD="TRXRTS" S DR="12////"_PSOTXRTS
"RTN","PSOSPMSP",324,0)
 I FIELD="INCNVET" S DR="2///"_PSOINCNV
"RTN","PSOSPMSP",325,0)
 I FIELD="VMSLDIR" S DR="4////"_$S(PSOVMSLD="":"@",1:PSOVMSLD)
"RTN","PSOSPMSP",326,0)
 I FIELD="UNXLDIR" S DR="15////"_$S(PSOUNXLD="":"@",1:PSOUNXLD)
"RTN","PSOSPMSP",327,0)
 I FIELD="WINLDIR" S DR="16////"_$S(PSOWINLD="":"@",1:PSOWINLD)
"RTN","PSOSPMSP",328,0)
 I FIELD="REPFRQ" S DR="3///"_PSOREPFQ
"RTN","PSOSPMSP",329,0)
 I FIELD="FILEPFIX" S DR="5////"_$S(PSOPFIX="":"@",1:PSOPFIX)
"RTN","PSOSPMSP",330,0)
 I FIELD="FILEEXT" S DR="6///"_PSOEXT
"RTN","PSOSPMSP",331,0)
 I FIELD="FTPIP" S DR="7///"_PSOFTPIP
"RTN","PSOSPMSP",332,0)
 I FIELD="FTPUSER" S DR="8///"_PSOFTPUS
"RTN","PSOSPMSP",333,0)
 I FIELD="FTPPORT" S DR="9////"_$S(PSOFTPPN="":"@",1:PSOFTPPN)
"RTN","PSOSPMSP",334,0)
 I FIELD="FTPDIR" S DR="10////"_$S(PSOFTPDR="":"@",1:PSOFTPDR)
"RTN","PSOSPMSP",335,0)
 I FIELD="TRXMODE" S DR="13////"_PSOTXMOD
"RTN","PSOSPMSP",336,0)
 I FIELD="PRVKEY"!(FIELD="PUBKEY") D
"RTN","PSOSPMSP",337,0)
 . K ^PS(58.41,STATE,FIELD)
"RTN","PSOSPMSP",338,0)
 . I '$D(^TMP("PSO"_FIELD,$J,0)) Q
"RTN","PSOSPMSP",339,0)
 . S ^PS(58.41,STATE,FIELD,0)=^TMP("PSO"_FIELD,$J,0)
"RTN","PSOSPMSP",340,0)
 . F LINE=1:1 Q:'$D(^TMP("PSO"_FIELD,$J,LINE))  D
"RTN","PSOSPMSP",341,0)
 . . S ^PS(58.41,STATE,FIELD,LINE,0)=$$ENCRYP^XUSRB1(^TMP("PSO"_FIELD,$J,LINE,0))
"RTN","PSOSPMSP",342,0)
 E  D
"RTN","PSOSPMSP",343,0)
 . S DIE="^PS(58.41,",DA=STATE D ^DIE
"RTN","PSOSPMSP",344,0)
 Q
"RTN","PSOSPMU1")
0^10^B104921271^n/a
"RTN","PSOSPMU1",1,0)
PSOSPMU1 ;BIRM/MFR - State Prescription Monitoring Program Utilities ;10/07/12
"RTN","PSOSPMU1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408**;DEC 1997;Build 100
"RTN","PSOSPMU1",3,0)
 ; 
"RTN","PSOSPMU1",4,0)
SETLN(NSPC,TEXT,REV,UND,HIG) ; Sets a line to be displayed in the Body section
"RTN","PSOSPMU1",5,0)
 N X
"RTN","PSOSPMU1",6,0)
 S:$G(TEXT)="" $E(TEXT,80)=""
"RTN","PSOSPMU1",7,0)
 S:$L(TEXT)>80 TEXT=$E(TEXT,1,80)
"RTN","PSOSPMU1",8,0)
 S LINE=LINE+1,^TMP(NSPC,$J,LINE,0)=$G(TEXT)
"RTN","PSOSPMU1",9,0)
 ;
"RTN","PSOSPMU1",10,0)
 I LINE>$G(PSOLSTLN) D SAVE^VALM10(LINE) S PSOLSTLN=LINE
"RTN","PSOSPMU1",11,0)
 ;
"RTN","PSOSPMU1",12,0)
 I $G(REV) D  Q
"RTN","PSOSPMU1",13,0)
 . D CNTRL^VALM10(LINE,1,$L(TEXT),IORVON,IOINORM)
"RTN","PSOSPMU1",14,0)
 . I $G(UND) D CNTRL^VALM10(LINE,$L(TEXT)+1,80,IOUON,IOINORM)
"RTN","PSOSPMU1",15,0)
 I $G(UND) D CNTRL^VALM10(LINE,1,80,IOUON,IOINORM)
"RTN","PSOSPMU1",16,0)
 I $G(HIG) D
"RTN","PSOSPMU1",17,0)
 . D CNTRL^VALM10(LINE,HIG,80,IOINHI_$S($G(UND):IOUON,1:""),IOINORM)
"RTN","PSOSPMU1",18,0)
 Q
"RTN","PSOSPMU1",19,0)
 ;
"RTN","PSOSPMU1",20,0)
RXFILL(RXIEN) ; Select Prescription Fill #
"RTN","PSOSPMU1",21,0)
 N RXFILL,DIR,I,Y,DIRUT,DTOUT,FILLARR,RTSFILL,RTSFLDT
"RTN","PSOSPMU1",22,0)
 S RXFILL=0,FILLARR(0)=""
"RTN","PSOSPMU1",23,0)
 K DIR S DIR("A")=" Fill",DIR("B")=0
"RTN","PSOSPMU1",24,0)
 S DIR(0)="S^0:Original  ("_$$FMTE^XLFDT($$RXFLDT^PSOBPSUT(RXIEN,0),2)_")  "_$$MWA(RXIEN,0)
"RTN","PSOSPMU1",25,0)
 F I=1:1 Q:'$D(^PSRX(RXIEN,1,I))  D
"RTN","PSOSPMU1",26,0)
 . S DIR(0)=DIR(0)_";"_I_":Refill "_I_"  ("_$$FMTE^XLFDT($$RXFLDT^PSOBPSUT(RXIEN,I),2)_")  "_$$MWA(RXIEN,I),FILLARR(I)=""
"RTN","PSOSPMU1",27,0)
 F I=1:1 Q:'$D(^PSRX(RXIEN,"P",I))  D
"RTN","PSOSPMU1",28,0)
 . S DIR(0)=DIR(0)_";P"_I_":Partial "_I_" ("_$$FMTE^XLFDT($$RXFLDT^PSOBPSUT(RXIEN,"P"_I),2)_")  "_$$MWA(RXIEN,"P"_I),FILLARR("P"_I)=""
"RTN","PSOSPMU1",29,0)
 F I=1:1 Q:'$D(^PSRX(RXIEN,"RTS",I))  D
"RTN","PSOSPMU1",30,0)
 . S RTSFILL=$P(^PSRX(RXIEN,"RTS",I,0),"^",2) I $D(FILLARR(RTSFILL)) Q
"RTN","PSOSPMU1",31,0)
 . S RTSFLDT=$P(^PSRX(RXIEN,"RTS",I,0),"^",3)
"RTN","PSOSPMU1",32,0)
 . S FILLARR(RTSFILL)=""
"RTN","PSOSPMU1",33,0)
 . S DIR(0)=DIR(0)_";"_RTSFILL_":"_$S(RTSFILL["P":"Partial "_$E(RTSFILL,2,9),1:"Refill "_RTSFILL)_"  ("_$$FMTE^XLFDT(RTSFLDT,2)_") "_$$MWA(RXIEN,RTSFILL)
"RTN","PSOSPMU1",34,0)
 D ^DIR I $D(DIRUT)!$D(DTOUT) Q "^"
"RTN","PSOSPMU1",35,0)
 S RXFILL=$G(Y)
"RTN","PSOSPMU1",36,0)
 Q RXFILL
"RTN","PSOSPMU1",37,0)
 ;
"RTN","PSOSPMU1",38,0)
MWA(RXIEN,FILL) ; Returns the Rx delivering (WINDOW/MAIL/ADMIN IN CLINIC)
"RTN","PSOSPMU1",39,0)
 I FILL["P" Q $$GET1^DIQ(52.2,$E(FILL,2,3)_","_RXIEN,.02)
"RTN","PSOSPMU1",40,0)
 I FILL Q:$$GET1^DIQ(52.1,FILL_","_RXIEN,23,"I") "ADMIN IN CLINIC" Q $$GET1^DIQ(52.1,FILL_","_RXIEN,2)
"RTN","PSOSPMU1",41,0)
 Q:$$GET1^DIQ(52,RXIEN,14,"I") "ADMIN IN CLINIC"
"RTN","PSOSPMU1",42,0)
 Q $$GET1^DIQ(52,RXIEN,11)
"RTN","PSOSPMU1",43,0)
 ;
"RTN","PSOSPMU1",44,0)
GATHER(STATE,BEGDTTM,ENDDTTM,RECTYPE,RTSONLY) ; Gathers all CS prescriptions for Data Range
"RTN","PSOSPMU1",45,0)
 ;Input: STATE   - Pointer to the STATE file (#5)
"RTN","PSOSPMU1",46,0)
 ;       BEGDTTM - Date Range Begin Date/Time
"RTN","PSOSPMU1",47,0)
 ;       ENDDTTM - Date Range End Date/Time
"RTN","PSOSPMU1",48,0)
 ;       RECTYPE - Record Type for Released Rx's only (N: New / R: Revise)
"RTN","PSOSPMU1",49,0)
 ;       RTSONLY - Return To Stock Fills Only (1: YES / 0: NO)
"RTN","PSOSPMU1",50,0)
 ;Output: $$GATHER - Number of Rx's found
"RTN","PSOSPMU1",51,0)
 ;        ^TMP("PSOSPMRX",$J,STATE,RX,FILL)=Record Type (N/R/V) - List of Rx's gathered
"RTN","PSOSPMU1",52,0)
 N GATHER,XREF,RXRLDT,RXIEN,RXFILL,FILL,RTSDT,ENDRTSDT
"RTN","PSOSPMU1",53,0)
 ;
"RTN","PSOSPMU1",54,0)
 S GATHER=0 K ^TMP("PSOSPMRX",$J)
"RTN","PSOSPMU1",55,0)
 ; - Gathering Released Original Fills/Refills/Partials
"RTN","PSOSPMU1",56,0)
 I '$G(RTSONLY) D
"RTN","PSOSPMU1",57,0)
 . F XREF="AL","AM" D
"RTN","PSOSPMU1",58,0)
 . . S RXRLDT=BEGDTTM,ENDRLDT=ENDDTTM S:'$P(ENDRLDT,".",2) ENDRLDT=ENDRLDT+.25
"RTN","PSOSPMU1",59,0)
 . . F  S RXRLDT=$O(^PSRX(XREF,RXRLDT)) Q:'RXRLDT!(RXRLDT>ENDRLDT)  D
"RTN","PSOSPMU1",60,0)
 . . . S RXIEN=0 F  S RXIEN=$O(^PSRX(XREF,RXRLDT,RXIEN)) Q:'RXIEN  D
"RTN","PSOSPMU1",61,0)
 . . . . S RXFILL="" F  S RXFILL=$O(^PSRX(XREF,RXRLDT,RXIEN,RXFILL)) Q:RXFILL=""  D
"RTN","PSOSPMU1",62,0)
 . . . . . S FILL=$S(XREF="AL":RXFILL,1:"P"_RXFILL)
"RTN","PSOSPMU1",63,0)
 . . . . . I '$$RXRLDT^PSOBPSUT(RXIEN,FILL) Q
"RTN","PSOSPMU1",64,0)
 . . . . . I $$SCREEN^PSOSPMUT(RXIEN,FILL) Q
"RTN","PSOSPMU1",65,0)
 . . . . . I $$RXSTATE^PSOBPSUT(RXIEN,0)'=STATE Q
"RTN","PSOSPMU1",66,0)
 . . . . . S ^TMP("PSOSPMRX",$J,STATE,RXIEN,FILL)=RECTYPE
"RTN","PSOSPMU1",67,0)
 . . . . . S GATHER=GATHER+1
"RTN","PSOSPMU1",68,0)
 ;
"RTN","PSOSPMU1",69,0)
 ; ASAP 1995 does not support transmissions of Return To Stock fills in the same file
"RTN","PSOSPMU1",70,0)
 I $$GET1^DIQ(58.41,STATE,1,"I")="1995",'$G(RTSONLY) Q GATHER
"RTN","PSOSPMU1",71,0)
 ;
"RTN","PSOSPMU1",72,0)
 ; - Gathering Fills Returned To Stock
"RTN","PSOSPMU1",73,0)
 S RTSDT=BEGDTTM-.0000001,ENDRTSDT=ENDDTTM S:'$P(ENDRTSDT,".",2) ENDRTSDT=ENDRTSDT+.25
"RTN","PSOSPMU1",74,0)
 F  S RTSDT=$O(^PSRX("ARTS",RTSDT)) Q:'RTSDT!(RTSDT>ENDRTSDT)  D
"RTN","PSOSPMU1",75,0)
 . S RXIEN=0 F  S RXIEN=$O(^PSRX("ARTS",RTSDT,RXIEN)) Q:'RXIEN  D
"RTN","PSOSPMU1",76,0)
 . . S RTSIEN=0 F  S RTSIEN=$O(^PSRX("ARTS",RTSDT,RXIEN,RTSIEN)) Q:'RTSIEN  D
"RTN","PSOSPMU1",77,0)
 . . . S FILL=$$GET1^DIQ(52.07,RTSIEN_","_RXIEN,1,"I")
"RTN","PSOSPMU1",78,0)
 . . . I '$D(^PS(58.42,"ARX",RXIEN,FILL)) Q
"RTN","PSOSPMU1",79,0)
 . . . I $$RXRLDT^PSOBPSUT(RXIEN,FILL) Q
"RTN","PSOSPMU1",80,0)
 . . . I $$SCREEN^PSOSPMUT(RXIEN,FILL) Q
"RTN","PSOSPMU1",81,0)
 . . . I $D(^TMP("PSOSPMRX",$J,STATE,RXIEN,FILL)) Q
"RTN","PSOSPMU1",82,0)
 . . . I $$RXSTATE^PSOBPSUT(RXIEN,0)'=STATE Q
"RTN","PSOSPMU1",83,0)
 . . . S ^TMP("PSOSPMRX",$J,STATE,RXIEN,FILL)="V"
"RTN","PSOSPMU1",84,0)
 . . . S GATHER=GATHER+1
"RTN","PSOSPMU1",85,0)
 Q GATHER
"RTN","PSOSPMU1",86,0)
 ;
"RTN","PSOSPMU1",87,0)
BLDBAT(EXPTYPE,BEGRLDT,ENDRLDT) ; Given a list of Rx's builds a new Export Batch
"RTN","PSOSPMU1",88,0)
 ; Input: (r) EXPTYPE - Export Type ((MA)naul/(SC)heduled/(RX) Single Rx)/(VD) Void Only
"RTN","PSOSPMU1",89,0)
 ;        (o) BEGRLDT  - Begin Release Date (FM Format) (Required for M and S batches)
"RTN","PSOSPMU1",90,0)
 ;        (o) ENDRLDT - End Release Date (FM Format) (Required for M and S batches)
"RTN","PSOSPMU1",91,0)
 ;        (r) List of Rx's: ^TMP("PSOSPMRX",$J,STATE,RXIEN,RXFILL)=Record Type ((N)ew/(R)evise/(V)oid)
"RTN","PSOSPMU1",92,0)
 ;                          Note: This ^TMP global will be cleaned up at the end
"RTN","PSOSPMU1",93,0)
 ;Output: BATCHIEN - New Batch IEN (Pointer to #58.42) OR "01^Error Message"
"RTN","PSOSPMU1",94,0)
 ;
"RTN","PSOSPMU1",95,0)
 N STATE,SPOK,RX,FILL,BATCHIEN,%,DIC,DR,DA,X,XX,DINUM,DLAYGO,DD,DO
"RTN","PSOSPMU1",96,0)
 I '$O(^TMP("PSOSPMRX",$J,0)) Q "-1^No prescription data"
"RTN","PSOSPMU1",97,0)
 ;
"RTN","PSOSPMU1",98,0)
 S (STATE,RX)=0,FILL=""
"RTN","PSOSPMU1",99,0)
 F  S STATE=$O(^TMP("PSOSPMRX",$J,STATE)) Q:'STATE  D  I $P(BATCHIEN,"^")=-1 Q
"RTN","PSOSPMU1",100,0)
 . S XX=$$SPOK^PSOSPMUT(STATE) I $P(XX,"^",1)=-1 S BATCHIEN=XX Q
"RTN","PSOSPMU1",101,0)
 . F  L +^PS(58.42,0):$S(+$G(^DD("DILOCKTM"))>0:+^DD("DILOCKTM"),1:3) Q:$T  H 3
"RTN","PSOSPMU1",102,0)
 . S (DINUM,BATCHIEN)=$O(^PS(58.42,999999999999),-1)+1
"RTN","PSOSPMU1",103,0)
 . I EXPTYPE'="VD" W !!,"Creating Batch #",DINUM," for ",$$GET1^DIQ(58.41,STATE,.01),"..."
"RTN","PSOSPMU1",104,0)
 . S DIC="^PS(58.42,",X=DINUM,DIC(0)="",DIC("DR")="1////"_STATE_";2///"_EXPTYPE_";8///"_$$NOW^XLFDT()
"RTN","PSOSPMU1",105,0)
 . I $G(BEGRLDT) D
"RTN","PSOSPMU1",106,0)
 . . S DIC("DR")=DIC("DR")_";4///"_BEGRLDT_";5///"_$G(ENDRLDT)
"RTN","PSOSPMU1",107,0)
 . S DLAYGO=58.42 K DD,DO D FILE^DICN K DD,DO
"RTN","PSOSPMU1",108,0)
 . L -^PS(58.42,0)
"RTN","PSOSPMU1",109,0)
 . I Y=-1 S BATCHIEN="-1^Export Batch could not be created" Q
"RTN","PSOSPMU1",110,0)
 . F  S RX=$O(^TMP("PSOSPMRX",$J,STATE,RX)) Q:'RX  D
"RTN","PSOSPMU1",111,0)
 . . F  S FILL=$O(^TMP("PSOSPMRX",$J,STATE,RX,FILL)) Q:FILL=""  D
"RTN","PSOSPMU1",112,0)
 . . . K DIC,DINUM,DA S DIC="^PS(58.42,"_BATCHIEN_",""RX"",",DIC(0)="",DA(1)=BATCHIEN
"RTN","PSOSPMU1",113,0)
 . . . S X=RX,DIC("DR")="1///"_FILL_";2///"_^TMP("PSOSPMRX",$J,STATE,RX,FILL)
"RTN","PSOSPMU1",114,0)
 . .  .S DLAYGO=58.42001 K DD,DO D FILE^DICN K DD,DO
"RTN","PSOSPMU1",115,0)
 . I EXPTYPE'="VD" W "Done."
"RTN","PSOSPMU1",116,0)
 K ^TMP("PSOSPMRX",$J)
"RTN","PSOSPMU1",117,0)
 Q BATCHIEN
"RTN","PSOSPMU1",118,0)
 ;
"RTN","PSOSPMU1",119,0)
LOADRTS(RXIEN,FILL,ARRAY) ; Load ARRAY with Return To Stock Information
"RTN","PSOSPMU1",120,0)
 ;Input: Rx IEN - Pointer to PRESCRIPTION file (#52)
"RTN","PSOSPMU1",121,0)
 ;       Fill # - "0":Original / "1"..:Refill #1... / "P1"..:Partial 1...
"RTN","PSOSPMU1",122,0)
 ;       ARRAY  - Return Array (most recent Return To Stock data for the fill)
"RTN","PSOSPMU1",123,0)
 N RTSIEN,NODE0,NODE1
"RTN","PSOSPMU1",124,0)
 K ARRAY S RTSIEN=0
"RTN","PSOSPMU1",125,0)
 F  S RTSIEN=$O(^PSRX(RXIEN,"RTS",RTSIEN)) Q:'RTSIEN  D
"RTN","PSOSPMU1",126,0)
 . S NODE0=$G(^PSRX(RXIEN,"RTS",RTSIEN,0))
"RTN","PSOSPMU1",127,0)
 . S NODE1=$G(^PSRX(RXIEN,"RTS",RTSIEN,1))
"RTN","PSOSPMU1",128,0)
 . I $P(NODE0,"^",2)'=FILL Q
"RTN","PSOSPMU1",129,0)
 . S ARRAY("DIVISION")=$P(NODE0,"^",13) ; Division
"RTN","PSOSPMU1",130,0)
 . S ARRAY("RELDTTM")=$P(NODE1,"^",2)   ; Release Date/Time
"RTN","PSOSPMU1",131,0)
 . S ARRAY("NDC")=$P(NODE0,"^",15)      ; NDC
"RTN","PSOSPMU1",132,0)
 . S ARRAY("QTY")=$P(NODE0,"^",4)       ; Quantity
"RTN","PSOSPMU1",133,0)
 . S ARRAY("DAYSUP")=$P(NODE0,"^",5)    ; Days Supply
"RTN","PSOSPMU1",134,0)
 . S ARRAY("RPHIEN")=$P(NODE0,"^",9)    ; Pharmacist IEN
"RTN","PSOSPMU1",135,0)
 . S ARRAY("PRVIEN")=$P(NODE1,"^",1)    ; Provider IEN
"RTN","PSOSPMU1",136,0)
 Q
"RTN","PSOSPMU1",137,0)
 ;
"RTN","PSOSPMU1",138,0)
PREPFILE(STATE,DATETIME,RTSONLY) ; Prepare Files (FTP Script and Output Data files)
"RTN","PSOSPMU1",139,0)
 ;Input: STATE - Pointer to STATE file (#5)
"RTN","PSOSPMU1",140,0)
 ;       DATETIME - Date/Time for the file names (format: YYYYMMDDHHMMSS)
"RTN","PSOSPMU1",141,0)
 ;       RTSONLY  - Return To Stock Only Batch? (1: YES)
"RTN","PSOSPMU1",142,0)
 N PSOOS,LOCDIR,PREFIX,FILEXT,FTPIP,FTPUSR,FTPPORT,FTPDIR,FTPFILE,INPTFILE,LOGFILE,EXPFILE
"RTN","PSOSPMU1",143,0)
 ; - Operating System
"RTN","PSOSPMU1",144,0)
 S PSOOS=$$OS^%ZOSV()
"RTN","PSOSPMU1",145,0)
 ;
"RTN","PSOSPMU1",146,0)
 I +$$SPOK^PSOSPMUT(STATE)=-1 Q $$SPOK^PSOSPMUT(STATE)
"RTN","PSOSPMU1",147,0)
 ;
"RTN","PSOSPMU1",148,0)
 ; - Retrieving the Local Directory for the corresponding OS
"RTN","PSOSPMU1",149,0)
 I PSOOS["VMS" S LOCDIR=$$GET1^DIQ(58.41,STATE,4)
"RTN","PSOSPMU1",150,0)
 I PSOOS["UNIX" S LOCDIR=$$GET1^DIQ(58.41,STATE,15)
"RTN","PSOSPMU1",151,0)
 I PSOOS["NT" S LOCDIR=$$GET1^DIQ(58.41,STATE,16)
"RTN","PSOSPMU1",152,0)
 ;
"RTN","PSOSPMU1",153,0)
 S PREFIX=$$GET1^DIQ(58.41,STATE,5)
"RTN","PSOSPMU1",154,0)
 S FILEXT=$$GET1^DIQ(58.41,STATE,6)
"RTN","PSOSPMU1",155,0)
 S FTPIP=$$GET1^DIQ(58.41,STATE,7)
"RTN","PSOSPMU1",156,0)
 S FTPUSR=$$GET1^DIQ(58.41,STATE,8)
"RTN","PSOSPMU1",157,0)
 S FTPPORT=$$GET1^DIQ(58.41,STATE,9)
"RTN","PSOSPMU1",158,0)
 S FTPDIR=$$GET1^DIQ(58.41,STATE,10)
"RTN","PSOSPMU1",159,0)
 ;
"RTN","PSOSPMU1",160,0)
 S INPTFILE="SPMP_FTP_"_DATETIME_".DAT"
"RTN","PSOSPMU1",161,0)
 I PSOOS["VMS"!(PSOOS["NT") S FTPFILE="SPMP_FTP_"_DATETIME_".COM"
"RTN","PSOSPMU1",162,0)
 S LOGFILE="SPMP_FTP_"_DATETIME_".LOG"
"RTN","PSOSPMU1",163,0)
 S EXPFILE=PREFIX_DATETIME_".up"
"RTN","PSOSPMU1",164,0)
 I $G(RTSONLY) S EXPFILE="BACK_"_EXPFILE
"RTN","PSOSPMU1",165,0)
 ;
"RTN","PSOSPMU1",166,0)
 D OPEN^%ZISH("INPTFILE",LOCDIR,INPTFILE,"W")  I POP Q "-1^FTP Script file <"_LOCDIR_INPTFILE_">  could not be created."
"RTN","PSOSPMU1",167,0)
 D USE^%ZISUTL("INPTFILE")
"RTN","PSOSPMU1",168,0)
 W:FTPDIR'="" "cd "_FTPDIR,!
"RTN","PSOSPMU1",169,0)
 W "put "_$S(PSOOS["UNIX":LOCDIR,1:"")_EXPFILE,!
"RTN","PSOSPMU1",170,0)
 W "rename "_EXPFILE_" "_$P(EXPFILE,".up",1)_FILEXT,!
"RTN","PSOSPMU1",171,0)
 W "exit",!
"RTN","PSOSPMU1",172,0)
 D CLOSE^%ZISH("INPTFILE")
"RTN","PSOSPMU1",173,0)
 I POP Q "-1^FTP Input file <"_INPTFILE_"> cannot be created."
"RTN","PSOSPMU1",174,0)
 ;
"RTN","PSOSPMU1",175,0)
 ; This sFTP command file is not needed for Linux/Unix
"RTN","PSOSPMU1",176,0)
 I PSOOS["VMS"!(PSOOS["NT") D  I POP Q "-1^FTP Script file <"_LOCDIR_FTPFILE_"> could not be created."
"RTN","PSOSPMU1",177,0)
 . D OPEN^%ZISH("FTPFILE",LOCDIR,FTPFILE,"W")
"RTN","PSOSPMU1",178,0)
 . D USE^%ZISUTL("FTPFILE")
"RTN","PSOSPMU1",179,0)
 . ; VMS Secure FTP
"RTN","PSOSPMU1",180,0)
 . I PSOOS["VMS" D
"RTN","PSOSPMU1",181,0)
 . . W "$ SET VERIFY=(PROCEDURE,IMAGE)",!
"RTN","PSOSPMU1",182,0)
 . . I LOCDIR'="" W "$ SET DEFAULT "_LOCDIR,!
"RTN","PSOSPMU1",183,0)
 . . W "$ sftp"_$S(FTPPORT:" -oPort="_FTPPORT,1:"")_" -oidentityfile="""_$$XVMSDIR(LOCDIR)_"VMSSSHID."" -""B"" "_INPTFILE_" "_FTPUSR_"@"_FTPIP,!
"RTN","PSOSPMU1",184,0)
 . . W "$ exit",!
"RTN","PSOSPMU1",185,0)
 . ; Windows/Open NT Secure FTP
"RTN","PSOSPMU1",186,0)
 . I PSOOS["NT" D
"RTN","PSOSPMU1",187,0)
 . . I LOCDIR'="" W "cd ",LOCDIR,!
"RTN","PSOSPMU1",188,0)
 . . W "sftp"_$S(FTPPORT:" -oPort="_FTPPORT,1:"")_" -oidentityfile="""_LOCDIR_"VMSSSHKEY"" -B "_LOCDIR_INPTFILE_" "_FTPUSR_"@"_FTPIP,!
"RTN","PSOSPMU1",189,0)
 . . W "exit 0",!
"RTN","PSOSPMU1",190,0)
 . D CLOSE^%ZISH("FTPFILE")
"RTN","PSOSPMU1",191,0)
 ;
"RTN","PSOSPMU1",192,0)
 I PSOOS["VMS" D  I POP Q "-1^FTP Script file <"_LOCDIR_"VMSSSHID.> could not be created."
"RTN","PSOSPMU1",193,0)
 . D OPEN^%ZISH("VMSSSHID",LOCDIR,"VMSSSHID.","W")
"RTN","PSOSPMU1",194,0)
 . D USE^%ZISUTL("VMSSSHID")
"RTN","PSOSPMU1",195,0)
 . W "IDKEY "_$$XVMSDIR(LOCDIR)_"VMSSSHKEY"
"RTN","PSOSPMU1",196,0)
 . D CLOSE^%ZISH("FTPFILE")
"RTN","PSOSPMU1",197,0)
 ;
"RTN","PSOSPMU1",198,0)
 D SAVEKEYS(STATE,LOCDIR)
"RTN","PSOSPMU1",199,0)
 ;
"RTN","PSOSPMU1",200,0)
 Q (LOCDIR_"^"_EXPFILE_"^"_$G(FTPFILE)_"^"_$G(INPTFILE)_"^"_LOGFILE_"^"_$P(EXPFILE,".up")_FILEXT)
"RTN","PSOSPMU1",201,0)
 ;
"RTN","PSOSPMU1",202,0)
FTPFILE(STATEIP,STATEUSR,LOCDIR,FTPFILE,LOGFILE,INPTFILE,FTPPORT) ; Issue the Secure FTP command
"RTN","PSOSPMU1",203,0)
 N PSOOS,PV,XPV1
"RTN","PSOSPMU1",204,0)
 S PSOOS=$$OS^%ZOSV()
"RTN","PSOSPMU1",205,0)
 I PSOOS["VMS" S XPV1="S PV=$ZF(-1,""@"_LOCDIR_FTPFILE_"/OUTPUT="_LOCDIR_LOGFILE_""")"
"RTN","PSOSPMU1",206,0)
 I PSOOS["UNIX" S XPV1="S PV=$ZF(-1,""sftp"_$S(FTPPORT:" -oPort="_FTPPORT,1:"")_" -oidentityfile="""""_LOCDIR_"linuxsshkey"""" -b "_LOCDIR_INPTFILE_" "_$TR(STATEUSR,"""","")_"@"_STATEIP_" > "_LOCDIR_LOGFILE_""")"
"RTN","PSOSPMU1",207,0)
 I PSOOS["NT" S XPV1="S PV=$ZF(-1,"""_LOCDIR_FTPFILE_">"_LOCDIR_LOGFILE_""")"
"RTN","PSOSPMU1",208,0)
 ;
"RTN","PSOSPMU1",209,0)
 X XPV1  ; Execute the FTP command
"RTN","PSOSPMU1",210,0)
 ;
"RTN","PSOSPMU1",211,0)
 ; Error flag logic
"RTN","PSOSPMU1",212,0)
 I PV=-1 Q "-1^Secure FTP Transmission failed"
"RTN","PSOSPMU1",213,0)
 ;
"RTN","PSOSPMU1",214,0)
 Q ""
"RTN","PSOSPMU1",215,0)
 ;
"RTN","PSOSPMU1",216,0)
DELFILE(FILE) ; Deletes file
"RTN","PSOSPMU1",217,0)
 N PV
"RTN","PSOSPMU1",218,0)
 I $$OS^%ZOSV()["VMS"  D DELVMS(FILE)
"RTN","PSOSPMU1",219,0)
 I $$OS^%ZOSV()["UNIX" D DELUNIX(FILE)
"RTN","PSOSPMU1",220,0)
 I $$OS^%ZOSV()["NT" D DELWIN(FILE)
"RTN","PSOSPMU1",221,0)
 I PV=-1 Q "-1^There was an error deleting the file locally."
"RTN","PSOSPMU1",222,0)
 Q ""
"RTN","PSOSPMU1",223,0)
 ;
"RTN","PSOSPMU1",224,0)
DELVMS(FILE) ; Delete VMS files
"RTN","PSOSPMU1",225,0)
 N XPV
"RTN","PSOSPMU1",226,0)
 S XPV="S PV=$ZF(-1,""DEL "_FILE_";*"")"
"RTN","PSOSPMU1",227,0)
 X XPV
"RTN","PSOSPMU1",228,0)
 Q
"RTN","PSOSPMU1",229,0)
DELWIN(FILE) ; Delete windows files
"RTN","PSOSPMU1",230,0)
 N XPV
"RTN","PSOSPMU1",231,0)
 S XPV="S PV=$ZF(-1,""DEL "_FILE_""")"
"RTN","PSOSPMU1",232,0)
 X XPV
"RTN","PSOSPMU1",233,0)
 Q
"RTN","PSOSPMU1",234,0)
DELUNIX(FILE) ; Delete Unix files
"RTN","PSOSPMU1",235,0)
 N XPV
"RTN","PSOSPMU1",236,0)
 S XPV="S PV=$ZF(-1,""rm -f "_FILE_""")"
"RTN","PSOSPMU1",237,0)
 X XPV
"RTN","PSOSPMU1",238,0)
 Q
"RTN","PSOSPMU1",239,0)
 ;
"RTN","PSOSPMU1",240,0)
PAUSE ; Pauses screen until user hits Return
"RTN","PSOSPMU1",241,0)
 W ! K DIR S DIR("A")="Press Return to continue",DIR(0)="E" D ^DIR
"RTN","PSOSPMU1",242,0)
 Q
"RTN","PSOSPMU1",243,0)
 ;
"RTN","PSOSPMU1",244,0)
XVMSDIR(VMSDIR) ; Converts a VMS directory from "USER$:[SPMP]" to "/USER$/SPMP/" format
"RTN","PSOSPMU1",245,0)
 Q "/"_$TR(VMSDIR,"[]:","//")
"RTN","PSOSPMU1",246,0)
 ;
"RTN","PSOSPMU1",247,0)
SAVEKEYS(STATE,LOCDIR) ; Saves Key
"RTN","PSOSPMU1",248,0)
 N WLINE
"RTN","PSOSPMU1",249,0)
 D OPEN^%ZISH("VMSSSHKEY",LOCDIR,"VMSSSHKEY","W")
"RTN","PSOSPMU1",250,0)
 D USE^%ZISUTL("VMSSSHKEY")
"RTN","PSOSPMU1",251,0)
 F WLINE=1:1 Q:'$D(^PS(58.41,STATE,"PRVKEY",WLINE))  D
"RTN","PSOSPMU1",252,0)
 . W $$DECRYP^XUSRB1(^PS(58.41,STATE,"PRVKEY",WLINE,0)),!
"RTN","PSOSPMU1",253,0)
 D CLOSE^%ZISH("VMSSSHKEY")
"RTN","PSOSPMU1",254,0)
 ;
"RTN","PSOSPMU1",255,0)
 I $$OS^%ZOSV()["UNIX" D  Q
"RTN","PSOSPMU1",256,0)
 . N XPV
"RTN","PSOSPMU1",257,0)
 . S XPV="S PV=$ZF(-1,""ssh-keygen -i -f "_LOCDIR_"VMSSSHKEY > "_LOCDIR_"linuxsshkey"")"
"RTN","PSOSPMU1",258,0)
 . X XPV
"RTN","PSOSPMU1",259,0)
 . S XPV="S PV=$ZF(-1,""chmod 600 "_LOCDIR_"linuxsshkey"")"
"RTN","PSOSPMU1",260,0)
 . X XPV
"RTN","PSOSPMU1",261,0)
 ;
"RTN","PSOSPMU1",262,0)
 D OPEN^%ZISH("VMSSSHKEY",LOCDIR,"VMSSSHKEY.PUB","W")
"RTN","PSOSPMU1",263,0)
 D USE^%ZISUTL("VMSSSHKEY")
"RTN","PSOSPMU1",264,0)
 F WLINE=1:1 Q:'$D(^PS(58.41,STATE,"PUBKEY",WLINE))  D
"RTN","PSOSPMU1",265,0)
 . W $$DECRYP^XUSRB1(^PS(58.41,STATE,"PUBKEY",WLINE,0)),!
"RTN","PSOSPMU1",266,0)
 D CLOSE^%ZISH("VMSSSHKEY")
"RTN","PSOSPMU1",267,0)
 Q
"RTN","PSOSPMU1",268,0)
 ;
"RTN","PSOSPMU1",269,0)
LINUXDIR() ; Returns the Linux Directory for SPMP sFTP
"RTN","PSOSPMU1",270,0)
 N CURDIR
"RTN","PSOSPMU1",271,0)
 I $$OS^%ZOSV()'="UNIX" Q ""
"RTN","PSOSPMU1",272,0)
 I $$UP^XLFSTR($$VERSION^%ZOSV(1))'["CACHE" Q ""
"RTN","PSOSPMU1",273,0)
 ; Retrieving the current directory
"RTN","PSOSPMU1",274,0)
 X "S CURDIR=$ZU(12)"
"RTN","PSOSPMU1",275,0)
 Q $P(CURDIR,"/",1,4)_"/user/sftp/spmp/"
"RTN","PSOSPMU1",276,0)
 ;
"RTN","PSOSPMU1",277,0)
DIREXIST(DIR) ; Returns whether the Linux Directory for SPMP sFTP already exists
"RTN","PSOSPMU1",278,0)
 N DIREXIST
"RTN","PSOSPMU1",279,0)
 I DIR="" Q 0
"RTN","PSOSPMU1",280,0)
 I $$OS^%ZOSV()'="UNIX" Q 0
"RTN","PSOSPMU1",281,0)
 I $$UP^XLFSTR($$VERSION^%ZOSV(1))'["CACHE" Q 0
"RTN","PSOSPMU1",282,0)
 I $E(DIR,$L(DIR))="/" S $E(DIR,$L(DIR))=""
"RTN","PSOSPMU1",283,0)
 X "S DIREXIST=$ZSEARCH(DIR)"
"RTN","PSOSPMU1",284,0)
 Q $S(DIREXIST="":0,1:1)
"RTN","PSOSPMU1",285,0)
 ;
"RTN","PSOSPMU1",286,0)
MAKEDIR(DIR) ; Create a new directory
"RTN","PSOSPMU1",287,0)
 N MKDIR
"RTN","PSOSPMU1",288,0)
 I $$OS^%ZOSV()'="UNIX" Q
"RTN","PSOSPMU1",289,0)
 I $$UP^XLFSTR($$VERSION^%ZOSV(1))'["CACHE" Q
"RTN","PSOSPMU1",290,0)
 I $$DIREXIST(DIR) Q
"RTN","PSOSPMU1",291,0)
 X "S MKDIR=$ZF(-1,""mkdir ""_DIR)"
"RTN","PSOSPMU1",292,0)
 I 'MKDIR X "S MKDIR=$ZF(-1,""chmod 777 ""_DIR)"
"RTN","PSOSPMU1",293,0)
 Q
"RTN","PSOSPMUT")
0^11^B178191137^n/a
"RTN","PSOSPMUT",1,0)
PSOSPMUT ;BIRM/MFR - State Prescription Monitoring Program Utilities ;10/07/12
"RTN","PSOSPMUT",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408**;DEC 1997;Build 100
"RTN","PSOSPMUT",3,0)
 ;
"RTN","PSOSPMUT",4,0)
LOADASAP(VERSION,ASAP) ; Loads the ASAP definition array for the specific Version
"RTN","PSOSPMUT",5,0)
 ; Input: (r) VERSION - ASAP Version (4.0, 4.1, 4.2)
"RTN","PSOSPMUT",6,0)
 ;Output: ASAP - Array containing the ASAP Hierarchical Segment Structure/ASAP Elements Definition
"RTN","PSOSPMUT",7,0)
 ; 
"RTN","PSOSPMUT",8,0)
 N FILEIEN,VER,VERIEN,SEGIEN,SEG0,PARSEG,SEGPOS,SEGIDX,ELMIEN,ELM0,ELMPOS,ARXREF,STAIEN,STA0,ARREF,I
"RTN","PSOSPMUT",9,0)
 S FILEIEN=$O(^PS(58.4,999),-1)
"RTN","PSOSPMUT",10,0)
 K ASAP I $G(VERSION)="" S VERSION="4.2"
"RTN","PSOSPMUT",11,0)
 F VER="ALL",VERSION D
"RTN","PSOSPMUT",12,0)
 . S VERIEN=$O(^PS(58.4,FILEIEN,"VER","B",VER,0)) I 'VERIEN Q
"RTN","PSOSPMUT",13,0)
 . S SEGIEN=0
"RTN","PSOSPMUT",14,0)
 . F  S SEGIEN=$O(^PS(58.4,FILEIEN,"VER",VERIEN,"SEG",SEGIEN)) Q:'SEGIEN  D
"RTN","PSOSPMUT",15,0)
 . . S SEG0=$G(^PS(58.4,FILEIEN,"VER",VERIEN,"SEG",SEGIEN,0))
"RTN","PSOSPMUT",16,0)
 . . S PARSEG=$P(SEG0,"^",3),SEGPOS=+$P(SEG0,"^",5)
"RTN","PSOSPMUT",17,0)
 . . ; - Retrieving Segment Definition
"RTN","PSOSPMUT",18,0)
 . . I PARSEG="" D
"RTN","PSOSPMUT",19,0)
 . . . S ASAP(SEGPOS)=$P(SEG0,"^"),ASAP($P(SEG0,"^"))=SEG0,ARXREF($P(SEG0,"^",1))="ASAP("_SEGPOS_")"
"RTN","PSOSPMUT",20,0)
 . . I PARSEG'="" D
"RTN","PSOSPMUT",21,0)
 . . . S ARREF=ARXREF(PARSEG),ASAP($P(SEG0,"^"))=SEG0
"RTN","PSOSPMUT",22,0)
 . . . S SEGIDX=SEGPOS I $D(@ARREF@(SEGPOS)),$G(@ARREF@(SEGPOS))'=$P(SEG0,"^") S SEGIDX=$O(@ARREF@(""),-1)+1
"RTN","PSOSPMUT",23,0)
 . . . S @ARREF@(SEGIDX)=$P(SEG0,"^")
"RTN","PSOSPMUT",24,0)
 . . . S ARXREF($P(SEG0,"^",1))=$E(ARREF,1,$L(ARREF)-1)_","_SEGIDX_")"
"RTN","PSOSPMUT",25,0)
 . . ; - Segment Not used by this Version
"RTN","PSOSPMUT",26,0)
 . . I $P(SEG0,"^",4)="N" D  Q
"RTN","PSOSPMUT",27,0)
 . . . K @ARXREF($P(SEG0,"^",1)),ASAP($P(SEG0,"^",1))
"RTN","PSOSPMUT",28,0)
 . . ; - Loading Data Elements
"RTN","PSOSPMUT",29,0)
 . . S ELMIEN=0
"RTN","PSOSPMUT",30,0)
 . . F  S ELMIEN=$O(^PS(58.4,FILEIEN,"VER",VERIEN,"SEG",SEGIEN,"DAT",ELMIEN)) Q:'ELMIEN  D
"RTN","PSOSPMUT",31,0)
 . . . S ELM0=$G(^PS(58.4,FILEIEN,"VER",VERIEN,"SEG",SEGIEN,"DAT",ELMIEN,0))
"RTN","PSOSPMUT",32,0)
 . . . S ELMPOS=$P(ELM0,"^",5)
"RTN","PSOSPMUT",33,0)
 . . . ; - Element Not Used by this Version
"RTN","PSOSPMUT",34,0)
 . . . I +ELMPOS'=1,$P(ELM0,"^",6)="N" K ASAP($P(SEG0,"^",1),ELMPOS) Q
"RTN","PSOSPMUT",35,0)
 . . . ; - Retrieving Element Definition
"RTN","PSOSPMUT",36,0)
 . . . S ASAP($P(SEG0,"^",1),ELMPOS)=ELM0
"RTN","PSOSPMUT",37,0)
 . . . ; - Element Description
"RTN","PSOSPMUT",38,0)
 . . . K ASAP($P(SEG0,"^",1),ELMPOS,"DES")
"RTN","PSOSPMUT",39,0)
 . . . F I=1:1 Q:'$D(^PS(58.4,FILEIEN,"VER",VERIEN,"SEG",SEGIEN,"DAT",ELMIEN,"DES",I))  D
"RTN","PSOSPMUT",40,0)
 . . . . S ASAP($P(SEG0,"^",1),ELMPOS,"DES",I)=$G(^PS(58.4,FILEIEN,"VER",VERIEN,"SEG",SEGIEN,"DAT",ELMIEN,"DES",I,0))
"RTN","PSOSPMUT",41,0)
 Q
"RTN","PSOSPMUT",42,0)
 ;
"RTN","PSOSPMUT",43,0)
EXPORT(BATCHIEN,MODE,BCKGRND) ; Export a SPMP Batch
"RTN","PSOSPMUT",44,0)
 ;Input: BATCHIEN - Pointer to #58.41
"RTN","PSOSPMUT",45,0)
 ;       MODE     - "VIEW" or "EXPORT"
"RTN","PSOSPMUT",46,0)
 ;       BCKGRND  - Background? (1:YES / 0:NO)
"RTN","PSOSPMUT",47,0)
 ;
"RTN","PSOSPMUT",48,0)
 N X,RX,PSOSTATE,PSOASVER,SCHR,TRXTYPE,PSOTTCNT,PSOTPCNT,RXSITE,RXIEN,RXFILL,DFN,VADM,RXNODE,RTSDATA
"RTN","PSOSPMUT",49,0)
 N DATETIME,VAPA,XX,ASAP,LOCDIR,EXPFILE,EXPFILE2,FTPFILE,INPTFILE,LOGFILE,DIE,DR,DA,PSOFTPOK,FILES
"RTN","PSOSPMUT",50,0)
 N PSODELOK,PSOOS,RTSONLY,PSOSTIP,PSOSTUSR,PSONAME,PSOPORT,PSOAUTO,PSOSTDIR,PSOFLEXT
"RTN","PSOSPMUT",51,0)
 K ^TMP("PSOSPMEX",$J)
"RTN","PSOSPMUT",52,0)
 ;
"RTN","PSOSPMUT",53,0)
 I +$$SPOK($$GET1^DIQ(58.42,BATCHIEN,1,"I"))=-1 D  Q
"RTN","PSOSPMUT",54,0)
 . D LOGERROR(BATCHIEN,0,$P($$SPOK($$GET1^DIQ(58.42,BATCHIEN,1,"I")),"^",2),$G(BCKGRND))
"RTN","PSOSPMUT",55,0)
 ;
"RTN","PSOSPMUT",56,0)
 F  S DATETIME=$P($$FMTHL7^XLFDT($$HTFM^XLFDT($H)),"-") L +@("PMP"_DATETIME):0 Q:$T  H 2
"RTN","PSOSPMUT",57,0)
 ;
"RTN","PSOSPMUT",58,0)
 S PSOSTATE=$$GET1^DIQ(58.42,BATCHIEN,1,"I")
"RTN","PSOSPMUT",59,0)
 S PSOASVER=$$GET1^DIQ(58.41,PSOSTATE,1,"I")
"RTN","PSOSPMUT",60,0)
 S PSOFLEXT=$$GET1^DIQ(58.41,PSOSTATE,6)
"RTN","PSOSPMUT",61,0)
 S PSOSTIP=$$GET1^DIQ(58.41,PSOSTATE,7)
"RTN","PSOSPMUT",62,0)
 ; The command below will add the IP Address to the list of known hosts (if not already there)
"RTN","PSOSPMUT",63,0)
 I $$OS^%ZOSV()="UNIX",$$UP^XLFSTR($$VERSION^%ZOSV(1))["CACHE" D
"RTN","PSOSPMUT",64,0)
 . X "S PV=$ZF(-1,""ssh -o BatchMode=yes -o StrictHostKeyChecking=no -o LogLevel=quiet "_PSOSTIP_""")"
"RTN","PSOSPMUT",65,0)
 ;
"RTN","PSOSPMUT",66,0)
 S PSOPORT=$$GET1^DIQ(58.41,PSOSTATE,9)
"RTN","PSOSPMUT",67,0)
 S PSOSTUSR=$$GET1^DIQ(58.41,PSOSTATE,8)
"RTN","PSOSPMUT",68,0)
 S PSOSTDIR=$$GET1^DIQ(58.41,PSOSTATE,10)
"RTN","PSOSPMUT",69,0)
 S PSOAUTO=$S($$GET1^DIQ(58.41,PSOSTATE,13,"I")="A":1,1:0)
"RTN","PSOSPMUT",70,0)
 S PSOOS=$$OS^%ZOSV()
"RTN","PSOSPMUT",71,0)
 ;
"RTN","PSOSPMUT",72,0)
 I MODE="EXPORT",'$G(BCKGRND) W !!,"Exporting Batch #",BATCHIEN,":",! H 1
"RTN","PSOSPMUT",73,0)
 ;
"RTN","PSOSPMUT",74,0)
 S RX=0
"RTN","PSOSPMUT",75,0)
 F  S RX=$O(^PS(58.42,BATCHIEN,"RX",RX)) Q:'RX  D
"RTN","PSOSPMUT",76,0)
 . S RXNODE=^PS(58.42,BATCHIEN,"RX",RX,0)
"RTN","PSOSPMUT",77,0)
 . S RXIEN=+RXNODE,RXFILL=$P(RXNODE,"^",2),DFN=$$GET1^DIQ(52,RXIEN,2,"I")
"RTN","PSOSPMUT",78,0)
 . I MODE="EXPORT",$P(RXNODE,"^",3)'="V",'$$RXRLDT^PSOBPSUT(RXIEN,RXFILL) Q
"RTN","PSOSPMUT",79,0)
 . I MODE="EXPORT",$P(RXNODE,"^",3)="V",$$RXRLDT^PSOBPSUT(RXIEN,RXFILL) Q
"RTN","PSOSPMUT",80,0)
 . ; Always the Pharmacy Division for the Original Fill
"RTN","PSOSPMUT",81,0)
 . S RXSITE=$$RXSITE^PSOBPSUT(RXIEN,0)
"RTN","PSOSPMUT",82,0)
 . S ^TMP("PSOSPMEX",$J,RXSITE,DFN,RXIEN,RXFILL)=$P(RXNODE,"^",3)
"RTN","PSOSPMUT",83,0)
 I '$D(^TMP("PSOSPMEX",$J)) D  L -@("PMP"_DATETIME) Q
"RTN","PSOSPMUT",84,0)
 . D LOGERROR(BATCHIEN,0,"There were no eligible prescriptions in the batch #"_BATCHIEN,$G(BCKGRND))
"RTN","PSOSPMUT",85,0)
 ;
"RTN","PSOSPMUT",86,0)
 I MODE="VIEW",PSOASVER'="1995" S XX="",$P(XX,"-",80)="" W !,XX,!
"RTN","PSOSPMUT",87,0)
 I MODE="EXPORT" D  I $P(FILES,"^",1)=-1 L -@("PMP"_DATETIME) Q
"RTN","PSOSPMUT",88,0)
 . S RTSONLY=0 I $$GET1^DIQ(58.42,BATCHIEN,2,"I")="VD" S RTSONLY=1
"RTN","PSOSPMUT",89,0)
 . S FILES=$$PREPFILE^PSOSPMU1(PSOSTATE,DATETIME,RTSONLY)
"RTN","PSOSPMUT",90,0)
 . I $P(FILES,"^",1)=-1 D LOGERROR(BATCHIEN,0,$P(FILES,"^",2),$G(BCKGRND)) Q
"RTN","PSOSPMUT",91,0)
 . I PSOOS["VMS" S LOCDIR=$$GET1^DIQ(58.41,PSOSTATE,4)
"RTN","PSOSPMUT",92,0)
 . I PSOOS["UNIX" D
"RTN","PSOSPMUT",93,0)
 . . S LOCDIR=$$GET1^DIQ(58.41,PSOSTATE,15)
"RTN","PSOSPMUT",94,0)
 . . I '$$DIREXIST^PSOSPMU1(LOCDIR) D MAKEDIR^PSOSPMU1(PSOUNXLD)
"RTN","PSOSPMUT",95,0)
 . I PSOOS["NT" S LOCDIR=$$GET1^DIQ(58.41,PSOSTATE,16)
"RTN","PSOSPMUT",96,0)
 . S EXPFILE=$P(FILES,"^",2)
"RTN","PSOSPMUT",97,0)
 . S FTPFILE=$P(FILES,"^",3)
"RTN","PSOSPMUT",98,0)
 . S INPTFILE=$P(FILES,"^",4)
"RTN","PSOSPMUT",99,0)
 . S LOGFILE=$P(FILES,"^",5)
"RTN","PSOSPMUT",100,0)
 . S EXPFILE2=$P(FILES,"^",6)
"RTN","PSOSPMUT",101,0)
 . I '$G(BCKGRND) W !,$S('PSOAUTO:"Step 1: ",1:""),"Writing to file ",LOCDIR_EXPFILE,"..."
"RTN","PSOSPMUT",102,0)
 . D OPEN^%ZISH("EXPFILE",LOCDIR,EXPFILE,"W")
"RTN","PSOSPMUT",103,0)
 . I POP D LOGERROR(BATCHIEN,0,"Export File <"_LOCDIR_EXPFILE_"> could not be created.",$G(BCKGRND)) S FILES=-1 Q
"RTN","PSOSPMUT",104,0)
 . D USE^%ZISUTL("EXPFILE")
"RTN","PSOSPMUT",105,0)
 ;----------------------------- ASAP Data Output (1995) -------------------------------
"RTN","PSOSPMUT",106,0)
 I PSOASVER="1995" D
"RTN","PSOSPMUT",107,0)
 . S (RXSITE,DFN,RXIEN)=0
"RTN","PSOSPMUT",108,0)
 . F  S RXSITE=$O(^TMP("PSOSPMEX",$J,RXSITE)) Q:'RXSITE  D
"RTN","PSOSPMUT",109,0)
 . . F  S DFN=$O(^TMP("PSOSPMEX",$J,RXSITE,DFN)) Q:'DFN  D
"RTN","PSOSPMUT",110,0)
 . . . K VADM,VAPA,PSONAME D DEM^VADPT,ADD^VADPT,SETNAME(DFN)
"RTN","PSOSPMUT",111,0)
 . . . F  S RXIEN=$O(^TMP("PSOSPMEX",$J,RXSITE,DFN,RXIEN)) Q:'RXIEN  D
"RTN","PSOSPMUT",112,0)
 . . . . S RXFILL=""
"RTN","PSOSPMUT",113,0)
 . . . . F  S RXFILL=$O(^TMP("PSOSPMEX",$J,RXSITE,DFN,RXIEN,RXFILL)) Q:RXFILL=""  D
"RTN","PSOSPMUT",114,0)
 . . . . . S RECTYPE=^TMP("PSOSPMEX",$J,RXSITE,DFN,RXIEN,RXFILL)
"RTN","PSOSPMUT",115,0)
 . . . . . K RTSDATA I RECTYPE="V" D LOADRTS^PSOSPMU1(RXIEN,RXFILL,.RTSDATA)
"RTN","PSOSPMUT",116,0)
 . . . . . W $$ASAP95^PSOASAP0(RXIEN,+RXFILL),!
"RTN","PSOSPMUT",117,0)
 ;------------------------- ASAP Data Output (3.0 and above) --------------------------
"RTN","PSOSPMUT",118,0)
 I PSOASVER'="1995" D
"RTN","PSOSPMUT",119,0)
 . S SCHR="*",TRXTYPE="S",(PSOTTCNT,PSOTPCNT)=0
"RTN","PSOSPMUT",120,0)
 . D LOADASAP(PSOASVER,.ASAP)
"RTN","PSOSPMUT",121,0)
 . D WRITESEG("TH")
"RTN","PSOSPMUT",122,0)
 . D WRITESEG("IS")
"RTN","PSOSPMUT",123,0)
 . D WRITESEG("IR")
"RTN","PSOSPMUT",124,0)
 . S (RXSITE,DFN,RXIEN)=0
"RTN","PSOSPMUT",125,0)
 . F  S RXSITE=$O(^TMP("PSOSPMEX",$J,RXSITE)) Q:'RXSITE  D
"RTN","PSOSPMUT",126,0)
 . . S PSOTPCNT=0
"RTN","PSOSPMUT",127,0)
 . . D WRITESEG("PHA")
"RTN","PSOSPMUT",128,0)
 . . F  S DFN=$O(^TMP("PSOSPMEX",$J,RXSITE,DFN)) Q:'DFN  D
"RTN","PSOSPMUT",129,0)
 . . . K VADM,VAPA,PSONAME D DEM^VADPT,ADD^VADPT,SETNAME(DFN)
"RTN","PSOSPMUT",130,0)
 . . . D WRITESEG("PAT")
"RTN","PSOSPMUT",131,0)
 . . . F  S RXIEN=$O(^TMP("PSOSPMEX",$J,RXSITE,DFN,RXIEN)) Q:'RXIEN  D
"RTN","PSOSPMUT",132,0)
 . . . . S RXFILL=""
"RTN","PSOSPMUT",133,0)
 . . . . F  S RXFILL=$O(^TMP("PSOSPMEX",$J,RXSITE,DFN,RXIEN,RXFILL)) Q:RXFILL=""  D
"RTN","PSOSPMUT",134,0)
 . . . . . S RECTYPE=^TMP("PSOSPMEX",$J,RXSITE,DFN,RXIEN,RXFILL)
"RTN","PSOSPMUT",135,0)
 . . . . . K RTSDATA I RECTYPE="V" D LOADRTS^PSOSPMU1(RXIEN,RXFILL,.RTSDATA)
"RTN","PSOSPMUT",136,0)
 . . . . . D WRITESEG("RX")
"RTN","PSOSPMUT",137,0)
 . . . . . D WRITESEG("DSP")
"RTN","PSOSPMUT",138,0)
 . . . . . D WRITESEG("PRE")
"RTN","PSOSPMUT",139,0)
 . . . . . D WRITESEG("RPH")
"RTN","PSOSPMUT",140,0)
 . . . . . D WRITESEG("PLN")
"RTN","PSOSPMUT",141,0)
 . . D WRITESEG("TP")
"RTN","PSOSPMUT",142,0)
 . D WRITESEG("TT")
"RTN","PSOSPMUT",143,0)
   ; Close the file
"RTN","PSOSPMUT",144,0)
 I MODE="EXPORT" D CLOSE^%ZISH("EXPFILE") I '$G(BCKGRND) W "Done."
"RTN","PSOSPMUT",145,0)
 ;--------------------------------------------------------------------------------------
"RTN","PSOSPMUT",146,0)
 I MODE="VIEW",PSOASVER'="1995" S XX="",$P(XX,"-",80)="" W !,XX
"RTN","PSOSPMUT",147,0)
 S (PSOFTPOK,PSODELOK)=""
"RTN","PSOSPMUT",148,0)
 I MODE="EXPORT" D
"RTN","PSOSPMUT",149,0)
 . ; Automated Transmission (RSA keys)
"RTN","PSOSPMUT",150,0)
 . I PSOAUTO D
"RTN","PSOSPMUT",151,0)
 . . I '$G(BCKGRND) W !,"Transmitting file to the State (",$$GET1^DIQ(58.41,PSOSTATE,7),")...",!
"RTN","PSOSPMUT",152,0)
 . . S PSOFTPOK=$$FTPFILE^PSOSPMU1(PSOSTIP,PSOSTUSR,LOCDIR,FTPFILE,LOGFILE,INPTFILE,PSOPORT)
"RTN","PSOSPMUT",153,0)
 . . ;Retrieving Log File content into ^TMP("PSOFTPLG",$J) temporary global
"RTN","PSOSPMUT",154,0)
 . . I +(PSOFTPOK)'=-1 D
"RTN","PSOSPMUT",155,0)
 . . . K ^TMP("PSOFTPLG",$J)
"RTN","PSOSPMUT",156,0)
 . . . S XLOG=$$FTG^%ZISH(LOCDIR,LOGFILE,$NAME(^TMP("PSOFTPLG",$J,1)),3)
"RTN","PSOSPMUT",157,0)
 . . . N LOG,LINE,UPLINE
"RTN","PSOSPMUT",158,0)
 . . . S (LOG,LINE)=0,PSOFTPOK=""
"RTN","PSOSPMUT",159,0)
 . . . F  S LOG=$O(^TMP("PSOFTPLG",$J,LOG)) Q:LOG=""  D  I $P(PSOFTPOK,"^")="-1" Q
"RTN","PSOSPMUT",160,0)
 . . . . S LINE=$G(^TMP("PSOFTPLG",$J,LOG)),UPLINE=$$UP^XLFSTR(LINE)
"RTN","PSOSPMUT",161,0)
 . . . . I (UPLINE["LOGIN REQUEST REJECTED")!(UPLINE["FATAL:")!(UPLINE["ERROR") S PSOFTPOK=-1
"RTN","PSOSPMUT",162,0)
 . . . . I (UPLINE["VERIFICATION FAILED")!(UPLINE["NO SUCH FILE OR DIRECTORY") S PSOFTPOK=-1
"RTN","PSOSPMUT",163,0)
 . . . . I (UPLINE["COMMAND CANNOT BE FOUND")!(UPLINE["COMMAND NOT FOUND") S PSOFTPOK=-1
"RTN","PSOSPMUT",164,0)
 . . . . I (UPLINE["COULDN'T READ PACKET")!(UPLINE["INVALID DIRECTORY") S PSOFTPOK=-1
"RTN","PSOSPMUT",165,0)
 . . . . I +PSOFTPOK=-1 S $P(PSOFTPOK,"^",2)="Error transmitting the file: "_LINE
"RTN","PSOSPMUT",166,0)
 . ; Manual Transmission (Password)
"RTN","PSOSPMUT",167,0)
 . K DTOUT,DUOUT I 'PSOAUTO D
"RTN","PSOSPMUT",168,0)
 . . W !!,"Step 2: Copy the "_$S(PSOSTDIR'="":"four",1:"three")_" lines of text below into the clipboard (highlight the"
"RTN","PSOSPMUT",169,0)
 . . W !?8,"lines then right-click the  mouse and select 'Copy').",!
"RTN","PSOSPMUT",170,0)
 . . W:$G(PSOSTDIR)'="" !,"cd "_PSOSTDIR
"RTN","PSOSPMUT",171,0)
 . . W !,"put "_$S(PSOOS["VMS":$$XVMSDIR^PSOSPMU1(LOCDIR),1:LOCDIR)_EXPFILE
"RTN","PSOSPMUT",172,0)
 . . W !,"rename "_EXPFILE_" "_$P(EXPFILE,".up",1)_PSOFLEXT
"RTN","PSOSPMUT",173,0)
 . . W !,"exit",!
"RTN","PSOSPMUT",174,0)
 . . K DIR,DTOUT,DUOUT S DIR(0)="E",DIR("A")="Then press <RETURN> to go to the next step." D ^DIR I $G(DTOUT)!$G(DUOUT) Q
"RTN","PSOSPMUT",175,0)
 . . W !!,"Step 3: Enter the sFTP password and press <RETURN>"
"RTN","PSOSPMUT",176,0)
 . . W !!,"Step 4: Once you get the 'sftp>' prompt, paste the text copied on step 2"
"RTN","PSOSPMUT",177,0)
 . . W !?8,"(right-click the mouse and select 'Paste').",!!
"RTN","PSOSPMUT",178,0)
 . . N XPV1,PV S XPV1="S PV=$ZF(-1,""sftp"_$S(PSOPORT:" -oPort="_PSOPORT,1:"")_" "_$TR(PSOSTUSR,"""","")_"@"_PSOSTIP_""")"
"RTN","PSOSPMUT",179,0)
 . . X XPV1
"RTN","PSOSPMUT",180,0)
 . ;Deleting files
"RTN","PSOSPMUT",181,0)
 . S PSODELOK=$$DELFILE^PSOSPMU1(LOCDIR_EXPFILE)
"RTN","PSOSPMUT",182,0)
 . I $G(INPTFILE)'="" D DELFILE^PSOSPMU1(LOCDIR_INPTFILE)
"RTN","PSOSPMUT",183,0)
 . I PSOAUTO S PSODELOK=$$DELFILE^PSOSPMU1(LOCDIR_LOGFILE)
"RTN","PSOSPMUT",184,0)
 . I PSOOS["VMS" D
"RTN","PSOSPMUT",185,0)
 . . S PSODELOK=$$DELFILE^PSOSPMU1(LOCDIR_FTPFILE)
"RTN","PSOSPMUT",186,0)
 . . S PSODELOK=$$DELFILE^PSOSPMU1(LOCDIR_"VMSSSHID.")
"RTN","PSOSPMUT",187,0)
 . . S PSODELOK=$$DELFILE^PSOSPMU1(LOCDIR_"VMSSSHKEY.")
"RTN","PSOSPMUT",188,0)
 . . S PSODELOK=$$DELFILE^PSOSPMU1(LOCDIR_"VMSSSHKEY.PUB")
"RTN","PSOSPMUT",189,0)
 . I PSOOS["UNIX" D
"RTN","PSOSPMUT",190,0)
 . . S PSODELOK=$$DELFILE^PSOSPMU1(LOCDIR_"VMSSSHKEY")
"RTN","PSOSPMUT",191,0)
 . . S PSODELOK=$$DELFILE^PSOSPMU1(LOCDIR_"linuxsshkey")
"RTN","PSOSPMUT",192,0)
 . I PSOOS["NT" D
"RTN","PSOSPMUT",193,0)
 . . S PSODELOK=$$DELFILE^PSOSPMU1(LOCDIR_FTPFILE)
"RTN","PSOSPMUT",194,0)
 . . S PSODELOK=$$DELFILE^PSOSPMU1(LOCDIR_"VMSSSHKEY")
"RTN","PSOSPMUT",195,0)
 . . S PSODELOK=$$DELFILE^PSOSPMU1(LOCDIR_"VMSSSHKEY.PUB")
"RTN","PSOSPMUT",196,0)
 . I 'PSOAUTO,$G(DTOUT)!$G(DUOUT) Q
"RTN","PSOSPMUT",197,0)
 . I $P(PSOFTPOK,"^",1)=-1 D LOGERROR(BATCHIEN,0,$P(PSOFTPOK,"^",2),$G(BCKGRND)) Q
"RTN","PSOSPMUT",198,0)
 . I $P(PSODELOK,"^",1)=-1 D LOGERROR(BATCHIEN,0,$P(PSODELOK,"^",2),$G(BCKGRND)) Q
"RTN","PSOSPMUT",199,0)
 . I '$G(BCKGRND),PSOAUTO H 1 W !!,"File Successfully Transmitted.",!
"RTN","PSOSPMUT",200,0)
 . I 'PSOAUTO D  I $G(DTOUT)!$G(DUOUT)!'Y Q
"RTN","PSOSPMUT",201,0)
 . . K DIR S DIR("A")="Was the file transmitted successfully",DIR(0)="Y",DIR("B")="N"
"RTN","PSOSPMUT",202,0)
 . . D ^DIR
"RTN","PSOSPMUT",203,0)
 . S DIE="^PS(58.42,",DA=BATCHIEN,DR="6///"_EXPFILE2_";7////"_DUZ_";9///"_$$NOW^XLFDT() D ^DIE
"RTN","PSOSPMUT",204,0)
 W ! L -@("PMP"_DATETIME)
"RTN","PSOSPMUT",205,0)
 Q
"RTN","PSOSPMUT",206,0)
 ;
"RTN","PSOSPMUT",207,0)
WRITESEG(SEGID) ; Write the ASAP segment to the file
"RTN","PSOSPMUT",208,0)
 N ASFLDNUM,LASTELEM
"RTN","PSOSPMUT",209,0)
 I '$D(ASAP(SEGID)) Q
"RTN","PSOSPMUT",210,0)
 I $G(MODE)="VIEW" W ?$S(SEGID="PHA":3,SEGID="PAT":7,$F("DSP RX",SEGID):11,$F("PRE RPH PLN",SEGID):15,SEGID="TP":3,1:0)
"RTN","PSOSPMUT",211,0)
 S LASTELEM=+$O(ASAP(SEGID,""),-1)
"RTN","PSOSPMUT",212,0)
 W SEGID
"RTN","PSOSPMUT",213,0)
 F ASFLDNUM=1:1:LASTELEM D
"RTN","PSOSPMUT",214,0)
 . W SCHR I '$D(ASAP(SEGID,ASFLDNUM)) Q  ; Field Not Used
"RTN","PSOSPMUT",215,0)
 . X "W $$"_$P(ASAP(SEGID,ASFLDNUM),"^")_"^PSOASAP0()"
"RTN","PSOSPMUT",216,0)
 I PSOASVER="3.0" W $$TH13^PSOASAP0(),!
"RTN","PSOSPMUT",217,0)
 I PSOASVER'="3.0" W $$TH09^PSOASAP0(),!
"RTN","PSOSPMUT",218,0)
 Q
"RTN","PSOSPMUT",219,0)
 ;
"RTN","PSOSPMUT",220,0)
SCREEN(RXIEN,RXFILL) ; Screens Rx's from being sent to the State
"RTN","PSOSPMUT",221,0)
 ; Input: RXIEN - PRESCRIPTION file (#52) IEN
"RTN","PSOSPMUT",222,0)
 ;        RXFILL - Fill Number
"RTN","PSOSPMUT",223,0)
 ;Output: $$SCREEN  - 1:YES/0:NO^Error/Warning Message^E:Error/W:Warning
"RTN","PSOSPMUT",224,0)
 ;
"RTN","PSOSPMUT",225,0)
 ; Not a Controlled Substance
"RTN","PSOSPMUT",226,0)
 I '$$CSRX(RXIEN) Q "1^"_$$GET1^DIQ(52,RXIEN,6)_" is not a Controlled Substance Drug.^E"
"RTN","PSOSPMUT",227,0)
 ;
"RTN","PSOSPMUT",228,0)
 ; Fills Administered in Clinic exclusion
"RTN","PSOSPMUT",229,0)
 I $$ADMCLN(RXIEN,RXFILL) Q "1^Prescription fill was administered in clinic.^E"
"RTN","PSOSPMUT",230,0)
 ;
"RTN","PSOSPMUT",231,0)
 ; Released prior to Transmission Authorization Date (02/11/2013)
"RTN","PSOSPMUT",232,0)
 I $$RXRLDT^PSOBPSUT(RXIEN,RXFILL),$$RXRLDT^PSOBPSUT(RXIEN,RXFILL)<3130211 Q "1^Prescription fill released before 02/11/2013.^E"
"RTN","PSOSPMUT",233,0)
 ;
"RTN","PSOSPMUT",234,0)
 ; Non-Veteran Patient Exclusion (Based on parameter)
"RTN","PSOSPMUT",235,0)
 N STATE,DFN,VAEL
"RTN","PSOSPMUT",236,0)
 S STATE=$$RXSTATE^PSOBPSUT(RXIEN,0)
"RTN","PSOSPMUT",237,0)
 I '$$GET1^DIQ(58.41,STATE,2,"I") D  I '$G(VAEL(4)) Q "1^Patient "_$$GET1^DIQ(52,RXIEN,2)_" is not a Veteran.^E"
"RTN","PSOSPMUT",238,0)
 . S DFN=$$GET1^DIQ(52,RXIEN,2,"I") D ELIG^VADPT
"RTN","PSOSPMUT",239,0)
 ;
"RTN","PSOSPMUT",240,0)
 Q 0
"RTN","PSOSPMUT",241,0)
 ;
"RTN","PSOSPMUT",242,0)
CSRX(RXIEN) ; Controlled Substance Rx?
"RTN","PSOSPMUT",243,0)
 ; Input: RXIEN - PRESCRIPTION file (#52) pointer
"RTN","PSOSPMUT",244,0)
 ;Output: $$CS  - 1:YES / 0:NO
"RTN","PSOSPMUT",245,0)
 N DRGIEN,DEA
"RTN","PSOSPMUT",246,0)
 S DRGIEN=$$GET1^DIQ(52,RXIEN,6,"I") I 'DRGIEN Q 0
"RTN","PSOSPMUT",247,0)
 S DEA=$$GET1^DIQ(50,DRGIEN,3)
"RTN","PSOSPMUT",248,0)
 I (DEA'["0"),(DEA'["M"),(DEA["2")!(DEA["3")!(DEA["4")!(DEA["5") Q 1
"RTN","PSOSPMUT",249,0)
 Q 0
"RTN","PSOSPMUT",250,0)
 ;
"RTN","PSOSPMUT",251,0)
ADMCLN(RXIEN,FILL) ; Returns whether the fill was administered in clinic or not
"RTN","PSOSPMUT",252,0)
 ; Input:  (r) RXIEN - Rx IEN (#52) 
"RTN","PSOSPMUT",253,0)
 ;         (o) FILL  - Refill # 
"RTN","PSOSPMUT",254,0)
 ; Output: 1 - Yes (Administered in Clinic) / 0 - No
"RTN","PSOSPMUT",255,0)
 N ADMCLN
"RTN","PSOSPMUT",256,0)
 I '$G(RXIEN) Q 0
"RTN","PSOSPMUT",257,0)
 I 'FILL S ADMCLN=+$$GET1^DIQ(52,RXIEN,14,"I")
"RTN","PSOSPMUT",258,0)
 I FILL S ADMCLN=+$$GET1^DIQ(52.1,FILL_","_RXIEN,23,"I")
"RTN","PSOSPMUT",259,0)
 Q ADMCLN
"RTN","PSOSPMUT",260,0)
 ;
"RTN","PSOSPMUT",261,0)
SPOK(STATE) ; State Parameters OK?
"RTN","PSOSPMUT",262,0)
 ; Input: STATE - STATE file (#5) pointer
"RTN","PSOSPMUT",263,0)
 N ZNODE,FNODE,F1NODE,X,STATENAM
"RTN","PSOSPMUT",264,0)
 S STATENAM=$$GET1^DIQ(5,+$G(STATE),.01)
"RTN","PSOSPMUT",265,0)
 I '$D(^PS(58.41,+$G(STATE),0)) Q "-1^PMP parameters missing for "_STATENAM
"RTN","PSOSPMUT",266,0)
 S ZNODE=$G(^PS(58.41,STATE,0))
"RTN","PSOSPMUT",267,0)
 I $P(ZNODE,"^",2)="" Q "-1^ASAP Version missing for "_STATENAM
"RTN","PSOSPMUT",268,0)
 I $P(ZNODE,"^",4)="" Q "-1^Reporting Frequency missing for "_STATENAM
"RTN","PSOSPMUT",269,0)
 S FNODE=$G(^PS(58.41,STATE,"FILE"))
"RTN","PSOSPMUT",270,0)
 S F1NODE=$G(^PS(58.41,STATE,"FILE1"))
"RTN","PSOSPMUT",271,0)
 I $$OS^%ZOSV()["VMS",$P(FNODE,"^",1)="" Q "-1^Local VMS Directory missing for "_STATENAM
"RTN","PSOSPMUT",272,0)
 I $$OS^%ZOSV()["UNIX",$P(F1NODE,"^",1)="" Q "-1^Local Unix/Linux Directory missing for "_STATENAM
"RTN","PSOSPMUT",273,0)
 I $$OS^%ZOSV()["NT",$P(F1NODE,"^",2)="" Q "-1^Local Windows/NT Directory missing for "_STATENAM
"RTN","PSOSPMUT",274,0)
 I $P(FNODE,"^",4)="" Q "-1^State FTP Server IP Address missing for "_STATENAM
"RTN","PSOSPMUT",275,0)
 I $P(FNODE,"^",5)="" Q "-1^State FTP Server username missing for "_STATENAM
"RTN","PSOSPMUT",276,0)
 I $P(ZNODE,"^",6)="A",'$O(^PS(58.41,STATE,"PRVKEY",0)) Q "-1^Secure FTP Private Key Text missing for "_STATENAM
"RTN","PSOSPMUT",277,0)
 I $P(ZNODE,"^",6)="A",'$O(^PS(58.41,STATE,"PUBKEY",0)) Q "-1^Secure FTP Public Key Text missing for "_STATENAM
"RTN","PSOSPMUT",278,0)
 Q 1
"RTN","PSOSPMUT",279,0)
 ;
"RTN","PSOSPMUT",280,0)
SETNAME(DFN) ; Set array variable PSONAME with Patient name
"RTN","PSOSPMUT",281,0)
 N NCIEN K PSONAME
"RTN","PSOSPMUT",282,0)
 S NCIEN=$$GET1^DIQ(2,DFN,1.01,"I")
"RTN","PSOSPMUT",283,0)
 I NCIEN,$$GET1^DIQ(20,NCIEN,1)'="",$$GET1^DIQ(20,NCIEN,2)'="" D  Q
"RTN","PSOSPMUT",284,0)
 . S PSONAME("LAST")=$$GET1^DIQ(20,NCIEN,1)
"RTN","PSOSPMUT",285,0)
 . S PSONAME("FIRST")=$$GET1^DIQ(20,NCIEN,2)
"RTN","PSOSPMUT",286,0)
 . S PSONAME("MIDDLE")=$$GET1^DIQ(20,NCIEN,3)
"RTN","PSOSPMUT",287,0)
 . S PSONAME("SUFFIX")=$$GET1^DIQ(20,NCIEN,4)
"RTN","PSOSPMUT",288,0)
 . S PSONAME("PREFIX")=$$GET1^DIQ(20,NCIEN,5)
"RTN","PSOSPMUT",289,0)
 ;
"RTN","PSOSPMUT",290,0)
 S PSONAME("LAST")=$P($G(VADM(1)),",",1)
"RTN","PSOSPMUT",291,0)
 S PSONAME("FIRST")=$P($P($G(VADM(1)),",",2)," ",1)
"RTN","PSOSPMUT",292,0)
 S PSONAME("MIDDLE")=$P($P($G(VADM(1)),",",2)," ",2)
"RTN","PSOSPMUT",293,0)
 S PSONAME("SUFFIX")=""
"RTN","PSOSPMUT",294,0)
 S PSONAME("PREFIX")=""
"RTN","PSOSPMUT",295,0)
 Q
"RTN","PSOSPMUT",296,0)
LOGERROR(BATCHIEN,STATEIEN,ERROR,BCKGRND) ;
"RTN","PSOSPMUT",297,0)
 I '$G(BCKGRND) W !!,ERROR,!,$C(7) Q
"RTN","PSOSPMUT",298,0)
 ;
"RTN","PSOSPMUT",299,0)
 ;Builds mail message and sends it to users of PSO SPMP NOTIFICATIONS mail group
"RTN","PSOSPMUT",300,0)
 N XMDUZ,XMMG,XMSUB,XMTEXT,XMY,XMZ,PSOMSG,USR,STANAME,LINE
"RTN","PSOSPMUT",301,0)
 ;
"RTN","PSOSPMUT",302,0)
 S STANAME=$S($G(BATCHIEN):$$GET1^DIQ(58.42,BATCHIEN,1),1:$$GET1^DIQ(5,STATEIEN,.01))
"RTN","PSOSPMUT",303,0)
 S XMSUB=STANAME_" Prescription Monitoring Program Transmission Failed"
"RTN","PSOSPMUT",304,0)
 S XMDUZ="SPMP Scheduled Transmission"
"RTN","PSOSPMUT",305,0)
 S PSOMSG(1)="There was a problem with the transmission of information about Controlled"
"RTN","PSOSPMUT",306,0)
 S PSOMSG(2)="Substance prescriptions to the "_STANAME_" State Prescription Monitoring"
"RTN","PSOSPMUT",307,0)
 s PSOMSG(3)="Program (SPMP)."
"RTN","PSOSPMUT",308,0)
 S PSOMSG(4)="",LINE=5
"RTN","PSOSPMUT",309,0)
 I $G(BATCHIEN) D
"RTN","PSOSPMUT",310,0)
 . S PSOMSG(LINE)="Batch #: "_BATCHIEN,LINE=LINE+1
"RTN","PSOSPMUT",311,0)
 . S PSOMSG(LINE)="Period : "_$$FMTE^XLFDT($$GET1^DIQ(58.42,BATCHIEN,4,"I")\1,"2Z")_" thru "_$$FMTE^XLFDT($$GET1^DIQ(58.42,BATCHIEN,5,"I")\1,"2Z"),LINE=LINE+1
"RTN","PSOSPMUT",312,0)
 . S PSOMSG(LINE)="Error  : "_ERROR,LINE=LINE+1
"RTN","PSOSPMUT",313,0)
 . S PSOMSG(LINE)="",LINE=LINE+1
"RTN","PSOSPMUT",314,0)
 . S PSOMSG(LINE)="Please, use the option Export Batch Processing [PSO SPMP BATCH PROCESSING] to",LINE=LINE+1
"RTN","PSOSPMUT",315,0)
 . S PSOMSG(LINE)="manually transmit this batch to the state.",LINE=LINE+1
"RTN","PSOSPMUT",316,0)
 E  S PSOMSG(LINE)="Error  : "_ERROR,LINE=LINE+1
"RTN","PSOSPMUT",317,0)
 S XMTEXT="PSOMSG("
"RTN","PSOSPMUT",318,0)
 ;
"RTN","PSOSPMUT",319,0)
 ; If there are no active members in the mailgroup sends message to PSDMGR key holders
"RTN","PSOSPMUT",320,0)
 I $$GOTLOCAL^XMXAPIG("PSO SPMP NOTIFICATIONS") D
"RTN","PSOSPMUT",321,0)
 . S XMY("G.PSO SPMP NOTIFICATIONS")=""
"RTN","PSOSPMUT",322,0)
 E  D
"RTN","PSOSPMUT",323,0)
 . S USR=0 F  S USR=$O(^XUSEC("PSDMGR",USR)) Q:'USR  S XMY(USR)=""
"RTN","PSOSPMUT",324,0)
 ;
"RTN","PSOSPMUT",325,0)
 D ^XMD
"RTN","PSOSPMUT",326,0)
 Q
"SEC","^DIC",58.4,58.4,0,"AUDIT")
@
"SEC","^DIC",58.4,58.4,0,"DD")
@
"SEC","^DIC",58.4,58.4,0,"DEL")
@
"SEC","^DIC",58.4,58.4,0,"LAYGO")
@
"SEC","^DIC",58.4,58.4,0,"RD")
@
"SEC","^DIC",58.4,58.4,0,"WR")
@
"SEC","^DIC",58.41,58.41,0,"AUDIT")
@
"SEC","^DIC",58.41,58.41,0,"DD")
@
"SEC","^DIC",58.41,58.41,0,"DEL")
@
"SEC","^DIC",58.41,58.41,0,"LAYGO")
@
"SEC","^DIC",58.41,58.41,0,"RD")
@
"SEC","^DIC",58.41,58.41,0,"WR")
@
"SEC","^DIC",58.42,58.42,0,"AUDIT")
@
"SEC","^DIC",58.42,58.42,0,"DD")
@
"SEC","^DIC",58.42,58.42,0,"DEL")
@
"SEC","^DIC",58.42,58.42,0,"LAYGO")
@
"SEC","^DIC",58.42,58.42,0,"RD")
@
"SEC","^DIC",58.42,58.42,0,"WR")
@
"UP",52,52.07,-1)
52^RTS
"UP",52,52.07,0)
52.07
"UP",52,52.1,-1)
52^1
"UP",52,52.1,0)
52.1
"VER")
8.0^22.0
"^DD",52,52,14,0)
ADMINISTERED IN CLINIC^S^1:YES;^0;15^Q
"^DD",52,52,14,3)
Indicate if the fill was administered in clinic. 
"^DD",52,52,14,21,0)
^^1^1^3121213^^^
"^DD",52,52,14,21,1,0)
This indicates if the medication was administered in a clinic instead of being dispensed to the patient.
"^DD",52,52,14,"DT")
3130116
"^DD",52,52,70,0)
RETURN TO STOCK LOG^52.07D^^RTS;0
"^DD",52,52,70,21,0)
^.001^1^1^3130122^^^
"^DD",52,52,70,21,1,0)
This sub-file contains a record for each fill returned to stock for the prescription.
"^DD",52,52,70,23,0)
^^3^3^3130122^
"^DD",52,52,70,23,1,0)
This sub-file was created with the intent of capturing ALL the fields from a prescription fill when they are returned to stock. The reason was because the entire fill record (Refills and Partial fills) gets deleted when the fill is returned to
"^DD",52,52,70,23,2,0)
stock. Because we are required to report to the states on a regular basis information about controlled substance prescription fills dispense and returned to stock. By preserving the record before it gets deleted we are able to later transmit it
"^DD",52,52,70,23,3,0)
to the states.
"^DD",52,52.07,0)
RETURN TO STOCK LOG SUB-FIELD^^8^33
"^DD",52,52.07,0,"DIK")
PSOXZA
"^DD",52,52.07,0,"DT")
3130129
"^DD",52,52.07,0,"IX","B",52.07,.01)

"^DD",52,52.07,0,"NM","RETURN TO STOCK LOG")

"^DD",52,52.07,0,"UP")
52
"^DD",52,52.07,.01,0)
RETURN TO STOCK DATE/TIME^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",52,52.07,.01,1,0)
^.1
"^DD",52,52.07,.01,1,1,0)
52.07^B
"^DD",52,52.07,.01,1,1,1)
S ^PSRX(DA(1),"RTS","B",$E(X,1,30),DA)=""
"^DD",52,52.07,.01,1,1,2)
K ^PSRX(DA(1),"RTS","B",$E(X,1,30),DA)
"^DD",52,52.07,.01,3)
Enter the date/time the prescription fill was returned to stock.
"^DD",52,52.07,.01,21,0)
^^1^1^3121212^^
"^DD",52,52.07,.01,21,1,0)
This is the date/time the prescription fill was returned to stock.
"^DD",52,52.07,.01,"DT")
3130116
"^DD",52,52.07,1,0)
FILL NUMBER^F^^0;2^K:$L(X)>3!($L(X)<1) X
"^DD",52,52.07,1,3)
Answer must be 1-3 characters in length.
"^DD",52,52.07,1,21,0)
^^2^2^3121212^
"^DD",52,52.07,1,21,1,0)
This is the prescription fill number that was returned to stock (e.g., "0" for the original fill, "1" for refill 1, "2" for refill 2, ...). For partial fills, the letter "P" is appended to the fill number (e.g., "P1" for partial fill 1, "P2",
"^DD",52,52.07,1,21,2,0)
for partial fill 2, ...).
"^DD",52,52.07,1,"DT")
3121212
"^DD",52,52.07,2,0)
FILL DATE^D^^0;3^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",52,52.07,2,3)
Enter the fill date of the fill that was returned to stock.
"^DD",52,52.07,2,21,0)
^^1^1^3121212^
"^DD",52,52.07,2,21,1,0)
This is the date the prescription was filled.
"^DD",52,52.07,2,"DT")
3130116
"^DD",52,52.07,3,0)
QUANTITY^NJ11,2^^0;4^K:(+X'>0)!(+X>99999999)!(X'?.8N.1""."".2N)!($L(X)>11) X
"^DD",52,52.07,3,3)
Type a number between .01 and 99999999, 2 decimal digits.
"^DD",52,52.07,3,21,0)
^^1^1^3121212^^
"^DD",52,52.07,3,21,1,0)
This is the quantity of medication dispensed for the fill.
"^DD",52,52.07,3,"DT")
3121212
"^DD",52,52.07,4,0)
DAYS SUPPLY^NJ2,0^^0;5^K:+X'=X!(X>90)!(X<1)!(X?.E1"."1.N) X
"^DD",52,52.07,4,3)
Type a number between 1 and 90, 0 decimal digits.
"^DD",52,52.07,4,21,0)
^^1^1^3121212^^
"^DD",52,52.07,4,21,1,0)
This is the number of days of supply dispensed with the fill.
"^DD",52,52.07,4,"DT")
3121212
"^DD",52,52.07,5,0)
UNIT PRICE OF DRUG^NJ9,4^^0;6^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."5.N) X
"^DD",52,52.07,5,3)
Type a number between 0 and 9999, 4 decimal digits.
"^DD",52,52.07,5,21,0)
^^1^1^3130129^^^^
"^DD",52,52.07,5,21,1,0)
This is the current unit cost of the drug at the time of fill in US dollars.
"^DD",52,52.07,5,"DT")
3130129
"^DD",52,52.07,6,0)
MAIL/WINDOW^S^M:MAIL;W:WINDOW;^0;7^Q
"^DD",52,52.07,6,3)
Indicate whether the fill was mailed to the patient or picked up at the window.
"^DD",52,52.07,6,21,0)
^^2^2^3121106^
"^DD",52,52.07,6,21,1,0)
This field contains 'M' if the fill was mailed to the patient and 'W' if 
"^DD",52,52.07,6,21,2,0)
the fill was picked up at the pharmacy window.
"^DD",52,52.07,6,"DT")
3130116
"^DD",52,52.07,7,0)
REMARKS^F^^0;8^K:$L(X)>60!($L(X)<2) X
"^DD",52,52.07,7,3)
Answer must be 2-60 characters in length.
"^DD",52,52.07,7,21,0)
^^1^1^3121106^
"^DD",52,52.07,7,21,1,0)
This is the comment entered by pharmacy staff for the fill.
"^DD",52,52.07,7,"DT")
3121106
"^DD",52,52.07,8,0)
PHARMACIST^*P200'^VA(200,^0;9^S DIC("S")="I $D(^XUSEC(""PSORPH"",Y))" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",52,52.07,8,3)
Select the pharmacist who filled the prescription.
"^DD",52,52.07,8,12)
Only select a user who has a pharmacist key (PSORHP).
"^DD",52,52.07,8,12.1)
S DIC("S")="I $D(^XUSEC(""PSORPH"",Y))"
"^DD",52,52.07,8,21,0)
^^1^1^3130208^^
"^DD",52,52.07,8,21,1,0)
This is the pharmacist who filled the prescription.
"^DD",52,52.07,8,"DT")
3130208
"^DD",52,52.07,9,0)
LOT #^F^^0;10^K:$L(X)>20!($L(X)<1) X
"^DD",52,52.07,9,3)
Answer must be 1-20 characters in length.
"^DD",52,52.07,9,21,0)
^^1^1^3121106^
"^DD",52,52.07,9,21,1,0)
This is the lot # of the dispense drug used for the fill.
"^DD",52,52.07,9,"DT")
3121106
"^DD",52,52.07,10,0)
CLERK^P200'^VA(200,^0;11^Q
"^DD",52,52.07,10,3)
Select the clerk for the prescription fill.
"^DD",52,52.07,10,21,0)
^^1^1^3121106^
"^DD",52,52.07,10,21,1,0)
This is the clerk for the fill.
"^DD",52,52.07,10,"DT")
3130116
"^DD",52,52.07,11,0)
LOGIN DATE^D^^0;12^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",52,52.07,11,3)
Enter the date the refill record was created.
"^DD",52,52.07,11,21,0)
^^1^1^3130116^^
"^DD",52,52.07,11,21,1,0)
This is the date the refill record was created.
"^DD",52,52.07,11,"DT")
3130116
"^DD",52,52.07,12,0)
DIVISION^P59'^PS(59,^0;13^Q
"^DD",52,52.07,12,3)
Select the pharmacy division that dispensed the prescription fill.
"^DD",52,52.07,12,21,0)
^^1^1^3130116^^
"^DD",52,52.07,12,21,1,0)
This is the pharmacy division that dispensed the prescription fill.
"^DD",52,52.07,12,"DT")
3130116
"^DD",52,52.07,13,0)
IB NUMBER^P350'^IB(^IB;1^Q
"^DD",52,52.07,13,3)
Select the Integrated Billing copay transaction.
"^DD",52,52.07,13,21,0)
^^1^1^3121106^
"^DD",52,52.07,13,21,1,0)
This is the Integrated Billing action associated with the fill.
"^DD",52,52.07,13,"DT")
3130116
"^DD",52,52.07,14,0)
COPAY EXCEEDING CAP^P354.71'^IBAM(354.71,^IB;2^Q
"^DD",52,52.07,14,3)
Select the IB Copay Transaction for this prescription fill.
"^DD",52,52.07,14,21,0)
^^2^2^3121106^
"^DD",52,52.07,14,21,1,0)
This is the Integrated Billing Copay Transaction entry. It indicates the 
"^DD",52,52.07,14,21,2,0)
fill's copay exceeded the annual copay cap.
"^DD",52,52.07,14,"DT")
3130206
"^DD",52,52.07,15,0)
DISPENSED DATE^D^^0;14^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",52,52.07,15,3)
Enter the date the medication was placed into the package.
"^DD",52,52.07,15,21,0)
^^1^1^3121106^
"^DD",52,52.07,15,21,1,0)
This is the date the medication was placed into the package.
"^DD",52,52.07,15,"DT")
3130116
"^DD",52,52.07,16,0)
NDC^F^^0;15^K:$L(X)>13!($L(X)<5) X
"^DD",52,52.07,16,3)
Answer must be 5-13 characters in length.
"^DD",52,52.07,16,21,0)
^^1^1^3121106^
"^DD",52,52.07,16,21,1,0)
This is the National Drug Code for the fill.
"^DD",52,52.07,16,"DT")
3121106
"^DD",52,52.07,17,0)
MANUFACTURER^F^^0;16^K:$L(X)>50!($L(X)<3) X
"^DD",52,52.07,17,3)
Answer must be 3-50 characters in length.
"^DD",52,52.07,17,21,0)
^^1^1^3121106^
"^DD",52,52.07,17,21,1,0)
This is the name of the manufacturer of the dispense drug in the fill.
"^DD",52,52.07,17,"DT")
3130116
"^DD",52,52.07,18,0)
DRUG EXPIRATION DATE^D^^0;17^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",52,52.07,18,3)
Enter the expiration date for the medication dispensed.
"^DD",52,52.07,18,21,0)
^^1^1^3121212^
"^DD",52,52.07,18,21,1,0)
This date is used to show the expiration date of the medication. The date reflects the manufacturer's expiration date, not the date the Rx can no longer be filled.
"^DD",52,52.07,18,"DT")
3130116
"^DD",52,52.07,19,0)
PROVIDER^*P200'^VA(200,^1;1^S DIC("S")="S X(1)=$G(^(""PS"")) I +X(1),$S('$P(X(1),""^"",4):1,1:$P(X(1),""^"",4)'<DT)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",52,52.07,19,3)
Select the provider who saw the patient when the prescription was filled.
"^DD",52,52.07,19,12)
Only valid providers can be selected.
"^DD",52,52.07,19,12.1)
S DIC("S")="S X(1)=$G(^(""PS"")) I +X(1),$S('$P(X(1),""^"",4):1,1:$P(X(1),""^"",4)'<DT)"
"^DD",52,52.07,19,21,0)
^^1^1^3121106^
"^DD",52,52.07,19,21,1,0)
This is the provider seeing the patient at the time of this fill.
"^DD",52,52.07,19,"DT")
3130116
"^DD",52,52.07,20,0)
ADMINISTERED IN CLINIC^S^1:YES;^0;18^Q
"^DD",52,52.07,20,3)
Indicate if the fill was administered in clinic.
"^DD",52,52.07,20,21,0)
^^1^1^3121212^
"^DD",52,52.07,20,21,1,0)
This indicates whether the fill was administered in clinic or not.
"^DD",52,52.07,20,"DT")
3130116
"^DD",52,52.07,21,0)
RELEASED DATE/TIME^D^^1;2^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",52,52.07,21,3)
Enter the date/time the prescription fill was released.
"^DD",52,52.07,21,21,0)
^^1^1^3121106^
"^DD",52,52.07,21,21,1,0)
This is the date/time the fill was released.
"^DD",52,52.07,21,"DT")
3130206
"^DD",52,52.07,22,0)
GENERIC PROVIDER^F^^1;3^K:$L(X)>45!($L(X)<3) X
"^DD",52,52.07,22,3)
Answer must be 3-45 characters in length.
"^DD",52,52.07,22,21,0)
^^1^1^3130122^^
"^DD",52,52.07,22,21,1,0)
This is a provider outside the medical center who provided care to the patient.
"^DD",52,52.07,22,"DT")
3130122
"^DD",52,52.07,23,0)
BINGO BOARD WAIT TIME^NJ4,0^^1;4^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1.N) X
"^DD",52,52.07,23,3)
Type a number between 1 and 9999, 0 decimal digits.
"^DD",52,52.07,23,21,0)
^^1^1^3130116^^
"^DD",52,52.07,23,21,1,0)
This field specifies, in minutes, the total wait time for bingo board purposes.
"^DD",52,52.07,23,"DT")
3130116
"^DD",52,52.07,24,0)
FILLING PERSON^P200'^VA(200,^1;5^Q
"^DD",52,52.07,24,3)
Select the person who scanned the barcode before filling the prescription.
"^DD",52,52.07,24,21,0)
^^2^2^3121106^
"^DD",52,52.07,24,21,1,0)
This is the person who scanned the barcode before filling the 
"^DD",52,52.07,24,21,2,0)
prescription.
"^DD",52,52.07,24,"DT")
3130116
"^DD",52,52.07,25,0)
CHECKING PHARMACIST^P200'^VA(200,^1;6^Q
"^DD",52,52.07,25,3)
Select the pharmacist who checked the medication.
"^DD",52,52.07,25,21,0)
^^1^1^3121106^
"^DD",52,52.07,25,21,1,0)
This is the pharmacist who checked the medication.
"^DD",52,52.07,25,"DT")
3130116
"^DD",52,52.07,26,0)
PFSS ACCOUNT REFERENCE^P375'^IBBAA(375,^PFS;1^Q
"^DD",52,52.07,26,3)
Enter the PFSS Account reference number.
"^DD",52,52.07,26,21,0)
^^1^1^3130116^^
"^DD",52,52.07,26,21,1,0)
This is a reference number to an external medical billing system Account Number for the purposes of uniquely identifying prescription charges for 1st or 3rd party billing.
"^DD",52,52.07,26,"DT")
3130116
"^DD",52,52.07,27,0)
PFSS CHARGE ID^NJ8,0^^PFS;2^K:+X'=X!(X>99999999)!(X<90000000)!(X?.E1"."1.N) X
"^DD",52,52.07,27,3)
Type a number between 90000000 and 99999999, 0 decimal digits.
"^DD",52,52.07,27,21,0)
^^2^2^3121106^
"^DD",52,52.07,27,21,1,0)
This is another unique identifier required when prescription charge  
"^DD",52,52.07,27,21,2,0)
messages are passed to the external billing system.
"^DD",52,52.07,27,"DT")
3121106
"^DD",52,52.07,28,0)
DAW CODE^NJ3,0^^EPH;1^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1.N) X
"^DD",52,52.07,28,3)
Type a number between 0 and 999, 0 decimal digits.
"^DD",52,52.07,28,21,0)
^^3^3^3121106^
"^DD",52,52.07,28,21,1,0)
This is the Dispensed As Written code for the fill. This information is 
"^DD",52,52.07,28,21,2,0)
used for NCPDP electronic claim transmission to third party payers 
"^DD",52,52.07,28,21,3,0)
(insurance companies).
"^DD",52,52.07,28,"DT")
3121106
"^DD",52,52.07,29,0)
DATE/TIME NDC VALIDATED^D^^EPH;2^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",52,52.07,29,3)
Enter the date/time the NDC was validated.
"^DD",52,52.07,29,21,0)
^^2^2^3121106^
"^DD",52,52.07,29,21,1,0)
This is the date/time the NDC was validated prior to release of the 
"^DD",52,52.07,29,21,2,0)
prescription fill.
"^DD",52,52.07,29,"DT")
3130206
"^DD",52,52.07,30,0)
NDC VALIDATED BY^P200'^VA(200,^EPH;3^Q
"^DD",52,52.07,30,3)
Select the user who validated the NDC for the prescription fill.
"^DD",52,52.07,30,21,0)
^^1^1^3121106^
"^DD",52,52.07,30,21,1,0)
This is the user who validated the NDC for the fill.
"^DD",52,52.07,30,"DT")
3130116
"^DD",52,52.07,31,0)
BILLING ELIGIBILITY INDICATOR^S^T:TRICARE;V:VETERAN;C:CHAMPVA;^EPH;4^Q
"^DD",52,52.07,31,3)
Choose the Billing Eligibility Indicator for the prescription fill.
"^DD",52,52.07,31,21,0)
^^2^2^3121106^
"^DD",52,52.07,31,21,1,0)
This is the billing eligibility indicator used to bill insurance 
"^DD",52,52.07,31,21,2,0)
companies for the fill.
"^DD",52,52.07,31,"DT")
3130116
"^DD",52,52.07,32,0)
EPHARMACY SUSPENSE HOLD DATE^D^^EPH;5^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",52,52.07,32,3)
Enter the date until which the prescription fill should be held on suspense.
"^DD",52,52.07,32,21,0)
^^1^1^3121106^
"^DD",52,52.07,32,21,1,0)
This is the date until when the fill should be held on suspense.
"^DD",52,52.07,32,"DT")
3130220
"^DD",52,52.1,23,0)
ADMINISTERED IN CLINIC^S^1:YES;^0;20^Q
"^DD",52,52.1,23,3)
Indicate if the fill was administered in clinic.
"^DD",52,52.1,23,21,0)
^^1^1^3121213^^^
"^DD",52,52.1,23,21,1,0)
This indicates if the medication was administered in a clinic instead of being dispensed to the patient.
"^DD",52,52.1,23,"DT")
3130116
"^DD",58.4,58.4,0)
FIELD^^1^2
"^DD",58.4,58.4,0,"DDA")
N
"^DD",58.4,58.4,0,"DT")
3130606
"^DD",58.4,58.4,0,"IX","B",58.4,.01)

"^DD",58.4,58.4,0,"NM","SPMP ASAP RECORD DEFINITION")

"^DD",58.4,58.4,0,"VRPK")
PSO
"^DD",58.4,58.4,.01,0)
NAME^RF^^0;1^K:$L(X)>50!($L(X)<1)!'(X'?1P.E) X
"^DD",58.4,58.4,.01,1,0)
^.1
"^DD",58.4,58.4,.01,1,1,0)
58.4^B
"^DD",58.4,58.4,.01,1,1,1)
S ^PS(58.4,"B",$E(X,1,30),DA)=""
"^DD",58.4,58.4,.01,1,1,2)
K ^PS(58.4,"B",$E(X,1,30),DA)
"^DD",58.4,58.4,.01,3)
Answer must be 1-50 characters in length.
"^DD",58.4,58.4,.01,21,0)
^^1^1^3121213^
"^DD",58.4,58.4,.01,21,1,0)
This is the name of the American Society for Automation in Pharmacy (ASAP) data format definition.
"^DD",58.4,58.4,.01,"DT")
3130123
"^DD",58.4,58.4,1,0)
VERSION^58.4001^^VER;0
"^DD",58.4,58.4,1,21,0)
^^1^1^3130116^^
"^DD",58.4,58.4,1,21,1,0)
This multiple contains information related to the version of the American Society for Automation in Pharmacy (ASAP) data format definition.
"^DD",58.4,58.4001,0)
VERSION SUB-FIELD^^1^2
"^DD",58.4,58.4001,0,"DT")
3130606
"^DD",58.4,58.4001,0,"IX","B",58.4001,.01)

"^DD",58.4,58.4001,0,"NM","VERSION")

"^DD",58.4,58.4001,0,"UP")
58.4
"^DD",58.4,58.4001,.01,0)
VERSION^MF^^0;1^K:$L(X)>10!($L(X)<1) X
"^DD",58.4,58.4001,.01,1,0)
^.1
"^DD",58.4,58.4001,.01,1,1,0)
58.4001^B
"^DD",58.4,58.4001,.01,1,1,1)
S ^PS(58.4,DA(1),"VER","B",$E(X,1,30),DA)=""
"^DD",58.4,58.4001,.01,1,1,2)
K ^PS(58.4,DA(1),"VER","B",$E(X,1,30),DA)
"^DD",58.4,58.4001,.01,3)
Answer must be 1-10 characters in length.
"^DD",58.4,58.4001,.01,21,0)
^^1^1^3130116^^
"^DD",58.4,58.4001,.01,21,1,0)
This is the version of the American Society for Automation in Pharmacy (ASAP) data format definition.
"^DD",58.4,58.4001,.01,"DT")
3130116
"^DD",58.4,58.4001,1,0)
SEGMENT^58.40011I^^SEG;0
"^DD",58.4,58.4001,1,21,0)
^^1^1^3130606^^^^
"^DD",58.4,58.4001,1,21,1,0)
This multiple contains information about the segment of the American Society for Automation in Pharmacy (ASAP) data format definition.
"^DD",58.4,58.40011,0)
SEGMENT SUB-FIELD^^.05^6
"^DD",58.4,58.40011,0,"DT")
3130606
"^DD",58.4,58.40011,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",58.4,58.40011,0,"IX","B",58.40011,.01)

"^DD",58.4,58.40011,0,"NM","SEGMENT")

"^DD",58.4,58.40011,0,"UP")
58.4001
"^DD",58.4,58.40011,.01,0)
SEGMENT ID^MF^^0;1^K:$L(X)>5!($L(X)<1) X
"^DD",58.4,58.40011,.01,1,0)
^.1
"^DD",58.4,58.40011,.01,1,1,0)
58.40011^B
"^DD",58.4,58.40011,.01,1,1,1)
S ^PS(58.4,DA(2),"VER",DA(1),"SEG","B",$E(X,1,30),DA)=""
"^DD",58.4,58.40011,.01,1,1,2)
K ^PS(58.4,DA(2),"VER",DA(1),"SEG","B",$E(X,1,30),DA)
"^DD",58.4,58.40011,.01,3)
Answer must be 1-5 characters in length.
"^DD",58.4,58.40011,.01,"DT")
3130606
"^DD",58.4,58.40011,.02,0)
SEGMENT NAME^RF^^0;2^K:$L(X)>50!($L(X)<1) X
"^DD",58.4,58.40011,.02,3)
Answer must be 1-50 characters in length.
"^DD",58.4,58.40011,.02,21,0)
^^1^1^3121213^^
"^DD",58.4,58.40011,.02,21,1,0)
This is the segment name of the American Society for Automation in Pharmacy (ASAP) data format definition.
"^DD",58.4,58.40011,.02,"DT")
3121213
"^DD",58.4,58.40011,.03,0)
PARENT SEGMENT^F^^0;3^K:$L(X)>5!($L(X)<1) X
"^DD",58.4,58.40011,.03,3)
Answer must be 1-5 characters in length.
"^DD",58.4,58.40011,.03,21,0)
^^1^1^3121213^
"^DD",58.4,58.40011,.03,21,1,0)
This is the segment's parent segment ID.
"^DD",58.4,58.40011,.03,"DT")
3121213
"^DD",58.4,58.40011,.04,0)
REQUIREMENT^RS^R:REQUIRED;O:OPTIONAL;N:NOT USED;^0;4^Q
"^DD",58.4,58.40011,.04,3)
Indicate if the segment is required, optional or not used.
"^DD",58.4,58.40011,.04,21,0)
^^1^1^3130116^^
"^DD",58.4,58.40011,.04,21,1,0)
This indicates if the segment is required, optional or not used.
"^DD",58.4,58.40011,.04,"DT")
3130116
"^DD",58.4,58.40011,.05,0)
POSITION^RNJ3,0^^0;5^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1.N) X
"^DD",58.4,58.40011,.05,3)
Type a number between 1 and 999, 0 decimal digits.
"^DD",58.4,58.40011,.05,21,0)
^^1^1^3121213^
"^DD",58.4,58.40011,.05,21,1,0)
This indicates the position of the segment within the record.
"^DD",58.4,58.40011,.05,"DT")
3121213
"^DD",58.4,58.40011,1,0)
DATA ELEMENT^58.400111I^^DAT;0
"^DD",58.4,58.40011,1,21,0)
^^1^1^3130123^^^
"^DD",58.4,58.40011,1,21,1,0)
This multiple contains information about the data element of the American Society for Automation in Pharmacy (ASAP) data format definition.
"^DD",58.4,58.400111,0)
DATA ELEMENT SUB-FIELD^^1^7
"^DD",58.4,58.400111,0,"DT")
3130606
"^DD",58.4,58.400111,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",58.4,58.400111,0,"ID",.06)
W "   ",@("$P($P($C(59)_$S($D(^DD(58.400111,.06,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,6)_"":"",2),$C(59),1)")
"^DD",58.4,58.400111,0,"IX","B",58.400111,.01)

"^DD",58.4,58.400111,0,"NM","DATA ELEMENT")

"^DD",58.4,58.400111,0,"UP")
58.40011
"^DD",58.4,58.400111,.01,0)
ELEMENT ID^MRMF^^0;1^K:$L(X)>10!($L(X)<1) X
"^DD",58.4,58.400111,.01,1,0)
^.1
"^DD",58.4,58.400111,.01,1,1,0)
58.400111^B
"^DD",58.4,58.400111,.01,1,1,1)
S ^PS(58.4,DA(3),"VER",DA(2),"SEG",DA(1),"DAT","B",$E(X,1,30),DA)=""
"^DD",58.4,58.400111,.01,1,1,2)
K ^PS(58.4,DA(3),"VER",DA(2),"SEG",DA(1),"DAT","B",$E(X,1,30),DA)
"^DD",58.4,58.400111,.01,3)
Answer must be 1-10 characters in length.
"^DD",58.4,58.400111,.01,21,0)
^^1^1^3121213^
"^DD",58.4,58.400111,.01,21,1,0)
This is the data element ID of the American Society for Automation in Pharmacy (ASAP) data format definition.
"^DD",58.4,58.400111,.01,"DT")
3121213
"^DD",58.4,58.400111,.02,0)
ELEMENT NAME^RF^^0;2^K:$L(X)>100!($L(X)<1) X
"^DD",58.4,58.400111,.02,3)
Answer must be 1-100 characters in length.
"^DD",58.4,58.400111,.02,21,0)
^^1^1^3121213^
"^DD",58.4,58.400111,.02,21,1,0)
This is the data element name of the American Society for Automation in Pharmacy (ASAP) data format definition.
"^DD",58.4,58.400111,.02,"DT")
3121213
"^DD",58.4,58.400111,.03,0)
DATA FORMAT^S^AN:ALPHANUMERIC;N:NUMERIC;D:DECIMAL;DT:DATE;TM:TIME;^0;3^Q
"^DD",58.4,58.400111,.03,3)
Choose the format for the data element.
"^DD",58.4,58.400111,.03,21,0)
^^1^1^3130123^
"^DD",58.4,58.400111,.03,21,1,0)
This is the data element data format according to the American Society for Automation in Pharmacy (ASAP) data format definition.  
"^DD",58.4,58.400111,.03,"DT")
3130123
"^DD",58.4,58.400111,.04,0)
MAXIMUM LENGTH^NJ3,0^^0;4^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1.N) X
"^DD",58.4,58.400111,.04,3)
Type a number between 1 and 999, 0 decimal digits.
"^DD",58.4,58.400111,.04,21,0)
^^1^1^3121213^
"^DD",58.4,58.400111,.04,21,1,0)
This is the data element maximum length according to the American Society for Automation in Pharmacy (ASAP) data format definition.
"^DD",58.4,58.400111,.04,"DT")
3121213
"^DD",58.4,58.400111,.05,0)
POSITION^RNJ3,0^^0;5^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1.N) X
"^DD",58.4,58.400111,.05,3)
Type a number between 1 and 999, 0 decimal digits.
"^DD",58.4,58.400111,.05,21,0)
^^1^1^3121213^
"^DD",58.4,58.400111,.05,21,1,0)
This is the data element position within the segment according to the American Society for Automation in Pharmacy (ASAP) data format definition.
"^DD",58.4,58.400111,.05,"DT")
3121213
"^DD",58.4,58.400111,.06,0)
REQUIREMENT^RS^R:REQUIRED;O:OPTIONAL;N:NOT USED;^0;6^Q
"^DD",58.4,58.400111,.06,3)
Indicate if the data element is required, optional or not used.
"^DD",58.4,58.400111,.06,21,0)
^^1^1^3121213^
"^DD",58.4,58.400111,.06,21,1,0)
This indicates if the data element is required, optional or not used.
"^DD",58.4,58.400111,.06,"DT")
3130116
"^DD",58.4,58.400111,.07,0)
DESCRIPTION^58.4001111^^DES;0
"^DD",58.4,58.400111,.07,21,0)
^^1^1^3121213^
"^DD",58.4,58.400111,.07,21,1,0)
This is the data element description from the American Society for Automation in Pharmacy (ASAP) data format definition.
"^DD",58.4,58.4001111,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",58.4,58.4001111,0,"DT")
3130606
"^DD",58.4,58.4001111,0,"NM","DESCRIPTION")

"^DD",58.4,58.4001111,0,"UP")
58.400111
"^DD",58.4,58.4001111,.01,0)
DESCRIPTION^Wx^^0;1
"^DD",58.4,58.4001111,.01,3)
Enter the description for this data element.
"^DD",58.4,58.4001111,.01,21,0)
^^1^1^3121213^
"^DD",58.4,58.4001111,.01,21,1,0)
This is the data element description from the American Society for Automation in Pharmacy (ASAP) data format definition. 
"^DD",58.4,58.4001111,.01,"DT")
3130606
"^DD",58.41,58.41,0)
FIELD^^13^19
"^DD",58.41,58.41,0,"DDA")
Y
"^DD",58.41,58.41,0,"DT")
3131127
"^DD",58.41,58.41,0,"IX","B",58.41,.01)

"^DD",58.41,58.41,0,"NM","SPMP STATE PARAMETERS")

"^DD",58.41,58.41,0,"VRPK")
PSO
"^DD",58.41,58.41,.01,0)
STATE^RP5^DIC(5,^0;1^Q
"^DD",58.41,58.41,.01,1,0)
^.1
"^DD",58.41,58.41,.01,1,1,0)
58.41^B
"^DD",58.41,58.41,.01,1,1,1)
S ^PS(58.41,"B",$E(X,1,30),DA)=""
"^DD",58.41,58.41,.01,1,1,2)
K ^PS(58.41,"B",$E(X,1,30),DA)
"^DD",58.41,58.41,.01,3)
Select the state for which the parameters apply.
"^DD",58.41,58.41,.01,21,0)
^^1^1^3130116^^
"^DD",58.41,58.41,.01,21,1,0)
This is the state for which the parameters apply.
"^DD",58.41,58.41,.01,"DT")
3130116
"^DD",58.41,58.41,1,0)
ASAP VERSION^S^1995:ASAP 1995;3.0:ASAP 3.0;4.0:ASAP 4.0;4.1:ASAP 4.1;4.2:ASAP 4.2;^0;2^Q
"^DD",58.41,58.41,1,3)
Select the American Society for Automation in Pharmacy (ASAP) format version.
"^DD",58.41,58.41,1,21,0)
^^3^3^3121005^
"^DD",58.41,58.41,1,21,1,0)
This is the American Society for Automation in Pharmacy (ASAP) format 
"^DD",58.41,58.41,1,21,2,0)
version required for the State Prescription Monitoring Program (SPMP) 
"^DD",58.41,58.41,1,21,3,0)
data transmission.
"^DD",58.41,58.41,1,"DT")
3130501
"^DD",58.41,58.41,2,0)
INCLUDE NON-VETERAN PATIENTS^S^1:YES;0:NO;^0;3^Q
"^DD",58.41,58.41,2,3)
Include prescriptions dispensed to non-veteran patients in the export file?
"^DD",58.41,58.41,2,21,0)
^^1^1^3130521^^^^
"^DD",58.41,58.41,2,21,1,0)
This field indicates whether controlled substances prescriptions dispensed to non-veteran patients should be included in the export file transmitted to the state.
"^DD",58.41,58.41,2,"DT")
3130521
"^DD",58.41,58.41,3,0)
REPORTING FREQUENCY IN DAYS^NJ2,0^^0;4^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1.N) X
"^DD",58.41,58.41,3,3)
Type a number between 1 and 99, 0 decimal digits.
"^DD",58.41,58.41,3,21,0)
^^1^1^3130116^^^
"^DD",58.41,58.41,3,21,1,0)
This is the frequency the state requires pharmacies to report data. The value represents the number of days between transmissions of data to the state.
"^DD",58.41,58.41,3,"DT")
3130116
"^DD",58.41,58.41,4,0)
OPEN VMS LOCAL DIRECTORY^F^^FILE;1^K:$L(X)>50!($L(X)<1) X
"^DD",58.41,58.41,4,3)
Answer must be 1-50 characters in length.
"^DD",58.41,58.41,4,21,0)
^^1^1^3130129^^^^
"^DD",58.41,58.41,4,21,1,0)
This is name of the local Open VMS secure directory where the State Prescription Monitoring Program (SPMP) export file will be created before it can be transmitted to the state (e.g., USER$:[SPMP]).
"^DD",58.41,58.41,4,"DT")
3130129
"^DD",58.41,58.41,5,0)
FILE NAME PREFIX^F^^FILE;2^K:$L(X)>20!($L(X)<1) X
"^DD",58.41,58.41,5,3)
Answer must be 1-20 characters in length.
"^DD",58.41,58.41,5,21,0)
^^1^1^3121213^^
"^DD",58.41,58.41,5,21,1,0)
This is the prefix that will be appended to the name of the export file transmitted to the state.
"^DD",58.41,58.41,5,"DT")
3121213
"^DD",58.41,58.41,6,0)
FILE EXTENSION^RS^.TXT:.TXT;.DAT:.DAT;^FILE;3^Q
"^DD",58.41,58.41,6,3)
Select the extension of the export file transmitted to the state.
"^DD",58.41,58.41,6,21,0)
^^1^1^3121005^
"^DD",58.41,58.41,6,21,1,0)
This is the extension of the export file transmitted to the state.
"^DD",58.41,58.41,6,"DT")
3121005
"^DD",58.41,58.41,7,0)
STATE SFTP SERVER IP ADDRESS^F^^FILE;4^K:$L(X)>30!($L(X)<5) X
"^DD",58.41,58.41,7,3)
Answer must be 5-30 characters in length.
"^DD",58.41,58.41,7,21,0)
^^2^2^3121005^
"^DD",58.41,58.41,7,21,1,0)
This is the secure FTP IP address of the State Prescription Monitoring 
"^DD",58.41,58.41,7,21,2,0)
Program (SPMP) server where the export file will be transmitted to.
"^DD",58.41,58.41,7,"DT")
3131029
"^DD",58.41,58.41,8,0)
STATE SFTP SERVER USERNAME^F^^FILE;5^K:$L(X)>30!($L(X)<1) X
"^DD",58.41,58.41,8,3)
Answer must be 1-30 characters in length.
"^DD",58.41,58.41,8,21,0)
^^2^2^3121005^
"^DD",58.41,58.41,8,21,1,0)
This is the secure FTP username at the State Prescription Monitoring 
"^DD",58.41,58.41,8,21,2,0)
Program (SPMP) server where the export file will be transmitted to.
"^DD",58.41,58.41,8,"DT")
3131029
"^DD",58.41,58.41,9,0)
STATE SFTP SERVER PORT #^NJ9,0^^FILE;6^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1.N) X
"^DD",58.41,58.41,9,3)
Type a number between 0 and 999999999, 0 decimal digits.
"^DD",58.41,58.41,9,21,0)
^^3^3^3131029^^^
"^DD",58.41,58.41,9,21,1,0)
This is the secure FTP port number used by the State Prescription Monitoring Program (SPMP) server to receive the export file.
"^DD",58.41,58.41,9,21,2,0)
 
"^DD",58.41,58.41,9,21,3,0)
If left blank, the default secure FTP port 22 will be used.
"^DD",58.41,58.41,9,"DT")
3131029
"^DD",58.41,58.41,10,0)
STATE SFTP SERVER DIRECTORY^F^^FILE;7^K:$L(X)>50!($L(X)<1) X
"^DD",58.41,58.41,10,3)
Answer must be 1-50 characters in length.
"^DD",58.41,58.41,10,21,0)
^^3^3^3131029^^^^
"^DD",58.41,58.41,10,21,1,0)
This is the directory name at the State Prescription Monitoring Program (SPMP) server where the export file will be saved to.
"^DD",58.41,58.41,10,21,2,0)
 
"^DD",58.41,58.41,10,21,3,0)
If left blank, the default directory will be used.
"^DD",58.41,58.41,10,"DT")
3131029
"^DD",58.41,58.41,11,0)
LAST EXPORT DATE RUN^D^^EXPORT;1^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",58.41,58.41,11,3)
Enter the last date exported to the state.
"^DD",58.41,58.41,11,21,0)
^^1^1^3121213^
"^DD",58.41,58.41,11,21,1,0)
This is the last prescription release date/time exported to the state.
"^DD",58.41,58.41,11,"DT")
3131126
"^DD",58.41,58.41,12,0)
TRANSMIT RETURN TO STOCK^S^0:NO;1:YES;^0;5^Q
"^DD",58.41,58.41,12,3)
Indicate whether Return To Stock fills should automatically be transmitted to the state (in a separate file) or if reporting of such records will be handled manually.
"^DD",58.41,58.41,12,21,0)
^^1^1^3130827^^
"^DD",58.41,58.41,12,21,1,0)
This field indicates whether Return To Stock fills should automatically be transmitted to the state (in a separate file) or if reporting of such records will be handled manually.
"^DD",58.41,58.41,12,"DT")
3130827
"^DD",58.41,58.41,13,0)
SFTP TRANSMISSION MODE^S^A:AUTOMATIC [RSA KEYS];M:MANUAL [PASSWORD];^0;6^Q
"^DD",58.41,58.41,13,3)
Indicate whether the sFTP transmissions will happen automatically by a scheduled background job using RSA encryption keys or if it will be performed manually by a user.
"^DD",58.41,58.41,13,21,0)
^^1^1^3131127^^
"^DD",58.41,58.41,13,21,1,0)
This field indicates whether the sFTP transmissions will happen automatically by a scheduled background job using RSA encryption keys or if it will be performed manually by a user.
"^DD",58.41,58.41,13,"DT")
3131127
"^DD",58.41,58.41,14,0)
LAST RET TO STOCK RX EXPORTED^P52'^PSRX(^EXPORT;4^Q
"^DD",58.41,58.41,14,3)
Select the last returned to stock prescription transmitted to the state.
"^DD",58.41,58.41,14,21,0)
^^1^1^3121213^
"^DD",58.41,58.41,14,21,1,0)
This is the prescription that contains the last returned to stock fill transmitted to the state.
"^DD",58.41,58.41,14,"DT")
3130208
"^DD",58.41,58.41,15,0)
UNIX/LINUX LOCAL DIRECTORY^F^^FILE1;1^K:$L(X)>50!($L(X)<1) X
"^DD",58.41,58.41,15,3)
Answer must be 1-50 characters in length.
"^DD",58.41,58.41,15,21,0)
^^1^1^3130129^
"^DD",58.41,58.41,15,21,1,0)
This is name of the local Unix/Linux secure directory where the State Prescription Monitoring Program (SPMP) export file will be created before it can be transmitted to the state (e.g., /usr/spmp/).  
"^DD",58.41,58.41,15,"DT")
3130129
"^DD",58.41,58.41,16,0)
WINDOWS/NT LOCAL DIRECTORY^F^^FILE1;2^K:$L(X)>50!($L(X)<1) X
"^DD",58.41,58.41,16,3)
Answer must be 1-50 characters in length.
"^DD",58.41,58.41,16,21,0)
^^1^1^3130129^
"^DD",58.41,58.41,16,21,1,0)
This is name of the local Windows/NT secure directory where the State Prescription Monitoring Program (SPMP) export file will be created before it can be transmitted to the state (e.g., D:\SPMP\).  
"^DD",58.41,58.41,16,"DT")
3130129
"^DD",58.41,58.41,100,0)
SFTP RSA PRIVATE KEY TEXT^58.411^^PRVKEY;0
"^DD",58.41,58.41,100,21,0)
^^1^1^3130625^^
"^DD",58.41,58.41,100,21,1,0)
This is the Secure File Transfer Protocol (sFTP) private key text content.
"^DD",58.41,58.41,100,"DT")
3131127
"^DD",58.41,58.41,200,0)
SFTP RSA PUBLIC KEY TEXT^58.412^^PUBKEY;0
"^DD",58.41,58.41,200,21,0)
^^1^1^3130625^
"^DD",58.41,58.41,200,21,1,0)
This is the Secure File Transfer Protocol (sFTP) public key text content.
"^DD",58.41,58.41,200,"DT")
3131127
"^DD",58.41,58.411,0)
SFTP RSA PRIVATE KEY TEXT SUB-FIELD^^.01^1
"^DD",58.41,58.411,0,"DT")
3130625
"^DD",58.41,58.411,0,"NM","SFTP RSA PRIVATE KEY TEXT")

"^DD",58.41,58.411,0,"UP")
58.41
"^DD",58.41,58.411,.01,0)
SFTP RSA PRIVATE KEY TEXT^W^^0;1
"^DD",58.41,58.411,.01,3)
Enter the Secure FTP RSA encrypted private key content to be used to send data to the state.
"^DD",58.41,58.411,.01,21,0)
^^1^1^3130625^
"^DD",58.41,58.411,.01,21,1,0)
This is the Secure File Transfer Protocol (sFTP) private key text content.
"^DD",58.41,58.411,.01,"DT")
3131127
"^DD",58.41,58.412,0)
SFTP RSA PUBLIC KEY TEXT SUB-FIELD^^.01^1
"^DD",58.41,58.412,0,"DT")
3130625
"^DD",58.41,58.412,0,"NM","SFTP RSA PUBLIC KEY TEXT")

"^DD",58.41,58.412,0,"UP")
58.41
"^DD",58.41,58.412,.01,0)
SFTP RSA PUBLIC KEY TEXT^Wx^^0;1
"^DD",58.41,58.412,.01,3)
Enter the Secure FTP RSA encrypted public key text to be used to send data to the state.
"^DD",58.41,58.412,.01,21,0)
^^1^1^3130625^
"^DD",58.41,58.412,.01,21,1,0)
This is the Secure File Transfer Protocol (sFTP) public key text content.
"^DD",58.41,58.412,.01,"DT")
3131127
"^DD",58.42,58.42,0)
FIELD^^9^12
"^DD",58.42,58.42,0,"DDA")
Y
"^DD",58.42,58.42,0,"DT")
3130516
"^DD",58.42,58.42,0,"ID",2)
W "   ",@("$P($P($C(59)_$S($D(^DD(58.42,2,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,3)_"":"",2),$C(59),1)")
"^DD",58.42,58.42,0,"ID",8)
W "   ",$$FMTE^DILIBF($P(^(0),U,9),5)
"^DD",58.42,58.42,0,"IX","AD",58.42,8)

"^DD",58.42,58.42,0,"IX","B",58.42,.01)

"^DD",58.42,58.42,0,"NM","SPMP EXPORT BATCH")

"^DD",58.42,58.42,0,"VRPK")
PSO
"^DD",58.42,58.42,.01,0)
BATCH NUMBER^RNJ12,0^^0;1^K:+X'=X!(X>999999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",58.42,58.42,.01,1,0)
^.1
"^DD",58.42,58.42,.01,1,1,0)
58.42^B
"^DD",58.42,58.42,.01,1,1,1)
S ^PS(58.42,"B",$E(X,1,30),DA)=""
"^DD",58.42,58.42,.01,1,1,2)
K ^PS(58.42,"B",$E(X,1,30),DA)
"^DD",58.42,58.42,.01,3)
Type a number between 1 and 999999999999, 0 decimal digits.
"^DD",58.42,58.42,.01,21,0)
^^1^1^3121213^
"^DD",58.42,58.42,.01,21,1,0)
This is the internal batch number used to identify the batch transmitted to the state.
"^DD",58.42,58.42,.01,"DT")
3121213
"^DD",58.42,58.42,1,0)
STATE^P5'^DIC(5,^0;2^Q
"^DD",58.42,58.42,1,3)
Select the state to which the batch was transmitted.
"^DD",58.42,58.42,1,21,0)
^^1^1^3121213^
"^DD",58.42,58.42,1,21,1,0)
This is the state the batch was transmitted to.
"^DD",58.42,58.42,1,"DT")
3130208
"^DD",58.42,58.42,2,0)
EXPORT TYPE^S^SC:SCHEDULED;MA:MANUAL;RX:SINGLE RX;VD:VOID ONLY;^0;3^Q
"^DD",58.42,58.42,2,3)
Choose how the batch was created.
"^DD",58.42,58.42,2,21,0)
^^1^1^3121213^^
"^DD",58.42,58.42,2,21,1,0)
This indicates if the batch was created by a scheduled process, manually entered date range or by transmitting a single Rx to the state.
"^DD",58.42,58.42,2,"DT")
3130516
"^DD",58.42,58.42,3,0)
BATCH STATUS^S^N:NEW;X:EXPORTED;E:ERROR(S) FOUND;C:CANCELLED;^0;4^Q
"^DD",58.42,58.42,3,"DT")
3120907
"^DD",58.42,58.42,4,0)
BEGIN RELEASE DATE/TIME^D^^0;5^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",58.42,58.42,4,3)
Enter the first prescription release date/time included in the batch.
"^DD",58.42,58.42,4,21,0)
^^1^1^3121213^
"^DD",58.42,58.42,4,21,1,0)
This is the first prescription release date/time included in the batch.
"^DD",58.42,58.42,4,"DT")
3130116
"^DD",58.42,58.42,5,0)
END RELEASE DATE/TIME^D^^0;6^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",58.42,58.42,5,3)
Enter the last prescription release date/time included in the batch.
"^DD",58.42,58.42,5,21,0)
^^1^1^3121213^
"^DD",58.42,58.42,5,21,1,0)
This is the last prescription release/date time included in the batch.
"^DD",58.42,58.42,5,"DT")
3130208
"^DD",58.42,58.42,6,0)
EXPORT FILE NAME^F^^0;7^K:$L(X)>100!($L(X)<5) X
"^DD",58.42,58.42,6,3)
Answer must be 5-100 characters in length.
"^DD",58.42,58.42,6,21,0)
^^1^1^3121213^
"^DD",58.42,58.42,6,21,1,0)
This is the name of the file exported to the state.
"^DD",58.42,58.42,6,"DT")
3121213
"^DD",58.42,58.42,7,0)
EXPORTED BY^P200'^VA(200,^0;8^Q
"^DD",58.42,58.42,7,3)
Select the user who ran the batch transmission to the state.
"^DD",58.42,58.42,7,21,0)
^^1^1^3121213^
"^DD",58.42,58.42,7,21,1,0)
This is the user who ran the transmission to the state.
"^DD",58.42,58.42,7,"DT")
3130116
"^DD",58.42,58.42,8,0)
DATE/TIME BATCH CREATED^D^^0;9^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",58.42,58.42,8,1,0)
^.1
"^DD",58.42,58.42,8,1,1,0)
58.42^AD
"^DD",58.42,58.42,8,1,1,1)
S ^PS(58.42,"AD",$E(X,1,30),DA)=""
"^DD",58.42,58.42,8,1,1,2)
K ^PS(58.42,"AD",$E(X,1,30),DA)
"^DD",58.42,58.42,8,1,1,"DT")
3121010
"^DD",58.42,58.42,8,3)
Enter the date/time the batch was created.
"^DD",58.42,58.42,8,21,0)
^^1^1^3121213^
"^DD",58.42,58.42,8,21,1,0)
This is the date/time the batch was created.
"^DD",58.42,58.42,8,"DT")
3130116
"^DD",58.42,58.42,9,0)
DATE/TIME BATCH EXPORTED^D^^0;10^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",58.42,58.42,9,3)
Enter the date/time the batch was transmitted to the state.
"^DD",58.42,58.42,9,21,0)
^^1^1^3130116^
"^DD",58.42,58.42,9,21,1,0)
This is the date/time the batch was transmitted to the state.
"^DD",58.42,58.42,9,"DT")
3130116
"^DD",58.42,58.42,100,0)
PRESCRIPTIONS^58.42001P^^RX;0
"^DD",58.42,58.42,100,21,0)
^^1^1^3130116^^
"^DD",58.42,58.42,100,21,1,0)
This contains information about the prescriptions included in the batch.
"^DD",58.42,58.42,200,0)
ERRORS^58.42002^^ERR;0
"^DD",58.42,58.42001,0)
PRESCRIPTIONS SUB-FIELD^^2^3
"^DD",58.42,58.42001,0,"DT")
3121213
"^DD",58.42,58.42001,0,"IX","B",58.42001,.01)

"^DD",58.42,58.42001,0,"NM","PRESCRIPTIONS")

"^DD",58.42,58.42001,0,"UP")
58.42
"^DD",58.42,58.42001,.01,0)
PRESCRIPTION^P52'^PSRX(^0;1^Q
"^DD",58.42,58.42001,.01,1,0)
^.1
"^DD",58.42,58.42001,.01,1,1,0)
58.42001^B
"^DD",58.42,58.42001,.01,1,1,1)
S ^PS(58.42,DA(1),"RX","B",$E(X,1,30),DA)=""
"^DD",58.42,58.42001,.01,1,1,2)
K ^PS(58.42,DA(1),"RX","B",$E(X,1,30),DA)
"^DD",58.42,58.42001,.01,3)
Select the prescription included in the transmission batch.
"^DD",58.42,58.42001,.01,21,0)
^^1^1^3130220^
"^DD",58.42,58.42001,.01,21,1,0)
This is the prescription included in the transmission batch.
"^DD",58.42,58.42001,.01,"DT")
3130220
"^DD",58.42,58.42001,1,0)
FILL^F^^0;2^K:$L(X)>3!($L(X)<1) X
"^DD",58.42,58.42001,1,3)
Answer must be 1-3 characters in length.
"^DD",58.42,58.42001,1,21,0)
^^2^2^3130116^^
"^DD",58.42,58.42001,1,21,1,0)
This is the prescription fill included in the transmission batch. The original fill is represented by "0" (zero). A numeric value other than zero indicates the refill #. A numeric value preceded by "P" (e.g., "P1", "P2", etc.) indicates a
"^DD",58.42,58.42001,1,21,2,0)
partial fill.
"^DD",58.42,58.42001,1,"DT")
3130116
"^DD",58.42,58.42001,2,0)
RECORD TYPE^S^N:NEW;R:REVISE;V:VOID;^0;3^Q
"^DD",58.42,58.42001,2,3)
Choose the type of record that was transmitted to the state for the prescription fill.
"^DD",58.42,58.42001,2,21,0)
^^1^1^3121213^
"^DD",58.42,58.42001,2,21,1,0)
This indicates if the prescription fill was transmitted as a new record, a revised record or a void record.
"^DD",58.42,58.42001,2,"DT")
3130220
"^DD",58.42,58.42002,0)
ERRORS SUB-FIELD^^.01^1
"^DD",58.42,58.42002,0,"DT")
3120907
"^DD",58.42,58.42002,0,"IX","B",58.42002,.01)

"^DD",58.42,58.42002,0,"NM","ERRORS")

"^DD",58.42,58.42002,0,"UP")
58.42
"^DD",58.42,58.42002,.01,0)
ERROR MESSAGE^F^^0;1^K:$L(X)>200!($L(X)<1) X
"^DD",58.42,58.42002,.01,1,0)
^.1
"^DD",58.42,58.42002,.01,1,1,0)
58.42002^B
"^DD",58.42,58.42002,.01,1,1,1)
S ^PS(58.42,DA(1),"ERR","B",$E(X,1,30),DA)=""
"^DD",58.42,58.42002,.01,1,1,2)
K ^PS(58.42,DA(1),"ERR","B",$E(X,1,30),DA)
"^DD",58.42,58.42002,.01,3)
Answer must be 1-200 characters in length.
"^DD",58.42,58.42002,.01,"DT")
3120907
"^DIC",58.4,58.4,0)
SPMP ASAP RECORD DEFINITION^58.4
"^DIC",58.4,58.4,0,"GL")
^PS(58.4,
"^DIC",58.4,58.4,"%",0)
^1.005^1^1
"^DIC",58.4,58.4,"%",1,0)
PSO
"^DIC",58.4,58.4,"%","B","PSO",1)

"^DIC",58.4,58.4,"%D",0)
^^5^5^3130115^^
"^DIC",58.4,58.4,"%D",1,0)
This file is used as a map to all the data elements defined in the American
"^DIC",58.4,58.4,"%D",2,0)
Society for Automation in Pharmacy (ASAP) data format version 4.0 and above.
"^DIC",58.4,58.4,"%D",3,0)
 
"^DIC",58.4,58.4,"%D",4,0)
The ASAP data format is used when reporting controlled substance prescriptions
"^DIC",58.4,58.4,"%D",5,0)
to the State Prescription Monitoring Program (SPMP).
"^DIC",58.4,"B","SPMP ASAP RECORD DEFINITION",58.4)

"^DIC",58.41,58.41,0)
SPMP STATE PARAMETERS^58.41
"^DIC",58.41,58.41,0,"GL")
^PS(58.41,
"^DIC",58.41,58.41,"%",0)
^1.005^1^1
"^DIC",58.41,58.41,"%",1,0)
PSO
"^DIC",58.41,58.41,"%","B","PSO",1)

"^DIC",58.41,58.41,"%D",0)
^^5^5^3130115^^^
"^DIC",58.41,58.41,"%D",1,0)
This file holds the set of parameters used in the transmission of controlled
"^DIC",58.41,58.41,"%D",2,0)
substance prescriptions to each State Prescription Monitoring Program (SPMP).
"^DIC",58.41,58.41,"%D",3,0)
 
"^DIC",58.41,58.41,"%D",4,0)
While some of the parameters are updated by the user via a menu option, others
"^DIC",58.41,58.41,"%D",5,0)
are used internally for automated scheduled transmissions.
"^DIC",58.41,"B","SPMP STATE PARAMETERS",58.41)

"^DIC",58.42,58.42,0)
SPMP EXPORT BATCH^58.42
"^DIC",58.42,58.42,0,"GL")
^PS(58.42,
"^DIC",58.42,58.42,"%",0)
^1.005^1^1
"^DIC",58.42,58.42,"%",1,0)
PSO
"^DIC",58.42,58.42,"%","B","PSO",1)

"^DIC",58.42,58.42,"%D",0)
^^5^5^3130115^
"^DIC",58.42,58.42,"%D",1,0)
This file is used to maintain information on all controlled substance prescriptions
"^DIC",58.42,58.42,"%D",2,0)
transmitted to the State Prescription Monitoring Program (SPMP). The file is also
"^DIC",58.42,58.42,"%D",3,0)
used for manually re-transmitting the data to the SPMP. 
"^DIC",58.42,58.42,"%D",4,0)
  
"^DIC",58.42,58.42,"%D",5,0)
The data in this file is automatically populated and is not editable by the end-user.
"^DIC",58.42,"B","SPMP EXPORT BATCH",58.42)

"BLD",8925,6)
^369
**END**
**END**

