Released PSO*7*532 SEQ #451
Extracted from mail message
**KIDS**:PSO*7.0*532^

**INSTALL NAME**
PSO*7.0*532
"BLD",11123,0)
PSO*7.0*532^OUTPATIENT PHARMACY^0^3180816^y
"BLD",11123,1,0)
^^4^4^3180816^
"BLD",11123,1,1,0)
This patch will resolve the following issues:
"BLD",11123,1,2,0)
1.  INC0698370 - OneVA Can't see patient's remote RX's
"BLD",11123,1,3,0)
2.  INC0908814 - Last Fill Date shows incorrect MAIL/WINDOW value
"BLD",11123,1,4,0)
3.  INC1033035 - Documentation changes needed
"BLD",11123,4,0)
^9.64PA^^
"BLD",11123,6.3)
4
"BLD",11123,"KRN",0)
^9.67PA^779.2^20
"BLD",11123,"KRN",.4,0)
.4
"BLD",11123,"KRN",.401,0)
.401
"BLD",11123,"KRN",.402,0)
.402
"BLD",11123,"KRN",.403,0)
.403
"BLD",11123,"KRN",.5,0)
.5
"BLD",11123,"KRN",.84,0)
.84
"BLD",11123,"KRN",3.6,0)
3.6
"BLD",11123,"KRN",3.8,0)
3.8
"BLD",11123,"KRN",9.2,0)
9.2
"BLD",11123,"KRN",9.8,0)
9.8
"BLD",11123,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",11123,"KRN",9.8,"NM",1,0)
PSORRX1^^0^B151304596
"BLD",11123,"KRN",9.8,"NM",2,0)
PSOR52^^0^B35861620
"BLD",11123,"KRN",9.8,"NM","B","PSOR52",2)

"BLD",11123,"KRN",9.8,"NM","B","PSORRX1",1)

"BLD",11123,"KRN",19,0)
19
"BLD",11123,"KRN",19.1,0)
19.1
"BLD",11123,"KRN",101,0)
101
"BLD",11123,"KRN",409.61,0)
409.61
"BLD",11123,"KRN",771,0)
771
"BLD",11123,"KRN",779.2,0)
779.2
"BLD",11123,"KRN",870,0)
870
"BLD",11123,"KRN",8989.51,0)
8989.51
"BLD",11123,"KRN",8989.52,0)
8989.52
"BLD",11123,"KRN",8994,0)
8994
"BLD",11123,"KRN","B",.4,.4)

"BLD",11123,"KRN","B",.401,.401)

"BLD",11123,"KRN","B",.402,.402)

"BLD",11123,"KRN","B",.403,.403)

"BLD",11123,"KRN","B",.5,.5)

"BLD",11123,"KRN","B",.84,.84)

"BLD",11123,"KRN","B",3.6,3.6)

"BLD",11123,"KRN","B",3.8,3.8)

"BLD",11123,"KRN","B",9.2,9.2)

"BLD",11123,"KRN","B",9.8,9.8)

"BLD",11123,"KRN","B",19,19)

"BLD",11123,"KRN","B",19.1,19.1)

"BLD",11123,"KRN","B",101,101)

"BLD",11123,"KRN","B",409.61,409.61)

"BLD",11123,"KRN","B",771,771)

"BLD",11123,"KRN","B",779.2,779.2)

"BLD",11123,"KRN","B",870,870)

"BLD",11123,"KRN","B",8989.51,8989.51)

"BLD",11123,"KRN","B",8989.52,8989.52)

"BLD",11123,"KRN","B",8994,8994)

"BLD",11123,"QDEF")
^^^^NO^^^^^^NO
"BLD",11123,"QUES",0)
^9.62^^
"BLD",11123,"REQB",0)
^9.611^2^2
"BLD",11123,"REQB",1,0)
PSO*7.0*519^2
"BLD",11123,"REQB",2,0)
PSO*7.0*408^2
"BLD",11123,"REQB","B","PSO*7.0*408",2)

"BLD",11123,"REQB","B","PSO*7.0*519",1)

"MBREQ")
0
"PKG",206,-1)
1^1
"PKG",206,0)
OUTPATIENT PHARMACY^PSO^OUTPATIENT LABELS, PROFILE, INVENTORY, PRESCRIPTIONS
"PKG",206,20,0)
^9.402P^^
"PKG",206,22,0)
^9.49I^1^1
"PKG",206,22,1,0)
7.0^3021122^3021202^66481
"PKG",206,22,1,"PAH",1,0)
532^3180816
"PKG",206,22,1,"PAH",1,1,0)
^^4^4^3180816
"PKG",206,22,1,"PAH",1,1,1,0)
This patch will resolve the following issues:
"PKG",206,22,1,"PAH",1,1,2,0)
1.  INC0698370 - OneVA Can't see patient's remote RX's
"PKG",206,22,1,"PAH",1,1,3,0)
2.  INC0908814 - Last Fill Date shows incorrect MAIL/WINDOW value
"PKG",206,22,1,"PAH",1,1,4,0)
3.  INC1033035 - Documentation changes needed
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","PSOR52")
0^2^B35861620^B35342982
"RTN","PSOR52",1,0)
PSOR52 ;IHS/DSD/JCM - Files refill entries in prescription file ;03/10/93
"RTN","PSOR52",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**10,22,27,181,148,201,260,281,358,385,408,532**;DEC 1997;Build 4
"RTN","PSOR52",3,0)
 ;Reference to ^PSDRUG supported by DBIA 221
"RTN","PSOR52",4,0)
 ;Reference to PSOUL^PSSLOCK supported by DBIA 2789
"RTN","PSOR52",5,0)
 ;Reference SWSTAT^IBBAPI supported by DBIA 4663
"RTN","PSOR52",6,0)
 ;Reference SAVNDC^PSSNDCUT supported by DBIA 4707
"RTN","PSOR52",7,0)
 ; This routine is responsible for the actual
"RTN","PSOR52",8,0)
 ; filling of the refill prescription.
"RTN","PSOR52",9,0)
 ;---------------------------------------------------------   
"RTN","PSOR52",10,0)
EN(PSOX) ;Entry Point
"RTN","PSOR52",11,0)
START ;
"RTN","PSOR52",12,0)
 D:$D(XRTL) T0^%ZOSV ; Start RT monitor
"RTN","PSOR52",13,0)
 D INIT G:PSOR52("QFLG") END
"RTN","PSOR52",14,0)
 D FILE
"RTN","PSOR52",15,0)
 D DIK
"RTN","PSOR52",16,0)
 S:$D(XRT0) XRTN=$T(+0) D:$D(XRT0) T1^%ZOSV ; Stop RT Monitor
"RTN","PSOR52",17,0)
 D FINISH
"RTN","PSOR52",18,0)
END D EOJ
"RTN","PSOR52",19,0)
 Q
"RTN","PSOR52",20,0)
 ;---------------------------------------------------------
"RTN","PSOR52",21,0)
 ;
"RTN","PSOR52",22,0)
INIT ;
"RTN","PSOR52",23,0)
 S PSOR52("QFLG")=0
"RTN","PSOR52",24,0)
 S PSOX("QTY")=$P(PSOX("RX0"),"^",7),PSOX("DAYS SUPPLY")=$P(PSOX("RX0"),"^",8)
"RTN","PSOR52",25,0)
 S PSOX("ADMINCLINIC")=$G(PSORX("ADMINCLINIC"))
"RTN","PSOR52",26,0)
 S:$G(^PSDRUG($P(PSOX("RX0"),"^",6),660))]"" PSOX("COST")=$P(^PSDRUG($P(PSOX("RX0"),"^",6),660),"^",6)
"RTN","PSOR52",27,0)
 D NOW^%DTC S PSOX("LOGIN DATE")=$E(%,1,7)
"RTN","PSOR52",28,0)
 S X1=PSOX("FILL DATE"),X2=PSOX("DAYS SUPPLY")-10\1 D C^%DTC S PSOX1=X
"RTN","PSOR52",29,0)
 S X1=$P(PSOX("RX2"),"^",2)
"RTN","PSOR52",30,0)
 S X2=PSOX("DAYS SUPPLY")*(PSOX("NUMBER")+1)-10\1
"RTN","PSOR52",31,0)
 D C^%DTC S PSOX2=X
"RTN","PSOR52",32,0)
 S PSOX("NEXT POSSIBLE REFILL")=$S(PSOX1>PSOX2:PSOX1,1:PSOX2)
"RTN","PSOR52",33,0)
 K X,PSOX1,PSOX2
"RTN","PSOR52",34,0)
 S (PSOX("LAST DISPENSED DATE"),PSOX("DISPENSED DATE"))=PSOX("FILL DATE")
"RTN","PSOR52",35,0)
 I $G(PSOX("MAIL/WINDOW"))="" S PSOX("MAIL/WINDOW")="W"  ;*532
"RTN","PSOR52",36,0)
 I PSOX("FILL DATE")>$S($G(PSOX("LOGIN DATE")):$E(PSOX("LOGIN DATE"),1,7),1:DT),$P(PSOPAR,"^",6) D
"RTN","PSOR52",37,0)
 .S PSOX("OLD MAIL/WINDOW")=$S($G(PSOX("MAIL/WINDOW"))]"":PSOX("MAIL/WINDOW"),1:"MAIL"),PSOX("MAIL/WINDOW")="M"
"RTN","PSOR52",38,0)
 I $P(PSOX("RX2"),"^",12)]"" S PSOX("GENERIC PROVIDER")=$P(PSOX("RX2"),"^",12)
"RTN","PSOR52",39,0)
 S PSOX("PROVIDER")=$P(PSOX("RX0"),"^",4)
"RTN","PSOR52",40,0)
 S:'$D(PSOX("CLERK CODE")) PSOX("CLERK CODE")=DUZ
"RTN","PSOR52",41,0)
 S PSOX("DAW")=$$GETDAW^PSODAWUT(+PSOX("IRXN")),PSOX("NDC")=$$GETNDC^PSSNDCUT($P(PSOX("RX0"),"^",6))
"RTN","PSOR52",42,0)
INITX Q
"RTN","PSOR52",43,0)
 ;
"RTN","PSOR52",44,0)
FILE ;     
"RTN","PSOR52",45,0)
 ;L +^PSRX(PSOX("IRXN")):0
"RTN","PSOR52",46,0)
 I '$D(^PSRX(PSOX("IRXN"),1,0)) S ^(0)="^52.1DA^1^1"
"RTN","PSOR52",47,0)
 E  S ^PSRX(PSOX("IRXN"),1,0)=$P(^PSRX(PSOX("IRXN"),1,0),"^",1,2)_"^"_PSOX("NUMBER")_"^"_($P(^(0),"^",4)+1)
"RTN","PSOR52",48,0)
 F PSOX1=1:1 S PSOR52=$P($T(DD+PSOX1),";;",2,4) Q:PSOR52=""  K PSOY S PSOY=$P(PSOR52,";;") I $D(@PSOY) S $P(PSOR52(PSOX("IRXN"),1,PSOX("NUMBER"),$P(PSOR52,";;",2)),"^",$P(PSOR52,";;",3))=@PSOY
"RTN","PSOR52",49,0)
 K PSOX1,PSOY
"RTN","PSOR52",50,0)
 S PSOX1="" F  S PSOX1=$O(PSOR52(PSOX("IRXN"),1,PSOX("NUMBER"),PSOX1)) Q:PSOX1=""  S ^PSRX(PSOX("IRXN"),1,PSOX("NUMBER"),PSOX1)=$G(PSOR52(PSOX("IRXN"),1,PSOX("NUMBER"),PSOX1))
"RTN","PSOR52",51,0)
 K PSOX1
"RTN","PSOR52",52,0)
 S:PSOX("STA")=6 $P(^PSRX(PSOX("IRXN"),"STA"),"^")=0
"RTN","PSOR52",53,0)
 S $P(^PSRX(PSOX("IRXN"),3),"^",1,2)=PSOX("LAST DISPENSED DATE")_"^"_PSOX("NEXT POSSIBLE REFILL")
"RTN","PSOR52",54,0)
 S $P(^PSRX(PSOX("IRXN"),3),"^",4)=PSOX("LAST REFILL DATE")
"RTN","PSOR52",55,0)
 I $D(PSOX("METHOD OF PICK-UP")),PSOX("FILL DATE")'>DT S $P(^PSRX(PSOX("IRXN"),"MP"),"^")=PSOX("METHOD OF PICK-UP")
"RTN","PSOR52",56,0)
 D:$$SWSTAT^IBBAPI() GACT^PSOPFSU0(PSOX("IRXN"),PSOX("NUMBER"))
"RTN","PSOR52",57,0)
 ;L -^PSRX(PSOX("IRXN"))
"RTN","PSOR52",58,0)
 Q
"RTN","PSOR52",59,0)
 ;
"RTN","PSOR52",60,0)
DIK ;
"RTN","PSOR52",61,0)
 K DIK,DA
"RTN","PSOR52",62,0)
 S DIK="^PSRX(",DA=PSOX("IRXN") D IX1^DIK K DIK
"RTN","PSOR52",63,0)
 I +$G(^PSRX(DA,"IB")),$P(^PSRX(DA,1,PSOX("NUMBER"),0),"^",2)="W" S ^PSRX("ACP",$P(^PSRX(DA,0),"^",2),$P(^PSRX(DA,1,PSOX("NUMBER"),0),"^"),PSOX("NUMBER"),DA)="" K DA
"RTN","PSOR52",64,0)
 D:$T(EN^PSOHDR)]"" EN^PSOHDR("PREF",PSOX("IRXN"))
"RTN","PSOR52",65,0)
 Q
"RTN","PSOR52",66,0)
 ;
"RTN","PSOR52",67,0)
FINISH ;
"RTN","PSOR52",68,0)
 I $G(PSOX("QS"))="S" D  G FINISHX
"RTN","PSOR52",69,0)
 . S DA=PSOX("IRXN"),RXFL(PSOX("IRXN"))=PSOX("NUMBER")
"RTN","PSOR52",70,0)
 . D SUS^PSORXL K DA
"RTN","PSOR52",71,0)
 ;
"RTN","PSOR52",72,0)
 ; - Previous ePharmacy Refill was Deleted and a new one is being entered
"RTN","PSOR52",73,0)
 I '$$SUBMIT^PSOBPSUT(PSOX("IRXN"),PSOX("NUMBER")),$$STATUS^PSOBPSUT(PSOX("IRXN"),PSOX("NUMBER"))'="" D
"RTN","PSOR52",74,0)
 . D RETRXF^PSOREJU2(PSOX("IRXN"),PSOX("NUMBER"),1)
"RTN","PSOR52",75,0)
 ;
"RTN","PSOR52",76,0)
 I PSOX("FILL DATE")>$S($G(PSOX("LOGIN DATE")):$E(PSOX("LOGIN DATE"),1,7),1:DT),$P(PSOPAR,"^",6) D  G FINISHX
"RTN","PSOR52",77,0)
 .K PSOXRXFL I $D(RXFL(PSOX("IRXN"))) S PSOXRXFL=$G(RXFL(PSOX("IRXN")))
"RTN","PSOR52",78,0)
 .S DA=PSOX("IRXN"),RXFL(PSOX("IRXN"))=PSOX("NUMBER")
"RTN","PSOR52",79,0)
 .D SUS^PSORXL K DA
"RTN","PSOR52",80,0)
 .I $G(PSOXRXFL)'="" S RXFL(PSOX("IRXN"))=$G(PSOXRXFL) K PSOXRXFL
"RTN","PSOR52",81,0)
 ;
"RTN","PSOR52",82,0)
 ; - Calling ECME for claims generation and transmission / REJECT handling
"RTN","PSOR52",83,0)
 N ACTION,PSOERX,PSOERF
"RTN","PSOR52",84,0)
 S PSOERX=PSOX("IRXN"),PSOERF=PSOX("NUMBER")
"RTN","PSOR52",85,0)
 I $$SUBMIT^PSOBPSUT(PSOERX,PSOERF) D  I ACTION="Q"!(ACTION="^") Q
"RTN","PSOR52",86,0)
 . S ACTION="" D ECMESND^PSOBPSU1(PSOERX,PSOERF,"","RF")
"RTN","PSOR52",87,0)
 . ; Quit if there is an unresolved TRICARE/CHAMPVA non-billable reject code, PSO*7*358
"RTN","PSOR52",88,0)
 . I $$PSOET^PSOREJP3(PSOERX,PSOERF) S ACTION="Q" Q
"RTN","PSOR52",89,0)
 . I $$FIND^PSOREJUT(PSOERX,PSOERF) D
"RTN","PSOR52",90,0)
 . . S ACTION=$$HDLG^PSOREJU1(PSOERX,PSOERF,"79,88","OF","IOQ","Q")
"RTN","PSOR52",91,0)
 . I $$STATUS^PSOBPSUT(PSOERX,PSOERF)="E PAYABLE" D
"RTN","PSOR52",92,0)
 . . D SAVNDC^PSSNDCUT(+$$GET1^DIQ(52,PSOERX,6,"I"),$G(PSOSITE),$$GETNDC^PSONDCUT(PSOERX,PSOERF))
"RTN","PSOR52",93,0)
 ;
"RTN","PSOR52",94,0)
 I $G(PSOX("QS"))="Q" D  G FINISHX
"RTN","PSOR52",95,0)
 . I $G(PPL),$L(PPL_PSOX("IRXN")_",")>240 D TRI^PSOBBC D Q^PSORXL K PPL,RXFL
"RTN","PSOR52",96,0)
 . S RXFL(PSOX("IRXN"))=PSOX("NUMBER")
"RTN","PSOR52",97,0)
 . I $G(PPL) S PPL=PPL_PSOX("IRXN")_","
"RTN","PSOR52",98,0)
 . E  S PPL=PSOX("IRXN")_","
"RTN","PSOR52",99,0)
 ;
"RTN","PSOR52",100,0)
 I $G(PSORX("PSOL",1))']"" S PSORX("PSOL",1)=PSOX("IRXN")_",",RXFL(PSOX("IRXN"))=PSOX("NUMBER") G FINISHX
"RTN","PSOR52",101,0)
 F PSOX1=0:0 S PSOX1=$O(PSORX("PSOL",PSOX1)) Q:'PSOX1  S PSOX2=PSOX1
"RTN","PSOR52",102,0)
 I $L(PSORX("PSOL",PSOX2))+$L(PSOX("IRXN"))<220 S PSORX("PSOL",PSOX2)=PSORX("PSOL",PSOX2)_PSOX("IRXN")_","
"RTN","PSOR52",103,0)
 E  S PSORX("PSOL",PSOX2+1)=PSOX("IRXN")_","
"RTN","PSOR52",104,0)
 S RXFL(PSOX("IRXN"))=PSOX("NUMBER")
"RTN","PSOR52",105,0)
 ;
"RTN","PSOR52",106,0)
FINISHX ; 
"RTN","PSOR52",107,0)
 I $G(PSORX("MAIL/WINDOW"))["W" S BINGCRT=1,BINGRTE="W",BBFLG=1 D BBRX^PSORN52C
"RTN","PSOR52",108,0)
 K PSOX1,PSOX2
"RTN","PSOR52",109,0)
 Q
"RTN","PSOR52",110,0)
EOJ ;
"RTN","PSOR52",111,0)
 I $D(PSOX("OLD MAIL/WINDOW")) S PSOX("MAIL/WINDOW")=PSOX("OLD MAIL/WINDOW") K PSOX("OLD MAIL/WINDOW")
"RTN","PSOR52",112,0)
 S DA=$O(^PS(52.41,"ARF",PSOX("IRXN"),0)) I DA D  S DIK="^PS(52.41," D ^DIK
"RTN","PSOR52",113,0)
 .S PSORFKL=DA D PSOUL^PSSLOCK(PSORFKL_"S") K PSORFKL
"RTN","PSOR52",114,0)
 K PSOR52,DA,DIK
"RTN","PSOR52",115,0)
 Q
"RTN","PSOR52",116,0)
 ;
"RTN","PSOR52",117,0)
DD ;rx data nodes
"RTN","PSOR52",118,0)
 ;;PSOX("PROVIDER");;0;;17
"RTN","PSOR52",119,0)
 ;;PSOX("QTY");;0;;4
"RTN","PSOR52",120,0)
 ;;PSOX("DAYS SUPPLY");;0;;10
"RTN","PSOR52",121,0)
 ;;PSOX("MAIL/WINDOW");;0;;2
"RTN","PSOR52",122,0)
 ;;PSOX("REMARKS");;0;;3
"RTN","PSOR52",123,0)
 ;;PSOX("CLERK CODE");;0;;7
"RTN","PSOR52",124,0)
 ;;PSOX("COST");;0;;11
"RTN","PSOR52",125,0)
 ;;PSOSITE;;0;;9
"RTN","PSOR52",126,0)
 ;;PSOX("LOGIN DATE");;0;;8
"RTN","PSOR52",127,0)
 ;;PSOX("FILL DATE");;0;;1
"RTN","PSOR52",128,0)
 ;;PSOX("PHARMACIST");;0;;5
"RTN","PSOR52",129,0)
 ;;PSOX("LOT #");;0;;6
"RTN","PSOR52",130,0)
 ;;PSOX("DISPENSED DATE");;0;;19
"RTN","PSOR52",131,0)
 ;;PSOX("ADMINCLINIC");;0;;20
"RTN","PSOR52",132,0)
 ;;PSOX("NDC");;1;;3
"RTN","PSOR52",133,0)
 ;;PSOX("DAW");;EPH;;1
"RTN","PSOR52",134,0)
 ;;PSOX("MANUFACTURER");;0;;14
"RTN","PSOR52",135,0)
 ;;PSOX("EXPIRATION DATE");;0;;15
"RTN","PSOR52",136,0)
 ;;PSOX("GENERIC PROVIDER");;1;;1
"RTN","PSOR52",137,0)
 ;;PSOX("RELEASED DATE/TIME");;0;;18
"RTN","PSORRX1")
0^1^B151304596^B158317306
"RTN","PSORRX1",1,0)
PSORRX1 ;AITC/BWF - Remote RX driver ;8/30/16 12:00am
"RTN","PSORRX1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**454,499,509,519,532**;DEC 1997;Build 4
"RTN","PSORRX1",3,0)
 ;
"RTN","PSORRX1",4,0)
 ;Reference ^PSDRUG( supported by DBIA 221
"RTN","PSORRX1",5,0)
 Q
"RTN","PSORRX1",6,0)
 ;
"RTN","PSORRX1",7,0)
REMOTERX(DFN,PSOSITE) ;
"RTN","PSORRX1",8,0)
 N RXRES,MSG,HLARR,CNT,RXDAT,HLARR,HLPROT,DONE,ORFS,ORCS,ORRS,ORES,ORSS,ORQUIT,HLQUIT,HLDAT,TFLIST,HLP,HLNODE,HLNEXT,HLINSTN
"RTN","PSORRX1",9,0)
 N PID1,PID4,PID5,PID6,TFDAT,LOOP,RXMSG,PSORRDAT,PSOHCNT,ERR,HL,PSORRDAT,ORERR,SITE
"RTN","PSORRX1",10,0)
 S HLARR=$NA(^TMP("HLS",$J)) K @HLARR
"RTN","PSORRX1",11,0)
 S HLDAT=$NA(^XTMP("PSORRX1",$J)) K @HLDAT
"RTN","PSORRX1",12,0)
 I 'DFN Q
"RTN","PSORRX1",13,0)
 S SITE=$P($$SITE^VASITE(),U)
"RTN","PSORRX1",14,0)
 S TFSTRING=$$GET1^DIQ(2,DFN,991.01,"I")_"^^^USVHA^NI^"_SITE
"RTN","PSORRX1",15,0)
 S HLPROT="PSO REMOTE RX QBP-Q13 EVENT"
"RTN","PSORRX1",16,0)
 D INIT^HLFNC2(HLPROT,.HL)
"RTN","PSORRX1",17,0)
 D BLDPID^PSOTPHL2(DFN,"",.PSORRDAT,.HL,.ERR)
"RTN","PSORRX1",18,0)
 I $D(ERR) W !,"There was a problem creating the PID segment for this patient.",!,"Please contact technical support.",!
"RTN","PSORRX1",19,0)
 S @HLARR@(1)="QPD^Q13~Active Prescriptions~HL70471^"
"RTN","PSORRX1",20,0)
 S DONE=0
"RTN","PSORRX1",21,0)
 F PSOHCNT=1:1 D  Q:DONE
"RTN","PSORRX1",22,0)
 .I '$D(PSORRDAT(PSOHCNT)) S DONE=1 Q
"RTN","PSORRX1",23,0)
 .S @HLARR@(2)=$G(@HLARR@(2))_PSORRDAT(PSOHCNT)
"RTN","PSORRX1",24,0)
 S @HLARR@(3)="RCP^I"
"RTN","PSORRX1",25,0)
 S HLP("SUBSCRIBER")="^^^^200HD~HDR.DOMAIN.EXT~DNS"
"RTN","PSORRX1",26,0)
 D DIRECT^HLMA(HLPROT,"GM",1,.RXDAT,"",.HLP)
"RTN","PSORRX1",27,0)
 S ORFS=$G(HL("FS")),ORCS=$E($G(HL("ECH")),1),ORRS=$E($G(HL("ECH")),2),ORES=$E($G(HL("ECH")),3),ORSS=$E($G(HL("ECH")),4)
"RTN","PSORRX1",28,0)
 S HLQUIT=0,ORQUIT="",ORERR=""
"RTN","PSORRX1",29,0)
 I ($P(RXDAT,"^",2)]"")!($P(RXDAT,"^",3)]"") D  Q
"RTN","PSORRX1",30,0)
 .W !,"The system is down or not responding"_$S($P(RXDAT,"^",3)]"":" ("_$P(RXDAT,"^",3)_").",1:".")
"RTN","PSORRX1",31,0)
 .W !,"Could not query prescriptions at other VA Pharmacy locations.",!
"RTN","PSORRX1",32,0)
 .K DIR S DIR(0)="FO",DIR("A")="Press RETURN to continue" D ^DIR
"RTN","PSORRX1",33,0)
 F  X HLNEXT Q:HLQUIT'>0!(ORQUIT'="")  D
"RTN","PSORRX1",34,0)
 .N LOOP
"RTN","PSORRX1",35,0)
 .S LOOP=0 F  S LOOP=$O(HLNODE(LOOP)) Q:LOOP=""  S HLNODE=HLNODE_HLNODE(LOOP)
"RTN","PSORRX1",36,0)
 .I $E(HLNODE,1,3)="MSA"&(($P(HLNODE,ORFS,2)'="CA")) D LOGERR(DFN,.HLNODE,.HLDAT,$P(HLNODE,ORFS,4)) S ORQUIT=$P(HLNODE,ORFS,4)
"RTN","PSORRX1",37,0)
 .I $E(HLNODE,1,3)="ERR" D LOGERR(DFN,.HLNODE,.HLDAT) S ORQUIT=$P(HLNODE,ORFS,4)
"RTN","PSORRX1",38,0)
 .I $E(HLNODE,1,3)="RDT" D
"RTN","PSORRX1",39,0)
 ..S @HLDAT@(0)=$$FMADD^XLFDT($$NOW^XLFDT,2)_U_$$NOW^XLFDT
"RTN","PSORRX1",40,0)
 ..D RXPRSE(DFN,.HLNODE,.HLDAT)
"RTN","PSORRX1",41,0)
 Q
"RTN","PSORRX1",42,0)
LOGERR(DFN,DATA,HLDAT,NMSG) ;
"RTN","PSORRX1",43,0)
 N HLERR
"RTN","PSORRX1",44,0)
 S NMSG=$G(NMSG,"")
"RTN","PSORRX1",45,0)
 S HLERR=$S(NMSG'="":NMSG,1:$P(DATA,ORFS,9))
"RTN","PSORRX1",46,0)
 S:'$D(@HLDAT@(0)) @HLDAT@(0)=$$FMADD^XLFDT($$NOW^XLFDT,2)_U_$$NOW^XLFDT
"RTN","PSORRX1",47,0)
 S @HLDAT@(DFN,"ERR")="<"_HLERR_">"
"RTN","PSORRX1",48,0)
 W !!,"When trying to query prescriptions at other VA Pharmacy",!,"Locations the following message was encountered:",!,"***",!,HLERR,!,"***",! K DIR S DIR(0)="FO",DIR("A")="Press RETURN to continue" D ^DIR Q
"RTN","PSORRX1",49,0)
 Q
"RTN","PSORRX1",50,0)
 ; parse rx data from RDF segment
"RTN","PSORRX1",51,0)
RXPRSE(DFN,DATA,HLDAT) ;
"RTN","PSORRX1",52,0)
 ;RDF|14|Site Number~Rx Number~Drug Name~Quantity~Refills~Days Supply~Expiration Date
"RTN","PSORRX1",53,0)
 ;~Issue Date~Stop Date~Last Fill Date~Sig~Detail~Status~VA Product ID
"RTN","PSORRX1",54,0)
 N RXSITE,RXNUM,DNAME,QTY,REFILLS,DSUPP,EXPDT,ISSDATE,STOPDT,LFDT,SIG,DETAIL,STAT,STATNM,STATERR,DDONE,I,VAPID,VAFQDN,DAT
"RTN","PSORRX1",55,0)
 ; put data into one variable. This handles overflow nodes
"RTN","PSORRX1",56,0)
 S DAT=0 F  S DAT=$O(DATA(DAT)) Q:'DAT  D
"RTN","PSORRX1",57,0)
 .S DATA=$G(DATA)_$G(DATA(DAT))
"RTN","PSORRX1",58,0)
 S RXSITE=$P(DATA,ORFS,2),RXNUM=$P(DATA,ORFS,3),DNAME=$P(DATA,ORFS,4),QTY=$P(DATA,ORFS,5)
"RTN","PSORRX1",59,0)
 Q:DNAME=""
"RTN","PSORRX1",60,0)
 S REFILLS=$P(DATA,ORFS,6),DSUPP=$P(DATA,ORFS,7),EXPDT=$P(DATA,ORFS,8),ISSDATE=$P(DATA,ORFS,9)
"RTN","PSORRX1",61,0)
 S STOPDT=$P(DATA,ORFS,10),LFDT=$P(DATA,ORFS,11),SIG=$P(DATA,ORFS,12),DETAIL=$P(DATA,ORFS,13)
"RTN","PSORRX1",62,0)
 S STAT=$P(DATA,ORFS,14) Q:STAT=""
"RTN","PSORRX1",63,0)
 ; VA Product ID
"RTN","PSORRX1",64,0)
 S VAPID=$P(DATA,ORFS,15)
"RTN","PSORRX1",65,0)
 S VAFQDN=$P(DATA,ORFS,16)
"RTN","PSORRX1",66,0)
 Q:STAT=""
"RTN","PSORRX1",67,0)
 Q:'RXSITE!('RXNUM)
"RTN","PSORRX1",68,0)
 S @HLDAT@(DFN,RXSITE,STAT,DNAME,0)=RXNUM_U_QTY_U_REFILLS_U_DSUPP_U_EXPDT_U_ISSDATE_U_STOPDT_U_LFDT_U_STAT_U_VAPID_U_DNAME_U_VAFQDN
"RTN","PSORRX1",69,0)
 S @HLDAT@(DFN,RXSITE,STAT,DNAME,"SIG")=SIG
"RTN","PSORRX1",70,0)
 S @HLDAT@(DFN,RXSITE,STAT,DNAME,"DETAIL")=DETAIL
"RTN","PSORRX1",71,0)
 Q
"RTN","PSORRX1",72,0)
 ; build and send refill request
"RTN","PSORRX1",73,0)
REFREQ ;
"RTN","PSORRX1",74,0)
 N PHARM,PHONE,LOCSITE,DSUPP,MW,FILLDT,MSG,RXNUM,HLSTR,REMSITE,PHARMLN,PHARMFN,PHARMMI,TFSTRING,HLPROT,LOCDRUG,REMDRUG,DINACT
"RTN","PSORRX1",75,0)
 N ORFS,ORCS,ORRS,ORES,ORSS,HLQUIT,ORQUIT,RESP,RETDFN,VAPID,DONE,PSORRDAT,PSOHCNT,DONE,HL,CSVAL,DIR,REMSIEN,PSOHLNK,PSOLNKDN,DOMOVR,RMSDOM
"RTN","PSORRX1",76,0)
 S HLARR=$NA(^TMP("HLS",$J)) K @HLARR
"RTN","PSORRX1",77,0)
 S HLDAT=$NA(^XTMP("REFREQ^PSORRX1",$J)) K @HLDAT
"RTN","PSORRX1",78,0)
 S HLPROT="PSO REMOTE RX RDS-O13 EVENT"
"RTN","PSORRX1",79,0)
 S MW="W"
"RTN","PSORRX1",80,0)
 D FULL^VALM1
"RTN","PSORRX1",81,0)
 S LOCSITE=$$STA^XUAF4(DUZ(2))
"RTN","PSORRX1",82,0)
 S PHARM=$$GET1^DIQ(200,DUZ,.01,"E"),PHARMLN=$P(PHARM,","),PHARMFN=$P($P(PHARM,",",2)," "),PHARMMI=$P($P(PHARM,",",2)," ",2)
"RTN","PSORRX1",83,0)
 S PHONE=$$GET1^DIQ(200,DUZ,.132,"E")
"RTN","PSORRX1",84,0)
 S RXNUM=$P(PSOLST(ORN),U,2) I 'RXNUM S MSG(1)="Invalid Rx #. Please contact technical support." Q
"RTN","PSORRX1",85,0)
 I SRXSTAT'="ACTIVE" W !!,"Only 'ACTIVE' remote prescriptions may be refilled at this time." S DIR(0)="FO",DIR("A")="Press RETURN to continue" D ^DIR Q
"RTN","PSORRX1",86,0)
 S REMSITE=$P(PSOLST(ORN),U,4)   ;,REMSIEN=$O(^DIC(4,"D",REMSITE,0))
"RTN","PSORRX1",87,0)
 S REMSIEN=$$FIND1^DIC(4,,"X",REMSITE,"D","I $P(^(0),U,11)=""N"",'$P($G(^(99)),U,4)") Q:'REMSIEN
"RTN","PSORRX1",88,0)
 S PSOREF("DFLG")=""
"RTN","PSORRX1",89,0)
 S REMDRUG=$P(REMDATA,U,11),VAPID=$P(REMDATA,U,10)
"RTN","PSORRX1",90,0)
 I '$L(VAPID) W !!,"Missing VA Product ID. Rx# ",RXNUM," cannot be refilled." S DIR(0)="FO",DIR("A")="Press RETURN to continue" D ^DIR Q
"RTN","PSORRX1",91,0)
 S LOCDRUG=$$DRUGMTCH(REMDRUG,VAPID)
"RTN","PSORRX1",92,0)
 I $G(LOCDRUG)=-1 Q  ; user entered no so no reason to prompt again
"RTN","PSORRX1",93,0)
 I '$G(LOCDRUG) W !!,"Could not match remote drug to a local drug. Cannot refill Rx# ",RXNUM,"." S DIR(0)="FO",DIR("A")="Press RETURN to continue" D ^DIR Q
"RTN","PSORRX1",94,0)
 S DINACT=$$GET1^DIQ(50,LOCDRUG,100,"I")
"RTN","PSORRX1",95,0)
 I DINACT>0,DINACT<$$NOW^XLFDT W !!,"Matched Drug "_$$GET1^DIQ(50,LOCDRUG,.01,"E")_" is inactive.",!,"Cannot refill."  S DIR(0)="FO",DIR("A")="Press RETURN to continue" D ^DIR Q
"RTN","PSORRX1",96,0)
 ; ****** controlled substance check
"RTN","PSORRX1",97,0)
 S CSVAL=$$GET1^DIQ(50,LOCDRUG,3,"E"),CSVAL=$E(CSVAL,1)
"RTN","PSORRX1",98,0)
 I CSVAL,CSVAL>0,CSVAL<6 W !!,"This is a controlled substance. Cannot refill Rx#",RXNUM,"." S DIR(0)="FO",DIR("A")="Press RETURN to continue" D ^DIR Q
"RTN","PSORRX1",99,0)
 ;
"RTN","PSORRX1",100,0)
 ; if we got this far, fill is most likely happening and remote
"RTN","PSORRX1",101,0)
 ; worklist needs to be rebuilt when returning so set flag. PSORRBLD
"RTN","PSORRX1",102,0)
 ; was New'ed in calling routine. May change my mind if we get an
"RTN","PSORRX1",103,0)
 ; error from host.
"RTN","PSORRX1",104,0)
 S PSORRBLD=1
"RTN","PSORRX1",105,0)
 ;
"RTN","PSORRX1",106,0)
 S (FILLDT,PSOREF("FILL DATE"))=DT
"RTN","PSORRX1",107,0)
 D INIT^HLFNC2(HLPROT,.HL)
"RTN","PSORRX1",108,0)
 D BLDPID^PSOTPHL2(DFN,"",.PSORRDAT,.HL,.ERR)
"RTN","PSORRX1",109,0)
 S DONE=0
"RTN","PSORRX1",110,0)
 F PSOHCNT=1:1 D  Q:DONE
"RTN","PSORRX1",111,0)
 .I '$D(PSORRDAT(PSOHCNT)) S DONE=1 Q
"RTN","PSORRX1",112,0)
 .S @HLARR@(1)=$G(@HLARR@(1))_PSORRDAT(PSOHCNT)
"RTN","PSORRX1",113,0)
 ;S @HLARR@(2)="ORC^RF^"_RXNUM_"~"_REMSITE_"~"_$$GET1^DIQ(4,REMSIEN,60,"E")_"^^^^^^^"_FILLDT_U_DUZ_"~"_PHARMLN_"~"_PHARMFN_"~"_PHARMMI_"^^^~~~"_LOCSITE_U_PHONE
"RTN","PSORRX1",114,0)
 S @HLARR@(2)="ORC^RF^"_RXNUM_"~"_REMSITE_"~"_$$FQDN^PSORWRAP(,REMSIEN)_"^^^^^^^"_FILLDT_U_DUZ_"~"_PHARMLN_"~"_PHARMFN_"~"_PHARMMI_"^^^~~~"_LOCSITE_U_PHONE
"RTN","PSORRX1",115,0)
 S @HLARR@(3)="RXO^^^^^^^^"_MW_"~~~"_LOCSITE
"RTN","PSORRX1",116,0)
 W !!,"Processing refill request. Please be patient as it may take a moment"
"RTN","PSORRX1",117,0)
 W !,"for the host site to respond and generate your label data..."
"RTN","PSORRX1",118,0)
 S RMSDOM=$$FQDN^PSORWRAP(,REMSIEN)
"RTN","PSORRX1",119,0)
 S DOMOVR=REMSITE_"~"_RMSDOM_"~DNS"
"RTN","PSORRX1",120,0)
 S HLP("SUBSCRIBER")="^^^^"_DOMOVR
"RTN","PSORRX1",121,0)
 D DIRECT^HLMA(HLPROT,"GM",1,.RESP,"",.HLP)
"RTN","PSORRX1",122,0)
 D READMSG^PSORRX2(.HLDAT,"RF",LOCDRUG)
"RTN","PSORRX1",123,0)
 K @HLDAT,@HLARR
"RTN","PSORRX1",124,0)
 Q
"RTN","PSORRX1",125,0)
 ; build and send partial fill request
"RTN","PSORRX1",126,0)
PARTIAL() ;
"RTN","PSORRX1",127,0)
 N DIR,DONE,I,PRMPDAT,VAR,PRXNUM,PHARM,PHARMLN,PHARMFN,PHARMMI,PHONE,RXNUM,HLPROT,TFSTRING,HLARR,PHONE,REMSITE,HLDAT,LOCDRUG,EXIT,VAPID,HL,ERR
"RTN","PSORRX1",128,0)
 N PSOHCNT,DONE,PSORRDAT,CSVAL,REMSIEN,PSOHLNK,PSOLNKDN,REMDRUG,Y,DINACT,EXE,DOMOVR,RMSDOM
"RTN","PSORRX1",129,0)
 S HLPROT="PSO REMOTE RX RDS-O13 EVENT"
"RTN","PSORRX1",130,0)
 S HLDAT=$NA(^XTMP("PARTIAL^PSORRX1",$J)) K @HLDAT
"RTN","PSORRX1",131,0)
 S HLARR=$NA(^TMP("HLS",$J)) K @HLARR
"RTN","PSORRX1",132,0)
 D FULL^VALM1
"RTN","PSORRX1",133,0)
 I SRXSTAT'="ACTIVE" W !!,"Only 'ACTIVE' remote prescriptions may be actioned at this time." S DIR(0)="FO",DIR("A")="Press RETURN to continue" D ^DIR Q
"RTN","PSORRX1",134,0)
 S LOCSITE=$$STA^XUAF4(DUZ(2))
"RTN","PSORRX1",135,0)
 S PHONE=$$GET1^DIQ(200,DUZ,.132,"E")
"RTN","PSORRX1",136,0)
 S PRXNUM=$P(PSOLST(ORN),U,2) I 'PRXNUM S MSG(1)="Invalid Rx #. Please contact technical support." Q
"RTN","PSORRX1",137,0)
 S REMSITE=$P(PSOLST(ORN),U,4)
"RTN","PSORRX1",138,0)
 S REMSIEN=$$FIND1^DIC(4,,"X",REMSITE,"D","I $P(^(0),U,11)=""N"",'$P($G(^(99)),U,4)") Q:'REMSIEN
"RTN","PSORRX1",139,0)
 S DONE=0,CNT=1
"RTN","PSORRX1",140,0)
 ; prompt for fields that would normally be prompted for a local partial fill.
"RTN","PSORRX1",141,0)
 D FULL^VALM1
"RTN","PSORRX1",142,0)
 S REMDRUG=$P(REMDATA,U,11),VAPID=$P(REMDATA,U,10)
"RTN","PSORRX1",143,0)
 I '$L(VAPID) W !!,"Missing VA Product ID. Rx# ",PRXNUM," cannot be refilled." S DIR(0)="FO",DIR("A")="Press RETURN to continue" D ^DIR Q
"RTN","PSORRX1",144,0)
 S LOCDRUG=$$DRUGMTCH(REMDRUG,VAPID)
"RTN","PSORRX1",145,0)
 I $G(LOCDRUG)=-1 Q  ; user entered no so no reason to prompt again
"RTN","PSORRX1",146,0)
 I '$G(LOCDRUG) W !!,"Could not match remote drug to a local drug.",!,"Cannot complete partial fill for Rx# ",PRXNUM,"." S DIR(0)="FO",DIR("A")="Press RETURN to continue" D ^DIR Q
"RTN","PSORRX1",147,0)
 S DINACT=$$GET1^DIQ(50,LOCDRUG,100,"I")
"RTN","PSORRX1",148,0)
 I DINACT>0,DINACT<$$NOW^XLFDT W !!,"Matched Drug "_$$GET1^DIQ(50,LOCDRUG,.01,"E")_" is inactive.",!,"Cannot create partial fill request."  S DIR(0)="FO",DIR("A")="Press RETURN to continue" D ^DIR Q
"RTN","PSORRX1",149,0)
 ; controlled substance check
"RTN","PSORRX1",150,0)
 S CSVAL=$$GET1^DIQ(50,LOCDRUG,3,"E"),CSVAL=$E(CSVAL,1)
"RTN","PSORRX1",151,0)
 I CSVAL,CSVAL>0,CSVAL<6 W !!,"This is a controlled substance. Cannot refill Rx#",PRXNUM,"." S DIR(0)="FO",DIR("A")="Press RETURN to continue" D ^DIR Q
"RTN","PSORRX1",152,0)
 S EXIT=0
"RTN","PSORRX1",153,0)
 S PDATE=DT
"RTN","PSORRX1",154,0)
 S MW="W"
"RTN","PSORRX1",155,0)
 F I=1:1 D  Q:DONE!(EXIT)
"RTN","PSORRX1",156,0)
 .S PRMPDAT=$T(PRMPTXT+I)
"RTN","PSORRX1",157,0)
 .S PRMPDAT=$P(PRMPDAT,";;",2)
"RTN","PSORRX1",158,0)
 .I PRMPDAT="Q" S DONE=1 Q
"RTN","PSORRX1",159,0)
 .K DIR
"RTN","PSORRX1",160,0)
 .S DIR(0)=$P(PRMPDAT,"|"),DIR("A")=$P(PRMPDAT,"|",2),VAR=$P(PRMPDAT,"|",4) S:$L($P(PRMPDAT,"|",3)) DIR("B")=$P(PRMPDAT,"|",3)
"RTN","PSORRX1",161,0)
 .I $G(DIR("B"))["~" D
"RTN","PSORRX1",162,0)
 ..S EXE=$TR(DIR("B"),"~","^") X EXE S DIR("B")=DEF
"RTN","PSORRX1",163,0)
 .D ^DIR
"RTN","PSORRX1",164,0)
 .I Y="^" S EXIT=1 Q
"RTN","PSORRX1",165,0)
 .S @VAR=$S($P(DIR(0),"^")["P":$P(Y,U,2),1:Y)  ;*499
"RTN","PSORRX1",166,0)
 K DEF
"RTN","PSORRX1",167,0)
 I EXIT W !,"Cancelling partial fill request.",! K DIR S DIR(0)="FO",DIR("A")="Press RETURN to continue" D ^DIR Q
"RTN","PSORRX1",168,0)
 ; if we got this far, fill attempt happening and remote worklist
"RTN","PSORRX1",169,0)
 ; needs to be rebuilt when returning so set flag. PSORRBLD was New'ed
"RTN","PSORRX1",170,0)
 ; in calling routine.  May change my mind if we get an error from
"RTN","PSORRX1",171,0)
 ; host
"RTN","PSORRX1",172,0)
 S PSORRBLD=1
"RTN","PSORRX1",173,0)
 S PHARMLN=$P(PHARM,","),PHARMFN=$P($P(PHARM,",",2)," "),PHARMMI=$P($P(PHARM,",",2)," ",2)
"RTN","PSORRX1",174,0)
 D INIT^HLFNC2(HLPROT,.HL)
"RTN","PSORRX1",175,0)
 D BLDPID^PSOTPHL2(DFN,"",.PSORRDAT,.HL,.ERR)
"RTN","PSORRX1",176,0)
 S DONE=0
"RTN","PSORRX1",177,0)
 F PSOHCNT=1:1 D  Q:DONE
"RTN","PSORRX1",178,0)
 .I '$D(PSORRDAT(PSOHCNT)) S DONE=1 Q
"RTN","PSORRX1",179,0)
 .S @HLARR@(1)=$G(@HLARR@(1))_PSORRDAT(PSOHCNT)
"RTN","PSORRX1",180,0)
 S @HLARR@(2)="ORC^PF^"_PRXNUM_"~"_REMSITE_"~"_$$FQDN^PSORWRAP(,REMSIEN)_"^^^^^^^"_PDATE_"^"_DUZ_"~"_PHARMLN_"~"_PHARMFN_"~"_PHARMMI_"^^^~~~"_LOCSITE_U_PHONE
"RTN","PSORRX1",181,0)
 S @HLARR@(3)="RXO^1^"_QTY_"^^^^^^"_MW_"~~~"_LOCSITE_"^^^"_DSUPP
"RTN","PSORRX1",182,0)
 S @HLARR@(4)="NTE^1^L^"_REMARKS
"RTN","PSORRX1",183,0)
 W !!,"Processing partial fill request. Please be patient as it may take a moment"
"RTN","PSORRX1",184,0)
 W !,"for the host site to respond and generate your label data...",!
"RTN","PSORRX1",185,0)
 S RMSDOM=$$FQDN^PSORWRAP(,REMSIEN)
"RTN","PSORRX1",186,0)
 S DOMOVR=REMSITE_"~"_RMSDOM_"~DNS"
"RTN","PSORRX1",187,0)
 S HLP("SUBSCRIBER")="^^^^"_DOMOVR
"RTN","PSORRX1",188,0)
 D DIRECT^HLMA(HLPROT,"GM",1,.HL,"",.HLP)
"RTN","PSORRX1",189,0)
 I $P(HL,U,2) D  Q
"RTN","PSORRX1",190,0)
 . W !,"An error was encountered when trying to process the results",!,"from the refill/partial fill request.",!!,$P(HL,U,3)
"RTN","PSORRX1",191,0)
 . K DIR S DIR(0)="FO",DIR("A")="Press RETURN to continue" D ^DIR
"RTN","PSORRX1",192,0)
 . D CL
"RTN","PSORRX1",193,0)
 ; clean up variables used
"RTN","PSORRX1",194,0)
 D READMSG^PSORRX2(.HLDAT,"PR",LOCDRUG)
"RTN","PSORRX1",195,0)
CL ;
"RTN","PSORRX1",196,0)
 K PDATE,QTY,DSUPP,PHARM,REMARKS,MW
"RTN","PSORRX1",197,0)
 K @HLDAT,@HLARR
"RTN","PSORRX1",198,0)
 Q
"RTN","PSORRX1",199,0)
 ;
"RTN","PSORRX1",200,0)
DRUGMTCH(DRGNM,VAPID) ;
"RTN","PSORRX1",201,0)
 ; returns -1 if a match was found but user said NO
"RTN","PSORRX1",202,0)
 N LDIEN,MATCH,EXIT,VAPIDSTR,DRL,VAPIEN,VAGENER,FOUND,CHECK,DIC,DRGARY,LDNAME,Y,DRGNM2,VAPSTR,MTCHSTR,DRLCNT
"RTN","PSORRX1",203,0)
 S CHECK=""
"RTN","PSORRX1",204,0)
 S VAPIEN=$O(^PSNDF(50.68,"C",VAPID,0))
"RTN","PSORRX1",205,0)
 I 'VAPIEN Q ""  ; ID from HDR not found - most likely CMOP ID/VA PID mismatch
"RTN","PSORRX1",206,0)
 S VAPSTR=$$GET1^DIQ(50.68,VAPIEN,2,"E")
"RTN","PSORRX1",207,0)
 S VAPIDSTR=$$GET1^DIQ(50.68,VAPIEN,.01,"E")
"RTN","PSORRX1",208,0)
 W !!,"Remote site drug name: "_DRGNM
"RTN","PSORRX1",209,0)
 I $D(^PSDRUG("B",DRGNM)) S LDIEN=$O(^PSDRUG("B",DRGNM,0))
"RTN","PSORRX1",210,0)
 I $D(LDIEN) D
"RTN","PSORRX1",211,0)
 .S LDNAME=$$GET1^DIQ(50,LDIEN,.01,"E")
"RTN","PSORRX1",212,0)
 .W !,"Matching Drug Found for Dispensing: "_LDNAME
"RTN","PSORRX1",213,0)
 .S CHECK=$$DIR
"RTN","PSORRX1",214,0)
 I $D(LDIEN),'CHECK Q -1  ; match was found but user said NO
"RTN","PSORRX1",215,0)
 I $D(LDIEN) Q LDIEN
"RTN","PSORRX1",216,0)
 S VAGENER=$$GET1^DIQ(50.68,VAPIEN,.05,"I")
"RTN","PSORRX1",217,0)
 ; loop through AND index to find drugs associated with this va generic product.
"RTN","PSORRX1",218,0)
 S FOUND=0
"RTN","PSORRX1",219,0)
 S (DRL,DRLCNT)=0 F  S DRL=$O(^PSDRUG("AND",VAGENER,DRL)) Q:'DRL!(FOUND)  D
"RTN","PSORRX1",220,0)
 .S MTCHSTR=$$GET1^DIQ(50,DRL,901,"E")
"RTN","PSORRX1",221,0)
 .I VAPSTR]"" Q:MTCHSTR'=VAPSTR
"RTN","PSORRX1",222,0)
 .S DRGARY(DRL)="",DRLCNT=DRLCNT+1
"RTN","PSORRX1",223,0)
 ; only one match found.
"RTN","PSORRX1",224,0)
 I DRLCNT=1 S LDIEN=$O(DRGARY(0))
"RTN","PSORRX1",225,0)
 I 'DRLCNT W !!,"No local match could be found for "_DRGNM_".",! K DIR S DIR(0)="FO",DIR("A")="Press RETURN to continue" D ^DIR Q -1
"RTN","PSORRX1",226,0)
 I $D(LDIEN) D
"RTN","PSORRX1",227,0)
 .S LDNAME=$$GET1^DIQ(50,LDIEN,.01,"E")
"RTN","PSORRX1",228,0)
 .W !,"Matching Drug Found for Dispensing: "_LDNAME
"RTN","PSORRX1",229,0)
 .S CHECK=$$DIR()
"RTN","PSORRX1",230,0)
 I $D(LDIEN),'CHECK Q -1  ; match was found but user said NO
"RTN","PSORRX1",231,0)
 I $D(LDIEN) Q LDIEN
"RTN","PSORRX1",232,0)
 ; list the items that match strength
"RTN","PSORRX1",233,0)
 S (MATCH,EXIT)=0
"RTN","PSORRX1",234,0)
 N PSODRGL,PSODRGLI,PSODRGL0,PSODRGID,PSODRGC S DIR(0)=""
"RTN","PSORRX1",235,0)
 F PSODRGLI=0:0 S PSODRGLI=$O(DRGARY(PSODRGLI)) Q:'PSODRGLI  D
"RTN","PSORRX1",236,0)
 .S PSODRGL0=$G(^PSDRUG(PSODRGLI,0)),PSODRGID=$G(^PSDRUG(PSODRGLI,"I"))
"RTN","PSORRX1",237,0)
 .Q:$TR(PSODRGL0,"^")=""  S PSODRGC=$G(PSODRGC)+1
"RTN","PSORRX1",238,0)
 .S DIR(0)=DIR(0)_$S(DIR(0)]"":";",1:"")
"RTN","PSORRX1",239,0)
 .S DIR(0)=DIR(0)_$G(PSODRGC)_":"_PSODRGLI_"  "_$E($P(PSODRGL0,"^"),1,30)_"  "_$J($P(PSODRGL0,"^",2),7)_"  "_$S(PSODRGID:$E(PSODRGID,4,5)_"-"_$E(PSODRGID,6,7)_"-"_$E(PSODRGID,2,3)_"  ",1:"")_$P(PSODRGL0,"^",10)
"RTN","PSORRX1",240,0)
 .S DIR("L",PSODRGC)=PSODRGC_".  "_PSODRGLI_"  "_$E($P(PSODRGL0,"^"),1,30)_"  "_$J($P(PSODRGL0,"^",2),7)_"  "_$S(PSODRGID:$E(PSODRGID,4,5)_"-"_$E(PSODRGID,6,7)_"-"_$E(PSODRGID,2,3)_"  ",1:"")_$P(PSODRGL0,"^",10)
"RTN","PSORRX1",241,0)
 S DIR(0)="SO^"_DIR(0),DIR("L")=""  ;1:$G(PSODRGC)"
"RTN","PSORRX1",242,0)
 S DIR("A")="Select matching local drug"
"RTN","PSORRX1",243,0)
 D ^DIR K DIR
"RTN","PSORRX1",244,0)
 I +Y<1!($D(DUOUT))!($D(DTOUT)) S Y=-1  ;*519
"RTN","PSORRX1",245,0)
 I Y=-1 Q Y
"RTN","PSORRX1",246,0)
 S LDIEN=+Y(0)
"RTN","PSORRX1",247,0)
 I $G(LDIEN) K DIR S DIR(0)="Y",DIR("A")="Would you like to use this drug" D ^DIR I +Y<1!($D(DUOUT))!($D(DTOUT)) Q -1  ;*509 CHECK FOR Y<1 INSTEAD OF Y<0
"RTN","PSORRX1",248,0)
 Q $G(LDIEN)
"RTN","PSORRX1",249,0)
 ; TEXT to build prompts
"RTN","PSORRX1",250,0)
 ;;DIR(0)|DIR(A)|DIR(B)|VARIABLE
"RTN","PSORRX1",251,0)
PRMPTXT ;
"RTN","PSORRX1",252,0)
 ;;N^^I $D(X),X>$P(REMDATA,U,2) D EN^DDIOL("QTY CANNOT BE GREATER THAN THE ORIGINAL QTY OF "_$P(REMDATA,U,2)) K X|Enter Quantity||QTY
"RTN","PSORRX1",253,0)
 ;;N|DAYS SUPPLY||DSUPP
"RTN","PSORRX1",254,0)
 ;;P^200:QEAMZ|Select PHARMACIST Name|S DEF=$$GET1~DIQ(200,DUZ,.01,"E")|PHARM
"RTN","PSORRX1",255,0)
 ;;F^0:60|REMARKS||REMARKS
"RTN","PSORRX1",256,0)
 ;;Q
"RTN","PSORRX1",257,0)
 Q
"RTN","PSORRX1",258,0)
DIR() ;
"RTN","PSORRX1",259,0)
 N DIR,Y
"RTN","PSORRX1",260,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","PSORRX1",261,0)
 S DIR("A",1)="Would you like to use the system matched drug for this"
"RTN","PSORRX1",262,0)
 S DIR("A")="refill/partial fill"
"RTN","PSORRX1",263,0)
 D ^DIR
"RTN","PSORRX1",264,0)
 Q Y
"RTN","PSORRX1",265,0)
POST ; post init for PSO*7*454
"RTN","PSORRX1",266,0)
 N LIEN,OPSITE,DOMAIN,VAL
"RTN","PSORRX1",267,0)
 ; add TCP/IP address for EMI
"RTN","PSORRX1",268,0)
 S DOMAIN=$$FQDN^PSORWRAP(,DUZ(2))
"RTN","PSORRX1",269,0)
 S VAL="PSORRXSEND"
"RTN","PSORRX1",270,0)
 S LIEN=$$FIND1^DIC(870,,"B",.VAL) Q:'LIEN
"RTN","PSORRX1",271,0)
 S FDA(870,LIEN_",",.08)=DOMAIN
"RTN","PSORRX1",272,0)
 S FDA(870,LIEN_",",400.01)="vaaussoalebp2.aac.domain.ext" D FILE^DIE(,"FDA") K FDA
"RTN","PSORRX1",273,0)
 ; turn off the OneVA Pharmacy flag for all outpatient sites.
"RTN","PSORRX1",274,0)
 S OPSITE=0 F  S OPSITE=$O(^PS(59,OPSITE)) Q:'OPSITE  D
"RTN","PSORRX1",275,0)
 .S FDA(59,OPSITE_",",3001)="" D FILE^DIE(,"FDA") K FDA
"RTN","PSORRX1",276,0)
 Q
"VER")
8.0^22.2
"BLD",11123,6)
^451
**END**
**END**

