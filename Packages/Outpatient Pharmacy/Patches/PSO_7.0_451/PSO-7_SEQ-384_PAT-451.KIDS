Released PSO*7*451 SEQ #384
Extracted from mail message
**KIDS**:PSO*7.0*451^

**INSTALL NAME**
PSO*7.0*451
"BLD",9285,0)
PSO*7.0*451^OUTPATIENT PHARMACY^0^3160603^y
"BLD",9285,1,0)
^^289^289^3160602^^^
"BLD",9285,1,1,0)
The State Prescription Monitoring Program (SPMP) Enhancement project was
"BLD",9285,1,2,0)
established to further enhance the VistA SPMP functionality released by patch
"BLD",9285,1,3,0)
PSO*7*408 back in September 2014. The SPMP VistA functionality is used to
"BLD",9285,1,4,0)
identify prescriptions for controlled substance drugs, Schedule 2 through 5,
"BLD",9285,1,5,0)
dispensed by the Veterans Health Administration (VHA) Outpatient Pharmacy
"BLD",9285,1,6,0)
facilities and to create and transmit an export file containing this
"BLD",9285,1,7,0)
information to the Prescription Drug Monitoring Program (PDMP) of each state
"BLD",9285,1,8,0)
on a daily basis.
"BLD",9285,1,9,0)
 
"BLD",9285,1,10,0)
After PSO*7*408 was released it was identified during the implementation
"BLD",9285,1,11,0)
phase that some states PDMPs had unique requirements that could not be
"BLD",9285,1,12,0)
fulfilled by the functionality released in PSO*7*408 which caused the SPMP
"BLD",9285,1,13,0)
transmissions from sites in such states to be rejected. This patch
"BLD",9285,1,14,0)
(PSO*7*451) will enhance the SPMP functionality to allow VHA to fulfill
"BLD",9285,1,15,0)
specific state requirements and successfully transmit data to those states
"BLD",9285,1,16,0)
PDMPs. This patch also enhances the security of Secure SHell (SSH) Keys 
"BLD",9285,1,17,0)
management by streamlining the SSH Key creating and restricting user access
"BLD",9285,1,18,0)
to the Private SSH Key content. In addition, a few smaller miscellaneous
"BLD",9285,1,19,0)
issues have also been addressed, which are described below.
"BLD",9285,1,20,0)
 
"BLD",9285,1,21,0)
All the changes introduced by this patch were related to the options under
"BLD",9285,1,22,0)
the State Prescription Monitoring Program (SPMP) Menu [PSO SPMP MENU] which
"BLD",9285,1,23,0)
is located under the Supervisor Functions [PSO SUPERVISOR] menu option. 
"BLD",9285,1,24,0)
 
"BLD",9285,1,25,0)
The following functionality enhancements will be delivered by this patch:
"BLD",9285,1,26,0)
 
"BLD",9285,1,27,0)
1. View/Edit ASAP Definitions [PSO SPMP ASAP DEFINITIONS] option
"BLD",9285,1,28,0)
   -------------------------------------------------------------
"BLD",9285,1,29,0)
   Some extensive enhancements have been made to this option to allow full 
"BLD",9285,1,30,0)
   user customization of the American Society for Automation in Pharmacy
"BLD",9285,1,31,0)
   (ASAP) data definition format (protocol) used to report outpatient
"BLD",9285,1,32,0)
   controlled substance prescription data to the states.
"BLD",9285,1,33,0)
 
"BLD",9285,1,34,0)
   a) The term '/Edit' has been added to the external name of this option
"BLD",9285,1,35,0)
      and the term 'VIEW' was removed from the internal option name.
"BLD",9285,1,36,0)
  
"BLD",9285,1,37,0)
   b) This option has been modified to include full customization capability 
"BLD",9285,1,38,0)
      for the ASAP definitions 3.0 and later versions, which will allow sites 
"BLD",9285,1,39,0)
      to fulfill states PDMPs' specific requirements. Moreover, sites will be
"BLD",9285,1,40,0)
      able to create new ASAP versions by copying an existing one, which
"BLD",9285,1,41,0)
      will hopefully allow them to continue transmissions well into the
"BLD",9285,1,42,0)
      future as new ASAP versions are released and adopted by the states
"BLD",9285,1,43,0)
      PDMPs.
"BLD",9285,1,44,0)
      
"BLD",9285,1,45,0)
      Below is a list of actions that have been added to this option:
"BLD",9285,1,46,0)
       
"BLD",9285,1,47,0)
      CV  Copy ASAP Version  CE  Customize Element     ED  Edit Delimiters
"BLD",9285,1,48,0)
      CS  Customize Segment  DC  Delete Customization  
"BLD",9285,1,49,0)
  
"BLD",9285,1,50,0)
      For more information on these new actions see the Outpatient Pharmacy
"BLD",9285,1,51,0)
      Manager's User Manual in the State Prescription Monitoring Program
"BLD",9285,1,52,0)
      (SPMP) section.
"BLD",9285,1,53,0)
 
"BLD",9285,1,54,0)
   c) Customized Data Elements and Segments will be identified by an '*' 
"BLD",9285,1,55,0)
      (asterisk) displayed to the right of the Data Element or Segment ID.
"BLD",9285,1,56,0)
 
"BLD",9285,1,57,0)
2. View/Edit SPMP State Parameters [PSO SPMP STATE PARAMETERS] option
"BLD",9285,1,58,0)
   ------------------------------------------------------------------
"BLD",9285,1,59,0)
   A few modifications have been made to this option to support the new 
"BLD",9285,1,60,0)
   functionality released by this patch.
"BLD",9285,1,61,0)
 
"BLD",9285,1,62,0)
   a) The parameter WINDOWS/NT LOCAL DIRECTORY was removed from this option
"BLD",9285,1,63,0)
      because this module no longer supports this operating system  due to
"BLD",9285,1,64,0)
      the increase in the complexity for handling SSH Keys and the fact that 
"BLD",9285,1,65,0)
      VHA does not use WINDOWS/NT operating system for VistA database at any
"BLD",9285,1,66,0)
      of its sites.
"BLD",9285,1,67,0)
 
"BLD",9285,1,68,0)
   b) The parameter REPORTING FREQUENCY IN DAYS was modified to allow a
"BLD",9285,1,69,0)
      maximum value of 30 days. Before this field allowed a maximum value of
"BLD",9285,1,70,0)
      99 days.
"BLD",9285,1,71,0)
        
"BLD",9285,1,72,0)
   c) A new parameter called RENAME FILE AFTER UPLOAD was added right after
"BLD",9285,1,73,0)
      the 'FILE EXTENSION' parameter. The current transmission creates and
"BLD",9285,1,74,0)
      sends the data file with the ".UP" file extension (for "upload"); once
"BLD",9285,1,75,0)
      the file is transmitted a command within sFTP (Secure File Transfer 
"BLD",9285,1,76,0)
      Protocol) is issued to rename the file to ".DAT" (or ".TXT") file
"BLD",9285,1,77,0)
      extension. This new parameter will allow the site to control whether
"BLD",9285,1,78,0)
      they want to keep the existing functionality by setting this parameter
"BLD",9285,1,79,0)
      to 'YES' or if they would like to create and transmit the file without
"BLD",9285,1,80,0)
      renaming it by setting this parameter to 'NO'. The parameter will be
"BLD",9285,1,81,0)
      initially exported with a default value of 'YES', which is consistent
"BLD",9285,1,82,0)
      with the existing released functionality.
"BLD",9285,1,83,0)
 
"BLD",9285,1,84,0)
   d) The parameters STATE SFTP SERVER IP ADDRESS and STATE SFTP SERVER
"BLD",9285,1,85,0)
      USERNAME had their maximum value lengths increased from 30 to 60 and
"BLD",9285,1,86,0)
      50 characters respectively to accommodate longer PDMP's DNS (Domain
"BLD",9285,1,87,0)
      Name System) names and the usernames they assign to VHA sites.
"BLD",9285,1,88,0)
 
"BLD",9285,1,89,0)
   e) For security reasons the parameters SFTP PRIVATE KEY TEXT and SFTP
"BLD",9285,1,90,0)
      PUBLIC KEY TEXT have been removed from this option as the SSH
"BLD",9285,1,91,0)
      encryption keys content will be handled by a new option called Manage
"BLD",9285,1,92,0)
      Secure SHell (SSH) Keys [PSO SPMP SSH KEY MANAGEMENT], which is
"BLD",9285,1,93,0)
      described below.
"BLD",9285,1,94,0)
  
"BLD",9285,1,95,0)
3. Manage Secure SHell (SSH) Keys [PSO SPMP SSH KEY MANAGEMENT] option 
"BLD",9285,1,96,0)
   -------------------------------------------------------------------
"BLD",9285,1,97,0)
   This new option was created to automate the management of SSH encryption
"BLD",9285,1,98,0)
   keys and to improve the security regarding their content. This new option
"BLD",9285,1,99,0)
   will allow sites to view the public SSH key, create a new SSH key pair and
"BLD",9285,1,100,0)
   also to delete an existing SSH key pair. In addition, this new option will
"BLD",9285,1,101,0)
   provide an extensive help text on how the SSH keys are used in the 
"BLD",9285,1,102,0)
   transmission process, which is shown below:
"BLD",9285,1,103,0)
   
"BLD",9285,1,104,0)
     Select one of the following:
"BLD",9285,1,105,0)
 
"BLD",9285,1,106,0)
          V         View Public SSH Key
"BLD",9285,1,107,0)
          N         Create New SSH Key Pair
"BLD",9285,1,108,0)
          D         Delete SSH Key Pair
"BLD",9285,1,109,0)
          H         Help with SSH Keys
"BLD",9285,1,110,0)
 
"BLD",9285,1,111,0)
     Action: V// H  Help with SSH Keys
"BLD",9285,1,112,0)
  
"BLD",9285,1,113,0)
   Secure SHell (SSH) Encryption Keys are used to automate the data 
"BLD",9285,1,114,0)
   transmission to the State Prescription Monitoring Programs (SPMPs). Follow
"BLD",9285,1,115,0)
   the steps below to successfully setup SPMP transmissions from VistA to the
"BLD",9285,1,116,0)
   state/vendor server:
"BLD",9285,1,117,0)
 
"BLD",9285,1,118,0)
   Step 1: Select the 'N' (Create New SSH Key Pair) Action and follow the
"BLD",9285,1,119,0)
           prompts to create a new pair of SSH keys. If you already have an
"BLD",9285,1,120,0)
           existing SSH Key Pair you can skip this step. You can check
"BLD",9285,1,121,0)
           whether you already have an existing SSH Key Pair through the 'V'
"BLD",9285,1,122,0)
           (View Public SSH Key) Action.
"BLD",9285,1,123,0)
 
"BLD",9285,1,124,0)
        Encryption Type: DSA or RSA?
"BLD",9285,1,125,0)
        ----------------------------
"BLD",9285,1,126,0)
        Digital Signature Algorithm (DSA) and Rivest, Shamir & Adleman (RSA)
"BLD",9285,1,127,0)
        are two of the most common encryption algorithms used by the IT
"BLD",9285,1,128,0)
        industry for securely sharing data. The majority of SPMP servers can
"BLD",9285,1,129,0)
        handle either type; however there are vendors that accept only one
"BLD",9285,1,130,0)
        specific type. You will need to contact the SPMP vendor support to
"BLD",9285,1,131,0)
        determine which type to select.
"BLD",9285,1,132,0)
 
"BLD",9285,1,133,0)
   Step 2: Share the Public SSH Key content with the state/vendor. In order
"BLD",9285,1,134,0)
           to successfully establish SPMP transmissions the state/vendor will
"BLD",9285,1,135,0)
           have to install/configure the new SSH Key created in step 1 for
"BLD",9285,1,136,0)
           the user id they assigned to your site. Use the 'V' (View Public
"BLD",9285,1,137,0)
           SSH Key) Action to retrieve the content of the Public SSH key. The
"BLD",9285,1,138,0)
           Public SSH Key should not contain line-feed characters, therefore
"BLD",9285,1,139,0)
           after you copy & paste it from the terminal emulator into an email
"BLD",9285,1,140,0)
           or text editor make sure it contains only one line of text (no 
"BLD",9285,1,141,0)
           wrapping).
"BLD",9285,1,142,0)
  
"BLD",9285,1,143,0)
4. View/Export Single Prescription [PSO SPMP SINGLE RX VIEW/EXPORT] option
"BLD",9285,1,144,0)
   -----------------------------------------------------------------------
"BLD",9285,1,145,0)
   This option was modified to highlight custom Data Elements and Segments
"BLD",9285,1,146,0)
   by changing the font color as well as by adding an '*' (asterisk) to the
"BLD",9285,1,147,0)
   right of the Data Element or Segment ID.
"BLD",9285,1,148,0)
 
"BLD",9285,1,149,0)
5. View/Export Batch [PSO SPMP BATCH VIEW/EXPORT] and Export Batch Processing
"BLD",9285,1,150,0)
   [PSO SPMP BATCH PROCESSING] options
"BLD",9285,1,151,0)
   --------------------------------------------------------------------------
"BLD",9285,1,152,0)
   When exporting a batch through one of these two options the users will now
"BLD",9285,1,153,0)
   have three different choices to execute the transmission: 'B' for 
"BLD",9285,1,154,0)
   Background (via TaskMan), which queues the transmission to be performed in
"BLD",9285,1,155,0)
   the background through TaskMan; 'F' for Foreground, which executes the
"BLD",9285,1,156,0)
   transmission in the foreground as it did before this patch and 'D' for
"BLD",9285,1,157,0)
   Debug Mode (Foreground), which will execute the transmission in the
"BLD",9285,1,158,0)
   foreground however it will display the sFTP debug steps, which can be very
"BLD",9285,1,159,0)
   helpful for troubleshooting transmission problems. 
"BLD",9285,1,160,0)
   Before this patch the transmission was always executed in the foreground
"BLD",9285,1,161,0)
   which made it difficult to troubleshoot issues with the transmissions, 
"BLD",9285,1,162,0)
   especially the scheduled transmissions, which are always executed in the
"BLD",9285,1,163,0)
   background. Below is a screen capture of the prompt for choosing the
"BLD",9285,1,164,0)
   transmission execution mode:
"BLD",9285,1,165,0)
  
"BLD",9285,1,166,0)
   Select Item(s): Quit// EXP   Export Batch  
"BLD",9285,1,167,0)
  
"BLD",9285,1,168,0)
   Indicate whether the transmission should be queued to run on the
"BLD",9285,1,169,0)
   Background via TaskMan, on the Foreground (Terminal Screen) or in Debug
"BLD",9285,1,170,0)
   Mode (Foreground)
"BLD",9285,1,171,0)
 
"BLD",9285,1,172,0)
      Select one of the following:
"BLD",9285,1,173,0)
 
"BLD",9285,1,174,0)
          B         Background
"BLD",9285,1,175,0)
          F         Foreground
"BLD",9285,1,176,0)
          D         Debug Mode (Foreground)
"BLD",9285,1,177,0)
 
"BLD",9285,1,178,0)
   Running Mode: F// 
"BLD",9285,1,179,0)
 
"BLD",9285,1,180,0)
6. PSO SPMP NOTIFICATIONS Mail Group
"BLD",9285,1,181,0)
   ---------------------------------
"BLD",9285,1,182,0)
   The existing mail group PSO SPMP NOTIFICATIONS released by PSO*7*408 will
"BLD",9285,1,183,0)
   be modified from type PRIVATE to PUBLIC.
"BLD",9285,1,184,0)
 
"BLD",9285,1,185,0)
7. SPMP Transmission Failed MailMan Message
"BLD",9285,1,186,0)
   ----------------------------------------
"BLD",9285,1,187,0)
   The Mailman message generated by the SPMP Scheduled Background Job as well
"BLD",9285,1,188,0)
   as by the (B)ackground option mentioned above for exporting a batch to the
"BLD",9285,1,189,0)
   state was modified to include Operating System sFTP Log Information, as in
"BLD",9285,1,190,0)
   this example from an OpenVMS environment:
"BLD",9285,1,191,0)
 
"BLD",9285,1,192,0)
   Subj: NEW YORK Prescription Monitoring Program Transmission Failed [#99999]
"BLD",9285,1,193,0)
   02/29/16@12:44  26 lines
"BLD",9285,1,194,0)
   From: SPMP TRANSMISSION  In 'IN' basket.   Page 1
"BLD",9285,1,195,0)
   --------------------------------------------------------------------------
"BLD",9285,1,196,0)
   There was a problem with the transmission of information about Controlled
"BLD",9285,1,197,0)
   Substance prescriptions to the NEW YORK State Prescription Monitoring
"BLD",9285,1,198,0)
   Program (SPMP).
"BLD",9285,1,199,0)
 
"BLD",9285,1,200,0)
   Batch #: 41
"BLD",9285,1,201,0)
   Period : 02/29/16 thru 02/29/16
"BLD",9285,1,202,0)
   Error  : Secure FTP Transmission failed.
"BLD",9285,1,203,0)
 
"BLD",9285,1,204,0)
   Please, use the option Export Batch Processing [PSO SPMP BATCH PROCESSING]
"BLD",9285,1,205,0)
   to manually transmit this batch to the state.
"BLD",9285,1,206,0)
   
"BLD",9285,1,207,0)
   sFTP Log:
"BLD",9285,1,208,0)
   ========
"BLD",9285,1,209,0)
   $ SET VERIFY=(PROCEDURE,IMAGE)
"BLD",9285,1,210,0)
   $ SET DEFAULT USER$:[SPMP]
"BLD",9285,1,211,0)
   $ sftp -"D3" -oIdentityFile="/USER$/SPMP/VMSSSHID." -"B" SPMP_FTP_201606021
"BLD",9285,1,212,0)
   6.INP -oUser=VATEST 54.175.203.159
"BLD",9285,1,213,0)
   debug( 2-JUN-2016 17:37:28.02): Ssh2/SSH2.C:1896: CRTL version (SYS$SHARE:D
"BLD",9285,1,214,0)
   SHR.EXE ident) is V8.3-01
"BLD",9285,1,215,0)
   debug( 2-JUN-2016 17:37:28.04): SshAppCommon/SSHAPPCOMMON.C:313: Allocating
"BLD",9285,1,216,0)
   bal SshRegex context.
"BLD",9285,1,217,0)
   debug( 2-JUN-2016 17:37:28.05): SshConfig/SSHCONFIG.C:3482: Metaconfig pars
"BLD",9285,1,218,0)
   stopped at line 4.
"BLD",9285,1,219,0)
   debug( 2-JUN-2016 17:37:28.05): SshConfig/SSHCONFIG.C:890: Setting variable
"BLD",9285,1,220,0)
   rboseMode' to 'FALSE'.
"BLD",9285,1,221,0)
   debug( 2-JUN-2016 17:37:28.06): SshConfig/SSHCONFIG.C:3390: Unable to open 
"BLD",9285,1,222,0)
   /ssh2_config
"BLD",9285,1,223,0)
   debug( 2-JUN-2016 17:37:28.07): Connecting to 54.175.203.159, port 22... 
"BLD",9285,1,224,0)
    not used)
"BLD",9285,1,225,0)
   debug( 2-JUN-2016 17:37:28.07): Ssh2/SSH2.C:2881: Entering event loop.
"BLD",9285,1,226,0)
   debug( 2-JUN-2016 17:37:28.12): Ssh2Client/SSHCLIENT.C:1655: Creating tra
"BLD",9285,1,227,0)
    protocol
"BLD",9285,1,228,0)
   debug( 2-JUN-2016 17:37:28.12): SshAuthMethodClient/SSHAUTHMETHODC.C:104:
"BLD",9285,1,229,0)
   "publickey" to usable methods. 
"BLD",9285,1,230,0)
   %TCPIP-E-SSH_FC_ERR_DEST, destination is not directory or does not exist
"BLD",9285,1,231,0)
  
"BLD",9285,1,232,0)
   ...
"BLD",9285,1,233,0)
 
"BLD",9285,1,234,0)
   debug( 2-JUN-2016 17:37:35.66): Ssh2/SSH2.C:327: locally_generated = TRUE
"BLD",9285,1,235,0)
   Disconnected; no more authentication methods available (No further authent
"BLD",9285,1,236,0)
   on methods available.).
"BLD",9285,1,237,0)
   debug( 2-JUN-2016 17:37:35.66): Ssh2Client/SSHCLIENT.C:1731: Destroying 
"BLD",9285,1,238,0)
   debug( 2-JUN-2016 17:37:35.66): SshConfig/SSHCONFIG.C:2888: Freeing pki. 
"BLD",9285,1,239,0)
   pki != NULL, user_pki = NULL)
"BLD",9285,1,240,0)
   debug( 2-JUN-2016 17:37:35.66): SshConnection/SSHCONN.C:2636: Destroying
"BLD",9285,1,241,0)
   debug( 2-JUN-2016 17:37:35.66): Ssh2Client/SSHCLIENT.C:1799: Destroying 
"BLD",9285,1,242,0)
   completed.
"BLD",9285,1,243,0)
   debug( 2-JUN-2016 17:37:35.66): SshAuthMethodClient/SSHAUTHMETHODC.C:109: 
"BLD",9285,1,244,0)
   oying authentication method array.
"BLD",9285,1,245,0)
   %TCPIP-F-SSH_FATAL, non-specific fatal error condition 
"BLD",9285,1,246,0)
 
"BLD",9285,1,247,0)
8. PSO SPMP ADMIN Security Key
"BLD",9285,1,248,0)
   ---------------------------
"BLD",9285,1,249,0)
   A new security key was created to restrict access to the following SPMP
"BLD",9285,1,250,0)
   functionalities:
"BLD",9285,1,251,0)
 
"BLD",9285,1,252,0)
      - ASAP Definition Customization updates through the option View/Edit
"BLD",9285,1,253,0)
        ASAP Definitions [PSO SPMP ASAP DEFINITIONS]. Visualization of the
"BLD",9285,1,254,0)
        current ASAP Definition is not restricted.
"BLD",9285,1,255,0)
 
"BLD",9285,1,256,0)
      - SPMP Parameters value updates through the option View/Edit SPMP State
"BLD",9285,1,257,0)
        Parameters [PSO SPMP STATE PARAMETERS]. Visualization of the current
"BLD",9285,1,258,0)
        SPMP parameters is not restricted.
"BLD",9285,1,259,0)
  
"BLD",9285,1,260,0)
      - SSH Key generation or replacement through the option Manage Secure
"BLD",9285,1,261,0)
        SHell (SSH) Keys [PSO SPMP SSH KEY MANAGEMENT]. Visualization of the
"BLD",9285,1,262,0)
        current public key is not restricted.
"BLD",9285,1,263,0)
 
"BLD",9285,1,264,0)
9. Misleading "File Successfully Transmitted" message for Linux OS
"BLD",9285,1,265,0)
   ---------------------------------------------------------------
"BLD",9285,1,266,0)
   The previous algorithm used to identify whether the SPMP sFTP data
"BLD",9285,1,267,0)
   transmission was successful was not 100% accurate for Linux Operating
"BLD",9285,1,268,0)
   Systems. A new algorithm has been created and it should reflect the
"BLD",9285,1,269,0)
   transmission status with much greater accuracy when transmitting data
"BLD",9285,1,270,0)
   from a Linux based environment.
"BLD",9285,1,271,0)
 
"BLD",9285,1,272,0)
10.SPMP Files Access Restrictions
"BLD",9285,1,273,0)
   ------------------------------
"BLD",9285,1,274,0)
   The FILE ACCESS setting for the SPMP files below will be opened up so
"BLD",9285,1,275,0)
   users can use FileMan to view and search their content. The files were
"BLD",9285,1,276,0)
   unintentionally released in PSO*7*408 as restricted.
"BLD",9285,1,277,0)
 
"BLD",9285,1,278,0)
    - SPMP ASAP RECORD DEFINITION (#58.4)
"BLD",9285,1,279,0)
    - SPMP EXPORT BATCH (#58.42)
"BLD",9285,1,280,0)
 
"BLD",9285,1,281,0)
11. Pharmacy DEA Number (ASAP Data Element PHA03)
"BLD",9285,1,282,0)
    ---------------------------------------------
"BLD",9285,1,283,0)
    The Pharmacy DEA# was previously retrieved from the INSTITUTION file
"BLD",9285,1,284,0)
    (#4) through the RELATED INSTITUTION field (#100) in the OUTPATIENT
"BLD",9285,1,285,0)
    SITE file (#59). Now, the software will look for a DEA# for the
"BLD",9285,1,286,0)
    institution in NPI INSTITUTION field (#101) in the OUTPATIENT SITE
"BLD",9285,1,287,0)
    file (#59). If the DEA# for the NPI Institution is blank the software
"BLD",9285,1,288,0)
    will retrieve the DEA# for the Related Institution, like it was doing
"BLD",9285,1,289,0)
    before this patch.
"BLD",9285,4,0)
^9.64PA^58.41^3
"BLD",9285,4,58.4,0)
58.4
"BLD",9285,4,58.4,222)
y^y^f^^n^^y^o^n
"BLD",9285,4,58.41,0)
58.41
"BLD",9285,4,58.41,2,0)
^9.641^58.41^1
"BLD",9285,4,58.41,2,58.41,0)
SPMP STATE PARAMETERS  (File-top level)
"BLD",9285,4,58.41,2,58.41,1,0)
^9.6411^3^10
"BLD",9285,4,58.41,2,58.41,1,1,0)
ASAP VERSION
"BLD",9285,4,58.41,2,58.41,1,3,0)
REPORTING FREQUENCY IN DAYS
"BLD",9285,4,58.41,2,58.41,1,7,0)
STATE SFTP SERVER IP ADDRESS
"BLD",9285,4,58.41,2,58.41,1,8,0)
STATE SFTP SERVER USERNAME
"BLD",9285,4,58.41,2,58.41,1,13,0)
SFTP TRANSMISSION MODE
"BLD",9285,4,58.41,2,58.41,1,17,0)
RENAME FILE AFTER UPLOAD
"BLD",9285,4,58.41,2,58.41,1,18,0)
SFTP SSH KEY FORMAT
"BLD",9285,4,58.41,2,58.41,1,19,0)
SFTP SSH KEY ENCRYPTION
"BLD",9285,4,58.41,2,58.41,1,100,0)
SFTP SSH PRIVATE KEY TEXT
"BLD",9285,4,58.41,2,58.41,1,200,0)
SFTP SSH PUBLIC KEY TEXT
"BLD",9285,4,58.41,222)
y^n^p^^^^n^^n
"BLD",9285,4,58.41,224)

"BLD",9285,4,58.42,0)
58.42
"BLD",9285,4,58.42,2,0)
^9.641^58.42001^1
"BLD",9285,4,58.42,2,58.42001,0)
PRESCRIPTIONS  (sub-file)
"BLD",9285,4,58.42,2,58.42001,1,0)
^9.6411^3^1
"BLD",9285,4,58.42,2,58.42001,1,3,0)
NDC SENT
"BLD",9285,4,58.42,222)
y^y^p^^^^n^^n
"BLD",9285,4,58.42,224)

"BLD",9285,4,"APDD",58.41,58.41)

"BLD",9285,4,"APDD",58.41,58.41,1)

"BLD",9285,4,"APDD",58.41,58.41,3)

"BLD",9285,4,"APDD",58.41,58.41,7)

"BLD",9285,4,"APDD",58.41,58.41,8)

"BLD",9285,4,"APDD",58.41,58.41,13)

"BLD",9285,4,"APDD",58.41,58.41,17)

"BLD",9285,4,"APDD",58.41,58.41,18)

"BLD",9285,4,"APDD",58.41,58.41,19)

"BLD",9285,4,"APDD",58.41,58.41,100)

"BLD",9285,4,"APDD",58.41,58.41,200)

"BLD",9285,4,"APDD",58.42,58.42001)

"BLD",9285,4,"APDD",58.42,58.42001,3)

"BLD",9285,4,"B",58.4,58.4)

"BLD",9285,4,"B",58.41,58.41)

"BLD",9285,4,"B",58.42,58.42)

"BLD",9285,6.3)
114
"BLD",9285,"ABPKG")
n
"BLD",9285,"INI")
PRE^PSO451PI
"BLD",9285,"INID")
^y^y
"BLD",9285,"INIT")
POST^PSO451PI
"BLD",9285,"KRN",0)
^9.67PA^779.2^20
"BLD",9285,"KRN",.4,0)
.4
"BLD",9285,"KRN",.401,0)
.401
"BLD",9285,"KRN",.402,0)
.402
"BLD",9285,"KRN",.403,0)
.403
"BLD",9285,"KRN",.5,0)
.5
"BLD",9285,"KRN",.84,0)
.84
"BLD",9285,"KRN",3.6,0)
3.6
"BLD",9285,"KRN",3.8,0)
3.8
"BLD",9285,"KRN",3.8,"NM",0)
^9.68A^^0
"BLD",9285,"KRN",9.2,0)
9.2
"BLD",9285,"KRN",9.8,0)
9.8
"BLD",9285,"KRN",9.8,"NM",0)
^9.68A^20^18
"BLD",9285,"KRN",9.8,"NM",1,0)
PSOSPMU1^^0^B128483290
"BLD",9285,"KRN",9.8,"NM",2,0)
PSOSPMUT^^0^B182085149
"BLD",9285,"KRN",9.8,"NM",3,0)
PSOASAP^^0^B85867649
"BLD",9285,"KRN",9.8,"NM",4,0)
PSOASAP0^^0^B164871797
"BLD",9285,"KRN",9.8,"NM",5,0)
PSOSPMSP^^0^B106425657
"BLD",9285,"KRN",9.8,"NM",6,0)
PSOSPML3^^0^B57979959
"BLD",9285,"KRN",9.8,"NM",7,0)
PSO451PI^^0^B4221073
"BLD",9285,"KRN",9.8,"NM",8,0)
PSOSPMU0^^0^B23897100
"BLD",9285,"KRN",9.8,"NM",9,0)
PSOSPML0^^0^B32864109
"BLD",9285,"KRN",9.8,"NM",10,0)
PSOSPML1^^0^B47175688
"BLD",9285,"KRN",9.8,"NM",11,0)
PSOSPML2^^0^B55672544
"BLD",9285,"KRN",9.8,"NM",12,0)
PSOSPML4^^0^B93991952
"BLD",9285,"KRN",9.8,"NM",14,0)
PSOSPML6^^0^B4610506
"BLD",9285,"KRN",9.8,"NM",15,0)
PSOSPMU2^^0^B10133979
"BLD",9285,"KRN",9.8,"NM",17,0)
PSOSPMU3^^0^B137219252
"BLD",9285,"KRN",9.8,"NM",18,0)
PSOSPMA3^^0^B171421989
"BLD",9285,"KRN",9.8,"NM",19,0)
PSOSPMB3^^0^B46180556
"BLD",9285,"KRN",9.8,"NM",20,0)
PSOSPMKY^^0^B101316264
"BLD",9285,"KRN",9.8,"NM","B","PSO451PI",7)

"BLD",9285,"KRN",9.8,"NM","B","PSOASAP",3)

"BLD",9285,"KRN",9.8,"NM","B","PSOASAP0",4)

"BLD",9285,"KRN",9.8,"NM","B","PSOSPMA3",18)

"BLD",9285,"KRN",9.8,"NM","B","PSOSPMB3",19)

"BLD",9285,"KRN",9.8,"NM","B","PSOSPMKY",20)

"BLD",9285,"KRN",9.8,"NM","B","PSOSPML0",9)

"BLD",9285,"KRN",9.8,"NM","B","PSOSPML1",10)

"BLD",9285,"KRN",9.8,"NM","B","PSOSPML2",11)

"BLD",9285,"KRN",9.8,"NM","B","PSOSPML3",6)

"BLD",9285,"KRN",9.8,"NM","B","PSOSPML4",12)

"BLD",9285,"KRN",9.8,"NM","B","PSOSPML6",14)

"BLD",9285,"KRN",9.8,"NM","B","PSOSPMSP",5)

"BLD",9285,"KRN",9.8,"NM","B","PSOSPMU0",8)

"BLD",9285,"KRN",9.8,"NM","B","PSOSPMU1",1)

"BLD",9285,"KRN",9.8,"NM","B","PSOSPMU2",15)

"BLD",9285,"KRN",9.8,"NM","B","PSOSPMU3",17)

"BLD",9285,"KRN",9.8,"NM","B","PSOSPMUT",2)

"BLD",9285,"KRN",19,0)
19
"BLD",9285,"KRN",19,"NM",0)
^9.68A^4^4
"BLD",9285,"KRN",19,"NM",1,0)
PSO SPMP VIEW ASAP DEFINITIONS^^1^
"BLD",9285,"KRN",19,"NM",2,0)
PSO SPMP ASAP DEFINITIONS^^0
"BLD",9285,"KRN",19,"NM",3,0)
PSO SPMP MENU^^2
"BLD",9285,"KRN",19,"NM",4,0)
PSO SPMP SSH KEY MANAGEMENT^^0
"BLD",9285,"KRN",19,"NM","B","PSO SPMP ASAP DEFINITIONS",2)

"BLD",9285,"KRN",19,"NM","B","PSO SPMP MENU",3)

"BLD",9285,"KRN",19,"NM","B","PSO SPMP SSH KEY MANAGEMENT",4)

"BLD",9285,"KRN",19,"NM","B","PSO SPMP VIEW ASAP DEFINITIONS",1)

"BLD",9285,"KRN",19.1,0)
19.1
"BLD",9285,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",9285,"KRN",19.1,"NM",1,0)
PSO SPMP ADMIN^^0
"BLD",9285,"KRN",19.1,"NM","B","PSO SPMP ADMIN",1)

"BLD",9285,"KRN",101,0)
101
"BLD",9285,"KRN",101,"NM",0)
^9.68A^7^7
"BLD",9285,"KRN",101,"NM",1,0)
PSO SPMP3 COPY VERSION^^0
"BLD",9285,"KRN",101,"NM",2,0)
PSO SPMP3 CUSTOMIZE DATA ELEMENT^^0
"BLD",9285,"KRN",101,"NM",3,0)
PSO SPMP3 CUSTOMIZE SEGMENT^^0
"BLD",9285,"KRN",101,"NM",4,0)
PSO SPMP3 DELETE CUSTOMIZATION^^0
"BLD",9285,"KRN",101,"NM",5,0)
PSO SPMP3 EDIT DELIMETERS^^0
"BLD",9285,"KRN",101,"NM",6,0)
PSO SPMP3 MENU^^0
"BLD",9285,"KRN",101,"NM",7,0)
PSO SPMP3 SHOW DETAILS^^0
"BLD",9285,"KRN",101,"NM","B","PSO SPMP3 COPY VERSION",1)

"BLD",9285,"KRN",101,"NM","B","PSO SPMP3 CUSTOMIZE DATA ELEMENT",2)

"BLD",9285,"KRN",101,"NM","B","PSO SPMP3 CUSTOMIZE SEGMENT",3)

"BLD",9285,"KRN",101,"NM","B","PSO SPMP3 DELETE CUSTOMIZATION",4)

"BLD",9285,"KRN",101,"NM","B","PSO SPMP3 EDIT DELIMETERS",5)

"BLD",9285,"KRN",101,"NM","B","PSO SPMP3 MENU",6)

"BLD",9285,"KRN",101,"NM","B","PSO SPMP3 SHOW DETAILS",7)

"BLD",9285,"KRN",409.61,0)
409.61
"BLD",9285,"KRN",409.61,"NM",0)
^9.68A^1^1
"BLD",9285,"KRN",409.61,"NM",1,0)
PSO SPMP VIEW ASAP DEFINITION^^0
"BLD",9285,"KRN",409.61,"NM","B","PSO SPMP VIEW ASAP DEFINITION",1)

"BLD",9285,"KRN",771,0)
771
"BLD",9285,"KRN",779.2,0)
779.2
"BLD",9285,"KRN",870,0)
870
"BLD",9285,"KRN",8989.51,0)
8989.51
"BLD",9285,"KRN",8989.52,0)
8989.52
"BLD",9285,"KRN",8994,0)
8994
"BLD",9285,"KRN","B",.4,.4)

"BLD",9285,"KRN","B",.401,.401)

"BLD",9285,"KRN","B",.402,.402)

"BLD",9285,"KRN","B",.403,.403)

"BLD",9285,"KRN","B",.5,.5)

"BLD",9285,"KRN","B",.84,.84)

"BLD",9285,"KRN","B",3.6,3.6)

"BLD",9285,"KRN","B",3.8,3.8)

"BLD",9285,"KRN","B",9.2,9.2)

"BLD",9285,"KRN","B",9.8,9.8)

"BLD",9285,"KRN","B",19,19)

"BLD",9285,"KRN","B",19.1,19.1)

"BLD",9285,"KRN","B",101,101)

"BLD",9285,"KRN","B",409.61,409.61)

"BLD",9285,"KRN","B",771,771)

"BLD",9285,"KRN","B",779.2,779.2)

"BLD",9285,"KRN","B",870,870)

"BLD",9285,"KRN","B",8989.51,8989.51)

"BLD",9285,"KRN","B",8989.52,8989.52)

"BLD",9285,"KRN","B",8994,8994)

"BLD",9285,"QUES",0)
^9.62^^
"BLD",9285,"REQB",0)
^9.611^1^1
"BLD",9285,"REQB",1,0)
PSO*7.0*437^2
"BLD",9285,"REQB","B","PSO*7.0*437",1)

"DATA",58.4,1,0)
STANDARD ASAP DEFINITION
"DATA",58.4,1,"VER",0)
^58.4001^7^6
"DATA",58.4,1,"VER",1,0)
ALL
"DATA",58.4,1,"VER",1,"SEG",0)
^58.40011I^10^9
"DATA",58.4,1,"VER",1,"SEG",1,0)
TH^Transaction Header^^R^1^1
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",0)
^58.400111I^9^9
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",1,0)
TH01^Version / Release Number^AN^4^1^R
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",1,"DES",0)
^58.4001111^1^1^3151218^^^^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",1,"DES",1,0)
Code uniquely identifying the transaction. Format = x.x
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",1,"VAL",0)
^58.410111^1^1^3151218^^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",1,"VAL",1,0)
$$TH01^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",2,0)
TH02^Transaction Control Number^AN^40^2^R
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",2,"DES",0)
^^2^2^3121011^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",2,"DES",1,0)
Sender assigned code uniquely identifying a transaction. The same value 
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",2,"DES",2,0)
must also be reported in TT01.
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",2,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",2,"VAL",1,0)
$$TH02^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",3,0)
TH03^Transaction Type^N^2^3^O
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",3,"DES",0)
^58.4001111^5^5^3121011^^^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",3,"DES",1,0)
Identifies the purpose of initiating the transaction.
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",3,"DES",2,0)
  01 Send/Request Transaction
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",3,"DES",3,0)
  02 Acknowledgment (Used in Response only.)
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",3,"DES",4,0)
  03 Error Receiving (Used in Response only.)
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",3,"DES",5,0)
  04 Void (Used to void an Rx in real-time transmission or a batch)
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",3,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",3,"VAL",1,0)
$$TH03^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",4,0)
TH04^Response ID^AN^10^4^O
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",4,"DES",0)
^58.4001111^2^2^3151218^^^^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",4,"DES",1,0)
Contains the Transaction Control Number of a transaction that initiated 
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",4,"DES",2,0)
the transaction. Required in response transaction only.
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",4,"VAL",0)
^58.410111^1^1^3151218^^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",4,"VAL",1,0)
$$TH04^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",5,0)
TH05^Creation Date^DT^8^5^R
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",5,"DES",0)
^^1^1^3120813^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",5,"DES",1,0)
Date the transaction was created. Format: CCYYMMDD.
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",5,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",5,"VAL",1,0)
$$TH05^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",6,0)
TH06^Creation Time^TM^6^6^R
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",6,"DES",0)
^^1^1^3120813^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",6,"DES",1,0)
Time the transaction was created. Format: HHMMSS or HHMM.
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",6,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",6,"VAL",1,0)
$$TH06^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",7,0)
TH07^File Type^AN^1^7^R
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",7,"DES",0)
^^3^3^3120813^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",7,"DES",1,0)
Code specifying the type of transaction.
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",7,"DES",2,0)
  P Production
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",7,"DES",3,0)
  T Test
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",7,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",7,"VAL",1,0)
$$TH07^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",8,0)
TH08^Routing Number^N^6^8^O
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",8,"DES",0)
^58.4001111^3^3^3151218^^^^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",8,"DES",1,0)
This field is reserved for real-time transmissions that go through a 
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",8,"DES",2,0)
network switch to indicate, if necessary, the specific state PMP that the 
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",8,"DES",3,0)
transactions should be routed to.
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",8,"VAL",0)
^58.410111^1^1^3151218^^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",8,"VAL",1,0)
$$TH08^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",9,0)
TH09^Data Segment Terminator Character^AN^1^9^R
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",9,"DES",0)
^58.4001111^2^2^3120823^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",9,"DES",1,0)
This terminates the TH segment and sets the actual value of the data 
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",9,"DES",2,0)
segment terminator for the entire transaction.
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",9,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",1,"DAT",9,"VAL",1,0)
$$TH09^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",2,0)
IS^Information Source^TH^R^1^1
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",0)
^58.400111I^3^3
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",1,0)
IS01^Unique Information Source ID^AN^10^1^R
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",1,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",1,"DES",1,0)
Reference number or identification number as defined by the business 
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",1,"DES",2,0)
partners. (Example: Phone number).
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",1,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",1,"VAL",1,0)
$$IS01^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",2,0)
IS02^Information Source Entity Name^AN^60^2^R
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",2,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",2,"DES",1,0)
Entity name of the Information Source.
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",2,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",2,"VAL",1,0)
$$IS02^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",3,0)
IS03^Message^AN^60^3^O
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",3,"DES",0)
^58.4001111^2^2^3151019^^^^
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",3,"DES",1,0)
Free-form text message. Used for more detailed information if required by 
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",3,"DES",2,0)
the PMP.
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",3,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",2,"DAT",3,"VAL",1,0)
$$IS03^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",3,0)
PHA^Pharmacy Header^IS^R^1^2
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",0)
^58.400111I^12^12
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",1,0)
PHA01^National Provider Identifier (NPI)^AN^10^1^O
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",1,"DES",0)
^58.4001111^1^1^3120814^^^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",1,"DES",1,0)
Identifier assigned to the pharmacy by CMS. Used if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",1,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",1,"VAL",1,0)
$$PHA01^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",2,0)
PHA02^NCPDP/NABP Provider ID^AN^10^2^O
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",2,"DES",0)
^58.4001111^2^2^3151218^^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",2,"DES",1,0)
Identifier assigned to pharmacy by the National Council for Prescription 
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",2,"DES",2,0)
Drug Programs. Used if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",2,"VAL",0)
^58.410111^1^1^3151218^^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",2,"VAL",1,0)
$$PHA02^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",3,0)
PHA03^DEA Number^AN^10^3^O
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",3,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",3,"DES",1,0)
Identifier assigned to the pharmacy by the Drug Enforcement 
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",3,"DES",2,0)
Administration. Used if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",3,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",3,"VAL",1,0)
$$PHA03^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",4,0)
PHA04^Pharmacy Name^AN^60^4^O
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",4,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",4,"DES",1,0)
Free-form name of the pharmacy.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",4,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",4,"VAL",1,0)
$$PHA04^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",5,0)
PHA05^Address Information - 1^AN^30^5^O
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",5,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",5,"DES",1,0)
Free-form text for address information.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",5,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",5,"VAL",1,0)
$$PHA05^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",6,0)
PHA06^Address Information - 2^AN^30^6^O
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",6,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",6,"DES",1,0)
Free-form text for additional address information.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",6,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",6,"VAL",1,0)
$$PHA06^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",7,0)
PHA07^City Address^AN^25^7^O
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",7,"DES",0)
^58.4001111^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",7,"DES",1,0)
Free-form text for the city name.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",7,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",7,"VAL",1,0)
$$PHA07^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",8,0)
PHA08^State Address^AN^2^8^O
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",8,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",8,"DES",1,0)
U.S. Postal Service state code.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",8,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",8,"VAL",1,0)
$$PHA08^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",9,0)
PHA09^ZIP Code Address^AN^9^9^O
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",9,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",9,"DES",1,0)
U.S. Postal Service ZIP Code. Use if available.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",9,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",9,"VAL",1,0)
$$PHA09^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",10,0)
PHA10^Phone Number^AN^10^10^O
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",10,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",10,"DES",1,0)
Complete phone number including area code.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",10,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",10,"VAL",1,0)
$$PHA10^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",11,0)
PHA11^Contact Name^AN^30^11^O
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",11,"DES",0)
^58.4001111^1^1^3151019^^^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",11,"DES",1,0)
Free-form contact name.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",11,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",11,"VAL",1,0)
$$PHA11^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",12,0)
PHA12^Chain Site ID^AN^10^12^O
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",12,"DES",0)
^58.4001111^3^3^3151019^^^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",12,"DES",1,0)
Store number assigned by the chain to the pharmacy location. Used when 
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",12,"DES",2,0)
PMP needs to identify the specific pharmacy from which information is 
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",12,"DES",3,0)
required.
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",12,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",3,"DAT",12,"VAL",1,0)
$$PHA12^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,0)
PAT^Patient Information^PHA^R^1^3
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",0)
^58.400111I^25^23
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",1,0)
PAT01^ID Qualifier of Patient Identifier^AN^2^1^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",1,"DES",0)
^58.4001111^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",1,"DES",1,0)
Code identifying the jurisdiction that issues the ID in PAT03. Used if 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",1,"DES",2,0)
the PMP requires such identification and PAT02 is equal to 02 or 06.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",1,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",1,"VAL",1,0)
$$PAT01^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,0)
PAT02^ID Qualifier^N^2^2^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",0)
^58.4001111^11^11^3120829^^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",1,0)
Code to identify the type of ID in PAT03. If PAT02 is used, PAT03 is 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",2,0)
required.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",3,0)
  01 Military ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",4,0)
  02 State Issued ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",5,0)
  03 Unique System ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",6,0)
  04 Permanent Resident Card (Green Card)
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",7,0)
  05 Passport ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",8,0)
  06 Driver's License ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",9,0)
  07 Social Security Number
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",10,0)
  08 Tribal ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"DES",11,0)
  99 Other (Trading partner agreed upon ID, such as cardholder ID.)
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",2,"VAL",1,0)
$$PAT02^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",3,0)
PAT03^ID of Patient^AN^20^3^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",3,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",3,"DES",1,0)
Identification number for the patient as indicated in PAT02. An example 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",3,"DES",2,0)
would be the driver's license number.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",3,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",3,"VAL",1,0)
$$PAT03^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",4,0)
PAT04^ID Qualifier of Additional Patient Identifier^AN^2^4^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",4,"DES",0)
^58.4001111^2^2^3151217^^^^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",4,"DES",1,0)
Code identifying the jurisdiction that issues the ID in PAT06. Used if 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",4,"DES",2,0)
the PMP requires such identification and PAT05 is equal to 02 or 06. 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",4,"VAL",0)
^58.410111^1^1^3151217^^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",4,"VAL",1,0)
$$PAT04^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,0)
PAT05^Additional Patient ID Qualifier^AN^2^5^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",0)
^58.4001111^11^11^3151020^^^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",1,0)
Code to identify the type of ID in PAT06 if the PMP requires a second 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",2,0)
identifier. If PAT05 is used, PAT06 is required.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",3,0)
  01 Military ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",4,0)
  02 State Issued ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",5,0)
  03 Unique System ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",6,0)
  04 Permanent Resident Card (Green Card)
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",7,0)
  05 Passport ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",8,0)
  06 Driver's License ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",9,0)
  07 Social Security Number
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",10,0)
  08 Tribal ID
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"DES",11,0)
  99 Other (Trading partner agreed upon ID, such as cardholder ID.)
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",5,"VAL",1,0)
$$PAT05^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",6,0)
PAT06^Additional ID^AN^20^6^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",6,"DES",0)
^58.4001111^4^4^3151020^^^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",6,"DES",1,0)
Identification that might be required by the PMP for 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",6,"DES",2,0)
Prescription-Monitoring Programs to further identify the individual. An 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",6,"DES",3,0)
example might be in that PAT03 driver's license is required and in PAT06 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",6,"DES",4,0)
Social Security number is also required.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",6,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",6,"VAL",1,0)
$$PAT06^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",7,0)
PAT07^Last Name^AN^50^7^R
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",7,"DES",0)
^58.4001111^1^1^3120814^^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",7,"DES",1,0)
Patient's last name.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",7,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",7,"VAL",1,0)
$$PAT07^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",8,0)
PAT08^First Name^AN^50^8^R
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",8,"DES",0)
^58.4001111^1^1^3120814^^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",8,"DES",1,0)
Patient's first name.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",8,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",8,"VAL",1,0)
$$PAT08^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",9,0)
PAT09^Middle Name^AN^30^9^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",9,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",9,"DES",1,0)
Patient's middle name or initial if available. Used if available in 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",9,"DES",2,0)
pharmacy system and required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",9,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",9,"VAL",1,0)
$$PAT09^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",10,0)
PAT10^Name Prefix^AN^10^10^N
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",10,"DES",0)
^58.4001111^2^2^3130513^^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",10,"DES",1,0)
Patient's name prefix such as Mr. or Dr. Used if available in pharmacy 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",10,"DES",2,0)
system and required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",10,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",10,"VAL",1,0)
$$PAT10^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",11,0)
PAT11^Name Suffix^AN^10^11^N
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",11,"DES",0)
^58.4001111^2^2^3130513^^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",11,"DES",1,0)
Patient's name suffix such as Jr. or the III. Used if available in 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",11,"DES",2,0)
pharmacy system and if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",11,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",11,"VAL",1,0)
$$PAT11^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",12,0)
PAT12^Address Information - 1^AN^30^12^R
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",12,"DES",0)
^58.4001111^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",12,"DES",1,0)
Free-form text for street address information.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",12,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",12,"VAL",1,0)
$$PAT12^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",13,0)
PAT13^Address Information - 2^AN^30^13^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",13,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",13,"DES",1,0)
Free-form text for additional address information, if required by the PMP 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",13,"DES",2,0)
and is available in pharmacy system.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",13,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",13,"VAL",1,0)
$$PAT13^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",14,0)
PAT14^City Address^AN^20^14^R
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",14,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",14,"DES",1,0)
Free-form text for city name.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",14,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",14,"VAL",1,0)
$$PAT14^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",15,0)
PAT15^State Address^AN^10^15^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",15,"DES",0)
^^3^3^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",15,"DES",1,0)
U.S. Postal Service state code if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",15,"DES",2,0)
Note: Field has been sized to handle international patients not residing 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",15,"DES",3,0)
in the U.S.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",15,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",15,"VAL",1,0)
$$PAT15^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",16,0)
PAT16^ZIP Code Address^AN^9^16^R
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",16,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",16,"DES",1,0)
U.S. Postal Service ZIP code. Populate with zeros if patient address is 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",16,"DES",2,0)
outside the U.S.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",16,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",16,"VAL",1,0)
$$PAT16^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",17,0)
PAT17^Phone Number^AN^10^17^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",17,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",17,"DES",1,0)
Complete phone number including area code when a state PMP requires and 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",17,"DES",2,0)
is available in the pharmacy system.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",17,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",17,"VAL",1,0)
$$PAT17^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",18,0)
PAT18^Date of Birth^DT^8^18^R
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",18,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",18,"DES",1,0)
Date patient was born. Format: CCYYMMDD.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",18,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",18,"VAL",1,0)
$$PAT18^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",19,0)
PAT19^Gender Code^AN^1^19^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",19,"DES",0)
^^4^4^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",19,"DES",1,0)
Code indicating the sex of the patient if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",19,"DES",2,0)
  F Female 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",19,"DES",3,0)
  M Male
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",19,"DES",4,0)
  U Unknown
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",19,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",19,"VAL",1,0)
$$PAT19^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",20,0)
PAT20^Species Code^N^2^20^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",20,"DES",0)
^^4^4^3120814^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",20,"DES",1,0)
Used if required by the PMP to differentiate a prescription for an 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",20,"DES",2,0)
individual from one prescribed for an animal.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",20,"DES",3,0)
  01 Human
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",20,"DES",4,0)
  02 Veterinary Patient
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",20,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",20,"VAL",1,0)
$$PAT20^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",23,0)
PAT10^Name Prefix^AN^10^10^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",23,"DES",0)
^58.4001111^2^2^3131001^^^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",23,"DES",1,0)
Patient's name prefix such as Mr. or Dr. Used if available in pharmacy 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",23,"DES",2,0)
system and required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",23,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",23,"VAL",1,0)
$$PAT10^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",24,0)
PAT11^Name Suffix^AN^10^11^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",24,"DES",0)
^58.4001111^2^2^3131001^^^^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",24,"DES",1,0)
Patient's name suffix such as Jr. or the III. Used if available in 
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",24,"DES",2,0)
pharmacy system and if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",24,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",24,"VAL",1,0)
$$PAT11^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",25,0)
PAT21^Patient Location Code^N^2^21^O
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",25,"DES",0)
^^15^15^3151027^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",25,"DES",1,0)
Code indicating where patient is located when receiving pharmacy services
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",25,"DES",2,0)
if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",25,"DES",3,0)
  01 Home
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",25,"DES",4,0)
  02 Intermediary Care
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",25,"DES",5,0)
  03 Nursing Home
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",25,"DES",6,0)
  04 Long-Term/Extended Care
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",25,"DES",7,0)
  05 Rest Home
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",25,"DES",8,0)
  06 Boarding Home
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",25,"DES",9,0)
  07 Skilled-Care Facility
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",25,"DES",10,0)
  08 Sub-Acute Care Facility
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",25,"DES",11,0)
  09 Acute-Care Facility
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",25,"DES",12,0)
  10 Outpatient
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",25,"DES",13,0)
  11 Hospice
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",25,"DES",14,0)
  98 Unknown
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",25,"DES",15,0)
  99 Other
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",25,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",4,"DAT",25,"VAL",1,0)
$$PAT21^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",5,0)
DSP^Dispensing Record^PAT^R^2^4
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",0)
^58.400111I^16^16
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,0)
DSP01^Reporting Status^N^2^1^R
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"DES",0)
^^10^10^3121011^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"DES",1,0)
Required when reporting a change or cancellation of a previously 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"DES",2,0)
transmitted prescription record. 00 indicates a new prescription 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"DES",3,0)
dispensing transaction. 01 would be used when information on the
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"DES",4,0)
original prescription, including patient information, has been changed. 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"DES",5,0)
02 would be used when the prescription was not picked up and returned to 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"DES",6,0)
stock.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"DES",7,0)
  00 New Record (Not available for ASAP 4.0)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"DES",8,0)
  01 Change/Revise
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"DES",9,0)
  02 Cancel/Void (Rx not picked up and returned to stock)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"DES",10,0)
  03 Purged (Rx reported in error) (Available in 4.0 only)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",1,"VAL",1,0)
$$DSP01^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",2,0)
DSP02^Prescription Number^AN^25^2^R
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",2,"DES",0)
^58.4001111^1^1^3120814^^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",2,"DES",1,0)
Serial number assigned to the prescription by the pharmacy.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",2,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",2,"VAL",1,0)
$$DSP02^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",3,0)
DSP03^Date Written^DT^8^3^R
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",3,"DES",0)
^58.4001111^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",3,"DES",1,0)
Date the prescription was written (authorized). Format: CCYYMMDD.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",3,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",3,"VAL",1,0)
$$DSP03^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",4,0)
DSP04^Refills Authorized^N^2^4^R
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",4,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",4,"DES",1,0)
The number of refills authorized by the prescriber.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",4,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",4,"VAL",1,0)
$$DSP04^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",5,0)
DSP05^Date Filled^DT^8^5^R
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",5,"DES",0)
^58.4001111^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",5,"DES",1,0)
Date prescription was filled. Format: CCYYMMDD.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",5,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",5,"VAL",1,0)
$$DSP05^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",6,0)
DSP06^Refill Number^N^2^6^R
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",6,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",6,"DES",1,0)
Number of the fill of the prescription. 0 indicates New Rx, 01-99 is the 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",6,"DES",2,0)
refill number.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",6,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",6,"VAL",1,0)
$$DSP06^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",7,0)
DSP07^Product ID Qualifier^N^2^7^R
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",7,"DES",0)
^^7^7^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",7,"DES",1,0)
Used to identify the type of product ID contained in DSP08.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",7,"DES",2,0)
  01 NDC
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",7,"DES",3,0)
  02 UPC
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",7,"DES",4,0)
  03 HRI
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",7,"DES",5,0)
  04 UPN
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",7,"DES",6,0)
  05 DIN
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",7,"DES",7,0)
  06 CPD (used for a compound)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",7,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",7,"VAL",1,0)
$$DSP07^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",8,0)
DSP08^Product ID^AN^15^8^R
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",8,"DES",0)
^^4^4^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",8,"DES",1,0)
Full product identification as indicated in DSP07, including leading 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",8,"DES",2,0)
zeros without punctuation. If the product is a compound, use 99999 as the 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",8,"DES",3,0)
first five characters of the product code. The remaining characters are 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",8,"DES",4,0)
assigned by the pharmacy. The CDI then becomes a required segment.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",8,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",8,"VAL",1,0)
$$DSP08^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",9,0)
DSP09^Quantity Dispensed^D^11^9^R
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",9,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",9,"DES",1,0)
Number of metric units dispensed in metric decimal format.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",9,"DES",2,0)
Example: 2.5. Note: For compounds show the first quantity in CDI04.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",9,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",9,"VAL",1,0)
$$DSP09^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",10,0)
DSP10^Days Supply^N^3^10^R
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",10,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",10,"DES",1,0)
Estimated number of days the medication will last.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",10,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",10,"VAL",1,0)
$$DSP10^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",11,0)
DSP11^Drug Dosage Units Code^N^2^11^O
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",11,"DES",0)
^58.4001111^6^6^3120814^^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",11,"DES",1,0)
Identifies the unit of measure for the quantity dispensed in DSP09.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",11,"DES",2,0)
  01 Each (used to report as package)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",11,"DES",3,0)
  02 Milliliters (ml) (for liters adjust to the decimal
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",11,"DES",4,0)
     milliliter equivalent)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",11,"DES",5,0)
  03 Grams (gm) (for milligrams adjust to the decimal gram
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",11,"DES",6,0)
     equivalent)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",11,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",11,"VAL",1,0)
$$DSP11^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",12,0)
DSP12^Transmission Form of Rx Origin Code^N^2^12^O
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",12,"DES",0)
^^8^8^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",12,"DES",1,0)
Code indicating how the pharmacy received the prescription, if required 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",12,"DES",2,0)
by the PMP.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",12,"DES",3,0)
  01 Written Prescription
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",12,"DES",4,0)
  02 Telephone Prescription
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",12,"DES",5,0)
  03 Telephone Emergency Prescription
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",12,"DES",6,0)
  04 Fax Prescription
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",12,"DES",7,0)
  05 Electronic Prescription
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",12,"DES",8,0)
  99 Other
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",12,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",12,"VAL",1,0)
$$DSP12^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,0)
DSP13^Partial Fill Indicator^N^2^13^O
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",0)
^^13^13^3121023^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",1,0)
To indicate whether it is a partial fill, if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",2,0)
 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",3,0)
For ASAP 4.0 and 4.1:
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",4,0)
 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",5,0)
  01 Yes (a partial fill)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",6,0)
  02 No (not a partial fill)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",7,0)
 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",8,0)
For ASAP 4.2:
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",9,0)
 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",10,0)
  00 Not a Partial Fill
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",11,0)
  01 First Partial Fill
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",12,0)
  02 Second Partial Fill
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"DES",13,0)
  .. ...
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",13,"VAL",1,0)
$$DSP13^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",14,0)
DSP14^Pharmacist National Provider Identifier (NPI)^AN^10^14^O
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",14,"DES",0)
^^3^3^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",14,"DES",1,0)
Identifier assigned to the pharmacist by CMS if the pharmacist applies 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",14,"DES",2,0)
for a number. This number can be used to identify the pharmacist 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",14,"DES",3,0)
dispensing the medication.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",14,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",14,"VAL",1,0)
$$DSP14^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",15,0)
DSP15^Pharmacist State License Number^AN^10^15^O
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",15,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",15,"DES",1,0)
This data element can be used to identify the pharmacist dispensing the 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",15,"DES",2,0)
medication. Assigned to the pharmacist by the State Licensing Board.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",15,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",15,"VAL",1,0)
$$DSP15^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,0)
DSP16^Classification Code for Payment Type^N^2^16^O
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"DES",0)
^^10^10^3120814^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"DES",1,0)
Code identifying the type of payment, i.e. how it was paid for, if 
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"DES",2,0)
required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"DES",3,0)
  01 Private Pay (Cash, Charge, Credit Card)
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"DES",4,0)
  02 Medicaid
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"DES",5,0)
  03 Medicare
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"DES",6,0)
  04 Commercial Insurance
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"DES",7,0)
  05 Military Installations and VA
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"DES",8,0)
  06 Workers' Compensation
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"DES",9,0)
  07 Indian Nations
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"DES",10,0)
  99 Other
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",5,"DAT",16,"VAL",1,0)
$$DSP16^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",6,0)
PRE^Prescriber Information^DSP^R^1^4
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",0)
^58.400111I^7^7
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",1,0)
PRE01^National Provider Identifier (NPI)^AN^10^1^O
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",1,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",1,"DES",1,0)
Identifier assigned to the prescriber by CMS.
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",1,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",1,"VAL",1,0)
$$PRE01^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",2,0)
PRE02^DEA Number^AN^9^2^R
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",2,"DES",0)
^58.4001111^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",2,"DES",1,0)
Identifying number assigned to a prescriber or an institution by the Drug 
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",2,"DES",2,0)
Enforcement Administration (DEA).
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",2,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",2,"VAL",1,0)
$$PRE02^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",3,0)
PRE03^DEA Number Suffix^AN^7^3^O
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",3,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",3,"DES",1,0)
Identifying number assigned to a prescriber by an institution when the 
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",3,"DES",2,0)
institution's number is used as the DEA number.
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",3,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",3,"VAL",1,0)
$$PRE03^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",4,0)
PRE04^Prescriber State License Number^AN^10^4^O
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",4,"DES",0)
^58.4001111^2^2^3151217^^
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",4,"DES",1,0)
Identification assigned to the Prescriber by the State Licensing Board. 
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",4,"DES",2,0)
Used if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",4,"VAL",0)
^58.410111^1^1^3151217^^
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",4,"VAL",1,0)
$$PRE04^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",5,0)
PRE05^Last Name^AN^50^5^O
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",5,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",5,"DES",1,0)
Prescriber's last name. Used if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",5,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",5,"VAL",1,0)
$$PRE05^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",6,0)
PRE06^First Name^AN^50^6^O
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",6,"DES",0)
^^1^1^3120814^
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",6,"DES",1,0)
Prescriber's first name. Used if required by the PMP.
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",6,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",6,"VAL",1,0)
$$PRE06^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",7,0)
PRE07^Middle Name^AN^30^7^O
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",7,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",7,"DES",1,0)
Prescriber's middle name or initial. Used if required and is available in 
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",7,"DES",2,0)
the pharmacy system.
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",7,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",6,"DAT",7,"VAL",1,0)
$$PRE07^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",7,0)
CDI^Compound Drug Ingredient Detail^DSP^N^2^4
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",0)
^58.400111I^5^5
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",1,0)
CDI01^Compound Drug Ingredient Sequence Number^N^2^1^R
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",1,"DES",0)
^58.4001111^1^1^3151027^^
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",1,"DES",1,0)
Increment by 1 for each compounding ingredient being reported.
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",1,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",1,"VAL",1,0)
$$CDI01^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",2,0)
CDI02^Product ID Qualifier^N^2^2^R
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",2,"DES",0)
^58.4001111^7^7^3151027^^
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",2,"DES",1,0)
Code to identify the type of product ID contained in CDI03.
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",2,"DES",2,0)
  01 NDC
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",2,"DES",3,0)
  02 UPC
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",2,"DES",4,0)
  03 HRI
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",2,"DES",5,0)
  04 UPN
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",2,"DES",6,0)
  05 DIN
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",2,"DES",7,0)
  06 CPD (This code is not used in this segment.)
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",2,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",2,"VAL",1,0)
$$CDI02^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",3,0)
CDI03^Product ID^AN^15^3^R
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",3,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",3,"DES",1,0)
Full product identification as indicated in CDI02, including leading 
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",3,"DES",2,0)
zeros without punctuation.
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",3,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",3,"VAL",1,0)
$$CDI03^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",4,0)
CDI04^Component Ingredient Quantity^D^11^4^R
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",4,"DES",0)
^^2^2^3120814^
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",4,"DES",1,0)
Metric decimal quantity of the ingredient identified in CDI03.
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",4,"DES",2,0)
Example: 2.5.
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",4,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",4,"VAL",1,0)
$$CDI04^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",5,0)
CDI05^Compound Drug Dosage Units Code^N^2^5^O
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",5,"DES",0)
^58.4001111^7^7^3151027^^^
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",5,"DES",1,0)
Identifies the unit of measure for the quantity dispensed in CDI04, if 
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",5,"DES",2,0)
required by the prescription-monitoring program.
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",5,"DES",3,0)
  01 Each (used to report as package)
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",5,"DES",4,0)
  02 Milliliters (ml) (for liters adjust to the
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",5,"DES",5,0)
     decimal milliliter equivalent)
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",5,"DES",6,0)
  03 Grams (gm) (for milligrams adjust to the
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",5,"DES",7,0)
     decimal gram equivalent)
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",5,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",7,"DAT",5,"VAL",1,0)
$$CDI05^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",9,0)
TP^Pharmacy Trailer^IS^R^2^5
"DATA",58.4,1,"VER",1,"SEG",9,"DAT",0)
^58.400111I^1^1
"DATA",58.4,1,"VER",1,"SEG",9,"DAT",1,0)
TP01^Detail Segment Count^N^10^1^R
"DATA",58.4,1,"VER",1,"SEG",9,"DAT",1,"DES",0)
^58.4001111^2^2^3120815^^
"DATA",58.4,1,"VER",1,"SEG",9,"DAT",1,"DES",1,0)
Number of detail segments included for the pharmacy including the 
"DATA",58.4,1,"VER",1,"SEG",9,"DAT",1,"DES",2,0)
pharmacy header (PHA) and the pharmacy trailer (TP) segments.
"DATA",58.4,1,"VER",1,"SEG",9,"DAT",1,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",9,"DAT",1,"VAL",1,0)
$$TP01^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",10,0)
TT^Transaction Trailer^^R^2^6
"DATA",58.4,1,"VER",1,"SEG",10,"DAT",0)
^58.400111I^2^2
"DATA",58.4,1,"VER",1,"SEG",10,"DAT",1,0)
TT01^Transaction Control Number^AN^10^1^R
"DATA",58.4,1,"VER",1,"SEG",10,"DAT",1,"DES",0)
^58.4001111^2^2^3151218^^
"DATA",58.4,1,"VER",1,"SEG",10,"DAT",1,"DES",1,0)
Identifying control number that must be unique. Assigned by the 
"DATA",58.4,1,"VER",1,"SEG",10,"DAT",1,"DES",2,0)
originator of the transaction. Must match the number in TH02.
"DATA",58.4,1,"VER",1,"SEG",10,"DAT",1,"VAL",0)
^58.410111^1^1^3151218^^
"DATA",58.4,1,"VER",1,"SEG",10,"DAT",1,"VAL",1,0)
$$TT01^PSOASAP()
"DATA",58.4,1,"VER",1,"SEG",10,"DAT",2,0)
TT02^Segment Count^N^10^2^R
"DATA",58.4,1,"VER",1,"SEG",10,"DAT",2,"DES",0)
^58.4001111^2^2^3130514^^
"DATA",58.4,1,"VER",1,"SEG",10,"DAT",2,"DES",1,0)
Total number of segments included in the transaction including the header 
"DATA",58.4,1,"VER",1,"SEG",10,"DAT",2,"DES",2,0)
and trailer segments.
"DATA",58.4,1,"VER",1,"SEG",10,"DAT",2,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",1,"SEG",10,"DAT",2,"VAL",1,0)
$$TT02^PSOASAP()
"DATA",58.4,1,"VER",2,0)
4.1^*^~^$C(13,10)
"DATA",58.4,1,"VER",2,"SEG",0)
^58.40011I^4^4
"DATA",58.4,1,"VER",2,"SEG",1,0)
DSP^Dispensing Record^PAT^R^1^4
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",0)
^58.400111I^3^3
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",1,0)
DSP17^Date Sold^DT^8^17^N
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",1,"DES",0)
^58.4001111^5^5^3160224^^
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",1,"DES",1,0)
Usage of this field depends on the pharmacy having a point-of-sale
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",1,"DES",2,0)
system that is integrated with the pharmacy management system to
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",1,"DES",3,0)
allow a bidirectional flow of information, and the PMP wants to
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",1,"DES",4,0)
capture the date received by the patient or the patient's agent.
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",1,"DES",5,0)
This date may be different from DSP05.
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",1,"VAL",0)
^58.410111^1^1^3160224^^
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",1,"VAL",1,0)
$$DSP17^PSOASAP()
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",2,0)
DSP18^RxNorm Code^AN^15^18^O
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",2,"DES",0)
^^2^2^3151030^
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",2,"DES",1,0)
Used for electronic prescriptions to capture the prescribed drug
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",2,"DES",2,0)
product identification.
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",2,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",2,"VAL",1,0)
$$DSP18^PSOASAP()
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",3,0)
DSP19^Electronic Prescription Reference Number^N^30^19^O
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",3,"DES",0)
^^3^3^3151030^
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",3,"DES",1,0)
Used to provide an audit trail for electronic prescriptions, if required
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",3,"DES",2,0)
by the PMP. The electronic prescription reference number is transmitted
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",3,"DES",3,0)
to the pharmacy in the NCPDP SCRIPT standard for electronic prescriptions.
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",3,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",2,"SEG",1,"DAT",3,"VAL",1,0)
$$DSP19^PSOASAP()
"DATA",58.4,1,"VER",2,"SEG",2,0)
PAT^Patient Information^PHA^R^1^3
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",0)
^58.400111I^2^2
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",1,0)
PAT22^Country of Non-U.S. Resident^AN^20^22^O
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",1,"DES",0)
^^4^4^3151214^
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",1,"DES",1,0)
Used when the patient's address is a foreign country and PAT12 through PAT16
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",1,"DES",2,0)
are left blank. This is a freeform text field. ASAP does not provide a list
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",1,"DES",3,0)
of countries for this field. PMPs may permit some of the other address fields
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",1,"DES",4,0)
to not be used if this field is populated.
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",1,"VAL",0)
^^1^1^3151214^
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",1,"VAL",1,0)
$$PAT22^PSOASAP()
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",2,0)
PAT23^Name of Animal^AN^30^23^O
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",2,"DES",0)
^^3^3^3151214^
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",2,"DES",1,0)
Used if required by the PMP for prescriptions written by a veterinarian and
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",2,"DES",2,0)
the pharmacist has access to this information at the time of dispensing the
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",2,"DES",3,0)
prescription.
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",2,"VAL",0)
^^1^1^3151214^
"DATA",58.4,1,"VER",2,"SEG",2,"DAT",2,"VAL",1,0)
$$PAT23^PSOASAP()
"DATA",58.4,1,"VER",2,"SEG",3,0)
PHA^Pharmacy Header^IS^R^1^2
"DATA",58.4,1,"VER",2,"SEG",3,"DAT",0)
^58.400111I^2^2
"DATA",58.4,1,"VER",2,"SEG",3,"DAT",1,0)
PHA02^NCPDP/NABP Provider ID^AN^7^2^O
"DATA",58.4,1,"VER",2,"SEG",3,"DAT",1,"DES",0)
^^2^2^3151218^
"DATA",58.4,1,"VER",2,"SEG",3,"DAT",1,"DES",1,0)
Identifier assigned to pharmacy by the National Council for Prescription
"DATA",58.4,1,"VER",2,"SEG",3,"DAT",1,"DES",2,0)
Drug Programs. Used if required by the PMP.
"DATA",58.4,1,"VER",2,"SEG",3,"DAT",1,"VAL",0)
^^1^1^3151218^
"DATA",58.4,1,"VER",2,"SEG",3,"DAT",1,"VAL",1,0)
$$PHA02^PSOASAP()
"DATA",58.4,1,"VER",2,"SEG",3,"DAT",2,0)
PHA03^DEA Number^AN^9^3^O
"DATA",58.4,1,"VER",2,"SEG",3,"DAT",2,"DES",0)
^^2^2^3151218^
"DATA",58.4,1,"VER",2,"SEG",3,"DAT",2,"DES",1,0)
Identifier assigned to the pharmacy by the Drug Enforcement Agency 
"DATA",58.4,1,"VER",2,"SEG",3,"DAT",2,"DES",2,0)
Administration (DEA). Used if required by the PMP.  
"DATA",58.4,1,"VER",2,"SEG",3,"DAT",2,"VAL",0)
^^1^1^3151218^
"DATA",58.4,1,"VER",2,"SEG",3,"DAT",2,"VAL",1,0)
$$PHA03^PSOASAP()
"DATA",58.4,1,"VER",2,"SEG",4,0)
AIR^Additional Information Reporting^DSP^N^3^4
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",0)
^58.400111I^10^10
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",1,0)
AIR01^State Issuing Rx Serial Number^AN^2^1^O
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",1,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",1,"DES",1,0)
USPS state code of state that issued serialized prescription blank. This 
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",1,"DES",2,0)
is required if AIR02 is used.
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",1,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",1,"VAL",1,0)
$$AIR01^PSOASAP()
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",2,0)
AIR02^State Issued Rx Serial Number^AN^20^2^O
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",2,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",2,"DES",1,0)
Number assigned to state issued serialized prescription blank. Required 
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",2,"DES",2,0)
if state issues serialized prescription pads for prescribers to use.
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",2,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",2,"VAL",1,0)
$$AIR02^PSOASAP()
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",3,0)
AIR03^ID Issuing Jurisdiction^AN^2^3^O
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",3,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",3,"DES",1,0)
Code identifying the jurisdiction that issues the ID in AIR04. Used if 
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",3,"DES",2,0)
required by the PMP and AIR04 is equal to 02 or 06.
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",3,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",3,"VAL",1,0)
$$AIR03^PSOASAP()
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",4,0)
AIR04^ID Qualifier of Person Dropping Off or Picking Up Rx^N^2^4^O
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",4,"DES",0)
^^11^11^3160321
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",4,"DES",1,0)
Used to identify the type of ID contained in AIR05 for person dropping 
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",4,"DES",2,0)
off or picking up the prescription, if required by the PMP.
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",4,"DES",3,0)
  01 Military ID
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",4,"DES",4,0)
  02 State Issued ID
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",4,"DES",5,0)
  03 Unique System ID
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",4,"DES",6,0)
  04 Permanent Resident Card (Green Card)
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",4,"DES",7,0)
  05 Passport ID
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",4,"DES",8,0)
  06 Driver's License ID
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",4,"DES",9,0)
  07 Social Security Number
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",4,"DES",10,0)
  08 Tribal ID
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",4,"DES",11,0)
  99 Other (Trading partner agreed upon ID)
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",4,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",4,"VAL",1,0)
$$AIR04^PSOASAP()
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",5,0)
AIR05^ID of Person Dropping Off or Picking Up Rx^AN^20^5^O
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",5,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",5,"DES",1,0)
ID number of patient or person picking up or dropping off the 
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",5,"DES",2,0)
prescription, if required by the PMP.
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",5,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",5,"VAL",1,0)
$$AIR05^PSOASAP()
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",6,0)
AIR06^Relationship of Person Dropping Off or Picking Up Rx^N^2^6^O
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",6,"DES",0)
^^6^6^3160321
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",6,"DES",1,0)
Code indicating the relationship of the person, if required by the PMP.
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",6,"DES",2,0)
  01 Patient
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",6,"DES",3,0)
  02 Parent/Legal Guardian
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",6,"DES",4,0)
  03 Spouse
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",6,"DES",5,0)
  04 Caregiver
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",6,"DES",6,0)
  99 Other
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",6,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",6,"VAL",1,0)
$$AIR06^PSOASAP()
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",7,0)
AIR07^Last Name of Person Dropping Off or Picking Up Rx^AN^50^7^O
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",7,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",7,"DES",1,0)
Last name of person dropping off or picking up the prescription, if
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",7,"DES",2,0)
required by the PMP.
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",7,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",7,"VAL",1,0)
$$AIR07^PSOASAP()
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",8,0)
AIR08^First Name of Person Dropping Off or Picking Up Rx^AN^50^8^O
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",8,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",8,"DES",1,0)
First name of person dropping off or picking up the prescription, if
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",8,"DES",2,0)
required by the PMP.
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",8,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",8,"VAL",1,0)
$$AIR08^PSOASAP()
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",9,0)
AIR09^Last Name or Initials of Pharmacist^AN^50^9^O
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",9,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",9,"DES",1,0)
Last name or initials of pharmacist dispensing the medication, if 
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",9,"DES",2,0)
required by the PMP.
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",9,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",9,"VAL",1,0)
$$AIR09^PSOASAP()
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",10,0)
AIR10^First Name of Pharmacist^AN^50^10^O
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",10,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",10,"DES",1,0)
First name of pharmacist dispensing the medication, if required by the 
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",10,"DES",2,0)
PMP.
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",10,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",2,"SEG",4,"DAT",10,"VAL",1,0)
$$AIR10^PSOASAP()
"DATA",58.4,1,"VER",3,0)
4.0^*^\^$C(13,10)
"DATA",58.4,1,"VER",3,"SEG",0)
^58.40011I^6^3
"DATA",58.4,1,"VER",3,"SEG",4,0)
TH^Transaction Set Header^^R^1^1
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",0)
^58.400111I^4^4
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",1,0)
TH08^Composite Element Separator^AN^1^8^R
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",1,"DES",0)
^^2^2^3151015^
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",1,"DES",1,0)
The delimiter used to separate component data elements within a composite data
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",1,"DES",2,0)
structure.
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",1,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",1,"VAL",1,0)
$$TH08^PSOASAP()
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",2,0)
TH02^Transaction Control Number^AN^10^2^R
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",2,"DES",0)
^^1^1^3151218^
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",2,"DES",1,0)
Sender assigned code uniquely identifying a transaction.
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",2,"VAL",0)
^^1^1^3151218^
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",2,"VAL",1,0)
$$TH02^PSOASAP()
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",3,0)
TH03^Transaction Type^N^2^3^O
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",3,"DES",0)
^^4^4^3151218^
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",3,"DES",1,0)
Identifies the purpose of initiating the transaction.                           
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",3,"DES",2,0)
  01 Send/Request Transaction                                                   
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",3,"DES",3,0)
  02 Acknowledgment (Used in Response only.)                                    
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",3,"DES",4,0)
  03 Error Receiving (Used in Response only.)                                   
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",3,"VAL",0)
^^1^1^3151218^
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",3,"VAL",1,0)
$$TH03^PSOASAP()
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",4,0)
TH09^Data Segment Terminator Character^AN^1^9^N
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",4,"DES",0)
^^5^5^3160218^
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",4,"DES",1,0)
This terminates the TH segment and sets the actual value of the data segment
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",4,"DES",2,0)
terminator for the entire transaction set.
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",4,"DES",3,0)
 
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",4,"DES",4,0)
Note: This Data Element was released as NOT USED because ASAP 4.0 does not
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",4,"DES",5,0)
      require the actual segment terminator value to be in the TH09 field.
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",4,"VAL",0)
^^1^1^3160218^
"DATA",58.4,1,"VER",3,"SEG",4,"DAT",4,"VAL",1,0)
$$TH09^PSOASAP()
"DATA",58.4,1,"VER",3,"SEG",5,0)
PAT^Patient Information^PHA^R^1^3
"DATA",58.4,1,"VER",3,"SEG",5,"DAT",0)
^58.400111I^2^2
"DATA",58.4,1,"VER",3,"SEG",5,"DAT",1,0)
PAT04^Additional ID Qualifier of Issuing Jurisdiction^AN^3^4^O
"DATA",58.4,1,"VER",3,"SEG",5,"DAT",1,"DES",0)
^58.4001111^2^2^3151217^^
"DATA",58.4,1,"VER",3,"SEG",5,"DAT",1,"DES",1,0)
Code identifying the jurisdiction that issues the ID in PAT06. Used if
"DATA",58.4,1,"VER",3,"SEG",5,"DAT",1,"DES",2,0)
the PMP requires such identification and PAT05 is equal to 02 or 06.
"DATA",58.4,1,"VER",3,"SEG",5,"DAT",1,"VAL",0)
^58.410111^1^1^3151217^^
"DATA",58.4,1,"VER",3,"SEG",5,"DAT",1,"VAL",1,0)
$$PAT04^PSOASAP()
"DATA",58.4,1,"VER",3,"SEG",5,"DAT",2,0)
PAT01^ID Qualifier of Issuing Jurisdiction^AN^3^1^O
"DATA",58.4,1,"VER",3,"SEG",5,"DAT",2,"DES",0)
^^2^2^3151218^
"DATA",58.4,1,"VER",3,"SEG",5,"DAT",2,"DES",1,0)
Code identifying the jurisdiction that issues the ID in PAT03. Used if
"DATA",58.4,1,"VER",3,"SEG",5,"DAT",2,"DES",2,0)
the PMP requires such identification and PAT02 is equal to 02 or 06.
"DATA",58.4,1,"VER",3,"SEG",5,"DAT",2,"VAL",0)
^^1^1^3151218^
"DATA",58.4,1,"VER",3,"SEG",5,"DAT",2,"VAL",1,0)
$$PAT01^PSOASAP()
"DATA",58.4,1,"VER",3,"SEG",6,0)
AIR^Additional Information Reporting^DSP^N^3^4
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",0)
^58.400111I^10^10
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",1,0)
AIR03^Issuing Jurisdiction^AN^3^3^O
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",1,"DES",0)
^^2^2^3151217^
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",1,"DES",1,0)
Code identifying the jurisdiction that issues the ID in AIR04.
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",1,"DES",2,0)
Used if required by the PMP and AIR04 is equal to 02 or 06.
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",1,"VAL",0)
^^1^1^3151217^
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",1,"VAL",1,0)
$$AIR03^PSOASAP()
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",2,0)
AIR01^State Issuing Rx Serial Number^AN^2^1^O
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",2,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",2,"DES",1,0)
USPS state code of state that issued serialized prescription blank. This 
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",2,"DES",2,0)
is required if AIR02 is used.
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",2,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",2,"VAL",1,0)
$$AIR01^PSOASAP()
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",3,0)
AIR02^State Issued Rx Serial Number^AN^20^2^O
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",3,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",3,"DES",1,0)
Number assigned to state issued serialized prescription blank. Required 
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",3,"DES",2,0)
if state issues serialized prescription pads for prescribers to use.
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",3,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",3,"VAL",1,0)
$$AIR02^PSOASAP()
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",4,0)
AIR04^ID Qualifier of Person Dropping Off or Picking Up Rx^N^2^4^O
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",4,"DES",0)
^^11^11^3160321
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",4,"DES",1,0)
Used to identify the type of ID contained in AIR05 for person dropping 
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",4,"DES",2,0)
off or picking up the prescription, if required by the PMP.
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",4,"DES",3,0)
  01 Military ID
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",4,"DES",4,0)
  02 State Issued ID
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",4,"DES",5,0)
  03 Unique System ID
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",4,"DES",6,0)
  04 Permanent Resident Card (Green Card)
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",4,"DES",7,0)
  05 Passport ID
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",4,"DES",8,0)
  06 Driver's License ID
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",4,"DES",9,0)
  07 Social Security Number
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",4,"DES",10,0)
  08 Tribal ID
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",4,"DES",11,0)
  99 Other (Trading partner agreed upon ID)
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",4,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",4,"VAL",1,0)
$$AIR04^PSOASAP()
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",5,0)
AIR05^ID of Person Dropping Off or Picking Up Rx^AN^20^5^O
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",5,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",5,"DES",1,0)
ID number of patient or person picking up or dropping off the 
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",5,"DES",2,0)
prescription, if required by the PMP.
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",5,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",5,"VAL",1,0)
$$AIR05^PSOASAP()
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",6,0)
AIR06^Relationship of Person Dropping Off or Picking Up Rx^N^2^6^O
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",6,"DES",0)
^^6^6^3160321
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",6,"DES",1,0)
Code indicating the relationship of the person, if required by the PMP.
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",6,"DES",2,0)
  01 Patient
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",6,"DES",3,0)
  02 Parent/Legal Guardian
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",6,"DES",4,0)
  03 Spouse
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",6,"DES",5,0)
  04 Caregiver
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",6,"DES",6,0)
  99 Other
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",6,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",6,"VAL",1,0)
$$AIR06^PSOASAP()
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",7,0)
AIR07^Last Name of Person Dropping Off or Picking Up Rx^AN^50^7^O
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",7,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",7,"DES",1,0)
Last name of person dropping off or picking up the prescription, if
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",7,"DES",2,0)
required by the PMP.
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",7,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",7,"VAL",1,0)
$$AIR07^PSOASAP()
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",8,0)
AIR08^First Name of Person Dropping Off or Picking Up Rx^AN^50^8^O
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",8,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",8,"DES",1,0)
First name of person dropping off or picking up the prescription, if
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",8,"DES",2,0)
required by the PMP.
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",8,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",8,"VAL",1,0)
$$AIR08^PSOASAP()
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",9,0)
AIR09^Last Name or Initials of Pharmacist^AN^50^9^O
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",9,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",9,"DES",1,0)
Last name or initials of pharmacist dispensing the medication, if 
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",9,"DES",2,0)
required by the PMP.
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",9,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",9,"VAL",1,0)
$$AIR09^PSOASAP()
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",10,0)
AIR10^First Name of Pharmacist^AN^50^10^O
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",10,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",10,"DES",1,0)
First name of pharmacist dispensing the medication, if required by the 
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",10,"DES",2,0)
PMP.
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",10,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",3,"SEG",6,"DAT",10,"VAL",1,0)
$$AIR10^PSOASAP()
"DATA",58.4,1,"VER",5,0)
1995
"DATA",58.4,1,"VER",6,0)
3.0^*^\^$C(13,10)
"DATA",58.4,1,"VER",6,"SEG",0)
^58.40011I^13^13
"DATA",58.4,1,"VER",6,"SEG",1,0)
IR^Information Receiver^TH^R^2^1
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",0)
^58.400111I^10^10
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",1,0)
IR01^Unique Information Receiver ID^AN^10^1^R
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",1,"DES",0)
^58.4001111^1^1^3151231^
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",1,"DES",1,0)
Reference number or identification number as defined by the business partners.
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",1,"VAL",0)
^58.410111^1^1^3151231^^
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",1,"VAL",1,0)
$$IR01^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",2,0)
IR02^Information Receiver Entity Name^AN^60^2^R
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",2,"DES",0)
^58.4001111^1^1^3151019^^
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",2,"DES",1,0)
Entity name of the Information Receiver (e.g., OKLAHOMA PMP PROGRAM).
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",2,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",2,"VAL",1,0)
$$IR02^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",3,0)
IR03^Address Information - 1^AN^30^3^N
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",3,"DES",0)
^^1^1^3151019^
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",3,"DES",1,0)
Free-form text for address information.
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",3,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",3,"VAL",1,0)
$$IR03^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",4,0)
IR04^Address Information - 2^AN^30^4^N
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",4,"DES",0)
^^1^1^3151019^
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",4,"DES",1,0)
Free-form text for additional address information.
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",4,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",4,"VAL",1,0)
$$IR04^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",5,0)
IR05^City Address^AN^20^5^N
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",5,"DES",0)
^^1^1^3151019^
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",5,"DES",1,0)
Free-form text for city name.
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",5,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",5,"VAL",1,0)
$$IR05^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",6,0)
IR06^State Address^AN^2^6^N
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",6,"DES",0)
^^1^1^3151019^
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",6,"DES",1,0)
U.S. Postal Service state code.
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",6,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",6,"VAL",1,0)
$$IR06^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",7,0)
IR07^Zip code Address^AN^9^7^N
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",7,"DES",0)
^^1^1^3151019^
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",7,"DES",1,0)
U.S. Postal Service Zip code.
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",7,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",7,"VAL",1,0)
$$IR07^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",8,0)
IR08^Phone Number^AN^10^8^N
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",8,"DES",0)
^^1^1^3151019^
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",8,"DES",1,0)
Complete phone number including area code.
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",8,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",8,"VAL",1,0)
$$IR08^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",9,0)
IR09^Contact name^AN^30^9^N
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",9,"DES",0)
^^1^1^3151019^
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",9,"DES",1,0)
Free-Form name.
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",9,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",9,"VAL",1,0)
$$IR09^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",10,0)
IR10^Message^AN^60^10^N
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",10,"DES",0)
^^1^1^3151019^
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",10,"DES",1,0)
Free-form text message.
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",10,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",1,"DAT",10,"VAL",1,0)
$$IR10^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",2,0)
TH^Transaction Set Header^^R^1^1
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",0)
^58.400111I^12^12
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",1,0)
TH02^Business Partner Implementation Version^AN^4^2^N
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",1,"DES",0)
^58.4001111^2^2^3151015^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",1,"DES",1,0)
Identifies a set of implementation guidelines agreed upon in advance by 
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",1,"DES",2,0)
the Information Source and the Information Receiver. Format = xx.x.
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",1,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",1,"VAL",1,0)
$$TH02^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",2,0)
TH04^Transaction Type^AN^2^4^N
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",2,"DES",0)
^^6^6^3151015^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",2,"DES",1,0)
Identifies the purpose of initiating the transaction.
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",2,"DES",2,0)
   01 Unsolicited
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",2,"DES",3,0)
   02 Request
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",2,"DES",4,0)
   03 Response to a Request
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",2,"DES",5,0)
   04 Acknowledgment
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",2,"DES",6,0)
   05 Error Receiving
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",2,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",2,"VAL",1,0)
$$TH04^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",3,0)
TH05^Message Type^AN^2^5^N
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",3,"DES",0)
^^11^11^3151015^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",3,"DES",1,0)
Identifies a predetermined specific set of segments.
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",3,"DES",2,0)
   00 Not Identified
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",3,"DES",3,0)
   01 Acknowledgment
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",3,"DES",4,0)
   02 Error
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",3,"DES",5,0)
   03 All Info
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",3,"DES",6,0)
   04 Patient Information
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",3,"DES",7,0)
   05 Patient Plan Information (not used)
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",3,"DES",8,0)
   06 Patient Measurements (not used)
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",3,"DES",9,0)
   07 Rx Dispensed
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",3,"DES",10,0)
   08 Other Known Medications
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",3,"DES",11,0)
   09 Automated Dispensing
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",3,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",3,"VAL",1,0)
$$TH05^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",4,0)
TH06^Response ID^AN^10^6^N
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",4,"DES",0)
^^4^4^3151030^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",4,"DES",1,0)
This field contains the Transaction Set Control Number of an earlier
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",4,"DES",2,0)
transaction that initiated the transaction.
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",4,"DES",3,0)
Required in a response transaction where the message type in TH05 is
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",4,"DES",4,0)
01, 02, 07 or 09.
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",4,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",4,"VAL",1,0)
$$TH06^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",5,0)
TH07^Project ID^AN^30^7^N
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",5,"DES",0)
^^1^1^3151015^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",5,"DES",1,0)
Trading partner agreed upon code to identify the purpose or project.
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",5,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",5,"VAL",1,0)
$$TH07^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",6,0)
TH08^Creation Date^DT^8^8^R
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",6,"DES",0)
^58.4001111^1^1^3151015^^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",6,"DES",1,0)
Date the transaction set was created.
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",6,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",6,"VAL",1,0)
$$TH08^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",7,0)
TH09^Creation Time^TM^6^9^R
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",7,"DES",0)
^58.4001111^1^1^3151015^^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",7,"DES",1,0)
Time the transaction set was created.
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",7,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",7,"VAL",1,0)
$$TH09^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",8,0)
TH10^File Type^AN^1^10^R
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",8,"DES",0)
^^3^3^3130509^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",8,"DES",1,0)
Code specifying the type of transaction:
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",8,"DES",2,0)
     P - Production
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",8,"DES",3,0)
     T - Test
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",8,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",8,"VAL",1,0)
$$TH10^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",9,0)
TH11^Message^AN^60^11^N
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",9,"DES",0)
^^1^1^3151015^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",9,"DES",1,0)
Free-form text message.
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",9,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",9,"VAL",1,0)
$$TH11^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",10,0)
TH12^Composite Element Separator^AN^1^12^R
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",10,"DES",0)
^58.4001111^2^2^3130509^^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",10,"DES",1,0)
The delimiter used to separate component data elements within a composite
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",10,"DES",2,0)
data structure.
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",10,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",10,"VAL",1,0)
$$TH12^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",11,0)
TH13^Data Segment Terminator Character^AN^1^13^N
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",11,"DES",0)
^58.4001111^5^5^3160218^^^^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",11,"DES",1,0)
This terminates the TH segment and sets the actual value of the data segment
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",11,"DES",2,0)
terminator for the entire transaction set.
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",11,"DES",3,0)
 
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",11,"DES",4,0)
Note: This Data Element was released as NOT USED because ASAP 3.0 does not
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",11,"DES",5,0)
      require the actual segment terminator value to be in the TH13 field.
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",11,"VAL",0)
^58.410111^1^1^3160218^^^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",11,"VAL",1,0)
$$TH13^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",12,0)
TH03^Transaction Set Control Number^AN^10^3^R
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",12,"DES",0)
^58.4001111^1^1^3130509^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",12,"DES",1,0)
Sender assigned code uniquely identifying a transaction set.
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",12,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",2,"DAT",12,"VAL",1,0)
$$TH03^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,0)
PAT^Patient Information^PHA^R^1^3
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",0)
^58.400111I^27^27
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",1,0)
PAT01^Reporting Status^N^2^1^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",1,"DES",0)
^58.4001111^4^4^3151020^^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",1,"DES",1,0)
Code to identify the status of the patient information to the receiving system.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",1,"DES",2,0)
  01  Add
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",1,"DES",3,0)
  02  Change
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",1,"DES",4,0)
  03  Delete
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",1,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",1,"VAL",1,0)
$$PAT01^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",2,0)
PAT02^Program Participation Status^AN^2^2^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",2,"DES",0)
^^9^9^3151030^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",2,"DES",1,0)
Code identifying the patient's willingness to participate in a given
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",2,"DES",2,0)
program.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",2,"DES",3,0)
  01 Program has not been offered to patient; participation is assumed
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",2,"DES",4,0)
  02 Program has been offered and patient gave consent
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",2,"DES",5,0)
  03 Program has been offered and patient refused participation
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",2,"DES",6,0)
  04 Patient has requested disenrollment from the program
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",2,"DES",7,0)
  05 Patient is deceased; disenrollment requested
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",2,"DES",8,0)
  06 Temporary hold pending address correction for non-deliverable
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",2,"DES",9,0)
  07 Remove temporary hold; correct address in this segment
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",2,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",2,"VAL",1,0)
$$PAT02^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",3,0)
PAT03^Unique System ID - Patient^AN^12^3^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",3,"DES",0)
^^1^1^3151020^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",3,"DES",1,0)
Patient's unique ID within the reporting pharmacy's system.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",3,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",3,"VAL",1,0)
$$PAT03^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",4,0)
PAT04^Social Security Number^N^10^4^O
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",4,"DES",0)
^58.4001111^1^1^3151020^^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",4,"DES",1,0)
Number assigned to the patient by the Social Security Administration.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",4,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",4,"VAL",1,0)
$$PAT04^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",5,0)
PAT18^Email Address^AN^70^18^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",5,"DES",0)
^^1^1^3151030^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",5,"DES",1,0)
Patient's email address.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",5,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",5,"VAL",1,0)
$$PAT18^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",6,0)
PAT19^Date Of Birth^DT^8^19^R
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",6,"DES",0)
^^1^1^3130510^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",6,"DES",1,0)
Patient's date of birth.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",6,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",6,"VAL",1,0)
$$PAT19^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",7,0)
PAT20^Gender Code^AN^1^20^R
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",7,"DES",0)
^^3^3^3130510^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",7,"DES",1,0)
Code indicating the patient's gender:
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",7,"DES",2,0)
     F - Female
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",7,"DES",3,0)
     M - Male
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",7,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",7,"VAL",1,0)
$$PAT20^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",8,0)
PAT22^Primary Prescription Coverage Type^AN^2^22^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",8,"DES",0)
^^6^6^3151030^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",8,"DES",1,0)
Code identifying patient's primary method of paying prescription services.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",8,"DES",2,0)
  01 Private Pay
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",8,"DES",3,0)
  02 Medicaid
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",8,"DES",4,0)
  03 Medicare
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",8,"DES",5,0)
  04 Commercial PBM Insurance
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",8,"DES",6,0)
  05 Major Medical
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",8,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",8,"VAL",1,0)
$$PAT22^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",9,0)
PAT21^Patient Location Code^AN^2^21^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",9,"DES",0)
^^12^12^3151022^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",9,"DES",1,0)
Code indicating where patient is located when receiving pharmacy services.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",9,"DES",2,0)
  01 Home
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",9,"DES",3,0)
  02 Inter. Care
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",9,"DES",4,0)
  03 Nursing Home
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",9,"DES",5,0)
  04 Long Term/Extended Care
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",9,"DES",6,0)
  05 Rest Home
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",9,"DES",7,0)
  06 Boarding Home
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",9,"DES",8,0)
  07 Skilled Care Facility
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",9,"DES",9,0)
  08 Sub-Acute Care Facility
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",9,"DES",10,0)
  09 Acute Care Facility
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",9,"DES",11,0)
  10 Outpatient
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",9,"DES",12,0)
  11 Hospice
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",9,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",9,"VAL",1,0)
$$PAT21^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",10,0)
PAT23^Secondary Prescription Coverage Type^AN^2^23^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",10,"DES",0)
^^7^7^3151022^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",10,"DES",1,0)
Code identifying patient's secondary method of paying prescription
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",10,"DES",2,0)
services.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",10,"DES",3,0)
  01 Private Pay
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",10,"DES",4,0)
  02 Medicaid
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",10,"DES",5,0)
  03 Medicare
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",10,"DES",6,0)
  04 Commercial PBM Insurance
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",10,"DES",7,0)
  05 Major Medical
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",10,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",10,"VAL",1,0)
$$PAT23^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",11,0)
PAT24^Language Code^AN^3^24^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",11,"DES",0)
^^10^10^3151022^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",11,"DES",1,0)
ISO 639 Code, identifying patient's primary language.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",11,"DES",2,0)
Any valid ISO 639 Code may be used, the following are listed for reference
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",11,"DES",3,0)
only.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",11,"DES",4,0)
  DE German
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",11,"DES",5,0)
  EN English
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",11,"DES",6,0)
  ES Spanish
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",11,"DES",7,0)
  FR French
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",11,"DES",8,0)
  JA Japanese
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",11,"DES",9,0)
  RU Russian
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",11,"DES",10,0)
  ZH Chinese
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",11,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",11,"VAL",1,0)
$$PAT24^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",12,0)
PAT25^Work Phone Number^AN^10^25^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",12,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",12,"DES",1,0)
Complete phone number including area code.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",12,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",12,"VAL",1,0)
$$PAT25^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",13,0)
PAT26^Alternate Phone Number^AN^10^26^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",13,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",13,"DES",1,0)
Complete phone number including area code.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",13,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",13,"VAL",1,0)
$$PAT26^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",14,0)
PAT27^Driver's License Number^AN^17^27^O
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",14,"DES",0)
^58.4001111^3^3^3151022^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",14,"DES",1,0)
Identification number usually assigned by state's department of motor
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",14,"DES",2,0)
vehicles.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",14,"DES",3,0)
Used if state requires this identifier.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",14,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",14,"VAL",1,0)
$$PAT27^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",15,0)
PAT28^Facility Code^AN^10^28^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",15,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",15,"DES",1,0)
Free-form code identifying the LTC facility the patient resides in.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",15,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",15,"VAL",1,0)
$$PAT28^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",16,0)
PAT29^Unit Identifier^AN^10^29^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",16,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",16,"DES",1,0)
Free-form code identifying the LTC facility the patient resides in.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",16,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",16,"VAL",1,0)
$$PAT29^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",17,0)
PAT30^Room Number^AN^10^30^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",17,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",17,"DES",1,0)
Room number assigned to the patient within the LTC facility.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",17,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",17,"VAL",1,0)
$$PAT30^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",18,0)
PAT31^Bed^AN^2^31^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",18,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",18,"DES",1,0)
Bed number assigned to the patient.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",18,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",18,"VAL",1,0)
$$PAT31^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",19,0)
PAT32^Medical Record Number^AN^20^32^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",19,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",19,"DES",1,0)
Unique number assigned to the patient by the LTC facility.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",19,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",19,"VAL",1,0)
$$PAT32^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",20,0)
PAT33^Admission Date^DT^8^33^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",20,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",20,"DES",1,0)
Date patient was admitted into the LTC facility.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",20,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",20,"VAL",1,0)
$$PAT33^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",21,0)
PAT34^Admission Time^TM^6^34^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",21,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",21,"DES",1,0)
Time patient was admitted into the LTC facility.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",21,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",21,"VAL",1,0)
$$PAT34^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",22,0)
PAT35^Discharge Date^DT^8^35^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",22,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",22,"DES",1,0)
Date patient was discharged from the LTC facility.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",22,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",22,"VAL",1,0)
$$PAT35^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",23,0)
PAT36^Discharge Time^TM^6^36^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",23,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",23,"DES",1,0)
Time patient was discharged from the LTC facility.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",23,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",23,"VAL",1,0)
$$PAT36^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",24,0)
PAT37^Primary Coverage Start Date^D^8^37^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",24,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",24,"DES",1,0)
Date the primary coverage stopped for the patient.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",24,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",24,"VAL",1,0)
$$PAT37^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",25,0)
PAT39^Secondary Coverage Start Date^DT^8^39^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",25,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",25,"DES",1,0)
Date the secondary coverage stopped for the patient.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",25,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",25,"VAL",1,0)
$$PAT39^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",26,0)
PAT40^Secondary Coverage Stop Date^D^8^40^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",26,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",26,"DES",1,0)
Date the secondary coverage stopped for the patient.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",26,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",26,"VAL",1,0)
$$PAT40^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",27,0)
PAT38^Primary Coverage Stop Date^DT^8^38^N
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",27,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",27,"DES",1,0)
Date the primary coverage stopped for the patient.
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",27,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",3,"DAT",27,"VAL",1,0)
$$PAT38^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,0)
RX^Prescription Order^PAT^R^1^4
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",0)
^58.400111I^29^29
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",1,0)
RX01^Reporting Status^N^2^1^R
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",1,"DES",0)
^^4^4^3130513^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",1,"DES",1,0)
Reporting Status:
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",1,"DES",2,0)
  01  Add
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",1,"DES",3,0)
  02  Change
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",1,"DES",4,0)
  03  Delete
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",1,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",1,"VAL",1,0)
$$RX01^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",2,0)
RX03^Prescription Number^AN^25^3^R
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",2,"DES",0)
^58.4001111^1^1^3151022^^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",2,"DES",1,0)
Serial number assigned to the prescription by the pharmacy system.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",2,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",2,"VAL",1,0)
$$RX03^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",3,0)
RX08^Date Rx Written^DT^8^8^R
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",3,"DES",0)
^58.4001111^1^1^3151022^^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",3,"DES",1,0)
Date the prescription was written, or ordered, if oral.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",3,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",3,"VAL",1,0)
$$RX08^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",4,0)
RX13^Product ID Qualifier^AN^2^13^O
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",4,"DES",0)
^^5^5^3151022^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",4,"DES",1,0)
Used to identify the type of Product ID contained in RX14.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",4,"DES",2,0)
  01 NDC
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",4,"DES",3,0)
  02 UPC
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",4,"DES",4,0)
  03 HRI
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",4,"DES",5,0)
  04 UPN
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",4,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",4,"VAL",1,0)
$$RX13^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",5,0)
RX14^Product ID^AN^15^14^R
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",5,"DES",0)
^58.4001111^1^1^3151022^^^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",5,"DES",1,0)
Full product identification including leading zeros, without punctuation.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",5,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",5,"VAL",1,0)
$$RX14^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",6,0)
RX17^Quantity Prescribed^D^11^17^O
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",6,"DES",0)
^58.4001111^1^1^3151022^^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",6,"DES",1,0)
Number of metric units prescribed in metric decimal format.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",6,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",6,"VAL",1,0)
$$RX17^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",7,0)
RX18^Days Supply^N^3^18^O
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",7,"DES",0)
^58.4001111^1^1^3151022^^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",7,"DES",1,0)
Estimated number of days the medication will last.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",7,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",7,"VAL",1,0)
$$RX18^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",8,0)
RX20^Refills Authorized^AN^2^20^R
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",8,"DES",0)
^58.4001111^1^1^3151022^^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",8,"DES",1,0)
The number of refills authorized by the prescriber.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",8,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",8,"VAL",1,0)
$$RX20^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",9,0)
RX02^Program Participation Status^AN^2^2^N
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",9,"DES",0)
^^6^6^3151022^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",9,"DES",1,0)
Code to reflect the current status of the prescription in relation to
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",9,"DES",2,0)
program participation (i.e. refill reminder or education enrollment).
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",9,"DES",3,0)
  01 Rx is active and participation is current
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",9,"DES",4,0)
  02 Rx order has been discontinued by prescriber
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",9,"DES",5,0)
  03 Patient has refused participation for this Rx
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",9,"DES",6,0)
  04 Patient has requested disenrollment for this Rx
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",9,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",9,"VAL",1,0)
$$RX02^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",10,0)
RX04^Unique System ID - RPh^AN^12^4^N
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",10,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",10,"DES",1,0)
Pharmacist's unique ID within the reporting pharmacy's system.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",10,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",10,"VAL",1,0)
$$RX04^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",11,0)
RX05^Unique System ID - Patient^AN^12^5^N
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",11,"DES",0)
^58.4001111^1^1^3151022^^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",11,"DES",1,0)
Patient's unique ID within the reporting pharmacy's system.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",11,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",11,"VAL",1,0)
$$RX05^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",12,0)
RX06^Unique System ID - Prescriber^AN^12^6^N
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",12,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",12,"DES",1,0)
Prescriber's unique ID within the reporting pharmacy's system.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",12,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",12,"VAL",1,0)
$$RX06^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",13,0)
RX07^Unique System ID - Drug^AN^12^7^N
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",13,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",13,"DES",1,0)
Dispensed item's unique ID within the reporting pharmacy's system.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",13,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",13,"VAL",1,0)
$$RX07^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",14,0)
RX09^Rx Start Date^DT^8^9^N
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",14,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",14,"DES",1,0)
Date the prescriber ordered the medication to start.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",14,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",14,"VAL",1,0)
$$RX09^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",15,0)
RX10^Rx End Date^DT^8^10^N
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",15,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",15,"DES",1,0)
Date the prescriber ordered the medication to stop.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",15,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",15,"VAL",1,0)
$$RX10^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",16,0)
RX11^Diagnosis Code Qualifier^AN^2^11^O
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",16,"DES",0)
^^5^5^3151022^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",16,"DES",1,0)
Code identifying the coding scheme for the diagnosis code in Rx12.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",16,"DES",2,0)
Required if RX12 is used.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",16,"DES",3,0)
  01 ICD-9 CM
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",16,"DES",4,0)
  02 ICD-10 CM
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",16,"DES",5,0)
  03 Other
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",16,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",16,"VAL",1,0)
$$RX11^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",17,0)
RX12^Diagnosis Code^AN^2^12^O
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",17,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",17,"DES",1,0)
Code identifying the primary diagnosis being treated for the Rx Order.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",17,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",17,"VAL",1,0)
$$RX12^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",18,0)
RX15^Product Description^AN^60^15^N
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",18,"DES",0)
^58.4001111^1^1^3151022^^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",18,"DES",1,0)
Description of the product as printed on the bottle label.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",18,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",18,"VAL",1,0)
$$RX15^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",19,0)
RX16^DAW Code^AN^2^16^N
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",19,"DES",0)
^^10^10^3151022^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",19,"DES",1,0)
Code indicating the Prescriber's instructions regarding generic
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",19,"DES",2,0)
substitution.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",19,"DES",3,0)
  00 No DAW
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",19,"DES",4,0)
  01 Physician DAW
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",19,"DES",5,0)
  02 Patient DAW
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",19,"DES",6,0)
  03 Pharmacy DAW
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",19,"DES",7,0)
  04 No Generic Available
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",19,"DES",8,0)
  05 Brand Dispensed as Generic
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",19,"DES",9,0)
  06 Override
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",19,"DES",10,0)
  09 Other
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",19,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",19,"VAL",1,0)
$$RX16^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",20,0)
RX19^Basis of Days Supply Determination^AN^1^19^N
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",20,"DES",0)
^^4^4^3151022^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",20,"DES",1,0)
Code indicating the method by which  days supply was determined.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",20,"DES",2,0)
  1 Explicit Directions
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",20,"DES",3,0)
  2 PRN Directions (Take as Needed Pharmacist Estimate)
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",20,"DES",4,0)
  3 As Directed by Physician
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",20,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",20,"VAL",1,0)
$$RX19^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",21,0)
RX21^Refills Authorized Through Date^DT^8^21^N
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",21,"DES",0)
^^3^3^3151022^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",21,"DES",1,0)
Date explicitly authorized by prescriber, e.g. 12 months, or date that 
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",21,"DES",2,0)
authorized refills expire if unused, e.g. 6 months for controlled 
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",21,"DES",3,0)
substances.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",21,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",21,"VAL",1,0)
$$RX21^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",22,0)
RX22^DEA Schedule^AN^2^22^N
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",22,"DES",0)
^^8^8^3151022^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",22,"DES",1,0)
Controlled substances code assigned by the Drug Enforcement
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",22,"DES",2,0)
Administration. 
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",22,"DES",3,0)
  02 Schedule II
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",22,"DES",4,0)
  03 Schedule III
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",22,"DES",5,0)
  04 Schedule IV
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",22,"DES",6,0)
  05 Schedule V
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",22,"DES",7,0)
  06 Legend
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",22,"DES",8,0)
  07 Over the Counter (OTC)
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",22,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",22,"VAL",1,0)
$$RX22^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",23,0)
RX23^Unit Dose Indicator^AN^1^23^N
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",23,"DES",0)
^^4^4^3151022^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",23,"DES",1,0)
Code to indicate the type of unit dose dispensing provided.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",23,"DES",2,0)
  1 Not Unit Dose
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",23,"DES",3,0)
  2 Manufacturer Unit Dose
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",23,"DES",4,0)
  3 Pharmacy Package Unit Dose
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",23,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",23,"VAL",1,0)
$$RX23^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",24,0)
RX24^Compound Indicator^AN^1^24^N
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",24,"DES",0)
^^3^3^3151022^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",24,"DES",1,0)
Code indicating whether or not prescription is a compound.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",24,"DES",2,0)
  1 Not a compound
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",24,"DES",3,0)
  2 Compound
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",24,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",24,"VAL",1,0)
$$RX24^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",25,0)
RX25^Origin Code^AN^2^25^N
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",25,"DES",0)
^^7^7^3151022^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",25,"DES",1,0)
Code indicating how the pharmacy received the prescription.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",25,"DES",2,0)
  01 Written Prescription
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",25,"DES",3,0)
  02 Telephone Prescription
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",25,"DES",4,0)
  03 Telephone Emergency Prescription
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",25,"DES",5,0)
  04 Fax Prescription
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",25,"DES",6,0)
  05 Electronic Prescription
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",25,"DES",7,0)
  06 Use Reported by Patient
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",25,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",25,"VAL",1,0)
$$RX25^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",26,0)
RX26^Brand Versus Generic Indicator^AN^1^26^N
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",26,"DES",0)
^^3^3^3151022^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",26,"DES",1,0)
Code indicating if the drug prescribed is a brand or generic.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",26,"DES",2,0)
  B Brand Name Drug
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",26,"DES",3,0)
  G Generic drug
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",26,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",26,"VAL",1,0)
$$RX26^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",27,0)
RX27^Original Fill Date^DT^8^27^N
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",27,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",27,"DES",1,0)
Date of the original fill of the prescription in CCYYMMDD format.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",27,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",27,"VAL",1,0)
$$RX27^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",28,0)
RX28^Alternate Rx Identifier^AN^20^28^N
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",28,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",28,"DES",1,0)
An additional modifier that can be used to identify the prescription.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",28,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",28,"VAL",1,0)
$$RX28^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",29,0)
RX29^Previous Rx Number^AN^25^29^N
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",29,"DES",0)
^^2^2^3151022^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",29,"DES",1,0)
Number assigned to a previous prescription for the same medication as is
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",29,"DES",2,0)
linked to the current order.
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",29,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",4,"DAT",29,"VAL",1,0)
$$RX29^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,0)
DSP^Dispensing Record^PAT^R^2^4
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",0)
^58.400111I^42^33
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",1,0)
DSP01^Reporting Status^N^2^1^R
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",1,"DES",0)
^58.4001111^8^8^3130719^^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",1,"DES",1,0)
Reporting Status
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",1,"DES",2,0)
  01  Add
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",1,"DES",3,0)
  02  Change
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",1,"DES",4,0)
  03  Delete
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",1,"DES",5,0)
  04  Fill
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",1,"DES",6,0)
  05  Order
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",1,"DES",7,0)
  06  Cancel
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",1,"DES",8,0)
  07  Hold
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",1,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",1,"VAL",1,0)
$$DSP01^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",2,0)
DSP02^Program Participation Status^AN^2^2^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",2,"DES",0)
^^6^6^3151030^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",2,"DES",1,0)
Code to reflect the current status of the prescription in relation to
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",2,"DES",2,0)
program participation (i.e. refill reminder or education enrollment).
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",2,"DES",3,0)
  01 Rx is active and participation is current
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",2,"DES",4,0)
  02 Rx order has been discontinued by prescriber
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",2,"DES",5,0)
  03 Patient has refused participation for this Rx
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",2,"DES",6,0)
  04 Patient has requested disenrollment for this Rx
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",2,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",2,"VAL",1,0)
$$DSP02^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",3,0)
DSP03^Prescription Number^AN^25^3^R
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",3,"DES",0)
^^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",3,"DES",1,0)
Serial number assigned to the prescription by the pharmacy.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",3,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",3,"VAL",1,0)
$$DSP03^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",5,0)
DSP05^Unique System ID - RPh^AN^12^5^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",5,"DES",0)
^^1^1^3151030^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",5,"DES",1,0)
Pharmacist's unique ID with the reporting pharmacy's system.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",5,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",5,"VAL",1,0)
$$DSP05^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",6,0)
DSP06^Unique System ID - Patient^AN^12^6^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",6,"DES",0)
^^1^1^3151030^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",6,"DES",1,0)
Patient's unique ID within the reporting pharmacy's system.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",6,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",6,"VAL",1,0)
$$DSP06^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",7,0)
DSP07^Unique System ID - Prescriber^AN^12^7^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",7,"DES",0)
^^1^1^3151030^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",7,"DES",1,0)
Prescriber's unique ID within the reporting pharmacy's system.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",7,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",7,"VAL",1,0)
$$DSP07^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",8,0)
DSP08^Unique System ID - Drug^AN^12^8^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",8,"DES",0)
^^1^1^3151030^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",8,"DES",1,0)
Dispensed item's unique ID within the reporting pharmacy's system.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",8,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",8,"VAL",1,0)
$$DSP08^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",9,0)
DSP09^Date Filled^DT^8^9^R
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",9,"DES",0)
^58.4001111^1^1^3130614^^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",9,"DES",1,0)
Date the prescription (or refill) was dispensed.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",9,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",9,"VAL",1,0)
$$DSP09^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",10,0)
DSP10^Time Filled^TM^6^10^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",10,"DES",0)
^^1^1^3151030^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",10,"DES",1,0)
Time the prescription (or refill) was dispensed.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",10,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",10,"VAL",1,0)
$$DSP10^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",11,0)
DSP11^Product ID Qualifier^AN^2^11^R
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",11,"DES",0)
^^6^6^3130513^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",11,"DES",1,0)
Used to identify the type of product ID contained in DSP12.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",11,"DES",2,0)
  01  NDC
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",11,"DES",3,0)
  02  UPC
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",11,"DES",4,0)
  03  HRI
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",11,"DES",5,0)
  04  UPN
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",11,"DES",6,0)
  05  DIN
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",11,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",11,"VAL",1,0)
$$DSP11^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",12,0)
DSP12^Product ID^AN^15^12^R
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",12,"DES",0)
^^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",12,"DES",1,0)
Description of the product being dispensed as printed on the bottle label.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",12,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",12,"VAL",1,0)
$$DSP12^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",13,0)
DSP13^Product Description^AN^60^13^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",13,"DES",0)
^^1^1^3151030^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",13,"DES",1,0)
Description of the product being dispensed as printed on the bottle label.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",13,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",13,"VAL",1,0)
$$DSP13^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",14,0)
DSP14^Quantity Dispensed^D^11^14^R
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",14,"DES",0)
^^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",14,"DES",1,0)
Number of metric units dispensed in metric decimal format (e.g. 7.3).
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",14,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",14,"VAL",1,0)
$$DSP14^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",15,0)
DSP15^Days Supply^N^3^15^R
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",15,"DES",0)
^^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",15,"DES",1,0)
Estimated number of days the medication will last.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",15,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",15,"VAL",1,0)
$$DSP15^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",16,0)
DSP16^Basis of Days Supply Determination^AN^1^16^O
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",16,"DES",0)
^58.4001111^4^4^3130614^^^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",16,"DES",1,0)
Code indicating method by which days supply was determined.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",16,"DES",2,0)
  1  Explicit Directions
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",16,"DES",3,0)
  2  PRN Direction (Take as Needed Pharmacist Estimate)
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",16,"DES",4,0)
  3  As Directed by Physician
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",16,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",16,"VAL",1,0)
$$DSP16^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",25,0)
DSP04^Refill Number^N^2^4^R
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",25,"DES",0)
^58.4001111^2^2^3151022^^^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",25,"DES",1,0)
Number of the fill of the prescription.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",25,"DES",2,0)
0 indicates New Rx, 01-99 is the refill number.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",25,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",25,"VAL",1,0)
$$DSP04^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",26,0)
DSP17^Refills Remaining^AN^2^17^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",26,"DES",0)
^^2^2^3151022^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",26,"DES",1,0)
Refills remaining on the prescription. The number 99 indicates PRN or
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",26,"DES",2,0)
unlimited refills.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",26,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",26,"VAL",1,0)
$$DSP17^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",27,0)
DSP18^Refills Authorized Through Date^DT^8^18^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",27,"DES",0)
^^3^3^3151022^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",27,"DES",1,0)
Date explicitly authorized by prescriber, e.g. 12 months, or date that
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",27,"DES",2,0)
authorized refills expire if unused, e.g. 6 months for controlled
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",27,"DES",3,0)
substances.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",27,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",27,"VAL",1,0)
$$DSP18^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",28,0)
DSP19^Previous Fill Date^DT^8^19^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",28,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",28,"DES",1,0)
Date the prescription was last dispensed.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",28,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",28,"VAL",1,0)
$$DSP19^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",29,0)
DSP20^Previous Fill Quantity Dispensed^D^11^20^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",29,"DES",0)
^^1^1^3151022^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",29,"DES",1,0)
Quantity dispensed when the prescription was last refilled.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",29,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",29,"VAL",1,0)
$$DSP20^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",30,0)
DSP21^Level of Service Code^AN^2^21^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",30,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",30,"VAL",1,0)
$$DSP21^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",31,0)
DSP22^Brand or Generic Indicator^AN^1^22^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",31,"DES",0)
^^3^3^3151023^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",31,"DES",1,0)
Code indicating if the medication dispensed is brand or generic.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",31,"DES",2,0)
  B Brand
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",31,"DES",3,0)
  G Generic
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",31,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",31,"VAL",1,0)
$$DSP22^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",32,0)
DSP23^Patient Advisory Leaflet^AN^1^23^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",32,"DES",0)
^^4^4^3151023^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",32,"DES",1,0)
Code to indicate whether a patient advisory leaflet/drug monograph is to
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",32,"DES",2,0)
be attached to the bag.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",32,"DES",3,0)
  Y Yes
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",32,"DES",4,0)
  N No
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",32,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",32,"VAL",1,0)
$$DSP23^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",33,0)
DSP24^Warning/Auxiliary Labels^AN^100^24^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",33,"DES",0)
^58.4001111^1^1^3151023^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",33,"DES",1,0)
Text associated with the first warning label for the medication dispensed.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",33,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",33,"VAL",1,0)
$$DSP24^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",34,0)
DSP25^Warning/Auxiliary Labels^AN^100^25^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",34,"DES",0)
^58.4001111^1^1^3151023^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",34,"DES",1,0)
Text associated with the first warning label for the medication dispensed.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",34,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",34,"VAL",1,0)
$$DSP25^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",35,0)
DSP26^Warning/Auxiliary Labels^AN^100^26^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",35,"DES",0)
^58.4001111^2^2^3151023^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",35,"DES",1,0)
 
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",35,"DES",2,0)
Text associated with the first warning label for the medication dispensed.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",35,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",35,"VAL",1,0)
$$DSP26^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",36,0)
DSP27^Warning/Auxiliary Labels^AN^100^27^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",36,"DES",0)
^58.4001111^1^1^3151023^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",36,"DES",1,0)
Text associated with the first warning label for the medication dispensed.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",36,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",36,"VAL",1,0)
$$DSP27^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",37,0)
DSP28^Warning/Auxiliary Labels^AN^100^28^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",37,"DES",0)
^58.4001111^1^1^3151023^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",37,"DES",1,0)
Text associated with the first warning label for the medication dispensed.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",37,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",37,"VAL",1,0)
$$DSP28^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",38,0)
DSP29^Bar Code on Vial Label^AN^20^29^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",38,"DES",0)
^^2^2^3151023^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",38,"DES",1,0)
Pharmacy specific data that must be put in a bar-code format on the vial
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",38,"DES",2,0)
label.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",38,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",38,"VAL",1,0)
$$DSP29^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",39,0)
DSP30^Group Identifier^AN^25^30^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",39,"DES",0)
^^2^2^3151023^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",39,"DES",1,0)
Identifier that uniquely identifies a batch of prescriptions for the
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",39,"DES",2,0)
patient.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",39,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",39,"VAL",1,0)
$$DSP30^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",40,0)
DSP31^Group Rx Count^N^2^31^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",40,"DES",0)
^^2^2^3151023^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",40,"DES",1,0)
Total number of prescriptions that will be included in the group (batch)
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",40,"DES",2,0)
for the patient.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",40,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",40,"VAL",1,0)
$$DSP31^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",41,0)
DSP32^Partial Fill Indicator^AN^1^32^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",41,"DES",0)
^^3^3^3151026^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",41,"DES",1,0)
To indicate whether it is a partial fill.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",41,"DES",2,0)
  Y Yes
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",41,"DES",3,0)
  N No
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",41,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",41,"VAL",1,0)
$$DSP32^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",42,0)
DSP33^Priority^AN^8^33^N
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",42,"DES",0)
^^6^6^3151026^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",42,"DES",1,0)
Free-form text identifying the order the prescription should be filled in
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",42,"DES",2,0)
or date and time that the prescription should be completed by.
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",42,"DES",3,0)
  STD (Standard)
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",42,"DES",4,0)
  High
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",42,"DES",5,0)
  Fill Next
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",42,"DES",6,0)
  MMDDHHMM
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",42,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",5,"DAT",42,"VAL",1,0)
$$DSP33^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",6,0)
PRE^Prescriber^DSP^R^1^4
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",0)
^58.400111I^20^20
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",1,0)
PRE01^Reporting Status^N^2^1^N
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",1,"DES",0)
^58.4001111^4^4^3130513^^^^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",1,"DES",1,0)
Reporting Status
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",1,"DES",2,0)
  01  Add
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",1,"DES",3,0)
  02  Change
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",1,"DES",4,0)
  03  Delete
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",1,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",1,"VAL",1,0)
$$PRE01^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",2,0)
PRE02^Unique System ID - Prescriber ^AN^12^2^N
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",2,"DES",0)
^^1^1^3151030^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",2,"DES",1,0)
Prescriber's unique ID within the reporting pharmacy's system.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",2,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",2,"VAL",1,0)
$$PRE02^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",3,0)
PRE03^National Provider Identifier (NPI)^AN^10^3^O
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",3,"DES",0)
^^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",3,"DES",1,0)
Identifying number assigned to a prescriber or an institution.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",3,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",3,"VAL",1,0)
$$PRE03^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",4,0)
PRE04^DEA Number^AN^10^4^R
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",4,"DES",0)
^^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",4,"DES",1,0)
Identifying number assigned to a prescriber or an institution.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",4,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",4,"VAL",1,0)
$$PRE04^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",5,0)
PRE05^DEA Number Suffix^AN^7^5^O
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",5,"DES",0)
^^2^2^3130513^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",5,"DES",1,0)
Identifying number assigned to a prescriber by an institution when the
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",5,"DES",2,0)
institution's number is used as the DEA number.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",5,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",5,"VAL",1,0)
$$PRE05^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",6,0)
PRE06^Prescriber State License Number^AN^10^6^O
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",6,"DES",0)
^58.4001111^1^1^3151030^^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",6,"DES",1,0)
Identification assigned to the Prescriber by the State Licensing Board.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",6,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",6,"VAL",1,0)
$$PRE06^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",7,0)
PRE07^Prescriber Alternate ID^AN^20^7^N
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",7,"DES",0)
^^2^2^3151030^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",7,"DES",1,0)
An alternate identification number assigned to the Prescriber and agreed 
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",7,"DES",2,0)
upon by the business partners, such as the HIN.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",7,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",7,"VAL",1,0)
$$PRE07^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",8,0)
PRE08^Last Name^AN^15^8^O
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",8,"DES",0)
^58.4001111^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",8,"DES",1,0)
Prescriber's last name.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",8,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",8,"VAL",1,0)
$$PRE08^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",9,0)
PRE09^First Name^AN^12^9^O
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",9,"DES",0)
^58.4001111^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",9,"DES",1,0)
Prescriber's First Name.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",9,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",9,"VAL",1,0)
$$PRE09^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",10,0)
PRE10^Middle Name^AN^12^10^O
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",10,"DES",0)
^58.4001111^1^1^3130523^^^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",10,"DES",1,0)
Prescriber's Middle Name, if any.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",10,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",10,"VAL",1,0)
$$PRE10^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",11,0)
PRE11^Name Prefix^AN^10^11^N
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",11,"DES",0)
^58.4001111^1^1^3151026^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",11,"DES",1,0)
Prescriber's name prefix such as Mr. or Dr.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",11,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",11,"VAL",1,0)
$$PRE11^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",12,0)
PRE12^Name Suffix^AN^10^12^N
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",12,"DES",0)
^^1^1^3151026^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",12,"DES",1,0)
Prescriber's name suffix such as Jr. or the III.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",12,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",12,"VAL",1,0)
$$PRE12^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",13,0)
PRE13^Address Information - 1^AN^30^13^N
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",13,"DES",0)
^^1^1^3151026^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",13,"DES",1,0)
Free-form text for address information.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",13,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",13,"VAL",1,0)
$$PRE13^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",14,0)
PRE14^Address Information - 2^AN^30^14^N
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",14,"DES",0)
^^1^1^3151026^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",14,"DES",1,0)
Free-form text for additional address information.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",14,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",14,"VAL",1,0)
$$PRE14^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",15,0)
PRE15^City Address^AN^20^15^N
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",15,"DES",0)
^^1^1^3151026^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",15,"DES",1,0)
Free-form text for city name.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",15,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",15,"VAL",1,0)
$$PRE15^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",16,0)
PRE16^State Address^AN^2^16^N
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",16,"DES",0)
^^1^1^3151026^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",16,"DES",1,0)
U.S. Postal Service state code.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",16,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",16,"VAL",1,0)
$$PRE16^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",17,0)
PRE17^Zip Code Address^AN^9^17^N
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",17,"DES",0)
^^1^1^3151026^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",17,"DES",1,0)
U.S. Postal Service Zip code.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",17,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",17,"VAL",1,0)
$$PRE17^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",18,0)
PRE18^Phone Number^AN^10^18^N
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",18,"DES",0)
^^1^1^3151026^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",18,"DES",1,0)
Complete phone number including area code.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",18,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",18,"VAL",1,0)
$$PRE18^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",19,0)
PRE19^Prescriber Specialty^AN^10^19^N
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",19,"DES",0)
^^3^3^3151026^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",19,"DES",1,0)
Contains the 10 character Health Care Provider Taxonomy code as
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",19,"DES",2,0)
maintained by ASC X12 and CMS. The complete taxonomy is available from
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",19,"DES",3,0)
Washington Publishing Corporation's web site: www.wpc-edi.com.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",19,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",19,"VAL",1,0)
$$PRE19^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",20,0)
PRE20^Prescriber Fax Number^AN^10^20^N
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",20,"DES",0)
^^1^1^3151026^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",20,"DES",1,0)
Complete fax number including area code.
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",20,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",6,"DAT",20,"VAL",1,0)
$$PRE20^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",7,0)
RPH^Pharmacist^DSP^R^2^4
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",0)
^58.400111I^11^11
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",1,0)
RPH01^Reporting Status^N^2^1^N
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",1,"DES",0)
^^4^4^3151231^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",1,"DES",1,0)
Not required; use depends on business application.
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",1,"DES",2,0)
 01 Add
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",1,"DES",3,0)
 02 Change
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",1,"DES",4,0)
 03 Delete
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",1,"VAL",0)
^58.410111^1^1^3151231^^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",1,"VAL",1,0)
$$RPH01^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",2,0)
RPH03^National Provider Identifier (NPI)^AN^10^3^O
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",2,"DES",0)
^^3^3^3130513^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",2,"DES",1,0)
Identifier assigned to the pharmacist by CMS if the pharmacist applies
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",2,"DES",2,0)
for a number. This number is used to identify the pharmacist who 
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",2,"DES",3,0)
dispensed the medication.
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",2,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",2,"VAL",1,0)
$$RPH03^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",3,0)
RPH06^Last Name^AN^15^6^O
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",3,"DES",0)
^58.4001111^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",3,"DES",1,0)
Pharmacist's last name.
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",3,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",3,"VAL",1,0)
$$RPH06^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",4,0)
RPH07^First Name^AN^12^7^O
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",4,"DES",0)
^58.4001111^1^1^3130513^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",4,"DES",1,0)
Pharmacist's first name.
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",4,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",4,"VAL",1,0)
$$RPH07^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",5,0)
RPH08^Middle Name^AN^12^8^O
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",5,"DES",0)
^58.4001111^1^1^3130916^^^^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",5,"DES",1,0)
Pharmacist's middle name or initial, if available.
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",5,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",5,"VAL",1,0)
$$RPH08^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",6,0)
RPH02^Unique System ID^AN^12^2^N
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",6,"DES",0)
^^1^1^3151026^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",6,"DES",1,0)
The Pharmacist's unique ID within the reporting pharmacy's system.
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",6,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",6,"VAL",1,0)
$$RPH02^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",7,0)
RPH04^Pharmacist State License Number^AN^10^4^N
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",7,"DES",0)
^^5^5^3151026^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",7,"DES",1,0)
This data element can be used to identify the pharmacist dispensing the
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",7,"DES",2,0)
medication.
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",7,"DES",3,0)
Assigned to the pharmacist by the State Licensing Board.
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",7,"DES",4,0)
The State License Number could be replaced by an NPI if the pharmacist
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",7,"DES",5,0)
applies for and is given a number by CMS.
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",7,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",7,"VAL",1,0)
$$RPH04^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",8,0)
RPH05^Pharmacist Alternate ID^AN^20^5^N
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",8,"DES",0)
^^2^2^3151026^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",8,"DES",1,0)
An alternate identification number assigned to the pharmacist and agreed
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",8,"DES",2,0)
upon by the business partners.
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",8,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",8,"VAL",1,0)
$$RPH05^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",9,0)
RPH09^Name Prefix^AN^10^9^N
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",9,"DES",0)
^^1^1^3151026^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",9,"DES",1,0)
Pharmacist's name prefix such Mr. or Dr.
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",9,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",9,"VAL",1,0)
$$RPH09^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",10,0)
RPH10^Name Suffix^AN^10^10^N
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",10,"DES",0)
^^1^1^3151026^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",10,"DES",1,0)
Pharmacist's name suffix such as Jr. or III.
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",10,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",10,"VAL",1,0)
$$RPH10^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",11,0)
RPH11^Pharmacist Title^AN^30^11^N
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",11,"DES",0)
^^1^1^3151026^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",11,"DES",1,0)
Free-form text describing Pharmacist's title.
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",11,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",7,"DAT",11,"VAL",1,0)
$$RPH11^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",8,0)
PLN^Third-Party Plan^DSP^N^3^4
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",0)
^58.400111I^12^12
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",1,0)
PLN01^Reporting Status^N^2^1^N
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",1,"DES",0)
^58.4001111^4^4^3151027^^^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",1,"DES",1,0)
Not Required; use depends on business application.
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",1,"DES",2,0)
  01 Add
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",1,"DES",3,0)
  02 Change
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",1,"DES",4,0)
  03 Delete
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",1,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",1,"VAL",1,0)
$$PLN01^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",2,0)
PLN02^Plan Coverage Status to Patient^AN^2^2^N
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",2,"DES",0)
^^4^4^3151027^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",2,"DES",1,0)
Plan's coverage relationship or status to the patient.
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",2,"DES",2,0)
  01 Primary Coverage
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",2,"DES",3,0)
  02 Secondary Coverage
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",2,"DES",4,0)
  03 Other
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",2,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",2,"VAL",1,0)
$$PLN02^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",3,0)
PLN03^Unique System ID - Plan^AN^12^3^N
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",3,"DES",0)
^^1^1^3151027^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",3,"DES",1,0)
Plan's unique ID within the reporting pharmacy's system.
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",3,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",3,"VAL",1,0)
$$PLN03^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",4,0)
PLN04^Classification Code for Plan Type^AN^2^4^R
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",4,"DES",0)
^^7^7^3151027^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",4,"DES",1,0)
Code Identifying the type of plan, i.e. how it was paid for.
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",4,"DES",2,0)
  01 Private Pay
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",4,"DES",3,0)
  02 Medicaid
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",4,"DES",4,0)
  03 Medicare
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",4,"DES",5,0)
  04 Commercial PBM Insurance
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",4,"DES",6,0)
  05 Major Medical
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",4,"DES",7,0)
  06 Workers' Compensation
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",4,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",4,"VAL",1,0)
$$PLN04^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",5,0)
PLN05^Plan Name^AN^30^5^N
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",5,"DES",0)
^^1^1^3151027^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",5,"DES",1,0)
Free-text name of the plan.
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",5,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",5,"VAL",1,0)
$$PLN05^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",6,0)
PLN06^Processor BIN^AN^6^6^N
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",6,"DES",0)
^^2^2^3151027^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",6,"DES",1,0)
Bank Identification Number assigned to the plan's claim processor for
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",6,"DES",2,0)
network routing of real-time claim adjudication.
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",6,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",6,"VAL",1,0)
$$PLN06^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",7,0)
PLN07^Processor Control Number^AN^10^7^N
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",7,"DES",0)
^^1^1^3151027^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",7,"DES",1,0)
Control ID assigned by the claims processor.
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",7,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",7,"VAL",1,0)
$$PLN07^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",8,0)
PLN08^Plan ID^AN^10^8^N
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",8,"DES",0)
^^2^2^3151027^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",8,"DES",1,0)
Assigned by the Processor to identify a set of parameters, benefit, or
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",8,"DES",2,0)
coverage criteria used to adjudicate a claim.
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",8,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",8,"VAL",1,0)
$$PLN08^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",9,0)
PLN09^Group Number^AN^15^9^N
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",9,"DES",0)
^^1^1^3151027^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",9,"DES",1,0)
Assigned by the Plan to the cardholder or employer group.
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",9,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",9,"VAL",1,0)
$$PLN09^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",10,0)
PLN10^Cardholder ID^AN^18^10^N
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",10,"DES",0)
^^1^1^3151027^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",10,"DES",1,0)
Assigned by the Plan to the cardholder.
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",10,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",10,"VAL",1,0)
$$PLN10^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",11,0)
PLN11^Person Code^AN^3^11^N
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",11,"DES",0)
^^1^1^3151027^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",11,"DES",1,0)
Assigned by the Plan to the family member.
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",11,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",11,"VAL",1,0)
$$PLN11^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",12,0)
PLN12^Relationship Code^AN^1^12^N
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",12,"DES",0)
^^5^5^3151027^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",12,"DES",1,0)
Code indicating relationship of patient to cardholder.
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",12,"DES",2,0)
  1 Cardholder
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",12,"DES",3,0)
  2 Spouse
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",12,"DES",4,0)
  3 Child
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",12,"DES",5,0)
  4 Other
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",12,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",8,"DAT",12,"VAL",1,0)
$$PLN12^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",9,0)
IS^Information Source^TH^R^1^1
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",0)
^58.400111I^9^9
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",1,0)
IS03^Address Information - 1^AN^30^3^N
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",1,"DES",0)
^58.4001111^1^1^3151019^
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",1,"DES",1,0)
Free-form text for address information.
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",1,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",1,"VAL",1,0)
$$IS03^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",2,0)
IS04^Address Information - 2^AN^30^4^N
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",2,"DES",0)
^^1^1^3151019^
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",2,"DES",1,0)
Free-form text for additional address information.
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",2,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",2,"VAL",1,0)
$$IS04^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",3,0)
IS05^City Address^AN^20^5^N
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",3,"DES",0)
^^1^1^3151019^
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",3,"DES",1,0)
Free-form text for city name.
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",3,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",3,"VAL",1,0)
$$IS05^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",4,0)
IS06^State Address^AN^2^6^N
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",4,"DES",0)
^^1^1^3151019^
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",4,"DES",1,0)
U.S. Postal Service state code.
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",4,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",4,"VAL",1,0)
$$IS06^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",5,0)
IS07^Zip code Address^AN^9^7^N
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",5,"DES",0)
^^1^1^3151019^
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",5,"DES",1,0)
U.S. Postal Service Zip code.
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",5,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",5,"VAL",1,0)
$$IS07^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",6,0)
IS08^Phone Number^AN^10^8^N
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",6,"DES",0)
^^1^1^3151019^
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",6,"DES",1,0)
Complete phone number including area code.
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",6,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",6,"VAL",1,0)
$$IS08^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",7,0)
IS09^Contact Name^AN^30^9^N
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",7,"DES",0)
^^1^1^3151019^
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",7,"DES",1,0)
Free-form name.
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",7,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",7,"VAL",1,0)
$$IS09^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",8,0)
IS10^Message^AN^60^10^N
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",8,"DES",0)
^^1^1^3151019^
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",8,"DES",1,0)
Free-form text message.
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",8,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",8,"VAL",1,0)
$$IS10^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",9,0)
IS11^Data Entry Terminal ID^AN^16^11^N
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",9,"DES",0)
^58.4001111^1^1^3151019^
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",9,"DES",1,0)
A unique ID assigned to the terminal/workstation initiating the request.
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",9,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",9,"DAT",9,"VAL",1,0)
$$IS11^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",10,0)
PHA^Pharmacy Header^IR^R^1^2
"DATA",58.4,1,"VER",6,"SEG",10,"DAT",0)
^58.400111I^3^3
"DATA",58.4,1,"VER",6,"SEG",10,"DAT",1,0)
PHA13^Message^AN^60^13^N
"DATA",58.4,1,"VER",6,"SEG",10,"DAT",1,"DES",0)
^^1^1^3151019^
"DATA",58.4,1,"VER",6,"SEG",10,"DAT",1,"DES",1,0)
Free-form text message.
"DATA",58.4,1,"VER",6,"SEG",10,"DAT",1,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",10,"DAT",1,"VAL",1,0)
$$PHA13^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",10,"DAT",2,0)
PHA12^Reporting Frequency^AN^3^12^N
"DATA",58.4,1,"VER",6,"SEG",10,"DAT",2,"DES",0)
^^2^2^3151019^
"DATA",58.4,1,"VER",6,"SEG",10,"DAT",2,"DES",1,0)
Frequency, expressed in number of days, that the pharmacy reports this
"DATA",58.4,1,"VER",6,"SEG",10,"DAT",2,"DES",2,0)
data. For example, once a week would be expressed as 7 days, daily as 1.
"DATA",58.4,1,"VER",6,"SEG",10,"DAT",2,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",10,"DAT",2,"VAL",1,0)
$$PHA12^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",10,"DAT",3,0)
PHA07^City Address^AN^20^7^O
"DATA",58.4,1,"VER",6,"SEG",10,"DAT",3,"DES",0)
^^1^1^3151231^
"DATA",58.4,1,"VER",6,"SEG",10,"DAT",3,"DES",1,0)
Free-form text for the city name.
"DATA",58.4,1,"VER",6,"SEG",10,"DAT",3,"VAL",0)
^^1^1^3151231^
"DATA",58.4,1,"VER",6,"SEG",10,"DAT",3,"VAL",1,0)
$$PHA07^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",11,0)
TP^Pharmacy Trailer^IR^R^2^5
"DATA",58.4,1,"VER",6,"SEG",12,0)
CDI^Compound Drug Ingredient Detail^DSP^N^4^4
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",0)
^58.400111I^6^6
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",1,0)
CDI06^Component Ingredient Cost^D^8^6^N
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",1,"DES",0)
^^1^1^3151030^
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",1,"DES",1,0)
Ingredient cost for the ingredient quantity in CDI05.
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",1,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",1,"VAL",1,0)
$$CDI06^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",2,0)
CDI07^Component Ingredient Basis of Cost Determination^AN^2^7^N
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",2,"DES",0)
^^1^1^3151027^
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",2,"DES",1,0)
Basis of cost determination for the ingredient cost in CDI06.
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",2,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",2,"VAL",1,0)
$$CDI07^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",3,0)
CDI08^Compound Drug Dosage Units Code^AN^2^8^N
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",3,"DES",0)
^^6^6^3151027^
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",3,"DES",1,0)
Identifies the dosage form of the completed compound mixture.
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",3,"DES",2,0)
  01 Each
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",3,"DES",3,0)
  02 Milliliters
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",3,"DES",4,0)
  03 Grams
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",3,"DES",5,0)
  04 Liters
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",3,"DES",6,0)
  05 Milligrams
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",3,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",3,"VAL",1,0)
$$CDI08^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",4,0)
CDI04^Component Ingredient Product Description^AN^60^4^N
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",4,"DES",0)
^^1^1^3151027^
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",4,"DES",1,0)
Description of the component ingredient product as printed on the label.
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",4,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",4,"VAL",1,0)
$$CDI04^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",5,0)
CDI05^Component Ingredient Quantity^D^11^5^R
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",5,"DES",0)
^^1^1^3151027^
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",5,"DES",1,0)
Metric decimal quantity of the ingredient identified in CDI03.
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",5,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",5,"VAL",1,0)
$$CDI05^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",6,0)
CDI02^Product ID Qualifier^AN^2^2^R
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",6,"DES",0)
^58.4001111^5^5^3151231^^
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",6,"DES",1,0)
Code to identify the type of product ID contained in CDI03.
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",6,"DES",2,0)
 01 NDC
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",6,"DES",3,0)
 02 Ingredient Product ID
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",6,"DES",4,0)
 03 HRI
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",6,"DES",5,0)
 04 DIN
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",6,"VAL",0)
^^1^1^3151231^
"DATA",58.4,1,"VER",6,"SEG",12,"DAT",6,"VAL",1,0)
$$CDI02^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",13,0)
CSR^Controlled Substance Reporting^DSP^N^5^4
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",0)
^58.400111I^7^7
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",1,0)
CSR01^State Issuing Rx Serial Number^AN^2^1^O
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",1,"DES",0)
^^1^1^3151027^
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",1,"DES",1,0)
USPS state code of state that issued serialized prescription document.
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",1,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",1,"VAL",1,0)
$$CSR01^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",2,0)
CSR02^State Issued Rx Serial Number^AN^20^2^O
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",2,"DES",0)
^^2^2^3151027^
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",2,"DES",1,0)
Number assigned to state issued serialized prescription pad.
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",2,"DES",2,0)
Required if state issues serialized prescription pads for doctors to use.
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",2,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",2,"VAL",1,0)
$$CSR02^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",3,0)
CSR03^ID Qualifier^AN^2^3^O
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",3,"DES",0)
^58.4001111^10^10^3151027^^
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",3,"DES",1,0)
Used to identify the type of ID contained in CSR04 for person picking up
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",3,"DES",2,0)
the prescription.
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",3,"DES",3,0)
__USPS state code of state that issued ID
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",3,"DES",4,0)
  SS Social Security Number
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",3,"DES",5,0)
  01 Military ID
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",3,"DES",6,0)
  02 State Issued ID
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",3,"DES",7,0)
  03 Unique System ID
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",3,"DES",8,0)
  05 Passport ID
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",3,"DES",9,0)
  06 Driver's License ID
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",3,"DES",10,0)
  99 Other (Trading partner agreed upon ID)  
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",3,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",3,"VAL",1,0)
$$CSR03^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",4,0)
CSR04^ID of Person Picking Up Rx^AN^20^4^O
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",4,"DES",0)
^^2^2^3151027^
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",4,"DES",1,0)
ID number of patient, or ID number of person picking up the prescription
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",4,"DES",2,0)
other than patient.
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",4,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",4,"VAL",1,0)
$$CSR04^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",5,0)
CSR05^Relationship of Person Picking Up Rx^AN^2^5^O
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",5,"DES",0)
^^6^6^3151027^
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",5,"DES",1,0)
Code indicating the relationship of the person picking up the Rx.
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",5,"DES",2,0)
  01 Patient
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",5,"DES",3,0)
  02 Parent/Legal Guardian
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",5,"DES",4,0)
  03 Spouse
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",5,"DES",5,0)
  04 Caregiver
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",5,"DES",6,0)
  05 Other
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",5,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",5,"VAL",1,0)
$$CSR05^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",6,0)
CSR06^Last Name of Person Picking Up Rx^AN^15^6^O
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",6,"DES",0)
^^1^1^3151027^
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",6,"DES",1,0)
Last name of person picking up the prescription.
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",6,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",6,"VAL",1,0)
$$CSR06^PSOASAP()
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",7,0)
CSR07^First Name of Person Picking Up Rx^AN^12^7^O
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",7,"DES",0)
^^1^1^3151027^
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",7,"DES",1,0)
First name of person picking up the prescription.
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",7,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",6,"SEG",13,"DAT",7,"VAL",1,0)
$$CSR07^PSOASAP()
"DATA",58.4,1,"VER",7,0)
4.2^*^~^$C(13,10)
"DATA",58.4,1,"VER",7,"SEG",0)
^58.40011I^7^7
"DATA",58.4,1,"VER",7,"SEG",1,0)
AIR^Additional Information Reporting^DSP^N^3^4
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",0)
^58.400111I^11^11
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",1,0)
AIR11^Dropping Off/Picking Up Identifier Qualifier^N^2^11^O
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",1,"DES",0)
^58.4001111^4^4^3151027^^
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",1,"DES",1,0)
Additional qualifier for the ID contained in AIR05.
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",1,"DES",2,0)
  01 Person Dropping Off
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",1,"DES",3,0)
  02 Person Picking Up
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",1,"DES",4,0)
  98 Unknown/Not Applicable
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",1,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",1,"VAL",1,0)
$$AIR11^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",2,0)
AIR01^State Issuing Rx Serial Number^AN^2^1^O
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",2,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",2,"DES",1,0)
USPS state code of state that issued serialized prescription blank. This 
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",2,"DES",2,0)
is required if AIR02 is used.
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",2,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",2,"VAL",1,0)
$$AIR01^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",3,0)
AIR02^State Issued Rx Serial Number^AN^20^2^O
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",3,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",3,"DES",1,0)
Number assigned to state issued serialized prescription blank. Required 
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",3,"DES",2,0)
if state issues serialized prescription pads for prescribers to use.
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",3,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",3,"VAL",1,0)
$$AIR02^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",4,0)
AIR03^ID Issuing Jurisdiction^AN^2^3^O
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",4,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",4,"DES",1,0)
Code identifying the jurisdiction that issues the ID in AIR04. Used if 
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",4,"DES",2,0)
required by the PMP and AIR04 is equal to 02 or 06.
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",4,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",4,"VAL",1,0)
$$AIR03^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",5,0)
AIR04^ID Qualifier of Person Dropping Off or Picking Up Rx^N^2^4^O
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",5,"DES",0)
^^11^11^3160321
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",5,"DES",1,0)
Used to identify the type of ID contained in AIR05 for person dropping 
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",5,"DES",2,0)
off or picking up the prescription, if required by the PMP.
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",5,"DES",3,0)
  01 Military ID
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",5,"DES",4,0)
  02 State Issued ID
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",5,"DES",5,0)
  03 Unique System ID
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",5,"DES",6,0)
  04 Permanent Resident Card (Green Card)
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",5,"DES",7,0)
  05 Passport ID
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",5,"DES",8,0)
  06 Driver's License ID
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",5,"DES",9,0)
  07 Social Security Number
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",5,"DES",10,0)
  08 Tribal ID
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",5,"DES",11,0)
  99 Other (Trading partner agreed upon ID)
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",5,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",5,"VAL",1,0)
$$AIR04^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",6,0)
AIR05^ID of Person Dropping Off or Picking Up Rx^AN^20^5^O
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",6,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",6,"DES",1,0)
ID number of patient or person picking up or dropping off the 
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",6,"DES",2,0)
prescription, if required by the PMP.
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",6,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",6,"VAL",1,0)
$$AIR05^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",7,0)
AIR06^Relationship of Person Dropping Off or Picking Up Rx^N^2^6^O
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",7,"DES",0)
^^6^6^3160321
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",7,"DES",1,0)
Code indicating the relationship of the person, if required by the PMP.
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",7,"DES",2,0)
  01 Patient
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",7,"DES",3,0)
  02 Parent/Legal Guardian
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",7,"DES",4,0)
  03 Spouse
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",7,"DES",5,0)
  04 Caregiver
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",7,"DES",6,0)
  99 Other
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",7,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",7,"VAL",1,0)
$$AIR06^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",8,0)
AIR07^Last Name of Person Dropping Off or Picking Up Rx^AN^50^7^O
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",8,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",8,"DES",1,0)
Last name of person dropping off or picking up the prescription, if
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",8,"DES",2,0)
required by the PMP.
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",8,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",8,"VAL",1,0)
$$AIR07^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",9,0)
AIR08^First Name of Person Dropping Off or Picking Up Rx^AN^50^8^O
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",9,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",9,"DES",1,0)
First name of person dropping off or picking up the prescription, if
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",9,"DES",2,0)
required by the PMP.
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",9,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",9,"VAL",1,0)
$$AIR08^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",10,0)
AIR09^Last Name or Initials of Pharmacist^AN^50^9^O
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",10,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",10,"DES",1,0)
Last name or initials of pharmacist dispensing the medication, if 
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",10,"DES",2,0)
required by the PMP.
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",10,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",10,"VAL",1,0)
$$AIR09^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",11,0)
AIR10^First Name of Pharmacist^AN^50^10^O
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",11,"DES",0)
^^2^2^3160321
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",11,"DES",1,0)
First name of pharmacist dispensing the medication, if required by the 
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",11,"DES",2,0)
PMP.
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",11,"VAL",0)
^^1^1^3160321
"DATA",58.4,1,"VER",7,"SEG",1,"DAT",11,"VAL",1,0)
$$AIR10^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",2,0)
PAT^Patient Information^PHA^R^1^3
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",0)
^58.400111I^4^4
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",1,0)
PAT22^Country of Non-U.S. Resident^AN^20^22^O
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",1,"DES",0)
^^2^2^3151027^
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",1,"DES",1,0)
Used when the patient's address is a foreign country and PAT12 through
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",1,"DES",2,0)
PAT16 are left blank.
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",1,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",1,"VAL",1,0)
$$PAT22^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",2,0)
PAT23^Name of Animal^AN^30^23^O
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",2,"DES",0)
^^3^3^3151027^
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",2,"DES",1,0)
Used if required by the PMP for prescriptions written by a veterinarian
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",2,"DES",2,0)
and the pharmacist has access to this information at the time of 
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",2,"DES",3,0)
dispensing the prescription.
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",2,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",2,"VAL",1,0)
$$PAT23^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",3,0)
PAT12^Address Information - 1^AN^35^12^R
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",3,"DES",0)
^^1^1^3160104^
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",3,"DES",1,0)
Free-form text for street address information.
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",3,"VAL",0)
^^1^1^3160104^
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",3,"VAL",1,0)
$$PAT12^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",4,0)
PAT13^Address Information - 2^AN^35^13^R
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",4,"DES",0)
^^2^2^3160104^
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",4,"DES",1,0)
Freeform text for additional address information, if required by the PMP and 
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",4,"DES",2,0)
is available in pharmacy system.
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",4,"VAL",0)
^^1^1^3160104^
"DATA",58.4,1,"VER",7,"SEG",2,"DAT",4,"VAL",1,0)
$$PAT13^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",3,0)
DSP^Dispensing Record^PAT^R^1^4
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",0)
^58.400111I^5^5
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",1,0)
DSP17^Date Sold^DT^8^17^N
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",1,"DES",0)
^58.4001111^2^2^3160224^^
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",1,"DES",1,0)
This field is used to determine the date the prescription left the
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",1,"DES",2,0)
pharmacy, not the date it was filled, if the dates differ.
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",1,"VAL",0)
^58.410111^1^1^3160224^^
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",1,"VAL",1,0)
$$DSP17^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",2,0)
DSP18^RxNorm Product Qualifier^N^2^18^O
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",2,"DES",0)
^^4^4^3151027^
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",2,"DES",1,0)
  01 = Semantic Clinical Drug (SCD)
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",2,"DES",2,0)
  02 = Semantic Branded Drug (SBD)
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",2,"DES",3,0)
  03 = Generic Package (GPCK)
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",2,"DES",4,0)
  04 = Branded Package (BPCK)
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",2,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",2,"VAL",1,0)
$$DSP18^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",3,0)
DSP19^RxNorm Code^AN^15^19^O
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",3,"DES",0)
^^2^2^3151027^
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",3,"DES",1,0)
Used for electronic prescriptions to capture the prescribed drug product
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",3,"DES",2,0)
identification.
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",3,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",3,"VAL",1,0)
$$DSP19^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",4,0)
DSP20^Electronic Prescription Reference Number^AN^35^20^O
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",4,"DES",0)
^^2^2^3151027^
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",4,"DES",1,0)
This field should be populated with the Initiator Reference Number from
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",4,"DES",2,0)
field UIB-030-01 in the SCRIPT transaction.
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",4,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",4,"VAL",1,0)
$$DSP20^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",5,0)
DSP21^Electronic Prescription Order Number^AN^35^21^O
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",5,"DES",0)
^^2^2^3151027^
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",5,"DES",1,0)
This field will be populated with the Initiator Control Reference from
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",5,"DES",2,0)
field UIH-030-01 in the SCRIPT standard.
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",5,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",7,"SEG",3,"DAT",5,"VAL",1,0)
$$DSP21^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",4,0)
PRE^Prescriber Information^DSP^R^1^4
"DATA",58.4,1,"VER",7,"SEG",4,"DAT",0)
^58.400111I^2^2
"DATA",58.4,1,"VER",7,"SEG",4,"DAT",1,0)
PRE08^Phone Number^N^10^8^O
"DATA",58.4,1,"VER",7,"SEG",4,"DAT",1,"DES",0)
^^1^1^3151027^
"DATA",58.4,1,"VER",7,"SEG",4,"DAT",1,"DES",1,0)
The prescriber's primary phone number.
"DATA",58.4,1,"VER",7,"SEG",4,"DAT",1,"VAL",0)
^^1^1^3151115^
"DATA",58.4,1,"VER",7,"SEG",4,"DAT",1,"VAL",1,0)
$$PRE08^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",4,"DAT",2,0)
PRE04^Prescriber State License Number^AN^20^4^O
"DATA",58.4,1,"VER",7,"SEG",4,"DAT",2,"DES",0)
^58.4001111^2^2^3151217^
"DATA",58.4,1,"VER",7,"SEG",4,"DAT",2,"DES",1,0)
Identification assigned to the Prescriber by the State Licensing Board.
"DATA",58.4,1,"VER",7,"SEG",4,"DAT",2,"DES",2,0)
Used if required by the PMP.
"DATA",58.4,1,"VER",7,"SEG",4,"DAT",2,"VAL",0)
^^1^1^3151217^
"DATA",58.4,1,"VER",7,"SEG",4,"DAT",2,"VAL",1,0)
$$PRE04^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",5,0)
PHA^Pharmacy Header^IS^R^1^2
"DATA",58.4,1,"VER",7,"SEG",5,"DAT",0)
^58.400111I^2^2
"DATA",58.4,1,"VER",7,"SEG",5,"DAT",1,0)
PHA02^NCPDP/NABP Provider ID^AN^7^2^O
"DATA",58.4,1,"VER",7,"SEG",5,"DAT",1,"DES",0)
^^2^2^3151218^
"DATA",58.4,1,"VER",7,"SEG",5,"DAT",1,"DES",1,0)
Identifier assigned to pharmacy by the National Council for Prescription
"DATA",58.4,1,"VER",7,"SEG",5,"DAT",1,"DES",2,0)
Drug Programs. Used if required by the PMP.
"DATA",58.4,1,"VER",7,"SEG",5,"DAT",1,"VAL",0)
^^1^1^3151218^
"DATA",58.4,1,"VER",7,"SEG",5,"DAT",1,"VAL",1,0)
$$PHA02^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",5,"DAT",2,0)
PHA03^DEA Number^AN^9^3^O
"DATA",58.4,1,"VER",7,"SEG",5,"DAT",2,"DES",0)
^^2^2^3151218^
"DATA",58.4,1,"VER",7,"SEG",5,"DAT",2,"DES",1,0)
Identifier assigned to the pharmacy by the Drug Enforcement Agency
"DATA",58.4,1,"VER",7,"SEG",5,"DAT",2,"DES",2,0)
Administration (DEA). Used if required by the PMP.
"DATA",58.4,1,"VER",7,"SEG",5,"DAT",2,"VAL",0)
^^1^1^3151218^
"DATA",58.4,1,"VER",7,"SEG",5,"DAT",2,"VAL",1,0)
$$PHA03^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",6,0)
TH^Transaction Header^^R^1^1
"DATA",58.4,1,"VER",7,"SEG",6,"DAT",0)
^58.400111I^1^1
"DATA",58.4,1,"VER",7,"SEG",6,"DAT",1,0)
TH04^Response ID^AN^40^4^O
"DATA",58.4,1,"VER",7,"SEG",6,"DAT",1,"DES",0)
^^2^2^3151218^
"DATA",58.4,1,"VER",7,"SEG",6,"DAT",1,"DES",1,0)
Contains the Transaction Control Number of a transaction that initiated
"DATA",58.4,1,"VER",7,"SEG",6,"DAT",1,"DES",2,0)
the transaction. Required in response transaction only.
"DATA",58.4,1,"VER",7,"SEG",6,"DAT",1,"VAL",0)
^^1^1^3151218^
"DATA",58.4,1,"VER",7,"SEG",6,"DAT",1,"VAL",1,0)
$$TH04^PSOASAP()
"DATA",58.4,1,"VER",7,"SEG",7,0)
TT^Transaction Trailer^^R^2^6
"DATA",58.4,1,"VER",7,"SEG",7,"DAT",0)
^58.400111I^1^1
"DATA",58.4,1,"VER",7,"SEG",7,"DAT",1,0)
TT01^Transaction Control Number^AN^40^1^R
"DATA",58.4,1,"VER",7,"SEG",7,"DAT",1,"DES",0)
^58.4001111^2^2^3151218^
"DATA",58.4,1,"VER",7,"SEG",7,"DAT",1,"DES",1,0)
Identifying control number that must be unique. Assigned by the originator
"DATA",58.4,1,"VER",7,"SEG",7,"DAT",1,"DES",2,0)
of the transaction. Must match the number in TH02 sent by the pharmacy.
"DATA",58.4,1,"VER",7,"SEG",7,"DAT",1,"VAL",0)
^^1^1^3151218^
"DATA",58.4,1,"VER",7,"SEG",7,"DAT",1,"VAL",1,0)
$$TT01^PSOASAP()
"DATA",58.4,2,0)
CUSTOM ASAP DEFINITION
"DATA",58.4,2,"VER",0)
^58.4001^^0
"FIA",58.4)
SPMP ASAP RECORD DEFINITION
"FIA",58.4,0)
^PS(58.4,
"FIA",58.4,0,0)
58.4
"FIA",58.4,0,1)
y^y^f^^n^^y^o^n
"FIA",58.4,0,10)

"FIA",58.4,0,11)

"FIA",58.4,0,"RLRO")

"FIA",58.4,0,"VR")
7.0^PSO
"FIA",58.4,58.4)
0
"FIA",58.4,58.4001)
0
"FIA",58.4,58.40011)
0
"FIA",58.4,58.400111)
0
"FIA",58.4,58.4001111)
0
"FIA",58.4,58.410111)
0
"FIA",58.41)
SPMP STATE PARAMETERS
"FIA",58.41,0)
^PS(58.41,
"FIA",58.41,0,0)
58.41P
"FIA",58.41,0,1)
y^n^p^^^^n^^n
"FIA",58.41,0,10)

"FIA",58.41,0,11)

"FIA",58.41,0,"RLRO")

"FIA",58.41,0,"VR")
7.0^PSO
"FIA",58.41,58.41)
1
"FIA",58.41,58.41,1)

"FIA",58.41,58.41,3)

"FIA",58.41,58.41,7)

"FIA",58.41,58.41,8)

"FIA",58.41,58.41,13)

"FIA",58.41,58.41,17)

"FIA",58.41,58.41,18)

"FIA",58.41,58.41,19)

"FIA",58.41,58.41,100)

"FIA",58.41,58.41,200)

"FIA",58.41,58.411)
0
"FIA",58.41,58.412)
0
"FIA",58.42)
SPMP EXPORT BATCH
"FIA",58.42,0)
^PS(58.42,
"FIA",58.42,0,0)
58.42I
"FIA",58.42,0,1)
y^y^p^^^^n^^n
"FIA",58.42,0,10)

"FIA",58.42,0,11)

"FIA",58.42,0,"RLRO")

"FIA",58.42,0,"VR")
7.0^PSO
"FIA",58.42,58.42)
1
"FIA",58.42,58.42001)
1
"FIA",58.42,58.42001,3)

"INI")
PRE^PSO451PI
"INIT")
POST^PSO451PI
"KRN",19,14054,-1)
2^3
"KRN",19,14054,0)
PSO SPMP MENU^State Prescription Monitoring Program (SPMP) Menu^^M^11936^^^^^^^
"KRN",19,14054,10,0)
^19.01IP^9^9
"KRN",19,14054,10,8,0)
14313^ASAP^10
"KRN",19,14054,10,8,"^")
PSO SPMP ASAP DEFINITIONS
"KRN",19,14054,10,9,0)
14314^SSH
"KRN",19,14054,10,9,"^")
PSO SPMP SSH KEY MANAGEMENT
"KRN",19,14054,"U")
STATE PRESCRIPTION MONITORING 
"KRN",19,14313,-1)
0^2
"KRN",19,14313,0)
PSO SPMP ASAP DEFINITIONS^View/Edit ASAP Definitions^^A^^^^^^^^^^1
"KRN",19,14313,1,0)
^19.06^4^4^3160120^^^^
"KRN",19,14313,1,1,0)
This option allows the user to view and customize the American Society for
"KRN",19,14313,1,2,0)
Automation in Pharmacy (ASAP) data definition format used to report outpatient
"KRN",19,14313,1,3,0)
controlled substance prescription data to the states. It provides detailed
"KRN",19,14313,1,4,0)
information about each segment and data element for each ASAP version.
"KRN",19,14313,20)
D ^PSOSPML3
"KRN",19,14313,"U")
VIEW/EDIT ASAP DEFINITIONS
"KRN",19,14314,-1)
0^4
"KRN",19,14314,0)
PSO SPMP SSH KEY MANAGEMENT^Manage Secure SHell (SSH) Keys^^A^^^^^^^^^^1
"KRN",19,14314,1,0)
^19.06^1^1^3160212^^^
"KRN",19,14314,1,1,0)
This option is used for managing SSH encryption keys used in the State Prescription Monitoring Program (SPMP) transmissions.
"KRN",19,14314,20)
D EN^PSOSPMKY
"KRN",19,14314,"U")
MANAGE SECURE SHELL (SSH) KEYS
"KRN",19,14321,-1)
1^1
"KRN",19,14321,0)
PSO SPMP VIEW ASAP DEFINITIONS
"KRN",19.1,688,-1)
0^1
"KRN",19.1,688,0)
PSO SPMP ADMIN^
"KRN",19.1,688,1,0)
^19.11^1^1^3151118^^
"KRN",19.1,688,1,1,0)
This key is used by the Outpatient Pharmacy (OP) package to grant certain users administration privileges to perform configuration updates in the State Prescription Monitoring Program (SPMP) module.
"KRN",101,6001,-1)
0^6
"KRN",101,6001,0)
PSO SPMP3 MENU^^^M^^^^^^^^
"KRN",101,6001,4)
26^4
"KRN",101,6001,10,0)
^101.01PA^6^6
"KRN",101,6001,10,1,0)
6002^SH^6^
"KRN",101,6001,10,1,"^")
PSO SPMP3 SHOW DETAILS
"KRN",101,6001,10,2,0)
6157^CV^1^
"KRN",101,6001,10,2,"^")
PSO SPMP3 COPY VERSION
"KRN",101,6001,10,3,0)
6159^CS^2^
"KRN",101,6001,10,3,"^")
PSO SPMP3 CUSTOMIZE SEGMENT
"KRN",101,6001,10,4,0)
6160^CE^3^
"KRN",101,6001,10,4,"^")
PSO SPMP3 CUSTOMIZE DATA ELEMENT
"KRN",101,6001,10,5,0)
6158^ED^5^
"KRN",101,6001,10,5,"^")
PSO SPMP3 EDIT DELIMETERS
"KRN",101,6001,10,6,0)
6161^DC^4^
"KRN",101,6001,10,6,"^")
PSO SPMP3 DELETE CUSTOMIZATION
"KRN",101,6001,26)
D SHOW^VALM,HDR^PSOSPML3 S XQORM("??")="D HELP^VALM2,HDR^PSOSPML3"
"KRN",101,6001,99)
64072,32786
"KRN",101,6002,-1)
0^7
"KRN",101,6002,0)
PSO SPMP3 SHOW DETAILS^Show/Hide Details^^A^^^^^^^^
"KRN",101,6002,4)
^^^DET
"KRN",101,6002,20)
D SHOWHID^PSOSPMA3
"KRN",101,6002,99)
64072,32786
"KRN",101,6157,-1)
0^1
"KRN",101,6157,0)
PSO SPMP3 COPY VERSION^Copy ASAP Version^^A^^^^^^^^
"KRN",101,6157,20)
D COPYVER^PSOSPMA3
"KRN",101,6157,99)
64072,32786
"KRN",101,6158,-1)
0^5
"KRN",101,6158,0)
PSO SPMP3 EDIT DELIMETERS^Edit Delimiters^^A^^^^^^^^
"KRN",101,6158,20)
D EDTDELIM^PSOSPMA3
"KRN",101,6158,99)
64072,32786
"KRN",101,6159,-1)
0^3
"KRN",101,6159,0)
PSO SPMP3 CUSTOMIZE SEGMENT^Customize Segment^^A^^^^^^^^
"KRN",101,6159,20)
D CUSSEG^PSOSPMA3
"KRN",101,6159,99)
64072,32786
"KRN",101,6160,-1)
0^2
"KRN",101,6160,0)
PSO SPMP3 CUSTOMIZE DATA ELEMENT^Customize Element^^A^^^^^^^^
"KRN",101,6160,20)
D CUSELM^PSOSPMA3
"KRN",101,6160,99)
64072,32786
"KRN",101,6161,-1)
0^4
"KRN",101,6161,0)
PSO SPMP3 DELETE CUSTOMIZATION^Delete Customization^^A^^^^^^^^
"KRN",101,6161,20)
D DELCUS^PSOSPMB3
"KRN",101,6161,99)
64072,32786
"KRN",409.61,797,-1)
0^1
"KRN",409.61,797,0)
PSO SPMP VIEW ASAP DEFINITION^1^^80^4^20^0^1^^PSO SPMP3 MENU^ASAP Definitions^1^^1
"KRN",409.61,797,1)
^PSO HIDDEN ACTIONS #5
"KRN",409.61,797,"ARRAY")
 ^TMP("PSOSPML3",$J)
"KRN",409.61,797,"FNL")
D EXIT^PSOSPML3
"KRN",409.61,797,"HDR")
D HDR^PSOSPML3
"KRN",409.61,797,"HLP")
D HELP^PSOSPML3
"KRN",409.61,797,"INIT")
D INIT^PSOSPML3
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",141,-1)
1^1
"PKG",141,0)
OUTPATIENT PHARMACY^PSO^OUTPATIENT LABELS, PROFILE, INVENTORY, PRESCRIPTIONS
"PKG",141,20,0)
^9.402P^^
"PKG",141,22,0)
^9.49I^1^1
"PKG",141,22,1,0)
7.0^2971216^2980917^11712
"PKG",141,22,1,"PAH",1,0)
451^3160603^1776
"PKG",141,22,1,"PAH",1,1,0)
^^289^289^3160603
"PKG",141,22,1,"PAH",1,1,1,0)
The State Prescription Monitoring Program (SPMP) Enhancement project was
"PKG",141,22,1,"PAH",1,1,2,0)
established to further enhance the VistA SPMP functionality released by patch
"PKG",141,22,1,"PAH",1,1,3,0)
PSO*7*408 back in September 2014. The SPMP VistA functionality is used to
"PKG",141,22,1,"PAH",1,1,4,0)
identify prescriptions for controlled substance drugs, Schedule 2 through 5,
"PKG",141,22,1,"PAH",1,1,5,0)
dispensed by the Veterans Health Administration (VHA) Outpatient Pharmacy
"PKG",141,22,1,"PAH",1,1,6,0)
facilities and to create and transmit an export file containing this
"PKG",141,22,1,"PAH",1,1,7,0)
information to the Prescription Drug Monitoring Program (PDMP) of each state
"PKG",141,22,1,"PAH",1,1,8,0)
on a daily basis.
"PKG",141,22,1,"PAH",1,1,9,0)
 
"PKG",141,22,1,"PAH",1,1,10,0)
After PSO*7*408 was released it was identified during the implementation
"PKG",141,22,1,"PAH",1,1,11,0)
phase that some states PDMPs had unique requirements that could not be
"PKG",141,22,1,"PAH",1,1,12,0)
fulfilled by the functionality released in PSO*7*408 which caused the SPMP
"PKG",141,22,1,"PAH",1,1,13,0)
transmissions from sites in such states to be rejected. This patch
"PKG",141,22,1,"PAH",1,1,14,0)
(PSO*7*451) will enhance the SPMP functionality to allow VHA to fulfill
"PKG",141,22,1,"PAH",1,1,15,0)
specific state requirements and successfully transmit data to those states
"PKG",141,22,1,"PAH",1,1,16,0)
PDMPs. This patch also enhances the security of Secure SHell (SSH) Keys 
"PKG",141,22,1,"PAH",1,1,17,0)
management by streamlining the SSH Key creating and restricting user access
"PKG",141,22,1,"PAH",1,1,18,0)
to the Private SSH Key content. In addition, a few smaller miscellaneous
"PKG",141,22,1,"PAH",1,1,19,0)
issues have also been addressed, which are described below.
"PKG",141,22,1,"PAH",1,1,20,0)
 
"PKG",141,22,1,"PAH",1,1,21,0)
All the changes introduced by this patch were related to the options under
"PKG",141,22,1,"PAH",1,1,22,0)
the State Prescription Monitoring Program (SPMP) Menu [PSO SPMP MENU] which
"PKG",141,22,1,"PAH",1,1,23,0)
is located under the Supervisor Functions [PSO SUPERVISOR] menu option. 
"PKG",141,22,1,"PAH",1,1,24,0)
 
"PKG",141,22,1,"PAH",1,1,25,0)
The following functionality enhancements will be delivered by this patch:
"PKG",141,22,1,"PAH",1,1,26,0)
 
"PKG",141,22,1,"PAH",1,1,27,0)
1. View/Edit ASAP Definitions [PSO SPMP ASAP DEFINITIONS] option
"PKG",141,22,1,"PAH",1,1,28,0)
   -------------------------------------------------------------
"PKG",141,22,1,"PAH",1,1,29,0)
   Some extensive enhancements have been made to this option to allow full 
"PKG",141,22,1,"PAH",1,1,30,0)
   user customization of the American Society for Automation in Pharmacy
"PKG",141,22,1,"PAH",1,1,31,0)
   (ASAP) data definition format (protocol) used to report outpatient
"PKG",141,22,1,"PAH",1,1,32,0)
   controlled substance prescription data to the states.
"PKG",141,22,1,"PAH",1,1,33,0)
 
"PKG",141,22,1,"PAH",1,1,34,0)
   a) The term '/Edit' has been added to the external name of this option
"PKG",141,22,1,"PAH",1,1,35,0)
      and the term 'VIEW' was removed from the internal option name.
"PKG",141,22,1,"PAH",1,1,36,0)
  
"PKG",141,22,1,"PAH",1,1,37,0)
   b) This option has been modified to include full customization capability 
"PKG",141,22,1,"PAH",1,1,38,0)
      for the ASAP definitions 3.0 and later versions, which will allow sites 
"PKG",141,22,1,"PAH",1,1,39,0)
      to fulfill states PDMPs' specific requirements. Moreover, sites will be
"PKG",141,22,1,"PAH",1,1,40,0)
      able to create new ASAP versions by copying an existing one, which
"PKG",141,22,1,"PAH",1,1,41,0)
      will hopefully allow them to continue transmissions well into the
"PKG",141,22,1,"PAH",1,1,42,0)
      future as new ASAP versions are released and adopted by the states
"PKG",141,22,1,"PAH",1,1,43,0)
      PDMPs.
"PKG",141,22,1,"PAH",1,1,44,0)
      
"PKG",141,22,1,"PAH",1,1,45,0)
      Below is a list of actions that have been added to this option:
"PKG",141,22,1,"PAH",1,1,46,0)
       
"PKG",141,22,1,"PAH",1,1,47,0)
      CV  Copy ASAP Version  CE  Customize Element     ED  Edit Delimiters
"PKG",141,22,1,"PAH",1,1,48,0)
      CS  Customize Segment  DC  Delete Customization  
"PKG",141,22,1,"PAH",1,1,49,0)
  
"PKG",141,22,1,"PAH",1,1,50,0)
      For more information on these new actions see the Outpatient Pharmacy
"PKG",141,22,1,"PAH",1,1,51,0)
      Manager's User Manual in the State Prescription Monitoring Program
"PKG",141,22,1,"PAH",1,1,52,0)
      (SPMP) section.
"PKG",141,22,1,"PAH",1,1,53,0)
 
"PKG",141,22,1,"PAH",1,1,54,0)
   c) Customized Data Elements and Segments will be identified by an '*' 
"PKG",141,22,1,"PAH",1,1,55,0)
      (asterisk) displayed to the right of the Data Element or Segment ID.
"PKG",141,22,1,"PAH",1,1,56,0)
 
"PKG",141,22,1,"PAH",1,1,57,0)
2. View/Edit SPMP State Parameters [PSO SPMP STATE PARAMETERS] option
"PKG",141,22,1,"PAH",1,1,58,0)
   ------------------------------------------------------------------
"PKG",141,22,1,"PAH",1,1,59,0)
   A few modifications have been made to this option to support the new 
"PKG",141,22,1,"PAH",1,1,60,0)
   functionality released by this patch.
"PKG",141,22,1,"PAH",1,1,61,0)
 
"PKG",141,22,1,"PAH",1,1,62,0)
   a) The parameter WINDOWS/NT LOCAL DIRECTORY was removed from this option
"PKG",141,22,1,"PAH",1,1,63,0)
      because this module no longer supports this operating system  due to
"PKG",141,22,1,"PAH",1,1,64,0)
      the increase in the complexity for handling SSH Keys and the fact that 
"PKG",141,22,1,"PAH",1,1,65,0)
      VHA does not use WINDOWS/NT operating system for VistA database at any
"PKG",141,22,1,"PAH",1,1,66,0)
      of its sites.
"PKG",141,22,1,"PAH",1,1,67,0)
 
"PKG",141,22,1,"PAH",1,1,68,0)
   b) The parameter REPORTING FREQUENCY IN DAYS was modified to allow a
"PKG",141,22,1,"PAH",1,1,69,0)
      maximum value of 30 days. Before this field allowed a maximum value of
"PKG",141,22,1,"PAH",1,1,70,0)
      99 days.
"PKG",141,22,1,"PAH",1,1,71,0)
        
"PKG",141,22,1,"PAH",1,1,72,0)
   c) A new parameter called RENAME FILE AFTER UPLOAD was added right after
"PKG",141,22,1,"PAH",1,1,73,0)
      the 'FILE EXTENSION' parameter. The current transmission creates and
"PKG",141,22,1,"PAH",1,1,74,0)
      sends the data file with the ".UP" file extension (for "upload"); once
"PKG",141,22,1,"PAH",1,1,75,0)
      the file is transmitted a command within sFTP (Secure File Transfer 
"PKG",141,22,1,"PAH",1,1,76,0)
      Protocol) is issued to rename the file to ".DAT" (or ".TXT") file
"PKG",141,22,1,"PAH",1,1,77,0)
      extension. This new parameter will allow the site to control whether
"PKG",141,22,1,"PAH",1,1,78,0)
      they want to keep the existing functionality by setting this parameter
"PKG",141,22,1,"PAH",1,1,79,0)
      to 'YES' or if they would like to create and transmit the file without
"PKG",141,22,1,"PAH",1,1,80,0)
      renaming it by setting this parameter to 'NO'. The parameter will be
"PKG",141,22,1,"PAH",1,1,81,0)
      initially exported with a default value of 'YES', which is consistent
"PKG",141,22,1,"PAH",1,1,82,0)
      with the existing released functionality.
"PKG",141,22,1,"PAH",1,1,83,0)
 
"PKG",141,22,1,"PAH",1,1,84,0)
   d) The parameters STATE SFTP SERVER IP ADDRESS and STATE SFTP SERVER
"PKG",141,22,1,"PAH",1,1,85,0)
      USERNAME had their maximum value lengths increased from 30 to 60 and
"PKG",141,22,1,"PAH",1,1,86,0)
      50 characters respectively to accommodate longer PDMP's DNS (Domain
"PKG",141,22,1,"PAH",1,1,87,0)
      Name System) names and the usernames they assign to VHA sites.
"PKG",141,22,1,"PAH",1,1,88,0)
 
"PKG",141,22,1,"PAH",1,1,89,0)
   e) For security reasons the parameters SFTP PRIVATE KEY TEXT and SFTP
"PKG",141,22,1,"PAH",1,1,90,0)
      PUBLIC KEY TEXT have been removed from this option as the SSH
"PKG",141,22,1,"PAH",1,1,91,0)
      encryption keys content will be handled by a new option called Manage
"PKG",141,22,1,"PAH",1,1,92,0)
      Secure SHell (SSH) Keys [PSO SPMP SSH KEY MANAGEMENT], which is
"PKG",141,22,1,"PAH",1,1,93,0)
      described below.
"PKG",141,22,1,"PAH",1,1,94,0)
  
"PKG",141,22,1,"PAH",1,1,95,0)
3. Manage Secure SHell (SSH) Keys [PSO SPMP SSH KEY MANAGEMENT] option 
"PKG",141,22,1,"PAH",1,1,96,0)
   -------------------------------------------------------------------
"PKG",141,22,1,"PAH",1,1,97,0)
   This new option was created to automate the management of SSH encryption
"PKG",141,22,1,"PAH",1,1,98,0)
   keys and to improve the security regarding their content. This new option
"PKG",141,22,1,"PAH",1,1,99,0)
   will allow sites to view the public SSH key, create a new SSH key pair and
"PKG",141,22,1,"PAH",1,1,100,0)
   also to delete an existing SSH key pair. In addition, this new option will
"PKG",141,22,1,"PAH",1,1,101,0)
   provide an extensive help text on how the SSH keys are used in the 
"PKG",141,22,1,"PAH",1,1,102,0)
   transmission process, which is shown below:
"PKG",141,22,1,"PAH",1,1,103,0)
   
"PKG",141,22,1,"PAH",1,1,104,0)
     Select one of the following:
"PKG",141,22,1,"PAH",1,1,105,0)
 
"PKG",141,22,1,"PAH",1,1,106,0)
          V         View Public SSH Key
"PKG",141,22,1,"PAH",1,1,107,0)
          N         Create New SSH Key Pair
"PKG",141,22,1,"PAH",1,1,108,0)
          D         Delete SSH Key Pair
"PKG",141,22,1,"PAH",1,1,109,0)
          H         Help with SSH Keys
"PKG",141,22,1,"PAH",1,1,110,0)
 
"PKG",141,22,1,"PAH",1,1,111,0)
     Action: V// H  Help with SSH Keys
"PKG",141,22,1,"PAH",1,1,112,0)
  
"PKG",141,22,1,"PAH",1,1,113,0)
   Secure SHell (SSH) Encryption Keys are used to automate the data 
"PKG",141,22,1,"PAH",1,1,114,0)
   transmission to the State Prescription Monitoring Programs (SPMPs). Follow
"PKG",141,22,1,"PAH",1,1,115,0)
   the steps below to successfully setup SPMP transmissions from VistA to the
"PKG",141,22,1,"PAH",1,1,116,0)
   state/vendor server:
"PKG",141,22,1,"PAH",1,1,117,0)
 
"PKG",141,22,1,"PAH",1,1,118,0)
   Step 1: Select the 'N' (Create New SSH Key Pair) Action and follow the
"PKG",141,22,1,"PAH",1,1,119,0)
           prompts to create a new pair of SSH keys. If you already have an
"PKG",141,22,1,"PAH",1,1,120,0)
           existing SSH Key Pair you can skip this step. You can check
"PKG",141,22,1,"PAH",1,1,121,0)
           whether you already have an existing SSH Key Pair through the 'V'
"PKG",141,22,1,"PAH",1,1,122,0)
           (View Public SSH Key) Action.
"PKG",141,22,1,"PAH",1,1,123,0)
 
"PKG",141,22,1,"PAH",1,1,124,0)
        Encryption Type: DSA or RSA?
"PKG",141,22,1,"PAH",1,1,125,0)
        ----------------------------
"PKG",141,22,1,"PAH",1,1,126,0)
        Digital Signature Algorithm (DSA) and Rivest, Shamir & Adleman (RSA)
"PKG",141,22,1,"PAH",1,1,127,0)
        are two of the most common encryption algorithms used by the IT
"PKG",141,22,1,"PAH",1,1,128,0)
        industry for securely sharing data. The majority of SPMP servers can
"PKG",141,22,1,"PAH",1,1,129,0)
        handle either type; however there are vendors that accept only one
"PKG",141,22,1,"PAH",1,1,130,0)
        specific type. You will need to contact the SPMP vendor support to
"PKG",141,22,1,"PAH",1,1,131,0)
        determine which type to select.
"PKG",141,22,1,"PAH",1,1,132,0)
 
"PKG",141,22,1,"PAH",1,1,133,0)
   Step 2: Share the Public SSH Key content with the state/vendor. In order
"PKG",141,22,1,"PAH",1,1,134,0)
           to successfully establish SPMP transmissions the state/vendor will
"PKG",141,22,1,"PAH",1,1,135,0)
           have to install/configure the new SSH Key created in step 1 for
"PKG",141,22,1,"PAH",1,1,136,0)
           the user id they assigned to your site. Use the 'V' (View Public
"PKG",141,22,1,"PAH",1,1,137,0)
           SSH Key) Action to retrieve the content of the Public SSH key. The
"PKG",141,22,1,"PAH",1,1,138,0)
           Public SSH Key should not contain line-feed characters, therefore
"PKG",141,22,1,"PAH",1,1,139,0)
           after you copy & paste it from the terminal emulator into an email
"PKG",141,22,1,"PAH",1,1,140,0)
           or text editor make sure it contains only one line of text (no 
"PKG",141,22,1,"PAH",1,1,141,0)
           wrapping).
"PKG",141,22,1,"PAH",1,1,142,0)
  
"PKG",141,22,1,"PAH",1,1,143,0)
4. View/Export Single Prescription [PSO SPMP SINGLE RX VIEW/EXPORT] option
"PKG",141,22,1,"PAH",1,1,144,0)
   -----------------------------------------------------------------------
"PKG",141,22,1,"PAH",1,1,145,0)
   This option was modified to highlight custom Data Elements and Segments
"PKG",141,22,1,"PAH",1,1,146,0)
   by changing the font color as well as by adding an '*' (asterisk) to the
"PKG",141,22,1,"PAH",1,1,147,0)
   right of the Data Element or Segment ID.
"PKG",141,22,1,"PAH",1,1,148,0)
 
"PKG",141,22,1,"PAH",1,1,149,0)
5. View/Export Batch [PSO SPMP BATCH VIEW/EXPORT] and Export Batch Processing
"PKG",141,22,1,"PAH",1,1,150,0)
   [PSO SPMP BATCH PROCESSING] options
"PKG",141,22,1,"PAH",1,1,151,0)
   --------------------------------------------------------------------------
"PKG",141,22,1,"PAH",1,1,152,0)
   When exporting a batch through one of these two options the users will now
"PKG",141,22,1,"PAH",1,1,153,0)
   have three different choices to execute the transmission: 'B' for 
"PKG",141,22,1,"PAH",1,1,154,0)
   Background (via TaskMan), which queues the transmission to be performed in
"PKG",141,22,1,"PAH",1,1,155,0)
   the background through TaskMan; 'F' for Foreground, which executes the
"PKG",141,22,1,"PAH",1,1,156,0)
   transmission in the foreground as it did before this patch and 'D' for
"PKG",141,22,1,"PAH",1,1,157,0)
   Debug Mode (Foreground), which will execute the transmission in the
"PKG",141,22,1,"PAH",1,1,158,0)
   foreground however it will display the sFTP debug steps, which can be very
"PKG",141,22,1,"PAH",1,1,159,0)
   helpful for troubleshooting transmission problems. 
"PKG",141,22,1,"PAH",1,1,160,0)
   Before this patch the transmission was always executed in the foreground
"PKG",141,22,1,"PAH",1,1,161,0)
   which made it difficult to troubleshoot issues with the transmissions, 
"PKG",141,22,1,"PAH",1,1,162,0)
   especially the scheduled transmissions, which are always executed in the
"PKG",141,22,1,"PAH",1,1,163,0)
   background. Below is a screen capture of the prompt for choosing the
"PKG",141,22,1,"PAH",1,1,164,0)
   transmission execution mode:
"PKG",141,22,1,"PAH",1,1,165,0)
  
"PKG",141,22,1,"PAH",1,1,166,0)
   Select Item(s): Quit// EXP   Export Batch  
"PKG",141,22,1,"PAH",1,1,167,0)
  
"PKG",141,22,1,"PAH",1,1,168,0)
   Indicate whether the transmission should be queued to run on the
"PKG",141,22,1,"PAH",1,1,169,0)
   Background via TaskMan, on the Foreground (Terminal Screen) or in Debug
"PKG",141,22,1,"PAH",1,1,170,0)
   Mode (Foreground)
"PKG",141,22,1,"PAH",1,1,171,0)
 
"PKG",141,22,1,"PAH",1,1,172,0)
      Select one of the following:
"PKG",141,22,1,"PAH",1,1,173,0)
 
"PKG",141,22,1,"PAH",1,1,174,0)
          B         Background
"PKG",141,22,1,"PAH",1,1,175,0)
          F         Foreground
"PKG",141,22,1,"PAH",1,1,176,0)
          D         Debug Mode (Foreground)
"PKG",141,22,1,"PAH",1,1,177,0)
 
"PKG",141,22,1,"PAH",1,1,178,0)
   Running Mode: F// 
"PKG",141,22,1,"PAH",1,1,179,0)
 
"PKG",141,22,1,"PAH",1,1,180,0)
6. PSO SPMP NOTIFICATIONS Mail Group
"PKG",141,22,1,"PAH",1,1,181,0)
   ---------------------------------
"PKG",141,22,1,"PAH",1,1,182,0)
   The existing mail group PSO SPMP NOTIFICATIONS released by PSO*7*408 will
"PKG",141,22,1,"PAH",1,1,183,0)
   be modified from type PRIVATE to PUBLIC.
"PKG",141,22,1,"PAH",1,1,184,0)
 
"PKG",141,22,1,"PAH",1,1,185,0)
7. SPMP Transmission Failed MailMan Message
"PKG",141,22,1,"PAH",1,1,186,0)
   ----------------------------------------
"PKG",141,22,1,"PAH",1,1,187,0)
   The Mailman message generated by the SPMP Scheduled Background Job as well
"PKG",141,22,1,"PAH",1,1,188,0)
   as by the (B)ackground option mentioned above for exporting a batch to the
"PKG",141,22,1,"PAH",1,1,189,0)
   state was modified to include Operating System sFTP Log Information, as in
"PKG",141,22,1,"PAH",1,1,190,0)
   this example from an OpenVMS environment:
"PKG",141,22,1,"PAH",1,1,191,0)
 
"PKG",141,22,1,"PAH",1,1,192,0)
   Subj: NEW YORK Prescription Monitoring Program Transmission Failed [#99999]
"PKG",141,22,1,"PAH",1,1,193,0)
   02/29/16@12:44  26 lines
"PKG",141,22,1,"PAH",1,1,194,0)
   From: SPMP TRANSMISSION  In 'IN' basket.   Page 1
"PKG",141,22,1,"PAH",1,1,195,0)
   --------------------------------------------------------------------------
"PKG",141,22,1,"PAH",1,1,196,0)
   There was a problem with the transmission of information about Controlled
"PKG",141,22,1,"PAH",1,1,197,0)
   Substance prescriptions to the NEW YORK State Prescription Monitoring
"PKG",141,22,1,"PAH",1,1,198,0)
   Program (SPMP).
"PKG",141,22,1,"PAH",1,1,199,0)
 
"PKG",141,22,1,"PAH",1,1,200,0)
   Batch #: 41
"PKG",141,22,1,"PAH",1,1,201,0)
   Period : 02/29/16 thru 02/29/16
"PKG",141,22,1,"PAH",1,1,202,0)
   Error  : Secure FTP Transmission failed.
"PKG",141,22,1,"PAH",1,1,203,0)
 
"PKG",141,22,1,"PAH",1,1,204,0)
   Please, use the option Export Batch Processing [PSO SPMP BATCH PROCESSING]
"PKG",141,22,1,"PAH",1,1,205,0)
   to manually transmit this batch to the state.
"PKG",141,22,1,"PAH",1,1,206,0)
   
"PKG",141,22,1,"PAH",1,1,207,0)
   sFTP Log:
"PKG",141,22,1,"PAH",1,1,208,0)
   ========
"PKG",141,22,1,"PAH",1,1,209,0)
   $ SET VERIFY=(PROCEDURE,IMAGE)
"PKG",141,22,1,"PAH",1,1,210,0)
   $ SET DEFAULT USER$:[SPMP]
"PKG",141,22,1,"PAH",1,1,211,0)
   $ sftp -"D3" -oIdentityFile="/USER$/SPMP/VMSSSHID." -"B" SPMP_FTP_201606021
"PKG",141,22,1,"PAH",1,1,212,0)
   6.INP -oUser=VATEST 54.175.203.159
"PKG",141,22,1,"PAH",1,1,213,0)
   debug( 2-JUN-2016 17:37:28.02): Ssh2/SSH2.C:1896: CRTL version (SYS$SHARE:D
"PKG",141,22,1,"PAH",1,1,214,0)
   SHR.EXE ident) is V8.3-01
"PKG",141,22,1,"PAH",1,1,215,0)
   debug( 2-JUN-2016 17:37:28.04): SshAppCommon/SSHAPPCOMMON.C:313: Allocating
"PKG",141,22,1,"PAH",1,1,216,0)
   bal SshRegex context.
"PKG",141,22,1,"PAH",1,1,217,0)
   debug( 2-JUN-2016 17:37:28.05): SshConfig/SSHCONFIG.C:3482: Metaconfig pars
"PKG",141,22,1,"PAH",1,1,218,0)
   stopped at line 4.
"PKG",141,22,1,"PAH",1,1,219,0)
   debug( 2-JUN-2016 17:37:28.05): SshConfig/SSHCONFIG.C:890: Setting variable
"PKG",141,22,1,"PAH",1,1,220,0)
   rboseMode' to 'FALSE'.
"PKG",141,22,1,"PAH",1,1,221,0)
   debug( 2-JUN-2016 17:37:28.06): SshConfig/SSHCONFIG.C:3390: Unable to open 
"PKG",141,22,1,"PAH",1,1,222,0)
   /ssh2_config
"PKG",141,22,1,"PAH",1,1,223,0)
   debug( 2-JUN-2016 17:37:28.07): Connecting to 54.175.203.159, port 22... 
"PKG",141,22,1,"PAH",1,1,224,0)
    not used)
"PKG",141,22,1,"PAH",1,1,225,0)
   debug( 2-JUN-2016 17:37:28.07): Ssh2/SSH2.C:2881: Entering event loop.
"PKG",141,22,1,"PAH",1,1,226,0)
   debug( 2-JUN-2016 17:37:28.12): Ssh2Client/SSHCLIENT.C:1655: Creating tra
"PKG",141,22,1,"PAH",1,1,227,0)
    protocol
"PKG",141,22,1,"PAH",1,1,228,0)
   debug( 2-JUN-2016 17:37:28.12): SshAuthMethodClient/SSHAUTHMETHODC.C:104:
"PKG",141,22,1,"PAH",1,1,229,0)
   "publickey" to usable methods. 
"PKG",141,22,1,"PAH",1,1,230,0)
   %TCPIP-E-SSH_FC_ERR_DEST, destination is not directory or does not exist
"PKG",141,22,1,"PAH",1,1,231,0)
  
"PKG",141,22,1,"PAH",1,1,232,0)
   ...
"PKG",141,22,1,"PAH",1,1,233,0)
 
"PKG",141,22,1,"PAH",1,1,234,0)
   debug( 2-JUN-2016 17:37:35.66): Ssh2/SSH2.C:327: locally_generated = TRUE
"PKG",141,22,1,"PAH",1,1,235,0)
   Disconnected; no more authentication methods available (No further authent
"PKG",141,22,1,"PAH",1,1,236,0)
   on methods available.).
"PKG",141,22,1,"PAH",1,1,237,0)
   debug( 2-JUN-2016 17:37:35.66): Ssh2Client/SSHCLIENT.C:1731: Destroying 
"PKG",141,22,1,"PAH",1,1,238,0)
   debug( 2-JUN-2016 17:37:35.66): SshConfig/SSHCONFIG.C:2888: Freeing pki. 
"PKG",141,22,1,"PAH",1,1,239,0)
   pki != NULL, user_pki = NULL)
"PKG",141,22,1,"PAH",1,1,240,0)
   debug( 2-JUN-2016 17:37:35.66): SshConnection/SSHCONN.C:2636: Destroying
"PKG",141,22,1,"PAH",1,1,241,0)
   debug( 2-JUN-2016 17:37:35.66): Ssh2Client/SSHCLIENT.C:1799: Destroying 
"PKG",141,22,1,"PAH",1,1,242,0)
   completed.
"PKG",141,22,1,"PAH",1,1,243,0)
   debug( 2-JUN-2016 17:37:35.66): SshAuthMethodClient/SSHAUTHMETHODC.C:109: 
"PKG",141,22,1,"PAH",1,1,244,0)
   oying authentication method array.
"PKG",141,22,1,"PAH",1,1,245,0)
   %TCPIP-F-SSH_FATAL, non-specific fatal error condition 
"PKG",141,22,1,"PAH",1,1,246,0)
 
"PKG",141,22,1,"PAH",1,1,247,0)
8. PSO SPMP ADMIN Security Key
"PKG",141,22,1,"PAH",1,1,248,0)
   ---------------------------
"PKG",141,22,1,"PAH",1,1,249,0)
   A new security key was created to restrict access to the following SPMP
"PKG",141,22,1,"PAH",1,1,250,0)
   functionalities:
"PKG",141,22,1,"PAH",1,1,251,0)
 
"PKG",141,22,1,"PAH",1,1,252,0)
      - ASAP Definition Customization updates through the option View/Edit
"PKG",141,22,1,"PAH",1,1,253,0)
        ASAP Definitions [PSO SPMP ASAP DEFINITIONS]. Visualization of the
"PKG",141,22,1,"PAH",1,1,254,0)
        current ASAP Definition is not restricted.
"PKG",141,22,1,"PAH",1,1,255,0)
 
"PKG",141,22,1,"PAH",1,1,256,0)
      - SPMP Parameters value updates through the option View/Edit SPMP State
"PKG",141,22,1,"PAH",1,1,257,0)
        Parameters [PSO SPMP STATE PARAMETERS]. Visualization of the current
"PKG",141,22,1,"PAH",1,1,258,0)
        SPMP parameters is not restricted.
"PKG",141,22,1,"PAH",1,1,259,0)
  
"PKG",141,22,1,"PAH",1,1,260,0)
      - SSH Key generation or replacement through the option Manage Secure
"PKG",141,22,1,"PAH",1,1,261,0)
        SHell (SSH) Keys [PSO SPMP SSH KEY MANAGEMENT]. Visualization of the
"PKG",141,22,1,"PAH",1,1,262,0)
        current public key is not restricted.
"PKG",141,22,1,"PAH",1,1,263,0)
 
"PKG",141,22,1,"PAH",1,1,264,0)
9. Misleading "File Successfully Transmitted" message for Linux OS
"PKG",141,22,1,"PAH",1,1,265,0)
   ---------------------------------------------------------------
"PKG",141,22,1,"PAH",1,1,266,0)
   The previous algorithm used to identify whether the SPMP sFTP data
"PKG",141,22,1,"PAH",1,1,267,0)
   transmission was successful was not 100% accurate for Linux Operating
"PKG",141,22,1,"PAH",1,1,268,0)
   Systems. A new algorithm has been created and it should reflect the
"PKG",141,22,1,"PAH",1,1,269,0)
   transmission status with much greater accuracy when transmitting data
"PKG",141,22,1,"PAH",1,1,270,0)
   from a Linux based environment.
"PKG",141,22,1,"PAH",1,1,271,0)
 
"PKG",141,22,1,"PAH",1,1,272,0)
10.SPMP Files Access Restrictions
"PKG",141,22,1,"PAH",1,1,273,0)
   ------------------------------
"PKG",141,22,1,"PAH",1,1,274,0)
   The FILE ACCESS setting for the SPMP files below will be opened up so
"PKG",141,22,1,"PAH",1,1,275,0)
   users can use FileMan to view and search their content. The files were
"PKG",141,22,1,"PAH",1,1,276,0)
   unintentionally released in PSO*7*408 as restricted.
"PKG",141,22,1,"PAH",1,1,277,0)
 
"PKG",141,22,1,"PAH",1,1,278,0)
    - SPMP ASAP RECORD DEFINITION (#58.4)
"PKG",141,22,1,"PAH",1,1,279,0)
    - SPMP EXPORT BATCH (#58.42)
"PKG",141,22,1,"PAH",1,1,280,0)
 
"PKG",141,22,1,"PAH",1,1,281,0)
11. Pharmacy DEA Number (ASAP Data Element PHA03)
"PKG",141,22,1,"PAH",1,1,282,0)
    ---------------------------------------------
"PKG",141,22,1,"PAH",1,1,283,0)
    The Pharmacy DEA# was previously retrieved from the INSTITUTION file
"PKG",141,22,1,"PAH",1,1,284,0)
    (#4) through the RELATED INSTITUTION field (#100) in the OUTPATIENT
"PKG",141,22,1,"PAH",1,1,285,0)
    SITE file (#59). Now, the software will look for a DEA# for the
"PKG",141,22,1,"PAH",1,1,286,0)
    institution in NPI INSTITUTION field (#101) in the OUTPATIENT SITE
"PKG",141,22,1,"PAH",1,1,287,0)
    file (#59). If the DEA# for the NPI Institution is blank the software
"PKG",141,22,1,"PAH",1,1,288,0)
    will retrieve the DEA# for the Related Institution, like it was doing
"PKG",141,22,1,"PAH",1,1,289,0)
    before this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
18
"RTN","PSO451PI")
0^7^B4221073^n/a
"RTN","PSO451PI",1,0)
PSO451PI ;BIRM/MFR - PSO*7*451 Post-install routine ;10/26/15
"RTN","PSO451PI",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**451**;DEC 1997;Build 114
"RTN","PSO451PI",3,0)
 ;
"RTN","PSO451PI",4,0)
PRE ; Pre-Install Entry Point
"RTN","PSO451PI",5,0)
 ; Killing off the old ASAP Definition - New ASAP Definition will be loaded with the Build (Preserving Customizations)
"RTN","PSO451PI",6,0)
 N DIK,DA
"RTN","PSO451PI",7,0)
 S DIK="^PS(58.4," S DA=0 F  S DA=$O(^PS(58.4,DA)) Q:'DA  D
"RTN","PSO451PI",8,0)
 . I $$GET1^DIQ(58.4,DA,.01)="ASAP RECORD DEFINITION" D ^DIK
"RTN","PSO451PI",9,0)
 . I $$GET1^DIQ(58.4,DA,.01)="STANDARD ASAP DEFINITION" D ^DIK
"RTN","PSO451PI",10,0)
 Q
"RTN","PSO451PI",11,0)
 ;
"RTN","PSO451PI",12,0)
POST ; Post-Install Entry Point
"RTN","PSO451PI",13,0)
 ; Enabling all access for all 3 files below 
"RTN","PSO451PI",14,0)
 N SECURITY
"RTN","PSO451PI",15,0)
 S SECURITY("RD")=""
"RTN","PSO451PI",16,0)
 S SECURITY("DD")=""
"RTN","PSO451PI",17,0)
 S SECURITY("RD")=""
"RTN","PSO451PI",18,0)
 S SECURITY("WR")=""
"RTN","PSO451PI",19,0)
 S SECURITY("DEL")=""
"RTN","PSO451PI",20,0)
 S SECURITY("LAYGO")=""
"RTN","PSO451PI",21,0)
 S SECURITY("AUDIT")=""
"RTN","PSO451PI",22,0)
 D FILESEC^DDMOD(58.4,.SECURITY)
"RTN","PSO451PI",23,0)
 D FILESEC^DDMOD(58.42,.SECURITY)
"RTN","PSO451PI",24,0)
 ;
"RTN","PSO451PI",25,0)
 ; Updating the following NEW fields in the SPMP STATE PARAMETERS file (#58.41):
"RTN","PSO451PI",26,0)
 ; RENAME FILE AFTER UPLOAD (#17), SFTP SSH KEY FORMAT (#18) & SFTP SSH KEY ENCRYPTION (#19)
"RTN","PSO451PI",27,0)
 N DIE,DA,ENCR,USERNAME,DR
"RTN","PSO451PI",28,0)
 S DIE="^PS(58.41,",DA=0 F  S DA=$O(^PS(58.41,DA)) Q:'DA  D
"RTN","PSO451PI",29,0)
 . S ENCR="DSA" S:$$DECRYP^XUSRB1($G(^PS(58.41,DA,"PRVKEY",3,0)))["rsa" ENCR="RSA"
"RTN","PSO451PI",30,0)
 . S DR="" I $$GET1^DIQ(58.41,DA,17)="" S DR="17///1;"
"RTN","PSO451PI",31,0)
 . S DR=DR_"18///SSH2;19///"_ENCR
"RTN","PSO451PI",32,0)
 . ; Fix for Appriss Sites that had to tweak the IP ADDRESS and USERNAME parameters to make it work
"RTN","PSO451PI",33,0)
 . I $$UP^XLFSTR($$GET1^DIQ(58.41,DA,7))["PRODPMPSFTP",$$UP^XLFSTR($$GET1^DIQ(58.41,DA,8))["USER=" D
"RTN","PSO451PI",34,0)
 . . S USERNAME=$P($$GET1^DIQ(58.41,DA,8),"=",2)_"@prodpmpsftp"
"RTN","PSO451PI",35,0)
 . . S DR=DR_";7///sftp.pmpclearinghouse.net;8///"_USERNAME
"RTN","PSO451PI",36,0)
 . D ^DIE
"RTN","PSO451PI",37,0)
 ;
"RTN","PSO451PI",38,0)
 ; Deleting unused field ERRORS (#200) from SPMP EXPORT BATCH file (#58.42)
"RTN","PSO451PI",39,0)
 S DIK="^DD(58.42,",DA=200,DA(1)=58.42 D ^DIK
"RTN","PSO451PI",40,0)
 ;
"RTN","PSO451PI",41,0)
 ; Change Mail Group PSO SPMP NOTIFICATIONS to PUBLIC
"RTN","PSO451PI",42,0)
 N DIC,X,Y,DA,DIE,DR
"RTN","PSO451PI",43,0)
 S DIC=3.8,X="PSO SPMP NOTIFICATIONS" D ^DIC I '($G(Y)>0) Q
"RTN","PSO451PI",44,0)
 S DIE=3.8,DA=+Y,DR="4///PU" D ^DIE
"RTN","PSO451PI",45,0)
 Q
"RTN","PSOASAP")
0^3^B85867649^n/a
"RTN","PSOASAP",1,0)
PSOASAP ;BIRM/MFR - American Society for Automation in Pharmacy (ASAP) Field Values ;09/30/15
"RTN","PSOASAP",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**451**;DEC 1997;Build 114
"RTN","PSOASAP",3,0)
 ;
"RTN","PSOASAP",4,0)
 ; *** TH Segment - Transaction Header ***
"RTN","PSOASAP",5,0)
TH01() ;ASAP Version (3.0, 4.0, 4.1, 4.2, etc.)
"RTN","PSOASAP",6,0)
 Q PSOASVER
"RTN","PSOASAP",7,0)
 ;
"RTN","PSOASAP",8,0)
TH02() ;ASAP 3.0 : Business Partner Implemetation Version (Not Used)
"RTN","PSOASAP",9,0)
 ;      ASAP 4.0+: Transaction Control Number
"RTN","PSOASAP",10,0)
 Q $$TH02^PSOASAP0()
"RTN","PSOASAP",11,0)
 ;
"RTN","PSOASAP",12,0)
TH03() ;ASAP 3.0 : Transaction Control Number
"RTN","PSOASAP",13,0)
 ;      ASAP 4.0+: Transaction Type (Always "01" - Send/Request Transaction)
"RTN","PSOASAP",14,0)
 Q $$TH03^PSOASAP0()
"RTN","PSOASAP",15,0)
 ;
"RTN","PSOASAP",16,0)
TH04() ;ASAP 3.0 : Transaction Type (Not Used)
"RTN","PSOASAP",17,0)
 ;      ASAP 4.0+: Response ID (Not Used)
"RTN","PSOASAP",18,0)
 Q ""
"RTN","PSOASAP",19,0)
 ;
"RTN","PSOASAP",20,0)
TH05() ;ASAP 3.0 : Message Type (Not Used)
"RTN","PSOASAP",21,0)
 ;      ASAP 4.0+: Creation Date (Format: YYYYMMDD)
"RTN","PSOASAP",22,0)
 Q $$TH05^PSOASAP0()
"RTN","PSOASAP",23,0)
 ;
"RTN","PSOASAP",24,0)
TH06() ;ASAP 3.0 : Response ID (Not Used)
"RTN","PSOASAP",25,0)
 ;      ASAP 4.0+: Creation Time. Format: HHMMSS or HHMM
"RTN","PSOASAP",26,0)
 Q $$TH06^PSOASAP0()
"RTN","PSOASAP",27,0)
 ;
"RTN","PSOASAP",28,0)
TH07() ;ASAP 3.0 : Project ID (Not Used)
"RTN","PSOASAP",29,0)
 ;      ASAP 4.0+: File Type. Returns: "T" - Test or "P" - Production
"RTN","PSOASAP",30,0)
 Q $$TH07^PSOASAP0()
"RTN","PSOASAP",31,0)
 ;
"RTN","PSOASAP",32,0)
TH08() ;ASAP 3.0 : Creation Date (Format: YYYYMMDD)
"RTN","PSOASAP",33,0)
 ;      ASAP 4.0 : Composite Element Separator (:)
"RTN","PSOASAP",34,0)
 ;      ASAP 4.1+: Routing Number (Real-time transactions only)(Not Used)
"RTN","PSOASAP",35,0)
 Q $$TH08^PSOASAP0()
"RTN","PSOASAP",36,0)
 ;
"RTN","PSOASAP",37,0)
TH09() ;ASAP 3.0 : Creation Time. Format: HHMMSS or HHMM
"RTN","PSOASAP",38,0)
 ;      ASAP 4.0+: Segment Terminator Character
"RTN","PSOASAP",39,0)
 Q $$TH09^PSOASAP0()
"RTN","PSOASAP",40,0)
 ;
"RTN","PSOASAP",41,0)
TH10() ;ASAP 3.0 : File Type
"RTN","PSOASAP",42,0)
 ;      ASAP 4.0+: N/A
"RTN","PSOASAP",43,0)
 Q $$TH10^PSOASAP0()
"RTN","PSOASAP",44,0)
 ;
"RTN","PSOASAP",45,0)
TH11() ;ASAP 3.0 : Message (Not Used)
"RTN","PSOASAP",46,0)
 ;      ASAP 4.0+: N/A
"RTN","PSOASAP",47,0)
 Q ""
"RTN","PSOASAP",48,0)
 ;
"RTN","PSOASAP",49,0)
TH12() ;ASAP 3.0 : Composite Element Separator
"RTN","PSOASAP",50,0)
 ;      ASAP 4.0+: N/A
"RTN","PSOASAP",51,0)
 Q $$TH12^PSOASAP0()
"RTN","PSOASAP",52,0)
 ;
"RTN","PSOASAP",53,0)
TH13() ;ASAP 3.0 : Data Segment Terminator Character
"RTN","PSOASAP",54,0)
 ;      ASAP 4.0+: N/A
"RTN","PSOASAP",55,0)
 Q $$TH13^PSOASAP0()
"RTN","PSOASAP",56,0)
 ;
"RTN","PSOASAP",57,0)
 ; *** IS Segment - Information Source ***
"RTN","PSOASAP",58,0)
IS01() ; Unique Information Source ID
"RTN","PSOASAP",59,0)
 Q ("VA"_+$$SITE^VASITE())
"RTN","PSOASAP",60,0)
 ;
"RTN","PSOASAP",61,0)
IS02() ; Information Source Entity Name
"RTN","PSOASAP",62,0)
 Q $$GET1^DIQ(4,+$$SITE^VASITE,100)
"RTN","PSOASAP",63,0)
 ;
"RTN","PSOASAP",64,0)
IS03() ;ASAP 3.0 : Address Information 1 (Not Used)
"RTN","PSOASAP",65,0)
 ;      ASAP 4.0+: Message (Not Used)
"RTN","PSOASAP",66,0)
 Q ""
"RTN","PSOASAP",67,0)
 ;
"RTN","PSOASAP",68,0)
IS04() ;ASAP 3.0 : Address Information 2 (Not Used)
"RTN","PSOASAP",69,0)
 ;      ASAP 4.0+: N/A
"RTN","PSOASAP",70,0)
 Q ""
"RTN","PSOASAP",71,0)
 ;
"RTN","PSOASAP",72,0)
IS05() ;ASAP 3.0 : City Address (Not Used)
"RTN","PSOASAP",73,0)
 ;      ASAP 4.0+: N/A
"RTN","PSOASAP",74,0)
 Q ""
"RTN","PSOASAP",75,0)
 ;
"RTN","PSOASAP",76,0)
IS06() ;ASAP 3.0 : State Address (Not Used)
"RTN","PSOASAP",77,0)
 ;      ASAP 4.0+: N/A
"RTN","PSOASAP",78,0)
 Q ""
"RTN","PSOASAP",79,0)
 ;
"RTN","PSOASAP",80,0)
IS07() ;ASAP 3.0 : Zip code Address (Not Used)
"RTN","PSOASAP",81,0)
 ;      ASAP 4.0+: N/A
"RTN","PSOASAP",82,0)
 Q ""
"RTN","PSOASAP",83,0)
 ;
"RTN","PSOASAP",84,0)
IS08() ;ASAP 3.0 : Phone Number (Not Used)
"RTN","PSOASAP",85,0)
 ;      ASAP 4.0+: N/A
"RTN","PSOASAP",86,0)
 Q ""
"RTN","PSOASAP",87,0)
 ;
"RTN","PSOASAP",88,0)
IS09() ;ASAP 3.0 : Contact Name (Not Used)
"RTN","PSOASAP",89,0)
 ;      ASAP 4.0+: N/A
"RTN","PSOASAP",90,0)
 Q ""
"RTN","PSOASAP",91,0)
 ;
"RTN","PSOASAP",92,0)
IS10() ;ASAP 3.0 : Message (Not Used)
"RTN","PSOASAP",93,0)
 ;      ASAP 4.0+: N/A
"RTN","PSOASAP",94,0)
 Q ""
"RTN","PSOASAP",95,0)
 ;
"RTN","PSOASAP",96,0)
IS11() ;ASAP 3.0 : Data Entry Terminal ID (Not Used)
"RTN","PSOASAP",97,0)
 ;      ASAP 4.0+: N/A
"RTN","PSOASAP",98,0)
 Q ""
"RTN","PSOASAP",99,0)
 ;
"RTN","PSOASAP",100,0)
 ; *** IR Segment - Information Receiver (ASAP 3.0 only) ***
"RTN","PSOASAP",101,0)
IR01() ; Unique Information Receiver ID
"RTN","PSOASAP",102,0)
 Q ("VA"_+$$SITE^VASITE())
"RTN","PSOASAP",103,0)
 ;
"RTN","PSOASAP",104,0)
IR02() ; Information Receiver Entity Name
"RTN","PSOASAP",105,0)
 Q $$GET1^DIQ(5,STATEIEN,.01)_" PMP PROGRAM"
"RTN","PSOASAP",106,0)
 ;
"RTN","PSOASAP",107,0)
IR03() ;Address Information 1 (Not Used)
"RTN","PSOASAP",108,0)
 Q ""
"RTN","PSOASAP",109,0)
 ;
"RTN","PSOASAP",110,0)
IR04() ;Address Information 2 (Not Used)
"RTN","PSOASAP",111,0)
 Q ""
"RTN","PSOASAP",112,0)
 ;
"RTN","PSOASAP",113,0)
IR05() ;City Address (Not Used)
"RTN","PSOASAP",114,0)
 Q ""
"RTN","PSOASAP",115,0)
 ;
"RTN","PSOASAP",116,0)
IR06() ;State Address (Not Used)
"RTN","PSOASAP",117,0)
 Q ""
"RTN","PSOASAP",118,0)
 ;
"RTN","PSOASAP",119,0)
IR07() ;Zip code Address (Not Used)
"RTN","PSOASAP",120,0)
 Q ""
"RTN","PSOASAP",121,0)
 ;
"RTN","PSOASAP",122,0)
IR08() ;Phone Number (Not Used)
"RTN","PSOASAP",123,0)
 Q ""
"RTN","PSOASAP",124,0)
 ;
"RTN","PSOASAP",125,0)
IR09() ;Contact Name (Not Used)
"RTN","PSOASAP",126,0)
 Q ""
"RTN","PSOASAP",127,0)
 ;
"RTN","PSOASAP",128,0)
IR10() ;Message (Not Used)
"RTN","PSOASAP",129,0)
 Q ""
"RTN","PSOASAP",130,0)
 ;
"RTN","PSOASAP",131,0)
 ; *** PHA Segment - Pharmacy Header ***
"RTN","PSOASAP",132,0)
PHA01() ; National Provider Identifier (NPI)
"RTN","PSOASAP",133,0)
 Q $$PHA01^PSOASAP0()
"RTN","PSOASAP",134,0)
 ;
"RTN","PSOASAP",135,0)
PHA02() ;NCPDP/NABP Provider ID
"RTN","PSOASAP",136,0)
 Q $$GET1^DIQ(59,SITEIEN,1008)
"RTN","PSOASAP",137,0)
 ;
"RTN","PSOASAP",138,0)
PHA03() ;Pharmacy DEA Number
"RTN","PSOASAP",139,0)
 Q $$PHA03^PSOASAP0()
"RTN","PSOASAP",140,0)
 ;
"RTN","PSOASAP",141,0)
PHA04() ;Pharmacy Name
"RTN","PSOASAP",142,0)
 Q $$GET1^DIQ(59,SITEIEN,.01)
"RTN","PSOASAP",143,0)
 ;
"RTN","PSOASAP",144,0)
PHA05() ;Pharmacy Address Information - Line 1
"RTN","PSOASAP",145,0)
 Q $$TRIM^XLFSTR($$GET1^DIQ(59,SITEIEN,.02))
"RTN","PSOASAP",146,0)
 ;
"RTN","PSOASAP",147,0)
PHA06() ; Pharmacy Address Information - Line 2 (Not Used)
"RTN","PSOASAP",148,0)
 Q ""
"RTN","PSOASAP",149,0)
 ;
"RTN","PSOASAP",150,0)
PHA07() ;Pharmacy City Address
"RTN","PSOASAP",151,0)
 Q $$GET1^DIQ(59,SITEIEN,.07)
"RTN","PSOASAP",152,0)
 ;
"RTN","PSOASAP",153,0)
PHA08() ;Pharmacy State Address
"RTN","PSOASAP",154,0)
 Q $$GET1^DIQ(5,STATEIEN,1)
"RTN","PSOASAP",155,0)
 ;
"RTN","PSOASAP",156,0)
PHA09() ;Pharmacy ZIP Code
"RTN","PSOASAP",157,0)
 Q $$NUMERIC^PSOASAP0($$GET1^DIQ(59,SITEIEN,.05))
"RTN","PSOASAP",158,0)
 ;
"RTN","PSOASAP",159,0)
PHA10() ;Phone Number
"RTN","PSOASAP",160,0)
 Q $$PHA10^PSOASAP0()
"RTN","PSOASAP",161,0)
 ;
"RTN","PSOASAP",162,0)
PHA11() ;Pharmacy Contact name (Not Used)
"RTN","PSOASAP",163,0)
 Q ""
"RTN","PSOASAP",164,0)
 ;
"RTN","PSOASAP",165,0)
PHA12() ;Pharmacy Chain Site ID (Not Used)
"RTN","PSOASAP",166,0)
 Q ""
"RTN","PSOASAP",167,0)
 ;
"RTN","PSOASAP",168,0)
PHA13() ;Message (Not Used)
"RTN","PSOASAP",169,0)
 Q ""
"RTN","PSOASAP",170,0)
 ;
"RTN","PSOASAP",171,0)
 ; *** PAT Segment - Patient Information ***
"RTN","PSOASAP",172,0)
PAT01() ;  ASAP 3.0 : Not Used
"RTN","PSOASAP",173,0)
 ;         ASAP 4.0+: ID Qualifier of Patient Identifier (Always "US" - United States)
"RTN","PSOASAP",174,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP",175,0)
 Q "US"
"RTN","PSOASAP",176,0)
 ;
"RTN","PSOASAP",177,0)
PAT02() ;ID Qualifier (Always "07" - Social Security Number)
"RTN","PSOASAP",178,0)
 Q "07"
"RTN","PSOASAP",179,0)
 ;
"RTN","PSOASAP",180,0)
PAT03() ;ASAP 3.0 : Unique System ID - Patient (Not Used)
"RTN","PSOASAP",181,0)
 ;       ASAP 4.0+: ID of Patient (SSN)
"RTN","PSOASAP",182,0)
 Q $$PAT03^PSOASAP0()
"RTN","PSOASAP",183,0)
 ;
"RTN","PSOASAP",184,0)
PAT04() ;ASAP 3.0 : SSN
"RTN","PSOASAP",185,0)
 ;       ASAP 4.0+: ID Qualifier of Additional Patient Identifier (Not Used)
"RTN","PSOASAP",186,0)
 Q $$PAT04^PSOASAP0()
"RTN","PSOASAP",187,0)
 ;
"RTN","PSOASAP",188,0)
PAT05() ;Additional Patient ID Qualifier (Not Used)
"RTN","PSOASAP",189,0)
 Q ""
"RTN","PSOASAP",190,0)
 ;
"RTN","PSOASAP",191,0)
PAT06() ;Additional ID (Not Used)
"RTN","PSOASAP",192,0)
 Q ""
"RTN","PSOASAP",193,0)
 ;
"RTN","PSOASAP",194,0)
PAT07() ;Patient Last Name
"RTN","PSOASAP",195,0)
 Q PSONAME("LAST")
"RTN","PSOASAP",196,0)
 ;
"RTN","PSOASAP",197,0)
PAT08() ;Patient First Name
"RTN","PSOASAP",198,0)
 Q PSONAME("FIRST")
"RTN","PSOASAP",199,0)
 ;
"RTN","PSOASAP",200,0)
PAT09() ;Patient Middle Name or Initial
"RTN","PSOASAP",201,0)
 Q PSONAME("MIDDLE")
"RTN","PSOASAP",202,0)
 ;
"RTN","PSOASAP",203,0)
PAT10() ;Name Prefix
"RTN","PSOASAP",204,0)
 Q PSONAME("PREFIX")
"RTN","PSOASAP",205,0)
 ;
"RTN","PSOASAP",206,0)
PAT11() ;Name Suffix
"RTN","PSOASAP",207,0)
 Q PSONAME("SUFFIX")
"RTN","PSOASAP",208,0)
 ;
"RTN","PSOASAP",209,0)
PAT12() ;Patient Address Information - Line 1
"RTN","PSOASAP",210,0)
 Q $$PAT12^PSOASAP0()
"RTN","PSOASAP",211,0)
 ;
"RTN","PSOASAP",212,0)
PAT13() ;Patient Address Information - Line 2
"RTN","PSOASAP",213,0)
 Q $$PAT13^PSOASAP0()
"RTN","PSOASAP",214,0)
 ;
"RTN","PSOASAP",215,0)
PAT14() ;Patient City Address
"RTN","PSOASAP",216,0)
 Q $P($G(VAPA(4)),"^",1)
"RTN","PSOASAP",217,0)
 ;
"RTN","PSOASAP",218,0)
PAT15() ;Patient State Address
"RTN","PSOASAP",219,0)
 Q $$PAT15^PSOASAP0()
"RTN","PSOASAP",220,0)
 ;
"RTN","PSOASAP",221,0)
PAT16() ;Patient ZIP Code
"RTN","PSOASAP",222,0)
 Q $TR($P($G(VAPA(11)),"^",1),"-")
"RTN","PSOASAP",223,0)
 ;
"RTN","PSOASAP",224,0)
PAT17() ;Patient Phone Number
"RTN","PSOASAP",225,0)
 Q $$PAT17^PSOASAP0()
"RTN","PSOASAP",226,0)
 ;
"RTN","PSOASAP",227,0)
PAT18() ;ASAP 3.0 : Email Address (Not Used)
"RTN","PSOASAP",228,0)
 ;       ASAP 4.0+: Patient DOB
"RTN","PSOASAP",229,0)
 Q $$PAT18^PSOASAP0()
"RTN","PSOASAP",230,0)
 ;
"RTN","PSOASAP",231,0)
PAT19() ;ASAP 3.0 : Patient DOB
"RTN","PSOASAP",232,0)
 ;       ASAP 4.0+: Patient Gender Code
"RTN","PSOASAP",233,0)
 Q $$PAT19^PSOASAP0()
"RTN","PSOASAP",234,0)
 ;
"RTN","PSOASAP",235,0)
PAT20() ;ASAP 3.0 : Patient Gender Code
"RTN","PSOASAP",236,0)
 ;       ASAP 4.0+: Species Code (Always return "01" for 'Human')
"RTN","PSOASAP",237,0)
 Q $$PAT20^PSOASAP0()
"RTN","PSOASAP",238,0)
 ;
"RTN","PSOASAP",239,0)
PAT21() ;Patient Location Code (Always return "10" for 'Outpatient')
"RTN","PSOASAP",240,0)
 Q "10"
"RTN","PSOASAP",241,0)
 ;
"RTN","PSOASAP",242,0)
PAT22() ;ASAP 3.0 : Primary Prescription Coverage Type (Not Used)
"RTN","PSOASAP",243,0)
 ;       ASAP 4.0+:Country of Non-U.S. Resident
"RTN","PSOASAP",244,0)
 Q $$PAT22^PSOASAP0()
"RTN","PSOASAP",245,0)
 ;
"RTN","PSOASAP",246,0)
PAT23() ;ASAP 3.0: Secondary Prescription Coverage Type (Not Used)
"RTN","PSOASAP",247,0)
 Q ""
"RTN","PSOASAP",248,0)
 ;
"RTN","PSOASAP",249,0)
PAT24() ;ASAP 3.0: Language Code (Not Used)
"RTN","PSOASAP",250,0)
 Q ""
"RTN","PSOASAP",251,0)
 ;
"RTN","PSOASAP",252,0)
PAT25() ;ASAP 3.0: Work Phone Number (Not Used)
"RTN","PSOASAP",253,0)
 Q ""
"RTN","PSOASAP",254,0)
 ;
"RTN","PSOASAP",255,0)
PAT26() ;ASAP 3.0: Alternate Phone Number (Not Used)
"RTN","PSOASAP",256,0)
 Q ""
"RTN","PSOASAP",257,0)
 ;
"RTN","PSOASAP",258,0)
PAT27() ;ASAP 3.0: Drivers License Number
"RTN","PSOASAP",259,0)
 Q ""
"RTN","PSOASAP",260,0)
 ;
"RTN","PSOASAP",261,0)
PAT28() ;ASAP 3.0: Facility Code (Not Used)
"RTN","PSOASAP",262,0)
 Q ""
"RTN","PSOASAP",263,0)
 ;
"RTN","PSOASAP",264,0)
PAT29() ;ASAP 3.0: Unit Identifier (Not Used)
"RTN","PSOASAP",265,0)
 Q ""
"RTN","PSOASAP",266,0)
 ;
"RTN","PSOASAP",267,0)
PAT30() ;ASAP 3.0: Room Number (Not Used)
"RTN","PSOASAP",268,0)
 Q ""
"RTN","PSOASAP",269,0)
 ;
"RTN","PSOASAP",270,0)
PAT31() ;ASAP 3.0: Bed (Not Used)
"RTN","PSOASAP",271,0)
 Q ""
"RTN","PSOASAP",272,0)
 ;
"RTN","PSOASAP",273,0)
PAT32() ;ASAP 3.0: Medical Record Number (Not Used)
"RTN","PSOASAP",274,0)
 Q ""
"RTN","PSOASAP",275,0)
 ;
"RTN","PSOASAP",276,0)
PAT33() ;ASAP 3.0: Admission Date (Not Used)
"RTN","PSOASAP",277,0)
 Q ""
"RTN","PSOASAP",278,0)
 ;
"RTN","PSOASAP",279,0)
PAT34() ;ASAP 3.0: Admission Time (Not Used)
"RTN","PSOASAP",280,0)
 Q ""
"RTN","PSOASAP",281,0)
 ;
"RTN","PSOASAP",282,0)
PAT35() ;ASAP 3.0: Discharge Date (Not Used)
"RTN","PSOASAP",283,0)
 Q ""
"RTN","PSOASAP",284,0)
 ;
"RTN","PSOASAP",285,0)
PAT36() ;ASAP 3.0: Discharge Time (Not Used)
"RTN","PSOASAP",286,0)
 Q ""
"RTN","PSOASAP",287,0)
 ;
"RTN","PSOASAP",288,0)
PAT37() ;ASAP 3.0: Primary Coverage Start Date (Not Used)
"RTN","PSOASAP",289,0)
 Q ""
"RTN","PSOASAP",290,0)
 ;
"RTN","PSOASAP",291,0)
PAT38() ;ASAP 3.0: Not Used
"RTN","PSOASAP",292,0)
 Q ""
"RTN","PSOASAP",293,0)
 ;
"RTN","PSOASAP",294,0)
PAT39() ;ASAP 3.0: Secondary Coverage Start Date (Not Used)
"RTN","PSOASAP",295,0)
 Q ""
"RTN","PSOASAP",296,0)
 ;
"RTN","PSOASAP",297,0)
PAT40() ;ASAP 3.0: Secondary Coverage Stop Date (Not Used)
"RTN","PSOASAP",298,0)
 Q ""
"RTN","PSOASAP",299,0)
 ;
"RTN","PSOASAP",300,0)
 ; *** RX Segment - Prescription Order (ASAP 3.0 only) ***
"RTN","PSOASAP",301,0)
RX01() ;Reporting Status ("01" - Add / "02" - Change / "03" - Delete)
"RTN","PSOASAP",302,0)
 Q $S($G(RECTYPE)="N":"01",$G(RECTYPE)="R":"02",$G(RECTYPE)="V":"03",1:"")
"RTN","PSOASAP",303,0)
 ;
"RTN","PSOASAP",304,0)
RX02() ;Program Participation Status (Not Used)
"RTN","PSOASAP",305,0)
 Q ""
"RTN","PSOASAP",306,0)
 ;
"RTN","PSOASAP",307,0)
RX03() ;Prescription Number
"RTN","PSOASAP",308,0)
 Q $$GET1^DIQ(52,+$G(RXIEN),.01)
"RTN","PSOASAP",309,0)
 ;
"RTN","PSOASAP",310,0)
RX04() ;Unique System ID() - RPh (Not Used)
"RTN","PSOASAP",311,0)
 Q ""
"RTN","PSOASAP",312,0)
 ;
"RTN","PSOASAP",313,0)
RX05() ;Unique System ID() - Patient (Not Used)
"RTN","PSOASAP",314,0)
 Q ""
"RTN","PSOASAP",315,0)
 ;
"RTN","PSOASAP",316,0)
RX06() ;Unique System ID()  - Prescriber (Not Used)
"RTN","PSOASAP",317,0)
 Q ""
"RTN","PSOASAP",318,0)
 ;
"RTN","PSOASAP",319,0)
RX07() ;Unique System ID()  - Drug (Not Used)
"RTN","PSOASAP",320,0)
 Q ""
"RTN","PSOASAP",321,0)
 ;
"RTN","PSOASAP",322,0)
RX08() ;Date Rx Written (Format: YYYYMMDD)
"RTN","PSOASAP",323,0)
 Q $$RX08^PSOASAP0()
"RTN","PSOASAP",324,0)
 ;
"RTN","PSOASAP",325,0)
RX09() ;RX Start Date (Not Used)
"RTN","PSOASAP",326,0)
 Q ""
"RTN","PSOASAP",327,0)
 ;
"RTN","PSOASAP",328,0)
RX10() ;RX End Date (Not Used)
"RTN","PSOASAP",329,0)
 Q ""
"RTN","PSOASAP",330,0)
 ;
"RTN","PSOASAP",331,0)
RX11() ;Diagnosis Code Qualifier
"RTN","PSOASAP",332,0)
 Q ""
"RTN","PSOASAP",333,0)
 ;
"RTN","PSOASAP",334,0)
RX12() ;Diagnosis Code
"RTN","PSOASAP",335,0)
 Q ""
"RTN","PSOASAP",336,0)
 ;
"RTN","PSOASAP",337,0)
RX13() ;Product ID Qualifier (Always return "01" for 'NDC') 
"RTN","PSOASAP",338,0)
 Q "01"
"RTN","PSOASAP",339,0)
 ;
"RTN","PSOASAP",340,0)
RX14() ;Product ID (NDC - National Drug Code)
"RTN","PSOASAP",341,0)
 Q $$RX14^PSOASAP0()
"RTN","PSOASAP",342,0)
 ;
"RTN","PSOASAP",343,0)
RX15() ;Product Description (Not Used)
"RTN","PSOASAP",344,0)
 Q ""
"RTN","PSOASAP",345,0)
 ;
"RTN","PSOASAP",346,0)
RX16() ;DAW Code (Not Used)
"RTN","PSOASAP",347,0)
 Q ""
"RTN","PSOASAP",348,0)
 ;
"RTN","PSOASAP",349,0)
RX17() ;Quantity Dispensed
"RTN","PSOASAP",350,0)
 Q $S(RECTYPE="V":$G(RTSDATA("QTY")),1:$$RXQTY^PSOBPSUT(RXIEN,FILLNUM))
"RTN","PSOASAP",351,0)
 ;
"RTN","PSOASAP",352,0)
RX18() ;Days Supply
"RTN","PSOASAP",353,0)
 Q $S(RECTYPE="V":$G(RTSDATA("DAYSUP")),1:$$RXDAYSUP^PSOBPSUT(RXIEN,FILLNUM))
"RTN","PSOASAP",354,0)
 ;
"RTN","PSOASAP",355,0)
RX19() ;Basis of Days Supply Determination (Not Used)
"RTN","PSOASAP",356,0)
 Q ""
"RTN","PSOASAP",357,0)
 ;
"RTN","PSOASAP",358,0)
RX20() ;Refills Authorized
"RTN","PSOASAP",359,0)
 Q +$$GET1^DIQ(52,+$G(RXIEN),9)
"RTN","PSOASAP",360,0)
 ;
"RTN","PSOASAP",361,0)
RX21() ;Refills Authorized Through Date (Not Used)
"RTN","PSOASAP",362,0)
 Q ""
"RTN","PSOASAP",363,0)
 ;
"RTN","PSOASAP",364,0)
RX22() ;DEA Schedule (Not Used)
"RTN","PSOASAP",365,0)
 Q ""
"RTN","PSOASAP",366,0)
 ;
"RTN","PSOASAP",367,0)
RX23() ;Unit Dose Indicator (Not Used)
"RTN","PSOASAP",368,0)
 Q ""
"RTN","PSOASAP",369,0)
 ;
"RTN","PSOASAP",370,0)
RX24() ;Compound Indicator (Not Used)
"RTN","PSOASAP",371,0)
 Q ""
"RTN","PSOASAP",372,0)
 ;
"RTN","PSOASAP",373,0)
RX25() ;Origin Code (Not Used)
"RTN","PSOASAP",374,0)
 Q ""
"RTN","PSOASAP",375,0)
 ;
"RTN","PSOASAP",376,0)
RX26() ;Brand Versus Generic Indicator (Not Used)
"RTN","PSOASAP",377,0)
 Q ""
"RTN","PSOASAP",378,0)
 ;
"RTN","PSOASAP",379,0)
RX27() ;Original Fill Date (Not Used)
"RTN","PSOASAP",380,0)
 Q ""
"RTN","PSOASAP",381,0)
 ;
"RTN","PSOASAP",382,0)
RX28() ;AlternateRX Identifier (Not Used)
"RTN","PSOASAP",383,0)
 Q ""
"RTN","PSOASAP",384,0)
 ;
"RTN","PSOASAP",385,0)
RX29() ;Previous RX Number (Not Used)
"RTN","PSOASAP",386,0)
 Q ""
"RTN","PSOASAP",387,0)
 ;
"RTN","PSOASAP",388,0)
 ; *** DSP Segment - Dispensing Record ***
"RTN","PSOASAP",389,0)
DSP01() ;ASAP 3.0 : Reporting Status ("01" - Add / "02" - Change / "03" - Delete)
"RTN","PSOASAP",390,0)
 ;       ASAP 4.0 : Reporting Status ("" - New / "01" - Revise / "02" - Void)
"RTN","PSOASAP",391,0)
 ;       ASAP 4.1+: Reporting Status ("00" - New / "01" - Revise / "02" - Void)
"RTN","PSOASAP",392,0)
 Q $$DSP01^PSOASAP0()
"RTN","PSOASAP",393,0)
 ;
"RTN","PSOASAP",394,0)
DSP02() ;ASAP 3.0 : Program Participation Status (Not Used)
"RTN","PSOASAP",395,0)
 ;       ASAP 4.0+: Prescription Number (Not Used by ASAP 3.0)
"RTN","PSOASAP",396,0)
 Q $$DSP02^PSOASAP0()
"RTN","PSOASAP",397,0)
 ;
"RTN","PSOASAP",398,0)
DSP03() ;ASAP 3.0 : Prescription Number
"RTN","PSOASAP",399,0)
 ;       ASAP 4.0+: Date Rx Written (Format: YYYYMMDD)
"RTN","PSOASAP",400,0)
 Q $$DSP03^PSOASAP0()
"RTN","PSOASAP",401,0)
 ;
"RTN","PSOASAP",402,0)
DSP04() ;ASAP 3.0 : Refill Number
"RTN","PSOASAP",403,0)
 ;       ASAP 4.0+: Refills Authorized
"RTN","PSOASAP",404,0)
 Q $$DSP04^PSOASAP0()
"RTN","PSOASAP",405,0)
 ;
"RTN","PSOASAP",406,0)
DSP05() ;ASAP 3.0 : Unique System ID - RPh (Not Used)
"RTN","PSOASAP",407,0)
 ;       ASAP 4.0+: Date Filled (Release Date) (Format: YYYYMMDD)
"RTN","PSOASAP",408,0)
 Q $$DSP05^PSOASAP0()
"RTN","PSOASAP",409,0)
 ;
"RTN","PSOASAP",410,0)
DSP06() ;ASAP 3.0 : ;Unique System ID - Patient (Not Used)
"RTN","PSOASAP",411,0)
 ;       ASAP 4.0+: Refill Number (Partials are always "0")
"RTN","PSOASAP",412,0)
 Q $$DSP06^PSOASAP0()
"RTN","PSOASAP",413,0)
 ;
"RTN","PSOASAP",414,0)
DSP07() ;ASAP 3.0 : ;Unique System ID - Prescriber (Not Used)
"RTN","PSOASAP",415,0)
 ;       ASAP 4.0+: Product ID Qualifier (Always return "01" for 'NDC')
"RTN","PSOASAP",416,0)
 Q $$DSP07^PSOASAP0()
"RTN","PSOASAP",417,0)
 ;
"RTN","PSOASAP",418,0)
DSP08() ;Product ID (NDC - National Drug Code) (ASAP 3.0: Not Used)
"RTN","PSOASAP",419,0)
 Q $$DSP08^PSOASAP0()
"RTN","PSOASAP",420,0)
 ;
"RTN","PSOASAP",421,0)
DSP09() ;ASAP 3.0: Date Filled
"RTN","PSOASAP",422,0)
 ;       ASAP 4.0+: Quantity Dispensed
"RTN","PSOASAP",423,0)
 Q $$DSP09^PSOASAP0()
"RTN","PSOASAP",424,0)
 ;
"RTN","PSOASAP",425,0)
DSP10() ;Days Supply
"RTN","PSOASAP",426,0)
 Q $$DSP10^PSOASAP0()
"RTN","PSOASAP",427,0)
 ;
"RTN","PSOASAP",428,0)
DSP11() ;ASAP 3.0 : Product ID Qualifier (01:NDC)
"RTN","PSOASAP",429,0)
 ;       ASAP 4.0+: Drug Dosage Units Code
"RTN","PSOASAP",430,0)
 Q $$DSP11^PSOASAP0()
"RTN","PSOASAP",431,0)
 ;
"RTN","PSOASAP",432,0)
DSP12() ;ASAP 3.0: Product ID (NDC)
"RTN","PSOASAP",433,0)
 ;       ASAP 4.0+: Transmission Form of Rx Origin Code (Nature of Order)
"RTN","PSOASAP",434,0)
 Q $$DSP12^PSOASAP0()
"RTN","PSOASAP",435,0)
 ;
"RTN","PSOASAP",436,0)
DSP13() ;ASAP 3.0 : Product Description (Not Used)
"RTN","PSOASAP",437,0)
 ;       ASAP 4.0+: Partial Fill Indicator
"RTN","PSOASAP",438,0)
 Q $$DSP13^PSOASAP0()
"RTN","PSOASAP",439,0)
 ;
"RTN","PSOASAP",440,0)
DSP14() ;ASAP 3.0 : Quantity Dispensed
"RTN","PSOASAP",441,0)
 ;       ASAP 4.0+: Pharmacist National Provider Identifier (NPI)
"RTN","PSOASAP",442,0)
 Q $$DSP14^PSOASAP0()
"RTN","PSOASAP",443,0)
 ;
"RTN","PSOASAP",444,0)
DSP15() ;ASAP 3.0 : Days Supply
"RTN","PSOASAP",445,0)
 ;       ASAP 4.0+: Pharmacist State License Number (Not Used)
"RTN","PSOASAP",446,0)
 Q $$DSP15^PSOASAP0()
"RTN","PSOASAP",447,0)
 ;
"RTN","PSOASAP",448,0)
DSP16() ;ASAP 3.0 : Basis of Days Supply Determiniation (Always "3" for 'As directed by doctor')
"RTN","PSOASAP",449,0)
 ;       ASAP 4.0+: Classification Code for Payment Type (Always return "05" for 'Military Installations and VA')
"RTN","PSOASAP",450,0)
 Q $$DSP16^PSOASAP0()
"RTN","PSOASAP",451,0)
 ;
"RTN","PSOASAP",452,0)
DSP17() ;ASAP 3.0 : Refills Remaining (Not Used)
"RTN","PSOASAP",453,0)
 ;       ASAP 4.0 : N/A (up to DSP16 only)
"RTN","PSOASAP",454,0)
 ;       ASAP 4.1+: Date Sold
"RTN","PSOASAP",455,0)
 Q $$DSP17^PSOASAP0()
"RTN","PSOASAP",456,0)
 ;
"RTN","PSOASAP",457,0)
DSP18() ;ASAP 3.0: Refills Authorized Through Date (Not Used)
"RTN","PSOASAP",458,0)
 ;       ASAP 4.1: RxNorm Code (Not Used)
"RTN","PSOASAP",459,0)
 ;       ASAP 4.2: RxNorm Product Qualifier (Not Used)
"RTN","PSOASAP",460,0)
 Q ""
"RTN","PSOASAP",461,0)
 ;
"RTN","PSOASAP",462,0)
DSP19() ;ASAP 3.0: Previous Fill Date (Not Used)
"RTN","PSOASAP",463,0)
 ;       ASAP 4.1: Electronic Prescription Reference Number (Not Used)
"RTN","PSOASAP",464,0)
 ;       ASAP 4.2: RxNorm Code (Not Used)
"RTN","PSOASAP",465,0)
 Q ""
"RTN","PSOASAP",466,0)
 ;
"RTN","PSOASAP",467,0)
DSP20() ;ASAP 3.0: Previous Fill Quantity Dispensed (Not Used)
"RTN","PSOASAP",468,0)
 ;       ASAP 4.2: Electronic Prescription Reference Number (Not Used)
"RTN","PSOASAP",469,0)
 Q ""
"RTN","PSOASAP",470,0)
 ;
"RTN","PSOASAP",471,0)
DSP21() ;ASAP 3.0: Level of Service Code (Not Used)
"RTN","PSOASAP",472,0)
 ;       ASAP 4.2: Electronic Prescription Order Number (Not Used)
"RTN","PSOASAP",473,0)
 Q ""
"RTN","PSOASAP",474,0)
 ;
"RTN","PSOASAP",475,0)
DSP22() ;ASAP 3.0: Brand or Generic Indicator (Not Used)
"RTN","PSOASAP",476,0)
 Q ""
"RTN","PSOASAP",477,0)
 ;
"RTN","PSOASAP",478,0)
DSP23() ;ASAP 3.0: Patient Advisory Leaflet (Not Used)
"RTN","PSOASAP",479,0)
 Q ""
"RTN","PSOASAP",480,0)
 ;
"RTN","PSOASAP",481,0)
DSP24() ;ASAP 3.0: Warning/Auxiliary Labels (Not Used)
"RTN","PSOASAP",482,0)
 Q ""
"RTN","PSOASAP",483,0)
 ;
"RTN","PSOASAP",484,0)
DSP25() ;ASAP 3.0: Warning/Auxiliary Labels (Not Used)
"RTN","PSOASAP",485,0)
 Q ""
"RTN","PSOASAP",486,0)
 ;
"RTN","PSOASAP",487,0)
DSP26() ;ASAP 3.0: Warning/Auxiliary Labels (Not Used)
"RTN","PSOASAP",488,0)
 Q ""
"RTN","PSOASAP",489,0)
 ;
"RTN","PSOASAP",490,0)
DSP27() ;ASAP 3.0: Warning/Auxiliary Labels (Not Used)
"RTN","PSOASAP",491,0)
 Q ""
"RTN","PSOASAP",492,0)
 ;
"RTN","PSOASAP",493,0)
DSP28() ;ASAP 3.0: Warning/Auxiliary Labels (Not Used)
"RTN","PSOASAP",494,0)
 Q ""
"RTN","PSOASAP",495,0)
 ;
"RTN","PSOASAP",496,0)
DSP29() ;ASAP 3.0: Bar Code on Vial Label (Not Used)
"RTN","PSOASAP",497,0)
 Q ""
"RTN","PSOASAP",498,0)
 ;
"RTN","PSOASAP",499,0)
DSP30() ;ASAP 3.0: Group Identifier (Not Used)
"RTN","PSOASAP",500,0)
 Q ""
"RTN","PSOASAP",501,0)
 ;
"RTN","PSOASAP",502,0)
DSP31() ;ASAP 3.0: Group Rx Count (Not Used)
"RTN","PSOASAP",503,0)
 Q ""
"RTN","PSOASAP",504,0)
 ;
"RTN","PSOASAP",505,0)
DSP32() ;ASAP 3.0: Partial Fill Indicator (Not Used)
"RTN","PSOASAP",506,0)
 Q ""
"RTN","PSOASAP",507,0)
 ;
"RTN","PSOASAP",508,0)
DSP33() ;ASAP 3.0: Priority (Not Used)
"RTN","PSOASAP",509,0)
 Q ""
"RTN","PSOASAP",510,0)
 ;
"RTN","PSOASAP",511,0)
 ; *** PRE Segment - Prescriber Information ***
"RTN","PSOASAP",512,0)
PRE01() ;ASAP 3.0 : Not Used
"RTN","PSOASAP",513,0)
 ;       ASAP 4.0+: Prescriber National Provider Identifier (NPI)
"RTN","PSOASAP",514,0)
 Q $$PRE01^PSOASAP0()
"RTN","PSOASAP",515,0)
 ;
"RTN","PSOASAP",516,0)
PRE02() ; Prescriber DEA Number
"RTN","PSOASAP",517,0)
 Q $$PRE02^PSOASAP0()
"RTN","PSOASAP",518,0)
 ;
"RTN","PSOASAP",519,0)
PRE03() ;ASAP 3.0 : Prescriber NPI
"RTN","PSOASAP",520,0)
 ;       ASAP 4.0+: Prescriber DEA Number Suffix
"RTN","PSOASAP",521,0)
 Q $$PRE03^PSOASAP0()
"RTN","PSOASAP",522,0)
 ;
"RTN","PSOASAP",523,0)
PRE04() ;ASAP 3.0 : Prescriber DEA Number
"RTN","PSOASAP",524,0)
 ;       ASAP 4.0+: Prescriber State License Number (Not Used)
"RTN","PSOASAP",525,0)
 Q $$PRE04^PSOASAP0()
"RTN","PSOASAP",526,0)
 ;
"RTN","PSOASAP",527,0)
PRE05() ;ASAP 3.0 : Prescriber DEA Number Suffix
"RTN","PSOASAP",528,0)
 ;       ASAP 4.0+: Prescriber Last Name
"RTN","PSOASAP",529,0)
 Q $$PRE05^PSOASAP0()
"RTN","PSOASAP",530,0)
 ;
"RTN","PSOASAP",531,0)
PRE06() ;ASAP 3.0 : Prescriber State Lince Number (Not Used)
"RTN","PSOASAP",532,0)
 ;       ASAP 4.0+: Prescriber First Name
"RTN","PSOASAP",533,0)
 Q $$PRE06^PSOASAP0()
"RTN","PSOASAP",534,0)
 ;
"RTN","PSOASAP",535,0)
PRE07() ;ASAP 3.0 : Prescriber Alternate ID (Not Used)
"RTN","PSOASAP",536,0)
 ;       ASAP 4.0+: Prescriber Middle Name
"RTN","PSOASAP",537,0)
 Q $$PRE07^PSOASAP0()
"RTN","PSOASAP",538,0)
 ;
"RTN","PSOASAP",539,0)
PRE08() ;ASAP 3.0 : Prescriber's Last Name
"RTN","PSOASAP",540,0)
 ;       ASAP 4.0 & 4.1: N/A (Up to PRE07 only)
"RTN","PSOASAP",541,0)
 ;       ASAP 4.2: Prescriber's Phone Number
"RTN","PSOASAP",542,0)
 Q $$PRE08^PSOASAP0()
"RTN","PSOASAP",543,0)
 ;
"RTN","PSOASAP",544,0)
PRE09() ;ASAP 3.0: Prescriber' First Name
"RTN","PSOASAP",545,0)
 Q $$PRE09^PSOASAP0()
"RTN","PSOASAP",546,0)
 ;
"RTN","PSOASAP",547,0)
PRE10() ;ASAP 3.0: Prescriber' Middle Name
"RTN","PSOASAP",548,0)
 Q $$PRE10^PSOASAP0()
"RTN","PSOASAP",549,0)
 ;
"RTN","PSOASAP",550,0)
PRE11() ;ASAP 3.0: Name Prefix (Not Used)
"RTN","PSOASAP",551,0)
 Q ""
"RTN","PSOASAP",552,0)
 ;
"RTN","PSOASAP",553,0)
PRE12() ;ASAP 3.0: Name Suffix (Not Used)
"RTN","PSOASAP",554,0)
 Q ""
"RTN","PSOASAP",555,0)
 ;
"RTN","PSOASAP",556,0)
PRE13() ;ASAP 3.0: Address Information - 1 (Not Used)
"RTN","PSOASAP",557,0)
 Q ""
"RTN","PSOASAP",558,0)
 ;
"RTN","PSOASAP",559,0)
PRE14() ;ASAP 3.0: Address Information - 2 (Not Used)
"RTN","PSOASAP",560,0)
 Q ""
"RTN","PSOASAP",561,0)
 ;
"RTN","PSOASAP",562,0)
PRE15() ;ASAP 3.0: City Address (Not Used)
"RTN","PSOASAP",563,0)
 Q ""
"RTN","PSOASAP",564,0)
 ;
"RTN","PSOASAP",565,0)
PRE16() ;ASAP 3.0: State Address (Not Used)
"RTN","PSOASAP",566,0)
 Q ""
"RTN","PSOASAP",567,0)
 ;
"RTN","PSOASAP",568,0)
PRE17() ;ASAP 3.0: Zip Code Address (Not Used)
"RTN","PSOASAP",569,0)
 Q ""
"RTN","PSOASAP",570,0)
 ;
"RTN","PSOASAP",571,0)
PRE18() ;ASAP 3.0: Phone Number (Not Used)
"RTN","PSOASAP",572,0)
 Q ""
"RTN","PSOASAP",573,0)
 ;
"RTN","PSOASAP",574,0)
PRE19() ;ASAP 3.0: Prescriber Specialty (Not Used)
"RTN","PSOASAP",575,0)
 Q ""
"RTN","PSOASAP",576,0)
 ;
"RTN","PSOASAP",577,0)
PRE20() ;ASAP 3.0: Prescriber Fax Number (Not Used)
"RTN","PSOASAP",578,0)
 Q ""
"RTN","PSOASAP",579,0)
 ;
"RTN","PSOASAP",580,0)
 ; *** CDI Segment - Compound Drug Ingredient Detail ***
"RTN","PSOASAP",581,0)
CDI01() ;Compound Drug Ingredient Sequence Number (Not Used)
"RTN","PSOASAP",582,0)
 Q ""
"RTN","PSOASAP",583,0)
 ;
"RTN","PSOASAP",584,0)
CDI02() ;Product ID Qualifier (Not Used)
"RTN","PSOASAP",585,0)
 Q ""
"RTN","PSOASAP",586,0)
 ;
"RTN","PSOASAP",587,0)
CDI03() ;Product ID (Not Used)
"RTN","PSOASAP",588,0)
 Q ""
"RTN","PSOASAP",589,0)
 ;
"RTN","PSOASAP",590,0)
CDI04() ;Component Ingredient Product Description (Not Used)
"RTN","PSOASAP",591,0)
 Q ""
"RTN","PSOASAP",592,0)
 ;
"RTN","PSOASAP",593,0)
CDI05() ;Component Ingredient Quantity (Not Used)
"RTN","PSOASAP",594,0)
 Q ""
"RTN","PSOASAP",595,0)
 ;
"RTN","PSOASAP",596,0)
CDI06() ;ASAP 3.0: Component Ingredient Cost (Not Used)
"RTN","PSOASAP",597,0)
 Q ""
"RTN","PSOASAP",598,0)
 ;
"RTN","PSOASAP",599,0)
CDI07() ;ASAP 3.0: Component Ingredient Basis of Cost Determination (Not Used)
"RTN","PSOASAP",600,0)
 Q ""
"RTN","PSOASAP",601,0)
 ;
"RTN","PSOASAP",602,0)
CDI08() ;ASAP 3.0: Compound Drug Dosage Units Code (Not Used)
"RTN","PSOASAP",603,0)
 Q ""
"RTN","PSOASAP",604,0)
 ;
"RTN","PSOASAP",605,0)
 ; *** CSR Segment - Controlled Substance Reporting (ASAP 3.0 only) ***
"RTN","PSOASAP",606,0)
CSR01() ;State Issuing Rx Serial Number (Not Used)
"RTN","PSOASAP",607,0)
 Q ""
"RTN","PSOASAP",608,0)
 ;
"RTN","PSOASAP",609,0)
CSR02() ;State Issued Rx Serial Number (Not Used)
"RTN","PSOASAP",610,0)
 Q ""
"RTN","PSOASAP",611,0)
 ;
"RTN","PSOASAP",612,0)
CSR03() ;ID Qualifier (Not Used)
"RTN","PSOASAP",613,0)
 Q ""
"RTN","PSOASAP",614,0)
 ;
"RTN","PSOASAP",615,0)
CSR04() ;ID of Person Picking Up Rx (Not Used)
"RTN","PSOASAP",616,0)
 Q ""
"RTN","PSOASAP",617,0)
 ;
"RTN","PSOASAP",618,0)
CSR05() ;Relationship of Person Picking Up Rx (Not Used)
"RTN","PSOASAP",619,0)
 Q ""
"RTN","PSOASAP",620,0)
 ;
"RTN","PSOASAP",621,0)
CSR06() ;Last Name of Person Picking Up Rx (Not Used)
"RTN","PSOASAP",622,0)
 Q ""
"RTN","PSOASAP",623,0)
 ;
"RTN","PSOASAP",624,0)
CSR07() ;First Name of Person Picking Up Rx (Not Used)
"RTN","PSOASAP",625,0)
 Q ""
"RTN","PSOASAP",626,0)
 ;
"RTN","PSOASAP",627,0)
 ; *** AIR Segment - Additional Information Reporting (Not Used by ASAP 3.0) ***
"RTN","PSOASAP",628,0)
AIR01() ;State Issuing Rx Serial Number (Not Used)
"RTN","PSOASAP",629,0)
 Q ""
"RTN","PSOASAP",630,0)
 ;
"RTN","PSOASAP",631,0)
AIR02() ;State Issued Rx Serial Number (Not Used)
"RTN","PSOASAP",632,0)
 Q ""
"RTN","PSOASAP",633,0)
 ;
"RTN","PSOASAP",634,0)
AIR03() ;Issuing Jurisdiction (Not Used)
"RTN","PSOASAP",635,0)
 Q ""
"RTN","PSOASAP",636,0)
 ;
"RTN","PSOASAP",637,0)
AIR04() ;ID Qualifier of Person Dropping Off or Picking Up Rx (Not Used)
"RTN","PSOASAP",638,0)
 Q ""
"RTN","PSOASAP",639,0)
 ;
"RTN","PSOASAP",640,0)
AIR05() ;ID of Person Dropping Off or Picking Up Rx (Not Used)
"RTN","PSOASAP",641,0)
 Q ""
"RTN","PSOASAP",642,0)
 ;
"RTN","PSOASAP",643,0)
AIR06() ;Relationship of Person Dropping Off or Picking Up Rx (Not Used)
"RTN","PSOASAP",644,0)
 Q ""
"RTN","PSOASAP",645,0)
 ;
"RTN","PSOASAP",646,0)
AIR07() ;Last Name of Person Dropping Off or Picking Up Rx (Not Used)
"RTN","PSOASAP",647,0)
 Q ""
"RTN","PSOASAP",648,0)
 ;
"RTN","PSOASAP",649,0)
AIR08() ;First Name of Person Dropping Off or Picking Up Rx (Not Used)
"RTN","PSOASAP",650,0)
 Q ""
"RTN","PSOASAP",651,0)
 ;
"RTN","PSOASAP",652,0)
AIR09() ;Last Name or Initials of Pharmacist (Not Used)
"RTN","PSOASAP",653,0)
 Q ""
"RTN","PSOASAP",654,0)
 ;
"RTN","PSOASAP",655,0)
AIR10() ;First Name of Pharmacist (Not Used)
"RTN","PSOASAP",656,0)
 Q ""
"RTN","PSOASAP",657,0)
 ;
"RTN","PSOASAP",658,0)
AIR11() ;ASAP 4.2: Dropping Off/Picking Up Identifier Qualifier
"RTN","PSOASAP",659,0)
 Q ""
"RTN","PSOASAP",660,0)
 ;
"RTN","PSOASAP",661,0)
 ; *** RPH Segment - Pharmacist Information (ASAP 3.0 Only) ***
"RTN","PSOASAP",662,0)
RPH01() ;Reporting Status (Not Used)
"RTN","PSOASAP",663,0)
 Q ""
"RTN","PSOASAP",664,0)
 ;
"RTN","PSOASAP",665,0)
RPH02() ;Unique System ID (Not Used)
"RTN","PSOASAP",666,0)
 Q ""
"RTN","PSOASAP",667,0)
 ;
"RTN","PSOASAP",668,0)
RPH03() ;National Provider Identification (NPI)
"RTN","PSOASAP",669,0)
 Q $$RPH03^PSOASAP0()
"RTN","PSOASAP",670,0)
 ;
"RTN","PSOASAP",671,0)
RPH04() ;Pharmacist State License Number (Not Used)
"RTN","PSOASAP",672,0)
 Q ""
"RTN","PSOASAP",673,0)
 ;
"RTN","PSOASAP",674,0)
RPH05() ;Pharmacist Alternate ID (Not Used)
"RTN","PSOASAP",675,0)
 Q ""
"RTN","PSOASAP",676,0)
 ;
"RTN","PSOASAP",677,0)
RPH06() ;Pharmacist Last Name
"RTN","PSOASAP",678,0)
 Q $$RPH06^PSOASAP0()
"RTN","PSOASAP",679,0)
 ;
"RTN","PSOASAP",680,0)
RPH07() ;Pharmacist First Name
"RTN","PSOASAP",681,0)
 Q $$RPH07^PSOASAP0()
"RTN","PSOASAP",682,0)
 ;
"RTN","PSOASAP",683,0)
RPH08() ;Pharmacist Middle Name
"RTN","PSOASAP",684,0)
 Q $$RPH08^PSOASAP0()
"RTN","PSOASAP",685,0)
 ;
"RTN","PSOASAP",686,0)
RPH09() ;Name Prefix (Not Used)
"RTN","PSOASAP",687,0)
 Q ""
"RTN","PSOASAP",688,0)
 ;
"RTN","PSOASAP",689,0)
RPH10() ;Name Suffix (Not Used)
"RTN","PSOASAP",690,0)
 Q ""
"RTN","PSOASAP",691,0)
 ;
"RTN","PSOASAP",692,0)
RPH11() ;Pharmacist Title (Not Used)
"RTN","PSOASAP",693,0)
 Q ""
"RTN","PSOASAP",694,0)
 ;
"RTN","PSOASAP",695,0)
 ; *** PLN Segment - Third-Party Plan (ASAP 3.0 Only) ***
"RTN","PSOASAP",696,0)
PLN01() ;Reporting Status (Not Used)
"RTN","PSOASAP",697,0)
 Q ""
"RTN","PSOASAP",698,0)
 ;
"RTN","PSOASAP",699,0)
PLN02() ;Plan Coverage Status to Patient (Not Used)
"RTN","PSOASAP",700,0)
 Q ""
"RTN","PSOASAP",701,0)
 ;
"RTN","PSOASAP",702,0)
PLN03() ;Unique System ID - Plan (Not Used)
"RTN","PSOASAP",703,0)
 Q ""
"RTN","PSOASAP",704,0)
 ;
"RTN","PSOASAP",705,0)
PLN04() ;Classification Code for Plan Type (Not Used)
"RTN","PSOASAP",706,0)
 Q ""
"RTN","PSOASAP",707,0)
 ;
"RTN","PSOASAP",708,0)
PLN05() ;Plan Name (Not Used)
"RTN","PSOASAP",709,0)
 Q ""
"RTN","PSOASAP",710,0)
 ;
"RTN","PSOASAP",711,0)
PLN06() ;Processor BIN (Not Used)
"RTN","PSOASAP",712,0)
 Q ""
"RTN","PSOASAP",713,0)
 ;
"RTN","PSOASAP",714,0)
PLN07() ;Processor Control Number (Not Used)
"RTN","PSOASAP",715,0)
 Q ""
"RTN","PSOASAP",716,0)
 ;
"RTN","PSOASAP",717,0)
PLN08() ;Plan ID (Not Used)
"RTN","PSOASAP",718,0)
 Q ""
"RTN","PSOASAP",719,0)
 ;
"RTN","PSOASAP",720,0)
PLN09() ;Group Number (Not Used)
"RTN","PSOASAP",721,0)
 Q ""
"RTN","PSOASAP",722,0)
 ;
"RTN","PSOASAP",723,0)
PLN10() ;Cardholder ID (Not Used)
"RTN","PSOASAP",724,0)
 Q ""
"RTN","PSOASAP",725,0)
 ;
"RTN","PSOASAP",726,0)
PLN11() ;Person Code (Not Used)
"RTN","PSOASAP",727,0)
 Q ""
"RTN","PSOASAP",728,0)
 ;
"RTN","PSOASAP",729,0)
PLN12() ;Relationship Code (Not Used)
"RTN","PSOASAP",730,0)
 Q ""
"RTN","PSOASAP",731,0)
 ;
"RTN","PSOASAP",732,0)
 ; *** TP Segment - Pharmacy Trailer ***
"RTN","PSOASAP",733,0)
TP01() ;Detail Segment Count
"RTN","PSOASAP",734,0)
 Q PSOTPCNT
"RTN","PSOASAP",735,0)
 ;
"RTN","PSOASAP",736,0)
 ; *** TT Segment - Transaction Set Trailer ***
"RTN","PSOASAP",737,0)
TT01() ;Transaction Control Number
"RTN","PSOASAP",738,0)
 ;      ASAP 3.0 : Same as TH03
"RTN","PSOASAP",739,0)
 ;      ASAP 4.0+: Same as TH02
"RTN","PSOASAP",740,0)
 Q $$TT01^PSOASAP0()
"RTN","PSOASAP",741,0)
 ;
"RTN","PSOASAP",742,0)
TT02() ;Segment Count
"RTN","PSOASAP",743,0)
 Q $G(PSOTTCNT)
"RTN","PSOASAP0")
0^4^B164871797^B194204356
"RTN","PSOASAP0",1,0)
PSOASAP0 ;BIRM/MFR - American Society for Automation in Pharmacy (ASAP) Segments & Fields ;09/07/12
"RTN","PSOASAP0",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408,451**;DEC 1997;Build 114
"RTN","PSOASAP0",3,0)
 ;External reference to $$NATURE^ORUTL3 supported by DBIA 5890
"RTN","PSOASAP0",4,0)
 ;External reference to ^ORDEA is supported by DBIA 5709
"RTN","PSOASAP0",5,0)
 ;External reference to PATIENT file (#2) supported by DBIA 5597
"RTN","PSOASAP0",6,0)
 ;External reference to $$NPI^XUSNPI supported by DBIA 4532
"RTN","PSOASAP0",7,0)
 ;External reference to $$DIV4^XUSER supported by DBIA 2533
"RTN","PSOASAP0",8,0)
 ;            
"RTN","PSOASAP0",9,0)
 ; ******************** ASAP 1995 Version ********************
"RTN","PSOASAP0",10,0)
ASAP95(RXIEN,FILL) ;Returns the entire ASAP 1995 record for the Rx/Fill
"RTN","PSOASAP0",11,0)
 ;Input: (r) RXIEN - Rx IEN (#52) 
"RTN","PSOASAP0",12,0)
 ;       (r) FILL  - Fill #
"RTN","PSOASAP0",13,0)
 N ASAP95,RXNUM
"RTN","PSOASAP0",14,0)
 S RXNUM=$E(RXIEN+10000000,$L(RXIEN+10000000)-6,$L(RXIEN+10000000))
"RTN","PSOASAP0",15,0)
 S $E(ASAP95,1,3)="ASB"                               ;Transmission Type Identifier
"RTN","PSOASAP0",16,0)
 S $E(ASAP95,4,9)="VA"_$E(10000+$$SITE^VASITE(),2,5)  ;Bank Identification Number
"RTN","PSOASAP0",17,0)
 S $E(ASAP95,10,11)="A2"                              ;ASAP Version (A2 = 1995)
"RTN","PSOASAP0",18,0)
 S $E(ASAP95,12,13)="01"                              ;Transaction Code ("01" - Controlled Substance)
"RTN","PSOASAP0",19,0)
 S $E(ASAP95,14,25)=$E($$PHA03^PSOASAP(),1,12)        ;Pharmacy DEA# Number
"RTN","PSOASAP0",20,0)
 S $E(ASAP95,26,45)=$$PAT03^PSOASAP()                 ;Patient ID (SSN)
"RTN","PSOASAP0",21,0)
 S $E(ASAP95,46,48)=$E($$PAT16^PSOASAP(),1,3)         ;Patient's Zip Code (first 3 digits)
"RTN","PSOASAP0",22,0)
 S $E(ASAP95,49,56)=$$PAT18^PSOASAP()                 ;Patient's DOB  (Format: YYYYMMDD)
"RTN","PSOASAP0",23,0)
 S $E(ASAP95,57,57)=$S($$PAT19^PSOASAP()="M":1,1:"2") ;Patient's Gender
"RTN","PSOASAP0",24,0)
 S $E(ASAP95,58,65)=$$DSP05^PSOASAP()                 ;Date Filled (Release/RTS Date) (Format: YYYYMMDD)
"RTN","PSOASAP0",25,0)
 S $E(ASAP95,66,72)=RXNUM                             ;Prescription Number (IEN - Because it must be 7-digit numeric )
"RTN","PSOASAP0",26,0)
 S $E(ASAP95,73,74)=$E(FILL+100,2,3)                  ;Fill Number
"RTN","PSOASAP0",27,0)
 S $E(ASAP95,75,79)=$E(100000+$$DSP09^PSOASAP(),2,6)  ;Quantity
"RTN","PSOASAP0",28,0)
 S $E(ASAP95,80,82)=$E(1000+$$DSP10^PSOASAP(),2,4)    ;Days Supply
"RTN","PSOASAP0",29,0)
 S $E(ASAP95,83,83)="1"                               ;Compound Flag (1=Not compound)
"RTN","PSOASAP0",30,0)
 S $E(ASAP95,84,94)=$E($$DSP08^PSOASAP(),1,11)        ;NDC (Fomart: 99999999999)
"RTN","PSOASAP0",31,0)
 S $E(ASAP95,95,104)=$E($$PRE02^PSOASAP(),1,10)       ;Prescriber's DEA #
"RTN","PSOASAP0",32,0)
 S $E(ASAP95,105,108)=""                              ;DEA Suffix
"RTN","PSOASAP0",33,0)
 S $E(ASAP95,109,116)=$$DSP03^PSOASAP()               ;Date Written (Format: YYYYMMDD)
"RTN","PSOASAP0",34,0)
 S $E(ASAP95,117,118)=$E(100+$$DSP04^PSOASAP(),2,3)   ;Refills Authorized
"RTN","PSOASAP0",35,0)
 S $E(ASAP95,119,119)=$S(+$$DSP12^PSOASAP()>2:0,1:+$$DSP12^PSOASAP()) ;Rx Origin Code (0:Not Specified/1:Written/2:Telephone)
"RTN","PSOASAP0",36,0)
 S $E(ASAP95,120,121)="03"                            ;Customer Location (Always: "03" - Outpatient)
"RTN","PSOASAP0",37,0)
 S $E(ASAP95,122,128)=""                              ;DEA Suffix
"RTN","PSOASAP0",38,0)
 S $E(ASAP95,129,138)=$E($$PRE03^PSOASAP(),1,10)      ;Alternate Prescriber # (VA #)
"RTN","PSOASAP0",39,0)
 S $E(ASAP95,139,153)=$E($$PAT07^PSOASAP(),1,15)      ;Patient's Last Name
"RTN","PSOASAP0",40,0)
 S $E(ASAP95,154,168)=$E($$PAT08^PSOASAP(),1,15)      ;Patient's First Name
"RTN","PSOASAP0",41,0)
 S $E(ASAP95,169,198)=$E($$PAT12^PSOASAP(),1,30)      ;Patient's Address
"RTN","PSOASAP0",42,0)
 S $E(ASAP95,199,200)=$E($$PAT15^PSOASAP(),1,2)       ;Patient's State
"RTN","PSOASAP0",43,0)
 S $E(ASAP95,201,209)=$E($$PAT16^PSOASAP(),1,9)       ;Patient's Zip Code
"RTN","PSOASAP0",44,0)
 S $E(ASAP95,210,222)=""                              ;Filler
"RTN","PSOASAP0",45,0)
 Q ASAP95
"RTN","PSOASAP0",46,0)
 ;
"RTN","PSOASAP0",47,0)
 ; ******************** ASAP 3.0 and above versions ********************
"RTN","PSOASAP0",48,0)
 ; *** TH Segment ***
"RTN","PSOASAP0",49,0)
TH02() ;ASAP 3.0 : Business Partner Implemetation Version (Not Used)
"RTN","PSOASAP0",50,0)
 ;      ASAP 4.0+: Transaction Control Number
"RTN","PSOASAP0",51,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP0",52,0)
 Q +$$SITE^VASITE()_"-"_+$G(BATCHIEN)
"RTN","PSOASAP0",53,0)
 ;
"RTN","PSOASAP0",54,0)
TH03() ;ASAP 3.0 : Transaction Control Number
"RTN","PSOASAP0",55,0)
 ;      ASAP 4.0+: Transaction Type (Always "01" - Send/Request Transaction)
"RTN","PSOASAP0",56,0)
 I PSOASVER="3.0" Q +$$SITE^VASITE()_"-"_+$G(BATCHIEN)
"RTN","PSOASAP0",57,0)
 Q "01"
"RTN","PSOASAP0",58,0)
 ;
"RTN","PSOASAP0",59,0)
TH05() ;ASAP 3.0 : Message Type (Not Used)
"RTN","PSOASAP0",60,0)
 ;      ASAP 4.0+: Creation Date (Format: YYYYMMDD)
"RTN","PSOASAP0",61,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP0",62,0)
 Q $$FMTHL7^XLFDT($$HTFM^XLFDT($H)\1)
"RTN","PSOASAP0",63,0)
 ;
"RTN","PSOASAP0",64,0)
TH06() ;ASAP 3.0 : Response ID (Not Used)
"RTN","PSOASAP0",65,0)
 ;      ASAP 4.0+: Creation Time. Format: HHMMSS or HHMM
"RTN","PSOASAP0",66,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP0",67,0)
 Q $E($P($$HTFM^XLFDT($H),".",2)_"000000",1,6)
"RTN","PSOASAP0",68,0)
 ;
"RTN","PSOASAP0",69,0)
TH07() ;ASAP 3.0 : Project ID (Not Used)
"RTN","PSOASAP0",70,0)
 ;      ASAP 4.0+: File Type. Returns: "T" - Test or "P" - Production
"RTN","PSOASAP0",71,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP0",72,0)
 Q $S($$PROD^XUPROD(1):"P",1:"T")
"RTN","PSOASAP0",73,0)
 ;
"RTN","PSOASAP0",74,0)
TH08() ;ASAP 3.0: Creation Date (Format: YYYYMMDD)
"RTN","PSOASAP0",75,0)
 ;      ASAP 4.0: Composite Element Separator (:)
"RTN","PSOASAP0",76,0)
 ;      ASAP 4.1+: Routing Number (Real-time transactions only) - Not Used
"RTN","PSOASAP0",77,0)
 I PSOASVER="4.0" Q ":"
"RTN","PSOASAP0",78,0)
 I PSOASVER'="3.0" Q ""
"RTN","PSOASAP0",79,0)
 Q $$FMTHL7^XLFDT($$HTFM^XLFDT($H)\1)
"RTN","PSOASAP0",80,0)
 ;
"RTN","PSOASAP0",81,0)
TH09() ;ASAP 3.0 : Creation Time. Format: HHMMSS or HHMM
"RTN","PSOASAP0",82,0)
 ;      ASAP 4.1+: Segment Terminator Character
"RTN","PSOASAP0",83,0)
 I PSOASVER="3.0" Q $E($P($$HTFM^XLFDT($H),".",2)_"000000",1,6)
"RTN","PSOASAP0",84,0)
 Q $P($$VERDATA^PSOSPMU0(PSOASVER,"B"),"^",3)
"RTN","PSOASAP0",85,0)
 ;
"RTN","PSOASAP0",86,0)
TH10() ;ASAP 3.0 : File Type
"RTN","PSOASAP0",87,0)
 ;      ASAP 4.0+: N/A
"RTN","PSOASAP0",88,0)
 I PSOASVER="3.0" Q $S($$PROD^XUPROD(1):"P",1:"T")
"RTN","PSOASAP0",89,0)
 Q ""
"RTN","PSOASAP0",90,0)
 ;
"RTN","PSOASAP0",91,0)
TH12() ;ASAP 3.0 : Composite Element Separator
"RTN","PSOASAP0",92,0)
 ;      ASAP 4.0+: N/A
"RTN","PSOASAP0",93,0)
 I PSOASVER="3.0" Q ":"
"RTN","PSOASAP0",94,0)
 Q ""
"RTN","PSOASAP0",95,0)
 ;
"RTN","PSOASAP0",96,0)
TH13() ;ASAP 3.0 : Data Segment Terminator Character
"RTN","PSOASAP0",97,0)
 ;      ASAP 4.0+: N/A
"RTN","PSOASAP0",98,0)
 I PSOASVER'="3.0" Q ""
"RTN","PSOASAP0",99,0)
 Q $P($$VERDATA^PSOSPMU0(PSOASVER,"B"),"^",3)
"RTN","PSOASAP0",100,0)
 ;
"RTN","PSOASAP0",101,0)
 ; *** PHA Segment ***
"RTN","PSOASAP0",102,0)
PHA01() ;National Provider Identifier
"RTN","PSOASAP0",103,0)
 N NPINST,NPINUM
"RTN","PSOASAP0",104,0)
 S NPINST=$$GET1^DIQ(59,SITEIEN,101,"I") I 'NPINST Q ""
"RTN","PSOASAP0",105,0)
 S NPINUM=+$$NPI^XUSNPI("Organization_ID",NPINST,DT)
"RTN","PSOASAP0",106,0)
 Q $S(NPINUM>0:NPINUM,1:"")
"RTN","PSOASAP0",107,0)
 ;
"RTN","PSOASAP0",108,0)
PHA03() ;Pharmacy DEA Number
"RTN","PSOASAP0",109,0)
 N PHA03,INST
"RTN","PSOASAP0",110,0)
 ;Primary source: Pharmacy NPI Institution
"RTN","PSOASAP0",111,0)
 S PHA03="",INST=$$GET1^DIQ(59,SITEIEN,101,"I")
"RTN","PSOASAP0",112,0)
 I INST S PHA03=$$WHAT^XUAF4(INST,52)
"RTN","PSOASAP0",113,0)
 ;Backup source: Pharmacy Related Institution
"RTN","PSOASAP0",114,0)
 I PHA03="" D
"RTN","PSOASAP0",115,0)
 . S INST=$$GET1^DIQ(59,SITEIEN,100,"I")
"RTN","PSOASAP0",116,0)
 . I INST S PHA03=$$WHAT^XUAF4(INST,52)
"RTN","PSOASAP0",117,0)
 Q PHA03
"RTN","PSOASAP0",118,0)
 ;
"RTN","PSOASAP0",119,0)
PHA10() ;Phone Number
"RTN","PSOASAP0",120,0)
 Q $$PHONE($$GET1^DIQ(59,SITEIEN,.03)_$$GET1^DIQ(59,SITEIEN,.04))
"RTN","PSOASAP0",121,0)
 ;
"RTN","PSOASAP0",122,0)
 ; *** PAT Segment ***
"RTN","PSOASAP0",123,0)
PAT03() ;ASAP 3.0 : Unique System ID - Patient (Not Used)
"RTN","PSOASAP0",124,0)
 ;       ASAP 4.0+: ID of Patient (SSN)
"RTN","PSOASAP0",125,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP0",126,0)
 Q $P($G(VADM(2)),"^",1)
"RTN","PSOASAP0",127,0)
 ;
"RTN","PSOASAP0",128,0)
PAT04() ;ASAP 3.0 : SSN
"RTN","PSOASAP0",129,0)
 ;       ASAP 4.0+: ID Qualifier of Additional Patient Identifier (Not Used)
"RTN","PSOASAP0",130,0)
 I PSOASVER="3.0" Q $P($G(VADM(2)),"^",1)
"RTN","PSOASAP0",131,0)
 Q ""
"RTN","PSOASAP0",132,0)
 ;
"RTN","PSOASAP0",133,0)
PAT12() ;Patient Address Information - Line 1
"RTN","PSOASAP0",134,0)
 ; ASAP 4.2: Length = 35 characters (All others: 30 characters)
"RTN","PSOASAP0",135,0)
 N ADDRESS
"RTN","PSOASAP0",136,0)
 I PSOASVER="4.2" D  Q ADDRESS
"RTN","PSOASAP0",137,0)
 .  S ADDRESS=$S($G(VAPA(1))'="":VAPA(1),$G(VAPA(11)):"STREET ADDRESS UNKNOWN",1:"")
"RTN","PSOASAP0",138,0)
 S ADDRESS=$$TRIM^XLFSTR($G(VAPA(1)))_$S($$TRIM^XLFSTR($G(VAPA(2)))'="":" "_VAPA(2),1:"")_$S($$TRIM^XLFSTR($G(VAPA(3)))'="":" "_VAPA(3),1:"")
"RTN","PSOASAP0",139,0)
 I ADDRESS="",$G(VAPA(11)) S ADDRESS="STREET ADDRESS UNKNOWN"
"RTN","PSOASAP0",140,0)
 I $E(ADDRESS,1,30)'[" " Q $E(ADDRESS,1,30)
"RTN","PSOASAP0",141,0)
 Q $$ADDRESS(ADDRESS,1)
"RTN","PSOASAP0",142,0)
 ;
"RTN","PSOASAP0",143,0)
PAT13() ;Patient Address Information - Line 2
"RTN","PSOASAP0",144,0)
 ; ASAP 4.2: Length = 35 characters (All others: 30 characters)
"RTN","PSOASAP0",145,0)
 I PSOASVER="4.2" Q $G(VAPA(2))
"RTN","PSOASAP0",146,0)
 N ADDRESS
"RTN","PSOASAP0",147,0)
 S ADDRESS=$$TRIM^XLFSTR($G(VAPA(1)))_$S($$TRIM^XLFSTR($G(VAPA(2)))'="":" "_VAPA(2),1:"")_$S($$TRIM^XLFSTR($G(VAPA(3)))'="":" "_VAPA(3),1:"")
"RTN","PSOASAP0",148,0)
 I $E(ADDRESS,1,30)'[" " Q $E(ADDRESS,31,999)
"RTN","PSOASAP0",149,0)
 Q $$ADDRESS(ADDRESS,2)
"RTN","PSOASAP0",150,0)
 ;
"RTN","PSOASAP0",151,0)
PAT15() ;Patient State Address
"RTN","PSOASAP0",152,0)
 N STAIEN S STAIEN=+$G(VAPA(5)) Q:'STAIEN ""
"RTN","PSOASAP0",153,0)
 Q $$GET1^DIQ(5,STAIEN,1)
"RTN","PSOASAP0",154,0)
 ;
"RTN","PSOASAP0",155,0)
PAT17() ;Patient Phone Number
"RTN","PSOASAP0",156,0)
 N PAT17
"RTN","PSOASAP0",157,0)
 ;PHONE NUMBER [RESIDENCE] (Home)
"RTN","PSOASAP0",158,0)
 S PAT17=$$PHONE($P($G(VAPA(8)),"^",1)) I PAT17 Q PAT17
"RTN","PSOASAP0",159,0)
 ;PHONE NUMBER [CELLULAR] (Cell)
"RTN","PSOASAP0",160,0)
 S PAT17=$$PHONE($$GET1^DIQ(2,PATIEN,.134)) I PAT17 Q PAT17
"RTN","PSOASAP0",161,0)
 ;PHONE NUMBER [WORK] (Work)
"RTN","PSOASAP0",162,0)
 S PAT17=$$PHONE($$GET1^DIQ(2,PATIEN,.132)) I PAT17 Q PAT17
"RTN","PSOASAP0",163,0)
 ;K-WORK PHONE NUMBER (Next Of Kin)
"RTN","PSOASAP0",164,0)
 S PAT17=$$PHONE($$GET1^DIQ(2,PATIEN,.21011)) I PAT17 Q PAT17
"RTN","PSOASAP0",165,0)
 ;K2-WORK PHONE NUMBER (Secondary Next Of Kin)
"RTN","PSOASAP0",166,0)
 S PAT17=$$PHONE($$GET1^DIQ(2,PATIEN,.211011)) I PAT17 Q PAT17
"RTN","PSOASAP0",167,0)
 ;E-WORK PHONE NUMBER (Work Emergency)
"RTN","PSOASAP0",168,0)
 S PAT17=$$PHONE($$GET1^DIQ(2,PATIEN,.33011)) I PAT17 Q PAT17
"RTN","PSOASAP0",169,0)
 ;E2-WORK PHONE NUMBER (Secondary Work Emergency)
"RTN","PSOASAP0",170,0)
 S PAT17=$$PHONE($$GET1^DIQ(2,PATIEN,.331011)) I PAT17 Q PAT17
"RTN","PSOASAP0",171,0)
 ;Last resort: Pharmacy Phone #
"RTN","PSOASAP0",172,0)
 Q $$PHA10()
"RTN","PSOASAP0",173,0)
 ;
"RTN","PSOASAP0",174,0)
PAT18() ;ASAP 3.0 : Email Address (Not Used)
"RTN","PSOASAP0",175,0)
 ;       ASAP 4.0+: Patient DOB
"RTN","PSOASAP0",176,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP0",177,0)
 Q $$FMTHL7^XLFDT($P($G(VADM(3)),"^",1))
"RTN","PSOASAP0",178,0)
 ;
"RTN","PSOASAP0",179,0)
PAT19() ;ASAP 3.0 : Patient DOB
"RTN","PSOASAP0",180,0)
 ;       ASAP 4.0+: Patient Gender Code
"RTN","PSOASAP0",181,0)
 I PSOASVER="3.0" Q $$FMTHL7^XLFDT($P($G(VADM(3)),"^",1))
"RTN","PSOASAP0",182,0)
 Q $S($P($G(VADM(5)),"^",1)'="":$P($G(VADM(5)),"^",1),1:"U")
"RTN","PSOASAP0",183,0)
 ;
"RTN","PSOASAP0",184,0)
PAT20() ;ASAP 3.0 : Patient Gender Code
"RTN","PSOASAP0",185,0)
 ;       ASAP 4.0+: Species Code (Always return "01" for 'Human')
"RTN","PSOASAP0",186,0)
 I PSOASVER="3.0" Q $S($P($G(VADM(5)),"^",1)'="":$P($G(VADM(5)),"^",1),1:"U")
"RTN","PSOASAP0",187,0)
 Q "01"
"RTN","PSOASAP0",188,0)
 ;
"RTN","PSOASAP0",189,0)
PAT22() ;ASAP 3.0 : Primary Prescription Coverage Type (Not Used)
"RTN","PSOASAP0",190,0)
 ;       ASAP 4.0+:Country of Non-U.S. Resident
"RTN","PSOASAP0",191,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP0",192,0)
 N CNTRYIEN,FIPSCODE
"RTN","PSOASAP0",193,0)
 S CNTRYIEN=+$G(VAPA(25)) I 'CNTRYIEN Q ""
"RTN","PSOASAP0",194,0)
 S FIPSCODE=$$GET1^DIQ(779.004,CNTRYIEN,1.2)
"RTN","PSOASAP0",195,0)
 Q $S(FIPSCODE="US":"",1:FIPSCODE)
"RTN","PSOASAP0",196,0)
 ;
"RTN","PSOASAP0",197,0)
 ; *** RX Segment (ASAP 3.0 only) ***
"RTN","PSOASAP0",198,0)
RX08() ;Date Rx Written (Format: YYYYMMDD)
"RTN","PSOASAP0",199,0)
 N RX08
"RTN","PSOASAP0",200,0)
 S RX08=$$GET1^DIQ(52,+$G(RXIEN),1,"I")
"RTN","PSOASAP0",201,0)
 ; Date Rx Written (ISSUE DATE) cannot be in the future or after Rx Fill Date (Use LOGIN DATE instead)
"RTN","PSOASAP0",202,0)
 I RX08>DT!(RX08>$$RXRLDT^PSOBPSUT(RXIEN,FILLNUM)) D
"RTN","PSOASAP0",203,0)
 . S RX08=$$GET1^DIQ(52,+$G(RXIEN),21,"I")\1
"RTN","PSOASAP0",204,0)
 Q $$FMTHL7^XLFDT(RX08)
"RTN","PSOASAP0",205,0)
 ;
"RTN","PSOASAP0",206,0)
RX14() ;Product ID (NDC - National Drug Code)
"RTN","PSOASAP0",207,0)
 N RX14 S RX14=""
"RTN","PSOASAP0",208,0)
 I RECTYPE="V",$G(RTSDATA("NDC"))'="" S RX14=$$NUMERIC(RTSDATA("NDC"))
"RTN","PSOASAP0",209,0)
 I 'RX14 S RX14=$$NUMERIC($$GET1^DIQ(50,DRUGIEN,31))
"RTN","PSOASAP0",210,0)
 I 'RX14 S RX14=$$NUMERIC($$GETNDC^PSONDCUT(RXIEN,+FILLNUM))
"RTN","PSOASAP0",211,0)
 Q RX14
"RTN","PSOASAP0",212,0)
 ;
"RTN","PSOASAP0",213,0)
 ; *** DSP Segment ***
"RTN","PSOASAP0",214,0)
DSP01() ;ASAP 3.0 : Reporting Status ("01" - Add / "02" - Change / "03" - Delete)
"RTN","PSOASAP0",215,0)
 ;       ASAP 4.0 : Reporting Status ("" - New / "01" - Revise / "02" - Void)
"RTN","PSOASAP0",216,0)
 ;       ASAP 4.1+: Reporting Status ("00" - New / "01" - Revise / "02" - Void)
"RTN","PSOASAP0",217,0)
 I PSOASVER="3.0" Q $S($G(RECTYPE)="N":"01",$G(RECTYPE)="R":"02",$G(RECTYPE)="V":"03",1:"")
"RTN","PSOASAP0",218,0)
 I PSOASVER="4.0",RECTYPE="N" Q ""
"RTN","PSOASAP0",219,0)
 Q $S($G(RECTYPE)="N":"00",$G(RECTYPE)="R":"01",$G(RECTYPE)="V":"02",1:"")
"RTN","PSOASAP0",220,0)
 ;
"RTN","PSOASAP0",221,0)
DSP02() ;ASAP 3.0 : Program Participation Status (Not Used)
"RTN","PSOASAP0",222,0)
 ;       ASAP 4.0+: Prescription Number
"RTN","PSOASAP0",223,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP0",224,0)
 Q $$GET1^DIQ(52,+$G(RXIEN),.01)
"RTN","PSOASAP0",225,0)
 ;
"RTN","PSOASAP0",226,0)
DSP03() ;ASAP 3.0 : Prescription Number
"RTN","PSOASAP0",227,0)
 ;       ASAP 4.0+: Date Rx Written (Format: YYYYMMDD)
"RTN","PSOASAP0",228,0)
 I PSOASVER="3.0" Q $$GET1^DIQ(52,+$G(RXIEN),.01)
"RTN","PSOASAP0",229,0)
 N DSP03
"RTN","PSOASAP0",230,0)
 S DSP03=$$GET1^DIQ(52,+$G(RXIEN),1,"I")
"RTN","PSOASAP0",231,0)
 ; Date Rx Written (ISSUE DATE) cannot be in the future or after Rx Fill Date (Use LOGIN DATE instead)
"RTN","PSOASAP0",232,0)
 I DSP03>DT!(DSP03>$$RXRLDT^PSOBPSUT(RXIEN,FILLNUM)) D
"RTN","PSOASAP0",233,0)
 . S DSP03=$$GET1^DIQ(52,+$G(RXIEN),21,"I")\1
"RTN","PSOASAP0",234,0)
 Q $$FMTHL7^XLFDT(DSP03)
"RTN","PSOASAP0",235,0)
 ;
"RTN","PSOASAP0",236,0)
DSP04() ;ASAP 3.0 : Refill Number
"RTN","PSOASAP0",237,0)
 ;       ASAP 4.0+: Refills Authorized
"RTN","PSOASAP0",238,0)
 I PSOASVER="3.0" Q +FILLNUM
"RTN","PSOASAP0",239,0)
 Q +$$GET1^DIQ(52,+$G(RXIEN),9)
"RTN","PSOASAP0",240,0)
 ;
"RTN","PSOASAP0",241,0)
DSP05() ;ASAP 3.0 : Unique System ID - RPh (Not Used)
"RTN","PSOASAP0",242,0)
 ;       ASAP 4.0+: Date Filled (Release Date) (Format: YYYYMMDD)
"RTN","PSOASAP0",243,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP0",244,0)
 N DSP05
"RTN","PSOASAP0",245,0)
 S DSP05=$S(RECTYPE="V":$G(RTSDATA("RELDTTM")),$$RXRLDT^PSOBPSUT(RXIEN,FILLNUM):$$RXRLDT^PSOBPSUT(RXIEN,FILLNUM),1:DT)\1
"RTN","PSOASAP0",246,0)
 Q $S(DSP05:$$FMTHL7^XLFDT(DSP05),1:"")
"RTN","PSOASAP0",247,0)
 ;
"RTN","PSOASAP0",248,0)
DSP06() ;ASAP 3.0 : Unique System ID - Patient (Not Used)
"RTN","PSOASAP0",249,0)
 ;       ASAP 4.0+: Refill Number (Partials are always "0")
"RTN","PSOASAP0",250,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP0",251,0)
 Q +FILLNUM
"RTN","PSOASAP0",252,0)
 ;
"RTN","PSOASAP0",253,0)
DSP07() ;ASAP 3.0 : Unique System ID - Prescriber (Not Used)
"RTN","PSOASAP0",254,0)
 ;       ASAP 4.0+: Product ID Qualifier (Always return "01" for 'NDC')
"RTN","PSOASAP0",255,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP0",256,0)
 Q "01"
"RTN","PSOASAP0",257,0)
 ;
"RTN","PSOASAP0",258,0)
DSP08() ;ASAP 3.0 : Unique System ID - Drug (Not Used)
"RTN","PSOASAP0",259,0)
 ;       ASAP 4.0+:Product ID (NDC - National Drug Code)
"RTN","PSOASAP0",260,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP0",261,0)
 N DSP08 S DSP08=""
"RTN","PSOASAP0",262,0)
 I RECTYPE="V",$G(RTSDATA("NDC"))'="" S DSP08=$$NUMERIC(RTSDATA("NDC"))
"RTN","PSOASAP0",263,0)
 I 'DSP08 S DSP08=$$NUMERIC($$GET1^DIQ(50,DRUGIEN,31))
"RTN","PSOASAP0",264,0)
 I 'DSP08 S DSP08=$$NUMERIC($$GETNDC^PSONDCUT(RXIEN,+FILLNUM))
"RTN","PSOASAP0",265,0)
 Q DSP08
"RTN","PSOASAP0",266,0)
 ;
"RTN","PSOASAP0",267,0)
DSP09() ;ASAP 3.0 : Date Filled
"RTN","PSOASAP0",268,0)
 ;       ASAP 4.0+: Quantity Dispensed
"RTN","PSOASAP0",269,0)
 N DSP09
"RTN","PSOASAP0",270,0)
 I PSOASVER="3.0" D  Q DSP09
"RTN","PSOASAP0",271,0)
 . S DSP09=$S(RECTYPE="V":$G(RTSDATA("RELDTTM")),$$RXRLDT^PSOBPSUT(RXIEN,FILLNUM):$$RXRLDT^PSOBPSUT(RXIEN,FILLNUM),1:DT)\1
"RTN","PSOASAP0",272,0)
 . S DSP09=$S(DSP09'="":$$FMTHL7^XLFDT(DSP09),1:"")
"RTN","PSOASAP0",273,0)
 Q $S(RECTYPE="V":$G(RTSDATA("QTY")),1:$$RXQTY^PSOBPSUT(RXIEN,FILLNUM))
"RTN","PSOASAP0",274,0)
 ;
"RTN","PSOASAP0",275,0)
DSP10() ;ASAP 3.0 : Time Filled (Not Used)
"RTN","PSOASAP0",276,0)
 ;       ASAP 4.0+: Days Supply
"RTN","PSOASAP0",277,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP0",278,0)
 Q $S(RECTYPE="V":$G(RTSDATA("DAYSUP")),1:$$RXDAYSUP^PSOBPSUT(RXIEN,FILLNUM))
"RTN","PSOASAP0",279,0)
 ;
"RTN","PSOASAP0",280,0)
DSP11() ;ASAP 3.0 : Product ID Qualifier (01:NDC)
"RTN","PSOASAP0",281,0)
 ;       ASAP 4.0+: Drug Dosage Units Code
"RTN","PSOASAP0",282,0)
 I PSOASVER="3.0" Q "01"
"RTN","PSOASAP0",283,0)
 N UNIT
"RTN","PSOASAP0",284,0)
 S UNIT=$$GET1^DIQ(50,DRUGIEN,82,"I")
"RTN","PSOASAP0",285,0)
 Q $S(UNIT="EA":"01",UNIT="ML":"02",UNIT="GM":"03",1:"")
"RTN","PSOASAP0",286,0)
 ;
"RTN","PSOASAP0",287,0)
DSP12() ;ASAP 3.0 : Product ID (NDC)
"RTN","PSOASAP0",288,0)
 ;       ASAP 4.0+: Transmission Form of Rx Origin Code (Nature of Order)
"RTN","PSOASAP0",289,0)
 N DSP12 S DSP12=""
"RTN","PSOASAP0",290,0)
 I PSOASVER="3.0" D  Q DSP12
"RTN","PSOASAP0",291,0)
 . I RECTYPE="V",$G(RTSDATA("NDC"))'="" S DSP12=$$NUMERIC(RTSDATA("NDC"))
"RTN","PSOASAP0",292,0)
 . I 'DSP12 S DSP12=$$NUMERIC($$GET1^DIQ(50,DRUGIEN,31))
"RTN","PSOASAP0",293,0)
 . I 'DSP12 S DSP12=$$NUMERIC($$GETNDC^PSONDCUT(RXIEN,+FILLNUM))
"RTN","PSOASAP0",294,0)
 N NOO,ORDNUM S NOO="W"
"RTN","PSOASAP0",295,0)
 S ORDNUM=$$GET1^DIQ(52,RXIEN,39.3,"I")
"RTN","PSOASAP0",296,0)
 I $G(ORDNUM) D
"RTN","PSOASAP0",297,0)
 . S NOO=$P($$NATURE^ORUTL3(ORDNUM),"^",2)
"RTN","PSOASAP0",298,0)
 Q $S(NOO="W":"01",(NOO="V")!(NOO="P"):"02",NOO="E":"05",1:"99")
"RTN","PSOASAP0",299,0)
 ;
"RTN","PSOASAP0",300,0)
DSP13() ;ASAP 3.0 : Product Description (Not Used)
"RTN","PSOASAP0",301,0)
 ;       ASAP 4.0+: Partial Fill Indicator
"RTN","PSOASAP0",302,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP0",303,0)
 I PSOASVER="4.0"!(PSOASVER="4.1") Q $S(FILLNUM["P":"01",1:"02")
"RTN","PSOASAP0",304,0)
 Q $S(FILLNUM["P":$E(100+$E(FILLNUM,2,3),2,3),1:"00")
"RTN","PSOASAP0",305,0)
 ;
"RTN","PSOASAP0",306,0)
DSP14() ;ASAP 3.0 : Quantity Dispensed
"RTN","PSOASAP0",307,0)
 ;       ASAP 4.0+: Pharmacist National Provider Identifier (NPI)
"RTN","PSOASAP0",308,0)
 I PSOASVER="3.0" Q $S(RECTYPE="V":$G(RTSDATA("QTY")),1:$$RXQTY^PSOBPSUT(RXIEN,FILLNUM))
"RTN","PSOASAP0",309,0)
 N NPI
"RTN","PSOASAP0",310,0)
 S NPI=+$$NPI^XUSNPI("Individual_ID",RPHIEN,DT)
"RTN","PSOASAP0",311,0)
 Q $S(NPI>0:NPI,1:"")
"RTN","PSOASAP0",312,0)
 ;
"RTN","PSOASAP0",313,0)
DSP15() ;ASAP 3.0 : Days Supply
"RTN","PSOASAP0",314,0)
 ;       ASAP 4.0+: Pharmacist State License Number (Not Used)
"RTN","PSOASAP0",315,0)
 I PSOASVER="3.0" Q $S(RECTYPE="V":$G(RTSDATA("DAYSUP")),1:$$RXDAYSUP^PSOBPSUT(RXIEN,FILLNUM))
"RTN","PSOASAP0",316,0)
 Q ""
"RTN","PSOASAP0",317,0)
 ;
"RTN","PSOASAP0",318,0)
DSP16() ;ASAP 3.0 : Basis of Days Supply Determiniation (Always "3" for 'As directed by doctor')
"RTN","PSOASAP0",319,0)
 ;       ASAP 4.0+: Classification Code for Payment Type (Always return "05" for 'Military Installations and VA')
"RTN","PSOASAP0",320,0)
 I PSOASVER="3.0" Q "3"
"RTN","PSOASAP0",321,0)
 Q "05"
"RTN","PSOASAP0",322,0)
 ;
"RTN","PSOASAP0",323,0)
DSP17() ;ASAP 3.0 : Refills Remaining (Not Used)
"RTN","PSOASAP0",324,0)
 ;       ASAP 4.0 : N/A
"RTN","PSOASAP0",325,0)
 ;       ASAP 4.1+: Date Sold
"RTN","PSOASAP0",326,0)
 I PSOASVER="3.0"!(PSOASVER="4.0") Q ""
"RTN","PSOASAP0",327,0)
 Q $$DSP05()
"RTN","PSOASAP0",328,0)
 ;
"RTN","PSOASAP0",329,0)
 ; *** PRE Segment ***
"RTN","PSOASAP0",330,0)
PRE01() ;ASAP 3.0 : Not Used
"RTN","PSOASAP0",331,0)
 ;       ASAP 4.0+: Prescriber National Provider Identifier (NPI)
"RTN","PSOASAP0",332,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP0",333,0)
 N PRE01
"RTN","PSOASAP0",334,0)
 S PRE01=+$$NPI^XUSNPI("Individual_ID",PREIEN)
"RTN","PSOASAP0",335,0)
 Q $S(PRE01>0:PRE01,1:"")
"RTN","PSOASAP0",336,0)
 ;
"RTN","PSOASAP0",337,0)
PRE02() ;Prescriber DEA Number
"RTN","PSOASAP0",338,0)
 N PRE02
"RTN","PSOASAP0",339,0)
 S PRE02=$$PRVDEA() I PRE02'="" Q $P(PRE02,"-",1)
"RTN","PSOASAP0",340,0)
 S PRE02=$P($$DEA^XUSER(0,PREIEN),"-",1)
"RTN","PSOASAP0",341,0)
 I (PRE02="")!($P($$DEA^XUSER(0,PREIEN),"-",2,99)'="") S PRE02=$$PHA03()
"RTN","PSOASAP0",342,0)
 Q PRE02
"RTN","PSOASAP0",343,0)
 ;
"RTN","PSOASAP0",344,0)
PRE03() ;ASAP 3.0 : Prescriber NPI
"RTN","PSOASAP0",345,0)
 ;       ASAP 4.0+: Prescriber DEA Number Suffix
"RTN","PSOASAP0",346,0)
 N PRE03
"RTN","PSOASAP0",347,0)
 I PSOASVER="3.0" D  Q PRE03
"RTN","PSOASAP0",348,0)
 . S PRE03=+$$NPI^XUSNPI("Individual_ID",PREIEN)
"RTN","PSOASAP0",349,0)
 . S PRE03=$S(PRE03>0:PRE03,1:"")
"RTN","PSOASAP0",350,0)
 ;
"RTN","PSOASAP0",351,0)
 S PRE03=$$PRVDEA() I PRE03'="" Q $P(PRE03,"-",2,99)
"RTN","PSOASAP0",352,0)
 S PRE03=$P($$DEA^XUSER(0,PREIEN),"-",2,99)
"RTN","PSOASAP0",353,0)
 I $$PRE02()=$$PHA03() S PRE03=$P($$DEA^XUSER(1,PREIEN),"-",1)
"RTN","PSOASAP0",354,0)
 Q PRE03
"RTN","PSOASAP0",355,0)
 ;
"RTN","PSOASAP0",356,0)
PRE04() ;ASAP 3.0 : Prescriber DEA Number
"RTN","PSOASAP0",357,0)
 ;       ASAP 4.0+: Prescriber State License Number (Not Used)
"RTN","PSOASAP0",358,0)
 I PSOASVER'="3.0" Q ""
"RTN","PSOASAP0",359,0)
 ;
"RTN","PSOASAP0",360,0)
 N PRE04
"RTN","PSOASAP0",361,0)
 S PRE04=$$PRVDEA() I PRE04'="" Q $P(PRE04,"-",1)
"RTN","PSOASAP0",362,0)
 S PRE04=$P($$DEA^XUSER(0,PREIEN),"-",1)
"RTN","PSOASAP0",363,0)
 I (PRE04="")!($P($$DEA^XUSER(0,PREIEN),"-",2,99)'="") S PRE04=$$PHA03()
"RTN","PSOASAP0",364,0)
 Q PRE04
"RTN","PSOASAP0",365,0)
 ;
"RTN","PSOASAP0",366,0)
PRE05() ;ASAP 3.0 : Prescriber DEA Number Suffix
"RTN","PSOASAP0",367,0)
 ;       ASAP 4.0+: Prescriber Last Name
"RTN","PSOASAP0",368,0)
 N PRE05
"RTN","PSOASAP0",369,0)
 I PSOASVER="3.0" D  Q PRE05
"RTN","PSOASAP0",370,0)
 . S PRE05=$$PRVDEA() I PRE05'="" S PRE05=$P(PRE05,"-",2,99) Q
"RTN","PSOASAP0",371,0)
 . S PRE05=$P($$DEA^XUSER(0,PREIEN),"-",2,99)
"RTN","PSOASAP0",372,0)
 . I $$PRE04()=$$PHA03() S PRE05=$P($$DEA^XUSER(1,PREIEN),"-",1)
"RTN","PSOASAP0",373,0)
 ;
"RTN","PSOASAP0",374,0)
 Q $P($$GET1^DIQ(200,PREIEN,.01),",",1)
"RTN","PSOASAP0",375,0)
 ;
"RTN","PSOASAP0",376,0)
PRE06() ;ASAP 3.0 : Prescriber State Lince Number (Not Used)
"RTN","PSOASAP0",377,0)
 ;       ASAP 4.0+: Prescriber First Name
"RTN","PSOASAP0",378,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP0",379,0)
 Q $P($P($$GET1^DIQ(200,PREIEN,.01),",",2)," ",1)
"RTN","PSOASAP0",380,0)
 ;
"RTN","PSOASAP0",381,0)
PRE07() ;ASAP 3.0 : Prescriber Alternate ID (Not Used)
"RTN","PSOASAP0",382,0)
 ;       ASAP 4.0+: Prescriber Middle Name
"RTN","PSOASAP0",383,0)
 I PSOASVER="3.0" Q ""
"RTN","PSOASAP0",384,0)
 Q $P($P($$GET1^DIQ(200,PREIEN,.01),",",2)," ",2)
"RTN","PSOASAP0",385,0)
 ;
"RTN","PSOASAP0",386,0)
PRE08() ;ASAP 3.0 : Prescriber's Last Name
"RTN","PSOASAP0",387,0)
 ;       ASAP 4.0 & 4.1: N/A (up to PRE07 only)
"RTN","PSOASAP0",388,0)
 ;       ASAP 4.2: Prescriber's Phone Number
"RTN","PSOASAP0",389,0)
 I PSOASVER="3.0" Q $P($$GET1^DIQ(200,PREIEN,.01),",",1)
"RTN","PSOASAP0",390,0)
 I PSOASVER="4.0"!(PSOASVER="4.1") Q ""
"RTN","PSOASAP0",391,0)
 N PRE08
"RTN","PSOASAP0",392,0)
 ;Work Phone #
"RTN","PSOASAP0",393,0)
 S PRE08=$$PHONE($$GET1^DIQ(200,PREIEN,.132)) I PRE08 Q PRE08
"RTN","PSOASAP0",394,0)
 ;Institution Phone #
"RTN","PSOASAP0",395,0)
 N DIV,DIVS,CONTACT,CONTACTS,INSPHONE
"RTN","PSOASAP0",396,0)
 I $$DIV4^XUSER(.DIVS,PREIEN) D
"RTN","PSOASAP0",397,0)
 . S DIV=0 F  S DIV=$O(DIVS(DIV)) Q:'DIV  D  I PRE08 Q
"RTN","PSOASAP0",398,0)
 . . K CONTACTS D GETS^DIQ(4,DIV_",","4*","","CONTACTS") I '$D(CONTACTS) Q
"RTN","PSOASAP0",399,0)
 . . S CONTACT="" F  S CONTACT=$O(CONTACTS(4.03,CONTACT)) Q:(CONTACT="")  D  I $G(INSPHONE) Q
"RTN","PSOASAP0",400,0)
 . . . I $$PHONE(CONTACTS(4.03,CONTACT,.03))'="" D
"RTN","PSOASAP0",401,0)
 . . . . S INSPHONE=$$PHONE(CONTACTS(4.03,CONTACT,.03))
"RTN","PSOASAP0",402,0)
 . . ; Default Prescriber Division
"RTN","PSOASAP0",403,0)
 . . I +DIVS(DIV),$G(INSPHONE) S PRE08=INSPHONE Q
"RTN","PSOASAP0",404,0)
 . . I '$O(DIVS(DIV)),'PRE08,$G(INSPHONE) S PRE08=INSPHONE
"RTN","PSOASAP0",405,0)
 I PRE08 Q PRE08
"RTN","PSOASAP0",406,0)
 ;Last resort: Pharmacy Phone #
"RTN","PSOASAP0",407,0)
 Q $$PHA10()
"RTN","PSOASAP0",408,0)
 ;
"RTN","PSOASAP0",409,0)
PRE09() ;ASAP 3.0: Prescriber' First Name
"RTN","PSOASAP0",410,0)
 I PSOASVER'="3.0" Q ""
"RTN","PSOASAP0",411,0)
 Q $P($P($$GET1^DIQ(200,PREIEN,.01),",",2)," ",1)
"RTN","PSOASAP0",412,0)
 ;
"RTN","PSOASAP0",413,0)
PRE10() ;ASAP 3.0: Prescriber' Middle Name
"RTN","PSOASAP0",414,0)
 I PSOASVER'="3.0" Q ""
"RTN","PSOASAP0",415,0)
 Q $P($P($$GET1^DIQ(200,PREIEN,.01),",",2)," ",2)
"RTN","PSOASAP0",416,0)
 ;
"RTN","PSOASAP0",417,0)
 ; *** RPH Pharmacist Information (ASAP 3.0 Only) **
"RTN","PSOASAP0",418,0)
RPH03() ;National Provider Identification (NPI)
"RTN","PSOASAP0",419,0)
 N RPH03
"RTN","PSOASAP0",420,0)
 S RPH03=+$$NPI^XUSNPI("Individual_ID",RPHIEN,DT)
"RTN","PSOASAP0",421,0)
 Q $S(RPH03>0:RPH03,1:"")
"RTN","PSOASAP0",422,0)
 ;
"RTN","PSOASAP0",423,0)
RPH06() ;Pharmacist Last Name
"RTN","PSOASAP0",424,0)
 Q $P($$GET1^DIQ(200,RPHIEN,.01),",",1)
"RTN","PSOASAP0",425,0)
 ;
"RTN","PSOASAP0",426,0)
RPH07() ;Pharmacist First Name
"RTN","PSOASAP0",427,0)
 Q $P($P($$GET1^DIQ(200,RPHIEN,.01),",",2)," ",1)
"RTN","PSOASAP0",428,0)
 ;
"RTN","PSOASAP0",429,0)
RPH08() ;Pharmacist Middle Name
"RTN","PSOASAP0",430,0)
 Q $P($P($$GET1^DIQ(200,RPHIEN,.01),",",2)," ",2)
"RTN","PSOASAP0",431,0)
 ;
"RTN","PSOASAP0",432,0)
TT01() ;Transaction Control Number
"RTN","PSOASAP0",433,0)
 ;      ASAP 3.0 : Same as TH03
"RTN","PSOASAP0",434,0)
 ;      ASAP 4.0+: Same as TH02
"RTN","PSOASAP0",435,0)
 I PSOASVER="3.0" Q $$TH03()
"RTN","PSOASAP0",436,0)
 Q $$TH02()
"RTN","PSOASAP0",437,0)
 ;
"RTN","PSOASAP0",438,0)
PHONE(NUMBER) ;Returns the Phone number (numeric only - max 10 digits)
"RTN","PSOASAP0",439,0)
 N PHONE
"RTN","PSOASAP0",440,0)
 S PHONE=$$NUMERIC(NUMBER)
"RTN","PSOASAP0",441,0)
 I $E(PHONE,1)="1" S $E(PHONE,1)=""
"RTN","PSOASAP0",442,0)
 Q $S($L(PHONE)=10:PHONE,1:"")
"RTN","PSOASAP0",443,0)
 ;
"RTN","PSOASAP0",444,0)
ADDRESS(VALUE,LINE) ;Returns Address Line1 and Line2 (max 30 characters)
"RTN","PSOASAP0",445,0)
 N ADDRESS,I,DIWL,DIWR,X
"RTN","PSOASAP0",446,0)
 K ^UTILITY($J,"W") S X=$$TRIM^XLFSTR(VALUE),DIWL=1,DIWR=30 D ^DIWP
"RTN","PSOASAP0",447,0)
 S ADDRESS=$$TRIM^XLFSTR($G(^UTILITY($J,"W",1,LINE,0)))
"RTN","PSOASAP0",448,0)
 K ^UTILITY($J,"W")
"RTN","PSOASAP0",449,0)
 Q ADDRESS
"RTN","PSOASAP0",450,0)
 ;
"RTN","PSOASAP0",451,0)
PRVDEA() ;Returns the Provider DEA #
"RTN","PSOASAP0",452,0)
 N PRVDEA,ORDIEN
"RTN","PSOASAP0",453,0)
 S ORDIEN=+$$GET1^DIQ(52,RXIEN,39.3,"I")
"RTN","PSOASAP0",454,0)
 K ^TMP($J,"ORDEA") D ARCHIVE^ORDEA(ORDIEN) S PRVDEA=$P($G(^TMP($J,"ORDEA",ORDIEN,2)),"^")
"RTN","PSOASAP0",455,0)
 Q PRVDEA
"RTN","PSOASAP0",456,0)
 ;
"RTN","PSOASAP0",457,0)
NUMERIC(VALUE) ;Returns the Numeric Value
"RTN","PSOASAP0",458,0)
 N NUMERIC,I
"RTN","PSOASAP0",459,0)
 S NUMERIC=""
"RTN","PSOASAP0",460,0)
 F I=1:1:$L(VALUE) I $E(VALUE,I)?1N S NUMERIC=NUMERIC_$E(VALUE,I)
"RTN","PSOASAP0",461,0)
 Q NUMERIC
"RTN","PSOSPMA3")
0^18^B171421989^n/a
"RTN","PSOSPMA3",1,0)
PSOSPMA3 ;BIRM/MFR - ASAP Definitions Listman Actions Handler ;11/11/15
"RTN","PSOSPMA3",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**451**;DEC 1997;Build 114
"RTN","PSOSPMA3",3,0)
 ;
"RTN","PSOSPMA3",4,0)
SHOWHID ; Handles Show/Hide Details
"RTN","PSOSPMA3",5,0)
 ; (PSOSHOW: 1: Show Segment Tree only; 2: Show Segments & Data Elements; 3: Show Data Element Details)
"RTN","PSOSPMA3",6,0)
 S VALMBCK="R"
"RTN","PSOSPMA3",7,0)
 I PSOASVER="1995" D  Q
"RTN","PSOSPMA3",8,0)
 . S VALMSG="Details not available for ASAP 1995 version" W $C(7)
"RTN","PSOSPMA3",9,0)
 W ?52,"Please wait..." S PSOSHOW=(($G(PSOSHOW)+1)#3)
"RTN","PSOSPMA3",10,0)
 D INIT^PSOSPML3,HDR^PSOSPML3 I PSOSHOW=0 S VALMBG=1
"RTN","PSOSPMA3",11,0)
 Q
"RTN","PSOSPMA3",12,0)
 ;
"RTN","PSOSPMA3",13,0)
COPYVER ; Handles 'Copy ASAP Version' Action
"RTN","PSOSPMA3",14,0)
 N NEWASVER,DIR,DIRUT,DTOUT,Y,X,VERS,DEFTYPE
"RTN","PSOSPMA3",15,0)
 I PSOASVER="1995" S VALMSG="ASAP 1995 Version cannot be copied" W $C(7) G EXIT
"RTN","PSOSPMA3",16,0)
 I '$$SECKEY() G EXIT
"RTN","PSOSPMA3",17,0)
 I '$$LOCK() G EXIT
"RTN","PSOSPMA3",18,0)
 D FULL^VALM1
"RTN","PSOSPMA3",19,0)
 I PSOASVER="1995" D  G BACK
"RTN","PSOSPMA3",20,0)
 . S VALMSG="ASAP 1995 Version cannot be copied" W $C(7)
"RTN","PSOSPMA3",21,0)
CV ; Loop Prompt
"RTN","PSOSPMA3",22,0)
 W !!," From ASAP Version: ",PSOASVER,!
"RTN","PSOSPMA3",23,0)
 S DIR(0)="58.4001,.01",DIR("A")="   To ASAP Version" D ^DIR I $D(DIRUT)!$D(DTOUT) G BACK
"RTN","PSOSPMA3",24,0)
 D VERLIST^PSOSPMU0("A",.VERS)
"RTN","PSOSPMA3",25,0)
 I $D(VERS(Y_" ")) W !!?3,"ASAP Version '",Y,"' already exists.",$C(7) G CV
"RTN","PSOSPMA3",26,0)
 S NEWASVER=Y
"RTN","PSOSPMA3",27,0)
 S X="",DEFTYPE="B"
"RTN","PSOSPMA3",28,0)
 I $G(VERS(PSOASVER_" "))="C" D  I X="^" G BACK
"RTN","PSOSPMA3",29,0)
 . W ! S X=$$ASKFLD("Y","YES","Copy Customizations") I X="^" Q
"RTN","PSOSPMA3",30,0)
 . S DEFTYPE=$S(X=1:"B",1:"S")
"RTN","PSOSPMA3",31,0)
 W ! S X=$$ASKFLD("Y","NO","Confirm Copy") I X'=1 G BACK
"RTN","PSOSPMA3",32,0)
 W ?40,"Copying..." D CLONEVER^PSOSPMU3(PSOASVER,NEWASVER,DEFTYPE) H 1 W "Done.",$C(7)
"RTN","PSOSPMA3",33,0)
 S PSOASVER=NEWASVER
"RTN","PSOSPMA3",34,0)
 G BACK
"RTN","PSOSPMA3",35,0)
 ;
"RTN","PSOSPMA3",36,0)
EDTDELIM ; Handles the 'Edit Delimiters' Action
"RTN","PSOSPMA3",37,0)
 N ELMDELIM,SEGDELIM,EOSCHR,X,DONE
"RTN","PSOSPMA3",38,0)
 I PSOASVER="1995" S VALMSG="Delimiters cannot be changed for ASAP 1995 Version" W $C(7) G EXIT
"RTN","PSOSPMA3",39,0)
 I '$$SECKEY() G EXIT
"RTN","PSOSPMA3",40,0)
 I '$$LOCK() G EXIT
"RTN","PSOSPMA3",41,0)
 D FULL^VALM1
"RTN","PSOSPMA3",42,0)
 W !!,"ASAP Version ",PSOASVER," delimiters: ",!
"RTN","PSOSPMA3",43,0)
 D LOADASAP^PSOSPMU0(PSOASVER,"B",.ALLASAP) ; Both ASAP Definitions
"RTN","PSOSPMA3",44,0)
 ; Data Element Delimiter
"RTN","PSOSPMA3",45,0)
 S DONE=0,ELMDELIM=$P($G(ALLASAP),"^",2)
"RTN","PSOSPMA3",46,0)
 F  S X=$$ASKFLD("58.4001,.02",ELMDELIM) Q:X="^"  D  I DONE Q
"RTN","PSOSPMA3",47,0)
 . S ELMDELIM=$S(X="@":"",1:X) I X="@" W ?50,"Deleted." Q
"RTN","PSOSPMA3",48,0)
 . S DONE=1
"RTN","PSOSPMA3",49,0)
 ; Segment Terminator
"RTN","PSOSPMA3",50,0)
 S DONE=0,SEGDELIM=$P($G(ALLASAP),"^",3)
"RTN","PSOSPMA3",51,0)
 F  S X=$$ASKFLD("58.4001,.03",SEGDELIM) Q:X="^"  D  I DONE Q
"RTN","PSOSPMA3",52,0)
 . S SEGDELIM=$S(X="@":"",1:X) I X="@" W ?50,"Deleted." Q
"RTN","PSOSPMA3",53,0)
 . S DONE=1
"RTN","PSOSPMA3",54,0)
 I X="^" G BACK
"RTN","PSOSPMA3",55,0)
 ; End-Of-Segment
"RTN","PSOSPMA3",56,0)
 S DONE=0,EOSCHR=$P($G(ALLASAP),"^",4)
"RTN","PSOSPMA3",57,0)
 F  S X=$$ASKFLD("58.4001,.04",EOSCHR) Q:X="^"  D  I DONE Q
"RTN","PSOSPMA3",58,0)
 . I X'="",X'="@",$$UP^XLFSTR(X)'?1"$C("1.3N.(1","1.3N)1")" D  Q
"RTN","PSOSPMA3",59,0)
 . . W !,"Invalid format. Use $C to specify a character escape sequence.",$C(7),!
"RTN","PSOSPMA3",60,0)
 . S EOSCHR=$S(X="@":"",1:X) I X="@" W ?50,"Deleted." Q
"RTN","PSOSPMA3",61,0)
 . S DONE=1
"RTN","PSOSPMA3",62,0)
 I X="^" G BACK
"RTN","PSOSPMA3",63,0)
 ; No changes
"RTN","PSOSPMA3",64,0)
 I $P($G(ALLASAP),"^",2,4)=(ELMDELIM_"^"_SEGDELIM_"^"_EOSCHR) G BACK
"RTN","PSOSPMA3",65,0)
 ;
"RTN","PSOSPMA3",66,0)
 W ! S X=$$ASKFLD("Y","YES","Save Changes") I X'=1 G BACK
"RTN","PSOSPMA3",67,0)
 W ?40,"Saving..."
"RTN","PSOSPMA3",68,0)
 S $P(ALLASAP,"^",2,4)=ELMDELIM_"^"_SEGDELIM_"^"_EOSCHR
"RTN","PSOSPMA3",69,0)
 D SAVEVER^PSOSPMU3(PSOASVER,ALLASAP)
"RTN","PSOSPMA3",70,0)
 H 1 W "OK",$C(7)
"RTN","PSOSPMA3",71,0)
 G BACK
"RTN","PSOSPMA3",72,0)
 ;
"RTN","PSOSPMA3",73,0)
CUSSEG ; Handles the 'Customize Segment' Action
"RTN","PSOSPMA3",74,0)
 N CUSSEG,DIR,DIRUT,DTOUT,X,Y,STDASAP,CUSASAP,ALLASAP,NEWSEG,DONE,QUIT,SEG,OK,SEGREQ,SEGPOS,PARSEG
"RTN","PSOSPMA3",75,0)
 N HLPTXT,CUSSEGS,CNT,LITERAL
"RTN","PSOSPMA3",76,0)
 I PSOASVER="1995" S VALMSG="ASAP 1995 Version cannot be customized" W $C(7) G EXIT
"RTN","PSOSPMA3",77,0)
 I '$$SECKEY() G EXIT
"RTN","PSOSPMA3",78,0)
 I '$$LOCK() G EXIT
"RTN","PSOSPMA3",79,0)
 D FULL^VALM1
"RTN","PSOSPMA3",80,0)
 ;
"RTN","PSOSPMA3",81,0)
CSL ; Loop Re-Prompt
"RTN","PSOSPMA3",82,0)
 D LOADASAP^PSOSPMU0(PSOASVER,"S",.STDASAP) ; Standard ASAP Definition
"RTN","PSOSPMA3",83,0)
 D LOADASAP^PSOSPMU0(PSOASVER,"C",.CUSASAP) ; Custom ASAP Definition
"RTN","PSOSPMA3",84,0)
 D LOADASAP^PSOSPMU0(PSOASVER,"B",.ALLASAP) ; Both ASAP Definitions
"RTN","PSOSPMA3",85,0)
 ;
"RTN","PSOSPMA3",86,0)
CSE ; Error Re-Prompt
"RTN","PSOSPMA3",87,0)
 K DIR S HLPTXT="Enter the ASAP Segment ID that you want to customize (e.g.,'AIR')."
"RTN","PSOSPMA3",88,0)
 I $G(STDASAP)'="" D
"RTN","PSOSPMA3",89,0)
 . S SEG="999" F  S SEG=$O(CUSASAP(SEG)) Q:SEG=""  D
"RTN","PSOSPMA3",90,0)
 . . I $$CUSSEG^PSOSPMU3(PSOASVER,SEG) S CUSSEGS(SEG)=$P(CUSASAP(SEG),"^",2)
"RTN","PSOSPMA3",91,0)
 I '$D(CUSSEGS) D
"RTN","PSOSPMA3",92,0)
 . S DIR("?")=HLPTXT
"RTN","PSOSPMA3",93,0)
 E  D
"RTN","PSOSPMA3",94,0)
 . S DIR("?",1)=HLPTXT,(DIR("?"),DIR("?",2))=" "
"RTN","PSOSPMA3",95,0)
 . S SEG="",CNT=3 F  S SEG=$O(CUSSEGS(SEG)) Q:SEG=""  D
"RTN","PSOSPMA3",96,0)
 . . I $O(CUSSEGS(SEG))="" S DIR("?")=SEG_"   "_$P(CUSSEGS(SEG),"^") Q
"RTN","PSOSPMA3",97,0)
 . . S DIR("?",CNT)=SEG_"   "_$P(CUSSEGS(SEG),"^"),CNT=CNT+1
"RTN","PSOSPMA3",98,0)
 S DIR(0)="FO^1:5",DIR("A")="SEGMENT ID"
"RTN","PSOSPMA3",99,0)
 W ! D ^DIR I $D(DIRUT)!$D(DTOUT)!(X="") G BACK
"RTN","PSOSPMA3",100,0)
 S LITERAL=0 I $E(X)="""",$E(X,$L(X))="""" S X=$E(X,2,$L(X)-1),LITERAL=1
"RTN","PSOSPMA3",101,0)
 I (X'?.AN)!($E(X,$L(X))?1N)!(X[" ") W !,"Invalid Segment ID.",$C(7) G CSE
"RTN","PSOSPMA3",102,0)
 I 'LITERAL,'$D(ALLASAP(X)),$D(ALLASAP($$UP^XLFSTR(X))) S X=$$UP^XLFSTR(X)
"RTN","PSOSPMA3",103,0)
 S CUSSEG=X W "   ",$P($G(ALLASAP(CUSSEG)),"^",2) W !
"RTN","PSOSPMA3",104,0)
 I $D(STDASAP(CUSSEG)) D
"RTN","PSOSPMA3",105,0)
 . ; Segment Requirement
"RTN","PSOSPMA3",106,0)
 . S X=$$ASKFLD("58.40011,.04",$P($G(ALLASAP(CUSSEG)),"^",4)) I X="^" Q
"RTN","PSOSPMA3",107,0)
 . S SEGREQ=X
"RTN","PSOSPMA3",108,0)
 . W ! S X=$$ASKFLD("Y","YES","Save Custom Segment") I X'=1 Q
"RTN","PSOSPMA3",109,0)
 . W ?40,"Saving..."
"RTN","PSOSPMA3",110,0)
 . ; If first time the Segment is being customized, copy; otherwise save
"RTN","PSOSPMA3",111,0)
 . I '$D(CUSASAP(CUSSEG)) D
"RTN","PSOSPMA3",112,0)
 . . S $P(STDASAP(CUSSEG),"^",4)=SEGREQ
"RTN","PSOSPMA3",113,0)
 . . D COPYSEG^PSOSPMU3(PSOASVER,.STDASAP,PSOASVER,CUSSEG)
"RTN","PSOSPMA3",114,0)
 . E  D
"RTN","PSOSPMA3",115,0)
 . . S $P(CUSASAP(CUSSEG),"^",4)=SEGREQ
"RTN","PSOSPMA3",116,0)
 . . D SAVESEG^PSOSPMU3(PSOASVER,CUSSEG,CUSASAP(CUSSEG),ALLASAP)
"RTN","PSOSPMA3",117,0)
 . W "OK",$C(7)
"RTN","PSOSPMA3",118,0)
 E  D
"RTN","PSOSPMA3",119,0)
 . S (Y,NEWSEG)=0
"RTN","PSOSPMA3",120,0)
 . I '$D(CUSASAP(CUSSEG)) D  I $D(DIRUT)!$D(DTOUT)!'Y Q
"RTN","PSOSPMA3",121,0)
 . . K DIR S DIR(0)="Y",DIR("B")="NO",DIR("A")="Are you adding '"_CUSSEG_"' as a new SEGMENT ID" W $C(7) D ^DIR
"RTN","PSOSPMA3",122,0)
 . . S NEWSEG=1 W !
"RTN","PSOSPMA3",123,0)
 . S $P(CUSASAP(CUSSEG),"^",1)=CUSSEG
"RTN","PSOSPMA3",124,0)
 . ; Segment Name
"RTN","PSOSPMA3",125,0)
 . S X=$$ASKFLD("58.40011,.02",$P(CUSASAP(CUSSEG),"^",2)) I X="^" Q
"RTN","PSOSPMA3",126,0)
 . S $P(CUSASAP(CUSSEG),"^",2)=X
"RTN","PSOSPMA3",127,0)
 . ; Parent Segment
"RTN","PSOSPMA3",128,0)
 . S DONE=0
"RTN","PSOSPMA3",129,0)
 . F  S X=$$ASKFLD("58.40011,.03",$P(CUSASAP(CUSSEG),"^",3)) Q:X="^"!(X="")  D  I DONE Q
"RTN","PSOSPMA3",130,0)
 . . I X="@" S $P(CUSASAP(CUSSEG),"^",3)="" Q
"RTN","PSOSPMA3",131,0)
 . . I '$D(ALLASAP(X)),$D(ALLASAP($$UP^XLFSTR(X))) S X=$$UP^XLFSTR(X)
"RTN","PSOSPMA3",132,0)
 . . I '$D(ALLASAP(X)) W !,"Parent Segment ID not found.",$C(7) Q
"RTN","PSOSPMA3",133,0)
 . . I X=CUSSEG W !,"Parent Segment ID cannot be its own parent.",$C(7) Q
"RTN","PSOSPMA3",134,0)
 . . W "   ",$P(ALLASAP(X),"^",2)
"RTN","PSOSPMA3",135,0)
 . . S $P(CUSASAP(CUSSEG),"^",3)=X,DONE=1
"RTN","PSOSPMA3",136,0)
 . I X="^" Q
"RTN","PSOSPMA3",137,0)
 . ; Segment Requirement
"RTN","PSOSPMA3",138,0)
 . S X=$$ASKFLD("58.40011,.04",$P(CUSASAP(CUSSEG),"^",4)) I X="^" Q
"RTN","PSOSPMA3",139,0)
 . S $P(CUSASAP(CUSSEG),"^",4)=X
"RTN","PSOSPMA3",140,0)
 . S DONE=0
"RTN","PSOSPMA3",141,0)
 . F  S X=$$ASKFLD("58.40011,.05",$P(CUSASAP(CUSSEG),"^",5)) Q:X="^"  D  I DONE Q
"RTN","PSOSPMA3",142,0)
 . . S SEG="999",OK=1 F  S SEG=$O(ALLASAP(SEG)) Q:SEG=""  D  I 'OK Q
"RTN","PSOSPMA3",143,0)
 . . . I SEG'=CUSSEG,$P(ALLASAP(SEG),"^",3)=$P(CUSASAP(CUSSEG),"^",3),$P(ALLASAP(SEG),"^",5)=X D
"RTN","PSOSPMA3",144,0)
 . . . . S OK=0 W !,"The Segment '",SEG,"' (",$P(ALLASAP(SEG),"^",2),") already occupies this position.",$C(7) Q
"RTN","PSOSPMA3",145,0)
 . . I OK S $P(CUSASAP(CUSSEG),"^",5)=X,DONE=1
"RTN","PSOSPMA3",146,0)
 . I X="^" Q
"RTN","PSOSPMA3",147,0)
 . ; Segment Level
"RTN","PSOSPMA3",148,0)
 . S DONE=0,PARSEG=$P(CUSASAP(CUSSEG),"^",3)
"RTN","PSOSPMA3",149,0)
 . I PARSEG'="",$P(CUSASAP(CUSSEG),"^",6)="",$P($G(ALLASAP(PARSEG)),"^",6)>3 D
"RTN","PSOSPMA3",150,0)
 . . S $P(CUSASAP(CUSSEG),"^",6)=$P($G(ALLASAP(PARSEG)),"^",6)
"RTN","PSOSPMA3",151,0)
 . F  S X=$$ASKFLD("58.40011,.06",$P(CUSASAP(CUSSEG),"^",6)) Q:X="^"  D  I DONE Q
"RTN","PSOSPMA3",152,0)
 . . I $P(CUSASAP(CUSSEG),"^",3)="",X'=1,X'=6  D  Q
"RTN","PSOSPMA3",153,0)
 . . . W !,"Orphan segments can only be located at the MAIN HEADER or MAIN TRAILER levels.",$C(7)
"RTN","PSOSPMA3",154,0)
 . . S QUIT=0
"RTN","PSOSPMA3",155,0)
 . . I PARSEG'="" D  I QUIT Q
"RTN","PSOSPMA3",156,0)
 . . . I $P($G(ALLASAP(PARSEG)),"^",6)>3,X'=$P($G(ALLASAP(PARSEG)),"^",6) D  S QUIT=1 Q
"RTN","PSOSPMA3",157,0)
 . . . . W !,"Segment level must be the same as the parent's level (",$P($G(ALLASAP(PARSEG)),"^",6),").",$C(7)
"RTN","PSOSPMA3",158,0)
 . . . I X<$P($G(ALLASAP(PARSEG)),"^",6) D  S QUIT=1 Q
"RTN","PSOSPMA3",159,0)
 . . . . W !,"Segment level cannot be lower than parent's level (",$P($G(ALLASAP(PARSEG)),"^",6),").",$C(7)
"RTN","PSOSPMA3",160,0)
 . . . I X>($P($G(ALLASAP(PARSEG)),"^",6)+1) D  S QUIT=1 Q
"RTN","PSOSPMA3",161,0)
 . . . . W !,"Segment level cannot be more than 1 level above parent's level (",$P($G(ALLASAP(PARSEG)),"^",6),").",$C(7)
"RTN","PSOSPMA3",162,0)
 . . S $P(CUSASAP(CUSSEG),"^",6)=X,DONE=1
"RTN","PSOSPMA3",163,0)
 . I X="^" Q
"RTN","PSOSPMA3",164,0)
 . ; Confirm
"RTN","PSOSPMA3",165,0)
 . W ! S X=$$ASKFLD("Y","YES","Save Custom Segment") I X'=1 Q
"RTN","PSOSPMA3",166,0)
 . W ?40,"Saving..."
"RTN","PSOSPMA3",167,0)
 . D SAVESEG^PSOSPMU3(PSOASVER,$S(NEWSEG:"+1",1:CUSSEG),CUSASAP(CUSSEG),ALLASAP)
"RTN","PSOSPMA3",168,0)
 . H 1 W "OK",$C(7)
"RTN","PSOSPMA3",169,0)
 G CSL
"RTN","PSOSPMA3",170,0)
 ;
"RTN","PSOSPMA3",171,0)
CUSELM ; Handles the 'Customize Element' Action
"RTN","PSOSPMA3",172,0)
 N CUSELM,DIR,DIRUT,DTOUT,X,Y,STDASAP,CUSASAP,SEGID,ELMPOS,MAXLEN,ELMREQ,NEWELM,ELMDATA
"RTN","PSOSPMA3",173,0)
 N DIC,DWPK,I,MEXPR,LINE,HLPTXT,CUSELMS,CNT,ELM
"RTN","PSOSPMA3",174,0)
 I PSOASVER="1995" S VALMSG="ASAP 1995 Version cannot be customized" W $C(7) G EXIT
"RTN","PSOSPMA3",175,0)
 I '$$SECKEY() G EXIT
"RTN","PSOSPMA3",176,0)
 I '$$LOCK() G EXIT
"RTN","PSOSPMA3",177,0)
 D FULL^VALM1
"RTN","PSOSPMA3",178,0)
 ;
"RTN","PSOSPMA3",179,0)
CEL ; Loop Re-Prompt
"RTN","PSOSPMA3",180,0)
 D LOADASAP^PSOSPMU0(PSOASVER,"S",.STDASAP) ; Standard ASAP Definition
"RTN","PSOSPMA3",181,0)
 D LOADASAP^PSOSPMU0(PSOASVER,"C",.CUSASAP) ; Custom ASAP Definition
"RTN","PSOSPMA3",182,0)
 D LOADASAP^PSOSPMU0(PSOASVER,"B",.ALLASAP) ; Both ASAP Definitions
"RTN","PSOSPMA3",183,0)
 ;
"RTN","PSOSPMA3",184,0)
CEE ; Error Re-Prompt 
"RTN","PSOSPMA3",185,0)
 K DIR S HLPTXT="Enter the ASAP Data Element ID that you want to customize (e.g.,'PAT03')"
"RTN","PSOSPMA3",186,0)
 I $G(STDASAP)'="" D
"RTN","PSOSPMA3",187,0)
 . S SEG="999" F  S SEG=$O(CUSASAP(SEG)) Q:SEG=""  D
"RTN","PSOSPMA3",188,0)
 . . S ELM=0 F  S ELM=$O(CUSASAP(SEG,ELM)) Q:'ELM  D
"RTN","PSOSPMA3",189,0)
 . . . S CUSELMS($P(CUSASAP(SEG,ELM),"^"))=$P(CUSASAP(SEG,ELM),"^",2)
"RTN","PSOSPMA3",190,0)
 I '$D(CUSELMS) D
"RTN","PSOSPMA3",191,0)
 . S DIR("?")=HLPTXT
"RTN","PSOSPMA3",192,0)
 E  D
"RTN","PSOSPMA3",193,0)
 . S DIR("?",1)=HLPTXT,(DIR("?"),DIR("?",2))=" "
"RTN","PSOSPMA3",194,0)
 . S CNT=2,ELM=""  F  S ELM=$O(CUSELMS(ELM)) Q:ELM=""  D
"RTN","PSOSPMA3",195,0)
 . . I $O(CUSELMS(ELM))="" S DIR("?")=ELM_"   "_$P(CUSELMS(ELM),"^") Q
"RTN","PSOSPMA3",196,0)
 . . S DIR("?",CNT)=ELM_"   "_$P(CUSELMS(ELM),"^"),CNT=CNT+1
"RTN","PSOSPMA3",197,0)
 S DIR(0)="FO^1:10",DIR("A")="DATA ELEMENT ID"
"RTN","PSOSPMA3",198,0)
 W ! D ^DIR I $D(DIRUT)!$D(DTOUT)!(X="") G BACK
"RTN","PSOSPMA3",199,0)
 S SEGID=$$GETSEGID^PSOSPMU3(X) I SEGID=""!(X[" ") W !,"Invalid Segment.",$C(7) G CEE
"RTN","PSOSPMA3",200,0)
 I '$D(ALLASAP(SEGID)),$D(ALLASAP($$UP^XLFSTR(SEGID))) D
"RTN","PSOSPMA3",201,0)
 . S X=$$UP^XLFSTR(X),SEGID=$$UP^XLFSTR(SEGID)
"RTN","PSOSPMA3",202,0)
 I '$D(ALLASAP(SEGID)) W !!,"Segment ID '",SEGID,"' not found.",$C(7) G CEE
"RTN","PSOSPMA3",203,0)
 S ELMPOS=$P(X,SEGID,2) I 'ELMPOS!(ELMPOS'?2N) W !,"Invalid Data Element position (",ELMPOS,").",$C(7) G CEE
"RTN","PSOSPMA3",204,0)
 W "   ",$P($G(ALLASAP(SEGID,+ELMPOS)),"^",2) W !
"RTN","PSOSPMA3",205,0)
 S CUSELM=X
"RTN","PSOSPMA3",206,0)
 I ELMPOS>1,'$D(ALLASAP(SEGID,ELMPOS-1)) D  G CEE
"RTN","PSOSPMA3",207,0)
 . W !,"Invalid Data Element position (",ELMPOS,"). Next Data Element must be ",SEGID,$E(100+$O(ALLASAP(SEGID,99),-1)+1,2,3),".",$C(7)
"RTN","PSOSPMA3",208,0)
 ;
"RTN","PSOSPMA3",209,0)
 S ELMPOS=+ELMPOS
"RTN","PSOSPMA3",210,0)
 I $D(STDASAP(SEGID,ELMPOS)) D
"RTN","PSOSPMA3",211,0)
 . ; Data Element Maximum Length
"RTN","PSOSPMA3",212,0)
 . S X=$$ASKFLD("58.400111,.04",$P($G(ALLASAP(SEGID,ELMPOS)),"^",4)) I X="^" Q
"RTN","PSOSPMA3",213,0)
 . S MAXLEN=X
"RTN","PSOSPMA3",214,0)
 . ; Data Element Requirement
"RTN","PSOSPMA3",215,0)
 . S X=$$ASKFLD("58.400111,.06",$P($G(ALLASAP(SEGID,ELMPOS)),"^",6)) I X="^" Q
"RTN","PSOSPMA3",216,0)
 . S ELMREQ=X
"RTN","PSOSPMA3",217,0)
 . ; Data Element M Expression
"RTN","PSOSPMA3",218,0)
 . S MEXPR="" F I=1:1 Q:'$D(ALLASAP(SEGID,ELMPOS,"VAL",I))  D
"RTN","PSOSPMA3",219,0)
 . . S MEXPR=MEXPR_ALLASAP(SEGID,ELMPOS,"VAL",I)
"RTN","PSOSPMA3",220,0)
 . S X=$$ASKMEXPR($P(ALLASAP(SEGID),"^",6),CUSELM,MAXLEN,MEXPR) I X="^" Q
"RTN","PSOSPMA3",221,0)
 . S MEXPR=X
"RTN","PSOSPMA3",222,0)
 . W ! S X=$$ASKFLD("Y","YES","Save Custom Data Element") I X'=1 Q
"RTN","PSOSPMA3",223,0)
 . W ?40,"Saving..."
"RTN","PSOSPMA3",224,0)
 . ; If first time the Data Element is being customized, copy; otherwise save
"RTN","PSOSPMA3",225,0)
 . I '$D(CUSASAP(SEGID,ELMPOS)) D
"RTN","PSOSPMA3",226,0)
 . . ; The Custom ASAP Segment node might not be present (1st time), therefore it must be created
"RTN","PSOSPMA3",227,0)
 . . I '$D(CUSASAP(SEGID)) D COPYSEG^PSOSPMU3(PSOASVER,.STDASAP,PSOASVER,SEGID)
"RTN","PSOSPMA3",228,0)
 . . S $P(STDASAP(SEGID,ELMPOS),"^",4)=MAXLEN
"RTN","PSOSPMA3",229,0)
 . . S $P(STDASAP(SEGID,ELMPOS),"^",6)=ELMREQ
"RTN","PSOSPMA3",230,0)
 . . S STDASAP(SEGID,ELMPOS,"VAL",1)=MEXPR
"RTN","PSOSPMA3",231,0)
 . . D COPYELM^PSOSPMU3(PSOASVER,.STDASAP,PSOASVER,CUSELM)
"RTN","PSOSPMA3",232,0)
 . E  D
"RTN","PSOSPMA3",233,0)
 . . S $P(CUSASAP(SEGID,ELMPOS),"^",4)=MAXLEN
"RTN","PSOSPMA3",234,0)
 . . S $P(CUSASAP(SEGID,ELMPOS),"^",6)=ELMREQ
"RTN","PSOSPMA3",235,0)
 . . S CUSASAP(SEGID,ELMPOS,"VAL",1)=MEXPR
"RTN","PSOSPMA3",236,0)
 . . K ELMDATA M ELMDATA=CUSASAP(SEGID,ELMPOS)
"RTN","PSOSPMA3",237,0)
 . . D SAVEELM^PSOSPMU3(PSOASVER,SEGID,CUSELM,.ELMDATA)
"RTN","PSOSPMA3",238,0)
 . W "OK",$C(7)
"RTN","PSOSPMA3",239,0)
 E  D
"RTN","PSOSPMA3",240,0)
 . K ELMDATA S (Y,NEWELM)=0
"RTN","PSOSPMA3",241,0)
 . I '$D(CUSASAP(SEGID,ELMPOS)) D  I $D(DIRUT)!$D(DTOUT)!'Y Q
"RTN","PSOSPMA3",242,0)
 . . K DIR S DIR(0)="Y",DIR("B")="NO",DIR("A")="Are you adding '"_CUSELM_"' as a new DATA ELEMENT" W $C(7) D ^DIR
"RTN","PSOSPMA3",243,0)
 . . S NEWELM=1 W !
"RTN","PSOSPMA3",244,0)
 . ; Data Element ID and Position are non-editable fields
"RTN","PSOSPMA3",245,0)
 . S $P(ELMDATA,"^",1)=CUSELM
"RTN","PSOSPMA3",246,0)
 . S $P(ELMDATA,"^",5)=ELMPOS
"RTN","PSOSPMA3",247,0)
 . ; Data Element Name
"RTN","PSOSPMA3",248,0)
 . S X=$$ASKFLD("58.400111,.02",$P($G(CUSASAP(SEGID,ELMPOS)),"^",2)) I X="^" Q
"RTN","PSOSPMA3",249,0)
 . S $P(ELMDATA,"^",2)=X
"RTN","PSOSPMA3",250,0)
 . ; Data Element Format
"RTN","PSOSPMA3",251,0)
 . S X=$$ASKFLD("58.400111,.03",$P($G(CUSASAP(SEGID,ELMPOS)),"^",3)) I X="^" Q
"RTN","PSOSPMA3",252,0)
 . S $P(ELMDATA,"^",3)=X
"RTN","PSOSPMA3",253,0)
 . ; Data Element Maximum Length
"RTN","PSOSPMA3",254,0)
 . S X=$$ASKFLD("58.400111,.04",$P($G(CUSASAP(SEGID,ELMPOS)),"^",4)) I X="^" Q
"RTN","PSOSPMA3",255,0)
 . S $P(ELMDATA,"^",4)=X
"RTN","PSOSPMA3",256,0)
 . ; Data Element Requirement
"RTN","PSOSPMA3",257,0)
 . S X=$$ASKFLD("58.400111,.06",$P($G(CUSASAP(SEGID,ELMPOS)),"^",6)) I X="^" Q
"RTN","PSOSPMA3",258,0)
 . S $P(ELMDATA,"^",6)=X
"RTN","PSOSPMA3",259,0)
 . ; Data Element Description
"RTN","PSOSPMA3",260,0)
 . W !,"DESCRIPTION:" K ^TMP("PSOASDES",$J)
"RTN","PSOSPMA3",261,0)
 . ; Transferring Description from Local Array ALLASAP to ^TMP($J)
"RTN","PSOSPMA3",262,0)
 . F I=1:1 Q:'$D(ALLASAP(SEGID,ELMPOS,"DES",I))  D
"RTN","PSOSPMA3",263,0)
 . . S ^TMP("PSOASDES",$J,I,0)=ALLASAP(SEGID,ELMPOS,"DES",I)
"RTN","PSOSPMA3",264,0)
 . K DIC S DWPK=1,DIC="^TMP(""PSOASDES"","_$J_"," D EN^DIWE
"RTN","PSOSPMA3",265,0)
 . ; Transferring Description from ^TMP($J) to Local Array CUSASAP
"RTN","PSOSPMA3",266,0)
 . F I=1:1 Q:'$D(^TMP("PSOASDES",$J,I,0))  D
"RTN","PSOSPMA3",267,0)
 . . S ELMDATA("DES",I)=^TMP("PSOASDES",$J,I,0)
"RTN","PSOSPMA3",268,0)
 . ; Data Element M Expression
"RTN","PSOSPMA3",269,0)
 . S DONE=0,MEXPR=""
"RTN","PSOSPMA3",270,0)
 . F I=1:1 Q:'$D(ALLASAP(SEGID,ELMPOS,"VAL",I))  D
"RTN","PSOSPMA3",271,0)
 . . S MEXPR=MEXPR_ALLASAP(SEGID,ELMPOS,"VAL",I)
"RTN","PSOSPMA3",272,0)
 . S X=$$ASKMEXPR($P(ALLASAP(SEGID),"^",6),CUSELM,$P(ELMDATA,"^",4),MEXPR) I X="^" Q
"RTN","PSOSPMA3",273,0)
 . S ELMDATA("VAL",1)=X
"RTN","PSOSPMA3",274,0)
 . ; Confirm
"RTN","PSOSPMA3",275,0)
 . W ! S X=$$ASKFLD("Y","YES","Save Custom Data Element") I X'=1 Q
"RTN","PSOSPMA3",276,0)
 . W ?40,"Saving..."
"RTN","PSOSPMA3",277,0)
 . ; The Custom ASAP Segment node might not be present, therefore it must be created
"RTN","PSOSPMA3",278,0)
 . I $G(CUSASAP(SEGID))="" D COPYSEG^PSOSPMU3(PSOASVER,.STDASAP,PSOASVER,SEGID)
"RTN","PSOSPMA3",279,0)
 . D SAVEELM^PSOSPMU3(PSOASVER,SEGID,$S(NEWELM:"+1",1:CUSELM),.ELMDATA)
"RTN","PSOSPMA3",280,0)
 . W "OK",$C(7)
"RTN","PSOSPMA3",281,0)
 G CEL
"RTN","PSOSPMA3",282,0)
 ;
"RTN","PSOSPMA3",283,0)
ASKFLD(FIELD,DEFAULT,PROMPT) ; Prompt
"RTN","PSOSPMA3",284,0)
 ;Input: (r) FIELD   - DD Field reference (e.g., "58.40011;.02") for ^DIR call
"RTN","PSOSPMA3",285,0)
 ;       (o) DEFAULT - Default value
"RTN","PSOSPMA3",286,0)
 ;       (o) PROMPT  - Alternative prompt label
"RTN","PSOSPMA3",287,0)
 ;Output: User entered value or "^"
"RTN","PSOSPMA3",288,0)
 N ASKFLD,DIR,DTOUT,DIRUT,X,Y,DONE
"RTN","PSOSPMA3",289,0)
 S ASKFLD="",DIR(0)=FIELD S:$G(DEFAULT)'="" DIR("B")=DEFAULT S:$G(PROMPT)'="" DIR("A")=PROMPT
"RTN","PSOSPMA3",290,0)
 S DONE=0 F  D ^DIR D  I DONE Q
"RTN","PSOSPMA3",291,0)
 . I X["^",$L(X)>1 W !,"Jumping is not supported. Enter '^' to exit.",$C(7) Q
"RTN","PSOSPMA3",292,0)
 . I X="@" S ASKFLD=X,DONE=1 Q
"RTN","PSOSPMA3",293,0)
 . I (X'=""),$D(DIRUT)!$D(DTOUT) S DONE=1 Q
"RTN","PSOSPMA3",294,0)
 . S ASKFLD=Y,DONE=1
"RTN","PSOSPMA3",295,0)
 I X'="",X'="@",$D(DIRUT)!$D(DTOUT) S ASKFLD="^"
"RTN","PSOSPMA3",296,0)
 Q ASKFLD
"RTN","PSOSPMA3",297,0)
 ;
"RTN","PSOSPMA3",298,0)
ASKMEXPR(LEVEL,ELMID,MAXLEN,DEFAULT) ; Prompt for M SET Expression
"RTN","PSOSPMA3",299,0)
 ;Input: (r) LEVEL   - Level of the Segment where the Data Element is located
"RTN","PSOSPMA3",300,0)
 ;       (r) ELMID   - Data Element ID ("PHA01", "DSP02", etc.)
"RTN","PSOSPMA3",301,0)
 ;       (r) MAXLEN  - Element ID value Maximum Length
"RTN","PSOSPMA3",302,0)
 ;       (o) DEFAULT - Default value
"RTN","PSOSPMA3",303,0)
 ;Output: M SET Expression or "^"
"RTN","PSOSPMA3",304,0)
 N ASKMEXPR,DONE,ERROR
"RTN","PSOSPMA3",305,0)
 S DONE=0,X=$G(DEFAULT)
"RTN","PSOSPMA3",306,0)
 F  D  I DONE Q
"RTN","PSOSPMA3",307,0)
 . S X=$G(DEFAULT) W !,"M SET EXPRESSION: "_$S(X'="":X_"// ",1:"")
"RTN","PSOSPMA3",308,0)
 . R X:DTIME S:X="" X=$G(DEFAULT) I '$T!(X="^") S ASKMEXPR="^",DONE=1 Q
"RTN","PSOSPMA3",309,0)
 . I X["?" W ! D MEXPRHLP^PSOSPML3(LEVEL,ELMID) W ! Q
"RTN","PSOSPMA3",310,0)
 . I '$$VALID^PSOSPMU3(PSOASVER,X) W !,$P($$VALID^PSOSPMU3(PSOASVER,X),"^",2),$C(7),! Q
"RTN","PSOSPMA3",311,0)
 . I '$$CHKVAR^PSOSPMU3(LEVEL,X) Q
"RTN","PSOSPMA3",312,0)
 . D CHKCODE^PSOSPMU3(LEVEL,X,.ERROR) I ERROR Q
"RTN","PSOSPMA3",313,0)
 . I $E(X,1)="""",$E(X,$L(X))="""",$E(X,2,$L(X)-1)'["""",$L(X)-2>MAXLEN D  Q
"RTN","PSOSPMA3",314,0)
 . . W !,"The length cannot be longer than the maximum (",MAXLEN,").",$C(7),!
"RTN","PSOSPMA3",315,0)
 . S ASKMEXPR=X,DONE=1
"RTN","PSOSPMA3",316,0)
 Q ASKMEXPR
"RTN","PSOSPMA3",317,0)
 ;
"RTN","PSOSPMA3",318,0)
SECKEY() ; Checking the Security Key PSO SPMP ADMIN for certain actions
"RTN","PSOSPMA3",319,0)
 I '$D(^XUSEC("PSO SPMP ADMIN",DUZ)) S VALMSG="PSO SPMP ADMIN key required for this action!" W $C(7) Q 0
"RTN","PSOSPMA3",320,0)
 Q 1
"RTN","PSOSPMA3",321,0)
 ;
"RTN","PSOSPMA3",322,0)
LOCK() ; Try to LOCK the SPMP ASAP RECORD DEFINITION file (#58.4)
"RTN","PSOSPMA3",323,0)
 L +^PS(58.4):0 I '$T D  Q 0
"RTN","PSOSPMA3",324,0)
 . S VALMSG="Another user is editing the ASAP Definitions" W $C(7)
"RTN","PSOSPMA3",325,0)
 Q 1
"RTN","PSOSPMA3",326,0)
 ;
"RTN","PSOSPMA3",327,0)
BACK ; Unlock ASAP Definition File Go Back to the list
"RTN","PSOSPMA3",328,0)
 L -^PS(58.4)
"RTN","PSOSPMA3",329,0)
 D INIT^PSOSPML3,HDR^PSOSPML3 I 'VALMCNT Q
"RTN","PSOSPMA3",330,0)
EXIT ; Exit without rebuilding the list
"RTN","PSOSPMA3",331,0)
 S VALMBCK="R"
"RTN","PSOSPMA3",332,0)
 Q
"RTN","PSOSPMB3")
0^19^B46180556^n/a
"RTN","PSOSPMB3",1,0)
PSOSPMB3 ;BIRM/MFR - ASAP Definitions Listman Actions Handler (Cont.) ;11/11/15
"RTN","PSOSPMB3",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**451**;DEC 1997;Build 114
"RTN","PSOSPMB3",3,0)
 ;
"RTN","PSOSPMB3",4,0)
DELCUS ; Handles the 'Delete Customizatoin' Action
"RTN","PSOSPMB3",5,0)
 N CUSTYPE,DIR,DTOUT,DIRUT,VERLST,X,Y,STDASAP,CUSASAP,SEGID,ELMID,ELMPOS,SEG,ELM,DONE,STOP,I,J
"RTN","PSOSPMB3",6,0)
 N CNT,CHILDREN,STDVDLMS,ALLVDLMS
"RTN","PSOSPMB3",7,0)
 I PSOASVER="1995" S VALMSG="ASAP 1995 Version cannot be customized" W $C(7) G EXIT^PSOSPMA3
"RTN","PSOSPMB3",8,0)
 I '$$SECKEY^PSOSPMA3() G EXIT^PSOSPMA3
"RTN","PSOSPMB3",9,0)
 I '$$LOCK^PSOSPMA3() G EXIT^PSOSPMA3
"RTN","PSOSPMB3",10,0)
 S CUSTYPE=0
"RTN","PSOSPMB3",11,0)
 D FULL^VALM1
"RTN","PSOSPMB3",12,0)
 K DIR S DIR("A")="Customization Selection",DIR(0)="SO^"
"RTN","PSOSPMB3",13,0)
 S STDVDLMS=$$VERDATA^PSOSPMU0(PSOASVER,"S"),ALLVDLMS=$$VERDATA^PSOSPMU0(PSOASVER,"B")
"RTN","PSOSPMB3",14,0)
 I STDVDLMS'="",STDVDLMS'=ALLVDLMS D
"RTN","PSOSPMB3",15,0)
 . S DIR(0)=DIR(0)_"D:ASAP "_PSOASVER_" Delimiters (Restore);"
"RTN","PSOSPMB3",16,0)
 S DIR(0)=DIR(0)_"V:ASAP "_PSOASVER_" Version;S:ASAP "_PSOASVER_" Segment;E:ASAP "_PSOASVER_" Data Element"
"RTN","PSOSPMB3",17,0)
 S DIR("?")="Select the customization to be deleted."
"RTN","PSOSPMB3",18,0)
 D ^DIR I (X="")!$D(DIRUT)!$D(DTOUT) G BACK^PSOSPMA3
"RTN","PSOSPMB3",19,0)
 S CUSTYPE=Y
"RTN","PSOSPMB3",20,0)
 ;
"RTN","PSOSPMB3",21,0)
 ; Restore ASAP Version Delimiters
"RTN","PSOSPMB3",22,0)
 I CUSTYPE="D" D  G BACK^PSOSPMA3
"RTN","PSOSPMB3",23,0)
 . W !!,"The customization for the ASAP Version '",PSOASVER,"' delimiters will be deleted and the"
"RTN","PSOSPMB3",24,0)
 . W !,"standard delimiters will be restored to the following:",!
"RTN","PSOSPMB3",25,0)
 . W:$P(STDVDLMS,"^",2)'=$P(ALLVDLMS,"^",2) !?3,"Element Delimiter ('",$P(STDVDLMS,"^",2),"')"
"RTN","PSOSPMB3",26,0)
 . W:$P(STDVDLMS,"^",3)'=$P(ALLVDLMS,"^",3) !?3,"Segment Terminator ('",$P(STDVDLMS,"^",3),"')"
"RTN","PSOSPMB3",27,0)
 . W:$P(STDVDLMS,"^",4)'=$P(ALLVDLMS,"^",4) !?3,"End Of Line Escape (",$S($P(STDVDLMS,"^",4)="":"<NULL>",1:"'"_$P(STDVDLMS,"^",4)_"'"),")"
"RTN","PSOSPMB3",28,0)
 . W ! S X=$$ASKFLD^PSOSPMA3("Y","NO","Confirm Deletion") I X'=1 Q
"RTN","PSOSPMB3",29,0)
 . W ?40,"Restoring..." D SAVEVER^PSOSPMU3(PSOASVER,$$VERDATA^PSOSPMU0(PSOASVER,"S")) H 1 W "OK",$C(7)
"RTN","PSOSPMB3",30,0)
 ;
"RTN","PSOSPMB3",31,0)
 ; Delete ASAP Version
"RTN","PSOSPMB3",32,0)
 I CUSTYPE="V" D  G BACK^PSOSPMA3
"RTN","PSOSPMB3",33,0)
 . D LOADASAP^PSOSPMU0(PSOASVER,"S",.STDASAP) ; Standard ASAP Definition
"RTN","PSOSPMB3",34,0)
 . D LOADASAP^PSOSPMU0(PSOASVER,"C",.CUSASAP) ; Custom ASAP Definition
"RTN","PSOSPMB3",35,0)
 . I $G(STDASAP)="",$$VERINUSE(PSOASVER) D  Q
"RTN","PSOSPMB3",36,0)
 . . W !!,"ASAP Version ",PSOASVER," is being used by ",$$GET1^DIQ(5,$$VERINUSE(PSOASVER),.01)," and cannot be deleted.",$C(7)
"RTN","PSOSPMB3",37,0)
 . . D PAUSE^PSOSPMU1
"RTN","PSOSPMB3",38,0)
 . W !!," ASAP Version: ",PSOASVER
"RTN","PSOSPMB3",39,0)
 . I $G(STDASAP)'="" D
"RTN","PSOSPMB3",40,0)
 . . W !!,"The customization for the ASAP Version '",PSOASVER,"' and all of its custom Segments,"
"RTN","PSOSPMB3",41,0)
 . . W !,"Data Elements and Delimiters will be deleted and the standard definition"
"RTN","PSOSPMB3",42,0)
 . . W !,"will be restored.",!
"RTN","PSOSPMB3",43,0)
 . E  D
"RTN","PSOSPMB3",44,0)
 . . W !!,"The custom ASAP Version '",PSOASVER,"' and all of its Segments and Data Elements"
"RTN","PSOSPMB3",45,0)
 . . W !,"will be deleted.",!
"RTN","PSOSPMB3",46,0)
 . I STDVDLMS'="" D
"RTN","PSOSPMB3",47,0)
 . . W:$P(STDVDLMS,"^",2)'=$P(ALLVDLMS,"^",2) !?3,"Element Delimiter ('",$P(ALLVDLMS,"^",2),"')"
"RTN","PSOSPMB3",48,0)
 . . W:$P(STDVDLMS,"^",3)'=$P(ALLVDLMS,"^",3) !?3,"Segment Terminator ('",$P(ALLVDLMS,"^",3),"')"
"RTN","PSOSPMB3",49,0)
 . . W:$P(STDVDLMS,"^",4)'=$P(ALLVDLMS,"^",4) !?3,"End Of Line Escape (",$S($P(ALLVDLMS,"^",4)="":"<NULL>",1:"'"_$P(ALLVDLMS,"^",4)_"'"),")"
"RTN","PSOSPMB3",50,0)
 . S (STOP,CNT)=3,SEG="999" F  S SEG=$O(CUSASAP(SEG)) Q:SEG=""  D  I STOP="^" Q
"RTN","PSOSPMB3",51,0)
 . . I $$CUSSEG^PSOSPMU3(PSOASVER,SEG) W !?3,$P(CUSASAP(SEG),"^",1),?12,$P(CUSASAP(SEG),"^",2) S CNT=CNT+1
"RTN","PSOSPMB3",52,0)
 . . S ELM=0 F  S ELM=$O(CUSASAP(SEG,ELM)) Q:'ELM  D  I STOP="^" Q
"RTN","PSOSPMB3",53,0)
 . . . W !?3,$P(CUSASAP(SEG,ELM),"^",1),?12,$P(CUSASAP(SEG,ELM),"^",2) S CNT=CNT+1
"RTN","PSOSPMB3",54,0)
 . . . I (CNT>22) S STOP=$$ASKFLD^PSOSPMA3("E",,"Enter <RET> to continue or '^' to STOP"),CNT=0
"RTN","PSOSPMB3",55,0)
 . W ! S X=$$ASKFLD^PSOSPMA3("Y","NO","Confirm Deletion") I X'=1 Q
"RTN","PSOSPMB3",56,0)
 . W ?40,"Deleting..." D DELCUS^PSOSPMU3(PSOASVER) H 1 W "OK",$C(7)
"RTN","PSOSPMB3",57,0)
 ;
"RTN","PSOSPMB3",58,0)
 ; Delete ASAP Segment
"RTN","PSOSPMB3",59,0)
 I CUSTYPE="S" D  G BACK^PSOSPMA3
"RTN","PSOSPMB3",60,0)
 . D LOADASAP^PSOSPMU0(PSOASVER,"S",.STDASAP) ; Standard ASAP Definition
"RTN","PSOSPMB3",61,0)
 . D LOADASAP^PSOSPMU0(PSOASVER,"C",.CUSASAP) ; Custom ASAP Definition
"RTN","PSOSPMB3",62,0)
 . W !!,"ASAP Version ",PSOASVER
"RTN","PSOSPMB3",63,0)
 . K DIR S DIR("?",1)="Enter the Custom ASAP Segment ID that you want to delete."
"RTN","PSOSPMB3",64,0)
 . S DIR("?",2)=" ",DIR("?",3)="   Choose from:"
"RTN","PSOSPMB3",65,0)
 . S (STOP,CNT)=0,SEG="999",CNT=4 F  S SEG=$O(CUSASAP(SEG)) Q:SEG=""  D
"RTN","PSOSPMB3",66,0)
 . . S DIR("?",CNT)="   "_SEG_"   "_$P(CUSASAP(SEG),"^",2),CNT=CNT+1
"RTN","PSOSPMB3",67,0)
 . S DIR("?")=" ",DIR(0)="FO^1:5",DIR("A")="SEGMENT ID"
"RTN","PSOSPMB3",68,0)
 . S SEGID="",DONE=0 F  W ! D ^DIR Q:($D(DIRUT)!$D(DTOUT))!(X="")  D  I DONE Q
"RTN","PSOSPMB3",69,0)
 . . S:'$D(CUSASAP(X)) X=$$UP^XLFSTR(X) I '$D(CUSASAP(X)) W !,"Custom Segment not found!",$C(7) Q
"RTN","PSOSPMB3",70,0)
 . . K CHILDREN I '$D(STDASAP(X)) D  I $O(CHILDREN(""))'="" Q
"RTN","PSOSPMB3",71,0)
 . . . S SEG="999" F  S SEG=$O(CUSASAP(SEG)) Q:SEG=""  I $P(CUSASAP(SEG),"^",3)=X S CHILDREN(SEG)=""
"RTN","PSOSPMB3",72,0)
 . . . I $O(CHILDREN(""))'="" D
"RTN","PSOSPMB3",73,0)
 . . . . W !!,"The following custom children ASAP Segments must be deleted first:",!,$C(7)
"RTN","PSOSPMB3",74,0)
 . . . . S SEG="" F  S SEG=$O(CHILDREN(SEG)) Q:SEG=""  W !?3,SEG,?12,$P(CUSASAP(SEG),"^",2)
"RTN","PSOSPMB3",75,0)
 . . S SEGID=X W "   ",$P(CUSASAP(SEGID),"^",2) S DONE=1
"RTN","PSOSPMB3",76,0)
 . I 'DONE Q
"RTN","PSOSPMB3",77,0)
 . I $D(STDASAP(SEGID)) D
"RTN","PSOSPMB3",78,0)
 . . W !!,"The customization for the Segment '",SEGID,"' and all of its custom Data Elements"
"RTN","PSOSPMB3",79,0)
 . . W !,"will be deleted and the standard definition will be restored.",!
"RTN","PSOSPMB3",80,0)
 . E  D
"RTN","PSOSPMB3",81,0)
 . . W !!,"The custom Segment '",SEGID,"' and all of its Data Elements will be deleted.",!
"RTN","PSOSPMB3",82,0)
 . S STOP="",(ELM,CNT)=0 F  S ELM=$O(CUSASAP(SEGID,ELM)) Q:ELM=""  D
"RTN","PSOSPMB3",83,0)
 . . W !?3,$P(CUSASAP(SEGID,ELM),"^",1),?12,$P(CUSASAP(SEGID,ELM),"^",2) S CNT=CNT+1
"RTN","PSOSPMB3",84,0)
 . . I (CNT>18) S STOP=$$ASKFLD^PSOSPMA3("E",,"Enter <RET> to continue or '^' to STOP"),CNT=0
"RTN","PSOSPMB3",85,0)
 . W ! S X=$$ASKFLD^PSOSPMA3("Y","NO","Confirm Deletion") I X'=1 Q
"RTN","PSOSPMB3",86,0)
 . W ?40,"Deleting..." D DELCUS^PSOSPMU3(PSOASVER,SEGID) H 1 W "OK",$C(7)
"RTN","PSOSPMB3",87,0)
 ;
"RTN","PSOSPMB3",88,0)
 ; Delete ASAP Data Element
"RTN","PSOSPMB3",89,0)
 I CUSTYPE="E" D  G BACK^PSOSPMA3
"RTN","PSOSPMB3",90,0)
 . D LOADASAP^PSOSPMU0(PSOASVER,"S",.STDASAP) ; Standard ASAP Definition
"RTN","PSOSPMB3",91,0)
 . D LOADASAP^PSOSPMU0(PSOASVER,"C",.CUSASAP) ; Custom ASAP Definition
"RTN","PSOSPMB3",92,0)
 . W !!,"ASAP Version ",PSOASVER
"RTN","PSOSPMB3",93,0)
 . K DIR S DIR("?",1)="Enter the Custom ASAP Data Element that you want to delete."
"RTN","PSOSPMB3",94,0)
 . S DIR("?",2)=" ",DIR("?",3)="   Choose from:"
"RTN","PSOSPMB3",95,0)
 . S SEG="999",CNT=4 F  S SEG=$O(CUSASAP(SEG)) Q:SEG=""  D
"RTN","PSOSPMB3",96,0)
 . . S ELM=0 F  S ELM=$O(CUSASAP(SEG,ELM)) Q:'ELM  D
"RTN","PSOSPMB3",97,0)
 . . . S DIR("?",CNT)="   "_$P(CUSASAP(SEG,ELM),"^")_"   "_$P(CUSASAP(SEG,ELM),"^",2),CNT=CNT+1
"RTN","PSOSPMB3",98,0)
 . S DIR("?")=" ",DIR(0)="FO^1:10",DIR("A")="DATA ELEMENT ID"
"RTN","PSOSPMB3",99,0)
 . S DONE=0 F  W ! D ^DIR Q:($D(DIRUT)!$D(DTOUT))!(X="")  D  I DONE Q
"RTN","PSOSPMB3",100,0)
 . . I '$D(CUSASAP($$GETSEGID^PSOSPMU3(X))) S X=$$UP^XLFSTR(X)
"RTN","PSOSPMB3",101,0)
 . . S SEGID=$$GETSEGID^PSOSPMU3(X),ELMPOS=+$P(X,SEGID,2)
"RTN","PSOSPMB3",102,0)
 . . I '$D(CUSASAP(SEGID,ELMPOS)) W !,"Custom Data Element not found!",$C(7) Q
"RTN","PSOSPMB3",103,0)
 . . I $D(CUSASAP(SEGID,ELMPOS+1)),'$D(STDASAP(SEGID,ELMPOS+1)) D  Q
"RTN","PSOSPMB3",104,0)
 . . . W !,"Only the last Custom Data Element in the Segment can be deleted.",$C(7)
"RTN","PSOSPMB3",105,0)
 . . W "   ",$P(CUSASAP(SEGID),"^",2) S DONE=1
"RTN","PSOSPMB3",106,0)
 . I 'DONE Q
"RTN","PSOSPMB3",107,0)
 . I $D(STDASAP(SEGID,ELMPOS)) D
"RTN","PSOSPMB3",108,0)
 . . W !!,"The customization for the Data Element '",$P(STDASAP(SEGID,ELMPOS),"^"),"' will be deleted and the"
"RTN","PSOSPMB3",109,0)
 . . W !,"standard definition will be restored.",!
"RTN","PSOSPMB3",110,0)
 . E  D
"RTN","PSOSPMB3",111,0)
 . . W !!,"The custom Data Element '",$P(CUSASAP(SEGID,ELMPOS),"^",1),"' will be deleted.",!
"RTN","PSOSPMB3",112,0)
 . S X=$$ASKFLD^PSOSPMA3("Y","NO","Confirm Deletion") I X'=1 Q
"RTN","PSOSPMB3",113,0)
 . W ?40,"Deleting..." D DELCUS^PSOSPMU3(PSOASVER,SEGID,$P(CUSASAP(SEGID,ELMPOS),"^",1)) H 1 W "OK",$C(7)
"RTN","PSOSPMB3",114,0)
 G BACK^PSOSPMA3
"RTN","PSOSPMB3",115,0)
 ;
"RTN","PSOSPMB3",116,0)
VERINUSE(PSOASVER) ; Verify whether the ASAP Version is in use or not
"RTN","PSOSPMB3",117,0)
 ; Input: (r) PSOASVER - Source ASAP Version to be cloned (3.0, 4.0, 4.1, 4.2)
"RTN","PSOSPMB3",118,0)
 ;Output: $$VERINUSE - Pointer to first the STATE file (#5) that is using the ASAP Version
"RTN","PSOSPMB3",119,0)
 N STATE,VERINUSE
"RTN","PSOSPMB3",120,0)
  S (STATE,VERINUSE)=0 F  S STATE=$O(^PS(58.41,STATE)) Q:'STATE  D  I VERINUSE Q
"RTN","PSOSPMB3",121,0)
 . I $$GET1^DIQ(58.41,STATE,1,"I")=PSOASVER S VERINUSE=STATE
"RTN","PSOSPMB3",122,0)
 Q VERINUSE
"RTN","PSOSPMKY")
0^20^B101316264^n/a
"RTN","PSOSPMKY",1,0)
PSOSPMKY ;BIRM/MFR - State Prescription Monitoring Program - SSH Key Management ;01/06/16
"RTN","PSOSPMKY",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**451**;DEC 1997;Build 114
"RTN","PSOSPMKY",3,0)
 ;
"RTN","PSOSPMKY",4,0)
EN ; Entry-point
"RTN","PSOSPMKY",5,0)
 N STATEIEN,DIC,X,Y,DUOUT,DTOUT,PSOOS,LOCALDIR,X1,DIR,DIRUT,LOCALDIR
"RTN","PSOSPMKY",6,0)
 W ! K DIC S DIC("A")="Select STATE: ",DIC="^PS(58.41,",DIC(0)="QOEAM"
"RTN","PSOSPMKY",7,0)
 I $O(^PS(58.41,0)) S DIC("B")=$O(^PS(58.41,0))
"RTN","PSOSPMKY",8,0)
 D ^DIC I X=""!(X="^")!$D(DUOUT)!$D(DTOUT) G END
"RTN","PSOSPMKY",9,0)
 K DIC("A") G:Y<0 EN S STATEIEN=+Y
"RTN","PSOSPMKY",10,0)
 ;
"RTN","PSOSPMKY",11,0)
ACTION ; SSH Key Action
"RTN","PSOSPMKY",12,0)
 K DIR S DIR("A")="Action"
"RTN","PSOSPMKY",13,0)
 S DIR(0)="S^V:View Public SSH Key;N:Create New SSH Key Pair;"
"RTN","PSOSPMKY",14,0)
 S DIR(0)=DIR(0)_"D:Delete SSH Key Pair;H:Help with SSH Keys"
"RTN","PSOSPMKY",15,0)
 S DIR("B")="V" D ^DIR I $D(DUOUT)!($D(DIRUT)) G END
"RTN","PSOSPMKY",16,0)
 I Y="N"!(Y="D"),'$D(^XUSEC("PSO SPMP ADMIN",DUZ)) D  G ACTION
"RTN","PSOSPMKY",17,0)
 . W !!,"The PSO SPMP ADMIN security key is required for this action.",$C(7)
"RTN","PSOSPMKY",18,0)
 K ^TMP("PSOPUBKY",$J) D RETRIEVE(STATEIEN,"PUB")
"RTN","PSOSPMKY",19,0)
 I Y="V"!(Y="D"),'$D(^TMP("PSOPUBKY",$J)) D  G ACTION
"RTN","PSOSPMKY",20,0)
 . W !!,"[No SSH Key Pair found for ",$$GET1^DIQ(5,STATEIEN,.01),"]",$C(7) D PAUSE^PSOSPMU1
"RTN","PSOSPMKY",21,0)
 I Y="N"!(Y="D") D SIG^XUSESIG I X="^"!($G(X1)="") W:$G(X1)="" " SIGNATURE NOT VERIFIED",$C(7) G ACTION
"RTN","PSOSPMKY",22,0)
 ; 
"RTN","PSOSPMKY",23,0)
 ; View Public SSH Key
"RTN","PSOSPMKY",24,0)
 I Y="V" D  G ACTION
"RTN","PSOSPMKY",25,0)
 . W ! D VIEW(STATEIEN),PAUSE^PSOSPMU1
"RTN","PSOSPMKY",26,0)
 ;
"RTN","PSOSPMKY",27,0)
 ; Create New SSH Key Pair
"RTN","PSOSPMKY",28,0)
 I Y="N" D  G ACTION
"RTN","PSOSPMKY",29,0)
 . S PSOOS=$$BKENDOS()
"RTN","PSOSPMKY",30,0)
 . S LOCALDIR=$$GET1^DIQ(58.41,STATEIEN,$S(PSOOS["VMS":4,1:15))
"RTN","PSOSPMKY",31,0)
 . I LOCALDIR="" D  Q
"RTN","PSOSPMKY",32,0)
 . . W !!,"The ",$S(PSOOS["VMS":"OPEN VMS",1:"UNIX/LINUX")," LOCAL DIRECTORY parameter is missing for ",$$GET1^DIQ(5,STATEIEN,.01),". Please,"
"RTN","PSOSPMKY",33,0)
 . . W !,"update it in the View/Edit SPMP State Parameters option and try again.",$C(7) D PAUSE^PSOSPMU1
"RTN","PSOSPMKY",34,0)
 . K DIR S DIR("A")="SSH Key Encryption Type",DIR("?")="^D ETHELP^PSOSPMKY"
"RTN","PSOSPMKY",35,0)
 . S DIR(0)="S^DSA:Digital Signature Algorithm (DSA);RSA:Rivest, Shamir & Adleman (RSA)"
"RTN","PSOSPMKY",36,0)
 . S DIR("B")="DSA" D ^DIR I $D(DUOUT)!($D(DIRUT)) Q
"RTN","PSOSPMKY",37,0)
 . S ENCRTYPE=Y
"RTN","PSOSPMKY",38,0)
 . I $D(^TMP("PSOPUBKY",$J)) D
"RTN","PSOSPMKY",39,0)
 . . W !!,$G(IOBON),"WARNING:",$G(IOBOFF)," You may be overwriting SSH Keys that are currently in use.",$C(7)
"RTN","PSOSPMKY",40,0)
 . K DIR S DIR("A")="Confirm Creation of SSH Keys for "_$$GET1^DIQ(5,STATEIEN,.01),DIR(0)="Y",DIR("B")="NO"
"RTN","PSOSPMKY",41,0)
 . W ! D ^DIR I $D(DIRUT)!$D(DUOUT)!'Y Q
"RTN","PSOSPMKY",42,0)
 . ; Deleting Existing SSH Key
"RTN","PSOSPMKY",43,0)
 . I $D(^TMP("PSOPUBKY",$J)) D DELETE(STATEIEN)
"RTN","PSOSPMKY",44,0)
 . W !!,"Creating New SSH Keys, please wait..."
"RTN","PSOSPMKY",45,0)
 . N ZTRTN,ZTIO,ZTDESC,ZTDTH,ZTSK
"RTN","PSOSPMKY",46,0)
 . S ZTRTN="NEWKEY^PSOSPMKY("_STATEIEN_","""_ENCRTYPE_""")",ZTIO=""
"RTN","PSOSPMKY",47,0)
 . S ZTDESC="State Prescription Monitoring Program (SPMP) SSH Key Generation"
"RTN","PSOSPMKY",48,0)
 . S ZTDTH=$$NOW^XLFDT() D ^%ZTLOAD K ZTSK
"RTN","PSOSPMKY",49,0)
 . K ^TMP("PSOPUBKY",$J)
"RTN","PSOSPMKY",50,0)
 . F I=1:1:30 D RETRIEVE(STATEIEN,"PUB") Q:$D(^TMP("PSOPUBKY",$J))  H 1
"RTN","PSOSPMKY",51,0)
 . ; If unable to create the key via Taskman after 30 seconds, creates them in the foreground
"RTN","PSOSPMKY",52,0)
 . I '$D(^TMP("PSOPUBKY",$J)) D
"RTN","PSOSPMKY",53,0)
 . . D NEWKEY(STATEIEN,ENCRTYPE),RETRIEVE(STATEIEN,"PUB")
"RTN","PSOSPMKY",54,0)
 . I '$D(^TMP("PSOPUBKY",$J)) D
"RTN","PSOSPMKY",55,0)
 . . W !!,"There was a problem with the generation of the new SSH Key Pair."
"RTN","PSOSPMKY",56,0)
 . . W !,"Please try again and if the problem persists contact IT Support.",$C(7) D PAUSE^PSOSPMU1
"RTN","PSOSPMKY",57,0)
 . E  W "Done",$C(7)
"RTN","PSOSPMKY",58,0)
 ;
"RTN","PSOSPMKY",59,0)
 ; Delete SSH Key Pair
"RTN","PSOSPMKY",60,0)
 I Y="D" D  G ACTION
"RTN","PSOSPMKY",61,0)
 . D RETRIEVE(STATEIEN,"PUB")
"RTN","PSOSPMKY",62,0)
 . I '$D(^TMP("PSOPUBKY",$J)) D  Q
"RTN","PSOSPMKY",63,0)
 . . W !!,"[No SSH Key Pair found for ",$$GET1^DIQ(5,STATEIEN,.01),"]",$C(7)
"RTN","PSOSPMKY",64,0)
 . W !!,$G(IOBON),"WARNING:",$G(IOBOFF)," You may be deleting SSH Keys that are currently in use.",$C(7)
"RTN","PSOSPMKY",65,0)
 . K DIR S DIR("A")="Confirm Deletion of "_$$GET1^DIQ(5,STATEIEN,.01)_"'s SSH Keys",DIR(0)="Y",DIR("B")="NO"
"RTN","PSOSPMKY",66,0)
 . W ! D ^DIR I $D(DIRUT)!$D(DUOUT)!'Y Q
"RTN","PSOSPMKY",67,0)
 . W !!,"Deleting SSH Keys..." D DELETE(STATEIEN) H 1 W "Done",$C(7)
"RTN","PSOSPMKY",68,0)
 ;
"RTN","PSOSPMKY",69,0)
 ; SSH Key Help
"RTN","PSOSPMKY",70,0)
 I Y="H" D HELP G ACTION
"RTN","PSOSPMKY",71,0)
 ;
"RTN","PSOSPMKY",72,0)
 G ACTION
"RTN","PSOSPMKY",73,0)
 ;
"RTN","PSOSPMKY",74,0)
END Q
"RTN","PSOSPMKY",75,0)
 ;
"RTN","PSOSPMKY",76,0)
NEWKEY(STATEIEN,ENCRTYPE) ; Generate and store a pair of SSH keys for a specific state
"RTN","PSOSPMKY",77,0)
 ; Input: (r) STATEIEN - State that will be using the new key pair. Pointer to the STATE file (#5)
"RTN","PSOSPMKY",78,0)
 ;        (o) ENCRTYPE - SSH Encryption Type (DSA / RSA) (Default: DSA)
"RTN","PSOSPMKY",79,0)
 N LOCALDIR,DATETIME,PSOOS,KEYFILE,PV,FILE2DEL,LINE,OVFLINE,NMSPC,KEYTXT,SAVEKEY,DIE,DR,DA
"RTN","PSOSPMKY",80,0)
 ;
"RTN","PSOSPMKY",81,0)
 I '$G(STATEIEN) Q  ;Error: State missing
"RTN","PSOSPMKY",82,0)
 S PSOOS=$$OS^%ZOSV()
"RTN","PSOSPMKY",83,0)
 S LOCALDIR=$$GET1^DIQ(58.41,STATEIEN,$S(PSOOS["VMS":4,1:15)) I LOCALDIR="" Q  ;Error: Missing directory
"RTN","PSOSPMKY",84,0)
 I $G(ENCRTYPE)'="DSA",$G(ENCRTYPE)'="RSA" S ENCRTYPE="DSA"
"RTN","PSOSPMKY",85,0)
 ;
"RTN","PSOSPMKY",86,0)
 ; LOCK to avoid OS files overwrite
"RTN","PSOSPMKY",87,0)
 F  S DATETIME=$P($$FMTHL7^XLFDT($$HTFM^XLFDT($H)),"-") S KEYFILE="KEY"_DATETIME L +@KEYFILE:0 Q:$T  H 2
"RTN","PSOSPMKY",88,0)
 ;
"RTN","PSOSPMKY",89,0)
 ; Deleting existing SSH Keys first
"RTN","PSOSPMKY",90,0)
 D DELETE(STATEIEN)
"RTN","PSOSPMKY",91,0)
 ;
"RTN","PSOSPMKY",92,0)
 ; OpenVMS SSH Key Generation
"RTN","PSOSPMKY",93,0)
 I PSOOS["VMS" D
"RTN","PSOSPMKY",94,0)
 . N COMFILE
"RTN","PSOSPMKY",95,0)
 . S COMFILE="COM"_DATETIME_".COM"
"RTN","PSOSPMKY",96,0)
 . D OPEN^%ZISH("COMFILE",LOCALDIR,COMFILE,"W")
"RTN","PSOSPMKY",97,0)
 . D USE^%ZISUTL("COMFILE")
"RTN","PSOSPMKY",98,0)
 . W "SSH_KEYGEN == ""$SYS$SYSTEM:TCPIP$SSH_SSH-KEYGEN2.EXE""",!
"RTN","PSOSPMKY",99,0)
 . W "SSH_KEYGEN -t "_$$LOW^XLFSTR($G(ENCRTYPE))_" -""P"" "_LOCALDIR_KEYFILE,!
"RTN","PSOSPMKY",100,0)
 . D CLOSE^%ZISH("COMFILE")
"RTN","PSOSPMKY",101,0)
 . X "S PV=$ZF(-1,""@"_LOCALDIR_COMFILE_""")"
"RTN","PSOSPMKY",102,0)
 . S FILE2DEL(COMFILE)="",FILE2DEL(KEYFILE_".")="",FILE2DEL(KEYFILE_".PUB")=""
"RTN","PSOSPMKY",103,0)
 ;
"RTN","PSOSPMKY",104,0)
 ; Linux/Unix SSH Key Generation
"RTN","PSOSPMKY",105,0)
 I PSOOS["UNIX" D
"RTN","PSOSPMKY",106,0)
 . I '$$DIREXIST^PSOSPMU1(LOCALDIR) D MAKEDIR^PSOSPMU1(LOCALDIR)
"RTN","PSOSPMKY",107,0)
 . X "S PV=$ZF(-1,""ssh-keygen -q -N '' -C '' -t "_$$LOW^XLFSTR($G(ENCRTYPE))_" -f "_LOCALDIR_KEYFILE_""")"
"RTN","PSOSPMKY",108,0)
 . S FILE2DEL(KEYFILE)="",FILE2DEL(KEYFILE_".pub")=""
"RTN","PSOSPMKY",109,0)
 ;
"RTN","PSOSPMKY",110,0)
 K ^TMP("PSOPRVKY",$J),^TMP("PSOPUBKY",$J)
"RTN","PSOSPMKY",111,0)
 ; Retrieving SSH Private Key Content
"RTN","PSOSPMKY",112,0)
 S X=$$FTG^%ZISH(LOCALDIR,KEYFILE_$S(PSOOS["VMS":".",1:""),$NAME(^TMP("PSOPRVKY",$J,1)),3)
"RTN","PSOSPMKY",113,0)
 I '$D(^TMP("PSOPRVKY",$J,1)) Q
"RTN","PSOSPMKY",114,0)
 ; Retrieving SSH Public Key Content
"RTN","PSOSPMKY",115,0)
 S X=$$FTG^%ZISH(LOCALDIR,KEYFILE_$S(PSOOS["VMS":".PUB",1:".pub"),$NAME(^TMP("PSOPUBKY",$J,1)),3)
"RTN","PSOSPMKY",116,0)
 I '$D(^TMP("PSOPUBKY",$J,1)) Q
"RTN","PSOSPMKY",117,0)
 ;
"RTN","PSOSPMKY",118,0)
 ; Deleting temporary files used to generate the keys
"RTN","PSOSPMKY",119,0)
 D DEL^%ZISH(LOCALDIR,"FILE2DEL")
"RTN","PSOSPMKY",120,0)
 ;
"RTN","PSOSPMKY",121,0)
 ; Saving new SSH Keys content in the SPMP STATE PARAMETERS file (#58.41)
"RTN","PSOSPMKY",122,0)
 F NMSPC="PSOPRVKY","PSOPUBKY" D
"RTN","PSOSPMKY",123,0)
 . K KEYTXT,SAVEKEY
"RTN","PSOSPMKY",124,0)
 . F LINE=1:1 Q:'$D(^TMP(NMSPC,$J,LINE))  D
"RTN","PSOSPMKY",125,0)
 . . ; Unix/Linux Public SSH Key has no line-feed (one long line)
"RTN","PSOSPMKY",126,0)
 . . I PSOOS["UNIX",NMSPC="PSOPUBKY" D  Q
"RTN","PSOSPMKY",127,0)
 . . . S KEYTXT(1)=^TMP(NMSPC,$J,LINE)
"RTN","PSOSPMKY",128,0)
 . . . F OVFLINE=1:1 Q:'$D(^TMP(NMSPC,$J,LINE,"OVF",OVFLINE))  D
"RTN","PSOSPMKY",129,0)
 . . . . S KEYTXT(1)=$G(KEYTXT(1))_^TMP(NMSPC,$J,LINE,"OVF",OVFLINE)
"RTN","PSOSPMKY",130,0)
 . . S KEYTXT(LINE)=$$ENCRYP^XUSRB1(^TMP(NMSPC,$J,LINE))
"RTN","PSOSPMKY",131,0)
 . I PSOOS["UNIX",NMSPC="PSOPUBKY" S KEYTXT(1)=$$ENCRYP^XUSRB1(KEYTXT(1))
"RTN","PSOSPMKY",132,0)
 . S SAVEKEY(58.41,STATEIEN_",",$S(NMSPC="PSOPRVKY":100,1:200))="KEYTXT"
"RTN","PSOSPMKY",133,0)
 . D UPDATE^DIE("","SAVEKEY")
"RTN","PSOSPMKY",134,0)
 . K ^TMP(NMSPC,$J)
"RTN","PSOSPMKY",135,0)
 ;
"RTN","PSOSPMKY",136,0)
 ; Saving SSH Key Format (SSH2/OpenSSH) and Encryption Type (DSA/RSA) fields
"RTN","PSOSPMKY",137,0)
 K DIE S DIE="^PS(58.41,",DA=STATEIEN
"RTN","PSOSPMKY",138,0)
 S DR="18///"_$S(PSOOS["VMS":"SSH2",1:"OSSH")_";19///"_ENCRTYPE D ^DIE
"RTN","PSOSPMKY",139,0)
 ;
"RTN","PSOSPMKY",140,0)
 L -@KEYFILE
"RTN","PSOSPMKY",141,0)
 Q
"RTN","PSOSPMKY",142,0)
 ;
"RTN","PSOSPMKY",143,0)
RETRIEVE(STATEIEN,KEYTYPE) ; Retrieve the SSH Key into the ^TMP global
"RTN","PSOSPMKY",144,0)
 ; Input: (r) STATEIEN - State to retrieve the SSH Key from
"RTN","PSOSPMKY",145,0)
 ;        (o) KEYTYPE  - SSH Key Type (PUB - Public / PRV - PRivate) (Default: Public)
"RTN","PSOSPMKY",146,0)
 ;Output: ^TMP("PSO[PUB/PRV]KY",$J,0)="SSH Key Format (SSH2 / OpenSSH)^Encryption Type (DSA / RSA)"
"RTN","PSOSPMKY",147,0)
 ;        ^TMP("PSO[PUB/PRV]KY",$J,1-N)=[SSH Key Content]
"RTN","PSOSPMKY",148,0)
 N X,LINE,KEYTXT,NMSPC
"RTN","PSOSPMKY",149,0)
 I $G(KEYTYPE)'="PUB",$G(KEYTYPE)'="PRV" S KEYTYPE="PUB"
"RTN","PSOSPMKY",150,0)
 S X=$$GET1^DIQ(58.41,STATEIEN_",",$S(KEYTYPE="PRV":100,1:200),,"KEYTXT")
"RTN","PSOSPMKY",151,0)
 S NMSPC=$S(KEYTYPE="PRV":"PSOPRVKY",1:"PSOPUBKY")
"RTN","PSOSPMKY",152,0)
 K ^TMP(NMSPC,$J)
"RTN","PSOSPMKY",153,0)
 F LINE=1:1 Q:'$D(KEYTXT(LINE))  D
"RTN","PSOSPMKY",154,0)
 . S ^TMP(NMSPC,$J,LINE)=$$DECRYP^XUSRB1(KEYTXT(LINE))
"RTN","PSOSPMKY",155,0)
 I $D(^TMP(NMSPC,$J)) D
"RTN","PSOSPMKY",156,0)
 . S ^TMP(NMSPC,$J,0)=$$GET1^DIQ(58.41,STATEIEN,18,"I")_"^"_$$GET1^DIQ(58.41,STATEIEN,19,"I")
"RTN","PSOSPMKY",157,0)
 Q
"RTN","PSOSPMKY",158,0)
 ;
"RTN","PSOSPMKY",159,0)
VIEW(STATEIEN) ; Displays the SSH Public Key
"RTN","PSOSPMKY",160,0)
 ;Input: (r) STATEIEN - State to display the Public SSH Key for
"RTN","PSOSPMKY",161,0)
 ;       ^TMP("PSOPUBKY",$J,0)="SSH Key Format (SSH2 / OpenSSH)^Encryption Type (DSA / RSA)"
"RTN","PSOSPMKY",162,0)
 ;       ^TMP("PSOPUBKY",$J,1-N)=[SSH Key Content]
"RTN","PSOSPMKY",163,0)
 N SSHKEY,DASHLN
"RTN","PSOSPMKY",164,0)
 I '$G(STATEIEN) Q
"RTN","PSOSPMKY",165,0)
 S SSHKEY=$$OPENSSH(),$P(DASHLN,"-",81)=""
"RTN","PSOSPMKY",166,0)
 W !,$$GET1^DIQ(5,STATEIEN,.01),"'s Public SSH Key (",$P($G(^TMP("PSOPUBKY",$J,0)),"^",2),") content (does not include dash lines):"
"RTN","PSOSPMKY",167,0)
 W !,DASHLN
"RTN","PSOSPMKY",168,0)
 F  Q:$L(SSHKEY)=0  W !,$E(SSHKEY,1,80) S SSHKEY=$E(SSHKEY,81,9999)
"RTN","PSOSPMKY",169,0)
 W !,DASHLN
"RTN","PSOSPMKY",170,0)
 Q
"RTN","PSOSPMKY",171,0)
 ;
"RTN","PSOSPMKY",172,0)
DELETE(STATEIEN) ; Delete Both SSH Keys associated with the State
"RTN","PSOSPMKY",173,0)
 ;Input: (r) STATEIEN - State from what the key should be deleted from in the SPMP STATE PARAMETERS file (#58.41)
"RTN","PSOSPMKY",174,0)
 N DIE,DA,DR
"RTN","PSOSPMKY",175,0)
 S DIE="^PS(58.41,",DA=+$G(STATEIEN),DR="18///@;19///@;100///@;200///@" D ^DIE
"RTN","PSOSPMKY",176,0)
 K ^TMP("PSOPRVKY",$J),^TMP("PSOPUBKY",$J)
"RTN","PSOSPMKY",177,0)
 Q
"RTN","PSOSPMKY",178,0)
 ;
"RTN","PSOSPMKY",179,0)
OPENSSH() ; Returns the SSH Public Key in OpenSSH Format (Converts if necessary)
"RTN","PSOSPMKY",180,0)
 ;Input: ^TMP("PSOPUBKY",$J,0)="SSH Key Format (SSH2 / OpenSSH)^Encryption Type (DSA / RSA)"
"RTN","PSOSPMKY",181,0)
 ;       ^TMP("PSOPUBKY",$J,1-N)=[SSH Key Content]
"RTN","PSOSPMKY",182,0)
 N OPENSSH,ENCRTYPE,LINE
"RTN","PSOSPMKY",183,0)
 S OPENSSH=""
"RTN","PSOSPMKY",184,0)
 I $P($G(^TMP("PSOPUBKY",$J,0)),"^",1)="SSH2" D
"RTN","PSOSPMKY",185,0)
 . S ENCRTYPE=$P($G(^TMP("PSOPUBKY",$J,0)),"^",2),OPENSSH=""
"RTN","PSOSPMKY",186,0)
 . F LINE=5:1 Q:'$D(^TMP("PSOPUBKY",$J,LINE))  D
"RTN","PSOSPMKY",187,0)
 . . I $G(^TMP("PSOPUBKY",$J,LINE))["---- END" Q
"RTN","PSOSPMKY",188,0)
 . . S OPENSSH=OPENSSH_$G(^TMP("PSOPUBKY",$J,LINE))
"RTN","PSOSPMKY",189,0)
 . S OPENSSH=$S(ENCRTYPE="RSA":"ssh-rsa",1:"ssh-dss")_" "_OPENSSH
"RTN","PSOSPMKY",190,0)
 E  D
"RTN","PSOSPMKY",191,0)
 . F LINE=1:1 Q:'$D(^TMP("PSOPUBKY",$J,LINE))  D
"RTN","PSOSPMKY",192,0)
 . . S OPENSSH=OPENSSH_$G(^TMP("PSOPUBKY",$J,LINE))
"RTN","PSOSPMKY",193,0)
 Q OPENSSH
"RTN","PSOSPMKY",194,0)
 ;
"RTN","PSOSPMKY",195,0)
BKENDOS() ; Returns the Backend Server Operating System (OS)
"RTN","PSOSPMKY",196,0)
 ;Output: Backend Operating System (e.,g., "VMS", "UNIX")
"RTN","PSOSPMKY",197,0)
 N BKENDOS,ZTRTN,ZTIO,ZTDESC,ZTDTH,ZTSK,I
"RTN","PSOSPMKY",198,0)
 K ^XTMP("PSOSPMKY",$J,"OS")
"RTN","PSOSPMKY",199,0)
 S BKENDOS="",ZTRTN="SETOS^PSOSPMKY("_$J_")",ZTIO=""
"RTN","PSOSPMKY",200,0)
 S ZTDESC="State Prescription Monitoring Program (SPMP) Backend Server OS Check"
"RTN","PSOSPMKY",201,0)
 S ZTDTH=$$NOW^XLFDT() D ^%ZTLOAD
"RTN","PSOSPMKY",202,0)
 F I=1:1:5 S BKENDOS=$G(^XTMP("PSOSPMKY",$J,"OS")) Q:BKENDOS'=""  H 1
"RTN","PSOSPMKY",203,0)
 K ^XTMP("PSOSPMKY",$J,"OS")
"RTN","PSOSPMKY",204,0)
 Q $S(BKENDOS'="":BKENDOS,1:$$OS^%ZOSV())
"RTN","PSOSPMKY",205,0)
 ;
"RTN","PSOSPMKY",206,0)
SETOS(JOB) ; Sets the Operating Systems in ^XTMP("PSOSPMKY",$J,"OS") (Called via Taskman)
"RTN","PSOSPMKY",207,0)
 ;Input: JOB - $Job value from calling process
"RTN","PSOSPMKY",208,0)
 S ^XTMP("PSOSPMKY",JOB,"OS")=$$OS^%ZOSV()
"RTN","PSOSPMKY",209,0)
 Q
"RTN","PSOSPMKY",210,0)
 ;
"RTN","PSOSPMKY",211,0)
HELP ; SSH Key Help Text
"RTN","PSOSPMKY",212,0)
 W !!,"Secure SHell (SSH) Encryption Keys are used to automate the data transmission"
"RTN","PSOSPMKY",213,0)
 W !,"to the State Prescription Monitoring Programs (SPMPs). Follow the steps below"
"RTN","PSOSPMKY",214,0)
 W !,"to successfully setup SPMP transmissions from VistA to the state/vendor server:"
"RTN","PSOSPMKY",215,0)
 W !,""
"RTN","PSOSPMKY",216,0)
 W !,"Step 1: Select the 'N' (Create New SSH Key Pair) Action and follow the prompts"
"RTN","PSOSPMKY",217,0)
 W !,"        to create a new pair of SSH keys. If you already have an existing SSH"
"RTN","PSOSPMKY",218,0)
 W !,"        Key Pair you can skip this step."
"RTN","PSOSPMKY",219,0)
 W !,"        You can check whether you already have an existing SSH Key Pair"
"RTN","PSOSPMKY",220,0)
 W !,"        through the 'V' (View Public SSH Key) Action."
"RTN","PSOSPMKY",221,0)
 W !,""
"RTN","PSOSPMKY",222,0)
 W !,"        Encryption Type: DSA or RSA?"
"RTN","PSOSPMKY",223,0)
 W !,"        ----------------------------"
"RTN","PSOSPMKY",224,0)
 D ETHELP,PAUSE^PSOSPMU1
"RTN","PSOSPMKY",225,0)
 W !!,"Step 2: Share the Public SSH Key content with the state/vendor. In order to"
"RTN","PSOSPMKY",226,0)
 W !,"        successfully establish SPMP transmissions the state/vendor will have"
"RTN","PSOSPMKY",227,0)
 W !,"        to install/configure the new SSH Key created in step 1 for the"
"RTN","PSOSPMKY",228,0)
 W !,"        user id they assigned to your site. Use the 'V' (View Public SSH Key)"
"RTN","PSOSPMKY",229,0)
 W !,"        Action to retrieve the content of the Public SSH key. The Public SSH"
"RTN","PSOSPMKY",230,0)
 W !,"        Key should not contain line-feed characters, therefore after you copy"
"RTN","PSOSPMKY",231,0)
 W !,"        & paste it from the terminal emulator into an email or text editor"
"RTN","PSOSPMKY",232,0)
 W !,"        make sure it contains only one line of text (no wrapping)."
"RTN","PSOSPMKY",233,0)
 Q
"RTN","PSOSPMKY",234,0)
ETHELP ; Encryption Type Help
"RTN","PSOSPMKY",235,0)
 W !,"        Digital Signature Algorithm (DSA) and Rivest, Shamir & Adleman (RSA)"
"RTN","PSOSPMKY",236,0)
 W !,"        are two of the most common encryption algorithms used by the IT"
"RTN","PSOSPMKY",237,0)
 W !,"        industry for securely sharing data. The majority of SPMP servers can"
"RTN","PSOSPMKY",238,0)
 W !,"        handle either type; however there are vendors that accept only one"
"RTN","PSOSPMKY",239,0)
 W !,"        specific type. You will need to contact the SPMP vendor support to"
"RTN","PSOSPMKY",240,0)
 W !,"        determine which type to select."
"RTN","PSOSPMKY",241,0)
 Q
"RTN","PSOSPML0")
0^9^B32864109^B30087960
"RTN","PSOSPML0",1,0)
PSOSPML0 ;BIRM/MFR - Scheduled Batch Export ;10/10/12
"RTN","PSOSPML0",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408,451**;DEC 1997;Build 114
"RTN","PSOSPML0",3,0)
 ;
"RTN","PSOSPML0",4,0)
AUTO ; SPMP Scheduled Background Job Edit
"RTN","PSOSPML0",5,0)
 N DIC,Y S DIC(0)="XZM",DIC="^DIC(19.2,",X="PSO SPMP SCHEDULED EXPORT" D ^DIC
"RTN","PSOSPML0",6,0)
 I +Y>0 S DA=Y D EDIT^XUTMOPT("PSO SPMP SCHEDULED EXPORT") Q
"RTN","PSOSPML0",7,0)
 D RESCH^XUTMOPT("PSO SPMP SCHEDULED EXPORT",$$FMADD^XLFDT(DT,1)+.0001,"","24H","L")
"RTN","PSOSPML0",8,0)
 D EDIT^XUTMOPT("PSO SPMP SCHEDULED EXPORT")
"RTN","PSOSPML0",9,0)
 Q
"RTN","PSOSPML0",10,0)
 ;
"RTN","PSOSPML0",11,0)
EXPORT ; SPMP Nightly Scheduled Export
"RTN","PSOSPML0",12,0)
 N STATE,NODE0,EXPNODE,BEGEXPDT,FREQCY,YESTERDY,BATIEN,RXCNT,RTSBGDT,RTSENDT
"RTN","PSOSPML0",13,0)
 ;
"RTN","PSOSPML0",14,0)
 S STATE=0
"RTN","PSOSPML0",15,0)
 F  S STATE=$O(^PS(58.41,STATE)) Q:'STATE  D
"RTN","PSOSPML0",16,0)
 . K ^TMP("PSOSPMRX",$J)
"RTN","PSOSPML0",17,0)
 . I $P($$SPOK^PSOSPMUT(STATE),"^")=-1 D  Q
"RTN","PSOSPML0",18,0)
 . . D LOGERROR^PSOSPMUT(0,STATE,$P($$SPOK^PSOSPMUT(STATE),"^",2),1)
"RTN","PSOSPML0",19,0)
 . S NODE0=$G(^PS(58.41,STATE,0)),EXPNODE=$G(^PS(58.41,STATE,"EXPORT"))
"RTN","PSOSPML0",20,0)
 . S FREQCY=$P(NODE0,"^",4),YESTERDY=$$FMADD^XLFDT(DT,-1)
"RTN","PSOSPML0",21,0)
 . S BEGEXPDT=$$FMADD^XLFDT(DT,-FREQCY)
"RTN","PSOSPML0",22,0)
 . I $P(EXPNODE,"^") S BEGEXPDT=$$FMADD^XLFDT($P(EXPNODE,"^"),+1)
"RTN","PSOSPML0",23,0)
 . ; Cannot run for current day because it will skip Rx's w/ RELEASE DATE/TIME w/out time
"RTN","PSOSPML0",24,0)
 . I BEGEXPDT>YESTERDY Q
"RTN","PSOSPML0",25,0)
 . ; Checking if it is time to transmit based on the TRANSMISSION FREQUENCY value
"RTN","PSOSPML0",26,0)
 . I $$FMADD^XLFDT(BEGEXPDT,FREQCY)>DT Q
"RTN","PSOSPML0",27,0)
 . ; Preventing a Scheduled Transmission Date Range of more than 30 days - Reset to Frequency
"RTN","PSOSPML0",28,0)
 . I $$FMDIFF^XLFDT(YESTERDY,BEGEXPDT)>30 S BEGEXPDT=$$FMADD^XLFDT(YESTERDY,-FREQCY)
"RTN","PSOSPML0",29,0)
 . ; The legislation allowing VA to report was published on 02/11/2013
"RTN","PSOSPML0",30,0)
 . I BEGEXPDT<3130211 S BEGEXPDT=3130211
"RTN","PSOSPML0",31,0)
 . ; Gathering the prescriptions to be transmitted in the ^TMP("PSOSPMRX",$J) global
"RTN","PSOSPML0",32,0)
 . S RXCNT=$$GATHER^PSOSPMU1(STATE,BEGEXPDT-.1,YESTERDY+.24,"N")
"RTN","PSOSPML0",33,0)
 . ; The ^TMP("PSOSPMRX",$J) returned will be used to build the batch 
"RTN","PSOSPML0",34,0)
 . I RXCNT>0 D
"RTN","PSOSPML0",35,0)
 . . S BATIEN=$$BLDBAT^PSOSPMU1("SC",BEGEXPDT,YESTERDY)
"RTN","PSOSPML0",36,0)
 . . I $P(BATIEN,"^")=-1 D LOGERROR^PSOSPMUT(0,STATE,$P(BATIEN,"^",2),1) Q
"RTN","PSOSPML0",37,0)
 . . ; Automatic sFTP Transmission to the state
"RTN","PSOSPML0",38,0)
 . . I $$GET1^DIQ(58.41,STATE,13,"I")="A" D
"RTN","PSOSPML0",39,0)
 . . . D EXPORT^PSOSPMUT(BATIEN,"EXPORT",1)
"RTN","PSOSPML0",40,0)
 . . ; Manual sFTP Transmission to the state
"RTN","PSOSPML0",41,0)
 . . I $$GET1^DIQ(58.41,STATE,13,"I")="M" D
"RTN","PSOSPML0",42,0)
 . . . D SENDMAIL(BATIEN,"S")
"RTN","PSOSPML0",43,0)
 . K DIE,DR,DA S DR="11///"_YESTERDY S DIE="^PS(58.41,",DA=STATE D ^DIE
"RTN","PSOSPML0",44,0)
 ;
"RTN","PSOSPML0",45,0)
 ; Return To Stock Batch for ASAP 1995 states only (Weekly) - Separate file
"RTN","PSOSPML0",46,0)
 I $$UP^XLFSTR($$DOW^XLFDT(DT))'="SUNDAY" Q
"RTN","PSOSPML0",47,0)
 S STATE=0 F  S STATE=$O(^PS(58.41,STATE)) Q:'STATE  D
"RTN","PSOSPML0",48,0)
 . ; State not using ASAP 1995
"RTN","PSOSPML0",49,0)
 . I $$GET1^DIQ(58.41,STATE,1,"I")'="1995" Q
"RTN","PSOSPML0",50,0)
 . ; State accepts Return to Stock transmissions
"RTN","PSOSPML0",51,0)
 . S RTSBGDT=$$FMADD^XLFDT(DT,-7),RTSENDT=$$FMADD^XLFDT(DT,-1)
"RTN","PSOSPML0",52,0)
 . S RXCNT=$$GATHER^PSOSPMU1(STATE,RTSBGDT-.1,RTSENDT+.24,"N",1) I RXCNT'>0 Q
"RTN","PSOSPML0",53,0)
 . S BATIEN=$$BLDBAT^PSOSPMU1("VD",RTSBGDT,RTSENDT)
"RTN","PSOSPML0",54,0)
 . I $$GET1^DIQ(58.41,STATE,12,"I") D
"RTN","PSOSPML0",55,0)
 . . D EXPORT^PSOSPMUT(BATIEN,"EXPORT",1)
"RTN","PSOSPML0",56,0)
 . E  D SENDMAIL(BATIEN,"R")
"RTN","PSOSPML0",57,0)
 Q
"RTN","PSOSPML0",58,0)
 ;
"RTN","PSOSPML0",59,0)
SENDMAIL(BATCHIEN,BATTYPE) ; ASAP 1995 Only - Mailman message about Return To Stock Records
"RTN","PSOSPML0",60,0)
 ;Input: BATCHIEN - Pointer to BATCH file (#58.42)
"RTN","PSOSPML0",61,0)
 ;       BATTYPE  - Batch Type: S: Scheduled / R: Return to Stock (ASAP 1995 only) 
"RTN","PSOSPML0",62,0)
 N XMDUZ,XMMG,XMSUB,XMTEXT,XMY,XMZ,PSOMSG,USR,STANAME
"RTN","PSOSPML0",63,0)
 ;
"RTN","PSOSPML0",64,0)
 S STANAME=$$GET1^DIQ(58.42,BATCHIEN,1)
"RTN","PSOSPML0",65,0)
 ; - Scheduled Batch Notification
"RTN","PSOSPML0",66,0)
 I (BATTYPE="S") D
"RTN","PSOSPML0",67,0)
 . S XMSUB=STANAME_" CS PMP Batch Ready"
"RTN","PSOSPML0",68,0)
 . S XMSUB=XMSUB_" ("_$$FMTE^XLFDT($$GET1^DIQ(58.42,BATCHIEN,4,"I")\1,"2Z")
"RTN","PSOSPML0",69,0)
 . S XMSUB=XMSUB_"-"_$$FMTE^XLFDT($$GET1^DIQ(58.42,BATCHIEN,5,"I")\1,"2Z")_")"
"RTN","PSOSPML0",70,0)
 . S PSOMSG(1)="Batch #: "_BATCHIEN_"      Period : "_$$FMTE^XLFDT($$GET1^DIQ(58.42,BATCHIEN,4,"I")\1,"2Z")_" thru "_$$FMTE^XLFDT($$GET1^DIQ(58.42,BATCHIEN,5,"I")\1,"2Z")
"RTN","PSOSPML0",71,0)
 . S PSOMSG(2)=""
"RTN","PSOSPML0",72,0)
 . S PSOMSG(3)="The scheduled batch #"_BATCHIEN_" containing Controlled Substance Prescription data"
"RTN","PSOSPML0",73,0)
 . S PSOMSG(4)="to be submitted to the Prescription Monitoring Program (PMP) for the state of "
"RTN","PSOSPML0",74,0)
 . S PSOMSG(5)=STANAME_" is ready."
"RTN","PSOSPML0",75,0)
 . S PSOMSG(6)=""
"RTN","PSOSPML0",76,0)
 . S PSOMSG(7)="Please use the option ""View/Export Batch"" [PSO SPMP BATCH VIEW/EXPORT], then"
"RTN","PSOSPML0",77,0)
 . S PSOMSG(8)="enter the batch #"_BATCHIEN_", choose the action 'EXP' and follow the instructions"
"RTN","PSOSPML0",78,0)
 . S PSOMSG(9)="to send the file to the state."
"RTN","PSOSPML0",79,0)
 ;
"RTN","PSOSPML0",80,0)
 ; - Return To Stock Batch Notification (ASAP 1995 only)
"RTN","PSOSPML0",81,0)
 I (BATTYPE="R") D
"RTN","PSOSPML0",82,0)
 . S XMSUB=STANAME_" - CS Rx Fills Returned To Stock"
"RTN","PSOSPML0",83,0)
 . S XMDUZ="SPMP Scheduled Transmission"
"RTN","PSOSPML0",84,0)
 . S PSOMSG(1)="There were Controlled Substance Rx fills that had been reported to the State"
"RTN","PSOSPML0",85,0)
 . S PSOMSG(2)="Prescription Monitoring Program (SPMP) and were later returned to stock:"
"RTN","PSOSPML0",86,0)
 . S PSOMSG(3)=""
"RTN","PSOSPML0",87,0)
 . S PSOMSG(4)="Batch #: "_BATCHIEN_"      Period : "_$$FMTE^XLFDT($$GET1^DIQ(58.42,BATCHIEN,4,"I")\1,"2Z")_" thru "_$$FMTE^XLFDT($$GET1^DIQ(58.42,BATCHIEN,5,"I")\1,"2Z")
"RTN","PSOSPML0",88,0)
 . S PSOMSG(6)=""
"RTN","PSOSPML0",89,0)
 . S PSOMSG(7)="Please, retrieve the batch above via the View/Export Batch [PSO SPMP BATCH"
"RTN","PSOSPML0",90,0)
 . S PSOMSG(8)="VIEW/EXPORT] option and manually capture/upload the data to the State"
"RTN","PSOSPML0",91,0)
 . S PSOMSG(9)="Prescription Monitoring Program (SPMP) website for "_STANAME_"."
"RTN","PSOSPML0",92,0)
 . S PSOMSG(10)=""
"RTN","PSOSPML0",93,0)
 . S PSOMSG(11)="***************************** IMPORTANT **********************************"
"RTN","PSOSPML0",94,0)
 . S PSOMSG(12)="When you upload this file to the state website, make sure to select the"
"RTN","PSOSPML0",95,0)
 . S PSOMSG(13)="correct import option, usually called ""Back Records Out of the System"", to"
"RTN","PSOSPML0",96,0)
 . S PSOMSG(14)="avoid reporting duplicate records for the patients."
"RTN","PSOSPML0",97,0)
 . S PSOMSG(15)="**************************************************************************"
"RTN","PSOSPML0",98,0)
 ;
"RTN","PSOSPML0",99,0)
 S XMTEXT="PSOMSG("
"RTN","PSOSPML0",100,0)
 ; If there are no active members in the mailgroup sends message to PSDMGR key holders
"RTN","PSOSPML0",101,0)
 I $$GOTLOCAL^XMXAPIG("PSO SPMP NOTIFICATIONS") D
"RTN","PSOSPML0",102,0)
 . S XMY("G.PSO SPMP NOTIFICATIONS")=""
"RTN","PSOSPML0",103,0)
 E  D
"RTN","PSOSPML0",104,0)
 . S USR=0 F  S USR=$O(^XUSEC("PSDMGR",USR)) Q:'USR  S XMY(USR)=""
"RTN","PSOSPML0",105,0)
 ;
"RTN","PSOSPML0",106,0)
 D ^XMD
"RTN","PSOSPML0",107,0)
 Q
"RTN","PSOSPML1")
0^10^B47175688^B45648973
"RTN","PSOSPML1",1,0)
PSOSPML1 ;BIRM/MFR - Export Batch Processing Listman Driver ;10/10/12
"RTN","PSOSPML1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408,451**;DEC 1997;Build 114
"RTN","PSOSPML1",3,0)
 ;
"RTN","PSOSPML1",4,0)
 N %DT,BATIEN,DIR,DIRUT,X,DIC,DTOUT,DUOUT,STATEIEN,PSOFROM,PSOTO,VALM,VALMCNT,VALMHDR,VALMBCK,VALMSG,PSOLSTLN
"RTN","PSOSPML1",5,0)
 ;
"RTN","PSOSPML1",6,0)
STA ; STATE prompt
"RTN","PSOSPML1",7,0)
 K DIC W ! S DIC("A")="STATE: ",DIC="^DIC(5,"
"RTN","PSOSPML1",8,0)
 S STATEIEN=$O(^PS(58.41,0)) S:STATEIEN DIC("B")=STATEIEN
"RTN","PSOSPML1",9,0)
 S DIC(0)="AEQMZ" D ^DIC I X="^"!(Y<0) G EXIT
"RTN","PSOSPML1",10,0)
 I +$$SPOK^PSOSPMUT(+Y)=-1 W !!,$P($$SPOK^PSOSPMUT(+Y),"^",2),$C(7) G STA
"RTN","PSOSPML1",11,0)
 S STATEIEN=+Y
"RTN","PSOSPML1",12,0)
 ;
"RTN","PSOSPML1",13,0)
 ; - Ask for FROM DATE
"RTN","PSOSPML1",14,0)
 S %DT(0)=-DT,%DT="AEP",%DT("A")="BATCH CREATED BEGIN DATE: "
"RTN","PSOSPML1",15,0)
 W ! D ^%DT I Y<0!($D(DTOUT)) G EXIT
"RTN","PSOSPML1",16,0)
 S PSOFROM=Y\1-.00001
"RTN","PSOSPML1",17,0)
 ;
"RTN","PSOSPML1",18,0)
 ; - Ask for TO DATE
"RTN","PSOSPML1",19,0)
 K %DT S %DT(0)=PSOFROM+1\1,%DT="AEP",%DT("B")="TODAY",%DT("A")="BATCH CREATED END DATE: "
"RTN","PSOSPML1",20,0)
 W ! D ^%DT I Y<0!($D(DTOUT)) G EXIT
"RTN","PSOSPML1",21,0)
 S PSOTO=Y\1+.99999
"RTN","PSOSPML1",22,0)
 ;
"RTN","PSOSPML1",23,0)
 D EN(STATEIEN,PSOFROM,PSOTO)
"RTN","PSOSPML1",24,0)
 ;
"RTN","PSOSPML1",25,0)
 G EXIT
"RTN","PSOSPML1",26,0)
 ;
"RTN","PSOSPML1",27,0)
EN(STATEIEN,PSOFROM,PSOTO) ; Entry point
"RTN","PSOSPML1",28,0)
 D EN^VALM("PSO SPMP BATCH PROCESSING")
"RTN","PSOSPML1",29,0)
 D FULL^VALM1
"RTN","PSOSPML1",30,0)
 Q
"RTN","PSOSPML1",31,0)
 ;
"RTN","PSOSPML1",32,0)
HDR ; - Builds the Header section
"RTN","PSOSPML1",33,0)
 K VALMHDR
"RTN","PSOSPML1",34,0)
 S VALMHDR(1)="State: "_$$GET1^DIQ(5,STATEIEN,.01)
"RTN","PSOSPML1",35,0)
 S $E(VALMHDR(1),40)="Date Range: "_$$FMTE^XLFDT(PSOFROM+1\1,2)_" - "_$$FMTE^XLFDT(PSOTO\1,2)
"RTN","PSOSPML1",36,0)
 D SETHDR()
"RTN","PSOSPML1",37,0)
 Q
"RTN","PSOSPML1",38,0)
 ;
"RTN","PSOSPML1",39,0)
SETHDR() ; - Displays the Header Line
"RTN","PSOSPML1",40,0)
 N HDR,ORD,POS
"RTN","PSOSPML1",41,0)
 ;
"RTN","PSOSPML1",42,0)
 S HDR="   #",$E(HDR,7)="BATCH#",$E(HDR,15)="DATE/TIME CREATED",$E(HDR,34)="REL. DATE RANGE"
"RTN","PSOSPML1",43,0)
 S $E(HDR,54)="TYPE",$E(HDR,66)="Rx's",$E(HDR,72)="EXPORTED?"
"RTN","PSOSPML1",44,0)
 S $E(HDR,81)="" D INSTR^VALM1(IORVON_HDR_IOINORM,1,3)
"RTN","PSOSPML1",45,0)
 Q
"RTN","PSOSPML1",46,0)
 ;
"RTN","PSOSPML1",47,0)
INIT ; Builds the Body section
"RTN","PSOSPML1",48,0)
 N RXCNT,BATDT,I,LINE,TYPE,NODE0,RX,COUNT,DRUGIEN,DRUGNAM,DRUGDEA,DSPLINE,FILL
"RTN","PSOSPML1",49,0)
 ;
"RTN","PSOSPML1",50,0)
 K ^TMP("PSOSPML1",$J) S (VALMCNT,LINE,RXCNT,COUNT,PSOLSTLN)=0
"RTN","PSOSPML1",51,0)
 S BATDT=PSOFROM,BATIEN=0
"RTN","PSOSPML1",52,0)
 F  S BATDT=$O(^PS(58.42,"AD",BATDT)) Q:'BATDT!(BATDT>PSOTO)  D
"RTN","PSOSPML1",53,0)
 . F  S BATIEN=$O(^PS(58.42,"AD",BATDT,BATIEN)) Q:'BATIEN  D
"RTN","PSOSPML1",54,0)
 . . S NODE0=$G(^PS(58.42,BATIEN,0))
"RTN","PSOSPML1",55,0)
 . . I $P(NODE0,"^",2)'=STATEIEN Q
"RTN","PSOSPML1",56,0)
 . . S COUNT=COUNT+1,RXCNT=$O(^PS(58.42,BATIEN,"RX",999999),-1)
"RTN","PSOSPML1",57,0)
 . . S DSPLINE=$J(COUNT,4)_" "_$J(BATIEN,7),$E(DSPLINE,15)=$$FMTE^XLFDT(BATDT,"2Z")
"RTN","PSOSPML1",58,0)
 . . S $E(DSPLINE,34)=$$FMTE^XLFDT($P(NODE0,"^",5)\1,"2Z")_"-"_$$FMTE^XLFDT($P(NODE0,"^",6)\1,"2Z")
"RTN","PSOSPML1",59,0)
 . . I $P(NODE0,"^",3)="RX" S $E(DSPLINE,34,51)="SINGLE RX         "
"RTN","PSOSPML1",60,0)
 . . I $P(NODE0,"^",3)="VD",'$P(NODE0,"^",5) S $E(DSPLINE,34,51)="SINGLE RX         "
"RTN","PSOSPML1",61,0)
 . . S $E(DSPLINE,54)=$$GET1^DIQ(58.42,BATIEN,2)
"RTN","PSOSPML1",62,0)
 . . S $E(DSPLINE,66)=$J(RXCNT,4),$E(DSPLINE,72)=$S($$GET1^DIQ(58.42,BATIEN,9,"I"):"YES",1:"NO")
"RTN","PSOSPML1",63,0)
 . . D SETLN^PSOSPMU1("PSOSPML1",DSPLINE,0,0,0)
"RTN","PSOSPML1",64,0)
 . . S ^TMP("PSOSPML1",$J,LINE,"BAT")=BATIEN
"RTN","PSOSPML1",65,0)
 I '$D(^TMP("PSOSPML1",$J)) D
"RTN","PSOSPML1",66,0)
 . D SETLN^PSOSPMU1("PSOSPML1","There are no export batches created within the date range selected.",0,0,0)
"RTN","PSOSPML1",67,0)
 S VALMCNT=LINE
"RTN","PSOSPML1",68,0)
 Q
"RTN","PSOSPML1",69,0)
 ;
"RTN","PSOSPML1",70,0)
SEL ;Process selection of one entry
"RTN","PSOSPML1",71,0)
 N PSOSEL,XQORM,ORD,PSOTITLE,PSOLIS,XX,BAT
"RTN","PSOSPML1",72,0)
 S PSOSEL=+$P(XQORNOD(0),"=",2) I 'PSOSEL S VALMSG="Invalid selection!",VALMBCK="R" Q
"RTN","PSOSPML1",73,0)
 S BAT=+$G(^TMP("PSOSPML1",$J,PSOSEL,"BAT"))
"RTN","PSOSPML1",74,0)
 I 'BAT S VALMSG="Invalid selection!",VALMBCK="R" Q
"RTN","PSOSPML1",75,0)
 S PSOTITLE=VALM("TITLE")
"RTN","PSOSPML1",76,0)
 W ?50,"Please wait..."
"RTN","PSOSPML1",77,0)
 D  ; Do used to preserve a few variables that could get overwritten
"RTN","PSOSPML1",78,0)
 . N LINE,PSOTITLE,PSOFROM,PSOTO D EN^PSOSPML2(BAT)
"RTN","PSOSPML1",79,0)
 S VALMBCK="R",VALM("TITLE")=$G(PSOTITLE)
"RTN","PSOSPML1",80,0)
 D INIT
"RTN","PSOSPML1",81,0)
 Q
"RTN","PSOSPML1",82,0)
 ;
"RTN","PSOSPML1",83,0)
MAN ; Manual Batch Export
"RTN","PSOSPML1",84,0)
 D FULL^VALM1 S VALMBCK="R"
"RTN","PSOSPML1",85,0)
 N %DT,DIR,DIRUT,X,DIC,DTOUT,DUOUT,BEGINDT,PSOBGDT,ENDDT,PSOENDDT,PSOERROR,SPOK
"RTN","PSOSPML1",86,0)
 N RECTYPE,STATE,PSOQUIT,FILLTYPE
"RTN","PSOSPML1",87,0)
 ;
"RTN","PSOSPML1",88,0)
 K DIC W ! S DIC("A")="STATE: ",DIC("S")="I $D(^PS(58.41,+Y,0))",DIC="^DIC(5,"
"RTN","PSOSPML1",89,0)
 S:$G(STATEIEN) DIC("B")=STATEIEN
"RTN","PSOSPML1",90,0)
 S DIC(0)="AEQMZ" D ^DIC I X="^"!(Y<0) G EXIT
"RTN","PSOSPML1",91,0)
 S STATE=+Y
"RTN","PSOSPML1",92,0)
 ;
"RTN","PSOSPML1",93,0)
 ; - Ask for FROM DATE
"RTN","PSOSPML1",94,0)
 ;   Note: The legislation allowing VA to report was published on 02/11/2013
"RTN","PSOSPML1",95,0)
 S %DT(0)=3130211,%DT="AEP",%DT("A")="EXPORT BEGIN DATE: "
"RTN","PSOSPML1",96,0)
 W ! D ^%DT I Y<0!($D(DTOUT)) Q
"RTN","PSOSPML1",97,0)
 S BEGINDT=Y
"RTN","PSOSPML1",98,0)
 ;
"RTN","PSOSPML1",99,0)
 ; - Ask for TO DATE
"RTN","PSOSPML1",100,0)
 K %DT S %DT(0)=BEGINDT\1,%DT="AEP",%DT("B")="TODAY",%DT("A")="EXPORT END DATE: "
"RTN","PSOSPML1",101,0)
 W ! D ^%DT I Y<0!($D(DTOUT)) Q
"RTN","PSOSPML1",102,0)
 S ENDDT=Y
"RTN","PSOSPML1",103,0)
 ;
"RTN","PSOSPML1",104,0)
 S PSOQUIT=0,FILLTYPE=""
"RTN","PSOSPML1",105,0)
 I $$GET1^DIQ(58.41,STATE,1,"I")="1995" D  I PSOQUIT Q
"RTN","PSOSPML1",106,0)
 . K DIR S DIR("A")="Rx Fill Type"
"RTN","PSOSPML1",107,0)
 . S DIR("L",1)="Enter the Prescription Fill Type:"
"RTN","PSOSPML1",108,0)
 . S DIR("L",2)=" "
"RTN","PSOSPML1",109,0)
 . S DIR(0)="S^RL:RELEASED;RS:RETURNED TO STOCK"
"RTN","PSOSPML1",110,0)
 . S DIR("L",3)="  RL     RELEASED"
"RTN","PSOSPML1",111,0)
 . S DIR("L")="  RS     RETURNED TO STOCK"
"RTN","PSOSPML1",112,0)
 . S DIR("B")="RL" D ^DIR I $D(DUOUT)!($D(DIRUT)) K DIRUT,DUOUT,DIR S PSOQUIT=1 Q
"RTN","PSOSPML1",113,0)
 . S FILLTYPE=Y
"RTN","PSOSPML1",114,0)
 ; 
"RTN","PSOSPML1",115,0)
 S PSOQUIT=0,RECTYPE="N"
"RTN","PSOSPML1",116,0)
 I FILLTYPE'="RS" D  I PSOQUIT Q
"RTN","PSOSPML1",117,0)
 . K DIR S DIR("A")="Record Type"
"RTN","PSOSPML1",118,0)
 . S DIR("L",1)="Enter the type of record to be sent for released prescription fills:"
"RTN","PSOSPML1",119,0)
 . S DIR("L",2)=" "
"RTN","PSOSPML1",120,0)
 . S DIR(0)="S^N:NEW;R:REVISE"
"RTN","PSOSPML1",121,0)
 . S DIR("L",3)="  N     NEW"
"RTN","PSOSPML1",122,0)
 . S DIR("L")="  R     REVISE"
"RTN","PSOSPML1",123,0)
 . S DIR("B")="NEW" D ^DIR I $D(DUOUT)!($D(DIRUT)) K DIRUT,DUOUT,DIR S PSOQUIT=1 Q
"RTN","PSOSPML1",124,0)
 . S RECTYPE=Y
"RTN","PSOSPML1",125,0)
 ;
"RTN","PSOSPML1",126,0)
 D EXPORT(STATE,BEGINDT,ENDDT,FILLTYPE,RECTYPE)
"RTN","PSOSPML1",127,0)
 Q
"RTN","PSOSPML1",128,0)
 ;
"RTN","PSOSPML1",129,0)
EXPORT(STATE,FROMDATE,TODATE,FILLTYPE,RECTYPE) ; Export Release CS Rx's to the sate for date range
"RTN","PSOSPML1",130,0)
 ;Input: STATE - Pointer to the STATE file (#5)
"RTN","PSOSPML1",131,0)
 ;       FROMDATE - Being Rx Release for Date Range
"RTN","PSOSPML1",132,0)
 ;       TODATE - End Rx Release for Date Range
"RTN","PSOSPML1",133,0)
 ;       FILLTYPE - Rx Fill Type (RL - Released / RS - Returned to Stock) - ASAP 1995 only 
"RTN","PSOSPML1",134,0)
 ;       RECTYPE - Record Type (N - New / R - Revise)
"RTN","PSOSPML1",135,0)
 N RXRLDT,ENDRLDT,XREF,RXCNT,RXIEN,RXFILL,FILL,SPOK,DIR,Y,X,DTOUT,DUOUT,BATCHIEN
"RTN","PSOSPML1",136,0)
 N RTSDT,ENDRTSDT,RTSONLY,PSOMODE
"RTN","PSOSPML1",137,0)
 ;
"RTN","PSOSPML1",138,0)
 S SPOK=$$SPOK^PSOSPMUT(STATE)
"RTN","PSOSPML1",139,0)
 I $P(SPOK,"^")=-1 D  Q
"RTN","PSOSPML1",140,0)
 . W !!,$P(SPOK,"^",2),$C(7) D PAUSE^PSOSPMU1 Q
"RTN","PSOSPML1",141,0)
 ;
"RTN","PSOSPML1",142,0)
 ; The legislation allowing VA to report was published on 02/11/2013
"RTN","PSOSPML1",143,0)
 I FROMDATE<3130211 S FROMDATE=3130211
"RTN","PSOSPML1",144,0)
 ;
"RTN","PSOSPML1",145,0)
 ; ASAP 1995 ONLY 
"RTN","PSOSPML1",146,0)
 S RTSONLY=0 I $$GET1^DIQ(58.41,STATE,1,"I")="1995",FILLTYPE="RS" S RTSONLY=1
"RTN","PSOSPML1",147,0)
 ; 
"RTN","PSOSPML1",148,0)
 ; Gathering the prescriptions to be transmitted in the ^TMP("PSOSPMRX",$J) global
"RTN","PSOSPML1",149,0)
 W !!,"Gathering CS prescription fills...(this may take a few minutes)"
"RTN","PSOSPML1",150,0)
 K ^TMP("PSOSPMRX",$J) S RXCNT=$$GATHER^PSOSPMU1(STATE,FROMDATE-.1,TODATE+.24,RECTYPE,RTSONLY)
"RTN","PSOSPML1",151,0)
 ;
"RTN","PSOSPML1",152,0)
 I RXCNT'>0 D  Q
"RTN","PSOSPML1",153,0)
 . W !!,"There are no eligible prescriptions for the date range.",$C(7)
"RTN","PSOSPML1",154,0)
 . D PAUSE^PSOSPMU1
"RTN","PSOSPML1",155,0)
 E  W !!,RXCNT," prescription fill(s) found for the date range."
"RTN","PSOSPML1",156,0)
 I '$D(^TMP("PSOSPMRX",$J)) Q
"RTN","PSOSPML1",157,0)
 ; 
"RTN","PSOSPML1",158,0)
 S PSOQUIT=0
"RTN","PSOSPML1",159,0)
 I 'RTSONLY!$$GET1^DIQ(58.41,STATE,12,"I") D  I PSOQUIT Q
"RTN","PSOSPML1",160,0)
 . K DIR W ! S DIR("A",1)="These prescription fills will be transmitted to the state of "_$$GET1^DIQ(5,STATE,.01)_"."
"RTN","PSOSPML1",161,0)
 . S DIR("A",2)="",DIR("A")="Confirm",DIR(0)="Y",DIR("B")="N"
"RTN","PSOSPML1",162,0)
 . D ^DIR I $G(DIRUT)!$G(DUOUT)!'Y S PSOQUIT=1 Q
"RTN","PSOSPML1",163,0)
 . W ?40,"Please wait..."
"RTN","PSOSPML1",164,0)
 ;
"RTN","PSOSPML1",165,0)
 ; Return To Stock fills only
"RTN","PSOSPML1",166,0)
 I RTSONLY,'$$GET1^DIQ(58.41,STATE,12,"I") D  D ^%ZIS K %ZIS Q:POP  U IO
"RTN","PSOSPML1",167,0)
 . D EXMSG^PSOSPML2(1) W ! K %ZIS,IOP,POP,ZTSK S %ZIS="QM"
"RTN","PSOSPML1",168,0)
 ;
"RTN","PSOSPML1",169,0)
 ; The ^TMP("PSOSPMRX",$J) returned above will be used to build the batch 
"RTN","PSOSPML1",170,0)
 S BATCHIEN=$$BLDBAT^PSOSPMU1($S('RTSONLY:"MA",1:"VD"),FROMDATE,TODATE)
"RTN","PSOSPML1",171,0)
 I $P(BATCHIEN,"^")=-1 D  Q
"RTN","PSOSPML1",172,0)
 . W !!,$P(BATCHIEN,"^",2),$C(7) D PAUSE^PSOSPMU1
"RTN","PSOSPML1",173,0)
 ;
"RTN","PSOSPML1",174,0)
 S PSOMODE="EXPORT" I RTSONLY,'$$GET1^DIQ(58.41,STATE,12,"I") S PSOMODE="VIEW"
"RTN","PSOSPML1",175,0)
 D EXPORT^PSOSPMUT(BATCHIEN,PSOMODE)
"RTN","PSOSPML1",176,0)
 ;
"RTN","PSOSPML1",177,0)
 I RTSONLY,'$$GET1^DIQ(58.41,STATE,12,"I") D
"RTN","PSOSPML1",178,0)
 . D ^%ZISC N DIE,DA,DR S DIE="^PS(58.42,",DA=BATCHIEN
"RTN","PSOSPML1",179,0)
 . S DR="6///<Manual Web Upload>;7////"_DUZ_";9///"_$$NOW^XLFDT()
"RTN","PSOSPML1",180,0)
 . D ^DIE
"RTN","PSOSPML1",181,0)
 ;
"RTN","PSOSPML1",182,0)
 D PAUSE^PSOSPMU1
"RTN","PSOSPML1",183,0)
 D INIT,HDR
"RTN","PSOSPML1",184,0)
 Q
"RTN","PSOSPML1",185,0)
 ;
"RTN","PSOSPML1",186,0)
EXIT ;
"RTN","PSOSPML1",187,0)
 K ^TMP("PSOSPML1",$J)
"RTN","PSOSPML1",188,0)
 Q
"RTN","PSOSPML1",189,0)
 ;
"RTN","PSOSPML1",190,0)
HELP ; Listman HELP entry-point
"RTN","PSOSPML1",191,0)
 Q
"RTN","PSOSPML2")
0^11^B55672544^B29821538
"RTN","PSOSPML2",1,0)
PSOSPML2 ;BIRM/MFR - View/Process Export Batch Listman Driver ;09/10/12
"RTN","PSOSPML2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408,451**;DEC 1997;Build 114
"RTN","PSOSPML2",3,0)
 ;
"RTN","PSOSPML2",4,0)
 N BATCHIEN,DIR,DIRUT,DTOUT,DUOUT,X,DIC,VALM,VALMCNT,VALMHDR,VALMBCK,VALMSG,PSOLSTLN
"RTN","PSOSPML2",5,0)
 ;
"RTN","PSOSPML2",6,0)
BAT ; Single Batch Selection
"RTN","PSOSPML2",7,0)
 W ! K DIC S DIC("A")="Export Batch #: ",DIC="^PS(58.42,",DIC(0)="QEAM"
"RTN","PSOSPML2",8,0)
 K BATCHIEN D ^DIC I X="^"!$D(DUOUT)!$D(DTOUT)!(Y<0) G EXIT
"RTN","PSOSPML2",9,0)
 S BATCHIEN=+Y
"RTN","PSOSPML2",10,0)
 ;
"RTN","PSOSPML2",11,0)
 D EN(BATCHIEN)
"RTN","PSOSPML2",12,0)
 ;
"RTN","PSOSPML2",13,0)
 G BAT
"RTN","PSOSPML2",14,0)
 ;
"RTN","PSOSPML2",15,0)
EN(BATCHIEN) ; Entry point
"RTN","PSOSPML2",16,0)
 D EN^VALM("PSO SPMP VIEW/EXPORT BATCH")
"RTN","PSOSPML2",17,0)
 D FULL^VALM1
"RTN","PSOSPML2",18,0)
 Q
"RTN","PSOSPML2",19,0)
 ;
"RTN","PSOSPML2",20,0)
HDR ; - Builds the Header section
"RTN","PSOSPML2",21,0)
 K VALMHDR
"RTN","PSOSPML2",22,0)
 S VALMHDR(1)="Batch #: "_$$GET1^DIQ(58.42,BATCHIEN,.01),$E(VALMHDR(1),17)="State: "_$$GET1^DIQ(58.42,BATCHIEN,1)
"RTN","PSOSPML2",23,0)
 S $E(VALMHDR(1),47)="Type: "_$$GET1^DIQ(58.42,BATCHIEN,2)
"RTN","PSOSPML2",24,0)
 S $E(VALMHDR(1),68)="Exported? "_$S($$GET1^DIQ(58.42,BATCHIEN,9,"I"):"YES",1:"NO")
"RTN","PSOSPML2",25,0)
 S VALMHDR(2)="Created on: "_$$GET1^DIQ(58.42,BATCHIEN,8)
"RTN","PSOSPML2",26,0)
 S $E(VALMHDR(2),47)="Exported on: "_$$GET1^DIQ(58.42,BATCHIEN,9)
"RTN","PSOSPML2",27,0)
 S VALMHDR(3)="File: "_$$GET1^DIQ(58.42,BATCHIEN,6)
"RTN","PSOSPML2",28,0)
 D SETHDR()
"RTN","PSOSPML2",29,0)
 Q
"RTN","PSOSPML2",30,0)
 ;
"RTN","PSOSPML2",31,0)
SETHDR() ; - Displays the Header Line
"RTN","PSOSPML2",32,0)
 N HDR,ORD,POS
"RTN","PSOSPML2",33,0)
 ;
"RTN","PSOSPML2",34,0)
 S HDR="   #",$E(HDR,6)="Rx#",$E(HDR,21)="FILL",$E(HDR,27)="DRUG",$E(HDR,70)="SCH",$E(HDR,74)="TYPE"
"RTN","PSOSPML2",35,0)
 S $E(HDR,81)="" D INSTR^VALM1(IORVON_HDR_IOINORM,1,5)
"RTN","PSOSPML2",36,0)
 Q
"RTN","PSOSPML2",37,0)
 ;
"RTN","PSOSPML2",38,0)
INIT ; Builds the Body section
"RTN","PSOSPML2",39,0)
 N RXIEN,RXNUM,I,LINE,TYPE,NODE0,RX,COUNT,DRUGIEN,DRUGNAM,DRUGDEA,DSPLINE,FILL,RXNFLL,BATRXIEN
"RTN","PSOSPML2",40,0)
 ;
"RTN","PSOSPML2",41,0)
 K ^TMP("PSOSPSRT",$J)
"RTN","PSOSPML2",42,0)
 S BATRXIEN=0
"RTN","PSOSPML2",43,0)
 F  S BATRXIEN=$O(^PS(58.42,BATCHIEN,"RX",BATRXIEN)) Q:'BATRXIEN  D
"RTN","PSOSPML2",44,0)
 . S NODE0=$G(^PS(58.42,BATCHIEN,"RX",BATRXIEN,0))
"RTN","PSOSPML2",45,0)
 . S RXIEN=+NODE0,FILL=$P(NODE0,"^",2)
"RTN","PSOSPML2",46,0)
 . S ^TMP("PSOSPSRT",$J,$$GET1^DIQ(52,RXIEN,.01)_"^"_FILL)=BATRXIEN
"RTN","PSOSPML2",47,0)
 ;
"RTN","PSOSPML2",48,0)
 K ^TMP("PSOSPML2",$J) S VALMCNT=0,LINE=0
"RTN","PSOSPML2",49,0)
 S RXNFLL="",COUNT=0
"RTN","PSOSPML2",50,0)
 F  S RXNFLL=$O(^TMP("PSOSPSRT",$J,RXNFLL)) Q:RXNFLL=""  D
"RTN","PSOSPML2",51,0)
 . S BATRXIEN=+$G(^TMP("PSOSPSRT",$J,RXNFLL))
"RTN","PSOSPML2",52,0)
 . S NODE0=$G(^PS(58.42,BATCHIEN,"RX",BATRXIEN,0))
"RTN","PSOSPML2",53,0)
 . S RXIEN=+NODE0,FILL=$P(NODE0,"^",2),TYPE=$P(NODE0,"^",3)
"RTN","PSOSPML2",54,0)
 . S RXNUM=$$GET1^DIQ(52,RXIEN,.01)
"RTN","PSOSPML2",55,0)
 . S DRUGIEN=$$GET1^DIQ(52,RXIEN,6,"I")
"RTN","PSOSPML2",56,0)
 . S DRUGNAM=$E($$GET1^DIQ(50,DRUGIEN,.01),1,45)
"RTN","PSOSPML2",57,0)
 . S DRUGDEA=+$$GET1^DIQ(50,DRUGIEN,3)
"RTN","PSOSPML2",58,0)
 . S COUNT=COUNT+1
"RTN","PSOSPML2",59,0)
 . S DSPLINE=$J(COUNT,4)_" "_RXNUM,$E(DSPLINE,22)=$J(FILL,3)_"  "_DRUGNAM
"RTN","PSOSPML2",60,0)
 . S $E(DSPLINE,70)=$J(DRUGDEA,3)
"RTN","PSOSPML2",61,0)
 . S $E(DSPLINE,74)=$S(TYPE="N":"NEW",TYPE="R":"REVISE",TYPE="V":"VOID",1:"")
"RTN","PSOSPML2",62,0)
 . D SETLN^PSOSPMU1("PSOSPML2",DSPLINE,0,0,0)
"RTN","PSOSPML2",63,0)
 . S ^TMP("PSOSPML2",$J,LINE,"RX")=RXIEN_"^"_FILL_"^"_TYPE
"RTN","PSOSPML2",64,0)
 S VALMCNT=LINE
"RTN","PSOSPML2",65,0)
 Q
"RTN","PSOSPML2",66,0)
 ;
"RTN","PSOSPML2",67,0)
SEL ;Process selection of one entry
"RTN","PSOSPML2",68,0)
 N PSOSEL,XQORM,ORD,PSOTITLE,RXINFO,LINE
"RTN","PSOSPML2",69,0)
 S PSOSEL=+$P(XQORNOD(0),"=",2) I 'PSOSEL S VALMSG="Invalid selection!",VALMBCK="R" Q
"RTN","PSOSPML2",70,0)
 S RXINFO=$G(^TMP("PSOSPML2",$J,PSOSEL,"RX"))
"RTN","PSOSPML2",71,0)
 I 'RXINFO S VALMSG="Invalid selection!",VALMBCK="R" Q
"RTN","PSOSPML2",72,0)
 S PSOTITLE=VALM("TITLE")
"RTN","PSOSPML2",73,0)
 D  ; DO command used to preserve variables PSOTITLE and LINE
"RTN","PSOSPML2",74,0)
 . N PSOTITLE,LINE D EN^PSOSPML4(+RXINFO,$P(RXINFO,"^",2),$P(RXINFO,"^",3))
"RTN","PSOSPML2",75,0)
 S VALMBCK="R",VALM("TITLE")=$G(PSOTITLE)
"RTN","PSOSPML2",76,0)
 D INIT,HDR
"RTN","PSOSPML2",77,0)
 Q
"RTN","PSOSPML2",78,0)
 ;
"RTN","PSOSPML2",79,0)
EXP(MODE) ; Export Batch
"RTN","PSOSPML2",80,0)
 N DIR,Y,DUOUT,DIRUT,STATEIEN,PSOASVER,PSOTXRTS,QUIT,RUNMODE
"RTN","PSOSPML2",81,0)
 D FULL^VALM1 S VALMBCK="R"
"RTN","PSOSPML2",82,0)
 ;
"RTN","PSOSPML2",83,0)
 S STATEIEN=$$GET1^DIQ(58.42,BATCHIEN,1,"I")
"RTN","PSOSPML2",84,0)
 S PSOASVER=$$GET1^DIQ(58.41,STATEIEN,1,"I")
"RTN","PSOSPML2",85,0)
 S PSOTXRTS=+$$GET1^DIQ(58.41,STATEIEN,12,"I")
"RTN","PSOSPML2",86,0)
 ;
"RTN","PSOSPML2",87,0)
 S QUIT=0,RUNMODE="F"
"RTN","PSOSPML2",88,0)
 I MODE="EXPORT",($$GET1^DIQ(58.42,BATCHIEN,2,"I")'="VD"!PSOTXRTS) D  I QUIT Q
"RTN","PSOSPML2",89,0)
 . W ! K DIRUT,DUOUT,DIR
"RTN","PSOSPML2",90,0)
 . S DIR(0)="SA^B:Background;F:Foreground;D:Debug Mode (Foreground)"
"RTN","PSOSPML2",91,0)
 . S DIR("A",1)="Indicate whether the transmission should be queued to run on the Background"
"RTN","PSOSPML2",92,0)
 . S DIR("A",2)="via TaskMan, on the Foreground (Terminal Screen) or in Debug Mode (Foreground)"
"RTN","PSOSPML2",93,0)
 . S DIR("A",3)="which shows the sFTP (secure File Transfer) connection steps."
"RTN","PSOSPML2",94,0)
 . S DIR("A",3)=""
"RTN","PSOSPML2",95,0)
 . S DIR("A",4)="      Select one of the following:"
"RTN","PSOSPML2",96,0)
 . S DIR("A",5)=""
"RTN","PSOSPML2",97,0)
 . S DIR("A",6)="          B         Background"
"RTN","PSOSPML2",98,0)
 . S DIR("A",7)="          F         Foreground"
"RTN","PSOSPML2",99,0)
 . S DIR("A",8)="          D         Debug Mode (Foreground)"
"RTN","PSOSPML2",100,0)
 . S DIR("A",9)=""
"RTN","PSOSPML2",101,0)
 . S DIR("A")="Running Mode: ",DIR("B")="F",DIR("??")="^D RMHELP^PSOSPML2"
"RTN","PSOSPML2",102,0)
 . D ^DIR I $D(DTOUT)!$D(DIRUT) S QUIT=1 Q
"RTN","PSOSPML2",103,0)
 . S RUNMODE=Y
"RTN","PSOSPML2",104,0)
 . W ! K DIRUT,DUOUT,DIR
"RTN","PSOSPML2",105,0)
 . S DIR("A",1)="The Batch will be transmitted to the state of "_$$GET1^DIQ(58.42,BATCHIEN,1)_"."
"RTN","PSOSPML2",106,0)
 . S DIR("A",2)="",DIR("A")="Confirm",DIR(0)="Y",DIR("B")="N"
"RTN","PSOSPML2",107,0)
 . D ^DIR I $G(DTOUT)!$G(DUOUT)!'Y S QUIT=1
"RTN","PSOSPML2",108,0)
 . I RUNMODE'="B" W ?40,"Please wait..."
"RTN","PSOSPML2",109,0)
 ;
"RTN","PSOSPML2",110,0)
 I (MODE="VIEW")!(($$GET1^DIQ(58.42,BATCHIEN,2,"I")="VD")&'PSOTXRTS) D  D ^%ZIS K %ZIS Q:POP  U IO
"RTN","PSOSPML2",111,0)
 . D EXMSG($S(MODE="VIEW":0,1:1)) W ! K %ZIS,IOP,POP,ZTSK S %ZIS="QM"
"RTN","PSOSPML2",112,0)
 ;
"RTN","PSOSPML2",113,0)
 ; If export batch type is VOID ONLY, and TRANSMIT RTS is OFF, just display for capture
"RTN","PSOSPML2",114,0)
 I (MODE="VIEW")!(($$GET1^DIQ(58.42,BATCHIEN,2,"I")="VD")&'PSOTXRTS) D
"RTN","PSOSPML2",115,0)
 . W ! D EXPORT^PSOSPMUT(BATCHIEN,"VIEW")
"RTN","PSOSPML2",116,0)
 . D ^%ZISC
"RTN","PSOSPML2",117,0)
 E  D
"RTN","PSOSPML2",118,0)
 . I RUNMODE="B" D  Q
"RTN","PSOSPML2",119,0)
 . . N ZTRTN,ZTIO,ZTDESC,ZTDTH,ZTSK
"RTN","PSOSPML2",120,0)
 . . S ZTRTN="EXPORT^PSOSPMUT("_BATCHIEN_",""EXPORT"",1,1)",ZTIO=""
"RTN","PSOSPML2",121,0)
 . . S ZTDESC="State Prescription Monitoring Program (SPMP) Transmission"
"RTN","PSOSPML2",122,0)
 . . S ZTDTH=$$NOW^XLFDT()
"RTN","PSOSPML2",123,0)
 . . D ^%ZTLOAD W:$D(ZTSK) !!,"Export Background Job Queued to Run.",$C(7),! K ZTSK
"RTN","PSOSPML2",124,0)
 . D EXPORT^PSOSPMUT(BATCHIEN,"EXPORT",0,$S(RUNMODE="D":1,1:0))
"RTN","PSOSPML2",125,0)
 ;
"RTN","PSOSPML2",126,0)
 ; If exporting manually (web upload), update export fields (assumes user will upload file)
"RTN","PSOSPML2",127,0)
 I MODE="EXPORT",$$GET1^DIQ(58.42,BATCHIEN,2,"I")="VD",'PSOTXRTS D
"RTN","PSOSPML2",128,0)
 . D ^%ZISC N DIE,DA,DR S DIE="^PS(58.42,",DA=BATCHIEN
"RTN","PSOSPML2",129,0)
 . S DR="6///<Manual Web Upload>;7////"_DUZ_";9///"_$$NOW^XLFDT()
"RTN","PSOSPML2",130,0)
 . D ^DIE
"RTN","PSOSPML2",131,0)
 ;
"RTN","PSOSPML2",132,0)
 K DIR S DIR("A")="Press Return to continue",DIR(0)="E" D ^DIR
"RTN","PSOSPML2",133,0)
 D HDR
"RTN","PSOSPML2",134,0)
 Q
"RTN","PSOSPML2",135,0)
 ;
"RTN","PSOSPML2",136,0)
EXIT ;
"RTN","PSOSPML2",137,0)
 K ^TMP("PSOSPML2",$J)
"RTN","PSOSPML2",138,0)
 Q
"RTN","PSOSPML2",139,0)
 ;
"RTN","PSOSPML2",140,0)
HELP ; Listman HELP entry-point
"RTN","PSOSPML2",141,0)
 Q
"RTN","PSOSPML2",142,0)
 ;
"RTN","PSOSPML2",143,0)
EXMSG(RTSONLY) ;
"RTN","PSOSPML2",144,0)
 W !!?5,"Before continuing, set up your terminal to capture the ASAP"
"RTN","PSOSPML2",145,0)
 W !?5,"formatted data. On some terminals, this can be done by clicking"
"RTN","PSOSPML2",146,0)
 W !?5,"on the 'File' menu above, then click on 'Logging...' and check"
"RTN","PSOSPML2",147,0)
 W !?5,"'Logging on' and 'Disk'."
"RTN","PSOSPML2",148,0)
 W !!?5,"Note: To avoid undesired wrapping of the data saved to the"
"RTN","PSOSPML2",149,0)
 W !?5,"      file, please enter '0;256;9999' at the 'DEVICE:' prompt."
"RTN","PSOSPML2",150,0)
 I '$G(RTSONLY) Q
"RTN","PSOSPML2",151,0)
 W !!?5,"*********************** IMPORTANT ******************************"
"RTN","PSOSPML2",152,0)
 W !?5,"When you upload this file to the state website, make sure to"
"RTN","PSOSPML2",153,0)
 W !?5,"select the correct import option, usually called ""Back Records"
"RTN","PSOSPML2",154,0)
 W !?5,"Out of the System"", to avoid reporting duplicate records for the"
"RTN","PSOSPML2",155,0)
 W !?5,"patients."
"RTN","PSOSPML2",156,0)
 W !?5,"*****************************************************************"
"RTN","PSOSPML2",157,0)
 Q
"RTN","PSOSPML2",158,0)
 ;
"RTN","PSOSPML2",159,0)
RMHELP ; Running Mode Help Text
"RTN","PSOSPML2",160,0)
 W !!?5,"Choose one of the following transmission modes:"
"RTN","PSOSPML2",161,0)
 W !!?5,"Background: Transmission runs in the background via Taskman. This option"
"RTN","PSOSPML2",162,0)
 W !?5,"            will help you simulate the same transmission mode used by the"
"RTN","PSOSPML2",163,0)
 W !?5,"            Scheduled Nightly Transmissions."
"RTN","PSOSPML2",164,0)
 W !!?5,"Foreground: Transmission runs and displays the steps to your terminal"
"RTN","PSOSPML2",165,0)
 W !?5,"            screen."
"RTN","PSOSPML2",166,0)
 W !!?5,"Debug Mode: This is similar to the Foreground mode. The difference is"
"RTN","PSOSPML2",167,0)
 W !?5,"            that the sFTP command used to transfer the file will be run"
"RTN","PSOSPML2",168,0)
 W !?5,"            in 'debug mode'. This option is useful when troubleshooting"
"RTN","PSOSPML2",169,0)
 W !?5,"            transmission problems."
"RTN","PSOSPML2",170,0)
 Q
"RTN","PSOSPML3")
0^6^B57979959^B10148038
"RTN","PSOSPML3",1,0)
PSOSPML3 ;BIRM/MFR - ASAP Definitions Listman Driver ;09/01/12
"RTN","PSOSPML3",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408,451**;DEC 1997;Build 114
"RTN","PSOSPML3",3,0)
 ;
"RTN","PSOSPML3",4,0)
 N ASAPVER,VERLST,DIR,DIRUT,DTOUT,X,Y,DIC,VALM,VALMBG,VALMCNT,VALMHDR,VALMBCK,VALMSG,PSOLSTLN
"RTN","PSOSPML3",5,0)
 ;
"RTN","PSOSPML3",6,0)
VER ; ASAP Version Prompt
"RTN","PSOSPML3",7,0)
 W ! S ASAPVER=$$ASAPVER^PSOSPMU2("A",1) I ASAPVER["^"!(ASAPVER="") G EXIT
"RTN","PSOSPML3",8,0)
 ;
"RTN","PSOSPML3",9,0)
 D EN(ASAPVER,0)
"RTN","PSOSPML3",10,0)
 ;
"RTN","PSOSPML3",11,0)
 G VER
"RTN","PSOSPML3",12,0)
 ;
"RTN","PSOSPML3",13,0)
EN(PSOASVER,PSOSHOW) ; Entry point
"RTN","PSOSPML3",14,0)
 ;Input: (r) PSOASVER - ASAP Version ("3.0", "4.0", etc.)
"RTN","PSOSPML3",15,0)
 ;       (o) PSOSHOW  - 0: Segments Only
"RTN","PSOSPML3",16,0)
 ;                      1: Segments & Data Elements (ID and Name Only)
"RTN","PSOSPML3",17,0)
 ;                      2: Segments & Data Elements (All Details)
"RTN","PSOSPML3",18,0)
 N ASAP
"RTN","PSOSPML3",19,0)
 S PSOSHOW=+$G(PSOSHOW)
"RTN","PSOSPML3",20,0)
 D EN^VALM("PSO SPMP VIEW ASAP DEFINITION")
"RTN","PSOSPML3",21,0)
 D FULL^VALM1
"RTN","PSOSPML3",22,0)
 Q
"RTN","PSOSPML3",23,0)
 ;
"RTN","PSOSPML3",24,0)
HDR ; - Builds the Header section
"RTN","PSOSPML3",25,0)
 N STDIEN,VERIEN,HDR,ELMDELIM,SEGTERM,EOSCHR,STDVDLMS,ALLVDLMS
"RTN","PSOSPML3",26,0)
 S STDVDLMS=$$VERDATA^PSOSPMU0(PSOASVER,"S")
"RTN","PSOSPML3",27,0)
 S ALLVDLMS=$$VERDATA^PSOSPMU0(PSOASVER,"B")
"RTN","PSOSPML3",28,0)
 S STDIEN=$O(^PS(58.4,"B","STANDARD ASAP DEFINITION",0))
"RTN","PSOSPML3",29,0)
 S VERIEN=$O(^PS(58.4,STDIEN,"VER","B",PSOASVER,0))
"RTN","PSOSPML3",30,0)
 S VALM("TITLE")=" ASAP "_$S('VERIEN:"Custom",1:"Standard")_" Version "_PSOASVER_$S('VERIEN:"*",1:"")
"RTN","PSOSPML3",31,0)
 S ELMDELIM=$S(PSOASVER="1995":"N/A",1:$P(ALLVDLMS,"^",2))
"RTN","PSOSPML3",32,0)
 S HDR="Element Delimiter"_$S(($P(STDVDLMS,"^",2)'=""&($P(STDVDLMS,"^",2)'=$P(ALLVDLMS,"^",2))):"*",1:"")_":"_IOINHI_$S(ELMDELIM="":"<NULL>",1:" "_ELMDELIM)_IOINORM
"RTN","PSOSPML3",33,0)
 S SEGTERM=$S(PSOASVER="1995":"N/A",1:$P(ALLVDLMS,"^",3))
"RTN","PSOSPML3",34,0)
 S HDR=HDR_"  Segment Terminator"_$S(($P(STDVDLMS,"^",3)'=""&($P(STDVDLMS,"^",3)'=$P(ALLVDLMS,"^",3))):"*",1:"")_":"_IOINHI_$S(SEGTERM="":"<NULL>",1:" "_SEGTERM)_IOINORM
"RTN","PSOSPML3",35,0)
 S EOSCHR=$S(PSOASVER="1995":"$C(10,13)",1:$P(ALLVDLMS,"^",4))
"RTN","PSOSPML3",36,0)
 S HDR=HDR_"  End Of Line ESC"_$S(($P(STDVDLMS,"^",4)'=""&($P(STDVDLMS,"^",4)'=$P(ALLVDLMS,"^",4))):"*",1:"")_":"_IOINHI_$S(EOSCHR="":"<NULL>",1:" "_EOSCHR)_IOINORM
"RTN","PSOSPML3",37,0)
 D INSTR^VALM1(HDR,1,2)
"RTN","PSOSPML3",38,0)
 Q
"RTN","PSOSPML3",39,0)
 ;
"RTN","PSOSPML3",40,0)
INIT ; Builds the Body section
"RTN","PSOSPML3",41,0)
 N ASAP,LINE,I
"RTN","PSOSPML3",42,0)
 ;
"RTN","PSOSPML3",43,0)
 K ^TMP("PSOSPML3",$J) S VALMCNT=0,LINE=0
"RTN","PSOSPML3",44,0)
 F I=1:1:1000 D RESTORE^VALM10(I)
"RTN","PSOSPML3",45,0)
 I PSOASVER="1995" D
"RTN","PSOSPML3",46,0)
 . D SETSEG95^PSOSPML4("PSOSPML3","") S VALMCNT=LINE
"RTN","PSOSPML3",47,0)
 I PSOASVER'="1995" D
"RTN","PSOSPML3",48,0)
 . D LOADASAP^PSOSPMU0(PSOASVER,"B",.ASAP)
"RTN","PSOSPML3",49,0)
 . D SETSEG("ASAP",0) S VALMCNT=LINE
"RTN","PSOSPML3",50,0)
 . S VALMSG="Enter ?? for more actions|* Custom Segment/Element"
"RTN","PSOSPML3",51,0)
 Q
"RTN","PSOSPML3",52,0)
 ;
"RTN","PSOSPML3",53,0)
 ; Note: Recursivity used because of the 'Tree' nature of the ASAP definition
"RTN","PSOSPML3",54,0)
SETSEG(ARRNAM,LEVEL) ; Set list content with the Segment info
"RTN","PSOSPML3",55,0)
 ;Input: ARRNAM - Name of the Array containing the ASAP definition
"RTN","PSOSPML3",56,0)
 ;       LEVEL  - Level of the Segment
"RTN","PSOSPML3",57,0)
 N ARRAY,COLUMN,TYPE,DETLN,SEGID,JUST,I,J,ELMCNT,LSTELM,ELMNAM,MVALUE,SEGLN,LEVNAM,DESCNT,VALIDX
"RTN","PSOSPML3",58,0)
 ;
"RTN","PSOSPML3",59,0)
 S PSOSHOW=+$G(PSOSHOW)
"RTN","PSOSPML3",60,0)
 S ARRAY=$Q(@ARRNAM) I '+$P(ARRAY,"(",2) Q
"RTN","PSOSPML3",61,0)
 S SEGID=$P(@ARRAY,"^"),COLUMN=(($L(ARRAY,",")-1)*4)
"RTN","PSOSPML3",62,0)
 S JUST="" S:PSOSHOW'=2 JUST=$J("",COLUMN)
"RTN","PSOSPML3",63,0)
 I LEVEL'=$P(ASAP(SEGID),"^",6) D
"RTN","PSOSPML3",64,0)
 . S LEVEL=$P(ASAP(SEGID),"^",6)
"RTN","PSOSPML3",65,0)
 . S LEVNAM=$P("MAIN HEADER^PHARMACY HEADER^PATIENT DETAIL^PRESCRIPTION DETAIL^PHARMACY TRAILER^MAIN TRAILER","^",LEVEL)
"RTN","PSOSPML3",66,0)
 . D SETLN^PSOSPMU1("PSOSPML3",JUST_LEVNAM,0,0,0)
"RTN","PSOSPML3",67,0)
 . D CNTRL^VALM10(LINE,$L(JUST)+1,$L(LEVNAM),IORVON,IORVOFF_IOINORM)
"RTN","PSOSPML3",68,0)
 S SEGLN=JUST_$P(ASAP(SEGID),"^")_$S($$CUSSEG^PSOSPMU3(PSOASVER,SEGID):"*",1:"")_" - "_$P(ASAP(SEGID),"^",2)_$S($P(ASAP(SEGID),"^",4)="N":" (Not Used)",1:"")
"RTN","PSOSPML3",69,0)
 D SETLN^PSOSPMU1("PSOSPML3",SEGLN,0,$S(PSOSHOW'=0:1,1:0),$S($P(ASAP(SEGID),"^",4)="N":0,1:1))
"RTN","PSOSPML3",70,0)
 S LSTELM=+$O(ASAP(SEGID,""),-1)
"RTN","PSOSPML3",71,0)
 I PSOSHOW'=0 D
"RTN","PSOSPML3",72,0)
 . F ELMCNT=1:1:LSTELM D
"RTN","PSOSPML3",73,0)
 . . S:PSOSHOW=1 JUST=$J("",COLUMN+$L(SEGID)+1)
"RTN","PSOSPML3",74,0)
 . . S ELMNAM=JUST_$P(ASAP(SEGID,ELMCNT),"^")_$S($G(ASAP(SEGID,ELMCNT,"CUS")):"*",1:"")_" - "_$P(ASAP(SEGID,ELMCNT),"^",2)
"RTN","PSOSPML3",75,0)
 . . S ELMNAM=ELMNAM_$S((PSOSHOW=1)&($P(ASAP(SEGID,ELMCNT),"^",6)="N"):" (Not Used)",1:"")
"RTN","PSOSPML3",76,0)
 . . D SETLN^PSOSPMU1("PSOSPML3",ELMNAM,0,0,$S((PSOSHOW=1)&($P(ASAP(SEGID,ELMCNT),"^",6)="N"):0,1:1))
"RTN","PSOSPML3",77,0)
 . . I PSOSHOW=1 Q
"RTN","PSOSPML3",78,0)
 . . S DETLN=JUST_"Requirement: "_$S($P(ASAP(SEGID,ELMCNT),"^",6)="R":"Required",$P(ASAP(SEGID,ELMCNT),"^",6)="O":"Optional",$P(ASAP(SEGID,ELMCNT),"^",6)="N":"Not Used",1:"")
"RTN","PSOSPML3",79,0)
 . . S TYPE=$P(ASAP(SEGID,ELMCNT),"^",3)
"RTN","PSOSPML3",80,0)
 . . S $E(DETLN,33)="Format: "_$S(TYPE="AN":"Alphanumeric",TYPE="N":"Numeric",TYPE="D":"Decimal",TYPE="DT":"Date (YYYYMMDD)",TYPE="TM":"Time (HHMMSS or HHMM)",1:"")
"RTN","PSOSPML3",81,0)
 . . S $E(DETLN,62)="Maximum Length: "_$P(ASAP(SEGID,ELMCNT),"^",4)
"RTN","PSOSPML3",82,0)
 . . D SETLN^PSOSPMU1("PSOSPML3",DETLN)
"RTN","PSOSPML3",83,0)
 . . ; Highlighting fields Requirement, Format and Length
"RTN","PSOSPML3",84,0)
 . . D CNTRL^VALM10(LINE,13,10,IOINHI,IOINORM)
"RTN","PSOSPML3",85,0)
 . . D CNTRL^VALM10(LINE,41,20,IOINHI,IOINORM)
"RTN","PSOSPML3",86,0)
 . . D CNTRL^VALM10(LINE,77,5,IOINHI,IOINORM)
"RTN","PSOSPML3",87,0)
 . . F DESCNT=1:1 Q:'$D(ASAP(SEGID,ELMCNT,"DES",DESCNT))  D
"RTN","PSOSPML3",88,0)
 . . . D SETLN^PSOSPMU1("PSOSPML3",JUST_ASAP(SEGID,ELMCNT,"DES",DESCNT))
"RTN","PSOSPML3",89,0)
 . . ; Field M Expression Value
"RTN","PSOSPML3",90,0)
 . . S DETLN="Value: ",MVALUE=""
"RTN","PSOSPML3",91,0)
 . . F VALIDX=1:1 Q:'$D(ASAP(SEGID,ELMCNT,"VAL",VALIDX))  D
"RTN","PSOSPML3",92,0)
 . . . S MVALUE=MVALUE_ASAP(SEGID,ELMCNT,"VAL",VALIDX)
"RTN","PSOSPML3",93,0)
 . . F  Q:MVALUE=""  D
"RTN","PSOSPML3",94,0)
 . . . S $E(DETLN,8)=$E(MVALUE,1,72)
"RTN","PSOSPML3",95,0)
 . . . D SETLN^PSOSPMU1("PSOSPML3",DETLN)
"RTN","PSOSPML3",96,0)
 . . . D CNTRL^VALM10(LINE,8,72,IOINHI,IOINORM)
"RTN","PSOSPML3",97,0)
 . . . S DETLN="",MVALUE=$E(MVALUE,73,999)
"RTN","PSOSPML3",98,0)
 . . D SETLN^PSOSPMU1("PSOSPML3"," ")
"RTN","PSOSPML3",99,0)
 D SETSEG(ARRAY,LEVEL)
"RTN","PSOSPML3",100,0)
 Q
"RTN","PSOSPML3",101,0)
 ;
"RTN","PSOSPML3",102,0)
HELP ; Listman Help
"RTN","PSOSPML3",103,0)
 Q
"RTN","PSOSPML3",104,0)
 ;
"RTN","PSOSPML3",105,0)
EXIT ;
"RTN","PSOSPML3",106,0)
 K ^TMP("PSOSPML3",$J)
"RTN","PSOSPML3",107,0)
 Q
"RTN","PSOSPML3",108,0)
 ;
"RTN","PSOSPML3",109,0)
MEXPRHLP(LEVEL,ELMID) ;MUMPS Expression Help Text
"RTN","PSOSPML3",110,0)
 ;Input: (r) LEVEL - Level of the Segment where the Data Element is located
"RTN","PSOSPML3",111,0)
 ;       (r) ELMID  - Data Element ID ("PHA01", "DSP02", etc.)
"RTN","PSOSPML3",112,0)
 N LEVNAM,DIR,X,Y,DIRUT,DTOUT
"RTN","PSOSPML3",113,0)
 W !,"This is the argument of a MUMPS SET command that will be used to retrieve the"
"RTN","PSOSPML3",114,0)
 W !,"value for the Data Element '",ELMID,"'."
"RTN","PSOSPML3",115,0)
 W !,""
"RTN","PSOSPML3",116,0)
 W !,"Below are some examples of valid values for this field:"
"RTN","PSOSPML3",117,0)
 W !,""
"RTN","PSOSPML3",118,0)
 W !,"Null/Blank : Use """" (two quotes) to force a blank value. Another option to"
"RTN","PSOSPML3",119,0)
 W !,"-----------  force a blank value is to set the Data Element REQUIREMENT field"
"RTN","PSOSPML3",120,0)
 W !,"             to 'N' (NOT USED)."
"RTN","PSOSPML3",121,0)
 W !,""
"RTN","PSOSPML3",122,0)
 W !,"Fixed Value: Use quotes to force a fixed value for this Data Element."
"RTN","PSOSPML3",123,0)
 W !,"-----------  Examples: ""AF290303"", ""SMITH"", ""12345"", etc."
"RTN","PSOSPML3",124,0)
 W !,""
"RTN","PSOSPML3",125,0)
 W !,"MUMPS Code : Use a Mumps expression that can be used as the argument of a SET"
"RTN","PSOSPML3",126,0)
 W !,"-----------  command. Examples:  $P($$SITE^VASITE(),""^"",2)"
"RTN","PSOSPML3",127,0)
 W !,"                                 $E($$GET1^DIQ(52,RXIEN,.01),1,30)"
"RTN","PSOSPML3",128,0)
 W !,"                                 $S(FILLIEN>0:""REFILL"",1:""ORIGINAL"")"
"RTN","PSOSPML3",129,0)
 W !,"                                 $$PHA03^PSOASAP()_""B"""
"RTN","PSOSPML3",130,0)
 W !,""
"RTN","PSOSPML3",131,0)
 W !,"NOTE: The value for a Standard Definition Data Element is returned by a"
"RTN","PSOSPML3",132,0)
 W !,"      function in the format $$SEGNN^PSOASAP(), where 'SEG' is the 2 or"
"RTN","PSOSPML3",133,0)
 W !,"      3-character segment identifier and 'NN' is the 2-digit element"
"RTN","PSOSPML3",134,0)
 W !,"      identifier. Examples: $$IS01^PSOASAP(), $$PRE08^PSOASAP(), etc."
"RTN","PSOSPML3",135,0)
 ;
"RTN","PSOSPML3",136,0)
 K DIR S DIR("A")="Press Return to continue",DIR(0)="E" D ^DIR
"RTN","PSOSPML3",137,0)
 W !,""
"RTN","PSOSPML3",138,0)
 S LEVNAM=$P("^PHARMACY HEADER^PATIENT DETAIL^PRESCRIPTION DETAIL^PHARMACY TRAILER^","^",LEVEL)
"RTN","PSOSPML3",139,0)
 W !,"The following variables are available at the ",LEVNAM," level for"
"RTN","PSOSPML3",140,0)
 W !,"customizing this Data Element:"
"RTN","PSOSPML3",141,0)
 W !,""
"RTN","PSOSPML3",142,0)
 W !,"   STATEIEN - State IEN. Pointer to STATE file (#5)."
"RTN","PSOSPML3",143,0)
 I LEVEL=1!(LEVEL=6) Q
"RTN","PSOSPML3",144,0)
 W !,"   SITEIEN  - Pharmacy Division IEN. Pointer to OUTPATIENT SITE file (#59)."
"RTN","PSOSPML3",145,0)
 I LEVEL=2!(LEVEL=5) Q
"RTN","PSOSPML3",146,0)
 W !,"   PATIEN   - Patient IEN. Pointer to the PATIENT file (#2)."
"RTN","PSOSPML3",147,0)
 I LEVEL=3 Q
"RTN","PSOSPML3",148,0)
 W !,"   RXIEN    - Prescription IEN. Pointer to the PRESCRIPTION file (#52)."
"RTN","PSOSPML3",149,0)
 W !,"   DRUGIEN  - Drug IEN. Pointer to the DRUG File (#50)"
"RTN","PSOSPML3",150,0)
 W !,"   FILLNUM  - Fill Number ('0': Original Fill,'1': Refill #1,'2': Refill #2,"
"RTN","PSOSPML3",151,0)
 W !,"              'P1': Partial #1,'P2': Partial Fill #2, etc.)"
"RTN","PSOSPML3",152,0)
 W !,"   FILLIEN  - Pointer to the REFILL sub-file (#52.1) or PARTIAL sub-file (#52.2)"
"RTN","PSOSPML3",153,0)
 W !,"              ('0': Original, N: Pointer to Refill or Partial fill)"
"RTN","PSOSPML3",154,0)
 W !,"   RPHIEN   - Pharmacist IEN. Pointer to NEW PERSON file (#200)."
"RTN","PSOSPML3",155,0)
 W !,"   PREIEN   - Prescriber IEN.  Pointer to NEW PERSON file (#200)."
"RTN","PSOSPML3",156,0)
 W !,"   RTSREC   - Return To Stock Record? ('1': YES / '0': NO)"
"RTN","PSOSPML3",157,0)
 Q
"RTN","PSOSPML4")
0^12^B93991952^B79601311
"RTN","PSOSPML4",1,0)
PSOSPML4 ;BIRM/MFR - Single Prescritpion ASAP Data Listman Driver ;09/01/12
"RTN","PSOSPML4",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408,451**;DEC 1997;Build 114
"RTN","PSOSPML4",3,0)
 ;
"RTN","PSOSPML4",4,0)
 N DIR,DIRUT,X,PSOQUIT,RXIEN,SCREEN,STATEIEN,PSOTTCNT,PSOTPCNT,DFN,VALM,VALMCNT,VALMHDR,VALMBCK,VALMSG,PSOLSTLN
"RTN","PSOSPML4",5,0)
 ;
"RTN","PSOSPML4",6,0)
RX ; - Prescription prompt
"RTN","PSOSPML4",7,0)
 K DIR S DIR(0)="FAO^1:30",DIR("A")=" PRESCRIPTION: ",(DIR("?"),DIR("??"))="^D HLP^PSORXVW1"
"RTN","PSOSPML4",8,0)
 W ! D ^DIR I X=""!$D(DIRUT) G EXIT
"RTN","PSOSPML4",9,0)
 S X=$$UP^XLFSTR(X),PSOQUIT=0
"RTN","PSOSPML4",10,0)
 I $E(X,1,2)'="E." S RXIEN=+$$RXLKP(X) I RXIEN<0 G RX
"RTN","PSOSPML4",11,0)
 I $E(X,1,2)="E." D  I PSOQUIT G RX
"RTN","PSOSPML4",12,0)
 . I $L(X)'=9 W !?5,"The ECME# must be 7 digits long!",$C(7) S PSOQUIT=1 Q
"RTN","PSOSPML4",13,0)
 . S RXIEN=+$$RXNUM^PSOBPSU2($E(X,3,9)) I RXIEN<0 W " ??" S PSOQUIT=1
"RTN","PSOSPML4",14,0)
 ;
"RTN","PSOSPML4",15,0)
 S FILLNUM=$$RXFILL^PSOSPMU2(RXIEN) I FILLNUM="^" G EXIT
"RTN","PSOSPML4",16,0)
 ;
"RTN","PSOSPML4",17,0)
 S SCREEN=$$SCREEN^PSOSPMUT(RXIEN,FILLNUM)
"RTN","PSOSPML4",18,0)
 I +SCREEN D  G RX:$P(SCREEN,"^",3)="E"
"RTN","PSOSPML4",19,0)
 . W !!?1,$S($P(SCREEN,"^",3)="E":"ERROR",1:"WARNING"),": ",$P(SCREEN,"^",2),$C(7) D PAUSE^PSOSPMU1
"RTN","PSOSPML4",20,0)
 ;
"RTN","PSOSPML4",21,0)
 ; The legislation allowing VA to report was published on 02/11/2013
"RTN","PSOSPML4",22,0)
 I $$RXRLDT^PSOBPSUT(RXIEN,FILLNUM),$$RXRLDT^PSOBPSUT(RXIEN,FILLNUM)<3130211 D  G RX
"RTN","PSOSPML4",23,0)
 . W !!?1,"Only prescription fills dispensed on or after Feb 11, 2013 can be exported.",$C(7)
"RTN","PSOSPML4",24,0)
 ;
"RTN","PSOSPML4",25,0)
 D EN(RXIEN,FILLNUM,"N")
"RTN","PSOSPML4",26,0)
 ;
"RTN","PSOSPML4",27,0)
 G RX
"RTN","PSOSPML4",28,0)
 ;
"RTN","PSOSPML4",29,0)
EN(RXIEN,FILLNUM,RECTYPE) ; Entry point
"RTN","PSOSPML4",30,0)
 N ASAP,SITEIEN,PATIEN,FILLIEN,DRUGIEN,PREIEN,RPHIEN,RSTREC,RTSDATA,PSONAME,TRXTYPE,RTSREC
"RTN","PSOSPML4",31,0)
 ;
"RTN","PSOSPML4",32,0)
 S:$G(FILLNUM)="" FILLNUM=0
"RTN","PSOSPML4",33,0)
 S STATEIEN=$$RXSTATE^PSOBPSUT(RXIEN,0)
"RTN","PSOSPML4",34,0)
 S PSOASVER=$$GET1^DIQ(58.41,STATEIEN,1,"I") S:PSOASVER="" PSOASVER="4.2"
"RTN","PSOSPML4",35,0)
 S SITEIEN=$$RXSITE^PSOBPSUT(RXIEN,0)
"RTN","PSOSPML4",36,0)
 S (PATIEN,DFN)=$$GET1^DIQ(52,RXIEN,2,"I")
"RTN","PSOSPML4",37,0)
 D DEM^VADPT,ADD^VADPT,SETNAME^PSOSPMUT(DFN)
"RTN","PSOSPML4",38,0)
 S DRUGIEN=$$GET1^DIQ(52,RXIEN,6,"I")
"RTN","PSOSPML4",39,0)
 S FILLIEN=$S(FILLNUM["P":+$P(FILLNUM,"P",2),1:+FILLNUM)
"RTN","PSOSPML4",40,0)
 S TRXTYPE="S"
"RTN","PSOSPML4",41,0)
 K RTSDATA S RTSREC=0 I RECTYPE="V" S RTSREC=1 D LOADRTS^PSOSPMU1(RXIEN,FILLNUM,.RTSDATA)
"RTN","PSOSPML4",42,0)
 S PREIEN=$$PREIEN^PSOSPMUT(RECTYPE,RXIEN,FILLNUM)
"RTN","PSOSPML4",43,0)
 S RPHIEN=$$RPHIEN^PSOSPMUT(RECTYPE,RXIEN,FILLNUM)
"RTN","PSOSPML4",44,0)
 D EN^VALM("PSO SPMP VIEW/EXPORT RX")
"RTN","PSOSPML4",45,0)
 D FULL^VALM1
"RTN","PSOSPML4",46,0)
 Q
"RTN","PSOSPML4",47,0)
 ;
"RTN","PSOSPML4",48,0)
HDR ; - Builds the Header section
"RTN","PSOSPML4",49,0)
 N LINE1,LINE2,X
"RTN","PSOSPML4",50,0)
 K VALMHDR S VALMHDR(1)="Rx: "_$$GET1^DIQ(52,RXIEN,.01)_" - "_$$GET1^DIQ(52,RXIEN,6)
"RTN","PSOSPML4",51,0)
 S VALMHDR(1)=VALMHDR(1)_"   (Fill: "_$S(FILLNUM["P":"Partial "_$E(FILLNUM,2,9),'FILLNUM:"Original",1:"Refill "_FILLNUM)_")"
"RTN","PSOSPML4",52,0)
 S VALMHDR(2)="Patient: "_$$GET1^DIQ(52,RXIEN,2)_"            ASAP Version: "_PSOASVER
"RTN","PSOSPML4",53,0)
 Q
"RTN","PSOSPML4",54,0)
 ;
"RTN","PSOSPML4",55,0)
INIT ; Builds the Body section 
"RTN","PSOSPML4",56,0)
 N ASAP,LINE
"RTN","PSOSPML4",57,0)
 ;
"RTN","PSOSPML4",58,0)
 D CLEAN^VALM10 K ^TMP("PSOSPML4",$J) S VALMCNT=0,LINE=0
"RTN","PSOSPML4",59,0)
 I PSOASVER="1995" D
"RTN","PSOSPML4",60,0)
 . D SETSEG95("PSOSPML4",$$ASAP95^PSOASAP0(RXIEN,+FILLNUM)) S VALMCNT=LINE
"RTN","PSOSPML4",61,0)
 I PSOASVER'="1995" D
"RTN","PSOSPML4",62,0)
 . S (PSOTTCNT,PSOTPCNT)=0
"RTN","PSOSPML4",63,0)
 . D LOADASAP^PSOSPMU0(PSOASVER,"B",.ASAP)
"RTN","PSOSPML4",64,0)
 . D SETSEG("ASAP") S VALMCNT=LINE
"RTN","PSOSPML4",65,0)
 . S VALMSG="Enter ?? for more actions|* Custom Segment/Element"
"RTN","PSOSPML4",66,0)
 Q
"RTN","PSOSPML4",67,0)
 ;
"RTN","PSOSPML4",68,0)
SETSEG(ARRNAM) ; Sets list body with ASAP (non-1995) info (Uses Recurisivity - Call itself)
"RTN","PSOSPML4",69,0)
 ;Input: ARRNAM - Name of the Array containing the ASAP Definition ('ASAP')
"RTN","PSOSPML4",70,0)
 ;
"RTN","PSOSPML4",71,0)
 N ARRAY,SEGID,DETLN,VALUE,RXLN,COLUMN,I,TMPARR,SEGTXT,LSTELM
"RTN","PSOSPML4",72,0)
 S ARRAY=$Q(@ARRNAM) I '+$P(ARRAY,"(",2) Q
"RTN","PSOSPML4",73,0)
 S SEGID=@ARRAY,COLUMN=(($L(ARRAY,",")-1)*4)
"RTN","PSOSPML4",74,0)
 ; Segment Not Used by ASAP Version
"RTN","PSOSPML4",75,0)
 I $P(ASAP(SEGID),"^",4)="N" D SETSEG(ARRAY) Q
"RTN","PSOSPML4",76,0)
 D SETLN^PSOSPMU1("PSOSPML4",$P(ASAP(SEGID),"^")_$S($$CUSSEG^PSOSPMU3(PSOASVER,SEGID):"*",1:"")_" "_$P(ASAP(SEGID),"^",2),0,1)
"RTN","PSOSPML4",77,0)
 D SEGCOUNT^PSOSPMUT($P(ASAP(SEGID),"^",6))
"RTN","PSOSPML4",78,0)
 K TMPARR S SEGTXT=SEGID
"RTN","PSOSPML4",79,0)
 S LSTELM=+$O(ASAP(SEGID,""),-1)
"RTN","PSOSPML4",80,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERROR^PSOSPML4"
"RTN","PSOSPML4",81,0)
 F I=1:1:LSTELM D
"RTN","PSOSPML4",82,0)
 . S VALUE="" I $P(ASAP(SEGID,I),"^",6)'="N" X "S VALUE="_ASAP(SEGID,I,"VAL",1)
"RTN","PSOSPML4",83,0)
 . S VALUE=$E(VALUE,1,$P(ASAP(SEGID,I),"^",4))
"RTN","PSOSPML4",84,0)
 . S SEGTXT=SEGTXT_$P(ASAP,"^",2)_VALUE
"RTN","PSOSPML4",85,0)
 . S RXLN=$S($G(VALUE)'="":VALUE,1:$P(ASAP,"^",2))
"RTN","PSOSPML4",86,0)
 . S $E(RXLN,40)=$P(ASAP(SEGID,I),"^")_$S($G(ASAP(SEGID,I,"CUS")):"* ",1:" ")_$P(ASAP(SEGID,I),"^",2)_$S($P(ASAP(SEGID,I),"^",6)="N":" (Not Used)",1:"")
"RTN","PSOSPML4",87,0)
 . S TMPARR(I)=RXLN I $G(ASAP(SEGID,I,"CUS")) S TMPARR(I,"HIGH")=1
"RTN","PSOSPML4",88,0)
 S SEGTXT=SEGTXT_$S(PSOASVER="3.0":$$TH13^PSOASAP0(),1:$$TH09^PSOASAP0())
"RTN","PSOSPML4",89,0)
 ;
"RTN","PSOSPML4",90,0)
 F I=1:1 Q:SEGTXT=""  D SETLN^PSOSPMU1("PSOSPML4",$E(SEGTXT,1,80)) S SEGTXT=$E(SEGTXT,81,999)
"RTN","PSOSPML4",91,0)
 F I=1:1 Q:'$D(TMPARR(I))  D SETLN^PSOSPMU1("PSOSPML4",TMPARR(I),,,+$G(TMPARR(I,"HIGH")))
"RTN","PSOSPML4",92,0)
 ;
"RTN","PSOSPML4",93,0)
 D SETSEG(ARRAY)
"RTN","PSOSPML4",94,0)
 Q
"RTN","PSOSPML4",95,0)
 ;
"RTN","PSOSPML4",96,0)
ERROR ; Error Trap Handling to catch errors on user-entered M expression
"RTN","PSOSPML4",97,0)
 D SETLN^PSOSPMU1("PSOSPML4",$E($$EC^%ZOSV,1,80))
"RTN","PSOSPML4",98,0)
 G UNWIND^%ZTER
"RTN","PSOSPML4",99,0)
 ;
"RTN","PSOSPML4",100,0)
SETSEG95(LSTSUB,RECORD) ; Sets list body with ASAP 1995 info
"RTN","PSOSPML4",101,0)
 N DSPL,PSOCOL
"RTN","PSOSPML4",102,0)
 S PSOCOL=$S(LSTSUB="PSOSPML3":1,1:31)
"RTN","PSOSPML4",103,0)
 S:LSTSUB="PSOSPML4" DSPL="VALUE" S $E(DSPL,PSOCOL)="POSITION  DESCRIPTION" D SETLN^PSOSPMU1(LSTSUB,DSPL,0,1,0)
"RTN","PSOSPML4",104,0)
 S DSPL=$E(RECORD,1,3),$E(DSPL,PSOCOL)="(001-003) Transmission Type Identifier" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",105,0)
 S DSPL=$E(RECORD,4,9),$E(DSPL,PSOCOL)="(004-009) Bank Identification Number ('VA'_Site#)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",106,0)
 S DSPL=$E(RECORD,10,11),$E(DSPL,PSOCOL)="(010-011) ASAP Version ('A2': 1995)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",107,0)
 S DSPL=$E(RECORD,12,13),$E(DSPL,PSOCOL)="(012-013) Transaction Code ('01': Controlled Sub)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",108,0)
 S DSPL=$E(RECORD,14,25),$E(DSPL,PSOCOL)="(014-025) Pharmacy DEA Number" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",109,0)
 S DSPL=$E(RECORD,26,45),$E(DSPL,PSOCOL)="(026-045) Patient ID (SSN)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",110,0)
 S DSPL=$E(RECORD,46,48),$E(DSPL,PSOCOL)="(046-048) Patient's Zip Code (first 3 digits)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",111,0)
 S DSPL=$E(RECORD,49,56),$E(DSPL,PSOCOL)="(049-056) Patient's DOB  (Format: YYYYMMDD)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",112,0)
 S DSPL=$E(RECORD,57,57),$E(DSPL,PSOCOL)="(057-057) Patient's Gender ('1':Male/'2':Female)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",113,0)
 S DSPL=$E(RECORD,58,65),$E(DSPL,PSOCOL)="(058-065) Date Filled (Release Date) (YYYYMMDD)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",114,0)
 S DSPL=$E(RECORD,66,72),$E(DSPL,PSOCOL)="(066-072) Prescription Number (last 7 of Rx IEN)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",115,0)
 S DSPL=$E(RECORD,73,74),$E(DSPL,PSOCOL)="(073-074) Rx Fill Number" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",116,0)
 S DSPL=$E(RECORD,75,79),$E(DSPL,PSOCOL)="(075-079) Rx Quantity" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",117,0)
 S DSPL=$E(RECORD,80,82),$E(DSPL,PSOCOL)="(080-082) Rx Days Supply" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",118,0)
 S DSPL=$E(RECORD,83,83),$E(DSPL,PSOCOL)="(083-083) Compound Flag (Always '1':Not Compound)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",119,0)
 S DSPL=$E(RECORD,84,94),$E(DSPL,PSOCOL)="(084-094) NDC (Format: 99999999999)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",120,0)
 S DSPL=$E(RECORD,95,104),$E(DSPL,PSOCOL)="(095-104) Prescriber's DEA #" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",121,0)
 S DSPL=$E(RECORD,105,108),$E(DSPL,PSOCOL)="(105-108) Prescriber's DEA Suffix (Not Used)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",122,0)
 S DSPL=$E(RECORD,109,116),$E(DSPL,PSOCOL)="(109-116) Date Written (Format: YYYYMMDD)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",123,0)
 S DSPL=$E(RECORD,117,118),$E(DSPL,PSOCOL)="(117-118) Refills Authorized" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",124,0)
 S DSPL=$E(RECORD,119,119),$E(DSPL,PSOCOL)="(119-119) Origin Code(0:Unknown,1:Written,2:Phone)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",125,0)
 S DSPL=$E(RECORD,120,121),$E(DSPL,PSOCOL)="(120-121) Customer Location ('03':Outpatient)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",126,0)
 S DSPL=$E(RECORD,122,128),$E(DSPL,PSOCOL)="(122-128) Diagnosis Code (Not Used)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",127,0)
 S DSPL=$E(RECORD,129,138),$E(DSPL,PSOCOL)="(129-138) Alternate Prescriber's # (VA #)" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",128,0)
 S DSPL=$E(RECORD,139,153),$E(DSPL,PSOCOL)="(139-153) Patient's Last Name" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",129,0)
 S DSPL=$E(RECORD,154,168),$E(DSPL,PSOCOL)="(154-168) Patient's First Name" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",130,0)
 S DSPL=$E(RECORD,169,198),$E(DSPL,PSOCOL)="(169-198) Patient's Address" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",131,0)
 S DSPL=$E(RECORD,199,200),$E(DSPL,PSOCOL)="(199-200) Patient's State" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",132,0)
 S DSPL=$E(RECORD,201,209),$E(DSPL,PSOCOL)="(201-209) Patient's Zip Code" D SETLN^PSOSPMU1(LSTSUB,DSPL)
"RTN","PSOSPML4",133,0)
 Q
"RTN","PSOSPML4",134,0)
 ;
"RTN","PSOSPML4",135,0)
ASAPDEF ; - Invokes Listman for ASAP Definitions
"RTN","PSOSPML4",136,0)
 N STATE
"RTN","PSOSPML4",137,0)
 S STATE=$$RXSTATE^PSOBPSUT(RXIEN,0)
"RTN","PSOSPML4",138,0)
 S PSOASVER=$$GET1^DIQ(58.41,STATE,1,"I") S:PSOASVER="" PSOASVER="4.2"
"RTN","PSOSPML4",139,0)
 D FULL^VALM1 W !
"RTN","PSOSPML4",140,0)
 D EN^PSOSPML3(PSOASVER,1),INIT S VALMBCK="R"
"RTN","PSOSPML4",141,0)
 Q
"RTN","PSOSPML4",142,0)
 ;
"RTN","PSOSPML4",143,0)
EXPORT ; - Export Rx
"RTN","PSOSPML4",144,0)
 N STATEIEN,PSOASVER,PSOTXRTS,BATIEN,DIR,X,Y,DIRUT,DUOUT,RECTYPE,SCREEN,DFN
"RTN","PSOSPML4",145,0)
 S VALMBCK="R"
"RTN","PSOSPML4",146,0)
 S STATEIEN=$$RXSTATE^PSOBPSUT(RXIEN,0)
"RTN","PSOSPML4",147,0)
 S PSOASVER=$$GET1^DIQ(58.41,STATEIEN,1,"I")
"RTN","PSOSPML4",148,0)
 S PSOTXRTS=+$$GET1^DIQ(58.41,STATEIEN,12,"I")
"RTN","PSOSPML4",149,0)
 ;
"RTN","PSOSPML4",150,0)
 I 'STATEIEN D  Q
"RTN","PSOSPML4",151,0)
 . S VALMSG="No State on file for Division "_$$GET1^DIQ(59,$$RXSITE^PSOBPSUT(RXIEN,0),.01) W $C(7)
"RTN","PSOSPML4",152,0)
 I '$$SPOK^PSOSPMUT(STATEIEN) D  Q
"RTN","PSOSPML4",153,0)
 . S VALMSG=$P($$SPOK^PSOSPMUT(STATEIEN),"^",2) W $C(7)
"RTN","PSOSPML4",154,0)
 D FULL^VALM1
"RTN","PSOSPML4",155,0)
 ;
"RTN","PSOSPML4",156,0)
 S SCREEN=$$SCREEN^PSOSPMUT(RXIEN,FILLNUM)
"RTN","PSOSPML4",157,0)
 I +SCREEN D  Q:$P(SCREEN,"^",3)="E"
"RTN","PSOSPML4",158,0)
 . W $C(7) I $P(SCREEN,"^",3)="E" S VALMSG=$P(SCREEN,"^",2) Q
"RTN","PSOSPML4",159,0)
 . W !!,"WARNING: ",$P(SCREEN,"^",2)
"RTN","PSOSPML4",160,0)
 ;
"RTN","PSOSPML4",161,0)
 K DIR S DIR("A")="Record Type"
"RTN","PSOSPML4",162,0)
 S DIR("L",1)="Enter the type of record to be sent for this prescription fill:"
"RTN","PSOSPML4",163,0)
 S DIR("L",2)=" "
"RTN","PSOSPML4",164,0)
 I $$RXRLDT^PSOBPSUT(RXIEN,FILLNUM) D
"RTN","PSOSPML4",165,0)
 . S DIR(0)="S^N:NEW;R:REVISE"
"RTN","PSOSPML4",166,0)
 . S DIR("L",3)="  N     NEW"
"RTN","PSOSPML4",167,0)
 . S DIR("L")="  R     REVISE"
"RTN","PSOSPML4",168,0)
 . S DIR("B")="NEW"
"RTN","PSOSPML4",169,0)
 E  D
"RTN","PSOSPML4",170,0)
 . S DIR(0)="S^V:VOID"
"RTN","PSOSPML4",171,0)
 . S DIR("L")="  V     VOID RECORD"
"RTN","PSOSPML4",172,0)
 . S DIR("B")="VOID"
"RTN","PSOSPML4",173,0)
 D ^DIR I $D(DUOUT)!($D(DIRUT)) K DIRUT,DUOUT,DIR Q
"RTN","PSOSPML4",174,0)
 S RECTYPE=Y
"RTN","PSOSPML4",175,0)
 ;
"RTN","PSOSPML4",176,0)
 W ! K DIR,DTOUT,DUOUT
"RTN","PSOSPML4",177,0)
 I (RECTYPE'="V")!(PSOASVER'="1995")!PSOTXRTS D
"RTN","PSOSPML4",178,0)
 . S DIR("A",1)="The Prescription Fill will be transmitted to the State",DIR("A",2)=""
"RTN","PSOSPML4",179,0)
 S DIR("A")="Confirm",DIR(0)="Y",DIR("B")="N"
"RTN","PSOSPML4",180,0)
 D ^DIR I $G(DTOUT)!$G(DUOUT)!'Y Q
"RTN","PSOSPML4",181,0)
 W ?40,"Please wait..."
"RTN","PSOSPML4",182,0)
 ;
"RTN","PSOSPML4",183,0)
 K ^TMP("PSOSPMRX",$J) S ^TMP("PSOSPMRX",$J,STATEIEN,RXIEN,FILLNUM)=RECTYPE
"RTN","PSOSPML4",184,0)
 S BATIEN=$$BLDBAT^PSOSPMU1($S(RECTYPE="V"&(PSOASVER="1995"):"VD",1:"RX"))
"RTN","PSOSPML4",185,0)
 ;
"RTN","PSOSPML4",186,0)
 I (($$GET1^DIQ(58.42,BATIEN,2,"I")="VD")&'PSOTXRTS) D
"RTN","PSOSPML4",187,0)
 . D EXMSG^PSOSPML2(1) W ! K %ZIS,IOP,POP,ZTSK S %ZIS="QM" D ^%ZIS K %ZIS Q:POP  U IO
"RTN","PSOSPML4",188,0)
 . W ! D EXPORT^PSOSPMUT(BATIEN,"VIEW")
"RTN","PSOSPML4",189,0)
 . D ^%ZISC N DIE,DA,DR S DIE="^PS(58.42,",DA=BATIEN
"RTN","PSOSPML4",190,0)
 . S DR="6///<Manual Web Upload>;7////"_DUZ_";9///"_$$NOW^XLFDT()
"RTN","PSOSPML4",191,0)
 . D ^DIE
"RTN","PSOSPML4",192,0)
 E  D EXPORT^PSOSPMUT(BATIEN,"EXPORT")
"RTN","PSOSPML4",193,0)
 ;
"RTN","PSOSPML4",194,0)
 K DIR S DIR("A")="Press Return to continue",DIR(0)="E" D ^DIR
"RTN","PSOSPML4",195,0)
 Q
"RTN","PSOSPML4",196,0)
 ;
"RTN","PSOSPML4",197,0)
VIEW ; - Rx View Action
"RTN","PSOSPML4",198,0)
 N VALMCNT,PSOTITLE,DFN,PSOLSTLN
"RTN","PSOSPML4",199,0)
 S PSOTITLE=VALM("TITLE")
"RTN","PSOSPML4",200,0)
 ;
"RTN","PSOSPML4",201,0)
 ; DO structure used to avoid losing variables RXIEN,FILLNUM,LINE,PSOTITLE
"RTN","PSOSPML4",202,0)
 DO
"RTN","PSOSPML4",203,0)
 . N PSOVDA,DA,PS
"RTN","PSOSPML4",204,0)
 . S (PSOVDA,DA)=RXIEN
"RTN","PSOSPML4",205,0)
 . N RXIEN,FILLNUM,LINE,PSOTITLE D DP^PSORXVW
"RTN","PSOSPML4",206,0)
 ;
"RTN","PSOSPML4",207,0)
 S VALMBCK="R",VALM("TITLE")=PSOTITLE
"RTN","PSOSPML4",208,0)
 Q
"RTN","PSOSPML4",209,0)
 ;
"RTN","PSOSPML4",210,0)
MP ; - Patient Medication Profile
"RTN","PSOSPML4",211,0)
 N SITEIEN,PATIENT,SITE,DFN
"RTN","PSOSPML4",212,0)
 D FULL^VALM1 W !
"RTN","PSOSPML4",213,0)
 S SITEIEN=+$$RXSITE^PSOBPSUT(RXIEN,0) S:$G(PSOSITE) SITE=PSOSITE
"RTN","PSOSPML4",214,0)
 S PATIENT=+$$GET1^DIQ(52,RXIEN,2,"I")
"RTN","PSOSPML4",215,0)
 D LST^PSOPMP0(SITEIEN,PATIENT) S VALMBCK="R"
"RTN","PSOSPML4",216,0)
 Q
"RTN","PSOSPML4",217,0)
 ;
"RTN","PSOSPML4",218,0)
EXIT ; Listman Exit
"RTN","PSOSPML4",219,0)
 K ^TMP("PSOSPML4",$J)
"RTN","PSOSPML4",220,0)
 Q
"RTN","PSOSPML4",221,0)
HELP ; Listman Help
"RTN","PSOSPML4",222,0)
 Q
"RTN","PSOSPML4",223,0)
 ;
"RTN","PSOSPML4",224,0)
RXLKP(RXNUM) ; - Peforms Lookup on the PRESCRIPTION file
"RTN","PSOSPML4",225,0)
 N DIC,X,Y,D
"RTN","PSOSPML4",226,0)
 S DIC="^PSRX(",DIC(0)="QE",D="B",X=RXNUM
"RTN","PSOSPML4",227,0)
 D IX^DIC
"RTN","PSOSPML4",228,0)
 Q Y
"RTN","PSOSPML6")
0^14^B4610506^B4614418
"RTN","PSOSPML6",1,0)
PSOSPML6 ;BIRM/MFR - Unmark Rx Fill as 'Administered in Clinic' ;09/30/13
"RTN","PSOSPML6",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408,451**;DEC 1997;Build 114
"RTN","PSOSPML6",3,0)
 ;
"RTN","PSOSPML6",4,0)
 N DIR,DIRUT,X,PSOQUIT,RXIEN,RXFILL,BATIEN,STATEIEN
"RTN","PSOSPML6",5,0)
RX ; - Prescription prompt
"RTN","PSOSPML6",6,0)
 K DIR S DIR(0)="FAO^1:30",DIR("A")=" PRESCRIPTION: ",(DIR("?"),DIR("??"))="^D HLP^PSORXVW1"
"RTN","PSOSPML6",7,0)
 W ! D ^DIR I X=""!$D(DIRUT) G EXIT
"RTN","PSOSPML6",8,0)
 S X=$$UP^XLFSTR(X),PSOQUIT=0
"RTN","PSOSPML6",9,0)
 I $E(X,1,2)'="E." S RXIEN=+$$RXLKP(X) I RXIEN<0 G RX
"RTN","PSOSPML6",10,0)
 I $E(X,1,2)="E." D  I PSOQUIT G RX
"RTN","PSOSPML6",11,0)
 . I $L(X)'=9 W !?5,"The ECME# must be 7 digits long!",$C(7) S PSOQUIT=1 Q
"RTN","PSOSPML6",12,0)
 . S RXIEN=+$$RXNUM^PSOBPSU2($E(X,3,9)) I RXIEN<0 W " ??" S PSOQUIT=1
"RTN","PSOSPML6",13,0)
 ;
"RTN","PSOSPML6",14,0)
 S RXFILL=$$RXFILL^PSOSPMU2(RXIEN) I RXFILL="^" G EXIT
"RTN","PSOSPML6",15,0)
 ;
"RTN","PSOSPML6",16,0)
 I '$$ADMCLN^PSOSPMUT(RXIEN,RXFILL) D  G RX
"RTN","PSOSPML6",17,0)
 . W !!," Prescription Fill not marked as 'Administered in Clinic'.",$C(7)
"RTN","PSOSPML6",18,0)
 ;
"RTN","PSOSPML6",19,0)
 W ! K DIR,DTOUT,DUOUT
"RTN","PSOSPML6",20,0)
 S DIR("A")="Unmark prescription fill as 'Administered in Clinic'",DIR("A",2)=""
"RTN","PSOSPML6",21,0)
 S DIR(0)="Y",DIR("B")="N" D ^DIR I $G(DTOUT)!$G(DUOUT)!'Y Q
"RTN","PSOSPML6",22,0)
 ;
"RTN","PSOSPML6",23,0)
 N DIE,DR,DA W !!,"Updating Rx..."
"RTN","PSOSPML6",24,0)
 I 'RXFILL D
"RTN","PSOSPML6",25,0)
 . S DIE="^PSRX(",DA=RXIEN,DR="14///@"
"RTN","PSOSPML6",26,0)
 E  D
"RTN","PSOSPML6",27,0)
 . S DIE="^PSRX("_RXIEN_",1,",DA(1)=RXIEN,DA=RXFILL,DR="23///@"
"RTN","PSOSPML6",28,0)
 D ^DIE H 2 W "done.",$C(7)
"RTN","PSOSPML6",29,0)
 ;
"RTN","PSOSPML6",30,0)
 I '$$RXRLDT^PSOBPSUT(RXIEN,RXFILL) G RX
"RTN","PSOSPML6",31,0)
 ;
"RTN","PSOSPML6",32,0)
 W ! K DIR
"RTN","PSOSPML6",33,0)
 S DIR("A")="Transmit Prescription Fill to the State",DIR(0)="Y",DIR("B")="N"
"RTN","PSOSPML6",34,0)
 D ^DIR I $G(DTOUT)!$G(DUOUT)!'Y G RX
"RTN","PSOSPML6",35,0)
 ;
"RTN","PSOSPML6",36,0)
 S STATEIEN=$$RXSTATE^PSOBPSUT(RXIEN,0)
"RTN","PSOSPML6",37,0)
 K ^TMP("PSOSPMRX",$J) S ^TMP("PSOSPMRX",$J,STATEIEN,RXIEN,RXFILL)="N"
"RTN","PSOSPML6",38,0)
 S BATIEN=$$BLDBAT^PSOSPMU1("RX")
"RTN","PSOSPML6",39,0)
 D EXPORT^PSOSPMUT(BATIEN,"EXPORT")
"RTN","PSOSPML6",40,0)
 ;
"RTN","PSOSPML6",41,0)
 G RX
"RTN","PSOSPML6",42,0)
 ;
"RTN","PSOSPML6",43,0)
EXIT Q
"RTN","PSOSPML6",44,0)
 ;
"RTN","PSOSPML6",45,0)
RXLKP(RXNUM) ; - Peforms Lookup on the PRESCRIPTION file
"RTN","PSOSPML6",46,0)
 N DIC,X,Y,D
"RTN","PSOSPML6",47,0)
 S DIC="^PSRX(",DIC(0)="QE",D="B",X=RXNUM
"RTN","PSOSPML6",48,0)
 D IX^DIC
"RTN","PSOSPML6",49,0)
 Q Y
"RTN","PSOSPMSP")
0^5^B106425657^B143138804
"RTN","PSOSPMSP",1,0)
PSOSPMSP ;BIRM/MFR - State Prescription Monitoring Program - State Parameters ;09/04/12
"RTN","PSOSPMSP",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408,451**;DEC 1997;Build 114
"RTN","PSOSPMSP",3,0)
 ;
"RTN","PSOSPMSP",4,0)
EN ; - Menu option entry point
"RTN","PSOSPMSP",5,0)
 N PSOASVER,PSOINCNV,PSOREPFQ,PSOVMSLD,PSOUNXLD,PSOPFIX,PSOEXT,PSOFTPIP,PSOTXRTS,Y
"RTN","PSOSPMSP",6,0)
 N PSOFTPUS,PSOFTPPN,PSOFTPDR,PSOTXMOD,PSOQUIT,DIC,DIR,DIRUT,DTOUT,DUOUT,LST,DELDIR
"RTN","PSOSPMSP",7,0)
 ;
"RTN","PSOSPMSP",8,0)
 D FULL^VALM1 W !
"RTN","PSOSPMSP",9,0)
 ;
"RTN","PSOSPMSP",10,0)
 W ! K DIC S DIC("A")="Select STATE: ",DIC="^DIC(5,",DIC(0)="QOEAM"
"RTN","PSOSPMSP",11,0)
 I $O(^PS(58.41,0)) S DIC("B")=$O(^PS(58.41,0))
"RTN","PSOSPMSP",12,0)
 K STATEIEN D ^DIC I X=""!(X="^")!$D(DUOUT)!$D(DTOUT) G END
"RTN","PSOSPMSP",13,0)
 K DIC("A") G:Y<0 EN S STATEIEN=+Y
"RTN","PSOSPMSP",14,0)
 ;
"RTN","PSOSPMSP",15,0)
 D DISPLAY(STATEIEN)
"RTN","PSOSPMSP",16,0)
 ;
"RTN","PSOSPMSP",17,0)
 ; Checking the Security Key PSO SPMP ADMIN for Editing the Parameters
"RTN","PSOSPMSP",18,0)
 I '$D(^XUSEC("PSO SPMP ADMIN",DUZ)) D  G EN
"RTN","PSOSPMSP",19,0)
 . W !,"The security key PSO SPMP ADMIN is required for editing the Parameters." W $C(7)
"RTN","PSOSPMSP",20,0)
 ;
"RTN","PSOSPMSP",21,0)
 D LOAD(STATEIEN) S PSOQUIT=0
"RTN","PSOSPMSP",22,0)
 ;
"RTN","PSOSPMSP",23,0)
ASAPVER ; - ASAP Version
"RTN","PSOSPMSP",24,0)
 S X=$$ASAPVER^PSOSPMU2("A",0,PSOASVER,1,1) I X="^" G EXIT
"RTN","PSOSPMSP",25,0)
 I X["^"!(X="@") G @$$GOTO(X,"ASAPVER")
"RTN","PSOSPMSP",26,0)
 S PSOASVER=X D CHANGED(STATEIEN,"ASAPVER",PSOASVER)
"RTN","PSOSPMSP",27,0)
 ;
"RTN","PSOSPMSP",28,0)
TRXRTS ; - Auto Transmit Returns (ASAP 1995 only)
"RTN","PSOSPMSP",29,0)
 I PSOASVER'="1995" S PSOTXRTS="" G INCNVET
"RTN","PSOSPMSP",30,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",31,0)
 S DIR(0)="58.41,12" S:$G(PSOTXRTS)'="" DIR("B")=$S(PSOTXRTS:"YES",1:"NO")
"RTN","PSOSPMSP",32,0)
 D ^DIR I X'="",$D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"TRXRTS")
"RTN","PSOSPMSP",33,0)
 S PSOTXRTS=Y D CHANGED(STATEIEN,"TRXRTS",PSOTXRTS)
"RTN","PSOSPMSP",34,0)
 ;
"RTN","PSOSPMSP",35,0)
INCNVET ; Include Non-Veteran Patients
"RTN","PSOSPMSP",36,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",37,0)
 S DIR(0)="58.41,2" S DIR("B")=$S(+$G(PSOINCNV):"YES",1:"NO")
"RTN","PSOSPMSP",38,0)
 D ^DIR I $D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"INCNVET")
"RTN","PSOSPMSP",39,0)
 S PSOINCNV=Y D CHANGED(STATEIEN,"INCNVET",PSOINCNV)
"RTN","PSOSPMSP",40,0)
 ;
"RTN","PSOSPMSP",41,0)
REPFRQ ; Reporting Frequency
"RTN","PSOSPMSP",42,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",43,0)
 S DIR(0)="58.41,3" S:$G(PSOREPFQ) DIR("B")=PSOREPFQ
"RTN","PSOSPMSP",44,0)
 D ^DIR I $D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"REPFRQ")
"RTN","PSOSPMSP",45,0)
 I Y'?1.2N W !,"Invalid Frequency"
"RTN","PSOSPMSP",46,0)
 S PSOREPFQ=Y D CHANGED(STATEIEN,"REPFRQ",PSOREPFQ)
"RTN","PSOSPMSP",47,0)
 ;
"RTN","PSOSPMSP",48,0)
VMSLDIR ; - Open VMS Local Directory
"RTN","PSOSPMSP",49,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",50,0)
 S DIR(0)="58.41,4" S:$G(PSOVMSLD)'="" DIR("B")=PSOVMSLD
"RTN","PSOSPMSP",51,0)
 D ^DIR I X'="",$D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"VMSLDIR")
"RTN","PSOSPMSP",52,0)
 S PSOVMSLD=Y D CHANGED(STATEIEN,"VMSLDIR",PSOVMSLD)
"RTN","PSOSPMSP",53,0)
 ;
"RTN","PSOSPMSP",54,0)
UNXLDIR ; - Unix/Linux Local Directory
"RTN","PSOSPMSP",55,0)
 K DIR,DIRUT,DTOUT,NEWDIR
"RTN","PSOSPMSP",56,0)
 I '$G(DELDIR),$G(PSOUNXLD)="" S PSOUNXLD=$$LINUXDIR^PSOSPMU1()
"RTN","PSOSPMSP",57,0)
 S DIR(0)="58.41,15" S:$G(PSOUNXLD)'="" DIR("B")=PSOUNXLD
"RTN","PSOSPMSP",58,0)
 S DELDIR=0 D ^DIR I X'="",$D(DIRUT)!$D(DTOUT) S:X="@" DELDIR=1 G @$$GOTO(X,"UNXLDIR")
"RTN","PSOSPMSP",59,0)
 I $G(Y)'="",$E(Y,$L(X))'="/" S Y=Y_"/"
"RTN","PSOSPMSP",60,0)
 S PSOUNXLD=Y D CHANGED(STATEIEN,"UNXLDIR",PSOUNXLD)
"RTN","PSOSPMSP",61,0)
 ; 
"RTN","PSOSPMSP",62,0)
 I PSOUNXLD'="",$$OS^%ZOSV()="UNIX",$$UP^XLFSTR($$VERSION^%ZOSV(1))["CACHE" D
"RTN","PSOSPMSP",63,0)
 . I '$$DIREXIST^PSOSPMU1(PSOUNXLD) D
"RTN","PSOSPMSP",64,0)
 . . W ! S DIR("A",1)="The directory above could not be found."
"RTN","PSOSPMSP",65,0)
 . . S DIR("A",2)=""
"RTN","PSOSPMSP",66,0)
 . . S DIR("A")="Would you like to create it now",DIR(0)="Y",DIR("B")="N"
"RTN","PSOSPMSP",67,0)
 . . D ^DIR I $G(DTOUT)!$G(DUOUT)!'Y W ! Q
"RTN","PSOSPMSP",68,0)
 . . D MAKEDIR^PSOSPMU1(PSOUNXLD) S NEWDIR=1 W !
"RTN","PSOSPMSP",69,0)
 . I '$$DIREXIST^PSOSPMU1(PSOUNXLD) D
"RTN","PSOSPMSP",70,0)
 . . W !!,"Warning: "_$S($G(NEWDIR):"The directory could not be created.",1:"The directory could not be found."),!,$C(7)
"RTN","PSOSPMSP",71,0)
 ;
"RTN","PSOSPMSP",72,0)
FILEPFIX ; - File name Prefix
"RTN","PSOSPMSP",73,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",74,0)
 S DIR(0)="58.41,5" K DIR("B") S:$G(PSOPFIX)'="" DIR("B")=PSOPFIX
"RTN","PSOSPMSP",75,0)
 D ^DIR I X'="",$D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"FILEPFIX")
"RTN","PSOSPMSP",76,0)
 I Y[" " W ?40,"No spaces allowed.",$C(7) G FILEPFIX
"RTN","PSOSPMSP",77,0)
 S PSOPFIX=Y D CHANGED(STATEIEN,"FILEPFIX",PSOPFIX)
"RTN","PSOSPMSP",78,0)
 ;
"RTN","PSOSPMSP",79,0)
FILEEXT ; File Extension
"RTN","PSOSPMSP",80,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",81,0)
 S DIR(0)="58.41,6" S:$G(PSOEXT)'="" DIR("B")=PSOEXT
"RTN","PSOSPMSP",82,0)
 D ^DIR I $D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"FILEEXT")
"RTN","PSOSPMSP",83,0)
 S PSOEXT=Y D CHANGED(STATEIEN,"FILEEXT",PSOEXT)
"RTN","PSOSPMSP",84,0)
 ;
"RTN","PSOSPMSP",85,0)
RENAME ; Rename File after upload?
"RTN","PSOSPMSP",86,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",87,0)
 S DIR(0)="58.41,17" S:$G(PSORENAM)'="" DIR("B")=$S(PSORENAM:"YES",1:"NO")
"RTN","PSOSPMSP",88,0)
 D ^DIR I $D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"RENAME")
"RTN","PSOSPMSP",89,0)
 S PSORENAM=Y D CHANGED(STATEIEN,"RENAME",PSORENAM)
"RTN","PSOSPMSP",90,0)
 ;
"RTN","PSOSPMSP",91,0)
FTPIP ; - State Server FTP IP Address
"RTN","PSOSPMSP",92,0)
 K DIR,DIRUT,DTOUT,PV
"RTN","PSOSPMSP",93,0)
 S DIR(0)="58.41,7" S:$G(PSOFTPIP)'="" DIR("B")=PSOFTPIP
"RTN","PSOSPMSP",94,0)
 D ^DIR I X'="",$D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"FTPIP")
"RTN","PSOSPMSP",95,0)
 S PSOFTPIP=Y D CHANGED(STATEIEN,"FTPIP",PSOFTPIP)
"RTN","PSOSPMSP",96,0)
 ;
"RTN","PSOSPMSP",97,0)
FTPUSER ; - State Server FTP Username
"RTN","PSOSPMSP",98,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",99,0)
 S DIR(0)="58.41,8" S:$G(PSOFTPUS)'="" DIR("B")=PSOFTPUS
"RTN","PSOSPMSP",100,0)
 D ^DIR I X'="",$D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"FTPUSER")
"RTN","PSOSPMSP",101,0)
 S PSOFTPUS=Y D CHANGED(STATEIEN,"FTPUSER",PSOFTPUS)
"RTN","PSOSPMSP",102,0)
 ;
"RTN","PSOSPMSP",103,0)
FTPPORT ; - State Server FTP Password
"RTN","PSOSPMSP",104,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",105,0)
 S DIR(0)="58.41,9" S:$G(PSOFTPPN)'="" DIR("B")=PSOFTPPN
"RTN","PSOSPMSP",106,0)
 D ^DIR I X'="",$D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"FTPPORT")
"RTN","PSOSPMSP",107,0)
 S PSOFTPPN=Y D CHANGED(STATEIEN,"FTPPORT",PSOFTPPN)
"RTN","PSOSPMSP",108,0)
 ;
"RTN","PSOSPMSP",109,0)
FTPDIR ; - State Server FTP Remote Directory
"RTN","PSOSPMSP",110,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",111,0)
 S DIR(0)="58.41,10" S:$G(PSOFTPDR)'="" DIR("B")=PSOFTPDR
"RTN","PSOSPMSP",112,0)
 D ^DIR I X'="",$D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"FTPDIR")
"RTN","PSOSPMSP",113,0)
 S PSOFTPDR=Y D CHANGED(STATEIEN,"FTPDIR",PSOFTPDR)
"RTN","PSOSPMSP",114,0)
 ;
"RTN","PSOSPMSP",115,0)
TRXMODE ; - Transmission Mode (A - Automatic / M - Manual)
"RTN","PSOSPMSP",116,0)
 K DIR,DIRUT,DTOUT
"RTN","PSOSPMSP",117,0)
 S DIR(0)="58.41,13",DIR("B")=PSOTXMOD
"RTN","PSOSPMSP",118,0)
 D ^DIR I X'="",$D(DIRUT)!$D(DTOUT) G @$$GOTO(X,"TRXMODE")
"RTN","PSOSPMSP",119,0)
 S PSOTXMOD=Y D CHANGED(STATEIEN,"TRXMODE",PSOTXMOD)
"RTN","PSOSPMSP",120,0)
 ;
"RTN","PSOSPMSP",121,0)
EXIT ; Exit
"RTN","PSOSPMSP",122,0)
 ;
"RTN","PSOSPMSP",123,0)
END S VALMBCK="R" Q
"RTN","PSOSPMSP",124,0)
 ;
"RTN","PSOSPMSP",125,0)
DISPLAY(STATE) ; - Displays the current Parameters
"RTN","PSOSPMSP",126,0)
 N ZNODE,FNODE,F1NODE,X
"RTN","PSOSPMSP",127,0)
 S ZNODE=$G(^PS(58.41,STATE,0)),FNODE=$G(^PS(58.41,STATE,"FILE")),F1NODE=$G(^PS(58.41,STATE,"FILE1"))
"RTN","PSOSPMSP",128,0)
 W ! I ZNODE="" Q
"RTN","PSOSPMSP",129,0)
 W !?5,"ASAP VERSION                : ",$P(ZNODE,"^",2)
"RTN","PSOSPMSP",130,0)
 I $P(ZNODE,"^",2)="1995" D
"RTN","PSOSPMSP",131,0)
 . W !?5,"TRANSMIT RETURN TO STOCK    : ",$S($P(ZNODE,"^",5):"YES",1:"NO")
"RTN","PSOSPMSP",132,0)
 W !?5,"INCLUDE NON-VETERAN PATIENTS: ",$S($P(ZNODE,"^",3):"YES",1:"NO")
"RTN","PSOSPMSP",133,0)
 W !?5,"REPORTING FREQUENCY IN DAYS : ",$P(ZNODE,"^",4)
"RTN","PSOSPMSP",134,0)
 W !?5,"OPEN VMS LOCAL DIRECTORY    : ",$P(FNODE,"^",1)
"RTN","PSOSPMSP",135,0)
 W !?5,"UNIX/LINUX LOCAL DIRECTORY  : ",$P(F1NODE,"^",1)
"RTN","PSOSPMSP",136,0)
 W !?5,"FILE NAME PREFIX            : ",$P(FNODE,"^",2)
"RTN","PSOSPMSP",137,0)
 W !?5,"FILE EXTENSION              : ",$P(FNODE,"^",3)
"RTN","PSOSPMSP",138,0)
 W !?5,"RENAME FILE AFTER UPLOAD    : ",$S($P(ZNODE,"^",7):"YES",1:"NO")
"RTN","PSOSPMSP",139,0)
 W !?5,"STATE SFTP SERVER IP ADDRESS: ",$P(FNODE,"^",4)
"RTN","PSOSPMSP",140,0)
 W !?5,"STATE SFTP SERVER USERNAME  : ",$P(FNODE,"^",5)
"RTN","PSOSPMSP",141,0)
 W !?5,"STATE SFTP SERVER PORT #    : ",$P(FNODE,"^",6)
"RTN","PSOSPMSP",142,0)
 W !?5,"STATE SFTP SERVER DIRECTORY : ",$P(FNODE,"^",7)
"RTN","PSOSPMSP",143,0)
 W !?5,"SFTP TRANSMISSION MODE      : ",$$GET1^DIQ(58.41,STATE,13)
"RTN","PSOSPMSP",144,0)
 W !
"RTN","PSOSPMSP",145,0)
 Q 
"RTN","PSOSPMSP",146,0)
 ;
"RTN","PSOSPMSP",147,0)
GOTO(INPUT,HOME) ; - Directed up-arrow
"RTN","PSOSPMSP",148,0)
 ; Input: INPUT  - User input (e.g., "@", "^STATE", etc...)
"RTN","PSOSPMSP",149,0)
 ;        HOME   - Prompt where the user typed the input
"RTN","PSOSPMSP",150,0)
 ;Output: $$GOTO - GoTo Prompt
"RTN","PSOSPMSP",151,0)
 N GOTO,I,TAG,TRGT,OK2DEL
"RTN","PSOSPMSP",152,0)
 I INPUT="@",HOME="ASAPVER",$D(^PS(58.41,STATEIEN)) D  Q GOTO
"RTN","PSOSPMSP",153,0)
 . W ! S DIR(0)="Y",DIR("B")="NO",DIR("A")="DELETE SPMP STATE PARAMETERS FOR "_$$GET1^DIQ(5,STATEIEN,.01)
"RTN","PSOSPMSP",154,0)
 . D ^DIR I $D(DIRUT)!$D(DTOUT)!(Y=0) S GOTO=HOME W ! Q
"RTN","PSOSPMSP",155,0)
 . N DIK,DA S DIK="^PS(58.41,",DA=STATEIEN D ^DIK S GOTO="EN"
"RTN","PSOSPMSP",156,0)
 ;
"RTN","PSOSPMSP",157,0)
 S OK2DEL="TRXRTS^FTPDIR^FILEPFIX^VMSLDIR^UNXLDIR^WINLDIR^FTPPORT"
"RTN","PSOSPMSP",158,0)
 I INPUT="@",OK2DEL'[HOME D  Q HOME
"RTN","PSOSPMSP",159,0)
 . W " Cannot delete field",$C(7)
"RTN","PSOSPMSP",160,0)
 I INPUT="@" D  Q HOME
"RTN","PSOSPMSP",161,0)
 . S:HOME="FTPDIR" PSOFTPDR="" S:HOME="FILEPFIX" PSOPFIX=""
"RTN","PSOSPMSP",162,0)
 . S:HOME="VMSLDIR" PSOVMSLD="" S:HOME="UNXLDIR" PSOUNXLD=""
"RTN","PSOSPMSP",163,0)
 . S:HOME="FTPPORT" PSOFTPPN=""
"RTN","PSOSPMSP",164,0)
 . D SAVE(STATEIEN,HOME,"")
"RTN","PSOSPMSP",165,0)
 ;
"RTN","PSOSPMSP",166,0)
 I $P(INPUT,"^",2)="" S PSOQUIT=1 Q "EXIT"
"RTN","PSOSPMSP",167,0)
 ;
"RTN","PSOSPMSP",168,0)
 S TRGT=$$UP^XLFSTR($P(INPUT,"^",2))
"RTN","PSOSPMSP",169,0)
 S TAG(1)="ASAP VERSION^ASAPVER"
"RTN","PSOSPMSP",170,0)
 S:PSOASVER="1995" TAG(2)="TRANSMIT RETURN TO STOCK^TRXRTS"
"RTN","PSOSPMSP",171,0)
 S TAG(3)="INCLUDE NON-VETERAN PATIENTS^INCNVET"
"RTN","PSOSPMSP",172,0)
 S TAG(4)="REPORTING FREQUENCY IN DAYS^REPFRQ"
"RTN","PSOSPMSP",173,0)
 S TAG(5)="OPEN VMS LOCAL DIRECTORY^VMSLDIR"
"RTN","PSOSPMSP",174,0)
 S TAG(6)="UNIX/LINUX LOCAL DIRECTORY^UNXLDIR"
"RTN","PSOSPMSP",175,0)
 S TAG(7)="FILE NAME PREFIX^FILEPFIX"
"RTN","PSOSPMSP",176,0)
 S TAG(8)="FILE EXTENSION^FILEEXT"
"RTN","PSOSPMSP",177,0)
 S TAG(9)="RENAME FILE AFTER UPLOAD^RENAME"
"RTN","PSOSPMSP",178,0)
 S TAG(10)="STATE SFTP SERVER IP ADDRESS^FTPIP"
"RTN","PSOSPMSP",179,0)
 S TAG(11)="STATE SFTP SERVER USERNAME^FTPUSER"
"RTN","PSOSPMSP",180,0)
 S TAG(12)="STATE SFTP SERVER PORT #^FTPPORT"
"RTN","PSOSPMSP",181,0)
 S TAG(13)="STATE SFTP SERVER DIRECTORY^FTPDIR"
"RTN","PSOSPMSP",182,0)
 S TAG(14)="SFTP TRANSMISSION MODE^TRXMODE"
"RTN","PSOSPMSP",183,0)
 ;
"RTN","PSOSPMSP",184,0)
 S GOTO=HOME,I=""
"RTN","PSOSPMSP",185,0)
 F  S I=$O(TAG(I)) Q:'I  S TAG=TAG(I) I $E($P(TAG,"^"),1,$L(TRGT))=TRGT S GOTO=$P(TAG,"^",2) Q
"RTN","PSOSPMSP",186,0)
 ;
"RTN","PSOSPMSP",187,0)
 Q GOTO
"RTN","PSOSPMSP",188,0)
 ;
"RTN","PSOSPMSP",189,0)
LOAD(STATE) ; Loading Factory/Division/User preferences
"RTN","PSOSPMSP",190,0)
 ;Input : STATE    - Pointer to STATE file (#5)
"RTN","PSOSPMSP",191,0)
 ;Output: PSOASVER - ASAP Version
"RTN","PSOSPMSP",192,0)
 ;        PSOTXRTS  - Transmit Return To Stock fills
"RTN","PSOSPMSP",193,0)
 ;        PSOINCNV - Exclude Non-Veteran Patients
"RTN","PSOSPMSP",194,0)
 ;        PSOREPFQ - Reporting Frequency
"RTN","PSOSPMSP",195,0)
 ;        PSOVMSLD - Open VMS Local Directory
"RTN","PSOSPMSP",196,0)
 ;        PSOUNXLD - Unix/Linux Local Directory
"RTN","PSOSPMSP",197,0)
 ;        PSOPFIX  - File Name Prefix
"RTN","PSOSPMSP",198,0)
 ;        PSOEXT   - File Extension (.TXT or .DAT)
"RTN","PSOSPMSP",199,0)
 ;        PSORENAM - Rename File After Upload
"RTN","PSOSPMSP",200,0)
 ;        PSOFTPIP - State Server FTP IP Address
"RTN","PSOSPMSP",201,0)
 ;        PSOFTPUS - State Server FTP Username
"RTN","PSOSPMSP",202,0)
 ;        PSOFTPPN - State Server FTP Password
"RTN","PSOSPMSP",203,0)
 ;        PSOFTPDR - State Server FTP Directory
"RTN","PSOSPMSP",204,0)
 ;        PSOTXMOD - Transmission Mode ('A' or 'M')
"RTN","PSOSPMSP",205,0)
 K PSOASVER,PSOINCNV,PSOREPFQ,PSOVMSLD,PSOUNXLD,PSOWINLD,PSOPFIX,PSOEXT,PSORENAM,PSOFTPIP,PSOFTPUS
"RTN","PSOSPMSP",206,0)
 K PSOFTPPN,PSOFTPDR
"RTN","PSOSPMSP",207,0)
 ;
"RTN","PSOSPMSP",208,0)
 N X,ZNODE,FNODE,F1NODE,LINE
"RTN","PSOSPMSP",209,0)
 ;
"RTN","PSOSPMSP",210,0)
 ; - Defaults
"RTN","PSOSPMSP",211,0)
 S PSOASVER="4.2"
"RTN","PSOSPMSP",212,0)
 S PSOTXRTS="0"
"RTN","PSOSPMSP",213,0)
 S PSOINCNV=0
"RTN","PSOSPMSP",214,0)
 S PSOREPFQ="1"
"RTN","PSOSPMSP",215,0)
 S PSOVMSLD=""
"RTN","PSOSPMSP",216,0)
 S PSOUNXLD=""
"RTN","PSOSPMSP",217,0)
 S PSOPFIX=""
"RTN","PSOSPMSP",218,0)
 S PSOEXT=".DAT"
"RTN","PSOSPMSP",219,0)
 S PSORENAM="YES"
"RTN","PSOSPMSP",220,0)
 S PSOFTPIP=""
"RTN","PSOSPMSP",221,0)
 S PSOFTPUS=""
"RTN","PSOSPMSP",222,0)
 S PSOFTPPN=""
"RTN","PSOSPMSP",223,0)
 S PSOFTPDR=""
"RTN","PSOSPMSP",224,0)
 S PSOTXMOD="A"
"RTN","PSOSPMSP",225,0)
 ;
"RTN","PSOSPMSP",226,0)
 ; - State's parameters
"RTN","PSOSPMSP",227,0)
 I $D(^PS(58.41,STATE,0)) D
"RTN","PSOSPMSP",228,0)
 . S ZNODE=$G(^PS(58.41,STATE,0)) I $P(ZNODE,"^",1)'=STATE Q
"RTN","PSOSPMSP",229,0)
 . S FNODE=$G(^PS(58.41,STATE,"FILE")),F1NODE=$G(^PS(58.41,STATE,"FILE1"))
"RTN","PSOSPMSP",230,0)
 . S:$P(ZNODE,"^",2)'="" PSOASVER=$P(ZNODE,"^",2)
"RTN","PSOSPMSP",231,0)
 . S:$P(ZNODE,"^",3)'="" PSOINCNV=$P(ZNODE,"^",3)
"RTN","PSOSPMSP",232,0)
 . S:$P(ZNODE,"^",4)'="" PSOREPFQ=$P(ZNODE,"^",4)
"RTN","PSOSPMSP",233,0)
 . S:$P(ZNODE,"^",5)'="" PSOTXRTS=$P(ZNODE,"^",5)
"RTN","PSOSPMSP",234,0)
 . S:$P(ZNODE,"^",6)'="" PSOTXMOD=$P(ZNODE,"^",6)
"RTN","PSOSPMSP",235,0)
 . S:$P(ZNODE,"^",7)'="" PSORENAM=$P(ZNODE,"^",7)
"RTN","PSOSPMSP",236,0)
 . S:$P(FNODE,"^",1)'="" PSOVMSLD=$P(FNODE,"^",1)
"RTN","PSOSPMSP",237,0)
 . S:$P(FNODE,"^",2)'="" PSOPFIX=$P(FNODE,"^",2)
"RTN","PSOSPMSP",238,0)
 . S:$P(FNODE,"^",3)'="" PSOEXT=$P(FNODE,"^",3)
"RTN","PSOSPMSP",239,0)
 . S:$P(FNODE,"^",4)'="" PSOFTPIP=$P(FNODE,"^",4)
"RTN","PSOSPMSP",240,0)
 . S:$P(FNODE,"^",5)'="" PSOFTPUS=$P(FNODE,"^",5)
"RTN","PSOSPMSP",241,0)
 . S:$P(FNODE,"^",6)'="" PSOFTPPN=$P(FNODE,"^",6)
"RTN","PSOSPMSP",242,0)
 . S:$P(FNODE,"^",7)'="" PSOFTPDR=$P(FNODE,"^",7)
"RTN","PSOSPMSP",243,0)
 . S:$P(F1NODE,"^",1)'="" PSOUNXLD=$P(F1NODE,"^",1)
"RTN","PSOSPMSP",244,0)
 Q
"RTN","PSOSPMSP",245,0)
 ;
"RTN","PSOSPMSP",246,0)
CHANGED(STATE,FIELD,VALUE) ; - If field was change Automatically Invokes SAVE
"RTN","PSOSPMSP",247,0)
 ;Input : STATE - Pointer to STATE file (#5)
"RTN","PSOSPMSP",248,0)
 ;        FIELD - Field ID (Internal)
"RTN","PSOSPMSP",249,0)
 ;        VALUE - Field Value
"RTN","PSOSPMSP",250,0)
 N CHANGED,ZNODE,FNODE,F1NODE,LINE
"RTN","PSOSPMSP",251,0)
 ;
"RTN","PSOSPMSP",252,0)
 S CHANGED=0
"RTN","PSOSPMSP",253,0)
 ; - Saved Division's parameters
"RTN","PSOSPMSP",254,0)
 S ZNODE=$G(^PS(58.41,STATE,0)),FNODE=$G(^PS(58.41,STATE,"FILE")),F1NODE=$G(^PS(58.41,STATE,"FILE1"))
"RTN","PSOSPMSP",255,0)
 ;
"RTN","PSOSPMSP",256,0)
 I FIELD="ASAPVER",VALUE'=$P(ZNODE,"^",2) S CHANGED=1
"RTN","PSOSPMSP",257,0)
 I FIELD="TRXRTS",VALUE'=$P(ZNODE,"^",5) S CHANGED=1
"RTN","PSOSPMSP",258,0)
 I FIELD="INCNVET",VALUE'=$P(ZNODE,"^",3) S CHANGED=1
"RTN","PSOSPMSP",259,0)
 I FIELD="VMSLDIR",VALUE'=$P(FNODE,"^",1) S CHANGED=1
"RTN","PSOSPMSP",260,0)
 I FIELD="UNXLDIR",VALUE'=$P(F1NODE,"^",1) S CHANGED=1
"RTN","PSOSPMSP",261,0)
 I FIELD="WINLDIR",VALUE'=$P(F1NODE,"^",2) S CHANGED=1
"RTN","PSOSPMSP",262,0)
 I FIELD="REPFRQ",VALUE'=$P(ZNODE,"^",4) S CHANGED=1
"RTN","PSOSPMSP",263,0)
 I FIELD="FILEPFIX",VALUE'=$P(FNODE,"^",2) S CHANGED=1
"RTN","PSOSPMSP",264,0)
 I FIELD="FILEEXT",VALUE'=$P(FNODE,"^",3) S CHANGED=1
"RTN","PSOSPMSP",265,0)
 I FIELD="RENAME",VALUE'=$P(ZNODE,"^",7) S CHANGED=1
"RTN","PSOSPMSP",266,0)
 I FIELD="FTPIP",VALUE'=$P(FNODE,"^",4) S CHANGED=1
"RTN","PSOSPMSP",267,0)
 I FIELD="FTPUSER",VALUE'=$P(FNODE,"^",5) S CHANGED=1
"RTN","PSOSPMSP",268,0)
 I FIELD="FTPPORT",VALUE'=$P(FNODE,"^",6) S CHANGED=1
"RTN","PSOSPMSP",269,0)
 I FIELD="FTPDIR",VALUE'=$P(FNODE,"^",7) S CHANGED=1
"RTN","PSOSPMSP",270,0)
 I FIELD="TRXMODE",VALUE'=$P(ZNODE,"^",6) S CHANGED=1
"RTN","PSOSPMSP",271,0)
 ;
"RTN","PSOSPMSP",272,0)
 I CHANGED D SAVE(STATE,FIELD,$G(VALUE))
"RTN","PSOSPMSP",273,0)
 Q
"RTN","PSOSPMSP",274,0)
 ;
"RTN","PSOSPMSP",275,0)
SAVE(STATE,FIELD,VALUE) ; - Saves preferences by Sate
"RTN","PSOSPMSP",276,0)
 ;Input : STATE - Pointer to STATE file (#5)
"RTN","PSOSPMSP",277,0)
 ;        FIELD - Field ID (Internal)
"RTN","PSOSPMSP",278,0)
 ;        VALUE - Field Value
"RTN","PSOSPMSP",279,0)
 N DIE,DR,DA,LINE
"RTN","PSOSPMSP",280,0)
 ;
"RTN","PSOSPMSP",281,0)
 I '$D(^PS(58.41,STATE)) D
"RTN","PSOSPMSP",282,0)
 . N %,DIC,DR,DA,X,DINUM,DLAYGO,DD,DO
"RTN","PSOSPMSP",283,0)
 . S DIC="^PS(58.41,",(DINUM,X)=STATE,DIC(0)=""
"RTN","PSOSPMSP",284,0)
 . K DD,DO D FILE^DICN K DD,DO
"RTN","PSOSPMSP",285,0)
 ;
"RTN","PSOSPMSP",286,0)
 I FIELD="ASAPVER" S DR="1///"_PSOASVER
"RTN","PSOSPMSP",287,0)
 I FIELD="TRXRTS" S DR="12////"_PSOTXRTS
"RTN","PSOSPMSP",288,0)
 I FIELD="INCNVET" S DR="2///"_PSOINCNV
"RTN","PSOSPMSP",289,0)
 I FIELD="VMSLDIR" S DR="4////"_$S(PSOVMSLD="":"@",1:PSOVMSLD)
"RTN","PSOSPMSP",290,0)
 I FIELD="UNXLDIR" S DR="15////"_$S(PSOUNXLD="":"@",1:PSOUNXLD)
"RTN","PSOSPMSP",291,0)
 I FIELD="REPFRQ" S DR="3///"_PSOREPFQ
"RTN","PSOSPMSP",292,0)
 I FIELD="FILEPFIX" S DR="5////"_$S(PSOPFIX="":"@",1:PSOPFIX)
"RTN","PSOSPMSP",293,0)
 I FIELD="FILEEXT" S DR="6///"_PSOEXT
"RTN","PSOSPMSP",294,0)
 I FIELD="RENAME" S DR="17///"_PSORENAM
"RTN","PSOSPMSP",295,0)
 I FIELD="FTPIP" S DR="7///"_PSOFTPIP
"RTN","PSOSPMSP",296,0)
 I FIELD="FTPUSER" S DR="8///"_PSOFTPUS
"RTN","PSOSPMSP",297,0)
 I FIELD="FTPPORT" S DR="9////"_$S(PSOFTPPN="":"@",1:PSOFTPPN)
"RTN","PSOSPMSP",298,0)
 I FIELD="FTPDIR" S DR="10////"_$S(PSOFTPDR="":"@",1:PSOFTPDR)
"RTN","PSOSPMSP",299,0)
 I FIELD="TRXMODE" S DR="13////"_PSOTXMOD
"RTN","PSOSPMSP",300,0)
 S DIE="^PS(58.41,",DA=STATE D ^DIE
"RTN","PSOSPMSP",301,0)
 Q
"RTN","PSOSPMU0")
0^8^B23897100^n/a
"RTN","PSOSPMU0",1,0)
PSOSPMU0 ;BIRM/MFR - State Prescription Monitoring Program - Load ASAP Definition Utility ;10/07/12
"RTN","PSOSPMU0",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**451**;DEC 1997;Build 114
"RTN","PSOSPMU0",3,0)
 ;
"RTN","PSOSPMU0",4,0)
LOADASAP(VERSION,DEFTYPE,ASARRAY) ; Loads the ASAP definition array for the specific Version
"RTN","PSOSPMU0",5,0)
 ; Input: (r) VERSION - ASAP Version (3.0, 4.0, 4.1, 4.2)
"RTN","PSOSPMU0",6,0)
 ;        (r) DEFTYPE - ASAP Definition Type (S: Standard Only; C: Customized Only, B: Both) 
"RTN","PSOSPMU0",7,0)
 ;Output: ASARRAY - Array containing the ASAP Hierarchical Segment Structure/ASAP Elements Definition
"RTN","PSOSPMU0",8,0)
 ; 
"RTN","PSOSPMU0",9,0)
 N ASAPDEF,FILEIEN,VER,VERIEN,SEGIEN,SEGNAM,ELMIEN,ELM0,ELMPOS,STAIEN,I
"RTN","PSOSPMU0",10,0)
 ;
"RTN","PSOSPMU0",11,0)
 I $G(VERSION)="" Q
"RTN","PSOSPMU0",12,0)
 K ASARRAY,SEGINFO
"RTN","PSOSPMU0",13,0)
 D SEGTREE(VERSION,DEFTYPE,"ASARRAY")
"RTN","PSOSPMU0",14,0)
 F ASAPDEF="STANDARD ASAP DEFINITION","CUSTOM ASAP DEFINITION" D
"RTN","PSOSPMU0",15,0)
 . I ASAPDEF="STANDARD ASAP DEFINITION",DEFTYPE="C" Q
"RTN","PSOSPMU0",16,0)
 . I ASAPDEF="CUSTOM ASAP DEFINITION",DEFTYPE="S" Q
"RTN","PSOSPMU0",17,0)
 . S FILEIEN=$O(^PS(58.4,"B",ASAPDEF,0))
"RTN","PSOSPMU0",18,0)
 . F VER="ALL",VERSION D
"RTN","PSOSPMU0",19,0)
 . . ; - Don't want to load default (ALL) definitions for entirely cloned ASAP versions
"RTN","PSOSPMU0",20,0)
 . . I ASAPDEF="STANDARD ASAP DEFINITION",'$D(^PS(58.4,FILEIEN,"VER","B",VERSION)) Q
"RTN","PSOSPMU0",21,0)
 . . S VERIEN=$O(^PS(58.4,FILEIEN,"VER","B",VER,0)) I 'VERIEN Q
"RTN","PSOSPMU0",22,0)
 . . I VER'="ALL" S ASARRAY=$G(^PS(58.4,FILEIEN,"VER",VERIEN,0))
"RTN","PSOSPMU0",23,0)
 . . S SEGIEN=0
"RTN","PSOSPMU0",24,0)
 . . F  S SEGIEN=$O(^PS(58.4,FILEIEN,"VER",VERIEN,"SEG",SEGIEN)) Q:'SEGIEN  D
"RTN","PSOSPMU0",25,0)
 . . . S SEGNAM=$P($G(^PS(58.4,FILEIEN,"VER",VERIEN,"SEG",SEGIEN,0)),"^")
"RTN","PSOSPMU0",26,0)
 . . . S ELMIEN=0
"RTN","PSOSPMU0",27,0)
 . . . F  S ELMIEN=$O(^PS(58.4,FILEIEN,"VER",VERIEN,"SEG",SEGIEN,"DAT",ELMIEN)) Q:'ELMIEN  D
"RTN","PSOSPMU0",28,0)
 . . . . S ELM0=$G(^PS(58.4,FILEIEN,"VER",VERIEN,"SEG",SEGIEN,"DAT",ELMIEN,0))
"RTN","PSOSPMU0",29,0)
 . . . . S ELMPOS=$P(ELM0,"^",5)
"RTN","PSOSPMU0",30,0)
 . . . . ; - Retrieving Data Element Definition
"RTN","PSOSPMU0",31,0)
 . . . . S ASARRAY(SEGNAM,ELMPOS)=ELM0
"RTN","PSOSPMU0",32,0)
 . . . . ; - Data Element Description
"RTN","PSOSPMU0",33,0)
 . . . . K ASARRAY(SEGNAM,ELMPOS,"DES")
"RTN","PSOSPMU0",34,0)
 . . . . F I=1:1 Q:'$D(^PS(58.4,FILEIEN,"VER",VERIEN,"SEG",SEGIEN,"DAT",ELMIEN,"DES",I))  D
"RTN","PSOSPMU0",35,0)
 . . . . . S ASARRAY(SEGNAM,ELMPOS,"DES",I)=$G(^PS(58.4,FILEIEN,"VER",VERIEN,"SEG",SEGIEN,"DAT",ELMIEN,"DES",I,0))
"RTN","PSOSPMU0",36,0)
 . . . . ; - Data Element Value - Mumps SET Command Argument
"RTN","PSOSPMU0",37,0)
 . . . . K ASARRAY(SEGNAM,ELMPOS,"VAL")
"RTN","PSOSPMU0",38,0)
 . . . . F I=1:1 Q:'$D(^PS(58.4,FILEIEN,"VER",VERIEN,"SEG",SEGIEN,"DAT",ELMIEN,"VAL",I))  D
"RTN","PSOSPMU0",39,0)
 . . . . . S ASARRAY(SEGNAM,ELMPOS,"VAL",I)=$G(^PS(58.4,FILEIEN,"VER",VERIEN,"SEG",SEGIEN,"DAT",ELMIEN,"VAL",I,0))
"RTN","PSOSPMU0",40,0)
 . . . . ; - Customized ASAP Data Element Flagging
"RTN","PSOSPMU0",41,0)
 . . . . I ASAPDEF="CUSTOM ASAP DEFINITION" D
"RTN","PSOSPMU0",42,0)
 . . . . . S ASARRAY(SEGNAM,ELMPOS,"CUS")=1
"RTN","PSOSPMU0",43,0)
 Q
"RTN","PSOSPMU0",44,0)
 ;
"RTN","PSOSPMU0",45,0)
SEGTREE(VERSION,DEFTYPE,ARRAY) ; Retrieve  Hierarchical (Tree) Segement Positioning Information for each ASAP Version
"RTN","PSOSPMU0",46,0)
 ; Input: (r) VERSION - ASAP Version (e.g., "3.0", "4.2", etc.)
"RTN","PSOSPMU0",47,0)
 ;        (r) DEFTYPE - ASAP Definition Type (S: Standard Only; C: Customized Only, B: Both) 
"RTN","PSOSPMU0",48,0)
 ;Output: ARRAY - Array containing Segment Hierarchically formatted (tree)
"RTN","PSOSPMU0",49,0)
 ;         Example: ARRAY(1)="TH"
"RTN","PSOSPMU0",50,0)
 ;                  ARRAY(1,1)="IS"
"RTN","PSOSPMU0",51,0)
 ;                  ARRAY(1,1,1)="PHA"
"RTN","PSOSPMU0",52,0)
 ;                  ARRAY(1,1,1,1)="PAT"
"RTN","PSOSPMU0",53,0)
 ;                  ARRAY(1,1,1,1,2)="DSP"
"RTN","PSOSPMU0",54,0)
 ;                  ...
"RTN","PSOSPMU0",55,0)
 ;                  ARRAY(1,1,2)="TP"
"RTN","PSOSPMU0",56,0)
 ;                  ARRAY(2)="TT"
"RTN","PSOSPMU0",57,0)
 N ASAPDEF,FILEIEN,VER,VERIEN,SEGIEN,SEG0,PARSEG,SEGPOS,SEGINFO
"RTN","PSOSPMU0",58,0)
 ; Retrieving information about each Segment
"RTN","PSOSPMU0",59,0)
 K @ARRAY
"RTN","PSOSPMU0",60,0)
 F ASAPDEF="STANDARD ASAP DEFINITION","CUSTOM ASAP DEFINITION" D
"RTN","PSOSPMU0",61,0)
 . I ASAPDEF="STANDARD ASAP DEFINITION",DEFTYPE="C" Q
"RTN","PSOSPMU0",62,0)
 . I ASAPDEF="CUSTOM ASAP DEFINITION",DEFTYPE="S" Q
"RTN","PSOSPMU0",63,0)
 . S FILEIEN=$O(^PS(58.4,"B",ASAPDEF,0))
"RTN","PSOSPMU0",64,0)
 . F VER="ALL",VERSION D
"RTN","PSOSPMU0",65,0)
 . . ; - Prevent loading default (ALL) definitions for entirely cloned ASAP versions
"RTN","PSOSPMU0",66,0)
 . . I ASAPDEF="STANDARD ASAP DEFINITION",'$D(^PS(58.4,FILEIEN,"VER","B",VERSION)) Q
"RTN","PSOSPMU0",67,0)
 . . S VERIEN=$O(^PS(58.4,FILEIEN,"VER","B",VER,0)) I 'VERIEN Q
"RTN","PSOSPMU0",68,0)
 . . S SEGIEN=0
"RTN","PSOSPMU0",69,0)
 . . F  S SEGIEN=$O(^PS(58.4,FILEIEN,"VER",VERIEN,"SEG",SEGIEN)) Q:'SEGIEN  D
"RTN","PSOSPMU0",70,0)
 . . . S SEG0=$G(^PS(58.4,FILEIEN,"VER",VERIEN,"SEG",SEGIEN,0))
"RTN","PSOSPMU0",71,0)
 . . . S PARSEG=$P(SEG0,"^",3)
"RTN","PSOSPMU0",72,0)
 . . . S SEGPOS=+$P(SEG0,"^",5)
"RTN","PSOSPMU0",73,0)
 . . . S SEGINFO($P(SEG0,"^"))=PARSEG_"^"_SEGPOS
"RTN","PSOSPMU0",74,0)
 . . . S @ARRAY@($P(SEG0,"^"))=SEG0
"RTN","PSOSPMU0",75,0)
 ; Building the Segment Tree
"RTN","PSOSPMU0",76,0)
 D BLDTREE("",.SEGINFO,ARRAY)
"RTN","PSOSPMU0",77,0)
 Q
"RTN","PSOSPMU0",78,0)
 ;
"RTN","PSOSPMU0",79,0)
BLDTREE(SEG,SEGINFO,ARRAY) ; Build the ASAP Segment Tree (Recursivity Used)
"RTN","PSOSPMU0",80,0)
 ; Input: SEG - Initial Segment (Usually "" to build from the top of the tree)
"RTN","PSOSPMU0",81,0)
 ;        SEGINFO - Segment Information Array (Parent & Position)
"RTN","PSOSPMU0",82,0)
 ;Output: ARRAY - ASAP Segment Tree (See above for format)
"RTN","PSOSPMU0",83,0)
 N SEGNAM
"RTN","PSOSPMU0",84,0)
 S SEGNAM=""
"RTN","PSOSPMU0",85,0)
 F  S SEGNAM=$O(SEGINFO(SEGNAM)) Q:SEGNAM=""  D
"RTN","PSOSPMU0",86,0)
 . I $P(SEGINFO(SEGNAM),"^")'=SEG Q
"RTN","PSOSPMU0",87,0)
 . S @ARRAY@($P(SEGINFO(SEGNAM),"^",2))=SEGNAM
"RTN","PSOSPMU0",88,0)
 . D BLDTREE(SEGNAM,.SEGINFO,$Q(@ARRAY))
"RTN","PSOSPMU0",89,0)
 Q
"RTN","PSOSPMU0",90,0)
 ;
"RTN","PSOSPMU0",91,0)
VERLIST(DEFTYPE,ARRAY) ; Return a list of ASAP Versions
"RTN","PSOSPMU0",92,0)
 ; Input: (r) DEFTYPE - ASAP Definition Type (D: Default Only; C: Customized Only, F: Fully Customized Only,
"RTN","PSOSPMU0",93,0)
 ;                      A: All. A combination is also allowed, e.g., "CF") 
"RTN","PSOSPMU0",94,0)
 ;Output:     ARRAY   - ASAP Version List (ARRAY("3.0")="S", ARRAY("4.0")="S", etc...)
"RTN","PSOSPMU0",95,0)
 N STDIEN,CUSIEN,VERSION
"RTN","PSOSPMU0",96,0)
 K ARRAY
"RTN","PSOSPMU0",97,0)
 S STDIEN=$O(^PS(58.4,"B","STANDARD ASAP DEFINITION",0))
"RTN","PSOSPMU0",98,0)
 S CUSIEN=$O(^PS(58.4,"B","CUSTOM ASAP DEFINITION",0))
"RTN","PSOSPMU0",99,0)
 I DEFTYPE["A"!(DEFTYPE["S") D
"RTN","PSOSPMU0",100,0)
 . S VERSION="" F  S VERSION=$O(^PS(58.4,STDIEN,"VER","B",VERSION))  Q:VERSION=""  D
"RTN","PSOSPMU0",101,0)
 . . I VERSION="ALL" Q
"RTN","PSOSPMU0",102,0)
 . . S ARRAY(VERSION_" ")="S"
"RTN","PSOSPMU0",103,0)
 I DEFTYPE["A"!(DEFTYPE["C")!(DEFTYPE["F") D
"RTN","PSOSPMU0",104,0)
 . S VERSION="" F  S VERSION=$O(^PS(58.4,CUSIEN,"VER","B",VERSION))  Q:VERSION=""  D
"RTN","PSOSPMU0",105,0)
 . . I DEFTYPE["A"!(DEFTYPE["C"),$D(^PS(58.4,STDIEN,"VER","B",VERSION)) S ARRAY(VERSION_" ")="C"
"RTN","PSOSPMU0",106,0)
 . . I DEFTYPE["A"!(DEFTYPE["F"),'$D(^PS(58.4,STDIEN,"VER","B",VERSION)) S ARRAY(VERSION_" ")="F"
"RTN","PSOSPMU0",107,0)
 Q
"RTN","PSOSPMU0",108,0)
 ;
"RTN","PSOSPMU0",109,0)
VERDATA(VERSION,DEFTYPE) ; Returns the ASAP Version fields
"RTN","PSOSPMU0",110,0)
 ; Input: (r) VERSION - ASAP Version (e.g., "3.0", "4.2", etc.)
"RTN","PSOSPMU0",111,0)
 ;        (r) DEFTYPE - ASAP Definition Type (S: Standard Only; C: Customized Only, B: Both) 
"RTN","PSOSPMU0",112,0)
 ;Output: VERDATA - Sub-file #58.4001 0 node: "Version^Data Element Delimiter Char^Segment Terminator Char^..."
"RTN","PSOSPMU0",113,0)
 N VERDATA,ASAPDEF,ASDEFIEN,VERIEN
"RTN","PSOSPMU0",114,0)
 S VERDATA=""
"RTN","PSOSPMU0",115,0)
 F ASAPDEF="STANDARD ASAP DEFINITION","CUSTOM ASAP DEFINITION" D
"RTN","PSOSPMU0",116,0)
 . I ASAPDEF="STANDARD ASAP DEFINITION",DEFTYPE="C" Q
"RTN","PSOSPMU0",117,0)
 . I ASAPDEF="CUSTOM ASAP DEFINITION",DEFTYPE="S" Q
"RTN","PSOSPMU0",118,0)
 . S ASDEFIEN=$O(^PS(58.4,"B",ASAPDEF,0)) I 'ASDEFIEN Q
"RTN","PSOSPMU0",119,0)
 . S VERIEN=$O(^PS(58.4,ASDEFIEN,"VER","B",VERSION,0)) I 'VERIEN Q
"RTN","PSOSPMU0",120,0)
 . S VERDATA=$G(^PS(58.4,ASDEFIEN,"VER",VERIEN,0))
"RTN","PSOSPMU0",121,0)
 Q VERDATA
"RTN","PSOSPMU1")
0^1^B128483290^B105028322
"RTN","PSOSPMU1",1,0)
PSOSPMU1 ;BIRM/MFR - State Prescription Monitoring Program Utilities ;10/07/12
"RTN","PSOSPMU1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408,437,451**;DEC 1997;Build 114
"RTN","PSOSPMU1",3,0)
 ;
"RTN","PSOSPMU1",4,0)
GATHER(STATE,BEGDTTM,ENDDTTM,RECTYPE,RTSONLY) ; Gathers all CS prescriptions for Data Range
"RTN","PSOSPMU1",5,0)
 ;Input: STATE   - Pointer to the STATE file (#5)
"RTN","PSOSPMU1",6,0)
 ;       BEGDTTM - Date Range Begin Date/Time
"RTN","PSOSPMU1",7,0)
 ;       ENDDTTM - Date Range End Date/Time
"RTN","PSOSPMU1",8,0)
 ;       RECTYPE - Record Type for Released Rx's only (N: New / R: Revise)
"RTN","PSOSPMU1",9,0)
 ;       RTSONLY - Return To Stock Fills Only (1: YES / 0: NO)
"RTN","PSOSPMU1",10,0)
 ;Output: $$GATHER - Number of Rx's found
"RTN","PSOSPMU1",11,0)
 ;        ^TMP("PSOSPMRX",$J,STATE,RX,FILL)=Record Type (N/R/V) - List of Rx's gathered
"RTN","PSOSPMU1",12,0)
 N GATHER,XREF,RXRLDT,RXIEN,RXFILL,FILL,RTSDT,ENDRTSDT
"RTN","PSOSPMU1",13,0)
 S GATHER=0 K ^TMP("PSOSPMRX",$J)
"RTN","PSOSPMU1",14,0)
 ; - Gathering Released Original Fills/Refills/Partials
"RTN","PSOSPMU1",15,0)
 I '$G(RTSONLY) D
"RTN","PSOSPMU1",16,0)
 . F XREF="AL","AM" D
"RTN","PSOSPMU1",17,0)
 . . S RXRLDT=BEGDTTM,ENDRLDT=ENDDTTM S:'$P(ENDRLDT,".",2) ENDRLDT=ENDRLDT+.25
"RTN","PSOSPMU1",18,0)
 . . F  S RXRLDT=$O(^PSRX(XREF,RXRLDT)) Q:'RXRLDT!(RXRLDT>ENDRLDT)  D
"RTN","PSOSPMU1",19,0)
 . . . S RXIEN=0 F  S RXIEN=$O(^PSRX(XREF,RXRLDT,RXIEN)) Q:'RXIEN  D
"RTN","PSOSPMU1",20,0)
 . . . . S RXFILL="" F  S RXFILL=$O(^PSRX(XREF,RXRLDT,RXIEN,RXFILL)) Q:RXFILL=""  D
"RTN","PSOSPMU1",21,0)
 . . . . . S FILL=$S(XREF="AL":RXFILL,1:"P"_RXFILL)
"RTN","PSOSPMU1",22,0)
 . . . . . I '$$RXRLDT^PSOBPSUT(RXIEN,FILL) Q
"RTN","PSOSPMU1",23,0)
 . . . . . I $$SCREEN^PSOSPMUT(RXIEN,FILL) Q
"RTN","PSOSPMU1",24,0)
 . . . . . I $$RXSTATE^PSOBPSUT(RXIEN,0)'=STATE Q
"RTN","PSOSPMU1",25,0)
 . . . . . S ^TMP("PSOSPMRX",$J,STATE,RXIEN,FILL)=RECTYPE
"RTN","PSOSPMU1",26,0)
 . . . . . S GATHER=GATHER+1
"RTN","PSOSPMU1",27,0)
 ;
"RTN","PSOSPMU1",28,0)
 ; ASAP 1995 does not support transmissions of Return To Stock fills in the same file
"RTN","PSOSPMU1",29,0)
 I $$GET1^DIQ(58.41,STATE,1,"I")="1995",'$G(RTSONLY) Q GATHER
"RTN","PSOSPMU1",30,0)
 ;
"RTN","PSOSPMU1",31,0)
 ; - Gathering Fills Returned To Stock
"RTN","PSOSPMU1",32,0)
 S RTSDT=BEGDTTM-.0000001,ENDRTSDT=ENDDTTM
"RTN","PSOSPMU1",33,0)
 S:'$P(ENDRTSDT,".",2) ENDRTSDT=ENDRTSDT+.25
"RTN","PSOSPMU1",34,0)
 F  S RTSDT=$O(^PSRX("ARTS",RTSDT)) Q:'RTSDT!(RTSDT>ENDRTSDT)  D
"RTN","PSOSPMU1",35,0)
 . S RXIEN=0 F  S RXIEN=$O(^PSRX("ARTS",RTSDT,RXIEN)) Q:'RXIEN  D
"RTN","PSOSPMU1",36,0)
 . . S RTSIEN=0 F  S RTSIEN=$O(^PSRX("ARTS",RTSDT,RXIEN,RTSIEN)) Q:'RTSIEN  D
"RTN","PSOSPMU1",37,0)
 . . . S FILL=$$GET1^DIQ(52.07,RTSIEN_","_RXIEN,1,"I")
"RTN","PSOSPMU1",38,0)
 . . . ; Rx Fill was never sent to SPMP so no need to VOID it
"RTN","PSOSPMU1",39,0)
 . . . I '$D(^PS(58.42,"ARX",RXIEN,FILL)) Q
"RTN","PSOSPMU1",40,0)
 . . . I $$RXRLDT^PSOBPSUT(RXIEN,FILL) Q
"RTN","PSOSPMU1",41,0)
 . . . I $$SCREEN^PSOSPMUT(RXIEN,FILL) Q
"RTN","PSOSPMU1",42,0)
 . . . I $D(^TMP("PSOSPMRX",$J,STATE,RXIEN,FILL)) Q
"RTN","PSOSPMU1",43,0)
 . . . I $$RXSTATE^PSOBPSUT(RXIEN,0)'=STATE Q
"RTN","PSOSPMU1",44,0)
 . . . S ^TMP("PSOSPMRX",$J,STATE,RXIEN,FILL)="V"
"RTN","PSOSPMU1",45,0)
 . . . S GATHER=GATHER+1
"RTN","PSOSPMU1",46,0)
 Q GATHER
"RTN","PSOSPMU1",47,0)
 ;
"RTN","PSOSPMU1",48,0)
BLDBAT(EXPTYPE,BEGRLDT,ENDRLDT) ; Given a list of Rx's builds a new Export Batch
"RTN","PSOSPMU1",49,0)
 ; Input: (r) EXPTYPE - Export Type ((MA)naul/(SC)heduled/(RX) Single Rx)/(VD) Void Only
"RTN","PSOSPMU1",50,0)
 ;        (o) BEGRLDT  - Begin Release Date (FM Format) (Required for M and S batches)
"RTN","PSOSPMU1",51,0)
 ;        (o) ENDRLDT - End Release Date (FM Format) (Required for M and S batches)
"RTN","PSOSPMU1",52,0)
 ;        (r) List of Rx's: ^TMP("PSOSPMRX",$J,STATE,RXIEN,RXFILL)=Record Type ((N)ew/(R)evise/(V)oid)
"RTN","PSOSPMU1",53,0)
 ;                          Note: This ^TMP global will be cleaned up at the end
"RTN","PSOSPMU1",54,0)
 ;Output: BATCHIEN - New Batch IEN (Pointer to #58.42) OR "01^Error Message"
"RTN","PSOSPMU1",55,0)
 N STATE,SPOK,RX,FILL,BATCHIEN,DRUGIEN,%,DIC,DR,DA,X,Y,XX,DINUM,DLAYGO,DD,DO,NDC,RECTYPE
"RTN","PSOSPMU1",56,0)
 I '$O(^TMP("PSOSPMRX",$J,0)) Q "-1^No prescription data"
"RTN","PSOSPMU1",57,0)
 ;
"RTN","PSOSPMU1",58,0)
 S (STATE,RX)=0,FILL=""
"RTN","PSOSPMU1",59,0)
 F  S STATE=$O(^TMP("PSOSPMRX",$J,STATE)) Q:'STATE  D  I $P(BATCHIEN,"^")=-1 Q
"RTN","PSOSPMU1",60,0)
 . S XX=$$SPOK^PSOSPMUT(STATE) I $P(XX,"^",1)=-1 S BATCHIEN=XX Q
"RTN","PSOSPMU1",61,0)
 . F  L +^PS(58.42,0):$S(+$G(^DD("DILOCKTM"))>0:+^DD("DILOCKTM"),1:3) Q:$T  H 3
"RTN","PSOSPMU1",62,0)
 . S (DINUM,BATCHIEN)=$O(^PS(58.42,999999999999),-1)+1
"RTN","PSOSPMU1",63,0)
 . I EXPTYPE'="VD" W !!,"Creating Batch #",DINUM," for ",$$GET1^DIQ(58.41,STATE,.01),"..."
"RTN","PSOSPMU1",64,0)
 . S DIC="^PS(58.42,",X=DINUM,DIC(0)="",DIC("DR")="1////"_STATE_";2///"_EXPTYPE_";8///"_$$NOW^XLFDT()
"RTN","PSOSPMU1",65,0)
 . I $G(BEGRLDT) D
"RTN","PSOSPMU1",66,0)
 . . S DIC("DR")=DIC("DR")_";4///"_BEGRLDT_";5///"_$G(ENDRLDT)
"RTN","PSOSPMU1",67,0)
 . S DLAYGO=58.42 K DD,DO D FILE^DICN K DD,DO
"RTN","PSOSPMU1",68,0)
 . L -^PS(58.42,0)
"RTN","PSOSPMU1",69,0)
 . I Y=-1 S BATCHIEN="-1^Export Batch could not be created" Q
"RTN","PSOSPMU1",70,0)
 . F  S RX=$O(^TMP("PSOSPMRX",$J,STATE,RX)) Q:'RX  D
"RTN","PSOSPMU1",71,0)
 . . S DRUGIEN=$$GET1^DIQ(52,RX,6,"I")
"RTN","PSOSPMU1",72,0)
 . . F  S FILL=$O(^TMP("PSOSPMRX",$J,STATE,RX,FILL)) Q:FILL=""  D
"RTN","PSOSPMU1",73,0)
 . . . K DIC,DINUM,DA S DIC="^PS(58.42,"_BATCHIEN_",""RX"",",DIC(0)="",DA(1)=BATCHIEN
"RTN","PSOSPMU1",74,0)
 . . . S RECTYPE=^TMP("PSOSPMRX",$J,STATE,RX,FILL)
"RTN","PSOSPMU1",75,0)
 . . . I RECTYPE="V" D
"RTN","PSOSPMU1",76,0)
 . . . . S NDC=$$GETNDC(RX,FILL)
"RTN","PSOSPMU1",77,0)
 . . . E  D
"RTN","PSOSPMU1",78,0)
 . . . . I $L($$NUMERIC^PSOASAP0($$GET1^DIQ(50,DRUGIEN,31)))=11 D
"RTN","PSOSPMU1",79,0)
 . . . . . S NDC=$$GET1^DIQ(50,DRUGIEN,31)
"RTN","PSOSPMU1",80,0)
 . . . . E  S NDC=$$GETNDC^PSONDCUT(RX,+FILL)
"RTN","PSOSPMU1",81,0)
 . . . S X=RX,DIC("DR")="1///"_FILL_";2///"_RECTYPE_";3///"_NDC
"RTN","PSOSPMU1",82,0)
 . . . S DLAYGO=58.42001 K DD,DO D FILE^DICN K DD,DO
"RTN","PSOSPMU1",83,0)
 . I EXPTYPE'="VD" W "Done."
"RTN","PSOSPMU1",84,0)
 K ^TMP("PSOSPMRX",$J)
"RTN","PSOSPMU1",85,0)
 Q BATCHIEN
"RTN","PSOSPMU1",86,0)
 ;
"RTN","PSOSPMU1",87,0)
LOADRTS(RXIEN,FILL,ARRAY) ; Load ARRAY with Return To Stock Information
"RTN","PSOSPMU1",88,0)
 ;Input: RXIEN - Pointer to PRESCRIPTION file (#52)
"RTN","PSOSPMU1",89,0)
 ;       FILL  - Fill # - "0":Original / "1"..:Refill #1... / "P1"..:Partial 1...
"RTN","PSOSPMU1",90,0)
 ;Output:ARRAY - Return Array (most recent Return To Stock data for the fill)
"RTN","PSOSPMU1",91,0)
 N RTSIEN,NODE0,NODE1,NDC
"RTN","PSOSPMU1",92,0)
 K ARRAY S RTSIEN=0
"RTN","PSOSPMU1",93,0)
 F  S RTSIEN=$O(^PSRX(RXIEN,"RTS",RTSIEN)) Q:'RTSIEN  D
"RTN","PSOSPMU1",94,0)
 . S NODE0=$G(^PSRX(RXIEN,"RTS",RTSIEN,0))
"RTN","PSOSPMU1",95,0)
 . I $P(NODE0,"^",2)'=FILL Q
"RTN","PSOSPMU1",96,0)
 . S NODE1=$G(^PSRX(RXIEN,"RTS",RTSIEN,1))
"RTN","PSOSPMU1",97,0)
 . S NDC=$$GETNDC(RXIEN,FILL) I NDC="" S NDC=$P(NODE0,"^",15)
"RTN","PSOSPMU1",98,0)
 . S ARRAY("DIVISION")=$P(NODE0,"^",13) ; Division
"RTN","PSOSPMU1",99,0)
 . S ARRAY("RELDTTM")=$P(NODE1,"^",2)   ; Release Date/Time
"RTN","PSOSPMU1",100,0)
 . S ARRAY("NDC")=NDC                   ; NDC
"RTN","PSOSPMU1",101,0)
 . S ARRAY("QTY")=$P(NODE0,"^",4)       ; Quantity
"RTN","PSOSPMU1",102,0)
 . S ARRAY("DAYSUP")=$P(NODE0,"^",5)    ; Days Supply
"RTN","PSOSPMU1",103,0)
 . S ARRAY("RPHIEN")=$P(NODE0,"^",9)    ; Pharmacist IEN
"RTN","PSOSPMU1",104,0)
 . S ARRAY("PRVIEN")=$P(NODE1,"^",1)    ; Provider IEN
"RTN","PSOSPMU1",105,0)
 Q
"RTN","PSOSPMU1",106,0)
 ;
"RTN","PSOSPMU1",107,0)
GETNDC(RXIEN,FILL) ; Get the SENT NDC for the Return To Stock (VOID) record
"RTN","PSOSPMU1",108,0)
 ;Input: RXIEN - Pointer to PRESCRIPTION file (#52)
"RTN","PSOSPMU1",109,0)
 ;       FILL  - Fill # - "0":Original / "1"..:Refill #1... / "P1"..:Partial 1...
"RTN","PSOSPMU1",110,0)
 ;Output: $$GETNDC - Return To Stock NDC
"RTN","PSOSPMU1",111,0)
 N GETRSNDC,BATCH,RXREC,RXREC0
"RTN","PSOSPMU1",112,0)
 I '$G(RXIEN)!$G(FILL)="" Q ""
"RTN","PSOSPMU1",113,0)
 S GETRSNDC=""
"RTN","PSOSPMU1",114,0)
 S BATCH="" F  S BATCH=$O(^PS(58.42,"ARX",RXIEN,FILL,BATCH),-1) Q:'BATCH  D  I GETRSNDC'="" Q
"RTN","PSOSPMU1",115,0)
 . S RXREC="" F  S RXREC=$O(^PS(58.42,"ARX",RXIEN,FILL,BATCH,RXREC),-1) Q:'RXREC  D  I GETRSNDC'="" Q
"RTN","PSOSPMU1",116,0)
 . . S RXREC0=$G(^PS(58.42,BATCH,"RX",RXREC,0)) I $P(RXREC0,"^",3)="V" Q
"RTN","PSOSPMU1",117,0)
 . . S GETRSNDC=$P(RXREC0,"^",4)
"RTN","PSOSPMU1",118,0)
 Q GETRSNDC
"RTN","PSOSPMU1",119,0)
 ;
"RTN","PSOSPMU1",120,0)
PREPFILE(STATE,DATETIME,RTSONLY,DEBUG) ; Prepare Files (FTP Script and Output Data files)
"RTN","PSOSPMU1",121,0)
 ;Input: STATE - Pointer to STATE file (#5)
"RTN","PSOSPMU1",122,0)
 ;       DATETIME - Date/Time for the file names (format: YYYYMMDDHHMMSS)
"RTN","PSOSPMU1",123,0)
 ;       RTSONLY  - Return To Stock Only Batch? (1: YES)
"RTN","PSOSPMU1",124,0)
 ;       DEBUG    - Debug Mode? (1:YES / 0:NO)
"RTN","PSOSPMU1",125,0)
 N PSOOS,LOCDIR,PREFIX,FILEXT,RENAME,FTPIP,FTPUSR,FTPPORT,FTPDIR,FTPFILE,INPTFILE,EXPFILE,LOGFILE
"RTN","PSOSPMU1",126,0)
 ; - Operating System
"RTN","PSOSPMU1",127,0)
 S PSOOS=$$OS^%ZOSV()
"RTN","PSOSPMU1",128,0)
 ;
"RTN","PSOSPMU1",129,0)
 I +$$SPOK^PSOSPMUT(STATE)=-1 Q $$SPOK^PSOSPMUT(STATE)
"RTN","PSOSPMU1",130,0)
 ;
"RTN","PSOSPMU1",131,0)
 ; - Retrieving the Local Directory for the corresponding OS
"RTN","PSOSPMU1",132,0)
 I PSOOS["VMS" S LOCDIR=$$GET1^DIQ(58.41,STATE,4)
"RTN","PSOSPMU1",133,0)
 I PSOOS["UNIX" S LOCDIR=$$GET1^DIQ(58.41,STATE,15)
"RTN","PSOSPMU1",134,0)
 ;
"RTN","PSOSPMU1",135,0)
 S PREFIX=$$GET1^DIQ(58.41,STATE,5)
"RTN","PSOSPMU1",136,0)
 S FILEXT=$$GET1^DIQ(58.41,STATE,6)
"RTN","PSOSPMU1",137,0)
 S RENAME=$$GET1^DIQ(58.41,STATE,17,"I")
"RTN","PSOSPMU1",138,0)
 S FTPIP=$$GET1^DIQ(58.41,STATE,7)
"RTN","PSOSPMU1",139,0)
 S FTPUSR=$$GET1^DIQ(58.41,STATE,8)
"RTN","PSOSPMU1",140,0)
 S FTPPORT=$$GET1^DIQ(58.41,STATE,9)
"RTN","PSOSPMU1",141,0)
 S FTPDIR=$$GET1^DIQ(58.41,STATE,10)
"RTN","PSOSPMU1",142,0)
 ;
"RTN","PSOSPMU1",143,0)
 S INPTFILE="SPMP_FTP_"_DATETIME_".INP"
"RTN","PSOSPMU1",144,0)
 I PSOOS["VMS" S FTPFILE="SPMP_FTP_"_DATETIME_".COM"
"RTN","PSOSPMU1",145,0)
 S LOGFILE="SPMP_FTP_"_DATETIME_".LOG"
"RTN","PSOSPMU1",146,0)
 S EXPFILE=PREFIX_DATETIME_$S(RENAME:".UP",1:FILEXT)
"RTN","PSOSPMU1",147,0)
 I $G(RTSONLY) S EXPFILE="BACK_"_EXPFILE
"RTN","PSOSPMU1",148,0)
 ;
"RTN","PSOSPMU1",149,0)
 D OPEN^%ZISH("INPTFILE",LOCDIR,INPTFILE,"W")  I POP Q "-1^FTP Script file <"_LOCDIR_INPTFILE_">  could not be created."
"RTN","PSOSPMU1",150,0)
 D USE^%ZISUTL("INPTFILE")
"RTN","PSOSPMU1",151,0)
 W:FTPDIR'="" "cd "_FTPDIR,!
"RTN","PSOSPMU1",152,0)
 W "put "_$S(PSOOS["UNIX":LOCDIR,1:"")_EXPFILE,!
"RTN","PSOSPMU1",153,0)
 W:PSOOS["UNIX" "lcd "_LOCDIR,!
"RTN","PSOSPMU1",154,0)
 W:RENAME "rename "_EXPFILE_" "_$P(EXPFILE,".UP")_FILEXT,!
"RTN","PSOSPMU1",155,0)
 W:PSOOS["VMS" "lrm "_EXPFILE,!
"RTN","PSOSPMU1",156,0)
 ; W:PSOOS["UNIX" "!rm -f "_LOCDIR_EXPFILE,!
"RTN","PSOSPMU1",157,0)
 W "exit",!
"RTN","PSOSPMU1",158,0)
 D CLOSE^%ZISH("INPTFILE")
"RTN","PSOSPMU1",159,0)
 I POP Q "-1^FTP Input file <"_INPTFILE_"> cannot be created."
"RTN","PSOSPMU1",160,0)
 ;
"RTN","PSOSPMU1",161,0)
 ; This sFTP command file is not needed for Linux/Unix
"RTN","PSOSPMU1",162,0)
 I PSOOS["VMS" D  I POP Q "-1^FTP Script file <"_LOCDIR_FTPFILE_"> could not be created."
"RTN","PSOSPMU1",163,0)
 . D OPEN^%ZISH("FTPFILE",LOCDIR,FTPFILE,"W")
"RTN","PSOSPMU1",164,0)
 . D USE^%ZISUTL("FTPFILE")
"RTN","PSOSPMU1",165,0)
 . ; VMS Secure FTP
"RTN","PSOSPMU1",166,0)
 . I PSOOS["VMS" D
"RTN","PSOSPMU1",167,0)
 . . W "$ SET VERIFY=(PROCEDURE,IMAGE)",!
"RTN","PSOSPMU1",168,0)
 . . I LOCDIR'="" W "$ SET DEFAULT "_LOCDIR,!
"RTN","PSOSPMU1",169,0)
 . . W "$ sftp"_$S($G(DEBUG):" -""D3""",1:"")_$S(FTPPORT:" -oPort="_FTPPORT,1:"")_" -oIdentityFile="""_$$XVMSDIR(LOCDIR)_"VMSSSHID."" -""B"" "_INPTFILE_" -oUser="_FTPUSR_" "_FTPIP,!
"RTN","PSOSPMU1",170,0)
 . . W "$ exit",!
"RTN","PSOSPMU1",171,0)
 . D CLOSE^%ZISH("FTPFILE")
"RTN","PSOSPMU1",172,0)
 ;
"RTN","PSOSPMU1",173,0)
 I PSOOS["VMS" D  I POP Q "-1^FTP Script file <"_LOCDIR_"VMSSSHID.> could not be created."
"RTN","PSOSPMU1",174,0)
 . D OPEN^%ZISH("VMSSSHID",LOCDIR,"VMSSSHID.","W")
"RTN","PSOSPMU1",175,0)
 . D USE^%ZISUTL("VMSSSHID")
"RTN","PSOSPMU1",176,0)
 . W "IDKEY "_$$XVMSDIR(LOCDIR)_"VMSSSHKEY"
"RTN","PSOSPMU1",177,0)
 . D CLOSE^%ZISH("FTPFILE")
"RTN","PSOSPMU1",178,0)
 ;
"RTN","PSOSPMU1",179,0)
 D SAVEKEYS(STATE,LOCDIR)
"RTN","PSOSPMU1",180,0)
 ;
"RTN","PSOSPMU1",181,0)
 Q (LOCDIR_"^"_EXPFILE_"^"_$G(FTPFILE)_"^"_$G(INPTFILE)_"^"_$G(LOGFILE)_"^"_PREFIX_DATETIME_FILEXT)
"RTN","PSOSPMU1",182,0)
 ;
"RTN","PSOSPMU1",183,0)
FTPFILE(STATEIP,STATEUSR,LOCDIR,FTPFILE,EXPFILE,INPTFILE,LOGFILE,FTPPORT,DEBUG) ; Issue the Secure FTP command
"RTN","PSOSPMU1",184,0)
 ;Input: STATEIP  - State Server IP Address
"RTN","PSOSPMU1",185,0)
 ;       STATEUSR - Username at the State Server
"RTN","PSOSPMU1",186,0)
 ;       LOCDIR   - Local Directory
"RTN","PSOSPMU1",187,0)
 ;       FTPFILE  - sFTP executable batch file (VMS and NT only)
"RTN","PSOSPMU1",188,0)
 ;       EXPFILE  - Data Export File
"RTN","PSOSPMU1",189,0)
 ;       INPTFILE - sFTP input file
"RTN","PSOSPMU1",190,0)
 ;       LOGFILE  - sFTP Capture Log File (VMS only)
"RTN","PSOSPMU1",191,0)
 ;       FTPPORT  - State Server Port #
"RTN","PSOSPMU1",192,0)
 ;       DEBUG    - Debug Mode? (1:YES / 0:NO)
"RTN","PSOSPMU1",193,0)
 N PSOOS,PV,XPV1
"RTN","PSOSPMU1",194,0)
 S PSOOS=$$OS^%ZOSV()
"RTN","PSOSPMU1",195,0)
 I PSOOS["VMS" S XPV1="S PV=$ZF(-1,""@"_LOCDIR_FTPFILE_"/OUTPUT="_LOCDIR_LOGFILE_""")"
"RTN","PSOSPMU1",196,0)
 I PSOOS["UNIX" D
"RTN","PSOSPMU1",197,0)
 . S XPV1="S PV=$ZF(-1,""sftp"_$S($G(DEBUG):" -oLogLevel=DEBUG1",1:"")_$S(FTPPORT:" -oPort="_FTPPORT,1:"")_" -oIdentityFile="""""_LOCDIR_"linuxsshkey"""" -b "_LOCDIR_INPTFILE
"RTN","PSOSPMU1",198,0)
 . S XPV1=XPV1_" -oStrictHostKeyChecking=no -oUser="_$TR(STATEUSR,"""","")_" "_STATEIP_" >> "_LOCDIR_LOGFILE_""")"
"RTN","PSOSPMU1",199,0)
 ;
"RTN","PSOSPMU1",200,0)
 X XPV1  ; Execute the FTP command
"RTN","PSOSPMU1",201,0)
 ;
"RTN","PSOSPMU1",202,0)
 ; Error flag logic
"RTN","PSOSPMU1",203,0)
 I PV=-1 Q "-1^Secure FTP Transmission failed"
"RTN","PSOSPMU1",204,0)
 ;
"RTN","PSOSPMU1",205,0)
 ; If Export File exists locally it means the sFTP did not finish because it removes the local file
"RTN","PSOSPMU1",206,0)
 N FILEARR,ERROR
"RTN","PSOSPMU1",207,0)
 ;I PSOOS["VMS" S FILEARR(EXPFILE)="" I $$FEXIST^%ZISH(LOCDIR,"FILEARR") S ERROR=1
"RTN","PSOSPMU1",208,0)
 I PSOOS["VMS" I $$FEXIST^PSOSPMUT(LOCDIR,EXPFILE) S ERROR=1
"RTN","PSOSPMU1",209,0)
 I PSOOS["UNIX" D
"RTN","PSOSPMU1",210,0)
 . N XLOG,LOG,LINE
"RTN","PSOSPMU1",211,0)
 . S ERROR=1 K ^TMP("PSOFTPLG",$J)
"RTN","PSOSPMU1",212,0)
 . S XLOG=$$FTG^%ZISH(LOCDIR,LOGFILE,$NAME(^TMP("PSOFTPLG",$J,1)),3)
"RTN","PSOSPMU1",213,0)
 . S (LOG,LINE)=0
"RTN","PSOSPMU1",214,0)
 . F  S LOG=$O(^TMP("PSOFTPLG",$J,LOG)) Q:LOG=""  D  I 'ERROR Q
"RTN","PSOSPMU1",215,0)
 . . S LINE=$G(^TMP("PSOFTPLG",$J,LOG)) I $$UP^XLFSTR(LINE)["SFTP> EXIT" S ERROR=0
"RTN","PSOSPMU1",216,0)
 ;
"RTN","PSOSPMU1",217,0)
 I $G(ERROR) Q "-1^Secure FTP Transmission failed."
"RTN","PSOSPMU1",218,0)
 ;
"RTN","PSOSPMU1",219,0)
 Q ""
"RTN","PSOSPMU1",220,0)
 ;
"RTN","PSOSPMU1",221,0)
DELFILES(LOCDIR,EXPFILE,INPTFILE,FTPFILE,LOGFILE) ; Delete Files
"RTN","PSOSPMU1",222,0)
 ;Input: LOCDIR   - Local Directory
"RTN","PSOSPMU1",223,0)
 ;       EXPFILE  - Data Export File
"RTN","PSOSPMU1",224,0)
 ;       INPTFILE - sFTP input file
"RTN","PSOSPMU1",225,0)
 ;       FTPFILE  - sFTP executable batch file (VMS and NT only)
"RTN","PSOSPMU1",226,0)
 ;       LOGFILE  - sFTP Log Capture batch file (VMS and NT only)
"RTN","PSOSPMU1",227,0)
 N FILE2DEL,PSOOS ;,FILEARR
"RTN","PSOSPMU1",228,0)
 I $G(LOCDIR)="" Q
"RTN","PSOSPMU1",229,0)
 S PSOOS=$$OS^%ZOSV()
"RTN","PSOSPMU1",230,0)
 I $G(EXPFILE)'="",$$FEXIST^PSOSPMUT(LOCDIR,EXPFILE) S FILE2DEL(EXPFILE)=""
"RTN","PSOSPMU1",231,0)
 S:$G(INPTFILE)'="" FILE2DEL(INPTFILE)=""
"RTN","PSOSPMU1",232,0)
 S:$G(LOGFILE)'="" FILE2DEL(LOGFILE)=""
"RTN","PSOSPMU1",233,0)
 I PSOOS["VMS" D
"RTN","PSOSPMU1",234,0)
 . S:$G(FTPFILE)'="" FILE2DEL(FTPFILE)=""
"RTN","PSOSPMU1",235,0)
 . S FILE2DEL("VMSSSHID.")=""
"RTN","PSOSPMU1",236,0)
 . S FILE2DEL("VMSSSHKEY.")=""
"RTN","PSOSPMU1",237,0)
 . S FILE2DEL("VMSSSHKEY.PUB")=""
"RTN","PSOSPMU1",238,0)
 I PSOOS["UNIX" D
"RTN","PSOSPMU1",239,0)
 . S FILE2DEL("VMSSSHKEY")=""
"RTN","PSOSPMU1",240,0)
 . S FILE2DEL("linuxsshkey")=""
"RTN","PSOSPMU1",241,0)
 D DEL^%ZISH(LOCDIR,"FILE2DEL")
"RTN","PSOSPMU1",242,0)
 Q
"RTN","PSOSPMU1",243,0)
 ;
"RTN","PSOSPMU1",244,0)
PAUSE ; Pauses screen until user hits Return
"RTN","PSOSPMU1",245,0)
 W ! K DIR S DIR("A")="Press Return to continue",DIR(0)="E" D ^DIR
"RTN","PSOSPMU1",246,0)
 Q
"RTN","PSOSPMU1",247,0)
 ;
"RTN","PSOSPMU1",248,0)
XVMSDIR(VMSDIR) ; Converts a VMS directory
"RTN","PSOSPMU1",249,0)
 ; Input: VMSDIR    - OpenVMS directory name (e.g., "USER$:[SPMP]")
"RTN","PSOSPMU1",250,0)
 ;Output: $$XVMSDIR - Converted VMS directory (e.g., "/USER$/SPMP/")
"RTN","PSOSPMU1",251,0)
 Q "/"_$TR(VMSDIR,".[]:","///")
"RTN","PSOSPMU1",252,0)
 ;
"RTN","PSOSPMU1",253,0)
SAVEKEYS(STATE,LOCDIR) ; Saves Key, converts SSH2 to OpenSSH when running on Linux
"RTN","PSOSPMU1",254,0)
 ;Input: STATE  - State to retrieve the keys from
"RTN","PSOSPMU1",255,0)
 ;       LOCDIR - Local directory where the keys should be saved to
"RTN","PSOSPMU1",256,0)
 N WLINE,XPV
"RTN","PSOSPMU1",257,0)
 I $$GET1^DIQ(58.41,STATE,18,"I")="SSH2" D
"RTN","PSOSPMU1",258,0)
 . ;Saving the Private SSH Key
"RTN","PSOSPMU1",259,0)
 . D OPEN^%ZISH("VMSSSHKEY",LOCDIR,"VMSSSHKEY","W")
"RTN","PSOSPMU1",260,0)
 . D USE^%ZISUTL("VMSSSHKEY")
"RTN","PSOSPMU1",261,0)
 . F WLINE=1:1 Q:'$D(^PS(58.41,STATE,"PRVKEY",WLINE))  D
"RTN","PSOSPMU1",262,0)
 . . W $$DECRYP^XUSRB1(^PS(58.41,STATE,"PRVKEY",WLINE,0)),!
"RTN","PSOSPMU1",263,0)
 . D CLOSE^%ZISH("VMSSSHKEY")
"RTN","PSOSPMU1",264,0)
 ;
"RTN","PSOSPMU1",265,0)
 I $$OS^%ZOSV()["VMS" D  Q
"RTN","PSOSPMU1",266,0)
 . ;Saving the Public SSH Key (Assuming SSH2 format) - VMS Only
"RTN","PSOSPMU1",267,0)
 . D OPEN^%ZISH("VMSSSHKEY",LOCDIR,"VMSSSHKEY.PUB","W")
"RTN","PSOSPMU1",268,0)
 . D USE^%ZISUTL("VMSSSHKEY")
"RTN","PSOSPMU1",269,0)
 . F WLINE=1:1 Q:'$D(^PS(58.41,STATE,"PUBKEY",WLINE))  D
"RTN","PSOSPMU1",270,0)
 . . W $$DECRYP^XUSRB1(^PS(58.41,STATE,"PUBKEY",WLINE,0)),!
"RTN","PSOSPMU1",271,0)
 . D CLOSE^%ZISH("VMSSSHKEY")
"RTN","PSOSPMU1",272,0)
 ;
"RTN","PSOSPMU1",273,0)
 I $$OS^%ZOSV()["UNIX" D  Q
"RTN","PSOSPMU1",274,0)
 . ;If Key format is SSH2, convert VMSSSHKEY to OpenSSH format; Otherwise write directly from VistA
"RTN","PSOSPMU1",275,0)
 . I $$GET1^DIQ(58.41,STATE,18,"I")="SSH2" D
"RTN","PSOSPMU1",276,0)
 . . S XPV="S PV=$ZF(-1,""ssh-keygen -i -f "_LOCDIR_"VMSSSHKEY > "_LOCDIR_"linuxsshkey"")"
"RTN","PSOSPMU1",277,0)
 . . X XPV
"RTN","PSOSPMU1",278,0)
 . E  D
"RTN","PSOSPMU1",279,0)
 . . ;Saving the Private SSH Key (OpenSSH Format)
"RTN","PSOSPMU1",280,0)
 . . D OPEN^%ZISH("linuxsshkey",LOCDIR,"linuxsshkey","W")
"RTN","PSOSPMU1",281,0)
 . . D USE^%ZISUTL("linuxsshkey")
"RTN","PSOSPMU1",282,0)
 . . F WLINE=1:1 Q:'$D(^PS(58.41,STATE,"PRVKEY",WLINE))  D
"RTN","PSOSPMU1",283,0)
 . . . W $$DECRYP^XUSRB1(^PS(58.41,STATE,"PRVKEY",WLINE,0)),!
"RTN","PSOSPMU1",284,0)
 . . D CLOSE^%ZISH("linuxsshkey")
"RTN","PSOSPMU1",285,0)
 . S XPV="S PV=$ZF(-1,""chmod 600 "_LOCDIR_"linuxsshkey"")"
"RTN","PSOSPMU1",286,0)
 . X XPV
"RTN","PSOSPMU1",287,0)
 ;
"RTN","PSOSPMU1",288,0)
 Q
"RTN","PSOSPMU1",289,0)
 ;
"RTN","PSOSPMU1",290,0)
LINUXDIR() ; Returns the Linux Directory for SPMP sFTP
"RTN","PSOSPMU1",291,0)
 N CURDIR,ROOTDIR
"RTN","PSOSPMU1",292,0)
 I $$OS^%ZOSV()'="UNIX" Q ""
"RTN","PSOSPMU1",293,0)
 I $$UP^XLFSTR($$VERSION^%ZOSV(1))'["CACHE" Q ""
"RTN","PSOSPMU1",294,0)
 ; Retrieving the current directory
"RTN","PSOSPMU1",295,0)
 X "S CURDIR=$ZU(12)" S ROOTDIR=$P(CURDIR,"/",1,4)
"RTN","PSOSPMU1",296,0)
 I $E(ROOTDIR,$L(ROOTDIR))="/" S $E(ROOTDIR,$L(ROOTDIR))=""
"RTN","PSOSPMU1",297,0)
 Q ROOTDIR_"/user/sftp/spmp/"
"RTN","PSOSPMU1",298,0)
 ;
"RTN","PSOSPMU1",299,0)
DIREXIST(DIR) ; Returns whether the Linux Directory for SPMP sFTP already exists
"RTN","PSOSPMU1",300,0)
 ;Input: DIR - Linux Directory name to be checked
"RTN","PSOSPMU1",301,0)
 N DIREXIST
"RTN","PSOSPMU1",302,0)
 I DIR="" Q 0
"RTN","PSOSPMU1",303,0)
 I $$OS^%ZOSV()'="UNIX" Q 0
"RTN","PSOSPMU1",304,0)
 I $$UP^XLFSTR($$VERSION^%ZOSV(1))'["CACHE" Q 0
"RTN","PSOSPMU1",305,0)
 I $E(DIR,$L(DIR))="/" S $E(DIR,$L(DIR))=""
"RTN","PSOSPMU1",306,0)
 X "S DIREXIST=$ZSEARCH(DIR)"
"RTN","PSOSPMU1",307,0)
 Q $S(DIREXIST="":0,1:1)
"RTN","PSOSPMU1",308,0)
 ;
"RTN","PSOSPMU1",309,0)
MAKEDIR(DIR) ; Create a new directory
"RTN","PSOSPMU1",310,0)
 ;Input: DIR - Linux Directory name to be created
"RTN","PSOSPMU1",311,0)
 N MKDIR
"RTN","PSOSPMU1",312,0)
 I $$OS^%ZOSV()'="UNIX" Q
"RTN","PSOSPMU1",313,0)
 I $$UP^XLFSTR($$VERSION^%ZOSV(1))'["CACHE" Q
"RTN","PSOSPMU1",314,0)
 I $$DIREXIST(DIR) Q
"RTN","PSOSPMU1",315,0)
 X "S MKDIR=$ZF(-1,""mkdir ""_DIR)"
"RTN","PSOSPMU1",316,0)
 I 'MKDIR X "S MKDIR=$ZF(-1,""chmod 777 ""_DIR)"
"RTN","PSOSPMU1",317,0)
 Q
"RTN","PSOSPMU1",318,0)
 ;
"RTN","PSOSPMU1",319,0)
SETLN(NSPC,TEXT,REV,UND,HIG) ; Sets a line to be displayed in the Body section
"RTN","PSOSPMU1",320,0)
 ;Input: NSPC - Namespace of the ^TMP global
"RTN","PSOSPMU1",321,0)
 ;       TEXT - Line of text to be added to Listman
"RTN","PSOSPMU1",322,0)
 ;       REV  - Reverse video (1: YES / 0:NO)
"RTN","PSOSPMU1",323,0)
 ;       UND  - Underlined (1: YES / 0: NO)
"RTN","PSOSPMU1",324,0)
 ;       HIG  - Highlighted (1: YES / 0: NO)
"RTN","PSOSPMU1",325,0)
 N X
"RTN","PSOSPMU1",326,0)
 S:$G(TEXT)="" $E(TEXT,80)=""
"RTN","PSOSPMU1",327,0)
 S:$L(TEXT)>80 TEXT=$E(TEXT,1,80)
"RTN","PSOSPMU1",328,0)
 S LINE=LINE+1,^TMP(NSPC,$J,LINE,0)=$G(TEXT)
"RTN","PSOSPMU1",329,0)
 ;
"RTN","PSOSPMU1",330,0)
 I LINE>$G(PSOLSTLN) D SAVE^VALM10(LINE) S PSOLSTLN=LINE
"RTN","PSOSPMU1",331,0)
 ;
"RTN","PSOSPMU1",332,0)
 I $G(REV) D  Q
"RTN","PSOSPMU1",333,0)
 . D CNTRL^VALM10(LINE,1,$L(TEXT),IORVON,IORVOFF_IOINORM)
"RTN","PSOSPMU1",334,0)
 . I $G(UND) D CNTRL^VALM10(LINE,$L(TEXT)+1,80,IOUON,IOINORM)
"RTN","PSOSPMU1",335,0)
 I $G(UND) D CNTRL^VALM10(LINE,1,80,IOUON,IOINORM)
"RTN","PSOSPMU1",336,0)
 I $G(HIG) D
"RTN","PSOSPMU1",337,0)
 . D CNTRL^VALM10(LINE,HIG,80,IOINHI_$S($G(UND):IOUON,1:""),IOINORM)
"RTN","PSOSPMU1",338,0)
 Q
"RTN","PSOSPMU2")
0^15^B10133979^n/a
"RTN","PSOSPMU2",1,0)
PSOSPMU2 ;BIRM/MFR - State Prescription Monitoring Program Utility #2 - Prompts ;10/07/15
"RTN","PSOSPMU2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**451**;DEC 1997;Build 114
"RTN","PSOSPMU2",3,0)
 ;
"RTN","PSOSPMU2",4,0)
ASAPVER(DEFTYPE,DSPHLP,DEFAULT,REQUIRED,ALLOWDEL) ; Prompt for the ASAP Version
"RTN","PSOSPMU2",5,0)
 ; Input: (r) DEFTYPE - ASAP Definition Type (S: Standard Only; C: Customized Only, F: Fully Customized Only,
"RTN","PSOSPMU2",6,0)
 ;                      A: All. A combination is also allowed, e.g., "CF") 
"RTN","PSOSPMU2",7,0)
 ;        (o) DSPHLP   - Display Help before prompting? (1: YES / 0: NO)
"RTN","PSOSPMU2",8,0)
 ;        (o) DEFAULT  - Default ASAP Version
"RTN","PSOSPMU2",9,0)
 ;        (o) REQUIRED - Is Answer Required? (1: YES / 0: NO)
"RTN","PSOSPMU2",10,0)
 ;        (o) ALLOWDEL - Allow delete? (accepts "@" as a valid input)
"RTN","PSOSPMU2",11,0)
 ;Output: ASAPVER - ASAP Version, "^", "@" or "" 
"RTN","PSOSPMU2",12,0)
 N DIR,X,Y,DTOUT,DIRUT,VERLST
"RTN","PSOSPMU2",13,0)
 ;
"RTN","PSOSPMU2",14,0)
ASK1 ; Label used in case the prompt needs to be asked again
"RTN","PSOSPMU2",15,0)
 D VERLIST^PSOSPMU0(DEFTYPE,.VERLST)
"RTN","PSOSPMU2",16,0)
 K DIR S DIR(0)="FO^1:10",DIR("A")="ASAP VERSION" S:$G(DEFAULT)'="" DIR("B")=DEFAULT
"RTN","PSOSPMU2",17,0)
 S DIR("?")="^D HLP1^PSOSPMU2(.VERLST)" I $G(DSPHLP) D HLP1^PSOSPMU2(.VERLST)
"RTN","PSOSPMU2",18,0)
 D ^DIR
"RTN","PSOSPMU2",19,0)
 I '$G(REQUIRED),X="" Q X
"RTN","PSOSPMU2",20,0)
 I $G(ALLOWDEL),X="@" Q X
"RTN","PSOSPMU2",21,0)
 I $G(REQUIRED),(X=""!(X="@")) W !,"This is a required response. Enter '^' to exit",$C(7),! G ASK1
"RTN","PSOSPMU2",22,0)
 I $D(DIRUT)!$D(DTOUT) Q "^"
"RTN","PSOSPMU2",23,0)
 I '$D(VERLST(X_" ")) W ?40,"Invalid ASAP Version",$C(7),! G ASK1
"RTN","PSOSPMU2",24,0)
 Q X
"RTN","PSOSPMU2",25,0)
 ;
"RTN","PSOSPMU2",26,0)
HLP1(VERLST) ; Help Text for ASAP Version prompt
"RTN","PSOSPMU2",27,0)
 ;Input: (r) VERLST  - Array containing a list ASAP versions
"RTN","PSOSPMU2",28,0)
 N VER,HLPLN
"RTN","PSOSPMU2",29,0)
 W !?5,"American Society for Automation in Pharmacy (ASAP) Version"
"RTN","PSOSPMU2",30,0)
 W !!?5,"Select one of the following:"
"RTN","PSOSPMU2",31,0)
 W !
"RTN","PSOSPMU2",32,0)
 S VER="" F  S VER=$O(VERLST(VER)) Q:VER=""  D
"RTN","PSOSPMU2",33,0)
 . S HLPLN="",$E(HLPLN,11)=VER,$E(HLPLN,22)="ASAP Version "_$E(VER,1,$L(VER)-1)_$S(VERLST(VER)="F":"*",1:"")
"RTN","PSOSPMU2",34,0)
 . W !,HLPLN
"RTN","PSOSPMU2",35,0)
 W !
"RTN","PSOSPMU2",36,0)
 Q
"RTN","PSOSPMU2",37,0)
 ;
"RTN","PSOSPMU2",38,0)
RXFILL(RXIEN) ; Select Prescription Fill #
"RTN","PSOSPMU2",39,0)
 ;Input: (r) RXIEN  - Pointer to the PRESCRIPTION file (#52)
"RTN","PSOSPMU2",40,0)
 N RXFILL,DIR,I,Y,DIRUT,DTOUT,FILLARR,RTSFILL,RTSFLDT
"RTN","PSOSPMU2",41,0)
 S RXFILL=0,FILLARR(0)=""
"RTN","PSOSPMU2",42,0)
 K DIR S DIR("A")=" Fill",DIR("B")=0
"RTN","PSOSPMU2",43,0)
 S DIR(0)="S^0:Original  ("_$$FMTE^XLFDT($$RXFLDT^PSOBPSUT(RXIEN,0),2)_")  "_$$MWA(RXIEN,0)
"RTN","PSOSPMU2",44,0)
 F I=1:1 Q:'$D(^PSRX(RXIEN,1,I))  D
"RTN","PSOSPMU2",45,0)
 . S DIR(0)=DIR(0)_";"_I_":Refill "_I_"  ("_$$FMTE^XLFDT($$RXFLDT^PSOBPSUT(RXIEN,I),2)_")  "_$$MWA(RXIEN,I),FILLARR(I)=""
"RTN","PSOSPMU2",46,0)
 F I=1:1 Q:'$D(^PSRX(RXIEN,"P",I))  D
"RTN","PSOSPMU2",47,0)
 . S DIR(0)=DIR(0)_";P"_I_":Partial "_I_" ("_$$FMTE^XLFDT($$RXFLDT^PSOBPSUT(RXIEN,"P"_I),2)_")  "_$$MWA(RXIEN,"P"_I),FILLARR("P"_I)=""
"RTN","PSOSPMU2",48,0)
 F I=1:1 Q:'$D(^PSRX(RXIEN,"RTS",I))  D
"RTN","PSOSPMU2",49,0)
 . S RTSFILL=$P(^PSRX(RXIEN,"RTS",I,0),"^",2) Q:RTSFILL=""  I $D(FILLARR(RTSFILL)) Q
"RTN","PSOSPMU2",50,0)
 . S RTSFLDT=$P(^PSRX(RXIEN,"RTS",I,0),"^",3)
"RTN","PSOSPMU2",51,0)
 . S FILLARR(RTSFILL)=""
"RTN","PSOSPMU2",52,0)
 . S DIR(0)=DIR(0)_";"_RTSFILL_":"_$S(RTSFILL["P":"Partial "_$E(RTSFILL,2,9),1:"Refill "_RTSFILL)_"  ("_$$FMTE^XLFDT(RTSFLDT,2)_") "_$$MWA(RXIEN,RTSFILL)
"RTN","PSOSPMU2",53,0)
 D ^DIR I $D(DIRUT)!$D(DTOUT) Q "^"
"RTN","PSOSPMU2",54,0)
 S RXFILL=$G(Y)
"RTN","PSOSPMU2",55,0)
 Q RXFILL
"RTN","PSOSPMU2",56,0)
 ;
"RTN","PSOSPMU2",57,0)
MWA(RXIEN,FILL) ; Returns the Rx delivering (WINDOW/MAIL/ADMIN IN CLINIC)
"RTN","PSOSPMU2",58,0)
 ;Input: (r) RXIEN - Pointer to the PRESCRIPTION file (#52)
"RTN","PSOSPMU2",59,0)
 ;       (r) FILL  - Rx Fill # (0:Original, 1:Refill #1,...,"P1":Partial #1, etc....)
"RTN","PSOSPMU2",60,0)
 I FILL["P" Q $$GET1^DIQ(52.2,$E(FILL,2,3)_","_RXIEN,.02)
"RTN","PSOSPMU2",61,0)
 I FILL Q:$$GET1^DIQ(52.1,FILL_","_RXIEN,23,"I") "ADMIN IN CLINIC" Q $$GET1^DIQ(52.1,FILL_","_RXIEN,2)
"RTN","PSOSPMU2",62,0)
 Q:$$GET1^DIQ(52,RXIEN,14,"I") "ADMIN IN CLINIC"
"RTN","PSOSPMU2",63,0)
 Q $$GET1^DIQ(52,RXIEN,11)
"RTN","PSOSPMU3")
0^17^B137219252^n/a
"RTN","PSOSPMU3",1,0)
PSOSPMU3 ;BIRM/MFR - State Prescription Monitoring Program Utility #3 - Customization ;10/07/15
"RTN","PSOSPMU3",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**451**;DEC 1997;Build 114
"RTN","PSOSPMU3",3,0)
 ;
"RTN","PSOSPMU3",4,0)
CLONEVER(FROMVER,NEWVER,DEFTYPE) ; Create an exact copy of another ASAP version 
"RTN","PSOSPMU3",5,0)
 ;Input: (r) FROMVER - Source ASAP Version to be cloned (3.0, 4.0, 4.1, 4.2)
"RTN","PSOSPMU3",6,0)
 ;       (r) NEWVER  - New ASAP Version to be created (4.3, 4.4, 5.0, etc...)
"RTN","PSOSPMU3",7,0)
 ;       (r) DEFTYPE - ASAP Definition Type (S: Standard Only; C: Customized Only, B: Both) 
"RTN","PSOSPMU3",8,0)
 I $G(FROMVER)=""!($G(NEWVER)="") Q
"RTN","PSOSPMU3",9,0)
 N CUSIEN,ASAPVER,ASAPDEF,NWVERIEN,SEGID,SEGIEN,ELMPOS,ELMID,ELMIEN
"RTN","PSOSPMU3",10,0)
 S CUSIEN=$O(^PS(58.4,"B","CUSTOM ASAP DEFINITION",0))
"RTN","PSOSPMU3",11,0)
 ; New ASAP Version already exists
"RTN","PSOSPMU3",12,0)
 I $D(^PS(58.4,CUSIEN,"VER","B",NEWVER)) Q
"RTN","PSOSPMU3",13,0)
 D LOADASAP^PSOSPMU0(FROMVER,DEFTYPE,.ASAPDEF)
"RTN","PSOSPMU3",14,0)
 S NWVERIEN=$$SAVEVER(NEWVER,.ASAPDEF) I NWVERIEN'>0 Q
"RTN","PSOSPMU3",15,0)
 ;
"RTN","PSOSPMU3",16,0)
 S SEGID="999"
"RTN","PSOSPMU3",17,0)
 F  S SEGID=$O(ASAPDEF(SEGID)) Q:SEGID=""  D
"RTN","PSOSPMU3",18,0)
 . S SEGIEN=$$COPYSEG(FROMVER,.ASAPDEF,NEWVER,SEGID) I SEGIEN'>0 Q
"RTN","PSOSPMU3",19,0)
 . S ELMPOS=""
"RTN","PSOSPMU3",20,0)
 . F  S ELMPOS=$O(ASAPDEF(SEGID,ELMPOS)) Q:ELMPOS=""  D
"RTN","PSOSPMU3",21,0)
 . . S ELMID=$P(ASAPDEF(SEGID,ELMPOS),"^")
"RTN","PSOSPMU3",22,0)
 . . S ELMIEN=$$COPYELM(FROMVER,.ASAPDEF,NEWVER,ELMID)
"RTN","PSOSPMU3",23,0)
 Q
"RTN","PSOSPMU3",24,0)
 ;
"RTN","PSOSPMU3",25,0)
SAVEVER(ASAPVER,VERDATA) ; Save an ASAP Version
"RTN","PSOSPMU3",26,0)
 ;Input: (r) ASAPVER - ASAP Version ("3.0", "4.0", etc.)
"RTN","PSOSPMU3",27,0)
 ;       (r) VERDATA - ASAP Version Data
"RTN","PSOSPMU3",28,0)
 ;Output: SAVVER - ASAP Version IEN
"RTN","PSOSPMU3",29,0)
 I $G(ASAPVER)=""!($G(VERDATA)="") Q "-1^Invalid Input Parameters"
"RTN","PSOSPMU3",30,0)
 N SAVEVER,CUSIEN,VERIEN,VERDEF
"RTN","PSOSPMU3",31,0)
 S CUSIEN=$O(^PS(58.4,"B","CUSTOM ASAP DEFINITION",0)) I 'CUSIEN Q "-1^Invalid Custom ASAP Data Definition"
"RTN","PSOSPMU3",32,0)
 ; If Custom ASAP Version entry does not exist, create it
"RTN","PSOSPMU3",33,0)
 S VERIEN=$O(^PS(58.4,CUSIEN,"VER","B",ASAPVER,0)) I 'VERIEN S VERIEN="+1"
"RTN","PSOSPMU3",34,0)
 ;
"RTN","PSOSPMU3",35,0)
 S VERDEF(58.4001,VERIEN_","_CUSIEN_",",.01)=ASAPVER
"RTN","PSOSPMU3",36,0)
 S VERDEF(58.4001,VERIEN_","_CUSIEN_",",.02)=$P(VERDATA,"^",2)
"RTN","PSOSPMU3",37,0)
 S VERDEF(58.4001,VERIEN_","_CUSIEN_",",.03)=$P(VERDATA,"^",3)
"RTN","PSOSPMU3",38,0)
 S VERDEF(58.4001,VERIEN_","_CUSIEN_",",.04)=$P(VERDATA,"^",4)
"RTN","PSOSPMU3",39,0)
 D UPDATE^DIE("","VERDEF","SAVEVER","")
"RTN","PSOSPMU3",40,0)
 S:VERIEN="+1" VERIEN=+$G(SAVEVER(1))
"RTN","PSOSPMU3",41,0)
 ; Necessary to force the '@' as a delimiter/terminator
"RTN","PSOSPMU3",42,0)
 I $P(VERDATA,"^",2)="@",VERIEN S $P(^PS(58.4,CUSIEN,"VER",VERIEN,0),"^",2)="@"
"RTN","PSOSPMU3",43,0)
 I $P(VERDATA,"^",3)="@",VERIEN S $P(^PS(58.4,CUSIEN,"VER",VERIEN,0),"^",3)="@"
"RTN","PSOSPMU3",44,0)
 Q VERIEN
"RTN","PSOSPMU3",45,0)
 ;
"RTN","PSOSPMU3",46,0)
COPYSEG(FROMVER,ASAPDEF,TOVER,SEGID) ; Copy a Segment
"RTN","PSOSPMU3",47,0)
 ; Input: (r) FROMVER - Source ASAP Version ("3.0", "4.0", etc.)
"RTN","PSOSPMU3",48,0)
 ;        (r) ASAPDEF - Array containig the ASAP Definition to be copied
"RTN","PSOSPMU3",49,0)
 ;        (r) TOMVER  - Detin ASAP Version ("3.0", "4.0", etc.)
"RTN","PSOSPMU3",50,0)
 ;        (r) SEGID   - Segment ID ("PHA", "DSP", etc.)
"RTN","PSOSPMU3",51,0)
 ;Output: SAVESEG - New Segment IEN
"RTN","PSOSPMU3",52,0)
 I $G(FROMVER)=""!($G(TOVER)="")!($G(SEGID)="") Q "-1^Invalid Input Parameters"
"RTN","PSOSPMU3",53,0)
 N STDIEN,CUSIEN,TOVERIEN,SEGDEF,SEGIEN
"RTN","PSOSPMU3",54,0)
 S STDIEN=$O(^PS(58.4,"B","STANDARD ASAP DEFINITION",0))
"RTN","PSOSPMU3",55,0)
 S CUSIEN=$O(^PS(58.4,"B","CUSTOM ASAP DEFINITION",0))
"RTN","PSOSPMU3",56,0)
 ; From ASAP Version must exist (Standard or Custom)
"RTN","PSOSPMU3",57,0)
 I '$D(^PS(58.4,STDIEN,"VER","B",FROMVER)),'$D(^PS(58.4,CUSIEN,"VER","B",FROMVER)) Q "-1^Source ASAP Version does not exist."
"RTN","PSOSPMU3",58,0)
 ; To ASAP Version must exist (Custom) - If not, try to create it
"RTN","PSOSPMU3",59,0)
 S TOVERIEN=$O(^PS(58.4,CUSIEN,"VER","B",TOVER,9999),-1)
"RTN","PSOSPMU3",60,0)
 I 'TOVERIEN S TOVERIEN=$$SAVEVER(TOVER,ASAPDEF) I TOVERIEN<0 Q TOVERIEN
"RTN","PSOSPMU3",61,0)
 ; Segment ID already on file (cannot be copied again)
"RTN","PSOSPMU3",62,0)
 I $O(^PS(58.4,CUSIEN,"VER",TOVERIEN,"SEG","B",SEGID,0)) Q "-1^Segment ID already on file"
"RTN","PSOSPMU3",63,0)
 I '$D(ASAPDEF(SEGID)) Q "-1^Missing new segment data"
"RTN","PSOSPMU3",64,0)
 Q $$SAVESEG(TOVER,"+1",ASAPDEF(SEGID),ASAPDEF)
"RTN","PSOSPMU3",65,0)
 ;
"RTN","PSOSPMU3",66,0)
SAVESEG(ASAPVER,SEGID,SEGDATA,VERDATA) ; Saves a Segment
"RTN","PSOSPMU3",67,0)
 ; Input: (r) ASAPVER - ASAP Version ("3.0", "4.0", etc.)
"RTN","PSOSPMU3",68,0)
 ;        (r) SEGID   - Segment ID ("PHA", "DSP", etc.) or "+1" to add a new Segment
"RTN","PSOSPMU3",69,0)
 ;        (r) SEGDATA - Segment Data
"RTN","PSOSPMU3",70,0)
 ;        (o) VERDATA - Version Data (Only needed for 1st custom segment)
"RTN","PSOSPMU3",71,0)
 ;Output: SAVESEG - Segment IEN
"RTN","PSOSPMU3",72,0)
 I $G(ASAPVER)=""!($G(SEGID)="")!($G(SEGDATA)="") Q "-1^Invalid Input Parameters"
"RTN","PSOSPMU3",73,0)
 N SAVESEG,CUSIEN,VERIEN,SEGIEN,SEGDEF
"RTN","PSOSPMU3",74,0)
 S CUSIEN=$O(^PS(58.4,"B","CUSTOM ASAP DEFINITION",0)) I 'CUSIEN Q "-1^Invalid Custom ASAP Data Definition"
"RTN","PSOSPMU3",75,0)
 ; Custom ASAP Version must exist - If not, create it
"RTN","PSOSPMU3",76,0)
 S VERIEN=$O(^PS(58.4,CUSIEN,"VER","B",ASAPVER,9999),-1)
"RTN","PSOSPMU3",77,0)
 I 'VERIEN S VERIEN=$$SAVEVER(ASAPVER,VERDATA) I VERIEN<0 Q "-1^Invalid Custom ASAP Version"
"RTN","PSOSPMU3",78,0)
 S SEGIEN=SEGID
"RTN","PSOSPMU3",79,0)
 I SEGIEN'="+1" S SEGIEN=$O(^PS(58.4,CUSIEN,"VER",VERIEN,"SEG","B",SEGID,9999),-1) I 'SEGIEN Q "-1^Invalid Custom ASAP Segment"
"RTN","PSOSPMU3",80,0)
 S SEGDEF(58.40011,SEGIEN_","_VERIEN_","_CUSIEN_",",.01)=$P(SEGDATA,"^",1) ;Segment ID
"RTN","PSOSPMU3",81,0)
 S SEGDEF(58.40011,SEGIEN_","_VERIEN_","_CUSIEN_",",.02)=$P(SEGDATA,"^",2) ;Segment Name
"RTN","PSOSPMU3",82,0)
 S SEGDEF(58.40011,SEGIEN_","_VERIEN_","_CUSIEN_",",.03)=$P(SEGDATA,"^",3) ;Parent Segment
"RTN","PSOSPMU3",83,0)
 S SEGDEF(58.40011,SEGIEN_","_VERIEN_","_CUSIEN_",",.04)=$P(SEGDATA,"^",4) ;Requirement
"RTN","PSOSPMU3",84,0)
 S SEGDEF(58.40011,SEGIEN_","_VERIEN_","_CUSIEN_",",.05)=$P(SEGDATA,"^",5) ;Position
"RTN","PSOSPMU3",85,0)
 S SEGDEF(58.40011,SEGIEN_","_VERIEN_","_CUSIEN_",",.06)=$P(SEGDATA,"^",6) ;Level
"RTN","PSOSPMU3",86,0)
 D UPDATE^DIE("","SEGDEF","SAVESEG","")
"RTN","PSOSPMU3",87,0)
 I SEGIEN="+1" S SEGIEN=+$G(SAVESEG(1))
"RTN","PSOSPMU3",88,0)
 Q SEGIEN
"RTN","PSOSPMU3",89,0)
 ;
"RTN","PSOSPMU3",90,0)
COPYELM(FROMVER,ASAPDEF,TOVER,ELMID) ; Copy a Data Element
"RTN","PSOSPMU3",91,0)
 ;Input: (r) FROMVER - Source ASAP Version ("3.0", "4.0", etc.)
"RTN","PSOSPMU3",92,0)
 ;       (r) ASAPDEF - Array containig the ASAP Definition to be copied
"RTN","PSOSPMU3",93,0)
 ;       (r) TOMVER  - Detin ASAP Version ("3.0", "4.0", etc.)
"RTN","PSOSPMU3",94,0)
 ;       (r) ELMID  - Data Element ID ("PHA01", "DSP02", etc.)
"RTN","PSOSPMU3",95,0)
 ;Output: SAVESEG - Segment IEN
"RTN","PSOSPMU3",96,0)
 I $G(FROMVER)=""!'$D(ASAPDEF)!($G(TOVER)="")!($G(ELMID)="") Q "-1^Invalid Input Parameters"
"RTN","PSOSPMU3",97,0)
 N STDIEN,CUSIEN,TOVERIEN,TOSEGIEN,ELMDEF,ELMIEN,ELMDATA
"RTN","PSOSPMU3",98,0)
 S STDIEN=$O(^PS(58.4,"B","STANDARD ASAP DEFINITION",0))
"RTN","PSOSPMU3",99,0)
 S CUSIEN=$O(^PS(58.4,"B","CUSTOM ASAP DEFINITION",0))
"RTN","PSOSPMU3",100,0)
 ; From ASAP Version must exist (Standard or Custom)
"RTN","PSOSPMU3",101,0)
 I '$D(^PS(58.4,STDIEN,"VER","B",FROMVER)),'$D(^PS(58.4,CUSIEN,"VER","B",FROMVER)) Q "-1^Source ASAP Version does not exist."
"RTN","PSOSPMU3",102,0)
 ; To ASAP Version must exist (Custom) - If not, create it
"RTN","PSOSPMU3",103,0)
 S TOVERIEN=$O(^PS(58.4,CUSIEN,"VER","B",TOVER,9999),-1)
"RTN","PSOSPMU3",104,0)
 I 'TOVERIEN S TOVERIEN=$$SAVEVER(TOVER,ASAPDEF) I TOVERIEN<0 Q "-1^Invalid Custom ASAP Version"
"RTN","PSOSPMU3",105,0)
 S SEGID=$$GETSEGID(ELMID) I SEGID="" Q "-1^Invalid Segment ID "_SEGID_"."
"RTN","PSOSPMU3",106,0)
 ; Custom ASAP Segment must exist - If not, create it
"RTN","PSOSPMU3",107,0)
 S TOSEGIEN=$O(^PS(58.4,CUSIEN,"VER",TOVERIEN,"SEG","B",SEGID,9999),-1)
"RTN","PSOSPMU3",108,0)
 I 'TOSEGIEN S TOSEGIEN=$$SAVESEG(TOVER,SEGID,ASAPDEF(SEGID),ASAPDEF) I 'TOSEGIEN Q "-1^Segment ID does not exist in the destin ASAP Version."
"RTN","PSOSPMU3",109,0)
 ; Segment ID already on file (cannot be copied again)
"RTN","PSOSPMU3",110,0)
 I $O(^PS(58.4,CUSIEN,"VER",TOVERIEN,"SEG",TOSEGIEN,"DAT","B",ELMID,9999),-1) Q "-1^Data Element already on file"
"RTN","PSOSPMU3",111,0)
 I '$D(ASAPDEF(SEGID,ELMPOS)) Q "-1^Data Element does not exist in the source ASAP Version."
"RTN","PSOSPMU3",112,0)
 K ELMDATA M ELMDATA=ASAPDEF(SEGID,ELMPOS)
"RTN","PSOSPMU3",113,0)
 Q $$SAVEELM(TOVER,SEGID,"+1",.ELMDATA)
"RTN","PSOSPMU3",114,0)
 ;
"RTN","PSOSPMU3",115,0)
SAVEELM(ASAPVER,SEGID,ELMID,ELMDATA) ; Saves a Data Element
"RTN","PSOSPMU3",116,0)
 ;Input: (r) ASAPVER - ASAP Version ("3.0", "4.0", etc.)
"RTN","PSOSPMU3",117,0)
 ;       (r) SEGID   - Segment ID ("PHA", "DSP", etc.)
"RTN","PSOSPMU3",118,0)
 ;       (r) ELMID   - Data Element ID ("PHA01", "DSP05", etc.) or "+1" to add a new Data Element
"RTN","PSOSPMU3",119,0)
 ;       (r) ELMDATA - Data Element Data
"RTN","PSOSPMU3",120,0)
 ;Output: SAVEELM - Data Element IEN
"RTN","PSOSPMU3",121,0)
 I $G(ASAPVER)=""!($G(SEGID)="")!($G(ELMID)="")!($G(ELMDATA)="") Q "-1^Invalid Input Parameters"
"RTN","PSOSPMU3",122,0)
 N SAVEELM,CUSIEN,VERIEN,ELMIEN,ELMDEF,SEGIEN
"RTN","PSOSPMU3",123,0)
 S CUSIEN=$O(^PS(58.4,"B","CUSTOM ASAP DEFINITION",0)) I 'CUSIEN Q "-1^Invalid Custom ASAP Data Definition"
"RTN","PSOSPMU3",124,0)
 ; Custom ASAP Version must exist
"RTN","PSOSPMU3",125,0)
 S VERIEN=$O(^PS(58.4,CUSIEN,"VER","B",ASAPVER,9999),-1) I 'VERIEN Q "-1^Invalid Custom ASAP Version"
"RTN","PSOSPMU3",126,0)
 ; Custom ASAP Segment must exist
"RTN","PSOSPMU3",127,0)
 S SEGIEN=$O(^PS(58.4,CUSIEN,"VER",VERIEN,"SEG","B",SEGID,9999),-1) I 'SEGIEN Q "-1^Segment ID does not exist in the destin ASAP Version."
"RTN","PSOSPMU3",128,0)
 S ELMIEN=ELMID
"RTN","PSOSPMU3",129,0)
 I ELMIEN'="+1" S ELMIEN=$O(^PS(58.4,CUSIEN,"VER",VERIEN,"SEG",SEGIEN,"DAT","B",ELMID,9999),-1) I 'ELMIEN Q "-1^Invalid Custom ASAP Data Element"
"RTN","PSOSPMU3",130,0)
 ; Saving Data Element
"RTN","PSOSPMU3",131,0)
 S ELMDEF(58.400111,ELMIEN_","_SEGIEN_","_VERIEN_","_CUSIEN_",",.01)=$P(ELMDATA,"^",1) ;Element ID
"RTN","PSOSPMU3",132,0)
 S ELMDEF(58.400111,ELMIEN_","_SEGIEN_","_VERIEN_","_CUSIEN_",",.02)=$P(ELMDATA,"^",2) ;Element Name
"RTN","PSOSPMU3",133,0)
 S ELMDEF(58.400111,ELMIEN_","_SEGIEN_","_VERIEN_","_CUSIEN_",",.03)=$P(ELMDATA,"^",3) ;Data Format
"RTN","PSOSPMU3",134,0)
 S ELMDEF(58.400111,ELMIEN_","_SEGIEN_","_VERIEN_","_CUSIEN_",",.04)=$P(ELMDATA,"^",4) ;Maximum Length
"RTN","PSOSPMU3",135,0)
 S ELMDEF(58.400111,ELMIEN_","_SEGIEN_","_VERIEN_","_CUSIEN_",",.05)=$P(ELMDATA,"^",5) ;Position
"RTN","PSOSPMU3",136,0)
 S ELMDEF(58.400111,ELMIEN_","_SEGIEN_","_VERIEN_","_CUSIEN_",",.06)=$P(ELMDATA,"^",6) ;Requirement
"RTN","PSOSPMU3",137,0)
 S ELMDEF(58.400111,ELMIEN_","_SEGIEN_","_VERIEN_","_CUSIEN_",",.07)="ELMDATA(""DES"")" ;Description
"RTN","PSOSPMU3",138,0)
 S ELMDEF(58.400111,ELMIEN_","_SEGIEN_","_VERIEN_","_CUSIEN_",",.08)="ELMDATA(""VAL"")" ;Value
"RTN","PSOSPMU3",139,0)
 D UPDATE^DIE("","ELMDEF","SAVEELM","")
"RTN","PSOSPMU3",140,0)
 I ELMIEN="+1" S ELMIEN=+$G(SAVEELM(1))
"RTN","PSOSPMU3",141,0)
 Q ELMIEN
"RTN","PSOSPMU3",142,0)
 ;
"RTN","PSOSPMU3",143,0)
CUSSEG(ASAPVER,SEGID) ; Customized Segment?
"RTN","PSOSPMU3",144,0)
 ;Input: (r) ASAPVER - ASAP Version ("3.0", "4.0", etc.)
"RTN","PSOSPMU3",145,0)
 ;       (r) SEGID   - Segment ID
"RTN","PSOSPMU3",146,0)
 ;Output: Customized Segment? 1: YES / 0: NO
"RTN","PSOSPMU3",147,0)
 I $G(ASAPVER)=""!($G(SEGID)="") Q 0
"RTN","PSOSPMU3",148,0)
 N STDASAP,CUSASAP
"RTN","PSOSPMU3",149,0)
 D LOADASAP^PSOSPMU0(ASAPVER,"S",.STDASAP) ; Standard ASAP Definition
"RTN","PSOSPMU3",150,0)
 D LOADASAP^PSOSPMU0(ASAPVER,"C",.CUSASAP) ; Custom ASAP Definition
"RTN","PSOSPMU3",151,0)
 I $G(CUSASAP(SEGID))="" Q 0
"RTN","PSOSPMU3",152,0)
 I $G(STDASAP(SEGID))=$G(CUSASAP(SEGID)) Q 0
"RTN","PSOSPMU3",153,0)
 Q 1
"RTN","PSOSPMU3",154,0)
 ;
"RTN","PSOSPMU3",155,0)
DELCUS(ASAPVER,SEGID,ELMID) ; Delete/Reset a Customization
"RTN","PSOSPMU3",156,0)
 ;Input: (r) ASAPVER - ASAP Version ("3.0", "4.0", etc.)
"RTN","PSOSPMU3",157,0)
 ;       (o) SEGID   - Segment ID ("PHA", "DSP", etc.)
"RTN","PSOSPMU3",158,0)
 ;       (o) ELMID  - Data Element ID ("PHA01", "DSP02", etc.)
"RTN","PSOSPMU3",159,0)
 I $G(ASAPVER)="" Q
"RTN","PSOSPMU3",160,0)
 N STDASAP,CUSASAP,CUSIEN,VERIEN,SEGIEN,ELMIEN,DIK,DA
"RTN","PSOSPMU3",161,0)
 D LOADASAP^PSOSPMU0(ASAPVER,"S",.STDASAP) ; Standard ASAP Definition
"RTN","PSOSPMU3",162,0)
 D LOADASAP^PSOSPMU0(ASAPVER,"C",.CUSASAP) ; Custom ASAP Definition
"RTN","PSOSPMU3",163,0)
 ;
"RTN","PSOSPMU3",164,0)
 S CUSIEN=$O(^PS(58.4,"B","CUSTOM ASAP DEFINITION",9999),-1)
"RTN","PSOSPMU3",165,0)
 S VERIEN=$O(^PS(58.4,CUSIEN,"VER","B",ASAPVER,9999),-1) I 'VERIEN Q
"RTN","PSOSPMU3",166,0)
 I $G(SEGID)'="" D
"RTN","PSOSPMU3",167,0)
 . S SEGIEN=$O(^PS(58.4,CUSIEN,"VER",VERIEN,"SEG","B",SEGID,9999),-1)
"RTN","PSOSPMU3",168,0)
 I $G(ELMID)'="" D
"RTN","PSOSPMU3",169,0)
 . S SEGIEN=$O(^PS(58.4,CUSIEN,"VER",VERIEN,"SEG","B",$$GETSEGID(ELMID),9999),-1) I 'SEGIEN Q
"RTN","PSOSPMU3",170,0)
 . S ELMIEN=$O(^PS(58.4,CUSIEN,"VER",VERIEN,"SEG",SEGIEN,"DAT","B",ELMID,9999),-1)
"RTN","PSOSPMU3",171,0)
 ;
"RTN","PSOSPMU3",172,0)
 I $G(SEGID)'="",'$G(SEGIEN) Q
"RTN","PSOSPMU3",173,0)
 I $G(ELMID)'="",'$G(ELMIEN) Q
"RTN","PSOSPMU3",174,0)
 ;
"RTN","PSOSPMU3",175,0)
 ; Deleting/Resetting a Custom Data Element
"RTN","PSOSPMU3",176,0)
 I $G(ELMID)'="" D  Q
"RTN","PSOSPMU3",177,0)
 . S DIK="^PS(58.4,"_CUSIEN_",""VER"","_VERIEN_",""SEG"","_SEGIEN_",""DAT"","
"RTN","PSOSPMU3",178,0)
 . S DA(3)=CUSIEN,DA(2)=VERIEN,DA(1)=SEGIEN,DA=ELMIEN D ^DIK
"RTN","PSOSPMU3",179,0)
 ;
"RTN","PSOSPMU3",180,0)
 ; Deleting/Resetting an Entire Custom Segment
"RTN","PSOSPMU3",181,0)
 I $G(SEGID)'="" D  Q
"RTN","PSOSPMU3",182,0)
 . S DIK="^PS(58.4,"_CUSIEN_",""VER"","_VERIEN_",""SEG"","
"RTN","PSOSPMU3",183,0)
 . S DA(2)=CUSIEN,DA(1)=VERIEN,DA=SEGIEN D ^DIK
"RTN","PSOSPMU3",184,0)
 ;
"RTN","PSOSPMU3",185,0)
 ; Deleting/Resetting an Entire Custom ASAP Version
"RTN","PSOSPMU3",186,0)
 S DIK="^PS(58.4,"_CUSIEN_",""VER"","
"RTN","PSOSPMU3",187,0)
 S DA(1)=CUSIEN,DA=VERIEN D ^DIK
"RTN","PSOSPMU3",188,0)
 Q
"RTN","PSOSPMU3",189,0)
 ;
"RTN","PSOSPMU3",190,0)
GETSEGID(ELMID) ; Get the Segment ID from the Element ID
"RTN","PSOSPMU3",191,0)
 ;Input: (r) ELMID - Data Element ID ("PHA01", "DSP02", etc.)
"RTN","PSOSPMU3",192,0)
 N GETSEGID,I
"RTN","PSOSPMU3",193,0)
 S GETSEGID=$G(ELMID) F I=$L(ELMID):-1:1 Q:($E(ELMID,I)'?1N)  S $E(GETSEGID,I)=""
"RTN","PSOSPMU3",194,0)
 Q GETSEGID
"RTN","PSOSPMU3",195,0)
 ;
"RTN","PSOSPMU3",196,0)
VALID(ASAPVER,MEXPR) ; Validate the Mumps Expression for the ASAP Version
"RTN","PSOSPMU3",197,0)
 ;Input: (r) ASAPVER - ASAP Version ("3.0", "4.0", etc.) (Required for checking the delimiters)
"RTN","PSOSPMU3",198,0)
 ;       (r) MEXPR   - M SET Expression Argument to be validated
"RTN","PSOSPMU3",199,0)
 I $G(ASAPVER)=""!($G(MEXPR)="") Q "0^Invalid Input Parameters"
"RTN","PSOSPMU3",200,0)
 N VALID,VERDATA,ELMDELIM,SEGDELIM,INQUOTES,CHAR,X,I
"RTN","PSOSPMU3",201,0)
 S MEXPR=$$UP^XLFSTR(MEXPR)
"RTN","PSOSPMU3",202,0)
 I $G(MEXPR)="" Q "0^M SET Expression cannot be empty. Use """" for blank/null values."
"RTN","PSOSPMU3",203,0)
 I $F(MEXPR," D ^")!$F(MEXPR," DO ^")!$F(MEXPR,"G ^")!$F(MEXPR,"GO ^") Q "0^M SET Expression cannot call out other routines."
"RTN","PSOSPMU3",204,0)
 I $F(MEXPR,"K ^")!$F(MEXPR,"KILL ^") Q "0^M SET Expression cannot contain 'KILL' command."
"RTN","PSOSPMU3",205,0)
 I $F(MEXPR," S ^")!$F(MEXPR," SET ^") Q "0^M SET Expression cannot contain 'SET' command."
"RTN","PSOSPMU3",206,0)
 I $F(MEXPR," L +")!$F(MEXPR," L ^")!$F(MEXPR," LOCK ") Q "0^M SET Expression cannot contain 'LOCK' command."
"RTN","PSOSPMU3",207,0)
 I $F(MEXPR,"$C(") Q "0^M SET Expression cannot contain special characters ($C)."
"RTN","PSOSPMU3",208,0)
 S VALID=1,VERDATA=$$VERDATA^PSOSPMU0(ASAPVER,"B")
"RTN","PSOSPMU3",209,0)
 S ELMDELIM=$P(VERDATA,"^",2),SEGDELIM=$P(VERDATA,"^",3)
"RTN","PSOSPMU3",210,0)
 S INQUOTES=0
"RTN","PSOSPMU3",211,0)
 F I=1:1:$L(MEXPR) D  I VALID<0 Q
"RTN","PSOSPMU3",212,0)
 . S CHAR=$E(MEXPR,I)
"RTN","PSOSPMU3",213,0)
 . I ($A(CHAR)<32)!($A(CHAR)>176) S VALID="0^M SET Expression cannot contain special characters." Q
"RTN","PSOSPMU3",214,0)
 . I CHAR="""" S INQUOTES=((INQUOTES+1)#2)
"RTN","PSOSPMU3",215,0)
 . I INQUOTES D
"RTN","PSOSPMU3",216,0)
 . . I CHAR=ELMDELIM S VALID="0^M SET Expression Cannot contain the character '"_CHAR_"' (Element Delimiter)." Q
"RTN","PSOSPMU3",217,0)
 . . I CHAR=SEGDELIM S VALID="0^M SET Expression Cannot contain the character '"_CHAR_"' (Segment Terminator)." Q
"RTN","PSOSPMU3",218,0)
 . E  D
"RTN","PSOSPMU3",219,0)
 . . I CHAR=" " S VALID="0^No Blank Space characters allowed outside quotes." Q
"RTN","PSOSPMU3",220,0)
 ; The concatenated 'X' below is for security purposes
"RTN","PSOSPMU3",221,0)
 S X="W "_MEXPR_"_""X""" D ^DIM I '$D(X) Q "0^M SET Expression syntax is invalid."
"RTN","PSOSPMU3",222,0)
 Q VALID
"RTN","PSOSPMU3",223,0)
 ;
"RTN","PSOSPMU3",224,0)
CHKVAR(LEVEL,MEXPR) ; Checks the variables in the M SET Expression
"RTN","PSOSPMU3",225,0)
 ; Input: (r) LEVEL - Level of the Segment where the Data Element is located
"RTN","PSOSPMU3",226,0)
 ;        (r) MEXPR - Mumps SET Expression value to be verified
"RTN","PSOSPMU3",227,0)
 ;Output: $$CHKVAR  - 1: No issues / 0: Invalid Variable use
"RTN","PSOSPMU3",228,0)
 I '$G(LEVEL)!$G(MEXPR)="" Q 1
"RTN","PSOSPMU3",229,0)
 N CHKVAR,LEVNAM,VAR,OKLST
"RTN","PSOSPMU3",230,0)
 S CHKVAR=""
"RTN","PSOSPMU3",231,0)
 I LEVEL=4 Q 1
"RTN","PSOSPMU3",232,0)
 I LEVEL=1!(LEVEL=6) S OKLST="STATEIEN,"
"RTN","PSOSPMU3",233,0)
 I LEVEL=2!(LEVEL=5) S OKLST="STATEIEN,SITEIEN,"
"RTN","PSOSPMU3",234,0)
 I LEVEL=3 S OKLST="STATEIEN,SITEIEN,PATIEN"
"RTN","PSOSPMU3",235,0)
 F VAR="STATEIEN","SITEIEN","PATIEN","RXIEN","DRUGIEN","FILLNUM","FILLIEN","RPHIEN","PREIEN","RTSREC" D
"RTN","PSOSPMU3",236,0)
 . I MEXPR[VAR,OKLST'[VAR S CHKVAR=CHKVAR_$S(CHKVAR'="":",",1:"")_VAR
"RTN","PSOSPMU3",237,0)
 I CHKVAR'="" D  Q 0
"RTN","PSOSPMU3",238,0)
 . S LEVNAM=$P("MAIN HEADER^PHARMACY HEADER^PATIENT DETAIL^PRESCRIPTION DETAIL^PHARMACY TRAILER^MAIN TRAILER","^",LEVEL)
"RTN","PSOSPMU3",239,0)
 . W !,"The variable",$S(CHKVAR[",":"s",1:"")," ",CHKVAR," ",$S(CHKVAR[",":"are",1:"is")," not available at the ",LEVNAM," level.",$C(7),!
"RTN","PSOSPMU3",240,0)
 Q 1
"RTN","PSOSPMU3",241,0)
 ;
"RTN","PSOSPMU3",242,0)
CHKCODE(LEVEL,MEXPR,ERROR) ; Checks the data retrieval code for the Data Element
"RTN","PSOSPMU3",243,0)
 ; Input: (r) LEVEL - Level of the Segment where the Data Element is located
"RTN","PSOSPMU3",244,0)
 ;        (r) MEXPR - Mumps SET Expression value to be verified
"RTN","PSOSPMU3",245,0)
 ;Output: ERROR - Indicate whether an ERROR occurred or not (1: Yes, 0: No)
"RTN","PSOSPMU3",246,0)
 I '$G(LEVEL)!$G(MEXPR)="" Q
"RTN","PSOSPMU3",247,0)
 N QUIT,STATEIEN,SITEIEN,LASTRD,PATIEN,DFN,RXIEN,DRUGIEN,FILLIEN,FILLNUM,PREIEN,RPHIEN,RTSREC,CODE,X
"RTN","PSOSPMU3",248,0)
 N RECTYPE
"RTN","PSOSPMU3",249,0)
 S ERROR=0
"RTN","PSOSPMU3",250,0)
 I '$G(LEVEL)!$G(MEXPR)="" Q
"RTN","PSOSPMU3",251,0)
 S (QUIT,SITEIEN,PATIEN,DFN,RXIEN,DRUGIEN,FILLIEN,PREIEN,RPHIEN,FILLNUM,RTSREC)=0
"RTN","PSOSPMU3",252,0)
 D  I QUIT Q
"RTN","PSOSPMU3",253,0)
 . S LASTRD=$O(^PSRX("AL",9999999),-1) I 'LASTRD S QUIT=1 Q
"RTN","PSOSPMU3",254,0)
 . S RXIEN=$O(^PSRX("AL",LASTRD,0)) I '$D(^PSRX(RXIEN,0)) S QUIT=1 Q
"RTN","PSOSPMU3",255,0)
 . S SITEIEN=$$RXSITE^PSOBPSUT(RXIEN,0)
"RTN","PSOSPMU3",256,0)
 . S STATEIEN=$$GET1^DIQ(59,SITEIEN,.08,"I")
"RTN","PSOSPMU3",257,0)
 . I LEVEL=1!(LEVEL=6) K SITEIEN,PATIEN,DFN,RXIEN,DRUGIEN,FILLIEN,FILLNUM,PREIEN,RPHIEN,RTSREC Q
"RTN","PSOSPMU3",258,0)
 . I LEVEL=2!(LEVEL=5) K PATIEN,DFN,RXIEN,DRUGIEN,FILLIEN,FILLNUM,PREIEN,RPHIEN,RTSREC Q
"RTN","PSOSPMU3",259,0)
 . S (PATIEN,DFN)=$$GET1^DIQ(52,RXIEN,2,"I") D SETNAME^PSOSPMUT(PATIEN)
"RTN","PSOSPMU3",260,0)
 . I LEVEL=3 K RXIEN,DRUGIEN,FILLIEN,FILLNUM,PREIEN,RPHIEN,RTSREC Q
"RTN","PSOSPMU3",261,0)
 . S DRUGIEN=$$GET1^DIQ(52,RXIEN,6,"I")
"RTN","PSOSPMU3",262,0)
 . S FILLIEN=0,FILLNUM=0,RECTYPE="N"
"RTN","PSOSPMU3",263,0)
 . S PREIEN=$$RXPRV^PSOBPSUT(RXIEN,0)
"RTN","PSOSPMU3",264,0)
 . S RPHIEN=$$RXRPH^PSOBPSUT(RXIEN,0)
"RTN","PSOSPMU3",265,0)
 S CODE="S X="_MEXPR
"RTN","PSOSPMU3",266,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERROR^PSOSPMU3"
"RTN","PSOSPMU3",267,0)
 X CODE
"RTN","PSOSPMU3",268,0)
 Q
"RTN","PSOSPMU3",269,0)
 ;
"RTN","PSOSPMU3",270,0)
ERROR ; Error Trap to test ASAP Data Retrieval
"RTN","PSOSPMU3",271,0)
 N ZE,DIR,DRUT,DTOUT,X,Y
"RTN","PSOSPMU3",272,0)
 S ZE=$$EC^%ZOSV
"RTN","PSOSPMU3",273,0)
 I ZE["<UNDEFINED>" D
"RTN","PSOSPMU3",274,0)
 . W !,"The code will likely throw an <UNDEFINED> error for the "
"RTN","PSOSPMU3",275,0)
 . W $S(ZE["*":"variable '",1:"global ^"),$S(ZE["*":$P(ZE,"*",2)_"'",1:$P(ZE,"^",3)),".",$C(7)
"RTN","PSOSPMU3",276,0)
 . S DIR(0)="Y",DIR("B")="NO",DIR("A")="Continue Anyway" D ^DIR I '$G(Y) S ERROR=1
"RTN","PSOSPMU3",277,0)
 E  W !,"The code will throw a <",$P($P(ZE,"<",2),">"),"> error for this expression.",$C(7) S ERROR=1
"RTN","PSOSPMU3",278,0)
 ; Continue on
"RTN","PSOSPMU3",279,0)
 W ! G UNWIND^%ZTER
"RTN","PSOSPMUT")
0^2^B182085149^B178191137
"RTN","PSOSPMUT",1,0)
PSOSPMUT ;BIRM/MFR - State Prescription Monitoring Program Utilities ;10/07/12
"RTN","PSOSPMUT",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**408,451**;DEC 1997;Build 114
"RTN","PSOSPMUT",3,0)
 ;
"RTN","PSOSPMUT",4,0)
EXPORT(BATCHIEN,MODE,BCKGRND,DEBUG) ; Export a SPMP Batch
"RTN","PSOSPMUT",5,0)
 ;Input: BATCHIEN - Pointer to #58.41
"RTN","PSOSPMUT",6,0)
 ;       MODE     - "VIEW" or "EXPORT"
"RTN","PSOSPMUT",7,0)
 ;       BCKGRND  - Background? (1:YES / 0:NO)
"RTN","PSOSPMUT",8,0)
 ;       DEBUG    - Debug Mode? (1:YES / 0:NO)
"RTN","PSOSPMUT",9,0)
 N X,RX,STATEIEN,PSOASVER,TRXTYPE,PSOTTCNT,PSOTPCNT,SITEIEN,RXIEN,FILLNUM,FILLIEN,PATIEN,DFN,VADM
"RTN","PSOSPMUT",10,0)
 N RTSDATA,DATETIME,VAPA,XX,ASAP,LOCDIR,EXPFILE,EXPFILE2,FTPFILE,INPTFILE,DIE,DR,DA,PSOFTPOK,FILES
"RTN","PSOSPMUT",11,0)
 N PSODELOK,PSOOS,RTSONLY,PSOSTIP,PSOSTUSR,PSONAME,PSOPORT,PSOAUTO,PSOSTDIR,PSOFLEXT,RENAME,DRUGIEN
"RTN","PSOSPMUT",12,0)
 N PREIEN,RPHIEN,RTSREC,RXNODE
"RTN","PSOSPMUT",13,0)
 S BCKGRND=+$G(BCKGRND),DEBUG=+$G(DEBUG) K ^TMP("PSOSPMEX",$J)
"RTN","PSOSPMUT",14,0)
 ;
"RTN","PSOSPMUT",15,0)
 I +$$SPOK($$GET1^DIQ(58.42,BATCHIEN,1,"I"))=-1 D  Q
"RTN","PSOSPMUT",16,0)
 . D LOGERROR(BATCHIEN,0,$P($$SPOK($$GET1^DIQ(58.42,BATCHIEN,1,"I")),"^",2),BCKGRND)
"RTN","PSOSPMUT",17,0)
 ;
"RTN","PSOSPMUT",18,0)
 ; The LOCK below prevents two concurrent transmission processes from getting the same filename
"RTN","PSOSPMUT",19,0)
 F  S DATETIME=$P($$FMTHL7^XLFDT($$HTFM^XLFDT($H)),"-") L +@("PMP"_DATETIME):0 Q:$T  H 2
"RTN","PSOSPMUT",20,0)
 ;
"RTN","PSOSPMUT",21,0)
 S STATEIEN=$$GET1^DIQ(58.42,BATCHIEN,1,"I")
"RTN","PSOSPMUT",22,0)
 S PSOASVER=$$GET1^DIQ(58.41,STATEIEN,1,"I")
"RTN","PSOSPMUT",23,0)
 S PSOFLEXT=$$GET1^DIQ(58.41,STATEIEN,6)
"RTN","PSOSPMUT",24,0)
 S RENAME=$$GET1^DIQ(58.41,STATEIEN,17,"I")
"RTN","PSOSPMUT",25,0)
 S PSOSTIP=$$GET1^DIQ(58.41,STATEIEN,7)
"RTN","PSOSPMUT",26,0)
 S PSOPORT=$$GET1^DIQ(58.41,STATEIEN,9)
"RTN","PSOSPMUT",27,0)
 ; The commands below will first 'flush' and then add the IP Address to the known_hosts file
"RTN","PSOSPMUT",28,0)
 I MODE="EXPORT",$$OS^%ZOSV()="UNIX",$$UP^XLFSTR($$VERSION^%ZOSV(1))["CACHE" D
"RTN","PSOSPMUT",29,0)
 . X "S PV=$ZF(-1,""ssh -oBatchMode=yes -oStrictHostKeyChecking=no -oLogLevel=quiet"_$S(PSOPORT:" -oPort="_PSOPORT,1:"")_" "_PSOSTIP_""")"
"RTN","PSOSPMUT",30,0)
 ;
"RTN","PSOSPMUT",31,0)
 S PSOSTUSR=$$GET1^DIQ(58.41,STATEIEN,8)
"RTN","PSOSPMUT",32,0)
 S PSOSTDIR=$$GET1^DIQ(58.41,STATEIEN,10)
"RTN","PSOSPMUT",33,0)
 S PSOAUTO=$S($$GET1^DIQ(58.41,STATEIEN,13,"I")="A":1,1:0)
"RTN","PSOSPMUT",34,0)
 S PSOOS=$$OS^%ZOSV()
"RTN","PSOSPMUT",35,0)
 ;
"RTN","PSOSPMUT",36,0)
 I MODE="EXPORT",'$G(BCKGRND) W !!,"Exporting Batch #",BATCHIEN,":",!
"RTN","PSOSPMUT",37,0)
 ;
"RTN","PSOSPMUT",38,0)
 S RX=0
"RTN","PSOSPMUT",39,0)
 F  S RX=$O(^PS(58.42,BATCHIEN,"RX",RX)) Q:'RX  D
"RTN","PSOSPMUT",40,0)
 . S RXNODE=^PS(58.42,BATCHIEN,"RX",RX,0)
"RTN","PSOSPMUT",41,0)
 . S RXIEN=+RXNODE,FILLNUM=$P(RXNODE,"^",2),PATIEN=$$GET1^DIQ(52,RXIEN,2,"I")
"RTN","PSOSPMUT",42,0)
 . I MODE="EXPORT",$P(RXNODE,"^",3)'="V",'$$RXRLDT^PSOBPSUT(RXIEN,FILLNUM) Q
"RTN","PSOSPMUT",43,0)
 . I MODE="EXPORT",$P(RXNODE,"^",3)="V",$$RXRLDT^PSOBPSUT(RXIEN,FILLNUM) Q
"RTN","PSOSPMUT",44,0)
 . ; Always the Pharmacy Division for the Original Fill
"RTN","PSOSPMUT",45,0)
 . S SITEIEN=$$RXSITE^PSOBPSUT(RXIEN,0)
"RTN","PSOSPMUT",46,0)
 . S ^TMP("PSOSPMEX",$J,SITEIEN,PATIEN,RXIEN,FILLNUM)=$P(RXNODE,"^",3)
"RTN","PSOSPMUT",47,0)
 I '$D(^TMP("PSOSPMEX",$J)) D  L -@("PMP"_DATETIME) Q
"RTN","PSOSPMUT",48,0)
 . D LOGERROR(BATCHIEN,0,"There were no eligible prescriptions in the batch #"_BATCHIEN,BCKGRND)
"RTN","PSOSPMUT",49,0)
 ;
"RTN","PSOSPMUT",50,0)
 I MODE="VIEW",PSOASVER'="1995" S XX="",$P(XX,"-",80)="" W !,XX,!
"RTN","PSOSPMUT",51,0)
 I MODE="EXPORT" D  I $P(FILES,"^",1)=-1 L -@("PMP"_DATETIME) Q
"RTN","PSOSPMUT",52,0)
 . S RTSONLY=0 I $$GET1^DIQ(58.42,BATCHIEN,2,"I")="VD" S RTSONLY=1
"RTN","PSOSPMUT",53,0)
 . I PSOOS["VMS" S LOCDIR=$$GET1^DIQ(58.41,STATEIEN,4)
"RTN","PSOSPMUT",54,0)
 . I PSOOS["UNIX" D
"RTN","PSOSPMUT",55,0)
 . . S LOCDIR=$$GET1^DIQ(58.41,STATEIEN,15)
"RTN","PSOSPMUT",56,0)
 . . I '$$DIREXIST^PSOSPMU1(LOCDIR) D MAKEDIR^PSOSPMU1(LOCDIR)
"RTN","PSOSPMUT",57,0)
 . S FILES=$$PREPFILE^PSOSPMU1(STATEIEN,DATETIME,RTSONLY,DEBUG)
"RTN","PSOSPMUT",58,0)
 . I $P(FILES,"^",1)=-1 D LOGERROR(BATCHIEN,0,$P(FILES,"^",2),BCKGRND) Q
"RTN","PSOSPMUT",59,0)
 . S EXPFILE=$P(FILES,"^",2)
"RTN","PSOSPMUT",60,0)
 . S FTPFILE=$P(FILES,"^",3)
"RTN","PSOSPMUT",61,0)
 . S INPTFILE=$P(FILES,"^",4)
"RTN","PSOSPMUT",62,0)
 . S LOGFILE=$P(FILES,"^",5)
"RTN","PSOSPMUT",63,0)
 . S EXPFILE2=$P(FILES,"^",6)
"RTN","PSOSPMUT",64,0)
 . I 'BCKGRND W !,$S('PSOAUTO:"Step 1: ",1:""),"Writing to file ",LOCDIR_EXPFILE,"..."
"RTN","PSOSPMUT",65,0)
 . D OPEN^%ZISH("EXPFILE",LOCDIR,EXPFILE,"W")
"RTN","PSOSPMUT",66,0)
 . I POP D LOGERROR(BATCHIEN,0,"Export File <"_LOCDIR_EXPFILE_"> could not be created.",BCKGRND) S FILES=-1 Q
"RTN","PSOSPMUT",67,0)
 . D USE^%ZISUTL("EXPFILE")
"RTN","PSOSPMUT",68,0)
 ;----------------------------- ASAP Data Output (1995) -------------------------------
"RTN","PSOSPMUT",69,0)
 I PSOASVER="1995" D
"RTN","PSOSPMUT",70,0)
 . S (SITEIEN,PATIEN,RXIEN)=0
"RTN","PSOSPMUT",71,0)
 . F  S SITEIEN=$O(^TMP("PSOSPMEX",$J,SITEIEN)) Q:'SITEIEN  D
"RTN","PSOSPMUT",72,0)
 . . F  S PATIEN=$O(^TMP("PSOSPMEX",$J,SITEIEN,PATIEN)) Q:'PATIEN  D
"RTN","PSOSPMUT",73,0)
 . . . K VADM,VAPA,PSONAME S DFN=PATIEN D DEM^VADPT,ADD^VADPT,SETNAME(PATIEN)
"RTN","PSOSPMUT",74,0)
 . . . F  S RXIEN=$O(^TMP("PSOSPMEX",$J,SITEIEN,PATIEN,RXIEN)) Q:'RXIEN  D
"RTN","PSOSPMUT",75,0)
 . . . . S FILLNUM=""
"RTN","PSOSPMUT",76,0)
 . . . . F  S FILLNUM=$O(^TMP("PSOSPMEX",$J,SITEIEN,PATIEN,RXIEN,FILLNUM)) Q:FILLNUM=""  D
"RTN","PSOSPMUT",77,0)
 . . . . . S RECTYPE=^TMP("PSOSPMEX",$J,SITEIEN,PATIEN,RXIEN,FILLNUM)
"RTN","PSOSPMUT",78,0)
 . . . . . K RTSDATA I RECTYPE="V" D LOADRTS^PSOSPMU1(RXIEN,FILLNUM,.RTSDATA)
"RTN","PSOSPMUT",79,0)
 . . . . . W $$ASAP95^PSOASAP0(RXIEN,+FILLNUM),!
"RTN","PSOSPMUT",80,0)
 ;------------------------- ASAP Data Output (3.0 and above) --------------------------
"RTN","PSOSPMUT",81,0)
 I PSOASVER'="1995" D
"RTN","PSOSPMUT",82,0)
 . S TRXTYPE="S",PSOTTCNT=0
"RTN","PSOSPMUT",83,0)
 . D LOADASAP^PSOSPMU0(PSOASVER,"B",.ASAP)
"RTN","PSOSPMUT",84,0)
 . S (SITEIEN,PATIEN,RXIEN)=0
"RTN","PSOSPMUT",85,0)
 . ;Writing Level 1: Transaction Header, Information Source
"RTN","PSOSPMUT",86,0)
 . D WRITELEV(1,"ASAP")
"RTN","PSOSPMUT",87,0)
 . F  S SITEIEN=$O(^TMP("PSOSPMEX",$J,SITEIEN)) Q:'SITEIEN  D
"RTN","PSOSPMUT",88,0)
 . . S PSOTPCNT=0
"RTN","PSOSPMUT",89,0)
 . . ;Writing Level 2: Pharmacy Header
"RTN","PSOSPMUT",90,0)
 . . D WRITELEV(2,"ASAP")
"RTN","PSOSPMUT",91,0)
 . . F  S PATIEN=$O(^TMP("PSOSPMEX",$J,SITEIEN,PATIEN)) Q:'PATIEN  D
"RTN","PSOSPMUT",92,0)
 . . . K VADM,VAPA,PSONAME S DFN=PATIEN D DEM^VADPT,ADD^VADPT,SETNAME(PATIEN)
"RTN","PSOSPMUT",93,0)
 . . . S (DRUGIEN,FILLNUM,FILLIEN,PREIEN,RPHIEN,RTSREC)=0
"RTN","PSOSPMUT",94,0)
 . . . ;Writing Level 3: Patient Detail
"RTN","PSOSPMUT",95,0)
 . . . D WRITELEV(3,"ASAP")
"RTN","PSOSPMUT",96,0)
 . . . F  S RXIEN=$O(^TMP("PSOSPMEX",$J,SITEIEN,PATIEN,RXIEN)) Q:'RXIEN  D
"RTN","PSOSPMUT",97,0)
 . . . . S FILLNUM="",DRUGIEN=$$GET1^DIQ(52,RXIEN,6,"I")
"RTN","PSOSPMUT",98,0)
 . . . . F  S FILLNUM=$O(^TMP("PSOSPMEX",$J,SITEIEN,PATIEN,RXIEN,FILLNUM)) Q:FILLNUM=""  D
"RTN","PSOSPMUT",99,0)
 . . . . . S FILLIEN=$S(FILLNUM["P":+$P(FILLNUM,"P",2),1:+FILLNUM)
"RTN","PSOSPMUT",100,0)
 . . . . . S RECTYPE=^TMP("PSOSPMEX",$J,SITEIEN,PATIEN,RXIEN,FILLNUM)
"RTN","PSOSPMUT",101,0)
 . . . . . S PREIEN=$$PREIEN(RECTYPE,RXIEN,FILLNUM)
"RTN","PSOSPMUT",102,0)
 . . . . . S RPHIEN=$$RPHIEN(RECTYPE,RXIEN,FILLNUM)
"RTN","PSOSPMUT",103,0)
 . . . . . S RTSREC=0 K RTSDATA I RECTYPE="V" S RTSREC=1 D LOADRTS^PSOSPMU1(RXIEN,FILLNUM,.RTSDATA)
"RTN","PSOSPMUT",104,0)
 . . . . . ;Writing Level 4: Prescription Detail
"RTN","PSOSPMUT",105,0)
 . . . . . D WRITELEV(4,"ASAP")
"RTN","PSOSPMUT",106,0)
 . . ;Writing Level 5: Pharmacy Trailer
"RTN","PSOSPMUT",107,0)
 . . D WRITELEV(5,"ASAP")
"RTN","PSOSPMUT",108,0)
 . ;Writing Level 6: Transaction Trailer
"RTN","PSOSPMUT",109,0)
 . D WRITELEV(6,"ASAP")
"RTN","PSOSPMUT",110,0)
   ; Close the file
"RTN","PSOSPMUT",111,0)
 I MODE="EXPORT" D CLOSE^%ZISH("EXPFILE") I 'BCKGRND W "Done."
"RTN","PSOSPMUT",112,0)
 ;------------------------- sFTP Transmission to the State -----------------------------
"RTN","PSOSPMUT",113,0)
 I MODE="VIEW",PSOASVER'="1995" S XX="",$P(XX,"-",80)="" W !,XX
"RTN","PSOSPMUT",114,0)
 S (PSOFTPOK,PSODELOK)=""
"RTN","PSOSPMUT",115,0)
 I MODE="EXPORT" D
"RTN","PSOSPMUT",116,0)
 . ; Automated Transmission (RSA keys)
"RTN","PSOSPMUT",117,0)
 . I PSOAUTO D
"RTN","PSOSPMUT",118,0)
 . . I 'BCKGRND W !!,"Transmitting file to the State (",$$GET1^DIQ(58.41,STATEIEN,7),")...",!
"RTN","PSOSPMUT",119,0)
 . . S PSOFTPOK=$$FTPFILE^PSOSPMU1(PSOSTIP,PSOSTUSR,LOCDIR,FTPFILE,EXPFILE,INPTFILE,LOGFILE,PSOPORT,DEBUG)
"RTN","PSOSPMUT",120,0)
 . ; Manual Transmission (Password)
"RTN","PSOSPMUT",121,0)
 . K DTOUT,DUOUT
"RTN","PSOSPMUT",122,0)
 . I 'PSOAUTO D
"RTN","PSOSPMUT",123,0)
 . . W !!,"Step 2: Copy the "_$S(PSOSTDIR'="":"four",1:"three")_" lines of text below into the clipboard (highlight the"
"RTN","PSOSPMUT",124,0)
 . . W !?8,"lines then right-click the  mouse and select 'Copy').",!
"RTN","PSOSPMUT",125,0)
 . . W:$G(PSOSTDIR)'="" !,"cd "_PSOSTDIR
"RTN","PSOSPMUT",126,0)
 . . W !,"put "_$S(PSOOS["VMS":$$XVMSDIR^PSOSPMU1(LOCDIR),1:LOCDIR)_EXPFILE
"RTN","PSOSPMUT",127,0)
 . . W:$G(RENAME) !,"rename "_EXPFILE_" "_$P(EXPFILE,".up",1)_PSOFLEXT
"RTN","PSOSPMUT",128,0)
 . . W !,"exit",!
"RTN","PSOSPMUT",129,0)
 . . K DIR,DTOUT,DUOUT S DIR(0)="E",DIR("A")="Then press <RETURN> to go to the next step." D ^DIR I $G(DTOUT)!$G(DUOUT) Q
"RTN","PSOSPMUT",130,0)
 . . W !!,"Step 3: Enter the sFTP password and press <RETURN>"
"RTN","PSOSPMUT",131,0)
 . . W !!,"Step 4: Once you get the 'sftp>' prompt, paste the text copied on step 2"
"RTN","PSOSPMUT",132,0)
 . . W !?8,"(right-click the mouse and select 'Paste').",!!
"RTN","PSOSPMUT",133,0)
 . . N XPV1,PV S XPV1="S PV=$ZF(-1,""sftp"_$S(PSOPORT:" -oPort="_PSOPORT,1:"")_" -oUser="_$TR(PSOSTUSR,"""","")_" "_PSOSTIP_""")"
"RTN","PSOSPMUT",134,0)
 . . X XPV1
"RTN","PSOSPMUT",135,0)
 . I $P(PSOFTPOK,"^",1)=-1 D LOGERROR(BATCHIEN,0,$P(PSOFTPOK,"^",2),BCKGRND,$G(LOGFILE))
"RTN","PSOSPMUT",136,0)
 . ;Deleting files
"RTN","PSOSPMUT",137,0)
 . D DELFILES^PSOSPMU1($G(LOCDIR),$G(EXPFILE),$G(INPTFILE),$G(FTPFILE),$G(LOGFILE))
"RTN","PSOSPMUT",138,0)
 . I $P(PSOFTPOK,"^",1)=-1 Q
"RTN","PSOSPMUT",139,0)
 . I 'PSOAUTO,$G(DTOUT)!$G(DUOUT) Q
"RTN","PSOSPMUT",140,0)
 . I 'BCKGRND,PSOAUTO H 1 W !!,"File Successfully Transmitted.",!
"RTN","PSOSPMUT",141,0)
 . I 'PSOAUTO D  I $G(DTOUT)!$G(DUOUT)!'Y Q
"RTN","PSOSPMUT",142,0)
 . . K DIR S DIR("A")="Was the file transmitted successfully",DIR(0)="Y",DIR("B")="N"
"RTN","PSOSPMUT",143,0)
 . . D ^DIR
"RTN","PSOSPMUT",144,0)
 . S DIE="^PS(58.42,",DA=BATCHIEN,DR="6///"_EXPFILE2_";7////"_DUZ_";9///"_$$NOW^XLFDT() D ^DIE
"RTN","PSOSPMUT",145,0)
 W ! L -@("PMP"_DATETIME)
"RTN","PSOSPMUT",146,0)
 Q
"RTN","PSOSPMUT",147,0)
 ;
"RTN","PSOSPMUT",148,0)
WRITELEV(LEVEL,ARRAY) ; Write the ASAP Segments for each Level
"RTN","PSOSPMUT",149,0)
 ;Input: LEVEL - ASAP level to print (1:Header, 2:Pharmacy, ...)
"RTN","PSOSPMUT",150,0)
 ;       ARRAY - Name of the Array containing the ASAP Data Definition (e.g., "ASAP")
"RTN","PSOSPMUT",151,0)
 N NODE,SEGID,SEG0
"RTN","PSOSPMUT",152,0)
 S NODE=ARRAY
"RTN","PSOSPMUT",153,0)
 F  S NODE=$Q(@NODE)  Q:NODE=""!($E(NODE,$F(NODE,"("))'?1N)  D
"RTN","PSOSPMUT",154,0)
 . S SEGID=@NODE I SEGID="" Q
"RTN","PSOSPMUT",155,0)
 . S SEG0=$G(@(ARRAY_"("""_SEGID_""")"))
"RTN","PSOSPMUT",156,0)
 . ; Segment not in the Level
"RTN","PSOSPMUT",157,0)
 . I $P(SEG0,"^",6)'=LEVEL Q
"RTN","PSOSPMUT",158,0)
 . ; Segment Marked NOT USED
"RTN","PSOSPMUT",159,0)
 . I $P(SEG0,"^",4)="N" Q
"RTN","PSOSPMUT",160,0)
 . D WRITESEG(SEGID,LEVEL,ARRAY)
"RTN","PSOSPMUT",161,0)
 Q
"RTN","PSOSPMUT",162,0)
 ;
"RTN","PSOSPMUT",163,0)
WRITESEG(SEGID,LEVEL,ARRAY) ; Write the ASAP segment to the file
"RTN","PSOSPMUT",164,0)
 ;Input: SEGID - ASAP Segment ID (e.g., "TH", "PAT", "DSP", ...)
"RTN","PSOSPMUT",165,0)
 ;       LEVEL - ASAP level to print (1:Header, 2:Pharmacy, ...)
"RTN","PSOSPMUT",166,0)
 ;       ARRAY - Name of the Array containing the ASAP Data Definition (e.g., "ASAP")
"RTN","PSOSPMUT",167,0)
 N ELMPOS,LASTELEM
"RTN","PSOSPMUT",168,0)
 I '$D(@ARRAY@(SEGID)) Q
"RTN","PSOSPMUT",169,0)
 I $G(MODE)="VIEW",$P(@ARRAY,"^",4)'="" W ?$S(LEVEL<5:((LEVEL-1)*3),LEVEL=5:3,1:0)
"RTN","PSOSPMUT",170,0)
 S LASTELEM=+$O(@ARRAY@(SEGID,""),-1)
"RTN","PSOSPMUT",171,0)
 W SEGID D SEGCOUNT(LEVEL)
"RTN","PSOSPMUT",172,0)
 F ELMPOS=1:1:LASTELEM D
"RTN","PSOSPMUT",173,0)
 . ;Skipping Last Element if marked NOT USED (to solve issue with TH09 for 4.0 and TH13 for 3.0)
"RTN","PSOSPMUT",174,0)
 . I ELMPOS=LASTELEM,$P(@ARRAY@(SEGID,ELMPOS),"^",6)="N" Q
"RTN","PSOSPMUT",175,0)
 . ;Data Element Delimiter Char
"RTN","PSOSPMUT",176,0)
 . W $P(@ARRAY,"^",2)
"RTN","PSOSPMUT",177,0)
 . ; ASAP Data Element Marked NOT USED
"RTN","PSOSPMUT",178,0)
 . I $P(@ARRAY@(SEGID,ELMPOS),"^",6)="N" Q
"RTN","PSOSPMUT",179,0)
 . ; Writing Data Element Content to the file
"RTN","PSOSPMUT",180,0)
 . D WRITEELM(SEGID,ELMPOS,ARRAY)
"RTN","PSOSPMUT",181,0)
 ; Segment Terminator Character
"RTN","PSOSPMUT",182,0)
 W $P(@ARRAY,"^",3)
"RTN","PSOSPMUT",183,0)
 ; End of Segment Control Char(s) (e.g., Line-Feed ($C(10)), Carriage-Return ($C(13)),etc.)
"RTN","PSOSPMUT",184,0)
 W:$P(@ARRAY,"^",4)'="" @($P(@ARRAY,"^",4))
"RTN","PSOSPMUT",185,0)
 Q
"RTN","PSOSPMUT",186,0)
 ;
"RTN","PSOSPMUT",187,0)
WRITEELM(SEGID,ELMPOS,ARRAY) ; Write the ASAP Data Element to file
"RTN","PSOSPMUT",188,0)
 ;Input: SEGID  - ASAP Segment ID (e.g., "TH", "PAT", "DSP", ...)
"RTN","PSOSPMUT",189,0)
 ;       ELMPOS - ASAP Data Element Position (1, 2, 3, ...)
"RTN","PSOSPMUT",190,0)
 ;       ARRAY  - Name of the Array containing the ASAP Data Definition (e.g., "ASAP")
"RTN","PSOSPMUT",191,0)
 N MEXPR,GETVALUE,VALUE,MAXLEN
"RTN","PSOSPMUT",192,0)
 S MEXPR=$G(@ARRAY@(SEGID,ELMPOS,"VAL",1))
"RTN","PSOSPMUT",193,0)
 ; Rechecking the M Expression value for Security purposes
"RTN","PSOSPMUT",194,0)
 I '$$VALID^PSOSPMU3($P(@ARRAY,"^"),MEXPR) W "?" Q
"RTN","PSOSPMUT",195,0)
 ; Retrieving and executing the M code for retrieving the ASAP Data Element value
"RTN","PSOSPMUT",196,0)
 D
"RTN","PSOSPMUT",197,0)
 . N $ETRAP,$ESTACK S $ETRAP="D ERROR^PSOSPMUT"
"RTN","PSOSPMUT",198,0)
 . S GETVALUE="S VALUE="_MEXPR X GETVALUE
"RTN","PSOSPMUT",199,0)
 ; Removing Control Characters from the Data Element Value
"RTN","PSOSPMUT",200,0)
 S VALUE=$$ESC(VALUE)
"RTN","PSOSPMUT",201,0)
 ; Triming Value according to the Data Element Maximum Length
"RTN","PSOSPMUT",202,0)
 S MAXLEN=$P($G(@ARRAY@(SEGID,ELMPOS)),"^",4) S:MAXLEN>0 VALUE=$E(VALUE,1,MAXLEN)
"RTN","PSOSPMUT",203,0)
 ; Replacing characters that match Segment Delimiter chars with "?"
"RTN","PSOSPMUT",204,0)
 I MAXLEN>1,VALUE'=$P(@ARRAY,"^",3) S VALUE=$TR(VALUE,$P(@ARRAY,"^",3),"?")
"RTN","PSOSPMUT",205,0)
 ; Replacing characters that match Data Element Delimiter chars with "?"
"RTN","PSOSPMUT",206,0)
 I MAXLEN>1,VALUE'=$P(@ARRAY,"^",2) S VALUE=$TR(VALUE,$P(@ARRAY,"^",2),"?")
"RTN","PSOSPMUT",207,0)
 ; Writing the Data Element Value
"RTN","PSOSPMUT",208,0)
 W VALUE
"RTN","PSOSPMUT",209,0)
 Q
"RTN","PSOSPMUT",210,0)
 ;
"RTN","PSOSPMUT",211,0)
SEGCOUNT(LEVEL) ; Keeps track of Segment Count for TP and TT info
"RTN","PSOSPMUT",212,0)
 ;Input: LEVEL - Level of the Segment where the Data Element is located
"RTN","PSOSPMUT",213,0)
 ; TT Segment Count
"RTN","PSOSPMUT",214,0)
 S PSOTTCNT=$G(PSOTTCNT)+1
"RTN","PSOSPMUT",215,0)
 ; TP Segment Count
"RTN","PSOSPMUT",216,0)
 I LEVEL'=1,LEVEL'=6 S PSOTPCNT=$G(PSOTPCNT)+1
"RTN","PSOSPMUT",217,0)
 Q
"RTN","PSOSPMUT",218,0)
 ;
"RTN","PSOSPMUT",219,0)
ERROR ; Error Trap Handling to catch errors on user-entered M SET expressions
"RTN","PSOSPMUT",220,0)
 N ERROR
"RTN","PSOSPMUT",221,0)
 D CLOSE^%ZISH("EXPFILE")
"RTN","PSOSPMUT",222,0)
 S ERROR="ASAP Data Element: "_$G(SEGID)_$E(100+$G(ELMPOS),2,3)_"  M Expression: "_$G(MEXPR)_"  Error: "_$$EC^%ZOSV
"RTN","PSOSPMUT",223,0)
 D LOGERROR($G(BATCHIEN),0,ERROR,$G(BCKGRND))
"RTN","PSOSPMUT",224,0)
 D DELFILES^PSOSPMU1($G(LOCDIR),$G(EXPFILE),$G(INPTFILE),$G(FTPFILE))
"RTN","PSOSPMUT",225,0)
 Q
"RTN","PSOSPMUT",226,0)
 ;
"RTN","PSOSPMUT",227,0)
SCREEN(RXIEN,FILLNUM) ; Screens Rx's from being sent to the State
"RTN","PSOSPMUT",228,0)
 ; Input: RXIEN   - PRESCRIPTION file (#52) IEN
"RTN","PSOSPMUT",229,0)
 ;        FILLNUM - Fill Number
"RTN","PSOSPMUT",230,0)
 ;Output: $$SCREEN  - 1:YES/0:NO^Error/Warning Message^E:Error/W:Warning
"RTN","PSOSPMUT",231,0)
 ;
"RTN","PSOSPMUT",232,0)
 ; Not a Controlled Substance
"RTN","PSOSPMUT",233,0)
 I '$$CSRX(RXIEN) Q "1^"_$$GET1^DIQ(52,RXIEN,6)_" is not a Controlled Substance Drug.^E"
"RTN","PSOSPMUT",234,0)
 ;
"RTN","PSOSPMUT",235,0)
 ; Fills Administered in Clinic exclusion
"RTN","PSOSPMUT",236,0)
 I $$ADMCLN(RXIEN,FILLNUM) Q "1^Prescription fill was administered in clinic.^E"
"RTN","PSOSPMUT",237,0)
 ;
"RTN","PSOSPMUT",238,0)
 ; Released prior to Transmission Authorization Date (02/11/2013)
"RTN","PSOSPMUT",239,0)
 I $$RXRLDT^PSOBPSUT(RXIEN,FILLNUM),$$RXRLDT^PSOBPSUT(RXIEN,FILLNUM)<3130211 Q "1^Prescription fill released before 02/11/2013.^E"
"RTN","PSOSPMUT",240,0)
 ;
"RTN","PSOSPMUT",241,0)
 ; Non-Veteran Patient Exclusion (Based on parameter)
"RTN","PSOSPMUT",242,0)
 N STATE,DFN,VAEL
"RTN","PSOSPMUT",243,0)
 S STATE=$$RXSTATE^PSOBPSUT(RXIEN,0)
"RTN","PSOSPMUT",244,0)
 I '$$GET1^DIQ(58.41,STATE,2,"I") D  I '$G(VAEL(4)) Q "1^Patient "_$$GET1^DIQ(52,RXIEN,2)_" is not a Veteran.^E"
"RTN","PSOSPMUT",245,0)
 . S DFN=$$GET1^DIQ(52,RXIEN,2,"I") D ELIG^VADPT
"RTN","PSOSPMUT",246,0)
 ;
"RTN","PSOSPMUT",247,0)
 Q 0
"RTN","PSOSPMUT",248,0)
 ;
"RTN","PSOSPMUT",249,0)
CSRX(RXIEN) ; Controlled Substance Rx?
"RTN","PSOSPMUT",250,0)
 ; Input: RXIEN - PRESCRIPTION file (#52) pointer
"RTN","PSOSPMUT",251,0)
 ;Output: $$CS  - 1:YES / 0:NO
"RTN","PSOSPMUT",252,0)
 N DRGIEN,DEA
"RTN","PSOSPMUT",253,0)
 S DRGIEN=$$GET1^DIQ(52,RXIEN,6,"I") I 'DRGIEN Q 0
"RTN","PSOSPMUT",254,0)
 S DEA=$$GET1^DIQ(50,DRGIEN,3)
"RTN","PSOSPMUT",255,0)
 I (DEA'["0"),(DEA'["M"),(DEA["2")!(DEA["3")!(DEA["4")!(DEA["5") Q 1
"RTN","PSOSPMUT",256,0)
 Q 0
"RTN","PSOSPMUT",257,0)
 ;
"RTN","PSOSPMUT",258,0)
ADMCLN(RXIEN,FILL) ; Returns whether the fill was administered in clinic or not
"RTN","PSOSPMUT",259,0)
 ; Input:  (r) RXIEN - Rx IEN (#52) 
"RTN","PSOSPMUT",260,0)
 ;         (o) FILL  - Refill # 
"RTN","PSOSPMUT",261,0)
 ; Output: 1 - Yes (Administered in Clinic) / 0 - No
"RTN","PSOSPMUT",262,0)
 N ADMCLN
"RTN","PSOSPMUT",263,0)
 I '$G(RXIEN) Q 0
"RTN","PSOSPMUT",264,0)
 I 'FILL S ADMCLN=+$$GET1^DIQ(52,RXIEN,14,"I")
"RTN","PSOSPMUT",265,0)
 I FILL S ADMCLN=+$$GET1^DIQ(52.1,FILL_","_RXIEN,23,"I")
"RTN","PSOSPMUT",266,0)
 Q ADMCLN
"RTN","PSOSPMUT",267,0)
 ;
"RTN","PSOSPMUT",268,0)
SPOK(STATE) ; State Parameters OK?
"RTN","PSOSPMUT",269,0)
 ; Input: STATE - STATE file (#5) pointer
"RTN","PSOSPMUT",270,0)
 N ZNODE,FNODE,F1NODE,X,STATENAM
"RTN","PSOSPMUT",271,0)
 S STATENAM=$$GET1^DIQ(5,+$G(STATE),.01)
"RTN","PSOSPMUT",272,0)
 I '$D(^PS(58.41,+$G(STATE),0)) Q "-1^PMP parameters missing for "_STATENAM
"RTN","PSOSPMUT",273,0)
 S ZNODE=$G(^PS(58.41,STATE,0))
"RTN","PSOSPMUT",274,0)
 I $P(ZNODE,"^",2)="" Q "-1^ASAP Version missing for "_STATENAM
"RTN","PSOSPMUT",275,0)
 I $P(ZNODE,"^",4)="" Q "-1^Reporting Frequency missing for "_STATENAM
"RTN","PSOSPMUT",276,0)
 S FNODE=$G(^PS(58.41,STATE,"FILE"))
"RTN","PSOSPMUT",277,0)
 S F1NODE=$G(^PS(58.41,STATE,"FILE1"))
"RTN","PSOSPMUT",278,0)
 I $$OS^%ZOSV()["VMS",$P(FNODE,"^",1)="" Q "-1^Local VMS Directory missing for "_STATENAM
"RTN","PSOSPMUT",279,0)
 I $$OS^%ZOSV()["UNIX",$P(F1NODE,"^",1)="" Q "-1^Local Unix/Linux Directory missing for "_STATENAM
"RTN","PSOSPMUT",280,0)
 I $P(FNODE,"^",4)="" Q "-1^State FTP Server IP Address missing for "_STATENAM
"RTN","PSOSPMUT",281,0)
 I $P(FNODE,"^",5)="" Q "-1^State FTP Server username missing for "_STATENAM
"RTN","PSOSPMUT",282,0)
 I $P(ZNODE,"^",6)="A",'$O(^PS(58.41,STATE,"PRVKEY",0)) Q "-1^SSH Keys missing for "_STATENAM
"RTN","PSOSPMUT",283,0)
 Q 1
"RTN","PSOSPMUT",284,0)
 ;
"RTN","PSOSPMUT",285,0)
SETNAME(DFN) ; Set array variable PSONAME with Patient name
"RTN","PSOSPMUT",286,0)
 N NCIEN K PSONAME
"RTN","PSOSPMUT",287,0)
 S NCIEN=$$GET1^DIQ(2,DFN,1.01,"I")
"RTN","PSOSPMUT",288,0)
 I NCIEN,$$GET1^DIQ(20,NCIEN,1)'="",$$GET1^DIQ(20,NCIEN,2)'="" D  Q
"RTN","PSOSPMUT",289,0)
 . S PSONAME("LAST")=$$GET1^DIQ(20,NCIEN,1)
"RTN","PSOSPMUT",290,0)
 . S PSONAME("FIRST")=$$GET1^DIQ(20,NCIEN,2)
"RTN","PSOSPMUT",291,0)
 . S PSONAME("MIDDLE")=$$GET1^DIQ(20,NCIEN,3)
"RTN","PSOSPMUT",292,0)
 . S PSONAME("SUFFIX")=$$GET1^DIQ(20,NCIEN,4)
"RTN","PSOSPMUT",293,0)
 . S PSONAME("PREFIX")=$$GET1^DIQ(20,NCIEN,5)
"RTN","PSOSPMUT",294,0)
 ;
"RTN","PSOSPMUT",295,0)
 S PSONAME("LAST")=$P($G(VADM(1)),",",1)
"RTN","PSOSPMUT",296,0)
 S PSONAME("FIRST")=$P($P($G(VADM(1)),",",2)," ",1)
"RTN","PSOSPMUT",297,0)
 S PSONAME("MIDDLE")=$P($P($G(VADM(1)),",",2)," ",2)
"RTN","PSOSPMUT",298,0)
 S PSONAME("SUFFIX")=""
"RTN","PSOSPMUT",299,0)
 S PSONAME("PREFIX")=""
"RTN","PSOSPMUT",300,0)
 Q
"RTN","PSOSPMUT",301,0)
 ;
"RTN","PSOSPMUT",302,0)
LOGERROR(BATCHIEN,STATEIEN,ERROR,BCKGRND,LOGFILE) ; Log/Display an error in the transmission
"RTN","PSOSPMUT",303,0)
 ;Input: (r) BATCHIEN - Pointer to the SPMP EXPORT BATCH file (#58.42)
"RTN","PSOSPMUT",304,0)
 ;       (r) STATEIEN - Pointer ot the STATE file (#5)
"RTN","PSOSPMUT",305,0)
 ;       (r) ERROR    - Error Text
"RTN","PSOSPMUT",306,0)
 ;       (r) BCKGRND  - Background execution (1: Yes / 0: No)
"RTN","PSOSPMUT",307,0)
 ;       (o) LOGFILE  - Filename of the file containing the sFTP Log (VMS only)
"RTN","PSOSPMUT",308,0)
 I '$G(BCKGRND) W !!,ERROR,!,$C(7) Q
"RTN","PSOSPMUT",309,0)
 ;
"RTN","PSOSPMUT",310,0)
 ;Builds mail message and sends it to users of PSO SPMP NOTIFICATIONS mail group
"RTN","PSOSPMUT",311,0)
 N XMDUZ,XMMG,XMSUB,XMTEXT,XMY,XMZ,PSOMSG,USR,STANAME,LINE
"RTN","PSOSPMUT",312,0)
 ;
"RTN","PSOSPMUT",313,0)
 S STANAME=$S($G(BATCHIEN):$$GET1^DIQ(58.42,BATCHIEN,1),1:$$GET1^DIQ(5,STATEIEN,.01))
"RTN","PSOSPMUT",314,0)
 S XMSUB=STANAME_" Prescription Monitoring Program Transmission Failed"
"RTN","PSOSPMUT",315,0)
 S XMDUZ="SPMP TRANSMISSION"
"RTN","PSOSPMUT",316,0)
 S PSOMSG(1)="There was a problem with the transmission of information about Controlled"
"RTN","PSOSPMUT",317,0)
 S PSOMSG(2)="Substance prescriptions to the "_STANAME_" State Prescription Monitoring"
"RTN","PSOSPMUT",318,0)
 s PSOMSG(3)="Program (SPMP)."
"RTN","PSOSPMUT",319,0)
 S PSOMSG(4)="",LINE=5
"RTN","PSOSPMUT",320,0)
 I $G(BATCHIEN) D
"RTN","PSOSPMUT",321,0)
 . S PSOMSG(LINE)="Batch #: "_BATCHIEN,LINE=LINE+1
"RTN","PSOSPMUT",322,0)
 . I $$GET1^DIQ(58.42,BATCHIEN,4,"I") D
"RTN","PSOSPMUT",323,0)
 . . S PSOMSG(LINE)="Period : "_$$FMTE^XLFDT($$GET1^DIQ(58.42,BATCHIEN,4,"I")\1,"2Z")
"RTN","PSOSPMUT",324,0)
 . . S PSOMSG(LINE)=PSOMSG(LINE)_" thru "_$$FMTE^XLFDT($$GET1^DIQ(58.42,BATCHIEN,5,"I")\1,"2Z"),LINE=LINE+1
"RTN","PSOSPMUT",325,0)
 . S PSOMSG(LINE)="Error  : "_ERROR,LINE=LINE+1
"RTN","PSOSPMUT",326,0)
 . S PSOMSG(LINE)="",LINE=LINE+1
"RTN","PSOSPMUT",327,0)
 . S PSOMSG(LINE)="Please, use the option Export Batch Processing [PSO SPMP BATCH PROCESSING] to",LINE=LINE+1
"RTN","PSOSPMUT",328,0)
 . S PSOMSG(LINE)="manually transmit this batch to the state.",LINE=LINE+1
"RTN","PSOSPMUT",329,0)
 E  S PSOMSG(LINE)="Error  : "_ERROR,LINE=LINE+1
"RTN","PSOSPMUT",330,0)
 S XMTEXT="PSOMSG("
"RTN","PSOSPMUT",331,0)
 ;
"RTN","PSOSPMUT",332,0)
 ; Loading the VMS Log into the Mailman Message
"RTN","PSOSPMUT",333,0)
 I $G(LOGFILE)'="" D
"RTN","PSOSPMUT",334,0)
 . N LOCDIR,FILEARR,LOG,XLOG
"RTN","PSOSPMUT",335,0)
 . S LOCDIR=$$GET1^DIQ(58.41,+$$GET1^DIQ(58.42,BATCHIEN,1,"I"),$S($$OS^%ZOSV()["VMS":4,1:15)) I LOCDIR="" Q
"RTN","PSOSPMUT",336,0)
 . I '$$FEXIST(LOCDIR,LOGFILE) Q
"RTN","PSOSPMUT",337,0)
 . S PSOMSG(LINE)="",LINE=LINE+1
"RTN","PSOSPMUT",338,0)
 . S PSOMSG(LINE)="sFTP Log:",LINE=LINE+1
"RTN","PSOSPMUT",339,0)
 . S PSOMSG(LINE)="========",LINE=LINE+1
"RTN","PSOSPMUT",340,0)
 . K ^TMP("PSOFTPLG",$J)
"RTN","PSOSPMUT",341,0)
 . S XLOG=$$FTG^%ZISH(LOCDIR,LOGFILE,$NAME(^TMP("PSOFTPLG",$J,1)),3)
"RTN","PSOSPMUT",342,0)
 . S LOG=0 F  S LOG=$O(^TMP("PSOFTPLG",$J,LOG)) Q:LOG=""  D
"RTN","PSOSPMUT",343,0)
 . . S PSOMSG(LINE)=$G(^TMP("PSOFTPLG",$J,LOG)),LINE=LINE+1
"RTN","PSOSPMUT",344,0)
 ;
"RTN","PSOSPMUT",345,0)
 ; If there are no active members in the mailgroup sends message to PSDMGR key holders
"RTN","PSOSPMUT",346,0)
 I $$GOTLOCAL^XMXAPIG("PSO SPMP NOTIFICATIONS") D
"RTN","PSOSPMUT",347,0)
 . S XMY("G.PSO SPMP NOTIFICATIONS")=""
"RTN","PSOSPMUT",348,0)
 E  D
"RTN","PSOSPMUT",349,0)
 . S USR=0 F  S USR=$O(^XUSEC("PSDMGR",USR)) Q:'USR  S XMY(USR)=""
"RTN","PSOSPMUT",350,0)
 D ^XMD
"RTN","PSOSPMUT",351,0)
 Q
"RTN","PSOSPMUT",352,0)
 ;
"RTN","PSOSPMUT",353,0)
PREIEN(RECTYPE,RXIEN,FILLNUM) ; Returns the Provider IEN
"RTN","PSOSPMUT",354,0)
 ;Input: RECTYPE  - Record Type ('S': SEND, 'R': REVIEW, 'V': VOID)
"RTN","PSOSPMUT",355,0)
 ;       RXIEN   - PRESCRIPTION file (#52) IEN
"RTN","PSOSPMUT",356,0)
 ;       FILLNUM - Fill Number
"RTN","PSOSPMUT",357,0)
 Q +$S(RECTYPE="V"&($G(RTSDATA("PRVIEN"))):RTSDATA("PRVIEN"),1:$$RXPRV^PSOBPSUT(RXIEN,FILLNUM))
"RTN","PSOSPMUT",358,0)
 ;
"RTN","PSOSPMUT",359,0)
RPHIEN(RECTYPE,RXIEN,FILLNUM) ; Returns the Pharmacist IEN
"RTN","PSOSPMUT",360,0)
 ;Input: RECTYPE  - Record Type ('S': SEND, 'R': REVIEW, 'V': VOID)
"RTN","PSOSPMUT",361,0)
 ;       RXIEN   - PRESCRIPTION file (#52) IEN
"RTN","PSOSPMUT",362,0)
 ;       FILLNUM - Fill Number
"RTN","PSOSPMUT",363,0)
 Q +$S(RECTYPE="V"&($G(RTSDATA("RPHIEN"))):RTSDATA("RPHIEN"),1:$$RXRPH^PSOBPSUT(RXIEN,FILLNUM))
"RTN","PSOSPMUT",364,0)
 ;
"RTN","PSOSPMUT",365,0)
FEXIST(DIR,FILE) ; Check if a File exists
"RTN","PSOSPMUT",366,0)
 ; Input:  DIR  - Name of the directory where the file is located
"RTN","PSOSPMUT",367,0)
 ;         FILE - Name of the file to be checked
"RTN","PSOSPMUT",368,0)
 ;Output: $$FEXIST - 1 - File Exists / 0 - File Not Found
"RTN","PSOSPMUT",369,0)
 N RETURN,FILEARR
"RTN","PSOSPMUT",370,0)
 S FILEARR(FILE)=""
"RTN","PSOSPMUT",371,0)
 Q +$$LIST^%ZISH(DIR,"FILEARR","RETURN")
"RTN","PSOSPMUT",372,0)
 ;
"RTN","PSOSPMUT",373,0)
ESC(VALUE) ; Removes Control Characters from the Data Element Value
"RTN","PSOSPMUT",374,0)
 N ESCVALUE,I
"RTN","PSOSPMUT",375,0)
 S ESCVALUE=""
"RTN","PSOSPMUT",376,0)
 F I=1:1:$L(VALUE) I $A(VALUE,I)>31,$A(VALUE,I)<127 S ESCVALUE=ESCVALUE_$E(VALUE,I)
"RTN","PSOSPMUT",377,0)
 Q ESCVALUE
"SEC","^DIC",58.4,58.4,0,"AUDIT")

"SEC","^DIC",58.4,58.4,0,"DD")

"SEC","^DIC",58.4,58.4,0,"DEL")

"SEC","^DIC",58.4,58.4,0,"LAYGO")

"SEC","^DIC",58.4,58.4,0,"RD")

"SEC","^DIC",58.4,58.4,0,"WR")

"UP",58.41,58.411,-1)
58.41^PRVKEY
"UP",58.41,58.411,0)
58.411
"UP",58.41,58.412,-1)
58.41^PUBKEY
"UP",58.41,58.412,0)
58.412
"UP",58.42,58.42001,-1)
58.42^RX
"UP",58.42,58.42001,0)
58.42001
"VER")
8.0^22.0
"^DD",58.4,58.4,0)
FIELD^^.01^2
"^DD",58.4,58.4,0,"DDA")
N
"^DD",58.4,58.4,0,"DT")
3160524
"^DD",58.4,58.4,0,"IX","B",58.4,.01)

"^DD",58.4,58.4,0,"NM","SPMP ASAP RECORD DEFINITION")

"^DD",58.4,58.4,0,"VRPK")
PSO
"^DD",58.4,58.4,.01,0)
NAME^RF^^0;1^K:$L(X)>50!($L(X)<1)!'(X'?1P.E) X
"^DD",58.4,58.4,.01,1,0)
^.1
"^DD",58.4,58.4,.01,1,1,0)
58.4^B
"^DD",58.4,58.4,.01,1,1,1)
S ^PS(58.4,"B",$E(X,1,30),DA)=""
"^DD",58.4,58.4,.01,1,1,2)
K ^PS(58.4,"B",$E(X,1,30),DA)
"^DD",58.4,58.4,.01,3)
Answer must be 1-50 characters in length.
"^DD",58.4,58.4,.01,21,0)
^^1^1^3121213^
"^DD",58.4,58.4,.01,21,1,0)
This is the name of the American Society for Automation in Pharmacy (ASAP) data format definition.
"^DD",58.4,58.4,.01,"DT")
3160114
"^DD",58.4,58.4,1,0)
VERSION^58.4001^^VER;0
"^DD",58.4,58.4,1,21,0)
^^3^3^3160315^
"^DD",58.4,58.4,1,21,1,0)
This multiple contains information related to the version of the
"^DD",58.4,58.4,1,21,2,0)
American Society for Automation in Pharmacy (ASAP) data format
"^DD",58.4,58.4,1,21,3,0)
definition.
"^DD",58.4,58.4001,0)
VERSION SUB-FIELD^^.04^5
"^DD",58.4,58.4001,0,"DT")
3160524
"^DD",58.4,58.4001,0,"IX","B",58.4001,.01)

"^DD",58.4,58.4001,0,"NM","VERSION")

"^DD",58.4,58.4001,0,"UP")
58.4
"^DD",58.4,58.4001,.01,0)
VERSION^MF^^0;1^K:$L(X)>10!($L(X)<1) X
"^DD",58.4,58.4001,.01,1,0)
^.1
"^DD",58.4,58.4001,.01,1,1,0)
58.4001^B
"^DD",58.4,58.4001,.01,1,1,1)
S ^PS(58.4,DA(1),"VER","B",$E(X,1,30),DA)=""
"^DD",58.4,58.4001,.01,1,1,2)
K ^PS(58.4,DA(1),"VER","B",$E(X,1,30),DA)
"^DD",58.4,58.4001,.01,3)
Answer must be 1-10 characters in length.
"^DD",58.4,58.4001,.01,21,0)
^^2^2^3160315^
"^DD",58.4,58.4001,.01,21,1,0)
This is the version of the American Society for Automation in Pharmacy
"^DD",58.4,58.4001,.01,21,2,0)
(ASAP) data format definition.
"^DD",58.4,58.4001,.01,"DT")
3160315
"^DD",58.4,58.4001,.02,0)
DATA ELEMENT DELIMITER CHAR^F^^0;2^K:$L(X)>1!($L(X)<1) X
"^DD",58.4,58.4001,.02,3)
Answer must be 1 character in length.
"^DD",58.4,58.4001,.02,21,0)
^^1^1^3160315^
"^DD",58.4,58.4001,.02,21,1,0)
This is the character used to separate the ASAP Data Elements.
"^DD",58.4,58.4001,.02,"DT")
3160315
"^DD",58.4,58.4001,.03,0)
SEGMENT TERMINATOR CHAR^F^^0;3^K:$L(X)>1!($L(X)<1) X
"^DD",58.4,58.4001,.03,3)
Answer must be 1 character in length.
"^DD",58.4,58.4001,.03,21,0)
^^1^1^3160315^
"^DD",58.4,58.4001,.03,21,1,0)
This is the character used to mark the end of an ASAP Segment.
"^DD",58.4,58.4001,.03,"DT")
3160315
"^DD",58.4,58.4001,.04,0)
END OF LINE ESCAPE CHAR(S)^F^^0;4^K:$L(X)>25!($L(X)<1) X
"^DD",58.4,58.4001,.04,3)
Answer must be 1-25 characters in length.
"^DD",58.4,58.4001,.04,21,0)
^^12^12^3160506^^
"^DD",58.4,58.4001,.04,21,1,0)
This is the character escape sequence used for marking the end of a line
"^DD",58.4,58.4001,.04,21,2,0)
in the data export file. This character escape sequence will be inserted
"^DD",58.4,58.4001,.04,21,3,0)
at the end of each segment in the ASAP data file.
"^DD",58.4,58.4001,.04,21,4,0)
 
"^DD",58.4,58.4001,.04,21,5,0)
Examples: $C(10)    - Line Feed
"^DD",58.4,58.4001,.04,21,6,0)
          $C(13)    - Carriage Return
"^DD",58.4,58.4001,.04,21,7,0)
          $C(13,10) - Carriage Return & Carriage Return (Default)
"^DD",58.4,58.4001,.04,21,8,0)
 
"^DD",58.4,58.4001,.04,21,9,0)
Most PMP vendors/states do not require an escape sequence to mark the
"^DD",58.4,58.4001,.04,21,10,0)
end of a line in the ASAP data file; however OpenVMS Operating System
"^DD",58.4,58.4001,.04,21,11,0)
will throw an error if the line in the file gets longer than 32Kb,
"^DD",58.4,58.4001,.04,21,12,0)
which is equivalent to about 500 prescriptions. 
"^DD",58.4,58.4001,.04,"DT")
3160524
"^DD",58.4,58.4001,1,0)
SEGMENT^58.40011I^^SEG;0
"^DD",58.4,58.4001,1,21,0)
^^2^2^3160315^
"^DD",58.4,58.4001,1,21,1,0)
This multiple contains information about the segment of the American
"^DD",58.4,58.4001,1,21,2,0)
Society for Automation in Pharmacy (ASAP) data format definition.
"^DD",58.4,58.40011,0)
SEGMENT SUB-FIELD^^.06^7
"^DD",58.4,58.40011,0,"DT")
3160115
"^DD",58.4,58.40011,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",58.4,58.40011,0,"IX","B",58.40011,.01)

"^DD",58.4,58.40011,0,"NM","SEGMENT")

"^DD",58.4,58.40011,0,"UP")
58.4001
"^DD",58.4,58.40011,.01,0)
SEGMENT ID^MRMMMF^^0;1^K:$L(X)>5!($L(X)<1) X
"^DD",58.4,58.40011,.01,1,0)
^.1
"^DD",58.4,58.40011,.01,1,1,0)
58.40011^B
"^DD",58.4,58.40011,.01,1,1,1)
S ^PS(58.4,DA(2),"VER",DA(1),"SEG","B",$E(X,1,30),DA)=""
"^DD",58.4,58.40011,.01,1,1,2)
K ^PS(58.4,DA(2),"VER",DA(1),"SEG","B",$E(X,1,30),DA)
"^DD",58.4,58.40011,.01,3)
Answer must be 1-5 characters in length.
"^DD",58.4,58.40011,.01,21,0)
^^2^2^3160315^
"^DD",58.4,58.40011,.01,21,1,0)
This is the Segment ID of the American Society for Automation in
"^DD",58.4,58.40011,.01,21,2,0)
Pharmacy (ASAP) data format definition.
"^DD",58.4,58.40011,.01,"DT")
3160315
"^DD",58.4,58.40011,.02,0)
SEGMENT NAME^RF^^0;2^K:$L(X)>50!($L(X)<1) X
"^DD",58.4,58.40011,.02,3)
Answer must be 1-50 characters in length.
"^DD",58.4,58.40011,.02,21,0)
^^2^2^3160315^
"^DD",58.4,58.40011,.02,21,1,0)
This is the Segment Name of the American Society for Automation in
"^DD",58.4,58.40011,.02,21,2,0)
Pharmacy (ASAP) data format definition.
"^DD",58.4,58.40011,.02,"DT")
3160315
"^DD",58.4,58.40011,.03,0)
PARENT SEGMENT^F^^0;3^K:$L(X)>5!($L(X)<1) X
"^DD",58.4,58.40011,.03,3)
Answer must be 1-5 characters in length.
"^DD",58.4,58.40011,.03,21,0)
^^1^1^3160315^
"^DD",58.4,58.40011,.03,21,1,0)
This is the segment's parent segment ID.
"^DD",58.4,58.40011,.03,"DT")
3160315
"^DD",58.4,58.40011,.04,0)
REQUIREMENT^RS^R:REQUIRED;O:OPTIONAL;N:NOT USED;^0;4^Q
"^DD",58.4,58.40011,.04,3)
Indicate if the segment is required, optional or not used by the ASAP version.
"^DD",58.4,58.40011,.04,21,0)
^^1^1^3160315^
"^DD",58.4,58.40011,.04,21,1,0)
This indicates if the segment is required, optional or not used.
"^DD",58.4,58.40011,.04,"DT")
3160315
"^DD",58.4,58.40011,.05,0)
POSITION^RNJ3,0^^0;5^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1.N) X
"^DD",58.4,58.40011,.05,3)
Type a number between 1 and 999, 0 decimal digits.
"^DD",58.4,58.40011,.05,21,0)
^^1^1^3160315^
"^DD",58.4,58.40011,.05,21,1,0)
This indicates the position of the segment within the record.
"^DD",58.4,58.40011,.05,"DT")
3160315
"^DD",58.4,58.40011,.06,0)
LEVEL^RS^1:MAIN HEADER;2:PHARMACY HEADER;3:PATIENT DETAIL;4:PRESCRIPTION DETAIL;5:PHARMACY TRAILER;6:MAIN TRAILER;^0;6^Q
"^DD",58.4,58.40011,.06,3)
Indicate the level where the segment is placed within the ASAP definition.
"^DD",58.4,58.40011,.06,21,0)
^^2^2^3160315^
"^DD",58.4,58.40011,.06,21,1,0)
This is the level where the segment is placed within the
"^DD",58.4,58.40011,.06,21,2,0)
ASAP definition.
"^DD",58.4,58.40011,.06,"DT")
3160315
"^DD",58.4,58.40011,1,0)
DATA ELEMENT^58.400111I^^DAT;0
"^DD",58.4,58.40011,1,21,0)
^^3^3^3160315^
"^DD",58.4,58.40011,1,21,1,0)
This multiple contains information about the data element of the
"^DD",58.4,58.40011,1,21,2,0)
American Society for Automation in Pharmacy (ASAP) data format
"^DD",58.4,58.40011,1,21,3,0)
definition.
"^DD",58.4,58.400111,0)
DATA ELEMENT SUB-FIELD^^.08^8
"^DD",58.4,58.400111,0,"DT")
3160115
"^DD",58.4,58.400111,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",58.4,58.400111,0,"ID",.06)
W "   ",@("$P($P($C(59)_$S($D(^DD(58.400111,.06,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,6)_"":"",2),$C(59),1)")
"^DD",58.4,58.400111,0,"IX","B",58.400111,.01)

"^DD",58.4,58.400111,0,"NM","DATA ELEMENT")

"^DD",58.4,58.400111,0,"UP")
58.40011
"^DD",58.4,58.400111,.01,0)
ELEMENT ID^MRMMMF^^0;1^K:$L(X)>10!($L(X)<1) X
"^DD",58.4,58.400111,.01,1,0)
^.1
"^DD",58.4,58.400111,.01,1,1,0)
58.400111^B
"^DD",58.4,58.400111,.01,1,1,1)
S ^PS(58.4,DA(3),"VER",DA(2),"SEG",DA(1),"DAT","B",$E(X,1,30),DA)=""
"^DD",58.4,58.400111,.01,1,1,2)
K ^PS(58.4,DA(3),"VER",DA(2),"SEG",DA(1),"DAT","B",$E(X,1,30),DA)
"^DD",58.4,58.400111,.01,3)
Answer must be 1-10 characters in length.
"^DD",58.4,58.400111,.01,21,0)
^^2^2^3160315^
"^DD",58.4,58.400111,.01,21,1,0)
This is the data element ID of the American Society for Automation
"^DD",58.4,58.400111,.01,21,2,0)
in Pharmacy (ASAP) data format definition.
"^DD",58.4,58.400111,.01,"DT")
3160315
"^DD",58.4,58.400111,.02,0)
ELEMENT NAME^RF^^0;2^K:$L(X)>100!($L(X)<1) X
"^DD",58.4,58.400111,.02,3)
Answer must be 1-100 characters in length.
"^DD",58.4,58.400111,.02,21,0)
^^2^2^3160315^
"^DD",58.4,58.400111,.02,21,1,0)
This is the data element name of the American Society for Automation
"^DD",58.4,58.400111,.02,21,2,0)
in Pharmacy (ASAP) data format definition.
"^DD",58.4,58.400111,.02,"DT")
3160315
"^DD",58.4,58.400111,.03,0)
DATA FORMAT^RS^AN:ALPHANUMERIC;N:NUMERIC;D:DECIMAL;DT:DATE;TM:TIME;^0;3^Q
"^DD",58.4,58.400111,.03,3)
Choose the format for the data element.
"^DD",58.4,58.400111,.03,21,0)
^^2^2^3160315^
"^DD",58.4,58.400111,.03,21,1,0)
This is the data element data format according to the American Society
"^DD",58.4,58.400111,.03,21,2,0)
for Automation in Pharmacy (ASAP) data format definition.  
"^DD",58.4,58.400111,.03,"DT")
3160315
"^DD",58.4,58.400111,.04,0)
MAXIMUM LENGTH^RNJ3,0^^0;4^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1.N) X
"^DD",58.4,58.400111,.04,3)
Type a number between 1 and 999, 0 decimal digits.
"^DD",58.4,58.400111,.04,21,0)
^^2^2^3160310^
"^DD",58.4,58.400111,.04,21,1,0)
This is the data element maximum length according to the American Society 
"^DD",58.4,58.400111,.04,21,2,0)
for Automation in Pharmacy (ASAP) data format definition.  
"^DD",58.4,58.400111,.04,"DT")
3160310
"^DD",58.4,58.400111,.05,0)
POSITION^RNJ2,0^^0;5^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1.N) X
"^DD",58.4,58.400111,.05,3)
Type a number between 1 and 99, 0 decimal digits.
"^DD",58.4,58.400111,.05,21,0)
^^3^3^3160315^
"^DD",58.4,58.400111,.05,21,1,0)
This is the data element position within the segment according to
"^DD",58.4,58.400111,.05,21,2,0)
the American Society for Automation in Pharmacy (ASAP) data format
"^DD",58.4,58.400111,.05,21,3,0)
definition.
"^DD",58.4,58.400111,.05,"DT")
3160315
"^DD",58.4,58.400111,.06,0)
REQUIREMENT^RS^R:REQUIRED;O:OPTIONAL;N:NOT USED;^0;6^Q
"^DD",58.4,58.400111,.06,3)
Indicate if the data element is required, optional or not used by the ASAP version.
"^DD",58.4,58.400111,.06,21,0)
^^1^1^3160315^
"^DD",58.4,58.400111,.06,21,1,0)
This indicates if the data element is required, optional or not used.
"^DD",58.4,58.400111,.06,"DT")
3160315
"^DD",58.4,58.400111,.07,0)
DESCRIPTION^58.4001111^^DES;0
"^DD",58.4,58.400111,.07,21,0)
^^2^2^3160315^
"^DD",58.4,58.400111,.07,21,1,0)
This is the data element description from the American Society for
"^DD",58.4,58.400111,.07,21,2,0)
Automation in Pharmacy (ASAP) data format definition.
"^DD",58.4,58.400111,.08,0)
ELEMENT VALUE (M EXPRESSION)^58.410111^^VAL;0
"^DD",58.4,58.400111,.08,21,0)
^^2^2^3160315^
"^DD",58.4,58.400111,.08,21,1,0)
This is the argument of a Mumps SET command which is used for 
"^DD",58.4,58.400111,.08,21,2,0)
retrieving the value of the data element.
"^DD",58.4,58.4001111,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",58.4,58.4001111,0,"DT")
3130606
"^DD",58.4,58.4001111,0,"NM","DESCRIPTION")

"^DD",58.4,58.4001111,0,"UP")
58.400111
"^DD",58.4,58.4001111,.01,0)
DESCRIPTION^Wx^^0;1
"^DD",58.4,58.4001111,.01,3)
Enter the description for this data element.
"^DD",58.4,58.4001111,.01,21,0)
^^2^2^3160315^
"^DD",58.4,58.4001111,.01,21,1,0)
This is the data element description from the American Society for
"^DD",58.4,58.4001111,.01,21,2,0)
Automation in Pharmacy (ASAP) data format definition. 
"^DD",58.4,58.4001111,.01,"DT")
3160315
"^DD",58.4,58.410111,0)
ELEMENT VALUE (M EXPRESSION) SUB-FIELD^^.01^1
"^DD",58.4,58.410111,0,"DT")
3151123
"^DD",58.4,58.410111,0,"NM","ELEMENT VALUE (M EXPRESSION)")

"^DD",58.4,58.410111,0,"UP")
58.400111
"^DD",58.4,58.410111,.01,0)
ELEMENT VALUE (M EXPRESSION)^WxL^^0;1
"^DD",58.4,58.410111,.01,3)
This is the argument of a Mumps SET command which is used for retrieving the value of the data element. 
"^DD",58.4,58.410111,.01,21,0)
^^2^2^3160315^
"^DD",58.4,58.410111,.01,21,1,0)
This is the argument of a Mumps SET command which is used for
"^DD",58.4,58.410111,.01,21,2,0)
retrieving the value of the data element.
"^DD",58.4,58.410111,.01,"DT")
3160315
"^DD",58.41,58.41,1,0)
ASAP VERSION^F^^0;2^K:$L(X)>10!($L(X)<1) X
"^DD",58.41,58.41,1,3)
Answer must be 1-10 characters in length.
"^DD",58.41,58.41,1,21,0)
^^3^3^3151215^
"^DD",58.41,58.41,1,21,1,0)
This is the American Society for Automation in Pharmacy (ASAP) format 
"^DD",58.41,58.41,1,21,2,0)
version required for the State Prescription Monitoring Program (SPMP) 
"^DD",58.41,58.41,1,21,3,0)
data transmission.
"^DD",58.41,58.41,1,"DT")
3151215
"^DD",58.41,58.41,3,0)
REPORTING FREQUENCY IN DAYS^NJ2,0^^0;4^K:+X'=X!(X>30)!(X<1)!(X?.E1"."1.N) X
"^DD",58.41,58.41,3,3)
Type a number between 1 and 30, 0 decimal digits.
"^DD",58.41,58.41,3,21,0)
^^3^3^3160523^
"^DD",58.41,58.41,3,21,1,0)
This is the frequency the state requires pharmacies to report data.
"^DD",58.41,58.41,3,21,2,0)
The value represents the number of days between transmissions of
"^DD",58.41,58.41,3,21,3,0)
data to the state.
"^DD",58.41,58.41,3,"DT")
3160523
"^DD",58.41,58.41,7,0)
STATE SFTP SERVER IP ADDRESS^F^^FILE;4^K:$L(X)>60!($L(X)<5) X
"^DD",58.41,58.41,7,3)
Answer must be 5-60 characters in length.
"^DD",58.41,58.41,7,21,0)
^^2^2^3121005^
"^DD",58.41,58.41,7,21,1,0)
This is the secure FTP IP address of the State Prescription Monitoring 
"^DD",58.41,58.41,7,21,2,0)
Program (SPMP) server where the export file will be transmitted to.
"^DD",58.41,58.41,7,"DT")
3151208
"^DD",58.41,58.41,8,0)
STATE SFTP SERVER USERNAME^F^^FILE;5^K:$L(X)>50!($L(X)<1) X
"^DD",58.41,58.41,8,3)
Answer must be 1-50 characters in length.
"^DD",58.41,58.41,8,21,0)
^^2^2^3121005^
"^DD",58.41,58.41,8,21,1,0)
This is the secure FTP username at the State Prescription Monitoring 
"^DD",58.41,58.41,8,21,2,0)
Program (SPMP) server where the export file will be transmitted to.
"^DD",58.41,58.41,8,"DT")
3151208
"^DD",58.41,58.41,13,0)
SFTP TRANSMISSION MODE^S^A:AUTOMATIC [SSH KEYS];M:MANUAL [PASSWORD];^0;6^Q
"^DD",58.41,58.41,13,3)
Indicate whether the sFTP transmissions will happen automatically by a scheduled background job using SSH encryption keys or if it will be performed manually by a user.
"^DD",58.41,58.41,13,21,0)
^^3^3^3160317^
"^DD",58.41,58.41,13,21,1,0)
This field indicates whether the sFTP transmissions will happen
"^DD",58.41,58.41,13,21,2,0)
automatically by a scheduled background job using SSH (Secure SHell)
"^DD",58.41,58.41,13,21,3,0)
encryption keys or if it will be performed manually by a user.
"^DD",58.41,58.41,13,"DT")
3160317
"^DD",58.41,58.41,17,0)
RENAME FILE AFTER UPLOAD^RS^0:NO;1:YES;^0;7^Q
"^DD",58.41,58.41,17,3)
Answer YES if the export file should be renamed after being uploaded or answer NO if the export file should have the final remote file name extension.
"^DD",58.41,58.41,17,21,0)
^^7^7^3160317^
"^DD",58.41,58.41,17,21,1,0)
This field indicates whether the data export file should be created
"^DD",58.41,58.41,17,21,2,0)
and uploaded with a .DAT (or .TXT) directly or if the file should be
"^DD",58.41,58.41,17,21,3,0)
created and uploaded with a .UP extension and once the upload
"^DD",58.41,58.41,17,21,4,0)
completes the file would be renamed to .DAT (or .TXT).
"^DD",58.41,58.41,17,21,5,0)
 
"^DD",58.41,58.41,17,21,6,0)
  NO  - File will be uploaded as .DAT/.TXT directly (no renaming) 
"^DD",58.41,58.41,17,21,7,0)
  YES - File will be uploaded as .UP and then renamed to .DAT/.TXT
"^DD",58.41,58.41,17,"DT")
3160317
"^DD",58.41,58.41,18,0)
SFTP SSH KEY FORMAT^S^OSSH:OpenSSH Format (Used by Linux);SSH2:SSH2 Format (Used by OpenVMS);^EXPORT;2^Q
"^DD",58.41,58.41,18,3)
Choose the sFTP SSH key format used to transmit data to the state.
"^DD",58.41,58.41,18,21,0)
^^2^2^3151202^
"^DD",58.41,58.41,18,21,1,0)
This is the format of the SSH (Secure Shell) public and private keys used 
"^DD",58.41,58.41,18,21,2,0)
to transmit data to the state via Secure File Transfer Protocol (sFTP).
"^DD",58.41,58.41,18,"DT")
3160201
"^DD",58.41,58.41,19,0)
SFTP SSH KEY ENCRYPTION^S^DSA:Digital Signature Algorithm;RSA:Rivest, Shamir & Adleman (Names);^EXPORT;3^Q
"^DD",58.41,58.41,19,3)
Choose the sFTP SSH Key Encryption Algorithm used to transmit data to the state.
"^DD",58.41,58.41,19,21,0)
^^3^3^3151202^
"^DD",58.41,58.41,19,21,1,0)
This is the type of the encryption algorithm of the SSH (Secure Shell) 
"^DD",58.41,58.41,19,21,2,0)
public and private keys used to transmit data to the state via Secure 
"^DD",58.41,58.41,19,21,3,0)
File Transfer Protocol (sFTP).
"^DD",58.41,58.41,19,"DT")
3151202
"^DD",58.41,58.41,100,0)
SFTP SSH PRIVATE KEY TEXT^58.411^^PRVKEY;0
"^DD",58.41,58.41,100,21,0)
^^1^1^3160303^^^
"^DD",58.41,58.41,100,21,1,0)
This is the Secure File Transfer Protocol (sFTP) private key text content.
"^DD",58.41,58.41,100,"DT")
3160303
"^DD",58.41,58.41,200,0)
SFTP SSH PUBLIC KEY TEXT^58.412^^PUBKEY;0
"^DD",58.41,58.41,200,21,0)
^^1^1^3130625^
"^DD",58.41,58.41,200,21,1,0)
This is the Secure File Transfer Protocol (sFTP) public key text content.
"^DD",58.41,58.41,200,"DT")
3160303
"^DD",58.41,58.411,0)
SFTP SSH PRIVATE KEY TEXT SUB-FIELD^^.01^1
"^DD",58.41,58.411,0,"DT")
3130625
"^DD",58.41,58.411,0,"NM","SFTP SSH PRIVATE KEY TEXT")

"^DD",58.41,58.411,0,"UP")
58.41
"^DD",58.41,58.411,.01,0)
SFTP SSH PRIVATE KEY TEXT^W^^0;1
"^DD",58.41,58.411,.01,3)
Enter the Secure FTP SSH encrypted private key content to be used to send data to the state.
"^DD",58.41,58.411,.01,21,0)
^^1^1^3160303^^
"^DD",58.41,58.411,.01,21,1,0)
This is the Secure File Transfer Protocol (sFTP) private key text content.
"^DD",58.41,58.411,.01,"DT")
3160303
"^DD",58.41,58.412,0)
SFTP SSH PUBLIC KEY TEXT SUB-FIELD^^.01^1
"^DD",58.41,58.412,0,"DT")
3130625
"^DD",58.41,58.412,0,"NM","SFTP SSH PUBLIC KEY TEXT")

"^DD",58.41,58.412,0,"UP")
58.41
"^DD",58.41,58.412,.01,0)
SFTP SSH PUBLIC KEY TEXT^Wx^^0;1
"^DD",58.41,58.412,.01,3)
Enter the Secure FTP SSH encrypted public key text to be used to send data to the state.
"^DD",58.41,58.412,.01,21,0)
^^1^1^3160303^^
"^DD",58.41,58.412,.01,21,1,0)
This is the Secure File Transfer Protocol (sFTP) public key text content.
"^DD",58.41,58.412,.01,"DT")
3160303
"^DD",58.42,58.42001,3,0)
NDC SENT^F^^0;4^K:$L(X)>20!($L(X)<1) X
"^DD",58.42,58.42001,3,3)
Answer must be 1-20 characters in length.
"^DD",58.42,58.42001,3,21,0)
^^1^1^3151116^
"^DD",58.42,58.42001,3,21,1,0)
This is the NDC that was sent to the state for this prescription fill.
"^DD",58.42,58.42001,3,"DT")
3151116
"^DIC",58.4,58.4,0)
SPMP ASAP RECORD DEFINITION^58.4
"^DIC",58.4,58.4,0,"GL")
^PS(58.4,
"^DIC",58.4,58.4,"%",0)
^1.005^1^1
"^DIC",58.4,58.4,"%",1,0)
PSO
"^DIC",58.4,58.4,"%","B","PSO",1)

"^DIC",58.4,58.4,"%D",0)
^^5^5^3130115^^
"^DIC",58.4,58.4,"%D",1,0)
This file is used as a map to all the data elements defined in the American
"^DIC",58.4,58.4,"%D",2,0)
Society for Automation in Pharmacy (ASAP) data format version 4.0 and above.
"^DIC",58.4,58.4,"%D",3,0)
 
"^DIC",58.4,58.4,"%D",4,0)
The ASAP data format is used when reporting controlled substance prescriptions
"^DIC",58.4,58.4,"%D",5,0)
to the State Prescription Monitoring Program (SPMP).
"^DIC",58.4,"B","SPMP ASAP RECORD DEFINITION",58.4)

"BLD",9285,6)
^384
**END**
**END**

