Released IBD*3*63 SEQ #57
Extracted from mail message
**KIDS**:IBD*3.0*63^

**INSTALL NAME**
IBD*3.0*63
"BLD",8600,0)
IBD*3.0*63^AUTOMATED INFO COLLECTION SYS^0^3140311^y
"BLD",8600,1,0)
^^1^1^3120329^
"BLD",8600,1,1,0)
AICS ICD-10 CLASS 1 REMEDIATION
"BLD",8600,4,0)
^9.64PA^357.6^3
"BLD",8600,4,357,0)
357
"BLD",8600,4,357,2,0)
^9.641^357.03^2
"BLD",8600,4,357,2,357,0)
ENCOUNTER FORM  (File-top level)
"BLD",8600,4,357,2,357,1,0)
^9.6411^^
"BLD",8600,4,357,2,357.03,0)
CODING SYSTEM UPDATES  (sub-file)
"BLD",8600,4,357,2,357.03,1,0)
^9.6411^.04^4
"BLD",8600,4,357,2,357.03,1,.01,0)
CODING SYSTEM
"BLD",8600,4,357,2,357.03,1,.02,0)
UPDATE STATUS
"BLD",8600,4,357,2,357.03,1,.03,0)
DATE LAST EDITED
"BLD",8600,4,357,2,357.03,1,.04,0)
CHANGES MADE BY
"BLD",8600,4,357,222)
y^n^p^^^^n^^n
"BLD",8600,4,357,224)

"BLD",8600,4,357.3,0)
357.3
"BLD",8600,4,357.3,2,0)
^9.641^357.3^1
"BLD",8600,4,357.3,2,357.3,0)
SELECTION  (File-top level)
"BLD",8600,4,357.3,2,357.3,1,0)
^9.6411^4.02^2
"BLD",8600,4,357.3,2,357.3,1,4.01,0)
ICD CODE EDIT DATE/TIME
"BLD",8600,4,357.3,2,357.3,1,4.02,0)
ICD CHANGES MADE BY
"BLD",8600,4,357.3,222)
y^n^p^^^^n^^n
"BLD",8600,4,357.3,224)

"BLD",8600,4,357.6,0)
357.6
"BLD",8600,4,357.6,2,0)
^9.641^357.6^1
"BLD",8600,4,357.6,2,357.6,0)
PACKAGE INTERFACE  (File-top level)
"BLD",8600,4,357.6,2,357.6,1,0)
^9.6411^.22^1
"BLD",8600,4,357.6,2,357.6,1,.22,0)
ICD CODING SYSTEM
"BLD",8600,4,357.6,222)
y^n^p^^^^n^^n
"BLD",8600,4,357.6,224)

"BLD",8600,4,"APDD",357,357)

"BLD",8600,4,"APDD",357,357.03)

"BLD",8600,4,"APDD",357,357.03,.01)

"BLD",8600,4,"APDD",357,357.03,.02)

"BLD",8600,4,"APDD",357,357.03,.03)

"BLD",8600,4,"APDD",357,357.03,.04)

"BLD",8600,4,"APDD",357.3,357.3)

"BLD",8600,4,"APDD",357.3,357.3,4.01)

"BLD",8600,4,"APDD",357.3,357.3,4.02)

"BLD",8600,4,"APDD",357.6,357.6)

"BLD",8600,4,"APDD",357.6,357.6,.22)

"BLD",8600,4,"B",357,357)

"BLD",8600,4,"B",357.3,357.3)

"BLD",8600,4,"B",357.6,357.6)

"BLD",8600,6)
22^
"BLD",8600,6.3)
80
"BLD",8600,"INIT")
POST^IBD3P63
"BLD",8600,"KRN",0)
^9.67PA^779.2^20
"BLD",8600,"KRN",.4,0)
.4
"BLD",8600,"KRN",.401,0)
.401
"BLD",8600,"KRN",.402,0)
.402
"BLD",8600,"KRN",.403,0)
.403
"BLD",8600,"KRN",.5,0)
.5
"BLD",8600,"KRN",.84,0)
.84
"BLD",8600,"KRN",3.6,0)
3.6
"BLD",8600,"KRN",3.8,0)
3.8
"BLD",8600,"KRN",9.2,0)
9.2
"BLD",8600,"KRN",9.8,0)
9.8
"BLD",8600,"KRN",9.8,"NM",0)
^9.68A^51^44
"BLD",8600,"KRN",9.8,"NM",1,0)
IBDFN4^^0^B227563778
"BLD",8600,"KRN",9.8,"NM",2,0)
IBD3P63^^0^B207259739
"BLD",8600,"KRN",9.8,"NM",3,0)
IBDUTIL1^^0^B32332726
"BLD",8600,"KRN",9.8,"NM",5,0)
IBDFN7^^0^B8761450
"BLD",8600,"KRN",9.8,"NM",6,0)
IBDFDE2^^0^B50446438
"BLD",8600,"KRN",9.8,"NM",7,0)
IBDFN12^^0^B12645888
"BLD",8600,"KRN",9.8,"NM",8,0)
IBDFN9^^0^B1176196
"BLD",8600,"KRN",9.8,"NM",10,0)
IBDFN8^^0^B1969782
"BLD",8600,"KRN",9.8,"NM",11,0)
IBDFLST^^0^B47525530
"BLD",8600,"KRN",9.8,"NM",12,0)
IBDFUTL1^^0^B54382869
"BLD",8600,"KRN",9.8,"NM",13,0)
IBDFUTL^^0^B144569260
"BLD",8600,"KRN",9.8,"NM",14,0)
IBDF4A^^0^B45844893
"BLD",8600,"KRN",9.8,"NM",17,0)
IBDFQSL1^^0^B19411131
"BLD",8600,"KRN",9.8,"NM",18,0)
IBDFQEA^^0^B39066741
"BLD",8600,"KRN",9.8,"NM",19,0)
IBDF4^^0^B99102539
"BLD",8600,"KRN",9.8,"NM",20,0)
IBDFN14^^0^B13316681
"BLD",8600,"KRN",9.8,"NM",21,0)
IBDFUTL4^^0^B156393751
"BLD",8600,"KRN",9.8,"NM",22,0)
IBDFUTL5^^0^B45996359
"BLD",8600,"KRN",9.8,"NM",23,0)
IBDFU3^^0^B22140976
"BLD",8600,"KRN",9.8,"NM",25,0)
IBDF7^^0^B8201139
"BLD",8600,"KRN",9.8,"NM",26,0)
IBDF9A1^^0^B20739240
"BLD",8600,"KRN",9.8,"NM",27,0)
IBDFU2^^0^B28385446
"BLD",8600,"KRN",9.8,"NM",28,0)
IBDF18A^^0^B52196782
"BLD",8600,"KRN",9.8,"NM",29,0)
IBDF18A2^^0^B9535002
"BLD",8600,"KRN",9.8,"NM",30,0)
IBDFDE1^^0^B57533893
"BLD",8600,"KRN",9.8,"NM",31,0)
IBDFDE21^^0^B92448772
"BLD",8600,"KRN",9.8,"NM",32,0)
IBDFDE41^^0^B17484519
"BLD",8600,"KRN",9.8,"NM",35,0)
IBDF5B^^0^B36424692
"BLD",8600,"KRN",9.8,"NM",36,0)
IBDFU1B^^0^B25321593
"BLD",8600,"KRN",9.8,"NM",37,0)
IBDFUTL3^^0^B9491211
"BLD",8600,"KRN",9.8,"NM",38,0)
IBDLXDG^^0^B102250951
"BLD",8600,"KRN",9.8,"NM",39,0)
IBDLXDG2^^0^B41791567
"BLD",8600,"KRN",9.8,"NM",40,0)
IBDF5^^0^B22015459
"BLD",8600,"KRN",9.8,"NM",41,0)
IBDF5C^^0^B13407929
"BLD",8600,"KRN",9.8,"NM",42,0)
IBDF6A^^0^B20397072
"BLD",8600,"KRN",9.8,"NM",43,0)
IBDFUTL2^^0^B28328999
"BLD",8600,"KRN",9.8,"NM",44,0)
IBDFN4A^^0^B16711898
"BLD",8600,"KRN",9.8,"NM",45,0)
IBDF3^^0^B32292279
"BLD",8600,"KRN",9.8,"NM",46,0)
IBDFQSL^^0^B6204351
"BLD",8600,"KRN",9.8,"NM",47,0)
IBD3P63A^^0^B19965661
"BLD",8600,"KRN",9.8,"NM",48,0)
IBDF5D^^0^B9905178
"BLD",8600,"KRN",9.8,"NM",49,0)
IBDUTICD^^0^B26868434
"BLD",8600,"KRN",9.8,"NM",50,0)
IBDVAUT1^^0^B9357477
"BLD",8600,"KRN",9.8,"NM",51,0)
IBDFLST1^^0^B2883654
"BLD",8600,"KRN",9.8,"NM","B","IBD3P63",2)

"BLD",8600,"KRN",9.8,"NM","B","IBD3P63A",47)

"BLD",8600,"KRN",9.8,"NM","B","IBDF18A",28)

"BLD",8600,"KRN",9.8,"NM","B","IBDF18A2",29)

"BLD",8600,"KRN",9.8,"NM","B","IBDF3",45)

"BLD",8600,"KRN",9.8,"NM","B","IBDF4",19)

"BLD",8600,"KRN",9.8,"NM","B","IBDF4A",14)

"BLD",8600,"KRN",9.8,"NM","B","IBDF5",40)

"BLD",8600,"KRN",9.8,"NM","B","IBDF5B",35)

"BLD",8600,"KRN",9.8,"NM","B","IBDF5C",41)

"BLD",8600,"KRN",9.8,"NM","B","IBDF5D",48)

"BLD",8600,"KRN",9.8,"NM","B","IBDF6A",42)

"BLD",8600,"KRN",9.8,"NM","B","IBDF7",25)

"BLD",8600,"KRN",9.8,"NM","B","IBDF9A1",26)

"BLD",8600,"KRN",9.8,"NM","B","IBDFDE1",30)

"BLD",8600,"KRN",9.8,"NM","B","IBDFDE2",6)

"BLD",8600,"KRN",9.8,"NM","B","IBDFDE21",31)

"BLD",8600,"KRN",9.8,"NM","B","IBDFDE41",32)

"BLD",8600,"KRN",9.8,"NM","B","IBDFLST",11)

"BLD",8600,"KRN",9.8,"NM","B","IBDFLST1",51)

"BLD",8600,"KRN",9.8,"NM","B","IBDFN12",7)

"BLD",8600,"KRN",9.8,"NM","B","IBDFN14",20)

"BLD",8600,"KRN",9.8,"NM","B","IBDFN4",1)

"BLD",8600,"KRN",9.8,"NM","B","IBDFN4A",44)

"BLD",8600,"KRN",9.8,"NM","B","IBDFN7",5)

"BLD",8600,"KRN",9.8,"NM","B","IBDFN8",10)

"BLD",8600,"KRN",9.8,"NM","B","IBDFN9",8)

"BLD",8600,"KRN",9.8,"NM","B","IBDFQEA",18)

"BLD",8600,"KRN",9.8,"NM","B","IBDFQSL",46)

"BLD",8600,"KRN",9.8,"NM","B","IBDFQSL1",17)

"BLD",8600,"KRN",9.8,"NM","B","IBDFU1B",36)

"BLD",8600,"KRN",9.8,"NM","B","IBDFU2",27)

"BLD",8600,"KRN",9.8,"NM","B","IBDFU3",23)

"BLD",8600,"KRN",9.8,"NM","B","IBDFUTL",13)

"BLD",8600,"KRN",9.8,"NM","B","IBDFUTL1",12)

"BLD",8600,"KRN",9.8,"NM","B","IBDFUTL2",43)

"BLD",8600,"KRN",9.8,"NM","B","IBDFUTL3",37)

"BLD",8600,"KRN",9.8,"NM","B","IBDFUTL4",21)

"BLD",8600,"KRN",9.8,"NM","B","IBDFUTL5",22)

"BLD",8600,"KRN",9.8,"NM","B","IBDLXDG",38)

"BLD",8600,"KRN",9.8,"NM","B","IBDLXDG2",39)

"BLD",8600,"KRN",9.8,"NM","B","IBDUTICD",49)

"BLD",8600,"KRN",9.8,"NM","B","IBDUTIL1",3)

"BLD",8600,"KRN",9.8,"NM","B","IBDVAUT1",50)

"BLD",8600,"KRN",19,0)
19
"BLD",8600,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",8600,"KRN",19,"NM",1,0)
IBDF REPORTS MENU^^2
"BLD",8600,"KRN",19,"NM",2,0)
IBDF UTIL UPDATE ICD10 STATUS^^0
"BLD",8600,"KRN",19,"NM","B","IBDF REPORTS MENU",1)

"BLD",8600,"KRN",19,"NM","B","IBDF UTIL UPDATE ICD10 STATUS",2)

"BLD",8600,"KRN",19.1,0)
19.1
"BLD",8600,"KRN",101,0)
101
"BLD",8600,"KRN",101,"NM",0)
^9.68A^5^5
"BLD",8600,"KRN",101,"NM",1,0)
IBDF ICD10 STATUS UPDATE^^0
"BLD",8600,"KRN",101,"NM",2,0)
IBDF ICD10 STATUS UPDATE CL^^0
"BLD",8600,"KRN",101,"NM",3,0)
IBDF ICD10 STATUS UPDATE JP^^0
"BLD",8600,"KRN",101,"NM",4,0)
IBDF ICD10 STATUS UPDATE IS^^0
"BLD",8600,"KRN",101,"NM",5,0)
IBDF ICD10 STATUS UPDATE PL^^0
"BLD",8600,"KRN",101,"NM","B","IBDF ICD10 STATUS UPDATE",1)

"BLD",8600,"KRN",101,"NM","B","IBDF ICD10 STATUS UPDATE CL",2)

"BLD",8600,"KRN",101,"NM","B","IBDF ICD10 STATUS UPDATE IS",4)

"BLD",8600,"KRN",101,"NM","B","IBDF ICD10 STATUS UPDATE JP",3)

"BLD",8600,"KRN",101,"NM","B","IBDF ICD10 STATUS UPDATE PL",5)

"BLD",8600,"KRN",409.61,0)
409.61
"BLD",8600,"KRN",409.61,"NM",0)
^9.68A^4^4
"BLD",8600,"KRN",409.61,"NM",1,0)
IBDF QUICK SELECTION EDIT^^0
"BLD",8600,"KRN",409.61,"NM",2,0)
IBDF UTIL COMPLETE LIST TEMP^^0
"BLD",8600,"KRN",409.61,"NM",3,0)
IBDF UTIL PRIMARY SCREEN^^0
"BLD",8600,"KRN",409.61,"NM",4,0)
IBDF ICD10 STATUS REPORT^^0
"BLD",8600,"KRN",409.61,"NM","B","IBDF ICD10 STATUS REPORT",4)

"BLD",8600,"KRN",409.61,"NM","B","IBDF QUICK SELECTION EDIT",1)

"BLD",8600,"KRN",409.61,"NM","B","IBDF UTIL COMPLETE LIST TEMP",2)

"BLD",8600,"KRN",409.61,"NM","B","IBDF UTIL PRIMARY SCREEN",3)

"BLD",8600,"KRN",771,0)
771
"BLD",8600,"KRN",771,"NM",0)
^9.68A^^
"BLD",8600,"KRN",779.2,0)
779.2
"BLD",8600,"KRN",779.2,"NM",0)
^9.68A^^
"BLD",8600,"KRN",870,0)
870
"BLD",8600,"KRN",870,"NM",0)
^9.68A^^
"BLD",8600,"KRN",8989.51,0)
8989.51
"BLD",8600,"KRN",8989.51,"NM",0)
^9.68A^^
"BLD",8600,"KRN",8989.52,0)
8989.52
"BLD",8600,"KRN",8994,0)
8994
"BLD",8600,"KRN","B",.4,.4)

"BLD",8600,"KRN","B",.401,.401)

"BLD",8600,"KRN","B",.402,.402)

"BLD",8600,"KRN","B",.403,.403)

"BLD",8600,"KRN","B",.5,.5)

"BLD",8600,"KRN","B",.84,.84)

"BLD",8600,"KRN","B",3.6,3.6)

"BLD",8600,"KRN","B",3.8,3.8)

"BLD",8600,"KRN","B",9.2,9.2)

"BLD",8600,"KRN","B",9.8,9.8)

"BLD",8600,"KRN","B",19,19)

"BLD",8600,"KRN","B",19.1,19.1)

"BLD",8600,"KRN","B",101,101)

"BLD",8600,"KRN","B",409.61,409.61)

"BLD",8600,"KRN","B",771,771)

"BLD",8600,"KRN","B",779.2,779.2)

"BLD",8600,"KRN","B",870,870)

"BLD",8600,"KRN","B",8989.51,8989.51)

"BLD",8600,"KRN","B",8989.52,8989.52)

"BLD",8600,"KRN","B",8994,8994)

"BLD",8600,"QDEF")
^^^^NO^^^^YES^^NO
"BLD",8600,"QUES",0)
^9.62^^
"BLD",8600,"REQB",0)
^9.611^5^5
"BLD",8600,"REQB",1,0)
LEX*2.0*80^2
"BLD",8600,"REQB",2,0)
ICD*18.0*57^2
"BLD",8600,"REQB",3,0)
IBD*3.0*55^2
"BLD",8600,"REQB",4,0)
IBD*3.0*56^2
"BLD",8600,"REQB",5,0)
IBD*3.0*64^2
"BLD",8600,"REQB","B","IBD*3.0*55",3)

"BLD",8600,"REQB","B","IBD*3.0*56",4)

"BLD",8600,"REQB","B","IBD*3.0*64",5)

"BLD",8600,"REQB","B","ICD*18.0*57",2)

"BLD",8600,"REQB","B","LEX*2.0*80",1)

"FIA",357)
ENCOUNTER FORM
"FIA",357,0)
^IBE(357,
"FIA",357,0,0)
357I
"FIA",357,0,1)
y^n^f^^^^n^^n
"FIA",357,0,10)

"FIA",357,0,11)

"FIA",357,0,"RLRO")

"FIA",357,0,"VR")
3.0^IBD
"FIA",357,357)
0
"FIA",357,357.02)
0
"FIA",357,357.03)
0
"FIA",357,357.03,.01)

"FIA",357,357.03,.02)

"FIA",357,357.03,.03)

"FIA",357,357.03,.04)

"FIA",357.3)
SELECTION
"FIA",357.3,0)
^IBE(357.3,
"FIA",357.3,0,0)
357.3I
"FIA",357.3,0,1)
y^n^p^^^^n^^n
"FIA",357.3,0,10)

"FIA",357.3,0,11)

"FIA",357.3,0,"RLRO")

"FIA",357.3,0,"VR")
3.0^IBD
"FIA",357.3,357.3)
1
"FIA",357.3,357.3,4.01)

"FIA",357.3,357.3,4.02)

"FIA",357.6)
PACKAGE INTERFACE
"FIA",357.6,0)
^IBE(357.6,
"FIA",357.6,0,0)
357.6I
"FIA",357.6,0,1)
y^n^p^^^^n^^n
"FIA",357.6,0,10)

"FIA",357.6,0,11)

"FIA",357.6,0,"RLRO")

"FIA",357.6,0,"VR")
3.0^IBD
"FIA",357.6,357.6)
1
"FIA",357.6,357.6,.22)

"INIT")
POST^IBD3P63
"KRN",19,3599,-1)
2^1
"KRN",19,3599,0)
IBDF REPORTS MENU^Reports and Utilities^^M^66481^^^^^^^76
"KRN",19,3599,10,0)
^19.01IP^24^24
"KRN",19,3599,10,24,0)
11300^UP
"KRN",19,3599,10,24,"^")
IBDF UTIL UPDATE ICD10 STATUS
"KRN",19,3599,"U")
REPORTS AND UTILITIES
"KRN",19,11300,-1)
0^2
"KRN",19,11300,0)
IBDF UTIL UPDATE ICD10 STATUS^Encounter Forms ICD-10 Update^^R^^^^^^^^
"KRN",19,11300,1,0)
^^6^6^3120125^
"KRN",19,11300,1,1,0)
This is a report/Listman display that will enable the user to display a 
"KRN",19,11300,1,2,0)
list of Encounter Forms and Clinics after selecting from several input 
"KRN",19,11300,1,3,0)
options. When the list is displayed the user may then update the ICD-10 
"KRN",19,11300,1,4,0)
Status field which may contain statuses Incomplete, Review or Complete. 
"KRN",19,11300,1,5,0)
The menu at the bottom will allow reselection and dispaly, update status, 
"KRN",19,11300,1,6,0)
print list or jump to another part of the list.
"KRN",19,11300,25)
IBDFUTL4
"KRN",19,11300,"U")
ENCOUNTER FORMS ICD-10 UPDATE
"KRN",101,4430,-1)
0^2
"KRN",101,4430,0)
IBDF ICD10 STATUS UPDATE CL^Change List^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,4430,4)
25^1^^CL
"KRN",101,4430,10,0)
^101.01PA
"KRN",101,4430,15)
K IBDRE
"KRN",101,4430,20)
S IBDRE=1 D CL^IBDFUTL4
"KRN",101,4430,28)
Select Action:
"KRN",101,4430,99)
63055,60138
"KRN",101,4431,-1)
0^1
"KRN",101,4431,0)
IBDF ICD10 STATUS UPDATE^IBDF ICD10 Status Update^^M^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,4431,4)
26^4
"KRN",101,4431,10,0)
^101.01PA^5^4
"KRN",101,4431,10,1,0)
4430^CL^1^
"KRN",101,4431,10,1,"^")
IBDF ICD10 STATUS UPDATE CL
"KRN",101,4431,10,2,0)
4432^JP^2^
"KRN",101,4431,10,2,"^")
IBDF ICD10 STATUS UPDATE JP
"KRN",101,4431,10,3,0)
4433^PL^3^
"KRN",101,4431,10,3,"^")
IBDF ICD10 STATUS UPDATE PL
"KRN",101,4431,10,5,0)
4434^IS^4^
"KRN",101,4431,10,5,"^")
IBDF ICD10 STATUS UPDATE IS
"KRN",101,4431,26)
D SHOW^VALM
"KRN",101,4431,28)
Select Action:
"KRN",101,4431,99)
63055,60138
"KRN",101,4432,-1)
0^3
"KRN",101,4432,0)
IBDF ICD10 STATUS UPDATE JP^Jump List^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,4432,4)
26^4^^JP
"KRN",101,4432,20)
D JP^IBDFUTL4
"KRN",101,4432,99)
63055,60138
"KRN",101,4433,-1)
0^5
"KRN",101,4433,0)
IBDF ICD10 STATUS UPDATE PL^Print List^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,4433,4)
26^4^^PL
"KRN",101,4433,20)
D PRTL^VALM1
"KRN",101,4433,28)
Select Action:
"KRN",101,4433,99)
63055,60138
"KRN",101,4434,-1)
0^4
"KRN",101,4434,0)
IBDF ICD10 STATUS UPDATE IS^ICD10 Update Status^^A^^^^^^^^AUTOMATED INFO COLLECTION SYS
"KRN",101,4434,4)
26^4^^IS
"KRN",101,4434,20)
D IS^IBDFUTL4
"KRN",101,4434,28)

"KRN",101,4434,99)
63055,60138
"KRN",409.61,143,-1)
0^1
"KRN",409.61,143,0)
IBDF QUICK SELECTION EDIT^1^^132^5^18^1^1^Selection List^IBDF QUICK EDIT ACTIONS MENU^Selection List Display^1^^
"KRN",409.61,143,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,143,"ARRAY")
 ^TMP("SEL",$J)
"KRN",409.61,143,"COL",0)
^409.621^8^6
"KRN",409.61,143,"COL",1,0)
CODE^7^8^CODE
"KRN",409.61,143,"COL",2,0)
CODE TEXT^23^52^NARRATIVE
"KRN",409.61,143,"COL",5,0)
ID^1^2^^R^1
"KRN",409.61,143,"COL",6,0)
ORDER^16^5^ORDER
"KRN",409.61,143,"COL",7,0)
ALT TEXT^81^26^ALTERNATE NARRATIVE
"KRN",409.61,143,"COL",8,0)
LEXICON^109^23^CLINICAL TERM
"KRN",409.61,143,"COL","AIDENT",1,5)

"KRN",409.61,143,"COL","B","ALT TEXT",7)

"KRN",409.61,143,"COL","B","CODE",1)

"KRN",409.61,143,"COL","B","CODE TEXT",2)

"KRN",409.61,143,"COL","B","ID",5)

"KRN",409.61,143,"COL","B","LEXICON",8)

"KRN",409.61,143,"COL","B","ORDER",6)

"KRN",409.61,143,"FNL")
D EXIT^IBDFQSL1
"KRN",409.61,143,"HDR")
D HDR^IBDFQSL1
"KRN",409.61,143,"HLP")
D HELP^IBDFQSL1
"KRN",409.61,143,"INIT")
D INIT^IBDFQSL1
"KRN",409.61,146,-1)
0^2
"KRN",409.61,146,0)
IBDF UTIL COMPLETE LIST TEMP^1^^80^5^18^1^1^Entry^IBDF UTIL COMPLETE LIST MENU^Complete Invalid List^3^^1
"KRN",409.61,146,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,146,"ARRAY")
 ^TMP("IBDCODE",$J)
"KRN",409.61,146,"COL",0)
^409.621^3^3
"KRN",409.61,146,"COL",1,0)
CODE^9^8^CODE
"KRN",409.61,146,"COL",2,0)
CODE TEXT^19^25^DESCRIPTION
"KRN",409.61,146,"COL",3,0)
CATEGORY^46^25^CATEGORY
"KRN",409.61,146,"COL","B","CATEGORY",3)

"KRN",409.61,146,"COL","B","CODE",1)

"KRN",409.61,146,"COL","B","CODE TEXT",2)

"KRN",409.61,146,"FNL")
D EXIT^IBDFLST
"KRN",409.61,146,"HDR")
D HDR^IBDFLST
"KRN",409.61,146,"HLP")
D HLP^IBDFLST
"KRN",409.61,146,"INIT")
D INIT^IBDFLST
"KRN",409.61,147,-1)
0^3
"KRN",409.61,147,0)
IBDF UTIL PRIMARY SCREEN^1^^80^5^18^1^1^Entry^IBDF UTIL PRIMARY PROTOCOL^Maintenance Utility^1^^1
"KRN",409.61,147,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,147,"ARRAY")
 ^TMP("IBDCPT",$J)
"KRN",409.61,147,"COL",0)
^409.621^5^5
"KRN",409.61,147,"COL",1,0)
CODE^9^8^CODE
"KRN",409.61,147,"COL",2,0)
CODE TEXT^19^15^DESCRIPTION
"KRN",409.61,147,"COL",3,0)
BLOCK NAME^36^14^BLOCK
"KRN",409.61,147,"COL",4,0)
FORM NAME^52^14^FORM
"KRN",409.61,147,"COL",5,0)
CLINIC^68^14^CLINIC
"KRN",409.61,147,"COL","B","BLOCK NAME",3)

"KRN",409.61,147,"COL","B","CLINIC",5)

"KRN",409.61,147,"COL","B","CODE",1)

"KRN",409.61,147,"COL","B","CODE TEXT",2)

"KRN",409.61,147,"COL","B","FORM NAME",4)

"KRN",409.61,147,"EXP")
D EXP^IBDFUTL
"KRN",409.61,147,"FNL")
D EXIT^IBDFUTL
"KRN",409.61,147,"HDR")
D HDR^IBDFUTL
"KRN",409.61,147,"HLP")
D HLP^IBDFUTL
"KRN",409.61,147,"INIT")
D INIT^IBDFUTL
"KRN",409.61,701,-1)
0^4
"KRN",409.61,701,0)
IBDF ICD10 STATUS REPORT^1^^80^5^14^0^1^^IBDF ICD10 STATUS UPDATE^Encounter Forms ICD-10 Update^1^^1
"KRN",409.61,701,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,701,"ARRAY")
 ^TMP("IBDFUTL4",$J)
"KRN",409.61,701,"COL",0)
^409.621
"KRN",409.61,701,"EXP")
D EXP^IBDFUTL4
"KRN",409.61,701,"FNL")
D EXIT^IBDFUTL4
"KRN",409.61,701,"HDR")
D HDR^IBDFUTL4
"KRN",409.61,701,"HLP")
D HELP^IBDFUTL4
"KRN",409.61,701,"INIT")
D INIT^IBDFUTL4
"MBREQ")
0
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",76,-1)
1^1
"PKG",76,0)
AUTOMATED INFO COLLECTION SYS^IBD^The utilities for generating a paper encounter form.
"PKG",76,22,0)
^9.49I^1^1
"PKG",76,22,1,0)
3.0^2970212^2970501^1
"PKG",76,22,1,"PAH",1,0)
63^3140311^12443
"PKG",76,22,1,"PAH",1,1,0)
^^1^1^3140311
"PKG",76,22,1,"PAH",1,1,1,0)
AICS ICD-10 CLASS 1 REMEDIATION
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
44
"RTN","IBD3P63")
0^2^B207259739^n/a
"RTN","IBD3P63",1,0)
IBD3P63  ;ALB/SS - POST INSTALL ROUTINE FOR IBD*3*63 ;07/26/11
"RTN","IBD3P63",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;APR 24, 1997;Build 80
"RTN","IBD3P63",3,0)
 ;
"RTN","IBD3P63",4,0)
 Q
"RTN","IBD3P63",5,0)
 ;
"RTN","IBD3P63",6,0)
POST ; post install for IBD*3*63
"RTN","IBD3P63",7,0)
 N IBDBLK,IBDIPNAM,IBDI10,IBDI9,IBDRETV,IBDFRIEN,IBDEXST
"RTN","IBD3P63",8,0)
 D MES^XPDUTL("Starting post-install of IBD*3*63")
"RTN","IBD3P63",9,0)
 D MES^XPDUTL(" ")
"RTN","IBD3P63",10,0)
 D INACT^IBD3P63A
"RTN","IBD3P63",11,0)
 D MES^XPDUTL(" ")
"RTN","IBD3P63",12,0)
 I $$PATCH^XPDUTL("IBD*3.0*63") D MES^XPDUTL("Skipping ICD-10 Package Interface file creation. Previously installed.") Q
"RTN","IBD3P63",13,0)
 ;
"RTN","IBD3P63",14,0)
 D MES^XPDUTL("Adding an ""ICD-10 DIAGNOSIS CODE"" record to #359.1 file")
"RTN","IBD3P63",15,0)
 S IBDEXST=0 I $O(^IBE(359.1,"B","ICD-10 DIAGNOSIS CODE",0))>0 S IBDEXST=1 D MES^XPDUTL("Skipping - ""ICD-10 DIAGNOSIS CODE"" was added previously.")
"RTN","IBD3P63",16,0)
 I IBDEXST=0 I $$ADD3591()<0 D MES^XPDUTL("Error has occurred during the installation.") Q
"RTN","IBD3P63",17,0)
 ;
"RTN","IBD3P63",18,0)
 D MES^XPDUTL("Adding a ""SHORT NARRATIVE (60 CHAR)"" record to #359.1 file")
"RTN","IBD3P63",19,0)
 S IBDEXST=0 I $O(^IBE(359.1,"B","SHORT NARRATIVE (60 CHAR)",0))>0 S IBDEXST=1 D MES^XPDUTL("Skipping - ""SHORT NARRATIVE (60 CHAR)"" was added previously.")
"RTN","IBD3P63",20,0)
 I IBDEXST=0 I $$ADD3591A()<0 D MES^XPDUTL("Error has occurred during the installation.") Q
"RTN","IBD3P63",21,0)
 ;
"RTN","IBD3P63",22,0)
 D MES^XPDUTL("Adding ""INPUT DIAGNOSIS CODE (ICD10)"" record to #357.6 file")
"RTN","IBD3P63",23,0)
 S IBDEXST=0 I $O(^IBE(357.6,"B","INPUT DIAGNOSIS CODE (ICD10)",0))>0 S IBDEXST=1 D MES^XPDUTL("Skipping - ""INPUT DIAGNOSIS CODE (ICD10)"" was added previously.")
"RTN","IBD3P63",24,0)
 I IBDEXST=0 I $$ADD3576A()<0 D MES^XPDUTL("Error has occurred during the installation.") Q
"RTN","IBD3P63",25,0)
 ;
"RTN","IBD3P63",26,0)
 D MES^XPDUTL("Adding ""DG SELECT ICD-10 DIAGNOSIS CODES"" record to #357.6 file")
"RTN","IBD3P63",27,0)
 S IBDEXST=0 I $O(^IBE(357.6,"B","DG SELECT ICD-10 DIAGNOSIS COD",0))>0 S IBDEXST=1 D MES^XPDUTL("Skipping - ""DG SELECT ICD-10 DIAGNOSIS COD"" was added previously.")
"RTN","IBD3P63",28,0)
 I IBDEXST=0 I $$ADD3576B(.IBDIPNAM)<0 D MES^XPDUTL("Error has occurred during the installation.") Q
"RTN","IBD3P63",29,0)
 ;
"RTN","IBD3P63",30,0)
 D MES^XPDUTL("Adding ICD-10 blocks to both the TOOL KIT form and the DEFAULTS form.")
"RTN","IBD3P63",31,0)
 S IBDEXST=0 I $O(^IBE(357.1,"B","ICD-10 DIAGNOSES (V1.0)",0))>0 S IBDEXST=1 D MES^XPDUTL("Skipping - ""ICD-10 DIAGNOSES (V1.0)"" was added previously.")
"RTN","IBD3P63",32,0)
 I IBDEXST=0 I $$ADD3571(.IBDBLK)<0 D MES^XPDUTL("Error has occurred during the installation.") Q
"RTN","IBD3P63",33,0)
 I IBDEXST=0 I $$ADD3572(.IBDBLK,.IBDIPNAM)<0 D MES^XPDUTL("Error has occurred during the installation.") Q
"RTN","IBD3P63",34,0)
 ;
"RTN","IBD3P63",35,0)
 D MES^XPDUTL("Copying block to DEFAULTS form.")
"RTN","IBD3P63",36,0)
 S IBDFRIEN=$O(^IBE(357,"B","DEFAULTS",""))
"RTN","IBD3P63",37,0)
 I +IBDFRIEN=0 D MES^XPDUTL("Warning: The DEFAULTS form wasn't found.") D NODEFAUL^IBD3P63A  ;send the warning message and continue installation
"RTN","IBD3P63",38,0)
 I +IBDFRIEN>0 S IBDRETV=0 D  I IBDRETV<0 D MES^XPDUTL("Error has occurred during the installation.") Q
"RTN","IBD3P63",39,0)
 . I $$CHK10BLK^IBD3P63A(IBDFRIEN)=1 D MES^XPDUTL("Skipping - ICD-10 block was added previously to the Defaults form.") Q
"RTN","IBD3P63",40,0)
 . S IBDRETV=$$COPYBLK(.IBDBLK)
"RTN","IBD3P63",41,0)
 ;
"RTN","IBD3P63",42,0)
 D MES^XPDUTL("Changing block names from ""DIAGNOSIS (V2.1)"" to ""ICD-9 DIAGNOSIS (V2.1)""")
"RTN","IBD3P63",43,0)
 D ICD9NAME^IBD3P63A
"RTN","IBD3P63",44,0)
 ;
"RTN","IBD3P63",45,0)
 D MES^XPDUTL("Changing text in the INPUT DIAGNOSIS CODE (ICD9) record from ""Diagnosis Code"" to ""ICD-9 Diagnosis code""")
"RTN","IBD3P63",46,0)
 S IBDEXST=$$CHK3576^IBD3P63A()
"RTN","IBD3P63",47,0)
 I IBDEXST=1 D MES^XPDUTL("Skipping - text in the INPUT DIAGNOSIS CODE (ICD9) record already changed to indicate ICD-9.")
"RTN","IBD3P63",48,0)
 I IBDEXST=0 I $$CHNG3576^IBD3P63A()<0 D MES^XPDUTL("Error has occurred during the installation.") Q
"RTN","IBD3P63",49,0)
 ;
"RTN","IBD3P63",50,0)
 D MES^XPDUTL("Setting the Coding System flag in #357 field .22 for ICD-9 and ICD-10 Package Interfaces")
"RTN","IBD3P63",51,0)
 S IBDEXST=0
"RTN","IBD3P63",52,0)
 S IBDI9=$O(^IBE(357.6,"B","DG SELECT ICD-9 DIAGNOSIS CODE",0)) I IBDI9'="" S $P(^IBE(357.6,IBDI9,0),U,22)=1 D
"RTN","IBD3P63",53,0)
 . D MES^XPDUTL("Coding System set to 1 in ^IBE(357.6,"_IBDI9_",0)")
"RTN","IBD3P63",54,0)
 S IBDI10=$O(^IBE(357.6,"B","DG SELECT ICD-10 DIAGNOSIS COD",0)) I IBDI10'="" S $P(^IBE(357.6,IBDI10,0),U,22)=30 D
"RTN","IBD3P63",55,0)
 . D MES^XPDUTL("Coding System set to 30 in ^IBE(357.6,"_IBDI10_",0)")
"RTN","IBD3P63",56,0)
 D MES^XPDUTL("Finished pre-install of BPS*1*7")
"RTN","IBD3P63",57,0)
 Q
"RTN","IBD3P63",58,0)
 ;
"RTN","IBD3P63",59,0)
 ;Adding an "ICD-10 DIAGNOSIS CODE" record to 359.1 file
"RTN","IBD3P63",60,0)
ADD3591() ;
"RTN","IBD3P63",61,0)
 N IBDFLD
"RTN","IBD3P63",62,0)
 ;DATA TYPE
"RTN","IBD3P63",63,0)
 S IBDFLD(.01)="ICD-10 DIAGNOSIS CODE"
"RTN","IBD3P63",64,0)
 ;MAXIMUM LENGTH FOR INPUT
"RTN","IBD3P63",65,0)
 S IBDFLD(.02)=8 ;7 chars + decimal point = 8 chars in total: AN?.???? where A - alpha, N numeric and ? - alpha or numeric
"RTN","IBD3P63",66,0)
 ;PRINT FORMAT
"RTN","IBD3P63",67,0)
 S IBDFLD(.05)="___.____"
"RTN","IBD3P63",68,0)
 ;SPACE ALLOCATION
"RTN","IBD3P63",69,0)
 S IBDFLD(.06)=8 ;
"RTN","IBD3P63",70,0)
 ;REQUIRED CONFIDENCE
"RTN","IBD3P63",71,0)
 S IBDFLD(.07)=10 ;
"RTN","IBD3P63",72,0)
 ;PCE DIM VITALS TYPE
"RTN","IBD3P63",73,0)
 S IBDFLD(.12)="ICD10" ;
"RTN","IBD3P63",74,0)
 ;PCE DIM INPUT TRANSFORM
"RTN","IBD3P63",75,0)
 S IBDFLD(1)="D INPICD10^IBDFN8(.X)" ;
"RTN","IBD3P63",76,0)
 ;PAPER KEYBOARD DATA TYPE
"RTN","IBD3P63",77,0)
 S IBDFLD(10.01)="a"
"RTN","IBD3P63",78,0)
 ;PAPER KEYBOARD PICTURE
"RTN","IBD3P63",79,0)
 S IBDFLD(10.02)="XF"
"RTN","IBD3P63",80,0)
 ;PK PICTURES FOR SUBFIELDS
"RTN","IBD3P63",81,0)
 S IBDFLD(10.04)="ANX.XXXX"
"RTN","IBD3P63",82,0)
 ;
"RTN","IBD3P63",83,0)
 S IBDRET=$$INSREC^IBDUTIL1(359.1,"",.IBDFLD,"")
"RTN","IBD3P63",84,0)
 I IBDRET>0 D MES^XPDUTL("  "_IBDFLD(.01)_" has been added to the file #359.1 ") Q +IBDRET
"RTN","IBD3P63",85,0)
 D MES^XPDUTL("Error: "_IBDFLD(.01)_" has NOT been added to the file #359.1 ")
"RTN","IBD3P63",86,0)
 Q -1
"RTN","IBD3P63",87,0)
 ;
"RTN","IBD3P63",88,0)
 ;adding "SHORT NARRATIVE (60 CHAR)" to file 359.1
"RTN","IBD3P63",89,0)
ADD3591A() ;
"RTN","IBD3P63",90,0)
 N IBDFLD,IBDBORDR,IBDPOUND
"RTN","IBD3P63",91,0)
 S $P(IBDBORDR,"_",60)=""
"RTN","IBD3P63",92,0)
 S $P(IBDPOUND,"#",60)=""
"RTN","IBD3P63",93,0)
 ;DATA TYPE
"RTN","IBD3P63",94,0)
 S IBDFLD(.01)="SHORT NARRATIVE (60 CHAR)"
"RTN","IBD3P63",95,0)
 ;MAXIMUM LENGTH FOR INPUT
"RTN","IBD3P63",96,0)
 S IBDFLD(.02)=60
"RTN","IBD3P63",97,0)
 ;PRINT FORMAT
"RTN","IBD3P63",98,0)
 S IBDFLD(.05)=IBDBORDR
"RTN","IBD3P63",99,0)
 ;SPACE ALLOCATION
"RTN","IBD3P63",100,0)
 S IBDFLD(.06)=60 ;
"RTN","IBD3P63",101,0)
 ;REQUIRED CONFIDENCE
"RTN","IBD3P63",102,0)
 S IBDFLD(.07)=10 ;
"RTN","IBD3P63",103,0)
 ;PCE DIM VITALS TYPE
"RTN","IBD3P63",104,0)
 S IBDFLD(.12)="NARR" ;
"RTN","IBD3P63",105,0)
 ;PAPER KEYBOARD DATA TYPE
"RTN","IBD3P63",106,0)
 S IBDFLD(10.01)="a"
"RTN","IBD3P63",107,0)
 ;PK PICTURES FOR SUBFIELDS
"RTN","IBD3P63",108,0)
 S IBDFLD(10.04)=IBDPOUND
"RTN","IBD3P63",109,0)
 ;
"RTN","IBD3P63",110,0)
 S IBDRET=$$INSREC^IBDUTIL1(359.1,"",.IBDFLD,"")
"RTN","IBD3P63",111,0)
 I IBDRET>0 D MES^XPDUTL("  "_IBDFLD(.01)_" has been added to the file #359.1 ") Q +IBDRET
"RTN","IBD3P63",112,0)
 D MES^XPDUTL("Error: "_IBDFLD(.01)_" has NOT been added to the file #359.1 ")
"RTN","IBD3P63",113,0)
 Q -1
"RTN","IBD3P63",114,0)
 ;
"RTN","IBD3P63",115,0)
 ;adding "INPUT DIAGNOSIS CODE (ICD10)" to #357.6 file
"RTN","IBD3P63",116,0)
ADD3576A() ;
"RTN","IBD3P63",117,0)
 ;
"RTN","IBD3P63",118,0)
 N IBDFLD,IBDRET,IBDIEN10,IBDARR,IBDIEN9,IBDSUB,IBDENTRY
"RTN","IBD3P63",119,0)
 ;populate array
"RTN","IBD3P63",120,0)
 S IBDIEN9=$$ARR3576^IBD3P63("INPUT DIAGNOSIS CODE (ICD9)",.IBDFLD)
"RTN","IBD3P63",121,0)
 I IBDIEN9=0 D MES^XPDUTL("Error: "_IBDFLD(.01)_" has NOT been added to the file #357.6 because ICD9 record wasn't found") Q -1
"RTN","IBD3P63",122,0)
 ;override/set some of the fields
"RTN","IBD3P63",123,0)
 S (IBDFLD(.01),IBDENTRY)="INPUT DIAGNOSIS CODE (ICD10)"
"RTN","IBD3P63",124,0)
 ;kill description node
"RTN","IBD3P63",125,0)
 K IBDFLD(1)
"RTN","IBD3P63",126,0)
 ;
"RTN","IBD3P63",127,0)
 S IBDFLD(3)="INPUT ICD10 ICD-10 DIAGNOSIS CODES"
"RTN","IBD3P63",128,0)
 ;PCE DIM INPUT TRANSFORM: D INPICD10^IBDFN8(.X)
"RTN","IBD3P63",129,0)
 S IBDFLD(9)="D INPICD10^IBDFN8(.X)"
"RTN","IBD3P63",130,0)
 ;HELP TEXT: Enter an active ICD10 diagnosis code.
"RTN","IBD3P63",131,0)
 S IBDFLD(10)="Enter at least two characters of an active ICD10 diagnosis code."
"RTN","IBD3P63",132,0)
 ;VALIDATOR: D TESTICD0^IBDFN7
"RTN","IBD3P63",133,0)
 S IBDFLD(11)="D TESTICD0^IBDFN7"
"RTN","IBD3P63",134,0)
 ;PCE DIM OUTPUT TRANSFORM: S Y=$$DSPICD10^IBDFN9(Y)
"RTN","IBD3P63",135,0)
 S IBDFLD(14)="S Y=$$DSPICD10^IBDFN9(Y)"
"RTN","IBD3P63",136,0)
 ;SELECTOR: D SLCTDX10^IBDFN12(.X)
"RTN","IBD3P63",137,0)
 S IBDFLD(17)="D SLCTDX10^IBDFN12(.X)"
"RTN","IBD3P63",138,0)
 ;MANUAL DATA ENTRY ROUTINE: D LIST10^IBDFDE2(.IBDSEL,.IBDF,"Diagnosis Code")
"RTN","IBD3P63",139,0)
 S IBDFLD(18)="S IBDF(""OTHER"")=""80^I '$P(^(0),U,9)"" D LIST^IBDFDE2(.IBDSEL,.IBDF,""ICD-10 Diagnosis Code"")"
"RTN","IBD3P63",140,0)
 ;EXTERNAL DISPLAY VALUES: D DX10^IBDFN14(X)
"RTN","IBD3P63",141,0)
 S IBDFLD(19)="D DX10^IBDFN14(X)"
"RTN","IBD3P63",142,0)
 ;kill some other nodes
"RTN","IBD3P63",143,0)
 K IBDFLD(16),IBDFLD(20),IBDFLD(21)
"RTN","IBD3P63",144,0)
 ;create a new entry
"RTN","IBD3P63",145,0)
 S IBDRET=$$INSREC^IBDUTIL1(357.6,"",.IBDFLD,"")
"RTN","IBD3P63",146,0)
 I IBDRET<1 D MES^XPDUTL("Error: "_IBDFLD(.01)_" has NOT been added to the file #357.6 ") Q -1
"RTN","IBD3P63",147,0)
 D MES^XPDUTL("  "_IBDFLD(.01)_" has been added to the file #357.6 ")
"RTN","IBD3P63",148,0)
 S IBDIEN10=+IBDRET
"RTN","IBD3P63",149,0)
 ;populate DESCRIPTION
"RTN","IBD3P63",150,0)
 ;DESCRIPTION: Used for inputting ICD10 diagnosis codes.
"RTN","IBD3P63",151,0)
 S IBDARR(1,0)="Used for inputting ICD10 diagnosis codes."
"RTN","IBD3P63",152,0)
 S IBDRET=$$UPDWD^IBDUTIL1(357.6,IBDIEN10_",",1,"KA",.IBDARR)
"RTN","IBD3P63",153,0)
 I IBDRET<0 D MES^XPDUTL("Error: Description was NOT added for the"_IBDFLD(.01)_" #357.6 entry")
"RTN","IBD3P63",154,0)
 ;
"RTN","IBD3P63",155,0)
 ;get ALLOWABLE QUALIFIERS from ICD9 record
"RTN","IBD3P63",156,0)
 ;populate 357.613 multiple
"RTN","IBD3P63",157,0)
 ;
"RTN","IBD3P63",158,0)
 K IBDFLD,IBDARR
"RTN","IBD3P63",159,0)
 D U357613(IBDIEN9,.IBDARR)
"RTN","IBD3P63",160,0)
 S IBDSUB=0,IBDRET=1
"RTN","IBD3P63",161,0)
 F  S IBDSUB=$O(IBDARR(IBDSUB)) Q:+IBDSUB=0  D
"RTN","IBD3P63",162,0)
 . S IBDFLD(.01)=$G(IBDARR(IBDSUB,.01))
"RTN","IBD3P63",163,0)
 . S IBDFLD(.03)=$G(IBDARR(IBDSUB,.03))
"RTN","IBD3P63",164,0)
 . S IBDFLD(.08)=$G(IBDARR(IBDSUB,.08))
"RTN","IBD3P63",165,0)
 . S IBDRET=$$INSREC^IBDUTIL1(357.613,IBDIEN10,.IBDFLD,"")
"RTN","IBD3P63",166,0)
 . I IBDRET<0 D MES^XPDUTL("Error: "_IBDFLD(.01)_" ALLOWABLE QUALIFIER was NOT added for the "_IBDENTRY_" #357.6 entry") Q
"RTN","IBD3P63",167,0)
 . D MES^XPDUTL("  "_IBDFLD(.01)_" has been added to the #357.613 multiple")
"RTN","IBD3P63",168,0)
 Q 0
"RTN","IBD3P63",169,0)
 ;
"RTN","IBD3P63",170,0)
 ;adding "DG SELECT ICD-10 DIAGNOSIS CODES"
"RTN","IBD3P63",171,0)
ADD3576B(IBDIPNAM) ;
"RTN","IBD3P63",172,0)
 N IBDFLD,IBDRET,IBDIEN10,IBDARR,IBDIEN9,IBDIEN13
"RTN","IBD3P63",173,0)
 N IBDIEN162,IBDIEN166,IBDSUB,IBDENTRY
"RTN","IBD3P63",174,0)
 ;populate array
"RTN","IBD3P63",175,0)
 S IBDIEN9=$$ARR3576^IBD3P63("DG SELECT ICD-9 DIAGNOSIS CODES",.IBDFLD)
"RTN","IBD3P63",176,0)
 I IBDIEN9=0 D MES^XPDUTL("Error: "_IBDFLD(.01)_" has NOT been added to the file #357.6 because ICD9 record wasn't found") Q -1
"RTN","IBD3P63",177,0)
 ;override/set some of the fields
"RTN","IBD3P63",178,0)
 S IBDIEN13=$O(^IBE(357.6,"B","INPUT DIAGNOSIS CODE (ICD10)",""))
"RTN","IBD3P63",179,0)
 S (IBDFLD(.01),IBDENTRY)="DG SELECT ICD-10 DIAGNOSIS CODES"
"RTN","IBD3P63",180,0)
 S IBDIPNAM=$E(IBDENTRY,1,30) ;needed for file 357.2; "B" cross ref has only 30 characters.
"RTN","IBD3P63",181,0)
 S IBDFLD(.02)="ICD10"
"RTN","IBD3P63",182,0)
 S IBDFLD(.03)="IBDFN4"
"RTN","IBD3P63",183,0)
 S IBDFLD(.13)=IBDIEN13
"RTN","IBD3P63",184,0)
 ;kill description node
"RTN","IBD3P63",185,0)
 K IBDFLD(1)
"RTN","IBD3P63",186,0)
 S IBDFLD(2.01)="CODE"
"RTN","IBD3P63",187,0)
 S IBDFLD(2.02)=8
"RTN","IBD3P63",188,0)
 S IBDFLD(3)="SELECT ICD10 ICD-10 CODES DIAGNOSIS"
"RTN","IBD3P63",189,0)
 S IBDFLD(9)="D INPICD10^IBDFN8(.X)"
"RTN","IBD3P63",190,0)
 S IBDFLD(11)="D TESTICD0^IBDFN7"
"RTN","IBD3P63",191,0)
 S IBDIEN162=$O(^IBE(359.1,"B","SHORT NARRATIVE (60 CHAR)",""))
"RTN","IBD3P63",192,0)
 S IBDFLD(16.2)=IBDIEN162
"RTN","IBD3P63",193,0)
 S IBDIEN166=$O(^IBE(359.1,"B","ICD-10 DIAGNOSIS CODE",""))
"RTN","IBD3P63",194,0)
 S IBDFLD(16.6)=IBDIEN166
"RTN","IBD3P63",195,0)
 S IBDFLD(16.7)="ICD-10 Code"
"RTN","IBD3P63",196,0)
 S IBDFLD(17)="D SLCTDX10^IBDFN12(.X)"
"RTN","IBD3P63",197,0)
 S IBDFLD(18)=""
"RTN","IBD3P63",198,0)
 S IBDFLD(19)="D DX10^IBDFN14(X)"
"RTN","IBD3P63",199,0)
 ;create a new entry
"RTN","IBD3P63",200,0)
 S IBDRET=$$INSREC^IBDUTIL1(357.6,"",.IBDFLD,"")
"RTN","IBD3P63",201,0)
 I IBDRET<1 D MES^XPDUTL("Error: "_IBDFLD(.01)_" has NOT been added to the file #357.6 ") Q -1
"RTN","IBD3P63",202,0)
 D MES^XPDUTL("  "_IBDFLD(.01)_" has been added to the file #357.6 ")
"RTN","IBD3P63",203,0)
 S IBDIEN10=+IBDRET
"RTN","IBD3P63",204,0)
 ;populate DESCRIPTION
"RTN","IBD3P63",205,0)
 ;DESCRIPTION: Used for inputting ICD10 diagnosis codes.
"RTN","IBD3P63",206,0)
 S IBDARR(1,0)="Allows the user to select ICD-10 diagnosis codes from the ICD Diagnosis"
"RTN","IBD3P63",207,0)
 S IBDARR(2,0)="file. Allows only active codes to be selected."
"RTN","IBD3P63",208,0)
 S IBDRET=$$UPDWD^IBDUTIL1(357.6,IBDIEN10_",",1,"KA",.IBDARR)
"RTN","IBD3P63",209,0)
 I IBDRET<0 D MES^XPDUTL("Error: Description was NOT added for the"_IBDFLD(.01)_" #357.6 entry")
"RTN","IBD3P63",210,0)
 ;
"RTN","IBD3P63",211,0)
 ;get ALLOWABLE QUALIFIERS from ICD9 record
"RTN","IBD3P63",212,0)
 ; populate 357.613 multiple
"RTN","IBD3P63",213,0)
 ; 
"RTN","IBD3P63",214,0)
 K IBDFLD,IBDARR
"RTN","IBD3P63",215,0)
 D U357613(IBDIEN9,.IBDARR)
"RTN","IBD3P63",216,0)
 S IBDSUB=0,IBDRET=1
"RTN","IBD3P63",217,0)
 F  S IBDSUB=$O(IBDARR(IBDSUB)) Q:+IBDSUB=0!(IBDRET<1)  D
"RTN","IBD3P63",218,0)
 . S IBDFLD(.01)=$G(IBDARR(IBDSUB,.01))
"RTN","IBD3P63",219,0)
 . S IBDFLD(.03)=$G(IBDARR(IBDSUB,.03))
"RTN","IBD3P63",220,0)
 . S IBDFLD(.08)=$G(IBDARR(IBDSUB,.08))
"RTN","IBD3P63",221,0)
 . S IBDRET=$$INSREC^IBDUTIL1(357.613,IBDIEN10,.IBDFLD,"")
"RTN","IBD3P63",222,0)
 . I IBDRET<0 D MES^XPDUTL("Error: "_IBDFLD(.01)_" ALLOWABLE QUALIFIER was NOT added for the "_IBDENTRY_" #357.6 entry") Q
"RTN","IBD3P63",223,0)
 . D MES^XPDUTL("  "_IBDFLD(.01)_" has been added to the #357.613 multiple")
"RTN","IBD3P63",224,0)
 ;
"RTN","IBD3P63",225,0)
 ;get DATA DESCRIPTION from ICD9 record
"RTN","IBD3P63",226,0)
 ; populate 357.615 multiple
"RTN","IBD3P63",227,0)
 ; 
"RTN","IBD3P63",228,0)
 K IBDFLD,IBDARR
"RTN","IBD3P63",229,0)
 D U357615(IBDIEN9,.IBDARR)
"RTN","IBD3P63",230,0)
 S IBDSUB=0,IBDRET=1
"RTN","IBD3P63",231,0)
 F  S IBDSUB=$O(IBDARR(IBDSUB)) Q:+IBDSUB=0!(IBDRET<1)  D
"RTN","IBD3P63",232,0)
 . S IBDFLD(.01)=$G(IBDARR(IBDSUB,.01))
"RTN","IBD3P63",233,0)
 . S IBDFLD(.02)=$G(IBDARR(IBDSUB,.02))
"RTN","IBD3P63",234,0)
 . S IBDFLD(.03)=$G(IBDARR(IBDSUB,.03))
"RTN","IBD3P63",235,0)
 . S IBDFLD(.04)=$G(IBDARR(IBDSUB,.04))
"RTN","IBD3P63",236,0)
 . S IBDFLD(.05)=$G(IBDARR(IBDSUB,.05))
"RTN","IBD3P63",237,0)
 . S IBDRET=$$INSREC^IBDUTIL1(357.615,IBDIEN10,.IBDFLD,"")
"RTN","IBD3P63",238,0)
 . I IBDRET<0 D MES^XPDUTL("Error: "_IBDFLD(.01)_" DATA DESCRIPTION was NOT added for the "_IBDENTRY_" #357.6 entry") Q
"RTN","IBD3P63",239,0)
 . D MES^XPDUTL("  "_IBDFLD(.01)_" has been added to the #357.615 multiple")
"RTN","IBD3P63",240,0)
 ;
"RTN","IBD3P63",241,0)
 Q 0
"RTN","IBD3P63",242,0)
 ;
"RTN","IBD3P63",243,0)
 ;set array for #357.6 based on existing ICD-9 record
"RTN","IBD3P63",244,0)
 ;returns IEN for the entry if found
"RTN","IBD3P63",245,0)
 ; and array as
"RTN","IBD3P63",246,0)
 ; IBDFLD10(FLDNO)=value
"RTN","IBD3P63",247,0)
 ;if not then returns 0
"RTN","IBD3P63",248,0)
 ;Example: D ARR3576A^IBD3P63("DG SELECT ICD-9 DIAGNOSIS CODES",.IBDFLDS)
"RTN","IBD3P63",249,0)
ARR3576(IBDICD9,IBDFLD10) ;
"RTN","IBD3P63",250,0)
 ;
"RTN","IBD3P63",251,0)
 N IBDIEN9,IBDFLD9,IBDIEN,IBDA,IBDFLD
"RTN","IBD3P63",252,0)
 ;note: "B" x-ref logic for this file truncates the value to 30 chars
"RTN","IBD3P63",253,0)
 S IBDIEN9=$O(^IBE(357.6,"B",$E(IBDICD9,1,30),""))
"RTN","IBD3P63",254,0)
 I +IBDIEN9<1 Q 0
"RTN","IBD3P63",255,0)
 D GETS^DIQ(357.6,IBDIEN9_",","*","I","IBDFLD9")
"RTN","IBD3P63",256,0)
 M IBDA=IBDFLD9(357.6,IBDIEN9_",")
"RTN","IBD3P63",257,0)
 S IBDFLD="" F  S IBDFLD=$O(IBDA(IBDFLD)) Q:IBDFLD=""  D
"RTN","IBD3P63",258,0)
 . S IBDFLD10(IBDFLD)=$G(IBDA(IBDFLD,"I"))
"RTN","IBD3P63",259,0)
 Q IBDIEN9
"RTN","IBD3P63",260,0)
 ;
"RTN","IBD3P63",261,0)
 ;populate 357.613 multiple
"RTN","IBD3P63",262,0)
U357613(IBDIEN9,IBDFLD) ;
"RTN","IBD3P63",263,0)
 ;
"RTN","IBD3P63",264,0)
 N IBDSUB
"RTN","IBD3P63",265,0)
 S IBDSUB=0
"RTN","IBD3P63",266,0)
 F  S IBDSUB=$O(^IBE(357.6,IBDIEN9,13,IBDSUB)) Q:+IBDSUB=0  D
"RTN","IBD3P63",267,0)
 . S IBDFLD(IBDSUB,.01)=$P($G(^IBE(357.6,IBDIEN9,13,IBDSUB,0)),U,1)
"RTN","IBD3P63",268,0)
 . I IBDFLD(IBDSUB,.01)="" Q
"RTN","IBD3P63",269,0)
 . S IBDFLD(IBDSUB,.03)=$P($G(^IBE(357.6,IBDIEN9,13,IBDSUB,0)),U,3)
"RTN","IBD3P63",270,0)
 . S IBDFLD(IBDSUB,.08)=$P($G(^IBE(357.6,IBDIEN9,13,IBDSUB,0)),U,8)
"RTN","IBD3P63",271,0)
 Q
"RTN","IBD3P63",272,0)
 ;
"RTN","IBD3P63",273,0)
 ;populate 357.615 multiple
"RTN","IBD3P63",274,0)
U357615(IBDIEN9,IBDFLD) ;
"RTN","IBD3P63",275,0)
 ;
"RTN","IBD3P63",276,0)
 N IBDSUB,IBDDESC
"RTN","IBD3P63",277,0)
 S IBDSUB=0
"RTN","IBD3P63",278,0)
 F  S IBDSUB=$O(^IBE(357.6,IBDIEN9,15,IBDSUB)) Q:+IBDSUB=0  D
"RTN","IBD3P63",279,0)
 . S IBDFLD(IBDSUB,.01)=$P($G(^IBE(357.6,IBDIEN9,15,IBDSUB,0)),U,1)
"RTN","IBD3P63",280,0)
 . I IBDFLD(IBDSUB,.01)="" Q
"RTN","IBD3P63",281,0)
 . S IBDDESC=IBDFLD(IBDSUB,.01)
"RTN","IBD3P63",282,0)
 . S IBDFLD(IBDSUB,.02)=$S(IBDDESC="DIAGNOSIS":60,1:$P($G(^IBE(357.6,IBDIEN9,15,IBDSUB,0)),U,2))
"RTN","IBD3P63",283,0)
 . S IBDFLD(IBDSUB,.03)=$P($G(^IBE(357.6,IBDIEN9,15,IBDSUB,0)),U,3)
"RTN","IBD3P63",284,0)
 . S IBDFLD(IBDSUB,.04)=$P($G(^IBE(357.6,IBDIEN9,15,IBDSUB,0)),U,4)
"RTN","IBD3P63",285,0)
 . S IBDFLD(IBDSUB,.05)=$P($G(^IBE(357.6,IBDIEN9,15,IBDSUB,0)),U,5)
"RTN","IBD3P63",286,0)
 Q
"RTN","IBD3P63",287,0)
 ;
"RTN","IBD3P63",288,0)
 ;  Add ICD-10 Diagnosis block to Tool Kit Form
"RTN","IBD3P63",289,0)
ADD3571(IBDBLK) ;
"RTN","IBD3P63",290,0)
 N IBDFLD,IBDNAME,IBDROW,IBDTLKOR
"RTN","IBD3P63",291,0)
 S IBDFORM=$O(^IBE(357,"B","TOOL KIT",""))
"RTN","IBD3P63",292,0)
 I +IBDFORM=0 D MES^XPDUTL("Error: Tool Kit form does not exist") Q -1
"RTN","IBD3P63",293,0)
 S IBDNAME="ICD-10 DIAGNOSES (V1.0)"
"RTN","IBD3P63",294,0)
 S IBDFLD(.01)=IBDNAME
"RTN","IBD3P63",295,0)
 S IBDFLD(.02)=IBDFORM
"RTN","IBD3P63",296,0)
 S IBDFLD(.04)=0
"RTN","IBD3P63",297,0)
 S IBDFLD(.05)=0
"RTN","IBD3P63",298,0)
 S IBDFLD(.06)=132
"RTN","IBD3P63",299,0)
 S IBDFLD(.07)=15
"RTN","IBD3P63",300,0)
 S IBDFLD(.1)=1
"RTN","IBD3P63",301,0)
 S IBDFLD(.11)="DIAGNOSIS"
"RTN","IBD3P63",302,0)
 S IBDFLD(.12)="CR"
"RTN","IBD3P63",303,0)
 S IBDFLD(.13)="Common ICD-10 diagnoses"
"RTN","IBD3P63",304,0)
 S IBDTLKOR=$$TKORDER^IBDF13()
"RTN","IBD3P63",305,0)
 S IBDFLD(.14)=IBDTLKOR
"RTN","IBD3P63",306,0)
 S IBDRET=$$INSREC^IBDUTIL1(357.1,"",.IBDFLD,"")
"RTN","IBD3P63",307,0)
 I IBDRET<0 D MES^XPDUTL("Error: "_IBDFLD(.01)_" has NOT been added to the file #357.1") Q -1
"RTN","IBD3P63",308,0)
 S IBDBLK=+IBDRET
"RTN","IBD3P63",309,0)
 D MES^XPDUTL("  "_IBDFLD(.01)_" has been added to file #357.1")
"RTN","IBD3P63",310,0)
 Q 0
"RTN","IBD3P63",311,0)
 ; add selection list to block element.
"RTN","IBD3P63",312,0)
ADD3572(IBDBLK,IBDIPNAM) ;
"RTN","IBD3P63",313,0)
 N IBDIPIEN,IBDFLD,IBDQUIT,IBDLIST,IBDMSG
"RTN","IBD3P63",314,0)
 S IBDIPNAM=$G(IBDIPNAM)
"RTN","IBD3P63",315,0)
 S IBDQUIT=0
"RTN","IBD3P63",316,0)
 I IBDIPNAM="" D MES^XPDUTL("Error:  ICD-10 Interface Package not found in file #357.6.") Q -1
"RTN","IBD3P63",317,0)
 I IBDBLK="" D MES^XPDUTL("Error: Block not found for Tool Kit form") Q -1
"RTN","IBD3P63",318,0)
 S IBDIPIEN=$O(^IBE(357.6,"B",IBDIPNAM,""))
"RTN","IBD3P63",319,0)
 S IBDFLD(.01)="ICD-10 DIAGNOSES"
"RTN","IBD3P63",320,0)
 S IBDFLD(.02)=IBDBLK
"RTN","IBD3P63",321,0)
 S IBDFLD(.07)=4
"RTN","IBD3P63",322,0)
 S IBDFLD(.08)=0
"RTN","IBD3P63",323,0)
 S IBDFLD(.09)="SC"
"RTN","IBD3P63",324,0)
 S IBDFLD(.11)=IBDIPIEN
"RTN","IBD3P63",325,0)
 S IBDFLD(.12)=0
"RTN","IBD3P63",326,0)
 S IBDFLD(.14)=0
"RTN","IBD3P63",327,0)
 S IBDFLD(.16)=1
"RTN","IBD3P63",328,0)
 S IBDFLD(.17)=3
"RTN","IBD3P63",329,0)
 S IBDFLD(.18)=2
"RTN","IBD3P63",330,0)
 S IBDRET=$$INSREC^IBDUTIL1(357.2,"",.IBDFLD,"")
"RTN","IBD3P63",331,0)
 S IBDLIST=+IBDRET  ;set variable for IBDF routine calls
"RTN","IBD3P63",332,0)
 I IBDLIST<0 D MES^XPDUTL("Error: "_IBDFLD(.01)_" has NOT been added to file #357.2 ") Q -1
"RTN","IBD3P63",333,0)
 D MES^XPDUTL("  "_IBDFLD(.01)_" has been added to file #357.2")
"RTN","IBD3P63",334,0)
 D DLISTCNT^IBDFU3(IBDLIST,357.2)  ;if any, delete lists groups.
"RTN","IBD3P63",335,0)
 K IBDFLD
"RTN","IBD3P63",336,0)
 N IBDBUBL,IBDADD,IBDPRIM,IBDSECD
"RTN","IBD3P63",337,0)
 S IBDBUBL=$O(^IBE(357.91,"B","BUBBLE (use for scanning)",""))
"RTN","IBD3P63",338,0)
 S IBDADD=$O(^IBD(357.98,"B","ADD TO PROBLEM LIST",""))
"RTN","IBD3P63",339,0)
 S IBDPRIM=$O(^IBD(357.98,"B","PRIMARY",""))
"RTN","IBD3P63",340,0)
 S IBDSECD=$O(^IBD(357.98,"B","SECONDARY",""))
"RTN","IBD3P63",341,0)
 F IBD=1:1:5 D  Q:IBDQUIT
"RTN","IBD3P63",342,0)
 . K IBDFLD
"RTN","IBD3P63",343,0)
 . S IBDQUIT=0
"RTN","IBD3P63",344,0)
 . D U35722(IBD,.IBDFLD,.IBDBUBL,.IBDADD,.IBDPRIM,.IBDSECD)
"RTN","IBD3P63",345,0)
 . S IBDRET=$$INSREC^IBDUTIL1(357.22,IBDLIST,.IBDFLD,"")
"RTN","IBD3P63",346,0)
 . S IBDMSG="Error:  File #357.22 has not finished its population."
"RTN","IBD3P63",347,0)
 . I IBDRET<0 D MES^XPDUTL(IBDMSG) S IBDQUIT=1 Q
"RTN","IBD3P63",348,0)
 I IBDQUIT Q -1
"RTN","IBD3P63",349,0)
 D MES^XPDUTL("  ICD-10 DIAGNOSES has populated file #357.22.")
"RTN","IBD3P63",350,0)
 Q 0
"RTN","IBD3P63",351,0)
 ;
"RTN","IBD3P63",352,0)
 ; populate file #357.22
"RTN","IBD3P63",353,0)
U35722(IBD,IBDFLD,IBDBUBL,IBDADD,IBDPRIM,IBDSECD) ;
"RTN","IBD3P63",354,0)
 S IBDFLD(.01)=$S(IBD=1:4,IBD=2:3,IBD=3:5,IBD=4:1,1:2)
"RTN","IBD3P63",355,0)
 S IBDFLD(.02)=$S(IBD=1:"CODE",IBD=2:"DIAGNOSIS",IBD=3:"ADD",IBD=4:"P",1:"S")
"RTN","IBD3P63",356,0)
 S IBDFLD(.03)=$S(IBD=1:8,IBD=2:64,1:"")
"RTN","IBD3P63",357,0)
 S IBDFLD(.04)=$S(IBD=1:1,IBD=2:1,1:2)
"RTN","IBD3P63",358,0)
 S IBDFLD(.05)=$S(IBD=1:1,IBD=2:2,1:"")
"RTN","IBD3P63",359,0)
 S IBDFLD(.06)=$S(IBD=1:"",IBD=2:"",1:IBDBUBL)
"RTN","IBD3P63",360,0)
 S IBDFLD(.07)=$S(IBD=1:0,IBD=2:1,1:"")
"RTN","IBD3P63",361,0)
 S IBDFLD(.08)=$S(IBD=1:"",IBD=2:"",1:1)
"RTN","IBD3P63",362,0)
 S IBDFLD(.09)=$S(IBD=1:"",IBD=2:"",IBD=3:IBDADD,IBD=4:IBDPRIM,1:IBDSECD)
"RTN","IBD3P63",363,0)
 S IBDFLD(.1)=$S(IBD=1:"",IBD=2:"",IBD=3:0,IBD=4:1,1:0)
"RTN","IBD3P63",364,0)
 Q
"RTN","IBD3P63",365,0)
 ;
"RTN","IBD3P63",366,0)
 ; Copy block created in ADD3571 and ADD3572 to DEFAULTS form.
"RTN","IBD3P63",367,0)
COPYBLK(IBDCBLK) ;
"RTN","IBD3P63",368,0)
 N IBDBIEN,IBDPRINT,IBDFORM,IBDEVICE,IBDNEWBK,IBDNODE,IBDROW,IBDROW1,IBDROW2,IBDROWST,IBDROWS
"RTN","IBD3P63",369,0)
 D DEVICE^IBDFUA(1,.IBDEVICE)
"RTN","IBD3P63",370,0)
 S IBDFORM=$O(^IBE(357,"B","DEFAULTS",""))
"RTN","IBD3P63",371,0)
 I +IBDFORM=0 D MES^XPDUTL("Error: Defaults form does not exist") Q -2
"RTN","IBD3P63",372,0)
 I '$$LOCKFRM2^IBDFU7(IBDFORM) D MES^XPDUTL("Error: The form DEFAULTS is currently being edited by another user.") Q -1
"RTN","IBD3P63",373,0)
 D PRNTPRMS^IBDFU1C(.IBDPRINT,0,1,0,1),UNCMPL^IBDF19(.IBDFORM,0)
"RTN","IBD3P63",374,0)
 ; Set up IBDROW array to calculate starting row position on DEFAULTS form.
"RTN","IBD3P63",375,0)
 S IBDBIEN="" F  S IBDBIEN=$O(^IBE(357.1,"C",IBDFORM,IBDBIEN)) Q:IBDBIEN=""  D
"RTN","IBD3P63",376,0)
 .S IBDROW=$P(^IBE(357.1,IBDBIEN,0),U,4),IBDROW(IBDROW,IBDBIEN)=""
"RTN","IBD3P63",377,0)
 S (IBDROW1,IBDROW2,IBDBIEN)=""
"RTN","IBD3P63",378,0)
 S IBDROW1=$O(IBDROW(IBDROW1),-1),IBDROW2=$O(IBDROW(IBDROW1),-1)
"RTN","IBD3P63",379,0)
 S IBDROWS=IBDROW1-IBDROW2
"RTN","IBD3P63",380,0)
 S IBDBIEN=$S(IBDROWS>20:$O(IBDROW(IBDROW2,"")),1:$O(IBDROW(IBDROW1,"")))
"RTN","IBD3P63",381,0)
 S IBDNODE=^IBE(357.1,IBDBIEN,0)
"RTN","IBD3P63",382,0)
 S IBDROWST=$P(IBDNODE,U,4)
"RTN","IBD3P63",383,0)
 S IBDROW=IBDROWST+$P(IBDNODE,U,7)+2
"RTN","IBD3P63",384,0)
 S IBDNEWBK=$$COPYBLK^IBDFU2(IBDCBLK,IBDFORM,357.1,357.1,IBDROW,1,0,"",1)
"RTN","IBD3P63",385,0)
 I IBDNEWBK<0 D MES^XPDUTL("Error: ICD-10 DIAGNOSES (V1.0) block was not copied to DEFAULTS form") Q -1
"RTN","IBD3P63",386,0)
 D MES^XPDUTL("  ICD-10 DIAGNOSES (V1.0) block was copied to DEFAULTS form")
"RTN","IBD3P63",387,0)
 Q 0
"RTN","IBD3P63",388,0)
 ;
"RTN","IBD3P63",389,0)
 ;IBD3P63
"RTN","IBD3P63A")
0^47^B19965661^n/a
"RTN","IBD3P63A",1,0)
IBD3P63A  ;ALB/CFS - POST INSTALL ROUTINE FOR IBD*3*63 ;26-JUL-11
"RTN","IBD3P63A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;APR 24, 1997;Build 80
"RTN","IBD3P63A",3,0)
 ;
"RTN","IBD3P63A",4,0)
 Q
"RTN","IBD3P63A",5,0)
 ;inactivate package interface entries
"RTN","IBD3P63A",6,0)
INACT ;
"RTN","IBD3P63A",7,0)
 N IBDIEN,IBDNAME,IBDNODE,DIE,DR,DA
"RTN","IBD3P63A",8,0)
 D MES^XPDUTL("Inactivating obsolete Problem List Package Interfaces:")
"RTN","IBD3P63A",9,0)
 S DIE=357.6,DR=".09////0"  ;Set "AVAILABLE?" .09 field equal to NO.
"RTN","IBD3P63A",10,0)
 S IBDIEN=0
"RTN","IBD3P63A",11,0)
 F  S IBDIEN=$O(^IBE(357.6,IBDIEN)) Q:'IBDIEN  D  ;
"RTN","IBD3P63A",12,0)
 .S IBDNODE=$G(^IBE(357.6,IBDIEN,0))
"RTN","IBD3P63A",13,0)
 .I $P(IBDNODE,U,3)="GMPLENFM" D  ;
"RTN","IBD3P63A",14,0)
 ..S IBDNAME=$P(IBDNODE,U)
"RTN","IBD3P63A",15,0)
 ..L +^IBE(357.6,IBDIEN):0 I '$T D MES^XPDUTL(IBDNAME_" Package Interface locked by another user. Unable to inactivate at this time.") Q
"RTN","IBD3P63A",16,0)
 ..S DA=IBDIEN
"RTN","IBD3P63A",17,0)
 ..D ^DIE
"RTN","IBD3P63A",18,0)
 ..K DA
"RTN","IBD3P63A",19,0)
 ..I '$D(DTOUT)!('$D(DUOUT)) D MES^XPDUTL(IBDNAME_" Package Interface has been deactivated.")
"RTN","IBD3P63A",20,0)
 ..L -^IBE(357.6,IBDIEN)
"RTN","IBD3P63A",21,0)
 ;
"RTN","IBD3P63A",22,0)
 Q
"RTN","IBD3P63A",23,0)
 ;
"RTN","IBD3P63A",24,0)
 ;Change name from DIAGNOSES (V2.1) to ICD-9 DIAGNOSES (V2.1).
"RTN","IBD3P63A",25,0)
ICD9NAME ;
"RTN","IBD3P63A",26,0)
 N IBDIEN,IBDNAME,IBDFOUND,IBDX,IBDPREV
"RTN","IBD3P63A",27,0)
 S IBDFOUND=0
"RTN","IBD3P63A",28,0)
 S IBDIEN=0
"RTN","IBD3P63A",29,0)
 S IBDPREV=0
"RTN","IBD3P63A",30,0)
 F  S IBDIEN=$O(^IBE(357.1,IBDIEN)) Q:'IBDIEN  D  ;
"RTN","IBD3P63A",31,0)
 .S IBDNAME=$P($G(^IBE(357.1,IBDIEN,0)),U)
"RTN","IBD3P63A",32,0)
 .I IBDNAME="ICD-9 DIAGNOSES (V2.1)" S IBDPREV=1
"RTN","IBD3P63A",33,0)
 .I IBDNAME="DIAGNOSES (V2.1)" D
"RTN","IBD3P63A",34,0)
 ..I IBDFOUND'=1 S IBDFOUND=1
"RTN","IBD3P63A",35,0)
 ..S IBDX=$$FILLFLDS^IBDUTIL1(357.1,.01,IBDIEN,"ICD-9 DIAGNOSES (V2.1)")
"RTN","IBD3P63A",36,0)
 I 'IBDFOUND D 
"RTN","IBD3P63A",37,0)
 . I IBDPREV=1 D MES^XPDUTL("DIAGNOSES (V2.1) block names were changed previously") Q
"RTN","IBD3P63A",38,0)
 . D MES^XPDUTL("Warning: DIAGNOSES (V2.1) block names were not changed to ICD-9 DIAGNOSES (V2.1).")
"RTN","IBD3P63A",39,0)
 I IBDFOUND D MES^XPDUTL("  Block names changed from 'DIAGNOSES (V2.1)' to 'ICD-9 DIAGNOSES (V2.1).")
"RTN","IBD3P63A",40,0)
 Q
"RTN","IBD3P63A",41,0)
 ;
"RTN","IBD3P63A",42,0)
 ;Change text on the INPUT DIAGNOSIS CODE (ICD9) record.
"RTN","IBD3P63A",43,0)
CHNG3576() ;
"RTN","IBD3P63A",44,0)
 N IBDIEN,IBDFLD
"RTN","IBD3P63A",45,0)
 S IBDIEN=$O(^IBE(357.6,"B","INPUT DIAGNOSIS CODE (ICD9)",""))
"RTN","IBD3P63A",46,0)
 I IBDIEN="" D MES^XPDUTL("Error: INPUT DIAGNOSIS CODE (ICD9) record was not found") Q 1
"RTN","IBD3P63A",47,0)
 S IBDFLD(18)="S IBDF(""OTHER"")=""80^I '$P(^(0),U,9)"" D LIST^IBDFDE2(.IBDSEL,.IBDF,""ICD-9 Diagnosis Code"")"
"RTN","IBD3P63A",48,0)
 S IBDRET=$$FILLFLDS^IBDUTIL1(357.6,18,IBDIEN,IBDFLD(18))
"RTN","IBD3P63A",49,0)
 I IBDRET<1 D MES^XPDUTL("Error: INPUT DIAGNOSIS CODE (ICD9) record text not changed from 'Diagnosis Code' to 'ICD-9 Diagnosis Code'.") Q 1
"RTN","IBD3P63A",50,0)
 D MES^XPDUTL("  INPUT DIAGNOSIS CODE (ICD9) record text changed from 'Diagnosis code' to 'ICD-9 Diagnosis Code")
"RTN","IBD3P63A",51,0)
 Q 0
"RTN","IBD3P63A",52,0)
 ;
"RTN","IBD3P63A",53,0)
 ; send a warning message and continue installation
"RTN","IBD3P63A",54,0)
NODEFAUL ;if DEFAULTS form was not found
"RTN","IBD3P63A",55,0)
 ;
"RTN","IBD3P63A",56,0)
 N DIFROM,XMSUB,XMTEXT,XMY,XMZ,XMMG,XMDUZ,IBDTXT
"RTN","IBD3P63A",57,0)
 ;
"RTN","IBD3P63A",58,0)
 ;the subject line
"RTN","IBD3P63A",59,0)
 S XMSUB="IBD*3*63 installation warning: The DEFAULTS form was not found"
"RTN","IBD3P63A",60,0)
 ;From:
"RTN","IBD3P63A",61,0)
 S XMDUZ="AICS PATCH IBD*3.0*63 INSTALLATION"
"RTN","IBD3P63A",62,0)
 ;the array to store the text of the e-mail
"RTN","IBD3P63A",63,0)
 S XMTEXT="IBDTXT("
"RTN","IBD3P63A",64,0)
 ;
"RTN","IBD3P63A",65,0)
 S IBDTXT=0 ;line counter
"RTN","IBD3P63A",66,0)
 S IBDTXT=IBDTXT+1,IBDTXT(IBDTXT,0)="   The DEFAULTS form was not found in the environment and therefore"
"RTN","IBD3P63A",67,0)
 S IBDTXT=IBDTXT+1,IBDTXT(IBDTXT,0)="the installation process didn't add the new ICD-10 block to the"
"RTN","IBD3P63A",68,0)
 S IBDTXT=IBDTXT+1,IBDTXT(IBDTXT,0)="DEFAULTS form."
"RTN","IBD3P63A",69,0)
 S IBDTXT=IBDTXT+1,IBDTXT(IBDTXT,0)="   Please log a Remedy ticket to add the DEFAULTS form to your AICS"
"RTN","IBD3P63A",70,0)
 S IBDTXT=IBDTXT+1,IBDTXT(IBDTXT,0)="environment if you need it."
"RTN","IBD3P63A",71,0)
 S IBDTXT=IBDTXT+1,IBDTXT(IBDTXT,0)="   When you have it in the environment you can use TK menu options"
"RTN","IBD3P63A",72,0)
 S IBDTXT=IBDTXT+1,IBDTXT(IBDTXT,0)="to add the ICD-10 block to the DEFAULTS form manually."
"RTN","IBD3P63A",73,0)
 S IBDTXT=IBDTXT+1,IBDTXT(IBDTXT,0)=""
"RTN","IBD3P63A",74,0)
 ;
"RTN","IBD3P63A",75,0)
 ;use user's DUZ to specify whom to send
"RTN","IBD3P63A",76,0)
 ;if it is not defined or this is a POSTMASETR then use DUZ=.5 to send to the POSTMASTER
"RTN","IBD3P63A",77,0)
 I $G(DUZ)'<1 S XMY(DUZ)="" E  S XMY(.5)=""
"RTN","IBD3P63A",78,0)
 ;send the e-mail
"RTN","IBD3P63A",79,0)
 D ^XMD
"RTN","IBD3P63A",80,0)
 ;
"RTN","IBD3P63A",81,0)
 Q
"RTN","IBD3P63A",82,0)
 ;
"RTN","IBD3P63A",83,0)
CHK10BLK(IBDFRIEN) ;check for ICD-10 block in the form
"RTN","IBD3P63A",84,0)
 N IBDBLIEN,IBDQ
"RTN","IBD3P63A",85,0)
 S (IBDQ,IBDBLIEN)=0
"RTN","IBD3P63A",86,0)
 F  S IBDBLIEN=$O(^IBE(357.1,"C",IBDFRIEN,IBDBLIEN)) Q:(+IBDBLIEN=0)!(IBDQ=1)  D
"RTN","IBD3P63A",87,0)
 . I $G(^IBE(357.1,IBDBLIEN,0))["ICD-10" S IBDQ=1
"RTN","IBD3P63A",88,0)
 Q IBDQ
"RTN","IBD3P63A",89,0)
 ;
"RTN","IBD3P63A",90,0)
 ;
"RTN","IBD3P63A",91,0)
CHK3576() ;check if the field #18 content was changed from ICD to ICD-9 previsouly 
"RTN","IBD3P63A",92,0)
 N IBDBLIEN,IBDQ
"RTN","IBD3P63A",93,0)
 S (IBDQ,IBDBLIEN)=0
"RTN","IBD3P63A",94,0)
 F  S IBDBLIEN=$O(^IBE(357.6,IBDBLIEN)) Q:(+IBDBLIEN=0)!(IBDQ=1)  D
"RTN","IBD3P63A",95,0)
 . I $G(^IBE(357.6,IBDBLIEN,18))["ICD-9" S IBDQ=1
"RTN","IBD3P63A",96,0)
 Q IBDQ
"RTN","IBD3P63A",97,0)
 ;IBD3P63A
"RTN","IBDF18A")
0^28^B52196782^B47580981
"RTN","IBDF18A",1,0)
IBDF18A ;ALB/CJM/AAS - ENCOUNTER FORM - utilities for PCE ;04/12/94
"RTN","IBDF18A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**34,38,51,63**;APR 24, 1997;Build 80
"RTN","IBDF18A",3,0)
 ;
"RTN","IBDF18A",4,0)
 ;                                       
"RTN","IBDF18A",5,0)
GLL(CLINIC,INTRFACE,ARY,FILTER,PAR5,PAR6,ENCDATE) ; -- get lots of lists in one call
"RTN","IBDF18A",6,0)
 ; -- input see GETLST but pass interface by reference expects
"RTN","IBDF18A",7,0)
 ;    INTRFACE(n) = name of select list in package interface file
"RTN","IBDF18A",8,0)
 ;
"RTN","IBDF18A",9,0)
 ; -- PAR5 => not currently used
"RTN","IBDF18A",10,0)
 ; -- PAR6 => not currently used
"RTN","IBDF18A",11,0)
 ;
"RTN","IBDF18A",12,0)
 ; -- output see GETLST
"RTN","IBDF18A",13,0)
 N X,COUNT
"RTN","IBDF18A",14,0)
 S COUNT=0
"RTN","IBDF18A",15,0)
 S X="" F  S X=$O(INTRFACE(X)) Q:X=""  D GETLST(CLINIC,INTRFACE(X),ARY,$G(FILTER),.COUNT,$G(PAR6),ENCDATE)
"RTN","IBDF18A",16,0)
 Q
"RTN","IBDF18A",17,0)
 ;
"RTN","IBDF18A",18,0)
GETLST(CLINIC,INTRFACE,ARY,FILTER,COUNT,MODIFIER,ENCDATE) ; -- returns any specified selection list for a clinic
"RTN","IBDF18A",19,0)
 ; -- input  CLINIC = pointer to hospital location file for clinic
"RTN","IBDF18A",20,0)
 ;         INTRFACE = name of selection list in package interface file
"RTN","IBDF18A",21,0)
 ;              ARY = name of array to return list in
"RTN","IBDF18A",22,0)
 ;           FILTER = predefined filters (optional, default = 1)
"RTN","IBDF18A",23,0)
 ;                                       1 = must be selection list
"RTN","IBDF18A",24,0)
 ;                                       2 = only visit cpts on list
"RTN","IBDF18A",25,0)
 ;          ENCDATE = encounter date
"RTN","IBDF18A",26,0)
 ;         MODIFIER = if modifiers are to be passed, 1=yes send modifiers
"RTN","IBDF18A",27,0)
 ;                                                   
"RTN","IBDF18A",28,0)
 ; -- output  The format of the returned array is as follows
"RTN","IBDF18A",29,0)
 ;         @ARY@(0) = count of array element (0 of nothing found)
"RTN","IBDF18A",30,0)
 ;         @ARY@(1) = ^group header
"RTN","IBDF18A",31,0)
 ;         @ARY@(2) = P1 := cpt or icd code / ien of other items
"RTN","IBDF18A",32,0)
 ;                    P2 := user defined text
"RTN","IBDF18A",33,0)
 ;                    p6 := user defined expanded text to send to PCE
"RTN","IBDF18A",34,0)
 ;                    p7 := second code or item defined for line item
"RTN","IBDF18A",35,0)
 ;                    p8 := third code or item defined for line item
"RTN","IBDF18A",36,0)
 ;                    p9 := associated clinical lexicon term
"RTN","IBDF18A",37,0)
 ;                       
"RTN","IBDF18A",38,0)
 ;         @ARY@(2,"MODIFIER",0)=count of CPT Modifiers for entry
"RTN","IBDF18A",39,0)
 ;         @ARY@(2,"MODIFIER",1)=2 character CPT Modifier value
"RTN","IBDF18A",40,0)
 ;         @ARY@(2,"MODIFIER",2)=2 character CPT Modifier value
"RTN","IBDF18A",41,0)
 ;         @ARY@(2,"MODIFIER",k+1)=2 character CPT Modifier value
"RTN","IBDF18A",42,0)
 ;        
"RTN","IBDF18A",43,0)
 ;         @ARY@(k) = ^next group header
"RTN","IBDF18A",44,0)
 ;         @ARY@(k+1) = problem ien or cpt or icd code^user define text
"RTN","IBDF18A",45,0)
 ;
"RTN","IBDF18A",46,0)
 ; -- output modification for patch 34:
"RTN","IBDF18A",47,0)
 ;         Narrative to Send to PCE (instead of printed text)
"RTN","IBDF18A",48,0)
 ;         field (2.01) in file 357.3, added as piece 6 of @ary@(n)
"RTN","IBDF18A",49,0)
 ;
"RTN","IBDF18A",50,0)
 ;         if additional codes for an item (diagnosis) are added to
"RTN","IBDF18A",51,0)
 ;         item, they are added as pieces 7 and/or 8 of @ary@(n).
"RTN","IBDF18A",52,0)
 ;
"RTN","IBDF18A",53,0)
 ;         if a type of visit code is requested and none found, will
"RTN","IBDF18A",54,0)
 ;         automatically look first for blocks named type of visit and
"RTN","IBDF18A",55,0)
 ;         second for filtered codes using regular cpt blocks.
"RTN","IBDF18A",56,0)
 ;
"RTN","IBDF18A",57,0)
 ;         if a diagnosis block it requested and none found will
"RTN","IBDF18A",58,0)
 ;         automatically look for Clinic Common Problem List and
"RTN","IBDF18A",59,0)
 ;         then convert it to look like a diagnosis list
"RTN","IBDF18A",60,0)
 ;
"RTN","IBDF18A",61,0)
 N I,J,X,Y,INUM,IBQUIT,FORM,SETUP,LIST,BLOCK,OLDARY,IBDTMP,ROW,COL,BLK
"RTN","IBDF18A",62,0)
 N LIST1,PACKAGE,IBDIMPDA,IBDCSYS
"RTN","IBDF18A",63,0)
 K ^TMP("IBDUP",$J)
"RTN","IBDF18A",64,0)
 S (IBQUIT,LIST)=0
"RTN","IBDF18A",65,0)
 S PACKAGE=$E(INTRFACE,1,30)
"RTN","IBDF18A",66,0)
 ;
"RTN","IBDF18A",67,0)
 ;Setup array containing NAME of the Package Interface file
"RTN","IBDF18A",68,0)
 ;This is the second parameter passed by PCE, TIU, & CPRS
"RTN","IBDF18A",69,0)
 S LIST1("DG SELECT CPT PROCEDURE CODES")=""
"RTN","IBDF18A",70,0)
 S LIST1("DG SELECT ICD-9 DIAGNOSIS CODE")=""
"RTN","IBDF18A",71,0)
 S LIST1("DG SELECT ICD DIAGNOSIS CODES")=""
"RTN","IBDF18A",72,0)
 S LIST1("DG SELECT ICD-10 DIAGNOSIS COD")=""
"RTN","IBDF18A",73,0)
 S LIST1("DG SELECT VISIT TYPE CPT PROCE")=""
"RTN","IBDF18A",74,0)
 S LIST1("GMP INPUT CLINIC COMMON PROBLE")=""
"RTN","IBDF18A",75,0)
 S LIST1("GMP PATIENT ACTIVE PROBLEMS")=""
"RTN","IBDF18A",76,0)
 ;
"RTN","IBDF18A",77,0)
 S COUNT=$G(COUNT,0)
"RTN","IBDF18A",78,0)
 I $G(FILTER)<1 S FILTER=1 ;default value=1
"RTN","IBDF18A",79,0)
 I FILTER>1 S OLDARY=ARY,ARY="IBDTMP"
"RTN","IBDF18A",80,0)
 S @ARY@(0)=+$G(@ARY@(0))
"RTN","IBDF18A",81,0)
 I $G(CLINIC)="" G GETLSTQ
"RTN","IBDF18A",82,0)
 I $G(^SC(CLINIC,0))="" G GETLSTQ
"RTN","IBDF18A",83,0)
 I $G(INTRFACE)="" G GETLSTQ
"RTN","IBDF18A",84,0)
 I INTRFACE["SELECT ICD",$D(LIST1(PACKAGE)) D
"RTN","IBDF18A",85,0)
 . S IBDIMPDA=$$IMPDATE^IBDUTICD("10D"),IBDCSYS=1 I ENCDATE'<IBDIMPDA S IBDCSYS=30
"RTN","IBDF18A",86,0)
 . I IBDCSYS=1 S INUM=$O(^IBE(357.6,"B","DG SELECT ICD-9 DIAGNOSIS CODE",0))
"RTN","IBDF18A",87,0)
 . I IBDCSYS=30 S INUM=$O(^IBE(357.6,"B","DG SELECT ICD-10 DIAGNOSIS COD",0))
"RTN","IBDF18A",88,0)
 E  S INUM=$O(^IBE(357.6,"B",$E(INTRFACE,1,30),0))
"RTN","IBDF18A",89,0)
 ; 
"RTN","IBDF18A",90,0)
 ; -- find forms defined for clinic
"RTN","IBDF18A",91,0)
 ;    piece 2 = basic form
"RTN","IBDF18A",92,0)
 ;    piece 3,4,6 = supplemental forms
"RTN","IBDF18A",93,0)
 S SETUP=$G(^SD(409.95,+$O(^SD(409.95,"B",CLINIC,0)),0))
"RTN","IBDF18A",94,0)
 G:SETUP="" GETLSTQ
"RTN","IBDF18A",95,0)
 F I=2,3,4,6,8,9 S FORM=$P(SETUP,"^",I) D  Q:IBQUIT
"RTN","IBDF18A",96,0)
 .;
"RTN","IBDF18A",97,0)
 .; -- find blocks on forms
"RTN","IBDF18A",98,0)
 .Q:'FORM
"RTN","IBDF18A",99,0)
 . D GETBLKS Q:'$O(BLK(0))
"RTN","IBDF18A",100,0)
 . S (ROW,COL)=""
"RTN","IBDF18A",101,0)
 . F  S ROW=$O(BLK(ROW)) Q:ROW=""  S COL="" F  S COL=$O(BLK(ROW,COL)) Q:COL=""  S BLOCK=$G(BLK(+ROW,+COL)) D
"RTN","IBDF18A",102,0)
 ..;
"RTN","IBDF18A",103,0)
 ..; -- see if package interface defined for blocks
"RTN","IBDF18A",104,0)
 ..S LIST=0
"RTN","IBDF18A",105,0)
 ..F  S LIST=$O(^IBE(357.2,"C",BLOCK,LIST)) Q:'LIST  I $P($G(^IBE(357.2,LIST,0)),"^",11)=INUM D COPYLIST^IBDF18A1(LIST,ARY,.COUNT)
"RTN","IBDF18A",106,0)
 ;I COUNT D URH^IBDF18A1
"RTN","IBDF18A",107,0)
 S @ARY@(0)=COUNT
"RTN","IBDF18A",108,0)
 I FILTER=2 D F2^IBDF18A1(OLDARY)
"RTN","IBDF18A",109,0)
 ;
"RTN","IBDF18A",110,0)
 I COUNT=0 D
"RTN","IBDF18A",111,0)
 .I $E(INTRFACE,1,30)=$E("DG SELECT VISIT TYPE CPT PROCEDURES",1,30) D TOV
"RTN","IBDF18A",112,0)
 ;
"RTN","IBDF18A",113,0)
 ; -- always check for both diagnosis and clinic common problems when
"RTN","IBDF18A",114,0)
 ;    looking for diagnosis, return in diagnosis format
"RTN","IBDF18A",115,0)
 I $E(INTRFACE,1,30)=$E("DG SELECT ICD-9 DIAGNOSIS CODES",1,30) D CCP(COUNT)
"RTN","IBDF18A",116,0)
 ;This routine checks list that have CPT & ICD codes for CSV.
"RTN","IBDF18A",117,0)
 D CHKLST^IBDF18A2:$D(LIST1(PACKAGE))
"RTN","IBDF18A",118,0)
 ;
"RTN","IBDF18A",119,0)
 K ^TMP("IBDUP",$J)
"RTN","IBDF18A",120,0)
 ;
"RTN","IBDF18A",121,0)
GETLSTQ Q
"RTN","IBDF18A",122,0)
 ;
"RTN","IBDF18A",123,0)
GETBLKS ; -- get the blocks for a form in row,column order
"RTN","IBDF18A",124,0)
 K BLK
"RTN","IBDF18A",125,0)
 N ROW,COL
"RTN","IBDF18A",126,0)
 S BLK=0
"RTN","IBDF18A",127,0)
 F  S BLK=$O(^IBE(357.1,"C",FORM,BLK)) Q:'BLK  D
"RTN","IBDF18A",128,0)
 . S ROW=$P($G(^IBE(357.1,+BLK,0)),"^",4),COL=$P(^IBE(357.1,+BLK,0),"^",5)
"RTN","IBDF18A",129,0)
 . Q:ROW=""!(COL="")
"RTN","IBDF18A",130,0)
 . S BLK(ROW,COL)=BLK
"RTN","IBDF18A",131,0)
 Q
"RTN","IBDF18A",132,0)
 ;
"RTN","IBDF18A",133,0)
CCP(COUNT) ; -- no diagnosis, look for common problems and convert
"RTN","IBDF18A",134,0)
 N I,X,OLDCNT
"RTN","IBDF18A",135,0)
 S OLDCNT=COUNT
"RTN","IBDF18A",136,0)
 ;
"RTN","IBDF18A",137,0)
 ; -- get the clinic common problem list
"RTN","IBDF18A",138,0)
 D GETLST(CLINIC,"GMP SELECT CLINIC COMMON PROBLEMS",ARY,"",COUNT)
"RTN","IBDF18A",139,0)
 ;
"RTN","IBDF18A",140,0)
 ; -- now convert it to primary icd code save lexicon pointer in piece 6
"RTN","IBDF18A",141,0)
 S I=OLDCNT
"RTN","IBDF18A",142,0)
 F  S I=$O(VAR(I)) Q:I=""  D
"RTN","IBDF18A",143,0)
 .S X=+VAR(I)
"RTN","IBDF18A",144,0)
 . S:X $P(VAR(I),"^",9)=X,$P(VAR(I),"^",1)=$$ICDONE^LEXU(X)
"RTN","IBDF18A",145,0)
 . I $P(VAR(I),"^",7) S $P(VAR(I),"^",7)=$$ICDONE^LEXU($P(VAR(I),"^",7))
"RTN","IBDF18A",146,0)
 . I $P(VAR(I),"^",8) S $P(VAR(I),"^",8)=$$ICDONE^LEXU($P(VAR(I),"^",8))
"RTN","IBDF18A",147,0)
 Q
"RTN","IBDF18A",148,0)
 ;
"RTN","IBDF18A",149,0)
TOV ; -- if trying to find Type of Visit codes but list on form
"RTN","IBDF18A",150,0)
 ;    uses another interface try this
"RTN","IBDF18A",151,0)
 ;
"RTN","IBDF18A",152,0)
 N INUM
"RTN","IBDF18A",153,0)
 S INUM=0
"RTN","IBDF18A",154,0)
 F  S INUM=$O(^IBE(357.6,"B","DG SELECT CPT PROCEDURE CODES",INUM)) Q:'INUM  S INUM(INUM)=""
"RTN","IBDF18A",155,0)
 D TOV1
"RTN","IBDF18A",156,0)
 I COUNT=0 D TOV2
"RTN","IBDF18A",157,0)
 Q
"RTN","IBDF18A",158,0)
 ;
"RTN","IBDF18A",159,0)
TOV1 ; -- first get all lists for blocks named Type of Visit or E&M
"RTN","IBDF18A",160,0)
 N NM,HD
"RTN","IBDF18A",161,0)
 F I=2,3,4,6,8,9 S FORM=$P(SETUP,"^",I) D:+FORM  Q:IBQUIT
"RTN","IBDF18A",162,0)
 . ;
"RTN","IBDF18A",163,0)
 . ; -- find blocks on forms
"RTN","IBDF18A",164,0)
 . D GETBLKS Q:'$O(BLK(0))
"RTN","IBDF18A",165,0)
 . S (ROW,COL)=""
"RTN","IBDF18A",166,0)
 . F  S ROW=$O(BLK(ROW)) Q:ROW=""  S COL="" F  S COL=$O(BLK(ROW,COL)) Q:COL=""  S BLOCK=$G(BLK(+ROW,+COL)) D
"RTN","IBDF18A",167,0)
 .. ;
"RTN","IBDF18A",168,0)
 .. S NM=$P($G(^IBE(357.1,BLOCK,0)),"^",1)
"RTN","IBDF18A",169,0)
 .. S NM=$TR(NM,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","IBDF18A",170,0)
 .. S HD=$P($G(^IBE(357.1,BLOCK,0)),"^",11)
"RTN","IBDF18A",171,0)
 .. S HD=$TR(HD,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","IBDF18A",172,0)
 .. I NM["TYPE OF VISIT"!(NM["VISIT TYPE")!(HD["TYPE OF VISIT")!(HD["VISIT TYPE")!(NM["E&M")!(NM["E & M")!(HD["E&M")!(HD["E & M") D
"RTN","IBDF18A",173,0)
 ... S LIST=0
"RTN","IBDF18A",174,0)
 ... F  S LIST=$O(^IBE(357.2,"C",BLOCK,LIST)) Q:'LIST  D
"RTN","IBDF18A",175,0)
 .... I $D(INUM($P($G(^IBE(357.2,LIST,0)),"^",11))) D COPYLIST^IBDF18A1(LIST,ARY,.COUNT) K BLK(ROW,COL)
"RTN","IBDF18A",176,0)
 Q
"RTN","IBDF18A",177,0)
 ;
"RTN","IBDF18A",178,0)
TOV2 ; -- get the type of visit codes from cpt lists using filter
"RTN","IBDF18A",179,0)
 S OLDARY=ARY,ARY="IBDTMP"
"RTN","IBDF18A",180,0)
 S @ARY@(0)=+$G(@ARY@(0))
"RTN","IBDF18A",181,0)
 ;
"RTN","IBDF18A",182,0)
 F I=2,3,4,6,8,9 S FORM=$P(SETUP,"^",I) D:+FORM  Q:IBQUIT
"RTN","IBDF18A",183,0)
 . ;
"RTN","IBDF18A",184,0)
 . ; -- find blocks on forms
"RTN","IBDF18A",185,0)
 . S (ROW,COL)=""
"RTN","IBDF18A",186,0)
 . F  S ROW=$O(BLK(ROW)) Q:ROW=""  S COL="" F  S COL=$O(BLK(ROW,COL)) Q:COL=""  S BLOCK=$G(BLK(+ROW,+COL)) D
"RTN","IBDF18A",187,0)
 .. ;
"RTN","IBDF18A",188,0)
 .. ; -- see if package interface defined for blocks
"RTN","IBDF18A",189,0)
 .. S LIST=0
"RTN","IBDF18A",190,0)
 .. F  S LIST=$O(^IBE(357.2,"C",BLOCK,LIST)) Q:'LIST  I $D(INUM($P($G(^IBE(357.2,LIST,0)),"^",11))) D COPYLIST^IBDF18A1(LIST,ARY,.COUNT)
"RTN","IBDF18A",191,0)
 D F2^IBDF18A1(OLDARY)
"RTN","IBDF18A",192,0)
 Q
"RTN","IBDF18A",193,0)
 ;
"RTN","IBDF18A",194,0)
 ; -- here are some sample tests for different lists
"RTN","IBDF18A",195,0)
TEST1 K VAR D GETLST(573,"DG SELECT ICD-9 DIAGNOSIS CODES","VAR",1,"","",DT)
"RTN","IBDF18A",196,0)
 X "ZW VAR"
"RTN","IBDF18A",197,0)
 Q
"RTN","IBDF18A",198,0)
 ;
"RTN","IBDF18A",199,0)
TEST2 K VAR D GETLST(301,"DG SELECT ICD-9 DIAGNOSIS CODES","VAR",1,"","",DT)
"RTN","IBDF18A",200,0)
 X "ZW VAR"
"RTN","IBDF18A",201,0)
 Q
"RTN","IBDF18A",202,0)
 ;
"RTN","IBDF18A",203,0)
TEST4 K VAR D GETLST(300,"DG SELECT VISIT TYPE CPT PROCEDURES","VAR",1,"",1,DT)
"RTN","IBDF18A",204,0)
 X "ZW VAR"
"RTN","IBDF18A",205,0)
 Q
"RTN","IBDF18A",206,0)
 ;
"RTN","IBDF18A",207,0)
TEST5 K VAR D GETLST(300,"PX SELECT IMMUNIZATIONS","VAR",1,DT)
"RTN","IBDF18A",208,0)
 X "ZW VAR"
"RTN","IBDF18A",209,0)
 Q
"RTN","IBDF18A",210,0)
 ;
"RTN","IBDF18A",211,0)
TEST5A K VAR D GETLST(300,"PX SELECT SKIN TESTS","VAR",1,DT)
"RTN","IBDF18A",212,0)
 X "ZW VAR"
"RTN","IBDF18A",213,0)
 Q
"RTN","IBDF18A",214,0)
 ;
"RTN","IBDF18A",215,0)
TEST6 K VAR D GETLST(573,"DG SELECT CPT PROCEDURE CODES","VAR",1,"",1,DT)
"RTN","IBDF18A",216,0)
 X "ZW VAR"
"RTN","IBDF18A",217,0)
 Q
"RTN","IBDF18A",218,0)
 ;
"RTN","IBDF18A",219,0)
TEST7 K VAR D GETLST(573,"DG SELECT VISIT TYPE CPT PROCEDURES","VAR",1,"",1,DT)
"RTN","IBDF18A",220,0)
 X "ZW VAR"
"RTN","IBDF18A",221,0)
 Q
"RTN","IBDF18A",222,0)
 ;
"RTN","IBDF18A",223,0)
TEST8 ; -- use this to test CPRS ability to retrieve type of visit
"RTN","IBDF18A",224,0)
 ;    set clinic := name or internal entry number of clinic or change
"RTN","IBDF18A",225,0)
 ;    value for specific clinic
"RTN","IBDF18A",226,0)
 K VAR
"RTN","IBDF18A",227,0)
 I $G(CLINIC)="" S CLINIC=300
"RTN","IBDF18A",228,0)
 I CLINIC'=+CLINIC W !,"Using Clinic: ",CLINIC S CLINIC=$O(^SC("B",CLINIC,0)) W !,"IEN: ",CLINIC,! H 5
"RTN","IBDF18A",229,0)
 X "D VISIT^ORWPCE(.VAR,CLINIC) ZW VAR"
"RTN","IBDF18A",230,0)
 Q
"RTN","IBDF18A",231,0)
 ;
"RTN","IBDF18A",232,0)
TEST9 K VAR D GETLST(301,"GMP SELECT CLINIC COMMON PROBLEMS","VAR",1)
"RTN","IBDF18A",233,0)
 X "ZW VAR"
"RTN","IBDF18A",234,0)
 Q
"RTN","IBDF18A2")
0^29^B9535002^B5894591
"RTN","IBDF18A2",1,0)
IBDF18A2 ;WISC/TN - ENCOUNTER FORM - utilities for PCE ;04/30/03
"RTN","IBDF18A2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**51,55,63**;APR 30, 2003;Build 80
"RTN","IBDF18A2",3,0)
 ;
"RTN","IBDF18A2",4,0)
 ;
"RTN","IBDF18A2",5,0)
 QUIT  ;Call at CHKLST
"RTN","IBDF18A2",6,0)
 ;
"RTN","IBDF18A2",7,0)
CHKLST ;Create a new list to pass to calling packages.
"RTN","IBDF18A2",8,0)
 ;The new array will have CPT or ICD codes which
"RTN","IBDF18A2",9,0)
 ;are valid for the encounter date passed.
"RTN","IBDF18A2",10,0)
 ;
"RTN","IBDF18A2",11,0)
 ;CALLED BY: IBDF18A
"RTN","IBDF18A2",12,0)
 ;
"RTN","IBDF18A2",13,0)
 ;Quit if no date is passed.
"RTN","IBDF18A2",14,0)
 S ENCDATE=$G(ENCDATE) I ENCDATE="" Q
"RTN","IBDF18A2",15,0)
 ;
"RTN","IBDF18A2",16,0)
 NEW AA,CNT,CNT1,CNT2,MOD,TYPE,NODE,IBDCSYS,IBDIMPDA,IBDX
"RTN","IBDF18A2",17,0)
 K ^TMP("IBDCSV",$J) S U="^"
"RTN","IBDF18A2",18,0)
 ;
"RTN","IBDF18A2",19,0)
 S CNT=0,AA=0,TYPE="",NODE="MODIFIER"
"RTN","IBDF18A2",20,0)
 S:PACKAGE="DG SELECT CPT PROCEDURE CODES" TYPE="CPT"
"RTN","IBDF18A2",21,0)
 S:PACKAGE="DG SELECT ICD-9 DIAGNOSIS CODE" TYPE="ICD"
"RTN","IBDF18A2",22,0)
 S:PACKAGE="DG SELECT ICD DIAGNOSIS CODES" TYPE="ICD"
"RTN","IBDF18A2",23,0)
 S:PACKAGE="DG SELECT ICD-10 DIAGNOSIS COD" TYPE="ICD10"
"RTN","IBDF18A2",24,0)
 S:PACKAGE="DG SELECT VISIT TYPE CPT PROCE" TYPE="CPT"
"RTN","IBDF18A2",25,0)
 S:PACKAGE="GMP INPUT CLINIC COMMON PROBLE" TYPE="ICD"
"RTN","IBDF18A2",26,0)
 S:PACKAGE="GMP PATIENT ACTIVE PROBLEMS" TYPE="ICD"
"RTN","IBDF18A2",27,0)
 ;
"RTN","IBDF18A2",28,0)
 I TYPE="" D  Q
"RTN","IBDF18A2",29,0)
 . K @ARY
"RTN","IBDF18A2",30,0)
 . S @ARY@(0)=1
"RTN","IBDF18A2",31,0)
 . S @ARY@(1)="^AICS ERROR - Missing code type for "_PACKAGE
"RTN","IBDF18A2",32,0)
 ;
"RTN","IBDF18A2",33,0)
 ;Make copy of array and kill the original
"RTN","IBDF18A2",34,0)
 M ^TMP("IBDCSV",$J)=@ARY KILL @ARY
"RTN","IBDF18A2",35,0)
 ;
"RTN","IBDF18A2",36,0)
 S CNT=0,AA=0
"RTN","IBDF18A2",37,0)
 F  S AA=$O(^TMP("IBDCSV",$J,AA)) Q:'AA  D
"RTN","IBDF18A2",38,0)
 . ;
"RTN","IBDF18A2",39,0)
 . I $E(^TMP("IBDCSV",$J,AA))="^" S CNT=CNT+1,@ARY@(CNT)=^TMP("IBDCSV",$J,AA) Q  ;header
"RTN","IBDF18A2",40,0)
 . ;
"RTN","IBDF18A2",41,0)
 . S CODE=$P(^TMP("IBDCSV",$J,AA),U) I CODE="" Q
"RTN","IBDF18A2",42,0)
 . ;
"RTN","IBDF18A2",43,0)
 . ;Validate the CPT code for the date passed
"RTN","IBDF18A2",44,0)
 . I TYPE="CPT" D  Q
"RTN","IBDF18A2",45,0)
 . . I $P($$CPT^ICPTCOD(CODE,ENCDATE),U,7)=1 D
"RTN","IBDF18A2",46,0)
 . . . S CNT=CNT+1,@ARY@(CNT)=^TMP("IBDCSV",$J,AA)
"RTN","IBDF18A2",47,0)
 . . . ;
"RTN","IBDF18A2",48,0)
 . . . ;Check for modifiers.
"RTN","IBDF18A2",49,0)
 . . . I '$G(^TMP("IBDCSV",$J,AA,NODE,0)) Q
"RTN","IBDF18A2",50,0)
 . . . ;
"RTN","IBDF18A2",51,0)
 . . . S CNT1=^TMP("IBDCSV",$J,AA,NODE,0)
"RTN","IBDF18A2",52,0)
 . . . F CNT2=1:1:CNT1 S MOD=^TMP("IBDCSV",$J,AA,NODE,CNT2) D
"RTN","IBDF18A2",53,0)
 . . . . ;
"RTN","IBDF18A2",54,0)
 . . . . ;If the status is 1 for the modifier
"RTN","IBDF18A2",55,0)
 . . . . I $P($$MOD^ICPTMOD(MOD,"E",ENCDATE),U,7)=1 D
"RTN","IBDF18A2",56,0)
 . . . . . S @ARY@(CNT,NODE,CNT2)=^TMP("IBDCSV",$J,AA,NODE,CNT2)
"RTN","IBDF18A2",57,0)
 . . . . . S @ARY@(CNT,NODE,0)=CNT2
"RTN","IBDF18A2",58,0)
 . . . . ;
"RTN","IBDF18A2",59,0)
 . ;Validate the ICD code for the date passed
"RTN","IBDF18A2",60,0)
 . S IBDIMPDA=$$IMPDATE^IBDUTICD("10D")
"RTN","IBDF18A2",61,0)
 . I TYPE="ICD10",ENCDATE'<IBDIMPDA D  Q
"RTN","IBDF18A2",62,0)
 . . S IBDX=$$STATCHK^IBDUTICD(30,CODE,ENCDATE) I $P(IBDX,U,1)>0 D  ;Active
"RTN","IBDF18A2",63,0)
 . . . S CNT=CNT+1,@ARY@(CNT)=^TMP("IBDCSV",$J,AA)
"RTN","IBDF18A2",64,0)
 . I TYPE="ICD" D  ;This includes BOTH DG SELECT ICD-9 DIAGNOSIS CODES and DG SELECT ICD DIAGNOSIS CODES dependent upon ENCDATE
"RTN","IBDF18A2",65,0)
 . . S IBDCSYS=$S(ENCDATE<IBDIMPDA:1,1:30)
"RTN","IBDF18A2",66,0)
 . . S IBDX=$$STATCHK^IBDUTICD(IBDCSYS,CODE,ENCDATE) I $P(IBDX,U,1)>0 D  ;Active
"RTN","IBDF18A2",67,0)
 . . . S CNT=CNT+1,@ARY@(CNT)=^TMP("IBDCSV",$J,AA)
"RTN","IBDF18A2",68,0)
 ;
"RTN","IBDF18A2",69,0)
 S @ARY@(0)=CNT
"RTN","IBDF18A2",70,0)
 K ^TMP("IBDCSV",$J)
"RTN","IBDF18A2",71,0)
 Q
"RTN","IBDF3")
0^45^B32292279^B26445717
"RTN","IBDF3",1,0)
IBDF3 ;ALB/CJM - Edit Selection List ;11/16/92
"RTN","IBDF3",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**15,63**;APR 24, 1997;Build 80
"RTN","IBDF3",3,0)
 ;
"RTN","IBDF3",4,0)
 ;
"RTN","IBDF3",5,0)
EDITLIST ;expects IBBLK to be defined
"RTN","IBDF3",6,0)
 N IBLIST,IBVALMBG
"RTN","IBDF3",7,0)
 D FULL^VALM1
"RTN","IBDF3",8,0)
 S IBVALMBG=VALMBG,VALMBCK="R"
"RTN","IBDF3",9,0)
 D SELECT
"RTN","IBDF3",10,0)
 I '$D(^TMP("IBDF DELETE SELECTION OPTION",$J)) S ^TMP("IBDF DELETE SELECTION OPTION",$J)=0
"RTN","IBDF3",11,0)
 I IBLIST D
"RTN","IBDF3",12,0)
 .Q:$$LSTDSCR2^IBDFU1(.IBLIST)
"RTN","IBDF3",13,0)
 .;I IBLIST("DYNAMIC"),$G(IBLIST("CLRM")) D SEL^IBDFN15(.IBLIST)
"RTN","IBDF3",14,0)
 .I IBLIST("DYNAMIC"),'$G(IBLIST("CLRM")) W !,"You cannot edit the contents of this list - it is determined at print time!" D PAUSE^IBDFU5 Q
"RTN","IBDF3",15,0)
 .;I '$G(IBLIST("CLRM")) D EN^VALM("IBDF DISPLAY GROUPS FOR EDIT")
"RTN","IBDF3",16,0)
 .I $G(IBLIST("CLRM")) S IBLIST("EDITING CLRM")=1
"RTN","IBDF3",17,0)
 .D EN^VALM("IBDF DISPLAY GROUPS FOR EDIT")
"RTN","IBDF3",18,0)
 .I ^TMP("IBDF DELETE SELECTION OPTION",$J)=1,'$O(^IBE(357.3,"C",IBLIST,"")) D  ;Deleted all selections from Delete Group (DG) option.
"RTN","IBDF3",19,0)
 ..S ^TMP("IBDF DELETED ALL SELECTIONS",$J)=1
"RTN","IBDF3",20,0)
 .K IBLIST
"RTN","IBDF3",21,0)
 .D UNCMPBLK^IBDF19(IBBLK)
"RTN","IBDF3",22,0)
 .I '$G(IBFASTXT) D
"RTN","IBDF3",23,0)
 ..D IDXBLOCK^IBDFU4
"RTN","IBDF3",24,0)
 ..S VALMBCK="R",VALMBG=IBVALMBG
"RTN","IBDF3",25,0)
 Q
"RTN","IBDF3",26,0)
ONENTRY ;
"RTN","IBDF3",27,0)
 D IDXGRP
"RTN","IBDF3",28,0)
 Q
"RTN","IBDF3",29,0)
ONEXIT ;
"RTN","IBDF3",30,0)
 K @VALMAR
"RTN","IBDF3",31,0)
 Q
"RTN","IBDF3",32,0)
SELECT ; 
"RTN","IBDF3",33,0)
 ; -- dic("s") passed in from ibdfgrp
"RTN","IBDF3",34,0)
 S IBLIST=""
"RTN","IBDF3",35,0)
 Q:'$G(IBBLK)
"RTN","IBDF3",36,0)
 S DIC="^IBE(357.2,",DIC(0)="EQ",D="C",X=IBBLK
"RTN","IBDF3",37,0)
 D IX^DIC K DIC
"RTN","IBDF3",38,0)
 S:+Y>0 IBLIST=+Y
"RTN","IBDF3",39,0)
 Q
"RTN","IBDF3",40,0)
ADDBLANK() ;
"RTN","IBDF3",41,0)
 N IGRP
"RTN","IBDF3",42,0)
 S GRP="" F  S GRP=$O(^IBE(357.4,"D",IBLIST,GRP)) Q:'GRP  Q:$P(^IBE(357.4,GRP,0),"^")="BLANK"
"RTN","IBDF3",43,0)
 I 'GRP D
"RTN","IBDF3",44,0)
 .K DIC,DD,DO,DINUM S DIC="^IBE(357.4,",DIC(0)="",X="BLANK",DIC(0)=""
"RTN","IBDF3",45,0)
 .D FILE^DICN K DIC
"RTN","IBDF3",46,0)
 .S GRP=$S(+Y<0:"",1:+Y)
"RTN","IBDF3",47,0)
 I GRP K DA,DIE S DA=GRP,DIE="^IBE(357.4,",DR=".02////0;.03////"_IBLIST D ^DIE K DIE,DA,DR
"RTN","IBDF3",48,0)
 Q GRP
"RTN","IBDF3",49,0)
IDXGRP ;build an index of groups in print order for list processor
"RTN","IBDF3",50,0)
 N GRP,GRPODR
"RTN","IBDF3",51,0)
 K @VALMAR
"RTN","IBDF3",52,0)
 S VALMCNT=0
"RTN","IBDF3",53,0)
 S GRPODR="" F  S GRPODR=$O(^IBE(357.4,"APO",IBLIST,GRPODR)) Q:GRPODR=""  D
"RTN","IBDF3",54,0)
 .S GRP="" F  S GRP=$O(^IBE(357.4,"APO",IBLIST,GRPODR,GRP)) Q:'GRP  D
"RTN","IBDF3",55,0)
 ..;
"RTN","IBDF3",56,0)
 ..;make sure the index is correct
"RTN","IBDF3",57,0)
 ..I $P($G(^IBE(357.4,GRP,0)),"^",3)'=IBLIST K DIK,DA S DIK="^IBE(357.4,",DA=GRP D IX^DIK K DIK,DA,^IBE(357.4,"APO",IBLIST,GRPODR,GRP) Q
"RTN","IBDF3",58,0)
 ..;
"RTN","IBDF3",59,0)
 ..S VALMCNT=VALMCNT+1
"RTN","IBDF3",60,0)
 ..S @VALMAR@(VALMCNT,0)=$$DISPLAY(GRP,VALMCNT),@VALMAR@("IDX",VALMCNT,VALMCNT)=GRP
"RTN","IBDF3",61,0)
 ..D FLDCTRL^VALM10(VALMCNT,"ID") ;set video for ID column
"RTN","IBDF3",62,0)
 Q
"RTN","IBDF3",63,0)
LMGRPHDR ;sets the screen hdr
"RTN","IBDF3",64,0)
 S VALMHDR(1)="PRINT GROUPS CURRENTLY DEFINED FOR '"_$$LISTNAME_"' SELECTION LIST"
"RTN","IBDF3",65,0)
 Q
"RTN","IBDF3",66,0)
DISPLAY(GRP,ROW) ;
"RTN","IBDF3",67,0)
 N NODE0,NAME,INV
"RTN","IBDF3",68,0)
 S NODE0=$G(^IBE(357.4,GRP,0)),NAME=$P(NODE0,"^"),INV=$P(NODE0,"^",4)
"RTN","IBDF3",69,0)
 I NAME="BLANK" S NAME="*i  BLANK (Not Displayed)"
"RTN","IBDF3",70,0)
 I NAME'="BLANK",INV="I" S NAME="*i  "_NAME
"RTN","IBDF3",71,0)
 I NAME'="BLANK",INV'="I" S NAME="    "_NAME
"RTN","IBDF3",72,0)
 Q $$PADRIGHT^IBDFU(ROW,6)_$J($P(NODE0,"^",2),6)_$J("",3)_$$PADRIGHT^IBDFU(NAME,40)_$J($$SLCTNCNT(GRP),6)_" selection(s)"
"RTN","IBDF3",73,0)
SLCTNCNT(GRP) ;
"RTN","IBDF3",74,0)
 N CNT,SLCTN
"RTN","IBDF3",75,0)
 S CNT=0,SLCTN=""
"RTN","IBDF3",76,0)
 F  S SLCTN=$O(^IBE(357.3,"D",GRP,SLCTN)) Q:'SLCTN  S CNT=CNT+1
"RTN","IBDF3",77,0)
 Q CNT
"RTN","IBDF3",78,0)
LISTNAME() ;
"RTN","IBDF3",79,0)
 Q $P($G(^IBE(357.2,IBLIST,0)),"^",1)
"RTN","IBDF3",80,0)
ADDGRP ;
"RTN","IBDF3",81,0)
 N NAME,QUIT,GRP
"RTN","IBDF3",82,0)
 S QUIT=0
"RTN","IBDF3",83,0)
 F  D  Q:QUIT
"RTN","IBDF3",84,0)
 .K DIR S DIR(0)="357.4,.01O",DIR("B")="" D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
"RTN","IBDF3",85,0)
 .S NAME=Y
"RTN","IBDF3",86,0)
 .K DIC,DD,DO,DINUM S DIC="^IBE(357.4,",X=NAME,DIC(0)=""
"RTN","IBDF3",87,0)
 .D FILE^DICN K DIC,DIE,DA
"RTN","IBDF3",88,0)
 .I +Y<0 W !,"Unable to create a new record!" D PAUSE^VALM1 S QUIT=1 Q
"RTN","IBDF3",89,0)
 .I +Y>0 K DA S DA=+Y,DIE="^IBE(357.4,",DIE("NO^")="Any value",DR=".02;.04;.03////"_IBLIST D ^DIE K DIC,DIE,DR,DA
"RTN","IBDF3",90,0)
 .W !,"Now Another!",!
"RTN","IBDF3",91,0)
 D IDXGRP
"RTN","IBDF3",92,0)
 S VALMBCK="R"
"RTN","IBDF3",93,0)
 Q
"RTN","IBDF3",94,0)
 ;
"RTN","IBDF3",95,0)
ADDEMPTY ;adds a blank group - a place holder that takes up space on the form
"RTN","IBDF3",96,0)
 ;
"RTN","IBDF3",97,0)
 N ORDER,QUIT,GRP
"RTN","IBDF3",98,0)
 S QUIT=0
"RTN","IBDF3",99,0)
 F  D  Q:QUIT
"RTN","IBDF3",100,0)
 .K DIR S DIR(0)="357.4,.02O",DIR("B")="" D ^DIR K DIR I (Y="")!$D(DIRUT) S QUIT=1 Q
"RTN","IBDF3",101,0)
 .S ORDER=Y
"RTN","IBDF3",102,0)
 .K DIC,DD,DO,DINUM S DIC="^IBE(357.4,",X=" ",DIC(0)=""
"RTN","IBDF3",103,0)
 .D FILE^DICN K DIC,DIE,DA
"RTN","IBDF3",104,0)
 .I +Y<0 W !,"Unable to create a new group record!" D PAUSE^VALM1 S QUIT=1 Q
"RTN","IBDF3",105,0)
 .I +Y>0 K DA S DA=+Y,DIE="^IBE(357.4,",DIE("NO^")="Any value",DR=".02////"_ORDER_";.03////"_IBLIST D ^DIE K DIC,DIE,DR,DA
"RTN","IBDF3",106,0)
 .W !,"Now Another!",!
"RTN","IBDF3",107,0)
 D IDXGRP
"RTN","IBDF3",108,0)
 S VALMBCK="R"
"RTN","IBDF3",109,0)
 Q
"RTN","IBDF3",110,0)
EDTSLCTN ;
"RTN","IBDF3",111,0)
 N SEL,IBGRP S SEL=""
"RTN","IBDF3",112,0)
 I $G(VALMCNT) D
"RTN","IBDF3",113,0)
 .D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","IBDF3",114,0)
 .S SEL=$O(VALMY(""))
"RTN","IBDF3",115,0)
 I SEL="" D
"RTN","IBDF3",116,0)
 .S IBGRP=$$ADDBLANK Q:'IBGRP
"RTN","IBDF3",117,0)
 E  S IBGRP=$G(@VALMAR@("IDX",SEL,SEL))
"RTN","IBDF3",118,0)
 D:IBGRP SLCTNS^IBDF4,IDXGRP
"RTN","IBDF3",119,0)
 S VALMBCK="R"
"RTN","IBDF3",120,0)
 Q
"RTN","IBDF3",121,0)
EDITGRP ;
"RTN","IBDF3",122,0)
 N SEL,GRP
"RTN","IBDF3",123,0)
 S VALMBCK="R"
"RTN","IBDF3",124,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","IBDF3",125,0)
 S SEL="" F  S SEL=$O(VALMY(SEL)) Q:'SEL  D
"RTN","IBDF3",126,0)
 .S GRP=$G(@VALMAR@("IDX",SEL,SEL))
"RTN","IBDF3",127,0)
 .D:GRP
"RTN","IBDF3",128,0)
 ..K DIE,DA S DIE=357.4,DA=GRP,DR=".01;.02;.04" D ^DIE
"RTN","IBDF3",129,0)
 ..I '$D(DA) D DELSLCTN
"RTN","IBDF3",130,0)
 ..K DIE,DA,DR,DIC
"RTN","IBDF3",131,0)
 D IDXGRP
"RTN","IBDF3",132,0)
 S VALMBCK="R"
"RTN","IBDF3",133,0)
 Q
"RTN","IBDF3",134,0)
DELSLCTN ;deletes a group's selections
"RTN","IBDF3",135,0)
 N SLCTN
"RTN","IBDF3",136,0)
 S SLCTN="",DIK="^IBE(357.3,"
"RTN","IBDF3",137,0)
 F  S SLCTN=$O(^IBE(357.3,"D",GRP,SLCTN)) Q:'SLCTN  I $P($G(^IBE(357.3,SLCTN,0)),"^",4)=GRP K DA S DA=SLCTN D ^DIK
"RTN","IBDF3",138,0)
 K DIK,DA
"RTN","IBDF3",139,0)
 Q
"RTN","IBDF3",140,0)
DELGRP ;delete a group and all of its selections
"RTN","IBDF3",141,0)
 N SEL,GRP,IBDSEL
"RTN","IBDF3",142,0)
 S VALMBCK="R"
"RTN","IBDF3",143,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBDF3",144,0)
 S IBDSEL=0
"RTN","IBDF3",145,0)
 I $O(^IBE(357.3,"C",IBLIST,"")) S IBDSEL=1  ;Check to see if block contains selection list. Needed for updating form history fields.
"RTN","IBDF3",146,0)
 S SEL="" F  S SEL=$O(VALMY(SEL)) Q:'SEL  D
"RTN","IBDF3",147,0)
 .S GRP=$G(@VALMAR@("IDX",SEL,SEL))
"RTN","IBDF3",148,0)
 .Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.4,GRP,0)),"^"))
"RTN","IBDF3",149,0)
 .I GRP D DELSLCTN K DA S DIK="^IBE(357.4,",DA=GRP D ^DIK K DIK
"RTN","IBDF3",150,0)
 .I IBDSEL,'$G(^TMP("IBDF ADDSLCTN",$J)) S ^TMP("IBDF DELETE SELECTION OPTION",$J)=1
"RTN","IBDF3",151,0)
 D IDXGRP
"RTN","IBDF3",152,0)
 S VALMBCK="R"
"RTN","IBDF3",153,0)
 Q
"RTN","IBDF4")
0^19^B99102539^B73953175
"RTN","IBDF4",1,0)
IBDF4 ;ALB/CJM - ENCOUNTER FORM - BUILD FORM(editing group's selections) ;11/16/92
"RTN","IBDF4",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**19,38,56,63**;APR 24, 1997;Build 80
"RTN","IBDF4",3,0)
 ;
"RTN","IBDF4",4,0)
 ;
"RTN","IBDF4",5,0)
SLCTNS ;
"RTN","IBDF4",6,0)
 N IBRTN
"RTN","IBDF4",7,0)
 Q:IBLIST'=$P($G(^IBE(357.4,IBGRP,0)),"^",3)
"RTN","IBDF4",8,0)
 S IBRTN=IBLIST("RTN")
"RTN","IBDF4",9,0)
 D RTNDSCR^IBDFU1B(.IBRTN)
"RTN","IBDF4",10,0)
 D KILL^IBDFUA
"RTN","IBDF4",11,0)
 D EN^VALM("IBDF EDIT GROUP'S SELECTIONS") ;call the list manager
"RTN","IBDF4",12,0)
 Q
"RTN","IBDF4",13,0)
ONENTRY ;entry code for list manager
"RTN","IBDF4",14,0)
 D IDXSLCTN
"RTN","IBDF4",15,0)
 Q
"RTN","IBDF4",16,0)
ONEXIT ;exit code for the list manager
"RTN","IBDF4",17,0)
 K @VALMAR
"RTN","IBDF4",18,0)
 Q
"RTN","IBDF4",19,0)
 ;
"RTN","IBDF4",20,0)
IDXSLCTN ;build an array of selections in print order for the list processor
"RTN","IBDF4",21,0)
 N SLCTN,ODR,NODE
"RTN","IBDF4",22,0)
 K @VALMAR
"RTN","IBDF4",23,0)
 I '$D(^TMP("IBDF DELETE SELECTION OPTION",$J)) S ^TMP("IBDF DELETE SELECTION OPTION",$J)=0
"RTN","IBDF4",24,0)
 S ODR="",VALMCNT=0
"RTN","IBDF4",25,0)
 F  S ODR=$O(^IBE(357.3,"APO",IBLIST,IBGRP,ODR)) Q:ODR=""  D
"RTN","IBDF4",26,0)
 .S SLCTN="" F  S SLCTN=$O(^IBE(357.3,"APO",IBLIST,IBGRP,ODR,SLCTN)) Q:'SLCTN  D
"RTN","IBDF4",27,0)
 ..;check for messed up index and take appropriate action
"RTN","IBDF4",28,0)
 ..S NODE=$G(^IBE(357.3,SLCTN,0))
"RTN","IBDF4",29,0)
 ..I ($P(NODE,"^",3)'=IBLIST)!($P(NODE,"^",4)'=IBGRP) D  Q
"RTN","IBDF4",30,0)
 ...K ^IBE(357.3,"APO",IBLIST,IBGRP,ODR,SLCTN)
"RTN","IBDF4",31,0)
 ...I $P(NODE,"^",3)'=IBLIST,$P(NODE,"^",4)=IBGRP D  Q
"RTN","IBDF4",32,0)
 ....K DIK,DA S DIK="^IBE(357.3,",DA=SLCTN D ^DIK K DIK,DA
"RTN","IBDF4",33,0)
 ...I $P(NODE,"^",3)=IBLIST,$P($G(^IBE(357.4,+IBGRP,0)),"^",3)'=IBLIST D  Q
"RTN","IBDF4",34,0)
 ....K DIK,DA S DIK="^IBE(357.3,",DA=SLCTN D ^DIK K DIK,DA
"RTN","IBDF4",35,0)
 ...K DIK,DA S DIK="^IBE(357.3,",DA=SLCTN D IX^DIK K DIK,DA
"RTN","IBDF4",36,0)
 ..;
"RTN","IBDF4",37,0)
 ..S VALMCNT=VALMCNT+1
"RTN","IBDF4",38,0)
 ..S @VALMAR@(VALMCNT,0)=$$DISPLAY(SLCTN,VALMCNT),@VALMAR@("IDX",VALMCNT,VALMCNT)=SLCTN
"RTN","IBDF4",39,0)
 ..D FLDCTRL^VALM10(VALMCNT,"ID") ;set video for ID column
"RTN","IBDF4",40,0)
 I ^TMP("IBDF DELETE SELECTION OPTION",$J)=1,'$O(^IBE(357.3,"APO",IBLIST,IBGRP,"")) D  ;User deleted all selections. Update history files during save.
"RTN","IBDF4",41,0)
 .S ^TMP("IBDF DELETED ALL SELECTIONS",$J)=1
"RTN","IBDF4",42,0)
 Q
"RTN","IBDF4",43,0)
LMGRPHDR ;header for the screen
"RTN","IBDF4",44,0)
 S VALMHDR(1)="SELECTIONS CURRENTLY DEFINED FOR '"_$$GRPNAME_"' PRINT GROUP"
"RTN","IBDF4",45,0)
 Q
"RTN","IBDF4",46,0)
 ;
"RTN","IBDF4",47,0)
GRPNAME() ;the name of the selection group
"RTN","IBDF4",48,0)
 Q $P($G(^IBE(357.4,IBGRP,0)),"^",1)
"RTN","IBDF4",49,0)
 ;
"RTN","IBDF4",50,0)
DISPLAY(SLCTN,COUNT) ;returns a line to display to the list containing a selection - SLCTN is a ptr to the selection, COUNT is the number of the selection on the list
"RTN","IBDF4",51,0)
 N SC,SCDA,VAL,RET,W,NODE,ORDER
"RTN","IBDF4",52,0)
 ;W - an array containing the widths of the subcolumns that contain text
"RTN","IBDF4",53,0)
 S VAL=""
"RTN","IBDF4",54,0)
 S RET=$$PADRIGHT^IBDFU(COUNT,4)
"RTN","IBDF4",55,0)
 S NODE=$G(^IBE(357.3,SLCTN,0))
"RTN","IBDF4",56,0)
 S ORDER=$P(NODE,"^",5),RET=RET_$J(ORDER,6,2)
"RTN","IBDF4",57,0)
 I $P(NODE,"^",2) S RET=RET_$S($P(NODE,"^",7):" SH",1:" PH")_"| "_$P(NODE,"^",6)
"RTN","IBDF4",58,0)
 I '$P(NODE,"^",2) S RET=RET_"  ",SC="" F SC=1:1:8 S SCDA=$O(^IBE(357.3,SLCTN,1,"B",SC,"")) D
"RTN","IBDF4",59,0)
 .I $G(IBLIST("SCTYPE",SC))=1 S W(SC)=IBLIST("SCW",SC)*(1+IBLIST("BTWN"))
"RTN","IBDF4",60,0)
 .S:$G(W(SC)) VAL=$$PADRIGHT^IBDFU($S(SCDA:$P($G(^IBE(357.3,SLCTN,1,SCDA,0)),"^",2),1:""),W(SC))
"RTN","IBDF4",61,0)
 .S:VAL'="" RET=RET_" | "_VAL
"RTN","IBDF4",62,0)
 .S VAL=""
"RTN","IBDF4",63,0)
 I $D(^IBE(357.3,SLCTN,2)) S RET=RET_"  ",SC="" F SC=1:1:2 S SCDA=$P(^IBE(357.3,SLCTN,2),"^",SC) S:SC=2 SCDA=$S($D(^LEX)>1:$P($G(^LEX(757.01,+SCDA,0)),"^"),1:$P($G(^GMP(757.01,+SCDA,0)),"^")) D
"RTN","IBDF4",64,0)
 .S W(SC)=25
"RTN","IBDF4",65,0)
 .S VAL=$$PADRIGHT^IBDFU($S(SCDA]"":SCDA,1:""),W(SC))
"RTN","IBDF4",66,0)
 .S:VAL'="" RET=RET_" | "_VAL
"RTN","IBDF4",67,0)
 .S VAL=""
"RTN","IBDF4",68,0)
 Q RET
"RTN","IBDF4",69,0)
ADDSLCTN ;allows the user to add a selection to the selection group
"RTN","IBDF4",70,0)
 N QUIT,SUB
"RTN","IBDF4",71,0)
 ;
"RTN","IBDF4",72,0)
 S VALMBCK="R"
"RTN","IBDF4",73,0)
 D FULL^VALM1
"RTN","IBDF4",74,0)
 I IBRTN("ACTION")'=3 D NOGOOD G ADDEXIT
"RTN","IBDF4",75,0)
 S ^TMP("IBDF ADDSLCTN",$J)=1
"RTN","IBDF4",76,0)
 K @IBRTN("DATA_LOCATION")
"RTN","IBDF4",77,0)
 S QUIT=0 F  D  Q:QUIT  W !!!,"Now for another SELECTION LIST entry!"
"RTN","IBDF4",78,0)
 .I '$$DORTN^IBDFU1B(.IBRTN) S QUIT=1 D NOGOOD Q
"RTN","IBDF4",79,0)
 .I '$D(@IBRTN("DATA_LOCATION")) S QUIT=1 Q
"RTN","IBDF4",80,0)
 .D ADDREC(.QUIT) ;edits and adds the selection
"RTN","IBDF4",81,0)
 .K @IBRTN("DATA_LOCATION")
"RTN","IBDF4",82,0)
ADDEXIT ;
"RTN","IBDF4",83,0)
 D IDXSLCTN
"RTN","IBDF4",84,0)
 Q
"RTN","IBDF4",85,0)
 ;IBDEXCOD - the external code that we are adding to the group (optional)
"RTN","IBDF4",86,0)
ADDREC(QUIT,ORDER,SLCTN,IBDEXCOD) ;allows the user to number the selection, edit the editable subcolumns, then adds the record - sets QUIT=1 if user quits
"RTN","IBDF4",87,0)
 N SUB,COUNT,NODE,VAL,DLAYGO,QTY,DTOUT,DUOUT,DIRUT
"RTN","IBDF4",88,0)
 I $P($G(^IBE(357.6,$P($G(^IBE(357.2,+IBLIST,0)),"^",11),16)),"^",8) S DIR(0)="NO",DIR("A")="Quantity",DIR("B")=1,DIR("?")="Enter the number of occurrences" D ^DIR K DIR S:$D(DTOUT)!$D(DUOUT) QUIT=1 Q:QUIT  S QTY=$G(Y)
"RTN","IBDF4",89,0)
 I '$G(ORDER) D  Q:QUIT
"RTN","IBDF4",90,0)
 .K DIR S DIR(0)="357.3,.05",DIR("B")=$$NEXT^IBDF4A(IBLIST,IBGRP) D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
"RTN","IBDF4",91,0)
 .S ORDER=+Y
"RTN","IBDF4",92,0)
 S VAL=$G(@IBRTN("DATA_LOCATION"))
"RTN","IBDF4",93,0)
 Q:QUIT
"RTN","IBDF4",94,0)
 ;we have all the data needed to add the selection - so add it
"RTN","IBDF4",95,0)
 S NODE=$S($P(VAL,"^")'="":$P(VAL,"^"),1:ORDER)_"^^"_IBLIST_"^"_IBGRP_"^"_ORDER_$S($G(QTY):"^^^^"_QTY,1:"")
"RTN","IBDF4",96,0)
 K DIC,DD,DO,DINUM S DIC="^IBE(357.3,",X=$P(NODE,"^",1),DIC(0)="FL",DLAYGO=357.3
"RTN","IBDF4",97,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDF4",98,0)
 S SLCTN=$S(+Y<0:"",1:+Y)
"RTN","IBDF4",99,0)
 I 'SLCTN W !,"Unable to create a new selection record!" D PAUSE^VALM1 S QUIT=1 Q
"RTN","IBDF4",100,0)
 S ^IBE(357.3,SLCTN,0)=NODE
"RTN","IBDF4",101,0)
 ;--- move codes and add modifiers
"RTN","IBDF4",102,0)
 D CODES^IBDF4A(.QUIT)
"RTN","IBDF4",103,0)
 Q:QUIT
"RTN","IBDF4",104,0)
 D ADD^IBDF4C
"RTN","IBDF4",105,0)
 ;---move the subcolumn set up
"RTN","IBDF4",106,0)
 F SUB=1:1:8 D  Q:QUIT
"RTN","IBDF4",107,0)
 .I $G(IBLIST("SCTYPE",SUB))=1 I IBLIST("SCPIECE",SUB),IBLIST("SCW",SUB) D
"RTN","IBDF4",108,0)
 ..S NODE=$$DATANODE^IBDFU1B(IBRTN,IBLIST("SCPIECE",SUB))
"RTN","IBDF4",109,0)
 ..I NODE]"" S VAL(SUB)=$P($G(@IBRTN("DATA_LOCATION")@(NODE)),"^",IBLIST("SCPIECE",SUB))
"RTN","IBDF4",110,0)
 ..E  S VAL(SUB)=$P(VAL,"^",IBLIST("SCPIECE",SUB))
"RTN","IBDF4",111,0)
 ..Q:('IBLIST("SCEDITABLE",SUB))!((IBRTN("WIDTH",1))&(IBLIST("SCPIECE",SUB)=1))
"RTN","IBDF4",112,0)
 ..W !!,"Subcolumn Header: "_IBLIST("SCHDR",SUB) K DIR S DIR(0)="FO^0:"_(IBLIST("SCW",SUB)*(1+IBLIST("BTWN"))),DIR("A")="Edit Subcolumn "_SUB,DIR("B")=VAL(SUB)_$S($G(QTY)>1:" x "_QTY,1:"")
"RTN","IBDF4",113,0)
 ..I $P($G(^IBE(357.3,SLCTN,3,0)),"^",4)>0 D
"RTN","IBDF4",114,0)
 ...S:DIR("B")'["w/ mod" DIR("B")=DIR("B")_"w/ mod"
"RTN","IBDF4",115,0)
 ..D ^DIR K DIR S:$D(DTOUT)!($D(DUOUT)) QUIT=1 Q:QUIT  S VAL(SUB)=Y I IBLIST("SCPIECE",SUB)=1,X="" S QUIT=1 Q
"RTN","IBDF4",116,0)
 Q:QUIT
"RTN","IBDF4",117,0)
 ;
"RTN","IBDF4",118,0)
 ;add the subcolumn value multiple
"RTN","IBDF4",119,0)
 S COUNT=0 F SUB=1:1:8 I $G(VAL(SUB))'="" S COUNT=COUNT+1,^IBE(357.3,SLCTN,1,COUNT,0)=SUB_"^"_VAL(SUB)
"RTN","IBDF4",120,0)
 S ^IBE(357.3,SLCTN,1,0)="^357.31IA^"_COUNT_"^"_COUNT
"RTN","IBDF4",121,0)
 K DA S DA=SLCTN,DIK="^IBE(357.3," D IX^DIK K DIK,DA
"RTN","IBDF4",122,0)
 D NARR(.QUIT)
"RTN","IBDF4",123,0)
 Q:QUIT
"RTN","IBDF4",124,0)
 D TERM(.QUIT,$G(IBDEXCOD))
"RTN","IBDF4",125,0)
 Q
"RTN","IBDF4",126,0)
 ;
"RTN","IBDF4",127,0)
NARR(IBDQUIT) ; -- edit provider narrative, but only for selections where the
"RTN","IBDF4",128,0)
 ;    interface allows editing
"RTN","IBDF4",129,0)
 N DIE,DA,DR,Y
"RTN","IBDF4",130,0)
 I $P($G(^IBE(357.6,+$P($G(^IBE(357.2,+IBLIST,0)),U,11),0)),U,17) D
"RTN","IBDF4",131,0)
 .S DIE="^IBE(357.3,",DA=SLCTN,DR=2.01 D ^DIE K DIE,DA,DR
"RTN","IBDF4",132,0)
 I $D(Y) S IBDQUIT=1
"RTN","IBDF4",133,0)
 Q
"RTN","IBDF4",134,0)
 ;IBDCODEX - the external code that we are adding to the group (optional)
"RTN","IBDF4",135,0)
TERM(IBDQUIT,IBDCODEX) ; -- map selection to clinical lexicon, but only for selections where
"RTN","IBDF4",136,0)
 ;    the package interface allows editing
"RTN","IBDF4",137,0)
 ;newed DIC to prevent bug in Lexicon
"RTN","IBDF4",138,0)
 N DIE,DA,DR,GMPTUN,GMPTSUB,GMPTSHOW,XTLKGLB,XTLKHLP,XTLKKSCH,XTLKSAY,IBDLEX,DIC,IBDDT
"RTN","IBDF4",139,0)
 N LEXQ,LEXVDT,Y,IBLEXNS,IBDLEXSS,IBD1STDT,IBDIMPDT
"RTN","IBDF4",140,0)
 ;
"RTN","IBDF4",141,0)
 S IBLEXNS="GMPL",IBDLEXSS="PL1"
"RTN","IBDF4",142,0)
 ;if this is ICD package interface then if it is ICD-10 then used "10D" if anything else (ICD9 at the moment) - use "ICD"
"RTN","IBDF4",143,0)
 I $G(IBRTN("NAME"))["ICD" S (IBLEXNS,IBDLEXSS)=$S($G(IBRTN("NAME"))["ICD-10":"10D",1:"ICD")
"RTN","IBDF4",144,0)
 ;
"RTN","IBDF4",145,0)
 S IBDDT="" ;keep using "" for ICD-9
"RTN","IBDF4",146,0)
 ;for ICD-10 codes:
"RTN","IBDF4",147,0)
 ;if IBDCODEX is not provided then use ICD-10 implementation date if it is prior to the ICD-10 implementation date
"RTN","IBDF4",148,0)
 ; and default if it is on and after 
"RTN","IBDF4",149,0)
 ;if IBDCODEX is defined we rely on the selection logic (see FILTER^IBDUTICD). To pass CONFIG^LEXSET we
"RTN","IBDF4",150,0)
 ; use the latest ACTIVE status date of  the code 
"RTN","IBDF4",151,0)
 I $G(IBRTN("NAME"))["ICD-10" D
"RTN","IBDF4",152,0)
 . ; get the ICD-10 activation date
"RTN","IBDF4",153,0)
 . S IBDIMPDT=$$IMPDATE^IBDUTICD("10D")
"RTN","IBDF4",154,0)
 . ;if code value is NOT defined/not available then
"RTN","IBDF4",155,0)
 . ; set the date to ICD-10 activation if the user adds the code prior to ICD-10 system activation
"RTN","IBDF4",156,0)
 . ; and to default "" if in and after ICD-10 activation and quit
"RTN","IBDF4",157,0)
 . I $G(IBDCODEX)="" S IBDDT=$S(DT<IBDIMPDT:IBDIMPDT,1:"") Q
"RTN","IBDF4",158,0)
 . ;if code value is available then get the date of the last ACTIVE status and use it for CONFIG^LEXSET
"RTN","IBDF4",159,0)
 . S IBDDT=$$LSTACTST^IBDUTICD(IBDCODEX)
"RTN","IBDF4",160,0)
 . ;if not found for some reason then follow the logic "when the code is NOT available" above
"RTN","IBDF4",161,0)
 . I IBDDT=0 S IBDDT=$S(DT<IBDIMPDT:IBDIMPDT,1:"")
"RTN","IBDF4",162,0)
 I $P($G(^IBE(357.6,+$P($G(^IBE(357.2,+IBLIST,0)),U,11),0)),U,18) D
"RTN","IBDF4",163,0)
 .I $D(^LEX)>1 S X="LEXSET" X ^%ZOSF("TEST") I $T D CONFIG^LEXSET(IBLEXNS,IBDLEXSS,IBDDT) S IBDLEX=1
"RTN","IBDF4",164,0)
 .I '$D(IBDLEX) S X="GMPTSET" X ^%ZOSF("TEST") I $T D CONFIG^GMPTSET(IBLEXNS,IBDLEXSS,IBDDT) S IBDLEX=1
"RTN","IBDF4",165,0)
 .;D CONFIG^GMPTSET("ICD","ICD") (this is an alternate filter)
"RTN","IBDF4",166,0)
 .Q:'$D(IBDLEX)
"RTN","IBDF4",167,0)
 .S DIE="^IBE(357.3,",DA=SLCTN,DR="2.02//"_$P($G(^IBE(357.3,DA,0)),"^") D ^DIE
"RTN","IBDF4",168,0)
 K DIC
"RTN","IBDF4",169,0)
 I $D(Y) S IBDQUIT=1
"RTN","IBDF4",170,0)
 Q
"RTN","IBDF4",171,0)
 ;
"RTN","IBDF4",172,0)
CODES ; -- allow selection of a second code to pass through for this entry
"RTN","IBDF4",173,0)
 ; -- only as if pi allows input of more than one code
"RTN","IBDF4",174,0)
 ;N PI S PI=+$P($G(^IBE(357.2,+IBLIST,0)),U,11)
"RTN","IBDF4",175,0)
 ;Q:'$P($G(^IBE(357.6,PI,16)),U,9)
"RTN","IBDF4",176,0)
 ;N IBI,QUIT,IBVAL S QUIT=0
"RTN","IBDF4",177,0)
 ;F IBI=1,2 D  Q:QUIT
"RTN","IBDF4",178,0)
 ;.W !,"****Select a ",$S(IBI=1:"second",1:"third")," code to pass along with original."
"RTN","IBDF4",179,0)
 ;.I '$$DORTN^IBDFU1B(.IBRTN) S QUIT=1 Q
"RTN","IBDF4",180,0)
 ;.I +Y'>0 S QUIT=1 Q
"RTN","IBDF4",181,0)
 ;.X $G(^IBE(357.6,PI,9)) S IBVAL=X
"RTN","IBDF4",182,0)
 ;.S DIE="^IBE(357.3,",DA=SLCTN,DR=$S(IBI=1:"2.03",1:"2.04")_"////^S X=IBVAL" D ^DIE K DIE,DA,DR
"RTN","IBDF4",183,0)
 ;Q
"RTN","IBDF4",184,0)
 ;
"RTN","IBDF4",185,0)
NOGOOD ;
"RTN","IBDF4",186,0)
 W !,"The package interface routine for selection is not properly defined" D PAUSE^VALM1
"RTN","IBDF4",187,0)
 Q
"RTN","IBDF4",188,0)
 ;
"RTN","IBDF4",189,0)
SEQUENCE ;allows the user to resequence all of the selections on the list
"RTN","IBDF4",190,0)
 ;
"RTN","IBDF4",191,0)
 N SUBCOL,CNT,P,SORT,GROUP,NODE,VALUE,ITEM,IEN,HDR,DTOUT,DUOUT,DIRUT,SORT1
"RTN","IBDF4",192,0)
 S VALMBCK="R"
"RTN","IBDF4",193,0)
 D FULL^VALM1
"RTN","IBDF4",194,0)
 ;
"RTN","IBDF4",195,0)
 ;sort by which subcolumn?
"RTN","IBDF4",196,0)
 K DIR S DIR("A")="Which subcolumn do you want to sort by?",DIR("?")=" "
"RTN","IBDF4",197,0)
 S SUBCOL=0 F  S SUBCOL=$O(IBLIST("SCTYPE",SUBCOL)) Q:'SUBCOL  I IBLIST("SCTYPE",SUBCOL)=1 S SUBCOL(SUBCOL)=""
"RTN","IBDF4",198,0)
 S (CNT,SUBCOL)=0,DIR(0)="SOX^"
"RTN","IBDF4",199,0)
 F CNT=1:1 S SUBCOL=$O(SUBCOL(SUBCOL)) Q:'SUBCOL  D
"RTN","IBDF4",200,0)
 .S P=IBLIST("SCPIECE",SUBCOL),P=$S(P=1:1,P=2:3,P=3:5,P=4:7,P=5:9,P=6:11,P=7:13,1:0),HDR=$P($G(^IBE(357.6,+IBLIST("RTN"),2)),"^",P),DIR("?",CNT)=SUBCOL_" = "_HDR
"RTN","IBDF4",201,0)
 .S HDR=$S($G(IBLIST("SCHDR",SUBCOL))="":HDR,1:IBLIST("SCHDR",SUBCOL))
"RTN","IBDF4",202,0)
 .S DIR(0)=DIR(0)_SUBCOL_":"_HDR_";"
"RTN","IBDF4",203,0)
 D ^DIR
"RTN","IBDF4",204,0)
 Q:$D(DIRUT)!(Y=-1)
"RTN","IBDF4",205,0)
 K SUBCOL S SUBCOL=+Y
"RTN","IBDF4",206,0)
 ;
"RTN","IBDF4",207,0)
 ;sort alphabetically or numerically?
"RTN","IBDF4",208,0)
 K DIR
"RTN","IBDF4",209,0)
 S DIR("A")="How should the list be sorted?",DIR(0)="SO^1:ALPHABETICALLY;2:NUMERICALLY;",DIR("B")="ALPHABETICALLY"
"RTN","IBDF4",210,0)
 D ^DIR
"RTN","IBDF4",211,0)
 Q:$D(DIRUT)!(Y=-1)
"RTN","IBDF4",212,0)
 S SORT=Y
"RTN","IBDF4",213,0)
 ;  -- Resequence by group or group and placeholders
"RTN","IBDF4",214,0)
 K DIR
"RTN","IBDF4",215,0)
 S DIR("A")="Resequence by Group or Group and Place Holders?",DIR(0)="SO^1:GROUP/PLACE HOLDERS;2:GROUP;",DIR("B")="GROUP/PLACE HOLDERS"
"RTN","IBDF4",216,0)
 D ^DIR
"RTN","IBDF4",217,0)
 Q:$D(DIRUT)!(Y=-1)
"RTN","IBDF4",218,0)
 S SORT1=Y
"RTN","IBDF4",219,0)
 ;
"RTN","IBDF4",220,0)
 ;sort
"RTN","IBDF4",221,0)
 I SORT1=2 D EN^IBDF4A Q
"RTN","IBDF4",222,0)
 N CNTR,GROUP1,IBGROUP,IBORDER
"RTN","IBDF4",223,0)
 K ^TMP("IBDF",$J)
"RTN","IBDF4",224,0)
 S (GROUP,GROUP1,CNTR,IBGROUP)=0
"RTN","IBDF4",225,0)
 ;  -- Resequence only specific groups in block.
"RTN","IBDF4",226,0)
 I $D(IBGRUP) F  S IBGROUP=$O(IBGRUP(IBGROUP)) Q:'IBGROUP  D RESEQ
"RTN","IBDF4",227,0)
 I $D(IBGRUP) D ORDER Q
"RTN","IBDF4",228,0)
 ;  -- Resequence all groups of the block.
"RTN","IBDF4",229,0)
 I '$D(IBGRUP) F  S IBGROUP=$O(^IBE(357.3,"APO",IBLIST,IBGROUP)) Q:'IBGROUP  D RESEQ
"RTN","IBDF4",230,0)
 I '$D(IBGRUP) D ORDER Q
"RTN","IBDF4",231,0)
 Q
"RTN","IBDF4",232,0)
RESEQ S IBORDER=0 F  S IBORDER=$O(^IBE(357.3,"APO",IBLIST,IBGROUP,IBORDER)) Q:'IBORDER  S ITEM=0 F  S ITEM=$O(^IBE(357.3,"APO",IBLIST,IBGROUP,IBORDER,ITEM)) Q:'ITEM  D
"RTN","IBDF4",233,0)
 .S NODE=$G(^IBE(357.3,ITEM,0))
"RTN","IBDF4",234,0)
 .I ($P(NODE,"^",3)'=IBLIST) Q
"RTN","IBDF4",235,0)
 .S GROUP1=GROUP,GROUP=+$P(NODE,"^",4)
"RTN","IBDF4",236,0)
 .Q:$P($G(^IBE(357.4,GROUP,0)),"^",3)'=IBLIST
"RTN","IBDF4",237,0)
 .I $P(NODE,"^",2)=1 D  Q
"RTN","IBDF4",238,0)
 ..S CNTR=CNTR+1
"RTN","IBDF4",239,0)
 ..S VALUE=$S(SORT=1:" ",1:+$P(NODE,"^",1))
"RTN","IBDF4",240,0)
 ..S ^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP,CNTR,VALUE,ITEM)=""
"RTN","IBDF4",241,0)
 .S IEN=$O(^IBE(357.3,ITEM,1,"B",SUBCOL,0)) Q:'IEN
"RTN","IBDF4",242,0)
 .S VALUE=$P($G(^IBE(357.3,ITEM,1,IEN,0)),"^",2)
"RTN","IBDF4",243,0)
 .S VALUE=$S(SORT=1:VALUE=" "_VALUE,1:+$P(NODE,"^",1))
"RTN","IBDF4",244,0)
 .I GROUP'=GROUP1 S CNTR=CNTR+1
"RTN","IBDF4",245,0)
 .S ^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP,CNTR,$E(VALUE,1,40),ITEM)=""
"RTN","IBDF4",246,0)
 ;set the order
"RTN","IBDF4",247,0)
ORDER S GROUP=0,CNTR=0
"RTN","IBDF4",248,0)
 F  S GROUP=$O(^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP)) Q:'GROUP  D
"RTN","IBDF4",249,0)
 .S VALUE="",CNT=0
"RTN","IBDF4",250,0)
 .F  S CNTR=$O(^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP,CNTR)) Q:'CNTR  F  S VALUE=$O(^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP,CNTR,VALUE)) Q:VALUE=""  D
"RTN","IBDF4",251,0)
 ..S ITEM=0 F  S ITEM=$O(^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP,CNTR,VALUE,ITEM)) Q:'ITEM  D
"RTN","IBDF4",252,0)
 ...S CNT=CNT+1
"RTN","IBDF4",253,0)
 ...K DIE,DA,DR S DIE="^IBE(357.3,",DR=".05///"_CNT,DA=ITEM D ^DIE K DIE,DA,DR
"RTN","IBDF4",254,0)
 ;
"RTN","IBDF4",255,0)
 K Y,X,DIR,^TMP("IBDF",$J,"RESEQUENCE LIST")
"RTN","IBDF4",256,0)
 D IDXGRP^IBDF3
"RTN","IBDF4",257,0)
 Q
"RTN","IBDF4A")
0^14^B45844893^B40998233
"RTN","IBDF4A",1,0)
IBDF4A ;ALB/CJM - ENCOUNTER FORM - BUILD FORM(editing group's selections - continued from IBDF4) ;11/16/92
"RTN","IBDF4A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**38,63**;APR 24, 1997;Build 80
"RTN","IBDF4A",3,0)
 ;
"RTN","IBDF4A",4,0)
 ;
"RTN","IBDF4A",5,0)
EDIT ;allows editing of an existing selection
"RTN","IBDF4A",6,0)
 N SEL,SUB,SLCTN,SC,NODE,OQTY,NQTY,IBDQUIT
"RTN","IBDF4A",7,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","IBDF4A",8,0)
 S SEL="" F  S SEL=$O(VALMY(SEL)) Q:'SEL  D
"RTN","IBDF4A",9,0)
 .W !,"Editing Entry #",SEL
"RTN","IBDF4A",10,0)
 .S SLCTN=$G(@VALMAR@("IDX",SEL,SEL)) Q:'SLCTN
"RTN","IBDF4A",11,0)
 .S NODE=$G(^IBE(357.3,SLCTN,0))
"RTN","IBDF4A",12,0)
 .;re-index the record, to insure it is good
"RTN","IBDF4A",13,0)
 .K DIK,DA S DIK="^IBE(357.3,",DA=SLCTN D IX^DIK K DIK
"RTN","IBDF4A",14,0)
 .;edit the order of the selection - also, for placeholders, the text, then quit
"RTN","IBDF4A",15,0)
 .D FULL^VALM1
"RTN","IBDF4A",16,0)
 .I $P(NODE,"^",2) D  Q
"RTN","IBDF4A",17,0)
 ..S DA=SLCTN,DIE=357.3,DR="[IBDF EDIT PLACE HOLDER]" D ^DIE K DIE,DA,DR
"RTN","IBDF4A",18,0)
 .S DA=SLCTN,DIE=357.3,DR=".05;I '$P($G(^IBE(357.6,$P($G(^IBE(357.2,+IBLIST,0)),""^"",11),16)),""^"",8) S Y=""@99"";S OQTY=$P(^IBE(357.3,DA,0),""^"",9);.09;S NQTY=X;@99;S CONT=1" S CONT=0 D ^DIE K DIE,DA,DR
"RTN","IBDF4A",19,0)
 .D CODES
"RTN","IBDF4A",20,0)
 .D ADD^IBDF4C
"RTN","IBDF4A",21,0)
 .;add any missing subcolumns
"RTN","IBDF4A",22,0)
 .S SC=0 F SC=1:1:8 I $G(IBLIST("SCTYPE",SC))=1 I '$D(^IBE(357.3,SLCTN,1,"B",SC)) D
"RTN","IBDF4A",23,0)
 ..K DA,DO,DINUM,DIC
"RTN","IBDF4A",24,0)
 ..N DLAYGO
"RTN","IBDF4A",25,0)
 ..S DIC="^IBE(357.3,"_SLCTN_",1,",DA(1)=SLCTN,X=SC,DIC(0)="L",DLAYGO=357.3 D FILE^DICN
"RTN","IBDF4A",26,0)
 .;now allow the user to edit editable subcolumns - CONT=0 means the user up-arrowed out, so stop
"RTN","IBDF4A",27,0)
 .I CONT S SUB=0 F  S SUB=$O(^IBE(357.3,SLCTN,1,SUB)) Q:'SUB  D
"RTN","IBDF4A",28,0)
 ..S SC=+$G(^IBE(357.3,SLCTN,1,SUB,0)) I $G(IBLIST("SCTYPE",SC))=1,$G(IBLIST("SCPIECE",SC)),$G(IBLIST("SCEDITABLE",SC)) D
"RTN","IBDF4A",29,0)
 ...I $G(^IBE(357.3,SLCTN,1,0))="" S ^IBE(357.3,SLCTN,1,0)="^357.31AI^"
"RTN","IBDF4A",30,0)
 ...S DIE="^IBE(357.3,"_SLCTN_",1,",DA(1)=SLCTN,DA=SUB,DR=".02;S CONT=1",CONT=0 W !!,"Editing Subcolumn "_SC_": Header="_IBLIST("SCHDR",SC)
"RTN","IBDF4A",31,0)
 ...S IBVAL=$P($G(^IBE(357.3,SLCTN,1,SUB,0)),"^",2)
"RTN","IBDF4A",32,0)
 ...I $G(OQTY)'=$G(NQTY) S IBVAL=$P(IBVAL," x "_OQTY)_$S(NQTY>1:" x "_NQTY,1:""),DR=".02////^S X=IBVAL;I;"_DR
"RTN","IBDF4A",33,0)
 ...;--added for modifiers
"RTN","IBDF4A",34,0)
 ...I $P($G(^IBE(357.3,SLCTN,3,0)),"^",4)>0 D
"RTN","IBDF4A",35,0)
 ....S:IBVAL'["w/ mod" IBVAL=IBVAL_" w/ mod"
"RTN","IBDF4A",36,0)
 ....S DR=".02////^S X=IBVAL;I;"_DR
"RTN","IBDF4A",37,0)
 ...D ^DIE K DIE,DA,DR,IBVAL I 'CONT Q
"RTN","IBDF4A",38,0)
 .D NARR^IBDF4 W !
"RTN","IBDF4A",39,0)
 .D TERM^IBDF4 W !
"RTN","IBDF4A",40,0)
 D IDXSLCTN^IBDF4
"RTN","IBDF4A",41,0)
 S VALMBCK="R"
"RTN","IBDF4A",42,0)
EDITEXIT ;
"RTN","IBDF4A",43,0)
 Q
"RTN","IBDF4A",44,0)
CODES(IBDQUIT) ; -- allow editing of 2nd & 3rd codes that are associated w/ original
"RTN","IBDF4A",45,0)
 S IBDQUIT=$G(IBDQUIT)
"RTN","IBDF4A",46,0)
 N IBPI S IBPI=+$P($G(^IBE(357.2,+IBLIST,0)),U,11) Q:'IBPI
"RTN","IBDF4A",47,0)
 Q:'$P($G(^IBE(357.6,IBPI,16)),U,9)!('$D(^IBE(357.6,IBPI,17)))
"RTN","IBDF4A",48,0)
 N IBI,IBEXT,FLD,IBDICD,IBDSERCH
"RTN","IBDF4A",49,0)
 ;IBDSERCH 1=ICD Lexicon Search; 2=ICD Wildcard search.
"RTN","IBDF4A",50,0)
 ;If user chose Replace Code option, do ICD Lexicon search, else do Wildcard Search.
"RTN","IBDF4A",51,0)
 S IBDSERCH=$S($P($G(XQORNOD(0)),U,4)="RC":2,1:1)
"RTN","IBDF4A",52,0)
 F IBI=3,4 S FLD="2.0"_IBI D  Q:IBDQUIT
"RTN","IBDF4A",53,0)
 .S IBEXT=$P($G(^IBE(357.3,SLCTN,2)),"^",IBI)
"RTN","IBDF4A",54,0)
 .I $G(IBEXT)]"" D
"RTN","IBDF4A",55,0)
 ..W !,$S(IBI=3:"SECOND",1:"THIRD")," CODE: ",IBEXT
"RTN","IBDF4A",56,0)
 ..S DIR(0)="Y",DIR("A")="Delete?",DIR("B")="NO" D ^DIR K DIR
"RTN","IBDF4A",57,0)
 ..I Y=1 S IBEXT="",DIE="^IBE(357.3,",DA=SLCTN,DR=FLD_"////@" D ^DIE K DIE,DA,DR
"RTN","IBDF4A",58,0)
 .; Change for ICD-10 project   
"RTN","IBDF4A",59,0)
 .S IBDICD=$S($G(IBRTN("NAME"))["ICD-9":"ICD-9",$G(IBRTN("NAME"))["ICD-10":"ICD-10",1:"")
"RTN","IBDF4A",60,0)
 .S DIC("A")="Select a "_$S(IBI=3:"SECOND "_IBDICD,1:"THIRD "_IBDICD)_" code to associate with the original: ",DIC("B")=$S($G(IBEXT)]"":IBEXT,1:"")
"RTN","IBDF4A",61,0)
 .I '$$DORTN^IBDFU1B(.IBRTN,IBDSERCH) K DIC Q
"RTN","IBDF4A",62,0)
 .K DIC
"RTN","IBDF4A",63,0)
 .I IBDQUIT'="",$D(DTOUT) S IBDQUIT=1 Q
"RTN","IBDF4A",64,0)
 .I IBDQUIT'="",$D(DUOUT) S IBDQUIT=1 Q
"RTN","IBDF4A",65,0)
 .S IBEXT=$S(+$G(Y)>0:$P($G(Y(0)),"^"),1:"")
"RTN","IBDF4A",66,0)
 .I $G(IBEXT)]"" D
"RTN","IBDF4A",67,0)
 ..S DIE="^IBE(357.3,",DA=SLCTN,DR=FLD_"////^S X=IBEXT"
"RTN","IBDF4A",68,0)
 ..D ^DIE K DIE,DA,DR
"RTN","IBDF4A",69,0)
 Q
"RTN","IBDF4A",70,0)
DELETE ;allows the user to select selections to delete
"RTN","IBDF4A",71,0)
 N SEL
"RTN","IBDF4A",72,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBDF4A",73,0)
 K DA
"RTN","IBDF4A",74,0)
 S SEL="" F  S SEL=$O(VALMY(SEL)) Q:'SEL  D
"RTN","IBDF4A",75,0)
 .S DIK="^IBE(357.3,",DA=$G(@VALMAR@("IDX",SEL,SEL))
"RTN","IBDF4A",76,0)
 .Q:'$$RUSURE^IBDFU5("Selection #"_SEL)
"RTN","IBDF4A",77,0)
 .D ^DIK
"RTN","IBDF4A",78,0)
 .D KILL^VALM10(SEL)
"RTN","IBDF4A",79,0)
 .I '$D(^TMP("IBDF ADDSLCTN",$J)) S ^TMP("IBDF DELETE SELECTION OPTION",$J)=1
"RTN","IBDF4A",80,0)
 K DIK,DA
"RTN","IBDF4A",81,0)
 D IDXSLCTN^IBDF4
"RTN","IBDF4A",82,0)
 S VALMBCK="R"
"RTN","IBDF4A",83,0)
 Q
"RTN","IBDF4A",84,0)
 ;
"RTN","IBDF4A",85,0)
ADDBLANK ;allows the user to add a dummy selection to the selection group
"RTN","IBDF4A",86,0)
 ;i.e., a place holder that will not actually print a selection
"RTN","IBDF4A",87,0)
 ;
"RTN","IBDF4A",88,0)
 D FULL^VALM1
"RTN","IBDF4A",89,0)
 D ADD
"RTN","IBDF4A",90,0)
 D IDXSLCTN^IBDF4
"RTN","IBDF4A",91,0)
 S VALMBCK="R"
"RTN","IBDF4A",92,0)
 Q
"RTN","IBDF4A",93,0)
 ;
"RTN","IBDF4A",94,0)
NEXT(IBLIST,IBGRP) ;returns the next print order to assign=last + 1
"RTN","IBDF4A",95,0)
 Q (1+$O(^IBE(357.3,"APO",IBLIST,IBGRP,""),-1))
"RTN","IBDF4A",96,0)
 ;
"RTN","IBDF4A",97,0)
ASKMORE() ;ask if the user wants to add another, returns 1 or 0
"RTN","IBDF4A",98,0)
 K DIR
"RTN","IBDF4A",99,0)
 S DIR(0)="Y",DIR("A")="Do you want to add another",DIR("B")="NO"
"RTN","IBDF4A",100,0)
 D ^DIR
"RTN","IBDF4A",101,0)
 K DIR
"RTN","IBDF4A",102,0)
 I $D(DIRUT)!'Y Q 0
"RTN","IBDF4A",103,0)
 Q 1
"RTN","IBDF4A",104,0)
 ;
"RTN","IBDF4A",105,0)
ADD ;allows the user to add a dummy selection to the selection group
"RTN","IBDF4A",106,0)
 ;i.e., a place holder that will not actually print a selection
"RTN","IBDF4A",107,0)
 ;
"RTN","IBDF4A",108,0)
 N QUIT,ORDER,SLCTN,NODE
"RTN","IBDF4A",109,0)
 S QUIT=0 F  D  Q:QUIT  Q:'$$ASKMORE()
"RTN","IBDF4A",110,0)
 .S ORDER=$$NEXT(IBLIST,IBGRP)
"RTN","IBDF4A",111,0)
 .;we have all the data needed to add the selection - so add it
"RTN","IBDF4A",112,0)
 .S NODE=ORDER_"^"_1_"^"_IBLIST_"^"_IBGRP_"^"_ORDER
"RTN","IBDF4A",113,0)
 .K DIC,DD,DO,DINUM
"RTN","IBDF4A",114,0)
 .N DLAYGO
"RTN","IBDF4A",115,0)
 .S DIC="^IBE(357.3,",X=ORDER,DIC(0)="FL",DLAYGO=357.3
"RTN","IBDF4A",116,0)
 .D FILE^DICN K DIC,DIE,DA
"RTN","IBDF4A",117,0)
 .S SLCTN=$S(+Y<0:"",1:+Y)
"RTN","IBDF4A",118,0)
 .I 'SLCTN W !,"Unable to create the place holder!" D PAUSE^VALM1 S QUIT=1 Q
"RTN","IBDF4A",119,0)
 .S ^IBE(357.3,SLCTN,0)=NODE
"RTN","IBDF4A",120,0)
 .K DA S DA=SLCTN,DIK="^IBE(357.3," D IX^DIK K DIK,DA
"RTN","IBDF4A",121,0)
 .K DIE S DA=SLCTN,DIE=357.3,DR="[IBDF EDIT PLACE HOLDER]" D ^DIE K DIE,DA,DR
"RTN","IBDF4A",122,0)
 .K DA S DA=SLCTN,DIK="^IBE(357.3," D IX^DIK K DIK,DA
"RTN","IBDF4A",123,0)
 Q
"RTN","IBDF4A",124,0)
EN ;  -- Resequence selection lists not taking into account the
"RTN","IBDF4A",125,0)
 ;     the place holders.  Will put the selection list into alphabetic
"RTN","IBDF4A",126,0)
 ;     or numeric order..... the place holders will be used as extra
"RTN","IBDF4A",127,0)
 ;     lines of description and not as separators or headers within
"RTN","IBDF4A",128,0)
 ;     the group.
"RTN","IBDF4A",129,0)
 N CNTR,COUNT,IBGROUP,IBORDER
"RTN","IBDF4A",130,0)
 S (CNTR,COUNT,IBGROUP)=0
"RTN","IBDF4A",131,0)
 K ^TMP("BLANK",$J),^TMP("IBDF",$J)
"RTN","IBDF4A",132,0)
 ;  -- Resequence only specific groups in block.
"RTN","IBDF4A",133,0)
 I $D(IBGRUP) F  S IBGROUP=$O(IBGRUP(IBGROUP)) Q:'IBGROUP  D RESEQ
"RTN","IBDF4A",134,0)
 I $D(IBGRUP) D ORDER Q
"RTN","IBDF4A",135,0)
 ;  -- Resequence all groups of the block.
"RTN","IBDF4A",136,0)
 I '$D(IBGRUP) F  S IBGROUP=$O(^IBE(357.3,"APO",IBLIST,IBGROUP)) Q:'IBGROUP  D RESEQ
"RTN","IBDF4A",137,0)
 I '$D(IBGRUP) D ORDER Q
"RTN","IBDF4A",138,0)
 Q
"RTN","IBDF4A",139,0)
 ;
"RTN","IBDF4A",140,0)
RESEQ S IBORDER=0 F  S IBORDER=$O(^IBE(357.3,"APO",IBLIST,IBGROUP,IBORDER)) Q:'IBORDER  S ITEM=0 F  S ITEM=$O(^IBE(357.3,"APO",IBLIST,IBGROUP,IBORDER,ITEM)) Q:'ITEM  D
"RTN","IBDF4A",141,0)
 .S NODE=$G(^IBE(357.3,ITEM,0))
"RTN","IBDF4A",142,0)
 .I ($P(NODE,"^",3)'=IBLIST) Q
"RTN","IBDF4A",143,0)
 .S GROUP=+$P(NODE,"^",4)
"RTN","IBDF4A",144,0)
 .Q:$P($G(^IBE(357.4,GROUP,0)),"^",3)'=IBLIST
"RTN","IBDF4A",145,0)
 .S COUNT=COUNT+1
"RTN","IBDF4A",146,0)
 .I $P(NODE,"^",2) S ^TMP("BLANK",$J,GROUP,CNTR,COUNT,ITEM)=""
"RTN","IBDF4A",147,0)
 .S IEN=$O(^IBE(357.3,ITEM,1,"B",SUBCOL,0)) Q:'IEN
"RTN","IBDF4A",148,0)
 .S VALUE=$P($G(^IBE(357.3,ITEM,1,IEN,0)),"^",2)
"RTN","IBDF4A",149,0)
 .S VALUE=$S(SORT=1:VALUE=" "_VALUE,1:+$P(NODE,"^",1))
"RTN","IBDF4A",150,0)
 .S CNTR=CNTR+1
"RTN","IBDF4A",151,0)
 .S ^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP,$E(VALUE,1,40),ITEM)=CNTR
"RTN","IBDF4A",152,0)
 .S ^TMP("BLANK",$J,GROUP,CNTR,COUNT,ITEM)=""
"RTN","IBDF4A",153,0)
 ;
"RTN","IBDF4A",154,0)
 ;set the order
"RTN","IBDF4A",155,0)
ORDER S (GROUP,CNTR)=0
"RTN","IBDF4A",156,0)
 F  S GROUP=$O(^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP)) Q:'GROUP  D
"RTN","IBDF4A",157,0)
 .S VALUE="",CNT=0
"RTN","IBDF4A",158,0)
 .F  S VALUE=$O(^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP,VALUE)) Q:VALUE=""  D
"RTN","IBDF4A",159,0)
 ..S ITEM=0 F  S ITEM=$O(^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP,VALUE,ITEM)) Q:'ITEM  S CNTR=^TMP("IBDF",$J,"RESEQUENCE LIST",GROUP,VALUE,ITEM) D:'$D(^TMP("BLANK",$J,GROUP,CNTR))  I $D(^TMP("BLANK",$J,GROUP,CNTR)) D BLANK
"RTN","IBDF4A",160,0)
 ...S CNT=CNT+1
"RTN","IBDF4A",161,0)
 ...K DIE,DA,DR S DIE="^IBE(357.3,",DR=".05///"_CNT,DA=ITEM D ^DIE K DIE,DA,DR
"RTN","IBDF4A",162,0)
 ;
"RTN","IBDF4A",163,0)
 K Y,X,DIR,^TMP("IBDF",$J,"RESEQUENCE LIST")
"RTN","IBDF4A",164,0)
 D IDXGRP^IBDF3
"RTN","IBDF4A",165,0)
 Q
"RTN","IBDF4A",166,0)
BLANK ;  -- Check to see if there is any place holders.
"RTN","IBDF4A",167,0)
 N IBDITEM,COUNT
"RTN","IBDF4A",168,0)
 F COUNT=0:0 S COUNT=$O(^TMP("BLANK",$J,GROUP,CNTR,COUNT)) Q:'COUNT  F IBDITEM=0:0 S IBDITEM=$O(^TMP("BLANK",$J,GROUP,CNTR,COUNT,IBDITEM)) Q:'IBDITEM  D
"RTN","IBDF4A",169,0)
 .S CNT=CNT+1
"RTN","IBDF4A",170,0)
 .K DIE,DA,DR S DIE="^IBE(357.3,",DR=".05///"_CNT,DA=IBDITEM D ^DIE K DIE,DA,DR
"RTN","IBDF4A",171,0)
 .Q
"RTN","IBDF4A",172,0)
 Q
"RTN","IBDF5")
0^40^B22015459^B17073479
"RTN","IBDF5",1,0)
IBDF5 ;ALB/CJM - ENCOUNTER FORM (edit a form) ;11/16/92
"RTN","IBDF5",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;APR 24, 1997;Build 80
"RTN","IBDF5",3,0)
 ;
"RTN","IBDF5",4,0)
 ;
"RTN","IBDF5",5,0)
 ;displays the form for editing using the list processor
"RTN","IBDF5",6,0)
 ;
"RTN","IBDF5",7,0)
 ;these variables should always be defined while editing a form
"RTN","IBDF5",8,0)
 ;IBFORM - contains the form description
"RTN","IBDF5",9,0)
INIT ;
"RTN","IBDF5",10,0)
 ;
"RTN","IBDF5",11,0)
 Q:'$$FORMDSCR^IBDFU1C(.IBFORM)
"RTN","IBDF5",12,0)
 D IDXFORM^IBDF5A()
"RTN","IBDF5",13,0)
 Q
"RTN","IBDF5",14,0)
EXIT ;
"RTN","IBDF5",15,0)
 K @VALMAR
"RTN","IBDF5",16,0)
 Q
"RTN","IBDF5",17,0)
HDR ;the screen header, a ruler
"RTN","IBDF5",18,0)
 S VALMHDR(1)=$$PADRIGHT^IBDFU("",4) ;VALMHDR(2)=VALMHDR(2)_0
"RTN","IBDF5",19,0)
 F I=1:1:16 S VALMHDR(1)=VALMHDR(1)_$J(I,10)
"RTN","IBDF5",20,0)
 Q
"RTN","IBDF5",21,0)
DELETE  ;allows user to select a block for deletion
"RTN","IBDF5",22,0)
 N IBBLK,IBVALMBG,TOP,BOT,IBD9,IBD10,IBDN,IBDX
"RTN","IBDF5",23,0)
 S VALMBCK="R",IBVALMBG=$G(VALMBG)
"RTN","IBDF5",24,0)
 S VALMBG=IBVALMBG
"RTN","IBDF5",25,0)
 D FULL^VALM1
"RTN","IBDF5",26,0)
 S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,IOSL)
"RTN","IBDF5",27,0)
 Q:'IBBLK
"RTN","IBDF5",28,0)
 Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.1,IBBLK,0)),"^"))
"RTN","IBDF5",29,0)
 D TOPNBOT^IBDFU5(IBBLK,.TOP,.BOT)
"RTN","IBDF5",30,0)
 S (IBD9,IBD10)=0
"RTN","IBDF5",31,0)
 ;Check to see if block is an ICD-9 or ICD-10 code block.
"RTN","IBDF5",32,0)
 S IBDN="" F  S IBDN=$O(^IBE(357.2,"C",IBBLK,IBDN)) Q:IBDN=""  S IBDX=$P($G(^IBE(357.2,IBDN,0)),U,11) I IBDX?1.N S IBDX=$E($P($G(^IBE(357.6,IBDX,0)),U,1),1,30) D
"RTN","IBDF5",33,0)
 .I '$O(^IBE(357.3,"C",IBDN,"")) Q  ;Only log history fields if ICD-9 or ICD-10 codes are contained in block.
"RTN","IBDF5",34,0)
 .I IBDX="DG SELECT ICD-9 DIAGNOSIS CODE",$O(^IBE(357.3,"C",IBDN,"")) S IBD9=1
"RTN","IBDF5",35,0)
 .I IBDX="DG SELECT ICD-10 DIAGNOSIS COD",$O(^IBE(357.3,"C",IBDN,"")) S IBD10=1
"RTN","IBDF5",36,0)
 D DLTBLK^IBDFU3(IBBLK,IBFORM,357.1)
"RTN","IBDF5",37,0)
 ;Now update history if block was an ICD-9 or ICD-10 block before block was deleted.
"RTN","IBDF5",38,0)
 N IBDX
"RTN","IBDF5",39,0)
 I IBD9 S IBDX=$$CSUPD357^IBDUTICD(IBFORM,1,"",$$NOW^XLFDT(),DUZ)
"RTN","IBDF5",40,0)
 I IBD10 S IBDX=$$CSUPD357^IBDUTICD(IBFORM,30,"",$$NOW^XLFDT(),DUZ)
"RTN","IBDF5",41,0)
 S VALMBCK="R"
"RTN","IBDF5",42,0)
 D IDXFORM^IBDF5A(TOP,BOT)
"RTN","IBDF5",43,0)
 Q
"RTN","IBDF5",44,0)
 ;
"RTN","IBDF5",45,0)
MOVE ;allows the user to select a block and move it
"RTN","IBDF5",46,0)
 N IBBLK,NODE0,BLKWIDTH,BLKHT,STARTCOL,STARTROW,TOP1,BOT1,TOP2,BOT2
"RTN","IBDF5",47,0)
 S VALMBCK="R"
"RTN","IBDF5",48,0)
 ;D FULL^VALM1
"RTN","IBDF5",49,0)
 S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,5)
"RTN","IBDF5",50,0)
 I IBBLK D
"RTN","IBDF5",51,0)
 .S NODE0=$G(^IBE(357.1,IBBLK,0))
"RTN","IBDF5",52,0)
 .S BLKWIDTH=+$P(NODE0,"^",6),BLKHT=+$P(NODE0,"^",7),STARTCOL=+$P(NODE0,"^",5),STARTROW=+$P(NODE0,"^",4)
"RTN","IBDF5",53,0)
 .S TOP1=STARTROW,BOT1=(TOP1+BLKHT)-1
"RTN","IBDF5",54,0)
 .I STARTROW!(IBFORM("HT")>BLKHT) K DIR S DIR(0)="NA^1:"_(IBFORM("HT")-BLKHT+1)_":0",DIR("A")="Move the TOP MARGIN of the block to which row?: ",DIR("B")=STARTROW+1 D ^DIR K DIR Q:$D(DIRUT)  S STARTROW=X-1
"RTN","IBDF5",55,0)
 .I STARTCOL!(IBFORM("WIDTH")>BLKWIDTH) K DIR S DIR(0)="NA^1:"_(IBFORM("WIDTH")-BLKWIDTH+1)_":0",DIR("A")="Move the LEFT MARGIN of the block to which column?: ",DIR("B")=STARTCOL+1 D ^DIR K DIR Q:$D(DIRUT)  S STARTCOL=X-1
"RTN","IBDF5",56,0)
 .K DIE,DA S DIE=357.1,DA=IBBLK,DR=".04////^S X=STARTROW;.05////^S X=STARTCOL" D ^DIE K DIE,DA,DR
"RTN","IBDF5",57,0)
 .S VALMBCK="R"
"RTN","IBDF5",58,0)
 .D TOPNBOT^IBDFU5(IBBLK,.TOP2,.BOT2) S TOP1=$S(TOP1<TOP2:TOP1,1:TOP2) S BOT1=$S(BOT1>BOT2:BOT1,1:BOT2)
"RTN","IBDF5",59,0)
 .D IDXFORM^IBDF5A(TOP1,BOT1)
"RTN","IBDF5",60,0)
 .S VALMBG=STARTROW-7 S:VALMBG<1 VALMBG=1
"RTN","IBDF5",61,0)
 Q
"RTN","IBDF5",62,0)
RESIZE ;allows user to select a block & re-size it
"RTN","IBDF5",63,0)
 N IBBLK,BLKWIDTH,BLKHT,STARTCOL,STARTROW,TOP1,TOP2,BOT1,BOT2
"RTN","IBDF5",64,0)
 S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,5)
"RTN","IBDF5",65,0)
 I IBBLK D
"RTN","IBDF5",66,0)
 .D NOWSIZE S TOP1=STARTROW,BOT1=(TOP1+BLKHT)-1
"RTN","IBDF5",67,0)
 .D NEWSIZE
"RTN","IBDF5",68,0)
 .D TOPNBOT^IBDFU5(IBBLK,.TOP2,.BOT2) S TOP1=$S(TOP1<TOP2:TOP1,1:TOP2) S BOT1=$S(BOT1>BOT2:BOT1,1:BOT2)
"RTN","IBDF5",69,0)
 .D IDXFORM^IBDF5A(TOP1,BOT1)
"RTN","IBDF5",70,0)
 S VALMBCK="R"
"RTN","IBDF5",71,0)
 Q
"RTN","IBDF5",72,0)
NOWSIZE ;what size is the block, and where does it start? returns BLKWIDTH,BLKHT,STARTROW,STARTCOL
"RTN","IBDF5",73,0)
 N NODE0
"RTN","IBDF5",74,0)
 S NODE0=$G(^IBE(357.1,IBBLK,0))
"RTN","IBDF5",75,0)
 S BLKWIDTH=+$P(NODE0,"^",6),BLKHT=+$P(NODE0,"^",7),STARTCOL=+$P(NODE0,"^",5),STARTROW=+$P(NODE0,"^",4)
"RTN","IBDF5",76,0)
 Q
"RTN","IBDF5",77,0)
NEWSIZE ;allows user to change the size of a block
"RTN","IBDF5",78,0)
 K DIR S DIR(0)="NA^"_(STARTROW+1)_":"_(IBFORM("HT"))_":0",DIR("A")="Move the BOTTOM MARGIN of the block to which row?: ",DIR("B")=(STARTROW+BLKHT) D ^DIR K DIR Q:$D(DIRUT)  S BLKHT=(X-STARTROW)
"RTN","IBDF5",79,0)
 K DIR S DIR(0)="NA^"_(STARTCOL+1)_":"_IBFORM("WIDTH")_":0",DIR("A")="Move the RIGHT MARGIN of the block to which column?: ",DIR("B")=(STARTCOL+BLKWIDTH) D ^DIR K DIR Q:$D(DIRUT)  S BLKWIDTH=(X-STARTCOL)
"RTN","IBDF5",80,0)
 K DIE,DA S DIE=357.1,DA=IBBLK,DR=".06////^S X=BLKWIDTH;.07////^S X=BLKHT" D ^DIE K DIE,DA,DR
"RTN","IBDF5",81,0)
 D UNCMPBLK^IBDF19(IBBLK)
"RTN","IBDF5",82,0)
 Q
"RTN","IBDF5",83,0)
SHIFT ;allows the user to shift a group of blocks within a rectangular region on the form
"RTN","IBDF5",84,0)
 D SHIFT^IBDF10("B")
"RTN","IBDF5",85,0)
 D IDXFORM^IBDF5A()
"RTN","IBDF5",86,0)
 S VALMBCK="R"
"RTN","IBDF5",87,0)
 Q
"RTN","IBDF5B")
0^35^B36424692^B17974851
"RTN","IBDF5B",1,0)
IBDF5B ;ALB/CJM - ENCOUNTER FORM (edit a form - CONTINUED) ;07/27/93
"RTN","IBDF5B",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;APR 24, 1997;Build 80
"RTN","IBDF5B",3,0)
 ;
"RTN","IBDF5B",4,0)
 ;
"RTN","IBDF5B",5,0)
EDITBLK ;allows the user to edit everything about the block
"RTN","IBDF5B",6,0)
 ;allows user to discard or save changes to the block
"RTN","IBDF5B",7,0)
 ;
"RTN","IBDF5B",8,0)
 ;If IBBLK and IBBLK2 are used to point to two copies, one copy for editing and the other in case 'undo' is needed
"RTN","IBDF5B",9,0)
 ; 
"RTN","IBDF5B",10,0)
 N IBBLK,IBVALMBG,TOP1,TOP2,BOT1,BOT2,IBBLK2,IBTKODR,IBJUNK,IFSAVE,WDATA
"RTN","IBDF5B",11,0)
 ;N IBMEMARY
"RTN","IBDF5B",12,0)
 ;
"RTN","IBDF5B",13,0)
 S IBVALMBG=VALMBG
"RTN","IBDF5B",14,0)
 D FULL^VALM1
"RTN","IBDF5B",15,0)
 S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,IOSL,"HEADER") ;select the block
"RTN","IBDF5B",16,0)
 I IBBLK D
"RTN","IBDF5B",17,0)
 .D KILL^IBDFUA
"RTN","IBDF5B",18,0)
 .S (IBBLK2,IBTKODR,IBJUNK)=""
"RTN","IBDF5B",19,0)
 .S WDATA=IBPRINT("WITH_DATA")
"RTN","IBDF5B",20,0)
 .D COPYBLK(IBBLK,.IBBLK2,.IBBLK,.IBTKODR,.IBJUNK) I 'IBBLK S IBBLK=IBBLK2,IBBLK2="" Q  ;sets IBBLK to the work copy, IBBLK2 to the copy actually on the form
"RTN","IBDF5B",21,0)
 .D TOPNBOT^IBDFU5(IBBLK,.TOP1,.BOT1)
"RTN","IBDF5B",22,0)
 .D EN^VALM("IBDF FORM BLOCK EDIT") ;call list processor
"RTN","IBDF5B",23,0)
 .I IBBLK,IBBLK2 D
"RTN","IBDF5B",24,0)
 ..S IFSAVE=$$ASKSAVE
"RTN","IBDF5B",25,0)
 ..I IFSAVE D SAVECOPY(.IBBLK,.IBBLK2,IBTKODR) S IBBLK=IBBLK2,IBBLK2=""
"RTN","IBDF5B",26,0)
 ..I 'IFSAVE D DLTCOPY(IBBLK) S IBBLK=IBBLK2,IBBLK2=""
"RTN","IBDF5B",27,0)
 ..L -^IBE(357.1,IBBLK):1
"RTN","IBDF5B",28,0)
 .I '$G(IBFASTXT) D
"RTN","IBDF5B",29,0)
 ..S VALMBG=IBVALMBG
"RTN","IBDF5B",30,0)
 ..S IBPRINT("WITH_DATA")=WDATA
"RTN","IBDF5B",31,0)
 ..D TOPNBOT^IBDFU5(IBBLK,.TOP2,.BOT2)
"RTN","IBDF5B",32,0)
 ..S TOP1=$S(TOP1<TOP2:TOP1,1:TOP2),BOT1=$S(BOT1>BOT2:BOT1,1:BOT2)
"RTN","IBDF5B",33,0)
 ..D IDXFORM^IBDF5A(TOP1,BOT1)
"RTN","IBDF5B",34,0)
 K ^TMP("IBDF DELETE SELECTION OPTION",$J),^TMP("IBDF DELETED ALL SELECTIONS",$J),^TMP("IBDF ADDSLCTN",$J)
"RTN","IBDF5B",35,0)
 S VALMBCK="R"
"RTN","IBDF5B",36,0)
 Q
"RTN","IBDF5B",37,0)
DLTCOPY(WORKCOPY) ;deletes the block=WORKCOPY and unlocks it
"RTN","IBDF5B",38,0)
 D DLTBLK^IBDFU3(WORKCOPY,IBJUNK,357.1)
"RTN","IBDF5B",39,0)
 L -^IBE(357.1,WORKCOPY)
"RTN","IBDF5B",40,0)
 S WORKCOPY=""
"RTN","IBDF5B",41,0)
 Q
"RTN","IBDF5B",42,0)
SAVECOPY(WORKCOPY,FORMCOPY,IBTKODR) ;deletes the block=FORMCOPY,adds WORKCOPY to IBFORM
"RTN","IBDF5B",43,0)
 ;NOTE: upon completion WORKCOPY="",FORMCOPY points to what WORKCOPY initially did
"RTN","IBDF5B",44,0)
 N IBDN,IBDX,IBD9,IBD10,IBDBL
"RTN","IBDF5B",45,0)
 Q:('FORMCOPY)!('WORKCOPY)  ;something wrong!
"RTN","IBDF5B",46,0)
 ;
"RTN","IBDF5B",47,0)
 K DIE,DA,DR S DIE="^IBE(357.1,",DA=WORKCOPY,DR=".02////"_IBFORM
"RTN","IBDF5B",48,0)
 I IBTKODR S DR=DR_";.14////"_IBTKODR
"RTN","IBDF5B",49,0)
 D ^DIE K DIE,DR,DA
"RTN","IBDF5B",50,0)
 ;
"RTN","IBDF5B",51,0)
 ;In order to be able to update history, first check to see if there is any Selection List which is either ICD-9 or ICD-10
"RTN","IBDF5B",52,0)
 S (IBD9,IBD10)=0
"RTN","IBDF5B",53,0)
 ;FORMCOPY at this time is actually the Work Copy block, WORKCOPY is the new block
"RTN","IBDF5B",54,0)
 ;Check to see if any List contains ICD-9 or ICD-10 existed prior this change
"RTN","IBDF5B",55,0)
 S IBDN="" F  S IBDN=$O(^IBE(357.2,"C",FORMCOPY,IBDN)) Q:IBDN=""  S IBDX=$P($G(^IBE(357.2,IBDN,0)),U,11) I IBDX?1.N S IBDX=$E($P($G(^IBE(357.6,IBDX,0)),U,1),1,30) D
"RTN","IBDF5B",56,0)
 .I '$D(^TMP("IBDF DELETED ALL SELECTIONS",$J)),'$O(^IBE(357.3,"C",IBDN,"")) Q  ;Only log history fields if ICD-9 or ICD-10 codes are contained in block.
"RTN","IBDF5B",57,0)
 .I IBDX="DG SELECT ICD-9 DIAGNOSIS CODE" S IBD9=1
"RTN","IBDF5B",58,0)
 .I IBDX="DG SELECT ICD-10 DIAGNOSIS COD" S IBD10=1
"RTN","IBDF5B",59,0)
 ;
"RTN","IBDF5B",60,0)
 ;Now check for any Data Fields with ICD-9 or ICD-10 inputs
"RTN","IBDF5B",61,0)
 S IBDN=0 F  S IBDN=$O(^IBE(357.1,FORMCOPY,"B",IBDN)) Q:IBDN'?1.N  D
"RTN","IBDF5B",62,0)
 .S IBDX=$P(^IBE(357.1,FORMCOPY,"B",IBDN,0),U,3) I IBDX?1.N S IBDX=$E($P($G(^IBE(357.6,IBDX,0)),U,1),1,30) D
"RTN","IBDF5B",63,0)
 ..I IBDX="INPUT DIAGNOSIS CODE (ICD9)" S IBD9=1
"RTN","IBDF5B",64,0)
 ..I IBDX="INPUT DIAGNOSIS CODE (ICD10)" S IBD10=1
"RTN","IBDF5B",65,0)
 ;
"RTN","IBDF5B",66,0)
 D DLTBLK^IBDFU3(FORMCOPY,IBFORM,357.1)
"RTN","IBDF5B",67,0)
 D UNCMPL^IBDF19(IBFORM,0)
"RTN","IBDF5B",68,0)
 L -^IBE(357.1,FORMCOPY)
"RTN","IBDF5B",69,0)
 S FORMCOPY=WORKCOPY,WORKCOPY=""
"RTN","IBDF5B",70,0)
 ;
"RTN","IBDF5B",71,0)
 ;Check to see if any List contains ICD-9 or ICD-10 existed after the change
"RTN","IBDF5B",72,0)
 S IBDQUIT=0
"RTN","IBDF5B",73,0)
 S IBDN="" F  S IBDN=$O(^IBE(357.2,"C",FORMCOPY,IBDN)) Q:IBDN=""!(IBDQUIT)  S IBDX=$P($G(^IBE(357.2,IBDN,0)),U,11) I IBDX?1.N S IBDX=$E($P($G(^IBE(357.6,IBDX,0)),U,1),1,30) D
"RTN","IBDF5B",74,0)
 .I '$D(^TMP("IBDF DELETED ALL SELECTIONS",$J)),'$O(^IBE(357.3,"C",IBDN,"")) S IBDQUIT=1 Q  ;Only log history fields if ICD-9 or ICD-10 codes are contained in block.
"RTN","IBDF5B",75,0)
 .I IBDX="DG SELECT ICD-9 DIAGNOSIS CODE" S IBD9=1
"RTN","IBDF5B",76,0)
 .I IBDX="DG SELECT ICD-10 DIAGNOSIS COD" S IBD10=1
"RTN","IBDF5B",77,0)
 ;
"RTN","IBDF5B",78,0)
 Q:IBDQUIT  ;Do not update history fields if ICD-9 or ICD-10 codes are not contained within the block.
"RTN","IBDF5B",79,0)
 ;
"RTN","IBDF5B",80,0)
 ;Now check for any Data Fields with ICD-9 or ICD-10 inputs
"RTN","IBDF5B",81,0)
 S IBDN=0 F  S IBDN=$O(^IBE(357.1,FORMCOPY,"B",IBDN)) Q:IBDN'?1.N  D
"RTN","IBDF5B",82,0)
 .S IBDX=$P(^IBE(357.1,FORMCOPY,"B",IBDN,0),U,3) I IBDX?1.N S IBDX=$E($P($G(^IBE(357.6,IBDX,0)),U,1),1,30) D
"RTN","IBDF5B",83,0)
 ..I IBDX="INPUT DIAGNOSIS CODE (ICD9)" S IBD9=1
"RTN","IBDF5B",84,0)
 ..I IBDX="INPUT DIAGNOSIS CODE (ICD10)" S IBD10=1
"RTN","IBDF5B",85,0)
 ;
"RTN","IBDF5B",86,0)
 ;Now update history if ICD-9 or ICD-10 was present before or after the change
"RTN","IBDF5B",87,0)
 N IBDX
"RTN","IBDF5B",88,0)
 I IBD9 S IBDX=$$CSUPD357^IBDUTICD(IBFORM,1,"",$$NOW^XLFDT(),DUZ)
"RTN","IBDF5B",89,0)
 I IBD10 S IBDX=$$CSUPD357^IBDUTICD(IBFORM,30,"",$$NOW^XLFDT(),DUZ)
"RTN","IBDF5B",90,0)
 Q
"RTN","IBDF5B",91,0)
 ;
"RTN","IBDF5B",92,0)
COPYBLK(IBBLK,FORMCOPY,WORKCOPY,IBTKODR,IBJUNK) ;copies the IBBLK to the WORKCOPY, then puts sets FORMCOPY=IBBLK
"RTN","IBDF5B",93,0)
 ;IBJUNK set to the form="WORKCOPY", IBTKODR set to the original value of the field TOOL KIT ORDER
"RTN","IBDF5B",94,0)
 ;
"RTN","IBDF5B",95,0)
 N NODE
"RTN","IBDF5B",96,0)
 S WORKCOPY=IBBLK,FORMCOPY=""
"RTN","IBDF5B",97,0)
 Q:'IBBLK  ;no block to copy!
"RTN","IBDF5B",98,0)
 S NODE=$G(^IBE(357.1,IBBLK,0))
"RTN","IBDF5B",99,0)
 S IBTKODR=$P(NODE,"^",14)
"RTN","IBDF5B",100,0)
 ;find the form=WORKCOPY, used as a work area
"RTN","IBDF5B",101,0)
 S IBJUNK=+$O(^IBE(357,"B","WORKCOPY",""))
"RTN","IBDF5B",102,0)
 ;copy the block
"RTN","IBDF5B",103,0)
 S FORMCOPY=$$COPYBLK^IBDFU2(IBBLK,IBFORM,357.1,357.1)
"RTN","IBDF5B",104,0)
 I 'FORMCOPY W !,"Unable to edit the block!" D PAUSE^IBDFU5 S FORMCOPY=IBBLK Q
"RTN","IBDF5B",105,0)
 ;
"RTN","IBDF5B",106,0)
 ;make sure both copies are locked
"RTN","IBDF5B",107,0)
 ;the working copy on IBJUNK is locked so that the option does cleanup knows which blocks are in current use - others on IBJUNK can be deleted
"RTN","IBDF5B",108,0)
 L +^IBE(357.1,FORMCOPY):1
"RTN","IBDF5B",109,0)
 L +^IBE(357.1,WORKCOPY):1
"RTN","IBDF5B",110,0)
 ;
"RTN","IBDF5B",111,0)
 ;mark the working copy as not being in the tk and not on IBFORM
"RTN","IBDF5B",112,0)
 K DIE,DA,DR S DIE="^IBE(357.1,",DA=WORKCOPY,DR=".02////"_IBJUNK_";.14////0"
"RTN","IBDF5B",113,0)
 D ^DIE K DIE,DR,DA
"RTN","IBDF5B",114,0)
 Q
"RTN","IBDF5B",115,0)
 ;
"RTN","IBDF5B",116,0)
ASKSAVE() ;asks the user if changes to the block should be saved
"RTN","IBDF5B",117,0)
 ;returns 1 for yes, 0 for no
"RTN","IBDF5B",118,0)
 K DIR S DIR(0)="Y",DIR("A")="Save changes to the block",DIR("B")="YES"
"RTN","IBDF5B",119,0)
 D ^DIR K DIR
"RTN","IBDF5B",120,0)
 Q:$D(DIRUT) 0
"RTN","IBDF5B",121,0)
 Q Y
"RTN","IBDF5B",122,0)
DECIDE ;allows user to either save or discard changes to the block being edited
"RTN","IBDF5B",123,0)
 N WHAT
"RTN","IBDF5B",124,0)
 ;
"RTN","IBDF5B",125,0)
 S WHAT=$$DOWHAT
"RTN","IBDF5B",126,0)
 I WHAT="S" D
"RTN","IBDF5B",127,0)
 .D SAVECOPY(.IBBLK,.IBBLK2,IBTKODR),COPYBLK(IBBLK2,.IBBLK2,.IBBLK,.IBTKODR,.IBJUNK) S VALMBCK="" I 'IBBLK S IBBLK=IBBLK2,IBBLK2="" S VALMBCK="Q"
"RTN","IBDF5B",128,0)
 I WHAT="D" D
"RTN","IBDF5B",129,0)
 .D DLTCOPY(IBBLK) S IBBLK=IBBLK2,IBBLK2="" D COPYBLK(IBBLK,.IBBLK2,.IBBLK,.IBTKODR,.IBJUNK)
"RTN","IBDF5B",130,0)
 .I IBBLK S VALMBCK="R" D IDXBLOCK^IBDFU4
"RTN","IBDF5B",131,0)
 .I 'IBBLK S IBBLK=IBBLK2,IBBLK2="",VALMBCK="Q"
"RTN","IBDF5B",132,0)
 Q
"RTN","IBDF5B",133,0)
 ;
"RTN","IBDF5B",134,0)
DOWHAT() ;returns "D" for discard, "S" for save, "" for do nothing
"RTN","IBDF5B",135,0)
 K DIR S DIR(0)="SB^S:Save Changes;D:Discard Changes;",DIR("A")="Save or Discard the recent changes to the block?"
"RTN","IBDF5B",136,0)
 D ^DIR K DIR
"RTN","IBDF5B",137,0)
 Q:$D(DIRUT) ""
"RTN","IBDF5B",138,0)
 Q Y
"RTN","IBDF5B",139,0)
 ;
"RTN","IBDF5B",140,0)
PRINT ;prints the form
"RTN","IBDF5B",141,0)
 ;
"RTN","IBDF5B",142,0)
 N QUIT S QUIT=0
"RTN","IBDF5B",143,0)
 S VALMBCK=""
"RTN","IBDF5B",144,0)
 I $G(IBBLK),'$G(IBTKBLK) D  Q:QUIT
"RTN","IBDF5B",145,0)
 .W !,"Before printing the form any changes you have made must be saved.",!,"Is that okay?"
"RTN","IBDF5B",146,0)
 .K DIR S DIR(0)="Y" D ^DIR  K DIR I 'Y!$D(DIRUT) S QUIT=1 QUIT
"RTN","IBDF5B",147,0)
 .D SAVECOPY(.IBBLK,.IBBLK2,IBTKODR),COPYBLK(IBBLK2,.IBBLK2,.IBBLK,.IBTKODR,.IBJUNK) S VALMBCK="" I 'IBBLK S IBBLK=IBBLK2,IBBLK2="" S VALMBCK="Q",QUIT=1
"RTN","IBDF5B",148,0)
 D:'QUIT PRINT^IBDF1C(.IBFORM)
"RTN","IBDF5B",149,0)
 Q
"RTN","IBDF5C")
0^41^B13407929^B8857181
"RTN","IBDF5C",1,0)
IBDF5C ;ALB/CJM - ENCOUNTER FORM (creating a new block) ;03/22/93
"RTN","IBDF5C",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;APR 24, 1997;Build 80
"RTN","IBDF5C",3,0)
 ;
"RTN","IBDF5C",4,0)
 ;
"RTN","IBDF5C",5,0)
NEWBLOCK ;adds a new block, expects IBFORM to be defined
"RTN","IBDF5C",6,0)
 N IBBLK,TOP,BOT
"RTN","IBDF5C",7,0)
 S VALMBCK="R"
"RTN","IBDF5C",8,0)
 S IBBLK=$$CREATE()
"RTN","IBDF5C",9,0)
 I IBBLK D
"RTN","IBDF5C",10,0)
 .D TOPNBOT^IBDFU5(IBBLK,.TOP,.BOT)
"RTN","IBDF5C",11,0)
 .D IDXFORM^IBDF5A(TOP,BOT)
"RTN","IBDF5C",12,0)
 Q
"RTN","IBDF5C",13,0)
CREATE() ;creates the new block and allows the user to edit it
"RTN","IBDF5C",14,0)
 ;INPUTS: expects IBFORM to be defined
"RTN","IBDF5C",15,0)
 ;        expects IBTKBLK to be defined - IBTKBLK=1 means add to tk
"RTN","IBDF5C",16,0)
 ;returns IBBLK
"RTN","IBDF5C",17,0)
 N NAME,IBBLK,NODE,IBDFDONE,IBBG,IBLFT,DLAYGO
"RTN","IBDF5C",18,0)
 S IBBG=1,IBLFT=5
"RTN","IBDF5C",19,0)
 S VALMBCK="R"
"RTN","IBDF5C",20,0)
 I '$G(IBTKBLK) S IBBG=+$G(VALMBG),IBLFT=+$G(VALMLFT)
"RTN","IBDF5C",21,0)
 S NAME=$$NEWNAME Q:NAME=-1 ""
"RTN","IBDF5C",22,0)
 K DIC,DIE,DD,DO,DINUM S DIC="^IBE(357.1,",DIC(0)="FL",X=NAME,DLAYGO=357.1
"RTN","IBDF5C",23,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDF5C",24,0)
 S IBBLK=+Y
"RTN","IBDF5C",25,0)
 I 'IBBLK D
"RTN","IBDF5C",26,0)
 .W !,"Unable to create a new block!" K DIC,DIE D PAUSE^IBDFU5
"RTN","IBDF5C",27,0)
 I IBBLK D
"RTN","IBDF5C",28,0)
 .;delete everything in the block - it should be empty
"RTN","IBDF5C",29,0)
 .D DLTCNTNT^IBDFU3(IBBLK,357.1)
"RTN","IBDF5C",30,0)
 .;set the current position of the block to the upper left-hand corner of the screen as the default
"RTN","IBDF5C",31,0)
 .S $P(^IBE(357.1,IBBLK,0),"^",4,5)=(IBBG-1)_"^"_(IBLFT-5)
"RTN","IBDF5C",32,0)
 .;now let the user edit the new block - header,name,outline,etc.
"RTN","IBDF5C",33,0)
 .K DIE,DA S DIE=357.1,DA=IBBLK,DR="[IBDF NEW EMPTY BLOCK]",DIE("NO^")="BACKOUTOK" D ^DIE K DIC,DIE,DR,DA
"RTN","IBDF5C",34,0)
 .I 'IBDFDONE S DIK="^IBE(357.1,",DA=IBBLK K DA(1) D ^DIK K DIK,DA Q
"RTN","IBDF5C",35,0)
 Q IBBLK
"RTN","IBDF5C",36,0)
NEWNAME() ;
"RTN","IBDF5C",37,0)
 K DIR S DIR(0)="357.1,.01A",DIR("A")="New Block Name: ",DIR("B")=""
"RTN","IBDF5C",38,0)
 D ^DIR K DIR I $D(DIRUT) Q -1
"RTN","IBDF5C",39,0)
 Q Y
"RTN","IBDF5C",40,0)
REDRAW ;redraws the ;entire form
"RTN","IBDF5C",41,0)
 S VALMBCK="R"
"RTN","IBDF5C",42,0)
 D UNCMPALL^IBDF19(IBFORM)
"RTN","IBDF5C",43,0)
 D IDXFORM^IBDF5A()
"RTN","IBDF5C",44,0)
 Q
"RTN","IBDF5C",45,0)
COPYBLK ;copies a block from another form,whether in the toolkit or not, expects IBFORM=current work form  to be defined
"RTN","IBDF5C",46,0)
 N IBBLK,TOP,BOT,NEWBLOCK,IBDLST,IBDCS,IBDX,IBDY
"RTN","IBDF5C",47,0)
 S IBBLK=$$SELECT2^IBDF13("")
"RTN","IBDF5C",48,0)
 I IBBLK S NEWBLOCK=$$COPYBLK^IBDFU2(IBBLK,IBFORM,357.1,357.1,$$CURY^IBDFU4,$$CURX^IBDFU4,0,"",1) I NEWBLOCK D
"RTN","IBDF5C",49,0)
 .D RE^VALM4
"RTN","IBDF5C",50,0)
 .D POS^IBDFU4(NEWBLOCK)
"RTN","IBDF5C",51,0)
 .D TOPNBOT^IBDFU5(NEWBLOCK,.TOP,.BOT)
"RTN","IBDF5C",52,0)
 .D IDXFORM^IBDF5A(TOP,BOT)
"RTN","IBDF5C",53,0)
 .;Now check if new block contains any selection lists that specify ICD-9 or ICD-10
"RTN","IBDF5C",54,0)
 .;if so, update history field at #357 .19 or .2 plus field .21
"RTN","IBDF5C",55,0)
 .S IBDLST=0 F  S IBDLST=$O(^IBE(357.2,"C",NEWBLOCK,IBDLST)) Q:IBDLST=""  S IBDX=$P(^IBE(357.2,IBDLST,0),U,11) D:IBDX?1.N
"RTN","IBDF5C",56,0)
 ..S IBDCS=$P(^IBE(357.6,IBDX,0),U,22) D:IBDCS=1!(IBDCS=30)  ;Coding System 1=ICD-9 30=ICD-10
"RTN","IBDF5C",57,0)
 ...I '$O(^IBE(357.3,"C",IBDLST,"")) Q  ;Only log history fields if ICD-9 or ICD-10 codes are contained in block.
"RTN","IBDF5C",58,0)
 ...S IBDY=$$CSUPD357^IBDUTICD(IBFORM,IBDCS,"",$$NOW^XLFDT(),DUZ)
"RTN","IBDF5C",59,0)
 S VALMBCK="R"
"RTN","IBDF5C",60,0)
 Q
"RTN","IBDF5C",61,0)
 ;
"RTN","IBDF5C",62,0)
VIEW ;toggles between viewing form with data and without data
"RTN","IBDF5C",63,0)
 N STARTVAL
"RTN","IBDF5C",64,0)
 S STARTVAL=IBPRINT("WITH_DATA")
"RTN","IBDF5C",65,0)
 I 'IBPRINT("WITH_DATA") D
"RTN","IBDF5C",66,0)
 .D FULL^VALM1
"RTN","IBDF5C",67,0)
 .S DFN=$$PATIENT
"RTN","IBDF5C",68,0)
 .I DFN S IBPRINT("WITH_DATA")=1 I '$G(IBAPPT) D NOW^%DTC S IBAPPT=% K %,%H,%I,X
"RTN","IBDF5C",69,0)
 E  I IBPRINT("WITH_DATA") S IBPRINT("WITH_DATA")=0
"RTN","IBDF5C",70,0)
 ;
"RTN","IBDF5C",71,0)
 ;this action could be called at the form level or the block level - action depends on which
"RTN","IBDF5C",72,0)
 I '$G(IBBLK) D
"RTN","IBDF5C",73,0)
 .I STARTVAL'=IBPRINT("WITH_DATA") D JUSTDATA^IBDF2A(IBPRINT("WITH_DATA")) K ^TMP("IB",$J,"INTERFACES")
"RTN","IBDF5C",74,0)
 I $G(IBBLK) D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF5C",75,0)
 S VALMBCK="R"
"RTN","IBDF5C",76,0)
 Q
"RTN","IBDF5C",77,0)
 ;
"RTN","IBDF5C",78,0)
PATIENT() ;asks for a patient, returns the DFN
"RTN","IBDF5C",79,0)
 K DIR S DIR(0)="P^2:EM",DIR("A")="Test with what Patient"
"RTN","IBDF5C",80,0)
 D ^DIR K DIR I $D(DIRUT)!(+Y<1) Q 0
"RTN","IBDF5C",81,0)
 Q +Y
"RTN","IBDF5D")
0^48^B9905178^B6700922
"RTN","IBDF5D",1,0)
IBDF5D ;ALB/CJM - ENCOUNTER FORM - (copy page) ;12/12/94
"RTN","IBDF5D",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;APR 24, 1997;Build 80
"RTN","IBDF5D",3,0)
 ;
"RTN","IBDF5D",4,0)
 ;
"RTN","IBDF5D",5,0)
COPYPAGE ;
"RTN","IBDF5D",6,0)
 N FROMFORM,PAGE,TOLINE,NODE,ROW,COL,BEGIN,END,QUIT,BLOCK
"RTN","IBDF5D",7,0)
 D FULL^VALM1
"RTN","IBDF5D",8,0)
 S VALMBCK="R"
"RTN","IBDF5D",9,0)
 S FROMFORM=$$SLCTFORM^IBDFU4("") Q:'FROMFORM
"RTN","IBDF5D",10,0)
 Q:'$$FORMSIZE^IBDFU1C(.FROMFORM)
"RTN","IBDF5D",11,0)
 I FROMFORM("PAGES")=1 D
"RTN","IBDF5D",12,0)
 .S BEGIN=0,END=FROMFORM("PAGE_HT")-1
"RTN","IBDF5D",13,0)
 E  D  Q:QUIT
"RTN","IBDF5D",14,0)
 .S QUIT=0
"RTN","IBDF5D",15,0)
 .K DIR S DIR(0)="N^1:"_FROMFORM("PAGES")_":0",DIR("A")="Copy Page Number",DIR("B")=1,DIR("?")="Which page do you want to copy?" D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
"RTN","IBDF5D",16,0)
 .S PAGE=Y I 'PAGE S QUIT=1 Q
"RTN","IBDF5D",17,0)
 .S BEGIN=((PAGE-1)*FROMFORM("PAGE_HT"))-1,END=(BEGIN+FROMFORM("PAGE_HT"))-1
"RTN","IBDF5D",18,0)
 K DIR S DIR(0)="N^1:"_IBFORM("HT")_":0",DIR("A")="Copy To Line Number",DIR("B")=($$CURY^IBDFU4)+1,DIR("?")="Beginning at what line should the page be pasted?" D ^DIR K DIR I 'X!$D(DIRUT) S QUIT=1 Q
"RTN","IBDF5D",19,0)
 I 'Y S QUIT=1 Q
"RTN","IBDF5D",20,0)
 S TOLINE=Y-1
"RTN","IBDF5D",21,0)
 S BLOCK=0
"RTN","IBDF5D",22,0)
 F  S BLOCK=$O(^IBE(357.1,"C",FROMFORM,BLOCK)) Q:'BLOCK  S NODE=$G(^IBE(357.1,BLOCK,0)) Q:NODE=""  S ROW=$P(NODE,"^",4),COL=$P(NODE,"^",5) D
"RTN","IBDF5D",23,0)
 .N NEWBLOCK,IBDLST,IBDX,IBDCS,IBDX,IBDY
"RTN","IBDF5D",24,0)
 .I '(ROW>END),'(ROW<BEGIN)  S NEWBLOCK=$$COPYBLK^IBDFU2(BLOCK,IBFORM,357.1,357.1,(ROW#FROMFORM("PAGE_HT"))+TOLINE,COL)
"RTN","IBDF5D",25,0)
 .;Now check if new block contains any selection lists that specify ICD-9 or ICD-10
"RTN","IBDF5D",26,0)
 .;if so, update history field at #357 .19 or .2 plus field .21
"RTN","IBDF5D",27,0)
 .S IBDLST=0 F  S IBDLST=$O(^IBE(357.2,"C",NEWBLOCK,IBDLST)) Q:IBDLST=""  S IBDX=$P(^IBE(357.2,IBDLST,0),U,11) D:IBDX?1.N
"RTN","IBDF5D",28,0)
 ..S IBDCS=$P(^IBE(357.6,IBDX,0),U,22) D:IBDCS=1!(IBDCS=30)  ;Coding System 1=ICD-9 30=ICD-10
"RTN","IBDF5D",29,0)
 ...I '$O(^IBE(357.3,"C",IBDLST,"")) Q  ;Only log history fields if ICD-9 or ICD-10 codes are contained in block.
"RTN","IBDF5D",30,0)
 ...S IBDY=$$CSUPD357^IBDUTICD(IBFORM,IBDCS,"",$$NOW^XLFDT(),DUZ)
"RTN","IBDF5D",31,0)
 D IDXFORM^IBDF5A()
"RTN","IBDF5D",32,0)
 Q
"RTN","IBDF5D",33,0)
 ;
"RTN","IBDF5D",34,0)
COPY ;ask user whether to copy a block or a page
"RTN","IBDF5D",35,0)
 S VALMBCK="R"
"RTN","IBDF5D",36,0)
 K DIR S DIR(0)="SB^P:PAGE COPY;B:BLOCK COPY;",DIR("A")="Copy an entire page or a single block?",DIR("?")="You can copy either a single block or an entire page."
"RTN","IBDF5D",37,0)
 D ^DIR K DIR I $D(DIRUT) Q
"RTN","IBDF5D",38,0)
 D:Y="P" COPYPAGE
"RTN","IBDF5D",39,0)
 D:Y="B" COPYBLK^IBDF5C
"RTN","IBDF5D",40,0)
 K DIR
"RTN","IBDF5D",41,0)
 Q
"RTN","IBDF6A")
0^42^B20397072^B15897163
"RTN","IBDF6A",1,0)
IBDF6A ;ALB/CJM - ENCOUNTER FORM - (new forms, deleting forms, adding to setup) ;01/16/93
"RTN","IBDF6A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;APR 24, 1997;Build 80
"RTN","IBDF6A",3,0)
 ;
"RTN","IBDF6A",4,0)
 ;
"RTN","IBDF6A",5,0)
DELFORM ;
"RTN","IBDF6A",6,0)
 N CLINIC,FORM,BLOCK,NOCANDO,SETUP,ARY
"RTN","IBDF6A",7,0)
 S NOCANDO=0,ARY="^TMP(""IBDF"",$J,""TEMPORARY CLINIC LIST"")"
"RTN","IBDF6A",8,0)
 K @ARY
"RTN","IBDF6A",9,0)
 D FULL^VALM1
"RTN","IBDF6A",10,0)
 S VALMBCK="R"
"RTN","IBDF6A",11,0)
 K DIC S DIC("S")="I '$P(^(0),U,7)",DIC=357,DIC(0)="AEQ",DIC("A")="Select FORM to delete: "
"RTN","IBDF6A",12,0)
 D ^DIC K DIC S FORM=+Y Q:(FORM<0)
"RTN","IBDF6A",13,0)
 D CLINICS^IBDFU4(FORM,ARY)
"RTN","IBDF6A",14,0)
 I $G(@ARY@(0)) D
"RTN","IBDF6A",15,0)
 .W !,"Cannot be deleted, the form is in use!"
"RTN","IBDF6A",16,0)
 .D LIST^IBDFU4(ARY,IOSL)
"RTN","IBDF6A",17,0)
 I '$G(@ARY@(0)) D DELETE^IBDFU2C(FORM,357,1)
"RTN","IBDF6A",18,0)
 K @ARY
"RTN","IBDF6A",19,0)
 Q
"RTN","IBDF6A",20,0)
 ;
"RTN","IBDF6A",21,0)
NEWFORM ;
"RTN","IBDF6A",22,0)
 N NAME,FORM,FLD,BLOCK,IBDELETE,IBTXTSZ,IBSCAN,IBDVR
"RTN","IBDF6A",23,0)
 S (IBTXTSZ,IBSCAN)=0
"RTN","IBDF6A",24,0)
 S VALMBCK="R"
"RTN","IBDF6A",25,0)
 S NAME=$$NEWNAME^IBDFU2C Q:NAME=""
"RTN","IBDF6A",26,0)
 D FULL^VALM1
"RTN","IBDF6A",27,0)
 K DIC,DD,DO,DINUM S DIC="^IBE(357,",DIC(0)="",X=NAME
"RTN","IBDF6A",28,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDF6A",29,0)
 S FORM=+Y
"RTN","IBDF6A",30,0)
 I FORM<0 D
"RTN","IBDF6A",31,0)
 .W !,"Unable to create a new form!" D PAUSE^IBDFU5
"RTN","IBDF6A",32,0)
 E  D
"RTN","IBDF6A",33,0)
 .K DIE,DR,DA S DIE="^IBE(357,",DR="[IBDF EDIT NEW FORM]",DA=FORM,DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
"RTN","IBDF6A",34,0)
 .I IBDELETE S DIK="^IBE(357,",DA=FORM D ^DIK K DIK,DA Q
"RTN","IBDF6A",35,0)
 .D:'IBTKFORM ADDSETUP(FORM,IBCLINIC,1)
"RTN","IBDF6A",36,0)
 .;the new form should be empty - make sure
"RTN","IBDF6A",37,0)
 .S BLOCK="" F  S BLOCK=$O(^IBE(357.1,"C",FORM,BLOCK)) Q:'BLOCK  D
"RTN","IBDF6A",38,0)
 ..I $P($G(^IBE(357.1,BLOCK,0)),"^",2)'=FORM D
"RTN","IBDF6A",39,0)
 ...K DA S DIK="^IBE(357.1,",DA=BLOCK D IX^DIK K DIK,DA
"RTN","IBDF6A",40,0)
 ..E  D DLTBLK^IBDFU3(BLOCK,FORM,357.1)
"RTN","IBDF6A",41,0)
 .X IBAPI("INDEX")
"RTN","IBDF6A",42,0)
 Q
"RTN","IBDF6A",43,0)
COPYFORM ;
"RTN","IBDF6A",44,0)
 N NAME,OLDFORM,NEWFORM,IBDELETE,IBOLD,IBSCAN,IBDFORM,IBDLST,IBDX,IBDCS,IBDY
"RTN","IBDF6A",45,0)
 D FULL^VALM1
"RTN","IBDF6A",46,0)
 S VALMBCK="R"
"RTN","IBDF6A",47,0)
 S OLDFORM=$$SLCTFORM^IBDFU4("") Q:'OLDFORM
"RTN","IBDF6A",48,0)
 S NAME=$$NEWNAME^IBDFU2C Q:NAME=""
"RTN","IBDF6A",49,0)
 S NEWFORM=$$COPYFORM^IBDFU2C(OLDFORM,357,357,NAME,0)
"RTN","IBDF6A",50,0)
 Q:'NEWFORM
"RTN","IBDF6A",51,0)
 ;
"RTN","IBDF6A",52,0)
 ;edit the form
"RTN","IBDF6A",53,0)
 S IBOLD=$S($P($G(^IBE(357,NEWFORM,0)),"^",16):0,1:1)
"RTN","IBDF6A",54,0)
 K DIE,DR,DA S DIE="^IBE(357,",DR="[IBDF EDIT OLD OR COPIED FORM]",DA=NEWFORM,DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
"RTN","IBDF6A",55,0)
 ;delete the new form if the user didn't complete the edit
"RTN","IBDF6A",56,0)
 I IBDELETE D DELETE^IBDFU2C(NEWFORM,357) Q
"RTN","IBDF6A",57,0)
 ;
"RTN","IBDF6A",58,0)
 D:'IBTKFORM ADDSETUP(NEWFORM,IBCLINIC,1)
"RTN","IBDF6A",59,0)
 X IBAPI("INDEX")
"RTN","IBDF6A",60,0)
 ;Now check if new form contains any selection lists that specify ICD-9 or ICD-10
"RTN","IBDF6A",61,0)
 ;if so, update history field at #357 .19 or .2 plus field .21
"RTN","IBDF6A",62,0)
 S IBDFORM=0 F  S IBDFORM=$O(^IBE(357.1,"C",NEWFORM,IBDFORM)) Q:IBDFORM=""  D
"RTN","IBDF6A",63,0)
 .S IBDLST=0 F  S IBDLST=$O(^IBE(357.2,"C",IBDFORM,IBDLST)) Q:IBDLST=""  S IBDX=$P(^IBE(357.2,IBDLST,0),U,11) D:IBDX?1.N
"RTN","IBDF6A",64,0)
 ..S IBDCS=$P(^IBE(357.6,IBDX,0),U,22) D:IBDCS=1!(IBDCS=30)  ;Coding System 1=ICD-9 30=ICD-10
"RTN","IBDF6A",65,0)
 ...I '$O(^IBE(357.3,"C",IBDLST,"")) Q  ;Only log history fields if ICD-9 or ICD-10 codes are contained in block.
"RTN","IBDF6A",66,0)
 ...S IBDY=$$CSUPD357^IBDUTICD(NEWFORM,IBDCS,"",$$NOW^XLFDT(),DUZ)
"RTN","IBDF6A",67,0)
 Q
"RTN","IBDF6A",68,0)
SETUP ;
"RTN","IBDF6A",69,0)
 N FORM
"RTN","IBDF6A",70,0)
 D FULL^VALM1
"RTN","IBDF6A",71,0)
 S VALMBCK="R"
"RTN","IBDF6A",72,0)
 K DIC S DIC("S")="I '$P(^(0),U,7)",DIC=357,DIC(0)="AEQ",DIC("A")="Select FORM for Clinic Setup: "
"RTN","IBDF6A",73,0)
 D ^DIC K DIC Q:($D(DTOUT)!$D(DUOUT))  S FORM=+Y Q:FORM<0
"RTN","IBDF6A",74,0)
 D ADDSETUP(FORM,IBCLINIC,0)
"RTN","IBDF6A",75,0)
 X IBAPI("INDEX")
"RTN","IBDF6A",76,0)
 Q
"RTN","IBDF6A",77,0)
ADDSETUP(FORM,IBCLINIC,NEW) ;
"RTN","IBDF6A",78,0)
 ;NEW=1 if the form was just created, 0 otherwise
"RTN","IBDF6A",79,0)
 N FLD,NODE,SETUP
"RTN","IBDF6A",80,0)
 S NEW=+$G(NEW)
"RTN","IBDF6A",81,0)
 K DA S DA=$O(^SD(409.95,"B",+$G(IBCLINIC),"")) I 'DA D
"RTN","IBDF6A",82,0)
 .K DIC,DO,DD,DINUM S DIC="^SD(409.95,",DIC(0)="",X=IBCLINIC
"RTN","IBDF6A",83,0)
 .D FILE^DICN K DIC
"RTN","IBDF6A",84,0)
 .S DA=$S(+Y<1:0,1:+Y)
"RTN","IBDF6A",85,0)
 Q:'DA
"RTN","IBDF6A",86,0)
 S SETUP=DA,NODE=$G(^SD(409.95,SETUP,0))
"RTN","IBDF6A",87,0)
 W !,"How should the clinic use the form?"
"RTN","IBDF6A",88,0)
 K DIR
"RTN","IBDF6A",89,0)
 S DIR(0)="SO^1:BASIC FORM;2:SUPPLEMENTAL FORM FOR ALL PATIENTS;3:SUPPLEMENTAL FORM FOR NEW PATIENTS;4:SUPPLEMENTAL FORM FOR ESTABLISHED PATIENTS;5:FORM TO PRINT WITHOUT PATIENT DATA;6:RESERVED FOR FUTURE USE;"
"RTN","IBDF6A",90,0)
 S:NEW DIR(0)=DIR(0)_"7:WILL NOT BE USED BY CLINIC;"
"RTN","IBDF6A",91,0)
 D ^DIR K DIR
"RTN","IBDF6A",92,0)
 I (Y=-1)!(Y=7)!$D(DIRUT) Q
"RTN","IBDF6A",93,0)
 S:Y'=2 FLD=$S(Y=1:.02,Y=3:.04,Y=4:.03,Y=5:.05,Y=6:.07,1:0)
"RTN","IBDF6A",94,0)
 S:Y=2 FLD=$S('$P(NODE,"^",6):.06,'$P(NODE,"^",8):.08,1:.09)
"RTN","IBDF6A",95,0)
 Q:'FLD
"RTN","IBDF6A",96,0)
 I $P($G(^SD(409.95,DA,0)),"^",(100*FLD)) Q:'$$OVERLAY
"RTN","IBDF6A",97,0)
 K DIE,DR S DIE=409.95
"RTN","IBDF6A",98,0)
 S DR=FLD_"////"_FORM D ^DIE K DIE,DR,DA
"RTN","IBDF6A",99,0)
 Q
"RTN","IBDF6A",100,0)
OVERLAY() ;asks the user if the he wants to overlay the form already used for the clinic setup
"RTN","IBDF6A",101,0)
 W !,"But you already have a form for that use!"
"RTN","IBDF6A",102,0)
 K DIR S DIR(0)="Y",DIR("A")="Do you want to replace it"
"RTN","IBDF6A",103,0)
 D ^DIR K DIR
"RTN","IBDF6A",104,0)
 Q:$D(DIRUT) 0
"RTN","IBDF6A",105,0)
 Q Y
"RTN","IBDF7")
0^25^B8201139^B5091202
"RTN","IBDF7",1,0)
IBDF7 ;ALB/CJM - ENCOUNTER FORM - BUILD FORM(ADDING TOOLKIT BLKS) ;01/08/93
"RTN","IBDF7",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;APR 24, 1997;Build 80
"RTN","IBDF7",3,0)
 ;
"RTN","IBDF7",4,0)
 ;
"RTN","IBDF7",5,0)
ADD ;create a new block by copying a toolkit block
"RTN","IBDF7",6,0)
 N BLKLIST,OLDBLOCK,NEWBLOCK,TOP,BOT,IBBG,IBLFT,IBDLST,IBDCS,IBDX,IBDY
"RTN","IBDF7",7,0)
 S VALMBCK="R",IBBG=+$G(VALMBG),OLDBLOCK="",IBLFT=+$G(VALMLFT)
"RTN","IBDF7",8,0)
 D EN^VALM("IBDF TOOL KIT BLOCK LIST") ;list processor displays list of tool kit blocks
"RTN","IBDF7",9,0)
 I '$G(IBFASTXT) D
"RTN","IBDF7",10,0)
 .S VALMBG=IBBG S:VALMBG<1 VALMBG=1
"RTN","IBDF7",11,0)
 .Q:OLDBLOCK=""  ;selected tool kit block stored in OLDBLOCK
"RTN","IBDF7",12,0)
 .S NEWBLOCK=$$COPYBLK^IBDFU2(OLDBLOCK,IBFORM,357.1,357.1,IBBG-1,IBLFT-5,0,"",1)
"RTN","IBDF7",13,0)
 .D RE^VALM4,POS^IBDFU4(NEWBLOCK)
"RTN","IBDF7",14,0)
 .S VALMBCK="R"
"RTN","IBDF7",15,0)
 .D TOPNBOT^IBDFU5(NEWBLOCK,.TOP,.BOT)
"RTN","IBDF7",16,0)
 .D IDXFORM^IBDF5A(TOP,BOT)
"RTN","IBDF7",17,0)
 .;Now check if new block contains any selection lists that specify ICD-9 or ICD-10
"RTN","IBDF7",18,0)
 .;if so, update history field at #357 .19 or .2 plus field .21
"RTN","IBDF7",19,0)
 .S IBDLST=0 F  S IBDLST=$O(^IBE(357.2,"C",NEWBLOCK,IBDLST)) Q:IBDLST=""  S IBDX=$P(^IBE(357.2,IBDLST,0),U,11) D:IBDX?1.N
"RTN","IBDF7",20,0)
 ..S IBDCS=$P(^IBE(357.6,IBDX,0),U,22) D:IBDCS=1!(IBDCS=30)  ;Coding System 1=ICD-9 30=ICD-10
"RTN","IBDF7",21,0)
 ...I '$O(^IBE(357.3,"C",IBDLST,"")) Q  ;Only log history fields if ICD-9 or ICD-10 codes are contained in block.
"RTN","IBDF7",22,0)
 ...S IBDY=$$CSUPD357^IBDUTICD(IBFORM,IBDCS,"",$$NOW^XLFDT(),DUZ)
"RTN","IBDF7",23,0)
 Q
"RTN","IBDF7",24,0)
 ;
"RTN","IBDF7",25,0)
INIT ;entry code to list
"RTN","IBDF7",26,0)
 S BLKLIST="^TMP(""IBDF"",$J,""TOOL KIT BLOCK LIST"")"
"RTN","IBDF7",27,0)
 D IDXBLKS
"RTN","IBDF7",28,0)
 Q
"RTN","IBDF7",29,0)
HELP ; -- help code
"RTN","IBDF7",30,0)
 S X="?" D DISP^XQORM1 W !
"RTN","IBDF7",31,0)
 Q
"RTN","IBDF7",32,0)
 ;
"RTN","IBDF7",33,0)
EXIT ; -- exit code
"RTN","IBDF7",34,0)
 K @BLKLIST
"RTN","IBDF7",35,0)
 Q
"RTN","IBDF7",36,0)
 ;
"RTN","IBDF7",37,0)
IDXBLKS ; sets up list of toolkit blocks for list processor
"RTN","IBDF7",38,0)
 N BLOCK,TK
"RTN","IBDF7",39,0)
 K @BLKLIST
"RTN","IBDF7",40,0)
 S VALMCNT=0
"RTN","IBDF7",41,0)
 S TK=0,BLOCK="" F  S TK=$O(^IBE(357.1,"D",TK)) Q:'TK  F  S BLOCK=$O(^IBE(357.1,"D",TK,BLOCK)) Q:'BLOCK  D
"RTN","IBDF7",42,0)
 .Q:'$P($G(^IBE(357.1,BLOCK,0)),"^",14)
"RTN","IBDF7",43,0)
 .S VALMCNT=VALMCNT+1
"RTN","IBDF7",44,0)
 .S @BLKLIST@(VALMCNT,0)=$$DISPLAY(BLOCK,VALMCNT,TK),@BLKLIST@("IDX",VALMCNT,VALMCNT)=BLOCK
"RTN","IBDF7",45,0)
 .D FLDCTRL^VALM10(VALMCNT,"ID") ;set video for ID column
"RTN","IBDF7",46,0)
 Q
"RTN","IBDF7",47,0)
 ;
"RTN","IBDF7",48,0)
DISPLAY(BLOCK,ID,TKORDER) ;adds one toolkit block to the list array
"RTN","IBDF7",49,0)
 N NODE,NAME,DESCR,RET
"RTN","IBDF7",50,0)
 ;** note: IBTKBLK=1 only if editing the tool kit blocks - display the tool kit order in that case
"RTN","IBDF7",51,0)
 S RET=$J(ID,3)_$$PADRIGHT^IBDFU("",2)
"RTN","IBDF7",52,0)
 S NODE=$G(^IBE(357.1,BLOCK,0))
"RTN","IBDF7",53,0)
 S NAME=$P(NODE,"^",1),DESCR=$P(NODE,"^",13)
"RTN","IBDF7",54,0)
 S RET=RET_$$PADRIGHT^IBDFU(NAME,30)_" "
"RTN","IBDF7",55,0)
 I $G(IBTKBLK) S RET=RET_$E($J(TKORDER,4),1,4)_"  "
"RTN","IBDF7",56,0)
 S RET=RET_$E(DESCR,1,80)
"RTN","IBDF7",57,0)
 Q RET
"RTN","IBDF7",58,0)
SELECT ;
"RTN","IBDF7",59,0)
 N CHOICE
"RTN","IBDF7",60,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","IBDF7",61,0)
 S CHOICE=$O(VALMY("")) Q:'CHOICE  S OLDBLOCK=$G(@VALMAR@("IDX",CHOICE,CHOICE))
"RTN","IBDF7",62,0)
 Q
"RTN","IBDF9A1")
0^26^B20739240^B20396325
"RTN","IBDF9A1",1,0)
IBDF9A1 ;ALB/CJM - ENCOUNTER FORM - (create,edit,delete selection list - continued) ;02/01/93
"RTN","IBDF9A1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;APR 24, 1997;Build 80
"RTN","IBDF9A1",3,0)
 ;
"RTN","IBDF9A1",4,0)
 ;
"RTN","IBDF9A1",5,0)
NEWLIST ;creates a new list
"RTN","IBDF9A1",6,0)
 ;expects IBBLK to be defined
"RTN","IBDF9A1",7,0)
 N IBLIST,IBLEN,IBP,IBRTN,NAME,IBDELETE,IBDYN,IBINPUT,IBDFLTF,IBDFLTB,IBDFLTL,IBDX,IBDCS,IBDPI
"RTN","IBDF9A1",8,0)
 S (IBDFLTF,IBDFLTB,IBDFLTL,IBOLD,IBLIST)=0,VALMBCK="R"
"RTN","IBDF9A1",9,0)
 D FULL^VALM1
"RTN","IBDF9A1",10,0)
 S IBRTN=$$RTN^IBDF9A Q:'IBRTN
"RTN","IBDF9A1",11,0)
 S IBDFLTF=$$DFLTS^IBDFU5 D:IBDFLTF
"RTN","IBDF9A1",12,0)
 .S IBDFLTB=0 F  S IBDFLTB=$O(^IBE(357.1,"C",IBDFLTF,IBDFLTB)) Q:'IBDFLTB  D  Q:IBDFLTL
"RTN","IBDF9A1",13,0)
 ..S IBDFLTL=0 F  S IBDFLTL=$O(^IBE(357.2,"C",IBDFLTB,IBDFLTL)) Q:'IBDFLTL  Q:$P($G(^IBE(357.2,IBDFLTL,0)),"^",11)=IBRTN
"RTN","IBDF9A1",14,0)
 I IBDFLTL D  Q:IBLIST
"RTN","IBDF9A1",15,0)
 .S IBLIST=$$COPYLIST^IBDFU2(IBDFLTL,IBDFLTB,IBBLK,357.2,357.2)
"RTN","IBDF9A1",16,0)
 .Q:'IBLIST
"RTN","IBDF9A1",17,0)
 .K DIE,DA,DR S DIE=357.2,DA=IBLIST,DR="[IBDF POSITION/SIZE COLUMNS]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
"RTN","IBDF9A1",18,0)
 .S VALMBCK="R" D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9A1",19,0)
 S NAME=$$NEWNAME^IBDF9A Q:NAME=-1
"RTN","IBDF9A1",20,0)
 K DIC,DIE,DD,DO,DINUM,DA
"RTN","IBDF9A1",21,0)
 N DLAYGO
"RTN","IBDF9A1",22,0)
 S DIC="^IBE(357.2,",DIC(0)="FL",X=NAME,DLAYGO=357.2
"RTN","IBDF9A1",23,0)
 D FILE^DICN K DIC,DA
"RTN","IBDF9A1",24,0)
 S IBLIST=$S(+Y<0:"",1:+Y)
"RTN","IBDF9A1",25,0)
 I 'IBLIST D
"RTN","IBDF9A1",26,0)
 .W !,"Unable to create a new selection list!" D PAUSE^IBDFU5
"RTN","IBDF9A1",27,0)
 I IBLIST D
"RTN","IBDF9A1",28,0)
 .D DLISTCNT^IBDFU3(IBLIST,357.2) ;deletes anything that may have been left lying around that now points to IBLIST
"RTN","IBDF9A1",29,0)
 .K DIE,DA,DR S DIE=357.2,DA=IBLIST,DR="[IBDF EDIT SELECTION LIST]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
"RTN","IBDF9A1",30,0)
 .I IBDELETE K DA S DIK="^IBE(357.2,",DA=IBLIST D ^DIK K DIK,DA
"RTN","IBDF9A1",31,0)
 .I IBLIST,'IBDELETE D ADDGROUP("BLANK",0)
"RTN","IBDF9A1",32,0)
 .D UNCMPBLK^IBDF19(IBBLK),IDXBLOCK^IBDFU4
"RTN","IBDF9A1",33,0)
 S VALMBCK="R"
"RTN","IBDF9A1",34,0)
 Q
"RTN","IBDF9A1",35,0)
ADDGROUP(NAME,ORDER) ;adds a group to the selection list=IBLIST
"RTN","IBDF9A1",36,0)
 N GROUP
"RTN","IBDF9A1",37,0)
 K DIC,DIE,DD,DO,DINUM,DA
"RTN","IBDF9A1",38,0)
 N DLAYGO
"RTN","IBDF9A1",39,0)
 S DIC="^IBE(357.4,",DIC(0)="FL",X=NAME,DLAYGO=357.4
"RTN","IBDF9A1",40,0)
 D FILE^DICN K DIC,DA
"RTN","IBDF9A1",41,0)
 S GROUP=$S(+Y<0:"",1:+Y)
"RTN","IBDF9A1",42,0)
 I GROUP D
"RTN","IBDF9A1",43,0)
 .S NODE=$G(^IBE(357.4,GROUP,0)) S $P(NODE,"^",2)=ORDER,$P(NODE,"^",3)=IBLIST S ^IBE(357.4,GROUP,0)=NODE
"RTN","IBDF9A1",44,0)
 .S DIK="^IBE(357.4,",DA=GROUP D IX1^DIK K DIK,DA
"RTN","IBDF9A1",45,0)
 Q
"RTN","IBDF9A1",46,0)
 ;
"RTN","IBDF9A1",47,0)
FORMAT ;allows the user to format all of the selections on the list in mass
"RTN","IBDF9A1",48,0)
 ;
"RTN","IBDF9A1",49,0)
 ;
"RTN","IBDF9A1",50,0)
 ;TYPE = type of formatting - U=upper case,L=lower case,C=capitalize
"RTN","IBDF9A1",51,0)
 ;SUBCOL is the subcolumn to format
"RTN","IBDF9A1",52,0)
 ;
"RTN","IBDF9A1",53,0)
 N TYPE,SUBCOL,SLCTN
"RTN","IBDF9A1",54,0)
 ;
"RTN","IBDF9A1",55,0)
 ;ask for the subcolumn to format
"RTN","IBDF9A1",56,0)
 S SUBCOL=$$SUBCOL
"RTN","IBDF9A1",57,0)
 ;
"RTN","IBDF9A1",58,0)
 ;ask for the type of formatting
"RTN","IBDF9A1",59,0)
 S TYPE=$S(SUBCOL:$$TYPE,1:"")
"RTN","IBDF9A1",60,0)
 ;
"RTN","IBDF9A1",61,0)
 ;find all the sections to be formatted and do so
"RTN","IBDF9A1",62,0)
 I TYPE'="",SUBCOL S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"C",IBLIST,SLCTN)) Q:'SLCTN  D:$P($G(^IBE(357.3,SLCTN,0)),"^",3)=IBLIST CHANGE(SLCTN,SUBCOL,TYPE)
"RTN","IBDF9A1",63,0)
 ;
"RTN","IBDF9A1",64,0)
 S VALMBCK="R"
"RTN","IBDF9A1",65,0)
 Q
"RTN","IBDF9A1",66,0)
 ;
"RTN","IBDF9A1",67,0)
FORMAT2 ;allows the user to format all of the selections in the group in mass
"RTN","IBDF9A1",68,0)
 ;
"RTN","IBDF9A1",69,0)
 ;
"RTN","IBDF9A1",70,0)
 ;TYPE = type of formatting - U=upper case,L=lower case,C=capitalize
"RTN","IBDF9A1",71,0)
 ;SUBCOL is the subcolumn to format
"RTN","IBDF9A1",72,0)
 ;
"RTN","IBDF9A1",73,0)
 N TYPE,SUBCOL,SLCTN
"RTN","IBDF9A1",74,0)
 ;
"RTN","IBDF9A1",75,0)
 ;ask for the subcolumn to format
"RTN","IBDF9A1",76,0)
 S SUBCOL=$$SUBCOL
"RTN","IBDF9A1",77,0)
 ;
"RTN","IBDF9A1",78,0)
 ;ask for the type of formatting
"RTN","IBDF9A1",79,0)
 S TYPE=$S(SUBCOL:$$TYPE,1:"")
"RTN","IBDF9A1",80,0)
 ;
"RTN","IBDF9A1",81,0)
 ;find all the sections to be formatted and do so
"RTN","IBDF9A1",82,0)
 I TYPE'="",SUBCOL S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"D",IBGRP,SLCTN)) Q:'SLCTN  D:$P($G(^IBE(357.3,SLCTN,0)),"^",4)=IBGRP CHANGE(SLCTN,SUBCOL,TYPE)
"RTN","IBDF9A1",83,0)
 ;
"RTN","IBDF9A1",84,0)
 D IDXSLCTN^IBDF4
"RTN","IBDF9A1",85,0)
 S VALMBCK="R"
"RTN","IBDF9A1",86,0)
 Q
"RTN","IBDF9A1",87,0)
 ;
"RTN","IBDF9A1",88,0)
TYPE() ;ask the user what type of formatting
"RTN","IBDF9A1",89,0)
 N TYPE S TYPE=""
"RTN","IBDF9A1",90,0)
 K DIR S DIR(0)="SOB^UPPERCASE:U;LOWERCASE:L;CAPITALIZE:C"
"RTN","IBDF9A1",91,0)
 S DIR("A")="Select the type of formatting",DIR("B")="C"
"RTN","IBDF9A1",92,0)
 D ^DIR K DIR
"RTN","IBDF9A1",93,0)
 I '$D(DIRUT),Y'=-1 S TYPE=Y
"RTN","IBDF9A1",94,0)
 Q $E(TYPE,1)
"RTN","IBDF9A1",95,0)
 ;
"RTN","IBDF9A1",96,0)
CHANGE(SLCTN,SUBCOL,TYPE) ;
"RTN","IBDF9A1",97,0)
 ;
"RTN","IBDF9A1",98,0)
 N DA,NODE,STR
"RTN","IBDF9A1",99,0)
 S DA=$O(^IBE(357.3,SLCTN,1,"B",SUBCOL,0))
"RTN","IBDF9A1",100,0)
 Q:'DA
"RTN","IBDF9A1",101,0)
 S NODE=$G(^IBE(357.3,SLCTN,1,DA,0))
"RTN","IBDF9A1",102,0)
 S STR=$P(NODE,"^",2)
"RTN","IBDF9A1",103,0)
 D:$L(STR)
"RTN","IBDF9A1",104,0)
 .I TYPE="U" S STR=$$UP^XLFSTR(STR)
"RTN","IBDF9A1",105,0)
 .I TYPE="L" S STR=$$LOW^XLFSTR(STR)
"RTN","IBDF9A1",106,0)
 .I TYPE="C" S STR=$$CAPS(STR)
"RTN","IBDF9A1",107,0)
 .S $P(^IBE(357.3,SLCTN,1,DA,0),"^",2)=STR
"RTN","IBDF9A1",108,0)
 Q
"RTN","IBDF9A1",109,0)
 ;
"RTN","IBDF9A1",110,0)
CAPS(STR) ;returns STR with each word in it capitalized
"RTN","IBDF9A1",111,0)
 N FIRST,I,CHAR,LEN
"RTN","IBDF9A1",112,0)
 S FIRST=1,LEN=$L(STR)
"RTN","IBDF9A1",113,0)
 F I=1:1 S CHAR=$E(STR,I) Q:CHAR=""  D
"RTN","IBDF9A1",114,0)
 .I CHAR?1A,FIRST D
"RTN","IBDF9A1",115,0)
 ..S FIRST=0,CHAR=$$UP^XLFSTR(CHAR)
"RTN","IBDF9A1",116,0)
 .E  I CHAR?1A D
"RTN","IBDF9A1",117,0)
 ..S CHAR=$$LOW^XLFSTR(CHAR)
"RTN","IBDF9A1",118,0)
 .E  S FIRST=1
"RTN","IBDF9A1",119,0)
 .S STR=$E(STR,1,I-1)_CHAR_$E(STR,I+1,LEN)
"RTN","IBDF9A1",120,0)
 Q STR
"RTN","IBDF9A1",121,0)
 ;
"RTN","IBDF9A1",122,0)
SUBCOL() ;ask what subcolumn to format
"RTN","IBDF9A1",123,0)
 ;SCLIST - used to record the subcolumns that can be formatted - each digit will signify a subcolumn
"RTN","IBDF9A1",124,0)
 ;
"RTN","IBDF9A1",125,0)
 N SCLIST,NODE,SUBCOL,ANS
"RTN","IBDF9A1",126,0)
 ;first get the list of subcolumns that can be formatted
"RTN","IBDF9A1",127,0)
 S SCLIST="",SUBCOL=0
"RTN","IBDF9A1",128,0)
 F  S SUBCOL=$O(IBLIST("SCTYPE",SUBCOL)) Q:'SUBCOL  I $G(IBLIST("SCW",SUBCOL)),IBLIST("SCTYPE",SUBCOL)=1,IBLIST("SCEDITABLE",SUBCOL) S SCLIST=SCLIST_","_SUBCOL
"RTN","IBDF9A1",129,0)
 ;if there is at most one subcolumn that can be edited return that
"RTN","IBDF9A1",130,0)
 I $L(SCLIST)<3 Q $E(SCLIST,2)
"RTN","IBDF9A1",131,0)
 ;
"RTN","IBDF9A1",132,0)
 ;now ask what subcolumn to format
"RTN","IBDF9A1",133,0)
AGAIN W !,"What subcolumn do you want formatted? Choose from (",$E(SCLIST,2,10),"): "
"RTN","IBDF9A1",134,0)
 R ANS:DTIME
"RTN","IBDF9A1",135,0)
 I '$T!(ANS["^") Q ""
"RTN","IBDF9A1",136,0)
 I ANS?1N,SCLIST[ANS Q ANS
"RTN","IBDF9A1",137,0)
 G AGAIN
"RTN","IBDF9A1",138,0)
 Q ANS
"RTN","IBDFDE1")
0^30^B57533893^B55163756
"RTN","IBDFDE1",1,0)
IBDFDE1 ;ALB/AAS - AICS Data Entry, Final check; 2/24/96 [ 11/12/96  2:12 PM ]
"RTN","IBDFDE1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**38,36,63**;APR 24, 1997;Build 80
"RTN","IBDFDE1",3,0)
 ;
"RTN","IBDFDE1",4,0)
 ;
"RTN","IBDFDE1",5,0)
 ; -- calls IBDFRPC4 to pass data to pce
"RTN","IBDFDE1",6,0)
 ;
"RTN","IBDFDE1",7,0)
% G ^IBDFDE
"RTN","IBDFDE1",8,0)
 ;
"RTN","IBDFDE1",9,0)
FINAL ; -- display everything selected and check okay
"RTN","IBDFDE1",10,0)
 ; -- input IBDSEL :
"RTN","IBDFDE1",11,0)
 ;             $p1 := package interface ien (for input)
"RTN","IBDFDE1",12,0)
 ;             $p2 := code to send (may be internal or external)
"RTN","IBDFDE1",13,0)
 ;             $p3 := text to send
"RTN","IBDFDE1",14,0)
 ;             $p4 := hdr to send (optional)
"RTN","IBDFDE1",15,0)
 ;             $p5 := clinic lexicon pointer (optional) 
"RTN","IBDFDE1",16,0)
 ;             $p6 := qualifier (i.e. primary or secondary)
"RTN","IBDFDE1",17,0)
 ;             $P7 :=
"RTN","IBDFDE1",18,0)
 ;             $p8 :=
"RTN","IBDFDE1",19,0)
 ;             $p9 :=
"RTN","IBDFDE1",20,0)
 ;             $p10 := external value of code (optional)
"RTN","IBDFDE1",21,0)
 ;
"RTN","IBDFDE1",22,0)
 N I,X,DIR,DIRUT,DUOUT,DTOUT,PARAM,IBDCNT,MODSAVE,XX
"RTN","IBDFDE1",23,0)
 K IBDREDIT
"RTN","IBDFDE1",24,0)
 I $G(IBDSEL(0))<1,$G(IBDCO("CO"))="",$G(IBDCO("SC"))="",$G(IBDCO("AO"))="",$G(IBDCO("IR"))="",$G(IBDCO("EC"))="",$G(IBDCO("MST"))="" W !!,"Nothing Selected!!" S IBDF("NOTHING")=1 Q
"RTN","IBDFDE1",25,0)
 ;
"RTN","IBDFDE1",26,0)
 S (IBDCNT,IBQUIT)=0
"RTN","IBDFDE1",27,0)
 W !!,"You have entered the following:"
"RTN","IBDFDE1",28,0)
 D WRITE^IBDFDE0(IBDF("SDOE"),.IBDCNT)
"RTN","IBDFDE1",29,0)
 S I=0 F  S I=$O(IBDSEL(I)) Q:I=""  D
"RTN","IBDFDE1",30,0)
 . S IBDCNT=IBDCNT+1
"RTN","IBDFDE1",31,0)
 . K MODSAVE
"RTN","IBDFDE1",32,0)
 . D LINE(IBDCNT,IBDSEL(I)) D
"RTN","IBDFDE1",33,0)
 .. I $D(IBDSEL(I,"MODIFIER")) D MODLIST(I)
"RTN","IBDFDE1",34,0)
 S DIR(0)="Y",DIR("B")="No",DIR("A")="Is this Okay" D ^DIR
"RTN","IBDFDE1",35,0)
 I $D(DIRUT) S IBQUIT=1 W !!,"No action Taken",! G FINALQ
"RTN","IBDFDE1",36,0)
 I Y<1 D DEL S:'IBQUIT IBDREDIT=1 G FINALQ
"RTN","IBDFDE1",37,0)
 I Y'=1 G FINALQ
"RTN","IBDFDE1",38,0)
 M IBDF=IBDSEL
"RTN","IBDFDE1",39,0)
 ;I $G(^DPT(DFN,"S",IBDF("APPT"),0))="" D FNDAPPT I 'IBDOK W !!,"No action Taken",! Q
"RTN","IBDFDE1",40,0)
 I $G(IBDF("SAVE")) M ^TMP("IBD-SAVED",$J)=IBDF ;don't save checkout data
"RTN","IBDFDE1",41,0)
 M IBDF=IBDCO
"RTN","IBDFDE1",42,0)
 W !!,"Sending Data to PCE..."
"RTN","IBDFDE1",43,0)
 D SEND^IBDFRPC4(.RESULT,.IBDF)
"RTN","IBDFDE1",44,0)
 W $S($G(RESULT(0)):" Successful",1:" Unsuccessful"),!!
"RTN","IBDFDE1",45,0)
 I $D(IBDSTRT) S IBDFIN=$H S IBDTIME=$$HDIFF^XLFDT(IBDFIN,IBDSTRT,2)
"RTN","IBDFDE1",46,0)
 S PARAM=$P($G(^IBD(357.09,1,0)),"^",7)
"RTN","IBDFDE1",47,0)
 I PARAM=3 D DISP
"RTN","IBDFDE1",48,0)
 I PARAM,$D(PXCA("ERROR"))!($D(PXCA("WARNING"))) D ERR
"RTN","IBDFDE1",49,0)
 I $G(IBDTIME) D
"RTN","IBDFDE1",50,0)
 .W !!,"Elapsed time for data entry: ",IBDTIME," seconds.",!!
"RTN","IBDFDE1",51,0)
 .S IBDF("SECONDS")=IBDTIME,IBDF("USER")=DUZ
"RTN","IBDFDE1",52,0)
 .D ETIME^IBDFBK1(.RESULT,.IBDF)
"RTN","IBDFDE1",53,0)
 I '$G(IBDREDIT),$P($G(^IBD(357.09,1,0)),"^",6) D MAKAPPT
"RTN","IBDFDE1",54,0)
FINALQ K SDFN,ZTSK,SECONDS,LEX,ORVP,SEL1,PXCAVSIT,PXCA,PXCASTAT
"RTN","IBDFDE1",55,0)
 Q
"RTN","IBDFDE1",56,0)
 ;
"RTN","IBDFDE1",57,0)
DEL ; -- delete selected entry
"RTN","IBDFDE1",58,0)
 N I,J,DIR,DIRUT,DUOUT,DTOUT,CNT,CNTD,IBD,IBD1,IBDEL
"RTN","IBDFDE1",59,0)
 S CNT=0
"RTN","IBDFDE1",60,0)
 W !
"RTN","IBDFDE1",61,0)
 S DIR(0)="Y",DIR("B")="No",DIR("A")="Do you want to delete an item"
"RTN","IBDFDE1",62,0)
 S DIR("?")="Enter 'Yes' if you want to delete an item or 'No' to just add more items."
"RTN","IBDFDE1",63,0)
 D ^DIR K DIR
"RTN","IBDFDE1",64,0)
 I $D(DIRUT) S IBQUIT=1 Q
"RTN","IBDFDE1",65,0)
 Q:Y<1
"RTN","IBDFDE1",66,0)
 S IBD=0 F  S IBD=$O(IBDSEL(IBD)) Q:IBD=""  S CNT=CNT+1,IBDEL(CNT)=IBD D LINE(CNT,IBDSEL(IBD)) D
"RTN","IBDFDE1",67,0)
 . I $D(IBDSEL(IBD,"MODIFIER")) D MODLIST(IBD)
"RTN","IBDFDE1",68,0)
 Q:CNT<1
"RTN","IBDFDE1",69,0)
 S DIR(0)="L^1:"_CNT D ^DIR K DIR
"RTN","IBDFDE1",70,0)
 I $D(DIRUT) W !,"Nothing Deleted" Q
"RTN","IBDFDE1",71,0)
 F IBD1=1:1 S IBDEL=$P(Y,",",IBD1) Q:IBDEL=""  D
"RTN","IBDFDE1",72,0)
 .W !,"Deleting "_IBDEL
"RTN","IBDFDE1",73,0)
 .S QLFR=$P(IBDSEL(IBDEL(IBDEL)),"^",6)
"RTN","IBDFDE1",74,0)
 .I QLFR'="" K IBDPI(+IBDSEL(IBDEL(IBDEL)),QLFR)
"RTN","IBDFDE1",75,0)
 .K IBDPI(+IBDSEL(IBDEL(IBDEL)),IBDEL(IBDEL))
"RTN","IBDFDE1",76,0)
 .K IBDSEL(IBDEL(IBDEL))
"RTN","IBDFDE1",77,0)
 .K IBDEL(IBDEL)
"RTN","IBDFDE1",78,0)
 .S CNTD=$G(CNTD)+1
"RTN","IBDFDE1",79,0)
 I $G(CNTD)=CNT S IBDSEL(0)=0
"RTN","IBDFDE1",80,0)
 W !
"RTN","IBDFDE1",81,0)
DELQ Q
"RTN","IBDFDE1",82,0)
 ;
"RTN","IBDFDE1",83,0)
LINE(CNT,IBD) ; -- write one line of text
"RTN","IBDFDE1",84,0)
 W !,?3,CNT,?7,$S($P(IBD,"^",8)'="":$P(IBD,"^",8),1:$E($P($P($G(^IBE(357.6,+IBD,0)),"^"),"INPUT ",2),1,22)),?31,$E($P(IBD,"^",3),1,30)
"RTN","IBDFDE1",85,0)
 W ?62,$S($P(IBD,"^",10)'="":$P(IBD,"^",10),$P($G(^IBE(357.6,+IBD,0)),"^")="GMP INPUT CLINIC COMMON PROBLEMS":$$LEX($P(IBD,"^",2)),1:$P(IBD,"^",2))
"RTN","IBDFDE1",86,0)
 W ?70,$E($S($P(IBD,"^",9)'="":$P(IBD,"^",9),1:$P(IBD,"^",6)),1,10)
"RTN","IBDFDE1",87,0)
 S SLCTN=$P(IBD,"^",12) I SLCTN'="" D
"RTN","IBDFDE1",88,0)
 . ;list modifiers
"RTN","IBDFDE1",89,0)
 . N CODE
"RTN","IBDFDE1",90,0)
 . Q:'$D(^IBE(357.3,SLCTN,3))
"RTN","IBDFDE1",91,0)
 . S CODE=$P($G(^IBE(357.3,SLCTN,0)),"^") Q:CODE=""
"RTN","IBDFDE1",92,0)
 . W !?11,"Associated Modifier(s):    "
"RTN","IBDFDE1",93,0)
 . S MOD=0 F  S MOD=$O(^IBE(357.3,SLCTN,3,MOD)) Q:'MOD  D
"RTN","IBDFDE1",94,0)
 .. S MODSAVE=$P($G(^IBE(357.3,SLCTN,3,MOD,0)),"^")
"RTN","IBDFDE1",95,0)
 .. S MODSAVE(MODSAVE)=""
"RTN","IBDFDE1",96,0)
 .. S XX=$P($$MODP^ICPTMOD(CODE,MODSAVE,"E"),"^",2)
"RTN","IBDFDE1",97,0)
 .. W !,?15,MODSAVE,?20,XX
"RTN","IBDFDE1",98,0)
 Q
"RTN","IBDFDE1",99,0)
 ;
"RTN","IBDFDE1",100,0)
MODLIST(I) ; -- list modifiers if in array
"RTN","IBDFDE1",101,0)
 ;
"RTN","IBDFDE1",102,0)
 W !?11,"Selected during Data Entry Modifier(s):    "
"RTN","IBDFDE1",103,0)
 N CODE
"RTN","IBDFDE1",104,0)
 S CODE=$P($G(IBDSEL(I)),"^",2)
"RTN","IBDFDE1",105,0)
 S MOD=0 F  S MOD=$O(IBDSEL(I,"MODIFIER",MOD)) Q:'MOD  D
"RTN","IBDFDE1",106,0)
 .; --quitting if duplicate entry
"RTN","IBDFDE1",107,0)
 . Q:$D(MODSAVE(IBDSEL(I,"MODIFIER",MOD)))
"RTN","IBDFDE1",108,0)
 . S MODSAVE=IBDSEL(I,"MODIFIER",MOD)
"RTN","IBDFDE1",109,0)
 . S XX=$P($$MODP^ICPTMOD(CODE,MODSAVE,"E"),"^",2)
"RTN","IBDFDE1",110,0)
 . W !,?15,MODSAVE,?20,XX
"RTN","IBDFDE1",111,0)
 Q
"RTN","IBDFDE1",112,0)
LEX(VAL) ; -- get output of lexicon entry
"RTN","IBDFDE1",113,0)
 N IBDIMP,IBDIBX
"RTN","IBDFDE1",114,0)
 S IBDIMP=$$IMPDATE^IBDUTICD(30)
"RTN","IBDFDE1",115,0)
 S IBDIBX=799.9
"RTN","IBDFDE1",116,0)
 I DT'<IBDIMP S IBDIBX="R69."
"RTN","IBDFDE1",117,0)
 I $D(^LEX)>1 S X="LEXU" X ^%ZOSF("TEST") I $T S VAL=$$ICDONE^LEXU(VAL) S:$L(VAL)<1 VAL=IBDIBX Q VAL  ;clinical lexicon next version to be in ^LEX
"RTN","IBDFDE1",118,0)
 S X="GMPTU" X ^%ZOSF("TEST") I $T S VAL=$$ICDONE^GMPTU(VAL) S:$L(VAL)<1 VAL=IBDIBX Q VAL
"RTN","IBDFDE1",119,0)
 Q IBDIBX
"RTN","IBDFDE1",120,0)
 ;
"RTN","IBDFDE1",121,0)
MAKAPPT ; -- ask make appointment stuff
"RTN","IBDFDE1",122,0)
 N %I,%T,I,J,X,Y,DIC,DA,DIR,DIRUT,DUOUT,IBDFN,RTCLEX,SDALLE,SDATD,SDAV,SDCLN,SDDECOD,SDEC,SDEMP,SDFN,SDHX,SDLOCK,SDMADE,SDNOT,SDOEL,SDPL,SDRE,SDRT,SDSOH,SDT,SDTTM,SDY,VSITON,VSIT,XQXFLG
"RTN","IBDFDE1",123,0)
 ;
"RTN","IBDFDE1",124,0)
 I $G(IBDF("NOAPPT")) G MAKAPQ
"RTN","IBDFDE1",125,0)
 S DIR("?")="Enter 'Yes' to make another appointment for this patient or 'No' if no appointment is to be made."
"RTN","IBDFDE1",126,0)
 S DIR(0)="Y",DIR("A")="Do you wish to make a follow-up appointment for "_$P(^DPT(IBDF("DFN"),0),"^")
"RTN","IBDFDE1",127,0)
 D ^DIR K DIR
"RTN","IBDFDE1",128,0)
 I $D(DUOUT)!($D(DTOUT)) S IBQUIT=1 G MAKAPQ
"RTN","IBDFDE1",129,0)
 I Y<1 G MAKAPQ
"RTN","IBDFDE1",130,0)
 ;
"RTN","IBDFDE1",131,0)
 S (SDFN,IBDFN,DFN)=$G(IBDF("DFN")) ;use same patient, don't ask patient, ask clinic
"RTN","IBDFDE1",132,0)
 ;S SDCLN=IBDF("CLINIC") ;use same clinic, don't ask clinic
"RTN","IBDFDE1",133,0)
 D ^SDM
"RTN","IBDFDE1",134,0)
 S DFN=IBDFN K SDFN
"RTN","IBDFDE1",135,0)
MAKAPQ Q
"RTN","IBDFDE1",136,0)
 ;
"RTN","IBDFDE1",137,0)
ERR ; -- if processing of errors is on do display
"RTN","IBDFDE1",138,0)
 ;    ask if want to re-edit
"RTN","IBDFDE1",139,0)
 N I,J,ERR,LCNT,DIR,DIRUT,DUOUT
"RTN","IBDFDE1",140,0)
 S LCNT=0
"RTN","IBDFDE1",141,0)
 D EW^IBDFBK2(.ERR,.PXCA,.LCNT)
"RTN","IBDFDE1",142,0)
 ;
"RTN","IBDFDE1",143,0)
 W !!!,"The following Error(s) occurred while validating data in PCE for: ",$P($G(^DPT(IBDF("DFN"),0)),"^")
"RTN","IBDFDE1",144,0)
 S I=0 F  S I=$O(ERR(I)) Q:'I  W !?4,$E(ERR(I),1,75)  I $L(ERR(I))>75 W !?10,$E(ERR(I),76,140)
"RTN","IBDFDE1",145,0)
 W !
"RTN","IBDFDE1",146,0)
 Q:$G(IBDF("SAVE"))
"RTN","IBDFDE1",147,0)
 S DIR(0)="Y",DIR("B")="Yes",DIR("A")="Do you want to Re-Edit"
"RTN","IBDFDE1",148,0)
 D ^DIR K DIR
"RTN","IBDFDE1",149,0)
 I Y=1 D
"RTN","IBDFDE1",150,0)
 .S IBDREDIT=1
"RTN","IBDFDE1",151,0)
 .K IBDF("CO"),IBDF("IR"),IBDF("SC"),IBDF("EC"),IBDF("AO"),IBDF("MST")
"RTN","IBDFDE1",152,0)
 .S I=0 F  S I=$O(IBDF(I)) Q:'I  K IBDF(I)
"RTN","IBDFDE1",153,0)
 I $D(DIRUT) S IBQUIT=1
"RTN","IBDFDE1",154,0)
 Q
"RTN","IBDFDE1",155,0)
 ;
"RTN","IBDFDE1",156,0)
DISP ; -- display data based on pxca array
"RTN","IBDFDE1",157,0)
 N I,LST,LCNT
"RTN","IBDFDE1",158,0)
 S LCNT=0
"RTN","IBDFDE1",159,0)
 D LSTDATA^IBDFBK3(.LST,.PXCA,.LCNT)
"RTN","IBDFDE1",160,0)
 W !!!,"The following data was sent to PCE for: ",$P($G(^DPT(IBDF("DFN"),0)),"^")
"RTN","IBDFDE1",161,0)
 W !,?4,"Clinic: ",$P($G(^SC(+$P($G(PXCA("ENCOUNTER")),"^",3),0)),"^")," at ",$$FMTE^XLFDT(+$G(PXCA("ENCOUNTER")))
"RTN","IBDFDE1",162,0)
 S I=0 F  S I=$O(LST(I)) Q:'I  W !?4,$E(LST(I),1,75) I $L(LST(I))>75 W !?10,$E(LST(I),76,140)
"RTN","IBDFDE1",163,0)
 W !
"RTN","IBDFDE1",164,0)
 Q
"RTN","IBDFDE1",165,0)
 ;
"RTN","IBDFDE1",166,0)
FNDAPPT ; -- if form is not associated with an appointment see any in clinic
"RTN","IBDFDE1",167,0)
 I $G(IBDSAEOK) S IBDOK=1 G FNDQ
"RTN","IBDFDE1",168,0)
 N IBDI,IBDJ,X,NODE,CNT,IOINHI,IOINORM,NEWAPPT,CLNAM,FORMLST,DIR,DIRUT,DUOUT,DTOUT
"RTN","IBDFDE1",169,0)
 S X="IOINHI;IOINORM" D ENDR^%ZISS
"RTN","IBDFDE1",170,0)
 S IBDI=$E(IBDF("APPT"),1,7),IBDJ=IBDI+.24,CNT=0
"RTN","IBDFDE1",171,0)
 F  S IBDI=$O(^DPT(DFN,"S",IBDI)) Q:'IBDI!(IBDI>IBDJ)  D  G:CNT<1 FNDQ
"RTN","IBDFDE1",172,0)
 .S NODE=$G(^DPT(DFN,"S",IBDI,0))
"RTN","IBDFDE1",173,0)
 .Q:+NODE'=IBDF("CLINIC")
"RTN","IBDFDE1",174,0)
 .S CNT=CNT+1,CLNAM=$E($P(^SC(IBDF("CLINIC"),0),"^"),1,20),NEWAPPT(CNT)=IBDI
"RTN","IBDFDE1",175,0)
 .I CNT=1 W $C(7),!!,IOINHI,"Warning:","  You are about to create a stand alone visit for: ",IOINORM,!,$E($P(^DPT(DFN,0),"^"),1,25),?27,CLNAM,?49,$$FMTE^XLFDT(IBDF("APPT"))
"RTN","IBDFDE1",176,0)
 .S FORMLST=$$FINDID^IBDF18C(DFN,IBDI,"",1)
"RTN","IBDFDE1",177,0)
 .W !,IOINHI,"Patient has appointment in ",CLNAM,?49,$$FMTE^XLFDT(IBDI)," ID: ",$TR($E(FORMLST,1,($L(FORMLST)-1)),"^",","),IOINORM
"RTN","IBDFDE1",178,0)
 ;
"RTN","IBDFDE1",179,0)
 W ! S IBDOK=$$ASKYN^IBDFDE0("Okay to Create Stand Alone Encounter",0) W !
"RTN","IBDFDE1",180,0)
 I $G(IBDOK)<0 S IBDOK=0
"RTN","IBDFDE1",181,0)
 G:IBDOK FNDQ
"RTN","IBDFDE1",182,0)
 ;
"RTN","IBDFDE1",183,0)
 ; -- ask if want to use appt. date time
"RTN","IBDFDE1",184,0)
 I CNT=1 D
"RTN","IBDFDE1",185,0)
 .S IBDOK=$$ASKYN^IBDFDE0("Okay to use "_$$FMTE^XLFDT(NEWAPPT(1))_" appointment date/time",1) W !
"RTN","IBDFDE1",186,0)
 .I $G(IBDOK)<0 S IBDOK=0
"RTN","IBDFDE1",187,0)
 .I IBDOK S IBDF("APPT")=NEWAPPT(1)
"RTN","IBDFDE1",188,0)
 ;
"RTN","IBDFDE1",189,0)
 I CNT>1 D
"RTN","IBDFDE1",190,0)
 .S DIR("A")=""
"RTN","IBDFDE1",191,0)
 .S DIR(0)=""
"RTN","IBDFDE1",192,0)
FNDQ Q
"RTN","IBDFDE2")
0^6^B50446438^B50073672
"RTN","IBDFDE2",1,0)
IBDFDE2 ;ALB/AAS - AICS Data Entry, process selection lists ;02/24/96
"RTN","IBDFDE2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**4,63**;APR 24, 1997;Build 80
"RTN","IBDFDE2",3,0)
 ;
"RTN","IBDFDE2",4,0)
 ;
"RTN","IBDFDE2",5,0)
% G ^IBDFDE
"RTN","IBDFDE2",6,0)
 ;
"RTN","IBDFDE2",7,0)
CHOICE(I) ; -- return ^tmp(ibd-lst,ibdfmien,ibdf(pi),ibdf(ien),i)
"RTN","IBDFDE2",8,0)
 Q $G(^TMP("IBD-LST",$J,+$G(IBDFMIEN),+$G(IBDF("PI")),+$G(IBDF("IEN")),+$G(I)))
"RTN","IBDFDE2",9,0)
 ;
"RTN","IBDFDE2",10,0)
LIST(RESULT,IBDF,IBDASK) ; -- Procedure
"RTN","IBDFDE2",11,0)
 ; -- Manual Data entry routine for Visit Type input
"RTN","IBDFDE2",12,0)
 ;    Input :  Result := call by reference, used to output results
"RTN","IBDFDE2",13,0)
 ;             IBDF("IEN")    := pointer to selection list (357.2)
"RTN","IBDFDE2",14,0)
 ;             IBDF("PI")     := pointer to input package interface
"RTN","IBDFDE2",15,0)
 ;             IBDF("DFN")    := pointer to patient (required for dynamic lists only)
"RTN","IBDFDE2",16,0)
 ;             IBDF("CLINIC") := pointer to hospital location (required for dynamic lists only)
"RTN","IBDFDE2",17,0)
 ;
"RTN","IBDFDE2",18,0)
 ;    Output:  Selections for input in IBDFDE1 (and eventually IBDFRPC4)
"RTN","IBDFDE2",19,0)
 ;             RESULT(0)      := count of selections (including previous)
"RTN","IBDFDE2",20,0)
 ;             RESULT(n)  $p1 := package interface
"RTN","IBDFDE2",21,0)
 ;                        $p2 := Code to send (usually ien) 
"RTN","IBDFDE2",22,0)
 ;                        $p3 := Text to send (from form or additional text) 
"RTN","IBDFDE2",23,0)
 ;                        $p4 := Header to send (from form) (optional)
"RTN","IBDFDE2",24,0)
 ;                        $p5 := Clinical lexicon pointer (from 357.2) (optional)
"RTN","IBDFDE2",25,0)
 ;                        $p6 := qualifier (optional)
"RTN","IBDFDE2",26,0)
 ;                        $p7 := ien of list (in 357.2)
"RTN","IBDFDE2",27,0)
 ;                       $p10 := external value (optional)
"RTN","IBDFDE2",28,0)
 ;
"RTN","IBDFDE2",29,0)
 N I,J,X,Y,CHOICE,RULE,ROW,QLFR,TEXT,TEXTU,CODE,NUMBER,OVER,SELECT,ANS,DISPTXT,HDR,NEXT,NEXT1,PICK,DA,DR,DIE,DIC,DIR,DIRUT,DUOUT,DTOUT,IBDEFLT,CNTH,OVER,IBDP,SELAST,IOINHI,IOINORM,ARRAY,VAR
"RTN","IBDFDE2",30,0)
 S X="IOINHI;IOINORM" D ENDR^%ZISS
"RTN","IBDFDE2",31,0)
 S IBQUIT=0,ANS=""
"RTN","IBDFDE2",32,0)
 I IBDF("TYPE")="MC" D MULT^IBDFDE4(.RESULT,.IBDF) G VSTQ
"RTN","IBDFDE2",33,0)
 ;
"RTN","IBDFDE2",34,0)
 ; -- check required variables
"RTN","IBDFDE2",35,0)
 I '$D(IBDFMIEN)!('$D(IBDF("PI")))!('$D(IBDF("IEN"))) W !!,"Required variables not defined for this list:",!,"Form =",$G(IBDFMIEN),!,"Interface = ",$G(IBDF("PI")),!,"List = ",$G(IBDF("IEN")) G VSTQ
"RTN","IBDFDE2",36,0)
 ;
"RTN","IBDFDE2",37,0)
 S VAR="^TMP(""IBD-LST"",$J,"_+$G(IBDFMIEN)_","_+$G(IBDF("PI"))_","_+$G(IBDF("IEN"))_")"
"RTN","IBDFDE2",38,0)
 I $$CHOICE(0)="" D OBJLST^IBDFRPC1(VAR,.IBDF) D COMPLST^IBDFDE5
"RTN","IBDFDE2",39,0)
 ;
"RTN","IBDFDE2",40,0)
 I '$D(^TMP("IBD-ASK",$J,IBDFMIEN,IBDASK)),$G(IBDF("IBDF")) S ^TMP("IBD-ASK",$J,IBDFMIEN,$$UP^XLFSTR(IBDASK),IBDF("IBDF"))=""
"RTN","IBDFDE2",41,0)
 ;
"RTN","IBDFDE2",42,0)
 I +$$CHOICE(0)<1,+$G(IBDF("PROVIDER PI"))'=IBDF("PI") G VSTQ ;list is empty, don't ask, unless its provider
"RTN","IBDFDE2",43,0)
 ;
"RTN","IBDFDE2",44,0)
 ; -- look at zero node, find qualifiers and selection rule
"RTN","IBDFDE2",45,0)
 D RULES^IBDFDE22
"RTN","IBDFDE2",46,0)
 ;
"RTN","IBDFDE2",47,0)
 I $G(IBDREDIT) S ANS=" " D CHK^IBDFDE22 S ANS="" G:'OVER VSTQ N IBDREDIT
"RTN","IBDFDE2",48,0)
 ;
"RTN","IBDFDE2",49,0)
 ; -- set dir("b")
"RTN","IBDFDE2",50,0)
 I $D(IBDPI(IBDF("PI")))>1 D DEFAULT^IBDFDE21
"RTN","IBDFDE2",51,0)
 ;
"RTN","IBDFDE2",52,0)
OVER ; -- ask or re-ask for selection(s) from list
"RTN","IBDFDE2",53,0)
 S OVER=0
"RTN","IBDFDE2",54,0)
 S CNTH=1,I=0 F  S I=$O(RULE(I)) Q:'I  D
"RTN","IBDFDE2",55,0)
 . IF RULE(I)=0 S DIR("?",CNTH)="Any Number of "_$G(IOINHI)_QLFR(I)_$S(QLFR(I)'="":" ",1:"")_IBDASK_$G(IOINORM)_" allowed (including zero)." S CNTH=CNTH+1 Q
"RTN","IBDFDE2",56,0)
 . IF RULE(I)=1 S DIR("?",CNTH)="Exactly one "_IOINHI_QLFR(I)_$S(QLFR(I)'="":" ",1:"")_IBDASK_$G(IOINORM)_" Required." S CNTH=CNTH+1 Q
"RTN","IBDFDE2",57,0)
 . IF RULE(I)=2 S DIR("?",CNTH)="At most one "_$G(IOINHI)_QLFR(I)_$S(QLFR(I)'="":" ",1:"")_IBDASK_$G(IOINORM)_" allowed." S CNTH=CNTH+1 Q
"RTN","IBDFDE2",58,0)
 . IF RULE(I)=3 S DIR("?",CNTH)="At least 1 (1 or more) "_$G(IOINHI)_QLFR(I)_$S(QLFR(I)'="":" ",1:"")_IBDASK_$G(IOINORM)_" Required." S CNTH=CNTH+1 Q
"RTN","IBDFDE2",59,0)
 ;
"RTN","IBDFDE2",60,0)
 S DIR("?",CNTH)="",CNTH=CNTH+1
"RTN","IBDFDE2",61,0)
 S DIR("?")="Select an item from the form, enter by name or number.  Enter '??' to see the list of items on the form.  When editing, press enter to accept, '@' to delete, or enter a new selection."
"RTN","IBDFDE2",62,0)
 I $G(IBDF("OTHER")) S DIR("?")=DIR("?")_"  Or enter an item written on the form."
"RTN","IBDFDE2",63,0)
 ;
"RTN","IBDFDE2",64,0)
 S DIR("??")="^D LST^IBDFDE21"
"RTN","IBDFDE2",65,0)
 ;
"RTN","IBDFDE2",66,0)
 ; -- default provider is 1st provider
"RTN","IBDFDE2",67,0)
 I +$G(IBDF("PROVIDER PI"))=IBDF("PI") D  I $G(SELECT) D SEL^IBDFDE21(SELECT),CHK^IBDFDE22 K IBNAQLFR G VSTOVER
"RTN","IBDFDE2",68,0)
 .S SELECT=0
"RTN","IBDFDE2",69,0)
 .I $G(IBDF("PROVIDER")) Q
"RTN","IBDFDE2",70,0)
 .I '$G(IBDREDIT),'$D(IBDPI(IBDF("PI"))),+$$CHOICE(0)=1,+$$PRDEF^IBDFRPC3(IBDF("CLINIC")) S ANS=" ",SELECT=1 W !!,IOINHI,"Using Default Provider : "_IBDPTPRI,IOINORM S IBNAQLFR=1 Q
"RTN","IBDFDE2",71,0)
 .Q:$P(IBDF("PROVIDER PI"),"^",2)  ;not on form don't ask if not default
"RTN","IBDFDE2",72,0)
 .Q:$D(IBDPI(IBDF("PI")))  ;one already select
"RTN","IBDFDE2",73,0)
 .I $$PRDEF^IBDFRPC3(IBDF("CLINIC")) S DIR("B")=$P($$CHOICE(1),"^")
"RTN","IBDFDE2",74,0)
 ;
"RTN","IBDFDE2",75,0)
 S DIR(0)="FO^1:40^I $D(X),X="" "" K X W !!,$G(IOINHI),""Spacebar Return Not allowed!"",$G(IOINORM)"
"RTN","IBDFDE2",76,0)
 S DIR("A")="Select "_$G(IBDASK)
"RTN","IBDFDE2",77,0)
 I $G(^TMP("IBD-PI-CNT",$J,IBDF("PI")))>1 S DIR("A")=DIR("A")_" (Page "_IBDF("PAGE")_")"
"RTN","IBDFDE2",78,0)
 D ^DIR K DIR
"RTN","IBDFDE2",79,0)
 I $G(IBDEFLT(IBDF("PI")))'="",Y=IBDEFLT(IBDF("PI")) S Y="" ; on re-edit, accepting last entry same as entering nothing.
"RTN","IBDFDE2",80,0)
 S ANS=$$UP^XLFSTR(Y)
"RTN","IBDFDE2",81,0)
 I ANS="",$D(DIRUT),$G(IBDEFLT(IBDF("PI")))'="",$G(SELAST) K IBDPI(IBDF("PI"),SELAST),IBDSEL(SELAST) W "  Deleted!" ;user type "@" at prompt
"RTN","IBDFDE2",82,0)
 I ANS="" D CHK^IBDFDE22 G VSTOVER
"RTN","IBDFDE2",83,0)
 I ANS["^",ANS'="^" D  G VSTOVER
"RTN","IBDFDE2",84,0)
 .S GOTO=$$UP^XLFSTR($P(ANS,"^",2))
"RTN","IBDFDE2",85,0)
 .I GOTO="?"!(GOTO="??") X "W !!,""Valid Blocks to Jump to: "" S IBDX=0 F  S IBDX=$O(^TMP(""IBD-ASK"",$J,IBDFMIEN,IBDX)) Q:IBDX=""""  W !,?6,IBDX" S OVER=1 Q
"RTN","IBDFDE2",86,0)
 .S X=$O(^TMP("IBD-ASK",$J,IBDFMIEN,GOTO))
"RTN","IBDFDE2",87,0)
 .I X'="",X[GOTO W $E(X,$L(GOTO)+1,$L(X)) S IBDF("GOTO")=+$O(^TMP("IBD-ASK",$J,IBDFMIEN,X,""))-1,IBDREDIT=1 Q
"RTN","IBDFDE2",88,0)
 .S IBQUIT=1
"RTN","IBDFDE2",89,0)
 I $D(DIRUT) S IBQUIT=1 G VSTQ
"RTN","IBDFDE2",90,0)
 S SELECT=0
"RTN","IBDFDE2",91,0)
 ;
"RTN","IBDFDE2",92,0)
 ; -- first check for exact code matches
"RTN","IBDFDE2",93,0)
 I $G(NUMBER(ANS)) S SELECT=$G(NUMBER(ANS)) D SEL^IBDFDE21(SELECT),CHK^IBDFDE22 G VSTOVER
"RTN","IBDFDE2",94,0)
 ;
"RTN","IBDFDE2",95,0)
 S ARRAY="^TMP(""IBD-LCODE"",$J,IBDFMIEN,IBDF(""PI""),IBDF(""IEN""))"
"RTN","IBDFDE2",96,0)
 I $G(@ARRAY@(" "_ANS,1)),'$O(@ARRAY@(" "_ANS,1)) S SELECT=@ARRAY@(" "_ANS,1) D SEL^IBDFDE21(SELECT),CHK^IBDFDE22 G VSTOVER
"RTN","IBDFDE2",97,0)
 I $G(@ARRAY@(" "_ANS,1)) D  I $G(SELECT) D SEL^IBDFDE21(SELECT),CHK^IBDFDE22 G VSTOVER
"RTN","IBDFDE2",98,0)
 .; -- more than one code the same number
"RTN","IBDFDE2",99,0)
 .S SELECT=$$PARTLST^IBDFDE21(ARRAY," "_ANS," "_ANS)
"RTN","IBDFDE2",100,0)
 ;
"RTN","IBDFDE2",101,0)
 ; -- next check for partial code answers
"RTN","IBDFDE2",102,0)
 S ANS1=" "_ANS
"RTN","IBDFDE2",103,0)
 S NEXT=$O(@ARRAY@(ANS1)) D  I SELECT D SEL^IBDFDE21(SELECT),CHK^IBDFDE22 G VSTOVER
"RTN","IBDFDE2",104,0)
 .Q:NEXT=""!($E(NEXT,1,$L(ANS1))'=ANS1)
"RTN","IBDFDE2",105,0)
 .I $O(@ARRAY@(NEXT,1)) S SELECT=$$PARTLST^IBDFDE21(ARRAY,NEXT,ANS1) Q
"RTN","IBDFDE2",106,0)
 .S NEXT1=$O(@ARRAY@(NEXT)) I $E(NEXT1,1,$L(ANS1))=ANS1 S SELECT=$$PARTLST^IBDFDE21(ARRAY,NEXT,ANS1) Q  ;Not Unique answer
"RTN","IBDFDE2",107,0)
 .W $E(NEXT,($L(ANS1)+1),$L(NEXT))
"RTN","IBDFDE2",108,0)
 .S SELECT=$G(@ARRAY@(NEXT,1))
"RTN","IBDFDE2",109,0)
 ;
"RTN","IBDFDE2",110,0)
 ; -- check for exact text matches
"RTN","IBDFDE2",111,0)
 S ARRAY="^TMP(""IBD-LTEXT"",$J,IBDFMIEN,IBDF(""PI""),IBDF(""IEN""))"
"RTN","IBDFDE2",112,0)
 I $G(@ARRAY@(ANS,1)),'$O(@ARRAY@(ANS,1)) S SELECT=@ARRAY@(ANS,1)  D SEL^IBDFDE21(SELECT),CHK^IBDFDE22 G VSTOVER
"RTN","IBDFDE2",113,0)
 I $G(@ARRAY@(ANS,1)) D  I $G(SELECT) D SEL^IBDFDE21(SELECT),CHK^IBDFDE22 G VSTOVER
"RTN","IBDFDE2",114,0)
 .; -- more than one description the same
"RTN","IBDFDE2",115,0)
 .S SELECT=$$PARTLST^IBDFDE21(ARRAY,ANS,ANS)
"RTN","IBDFDE2",116,0)
 ;
"RTN","IBDFDE2",117,0)
 ; -- next check for partial text answers
"RTN","IBDFDE2",118,0)
 S NEXT=$O(@ARRAY@(ANS)) D  I SELECT D SEL^IBDFDE21(SELECT),CHK^IBDFDE22 G VSTOVER
"RTN","IBDFDE2",119,0)
 .Q:NEXT=""!($E(NEXT,1,$L(ANS))'=ANS)
"RTN","IBDFDE2",120,0)
 .I $O(@ARRAY@(NEXT,1)) S SELECT=$$PARTLST^IBDFDE21(ARRAY,NEXT,ANS) Q
"RTN","IBDFDE2",121,0)
 .S NEXT1=$O(@ARRAY@(NEXT)) I $E(NEXT1,1,$L(ANS))=ANS S SELECT=$$PARTLST^IBDFDE21(ARRAY,NEXT,ANS) Q  ;Not Unique answer
"RTN","IBDFDE2",122,0)
 .W $E(NEXT,($L(ANS)+1),$L(NEXT))
"RTN","IBDFDE2",123,0)
 .S SELECT=$G(@ARRAY@(NEXT,1))
"RTN","IBDFDE2",124,0)
 ;
"RTN","IBDFDE2",125,0)
 I ANS'="" S SEL=$$OTHER^IBDFDE21(ANS) I SEL'="" D SEL^IBDFDE21(SEL),CHK^IBDFDE22 G VSTOVER
"RTN","IBDFDE2",126,0)
 I ANS'="" W " ??  ",$C(7),"Not Found" G OVER
"RTN","IBDFDE2",127,0)
 ;
"RTN","IBDFDE2",128,0)
VSTOVER K SELAST G:OVER OVER
"RTN","IBDFDE2",129,0)
 I $G(ASKOTHER) F  S SEL=$$OTHER^IBDFDE21("") Q:SEL=""  D SEL^IBDFDE21(SEL),CHK^IBDFDE22 Q:'$G(ASKOTHER)
"RTN","IBDFDE2",130,0)
 ;
"RTN","IBDFDE2",131,0)
VSTQ ; -- kill array for dynamic lists
"RTN","IBDFDE2",132,0)
 I $P($G(^IBE(357.6,IBDF("PI"),0)),"^",14) S:IBDF("PI")'=$G(IBDF("PROVIDER PI")) IBDF("DYNAMIC")=1 K ^TMP("IBD-LST",$J,IBDFMIEN,IBDF("PI")),^TMP("IBD-LTEXT",$J,IBDFMIEN,IBDF("PI")),^TMP("IBD-LCODE",$J,IBDFMIEN,IBDF("PI"))
"RTN","IBDFDE2",133,0)
 K ^TMP("IB",$J,"INTERFACES")
"RTN","IBDFDE2",134,0)
 K IBDF("OTHER"),ASKOTHER
"RTN","IBDFDE2",135,0)
 Q
"RTN","IBDFDE21")
0^31^B92448772^B84112928
"RTN","IBDFDE21",1,0)
IBDFDE21 ;ALB/AAS - AICS Data Entry, process selection lists ; 11/22/99 4:35pm
"RTN","IBDFDE21",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**4,38,23,63**;APR 24, 1997;Build 80
"RTN","IBDFDE21",3,0)
 ;
"RTN","IBDFDE21",4,0)
 ;
"RTN","IBDFDE21",5,0)
% G ^IBDFDE
"RTN","IBDFDE21",6,0)
 ;
"RTN","IBDFDE21",7,0)
SEL(SEL) ; -- Build results array
"RTN","IBDFDE21",8,0)
 N IBDX,DSPTXT,IBQUIT,IBDQL,QCNT,IBDQLFR
"RTN","IBDFDE21",9,0)
 S IBQUIT=0
"RTN","IBDFDE21",10,0)
 ;
"RTN","IBDFDE21",11,0)
 S IBDQL=$$QLFR(.RULE,.QLFR)
"RTN","IBDFDE21",12,0)
 Q:IBQUIT!(IBDQL="^")
"RTN","IBDFDE21",13,0)
 S IBDQLFR=$P(IBDQL,"^",1) D SEL1
"RTN","IBDFDE21",14,0)
 ;
"RTN","IBDFDE21",15,0)
 F QCNT=2:1 S IBDQLFR=$P(IBDQL,"^",QCNT) Q:IBDQLFR=""  D SEL1
"RTN","IBDFDE21",16,0)
 Q
"RTN","IBDFDE21",17,0)
 ;
"RTN","IBDFDE21",18,0)
SEL1 ; -- build selections
"RTN","IBDFDE21",19,0)
 N IBDIMP,IBDIBX
"RTN","IBDFDE21",20,0)
 S IBDIMP=$$IMPDATE^IBDUTICD(30)
"RTN","IBDFDE21",21,0)
 S IBDIBX=799.9
"RTN","IBDFDE21",22,0)
 I DT'<IBDIMP S IBDIBX="R69."
"RTN","IBDFDE21",23,0)
 S IBDX=$G(RESULT(0))+1,RESULT(0)=IBDX
"RTN","IBDFDE21",24,0)
 I +SEL=SEL S CHOICE=$$CHOICE^IBDFDE2(SEL)
"RTN","IBDFDE21",25,0)
 I +SEL'=SEL S CHOICE=SEL
"RTN","IBDFDE21",26,0)
 S DISPTXT=$S($P(CHOICE,"^",5)="":$P(CHOICE,"^"),1:$P(CHOICE,"^",5))
"RTN","IBDFDE21",27,0)
 W:+$G(QCNT)<2 "  ",DISPTXT,"   ",$S($P(CHOICE,"^",2)'="":$P(CHOICE,"^",2),$P($G(^IBE(357.6,IBDF("PI"),0)),"^")="GMP INPUT CLINIC COMMON PROBLEMS":$$LEX^IBDFDE1($P(CHOICE,"^",3)),1:$P(CHOICE,"^",3)),"   ",$P(CHOICE,"^",8)_"   ",$P(CHOICE,"^",4)
"RTN","IBDFDE21",28,0)
 ;
"RTN","IBDFDE21",29,0)
 S RESULT(IBDX)=IBDF("PI")_"^"_$P(CHOICE,"^",3)_"^"_DISPTXT_"^"_$P(CHOICE,"^",8)_"^"_$P(CHOICE,"^",6)_"^"_IBDQLFR_"^"_$G(IBDF("IEN"))_"^^"_$P(CHOICE,"^",9)_"^"_$P(CHOICE,"^",2)_"^^"_$P(CHOICE,"^",12)
"RTN","IBDFDE21",30,0)
 S IBDPI(IBDF("PI"),IBDX)=RESULT(IBDX)
"RTN","IBDFDE21",31,0)
 ;
"RTN","IBDFDE21",32,0)
 ; --validate code for active problem list
"RTN","IBDFDE21",33,0)
 I $P($G(^IBE(357.6,IBDF("PI"),0)),"^")="PX INPUT PATIENT ACTIVE PROBLEM" D
"RTN","IBDFDE21",34,0)
 .N X S X=$P(CHOICE,"^",2) Q:X=""
"RTN","IBDFDE21",35,0)
 .I X=IBDIBX W !,$C(7),IOINHI,"Warning: The ICD",$S(DT'<IBDIMP:"10",1:"9")," Diagnosis associated with this problem needs to be updated!",IOINORM Q
"RTN","IBDFDE21",36,0)
 .D TESTICD^IBDFN7
"RTN","IBDFDE21",37,0)
 .I '$D(X) W !,$C(7),IOINHI,"Warning: The ICD",$S(DT'<IBDIMP:"10",1:"9")," code associated with this problem is inactive.",IOINORM
"RTN","IBDFDE21",38,0)
 .;I $D(X) W !,"This is a valid icd9 code"
"RTN","IBDFDE21",39,0)
 ;
"RTN","IBDFDE21",40,0)
 ; -- send second and third codes if applicable
"RTN","IBDFDE21",41,0)
 Q:"PRIMARYSECONDARYADD TO PROBLEM LIST"'[IBDQLFR
"RTN","IBDFDE21",42,0)
 N IBDQUAL
"RTN","IBDFDE21",43,0)
 S IBDQUAL=$S(IBDQLFR="PRIMARY":"SECONDARY",1:IBDQLFR)
"RTN","IBDFDE21",44,0)
 N I,IBDXCD,DISPTXT F I=10,11 I $P(CHOICE,"^",I)]"" D
"RTN","IBDFDE21",45,0)
 .S IBDX=$G(RESULT(0))+1,RESULT(0)=IBDX
"RTN","IBDFDE21",46,0)
 .S IBDXCD=$P(CHOICE,"^",I)
"RTN","IBDFDE21",47,0)
 .N X,Y S X=IBDXCD
"RTN","IBDFDE21",48,0)
 .D
"RTN","IBDFDE21",49,0)
 ..I $G(X)="" K X S Y="" Q
"RTN","IBDFDE21",50,0)
 ..;S:$E(X,$L(X))'=" " X=X_" " ; use ba xref, add space to end for lookup.
"RTN","IBDFDE21",51,0)
 ..;S X=$O(^ICD9("BA",X,0))
"RTN","IBDFDE21",52,0)
 ..;I 'X S Y=""
"RTN","IBDFDE21",53,0)
 ..;E  S Y=$P(^ICD9(X,0),"^",3)
"RTN","IBDFDE21",54,0)
 ..;S X=$$ICDDX^ICDCODE(X)
"RTN","IBDFDE21",55,0)
 ..;get by external code using "DIAG"
"RTN","IBDFDE21",56,0)
 ..S X=$$ICDDATA^ICDXCODE("DIAG",X,DT)
"RTN","IBDFDE21",57,0)
 ..I +X<1 K X S Y="" Q
"RTN","IBDFDE21",58,0)
 ..E  S Y=$P(X,U,4)
"RTN","IBDFDE21",59,0)
 .S DISPTXT=Y
"RTN","IBDFDE21",60,0)
 .S RESULT(IBDX)=IBDF("PI")_"^"_IBDXCD_"^"_DISPTXT_"^"_$P(CHOICE,"^",8)_"^"_$P(CHOICE,"^",6)_"^"_IBDQUAL_"^"_$G(IBDF("IEN"))_"^^"_$P(CHOICE,"^",9)
"RTN","IBDFDE21",61,0)
 .S IBDPI(IBDF("PI"),IBDX)=RESULT(IBDX)
"RTN","IBDFDE21",62,0)
 ; 
"RTN","IBDFDE21",63,0)
 ; -- if ans contains - go to modifier routine
"RTN","IBDFDE21",64,0)
 I IBDASK="CPT Procedure Code" D MOD^IBDFDE23
"RTN","IBDFDE21",65,0)
 I IBDASK="Visit Type (EM) Code" D MOD^IBDFDE23
"RTN","IBDFDE21",66,0)
 Q
"RTN","IBDFDE21",67,0)
 ;
"RTN","IBDFDE21",68,0)
QLFR(RULE,QLFR) ; -- ask Qualifier from array, impose rules
"RTN","IBDFDE21",69,0)
 N I,X,IBDQ,IBDQ1,QCNT,CNT,ANS,IBDI,OVER,X1,X2,NUM
"RTN","IBDFDE21",70,0)
 S IBDQ="",CNT=0
"RTN","IBDFDE21",71,0)
 ;
"RTN","IBDFDE21",72,0)
 ; -- if only 1 qualifier use it
"RTN","IBDFDE21",73,0)
 I RULE=1 S IBDQ=$G(QLFR(+$O(QLFR(0)))) W "  ",IBDQ G QLFRQ
"RTN","IBDFDE21",74,0)
 ;
"RTN","IBDFDE21",75,0)
 S IBDI=0
"RTN","IBDFDE21",76,0)
 F  S IBDI=$O(QLFR(IBDI)) Q:'IBDI  S X=$G(QLFR(IBDI)) I X'="" D
"RTN","IBDFDE21",77,0)
 .S CNT=CNT+1,X(CNT)=X,X2(X)=X
"RTN","IBDFDE21",78,0)
 .I '$D(X1($E(X),1)) S X1($E(X),1)=X Q
"RTN","IBDFDE21",79,0)
 .S NUM=$O(X1($E(X),""),-1) S X1($E(X),NUM+1)=X
"RTN","IBDFDE21",80,0)
 I CNT=1 S IBDQ=$G(X(CNT)) W "  ",IBDQ G QLFRQ
"RTN","IBDFDE21",81,0)
 ;
"RTN","IBDFDE21",82,0)
 I $D(IBNAQLFR) S ANS=1 S IBDQ=X(ANS)  W !,IOINHI,"Using Default Qualifier: "_X(ANS),IOINORM,! Q IBDQ
"RTN","IBDFDE21",83,0)
OVER1 ;
"RTN","IBDFDE21",84,0)
 I CNT<1 G QLFRQ
"RTN","IBDFDE21",85,0)
 W !,IOINHI,"   Select a Qualifier",IOINORM
"RTN","IBDFDE21",86,0)
 I CNT>1 F I=1:1:CNT I X(I)'="" W !?6,I,?10,X(I)
"RTN","IBDFDE21",87,0)
 W !,"   Choose 1-",CNT,": " R ANS:DTIME
"RTN","IBDFDE21",88,0)
 I '$T!($E(ANS,1)="^") S IBDQ="",IBQUIT=1 G QLFRQ
"RTN","IBDFDE21",89,0)
 I ANS="" G OVER1
"RTN","IBDFDE21",90,0)
 S OVER=0
"RTN","IBDFDE21",91,0)
 I $E(ANS,1)="?" D HELP G OVER1
"RTN","IBDFDE21",92,0)
 I ANS=+ANS D  G:OVER OVER1
"RTN","IBDFDE21",93,0)
 .I ANS<1!(ANS>CNT) S OVER=1 Q
"RTN","IBDFDE21",94,0)
 .I $G(X(ANS))="" S OVER=1 Q
"RTN","IBDFDE21",95,0)
 .S IBDQ=X(ANS) W "  ",X(ANS)
"RTN","IBDFDE21",96,0)
 .W !
"RTN","IBDFDE21",97,0)
 I ANS'=+ANS D  G:OVER OVER1
"RTN","IBDFDE21",98,0)
 .S ANS1=ANS,QCNT=0,IBDQ1=""
"RTN","IBDFDE21",99,0)
 .F IBD=1:1 S ANS=$P(ANS1,",",IBD) Q:ANS=""!OVER  D ONEQLFR I 'OVER,IBDQ'="" S QCNT=QCNT+1,$P(IBDQ1,"^",QCNT)=IBDQ
"RTN","IBDFDE21",100,0)
 .S IBDQ=IBDQ1
"RTN","IBDFDE21",101,0)
 .K QCNT,IBDQ1
"RTN","IBDFDE21",102,0)
 ;
"RTN","IBDFDE21",103,0)
QLFRQ Q IBDQ
"RTN","IBDFDE21",104,0)
 ;
"RTN","IBDFDE21",105,0)
ONEQLFR ; -- parse qualifiers
"RTN","IBDFDE21",106,0)
 S ANS=$$UP^XLFSTR(ANS)
"RTN","IBDFDE21",107,0)
 I +ANS=ANS D  Q
"RTN","IBDFDE21",108,0)
 .I $G(X(ANS))="" W !,"'"_ANS_"' IS NOT A VALID SELECTION, RE-ENTER" S OVER=1 Q
"RTN","IBDFDE21",109,0)
 .S IBDQ=X(ANS) W "  ",X(ANS)
"RTN","IBDFDE21",110,0)
 ;
"RTN","IBDFDE21",111,0)
 I $L(ANS)=1,$G(X1(ANS,1))'="",$O(X1(ANS,1))="" S IBDQ=X1(ANS,1) W:ANS=ANS1 $E(X1(ANS,1),2,99) W:ANS'=ANS1 "  ",X1(ANS,1) Q
"RTN","IBDFDE21",112,0)
 I $G(X2(ANS))'="" S IBDQ=X2(ANS) W "  ",X2(ANS) Q
"RTN","IBDFDE21",113,0)
 I $L(ANS)=1,$G(X1(ANS,1))'="",$O(X1(ANS,1)) S OVER=1 W "  Ambiguous answer, enter the number." Q  ;S IBDQ=$$PARTLST("X1",ANS,ANS) W $E(X1(ANS,1),2,99) Q
"RTN","IBDFDE21",114,0)
 S OVER=1
"RTN","IBDFDE21",115,0)
 Q
"RTN","IBDFDE21",116,0)
 ;
"RTN","IBDFDE21",117,0)
LST ; -- List previous selections and selections to choose from.
"RTN","IBDFDE21",118,0)
 N I,CNT,IBQUIT,NUM
"RTN","IBDFDE21",119,0)
 ;
"RTN","IBDFDE21",120,0)
 ; -- list previous selections
"RTN","IBDFDE21",121,0)
 D PREVSEL
"RTN","IBDFDE21",122,0)
 ;
"RTN","IBDFDE21",123,0)
 ; -- list available choices
"RTN","IBDFDE21",124,0)
 S (IBQUIT,CNT)=0
"RTN","IBDFDE21",125,0)
 S NUM=+$$CHOICE^IBDFDE2(0)
"RTN","IBDFDE21",126,0)
 W !!,"Choose from: "
"RTN","IBDFDE21",127,0)
 S I=0 F  S I=$O(^TMP("IBD-LST",$J,IBDFMIEN,IBDF("PI"),IBDF("IEN"),I)) Q:'I!(IBQUIT)  D
"RTN","IBDFDE21",128,0)
 .S CHOICE=$$CHOICE^IBDFDE2(I)
"RTN","IBDFDE21",129,0)
 .I '$P(CHOICE,"^",7) W !?16,IOINHI,$P(CHOICE,"^"),IOINORM Q
"RTN","IBDFDE21",130,0)
 .S CNT=CNT+1,NUMBER(CNT)=I
"RTN","IBDFDE21",131,0)
 .W !?3,CNT,?7,$S($P(CHOICE,"^",2)'="":$P(CHOICE,"^",2),1:$P(CHOICE,"^",3)),?16,$P(CHOICE,"^",1)
"RTN","IBDFDE21",132,0)
 .I NUM>15,NUM>I,'(CNT#15) D PAUSE^IBDFDE I 'IBQUIT W $C(13),$J("",55),$C(13)
"RTN","IBDFDE21",133,0)
 .;I NUM>15,CNT'=NUM,'(CNT#15) D READ I $G(LISTSEL)<1!($G(LISTSEL)>CNT) K LISTSEL
"RTN","IBDFDE21",134,0)
 .;I $G(LISTSEL) S SEL=NUMBER(LISTSEL)
"RTN","IBDFDE21",135,0)
 Q
"RTN","IBDFDE21",136,0)
 ;
"RTN","IBDFDE21",137,0)
PREVSEL ; -- List previous selections
"RTN","IBDFDE21",138,0)
 N I,CNT
"RTN","IBDFDE21",139,0)
 S CNT=0
"RTN","IBDFDE21",140,0)
 ;
"RTN","IBDFDE21",141,0)
 ; -- list previous selections
"RTN","IBDFDE21",142,0)
 I $D(IBDPI(IBDF("PI")))>1 S I=0 F  S I=$O(IBDPI(IBDF("PI"),I)) Q:'I  D
"RTN","IBDFDE21",143,0)
 .Q:$P(IBDPI(IBDF("PI"),I),"^",7)'=IBDF("IEN")  ; not the same list
"RTN","IBDFDE21",144,0)
 .S CNT=CNT+1
"RTN","IBDFDE21",145,0)
 .W:CNT=1 !!,IOINHI,"   You have previously selected: ",IOINORM
"RTN","IBDFDE21",146,0)
 .W !,?7,$S($P($G(^IBE(357.6,+IBDPI(IBDF("PI"),I),0)),"^")="GMP INPUT CLINIC COMMON PROBLEMS":$$LEX^IBDFDE1($P(IBDPI(IBDF("PI"),I),"^",2)),1:$P(IBDPI(IBDF("PI"),I),"^",2))
"RTN","IBDFDE21",147,0)
 .W ?16,$P(IBDPI(IBDF("PI"),I),"^",3),?50,$P(IBDPI(IBDF("PI"),I),"^",6)
"RTN","IBDFDE21",148,0)
 W !
"RTN","IBDFDE21",149,0)
 Q
"RTN","IBDFDE21",150,0)
 ;
"RTN","IBDFDE21",151,0)
DEFAULT ; -- compute default answer
"RTN","IBDFDE21",152,0)
 N CNT,SEL,NAME,PIECE,SELAST
"RTN","IBDFDE21",153,0)
 S (CNT,SEL,SELAST)=0
"RTN","IBDFDE21",154,0)
 S NAME=$P($G(^IBE(357.6,+IBDF("PI"),0)),"^")
"RTN","IBDFDE21",155,0)
 S PIECE=$S(NAME["INPUT PROCEDURE CODE":2,NAME["INPUT DIAGNOSIS CODE":2,NAME["INPUT VISIT TYPE":2,1:3)
"RTN","IBDFDE21",156,0)
 F  S SEL=$O(IBDPI(IBDF("PI"),SEL)) Q:'SEL  D
"RTN","IBDFDE21",157,0)
 .Q:$P(IBDPI(IBDF("PI"),SEL),"^",7)'=IBDF("IEN")  ; not the same list
"RTN","IBDFDE21",158,0)
 .S CNT=CNT+1,SELAST=SEL
"RTN","IBDFDE21",159,0)
 I $G(SELAST) S DIR("B")=$P(IBDPI(IBDF("PI"),SELAST),"^",PIECE),IBDEFLT(IBDF("PI"))=DIR("B")
"RTN","IBDFDE21",160,0)
 D PREVSEL
"RTN","IBDFDE21",161,0)
 Q
"RTN","IBDFDE21",162,0)
 ;
"RTN","IBDFDE21",163,0)
DEFPROV ; -- find default provider, not on form
"RTN","IBDFDE21",164,0)
 N SEL,IBDX
"RTN","IBDFDE21",165,0)
 S IBDF("PI")=$O(^IBE(357.6,"B","INPUT PROVIDER",0))
"RTN","IBDFDE21",166,0)
 Q:$D(IBDPI(IBDF("PI")))
"RTN","IBDFDE21",167,0)
 S SEL=$G(IBDF("PROVIDER")) I 'SEL S SEL=$$PRDEF^IBDFRPC3(IBDF("CLINIC"))
"RTN","IBDFDE21",168,0)
 Q:'SEL
"RTN","IBDFDE21",169,0)
 S $P(IBDF("PROVIDER PI"),"^",2)=1 ;flag not on form
"RTN","IBDFDE21",170,0)
 S IBDX=$G(IBDSEL(0))+1,IBDSEL(0)=IBDX
"RTN","IBDFDE21",171,0)
 S IBDSEL(IBDX)=IBDF("PI")_"^"_SEL_"^"_$P($G(^VA(200,+SEL,0)),"^")_"^^^PRIMARY^"
"RTN","IBDFDE21",172,0)
 S IBDPI(IBDF("PI"),IBDX)=IBDSEL(IBDX)
"RTN","IBDFDE21",173,0)
 W:'$G(IBDF("PROVIDER")) !!,"No Provider Block on form.  Using Default Provider from Clinic as Primary.",!
"RTN","IBDFDE21",174,0)
 W:$G(IBDF("PROVIDER")) !!,"Using Provider: "
"RTN","IBDFDE21",175,0)
 W "   ",$P(^VA(200,+SEL,0),"^"),"    PRIMARY",!
"RTN","IBDFDE21",176,0)
 Q
"RTN","IBDFDE21",177,0)
 ;
"RTN","IBDFDE21",178,0)
HELP ; -- 
"RTN","IBDFDE21",179,0)
 W !,"You must choose a data qualifier for this item.  Enter a number from 1-",CNT,!,"Or enter the first letter, or enter the full name.  Enter more than one",!,"qualifier separated by commas (ie 1,2 or P,A).",!
"RTN","IBDFDE21",180,0)
 Q
"RTN","IBDFDE21",181,0)
 ;
"RTN","IBDFDE21",182,0)
OTHER(IBDX) ; -- allow input of an additional item
"RTN","IBDFDE21",183,0)
 N I,J,X,Y,DIR,DIRUT,DUOUT,SEL,SELX,NARR,DIC,DIE,DA,DR,GMPTUN,GMPTSUB,GMPTSHOW,XTLKGLB,XTLKHLP,XTLKKSCH,XTLKSAY,IBDLEX,IBDFILE,IBDIMP,IBDCSYS,IBDX
"RTN","IBDFDE21",184,0)
 ;
"RTN","IBDFDE21",185,0)
 ; -- strip the cpt code if modifiers are added cpt-mod,mod,mod...
"RTN","IBDFDE21",186,0)
 ;
"RTN","IBDFDE21",187,0)
 I IBDX["-" S IBDX=$P(IBDX,"-")
"RTN","IBDFDE21",188,0)
 I $G(IBDF("LEXICON")) D  Q:'$D(IBDLEX)
"RTN","IBDFDE21",189,0)
 .I $D(^LEX)>1 S X="LEXSET" X ^%ZOSF("TEST") I $T D CONFIG^LEXSET("ICD","ICD") S IBDLEX=1
"RTN","IBDFDE21",190,0)
 .I '$D(IBDLEX) S X="GMPTSET" X ^%ZOSF("TEST") I $T D CONFIG^GMPTSET("GMPL","PL1") S IBDLEX=1
"RTN","IBDFDE21",191,0)
 .;D CONFIG^GMPTSET("ICD","ICD") (this is an alternate filter)
"RTN","IBDFDE21",192,0)
 S SELX=-1
"RTN","IBDFDE21",193,0)
 I '$G(IBDF("OTHER")) G OTHQ
"RTN","IBDFDE21",194,0)
 I $L($G(IBDX)) S X=IBDX S DIC(0)="EQMZ"
"RTN","IBDFDE21",195,0)
 S DIC("A")="Select Other "_$G(IBDASK)
"RTN","IBDFDE21",196,0)
 S DIC=$P(IBDF("OTHER"),"^") I $P(IBDF("OTHER"),"^",2)'="" S DIC("S")=$P(IBDF("OTHER"),"^",2,99)
"RTN","IBDFDE21",197,0)
 D ^DIC G OTHQ:+Y<1
"RTN","IBDFDE21",198,0)
 K DIC
"RTN","IBDFDE21",199,0)
 S SEL=Y
"RTN","IBDFDE21",200,0)
 W !!,$C(7),"WARNING: Item selected not from Encounter Form."
"RTN","IBDFDE21",201,0)
 ;
"RTN","IBDFDE21",202,0)
 I IBDF("PI")=$G(IBDF("PROVIDER PI")) W ! S SELX=$P($G(^VA(200,+Y,0)),"^",1)_"^^"_+Y_"^^^^1" G OTHQ
"RTN","IBDFDE21",203,0)
 ;
"RTN","IBDFDE21",204,0)
 W "...Entry of Narrative Required!",!
"RTN","IBDFDE21",205,0)
 S IBDFILE=+IBDF("OTHER")
"RTN","IBDFDE21",206,0)
 S:IBDFILE=81 DIR("B")=$P(Y(0),"^",2)
"RTN","IBDFDE21",207,0)
 S:IBDFILE=80 IBDIMP=$$IMPDATE^IBDUTICD(30),IBDCSYS=$S(DT'<IBDIMP:30,1:1),IBDX=$P($$ICDDATA^ICDXCODE(IBDCSYS,+Y,DT),U,4)
"RTN","IBDFDE21",208,0)
 S:IBDFILE=80 DIR("B")=$S($L(IBDX)<81:IBDX,1:$P(Y(0),"^",3))
"RTN","IBDFDE21",209,0)
 S:IBDFILE=357.69 DIR("B")=$P(Y(0),"^",3)
"RTN","IBDFDE21",210,0)
 I IBDFILE>9999999,IBDFILE<10000000 S DIR("B")=$P(Y(0),"^",1)
"RTN","IBDFDE21",211,0)
 S DIR(0)="FO^3:80",DIR("A")="Narrative" D ^DIR K DIR G:$G(DIRUT) OTHQ
"RTN","IBDFDE21",212,0)
 S NARR=Y
"RTN","IBDFDE21",213,0)
 ;
"RTN","IBDFDE21",214,0)
 S SELX=$S((IBDFILE<9999999)&(IBDFILE'=757.01):NARR_"^^"_$P(SEL,"^",2)_"^^^^1",1:NARR_"^^"_$P(SEL,"^",1)_"^^^^1")
"RTN","IBDFDE21",215,0)
OTHQ Q $S(SELX=-1:"",1:SELX)
"RTN","IBDFDE21",216,0)
 ;
"RTN","IBDFDE21",217,0)
PARTLST(ARY,NEXT,ANS) ; -- input has more than one match, prompt for which one
"RTN","IBDFDE21",218,0)
 N I,J,K,N,IBD,ANS2,SEL,CHOICE
"RTN","IBDFDE21",219,0)
 S SEL=0
"RTN","IBDFDE21",220,0)
 S NEXT=$E(NEXT,1,$L(NEXT)-1)_$C($A($E(NEXT,$L(NEXT)))-1)_"~"
"RTN","IBDFDE21",221,0)
 ;
"RTN","IBDFDE21",222,0)
 S J=0,K=NEXT F  S K=$O(@ARY@(K)) Q:$E(K,1,$L(ANS))'=ANS  D
"RTN","IBDFDE21",223,0)
 .S N=0 F  S N=$O(@ARY@(K,N)) Q:'N  D
"RTN","IBDFDE21",224,0)
 ..S J=J+1,IBD(J)=@ARY@(K,N),CHOICE=$$CHOICE^IBDFDE2(IBD(J))
"RTN","IBDFDE21",225,0)
 ..W !?6,J,?10,$S($P(CHOICE,"^",2)'="":$P(CHOICE,"^",2),1:$P(CHOICE,"^",3)),?20,$P(CHOICE,"^",1),?50,"   ",$P(CHOICE,"^",8),"   ",$P(CHOICE,"^",4)
"RTN","IBDFDE21",226,0)
 ;
"RTN","IBDFDE21",227,0)
ASKNUM I J<1 G PARTLQ
"RTN","IBDFDE21",228,0)
 W !,"   Choose 1-",J,": " R ANS2:DTIME
"RTN","IBDFDE21",229,0)
 I '$T!($E(ANS2,1)="^")!(ANS2="") S SEL="" G PARTLQ
"RTN","IBDFDE21",230,0)
 I $E(ANS2,1)="?" W !,"Enter a number from 1 - ",J G ASKNUM
"RTN","IBDFDE21",231,0)
 S ANS2=+ANS2
"RTN","IBDFDE21",232,0)
 I ANS2<1!(ANS2>J) G ASKNUM
"RTN","IBDFDE21",233,0)
 I $G(IBD(ANS2))="" G ASKNUM
"RTN","IBDFDE21",234,0)
 W !
"RTN","IBDFDE21",235,0)
 S SEL=$G(IBD(ANS2))
"RTN","IBDFDE21",236,0)
PARTLQ Q SEL
"RTN","IBDFDE21",237,0)
 ;
"RTN","IBDFDE21",238,0)
READ ; -- get input from list
"RTN","IBDFDE21",239,0)
 N ANS2
"RTN","IBDFDE21",240,0)
 G:CNT<1 READQ
"RTN","IBDFDE21",241,0)
 W !,"   Choose 1-",CNT,": " R ANS2:DTIME
"RTN","IBDFDE21",242,0)
 I '$T!($E(ANS2,1)="^") S IBQUIT=1 G READQ
"RTN","IBDFDE21",243,0)
 I $E(ANS2,1)="?" W !,"Enter a number from 1 - ",CNT," or return to see more." G READ
"RTN","IBDFDE21",244,0)
 S ANS2=+ANS2
"RTN","IBDFDE21",245,0)
 I ANS2<1!(ANS2>CNT) W $C(7),! G READ
"RTN","IBDFDE21",246,0)
 I $G(NUMBER(CNT))="" G READ
"RTN","IBDFDE21",247,0)
 W !
"RTN","IBDFDE21",248,0)
READQ Q
"RTN","IBDFDE41")
0^32^B17484519^B15981896
"RTN","IBDFDE41",1,0)
IBDFDE41 ;ALB/AAS - AICS Data Entry, process selection lists ;02/24/96 [ 11/13/96  3:58 PM ]
"RTN","IBDFDE41",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;APR 24, 1997;Build 80
"RTN","IBDFDE41",3,0)
 ;
"RTN","IBDFDE41",4,0)
 ;
"RTN","IBDFDE41",5,0)
% G ^IBDFDE
"RTN","IBDFDE41",6,0)
 ;
"RTN","IBDFDE41",7,0)
SEL(SEL) ; -- Build results array
"RTN","IBDFDE41",8,0)
 N IBDX,DSPTXT,IBQUIT,IBDQL,QCNT,IBDQLFR,IBDIMP,IBDIBX
"RTN","IBDFDE41",9,0)
 S IBDIMP=$$IMPDATE^IBDUTICD(30)
"RTN","IBDFDE41",10,0)
 S IBDIBX=799.9
"RTN","IBDFDE41",11,0)
 I DT'<IBDIMP S IBDIBX="R69."
"RTN","IBDFDE41",12,0)
 S IBQUIT=0
"RTN","IBDFDE41",13,0)
 ;
"RTN","IBDFDE41",14,0)
 I +SEL=SEL S CHOICE=$G(^TMP("IBD-LST",$J,IBDFMIEN,IBDF("PI"),IBDF("IEN"),SEL))
"RTN","IBDFDE41",15,0)
 I +SEL'=SEL S CHOICE=SEL
"RTN","IBDFDE41",16,0)
 Q:IBQUIT
"RTN","IBDFDE41",17,0)
 ;
"RTN","IBDFDE41",18,0)
 ; -- build selections
"RTN","IBDFDE41",19,0)
 S RESULT(0)=$G(RESULT(0))+1
"RTN","IBDFDE41",20,0)
 W "  ",$P(CHOICE,"^"),"   ",$P(CHOICE,"^",3)
"RTN","IBDFDE41",21,0)
 ;
"RTN","IBDFDE41",22,0)
 S RESULT(RESULT(0))=IBDF("PI")_"^"_$P(CHOICE,"^",4)_"^"_$P(CHOICE,"^")_"^^^"_$P(CHOICE,"^",3)_"^"_$G(IBDF("IEN"))
"RTN","IBDFDE41",23,0)
 S IBDPI(IBDF("PI"),RESULT(0))=RESULT(RESULT(0))
"RTN","IBDFDE41",24,0)
 ;
"RTN","IBDFDE41",25,0)
 ; --validate code for active problem list
"RTN","IBDFDE41",26,0)
 I $P($G(^IBE(357.6,IBDF("PI"),0)),"^")="PX INPUT PATIENT ACTIVE PROBLEM" D
"RTN","IBDFDE41",27,0)
 .N X S X=$P(CHOICE,"^",2) Q:X=""
"RTN","IBDFDE41",28,0)
 .I X=IBDIBX W !,$C(7),$G(IOINHI),"Warning: The ICD",$S(DT'<IBDIMP:"10",1:"9")," Diagnosis associated with this problem needs to be updated!",$G(IOINORM) Q
"RTN","IBDFDE41",29,0)
 .D TESTICD^IBDFN7
"RTN","IBDFDE41",30,0)
 .I '$D(X) W !,$C(7),$G(IOINHI),"Warning: The ICD",$S(DT'<IBDIMP:"10",1:"9")," code associated with this problem is inactive.",$G(IOINORM)
"RTN","IBDFDE41",31,0)
 ;
"RTN","IBDFDE41",32,0)
 Q
"RTN","IBDFDE41",33,0)
 ;
"RTN","IBDFDE41",34,0)
LST ; -- List previous selections and selections to choose from.
"RTN","IBDFDE41",35,0)
 N I,CNT,IBQUIT,NUM
"RTN","IBDFDE41",36,0)
 ;
"RTN","IBDFDE41",37,0)
 ; -- list previous selections
"RTN","IBDFDE41",38,0)
 D PREVSEL
"RTN","IBDFDE41",39,0)
 ;
"RTN","IBDFDE41",40,0)
 ; -- list available choices
"RTN","IBDFDE41",41,0)
 S (IBQUIT,CNT)=0
"RTN","IBDFDE41",42,0)
 S NUM=+$G(^TMP("IBD-LST",$J,IBDFMIEN,IBDF("PI"),IBDF("IEN"),0))
"RTN","IBDFDE41",43,0)
 W !!,"Choose from: "
"RTN","IBDFDE41",44,0)
 S I=0 F  S I=$O(^TMP("IBD-LST",$J,IBDFMIEN,IBDF("PI"),IBDF("IEN"),I)) Q:'I!(IBQUIT)  D
"RTN","IBDFDE41",45,0)
 .S CHOICE=$G(^TMP("IBD-LST",$J,IBDFMIEN,IBDF("PI"),IBDF("IEN"),I))
"RTN","IBDFDE41",46,0)
 .S CNT=CNT+1,NUMBER(CNT)=I
"RTN","IBDFDE41",47,0)
 .W !?3,CNT,?7,$S($P(CHOICE,"^",2)'="":$P(CHOICE,"^",2),1:$P(CHOICE,"^")),?20,"  ",$P(CHOICE,"^",3)
"RTN","IBDFDE41",48,0)
 .I NUM>15,NUM>I,'(CNT#15) D PAUSE^IBDFDE I 'IBQUIT W $C(13),$J("",55),$C(13)
"RTN","IBDFDE41",49,0)
 Q
"RTN","IBDFDE41",50,0)
 ;
"RTN","IBDFDE41",51,0)
PREVSEL ; -- List previous selections
"RTN","IBDFDE41",52,0)
 N I,CNT
"RTN","IBDFDE41",53,0)
 S CNT=0
"RTN","IBDFDE41",54,0)
 ;
"RTN","IBDFDE41",55,0)
 ; -- list previous selections
"RTN","IBDFDE41",56,0)
 I $D(IBDPI(IBDF("PI")))>1 S I=0 F  S I=$O(IBDPI(IBDF("PI"),I)) Q:'I  D
"RTN","IBDFDE41",57,0)
 .Q:$P(IBDPI(IBDF("PI"),I),"^",7)'=IBDF("IEN")  ; not the same list
"RTN","IBDFDE41",58,0)
 .S CNT=CNT+1
"RTN","IBDFDE41",59,0)
 .W:CNT=1 !!,IOINHI,"   You have previously selected: ",IOINORM
"RTN","IBDFDE41",60,0)
 .W !,?7,$S($P($G(^IBE(357.6,+IBDPI(IBDF("PI"),I),0)),"^")="GMP INPUT CLINIC COMMON PROBLEMS":$$LEX^IBDFDE1($P(IBDPI(IBDF("PI"),I),"^",2)),1:$P(IBDPI(IBDF("PI"),I),"^",2))
"RTN","IBDFDE41",61,0)
 .W ?16,$P(IBDPI(IBDF("PI"),I),"^",3),?50,$P(IBDPI(IBDF("PI"),I),"^",6)
"RTN","IBDFDE41",62,0)
 W !
"RTN","IBDFDE41",63,0)
 Q
"RTN","IBDFDE41",64,0)
 ;
"RTN","IBDFDE41",65,0)
DEFAULT ; -- compute default answer
"RTN","IBDFDE41",66,0)
 N CNT,SEL,NAME,PIECE,SELAST
"RTN","IBDFDE41",67,0)
 S (CNT,SEL,SELAST)=0
"RTN","IBDFDE41",68,0)
 S NAME=$P($G(^IBE(357.6,+IBDF("PI"),0)),"^")
"RTN","IBDFDE41",69,0)
 S PIECE=$S(NAME["INPUT PROCEDURE CODE":2,NAME["INPUT DIAGNOSIS CODE":2,NAME["INPUT VISIT TYPE":2,1:3)
"RTN","IBDFDE41",70,0)
 F  S SEL=$O(IBDPI(IBDF("PI"),SEL)) Q:'SEL  D
"RTN","IBDFDE41",71,0)
 .Q:$P(IBDPI(IBDF("PI"),SEL),"^",7)'=IBDF("IEN")  ; not the same list
"RTN","IBDFDE41",72,0)
 .S CNT=CNT+1,SELAST=SEL
"RTN","IBDFDE41",73,0)
 I $G(SELAST) S DIR("B")=$P(IBDPI(IBDF("PI"),SELAST),"^",PIECE),IBDEFLT(IBDF("PI"))=DIR("B")
"RTN","IBDFDE41",74,0)
 D PREVSEL
"RTN","IBDFDE41",75,0)
 Q
"RTN","IBDFDE41",76,0)
 ;
"RTN","IBDFDE41",77,0)
PARTLST(ARY,NEXT,ANS) ; -- input has more than one match, prompt for which one
"RTN","IBDFDE41",78,0)
 N I,J,K,N,IBD,ANS2,SEL,CHOICE
"RTN","IBDFDE41",79,0)
 S SEL=0
"RTN","IBDFDE41",80,0)
 S NEXT=$E(NEXT,1,$L(NEXT)-1)_$C($A($E(NEXT,$L(NEXT)))-1)_"~"
"RTN","IBDFDE41",81,0)
 ;
"RTN","IBDFDE41",82,0)
 S J=0,K=NEXT F  S K=$O(@ARY@(K)) Q:$E(K,1,$L(ANS))'=ANS  D
"RTN","IBDFDE41",83,0)
 .S N=0 F  S N=$O(@ARY@(K,N)) Q:'N  D
"RTN","IBDFDE41",84,0)
 ..S J=J+1,IBD(J)=@ARY@(K,N),CHOICE=$$CHOICE^IBDFDE2(IBD(J))
"RTN","IBDFDE41",85,0)
 ..W !?6,J,?10,$S($P(CHOICE,"^",2)'="":$P(CHOICE,"^",2),1:$P(CHOICE,"^",3)),?20,$P(CHOICE,"^",1),?50,"   ",$P(CHOICE,"^",8),"   ",$P(CHOICE,"^",4)
"RTN","IBDFDE41",86,0)
 ;
"RTN","IBDFDE41",87,0)
ASKNUM I J<1 G PARTLQ
"RTN","IBDFDE41",88,0)
 W !,"   Choose 1-",J,": " R ANS2:DTIME
"RTN","IBDFDE41",89,0)
 I '$T!($E(ANS2,1)="^")!(ANS2="") S SEL="" G PARTLQ
"RTN","IBDFDE41",90,0)
 I $E(ANS2,1)="?" W !,"Enter a number from 1 - ",J G ASKNUM
"RTN","IBDFDE41",91,0)
 S ANS2=+ANS2
"RTN","IBDFDE41",92,0)
 I ANS2<1!(ANS2>J) G ASKNUM
"RTN","IBDFDE41",93,0)
 I $G(IBD(ANS2))="" G ASKNUM
"RTN","IBDFDE41",94,0)
 W !
"RTN","IBDFDE41",95,0)
 S SEL=$G(IBD(ANS2))
"RTN","IBDFDE41",96,0)
PARTLQ Q SEL
"RTN","IBDFLST")
0^11^B47525530^B28703563
"RTN","IBDFLST",1,0)
IBDFLST ;ALM/MAF - Maintenance Utility Invalid Codes List ;05/17/95
"RTN","IBDFLST",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**9,38,51,63**;APR 24, 1997;Build 80
"RTN","IBDFLST",3,0)
 ;
"RTN","IBDFLST",4,0)
 ;
"RTN","IBDFLST",5,0)
 ;
"RTN","IBDFLST",6,0)
START ;  -- Ask what invalid code you want to display CPT/ ICD9/ Visit
"RTN","IBDFLST",7,0)
 N IBDFDIS
"RTN","IBDFLST",8,0)
 D FULL^VALM1
"RTN","IBDFLST",9,0)
 S DIR("B")="CPT"
"RTN","IBDFLST",10,0)
 ;
"RTN","IBDFLST",11,0)
 S DIR(0)="SA^C:CPT;I:ICD9;D:ICD10;V:VISIT",DIR("A")="Display invalid codes for [C]PT, [I]CD9, IC[D]10, [V]ISIT: " D ^DIR
"RTN","IBDFLST",12,0)
 K DIR I $D(DIRUT)!(Y<0) G QUIT
"RTN","IBDFLST",13,0)
 ;W !!,"Display invalid codes for CPT// " D ZSET1^IBDFLST1 S X="" R X:DTIME G QUIT:X="^"!('$T) I X=""!("Cc"[X) S X="1"
"RTN","IBDFLST",14,0)
 S X=$S("Ii"[X:2,"Dd"[X:3,"Vv"[X:4,1:1) ; 
"RTN","IBDFLST",15,0)
 ;I X="?" D ZSET1^IBDFLST1,HELP1^IBDFLST1 G START
"RTN","IBDFLST",16,0)
 S IBDFTYP=$E(X)  ; D IN^DGHELP W ! I %=-1 D ZSET1^IBDFLST1,HELP1^IBDFLST1 G START
"RTN","IBDFLST",17,0)
 S IBDFDIS=$S(IBDFTYP=1:"CPT",IBDFTYP=2:"ICD9",IBDFTYP=3:"ICD10",IBDFTYP=4:"VISIT",1:"QUIT")
"RTN","IBDFLST",18,0)
 D WAIT^DICD
"RTN","IBDFLST",19,0)
 D EN^VALM("IBDF UTIL COMPLETE LIST TEMP")
"RTN","IBDFLST",20,0)
 Q
"RTN","IBDFLST",21,0)
 ;
"RTN","IBDFLST",22,0)
 ;
"RTN","IBDFLST",23,0)
HDR ; -- header code
"RTN","IBDFLST",24,0)
 S VALMHDR(1)="This screen displays the most current invalid codes for the "_IBDFDIS_" file."
"RTN","IBDFLST",25,0)
 Q
"RTN","IBDFLST",26,0)
 ;
"RTN","IBDFLST",27,0)
 ;
"RTN","IBDFLST",28,0)
SETSTR(S,V,X,L) ; -- insert text(S) into variable(V)
"RTN","IBDFLST",29,0)
 ;    S := string
"RTN","IBDFLST",30,0)
 ;    V := destination
"RTN","IBDFLST",31,0)
 ;    X := @ col X
"RTN","IBDFLST",32,0)
 ;    L := # of chars
"RTN","IBDFLST",33,0)
 ;
"RTN","IBDFLST",34,0)
 Q $E(V_$J("",X-1),1,X-1)_$E(S_$J("",L),1,L)_$E(V,X+L,999)
"RTN","IBDFLST",35,0)
 ;
"RTN","IBDFLST",36,0)
 ;
"RTN","IBDFLST",37,0)
INIT ;  -- Set up list for display
"RTN","IBDFLST",38,0)
 N IBDFCODE,IBDFDESC,IBDFIFN,IBDFCAT,IBDFNODE
"RTN","IBDFLST",39,0)
 S (IBDCNT,VALMCNT,IBDCNT1)=0
"RTN","IBDFLST",40,0)
 D @(IBDFDIS)
"RTN","IBDFLST",41,0)
 Q
"RTN","IBDFLST",42,0)
 ;
"RTN","IBDFLST",43,0)
 ;  -- Gets CPT listing of invalid codes
"RTN","IBDFLST",44,0)
CPT D FULL^VALM1 F IBDFIFN=0:0 S IBDFIFN=$O(^ICPT(IBDFIFN)) Q:'IBDFIFN  D
"RTN","IBDFLST",45,0)
 .;; --change to api cpt ; dhh
"RTN","IBDFLST",46,0)
 .;;     --note: 7th piece is status 0-inactive 1-active
"RTN","IBDFLST",47,0)
 . S IBDFNODE=$$CPT^ICPTCOD(IBDFIFN),IBDFNODE=$G(IBDFNODE)
"RTN","IBDFLST",48,0)
 . I $P(IBDFNODE,"^",7)=0 D
"RTN","IBDFLST",49,0)
 .. S IBDFCODE=$P(IBDFNODE,"^",2),IBDFDESC=$P(IBDFNODE,"^",3)
"RTN","IBDFLST",50,0)
 .. S IBDFCAT=$S($P(IBDFNODE,"^",4)]"":$P(^DIC(81.1,$P(IBDFNODE,"^",4),0),"^",1),1:"UNKNOWN") D ALPHA
"RTN","IBDFLST",51,0)
 D LOOP
"RTN","IBDFLST",52,0)
 Q
"RTN","IBDFLST",53,0)
 ;
"RTN","IBDFLST",54,0)
 ;  -- Gets ICD9 listing of invalid codes
"RTN","IBDFLST",55,0)
 ;  -- Use api for ICD9
"RTN","IBDFLST",56,0)
ICD9 ;;F IBDFIFN=0:0 S IBDFIFN=$O(^ICD9(IBDFIFN)) Q:'IBDFIFN  S IBDFNODE=$G(^ICD9(IBDFIFN,0)) I $P(IBDFNODE,"^",9)]"" D
"RTN","IBDFLST",57,0)
 ;
"RTN","IBDFLST",58,0)
 ;Use ICD API to check the status for CSV.  No date is passed so the
"RTN","IBDFLST",59,0)
 ;default day is DT (today).  $P10 = status 0-inactive 1-active
"RTN","IBDFLST",60,0)
 D ICD9LST
"RTN","IBDFLST",61,0)
 ;F IBDFIFN=0:0 S IBDFIFN=$O(^ICD9(IBDFIFN)) Q:'IBDFIFN  S IBDFNODE=$$ICDDX^ICDCODE(IBDFIFN) I '$P(IBDFNODE,U,10) D
"RTN","IBDFLST",62,0)
 S IBDFIFN="" F  S IBDFIFN=$O(^TMP("IBDICD9",$J,"DILIST","ICD",IBDFIFN)) Q:IBDFIFN=""  S IBDFNODE=^TMP("IBDICD9",$J,"DILIST","ICD",IBDFIFN) D
"RTN","IBDFLST",63,0)
 .S IBDFCODE=$P(IBDFNODE,"^",2),IBDFDESC=$P(IBDFNODE,"^",4),IBDFCAT=$S($P(IBDFNODE,"^",6)]""&($G(^ICM(+$P(IBDFNODE,"^",6),0))]""):$P(^ICM($P(IBDFNODE,"^",6),0),"^",1),1:"UNKNOWN") D ALPHA
"RTN","IBDFLST",64,0)
 D LOOP
"RTN","IBDFLST",65,0)
 Q
"RTN","IBDFLST",66,0)
 ;
"RTN","IBDFLST",67,0)
ICD10 ;
"RTN","IBDFLST",68,0)
 ;Use ICD API to check the status for CSV. No date is passed so the
"RTN","IBDFLST",69,0)
 ;default day is DT (today). $P10 = status 0-inactive 1-active 2-inactive
"RTN","IBDFLST",70,0)
 D ICD10LST
"RTN","IBDFLST",71,0)
 S IBDFIFN=0 F  S IBDFIFN=$O(^TMP("IBDICD10",$J,"DILIST","ICD",IBDFIFN)) Q:IBDFIFN=""  S IBDFNODE=^TMP("IBDICD10",$J,"DILIST","ICD",IBDFIFN) D
"RTN","IBDFLST",72,0)
 .S IBDFCODE=$P(IBDFNODE,"^",2),IBDFDESC=$P(IBDFNODE,"^",4),IBDFCAT=$S($P(IBDFNODE,"^",6)]""&($G(^ICM(+$P(IBDFNODE,"^",6),0))]""):$P(^ICM($P(IBDFNODE,"^",6),0),"^",1),1:"UNKNOWN") D ALPHA
"RTN","IBDFLST",73,0)
 D LOOP
"RTN","IBDFLST",74,0)
 Q
"RTN","IBDFLST",75,0)
 ;
"RTN","IBDFLST",76,0)
VISIT ;  -- Gets visit code listing of invalid codes
"RTN","IBDFLST",77,0)
 N IEN
"RTN","IBDFLST",78,0)
 F IBDFVST=0:0 S IBDFVST=$O(^IBE(357.69,"B",IBDFVST)) Q:'IBDFVST  D
"RTN","IBDFLST",79,0)
 . S IEN=$O(^IBE(357.69,"B",IBDFVST,0))
"RTN","IBDFLST",80,0)
 . Q:'IEN
"RTN","IBDFLST",81,0)
 . S IBDFNODE=$$CPT^ICPTCOD(IBDFVST)
"RTN","IBDFLST",82,0)
 . Q:$P(IBDFNODE,U,7)=1  ;(CSV) status 0-inactive 1-active
"RTN","IBDFLST",83,0)
 . ;;Q:+IBDFNODE=-1
"RTN","IBDFLST",84,0)
 . S IBDFIFN=+IBDFNODE
"RTN","IBDFLST",85,0)
 . S IBDFCODE=$P(IBDFNODE,"^",2)
"RTN","IBDFLST",86,0)
 . S IBDFDESC=$P(IBDFNODE,"^",3)
"RTN","IBDFLST",87,0)
 . S IBDFCAT=$S($P(IBDFNODE,"^",4)]"":$P(^DIC(81.1,$P(IBDFNODE,"^",4),0),"^",1),1:"UNKNOWN")
"RTN","IBDFLST",88,0)
 . D ALPHA
"RTN","IBDFLST",89,0)
 D LOOP
"RTN","IBDFLST",90,0)
 Q
"RTN","IBDFLST",91,0)
 ;
"RTN","IBDFLST",92,0)
 ;
"RTN","IBDFLST",93,0)
LOOP ;  -- Loop thru global ^TMP("IBDALPHA",$J) alphabetic by category
"RTN","IBDFLST",94,0)
 I '$D(^TMP("IBDALPHA",$J)),IBDFDIS="ICD10" D  Q  ;
"RTN","IBDFLST",95,0)
 .S X="There are no ICD10 invalid code lists on file."
"RTN","IBDFLST",96,0)
 .S IBDCNT1=IBDCNT1+1,VALMCNT=VALMCNT+1
"RTN","IBDFLST",97,0)
 .S ^TMP("IBDCODE",$J,2,0)=X
"RTN","IBDFLST",98,0)
 .S ^TMP("IBDCODE",$J,"IDX",VALMCNT,IBDCNT1)=""
"RTN","IBDFLST",99,0)
 S IBDFCAT=0
"RTN","IBDFLST",100,0)
 F IBDCAT=0:0 S IBDFCAT=$O(^TMP("IBDALPHA",$J,IBDFCAT)) Q:IBDFCAT']""  F IBDFIFN=0:0 S IBDFIFN=$O(^TMP("IBDALPHA",$J,IBDFCAT,IBDFIFN)) Q:'IBDFIFN  S IBDFNODE=$G(^TMP("IBDALPHA",$J,IBDFCAT,IBDFIFN)) D
"RTN","IBDFLST",101,0)
 .S IBDFIFN=$P(IBDFNODE,"^",1)
"RTN","IBDFLST",102,0)
 .S IBDFCODE=$P(IBDFNODE,"^",2)
"RTN","IBDFLST",103,0)
 .S IBDFCAT=$P(IBDFNODE,"^",3)
"RTN","IBDFLST",104,0)
 .S IBDFDESC=$P(IBDFNODE,"^",4)
"RTN","IBDFLST",105,0)
 .D:'$D(IBDFC(IBDFCAT)) HEADER^IBDFLST1 D SET
"RTN","IBDFLST",106,0)
 Q
"RTN","IBDFLST",107,0)
 ;
"RTN","IBDFLST",108,0)
 ;
"RTN","IBDFLST",109,0)
SET ;  -- Set up list array
"RTN","IBDFLST",110,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFLST",111,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFLST",112,0)
 S X=""
"RTN","IBDFLST",113,0)
 S IBDFVAL=$J(IBDCNT1_")",7)
"RTN","IBDFLST",114,0)
 S X=$$SETSTR(IBDFVAL,X,1,7)
"RTN","IBDFLST",115,0)
 S IBDFVAL=IBDFCODE
"RTN","IBDFLST",116,0)
 S X=$$SETSTR(IBDFVAL,X,9,8)
"RTN","IBDFLST",117,0)
 S IBDFVAL=IBDFDESC
"RTN","IBDFLST",118,0)
 S X=$$SETSTR(IBDFVAL,X,19,20)
"RTN","IBDFLST",119,0)
 S IBDFVAL=IBDFCAT
"RTN","IBDFLST",120,0)
 S X=$$SETSTR(IBDFVAL,X,41,20)
"RTN","IBDFLST",121,0)
 ;
"RTN","IBDFLST",122,0)
 ;
"RTN","IBDFLST",123,0)
TMP ; -- Set up Array
"RTN","IBDFLST",124,0)
 S ^TMP("IBDCODE",$J,IBDCNT,0)=$S($G(IBDFDIS)["ICD9":X,$G(IBDFDIS)["ICD10":X,1:$$LOWER^VALM1(X))
"RTN","IBDFLST",125,0)
 S ^TMP("IBDCODE",$J,"IDX",VALMCNT,IBDCNT1)=""
"RTN","IBDFLST",126,0)
 S ^TMP("CODEIDX",$J,IBDCNT1)=VALMCNT_"^"_IBDFIFN_"^"_IBDFCODE_"^"_IBDFCAT_"^"_IBDFDESC
"RTN","IBDFLST",127,0)
 Q
"RTN","IBDFLST",128,0)
 ;
"RTN","IBDFLST",129,0)
 ;
"RTN","IBDFLST",130,0)
ALPHA ;  - Alphabetize by category
"RTN","IBDFLST",131,0)
 S ^TMP("IBDALPHA",$J,IBDFCAT,IBDFIFN)=IBDFIFN_"^"_IBDFCODE_"^"_IBDFCAT_"^"_IBDFDESC
"RTN","IBDFLST",132,0)
 Q
"RTN","IBDFLST",133,0)
 ;
"RTN","IBDFLST",134,0)
 ;
"RTN","IBDFLST",135,0)
QUIT ;  -- Kill variables and reset to last display if no change has been taken place.
"RTN","IBDFLST",136,0)
 ;
"RTN","IBDFLST",137,0)
 ;
"RTN","IBDFLST",138,0)
EXIT K ^TMP("IBDCODE",$J),^TMP("CODEIDX",$J),^TMP("IBDALPHA",$J),^TMP("IBDICD9",$J),^TMP("IBDICD10",$J)
"RTN","IBDFLST",139,0)
 K ^TMP("IBDMSG9"),^TMP("IBDMSG10")
"RTN","IBDFLST",140,0)
 K IBDFC,IBDFTYP,IBDFCNT1,IBDCAT
"RTN","IBDFLST",141,0)
 Q
"RTN","IBDFLST",142,0)
 ;
"RTN","IBDFLST",143,0)
 ;
"RTN","IBDFLST",144,0)
JUMP ; -- Jump action to display a specific category on the screen.
"RTN","IBDFLST",145,0)
 D FULL^VALM1
"RTN","IBDFLST",146,0)
 I $D(XQORNOD(0)),$P(XQORNOD(0),"^",4)]"" S X=$P(XQORNOD(0),"^",4) S X=$P(X,"=",2) I X]"" D:X?1.6N JSEL S DIC=$S(IBDFDIS="ICD9":"^ICM(",1:"^DIC(81.1,"),DIC(0)="QEZ" D ^DIC K DIC G:Y<0 JMP S Y=+Y D JUMP1 Q
"RTN","IBDFLST",147,0)
JMP S DIC=$S(IBDFDIS="ICD9":"^ICM(",1:"^DIC(81.1,"),DIC(0)="AEMN",DIC("A")="Select "_$S(IBDFDIS="ICD9":"ICD9",1:"CPT")_" category you wish to move to: "
"RTN","IBDFLST",148,0)
 D ^DIC K DIC
"RTN","IBDFLST",149,0)
 I X["^" S VALMBG=1,VALMBCK="R" Q
"RTN","IBDFLST",150,0)
 ;
"RTN","IBDFLST",151,0)
 ;
"RTN","IBDFLST",152,0)
JUMP1 I Y<0 G JUMP
"RTN","IBDFLST",153,0)
 N IBDFCAT
"RTN","IBDFLST",154,0)
 S IBDFCAT=$S(IBDFDIS="ICD9":$P(^ICM(+Y,0),"^",1),1:$P(^DIC(81.1,+Y,0),"^",1))
"RTN","IBDFLST",155,0)
 I '$D(IBDFC(IBDFCAT)) W !!,"There is no data listed for this Clinic Group" G JMP
"RTN","IBDFLST",156,0)
 S VALMBG=+IBDFC(IBDFCAT) S VALMBCK="R" Q
"RTN","IBDFLST",157,0)
 Q
"RTN","IBDFLST",158,0)
 ;
"RTN","IBDFLST",159,0)
 ;
"RTN","IBDFLST",160,0)
JSEL ; -- Convert number selected to name
"RTN","IBDFLST",161,0)
 S IBDVALM=X I $D(^TMP("CGIDX",$J,IBDVALM)) S X=$P(^TMP("CGIDX",$J,IBDVALM),"^",2),X=$P(^IBD(357.99,X,0),"^",1)
"RTN","IBDFLST",162,0)
 Q
"RTN","IBDFLST",163,0)
HLP ; -- help code
"RTN","IBDFLST",164,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBDFLST",165,0)
 Q
"RTN","IBDFLST",166,0)
 ;
"RTN","IBDFLST",167,0)
 ;NEW CODE
"RTN","IBDFLST",168,0)
 ; ICD-9 ICR 2051/5745 (by subscription) 
"RTN","IBDFLST",169,0)
ICD9LST ;
"RTN","IBDFLST",170,0)
 N IBDSCREN
"RTN","IBDFLST",171,0)
 K ^TMP("IBDICD9",$J)
"RTN","IBDFLST",172,0)
 S IBDSCREN="N ICD S ICD=$$ICDDX^ICDEX(+Y,$G(DT),1,""I"") I $P(ICD,U,10)=""0"",$P(ICD,U,12)?7N,$P(ICD,U,20)=1 S ^TMP(""IBDICD9"",$J,""DILIST"",""ICD"",+Y)=ICD"
"RTN","IBDFLST",173,0)
 D LIST^DIC(80,,,,,,,,IBDSCREN,,"^TMP(""IBDICD9"",$J)","^TMP(""IBDMSG9"",$J)")
"RTN","IBDFLST",174,0)
 Q
"RTN","IBDFLST",175,0)
 ;;
"RTN","IBDFLST",176,0)
 ; ICD-10 ICR 2051/5745 (by subscription) 
"RTN","IBDFLST",177,0)
 ;This returns no entries since there are no invalid ICD-10 codes
"RTN","IBDFLST",178,0)
ICD10LST ;
"RTN","IBDFLST",179,0)
 N IBDSCREN
"RTN","IBDFLST",180,0)
 K ^TMP("IBDICD10",$J)
"RTN","IBDFLST",181,0)
 S IBDSCREN="N STATUS S STATUS=$$STATCHK^IBDUTICD(""10D"",+Y,$G(DT)) I STATUS=0!(STATUS=2) N ICD S ICD=$$ICDDATA^ICDXCODE(""10D"",+Y,$G(DT)) I $P(ICD,U,20)=30 S ^TMP(""IBDICD10"",$J,""DILIST"",""ICD"",+Y)=ICD"
"RTN","IBDFLST",182,0)
 D LIST^DIC(80,,,,,,,,IBDSCREN,,"^TMP(""IBDICD10"",$J)","^TMP(""IBDMSG10"",$J)")
"RTN","IBDFLST",183,0)
 Q
"RTN","IBDFLST",184,0)
 ;IBDFLST
"RTN","IBDFLST1")
0^51^B2883654^B2836396
"RTN","IBDFLST1",1,0)
IBDFLST1 ;ALM/MAF - Maintenance Utility Invalid Codes List - MAY 17 1995
"RTN","IBDFLST1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;APR 24, 1997;Build 80
"RTN","IBDFLST1",3,0)
 ;
"RTN","IBDFLST1",4,0)
 ;
"RTN","IBDFLST1",5,0)
HEADER ;  -- Set up header line for the display
"RTN","IBDFLST1",6,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFLST1",7,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFLST1",8,0)
 S X=""
"RTN","IBDFLST1",9,0)
 S IBDFC(IBDFCAT)=IBDCNT_"^"_IBDFIFN
"RTN","IBDFLST1",10,0)
 S X=$$SETSTR(" ",X,1,3) D TMP
"RTN","IBDFLST1",11,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFLST1",12,0)
 S IBDVAL=IBDFCAT
"RTN","IBDFLST1",13,0)
 S IBDVAL1=$L(IBDVAL) S IBDVAL1=(80-IBDVAL1)/2 S IBDVAL1=IBDVAL1\1 S X=$$SETSTR(" ",X,1,IBDVAL1)
"RTN","IBDFLST1",14,0)
 S X=$$SETSTR(IBDVAL,X,IBDVAL1,25) D TMP,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
"RTN","IBDFLST1",15,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFLST1",16,0)
 S X=$$SETSTR(" ",X,1,3) D TMP
"RTN","IBDFLST1",17,0)
 S IBDCNT1=IBDCNT1-1
"RTN","IBDFLST1",18,0)
 Q
"RTN","IBDFLST1",19,0)
 ;
"RTN","IBDFLST1",20,0)
 ;
"RTN","IBDFLST1",21,0)
SETSTR(S,V,X,L) ; -- insert text(S) into variable(V)
"RTN","IBDFLST1",22,0)
 ;    S := string
"RTN","IBDFLST1",23,0)
 ;    V := destination
"RTN","IBDFLST1",24,0)
 ;    X := @ col X
"RTN","IBDFLST1",25,0)
 ;    L := # of chars
"RTN","IBDFLST1",26,0)
 ;
"RTN","IBDFLST1",27,0)
 Q $E(V_$J("",X-1),1,X-1)_$E(S_$J("",L),1,L)_$E(V,X+L,999)
"RTN","IBDFLST1",28,0)
 ;
"RTN","IBDFLST1",29,0)
 ;
"RTN","IBDFLST1",30,0)
TMP ; -- Set up Array
"RTN","IBDFLST1",31,0)
 S ^TMP("IBDCODE",$J,IBDCNT,0)=$$LOWER^VALM1(X),^TMP("IBDCODE",$J,"IDX",VALMCNT,IBDCNT1)=""
"RTN","IBDFLST1",32,0)
 S ^TMP("CODEIDX",$J,IBDCNT1)=VALMCNT_"^"_IBDFIFN_"^"_IBDFCODE_"^"_IBDFCAT_"^"_IBDFDESC
"RTN","IBDFLST1",33,0)
 Q
"RTN","IBDFLST1",34,0)
 ;
"RTN","IBDFLST1",35,0)
 ;  -- Help code for display choices
"RTN","IBDFLST1",36,0)
HELP1 W !!,"Choose a number or first initial :" F K=2:1:4 W !?15,$P(Z,"^",K)
"RTN","IBDFLST1",37,0)
 W ! Q
"RTN","IBDFLST1",38,0)
 ;
"RTN","IBDFLST1",39,0)
 ;  -- Selections listed
"RTN","IBDFLST1",40,0)
ZSET1 S Z="^1 [C]PT^2 [I]CD9^3 [V]ISIT^" Q
"RTN","IBDFLST1",41,0)
 ;
"RTN","IBDFLST1",42,0)
 ;
"RTN","IBDFN12")
0^7^B12645888^B9858869
"RTN","IBDFN12",1,0)
IBDFN12 ;ALB/CJM - ENCOUNTER FORM - SELECTORS ;05/10/95
"RTN","IBDFN12",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**12,38,40,51,63**;APR 24, 1997;Build 80
"RTN","IBDFN12",3,0)
 ;
"RTN","IBDFN12",4,0)
 ;
"RTN","IBDFN12",5,0)
LOOKUP(FILE,SCREEN,X,NODE) ;
"RTN","IBDFN12",6,0)
 ; -- lookup X in file using SCREEN
"RTN","IBDFN12",7,0)
 ; -- kills X if lookup not successful, else sets X to the ien and returns NODE as the 0 node
"RTN","IBDFN12",8,0)
 ; -- pass X and NODE by reference
"RTN","IBDFN12",9,0)
 ;
"RTN","IBDFN12",10,0)
 I +$G(FILE)<1 K X Q
"RTN","IBDFN12",11,0)
 N Y
"RTN","IBDFN12",12,0)
 S (NODE,Y)=""
"RTN","IBDFN12",13,0)
 K DIC S DIC=FILE,DIC("S")=SCREEN
"RTN","IBDFN12",14,0)
 S DIC(0)="EMQZ"
"RTN","IBDFN12",15,0)
 I $D(^DIC(FILE)) D ^DIC K DIC
"RTN","IBDFN12",16,0)
 I +Y>0 D
"RTN","IBDFN12",17,0)
 .S X=Y,NODE=Y(0)
"RTN","IBDFN12",18,0)
 E  K X
"RTN","IBDFN12",19,0)
 Q
"RTN","IBDFN12",20,0)
 ;
"RTN","IBDFN12",21,0)
SLCTCPT(X) ;for CPT codes
"RTN","IBDFN12",22,0)
 ;pass X by reference
"RTN","IBDFN12",23,0)
 ;example of use: D SLCTCPT^IBDFN12(.X)
"RTN","IBDFN12",24,0)
 ;
"RTN","IBDFN12",25,0)
 N NODE,SCRN
"RTN","IBDFN12",26,0)
 ;;D LOOKUP(81,"I '$P(^(0),U,4)",.X,.NODE)
"RTN","IBDFN12",27,0)
 ;
"RTN","IBDFN12",28,0)
 ;List only active code. (CSV)
"RTN","IBDFN12",29,0)
 S SCRN="I $P($$CPT^ICPTCOD(Y),U,7)=1" ;Check status for CPT (CSV)
"RTN","IBDFN12",30,0)
 D LOOKUP(81,SCRN,.X,.NODE)
"RTN","IBDFN12",31,0)
 I $D(X) S IBLABEL=$P(NODE,"^",2),(IBID,X)=$P(NODE,"^",1)
"RTN","IBDFN12",32,0)
 Q
"RTN","IBDFN12",33,0)
 ;
"RTN","IBDFN12",34,0)
SLCTDX10(X) ;
"RTN","IBDFN12",35,0)
 ;Get ICD-10 code.
"RTN","IBDFN12",36,0)
 N IBDCODE
"RTN","IBDFN12",37,0)
 I $G(X)="" K X Q
"RTN","IBDFN12",38,0)
 I X["?" D INPHLP^IBDLXDG K X Q
"RTN","IBDFN12",39,0)
 D SETPARAM^IBDLXDG(.IBDPARAM)
"RTN","IBDFN12",40,0)
 S IBDCODE=$$LEXICD10^IBDLXDG(X,$$ICD10DT^IBDUTICD(DT),.IBDPARAM)
"RTN","IBDFN12",41,0)
 I IBDCODE="" W !!,IBDPARAM("NO DATA FOUND"),!,IBDPARAM("NO DATA FOUND 2"),! K X Q
"RTN","IBDFN12",42,0)
 I IBDCODE=-1!(IBDCODE=-2)!(IBDCODE=-3)!(IBDCODE=-4) K X Q  ;Timed out or was aborted.
"RTN","IBDFN12",43,0)
 S X=$P($P(IBDCODE,U),";",2)
"RTN","IBDFN12",44,0)
 ;
"RTN","IBDFN12",45,0)
 Q
"RTN","IBDFN12",46,0)
SLCTDX(X) ;for ICD9 diagnosis codes
"RTN","IBDFN12",47,0)
 ;pass X by reference
"RTN","IBDFN12",48,0)
 ;example of use: D SLCTICD^IBDFN12(.X)
"RTN","IBDFN12",49,0)
 ;
"RTN","IBDFN12",50,0)
 N NODE,SCRN
"RTN","IBDFN12",51,0)
 ;;D LOOKUP(80,"I '$P(^(0),U,9)",.X,.NODE)
"RTN","IBDFN12",52,0)
 ;
"RTN","IBDFN12",53,0)
 ;List only active code. (CSV)
"RTN","IBDFN12",54,0)
 S SCRN="I $P($$ICDDX^ICDCODE(Y),U,10)=1" ;Check status for ICD (CSV)
"RTN","IBDFN12",55,0)
 D LOOKUP(80,SCRN,.X,.NODE)
"RTN","IBDFN12",56,0)
 I $D(X) S IBLABEL=$P(NODE,"^",3),(IBID,X)=$P(NODE,"^",1)
"RTN","IBDFN12",57,0)
 Q
"RTN","IBDFN12",58,0)
 ;
"RTN","IBDFN12",59,0)
SLCTVST(X) ;for VISIT TYPE codes
"RTN","IBDFN12",60,0)
 ;pass X by reference
"RTN","IBDFN12",61,0)
 ;example of use: D SLCTVST^IBDFN12(.X)
"RTN","IBDFN12",62,0)
 ;
"RTN","IBDFN12",63,0)
 N NODE,SCREEN
"RTN","IBDFN12",64,0)
 ;;D LOOKUP(357.69,"I '$P(^(0),U,4)",.X,.NODE)
"RTN","IBDFN12",65,0)
 ;
"RTN","IBDFN12",66,0)
 ;List only active code. (CSV)
"RTN","IBDFN12",67,0)
 S SCRN="I $P($$CPT^ICPTCOD(Y),U,7)=1" ;Check status for CPT (CSV)
"RTN","IBDFN12",68,0)
 D LOOKUP(357.69,SCRN,.X,.NODE)
"RTN","IBDFN12",69,0)
 ;
"RTN","IBDFN12",70,0)
 ;; --change to api cpt ; dhh
"RTN","IBDFN12",71,0)
 I $G(X) S NODE=$$CPT^ICPTCOD(+NODE),NODE=$G(NODE),(IBID,X)=$P(NODE,"^",2),IBLABEL=$P(NODE,"^",3)
"RTN","IBDFN12",72,0)
 Q
"RTN","IBDFN12",73,0)
 ;
"RTN","IBDFN12",74,0)
SLCTED(X) ;for Education Topics
"RTN","IBDFN12",75,0)
 ;pass X by reference
"RTN","IBDFN12",76,0)
 ;example of use: D SLCTED^IBDFN12(.X)
"RTN","IBDFN12",77,0)
 ;
"RTN","IBDFN12",78,0)
 N NODE
"RTN","IBDFN12",79,0)
 D LOOKUP(9999999.09,"",.X,.NODE)
"RTN","IBDFN12",80,0)
 I $D(X) S IBLABEL=$P(NODE,"^"),IBID=+X,X=IBLABEL
"RTN","IBDFN12",81,0)
 Q
"RTN","IBDFN12",82,0)
 ;
"RTN","IBDFN12",83,0)
SLCTIMM(X) ;for Immunizations
"RTN","IBDFN12",84,0)
 ;pass X by reference
"RTN","IBDFN12",85,0)
 ;example of use: D SLCTIMM^IBDFN12(.X)
"RTN","IBDFN12",86,0)
 ;
"RTN","IBDFN12",87,0)
 N NODE
"RTN","IBDFN12",88,0)
 D LOOKUP(9999999.14,"",.X,.NODE)
"RTN","IBDFN12",89,0)
 I $D(X) S IBLABEL=$P(NODE,"^",2),IBID=+X,X=IBLABEL
"RTN","IBDFN12",90,0)
 Q
"RTN","IBDFN12",91,0)
 ;
"RTN","IBDFN12",92,0)
SLCTEX(X) ;for Exams
"RTN","IBDFN12",93,0)
 ;pass X by reference
"RTN","IBDFN12",94,0)
 ;example of use: D SLCTEX^IBDFN12(.X)
"RTN","IBDFN12",95,0)
 ;
"RTN","IBDFN12",96,0)
 N NODE
"RTN","IBDFN12",97,0)
 D LOOKUP(9999999.15,"",.X,.NODE)
"RTN","IBDFN12",98,0)
 I $D(X) S IBLABEL=$P(NODE,"^"),IBID=+X,X=IBLABEL
"RTN","IBDFN12",99,0)
 Q
"RTN","IBDFN12",100,0)
 ;
"RTN","IBDFN12",101,0)
SLCTSKN(X) ;for Skin Tests
"RTN","IBDFN12",102,0)
 ;pass X by reference
"RTN","IBDFN12",103,0)
 ;example of use: D SLCTSKN^IBDFN12(.X)
"RTN","IBDFN12",104,0)
 ;
"RTN","IBDFN12",105,0)
 N NODE
"RTN","IBDFN12",106,0)
 D LOOKUP(9999999.28,"",.X,.NODE)
"RTN","IBDFN12",107,0)
 I $D(X) S IBLABEL=$P(NODE,"^"),IBID=+X,X=IBLABEL
"RTN","IBDFN12",108,0)
 Q
"RTN","IBDFN12",109,0)
 ;
"RTN","IBDFN12",110,0)
SLCTHF(X) ;for Health Factors
"RTN","IBDFN12",111,0)
 ;pass X by reference
"RTN","IBDFN12",112,0)
 ;example of use: D SLCTHF^IBDFN12(.X)
"RTN","IBDFN12",113,0)
 ;
"RTN","IBDFN12",114,0)
 N NODE
"RTN","IBDFN12",115,0)
 D LOOKUP(9999999.64,"I $P(^(0),U,10)=""F"",'$P(^(0),U,11)",.X,.NODE)
"RTN","IBDFN12",116,0)
 I $D(X) S IBLABEL=$P(NODE,"^"),IBID=+X,X=IBLABEL
"RTN","IBDFN12",117,0)
 Q
"RTN","IBDFN12",118,0)
SLCTTR(X) ;for Treatments
"RTN","IBDFN12",119,0)
 ;pass X by reference
"RTN","IBDFN12",120,0)
 ;example of use: D SLCTTR^IBDFN12(.X)
"RTN","IBDFN12",121,0)
 ;
"RTN","IBDFN12",122,0)
 N NODE
"RTN","IBDFN12",123,0)
 D LOOKUP(9999999.17,"",.X,.NODE)
"RTN","IBDFN12",124,0)
 I $D(X) S IBLABEL=$P(NODE,"^"),IBID=+X,X=IBLABEL
"RTN","IBDFN12",125,0)
 Q
"RTN","IBDFN12",126,0)
 ;
"RTN","IBDFN12",127,0)
SLCTYN(X) ;for selecting YES or NO
"RTN","IBDFN12",128,0)
 ;
"RTN","IBDFN12",129,0)
 I "Yy"[$E(X) S X="YES",IBID=1 Q
"RTN","IBDFN12",130,0)
 I "Nn"[$E(X) S X="NO",IBID=0 Q
"RTN","IBDFN12",131,0)
 W "Enter YES or NO."
"RTN","IBDFN12",132,0)
 K X
"RTN","IBDFN12",133,0)
 Q
"RTN","IBDFN12",134,0)
 ;
"RTN","IBDFN12",135,0)
SLCTCLS(PI,X) ;for visit classification
"RTN","IBDFN12",136,0)
 ;pass X by reference
"RTN","IBDFN12",137,0)
 ;*NOTE: if interactive sets IBQUAL to the qualifier, IBLABEL to the recommended label, for use in the input template
"RTN","IBDFN12",138,0)
 ;example of use: D INPUTCLS^IBDFN12(PI,.X)
"RTN","IBDFN12",139,0)
 ;
"RTN","IBDFN12",140,0)
 N NODE
"RTN","IBDFN12",141,0)
 D LOOKUP(357.98,"I $$DQGOOD^IBDFU9(PI,Y)",.X,.NODE)
"RTN","IBDFN12",142,0)
 I $D(X) S IBID="",IBLABEL=$P(NODE,"^",3),IBQUAL=+X,X=$P(NODE,"^")
"RTN","IBDFN12",143,0)
 Q
"RTN","IBDFN14")
0^20^B13316681^B8732971
"RTN","IBDFN14",1,0)
IBDFN14 ;ALB/CMR - ENCOUNTER FORM - OUTPUTS ;01/04/96
"RTN","IBDFN14",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**12,38,51,63**;APR 24, 1997;Build 80
"RTN","IBDFN14",3,0)
 ;
"RTN","IBDFN14",4,0)
 ;
"RTN","IBDFN14",5,0)
CPT(X) ; -- return external value, descr and active flag for CPT code
"RTN","IBDFN14",6,0)
 ; -- X passed equal to ien for cpt code
"RTN","IBDFN14",7,0)
 ;
"RTN","IBDFN14",8,0)
 ;    input: ien of file #81
"RTN","IBDFN14",9,0)
 ;    output: IBID = cpt code (.01 field of file #81)
"RTN","IBDFN14",10,0)
 ;            IBLABEL = description fo cpt code
"RTN","IBDFN14",11,0)
 ;            IBINACT = null if active
"RTN","IBDFN14",12,0)
 ;                      1 if inactive
"RTN","IBDFN14",13,0)
 ;
"RTN","IBDFN14",14,0)
 Q:'X
"RTN","IBDFN14",15,0)
 N IBDFNODE
"RTN","IBDFN14",16,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",17,0)
 S IBDFNODE=$$CPT^ICPTCOD(X)
"RTN","IBDFN14",18,0)
 Q:+IBDFNODE=-1
"RTN","IBDFN14",19,0)
 S IBID=$P(IBDFNODE,"^",2)
"RTN","IBDFN14",20,0)
 S IBLABEL=$P(IBDFNODE,"^",3)
"RTN","IBDFN14",21,0)
 S IBINACT=$S($P(IBDFNODE,"^",7)=1:"",1:1)
"RTN","IBDFN14",22,0)
 Q
"RTN","IBDFN14",23,0)
DX(X) ; -- return external value, descr and active flag for ICD9 diagnosis
"RTN","IBDFN14",24,0)
 ; -- pass X equal to ien for icd9 code
"RTN","IBDFN14",25,0)
 ;
"RTN","IBDFN14",26,0)
 Q:'X
"RTN","IBDFN14",27,0)
 N ICDNODE,IBDSTAT
"RTN","IBDFN14",28,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",29,0)
 ;;I $G(^ICD9(X,0))]"" S IBID=$P(^(0),"^"),IBLABEL=$P(^(0),"^",3),IBINACT=$P(^(0),"^",9)
"RTN","IBDFN14",30,0)
 S ICDNODE=$$ICDDX^ICDCODE(X)
"RTN","IBDFN14",31,0)
 Q:+ICDNODE=-1
"RTN","IBDFN14",32,0)
 S IBID=$P(ICDNODE,U,2)     ;ICD code
"RTN","IBDFN14",33,0)
 S IBLABEL=$P(ICDNODE,U,4)  ;ICD description
"RTN","IBDFN14",34,0)
 S IBDSTAT=$P(ICDNODE,U,10)  ;ICD status, 0-Not Active, 1-Acitve
"RTN","IBDFN14",35,0)
 ;
"RTN","IBDFN14",36,0)
 ;Set inactive flag to 1, if the ICD code is not active (STATUS=0)
"RTN","IBDFN14",37,0)
 I IBDSTAT=0 S IBINACT=1
"RTN","IBDFN14",38,0)
 Q
"RTN","IBDFN14",39,0)
DX10(X) ; -- return external value, descr and active flag for ICD-10 diagnosis
"RTN","IBDFN14",40,0)
 ; -- pass X equal to ien for ICD-10 code
"RTN","IBDFN14",41,0)
 ;
"RTN","IBDFN14",42,0)
 Q:'X
"RTN","IBDFN14",43,0)
 N ICDNODE,IBDSTAT
"RTN","IBDFN14",44,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",45,0)
 ;;I $G(^ICD9(X,0))]"" S IBID=$P(^(0),"^"),IBLABEL=$P(^(0),"^",3),IBINACT=$P(^(0),"^",9)
"RTN","IBDFN14",46,0)
 S ICDNODE=$$ICDDATA^ICDXCODE("10D",X,DT)
"RTN","IBDFN14",47,0)
 Q:+ICDNODE<1
"RTN","IBDFN14",48,0)
 S IBID=$P(ICDNODE,U,2)     ;ICD code
"RTN","IBDFN14",49,0)
 S IBLABEL=$P(ICDNODE,U,4)  ;ICD description
"RTN","IBDFN14",50,0)
 S IBDSTAT=$P(ICDNODE,U,10)  ;ICD status, 0-Not Active, 1-Acitve
"RTN","IBDFN14",51,0)
 ;
"RTN","IBDFN14",52,0)
 ;Set inactive flag to 1, if the ICD code is not active (STATUS=0)
"RTN","IBDFN14",53,0)
 I IBDSTAT=0 S IBINACT=1
"RTN","IBDFN14",54,0)
 Q
"RTN","IBDFN14",55,0)
VST(X) ; -- return external value, descr and active flag for VISIT TYPE 
"RTN","IBDFN14",56,0)
 ; -- pass X equal to ien for visit type
"RTN","IBDFN14",57,0)
 ;
"RTN","IBDFN14",58,0)
 Q:'X
"RTN","IBDFN14",59,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",60,0)
 ;; --change to api cpt ; dhh
"RTN","IBDFN14",61,0)
 I $G(^IBE(357.69,X,0))]"",+$$CPT^ICPTCOD(X)'=-1 D
"RTN","IBDFN14",62,0)
 .S IBID=$P(^IBE(357.69,X,0),"^"),IBLABEL=$P(^IBE(357.69,X,0),"^",3)
"RTN","IBDFN14",63,0)
 .S HDR=$P(^IBE(357.69,X,0),"^",2) I $L(HDR_IBLABEL)<75 S IBLABEL=HDR_" "_IBLABEL
"RTN","IBDFN14",64,0)
 .K HDR
"RTN","IBDFN14",65,0)
 .;; --change to api cpt ; dhh
"RTN","IBDFN14",66,0)
 .S IBINACT=$S($P(^IBE(357.69,X,0),"^",4):1,$P($$CPT^ICPTCOD(X),"^",7)=0:1,1:"")
"RTN","IBDFN14",67,0)
 Q
"RTN","IBDFN14",68,0)
ED(X) ; -- return descr and active flag for education topics
"RTN","IBDFN14",69,0)
 ; -- pass X equal to ien for education topic
"RTN","IBDFN14",70,0)
 ;
"RTN","IBDFN14",71,0)
 Q:'X
"RTN","IBDFN14",72,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",73,0)
 I $G(^AUTTEDT(X,0))]"" S IBID="ED TOPIC",IBLABEL=$P(^AUTTEDT(X,0),"^"),IBINACT=$P(^AUTTEDT(X,0),"^",3)
"RTN","IBDFN14",74,0)
 Q
"RTN","IBDFN14",75,0)
EXAM(X) ; -- return descr and active flag for exam
"RTN","IBDFN14",76,0)
 ; -- pass X equal to ien for exam
"RTN","IBDFN14",77,0)
 ;
"RTN","IBDFN14",78,0)
 Q:'X
"RTN","IBDFN14",79,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",80,0)
 I $G(^AUTTEXAM(X,0))]"" S IBID="EXAM",IBLABEL=$P(^AUTTEXAM(X,0),"^"),IBINACT=$P(^AUTTEXAM(X,0),"^",4)
"RTN","IBDFN14",81,0)
 Q
"RTN","IBDFN14",82,0)
HF(X) ; -- return descr and active flag for health factor
"RTN","IBDFN14",83,0)
 ; -- pass X equal to ien for health factor
"RTN","IBDFN14",84,0)
 ;
"RTN","IBDFN14",85,0)
 Q:'X
"RTN","IBDFN14",86,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",87,0)
 I $G(^AUTTHF(X,0))]"" S IBID="FACTOR",IBLABEL=$P(^AUTTHF(X,0),"^"),IBINACT=$P(^AUTTHF(X,0),"^",11)
"RTN","IBDFN14",88,0)
 Q
"RTN","IBDFN14",89,0)
 ;
"RTN","IBDFN14",90,0)
IMMUN(X) ; -- return descr and active flag for immunization
"RTN","IBDFN14",91,0)
 ; -- pass X equal to ien for immunization
"RTN","IBDFN14",92,0)
 ;
"RTN","IBDFN14",93,0)
 Q:'X
"RTN","IBDFN14",94,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",95,0)
 I $G(^AUTTIMM(X,0))]"" S IBID="IMMUN",IBLABEL=$P(^AUTTIMM(X,0),"^"),IBINACT=$P(^AUTTIMM(X,0),"^",7)
"RTN","IBDFN14",96,0)
 Q
"RTN","IBDFN14",97,0)
 ;
"RTN","IBDFN14",98,0)
TREAT(X) ; -- return descr and active flag for treatment
"RTN","IBDFN14",99,0)
 ; -- pass X equal to ien for TREATMENTS
"RTN","IBDFN14",100,0)
 ;
"RTN","IBDFN14",101,0)
 Q:'X
"RTN","IBDFN14",102,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",103,0)
 I $G(^AUTTTRT(X,0))]"" S IBID="TREATMENT",IBLABEL=$P(^AUTTTRT(X,0),"^"),IBINACT=$P(^AUTTTRT(X,0),"^",4)
"RTN","IBDFN14",104,0)
 Q
"RTN","IBDFN14",105,0)
 ;
"RTN","IBDFN14",106,0)
ST(X) ; -- return descr and active flag for immunization
"RTN","IBDFN14",107,0)
 ; -- pass X equal to ien for immunization
"RTN","IBDFN14",108,0)
 ;
"RTN","IBDFN14",109,0)
 Q:'X
"RTN","IBDFN14",110,0)
 S (IBID,IBLABEL,IBINACT)=""
"RTN","IBDFN14",111,0)
 I $G(^AUTTSK(X,0))]"" S IBID="SKIN TEST",IBLABEL=$P(^AUTTSK(X,0),"^"),IBINACT=$P(^AUTTSK(X,0),"^",3)
"RTN","IBDFN14",112,0)
 Q
"RTN","IBDFN14",113,0)
YN(X) ; -- return descr
"RTN","IBDFN14",114,0)
 ; -- pass X equal to 1 or 0
"RTN","IBDFN14",115,0)
 ;
"RTN","IBDFN14",116,0)
 Q:X']""
"RTN","IBDFN14",117,0)
 S IBID="VALUE"
"RTN","IBDFN14",118,0)
 S (IBLABEL,IBINACT)=""
"RTN","IBDFN14",119,0)
 I X S IBLABEL="YES" Q
"RTN","IBDFN14",120,0)
 S IBLABEL="NO" Q
"RTN","IBDFN14",121,0)
 Q
"RTN","IBDFN4")
0^1^B227563778^B13325324
"RTN","IBDFN4",1,0)
IBDFN4 ;ALB/CJM - ENCOUNTER FORM - (entry points for selection routines) ;5/21/93
"RTN","IBDFN4",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**38,51,64,63**;APR 24, 1997;Build 80
"RTN","IBDFN4",3,0)
 ;
"RTN","IBDFN4",4,0)
 ;
"RTN","IBDFN4",5,0)
CPT ;select ambulatory procedures
"RTN","IBDFN4",6,0)
 N NAME,CODE,SCREEN,IBDESCR,IBDESCLG,QUIT
"RTN","IBDFN4",7,0)
 S QUIT=0
"RTN","IBDFN4",8,0)
 S SCREEN="I $P($$CPT^ICPTCOD(Y),U,7)=1" ;List only active codes
"RTN","IBDFN4",9,0)
 K DIC S DIC=81,DIC(0)="AEMQZ",DIC("S")=SCREEN
"RTN","IBDFN4",10,0)
 I $D(^ICPT) D ^DIC K DIC I +Y>0 D
"RTN","IBDFN4",11,0)
 .;;change to api cpt;dhh
"RTN","IBDFN4",12,0)
 .S CODE=$P(Y(0),U)
"RTN","IBDFN4",13,0)
 .S CODE=$$CPT^ICPTCOD(CODE)
"RTN","IBDFN4",14,0)
 .I +CODE=-1 K @IBARY Q
"RTN","IBDFN4",15,0)
 .S NAME=$P(CODE,"^",3)
"RTN","IBDFN4",16,0)
 .S IBDESCLG=$$CPTD^ICPTCOD(+CODE,.IBCPTD)
"RTN","IBDFN4",17,0)
 .S IBDESCR=$G(IBCPTD(1))_" "_$G(IBCPTD(2))
"RTN","IBDFN4",18,0)
 .S @IBARY=$P(CODE,"^",2)_"^"_NAME_"^"_IBDESCR
"RTN","IBDFN4",19,0)
 E  K @IBARY ;kill either if file doesn't exist or nothing chosen
"RTN","IBDFN4",20,0)
 Q
"RTN","IBDFN4",21,0)
CPTSCRN ;This code is probably not called, but will modify to be safe.
"RTN","IBDFN4",22,0)
 S SCREEN="I $P($$CPT^ICPTCOD(Y),U,7)=1"
"RTN","IBDFN4",23,0)
 ;
"RTN","IBDFN4",24,0)
 ;don't ask the user about categories - it doesn't work well 
"RTN","IBDFN4",25,0)
 S @IBARY@("SCREEN")=SCREEN
"RTN","IBDFN4",26,0)
 Q
"RTN","IBDFN4",27,0)
 ;
"RTN","IBDFN4",28,0)
ICD9 ;select ICD-9 codes
"RTN","IBDFN4",29,0)
 N IBDX,CODE,SCREEN,IBDESCR,QUIT
"RTN","IBDFN4",30,0)
 S QUIT=0
"RTN","IBDFN4",31,0)
 S SCREEN="I $P($$ICDDX^ICDCODE(Y),U,10)=1" ;List only active codes
"RTN","IBDFN4",32,0)
 I $G(DIC("A"))="" S DIC("A")="SELECT ICD-9 DIAGNOSIS CODE NUMBER: "
"RTN","IBDFN4",33,0)
 S DIC=80,DIC(0)="AEMQZI",DIC("S")=SCREEN
"RTN","IBDFN4",34,0)
 D ^DIC K DIC I +Y>0 D
"RTN","IBDFN4",35,0)
 .S CODE=$P(Y(0),U),IBDX=$$GETIDX("ICD9",CODE,DT),IBDESCR=$$GETDSCR("ICD9",CODE,DT) ;(#10) DESCRIPTION in the old ICD9 DD
"RTN","IBDFN4",36,0)
 .S IBDX=$P(IBDX,U,2)
"RTN","IBDFN4",37,0)
 .S @IBARY=CODE_"^"_IBDX_"^"_IBDESCR
"RTN","IBDFN4",38,0)
 E  K @IBARY ;kill if either file doesn't exist or nothing chosen - this is how to let the encounter form utilities know nothing was selected
"RTN","IBDFN4",39,0)
 Q
"RTN","IBDFN4",40,0)
ICD9SCRN ;This code is probably not called, but will modify to be safe.
"RTN","IBDFN4",41,0)
 S SCREEN="I $P($$ICDDX^ICDCODE(Y),U,10)=1"
"RTN","IBDFN4",42,0)
 ;
"RTN","IBDFN4",43,0)
 S @IBARY@("SCREEN")=SCREEN
"RTN","IBDFN4",44,0)
 Q
"RTN","IBDFN4",45,0)
NULL ;returns NOTHING for selection
"RTN","IBDFN4",46,0)
 S @IBARY=""
"RTN","IBDFN4",47,0)
 Q
"RTN","IBDFN4",48,0)
 ;
"RTN","IBDFN4",49,0)
VSIT ; -- Select only visit cpt codes
"RTN","IBDFN4",50,0)
 N NAME,CODE,IBDESCR,QUIT,DIC,X,Y,IBHDR,IBTXT
"RTN","IBDFN4",51,0)
 S QUIT=0
"RTN","IBDFN4",52,0)
 ;
"RTN","IBDFN4",53,0)
 ;;S DIC="^IBE(357.69,",DIC(0)="AEMQZ",DIC("S")="I '$P(^(0),U,4)"
"RTN","IBDFN4",54,0)
 S DIC="^IBE(357.69,",DIC(0)="AEMQZ"
"RTN","IBDFN4",55,0)
 S DIC("S")="I $P($$CPT^ICPTCOD(Y),U,7)=1" ;List only active codes
"RTN","IBDFN4",56,0)
 D ^DIC K DIC I +Y>0 D
"RTN","IBDFN4",57,0)
 .;;----change to api cpt;dhh
"RTN","IBDFN4",58,0)
 .S CODE=$P(Y(0),U),IBHDR=$P(Y(0),U,2),IBTXT=$P(Y(0),U,3)
"RTN","IBDFN4",59,0)
 .S NODE=$$CPT^ICPTCOD(CODE)
"RTN","IBDFN4",60,0)
 .I +NODE=-1 S IBSNM="" Q
"RTN","IBDFN4",61,0)
 .S IBSNM=$P(NODE,U,3)
"RTN","IBDFN4",62,0)
 .S @IBARY=CODE_"^"_IBTXT_"^"_IBHDR_"^"_IBSNM
"RTN","IBDFN4",63,0)
 E  K @IBARY ;kill if nothing chosen
"RTN","IBDFN4",64,0)
 Q
"RTN","IBDFN4",65,0)
 ;
"RTN","IBDFN4",66,0)
PRVDR ;for selecting provider
"RTN","IBDFN4",67,0)
 D GETPRO^IBDF18B(IBCLINIC,IBARY)
"RTN","IBDFN4",68,0)
 Q
"RTN","IBDFN4",69,0)
 ;
"RTN","IBDFN4",70,0)
IBPFID ;for printing the form # assigned by form tracking
"RTN","IBDFN4",71,0)
 S @IBARY=$G(IBPFID)
"RTN","IBDFN4",72,0)
 Q
"RTN","IBDFN4",73,0)
 ;
"RTN","IBDFN4",74,0)
PCPR ; -- get primary care provider for a patient
"RTN","IBDFN4",75,0)
 S @IBARY=$P($$OUTPTPR^SDUTL3(DFN,DT),"^",2)
"RTN","IBDFN4",76,0)
 Q
"RTN","IBDFN4",77,0)
 ;
"RTN","IBDFN4",78,0)
PCTM ; -- get primary care team for a patient
"RTN","IBDFN4",79,0)
 S @IBARY=$P($$OUTPTTM^SDUTL3(DFN,DT),"^",2)
"RTN","IBDFN4",80,0)
 Q
"RTN","IBDFN4",81,0)
 ;
"RTN","IBDFN4",82,0)
SCCOND ; -- display sc conditions
"RTN","IBDFN4",83,0)
 Q:'$G(DFN)
"RTN","IBDFN4",84,0)
 D DIS^DGRPDB
"RTN","IBDFN4",85,0)
 W !
"RTN","IBDFN4",86,0)
 Q
"RTN","IBDFN4",87,0)
 ;
"RTN","IBDFN4",88,0)
 ;
"RTN","IBDFN4",89,0)
CPTMOD ;- Select active CPT Modifiers
"RTN","IBDFN4",90,0)
 ;- (used in selecting CPT Modifier(s) when creating the CPT Modifier
"RTN","IBDFN4",91,0)
 ;   Display ToolKit Block)
"RTN","IBDFN4",92,0)
 ;
"RTN","IBDFN4",93,0)
 N CODE,DIC,NAME,SCREEN
"RTN","IBDFN4",94,0)
 Q:$G(IBARY)=""
"RTN","IBDFN4",95,0)
 ;
"RTN","IBDFN4",96,0)
 ;- Screen out inactive CPT modifiers
"RTN","IBDFN4",97,0)
 ;;S SCREEN="I '$P(^(0),U,5)"
"RTN","IBDFN4",98,0)
 ;;I '$D(@IBARY@("SCREEN")) S @IBARY@("SCREEN")=SCREEN
"RTN","IBDFN4",99,0)
 ;
"RTN","IBDFN4",100,0)
 ;List only active modifiers
"RTN","IBDFN4",101,0)
 S SCREEN="I $P($$MOD^ICPTMOD(Y,""I""),U,7)=1"
"RTN","IBDFN4",102,0)
 S DIC=81.3
"RTN","IBDFN4",103,0)
 S DIC(0)="AEMQZ"
"RTN","IBDFN4",104,0)
 S DIC("S")=SCREEN
"RTN","IBDFN4",105,0)
 D ^DIC
"RTN","IBDFN4",106,0)
 I +Y>0 D
"RTN","IBDFN4",107,0)
 . ;- Use first 35 chars of modifier description
"RTN","IBDFN4",108,0)
 . S CODE=$P(Y(0),"^"),NAME=$E($P(Y(0),"^",2),1,35)
"RTN","IBDFN4",109,0)
 . S @IBARY=CODE_"^"_NAME
"RTN","IBDFN4",110,0)
 ;
"RTN","IBDFN4",111,0)
 ;- Kill if file doesn't exist or nothing chosen
"RTN","IBDFN4",112,0)
 E  K @IBARY
"RTN","IBDFN4",113,0)
 Q
"RTN","IBDFN4",114,0)
 ;------new code------
"RTN","IBDFN4",115,0)
 ; IBDSERCH 1=Wildcard Search, 2=Lexicon Search
"RTN","IBDFN4",116,0)
ICD10 ; Wildcard search for ICD-10 codes.
"RTN","IBDFN4",117,0)
 N DIR,%,IBDANS,IBDAUTO,IBDNEXT,IBDOUT,IBDTEXT,IBDWORD,IBDX,IBDY
"RTN","IBDFN4",118,0)
 ; IBDSERCH 1=Wildcard ICD code search, 2=Lexicon ICD code search
"RTN","IBDFN4",119,0)
 I '$D(IBDSERCH) S IBDSERCH=1 ;Set Wildcard ICD code search as default search.
"RTN","IBDFN4",120,0)
 I IBDSERCH=2 D LXSEARCH Q  ;Do Lexicon Partial Code ICD search.
"RTN","IBDFN4",121,0)
 ;Wildcard ICD code search.
"RTN","IBDFN4",122,0)
 K ^TMP("IBDFN4_ASSOCIATE_WCSEARCH",$J),^TMP("IBDFN4_ASSOCIATE",$J)
"RTN","IBDFN4",123,0)
 I $G(DIC("A"))="" K ^TMP("IBDFN4_WCSEARCH",$J)
"RTN","IBDFN4",124,0)
 ;I $G(DIC("A"))'="" W !
"RTN","IBDFN4",125,0)
 S IBDAUTO=0
"RTN","IBDFN4",126,0)
 S DIR("A")=$S($G(DIC("A"))'="":$TR(DIC("A"),":",""),1:"SELECT ICD-10 DIAGNOSIS CODE NUMBER")
"RTN","IBDFN4",127,0)
 S DIR(0)="FO^3:8"
"RTN","IBDFN4",128,0)
 S DIR("?")="Enter 3 to 8 characters or '??' for more help"
"RTN","IBDFN4",129,0)
 S DIR("??")="^D HELP^IBDFN4A"
"RTN","IBDFN4",130,0)
 D ^DIR K DIR
"RTN","IBDFN4",131,0)
 I Y="^"!(Y="")!($D(DTOUT)) K @IBARY Q
"RTN","IBDFN4",132,0)
 ;Do wildcard search.
"RTN","IBDFN4",133,0)
 S IBDANS=$P(Y,U)
"RTN","IBDFN4",134,0)
 I $G(DIC("A"))="" S IBDY=$$CODELIST^IBDUTICD("10D",IBDANS,"IBDFN4_WCSEARCH",DT,"",1)
"RTN","IBDFN4",135,0)
 I $G(DIC("A"))'="" S IBDY=$$CODELIST^IBDUTICD("10D",IBDANS,"IBDFN4_ASSOCIATE_WCSEARCH",DT,"",1)
"RTN","IBDFN4",136,0)
 I +IBDY<1 D 
"RTN","IBDFN4",137,0)
 .S IBDWORD=$P($P(IBDY,U,2)," ")
"RTN","IBDFN4",138,0)
 .S IBDWORD=$TR($E(IBDWORD,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$E(IBDWORD,2,99) ;Capitalize first character of text message.
"RTN","IBDFN4",139,0)
 .S $P(IBDY,U,2)=IBDWORD_" "_$P(IBDY," ",2,99)
"RTN","IBDFN4",140,0)
 .W !!,$P(IBDY,U,2)_"."
"RTN","IBDFN4",141,0)
 I +IBDY<1 G ICD10
"RTN","IBDFN4",142,0)
 I $P(IBDY,U,2)=0 D  G ICD10
"RTN","IBDFN4",143,0)
 .W !!,"No data found for selected search, please enter partial code'*' for"
"RTN","IBDFN4",144,0)
 .W !,"additional selections e.g. E11* .",!
"RTN","IBDFN4",145,0)
 ;Do wildcard selection for SECOND and THIRD associated ICD-10 codes.
"RTN","IBDFN4",146,0)
 S IBDOUT=0
"RTN","IBDFN4",147,0)
 I $G(DIC("A"))'="" K Y D ASSOCIAT(.Y,.IBDOUT) G:Y=0!(IBDOUT) ICD10 Q
"RTN","IBDFN4",148,0)
 I +IBDY'<1 D  ;
"RTN","IBDFN4",149,0)
 .S %=1
"RTN","IBDFN4",150,0)
 .I $P(IBDY,U,2)>1 D
"RTN","IBDFN4",151,0)
 ..W !!,"There are "_$P(IBDY,U,2)_" ICD-10-CM diagnosis codes that begin with "_IBDANS_". Do you wish to"
"RTN","IBDFN4",152,0)
 ..W !,"automatically add all of these diagnosis codes to this block"
"RTN","IBDFN4",153,0)
 ..S %=2 D YN^DICN
"RTN","IBDFN4",154,0)
 .I %=1 S IBDAUTO=1
"RTN","IBDFN4",155,0)
 .I ($G(DTOUT)) Q
"RTN","IBDFN4",156,0)
 .I %=-1!(%=2) W !!,"Continue to select from the (# of items in list) ICD-10 diagnoses" S %=2 D YN^DICN I $G(DTOUT)!(%=-1)!(%=2) Q
"RTN","IBDFN4",157,0)
 .D WCSEARCH(IBDAUTO)  ;Wildcard Search
"RTN","IBDFN4",158,0)
 I '$D(^TMP("IBDFN4_DISPLAY",$J)) K ^TMP("IBDFN4_SELECTED",$J),@IBARY G ICD10
"RTN","IBDFN4",159,0)
 D DISPLAY
"RTN","IBDFN4",160,0)
 K @IBARY,^TMP("IBDFN4_SELECTED",$J),^TMP("IBDFN4_DISPLAY",$J),^TMP("IBDFN4_WCSEARCH",$J),^TMP("IBDFN4_ASSOCIATE",$J)
"RTN","IBDFN4",161,0)
 K ^TMP("IBDFN4_ASSOCIATE_WCSEARCH",$J)
"RTN","IBDFN4",162,0)
 I +IBDY W !,"Now for another!"
"RTN","IBDFN4",163,0)
 G ICD10
"RTN","IBDFN4",164,0)
 Q
"RTN","IBDFN4",165,0)
 ;
"RTN","IBDFN4",166,0)
 ;Loop through ^TMP global created by wildcard search.
"RTN","IBDFN4",167,0)
WCSEARCH(IBDAUTO) ;
"RTN","IBDFN4",168,0)
 ;
"RTN","IBDFN4",169,0)
 N IBDBEGN,IBDCNT,IBDCODE,IBDCONTU,IBDESCR,IBDNOE,IBDNDEX,IBDNO,IBDQUIT,IBDSEL,IBDX
"RTN","IBDFN4",170,0)
 I 'IBDAUTO W !
"RTN","IBDFN4",171,0)
 S (IBDNDEX,IBDCNT,IBDQUIT,IBDBEGN)=0
"RTN","IBDFN4",172,0)
 S IBDCONTU=1
"RTN","IBDFN4",173,0)
 F  S IBDNDEX=$O(^TMP("IBDFN4_WCSEARCH",$J,IBDNDEX)) Q:IBDNDEX=""!(IBDQUIT)!('IBDCONTU)  D  ;
"RTN","IBDFN4",174,0)
 .S IBDNOE=^TMP("IBDFN4_WCSEARCH",$J,0)  ;Number of entries in wildcard search.
"RTN","IBDFN4",175,0)
 .S IBDCODE=^TMP("IBDFN4_WCSEARCH",$J,IBDNDEX,1)
"RTN","IBDFN4",176,0)
 .S IBDCODE=$P(IBDCODE,U,2)
"RTN","IBDFN4",177,0)
 .S IBDX=$P($$GETIDX("10D",IBDCODE,DT),U,2)
"RTN","IBDFN4",178,0)
 .S IBDESCR=$P(^TMP("IBDFN4_WCSEARCH",$J,IBDNDEX,2),U,2)
"RTN","IBDFN4",179,0)
 .S IBDCNT=IBDCNT+1
"RTN","IBDFN4",180,0)
 .I IBDCNT=1 S IBDBEGN=1 I IBDNOE>5,'IBDAUTO W @IOF
"RTN","IBDFN4",181,0)
 .I IBDAUTO D  Q  ;User chose to automatically add ICD-10 codes or user only chose 1 ICD code so SELECT tag is by-passed.
"RTN","IBDFN4",182,0)
 ..I IBDCNT>1 W !!,"Automatic selection continued:",!
"RTN","IBDFN4",183,0)
 ..;Display automatic selected wildcard search ICD code to user one at a time.
"RTN","IBDFN4",184,0)
 ..S IBDNO=0
"RTN","IBDFN4",185,0)
 ..D OKPROMPT($S(IBDNOE=1:1,1:""),IBDCODE,IBDX,.IBDQUIT,.IBDNO)
"RTN","IBDFN4",186,0)
 ..I IBDNO!(IBDQUIT) Q
"RTN","IBDFN4",187,0)
 ..S @IBARY=IBDCODE_U_IBDX_U_IBDESCR
"RTN","IBDFN4",188,0)
 ..N IBDSLIEN
"RTN","IBDFN4",189,0)
 ..;Add the Group and bring back the IEN Selection from ^IBE(357.3.
"RTN","IBDFN4",190,0)
 ..D ADDGROUP(.IBDQUIT,.IBDSLIEN,IBDCODE)
"RTN","IBDFN4",191,0)
 ..I IBDQUIT D:$D(IBDSLIEN) KILL3573(IBDSLIEN) S IBDQUIT=0 Q
"RTN","IBDFN4",192,0)
 ..D SETMSG(IBDSLIEN,IBDCODE,IBDX,IBDCNT)
"RTN","IBDFN4",193,0)
 .;User chose to select which ICD-10 codes he/she wants to add to form.
"RTN","IBDFN4",194,0)
 .;Set ^TMP global for ICD selections.
"RTN","IBDFN4",195,0)
 .S ^TMP("IBDFN4_SELECTED",$J,IBDCNT)=IBDCODE_U_IBDX_U_IBDESCR
"RTN","IBDFN4",196,0)
 .W !,IBDCNT_".",?4,IBDCODE,?15,IBDX  ;Display wildcard selected ICD codes
"RTN","IBDFN4",197,0)
 .I IBDCNT#22=0 D  Q  ;Display every 22 ICD codes to user.
"RTN","IBDFN4",198,0)
 ..D SELECT(IBDBEGN,IBDCNT,.IBDQUIT,.IBDNDEX,.IBDSEL,.IBDCONTU)
"RTN","IBDFN4",199,0)
 ..S IBDBEGN=IBDCNT+1
"RTN","IBDFN4",200,0)
 ..;I IBDSEL="",$O(^TMP("IBDFN4_WCSEARCH",$J,IBDNDEX))'="",'IBDQUIT,IBDCONTU W @IOF
"RTN","IBDFN4",201,0)
 I IBDAUTO!(IBDQUIT)!('IBDCONTU) Q
"RTN","IBDFN4",202,0)
 ;Less than 22 ICD codes displayed.
"RTN","IBDFN4",203,0)
 D SELECT(IBDBEGN,IBDCNT,.IBDQUIT,"",.IBDSEL,.IBDCONTU)
"RTN","IBDFN4",204,0)
 Q
"RTN","IBDFN4",205,0)
 ;Allow user to select a range of ICD codes.
"RTN","IBDFN4",206,0)
SELECT(IBDBEGN,IBDCNT,IBDQUIT,IBDNDEX,IBDSEL,IBDCONTU) ;
"RTN","IBDFN4",207,0)
 N IBDCODE,IBDESCR,IBDI,IBDNEXT,IBDNO,IBDNODE,IBDSELN,IBDSKIP,IBDTEXT,IBDTEMP,IBDTEMPY,IBDX
"RTN","IBDFN4",208,0)
 S IBDSKIP=0
"RTN","IBDFN4",209,0)
 S IBDSEL=$G(IBDSEL)
"RTN","IBDFN4",210,0)
 I IBDNDEX'="" S IBDNEXT=$O(^TMP("IBDFN4_WCSEARCH",$J,IBDNDEX))
"RTN","IBDFN4",211,0)
 K Y
"RTN","IBDFN4",212,0)
 S DIR("A")="Select ICD-10 DIAGNOSIS CODE or '?' for more help"
"RTN","IBDFN4",213,0)
 S DIR("?")=$S(IBDCNT#22=0:"press Enter for more or '^' to exit.",1:"press Enter to continue or '^' to exit.")
"RTN","IBDFN4",214,0)
 S DIR("?",1)="Enter a single number from the list or range (e.g., 1,3,5 or 2-4,8) or"
"RTN","IBDFN4",215,0)
 S DIR(0)="LO^"_IBDBEGN_":"_IBDCNT D ^DIR K DIR
"RTN","IBDFN4",216,0)
 I $D(DTOUT) S IBDQUIT=1 Q
"RTN","IBDFN4",217,0)
 I Y="",$G(IBDNEXT) W @IOF Q
"RTN","IBDFN4",218,0)
 I $D(DUOUT) S IBDSKIP=1  ;Allows user to terminate with '^' out of selection list.
"RTN","IBDFN4",219,0)
 S IBDTEMPY=Y
"RTN","IBDFN4",220,0)
 I '$D(DUOUT),Y'="" S IBDTEMP=Y
"RTN","IBDFN4",221,0)
 K Y
"RTN","IBDFN4",222,0)
 I $G(IBDNEXT),'IBDSKIP D
"RTN","IBDFN4",223,0)
 .S DIR("A")="Save selections and continue to (# of remaining items) in list"
"RTN","IBDFN4",224,0)
 .S DIR(0)="Y",DIR("B")="YES" D ^DIR K DIR
"RTN","IBDFN4",225,0)
 .I Y W @IOF
"RTN","IBDFN4",226,0)
 .I Y=0 S IBDTEMP=""
"RTN","IBDFN4",227,0)
 S Y=$G(Y)
"RTN","IBDFN4",228,0)
 I $D(DTOUT) S IBDQUIT=1 Q
"RTN","IBDFN4",229,0)
 I $D(DUOUT)!(Y=0) D
"RTN","IBDFN4",230,0)
 .I IBDSEL="" S IBDCONTU=0
"RTN","IBDFN4",231,0)
 Q:'IBDCONTU
"RTN","IBDFN4",232,0)
 I IBDTEMPY="^",IBDSEL="" S IBDCONTU=0 Q
"RTN","IBDFN4",233,0)
 I '$D(DUOUT),$G(IBDTEMP)'="" S IBDSEL=$G(IBDSEL)_IBDTEMP I $G(IBDNEXT) Q
"RTN","IBDFN4",234,0)
 I IBDSEL="" Q
"RTN","IBDFN4",235,0)
 S IBDTEXT=$S($L(IBDSEL,",")=2:"this diagnosis",1:"these diagnoses")
"RTN","IBDFN4",236,0)
 W !,"Do you really want to select "_IBDTEXT
"RTN","IBDFN4",237,0)
 S %=2 D YN^DICN
"RTN","IBDFN4",238,0)
 I $G(DTOUT)!(%=2)!(%=-1) S IBDQUIT=1 K ^TMP("IBDFN4_DISPLAY",$J) Q
"RTN","IBDFN4",239,0)
 W !
"RTN","IBDFN4",240,0)
 F IBDI=1:1 Q:$P(IBDSEL,",",IBDI)=""  D  Q:IBDQUIT
"RTN","IBDFN4",241,0)
 .I IBDI>1 W !!,"Selected list continued:",!
"RTN","IBDFN4",242,0)
 .S IBDSELN=$P(IBDSEL,",",IBDI)
"RTN","IBDFN4",243,0)
 .S IBDNODE=^TMP("IBDFN4_SELECTED",$J,IBDSELN)
"RTN","IBDFN4",244,0)
 .S IBDCODE=$P(IBDNODE,U)
"RTN","IBDFN4",245,0)
 .S IBDX=$P(IBDNODE,U,2)
"RTN","IBDFN4",246,0)
 .S IBDESCR=$P(IBDNODE,U,3)
"RTN","IBDFN4",247,0)
 .;W !,?4,IBDCODE,?15,IBDX
"RTN","IBDFN4",248,0)
 .S IBDNO=0
"RTN","IBDFN4",249,0)
 .D OKPROMPT("",IBDCODE,IBDX,.IBDQUIT,.IBDNO)
"RTN","IBDFN4",250,0)
 .I IBDQUIT!(IBDNO) Q
"RTN","IBDFN4",251,0)
 .S @IBARY=IBDCODE_"^"_IBDX_"^"_IBDESCR
"RTN","IBDFN4",252,0)
 .N IBDSLIEN
"RTN","IBDFN4",253,0)
 .;Adds the Group, files the entry and brings back the IEN Selection from ^IBE(357.3.
"RTN","IBDFN4",254,0)
 .D ADDGROUP(.IBDQUIT,.IBDSLIEN,IBDCODE)
"RTN","IBDFN4",255,0)
 .I IBDQUIT D:$D(IBDSLIEN) KILL3573(IBDSLIEN) S IBDQUIT=0 Q
"RTN","IBDFN4",256,0)
 .D SETMSG(IBDSLIEN,IBDCODE,IBDX,IBDSELN)
"RTN","IBDFN4",257,0)
 S IBDCONTU=0
"RTN","IBDFN4",258,0)
 Q
"RTN","IBDFN4",259,0)
 ;
"RTN","IBDFN4",260,0)
 ;IBDEXTCD - the external code that we are adding to the group (optional)
"RTN","IBDFN4",261,0)
ADDGROUP(IBDQUIT,IBDSLIEN,IBDEXTCD) ;
"RTN","IBDFN4",262,0)
 N DIC
"RTN","IBDFN4",263,0)
 W !
"RTN","IBDFN4",264,0)
 I '$D(@IBRTN("DATA_LOCATION")) W !,"Data location not established. Unable to file data." S IBDQUIT=1 Q
"RTN","IBDFN4",265,0)
 I $G(IBGRP)'>0 D  Q
"RTN","IBDFN4",266,0)
 .S DIC="^IBE(357.4,",DIC(0)="AEMN",DIC("S")="I $P(^IBE(357.4,+Y,0),""^"",3)=IBLIST" D ^DIC K DIC S:X="^"!($D(DTOUT)) IBDQUIT=1 Q:IBDQUIT  S IBGRP=+Y I Y<0 D  Q:IBDQUIT=1
"RTN","IBDFN4",267,0)
 ..W !!,"A SELECTION GROUP HEADER IS REQUIRED.... The selection will not be added if none is provided....Enter '??' for a list of choices.",!!
"RTN","IBDFN4",268,0)
 ..S DIC="^IBE(357.4,",DIC(0)="AEMN",DIC("S")="I $P(^IBE(357.4,+Y,0),""^"",3)=IBLIST" D ^DIC K DIC S IBGRP=+Y I Y<0!($D(DTOUT)) S IBDQUIT=1 Q
"RTN","IBDFN4",269,0)
 .D ADDREC^IBDF4(.IBDQUIT,"",.IBDSLIEN,$G(IBDEXTCD))
"RTN","IBDFN4",270,0)
 .S IBGRP=""
"RTN","IBDFN4",271,0)
 ;Adds Second and Third Associated ICD-10 codes,
"RTN","IBDFN4",272,0)
 ;editing of subcolumn 3, Narrative to PCE, Clinical Lexicon Entry,
"RTN","IBDFN4",273,0)
 ;files the entry and brings back the IEN Selection from ^IBE(357.3.
"RTN","IBDFN4",274,0)
 D ADDREC^IBDF4(.IBDQUIT,"",.IBDSLIEN,$G(IBDEXTCD))
"RTN","IBDFN4",275,0)
 Q
"RTN","IBDFN4",276,0)
 ;Get the second and third associated codes.
"RTN","IBDFN4",277,0)
ASSOCIAT(Y,IBDOUT) ;
"RTN","IBDFN4",278,0)
 N IBDCNT,IBDCODE,IBDESCR,IBDIEN,IBDNEXT,IBDNDEX,IBDNO,IBDNODE,IBDNOE,IBDQUIT,IBDX
"RTN","IBDFN4",279,0)
 S (IBDAUTO,IBDCNT,IBDQUIT)=0
"RTN","IBDFN4",280,0)
 S Y=""
"RTN","IBDFN4",281,0)
 S (IBDNDEX,IBDNO)=0
"RTN","IBDFN4",282,0)
 F  S IBDNDEX=$O(^TMP("IBDFN4_ASSOCIATE_WCSEARCH",$J,IBDNDEX)) Q:IBDNDEX=""!(IBDQUIT)!(IBDNO)  D
"RTN","IBDFN4",283,0)
 .S IBDNEXT=$O(^TMP("IBDFN4_ASSOCIATE_WCSEARCH",$J,IBDNDEX))
"RTN","IBDFN4",284,0)
 .S IBDCNT=IBDCNT+1
"RTN","IBDFN4",285,0)
 .I IBDCNT=1 D
"RTN","IBDFN4",286,0)
 ..S IBDBEGN=1
"RTN","IBDFN4",287,0)
 ..S IBDNOE=^TMP("IBDFN4_ASSOCIATE_WCSEARCH",$J,0)  ;Number of entries in wildcard search.
"RTN","IBDFN4",288,0)
 ..I IBDNOE>5 W @IOF
"RTN","IBDFN4",289,0)
 .I IBDCNT=1,IBDNOE>1 W !,"There are "_IBDNOE_" associated codes beginning with "_IBDANS_":"
"RTN","IBDFN4",290,0)
 .S IBDCODE=^TMP("IBDFN4_ASSOCIATE_WCSEARCH",$J,IBDNDEX,1)
"RTN","IBDFN4",291,0)
 .S IBDIEN=+$P(IBDCODE,U) ;+ to resolve both direct and variable pointers
"RTN","IBDFN4",292,0)
 .S IBDCODE=$P(IBDCODE,U,2)
"RTN","IBDFN4",293,0)
 .S IBDX=$P($$GETIDX("10D",IBDCODE,DT),U,2)
"RTN","IBDFN4",294,0)
 .S IBDESCR=$P(^TMP("IBDFN4_ASSOCIATE_WCSEARCH",$J,IBDNDEX,2),U,2)
"RTN","IBDFN4",295,0)
 .S ^TMP("IBDFN4_ASSOCIATE",$J,IBDCNT)=IBDIEN_U_IBDCODE_U_IBDX_U_IBDESCR
"RTN","IBDFN4",296,0)
 .I IBDNOE>1 W !,IBDCNT_".",?4,IBDCODE,?15,IBDX
"RTN","IBDFN4",297,0)
 .I IBDNOE=1 D
"RTN","IBDFN4",298,0)
 ..D OKPROMPT(1,IBDCODE,IBDX,.IBDQUIT,.IBDNO)
"RTN","IBDFN4",299,0)
 .I IBDQUIT!(IBDNO) Q
"RTN","IBDFN4",300,0)
 .;Display every 22 ICD codes to user.
"RTN","IBDFN4",301,0)
 .I IBDCNT#22=0 D
"RTN","IBDFN4",302,0)
 ..K Y
"RTN","IBDFN4",303,0)
 ..S DIR("A")="Press Enter for more, ^ to exit or Select ICD-10 ASSOCIATED CODE"
"RTN","IBDFN4",304,0)
 ..S DIR(0)="NO^"_IBDBEGN_":"_IBDCNT
"RTN","IBDFN4",305,0)
 ..D ^DIR K DIR
"RTN","IBDFN4",306,0)
 ..S IBDBEGN=IBDCNT+1
"RTN","IBDFN4",307,0)
 ..I Y="" W @IOF
"RTN","IBDFN4",308,0)
 .I $D(DUOUT)!($D(DTOUT)) S (IBDQUIT,IBDOUT)=1 Q
"RTN","IBDFN4",309,0)
 .I IBDCNT#22'=0,IBDNEXT="",IBDNOE'=1 D  ;
"RTN","IBDFN4",310,0)
 ..K Y
"RTN","IBDFN4",311,0)
 ..S DIR("A")="Press Enter to continue, ^ to exit or Select ICD-10 ASSOCIATED CODE"
"RTN","IBDFN4",312,0)
 ..S DIR(0)="NO^"_IBDBEGN_":"_IBDCNT
"RTN","IBDFN4",313,0)
 ..D ^DIR K DIR
"RTN","IBDFN4",314,0)
 .I $D(DUOUT)!($D(DTOUT)) S (IBDQUIT,IBDOUT)=1 Q
"RTN","IBDFN4",315,0)
 .I Y?1N.N!(IBDNOE=1) D  ;
"RTN","IBDFN4",316,0)
 ..S IBDNODE=$S(IBDNOE=1:^TMP("IBDFN4_ASSOCIATE",$J,1),1:^TMP("IBDFN4_ASSOCIATE",$J,Y))
"RTN","IBDFN4",317,0)
 ..S IBDIEN=$P(IBDNODE,U),IBDCODE=$P(IBDNODE,U,2),IBDX=$P(IBDNODE,U,3),IBDESCR=$P(IBDNODE,U,4)
"RTN","IBDFN4",318,0)
 ..S @IBARY=IBDCODE_U_IBDX_U_IBDESCR
"RTN","IBDFN4",319,0)
 ..S IBDQUIT=1
"RTN","IBDFN4",320,0)
 ..I IBDNOE>1 W !,?4,IBDCODE,?15,IBDX
"RTN","IBDFN4",321,0)
 ..K Y ;set up Y array to be passed back for filing of ^IBE(357.3.
"RTN","IBDFN4",322,0)
 ..S Y=IBDIEN_U_IBDCODE
"RTN","IBDFN4",323,0)
 ..S Y(0)=IBDCODE
"RTN","IBDFN4",324,0)
 ..S Y(0,0)=IBDCODE
"RTN","IBDFN4",325,0)
 Q
"RTN","IBDFN4",326,0)
 ;Display the selected ICD-10 code(s) to user.
"RTN","IBDFN4",327,0)
DISPLAY ; 
"RTN","IBDFN4",328,0)
 ;
"RTN","IBDFN4",329,0)
 N IBDCNT,IBDCODE,IBDNODE,IBDQUIT,IBDSUB,IBDX
"RTN","IBDFN4",330,0)
 S (IBDCNT,IBDQUIT)=0
"RTN","IBDFN4",331,0)
 W !!,^TMP("IBDFN4_DISPLAY",$J,0)_" Diagnosis Added.",!
"RTN","IBDFN4",332,0)
 S IBDSUB=0
"RTN","IBDFN4",333,0)
 F  S IBDSUB=$O(^TMP("IBDFN4_DISPLAY",$J,IBDSUB)) Q:IBDSUB=""  D  ;
"RTN","IBDFN4",334,0)
 .;Display wildcard selections to user.
"RTN","IBDFN4",335,0)
 .S IBDCNT=IBDCNT+1
"RTN","IBDFN4",336,0)
 .S IBDNODE=^TMP("IBDFN4_DISPLAY",$J,IBDSUB)
"RTN","IBDFN4",337,0)
 .S IBDCODE=$P(IBDNODE,U)
"RTN","IBDFN4",338,0)
 .S IBDX=$P(IBDNODE,U,2)
"RTN","IBDFN4",339,0)
 .W !,IBDX_" (ICD-10-CM "_IBDCODE_")"
"RTN","IBDFN4",340,0)
 .I IBDCNT#18=0 D  ;
"RTN","IBDFN4",341,0)
 ..W !
"RTN","IBDFN4",342,0)
 ..S DIR(0)="E"
"RTN","IBDFN4",343,0)
 ..D ^DIR
"RTN","IBDFN4",344,0)
 ..I 'Y S IBDQUIT=1 Q
"RTN","IBDFN4",345,0)
 ..W @IOF
"RTN","IBDFN4",346,0)
 I IBDCNT#18=0 H 5
"RTN","IBDFN4",347,0)
 W !
"RTN","IBDFN4",348,0)
 Q
"RTN","IBDFN4",349,0)
 ;get description
"RTN","IBDFN4",350,0)
GETDSCR(IBDCSYS,IBDCODE,IBDT) ;
"RTN","IBDFN4",351,0)
 N IBDZZ,IBDRETV
"RTN","IBDFN4",352,0)
 S IBDRETV=$$ICDDESC^ICDXCODE(IBDCSYS,IBDCODE,IBDT,.IBDZZ)
"RTN","IBDFN4",353,0)
 I IBDRETV<1 Q $P(IBDRETV,U,2)
"RTN","IBDFN4",354,0)
 Q IBDZZ(1)_" "_$G(IBDZZ(3))
"RTN","IBDFN4",355,0)
 ;get ien and diagnosis description
"RTN","IBDFN4",356,0)
 ;IBDCSYS - "ICD-9" if ICD9 code, "10D" if ICD-10 code
"RTN","IBDFN4",357,0)
 ;IBDCODE - Actual ICD code (ie S62.011P)
"RTN","IBDFN4",358,0)
 ;IBDT    - Today's date.
"RTN","IBDFN4",359,0)
GETIDX(IBDCSYS,IBDCODE,IBDT) ;
"RTN","IBDFN4",360,0)
 N IBDICDX
"RTN","IBDFN4",361,0)
 S IBDICDX=$$ICDDATA^ICDXCODE(IBDCSYS,IBDCODE,IBDT)
"RTN","IBDFN4",362,0)
 I IBDICDX<1 Q $P(IBDICDX,U,2)
"RTN","IBDFN4",363,0)
 Q $P(IBDICDX,U)_U_$P(IBDICDX,U,4)
"RTN","IBDFN4",364,0)
 ;Set ^TMP global to display selected ICD-10 code and ICD-10 description to the user.
"RTN","IBDFN4",365,0)
 ;Selected ICD-10 codes will be displayed to the user in line tag DISPLAY.
"RTN","IBDFN4",366,0)
 ;NOTE: ICD-10 description could have been edited by the user.
"RTN","IBDFN4",367,0)
SETMSG(IBDSLIEN,IBDCODE,IBDX,IBDSUB) ;
"RTN","IBDFN4",368,0)
 N IBDI,IBDINDEX,IBDNODE,IBDSCHDR
"RTN","IBDFN4",369,0)
 F IBDI=1:1:8 I $G(IBLIST("SCPIECE",IBDI)) D  ;
"RTN","IBDFN4",370,0)
 .S IBDSCHDR=$G(IBLIST("SCHDR",IBDI)) I IBDSCHDR'="" D  ;
"RTN","IBDFN4",371,0)
 ..I IBDSCHDR'="CODE",IBDSCHDR'="DIAGNOSIS" Q
"RTN","IBDFN4",372,0)
 ..S IBDINDEX=0 F  S IBDINDEX=$O(^IBE(357.3,IBDSLIEN,1,IBDINDEX)) Q:'IBDINDEX  D  ;
"RTN","IBDFN4",373,0)
 ...S IBDNODE=^IBE(357.3,IBDSLIEN,1,IBDINDEX,0)
"RTN","IBDFN4",374,0)
 ...I $P(IBDNODE,U)=IBDI,IBDSCHDR="DIAGNOSIS" S IBDX=$P(IBDNODE,U,2)
"RTN","IBDFN4",375,0)
 ...I $P(IBDNODE,U)=IBDI,IBDSCHDR="CODE" S IBDCODE=$P(IBDNODE,U,2)
"RTN","IBDFN4",376,0)
 S ^TMP("IBDFN4_DISPLAY",$J,0)=$G(^TMP("IBDFN4_DISPLAY",$J,0))+1
"RTN","IBDFN4",377,0)
 S ^TMP("IBDFN4_DISPLAY",$J,IBDSUB)=IBDCODE_U_IBDX
"RTN","IBDFN4",378,0)
 Q
"RTN","IBDFN4",379,0)
 ;To kill incomplete entries in ^IBE(357.3
"RTN","IBDFN4",380,0)
KILL3573(IBDSEL) ;
"RTN","IBDFN4",381,0)
 N DA,DIK
"RTN","IBDFN4",382,0)
 S DA=IBDSEL,DIK="^IBE(357.3," D ^DIK K DIK
"RTN","IBDFN4",383,0)
 Q
"RTN","IBDFN4",384,0)
 ;Ask user with 'OK? Yes' prompt.
"RTN","IBDFN4",385,0)
OKPROMPT(IBDONE,IBDCODE,IBDX,IBDQUIT,IBDNO) ;
"RTN","IBDFN4",386,0)
 N DIR,IBDI
"RTN","IBDFN4",387,0)
 I '$D(IBDONE) S IBDONE=0
"RTN","IBDFN4",388,0)
 S DIR("A")="OK? (Yes/No) "
"RTN","IBDFN4",389,0)
 F IBDI=1:1:4 D
"RTN","IBDFN4",390,0)
 .I IBDONE D
"RTN","IBDFN4",391,0)
 ..I IBDI=1 S DIR("A",1)="One match found."
"RTN","IBDFN4",392,0)
 ..I IBDI=2 S DIR("A",2)=" "
"RTN","IBDFN4",393,0)
 ..I IBDI=3 S DIR("A",3)=IBDCODE_"  "_IBDX
"RTN","IBDFN4",394,0)
 ..I IBDI=4 S DIR("A",4)=" "
"RTN","IBDFN4",395,0)
 .I 'IBDONE D
"RTN","IBDFN4",396,0)
 ..I IBDI=1 S DIR("A",1)=" "
"RTN","IBDFN4",397,0)
 ..I IBDI=2 S DIR("A",2)=IBDCODE_"  "_IBDX
"RTN","IBDFN4",398,0)
 ..I IBDI=3 S DIR("A",3)=" "
"RTN","IBDFN4",399,0)
 S DIR(0)="YAO",DIR("B")="Yes" D ^DIR K DIR
"RTN","IBDFN4",400,0)
 W !
"RTN","IBDFN4",401,0)
 I $D(DUOUT)!($D(DTOUT)) S IBDQUIT=1 Q
"RTN","IBDFN4",402,0)
 I Y=0 S IBDNO=1
"RTN","IBDFN4",403,0)
 Q
"RTN","IBDFN4",404,0)
 ;Partial Code Lexicon ICD code search.
"RTN","IBDFN4",405,0)
LXSEARCH ;
"RTN","IBDFN4",406,0)
 N IBDCODE,IBDESCR,IBDINDEX,IBDQUIT,IBDX,IBDY
"RTN","IBDFN4",407,0)
 S IBDQUIT=0
"RTN","IBDFN4",408,0)
 I $G(DIC("A"))'="" D  Q:IBDQUIT
"RTN","IBDFN4",409,0)
 .S DIR("A")=DIC("A")
"RTN","IBDFN4",410,0)
 .S DIR(0)="FAO^0:245"
"RTN","IBDFN4",411,0)
 .S DIR("?")="^D INPHLP^IBDLXDG"
"RTN","IBDFN4",412,0)
 .S DIR("??")="^D INPHLP^IBDLXDG"
"RTN","IBDFN4",413,0)
 .D ^DIR
"RTN","IBDFN4",414,0)
 .I Y="^"!(Y="")!($D(DTOUT)) K @IBARY,DIC S IBDQUIT=1 Q
"RTN","IBDFN4",415,0)
 .D SETPARAM^IBDLXDG(.IBDPARAM)
"RTN","IBDFN4",416,0)
 .S IBDY=$$LEXICD10^IBDLXDG(Y,$$ICD10DT^IBDUTICD(DT),.IBDPARAM)
"RTN","IBDFN4",417,0)
 I $G(DIC("A"))="" D
"RTN","IBDFN4",418,0)
 .D SETPARAM^IBDLXDG(.IBDPARAM)
"RTN","IBDFN4",419,0)
 .S IBDY=$$DIAG10^IBDLXDG($$ICD10DT^IBDUTICD(DT),"",.IBDPARAM)
"RTN","IBDFN4",420,0)
 I IBDY="" W !!,IBDPARAM("NO DATA FOUND"),!,IBDPARAM("NO DATA FOUND 2"),! G LXSEARCH
"RTN","IBDFN4",421,0)
 I IBDY=-1!(IBDY=-2)!(IBDY=-3)!(IBDY=-4) Q  ;Timed out or was aborted.
"RTN","IBDFN4",422,0)
 S IBDCODE=$P($P(IBDY,U),";",2)
"RTN","IBDFN4",423,0)
 S IBDX=$$GETIDX("10D",IBDCODE,DT)
"RTN","IBDFN4",424,0)
 S IBDX=$P(IBDX,U,2)
"RTN","IBDFN4",425,0)
 S IBDESCR=$P(IBDY,U,2)
"RTN","IBDFN4",426,0)
 S @IBARY=IBDCODE_"^"_IBDX_"^"_IBDESCR
"RTN","IBDFN4",427,0)
 K DIC
"RTN","IBDFN4",428,0)
 Q
"RTN","IBDFN4",429,0)
 ;IBDFN4
"RTN","IBDFN4A")
0^44^B16711898^n/a
"RTN","IBDFN4A",1,0)
IBDFN4A ;ALB/CFS - ENCOUNTER FORM - (entry points for selection routines) ;5/16/2012
"RTN","IBDFN4A",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;APR 24, 1997;Build 80
"RTN","IBDFN4A",3,0)
 ;
"RTN","IBDFN4A",4,0)
 ;
"RTN","IBDFN4A",5,0)
 ;Help message when user enters '??' at selection prompt.
"RTN","IBDFN4A",6,0)
HELP ;
"RTN","IBDFN4A",7,0)
 ;
"RTN","IBDFN4A",8,0)
 N IBDANS,IBDSTAR
"RTN","IBDFN4A",9,0)
 S $P(IBDSTAR,"*",81)=""
"RTN","IBDFN4A",10,0)
 W !!!,IBDSTAR
"RTN","IBDFN4A",11,0)
 W !,"* Enter a single code or a partial code with an * (asterisk), ? (question",?79,"*"
"RTN","IBDFN4A",12,0)
 W !,"* mark) or partial code to retrieve and display ICD-10-CM Diagnosis codes.",?79,"*"
"RTN","IBDFN4A",13,0)
 W !,"*",?79,"*"
"RTN","IBDFN4A",14,0)
 W !,"* -  An * (asterisk) added to partial code allows users to retrieve all",?79,"*"
"RTN","IBDFN4A",15,0)
 W !,"*    codes that match any number of characters (including none) at the",?79,"*"
"RTN","IBDFN4A",16,0)
 W !,"*    location of the *.  The * (asterisk) wildcard can only exist in the",?79,"*"
"RTN","IBDFN4A",17,0)
 W !,"*    last position of the search string.  User has the ability to select",?79,"*"
"RTN","IBDFN4A",18,0)
 W !,"*    diagnosis(es) from the search results list.",?79,"*"
"RTN","IBDFN4A",19,0)
 W !,"*",?79,"*"
"RTN","IBDFN4A",20,0)
 W !,"* -  A ? (question mark in the code pattern allows users to retrieve all",?79,"*"
"RTN","IBDFN4A",21,0)
 W !,"*    codes that match any single character at the location of the ?.  User",?79,"*"
"RTN","IBDFN4A",22,0)
 W !,"*    has the ability to select diagnosis(es) from the search results",?79,"*"
"RTN","IBDFN4A",23,0)
 W !,"*    list.",?79,"*"
"RTN","IBDFN4A",24,0)
 W !,"*",?79,"*"
"RTN","IBDFN4A",25,0)
 W !,"* NOTE:  Enter a ? (question mark) will match exactly one character,",?79,"*"
"RTN","IBDFN4A",26,0)
 W !,"*        and is not the best way to find codes of varying or unpredictable",?79,"*"
"RTN","IBDFN4A",27,0)
 W !,"*        length.  Therefore it is recommended that an * (asterisk) be used",?79,"*"
"RTN","IBDFN4A",28,0)
 W !,"*        at the end of the pattern if you need to retrieve codes of varying",?79,"*"
"RTN","IBDFN4A",29,0)
 W !,"*        length that start with the same characters or pattern.",?79,"*"
"RTN","IBDFN4A",30,0)
 W !
"RTN","IBDFN4A",31,0)
 S DIR("A")="Press the Enter key for more help text or '^' to Exit"
"RTN","IBDFN4A",32,0)
 S DIR(0)="E"
"RTN","IBDFN4A",33,0)
 D ^DIR
"RTN","IBDFN4A",34,0)
 I 'Y Q
"RTN","IBDFN4A",35,0)
 W @IOF
"RTN","IBDFN4A",36,0)
 ;W !,"*",?79,"*"
"RTN","IBDFN4A",37,0)
 W !,"* -  The first 2 characters in the search string cannot consist of a",?79,"*"
"RTN","IBDFN4A",38,0)
 W !,"*    wildcard character (* or ?).",?79,"*"
"RTN","IBDFN4A",39,0)
 W !,"*",?79,"*"
"RTN","IBDFN4A",40,0)
 W !,"* -  A ""*"" and one or more ""?"" can be used at the same time within the",?79,"*"
"RTN","IBDFN4A",41,0)
 W !,"*    wildcard search.",?79,"*"
"RTN","IBDFN4A",42,0)
 W !,"*",?79,"*"
"RTN","IBDFN4A",43,0)
 W !,"* Diagnosis(es) Code Selection:",?79,"*"
"RTN","IBDFN4A",44,0)
 W !,"*",?79,"*"
"RTN","IBDFN4A",45,0)
 W !,"* Diagnosis(es) can be selected from the search results list to be",?79,"*"
"RTN","IBDFN4A",46,0)
 W !,"* included in the ICD-10 diagnosis block by:",?79,"*"
"RTN","IBDFN4A",47,0)
 W !,"*",?79,"*"
"RTN","IBDFN4A",48,0)
 W !,"*    Selecting the list item number associated with the specific code(s):",?79,"*"
"RTN","IBDFN4A",49,0)
 W !,"*        -  Single code (1)",?79,"*"
"RTN","IBDFN4A",50,0)
 W !,"*        -  Multiple codes (1,3,6,10)",?79,"*"
"RTN","IBDFN4A",51,0)
 W !,"*    Selecting a range of list items between two list item numbers:",?79,"*"
"RTN","IBDFN4A",52,0)
 W !,"*        -  Range of codes (1-5)",?79,"*"
"RTN","IBDFN4A",53,0)
 W !,"*    Selecting a combination of specific list item numbers and list item",?79,"*"
"RTN","IBDFN4A",54,0)
 W !,"*    ranges:",?79,"*"
"RTN","IBDFN4A",55,0)
 W !,"*        -  Multiple codes, including a range (1-5,8,11,12).",?79,"*"
"RTN","IBDFN4A",56,0)
 W !
"RTN","IBDFN4A",57,0)
 S DIR("A")="Press the Enter key for more help text or '^' to Exit"
"RTN","IBDFN4A",58,0)
 S DIR(0)="E"
"RTN","IBDFN4A",59,0)
 D ^DIR
"RTN","IBDFN4A",60,0)
 I 'Y Q
"RTN","IBDFN4A",61,0)
 W @IOF
"RTN","IBDFN4A",62,0)
 ;W !,"*",?79,"*"
"RTN","IBDFN4A",63,0)
 W !,"* - A partial code (""*"" or ""?"") allows users to retrieve all codes",?79,"*"
"RTN","IBDFN4A",64,0)
 W !,"*   that begin with the characters entered (e.g. E08*).  A minimum of 3",?79,"*"
"RTN","IBDFN4A",65,0)
 W !,"*   characters must be entered.  User has the ability to automatically add",?79,"*"
"RTN","IBDFN4A",66,0)
 W !,"*   the diagnosis(es) from the search results all at once or individually.",?79,"*"
"RTN","IBDFN4A",67,0)
 W !,IBDSTAR,!!
"RTN","IBDFN4A",68,0)
 ;
"RTN","IBDFN4A",69,0)
 Q
"RTN","IBDFN4A",70,0)
 ;IBDFN4A
"RTN","IBDFN7")
0^5^B8761450^B4134968
"RTN","IBDFN7",1,0)
IBDFN7 ;ALB/CJM - ENCOUNTER FORM - validate logic for data ;05/10/95
"RTN","IBDFN7",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**38,51,64,63**;APR 24, 1997;Build 80
"RTN","IBDFN7",3,0)
 ;
"RTN","IBDFN7",4,0)
 ;
"RTN","IBDFN7",5,0)
TESTCPT ;does X point to a valid CPT4 code? Kills X if not.
"RTN","IBDFN7",6,0)
 ;
"RTN","IBDFN7",7,0)
 ;;change to api cpt;dhh
"RTN","IBDFN7",8,0)
 N XX
"RTN","IBDFN7",9,0)
 S Y=""
"RTN","IBDFN7",10,0)
 I $G(X)="" K X Q
"RTN","IBDFN7",11,0)
 S XX=$$CPT^ICPTCOD($G(X))
"RTN","IBDFN7",12,0)
 I +XX=-1 K X Q
"RTN","IBDFN7",13,0)
 I $P(XX,U,7)'=1 K X S Y=$P(XX,U,3) Q
"RTN","IBDFN7",14,0)
 S X=$P(XX,U) ;set X equal ien of cpt code
"RTN","IBDFN7",15,0)
 Q
"RTN","IBDFN7",16,0)
 ;
"RTN","IBDFN7",17,0)
TESTICD ; -- does X point to a valid ICD-9 code? Kills X if not.
"RTN","IBDFN7",18,0)
 ; -- input the icd code in X
"RTN","IBDFN7",19,0)
 ;
"RTN","IBDFN7",20,0)
 N IBDCODE,IBDSTAT
"RTN","IBDFN7",21,0)
 I $G(X)="" K X S Y="" Q
"RTN","IBDFN7",22,0)
 ;S:$E(X,$L(X))'=" " X=X_" " ; use ba xref, add space to end for lookup.
"RTN","IBDFN7",23,0)
 ;S X=$O(^ICD9("BA",X,0)) I 'X K X S Y="" Q
"RTN","IBDFN7",24,0)
 ;I '$D(^ICD9(X,0)) K X S Y="" Q
"RTN","IBDFN7",25,0)
 ;;I $P($G(^ICD9(X,0)),"^",9) S Y=$P(^ICD9(X,0),"^",3) K X
"RTN","IBDFN7",26,0)
 ;S IBDCODE=$$ICDDX^ICDCODE(X)
"RTN","IBDFN7",27,0)
 S IBDCODE=$$ICDDATA^ICDXCODE("ICD9",X,DT) S X=$P(IBDCODE,U) I 'X!(X<1) K X S Y="" Q
"RTN","IBDFN7",28,0)
 S IBDSTAT=$P(IBDCODE,U,10) I IBDSTAT'=1 S Y=$P(IBDCODE,U,4) K X
"RTN","IBDFN7",29,0)
 S IBDY=$P(IBDCODE,U,4)
"RTN","IBDFN7",30,0)
 Q
"RTN","IBDFN7",31,0)
 ;
"RTN","IBDFN7",32,0)
TESTICD0 ;
"RTN","IBDFN7",33,0)
 ;-- does X point to a valid ICD-10 code? Kills X if not.
"RTN","IBDFN7",34,0)
 ;-- input the icd code in X
"RTN","IBDFN7",35,0)
 ;
"RTN","IBDFN7",36,0)
 ;DT = Today's date
"RTN","IBDFN7",37,0)
 ;
"RTN","IBDFN7",38,0)
 ;STATUS:
"RTN","IBDFN7",39,0)
 ; 0 = Inactive - ICD-10 Code is Inactive due to today's date being less than Active date.
"RTN","IBDFN7",40,0)
 ;     Example: Today's date = 10/01/2013; ICD-10 code Active date = 10/01/2014
"RTN","IBDFN7",41,0)
 ;     10/01/2013 is less than 10/01/2014
"RTN","IBDFN7",42,0)
 ;
"RTN","IBDFN7",43,0)
 ; 1 = Active - ICD-10 Code is Active due to today's date being greater than or equal to Active date.
"RTN","IBDFN7",44,0)
 ;     Example: Today's date = 10/02/2014; ICD-10 code Active date = 10/01/2014
"RTN","IBDFN7",45,0)
 ;     10/02/2014 is greater than 10/01/2014
"RTN","IBDFN7",46,0)
 ;     Example: Today's date = 10/01/2014; ICD-10 code Active date = 10/01/2014
"RTN","IBDFN7",47,0)
 ;     10/01/2014 is equal to Active date 10/01/2014
"RTN","IBDFN7",48,0)
 ;
"RTN","IBDFN7",49,0)
 ; 2 = Inactive - ICD-10 Code is Inactive due to today's date being less than Implementation date.
"RTN","IBDFN7",50,0)
 ;     Example: Today's date = 09/30/2013; ICD-10 code Implementation date = 10/01/2013;
"RTN","IBDFN7",51,0)
 ;     09/30/2013 is less than 10/01/2013
"RTN","IBDFN7",52,0)
 ;
"RTN","IBDFN7",53,0)
 N IBDCODE,IBDSTAT,IBDTEMPY
"RTN","IBDFN7",54,0)
 I $G(X)="" K X S Y="" Q
"RTN","IBDFN7",55,0)
 ;S IBDCODE=$$ICDDATA^ICDXCODE("10D",X,DT) S X=$P(IBDCODE,U) I 'X!(X<1) K X S Y="" Q
"RTN","IBDFN7",56,0)
 ;S IBDSTAT=$P(IBDCODE,U,10) I IBDSTAT'=1 S Y=$P(IBDCODE,U,4) K X
"RTN","IBDFN7",57,0)
 S IBDCODE=$$ICDDATA^ICDXCODE("10D",X,DT) S X=$P(IBDCODE,U) I 'X!(X<1) K X S Y="" Q
"RTN","IBDFN7",58,0)
 S IBDSTAT=$$STATCHK^IBDUTICD("10D",$P(IBDCODE,U,2),DT)
"RTN","IBDFN7",59,0)
 I IBDSTAT'=1 S Y=$P(IBDCODE,U,4) K X
"RTN","IBDFN7",60,0)
 S IBDY=$P(IBDCODE,U,4)
"RTN","IBDFN7",61,0)
 Q
"RTN","IBDFN7",62,0)
 ;
"RTN","IBDFN7",63,0)
 ;
"RTN","IBDFN7",64,0)
TESTVST ;does X point to a valid visit code? If not, kills X.
"RTN","IBDFN7",65,0)
 ;checks that X is a valid CPT4 code and that there is a corresponding entry in the TYPE OF VISIT file that is active
"RTN","IBDFN7",66,0)
 N IEN,XX
"RTN","IBDFN7",67,0)
 I $G(X)="" K X S Y="" Q
"RTN","IBDFN7",68,0)
 ;;change to api cpt;dhh
"RTN","IBDFN7",69,0)
 S XX=$$CPT^ICPTCOD(X)
"RTN","IBDFN7",70,0)
 I +XX=-1 K X S Y="" Q
"RTN","IBDFN7",71,0)
 I $P(XX,U,7)'=1 K X S Y=$P(XX,U,3) Q
"RTN","IBDFN7",72,0)
 S X=$P(XX,U) ;set X equal ien of cpt code
"RTN","IBDFN7",73,0)
 Q:'$D(X)
"RTN","IBDFN7",74,0)
 S IEN=$O(^IBE(357.69,"B",X,0)) K:'IEN X I IEN K:$P($G(^IBE(357.69,IEN,0)),"^",4) X
"RTN","IBDFN7",75,0)
 Q
"RTN","IBDFN7",76,0)
 ;
"RTN","IBDFN7",77,0)
TESTLEX ; -- Is clinical lexicon pointer valid and does icdone, not return 799.9
"RTN","IBDFN7",78,0)
 N IBDIMP,IBDIBX
"RTN","IBDFN7",79,0)
 S IBDIMP=$$IMPDATE^IBDUTICD("10D"),IBDIBX=799.9
"RTN","IBDFN7",80,0)
 I DT'<IBDIMP S IBDIBX="R69."
"RTN","IBDFN7",81,0)
 S IBDLEXV=1
"RTN","IBDFN7",82,0)
 I $D(^LEX)>1 S X="LEXSET" X ^%ZOSF("TEST") I $T S IBDLEXV=2
"RTN","IBDFN7",83,0)
 I IBDLEXV=1 D
"RTN","IBDFN7",84,0)
 .I $G(X)="" K X S Y="" Q
"RTN","IBDFN7",85,0)
 .I '$D(^GMP(757.01,+X,0)) K X S Y="" Q
"RTN","IBDFN7",86,0)
 .S VAL=$$ICDONE^GMPTU(X)
"RTN","IBDFN7",87,0)
 .I VAL="" K X S Y="No ICD"_$S(DT'<IBDIMP:"10",1:"9")_" code" Q
"RTN","IBDFN7",88,0)
 .I VAL=IBDIBX K X S Y="ICD"_$S(DT'<IBDIMP:"10",1:"9")_" code "_IBDIBX Q
"RTN","IBDFN7",89,0)
 .I $G(X)="" K X S Y="" Q
"RTN","IBDFN7",90,0)
 .Q
"RTN","IBDFN7",91,0)
 I IBDLEXV>1 D
"RTN","IBDFN7",92,0)
 .I $G(X)="" K X S Y="" Q
"RTN","IBDFN7",93,0)
 .I '$D(^LEX(757.01,+X,0)) K X S Y="" Q
"RTN","IBDFN7",94,0)
 .S VAL=$$ICDONE^LEXU(X)
"RTN","IBDFN7",95,0)
 .I VAL="" K X S Y="No ICD"_$S(DT'<IBDIMP:"10",1:"9")_" code" Q
"RTN","IBDFN7",96,0)
 .I VAL=IBDIBX K X S Y="ICD"_$S(DT'<IBDIMP:"10",1:"9")_" code "_IBDIBX Q
"RTN","IBDFN7",97,0)
 .Q
"RTN","IBDFN7",98,0)
 Q
"RTN","IBDFN8")
0^10^B1969782^B889456
"RTN","IBDFN8",1,0)
IBDFN8 ;ALB/CJM - ENCOUNTER FORM - PCE GDI INPUT TRANSFORMS ;08/10/95
"RTN","IBDFN8",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**25,38,51,63**;APR 24, 1997;Build 80
"RTN","IBDFN8",3,0)
 ;
"RTN","IBDFN8",4,0)
 ;
"RTN","IBDFN8",5,0)
INPUTCPT(X) ;changes X,a CPT code, into its ien
"RTN","IBDFN8",6,0)
 ;
"RTN","IBDFN8",7,0)
 ;   --input: cpt code
"RTN","IBDFN8",8,0)
 ;   
"RTN","IBDFN8",9,0)
 ;   --output: ien of cpt code (file #81)
"RTN","IBDFN8",10,0)
 ;
"RTN","IBDFN8",11,0)
 S X=$$UPP(X)
"RTN","IBDFN8",12,0)
 ;;S X=+$$CPT^ICPTCOD(X)
"RTN","IBDFN8",13,0)
 S X=$$CPT^ICPTCOD(X)
"RTN","IBDFN8",14,0)
 I +X=-1 K X Q
"RTN","IBDFN8",15,0)
 I $P(X,U,7)'=1 K X ;(CSV) status 0-inactive 1-active
"RTN","IBDFN8",16,0)
 Q
"RTN","IBDFN8",17,0)
 ;
"RTN","IBDFN8",18,0)
INPUTICD(ICD) ;changes X, an ICD-9 code, into its ien
"RTN","IBDFN8",19,0)
 ;
"RTN","IBDFN8",20,0)
 ;S ICD=$$UPP(ICD)
"RTN","IBDFN8",21,0)
 ;S X=$O(^ICD9("BA",ICD_" ",0)) I 'X K X Q
"RTN","IBDFN8",22,0)
 ;;K:'X X
"RTN","IBDFN8",23,0)
 ;
"RTN","IBDFN8",24,0)
 ;(CSV) status 0-inactive 1-active
"RTN","IBDFN8",25,0)
 ;I $P($$ICDDX^ICDCODE(X),U,10)'=1 K X
"RTN","IBDFN8",26,0)
 N IBDCODE,IBDSTAT
"RTN","IBDFN8",27,0)
 I $G(ICD)="" K X Q
"RTN","IBDFN8",28,0)
 S IBDCODE=$$ICDDATA^ICDXCODE("ICD9",ICD,DT) S X=$P(IBDCODE,U) I 'X!(X<1) K X Q
"RTN","IBDFN8",29,0)
 S IBDSTAT=$P(IBDCODE,U,10) I IBDSTAT'=1 K X
"RTN","IBDFN8",30,0)
 Q
"RTN","IBDFN8",31,0)
INPICD10(ICD) ;changes X, an ICD-10 code, into its ien
"RTN","IBDFN8",32,0)
 ;-- does X point to a valid ICD-10 code? Kills X if not.
"RTN","IBDFN8",33,0)
 ; -- input the icd code in X
"RTN","IBDFN8",34,0)
 ;
"RTN","IBDFN8",35,0)
 N IBDCODE,IBDSTAT
"RTN","IBDFN8",36,0)
 I $G(ICD)="" K X Q
"RTN","IBDFN8",37,0)
 S IBDCODE=$$ICDDATA^ICDXCODE("10D",ICD,DT) S X=$P(IBDCODE,U) I 'X!(X<1) K X Q
"RTN","IBDFN8",38,0)
 S IBDSTAT=$P(IBDCODE,U,10) I IBDSTAT'=1 K X
"RTN","IBDFN8",39,0)
 Q
"RTN","IBDFN8",40,0)
 ;
"RTN","IBDFN8",41,0)
UPP(X) ; -- convert lower case to upper case (especially when in codes above)
"RTN","IBDFN8",42,0)
 Q $TR(X,"zxcvbnmlkjhgfdsaqwertyuiop","ZXCVBNMLKJHGFDSAQWERTYUIOP")
"RTN","IBDFN9")
0^8^B1176196^B876630
"RTN","IBDFN9",1,0)
IBDFN9 ;ALB/CJM - ENCOUNTER FORM - output transforms for data ;05/10/95
"RTN","IBDFN9",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**38,36,51,63**;APR 24, 1997;Build 80
"RTN","IBDFN9",3,0)
 ;
"RTN","IBDFN9",4,0)
 ;
"RTN","IBDFN9",5,0)
DSPLYCPT(IEN) ;output transform for CPT codes (file #81)
"RTN","IBDFN9",6,0)
 ;example of use: S Y=$$DSPLYCPT^IBDFN9(Y)
"RTN","IBDFN9",7,0)
 ;;change to api cpt;dhh
"RTN","IBDFN9",8,0)
 N IBDCODE
"RTN","IBDFN9",9,0)
 S IBDCODE=$$CPT^ICPTCOD(IEN)
"RTN","IBDFN9",10,0)
 ;;I +CODE=-1 S CODE=""
"RTN","IBDFN9",11,0)
 ;;E  S CODE=$P(CODE,U,2)
"RTN","IBDFN9",12,0)
 ;
"RTN","IBDFN9",13,0)
 ;Check status for CSV
"RTN","IBDFN9",14,0)
 I $P(IBDCODE,U,7)'=1 S IBDCODE="" Q IBDCODE
"RTN","IBDFN9",15,0)
 S IBDCODE=$P(IBDCODE,U,2)
"RTN","IBDFN9",16,0)
 Q IBDCODE
"RTN","IBDFN9",17,0)
 ;
"RTN","IBDFN9",18,0)
DSPICD10(IEN) ;output transform for ICD10 codes (file #8010)
"RTN","IBDFN9",19,0)
 ;example of use: S Y=$$DSPICD10^IBDFN9(Y)
"RTN","IBDFN9",20,0)
 ;Use API for CSV
"RTN","IBDFN9",21,0)
 Q $P($$ICDDATA^ICDXCODE("10D",IEN,DT),"^",2)
"RTN","IBDFN9",22,0)
 ;
"RTN","IBDFN9",23,0)
DSPLYICD(IEN) ;output transform for ICD9 codes (file #80)
"RTN","IBDFN9",24,0)
 ;example of use: S Y=$$DSPLYICD^IBDFN9(Y)
"RTN","IBDFN9",25,0)
 ;;Q $P($G(^ICD9(+$G(IEN),0)),"^")
"RTN","IBDFN9",26,0)
 ;
"RTN","IBDFN9",27,0)
 ;Use API for CSV
"RTN","IBDFN9",28,0)
 Q $P($$ICDDX^ICDCODE(IEN),"^",2)
"RTN","IBDFN9",29,0)
 ;
"RTN","IBDFN9",30,0)
DSPLYPRV(IEN) ;output transform for provider (file #200)
"RTN","IBDFN9",31,0)
 ;example of use: S Y=$$DSPLYPRV^IBDFN9(Y)
"RTN","IBDFN9",32,0)
 Q $P($G(^VA(200,+$G(IEN),0)),"^")
"RTN","IBDFN9",33,0)
 ;
"RTN","IBDFN9",34,0)
DSPLYYN(Y) ;changes 1 to YES and 0 or "" to NO
"RTN","IBDFN9",35,0)
 Q:Y=1 "YES"
"RTN","IBDFN9",36,0)
 Q:(Y=0)!(Y="") "NO"
"RTN","IBDFN9",37,0)
 Q " "
"RTN","IBDFN9",38,0)
VARVAL(Y) ;determines PCE DIM NODE VALUE
"RTN","IBDFN9",39,0)
 Q:'$D(Y) ""
"RTN","IBDFN9",40,0)
 Q $S(Y="SC":6,Y="AO":7,Y="IR":8,Y="EC":9,Y="MST":10,1:"")
"RTN","IBDFQEA")
0^18^B39066741^B31331634
"RTN","IBDFQEA",1,0)
IBDFQEA ;ALB/CJM/MAF - ENCOUNTER FORM - BUILD FORM(editing action for group's selections list) ;06/16/95
"RTN","IBDFQEA",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**15,38,63**;APR 24, 1997;Build 80
"RTN","IBDFQEA",3,0)
 ;
"RTN","IBDFQEA",4,0)
 ;
"RTN","IBDFQEA",5,0)
EDIT ;allows editing of an existing selection
"RTN","IBDFQEA",6,0)
 D FULL^VALM1
"RTN","IBDFQEA",7,0)
 N SEL,SUB,SLCTN,SC,NODE,OQTY,NQTY
"RTN","IBDFQEA",8,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","IBDFQEA",9,0)
 S SEL="" F  S SEL=$O(VALMY(SEL)) Q:'SEL  D
"RTN","IBDFQEA",10,0)
 .W !,"Editing Entry #",SEL
"RTN","IBDFQEA",11,0)
 .S SLCTN=$P($G(^TMP("SELIDX",$J,SEL)),"^",3) Q:'SLCTN
"RTN","IBDFQEA",12,0)
 .S NODE=$G(^IBE(357.3,SLCTN,0))
"RTN","IBDFQEA",13,0)
 .S IBGRP=$P(NODE,"^",4),ORD=$P(NODE,"^",5)
"RTN","IBDFQEA",14,0)
 .;re-index the record, to insure it is good
"RTN","IBDFQEA",15,0)
 .K DIK,DA S DIK="^IBE(357.3,",DA=SLCTN D IX^DIK K DIK
"RTN","IBDFQEA",16,0)
 .;edit the order of the selection - also, for placeholders, the text, then quit
"RTN","IBDFQEA",17,0)
 .I $P(NODE,"^",2) S DA=SLCTN,DIE=357.3,DR="[IBDF EDIT PLACE HOLDER]" D ^DIE K DIE,DA,DR Q
"RTN","IBDFQEA",18,0)
 .S DA=SLCTN,DIE=357.3,DR=".05;I '$P($G(^IBE(357.6,$P($G(^IBE(357.2,+IBLIST,0)),""^"",11),16)),""^"",8) S Y=""@99"";S OQTY=$P(^IBE(357.3,DA,0),""^"",9);.09;S NQTY=X;@99;S CONT=1" S CONT=0 D ^DIE K DIE,DA,DR
"RTN","IBDFQEA",19,0)
 .D CODES^IBDF4A W !
"RTN","IBDFQEA",20,0)
 .D ADD^IBDF4C W !
"RTN","IBDFQEA",21,0)
 .;add any missing subcolumns
"RTN","IBDFQEA",22,0)
 .S SC=0 F SC=1:1:8 I $G(IBLIST("SCTYPE",SC))=1 I '$D(^IBE(357.3,SLCTN,1,"B",SC)) D
"RTN","IBDFQEA",23,0)
 ..K DA,DO,DINUM,DIC
"RTN","IBDFQEA",24,0)
 ..N DLAYGO
"RTN","IBDFQEA",25,0)
 ..S DIC="^IBE(357.3,"_SLCTN_",1,",DA(1)=SLCTN,X=SC,DIC(0)="L",DLAYGO=357.3 D FILE^DICN
"RTN","IBDFQEA",26,0)
 .;now allow the user to edit editable subcolumns - CONT=0 means the user up-arrowed out, so stop
"RTN","IBDFQEA",27,0)
 .I CONT S SUB=0 F  S SUB=$O(^IBE(357.3,SLCTN,1,SUB)) Q:'SUB  D
"RTN","IBDFQEA",28,0)
 ..S SC=+$G(^IBE(357.3,SLCTN,1,SUB,0)) I $G(IBLIST("SCTYPE",SC))=1,$G(IBLIST("SCPIECE",SC)),$G(IBLIST("SCEDITABLE",SC)) D
"RTN","IBDFQEA",29,0)
 ...I $G(^IBE(357.3,SLCTN,1,0))="" S ^IBE(357.3,SLCTN,1,0)="^357.31IA^"
"RTN","IBDFQEA",30,0)
 ...S DIE="^IBE(357.3,"_SLCTN_",1,",DA(1)=SLCTN,DA=SUB,DR=".02;S CONT=1",CONT=0 W !!,"Editing Subcolumn "_SC_": Header="_IBLIST("SCHDR",SC)
"RTN","IBDFQEA",31,0)
 ...S IBVAL=$P($G(^IBE(357.3,SLCTN,1,SUB,0)),"^",2)
"RTN","IBDFQEA",32,0)
 ...I $G(OQTY)'=$G(NQTY) D
"RTN","IBDFQEA",33,0)
 ....S IBVAL=$P(IBVAL," x "_OQTY)_$S(NQTY>1:" x "_NQTY,1:""),DR=".02////^S X=IBVAL;I;"_DR
"RTN","IBDFQEA",34,0)
 ...I $P($G(^IBE(357.3,SLCTN,3,0)),"^",4)>0 D
"RTN","IBDFQEA",35,0)
 ....S IBVAL=$P($G(^IBE(357.3,SLCTN,1,SUB,0)),"^",2)
"RTN","IBDFQEA",36,0)
 ....S:IBVAL'["w/ mod" IBVAL=IBVAL_" w/ mod"
"RTN","IBDFQEA",37,0)
 ....S DR=".02////^S X=IBVAL;I;"_DR
"RTN","IBDFQEA",38,0)
 ...D ^DIE K DIE,DA,DR,IBVAL I 'CONT Q
"RTN","IBDFQEA",39,0)
 .D NARR^IBDF4 W !
"RTN","IBDFQEA",40,0)
 .D TERM^IBDF4 W !
"RTN","IBDFQEA",41,0)
 ;
"RTN","IBDFQEA",42,0)
EDITEXIT ;
"RTN","IBDFQEA",43,0)
 G EXIT
"RTN","IBDFQEA",44,0)
DELETE ;allows the user to select selections to delete
"RTN","IBDFQEA",45,0)
 D FULL^VALM1
"RTN","IBDFQEA",46,0)
 N SEL
"RTN","IBDFQEA",47,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBDFQEA",48,0)
 K DA
"RTN","IBDFQEA",49,0)
 S SEL="" F  S SEL=$O(VALMY(SEL)) Q:'SEL  D
"RTN","IBDFQEA",50,0)
 .S DIK="^IBE(357.3,",DA=$P($G(^TMP("SELIDX",$J,SEL)),"^",3) Q:'DA
"RTN","IBDFQEA",51,0)
 .S NODE=$G(^IBE(357.3,DA,0))
"RTN","IBDFQEA",52,0)
 .S IBGRP=$P(NODE,"^",4),ORD=$P(NODE,"^",5)
"RTN","IBDFQEA",53,0)
 .Q:'$$RUSURE^IBDFU5("Selection #"_SEL)
"RTN","IBDFQEA",54,0)
 .D ^DIK
"RTN","IBDFQEA",55,0)
 .D KILL^VALM10(SEL)
"RTN","IBDFQEA",56,0)
 .I '$D(^TMP("IBDF ADDSLCTN",$J)) S ^TMP("IBDF DELETE SELECTION OPTION",$J)=1
"RTN","IBDFQEA",57,0)
  K DIK,DA
"RTN","IBDFQEA",58,0)
 G EXIT
"RTN","IBDFQEA",59,0)
ADDSLCTN ;allows the user to add a selection to the selection group
"RTN","IBDFQEA",60,0)
 N QUIT,SUB,IBDSLCTN,IBGRP
"RTN","IBDFQEA",61,0)
 ;
"RTN","IBDFQEA",62,0)
 D FULL^VALM1
"RTN","IBDFQEA",63,0)
 S IBRTN=IBLIST("RTN")
"RTN","IBDFQEA",64,0)
 I $G(IBLIST("CLRM")) S IBLIST("EDITING CLRM")=1
"RTN","IBDFQEA",65,0)
 D RTNDSCR^IBDFU1B(.IBRTN)
"RTN","IBDFQEA",66,0)
 I IBRTN("ACTION")'=3 D NOGOOD^IBDF4 G ADDEXIT
"RTN","IBDFQEA",67,0)
 S ^TMP("IBDF ADDSLCTN",$J)=0  ;Track if the user added a selection but did not save changes. Needed for form history fields.
"RTN","IBDFQEA",68,0)
 K @IBRTN("DATA_LOCATION")
"RTN","IBDFQEA",69,0)
 S QUIT=0 F  D  G:QUIT EXIT  W !,"Now for another!",!
"RTN","IBDFQEA",70,0)
 .I '$$DORTN^IBDFU1B(.IBRTN) S QUIT=1 D NOGOOD^IBDF4 Q
"RTN","IBDFQEA",71,0)
 .I '$D(@IBRTN("DATA_LOCATION")) S QUIT=1 Q
"RTN","IBDFQEA",72,0)
 .S DIC="^IBE(357.4,",DIC(0)="AEMN",DIC("S")="I $P(^IBE(357.4,+Y,0),""^"",3)=IBLIST" D ^DIC K DIC S:X="^" QUIT=1 Q:QUIT  S IBGRP=+Y I Y<0 D  Q:QUIT=1
"RTN","IBDFQEA",73,0)
 ..W !!,"A SELECTION GROUP HEADER IS REQUIRED.... The selection will not be added if none is provided....Enter '??' for a list of choices.",!!
"RTN","IBDFQEA",74,0)
 ..S DIC="^IBE(357.4,",DIC(0)="AEMN",DIC("S")="I $P(^IBE(357.4,+Y,0),""^"",3)=IBLIST" D ^DIC K DIC S IBGRP=+Y I Y<0 S QUIT=1 Q
"RTN","IBDFQEA",75,0)
 .D ADDREC^IBDF4(.QUIT,"",.IBDSLCTN) ;edits and adds the selection
"RTN","IBDFQEA",76,0)
 .I QUIT=1 D:$D(IBDSLCTN) KILL3573(IBDSLCTN)
"RTN","IBDFQEA",77,0)
 .K @IBRTN("DATA_LOCATION")
"RTN","IBDFQEA",78,0)
ADDEXIT ;
"RTN","IBDFQEA",79,0)
 G EXIT
"RTN","IBDFQEA",80,0)
ADDBLANK ;allows the user to add a dummy selection to the selection group
"RTN","IBDFQEA",81,0)
 ;i.e., a place holder that will not actually print a selection
"RTN","IBDFQEA",82,0)
 ;
"RTN","IBDFQEA",83,0)
 ;
"RTN","IBDFQEA",84,0)
 N IBGRP
"RTN","IBDFQEA",85,0)
 D FULL^VALM1
"RTN","IBDFQEA",86,0)
 K DIC S DIC="^IBE(357.4,",DIC(0)="AEMN",DIC("S")="I $D(^IBE(357.3,""APO"",IBLIST,+Y))" D ^DIC S IBGRP=+Y K DIC
"RTN","IBDFQEA",87,0)
 I ('$D(DIRUT))&(Y>0) D ADD^IBDF4A
"RTN","IBDFQEA",88,0)
 D INIT^IBDFQSL1
"RTN","IBDFQEA",89,0)
 S VALMBCK="R"
"RTN","IBDFQEA",90,0)
 Q
"RTN","IBDFQEA",91,0)
 ;To kill incomplete entries in ^IBE(357.3
"RTN","IBDFQEA",92,0)
KILL3573(IBDSEL) ;
"RTN","IBDFQEA",93,0)
 N DA,DIK
"RTN","IBDFQEA",94,0)
 S DA=IBDSEL,DIK="^IBE(357.3," D ^DIK K DIK ;D BLKCHNG^IBDF19(IBFORM,IBBLK)
"RTN","IBDFQEA",95,0)
 Q
"RTN","IBDFQEA",96,0)
FORMAT ;allows the user to format all of the selections in the group in mass
"RTN","IBDFQEA",97,0)
 ;
"RTN","IBDFQEA",98,0)
 D FORMAT^IBDF9A1
"RTN","IBDFQEA",99,0)
 G EXIT
"RTN","IBDFQEA",100,0)
 ;
"RTN","IBDFQEA",101,0)
GRPDEL ;  -- Group Delete
"RTN","IBDFQEA",102,0)
 N GRP,IBDSEL
"RTN","IBDFQEA",103,0)
 D FULL^VALM1
"RTN","IBDFQEA",104,0)
 S IBDSEL=0
"RTN","IBDFQEA",105,0)
 I $O(^IBE(357.3,"C",IBLIST,"")) S IBDSEL=1  ;Group has selections.
"RTN","IBDFQEA",106,0)
 S DIC="^IBE(357.4,",DIC(0)="AEMN",DIC("S")="I $P(^IBE(357.4,+Y,0),""^"",3)=IBLIST" D ^DIC K DIC S IBGRP=+Y I Y<0 G EXIT
"RTN","IBDFQEA",107,0)
 S GRP=+Y
"RTN","IBDFQEA",108,0)
 Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.4,GRP,0)),"^"))
"RTN","IBDFQEA",109,0)
 I GRP D DELSLCTN^IBDF3 K DA S DIK="^IBE(357.4,",DA=GRP D ^DIK K DIK
"RTN","IBDFQEA",110,0)
 D IDXGRP^IBDF3
"RTN","IBDFQEA",111,0)
 I IBDSEL,'$G(^TMP("IBDF ADDSLCTN",$J)) S ^TMP("IBDF DELETE SELECTION OPTION",$J)=1  ;User deleted a group that had selections.
"RTN","IBDFQEA",112,0)
 S VALMBCK="R"
"RTN","IBDFQEA",113,0)
 D EXIT Q
"RTN","IBDFQEA",114,0)
 ;
"RTN","IBDFQEA",115,0)
GROUPADD ;  -- Add a new group to the selection list and to file 357.4.
"RTN","IBDFQEA",116,0)
 D FULL^VALM1
"RTN","IBDFQEA",117,0)
 N NAME,QUIT,GRP
"RTN","IBDFQEA",118,0)
 S QUIT=0
"RTN","IBDFQEA",119,0)
 F  D  D IDXGRP^IBDF3 G:QUIT EXIT
"RTN","IBDFQEA",120,0)
 .K DIR S DIR(0)="357.4,.01O",DIR("B")="" D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
"RTN","IBDFQEA",121,0)
 .S NAME=Y
"RTN","IBDFQEA",122,0)
 .K DIC,DD,DO,DINUM S DIC="^IBE(357.4,",X=NAME,DIC(0)=""
"RTN","IBDFQEA",123,0)
 .D FILE^DICN K DIC,DIE,DA
"RTN","IBDFQEA",124,0)
 .I +Y<0 W !,"Unable to create a new record!" D PAUSE^VALM1 S QUIT=1 Q
"RTN","IBDFQEA",125,0)
 .I +Y>0 K DA S DA=+Y,DIE="^IBE(357.4,",DIE("NO^")="Any value",DR=".02;.04;.03////"_IBLIST D ^DIE K DIC,DIE,DR,DA
"RTN","IBDFQEA",126,0)
 .W !,"Now Another!",!
"RTN","IBDFQEA",127,0)
 G EXIT
"RTN","IBDFQEA",128,0)
 ;
"RTN","IBDFQEA",129,0)
GRPEDIT ;
"RTN","IBDFQEA",130,0)
 D FULL^VALM1
"RTN","IBDFQEA",131,0)
 N DIC,DIE,DA,DR,GRP
"RTN","IBDFQEA",132,0)
 S DIC="^IBE(357.4,",DIC(0)="AEMN",DIC("S")="I $P(^IBE(357.4,+Y,0),""^"",3)=IBLIST" D ^DIC K DIC S IBGRP=+Y I Y<0 G EXIT
"RTN","IBDFQEA",133,0)
 S GRP=+Y
"RTN","IBDFQEA",134,0)
 S (DIC,DIE)="^IBE(357.4,",DA=GRP,DR=".01;.02;.04" D ^DIE
"RTN","IBDFQEA",135,0)
 I '$D(DA) D DELSLCTN^IBDF3
"RTN","IBDFQEA",136,0)
 D IDXGRP^IBDF3
"RTN","IBDFQEA",137,0)
 S VALMBCK="R"
"RTN","IBDFQEA",138,0)
 D EXIT Q
"RTN","IBDFQEA",139,0)
 Q
"RTN","IBDFQEA",140,0)
 ;
"RTN","IBDFQEA",141,0)
EXIT D INIT^IBDFQSL1 S VALMBCK="R" I $D(^TMP("IBDF ADDSLCTN",$J)) S ^TMP("IBDF ADDSLCTN",$J)=1
"RTN","IBDFQEA",142,0)
 Q
"RTN","IBDFQEA",143,0)
GRPRESEQ ;  -- Resequence numerically or alphabetically a group
"RTN","IBDFQEA",144,0)
 ;     within a block.
"RTN","IBDFQEA",145,0)
 D FULL^VALM1
"RTN","IBDFQEA",146,0)
 N DIC,GRP,IBGRP,IBGRUP
"RTN","IBDFQEA",147,0)
 Q:$$LSTDSCR2^IBDFU1(.IBLIST) 1
"RTN","IBDFQEA",148,0)
GRP1 S DIC="^IBE(357.4,",DIC(0)="AEMN",DIC("S")="I $P(^IBE(357.4,+Y,0),""^"",3)=IBLIST" D ^DIC K DIC S IBGRUP(+Y)=+Y
"RTN","IBDFQEA",149,0)
 I Y<0&($D(IBGRUP)) D SEQUENCE^IBDF4,EXIT Q
"RTN","IBDFQEA",150,0)
 I Y<0&('$D(IBGRUP)) G EXIT
"RTN","IBDFQEA",151,0)
 G GRP1
"RTN","IBDFQEA",152,0)
GRPRSEQ1 ;  -- Resequence all groups chosen
"RTN","IBDFQEA",153,0)
 N IBGROUP,IBFLAG
"RTN","IBDFQEA",154,0)
 S IBGROUP=0,IBFLAG=1
"RTN","IBDFQEA",155,0)
 F  S IBGROUP=$O(IBGRP(IBGROUP)) Q:'IBGROUP  D SEQUENCE^IBDF4
"RTN","IBDFQEA",156,0)
 Q
"RTN","IBDFQSL")
0^46^B6204351^B5375184
"RTN","IBDFQSL",1,0)
IBDFQSL ;ALB/CJM/AAS/MAF - ENCOUNTER FORM - Quick selection edit ;06/12/95
"RTN","IBDFQSL",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;APR 24, 1997;Build 80
"RTN","IBDFQSL",3,0)
 ;
"RTN","IBDFQSL",4,0)
 ;
"RTN","IBDFQSL",5,0)
 ;allows user to select a form, then displays it for edit
"RTN","IBDFQSL",6,0)
 N IBFORM,ARY,DFN,IBAPPT,RTNLIST,IBPRINT
"RTN","IBDFQSL",7,0)
 S ARY="^TMP(""IBDF"",$J,""TEMPORARY CLINIC LIST"")"
"RTN","IBDFQSL",8,0)
 ;
"RTN","IBDFQSL",9,0)
 K @ARY
"RTN","IBDFQSL",10,0)
 S VALMBCK=""
"RTN","IBDFQSL",11,0)
 I $G(IBAPI("SELECT"))'="" X IBAPI("SELECT")
"RTN","IBDFQSL",12,0)
 K ARY
"RTN","IBDFQSL",13,0)
 I IBFORM,'$$LOCKFRM2^IBDFU7(IBFORM) D LOCKMSG2^IBDFU7(IBFORM) S IBFORM=""
"RTN","IBDFQSL",14,0)
 I IBFORM D PRNTPRMS^IBDFU1C(.IBPRINT,0,1,0,1),UNCMPL^IBDF19(IBFORM,0)
"RTN","IBDFQSL",15,0)
 Q:'$$FORMDSCR^IBDFU1C(.IBFORM)
"RTN","IBDFQSL",16,0)
EDITBLK ;allows the user to edit everything about the block
"RTN","IBDFQSL",17,0)
 ;allows user to discard or save changes to the block
"RTN","IBDFQSL",18,0)
 ;
"RTN","IBDFQSL",19,0)
 ;If IBBLK and IBBLK2 are used to point to two copies, one copy for editing and the other in case 'undo' is needed
"RTN","IBDFQSL",20,0)
 ; 
"RTN","IBDFQSL",21,0)
 N IBBLK,IBVALMBG,TOP1,TOP2,BOT1,BOT2,IBBLK2,IBTKODR,IBJUNK,IFSAVE
"RTN","IBDFQSL",22,0)
 ;
"RTN","IBDFQSL",23,0)
 S IBVALMBG=VALMBG
"RTN","IBDFQSL",24,0)
 D FULL^VALM1
"RTN","IBDFQSL",25,0)
 S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,IOSL,"HEADER") ;select the block
"RTN","IBDFQSL",26,0)
 I IBBLK S IBLIST=$O(^IBE(357.2,"C",IBBLK,0)) D
"RTN","IBDFQSL",27,0)
 .I 'IBLIST W !!,"Block does not contain a list!  Try Again.",! D PAUSE^IBDFU5 Q
"RTN","IBDFQSL",28,0)
 .D KILL^IBDFUA
"RTN","IBDFQSL",29,0)
 .Q:$$BLKDESCR^IBDFU1B(.IBBLK)
"RTN","IBDFQSL",30,0)
 .S (IBBLK2,IBTKODR,IBJUNK)=""
"RTN","IBDFQSL",31,0)
 .D COPYBLK^IBDF5B(IBBLK,.IBBLK2,.IBBLK,.IBTKODR,.IBJUNK) I 'IBBLK S IBBLK=IBBLK2,IBBLK2="" Q  ;sets IBBLK to the work copy, IBBLK2 to the copy actually on the form
"RTN","IBDFQSL",32,0)
 .D TOPNBOT^IBDFU5(IBBLK,.TOP1,.BOT1)
"RTN","IBDFQSL",33,0)
 .D EN^IBDFQSL1
"RTN","IBDFQSL",34,0)
 .I IBBLK,IBBLK2 D
"RTN","IBDFQSL",35,0)
 ..S IFSAVE=$$ASKSAVE^IBDF5B
"RTN","IBDFQSL",36,0)
 ..I IFSAVE D SAVECOPY^IBDF5B(.IBBLK,.IBBLK2,IBTKODR) S IBBLK=IBBLK2,IBBLK2="" D BLKCHNG^IBDF19(IBFORM,IBBLK)
"RTN","IBDFQSL",37,0)
 ..I 'IFSAVE D DLTCOPY^IBDF5B(IBBLK) S IBBLK=IBBLK2,IBBLK2=""
"RTN","IBDFQSL",38,0)
 ..L -^IBE(357.1,IBBLK):1
"RTN","IBDFQSL",39,0)
 .I '$G(IBFASTXT) D
"RTN","IBDFQSL",40,0)
 ..S VALMBG=IBVALMBG
"RTN","IBDFQSL",41,0)
 ..D TOPNBOT^IBDFU5(IBBLK,.TOP2,.BOT2)
"RTN","IBDFQSL",42,0)
 ..S TOP1=$S(TOP1<TOP2:TOP1,1:TOP2),BOT1=$S(BOT1>BOT2:BOT1,1:BOT2)
"RTN","IBDFQSL",43,0)
 K ^TMP("IBDF DELETE SELECTION OPTION",$J),^TMP("IBDF DELETED ALL SELECTIONS",$J),^TMP("IBDF ADDSLCTN",$J)
"RTN","IBDFQSL",44,0)
 S VALMBCK="R"
"RTN","IBDFQSL",45,0)
 Q
"RTN","IBDFQSL",46,0)
 ;
"RTN","IBDFQSL1")
0^17^B19411131^B16849153
"RTN","IBDFQSL1",1,0)
IBDFQSL1 ;ALB/CJM/AAS/MAF - ENCOUNTER FORM - Quick selection edit (cont.) ;06/12/95
"RTN","IBDFQSL1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;APR 24, 1997;Build 80
"RTN","IBDFQSL1",3,0)
 ;
"RTN","IBDFQSL1",4,0)
 ;
"RTN","IBDFQSL1",5,0)
EN ; -- main entry point for IBDF QUICK SELECTION EDIT
"RTN","IBDFQSL1",6,0)
 D EN^VALM("IBDF QUICK SELECTION EDIT")
"RTN","IBDFQSL1",7,0)
 Q
"RTN","IBDFQSL1",8,0)
 ;
"RTN","IBDFQSL1",9,0)
HDR ; -- header code
"RTN","IBDFQSL1",10,0)
 S VALMHDR(1)="This screen displays the selection list for ' "_$P(^IBE(357.1,IBBLK,0),"^",1)_" '"
"RTN","IBDFQSL1",11,0)
 S VALMHDR(2)="on Encounter Form ' "_$P(^IBE(357,IBFORM,0),"^",1)_" '"
"RTN","IBDFQSL1",12,0)
 Q
"RTN","IBDFQSL1",13,0)
 ;
"RTN","IBDFQSL1",14,0)
INIT ; -- init variables and list array
"RTN","IBDFQSL1",15,0)
 N IBDCNT,IBDCNT1
"RTN","IBDFQSL1",16,0)
 W !,"Please wait while I build the list..."
"RTN","IBDFQSL1",17,0)
 K ^TMP("SEL",$J),^TMP("SELIDX",$J),IBDFHDR D KILL^VALM10()
"RTN","IBDFQSL1",18,0)
 S (IBDCNT,IBDCNT1,VALMCNT)=0
"RTN","IBDFQSL1",19,0)
 I '$D(^TMP("IBDF DELETE SELECTION OPTION",$J)) S ^TMP("IBDF DELETE SELECTION OPTION",$J)=0
"RTN","IBDFQSL1",20,0)
 S IBDLSTNM=$P(^IBE(357.2,IBLIST,0),"^",1) D INTER D
"RTN","IBDFQSL1",21,0)
 .S IBLSNODE=$G(^IBE(357.2,IBLIST,0))
"RTN","IBDFQSL1",22,0)
 .;User added selections and then deleted without saving (empty block scenario). Keep track so that history fields are not updated.
"RTN","IBDFQSL1",23,0)
 .I ^TMP("IBDF DELETE SELECTION OPTION",$J)=1,'$O(^IBE(357.3,"C",IBLIST,"")) S ^TMP("IBDF DELETED ALL SELECTIONS",$J)=1
"RTN","IBDFQSL1",24,0)
 .I $D(IBDFAR) F IBDFX=0:0 S IBDFX=$O(@(IBDFAR_"("_IBDFX_")")) Q:'IBDFX  S IBDFARR=$G(@(IBDFAR_"("_IBDFX_")")) D:$P(IBDFARR,"^",1)="" HEADER D:$P(IBDFARR,"^",1)]"" SETARR
"RTN","IBDFQSL1",25,0)
 Q:$$LSTDESCR^IBDFU1(.IBLIST) 1
"RTN","IBDFQSL1",26,0)
 S IBRTN=IBLIST("RTN")
"RTN","IBDFQSL1",27,0)
 D RTNDSCR^IBDFU1B(.IBRTN)
"RTN","IBDFQSL1",28,0)
 I '$D(^TMP("SEL",$J)) D NUL
"RTN","IBDFQSL1",29,0)
 Q
"RTN","IBDFQSL1",30,0)
 ;
"RTN","IBDFQSL1",31,0)
SETARR ;  -- Set up Listman array
"RTN","IBDFQSL1",32,0)
 N IBDFNODE
"RTN","IBDFQSL1",33,0)
 W "."
"RTN","IBDFQSL1",34,0)
 S IBDFNODE=IBDFARR
"RTN","IBDFQSL1",35,0)
 S IBDFSEL=$P(IBDFNODE,"^",4)
"RTN","IBDFQSL1",36,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFQSL1",37,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFQSL1",38,0)
 S X=""
"RTN","IBDFQSL1",39,0)
 S IBDFVAL=$J(IBDCNT1_")",5)
"RTN","IBDFQSL1",40,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,1,5)
"RTN","IBDFQSL1",41,0)
 S IBDFVAL=$P(IBDFNODE,"^",1)
"RTN","IBDFQSL1",42,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,7,8)
"RTN","IBDFQSL1",43,0)
 S IBDFVAL=$P(IBDFNODE,"^",6)
"RTN","IBDFQSL1",44,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,16,5)
"RTN","IBDFQSL1",45,0)
 S IBDFVAL=$P(IBDFNODE,"^",2)
"RTN","IBDFQSL1",46,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,23,55)
"RTN","IBDFQSL1",47,0)
 ;S IBDFVAL=$P(^IBE(357.4,$P(IBDFNODE,"^",5),0),"^",1) ;Remove per SME's for ICD-10 project IBD*3.0*63
"RTN","IBDFQSL1",48,0)
 ;S X=$$SETSTR^VALM1(IBDFVAL,X,64,15)
"RTN","IBDFQSL1",49,0)
 I $D(^IBE(357.3,$P(IBDFNODE,"^",4),2)) D
"RTN","IBDFQSL1",50,0)
 .S IBDFVAL=$P(^IBE(357.3,$P(IBDFNODE,"^",4),2),"^")
"RTN","IBDFQSL1",51,0)
 .S X=$$SETSTR^VALM1(IBDFVAL,X,81,26)
"RTN","IBDFQSL1",52,0)
 .S IBDFVAL=$P(^IBE(357.3,$P(IBDFNODE,"^",4),2),"^",2)
"RTN","IBDFQSL1",53,0)
 .I $D(^LEX(757.01)) S IBDFVAL=$P($G(^LEX(757.01,+IBDFVAL,0)),"^")
"RTN","IBDFQSL1",54,0)
 .E  S IBDFVAL=$P($G(^GMP(757.01,+IBDFVAL,0)),"^")
"RTN","IBDFQSL1",55,0)
 .S X=$$SETSTR^VALM1(IBDFVAL,X,109,23)
"RTN","IBDFQSL1",56,0)
TMP ; -- Set up TMP Array
"RTN","IBDFQSL1",57,0)
 S ^TMP("SEL",$J,IBDCNT,0)=X,^TMP("SEL",$J,"IDX",VALMCNT,IBDCNT1)=IBDFSEL
"RTN","IBDFQSL1",58,0)
 S ^TMP("SELIDX",$J,IBDCNT1)=VALMCNT_"^"_$P(IBDFARR,"^",3)_"^"_$P(IBDFARR,"^",4)_"^"_$P(IBDFARR,"^",5) ;_"^"_IBDFX_"^"_$P(IBDFTMP,"^",4)_"^"_$P(IBDFTMP,"^",5)_"^"_$P(IBDFTMP,"^",1)_"^"_$P(IBDFTMP,"^",2)
"RTN","IBDFQSL1",59,0)
 Q
"RTN","IBDFQSL1",60,0)
HEADER ;  -- Set up header line for the display
"RTN","IBDFQSL1",61,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFQSL1",62,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFQSL1",63,0)
 S X=""
"RTN","IBDFQSL1",64,0)
 S IBDVAL=$S($P(IBDFARR,"^",2)]"":$P(IBDFARR,"^",2),1:"BLANK")
"RTN","IBDFQSL1",65,0)
 S IBDFHDR(IBDVAL)=IBDCNT_"^"_$P(IBDFARR,"^",5)
"RTN","IBDFQSL1",66,0)
 S IBDFSEL=$P(IBDFARR,"^",5)
"RTN","IBDFQSL1",67,0)
 S X=$$SETSTR^VALM1(" ",X,1,3) D TMP
"RTN","IBDFQSL1",68,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFQSL1",69,0)
 S IBDVAL=$P(IBDFARR,"^",6)
"RTN","IBDFQSL1",70,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,16,5)
"RTN","IBDFQSL1",71,0)
 S IBDVAL=$P(IBDFARR,"^",2)
"RTN","IBDFQSL1",72,0)
 S IBDVAL1=$L(IBDVAL) S IBDVAL1=(80-IBDVAL1)/2 S IBDVAL1=IBDVAL1\1 S X=$$SETSTR^VALM1(" ",X,22,IBDVAL1)
"RTN","IBDFQSL1",73,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,IBDVAL1,25) D TMP,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
"RTN","IBDFQSL1",74,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFQSL1",75,0)
 S X=$$SETSTR^VALM1(" ",X,1,3) D TMP
"RTN","IBDFQSL1",76,0)
 S IBDCNT1=IBDCNT1-1
"RTN","IBDFQSL1",77,0)
 Q
"RTN","IBDFQSL1",78,0)
INTER ;  -- Find Package interface for selection list
"RTN","IBDFQSL1",79,0)
 K IBARRY S IBDFAR="IBARRY",IBDFINT=$P($G(^IBE(357.2,IBLIST,0)),"^",11),IBDFINT(1)=$P(^IBE(357.6,IBDFINT,0),"^",1) D GETLST^IBDFQSL2(IBFORM,IBBLK,IBLIST,.IBDFINT,"IBARRY",1)
"RTN","IBDFQSL1",80,0)
 Q
"RTN","IBDFQSL1",81,0)
HELP ; -- help code
"RTN","IBDFQSL1",82,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBDFQSL1",83,0)
 Q
"RTN","IBDFQSL1",84,0)
 ;
"RTN","IBDFQSL1",85,0)
EXIT ; -- exit code
"RTN","IBDFQSL1",86,0)
 K IBARRY,IBDFAR,IBDFARR,IBDFHDR,IBDFINT,IBDFSEL,IBDFVAL,IBDFX,IBDLSTNM,IBDVAL,IBDVAL1,IBLIST,IBRTN,IEN,IBLSNODE,DIC,IBGRP,NODE
"RTN","IBDFQSL1",87,0)
 K ^TMP("SEL",$J),^TMP("SELIDX",$J)
"RTN","IBDFQSL1",88,0)
 Q
"RTN","IBDFQSL1",89,0)
 ;
"RTN","IBDFQSL1",90,0)
EXPND ; -- expand code
"RTN","IBDFQSL1",91,0)
 Q
"RTN","IBDFQSL1",92,0)
 ;
"RTN","IBDFQSL1",93,0)
NUL ;  -- Null message
"RTN","IBDFQSL1",94,0)
 S ^TMP("SEL",$J,1,0)=" ",^TMP("SEL",$J,2,0)="There are no selection lists for this block.",^TMP("SELIDX",$J,1)=1,^TMP("SELIDX",$J,2)=2
"RTN","IBDFQSL1",95,0)
 Q
"RTN","IBDFU1B")
0^36^B25321593^B23536814
"RTN","IBDFU1B",1,0)
IBDFU1B ;ALB/CJM - ENCOUNTER FORM ;11/16/92
"RTN","IBDFU1B",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;APR 24, 1997;Build 80
"RTN","IBDFU1B",3,0)
 ;
"RTN","IBDFU1B",4,0)
 ;
"RTN","IBDFU1B",5,0)
 ;utilities
"RTN","IBDFU1B",6,0)
BLKDESCR(IBBLK) ;parses the block record pointed to by IBBLK and puts the
"RTN","IBDFU1B",7,0)
 ;description in IBBLK array - should be called by reference
"RTN","IBDFU1B",8,0)
 ;returns 1 if block description is too incomplete to print block
"RTN","IBDFU1B",9,0)
 Q:'$G(IBBLK) 1
"RTN","IBDFU1B",10,0)
 N NODE0
"RTN","IBDFU1B",11,0)
 S NODE0=$G(^IBE(357.1,IBBLK,0))
"RTN","IBDFU1B",12,0)
 S IBBLK("NAME")=$P(NODE0,"^",1)
"RTN","IBDFU1B",13,0)
 S IBBLK("Y")=$P(NODE0,"^",4)
"RTN","IBDFU1B",14,0)
 S IBBLK("X")=$P(NODE0,"^",5)
"RTN","IBDFU1B",15,0)
 S IBBLK("W")=$P(NODE0,"^",6)
"RTN","IBDFU1B",16,0)
 S IBBLK("H")=$P(NODE0,"^",7)
"RTN","IBDFU1B",17,0)
 S IBBLK("BOX")=$P(NODE0,"^",10)
"RTN","IBDFU1B",18,0)
 S IBBLK("HDR")=$P(NODE0,"^",11)
"RTN","IBDFU1B",19,0)
 S IBBLK("HDISP")=$P(NODE0,"^",12)
"RTN","IBDFU1B",20,0)
 S IBBLK("S")=$P(NODE0,"^",3)
"RTN","IBDFU1B",21,0)
 S IBBLK("PAGE")=1+(IBBLK("Y")\IBFORM("PAGE_HT"))
"RTN","IBDFU1B",22,0)
 Q:NODE0="" 1
"RTN","IBDFU1B",23,0)
 Q 0
"RTN","IBDFU1B",24,0)
 ;
"RTN","IBDFU1B",25,0)
RTNDSCR(RTN) ;RTN should be a pointer to the Package Interface file
"RTN","IBDFU1B",26,0)
 ;RTN should be passed by reference
"RTN","IBDFU1B",27,0)
 ;
"RTN","IBDFU1B",28,0)
 N NODE
"RTN","IBDFU1B",29,0)
 S NODE="",RTN=+$G(RTN)
"RTN","IBDFU1B",30,0)
 S:RTN NODE=$G(^IBE(357.6,RTN,0))
"RTN","IBDFU1B",31,0)
 S RTN("ACTION")=$P(NODE,"^",6)
"RTN","IBDFU1B",32,0)
 ;
"RTN","IBDFU1B",33,0)
 ;for input interfaces (mapping)
"RTN","IBDFU1B",34,0)
 I RTN("ACTION")=1 D  Q
"RTN","IBDFU1B",35,0)
 .S RTN("AVAIL")=$P(NODE,"^",9)
"RTN","IBDFU1B",36,0)
 .Q
"RTN","IBDFU1B",37,0)
 ;
"RTN","IBDFU1B",38,0)
 ;for output interfaces
"RTN","IBDFU1B",39,0)
 I RTN("ACTION")=2 D  Q
"RTN","IBDFU1B",40,0)
 .N NODFN
"RTN","IBDFU1B",41,0)
 .S NODFN=$P(NODE,"^",15)
"RTN","IBDFU1B",42,0)
 .S RTN("NAME")=$P(NODE,"^",1)
"RTN","IBDFU1B",43,0)
 .S RTN("RTN")=$P(NODE,"^",2,3)
"RTN","IBDFU1B",44,0)
 .S RTN("CHANGES")=$P(NODE,"^",5)
"RTN","IBDFU1B",45,0)
 .S RTN("DATATYPE")=$P(NODE,"^",7)
"RTN","IBDFU1B",46,0)
 .S RTN("FULL")=$P(NODE,"^",8)
"RTN","IBDFU1B",47,0)
 .S RTN("AVAIL")=$P(NODE,"^",9)
"RTN","IBDFU1B",48,0)
 .S RTN("ENTRY")=$S(RTN:$G(^IBE(357.6,RTN,4)),1:"")
"RTN","IBDFU1B",49,0)
 .S RTN("EXIT")=$S(RTN:$G(^IBE(357.6,RTN,5)),1:"")
"RTN","IBDFU1B",50,0)
 .;determine where the interface should put the data
"RTN","IBDFU1B",51,0)
 .I NODFN S RTN("DATA_LOCATION")="^TMP(""IB"",$J,""INTERFACES"","""_RTN("NAME")_""")"
"RTN","IBDFU1B",52,0)
 .I 'NODFN S RTN("DATA_LOCATION")="^TMP(""IB"",$J,""INTERFACES"",+$G(DFN),"""_RTN("NAME")_""")"
"RTN","IBDFU1B",53,0)
 ;
"RTN","IBDFU1B",54,0)
 ;for selection interfaces
"RTN","IBDFU1B",55,0)
 I RTN("ACTION")=3 D  Q
"RTN","IBDFU1B",56,0)
 .S RTN("NAME")=$P(NODE,"^",1)
"RTN","IBDFU1B",57,0)
 .S RTN("RTN")=$P(NODE,"^",2,3)
"RTN","IBDFU1B",58,0)
 .S RTN("FULL")=$P(NODE,"^",8)
"RTN","IBDFU1B",59,0)
 .S RTN("AVAIL")=$P(NODE,"^",9)
"RTN","IBDFU1B",60,0)
 .S RTN("DYNAMIC")=$P(NODE,"^",14)
"RTN","IBDFU1B",61,0)
 .S RTN("ENTRY")=$S(RTN:$G(^IBE(357.6,RTN,4)),1:"")
"RTN","IBDFU1B",62,0)
 .S RTN("EXIT")=$S(RTN:$G(^IBE(357.6,RTN,5)),1:"")
"RTN","IBDFU1B",63,0)
 .S RTN("DATA_LOCATION")="^TMP(""IB"",$J,""INTERFACES"","""_RTN("NAME")_""")"
"RTN","IBDFU1B",64,0)
 .S RTN("NAME",1)=$$DATANAME(RTN,1),RTN("WIDTH",1)=$$DATANODE(RTN,1)
"RTN","IBDFU1B",65,0)
 .S RTN("INPUT_RTN")=$P(NODE,"^",13)
"RTN","IBDFU1B",66,0)
 ;
"RTN","IBDFU1B",67,0)
 ;for reports
"RTN","IBDFU1B",68,0)
 I RTN("ACTION")=4 D  Q
"RTN","IBDFU1B",69,0)
 .S RTN("RTN")=$P(NODE,"^",2,3)
"RTN","IBDFU1B",70,0)
 .S RTN("AVAIL")=$P(NODE,"^",9)
"RTN","IBDFU1B",71,0)
 .S RTN("HSMRY?")=$P(NODE,"^",10)
"RTN","IBDFU1B",72,0)
 .S RTN("HSMRY")=$P(NODE,"^",11)
"RTN","IBDFU1B",73,0)
 .S RTN("ENTRY")=$S(RTN:$G(^IBE(357.6,RTN,4)),1:"")
"RTN","IBDFU1B",74,0)
 .S RTN("EXIT")=$S(RTN:$G(^IBE(357.6,RTN,5)),1:"")
"RTN","IBDFU1B",75,0)
 ;
"RTN","IBDFU1B",76,0)
 ;in case the action type is not defined
"RTN","IBDFU1B",77,0)
 S RTN("NAME")=$P(NODE,"^",1)
"RTN","IBDFU1B",78,0)
 S RTN("RTN")=$P(NODE,"^",2,3)
"RTN","IBDFU1B",79,0)
 S RTN("CHANGES")=$P(NODE,"^",5)
"RTN","IBDFU1B",80,0)
 S RTN("DATATYPE")=$P(NODE,"^",7)
"RTN","IBDFU1B",81,0)
 S RTN("FULL")=$P(NODE,"^",8)
"RTN","IBDFU1B",82,0)
 S RTN("AVAIL")=$P(NODE,"^",9)
"RTN","IBDFU1B",83,0)
 S RTN("DYNAMIC")=$P(NODE,"^",14)
"RTN","IBDFU1B",84,0)
 S RTN("ENTRY")=$S(RTN:$G(^IBE(357.6,RTN,4)),1:"")
"RTN","IBDFU1B",85,0)
 S RTN("EXIT")=$S(RTN:$G(^IBE(357.6,RTN,5)),1:"")
"RTN","IBDFU1B",86,0)
 ;
"RTN","IBDFU1B",87,0)
 ;I FULL,RTN S IEN=0 F  S IEN=$O(^IBE(357.6,RTN,15,IEN)) Q:'IEN  S NODE=$G(^IBE(357.6,RTN,15,IEN,0)) D
"RTN","IBDFU1B",88,0)
 ;.S I=$P(NODE,"^",3)
"RTN","IBDFU1B",89,0)
 ;.Q:'I
"RTN","IBDFU1B",90,0)
 ;.S RTN("NODE",I)=$P(NODE,"^",4),RTN("NAME",I)=$P(NODE,"^")
"RTN","IBDFU1B",91,0)
 Q
"RTN","IBDFU1B",92,0)
 ;
"RTN","IBDFU1B",93,0)
WARNING(OBJECT) ; displays a warning
"RTN","IBDFU1B",94,0)
 S:'$D(OBJECT) OBJECT="object"
"RTN","IBDFU1B",95,0)
 W !,"WARNING! The "_OBJECT_" is partially outside the block."
"RTN","IBDFU1B",96,0)
 D PAUSE^IBDFU5
"RTN","IBDFU1B",97,0)
 Q
"RTN","IBDFU1B",98,0)
 ; ** The following routines assume BLKDESCR has been called and the IBBLK array is defined
"RTN","IBDFU1B",99,0)
 ;
"RTN","IBDFU1B",100,0)
MINX() ;the smallest X a block element can begin at
"RTN","IBDFU1B",101,0)
 Q $S((IBBLK("BOX")=1):1,1:0)
"RTN","IBDFU1B",102,0)
 ;
"RTN","IBDFU1B",103,0)
MAXX() ;the largest X a block element can begin at
"RTN","IBDFU1B",104,0)
 Q (IBBLK("W")-(1+$S(IBBLK("BOX")=1:1,1:0)))
"RTN","IBDFU1B",105,0)
 ;
"RTN","IBDFU1B",106,0)
MINY() ;the smallest Y a block element can begin at
"RTN","IBDFU1B",107,0)
 Q $S(IBBLK("BOX")=1:1,1:0)
"RTN","IBDFU1B",108,0)
 ;
"RTN","IBDFU1B",109,0)
MAXY() ;the largest Y a block element can begin at
"RTN","IBDFU1B",110,0)
 Q (IBBLK("H")-(1+$S((IBBLK("BOX")=1):1,1:0)))
"RTN","IBDFU1B",111,0)
 ;
"RTN","IBDFU1B",112,0)
DORTN(IBRTN,IBDSERCH) ;calls the rtn specified by the pkg interface if ok
"RTN","IBDFU1B",113,0)
 ;IBRTN is an array containing data from the package interface in format returned by RTNDESCR and MUST be passed by reference
"RTN","IBDFU1B",114,0)
 ;returns 0 if not successful, 1 otherwise
"RTN","IBDFU1B",115,0)
 ;IBDSERCH:  1 = Wildcard search for ICD codes 
"RTN","IBDFU1B",116,0)
 ;           2 = Lexicon search for ICD codes.
"RTN","IBDFU1B",117,0)
 ;Wildcard and Lexicon ICD searches done with the @IBRTN("RTN")
"RTN","IBDFU1B",118,0)
 N QUIT,VARIABLE,VARIEN,IBARY
"RTN","IBDFU1B",119,0)
 I '$D(IBDSERCH) S IBDSERCH=1  ;Set up Wildcard search as the default search.
"RTN","IBDFU1B",120,0)
 S QUIT=0
"RTN","IBDFU1B",121,0)
 ;
"RTN","IBDFU1B",122,0)
 ;set IBARY to node where the interface should return the data
"RTN","IBDFU1B",123,0)
 I (IBRTN("ACTION")=2)!(IBRTN("ACTION")=3) D
"RTN","IBDFU1B",124,0)
 .S IBARY=IBRTN("DATA_LOCATION")
"RTN","IBDFU1B",125,0)
 .K @IBARY
"RTN","IBDFU1B",126,0)
 ;
"RTN","IBDFU1B",127,0)
 Q:IBRTN("AVAIL")'=1 0
"RTN","IBDFU1B",128,0)
 ;
"RTN","IBDFU1B",129,0)
 ;verify that required variables exist
"RTN","IBDFU1B",130,0)
 S VARIEN=0 F  S VARIEN=$O(^IBE(357.6,IBRTN,7,VARIEN)) Q:'VARIEN  S VARIABLE=$P($G(^IBE(357.6,IBRTN,7,VARIEN,0)),"^") I '$D(@VARIABLE) S QUIT=1 Q
"RTN","IBDFU1B",131,0)
 Q:QUIT 0
"RTN","IBDFU1B",132,0)
 ;
"RTN","IBDFU1B",133,0)
 ;new protected variables
"RTN","IBDFU1B",134,0)
 S VARIEN=0 F  S VARIEN=$O(^IBE(357.6,IBRTN,6,VARIEN)) Q:'VARIEN  S VARIABLE=$P($G(^IBE(357.6,IBRTN,6,VARIEN,0)),"^")  N @VARIABLE
"RTN","IBDFU1B",135,0)
 ;
"RTN","IBDFU1B",136,0)
 ;make sure the entry point is known
"RTN","IBDFU1B",137,0)
 Q:$G(IBRTN("RTN"))="" 0
"RTN","IBDFU1B",138,0)
 ;
"RTN","IBDFU1B",139,0)
 ;make sure the entry point exists
"RTN","IBDFU1B",140,0)
 Q:$P(IBRTN("RTN"),"^",2)="" 0
"RTN","IBDFU1B",141,0)
 I $P(IBRTN("RTN"),"^")'="" Q:'$L($T(@$P(IBRTN("RTN"),"^")^@$P($P(IBRTN("RTN"),"^",2),"("))) 0
"RTN","IBDFU1B",142,0)
 I $P(IBRTN("RTN"),"^")="" Q:'$L($T(^@$P($P(IBRTN("RTN"),"^",2),"("))) 0
"RTN","IBDFU1B",143,0)
 ;
"RTN","IBDFU1B",144,0)
 ;call the interface routine,xecute the entry and exit actions
"RTN","IBDFU1B",145,0)
 X IBRTN("ENTRY")
"RTN","IBDFU1B",146,0)
 D @IBRTN("RTN")
"RTN","IBDFU1B",147,0)
 X IBRTN("EXIT")
"RTN","IBDFU1B",148,0)
 Q 1
"RTN","IBDFU1B",149,0)
 ;
"RTN","IBDFU1B",150,0)
DATANAME(RTN,PIECE) ;returns the name of the data for field=piece
"RTN","IBDFU1B",151,0)
 Q:'RTN!'PIECE ""
"RTN","IBDFU1B",152,0)
 I PIECE=1 Q $P($G(^IBE(357.6,RTN,2)),"^")
"RTN","IBDFU1B",153,0)
 N NODE,IEN
"RTN","IBDFU1B",154,0)
 S IEN=$O(^IBE(357.6,RTN,15,"C",PIECE,0))
"RTN","IBDFU1B",155,0)
 Q:'IEN ""
"RTN","IBDFU1B",156,0)
 Q $P($G(^IBE(357.6,RTN,15,IEN,0)),"^")
"RTN","IBDFU1B",157,0)
 ;
"RTN","IBDFU1B",158,0)
DATANODE(RTN,PIECE) ;returns the node that the field=piece is on
"RTN","IBDFU1B",159,0)
 Q:'RTN!'PIECE ""
"RTN","IBDFU1B",160,0)
 I PIECE=1 Q ""
"RTN","IBDFU1B",161,0)
 S IEN=$O(^IBE(357.6,RTN,15,"C",PIECE,0))
"RTN","IBDFU1B",162,0)
 Q:'IEN ""
"RTN","IBDFU1B",163,0)
 Q $P($G(^IBE(357.6,RTN,15,IEN,0)),"^",4)
"RTN","IBDFU1B",164,0)
 ;
"RTN","IBDFU1B",165,0)
DATATYPE(TYPE) ;returns the description of the datatype=TYPE
"RTN","IBDFU1B",166,0)
 ;TYPE must be passed by reference
"RTN","IBDFU1B",167,0)
 ;
"RTN","IBDFU1B",168,0)
 N NODE
"RTN","IBDFU1B",169,0)
 S NODE=""
"RTN","IBDFU1B",170,0)
 I $G(TYPE) S NODE=$G(^IBE(359.1,TYPE,0))
"RTN","IBDFU1B",171,0)
 S TYPE("SPACE")=$P(NODE,"^",6)
"RTN","IBDFU1B",172,0)
 S TYPE("MAX_INPUT")=$P(NODE,"^",2)
"RTN","IBDFU1B",173,0)
 S TYPE("FORMAT")=$P(NODE,"^",5)
"RTN","IBDFU1B",174,0)
 Q
"RTN","IBDFU2")
0^27^B28385446^B27823065
"RTN","IBDFU2",1,0)
IBDFU2 ;ALB/CJM - ENCOUNTER FORM - BUILD FORM(copying blocks) ;01/08/93
"RTN","IBDFU2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**15,63**;APR 24, 1997;Build 80
"RTN","IBDFU2",3,0)
 ;
"RTN","IBDFU2",4,0)
 ;
"RTN","IBDFU2",5,0)
COPYBLK(OLDBLOCK,IBFORM,FROMFILE,TOFILE,ROW,COL,TKORDER,NAME,RECMPILE) ;copies OLDBLOCK in FROMFILE to IBFORM in TOFILE
"RTN","IBDFU2",6,0)
 ;makes the new block part of IBFORM if defined
"RTN","IBDFU2",7,0)
 ;places block at (ROW,COL) if defined
"RTN","IBDFU2",8,0)
 ;sets TOOL KIT ORDER TKORDER if defined and >0
"RTN","IBDFU2",9,0)
 ;sets the block name to NAME if defined
"RTN","IBDFU2",10,0)
 ;returns the ien of the new copy
"RTN","IBDFU2",11,0)
 ;RECMPILE means don't copy compiled block
"RTN","IBDFU2",12,0)
 ;
"RTN","IBDFU2",13,0)
 Q:(FROMFILE'=357.1)&(FROMFILE'=358.1) ""
"RTN","IBDFU2",14,0)
 Q:(TOFILE'=357.1)&(TOFILE'=358.1) ""
"RTN","IBDFU2",15,0)
 N NODE,LIST,FLD,LINE,TEXT,NEWBLOCK,FROM,TO,SUB,I
"RTN","IBDFU2",16,0)
 S NEWBLOCK=""
"RTN","IBDFU2",17,0)
 S NODE=$G(^IBE(FROMFILE,OLDBLOCK,0)) Q:NODE="" ""
"RTN","IBDFU2",18,0)
 S $P(NODE,"^",2)=$G(IBFORM)
"RTN","IBDFU2",19,0)
 S:$G(NAME)="" NAME=$P(NODE,"^")
"RTN","IBDFU2",20,0)
 S RECMPILE=+$G(RECMPILE)
"RTN","IBDFU2",21,0)
 ;there must be a name
"RTN","IBDFU2",22,0)
 Q:NAME="" ""
"RTN","IBDFU2",23,0)
 S $P(NODE,"^")=NAME
"RTN","IBDFU2",24,0)
 I $D(ROW),(ROW=+ROW) S $P(NODE,"^",4)=ROW
"RTN","IBDFU2",25,0)
 I $D(COL),(COL=+COL) S $P(NODE,"^",5)=COL
"RTN","IBDFU2",26,0)
 S:$D(TKORDER) $P(NODE,"^",14)=$S(TKORDER:TKORDER,1:"")
"RTN","IBDFU2",27,0)
 K DIC,DO,DD,DINUM S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
"RTN","IBDFU2",28,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDFU2",29,0)
 S NEWBLOCK=$S(+Y<0:"",1:+Y)
"RTN","IBDFU2",30,0)
 Q:'NEWBLOCK ""
"RTN","IBDFU2",31,0)
 S ^IBE(TOFILE,NEWBLOCK,0)=NODE
"RTN","IBDFU2",32,0)
 S NODE=0 F  S NODE=$O(^IBE(FROMFILE,OLDBLOCK,NODE)) Q:'NODE  S ^IBE(TOFILE,NEWBLOCK,NODE)=$G(^IBE(FROMFILE,OLDBLOCK,NODE))
"RTN","IBDFU2",33,0)
 K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWBLOCK
"RTN","IBDFU2",34,0)
 D IX1^DIK K DIK,DA
"RTN","IBDFU2",35,0)
 ;I ('RECMPILE),TOFILE=357.1,FROMFILE=357.1,$D(^IBE(357.1,OLDBLOCK,"V")),$D(^IBE(357.1,OLDBLOCK,"S")),$D(^IBE(357.1,OLDBLOCK,"B")),$D(^IBE(357.1,OLDBLOCK,"H")) D
"RTN","IBDFU2",36,0)
 ;.F SUB="S","V","B","H" S I=0 S ^IBE(357.1,NEWBLOCK,SUB,0)=$G(^IBE(357.1,OLDBLOCK,SUB,0)) F  S I=$O(^IBE(357.1,OLDBLOCK,SUB,I)) Q:'I  S ^IBE(357.1,NEWBLOCK,SUB,I,0)=$G(^IBE(357.1,OLDBLOCK,SUB,I,0))
"RTN","IBDFU2",37,0)
 ;before any new block component is created, make sure there is no garbage around with dangling pointer pointing to new block
"RTN","IBDFU2",38,0)
 D DLTCNTNT^IBDFU3(NEWBLOCK,TOFILE)
"RTN","IBDFU2",39,0)
 ;
"RTN","IBDFU2",40,0)
 ;now copy the old block's contents into the newblock
"RTN","IBDFU2",41,0)
 S (LIST,LINE,TEXT)=""
"RTN","IBDFU2",42,0)
 ;
"RTN","IBDFU2",43,0)
 ;copy selection lists
"RTN","IBDFU2",44,0)
 S FROM=$S(FROMFILE[358:358.2,1:357.2),TO=$S(TOFILE[358:358.2,1:357.2)
"RTN","IBDFU2",45,0)
 F  S LIST=$O(^IBE(FROM,"C",OLDBLOCK,LIST)) Q:'LIST  I $$COPYLIST(LIST,OLDBLOCK,NEWBLOCK,FROM,TO)
"RTN","IBDFU2",46,0)
 ;
"RTN","IBDFU2",47,0)
 ;copy data fields
"RTN","IBDFU2",48,0)
 S FROM=$S(FROMFILE[358:358.5,1:357.5),TO=$S(TOFILE[358:358.5,1:357.5)
"RTN","IBDFU2",49,0)
 S FLD=0 F  S FLD=$O(^IBE(FROM,"C",OLDBLOCK,FLD)) Q:'FLD  D COPYFLD^IBDFU2A(FLD,OLDBLOCK,NEWBLOCK,FROM,TO)
"RTN","IBDFU2",50,0)
 ;
"RTN","IBDFU2",51,0)
 ;copy multiple choice fields
"RTN","IBDFU2",52,0)
 S FROM=$S(FROMFILE[358:358.93,1:357.93),TO=$S(TOFILE[358:358.93,1:357.93)
"RTN","IBDFU2",53,0)
 S FLD=0 F  S FLD=$O(^IBE(FROM,"C",OLDBLOCK,FLD)) Q:'FLD  D COPYMFLD^IBDFU2A(FLD,OLDBLOCK,NEWBLOCK,FROM,TO)
"RTN","IBDFU2",54,0)
 ;
"RTN","IBDFU2",55,0)
 ;copy hand print fields
"RTN","IBDFU2",56,0)
 S FROM=$S(FROMFILE[358:358.94,1:359.94),TO=$S(TOFILE[358:358.94,1:359.94)
"RTN","IBDFU2",57,0)
 S FLD=0 F  S FLD=$O(^IBE(FROM,"C",OLDBLOCK,FLD)) Q:'FLD  D COPYHFLD^IBDFU2A(FLD,OLDBLOCK,NEWBLOCK,FROM,TO)
"RTN","IBDFU2",58,0)
 ;
"RTN","IBDFU2",59,0)
 ;copy lines
"RTN","IBDFU2",60,0)
 S FROM=$S(FROMFILE[358:358.7,1:357.7),TO=$S(TOFILE[358:358.7,1:357.7)
"RTN","IBDFU2",61,0)
 F  S LINE=$O(^IBE(FROM,"C",OLDBLOCK,LINE)) Q:'LINE  D COPYLINE^IBDFU2A(LINE,OLDBLOCK,NEWBLOCK,FROM,TO)
"RTN","IBDFU2",62,0)
 ;
"RTN","IBDFU2",63,0)
 ;copy text areas
"RTN","IBDFU2",64,0)
 S FROM=$S(FROMFILE[358:358.8,1:357.8),TO=$S(TOFILE[358:358.8,1:357.8)
"RTN","IBDFU2",65,0)
 F  S TEXT=$O(^IBE(FROM,"C",OLDBLOCK,TEXT)) Q:'TEXT  D COPYTEXT^IBDFU2A(TEXT,OLDBLOCK,NEWBLOCK,FROM,TO)
"RTN","IBDFU2",66,0)
 Q NEWBLOCK
"RTN","IBDFU2",67,0)
 ;
"RTN","IBDFU2",68,0)
COPYLIST(LIST,OLDBLOCK,NEWBLOCK,FROMFILE,TOFILE) ;
"RTN","IBDFU2",69,0)
 N IBDIMPDA,IBDCSYS,IBDPIEN,IBDX
"RTN","IBDFU2",70,0)
 ;returns the new list copied from LIST
"RTN","IBDFU2",71,0)
 Q:'$G(LIST)!('$G(OLDBLOCK))!('$G(NEWBLOCK))!('$G(FROMFILE))!('$G(TOFILE)) 0
"RTN","IBDFU2",72,0)
 Q:(FROMFILE'=357.2)&(FROMFILE'=358.2) 0
"RTN","IBDFU2",73,0)
 Q:(TOFILE'=357.2)&(TOFILE'=358.2) 0
"RTN","IBDFU2",74,0)
 N NODE,NAME,NEWLIST,GRP,SLCTN,COL,TO,FROM,TOPI,FROMPI,DYNAMIC
"RTN","IBDFU2",75,0)
 S NEWLIST=""
"RTN","IBDFU2",76,0)
 S NODE=$G(^IBE(FROMFILE,LIST,0)) Q:NODE="" 0
"RTN","IBDFU2",77,0)
 S DYNAMIC=$P(NODE,"^",14)
"RTN","IBDFU2",78,0)
 ;make sure the list really belongs to the block being copied - if not re-index it
"RTN","IBDFU2",79,0)
 I $P(NODE,"^",2)='OLDBLOCK K DA S DA=LIST,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q 0
"RTN","IBDFU2",80,0)
 S NAME=$P(NODE,"^",1),$P(NODE,"^",2)=NEWBLOCK
"RTN","IBDFU2",81,0)
 S FROMPI=$P(NODE,"^",11)
"RTN","IBDFU2",82,0)
 S TOPI=$$GETPI^IBDFU2B(FROMPI,$S(FROMFILE[358:358.6,1:357.6),$S(TOFILE[358:358.6,1:357.6)),$P(NODE,"^",11)=TOPI
"RTN","IBDFU2",83,0)
 Q:NAME="" 0
"RTN","IBDFU2",84,0)
 K DIC,DD,DINUM,DO S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
"RTN","IBDFU2",85,0)
 D FILE^DICN K DIC,DIE,DA
"RTN","IBDFU2",86,0)
 S NEWLIST=$S(+Y<0:"",1:+Y)
"RTN","IBDFU2",87,0)
 Q:'NEWLIST 0
"RTN","IBDFU2",88,0)
 D DLISTCNT^IBDFU3(NEWLIST,TOFILE) ;clean up any dangling pointers that may be now pointing to this new, supposedly empty list
"RTN","IBDFU2",89,0)
 ;
"RTN","IBDFU2",90,0)
 ;now copy
"RTN","IBDFU2",91,0)
 S ^IBE(TOFILE,NEWLIST,0)=NODE
"RTN","IBDFU2",92,0)
 ;
"RTN","IBDFU2",93,0)
 ;copy the column multiple
"RTN","IBDFU2",94,0)
 S NODE=$G(^IBE(FROMFILE,LIST,1,0))
"RTN","IBDFU2",95,0)
 I NODE'=""  S $P(NODE,"^",2)=TOFILE_"1I",^IBE(TOFILE,NEWLIST,1,0)=NODE S COL=0 F  S COL=$O(^IBE(FROMFILE,LIST,1,COL)) Q:'COL  S NODE=$G(^IBE(FROMFILE,LIST,1,COL,0)) S:NODE'="" ^IBE(TOFILE,NEWLIST,1,COL,0)=NODE
"RTN","IBDFU2",96,0)
 ;
"RTN","IBDFU2",97,0)
 ;now copy the subcolumn multiple
"RTN","IBDFU2",98,0)
 S NODE=$G(^IBE(FROMFILE,LIST,2,0)) I NODE'=""  S $P(NODE,"^",2)=TOFILE_"2I",^IBE(TOFILE,NEWLIST,2,0)=NODE S COL=0 F  S COL=$O(^IBE(FROMFILE,LIST,2,COL)) Q:'COL  S NODE=$G(^IBE(FROMFILE,LIST,2,COL,0)) I NODE'="" D
"RTN","IBDFU2",99,0)
 .S:$P(NODE,"^",6) $P(NODE,"^",6)=$$GETMA^IBDFU2B($P(NODE,"^",6),$S(FROMFILE[358:358.91,1:357.91),$S(TOFILE[358:358.91,1:357.91))
"RTN","IBDFU2",100,0)
 .S:$P(NODE,"^",9) $P(NODE,"^",9)=$$GETQLFR^IBDFU2B($P(NODE,"^",9),$S(FROMFILE[358:358.98,1:357.98),$S(TOFILE[358:358.98,1:357.98))
"RTN","IBDFU2",101,0)
 .S ^IBE(TOFILE,NEWLIST,2,COL,0)=NODE
"RTN","IBDFU2",102,0)
 ;
"RTN","IBDFU2",103,0)
 K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWLIST
"RTN","IBDFU2",104,0)
 D IX1^DIK K DIK,DA
"RTN","IBDFU2",105,0)
 S FROM=$S(FROMFILE[358:358.4,1:357.4),TO=$S(TOFILE[358:358.4,1:357.4)
"RTN","IBDFU2",106,0)
 ;
"RTN","IBDFU2",107,0)
 ; -- don't want to copy groups and selections if the selections are 
"RTN","IBDFU2",108,0)
 ;    not exportable
"RTN","IBDFU2",109,0)
 I FROM'=TO,FROMPI,'$P($G(^IBE($S(FROM[358:358.6,1:357.6),FROMPI,2)),"^",18) Q NEWLIST
"RTN","IBDFU2",110,0)
 ;I 'DYNAMIC S GRP="" F  S GRP=$O(^IBE(FROM,"D",LIST,GRP)) Q:'GRP  D COPYGRP^IBDFU2A(GRP,LIST,NEWLIST,NEWBLOCK,FROM,TO)
"RTN","IBDFU2",111,0)
 S GRP="" F  S GRP=$O(^IBE(FROM,"D",LIST,GRP)) Q:'GRP  D COPYGRP^IBDFU2A(GRP,LIST,NEWLIST,NEWBLOCK,FROM,TO)
"RTN","IBDFU2",112,0)
 Q NEWLIST
"RTN","IBDFU3")
0^23^B22140976^B20119293
"RTN","IBDFU3",1,0)
IBDFU3 ;ALB/CJM - ENCOUNTER FORM - BUILD FORM(deleting blocks) ;01/08/93
"RTN","IBDFU3",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;APR 24, 1997;Build 80
"RTN","IBDFU3",3,0)
 ;
"RTN","IBDFU3",4,0)
 ;
"RTN","IBDFU3",5,0)
DLTBLK(BLOCK,FORM,FILE) ;deletes BLOCK (in FILE) if not part of the toolkit (unless IBTKBLK=1) and, if FORM is passed in, the block actually is on FORM
"RTN","IBDFU3",6,0)
 N IBDX,IBDPI,IBDCS
"RTN","IBDFU3",7,0)
 Q:('$G(BLOCK))
"RTN","IBDFU3",8,0)
 Q:(FILE'=357.1)&(FILE'=358.1)
"RTN","IBDFU3",9,0)
 N NODE,DIK,DA
"RTN","IBDFU3",10,0)
 S NODE=$G(^IBE(FILE,BLOCK,0))
"RTN","IBDFU3",11,0)
 K DA S DA=BLOCK,DIK="^IBE("_FILE_","
"RTN","IBDFU3",12,0)
 ;don't delete it if part of the toolkit or doesn't belong to the form (messed up cross-references), unless IBTKBLK=1 (means deletion is during special option for editing the tk)
"RTN","IBDFU3",13,0)
 G:$G(IBTKBLK) JUSTDOIT
"RTN","IBDFU3",14,0)
 I ($P(NODE,"^",14)) D  Q
"RTN","IBDFU3",15,0)
 .S $P(^IBE(FILE,BLOCK,0),"^",2)=$O(^IBE(FILE\1,"B","TOOL KIT",""))
"RTN","IBDFU3",16,0)
 .I $G(FORM)'="" K ^IBE(FILE,"C",FORM,BLOCK) D IX1^DIK
"RTN","IBDFU3",17,0)
 I $G(FORM)'="",($P(NODE,"^",2)'=FORM) D  Q
"RTN","IBDFU3",18,0)
 .;don't delete it - instead re-index it and quit
"RTN","IBDFU3",19,0)
 .K ^IBE(FILE,"C",FORM,BLOCK) D IX1^DIK
"RTN","IBDFU3",20,0)
JUSTDOIT ;
"RTN","IBDFU3",21,0)
 ;delete its components
"RTN","IBDFU3",22,0)
 D DLTCNTNT(BLOCK,FILE)
"RTN","IBDFU3",23,0)
 ;delete the block (DIC,DA are newed)
"RTN","IBDFU3",24,0)
 D ^DIK
"RTN","IBDFU3",25,0)
 Q
"RTN","IBDFU3",26,0)
 ;
"RTN","IBDFU3",27,0)
DLTCNTNT(BLOCK,FILE) ;delete everything in BLOCK, but not the block itself
"RTN","IBDFU3",28,0)
 Q:('$G(BLOCK))!('$G(FILE))
"RTN","IBDFU3",29,0)
 Q:(FILE'=357.1)&(FILE'=358.1)
"RTN","IBDFU3",30,0)
 N LIST,FLD,LINE,TEXT,TARGET,DIK,DA
"RTN","IBDFU3",31,0)
 ;delete selection lists from BLOCK
"RTN","IBDFU3",32,0)
 S TARGET=$S(FILE[358:358.2,1:357.2)
"RTN","IBDFU3",33,0)
 S LIST="" F  S LIST=$O(^IBE(TARGET,"C",BLOCK,LIST)) Q:'LIST  D DLTLIST(TARGET,BLOCK,LIST)
"RTN","IBDFU3",34,0)
 ;delete data fields
"RTN","IBDFU3",35,0)
 S TARGET=$S(FILE[358:358.5,1:357.5)
"RTN","IBDFU3",36,0)
 S FLD="" F  S FLD=$O(^IBE(TARGET,"C",BLOCK,FLD)) Q:'FLD  D DLTFLD(TARGET,BLOCK,FLD)
"RTN","IBDFU3",37,0)
 ;delete multiple choice fields
"RTN","IBDFU3",38,0)
 S TARGET=$S(FILE[358:358.93,1:357.93)
"RTN","IBDFU3",39,0)
 S FLD="" F  S FLD=$O(^IBE(TARGET,"C",BLOCK,FLD)) Q:'FLD  D DLTIFLD(TARGET,BLOCK,FLD)
"RTN","IBDFU3",40,0)
 ;delete hand print fields
"RTN","IBDFU3",41,0)
 S TARGET=$S(FILE[358:358.94,1:359.94)
"RTN","IBDFU3",42,0)
 S FLD="" F  S FLD=$O(^IBE(TARGET,"C",BLOCK,FLD)) Q:'FLD  D DLTHFLD(TARGET,BLOCK,FLD)
"RTN","IBDFU3",43,0)
 ;delete lines
"RTN","IBDFU3",44,0)
 S TARGET=$S(FILE[358:358.7,1:357.7)
"RTN","IBDFU3",45,0)
 S LINE="" F  S LINE=$O(^IBE(TARGET,"C",BLOCK,LINE)) Q:'LINE  D DLTLINE(TARGET,BLOCK,LINE)
"RTN","IBDFU3",46,0)
 ;delete text areas
"RTN","IBDFU3",47,0)
 S TARGET=$S(FILE[358:358.8,1:357.8)
"RTN","IBDFU3",48,0)
 S TEXT="" F  S TEXT=$O(^IBE(TARGET,"C",BLOCK,TEXT)) Q:'TEXT  D DLTTEXT(TARGET,BLOCK,TEXT)
"RTN","IBDFU3",49,0)
 Q
"RTN","IBDFU3",50,0)
 ;
"RTN","IBDFU3",51,0)
DLTLIST(FILE,BLOCK,LIST) ;delete the LIST, its selections and groups
"RTN","IBDFU3",52,0)
 Q:'$G(LIST)!'$G(BLOCK)!(($G(FILE)'=357.2)&($G(FILE)'=358.2))
"RTN","IBDFU3",53,0)
 N GRP,SLCTN,DIK,DA,IBDX,IBDPI,IBDCS,IBDFLD
"RTN","IBDFU3",54,0)
 S IBDPI=0,IBDCS="" I FILE=357.2 S IBDPI=$P(^IBE(357.2,LIST,0),U,11) I IBDPI?1.N S IBDX=^IBE(357.6,IBDPI,0),IBDCS=+$P(IBDX,U,22)  ;Coding System
"RTN","IBDFU3",55,0)
 S DIK="^IBE("_FILE_",",DA=LIST
"RTN","IBDFU3",56,0)
 ;don't delete it if it does not belong to BLOCK - instead, reindex it and quit
"RTN","IBDFU3",57,0)
 I $P($G(^IBE(FILE,LIST,0)),"^",2)'=BLOCK K ^IBE(FILE,"C",BLOCK,LIST) D IX1^DIK Q
"RTN","IBDFU3",58,0)
 ;delete its contents(DIK,DA are newed)
"RTN","IBDFU3",59,0)
 D DLISTCNT(LIST,FILE)
"RTN","IBDFU3",60,0)
 ;delete the list
"RTN","IBDFU3",61,0)
 D ^DIK
"RTN","IBDFU3",62,0)
 Q
"RTN","IBDFU3",63,0)
DLISTCNT(LIST,FILE) ;delete the list's selections and groups
"RTN","IBDFU3",64,0)
 N GRP,SLCTN,DIK,DA,GFILE,SFILE,IBDX,IBDCS,IBDPI
"RTN","IBDFU3",65,0)
 Q:('$G(LIST))!('$G(FILE))
"RTN","IBDFU3",66,0)
 Q:(FILE'=357.2)&(FILE'=358.2)
"RTN","IBDFU3",67,0)
 S GFILE=$S(FILE[358:358.4,1:357.4)
"RTN","IBDFU3",68,0)
 S SFILE=$S(FILE[358:358.3,1:357.3)
"RTN","IBDFU3",69,0)
 ;now delete list's contents
"RTN","IBDFU3",70,0)
 S GRP="" F  S GRP=$O(^IBE(GFILE,"D",LIST,GRP)) Q:'GRP  S DA=GRP D
"RTN","IBDFU3",71,0)
 .I $P($G(^IBE(GFILE,GRP,0)),"^",3)=LIST D
"RTN","IBDFU3",72,0)
 ..S DIK="^IBE("_GFILE_"," D ^DIK
"RTN","IBDFU3",73,0)
 ..S SLCTN="",DIK="^IBE("_SFILE_"," F  S SLCTN=$O(^IBE(SFILE,"D",GRP,SLCTN)) Q:'SLCTN  S DA=SLCTN D
"RTN","IBDFU3",74,0)
 ...I $P($G(^IBE(SFILE,SLCTN,0)),"^",4)=GRP D
"RTN","IBDFU3",75,0)
 ....D ^DIK
"RTN","IBDFU3",76,0)
 ...E  K ^IBE(SFILE,"C",LIST,SLCTN) D IX1^DIK
"RTN","IBDFU3",77,0)
 .;
"RTN","IBDFU3",78,0)
 .E  K ^IBE(GFILE,"D",LIST,GRP) D IX1^DIK
"RTN","IBDFU3",79,0)
 S SLCTN="",DIK="^IBE("_SFILE_"," F  S SLCTN=$O(^IBE(SFILE,"C",LIST,SLCTN)) Q:'SLCTN  S DA=SLCTN D
"RTN","IBDFU3",80,0)
 .I $P($G(^IBE(SFILE,SLCTN,0)),"^",3)=LIST D
"RTN","IBDFU3",81,0)
 ..D ^DIK
"RTN","IBDFU3",82,0)
 .E  K ^IBE(SFILE,"C",LIST,SLCTN) D IX1^DIK
"RTN","IBDFU3",83,0)
 Q
"RTN","IBDFU3",84,0)
 ;
"RTN","IBDFU3",85,0)
DLTFLD(FILE,BLOCK,FLD) ;delete a display field
"RTN","IBDFU3",86,0)
 Q:('$G(BLOCK))!('$G(FLD))!('$G(FILE))
"RTN","IBDFU3",87,0)
 Q:(FILE'=357.5)&(FILE'=358.5)
"RTN","IBDFU3",88,0)
 N DA,DIK
"RTN","IBDFU3",89,0)
 S DIK="^IBE("_FILE_",",DA=FLD
"RTN","IBDFU3",90,0)
 I $P($G(^IBE(FILE,FLD,0)),"^",2)=BLOCK D
"RTN","IBDFU3",91,0)
 .D ^DIK
"RTN","IBDFU3",92,0)
 E  K ^IBE(FILE,"C",BLOCK,FLD) D IX1^DIK
"RTN","IBDFU3",93,0)
 Q
"RTN","IBDFU3",94,0)
 ;
"RTN","IBDFU3",95,0)
DLTIFLD(FILE,BLOCK,FLD) ;delete a multiple choice field
"RTN","IBDFU3",96,0)
 Q:('$G(BLOCK))!('$G(FLD))!('$G(FILE))
"RTN","IBDFU3",97,0)
 Q:(FILE'=357.93)&(FILE'=358.93)
"RTN","IBDFU3",98,0)
 N DA,DIK
"RTN","IBDFU3",99,0)
 S DIK="^IBE("_FILE_",",DA=FLD
"RTN","IBDFU3",100,0)
 I $P($G(^IBE(FILE,FLD,0)),"^",8)=BLOCK D
"RTN","IBDFU3",101,0)
 .D ^DIK
"RTN","IBDFU3",102,0)
 E  K ^IBE(FILE,"C",BLOCK,FLD) D IX1^DIK
"RTN","IBDFU3",103,0)
 Q
"RTN","IBDFU3",104,0)
DLTHFLD(FILE,BLOCK,FLD) ;delete a hand print field
"RTN","IBDFU3",105,0)
 Q:('$G(BLOCK))!('$G(FLD))!('$G(FILE))
"RTN","IBDFU3",106,0)
 Q:(FILE'=359.94)&(FILE'=358.94)
"RTN","IBDFU3",107,0)
 N DA,DIK
"RTN","IBDFU3",108,0)
 S DIK="^IBE("_FILE_",",DA=FLD
"RTN","IBDFU3",109,0)
 I $P($G(^IBE(FILE,FLD,0)),"^",8)=BLOCK D
"RTN","IBDFU3",110,0)
 .D ^DIK
"RTN","IBDFU3",111,0)
 E  K ^IBE(FILE,"C",BLOCK,FLD) D IX1^DIK
"RTN","IBDFU3",112,0)
 Q
"RTN","IBDFU3",113,0)
 ;
"RTN","IBDFU3",114,0)
DLTTEXT(FILE,BLOCK,TEXT) ;delete the TEXT AREA
"RTN","IBDFU3",115,0)
 Q:('$G(BLOCK))!('$G(TEXT))!('$G(FILE))
"RTN","IBDFU3",116,0)
 Q:(FILE'=357.8)&(FILE'=358.8)
"RTN","IBDFU3",117,0)
 N DA,DIK
"RTN","IBDFU3",118,0)
 S DIK="^IBE("_FILE_",",DA=TEXT
"RTN","IBDFU3",119,0)
 I $P($G(^IBE(FILE,TEXT,0)),"^",2)=BLOCK D
"RTN","IBDFU3",120,0)
 .D ^DIK
"RTN","IBDFU3",121,0)
 E  K ^IBE(FILE,"C",BLOCK,TEXT) D IX1^DIK
"RTN","IBDFU3",122,0)
 Q
"RTN","IBDFU3",123,0)
DLTLINE(FILE,BLOCK,LINE) ;delete the line
"RTN","IBDFU3",124,0)
 Q:('$G(BLOCK))!('$G(LINE))!('$G(FILE))
"RTN","IBDFU3",125,0)
 Q:(FILE'=357.7)&(FILE'=358.7)
"RTN","IBDFU3",126,0)
 N DA,DIK
"RTN","IBDFU3",127,0)
 S DIK="^IBE("_FILE_",",DA=LINE
"RTN","IBDFU3",128,0)
 I $P($G(^IBE(FILE,LINE,0)),"^",6)=BLOCK D
"RTN","IBDFU3",129,0)
 .D ^DIK
"RTN","IBDFU3",130,0)
 E  K ^IBE(FILE,"C",BLOCK,LINE) D IX1^DIK
"RTN","IBDFU3",131,0)
 Q
"RTN","IBDFU3",132,0)
FASTEXIT ;just sets a flag signaling system should be exited
"RTN","IBDFU3",133,0)
 S VALMBCK="Q"
"RTN","IBDFU3",134,0)
 K DIR S DIR(0)="Y",DIR("A")="Exit Encounter Form Option",DIR("B")="NO" D ^DIR
"RTN","IBDFU3",135,0)
 I $D(DIRUT)!(Y) S IBFASTXT=1
"RTN","IBDFU3",136,0)
 K DIR
"RTN","IBDFU3",137,0)
 Q
"RTN","IBDFUTL")
0^13^B144569260^B30782217
"RTN","IBDFUTL",1,0)
IBDFUTL ;ALB/MAF - Maintenance Utility Routine ;04/20/95
"RTN","IBDFUTL",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**9,32,51,63**;APR 24, 1997;Build 80
"RTN","IBDFUTL",3,0)
 ;
"RTN","IBDFUTL",4,0)
 ;ICRs 
"RTN","IBDFUTL",5,0)
 ; Reference to LS^ICDEX supported by ICR #5747
"RTN","IBDFUTL",6,0)
 ; Reference to CSI^ICDEX supported by ICR #5747
"RTN","IBDFUTL",7,0)
 ;
"RTN","IBDFUTL",8,0)
 ;  -- Set up variables for display by clinic/form/group
"RTN","IBDFUTL",9,0)
OUT S IBDFL=0  ;W !!,"Display output by: CLINICS// " D ZSET1 S X="" R X:DTIME G QUIT:X="^"!('$T) I X=""!("Cc"[X) S X="1"
"RTN","IBDFUTL",10,0)
 S DIR("B")="CLINICS"
"RTN","IBDFUTL",11,0)
 ;S DIR(0)="SBM^C:CLINICS (Individual);G:GROUPS (Clinics);F:FORMS"
"RTN","IBDFUTL",12,0)
 S DIR(0)="SA^C:CLINICS (Individual);G:GROUPS (Clinics);F:FORMS"
"RTN","IBDFUTL",13,0)
 S DIR("A")="Sort by [C]linics, [G]roups, [F]orms: " D ^DIR
"RTN","IBDFUTL",14,0)
 K DIR I $D(DIRUT)&('$D(IBDF1))!(Y<0) G EXIT
"RTN","IBDFUTL",15,0)
 I $D(DIRUT)&$D(IBDF1) G QUIT
"RTN","IBDFUTL",16,0)
 S X=$S("Gg"[X:2,"Ff"[X:3,"Ss"[X:4,1:1)
"RTN","IBDFUTL",17,0)
 ;I X="?" D ZSET1,HELP1 G OUT
"RTN","IBDFUTL",18,0)
 S IBDFSRT=$E(X)  ;D IN^DGHELP W ! I %=-1 D ZSET1,HELP1 G OUT
"RTN","IBDFUTL",19,0)
 S IBDFDIS=$S(IBDFSRT=1:"CLIN",IBDFSRT=2:"GROUP",IBDFSRT=3:"FORM",1:"QUIT")
"RTN","IBDFUTL",20,0)
 D @(IBDFDIS) S:Y=-1 IBDFNCNG=1 G:Y=-1 QUIT
"RTN","IBDFUTL",21,0)
 ;
"RTN","IBDFUTL",22,0)
 ;
"RTN","IBDFUTL",23,0)
OUT1 ;  -- Ask for what type of package interface
"RTN","IBDFUTL",24,0)
 N IBDTEMPY,IBDQUIT,IBDFINT,IBDCOUNT,IBDAUTO,IBDX,IBDQUI2
"RTN","IBDFUTL",25,0)
 S DIC="^IBE(357.6,",DIC(0)="AEMN"
"RTN","IBDFUTL",26,0)
 S DIC("S")="I $P(^(0),U,6)=3,$P(^(0),U,9)=1,$G(^(11))'="""""
"RTN","IBDFUTL",27,0)
 S DIC("A")="Select Type of Code to Display: " D ^DIC K DIC G QUIT:Y<0
"RTN","IBDFUTL",28,0)
 S IBDFINT=+Y
"RTN","IBDFUTL",29,0)
 ;
"RTN","IBDFUTL",30,0)
 S IBDFACT=2 ;default of Inactive
"RTN","IBDFUTL",31,0)
 S X=$E($G(^IBE(357.6,IBDFINT,11)),7,9)
"RTN","IBDFUTL",32,0)
 ;
"RTN","IBDFUTL",33,0)
 ; -- for cpt and icd codes, let them choose active or inactive
"RTN","IBDFUTL",34,0)
 I X="CPT"!(X="VST")!(X="ICD") D
"RTN","IBDFUTL",35,0)
 .S DIR("B")="ACTIVE"
"RTN","IBDFUTL",36,0)
 .;S DIR(0)="SBM^A:ACTIVE;I:INACTIVE"
"RTN","IBDFUTL",37,0)
 .S DIR(0)="SA^A:ACTIVE;I:INACTIVE"
"RTN","IBDFUTL",38,0)
 .S DIR("A")="Display codes [A]ctive, [I]nactive: "
"RTN","IBDFUTL",39,0)
 .D ^DIR K DIR
"RTN","IBDFUTL",40,0)
 .Q:$D(DIRUT)
"RTN","IBDFUTL",41,0)
 .S X=$S("Ii"[$E(X,1):2,1:1)
"RTN","IBDFUTL",42,0)
 .S IBDFACT=$E(X)
"RTN","IBDFUTL",43,0)
 I $D(DIRUT)&('$D(IBDF1))!(Y<0) G EXIT
"RTN","IBDFUTL",44,0)
 I $D(DIRUT)&$D(IBDF1) G QUIT
"RTN","IBDFUTL",45,0)
 ;
"RTN","IBDFUTL",46,0)
 ;cannot use this option before ICD-10 impelemenation 
"RTN","IBDFUTL",47,0)
 ;
"RTN","IBDFUTL",48,0)
 I $E($G(^IBE(357.6,IBDFINT,11)),7,9)="ICD",DT<$$IMPDATE^IBDUTICD(30),$$GETCODSY(IBDFINT)["ICD-10",IBDFACT=1 D  G:IBDQUI2<0 EXIT S:IBDQUI2="I" IBDFACT=2
"RTN","IBDFUTL",49,0)
 . F  D  Q:IBDQUI2'="A"
"RTN","IBDFUTL",50,0)
 .. W !!,"ICD-10 codes cannot be selected for this option before ICD-10 activation.",!
"RTN","IBDFUTL",51,0)
 .. S DIR(0)="FAO",DIR("A")="Press RETURN to continue..." D ^DIR K DIR
"RTN","IBDFUTL",52,0)
 .. S IBDQUI2=$$ACTPRMT^IBDUTICD()
"RTN","IBDFUTL",53,0)
 ;
"RTN","IBDFUTL",54,0)
 I $D(IBDF1) D
"RTN","IBDFUTL",55,0)
 .K VAUTP F IBI=0:0 S IBI=$O(VAUTJ(IBI)) Q:IBI']""  S VAUTP(IBI)=$G(VAUTJ(IBI))
"RTN","IBDFUTL",56,0)
 ;
"RTN","IBDFUTL",57,0)
 ;
"RTN","IBDFUTL",58,0)
 ;
"RTN","IBDFUTL",59,0)
 I IBDFACT=1 D
"RTN","IBDFUTL",60,0)
 .;;I $E($G(^IBE(357.6,IBDFINT,11)),7,9)="CPT" S DIC="^ICPT(",IBDFCODE="CPT "
"RTN","IBDFUTL",61,0)
 .;;I $E($G(^IBE(357.6,IBDFINT,11)),7,9)="ICD" S DIC="^ICD9(",IBDFCODE="ICD-9 "
"RTN","IBDFUTL",62,0)
 .;;I $E($G(^IBE(357.6,IBDFINT,11)),7,9)="VST" S DIC="^IBE(357.69,",IBDFCODE="Type of Visit "
"RTN","IBDFUTL",63,0)
 .;
"RTN","IBDFUTL",64,0)
 .I $E($G(^IBE(357.6,IBDFINT,11)),7,9)="CPT" S DIC="^ICPT(",IBDFCODE="CPT ",DIC("S")="I $P($$CPT^ICPTCOD(Y),U,7)=1"
"RTN","IBDFUTL",65,0)
 .;
"RTN","IBDFUTL",66,0)
 .;Change variable IBDFCODE to "ICD-9" or "ICD-10"
"RTN","IBDFUTL",67,0)
 .I $E($G(^IBE(357.6,IBDFINT,11)),7,9)="ICD" D  ;
"RTN","IBDFUTL",68,0)
 ..S IBDFCODE=$$GETCODSY(IBDFINT)
"RTN","IBDFUTL",69,0)
 ..S DIC="^ICD9("
"RTN","IBDFUTL",70,0)
 .;
"RTN","IBDFUTL",71,0)
 .I $E($G(^IBE(357.6,IBDFINT,11)),7,9)="VST" S DIC="^IBE(357.69,",IBDFCODE="Type of Visit ",DIC("S")="I $P($$CPT^ICPTCOD(Y),U,7)=1"
"RTN","IBDFUTL",72,0)
 .;
"RTN","IBDFUTL",73,0)
 .;ICD-9 only
"RTN","IBDFUTL",74,0)
 .I $G(DIC)]"",$G(IBDFCODE)["ICD-9" D  Q
"RTN","IBDFUTL",75,0)
 ..N IBDICD9D ;ICD9 date
"RTN","IBDFUTL",76,0)
 ..S IBDICD9D=$$IMPDATE^IBDUTICD(1)
"RTN","IBDFUTL",77,0)
 ..S DIC("S")="I $$LS^ICDEX(80,+Y,IBDICD9D)>0,$$CSI^ICDEX(80,+Y)=1"
"RTN","IBDFUTL",78,0)
 ..D EN1^IBDVAUT1("VAUTJ",2,IBDFCODE_"code",1)
"RTN","IBDFUTL",79,0)
 .;ICD-10 only
"RTN","IBDFUTL",80,0)
 .I $G(DIC)]"",$G(IBDFCODE)["ICD-10" S VAUTVB="VAUTJ",IBDTEMPY=Y D ICD10 S Y=IBDTEMPY Q
"RTN","IBDFUTL",81,0)
 .;
"RTN","IBDFUTL",82,0)
 .;CPT and VST only
"RTN","IBDFUTL",83,0)
 .I $G(DIC)]"" S VAUTVB="VAUTJ",VAUTNI=2,VAUTSTR=IBDFCODE_"code" S VAUTNALL=1 D FIRST^VAUTOMA
"RTN","IBDFUTL",84,0)
 ;
"RTN","IBDFUTL",85,0)
 I IBDFACT=2 D
"RTN","IBDFUTL",86,0)
 .S IBDFCODE=$$GETCODSY(IBDFINT)
"RTN","IBDFUTL",87,0)
 I (Y<0)&$D(IBDF1) D  K VAUTP G QUIT
"RTN","IBDFUTL",88,0)
 .F IBI=0:0 S IBI=$O(VAUTP(IBI)) Q:IBI']""  S VAUTJ(IBI)=$G(VAUTP(IBI))
"RTN","IBDFUTL",89,0)
 I IBDFACT=1,Y<0,'$D(IBDF1) G EXIT
"RTN","IBDFUTL",90,0)
 I IBDFACT=1,$G(IBDQUIT) G EXIT
"RTN","IBDFUTL",91,0)
 ;
"RTN","IBDFUTL",92,0)
 I '$D(IBDF1) K XQORS,VALMEVL  D EN^VALM("IBDF UTIL PRIMARY SCREEN")
"RTN","IBDFUTL",93,0)
 I $D(IBDF1) D HDR,KILL,INIT S VALMBCK="R",VALMBG=1
"RTN","IBDFUTL",94,0)
 Q
"RTN","IBDFUTL",95,0)
 ;
"RTN","IBDFUTL",96,0)
HDR ; -- header code
"RTN","IBDFUTL",97,0)
 I IBDFACT=1 D
"RTN","IBDFUTL",98,0)
 .S VALMHDR(1)="This screen lists Active codes on Encounter Forms."
"RTN","IBDFUTL",99,0)
 I IBDFACT'=1 D
"RTN","IBDFUTL",100,0)
 .S VALMHDR(1)="This screen lists Inactive codes on  Encounter Forms."
"RTN","IBDFUTL",101,0)
 Q
"RTN","IBDFUTL",102,0)
 ;
"RTN","IBDFUTL",103,0)
 ;  -- Set up list
"RTN","IBDFUTL",104,0)
INIT D FULL^VALM1 S (IBDCNT,IBDCNT1,VALMCNT)=0
"RTN","IBDFUTL",105,0)
 K ^TMP("IBDCPT",$J),^TMP("CPTIDX",$J) D KILL^VALM10()
"RTN","IBDFUTL",106,0)
 S IBDFCNT1=0 D @(IBDFDIS_"1^IBDFUTL1")
"RTN","IBDFUTL",107,0)
 I '$D(^TMP("IBDCPT",$J)) D NUL
"RTN","IBDFUTL",108,0)
 Q
"RTN","IBDFUTL",109,0)
 ;
"RTN","IBDFUTL",110,0)
 ;  -- Ask for clinics one/many/all
"RTN","IBDFUTL",111,0)
CLIN S VAUTVB="VAUTC",DIC="^SC(",DIC("S")="I $P(^(0),U,3)=""C""",VAUTSTR="Clinic",VAUTNI=2 D FIRST^VAUTOMA K DIC S:Y=-1 IBDFL=1 Q:IBDFL
"RTN","IBDFUTL",112,0)
 Q
"RTN","IBDFUTL",113,0)
 ;
"RTN","IBDFUTL",114,0)
 ;  -- Ask for forms one/many/all
"RTN","IBDFUTL",115,0)
FORM S VAUTVB="VAUTF",DIC="^IBE(357,",VAUTSTR="Form",VAUTNI=2 D FIRST^VAUTOMA S:Y=-1 IBDFL=1 Q:IBDFL
"RTN","IBDFUTL",116,0)
 Q
"RTN","IBDFUTL",117,0)
 ;
"RTN","IBDFUTL",118,0)
 ;  -- Ask for clinic groups one/many/all
"RTN","IBDFUTL",119,0)
GROUP S VAUTVB="VAUTG",DIC="^IBD(357.99,",VAUTSTR="Clinic Group",VAUTNI=2 D FIRST^VAUTOMA S:Y=-1 IBDFL=1 Q:IBDFL
"RTN","IBDFUTL",120,0)
 Q
"RTN","IBDFUTL",121,0)
 ;
"RTN","IBDFUTL",122,0)
 ; -- Ask for divisions one/many/all
"RTN","IBDFUTL",123,0)
DIV S IBDFL=0 D DIVISION^VAUTOMA
"RTN","IBDFUTL",124,0)
 S:Y=-1 IBDFL=1 Q:IBDFL
"RTN","IBDFUTL",125,0)
 Q
"RTN","IBDFUTL",126,0)
 ;  -- Help for display choices
"RTN","IBDFUTL",127,0)
HELP1 W !!,"Choose a number or first initial :" F K=2:1:4 W !?15,$P(Z,"^",K)
"RTN","IBDFUTL",128,0)
 W ! Q
"RTN","IBDFUTL",129,0)
 ;
"RTN","IBDFUTL",130,0)
 ;  -- Listing of selections
"RTN","IBDFUTL",131,0)
ZSET1 S Z="^1 [C]LINICS (Individual)^2 [G]ROUPS (CLINIC)^3 [F]ORMS^" Q
"RTN","IBDFUTL",132,0)
 ;
"RTN","IBDFUTL",133,0)
 ;
"RTN","IBDFUTL",134,0)
QUIT ;  -- Kill variables and reset to last display if no change has been taken place.
"RTN","IBDFUTL",135,0)
 I $D(IBDF1) S IBDFDIS=IBDFDIS1,IBDFINT=IBDFINT1,IBDFACT=IBDFACT1
"RTN","IBDFUTL",136,0)
 I '$D(IBDF1) G EXIT
"RTN","IBDFUTL",137,0)
 D KILL,INIT K IBDFNCNG S VALMBCK="R",VALMBG=1
"RTN","IBDFUTL",138,0)
 Q
"RTN","IBDFUTL",139,0)
 ;
"RTN","IBDFUTL",140,0)
 ;
"RTN","IBDFUTL",141,0)
KILL ;  -- Kill extra array variables
"RTN","IBDFUTL",142,0)
 N IBDFXX
"RTN","IBDFUTL",143,0)
 S IBDFXX=$S(IBDFDIS="FORM":"VAUTF",IBDFDIS="GROUP":"VAUTG",1:"VAUTC")
"RTN","IBDFUTL",144,0)
 I IBDFXX="VAUTF" K VAUTG,VAUTC,^TMP("CLN",$J),^TMP("CLN1",$J),^TMP("GRP",$J),^TMP("GRP1",$J)
"RTN","IBDFUTL",145,0)
 I IBDFXX="VAUTC" K VAUTG,VAUTF,^TMP("FRM",$J),^TMP("FRM1",$J),^TMP("GRP1",$J)
"RTN","IBDFUTL",146,0)
 I IBDFXX="VAUTG" K VAUTC,VAUTF,^TMP("FRM",$J),^TMP("FRM1",$J),^TMP("CLN",$J),^TMP("CLN1",$J)
"RTN","IBDFUTL",147,0)
 Q
"RTN","IBDFUTL",148,0)
 ;
"RTN","IBDFUTL",149,0)
 ;
"RTN","IBDFUTL",150,0)
EXIT ;  -- Code executed at action exit
"RTN","IBDFUTL",151,0)
 K IBDFDIS,IBDFINT,VAUTC,VAUTF,VAUTG,VAUTJ,VAUTP,IBDFINT1,IBDFDIS1,^TMP("CLN",$J),IBDFCODE,IBI,IBDFACT1
"RTN","IBDFUTL",152,0)
EXIT1 K DIC,IBDBLK,IBDCLN,IBDCLNM,IBDCNODE,IBDCNT,IBDCNT1,IBDF,IBDFBK,IBDFCIFN,IBDFCLIN,IBDFL,IBDFLG,IBDFN,IBDFNAME,IBDFNM,IBDFNODE,IBDFORM1,IBDFRM,IBDFSEL,IBDFSRT,IBDFTMP,IBDFVAL
"RTN","IBDFUTL",153,0)
 K IBDFX,IBDORM,IBDVAL,IBDVAL1,IBDFCNT1,Z,IBDFRNM,IBDFX1,IBDFX2,IBDFX3
"RTN","IBDFUTL",154,0)
 K IBCLN,IBDFCLN,IBDFCLNM,IBDFDIV,IBDFGIFN,IBDFGN,IBDFGNM,IBDIV,IBDNAM,IBDNAME,IEN,^TMP("IBDF",$J),^TMP("UTIL",$J),^TMP("IBDCPT",$J),^TMP("CPTIDX",$J),DIVISION,IBDF,IBDFACT,VAUTNALL
"RTN","IBDFUTL",155,0)
 K ^TMP("IBDFUTL_SELECTED",$J),^TMP("IBDFUTL_TEMP",$J),^TMP("IBDFUTL_WCSEARCH",$J)
"RTN","IBDFUTL",156,0)
 Q
"RTN","IBDFUTL",157,0)
 ;
"RTN","IBDFUTL",158,0)
HLP ; -- help code
"RTN","IBDFUTL",159,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBDFUTL",160,0)
 Q
"RTN","IBDFUTL",161,0)
 ;
"RTN","IBDFUTL",162,0)
 ;
"RTN","IBDFUTL",163,0)
EXP ; -- expand code
"RTN","IBDFUTL",164,0)
 Q
"RTN","IBDFUTL",165,0)
NUL ; -- NULL MESSAGE
"RTN","IBDFUTL",166,0)
 S ^TMP("IBDCPT",$J,1,0)=" ",^TMP("IBDCPT",$J,2,0)="There are no "_$S(IBDFACT=1:"active",1:"inactive")_" codes on any forms.",^TMP("CPTIDX",$J,1)=1,^TMP("CPTIDX",$J,2)=2
"RTN","IBDFUTL",167,0)
 Q
"RTN","IBDFUTL",168,0)
 ;--------- new code for ICD-10 
"RTN","IBDFUTL",169,0)
ICD10 ; Wildcard search for ICD-10 codes
"RTN","IBDFUTL",170,0)
 ;
"RTN","IBDFUTL",171,0)
 N %,DIR,IBDANS,IBDGOBAK,IBDTEXT,IBDWORD,IBDY,Y
"RTN","IBDFUTL",172,0)
 W !
"RTN","IBDFUTL",173,0)
 S IBDCOUNT=$G(IBDCOUNT)+1
"RTN","IBDFUTL",174,0)
 S IBDTEXT=$S(IBDCOUNT>1:"another "_IBDFCODE,1:IBDFCODE)
"RTN","IBDFUTL",175,0)
 S (IBDQUIT,IBDGOBAK)=0
"RTN","IBDFUTL",176,0)
 S IBDAUTO=$G(IBDAUTO)
"RTN","IBDFUTL",177,0)
 S DIR("A")="Select "_IBDTEXT_"code"
"RTN","IBDFUTL",178,0)
 S DIR(0)="FO^3:8"
"RTN","IBDFUTL",179,0)
 S DIR("?")="Enter 3 to 8 characters or '??' for more help"
"RTN","IBDFUTL",180,0)
 S DIR("??")="^D HELP^IBDFN4A"
"RTN","IBDFUTL",181,0)
 D ^DIR K DIR
"RTN","IBDFUTL",182,0)
 I Y=""!($G(DTOUT))!(Y="^") D  Q
"RTN","IBDFUTL",183,0)
 .I '$D(^TMP("IBDFUTL_TEMP",$J)),'IBDAUTO S IBDQUIT=1
"RTN","IBDFUTL",184,0)
 S IBDANS=$P(Y,U)
"RTN","IBDFUTL",185,0)
 ;Do wildcard search.
"RTN","IBDFUTL",186,0)
 K ^TMP("IBDFUTL_WCSEARCH",$J)
"RTN","IBDFUTL",187,0)
 S IBDAUTO=1
"RTN","IBDFUTL",188,0)
 S IBDY=$$CODELIST^IBDUTICD("10D",IBDANS,"IBDFUTL_WCSEARCH",DT,"",1)
"RTN","IBDFUTL",189,0)
 I +IBDY<1 D 
"RTN","IBDFUTL",190,0)
 .S IBDWORD=$P($P(IBDY,U,2)," ")
"RTN","IBDFUTL",191,0)
 .S IBDWORD=$TR($E(IBDWORD,1),"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")_$E(IBDWORD,2,99) ;Capitalize first character of text message.
"RTN","IBDFUTL",192,0)
 .S $P(IBDY,U,2)=IBDWORD_" "_$P(IBDY," ",2,99)
"RTN","IBDFUTL",193,0)
 .W !!,$P(IBDY,U,2)_"."
"RTN","IBDFUTL",194,0)
 I +IBDY<1 S:IBDCOUNT=1 IBDCOUNT=0 S IBDAUTO=0 G ICD10
"RTN","IBDFUTL",195,0)
 I $P(IBDY,U,2)=0 D  G ICD10
"RTN","IBDFUTL",196,0)
 .W !!,"No data found for selected search, please enter partial code'*' for"
"RTN","IBDFUTL",197,0)
 .W !,"additional selections e.g. E11* ."
"RTN","IBDFUTL",198,0)
 .S:IBDCOUNT=1 IBDCOUNT=0 S IBDAUTO=0
"RTN","IBDFUTL",199,0)
 I +IBDY'<1 D  ;
"RTN","IBDFUTL",200,0)
 .S %=1
"RTN","IBDFUTL",201,0)
 .I $P(IBDY,U,2)>1 D
"RTN","IBDFUTL",202,0)
 ..W !!,"There are "_$P(IBDY,U,2)_" ICD-10-CM diagnosis codes that begin with "_IBDANS_". Do you wish to"
"RTN","IBDFUTL",203,0)
 ..W !,"automatically see all of these diagnosis codes on this list"
"RTN","IBDFUTL",204,0)
 ..S %=2 D YN^DICN
"RTN","IBDFUTL",205,0)
 .I $G(DTOUT)!(%=-1) S IBDQUIT=1 Q
"RTN","IBDFUTL",206,0)
 .I %=2 S IBDAUTO=0 K % W !!,"Continue to select from the (# of items in list) ICD-10 diagnoses" S %=2 D YN^DICN I $G(DTOUT)!(%=-1) S IBDQUIT=1 Q
"RTN","IBDFUTL",207,0)
 .I %=2 S IBDGOBAK=1 Q
"RTN","IBDFUTL",208,0)
 .D WCSEARCH(IBDAUTO,.IBDQUIT)
"RTN","IBDFUTL",209,0)
 I IBDGOBAK S IBDCOUNT=0 G ICD10
"RTN","IBDFUTL",210,0)
 I IBDQUIT Q
"RTN","IBDFUTL",211,0)
 I '$D(^TMP("IBDFUTL_TEMP",$J)),'IBDAUTO S IBDCOUNT=0
"RTN","IBDFUTL",212,0)
 K ^TMP("IBDFUTL_SELECTED",$J)
"RTN","IBDFUTL",213,0)
 G ICD10
"RTN","IBDFUTL",214,0)
 Q
"RTN","IBDFUTL",215,0)
 ;
"RTN","IBDFUTL",216,0)
 ;Loop through wildcard search.
"RTN","IBDFUTL",217,0)
WCSEARCH(IBDAUTO,IBDQUIT) ;
"RTN","IBDFUTL",218,0)
 ;
"RTN","IBDFUTL",219,0)
 N IBDBEGN,IBDCNT,IBDCODE,IBDCONTU,IBDNDEX,IBDNOE,IBDSEL,IBDX
"RTN","IBDFUTL",220,0)
 W !
"RTN","IBDFUTL",221,0)
 S (IBDNDEX,IBDCNT,IBDQUIT,IBDBEGN,IBDNO)=0
"RTN","IBDFUTL",222,0)
 S IBDCONTU=1
"RTN","IBDFUTL",223,0)
 F  S IBDNDEX=$O(^TMP("IBDFUTL_WCSEARCH",$J,IBDNDEX)) Q:IBDNDEX=""!(IBDQUIT)!('IBDCONTU)!(IBDNO)  D  ;
"RTN","IBDFUTL",224,0)
 .S IBDNOE=^TMP("IBDFUTL_WCSEARCH",$J,0)  ;Number of entries in wildcard search.
"RTN","IBDFUTL",225,0)
 .S IBDCODE=^TMP("IBDFUTL_WCSEARCH",$J,IBDNDEX,1)
"RTN","IBDFUTL",226,0)
 .S IBDIEN=+$P(IBDCODE,U) ;+ to resolve both direct and variable pointers
"RTN","IBDFUTL",227,0)
 .S IBDCODE=$P(IBDCODE,U,2)
"RTN","IBDFUTL",228,0)
 .S IBDX=$P($$GETIDX^IBDFN4("10D",IBDCODE,DT),U,2)
"RTN","IBDFUTL",229,0)
 .S IBDCNT=IBDCNT+1
"RTN","IBDFUTL",230,0)
 .I IBDCNT=1 S IBDBEGN=1 I IBDNOE>5,'IBDAUTO W @IOF
"RTN","IBDFUTL",231,0)
 .I IBDAUTO D  Q  ;User chose to automatically add ICD-10 codes or user only chose 1 ICD code so SELECT tag is by-passed.
"RTN","IBDFUTL",232,0)
 ..S ^TMP("IBDFUTL_TEMP",$J,IBDIEN)=IBDCODE  ;Needed for validation check in SET^IBDFUTL1
"RTN","IBDFUTL",233,0)
 ..I IBDNOE=1 D OKPROMPT(1,IBDCODE,IBDX,.IBDQUIT,.IBDNO)  ;W !?4,IBDCODE,?15,IBDX
"RTN","IBDFUTL",234,0)
 .;User chose to select which ICD-10 codes he/she wants to add to form.
"RTN","IBDFUTL",235,0)
 .;Set ^TMP global for ICD selections.
"RTN","IBDFUTL",236,0)
 .S ^TMP("IBDFUTL_SELECTED",$J,IBDCNT)=IBDIEN_U_IBDCODE_U_IBDX
"RTN","IBDFUTL",237,0)
 .W !,IBDCNT_".",?4,IBDCODE,?15,IBDX  ;Display wildcard selected ICD codes
"RTN","IBDFUTL",238,0)
 .I IBDCNT#22=0 D  Q  ;Display every 22 ICD codes to user.
"RTN","IBDFUTL",239,0)
 ..D SELECT(IBDBEGN,IBDCNT,.IBDQUIT,.IBDNDEX,.IBDSEL,.IBDCONTU)
"RTN","IBDFUTL",240,0)
 ..S IBDBEGN=IBDCNT+1
"RTN","IBDFUTL",241,0)
 ..;I IBDSEL="",$O(^TMP("IBDFUTL_WCSEARCH",$J,IBDNDEX))'="",'IBDQUIT,IBDCONTU W @IOF
"RTN","IBDFUTL",242,0)
 I IBDAUTO!(IBDQUIT)!('IBDCONTU) Q
"RTN","IBDFUTL",243,0)
 D SELECT(IBDBEGN,IBDCNT,.IBDQUIT,IBDNDEX,.IBDSEL,.IBDCONTU) ;Less than 22 ICD codes displayed.
"RTN","IBDFUTL",244,0)
 Q
"RTN","IBDFUTL",245,0)
 ;
"RTN","IBDFUTL",246,0)
 ;Allow user to select a range of ICD codes.
"RTN","IBDFUTL",247,0)
SELECT(IBDBEGN,IBDCNT,IBDQUIT,IBDNDEX,IBDSEL,IBDCONTU) ;
"RTN","IBDFUTL",248,0)
 N IBDCODE,IBDI,IBDNEXT,IBDNODE,IBDSELN,IBDSKIP,IBDTEXT,IBDTEMP,IBDTEMPY,IBDX
"RTN","IBDFUTL",249,0)
 S IBDSKIP=0
"RTN","IBDFUTL",250,0)
 S IBDSEL=$G(IBDSEL)
"RTN","IBDFUTL",251,0)
 I IBDNDEX'="" S IBDNEXT=$O(^TMP("IBDFUTL_WCSEARCH",$J,IBDNDEX))
"RTN","IBDFUTL",252,0)
 K Y
"RTN","IBDFUTL",253,0)
 S DIR("A")="Select ICD-10 DIAGNOSIS CODE or '?' for more help"
"RTN","IBDFUTL",254,0)
 S DIR("?")="press <RETURN> for more or '^' to exit."
"RTN","IBDFUTL",255,0)
 S DIR("?",1)="Enter a single number from the list or range (e.g., 1,3,5 or 2-4,8) or"
"RTN","IBDFUTL",256,0)
 I IBDBEGN'=IBDCNT S DIR(0)="LO^"_IBDBEGN_":"_IBDCNT D ^DIR K DIR
"RTN","IBDFUTL",257,0)
 I $D(DTOUT),'$D(^TMP("IBDFUTL_TEMP")) S IBDQUIT=1 Q
"RTN","IBDFUTL",258,0)
 I $D(DTOUT),$D(^TMP("IBDFUTL_TEMP")) S IBDCONTU=0 Q
"RTN","IBDFUTL",259,0)
 I Y="",$G(IBDNEXT) W @IOF Q 
"RTN","IBDFUTL",260,0)
 I Y="^" S IBDSKIP=1  ;User chose to exit out of selection list. Skip next question.
"RTN","IBDFUTL",261,0)
 S IBDTEMPY=Y
"RTN","IBDFUTL",262,0)
 I Y'="^",Y'="" S IBDTEMP=Y
"RTN","IBDFUTL",263,0)
 K Y
"RTN","IBDFUTL",264,0)
 I $G(IBDNEXT),'IBDSKIP D
"RTN","IBDFUTL",265,0)
 .S DIR("A")="Save selections and continue to (# of remaining items) in list"
"RTN","IBDFUTL",266,0)
 .S DIR(0)="Y",DIR("B")="YES" D ^DIR K DIR
"RTN","IBDFUTL",267,0)
 .I Y,$D(IBDNEXT) W @IOF
"RTN","IBDFUTL",268,0)
 .I Y=0 S IBDTEMP=""
"RTN","IBDFUTL",269,0)
 S Y=$G(Y)
"RTN","IBDFUTL",270,0)
 I $D(DTOUT) S IBDQUIT=1 Q
"RTN","IBDFUTL",271,0)
 I Y="^"!(Y=0) D
"RTN","IBDFUTL",272,0)
 .I IBDSEL="" S IBDCONTU=0
"RTN","IBDFUTL",273,0)
 Q:'IBDCONTU
"RTN","IBDFUTL",274,0)
 I IBDTEMPY="^",IBDSEL="" S IBDCONTU=0 Q
"RTN","IBDFUTL",275,0)
 I Y'="^",$G(IBDTEMP)'="" S IBDSEL=$G(IBDSEL)_IBDTEMP I $G(IBDNEXT) Q
"RTN","IBDFUTL",276,0)
 I IBDSEL="" Q
"RTN","IBDFUTL",277,0)
 S IBDTEXT=$S($L(IBDSEL,",")=2:"this diagnosis",1:"these diagnoses")
"RTN","IBDFUTL",278,0)
 W !,"Do you really want to select "_IBDTEXT
"RTN","IBDFUTL",279,0)
 S %=2 D YN^DICN
"RTN","IBDFUTL",280,0)
 I $G(DTOUT)!(%=2)!(%=-1) S IBDCONTU=0 Q
"RTN","IBDFUTL",281,0)
 W !
"RTN","IBDFUTL",282,0)
 F IBDI=1:1 Q:$P(IBDSEL,",",IBDI)=""  D
"RTN","IBDFUTL",283,0)
 .S IBDSELN=$P(IBDSEL,",",IBDI)
"RTN","IBDFUTL",284,0)
 .S IBDNODE=^TMP("IBDFUTL_SELECTED",$J,IBDSELN)
"RTN","IBDFUTL",285,0)
 .S IBDIEN=$P(IBDNODE,U)
"RTN","IBDFUTL",286,0)
 .S IBDCODE=$P(IBDNODE,U,2)
"RTN","IBDFUTL",287,0)
 .S IBDX=$P(IBDNODE,U,3)
"RTN","IBDFUTL",288,0)
 .S ^TMP("IBDFUTL_TEMP",$J,IBDIEN)=IBDCODE  ;Needed for validation check in SET^IBDFUTL1
"RTN","IBDFUTL",289,0)
 S IBDCONTU=0
"RTN","IBDFUTL",290,0)
 Q
"RTN","IBDFUTL",291,0)
 ;Ask user with 'OK? Yes' prompt.
"RTN","IBDFUTL",292,0)
OKPROMPT(IBDONE,IBDCODE,IBDX,IBDQUIT,IBDNO) ;
"RTN","IBDFUTL",293,0)
 N DIR,IBDI
"RTN","IBDFUTL",294,0)
 I '$D(IBDONE) S IBDONE=0
"RTN","IBDFUTL",295,0)
 S DIR("A")="OK? (Yes/No) "
"RTN","IBDFUTL",296,0)
 F IBDI=1:1:4 D
"RTN","IBDFUTL",297,0)
 .I IBDONE D
"RTN","IBDFUTL",298,0)
 ..I IBDI=1 S DIR("A",1)="One code found."
"RTN","IBDFUTL",299,0)
 ..I IBDI=2 S DIR("A",2)=" "
"RTN","IBDFUTL",300,0)
 ..I IBDI=3 S DIR("A",3)=IBDCODE_"  "_IBDX
"RTN","IBDFUTL",301,0)
 ..I IBDI=4 S DIR("A",4)=" "
"RTN","IBDFUTL",302,0)
 .I 'IBDONE D
"RTN","IBDFUTL",303,0)
 ..I IBDI=1 S DIR("A",1)=" "
"RTN","IBDFUTL",304,0)
 ..I IBDI=2 S DIR("A",2)=IBDCODE_"  "_IBDX
"RTN","IBDFUTL",305,0)
 ..I IBDI=3 S DIR("A",3)=" "
"RTN","IBDFUTL",306,0)
 S DIR(0)="YAO",DIR("B")="Yes" D ^DIR K DIR
"RTN","IBDFUTL",307,0)
 W !
"RTN","IBDFUTL",308,0)
 I $D(DUOUT)!($D(DTOUT)) S IBDQUIT=1 Q
"RTN","IBDFUTL",309,0)
 I Y=0 S IBDNO=1 W !,"Code unselected from list."
"RTN","IBDFUTL",310,0)
 Q
"RTN","IBDFUTL",311,0)
 ;
"RTN","IBDFUTL",312,0)
 ;determine coding system 
"RTN","IBDFUTL",313,0)
 ; return ICD-9 or ICD-10 or null
"RTN","IBDFUTL",314,0)
GETCODSY(IBDFINT) ;
"RTN","IBDFUTL",315,0)
 Q $S($P($G(^IBE(357.6,IBDFINT,0)),"^")["ICD-9":"ICD-9 ",$P($G(^IBE(357.6,IBDFINT,0)),"^")["ICD-10":"ICD-10 ",1:"")
"RTN","IBDFUTL",316,0)
 ;IBDFUTL
"RTN","IBDFUTL1")
0^12^B54382869^B52493604
"RTN","IBDFUTL1",1,0)
IBDFUTL1 ;ALB/MAF - Maintenance Utility cont. ;04/20/95
"RTN","IBDFUTL1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**32,23,51,63**;APR 24, 1997;Build 80
"RTN","IBDFUTL1",3,0)
 ;
"RTN","IBDFUTL1",4,0)
 ;
"RTN","IBDFUTL1",5,0)
SETSTR(S,V,X,L) ; -- insert text(S) into variable(V)
"RTN","IBDFUTL1",6,0)
 ;    S := string
"RTN","IBDFUTL1",7,0)
 ;    V := destination
"RTN","IBDFUTL1",8,0)
 ;    X := @ col X
"RTN","IBDFUTL1",9,0)
 ;    L := # of chars
"RTN","IBDFUTL1",10,0)
 ;
"RTN","IBDFUTL1",11,0)
 Q $E(V_$J("",X-1),1,X-1)_$E(S_$J("",L),1,L)_$E(V,X+L,999)
"RTN","IBDFUTL1",12,0)
 ;
"RTN","IBDFUTL1",13,0)
 ;
"RTN","IBDFUTL1",14,0)
SETARR ;  -- Set up Listman array
"RTN","IBDFUTL1",15,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFUTL1",16,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFUTL1",17,0)
 S X=""
"RTN","IBDFUTL1",18,0)
 S IBDFVAL=$J(IBDCNT1_")",7)
"RTN","IBDFUTL1",19,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,1,7)
"RTN","IBDFUTL1",20,0)
 S IBDFVAL=IBDFX
"RTN","IBDFUTL1",21,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,9,8)
"RTN","IBDFUTL1",22,0)
 S IBDFVAL=$P(IBDFTMP,"^",3)
"RTN","IBDFUTL1",23,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,19,15)
"RTN","IBDFUTL1",24,0)
 S IBDFVAL=$P(^IBE(357.1,IBDFBLK,0),"^",1)
"RTN","IBDFUTL1",25,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,36,14)
"RTN","IBDFUTL1",26,0)
 S IBDFVAL=$P(^IBE(357,IBDFORM1,0),"^",1)
"RTN","IBDFUTL1",27,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,52,14)
"RTN","IBDFUTL1",28,0)
 I $D(VAUTC)!($D(VAUTG)) S IBDFVAL=$P(IBDFTMP,"^",6) S X=$$SETSTR^VALM1(IBDFVAL,X,68,14)
"RTN","IBDFUTL1",29,0)
 ;
"RTN","IBDFUTL1",30,0)
 ;
"RTN","IBDFUTL1",31,0)
TMP ; -- Set up TMP Array
"RTN","IBDFUTL1",32,0)
 S ^TMP("IBDCPT",$J,IBDCNT,0)=$S($G(IBDFCODE)["ICD-10":X,$G(IBDFCODE)["ICD-9":X,1:$$LOWER^VALM1(X))
"RTN","IBDFUTL1",33,0)
 S ^TMP("IBDCPT",$J,"IDX",VALMCNT,IBDCNT1)=""
"RTN","IBDFUTL1",34,0)
 S ^TMP("CPTIDX",$J,IBDCNT1)=VALMCNT_"^"_IBDFX_"^"_$P(IBDFTMP,"^",4)_"^"_$P(IBDFTMP,"^",5)_"^"_$P(IBDFTMP,"^",1)_"^"_$P(IBDFTMP,"^",2)
"RTN","IBDFUTL1",35,0)
 Q
"RTN","IBDFUTL1",36,0)
SETARR1 ;  -- Set up Listman array
"RTN","IBDFUTL1",37,0)
 N IBDPRIM,IBDSELP
"RTN","IBDFUTL1",38,0)
 S IBDSELP=$P($G(IBDFTMP),"^",5)
"RTN","IBDFUTL1",39,0)
 Q:IBDSELP']""
"RTN","IBDFUTL1",40,0)
 S IBDPRIM=$P($G(^IBE(357.3,IBDSELP,0)),"^")
"RTN","IBDFUTL1",41,0)
 I IBDPRIM=IBDFX Q
"RTN","IBDFUTL1",42,0)
 ;S IBDCNT1=IBDCNT1+1
"RTN","IBDFUTL1",43,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFUTL1",44,0)
 S X=""
"RTN","IBDFUTL1",45,0)
 S IBDFVAL="Primary Diagnosis: "_IBDPRIM
"RTN","IBDFUTL1",46,0)
 S X=$$SETSTR^VALM1(IBDFVAL,X,17,40)
"RTN","IBDFUTL1",47,0)
 ;
"RTN","IBDFUTL1",48,0)
 ;
"RTN","IBDFUTL1",49,0)
TMP1 ; -- Set up TMP Array
"RTN","IBDFUTL1",50,0)
 S ^TMP("IBDCPT",$J,IBDCNT,0)=$S($G(IBDFCODE)["ICD-10":X,$G(IBDFCODE)["ICD-9":X,1:$$LOWER^VALM1(X))
"RTN","IBDFUTL1",51,0)
 S ^TMP("IBDCPT",$J,"IDX",VALMCNT,IBDCNT1)=""
"RTN","IBDFUTL1",52,0)
 Q
"RTN","IBDFUTL1",53,0)
 ;
"RTN","IBDFUTL1",54,0)
 ;
"RTN","IBDFUTL1",55,0)
SET ;  -- Loop thru to see if codes are valid
"RTN","IBDFUTL1",56,0)
 N IBDY
"RTN","IBDFUTL1",57,0)
 F IBDFBLK=0:0 S IBDFBLK=$O(^IBE(357.1,"C",IBDFORM,IBDFBLK)) Q:'IBDFBLK  D
"RTN","IBDFUTL1",58,0)
 .F IBDFLST=0:0 S IBDFLST=$O(^IBE(357.2,"C",IBDFBLK,IBDFLST)) Q:'IBDFLST  S IBDFNODE=$G(^IBE(357.2,IBDFLST,0)) I $P(IBDFNODE,"^",11)=IBDFINT D
"RTN","IBDFUTL1",59,0)
 ..F IBDFSEL=0:0 S IBDFSEL=$O(^IBE(357.3,"C",IBDFLST,IBDFSEL)) Q:'IBDFSEL  S IBDFX=$G(^IBE(357.3,IBDFSEL,0)) I $P(IBDFX,"^",2)']"" D
"RTN","IBDFUTL1",60,0)
 ...S IBDFX1=$P(IBDFX,"^",1),IBDFX2=$P($G(^IBE(357.3,IBDFSEL,2)),"^",3),IBDFX3=$P($G(^IBE(357.3,IBDFSEL,2)),"^",4)
"RTN","IBDFUTL1",61,0)
 ...F IBI=IBDFX1,IBDFX2,IBDFX3 I IBI]"" D
"RTN","IBDFUTL1",62,0)
 ....I IBDFACT=1 D
"RTN","IBDFUTL1",63,0)
 .....S (X,IBDFX)=IBI
"RTN","IBDFUTL1",64,0)
 .....;Variable IBDY set to short description in execution of code.
"RTN","IBDFUTL1",65,0)
 .....X $G(^IBE(357.6,IBDFINT,11))
"RTN","IBDFUTL1",66,0)
 .....Q:'$D(X)
"RTN","IBDFUTL1",67,0)
 .....;;----change to api cpt;dhh
"RTN","IBDFUTL1",68,0)
 .....I $G(IBDFCODE)="CPT " N XX D
"RTN","IBDFUTL1",69,0)
 ......S XX=$$CPT^ICPTCOD(X)
"RTN","IBDFUTL1",70,0)
 ......;;S IBY=$S(+XX=-1:"",1:$P(XX,"^",3))
"RTN","IBDFUTL1",71,0)
 ......S IBDY=$S($P(XX,U,7)'=1:"",1:$P(XX,"^",3))
"RTN","IBDFUTL1",72,0)
 .....I $G(IBDFCODE)="Type of Visit " S IBDY=$P($G(^IBE(357.69,X,0)),"^",2)
"RTN","IBDFUTL1",73,0)
 .....I '$D(VAUTJ(X)),'$D(^TMP("IBDFUTL_TEMP",$J,X)) Q  ;Check ^TMP global for ICD-10 wildcard search.
"RTN","IBDFUTL1",74,0)
 .....S ^TMP("UTIL",$J,IBDFNAME,IBDFX,$P(^IBE(357,IBDFORM,0),"^",1),$P(^IBE(357.1,IBDFBLK,0),"^",1),IBDFSEL)=IBDFORM_"^"_IBDFBLK_"^"_$S(IBDY]"":IBDY,1:"INVALID")_"^"_IBDFLST_"^"_IBDFSEL_"^"_$S($D(VAUTC):IBDFNAME,$D(VAUTG):IBDFCLNM,1:"")
"RTN","IBDFUTL1",75,0)
 ....I IBDFACT=2 D
"RTN","IBDFUTL1",76,0)
 .....S (X,IBDFX)=IBI
"RTN","IBDFUTL1",77,0)
 .....X $G(^IBE(357.6,IBDFINT,11))
"RTN","IBDFUTL1",78,0)
 .....I '$D(X) S ^TMP("UTIL",$J,IBDFNAME,IBDFX,$P(^IBE(357,IBDFORM,0),"^",1),$P(^IBE(357.1,IBDFBLK,0),"^",1),IBDFSEL)=IBDFORM_"^"_IBDFBLK_"^"_$S(Y]"":Y,1:"INVALID")_"^"_IBDFLST_"^"_IBDFSEL_"^"_$S($D(VAUTC):IBDFNAME,$D(VAUTG):IBDFCLNM,1:"")
"RTN","IBDFUTL1",79,0)
 Q
"RTN","IBDFUTL1",80,0)
 ;
"RTN","IBDFUTL1",81,0)
 ;
"RTN","IBDFUTL1",82,0)
 ;  -- Set up alphabetical listing
"RTN","IBDFUTL1",83,0)
SET1 S (IBDFORM1,IBDFBLK,IBDFLG,IBDFX,IBDFNAME,IBDORM,IBDBLK)=0
"RTN","IBDFUTL1",84,0)
 F IBDFNM=0:0 S IBDFNAME=$O(^TMP("UTIL",$J,IBDFNAME)) Q:IBDFNAME']""  S IBDFX="" F  S IBDFX=$O(^TMP("UTIL",$J,IBDFNAME,IBDFX)) D:(IBDFX="")&($D(VAUTF)) CLINICS^IBDFUTL2 Q:IBDFX=""  D
"RTN","IBDFUTL1",85,0)
 .F IBDFRM=0:0 S IBDORM=$O(^TMP("UTIL",$J,IBDFNAME,IBDFX,IBDORM)) Q:IBDORM']""  F IBDFBK=0:0 S IBDBLK=$O(^TMP("UTIL",$J,IBDFNAME,IBDFX,IBDORM,IBDBLK)) Q:IBDBLK']""  D
"RTN","IBDFUTL1",86,0)
 ..F  S IBDFSEL=$O(^TMP("UTIL",$J,IBDFNAME,IBDFX,IBDORM,IBDBLK,IBDFSEL)) Q:IBDFSEL']""  D
"RTN","IBDFUTL1",87,0)
 ...S IBDFTMP=^TMP("UTIL",$J,IBDFNAME,IBDFX,IBDORM,IBDBLK,IBDFSEL),IBDFORM1=$P(IBDFTMP,"^",1),IBDFBLK=$P(IBDFTMP,"^",2) D:'$D(IBDF(IBDFNAME)) HEADER^IBDFUTL2 D SETARR D:IBDBLK="DIAGNOSIS" SETARR1
"RTN","IBDFUTL1",88,0)
 Q
"RTN","IBDFUTL1",89,0)
 ;
"RTN","IBDFUTL1",90,0)
 ;
"RTN","IBDFUTL1",91,0)
CLIN1 ;  -- Sort Display by clinic
"RTN","IBDFUTL1",92,0)
 N IBDFBLK,IBDFLST,IBDFORM,VAUTF
"RTN","IBDFUTL1",93,0)
 I VAUTC=1 F X=0:0 S X=$O(^SC(X)) Q:'X  I $D(^SC(X,0)) S ^TMP("CLN",$J,X)=$P(^SC(X,0),"^",1)
"RTN","IBDFUTL1",94,0)
 I VAUTC=0 K ^TMP("CLN",$J) F IBDFCLIN=0:0 S IBDFCLIN=$O(VAUTC(IBDFCLIN)) Q:'IBDFCLIN  S X=$G(VAUTC(IBDFCLIN)) S ^TMP("CLN",$J,IBDFCLIN)=X
"RTN","IBDFUTL1",95,0)
 I '$D(IBDFNCNG) K ^TMP("CLN1",$J)
"RTN","IBDFUTL1",96,0)
 F IBDFCLIN=0:0 S IBDFCLIN=$O(^TMP("CLN",$J,IBDFCLIN)) Q:'IBDFCLIN  S X=$G(^TMP("CLN",$J,IBDFCLIN)) S ^TMP("CLN1",$J,X)=IBDFCLIN
"RTN","IBDFUTL1",97,0)
 S IBDCLNM=0 F IBDCLN=0:0 S IBDCLNM=$O(^TMP("CLN1",$J,IBDCLNM)) Q:IBDCLNM']""  S IBDFCLIN=^TMP("CLN1",$J,IBDCLNM) S IBDFCIFN=$O(^SD(409.95,"B",IBDFCLIN,0)) S IBDCNODE=$G(^SD(409.95,+IBDFCIFN,0)),IBDFNAME=IBDCLNM I $D(IBDCNODE) D
"RTN","IBDFUTL1",98,0)
 .F IBDFN=2:1:9 S IBDFORM=$P(IBDCNODE,"^",IBDFN) I IBDFORM D SET
"RTN","IBDFUTL1",99,0)
 D SET1 Q
"RTN","IBDFUTL1",100,0)
 ;
"RTN","IBDFUTL1",101,0)
 ;
"RTN","IBDFUTL1",102,0)
FORM1 ;  -- Sort Display by form
"RTN","IBDFUTL1",103,0)
 N IBDFBLK,IBDFLST,IBDFORM
"RTN","IBDFUTL1",104,0)
 I VAUTF=1 S IBDFRNM=0 F IBDFRM=0:0 S IBDFRNM=$O(^IBE(357,"B",IBDFRNM)) Q:IBDFRNM']""  F IBDFORM=0:0 S IBDFORM=$O(^IBE(357,"B",IBDFRNM,IBDFORM)) Q:'IBDFORM  S IBDFNAME=IBDFRNM D SET
"RTN","IBDFUTL1",105,0)
 I '$D(IBDFNCNG) K ^TMP("FRM1",$J)
"RTN","IBDFUTL1",106,0)
 I VAUTF=0 F IBDFORM=0:0 S IBDFORM=$O(VAUTF(IBDFORM)) Q:'IBDFORM  S X=$G(VAUTF(IBDFORM)) S ^TMP("FRM1",$J,X)=IBDFORM
"RTN","IBDFUTL1",107,0)
 I VAUTF=0 S IBDFRNM=0 F IBDFRM=0:0 S IBDFRNM=$O(^TMP("FRM1",$J,IBDFRNM)) Q:IBDFRNM']""  S IBDFORM=^TMP("FRM1",$J,IBDFRNM),IBDFNAME=IBDFRNM D SET
"RTN","IBDFUTL1",108,0)
 D SET1
"RTN","IBDFUTL1",109,0)
 Q
"RTN","IBDFUTL1",110,0)
 ;
"RTN","IBDFUTL1",111,0)
 ;
"RTN","IBDFUTL1",112,0)
GROUP1 ;  -- Sort Display by clinic group
"RTN","IBDFUTL1",113,0)
 N IBDFBLK,IBDFLST,IBDFORM,VAUTF
"RTN","IBDFUTL1",114,0)
 I VAUTG=1 S IBDFGNM=0 F IBDFGN=0:0 S IBDFGNM=$O(^IBD(357.99,"B",IBDFGNM)) Q:IBDFGNM']""  F IBDFGIFN=0:0 S IBDFGIFN=$O(^IBD(357.99,"B",IBDFGNM,IBDFGIFN)) Q:'IBDFGIFN  S ^TMP("GRP1",$J,IBDFGNM)=IBDFGIFN
"RTN","IBDFUTL1",115,0)
 I VAUTG=0,'$D(IBDFNCNG) K ^TMP("GRP1",$J)
"RTN","IBDFUTL1",116,0)
 I VAUTG=0 F IBDFGIFN=0:0 S IBDFGIFN=$O(VAUTG(IBDFGIFN)) Q:'IBDFGIFN  S ^TMP("GRP1",$J,VAUTG(IBDFGIFN))=IBDFGIFN
"RTN","IBDFUTL1",117,0)
 S IBDFGNM=0 F IBDFGN=0:0 S IBDFGNM=$O(^TMP("GRP1",$J,IBDFGNM)) Q:IBDFGNM']""  S IBDFGIFN=^TMP("GRP1",$J,IBDFGNM) D
"RTN","IBDFUTL1",118,0)
 .S IEN=0 F  S IEN=$O(^IBD(357.99,IBDFGIFN,10,IEN)) Q:'IEN  S IBCLN=+$G(^IBD(357.99,IBDFGIFN,10,IEN,0)) S:$D(^SC(IBCLN,0)) ^TMP("IBDF",$J,"C",IBDFGNM,$P(^SC(IBCLN,0),"^",1))=IBCLN
"RTN","IBDFUTL1",119,0)
 .S IEN=0 F  S IEN=$O(^IBD(357.99,IBDFGIFN,11,IEN)) Q:'IEN  S IBDIV=+$G(^IBD(357.99,IBDFGIFN,11,IEN,0)) S:IBDIV ^TMP("IBDF",$J,"D",IBDFGNM,IBDIV)=""
"RTN","IBDFUTL1",120,0)
 D:$D(^TMP("IBDF",$J,"D")) ENDV^IBDFUTL2
"RTN","IBDFUTL1",121,0)
 S IBDFGNM=0 F IBDFGN=0:0 S IBDFGNM=$O(^TMP("IBDF",$J,"C",IBDFGNM)) Q:IBDFGNM']""  S IBDFCLNM=0 F IBDFCLN=0:0 S IBDFCLNM=$O(^TMP("IBDF",$J,"C",IBDFGNM,IBDFCLNM)) Q:IBDFCLNM']""  D
"RTN","IBDFUTL1",122,0)
 .S IBDFCLIN=$G(^TMP("IBDF",$J,"C",IBDFGNM,IBDFCLNM)),IBDFCIFN=$O(^SD(409.95,"B",IBDFCLIN,0)) S IBDCNODE=$G(^SD(409.95,+IBDFCIFN,0)) I $D(IBDCNODE) S IBDFNAME=IBDFGNM F IBDFN=2:1:9 S IBDFORM=$P(IBDCNODE,"^",IBDFN) I IBDFORM D SET
"RTN","IBDFUTL1",123,0)
 D SET1 Q
"RTN","IBDFUTL2")
0^43^B28328999^B23965933
"RTN","IBDFUTL2",1,0)
IBDFUTL2 ;ALB/MAF - MAINTENANCE UTILITY CONT. ;4/24/95
"RTN","IBDFUTL2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**9,63**;APR 24, 1997;Build 80
"RTN","IBDFUTL2",3,0)
 ;
"RTN","IBDFUTL2",4,0)
 ;
"RTN","IBDFUTL2",5,0)
 ;
"RTN","IBDFUTL2",6,0)
ENDV ;  -- Entire divisions were chosen, find all clinics (with encounter forms defined)
"RTN","IBDFUTL2",7,0)
 N IBCLN,IBDIV,NODE,DIVISION,ALL
"RTN","IBDFUTL2",8,0)
 ;  -- Make a list of the divisions chosen
"RTN","IBDFUTL2",9,0)
 S IBDFGNM=0 F IBDFGN=0:0 S IBDFGNM=$O(^TMP("IBDF",$J,"D",IBDFGNM)) Q:IBDFGNM']""  S IBDIV=0 F  S IBDIV=$O(^TMP("IBDF",$J,"D",IBDFGNM,IBDIV)) Q:'IBDIV  S DIVISION(IBDIV,IBDFGNM)=""
"RTN","IBDFUTL2",10,0)
 ;
"RTN","IBDFUTL2",11,0)
 ;  -- Loop through all the clinics finding ones in selected divisions
"RTN","IBDFUTL2",12,0)
  S IBCLN="" F  S IBCLN=$O(^SC(IBCLN)) Q:IBCLN=""  D
"RTN","IBDFUTL2",13,0)
 .S NODE=$G(^SC(IBCLN,0))
"RTN","IBDFUTL2",14,0)
 .S IBDIV=$P(NODE,"^",15)
"RTN","IBDFUTL2",15,0)
 .I IBDIV Q:'$D(DIVISION(IBDIV))
"RTN","IBDFUTL2",16,0)
 .;  -- Check that location is a clinic
"RTN","IBDFUTL2",17,0)
 .Q:$P(NODE,"^",3)'="C"
"RTN","IBDFUTL2",18,0)
 .;  -- It passed all the tests, put it on the list
"RTN","IBDFUTL2",19,0)
 .S IBDNAM=0 F IBDFDIV=0:0 S IBDFDIV=$O(DIVISION(IBDFDIV)) Q:'IBDFDIV  I IBDFDIV=IBDIV F IBDNAME=0:0 S IBDNAM=$O(DIVISION(IBDFDIV,IBDNAM)) Q:IBDNAM']""  S ^TMP("IBDF",$J,"C",IBDNAM,$P(^SC(IBCLN,0),"^",1))=IBCLN
"RTN","IBDFUTL2",20,0)
 ;
"RTN","IBDFUTL2",21,0)
 ;  -- Don't need list of divisions anymore
"RTN","IBDFUTL2",22,0)
 K ^TMP("IBDF",$J,"D")
"RTN","IBDFUTL2",23,0)
 Q
"RTN","IBDFUTL2",24,0)
 ;
"RTN","IBDFUTL2",25,0)
 ;
"RTN","IBDFUTL2",26,0)
CLINICS ;  -- Clinics that use the form
"RTN","IBDFUTL2",27,0)
 N IBDFFLG
"RTN","IBDFUTL2",28,0)
 S IBDFFLG=0 F IDX="C","D","E","F","G","H","I","J" D
"RTN","IBDFUTL2",29,0)
 .S SETUP="" F  S SETUP=$O(^SD(409.95,IDX,IBDFORM1,SETUP)) Q:'SETUP  D
"RTN","IBDFUTL2",30,0)
 ..S CLINIC=$P($G(^SD(409.95,SETUP,0)),"^",1)
"RTN","IBDFUTL2",31,0)
 ..Q:'CLINIC
"RTN","IBDFUTL2",32,0)
 ..S NAME=$P($G(^SC(CLINIC,0)),"^",1)
"RTN","IBDFUTL2",33,0)
 ..Q:NAME=""
"RTN","IBDFUTL2",34,0)
 ..I IBDFFLG S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFUTL2",35,0)
 ..D:'IBDFFLG TMP1 S:IBDFFLG X="" S X=$$SETSTR^VALM1($E(NAME,1,20),X,66,14) D TMP^IBDFUTL1,CNTRL^VALM10(VALMCNT,37,29,IOINHI,IOINORM,0) S IBDFFLG=1
"RTN","IBDFUTL2",36,0)
 Q
"RTN","IBDFUTL2",37,0)
 ;
"RTN","IBDFUTL2",38,0)
 ;
"RTN","IBDFUTL2",39,0)
TMP1 ;  -- Text display set up of TMP array
"RTN","IBDFUTL2",40,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFUTL2",41,0)
 S X=$$SETSTR^VALM1(" ",X,1,80) D TMP^IBDFUTL1
"RTN","IBDFUTL2",42,0)
 S X="",X=$$SETSTR^VALM1("CLINICS USING THIS FORM ARE:           ",X,37,29)
"RTN","IBDFUTL2",43,0)
 Q
"RTN","IBDFUTL2",44,0)
 ;
"RTN","IBDFUTL2",45,0)
 ;
"RTN","IBDFUTL2",46,0)
HEADER ;  -- Set up header line for the display
"RTN","IBDFUTL2",47,0)
 I VALMCNT>0 N IBXFL S IBXFL=$S(VALMCNT+1/14?1.6N:1,VALMCNT+2/14?1.6N:2,VALMCNT+3/14?1.6N:3,VALMCNT+4/14?1.6N:4,1:0) I IBXFL D
"RTN","IBDFUTL2",48,0)
 .N IBXFL1
"RTN","IBDFUTL2",49,0)
 .F IBXFL1=1:1:IBXFL D
"RTN","IBDFUTL2",50,0)
 ..S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1 S X=$$SETSTR^VALM1(" ",X,1,3) D TMP^IBDFUTL1
"RTN","IBDFUTL2",51,0)
 S IBDCNT1=IBDCNT1+1
"RTN","IBDFUTL2",52,0)
 S IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFUTL2",53,0)
 S X=""
"RTN","IBDFUTL2",54,0)
 S IBDF(IBDFNAME)=IBDCNT_"^"_IBDFORM1
"RTN","IBDFUTL2",55,0)
 S X=$$SETSTR^VALM1(" ",X,1,3) D TMP^IBDFUTL1
"RTN","IBDFUTL2",56,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFUTL2",57,0)
 S IBDVAL=IBDFNAME
"RTN","IBDFUTL2",58,0)
 S IBDVAL1=$L(IBDVAL) S IBDVAL1=(80-IBDVAL1)/2 S IBDVAL1=IBDVAL1\1 S X=$$SETSTR^VALM1(" ",X,1,IBDVAL1)
"RTN","IBDFUTL2",59,0)
 S X=$$SETSTR^VALM1(IBDVAL,X,IBDVAL1,25) D TMP^IBDFUTL1,CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
"RTN","IBDFUTL2",60,0)
 S X="",IBDCNT=IBDCNT+1,VALMCNT=VALMCNT+1
"RTN","IBDFUTL2",61,0)
 S X=$$SETSTR^VALM1(" ",X,1,3) D TMP^IBDFUTL1
"RTN","IBDFUTL2",62,0)
 S IBDCNT1=IBDCNT1-1
"RTN","IBDFUTL2",63,0)
 Q
"RTN","IBDFUTL2",64,0)
 ;
"RTN","IBDFUTL2",65,0)
 ;
"RTN","IBDFUTL2",66,0)
JUMP ; -- Jump action to display a specific clinic group on the screen.
"RTN","IBDFUTL2",67,0)
 D FULL^VALM1
"RTN","IBDFUTL2",68,0)
 I $D(XQORNOD(0)),$P(XQORNOD(0),"^",4)]"" S X=$P(XQORNOD(0),"^",4) S X=$P(X,"=",2) I X]"" D:X?1.6N JSEL S DIC=$S($D(VAUTF):"^IBE(357,",$D(VAUTG):"^IBD(357.99,",1:"^SC("),DIC(0)="QEZ" D ^DIC K DIC G:Y<0 JMP S Y=+Y D JUMP1 Q
"RTN","IBDFUTL2",69,0)
JMP S DIC=$S($D(VAUTF):"^IBE(357,",$D(VAUTG):"^IBD(357.99,",1:"^SC("),DIC(0)="AEMN",DIC("A")="Select "_$S($D(VAUTF):"Form",$D(VAUTG):"Clinic Group",1:"Clinic")_" you wish to move to: "
"RTN","IBDFUTL2",70,0)
 S:$D(VAUTC) DIC("S")="I $P(^SC(+Y,0),U,3)=""C""" D ^DIC K DIC
"RTN","IBDFUTL2",71,0)
 I X["^" S VALMBG=1,VALMBCK="R" Q
"RTN","IBDFUTL2",72,0)
 ;
"RTN","IBDFUTL2",73,0)
 ;
"RTN","IBDFUTL2",74,0)
JUMP1 I Y<0 G JUMP
"RTN","IBDFUTL2",75,0)
 N IBDFCAT
"RTN","IBDFUTL2",76,0)
 S IBDFCAT=$S($D(VAUTF):$P(^IBE(357,+Y,0),"^",1),$D(VAUTG):$P(^IBD(357.99,+Y,0),"^",1),1:$P(^SC(+Y,0),"^",1))
"RTN","IBDFUTL2",77,0)
 I '$D(IBDF(IBDFCAT)) W !!,"There is no data listed for this Clinic Group" G JMP
"RTN","IBDFUTL2",78,0)
 S VALMBG=+IBDF(IBDFCAT) S VALMBCK="R" Q
"RTN","IBDFUTL2",79,0)
 Q
"RTN","IBDFUTL2",80,0)
 ;
"RTN","IBDFUTL2",81,0)
 ;
"RTN","IBDFUTL2",82,0)
JSEL ; -- Convert number selected to name
"RTN","IBDFUTL2",83,0)
 S IBDVALM=X I $D(^TMP("CGIDX",$J,IBDVALM)) S X=$P(^TMP("CGIDX",$J,IBDVALM),"^",2),X=$P(^IBD(357.99,X,0),"^",1)
"RTN","IBDFUTL2",84,0)
 Q
"RTN","IBDFUTL2",85,0)
 ;
"RTN","IBDFUTL2",86,0)
 ;
"RTN","IBDFUTL2",87,0)
CHGLST ;  -- Code to change list display
"RTN","IBDFUTL2",88,0)
 D FULL^VALM1
"RTN","IBDFUTL2",89,0)
 S IBDFDIS1=IBDFDIS,IBDFINT1=IBDFINT,IBDFACT1=IBDFACT
"RTN","IBDFUTL2",90,0)
 D EXIT1^IBDFUTL,OUT^IBDFUTL
"RTN","IBDFUTL2",91,0)
 Q
"RTN","IBDFUTL2",92,0)
 ;
"RTN","IBDFUTL2",93,0)
 ;
"RTN","IBDFUTL2",94,0)
DELETE ;  -- Delete invalid code from the selection list/block
"RTN","IBDFUTL2",95,0)
 N IBDFVALM,VALMY,IBBLK,IBFORM,DA,IBDN,IBDX,IBD9,IBD10
"RTN","IBDFUTL2",96,0)
 S VALMBCK=""
"RTN","IBDFUTL2",97,0)
 D EN^VALM2($G(XQORNOD(0))) G REP:'$O(VALMY(0)) S IBDFVALM=0
"RTN","IBDFUTL2",98,0)
 D FULL^VALM1 S VALMBCK="R"
"RTN","IBDFUTL2",99,0)
 F IBDFVALM=0:0 S IBDFVALM=$O(VALMY(IBDFVALM)) Q:IBDFVALM']""  S DA=$P($G(^TMP("CPTIDX",$J,IBDFVALM)),"^",4) I DA]"" S IBFORM=$P($G(^TMP("CPTIDX",$J,IBDFVALM)),"^",5),IBBLK=$P($G(^TMP("CPTIDX",$J,IBDFVALM)),"^",6) D
"RTN","IBDFUTL2",100,0)
 .S DIK="^IBE(357.3,",DA=DA D ^DIK K DIK D BLKCHNG^IBDF19(IBFORM,IBBLK)
"RTN","IBDFUTL2",101,0)
 K IBDF,^TMP("UTIL",$J)
"RTN","IBDFUTL2",102,0)
 S IBDN="",(IBD9,IBD10)=0 F  S IBDN=$O(^IBE(357.2,"C",IBBLK,IBDN)) Q:IBDN=""  S IBDX=$P($G(^IBE(357.2,IBDN,0)),U,11) I IBDX?1.N S IBDX=$E($P($G(^IBE(357.6,IBDX,0)),U,1),1,30) D
"RTN","IBDFUTL2",103,0)
 .I IBDX="DG SELECT ICD-9 DIAGNOSIS CODE" S IBD9=1
"RTN","IBDFUTL2",104,0)
 .I IBDX="DG SELECT ICD-10 DIAGNOSIS COD" S IBD10=1
"RTN","IBDFUTL2",105,0)
 ;Now update history if ICD-9 or ICD-10 was present before or after the change
"RTN","IBDFUTL2",106,0)
 N IBDX
"RTN","IBDFUTL2",107,0)
 I IBD9 S IBDX=$$CSUPD357^IBDUTICD(IBFORM,1,"",$$NOW^XLFDT(),DUZ)
"RTN","IBDFUTL2",108,0)
 I IBD10 S IBDX=$$CSUPD357^IBDUTICD(IBFORM,30,"",$$NOW^XLFDT(),DUZ)
"RTN","IBDFUTL2",109,0)
 ;
"RTN","IBDFUTL2",110,0)
 ;  -- Redo list
"RTN","IBDFUTL2",111,0)
REP K IBDF D INIT^IBDFUTL S VALMBG=1,VALMBCK="R"
"RTN","IBDFUTL2",112,0)
 Q
"RTN","IBDFUTL3")
0^37^B9491211^B4956030
"RTN","IBDFUTL3",1,0)
IBDFUTL3 ;ALB/MAF - MAINTENANCE UTILITY CONT. ;4/24/95
"RTN","IBDFUTL3",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;APR 24, 1997;Build 80
"RTN","IBDFUTL3",3,0)
 ;
"RTN","IBDFUTL3",4,0)
 ;
"RTN","IBDFUTL3",5,0)
 ;
"RTN","IBDFUTL3",6,0)
REPLACE ;  -- Replace invalid code with another valid code... it will be in
"RTN","IBDFUTL3",7,0)
 ;     the same place as the old invalid code.
"RTN","IBDFUTL3",8,0)
 N IBDFVALM,VALMY,IBBLK,IBDFSLC,IBDFSLC1,IBDFSLC2,IBFORM,IBGRP,IBLIST,DA,IBSEL,ORDER,IEN,IBDN,IBDX,IBD9,IBD10,IBDQUIT
"RTN","IBDFUTL3",9,0)
 N IBDN,IBDX,IBD9,IBD10
"RTN","IBDFUTL3",10,0)
 S IBDQUIT=0
"RTN","IBDFUTL3",11,0)
 S VALMBCK=""
"RTN","IBDFUTL3",12,0)
 D EN^VALM2($G(XQORNOD(0)),"S") G REP:'$O(VALMY(0)) S IBDFVALM=0
"RTN","IBDFUTL3",13,0)
 D FULL^VALM1 S VALMBCK="R"
"RTN","IBDFUTL3",14,0)
 F IBDFVALM=0:0 S IBDFVALM=$O(VALMY(IBDFVALM)) Q:IBDFVALM']""  S (IBDFSEL,DA)=$P($G(^TMP("CPTIDX",$J,IBDFVALM)),"^",4) I DA]"" S IBDFSLC=$G(^IBE(357.3,DA,0)),IBDFSLC1=$G(^IBE(357.3,DA,1,1,0)),IBDFSLC2=$G(^IBE(357.3,DA,1,2,0)) D
"RTN","IBDFUTL3",15,0)
 .S IBFORM=$P($G(^TMP("CPTIDX",$J,IBDFVALM)),"^",5)
"RTN","IBDFUTL3",16,0)
 .S IBGRP=$P(IBDFSLC,"^",4)
"RTN","IBDFUTL3",17,0)
 .S IBLIST=$P(IBDFSLC,"^",3)
"RTN","IBDFUTL3",18,0)
 .S ORDER=$P(IBDFSLC,"^",5)
"RTN","IBDFUTL3",19,0)
 .S IBBLK=$P($G(^TMP("CPTIDX",$J,IBDFVALM)),"^",6)
"RTN","IBDFUTL3",20,0)
 D REPLC(IBLIST,IBGRP,ORDER,.IBSEL,IBBLK,IBFORM,.IBDQUIT)
"RTN","IBDFUTL3",21,0)
 Q:IBDQUIT
"RTN","IBDFUTL3",22,0)
 S IBDN="",(IBD9,IBD10)=0 F  S IBDN=$O(^IBE(357.2,"C",IBBLK,IBDN)) Q:IBDN=""  S IBDX=$P($G(^IBE(357.2,IBDN,0)),U,11) I IBDX?1.N S IBDX=$E($P($G(^IBE(357.6,IBDX,0)),U,1),1,30) D
"RTN","IBDFUTL3",23,0)
 .I IBDX="DG SELECT ICD-9 DIAGNOSIS CODE" S IBD9=1
"RTN","IBDFUTL3",24,0)
 .I IBDX="DG SELECT ICD-10 DIAGNOSIS COD" S IBD10=1
"RTN","IBDFUTL3",25,0)
 ;Now update history if ICD-9 or ICD-10 was present before or after the change
"RTN","IBDFUTL3",26,0)
 N IBDX
"RTN","IBDFUTL3",27,0)
 I IBD9 S IBDX=$$CSUPD357^IBDUTICD(IBFORM,1,"",$$NOW^XLFDT(),DUZ)
"RTN","IBDFUTL3",28,0)
 I IBD10 S IBDX=$$CSUPD357^IBDUTICD(IBFORM,30,"",$$NOW^XLFDT(),DUZ)
"RTN","IBDFUTL3",29,0)
 K IBDF,^TMP("UTIL",$J) D INIT^IBDFUTL S VALMBCK="R" Q
"RTN","IBDFUTL3",30,0)
 ;
"RTN","IBDFUTL3",31,0)
 ;
"RTN","IBDFUTL3",32,0)
REPLC(IBLIST,IBGRP,ORDER,IBSEL,IBBLK,IBFORM,IBDQUIT) ;allows the user to add a selection to the selection group for replacement - returns 0 if it was done, 1 otherwise
"RTN","IBDFUTL3",33,0)
 N SUB,IBRTN,IBDSERCH
"RTN","IBDFUTL3",34,0)
 ;
"RTN","IBDFUTL3",35,0)
 Q:'$$FORMDSCR^IBDFU1C(.IBFORM)
"RTN","IBDFUTL3",36,0)
 Q:$$BLKDESCR^IBDFU1B(.IBBLK) 1
"RTN","IBDFUTL3",37,0)
 Q:$$LSTDESCR^IBDFU1(.IBLIST) 1
"RTN","IBDFUTL3",38,0)
 S IBRTN=IBLIST("RTN")
"RTN","IBDFUTL3",39,0)
 D RTNDSCR^IBDFU1B(.IBRTN)
"RTN","IBDFUTL3",40,0)
 ;N QUIT S QUIT=0
"RTN","IBDFUTL3",41,0)
 I IBRTN("ACTION")'=3 D NOGOOD^IBDF4 Q 1
"RTN","IBDFUTL3",42,0)
 S IBDSERCH=2  ;Lexicon search.
"RTN","IBDFUTL3",43,0)
 K @IBRTN("DATA_LOCATION")
"RTN","IBDFUTL3",44,0)
 I '$$DORTN^IBDFU1B(.IBRTN,IBDSERCH) D NOGOOD^IBDF4 Q 1
"RTN","IBDFUTL3",45,0)
 I $D(DUOUT)!($D(DTOUT))!('$D(@IBRTN("DATA_LOCATION"))) D:$D(IBSEL) KILL3573(IBSEL) S IBDQUIT=1 Q
"RTN","IBDFUTL3",46,0)
 D ADDREC^IBDF4(.IBDQUIT,ORDER,.IBSEL,$P($G(@IBRTN("DATA_LOCATION")),U)) ;edits and adds the selection
"RTN","IBDFUTL3",47,0)
 I IBDQUIT=1 D KILL3573(IBSEL)
"RTN","IBDFUTL3",48,0)
 K @IBRTN("DATA_LOCATION")
"RTN","IBDFUTL3",49,0)
 ;  -- If a selection has been chosen,  the old node is killed off and
"RTN","IBDFUTL3",50,0)
 ;     the block/selection list is updated.
"RTN","IBDFUTL3",51,0)
 I IBDQUIT Q
"RTN","IBDFUTL3",52,0)
 S DA=IBDFSEL,DIK="^IBE(357.3," D ^DIK K DIK D BLKCHNG^IBDF19(IBFORM,IBBLK)
"RTN","IBDFUTL3",53,0)
 Q
"RTN","IBDFUTL3",54,0)
 ;To kill incomplete entries in ^IBE(357.3
"RTN","IBDFUTL3",55,0)
KILL3573(IBDSEL) ;
"RTN","IBDFUTL3",56,0)
 N DA,DIK
"RTN","IBDFUTL3",57,0)
 S DA=IBDSEL,DIK="^IBE(357.3," D ^DIK K DIK ;D BLKCHNG^IBDF19(IBFORM,IBBLK)
"RTN","IBDFUTL3",58,0)
 Q
"RTN","IBDFUTL3",59,0)
REP K IBDF D INIT^IBDFUTL S VALMBG=1,VALMBCK="R"
"RTN","IBDFUTL3",60,0)
 Q
"RTN","IBDFUTL4")
0^21^B156393751^n/a
"RTN","IBDFUTL4",1,0)
IBDFUTL4  ;ALB/MKN/CFS - Maintenance Utility Encounter Forms ICD-10 Update ;12/29/2011
"RTN","IBDFUTL4",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;;Build 80
"RTN","IBDFUTL4",3,0)
 ;
"RTN","IBDFUTL4",4,0)
 ;
"RTN","IBDFUTL4",5,0)
 N IBDARY,IBDX,IBDNA,IBDN,IBDN2,IBDBLK,IBDGPNA,IBDFM,IBDCT,IBDCT2,IBDS1,IBDS2,IBDS3,IBDFMNA,IBDCLNA,IBDCT
"RTN","IBDFUTL4",6,0)
 N IBDFL,IBDFSRT,IBDFDIS,IBDINP,IBDLI,IBDSTA,IBDJ,IBDW,IBDLINE,IBDN,IBDN1,IBDSC,IBDCL1,IBDCL2,IBDOUT,IBDQUIT
"RTN","IBDFUTL4",7,0)
 ;
"RTN","IBDFUTL4",8,0)
PROMPTS ;
"RTN","IBDFUTL4",9,0)
 S (IBDFL,VALMCNT)=0
"RTN","IBDFUTL4",10,0)
 K DIR S DIR("B")="CLINICS",DIR(0)="SA^C:CLINICS;G:GROUPS;F:FORMS",DIR("A")="Sort by [C]linics, [G]roups, [F]orms: " D ^DIR
"RTN","IBDFUTL4",11,0)
 K DIR I $D(DTOUT)!($D(DUOUT))!(Y=U) G:'$D(IBDRE) EXIT S VALMBCK="R",VALMBG=1 Q
"RTN","IBDFUTL4",12,0)
 S IBDX=$S("Gg"[X:2,"Ff"[X:3,"Ss"[X:4,1:1)
"RTN","IBDFUTL4",13,0)
 S IBDFSRT=$E(IBDX),IBDFDIS=$S(IBDFSRT=1:"CLINIC",IBDFSRT=2:"GROUP",IBDFSRT=3:"FORM",1:"QUIT")
"RTN","IBDFUTL4",14,0)
 S IBDX=$$SELASR() I 'IBDX S:$D(IBDRE) VALMBCK="R",VALMBG=1 Q:$D(IBDRE)  G EXIT
"RTN","IBDFUTL4",15,0)
 ;Coding Types
"RTN","IBDFUTL4",16,0)
 K DIR,DIC S DIR("B")="ALL",DIR(0)="S^9:ICD-9;10:ICD-10;B:Both;N:Neither;A:All"
"RTN","IBDFUTL4",17,0)
 S DIR("A")="Contains ICD-9 and/or ICD-10 diagnosis codes: "_$C(13,10)_"  ICD-[9], ICD-[10], [B]oth, [N]either, [A]ll"
"RTN","IBDFUTL4",18,0)
 D ^DIR K DIR I ($D(DTOUT)!$D(DUOUT))!(Y=U) G:'$D(IBDRE) EXIT S VALMBCK="R",VALMBG=1 Q
"RTN","IBDFUTL4",19,0)
 S IBDINP("CONTAINS")=Y
"RTN","IBDFUTL4",20,0)
 ;Update Status
"RTN","IBDFUTL4",21,0)
 K DIR S DIR("B")="ALL",DIR(0)="S^I:Incomplete;C:Complete;R:Review;A:All"
"RTN","IBDFUTL4",22,0)
 S DIR("A")="ICD-10 Update Status:"_$C(13,10)_"  [I]ncomplete, [C]omplete, [R]eview, [A]ll"
"RTN","IBDFUTL4",23,0)
 D ^DIR K DIR I ($D(DTOUT)!$D(DUOUT))!(Y=U) G:'$D(IBDRE) EXIT S VALMBCK="R",VALMBG=1 Q
"RTN","IBDFUTL4",24,0)
 S IBDINP("STATUS")=Y
"RTN","IBDFUTL4",25,0)
 ;Summary or Detail
"RTN","IBDFUTL4",26,0)
 K DIR S DIR("B")="SUMMARY",DIR(0)="S^S:Summary Report;D:Detail Report"
"RTN","IBDFUTL4",27,0)
 S DIR("A")="Report Type:"_$C(13,10)_"  [S]ummary Report, [D]etail Report"
"RTN","IBDFUTL4",28,0)
 D ^DIR K DIR I ($D(DTOUT)!$D(DUOUT))!(Y=U) G:'$D(IBDRE) EXIT S VALMBCK="R",VALMBG=1 Q
"RTN","IBDFUTL4",29,0)
 S IBDINP("SD")=Y
"RTN","IBDFUTL4",30,0)
 I '$D(IBDRE) K XQORS,VALMEVL D EN^VALM("IBDF ICD10 STATUS REPORT")
"RTN","IBDFUTL4",31,0)
 I $D(IBDRE) D HDR,EXIT,INIT S VALMBCK="R",VALMBG=1
"RTN","IBDFUTL4",32,0)
 Q
"RTN","IBDFUTL4",33,0)
 ;
"RTN","IBDFUTL4",34,0)
SORT      ;Set up sorted list
"RTN","IBDFUTL4",35,0)
 K ^TMP("IBDFUTL4",$J),^TMP("IBDFUTL4X",$J) S ^TMP("IBDFUTL4X",$J,"D",0)=0
"RTN","IBDFUTL4",36,0)
 S IBDARY="^TMP(""IBDFUTL4X"","_$J_")"
"RTN","IBDFUTL4",37,0)
 ;Clinic Processing
"RTN","IBDFUTL4",38,0)
 I IBDINP("SORTBY")="AC" D  G SETLIST
"RTN","IBDFUTL4",39,0)
 . S IBDSC=0 F  S IBDSC=$O(^SC(IBDSC)) Q:IBDSC'?1.N  D CHECKCL^IBDFUTL5(IBDSC,IBDINP("CONTAINS"),IBDINP("SORTBY"),IBDARY)
"RTN","IBDFUTL4",40,0)
 I IBDINP("SORTBY")="SC" D  G SETLIST
"RTN","IBDFUTL4",41,0)
 . S IBDX="" F  S IBDX=$O(IBDINP("CLINIC",IBDX)) Q:IBDX=""  S IBDSC=IBDINP("CLINIC",IBDX) D CHECKCL^IBDFUTL5(IBDSC,IBDINP("CONTAINS"),IBDINP("SORTBY"),IBDARY)
"RTN","IBDFUTL4",42,0)
 I IBDINP("SORTBY")="RC" S IBDX=IBDINP("CLINIC","RC",1),IBDX=$O(^SC("B",IBDX),-1) D
"RTN","IBDFUTL4",43,0)
 . F  S IBDX=$O(^SC("B",IBDX)) Q:IBDX=""!(IBDX]IBDINP("CLINIC","RC",2))  S IBDSC="" F  S IBDSC=$O(^SC("B",IBDX,IBDSC)) Q:IBDSC'?1.N  D
"RTN","IBDFUTL4",44,0)
 . . D CHECKCL^IBDFUTL5(IBDSC,IBDINP("CONTAINS"),IBDINP("SORTBY"),IBDARY)
"RTN","IBDFUTL4",45,0)
 ;Clinic Group Processing
"RTN","IBDFUTL4",46,0)
 I IBDINP("SORTBY")="AG" D  G SETLIST
"RTN","IBDFUTL4",47,0)
 . S IBDX=0 F  S IBDX=$O(^IBD(357.99,IBDX)) Q:IBDX'?1.N  S IBDGPNA=$P($G(^IBD(357.99,IBDX,0)),U,1) S:IBDGPNA="" IBDGPNA="Unknown" D
"RTN","IBDFUTL4",48,0)
 . . S IBDN=0 F  S IBDN=$O(^IBD(357.99,IBDX,10,IBDN)) Q:IBDN'?1.N  S IBDSC=^IBD(357.99,IBDX,10,IBDN,0) D CHECKCL^IBDFUTL5(IBDSC,IBDINP("CONTAINS"),IBDINP("SORTBY"),IBDARY,IBDGPNA)
"RTN","IBDFUTL4",49,0)
 I IBDINP("SORTBY")="SG" D  G SETLIST
"RTN","IBDFUTL4",50,0)
 . S IBDX="" F  S IBDX=$O(IBDINP("GROUP",IBDX)) Q:IBDX=""  S IBDN=IBDINP("GROUP",IBDX),IBDGPNA=$P($G(^IBD(357.99,IBDN,0)),U,1) S:IBDGPNA="" IBDGPNA="Unknown" D
"RTN","IBDFUTL4",51,0)
 . . S IBDY=0 F  S IBDY=$O(^IBD(357.99,IBDN,10,IBDY)) Q:IBDY'?1.N  S IBDSC=^IBD(357.99,IBDN,10,IBDY,0) D CHECKCL^IBDFUTL5(IBDSC,IBDINP("CONTAINS"),IBDINP("SORTBY"),IBDARY,IBDGPNA)
"RTN","IBDFUTL4",52,0)
 I IBDINP("SORTBY")="RG" S IBDX=IBDINP("GROUP","RG",1),IBDX=$O(^IBD(357.99,"B",IBDX),-1) D
"RTN","IBDFUTL4",53,0)
 . F  S IBDX=$O(^IBD(357.99,"B",IBDX)) Q:IBDX=""!(IBDX]IBDINP("GROUP","RG",2))  D
"RTN","IBDFUTL4",54,0)
 . . S IBDIEN=$O(^IBD(357.99,"B",IBDX,""))
"RTN","IBDFUTL4",55,0)
 . . S IBDGPNA=$P($G(^IBD(357.99,IBDIEN,0)),U,1) S:IBDGPNA="" IBDGPNA="Unknown" D
"RTN","IBDFUTL4",56,0)
 . . . S IBDN=0 F  S IBDN=$O(^IBD(357.99,IBDIEN,10,IBDN)) Q:IBDN'?1.N  S IBDSC=^IBD(357.99,IBDIEN,10,IBDN,0) D CHECKCL^IBDFUTL5(IBDSC,IBDINP("CONTAINS"),IBDINP("SORTBY"),IBDARY,IBDGPNA)
"RTN","IBDFUTL4",57,0)
 ;Encounter Form Processing
"RTN","IBDFUTL4",58,0)
 I $E(IBDINP("SORTBY"),2)="F" D FMARR
"RTN","IBDFUTL4",59,0)
 I IBDINP("SORTBY")="AF" D  G TOOLKITF
"RTN","IBDFUTL4",60,0)
 . S IBDSC=0 F  S IBDSC=$O(^SC(IBDSC)) Q:IBDSC'?1.N  D CHECKCL^IBDFUTL5(IBDSC,IBDINP("CONTAINS"),IBDINP("SORTBY"),IBDARY)
"RTN","IBDFUTL4",61,0)
 I IBDINP("SORTBY")="SF" D  G TOOLKITF
"RTN","IBDFUTL4",62,0)
 . S IBDFM="" F  S IBDFM=$O(IBDINP("FORM",IBDFM)) Q:IBDFM=""  D
"RTN","IBDFUTL4",63,0)
 . . S IBDSC="" F  S IBDSC=$O(^TMP("IBDFUTL4X",$J,"X","FMARR",IBDFM,IBDSC)) Q:IBDSC=""  D CHECKCL^IBDFUTL5(IBDSC,IBDINP("CONTAINS"),IBDINP("SORTBY"),IBDARY)
"RTN","IBDFUTL4",64,0)
 I IBDINP("SORTBY")="RF" S IBDX=IBDINP("FORM","RF",1),IBDFM=$O(^TMP("IBDFUTL4X",$J,"X","FMARR",IBDX),-1) D
"RTN","IBDFUTL4",65,0)
 . F  S IBDFM=$O(^TMP("IBDFUTL4X",$J,"X","FMARR",IBDFM)) Q:IBDFM=""!(IBDFM]IBDINP("FORM","RF",2))  S IBDSC="" D
"RTN","IBDFUTL4",66,0)
 . . F  S IBDSC=$O(^TMP("IBDFUTL4X",$J,"X","FMARR",IBDFM,IBDSC)) Q:IBDSC=""  D CHECKCL^IBDFUTL5(IBDSC,IBDINP("CONTAINS"),IBDINP("SORTBY"),IBDARY)
"RTN","IBDFUTL4",67,0)
TOOLKITF ;
"RTN","IBDFUTL4",68,0)
 I $E(IBDINP("SORTBY"),2)="F" S IBDFM="" F  S IBDFM=$O(^TMP("IBDFUTL4X",$J,"X","FMTK",IBDFM)) Q:IBDFM=""  D CHECKFM^IBDFUTL5(IBDFM,IBDINP("CONTAINS"),IBDINP("SORTBY"),IBDARY)
"RTN","IBDFUTL4",69,0)
 ;
"RTN","IBDFUTL4",70,0)
SETLIST ;Convert the list into Listman format
"RTN","IBDFUTL4",71,0)
 I $E(IBDINP("SORTBY"),2)'="G" D
"RTN","IBDFUTL4",72,0)
 . S IBDS1="",IBDCT=0 F  S IBDS1=$O(^TMP("IBDFUTL4X",$J,"S",IBDS1)) Q:IBDS1=""  D
"RTN","IBDFUTL4",73,0)
 . . S IBDS2="" F  S IBDS2=$O(^TMP("IBDFUTL4X",$J,"S",IBDS1,IBDS2)) Q:IBDS2=""  D 
"RTN","IBDFUTL4",74,0)
 . . . S IBDCT=IBDCT+1 M ^TMP("IBDFUTL4X",$J,"D",IBDCT)=^TMP("IBDFUTL4X",$J,"S",IBDS1,IBDS2)
"RTN","IBDFUTL4",75,0)
 I $E(IBDINP("SORTBY"),2)="G" D
"RTN","IBDFUTL4",76,0)
 . S IBDS1="",IBDCT=0 F  S IBDS1=$O(^TMP("IBDFUTL4X",$J,"S",IBDS1)) Q:IBDS1=""  D
"RTN","IBDFUTL4",77,0)
 . . S IBDS2="" F  S IBDS2=$O(^TMP("IBDFUTL4X",$J,"S",IBDS1,IBDS2)) Q:IBDS2=""  D
"RTN","IBDFUTL4",78,0)
 . . . S IBDS3="" F  S IBDS3=$O(^TMP("IBDFUTL4X",$J,"S",IBDS1,IBDS2,IBDS3)) Q:IBDS3=""  D 
"RTN","IBDFUTL4",79,0)
 . . . . S IBDCT=IBDCT+1 M ^TMP("IBDFUTL4X",$J,"D",IBDCT)=^TMP("IBDFUTL4X",$J,"S",IBDS1,IBDS2,IBDS3)
"RTN","IBDFUTL4",80,0)
 S ^TMP("IBDFUTL4X",$J,"D",0)=IBDCT
"RTN","IBDFUTL4",81,0)
 S IBDVAL=""
"RTN","IBDFUTL4",82,0)
 S (IBDN,VALMCNT,IBDCT)=0 F  S IBDN=$O(^TMP("IBDFUTL4X",$J,"D",IBDN)) Q:IBDN=""  S IBDX=^TMP("IBDFUTL4X",$J,"D",IBDN) D
"RTN","IBDFUTL4",83,0)
 . S IBDFM=$P(IBDX,U,8),IBDCT=IBDCT+1 ;,IBDLINE=$$SETSTR^VALM1(IBDN_")","",1,5),
"RTN","IBDFUTL4",84,0)
 . S IBDFMNA=$P(IBDX,U,1),IBDCLNA=$P(IBDX,U,6),IBDGPNA=$P(IBDX,U,9)
"RTN","IBDFUTL4",85,0)
 . I $E(IBDINP("SORTBY"),2)="G",IBDVAL'=IBDGPNA D GRHEADNG^IBDFUTL5(IBDGPNA,.IBDCT)  ;List each clinic under its grouped heading. Grouped in ^IBD(357.99.
"RTN","IBDFUTL4",86,0)
 . S IBDLINE=$$SETSTR^VALM1(IBDN_")","",1,5)
"RTN","IBDFUTL4",87,0)
 . F IBDJ=1:1:6 S IBDW=$P("22/5/8/8/5/22","/",IBDJ) S IBDLINE=IBDLINE_$$SETSTR^VALM1($P(IBDX,U,IBDJ),"",1,IBDW)_" "
"RTN","IBDFUTL4",88,0)
 . S ^TMP("IBDFUTL4",$J,IBDCT,0)=IBDLINE,VALMCNT=IBDCT,^TMP("IBDFUTL4X",$J,"X","FM",IBDN)=IBDFM ; N=ROW IBDFM=Form IEN
"RTN","IBDFUTL4",89,0)
 . S ^TMP("IBDFUTL4X",$J,"X","ROW",IBDN)=IBDCT
"RTN","IBDFUTL4",90,0)
 . I $E(IBDINP("SORTBY"),2)="C" S ^TMP("IBDFUTL4X",$J,"X","CLNA",IBDCLNA,IBDCT)=""
"RTN","IBDFUTL4",91,0)
 . I $E(IBDINP("SORTBY"),2)="F" S ^TMP("IBDFUTL4X",$J,"X","FMNA",IBDFMNA,IBDCT)=""
"RTN","IBDFUTL4",92,0)
 . I $E(IBDINP("SORTBY"),2)="G" S ^TMP("IBDFUTL4X",$J,"X","GPNA",IBDGPNA,IBDCT)=""
"RTN","IBDFUTL4",93,0)
 . S IBDFMNA=$E(IBDFMNA,16,30),IBDCLNA=$E(IBDCLNA,13,24)
"RTN","IBDFUTL4",94,0)
 . S IBDVAL=IBDGPNA
"RTN","IBDFUTL4",95,0)
 . I IBDINP("SD")="D" S IBDN1=0 F  S IBDN1=$O(^TMP("IBDFUTL4X",$J,"D",IBDN,"D",IBDN1)) Q:IBDN1=""  S IBDX=^TMP("IBDFUTL4X",$J,"D",IBDN,"D",IBDN1) D
"RTN","IBDFUTL4",96,0)
 . . I $P(IBDX,U,1)="BL" S IBDLINE="      Block: "_$E($P(IBDX,U,2),1,30)
"RTN","IBDFUTL4",97,0)
 . . I $P(IBDX,U,1)="LT" S IBDLINE="         "_$E($P(IBDX,U,3),1,8)_$J(" ",8-$L($E($P(IBDX,U,3),1,8)))_" "_$P(IBDX,U,4)
"RTN","IBDFUTL4",98,0)
 . . S IBDCT=IBDCT+1,^TMP("IBDFUTL4",$J,IBDCT,0)=IBDLINE,VALMCNT=IBDCT
"RTN","IBDFUTL4",99,0)
 Q
"RTN","IBDFUTL4",100,0)
 ;
"RTN","IBDFUTL4",101,0)
FMARR ;Set up FORMARR(FORMNAME,CLINIC)
"RTN","IBDFUTL4",102,0)
 N IBDFM,IBDCL,IBDFT,IBDX,IBDI,IBDFMX,IBDFMNA,IBDFMSTA,IBDQUIT,IBDFM
"RTN","IBDFUTL4",103,0)
 S IBDCL=0 F  S IBDCL=$O(^SD(409.95,"B",IBDCL)) Q:IBDCL'?1.N  S IBDFT="" F  S IBDFT=$O(^SD(409.95,"B",IBDCL,IBDFT)) Q:IBDFT=""  D
"RTN","IBDFUTL4",104,0)
 . S IBDX=^SD(409.95,IBDFT,0) ; FORM LIST
"RTN","IBDFUTL4",105,0)
 . F IBDI=2:1:9 S IBDFM=$P(IBDX,U,IBDI) I IBDFM?1.N S IBDFMX=$G(^IBE(357,IBDFM,0)),IBDFMNA=$P(IBDFMX,U,1),IBDFMSTA=$E($P(IBDFMX,U,18)) S:IBDFMNA="" IBDFMNA="Unknown" D  I 'IBDQUIT S ^TMP("IBDFUTL4X",$J,"X","FMARR",IBDFMNA,IBDCL)=IBDFM_U_IBDFMSTA
"RTN","IBDFUTL4",106,0)
 . . I IBDINP("STATUS")="I",IBDFMSTA'="" S IBDQUIT=1 Q
"RTN","IBDFUTL4",107,0)
 . . I IBDINP("STATUS")="C",IBDFMSTA'="C" S IBDQUIT=1 Q
"RTN","IBDFUTL4",108,0)
 . . I IBDINP("STATUS")="R",IBDFMSTA'="R" S IBDQUIT=1 Q
"RTN","IBDFUTL4",109,0)
 . . S IBDQUIT=0
"RTN","IBDFUTL4",110,0)
 S IBDFM=0 F  S IBDFM=$O(^IBE(357,IBDFM)) Q:IBDFM'?1.N  S IBDX=$G(^IBE(357,IBDFM,0)),IBDFMNA=$P(IBDX,U,1) I IBDFMNA'="" I '$D(^TMP("IBDFUTL4X",$J,"X","FMARR",IBDFMNA)) S ^TMP("IBDFUTL4X",$J,"X","FMTK",IBDFM)=""
"RTN","IBDFUTL4",111,0)
 Q
"RTN","IBDFUTL4",112,0)
 ;
"RTN","IBDFUTL4",113,0)
EXIT ;  -- Code executed at action exit
"RTN","IBDFUTL4",114,0)
 K IBDARY,IBDX,IBDNA,IBDN,IBDN2,IBDBLK,IBDGPNA,IBDFM,IBDCT,IBDS1,IBDS2,IBDFMNA,IBDCLNA,IBDCT,IBDRE
"RTN","IBDFUTL4",115,0)
 K ^TMP("IBDFUTL4",$J),^TMP("IBDFUTL4X",$J)
"RTN","IBDFUTL4",116,0)
 Q
"RTN","IBDFUTL4",117,0)
 ;
"RTN","IBDFUTL4",118,0)
SELASR() ;Ask for All, Selected or Range
"RTN","IBDFUTL4",119,0)
 K DIR
"RTN","IBDFUTL4",120,0)
 I IBDFDIS="CLINIC" S DIR("B")="ALL CLINICS",DIR(0)="S^AC:ALL CLINICS;SC:SELECTED CLINICS;RC:RANGE OF CLINICS",DIR("A")="Selection type"
"RTN","IBDFUTL4",121,0)
 I IBDFDIS="GROUP" S DIR("B")="ALL CLINIC GROUPS",DIR(0)="S^AG:ALL CLINIC GROUPS;SG:SELECTED CLINIC GROUPS;RG:RANGE OF CLINIC GROUPS",DIR("A")="Selection type"
"RTN","IBDFUTL4",122,0)
 I IBDFDIS="FORM" S DIR("B")="ALL ENCOUNTER FORMS",DIR(0)="S^AF:ALL ENCOUNTER FORMS;SF:SELECTED ENCOUNTER FORMS;RF:RANGE OF ENCOUNTER FORMS",DIR("A")="Selection type"
"RTN","IBDFUTL4",123,0)
 D ^DIR Q:$D(DTOUT)!$D(DUOUT) 0  S IBDINP("SORTBY")=Y
"RTN","IBDFUTL4",124,0)
 K IBDINP("CLINIC") I "SC^RC"[IBDINP("SORTBY") D @IBDINP("SORTBY") Q:'$D(IBDINP("CLINIC")) 0
"RTN","IBDFUTL4",125,0)
 K IBDINP("GROUP") I "SG^RG"[IBDINP("SORTBY") D @IBDINP("SORTBY") Q:'$D(IBDINP("GROUP")) 0
"RTN","IBDFUTL4",126,0)
 K IBDINP("FORM") I "SF^RF"[IBDINP("SORTBY") D @IBDINP("SORTBY") Q:'$D(IBDINP("FORM")) 0
"RTN","IBDFUTL4",127,0)
 Q 1
"RTN","IBDFUTL4",128,0)
 ;
"RTN","IBDFUTL4",129,0)
SC ;Clinic selector
"RTN","IBDFUTL4",130,0)
 N IBDI
"RTN","IBDFUTL4",131,0)
 S IBDOUT=0 F IBDI=1:1:30 S IBDCL1=$$SC1("Select CLINIC: ") Q:IBDOUT
"RTN","IBDFUTL4",132,0)
 Q
"RTN","IBDFUTL4",133,0)
 ;
"RTN","IBDFUTL4",134,0)
SC1(IBDICA) ;Select a clinic
"RTN","IBDFUTL4",135,0)
SC2 K DIC S DIC("A")=IBDICA,DIC="^SC(",DIC(0)="AEMQZN",DIC("S")="I $P(^(0),U,3)=""C""" D ^DIC I $D(DTOUT)!$D(DUOUT)!(X="") S IBDOUT=1 Q ""
"RTN","IBDFUTL4",136,0)
 S IBDINP("CLINIC",$P(Y,U,2))=$P(Y,U)
"RTN","IBDFUTL4",137,0)
 Q $P(Y,U,2)
"RTN","IBDFUTL4",138,0)
 ;
"RTN","IBDFUTL4",139,0)
RC ;Clinic range selector
"RTN","IBDFUTL4",140,0)
 S IBDCL1=$$SC1("Select beginning CLINIC: ") Q:'$L(IBDCL1)
"RTN","IBDFUTL4",141,0)
RCE S IBDCL2=$$SC1("Select ending CLINIC: ") I '$L(IBDCL2) W !,"Ending clinic must be specified!" K IBDINP("CLINIC") Q
"RTN","IBDFUTL4",142,0)
 I IBDCL1]IBDCL2 K IBDINP("CLINIC",IBDCL2) W !!,$C(7),"Ending clinic must collate after beginning clinic!" G RCE
"RTN","IBDFUTL4",143,0)
 S IBDINP("CLINIC","RC",1)=IBDCL1,IBDINP("CLINIC","RC",2)=IBDCL2
"RTN","IBDFUTL4",144,0)
 Q
"RTN","IBDFUTL4",145,0)
 ;
"RTN","IBDFUTL4",146,0)
SG ;Clinic GROUP selector
"RTN","IBDFUTL4",147,0)
 N IBDI
"RTN","IBDFUTL4",148,0)
 S IBDOUT=0 F IBDI=1:1:30 S IBDCL1=$$SG1("Select Clinic GROUP: ") Q:IBDOUT
"RTN","IBDFUTL4",149,0)
 Q
"RTN","IBDFUTL4",150,0)
 ;
"RTN","IBDFUTL4",151,0)
SG1(IBDICA) ;Select a clinic GROUP
"RTN","IBDFUTL4",152,0)
SG2 ;
"RTN","IBDFUTL4",153,0)
 K DIC S DIC("A")=IBDICA,DIC="^IBD(357.99,",DIC(0)="AEMQZ" D ^DIC I $D(DTOUT)!$D(DUOUT)!(X="") S IBDOUT=1 Q ""
"RTN","IBDFUTL4",154,0)
 S IBDINP("GROUP",$P(Y,U,2))=$P(Y,U)
"RTN","IBDFUTL4",155,0)
 Q $P(Y,U,2)
"RTN","IBDFUTL4",156,0)
 ;
"RTN","IBDFUTL4",157,0)
RG ;Clinic range selector
"RTN","IBDFUTL4",158,0)
 S IBDCL1=$$SG1("Select beginning Clinic GROUP: ") Q:'$L(IBDCL1)
"RTN","IBDFUTL4",159,0)
RGE S IBDCL2=$$SG1("Select ending Clinic GROUP: ") I '$L(IBDCL2) W !,"Ending clinic group must be specified!" K IBDINP("GROUP") Q
"RTN","IBDFUTL4",160,0)
 I IBDCL1]IBDCL2 K IBDINP("GROUP",IBDCL2) W !!,$C(7),"Ending clinic group must collate after beginning clinic!" G RGE
"RTN","IBDFUTL4",161,0)
 S IBDINP("GROUP","RG",1)=IBDCL1,IBDINP("GROUP","RG",2)=IBDCL2
"RTN","IBDFUTL4",162,0)
 Q
"RTN","IBDFUTL4",163,0)
 ;
"RTN","IBDFUTL4",164,0)
SF ;Encounter Form selector
"RTN","IBDFUTL4",165,0)
 N IBDI
"RTN","IBDFUTL4",166,0)
 S IBDOUT=0 F IBDI=1:1:30 S IBDCL1=$$SF1("Select Encounter Form: ") Q:IBDOUT
"RTN","IBDFUTL4",167,0)
 Q
"RTN","IBDFUTL4",168,0)
 ;
"RTN","IBDFUTL4",169,0)
SF1(IBDICA) ;Select an Encounter Form
"RTN","IBDFUTL4",170,0)
SF2 K DIC S DIC("A")=IBDICA,DIC="^IBE(357,",DIC(0)="AEMQZ" D ^DIC I $D(DTOUT)!$D(DUOUT)!(X="") S IBDOUT=1 Q ""
"RTN","IBDFUTL4",171,0)
 S IBDINP("FORM",$P(Y,U,2))=$P(Y,U)
"RTN","IBDFUTL4",172,0)
 Q $P(Y,U,2)
"RTN","IBDFUTL4",173,0)
 ;
"RTN","IBDFUTL4",174,0)
RF ;Clinic range selector
"RTN","IBDFUTL4",175,0)
 S IBDCL1=$$SF1("Select beginning Encounter Form: ") Q:'$L(IBDCL1)
"RTN","IBDFUTL4",176,0)
RFE S IBDCL2=$$SF1("Select ending Encounter Form: ") I '$L(IBDCL2) W !,"Ending Encounter Form must be specified!" K IBDINP("FORM") Q
"RTN","IBDFUTL4",177,0)
 I IBDCL1]IBDCL2 K IBDINP("FORM",IBDCL2) W !!,$C(7),"Ending Encounter Form must collate after Encounter Form!" G RFE
"RTN","IBDFUTL4",178,0)
 S IBDINP("FORM","RF",1)=IBDCL1,IBDINP("FORM","RF",2)=IBDCL2
"RTN","IBDFUTL4",179,0)
 Q
"RTN","IBDFUTL4",180,0)
 ;
"RTN","IBDFUTL4",181,0)
HDR ; -- header code
"RTN","IBDFUTL4",182,0)
 S VALMHDR(1)="     ENCOUNTER FORM         ICD9/   LAST EDITED    ICD10  CLINIC"
"RTN","IBDFUTL4",183,0)
 S VALMHDR(2)="                            ICD10  ICD9     ICD10  STATUS       "
"RTN","IBDFUTL4",184,0)
 Q
"RTN","IBDFUTL4",185,0)
 ;
"RTN","IBDFUTL4",186,0)
INIT ;
"RTN","IBDFUTL4",187,0)
 D FULL^VALM1 D KILL^VALM10()
"RTN","IBDFUTL4",188,0)
 K ^TMP("IBDFUTL4",$J),^TMP("IBDFUTL4X",$J)
"RTN","IBDFUTL4",189,0)
 D SORT
"RTN","IBDFUTL4",190,0)
 I '$D(^TMP("IBDFUTL4",$J)) S ^TMP("IBDFUTL4",$J,1,0)=" ",^TMP("IBDFUTL4",$J,2,0)="No records found"
"RTN","IBDFUTL4",191,0)
 Q
"RTN","IBDFUTL4",192,0)
 ;
"RTN","IBDFUTL4",193,0)
HELP ;
"RTN","IBDFUTL4",194,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBDFUTL4",195,0)
 Q
"RTN","IBDFUTL4",196,0)
 ;
"RTN","IBDFUTL4",197,0)
CL ;
"RTN","IBDFUTL4",198,0)
 D FULL^VALM1 S IBDRE=1
"RTN","IBDFUTL4",199,0)
 D PROMPTS
"RTN","IBDFUTL4",200,0)
 Q
"RTN","IBDFUTL4",201,0)
 ;
"RTN","IBDFUTL4",202,0)
JP ;
"RTN","IBDFUTL4",203,0)
 N IBDI,IBDX,IBDY,IBDARR,IBDSB,IBDQUIT,IBDL,IBDRES,IBDN
"RTN","IBDFUTL4",204,0)
 D FULL^VALM1
"RTN","IBDFUTL4",205,0)
JMP ;
"RTN","IBDFUTL4",206,0)
 S DIC=$S($E(IBDINP("SORTBY"),2)="F":"^IBE(357,",$E(IBDINP("SORTBY"),2)="G":"^IBD(357.99,",1:"^SC(")
"RTN","IBDFUTL4",207,0)
 S DIC(0)="AEMN",DIC("A")="Select the "_$S($E(IBDINP("SORTBY"),2)="F":"Encounter Form",$E(IBDINP("SORTBY"),2)="G":"Clinic Group",1:"Clinic")_" that you wish to move to: "
"RTN","IBDFUTL4",208,0)
 S:$E(IBDINP("SORTBY"),2)="C" DIC("S")="I $P(^SC(+Y,0),U,3)=""C"""
"RTN","IBDFUTL4",209,0)
 D ^DIC K DIC
"RTN","IBDFUTL4",210,0)
 I X["^" S VALMBG=1,VALMBCK="R" Q
"RTN","IBDFUTL4",211,0)
 I Y<0 G JP
"RTN","IBDFUTL4",212,0)
 S IBDX=$S($E(IBDINP("SORTBY"),2)="F":$P(^IBE(357,+Y,0),"^",1),$E(IBDINP("SORTBY"),2)="G":$P(^IBD(357.99,+Y,0),"^",1),1:$P(^SC(+Y,0),"^",1))
"RTN","IBDFUTL4",213,0)
 I '$D(IBDX) W !!,"There is no data listed for this Clinic Group" G JMP
"RTN","IBDFUTL4",214,0)
 I $E(IBDINP("SORTBY"),2)="C" S IBDSB="CLNA"
"RTN","IBDFUTL4",215,0)
 I $E(IBDINP("SORTBY"),2)="F" S IBDSB="FMNA"
"RTN","IBDFUTL4",216,0)
 I $E(IBDINP("SORTBY"),2)="G" S IBDSB="GPNA"
"RTN","IBDFUTL4",217,0)
 S IBDY=$O(^TMP("IBDFUTL4X",$J,"X",IBDSB,IBDX),-1),(IBDI,IBDQUIT,IBDL)=0,IBDRES="" K IBDARR
"RTN","IBDFUTL4",218,0)
 F  S IBDY=$O(^TMP("IBDFUTL4X",$J,"X",IBDSB,IBDY)) Q:IBDY=""!($E(IBDY,1,$L(IBDX))'=IBDX)  D
"RTN","IBDFUTL4",219,0)
 . S IBDI=IBDI+1,IBDARR(IBDI)=IBDY
"RTN","IBDFUTL4",220,0)
 I IBDI=1 S IBDRES=IBDARR(1) G JP5
"RTN","IBDFUTL4",221,0)
 S IBDN="",IBDI=0 F  S IBDN=$O(IBDARR(IBDN)) Q:IBDN=""  S IBDI=IBDI+1 W !,IBDN,". ",IBDARR(IBDN) D  Q:IBDQUIT!(IBDRES'="")
"RTN","IBDFUTL4",222,0)
 . I '(IBDI#5) S IBDL=IBDI D JPDIS S:$D(DTOUT)!($D(DUOUT))!(Y=U) IBDQUIT=1 Q:IBDQUIT  D  Q:IBDRES'=""
"RTN","IBDFUTL4",223,0)
 . . S Y=+Y I Y>0 S IBDRES=IBDARR(Y)
"RTN","IBDFUTL4",224,0)
 I IBDQUIT S VALMBCK="R" Q
"RTN","IBDFUTL4",225,0)
 I IBDRES="",IBDI>IBDL D JPDIS Q:$D(DTOUT)!($D(DUOUT))!(Y=U)  S Y=+Y I Y>0 S IBDRES=IBDARR(Y)
"RTN","IBDFUTL4",226,0)
 I IBDRES="" S VALMBCK="R" Q
"RTN","IBDFUTL4",227,0)
JP5 ;
"RTN","IBDFUTL4",228,0)
 S IBDROW=$O(^TMP("IBDFUTL4X",$J,"X",IBDSB,IBDRES,""))
"RTN","IBDFUTL4",229,0)
 S VALMBG=IBDROW,VALMBCK="R"
"RTN","IBDFUTL4",230,0)
 ;
"RTN","IBDFUTL4",231,0)
 Q
"RTN","IBDFUTL4",232,0)
 ;
"RTN","IBDFUTL4",233,0)
JPDIS ;
"RTN","IBDFUTL4",234,0)
 W !,"Press <RETURN> to see more, '^' to exit this list, OR"
"RTN","IBDFUTL4",235,0)
 S DIR(0)="NO^1:"_IBDI,DIR("A")="Choose 1-"_IBDI D ^DIR
"RTN","IBDFUTL4",236,0)
 Q
"RTN","IBDFUTL4",237,0)
 ;
"RTN","IBDFUTL4",238,0)
IS ;UPDATE ICD10 STATUS FIELD
"RTN","IBDFUTL4",239,0)
 N IBDI,IBDX,IBDY,IBDFM,IBDN,IBDQUIT,IBDPR,IBDROW,IBDSTA
"RTN","IBDFUTL4",240,0)
 I '$D(^TMP("IBDFUTL4X",$J,"D",0)) S VALMBCK="R" Q
"RTN","IBDFUTL4",241,0)
 K DIR S DIR(0)="L^1:"_^TMP("IBDFUTL4X",$J,"D",0) D ^DIR
"RTN","IBDFUTL4",242,0)
 I $D(DTOUT)!($D(DUOUT))!(Y=U) S VALMBCK="R" Q
"RTN","IBDFUTL4",243,0)
 S IBDY=Y,(IBDQUIT,IBDROW)=0 F IBDI=1:1:$L(Y,",") S IBDLI=$P(IBDY,",",IBDI) I IBDLI?1.N S:IBDROW=0 IBDROW=IBDLI D  Q:IBDQUIT
"RTN","IBDFUTL4",244,0)
 . S IBDFM=$G(^TMP("IBDFUTL4X",$J,"X","FM",IBDLI)) Q:IBDFM'?1.N
"RTN","IBDFUTL4",245,0)
 . S IBDX=$G(^IBE(357,IBDFM,0)) Q:IBDX=""  W !,"Encounter Form: ",$P(IBDX,U,1)
"RTN","IBDFUTL4",246,0)
 . S IBDSTA="",IBDN=$O(^IBE(357,IBDFM,3,"B",30,"")) I IBDN?1.N S IBDX=^IBE(357,IBDFM,3,IBDN,0),IBDSTA=$P(IBDX,U,2)
"RTN","IBDFUTL4",247,0)
 . K DIR D
"RTN","IBDFUTL4",248,0)
 . . I IBDSTA="" S IBDPR="Update Status to [C]omplete or [R]eview",DIR(0)="S^C:Complete;R:Review",DIR("B")="Complete"
"RTN","IBDFUTL4",249,0)
 . . I IBDSTA="C" S IBDPR="Update Status to [I]ncomplete or [R]eview",DIR(0)="S^I:Incomplete;R:Review",DIR("B")="Incomplete"
"RTN","IBDFUTL4",250,0)
 . . I IBDSTA="R" S IBDPR="Update Status to [C]omplete or [I]ncomplete",DIR(0)="S^C:Complete;I:Incomplete",DIR("B")="Complete"
"RTN","IBDFUTL4",251,0)
 . S DIR("A")=IBDPR D ^DIR K DIR I ($D(DTOUT)!$D(DUOUT)) S IBDQUIT=1 Q
"RTN","IBDFUTL4",252,0)
 . S IBDPR="Are you changing the Status from "_$S(IBDSTA="":"Incomplete",IBDSTA="C":"Complete",1:"Review")_" to "_$S(Y="I":"Incomplete",Y="C":"Complete",1:"Review")
"RTN","IBDFUTL4",253,0)
 . S IBDX=$$YESNO^IBDUTIL1(IBDPR,"Y",0,300)
"RTN","IBDFUTL4",254,0)
 . I IBDX=1 S IBDX=$$YESNO^IBDUTIL1("Are you sure you want to change the status","NO",0,300)
"RTN","IBDFUTL4",255,0)
 . I IBDX=1 S:Y="I" Y="@" S IBDX=$$CSUPD357^IBDUTICD(IBDFM,30,Y,$$NOW^XLFDT(),DUZ)
"RTN","IBDFUTL4",256,0)
 D SORT
"RTN","IBDFUTL4",257,0)
 S VALMBCK="R"
"RTN","IBDFUTL4",258,0)
 Q
"RTN","IBDFUTL4",259,0)
 ;
"RTN","IBDFUTL4",260,0)
EXP ;
"RTN","IBDFUTL4",261,0)
 Q
"RTN","IBDFUTL5")
0^22^B45996359^n/a
"RTN","IBDFUTL5",1,0)
IBDFUTL5 ;ALB/MKN/CFS - CONTINUED FROM IBDUTL4 ;12/30/2011
"RTN","IBDFUTL5",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;Dec 30, 2011;Build 80
"RTN","IBDFUTL5",3,0)
 ;
"RTN","IBDFUTL5",4,0)
 ;
"RTN","IBDFUTL5",5,0)
CHECKCL(IBDCLIN,IBDTAINS,IBDSORT,ARY,IBDGPNA) ;Check by Clinic
"RTN","IBDFUTL5",6,0)
 ; -- input IBDCLIN = IEN of Clinic file
"RTN","IBDFUTL5",7,0)
 ;         IBDTAINS = 9 or 10 or B or N or A
"RTN","IBDFUTL5",8,0)
 ; -- output is an array in ARY as follows:
"RTN","IBDFUTL5",9,0)
 ;          @ARY(0) = Number of rows in @ARY
"RTN","IBDFUTL5",10,0)
 ;          @ARY(#) = P1 := Encounter Form name
"RTN","IBDFUTL5",11,0)
 ;                    P2 := Contains ICD-9/ICD-10/BOTH
"RTN","IBDFUTL5",12,0)
 ;                    P3 := Date Last Edited ICD-9
"RTN","IBDFUTL5",13,0)
 ;                    P4 := Date Last Edited ICD-10
"RTN","IBDFUTL5",14,0)
 ;                    P5 := ICD-10 Update Status
"RTN","IBDFUTL5",15,0)
 ;                    P6 := Clinic Name
"RTN","IBDFUTL5",16,0)
 ;
"RTN","IBDFUTL5",17,0)
 N IBDI9,IBDI10,IBDX,IBDI,IBDQUIT,IBDFORMS,IBDFORM,IBDBLK,IBDY9,IBDY10,IBDLIST,IBDRES,IBDADD,IBDCLNA,IBDDATA,IBDBLKX
"RTN","IBDFUTL5",18,0)
 N IBDFMNA,IBDFMX,IBDOK,IBDSUB,IBDDET,IBDSELX,IBDBLKNA,IBDLI,IBDSC
"RTN","IBDFUTL5",19,0)
 ;
"RTN","IBDFUTL5",20,0)
 I $G(IBDCLIN)="" G CHECKCLQ
"RTN","IBDFUTL5",21,0)
 I $G(^SC(IBDCLIN,0))="" G CHECKCLQ
"RTN","IBDFUTL5",22,0)
 S IBDCLNA=$P(^SC(IBDCLIN,0),U,1) S:IBDCLNA="" IBDCLNA="Unknown"
"RTN","IBDFUTL5",23,0)
 S IBDFORMS=$G(^SD(409.95,+$O(^SD(409.95,"B",IBDCLIN,0)),0))
"RTN","IBDFUTL5",24,0)
 G:IBDFORMS="" CHECKCLQ
"RTN","IBDFUTL5",25,0)
 F IBDI=2,3,4,6,8,9 S IBDFORM=$P(IBDFORMS,U,IBDI) I IBDFORM?1.N D CHECKFRM
"RTN","IBDFUTL5",26,0)
 ;
"RTN","IBDFUTL5",27,0)
CHECKCLQ ;
"RTN","IBDFUTL5",28,0)
 Q
"RTN","IBDFUTL5",29,0)
 ;
"RTN","IBDFUTL5",30,0)
CHECKFM(IBDEFORM,IBDTAINS,IBDSORT,ARY,IBDGPNA) ;Check by Form
"RTN","IBDFUTL5",31,0)
 ; -- input IBDEFORM = IEN of Encounter Form file
"RTN","IBDFUTL5",32,0)
 ;         IBDTAINS = 9 or 10 or B or N or A
"RTN","IBDFUTL5",33,0)
 ; -- output is an array in ARY as follows:
"RTN","IBDFUTL5",34,0)
 ;          @ARY(0) = Number of rows in @ARY
"RTN","IBDFUTL5",35,0)
 ;          @ARY(#) = P1 := Encounter Form name
"RTN","IBDFUTL5",36,0)
 ;                    P2 := Contains ICD-9/ICD-10/BOTH
"RTN","IBDFUTL5",37,0)
 ;                    P3 := Date Last Edited ICD-9
"RTN","IBDFUTL5",38,0)
 ;                    P4 := Date Last Edited ICD-10
"RTN","IBDFUTL5",39,0)
 ;                    P5 := ICD-10 Update Status
"RTN","IBDFUTL5",40,0)
 ;                    P6 := Clinic Name
"RTN","IBDFUTL5",41,0)
 ;          
"RTN","IBDFUTL5",42,0)
 N IBDI9,IBDI10,IBDX,IBDI,IBDQUIT,IBDFORMS,IBDFORM,IBDBLK,IBDY9,IBDY10,IBDLIST,IBDRES,IBDADD,IBDCLNA,IBDDATA,IBDBLKX
"RTN","IBDFUTL5",43,0)
 N IBDFMNA,IBDFMX,IBDFMSTA,IBDOK,IBDSUB,IBD9ED,IBD10ED,IBDLTSEL,IBDDET,IBDSELX,IBDBLKNA,IBDLI,IBDSC,IBDSYS,IBDCL,IBDYES
"RTN","IBDFUTL5",44,0)
 ;
"RTN","IBDFUTL5",45,0)
 S IBDX=$G(^IBE(357,IBDEFORM,0)) I IBDX="" G CHECKFMQ
"RTN","IBDFUTL5",46,0)
 S IBDFMNA=$P(^IBE(357,IBDEFORM,0),U,1) G:IBDFMNA="" CHECKFMQ
"RTN","IBDFUTL5",47,0)
 I (+$P(IBDX,U,7))&(($P(IBDX,U)="TOOL KIT")!($P(IBDX,U)="WORKCOPY")) G CHECKFMQ ; Ignore TOOLKIT and WORCOPY forms per SMES 2/29/12
"RTN","IBDFUTL5",48,0)
 S IBDFORM=IBDEFORM,IBDCL=$O(^TMP("IBDFUTL4",$J,"X","FMARR",IBDFMNA,""))
"RTN","IBDFUTL5",49,0)
 I IBDCL="" S IBDCLNA="",IBDCLIN=""
"RTN","IBDFUTL5",50,0)
 I IBDCL?1.N S IBDX=$G(^SC(IBDCL,0)) G:IBDX="" CHECKFMQ S IBDCLNA=$P(IBDX,U,1)
"RTN","IBDFUTL5",51,0)
 D CHECKFRM
"RTN","IBDFUTL5",52,0)
 ;
"RTN","IBDFUTL5",53,0)
CHECKFMQ ;
"RTN","IBDFUTL5",54,0)
 Q
"RTN","IBDFUTL5",55,0)
 ;
"RTN","IBDFUTL5",56,0)
CHECKFRM ;Check this Form - go through each Block attached to Form, check ICD-9/ICD-10 relevance against user input selection\
"RTN","IBDFUTL5",57,0)
 ;
"RTN","IBDFUTL5",58,0)
 N IBDBLHD,IBDPIEN,IBDX,IBDY,IBDADD,IBDWH,IBDQUIT,IBDRES,IBD9ED,IBD10ED,IBDFMSTA,IBD9HIS,IBD10HIS,IBDLTSEL,IBDSYS,IBDCODE
"RTN","IBDFUTL5",59,0)
 S (IBDY9,IBDY10,IBDBLK,IBDADD,IBDYES,IBDQUIT)=0,(IBD9HIS,IBD10HIS,IBD9ED,IBD10ED,IBDFMSTA)=""
"RTN","IBDFUTL5",60,0)
 S IBDX=$O(^IBE(357,IBDFORM,3,"B",1,"")) I IBDX?1.N S IBD9HIS=^IBE(357,IBDFORM,3,IBDX,0),IBDFMSTA=$P(IBD9HIS,U,2)
"RTN","IBDFUTL5",61,0)
 S IBDX=$O(^IBE(357,IBDFORM,3,"B",30,"")) I IBDX?1.N S IBD10HIS=^IBE(357,IBDFORM,3,IBDX,0),IBDFMSTA=$P(IBD10HIS,U,2)
"RTN","IBDFUTL5",62,0)
 I IBDINP("STATUS")'="A" D
"RTN","IBDFUTL5",63,0)
 . I IBDX="",IBDINP("STATUS")'="I" S IBDQUIT=1 Q
"RTN","IBDFUTL5",64,0)
 . I IBDX'="" D
"RTN","IBDFUTL5",65,0)
 . . I IBDINP("STATUS")="I",IBDFMSTA'="" S IBDQUIT=1 Q
"RTN","IBDFUTL5",66,0)
 . . I IBDINP("STATUS")="C",IBDFMSTA'="C" S IBDQUIT=1 Q
"RTN","IBDFUTL5",67,0)
 . . I IBDINP("STATUS")="R",IBDFMSTA'="R" S IBDQUIT=1 Q
"RTN","IBDFUTL5",68,0)
 Q:IBDQUIT
"RTN","IBDFUTL5",69,0)
 ;
"RTN","IBDFUTL5",70,0)
 S IBD9ED=$P(IBD9HIS,U,3),IBD10ED=$P(IBD10HIS,U,3) ;Seed the Edit Dates for checking at Selection level below
"RTN","IBDFUTL5",71,0)
 ;
"RTN","IBDFUTL5",72,0)
 K IBDDET ;This will contain Detail lines if Detail option selected
"RTN","IBDFUTL5",73,0)
 S IBDFMX=$G(^IBE(357,IBDFORM,0)),IBDFMNA=$P(IBDFMX,U,1) S:IBDFMNA="" IBDFMNA="Unknown"
"RTN","IBDFUTL5",74,0)
 I IBDINP("SORTBY")="SF" Q:'$D(IBDINP("FORM",IBDFMNA))
"RTN","IBDFUTL5",75,0)
 I IBDINP("SORTBY")="RF" Q:IBDINP("FORM","RF",1)]IBDFMNA!(IBDFMNA]IBDINP("FORM","RF",2))
"RTN","IBDFUTL5",76,0)
 ;This loop goes through all blocks and lists and sets the flags where ICD-9 or ICD-10 are present
"RTN","IBDFUTL5",77,0)
 F  S IBDBLK=$O(^IBE(357.1,"C",IBDFORM,IBDBLK)) Q:'IBDBLK  S IBDLIST=0 D
"RTN","IBDFUTL5",78,0)
 . S IBDX=^IBE(357.1,IBDBLK,0),IBDBLKNA=$P(IBDX,U,1),IBDBLHD=""
"RTN","IBDFUTL5",79,0)
 . F  S IBDLIST=$O(^IBE(357.2,"C",IBDBLK,IBDLIST)) Q:'IBDLIST  D
"RTN","IBDFUTL5",80,0)
 . . S IBDX=^IBE(357.2,IBDLIST,0),IBDPIEN=$P(IBDX,U,11) ;Package Interface IEN
"RTN","IBDFUTL5",81,0)
 . . S IBDX=^IBE(357.6,IBDPIEN,0),IBDSYS=$P(IBDX,U,22) Q:IBDSYS'=1&(IBDSYS'=30)  ;Coding System field
"RTN","IBDFUTL5",82,0)
 . . I IBDSYS?1.N S IBDX=$$SINFO^ICDEX(IBDSYS) S:$P(IBDX,U,2)="ICD-9-CM" IBDY9=1 S:$P(IBDX,U,2)="ICD-10-CM" IBDY10=1
"RTN","IBDFUTL5",83,0)
 . . ;Now compare with the user selection - ICD9/ICD10/Both/Neither
"RTN","IBDFUTL5",84,0)
 . . I IBDTAINS=9,IBDY9=0 Q
"RTN","IBDFUTL5",85,0)
 . . I IBDTAINS=10,IBDY10=0 Q
"RTN","IBDFUTL5",86,0)
 . . I IBDTAINS="B",IBDY9=0!(IBDY10=0) Q
"RTN","IBDFUTL5",87,0)
 . . I IBDTAINS="N",IBDY9=1!(IBDY10=1) Q
"RTN","IBDFUTL5",88,0)
 . . ;Now find ICD-9/10 Status and history dates at the Selection level and update Latest Edit date where required
"RTN","IBDFUTL5",89,0)
 . . K ^TMP("IBDFUTL4X",$J,"X","BLCODE")
"RTN","IBDFUTL5",90,0)
 . . S IBDLTSEL="" F  S IBDLTSEL=$O(^IBE(357.3,"C",IBDLIST,IBDLTSEL)) Q:IBDLTSEL=""  D
"RTN","IBDFUTL5",91,0)
 . . . S IBDX=$G(^IBE(357.3,IBDLTSEL,4))
"RTN","IBDFUTL5",92,0)
 . . . I $P(IBDX,U,1)>IBD9ED S IBD9ED=$P(IBDX,U,1)
"RTN","IBDFUTL5",93,0)
 . . . I $P(IBDX,U,2)>IBD10ED S IBD10ED=$P(IBDX,U,1)
"RTN","IBDFUTL5",94,0)
 . . . I IBDINP("SD")="D" D
"RTN","IBDFUTL5",95,0)
 . . . . S:IBDBLHD="" IBDX=$O(IBDDET(""),-1)+1,IBDDET(IBDX)="BL^"_IBDBLKNA,IBDBLHD=IBDBLKNA
"RTN","IBDFUTL5",96,0)
 . . . . S IBDX=^IBE(357.3,IBDLTSEL,0),IBDDATA=$$ICDDATA^ICDXCODE(IBDSYS,$P(IBDX,U,1)),IBDCODE=$P(IBDX,U,1)
"RTN","IBDFUTL5",97,0)
 . . . . I '$D(^TMP("IBDFUTL4X",$J,"X","BLCODE",IBDCODE)) S IBDSELX="LT^"_IBDLTSEL_U_IBDCODE_U_$P(IBDDATA,U,4),IBDX=$O(IBDDET(""),-1)+1,IBDDET(IBDX)=IBDSELX,^TMP("IBDFUTL4X",$J,"X","BLCODE",IBDCODE)=""
"RTN","IBDFUTL5",98,0)
 ;We are now back at form level (357) and we know this form needs to be included in the list if user selection agrees
"RTN","IBDFUTL5",99,0)
 S IBDYES=1 D
"RTN","IBDFUTL5",100,0)
 .I IBDTAINS=9&((IBDY9=0)!(IBDY10=1)) S IBDYES=0 Q
"RTN","IBDFUTL5",101,0)
 .I IBDTAINS=10&((IBDY9=1)!(IBDY10=0)) S IBDYES=0 Q
"RTN","IBDFUTL5",102,0)
 .I IBDTAINS="B"&((IBDY9=0)!(IBDY10=0)) S IBDYES=0 Q
"RTN","IBDFUTL5",103,0)
 .I IBDTAINS="N"&((IBDY9=1)!(IBDY10=1)) S IBDYES=0 Q
"RTN","IBDFUTL5",104,0)
 Q:IBDYES=0
"RTN","IBDFUTL5",105,0)
 S IBDRES=""
"RTN","IBDFUTL5",106,0)
 I IBDY9=1 S IBDRES="ICD9"
"RTN","IBDFUTL5",107,0)
 I IBDY10=1 D
"RTN","IBDFUTL5",108,0)
 . I IBDY9=1 S IBDRES="BOTH"
"RTN","IBDFUTL5",109,0)
 . E  S IBDRES="ICD10"
"RTN","IBDFUTL5",110,0)
 I $E(IBDSORT,2)="C" S IBDSUB=IBDCLNA D SET
"RTN","IBDFUTL5",111,0)
 I $E(IBDSORT,2)="F" S IBDSUB=IBDFMNA D SET
"RTN","IBDFUTL5",112,0)
 I $E(IBDSORT,2)="G" S IBDSUB=IBDGPNA D SET
"RTN","IBDFUTL5",113,0)
 Q
"RTN","IBDFUTL5",114,0)
 ;
"RTN","IBDFUTL5",115,0)
SET ;
"RTN","IBDFUTL5",116,0)
 N IBDY,IBD9DA,IBD10DA
"RTN","IBDFUTL5",117,0)
 S (IBD9DA,IBD10DA)=""
"RTN","IBDFUTL5",118,0)
 I IBD9ED>0 S IBD9DA=$E(IBD9ED,4,5)_"/"_$E(IBD9ED,6,7)_"/"_$E(IBD9ED,2,3)
"RTN","IBDFUTL5",119,0)
 I IBD10ED>0 S IBD10DA=$E(IBD10ED,4,5)_"/"_$E(IBD10ED,6,7)_"/"_$E(IBD10ED,2,3)
"RTN","IBDFUTL5",120,0)
 S IBDY=$S(IBDFMSTA="":"",IBDFMSTA="C":"COMP",IBDFMSTA="I":"",IBDFMSTA="R":"REV",1:"")
"RTN","IBDFUTL5",121,0)
 I $E(IBDSORT,2)'="G" D
"RTN","IBDFUTL5",122,0)
 . S @ARY@("S",IBDSUB,IBDFMNA)=IBDFMNA_U_IBDRES_U_IBD9DA_U_IBD10DA_U_IBDY_U_IBDCLNA_U_IBDCLIN_U_IBDFORM_U_$G(IBDGPNA)
"RTN","IBDFUTL5",123,0)
 . I IBDINP("SD")="D" M @ARY@("S",IBDSUB,IBDFMNA,"D")=IBDDET
"RTN","IBDFUTL5",124,0)
 I $E(IBDSORT,2)="G" D
"RTN","IBDFUTL5",125,0)
 . I IBDGPNA="" S IBDGPNA="Unknown"
"RTN","IBDFUTL5",126,0)
 . S @ARY@("S",IBDGPNA,IBDCLNA,IBDFMNA)=IBDFMNA_U_IBDRES_U_IBD9DA_U_IBD10DA_U_IBDY_U_IBDCLNA_U_IBDCLIN_U_IBDFORM_U_IBDGPNA
"RTN","IBDFUTL5",127,0)
 . I IBDINP("SD")="D" M @ARY@("S",IBDGPNA,IBDCLNA,IBDFMNA,"D")=IBDDET
"RTN","IBDFUTL5",128,0)
 Q
"RTN","IBDFUTL5",129,0)
 ;
"RTN","IBDFUTL5",130,0)
GRHEADNG(IBDGPNA,IBDCT) ;List each clinic under its grouped heading.
"RTN","IBDFUTL5",131,0)
 N IBDX
"RTN","IBDFUTL5",132,0)
 S IBDX="",IBDX=$$SETSTR^VALM1(" ",IBDX,1,3)
"RTN","IBDFUTL5",133,0)
 S ^TMP("IBDFUTL4",$J,IBDCT,0)=IBDX
"RTN","IBDFUTL5",134,0)
 S ^TMP("IBDFUTL4X",$J,"X","GPNA",IBDGPNA,IBDCT)=""
"RTN","IBDFUTL5",135,0)
 S IBDCT=IBDCT+1,VALMCNT=VALMCNT+1
"RTN","IBDFUTL5",136,0)
 S IBDVAL1=$L(IBDGPNA) S IBDVAL1=(80-IBDVAL1)/2 S IBDVAL1=IBDVAL1\1 S IBDX="",IBDX=$$SETSTR^VALM1(" ",IBDX,1,IBDVAL1)
"RTN","IBDFUTL5",137,0)
 S IBDX=$$SETSTR^VALM1(IBDGPNA,IBDX,IBDVAL1,25)
"RTN","IBDFUTL5",138,0)
 S ^TMP("IBDFUTL4",$J,IBDCT,0)=IBDX
"RTN","IBDFUTL5",139,0)
 S ^TMP("IBDFUTL4X",$J,"X","GPNA",IBDGPNA,IBDCT)=""
"RTN","IBDFUTL5",140,0)
 S IBDCT=IBDCT+1,VALMCNT=VALMCNT+1
"RTN","IBDFUTL5",141,0)
 D CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM,0)
"RTN","IBDFUTL5",142,0)
 S IBDX="",IBDX=$$SETSTR^VALM1(" ",IBDX,1,3)
"RTN","IBDFUTL5",143,0)
 S ^TMP("IBDFUTL4",$J,IBDCT,0)=IBDX
"RTN","IBDFUTL5",144,0)
 S ^TMP("IBDFUTL4X",$J,"X","GPNA",IBDGPNA,IBDCT)=""
"RTN","IBDFUTL5",145,0)
 S IBDCT=IBDCT+1,VALMCNT=VALMCNT+1
"RTN","IBDFUTL5",146,0)
 Q
"RTN","IBDFUTL5",147,0)
 ;
"RTN","IBDLXDG")
0^38^B102250951^n/a
"RTN","IBDLXDG",1,0)
IBDLXDG ;ALB/CFS - ICD-10 DIAGNOSIS CODE LOOK UP ;03/27/2012
"RTN","IBDLXDG",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;APR 24, 1997;Build 80
"RTN","IBDLXDG",3,0)
 ;
"RTN","IBDLXDG",4,0)
 ;
"RTN","IBDLXDG",5,0)
 ;ICRs 
"RTN","IBDLXDG",6,0)
 ; Reference to $$DIAGSRCH^LEX10CS supported by ICR #5681
"RTN","IBDLXDG",7,0)
 ; Reference to $$IMPDATE^LEXU supported by ICR #5679
"RTN","IBDLXDG",8,0)
 ; Reference to $$FREQ^LEXU supported by ICR #5679 
"RTN","IBDLXDG",9,0)
 ; Reference to $$MAX^LEXU supported by ICR #5679
"RTN","IBDLXDG",10,0)
 ; Reference to $$ICDDX^ICDEX supported by ICR #5747
"RTN","IBDLXDG",11,0)
 ; Reference to ^DISV supported by ICR #510
"RTN","IBDLXDG",12,0)
 ;
"RTN","IBDLXDG",13,0)
 ;//---------
"RTN","IBDLXDG",14,0)
 ;The entry point for ICD-10 diagnosis search functionality
"RTN","IBDLXDG",15,0)
 ;can be called from applications directly
"RTN","IBDLXDG",16,0)
 ;input parameters :
"RTN","IBDLXDG",17,0)
 ; IBDDT - date of interest  (Fileman format)
"RTN","IBDLXDG",18,0)
 ; IBDDFLT - default values for the search string (can be a code by default)
"RTN","IBDLXDG",19,0)
 ; IBDPARAM - parameters/string constants (see SETPARAM for details)
"RTN","IBDLXDG",20,0)
 ;returns ICD-10 code selected by the user:
"RTN","IBDLXDG",21,0)
 ;  IEN file #80;ICD code value;IEN file # 757.01^description
"RTN","IBDLXDG",22,0)
 ; results
"RTN","IBDLXDG",23,0)
 ; or -1 if invalid data(press enter)
"RTN","IBDLXDG",24,0)
 ; "" if not found 
"RTN","IBDLXDG",25,0)
 ; or -2 if time out
"RTN","IBDLXDG",26,0)
 ; or -3 if ^ or ^^
"RTN","IBDLXDG",27,0)
 ; or -4 in ICD10 if the user answered NO for the question "Do you wish to continue(Y/N)?"
"RTN","IBDLXDG",28,0)
 ; or -5 if no changes to the default value
"RTN","IBDLXDG",29,0)
DIAG10(IBDDT,IBDDFLT,IBDPARAM) ;
"RTN","IBDLXDG",30,0)
 N IBDROOT,IBDRETV,IBDSPACE S IBDROOT="^ICD9("
"RTN","IBDLXDG",31,0)
 N IBDINP
"RTN","IBDLXDG",32,0)
 F  D  Q:IBDINP<0!($L($P(IBDINP,U,2))>1)!(IBDSPACE=1)
"RTN","IBDLXDG",33,0)
 . ;user enters ANY text like "diabetes" or code or space
"RTN","IBDLXDG",34,0)
 . S IBDSPACE=0
"RTN","IBDLXDG",35,0)
 . S IBDINP=$$SRCHSTR(IBDPARAM("SEARCH_PROMPT"),IBDPARAM("HELP ?"),IBDPARAM("HELP ??"),IBDDFLT)
"RTN","IBDLXDG",36,0)
 . ;process the space  bar recall 
"RTN","IBDLXDG",37,0)
 . I $P(IBDINP,U,2)=" ",$G(IBDROOT)]"" D  S:IBDRETV>0 IBDSPACE=1 Q
"RTN","IBDLXDG",38,0)
 . . ;if space bar was entered then get the last code entered  by the user from ^DISV
"RTN","IBDLXDG",39,0)
 . . S IBDRETV=$$SPACEBAR(IBDDT,IBDROOT,30)
"RTN","IBDLXDG",40,0)
 . . I IBDRETV<0 W "??" Q
"RTN","IBDLXDG",41,0)
 . . W $P(IBDRETV,";",2)
"RTN","IBDLXDG",42,0)
 . I IBDINP'<0 I $L($P(IBDINP,U,2))'>1 W !!,IBDPARAM("ENTER MORE") W:$L(IBDPARAM("ENTER MORE2"))>0 !,IBDPARAM("ENTER MORE2") W ! ;user should enter at least 2 characters
"RTN","IBDLXDG",43,0)
 ;if space bar was entered then get the last code entered  by the user from ^DISV and quit
"RTN","IBDLXDG",44,0)
 I IBDSPACE=1,IBDRETV>0 Q IBDRETV
"RTN","IBDLXDG",45,0)
 I IBDINP<0 Q +IBDINP
"RTN","IBDLXDG",46,0)
 ;
"RTN","IBDLXDG",47,0)
 ;send the search test to Lexicon and let the user pick one
"RTN","IBDLXDG",48,0)
 S IBDRETV=$$LEXICD10($P(IBDINP,U,2),IBDDT,.IBDPARAM)
"RTN","IBDLXDG",49,0)
 ;
"RTN","IBDLXDG",50,0)
 ;if spacebar recall is supported, if code is selected, if it is valid then 
"RTN","IBDLXDG",51,0)
 ;save selection in ^DISV
"RTN","IBDLXDG",52,0)
 I $G(IBDROOT)]"",IBDRETV>0 D SAVSPACE(IBDROOT,+IBDRETV)
"RTN","IBDLXDG",53,0)
 ;
"RTN","IBDLXDG",54,0)
 Q IBDRETV
"RTN","IBDLXDG",55,0)
 ;
"RTN","IBDLXDG",56,0)
 ;
"RTN","IBDLXDG",57,0)
 ;retrieves the last code selected by the user - space bar recall logic here
"RTN","IBDLXDG",58,0)
 ; if nothing then returns -1
"RTN","IBDLXDG",59,0)
 ;IBDDT - date of service
"RTN","IBDLXDG",60,0)
 ;IBDROOT - global root is used in ^DISV (ex. "^ICD9("   ) 
"RTN","IBDLXDG",61,0)
 ;IBDCODSY - coding system for which the user is trying to enter an ICD code. It is used to check 
"RTN","IBDLXDG",62,0)
 ; if the code stored in ^DISV matches the coding system the user is using at the prompt.
"RTN","IBDLXDG",63,0)
 ; 30 - for ICD-10 diagnoses
"RTN","IBDLXDG",64,0)
 ; 1 - for ICD-9  diagnoses
"RTN","IBDLXDG",65,0)
SPACEBAR(IBDDT,IBDROOT,IBDCODSY) ;
"RTN","IBDLXDG",66,0)
 N IBDCODE,IBDRTV,IBDX
"RTN","IBDLXDG",67,0)
 I IBDROOT="^ICD9(" D
"RTN","IBDLXDG",68,0)
 . S IBDCODE=$G(^DISV(DUZ,IBDROOT)) ;needs ICR #510 subscription
"RTN","IBDLXDG",69,0)
 . I +IBDCODE=0 S IBDRTV=-1 Q
"RTN","IBDLXDG",70,0)
 . ;check if the code in ^DISV for the ICD-10 coding system (30 in the 3rd parameter) 
"RTN","IBDLXDG",71,0)
 . ;we don't need to check this for ICD-9 becuase
"RTN","IBDLXDG",72,0)
 . S IBDX=$$ICDDX^ICDEX(IBDCODE,IBDDT,IBDCODSY,"I")
"RTN","IBDLXDG",73,0)
 . S IBDRTV=$P(IBDX,U,1)_";"_$P(IBDX,U,2)_";"_$P(IBDX,U,4)
"RTN","IBDLXDG",74,0)
 ;if IBDROOT is different then implement your own logic here
"RTN","IBDLXDG",75,0)
 Q IBDRTV
"RTN","IBDLXDG",76,0)
 ;
"RTN","IBDLXDG",77,0)
 ;store the selected code for the space bar recall feature
"RTN","IBDLXDG",78,0)
 ;IBDROOT - global root is used in ^DISV (ex. "^ICD9("   ) 
"RTN","IBDLXDG",79,0)
 ;IBDRETV - IEN of the top level entry wiht ICD code field
"RTN","IBDLXDG",80,0)
SAVSPACE(IBDROOT,IBDRETV) ;
"RTN","IBDLXDG",81,0)
 I +$G(DUZ)=0 Q
"RTN","IBDLXDG",82,0)
 I IBDROOT="^ICD9(" D RECALL^DILFD(80,(+IBDRETV)_",",+DUZ) Q  ;need subscription  to ICR #510 
"RTN","IBDLXDG",83,0)
 ;if IBDROOT is different then implement your own logic here
"RTN","IBDLXDG",84,0)
 Q
"RTN","IBDLXDG",85,0)
 ;
"RTN","IBDLXDG",86,0)
 ;
"RTN","IBDLXDG",87,0)
 ;--------------
"RTN","IBDLXDG",88,0)
 ;The entry point for ICD-10 diagnosis search functionality
"RTN","IBDLXDG",89,0)
 ;can be called from applications directly
"RTN","IBDLXDG",90,0)
 ; Supported ICR 5681 ($$DIAGSRCH^LEX10CS)
"RTN","IBDLXDG",91,0)
 ;input parameters :
"RTN","IBDLXDG",92,0)
 ; IBDTXT - search string
"RTN","IBDLXDG",93,0)
 ; IBDDATE - date of interest
"RTN","IBDLXDG",94,0)
 ; IBDPAR - array with text messages and other string constants
"RTN","IBDLXDG",95,0)
 ;returns ICD-10 code selected by the user:
"RTN","IBDLXDG",96,0)
 ;  IEN file #80;ICD code value^description
"RTN","IBDLXDG",97,0)
 ; or 
"RTN","IBDLXDG",98,0)
 ; "" if not found 
"RTN","IBDLXDG",99,0)
 ; -1 if exit : ^ or ^^
"RTN","IBDLXDG",100,0)
 ; -2 if continue searching
"RTN","IBDLXDG",101,0)
 ;
"RTN","IBDLXDG",102,0)
LEXICD10(IBDTXT,IBDDATE,IBDPAR) ; ICD-10 Search
"RTN","IBDLXDG",103,0)
 N IBDLVTXT
"RTN","IBDLXDG",104,0)
 ;parameters check
"RTN","IBDLXDG",105,0)
 S IBDDATE=+$G(IBDDATE)
"RTN","IBDLXDG",106,0)
 I IBDDATE'?7N Q -1
"RTN","IBDLXDG",107,0)
 S IBDTXT=$G(IBDTXT)
"RTN","IBDLXDG",108,0)
 Q:'$L(IBDTXT) -1
"RTN","IBDLXDG",109,0)
 N IBDNUMB
"RTN","IBDLXDG",110,0)
 S IBDNUMB=$$FREQ^LEXU(IBDTXT)
"RTN","IBDLXDG",111,0)
 I IBDNUMB>$$MAX^LEXU(30) D  I $$QUESTION(2,IBDPARAM("WISH CONTINUE"),IBDPARAM("YES OR NO"))'=1 Q -4
"RTN","IBDLXDG",112,0)
 . W !
"RTN","IBDLXDG",113,0)
 . D FORMWRIT(IBDPAR("EXCEEDS MESSAGE1")_IBDTXT_IBDPAR("EXCEEDS MESSAGE2")_IBDNUMB_IBDPAR("EXCEEDS MESSAGE3")_IBDTXT_""".",0)
"RTN","IBDLXDG",114,0)
 . D FORMWRIT("",2)
"RTN","IBDLXDG",115,0)
 . W !
"RTN","IBDLXDG",116,0)
 ;new and set variables
"RTN","IBDLXDG",117,0)
 N DIROUT,DUOUT,DTOUT,IBDEXIT,IBDICDNT
"RTN","IBDLXDG",118,0)
 N IBDRETV,IBDXX,IBDLEVEL
"RTN","IBDLXDG",119,0)
 S IBDRETV=""
"RTN","IBDLXDG",120,0)
 S IBDEXIT=0
"RTN","IBDLXDG",121,0)
 S IBDLEVEL=1,IBDLVTXT(IBDLEVEL)=IBDTXT ;level 1 stores the original search string
"RTN","IBDLXDG",122,0)
 ; main loop
"RTN","IBDLXDG",123,0)
 F  Q:IBDEXIT>0  D
"RTN","IBDLXDG",124,0)
 .K IBDICDY
"RTN","IBDLXDG",125,0)
 .;get the search string from the current level and call LEX API
"RTN","IBDLXDG",126,0)
 .;don't pass the date - this will initiate the unversioned lookup for AICS to get all codes - active and inactive
"RTN","IBDLXDG",127,0)
 .S IBDICDY=$$DIAGSRCH^LEX10CS(IBDLVTXT(IBDLEVEL),.IBDICDY,,30)
"RTN","IBDLXDG",128,0)
 .;cleanup the output array:
"RTN","IBDLXDG",129,0)
 .; - leave codes active on the date
"RTN","IBDLXDG",130,0)
 .; - leave codes inactive on the date if their last status is ACTIVE 
"RTN","IBDLXDG",131,0)
 .; - remove codes inactive on the date if their last status is INACTIVE
"RTN","IBDLXDG",132,0)
 .I IBDICDY>0 S IBDICDY=$$REMINARR^IBDUTICD(.IBDICDY,IBDDATE)
"RTN","IBDLXDG",133,0)
 .S:$O(IBDICDY(" "),-1)>0 IBDICDY=+IBDICDY
"RTN","IBDLXDG",134,0)
 .; Nothing found
"RTN","IBDLXDG",135,0)
 .I +IBDICDY'>0 S IBDEXIT=1 S IBDXX=-1 Q
"RTN","IBDLXDG",136,0)
 .; display the list of items and ask the user to select the item from the list
"RTN","IBDLXDG",137,0)
 .S IBDXX=$$SEL^IBDLXDG2(.IBDICDY,4)
"RTN","IBDLXDG",138,0)
 .; if ^ was entered 
"RTN","IBDLXDG",139,0)
 .;   if this is on the top level then quit 
"RTN","IBDLXDG",140,0)
 .I IBDXX=-2,IBDLEVEL'>1 S IBDRETV=-1 S IBDEXIT=1 Q
"RTN","IBDLXDG",141,0)
 .;   if lower level then go one level up
"RTN","IBDLXDG",142,0)
 .I IBDXX=-2,IBDLEVEL>1 S:IBDLEVEL>1 IBDLEVEL=IBDLEVEL-1 Q
"RTN","IBDLXDG",143,0)
 .; If timeout, or not selected, or ^^ then quit
"RTN","IBDLXDG",144,0)
 .I IBDXX=-1 S IBDRETV=-1 S IBDEXIT=1 Q
"RTN","IBDLXDG",145,0)
 .; if Code Found and Selected by the user save selection in IBDRETV and quit
"RTN","IBDLXDG",146,0)
 .I $P(IBDXX,";")'="99:CAT" S IBDRETV=IBDXX S IBDEXIT=1 Q
"RTN","IBDLXDG",147,0)
 .; If Category Found and Selected by the user:  
"RTN","IBDLXDG",148,0)
 .;  go to the next inner level
"RTN","IBDLXDG",149,0)
 .;  change level number 
"RTN","IBDLXDG",150,0)
 .S IBDLEVEL=IBDLEVEL+1
"RTN","IBDLXDG",151,0)
 .;  set the new level with the new search string
"RTN","IBDLXDG",152,0)
 .;  and repeat 
"RTN","IBDLXDG",153,0)
 .S IBDLVTXT(IBDLEVEL)=$P($P($G(IBDXX),"^"),";",2)
"RTN","IBDLXDG",154,0)
 Q IBDRETV
"RTN","IBDLXDG",155,0)
 ;
"RTN","IBDLXDG",156,0)
 ;---------
"RTN","IBDLXDG",157,0)
 ; Clean up environment and quit
"RTN","IBDLXDG",158,0)
EXIT ;
"RTN","IBDLXDG",159,0)
 K %,DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBDLXDG",160,0)
 Q
"RTN","IBDLXDG",161,0)
 ;
"RTN","IBDLXDG",162,0)
 ;-----------
"RTN","IBDLXDG",163,0)
 ; Look-up help for ?
"RTN","IBDLXDG",164,0)
INPHLP ;
"RTN","IBDLXDG",165,0)
 I $G(X)["???" D INPHLP3 Q
"RTN","IBDLXDG",166,0)
 I $G(X)["??" D INPHLP2 Q
"RTN","IBDLXDG",167,0)
 W !," Enter code or ""text"" for more information." Q
"RTN","IBDLXDG",168,0)
 Q
"RTN","IBDLXDG",169,0)
 ;-----------
"RTN","IBDLXDG",170,0)
 ; Look-up help for ??
"RTN","IBDLXDG",171,0)
INPHLP2 ;
"RTN","IBDLXDG",172,0)
 W !," Enter a ""free text"" term or part of a term such as ""femur fracture""."
"RTN","IBDLXDG",173,0)
 W !!," or "
"RTN","IBDLXDG",174,0)
 W !!," Enter a ""classification code"" (ICD/CPT etc) to find the single term"
"RTN","IBDLXDG",175,0)
 W !," associated with the code."
"RTN","IBDLXDG",176,0)
 W !!," or "
"RTN","IBDLXDG",177,0)
 W !!," Enter a ""partial code"". Include the decimal when a search criterion"
"RTN","IBDLXDG",178,0)
 W !," includes 3 characters or more for code searches."
"RTN","IBDLXDG",179,0)
 Q
"RTN","IBDLXDG",180,0)
 ;--------
"RTN","IBDLXDG",181,0)
 ; Look-up help for ???
"RTN","IBDLXDG",182,0)
INPHLP3 ;
"RTN","IBDLXDG",183,0)
 W !," Number of Code Matches"
"RTN","IBDLXDG",184,0)
 W !," ----------------------"
"RTN","IBDLXDG",185,0)
 W !!," The ICD-10 Diagnosis Code search will show the user the number of matches"
"RTN","IBDLXDG",186,0)
 W !," found, indicate if additional characters in ICD code exist, and the number"
"RTN","IBDLXDG",187,0)
 W !," of codes within the category or subcategory that are available for selection."
"RTN","IBDLXDG",188,0)
 W !," For example:"
"RTN","IBDLXDG",189,0)
 W !!," 19 matches found"
"RTN","IBDLXDG",190,0)
 W !!," M91. - Juvenile osteochondrosis of hip and pelvis (19)"
"RTN","IBDLXDG",191,0)
 W !!," This indicates that 19 unique matches or matching groups have been found"
"RTN","IBDLXDG",192,0)
 W !," and will be displayed."
"RTN","IBDLXDG",193,0)
 W !!," M91. - the ""-"" indicates that there are additional characters that specify"
"RTN","IBDLXDG",194,0)
 W !," unique ICD-10 codes available."
"RTN","IBDLXDG",195,0)
 W !!," (19) Indicates that there are 19 additional ICD-10 codes in the M91 ""family"""
"RTN","IBDLXDG",196,0)
 W !," that are possible selections."
"RTN","IBDLXDG",197,0)
 Q
"RTN","IBDLXDG",198,0)
 ;--------
"RTN","IBDLXDG",199,0)
 ;prompt the user for a date of interest 
"RTN","IBDLXDG",200,0)
 ;input parameters :
"RTN","IBDLXDG",201,0)
 ; IBDPRMT - prompt
"RTN","IBDLXDG",202,0)
 ;returns YYYMMDD
"RTN","IBDLXDG",203,0)
 ; or -1 if invalid date
"RTN","IBDLXDG",204,0)
 ; or -2 if time out
"RTN","IBDLXDG",205,0)
 ; or -3 if ^
"RTN","IBDLXDG",206,0)
ASKDATE(IBDPRMT) ;
"RTN","IBDLXDG",207,0)
 N %DT,DIROUT,DUOUT,DTOUT
"RTN","IBDLXDG",208,0)
 S %DT="AEX",%DT("A")=$G(IBDPRMT,"Enter a date: ")
"RTN","IBDLXDG",209,0)
 D ^%DT
"RTN","IBDLXDG",210,0)
 Q:Y<0 -1
"RTN","IBDLXDG",211,0)
 Q:$D(DTOUT) -2
"RTN","IBDLXDG",212,0)
 Q:X="^" -3
"RTN","IBDLXDG",213,0)
 Q (+Y)
"RTN","IBDLXDG",214,0)
 ;--------
"RTN","IBDLXDG",215,0)
 ;ask YES/NO questions
"RTN","IBDLXDG",216,0)
 ;input parameters :
"RTN","IBDLXDG",217,0)
 ; IBDDFLT- 0/null- not default, 1- yes, 2 -no
"RTN","IBDLXDG",218,0)
 ; IBDPROM - prompt string
"RTN","IBDLXDG",219,0)
 ;returns 
"RTN","IBDLXDG",220,0)
 ; 2 - no,
"RTN","IBDLXDG",221,0)
 ; 1 - yes,
"RTN","IBDLXDG",222,0)
 ; 0 - no answer (time out)
"RTN","IBDLXDG",223,0)
 ; -3 - ^ or ^^
"RTN","IBDLXDG",224,0)
QUESTION(IBDDFLT,IBDPROM,IBDHELP) ;
"RTN","IBDLXDG",225,0)
 N DIR
"RTN","IBDLXDG",226,0)
 S %=$G(IBDDFLT,2)
"RTN","IBDLXDG",227,0)
 S DIR(0)="Y",DIR("A")=IBDPROM,DIR("B")=$S(%=1:"Yes",%=2:"No",1:"")
"RTN","IBDLXDG",228,0)
 S:$L($G(IBDHELP)) DIR("?")=IBDHELP
"RTN","IBDLXDG",229,0)
 D ^DIR
"RTN","IBDLXDG",230,0)
 Q:Y["^" -3
"RTN","IBDLXDG",231,0)
 Q:Y=1 1
"RTN","IBDLXDG",232,0)
 Q:Y=0 2
"RTN","IBDLXDG",233,0)
 Q 0
"RTN","IBDLXDG",234,0)
 ;
"RTN","IBDLXDG",235,0)
 ;------------
"RTN","IBDLXDG",236,0)
 ;get search string
"RTN","IBDLXDG",237,0)
 ;input parameters :
"RTN","IBDLXDG",238,0)
 ; IBDPRMT prompt text
"RTN","IBDLXDG",239,0)
 ; IBDHLP1 "?" help text
"RTN","IBDLXDG",240,0)
 ; IBDHLP2 "??" help text
"RTN","IBDLXDG",241,0)
 ; IBDDFLT- default response
"RTN","IBDLXDG",242,0)
 ;returns piece1 ^ piece 2
"RTN","IBDLXDG",243,0)
 ; piece1:
"RTN","IBDLXDG",244,0)
 ; 0 if normal input
"RTN","IBDLXDG",245,0)
 ; or -1 if invalid data
"RTN","IBDLXDG",246,0)
 ; or -2 if time out
"RTN","IBDLXDG",247,0)
 ; or -3 if ^
"RTN","IBDLXDG",248,0)
 ; or -5 if user accepts default value then no need to validate it
"RTN","IBDLXDG",249,0)
 ; or -6 if user enters "@"
"RTN","IBDLXDG",250,0)
 ; piece2: string entered by the user
"RTN","IBDLXDG",251,0)
SRCHSTR(IBDPRMT,IBDHLP1,IBDHLP2,IBDDFLT) ;
"RTN","IBDLXDG",252,0)
 N DIR
"RTN","IBDLXDG",253,0)
 S DIR("A")=IBDPRMT
"RTN","IBDLXDG",254,0)
 S:($G(IBDHLP1)]"") DIR("?")=IBDHLP1
"RTN","IBDLXDG",255,0)
 S:($G(IBDHLP2)]"") DIR("??")=IBDHLP2
"RTN","IBDLXDG",256,0)
 I $L($G(IBDDFLT)) S DIR("B")=IBDDFLT
"RTN","IBDLXDG",257,0)
 S DIR(0)="FAOR^0:245"
"RTN","IBDLXDG",258,0)
 D ^DIR
"RTN","IBDLXDG",259,0)
 Q:$D(DTOUT) -2
"RTN","IBDLXDG",260,0)
 Q:$D(DUOUT) -3
"RTN","IBDLXDG",261,0)
 ;Q:X="@" -6 ;quit if user entered "@" and handle deletion case in your application  - not used in AICS
"RTN","IBDLXDG",262,0)
 Q:Y["^" -3
"RTN","IBDLXDG",263,0)
 Q:Y="" -1
"RTN","IBDLXDG",264,0)
 ;Q:(($L($G(IBDDFLT)))&(Y=IBDDFLT)) -5 ;if user accepts default value then no need to validate it - not used in AICS
"RTN","IBDLXDG",265,0)
 Q 0_U_Y
"RTN","IBDLXDG",266,0)
 ;
"RTN","IBDLXDG",267,0)
 ;----------
"RTN","IBDLXDG",268,0)
 ;Determines and returns ACTIVE coding system for DIAGNOSES based on date of interest 
"RTN","IBDLXDG",269,0)
 ;input parameters :
"RTN","IBDLXDG",270,0)
 ; IBDICDD - date of interest
"RTN","IBDLXDG",271,0)
 ; if date of interest is null, today's date will be assumed
"RTN","IBDLXDG",272,0)
 ;returns coding system  
"RTN","IBDLXDG",273,0)
 ; as a pointer to the ICD CODING SYSTEM file #80.4 (supported ICR 5780) 
"RTN","IBDLXDG",274,0)
 ; 30  if ICD-10-CM is active system
"RTN","IBDLXDG",275,0)
 ; 1   if ICD-9-CM is active system
"RTN","IBDLXDG",276,0)
ICDSYSDG(IBDICDD) ; 
"RTN","IBDLXDG",277,0)
 N IBDIMPDT
"RTN","IBDLXDG",278,0)
 S IBDICDD=$S(IBDICDD<0!($L(+IBDICDD)'=7):DT,1:+$G(IBDICDD))
"RTN","IBDLXDG",279,0)
 S IBDIMPDT=$$IMPDATE^LEXU("10D")
"RTN","IBDLXDG",280,0)
 Q $S(IBDICDD'<IBDIMPDT:30,1:1)
"RTN","IBDLXDG",281,0)
 ;
"RTN","IBDLXDG",282,0)
 ;set parameters
"RTN","IBDLXDG",283,0)
 ;edit these hardcoded strings that are used for prompts, messages and so on to adjust them to your application's needs
"RTN","IBDLXDG",284,0)
 ;input parameters 
"RTN","IBDLXDG",285,0)
 ; IBDPAR - local array to sets and store string constants for your messages and prompts 
"RTN","IBDLXDG",286,0)
SETPARAM(IBDPAR) ;
"RTN","IBDLXDG",287,0)
 S IBDPAR("ASKDATE")="Date of interest? "
"RTN","IBDLXDG",288,0)
 S IBDPAR("SEARCH_PROMPT")="Enter Diagnosis, a Code or a Code Fragment: "
"RTN","IBDLXDG",289,0)
 S IBDPAR("HELP ?")="^D INPHLP^IBDLXDG"
"RTN","IBDLXDG",290,0)
 S IBDPAR("HELP ??")="^D INPHLP2^IBDLXDG"
"RTN","IBDLXDG",291,0)
 S IBDPAR("NO DATA FOUND")=" No records found matching the value entered, revise search or enter ""?"" for"
"RTN","IBDLXDG",292,0)
 S IBDPAR("NO DATA FOUND 2")=" help."
"RTN","IBDLXDG",293,0)
 S IBDPAR("EXITING")="  Exiting"
"RTN","IBDLXDG",294,0)
 S IBDPAR("TRY LATER")="  Try again later"
"RTN","IBDLXDG",295,0)
 S IBDPAR("NO DATA SELECTED")="  No data selected"
"RTN","IBDLXDG",296,0)
 S IBDPAR("TRY ANOTHER")="Try another"
"RTN","IBDLXDG",297,0)
 S IBDPAR("WISH CONTINUE")="Do you wish to continue (Y/N)"
"RTN","IBDLXDG",298,0)
 S IBDPAR("EXCEEDS MESSAGE1")="Searching for """
"RTN","IBDLXDG",299,0)
 S IBDPAR("EXCEEDS MESSAGE2")=""" requires inspecting "
"RTN","IBDLXDG",300,0)
 S IBDPAR("EXCEEDS MESSAGE3")=" records to determine if they match the search criteria.  This could take quite some time.  Suggest refining the search by further specifying """
"RTN","IBDLXDG",301,0)
 S IBDPAR("ENTER MORE")=" Please enter at least the first two characters of the ICD-10 code or code"
"RTN","IBDLXDG",302,0)
 S IBDPAR("ENTER MORE2")=" description to start the search."
"RTN","IBDLXDG",303,0)
 S IBDPAR("YES OR NO")="Answer 'Y' for 'Yes' or 'N' for 'No'"
"RTN","IBDLXDG",304,0)
 Q
"RTN","IBDLXDG",305,0)
 ;
"RTN","IBDLXDG",306,0)
 ;
"RTN","IBDLXDG",307,0)
 ;a wrapper for ^DIWP
"RTN","IBDLXDG",308,0)
 ;accumulates a text and then writes it to the device
"RTN","IBDLXDG",309,0)
 ;input parameters :
"RTN","IBDLXDG",310,0)
 ; X - text
"RTN","IBDLXDG",311,0)
 ; IBDMODE:
"RTN","IBDLXDG",312,0)
 ;  0 - start
"RTN","IBDLXDG",313,0)
 ;  1 - accumulate 
"RTN","IBDLXDG",314,0)
 ;  2 - write
"RTN","IBDLXDG",315,0)
 ;example:
"RTN","IBDLXDG",316,0)
 ;D FORMWRIT^IBDLXDG("this API is a wrapper for ^DIWP, it accumulates a text and then writes it to the device, you can use it in your application code",0)
"RTN","IBDLXDG",317,0)
 ;D FORMWRIT^IBDLXDG("some more text ",1)
"RTN","IBDLXDG",318,0)
 ;D FORMWRIT^IBDLXDG("",2)
"RTN","IBDLXDG",319,0)
FORMWRIT(X,IBDMODE) ;
"RTN","IBDLXDG",320,0)
 N IBDLI1,DIWL,DIWR
"RTN","IBDLXDG",321,0)
 ;if "start" mode
"RTN","IBDLXDG",322,0)
 I IBDMODE=0 K ^UTILITY($J,"W")
"RTN","IBDLXDG",323,0)
 S DIWL=1,DIWR=79
"RTN","IBDLXDG",324,0)
 I $L(X)>0 D ^DIWP
"RTN","IBDLXDG",325,0)
 ;if "write" mode
"RTN","IBDLXDG",326,0)
 I IBDMODE=2 D
"RTN","IBDLXDG",327,0)
 . S IBDLI1=0 F  S IBDLI1=$O(^UTILITY($J,"W",1,IBDLI1)) Q:+IBDLI1=0  W !,$G(^UTILITY($J,"W",1,IBDLI1,0))
"RTN","IBDLXDG",328,0)
 . K ^UTILITY($J,"W")
"RTN","IBDLXDG",329,0)
 Q
"RTN","IBDLXDG",330,0)
 ;
"RTN","IBDLXDG",331,0)
 ;---------------
"RTN","IBDLXDG",332,0)
 ;Initialize variables if you need , your application most likely already has this
"RTN","IBDLXDG",333,0)
INITVARS ;
"RTN","IBDLXDG",334,0)
 D HOME^%ZIS
"RTN","IBDLXDG",335,0)
 S:$G(DT)=0 DT=$$DT^XLFDT
"RTN","IBDLXDG",336,0)
 Q
"RTN","IBDLXDG",337,0)
 ;
"RTN","IBDLXDG2")
0^39^B41791567^n/a
"RTN","IBDLXDG2",1,0)
IBDLXDG2 ;ALB/CFS - Select ICD DIAGNOSIS FROM LEXICON UTILITY LIST ;03/27/2012
"RTN","IBDLXDG2",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;Mar 27, 2012;Build 80
"RTN","IBDLXDG2",3,0)
 ;
"RTN","IBDLXDG2",4,0)
 ; Input   
"RTN","IBDLXDG2",5,0)
 ; 
"RTN","IBDLXDG2",6,0)
 ;     X     Length of list to display (default 5)
"RTN","IBDLXDG2",7,0)
 ;    .IBDSRL   Local array passed by reference
"RTN","IBDLXDG2",8,0)
 ;               
"RTN","IBDLXDG2",9,0)
 ;             IBDSRL()   Input Array from ICDSRCH^LEX10CS
"RTN","IBDLXDG2",10,0)
 ;               
"RTN","IBDLXDG2",11,0)
 ;             IBDSRL(0)=# found ^ Pruning Indicator
"RTN","IBDLXDG2",12,0)
 ;             IBDSRL(1,0)=Code ^ Code IEN ^ date
"RTN","IBDLXDG2",13,0)
 ;             IBDSRL(1,"IDL")=ICD-9/10 Description, Long
"RTN","IBDLXDG2",14,0)
 ;             IBDSRL(1,"IDL",1)=ICD-9/10 IEN ^ date
"RTN","IBDLXDG2",15,0)
 ;             IBDSRL(1,"IDS")=ICD-9/10 Description, Short
"RTN","IBDLXDG2",16,0)
 ;             IBDSRL(1,"IDS",1)=ICD-9/10 IEN ^ date
"RTN","IBDLXDG2",17,0)
 ;             IBDSRL(1,"LEX")=Lexicon Description
"RTN","IBDLXDG2",18,0)
 ;             IBDSRL(1,"LEX",1)=Expression IEN ^ date
"RTN","IBDLXDG2",19,0)
 ;             IBDSRL(1,"SYN",1)=Synonym #1
"RTN","IBDLXDG2",20,0)
 ;             IBDSRL(1,"SYN",m)=Synonym #m
"RTN","IBDLXDG2",21,0)
 ;             ...
"RTN","IBDLXDG2",22,0)
 ;               
"RTN","IBDLXDG2",23,0)
 ; Output
"RTN","IBDLXDG2",24,0)
 ;               
"RTN","IBDLXDG2",25,0)
 ;    $$SEL  Two Piece "^" delimited string same as
"RTN","IBDLXDG2",26,0)
 ;           Fileman's Y output variable
"RTN","IBDLXDG2",27,0)
 ;               
"RTN","IBDLXDG2",28,0)
 ;             1  Lexicon IEN
"RTN","IBDLXDG2",29,0)
 ;             2  Lexicon Term
"RTN","IBDLXDG2",30,0)
 ;               
"RTN","IBDLXDG2",31,0)
 ;    IBDSRL    Local array passed by reference
"RTN","IBDLXDG2",32,0)
 ;               
"RTN","IBDLXDG2",33,0)
 ;             IBDSRL(0)=Code ^ Code IEN ^ date
"RTN","IBDLXDG2",34,0)
 ;             IBDSRL("IDL")=ICD-9/10 Description, Long
"RTN","IBDLXDG2",35,0)
 ;             IBDSRL("IDL",1)=ICD-9/10 IEN ^ date
"RTN","IBDLXDG2",36,0)
 ;             IBDSRL("IDS")=ICD-9/10 Description, Short
"RTN","IBDLXDG2",37,0)
 ;             IBDSRL("IDS",1)=ICD-9/10 IEN ^ date
"RTN","IBDLXDG2",38,0)
 ;             IBDSRL("LEX")=Lexicon Description
"RTN","IBDLXDG2",39,0)
 ;             IBDSRL("LEX",1)=Expression IEN ^ date
"RTN","IBDLXDG2",40,0)
 ;               
"RTN","IBDLXDG2",41,0)
 ;    or ^ on error 
"RTN","IBDLXDG2",42,0)
 ;    or -1 for non-selection
"RTN","IBDLXDG2",43,0)
 ;    or -2 if "^" was entered
"RTN","IBDLXDG2",44,0)
 ;               
"RTN","IBDLXDG2",45,0)
SEL(IBDSRL,X) ; Select from List
"RTN","IBDLXDG2",46,0)
 N IBDGOUP S IBDGOUP=0
"RTN","IBDLXDG2",47,0)
 S X=+($G(X))
"RTN","IBDLXDG2",48,0)
 S:X'>0 X=5
"RTN","IBDLXDG2",49,0)
 S X=$$ASK(.IBDSRL,X)
"RTN","IBDLXDG2",50,0)
 I IBDGOUP=1 Q -2
"RTN","IBDLXDG2",51,0)
 Q X
"RTN","IBDLXDG2",52,0)
 ;
"RTN","IBDLXDG2",53,0)
ASK(IBDSRL,X) ; Ask for Selection
"RTN","IBDLXDG2",54,0)
 N DTOUT,DUOUT,DIROUT
"RTN","IBDLXDG2",55,0)
 N IBDLIT,IBDLL,IBDLTOT
"RTN","IBDLXDG2",56,0)
 S IBDLL=+($G(X))
"RTN","IBDLXDG2",57,0)
 S:IBDLL'>0 IBDLL=5
"RTN","IBDLXDG2",58,0)
 S IBDLIT=0,IBDLTOT=$O(IBDSRL(" "),-1)
"RTN","IBDLXDG2",59,0)
 Q:+IBDLTOT'>0 "^"
"RTN","IBDLXDG2",60,0)
 K X
"RTN","IBDLXDG2",61,0)
 S:+IBDLTOT=1 X=$$ONE(IBDLL,.IBDSRL)
"RTN","IBDLXDG2",62,0)
 S:+IBDLTOT>1 X=$$MUL(.IBDSRL,IBDLL)
"RTN","IBDLXDG2",63,0)
 S:'$D(DTOUT)&('$D(DUOUT))&('$D(DIROUT))&(+($G(X))'>0) X=-1
"RTN","IBDLXDG2",64,0)
 Q X
"RTN","IBDLXDG2",65,0)
ONE(X,IBDSRL) ; One Entry Found
"RTN","IBDLXDG2",66,0)
 Q:+($G(IBDLIT))>0 "^^"
"RTN","IBDLXDG2",67,0)
 N DIR,IBDLC,IBDLEX,IBDLFI,IBDLIT,IBDLSO,IBDLNC,IBDCNT1
"RTN","IBDLXDG2",68,0)
 N IBDLSP,IBDLTX,IBDLC,Y
"RTN","IBDLXDG2",69,0)
 S IBDLFI=$O(IBDSRL(0)) Q:+IBDLFI'>0 "^"  S IBDLSP=$J(" ",11)
"RTN","IBDLXDG2",70,0)
 S IBDLSO=$P(IBDSRL(1,0),"^",1),IBDLNC=$P(IBDSRL(1,0),"^",3)
"RTN","IBDLXDG2",71,0)
 S:+IBDLNC>0 IBDLNC=" ("_IBDLNC_")" S IBDLEX=$G(IBDSRL(1,"MENU"))
"RTN","IBDLXDG2",72,0)
 S IBDLC=$S($D(IBDSRL(1,"CAT")):"-",1:"")
"RTN","IBDLXDG2",73,0)
 S IBDLTX(1)=IBDLSO_IBDLC_$J(" ",(9-$L(IBDLSO)))_" "_IBDLEX_IBDLNC
"RTN","IBDLXDG2",74,0)
 D PR(.IBDLTX,64) S DIR("A",1)=" One match found",DIR("A",2)=" "
"RTN","IBDLXDG2",75,0)
 S DIR("A",3)=" "_$G(IBDLTX(1))
"RTN","IBDLXDG2",76,0)
 S IBDLC=3
"RTN","IBDLXDG2",77,0)
 F IBDCNT1=2:1 Q:$G(IBDLTX(IBDCNT1))=""  S IBDLC=IBDLC+1,DIR("A",IBDLC)=IBDLSP_$G(IBDLTX(IBDCNT1))
"RTN","IBDLXDG2",78,0)
 S IBDLC=IBDLC+1,DIR("A",IBDLC)=" ",IBDLC=IBDLC+1
"RTN","IBDLXDG2",79,0)
 S DIR("A")=" OK? (Yes/No) ",DIR("B")="Yes",DIR(0)="YAO" W !
"RTN","IBDLXDG2",80,0)
 D ^DIR Q:'$D(DTOUT)&('$D(DUOUT))&('$D(DIROUT))&(+($G(Y))'>0) -1
"RTN","IBDLXDG2",81,0)
 S:X["^^"!($D(DTOUT)) IBDLIT=1
"RTN","IBDLXDG2",82,0)
 I X["^^"!(+($G(IBDLIT))>0) K IBDSRL Q "^^"
"RTN","IBDLXDG2",83,0)
 S X=$S(+Y>0:$$X(1,.IBDSRL),1:-1)
"RTN","IBDLXDG2",84,0)
 Q X
"RTN","IBDLXDG2",85,0)
MUL(IBDSRL,Y) ; Multiple Entries Found
"RTN","IBDLXDG2",86,0)
 Q:+($G(IBDLIT))>0 "^^"
"RTN","IBDLXDG2",87,0)
 N IBDSRLE,IBDLL,IBDLMAX,IBDLSS,IBDLX,X
"RTN","IBDLXDG2",88,0)
 S (IBDLMAX,IBDLSS,IBDLIT)=0,IBDLL=+($G(Y)),U="^" S:+($G(IBDLL))'>0 IBDLL=5
"RTN","IBDLXDG2",89,0)
 S IBDLX=$O(IBDSRL(" "),-1),IBDLSS=0
"RTN","IBDLXDG2",90,0)
 G:+IBDLX=0 MULQ W ! W:+IBDLX>1 !," ",IBDLX," matches found"
"RTN","IBDLXDG2",91,0)
 F IBDSRLE=1:1:IBDLX Q:((IBDLSS>0)&(IBDLSS<(IBDSRLE+1)))  Q:IBDLIT  D  Q:IBDLIT
"RTN","IBDLXDG2",92,0)
 . W:IBDSRLE#IBDLL=1 ! D MULW
"RTN","IBDLXDG2",93,0)
 . S IBDLMAX=IBDSRLE W:IBDSRLE#IBDLL=0 !
"RTN","IBDLXDG2",94,0)
 . S:IBDSRLE#IBDLL=0 IBDLSS=$$MULS(IBDLMAX,IBDSRLE,.IBDSRL) S:IBDLSS["^" IBDLIT=1
"RTN","IBDLXDG2",95,0)
 I IBDSRLE#IBDLL'=0,+IBDLSS<=0 D
"RTN","IBDLXDG2",96,0)
 . W ! S IBDLSS=$$MULS(IBDLMAX,IBDSRLE,.IBDSRL) S:IBDLSS["^" IBDLIT=1
"RTN","IBDLXDG2",97,0)
 G MULQ
"RTN","IBDLXDG2",98,0)
 Q X
"RTN","IBDLXDG2",99,0)
MULW ; Write Multiple
"RTN","IBDLXDG2",100,0)
 N IBDLEX,IBDLI1,IBDLSO,IBDLNC,IBDLT2,IBDLTX S IBDLSO=$P(IBDSRL(+IBDSRLE,0),"^",1)
"RTN","IBDLXDG2",101,0)
 S IBDLNC=$P(IBDSRL(+IBDSRLE,0),"^",3) S:+IBDLNC>0 IBDLNC=" ("_IBDLNC_")"
"RTN","IBDLXDG2",102,0)
 S IBDLEX=$G(IBDSRL(+IBDSRLE,"MENU")),IBDLTX(1)=IBDLSO
"RTN","IBDLXDG2",103,0)
 S IBDLTX(1)=IBDLTX(1)_$S($D(IBDSRL(+IBDSRLE,"CAT")):"-",1:" ")_$J(" ",(9-$L(IBDLSO)))_" "_IBDLEX_IBDLNC
"RTN","IBDLXDG2",104,0)
 D PR(.IBDLTX,60) W !,$J(IBDSRLE,5),".  ",$G(IBDLTX(1))
"RTN","IBDLXDG2",105,0)
 F IBDLI1=2:1:5 S IBDLT2=$G(IBDLTX(IBDLI1)) W:$L(IBDLT2) !,$J(" ",19),IBDLT2
"RTN","IBDLXDG2",106,0)
 Q
"RTN","IBDLXDG2",107,0)
MULS(X,Y,IBDSRL) ; Select from Multiple Entries
"RTN","IBDLXDG2",108,0)
 N DIR,DIRB,IBDLFI,IBDLHLP,IBDLLST,IBDLMAX,IBDLS1
"RTN","IBDLXDG2",109,0)
 Q:+($G(IBDLIT))>0 "^^"  S IBDLMAX=+($G(X)),IBDLLST=+($G(Y))
"RTN","IBDLXDG2",110,0)
 Q:IBDLMAX=0 -1 S IBDLFI=$O(IBDSRL(0)) Q:+IBDLFI'>0 -1
"RTN","IBDLXDG2",111,0)
 I +($O(IBDSRL(+IBDLLST)))>0 D
"RTN","IBDLXDG2",112,0)
 . S DIR("A")=" Press <RETURN> for more, ""^"" to exit, or Select 1-"
"RTN","IBDLXDG2",113,0)
 . S DIR("A")=DIR("A")_IBDLMAX_": "
"RTN","IBDLXDG2",114,0)
 I +($O(IBDSRL(+IBDLLST)))'>0 D
"RTN","IBDLXDG2",115,0)
 . S DIR("A")=" Select 1-"_IBDLMAX_": "
"RTN","IBDLXDG2",116,0)
 S IBDLHLP=" Answer must be from 1 to "
"RTN","IBDLXDG2",117,0)
 S IBDLHLP=IBDLHLP_IBDLMAX_", or <Return> to continue"
"RTN","IBDLXDG2",118,0)
 S DIR("PRE")="S:X[""?"" X=""??"""
"RTN","IBDLXDG2",119,0)
 S (DIR("?"),DIR("??"))="^D MULSH^IBDLXDG2"
"RTN","IBDLXDG2",120,0)
 S DIR(0)="NAO^1:"_IBDLMAX_":0" D ^DIR
"RTN","IBDLXDG2",121,0)
 S:X="^" IBDGOUP=1
"RTN","IBDLXDG2",122,0)
 W:X="" @IOF ;clear the screen if the next page
"RTN","IBDLXDG2",123,0)
 Q:'$D(DTOUT)&('$D(DUOUT))&('$D(DIROUT))&(+($G(Y))'>0) -1
"RTN","IBDLXDG2",124,0)
 S:X["^^"!($D(DTOUT)) IBDLIT=1,X="^^" I X["^^"!(+($G(IBDLIT))>0) Q "^^"
"RTN","IBDLXDG2",125,0)
 K DIR Q:$D(DTOUT)!(X[U) "^^"
"RTN","IBDLXDG2",126,0)
 Q $S(+Y>0:+Y,1:"-1")
"RTN","IBDLXDG2",127,0)
MULSH ; Select from Multiple Entries Help
"RTN","IBDLXDG2",128,0)
 I $L($G(IBDLHLP)) W !,$G(IBDLHLP) Q
"RTN","IBDLXDG2",129,0)
 Q
"RTN","IBDLXDG2",130,0)
MULQ ; Quit Multiple
"RTN","IBDLXDG2",131,0)
 I +IBDLSS'>0,$G(IBDLSS)="^" Q "^"
"RTN","IBDLXDG2",132,0)
 S X=-1 S:+($G(IBDLIT))'>0 X=$$X(+IBDLSS,.IBDSRL)
"RTN","IBDLXDG2",133,0)
 Q X
"RTN","IBDLXDG2",134,0)
X(X,IBDSRL) ; Set X and Output Array
"RTN","IBDLXDG2",135,0)
 N IBDLEX,IBDSRFI,IBDLIEN,IBDLN1,IBDLNC,IBDLNN,IBDLRN,IBDLS1,IBDLSO
"RTN","IBDLXDG2",136,0)
 S IBDLS1=+($G(X))
"RTN","IBDLXDG2",137,0)
 S IBDSRFI=$O(IBDSRL(0)) ;
"RTN","IBDLXDG2",138,0)
 S IBDLSO=$P($G(IBDSRL(IBDLS1,0)),"^",1),IBDLEX=$G(IBDSRL(IBDLS1,"MENU"))
"RTN","IBDLXDG2",139,0)
 ;S IBDLIEN=$S($D(IBDSRL(IBDLS1,"CAT")):"99:CAT;"_$P($G(IBDSRL(IBDLS1,0)),"^"),1:$P($G(IBDSRL(IBDLS1,"LEX",1)),"^")_";"_$P($G(IBDSRL(IBDLS1,0)),"^")) Q:'$L(IBDLSO) "^"
"RTN","IBDLXDG2",140,0)
 S IBDLIEN=$S($D(IBDSRL(IBDLS1,"CAT")):"99:CAT;"_$P($G(IBDSRL(IBDLS1,0)),"^"),1:$P($G(IBDSRL(IBDLS1,"IDS",1)),"^")_";"_$P($G(IBDSRL(IBDLS1,0)),"^")_";"_$P($G(IBDSRL(IBDLS1,"LEX",1)),"^")) Q:'$L(IBDLSO) "^"
"RTN","IBDLXDG2",141,0)
 Q:'$L(IBDLEX) "^"  Q:+IBDLIEN'>0 "^" S X=IBDLIEN_"^"_IBDLEX
"RTN","IBDLXDG2",142,0)
 S IBDLNN="IBDSRL("_+IBDLS1_")",IBDLNC="IBDSRL("_+IBDLS1_","
"RTN","IBDLXDG2",143,0)
 F  S IBDLNN=$Q(@IBDLNN) Q:'$L(IBDLNN)!(IBDLNN'[IBDLNC)  D
"RTN","IBDLXDG2",144,0)
 . S IBDLRN="IBDLN1("_$P(IBDLNN,"(",2,299) S @IBDLRN=@IBDLNN
"RTN","IBDLXDG2",145,0)
 K IBDSRL S IBDLNN="IBDLN1("_+IBDLS1_")",IBDLNC="IBDLN1("_+IBDLS1_","
"RTN","IBDLXDG2",146,0)
 F  S IBDLNN=$Q(@IBDLNN) Q:'$L(IBDLNN)!(IBDLNN'[IBDLNC)  D
"RTN","IBDLXDG2",147,0)
 . S IBDLRN="IBDSRL("_$P(IBDLNN,"(",2,299),@IBDLRN=@IBDLNN
"RTN","IBDLXDG2",148,0)
 Q X
"RTN","IBDLXDG2",149,0)
 ; 
"RTN","IBDLXDG2",150,0)
 ; Miscellaneous
"RTN","IBDLXDG2",151,0)
CL ; Clear
"RTN","IBDLXDG2",152,0)
 K IBDLIT
"RTN","IBDLXDG2",153,0)
 Q
"RTN","IBDLXDG2",154,0)
PR(IBDSRL,X) ; Parse Array
"RTN","IBDLXDG2",155,0)
 N DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,I,Z,%,IBDLC,IBDLI1,IBDLL
"RTN","IBDLXDG2",156,0)
 K ^UTILITY($J,"W")
"RTN","IBDLXDG2",157,0)
 Q:'$D(IBDSRL)
"RTN","IBDLXDG2",158,0)
 S IBDLL=+($G(X))
"RTN","IBDLXDG2",159,0)
 S:+IBDLL'>0 IBDLL=79
"RTN","IBDLXDG2",160,0)
 S IBDLC=+($G(IBDSRL))
"RTN","IBDLXDG2",161,0)
 S:+($G(IBDLC))'>0 IBDLC=$O(IBDSRL(" "),-1)
"RTN","IBDLXDG2",162,0)
 Q:+IBDLC'>0
"RTN","IBDLXDG2",163,0)
 S DIWL=1,DIWF="C"_+IBDLL
"RTN","IBDLXDG2",164,0)
 S IBDLI1=0
"RTN","IBDLXDG2",165,0)
 F  S IBDLI1=$O(IBDSRL(IBDLI1)) Q:+IBDLI1=0  S X=$G(IBDSRL(IBDLI1)) D ^DIWP
"RTN","IBDLXDG2",166,0)
 K IBDSRL
"RTN","IBDLXDG2",167,0)
 S (IBDLC,IBDLI1)=0
"RTN","IBDLXDG2",168,0)
 F  S IBDLI1=$O(^UTILITY($J,"W",1,IBDLI1)) Q:+IBDLI1=0  D
"RTN","IBDLXDG2",169,0)
 . S IBDSRL(IBDLI1)=$$TM($G(^UTILITY($J,"W",1,IBDLI1,0))," "),IBDLC=IBDLC+1
"RTN","IBDLXDG2",170,0)
 S:$L(IBDLC) IBDSRL=IBDLC
"RTN","IBDLXDG2",171,0)
 K ^UTILITY($J,"W")
"RTN","IBDLXDG2",172,0)
 Q
"RTN","IBDLXDG2",173,0)
TM(X,Y) ; Trim Character Y - Default " "
"RTN","IBDLXDG2",174,0)
 S X=$G(X) Q:X="" X S Y=$G(Y) S:'$L(Y) Y=" "
"RTN","IBDLXDG2",175,0)
 F  Q:$E(X,1)'=Y  S X=$E(X,2,$L(X))
"RTN","IBDLXDG2",176,0)
 F  Q:$E(X,$L(X))'=Y  S X=$E(X,1,($L(X)-1))
"RTN","IBDLXDG2",177,0)
 Q X
"RTN","IBDUTICD")
0^49^B26868434^n/a
"RTN","IBDUTICD",1,0)
IBDUTICD ;ALB/SS - ICD10 UTILITIES ;07/20/11
"RTN","IBDUTICD",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;APR 24, 1997;Build 80
"RTN","IBDUTICD",3,0)
 ;
"RTN","IBDUTICD",4,0)
 ;a wrapper for IMPDATE API 
"RTN","IBDUTICD",5,0)
IMPDATE(IBDCDSYS) ;
"RTN","IBDUTICD",6,0)
 Q $$IMPDATE^LEXU(IBDCDSYS)
"RTN","IBDUTICD",7,0)
 ;
"RTN","IBDUTICD",8,0)
 ;
"RTN","IBDUTICD",9,0)
 ;A wrapper for CODELIST API
"RTN","IBDUTICD",10,0)
 ;IBDCSYS - coding system (see #80.4)
"RTN","IBDUTICD",11,0)
 ;IBDSPEC - wild card search string 
"RTN","IBDUTICD",12,0)
 ;IBDSUB - subscript for the ^TMP global
"RTN","IBDUTICD",13,0)
 ;IBDATE - date of interest
"RTN","IBDUTICD",14,0)
 ;IBDLEN - number of returned values
"RTN","IBDUTICD",15,0)
 ;IBDFMT - list format
"RTN","IBDUTICD",16,0)
 ;example:
"RTN","IBDUTICD",17,0)
 ;W $$CODELIST^LEX10CS("10D","E80*","ZZX",3150101,"",1)
"RTN","IBDUTICD",18,0)
 ;1^10
"RTN","IBDUTICD",19,0)
 ;Global ^TMP(,$J
"RTN","IBDUTICD",20,0)
 ;^TMP("IBDFN4_SS",543733994,0)=10
"RTN","IBDUTICD",21,0)
 ; 1)="E80.0"
"RTN","IBDUTICD",22,0)
 ;^TMP("IBDFN4_SS",543733994,1,1)="503506;ICD9(^E80.0^3131001"
"RTN","IBDUTICD",23,0)
 ; 2)="5002981^Hereditary Erythropoietic Porphyria"
"RTN","IBDUTICD",24,0)
CODELIST(IBDCSYS,IBDSPEC,IBDSUB,IBDATE,IBDLEN,IBDFMT) ;
"RTN","IBDUTICD",25,0)
 N IBDRETV
"RTN","IBDUTICD",26,0)
 K ^TMP("IBDCODLST",$J)
"RTN","IBDUTICD",27,0)
 S IBDATE=$S($G(IBDATE)<$$IMPDATE(IBDCSYS):$$IMPDATE(IBDCSYS),1:$G(IBDATE))
"RTN","IBDUTICD",28,0)
 ;don't pass the date to perform the "unversioned lookup"
"RTN","IBDUTICD",29,0)
 S IBDRETV=$$CODELIST^LEX10CS(IBDCSYS,IBDSPEC,"IBDCODLST",,$G(IBDLEN),$G(IBDFMT))
"RTN","IBDUTICD",30,0)
 I $P(IBDRETV,U,1)<1!($P(IBDRETV,U,2)=0) Q IBDRETV
"RTN","IBDUTICD",31,0)
 ;cleanup the output array:
"RTN","IBDUTICD",32,0)
 ; - leave codes if the last status entry is ACTIVE 
"RTN","IBDUTICD",33,0)
 ; - leave codes if the last status entry is INACTIVE but the last INACTIVE status date is greater than the current date
"RTN","IBDUTICD",34,0)
 S IBDRETV=$$REMINTMP("IBDCODLST",IBDSUB,IBDATE)
"RTN","IBDUTICD",35,0)
 K ^TMP("IBDCODLST",$J)
"RTN","IBDUTICD",36,0)
 Q IBDRETV
"RTN","IBDUTICD",37,0)
 ;
"RTN","IBDUTICD",38,0)
 ;for $$CODELIST^LEX10CS
"RTN","IBDUTICD",39,0)
 ; - leave codes if the last status entry is ACTIVE 
"RTN","IBDUTICD",40,0)
 ; - leave codes if the last status entry is INACTIVE but the last INACTIVE status date is greater than the current date
"RTN","IBDUTICD",41,0)
 ; - remove all other codes
"RTN","IBDUTICD",42,0)
 ;and move results to another ^TMP 
"RTN","IBDUTICD",43,0)
REMINTMP(IBDSUB,IBDSUBOU,IBDDT) ;
"RTN","IBDUTICD",44,0)
 N IBDCOUNT,IBDZ1,IBDCODEV
"RTN","IBDUTICD",45,0)
 S IBDCOUNT=0
"RTN","IBDUTICD",46,0)
 S IBDZ1=0 F  S IBDZ1=$O(^TMP(IBDSUB,$J,IBDZ1)) Q:+IBDZ1=0  D
"RTN","IBDUTICD",47,0)
 . S IBDCODEV=$G(^TMP(IBDSUB,$J,IBDZ1))
"RTN","IBDUTICD",48,0)
 . I $$FILTER(IBDCODEV,IBDDT)=1 S IBDCOUNT=IBDCOUNT+1 M ^TMP(IBDSUBOU,$J,IBDCOUNT)=^TMP(IBDSUB,$J,IBDZ1)
"RTN","IBDUTICD",49,0)
 ;set 0th node
"RTN","IBDUTICD",50,0)
 S:IBDCOUNT>0 ^TMP(IBDSUBOU,$J,0)=IBDCOUNT
"RTN","IBDUTICD",51,0)
 Q "1^"_(+IBDCOUNT)
"RTN","IBDUTICD",52,0)
 ;
"RTN","IBDUTICD",53,0)
 ;IBDCODEV - external value of the code
"RTN","IBDUTICD",54,0)
 ;IBDDATE - date of interest
"RTN","IBDUTICD",55,0)
 ;return 1:
"RTN","IBDUTICD",56,0)
 ; if the last status entry for the ICD is ACTIVE
"RTN","IBDUTICD",57,0)
 ; if the last status entry for the ICD is INACTIVE but the date of interest is less than the last status date
"RTN","IBDUTICD",58,0)
 ;return 0:
"RTN","IBDUTICD",59,0)
 ; if the last status entry for the ICD is INACTIVE but the date of interest greater or equal to the last status date
"RTN","IBDUTICD",60,0)
 ; if the status values is not valid
"RTN","IBDUTICD",61,0)
FILTER(IBDCODEV,IBDDATE) ;
"RTN","IBDUTICD",62,0)
 N IBDARR,IBSTAT
"RTN","IBDUTICD",63,0)
 I $$HIST^ICDEX(IBDCODEV,.IBDARR,30)=-1 Q 0
"RTN","IBDUTICD",64,0)
 S IBSTAT=$$LASTSTAT(.IBDARR)
"RTN","IBDUTICD",65,0)
 I +IBSTAT=1 Q 1
"RTN","IBDUTICD",66,0)
 I +IBSTAT=0 I $P(IBSTAT,U,2)>IBDDATE Q 1
"RTN","IBDUTICD",67,0)
 Q 0
"RTN","IBDUTICD",68,0)
 ;
"RTN","IBDUTICD",69,0)
 ;return the date of the last active status (if there is only one then it is the last too) 
"RTN","IBDUTICD",70,0)
 ;IBDCODEV - external value of the code
"RTN","IBDUTICD",71,0)
 ;return 0 if error
"RTN","IBDUTICD",72,0)
 ; date of the 1st activation status (doesn't matter active or inactive)
"RTN","IBDUTICD",73,0)
LSTACTST(IBDCODEV) ;
"RTN","IBDUTICD",74,0)
 N IBDARR,IBSTAT,IBDT1
"RTN","IBDUTICD",75,0)
 I $$HIST^ICDEX(IBDCODEV,.IBDARR,30)=-1 Q 0
"RTN","IBDUTICD",76,0)
 S IBDT1=99999999
"RTN","IBDUTICD",77,0)
 F  S IBDT1=$O(IBDARR(IBDT1),-1) Q:+IBDT1=0  I IBDARR(IBDT1)=1 Q
"RTN","IBDUTICD",78,0)
 Q +IBDT1
"RTN","IBDUTICD",79,0)
 ;for $$DIAGSRCH^LEX10CS in IBDLXDG
"RTN","IBDUTICD",80,0)
 ; - leave codes if the last status entry is ACTIVE 
"RTN","IBDUTICD",81,0)
 ; - leave codes if the last status entry is INACTIVE but the last INACTIVE status date is greater than the current date
"RTN","IBDUTICD",82,0)
 ; - remove all other codes
"RTN","IBDUTICD",83,0)
 ;and move results to another local array  
"RTN","IBDUTICD",84,0)
REMINARR(IBDINOUT,IBDDT) ;
"RTN","IBDUTICD",85,0)
 Q:(+IBDINOUT)=-1 IBDINOUT
"RTN","IBDUTICD",86,0)
 N IBDCOUNT,IBDZ1,IBDCODEV,IBDINARR,IBD2PIEC
"RTN","IBDUTICD",87,0)
 S IBD2PIEC=+$P($G(IBDINOUT),U,2)
"RTN","IBDUTICD",88,0)
 M IBDINARR=IBDINOUT
"RTN","IBDUTICD",89,0)
 K IBDINOUT
"RTN","IBDUTICD",90,0)
 S IBDCOUNT=0
"RTN","IBDUTICD",91,0)
 S IBDZ1=0 F  S IBDZ1=$O(IBDINARR(IBDZ1)) Q:+IBDZ1=0  D
"RTN","IBDUTICD",92,0)
 . S IBDCODEV=$P($G(IBDINARR(IBDZ1,0)),U)
"RTN","IBDUTICD",93,0)
 . I $$FILTER(IBDCODEV,IBDDT)=1 S IBDCOUNT=IBDCOUNT+1 M IBDINOUT(IBDCOUNT)=IBDINARR(IBDZ1)
"RTN","IBDUTICD",94,0)
 ;set 0th node
"RTN","IBDUTICD",95,0)
 I IBDCOUNT>0 S IBDINOUT(0)=IBDCOUNT_$S(IBD2PIEC>0:U_IBD2PIEC,1:""),IBDINOUT=IBDINOUT(0) Q IBDINOUT
"RTN","IBDUTICD",96,0)
 Q "-1"
"RTN","IBDUTICD",97,0)
 ;
"RTN","IBDUTICD",98,0)
 ;get the last status in the history of status changes
"RTN","IBDUTICD",99,0)
LASTSTAT(IBDARR) ;
"RTN","IBDUTICD",100,0)
 N IBDX1,IBDX2
"RTN","IBDUTICD",101,0)
 S IBDX1=$O(IBDARR(99999999),-1)
"RTN","IBDUTICD",102,0)
 I +IBDX1=0 Q "-1"
"RTN","IBDUTICD",103,0)
 S IBDX2=$G(IBDARR(IBDX1))
"RTN","IBDUTICD",104,0)
 Q IBDX2_U_IBDX1
"RTN","IBDUTICD",105,0)
 ;
"RTN","IBDUTICD",106,0)
 ;A wrapper for the status check API
"RTN","IBDUTICD",107,0)
 ;input:
"RTN","IBDUTICD",108,0)
 ; IBDCDSYS - coding system like 1,30,"10D"
"RTN","IBDUTICD",109,0)
 ; IBDCOD - code value or IEN of files 80 or 80.1
"RTN","IBDUTICD",110,0)
 ; IBDDATE - the date we are checking the status against 
"RTN","IBDUTICD",111,0)
 ;output:
"RTN","IBDUTICD",112,0)
 ; -1 - invalid code
"RTN","IBDUTICD",113,0)
 ; 0 - inactive
"RTN","IBDUTICD",114,0)
 ; 1 - active
"RTN","IBDUTICD",115,0)
 ; 2 - Before implementation date 
"RTN","IBDUTICD",116,0)
STATCHK(IBDCDSYS,IBDCOD,IBDDATE) ;
"RTN","IBDUTICD",117,0)
 N IBDRET
"RTN","IBDUTICD",118,0)
 ;if ICD10 diag or ICD-10 proced
"RTN","IBDUTICD",119,0)
 ;I IBDCDSYS=30!(IBDCDSYS=31)!(IBDCDSYS="10D")!(IBDCDSYS="10P"),IBDDATE<$$IMPDATE(IBDCDSYS) Q 2
"RTN","IBDUTICD",120,0)
 I IBDDATE<$$IMPDATE(IBDCDSYS) Q 2
"RTN","IBDUTICD",121,0)
 S IBDRET=$$ICDDATA^ICDXCODE(IBDCDSYS,IBDCOD,IBDDATE)
"RTN","IBDUTICD",122,0)
 I +IBDRET<0 Q IBDRET
"RTN","IBDUTICD",123,0)
 Q $P(IBDRET,U,10)
"RTN","IBDUTICD",124,0)
 ;
"RTN","IBDUTICD",125,0)
 ;set CODING SYSTEM UPDATE fields in #357
"RTN","IBDUTICD",126,0)
 ;Examples:
"RTN","IBDUTICD",127,0)
 ; ICD10 to incomplete
"RTN","IBDUTICD",128,0)
 ;W $$CSUPD357^IBDUTICD(21,30,"@")
"RTN","IBDUTICD",129,0)
 ; ICD9 to REVIEW
"RTN","IBDUTICD",130,0)
 ;W $$CSUPD357^IBDUTICD(21,1,"R")
"RTN","IBDUTICD",131,0)
 ; create a new ICD10 entry if doesn't exist with incomplete status
"RTN","IBDUTICD",132,0)
 ;W $$CSUPD357^IBDUTICD(21,30,"")
"RTN","IBDUTICD",133,0)
 ; update just date and user
"RTN","IBDUTICD",134,0)
 ;W $$CSUPD357^IBDUTICD(21,30,"",3150101,.5)
"RTN","IBDUTICD",135,0)
 ;
"RTN","IBDUTICD",136,0)
 ;IBD357I - ien in the file #357
"RTN","IBDUTICD",137,0)
 ;IBDCODS - ien of the coding system file #80.4
"RTN","IBDUTICD",138,0)
 ;IBDSTAT - status like "C" or "R" (use "@" to delete the value and make it INCOMPLETE)
"RTN","IBDUTICD",139,0)
 ;IBDDAT - date of the update
"RTN","IBDUTICD",140,0)
 ;IBDUSER - DUZ of the user (ptr to the file #200)
"RTN","IBDUTICD",141,0)
CSUPD357(IBD357I,IBDCODS,IBDSTAT,IBDDAT,IBDUSER) ;
"RTN","IBDUTICD",142,0)
 N IBD35703
"RTN","IBDUTICD",143,0)
 S IBDSTAT=$G(IBDSTAT)
"RTN","IBDUTICD",144,0)
 S IBDDAT=+$G(IBDDAT) S IBDDAT=$S(IBDDAT>0:IBDDAT,1:DT)
"RTN","IBDUTICD",145,0)
 S IBDUSER=+$G(IBDUSER) S IBDUSER=$S(IBDUSER>0:IBDUSER,1:$S($G(DUZ)="":.5,1:+DUZ))
"RTN","IBDUTICD",146,0)
 S IBD35703=+$O(^IBE(357,IBD357I,3,"B",IBDCODS,0))
"RTN","IBDUTICD",147,0)
 I IBD35703=0 S IBD35703=$$NEW35703(IBD357I,IBDCODS,IBDSTAT,IBDDAT,IBDUSER) Q:IBD35703<0  Q $$UPD35703(IBD357I,IBD35703,"",IBDSTAT,IBDDAT,IBDUSER)
"RTN","IBDUTICD",148,0)
 Q $$UPD35703(IBD357I,IBD35703,IBDCODS,IBDSTAT,IBDDAT,IBDUSER)
"RTN","IBDUTICD",149,0)
 ;
"RTN","IBDUTICD",150,0)
 ;update the multiple with the status 
"RTN","IBDUTICD",151,0)
UPD35703(IBD357I,IBD35703,IBDCODS,IBDSTAT,IBDDAT,IBDUSER) ;
"RTN","IBDUTICD",152,0)
 N IBDVALAR,IBDCURST
"RTN","IBDUTICD",153,0)
 S:$G(IBDSTAT)'="" IBDVALAR(.02)=IBDSTAT
"RTN","IBDUTICD",154,0)
 I $G(IBDVALAR(.02))="@" K:$P($G(^IBE(357,IBD357I,3,IBD35703,0)),U,2)="" IBDVALAR(.02)
"RTN","IBDUTICD",155,0)
 S:$G(IBDCODS)'="" IBDVALAR(.01)=IBDCODS
"RTN","IBDUTICD",156,0)
 S:$G(IBDDAT)'="" IBDVALAR(.03)=IBDDAT
"RTN","IBDUTICD",157,0)
 S:$G(IBDUSER)'="" IBDVALAR(.04)=IBDUSER
"RTN","IBDUTICD",158,0)
 Q $$MULTFLDS^IBDUTIL1(357.03,IBD35703_","_IBD357I,.IBDVALAR,"I")
"RTN","IBDUTICD",159,0)
 ;
"RTN","IBDUTICD",160,0)
 ;W $$UPD35703^IBDUTICD(21,1,30,"C",DT,+DUZ)
"RTN","IBDUTICD",161,0)
NEW35703(IBD357I,IBDCODS,IBDSTAT,IBDDAT,IBDUSER) ;
"RTN","IBDUTICD",162,0)
 N IBD35703
"RTN","IBDUTICD",163,0)
 I +$O(^IBE(357,IBD357I,3,"B",IBDCODS,0)) Q 0
"RTN","IBDUTICD",164,0)
 S IBD35703=$$INSREC01^IBDUTIL1(357.03,IBD357I,IBDCODS,"I")
"RTN","IBDUTICD",165,0)
 Q IBD35703
"RTN","IBDUTICD",166,0)
 ;
"RTN","IBDUTICD",167,0)
 ;if date is before the ICD-10 eff date then make it ICD-10 eff date
"RTN","IBDUTICD",168,0)
 ;if greater then leave it as is.
"RTN","IBDUTICD",169,0)
ICD10DT(IBDATE) ;
"RTN","IBDUTICD",170,0)
 N IBD10DT
"RTN","IBDUTICD",171,0)
 S IBD10DT=$$IMPDATE(30)
"RTN","IBDUTICD",172,0)
 S IBDATE=$S($G(IBDATE)<IBD10DT:IBD10DT,1:$G(IBDATE))
"RTN","IBDUTICD",173,0)
 Q IBDATE
"RTN","IBDUTICD",174,0)
 ;
"RTN","IBDUTICD",175,0)
 ;prompt
"RTN","IBDUTICD",176,0)
ACTPRMT() ;
"RTN","IBDUTICD",177,0)
 N DTOUT,DUOUT,DIRUT,DIROUT,DIR
"RTN","IBDUTICD",178,0)
 S DIR("B")="ACTIVE"
"RTN","IBDUTICD",179,0)
 S DIR(0)="SA^A:ACTIVE;I:INACTIVE"
"RTN","IBDUTICD",180,0)
 S DIR("A")="Display codes [A]ctive, [I]nactive: "
"RTN","IBDUTICD",181,0)
 D ^DIR
"RTN","IBDUTICD",182,0)
 I $D(DIRUT) Q -1
"RTN","IBDUTICD",183,0)
 I $D(DUOUT) Q -2
"RTN","IBDUTICD",184,0)
 I $D(DIROUT) Q -3
"RTN","IBDUTICD",185,0)
 Q $G(Y)
"RTN","IBDUTICD",186,0)
 ;
"RTN","IBDUTICD",187,0)
 ;IBDFICD
"RTN","IBDUTIL1")
0^3^B32332726^n/a
"RTN","IBDUTIL1",1,0)
IBDUTIL1 ;ALB/SS - GENERIC UTILITIES ;16-AUG-11
"RTN","IBDUTIL1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;APR 24, 1997;Build 80
"RTN","IBDUTIL1",3,0)
 ;
"RTN","IBDUTIL1",4,0)
 ;
"RTN","IBDUTIL1",5,0)
 Q
"RTN","IBDUTIL1",6,0)
 ;
"RTN","IBDUTIL1",7,0)
 ;
"RTN","IBDUTIL1",8,0)
 ;example
"RTN","IBDUTIL1",9,0)
 ;adds text to Word Processing field
"RTN","IBDUTIL1",10,0)
 ;IBDFILE - file #
"RTN","IBDUTIL1",11,0)
 ;IBDIENS - "IEN,"
"RTN","IBDUTIL1",12,0)
 ;IBDFLD - field #
"RTN","IBDUTIL1",13,0)
 ;IBDFLG - flags "A" to append, "K" to lock and check locks 
"RTN","IBDUTIL1",14,0)
 ;IBDARR - arrays with data (see example below)
"RTN","IBDUTIL1",15,0)
 ;returns:
"RTN","IBDUTIL1",16,0)
 ; 1- success
"RTN","IBDUTIL1",17,0)
 ; -1 -failure
"RTN","IBDUTIL1",18,0)
 ;example:
"RTN","IBDUTIL1",19,0)
 ; S IBDARR(1,0)="Line 1"
"RTN","IBDUTIL1",20,0)
 ; S IBDARR(2,0)="Line 2"
"RTN","IBDUTIL1",21,0)
 ; I $$UPDWD^IBD3P63(357.61,"175,1",".01","KA","IBDARR")=0 W "OKAY"
"RTN","IBDUTIL1",22,0)
UPDWD(IBDFILE,IBDIENS,IBDFLD,IBDFLG,IBDARR) ;
"RTN","IBDUTIL1",23,0)
 N IBDERR
"RTN","IBDUTIL1",24,0)
 D WP^DIE(IBDFILE,IBDIENS,IBDFLD,IBDFLG,"IBDARR","IBDERR")
"RTN","IBDUTIL1",25,0)
 I $D(IBDERR("DIERR")) Q -1
"RTN","IBDUTIL1",26,0)
 Q 1
"RTN","IBDUTIL1",27,0)
 ;/**
"RTN","IBDUTIL1",28,0)
 ;Creates a new entry (or node for multiple with .01 field)
"RTN","IBDUTIL1",29,0)
 ;
"RTN","IBDUTIL1",30,0)
 ;IBDFILE - file/subfile number
"RTN","IBDUTIL1",31,0)
 ;IBDIEN - ien of the parent file entry in which the new subfile entry will be inserted
"RTN","IBDUTIL1",32,0)
 ;IBDZFDA - array with values for the fields
"RTN","IBDUTIL1",33,0)
 ; format for IBDZFDA:
"RTN","IBDUTIL1",34,0)
 ; IBDZFDA(.01)=value for #.01 field
"RTN","IBDUTIL1",35,0)
 ; IBDZFDA(3)=value for #3 field
"RTN","IBDUTIL1",36,0)
 ;IBDRECNO -(optional) specify IEN if you want specific value
"RTN","IBDUTIL1",37,0)
 ; Note: "" then the system will assign the entry number itself.
"RTN","IBDUTIL1",38,0)
 ;IBDFLGS - FLAGS parameter for UPDATE^DIE
"RTN","IBDUTIL1",39,0)
 ;IBDLCKGL - fully specified global reference to lock
"RTN","IBDUTIL1",40,0)
 ;IBDLCKTM - time out for LOCK, if LOCKTIME=0 then the function will not lock the file 
"RTN","IBDUTIL1",41,0)
 ;IBDNEWRE - optional, flag = if 1 then allow to create a new top level record 
"RTN","IBDUTIL1",42,0)
 ;  
"RTN","IBDUTIL1",43,0)
 ;output :
"RTN","IBDUTIL1",44,0)
 ; positive number - record # created
"RTN","IBDUTIL1",45,0)
 ; <=0 - failure
"RTN","IBDUTIL1",46,0)
 ;
"RTN","IBDUTIL1",47,0)
 ;example:
"RTN","IBDUTIL1",48,0)
 ; S ZZ(.01)="ZZSS TEST",ZZ(.06)=1,ZZ(.09)=0 W $$INSREC^IBDUTIL1(357.6,"",.ZZ,"")
"RTN","IBDUTIL1",49,0)
INSREC(IBDFILE,IBDIEN,IBDZFDA,IBDRECNO,IBDFLGS,IBDLCKGL,IBDLCKTM,IBDNEWRE) ;*/
"RTN","IBDUTIL1",50,0)
 I ('$G(IBDFILE)) Q "0^Invalid parameter"
"RTN","IBDUTIL1",51,0)
 I +$G(IBDNEWRE)=0 I $G(IBDRECNO)>0,'$G(IBDIEN) Q "0^Invalid parameter"
"RTN","IBDUTIL1",52,0)
 ;I $G(IBDZFDA(.01))="" Q "0^Null"
"RTN","IBDUTIL1",53,0)
 N IBDSSI,IBDIENS,IBDERR,IBDFDA
"RTN","IBDUTIL1",54,0)
 N IBDLOCK S IBDLOCK=0
"RTN","IBDUTIL1",55,0)
 I '$G(IBDRECNO) N IBDRECNO S IBDRECNO=$G(IBDRECNO)
"RTN","IBDUTIL1",56,0)
 I IBDIEN'="" S IBDIENS="+1,"_IBDIEN_"," I $L(IBDRECNO)>0 S IBDSSI(1)=+IBDRECNO
"RTN","IBDUTIL1",57,0)
 I IBDIEN="" S IBDIENS="+1," I $L(IBDRECNO)>0 S IBDSSI(1)=+IBDRECNO
"RTN","IBDUTIL1",58,0)
 M IBDFDA(IBDFILE,IBDIENS)=IBDZFDA
"RTN","IBDUTIL1",59,0)
 I $L($G(IBDLCKGL)) L +@IBDLCKGL:(+$G(IBDLCKTM)) S IBDLOCK=$T I 'IBDLOCK Q -2  ;lock failure
"RTN","IBDUTIL1",60,0)
 D UPDATE^DIE($G(IBDFLGS),"IBDFDA","IBDSSI","IBDERR")
"RTN","IBDUTIL1",61,0)
 I IBDLOCK L -@IBDLCKGL
"RTN","IBDUTIL1",62,0)
 I $D(IBDERR) Q -1  ;D BMES^XPDUTL(IBDERR("DIERR",1,"TEXT",1))
"RTN","IBDUTIL1",63,0)
 ;I $D(IBDERR) D BMES^XPDUTL($G(IBDERR("DIERR",1,"TEXT",1),"Update Error")) Q -1  ;D BMES^XPDUTL(IBDERR("DIERR",1,"TEXT",1))
"RTN","IBDUTIL1",64,0)
 Q +$G(IBDSSI(1))
"RTN","IBDUTIL1",65,0)
 ;
"RTN","IBDUTIL1",66,0)
 ;
"RTN","IBDUTIL1",67,0)
 ;/**
"RTN","IBDUTIL1",68,0)
 ;another version of the INSREC above - in case you need just one #.01 field to create a new record 
"RTN","IBDUTIL1",69,0)
 ;IBDVAL01 - .01 value for the new entry
"RTN","IBDUTIL1",70,0)
 ;See INSREC for description of other parameters and return values
"RTN","IBDUTIL1",71,0)
 ;
"RTN","IBDUTIL1",72,0)
 ;Examples
"RTN","IBDUTIL1",73,0)
 ;top level:
"RTN","IBDUTIL1",74,0)
 ; W $$INSREC01^IBDUTIL1(366.14,"",IBDATE,"")
"RTN","IBDUTIL1",75,0)
 ; W $$INSREC01^IBDUTIL1(357.6,"","ZZ TEST","")
"RTN","IBDUTIL1",76,0)
 ;to create with the specific ien
"RTN","IBDUTIL1",77,0)
 ; W $$INSREC01^IBDUTIL1(9002313.77,"",55555555,45555,,,,1)
"RTN","IBDUTIL1",78,0)
 ; 
"RTN","IBDUTIL1",79,0)
 ;1st level multiple:
"RTN","IBDUTIL1",80,0)
 ; subfile number = #366.141
"RTN","IBDUTIL1",81,0)
 ; parent file #366.14 entry number = 345
"RTN","IBDUTIL1",82,0)
 ; W $$INSREC01(366.141,345,"SUBMIT","")
"RTN","IBDUTIL1",83,0)
 ; to create multiple entry with particular entry number = 23
"RTN","IBDUTIL1",84,0)
 ; W $$INSREC01(366.141,345,"SUBMIT",23)
"RTN","IBDUTIL1",85,0)
 ;
"RTN","IBDUTIL1",86,0)
 ;2nd level multiple
"RTN","IBDUTIL1",87,0)
 ;parent file #366.14 entry number = 234
"RTN","IBDUTIL1",88,0)
 ;parent multiple entry number = 55
"RTN","IBDUTIL1",89,0)
 ;create multiple entry INSURANCE
"RTN","IBDUTIL1",90,0)
 ; W $$INSREC01(366.1412,"55,234","INS","")
"RTN","IBDUTIL1",91,0)
 ; results in :
"RTN","IBDUTIL1",92,0)
 ; ^IBCNR(366.14,234,1,55,5,0)=^366.1412PA^1^1
"RTN","IBDUTIL1",93,0)
 ; ^IBCNR(366.14,234,1,55,5,1,0)=INS
"RTN","IBDUTIL1",94,0)
 ; ^IBCNR(366.14,234,1,55,5,"B","INS",1)=
"RTN","IBDUTIL1",95,0)
 ;  (DD node for this multiple =5 ) 
"RTN","IBDUTIL1",96,0)
INSREC01(IBDFILE,IBDIEN,IBDVAL01,IBDRECNO,IBDFLGS,IBDLCKGL,IBDLCKTM,IBDNEWRE) ;*/
"RTN","IBDUTIL1",97,0)
 I ('$G(IBDFILE)) Q "0^Invalid parameter"
"RTN","IBDUTIL1",98,0)
 I +$G(IBDNEWRE)=0 I $G(IBDRECNO)>0,'$G(IBDIEN) Q "0^Invalid parameter"
"RTN","IBDUTIL1",99,0)
 N IBDFDAZ
"RTN","IBDUTIL1",100,0)
 S IBDFDAZ(.01)=IBDVAL01
"RTN","IBDUTIL1",101,0)
 Q $$INSREC(IBDFILE,IBDIEN,.IBDFDAZ,IBDRECNO,$G(IBDFLGS),$G(IBDLCKGL),$G(IBDLCKTM),$G(IBDNEWRE))
"RTN","IBDUTIL1",102,0)
 ;
"RTN","IBDUTIL1",103,0)
 ;
"RTN","IBDUTIL1",104,0)
 ;populate multiple fields at once
"RTN","IBDUTIL1",105,0)
 ;Input:
"RTN","IBDUTIL1",106,0)
 ;IBDFILEN file number
"RTN","IBDUTIL1",107,0)
 ;IBDIEN ien string 
"RTN","IBDUTIL1",108,0)
 ;IBDVALAR new values (internal format) in the format
"RTN","IBDUTIL1",109,0)
 ; IBDVALAR(IBDFLDNO)=values
"RTN","IBDUTIL1",110,0)
 ; where IBDFLDNO - the field number
"RTN","IBDUTIL1",111,0)
 ; example:
"RTN","IBDUTIL1",112,0)
 ; IBDVALAR(.01)=value for #.01 field
"RTN","IBDUTIL1",113,0)
 ; IBDVALAR(3)=value for #3 field
"RTN","IBDUTIL1",114,0)
 ;IBDFLAG - null (for internal format)  or "E" (for external format with validation)
"RTN","IBDUTIL1",115,0)
 ;Output:
"RTN","IBDUTIL1",116,0)
 ;0 if failure
"RTN","IBDUTIL1",117,0)
 ;1 if success
"RTN","IBDUTIL1",118,0)
 ; example: see $$UPD35703^IBDUTICD 
"RTN","IBDUTIL1",119,0)
MULTFLDS(IBDFILEN,IBDIEN,IBDVALAR,IBDFLAG) ;
"RTN","IBDUTIL1",120,0)
 I '$G(IBDFILEN) Q "0^Invalid parameter"
"RTN","IBDUTIL1",121,0)
 I '$G(IBDIEN) Q "0^Invalid parameter"
"RTN","IBDUTIL1",122,0)
 N IBDIENS,IBDFDA,IBDERARY
"RTN","IBDUTIL1",123,0)
 S IBDIENS=IBDIEN_","
"RTN","IBDUTIL1",124,0)
 M IBDFDA(IBDFILEN,IBDIENS)=IBDVALAR
"RTN","IBDUTIL1",125,0)
 D FILE^DIE($G(IBDFLAG),"IBDFDA","IBDERARY")
"RTN","IBDUTIL1",126,0)
 I $D(IBDERARY) Q 0
"RTN","IBDUTIL1",127,0)
 Q 1
"RTN","IBDUTIL1",128,0)
 ;
"RTN","IBDUTIL1",129,0)
 ;populate a single database field
"RTN","IBDUTIL1",130,0)
 ;Input:
"RTN","IBDUTIL1",131,0)
 ;IBDFILEN file number
"RTN","IBDUTIL1",132,0)
 ;IBDFLDNO field number
"RTN","IBDUTIL1",133,0)
 ;IBDIEN ien string 
"RTN","IBDUTIL1",134,0)
 ;IBDVAL new value to file (internal format)
"RTN","IBDUTIL1",135,0)
 ;IBDFLAG - null (for internal format)  or "E" (for external format with validation)
"RTN","IBDUTIL1",136,0)
 ;Output:
"RTN","IBDUTIL1",137,0)
 ;0^IBDVAL^error if failure
"RTN","IBDUTIL1",138,0)
 ;1^IBDVAL if success
"RTN","IBDUTIL1",139,0)
SINGLFLD(IBDFILEN,IBDFLDNO,IBDIEN,IBDVAL,IBDFLAG) ;
"RTN","IBDUTIL1",140,0)
 I '$G(IBDFILEN) Q "0^Invalid parameter"
"RTN","IBDUTIL1",141,0)
 I '$G(IBDFLDNO) Q "0^Invalid parameter"
"RTN","IBDUTIL1",142,0)
 I '$G(IBDIEN) Q "0^Invalid parameter"
"RTN","IBDUTIL1",143,0)
 I $G(IBDVAL)="" Q "0^Null"
"RTN","IBDUTIL1",144,0)
 N IBDIENS,IBDFDA,IBDERARY
"RTN","IBDUTIL1",145,0)
 S IBDIENS=IBDIEN_","
"RTN","IBDUTIL1",146,0)
 S IBDFDA(IBDFILEN,IBDIENS,IBDFLDNO)=IBDVAL
"RTN","IBDUTIL1",147,0)
 D FILE^DIE($G(IBDFLAG),"IBDFDA","IBDERARY")
"RTN","IBDUTIL1",148,0)
 I $D(IBDERARY) Q "0^"_IBDVAL_"^"_IBDERARY("DIERR",1,"TEXT",1)
"RTN","IBDUTIL1",149,0)
 Q "1^"_IBDVAL
"RTN","IBDUTIL1",150,0)
 ;
"RTN","IBDUTIL1",151,0)
 ;/**
"RTN","IBDUTIL1",152,0)
 ;enter free text like comments
"RTN","IBDUTIL1",153,0)
 ;IBDPROM  -prompt string
"RTN","IBDUTIL1",154,0)
 ;IBDMXLEN -maxlen
"RTN","IBDUTIL1",155,0)
FREETEXT(IBDPROM,IBDMXLEN) ;*/
"RTN","IBDUTIL1",156,0)
 N DIR,DTOUT,DUOUT,IBDQ
"RTN","IBDUTIL1",157,0)
 I '$D(IBDPROM) S IBDPROM="Enter a text "
"RTN","IBDUTIL1",158,0)
 I '$D(IBDMXLEN) S IBDMXLEN=40
"RTN","IBDUTIL1",159,0)
 S DIR(0)="FO^0:250"
"RTN","IBDUTIL1",160,0)
 S DIR("A")=IBDPROM
"RTN","IBDUTIL1",161,0)
 S DIR("?",1)="This response must have no more than "_IBDMXLEN_" characters"
"RTN","IBDUTIL1",162,0)
 S DIR("?")="and must not contain embedded up arrow."
"RTN","IBDUTIL1",163,0)
 S IBDQ=0
"RTN","IBDUTIL1",164,0)
 F  D  Q:+IBDQ'=0
"RTN","IBDUTIL1",165,0)
 . D ^DIR
"RTN","IBDUTIL1",166,0)
 . I $D(DUOUT)!($D(DTOUT)) S IBDQ=-1 Q
"RTN","IBDUTIL1",167,0)
 . I $L(Y)'>IBDMXLEN S IBDQ=1 Q
"RTN","IBDUTIL1",168,0)
 . W !!,"This response must have no more than "_IBDMXLEN_" characters"
"RTN","IBDUTIL1",169,0)
 . W !,"and must not contain embedded uparrow.",!
"RTN","IBDUTIL1",170,0)
 . S DIR("B")=$E(Y,1,IBDMXLEN)
"RTN","IBDUTIL1",171,0)
 Q:IBDQ<0 "^"
"RTN","IBDUTIL1",172,0)
 Q Y
"RTN","IBDUTIL1",173,0)
 ;
"RTN","IBDUTIL1",174,0)
 ;Standard Yes/No PROMPT:
"RTN","IBDUTIL1",175,0)
 ;
"RTN","IBDUTIL1",176,0)
 ;Parameters:
"RTN","IBDUTIL1",177,0)
 ;    IBDPROM  = Text to be displayed before read
"RTN","IBDUTIL1",178,0)
 ;    IBDDFLT    = YES, NO or <Null>
"RTN","IBDUTIL1",179,0)
 ;    IBDOPT     = 1 - Answer optional       0 - Answer required
"RTN","IBDUTIL1",180,0)
 ;    IBDTMOUT = Number of seconds
"RTN","IBDUTIL1",181,0)
 ;
"RTN","IBDUTIL1",182,0)
 ;Returns:
"RTN","IBDUTIL1",183,0)
 ;    <null>     = No response             <^> - Up-arrow entered
"RTN","IBDUTIL1",184,0)
 ;    <-1>       = Timeout occurred       <^^> - Two up-arrows entered
"RTN","IBDUTIL1",185,0)
 ;    <0>        = No                      <1> - Yes
"RTN","IBDUTIL1",186,0)
 ;
"RTN","IBDUTIL1",187,0)
YESNO(IBDPROM,IBDDFLT,IBDOPT,IBDTMOUT) ;EP
"RTN","IBDUTIL1",188,0)
 ;
"RTN","IBDUTIL1",189,0)
 N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","IBDUTIL1",190,0)
 ;
"RTN","IBDUTIL1",191,0)
 Q:$G(IBDPROM)="" ""
"RTN","IBDUTIL1",192,0)
 ;
"RTN","IBDUTIL1",193,0)
 S $P(DIR(0),"^",1)="Y"_$S(IBDOPT=1:"O",1:"")
"RTN","IBDUTIL1",194,0)
 S DIR("A")=IBDPROM
"RTN","IBDUTIL1",195,0)
 S:$G(IBDDFLT)'="" DIR("B")=IBDDFLT
"RTN","IBDUTIL1",196,0)
 S:+$G(IBDTMOUT)>0 DIR("T")=IBDTMOUT
"RTN","IBDUTIL1",197,0)
 D ^DIR
"RTN","IBDUTIL1",198,0)
 Q $S($G(DTOUT)=1:-1,$G(DIROUT)=1:"^^",$G(DUOUT)=1:"^",1:Y)
"RTN","IBDUTIL1",199,0)
 ;
"RTN","IBDUTIL1",200,0)
 ;
"RTN","IBDUTIL1",201,0)
 ;fill fields
"RTN","IBDUTIL1",202,0)
 ;Input:
"RTN","IBDUTIL1",203,0)
 ;IBDFILNO file number
"RTN","IBDUTIL1",204,0)
 ;IBDFIELD field number
"RTN","IBDUTIL1",205,0)
 ;IBDIEN ien string 
"RTN","IBDUTIL1",206,0)
 ;IBDNEWVL new value to file (internal format)
"RTN","IBDUTIL1",207,0)
 ;Output:
"RTN","IBDUTIL1",208,0)
 ;0^ IBDNEWVL^error if failure
"RTN","IBDUTIL1",209,0)
 ;1^ IBDNEWVL if success
"RTN","IBDUTIL1",210,0)
 ;Example:
"RTN","IBDUTIL1",211,0)
 ; W $$FILLFLDS^IBDUTIL1(357.1,.01,227,"AA SHAVKAT DIAGNOSIS")
"RTN","IBDUTIL1",212,0)
 ; 1^AA SHAVKAT DIAGNOSIS
"RTN","IBDUTIL1",213,0)
FILLFLDS(IBDFILNO,IBDFIELD,IBDIEN,IBDNEWVL) ;
"RTN","IBDUTIL1",214,0)
 I '$G(IBDFILNO) Q "0^Invalid parameter"
"RTN","IBDUTIL1",215,0)
 I '$G(IBDFIELD) Q "0^Invalid parameter"
"RTN","IBDUTIL1",216,0)
 I '$G(IBDIEN) Q "0^Invalid parameter"
"RTN","IBDUTIL1",217,0)
 I $G(IBDNEWVL)="" Q "0^Null"
"RTN","IBDUTIL1",218,0)
 N IBDIENS,IBDFDA,IBDERARY
"RTN","IBDUTIL1",219,0)
 S IBDIENS=IBDIEN_","
"RTN","IBDUTIL1",220,0)
 S IBDFDA(IBDFILNO,IBDIENS,IBDFIELD)=IBDNEWVL
"RTN","IBDUTIL1",221,0)
 D FILE^DIE("","IBDFDA","IBDERARY")
"RTN","IBDUTIL1",222,0)
 I $D(IBDERARY) Q "0^"_IBDNEWVL_"^"_IBDERARY("DIERR",1,"TEXT",1)
"RTN","IBDUTIL1",223,0)
 Q "1^"_IBDNEWVL
"RTN","IBDUTIL1",224,0)
 ;
"RTN","IBDUTIL1",225,0)
 ;IBDUTIL1
"RTN","IBDVAUT1")
0^50^B9357477^n/a
"RTN","IBDVAUT1",1,0)
IBDVAUT1 ;ALB/CS/SS - ICD-9 LOOKUP UTILITY ; 06/18/2012
"RTN","IBDVAUT1",2,0)
 ;;3.0;AUTOMATED INFO COLLECTION SYS;**63**;APR 24, 1997;Build 80
"RTN","IBDVAUT1",3,0)
 ;
"RTN","IBDVAUT1",4,0)
 ;
"RTN","IBDVAUT1",5,0)
EN1(IBDUTVB,IBDAUTNI,IBDUTSTR,IBDUTNALL) ;
"RTN","IBDVAUT1",6,0)
FIRST ;
"RTN","IBDVAUT1",7,0)
 S DIC(0)="EQMNZI",DIC("A")="Select "_IBDUTSTR_": " K @IBDUTVB S (@IBDUTVB,Y)=0
"RTN","IBDVAUT1",8,0)
REDO W !,DIC("A") W:'$D(IBDUTNALL) "ALL// " R X:DTIME G ERR:(X="^")!'$T D:X["?" QQ I X="" G:$D(IBDUTNALL) ERR S @IBDUTVB=1 G QUIT
"RTN","IBDVAUT1",9,0)
 S DIC("A")="Select another "_IBDUTSTR_": " D ^DIC G:Y'>0 FIRST D SET
"RTN","IBDVAUT1",10,0)
 F IBDAI=1:0:19 W !,DIC("A") R X:DTIME G ERR:(X="^")!'$T K Y Q:X=""  D QQ:X["?" S:$E(X)="-" IBDUTX=X,X=$E(IBDUTX,2,999) D ^DIC I Y>0 D SET G:IBDAX REDO S:'IBDAERR IBDAI=IBDAI+1
"RTN","IBDVAUT1",11,0)
 G QUIT
"RTN","IBDVAUT1",12,0)
SET ;
"RTN","IBDVAUT1",13,0)
 S IBDAX=0
"RTN","IBDVAUT1",14,0)
 I $D(IBDUTX) S J=$S(IBDAUTNI=2:+Y,1:$P(Y(0),"^")) K IBDUTX S IBDAERR=$S($D(@IBDUTVB@(J)):0,1:1) D  Q:IBDAERR  S IBDAI=IBDAI-1 K @IBDUTVB@(J) S:$O(@IBDUTVB@(0))']"" IBDAX=1 Q
"RTN","IBDVAUT1",15,0)
 . W $S('IBDAERR:"...removed from list...",1:"...not on list...can't remove")
"RTN","IBDVAUT1",16,0)
 S IBDAERR=0 I $S($D(@IBDUTVB@($P(Y(0),U))):1,$D(@IBDUTVB@(+Y)):1,1:0) W !?3,*7,"You have already selected that ",IBDUTSTR,".  Try again." S IBDAERR=1
"RTN","IBDVAUT1",17,0)
 I IBDAUTNI=1 S @IBDUTVB@($P(Y(0),U))=+Y Q
"RTN","IBDVAUT1",18,0)
 I IBDAUTNI=3 S @IBDUTVB@($P(Y(0,0),U))=+Y Q
"RTN","IBDVAUT1",19,0)
 S @IBDUTVB@(+Y)=$P(Y(0),U) Q
"RTN","IBDVAUT1",20,0)
QQ W !,"ENTER:" W:($D(@(IBDUTVB))=1&'$D(IBDUTNALL)) !?5,"- Return for all ",IBDUTSTR,"s, or" W !?5,"- A ",IBDUTSTR," and return when all ",IBDUTSTR,"s have been selected--limit 20"
"RTN","IBDVAUT1",21,0)
 W !?5,"Imprecise selections will yield an additional prompt."
"RTN","IBDVAUT1",22,0)
 W !?5,"(e.g. When a user enters 'A', all items beginning with 'A' are displayed.)"
"RTN","IBDVAUT1",23,0)
 I $O(@IBDUTVB@(0))]"" W !?5,"- An entry preceded by a minus [-] sign to remove entry from list."
"RTN","IBDVAUT1",24,0)
 I $O(@IBDUTVB@(0))]"" W !,"NOTE, you have already selected:" S IBDAJ=0 F IBDAJ1=0:0 S IBDAJ=$O(@IBDUTVB@(IBDAJ)) Q:IBDAJ=""  W !?8,$S(IBDAUTNI=1:IBDAJ,1:@IBDUTVB@(IBDAJ))
"RTN","IBDVAUT1",25,0)
 Q
"RTN","IBDVAUT1",26,0)
ERR S Y=-1
"RTN","IBDVAUT1",27,0)
QUIT S:'$D(Y) Y=1 K DIC,J,IBDAERR,IBDAI,IBDAJ,IBDAJ1,IBDAX,IBDUTNALL,IBDAUTNI,IBDUTSTR,IBDUTVB,X Q
"VER")
8.0^22.0
"^DD",357,357,0)
FIELD^^3^18
"^DD",357,357,0,"DDA")
N
"^DD",357,357,0,"DIK")
IBDX0
"^DD",357,357,0,"DIKOLD")
IBDX0
"^DD",357,357,0,"DT")
3120216
"^DD",357,357,0,"ID",.03)
W "   ",$P(^(0),U,3)
"^DD",357,357,0,"IX","AB",357,.01)

"^DD",357,357,0,"IX","AC",357,.01)

"^DD",357,357,0,"IX","ADEF",357,.13)

"^DD",357,357,0,"IX","AG",357,.01)

"^DD",357,357,0,"IX","AT",357,.01)

"^DD",357,357,0,"IX","AU",357,.01)

"^DD",357,357,0,"IX","B",357,.01)

"^DD",357,357,0,"IX","C",357,.07)

"^DD",357,357,0,"IX","D",357,.04)

"^DD",357,357,0,"NM","ENCOUNTER FORM")

"^DD",357,357,0,"PT",357.09,.04)

"^DD",357,357,0,"PT",357.1,.02)

"^DD",357,357,0,"PT",357.95,.21)

"^DD",357,357,0,"PT",359,.01)

"^DD",357,357,0,"PT",359,.02)

"^DD",357,357,0,"PT",359.3,.09)

"^DD",357,357,0,"PT",409.95,.02)

"^DD",357,357,0,"PT",409.95,.03)

"^DD",357,357,0,"PT",409.95,.04)

"^DD",357,357,0,"PT",409.95,.05)

"^DD",357,357,0,"PT",409.95,.06)

"^DD",357,357,0,"PT",409.95,.07)

"^DD",357,357,0,"PT",409.95,.08)

"^DD",357,357,0,"PT",409.95,.09)

"^DD",357,357,0,"VRPK")
IBD
"^DD",357,357,.01,0)
NAME^RFX^^0;1^S X=$$UP^XLFSTR(X) K:$L(X)>30!($L(X)<3) X
"^DD",357,357,.01,1,0)
^.1
"^DD",357,357,.01,1,1,0)
357^B
"^DD",357,357,.01,1,1,1)
S ^IBE(357,"B",$E(X,1,30),DA)=""
"^DD",357,357,.01,1,1,2)
K ^IBE(357,"B",$E(X,1,30),DA)
"^DD",357,357,.01,1,2,0)
357^AT^MUMPS
"^DD",357,357,.01,1,2,1)
Q
"^DD",357,357,.01,1,2,2)
Q
"^DD",357,357,.01,1,2,"%D",0)
^^5^5^2951017^
"^DD",357,357,.01,1,2,"%D",1,0)
This cross-reference will be used to store the text of the compiled form.
"^DD",357,357,.01,1,2,"%D",2,0)
The format will be ..."AT",form ien,row #)=text line. The index will be
"^DD",357,357,.01,1,2,"%D",3,0)
created by the 'compile' action of the encounter form utilities - it is
"^DD",357,357,.01,1,2,"%D",4,0)
optional. The option IBDF RECOMPILE ALL FORMS can be used to recompiled
"^DD",357,357,.01,1,2,"%D",5,0)
all forms.
"^DD",357,357,.01,1,2,"DT")
2931124
"^DD",357,357,.01,1,3,0)
357^AC^MUMPS
"^DD",357,357,.01,1,3,1)
Q
"^DD",357,357,.01,1,3,2)
Q
"^DD",357,357,.01,1,3,"%D",0)
^^6^6^2951017^
"^DD",357,357,.01,1,3,"%D",1,0)
This cross-reference will be used to store the special controls needed
"^DD",357,357,.01,1,3,"%D",2,0)
(bold on, bold off, etc.) to print the compiled form. The format will be
"^DD",357,357,.01,1,3,"%D",3,0)
..."AC",form ien,row #,column # )=controls. The index will be created by
"^DD",357,357,.01,1,3,"%D",4,0)
the 'compile' action of the encounter form utilities - it is optional.
"^DD",357,357,.01,1,3,"%D",5,0)
The option IBDF RECOMPILE ALL FORMS can be used to recompiled
"^DD",357,357,.01,1,3,"%D",6,0)
all forms.
"^DD",357,357,.01,1,3,"DT")
2931124
"^DD",357,357,.01,1,4,0)
357^AU^MUMPS
"^DD",357,357,.01,1,4,1)
Q
"^DD",357,357,.01,1,4,2)
Q
"^DD",357,357,.01,1,4,"%D",0)
^^5^5^2951017^^
"^DD",357,357,.01,1,4,"%D",1,0)
This cross-reference will be used to store the underlining of the compiled
"^DD",357,357,.01,1,4,"%D",2,0)
form. The format will be ...,"AU",form ien,row #)=underlining . The index
"^DD",357,357,.01,1,4,"%D",3,0)
will be created by the 'compile' action of the encounter form utilities -
"^DD",357,357,.01,1,4,"%D",4,0)
it is optional. The option IBDF RECOMPILE ALL FORMS can be used to
"^DD",357,357,.01,1,4,"%D",5,0)
recompiled all forms.
"^DD",357,357,.01,1,4,"DT")
2931124
"^DD",357,357,.01,1,5,0)
357^AG^MUMPS
"^DD",357,357,.01,1,5,1)
Q
"^DD",357,357,.01,1,5,2)
Q
"^DD",357,357,.01,1,5,"%D",0)
^^6^6^2951017^
"^DD",357,357,.01,1,5,"%D",1,0)
This cross-reference will be used to store strings of graphics characters
"^DD",357,357,.01,1,5,"%D",2,0)
(TLC,TRC, etc.) needed for the compiled form. The format will be
"^DD",357,357,.01,1,5,"%D",3,0)
..."AG",form ien,row #,column # )=graphics string . The index will be
"^DD",357,357,.01,1,5,"%D",4,0)
created by the 'compile' action of the encounter form utilities - it is
"^DD",357,357,.01,1,5,"%D",5,0)
optional. The option IBDF RECOMPILE ALL FORMS can be used to recompiled
"^DD",357,357,.01,1,5,"%D",6,0)
all forms.
"^DD",357,357,.01,1,5,"DT")
2931124
"^DD",357,357,.01,1,6,0)
357^AB^MUMPS
"^DD",357,357,.01,1,6,1)
Q
"^DD",357,357,.01,1,6,2)
Q
"^DD",357,357,.01,1,6,"%D",0)
^^5^5^2951017^
"^DD",357,357,.01,1,6,"%D",1,0)
This cross-reference will be used to store the boxes needed for the compiled
"^DD",357,357,.01,1,6,"%D",2,0)
forms. The format will be ..."AB",form ien,row #,column #, Block ien)=
"^DD",357,357,.01,1,6,"%D",3,0)
box width^box height. The index will be created by the 'compile'
"^DD",357,357,.01,1,6,"%D",4,0)
action of the encounter form utilities. The option IBDF RECOMPILE ALL
"^DD",357,357,.01,1,6,"%D",5,0)
FORMS can be used to recompiled all forms.
"^DD",357,357,.01,1,6,"DT")
2940606
"^DD",357,357,.01,3)
The form name must be 3-30 uppercase characters in length.
"^DD",357,357,.01,21,0)
^^2^2^2950717^^^
"^DD",357,357,.01,21,1,0)
 
"^DD",357,357,.01,21,2,0)
The name of the encounter form.
"^DD",357,357,.01,"DEL",1,0)
I '$G(IBDEVICE("LISTMAN")) W "...Encounter Forms can only be deleted through the",!," DELETE UNUSED FORM action in the Encounter Form Utilities!"
"^DD",357,357,.01,"DT")
2950925
"^DD",357,357,.02,0)
SIMPLEX/DUPLEX^S^0:SIMPLEX;1:DUPLEX,LONG-EDGE BINDING;2:DUPLEX,SHORT-EDGE BINDING;^0;2^Q
"^DD",357,357,.02,1,0)
^.1^^0
"^DD",357,357,.02,3)
SIMPLEX means one-sided, DUPLEX means two-sided. SHORT-EDGE BINDING is for attaching forms by the top, LONG-EDGE BINDING is for attaching forms along the side.
"^DD",357,357,.02,21,0)
^^10^10^2960917^^^^
"^DD",357,357,.02,21,1,0)
  
"^DD",357,357,.02,21,2,0)
Allows forms to be printed either one-sided or two-sided.
"^DD",357,357,.02,21,3,0)
 
"^DD",357,357,.02,21,4,0)
SIMPLEX - refers to a form that will print on one side of the paper.
"^DD",357,357,.02,21,5,0)
DUPLEX  - refers to a form that will print on both sides of the paper.
"^DD",357,357,.02,21,6,0)
  .SHORT-EDGE BINDING - prints from top to bottom on the front page and
"^DD",357,357,.02,21,7,0)
   prints from bottom to top on the back page.
"^DD",357,357,.02,21,8,0)
  .LONG-EDGE BINDING  - prints from top to bottom on the front page and
"^DD",357,357,.02,21,9,0)
   prints from top to bottom on the back page.
"^DD",357,357,.02,21,10,0)
  
"^DD",357,357,.02,"DT")
3120207
"^DD",357,357,.03,0)
BRIEF DESCRIPTION^RF^^0;3^K:$L(X)>80!($L(X)<1) X
"^DD",357,357,.03,.1)
BRIEF DESCRIPTION OF FORM'S USE & CONTENT
"^DD",357,357,.03,3)
Enter a brief description of the intended use of the form or its contents.
"^DD",357,357,.03,21,0)
^^3^3^2930607^
"^DD",357,357,.03,21,1,0)
 
"^DD",357,357,.03,21,2,0)
A brief description of the contents of the form and its intended use. This
"^DD",357,357,.03,21,3,0)
description will be displayed to the user.
"^DD",357,357,.03,"DT")
2940309
"^DD",357,357,.04,0)
TYPE OF USE^R*S^0:RESERVED FOR UTILITY;1:OUTPATIENT ENCOUNTER FORM;^0;4^Q
"^DD",357,357,.04,1,0)
^.1
"^DD",357,357,.04,1,1,0)
357^D
"^DD",357,357,.04,1,1,1)
S ^IBE(357,"D",$E(X,1,30),DA)=""
"^DD",357,357,.04,1,1,2)
K ^IBE(357,"D",$E(X,1,30),DA)
"^DD",357,357,.04,1,1,"%D",0)
^^1^1^2930825^
"^DD",357,357,.04,1,1,"%D",1,0)
Used to find forms of a particular type.
"^DD",357,357,.04,1,1,"DT")
2930825
"^DD",357,357,.04,3)
How will the form be used?
"^DD",357,357,.04,12)
Does not allow users to choose RESERVED FOR UTILITY
"^DD",357,357,.04,12.1)
S DIC("S")="I Y'=0"
"^DD",357,357,.04,21,0)
^^5^5^2960930^^^^
"^DD",357,357,.04,21,1,0)
This field will be used to categorize forms by type of use. It is possible
"^DD",357,357,.04,21,2,0)
that the form generator that is part of the Encounter Form Utilities may
"^DD",357,357,.04,21,3,0)
be used to create forms other than encounter forms.
"^DD",357,357,.04,21,4,0)
The utilities use a couple of forms (WORKCOPY, TOOL KIT), TYPE OF USE is
"^DD",357,357,.04,21,5,0)
RESERVED FOR UTILITY, that are not real forms.
"^DD",357,357,.04,23,0)
^^1^1^2960930^
"^DD",357,357,.04,23,1,0)
 
"^DD",357,357,.04,"DT")
2930825
"^DD",357,357,.05,0)
COMPILED?^S^0:NO;1:YES;F:COMPILATION FAILED;^0;5^Q
"^DD",357,357,.05,1,0)
^.1^^0
"^DD",357,357,.05,3)
Enter YES if the form is compiled, NO otherwise.
"^DD",357,357,.05,21,0)
^^2^2^2950912^^^^
"^DD",357,357,.05,21,1,0)
This indicates whether a compiled version of the form exists. The compiled
"^DD",357,357,.05,21,2,0)
version is much faster to print.
"^DD",357,357,.05,"DT")
2951003
"^DD",357,357,.06,0)
USE ICR?^S^0:NO;1:YES;^0;6^Q
"^DD",357,357,.06,.1)
Should ICR be used to automatically read hand print on this form?
"^DD",357,357,.06,3)
ICR is 'intelligent character recognition', used to automatically read hand print. Answer YES only if your scanning software has ICR and you want to use it for this form.
"^DD",357,357,.06,21,0)
^^5^5^2960910^^
"^DD",357,357,.06,21,1,0)
  
"^DD",357,357,.06,21,2,0)
If this field is set to 'YES', the computer will attempt to read hand-
"^DD",357,357,.06,21,3,0)
written print; for example, ICD diagnostic codes hand-written in an 'Other
"^DD",357,357,.06,21,4,0)
Diagnosis' encounter form block.
"^DD",357,357,.06,21,5,0)
 
"^DD",357,357,.06,"DT")
2950421
"^DD",357,357,.07,0)
TOOLKIT^RS^0:NO;1:YES;^0;7^Q
"^DD",357,357,.07,.1)
SHOULD THIS FORM BE PART OF THE TOOLKIT?
"^DD",357,357,.07,1,0)
^.1
"^DD",357,357,.07,1,1,0)
357^C
"^DD",357,357,.07,1,1,1)
S ^IBE(357,"C",$E(X,1,30),DA)=""
"^DD",357,357,.07,1,1,2)
K ^IBE(357,"C",$E(X,1,30),DA)
"^DD",357,357,.07,1,1,"%D",0)
^^1^1^2930624^
"^DD",357,357,.07,1,1,"%D",1,0)
Used to find all of the tool kit forms.
"^DD",357,357,.07,1,1,"DT")
2930624
"^DD",357,357,.07,3)
Is this form part of the toolkit?
"^DD",357,357,.07,21,0)
^^3^3^2950306^
"^DD",357,357,.07,21,1,0)
 
"^DD",357,357,.07,21,2,0)
This field, if set to YES, means that the form can not be deleted and can
"^DD",357,357,.07,21,3,0)
not be added to a clinic setup.
"^DD",357,357,.07,"DT")
2950306
"^DD",357,357,.09,0)
RIGHT MARGIN^RNJ3,0X^^0;9^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
"^DD",357,357,.09,.1)
FORM'S RIGHT MARGIN (WIDTH IN CHARACTERS)
"^DD",357,357,.09,3)

"^DD",357,357,.09,4)
W !,"How many columns (characters) wide should the form be?"
"^DD",357,357,.09,21,0)
^^2^2^2940711^^^^
"^DD",357,357,.09,21,1,0)
 
"^DD",357,357,.09,21,2,0)
The number of characters wide the form is.
"^DD",357,357,.09,"DT")
2940711
"^DD",357,357,.1,0)
PAGE LENGTH^RNJ3,0^^0;10^K:+X'=X!(X>300)!(X<1)!(X?.E1"."1N.N) X
"^DD",357,357,.1,.1)
FORM'S PAGE LENGTH (IN LINES)
"^DD",357,357,.1,3)
How many lines should each page have?
"^DD",357,357,.1,21,0)
^^2^2^2950109^^
"^DD",357,357,.1,21,1,0)
 
"^DD",357,357,.1,21,2,0)
This is the number of usable lines on the page.
"^DD",357,357,.1,"DT")
2930420
"^DD",357,357,.11,0)
NUMBER OF PAGES^RNJ2,0^^0;11^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",357,357,.11,3)
How many pages should the encounter form have?
"^DD",357,357,.11,21,0)
^^5^5^2960917^^^
"^DD",357,357,.11,21,1,0)
  
"^DD",357,357,.11,21,2,0)
The encounter form may have multiple pages.
"^DD",357,357,.11,21,3,0)
 
"^DD",357,357,.11,21,4,0)
This field is to indicate the total number of pages for the entire form.
"^DD",357,357,.11,21,5,0)
  
"^DD",357,357,.11,"DT")
2930602
"^DD",357,357,.12,0)
SCANNED/MANUAL DATA ENTRY^S^0:NO;1:YES;^0;12^Q
"^DD",357,357,.12,3)
Answer YES if it is planned that this form may at some time in the future be used with scanning.
"^DD",357,357,.12,21,0)
^^52^52^2970523^^^^
"^DD",357,357,.12,21,1,0)
CREATING SCANNABLE FORMS
"^DD",357,357,.12,21,2,0)
  
"^DD",357,357,.12,21,3,0)
Each form created for scanning should contain at a minimum the following
"^DD",357,357,.12,21,4,0)
data elements:
"^DD",357,357,.12,21,5,0)
  
"^DD",357,357,.12,21,6,0)
1) Primary provider.
"^DD",357,357,.12,21,7,0)
2) At least 1 procedure, usually the Evaluation and Management (EM) code.
"^DD",357,357,.12,21,8,0)
3) Reason for visit (diagnosis).
"^DD",357,357,.12,21,9,0)
  
"^DD",357,357,.12,21,10,0)
These steps must be taken during form design for each form type that is to
"^DD",357,357,.12,21,11,0)
be scanned:
"^DD",357,357,.12,21,12,0)
  
"^DD",357,357,.12,21,13,0)
1) The form field SCANNABLE? should be set to YES.
"^DD",357,357,.12,21,14,0)
2) The form field USE ICR? (prompted as 'Should ICR be used to auto-
"^DD",357,357,.12,21,15,0)
   matically read hand print on this form?') should be set to YES. It is
"^DD",357,357,.12,21,16,0)
   anticipated that the scanning software will include intelligent recog-
"^DD",357,357,.12,21,17,0)
   nition software (ICR) for reading hand print in future package releases.
"^DD",357,357,.12,21,18,0)
3) A form can be designed with scannable and non-scannable pages. Each page
"^DD",357,357,.12,21,19,0)
   to be scanned should have the SCANNABLE? field set to YES. For each page
"^DD",357,357,.12,21,20,0)
   selected in the PAGE INFORMATION multiple, the SCANNABLE? field is auto-
"^DD",357,357,.12,21,21,0)
   matically set to YES.
"^DD",357,357,.12,21,22,0)
4) Selection lists should use bubbles as marking areas. The selection rule
"^DD",357,357,.12,21,23,0)
   should be appropriate to the type of data. The selection rule will be
"^DD",357,357,.12,21,24,0)
   enforced by the scanning software. For example, if a diagnosis list has
"^DD",357,357,.12,21,25,0)
   the selection rule AT LEAST ONE, the form will be flagged as invalid if
"^DD",357,357,.12,21,26,0)
   no diagnosis is selected. Also, the proper data qualifier, if one 
"^DD",357,357,.12,21,27,0)
   applies, should be entered. An example illustrating the use of data
"^DD",357,357,.12,21,28,0)
   qualifiers is a selection list for diagnosis codes where there is a sub
"^DD",357,357,.12,21,29,0)
   column for selecting the primary diagnosis and another sub column for
"^DD",357,357,.12,21,30,0)
   selecting secondary diagnoses. At the bottom of the selection list an
"^DD",357,357,.12,21,31,0)
   area can be created to contain 'other' codes not found on the list.
"^DD",357,357,.12,21,32,0)
5) All hand print to be scanned must use hand print fields, except for the
"^DD",357,357,.12,21,33,0)
   'other' feature of selection lists.
"^DD",357,357,.12,21,34,0)
6) The PACKAGE INTERFACE file (357.6) contains the complete list of data
"^DD",357,357,.12,21,35,0)
   that is currently scannable.
"^DD",357,357,.12,21,36,0)
  
"^DD",357,357,.12,21,37,0)
There are several forms that are included with AICS v3.0 that are scan-
"^DD",357,357,.12,21,38,0)
nable. There are also a number of tool kit blocks included that were
"^DD",357,357,.12,21,39,0)
designed to be scannable. The best approach to creating the forms needed
"^DD",357,357,.12,21,40,0)
by your facility is to first develop a few basic forms, without clinic
"^DD",357,357,.12,21,41,0)
specific coding, suited to your site's needs. Those forms can then be
"^DD",357,357,.12,21,42,0)
placed in your tool kit and used as the basis for developing the rest of
"^DD",357,357,.12,21,43,0)
your forms.
"^DD",357,357,.12,21,44,0)
  
"^DD",357,357,.12,21,45,0)
---------------------------------------------------------------------------
"^DD",357,357,.12,21,46,0)
  
"^DD",357,357,.12,21,47,0)
If ANY page of the form is to be scanned into VISTA, enter YES.
"^DD",357,357,.12,21,48,0)
    .Individual pages of the form to be scanned are selected later
"^DD",357,357,.12,21,49,0)
     at the PAGE INFORMATION prompt.
"^DD",357,357,.12,21,50,0)
 
"^DD",357,357,.12,21,51,0)
If NONE of the form pages are to be scanned into VISTA, enter NO.
"^DD",357,357,.12,21,52,0)
 
"^DD",357,357,.12,"DT")
2970523
"^DD",357,357,.13,0)
FORM TYPE ID^NJ9,0^^0;13^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",357,357,.13,1,0)
^.1
"^DD",357,357,.13,1,1,0)
357^ADEF
"^DD",357,357,.13,1,1,1)
S ^IBE(357,"ADEF",$E(X,1,30),DA)=""
"^DD",357,357,.13,1,1,2)
K ^IBE(357,"ADEF",$E(X,1,30),DA)
"^DD",357,357,.13,1,1,"%D",0)
^^2^2^2951003^
"^DD",357,357,.13,1,1,"%D",1,0)
This cross reference can be used to find the current form definition
"^DD",357,357,.13,1,1,"%D",2,0)
in file 357.95 for this form.
"^DD",357,357,.13,1,1,"DT")
2951003
"^DD",357,357,.13,3)
Type a Number between 1 and 999999999, 0 Decimal Digits
"^DD",357,357,.13,21,0)
^^4^4^2960212^^^
"^DD",357,357,.13,21,1,0)
This is the current form definition entry associated with this form.  Each
"^DD",357,357,.13,21,2,0)
time the form is edited and printed or recompiled and printed a new 
"^DD",357,357,.13,21,3,0)
form definition is created leaving the old definition
"^DD",357,357,.13,21,4,0)
for use with existing forms (its used in scanning).
"^DD",357,357,.13,"DT")
2951003
"^DD",357,357,.14,0)
PAPER SIZE^S^1:LETTER (8 1/2 x 11);^0;14^Q
"^DD",357,357,.14,3)
What size paper should be used?
"^DD",357,357,.14,"DT")
2940614
"^DD",357,357,.15,0)
ORIENTATION^S^p:PORTRAIT;^0;15^Q
"^DD",357,357,.15,3)
How should the form be oriented?
"^DD",357,357,.15,"DT")
2940614
"^DD",357,357,.16,0)
TEXT SIZE^RS^1:133 COLUMNS x 80 LINES;2:96 COLUMNS x 72 LINES;3:80 COLUMNS x 60 LINES;^0;16^Q
"^DD",357,357,.16,3)
This choice will determine the size of the print and how much text will fit on the form.
"^DD",357,357,.16,"DT")
2950814
"^DD",357,357,.17,0)
VERSION^NJ4,1^^0;17^K:+X'=X!(X>99)!(X<0)!(X?.E1"."2N.N) X
"^DD",357,357,.17,3)
Type a Number between 0 and 99, 1 Decimal Digit
"^DD",357,357,.17,21,0)
^^3^3^2951116^^
"^DD",357,357,.17,21,1,0)
This is the version of AICS that created the form.  This was implemented
"^DD",357,357,.17,21,2,0)
in version 2.1.  All forms with a null entry can be treated as version
"^DD",357,357,.17,21,3,0)
2.0 forms.
"^DD",357,357,.17,"DT")
2951024
"^DD",357,357,2,0)
PAGE INFORMATION^357.02I^^2;0
"^DD",357,357,2,21,0)
^^3^3^2960916^^^^
"^DD",357,357,2,21,1,0)
  
"^DD",357,357,2,21,2,0)
Enter all pages that will have scannable data on them.
"^DD",357,357,2,21,3,0)
 
"^DD",357,357,3,0)
CODING SYSTEM UPDATES^357.03PA^^3;0
"^DD",357,357,3,21,0)
^.001^2^2^3120216^^^^
"^DD",357,357,3,21,1,0)
This subfile stores tracking information on encounter form blocks' updates
"^DD",357,357,3,21,2,0)
related to a specific coding system.
"^DD",357,357,3,"DT")
3120207
"^DD",357,357.02,0)
PAGE INFORMATION SUB-FIELD^^.02^2
"^DD",357,357.02,0,"DIK")
IBDX0
"^DD",357,357.02,0,"DT")
2950717
"^DD",357,357.02,0,"ID","WRITE")
N DIERR,IBDMSG D EN^DDIOL($$EXTERNAL^DILFD(357.02,.02,"",$P(^(0),U,2),"IBDMSG"),"","?0")
"^DD",357,357.02,0,"IX","B",357.02,.01)

"^DD",357,357.02,0,"NM","PAGE INFORMATION")

"^DD",357,357.02,0,"UP")
357
"^DD",357,357.02,.01,0)
PAGE INFORMATION^MNJ1,0X^^0;1^K:+X'=X!(X>8)!(X<1)!(X?.E1"."1N.N)!'$P(^IBE(357,D0,0),U,12)!(X>$P(^IBE(357,D0,0),U,11)) X
"^DD",357,357.02,.01,1,0)
^.1
"^DD",357,357.02,.01,1,1,0)
357.02^B
"^DD",357,357.02,.01,1,1,1)
S ^IBE(357,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",357,357.02,.01,1,1,2)
K ^IBE(357,DA(1),2,"B",$E(X,1,30),DA)
"^DD",357,357.02,.01,3)
Enter the pages that should be scanned.
"^DD",357,357.02,.01,21,0)
^^15^15^2960917^^^^
"^DD",357,357.02,.01,21,1,0)
Enter all pages that will have scannable data on them.
"^DD",357,357.02,.01,21,2,0)
 
"^DD",357,357.02,.01,21,3,0)
For example, if a form has a total of 2 pages, and page #1 is to
"^DD",357,357.02,.01,21,4,0)
be scanned and page #2 is not scannable; at the PAGE INFORMATION
"^DD",357,357.02,.01,21,5,0)
prompt enter 1.  When this form is printed, a small black box
"^DD",357,357.02,.01,21,6,0)
will print at the bottom of page #1 to indicate that it is a scan-
"^DD",357,357.02,.01,21,7,0)
nable page.
"^DD",357,357.02,.01,21,8,0)
  
"^DD",357,357.02,.01,21,9,0)
At the time a form is scanned, the data from each scanned page is 
"^DD",357,357.02,.01,21,10,0)
stored in the Encounter Form Tracking file (357.96). If the form has
"^DD",357,357.02,.01,21,11,0)
multiple scannable pages, and the software has not received all pages
"^DD",357,357.02,.01,21,12,0)
for the form, it will display a message to the user indicating that it
"^DD",357,357.02,.01,21,13,0)
is awaiting additional pages.  Once all pages have been scanned in, the 
"^DD",357,357.02,.01,21,14,0)
data is sent to update the PCE files.
"^DD",357,357.02,.01,21,15,0)
  
"^DD",357,357.02,.01,"DT")
2950717
"^DD",357,357.02,.02,0)
SCANNABLE?^S^0:NO, NOT SCANNABLE;1:YES, PAGE SCANNABLE;^0;2^Q
"^DD",357,357.02,.02,3)
Is this page meant to be scanned?
"^DD",357,357.02,.02,21,0)
^^2^2^2960916^
"^DD",357,357.02,.02,21,1,0)
Enter Yes if this page should be scanned or no if this page does not
"^DD",357,357.02,.02,21,2,0)
have any scannable parts.
"^DD",357,357.02,.02,"DT")
2960916
"^DD",357,357.03,0)
CODING SYSTEM UPDATES SUB-FIELD^^.04^4
"^DD",357,357.03,0,"DIK")
IBDX0
"^DD",357,357.03,0,"DT")
3120216
"^DD",357,357.03,0,"IX","B",357.03,.01)

"^DD",357,357.03,0,"NM","CODING SYSTEM UPDATES")

"^DD",357,357.03,0,"UP")
357
"^DD",357,357.03,.01,0)
CODING SYSTEM^P80.4'^ICDS(^0;1^Q
"^DD",357,357.03,.01,1,0)
^.1^^-1
"^DD",357,357.03,.01,1,1,0)
357.03^B
"^DD",357,357.03,.01,1,1,1)
S ^IBE(357,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",357,357.03,.01,1,1,2)
K ^IBE(357,DA(1),3,"B",$E(X,1,30),DA)
"^DD",357,357.03,.01,3)
Select the coding system for which the encounter form was updated.
"^DD",357,357.03,.01,21,0)
^^2^2^3120207^
"^DD",357,357.03,.01,21,1,0)
This field stores the coding system identifier for which the block of the 
"^DD",357,357.03,.01,21,2,0)
form has been updated.
"^DD",357,357.03,.01,"DT")
3120216
"^DD",357,357.03,.02,0)
UPDATE STATUS^S^C:COMPLETE;R:REVIEW;^0;2^Q
"^DD",357,357.03,.02,1,0)
^.1^^0
"^DD",357,357.03,.02,3)
Enter the coding system update status.
"^DD",357,357.03,.02,21,0)
^^4^4^3120207^
"^DD",357,357.03,.02,21,1,0)
This field will be set to 'C' if the migration to the coding system 
"^DD",357,357.03,.02,21,2,0)
specified in the field #.01 of this multiple entry has been marked as
"^DD",357,357.03,.02,21,3,0)
completed and 'R' if changes were reviewed. To change back to incomplete,
"^DD",357,357.03,.02,21,4,0)
delete its value.
"^DD",357,357.03,.02,"DT")
3120216
"^DD",357,357.03,.03,0)
DATE LAST EDITED^D^^0;3^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",357,357.03,.03,3)
Enter date and time when the block for the coding system in the form was last edited.
"^DD",357,357.03,.03,21,0)
^.001^3^3^3120216^^^
"^DD",357,357.03,.03,21,1,0)
This field stores the date and time when the block for the coding system
"^DD",357,357.03,.03,21,2,0)
in the form was last edited - including adding, modifying or deleting
"^DD",357,357.03,.03,21,3,0)
blocks with the codes.
"^DD",357,357.03,.03,"DT")
3120216
"^DD",357,357.03,.04,0)
CHANGES MADE BY^P200'^VA(200,^0;4^Q
"^DD",357,357.03,.04,3)
Select the person who last made changes to blocks for the coding system in the form.
"^DD",357,357.03,.04,21,0)
^^1^1^3120207^
"^DD",357,357.03,.04,21,1,0)
The person who last updated ICD blocks of the form.
"^DD",357,357.03,.04,"DT")
3120207
"^DD",357.3,357.3,4.01,0)
ICD CODE EDIT DATE/TIME^D^^4;1^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",357.3,357.3,4.01,3)
Enter date and time when the ICD diagnosis code was edited.
"^DD",357.3,357.3,4.01,21,0)
^.001^2^2^3120216^^
"^DD",357.3,357.3,4.01,21,1,0)
Indicates date and time when the ICD diagnosis code was edited in the 
"^DD",357.3,357.3,4.01,21,2,0)
block/encounter form.            
"^DD",357.3,357.3,4.01,"DT")
3120206
"^DD",357.3,357.3,4.02,0)
ICD CHANGES MADE BY^P200'^VA(200,^4;2^Q
"^DD",357.3,357.3,4.02,3)
Enter the person who last made ICD changes to this record.
"^DD",357.3,357.3,4.02,21,0)
^^1^1^3120207^
"^DD",357.3,357.3,4.02,21,1,0)
Indicates the user who last made ICD changes to this record.
"^DD",357.3,357.3,4.02,"DT")
3120207
"^DD",357.6,357.6,.22,0)
ICD CODING SYSTEM^P80.4'^ICDS(^0;22^Q
"^DD",357.6,357.6,.22,3)
Select ICD coding system to use with the package interface.
"^DD",357.6,357.6,.22,21,0)
^^2^2^3120206^
"^DD",357.6,357.6,.22,21,1,0)
This field is used to indicate the ICD coding system that should be used 
"^DD",357.6,357.6,.22,21,2,0)
for the package interface.
"^DD",357.6,357.6,.22,"DT")
3120206
"^DIC",357,357,0)
ENCOUNTER FORM^357I
"^DIC",357,357,0,"GL")
^IBE(357,
"^DIC",357,357,"%D",0)
^^9^9^2960911^^^^
"^DIC",357,357,"%D",1,0)
Warning: Do Not Re-Index this file.  If this file should accidentally
"^DIC",357,357,"%D",2,0)
         be re-indexed, use the option to Recompile All Forms.  This will
"^DIC",357,357,"%D",3,0)
         correct any printing problems that might occur.
"^DIC",357,357,"%D",4,0)
 
"^DIC",357,357,"%D",5,0)
This file contains the descriptive information about an encounter form.  An
"^DIC",357,357,"%D",6,0)
encounter form is composed of many encounter form blocks.  Encounter form
"^DIC",357,357,"%D",7,0)
blocks contain all the data and lists that appear on the form.  The data
"^DIC",357,357,"%D",8,0)
from this file along with the other encounter form files is used to design
"^DIC",357,357,"%D",9,0)
and print encounter forms.
"^DIC",357,"B","ENCOUNTER FORM",357)

"BLD",8600,6)
^57
**END**
**END**

