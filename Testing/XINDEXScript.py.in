#---------------------------------------------------------------------------
# Copyright 2012 The Open Source Electronic Health Record Agent
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#---------------------------------------------------------------------------
import sys,os,re,time
sys.path = ['@VISTA_SOURCE_DIR@/Python/vista'] + sys.path
from OSEHRAHelper import ConnectToMUMPS,PROMPT
from ParseCSVforPackagePrefixes import FindPackagePrefixes

VistA=ConnectToMUMPS("@LOGFILENAME@","@VISTA_CACHE_INSTANCE@","@VISTA_CACHE_NAMESPACE@")
if ('@VISTA_CACHE_USERNAME@' and '@VISTA_CACHE_PASSWORD@'):
  VistA.login('@VISTA_CACHE_USERNAME@','@VISTA_CACHE_PASSWORD@')
if VistA.type=='cache':
  try:
    VistA.ZN('@VISTA_CACHE_NAMESPACE@')
  except IndexError as no_namechange:
    pass

if '@TEST_VISTA_COVERAGE@'=='ON':
  VistA.wait(PROMPT)
  VistA.startCoverage(@TEST_VISTA_COVERAGE_SUBSET@)
VistA.wait(PROMPT)
VistA.write('K ^XUTL("XQ",$J)')
pkgPrefixLst = FindPackagePrefixes('@package_file_name@',
                                   os.path.join('@VISTA_SOURCE_DIR@',
                                                'Packages.csv'))
VistA.write('D ^XINDEX')
if VistA.type == 'cache':
  VistA.wait('No =>')
  VistA.write('No')
if '@package_file_name@' == 'Uncategorized':
  VistA.wait('Routine:')
  VistA.write('*') # select all routines
for prefix in pkgPrefixLst:
  VistA.wait('Routine:')
  VistA.write(prefix + '*')
VistA.wait('Routine:')
VistA.write('')
selectionList = [VistA.prompt,
                 'Select BUILD NAME:',
                 'Select INSTALL NAME:',
                 'Select PACKAGE NAME:',
                 "NAMESPACE:",
                 "FILE:",
                 "Print more than compiled errors and warnings?",
                 ]
while True:
  index = VistA.multiwait(selectionList)
  if index == 0:
    if '@TEST_VISTA_COVERAGE@'=='ON':
      VistA.stopCoverage(os.path.normpath("@LOGFILENAME@"))
    sys.exit(0)
  if index == len(selectionList) - 1:
    VistA.write('No')
    break
  VistA.write('')
index = VistA.multiwait(['routines?',VistA.prompt])
if index==1:
  sys.exit(0)
VistA.write('NO')
VistA.wait('DEVICE:')
VistA.write(';;9999')
if sys.platform == 'win32':
  VistA.wait('Right Margin:')
  VistA.write('')
VistA.write('')
VistA.wait('continue:',120)
VistA.write('')
VistA.wait('--- END ---',120)
if '@TEST_VISTA_COVERAGE@'=='ON':
  VistA.stopCoverage(os.path.normpath("@LOGFILENAME@"))
VistA.write('h')
