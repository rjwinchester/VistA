#---------------------------------------------------------------------------
# Copyright 2011 The Open Source Electronic Health Record Agent
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#---------------------------------------------------------------------------
message(STATUS "Gathering FileMan information...")
file(WRITE "@CMAKE_BINARY_DIR@/globals.lst" "")
if(NOT EXISTS "@DOCUMENT_VISTA_M_DIR@/.git")
  file(GLOB_RECURSE ZWR_LIST "@DOCUMENT_VISTA_M_DIR@/*.zwr")
  foreach(path ${ZWR_LIST})
    file(APPEND "@CMAKE_BINARY_DIR@/globals.lst" "${path}\n")
  endforeach()
else()
  execute_process(COMMAND "@GIT_EXECUTABLE@" ls-files "*.zwr" WORKING_DIRECTORY @DOCUMENT_VISTA_M_DIR@ OUTPUT_FILE @CMAKE_BINARY_DIR@/globals.lst RESULT_VARIABLE return )
endif()

file(STRINGS "@CMAKE_BINARY_DIR@/globals.lst" FilemanFileList)
set(masterfilelist "")
foreach(files ${FilemanFileList})
  get_filename_component(filename ${files} NAME)
  string(REGEX MATCH ^[0-9.]+ filenumber ${filename})
  if(filenumber)
    string(REGEX REPLACE ^0 "" cutnumber ${filenumber})
    set(index -1)
    LIST(FIND masterfilelist ${cutnumber} index)
    if(${index} EQUAL -1)
      LIST(APPEND masterfilelist ${cutnumber})
    endif()
  endif()
endforeach()

make_directory(@FILEMAN_SCHEMA_DIR@)
make_directory(@CALLER_GRAPH_LOG_DIR@)

foreach(file ${masterfilelist})
  file(TO_NATIVE_PATH "@FILEMAN_SCHEMA_DIR@/${file}.schema" schemafile)
  file(TO_NATIVE_PATH "@CALLER_GRAPH_LOG_DIR@/${file}.log" slogfile)
  execute_process(COMMAND "@PYTHON_EXECUTABLE@" "@SCRIPT_OUTPUT_DIR@/FilemanGlobalAttributes.py"
                    "${file}" "${schemafile}" "${slogfile}" @LOG_OUTPUT_DIR@
                    RESULT_VARIABLE retValue ERROR_VARIABLE errCode)
  if(NOT retValue EQUAL 0)
    list(APPEND erroredFiles ${file})
  endif()
endforeach()
if(erroredFiles)
  message("Errors running python script to get FileMan Schema with the following files")
  foreach(errFile ${erroredFiles})
    message(${errFile})
  endforeach()
  message(SEND_ERROR)
endif()